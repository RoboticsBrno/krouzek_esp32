
.pio/build/esp32dev/firmware.elf:     file format elf32-xtensa-le


Disassembly of section .iram0.vectors:

40080000 <_WindowOverflow4>:
40080000:	49c500        	s32e	a0, a5, -16
40080003:	49d510        	s32e	a1, a5, -12
40080006:	49e520        	s32e	a2, a5, -8
40080009:	49f530        	s32e	a3, a5, -4
4008000c:	003400        	rfwo
	...

40080040 <_WindowUnderflow4>:
40080040:	09c500        	l32e	a0, a5, -16
40080043:	09d510        	l32e	a1, a5, -12
40080046:	09e520        	l32e	a2, a5, -8
40080049:	09f530        	l32e	a3, a5, -4
4008004c:	003500        	rfwu
	...

40080050 <_xt_alloca_exc>:
40080050:	034800        	rsr.windowbase	a0
40080053:	4080f0        	rotw	-1
40080056:	03e620        	rsr.ps	a2
40080059:	343820        	extui	a3, a2, 8, 4
4008005c:	303340        	xor	a3, a3, a4
4008005f:	03d140        	rsr.excsave1	a4
40080062:	113380        	slli	a3, a3, 8
40080065:	302230        	xor	a2, a2, a3
40080068:	13e620        	wsr.ps	a2
4008006b:	002010        	rsync
4008006e:	ce74f7        	bbci	a4, 31, 40080040 <_WindowUnderflow4>
40080071:	4080f0        	rotw	-1
40080074:	4878e7        	bbci	a8, 30, 400800c0 <_WindowUnderflow8>
40080077:	4080f0        	rotw	-1
4008007a:	003086        	j	40080140 <_WindowUnderflow12>
4008007d:	000000        	ill

40080080 <_WindowOverflow8>:
40080080:	49c900        	s32e	a0, a9, -16
40080083:	09d100        	l32e	a0, a1, -12
40080086:	49d910        	s32e	a1, a9, -12
40080089:	49e920        	s32e	a2, a9, -8
4008008c:	49f930        	s32e	a3, a9, -4
4008008f:	498040        	s32e	a4, a0, -32
40080092:	499050        	s32e	a5, a0, -28
40080095:	49a060        	s32e	a6, a0, -24
40080098:	49b070        	s32e	a7, a0, -20
4008009b:	003400        	rfwo
	...

400800c0 <_WindowUnderflow8>:
400800c0:	09c900        	l32e	a0, a9, -16
400800c3:	09d910        	l32e	a1, a9, -12
400800c6:	09e920        	l32e	a2, a9, -8
400800c9:	09d170        	l32e	a7, a1, -12
400800cc:	09f930        	l32e	a3, a9, -4
400800cf:	098740        	l32e	a4, a7, -32
400800d2:	099750        	l32e	a5, a7, -28
400800d5:	09a760        	l32e	a6, a7, -24
400800d8:	09b770        	l32e	a7, a7, -20
400800db:	003500        	rfwu
	...

40080100 <_WindowOverflow12>:
40080100:	49cd00        	s32e	a0, a13, -16
40080103:	09d100        	l32e	a0, a1, -12
40080106:	49dd10        	s32e	a1, a13, -12
40080109:	49ed20        	s32e	a2, a13, -8
4008010c:	49fd30        	s32e	a3, a13, -4
4008010f:	494040        	s32e	a4, a0, -48
40080112:	495050        	s32e	a5, a0, -44
40080115:	496060        	s32e	a6, a0, -40
40080118:	497070        	s32e	a7, a0, -36
4008011b:	498080        	s32e	a8, a0, -32
4008011e:	499090        	s32e	a9, a0, -28
40080121:	49a0a0        	s32e	a10, a0, -24
40080124:	49b0b0        	s32e	a11, a0, -20
40080127:	003400        	rfwo
	...

40080140 <_WindowUnderflow12>:
40080140:	09cd00        	l32e	a0, a13, -16
40080143:	09dd10        	l32e	a1, a13, -12
40080146:	09ed20        	l32e	a2, a13, -8
40080149:	09d1b0        	l32e	a11, a1, -12
4008014c:	09fd30        	l32e	a3, a13, -4
4008014f:	094b40        	l32e	a4, a11, -48
40080152:	095b50        	l32e	a5, a11, -44
40080155:	096b60        	l32e	a6, a11, -40
40080158:	097b70        	l32e	a7, a11, -36
4008015b:	098b80        	l32e	a8, a11, -32
4008015e:	099b90        	l32e	a9, a11, -28
40080161:	09aba0        	l32e	a10, a11, -24
40080164:	09bbb0        	l32e	a11, a11, -20
40080167:	003500        	rfwu
	...

40080180 <_Level2Vector>:
40080180:	13d200        	wsr.excsave2	a0
40080183:	03f985        	call0	4008411c <_xt_medint2>
	...

400801c0 <_Level3Vector>:
400801c0:	13d300        	wsr.excsave3	a0
400801c3:	040085        	call0	400841cc <_xt_medint3>
	...

40080200 <_Level4Vector>:
40080200:	13d400        	wsr.excsave4	a0
40080203:	017905        	call0	40081994 <xt_highint4>
	...

40080240 <_Level5Vector>:
40080240:	13d500        	wsr.excsave5	a0
40080243:	06e885        	call0	400870cc <xt_highint5>
	...

40080280 <_DebugExceptionVector>:
40080280:	13d600        	wsr.excsave6	a0
40080283:	06e285        	call0	400870ac <xt_debugexception>
	...

400802c0 <_NMIExceptionVector>:
400802c0:	13d700        	wsr.excsave7	a0
400802c3:	06e105        	call0	400870d4 <_xt_nmi>
	...

40080300 <_KernelExceptionVector>:
40080300:	13d100        	wsr.excsave1	a0
40080303:	03aec5        	call0	40083df0 <_xt_kernel_exc>
	...

40080340 <_UserExceptionVector>:
40080340:	13d100        	wsr.excsave1	a0
40080343:	03ac85        	call0	40083e0c <_xt_user_exc>
	...

400803c0 <_DoubleExceptionVector>:
400803c0:	004140        	break	1, 4
400803c3:	02a002        	movi	a0, 2
400803c6:	13e800        	wsr.exccause	a0
400803c9:	039b85        	call0	40083d84 <_xt_panic>
400803cc:	003200        	rfde
	...

Disassembly of section .iram0.text:

40080400 <esp_random-0xa2c>:
40080400:	035144        	lsi	f4, a1, 12
40080403:	004060        	break	0, 6
40080406:	3ffc      	bnez.n	a15, 4008043d <_init_end+0x3d>
40080408:	002b67        	blt	a11, a6, 4008040c <_init_end+0xc>
4008040b:	e0b000        	subx4	a11, a0, a0
4008040e:	3ffa      	add.n	a3, a15, a15
40080410:	2e4c      	movi.n	a14, 66
40080412:	183f40        	lsxp	f3, a15, a4
40080415:	3f4016        	beqz	a0, 4008080d <_init_end+0x40d>
40080418:	401624        	lsi	f2, a6, 0x100
4008041b:	3f          	.byte 0x3f
4008041c:	1628      	l32i.n	a2, a6, 4
4008041e:	303f40        	xor	a3, a15, a4
40080421:	3f4017        	ball	a0, a1, 40080464 <_init_end+0x64>
40080424:	401590        	lsi	f9, a5, 0x100
40080427:	3f          	.byte 0x3f
40080428:	fbf054        	lsi	f5, a0, 0x3ec
4008042b:	3f          	.byte 0x3f
4008042c:	fbec10        	f64subc	a1, a12, 3, 0
4008042f:	3f          	.byte 0x3f
40080430:	001200        	movsp	a0, a2
40080433:	165c00        	lsi	f0, a12, 88
40080436:	e83f40        	lsi	f4, a15, 0x3a0
40080439:	400d56        	bnez	a13, 4008083d <_init_end+0x43d>
4008043c:	401664        	lsi	f6, a6, 0x100
4008043f:	3f          	.byte 0x3f
40080440:	90cc      	bnez.n	a0, 4008044d <_init_end+0x4d>
40080442:	5c4000        	lsi	f0, a0, 0x170
40080445:	fc0b      	addi.n	a15, a12, -1
40080447:	3f          	.byte 0x3f
40080448:	080000        	lsx	f0, a0, a0
4008044b:	006c40        	rsil	a4, 12
4008044e:	3ffc      	bnez.n	a15, 40080485 <_init_end+0x85>
40080450:	689c      	beqz.n	a8, 4008046a <_init_end+0x6a>
40080452:	d04000        	subx2	a4, a0, a0
40080455:	8f          	.byte 0x8f
40080456:	284000        	lsi	f0, a0, 160
40080459:	007d      	mov.n	a7, a0
4008045b:	902840        	addx2	a2, a8, a4
4008045e:	204000        	or	a4, a0, a0
40080461:	3ffc16        	beqz	a12, 40080864 <_init_end+0x464>
40080464:	fc0000        	lsi	f0, a0, 0x3f0
40080467:	3f          	.byte 0x3f
40080468:	000200        	lsi	f0, a2, 0
4008046b:	020050        	andb	b0, b0, b5
4008046e:	0c5000        	lsi	f0, a0, 48
40080471:	3ff5a0        	f64cmph	a15, a5, a10, 3
40080474:	401674        	lsi	f7, a6, 0x100
40080477:	3f          	.byte 0x3f
40080478:	401680        	lsi	f8, a6, 0x100
4008047b:	3f          	.byte 0x3f
4008047c:	16dc      	bnez.n	a6, 40080491 <_init_end+0x91>
4008047e:	303f40        	xor	a3, a15, a4
40080481:	3ff000        	f64cmph	a15, a0, a0, 3
40080484:	f00034        	lsi	f3, a0, 0x3c0
40080487:	3f          	.byte 0x3f
40080488:	002c      	movi.n	a0, 32
4008048a:	743ff0        	extui	a3, a15, 15, 8
4008048d:	0f          	.byte 0xf
4008048e:	4008      	l32i.n	a0, a0, 16
40080490:	0081d4        	lsi	f13, a1, 0
40080493:	c44c40        	extui	a4, a4, 12, 13
40080496:	544000        	extui	a4, a0, 0, 6
40080499:	007d      	mov.n	a7, a0
4008049b:	9a1440        	trunc.s	a1, f4, 4
4008049e:	844000        	extui	a4, a0, 0, 9
400804a1:	009a      	add.n	a0, a0, a9
400804a3:	853440        	extui	a3, a4, 20, 9
400804a6:	e04000        	subx4	a4, a0, a0
400804a9:	3ffe01        	l32r	a0, 400504a4 <r_lm_init+0x1770>
400804ac:	0f4240        	f64cmph	a4, a2, a4, 0
400804af:	40f000        	nsau	a0, a0
400804b2:	fe          	.byte 0xfe
400804b3:	3f          	.byte 0x3f
400804b4:	4017f0        	lsi	f15, a7, 0x100
400804b7:	3f          	.byte 0x3f
400804b8:	188c      	beqz.n	a8, 400804bd <_init_end+0xbd>
400804ba:	0c3f40        	lsi	f4, a15, 48
400804bd:	4018      	l32i.n	a1, a0, 16
400804bf:	3f          	.byte 0x3f
400804c0:	ebe8      	l32i.n	a14, a11, 56
400804c2:	3ffb      	addi.n	a3, a15, 15
400804c4:	0078      	l32i.n	a7, a0, 0
400804c6:	3ffc      	bnez.n	a15, 400804fd <_init_end+0xfd>
400804c8:	00dc      	bnez.n	a0, 400804dc <_init_end+0xdc>
400804ca:	e03ff0        	subx4	a3, a15, a15
400804cd:	3ff000        	f64cmph	a15, a0, a0, 3
400804d0:	fbebf0        	f64subc	a15, a11, 3, 0
400804d3:	3f          	.byte 0x3f
400804d4:	008c      	beqz.n	a0, 400804d8 <_init_end+0xd8>
400804d6:	3ffc      	bnez.n	a15, 4008050d <_init_end+0x10d>
400804d8:	681c      	movi.n	a8, 22
400804da:	bc4000        	lsi	f0, a0, 0x2f0
400804dd:	4018      	l32i.n	a1, a0, 16
400804df:	3f          	.byte 0x3f
400804e0:	197c      	movi.n	a9, -15
400804e2:	c83f40        	lsi	f4, a15, 0x320
400804e5:	4018      	l32i.n	a1, a0, 16
400804e7:	3f          	.byte 0x3f
400804e8:	fc0080        	lsi	f8, a0, 0x3f0
400804eb:	3f          	.byte 0x3f
400804ec:	fc0084        	lsi	f8, a0, 0x3f0
400804ef:	3f          	.byte 0x3f
400804f0:	0098      	l32i.n	a9, a0, 0
400804f2:	3ffc      	bnez.n	a15, 40080529 <_init_end+0x129>
400804f4:	f60000        	lsi	f0, a0, 0x3d8
400804f7:	3f          	.byte 0x3f
400804f8:	d83aa1        	l32r	a10, 400765e0 <__udivmoddi4+0x119ec>
400804fb:	00a850        	any8	b5, b8:b9:b10:b11:b12:b13:b14:b15
400804fe:	3ffc      	bnez.n	a15, 40080535 <_init_end+0x135>
40080500:	ebf8      	l32i.n	a15, a11, 56
40080502:	3ffb      	addi.n	a3, a15, 15
40080504:	00ac      	beqz.n	a0, 40080528 <_init_end+0x128>
40080506:	3ffc      	bnez.n	a15, 4008053d <_init_end+0x13d>
40080508:	402db4        	lsi	f11, a13, 0x100
4008050b:	3f          	.byte 0x3f
4008050c:	2e5c      	movi.n	a14, 82
4008050e:	bc3f40        	lsi	f4, a15, 0x2f0
40080511:	402d      	lsi	f2, a0, 0
40080513:	3f          	.byte 0x3f
40080514:	000000        	ill
40080517:	00a400        	any8	b0, b0:b1:b2:b3:b4:b5:b6:b7
4008051a:	3ffc      	bnez.n	a15, 40080551 <_init_end+0x151>
4008051c:	ff          	.byte 0xff
4008051d:	ff          	.byte 0xff
4008051e:	ff          	.byte 0xff
4008051f:	ff          	.byte 0xff
40080520:	ff          	.byte 0xff
40080521:	ff          	.byte 0xff
40080522:	ff          	.byte 0xff
40080523:	7f          	.byte 0x7f
40080524:	fc00c0        	lsi	f12, a0, 0x3f0
40080527:	3f          	.byte 0x3f
40080528:	00b8      	l32i.n	a11, a0, 0
4008052a:	3ffc      	bnez.n	a15, 40080561 <_init_end+0x161>
4008052c:	fbec00        	f64subc	a0, a12, 3, 0
4008052f:	3f          	.byte 0x3f
40080530:	fc00b0        	lsi	f11, a0, 0x3f0
40080533:	3f          	.byte 0x3f
40080534:	fc12b0        	lsi	f11, a2, 0x3f0
40080537:	3f          	.byte 0x3f
40080538:	12a8      	l32i.n	a10, a2, 4
4008053a:	3ffc      	bnez.n	a15, 40080571 <_init_end+0x171>
4008053c:	00e8      	l32i.n	a14, a0, 0
4008053e:	e43ff0        	extui	a3, a15, 15, 15
40080541:	3ff000        	f64cmph	a15, a0, a0, 3
40080544:	53fc      	bnez.n	a3, 4008057d <_init_end+0x17d>
40080546:	dc3ff6        	bgeui	a15, 3, 40080526 <_init_end+0x126>
40080549:	bf          	.byte 0xbf
4008054a:	244000        	extui	a4, a0, 0, 3
4008054d:	3f4050        	f64cmph	a4, a0, a5, 3
40080550:	402f00        	ssa8l	a15
40080553:	3f          	.byte 0x3f
40080554:	2e6c      	movi.n	a14, -30
40080556:	783f40        	lsi	f4, a15, 0x1e0
40080559:	3ff400        	f64cmph	a15, a4, a0, 3
4008055c:	ff          	.byte 0xff
4008055d:	ff          	.byte 0xff
4008055e:	ff          	.byte 0xff
4008055f:	25fd      	lsi	f15, a5, 20
40080561:	000400        	lsi	f0, a4, 0
40080564:	000000        	ill
40080567:	dbb810        	movt.s	f11, f8, b1
4008056a:	3ffb      	addi.n	a3, a15, 15
4008056c:	f5f000        	extui	a15, a0, 16, 16
4008056f:	3f          	.byte 0x3f
40080570:	001c      	movi.n	a0, 16
40080572:	003ff4        	lsi	f15, a15, 0
40080575:	0fff00        	f64cmph	a15, a15, a0, 0
40080578:	001c      	movi.n	a0, 16
4008057a:	1c3ff5        	call12	4009c978 <_iram_end+0xee24>
4008057d:	3ff6e0        	f64cmph	a15, a6, a14, 3
40080580:	f44130        	extui	a4, a3, 1, 16
40080583:	3f          	.byte 0x3f
40080584:	f44134        	lsi	f3, a1, 0x3d0
40080587:	3f          	.byte 0x3f
40080588:	4138      	l32i.n	a3, a1, 16
4008058a:	3c3ff4        	lsi	f15, a15, 240
4008058d:	3ff441        	l32r	a4, 40050560 <r_lm_init+0x182c>
40080590:	f44140        	extui	a4, a4, 1, 16
40080593:	3f          	.byte 0x3f
40080594:	f44144        	lsi	f4, a1, 0x3d0
40080597:	3f          	.byte 0x3f
40080598:	f000d0        	subx8	a0, a0, a13
4008059b:	3f          	.byte 0x3f
4008059c:	f000c4        	lsi	f12, a0, 0x3c0
4008059f:	3f          	.byte 0x3f
400805a0:	800027        	bnone	a0, a2, 40080524 <_init_end+0x124>
400805a3:	003800        	lsi	f0, a8, 0
400805a6:	b83ff0        	lsi	f15, a15, 0x2e0
400805a9:	009a      	add.n	a0, a0, a9
400805ab:	00c840        	lsi	f4, a8, 0
400805ae:	3ffc      	bnez.n	a15, 400805e5 <_init_end+0x1e5>
400805b0:	00bea0        	all8	b10, b8:b9:b10:b11:b12:b13:b14:b15
400805b3:	becc40        	f64iter	a12, a12, a4, 3, 0
400805b6:	e44000        	extui	a4, a0, 0, 15
400805b9:	be          	.byte 0xbe
400805ba:	004000        	break	0, 0
400805bd:	0018      	l32i.n	a1, a0, 0
400805bf:	03fc00        	lsi	f0, a12, 12
400805c2:	003ff0        	lsi	f15, a15, 0
400805c5:	7e          	.byte 0x7e
400805c6:	240000        	extui	a0, a0, 0, 3
400805c9:	3ff004        	lsi	f0, a0, 252
400805cc:	fbec64        	lsi	f6, a12, 0x3ec
400805cf:	3f          	.byte 0x3f
400805d0:	08ec      	bnez.n	a8, 400805f4 <_init_end+0x1f4>
400805d2:	3ffc      	bnez.n	a15, 40080609 <_init_end+0x209>
400805d4:	7028      	l32i.n	a2, a0, 28
400805d6:	303ff4        	lsi	f15, a15, 192
400805d9:	3ff470        	f64cmph	a15, a4, a7, 3
400805dc:	ff          	.byte 0xff
400805dd:	ff          	.byte 0xff
400805de:	ff          	.byte 0xff
400805df:	ef          	.byte 0xef
400805e0:	f47024        	lsi	f2, a0, 0x3d0
400805e3:	3f          	.byte 0x3f
400805e4:	08ed      	mov.n	a14, a8
400805e6:	3ffc      	bnez.n	a15, 4008061d <_init_end+0x21d>
400805e8:	000001        	l32r	a0, 400405e8 <r_ld_sched_sniff_add+0xc24>
400805eb:	702010        	lsi	f1, a0, 0x1c0
400805ee:	f83ff4        	lsi	f15, a15, 0x3e0
400805f1:	fc08      	l32i.n	a0, a12, 60
400805f3:	3f          	.byte 0x3f
400805f4:	fc08f0        	lsi	f15, a8, 0x3f0
400805f7:	3f          	.byte 0x3f
400805f8:	3248      	l32i.n	a4, a2, 12
400805fa:	443f40        	extui	a3, a4, 15, 5
400805fd:	3f4034        	lsi	f3, a0, 252
40080600:	403284        	lsi	f8, a2, 0x100
40080603:	3f          	.byte 0x3f
40080604:	702c      	movi.n	a0, 39
40080606:	003ff4        	lsi	f15, a15, 0
40080609:	fc09      	s32i.n	a0, a12, 60
4008060b:	3f          	.byte 0x3f
4008060c:	fc08f4        	lsi	f15, a8, 0x3f0
4008060f:	3f          	.byte 0x3f
40080610:	000000        	ill
40080613:	32f800        	orbc	b15, b8, b0
40080616:	6c3f40        	lsi	f4, a15, 0x1b0
40080619:	3f4034        	lsi	f3, a0, 252
4008061c:	fe          	.byte 0xfe
4008061d:	ff          	.byte 0xff
4008061e:	ff          	.byte 0xff
4008061f:	ef          	.byte 0xef
40080620:	fc0904        	lsi	f0, a9, 0x3f0
40080623:	3f          	.byte 0x3f
40080624:	cff8      	l32i.n	a15, a15, 48
40080626:	324000        	orbc	b4, b0, b0
40080629:	000000        	ill
4008062c:	0908      	l32i.n	a0, a9, 0
4008062e:	3ffc      	bnez.n	a15, 40080665 <_init_end+0x265>
40080630:	ee          	.byte 0xee
40080631:	eded      	lsi	f14, a13, 52
40080633:	54ed      	lsi	f14, a4, 16
40080635:	3f4035        	call12	400bfa38 <_iram_end+0x31ee4>
40080638:	35ec      	bnez.n	a5, 4008065f <_init_end+0x25f>
4008063a:	e03f40        	subx4	a3, a15, a4
4008063d:	3f4034        	lsi	f3, a0, 252
40080640:	403570        	lsi	f7, a5, 0x100
40080643:	3f          	.byte 0x3f
40080644:	4035a4        	lsi	f10, a5, 0x100
40080647:	3f          	.byte 0x3f
40080648:	35dc      	bnez.n	a5, 4008065f <_init_end+0x25f>
4008064a:	103f40        	and	a3, a15, a4
4008064d:	3f4036        	entry	a0, 0x1fa0
40080650:	369c      	beqz.n	a6, 40080667 <_init_end+0x267>
40080652:	2c3f40        	lsi	f4, a15, 176
40080655:	3f4036        	entry	a0, 0x1fa0
40080658:	0998      	l32i.n	a9, a9, 0
4008065a:	3ffc      	bnez.n	a15, 40080691 <_init_end+0x291>
4008065c:	fc0990        	lsi	f9, a9, 0x3f0
4008065f:	3f          	.byte 0x3f
40080660:	098c      	beqz.n	a9, 40080664 <_init_end+0x264>
40080662:	3ffc      	bnez.n	a15, 40080699 <_init_end+0x299>
40080664:	0988      	l32i.n	a8, a9, 0
40080666:	3ffc      	bnez.n	a15, 4008069d <_init_end+0x29d>
40080668:	fc0994        	lsi	f9, a9, 0x3f0
4008066b:	3f          	.byte 0x3f
4008066c:	ff8000        	f64cmph	a8, a0, a0, 15
4008066f:	ff          	.byte 0xff
40080670:	36fc      	bnez.n	a6, 400806a7 <_init_end+0x2a7>
40080672:	903f40        	addx2	a3, a15, a4
40080675:	3f4037        	ball	a0, a3, 400806b8 <_init_end+0x2b8>
40080678:	403720        	lsi	f2, a7, 0x100
4008067b:	3f          	.byte 0x3f
4008067c:	000000        	ill
4008067f:	80b880        	add	a11, a8, a8
40080682:	483ff4        	mula.da.ll.ldinc	m3, a15, m0, a15
40080685:	fc0a      	add.n	a15, a12, a0
40080687:	3f          	.byte 0x3f
40080688:	fc0a54        	lsi	f5, a10, 0x3f0
4008068b:	3f          	.byte 0x3f
4008068c:	0a4c      	movi.n	a10, 64
4008068e:	3ffc      	bnez.n	a15, 400806c5 <_init_end+0x2c5>
40080690:	fc0a50        	lsi	f5, a10, 0x3f0
40080693:	3f          	.byte 0x3f
40080694:	0b4c      	movi.n	a11, 64
40080696:	3ffc      	bnez.n	a15, 400806cd <_init_end+0x2cd>
40080698:	fbed70        	f64subc	a7, a13, 3, 0
4008069b:	3f          	.byte 0x3f
4008069c:	ed6c      	movi.n	a13, -18
4008069e:	3ffb      	addi.n	a3, a15, 15
400806a0:	001274        	lsi	f7, a2, 0
400806a3:	0a4440        	add.s	f4, f4, f4
400806a6:	3ffc      	bnez.n	a15, 400806dd <_init_end+0x2dd>
400806a8:	fc0b54        	lsi	f5, a11, 0x3f0
400806ab:	3f          	.byte 0x3f
400806ac:	000000        	ill
400806af:	002360        	lsi	f6, a3, 0
400806b2:	000004        	lsi	f0, a0, 0
400806b5:	c00000        	sub	a0, a0, a0
400806b8:	e9e8      	l32i.n	a14, a9, 56
400806ba:	3ffb      	addi.n	a3, a15, 15
400806bc:	083ea4        	lsi	f10, a14, 32
400806bf:	014040        	slli	a4, a0, 28
400806c2:	183f40        	lsxp	f3, a15, a4
400806c5:	0e          	.byte 0xe
400806c6:	3ffc      	bnez.n	a15, 400806fd <_init_end+0x2fd>
400806c8:	fbe7e0        	f64subc	a14, a7, 3, 0
400806cb:	3f          	.byte 0x3f
400806cc:	400120        	lsi	f2, a1, 0x100
400806cf:	3f          	.byte 0x3f
400806d0:	040021        	l32r	a2, 400416d0 <r_ld_sched_sniff_add+0x1d0c>
400806d3:	37ff00        	lsi	f0, a15, 220
400806d6:	e80006        	j	4007a6da <__udivmoddi4+0x15ae6>
400806d9:	3ffbe7        	bbsi	a11, 30, 4008071c <_init_end+0x31c>
400806dc:	41b8      	l32i.n	a11, a1, 16
400806de:	4008      	l32i.n	a0, a0, 16
400806e0:	040022        	l8ui	a2, a0, 4
400806e3:	000000        	ill
400806e6:	0038      	l32i.n	a3, a0, 0
400806e8:	4268      	l32i.n	a6, a2, 16
400806ea:	4008      	l32i.n	a0, a0, 16
400806ec:	c08800        	sub	a8, a8, a0
400806ef:	1028      	l32i.n	a2, a0, 4
400806f1:	3ffc16        	beqz	a12, 40080af4 <_init_end+0x6f4>
400806f4:	020000        	andb	b0, b0, b0
400806f7:	fffbc0        	f64cmph	a15, a11, a12, 15
400806fa:	5c0001        	l32r	a0, 400576fc <strtoul+0xdd0>
400806fd:	4f          	.byte 0x4f
400806fe:	dc3f40        	lsi	f4, a15, 0x370
40080701:	3f4051        	l32r	a5, 40050404 <r_lm_init+0x16d0>
40080704:	404f84        	lsi	f8, a15, 0x100
40080707:	3f          	.byte 0x3f
40080708:	fffc      	bnez.n	a15, 4008074b <_init_end+0x34b>
4008070a:	f0c001        	l32r	a0, 4007ca0c <__udivmoddi4+0x17e18>
4008070d:	4f          	.byte 0x4f
4008070e:	143f40        	extui	a3, a4, 15, 2
40080711:	3f4050        	f64cmph	a4, a0, a5, 3
40080714:	5028      	l32i.n	a2, a0, 20
40080716:	fc3f40        	lsi	f4, a15, 0x3f0
40080719:	ff          	.byte 0xff
4008071a:	8009      	s32i.n	a0, a0, 32
4008071c:	400000        	ssr	a0
4008071f:	ed9000        	lsi	f0, a0, 0x3b4
40080722:	3ffb      	addi.n	a3, a15, 15
40080724:	001400        	movsp	a0, a4
40080727:	100000        	and	a0, a0, a0
4008072a:	000000        	ill
4008072d:	bff600        	f64cmph	a15, a6, a0, 11
40080730:	5038      	l32i.n	a3, a0, 20
40080732:	cc3f40        	lsi	f4, a15, 0x330
40080735:	3f4051        	l32r	a5, 40050438 <r_lm_init+0x1704>
40080738:	5078      	l32i.n	a7, a0, 20
4008073a:	b83f40        	lsi	f4, a15, 0x2e0
4008073d:	3f4051        	l32r	a5, 40050440 <r_lm_init+0x170c>
40080740:	4050b4        	lsi	f11, a0, 0x100
40080743:	3f          	.byte 0x3f
40080744:	c2c8      	l32i.n	a12, a2, 48
40080746:	ac4000        	lsi	f0, a0, 0x2b0
40080749:	3ff480        	f64cmph	a15, a4, a8, 3
4008074c:	ff          	.byte 0xff
4008074d:	ff          	.byte 0xff
4008074e:	0f          	.byte 0xf
4008074f:	00fc      	bnez.n	a0, 40080783 <_init_end+0x383>
40080751:	021000        	andb	b1, b0, b0
40080754:	f48000        	extui	a8, a0, 0, 16
40080757:	3f          	.byte 0x3f
40080758:	ff          	.byte 0xff
40080759:	ff          	.byte 0xff
4008075a:	ff          	.byte 0xff
4008075b:	000003        	lsi	f0, a0, 0
4008075e:	0c8400        	lsi	f0, a4, 48
40080761:	001020        	movsp	a2, a0
40080764:	00d280        	lsi	f8, a2, 0
40080767:	1d4840        	lsi	f4, a8, 116
4008076a:	e04000        	subx4	a4, a0, a0
4008076d:	3f4077        	ball	a0, a7, 400807b0 <_init_end+0x3b0>
40080770:	fbee64        	lsi	f6, a14, 0x3ec
40080773:	3f          	.byte 0x3f
40080774:	784c      	movi.n	a8, 71
40080776:	e43f40        	extui	a3, a4, 15, 15
40080779:	3f4077        	ball	a0, a7, 400807bc <_init_end+0x3bc>
4008077c:	4046e0        	lsi	f14, a6, 0x100
4008077f:	3f          	.byte 0x3f
40080780:	407864        	lsi	f6, a8, 0x100
40080783:	3f          	.byte 0x3f
40080784:	1bde83        	lsi	f8, a14, 108
40080787:	7ae843        	lsi	f4, a8, 0x1e8
4008078a:	0c3f40        	lsi	f4, a15, 48
4008078d:	407b      	addi.n	a4, a0, 7
4008078f:	3f          	.byte 0x3f
40080790:	79d8      	l32i.n	a13, a9, 28
40080792:	003f40        	lsi	f4, a15, 0
40080795:	3f4000        	f64cmph	a4, a0, a0, 3
40080798:	0d0000        	lsi	f0, a0, 52
4008079b:	0fb040        	f64cmph	a11, a0, a4, 0
4008079e:	3ffc      	bnez.n	a15, 400807d5 <_init_end+0x3d5>
400807a0:	f10000        	lsi	f0, a0, 0x3c4
400807a3:	3f          	.byte 0x3f
400807a4:	f12000        	lsi	f0, a0, 0x3c4
400807a7:	3f          	.byte 0x3f
400807a8:	ff0000        	f64cmph	a0, a0, a0, 15
400807ab:	ff          	.byte 0xff
400807ac:	ff          	.byte 0xff
400807ad:	ff          	.byte 0xff
400807ae:	8c0000        	lsi	f0, a0, 0x230
400807b1:	0f          	.byte 0xf
400807b2:	3ffc      	bnez.n	a15, 400807e9 <_init_end+0x3e9>
400807b4:	010000        	slli	a0, a0, 32
400807b7:	000000        	ill
400807ba:	ffc007        	bnall	a0, a0, 400807bd <_init_end+0x3bd>
400807bd:	1f          	.byte 0x1f
400807be:	000013        	lsi	f1, a0, 0
400807c1:	b00000        	addx8	a0, a0, a0
400807c4:	ff          	.byte 0xff
400807c5:	1f          	.byte 0x1f
400807c6:	700000        	lsi	f0, a0, 0x1c0
400807c9:	3ffae2        	s32ri	a14, a10, 252
400807cc:	000804        	lsi	f0, a8, 0
400807cf:	7c6400        	lsi	f0, a4, 0x1f0
400807d2:	d03f40        	subx2	a3, a15, a4
400807d5:	407d      	lsi	f7, a0, 0
400807d7:	3f          	.byte 0x3f
400807d8:	407cc0        	wer	a12, a12
400807db:	3f          	.byte 0x3f
400807dc:	fc10b0        	lsi	f11, a0, 0x3f0
400807df:	3f          	.byte 0x3f
400807e0:	0fac      	beqz.n	a15, 40080804 <_init_end+0x404>
400807e2:	3ffc      	bnez.n	a15, 40080819 <_init_end+0x419>
400807e4:	beb8      	l32i.n	a11, a14, 44
400807e6:	004000        	break	0, 0
400807e9:	0008      	l32i.n	a0, a0, 0
400807eb:	7d3000        	lsi	f0, a0, 0x1f4
400807ee:	bc3f40        	lsi	f4, a15, 0x2f0
400807f1:	407d      	lsi	f7, a0, 0
400807f3:	3f          	.byte 0x3f
400807f4:	7d4c      	movi.n	a13, 71
400807f6:	003f40        	lsi	f4, a15, 0
400807f9:	400000        	ssr	a0
400807fc:	f00040        	subx8	a0, a0, a4
400807ff:	3f          	.byte 0x3f
40080800:	f00044        	lsi	f4, a0, 0x3c0
40080803:	3f          	.byte 0x3f
40080804:	0058      	l32i.n	a5, a0, 0
40080806:	5c3ff0        	lsi	f15, a15, 0x170
40080809:	3ff000        	f64cmph	a15, a0, a0, 3
4008080c:	10bc      	beqz.n	a0, 40080841 <_init_end+0x441>
4008080e:	3ffc      	bnez.n	a15, 40080845 <_init_end+0x445>
40080810:	10bd      	lsi	f11, a0, 0
40080812:	3ffc      	bnez.n	a15, 40080849 <_init_end+0x449>
40080814:	fc10c4        	lsi	f12, a0, 0x3f0
40080817:	3f          	.byte 0x3f
40080818:	f003f0        	subx8	a0, a3, a15
4008081b:	3f          	.byte 0x3f
4008081c:	0418      	l32i.n	a1, a4, 0
4008081e:	7c3ff0        	lsi	f15, a15, 0x1f0
40080821:	ee          	.byte 0xee
40080822:	3ffb      	addi.n	a3, a15, 15
40080824:	7f58      	l32i.n	a5, a15, 28
40080826:	443f40        	extui	a3, a4, 15, 5
40080829:	3f4080        	f64cmph	a4, a0, a8, 3
4008082c:	407ee4        	lsi	f14, a14, 0x100
4008082f:	3f          	.byte 0x3f
40080830:	407f70        	wer	a7, a15
40080833:	3f          	.byte 0x3f
40080834:	616c      	movi.n	a1, -26
40080836:	4008      	l32i.n	a0, a0, 16
40080838:	407f84        	lsi	f8, a15, 0x100
4008083b:	3f          	.byte 0x3f
4008083c:	407f94        	lsi	f9, a15, 0x100
4008083f:	3f          	.byte 0x3f
40080840:	407fb0        	wer	a11, a15
40080843:	3f          	.byte 0x3f
40080844:	408010        	rotw	1
40080847:	3f          	.byte 0x3f
40080848:	7fc8      	l32i.n	a12, a15, 28
4008084a:	123f40        	andbc	b3, b15, b4
4008084d:	000100        	lsi	f0, a1, 0
40080850:	010011        	l32r	a1, 40040c50 <r_ld_sched_sniff_add+0x128c>
40080853:	10cc00        	and	a12, a12, a0
40080856:	3ffc      	bnez.n	a15, 4008088d <_init_end+0x48d>
40080858:	fc10d0        	lsi	f13, a0, 0x3f0
4008085b:	3f          	.byte 0x3f
4008085c:	ff          	.byte 0xff
4008085d:	ff          	.byte 0xff
4008085e:	000006        	j	40080862 <_init_end+0x462>
40080861:	c08000        	sub	a8, a0, a0
40080864:	ff          	.byte 0xff
40080865:	ff          	.byte 0xff
40080866:	3f          	.byte 0x3f
40080867:	200000        	or	a0, a0, a0
4008086a:	000000        	ill
4008086d:	000040        	lsi	f4, a0, 0
40080870:	00c3c0        	lsi	f12, a3, 0
40080873:	009c40        	all4	b4, b12:b13:b14:b15
40080876:	3ffc      	bnez.n	a15, 400808ad <_init_end+0x4ad>
40080878:	03e8      	l32i.n	a14, a3, 0
4008087a:	000000        	ill
4008087d:	3f8000        	f64cmph	a8, a0, a0, 3
40080880:	fc12a0        	lsi	f10, a2, 0x3f0
40080883:	3f          	.byte 0x3f
40080884:	200000        	or	a0, a0, a0
40080887:	ffff00        	f64cmph	a15, a15, a0, 15
4008088a:	7f          	.byte 0x7f
4008088b:	3f          	.byte 0x3f
4008088c:	0097f4        	lsi	f15, a7, 0
4008088f:	84a840        	extui	a10, a4, 8, 9
40080892:	c43f40        	extui	a3, a4, 15, 13
40080895:	3f4083        	ssi	f8, a0, 252
40080898:	4046e0        	lsi	f14, a6, 0x100
4008089b:	3f          	.byte 0x3f
4008089c:	408480        	lsi	f8, a4, 0x100
4008089f:	3f          	.byte 0x3f
400808a0:	84b8      	l32i.n	a11, a4, 32
400808a2:	943f40        	extui	a3, a4, 15, 10
400808a5:	3f4084        	lsi	f8, a0, 252
400808a8:	8468      	l32i.n	a6, a4, 32
400808aa:	503f40        	ritlb0	a4, a15
400808ad:	3f4046        	j	400905b2 <_iram_end+0x2a5e>
400808b0:	0f48      	l32i.n	a4, a15, 0
400808b2:	503f40        	ritlb0	a4, a15
400808b5:	400874        	lsi	f7, a8, 0x100
400808b8:	476c      	movi.n	a7, -28
400808ba:	033f40        	lsi	f4, a15, 12
400808bd:	000a      	add.n	a0, a0, a0
400808bf:	467400        	lsi	f0, a4, 0x118
400808c2:	e03f40        	subx4	a3, a15, a4
400808c5:	3f4046        	j	400905ca <_iram_end+0x2a76>
400808c8:	000a07        	bnone	a10, a0, 400808cc <_init_end+0x4cc>
400808cb:	480800        	ssx	f0, a8, a0
400808ce:	f43f40        	extui	a3, a4, 15, 16
400808d1:	3f4047        	ball	a0, a4, 40080914 <_init_end+0x514>
400808d4:	479c      	beqz.n	a7, 400808ec <_init_end+0x4ec>
400808d6:	883f40        	lsi	f4, a15, 0x220
400808d9:	3f4047        	ball	a0, a4, 4008091c <_init_end+0x51c>
400808dc:	47d8      	l32i.n	a13, a7, 16
400808de:	503f40        	ritlb0	a4, a15
400808e1:	3f4047        	ball	a0, a4, 40080924 <_init_end+0x524>
400808e4:	473c      	movi.n	a7, 52
400808e6:	243f40        	extui	a3, a4, 15, 3
400808e9:	3f4047        	ball	a0, a4, 4008092c <_init_end+0x52c>
400808ec:	47bc      	beqz.n	a7, 40080924 <_init_end+0x524>
400808ee:	0c3f40        	lsi	f4, a15, 48
400808f1:	3f4047        	ball	a0, a4, 40080934 <_init_end+0x534>
400808f4:	46fc      	bnez.n	a6, 4008092c <_init_end+0x52c>
400808f6:	d33f40        	movt	a3, a15, b4
400808f9:	624d      	lsi	f4, a2, 8
400808fb:	0b5010        	lsi	f1, a0, 44
400808fe:	3ffc      	bnez.n	a15, 40080935 <_init_end+0x535>
40080900:	481c      	movi.n	a8, 20
40080902:	283f40        	lsi	f4, a15, 160
40080905:	4048      	l32i.n	a4, a0, 16
40080907:	3f          	.byte 0x3f
40080908:	86f8      	l32i.n	a15, a6, 32
4008090a:	f83f41        	l32r	a4, 4007ea08 <__udivmoddi4+0x19e14>
4008090d:	3f4186        	j	40090617 <_iram_end+0x2ac3>
40080910:	087e24        	lsi	f2, a14, 32
40080913:	003040        	lsi	f4, a0, 0
40080916:	200005        	call0	400a0918 <_iram_end+0x12dc4>
40080919:	3f4000        	f64cmph	a4, a0, a0, 3
4008091c:	ff          	.byte 0xff
4008091d:	ff          	.byte 0xff
4008091e:	3f          	.byte 0x3f
4008091f:	48d4b3        	lsi	f11, a4, 0x120
40080922:	143f40        	extui	a3, a4, 15, 2
40080925:	404a      	add.n	a4, a0, a4
40080927:	3f          	.byte 0x3f
40080928:	48ec      	bnez.n	a8, 40080950 <_init_end+0x550>
4008092a:	643f40        	extui	a3, a4, 15, 7
4008092d:	4049      	s32i.n	a4, a0, 16
4008092f:	3f          	.byte 0x3f
40080930:	49e8      	l32i.n	a14, a9, 16
40080932:	743f40        	extui	a3, a4, 15, 8
40080935:	fbed      	lsi	f14, a11, 44
40080937:	3f          	.byte 0x3f
40080938:	006666        	bnei	a6, 6, 4008093c <_init_end+0x53c>
4008093b:	497800        	s32e	a0, a8, -36
4008093e:	683f40        	lsi	f4, a15, 0x1a0
40080941:	404a      	add.n	a4, a0, a4
40080943:	3f          	.byte 0x3f
40080944:	c00001        	l32r	a0, 40070944 <__udivmoddi4+0xbd50>
40080947:	a44c      	movi.n	a4, 74
40080949:	4049      	s32i.n	a4, a0, 16
4008094b:	3f          	.byte 0x3f
4008094c:	4049d4        	lsi	f13, a9, 0x100
4008094f:	3f          	.byte 0x3f
40080950:	4a3c      	movi.n	a10, 52
40080952:	743f40        	extui	a3, a4, 15, 8
40080955:	7bed      	lsi	f14, a11, 44
40080957:	0bf800        	wf64r	a8, a0, 1
4008095a:	3ffc      	bnez.n	a15, 40080991 <_init_end+0x591>
4008095c:	fbed84        	lsi	f8, a13, 0x3ec
4008095f:	3f          	.byte 0x3f
40080960:	4cf8      	l32i.n	a15, a12, 16
40080962:	523f40        	lsi	f4, a15, 0x148
40080965:	0f          	.byte 0xf
40080966:	900000        	addx2	a0, a0, a0
40080969:	404a      	add.n	a4, a0, a4
4008096b:	3f          	.byte 0x3f
4008096c:	4046e0        	lsi	f14, a6, 0x100
4008096f:	3f          	.byte 0x3f
40080970:	fc0c24        	lsi	f2, a12, 0x3f0
40080973:	3f          	.byte 0x3f
40080974:	fc0c10        	lsi	f1, a12, 0x3f0
40080977:	3f          	.byte 0x3f
40080978:	0bfc      	bnez.n	a11, 400809ac <_init_end+0x5ac>
4008097a:	3ffc      	bnez.n	a15, 400809b1 <_init_end+0x5b1>
4008097c:	0bcc      	bnez.n	a11, 40080980 <_init_end+0x580>
4008097e:	3ffc      	bnez.n	a15, 400809b5 <_init_end+0x5b5>
40080980:	fc0be0        	lsi	f14, a11, 0x3f0
40080983:	3f          	.byte 0x3f
40080984:	0bb8      	l32i.n	a11, a11, 0
40080986:	3ffc      	bnez.n	a15, 400809bd <_init_end+0x5bd>
40080988:	fc0ba0        	lsi	f10, a11, 0x3f0
4008098b:	3f          	.byte 0x3f
4008098c:	fc0bf4        	lsi	f15, a11, 0x3f0
4008098f:	3f          	.byte 0x3f
40080990:	4ce8      	l32i.n	a14, a12, 16
40080992:	443f40        	extui	a3, a4, 15, 5
40080995:	0f          	.byte 0xf
40080996:	900000        	addx2	a0, a0, a0
40080999:	fc0b      	addi.n	a15, a12, -1
4008099b:	3f          	.byte 0x3f
4008099c:	0b6c      	movi.n	a11, -32
4008099e:	3ffc      	bnez.n	a15, 400809d5 <_init_end+0x5d5>
400809a0:	0b98      	l32i.n	a9, a11, 0
400809a2:	3ffc      	bnez.n	a15, 400809d9 <_init_end+0x5d9>
400809a4:	404c70        	lsi	f7, a12, 0x100
400809a7:	3f          	.byte 0x3f
400809a8:	097b      	addi.n	a0, a9, 7
400809aa:	7c0000        	lsi	f0, a0, 0x1f0
400809ad:	fc0b      	addi.n	a15, a12, -1
400809af:	3f          	.byte 0x3f
400809b0:	fc0b64        	lsi	f6, a11, 0x3f0
400809b3:	3f          	.byte 0x3f
400809b4:	4c48      	l32i.n	a4, a12, 16
400809b6:	7c3f40        	lsi	f4, a15, 0x1f0
400809b9:	fbed      	lsi	f14, a11, 44
400809bb:	3f          	.byte 0x3f
400809bc:	0b8c      	beqz.n	a11, 400809c0 <_init_end+0x5c0>
400809be:	3ffc      	bnez.n	a15, 400809f5 <_init_end+0x5f5>
400809c0:	00c260        	lsi	f6, a2, 0
400809c3:	4bdc40        	olt.s	b13, f12, f4
400809c6:	953f40        	extui	a3, a4, 31, 10
400809c9:	000c      	movi.n	a0, 0
400809cb:	0b7800        	lsi	f0, a8, 44
400809ce:	3ffc      	bnez.n	a15, 40080a05 <_init_end+0x605>
400809d0:	404c90        	lsi	f9, a12, 0x100
400809d3:	3f          	.byte 0x3f
400809d4:	091b      	addi.n	a0, a9, 1
400809d6:	880000        	lsi	f0, a0, 0x220
400809d9:	fc0b      	addi.n	a15, a12, -1
400809db:	3f          	.byte 0x3f
400809dc:	4978      	l32i.n	a7, a9, 16
400809de:	843f40        	extui	a3, a4, 15, 9
400809e1:	404b      	addi.n	a4, a0, 4
400809e3:	3f          	.byte 0x3f
400809e4:	48ec      	bnez.n	a8, 40080a0c <_init_end+0x60c>
400809e6:	a43f40        	extui	a3, a4, 15, 11
400809e9:	4049      	s32i.n	a4, a0, 16
400809eb:	3f          	.byte 0x3f
400809ec:	4049d4        	lsi	f13, a9, 0x100
400809ef:	3f          	.byte 0x3f
400809f0:	4b58      	l32i.n	a5, a11, 16
400809f2:	d43f40        	extui	a3, a4, 15, 14
400809f5:	4048      	l32i.n	a4, a0, 16
400809f7:	3f          	.byte 0x3f
400809f8:	404b30        	lsi	f3, a11, 0x100
400809fb:	3f          	.byte 0x3f
400809fc:	404964        	lsi	f6, a9, 0x100
400809ff:	3f          	.byte 0x3f
40080a00:	404b04        	lsi	f0, a11, 0x100
40080a03:	3f          	.byte 0x3f
40080a04:	fffc      	bnez.n	a15, 40080a47 <_init_end+0x647>
40080a06:	ff          	.byte 0xff
40080a07:	7f          	.byte 0x7f
40080a08:	404d14        	lsi	f1, a13, 0x100
40080a0b:	3f          	.byte 0x3f
40080a0c:	fc0b94        	lsi	f9, a11, 0x3f0
40080a0f:	3f          	.byte 0x3f
40080a10:	fc0b74        	lsi	f7, a11, 0x3f0
40080a13:	3f          	.byte 0x3f
40080a14:	4afc      	bnez.n	a10, 40080a4c <_init_end+0x64c>
40080a16:	143f40        	extui	a3, a4, 15, 2
40080a19:	400893        	lsi	f9, a8, 0x100
40080a1c:	404cb4        	lsi	f11, a12, 0x100
40080a1f:	3f          	.byte 0x3f
40080a20:	000835        	call12	40080aa4 <_init_end+0x6a4>
40080a23:	0bb400        	lsi	f0, a4, 44
40080a26:	3ffc      	bnez.n	a15, 40080a5d <_init_end+0x65d>
40080a28:	4d08      	l32i.n	a0, a13, 16
40080a2a:	dc3f40        	lsi	f4, a15, 0x370
40080a2d:	404c      	movi.n	a0, 68
40080a2f:	3f          	.byte 0x3f
40080a30:	4cc8      	l32i.n	a12, a12, 16
40080a32:	013f40        	slli	a3, a15, 28
40080a35:	800000        	add	a0, a0, a0
40080a38:	fc0bc0        	lsi	f12, a11, 0x3f0
40080a3b:	3f          	.byte 0x3f
40080a3c:	4c5c      	movi.n	a12, 84
40080a3e:	c53f40        	extui	a3, a4, 31, 13
40080a41:	0009      	s32i.n	a0, a0, 0
40080a43:	0b8400        	lsi	f0, a4, 44
40080a46:	3ffc      	bnez.n	a15, 40080a7d <_init_end+0x67d>
40080a48:	404ca4        	lsi	f10, a12, 0x100
40080a4b:	3f          	.byte 0x3f
40080a4c:	08a9      	s32i.n	a10, a8, 0
40080a4e:	300000        	xor	a0, a0, a0
40080a51:	404c      	movi.n	a0, 68
40080a53:	3f          	.byte 0x3f
40080a54:	0b4d      	mov.n	a4, a11
40080a56:	100000        	and	a0, a0, a0
40080a59:	404c      	movi.n	a0, 68
40080a5b:	3f          	.byte 0x3f
40080a5c:	000bd4        	lsi	f13, a11, 0
40080a5f:	4bf400        	olt.s	b15, f4, f0
40080a62:	133f40        	lsi	f4, a15, 76
40080a65:	000c      	movi.n	a0, 0
40080a67:	4bc400        	olt.s	b12, f4, f0
40080a6a:	9f3f40        	f64cmph	a3, a15, a4, 9
40080a6d:	000c      	movi.n	a0, 0
40080a6f:	0ca000        	lsi	f0, a0, 48
40080a72:	ac0000        	lsi	f0, a0, 0x2b0
40080a75:	404b      	addi.n	a4, a0, 4
40080a77:	3f          	.byte 0x3f
40080a78:	001005        	call0	40080b7c <_init_end+0x77c>
40080a7b:	0e2c00        	wrmsk_expstate	a0, a12
40080a7e:	3ffc      	bnez.n	a15, 40080ab5 <_init_end+0x6b5>
40080a80:	0e28      	l32i.n	a2, a14, 0
40080a82:	3ffc      	bnez.n	a15, 40080ab9 <_init_end+0x6b9>
40080a84:	fc0e24        	lsi	f2, a14, 0x3f0
40080a87:	3f          	.byte 0x3f
40080a88:	ed88      	l32i.n	a8, a13, 56
40080a8a:	3ffb      	addi.n	a3, a15, 15
40080a8c:	fc0e44        	lsi	f4, a14, 0x3f0
40080a8f:	3f          	.byte 0x3f
40080a90:	fc0e30        	lsi	f3, a14, 0x3f0
40080a93:	3f          	.byte 0x3f
40080a94:	4dcc      	bnez.n	a13, 40080a9c <_init_end+0x69c>
40080a96:	303f40        	xor	a3, a15, a4
40080a99:	404d      	lsi	f4, a0, 0
40080a9b:	3f          	.byte 0x3f
40080a9c:	4046e0        	lsi	f14, a6, 0x100
40080a9f:	3f          	.byte 0x3f
40080aa0:	4d9c      	beqz.n	a13, 40080ab8 <_init_end+0x6b8>
40080aa2:	203f40        	or	a3, a15, a4
40080aa5:	9f          	.byte 0x9f
40080aa6:	4008      	l32i.n	a0, a0, 16
40080aa8:	404e34        	lsi	f3, a14, 0x100
40080aab:	3f          	.byte 0x3f
40080aac:	404e20        	lsi	f2, a14, 0x100
40080aaf:	3f          	.byte 0x3f
40080ab0:	fc0e20        	lsi	f2, a14, 0x3f0
40080ab3:	3f          	.byte 0x3f
40080ab4:	4e08      	l32i.n	a0, a14, 16
40080ab6:	a43f40        	extui	a3, a4, 15, 11
40080ab9:	404d      	lsi	f4, a0, 0
40080abb:	3f          	.byte 0x3f
40080abc:	4dec      	bnez.n	a13, 40080ae4 <_init_end+0x6e4>
40080abe:	d43f40        	extui	a3, a4, 15, 14
40080ac1:	3ffbe7        	bbsi	a11, 30, 40080b04 <_init_end+0x704>
40080ac4:	fbe1d0        	f64subc	a13, a1, 3, 0
40080ac7:	3f          	.byte 0x3f
40080ac8:	fbfff0        	f64subc	a15, a15, 3, 1
40080acb:	ff          	.byte 0xff
40080acc:	fae8      	l32i.n	a14, a10, 60
40080ace:	3ffb      	addi.n	a3, a15, 15
40080ad0:	fe48      	l32i.n	a4, a14, 60
40080ad2:	3ffb      	addi.n	a3, a15, 15
40080ad4:	fb08      	l32i.n	a0, a11, 60
40080ad6:	3ffb      	addi.n	a3, a15, 15
40080ad8:	fbfb74        	lsi	f7, a11, 0x3ec
40080adb:	3f          	.byte 0x3f
40080adc:	fe5c      	movi.n	a14, 95
40080ade:	3ffb      	addi.n	a3, a15, 15
40080ae0:	fba8      	l32i.n	a10, a11, 60
40080ae2:	3ffb      	addi.n	a3, a15, 15
40080ae4:	fbfbc0        	f64subc	a12, a11, 3, 1
40080ae7:	3f          	.byte 0x3f
40080ae8:	fbfe70        	f64subc	a7, a14, 3, 1
40080aeb:	3f          	.byte 0x3f
40080aec:	fbd8      	l32i.n	a13, a11, 60
40080aee:	3ffb      	addi.n	a3, a15, 15
40080af0:	fe38      	l32i.n	a3, a14, 60
40080af2:	3ffb      	addi.n	a3, a15, 15
40080af4:	fbfbe0        	f64subc	a14, a11, 3, 1
40080af7:	3f          	.byte 0x3f
40080af8:	fbfe20        	f64subc	a2, a14, 3, 1
40080afb:	3f          	.byte 0x3f
40080afc:	ba1234        	lsi	f3, a2, 0x2e8
40080aff:	78ab      	addi.n	a7, a8, 10
40080b01:	baad56        	bnez	a13, 400806af <_init_end+0x2af>
40080b04:	fbfe80        	f64subc	a8, a14, 3, 1
40080b07:	3f          	.byte 0x3f
40080b08:	febc      	beqz.n	a14, 40080b4b <_init_end+0x74b>
40080b0a:	3ffb      	addi.n	a3, a15, 15
40080b0c:	fef8      	l32i.n	a15, a14, 60
40080b0e:	3ffb      	addi.n	a3, a15, 15
40080b10:	ffec      	bnez.n	a15, 40080b43 <_init_end+0x743>
40080b12:	3ffb      	addi.n	a3, a15, 15
40080b14:	ff08      	l32i.n	a0, a15, 60
40080b16:	3ffb      	addi.n	a3, a15, 15
40080b18:	ffd8      	l32i.n	a13, a15, 60
40080b1a:	3ffb      	addi.n	a3, a15, 15
40080b1c:	ffb8      	l32i.n	a11, a15, 60
40080b1e:	3ffb      	addi.n	a3, a15, 15
40080b20:	f40000        	extui	a0, a0, 0, 16
40080b23:	3f          	.byte 0x3f
40080b24:	666667        	bbci	a6, 6, 40080b8e <_init_end+0x78e>
40080b27:	fffc66        	bnei	a12, 0x100, 40080b2a <_init_end+0x72a>
40080b2a:	ff          	.byte 0xff
40080b2b:	bf          	.byte 0xbf
40080b2c:	f08c      	beqz.n	a0, 40080b3f <_init_end+0x73f>
40080b2e:	3ffb      	addi.n	a3, a15, 15
40080b30:	fbf0a0        	f64subc	a10, a0, 3, 1
40080b33:	3f          	.byte 0x3f
40080b34:	f9e8      	l32i.n	a14, a9, 60
40080b36:	3ffb      	addi.n	a3, a15, 15
40080b38:	fbf270        	f64subc	a7, a2, 3, 1
40080b3b:	3f          	.byte 0x3f
40080b3c:	038000        	rsr.ibreaka0	a0
40080b3f:	000000        	ill
40080b42:	001c      	movi.n	a0, 16
40080b44:	400000        	ssr	a0
40080b47:	ff9c      	beqz.n	a15, 40080b6a <_init_end+0x76a>
40080b49:	ff          	.byte 0xff
40080b4a:	ff          	.byte 0xff
40080b4b:	3f          	.byte 0x3f
40080b4c:	fbf0a4        	lsi	f10, a0, 0x3ec
40080b4f:	3f          	.byte 0x3f
40080b50:	f0a8      	l32i.n	a10, a0, 60
40080b52:	3ffb      	addi.n	a3, a15, 15
40080b54:	f0ac      	beqz.n	a0, 40080b87 <_init_end+0x787>
40080b56:	3ffb      	addi.n	a3, a15, 15
40080b58:	051ff0        	extui	a1, a15, 31, 1
40080b5b:	1fe0c0        	f64cmph	a14, a0, a12, 1
40080b5e:	bc0005        	call0	4003cb60 <ld_inq_frm_cbk+0x1d14>
40080b61:	3ffbf0        	f64cmph	a15, a11, a15, 3
40080b64:	fc0074        	lsi	f7, a0, 0x3f0
40080b67:	3f          	.byte 0x3f
40080b68:	f758      	l32i.n	a5, a7, 60
40080b6a:	3ffb      	addi.n	a3, a15, 15
40080b6c:	fbf0c4        	lsi	f12, a0, 0x3ec
40080b6f:	3f          	.byte 0x3f
40080b70:	f0cc      	bnez.n	a0, 40080b83 <_init_end+0x783>
40080b72:	3ffb      	addi.n	a3, a15, 15
40080b74:	f10c      	movi.n	a1, 15
40080b76:	3ffb      	addi.n	a3, a15, 15
40080b78:	fbf0e0        	f64subc	a14, a0, 3, 1
40080b7b:	3f          	.byte 0x3f
40080b7c:	fc0070        	lsi	f7, a0, 0x3f0
40080b7f:	3f          	.byte 0x3f
40080b80:	fbf0e4        	lsi	f14, a0, 0x3ec
40080b83:	3f          	.byte 0x3f
40080b84:	fbf104        	lsi	f0, a1, 0x3ec
40080b87:	3f          	.byte 0x3f
40080b88:	fbf114        	lsi	f1, a1, 0x3ec
40080b8b:	3f          	.byte 0x3f
40080b8c:	fbf124        	lsi	f2, a1, 0x3ec
40080b8f:	3f          	.byte 0x3f
40080b90:	fbf134        	lsi	f3, a1, 0x3ec
40080b93:	3f          	.byte 0x3f
40080b94:	1b58      	l32i.n	a5, a11, 4
40080b96:	640000        	extui	a0, a0, 0, 7
40080b99:	3ffbf2        	s32ri	a15, a11, 252
40080b9c:	fbf274        	lsi	f7, a2, 0x3ec
40080b9f:	3f          	.byte 0x3f
40080ba0:	fbf290        	f64subc	a9, a2, 3, 1
40080ba3:	3f          	.byte 0x3f
40080ba4:	08b334        	lsi	f3, a3, 32
40080ba7:	f29840        	rems	a9, a8, a4
40080baa:	3ffb      	addi.n	a3, a15, 15
40080bac:	fbf2a4        	lsi	f10, a2, 0x3ec
40080baf:	3f          	.byte 0x3f
40080bb0:	6f          	.byte 0x6f
40080bb1:	4008b3        	lsi	f11, a8, 0x100
40080bb4:	fbf2d0        	f64subc	a13, a2, 3, 1
40080bb7:	3f          	.byte 0x3f
40080bb8:	fbf300        	f64subc	a0, a3, 3, 1
40080bbb:	3f          	.byte 0x3f
40080bbc:	f328      	l32i.n	a2, a3, 60
40080bbe:	3ffb      	addi.n	a3, a15, 15
40080bc0:	fbf340        	f64subc	a4, a3, 3, 1
40080bc3:	3f          	.byte 0x3f
40080bc4:	f7b8      	l32i.n	a11, a7, 60
40080bc6:	3ffb      	addi.n	a3, a15, 15
40080bc8:	fbf350        	f64subc	a5, a3, 3, 1
40080bcb:	3f          	.byte 0x3f
40080bcc:	fbf370        	f64subc	a7, a3, 3, 1
40080bcf:	3f          	.byte 0x3f
40080bd0:	f37c      	movi.n	a3, -1
40080bd2:	3ffb      	addi.n	a3, a15, 15
40080bd4:	fbf380        	f64subc	a8, a3, 3, 1
40080bd7:	3f          	.byte 0x3f
40080bd8:	f39c      	beqz.n	a3, 40080bfb <_init_end+0x7fb>
40080bda:	3ffb      	addi.n	a3, a15, 15
40080bdc:	f3a8      	l32i.n	a10, a3, 60
40080bde:	3ffb      	addi.n	a3, a15, 15
40080be0:	f3b8      	l32i.n	a11, a3, 60
40080be2:	3ffb      	addi.n	a3, a15, 15
40080be4:	f3dc      	bnez.n	a3, 40080c07 <_init_end+0x807>
40080be6:	3ffb      	addi.n	a3, a15, 15
40080be8:	fbf3e0        	f64subc	a14, a3, 3, 1
40080beb:	3f          	.byte 0x3f
40080bec:	f3f8      	l32i.n	a15, a3, 60
40080bee:	3ffb      	addi.n	a3, a15, 15
40080bf0:	f408      	l32i.n	a0, a4, 60
40080bf2:	3ffb      	addi.n	a3, a15, 15
40080bf4:	f418      	l32i.n	a1, a4, 60
40080bf6:	3ffb      	addi.n	a3, a15, 15
40080bf8:	f7d8      	l32i.n	a13, a7, 60
40080bfa:	3ffb      	addi.n	a3, a15, 15
40080bfc:	f4fc      	bnez.n	a4, 40080c3f <_init_end+0x83f>
40080bfe:	3ffb      	addi.n	a3, a15, 15
40080c00:	fbbc      	beqz.n	a11, 40080c43 <_init_end+0x843>
40080c02:	3ffb      	addi.n	a3, a15, 15
40080c04:	fbf504        	lsi	f0, a5, 0x3ec
40080c07:	3f          	.byte 0x3f
40080c08:	f50c      	movi.n	a5, 15
40080c0a:	3ffb      	addi.n	a3, a15, 15
40080c0c:	f52c      	movi.n	a5, 47
40080c0e:	3ffb      	addi.n	a3, a15, 15
40080c10:	f56c      	movi.n	a5, -17
40080c12:	3ffb      	addi.n	a3, a15, 15
40080c14:	f480a4        	lsi	f10, a0, 0x3d0
40080c17:	3f          	.byte 0x3f
40080c18:	5f          	.byte 0x5f
40080c19:	af27c5        	call0	4002fe98 <ld_acl_rx_no_sync+0x20>
40080c1c:	f480a0        	extui	a8, a10, 0, 16
40080c1f:	3f          	.byte 0x3f
40080c20:	808c      	beqz.n	a0, 40080c2c <_init_end+0x82c>
40080c22:	803ff4        	lsi	f15, a15, 0x200
40080c25:	800000        	add	a0, a0, a0
40080c28:	f48090        	extui	a8, a9, 0, 16
40080c2b:	3f          	.byte 0x3f
40080c2c:	f48094        	lsi	f9, a0, 0x3d0
40080c2f:	3f          	.byte 0x3f
40080c30:	8098      	l32i.n	a9, a0, 32
40080c32:	9c3ff4        	lsi	f15, a15, 0x270
40080c35:	3ff480        	f64cmph	a15, a4, a8, 3
40080c38:	ff          	.byte 0xff
40080c39:	ff          	.byte 0xff
40080c3a:	ff          	.byte 0xff
40080c3b:	8f          	.byte 0x8f
40080c3c:	ff          	.byte 0xff
40080c3d:	ff          	.byte 0xff
40080c3e:	ff          	.byte 0xff
40080c3f:	fffff1        	l32r	a15, 40080c3c <_init_end+0x83c>
40080c42:	3f          	.byte 0x3f
40080c43:	fe          	.byte 0xfe
40080c44:	ff          	.byte 0xff
40080c45:	ff          	.byte 0xff
40080c46:	ffffc7        	bbsi	a15, 28, 40080c49 <_init_end+0x849>
40080c49:	ffffc7        	bbsi	a15, 28, 40080c4c <_init_end+0x84c>
40080c4c:	ff          	.byte 0xff
40080c4d:	3f          	.byte 0x3f
40080c4e:	fe          	.byte 0xfe
40080c4f:	ff          	.byte 0xff
40080c50:	f48030        	extui	a8, a3, 0, 16
40080c53:	3f          	.byte 0x3f
40080c54:	ff          	.byte 0xff
40080c55:	ff          	.byte 0xff
40080c56:	ff          	.byte 0xff
40080c57:	1cfb      	addi.n	a1, a12, 15
40080c59:	3ff480        	f64cmph	a15, a4, a8, 3
40080c5c:	ff          	.byte 0xff
40080c5d:	ff          	.byte 0xff
40080c5e:	ff          	.byte 0xff
40080c5f:	3fff00        	f64cmph	a15, a15, a0, 3
40080c62:	3fff00        	f64cmph	a15, a15, a0, 3
40080c65:	ffffc0        	f64cmph	a15, a15, a12, 15
40080c68:	8078      	l32i.n	a7, a0, 32
40080c6a:	003ff4        	lsi	f15, a15, 0
40080c6d:	030000        	rsr.lbeg	a0
40080c70:	807c      	movi.n	a0, -8
40080c72:	003ff4        	lsi	f15, a15, 0
40080c75:	080000        	lsx	f0, a0, a0
40080c78:	000000        	ill
40080c7b:	f7ff01        	l32r	a0, 4007ec78 <__udivmoddi4+0x1a084>
40080c7e:	ff          	.byte 0xff
40080c7f:	ff          	.byte 0xff
40080c80:	f00094        	lsi	f9, a0, 0x3c0
40080c83:	3f          	.byte 0x3f
40080c84:	f000a0        	subx8	a0, a0, a10
40080c87:	3f          	.byte 0x3f
40080c88:	f000a4        	lsi	f10, a0, 0x3c0
40080c8b:	3f          	.byte 0x3f
40080c8c:	00ac      	beqz.n	a0, 40080cb0 <_init_end+0x8b0>
40080c8e:	703ff0        	lsi	f15, a15, 0x1c0
40080c91:	3ff480        	f64cmph	a15, a4, a8, 3
40080c94:	ff          	.byte 0xff
40080c95:	df          	.byte 0xdf
40080c96:	ff          	.byte 0xff
40080c97:	ff          	.byte 0xff
40080c98:	ff          	.byte 0xff
40080c99:	ff          	.byte 0xff
40080c9a:	bf          	.byte 0xbf
40080c9b:	ff          	.byte 0xff
40080c9c:	ff          	.byte 0xff
40080c9d:	ff          	.byte 0xff
40080c9e:	fffff7        	bbsi	a15, 31, 40080ca1 <_init_end+0x8a1>
40080ca1:	ff          	.byte 0xff
40080ca2:	fe          	.byte 0xfe
40080ca3:	ff          	.byte 0xff
40080ca4:	100000        	and	a0, a0, a0
40080ca7:	000000        	ill
40080caa:	ff0002        	l8ui	a0, a0, 255
40080cad:	ff          	.byte 0xff
40080cae:	ff          	.byte 0xff
40080caf:	fe          	.byte 0xfe
40080cb0:	800000        	add	a0, a0, a0
40080cb3:	ffff00        	f64cmph	a15, a15, a0, 15
40080cb6:	ff          	.byte 0xff
40080cb7:	df          	.byte 0xdf
40080cb8:	f48084        	lsi	f8, a0, 0x3d0
40080cbb:	3f          	.byte 0x3f
40080cbc:	ff          	.byte 0xff
40080cbd:	ff          	.byte 0xff
40080cbe:	ef          	.byte 0xef
40080cbf:	ff          	.byte 0xff
40080cc0:	ff          	.byte 0xff
40080cc1:	ff          	.byte 0xff
40080cc2:	fffb      	addi.n	a15, a15, 15
40080cc4:	bf          	.byte 0xbf
40080cc5:	feaa      	add.n	a15, a14, a10
40080cc7:	ff          	.byte 0xff
40080cc8:	f48080        	extui	a8, a8, 0, 16
40080ccb:	3f          	.byte 0x3f
40080ccc:	ff          	.byte 0xff
40080ccd:	df          	.byte 0xdf
40080cce:	fe          	.byte 0xfe
40080ccf:	ff          	.byte 0xff
40080cd0:	8088      	l32i.n	a8, a0, 32
40080cd2:	ff3ff4        	lsi	f15, a15, 0x3fc
40080cd5:	ff          	.byte 0xff
40080cd6:	fff555        	call4	40080c2c <_init_end+0x82c>
40080cd9:	bf          	.byte 0xbf
40080cda:	ff          	.byte 0xff
40080cdb:	ff          	.byte 0xff
40080cdc:	ff          	.byte 0xff
40080cdd:	ef          	.byte 0xef
40080cde:	ff          	.byte 0xff
40080cdf:	ff          	.byte 0xff
40080ce0:	008000        	any4	b0, b0:b1:b2:b3
40080ce3:	81b300        	src	a11, a3, a0
40080ce6:	f00000        	subx8	a0, a0, a0
40080ce9:	0249      	s32i.n	a4, a2, 0
40080ceb:	7ffe00        	f64cmph	a15, a14, a0, 7
40080cee:	d40000        	extui	a0, a0, 0, 14
40080cf1:	3f4056        	bnez	a0, 400810e9 <esp_clk_apb_freq+0x1>
40080cf4:	57a8      	l32i.n	a10, a7, 20
40080cf6:	ec3f40        	lsi	f4, a15, 0x3b0
40080cf9:	3f4056        	bnez	a0, 400810f1 <esp_clk_apb_freq+0x9>
40080cfc:	f068      	l32i.n	a6, a0, 60
40080cfe:	ff3ff5        	call12	400800fc <_WindowUnderflow8+0x3c>
40080d01:	9f          	.byte 0x9f
40080d02:	ff          	.byte 0xff
40080d03:	ff          	.byte 0xff
40080d04:	ff          	.byte 0xff
40080d05:	ff          	.byte 0xff
40080d06:	ff8000        	f64cmph	a8, a0, a0, 15
40080d09:	ff          	.byte 0xff
40080d0a:	ff          	.byte 0xff
40080d0b:	575c01        	l32r	a0, 40056a7c <strtoul+0x150>
40080d0e:	683f40        	lsi	f4, a15, 0x1a0
40080d11:	3f4057        	ball	a0, a5, 40080d54 <_init_end+0x954>
40080d14:	f06c      	movi.n	a0, -17
40080d16:	0c3ff5        	call12	4008d114 <esp_rom_spiflash_read_status+0x8>
40080d19:	3ff480        	f64cmph	a15, a4, a8, 3
40080d1c:	8048      	l32i.n	a4, a0, 32
40080d1e:	103ff4        	lsi	f15, a15, 64
40080d21:	3ff480        	f64cmph	a15, a4, a8, 3
40080d24:	f48014        	lsi	f1, a0, 0x3d0
40080d27:	3f          	.byte 0x3f
40080d28:	ff          	.byte 0xff
40080d29:	ef          	.byte 0xef
40080d2a:	ff          	.byte 0xff
40080d2b:	7f          	.byte 0x7f
40080d2c:	ff          	.byte 0xff
40080d2d:	7f          	.byte 0x7f
40080d2e:	ff          	.byte 0xff
40080d2f:	ff          	.byte 0xff
40080d30:	848c      	beqz.n	a4, 40080d3c <_init_end+0x93c>
40080d32:	df3ff4        	lsi	f15, a15, 0x37c
40080d35:	e73ff7        	bltu	a15, a15, 40080d20 <_init_end+0x920>
40080d38:	060000        	lsi	f0, a0, 24
40080d3b:	ffff00        	f64cmph	a15, a15, a0, 15
40080d3e:	cf          	.byte 0xcf
40080d3f:	ff          	.byte 0xff
40080d40:	080000        	lsx	f0, a0, a0
40080d43:	0e5c00        	lsi	f0, a12, 56
40080d46:	3ffc      	bnez.n	a15, 40080d7d <_init_end+0x97d>
40080d48:	040000        	extui	a0, a0, 0, 1
40080d4b:	fabf00        	mov.s	f11, f15
40080d4e:	fffb      	addi.n	a15, a15, 15
40080d50:	0041a4        	lsi	f10, a1, 0
40080d53:	ffff40        	f64cmph	a15, a15, a4, 15
40080d56:	fff9      	s32i.n	a15, a15, 60
40080d58:	003800        	lsi	f0, a8, 0
40080d5b:	80b000        	add	a11, a0, a0
40080d5e:	fe3ff4        	lsi	f15, a15, 0x3f8
40080d61:	ff          	.byte 0xff
40080d62:	000000        	ill
40080d65:	3ff660        	f64cmph	a15, a6, a6, 3
40080d68:	003c      	movi.n	a0, 48
40080d6a:	643ff0        	extui	a3, a15, 15, 7
40080d6d:	fbfa      	add.n	a15, a11, a15
40080d6f:	3f          	.byte 0x3f
40080d70:	fa98      	l32i.n	a9, a10, 60
40080d72:	3ffb      	addi.n	a3, a15, 15
40080d74:	f480b4        	lsi	f11, a0, 0x3d0
40080d77:	3f          	.byte 0x3f
40080d78:	f66004        	lsi	f0, a0, 0x3d8
40080d7b:	3f          	.byte 0x3f
40080d7c:	ff          	.byte 0xff
40080d7d:	ff          	.byte 0xff
40080d7e:	ff          	.byte 0xff
40080d7f:	fac8e7        	bnall	a8, a14, 40080d7d <_init_end+0x97d>
40080d82:	3ffb      	addi.n	a3, a15, 15
40080d84:	c4b400        	extui	a11, a0, 4, 13
40080d87:	b32004        	lsi	f0, a0, 0x2cc
40080d8a:	200081        	l32r	a8, 40048d8c <lld_evt_get_next_free_slot+0x2460>
40080d8d:	0007a1        	l32r	a10, 40040dac <r_ld_sched_sniff_add+0x13e8>
40080d90:	fae290        	sqrt0.s	f14, f2
40080d93:	3f          	.byte 0x3f
40080d94:	f42010        	extui	a2, a1, 0, 16
40080d97:	3f          	.byte 0x3f
40080d98:	f42000        	extui	a2, a0, 0, 16
40080d9b:	3f          	.byte 0x3f
40080d9c:	0621b0        	lsi	f11, a1, 24
40080d9f:	20f840        	or	a15, a8, a4
40080da2:	f83ff4        	lsi	f15, a15, 0x3e0
40080da5:	3ff430        	f64cmph	a15, a4, a3, 3
40080da8:	f42004        	lsi	f0, a0, 0x3d0
40080dab:	3f          	.byte 0x3f
40080dac:	202c      	movi.n	a0, 34
40080dae:	203ff4        	lsi	f15, a15, 128
40080db1:	fd08      	l32i.n	a0, a13, 60
40080db3:	0f          	.byte 0xf
40080db4:	100000        	and	a0, a0, a0
40080db7:	3ffcc0        	f64cmph	a15, a12, a12, 3
40080dba:	8c0001        	l32r	a0, 40063dbc <__muldc3+0x12c>
40080dbd:	3f4080        	f64cmph	a4, a0, a8, 3
40080dc0:	408380        	lsi	f8, a3, 0x100
40080dc3:	3f          	.byte 0x3f
40080dc4:	81c8      	l32i.n	a12, a1, 32
40080dc6:	003f40        	lsi	f4, a15, 0
40080dc9:	200000        	or	a0, a0, a0
40080dcc:	408244        	lsi	f4, a2, 0x100
40080dcf:	3f          	.byte 0x3f
40080dd0:	839c      	beqz.n	a3, 40080dec <_init_end+0x9ec>
40080dd2:	003f40        	lsi	f4, a15, 0
40080dd5:	020000        	andb	b0, b0, b0
40080dd8:	fae270        	div0.s	f14, f2
40080ddb:	3f          	.byte 0x3f
40080ddc:	000000        	ill
40080ddf:	200804        	lsi	f0, a8, 128
40080de2:	1c3ff4        	lsi	f15, a15, 112
40080de5:	3ff420        	f64cmph	a15, a4, a2, 3
40080de8:	f42020        	extui	a2, a2, 0, 16
40080deb:	3f          	.byte 0x3f
40080dec:	000000        	ill
40080def:	f45c      	movi.n	a4, 95
40080df1:	062d      	mov.n	a2, a6
40080df3:	2e1c40        	f64norm	a1, a12, a4, 0
40080df6:	604006        	j	40098efa <_iram_end+0xb3a6>
40080df9:	2e          	.byte 0x2e
40080dfa:	004006        	j	40080efe <start_cpu0_default+0x86>
40080dfd:	010020        	slli	a0, a0, 30
40080e00:	ff          	.byte 0xff
40080e01:	ff          	.byte 0xff
40080e02:	ff          	.byte 0xff
40080e03:	0000f7        	bnone	a0, a15, 40080e07 <_init_end+0xa07>
40080e06:	007000        	waiti	0
40080e09:	7c0000        	lsi	f0, a0, 0x1f0
40080e0c:	f42024        	lsi	f2, a0, 0x3d0
40080e0f:	3f          	.byte 0x3f
40080e10:	00eb      	addi.n	a0, a0, 14
40080e12:	007000        	waiti	0
40080e15:	500000        	lsi	f0, a0, 0x140
40080e18:	00bb      	addi.n	a0, a0, 11
40080e1a:	6b7000        	ole.s	b7, f0, f0
40080e1d:	700000        	lsi	f0, a0, 0x1c0
40080e20:	003b      	addi.n	a0, a0, 3
40080e22:	0b7000        	lsi	f0, a0, 44
40080e25:	700000        	lsi	f0, a0, 0x1c0
40080e28:	000003        	lsi	f0, a0, 0
40080e2b:	70          	.byte 0x70

40080e2c <esp_random>:
40080e2c:	004136        	entry	a1, 32
40080e2f:	002aa5        	call8	400810d8 <esp_clk_cpu_freq>
40080e32:	202aa0        	or	a2, a10, a10
40080e35:	002b25        	call8	400810e8 <esp_clk_apb_freq>
40080e38:	d2a2a0        	quos	a10, a2, a10
40080e3b:	00a092        	movi	a9, 0
40080e3e:	03ea80        	rsr.ccount	a8
40080e41:	082d      	mov.n	a2, a8
40080e43:	fd6fb1        	l32r	a11, 40080400 <_init_end>
40080e46:	0020c0        	memw
40080e49:	0bb8      	l32i.n	a11, a11, 0
40080e4b:	3099b0        	xor	a9, a9, a11
40080e4e:	fd6db1        	l32r	a11, 40080404 <_init_end+0x4>
40080e51:	0bb8      	l32i.n	a11, a11, 0
40080e53:	c088b0        	sub	a8, a8, a11
40080e56:	11bac0        	slli	a11, a10, 4
40080e59:	e138b7        	bltu	a8, a11, 40080e3e <esp_random+0x12>
40080e5c:	fd6a81        	l32r	a8, 40080404 <_init_end+0x4>
40080e5f:	0829      	s32i.n	a2, a8, 0
40080e61:	f03d      	nop.n
40080e63:	f03d      	nop.n
40080e65:	f03d      	nop.n
40080e67:	f03d      	nop.n
40080e69:	fd6521        	l32r	a2, 40080400 <_init_end>
40080e6c:	0020c0        	memw
40080e6f:	0228      	l32i.n	a2, a2, 0
40080e71:	302920        	xor	a2, a9, a2
40080e74:	f01d      	retw.n
	...

40080e78 <start_cpu0_default>:
40080e78:	006136        	entry	a1, 48
40080e7b:	68aaa5        	call8	400e9924 <esp_setup_syscall_table>
40080e7e:	5499a5        	call8	400d5818 <esp_clk_init>
40080e81:	54a325        	call8	400d58b4 <esp_perip_clk_init>
40080e84:	548b65        	call8	400d573c <intr_matrix_clear>
40080e87:	fd60b1        	l32r	a11, 40080408 <_init_end+0x8>
40080e8a:	0a0c      	movi.n	a10, 0
40080e8c:	fd6d81        	l32r	a8, 40080440 <_init_end+0x40>
40080e8f:	0008e0        	callx8	a8
40080e92:	5571e5        	call8	400d65b0 <esp_brownout_init>
40080e95:	6868e5        	call8	400e9524 <rtc_gpio_force_hold_dis_all>
40080e98:	58e5a5        	call8	400d9cf4 <esp_vfs_dev_uart_register>
40080e9b:	fd5c21        	l32r	a2, 4008040c <_init_end+0xc>
40080e9e:	02a8      	l32i.n	a10, a2, 0
40080ea0:	03a425        	call8	400848e4 <esp_reent_init>
40080ea3:	0248      	l32i.n	a4, a2, 0
40080ea5:	fd5b31        	l32r	a3, 40080414 <_init_end+0x14>
40080ea8:	fd5ab1        	l32r	a11, 40080410 <_init_end+0x10>
40080eab:	20a330        	or	a10, a3, a3
40080eae:	59d0e5        	call8	400dabbc <fopen>
40080eb1:	14a9      	s32i.n	a10, a4, 4
40080eb3:	f03d      	nop.n
40080eb5:	f03d      	nop.n
40080eb7:	f03d      	nop.n
40080eb9:	f03d      	nop.n
40080ebb:	0258      	l32i.n	a5, a2, 0
40080ebd:	fd5641        	l32r	a4, 40080418 <_init_end+0x18>
40080ec0:	04bd      	mov.n	a11, a4
40080ec2:	03ad      	mov.n	a10, a3
40080ec4:	59cf65        	call8	400dabbc <fopen>
40080ec7:	25a9      	s32i.n	a10, a5, 8
40080ec9:	f03d      	nop.n
40080ecb:	f03d      	nop.n
40080ecd:	f03d      	nop.n
40080ecf:	f03d      	nop.n
40080ed1:	0228      	l32i.n	a2, a2, 0
40080ed3:	04bd      	mov.n	a11, a4
40080ed5:	03ad      	mov.n	a10, a3
40080ed7:	59ce65        	call8	400dabbc <fopen>
40080eda:	32a9      	s32i.n	a10, a2, 12
40080edc:	5553e5        	call8	400d641c <esp_timer_init>
40080edf:	689665        	call8	400e9844 <esp_set_time_from_rtc>
40080ee2:	55c4e5        	call8	400d6b30 <esp_dbg_stubs_init>
40080ee5:	68c565        	call8	400e9b3c <esp_pthread_init>
40080ee8:	da8c      	beqz.n	a10, 40080ef9 <start_cpu0_default+0x81>
40080eea:	fd4cd1        	l32r	a13, 4008041c <_init_end+0x1c>
40080eed:	fd4cc1        	l32r	a12, 40080420 <_init_end+0x20>
40080ef0:	6da1b2        	movi	a11, 0x16d
40080ef3:	fd4ca1        	l32r	a10, 40080424 <_init_end+0x24>
40080ef6:	59bd65        	call8	400daacc <__assert_func>
40080ef9:	5486e5        	call8	400d5768 <do_global_ctors>
40080efc:	552265        	call8	400d6124 <esp_int_wdt_init>
40080eff:	553425        	call8	400d6240 <esp_int_wdt_cpu_init>
40080f02:	55d2a5        	call8	400d6c2c <esp_cache_err_int_init>
40080f05:	54ab65        	call8	400d59bc <esp_crosscore_int_init>
40080f08:	556425        	call8	400d654c <esp_dport_access_int_init>
40080f0b:	6916a5        	call8	400ea074 <spi_flash_init>
40080f0e:	fd46a1        	l32r	a10, 40080428 <_init_end+0x28>
40080f11:	055865        	call8	40086498 <spi_flash_guard_set>
40080f14:	fd46a1        	l32r	a10, 4008042c <_init_end+0x2c>
40080f17:	68d6e5        	call8	400e9c84 <esp_coex_adapter_register>
40080f1a:	0d0c      	movi.n	a13, 0
40080f1c:	01d9      	s32i.n	a13, a1, 0
40080f1e:	0dfd      	mov.n	a15, a13
40080f20:	1e0c      	movi.n	a14, 1
40080f22:	f03d      	nop.n
40080f24:	f03d      	nop.n
40080f26:	fd42c1        	l32r	a12, 40080430 <_init_end+0x30>
40080f29:	fd42b1        	l32r	a11, 40080434 <_init_end+0x34>
40080f2c:	fd43a1        	l32r	a10, 40080438 <_init_end+0x38>
40080f2f:	07f065        	call8	40088e34 <xTaskCreatePinnedToCore>
40080f32:	0e1a26        	beqi	a10, 1, 40080f44 <start_cpu0_default+0xcc>
40080f35:	fd41d1        	l32r	a13, 4008043c <_init_end+0x3c>
40080f38:	fd3ac1        	l32r	a12, 40080420 <_init_end+0x20>
40080f3b:	94a1b2        	movi	a11, 0x194
40080f3e:	fd39a1        	l32r	a10, 40080424 <_init_end+0x24>
40080f41:	59b8a5        	call8	400daacc <__assert_func>
40080f44:	07f7a5        	call8	40088ec0 <vTaskStartScheduler>
40080f47:	0a4265        	call8	4008b36c <abort>
	...

40080f4c <start_cpu1_default>:
40080f4c:	004136        	entry	a1, 32
40080f4f:	fd3d81        	l32r	a8, 40080444 <_init_end+0x44>
40080f52:	0020c0        	memw
40080f55:	0888      	l32i.n	a8, a8, 0
40080f57:	ff4816        	beqz	a8, 40080f4f <start_cpu1_default+0x3>
40080f5a:	552e65        	call8	400d6240 <esp_int_wdt_cpu_init>
40080f5d:	55cce5        	call8	400d6c2c <esp_cache_err_int_init>
40080f60:	54a5a5        	call8	400d59bc <esp_crosscore_int_init>
40080f63:	555ea5        	call8	400d654c <esp_dport_access_int_init>
40080f66:	201110        	or	a1, a1, a1
40080f69:	06f865        	call8	40087ef0 <xPortStartScheduler>
40080f6c:	201110        	or	a1, a1, a1
40080f6f:	0a3fe5        	call8	4008b36c <abort>
	...

40080f74 <call_start_cpu1>:
40080f74:	004136        	entry	a1, 32
40080f77:	fd3421        	l32r	a2, 40080448 <_init_end+0x48>
40080f7a:	13e720        	wsr.vecbase	a2
40080f7d:	00a0a2        	movi	a10, 0
40080f80:	fd3481        	l32r	a8, 40080450 <_init_end+0x50>
40080f83:	0008e0        	callx8	a8
40080f86:	547225        	call8	400d56a8 <cpu_configure_region_protection>
40080f89:	020c      	movi.n	a2, 0
40080f8b:	136120        	wsr.memctl	a2
40080f8e:	fd3181        	l32r	a8, 40080454 <_init_end+0x54>
40080f91:	0008e0        	callx8	a8
40080f94:	fd3181        	l32r	a8, 40080458 <_init_end+0x58>
40080f97:	0008e0        	callx8	a8
40080f9a:	20a220        	or	a10, a2, a2
40080f9d:	fd2f81        	l32r	a8, 4008045c <_init_end+0x5c>
40080fa0:	0008e0        	callx8	a8
40080fa3:	547ee5        	call8	400d5790 <wdt_reset_cpu1_info_enable>
40080fa6:	180c      	movi.n	a8, 1
40080fa8:	fd2921        	l32r	a2, 4008044c <_init_end+0x4c>
40080fab:	004282        	s8i	a8, a2, 0
40080fae:	0020c0        	memw
40080fb1:	fff9a5        	call8	40080f4c <start_cpu1_default>

40080fb4 <call_start_cpu0>:
40080fb4:	004136        	entry	a1, 32
40080fb7:	546f25        	call8	400d56a8 <cpu_configure_region_protection>
40080fba:	020c      	movi.n	a2, 0
40080fbc:	136120        	wsr.memctl	a2
40080fbf:	fd2231        	l32r	a3, 40080448 <_init_end+0x48>
40080fc2:	13e730        	wsr.vecbase	a3
40080fc5:	20a220        	or	a10, a2, a2
40080fc8:	fd3281        	l32r	a8, 40080490 <_init_end+0x90>
40080fcb:	0008e0        	callx8	a8
40080fce:	0a3d      	mov.n	a3, a10
40080fd0:	1a0c      	movi.n	a10, 1
40080fd2:	fd2f81        	l32r	a8, 40080490 <_init_end+0x90>
40080fd5:	0008e0        	callx8	a8
40080fd8:	fd23a1        	l32r	a10, 40080464 <_init_end+0x64>
40080fdb:	fd21c1        	l32r	a12, 40080460 <_init_end+0x60>
40080fde:	c0cca0        	sub	a12, a12, a10
40080fe1:	02bd      	mov.n	a11, a2
40080fe3:	fd2c81        	l32r	a8, 40080494 <_init_end+0x94>
40080fe6:	0008e0        	callx8	a8
40080fe9:	105326        	beqi	a3, 5, 40080ffd <call_start_cpu0+0x49>
40080fec:	fd20a1        	l32r	a10, 4008046c <_init_end+0x6c>
40080fef:	fd1ec1        	l32r	a12, 40080468 <_init_end+0x68>
40080ff2:	c0cca0        	sub	a12, a12, a10
40080ff5:	02bd      	mov.n	a11, a2
40080ff7:	fd2781        	l32r	a8, 40080494 <_init_end+0x94>
40080ffa:	0008e0        	callx8	a8
40080ffd:	5618a5        	call8	400d7188 <bootloader_common_set_flash_cs_timing>
40081000:	fd1c21        	l32r	a2, 40080470 <_init_end+0x70>
40081003:	0020c0        	memw
40081006:	0228      	l32i.n	a2, a2, 0
40081008:	256207        	bbci	a2, 0, 40081031 <call_start_cpu0+0x7d>
4008100b:	02d265        	call8	40083d30 <esp_log_timestamp>
4008100e:	fd1921        	l32r	a2, 40080474 <_init_end+0x74>
40081011:	02cd      	mov.n	a12, a2
40081013:	0abd      	mov.n	a11, a10
40081015:	fd18a1        	l32r	a10, 40080478 <_init_end+0x78>
40081018:	fd2081        	l32r	a8, 40080498 <_init_end+0x98>
4008101b:	0008e0        	callx8	a8
4008101e:	02d125        	call8	40083d30 <esp_log_timestamp>
40081021:	02cd      	mov.n	a12, a2
40081023:	0abd      	mov.n	a11, a10
40081025:	fd15a1        	l32r	a10, 4008047c <_init_end+0x7c>
40081028:	fd1c81        	l32r	a8, 40080498 <_init_end+0x98>
4008102b:	0008e0        	callx8	a8
4008102e:	0a33e5        	call8	4008b36c <abort>
40081031:	0074a5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081034:	1a0c      	movi.n	a10, 1
40081036:	fd1981        	l32r	a8, 4008049c <_init_end+0x9c>
40081039:	0008e0        	callx8	a8
4008103c:	008125        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
4008103f:	0073e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081042:	1a0c      	movi.n	a10, 1
40081044:	fd1781        	l32r	a8, 400804a0 <_init_end+0xa0>
40081047:	0008e0        	callx8	a8
4008104a:	008065        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
4008104d:	1a0c      	movi.n	a10, 1
4008104f:	0372e5        	call8	4008477c <esp_cpu_unstall>
40081052:	fd0ba1        	l32r	a10, 40080480 <_init_end+0x80>
40081055:	008f25        	call8	40081948 <esp_dport_access_reg_read>
40081058:	50ea07        	bbsi	a10, 0, 400810ac <call_start_cpu0+0xf8>
4008105b:	fd0921        	l32r	a2, 40080480 <_init_end+0x80>
4008105e:	02ad      	mov.n	a10, a2
40081060:	008e65        	call8	40081948 <esp_dport_access_reg_read>
40081063:	140c      	movi.n	a4, 1
40081065:	20aa40        	or	a10, a10, a4
40081068:	0020c0        	memw
4008106b:	02a9      	s32i.n	a10, a2, 0
4008106d:	f03d      	nop.n
4008106f:	f03d      	nop.n
40081071:	f03d      	nop.n
40081073:	f03d      	nop.n
40081075:	fd0321        	l32r	a2, 40080484 <_init_end+0x84>
40081078:	02ad      	mov.n	a10, a2
4008107a:	008ce5        	call8	40081948 <esp_dport_access_reg_read>
4008107d:	e37c      	movi.n	a3, -2
4008107f:	10aa30        	and	a10, a10, a3
40081082:	0020c0        	memw
40081085:	02a9      	s32i.n	a10, a2, 0
40081087:	f03d      	nop.n
40081089:	f03d      	nop.n
4008108b:	f03d      	nop.n
4008108d:	f03d      	nop.n
4008108f:	fcfe21        	l32r	a2, 40080488 <_init_end+0x88>
40081092:	02ad      	mov.n	a10, a2
40081094:	008b25        	call8	40081948 <esp_dport_access_reg_read>
40081097:	20aa40        	or	a10, a10, a4
4008109a:	0020c0        	memw
4008109d:	02a9      	s32i.n	a10, a2, 0
4008109f:	02ad      	mov.n	a10, a2
400810a1:	008a65        	call8	40081948 <esp_dport_access_reg_read>
400810a4:	10aa30        	and	a10, a10, a3
400810a7:	0020c0        	memw
400810aa:	02a9      	s32i.n	a10, a2, 0
400810ac:	f03d      	nop.n
400810ae:	f03d      	nop.n
400810b0:	f03d      	nop.n
400810b2:	f03d      	nop.n
400810b4:	fcf6a1        	l32r	a10, 4008048c <_init_end+0x8c>
400810b7:	fce681        	l32r	a8, 40080450 <_init_end+0x50>
400810ba:	0008e0        	callx8	a8
400810bd:	000206        	j	400810c9 <call_start_cpu0+0x115>
400810c0:	64a0a2        	movi	a10, 100
400810c3:	fcf881        	l32r	a8, 400804a4 <_init_end+0xa4>
400810c6:	0008e0        	callx8	a8
400810c9:	fce081        	l32r	a8, 4008044c <_init_end+0x4c>
400810cc:	000882        	l8ui	a8, a8, 0
400810cf:	fed816        	beqz	a8, 400810c0 <call_start_cpu0+0x10c>
400810d2:	595f65        	call8	400da6c8 <heap_caps_init>
400810d5:	ffda25        	call8	40080e78 <start_cpu0_default>

400810d8 <esp_clk_cpu_freq>:
400810d8:	004136        	entry	a1, 32
400810db:	fcf321        	l32r	a2, 400804a8 <_init_end+0xa8>
400810de:	0228      	l32i.n	a2, a2, 0
400810e0:	fcf381        	l32r	a8, 400804ac <_init_end+0xac>
400810e3:	822280        	mull	a2, a2, a8
400810e6:	f01d      	retw.n

400810e8 <esp_clk_apb_freq>:
400810e8:	004136        	entry	a1, 32
400810eb:	fcef21        	l32r	a2, 400804a8 <_init_end+0xa8>
400810ee:	0288      	l32i.n	a8, a2, 0
400810f0:	025c      	movi.n	a2, 80
400810f2:	638280        	minu	a8, a2, a8
400810f5:	fced21        	l32r	a2, 400804ac <_init_end+0xac>
400810f8:	822820        	mull	a2, a8, a2
400810fb:	f01d      	retw.n
400810fd:	000000        	ill

40081100 <esp_clk_xtal_freq>:
40081100:	004136        	entry	a1, 32
40081103:	0b9ba5        	call8	4008cabc <rtc_clk_xtal_freq_get>
40081106:	fce921        	l32r	a2, 400804ac <_init_end+0xac>
40081109:	822a20        	mull	a2, a10, a2
4008110c:	f01d      	retw.n
	...

40081110 <ets_update_cpu_frequency>:
40081110:	004136        	entry	a1, 32
40081113:	fce581        	l32r	a8, 400804a8 <_init_end+0xa8>
40081116:	0829      	s32i.n	a2, a8, 0
40081118:	f03d      	nop.n
4008111a:	f03d      	nop.n
4008111c:	f03d      	nop.n
4008111e:	f03d      	nop.n
40081120:	fce481        	l32r	a8, 400804b0 <_init_end+0xb0>
40081123:	0829      	s32i.n	a2, a8, 0
40081125:	f01d      	retw.n
	...

40081128 <esp_crosscore_int_send>:
40081128:	004136        	entry	a1, 32
4008112b:	0e22a6        	blti	a2, 2, 4008113d <esp_crosscore_int_send+0x15>
4008112e:	fce1d1        	l32r	a13, 400804b4 <_init_end+0xb4>
40081131:	fce1c1        	l32r	a12, 400804b8 <_init_end+0xb8>
40081134:	61a0b2        	movi	a11, 97
40081137:	fce1a1        	l32r	a10, 400804bc <_init_end+0xbc>
4008113a:	599925        	call8	400daacc <__assert_func>
4008113d:	fce041        	l32r	a4, 400804c0 <_init_end+0xc0>
40081140:	04ad      	mov.n	a10, a4
40081142:	0794e5        	call8	40088a90 <vTaskEnterCritical>
40081145:	fcdf81        	l32r	a8, 400804c4 <_init_end+0xc4>
40081148:	a08280        	addx4	a8, a2, a8
4008114b:	0020c0        	memw
4008114e:	0898      	l32i.n	a9, a8, 0
40081150:	203930        	or	a3, a9, a3
40081153:	0020c0        	memw
40081156:	0839      	s32i.n	a3, a8, 0
40081158:	04ad      	mov.n	a10, a4
4008115a:	07a765        	call8	40088bd0 <vTaskExitCritical>
4008115d:	d2cc      	bnez.n	a2, 4008116e <esp_crosscore_int_send+0x46>
4008115f:	130c      	movi.n	a3, 1
40081161:	fcd921        	l32r	a2, 400804c8 <_init_end+0xc8>
40081164:	0020c0        	memw
40081167:	0239      	s32i.n	a3, a2, 0
40081169:	f01d      	retw.n
4008116b:	000000        	ill
4008116e:	130c      	movi.n	a3, 1
40081170:	fcd721        	l32r	a2, 400804cc <_init_end+0xcc>
40081173:	0020c0        	memw
40081176:	0239      	s32i.n	a3, a2, 0
40081178:	f01d      	retw.n
	...

4008117c <esp_crosscore_isr>:
4008117c:	004136        	entry	a1, 32
4008117f:	03eb30        	rsr.prid	a3
40081182:	043d30        	extui	a3, a3, 13, 1
40081185:	b3cc      	bnez.n	a3, 40081194 <esp_crosscore_isr+0x18>
40081187:	040c      	movi.n	a4, 0
40081189:	fccf31        	l32r	a3, 400804c8 <_init_end+0xc8>
4008118c:	0020c0        	memw
4008118f:	0349      	s32i.n	a4, a3, 0
40081191:	000286        	j	4008119f <esp_crosscore_isr+0x23>
40081194:	00a042        	movi	a4, 0
40081197:	fccd31        	l32r	a3, 400804cc <_init_end+0xcc>
4008119a:	0020c0        	memw
4008119d:	0349      	s32i.n	a4, a3, 0
4008119f:	f03d      	nop.n
400811a1:	f03d      	nop.n
400811a3:	f03d      	nop.n
400811a5:	f03d      	nop.n
400811a7:	fcc631        	l32r	a3, 400804c0 <_init_end+0xc0>
400811aa:	03ad      	mov.n	a10, a3
400811ac:	078e25        	call8	40088a90 <vTaskEnterCritical>
400811af:	0020c0        	memw
400811b2:	0248      	l32i.n	a4, a2, 0
400811b4:	080c      	movi.n	a8, 0
400811b6:	0020c0        	memw
400811b9:	0289      	s32i.n	a8, a2, 0
400811bb:	03ad      	mov.n	a10, a3
400811bd:	07a125        	call8	40088bd0 <vTaskExitCritical>
400811c0:	026407        	bbci	a4, 0, 400811c6 <esp_crosscore_isr+0x4a>
400811c3:	08ea25        	call8	4008a064 <_frxt_setup_switch>
400811c6:	f01d      	retw.n

400811c8 <esp_crosscore_int_send_yield>:
400811c8:	004136        	entry	a1, 32
400811cb:	1b0c      	movi.n	a11, 1
400811cd:	02ad      	mov.n	a10, a2
400811cf:	fff5a5        	call8	40081128 <esp_crosscore_int_send>
400811d2:	f01d      	retw.n

400811d4 <esp_crosscore_int_send_freq_switch>:
400811d4:	004136        	entry	a1, 32
400811d7:	2b0c      	movi.n	a11, 2
400811d9:	02ad      	mov.n	a10, a2
400811db:	fff4e5        	call8	40081128 <esp_crosscore_int_send>
400811de:	f01d      	retw.n

400811e0 <shared_intr_isr>:
400811e0:	004136        	entry	a1, 32
400811e3:	1228      	l32i.n	a2, a2, 4
400811e5:	fcbaa1        	l32r	a10, 400804d0 <_init_end+0xd0>
400811e8:	078a65        	call8	40088a90 <vTaskEnterCritical>
400811eb:	0007c6        	j	4008120e <shared_intr_isr+0x2e>
400811ee:	000000        	ill
400811f1:	0288      	l32i.n	a8, a2, 0
400811f3:	15e807        	bbsi	a8, 0, 4008120c <shared_intr_isr+0x2c>
400811f6:	1288      	l32i.n	a8, a2, 4
400811f8:	988c      	beqz.n	a8, 40081205 <shared_intr_isr+0x25>
400811fa:	0020c0        	memw
400811fd:	0898      	l32i.n	a9, a8, 0
400811ff:	022282        	l32i	a8, a2, 8
40081202:	060987        	bnone	a9, a8, 4008120c <shared_intr_isr+0x2c>
40081205:	3288      	l32i.n	a8, a2, 12
40081207:	42a8      	l32i.n	a10, a2, 16
40081209:	0008e0        	callx8	a8
4008120c:	5228      	l32i.n	a2, a2, 20
4008120e:	fdf256        	bnez	a2, 400811f1 <shared_intr_isr+0x11>
40081211:	fcafa1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081214:	079ba5        	call8	40088bd0 <vTaskExitCritical>
40081217:	f01d      	retw.n
40081219:	000000        	ill

4008121c <esp_intr_set_in_iram>:
4008121c:	004136        	entry	a1, 32
4008121f:	743030        	extui	a3, a3, 0, 8
40081222:	08f216        	beqz	a2, 400812b5 <esp_intr_set_in_iram+0x99>
40081225:	002222        	l32i	a2, a2, 0
40081228:	001282        	l16ui	a8, a2, 0
4008122b:	026827        	bbci	a8, 2, 40081231 <esp_intr_set_in_iram+0x15>
4008122e:	002286        	j	400812bc <esp_intr_set_in_iram+0xa0>
40081231:	fca7a1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081234:	0785a5        	call8	40088a90 <vTaskEnterCritical>
40081237:	002282        	l32i	a8, a2, 0
4008123a:	458180        	extui	a8, a8, 17, 5
4008123d:	01a092        	movi	a9, 1
40081240:	401800        	ssl	a8
40081243:	a18900        	sll	a8, a9
40081246:	e3ac      	beqz.n	a3, 40081278 <esp_intr_set_in_iram+0x5c>
40081248:	001292        	l16ui	a9, a2, 0
4008124b:	230c      	movi.n	a3, 2
4008124d:	203930        	or	a3, a9, a3
40081250:	005232        	s16i	a3, a2, 0
40081253:	0020c0        	memw
40081256:	f03d      	nop.n
40081258:	f03d      	nop.n
4008125a:	f03d      	nop.n
4008125c:	f03d      	nop.n
4008125e:	0228      	l32i.n	a2, a2, 0
40081260:	052020        	extui	a2, a2, 16, 1
40081263:	f37c      	movi.n	a3, -1
40081265:	308380        	xor	a8, a3, a8
40081268:	fc9b31        	l32r	a3, 400804d4 <_init_end+0xd4>
4008126b:	a02230        	addx4	a2, a2, a3
4008126e:	0238      	l32i.n	a3, a2, 0
40081270:	103380        	and	a3, a3, a8
40081273:	0239      	s32i.n	a3, a2, 0
40081275:	000a86        	j	400812a3 <esp_intr_set_in_iram+0x87>
40081278:	001292        	l16ui	a9, a2, 0
4008127b:	fdaf32        	movi	a3, -3
4008127e:	103930        	and	a3, a9, a3
40081281:	005232        	s16i	a3, a2, 0
40081284:	0020c0        	memw
40081287:	f03d      	nop.n
40081289:	f03d      	nop.n
4008128b:	f03d      	nop.n
4008128d:	f03d      	nop.n
4008128f:	002222        	l32i	a2, a2, 0
40081292:	052020        	extui	a2, a2, 16, 1
40081295:	fc8f31        	l32r	a3, 400804d4 <_init_end+0xd4>
40081298:	a02230        	addx4	a2, a2, a3
4008129b:	002232        	l32i	a3, a2, 0
4008129e:	208380        	or	a8, a3, a8
400812a1:	0289      	s32i.n	a8, a2, 0
400812a3:	f03d      	nop.n
400812a5:	f03d      	nop.n
400812a7:	f03d      	nop.n
400812a9:	f03d      	nop.n
400812ab:	fc89a1        	l32r	a10, 400804d0 <_init_end+0xd0>
400812ae:	079225        	call8	40088bd0 <vTaskExitCritical>
400812b1:	020c      	movi.n	a2, 0
400812b3:	f01d      	retw.n
400812b5:	02a122        	movi	a2, 0x102
400812b8:	f01d      	retw.n
400812ba:	220000        	orb	b0, b0, b0
400812bd:	1d02a1        	l32r	a10, 400486c8 <lld_evt_get_next_free_slot+0x1d9c>
400812c0:	0000f0        	callx12	a0
	...

400812c4 <esp_intr_enable>:
400812c4:	004136        	entry	a1, 32
400812c7:	07e216        	beqz	a2, 40081349 <esp_intr_enable+0x85>
400812ca:	fc81a1        	l32r	a10, 400804d0 <_init_end+0xd0>
400812cd:	077c25        	call8	40088a90 <vTaskEnterCritical>
400812d0:	012282        	l32i	a8, a2, 4
400812d3:	023816        	beqz	a8, 400812fa <esp_intr_enable+0x36>
400812d6:	0018a2        	l16ui	a10, a8, 0
400812d9:	feaf92        	movi	a9, -2
400812dc:	109a90        	and	a9, a10, a9
400812df:	005892        	s16i	a9, a8, 0
400812e2:	0020c0        	memw
400812e5:	f03d      	nop.n
400812e7:	f03d      	nop.n
400812e9:	f03d      	nop.n
400812eb:	f03d      	nop.n
400812ed:	1288      	l32i.n	a8, a2, 4
400812ef:	08b8      	l32i.n	a11, a8, 0
400812f1:	74b1b0        	extui	a11, a11, 1, 8
400812f4:	23bb00        	sext	a11, a11, 7
400812f7:	000246        	j	40081304 <esp_intr_enable+0x40>
400812fa:	0288      	l32i.n	a8, a2, 0
400812fc:	08b8      	l32i.n	a11, a8, 0
400812fe:	75b6b0        	extui	a11, a11, 22, 8
40081301:	23bb00        	sext	a11, a11, 7
40081304:	015b96        	bltz	a11, 4008131d <esp_intr_enable+0x59>
40081307:	0228      	l32i.n	a2, a2, 0
40081309:	0022a2        	l32i	a10, a2, 0
4008130c:	45c1a0        	extui	a12, a10, 17, 5
4008130f:	05a0a0        	extui	a10, a10, 16, 1
40081312:	fc7181        	l32r	a8, 400804d8 <_init_end+0xd8>
40081315:	0008e0        	callx8	a8
40081318:	0008c6        	j	4008133f <esp_intr_enable+0x7b>
4008131b:	820000        	mull	a0, a0, a0
4008131e:	220022        	l8ui	a2, a0, 34
40081321:	0028      	l32i.n	a2, a0, 0
40081323:	052020        	extui	a2, a2, 16, 1
40081326:	03eb90        	rsr.prid	a9
40081329:	049d90        	extui	a9, a9, 13, 1
4008132c:	209297        	bne	a2, a9, 40081350 <esp_intr_enable+0x8c>
4008132f:	0828      	l32i.n	a2, a8, 0
40081331:	452120        	extui	a2, a2, 17, 5
40081334:	1a0c      	movi.n	a10, 1
40081336:	401200        	ssl	a2
40081339:	a1aa00        	sll	a10, a10
4008133c:	08fee5        	call8	4008a32c <xt_ints_on>
4008133f:	fc64a1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081342:	0788e5        	call8	40088bd0 <vTaskExitCritical>
40081345:	020c      	movi.n	a2, 0
40081347:	f01d      	retw.n
40081349:	02a122        	movi	a2, 0x102
4008134c:	f01d      	retw.n
4008134e:	220000        	orb	b0, b0, b0
40081351:	1d02a1        	l32r	a10, 4004875c <lld_evt_get_next_free_slot+0x1e30>
40081354:	0000f0        	callx12	a0
	...

40081358 <esp_intr_disable>:
40081358:	004136        	entry	a1, 32
4008135b:	0c5216        	beqz	a2, 40081424 <esp_intr_disable+0xcc>
4008135e:	fc5ca1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081361:	0772e5        	call8	40088a90 <vTaskEnterCritical>
40081364:	012282        	l32i	a8, a2, 4
40081367:	051816        	beqz	a8, 400813bc <esp_intr_disable+0x64>
4008136a:	0018a2        	l16ui	a10, a8, 0
4008136d:	01a092        	movi	a9, 1
40081370:	209a90        	or	a9, a10, a9
40081373:	005892        	s16i	a9, a8, 0
40081376:	0020c0        	memw
40081379:	f03d      	nop.n
4008137b:	f03d      	nop.n
4008137d:	f03d      	nop.n
4008137f:	f03d      	nop.n
40081381:	1288      	l32i.n	a8, a2, 4
40081383:	08b8      	l32i.n	a11, a8, 0
40081385:	74b1b0        	extui	a11, a11, 1, 8
40081388:	23bb00        	sext	a11, a11, 7
4008138b:	0288      	l32i.n	a8, a2, 0
4008138d:	012892        	l32i	a9, a8, 4
40081390:	020956        	bnez	a9, 400813b4 <esp_intr_disable+0x5c>
40081393:	fc52d1        	l32r	a13, 400804dc <_init_end+0xdc>
40081396:	fc52c1        	l32r	a12, 400804e0 <_init_end+0xe0>
40081399:	3ca3b2        	movi	a11, 0x33c
4008139c:	fc52a1        	l32r	a10, 400804e4 <_init_end+0xe4>
4008139f:	5972e5        	call8	400daacc <__assert_func>
400813a2:	0988      	l32i.n	a8, a9, 0
400813a4:	748180        	extui	a8, a8, 1, 8
400813a7:	238800        	sext	a8, a8, 7
400813aa:	049b87        	bne	a11, a8, 400813b2 <esp_intr_disable+0x5a>
400813ad:	0988      	l32i.n	a8, a9, 0
400813af:	1a6807        	bbci	a8, 0, 400813cd <esp_intr_disable+0x75>
400813b2:	5998      	l32i.n	a9, a9, 20
400813b4:	fea956        	bnez	a9, 400813a2 <esp_intr_disable+0x4a>
400813b7:	180c      	movi.n	a8, 1
400813b9:	000486        	j	400813cf <esp_intr_disable+0x77>
400813bc:	0288      	l32i.n	a8, a2, 0
400813be:	08b8      	l32i.n	a11, a8, 0
400813c0:	75b6b0        	extui	a11, a11, 22, 8
400813c3:	23bb00        	sext	a11, a11, 7
400813c6:	180c      	movi.n	a8, 1
400813c8:	0000c6        	j	400813cf <esp_intr_disable+0x77>
400813cb:	0c0000        	lsi	f0, a0, 48
400813ce:	9608      	l32i.n	a0, a6, 36
400813d0:	015b      	addi.n	a0, a1, 5
400813d2:	043816        	beqz	a8, 40081419 <esp_intr_disable+0xc1>
400813d5:	0228      	l32i.n	a2, a2, 0
400813d7:	02a8      	l32i.n	a10, a2, 0
400813d9:	6c0c      	movi.n	a12, 6
400813db:	05a0a0        	extui	a10, a10, 16, 1
400813de:	fc3e81        	l32r	a8, 400804d8 <_init_end+0xd8>
400813e1:	0008e0        	callx8	a8
400813e4:	000c46        	j	40081419 <esp_intr_disable+0xc1>
400813e7:	228200        	orb	b8, b2, b0
400813ea:	282200        	lsi	f0, a2, 160
400813ed:	202000        	or	a2, a0, a0
400813f0:	eb9005        	call0	4006ccf4 <__udivmoddi4+0x8100>
400813f3:	9d9003        	lsi	f0, a0, 0x274
400813f6:	129704        	lsi	f0, a7, 72
400813f9:	a10b      	addi.n	a10, a1, -1
400813fb:	25fc35        	call12	400a73bc <_iram_end+0x19868>
400813fe:	077d      	mov.n	a7, a7
40081400:	02a122        	movi	a2, 0x102
40081403:	000090        	retw
40081406:	0828      	l32i.n	a2, a8, 0
40081408:	452120        	extui	a2, a2, 17, 5
4008140b:	1a0c      	movi.n	a10, 1
4008140d:	401200        	ssl	a2
40081410:	a1aa00        	sll	a10, a10
40081413:	201110        	or	a1, a1, a1
40081416:	08f2e5        	call8	4008a344 <xt_ints_off>
40081419:	fc2da1        	l32r	a10, 400804d0 <_init_end+0xd0>
4008141c:	077b25        	call8	40088bd0 <vTaskExitCritical>
4008141f:	020c      	movi.n	a2, 0
40081421:	f01d      	retw.n
40081423:	a12200        	sll	a2, a2
40081426:	f01d02        	l16ui	a0, a13, 0x1e0
40081429:	000000        	ill

4008142c <esp_intr_noniram_disable>:
4008142c:	004136        	entry	a1, 32
4008142f:	03eb80        	rsr.prid	a8
40081432:	048d80        	extui	a8, a8, 13, 1
40081435:	fc2791        	l32r	a9, 400804d4 <_init_end+0xd4>
40081438:	a09890        	addx4	a9, a8, a9
4008143b:	0998      	l32i.n	a9, a9, 0
4008143d:	fa7c      	movi.n	a10, -1
4008143f:	30ba90        	xor	a11, a10, a9
40081442:	fc29a1        	l32r	a10, 400804e8 <_init_end+0xe8>
40081445:	aa8a      	add.n	a10, a10, a8
40081447:	000aa2        	l8ui	a10, a10, 0
4008144a:	002a16        	beqz	a10, 40081450 <esp_intr_noniram_disable+0x24>
4008144d:	09f1e5        	call8	4008b36c <abort>
40081450:	fc26a1        	l32r	a10, 400804e8 <_init_end+0xe8>
40081453:	aa8a      	add.n	a10, a10, a8
40081455:	1c0c      	movi.n	a12, 1
40081457:	004ac2        	s8i	a12, a10, 0
4008145a:	0020c0        	memw
4008145d:	0a0c      	movi.n	a10, 0
4008145f:	61e4a0        	xsr.intenable	a10
40081462:	002010        	rsync
40081465:	103ab0        	and	a3, a10, a11
40081468:	13e430        	wsr.intenable	a3
4008146b:	002010        	rsync
4008146e:	109a90        	and	a9, a10, a9
40081471:	f03d      	nop.n
40081473:	f03d      	nop.n
40081475:	fc1da1        	l32r	a10, 400804ec <_init_end+0xec>
40081478:	a088a0        	addx4	a8, a8, a10
4008147b:	0899      	s32i.n	a9, a8, 0
4008147d:	f01d      	retw.n
	...

40081480 <esp_intr_noniram_enable>:
40081480:	004136        	entry	a1, 32
40081483:	03eb80        	rsr.prid	a8
40081486:	048d80        	extui	a8, a8, 13, 1
40081489:	fc1891        	l32r	a9, 400804ec <_init_end+0xec>
4008148c:	a09890        	addx4	a9, a8, a9
4008148f:	0029a2        	l32i	a10, a9, 0
40081492:	fc1591        	l32r	a9, 400804e8 <_init_end+0xe8>
40081495:	809980        	add	a9, a9, a8
40081498:	000992        	l8ui	a9, a9, 0
4008149b:	002956        	bnez	a9, 400814a1 <esp_intr_noniram_enable+0x21>
4008149e:	09ece5        	call8	4008b36c <abort>
400814a1:	fc1191        	l32r	a9, 400804e8 <_init_end+0xe8>
400814a4:	898a      	add.n	a8, a9, a8
400814a6:	090c      	movi.n	a9, 0
400814a8:	004892        	s8i	a9, a8, 0
400814ab:	0020c0        	memw
400814ae:	030c      	movi.n	a3, 0
400814b0:	61e430        	xsr.intenable	a3
400814b3:	002010        	rsync
400814b6:	2033a0        	or	a3, a3, a10
400814b9:	13e430        	wsr.intenable	a3
400814bc:	002010        	rsync
400814bf:	f01d      	retw.n
400814c1:	000000        	ill

400814c4 <ets_isr_unmask>:
400814c4:	004136        	entry	a1, 32
400814c7:	02ad      	mov.n	a10, a2
400814c9:	08e625        	call8	4008a32c <xt_ints_on>
400814cc:	f01d      	retw.n
	...

400814d0 <ets_isr_mask>:
400814d0:	004136        	entry	a1, 32
400814d3:	02ad      	mov.n	a10, a2
400814d5:	08e6e5        	call8	4008a344 <xt_ints_off>
400814d8:	f01d      	retw.n
	...

400814dc <tick_hook>:
400814dc:	004136        	entry	a1, 32
400814df:	03eb80        	rsr.prid	a8
400814e2:	048d80        	extui	a8, a8, 13, 1
400814e5:	c88c      	beqz.n	a8, 400814f5 <tick_hook+0x19>
400814e7:	190c      	movi.n	a9, 1
400814e9:	fc0181        	l32r	a8, 400804f0 <_init_end+0xf0>
400814ec:	004892        	s8i	a9, a8, 0
400814ef:	0020c0        	memw
400814f2:	f01d      	retw.n
400814f4:	fe8100        	f64iter	a8, a1, a0, 3, 1
400814f7:	82fb      	addi.n	a8, a2, 15
400814f9:	0008      	l32i.n	a0, a0, 0
400814fb:	d8bc      	beqz.n	a8, 4008153c <tick_hook+0x60>
400814fd:	fbfd81        	l32r	a8, 400804f4 <_init_end+0xf4>
40081500:	fbfe91        	l32r	a9, 400804f8 <_init_end+0xf8>
40081503:	0020c0        	memw
40081506:	196892        	s32i	a9, a8, 100
40081509:	58a292        	movi	a9, 0x258
4008150c:	0020c0        	memw
4008150f:	146892        	s32i	a9, a8, 80
40081512:	b0a492        	movi	a9, 0x4b0
40081515:	0020c0        	memw
40081518:	156892        	s32i	a9, a8, 84
4008151b:	190c      	movi.n	a9, 1
4008151d:	0020c0        	memw
40081520:	186892        	s32i	a9, a8, 96
40081523:	090c      	movi.n	a9, 0
40081525:	0020c0        	memw
40081528:	196892        	s32i	a9, a8, 100
4008152b:	f03d      	nop.n
4008152d:	f03d      	nop.n
4008152f:	f03d      	nop.n
40081531:	f03d      	nop.n
40081533:	fbef81        	l32r	a8, 400804f0 <_init_end+0xf0>
40081536:	004892        	s8i	a9, a8, 0
40081539:	0020c0        	memw
4008153c:	f01d      	retw.n
	...

40081540 <timer_armed>:
40081540:	004136        	entry	a1, 32
40081543:	0288      	l32i.n	a8, a2, 0
40081545:	1228      	l32i.n	a2, a2, 4
40081547:	208820        	or	a8, a8, a2
4008154a:	020c      	movi.n	a2, 0
4008154c:	190c      	movi.n	a9, 1
4008154e:	932980        	movnez	a2, a9, a8
40081551:	f01d      	retw.n
	...

40081554 <is_initialized>:
40081554:	004136        	entry	a1, 32
40081557:	fbe921        	l32r	a2, 400804fc <_init_end+0xfc>
4008155a:	0288      	l32i.n	a8, a2, 0
4008155c:	020c      	movi.n	a2, 0
4008155e:	190c      	movi.n	a9, 1
40081560:	932980        	movnez	a2, a9, a8
40081563:	f01d      	retw.n
40081565:	000000        	ill

40081568 <timer_list_lock>:
40081568:	004136        	entry	a1, 32
4008156b:	fbe5a1        	l32r	a10, 40080500 <_init_end+0x100>
4008156e:	075225        	call8	40088a90 <vTaskEnterCritical>
40081571:	f01d      	retw.n
	...

40081574 <timer_list_unlock>:
40081574:	004136        	entry	a1, 32
40081577:	fbe2a1        	l32r	a10, 40080500 <_init_end+0x100>
4008157a:	076565        	call8	40088bd0 <vTaskExitCritical>
4008157d:	f01d      	retw.n
	...

40081580 <timer_insert>:
40081580:	004136        	entry	a1, 32
40081583:	fffe65        	call8	40081568 <timer_list_lock>
40081586:	fbdf81        	l32r	a8, 40080504 <_init_end+0x104>
40081589:	0888      	l32i.n	a8, a8, 0
4008158b:	04e856        	bnez	a8, 400815dd <timer_insert+0x5d>
4008158e:	6289      	s32i.n	a8, a2, 24
40081590:	488c      	beqz.n	a8, 40081598 <timer_insert+0x18>
40081592:	18c292        	addi	a9, a2, 24
40081595:	076892        	s32i	a9, a8, 28
40081598:	f03d      	nop.n
4008159a:	f03d      	nop.n
4008159c:	f03d      	nop.n
4008159e:	f03d      	nop.n
400815a0:	fbd981        	l32r	a8, 40080504 <_init_end+0x104>
400815a3:	0829      	s32i.n	a2, a8, 0
400815a5:	7289      	s32i.n	a8, a2, 28
400815a7:	001a46        	j	40081614 <timer_insert+0x94>
400815aa:	02d8      	l32i.n	a13, a2, 0
400815ac:	1298      	l32i.n	a9, a2, 4
400815ae:	08c8      	l32i.n	a12, a8, 0
400815b0:	0128a2        	l32i	a10, a8, 4
400815b3:	0539a7        	bltu	a9, a10, 400815bc <timer_insert+0x3c>
400815b6:	1c9a97        	bne	a10, a9, 400815d6 <timer_insert+0x56>
400815b9:	19bdc7        	bgeu	a13, a12, 400815d6 <timer_insert+0x56>
400815bc:	7898      	l32i.n	a9, a8, 28
400815be:	7299      	s32i.n	a9, a2, 28
400815c0:	6289      	s32i.n	a8, a2, 24
400815c2:	f03d      	nop.n
400815c4:	f03d      	nop.n
400815c6:	f03d      	nop.n
400815c8:	f03d      	nop.n
400815ca:	7898      	l32i.n	a9, a8, 28
400815cc:	0929      	s32i.n	a2, a9, 0
400815ce:	18c292        	addi	a9, a2, 24
400815d1:	7899      	s32i.n	a9, a8, 28
400815d3:	000306        	j	400815e3 <timer_insert+0x63>
400815d6:	08bd      	mov.n	a11, a8
400815d8:	6888      	l32i.n	a8, a8, 24
400815da:	000086        	j	400815e0 <timer_insert+0x60>
400815dd:	00a0b2        	movi	a11, 0
400815e0:	fc6856        	bnez	a8, 400815aa <timer_insert+0x2a>
400815e3:	02d856        	bnez	a8, 40081614 <timer_insert+0x94>
400815e6:	00eb56        	bnez	a11, 400815f8 <timer_insert+0x78>
400815e9:	fbc7d1        	l32r	a13, 40080508 <_init_end+0x108>
400815ec:	fbc8c1        	l32r	a12, 4008050c <_init_end+0x10c>
400815ef:	c4a0b2        	movi	a11, 196
400815f2:	fbc7a1        	l32r	a10, 40080510 <_init_end+0x110>
400815f5:	594d65        	call8	400daacc <__assert_func>
400815f8:	6b88      	l32i.n	a8, a11, 24
400815fa:	6289      	s32i.n	a8, a2, 24
400815fc:	d88c      	beqz.n	a8, 4008160d <timer_insert+0x8d>
400815fe:	f03d      	nop.n
40081600:	f03d      	nop.n
40081602:	f03d      	nop.n
40081604:	f03d      	nop.n
40081606:	6b88      	l32i.n	a8, a11, 24
40081608:	18c292        	addi	a9, a2, 24
4008160b:	7899      	s32i.n	a9, a8, 28
4008160d:	6b29      	s32i.n	a2, a11, 24
4008160f:	18cbb2        	addi	a11, a11, 24
40081612:	72b9      	s32i.n	a11, a2, 28
40081614:	f03d      	nop.n
40081616:	f03d      	nop.n
40081618:	f03d      	nop.n
4008161a:	f03d      	nop.n
4008161c:	fbba81        	l32r	a8, 40080504 <_init_end+0x104>
4008161f:	0888      	l32i.n	a8, a8, 0
40081621:	089287        	bne	a2, a8, 4008162d <timer_insert+0xad>
40081624:	0022a2        	l32i	a10, a2, 0
40081627:	0122b2        	l32i	a11, a2, 4
4008162a:	00b0a5        	call8	40082134 <esp_timer_impl_set_alarm>
4008162d:	fff465        	call8	40081574 <timer_list_unlock>
40081630:	020c      	movi.n	a2, 0
40081632:	f01d      	retw.n

40081634 <timer_remove>:
40081634:	004136        	entry	a1, 32
40081637:	fff325        	call8	40081568 <timer_list_lock>
4008163a:	6288      	l32i.n	a8, a2, 24
4008163c:	288c      	beqz.n	a8, 40081642 <timer_remove+0xe>
4008163e:	7298      	l32i.n	a9, a2, 28
40081640:	7899      	s32i.n	a9, a8, 28
40081642:	f03d      	nop.n
40081644:	f03d      	nop.n
40081646:	f03d      	nop.n
40081648:	f03d      	nop.n
4008164a:	7288      	l32i.n	a8, a2, 28
4008164c:	6298      	l32i.n	a9, a2, 24
4008164e:	0899      	s32i.n	a9, a8, 0
40081650:	f03d      	nop.n
40081652:	f03d      	nop.n
40081654:	f03d      	nop.n
40081656:	f03d      	nop.n
40081658:	fbaf81        	l32r	a8, 40080514 <_init_end+0x114>
4008165b:	fbae91        	l32r	a9, 40080514 <_init_end+0x114>
4008165e:	0289      	s32i.n	a8, a2, 0
40081660:	1299      	s32i.n	a9, a2, 4
40081662:	2289      	s32i.n	a8, a2, 8
40081664:	3299      	s32i.n	a9, a2, 12
40081666:	fff0e5        	call8	40081574 <timer_list_unlock>
40081669:	020c      	movi.n	a2, 0
4008166b:	f01d      	retw.n
4008166d:	000000        	ill

40081670 <timer_alarm_handler>:
40081670:	006136        	entry	a1, 48
40081673:	0cc1b2        	addi	a11, a1, 12
40081676:	fba881        	l32r	a8, 40080518 <_init_end+0x118>
40081679:	0028a2        	l32i	a10, a8, 0
4008167c:	064265        	call8	40087aa4 <xQueueGiveFromISR>
4008167f:	071a66        	bnei	a10, 1, 4008168a <timer_alarm_handler+0x1a>
40081682:	3188      	l32i.n	a8, a1, 12
40081684:	021866        	bnei	a8, 1, 4008168a <timer_alarm_handler+0x1a>
40081687:	089de5        	call8	4008a064 <_frxt_setup_switch>
4008168a:	f01d      	retw.n

4008168c <esp_timer_stop>:
4008168c:	004136        	entry	a1, 32
4008168f:	ffec65        	call8	40081554 <is_initialized>
40081692:	ea8c      	beqz.n	a10, 400816a4 <esp_timer_stop+0x18>
40081694:	02ad      	mov.n	a10, a2
40081696:	ffeaa5        	call8	40081540 <timer_armed>
40081699:	ca8c      	beqz.n	a10, 400816a9 <esp_timer_stop+0x1d>
4008169b:	02ad      	mov.n	a10, a2
4008169d:	fff965        	call8	40081634 <timer_remove>
400816a0:	0a2d      	mov.n	a2, a10
400816a2:	f01d      	retw.n
400816a4:	03a122        	movi	a2, 0x103
400816a7:	f01d      	retw.n
400816a9:	03a122        	movi	a2, 0x103
400816ac:	f01d      	retw.n
	...

400816b0 <esp_timer_get_next_alarm>:
400816b0:	004136        	entry	a1, 32
400816b3:	ffeb65        	call8	40081568 <timer_list_lock>
400816b6:	fb9381        	l32r	a8, 40080504 <_init_end+0x104>
400816b9:	0888      	l32i.n	a8, a8, 0
400816bb:	588c      	beqz.n	a8, 400816c4 <esp_timer_get_next_alarm+0x14>
400816bd:	0828      	l32i.n	a2, a8, 0
400816bf:	1838      	l32i.n	a3, a8, 4
400816c1:	000146        	j	400816ca <esp_timer_get_next_alarm+0x1a>
400816c4:	fb9621        	l32r	a2, 4008051c <_init_end+0x11c>
400816c7:	fb9631        	l32r	a3, 40080520 <_init_end+0x120>
400816ca:	ffeaa5        	call8	40081574 <timer_list_unlock>
400816cd:	f01d      	retw.n
	...

400816d0 <esp_timer_get_time>:
400816d0:	004136        	entry	a1, 32
400816d3:	008f25        	call8	40081fc4 <esp_timer_impl_get_time>
400816d6:	202aa0        	or	a2, a10, a10
400816d9:	203bb0        	or	a3, a11, a11
400816dc:	000090        	retw
	...

400816e0 <esp_timer_start_once>:
400816e0:	004136        	entry	a1, 32
400816e3:	ffe725        	call8	40081554 <is_initialized>
400816e6:	6abc      	beqz.n	a10, 40081720 <esp_timer_start_once+0x40>
400816e8:	02ad      	mov.n	a10, a2
400816ea:	ffe565        	call8	40081540 <timer_armed>
400816ed:	4afc      	bnez.n	a10, 40081725 <esp_timer_start_once+0x45>
400816ef:	fffe25        	call8	400816d0 <esp_timer_get_time>
400816f2:	4a4a      	add.n	a4, a10, a4
400816f4:	180c      	movi.n	a8, 1
400816f6:	0234a7        	bltu	a4, a10, 400816fc <esp_timer_start_once+0x1c>
400816f9:	00a082        	movi	a8, 0
400816fc:	5b5a      	add.n	a5, a11, a5
400816fe:	885a      	add.n	a8, a8, a5
40081700:	0249      	s32i.n	a4, a2, 0
40081702:	1289      	s32i.n	a8, a2, 4
40081704:	f03d      	nop.n
40081706:	f03d      	nop.n
40081708:	f03d      	nop.n
4008170a:	f03d      	nop.n
4008170c:	fb8241        	l32r	a4, 40080514 <_init_end+0x114>
4008170f:	fb8151        	l32r	a5, 40080514 <_init_end+0x114>
40081712:	2249      	s32i.n	a4, a2, 8
40081714:	3259      	s32i.n	a5, a2, 12
40081716:	20a220        	or	a10, a2, a2
40081719:	ffe665        	call8	40081580 <timer_insert>
4008171c:	0a2d      	mov.n	a2, a10
4008171e:	f01d      	retw.n
40081720:	03a122        	movi	a2, 0x103
40081723:	f01d      	retw.n
40081725:	03a122        	movi	a2, 0x103
40081728:	f01d      	retw.n
	...

4008172c <esp_timer_start_periodic>:
4008172c:	004136        	entry	a1, 32
4008172f:	ffe265        	call8	40081554 <is_initialized>
40081732:	03ba16        	beqz	a10, 40081771 <esp_timer_start_periodic+0x45>
40081735:	02ad      	mov.n	a10, a2
40081737:	ffe0a5        	call8	40081540 <timer_armed>
4008173a:	038a56        	bnez	a10, 40081776 <esp_timer_start_periodic+0x4a>
4008173d:	00c4e5        	call8	4008238c <esp_timer_impl_get_min_period_us>
40081740:	0c3b57        	bltu	a11, a5, 40081750 <esp_timer_start_periodic+0x24>
40081743:	0295b7        	bne	a5, a11, 40081749 <esp_timer_start_periodic+0x1d>
40081746:	063a47        	bltu	a10, a4, 40081750 <esp_timer_start_periodic+0x24>
40081749:	00c425        	call8	4008238c <esp_timer_impl_get_min_period_us>
4008174c:	0a4d      	mov.n	a4, a10
4008174e:	0b5d      	mov.n	a5, a11
40081750:	fff7e5        	call8	400816d0 <esp_timer_get_time>
40081753:	9a4a      	add.n	a9, a10, a4
40081755:	180c      	movi.n	a8, 1
40081757:	0139a7        	bltu	a9, a10, 4008175c <esp_timer_start_periodic+0x30>
4008175a:	080c      	movi.n	a8, 0
4008175c:	bb5a      	add.n	a11, a11, a5
4008175e:	88ba      	add.n	a8, a8, a11
40081760:	0299      	s32i.n	a9, a2, 0
40081762:	1289      	s32i.n	a8, a2, 4
40081764:	2249      	s32i.n	a4, a2, 8
40081766:	3259      	s32i.n	a5, a2, 12
40081768:	02ad      	mov.n	a10, a2
4008176a:	ffe165        	call8	40081580 <timer_insert>
4008176d:	0a2d      	mov.n	a2, a10
4008176f:	f01d      	retw.n
40081771:	03a122        	movi	a2, 0x103
40081774:	f01d      	retw.n
40081776:	03a122        	movi	a2, 0x103
40081779:	f01d      	retw.n
	...

4008177c <esp_dport_access_stall_other_cpu_start>:
4008177c:	004136        	entry	a1, 32
4008177f:	fb6921        	l32r	a2, 40080524 <_init_end+0x124>
40081782:	0020c0        	memw
40081785:	002222        	l32i	a2, a2, 0
40081788:	0c2216        	beqz	a2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
4008178b:	fb6621        	l32r	a2, 40080524 <_init_end+0x124>
4008178e:	0020c0        	memw
40081791:	012222        	l32i	a2, a2, 4
40081794:	0b6216        	beqz	a2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
40081797:	006330        	rsil	a3, 3
4008179a:	03eb20        	rsr.prid	a2
4008179d:	042d20        	extui	a2, a2, 13, 1
400817a0:	fb6281        	l32r	a8, 40080528 <_init_end+0x128>
400817a3:	a08280        	addx4	a8, a2, a8
400817a6:	0020c0        	memw
400817a9:	002882        	l32i	a8, a8, 0
400817ac:	074856        	bnez	a8, 40081824 <esp_dport_access_stall_other_cpu_start+0xa8>
400817af:	fb5fa1        	l32r	a10, 4008052c <_init_end+0x12c>
400817b2:	072de5        	call8	40088a90 <vTaskEnterCritical>
400817b5:	1182e0        	slli	a8, a2, 2
400817b8:	fb5e91        	l32r	a9, 40080530 <_init_end+0x130>
400817bb:	998a      	add.n	a9, a9, a8
400817bd:	0939      	s32i.n	a3, a9, 0
400817bf:	f03d      	nop.n
400817c1:	f03d      	nop.n
400817c3:	f03d      	nop.n
400817c5:	f03d      	nop.n
400817c7:	fb5b91        	l32r	a9, 40080534 <_init_end+0x134>
400817ca:	998a      	add.n	a9, a9, a8
400817cc:	0a0c      	movi.n	a10, 0
400817ce:	0020c0        	memw
400817d1:	09a9      	s32i.n	a10, a9, 0
400817d3:	f03d      	nop.n
400817d5:	f03d      	nop.n
400817d7:	f03d      	nop.n
400817d9:	f03d      	nop.n
400817db:	fb5791        	l32r	a9, 40080538 <_init_end+0x138>
400817de:	898a      	add.n	a8, a9, a8
400817e0:	0020c0        	memw
400817e3:	08a9      	s32i.n	a10, a8, 0
400817e5:	1392a7        	bne	a2, a10, 400817fc <esp_dport_access_stall_other_cpu_start+0x80>
400817e8:	190c      	movi.n	a9, 1
400817ea:	f03d      	nop.n
400817ec:	f03d      	nop.n
400817ee:	f03d      	nop.n
400817f0:	fb5381        	l32r	a8, 4008053c <_init_end+0x13c>
400817f3:	0020c0        	memw
400817f6:	0899      	s32i.n	a9, a8, 0
400817f8:	000286        	j	40081806 <esp_dport_access_stall_other_cpu_start+0x8a>
400817fb:	190c00        	lsi	f0, a12, 100
400817fe:	fb5081        	l32r	a8, 40080540 <_init_end+0x140>
40081801:	0020c0        	memw
40081804:	0899      	s32i.n	a9, a8, 0
40081806:	f03d      	nop.n
40081808:	f03d      	nop.n
4008180a:	f03d      	nop.n
4008180c:	f03d      	nop.n
4008180e:	fb4981        	l32r	a8, 40080534 <_init_end+0x134>
40081811:	a08280        	addx4	a8, a2, a8
40081814:	0020c0        	memw
40081817:	0888      	l32i.n	a8, a8, 0
40081819:	fe9816        	beqz	a8, 40081806 <esp_dport_access_stall_other_cpu_start+0x8a>
4008181c:	fb4a81        	l32r	a8, 40080544 <_init_end+0x144>
4008181f:	0020c0        	memw
40081822:	0888      	l32i.n	a8, a8, 0
40081824:	fb4181        	l32r	a8, 40080528 <_init_end+0x128>
40081827:	a02280        	addx4	a2, a2, a8
4008182a:	0020c0        	memw
4008182d:	0288      	l32i.n	a8, a2, 0
4008182f:	881b      	addi.n	a8, a8, 1
40081831:	0020c0        	memw
40081834:	0289      	s32i.n	a8, a2, 0
40081836:	f03d      	nop.n
40081838:	f03d      	nop.n
4008183a:	f03d      	nop.n
4008183c:	f03d      	nop.n
4008183e:	0020c0        	memw
40081841:	0228      	l32i.n	a2, a2, 0
40081843:	0722b6        	bltui	a2, 2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
40081846:	03ad      	mov.n	a10, a3
40081848:	fb4081        	l32r	a8, 40080548 <_init_end+0x148>
4008184b:	0008e0        	callx8	a8
4008184e:	f01d      	retw.n

40081850 <esp_dport_access_stall_other_cpu_end>:
40081850:	004136        	entry	a1, 32
40081853:	03eb80        	rsr.prid	a8
40081856:	048d80        	extui	a8, a8, 13, 1
40081859:	fb3221        	l32r	a2, 40080524 <_init_end+0x124>
4008185c:	0020c0        	memw
4008185f:	0228      	l32i.n	a2, a2, 0
40081861:	075216        	beqz	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
40081864:	fb3021        	l32r	a2, 40080524 <_init_end+0x124>
40081867:	0020c0        	memw
4008186a:	1228      	l32i.n	a2, a2, 4
4008186c:	06a216        	beqz	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
4008186f:	fb2e21        	l32r	a2, 40080528 <_init_end+0x128>
40081872:	a02820        	addx4	a2, a8, a2
40081875:	0020c0        	memw
40081878:	002222        	l32i	a2, a2, 0
4008187b:	d2cc      	bnez.n	a2, 4008188c <esp_dport_access_stall_other_cpu_end+0x3c>
4008187d:	fb33d1        	l32r	a13, 4008054c <_init_end+0x14c>
40081880:	fb34c1        	l32r	a12, 40080550 <_init_end+0x150>
40081883:	7ea0b2        	movi	a11, 126
40081886:	fb33a1        	l32r	a10, 40080554 <_init_end+0x154>
40081889:	592425        	call8	400daacc <__assert_func>
4008188c:	fb2721        	l32r	a2, 40080528 <_init_end+0x128>
4008188f:	a02820        	addx4	a2, a8, a2
40081892:	0020c0        	memw
40081895:	002292        	l32i	a9, a2, 0
40081898:	ffc992        	addi	a9, a9, -1
4008189b:	0020c0        	memw
4008189e:	006292        	s32i	a9, a2, 0
400818a1:	f03d      	nop.n
400818a3:	f03d      	nop.n
400818a5:	f03d      	nop.n
400818a7:	f03d      	nop.n
400818a9:	0020c0        	memw
400818ac:	0228      	l32i.n	a2, a2, 0
400818ae:	82ec      	bnez.n	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
400818b0:	1128e0        	slli	a2, a8, 2
400818b3:	fb2181        	l32r	a8, 40080538 <_init_end+0x138>
400818b6:	882a      	add.n	a8, a8, a2
400818b8:	190c      	movi.n	a9, 1
400818ba:	0020c0        	memw
400818bd:	0899      	s32i.n	a9, a8, 0
400818bf:	f03d      	nop.n
400818c1:	f03d      	nop.n
400818c3:	f03d      	nop.n
400818c5:	f03d      	nop.n
400818c7:	fb19a1        	l32r	a10, 4008052c <_init_end+0x12c>
400818ca:	073065        	call8	40088bd0 <vTaskExitCritical>
400818cd:	fb1881        	l32r	a8, 40080530 <_init_end+0x130>
400818d0:	882a      	add.n	a8, a8, a2
400818d2:	08a8      	l32i.n	a10, a8, 0
400818d4:	fb1d81        	l32r	a8, 40080548 <_init_end+0x148>
400818d7:	0008e0        	callx8	a8
400818da:	f01d      	retw.n

400818dc <esp_dport_access_stall_other_cpu_start_wrap>:
400818dc:	004136        	entry	a1, 32
400818df:	ffe9e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
400818e2:	f01d      	retw.n

400818e4 <esp_dport_access_stall_other_cpu_end_wrap>:
400818e4:	004136        	entry	a1, 32
400818e7:	fff6a5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
400818ea:	f01d      	retw.n

400818ec <esp_dport_access_int_pause>:
400818ec:	004136        	entry	a1, 32
400818ef:	fb0f21        	l32r	a2, 4008052c <_init_end+0x12c>
400818f2:	20a220        	or	a10, a2, a2
400818f5:	0719a5        	call8	40088a90 <vTaskEnterCritical>
400818f8:	fb0b81        	l32r	a8, 40080524 <_init_end+0x124>
400818fb:	00a092        	movi	a9, 0
400818fe:	0020c0        	memw
40081901:	0899      	s32i.n	a9, a8, 0
40081903:	0020c0        	memw
40081906:	1899      	s32i.n	a9, a8, 4
40081908:	02ad      	mov.n	a10, a2
4008190a:	072c65        	call8	40088bd0 <vTaskExitCritical>
4008190d:	f01d      	retw.n
	...

40081910 <esp_dport_access_int_abort>:
40081910:	004136        	entry	a1, 32
40081913:	fb0481        	l32r	a8, 40080524 <_init_end+0x124>
40081916:	090c      	movi.n	a9, 0
40081918:	0020c0        	memw
4008191b:	0899      	s32i.n	a9, a8, 0
4008191d:	0020c0        	memw
40081920:	1899      	s32i.n	a9, a8, 4
40081922:	f01d      	retw.n

40081924 <esp_dport_access_int_resume>:
40081924:	004136        	entry	a1, 32
40081927:	fb0121        	l32r	a2, 4008052c <_init_end+0x12c>
4008192a:	20a220        	or	a10, a2, a2
4008192d:	071625        	call8	40088a90 <vTaskEnterCritical>
40081930:	fafd81        	l32r	a8, 40080524 <_init_end+0x124>
40081933:	01a092        	movi	a9, 1
40081936:	0020c0        	memw
40081939:	0899      	s32i.n	a9, a8, 0
4008193b:	0020c0        	memw
4008193e:	1899      	s32i.n	a9, a8, 4
40081940:	02ad      	mov.n	a10, a2
40081942:	0728e5        	call8	40088bd0 <vTaskExitCritical>
40081945:	f01d      	retw.n
	...

40081948 <esp_dport_access_reg_read>:
40081948:	004136        	entry	a1, 32
4008194b:	fb0381        	l32r	a8, 40080558 <_init_end+0x158>
4008194e:	006590        	rsil	a9, 5
40081951:	0888      	l32i.n	a8, a8, 0
40081953:	0228      	l32i.n	a2, a2, 0
40081955:	13e690        	wsr.ps	a9
40081958:	002010        	rsync
4008195b:	f01d      	retw.n
4008195d:	000000        	ill

40081960 <esp_dport_access_sequence_reg_read>:
40081960:	004136        	entry	a1, 32
40081963:	fafd81        	l32r	a8, 40080558 <_init_end+0x158>
40081966:	0888      	l32i.n	a8, a8, 0
40081968:	0228      	l32i.n	a2, a2, 0
4008196a:	f01d      	retw.n

4008196c <esp_dport_access_read_buffer>:
4008196c:	004136        	entry	a1, 32
4008196f:	006570        	rsil	a7, 5
40081972:	050c      	movi.n	a5, 0
40081974:	000386        	j	40081986 <esp_dport_access_read_buffer+0x1a>
40081977:	a5e000        	extui	a14, a0, 16, 11
4008197a:	62aa11        	l32r	a1, 4005a424 <strftime+0x970>
4008197d:	aa3a      	add.n	a10, a10, a3
4008197f:	fffe25        	call8	40081960 <esp_dport_access_sequence_reg_read>
40081982:	06a9      	s32i.n	a10, a6, 0
40081984:	551b      	addi.n	a5, a5, 1
40081986:	ee3547        	bltu	a5, a4, 40081978 <esp_dport_access_read_buffer+0xc>
40081989:	07ad      	mov.n	a10, a7
4008198b:	faef81        	l32r	a8, 40080548 <_init_end+0x148>
4008198e:	0008e0        	callx8	a8
40081991:	f01d      	retw.n
	...

40081994 <xt_highint4>:
40081994:	03e200        	rsr.interrupt	a0
40081997:	050c00        	extui	a0, a0, 28, 1
4008199a:	07e056        	bnez	a0, 40081a1c <.handle_dport_access_int>
4008199d:	010d      	mov.n	a0, a1
4008199f:	ffd112        	addmi	a1, a1, 0xffffff00
400819a2:	40c112        	addi	a1, a1, 64
400819a5:	4109      	s32i.n	a0, a1, 16
400819a7:	49d100        	s32e	a0, a1, -12
400819aa:	03e600        	rsr.ps	a0
400819ad:	2109      	s32i.n	a0, a1, 8
400819af:	03b400        	rsr.epc4	a0
400819b2:	1109      	s32i.n	a0, a1, 4
400819b4:	49c100        	s32e	a0, a1, -16
400819b7:	0f61c2        	s32i	a12, a1, 60
400819ba:	1061d2        	s32i	a13, a1, 64
400819bd:	085785        	call0	40089f38 <_xt_context_save>
400819c0:	03ee00        	rsr.excvaddr	a0
400819c3:	156102        	s32i	a0, a1, 84
400819c6:	03e200        	rsr.interrupt	a0
400819c9:	050900        	extui	a0, a0, 25, 1
400819cc:	009c      	beqz.n	a0, 400819e0 <xt_highint4+0x4c>
400819ce:	03e400        	rsr.intenable	a0
400819d1:	fae241        	l32r	a4, 4008055c <_init_end+0x15c>
400819d4:	100400        	and	a0, a4, a0
400819d7:	13e400        	wsr.intenable	a0
400819da:	700c      	movi.n	a0, 7
400819dc:	000386        	j	400819ee <xt_highint4+0x5a>
400819df:	c40100        	extui	a0, a0, 1, 13
400819e2:	08fa      	add.n	a0, a8, a15
400819e4:	30cc00        	xor	a12, a12, a0
400819e7:	600c      	movi.n	a0, 6
400819e9:	000046        	j	400819ee <xt_highint4+0x5a>
400819ec:	500c      	movi.n	a0, 5
400819ee:	146102        	s32i	a0, a1, 80
400819f1:	03d400        	rsr.excsave4	a0
400819f4:	3109      	s32i.n	a0, a1, 12
400819f6:	fada01        	l32r	a0, 40080560 <_init_end+0x160>
400819f9:	13e600        	wsr.ps	a0
400819fc:	016d      	mov.n	a6, a1
400819fe:	099bd5        	call4	4008b3bc <panicHandler>
40081a01:	0859c5        	call0	40089fa0 <_xt_context_restore>
40081a04:	2108      	l32i.n	a0, a1, 8
40081a06:	13e600        	wsr.ps	a0
40081a09:	1108      	l32i.n	a0, a1, 4
40081a0b:	13b400        	wsr.epc4	a0
40081a0e:	3108      	l32i.n	a0, a1, 12
40081a10:	4118      	l32i.n	a1, a1, 16
40081a12:	002010        	rsync
40081a15:	03d400        	rsr.excsave4	a0
40081a18:	003410        	rfi	4
	...

40081a1c <.handle_dport_access_int>:
40081a1c:	fad201        	l32r	a0, 40080564 <_init_end+0x164>
40081a1f:	13e300        	wsr.intclear	a0
40081a22:	fad101        	l32r	a0, 40080568 <_init_end+0x168>
40081a25:	0029      	s32i.n	a2, a0, 0
40081a27:	1039      	s32i.n	a3, a0, 4
40081a29:	2049      	s32i.n	a4, a0, 8
40081a2b:	03eb00        	rsr.prid	a0
40081a2e:	040d00        	extui	a0, a0, 13, 1
40081a31:	c08c      	beqz.n	a0, 40081a41 <.handle_dport_access_int+0x25>
40081a33:	fac201        	l32r	a0, 4008053c <_init_end+0x13c>
40081a36:	020c      	movi.n	a2, 0
40081a38:	0029      	s32i.n	a2, a0, 0
40081a3a:	000c      	movi.n	a0, 0
40081a3c:	000286        	j	40081a4a <.handle_dport_access_int+0x2e>
40081a3f:	010000        	slli	a0, a0, 32
40081a42:	bf          	.byte 0xbf
40081a43:	0cfa      	add.n	a0, a12, a15
40081a45:	002902        	l32i	a0, a9, 0
40081a48:	100c      	movi.n	a0, 1
40081a4a:	006540        	rsil	a4, 5
40081a4d:	fab921        	l32r	a2, 40080534 <_init_end+0x134>
40081a50:	a02020        	addx4	a2, a0, a2
40081a53:	130c      	movi.n	a3, 1
40081a55:	0239      	s32i.n	a3, a2, 0
40081a57:	0020c0        	memw
40081a5a:	fab721        	l32r	a2, 40080538 <_init_end+0x138>
40081a5d:	a02020        	addx4	a2, a0, a2

40081a60 <.check_dport_access_end>:
40081a60:	0238      	l32i.n	a3, a2, 0
40081a62:	ffa316        	beqz	a3, 40081a60 <.check_dport_access_end>
40081a65:	13e640        	wsr.ps	a4
40081a68:	fac001        	l32r	a0, 40080568 <_init_end+0x168>
40081a6b:	0028      	l32i.n	a2, a0, 0
40081a6d:	1038      	l32i.n	a3, a0, 4
40081a6f:	2048      	l32i.n	a4, a0, 8
40081a71:	002010        	rsync
40081a74:	03d400        	rsr.excsave4	a0
40081a77:	003410        	rfi	4

40081a7a <ld_include_panic_highint_hdl>:
	...

40081a7c <esp_restart_noos>:
40081a7c:	004136        	entry	a1, 32
40081a7f:	ffafa2        	movi	a10, -1
40081a82:	088c25        	call8	4008a344 <xt_ints_off>
40081a85:	0a0fe5        	call8	4008bb84 <rtc_wdt_protect_off>
40081a88:	0a2a65        	call8	4008bd30 <rtc_wdt_disable>
40081a8b:	4b0c      	movi.n	a11, 4
40081a8d:	0a0c      	movi.n	a10, 0
40081a8f:	0a1ee5        	call8	4008bc7c <rtc_wdt_set_stage>
40081a92:	3b0c      	movi.n	a11, 3
40081a94:	1a0c      	movi.n	a10, 1
40081a96:	0a1e65        	call8	4008bc7c <rtc_wdt_set_stage>
40081a99:	1b0c      	movi.n	a11, 1
40081a9b:	0a0c      	movi.n	a10, 0
40081a9d:	0a3065        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
40081aa0:	1b0c      	movi.n	a11, 1
40081aa2:	20abb0        	or	a10, a11, a11
40081aa5:	0a2fe5        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
40081aa8:	e8a3b2        	movi	a11, 0x3e8
40081aab:	0a0c      	movi.n	a10, 0
40081aad:	0a16e5        	call8	4008bc1c <rtc_wdt_set_time>
40081ab0:	0a1265        	call8	4008bbd8 <rtc_wdt_flashboot_mode_enable>
40081ab3:	03eb20        	rsr.prid	a2
40081ab6:	042d20        	extui	a2, a2, 13, 1
40081ab9:	023d      	mov.n	a3, a2
40081abb:	040c      	movi.n	a4, 0
40081abd:	180c      	movi.n	a8, 1
40081abf:	938420        	movnez	a8, a4, a2
40081ac2:	742080        	extui	a2, a8, 0, 8
40081ac5:	02ad      	mov.n	a10, a2
40081ac7:	02d1a5        	call8	400847e0 <esp_cpu_reset>
40081aca:	02ad      	mov.n	a10, a2
40081acc:	02bea5        	call8	400846b8 <esp_cpu_stall>
40081acf:	ffe425        	call8	40081910 <esp_dport_access_int_abort>
40081ad2:	faa681        	l32r	a8, 4008056c <_init_end+0x16c>
40081ad5:	fa8891        	l32r	a9, 400804f8 <_init_end+0xf8>
40081ad8:	0020c0        	memw
40081adb:	196892        	s32i	a9, a8, 100
40081ade:	f03d      	nop.n
40081ae0:	f03d      	nop.n
40081ae2:	f03d      	nop.n
40081ae4:	f03d      	nop.n
40081ae6:	0020c0        	memw
40081ae9:	1228b2        	l32i	a11, a8, 72
40081aec:	fa8d21        	l32r	a2, 40080520 <_init_end+0x120>
40081aef:	10ab20        	and	a10, a11, a2
40081af2:	0020c0        	memw
40081af5:	1268a2        	s32i	a10, a8, 72
40081af8:	0020c0        	memw
40081afb:	196842        	s32i	a4, a8, 100
40081afe:	f03d      	nop.n
40081b00:	f03d      	nop.n
40081b02:	f03d      	nop.n
40081b04:	f03d      	nop.n
40081b06:	fa7b81        	l32r	a8, 400804f4 <_init_end+0xf4>
40081b09:	0020c0        	memw
40081b0c:	196892        	s32i	a9, a8, 100
40081b0f:	f03d      	nop.n
40081b11:	f03d      	nop.n
40081b13:	0020f0        	nop
40081b16:	0020f0        	nop
40081b19:	0020c0        	memw
40081b1c:	122892        	l32i	a9, a8, 72
40081b1f:	102920        	and	a2, a9, a2
40081b22:	0020c0        	memw
40081b25:	126822        	s32i	a2, a8, 72
40081b28:	0020c0        	memw
40081b2b:	196842        	s32i	a4, a8, 100
40081b2e:	f03d      	nop.n
40081b30:	f03d      	nop.n
40081b32:	f03d      	nop.n
40081b34:	f03d      	nop.n
40081b36:	fa8e21        	l32r	a2, 40080570 <_init_end+0x170>
40081b39:	0020c0        	memw
40081b3c:	0248      	l32i.n	a4, a2, 0
40081b3e:	fa8d21        	l32r	a2, 40080574 <_init_end+0x174>
40081b41:	e98427        	bany	a4, a2, 40081b2e <esp_restart_noos+0xb2>
40081b44:	fa8d21        	l32r	a2, 40080578 <_init_end+0x178>
40081b47:	0020c0        	memw
40081b4a:	0248      	l32i.n	a4, a2, 0
40081b4c:	fa8a21        	l32r	a2, 40080574 <_init_end+0x174>
40081b4f:	f18427        	bany	a4, a2, 40081b44 <esp_restart_noos+0xc8>
40081b52:	fa8a21        	l32r	a2, 4008057c <_init_end+0x17c>
40081b55:	0020c0        	memw
40081b58:	0248      	l32i.n	a4, a2, 0
40081b5a:	fa8621        	l32r	a2, 40080574 <_init_end+0x174>
40081b5d:	f18427        	bany	a4, a2, 40081b52 <esp_restart_noos+0xd6>
40081b60:	ffc1a5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081b63:	0a0c      	movi.n	a10, 0
40081b65:	fa9081        	l32r	a8, 400805a8 <_init_end+0x1a8>
40081b68:	0008e0        	callx8	a8
40081b6b:	ffce65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40081b6e:	ffc0e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081b71:	1a0c      	movi.n	a10, 1
40081b73:	fa8d81        	l32r	a8, 400805a8 <_init_end+0x1a8>
40081b76:	0008e0        	callx8	a8
40081b79:	ffcd65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40081b7c:	023c      	movi.n	a2, 48
40081b7e:	fa8041        	l32r	a4, 40080580 <_init_end+0x180>
40081b81:	0020c0        	memw
40081b84:	0429      	s32i.n	a2, a4, 0
40081b86:	f03d      	nop.n
40081b88:	f03d      	nop.n
40081b8a:	f03d      	nop.n
40081b8c:	f03d      	nop.n
40081b8e:	fa7d41        	l32r	a4, 40080584 <_init_end+0x184>
40081b91:	0020c0        	memw
40081b94:	0429      	s32i.n	a2, a4, 0
40081b96:	f03d      	nop.n
40081b98:	f03d      	nop.n
40081b9a:	f03d      	nop.n
40081b9c:	f03d      	nop.n
40081b9e:	fa7a41        	l32r	a4, 40080588 <_init_end+0x188>
40081ba1:	0020c0        	memw
40081ba4:	0429      	s32i.n	a2, a4, 0
40081ba6:	f03d      	nop.n
40081ba8:	f03d      	nop.n
40081baa:	f03d      	nop.n
40081bac:	f03d      	nop.n
40081bae:	fa7741        	l32r	a4, 4008058c <_init_end+0x18c>
40081bb1:	0020c0        	memw
40081bb4:	0429      	s32i.n	a2, a4, 0
40081bb6:	f03d      	nop.n
40081bb8:	f03d      	nop.n
40081bba:	f03d      	nop.n
40081bbc:	f03d      	nop.n
40081bbe:	fa7441        	l32r	a4, 40080590 <_init_end+0x190>
40081bc1:	0020c0        	memw
40081bc4:	0429      	s32i.n	a2, a4, 0
40081bc6:	f03d      	nop.n
40081bc8:	f03d      	nop.n
40081bca:	f03d      	nop.n
40081bcc:	f03d      	nop.n
40081bce:	fa7141        	l32r	a4, 40080594 <_init_end+0x194>
40081bd1:	0020c0        	memw
40081bd4:	0429      	s32i.n	a2, a4, 0
40081bd6:	f03d      	nop.n
40081bd8:	f03d      	nop.n
40081bda:	f03d      	nop.n
40081bdc:	f03d      	nop.n
40081bde:	fa6e41        	l32r	a4, 40080598 <_init_end+0x198>
40081be1:	04ad      	mov.n	a10, a4
40081be3:	ffd665        	call8	40081948 <esp_dport_access_reg_read>
40081be6:	ffa722        	movi	a2, 0x7ff
40081be9:	20aa20        	or	a10, a10, a2
40081bec:	0020c0        	memw
40081bef:	04a9      	s32i.n	a10, a4, 0
40081bf1:	020c      	movi.n	a2, 0
40081bf3:	0020c0        	memw
40081bf6:	0429      	s32i.n	a2, a4, 0
40081bf8:	f03d      	nop.n
40081bfa:	f03d      	nop.n
40081bfc:	f03d      	nop.n
40081bfe:	0020f0        	nop
40081c01:	fa6641        	l32r	a4, 4008059c <_init_end+0x19c>
40081c04:	04ad      	mov.n	a10, a4
40081c06:	ffd425        	call8	40081948 <esp_dport_access_reg_read>
40081c09:	fa6581        	l32r	a8, 400805a0 <_init_end+0x1a0>
40081c0c:	20aa80        	or	a10, a10, a8
40081c0f:	0020c0        	memw
40081c12:	0064a2        	s32i	a10, a4, 0
40081c15:	0020c0        	memw
40081c18:	006422        	s32i	a2, a4, 0
40081c1b:	0b0a65        	call8	4008ccc0 <rtc_clk_cpu_freq_set_xtal>
40081c1e:	fa6141        	l32r	a4, 400805a4 <_init_end+0x1a4>
40081c21:	0020c0        	memw
40081c24:	0429      	s32i.n	a2, a4, 0
40081c26:	0e9327        	bne	a3, a2, 40081c38 <esp_restart_noos+0x1bc>
40081c29:	01a0a2        	movi	a10, 1
40081c2c:	02bb25        	call8	400847e0 <esp_cpu_reset>
40081c2f:	02ad      	mov.n	a10, a2
40081c31:	02bae5        	call8	400847e0 <esp_cpu_reset>
40081c34:	000406        	j	40081c48 <esp_restart_noos+0x1cc>
40081c37:	a0a200        	addx4	a10, a2, a0
40081c3a:	ba6500        	ceil.s	a6, f5, 0
40081c3d:	0a0c02        	l8ui	a0, a12, 10
40081c40:	02b3a5        	call8	4008477c <esp_cpu_unstall>
40081c43:	1a0c      	movi.n	a10, 1
40081c45:	02b9a5        	call8	400847e0 <esp_cpu_reset>
40081c48:	ffff06        	j	40081c48 <esp_restart_noos+0x1cc>
	...

40081c4c <esp_restart>:
40081c4c:	004136        	entry	a1, 32
40081c4f:	020c      	movi.n	a2, 0
40081c51:	0003c6        	j	40081c64 <esp_restart+0x18>
40081c54:	558100        	extui	a8, a0, 17, 6
40081c57:	80fa      	add.n	a8, a0, a15
40081c59:	88a082        	movi	a8, 136
40081c5c:	8c08      	l32i.n	a0, a12, 32
40081c5e:	e018      	l32i.n	a1, a0, 56
40081c60:	0008      	l32i.n	a0, a0, 0
40081c62:	221b      	addi.n	a2, a2, 1
40081c64:	ed22a6        	blti	a2, 2, 40081c55 <esp_restart+0x9>
40081c67:	069ae5        	call8	40088614 <vTaskSuspendAll>
40081c6a:	ffe125        	call8	40081a7c <esp_restart_noos>
40081c6d:	000000        	ill

40081c70 <task_ms_to_tick_wrapper>:
40081c70:	004136        	entry	a1, 32
40081c73:	f01d      	retw.n
40081c75:	000000        	ill

40081c78 <wifi_malloc>:
40081c78:	004136        	entry	a1, 32
40081c7b:	20a220        	or	a10, a2, a2
40081c7e:	fa4c81        	l32r	a8, 400805b0 <_init_end+0x1b0>
40081c81:	0008e0        	callx8	a8
40081c84:	0a2d      	mov.n	a2, a10
40081c86:	f01d      	retw.n

40081c88 <wifi_realloc>:
40081c88:	004136        	entry	a1, 32
40081c8b:	03bd      	mov.n	a11, a3
40081c8d:	02ad      	mov.n	a10, a2
40081c8f:	fa4981        	l32r	a8, 400805b4 <_init_end+0x1b4>
40081c92:	0008e0        	callx8	a8
40081c95:	0a2d      	mov.n	a2, a10
40081c97:	f01d      	retw.n
40081c99:	000000        	ill

40081c9c <wifi_calloc>:
40081c9c:	004136        	entry	a1, 32
40081c9f:	03bd      	mov.n	a11, a3
40081ca1:	02ad      	mov.n	a10, a2
40081ca3:	fa4581        	l32r	a8, 400805b8 <_init_end+0x1b8>
40081ca6:	0008e0        	callx8	a8
40081ca9:	0a2d      	mov.n	a2, a10
40081cab:	f01d      	retw.n
40081cad:	000000        	ill

40081cb0 <malloc_internal_wrapper>:
40081cb0:	004136        	entry	a1, 32
40081cb3:	fa42b1        	l32r	a11, 400805bc <_init_end+0x1bc>
40081cb6:	20a220        	or	a10, a2, a2
40081cb9:	0265a5        	call8	40084314 <heap_caps_malloc>
40081cbc:	202aa0        	or	a2, a10, a10
40081cbf:	000090        	retw
	...

40081cc4 <wifi_zalloc_wrapper>:
40081cc4:	004136        	entry	a1, 32
40081cc7:	023d      	mov.n	a3, a2
40081cc9:	02bd      	mov.n	a11, a2
40081ccb:	1a0c      	movi.n	a10, 1
40081ccd:	fffce5        	call8	40081c9c <wifi_calloc>
40081cd0:	0a2d      	mov.n	a2, a10
40081cd2:	8a8c      	beqz.n	a10, 40081cde <wifi_zalloc_wrapper+0x1a>
40081cd4:	03cd      	mov.n	a12, a3
40081cd6:	0b0c      	movi.n	a11, 0
40081cd8:	f9ef81        	l32r	a8, 40080494 <_init_end+0x94>
40081cdb:	0008e0        	callx8	a8
40081cde:	f01d      	retw.n

40081ce0 <zalloc_internal_wrapper>:
40081ce0:	004136        	entry	a1, 32
40081ce3:	203220        	or	a3, a2, a2
40081ce6:	fa35c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081ce9:	20b220        	or	a11, a2, a2
40081cec:	01a0a2        	movi	a10, 1
40081cef:	029365        	call8	40084624 <heap_caps_calloc>
40081cf2:	0a2d      	mov.n	a2, a10
40081cf4:	8a8c      	beqz.n	a10, 40081d00 <zalloc_internal_wrapper+0x20>
40081cf6:	03cd      	mov.n	a12, a3
40081cf8:	0b0c      	movi.n	a11, 0
40081cfa:	f9e681        	l32r	a8, 40080494 <_init_end+0x94>
40081cfd:	0008e0        	callx8	a8
40081d00:	f01d      	retw.n
	...

40081d04 <calloc_internal_wrapper>:
40081d04:	004136        	entry	a1, 32
40081d07:	fa2dc1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081d0a:	20b330        	or	a11, a3, a3
40081d0d:	20a220        	or	a10, a2, a2
40081d10:	029125        	call8	40084624 <heap_caps_calloc>
40081d13:	202aa0        	or	a2, a10, a10
40081d16:	f01d      	retw.n

40081d18 <realloc_internal_wrapper>:
40081d18:	004136        	entry	a1, 32
40081d1b:	fa28c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081d1e:	20b330        	or	a11, a3, a3
40081d21:	20a220        	or	a10, a2, a2
40081d24:	0277e5        	call8	400844a4 <heap_caps_realloc>
40081d27:	202aa0        	or	a2, a10, a10
40081d2a:	f01d      	retw.n

40081d2c <timer_arm_us_wrapper>:
40081d2c:	004136        	entry	a1, 32
40081d2f:	74c040        	extui	a12, a4, 0, 8
40081d32:	20b330        	or	a11, a3, a3
40081d35:	20a220        	or	a10, a2, a2
40081d38:	0069a5        	call8	400823d4 <ets_timer_arm_us>
40081d3b:	000090        	retw
	...

40081d40 <timer_disarm_wrapper>:
40081d40:	004136        	entry	a1, 32
40081d43:	02ad      	mov.n	a10, a2
40081d45:	0074e5        	call8	40082494 <ets_timer_disarm>
40081d48:	f01d      	retw.n
	...

40081d4c <timer_arm_wrapper>:
40081d4c:	004136        	entry	a1, 32
40081d4f:	74c040        	extui	a12, a4, 0, 8
40081d52:	20b330        	or	a11, a3, a3
40081d55:	20a220        	or	a10, a2, a2
40081d58:	006d65        	call8	40082430 <ets_timer_arm>
40081d5b:	000090        	retw
	...

40081d60 <queue_send_from_isr_wrapper>:
40081d60:	004136        	entry	a1, 32
40081d63:	00a0d2        	movi	a13, 0
40081d66:	20c440        	or	a12, a4, a4
40081d69:	20b330        	or	a11, a3, a3
40081d6c:	02ad      	mov.n	a10, a2
40081d6e:	05c5e5        	call8	400879cc <xQueueGenericSendFromISR>
40081d71:	0a2d      	mov.n	a2, a10
40081d73:	f01d      	retw.n
40081d75:	000000        	ill

40081d78 <mutex_unlock_wrapper>:
40081d78:	004136        	entry	a1, 32
40081d7b:	02ad      	mov.n	a10, a2
40081d7d:	05c065        	call8	40087984 <xQueueGiveMutexRecursive>
40081d80:	0a2d      	mov.n	a2, a10
40081d82:	f01d      	retw.n

40081d84 <mutex_lock_wrapper>:
40081d84:	004136        	entry	a1, 32
40081d87:	ffafb2        	movi	a11, -1
40081d8a:	20a220        	or	a10, a2, a2
40081d8d:	05f3a5        	call8	40087cc8 <xQueueTakeMutexRecursive>
40081d90:	202aa0        	or	a2, a10, a10
40081d93:	f01d      	retw.n
40081d95:	000000        	ill

40081d98 <task_yield_from_isr_wrapper>:
40081d98:	004136        	entry	a1, 32
40081d9b:	082ca5        	call8	4008a064 <_frxt_setup_switch>
40081d9e:	f01d      	retw.n

40081da0 <wifi_int_restore_wrapper>:
40081da0:	004136        	entry	a1, 32
40081da3:	0619a5        	call8	40087f3c <xPortInIsrContext>
40081da6:	008a16        	beqz	a10, 40081db2 <wifi_int_restore_wrapper+0x12>
40081da9:	20a220        	or	a10, a2, a2
40081dac:	06e225        	call8	40088bd0 <vTaskExitCritical>
40081daf:	000090        	retw
40081db2:	02ad      	mov.n	a10, a2
40081db4:	06e1a5        	call8	40088bd0 <vTaskExitCritical>
40081db7:	f01d      	retw.n
40081db9:	000000        	ill

40081dbc <wifi_int_disable_wrapper>:
40081dbc:	004136        	entry	a1, 32
40081dbf:	0617e5        	call8	40087f3c <xPortInIsrContext>
40081dc2:	6a8c      	beqz.n	a10, 40081dcc <wifi_int_disable_wrapper+0x10>
40081dc4:	02ad      	mov.n	a10, a2
40081dc6:	06cca5        	call8	40088a90 <vTaskEnterCritical>
40081dc9:	000146        	j	40081dd2 <wifi_int_disable_wrapper+0x16>
40081dcc:	20a220        	or	a10, a2, a2
40081dcf:	06cc25        	call8	40088a90 <vTaskEnterCritical>
40081dd2:	00a022        	movi	a2, 0
40081dd5:	000090        	retw

40081dd8 <semphr_give_from_isr_wrapper>:
40081dd8:	004136        	entry	a1, 32
40081ddb:	20b330        	or	a11, a3, a3
40081dde:	20a220        	or	a10, a2, a2
40081de1:	05cc25        	call8	40087aa4 <xQueueGiveFromISR>
40081de4:	202aa0        	or	a2, a10, a10
40081de7:	f01d      	retw.n
40081de9:	000000        	ill

40081dec <semphr_take_from_isr_wrapper>:
40081dec:	004136        	entry	a1, 32
40081def:	03cd      	mov.n	a12, a3
40081df1:	0b0c      	movi.n	a11, 0
40081df3:	02ad      	mov.n	a10, a2
40081df5:	05f265        	call8	40087d1c <xQueueReceiveFromISR>
40081df8:	0a2d      	mov.n	a2, a10
40081dfa:	f01d      	retw.n

40081dfc <coex_bt_request_wrapper>:
40081dfc:	004136        	entry	a1, 32
40081dff:	04cd      	mov.n	a12, a4
40081e01:	03bd      	mov.n	a11, a3
40081e03:	02ad      	mov.n	a10, a2
40081e05:	02e725        	call8	40084c78 <coex_bt_request>
40081e08:	0a2d      	mov.n	a2, a10
40081e0a:	f01d      	retw.n

40081e0c <coex_bt_release_wrapper>:
40081e0c:	004136        	entry	a1, 32
40081e0f:	02ad      	mov.n	a10, a2
40081e11:	02e7e5        	call8	40084c90 <coex_bt_release>
40081e14:	0a2d      	mov.n	a2, a10
40081e16:	f01d      	retw.n

40081e18 <coex_bb_reset_lock_wrapper>:
40081e18:	004136        	entry	a1, 32
40081e1b:	02e8a5        	call8	40084ca4 <coex_bb_reset_lock>
40081e1e:	0a2d      	mov.n	a2, a10
40081e20:	f01d      	retw.n
	...

40081e24 <coex_bb_reset_unlock_wrapper>:
40081e24:	004136        	entry	a1, 32
40081e27:	02ad      	mov.n	a10, a2
40081e29:	02e865        	call8	40084cb0 <coex_bb_reset_unlock>
40081e2c:	f01d      	retw.n
	...

40081e30 <phy_enter_critical>:
40081e30:	004136        	entry	a1, 32
40081e33:	006320        	rsil	a2, 3
40081e36:	f01d      	retw.n

40081e38 <phy_exit_critical>:
40081e38:	004136        	entry	a1, 32
40081e3b:	20a220        	or	a10, a2, a2
40081e3e:	f9c281        	l32r	a8, 40080548 <_init_end+0x148>
40081e41:	0008e0        	callx8	a8
40081e44:	f01d      	retw.n
	...

40081e48 <esp_cache_err_get_cpuid>:
40081e48:	004136        	entry	a1, 32
40081e4b:	ffaa25        	call8	400818ec <esp_dport_access_int_pause>
40081e4e:	f9dca1        	l32r	a10, 400805c0 <_init_end+0x1c0>
40081e51:	ffaf65        	call8	40081948 <esp_dport_access_reg_read>
40081e54:	f9dc81        	l32r	a8, 400805c4 <_init_end+0x1c4>
40081e57:	118a87        	bany	a10, a8, 40081e6c <esp_cache_err_get_cpuid+0x24>
40081e5a:	f9dba1        	l32r	a10, 400805c8 <_init_end+0x1c8>
40081e5d:	ffaea5        	call8	40081948 <esp_dport_access_reg_read>
40081e60:	f9d921        	l32r	a2, 400805c4 <_init_end+0x1c4>
40081e63:	090a27        	bnone	a10, a2, 40081e70 <esp_cache_err_get_cpuid+0x28>
40081e66:	01a022        	movi	a2, 1
40081e69:	f01d      	retw.n
40081e6b:	020c00        	andb	b0, b12, b0
40081e6e:	f01d      	retw.n
40081e70:	f27c      	movi.n	a2, -1
40081e72:	f01d      	retw.n

40081e74 <timer_alarm_isr>:
40081e74:	004136        	entry	a1, 32
40081e77:	f9d5a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40081e7a:	06c165        	call8	40088a90 <vTaskEnterCritical>
40081e7d:	f9d481        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081e80:	000882        	l8ui	a8, a8, 0
40081e83:	07d856        	bnez	a8, 40081f04 <timer_alarm_isr+0x90>
40081e86:	f9d381        	l32r	a8, 400805d4 <_init_end+0x1d4>
40081e89:	0020c0        	memw
40081e8c:	002882        	l32i	a8, a8, 0
40081e8f:	656887        	bbci	a8, 8, 40081ef8 <timer_alarm_isr+0x84>
40081e92:	f9d181        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081e95:	0020c0        	memw
40081e98:	002892        	l32i	a9, a8, 0
40081e9b:	f9d081        	l32r	a8, 400805dc <_init_end+0x1dc>
40081e9e:	1e9987        	bne	a9, a8, 40081ec0 <timer_alarm_isr+0x4c>
40081ea1:	f9cf81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081ea4:	0020c0        	memw
40081ea7:	002882        	l32i	a8, a8, 0
40081eaa:	f9cc91        	l32r	a9, 400805dc <_init_end+0x1dc>
40081ead:	0fb987        	bgeu	a9, a8, 40081ec0 <timer_alarm_isr+0x4c>
40081eb0:	f9cc81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081eb3:	0020c0        	memw
40081eb6:	0888      	l32i.n	a8, a8, 0
40081eb8:	f9cb81        	l32r	a8, 400805e4 <_init_end+0x1e4>
40081ebb:	000882        	l8ui	a8, a8, 0
40081ebe:	b8bc      	beqz.n	a8, 40081efd <timer_alarm_isr+0x89>
40081ec0:	f9c681        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081ec3:	0020c0        	memw
40081ec6:	0888      	l32i.n	a8, a8, 0
40081ec8:	f9c591        	l32r	a9, 400805dc <_init_end+0x1dc>
40081ecb:	0db987        	bgeu	a9, a8, 40081edc <timer_alarm_isr+0x68>
40081ece:	f9c281        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081ed1:	0020c0        	memw
40081ed4:	0888      	l32i.n	a8, a8, 0
40081ed6:	080c      	movi.n	a8, 0
40081ed8:	000a06        	j	40081f04 <timer_alarm_isr+0x90>
40081edb:	c18100        	mul16u	a8, a1, a0
40081ede:	c0f9      	s32i.n	a15, a0, 48
40081ee0:	880020        	lsi	f2, a0, 0x220
40081ee3:	9108      	l32i.n	a0, a1, 36
40081ee5:	be          	.byte 0xbe
40081ee6:	87f9      	s32i.n	a15, a7, 32
40081ee8:	17b9      	s32i.n	a11, a7, 4
40081eea:	f9bd81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081eed:	0020c0        	memw
40081ef0:	0888      	l32i.n	a8, a8, 0
40081ef2:	180c      	movi.n	a8, 1
40081ef4:	000306        	j	40081f04 <timer_alarm_isr+0x90>
40081ef7:	080c00        	lsx	f0, a12, a0
40081efa:	000186        	j	40081f04 <timer_alarm_isr+0x90>
40081efd:	180c      	movi.n	a8, 1
40081eff:	000046        	j	40081f04 <timer_alarm_isr+0x90>
40081f02:	080c      	movi.n	a8, 0
40081f04:	06f816        	beqz	a8, 40081f77 <timer_alarm_isr+0x103>
40081f07:	f9b681        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081f0a:	0020c0        	memw
40081f0d:	0888      	l32i.n	a8, a8, 0
40081f0f:	f9b391        	l32r	a9, 400805dc <_init_end+0x1dc>
40081f12:	52b987        	bgeu	a9, a8, 40081f68 <timer_alarm_isr+0xf4>
40081f15:	f9b281        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081f18:	0020c0        	memw
40081f1b:	0898      	l32i.n	a9, a8, 0
40081f1d:	0020c0        	memw
40081f20:	0898      	l32i.n	a9, a8, 0
40081f22:	f9b181        	l32r	a8, 400805e8 <_init_end+0x1e8>
40081f25:	898a      	add.n	a8, a9, a8
40081f27:	f9b191        	l32r	a9, 400805ec <_init_end+0x1ec>
40081f2a:	0020c0        	memw
40081f2d:	0989      	s32i.n	a8, a9, 0
40081f2f:	f03d      	nop.n
40081f31:	f03d      	nop.n
40081f33:	f03d      	nop.n
40081f35:	f03d      	nop.n
40081f37:	f9ae81        	l32r	a8, 400805f0 <_init_end+0x1f0>
40081f3a:	f9ae91        	l32r	a9, 400805f4 <_init_end+0x1f4>
40081f3d:	0998      	l32i.n	a9, a9, 0
40081f3f:	08b8      	l32i.n	a11, a8, 0
40081f41:	18a8      	l32i.n	a10, a8, 4
40081f43:	9b9a      	add.n	a9, a11, a9
40081f45:	1c0c      	movi.n	a12, 1
40081f47:	0139b7        	bltu	a9, a11, 40081f4c <timer_alarm_isr+0xd8>
40081f4a:	0c0c      	movi.n	a12, 0
40081f4c:	acaa      	add.n	a10, a12, a10
40081f4e:	0899      	s32i.n	a9, a8, 0
40081f50:	18a9      	s32i.n	a10, a8, 4
40081f52:	090c      	movi.n	a9, 0
40081f54:	f03d      	nop.n
40081f56:	f03d      	nop.n
40081f58:	f03d      	nop.n
40081f5a:	f99d81        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081f5d:	004892        	s8i	a9, a8, 0
40081f60:	0020c0        	memw
40081f63:	000406        	j	40081f77 <timer_alarm_isr+0x103>
40081f66:	d10000        	mul16s	a0, a0, a0
40081f69:	c1f9a4        	lsi	f10, a9, 0x304
40081f6c:	b2f9a4        	lsi	f10, a9, 0x2c8
40081f6f:	a1a7a0        	lsi	f10, a7, 0x284
40081f72:	65f9a3        	lsi	f10, a9, 0x194
40081f75:	9258b5        	call12	40014500 <lm_n192_mod_sub+0x2614>
40081f78:	8100a0        	src	a0, a0, a10
40081f7b:	f99a      	add.n	a15, a9, a9
40081f7d:	004892        	s8i	a9, a8, 0
40081f80:	0020c0        	memw
40081f83:	01a092        	movi	a9, 1
40081f86:	f03d      	nop.n
40081f88:	f03d      	nop.n
40081f8a:	f03d      	nop.n
40081f8c:	f99e81        	l32r	a8, 40080604 <_init_end+0x204>
40081f8f:	0020c0        	memw
40081f92:	0899      	s32i.n	a9, a8, 0
40081f94:	f03d      	nop.n
40081f96:	f03d      	nop.n
40081f98:	f03d      	nop.n
40081f9a:	f03d      	nop.n
40081f9c:	f99091        	l32r	a9, 400805dc <_init_end+0x1dc>
40081f9f:	f98e81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081fa2:	0020c0        	memw
40081fa5:	0899      	s32i.n	a9, a8, 0
40081fa7:	f03d      	nop.n
40081fa9:	f03d      	nop.n
40081fab:	f03d      	nop.n
40081fad:	f03d      	nop.n
40081faf:	f987a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40081fb2:	06c1e5        	call8	40088bd0 <vTaskExitCritical>
40081fb5:	f99481        	l32r	a8, 40080608 <_init_end+0x208>
40081fb8:	0888      	l32i.n	a8, a8, 0
40081fba:	20a220        	or	a10, a2, a2
40081fbd:	0008e0        	callx8	a8
40081fc0:	f01d      	retw.n
	...

40081fc4 <esp_timer_impl_get_time>:
40081fc4:	004136        	entry	a1, 32
40081fc7:	f98621        	l32r	a2, 400805e0 <_init_end+0x1e0>
40081fca:	0020c0        	memw
40081fcd:	0228      	l32i.n	a2, a2, 0
40081fcf:	f98881        	l32r	a8, 400805f0 <_init_end+0x1f0>
40081fd2:	08a8      	l32i.n	a10, a8, 0
40081fd4:	1838      	l32i.n	a3, a8, 4
40081fd6:	f97e81        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081fd9:	000882        	l8ui	a8, a8, 0
40081fdc:	07c856        	bnez	a8, 4008205c <esp_timer_impl_get_time+0x98>
40081fdf:	f97d81        	l32r	a8, 400805d4 <_init_end+0x1d4>
40081fe2:	0020c0        	memw
40081fe5:	0888      	l32i.n	a8, a8, 0
40081fe7:	656887        	bbci	a8, 8, 40082050 <esp_timer_impl_get_time+0x8c>
40081fea:	f97b81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081fed:	0020c0        	memw
40081ff0:	0898      	l32i.n	a9, a8, 0
40081ff2:	f97a81        	l32r	a8, 400805dc <_init_end+0x1dc>
40081ff5:	1f9987        	bne	a9, a8, 40082018 <esp_timer_impl_get_time+0x54>
40081ff8:	f97a81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081ffb:	0020c0        	memw
40081ffe:	002882        	l32i	a8, a8, 0
40082001:	f97691        	l32r	a9, 400805dc <_init_end+0x1dc>
40082004:	10b987        	bgeu	a9, a8, 40082018 <esp_timer_impl_get_time+0x54>
40082007:	f97681        	l32r	a8, 400805e0 <_init_end+0x1e0>
4008200a:	0020c0        	memw
4008200d:	002882        	l32i	a8, a8, 0
40082010:	f97581        	l32r	a8, 400805e4 <_init_end+0x1e4>
40082013:	000882        	l8ui	a8, a8, 0
40082016:	b8bc      	beqz.n	a8, 40082055 <esp_timer_impl_get_time+0x91>
40082018:	f97081        	l32r	a8, 400805d8 <_init_end+0x1d8>
4008201b:	0020c0        	memw
4008201e:	0888      	l32i.n	a8, a8, 0
40082020:	f96f91        	l32r	a9, 400805dc <_init_end+0x1dc>
40082023:	0db987        	bgeu	a9, a8, 40082034 <esp_timer_impl_get_time+0x70>
40082026:	f96c81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40082029:	0020c0        	memw
4008202c:	0888      	l32i.n	a8, a8, 0
4008202e:	080c      	movi.n	a8, 0
40082030:	000a06        	j	4008205c <esp_timer_impl_get_time+0x98>
40082033:	6b8100        	ole.s	b8, f1, f0
40082036:	c0f9      	s32i.n	a15, a0, 48
40082038:	880020        	lsi	f2, a0, 0x220
4008203b:	9108      	l32i.n	a0, a1, 36
4008203d:	f968      	l32i.n	a6, a9, 60
4008203f:	17b987        	bgeu	a9, a8, 4008205a <esp_timer_impl_get_time+0x96>
40082042:	f96781        	l32r	a8, 400805e0 <_init_end+0x1e0>
40082045:	0020c0        	memw
40082048:	0888      	l32i.n	a8, a8, 0
4008204a:	180c      	movi.n	a8, 1
4008204c:	000306        	j	4008205c <esp_timer_impl_get_time+0x98>
4008204f:	080c00        	lsx	f0, a12, a0
40082052:	000186        	j	4008205c <esp_timer_impl_get_time+0x98>
40082055:	180c      	movi.n	a8, 1
40082057:	000046        	j	4008205c <esp_timer_impl_get_time+0x98>
4008205a:	080c      	movi.n	a8, 0
4008205c:	f96c91        	l32r	a9, 4008060c <_init_end+0x20c>
4008205f:	09c8      	l32i.n	a12, a9, 0
40082061:	f95f91        	l32r	a9, 400805e0 <_init_end+0x1e0>
40082064:	0020c0        	memw
40082067:	0998      	l32i.n	a9, a9, 0
40082069:	023297        	bltu	a2, a9, 4008206f <esp_timer_impl_get_time+0xab>
4008206c:	ffd5c6        	j	40081fc7 <esp_timer_impl_get_time+0x3>
4008206f:	f96091        	l32r	a9, 400805f0 <_init_end+0x1f0>
40082072:	0020c0        	memw
40082075:	09e8      	l32i.n	a14, a9, 0
40082077:	0020c0        	memw
4008207a:	19f8      	l32i.n	a15, a9, 4
4008207c:	021ae7        	beq	a10, a14, 40082082 <esp_timer_impl_get_time+0xbe>
4008207f:	ffd106        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082082:	0213f7        	beq	a3, a15, 40082088 <esp_timer_impl_get_time+0xc4>
40082085:	ffcf86        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082088:	f96191        	l32r	a9, 4008060c <_init_end+0x20c>
4008208b:	0020c0        	memw
4008208e:	0998      	l32i.n	a9, a9, 0
40082090:	021c97        	beq	a12, a9, 40082096 <esp_timer_impl_get_time+0xd2>
40082093:	ffcc06        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082096:	f94e91        	l32r	a9, 400805d0 <_init_end+0x1d0>
40082099:	000992        	l8ui	a9, a9, 0
4008209c:	07c956        	bnez	a9, 4008211c <esp_timer_impl_get_time+0x158>
4008209f:	f94d91        	l32r	a9, 400805d4 <_init_end+0x1d4>
400820a2:	0020c0        	memw
400820a5:	0998      	l32i.n	a9, a9, 0
400820a7:	656987        	bbci	a9, 8, 40082110 <esp_timer_impl_get_time+0x14c>
400820aa:	f94b91        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820ad:	0020c0        	memw
400820b0:	09d8      	l32i.n	a13, a9, 0
400820b2:	f94a91        	l32r	a9, 400805dc <_init_end+0x1dc>
400820b5:	1f9d97        	bne	a13, a9, 400820d8 <esp_timer_impl_get_time+0x114>
400820b8:	f94a91        	l32r	a9, 400805e0 <_init_end+0x1e0>
400820bb:	0020c0        	memw
400820be:	002992        	l32i	a9, a9, 0
400820c1:	f946d1        	l32r	a13, 400805dc <_init_end+0x1dc>
400820c4:	10bd97        	bgeu	a13, a9, 400820d8 <esp_timer_impl_get_time+0x114>
400820c7:	f94691        	l32r	a9, 400805e0 <_init_end+0x1e0>
400820ca:	0020c0        	memw
400820cd:	002992        	l32i	a9, a9, 0
400820d0:	f94591        	l32r	a9, 400805e4 <_init_end+0x1e4>
400820d3:	000992        	l8ui	a9, a9, 0
400820d6:	b9bc      	beqz.n	a9, 40082115 <esp_timer_impl_get_time+0x151>
400820d8:	f94091        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820db:	0020c0        	memw
400820de:	0998      	l32i.n	a9, a9, 0
400820e0:	f93fd1        	l32r	a13, 400805dc <_init_end+0x1dc>
400820e3:	0dbd97        	bgeu	a13, a9, 400820f4 <esp_timer_impl_get_time+0x130>
400820e6:	f93c91        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820e9:	0020c0        	memw
400820ec:	0998      	l32i.n	a9, a9, 0
400820ee:	090c      	movi.n	a9, 0
400820f0:	000a06        	j	4008211c <esp_timer_impl_get_time+0x158>
400820f3:	3b9100        	ueq.s	b9, f1, f0
400820f6:	c0f9      	s32i.n	a15, a0, 48
400820f8:	980020        	lsi	f2, a0, 0x260
400820fb:	d109      	s32i.n	a0, a1, 52
400820fd:	f938      	l32i.n	a3, a9, 60
400820ff:	17bd97        	bgeu	a13, a9, 4008211a <esp_timer_impl_get_time+0x156>
40082102:	f93791        	l32r	a9, 400805e0 <_init_end+0x1e0>
40082105:	0020c0        	memw
40082108:	0998      	l32i.n	a9, a9, 0
4008210a:	190c      	movi.n	a9, 1
4008210c:	000306        	j	4008211c <esp_timer_impl_get_time+0x158>
4008210f:	090c00        	l32e	a0, a12, -64
40082112:	000186        	j	4008211c <esp_timer_impl_get_time+0x158>
40082115:	190c      	movi.n	a9, 1
40082117:	000046        	j	4008211c <esp_timer_impl_get_time+0x158>
4008211a:	090c      	movi.n	a9, 0
4008211c:	021897        	beq	a8, a9, 40082122 <esp_timer_impl_get_time+0x15e>
4008211f:	ffa906        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082122:	c222c0        	quou	a2, a2, a12
40082125:	2a2a      	add.n	a2, a10, a2
40082127:	180c      	movi.n	a8, 1
40082129:	0132a7        	bltu	a2, a10, 4008212e <esp_timer_impl_get_time+0x16a>
4008212c:	080c      	movi.n	a8, 0
4008212e:	383a      	add.n	a3, a8, a3
40082130:	f01d      	retw.n
	...

40082134 <esp_timer_impl_set_alarm>:
40082134:	004136        	entry	a1, 32
40082137:	f925a1        	l32r	a10, 400805cc <_init_end+0x1cc>
4008213a:	069565        	call8	40088a90 <vTaskEnterCritical>
4008213d:	f92c91        	l32r	a9, 400805f0 <_init_end+0x1f0>
40082140:	002982        	l32i	a8, a9, 0
40082143:	0129a2        	l32i	a10, a9, 4
40082146:	c08280        	sub	a8, a2, a8
40082149:	01a092        	movi	a9, 1
4008214c:	013287        	bltu	a2, a8, 40082151 <esp_timer_impl_set_alarm+0x1d>
4008214f:	090c      	movi.n	a9, 0
40082151:	c033a0        	sub	a3, a3, a10
40082154:	c03390        	sub	a3, a3, a9
40082157:	08cd      	mov.n	a12, a8
40082159:	039d      	mov.n	a9, a3
4008215b:	f91d21        	l32r	a2, 400805d0 <_init_end+0x1d0>
4008215e:	0002a2        	l8ui	a10, a2, 0
40082161:	07ba56        	bnez	a10, 400821e0 <esp_timer_impl_set_alarm+0xac>
40082164:	f91c21        	l32r	a2, 400805d4 <_init_end+0x1d4>
40082167:	0020c0        	memw
4008216a:	0228      	l32i.n	a2, a2, 0
4008216c:	646287        	bbci	a2, 8, 400821d4 <esp_timer_impl_set_alarm+0xa0>
4008216f:	f91a21        	l32r	a2, 400805d8 <_init_end+0x1d8>
40082172:	0020c0        	memw
40082175:	02a8      	l32i.n	a10, a2, 0
40082177:	f91921        	l32r	a2, 400805dc <_init_end+0x1dc>
4008217a:	1e9a27        	bne	a10, a2, 4008219c <esp_timer_impl_set_alarm+0x68>
4008217d:	f91821        	l32r	a2, 400805e0 <_init_end+0x1e0>
40082180:	0020c0        	memw
40082183:	0228      	l32i.n	a2, a2, 0
40082185:	f915a1        	l32r	a10, 400805dc <_init_end+0x1dc>
40082188:	10ba27        	bgeu	a10, a2, 4008219c <esp_timer_impl_set_alarm+0x68>
4008218b:	f91521        	l32r	a2, 400805e0 <_init_end+0x1e0>
4008218e:	0020c0        	memw
40082191:	002222        	l32i	a2, a2, 0
40082194:	f91421        	l32r	a2, 400805e4 <_init_end+0x1e4>
40082197:	000222        	l8ui	a2, a2, 0
4008219a:	b2bc      	beqz.n	a2, 400821d9 <esp_timer_impl_set_alarm+0xa5>
4008219c:	f90f21        	l32r	a2, 400805d8 <_init_end+0x1d8>
4008219f:	0020c0        	memw
400821a2:	0228      	l32i.n	a2, a2, 0
400821a4:	f90ea1        	l32r	a10, 400805dc <_init_end+0x1dc>
400821a7:	0dba27        	bgeu	a10, a2, 400821b8 <esp_timer_impl_set_alarm+0x84>
400821aa:	f90b21        	l32r	a2, 400805d8 <_init_end+0x1d8>
400821ad:	0020c0        	memw
400821b0:	0228      	l32i.n	a2, a2, 0
400821b2:	0a0c      	movi.n	a10, 0
400821b4:	000a06        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821b7:	0a2100        	add.s	f2, f1, f0
400821ba:	c0f9      	s32i.n	a15, a0, 48
400821bc:	280020        	lsi	f2, a0, 160
400821bf:	07a102        	movi	a0, 0x107
400821c2:	27f9      	s32i.n	a15, a7, 8
400821c4:	17ba      	add.n	a1, a7, a11
400821c6:	f90621        	l32r	a2, 400805e0 <_init_end+0x1e0>
400821c9:	0020c0        	memw
400821cc:	0228      	l32i.n	a2, a2, 0
400821ce:	1a0c      	movi.n	a10, 1
400821d0:	000306        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821d3:	0a0c00        	add.s	f0, f12, f0
400821d6:	000186        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821d9:	1a0c      	movi.n	a10, 1
400821db:	000046        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821de:	0a0c      	movi.n	a10, 0
400821e0:	f90021        	l32r	a2, 400805e0 <_init_end+0x1e0>
400821e3:	0020c0        	memw
400821e6:	02b8      	l32i.n	a11, a2, 0
400821e8:	8abc      	beqz.n	a10, 40082224 <esp_timer_impl_set_alarm+0xf0>
400821ea:	f90221        	l32r	a2, 400805f4 <_init_end+0x1f4>
400821ed:	0228      	l32i.n	a2, a2, 0
400821ef:	017956        	bnez	a9, 4008220a <esp_timer_impl_set_alarm+0xd6>
400821f2:	002956        	bnez	a9, 400821f8 <esp_timer_impl_set_alarm+0xc4>
400821f5:	1132c7        	bltu	a2, a12, 4008220a <esp_timer_impl_set_alarm+0xd6>
400821f8:	f907d1        	l32r	a13, 40080614 <_init_end+0x214>
400821fb:	f907c1        	l32r	a12, 40080618 <_init_end+0x218>
400821fe:	e8a0b2        	movi	a11, 232
40082201:	f8ffa1        	l32r	a10, 40080600 <_init_end+0x200>
40082204:	201110        	or	a1, a1, a1
40082207:	588c65        	call8	400daacc <__assert_func>
4008220a:	c08820        	sub	a8, a8, a2
4008220d:	190c      	movi.n	a9, 1
4008220f:	013c87        	bltu	a12, a8, 40082214 <esp_timer_impl_set_alarm+0xe0>
40082212:	090c      	movi.n	a9, 0
40082214:	08cd      	mov.n	a12, a8
40082216:	c09390        	sub	a9, a3, a9
40082219:	130c      	movi.n	a3, 1
4008221b:	f8ed21        	l32r	a2, 400805d0 <_init_end+0x1d0>
4008221e:	004232        	s8i	a3, a2, 0
40082221:	0020c0        	memw
40082224:	f03d      	nop.n
40082226:	f03d      	nop.n
40082228:	f03d      	nop.n
4008222a:	f03d      	nop.n
4008222c:	f8f821        	l32r	a2, 4008060c <_init_end+0x20c>
4008222f:	02a8      	l32i.n	a10, a2, 0
40082231:	8239a0        	mull	a3, a9, a10
40082234:	a29ca0        	muluh	a9, a12, a10
40082237:	828ca0        	mull	a8, a12, a10
4008223a:	939a      	add.n	a9, a3, a9
4008223c:	11aaf0        	slli	a10, a10, 1
4008223f:	29fc      	bnez.n	a9, 40082275 <esp_timer_impl_set_alarm+0x141>
40082241:	49cc      	bnez.n	a9, 40082249 <esp_timer_impl_set_alarm+0x115>
40082243:	f8f621        	l32r	a2, 4008061c <_init_end+0x21c>
40082246:	2b3287        	bltu	a2, a8, 40082275 <esp_timer_impl_set_alarm+0x141>
40082249:	baba      	add.n	a11, a10, a11
4008224b:	130c      	movi.n	a3, 1
4008224d:	013ba7        	bltu	a11, a10, 40082252 <esp_timer_impl_set_alarm+0x11e>
40082250:	030c      	movi.n	a3, 0
40082252:	0b2d      	mov.n	a2, a11
40082254:	053937        	bltu	a9, a3, 4008225d <esp_timer_impl_set_alarm+0x129>
40082257:	1d9397        	bne	a3, a9, 40082278 <esp_timer_impl_set_alarm+0x144>
4008225a:	1ab8b7        	bgeu	a8, a11, 40082278 <esp_timer_impl_set_alarm+0x144>
4008225d:	c3cc      	bnez.n	a3, 4008226d <esp_timer_impl_set_alarm+0x139>
4008225f:	005356        	bnez	a3, 40082268 <esp_timer_impl_set_alarm+0x134>
40082262:	f8de31        	l32r	a3, 400805dc <_init_end+0x1dc>
40082265:	043327        	bltu	a3, a2, 4008226d <esp_timer_impl_set_alarm+0x139>
40082268:	0b8d      	mov.n	a8, a11
4008226a:	000286        	j	40082278 <esp_timer_impl_set_alarm+0x144>
4008226d:	f8db81        	l32r	a8, 400805dc <_init_end+0x1dc>
40082270:	000106        	j	40082278 <esp_timer_impl_set_alarm+0x144>
40082273:	810000        	src	a0, a0, a0
40082276:	f8d9      	s32i.n	a13, a8, 60
40082278:	f8d821        	l32r	a2, 400805d8 <_init_end+0x1d8>
4008227b:	0020c0        	memw
4008227e:	0289      	s32i.n	a8, a2, 0
40082280:	f03d      	nop.n
40082282:	f03d      	nop.n
40082284:	f03d      	nop.n
40082286:	f03d      	nop.n
40082288:	f8d1a1        	l32r	a10, 400805cc <_init_end+0x1cc>
4008228b:	069465        	call8	40088bd0 <vTaskExitCritical>
4008228e:	f01d      	retw.n

40082290 <esp_timer_impl_update_apb_freq>:
40082290:	004136        	entry	a1, 32
40082293:	f8cea1        	l32r	a10, 400805cc <_init_end+0x1cc>
40082296:	067fa5        	call8	40088a90 <vTaskEnterCritical>
40082299:	f8e131        	l32r	a3, 40080620 <_init_end+0x220>
4008229c:	002332        	l32i	a3, a3, 0
4008229f:	009356        	bnez	a3, 400822ac <esp_timer_impl_update_apb_freq+0x1c>
400822a2:	f8caa1        	l32r	a10, 400805cc <_init_end+0x1cc>
400822a5:	0692a5        	call8	40088bd0 <vTaskExitCritical>
400822a8:	f01d      	retw.n
400822aa:	310000        	srai	a0, a0, 16
400822ad:	f8cb      	addi.n	a15, a8, 12
400822af:	0020c0        	memw
400822b2:	0348      	l32i.n	a4, a3, 0
400822b4:	f8cb31        	l32r	a3, 400805e0 <_init_end+0x1e0>
400822b7:	0020c0        	memw
400822ba:	0338      	l32i.n	a3, a3, 0
400822bc:	c0a430        	sub	a10, a4, a3
400822bf:	a2b2a0        	muluh	a11, a2, a10
400822c2:	f8d281        	l32r	a8, 4008060c <_init_end+0x20c>
400822c5:	08c8      	l32i.n	a12, a8, 0
400822c7:	0d0c      	movi.n	a13, 0
400822c9:	82a2a0        	mull	a10, a2, a10
400822cc:	f8d681        	l32r	a8, 40080624 <_init_end+0x224>
400822cf:	0008e0        	callx8	a8
400822d2:	0acd      	mov.n	a12, a10
400822d4:	01a082        	movi	a8, 1
400822d7:	023347        	bltu	a3, a4, 400822dd <esp_timer_impl_update_apb_freq+0x4d>
400822da:	00a082        	movi	a8, 0
400822dd:	748080        	extui	a8, a8, 0, 8
400822e0:	190c      	movi.n	a9, 1
400822e2:	008b56        	bnez	a11, 400822ee <esp_timer_impl_update_apb_freq+0x5e>
400822e5:	007b56        	bnez	a11, 400822f0 <esp_timer_impl_update_apb_freq+0x60>
400822e8:	f8bdb1        	l32r	a11, 400805dc <_init_end+0x1dc>
400822eb:	01bbc7        	bgeu	a11, a12, 400822f0 <esp_timer_impl_update_apb_freq+0x60>
400822ee:	090c      	movi.n	a9, 0
400822f0:	248897        	bany	a8, a9, 40082318 <esp_timer_impl_update_apb_freq+0x88>
400822f3:	f8ba81        	l32r	a8, 400805dc <_init_end+0x1dc>
400822f6:	1b1487        	beq	a4, a8, 40082315 <esp_timer_impl_update_apb_freq+0x85>
400822f9:	180c      	movi.n	a8, 1
400822fb:	f8ba41        	l32r	a4, 400805e4 <_init_end+0x1e4>
400822fe:	004482        	s8i	a8, a4, 0
40082301:	0020c0        	memw
40082304:	f03d      	nop.n
40082306:	f03d      	nop.n
40082308:	f03d      	nop.n
4008230a:	f03d      	nop.n
4008230c:	f8b4a1        	l32r	a10, 400805dc <_init_end+0x1dc>
4008230f:	000146        	j	40082318 <esp_timer_impl_update_apb_freq+0x88>
40082312:	000000        	ill
40082315:	f8b1a1        	l32r	a10, 400805dc <_init_end+0x1dc>
40082318:	f8b041        	l32r	a4, 400805d8 <_init_end+0x1d8>
4008231b:	0020c0        	memw
4008231e:	04a9      	s32i.n	a10, a4, 0
40082320:	080c      	movi.n	a8, 0
40082322:	f03d      	nop.n
40082324:	f03d      	nop.n
40082326:	f03d      	nop.n
40082328:	f8b141        	l32r	a4, 400805ec <_init_end+0x1ec>
4008232b:	0020c0        	memw
4008232e:	0489      	s32i.n	a8, a4, 0
40082330:	f03d      	nop.n
40082332:	f03d      	nop.n
40082334:	f03d      	nop.n
40082336:	f03d      	nop.n
40082338:	f8b541        	l32r	a4, 4008060c <_init_end+0x20c>
4008233b:	0448      	l32i.n	a4, a4, 0
4008233d:	c23340        	quou	a3, a3, a4
40082340:	f8ac81        	l32r	a8, 400805f0 <_init_end+0x1f0>
40082343:	0898      	l32i.n	a9, a8, 0
40082345:	1848      	l32i.n	a4, a8, 4
40082347:	393a      	add.n	a3, a9, a3
40082349:	1a0c      	movi.n	a10, 1
4008234b:	023397        	bltu	a3, a9, 40082351 <esp_timer_impl_update_apb_freq+0xc1>
4008234e:	00a0a2        	movi	a10, 0
40082351:	804a40        	add	a4, a10, a4
40082354:	006832        	s32i	a3, a8, 0
40082357:	016842        	s32i	a4, a8, 4
4008235a:	f03d      	nop.n
4008235c:	f03d      	nop.n
4008235e:	f03d      	nop.n
40082360:	f03d      	nop.n
40082362:	f8aa31        	l32r	a3, 4008060c <_init_end+0x20c>
40082365:	0329      	s32i.n	a2, a3, 0
40082367:	f03d      	nop.n
40082369:	f03d      	nop.n
4008236b:	f03d      	nop.n
4008236d:	f03d      	nop.n
4008236f:	f89b31        	l32r	a3, 400805dc <_init_end+0x1dc>
40082372:	c22320        	quou	a2, a3, a2
40082375:	f89f31        	l32r	a3, 400805f4 <_init_end+0x1f4>
40082378:	0329      	s32i.n	a2, a3, 0
4008237a:	f03d      	nop.n
4008237c:	f03d      	nop.n
4008237e:	f03d      	nop.n
40082380:	f03d      	nop.n
40082382:	f892a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40082385:	0684a5        	call8	40088bd0 <vTaskExitCritical>
40082388:	f01d      	retw.n
	...

4008238c <esp_timer_impl_get_min_period_us>:
4008238c:	004136        	entry	a1, 32
4008238f:	f8a621        	l32r	a2, 40080628 <_init_end+0x228>
40082392:	f86031        	l32r	a3, 40080514 <_init_end+0x114>
40082395:	f01d      	retw.n
	...

40082398 <esp_vApplicationTickHook>:
40082398:	004136        	entry	a1, 32
4008239b:	03eb30        	rsr.prid	a3
4008239e:	043d30        	extui	a3, a3, 13, 1
400823a1:	020c      	movi.n	a2, 0
400823a3:	0004c6        	j	400823ba <esp_vApplicationTickHook+0x22>
400823a6:	200000        	or	a0, a0, a0
400823a9:	91b083        	lsi	f8, a0, 0x244
400823ac:	90f8a0        	addx2	a15, a8, a10
400823af:	a088      	l32i.n	a8, a0, 40
400823b1:	0888      	l32i.n	a8, a8, 0
400823b3:	188c      	beqz.n	a8, 400823b8 <esp_vApplicationTickHook+0x20>
400823b5:	0008e0        	callx8	a8
400823b8:	221b      	addi.n	a2, a2, 1
400823ba:	ea82a6        	blti	a2, 8, 400823a8 <esp_vApplicationTickHook+0x10>
400823bd:	f01d      	retw.n
	...

400823c0 <timer_initialized>:
400823c0:	004136        	entry	a1, 32
400823c3:	1288      	l32i.n	a8, a2, 4
400823c5:	f89a21        	l32r	a2, 40080630 <_init_end+0x230>
400823c8:	882a      	add.n	a8, a8, a2
400823ca:	020c      	movi.n	a2, 0
400823cc:	190c      	movi.n	a9, 1
400823ce:	832980        	moveqz	a2, a9, a8
400823d1:	f01d      	retw.n
	...

400823d4 <ets_timer_arm_us>:
400823d4:	004136        	entry	a1, 32
400823d7:	744040        	extui	a4, a4, 0, 8
400823da:	02ad      	mov.n	a10, a2
400823dc:	fffe25        	call8	400823c0 <timer_initialized>
400823df:	00da56        	bnez	a10, 400823f0 <ets_timer_arm_us+0x1c>
400823e2:	f894d1        	l32r	a13, 40080634 <_init_end+0x234>
400823e5:	f894c1        	l32r	a12, 40080638 <_init_end+0x238>
400823e8:	9b4c      	movi.n	a11, 73
400823ea:	f894a1        	l32r	a10, 4008063c <_init_end+0x23c>
400823ed:	586de5        	call8	400daacc <__assert_func>
400823f0:	0422a2        	l32i	a10, a2, 16
400823f3:	ff29a5        	call8	4008168c <esp_timer_stop>
400823f6:	019456        	bnez	a4, 40082413 <ets_timer_arm_us+0x3f>
400823f9:	20c330        	or	a12, a3, a3
400823fc:	0d0c      	movi.n	a13, 0
400823fe:	42a8      	l32i.n	a10, a2, 16
40082400:	ff2de5        	call8	400816e0 <esp_timer_start_once>
40082403:	5aac      	beqz.n	a10, 4008242c <ets_timer_arm_us+0x58>
40082405:	f88ee1        	l32r	a14, 40080640 <_init_end+0x240>
40082408:	f88cd1        	l32r	a13, 40080638 <_init_end+0x238>
4008240b:	cc4c      	movi.n	a12, 76
4008240d:	f88bb1        	l32r	a11, 4008063c <_init_end+0x23c>
40082410:	092325        	call8	4008b644 <_esp_error_check_failed>
40082413:	03cd      	mov.n	a12, a3
40082415:	0d0c      	movi.n	a13, 0
40082417:	42a8      	l32i.n	a10, a2, 16
40082419:	ff3125        	call8	4008172c <esp_timer_start_periodic>
4008241c:	ca8c      	beqz.n	a10, 4008242c <ets_timer_arm_us+0x58>
4008241e:	f889e1        	l32r	a14, 40080644 <_init_end+0x244>
40082421:	f885d1        	l32r	a13, 40080638 <_init_end+0x238>
40082424:	ec4c      	movi.n	a12, 78
40082426:	f885b1        	l32r	a11, 4008063c <_init_end+0x23c>
40082429:	0921a5        	call8	4008b644 <_esp_error_check_failed>
4008242c:	f01d      	retw.n
	...

40082430 <ets_timer_arm>:
40082430:	004136        	entry	a1, 32
40082433:	744040        	extui	a4, a4, 0, 8
40082436:	e8a382        	movi	a8, 0x3e8
40082439:	825830        	mull	a5, a8, a3
4008243c:	a23830        	muluh	a3, a8, a3
4008243f:	02ad      	mov.n	a10, a2
40082441:	fff7e5        	call8	400823c0 <timer_initialized>
40082444:	cacc      	bnez.n	a10, 40082454 <ets_timer_arm+0x24>
40082446:	f87bd1        	l32r	a13, 40080634 <_init_end+0x234>
40082449:	f87fc1        	l32r	a12, 40080648 <_init_end+0x248>
4008244c:	5b5c      	movi.n	a11, 85
4008244e:	f87ba1        	l32r	a10, 4008063c <_init_end+0x23c>
40082451:	5867a5        	call8	400daacc <__assert_func>
40082454:	0422a2        	l32i	a10, a2, 16
40082457:	ff2365        	call8	4008168c <esp_timer_stop>
4008245a:	019456        	bnez	a4, 40082477 <ets_timer_arm+0x47>
4008245d:	20c550        	or	a12, a5, a5
40082460:	03dd      	mov.n	a13, a3
40082462:	42a8      	l32i.n	a10, a2, 16
40082464:	ff27a5        	call8	400816e0 <esp_timer_start_once>
40082467:	5aac      	beqz.n	a10, 40082490 <ets_timer_arm+0x60>
40082469:	f875e1        	l32r	a14, 40080640 <_init_end+0x240>
4008246c:	f877d1        	l32r	a13, 40080648 <_init_end+0x248>
4008246f:	8c5c      	movi.n	a12, 88
40082471:	f872b1        	l32r	a11, 4008063c <_init_end+0x23c>
40082474:	091ce5        	call8	4008b644 <_esp_error_check_failed>
40082477:	05cd      	mov.n	a12, a5
40082479:	03dd      	mov.n	a13, a3
4008247b:	42a8      	l32i.n	a10, a2, 16
4008247d:	ff2ae5        	call8	4008172c <esp_timer_start_periodic>
40082480:	ca8c      	beqz.n	a10, 40082490 <ets_timer_arm+0x60>
40082482:	f870e1        	l32r	a14, 40080644 <_init_end+0x244>
40082485:	f870d1        	l32r	a13, 40080648 <_init_end+0x248>
40082488:	ac5c      	movi.n	a12, 90
4008248a:	f86cb1        	l32r	a11, 4008063c <_init_end+0x23c>
4008248d:	091b65        	call8	4008b644 <_esp_error_check_failed>
40082490:	f01d      	retw.n
	...

40082494 <ets_timer_disarm>:
40082494:	004136        	entry	a1, 32
40082497:	20a220        	or	a10, a2, a2
4008249a:	fff265        	call8	400823c0 <timer_initialized>
4008249d:	005a16        	beqz	a10, 400824a6 <ets_timer_disarm+0x12>
400824a0:	0422a2        	l32i	a10, a2, 16
400824a3:	ff1ea5        	call8	4008168c <esp_timer_stop>
400824a6:	f01d      	retw.n

400824a8 <ipc_task>:
400824a8:	004136        	entry	a1, 32
400824ab:	03eb30        	rsr.prid	a3
400824ae:	043d30        	extui	a3, a3, 13, 1
400824b1:	101237        	beq	a2, a3, 400824c5 <ipc_task+0x1d>
400824b4:	f866d1        	l32r	a13, 4008064c <_init_end+0x24c>
400824b7:	f866c1        	l32r	a12, 40080650 <_init_end+0x250>
400824ba:	eb2c      	movi.n	a11, 46
400824bc:	f866a1        	l32r	a10, 40080654 <_init_end+0x254>
400824bf:	201110        	or	a1, a1, a1
400824c2:	5860a5        	call8	400daacc <__assert_func>
400824c5:	f86481        	l32r	a8, 40080658 <_init_end+0x258>
400824c8:	a08280        	addx4	a8, a2, a8
400824cb:	00a0d2        	movi	a13, 0
400824ce:	fc7c      	movi.n	a12, -1
400824d0:	0dbd      	mov.n	a11, a13
400824d2:	08a8      	l32i.n	a10, a8, 0
400824d4:	0568e5        	call8	40087b64 <xQueueGenericReceive>
400824d7:	021a26        	beqi	a10, 1, 400824dd <ipc_task+0x35>
400824da:	08e925        	call8	4008b36c <abort>
400824dd:	f85f31        	l32r	a3, 4008065c <_init_end+0x25c>
400824e0:	0020c0        	memw
400824e3:	0338      	l32i.n	a3, a3, 0
400824e5:	f85e41        	l32r	a4, 40080660 <_init_end+0x260>
400824e8:	0020c0        	memw
400824eb:	0448      	l32i.n	a4, a4, 0
400824ed:	f85d81        	l32r	a8, 40080664 <_init_end+0x264>
400824f0:	0020c0        	memw
400824f3:	0888      	l32i.n	a8, a8, 0
400824f5:	c8cc      	bnez.n	a8, 40082505 <ipc_task+0x5d>
400824f7:	0d0c      	movi.n	a13, 0
400824f9:	0dcd      	mov.n	a12, a13
400824fb:	0dbd      	mov.n	a11, a13
400824fd:	f85a81        	l32r	a8, 40080668 <_init_end+0x268>
40082500:	08a8      	l32i.n	a10, a8, 0
40082502:	052e25        	call8	400877e4 <xQueueGenericSend>
40082505:	04ad      	mov.n	a10, a4
40082507:	0003e0        	callx8	a3
4008250a:	f85681        	l32r	a8, 40080664 <_init_end+0x264>
4008250d:	0020c0        	memw
40082510:	0888      	l32i.n	a8, a8, 0
40082512:	af1866        	bnei	a8, 1, 400824c5 <ipc_task+0x1d>
40082515:	0d0c      	movi.n	a13, 0
40082517:	0dcd      	mov.n	a12, a13
40082519:	0dbd      	mov.n	a11, a13
4008251b:	f85331        	l32r	a3, 40080668 <_init_end+0x268>
4008251e:	0023a2        	l32i	a10, a3, 0
40082521:	052c25        	call8	400877e4 <xQueueGenericSend>
40082524:	ffe746        	j	400824c5 <ipc_task+0x1d>
	...

40082528 <esp_reset_reason_set_hint>:
40082528:	004136        	entry	a1, 32
4008252b:	f85081        	l32r	a8, 4008066c <_init_end+0x26c>
4008252e:	0e0287        	bnone	a2, a8, 40082540 <esp_reset_reason_set_hint+0x18>
40082531:	f84fd1        	l32r	a13, 40080670 <_init_end+0x270>
40082534:	f850c1        	l32r	a12, 40080674 <_init_end+0x274>
40082537:	6aa0b2        	movi	a11, 106
4008253a:	f84fa1        	l32r	a10, 40080678 <_init_end+0x278>
4008253d:	5858e5        	call8	400daacc <__assert_func>
40082540:	118200        	slli	a8, a2, 16
40082543:	202280        	or	a2, a2, a8
40082546:	f84d81        	l32r	a8, 4008067c <_init_end+0x27c>
40082549:	202280        	or	a2, a2, a8
4008254c:	f84d81        	l32r	a8, 40080680 <_init_end+0x280>
4008254f:	0020c0        	memw
40082552:	0829      	s32i.n	a2, a8, 0
40082554:	f01d      	retw.n
	...

40082558 <esp_reset_reason_get_hint>:
40082558:	004136        	entry	a1, 32
4008255b:	f84921        	l32r	a2, 40080680 <_init_end+0x280>
4008255e:	0020c0        	memw
40082561:	0288      	l32i.n	a8, a2, 0
40082563:	e5a080        	extui	a10, a8, 16, 15
40082566:	e42080        	extui	a2, a8, 0, 15
40082569:	f97c      	movi.n	a9, -1
4008256b:	308980        	xor	a8, a9, a8
4008256e:	059f80        	extui	a9, a8, 31, 1
40082571:	c0aa20        	sub	a10, a10, a2
40082574:	080c      	movi.n	a8, 0
40082576:	1b0c      	movi.n	a11, 1
40082578:	938ba0        	movnez	a8, a11, a10
4008257b:	208890        	or	a8, a8, a9
4008257e:	088c      	beqz.n	a8, 40082582 <esp_reset_reason_get_hint+0x2a>
40082580:	020c      	movi.n	a2, 0
40082582:	f01d      	retw.n
40082584:	00e0c4        	lsi	f12, a0, 0
40082587:	60          	.byte 0x60

40082588 <phy_en_hw_set_freq$part$0>:
40082588:	004136        	entry	a1, 32
4008258b:	fffe91        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
4008258e:	f7f381        	l32r	a8, 4008055c <_init_end+0x15c>
40082591:	0020c0        	memw
40082594:	09a8      	l32i.n	a10, a9, 0
40082596:	108a80        	and	a8, a10, a8
40082599:	0020c0        	memw
4008259c:	0989      	s32i.n	a8, a9, 0
4008259e:	f01d      	retw.n
400825a0:	09b8      	l32i.n	a11, a9, 0
400825a2:	3ffc      	bnez.n	a15, 400825d9 <pll_correct_dcap+0x21>
400825a4:	00e130        	lsi	f3, a1, 0
400825a7:	00ff60        	lsi	f6, a15, 0
400825aa:	ff          	.byte 0xff
400825ab:	ff          	.byte 0xff
400825ac:	00e0c0        	lsi	f12, a0, 0
400825af:	ff0060        	f64cmph	a0, a0, a6, 15
400825b2:	ff          	.byte 0xff
400825b3:	e14800        	lsi	f0, a8, 0x384
400825b6:	00          	.byte 00
400825b7:	60          	.byte 0x60

400825b8 <pll_correct_dcap>:
400825b8:	004136        	entry	a1, 32
400825bb:	fff981        	l32r	a8, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400825be:	0e0c      	movi.n	a14, 0
400825c0:	0888      	l32i.n	a8, a8, 0
400825c2:	7d0c      	movi.n	a13, 7
400825c4:	292882        	l32i	a8, a8, 164
400825c7:	5c0c      	movi.n	a12, 5
400825c9:	1b0c      	movi.n	a11, 1
400825cb:	62a0a2        	movi	a10, 98
400825ce:	0008e0        	callx8	a8
400825d1:	748020        	extui	a8, a2, 0, 8
400825d4:	744040        	extui	a4, a4, 0, 8
400825d7:	21ea17        	bbsi	a10, 1, 400825fc <pll_correct_dcap+0x44>
400825da:	0420a0        	extui	a2, a10, 0, 1
400825dd:	32ec      	bnez.n	a2, 40082604 <pll_correct_dcap+0x4c>
400825df:	f01d      	retw.n
400825e1:	fff041        	l32r	a4, 400825a4 <phy_en_hw_set_freq$part$0+0x1c>
400825e4:	fff131        	l32r	a3, 400825a8 <phy_en_hw_set_freq$part$0+0x20>
400825e7:	0020c0        	memw
400825ea:	0498      	l32i.n	a9, a4, 0
400825ec:	118880        	slli	a8, a8, 8
400825ef:	103930        	and	a3, a9, a3
400825f2:	208380        	or	a8, a3, a8
400825f5:	0020c0        	memw
400825f8:	0489      	s32i.n	a8, a4, 0
400825fa:	f01d      	retw.n
400825fc:	ffa0c2        	movi	a12, 255
400825ff:	0c2d      	mov.n	a2, a12
40082601:	0000c6        	j	40082608 <pll_correct_dcap+0x50>
40082604:	1c0c      	movi.n	a12, 1
40082606:	0c2d      	mov.n	a2, a12
40082608:	ffdfb1        	l32r	a11, 40082584 <esp_reset_reason_get_hint+0x2c>
4008260b:	908880        	addx2	a8, a8, a8
4008260e:	0020c0        	memw
40082611:	0b98      	l32i.n	a9, a11, 0
40082613:	00afd2        	movi	a13, 0xffffff00
40082616:	10d9d0        	and	a13, a9, a13
40082619:	748080        	extui	a8, a8, 0, 8
4008261c:	208d80        	or	a8, a13, a8
4008261f:	0020c0        	memw
40082622:	0b89      	s32i.n	a8, a11, 0
40082624:	ffe281        	l32r	a8, 400825ac <phy_en_hw_set_freq$part$0+0x24>
40082627:	0020c0        	memw
4008262a:	0898      	l32i.n	a9, a8, 0
4008262c:	75a890        	extui	a10, a9, 24, 8
4008262f:	89ca      	add.n	a8, a9, a12
40082631:	ccaa      	add.n	a12, a12, a10
40082633:	ffdfa1        	l32r	a10, 400825b0 <phy_en_hw_set_freq$part$0+0x28>
40082636:	748080        	extui	a8, a8, 0, 8
40082639:	1099a0        	and	a9, a9, a10
4008263c:	209980        	or	a9, a9, a8
4008263f:	01ac80        	slli	a10, a12, 24
40082642:	209a90        	or	a9, a10, a9
40082645:	ffdba1        	l32r	a10, 400825b4 <phy_en_hw_set_freq$part$0+0x2c>
40082648:	0020c0        	memw
4008264b:	0a99      	s32i.n	a9, a10, 0
4008264d:	0020c0        	memw
40082650:	0ba8      	l32i.n	a10, a11, 0
40082652:	00a292        	movi	a9, 0x200
40082655:	209a90        	or	a9, a10, a9
40082658:	0020c0        	memw
4008265b:	0b99      	s32i.n	a9, a11, 0
4008265d:	0020c0        	memw
40082660:	0ba8      	l32i.n	a10, a11, 0
40082662:	ffad92        	movi	a9, 0xfffffdff
40082665:	109a90        	and	a9, a10, a9
40082668:	0020c0        	memw
4008266b:	0b99      	s32i.n	a9, a11, 0
4008266d:	004382        	s8i	a8, a3, 0
40082670:	f6d456        	bnez	a4, 400825e1 <pll_correct_dcap+0x29>
40082673:	f01d      	retw.n
40082675:	000000        	ill
40082678:	fc09b4        	lsi	f11, a9, 0x3f0
4008267b:	3f          	.byte 0x3f
4008267c:	fc09b3        	lsi	f11, a9, 0x3f0
4008267f:	3f          	.byte 0x3f
40082680:	e168      	l32i.n	a6, a1, 56
40082682:	bc6000        	lsi	f0, a0, 0x2f0
40082685:	fc09      	s32i.n	a0, a12, 60
40082687:	3f          	.byte 0x3f
40082688:	011040        	slli	a1, a0, 28
4008268b:	60          	.byte 0x60

4008268c <phy_unforce_wifi_chan>:
4008268c:	006136        	entry	a1, 48
4008268f:	201110        	or	a1, a1, a1
40082692:	ff79e5        	call8	40081e30 <phy_enter_critical>
40082695:	fff981        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082698:	fff891        	l32r	a9, 40082678 <pll_correct_dcap+0xc0>
4008269b:	0b0c      	movi.n	a11, 0
4008269d:	000882        	l8ui	a8, a8, 0
400826a0:	0049b2        	s8i	a11, a9, 0
400826a3:	c8fc      	bnez.n	a8, 400826e3 <phy_unforce_wifi_chan+0x57>
400826a5:	fff6c1        	l32r	a12, 40082680 <pll_correct_dcap+0xc8>
400826a8:	f7f5b1        	l32r	a11, 4008067c <_init_end+0x27c>
400826ab:	ffb691        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
400826ae:	00a1d2        	movi	a13, 0x100
400826b1:	0020c0        	memw
400826b4:	002c82        	l32i	a8, a12, 0
400826b7:	0808b7        	bnone	a8, a11, 400826c3 <phy_unforce_wifi_chan+0x37>
400826ba:	0020c0        	memw
400826bd:	002982        	l32i	a8, a9, 0
400826c0:	ed08d7        	bnone	a8, a13, 400826b1 <phy_unforce_wifi_chan+0x25>
400826c3:	0020c0        	memw
400826c6:	0029b2        	l32i	a11, a9, 0
400826c9:	f9ac81        	l32r	a8, 40080d7c <_init_end+0x97c>
400826cc:	108b80        	and	a8, a11, a8
400826cf:	0020c0        	memw
400826d2:	0989      	s32i.n	a8, a9, 0
400826d4:	ffec81        	l32r	a8, 40082684 <pll_correct_dcap+0xcc>
400826d7:	000882        	l8ui	a8, a8, 0
400826da:	58cc      	bnez.n	a8, 400826e3 <phy_unforce_wifi_chan+0x57>
400826dc:	01a9      	s32i.n	a10, a1, 0
400826de:	ffeaa5        	call8	40082588 <phy_en_hw_set_freq$part$0>
400826e1:	01a8      	l32i.n	a10, a1, 0
400826e3:	ffe991        	l32r	a9, 40082688 <pll_correct_dcap+0xd0>
400826e6:	180c      	movi.n	a8, 1
400826e8:	0020c0        	memw
400826eb:	09b8      	l32i.n	a11, a9, 0
400826ed:	208b80        	or	a8, a11, a8
400826f0:	0020c0        	memw
400826f3:	0989      	s32i.n	a8, a9, 0
400826f5:	ff7425        	call8	40081e38 <phy_exit_critical>
400826f8:	f01d      	retw.n
	...

400826fc <phy_dis_hw_set_freq>:
400826fc:	004136        	entry	a1, 32
400826ff:	ffe0b1        	l32r	a11, 40082680 <pll_correct_dcap+0xc8>
40082702:	f7dea1        	l32r	a10, 4008067c <_init_end+0x27c>
40082705:	ff9f91        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
40082708:	00a1c2        	movi	a12, 0x100
4008270b:	0020c0        	memw
4008270e:	0b88      	l32i.n	a8, a11, 0
40082710:	0808a7        	bnone	a8, a10, 4008271c <phy_dis_hw_set_freq+0x20>
40082713:	0020c0        	memw
40082716:	002982        	l32i	a8, a9, 0
40082719:	ee08c7        	bnone	a8, a12, 4008270b <phy_dis_hw_set_freq+0xf>
4008271c:	0020c0        	memw
4008271f:	09b8      	l32i.n	a11, a9, 0
40082721:	f9ac81        	l32r	a8, 40080dd4 <_init_end+0x9d4>
40082724:	2a0c      	movi.n	a10, 2
40082726:	208b80        	or	a8, a11, a8
40082729:	0020c0        	memw
4008272c:	0989      	s32i.n	a8, a9, 0
4008272e:	f75d81        	l32r	a8, 400804a4 <_init_end+0xa4>
40082731:	0008e0        	callx8	a8
40082734:	f01d      	retw.n
	...

40082738 <phy_force_wifi_chan>:
40082738:	006136        	entry	a1, 48
4008273b:	ff6f65        	call8	40081e30 <phy_enter_critical>
4008273e:	ffce81        	l32r	a8, 40082678 <pll_correct_dcap+0xc0>
40082741:	190c      	movi.n	a9, 1
40082743:	004892        	s8i	a9, a8, 0
40082746:	0061a2        	s32i	a10, a1, 0
40082749:	fffb25        	call8	400826fc <phy_dis_hw_set_freq>
4008274c:	ffcf91        	l32r	a9, 40082688 <pll_correct_dcap+0xd0>
4008274f:	e87c      	movi.n	a8, -2
40082751:	0020c0        	memw
40082754:	09b8      	l32i.n	a11, a9, 0
40082756:	01a8      	l32i.n	a10, a1, 0
40082758:	108b80        	and	a8, a11, a8
4008275b:	0020c0        	memw
4008275e:	0989      	s32i.n	a8, a9, 0
40082760:	ffc781        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082763:	000882        	l8ui	a8, a8, 0
40082766:	05d856        	bnez	a8, 400827c7 <phy_force_wifi_chan+0x8f>
40082769:	ff8681        	l32r	a8, 40082584 <esp_reset_reason_get_hint+0x2c>
4008276c:	ffae92        	movi	a9, 0xfffffeff
4008276f:	0020c0        	memw
40082772:	08b8      	l32i.n	a11, a8, 0
40082774:	109b90        	and	a9, a11, a9
40082777:	0020c0        	memw
4008277a:	0899      	s32i.n	a9, a8, 0
4008277c:	0020c0        	memw
4008277f:	08b8      	l32i.n	a11, a8, 0
40082781:	f97e91        	l32r	a9, 40080d7c <_init_end+0x97c>
40082784:	10bb90        	and	a11, a11, a9
40082787:	f77791        	l32r	a9, 40080564 <_init_end+0x164>
4008278a:	209b90        	or	a9, a11, a9
4008278d:	0020c0        	memw
40082790:	0899      	s32i.n	a9, a8, 0
40082792:	0020c0        	memw
40082795:	002892        	l32i	a9, a8, 0
40082798:	00a1b2        	movi	a11, 0x100
4008279b:	2099b0        	or	a9, a9, a11
4008279e:	0020c0        	memw
400827a1:	006892        	s32i	a9, a8, 0
400827a4:	0020c0        	memw
400827a7:	002892        	l32i	a9, a8, 0
400827aa:	008996        	bltz	a9, 400827b6 <phy_force_wifi_chan+0x7e>
400827ad:	0020c0        	memw
400827b0:	002892        	l32i	a9, a8, 0
400827b3:	ed89b7        	bany	a9, a11, 400827a4 <phy_force_wifi_chan+0x6c>
400827b6:	0020c0        	memw
400827b9:	0028b2        	l32i	a11, a8, 0
400827bc:	ffae92        	movi	a9, 0xfffffeff
400827bf:	109b90        	and	a9, a11, a9
400827c2:	0020c0        	memw
400827c5:	0899      	s32i.n	a9, a8, 0
400827c7:	ff6725        	call8	40081e38 <phy_exit_critical>
400827ca:	f01d      	retw.n
400827cc:	003800        	lsi	f0, a8, 0
400827cf:	18          	.byte 0x18

400827d0 <ram_chip_i2c_writeReg>:
400827d0:	006136        	entry	a1, 48
400827d3:	ff65e5        	call8	40081e30 <phy_enter_critical>
400827d6:	ffab61        	l32r	a6, 40082684 <pll_correct_dcap+0xcc>
400827d9:	090c      	movi.n	a9, 0
400827db:	000682        	l8ui	a8, a6, 0
400827de:	1c0c      	movi.n	a12, 1
400827e0:	09bd      	mov.n	a11, a9
400827e2:	83bc80        	moveqz	a11, a12, a8
400827e5:	743030        	extui	a3, a3, 0, 8
400827e8:	742020        	extui	a2, a2, 0, 8
400827eb:	744040        	extui	a4, a4, 0, 8
400827ee:	745050        	extui	a5, a5, 0, 8
400827f1:	0b8d      	mov.n	a8, a11
400827f3:	0123b6        	bltui	a3, 2, 400827f8 <ram_chip_i2c_writeReg+0x28>
400827f6:	09cd      	mov.n	a12, a9
400827f8:	10c8c0        	and	a12, a8, a12
400827fb:	02ac16        	beqz	a12, 40082829 <ram_chip_i2c_writeReg+0x59>
400827fe:	0061a2        	s32i	a10, a1, 0
40082801:	ffefa5        	call8	400826fc <phy_dis_hw_set_freq>
40082804:	ff6091        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
40082807:	ffae82        	movi	a8, 0xfffffeff
4008280a:	0020c0        	memw
4008280d:	09b8      	l32i.n	a11, a9, 0
4008280f:	1c0c      	movi.n	a12, 1
40082811:	108b80        	and	a8, a11, a8
40082814:	0020c0        	memw
40082817:	006982        	s32i	a8, a9, 0
4008281a:	000662        	l8ui	a6, a6, 0
4008281d:	00a082        	movi	a8, 0
40082820:	93c860        	movnez	a12, a8, a6
40082823:	0021a2        	l32i	a10, a1, 0
40082826:	74c0c0        	extui	a12, a12, 0, 8
40082829:	ffe861        	l32r	a6, 400827cc <phy_force_wifi_chan+0x94>
4008282c:	f96a91        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008282f:	808360        	add	a8, a3, a6
40082832:	1188e0        	slli	a8, a8, 2
40082835:	0020c0        	memw
40082838:	08b8      	l32i.n	a11, a8, 0
4008283a:	f78b97        	bany	a11, a9, 40082835 <ram_chip_i2c_writeReg+0x65>
4008283d:	f90ed1        	l32r	a13, 40080c78 <_init_end+0x878>
40082840:	114480        	slli	a4, a4, 8
40082843:	2062d0        	or	a6, a2, a13
40082846:	206460        	or	a6, a4, a6
40082849:	11b500        	slli	a11, a5, 16
4008284c:	20b6b0        	or	a11, a6, a11
4008284f:	0020c0        	memw
40082852:	0068b2        	s32i	a11, a8, 0
40082855:	0020c0        	memw
40082858:	08b8      	l32i.n	a11, a8, 0
4008285a:	f78b97        	bany	a11, a9, 40082855 <ram_chip_i2c_writeReg+0x85>
4008285d:	006c16        	beqz	a12, 40082867 <ram_chip_i2c_writeReg+0x97>
40082860:	01a9      	s32i.n	a10, a1, 0
40082862:	ffd265        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082865:	01a8      	l32i.n	a10, a1, 0
40082867:	ff5d25        	call8	40081e38 <phy_exit_critical>
4008286a:	f01d      	retw.n
4008286c:	f878      	l32i.n	a7, a8, 60
4008286e:	3ffb      	addi.n	a3, a15, 15
40082870:	00e044        	lsi	f4, a0, 0
40082873:	00ff60        	lsi	f6, a15, 0
40082876:	fffc      	bnez.n	a15, 400828b9 <ram_chip_i2c_readReg+0x3d>
40082878:	03f000        	rsr.ccompare0	a0
	...

4008287c <ram_chip_i2c_readReg>:
4008287c:	006136        	entry	a1, 48
4008287f:	ff5b25        	call8	40081e30 <phy_enter_critical>
40082882:	ff8051        	l32r	a5, 40082684 <pll_correct_dcap+0xcc>
40082885:	00a092        	movi	a9, 0
40082888:	000582        	l8ui	a8, a5, 0
4008288b:	01a0c2        	movi	a12, 1
4008288e:	206990        	or	a6, a9, a9
40082891:	836c80        	moveqz	a6, a12, a8
40082894:	743030        	extui	a3, a3, 0, 8
40082897:	742020        	extui	a2, a2, 0, 8
4008289a:	744040        	extui	a4, a4, 0, 8
4008289d:	068d      	mov.n	a8, a6
4008289f:	0123b6        	bltui	a3, 2, 400828a4 <ram_chip_i2c_readReg+0x28>
400828a2:	09cd      	mov.n	a12, a9
400828a4:	10c8c0        	and	a12, a8, a12
400828a7:	029c16        	beqz	a12, 400828d4 <ram_chip_i2c_readReg+0x58>
400828aa:	0061a2        	s32i	a10, a1, 0
400828ad:	ffe4e5        	call8	400826fc <phy_dis_hw_set_freq>
400828b0:	ff3591        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
400828b3:	ffae82        	movi	a8, 0xfffffeff
400828b6:	0020c0        	memw
400828b9:	09b8      	l32i.n	a11, a9, 0
400828bb:	1c0c      	movi.n	a12, 1
400828bd:	108b80        	and	a8, a11, a8
400828c0:	0020c0        	memw
400828c3:	006982        	s32i	a8, a9, 0
400828c6:	000552        	l8ui	a5, a5, 0
400828c9:	080c      	movi.n	a8, 0
400828cb:	93c850        	movnez	a12, a8, a5
400828ce:	0021a2        	l32i	a10, a1, 0
400828d1:	74c0c0        	extui	a12, a12, 0, 8
400828d4:	9ec292        	addi	a9, a2, -98
400828d7:	749090        	extui	a9, a9, 0, 8
400828da:	b50c      	movi.n	a5, 11
400828dc:	f87c      	movi.n	a8, -1
400828de:	0a3597        	bltu	a5, a9, 400828ec <ram_chip_i2c_readReg+0x70>
400828e1:	ffe251        	l32r	a5, 4008286c <ram_chip_i2c_writeReg+0x9c>
400828e4:	a09950        	addx4	a9, a9, a5
400828e7:	0958      	l32i.n	a5, a9, 0
400828e9:	308850        	xor	a8, a8, a5
400828ec:	ffe151        	l32r	a5, 40082870 <ram_chip_i2c_writeReg+0xa0>
400828ef:	ffe191        	l32r	a9, 40082874 <ram_chip_i2c_writeReg+0xa4>
400828f2:	0020c0        	memw
400828f5:	05b8      	l32i.n	a11, a5, 0
400828f7:	10bb90        	and	a11, a11, a9
400828fa:	ffdf91        	l32r	a9, 40082878 <ram_chip_i2c_writeReg+0xa8>
400828fd:	209b90        	or	a9, a11, a9
40082900:	0020c0        	memw
40082903:	0599      	s32i.n	a9, a5, 0
40082905:	0020c0        	memw
40082908:	05b8      	l32i.n	a11, a5, 0
4008290a:	f93291        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008290d:	10bb80        	and	a11, a11, a8
40082910:	ffaf81        	l32r	a8, 400827cc <phy_force_wifi_chan+0x94>
40082913:	0020c0        	memw
40082916:	05b9      	s32i.n	a11, a5, 0
40082918:	838a      	add.n	a8, a3, a8
4008291a:	1188e0        	slli	a8, a8, 2
4008291d:	0020c0        	memw
40082920:	08b8      	l32i.n	a11, a8, 0
40082922:	f78b97        	bany	a11, a9, 4008291d <ram_chip_i2c_readReg+0xa1>
40082925:	114480        	slli	a4, a4, 8
40082928:	202420        	or	a2, a4, a2
4008292b:	0020c0        	memw
4008292e:	006822        	s32i	a2, a8, 0
40082931:	0020c0        	memw
40082934:	08b8      	l32i.n	a11, a8, 0
40082936:	f78b97        	bany	a11, a9, 40082931 <ram_chip_i2c_readReg+0xb5>
40082939:	0020c0        	memw
4008293c:	0828      	l32i.n	a2, a8, 0
4008293e:	752020        	extui	a2, a2, 16, 8
40082941:	006c16        	beqz	a12, 4008294b <ram_chip_i2c_readReg+0xcf>
40082944:	01a9      	s32i.n	a10, a1, 0
40082946:	ffc425        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082949:	01a8      	l32i.n	a10, a1, 0
4008294b:	ff4ee5        	call8	40081e38 <phy_exit_critical>
4008294e:	f01d      	retw.n

40082950 <phy_en_hw_set_freq>:
40082950:	004136        	entry	a1, 32
40082953:	ff4c81        	l32r	a8, 40082684 <pll_correct_dcap+0xcc>
40082956:	000882        	l8ui	a8, a8, 0
40082959:	18cc      	bnez.n	a8, 4008295e <phy_en_hw_set_freq+0xe>
4008295b:	ffc2e5        	call8	40082588 <phy_en_hw_set_freq$part$0>
4008295e:	f01d      	retw.n
40082960:	fbec74        	lsi	f7, a12, 0x3ec
40082963:	3f          	.byte 0x3f
40082964:	d008      	l32i.n	a0, a0, 52
40082966:	586001        	l32r	a0, 40058ae8 <__sfvwrite_r+0x1ac>
40082969:	3ffc13        	lsi	f1, a12, 252

4008296c <wifi_track_pll_cap>:
4008296c:	006136        	entry	a1, 48
4008296f:	ff4c25        	call8	40081e30 <phy_enter_critical>
40082972:	fffb81        	l32r	a8, 40082960 <phy_en_hw_set_freq+0x10>
40082975:	00a092        	movi	a9, 0
40082978:	000882        	l8ui	a8, a8, 0
4008297b:	004192        	s8i	a9, a1, 0
4008297e:	202aa0        	or	a2, a10, a10
40082981:	069816        	beqz	a8, 400829ee <wifi_track_pll_cap+0x82>
40082984:	fff881        	l32r	a8, 40082964 <phy_en_hw_set_freq+0x14>
40082987:	0020c0        	memw
4008298a:	002882        	l32i	a8, a8, 0
4008298d:	5df8d7        	bbsi	a8, 29, 400829ee <wifi_track_pll_cap+0x82>
40082990:	ff3b81        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082993:	000882        	l8ui	a8, a8, 0
40082996:	054856        	bnez	a8, 400829ee <wifi_track_pll_cap+0x82>
40082999:	fff331        	l32r	a3, 40082968 <phy_en_hw_set_freq+0x18>
4008299c:	d90c      	movi.n	a9, 13
4008299e:	510382        	l8ui	a8, a3, 81
400829a1:	435c      	movi.n	a3, 84
400829a3:	238800        	sext	a8, a8, 7
400829a6:	072987        	blt	a9, a8, 400829b1 <wifi_track_pll_cap+0x45>
400829a9:	a08880        	addx4	a8, a8, a8
400829ac:	a87b      	addi.n	a10, a8, 7
400829ae:	7430a0        	extui	a3, a10, 0, 8
400829b1:	ffd4a5        	call8	400826fc <phy_dis_hw_set_freq>
400829b4:	1c0c      	movi.n	a12, 1
400829b6:	01bd      	mov.n	a11, a1
400829b8:	03ad      	mov.n	a10, a3
400829ba:	ffbfe5        	call8	400825b8 <pll_correct_dcap>
400829bd:	74a0a0        	extui	a10, a10, 0, 8
400829c0:	5a9c      	beqz.n	a10, 400829d9 <wifi_track_pll_cap+0x6d>
400829c2:	0001d2        	l8ui	a13, a1, 0
400829c5:	0d9c      	beqz.n	a13, 400829d9 <wifi_track_pll_cap+0x6d>
400829c7:	fef631        	l32r	a3, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400829ca:	1c0c      	movi.n	a12, 1
400829cc:	0338      	l32i.n	a3, a3, 0
400829ce:	0cbd      	mov.n	a11, a12
400829d0:	282332        	l32i	a3, a3, 160
400829d3:	62a0a2        	movi	a10, 98
400829d6:	0003e0        	callx8	a3
400829d9:	ff2731        	l32r	a3, 40082678 <pll_correct_dcap+0xc0>
400829dc:	000332        	l8ui	a3, a3, 0
400829df:	00b356        	bnez	a3, 400829ee <wifi_track_pll_cap+0x82>
400829e2:	ff2831        	l32r	a3, 40082684 <pll_correct_dcap+0xcc>
400829e5:	000332        	l8ui	a3, a3, 0
400829e8:	002356        	bnez	a3, 400829ee <wifi_track_pll_cap+0x82>
400829eb:	ffb9e5        	call8	40082588 <phy_en_hw_set_freq$part$0>
400829ee:	20a220        	or	a10, a2, a2
400829f1:	ff4465        	call8	40081e38 <phy_exit_critical>
400829f4:	f01d      	retw.n
400829f6:	d00000        	subx2	a0, a0, a0
400829f9:	600050        	neg	a0, a5
400829fc:	0050f0        	lsi	f15, a0, 0
400829ff:	60          	.byte 0x60

40082a00 <phy_get_fetx_delay>:
40082a00:	004136        	entry	a1, 32
40082a03:	fffd21        	l32r	a2, 400829f8 <wifi_track_pll_cap+0x8c>
40082a06:	0020c0        	memw
40082a09:	0288      	l32i.n	a8, a2, 0
40082a0b:	fffc21        	l32r	a2, 400829fc <wifi_track_pll_cap+0x90>
40082a0e:	0020c0        	memw
40082a11:	0298      	l32i.n	a9, a2, 0
40082a13:	00a022        	movi	a2, 0
40082a16:	02f8e7        	bbsi	a8, 30, 40082a1c <phy_get_fetx_delay+0x1c>
40082a19:	842090        	extui	a2, a9, 0, 9
40082a1c:	f01d      	retw.n
40082a1e:	4c0000        	lsi	f0, a0, 0x130
40082a21:	0088      	l32i.n	a8, a0, 0
40082a23:	884460        	lsi	f6, a4, 0x220
40082a26:	b16000        	sra	a6, a0
40082a29:	fc09      	s32i.n	a0, a12, 60
40082a2b:	3f          	.byte 0x3f
40082a2c:	fc09b0        	lsi	f11, a9, 0x3f0
40082a2f:	3f          	.byte 0x3f
40082a30:	ae          	.byte 0xae
40082a31:	fc09      	s32i.n	a0, a12, 60
40082a33:	3f          	.byte 0x3f
40082a34:	af          	.byte 0xaf
40082a35:	fc09      	s32i.n	a0, a12, 60
40082a37:	3f          	.byte 0x3f
40082a38:	8e39      	s32i.n	a3, a14, 32
40082a3a:	e3          	.byte 0xe3
40082a3b:	38          	.byte 0x38

40082a3c <btpwr_tsens_track>:
40082a3c:	004136        	entry	a1, 32
40082a3f:	fff821        	l32r	a2, 40082a20 <phy_get_fetx_delay+0x20>
40082a42:	f8e681        	l32r	a8, 40080ddc <_init_end+0x9dc>
40082a45:	0020c0        	memw
40082a48:	0298      	l32i.n	a9, a2, 0
40082a4a:	01a0a2        	movi	a10, 1
40082a4d:	208980        	or	a8, a9, a8
40082a50:	0020c0        	memw
40082a53:	006282        	s32i	a8, a2, 0
40082a56:	f69381        	l32r	a8, 400804a4 <_init_end+0xa4>
40082a59:	0008e0        	callx8	a8
40082a5c:	fff281        	l32r	a8, 40082a24 <phy_get_fetx_delay+0x24>
40082a5f:	fff2b1        	l32r	a11, 40082a28 <phy_get_fetx_delay+0x28>
40082a62:	0020c0        	memw
40082a65:	08d8      	l32i.n	a13, a8, 0
40082a67:	0020c0        	memw
40082a6a:	0298      	l32i.n	a9, a2, 0
40082a6c:	f87a81        	l32r	a8, 40080c54 <_init_end+0x854>
40082a6f:	75d6d0        	extui	a13, a13, 22, 8
40082a72:	108980        	and	a8, a9, a8
40082a75:	0020c0        	memw
40082a78:	0289      	s32i.n	a8, a2, 0
40082a7a:	0020c0        	memw
40082a7d:	0298      	l32i.n	a9, a2, 0
40082a7f:	f88b81        	l32r	a8, 40080cac <_init_end+0x8ac>
40082a82:	ffeaa1        	l32r	a10, 40082a2c <phy_get_fetx_delay+0x2c>
40082a85:	108980        	and	a8, a9, a8
40082a88:	0020c0        	memw
40082a8b:	0289      	s32i.n	a8, a2, 0
40082a8d:	0020c0        	memw
40082a90:	0298      	l32i.n	a9, a2, 0
40082a92:	f87981        	l32r	a8, 40080c78 <_init_end+0x878>
40082a95:	208980        	or	a8, a9, a8
40082a98:	0020c0        	memw
40082a9b:	0289      	s32i.n	a8, a2, 0
40082a9d:	000b82        	l8ui	a8, a11, 0
40082aa0:	7490d0        	extui	a9, a13, 0, 8
40082aa3:	588c      	beqz.n	a8, 40082aac <btpwr_tsens_track+0x70>
40082aa5:	000af2        	l8ui	a15, a10, 0
40082aa8:	000206        	j	40082ab4 <btpwr_tsens_track+0x78>
40082aab:	4b9200        	olt.s	b9, f2, f0
40082aae:	4a9200        	madd.s	f9, f2, f0
40082ab1:	09fd00        	l32e	a0, a13, -4
40082ab4:	ffdf21        	l32r	a2, 40082a30 <phy_get_fetx_delay+0x30>
40082ab7:	ffdfe1        	l32r	a14, 40082a34 <phy_get_fetx_delay+0x34>
40082aba:	1c0c      	movi.n	a12, 1
40082abc:	000222        	l8ui	a2, a2, 0
40082abf:	f6c982        	addi	a8, a9, -10
40082ac2:	004ec2        	s8i	a12, a14, 0
40082ac5:	748080        	extui	a8, a8, 0, 8
40082ac8:	eba0c2        	movi	a12, 235
40082acb:	232200        	sext	a2, a2, 7
40082ace:	07bc87        	bgeu	a12, a8, 40082ad9 <btpwr_tsens_track+0x9d>
40082ad1:	080c      	movi.n	a8, 0
40082ad3:	004e82        	s8i	a8, a14, 0
40082ad6:	000a86        	j	40082b04 <btpwr_tsens_track+0xc8>
40082ad9:	8d5b      	addi.n	a8, a13, 5
40082adb:	c088f0        	sub	a8, a8, a15
40082ade:	f48080        	extui	a8, a8, 0, 16
40082ae1:	ac0c      	movi.n	a12, 10
40082ae3:	1dbc87        	bgeu	a12, a8, 40082b04 <btpwr_tsens_track+0xc8>
40082ae6:	000b82        	l8ui	a8, a11, 0
40082ae9:	004a92        	s8i	a9, a10, 0
40082aec:	c028d0        	sub	a2, a8, a13
40082aef:	ffd281        	l32r	a8, 40082a38 <phy_get_fetx_delay+0x38>
40082af2:	1122e0        	slli	a2, a2, 2
40082af5:	b28280        	mulsh	a8, a2, a8
40082af8:	312f20        	srai	a2, a2, 31
40082afb:	218280        	srai	a8, a8, 2
40082afe:	c02820        	sub	a2, a8, a2
40082b01:	232280        	sext	a2, a2, 15
40082b04:	886c      	movi.n	a8, -24
40082b06:	532280        	max	a2, a2, a8
40082b09:	881c      	movi.n	a8, 24
40082b0b:	432280        	min	a2, a2, a8
40082b0e:	f01d      	retw.n
40082b10:	09a9      	s32i.n	a10, a9, 0
40082b12:	3ffc      	bnez.n	a15, 40082b49 <btpwr_pll_track+0x29>
40082b14:	09a8      	l32i.n	a10, a9, 0
40082b16:	3ffc      	bnez.n	a15, 40082b4d <btpwr_pll_track+0x2d>
40082b18:	09ac      	beqz.n	a9, 40082b3c <btpwr_pll_track+0x1c>
40082b1a:	3ffc      	bnez.n	a15, 40082b51 <btpwr_pll_track+0x31>
40082b1c:	09aa      	add.n	a0, a9, a10
40082b1e:	3ffc      	bnez.n	a15, 40082b55 <btpwr_pll_track+0x35>

40082b20 <btpwr_pll_track>:
40082b20:	004136        	entry	a1, 32
40082b23:	fffbc1        	l32r	a12, 40082b10 <btpwr_tsens_track+0xd4>
40082b26:	742020        	extui	a2, a2, 0, 8
40082b29:	000c82        	l8ui	a8, a12, 0
40082b2c:	089827        	bne	a8, a2, 40082b38 <btpwr_pll_track+0x18>
40082b2f:	fff991        	l32r	a9, 40082b14 <btpwr_tsens_track+0xd8>
40082b32:	000982        	l8ui	a8, a9, 0
40082b35:	001086        	j	40082b7b <btpwr_pll_track+0x5b>
40082b38:	fe93b1        	l32r	a11, 40082584 <esp_reset_reason_get_hint+0x2c>
40082b3b:	00af92        	movi	a9, 0xffffff00
40082b3e:	0020c0        	memw
40082b41:	0ba8      	l32i.n	a10, a11, 0
40082b43:	908220        	addx2	a8, a2, a2
40082b46:	10aa90        	and	a10, a10, a9
40082b49:	748080        	extui	a8, a8, 0, 8
40082b4c:	208a80        	or	a8, a10, a8
40082b4f:	0020c0        	memw
40082b52:	0b89      	s32i.n	a8, a11, 0
40082b54:	fff091        	l32r	a9, 40082b14 <btpwr_tsens_track+0xd8>
40082b57:	fe9581        	l32r	a8, 400825ac <phy_en_hw_set_freq$part$0+0x24>
40082b5a:	ffefd1        	l32r	a13, 40082b18 <btpwr_tsens_track+0xdc>
40082b5d:	0020c0        	memw
40082b60:	08a8      	l32i.n	a10, a8, 0
40082b62:	000982        	l8ui	a8, a9, 0
40082b65:	001db2        	l16ui	a11, a13, 0
40082b68:	31a8a0        	srai	a10, a10, 24
40082b6b:	881b      	addi.n	a8, a8, 1
40082b6d:	aaba      	add.n	a10, a10, a11
40082b6f:	748080        	extui	a8, a8, 0, 8
40082b72:	005da2        	s16i	a10, a13, 0
40082b75:	004c22        	s8i	a2, a12, 0
40082b78:	004982        	s8i	a8, a9, 0
40082b7b:	ffad21        	l32r	a2, 40082a30 <phy_get_fetx_delay+0x30>
40082b7e:	fa0c      	movi.n	a10, 15
40082b80:	000222        	l8ui	a2, a2, 0
40082b83:	51ba87        	bgeu	a10, a8, 40082bd8 <btpwr_pll_track+0xb8>
40082b86:	ffe4b1        	l32r	a11, 40082b18 <btpwr_tsens_track+0xdc>
40082b89:	ffe4c1        	l32r	a12, 40082b1c <btpwr_tsens_track+0xe0>
40082b8c:	009b82        	l16si	a8, a11, 0
40082b8f:	000ca2        	l8ui	a10, a12, 0
40082b92:	888b      	addi.n	a8, a8, 8
40082b94:	218480        	srai	a8, a8, 4
40082b97:	23d880        	sext	a13, a8, 15
40082b9a:	23aa00        	sext	a10, a10, 7
40082b9d:	2f1ad7        	beq	a10, a13, 40082bd0 <btpwr_pll_track+0xb0>
40082ba0:	0a2da6        	blti	a13, 2, 40082bae <btpwr_pll_track+0x8e>
40082ba3:	1128d0        	slli	a2, a8, 3
40082ba6:	742020        	extui	a2, a2, 0, 8
40082ba9:	0003c6        	j	40082bbc <btpwr_pll_track+0x9c>
40082bac:	0c0000        	lsi	f0, a0, 48
40082baf:	0de602        	s32c1i	a0, a6, 52
40082bb2:	8019      	s32i.n	a1, a0, 32
40082bb4:	9028      	l32i.n	a2, a0, 36
40082bb6:	1122f0        	slli	a2, a2, 1
40082bb9:	742020        	extui	a2, a2, 0, 8
40082bbc:	23a200        	sext	a10, a2, 7
40082bbf:	821c      	movi.n	a2, 24
40082bc1:	0822a7        	blt	a2, a10, 40082bcd <btpwr_pll_track+0xad>
40082bc4:	eeaf22        	movi	a2, -18
40082bc7:	532a20        	max	a2, a10, a2
40082bca:	742020        	extui	a2, a2, 0, 8
40082bcd:	004c82        	s8i	a8, a12, 0
40082bd0:	080c      	movi.n	a8, 0
40082bd2:	005b82        	s16i	a8, a11, 0
40082bd5:	004982        	s8i	a8, a9, 0
40082bd8:	f01d      	retw.n
	...

40082bdc <bt_track_tx_power>:
40082bdc:	006136        	entry	a1, 48
40082bdf:	ffe5e5        	call8	40082a3c <btpwr_tsens_track>
40082be2:	743030        	extui	a3, a3, 0, 8
40082be5:	742020        	extui	a2, a2, 0, 8
40082be8:	74a0a0        	extui	a10, a10, 0, 8
40082beb:	139c      	beqz.n	a3, 40082c00 <bt_track_tx_power+0x24>
40082bed:	ff9181        	l32r	a8, 40082a34 <phy_get_fetx_delay+0x34>
40082bf0:	000882        	l8ui	a8, a8, 0
40082bf3:	98cc      	bnez.n	a8, 40082c00 <bt_track_tx_power+0x24>
40082bf5:	23b300        	sext	a11, a3, 7
40082bf8:	02ad      	mov.n	a10, a2
40082bfa:	fff265        	call8	40082b20 <btpwr_pll_track>
40082bfd:	74a0a0        	extui	a10, a10, 0, 8
40082c00:	ff8c81        	l32r	a8, 40082a30 <phy_get_fetx_delay+0x30>
40082c03:	74d0a0        	extui	a13, a10, 0, 8
40082c06:	000832        	l8ui	a3, a8, 0
40082c09:	3b13d7        	beq	a3, a13, 40082c48 <bt_track_tx_power+0x6c>
40082c0c:	ff57b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
40082c0f:	0048a2        	s8i	a10, a8, 0
40082c12:	0e4c      	movi.n	a14, 64
40082c14:	01ad      	mov.n	a10, a1
40082c16:	0f0c      	movi.n	a15, 0
40082c18:	890c      	movi.n	a9, 8
40082c1a:	258976        	loop	a9, 40082c43 <bt_track_tx_power+0x67>
40082c1d:	810b82        	l8ui	a8, a11, 129
40082c20:	8d8a      	add.n	a8, a13, a8
40082c22:	748080        	extui	a8, a8, 0, 8
40082c25:	23c800        	sext	a12, a8, 7
40082c28:	005cd6        	bgez	a12, 40082c31 <bt_track_tx_power+0x55>
40082c2b:	004af2        	s8i	a15, a10, 0
40082c2e:	000346        	j	40082c3f <bt_track_tx_power+0x63>
40082c31:	072ec7        	blt	a14, a12, 40082c3c <bt_track_tx_power+0x60>
40082c34:	004a82        	s8i	a8, a10, 0
40082c37:	000106        	j	40082c3f <bt_track_tx_power+0x63>
40082c3a:	e20000        	remu	a0, a0, a0
40082c3d:	004a      	add.n	a0, a0, a4
40082c3f:	bb1b      	addi.n	a11, a11, 1
40082c41:	aa1b      	addi.n	a10, a10, 1
40082c43:	01ad      	mov.n	a10, a1
40082c45:	001265        	call8	40082d6c <wr_bt_tx_atten>
40082c48:	f01d      	retw.n
40082c4a:	750000        	extui	a0, a0, 16, 8
40082c4d:	fbec      	bnez.n	a11, 40082c80 <bt_track_pll_cap+0x2c>
40082c4f:	3f          	.byte 0x3f
40082c50:	fc09b2        	l8ui	a11, a9, 252
40082c53:	3f          	.byte 0x3f

40082c54 <bt_track_pll_cap>:
40082c54:	006136        	entry	a1, 48
40082c57:	ff1da5        	call8	40081e30 <phy_enter_critical>
40082c5a:	fffc81        	l32r	a8, 40082c4c <bt_track_tx_power+0x70>
40082c5d:	0a2d      	mov.n	a2, a10
40082c5f:	000882        	l8ui	a8, a8, 0
40082c62:	051816        	beqz	a8, 40082cb7 <bt_track_pll_cap+0x63>
40082c65:	ff3f81        	l32r	a8, 40082964 <phy_en_hw_set_freq+0x14>
40082c68:	0020c0        	memw
40082c6b:	0888      	l32i.n	a8, a8, 0
40082c6d:	4678d7        	bbci	a8, 29, 40082cb7 <bt_track_pll_cap+0x63>
40082c70:	fe8281        	l32r	a8, 40082678 <pll_correct_dcap+0xc0>
40082c73:	000882        	l8ui	a8, a8, 0
40082c76:	d8fc      	bnez.n	a8, 40082cb7 <bt_track_pll_cap+0x63>
40082c78:	fe8131        	l32r	a3, 4008267c <pll_correct_dcap+0xc4>
40082c7b:	000332        	l8ui	a3, a3, 0
40082c7e:	53fc      	bnez.n	a3, 40082cb7 <bt_track_pll_cap+0x63>
40082c80:	fe8041        	l32r	a4, 40082680 <pll_correct_dcap+0xc8>
40082c83:	0020c0        	memw
40082c86:	002442        	l32i	a4, a4, 0
40082c89:	ffa725        	call8	400826fc <phy_dis_hw_set_freq>
40082c8c:	654840        	extui	a4, a4, 24, 7
40082c8f:	03cd      	mov.n	a12, a3
40082c91:	01bd      	mov.n	a11, a1
40082c93:	04ad      	mov.n	a10, a4
40082c95:	ff9225        	call8	400825b8 <pll_correct_dcap>
40082c98:	ffee31        	l32r	a3, 40082c50 <bt_track_tx_power+0x74>
40082c9b:	74a0a0        	extui	a10, a10, 0, 8
40082c9e:	000332        	l8ui	a3, a3, 0
40082ca1:	738c      	beqz.n	a3, 40082cac <bt_track_pll_cap+0x58>
40082ca3:	23ba00        	sext	a11, a10, 7
40082ca6:	20a440        	or	a10, a4, a4
40082ca9:	fff325        	call8	40082bdc <bt_track_tx_power>
40082cac:	fe7631        	l32r	a3, 40082684 <pll_correct_dcap+0xcc>
40082caf:	000332        	l8ui	a3, a3, 0
40082cb2:	13cc      	bnez.n	a3, 40082cb7 <bt_track_pll_cap+0x63>
40082cb4:	ff8d25        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082cb7:	02ad      	mov.n	a10, a2
40082cb9:	ff17e5        	call8	40081e38 <phy_exit_critical>
40082cbc:	f01d      	retw.n
40082cbe:	300000        	xor	a0, a0, a0
40082cc1:	6001c0        	abs	a0, a12

40082cc4 <ram_disable_agc>:
40082cc4:	004136        	entry	a1, 32
40082cc7:	fffe91        	l32r	a9, 40082cc0 <bt_track_pll_cap+0x6c>
40082cca:	00a182        	movi	a8, 0x100
40082ccd:	0020c0        	memw
40082cd0:	09a8      	l32i.n	a10, a9, 0
40082cd2:	208a80        	or	a8, a10, a8
40082cd5:	0020c0        	memw
40082cd8:	0989      	s32i.n	a8, a9, 0
40082cda:	f01d      	retw.n

40082cdc <ram_enable_agc>:
40082cdc:	004136        	entry	a1, 32
40082cdf:	fff891        	l32r	a9, 40082cc0 <bt_track_pll_cap+0x6c>
40082ce2:	ffae82        	movi	a8, 0xfffffeff
40082ce5:	0020c0        	memw
40082ce8:	09a8      	l32i.n	a10, a9, 0
40082cea:	108a80        	and	a8, a10, a8
40082ced:	0020c0        	memw
40082cf0:	0989      	s32i.n	a8, a9, 0
40082cf2:	f01d      	retw.n
40082cf4:	5038      	l32i.n	a3, a0, 20
40082cf6:	346000        	extui	a6, a0, 0, 4
40082cf9:	600050        	neg	a0, a5
40082cfc:	fc0000        	lsi	f0, a0, 0x3f0
40082cff:	ff          	.byte 0xff
40082d00:	0100f0        	slli	a0, a0, 17
40082d03:	000f00        	lsi	f0, a15, 0
40082d06:	ff0001        	l32r	a0, 40082908 <ram_chip_i2c_readReg+0x8c>
40082d09:	ff          	.byte 0xff
40082d0a:	fffc      	bnez.n	a15, 40082d4d <ram_write_gain_mem+0x41>

40082d0c <ram_write_gain_mem>:
40082d0c:	004136        	entry	a1, 32
40082d0f:	fff9c1        	l32r	a12, 40082cf4 <ram_enable_agc+0x18>
40082d12:	fff981        	l32r	a8, 40082cf8 <ram_enable_agc+0x1c>
40082d15:	0020c0        	memw
40082d18:	0c39      	s32i.n	a3, a12, 0
40082d1a:	0020c0        	memw
40082d1d:	08a8      	l32i.n	a10, a8, 0
40082d1f:	fff7b1        	l32r	a11, 40082cfc <ram_enable_agc+0x20>
40082d22:	744040        	extui	a4, a4, 0, 8
40082d25:	109ab0        	and	a9, a10, a11
40082d28:	fff6a1        	l32r	a10, 40082d00 <ram_enable_agc+0x24>
40082d2b:	114480        	slli	a4, a4, 8
40082d2e:	a4aa      	add.n	a10, a4, a10
40082d30:	20a9a0        	or	a10, a9, a10
40082d33:	0020c0        	memw
40082d36:	08a9      	s32i.n	a10, a8, 0
40082d38:	0020c0        	memw
40082d3b:	0c29      	s32i.n	a2, a12, 0
40082d3d:	0020c0        	memw
40082d40:	0898      	l32i.n	a9, a8, 0
40082d42:	fff0a1        	l32r	a10, 40082d04 <ram_enable_agc+0x28>
40082d45:	10b9b0        	and	a11, a9, a11
40082d48:	44aa      	add.n	a4, a4, a10
40082d4a:	209b40        	or	a9, a11, a4
40082d4d:	0020c0        	memw
40082d50:	0899      	s32i.n	a9, a8, 0
40082d52:	0020c0        	memw
40082d55:	0898      	l32i.n	a9, a8, 0
40082d57:	ffec41        	l32r	a4, 40082d08 <ram_enable_agc+0x2c>
40082d5a:	104940        	and	a4, a9, a4
40082d5d:	0020c0        	memw
40082d60:	0849      	s32i.n	a4, a8, 0
40082d62:	f01d      	retw.n
40082d64:	600c      	movi.n	a0, 6
40082d66:	106000        	and	a6, a0, a0
40082d69:	600060        	neg	a0, a6

40082d6c <wr_bt_tx_atten>:
40082d6c:	006136        	entry	a1, 48
40082d6f:	20a110        	or	a10, a1, a1
40082d72:	08a092        	movi	a9, 8
40082d75:	0c8976        	loop	a9, 40082d85 <wr_bt_tx_atten+0x19>
40082d78:	000282        	l8ui	a8, a2, 0
40082d7b:	221b      	addi.n	a2, a2, 1
40082d7d:	608080        	neg	a8, a8
40082d80:	004a82        	s8i	a8, a10, 0
40082d83:	aa1b      	addi.n	a10, a10, 1
40082d85:	0188      	l32i.n	a8, a1, 0
40082d87:	fff721        	l32r	a2, 40082d64 <ram_write_gain_mem+0x58>
40082d8a:	0020c0        	memw
40082d8d:	0289      	s32i.n	a8, a2, 0
40082d8f:	1188      	l32i.n	a8, a1, 4
40082d91:	fff521        	l32r	a2, 40082d68 <ram_write_gain_mem+0x5c>
40082d94:	0020c0        	memw
40082d97:	0289      	s32i.n	a8, a2, 0
40082d99:	f01d      	retw.n
40082d9b:	600000        	neg	a0, a0
40082d9e:	ff6000        	f64cmph	a6, a0, a0, 15
40082da1:	ff          	.byte 0xff
40082da2:	00fc03        	lsi	f0, a12, 0
40082da5:	01b800        	slli	a11, a8, 32

40082da8 <set_tx_gain_table>:
40082da8:	006136        	entry	a1, 48
40082dab:	fffc61        	l32r	a6, 40082d9c <wr_bt_tx_atten+0x30>
40082dae:	fffc41        	l32r	a4, 40082da0 <wr_bt_tx_atten+0x34>
40082db1:	0020c0        	memw
40082db4:	0658      	l32i.n	a5, a6, 0
40082db6:	f43030        	extui	a3, a3, 0, 16
40082db9:	105540        	and	a5, a5, a4
40082dbc:	fffa41        	l32r	a4, 40082da4 <wr_bt_tx_atten+0x38>
40082dbf:	03ad      	mov.n	a10, a3
40082dc1:	205540        	or	a5, a5, a4
40082dc4:	fdf741        	l32r	a4, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40082dc7:	0020c0        	memw
40082dca:	0659      	s32i.n	a5, a6, 0
40082dcc:	0458      	l32i.n	a5, a4, 0
40082dce:	f42020        	extui	a2, a2, 0, 16
40082dd1:	432552        	l32i	a5, a5, 0x10c
40082dd4:	016d      	mov.n	a6, a1
40082dd6:	0005e0        	callx8	a5
40082dd9:	f480a0        	extui	a8, a10, 0, 16
40082ddc:	1188d0        	slli	a8, a8, 3
40082ddf:	fee2b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
40082de2:	88cb      	addi.n	a8, a8, 12
40082de4:	8b8a      	add.n	a8, a11, a8
40082de6:	04a052        	movi	a5, 4
40082de9:	098576        	loop	a5, 40082df6 <set_tx_gain_table+0x4e>
40082dec:	001892        	l16ui	a9, a8, 0
40082def:	882b      	addi.n	a8, a8, 2
40082df1:	005692        	s16i	a9, a6, 0
40082df4:	662b      	addi.n	a6, a6, 2
40082df6:	021162        	l16ui	a6, a1, 4
40082df9:	031182        	l16ui	a8, a1, 6
40082dfc:	01c660        	slli	a12, a6, 26
40082dff:	0188f0        	slli	a8, a8, 17
40082e02:	001192        	l16ui	a9, a1, 0
40082e05:	011152        	l16ui	a5, a1, 2
40082e08:	2088c0        	or	a8, a8, a12
40082e0b:	112260        	slli	a2, a2, 10
40082e0e:	202820        	or	a2, a8, a2
40082e11:	119940        	slli	a9, a9, 12
40082e14:	748630        	extui	a8, a3, 6, 8
40082e17:	1155d0        	slli	a5, a5, 3
40082e1a:	543030        	extui	a3, a3, 0, 6
40082e1d:	202280        	or	a2, a2, a8
40082e20:	1133d0        	slli	a3, a3, 3
40082e23:	205950        	or	a5, a9, a5
40082e26:	416660        	srli	a6, a6, 6
40082e29:	203230        	or	a3, a2, a3
40082e2c:	206560        	or	a6, a5, a6
40082e2f:	01a022        	movi	a2, 1
40082e32:	024af6        	bgeui	a10, 4, 40082e38 <set_tx_gain_table+0x90>
40082e35:	00a022        	movi	a2, 0
40082e38:	18c222        	addi	a2, a2, 24
40082e3b:	90b2b0        	addx2	a11, a2, a11
40082e3e:	021b52        	l16ui	a5, a11, 4
40082e41:	6ea022        	movi	a2, 110
40082e44:	0155b0        	slli	a5, a5, 21
40082e47:	205650        	or	a5, a6, a5
40082e4a:	76a062        	movi	a6, 118
40082e4d:	0488      	l32i.n	a8, a4, 0
40082e4f:	02cd      	mov.n	a12, a2
40082e51:	d888      	l32i.n	a8, a8, 52
40082e53:	221b      	addi.n	a2, a2, 1
40082e55:	03bd      	mov.n	a11, a3
40082e57:	05ad      	mov.n	a10, a5
40082e59:	0008e0        	callx8	a8
40082e5c:	ed9267        	bne	a2, a6, 40082e4d <set_tx_gain_table+0xa5>
40082e5f:	f01d      	retw.n
40082e61:	000000        	ill
40082e64:	fc09c4        	lsi	f12, a9, 0x3f0
40082e67:	3f          	.byte 0x3f
40082e68:	fbec76        	lsi	f7, a12, 0x3ec
40082e6b:	3f          	.byte 0x3f
40082e6c:	bf          	.byte 0xbf
40082e6d:	fc09      	s32i.n	a0, a12, 60
40082e6f:	3f          	.byte 0x3f
40082e70:	141c      	movi.n	a4, 17
40082e72:	3ffc      	bnez.n	a15, 40082ea9 <set_most_pwr_reg+0x31>
40082e74:	ec78      	l32i.n	a7, a12, 56
40082e76:	3ffb      	addi.n	a3, a15, 15

40082e78 <set_most_pwr_reg>:
40082e78:	006136        	entry	a1, 48
40082e7b:	fffa81        	l32r	a8, 40082e64 <set_tx_gain_table+0xbc>
40082e7e:	20a110        	or	a10, a1, a1
40082e81:	0008b2        	l8ui	a11, a8, 0
40082e84:	23bb00        	sext	a11, a11, 7
40082e87:	003ba5        	call8	40083240 <get_phy_target_power>
40082e8a:	fff781        	l32r	a8, 40082e68 <set_tx_gain_table+0xc0>
40082e8d:	050192        	l8ui	a9, a1, 5
40082e90:	000882        	l8ui	a8, a8, 0
40082e93:	23a800        	sext	a10, a8, 7
40082e96:	022a97        	blt	a10, a9, 40082e9c <set_most_pwr_reg+0x24>
40082e99:	0029c6        	j	40082f44 <set_most_pwr_reg+0xcc>
40082e9c:	fff421        	l32r	a2, 40082e6c <set_tx_gain_table+0xc4>
40082e9f:	c08980        	sub	a8, a9, a8
40082ea2:	01a0a2        	movi	a10, 1
40082ea5:	0042a2        	s8i	a10, a2, 0
40082ea8:	748080        	extui	a8, a8, 0, 8
40082eab:	08a022        	movi	a2, 8
40082eae:	0e3287        	bltu	a2, a8, 40082ec0 <set_most_pwr_reg+0x48>
40082eb1:	ffef21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082eb4:	f8c992        	addi	a9, a9, -8
40082eb7:	004292        	s8i	a9, a2, 0
40082eba:	e20c      	movi.n	a2, 14
40082ebc:	004446        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ebf:	221c00        	orb	b1, b12, b0
40082ec2:	0e3287        	bltu	a2, a8, 40082ed4 <set_most_pwr_reg+0x5c>
40082ec5:	ffea21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082ec8:	eec992        	addi	a9, a9, -18
40082ecb:	004292        	s8i	a9, a2, 0
40082ece:	a20c      	movi.n	a2, 10
40082ed0:	003f46        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ed3:	821c00        	mull	a1, a12, a0
40082ed6:	0d3287        	bltu	a2, a8, 40082ee7 <set_most_pwr_reg+0x6f>
40082ed9:	ffe521        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082edc:	e8c992        	addi	a9, a9, -24
40082edf:	004292        	s8i	a9, a2, 0
40082ee2:	720c      	movi.n	a2, 7
40082ee4:	003a46        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ee7:	022c      	movi.n	a2, 32
40082ee9:	0d3287        	bltu	a2, a8, 40082efa <set_most_pwr_reg+0x82>
40082eec:	ffe121        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082eef:	e0c992        	addi	a9, a9, -32
40082ef2:	004292        	s8i	a9, a2, 0
40082ef5:	620c      	movi.n	a2, 6
40082ef7:	003586        	j	40082fd1 <set_most_pwr_reg+0x159>
40082efa:	c22c      	movi.n	a2, 44
40082efc:	0d3287        	bltu	a2, a8, 40082f0d <set_most_pwr_reg+0x95>
40082eff:	ffdc21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f02:	d4c992        	addi	a9, a9, -44
40082f05:	004292        	s8i	a9, a2, 0
40082f08:	520c      	movi.n	a2, 5
40082f0a:	0030c6        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f0d:	823c      	movi.n	a2, 56
40082f0f:	0d3287        	bltu	a2, a8, 40082f20 <set_most_pwr_reg+0xa8>
40082f12:	ffd721        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f15:	c8c992        	addi	a9, a9, -56
40082f18:	004292        	s8i	a9, a2, 0
40082f1b:	220c      	movi.n	a2, 2
40082f1d:	002c06        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f20:	424c      	movi.n	a2, 68
40082f22:	0e3287        	bltu	a2, a8, 40082f34 <set_most_pwr_reg+0xbc>
40082f25:	ffd221        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f28:	bcc992        	addi	a9, a9, -68
40082f2b:	004292        	s8i	a9, a2, 0
40082f2e:	120c      	movi.n	a2, 1
40082f30:	002746        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f33:	cf2100        	f64cmph	a2, a1, a0, 12
40082f36:	ff          	.byte 0xff
40082f37:	a4c992        	addi	a9, a9, -92
40082f3a:	004292        	s8i	a9, a2, 0
40082f3d:	020c      	movi.n	a2, 0
40082f3f:	002386        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f42:	210000        	srai	a0, a0, 0
40082f45:	ffca      	add.n	a15, a15, a12
40082f47:	0b0c      	movi.n	a11, 0
40082f49:	040182        	l8ui	a8, a1, 4
40082f4c:	0042b2        	s8i	a11, a2, 0
40082f4f:	0aaa87        	bge	a10, a8, 40082f5d <set_most_pwr_reg+0xe5>
40082f52:	ffc781        	l32r	a8, 40082e70 <set_tx_gain_table+0xc8>
40082f55:	520c      	movi.n	a2, 5
40082f57:	004892        	s8i	a9, a8, 0
40082f5a:	0017c6        	j	40082fbd <set_most_pwr_reg+0x145>
40082f5d:	030192        	l8ui	a9, a1, 3
40082f60:	44aa97        	bge	a10, a9, 40082fa8 <set_most_pwr_reg+0x130>
40082f63:	ffc391        	l32r	a9, 40082e70 <set_tx_gain_table+0xc8>
40082f66:	420c      	movi.n	a2, 4
40082f68:	004982        	s8i	a8, a9, 0
40082f6b:	001386        	j	40082fbd <set_most_pwr_reg+0x145>
40082f6e:	810000        	src	a0, a0, a0
40082f71:	0cffc0        	lsi	f12, a15, 48
40082f74:	489232        	l16si	a3, a2, 144
40082f77:	104600        	and	a4, a6, a0
40082f7a:	910000        	srl	a0, a0
40082f7d:	ffbd      	lsi	f11, a15, 60
40082f7f:	220c      	movi.n	a2, 2
40082f81:	004982        	s8i	a8, a9, 0
40082f84:	000d46        	j	40082fbd <set_most_pwr_reg+0x145>
40082f87:	ba8100        	ceil.s	a8, f1, 0
40082f8a:	ff          	.byte 0xff
40082f8b:	120c      	movi.n	a2, 1
40082f8d:	004892        	s8i	a9, a8, 0
40082f90:	000a46        	j	40082fbd <set_most_pwr_reg+0x145>
40082f93:	ffb791        	l32r	a9, 40082e70 <set_tx_gain_table+0xc8>
40082f96:	020c      	movi.n	a2, 0
40082f98:	004982        	s8i	a8, a9, 0
40082f9b:	000786        	j	40082fbd <set_most_pwr_reg+0x145>
40082f9e:	0119b2        	l16ui	a11, a9, 2
40082fa1:	ffe065        	call8	40082da8 <set_tx_gain_table>
40082fa4:	f01d      	retw.n
40082fa6:	820000        	mull	a0, a0, a0
40082fa9:	870201        	l32r	a0, 40064bb4 <__clrsbdi2+0x38>
40082fac:	c12a      	add.n	a12, a1, a2
40082fae:	010192        	l8ui	a9, a1, 1
40082fb1:	c72a97        	blt	a10, a9, 40082f7c <set_most_pwr_reg+0x104>
40082fb4:	000182        	l8ui	a8, a1, 0
40082fb7:	cd2a87        	blt	a10, a8, 40082f88 <set_most_pwr_reg+0x110>
40082fba:	fff546        	j	40082f93 <set_most_pwr_reg+0x11b>
40082fbd:	fe6a81        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40082fc0:	ffad91        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40082fc3:	bc08a2        	l8ui	a10, a8, 188
40082fc6:	f80c      	movi.n	a8, 15
40082fc8:	20aa80        	or	a10, a10, a8
40082fcb:	0059a2        	s16i	a10, a9, 0
40082fce:	fff306        	j	40082f9e <set_most_pwr_reg+0x126>
40082fd1:	fe6581        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40082fd4:	ffa891        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40082fd7:	5e18a2        	l16ui	a10, a8, 188
40082fda:	f0a082        	movi	a8, 240
40082fdd:	10aa80        	and	a10, a10, a8
40082fe0:	20a2a0        	or	a10, a2, a10
40082fe3:	f4a0a0        	extui	a10, a10, 0, 16
40082fe6:	0059a2        	s16i	a10, a9, 0
40082fe9:	520c      	movi.n	a2, 5
40082feb:	ffebc6        	j	40082f9e <set_most_pwr_reg+0x126>
40082fee:	200000        	or	a0, a0, a0
40082ff1:	3ffc14        	lsi	f1, a12, 252
40082ff4:	fa5c      	movi.n	a10, 95
40082ff6:	3ffb      	addi.n	a3, a15, 15

40082ff8 <get_target_power_offset>:
40082ff8:	004136        	entry	a1, 32
40082ffb:	748020        	extui	a8, a2, 0, 8
40082ffe:	0f88f6        	bgeui	a8, 8, 40083011 <get_target_power_offset+0x19>
40083001:	fffb31        	l32r	a3, 40082ff0 <set_most_pwr_reg+0x178>
40083004:	020c      	movi.n	a2, 0
40083006:	3a0382        	l8ui	a8, a3, 58
40083009:	2f1827        	beq	a8, a2, 4008303c <get_target_power_offset+0x44>
4008300c:	3b0322        	l8ui	a2, a3, 59
4008300f:	f01d      	retw.n
40083011:	f20c      	movi.n	a2, 15
40083013:	163287        	bltu	a2, a8, 4008302d <get_target_power_offset+0x35>
40083016:	fff791        	l32r	a9, 40082ff4 <set_most_pwr_reg+0x17c>
40083019:	f8c882        	addi	a8, a8, -8
4008301c:	748080        	extui	a8, a8, 0, 8
4008301f:	998a      	add.n	a9, a9, a8
40083021:	000982        	l8ui	a8, a9, 0
40083024:	838a      	add.n	a8, a3, a8
40083026:	000822        	l8ui	a2, a8, 0
40083029:	f01d      	retw.n
4008302b:	1c0000        	lsi	f0, a0, 112
4008302e:	0c79      	s32i.n	a7, a12, 0
40083030:	398702        	lsi	f0, a7, 228
40083033:	838a07        	bany	a10, a0, 40082fba <set_most_pwr_reg+0x142>
40083036:	f0c882        	addi	a8, a8, -16
40083039:	000822        	l8ui	a2, a8, 0
4008303c:	f01d      	retw.n
	...

40083040 <ram_txbbgain_to_index>:
40083040:	004136        	entry	a1, 32
40083043:	f48020        	extui	a8, a2, 0, 16
40083046:	093c      	movi.n	a9, 48
40083048:	201897        	beq	a8, a9, 4008306c <ram_txbbgain_to_index+0x2c>
4008304b:	093987        	bltu	a9, a8, 40083058 <ram_txbbgain_to_index+0x18>
4008304e:	120c      	movi.n	a2, 1
40083050:	1ec826        	beqi	a8, 32, 40083072 <ram_txbbgain_to_index+0x32>
40083053:	000646        	j	40083070 <ram_txbbgain_to_index+0x30>
40083056:	920000        	lsi	f0, a0, 0x248
40083059:	0ca0a0        	lsi	f10, a0, 48
4008305c:	189722        	l16si	a2, a7, 48
4008305f:	a19211        	l32r	a1, 4006b6a8 <__udivmoddi4+0x6ab4>
40083062:	320c20        	orbc	b0, b12, b2
40083065:	091897        	beq	a8, a9, 40083072 <ram_txbbgain_to_index+0x32>
40083068:	000106        	j	40083070 <ram_txbbgain_to_index+0x30>
4008306b:	420c00        	xorb	b0, b12, b0
4008306e:	f01d      	retw.n
40083070:	020c      	movi.n	a2, 0
40083072:	f01d      	retw.n
40083074:	a2e9      	s32i.n	a14, a2, 40
40083076:	2e8b      	addi.n	a2, a14, 8

40083078 <ram_set_chan_cal_interp>:
40083078:	004136        	entry	a1, 32
4008307b:	330b      	addi.n	a3, a3, -1
4008307d:	743030        	extui	a3, a3, 0, 8
40083080:	2863f6        	bgeui	a3, 6, 400830ac <ram_set_chan_cal_interp+0x34>
40083083:	000282        	l8ui	a8, a2, 0
40083086:	010222        	l8ui	a2, a2, 1
40083089:	239800        	sext	a9, a8, 7
4008308c:	232200        	sext	a2, a2, 7
4008308f:	c02290        	sub	a2, a2, a9
40083092:	823230        	mull	a3, a2, a3
40083095:	f6a391        	l32r	a9, 40080b24 <_init_end+0x724>
40083098:	312f30        	srai	a2, a3, 31
4008309b:	b23390        	mulsh	a3, a3, a9
4008309e:	213130        	srai	a3, a3, 1
400830a1:	c02320        	sub	a2, a3, a2
400830a4:	228a      	add.n	a2, a2, a8
400830a6:	742020        	extui	a2, a2, 0, 8
400830a9:	f01d      	retw.n
400830ab:	a80c00        	lsi	f0, a12, 0x2a0
400830ae:	2a3837        	bltu	a8, a3, 400830dc <ram_set_chan_cal_interp+0x64>
400830b1:	010282        	l8ui	a8, a2, 1
400830b4:	020222        	l8ui	a2, a2, 2
400830b7:	239800        	sext	a9, a8, 7
400830ba:	232200        	sext	a2, a2, 7
400830bd:	c02290        	sub	a2, a2, a9
400830c0:	fbc332        	addi	a3, a3, -5
400830c3:	822230        	mull	a2, a2, a3
400830c6:	f69791        	l32r	a9, 40080b24 <_init_end+0x724>
400830c9:	313f20        	srai	a3, a2, 31
400830cc:	b22290        	mulsh	a2, a2, a9
400830cf:	212120        	srai	a2, a2, 1
400830d2:	c02230        	sub	a2, a2, a3
400830d5:	228a      	add.n	a2, a2, a8
400830d7:	742020        	extui	a2, a2, 0, 8
400830da:	f01d      	retw.n
400830dc:	c80c      	movi.n	a8, 12
400830de:	2e3837        	bltu	a8, a3, 40083110 <ram_set_chan_cal_interp+0x98>
400830e1:	020282        	l8ui	a8, a2, 2
400830e4:	030222        	l8ui	a2, a2, 3
400830e7:	239800        	sext	a9, a8, 7
400830ea:	232200        	sext	a2, a2, 7
400830ed:	c02290        	sub	a2, a2, a9
400830f0:	f6c332        	addi	a3, a3, -10
400830f3:	823230        	mull	a3, a2, a3
400830f6:	ffdf21        	l32r	a2, 40083074 <ram_txbbgain_to_index+0x34>
400830f9:	a03330        	addx4	a3, a3, a3
400830fc:	b22320        	mulsh	a2, a3, a2
400830ff:	313f30        	srai	a3, a3, 31
40083102:	212220        	srai	a2, a2, 2
40083105:	c02230        	sub	a2, a2, a3
40083108:	228a      	add.n	a2, a2, a8
4008310a:	742020        	extui	a2, a2, 0, 8
4008310d:	f01d      	retw.n
4008310f:	022200        	andb	b2, b2, b0
40083112:	f01d03        	lsi	f0, a13, 0x3c0
40083115:	000000        	ill
40083118:	504c      	movi.n	a0, 69
4008311a:	6c6000        	lsi	f0, a0, 0x1b0
4008311d:	600050        	neg	a0, a5
40083120:	ba98      	l32i.n	a9, a10, 44
40083122:	fedc      	bnez.n	a14, 40083145 <ram_set_chan_cal_interp+0xcd>
40083124:	005070        	lsi	f7, a0, 0
40083127:	507460        	ritlb1	a6, a4
4008312a:	786000        	lsi	f0, a0, 0x1e0
4008312d:	600050        	neg	a0, a5
40083130:	503c      	movi.n	a0, 53
40083132:	776000        	lsi	f0, a0, 0x1dc
40083135:	777777        	bbci	a7, 23, 400831b0 <write_txrate_power_offset+0x64>
40083138:	005040        	lsi	f4, a0, 0
4008313b:	504460        	lsi	f6, a4, 0x140
4008313e:	486000        	ssx	f6, a0, a0
40083141:	600050        	neg	a0, a5
40083144:	15e8      	l32i.n	a14, a5, 4
40083146:	3ffc      	bnez.n	a15, 4008317d <write_txrate_power_offset+0x31>
40083148:	505c      	movi.n	a0, 85
4008314a:	00          	.byte 00
4008314b:	60          	.byte 0x60

4008314c <write_txrate_power_offset>:
4008314c:	004136        	entry	a1, 32
4008314f:	742020        	extui	a2, a2, 0, 8
40083152:	07b256        	bnez	a2, 400831d1 <write_txrate_power_offset+0x85>
40083155:	fff231        	l32r	a3, 40083120 <ram_set_chan_cal_interp+0xa8>
40083158:	fff121        	l32r	a2, 4008311c <ram_set_chan_cal_interp+0xa4>
4008315b:	fff441        	l32r	a4, 4008312c <ram_set_chan_cal_interp+0xb4>
4008315e:	0020c0        	memw
40083161:	0239      	s32i.n	a3, a2, 0
40083163:	fff021        	l32r	a2, 40083124 <ram_set_chan_cal_interp+0xac>
40083166:	f37c      	movi.n	a3, -1
40083168:	0020c0        	memw
4008316b:	0239      	s32i.n	a3, a2, 0
4008316d:	ffee21        	l32r	a2, 40083128 <ram_set_chan_cal_interp+0xb0>
40083170:	0020c0        	memw
40083173:	0239      	s32i.n	a3, a2, 0
40083175:	0020c0        	memw
40083178:	0439      	s32i.n	a3, a4, 0
4008317a:	ffee21        	l32r	a2, 40083134 <ram_set_chan_cal_interp+0xbc>
4008317d:	ffec31        	l32r	a3, 40083130 <ram_set_chan_cal_interp+0xb8>
40083180:	0020c0        	memw
40083183:	0329      	s32i.n	a2, a3, 0
40083185:	ffec31        	l32r	a3, 40083138 <ram_set_chan_cal_interp+0xc0>
40083188:	0020c0        	memw
4008318b:	0329      	s32i.n	a2, a3, 0
4008318d:	ffeb31        	l32r	a3, 4008313c <ram_set_chan_cal_interp+0xc4>
40083190:	0020c0        	memw
40083193:	0329      	s32i.n	a2, a3, 0
40083195:	ffea31        	l32r	a3, 40083140 <ram_set_chan_cal_interp+0xc8>
40083198:	0020c0        	memw
4008319b:	0329      	s32i.n	a2, a3, 0
4008319d:	f01d      	retw.n
4008319f:	a22000        	muluh	a2, a0, a0
400831a2:	a3aa54        	lsi	f5, a10, 0x28c
400831a5:	04bd      	mov.n	a11, a4
400831a7:	74a0a0        	extui	a10, a10, 0, 8
400831aa:	ffe4e5        	call8	40082ff8 <get_target_power_offset>
400831ad:	1182e0        	slli	a8, a2, 2
400831b0:	401800        	ssl	a8
400831b3:	a1aa00        	sll	a10, a10
400831b6:	221b      	addi.n	a2, a2, 1
400831b8:	77aa      	add.n	a7, a7, a10
400831ba:	e28266        	bnei	a2, 8, 400831a0 <write_txrate_power_offset+0x54>
400831bd:	0020c0        	memw
400831c0:	0579      	s32i.n	a7, a5, 0
400831c2:	332b      	addi.n	a3, a3, 2
400831c4:	554b      	addi.n	a5, a5, 4
400831c6:	743030        	extui	a3, a3, 0, 8
400831c9:	0f9567        	bne	a5, a6, 400831dc <write_txrate_power_offset+0x90>
400831cc:	0b0c      	movi.n	a11, 0
400831ce:	001546        	j	40083227 <write_txrate_power_offset+0xdb>
400831d1:	ffd151        	l32r	a5, 40083118 <ram_set_chan_cal_interp+0xa0>
400831d4:	ffdc41        	l32r	a4, 40083144 <ram_set_chan_cal_interp+0xcc>
400831d7:	ffdc61        	l32r	a6, 40083148 <ram_set_chan_cal_interp+0xd0>
400831da:	830c      	movi.n	a3, 8
400831dc:	020c      	movi.n	a2, 0
400831de:	027d      	mov.n	a7, a2
400831e0:	ffef06        	j	400831a0 <write_txrate_power_offset+0x54>
400831e3:	228000        	orb	b8, b0, b0
400831e6:	908041        	l32r	a4, 400673e8 <__udivmoddi4+0x27f4>
400831e9:	2a2a14        	lsi	f1, a10, 168
400831ec:	143966        	bnei	a9, 3, 40083204 <write_txrate_power_offset+0xb8>
400831ef:	412280        	srli	a2, a8, 2
400831f2:	2a2a      	add.n	a2, a10, a2
400831f4:	080222        	l8ui	a2, a2, 8
400831f7:	401300        	ssl	a3
400831fa:	a12200        	sll	a2, a2
400831fd:	772a      	add.n	a7, a7, a2
400831ff:	000306        	j	4008320f <write_txrate_power_offset+0xc3>
40083202:	220000        	orb	b0, b0, b0
40083205:	000002        	l8ui	a0, a0, 0
40083208:	004013        	ssi	f1, a0, 0
4008320b:	2aa122        	movi	a2, 0x12a
4008320e:	881b77        	beq	a11, a7, 4008319a <write_txrate_power_offset+0x4e>
40083211:	748080        	extui	a8, a8, 0, 8
40083214:	334b      	addi.n	a3, a3, 4
40083216:	660b      	addi.n	a6, a6, -1
40083218:	fc8656        	bnez	a6, 400831e4 <write_txrate_power_offset+0x98>
4008321b:	0020c0        	memw
4008321e:	0579      	s32i.n	a7, a5, 0
40083220:	bb2b      	addi.n	a11, a11, 2
40083222:	554b      	addi.n	a5, a5, 4
40083224:	0c8b26        	beqi	a11, 8, 40083234 <write_txrate_power_offset+0xe8>
40083227:	030c      	movi.n	a3, 0
40083229:	037d      	mov.n	a7, a3
4008322b:	038d      	mov.n	a8, a3
4008322d:	a4ba      	add.n	a10, a4, a11
4008322f:	860c      	movi.n	a6, 8
40083231:	ffebc6        	j	400831e4 <write_txrate_power_offset+0x98>
40083234:	f01d      	retw.n
40083236:	b20000        	mulsh	a0, a0, a0
40083239:	3ffc13        	lsi	f1, a12, 252
4008323c:	be          	.byte 0xbe
4008323d:	fc09      	s32i.n	a0, a12, 60
4008323f:	3f          	.byte 0x3f

40083240 <get_phy_target_power>:
40083240:	006136        	entry	a1, 48
40083243:	fcd741        	l32r	a4, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083246:	fdc881        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40083249:	002492        	l32i	a9, a4, 0
4008324c:	0418c2        	l16ui	a12, a8, 8
4008324f:	0518a2        	l16ui	a10, a8, 10
40083252:	0218e2        	l16ui	a14, a8, 4
40083255:	0318d2        	l16ui	a13, a8, 6
40083258:	5108b2        	l8ui	a11, a8, 81
4008325b:	5a2992        	l32i	a9, a9, 0x168
4008325e:	0041e2        	s8i	a14, a1, 0
40083261:	0141d2        	s8i	a13, a1, 1
40083264:	0241c2        	s8i	a12, a1, 2
40083267:	0341a2        	s8i	a10, a1, 3
4008326a:	20a110        	or	a10, a1, a1
4008326d:	0009e0        	callx8	a9
40083270:	0448      	l32i.n	a4, a4, 0
40083272:	fff1b1        	l32r	a11, 40083238 <write_txrate_power_offset+0xec>
40083275:	632442        	l32i	a4, a4, 0x18c
40083278:	23ca00        	sext	a12, a10, 7
4008327b:	02ad      	mov.n	a10, a2
4008327d:	0004e0        	callx8	a4
40083280:	233380        	sext	a3, a3, 15
40083283:	ffeeb1        	l32r	a11, 4008323c <write_txrate_power_offset+0xf0>
40083286:	743030        	extui	a3, a3, 0, 8
40083289:	6a0c      	movi.n	a10, 6
4008328b:	f03d      	nop.n
4008328d:	0f8a76        	loop	a10, 400832a0 <get_phy_target_power+0x60>
40083290:	000b82        	l8ui	a8, a11, 0
40083293:	000292        	l8ui	a9, a2, 0
40083296:	c08380        	sub	a8, a3, a8
40083299:	889a      	add.n	a8, a8, a9
4008329b:	004282        	s8i	a8, a2, 0
4008329e:	221b      	addi.n	a2, a2, 1
400832a0:	f01d      	retw.n
400832a2:	800000        	add	a0, a0, a0
400832a5:	6000e0        	neg	a0, a14

400832a8 <ram_read_sar_dout>:
400832a8:	004136        	entry	a1, 32
400832ab:	fffec1        	l32r	a12, 400832a4 <get_phy_target_power+0x64>
400832ae:	0a0c      	movi.n	a10, 0
400832b0:	fb7c      	movi.n	a11, -1
400832b2:	08a092        	movi	a9, 8
400832b5:	148976        	loop	a9, 400832cd <ram_read_sar_dout+0x25>
400832b8:	a08ac0        	addx4	a8, a10, a12
400832bb:	0020c0        	memw
400832be:	0888      	l32i.n	a8, a8, 0
400832c0:	aa1b      	addi.n	a10, a10, 1
400832c2:	308b80        	xor	a8, a11, a8
400832c5:	b48080        	extui	a8, a8, 0, 12
400832c8:	005282        	s16i	a8, a2, 0
400832cb:	222b      	addi.n	a2, a2, 2
400832cd:	f01d      	retw.n
400832cf:	f8a800        	lsi	f0, a8, 0x3e0
400832d2:	3ffb      	addi.n	a3, a15, 15

400832d4 <get_rate_fcc_index>:
400832d4:	004136        	entry	a1, 32
400832d7:	ff4681        	l32r	a8, 40082ff0 <set_most_pwr_reg+0x178>
400832da:	742020        	extui	a2, a2, 0, 8
400832dd:	3d0892        	l8ui	a9, a8, 61
400832e0:	022926        	beqi	a9, 2, 400832e6 <get_rate_fcc_index+0x12>
400832e3:	002cc6        	j	4008339a <get_rate_fcc_index+0xc6>
400832e6:	982a      	add.n	a9, a8, a2
400832e8:	3d09a2        	l8ui	a10, a9, 61
400832eb:	fdc222        	addi	a2, a2, -3
400832ee:	742020        	extui	a2, a2, 0, 8
400832f1:	8b0c      	movi.n	a11, 8
400832f3:	4194a0        	srli	a9, a10, 4
400832f6:	34a0a0        	extui	a10, a10, 0, 4
400832f9:	02bb27        	bgeu	a11, a2, 400832ff <get_rate_fcc_index+0x2b>
400832fc:	002206        	j	40083388 <get_rate_fcc_index+0xb4>
400832ff:	fff4b1        	l32r	a11, 400832d0 <ram_read_sar_dout+0x28>
40083302:	a022b0        	addx4	a2, a2, a11
40083305:	0228      	l32i.n	a2, a2, 0
40083307:	0002a0        	jx	a2
4008330a:	4c0822        	l8ui	a2, a8, 76
4008330d:	348020        	extui	a8, a2, 0, 4
40083310:	a20c      	movi.n	a2, 10
40083312:	632820        	minu	a2, a8, a2
40083315:	001c46        	j	4008338a <get_rate_fcc_index+0xb6>
40083318:	4c0822        	l8ui	a2, a8, 76
4008331b:	418420        	srli	a8, a2, 4
4008331e:	a20c      	movi.n	a2, 10
40083320:	632820        	minu	a2, a8, a2
40083323:	0018c6        	j	4008338a <get_rate_fcc_index+0xb6>
40083326:	4d0822        	l8ui	a2, a8, 77
40083329:	348020        	extui	a8, a2, 0, 4
4008332c:	a20c      	movi.n	a2, 10
4008332e:	632820        	minu	a2, a8, a2
40083331:	001546        	j	4008338a <get_rate_fcc_index+0xb6>
40083334:	4d0822        	l8ui	a2, a8, 77
40083337:	418420        	srli	a8, a2, 4
4008333a:	a20c      	movi.n	a2, 10
4008333c:	632820        	minu	a2, a8, a2
4008333f:	0011c6        	j	4008338a <get_rate_fcc_index+0xb6>
40083342:	4e0822        	l8ui	a2, a8, 78
40083345:	348020        	extui	a8, a2, 0, 4
40083348:	a20c      	movi.n	a2, 10
4008334a:	632820        	minu	a2, a8, a2
4008334d:	000e46        	j	4008338a <get_rate_fcc_index+0xb6>
40083350:	4e0822        	l8ui	a2, a8, 78
40083353:	418420        	srli	a8, a2, 4
40083356:	a20c      	movi.n	a2, 10
40083358:	632820        	minu	a2, a8, a2
4008335b:	000ac6        	j	4008338a <get_rate_fcc_index+0xb6>
4008335e:	4f0822        	l8ui	a2, a8, 79
40083361:	348020        	extui	a8, a2, 0, 4
40083364:	a20c      	movi.n	a2, 10
40083366:	632820        	minu	a2, a8, a2
40083369:	000746        	j	4008338a <get_rate_fcc_index+0xb6>
4008336c:	4f0822        	l8ui	a2, a8, 79
4008336f:	418420        	srli	a8, a2, 4
40083372:	a20c      	movi.n	a2, 10
40083374:	632820        	minu	a2, a8, a2
40083377:	0003c6        	j	4008338a <get_rate_fcc_index+0xb6>
4008337a:	500822        	l8ui	a2, a8, 80
4008337d:	348020        	extui	a8, a2, 0, 4
40083380:	a20c      	movi.n	a2, 10
40083382:	632820        	minu	a2, a8, a2
40083385:	000046        	j	4008338a <get_rate_fcc_index+0xb6>
40083388:	020c      	movi.n	a2, 0
4008338a:	ab0c      	movi.n	a11, 10
4008338c:	638ab0        	minu	a8, a10, a11
4008338f:	0dbb97        	bgeu	a11, a9, 400833a0 <get_rate_fcc_index+0xcc>
40083392:	0b9d      	mov.n	a9, a11
40083394:	000206        	j	400833a0 <get_rate_fcc_index+0xcc>
40083397:	000000        	ill
4008339a:	080c      	movi.n	a8, 0
4008339c:	082d      	mov.n	a2, a8
4008339e:	089d      	mov.n	a9, a8
400833a0:	004382        	s8i	a8, a3, 0
400833a3:	014392        	s8i	a9, a3, 1
400833a6:	024322        	s8i	a2, a3, 2
400833a9:	f01d      	retw.n
400833ab:	15fc00        	extui	a15, a0, 28, 2
400833ae:	3ffc      	bnez.n	a15, 400833e5 <get_rate_target_power+0x35>

400833b0 <get_rate_target_power>:
400833b0:	004136        	entry	a1, 32
400833b3:	742020        	extui	a2, a2, 0, 8
400833b6:	419220        	srli	a9, a2, 2
400833b9:	081c      	movi.n	a8, 16
400833bb:	2e89b6        	bltui	a9, 8, 400833ed <get_rate_target_power+0x3d>
400833be:	f80c      	movi.n	a8, 15
400833c0:	103897        	bltu	a8, a9, 400833d4 <get_rate_target_power+0x24>
400833c3:	f8c992        	addi	a9, a9, -8
400833c6:	ff0b21        	l32r	a2, 40082ff4 <set_most_pwr_reg+0x17c>
400833c9:	749090        	extui	a9, a9, 0, 8
400833cc:	929a      	add.n	a9, a2, a9
400833ce:	000982        	l8ui	a8, a9, 0
400833d1:	000606        	j	400833ed <get_rate_target_power+0x3d>
400833d4:	7a1c      	movi.n	a10, 23
400833d6:	080c      	movi.n	a8, 0
400833d8:	113a97        	bltu	a10, a9, 400833ed <get_rate_target_power+0x3d>
400833db:	f0c982        	addi	a8, a9, -16
400833de:	142020        	extui	a2, a2, 0, 2
400833e1:	748080        	extui	a8, a8, 0, 8
400833e4:	053266        	bnei	a2, 3, 400833ed <get_rate_target_power+0x3d>
400833e7:	f8c982        	addi	a8, a9, -8
400833ea:	748080        	extui	a8, a8, 0, 8
400833ed:	ffef21        	l32r	a2, 400833ac <get_rate_fcc_index+0xd8>
400833f0:	828a      	add.n	a8, a2, a8
400833f2:	000822        	l8ui	a2, a8, 0
400833f5:	f01d      	retw.n
400833f7:	09bd00        	l32e	a0, a13, -20
400833fa:	3ffc      	bnez.n	a15, 40083431 <get_chan_pwr_index+0x35>

400833fc <get_chan_pwr_index>:
400833fc:	004136        	entry	a1, 32
400833ff:	fefc21        	l32r	a2, 40082ff0 <set_most_pwr_reg+0x178>
40083402:	080c      	movi.n	a8, 0
40083404:	02ad      	mov.n	a10, a2
40083406:	3a0a92        	l8ui	a9, a10, 58
40083409:	3b0222        	l8ui	a2, a2, 59
4008340c:	ff4ef1        	l32r	a15, 40083144 <ram_set_chan_cal_interp+0xcc>
4008340f:	832890        	moveqz	a2, a8, a9
40083412:	029d      	mov.n	a9, a2
40083414:	fff921        	l32r	a2, 400833f8 <get_rate_target_power+0x48>
40083417:	0fbd      	mov.n	a11, a15
40083419:	0002e2        	l8ui	a14, a2, 0
4008341c:	1c1c      	movi.n	a12, 17
4008341e:	742090        	extui	a2, a9, 0, 8
40083421:	388c76        	loop	a12, 4008345d <get_chan_pwr_index+0x61>
40083424:	749080        	extui	a9, a8, 0, 8
40083427:	0a88f6        	bgeui	a8, 8, 40083435 <get_chan_pwr_index+0x39>
4008342a:	320ad2        	l8ui	a13, a10, 50
4008342d:	089d      	mov.n	a9, a8
4008342f:	004bd2        	s8i	a13, a11, 0
40083432:	000646        	j	4008344f <get_chan_pwr_index+0x53>
40083435:	0bb926        	beqi	a9, 16, 40083444 <get_chan_pwr_index+0x48>
40083438:	2a0ad2        	l8ui	a13, a10, 42
4008343b:	089d      	mov.n	a9, a8
4008343d:	004bd2        	s8i	a13, a11, 0
40083440:	0002c6        	j	4008344f <get_chan_pwr_index+0x53>
40083443:	4f2200        	f64cmph	a2, a2, a0, 4
40083446:	0bd210        	lsi	f1, a2, 44
40083449:	3de700        	lsi	f0, a7, 244
4008344c:	f01d04        	lsi	f0, a13, 0x3c0
4008344f:	04bde7        	bgeu	a13, a14, 40083457 <get_chan_pwr_index+0x5b>
40083452:	9f9a      	add.n	a9, a15, a9
40083454:	0049e2        	s8i	a14, a9, 0
40083457:	881b      	addi.n	a8, a8, 1
40083459:	bb1b      	addi.n	a11, a11, 1
4008345b:	aa1b      	addi.n	a10, a10, 1
4008345d:	f01d      	retw.n
4008345f:	15e000        	extui	a14, a0, 16, 2
40083462:	3ffc      	bnez.n	a15, 40083499 <write_wifi_dig_gain+0x2d>
40083464:	006004        	lsi	f0, a0, 0
40083467:	600860        	lsi	f6, a8, 0x180
4008346a:	00          	.byte 00
4008346b:	60          	.byte 0x60

4008346c <write_wifi_dig_gain>:
4008346c:	006136        	entry	a1, 48
4008346f:	fffcb1        	l32r	a11, 40083460 <get_chan_pwr_index+0x64>
40083472:	742020        	extui	a2, a2, 0, 8
40083475:	01ad      	mov.n	a10, a1
40083477:	890c      	movi.n	a9, 8
40083479:	0c8976        	loop	a9, 40083489 <write_wifi_dig_gain+0x1d>
4008347c:	000b82        	l8ui	a8, a11, 0
4008347f:	bb1b      	addi.n	a11, a11, 1
40083481:	c08820        	sub	a8, a8, a2
40083484:	004a82        	s8i	a8, a10, 0
40083487:	aa1b      	addi.n	a10, a10, 1
40083489:	0188      	l32i.n	a8, a1, 0
4008348b:	fff621        	l32r	a2, 40083464 <get_chan_pwr_index+0x68>
4008348e:	0020c0        	memw
40083491:	0289      	s32i.n	a8, a2, 0
40083493:	1188      	l32i.n	a8, a1, 4
40083495:	fff421        	l32r	a2, 40083468 <get_chan_pwr_index+0x6c>
40083498:	0020c0        	memw
4008349b:	0289      	s32i.n	a8, a2, 0
4008349d:	f01d      	retw.n
	...

400834a0 <set_chan_dig_gain>:
400834a0:	00a136        	entry	a1, 80
400834a3:	fe7031        	l32r	a3, 40082e64 <set_tx_gain_table+0xbc>
400834a6:	a16b      	addi.n	a10, a1, 6
400834a8:	0003b2        	l8ui	a11, a3, 0
400834ab:	742020        	extui	a2, a2, 0, 8
400834ae:	23bb00        	sext	a11, a11, 7
400834b1:	ffd8e5        	call8	40083240 <get_phy_target_power>
400834b4:	040c      	movi.n	a4, 0
400834b6:	fc3a61        	l32r	a6, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400834b9:	ffe931        	l32r	a3, 40083460 <get_chan_pwr_index+0x64>
400834bc:	000c46        	j	400834f1 <set_chan_dig_gain+0x51>
400834bf:	920000        	lsi	f0, a0, 0x248
400834c2:	6b0005        	call0	400ee4c4 <_text_end+0x1ff3>
400834c5:	489255        	call4	400cbdec <_rtc_text_end+0xbdec>
400834c8:	881b00        	lsi	f0, a11, 0x220
400834cb:	770b      	addi.n	a7, a7, -1
400834cd:	ff0756        	bnez	a7, 400834c1 <set_chan_dig_gain+0x21>
400834d0:	0658      	l32i.n	a5, a6, 0
400834d2:	02bd      	mov.n	a11, a2
400834d4:	5a2552        	l32i	a5, a5, 0x168
400834d7:	a1cb      	addi.n	a10, a1, 12
400834d9:	0005e0        	callx8	a5
400834dc:	60a0a0        	neg	a10, a10
400834df:	74a0a0        	extui	a10, a10, 0, 8
400834e2:	714a      	add.n	a7, a1, a4
400834e4:	534a      	add.n	a5, a3, a4
400834e6:	0047a2        	s8i	a10, a7, 0
400834e9:	0045a2        	s8i	a10, a5, 0
400834ec:	441b      	addi.n	a4, a4, 1
400834ee:	0f6426        	beqi	a4, 6, 40083501 <set_chan_dig_gain+0x61>
400834f1:	fd1d81        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
400834f4:	60c452        	addi	a5, a4, 96
400834f7:	585a      	add.n	a5, a8, a5
400834f9:	470c      	movi.n	a7, 4
400834fb:	81cb      	addi.n	a8, a1, 12
400834fd:	fff006        	j	400834c1 <set_chan_dig_gain+0x21>
40083500:	efa500        	f64cmph	a10, a5, a0, 14
40083503:	ff          	.byte 0xff
40083504:	ff1061        	l32r	a6, 40083144 <ram_set_chan_cal_interp+0xcc>
40083507:	050372        	l8ui	a7, a3, 5
4008350a:	100652        	l8ui	a5, a6, 16
4008350d:	064372        	s8i	a7, a3, 6
40083510:	535a      	add.n	a5, a3, a5
40083512:	000552        	l8ui	a5, a5, 0
40083515:	ffa571        	l32r	a7, 400833ac <get_rate_fcc_index+0xd8>
40083518:	556b      	addi.n	a5, a5, 6
4008351a:	074352        	s8i	a5, a3, 7
4008351d:	07bd      	mov.n	a11, a7
4008351f:	065d      	mov.n	a5, a6
40083521:	06ad      	mov.n	a10, a6
40083523:	191c      	movi.n	a9, 17
40083525:	108976        	loop	a9, 40083539 <set_chan_dig_gain+0x99>
40083528:	000a42        	l8ui	a4, a10, 0
4008352b:	816b      	addi.n	a8, a1, 6
4008352d:	484a      	add.n	a4, a8, a4
4008352f:	000442        	l8ui	a4, a4, 0
40083532:	aa1b      	addi.n	a10, a10, 1
40083534:	004b42        	s8i	a4, a11, 0
40083537:	bb1b      	addi.n	a11, a11, 1
40083539:	fead81        	l32r	a8, 40082ff0 <set_most_pwr_reg+0x178>
4008353c:	3d0882        	l8ui	a8, a8, 61
4008353f:	022826        	beqi	a8, 2, 40083545 <set_chan_dig_gain+0xa5>
40083542:	003f86        	j	40083644 <set_chan_dig_gain+0x1a4>
40083545:	02ad      	mov.n	a10, a2
40083547:	10c1b2        	addi	a11, a1, 16
4008354a:	ffd8a5        	call8	400832d4 <get_rate_fcc_index>
4008354d:	110192        	l8ui	a9, a1, 17
40083550:	1001d2        	l8ui	a13, a1, 16
40083553:	1201c2        	l8ui	a12, a1, 18
40083556:	0b0142        	l8ui	a4, a1, 11
40083559:	0501e2        	l8ui	a14, a1, 5
4008355c:	8199      	s32i.n	a9, a1, 32
4008355e:	080c      	movi.n	a8, 0
40083560:	1a1c      	movi.n	a10, 17
40083562:	9b8a76        	loop	a10, 40083601 <set_chan_dig_gain+0x161>
40083565:	74f080        	extui	a15, a8, 0, 8
40083568:	1088b6        	bltui	a8, 8, 4008357c <set_chan_dig_gain+0xdc>
4008356b:	12bf66        	bnei	a15, 16, 40083581 <set_chan_dig_gain+0xe1>
4008356e:	000522        	l8ui	a2, a5, 0
40083571:	81b8      	l32i.n	a11, a1, 32
40083573:	0232b7        	bltu	a2, a11, 40083579 <set_chan_dig_gain+0xd9>
40083576:	003286        	j	40083644 <set_chan_dig_gain+0x1a4>
40083579:	002ec6        	j	40083638 <set_chan_dig_gain+0x198>
4008357c:	0d9d      	mov.n	a9, a13
4008357e:	000046        	j	40083583 <set_chan_dig_gain+0xe3>
40083581:	0c9d      	mov.n	a9, a12
40083583:	0005b2        	l8ui	a11, a5, 0
40083586:	082d      	mov.n	a2, a8
40083588:	71bb97        	bgeu	a11, a9, 400835fd <set_chan_dig_gain+0x15d>
4008358b:	2169f6        	bgeui	a9, 6, 400835b0 <set_chan_dig_gain+0x110>
4008358e:	b16b      	addi.n	a11, a1, 6
40083590:	2b9a      	add.n	a2, a11, a9
40083592:	0002f2        	l8ui	a15, a2, 0
40083595:	b78a      	add.n	a11, a7, a8
40083597:	268a      	add.n	a2, a6, a8
40083599:	004bf2        	s8i	a15, a11, 0
4008359c:	004292        	s8i	a9, a2, 0
4008359f:	5ab866        	bnei	a8, 16, 400835fd <set_chan_dig_gain+0x15d>
400835a2:	919a      	add.n	a9, a1, a9
400835a4:	000922        	l8ui	a2, a9, 0
400835a7:	226b      	addi.n	a2, a2, 6
400835a9:	074322        	s8i	a2, a3, 7
400835ac:	002506        	j	40083644 <set_chan_dig_gain+0x1a4>
400835af:	88f600        	lsi	f0, a6, 0x220
400835b2:	c92220        	lsi	f2, a2, 0x324
400835b5:	8afb      	addi.n	a8, a10, 15
400835b7:	919997        	bne	a9, a9, 4008354c <set_chan_dig_gain+0xac>
400835ba:	1122e0        	slli	a2, a2, 2
400835bd:	590c      	movi.n	a9, 5
400835bf:	f68a      	add.n	a15, a6, a8
400835c1:	742020        	extui	a2, a2, 0, 8
400835c4:	004f92        	s8i	a9, a15, 0
400835c7:	9198      	l32i.n	a9, a1, 36
400835c9:	c0b420        	sub	a11, a4, a2
400835cc:	0049b2        	s8i	a11, a9, 0
400835cf:	590c      	movi.n	a9, 5
400835d1:	000806        	j	400835f5 <set_chan_dig_gain+0x155>
400835d4:	2cbf26        	beqi	a15, 16, 40083604 <set_chan_dig_gain+0x164>
400835d7:	fbc922        	addi	a2, a9, -5
400835da:	b78a      	add.n	a11, a7, a8
400835dc:	91b9      	s32i.n	a11, a1, 36
400835de:	690c      	movi.n	a9, 6
400835e0:	1122e0        	slli	a2, a2, 2
400835e3:	f68a      	add.n	a15, a6, a8
400835e5:	742020        	extui	a2, a2, 0, 8
400835e8:	004f92        	s8i	a9, a15, 0
400835eb:	9198      	l32i.n	a9, a1, 36
400835ed:	c0b420        	sub	a11, a4, a2
400835f0:	0049b2        	s8i	a11, a9, 0
400835f3:	690c      	movi.n	a9, 6
400835f5:	939a      	add.n	a9, a3, a9
400835f7:	c02e20        	sub	a2, a14, a2
400835fa:	004922        	s8i	a2, a9, 0
400835fd:	881b      	addi.n	a8, a8, 1
400835ff:	551b      	addi.n	a5, a5, 1
40083601:	000fc6        	j	40083644 <set_chan_dig_gain+0x1a4>
40083604:	fbc952        	addi	a5, a9, -5
40083607:	050162        	l8ui	a6, a1, 5
4008360a:	1155e0        	slli	a5, a5, 2
4008360d:	0b0182        	l8ui	a8, a1, 11
40083610:	745050        	extui	a5, a5, 0, 8
40083613:	666b      	addi.n	a6, a6, 6
40083615:	c08850        	sub	a8, a8, a5
40083618:	272a      	add.n	a2, a7, a2
4008361a:	c05650        	sub	a5, a6, a5
4008361d:	004282        	s8i	a8, a2, 0
40083620:	074352        	s8i	a5, a3, 7
40083623:	000746        	j	40083644 <set_chan_dig_gain+0x1a4>
40083626:	8198      	l32i.n	a9, a1, 32
40083628:	416b      	addi.n	a4, a1, 6
4008362a:	249a      	add.n	a2, a4, a9
4008362c:	000222        	l8ui	a2, a2, 0
4008362f:	104692        	s8i	a9, a6, 16
40083632:	104722        	s8i	a2, a7, 16
40083635:	ffda46        	j	400835a2 <set_chan_dig_gain+0x102>
40083638:	8188      	l32i.n	a8, a1, 32
4008363a:	e868b6        	bltui	a8, 6, 40083626 <set_chan_dig_gain+0x186>
4008363d:	089d      	mov.n	a9, a8
4008363f:	0f2d      	mov.n	a2, a15
40083641:	ffefc6        	j	40083604 <set_chan_dig_gain+0x164>
40083644:	1a0c      	movi.n	a10, 1
40083646:	ffb065        	call8	4008314c <write_txrate_power_offset>
40083649:	fcc7b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
4008364c:	00a022        	movi	a2, 0
4008364f:	b60ba2        	l8ui	a10, a11, 182
40083652:	23aa00        	sext	a10, a10, 7
40083655:	ffe165        	call8	4008346c <write_wifi_dig_gain>
40083658:	f01d      	retw.n
4008365a:	600000        	neg	a0, a0
4008365d:	6000e0        	neg	a0, a14
40083660:	12b8      	l32i.n	a11, a2, 4
40083662:	3ffc      	bnez.n	a15, 40083699 <tx_pwctrl_cal+0x1d>
40083664:	fc09c6        	j	4008268f <phy_unforce_wifi_chan+0x3>
40083667:	3f          	.byte 0x3f
40083668:	fc09c2        	l8ui	a12, a9, 252
4008366b:	3f          	.byte 0x3f
4008366c:	fc09c5        	call0	4007f70c <__udivmoddi4+0x1ab18>
4008366f:	3f          	.byte 0x3f
40083670:	f8cc      	bnez.n	a8, 40083683 <tx_pwctrl_cal+0x7>
40083672:	3ffb      	addi.n	a3, a15, 15
40083674:	ec7a      	add.n	a14, a12, a7
40083676:	3ffb      	addi.n	a3, a15, 15
40083678:	f958      	l32i.n	a5, a9, 60
4008367a:	3ffb      	addi.n	a3, a15, 15

4008367c <tx_pwctrl_cal>:
4008367c:	010136        	entry	a1, 128
4008367f:	fbc871        	l32r	a7, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083682:	fff631        	l32r	a3, 4008365c <set_chan_dig_gain+0x1bc>
40083685:	fff681        	l32r	a8, 40083660 <set_chan_dig_gain+0x1c0>
40083688:	0728      	l32i.n	a2, a7, 0
4008368a:	0020c0        	memw
4008368d:	0338      	l32i.n	a3, a3, 0
4008368f:	672222        	l32i	a2, a2, 0x19c
40083692:	0018a2        	l16ui	a10, a8, 0
40083695:	653830        	extui	a3, a3, 24, 7
40083698:	c139      	s32i.n	a3, a1, 48
4008369a:	0002e0        	callx8	a2
4008369d:	c138      	l32i.n	a3, a1, 48
4008369f:	fff121        	l32r	a2, 40083664 <set_chan_dig_gain+0x1c4>
400836a2:	743030        	extui	a3, a3, 0, 8
400836a5:	0052a2        	s16i	a10, a2, 0
400836a8:	418230        	srli	a8, a3, 2
400836ab:	749050        	extui	a9, a5, 0, 8
400836ae:	746060        	extui	a6, a6, 0, 8
400836b1:	021c      	movi.n	a2, 16
400836b3:	2e88b6        	bltui	a8, 8, 400836e5 <tx_pwctrl_cal+0x69>
400836b6:	f20c      	movi.n	a2, 15
400836b8:	103287        	bltu	a2, a8, 400836cc <tx_pwctrl_cal+0x50>
400836bb:	f8c822        	addi	a2, a8, -8
400836be:	fe4d31        	l32r	a3, 40082ff4 <set_most_pwr_reg+0x17c>
400836c1:	742020        	extui	a2, a2, 0, 8
400836c4:	232a      	add.n	a2, a3, a2
400836c6:	000222        	l8ui	a2, a2, 0
400836c9:	000606        	j	400836e5 <tx_pwctrl_cal+0x69>
400836cc:	751c      	movi.n	a5, 23
400836ce:	020c      	movi.n	a2, 0
400836d0:	113587        	bltu	a5, a8, 400836e5 <tx_pwctrl_cal+0x69>
400836d3:	f0c822        	addi	a2, a8, -16
400836d6:	143030        	extui	a3, a3, 0, 2
400836d9:	742020        	extui	a2, a2, 0, 8
400836dc:	053366        	bnei	a3, 3, 400836e5 <tx_pwctrl_cal+0x69>
400836df:	f8c822        	addi	a2, a8, -8
400836e2:	742020        	extui	a2, a2, 0, 8
400836e5:	ff3131        	l32r	a3, 400833ac <get_rate_fcc_index+0xd8>
400836e8:	0c2c      	movi.n	a12, 32
400836ea:	232a      	add.n	a2, a3, a2
400836ec:	000232        	l8ui	a3, a2, 0
400836ef:	233300        	sext	a3, a3, 7
400836f2:	11b3e0        	slli	a11, a3, 2
400836f5:	c0aab0        	sub	a10, a10, a11
400836f8:	23ba80        	sext	a11, a10, 15
400836fb:	ffdba1        	l32r	a10, 40083668 <set_chan_dig_gain+0x1c8>
400836fe:	005ab2        	s16i	a11, a10, 0
40083701:	02acb7        	bge	a12, a11, 40083707 <tx_pwctrl_cal+0x8b>
40083704:	00a806        	j	400839a8 <tx_pwctrl_cal+0x32c>
40083707:	0a6c      	movi.n	a10, -32
40083709:	02aba7        	bge	a11, a10, 4008370f <tx_pwctrl_cal+0x93>
4008370c:	00ac06        	j	400839c0 <tx_pwctrl_cal+0x344>
4008370f:	ffd721        	l32r	a2, 4008366c <set_chan_dig_gain+0x1cc>
40083712:	000222        	l8ui	a2, a2, 0
40083715:	4742f6        	bgeui	a2, 4, 40083760 <tx_pwctrl_cal+0xe4>
40083718:	281ba6        	blti	a11, 1, 40083744 <tx_pwctrl_cal+0xc8>
4008371b:	2122b0        	srai	a2, a11, 2
4008371e:	22ba      	add.n	a2, a2, a11
40083720:	212220        	srai	a2, a2, 2
40083723:	602020        	neg	a2, a2
40083726:	742020        	extui	a2, a2, 0, 8
40083729:	1b0c      	movi.n	a11, 1
4008372b:	23a200        	sext	a10, a2, 7
4008372e:	050c      	movi.n	a5, 0
40083730:	935ba0        	movnez	a5, a11, a10
40083733:	74b050        	extui	a11, a5, 0, 8
40083736:	050c      	movi.n	a5, 0
40083738:	1a0c      	movi.n	a10, 1
4008373a:	935a90        	movnez	a5, a10, a9
4008373d:	105b50        	and	a5, a11, a5
40083740:	001d86        	j	400837ba <tx_pwctrl_cal+0x13e>
40083743:	020c00        	andb	b0, b12, b0
40083746:	0a7c      	movi.n	a10, -16
40083748:	025d      	mov.n	a5, a2
4008374a:	6caba7        	bge	a11, a10, 400837ba <tx_pwctrl_cal+0x13e>
4008374d:	2122b0        	srai	a2, a11, 2
40083750:	c02b20        	sub	a2, a11, a2
40083753:	212220        	srai	a2, a2, 2
40083756:	602020        	neg	a2, a2
40083759:	742020        	extui	a2, a2, 0, 8
4008375c:	000e46        	j	40083799 <tx_pwctrl_cal+0x11d>
4008375f:	0bad00        	lsi	f0, a13, 44
40083762:	0728      	l32i.n	a2, a7, 0
40083764:	2d0c      	movi.n	a13, 2
40083766:	682222        	l32i	a2, a2, 0x1a0
40083769:	04a0c2        	movi	a12, 4
4008376c:	176182        	s32i	a8, a1, 92
4008376f:	156192        	s32i	a9, a1, 84
40083772:	20b440        	or	a11, a4, a4
40083775:	0002e0        	callx8	a2
40083778:	7420a0        	extui	a2, a10, 0, 8
4008377b:	235200        	sext	a5, a2, 7
4008377e:	172182        	l32i	a8, a1, 92
40083781:	152192        	l32i	a9, a1, 84
40083784:	1115e6        	bgei	a5, 1, 40083799 <tx_pwctrl_cal+0x11d>
40083787:	0b0c      	movi.n	a11, 0
40083789:	1a0c      	movi.n	a10, 1
4008378b:	0bcd      	mov.n	a12, a11
4008378d:	93ca50        	movnez	a12, a10, a5
40083790:	93ba90        	movnez	a11, a10, a9
40083793:	105cb0        	and	a5, a12, a11
40083796:	000806        	j	400837ba <tx_pwctrl_cal+0x13e>
40083799:	fc7351        	l32r	a5, 40082968 <phy_en_hw_set_freq+0x18>
4008379c:	3a1c      	movi.n	a10, 19
4008379e:	b70552        	l8ui	a5, a5, 183
400837a1:	235500        	sext	a5, a5, 7
400837a4:	0c2a57        	blt	a10, a5, 400837b4 <tx_pwctrl_cal+0x138>
400837a7:	0a0c      	movi.n	a10, 0
400837a9:	150c      	movi.n	a5, 1
400837ab:	835a90        	moveqz	a5, a10, a9
400837ae:	745050        	extui	a5, a5, 0, 8
400837b1:	000146        	j	400837ba <tx_pwctrl_cal+0x13e>
400837b4:	00a022        	movi	a2, 0
400837b7:	205220        	or	a5, a2, a2
400837ba:	06a616        	beqz	a6, 40083828 <tx_pwctrl_cal+0x1ac>
400837bd:	fc6aa1        	l32r	a10, 40082968 <phy_en_hw_set_freq+0x18>
400837c0:	ff2a91        	l32r	a9, 40083468 <get_chan_pwr_index+0x6c>
400837c3:	510ae2        	l8ui	a14, a10, 81
400837c6:	b60ab2        	l8ui	a11, a10, 182
400837c9:	b70aa2        	l8ui	a10, a10, 183
400837cc:	0020c0        	memw
400837cf:	002992        	l32i	a9, a9, 0
400837d2:	4041a2        	s8i	a10, a1, 64
400837d5:	ffa4a1        	l32r	a10, 40083668 <set_chan_dig_gain+0x1c8>
400837d8:	0094f2        	l16si	a15, a4, 0
400837db:	009ad2        	l16si	a13, a10, 0
400837de:	ffa1a1        	l32r	a10, 40083664 <set_chan_dig_gain+0x1c4>
400837e1:	23bb00        	sext	a11, a11, 7
400837e4:	009ac2        	l16si	a12, a10, 0
400837e7:	fda3a1        	l32r	a10, 40082e74 <set_tx_gain_table+0xcc>
400837ea:	419890        	srli	a9, a9, 8
400837ed:	011aa2        	l16ui	a10, a10, 2
400837f0:	239900        	sext	a9, a9, 7
400837f3:	31a9      	s32i.n	a10, a1, 12
400837f5:	fd9fa1        	l32r	a10, 40082e74 <set_tx_gain_table+0xcc>
400837f8:	609090        	neg	a9, a9
400837fb:	001aa2        	l16ui	a10, a10, 0
400837fe:	11b9      	s32i.n	a11, a1, 4
40083800:	4001b2        	l8ui	a11, a1, 64
40083803:	21a9      	s32i.n	a10, a1, 8
40083805:	23ab00        	sext	a10, a11, 7
40083808:	23ee00        	sext	a14, a14, 7
4008380b:	7199      	s32i.n	a9, a1, 28
4008380d:	01a9      	s32i.n	a10, a1, 0
4008380f:	c198      	l32i.n	a9, a1, 48
40083811:	ff97a1        	l32r	a10, 40083670 <set_chan_dig_gain+0x1d0>
40083814:	61e9      	s32i.n	a14, a1, 24
40083816:	03bd      	mov.n	a11, a3
40083818:	23e200        	sext	a14, a2, 7
4008381b:	5189      	s32i.n	a8, a1, 20
4008381d:	176182        	s32i	a8, a1, 92
40083820:	4199      	s32i.n	a9, a1, 16
40083822:	682825        	call8	400ebaa4 <phy_printf>
40083825:	172182        	l32i	a8, a1, 92
40083828:	1b0516        	beqz	a5, 400839dc <tx_pwctrl_cal+0x360>
4008382b:	ff0d51        	l32r	a5, 40083460 <get_chan_pwr_index+0x64>
4008382e:	fc4ed1        	l32r	a13, 40082968 <phy_en_hw_set_freq+0x18>
40083831:	0505a2        	l8ui	a10, a5, 5
40083834:	b60d92        	l8ui	a9, a13, 182
40083837:	cc1c      	movi.n	a12, 28
40083839:	235900        	sext	a5, a9, 7
4008383c:	239a00        	sext	a9, a10, 7
4008383f:	c09590        	sub	a9, a5, a9
40083842:	f49090        	extui	a9, a9, 0, 16
40083845:	235200        	sext	a5, a2, 7
40083848:	c0a950        	sub	a10, a9, a5
4008384b:	f4a0a0        	extui	a10, a10, 0, 16
4008384e:	23ba80        	sext	a11, a10, 15
40083851:	0dacb7        	bge	a12, a11, 40083862 <tx_pwctrl_cal+0x1e6>
40083854:	fd88e1        	l32r	a14, 40082e74 <set_tx_gain_table+0xcc>
40083857:	ff1c      	movi.n	a15, 31
40083859:	001ec2        	l16ui	a12, a14, 0
4008385c:	193fc7        	bltu	a15, a12, 40083879 <tx_pwctrl_cal+0x1fd>
4008385f:	002686        	j	400838fd <tx_pwctrl_cal+0x281>
40083862:	bc0c      	movi.n	a12, 11
40083864:	02acb7        	bge	a12, a11, 4008386a <tx_pwctrl_cal+0x1ee>
40083867:	002486        	j	400838fd <tx_pwctrl_cal+0x281>
4008386a:	fd82e1        	l32r	a14, 40082e74 <set_tx_gain_table+0xcc>
4008386d:	afa0f2        	movi	a15, 175
40083870:	001ec2        	l16ui	a12, a14, 0
40083873:	02bfc7        	bgeu	a15, a12, 40083879 <tx_pwctrl_cal+0x1fd>
40083876:	0055c6        	j	400839d1 <tx_pwctrl_cal+0x355>
40083879:	07b8      	l32i.n	a11, a7, 0
4008387b:	471c      	movi.n	a7, 20
4008387d:	c0a7a0        	sub	a10, a7, a10
40083880:	652bf2        	l32i	a15, a11, 0x194
40083883:	7470a0        	extui	a7, a10, 0, 8
40083886:	ff7bc1        	l32r	a12, 40083674 <set_chan_dig_gain+0x1d4>
40083889:	0ebd      	mov.n	a11, a14
4008388b:	176182        	s32i	a8, a1, 92
4008388e:	156192        	s32i	a9, a1, 84
40083891:	204172        	s8i	a7, a1, 32
40083894:	20c1a2        	addi	a10, a1, 32
40083897:	1661d2        	s32i	a13, a1, 88
4008389a:	1461e2        	s32i	a14, a1, 80
4008389d:	000fe0        	callx8	a15
400838a0:	1621d2        	l32i	a13, a1, 88
400838a3:	2001f2        	l8ui	a15, a1, 32
400838a6:	b80da2        	l8ui	a10, a13, 184
400838a9:	b70dc2        	l8ui	a12, a13, 183
400838ac:	2f2a      	add.n	a2, a15, a2
400838ae:	c0f7f0        	sub	a15, a7, a15
400838b1:	4041a2        	s8i	a10, a1, 64
400838b4:	74f0f0        	extui	a15, a15, 0, 8
400838b7:	1421e2        	l32i	a14, a1, 80
400838ba:	c02270        	sub	a2, a2, a7
400838bd:	7fca      	add.n	a7, a15, a12
400838bf:	4001c2        	l8ui	a12, a1, 64
400838c2:	011eb2        	l16ui	a11, a14, 2
400838c5:	001ea2        	l16ui	a10, a14, 0
400838c8:	ffca      	add.n	a15, a15, a12
400838ca:	b74d72        	s8i	a7, a13, 183
400838cd:	b84df2        	s8i	a15, a13, 184
400838d0:	1661d2        	s32i	a13, a1, 88
400838d3:	1461e2        	s32i	a14, a1, 80
400838d6:	ff4d25        	call8	40082da8 <set_tx_gain_table>
400838d9:	1421e2        	l32i	a14, a1, 80
400838dc:	152192        	l32i	a9, a1, 84
400838df:	742020        	extui	a2, a2, 0, 8
400838e2:	1621d2        	l32i	a13, a1, 88
400838e5:	001ea2        	l16ui	a10, a14, 0
400838e8:	011e72        	l16ui	a7, a14, 2
400838eb:	23b200        	sext	a11, a2, 7
400838ee:	c0b9b0        	sub	a11, a9, a11
400838f1:	172182        	l32i	a8, a1, 92
400838f4:	5e5da2        	s16i	a10, a13, 188
400838f7:	5f5d72        	s16i	a7, a13, 190
400838fa:	23bb80        	sext	a11, a11, 15
400838fd:	747720        	extui	a7, a2, 7, 8
40083900:	478c      	beqz.n	a7, 40083908 <tx_pwctrl_cal+0x28c>
40083902:	46a072        	movi	a7, 70
40083905:	17a7b7        	bge	a7, a11, 40083920 <tx_pwctrl_cal+0x2a4>
40083908:	237200        	sext	a7, a2, 7
4008390b:	217770        	srai	a7, a7, 7
4008390e:	c07720        	sub	a7, a7, a2
40083911:	02e777        	bbsi	a7, 7, 40083917 <tx_pwctrl_cal+0x29b>
40083914:	003106        	j	400839dc <tx_pwctrl_cal+0x360>
40083917:	0ba072        	movi	a7, 11
4008391a:	0227b7        	blt	a7, a11, 40083920 <tx_pwctrl_cal+0x2a4>
4008391d:	002ec6        	j	400839dc <tx_pwctrl_cal+0x360>
40083920:	b60d92        	l8ui	a9, a13, 182
40083923:	b70dc2        	l8ui	a12, a13, 183
40083926:	b80db2        	l8ui	a11, a13, 184
40083929:	742020        	extui	a2, a2, 0, 8
4008392c:	c09920        	sub	a9, a9, a2
4008392f:	749090        	extui	a9, a9, 0, 8
40083932:	c2ca      	add.n	a12, a2, a12
40083934:	22ba      	add.n	a2, a2, a11
40083936:	b64d92        	s8i	a9, a13, 182
40083939:	b74dc2        	s8i	a12, a13, 183
4008393c:	b84d22        	s8i	a2, a13, 184
4008393f:	23a900        	sext	a10, a9, 7
40083942:	176182        	s32i	a8, a1, 92
40083945:	1661d2        	s32i	a13, a1, 88
40083948:	ffb225        	call8	4008346c <write_wifi_dig_gain>
4008394b:	172182        	l32i	a8, a1, 92
4008394e:	1621d2        	l32i	a13, a1, 88
40083951:	087616        	beqz	a6, 400839dc <tx_pwctrl_cal+0x360>
40083954:	fec521        	l32r	a2, 40083468 <get_chan_pwr_index+0x6c>
40083957:	0094e2        	l16si	a14, a4, 0
4008395a:	0020c0        	memw
4008395d:	0228      	l32i.n	a2, a2, 0
4008395f:	fd4591        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40083962:	412820        	srli	a2, a2, 8
40083965:	ff4041        	l32r	a4, 40083668 <set_chan_dig_gain+0x1c8>
40083968:	232200        	sext	a2, a2, 7
4008396b:	510d72        	l8ui	a7, a13, 81
4008396e:	b60d62        	l8ui	a6, a13, 182
40083971:	602020        	neg	a2, a2
40083974:	b70df2        	l8ui	a15, a13, 183
40083977:	0094c2        	l16si	a12, a4, 0
4008397a:	011942        	l16ui	a4, a9, 2
4008397d:	001992        	l16ui	a9, a9, 0
40083980:	6129      	s32i.n	a2, a1, 24
40083982:	c128      	l32i.n	a2, a1, 48
40083984:	237700        	sext	a7, a7, 7
40083987:	236600        	sext	a6, a6, 7
4008398a:	ff3ba1        	l32r	a10, 40083678 <set_chan_dig_gain+0x1d8>
4008398d:	5179      	s32i.n	a7, a1, 20
4008398f:	4189      	s32i.n	a8, a1, 16
40083991:	3129      	s32i.n	a2, a1, 12
40083993:	2149      	s32i.n	a4, a1, 8
40083995:	1199      	s32i.n	a9, a1, 4
40083997:	0169      	s32i.n	a6, a1, 0
40083999:	23ff00        	sext	a15, a15, 7
4008399c:	05dd      	mov.n	a13, a5
4008399e:	20b330        	or	a11, a3, a3
400839a1:	681025        	call8	400ebaa4 <phy_printf>
400839a4:	f01d      	retw.n
400839a6:	210000        	srai	a0, a0, 0
400839a9:	0cff31        	l32r	a3, 40046da8 <lld_evt_get_next_free_slot+0x47c>
400839ac:	521b      	addi.n	a5, a2, 1
400839ae:	ad0002        	l8ui	a0, a0, 173
400839b1:	220c      	movi.n	a2, 2
400839b3:	b6f6a0        	lsi	f10, a6, 0x2d8
400839b6:	860245        	call0	400099dc <cache_sram_mmu_set_rom+0x1e8>
400839b9:	ff69      	s32i.n	a6, a15, 60
400839bb:	ff5dc6        	j	40083736 <tx_pwctrl_cal+0xba>
400839be:	510000        	lsi	f0, a0, 0x144
400839c1:	ff2b      	addi.n	a15, a15, 2
400839c3:	620c      	movi.n	a2, 6
400839c5:	000552        	l8ui	a5, a5, 0
400839c8:	0245f6        	bgeui	a5, 4, 400839ce <tx_pwctrl_cal+0x352>
400839cb:	ff7286        	j	40083799 <tx_pwctrl_cal+0x11d>
400839ce:	ff6406        	j	40083762 <tx_pwctrl_cal+0xe6>
400839d1:	674c      	movi.n	a7, 70
400839d3:	0527b7        	blt	a7, a11, 400839dc <tx_pwctrl_cal+0x360>
400839d6:	417720        	srli	a7, a2, 7
400839d9:	f43756        	bnez	a7, 40083920 <tx_pwctrl_cal+0x2a4>
400839dc:	f01d      	retw.n
	...

400839e0 <wifi_11g_rate_chg>:
400839e0:	004136        	entry	a1, 32
400839e3:	f8c222        	addi	a2, a2, -8
400839e6:	748020        	extui	a8, a2, 0, 8
400839e9:	020c      	movi.n	a2, 0
400839eb:	0788f6        	bgeui	a8, 8, 400839f6 <wifi_11g_rate_chg+0x16>
400839ee:	fd8121        	l32r	a2, 40082ff4 <set_most_pwr_reg+0x17c>
400839f1:	828a      	add.n	a8, a2, a8
400839f3:	000822        	l8ui	a2, a8, 0
400839f6:	f01d      	retw.n

400839f8 <ram_set_txcap_reg>:
400839f8:	006136        	entry	a1, 48
400839fb:	743030        	extui	a3, a3, 0, 8
400839fe:	514b      	addi.n	a5, a1, 4
40083a00:	417b      	addi.n	a4, a1, 7
40083a02:	fae761        	l32r	a6, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083a05:	000946        	j	40083a2e <ram_set_txcap_reg+0x36>
40083a08:	09b200        	l32e	a0, a2, -20
40083a0b:	993b00        	lsi	f0, a11, 0x264
40083a0e:	004ab2        	s8i	a11, a10, 0
40083a11:	aa1b      	addi.n	a10, a10, 1
40083a13:	880b      	addi.n	a8, a8, -1
40083a15:	ff0856        	bnez	a8, 40083a09 <ram_set_txcap_reg+0x11>
40083a18:	0688      	l32i.n	a8, a6, 0
40083a1a:	03bd      	mov.n	a11, a3
40083a1c:	5a2882        	l32i	a8, a8, 0x168
40083a1f:	01ad      	mov.n	a10, a1
40083a21:	0008e0        	callx8	a8
40083a24:	0045a2        	s8i	a10, a5, 0
40083a27:	551b      	addi.n	a5, a5, 1
40083a29:	221b      	addi.n	a2, a2, 1
40083a2b:	0a1547        	beq	a5, a4, 40083a39 <ram_set_txcap_reg+0x41>
40083a2e:	01ad      	mov.n	a10, a1
40083a30:	029d      	mov.n	a9, a2
40083a32:	480c      	movi.n	a8, 4
40083a34:	fff446        	j	40083a09 <ram_set_txcap_reg+0x11>
40083a37:	380000        	lsi	f0, a0, 224
40083a3a:	01d206        	j	40084186 <_xt_medint2+0x6a>
40083a3d:	a02204        	lsi	f0, a2, 0x280
40083a40:	dd2060        	lsi	f6, a0, 0x374
40083a43:	232220        	sext	a2, a2, 9
40083a46:	d028      	l32i.n	a2, a0, 52
40083a48:	0c74d0        	lsi	f13, a4, 48
40083a4b:	0c1c      	movi.n	a12, 16
40083a4d:	a22b      	addi.n	a10, a2, 2
40083a4f:	e06ba0        	subx4	a6, a11, a10
40083a52:	220002        	l8ui	a0, a0, 34
40083a55:	380601        	l32r	a0, 40051a70 <lm_cmd_cmp_send+0x238>
40083a58:	01d206        	j	400841a4 <_xt_medint2+0x88>
40083a5b:	220005        	call0	400a5a5c <_iram_end+0x17f08>
40083a5e:	22c023        	ssip	f2, a0, 136
40083a61:	d2d011        	l32r	a1, 400785a4 <__udivmoddi4+0x139b0>
40083a64:	2c0c20        	lsi	f2, a12, 176
40083a67:	282322        	l32i	a2, a3, 160
40083a6a:	74d0d0        	extui	a13, a13, 0, 8
40083a6d:	0cbd      	mov.n	a11, a12
40083a6f:	6ba0a2        	movi	a10, 107
40083a72:	0002e0        	callx8	a2
40083a75:	f01d      	retw.n
40083a77:	09c000        	l32e	a0, a0, -16
40083a7a:	3ffc      	bnez.n	a15, 40083ab1 <phy_pwdet_onetime_en+0x35>

40083a7c <phy_pwdet_onetime_en>:
40083a7c:	004136        	entry	a1, 32
40083a7f:	5364e5        	call8	400d70cc <pwdet_sar2_init>
40083a82:	fef681        	l32r	a8, 4008365c <set_chan_dig_gain+0x1bc>
40083a85:	feaf92        	movi	a9, -2
40083a88:	0020c0        	memw
40083a8b:	0028b2        	l32i	a11, a8, 0
40083a8e:	01a0a2        	movi	a10, 1
40083a91:	109b90        	and	a9, a11, a9
40083a94:	0020c0        	memw
40083a97:	0899      	s32i.n	a9, a8, 0
40083a99:	0020c0        	memw
40083a9c:	0898      	l32i.n	a9, a8, 0
40083a9e:	2099a0        	or	a9, a9, a10
40083aa1:	0020c0        	memw
40083aa4:	0899      	s32i.n	a9, a8, 0
40083aa6:	fff481        	l32r	a8, 40083a78 <ram_set_txcap_reg+0x80>
40083aa9:	0048a2        	s8i	a10, a8, 0
40083aac:	f01d      	retw.n
40083aae:	c10000        	mul16u	a0, a0, a0
40083ab1:	fc09      	s32i.n	a0, a12, 60
40083ab3:	3f          	.byte 0x3f
40083ab4:	00e050        	lsi	f5, a0, 0
40083ab7:	140c60        	extui	a0, a6, 12, 2
40083aba:	3ffc      	bnez.n	a15, 40083af1 <tx_pwctrl_background+0x31>
40083abc:	fc1452        	l16ui	a5, a4, 0x1f8
40083abf:	3f          	.byte 0x3f

40083ac0 <tx_pwctrl_background>:
40083ac0:	006136        	entry	a1, 48
40083ac3:	fe36e5        	call8	40081e30 <phy_enter_critical>
40083ac6:	fce941        	l32r	a4, 40082e6c <set_tx_gain_table+0xc4>
40083ac9:	0a7d      	mov.n	a7, a10
40083acb:	000442        	l8ui	a4, a4, 0
40083ace:	742020        	extui	a2, a2, 0, 8
40083ad1:	743030        	extui	a3, a3, 0, 8
40083ad4:	d48c      	beqz.n	a4, 40083ae5 <tx_pwctrl_background+0x25>
40083ad6:	fff641        	l32r	a4, 40083ab0 <phy_pwdet_onetime_en+0x34>
40083ad9:	fff651        	l32r	a5, 40083ab4 <phy_pwdet_onetime_en+0x38>
40083adc:	ffe761        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083adf:	001f46        	j	40083b60 <tx_pwctrl_background+0xa0>
40083ae2:	000000        	ill
40083ae5:	fff241        	l32r	a4, 40083ab0 <phy_pwdet_onetime_en+0x34>
40083ae8:	000452        	l8ui	a5, a4, 0
40083aeb:	958c      	beqz.n	a5, 40083af8 <tx_pwctrl_background+0x38>
40083aed:	fff151        	l32r	a5, 40083ab4 <phy_pwdet_onetime_en+0x38>
40083af0:	ffe261        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083af3:	001a46        	j	40083b60 <tx_pwctrl_background+0xa0>
40083af6:	510000        	lsi	f0, a0, 0x144
40083af9:	ef          	.byte 0xef
40083afa:	ff          	.byte 0xff
40083afb:	0020c0        	memw
40083afe:	0568      	l32i.n	a6, a5, 0
40083b00:	0056d6        	bgez	a6, 40083b09 <tx_pwctrl_background+0x49>
40083b03:	ffdd61        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083b06:	000206        	j	40083b12 <tx_pwctrl_background+0x52>
40083b09:	ffdb61        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083b0c:	000682        	l8ui	a8, a6, 0
40083b0f:	071826        	beqi	a8, 1, 40083b1a <tx_pwctrl_background+0x5a>
40083b12:	0020c0        	memw
40083b15:	0588      	l32i.n	a8, a5, 0
40083b17:	3d6807        	bbci	a8, 0, 40083b58 <tx_pwctrl_background+0x98>
40083b1a:	0020c0        	memw
40083b1d:	002582        	l32i	a8, a5, 0
40083b20:	258880        	extui	a8, a8, 24, 3
40083b23:	18fc      	bnez.n	a8, 40083b58 <tx_pwctrl_background+0x98>
40083b25:	fccf81        	l32r	a8, 40082e64 <set_tx_gain_table+0xbc>
40083b28:	20a110        	or	a10, a1, a1
40083b2b:	0008b2        	l8ui	a11, a8, 0
40083b2e:	23bb00        	sext	a11, a11, 7
40083b31:	ff70e5        	call8	40083240 <get_phy_target_power>
40083b34:	ffe1c1        	l32r	a12, 40083ab8 <phy_pwdet_onetime_en+0x3c>
40083b37:	ffe1b1        	l32r	a11, 40083abc <phy_pwdet_onetime_en+0x40>
40083b3a:	03ed      	mov.n	a14, a3
40083b3c:	02dd      	mov.n	a13, a2
40083b3e:	20a110        	or	a10, a1, a1
40083b41:	ffb3a5        	call8	4008367c <tx_pwctrl_cal>
40083b44:	feca31        	l32r	a3, 4008366c <set_chan_dig_gain+0x1cc>
40083b47:	381c      	movi.n	a8, 19
40083b49:	000322        	l8ui	a2, a3, 0
40083b4c:	103827        	bltu	a8, a2, 40083b60 <tx_pwctrl_background+0xa0>
40083b4f:	221b      	addi.n	a2, a2, 1
40083b51:	004322        	s8i	a2, a3, 0
40083b54:	000206        	j	40083b60 <tx_pwctrl_background+0xa0>
40083b57:	c32100        	movf	a2, a1, b0
40083b5a:	fe          	.byte 0xfe
40083b5b:	030c      	movi.n	a3, 0
40083b5d:	005232        	s16i	a3, a2, 0
40083b60:	000682        	l8ui	a8, a6, 0
40083b63:	0020c0        	memw
40083b66:	0558      	l32i.n	a5, a5, 0
40083b68:	0a1866        	bnei	a8, 1, 40083b76 <tx_pwctrl_background+0xb6>
40083b6b:	055f50        	extui	a5, a5, 31, 1
40083b6e:	e5ec      	bnez.n	a5, 40083ba0 <tx_pwctrl_background+0xe0>
40083b70:	004652        	s8i	a5, a6, 0
40083b73:	000a46        	j	40083ba0 <tx_pwctrl_background+0xe0>
40083b76:	26e507        	bbsi	a5, 0, 40083ba0 <tx_pwctrl_background+0xe0>
40083b79:	535525        	call8	400d70cc <pwdet_sar2_init>
40083b7c:	feb851        	l32r	a5, 4008365c <set_chan_dig_gain+0x1bc>
40083b7f:	e27c      	movi.n	a2, -2
40083b81:	0020c0        	memw
40083b84:	0588      	l32i.n	a8, a5, 0
40083b86:	130c      	movi.n	a3, 1
40083b88:	102820        	and	a2, a8, a2
40083b8b:	0020c0        	memw
40083b8e:	0529      	s32i.n	a2, a5, 0
40083b90:	0020c0        	memw
40083b93:	0528      	l32i.n	a2, a5, 0
40083b95:	202230        	or	a2, a2, a3
40083b98:	0020c0        	memw
40083b9b:	0529      	s32i.n	a2, a5, 0
40083b9d:	004632        	s8i	a3, a6, 0
40083ba0:	000452        	l8ui	a5, a4, 0
40083ba3:	005516        	beqz	a5, 40083bac <tx_pwctrl_background+0xec>
40083ba6:	00a052        	movi	a5, 0
40083ba9:	004452        	s8i	a5, a4, 0
40083bac:	fedbe5        	call8	4008296c <wifi_track_pll_cap>
40083baf:	20a770        	or	a10, a7, a7
40083bb2:	fe2865        	call8	40081e38 <phy_exit_critical>
40083bb5:	000090        	retw

40083bb8 <esp_log_write>:
40083bb8:	00a136        	entry	a1, 80
40083bbb:	036152        	s32i	a5, a1, 12
40083bbe:	046162        	s32i	a6, a1, 16
40083bc1:	056172        	s32i	a7, a1, 20
40083bc4:	f03d      	nop.n
40083bc6:	f03d      	nop.n
40083bc8:	f03d      	nop.n
40083bca:	f03d      	nop.n
40083bcc:	f2ae51        	l32r	a5, 40080684 <_init_end+0x284>
40083bcf:	0558      	l32i.n	a5, a5, 0
40083bd1:	85cc      	bnez.n	a5, 40083bdd <esp_log_write+0x25>
40083bd3:	1a0c      	movi.n	a10, 1
40083bd5:	03d965        	call8	4008796c <xQueueCreateMutex>
40083bd8:	f2ab51        	l32r	a5, 40080684 <_init_end+0x284>
40083bdb:	05a9      	s32i.n	a10, a5, 0
40083bdd:	00a0d2        	movi	a13, 0
40083be0:	0aa0c2        	movi	a12, 10
40083be3:	20bdd0        	or	a11, a13, a13
40083be6:	f03d      	nop.n
40083be8:	f2a751        	l32r	a5, 40080684 <_init_end+0x284>
40083beb:	05a8      	l32i.n	a10, a5, 0
40083bed:	03f765        	call8	40087b64 <xQueueGenericReceive>
40083bf0:	11da16        	beqz	a10, 40083d11 <esp_log_write+0x159>
40083bf3:	0a0c      	movi.n	a10, 0
40083bf5:	000346        	j	40083c06 <esp_log_write+0x4e>
40083bf8:	a38100        	movltz	a8, a1, a0
40083bfb:	8a80f2        	lsi	f15, a0, 0x228
40083bfe:	0888b0        	lsx	f8, a8, a11
40083c01:	0b1387        	beq	a3, a8, 40083c10 <esp_log_write+0x58>
40083c04:	aa1b      	addi.n	a10, a10, 1
40083c06:	0a5d      	mov.n	a5, a10
40083c08:	f2a181        	l32r	a8, 4008068c <_init_end+0x28c>
40083c0b:	0898      	l32i.n	a9, a8, 0
40083c0d:	e83a97        	bltu	a10, a9, 40083bf9 <esp_log_write+0x41>
40083c10:	3e1597        	beq	a5, a9, 40083c52 <esp_log_write+0x9a>
40083c13:	f29d51        	l32r	a5, 40080688 <_init_end+0x288>
40083c16:	b05a50        	addx8	a5, a10, a5
40083c19:	012572        	l32i	a7, a5, 4
40083c1c:	247070        	extui	a7, a7, 0, 3
40083c1f:	1fa052        	movi	a5, 31
40083c22:	329957        	bne	a9, a5, 40083c58 <esp_log_write+0xa0>
40083c25:	f29a61        	l32r	a6, 40080690 <_init_end+0x290>
40083c28:	002652        	l32i	a5, a6, 0
40083c2b:	851b      	addi.n	a8, a5, 1
40083c2d:	0689      	s32i.n	a8, a6, 0
40083c2f:	f03d      	nop.n
40083c31:	f03d      	nop.n
40083c33:	f03d      	nop.n
40083c35:	f03d      	nop.n
40083c37:	f29461        	l32r	a6, 40080688 <_init_end+0x288>
40083c3a:	b06a60        	addx8	a6, a10, a6
40083c3d:	1155d0        	slli	a5, a5, 3
40083c40:	1688      	l32i.n	a8, a6, 4
40083c42:	248080        	extui	a8, a8, 0, 3
40083c45:	205850        	or	a5, a8, a5
40083c48:	1659      	s32i.n	a5, a6, 4
40083c4a:	5689e5        	call8	400da4e8 <heap_bubble_down>
40083c4d:	160c      	movi.n	a6, 1
40083c4f:	0001c6        	j	40083c5a <esp_log_write+0xa2>
40083c52:	060c      	movi.n	a6, 0
40083c54:	000086        	j	40083c5a <esp_log_write+0xa2>
40083c57:	160c00        	lsi	f0, a12, 88
40083c5a:	081656        	bnez	a6, 40083cdf <esp_log_write+0x127>
40083c5d:	f28d51        	l32r	a5, 40080694 <_init_end+0x294>
40083c60:	0558      	l32i.n	a5, a5, 0
40083c62:	000586        	j	40083c7c <esp_log_write+0xc4>
40083c65:	b55b00        	extui	a5, a0, 27, 12
40083c68:	03ad      	mov.n	a10, a3
40083c6a:	f28d81        	l32r	a8, 400806a0 <_init_end+0x2a0>
40083c6d:	0008e0        	callx8	a8
40083c70:	6acc      	bnez.n	a10, 40083c7a <esp_log_write+0xc2>
40083c72:	040572        	l8ui	a7, a5, 4
40083c75:	160c      	movi.n	a6, 1
40083c77:	000106        	j	40083c7f <esp_log_write+0xc7>
40083c7a:	0558      	l32i.n	a5, a5, 0
40083c7c:	fe6556        	bnez	a5, 40083c66 <esp_log_write+0xae>
40083c7f:	005656        	bnez	a6, 40083c88 <esp_log_write+0xd0>
40083c82:	f28551        	l32r	a5, 40080698 <_init_end+0x298>
40083c85:	002572        	l32i	a7, a5, 0
40083c88:	f28261        	l32r	a6, 40080690 <_init_end+0x290>
40083c8b:	0658      	l32i.n	a5, a6, 0
40083c8d:	851b      	addi.n	a8, a5, 1
40083c8f:	0689      	s32i.n	a8, a6, 0
40083c91:	f03d      	nop.n
40083c93:	f03d      	nop.n
40083c95:	f03d      	nop.n
40083c97:	f03d      	nop.n
40083c99:	f27c61        	l32r	a6, 4008068c <_init_end+0x28c>
40083c9c:	0668      	l32i.n	a6, a6, 0
40083c9e:	e81c      	movi.n	a8, 30
40083ca0:	243867        	bltu	a8, a6, 40083cc8 <esp_log_write+0x110>
40083ca3:	f27981        	l32r	a8, 40080688 <_init_end+0x288>
40083ca6:	b08680        	addx8	a8, a6, a8
40083ca9:	0839      	s32i.n	a3, a8, 0
40083cab:	1155d0        	slli	a5, a5, 3
40083cae:	243070        	extui	a3, a7, 0, 3
40083cb1:	203350        	or	a3, a3, a5
40083cb4:	1839      	s32i.n	a3, a8, 4
40083cb6:	661b      	addi.n	a6, a6, 1
40083cb8:	f03d      	nop.n
40083cba:	f03d      	nop.n
40083cbc:	f03d      	nop.n
40083cbe:	f27331        	l32r	a3, 4008068c <_init_end+0x28c>
40083cc1:	0369      	s32i.n	a6, a3, 0
40083cc3:	000606        	j	40083cdf <esp_log_write+0x127>
40083cc6:	610000        	xsr.lbeg	a0
40083cc9:	32f270        	orbc	b15, b2, b7
40083ccc:	d00066        	bnei	a0, -1, 40083ca0 <esp_log_write+0xe8>
40083ccf:	701155        	call4	400f3de4 <_text_end+0x7913>
40083cd2:	502430        	lsi	f3, a4, 0x140
40083cd5:	322033        	lsi	f3, a0, 200
40083cd8:	0c0166        	bnei	a1, -1, 40083ce8 <esp_log_write+0x130>
40083cdb:	a50a      	add.n	a10, a5, a0
40083cdd:	0c5680        	lsi	f8, a6, 48
40083ce0:	cd0d      	lsi	f0, a13, 52
40083ce2:	bd0d      	lsi	f0, a13, 52
40083ce4:	310d      	lsi	f0, a1, 4
40083ce6:	a8f267        	bbsi	a2, 22, 40083c92 <esp_log_write+0xda>
40083ce9:	afa503        	lsi	f0, a5, 0x2bc
40083cec:	372703        	lsi	f0, a7, 220
40083cef:	012d20        	slli	a2, a13, 30
40083cf2:	a129      	s32i.n	a2, a1, 40
40083cf4:	30c1b2        	addi	a11, a1, 48
40083cf7:	91b9      	s32i.n	a11, a1, 36
40083cf9:	cd0c      	movi.n	a13, 12
40083cfb:	b1d9      	s32i.n	a13, a1, 44
40083cfd:	f03d      	nop.n
40083cff:	f03d      	nop.n
40083d01:	f03d      	nop.n
40083d03:	f03d      	nop.n
40083d05:	f26521        	l32r	a2, 4008069c <_init_end+0x29c>
40083d08:	0228      	l32i.n	a2, a2, 0
40083d0a:	01cd      	mov.n	a12, a1
40083d0c:	04ad      	mov.n	a10, a4
40083d0e:	0002e0        	callx8	a2
40083d11:	f01d      	retw.n
	...

40083d14 <esp_log_early_timestamp>:
40083d14:	004136        	entry	a1, 32
40083d17:	092be5        	call8	4008cfd4 <xthal_get_ccount>
40083d1a:	f1e321        	l32r	a2, 400804a8 <_init_end+0xa8>
40083d1d:	0298      	l32i.n	a9, a2, 0
40083d1f:	1189b0        	slli	a8, a9, 5
40083d22:	c08890        	sub	a8, a8, a9
40083d25:	a08890        	addx4	a8, a8, a9
40083d28:	1128d0        	slli	a2, a8, 3
40083d2b:	c22a20        	quou	a2, a10, a2
40083d2e:	f01d      	retw.n

40083d30 <esp_log_timestamp>:
40083d30:	004136        	entry	a1, 32
40083d33:	04d265        	call8	40088a58 <xTaskGetSchedulerState>
40083d36:	071a66        	bnei	a10, 1, 40083d41 <esp_log_timestamp+0x11>
40083d39:	fffda5        	call8	40083d14 <esp_log_early_timestamp>
40083d3c:	0a2d      	mov.n	a2, a10
40083d3e:	f01d      	retw.n
40083d40:	582100        	ssxp	f2, a1, a0
40083d43:	0228f2        	l32i	a15, a8, 8
40083d46:	f2cc      	bnez.n	a2, 40083d59 <esp_log_timestamp+0x29>
40083d48:	03eb20        	rsr.prid	a2
40083d4b:	042d20        	extui	a2, a2, 13, 1
40083d4e:	007256        	bnez	a2, 40083d59 <esp_log_timestamp+0x29>
40083d51:	fffc25        	call8	40083d14 <esp_log_early_timestamp>
40083d54:	f25421        	l32r	a2, 400806a4 <_init_end+0x2a4>
40083d57:	02a9      	s32i.n	a10, a2, 0
40083d59:	048e25        	call8	4008863c <xTaskGetTickCount>
40083d5c:	f25221        	l32r	a2, 400806a4 <_init_end+0x2a4>
40083d5f:	002222        	l32i	a2, a2, 0
40083d62:	802a20        	add	a2, a10, a2
40083d65:	000090        	retw

40083d68 <xPortInterruptedFromISRContext>:
40083d68:	004136        	entry	a1, 32
40083d6b:	03eb80        	rsr.prid	a8
40083d6e:	048d80        	extui	a8, a8, 13, 1
40083d71:	f24d21        	l32r	a2, 400806a8 <_init_end+0x2a8>
40083d74:	a08820        	addx4	a8, a8, a2
40083d77:	0888      	l32i.n	a8, a8, 0
40083d79:	020c      	movi.n	a2, 0
40083d7b:	190c      	movi.n	a9, 1
40083d7d:	932980        	movnez	a2, a9, a8
40083d80:	f01d      	retw.n
	...

40083d84 <_xt_panic>:
40083d84:	010d      	mov.n	a0, a1
40083d86:	ffd112        	addmi	a1, a1, 0xffffff00
40083d89:	40c112        	addi	a1, a1, 64
40083d8c:	4109      	s32i.n	a0, a1, 16
40083d8e:	49d100        	s32e	a0, a1, -12
40083d91:	03e600        	rsr.ps	a0
40083d94:	2109      	s32i.n	a0, a1, 8
40083d96:	03b100        	rsr.epc1	a0
40083d99:	016102        	s32i	a0, a1, 4
40083d9c:	49c100        	s32e	a0, a1, -16
40083d9f:	0f61c2        	s32i	a12, a1, 60
40083da2:	1061d2        	s32i	a13, a1, 64
40083da5:	061905        	call0	40089f38 <_xt_context_save>
40083da8:	03e800        	rsr.exccause	a0
40083dab:	146102        	s32i	a0, a1, 80
40083dae:	03ee00        	rsr.excvaddr	a0
40083db1:	156102        	s32i	a0, a1, 84
40083db4:	03d100        	rsr.excsave1	a0
40083db7:	3109      	s32i.n	a0, a1, 12
40083db9:	f1e901        	l32r	a0, 40080560 <_init_end+0x160>
40083dbc:	13e600        	wsr.ps	a0
40083dbf:	016d      	mov.n	a6, a1
40083dc1:	075f95        	call4	4008b3bc <panicHandler>

40083dc4 <panic_print_hex>:
40083dc4:	f23a31        	l32r	a3, 400806ac <_init_end+0x2ac>
40083dc7:	840c      	movi.n	a4, 8

40083dc9 <panic_print_hex_loop>:
40083dc9:	7358      	l32i.n	a5, a3, 28
40083dcb:	755050        	extui	a5, a5, 16, 8
40083dce:	f7d5e6        	bgei	a5, 64, 40083dc9 <panic_print_hex_loop>
40083dd1:	355c20        	extui	a5, a2, 28, 4
40083dd4:	0595e6        	bgei	a5, 10, 40083ddd <panic_print_hex_a>
40083dd7:	30c552        	addi	a5, a5, 48
40083dda:	000086        	j	40083de0 <panic_print_hex_ok>

40083ddd <panic_print_hex_a>:
40083ddd:	37c552        	addi	a5, a5, 55

40083de0 <panic_print_hex_ok>:
40083de0:	0359      	s32i.n	a5, a3, 0
40083de2:	1122c0        	slli	a2, a2, 4
40083de5:	440b      	addi.n	a4, a4, -1
40083de7:	fde456        	bnez	a4, 40083dc9 <panic_print_hex_loop>
40083dea:	052c      	movi.n	a5, 32
40083dec:	0359      	s32i.n	a5, a3, 0
40083dee:	f00d      	ret.n

40083df0 <_xt_kernel_exc>:
40083df0:	004100        	break	1, 0
40083df3:	03a002        	movi	a0, 3
40083df6:	13e800        	wsr.exccause	a0
40083df9:	fff885        	call0	40083d84 <_xt_panic>
40083dfc:	003000        	rfe
	...

40083e00 <_xt_to_alloca_exc>:
40083e00:	fc24c5        	call0	40080050 <_xt_alloca_exc>
	...

40083e04 <_xt_to_syscall_exc>:
40083e04:	000b05        	call0	40083eb8 <_xt_syscall_exc>
	...

40083e08 <_xt_to_coproc_exc>:
40083e08:	000f45        	call0	40083f00 <_xt_coproc_exc>
	...

40083e0c <_xt_user_exc>:
40083e0c:	03e800        	rsr.exccause	a0
40083e0f:	024066        	bnei	a0, 4, 40083e15 <_xt_user_exc+0x9>
40083e12:	009986        	j	4008407c <_xt_lowint1>
40083e15:	efc0f6        	bgeui	a0, 32, 40083e08 <_xt_to_coproc_exc>
40083e18:	e45026        	beqi	a0, 5, 40083e00 <_xt_to_alloca_exc>
40083e1b:	e51026        	beqi	a0, 1, 40083e04 <_xt_to_syscall_exc>
40083e1e:	010d      	mov.n	a0, a1
40083e20:	ffd112        	addmi	a1, a1, 0xffffff00
40083e23:	40c112        	addi	a1, a1, 64
40083e26:	4109      	s32i.n	a0, a1, 16
40083e28:	49d100        	s32e	a0, a1, -12
40083e2b:	03e600        	rsr.ps	a0
40083e2e:	2109      	s32i.n	a0, a1, 8
40083e30:	03b100        	rsr.epc1	a0
40083e33:	1109      	s32i.n	a0, a1, 4
40083e35:	49c100        	s32e	a0, a1, -16
40083e38:	f1c9      	s32i.n	a12, a1, 60
40083e3a:	1061d2        	s32i	a13, a1, 64
40083e3d:	060f85        	call0	40089f38 <_xt_context_save>
40083e40:	03e800        	rsr.exccause	a0
40083e43:	146102        	s32i	a0, a1, 80
40083e46:	03ee00        	rsr.excvaddr	a0
40083e49:	156102        	s32i	a0, a1, 84
40083e4c:	03d100        	rsr.excsave1	a0
40083e4f:	3109      	s32i.n	a0, a1, 12
40083e51:	f21701        	l32r	a0, 400806b0 <_init_end+0x2b0>
40083e54:	13e600        	wsr.ps	a0
40083e57:	3138      	l32i.n	a3, a1, 12
40083e59:	49c130        	s32e	a3, a1, -16
40083e5c:	4138      	l32i.n	a3, a1, 16
40083e5e:	49d130        	s32e	a3, a1, -12
40083e61:	03b100        	rsr.epc1	a0
40083e64:	f21451        	l32r	a5, 400806b4 <_init_end+0x2b4>
40083e67:	002010        	rsync
40083e6a:	200050        	or	a0, a0, a5
40083e6d:	900500        	addx2	a0, a5, a0
40083e70:	03e820        	rsr.exccause	a2
40083e73:	03e820        	rsr.exccause	a2
40083e76:	f21031        	l32r	a3, 400806b8 <_init_end+0x2b8>
40083e79:	03eb40        	rsr.prid	a4
40083e7c:	044d40        	extui	a4, a4, 13, 1
40083e7f:	902240        	addx2	a2, a2, a4
40083e82:	a04230        	addx4	a4, a2, a3
40083e85:	0448      	l32i.n	a4, a4, 0
40083e87:	206110        	or	a6, a1, a1
40083e8a:	0004d0        	callx4	a4
40083e8d:	061105        	call0	40089fa0 <_xt_context_restore>
40083e90:	2108      	l32i.n	a0, a1, 8
40083e92:	13e600        	wsr.ps	a0
40083e95:	1108      	l32i.n	a0, a1, 4
40083e97:	13b100        	wsr.epc1	a0
40083e9a:	3108      	l32i.n	a0, a1, 12
40083e9c:	4118      	l32i.n	a1, a1, 16
40083e9e:	002010        	rsync
40083ea1:	003000        	rfe

40083ea4 <_xt_user_exit>:
40083ea4:	2108      	l32i.n	a0, a1, 8
40083ea6:	13e600        	wsr.ps	a0
40083ea9:	1108      	l32i.n	a0, a1, 4
40083eab:	13b100        	wsr.epc1	a0
40083eae:	3108      	l32i.n	a0, a1, 12
40083eb0:	4118      	l32i.n	a1, a1, 16
40083eb2:	002010        	rsync
40083eb5:	003000        	rfe

40083eb8 <_xt_syscall_exc>:
40083eb8:	ffd112        	addmi	a1, a1, 0xffffff00
40083ebb:	40c112        	addi	a1, a1, 64
40083ebe:	f1c9      	s32i.n	a12, a1, 60
40083ec0:	1061d2        	s32i	a13, a1, 64
40083ec3:	060745        	call0	40089f38 <_xt_context_save>
40083ec6:	03b120        	rsr.epc1	a2
40083ec9:	323b      	addi.n	a3, a2, 3
40083ecb:	030100        	rsr.lend	a0
40083ece:	0e9307        	bne	a3, a0, 40083ee0 <_xt_syscall_exc+0x28>
40083ed1:	030200        	rsr.lcount	a0
40083ed4:	008016        	beqz	a0, 40083ee0 <_xt_syscall_exc+0x28>
40083ed7:	ffc002        	addi	a0, a0, -1
40083eda:	030030        	rsr.lbeg	a3
40083edd:	130200        	wsr.lcount	a0
40083ee0:	13b130        	wsr.epc1	a3
40083ee3:	060bc5        	call0	40089fa0 <_xt_context_restore>
40083ee6:	01d112        	addmi	a1, a1, 0x100
40083ee9:	c0c112        	addi	a1, a1, -64
40083eec:	f07c      	movi.n	a0, -1
40083eee:	932020        	movnez	a2, a0, a2
40083ef1:	03d100        	rsr.excsave1	a0
40083ef4:	003000        	rfe
40083ef7:	5d8600        	lsi	f0, a6, 0x174
40083efa:	860000        	lsi	f0, a0, 0x218
40083efd:	4f          	.byte 0x4f
	...

40083f00 <_xt_coproc_exc>:
40083f00:	010d      	mov.n	a0, a1
40083f02:	ffd112        	addmi	a1, a1, 0xffffff00
40083f05:	40c112        	addi	a1, a1, 64
40083f08:	4109      	s32i.n	a0, a1, 16
40083f0a:	49d100        	s32e	a0, a1, -12
40083f0d:	03e600        	rsr.ps	a0
40083f10:	2109      	s32i.n	a0, a1, 8
40083f12:	03b100        	rsr.epc1	a0
40083f15:	1109      	s32i.n	a0, a1, 4
40083f17:	03d100        	rsr.excsave1	a0
40083f1a:	3109      	s32i.n	a0, a1, 12
40083f1c:	49c100        	s32e	a0, a1, -16
40083f1f:	f1e701        	l32r	a0, 400806bc <_init_end+0x2bc>
40083f22:	0109      	s32i.n	a0, a1, 0
40083f24:	03e800        	rsr.exccause	a0
40083f27:	8159      	s32i.n	a5, a1, 32
40083f29:	e0c052        	addi	a5, a0, -32
40083f2c:	5129      	s32i.n	a2, a1, 20
40083f2e:	6139      	s32i.n	a3, a1, 24
40083f30:	7149      	s32i.n	a4, a1, 28
40083f32:	1261f2        	s32i	a15, a1, 72
40083f35:	062d05        	call0	4008a208 <_frxt_task_coproc_state>
40083f38:	fbcf16        	beqz	a15, 40083ef8 <_xt_syscall_exc+0x40>
40083f3b:	f1e101        	l32r	a0, 400806c0 <_init_end+0x2c0>
40083f3e:	03e040        	rsr.cpenable	a4
40083f41:	a00500        	addx4	a0, a5, a0
40083f44:	0008      	l32i.n	a0, a0, 0
40083f46:	f1df21        	l32r	a2, 400806c4 <_init_end+0x2c4>
40083f49:	03eb30        	rsr.prid	a3
40083f4c:	043d30        	extui	a3, a3, 13, 1
40083f4f:	a02320        	addx4	a2, a3, a2
40083f52:	0228      	l32i.n	a2, a2, 0
40083f54:	48c222        	addi	a2, a2, 72
40083f57:	0239      	s32i.n	a3, a2, 0
40083f59:	420c      	movi.n	a2, 4
40083f5b:	822230        	mull	a2, a2, a3
40083f5e:	f1da31        	l32r	a3, 400806c8 <_init_end+0x2c8>
40083f61:	332a      	add.n	a3, a3, a2
40083f63:	f42000        	extui	a2, a0, 0, 16
40083f66:	204420        	or	a4, a4, a2
40083f69:	13e040        	wsr.cpenable	a4
40083f6c:	a03530        	addx4	a3, a5, a3
40083f6f:	0328      	l32i.n	a2, a3, 0
40083f71:	03f9      	s32i.n	a15, a3, 0
40083f73:	002010        	rsync
40083f76:	821f27        	beq	a15, a2, 40083efc <_xt_syscall_exc+0x44>
40083f79:	067216        	beqz	a2, 40083fe4 <_xt_coproc_exc+0xe4>
40083f7c:	001242        	l16ui	a4, a2, 0
40083f7f:	610407        	bnone	a4, a0, 40083fe4 <_xt_coproc_exc+0xe4>
40083f82:	f1d251        	l32r	a5, 400806cc <_init_end+0x2cc>
40083f85:	304400        	xor	a4, a4, a0
40083f88:	005242        	s16i	a4, a2, 0
40083f8b:	454000        	extui	a4, a0, 16, 5
40083f8e:	a05450        	addx4	a5, a4, a5
40083f91:	011242        	l16ui	a4, a2, 2
40083f94:	0558      	l32i.n	a5, a5, 0
40083f96:	204400        	or	a4, a4, a0
40083f99:	015242        	s16i	a4, a2, 2
40083f9c:	2228      	l32i.n	a2, a2, 8
40083f9e:	453000        	extui	a3, a0, 16, 5
40083fa1:	225a      	add.n	a2, a2, a5
40083fa3:	d3fc      	bnez.n	a3, 40083fe4 <_xt_coproc_exc+0xe4>
40083fa5:	e33e80        	rur.fcr	a3
40083fa8:	0239      	s32i.n	a3, a2, 0
40083faa:	e33e90        	rur.fsr	a3
40083fad:	1239      	s32i.n	a3, a2, 4
40083faf:	024203        	ssi	f0, a2, 8
40083fb2:	034213        	ssi	f1, a2, 12
40083fb5:	044223        	ssi	f2, a2, 16
40083fb8:	054233        	ssi	f3, a2, 20
40083fbb:	064243        	ssi	f4, a2, 24
40083fbe:	074253        	ssi	f5, a2, 28
40083fc1:	084263        	ssi	f6, a2, 32
40083fc4:	094273        	ssi	f7, a2, 36
40083fc7:	0a4283        	ssi	f8, a2, 40
40083fca:	0b4293        	ssi	f9, a2, 44
40083fcd:	0c42a3        	ssi	f10, a2, 48
40083fd0:	0d42b3        	ssi	f11, a2, 52
40083fd3:	0e42c3        	ssi	f12, a2, 56
40083fd6:	0f42d3        	ssi	f13, a2, 60
40083fd9:	1042e3        	ssi	f14, a2, 64
40083fdc:	1142f3        	ssi	f15, a2, 68
40083fdf:	000046        	j	40083fe4 <_xt_coproc_exc+0xe4>
40083fe2:	320000        	orbc	b0, b0, b0
40083fe5:	1f          	.byte 0x1f
40083fe6:	b94101        	l32r	a0, 400724ec <__udivmoddi4+0xd8f8>
40083fe9:	0307f1        	l32r	a15, 40044c08 <llcp_pdu_handler_tab_p_get+0xca4>
40083fec:	5e          	.byte 0x5e
40083fed:	303300        	xor	a3, a3, a0
40083ff0:	015f32        	s16i	a3, a15, 2
40083ff3:	453000        	extui	a3, a0, 16, 5
40083ff6:	a04340        	addx4	a4, a3, a4
40083ff9:	0448      	l32i.n	a4, a4, 0
40083ffb:	2f58      	l32i.n	a5, a15, 8
40083ffd:	245a      	add.n	a2, a4, a5
40083fff:	b3fc      	bnez.n	a3, 4008403e <_xt_coproc_exc+0x13e>
40084001:	0238      	l32i.n	a3, a2, 0
40084003:	f3e830        	wur.fcr	a3
40084006:	1238      	l32i.n	a3, a2, 4
40084008:	f3e930        	wur.fsr	a3
4008400b:	020203        	lsi	f0, a2, 8
4008400e:	030213        	lsi	f1, a2, 12
40084011:	040223        	lsi	f2, a2, 16
40084014:	050233        	lsi	f3, a2, 20
40084017:	060243        	lsi	f4, a2, 24
4008401a:	070253        	lsi	f5, a2, 28
4008401d:	080263        	lsi	f6, a2, 32
40084020:	090273        	lsi	f7, a2, 36
40084023:	0a0283        	lsi	f8, a2, 40
40084026:	0b0293        	lsi	f9, a2, 44
40084029:	0c02a3        	lsi	f10, a2, 48
4008402c:	0d02b3        	lsi	f11, a2, 52
4008402f:	0e02c3        	lsi	f12, a2, 56
40084032:	0f02d3        	lsi	f13, a2, 60
40084035:	1002e3        	lsi	f14, a2, 64
40084038:	1102f3        	lsi	f15, a2, 68
4008403b:	ffffc6        	j	4008403e <_xt_coproc_exc+0x13e>
4008403e:	1221f2        	l32i	a15, a1, 72
40084041:	8158      	l32i.n	a5, a1, 32
40084043:	7148      	l32i.n	a4, a1, 28
40084045:	6138      	l32i.n	a3, a1, 24
40084047:	5128      	l32i.n	a2, a1, 20
40084049:	ffe585        	call0	40083ea4 <_xt_user_exit>
4008404c:	021f22        	l16ui	a2, a15, 4
4008404f:	eb0207        	bnone	a2, a0, 4008403e <_xt_coproc_exc+0x13e>
40084052:	102200        	and	a2, a2, a0
40084055:	742020        	extui	a2, a2, 0, 8
40084058:	9169      	s32i.n	a6, a1, 36
4008405a:	a179      	s32i.n	a7, a1, 40
4008405c:	1061d2        	s32i	a13, a1, 64
4008405f:	1161e2        	s32i	a14, a1, 68
40084062:	05fe05        	call0	4008a044 <_xt_coproc_restorecs>
40084065:	9168      	l32i.n	a6, a1, 36
40084067:	a178      	l32i.n	a7, a1, 40
40084069:	1021d2        	l32i	a13, a1, 64
4008406c:	1121e2        	l32i	a14, a1, 68
4008406f:	fff2c6        	j	4008403e <_xt_coproc_exc+0x13e>
40084072:	400c      	movi.n	a0, 4
40084074:	13e800        	wsr.exccause	a0
40084077:	ffd0c5        	call0	40083d84 <_xt_panic>
	...

4008407c <_xt_lowint1>:
4008407c:	010d      	mov.n	a0, a1
4008407e:	ffd112        	addmi	a1, a1, 0xffffff00
40084081:	40c112        	addi	a1, a1, 64
40084084:	4109      	s32i.n	a0, a1, 16
40084086:	03e600        	rsr.ps	a0
40084089:	2109      	s32i.n	a0, a1, 8
4008408b:	03b100        	rsr.epc1	a0
4008408e:	1109      	s32i.n	a0, a1, 4
40084090:	03d100        	rsr.excsave1	a0
40084093:	3109      	s32i.n	a0, a1, 12
40084095:	f18901        	l32r	a0, 400806bc <_init_end+0x2bc>
40084098:	006102        	s32i	a0, a1, 0
4008409b:	200110        	or	a0, a1, a1
4008409e:	13d100        	wsr.excsave1	a0
400840a1:	05fd85        	call0	4008a07c <_frxt_int_enter>
400840a4:	f18b01        	l32r	a0, 400806d0 <_init_end+0x2d0>
400840a7:	13e600        	wsr.ps	a0
400840aa:	002010        	rsync
400840ad:	03e420        	rsr.intenable	a2
400840b0:	03e230        	rsr.interrupt	a3
400840b3:	f18841        	l32r	a4, 400806d4 <_init_end+0x2d4>
400840b6:	102230        	and	a2, a2, a3
400840b9:	102240        	and	a2, a2, a4
400840bc:	059216        	beqz	a2, 40084119 <_xt_lowint1+0x9d>
400840bf:	03d100        	rsr.excsave1	a0
400840c2:	032032        	l32i	a3, a0, 12
400840c5:	49c130        	s32e	a3, a1, -16
400840c8:	042032        	l32i	a3, a0, 16
400840cb:	49d130        	s32e	a3, a1, -12
400840ce:	03b100        	rsr.epc1	a0
400840d1:	f17841        	l32r	a4, 400806b4 <_init_end+0x2b4>
400840d4:	200040        	or	a0, a0, a4
400840d7:	900400        	addx2	a0, a4, a0
400840da:	420b      	addi.n	a4, a2, -1
400840dc:	102240        	and	a2, a2, a4
400840df:	ff7256        	bnez	a2, 400840da <_xt_lowint1+0x5e>
400840e2:	441b      	addi.n	a4, a4, 1
400840e4:	034c      	movi.n	a3, 64
400840e6:	13e340        	wsr.intclear	a4
400840e9:	231347        	beq	a3, a4, 40084110 <_xt_lowint1+0x94>
400840ec:	f31c      	movi.n	a3, 31
400840ee:	40f440        	nsau	a4, a4
400840f1:	c03340        	sub	a3, a3, a4
400840f4:	03ebc0        	rsr.prid	a12
400840f7:	04cdc0        	extui	a12, a12, 13, 1
400840fa:	9033c0        	addx2	a3, a3, a12
400840fd:	f17641        	l32r	a4, 400806d8 <_init_end+0x2d8>
40084100:	b03340        	addx8	a3, a3, a4
40084103:	0348      	l32i.n	a4, a3, 0
40084105:	062d      	mov.n	a2, a6
40084107:	1368      	l32i.n	a6, a3, 4
40084109:	0004d0        	callx4	a4
4008410c:	ffe746        	j	400840ad <_xt_lowint1+0x31>
4008410f:	062d00        	lsi	f0, a13, 24
40084112:	060015        	call4	4008a114 <_frxt_timer_int>
40084115:	ffe506        	j	400840ad <_xt_lowint1+0x31>
40084118:	fa8500        	mov.s	f8, f5
4008411b:	05          	.byte 0x5

4008411c <_xt_medint2>:
4008411c:	010d      	mov.n	a0, a1
4008411e:	ffd112        	addmi	a1, a1, 0xffffff00
40084121:	40c112        	addi	a1, a1, 64
40084124:	4109      	s32i.n	a0, a1, 16
40084126:	03c200        	rsr.eps2	a0
40084129:	2109      	s32i.n	a0, a1, 8
4008412b:	03b200        	rsr.epc2	a0
4008412e:	1109      	s32i.n	a0, a1, 4
40084130:	03d200        	rsr.excsave2	a0
40084133:	3109      	s32i.n	a0, a1, 12
40084135:	f16901        	l32r	a0, 400806dc <_init_end+0x2dc>
40084138:	006102        	s32i	a0, a1, 0
4008413b:	200110        	or	a0, a1, a1
4008413e:	13d200        	wsr.excsave2	a0
40084141:	05f385        	call0	4008a07c <_frxt_int_enter>
40084144:	f16701        	l32r	a0, 400806e0 <_init_end+0x2e0>
40084147:	13e600        	wsr.ps	a0
4008414a:	002010        	rsync
4008414d:	03e420        	rsr.intenable	a2
40084150:	03e230        	rsr.interrupt	a3
40084153:	f16441        	l32r	a4, 400806e4 <_init_end+0x2e4>
40084156:	102230        	and	a2, a2, a3
40084159:	102240        	and	a2, a2, a4
4008415c:	055216        	beqz	a2, 400841b5 <_xt_medint2+0x99>
4008415f:	03d200        	rsr.excsave2	a0
40084162:	032032        	l32i	a3, a0, 12
40084165:	49c130        	s32e	a3, a1, -16
40084168:	042032        	l32i	a3, a0, 16
4008416b:	49d130        	s32e	a3, a1, -12
4008416e:	03b200        	rsr.epc2	a0
40084171:	f15041        	l32r	a4, 400806b4 <_init_end+0x2b4>
40084174:	200040        	or	a0, a0, a4
40084177:	900400        	addx2	a0, a4, a0
4008417a:	420b      	addi.n	a4, a2, -1
4008417c:	102240        	and	a2, a2, a4
4008417f:	ff7256        	bnez	a2, 4008417a <_xt_medint2+0x5e>
40084182:	441b      	addi.n	a4, a4, 1
40084184:	034c      	movi.n	a3, 64
40084186:	13e340        	wsr.intclear	a4
40084189:	231347        	beq	a3, a4, 400841b0 <_xt_medint2+0x94>
4008418c:	f31c      	movi.n	a3, 31
4008418e:	40f440        	nsau	a4, a4
40084191:	c03340        	sub	a3, a3, a4
40084194:	03ebc0        	rsr.prid	a12
40084197:	04cdc0        	extui	a12, a12, 13, 1
4008419a:	9033c0        	addx2	a3, a3, a12
4008419d:	f14e41        	l32r	a4, 400806d8 <_init_end+0x2d8>
400841a0:	b03340        	addx8	a3, a3, a4
400841a3:	0348      	l32i.n	a4, a3, 0
400841a5:	062d      	mov.n	a2, a6
400841a7:	1368      	l32i.n	a6, a3, 4
400841a9:	0004d0        	callx4	a4
400841ac:	ffe746        	j	4008414d <_xt_medint2+0x31>
400841af:	e64600        	lsi	f0, a6, 0x398
400841b2:	ff          	.byte 0xff
400841b3:	c50000        	extui	a0, a0, 16, 13
400841b6:	f0          	.byte 0xf0
400841b7:	05          	.byte 0x5

400841b8 <_xt_medint2_exit>:
400841b8:	2108      	l32i.n	a0, a1, 8
400841ba:	13c200        	wsr.eps2	a0
400841bd:	1108      	l32i.n	a0, a1, 4
400841bf:	13b200        	wsr.epc2	a0
400841c2:	3108      	l32i.n	a0, a1, 12
400841c4:	4118      	l32i.n	a1, a1, 16
400841c6:	002010        	rsync
400841c9:	003210        	rfi	2

400841cc <_xt_medint3>:
400841cc:	010d      	mov.n	a0, a1
400841ce:	ffd112        	addmi	a1, a1, 0xffffff00
400841d1:	40c112        	addi	a1, a1, 64
400841d4:	4109      	s32i.n	a0, a1, 16
400841d6:	03c300        	rsr.eps3	a0
400841d9:	2109      	s32i.n	a0, a1, 8
400841db:	03b300        	rsr.epc3	a0
400841de:	1109      	s32i.n	a0, a1, 4
400841e0:	03d300        	rsr.excsave3	a0
400841e3:	3109      	s32i.n	a0, a1, 12
400841e5:	f14001        	l32r	a0, 400806e8 <_init_end+0x2e8>
400841e8:	006102        	s32i	a0, a1, 0
400841eb:	200110        	or	a0, a1, a1
400841ee:	13d300        	wsr.excsave3	a0
400841f1:	05e885        	call0	4008a07c <_frxt_int_enter>
400841f4:	f12f01        	l32r	a0, 400806b0 <_init_end+0x2b0>
400841f7:	13e600        	wsr.ps	a0
400841fa:	002010        	rsync
400841fd:	03e420        	rsr.intenable	a2
40084200:	03e230        	rsr.interrupt	a3
40084203:	f13a41        	l32r	a4, 400806ec <_init_end+0x2ec>
40084206:	102230        	and	a2, a2, a3
40084209:	102240        	and	a2, a2, a4
4008420c:	055216        	beqz	a2, 40084265 <_xt_medint3+0x99>
4008420f:	03d300        	rsr.excsave3	a0
40084212:	032032        	l32i	a3, a0, 12
40084215:	49c130        	s32e	a3, a1, -16
40084218:	042032        	l32i	a3, a0, 16
4008421b:	49d130        	s32e	a3, a1, -12
4008421e:	03b300        	rsr.epc3	a0
40084221:	f12441        	l32r	a4, 400806b4 <_init_end+0x2b4>
40084224:	200040        	or	a0, a0, a4
40084227:	900400        	addx2	a0, a4, a0
4008422a:	420b      	addi.n	a4, a2, -1
4008422c:	102240        	and	a2, a2, a4
4008422f:	ff7256        	bnez	a2, 4008422a <_xt_medint3+0x5e>
40084232:	441b      	addi.n	a4, a4, 1
40084234:	034c      	movi.n	a3, 64
40084236:	13e340        	wsr.intclear	a4
40084239:	231347        	beq	a3, a4, 40084260 <_xt_medint3+0x94>
4008423c:	f31c      	movi.n	a3, 31
4008423e:	40f440        	nsau	a4, a4
40084241:	c03340        	sub	a3, a3, a4
40084244:	03ebc0        	rsr.prid	a12
40084247:	04cdc0        	extui	a12, a12, 13, 1
4008424a:	9033c0        	addx2	a3, a3, a12
4008424d:	f12241        	l32r	a4, 400806d8 <_init_end+0x2d8>
40084250:	b03340        	addx8	a3, a3, a4
40084253:	0348      	l32i.n	a4, a3, 0
40084255:	062d      	mov.n	a2, a6
40084257:	1368      	l32i.n	a6, a3, 4
40084259:	0004d0        	callx4	a4
4008425c:	ffe746        	j	400841fd <_xt_medint3+0x31>
4008425f:	e64600        	lsi	f0, a6, 0x398
40084262:	ff          	.byte 0xff
40084263:	c50000        	extui	a0, a0, 16, 13
40084266:	e5          	.byte 0xe5
40084267:	05          	.byte 0x5

40084268 <_xt_medint3_exit>:
40084268:	2108      	l32i.n	a0, a1, 8
4008426a:	13c300        	wsr.eps3	a0
4008426d:	1108      	l32i.n	a0, a1, 4
4008426f:	13b300        	wsr.epc3	a0
40084272:	3108      	l32i.n	a0, a1, 12
40084274:	4118      	l32i.n	a1, a1, 16
40084276:	002010        	rsync
40084279:	003310        	rfi	3

4008427c <find_containing_heap>:
4008427c:	004136        	entry	a1, 32
4008427f:	f11c81        	l32r	a8, 400806f0 <_init_end+0x2f0>
40084282:	0888      	l32i.n	a8, a8, 0
40084284:	000406        	j	40084298 <find_containing_heap+0x1c>
40084287:	789800        	lsi	f0, a8, 0x1e0
4008428a:	898c      	beqz.n	a9, 40084296 <find_containing_heap+0x1a>
4008428c:	3898      	l32i.n	a9, a8, 12
4008428e:	042297        	blt	a2, a9, 40084296 <find_containing_heap+0x1a>
40084291:	4898      	l32i.n	a9, a8, 16
40084293:	092297        	blt	a2, a9, 400842a0 <find_containing_heap+0x24>
40084296:	8888      	l32i.n	a8, a8, 32
40084298:	fec856        	bnez	a8, 40084288 <find_containing_heap+0xc>
4008429b:	020c      	movi.n	a2, 0
4008429d:	f01d      	retw.n
4008429f:	082d00        	lsx	f2, a13, a0
400842a2:	f01d      	retw.n

400842a4 <dram_alloc_to_iram_addr>:
400842a4:	004136        	entry	a1, 32
400842a7:	803230        	add	a3, a2, a3
400842aa:	fcc3a2        	addi	a10, a3, -4
400842ad:	f11191        	l32r	a9, 400806f4 <_init_end+0x2f4>
400842b0:	809290        	add	a9, a2, a9
400842b3:	f11181        	l32r	a8, 400806f8 <_init_end+0x2f8>
400842b6:	0db897        	bgeu	a8, a9, 400842c7 <dram_alloc_to_iram_addr+0x23>
400842b9:	f110d1        	l32r	a13, 400806fc <_init_end+0x2fc>
400842bc:	f111c1        	l32r	a12, 40080700 <_init_end+0x300>
400842bf:	bb2c      	movi.n	a11, 43
400842c1:	f110a1        	l32r	a10, 40080704 <_init_end+0x304>
400842c4:	568065        	call8	400daacc <__assert_func>
400842c7:	f11091        	l32r	a9, 40080708 <_init_end+0x308>
400842ca:	339a      	add.n	a3, a3, a9
400842cc:	f10b81        	l32r	a8, 400806f8 <_init_end+0x2f8>
400842cf:	0db837        	bgeu	a8, a3, 400842e0 <dram_alloc_to_iram_addr+0x3c>
400842d2:	f10ed1        	l32r	a13, 4008070c <_init_end+0x30c>
400842d5:	f10ac1        	l32r	a12, 40080700 <_init_end+0x300>
400842d8:	cb2c      	movi.n	a11, 44
400842da:	f10aa1        	l32r	a10, 40080704 <_init_end+0x304>
400842dd:	567ee5        	call8	400daacc <__assert_func>
400842e0:	143020        	extui	a3, a2, 0, 2
400842e3:	00d316        	beqz	a3, 400842f4 <dram_alloc_to_iram_addr+0x50>
400842e6:	f10ad1        	l32r	a13, 40080710 <_init_end+0x310>
400842e9:	f105c1        	l32r	a12, 40080700 <_init_end+0x300>
400842ec:	db2c      	movi.n	a11, 45
400842ee:	f105a1        	l32r	a10, 40080704 <_init_end+0x304>
400842f1:	567da5        	call8	400daacc <__assert_func>
400842f4:	1430a0        	extui	a3, a10, 0, 2
400842f7:	00d316        	beqz	a3, 40084308 <dram_alloc_to_iram_addr+0x64>
400842fa:	f106d1        	l32r	a13, 40080714 <_init_end+0x314>
400842fd:	f100c1        	l32r	a12, 40080700 <_init_end+0x300>
40084300:	eb2c      	movi.n	a11, 46
40084302:	f100a1        	l32r	a10, 40080704 <_init_end+0x304>
40084305:	567c65        	call8	400daacc <__assert_func>
40084308:	f10481        	l32r	a8, 40080718 <_init_end+0x318>
4008430b:	c088a0        	sub	a8, a8, a10
4008430e:	0829      	s32i.n	a2, a8, 0
40084310:	284b      	addi.n	a2, a8, 4
40084312:	f01d      	retw.n

40084314 <heap_caps_malloc>:
40084314:	004136        	entry	a1, 32
40084317:	f10141        	l32r	a4, 4008071c <_init_end+0x31c>
4008431a:	02b427        	bgeu	a4, a2, 40084320 <heap_caps_malloc+0xc>
4008431d:	002546        	j	400843b6 <heap_caps_malloc+0xa2>
40084320:	0c6307        	bbci	a3, 0, 40084330 <heap_caps_malloc+0x1c>
40084323:	c40c      	movi.n	a4, 12
40084325:	020347        	bnone	a3, a4, 4008432b <heap_caps_malloc+0x17>
40084328:	002386        	j	400843ba <heap_caps_malloc+0xa6>
4008432b:	240c      	movi.n	a4, 2
4008432d:	203340        	or	a3, a3, a4
40084330:	066317        	bbci	a3, 1, 4008433a <heap_caps_malloc+0x26>
40084333:	223b      	addi.n	a2, a2, 3
40084335:	c47c      	movi.n	a4, -4
40084337:	102240        	and	a2, a2, a4
4008433a:	050c      	movi.n	a5, 0
4008433c:	001b06        	j	400843ac <heap_caps_malloc+0x98>
4008433f:	ec4100        	lsi	f0, a1, 0x3b0
40084342:	0448f0        	extui	a4, a15, 8, 1
40084345:	001786        	j	400843a7 <heap_caps_malloc+0x93>
40084348:	74a8      	l32i.n	a10, a4, 28
4008434a:	057a16        	beqz	a10, 400843a5 <heap_caps_malloc+0x91>
4008434d:	a08540        	addx4	a8, a5, a4
40084350:	0888      	l32i.n	a8, a8, 0
40084352:	4f0387        	bnone	a3, a8, 400843a5 <heap_caps_malloc+0x91>
40084355:	7a9c      	beqz.n	a10, 40084370 <heap_caps_malloc+0x5c>
40084357:	080c      	movi.n	a8, 0
40084359:	089d      	mov.n	a9, a8
4008435b:	0002c6        	j	4008436a <heap_caps_malloc+0x56>
4008435e:	400000        	ssr	a0
40084361:	a0b8      	l32i.n	a11, a0, 40
40084363:	0bb8      	l32i.n	a11, a11, 0
40084365:	2099b0        	or	a9, a9, a11
40084368:	881b      	addi.n	a8, a8, 1
4008436a:	f238a6        	blti	a8, 3, 40084360 <heap_caps_malloc+0x4c>
4008436d:	000086        	j	40084373 <heap_caps_malloc+0x5f>
40084370:	00a092        	movi	a9, 0
40084373:	109390        	and	a9, a3, a9
40084376:	2b9397        	bne	a3, a9, 400843a5 <heap_caps_malloc+0x91>
40084379:	216307        	bbci	a3, 0, 4008439e <heap_caps_malloc+0x8a>
4008437c:	032492        	l32i	a9, a4, 12
4008437f:	f0dd81        	l32r	a8, 400806f4 <_init_end+0x2f4>
40084382:	808980        	add	a8, a9, a8
40084385:	f0dc91        	l32r	a9, 400806f8 <_init_end+0x2f8>
40084388:	123987        	bltu	a9, a8, 4008439e <heap_caps_malloc+0x8a>
4008438b:	624b      	addi.n	a6, a2, 4
4008438d:	06bd      	mov.n	a11, a6
4008438f:	06a225        	call8	4008adb0 <multi_heap_malloc>
40084392:	fa8c      	beqz.n	a10, 400843a5 <heap_caps_malloc+0x91>
40084394:	06bd      	mov.n	a11, a6
40084396:	fff0e5        	call8	400842a4 <dram_alloc_to_iram_addr>
40084399:	0a2d      	mov.n	a2, a10
4008439b:	f01d      	retw.n
4008439d:	02bd00        	andb	b11, b13, b0
400843a0:	06a0e5        	call8	4008adb0 <multi_heap_malloc>
400843a3:	7adc      	bnez.n	a10, 400843be <heap_caps_malloc+0xaa>
400843a5:	8448      	l32i.n	a4, a4, 32
400843a7:	f9d456        	bnez	a4, 40084348 <heap_caps_malloc+0x34>
400843aa:	551b      	addi.n	a5, a5, 1
400843ac:	9035a6        	blti	a5, 3, 40084340 <heap_caps_malloc+0x2c>
400843af:	020c      	movi.n	a2, 0
400843b1:	f01d      	retw.n
400843b3:	000000        	ill
400843b6:	020c      	movi.n	a2, 0
400843b8:	f01d      	retw.n
400843ba:	020c      	movi.n	a2, 0
400843bc:	f01d      	retw.n
400843be:	0a2d      	mov.n	a2, a10
400843c0:	f01d      	retw.n
	...

400843c4 <heap_caps_malloc_default>:
400843c4:	004136        	entry	a1, 32
400843c7:	f0d681        	l32r	a8, 40080720 <_init_end+0x320>
400843ca:	0888      	l32i.n	a8, a8, 0
400843cc:	0d0866        	bnei	a8, -1, 400843dd <heap_caps_malloc_default+0x19>
400843cf:	f07bb1        	l32r	a11, 400805bc <_init_end+0x1bc>
400843d2:	20a220        	or	a10, a2, a2
400843d5:	fff3e5        	call8	40084314 <heap_caps_malloc>
400843d8:	0a2d      	mov.n	a2, a10
400843da:	f01d      	retw.n
400843dc:	382700        	lsi	f0, a7, 224
400843df:	b10b      	addi.n	a11, a1, -1
400843e1:	adf077        	bbsi	a0, 23, 40084392 <heap_caps_malloc+0x7e>
400843e4:	f2e502        	s32c1i	a0, a5, 0x3c8
400843e7:	ff          	.byte 0xff
400843e8:	000206        	j	400843f4 <heap_caps_malloc_default+0x30>
400843eb:	ceb100        	f64iter	a11, a1, a0, 0, 1
400843ee:	02adf0        	andb	b10, b13, b15
400843f1:	fff225        	call8	40084314 <heap_caps_malloc>
400843f4:	aacc      	bnez.n	a10, 40084402 <heap_caps_malloc_default+0x3e>
400843f6:	f0ccb1        	l32r	a11, 40080728 <_init_end+0x328>
400843f9:	02ad      	mov.n	a10, a2
400843fb:	fff1a5        	call8	40084314 <heap_caps_malloc>
400843fe:	0a2d      	mov.n	a2, a10
40084400:	f01d      	retw.n
40084402:	0a2d      	mov.n	a2, a10
40084404:	f01d      	retw.n
	...

40084408 <heap_caps_malloc_prefer>:
40084408:	00a136        	entry	a1, 80
4008440b:	2149      	s32i.n	a4, a1, 8
4008440d:	3159      	s32i.n	a5, a1, 12
4008440f:	4169      	s32i.n	a6, a1, 16
40084411:	5179      	s32i.n	a7, a1, 20
40084413:	014d      	mov.n	a4, a1
40084415:	a149      	s32i.n	a4, a1, 40
40084417:	30c142        	addi	a4, a1, 48
4008441a:	9149      	s32i.n	a4, a1, 36
4008441c:	840c      	movi.n	a4, 8
4008441e:	b149      	s32i.n	a4, a1, 44
40084420:	0a0c      	movi.n	a10, 0
40084422:	000ec6        	j	40084461 <heap_caps_malloc_prefer+0x59>
40084425:	b188      	l32i.n	a8, a1, 44
40084427:	384b      	addi.n	a3, a8, 4
40084429:	b139      	s32i.n	a3, a1, 44
4008442b:	891c      	movi.n	a9, 24
4008442d:	0b2937        	blt	a9, a3, 4008443c <heap_caps_malloc_prefer+0x34>
40084430:	f03d      	nop.n
40084432:	f03d      	nop.n
40084434:	f03d      	nop.n
40084436:	a138      	l32i.n	a3, a1, 40
40084438:	0004c6        	j	4008444f <heap_caps_malloc_prefer+0x47>
4008443b:	831c00        	moveqz	a1, a12, a0
4008443e:	032387        	blt	a3, a8, 40084445 <heap_caps_malloc_prefer+0x3d>
40084441:	432c      	movi.n	a3, 36
40084443:	b139      	s32i.n	a3, a1, 44
40084445:	f03d      	nop.n
40084447:	f03d      	nop.n
40084449:	f03d      	nop.n
4008444b:	f03d      	nop.n
4008444d:	9138      	l32i.n	a3, a1, 36
4008444f:	b188      	l32i.n	a8, a1, 44
40084451:	fcc882        	addi	a8, a8, -4
40084454:	838a      	add.n	a8, a3, a8
40084456:	08b8      	l32i.n	a11, a8, 0
40084458:	02ad      	mov.n	a10, a2
4008445a:	ffeba5        	call8	40084314 <heap_caps_malloc>
4008445d:	043d      	mov.n	a3, a4
4008445f:	3acc      	bnez.n	a10, 40084466 <heap_caps_malloc_prefer+0x5e>
40084461:	430b      	addi.n	a4, a3, -1
40084463:	fbe356        	bnez	a3, 40084425 <heap_caps_malloc_prefer+0x1d>
40084466:	0a2d      	mov.n	a2, a10
40084468:	f01d      	retw.n
	...

4008446c <heap_caps_free>:
4008446c:	004136        	entry	a1, 32
4008446f:	02e216        	beqz	a2, 400844a1 <heap_caps_free+0x35>
40084472:	f0ae81        	l32r	a8, 4008072c <_init_end+0x32c>
40084475:	808280        	add	a8, a2, a8
40084478:	f0a091        	l32r	a9, 400806f8 <_init_end+0x2f8>
4008447b:	053987        	bltu	a9, a8, 40084484 <heap_caps_free+0x18>
4008447e:	fcc222        	addi	a2, a2, -4
40084481:	002222        	l32i	a2, a2, 0
40084484:	02ad      	mov.n	a10, a2
40084486:	ffdf65        	call8	4008427c <find_containing_heap>
40084489:	dacc      	bnez.n	a10, 4008449a <heap_caps_free+0x2e>
4008448b:	f0a9d1        	l32r	a13, 40080730 <_init_end+0x330>
4008448e:	f0a9c1        	l32r	a12, 40080734 <_init_end+0x334>
40084491:	0ba1b2        	movi	a11, 0x10b
40084494:	f09ca1        	l32r	a10, 40080704 <_init_end+0x304>
40084497:	566365        	call8	400daacc <__assert_func>
4008449a:	02bd      	mov.n	a11, a2
4008449c:	7aa8      	l32i.n	a10, a10, 28
4008449e:	069465        	call8	4008ade4 <multi_heap_free>
400844a1:	f01d      	retw.n
	...

400844a4 <heap_caps_realloc>:
400844a4:	004136        	entry	a1, 32
400844a7:	a2cc      	bnez.n	a2, 400844b5 <heap_caps_realloc+0x11>
400844a9:	04bd      	mov.n	a11, a4
400844ab:	03ad      	mov.n	a10, a3
400844ad:	ffe665        	call8	40084314 <heap_caps_malloc>
400844b0:	0a2d      	mov.n	a2, a10
400844b2:	f01d      	retw.n
400844b4:	83cc00        	moveqz	a12, a12, a0
400844b7:	02ad      	mov.n	a10, a2
400844b9:	fffb25        	call8	4008446c <heap_caps_free>
400844bc:	020c      	movi.n	a2, 0
400844be:	f01d      	retw.n
400844c0:	965100        	lsi	f0, a1, 0x258
400844c3:	b537f0        	extui	a3, a15, 23, 12
400844c6:	1f8602        	lsi	f0, a6, 124
400844c9:	02ad00        	andb	b10, b13, b0
400844cc:	ffdae5        	call8	4008427c <find_containing_heap>
400844cf:	0a5d      	mov.n	a5, a10
400844d1:	dacc      	bnez.n	a10, 400844e2 <heap_caps_realloc+0x3e>
400844d3:	f099d1        	l32r	a13, 40080738 <_init_end+0x338>
400844d6:	f099c1        	l32r	a12, 4008073c <_init_end+0x33c>
400844d9:	20a1b2        	movi	a11, 0x120
400844dc:	f08aa1        	l32r	a10, 40080704 <_init_end+0x304>
400844df:	565ee5        	call8	400daacc <__assert_func>
400844e2:	7aa8      	l32i.n	a10, a10, 28
400844e4:	6a9c      	beqz.n	a10, 400844fe <heap_caps_realloc+0x5a>
400844e6:	080c      	movi.n	a8, 0
400844e8:	089d      	mov.n	a9, a8
400844ea:	000246        	j	400844f7 <heap_caps_realloc+0x53>
400844ed:	a0b850        	addx4	a11, a8, a5
400844f0:	0bb8      	l32i.n	a11, a11, 0
400844f2:	2099b0        	or	a9, a9, a11
400844f5:	881b      	addi.n	a8, a8, 1
400844f7:	f238a6        	blti	a8, 3, 400844ed <heap_caps_realloc+0x49>
400844fa:	000086        	j	40084500 <heap_caps_realloc+0x5c>
400844fd:	090c00        	l32e	a0, a12, -64
40084500:	109490        	and	a9, a4, a9
40084503:	099497        	bne	a4, a9, 40084510 <heap_caps_realloc+0x6c>
40084506:	03cd      	mov.n	a12, a3
40084508:	02bd      	mov.n	a11, a2
4008450a:	0690e5        	call8	4008ae18 <multi_heap_realloc>
4008450d:	03ca56        	bnez	a10, 4008454d <heap_caps_realloc+0xa9>
40084510:	04bd      	mov.n	a11, a4
40084512:	03ad      	mov.n	a10, a3
40084514:	ffdfe5        	call8	40084314 <heap_caps_malloc>
40084517:	0a4d      	mov.n	a4, a10
40084519:	4abc      	beqz.n	a10, 40084551 <heap_caps_realloc+0xad>
4008451b:	02bd      	mov.n	a11, a2
4008451d:	75a8      	l32i.n	a10, a5, 28
4008451f:	0696e5        	call8	4008ae8c <multi_heap_get_allocated_size>
40084522:	dacc      	bnez.n	a10, 40084533 <heap_caps_realloc+0x8f>
40084524:	f087d1        	l32r	a13, 40080740 <_init_end+0x340>
40084527:	f085c1        	l32r	a12, 4008073c <_init_end+0x33c>
4008452a:	34a1b2        	movi	a11, 0x134
4008452d:	f075a1        	l32r	a10, 40080704 <_init_end+0x304>
40084530:	5659a5        	call8	400daacc <__assert_func>
40084533:	63c3a0        	minu	a12, a3, a10
40084536:	02bd      	mov.n	a11, a2
40084538:	04ad      	mov.n	a10, a4
4008453a:	f08281        	l32r	a8, 40080744 <_init_end+0x344>
4008453d:	0008e0        	callx8	a8
40084540:	02ad      	mov.n	a10, a2
40084542:	fff2a5        	call8	4008446c <heap_caps_free>
40084545:	042d      	mov.n	a2, a4
40084547:	f01d      	retw.n
40084549:	020c      	movi.n	a2, 0
4008454b:	f01d      	retw.n
4008454d:	0a2d      	mov.n	a2, a10
4008454f:	f01d      	retw.n
40084551:	020c      	movi.n	a2, 0
40084553:	f01d      	retw.n
40084555:	000000        	ill

40084558 <heap_caps_realloc_default>:
40084558:	004136        	entry	a1, 32
4008455b:	f07181        	l32r	a8, 40080720 <_init_end+0x320>
4008455e:	0888      	l32i.n	a8, a8, 0
40084560:	0d0866        	bnei	a8, -1, 40084571 <heap_caps_realloc_default+0x19>
40084563:	f016c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40084566:	03bd      	mov.n	a11, a3
40084568:	02ad      	mov.n	a10, a2
4008456a:	fff3a5        	call8	400844a4 <heap_caps_realloc>
4008456d:	0a2d      	mov.n	a2, a10
4008456f:	f01d      	retw.n
40084571:	0f3837        	bltu	a8, a3, 40084584 <heap_caps_realloc_default+0x2c>
40084574:	f012c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40084577:	20b330        	or	a11, a3, a3
4008457a:	20a220        	or	a10, a2, a2
4008457d:	fff265        	call8	400844a4 <heap_caps_realloc>
40084580:	000286        	j	4008458e <heap_caps_realloc_default+0x36>
40084583:	68c100        	lsi	f0, a1, 0x1a0
40084586:	03bdf0        	lsi	f15, a13, 12
40084589:	02ad      	mov.n	a10, a2
4008458b:	fff1a5        	call8	400844a4 <heap_caps_realloc>
4008458e:	180c      	movi.n	a8, 1
40084590:	090c      	movi.n	a9, 0
40084592:	09bd      	mov.n	a11, a9
40084594:	83b8a0        	moveqz	a11, a8, a10
40084597:	838930        	moveqz	a8, a9, a3
4008459a:	0e08b7        	bnone	a8, a11, 400845ac <heap_caps_realloc_default+0x54>
4008459d:	f062c1        	l32r	a12, 40080728 <_init_end+0x328>
400845a0:	03bd      	mov.n	a11, a3
400845a2:	20a220        	or	a10, a2, a2
400845a5:	ffefe5        	call8	400844a4 <heap_caps_realloc>
400845a8:	0a2d      	mov.n	a2, a10
400845aa:	f01d      	retw.n
400845ac:	0a2d      	mov.n	a2, a10
400845ae:	f01d      	retw.n

400845b0 <heap_caps_realloc_prefer>:
400845b0:	00a136        	entry	a1, 80
400845b3:	3159      	s32i.n	a5, a1, 12
400845b5:	4169      	s32i.n	a6, a1, 16
400845b7:	5179      	s32i.n	a7, a1, 20
400845b9:	015d      	mov.n	a5, a1
400845bb:	a159      	s32i.n	a5, a1, 40
400845bd:	30c152        	addi	a5, a1, 48
400845c0:	9159      	s32i.n	a5, a1, 36
400845c2:	c50c      	movi.n	a5, 12
400845c4:	b159      	s32i.n	a5, a1, 44
400845c6:	0a0c      	movi.n	a10, 0
400845c8:	001346        	j	40084619 <heap_caps_realloc_prefer+0x69>
400845cb:	b18800        	lsi	f0, a8, 0x2c4
400845ce:	484b      	addi.n	a4, a8, 4
400845d0:	b149      	s32i.n	a4, a1, 44
400845d2:	891c      	movi.n	a9, 24
400845d4:	0a2947        	blt	a9, a4, 400845e2 <heap_caps_realloc_prefer+0x32>
400845d7:	f03d      	nop.n
400845d9:	f03d      	nop.n
400845db:	f03d      	nop.n
400845dd:	a148      	l32i.n	a4, a1, 40
400845df:	0004c6        	j	400845f6 <heap_caps_realloc_prefer+0x46>
400845e2:	841c      	movi.n	a4, 24
400845e4:	042487        	blt	a4, a8, 400845ec <heap_caps_realloc_prefer+0x3c>
400845e7:	24a042        	movi	a4, 36
400845ea:	b149      	s32i.n	a4, a1, 44
400845ec:	f03d      	nop.n
400845ee:	f03d      	nop.n
400845f0:	f03d      	nop.n
400845f2:	f03d      	nop.n
400845f4:	9148      	l32i.n	a4, a1, 36
400845f6:	b188      	l32i.n	a8, a1, 44
400845f8:	fcc882        	addi	a8, a8, -4
400845fb:	848a      	add.n	a8, a4, a8
400845fd:	08c8      	l32i.n	a12, a8, 0
400845ff:	03bd      	mov.n	a11, a3
40084601:	02ad      	mov.n	a10, a2
40084603:	ffea25        	call8	400844a4 <heap_caps_realloc>
40084606:	180c      	movi.n	a8, 1
40084608:	040c      	movi.n	a4, 0
4008460a:	049d      	mov.n	a9, a4
4008460c:	9398a0        	movnez	a9, a8, a10
4008460f:	938430        	movnez	a8, a4, a3
40084612:	208890        	or	a8, a8, a9
40084615:	054d      	mov.n	a4, a5
40084617:	38cc      	bnez.n	a8, 4008461e <heap_caps_realloc_prefer+0x6e>
40084619:	540b      	addi.n	a5, a4, -1
4008461b:	fad456        	bnez	a4, 400845cc <heap_caps_realloc_prefer+0x1c>
4008461e:	0a2d      	mov.n	a2, a10
40084620:	f01d      	retw.n
	...

40084624 <heap_caps_calloc>:
40084624:	004136        	entry	a1, 32
40084627:	080c      	movi.n	a8, 0
40084629:	825230        	mull	a5, a2, a3
4008462c:	a23230        	muluh	a3, a2, a3
4008462f:	021387        	beq	a3, a8, 40084635 <heap_caps_calloc+0x11>
40084632:	01a082        	movi	a8, 1
40084635:	58dc      	bnez.n	a8, 4008464e <heap_caps_calloc+0x2a>
40084637:	04bd      	mov.n	a11, a4
40084639:	05ad      	mov.n	a10, a5
4008463b:	ffcda5        	call8	40084314 <heap_caps_malloc>
4008463e:	0a2d      	mov.n	a2, a10
40084640:	ca8c      	beqz.n	a10, 40084650 <heap_caps_calloc+0x2c>
40084642:	05cd      	mov.n	a12, a5
40084644:	0b0c      	movi.n	a11, 0
40084646:	ef9381        	l32r	a8, 40080494 <_init_end+0x94>
40084649:	0008e0        	callx8	a8
4008464c:	f01d      	retw.n
4008464e:	020c      	movi.n	a2, 0
40084650:	f01d      	retw.n
	...

40084654 <heap_caps_calloc_prefer>:
40084654:	00a136        	entry	a1, 80
40084657:	3159      	s32i.n	a5, a1, 12
40084659:	4169      	s32i.n	a6, a1, 16
4008465b:	5179      	s32i.n	a7, a1, 20
4008465d:	015d      	mov.n	a5, a1
4008465f:	a159      	s32i.n	a5, a1, 40
40084661:	30c152        	addi	a5, a1, 48
40084664:	9159      	s32i.n	a5, a1, 36
40084666:	c50c      	movi.n	a5, 12
40084668:	b159      	s32i.n	a5, a1, 44
4008466a:	0a0c      	movi.n	a10, 0
4008466c:	000f86        	j	400846ae <heap_caps_calloc_prefer+0x5a>
4008466f:	b18800        	lsi	f0, a8, 0x2c4
40084672:	484b      	addi.n	a4, a8, 4
40084674:	b149      	s32i.n	a4, a1, 44
40084676:	891c      	movi.n	a9, 24
40084678:	0a2947        	blt	a9, a4, 40084686 <heap_caps_calloc_prefer+0x32>
4008467b:	f03d      	nop.n
4008467d:	f03d      	nop.n
4008467f:	f03d      	nop.n
40084681:	a148      	l32i.n	a4, a1, 40
40084683:	0004c6        	j	4008469a <heap_caps_calloc_prefer+0x46>
40084686:	841c      	movi.n	a4, 24
40084688:	042487        	blt	a4, a8, 40084690 <heap_caps_calloc_prefer+0x3c>
4008468b:	24a042        	movi	a4, 36
4008468e:	b149      	s32i.n	a4, a1, 44
40084690:	f03d      	nop.n
40084692:	f03d      	nop.n
40084694:	f03d      	nop.n
40084696:	f03d      	nop.n
40084698:	9148      	l32i.n	a4, a1, 36
4008469a:	b188      	l32i.n	a8, a1, 44
4008469c:	fcc882        	addi	a8, a8, -4
4008469f:	848a      	add.n	a8, a4, a8
400846a1:	08c8      	l32i.n	a12, a8, 0
400846a3:	03bd      	mov.n	a11, a3
400846a5:	02ad      	mov.n	a10, a2
400846a7:	fff7e5        	call8	40084624 <heap_caps_calloc>
400846aa:	054d      	mov.n	a4, a5
400846ac:	4acc      	bnez.n	a10, 400846b4 <heap_caps_calloc_prefer+0x60>
400846ae:	ffc452        	addi	a5, a4, -1
400846b1:	fbb456        	bnez	a4, 40084670 <heap_caps_calloc_prefer+0x1c>
400846b4:	0a2d      	mov.n	a2, a10
400846b6:	f01d      	retw.n

400846b8 <esp_cpu_stall>:
400846b8:	004136        	entry	a1, 32
400846bb:	5d1266        	bnei	a2, 1, 4008471c <esp_cpu_stall+0x64>
400846be:	f02281        	l32r	a8, 40080748 <_init_end+0x348>
400846c1:	0020c0        	memw
400846c4:	08a8      	l32i.n	a10, a8, 0
400846c6:	f02191        	l32r	a9, 4008074c <_init_end+0x34c>
400846c9:	109a90        	and	a9, a10, a9
400846cc:	0020c0        	memw
400846cf:	0899      	s32i.n	a9, a8, 0
400846d1:	f03d      	nop.n
400846d3:	f03d      	nop.n
400846d5:	f03d      	nop.n
400846d7:	f03d      	nop.n
400846d9:	0020c0        	memw
400846dc:	08a8      	l32i.n	a10, a8, 0
400846de:	f01c91        	l32r	a9, 40080750 <_init_end+0x350>
400846e1:	209a90        	or	a9, a10, a9
400846e4:	0020c0        	memw
400846e7:	0899      	s32i.n	a9, a8, 0
400846e9:	f03d      	nop.n
400846eb:	f03d      	nop.n
400846ed:	f03d      	nop.n
400846ef:	f03d      	nop.n
400846f1:	f01881        	l32r	a8, 40080754 <_init_end+0x354>
400846f4:	0020c0        	memw
400846f7:	08a8      	l32i.n	a10, a8, 0
400846f9:	c97c      	movi.n	a9, -4
400846fb:	109a90        	and	a9, a10, a9
400846fe:	0020c0        	memw
40084701:	0899      	s32i.n	a9, a8, 0
40084703:	f03d      	nop.n
40084705:	f03d      	nop.n
40084707:	f03d      	nop.n
40084709:	f03d      	nop.n
4008470b:	0020c0        	memw
4008470e:	08a8      	l32i.n	a10, a8, 0
40084710:	290c      	movi.n	a9, 2
40084712:	209a90        	or	a9, a10, a9
40084715:	0020c0        	memw
40084718:	0899      	s32i.n	a9, a8, 0
4008471a:	f01d      	retw.n
4008471c:	f00b81        	l32r	a8, 40080748 <_init_end+0x348>
4008471f:	0020c0        	memw
40084722:	08a8      	l32i.n	a10, a8, 0
40084724:	f00d91        	l32r	a9, 40080758 <_init_end+0x358>
40084727:	109a90        	and	a9, a10, a9
4008472a:	0020c0        	memw
4008472d:	0899      	s32i.n	a9, a8, 0
4008472f:	f03d      	nop.n
40084731:	f03d      	nop.n
40084733:	f03d      	nop.n
40084735:	f03d      	nop.n
40084737:	0020c0        	memw
4008473a:	08a8      	l32i.n	a10, a8, 0
4008473c:	f00891        	l32r	a9, 4008075c <_init_end+0x35c>
4008473f:	209a90        	or	a9, a10, a9
40084742:	0020c0        	memw
40084745:	0899      	s32i.n	a9, a8, 0
40084747:	f03d      	nop.n
40084749:	f03d      	nop.n
4008474b:	f03d      	nop.n
4008474d:	f03d      	nop.n
4008474f:	f00181        	l32r	a8, 40080754 <_init_end+0x354>
40084752:	0020c0        	memw
40084755:	08a8      	l32i.n	a10, a8, 0
40084757:	397c      	movi.n	a9, -13
40084759:	109a90        	and	a9, a10, a9
4008475c:	0020c0        	memw
4008475f:	0899      	s32i.n	a9, a8, 0
40084761:	f03d      	nop.n
40084763:	f03d      	nop.n
40084765:	f03d      	nop.n
40084767:	f03d      	nop.n
40084769:	0020c0        	memw
4008476c:	08a8      	l32i.n	a10, a8, 0
4008476e:	890c      	movi.n	a9, 8
40084770:	209a90        	or	a9, a10, a9
40084773:	0020c0        	memw
40084776:	0899      	s32i.n	a9, a8, 0
40084778:	f01d      	retw.n
	...

4008477c <esp_cpu_unstall>:
4008477c:	004136        	entry	a1, 32
4008477f:	2e1266        	bnei	a2, 1, 400847b1 <esp_cpu_unstall+0x35>
40084782:	eff191        	l32r	a9, 40080748 <_init_end+0x348>
40084785:	0020c0        	memw
40084788:	09a8      	l32i.n	a10, a9, 0
4008478a:	eff081        	l32r	a8, 4008074c <_init_end+0x34c>
4008478d:	108a80        	and	a8, a10, a8
40084790:	0020c0        	memw
40084793:	0989      	s32i.n	a8, a9, 0
40084795:	f03d      	nop.n
40084797:	f03d      	nop.n
40084799:	f03d      	nop.n
4008479b:	f03d      	nop.n
4008479d:	efed91        	l32r	a9, 40080754 <_init_end+0x354>
400847a0:	0020c0        	memw
400847a3:	09a8      	l32i.n	a10, a9, 0
400847a5:	c87c      	movi.n	a8, -4
400847a7:	108a80        	and	a8, a10, a8
400847aa:	0020c0        	memw
400847ad:	0989      	s32i.n	a8, a9, 0
400847af:	f01d      	retw.n
400847b1:	efe591        	l32r	a9, 40080748 <_init_end+0x348>
400847b4:	0020c0        	memw
400847b7:	09a8      	l32i.n	a10, a9, 0
400847b9:	efe781        	l32r	a8, 40080758 <_init_end+0x358>
400847bc:	108a80        	and	a8, a10, a8
400847bf:	0020c0        	memw
400847c2:	0989      	s32i.n	a8, a9, 0
400847c4:	f03d      	nop.n
400847c6:	f03d      	nop.n
400847c8:	f03d      	nop.n
400847ca:	f03d      	nop.n
400847cc:	efe291        	l32r	a9, 40080754 <_init_end+0x354>
400847cf:	0020c0        	memw
400847d2:	09a8      	l32i.n	a10, a9, 0
400847d4:	387c      	movi.n	a8, -13
400847d6:	108a80        	and	a8, a10, a8
400847d9:	0020c0        	memw
400847dc:	0989      	s32i.n	a8, a9, 0
400847de:	f01d      	retw.n

400847e0 <esp_cpu_reset>:
400847e0:	004136        	entry	a1, 32
400847e3:	efdc81        	l32r	a8, 40080754 <_init_end+0x354>
400847e6:	0020c0        	memw
400847e9:	0888      	l32i.n	a8, a8, 0
400847eb:	32cc      	bnez.n	a2, 400847f2 <esp_cpu_reset+0x12>
400847ed:	092c      	movi.n	a9, 32
400847ef:	000046        	j	400847f4 <esp_cpu_reset+0x14>
400847f2:	091c      	movi.n	a9, 16
400847f4:	208980        	or	a8, a9, a8
400847f7:	efd791        	l32r	a9, 40080754 <_init_end+0x354>
400847fa:	0020c0        	memw
400847fd:	0989      	s32i.n	a8, a9, 0
400847ff:	f01d      	retw.n
40084801:	000000        	ill

40084804 <esp_cpu_in_ocd_debug_mode>:
40084804:	004136        	entry	a1, 32
40084807:	efd621        	l32r	a2, 40080760 <_init_end+0x360>
4008480a:	406220        	rer	a2, a2
4008480d:	042020        	extui	a2, a2, 0, 1
40084810:	f01d      	retw.n
	...

40084814 <_gettimeofday_r>:
40084814:	004136        	entry	a1, 32
40084817:	045316        	beqz	a3, 40084860 <_gettimeofday_r+0x4c>
4008481a:	64f4a5        	call8	400e9764 <get_adjusted_boot_time>
4008481d:	205aa0        	or	a5, a10, a10
40084820:	206bb0        	or	a6, a11, a11
40084823:	64dda5        	call8	400e95fc <get_time_since_boot>
40084826:	45aa      	add.n	a4, a5, a10
40084828:	01a022        	movi	a2, 1
4008482b:	013457        	bltu	a4, a5, 40084830 <_gettimeofday_r+0x1c>
4008482e:	020c      	movi.n	a2, 0
40084830:	b6ba      	add.n	a11, a6, a11
40084832:	22ba      	add.n	a2, a2, a11
40084834:	02bd      	mov.n	a11, a2
40084836:	ef1dc1        	l32r	a12, 400804ac <_init_end+0xac>
40084839:	ef36d1        	l32r	a13, 40080514 <_init_end+0x114>
4008483c:	04ad      	mov.n	a10, a4
4008483e:	ef7981        	l32r	a8, 40080624 <_init_end+0x224>
40084841:	0008e0        	callx8	a8
40084844:	03a9      	s32i.n	a10, a3, 0
40084846:	f03d      	nop.n
40084848:	f03d      	nop.n
4008484a:	f03d      	nop.n
4008484c:	f03d      	nop.n
4008484e:	ef17c1        	l32r	a12, 400804ac <_init_end+0xac>
40084851:	ef30d1        	l32r	a13, 40080514 <_init_end+0x114>
40084854:	04ad      	mov.n	a10, a4
40084856:	02bd      	mov.n	a11, a2
40084858:	efc381        	l32r	a8, 40080764 <_init_end+0x364>
4008485b:	0008e0        	callx8	a8
4008485e:	13a9      	s32i.n	a10, a3, 4
40084860:	020c      	movi.n	a2, 0
40084862:	f01d      	retw.n

40084864 <_times_r>:
40084864:	006136        	entry	a1, 48
40084867:	03dd65        	call8	4008863c <xTaskGetTickCount>
4008486a:	00a0c2        	movi	a12, 0
4008486d:	0363c2        	s32i	a12, a3, 12
40084870:	0263c2        	s32i	a12, a3, 8
40084873:	13a9      	s32i.n	a10, a3, 4
40084875:	03c9      	s32i.n	a12, a3, 0
40084877:	21c9      	s32i.n	a12, a1, 8
40084879:	31c9      	s32i.n	a12, a1, 12
4008487b:	b18b      	addi.n	a11, a1, 8
4008487d:	02ad      	mov.n	a10, a2
4008487f:	fff965        	call8	40084814 <_gettimeofday_r>
40084882:	2128      	l32i.n	a2, a1, 8
40084884:	f01d      	retw.n
	...

40084888 <_malloc_r>:
40084888:	004136        	entry	a1, 32
4008488b:	03ad      	mov.n	a10, a3
4008488d:	ffb365        	call8	400843c4 <heap_caps_malloc_default>
40084890:	0a2d      	mov.n	a2, a10
40084892:	f01d      	retw.n

40084894 <_free_r>:
40084894:	004136        	entry	a1, 32
40084897:	03ad      	mov.n	a10, a3
40084899:	ffbd25        	call8	4008446c <heap_caps_free>
4008489c:	f01d      	retw.n
	...

400848a0 <_realloc_r>:
400848a0:	004136        	entry	a1, 32
400848a3:	20b440        	or	a11, a4, a4
400848a6:	20a330        	or	a10, a3, a3
400848a9:	ffcae5        	call8	40084558 <heap_caps_realloc_default>
400848ac:	202aa0        	or	a2, a10, a10
400848af:	f01d      	retw.n
400848b1:	000000        	ill

400848b4 <_calloc_r>:
400848b4:	004136        	entry	a1, 32
400848b7:	020c      	movi.n	a2, 0
400848b9:	825340        	mull	a5, a3, a4
400848bc:	a24340        	muluh	a4, a3, a4
400848bf:	011427        	beq	a4, a2, 400848c4 <_calloc_r+0x10>
400848c2:	120c      	movi.n	a2, 1
400848c4:	62dc      	bnez.n	a2, 400848de <_calloc_r+0x2a>
400848c6:	05ad      	mov.n	a10, a5
400848c8:	ef3a81        	l32r	a8, 400805b0 <_init_end+0x1b0>
400848cb:	0008e0        	callx8	a8
400848ce:	0a2d      	mov.n	a2, a10
400848d0:	ca8c      	beqz.n	a10, 400848e0 <_calloc_r+0x2c>
400848d2:	05cd      	mov.n	a12, a5
400848d4:	0b0c      	movi.n	a11, 0
400848d6:	eeef81        	l32r	a8, 40080494 <_init_end+0x94>
400848d9:	0008e0        	callx8	a8
400848dc:	f01d      	retw.n
400848de:	020c      	movi.n	a2, 0
400848e0:	f01d      	retw.n
	...

400848e4 <esp_reent_init>:
400848e4:	004136        	entry	a1, 32
400848e7:	f0a0c2        	movi	a12, 240
400848ea:	0b0c      	movi.n	a11, 0
400848ec:	02ad      	mov.n	a10, a2
400848ee:	eee981        	l32r	a8, 40080494 <_init_end+0x94>
400848f1:	0008e0        	callx8	a8
400848f4:	eec681        	l32r	a8, 4008040c <_init_end+0xc>
400848f7:	0888      	l32i.n	a8, a8, 0
400848f9:	2898      	l32i.n	a9, a8, 8
400848fb:	2299      	s32i.n	a9, a2, 8
400848fd:	f03d      	nop.n
400848ff:	f03d      	nop.n
40084901:	f03d      	nop.n
40084903:	f03d      	nop.n
40084905:	3898      	l32i.n	a9, a8, 12
40084907:	3299      	s32i.n	a9, a2, 12
40084909:	f03d      	nop.n
4008490b:	f03d      	nop.n
4008490d:	f03d      	nop.n
4008490f:	f03d      	nop.n
40084911:	1888      	l32i.n	a8, a8, 4
40084913:	1289      	s32i.n	a8, a2, 4
40084915:	f03d      	nop.n
40084917:	f03d      	nop.n
40084919:	f03d      	nop.n
4008491b:	f03d      	nop.n
4008491d:	ef9281        	l32r	a8, 40080768 <_init_end+0x368>
40084920:	a289      	s32i.n	a8, a2, 40
40084922:	180c      	movi.n	a8, 1
40084924:	6289      	s32i.n	a8, a2, 24
40084926:	080c      	movi.n	a8, 0
40084928:	366282        	s32i	a8, a2, 216
4008492b:	376282        	s32i	a8, a2, 220
4008492e:	386282        	s32i	a8, a2, 224
40084931:	f03d      	nop.n
40084933:	f03d      	nop.n
40084935:	f03d      	nop.n
40084937:	f03d      	nop.n
40084939:	ef8c81        	l32r	a8, 4008076c <_init_end+0x36c>
4008493c:	8289      	s32i.n	a8, a2, 32
4008493e:	f01d      	retw.n

40084940 <lock_init_generic>:
40084940:	004136        	entry	a1, 32
40084943:	ef8ba1        	l32r	a10, 40080770 <_init_end+0x370>
40084946:	0414a5        	call8	40088a90 <vTaskEnterCritical>
40084949:	0410e5        	call8	40088a58 <xTaskGetSchedulerState>
4008494c:	081a66        	bnei	a10, 1, 40084958 <lock_init_generic+0x18>
4008494f:	ef88a1        	l32r	a10, 40080770 <_init_end+0x370>
40084952:	0427e5        	call8	40088bd0 <vTaskExitCritical>
40084955:	000090        	retw
40084958:	002282        	l32i	a8, a2, 0
4008495b:	00b856        	bnez	a8, 4008496a <lock_init_generic+0x2a>
4008495e:	03ad      	mov.n	a10, a3
40084960:	0300a5        	call8	4008796c <xQueueCreateMutex>
40084963:	1acc      	bnez.n	a10, 40084968 <lock_init_generic+0x28>
40084965:	06a065        	call8	4008b36c <abort>
40084968:	02a9      	s32i.n	a10, a2, 0
4008496a:	f03d      	nop.n
4008496c:	f03d      	nop.n
4008496e:	f03d      	nop.n
40084970:	0020f0        	nop
40084973:	ef7fa1        	l32r	a10, 40080770 <_init_end+0x370>
40084976:	0425a5        	call8	40088bd0 <vTaskExitCritical>
40084979:	f01d      	retw.n
	...

4008497c <lock_acquire_generic>:
4008497c:	006136        	entry	a1, 48
4008497f:	0258      	l32i.n	a5, a2, 0
40084981:	85ec      	bnez.n	a5, 400849ad <lock_acquire_generic+0x31>
40084983:	040d65        	call8	40088a58 <xTaskGetSchedulerState>
40084986:	021a66        	bnei	a10, 1, 4008498c <lock_acquire_generic+0x10>
40084989:	001fc6        	j	40084a0c <lock_acquire_generic+0x90>
4008498c:	04bd      	mov.n	a11, a4
4008498e:	02ad      	mov.n	a10, a2
40084990:	fffae5        	call8	40084940 <lock_init_generic>
40084993:	0258      	l32i.n	a5, a2, 0
40084995:	014556        	bnez	a5, 400849ad <lock_acquire_generic+0x31>
40084998:	ef77d1        	l32r	a13, 40080774 <_init_end+0x374>
4008499b:	88a0c2        	movi	a12, 136
4008499e:	ef76b1        	l32r	a11, 40080778 <_init_end+0x378>
400849a1:	ef76a1        	l32r	a10, 4008077c <_init_end+0x37c>
400849a4:	eebd81        	l32r	a8, 40080498 <_init_end+0x98>
400849a7:	0008e0        	callx8	a8
400849aa:	069c25        	call8	4008b36c <abort>
400849ad:	0358e5        	call8	40087f3c <xPortInIsrContext>
400849b0:	0abc      	beqz.n	a10, 400849e4 <lock_acquire_generic+0x68>
400849b2:	024466        	bnei	a4, 4, 400849b8 <lock_acquire_generic+0x3c>
400849b5:	069b65        	call8	4008b36c <abort>
400849b8:	00a022        	movi	a2, 0
400849bb:	036122        	s32i	a2, a1, 12
400849be:	c1cb      	addi.n	a12, a1, 12
400849c0:	02bd      	mov.n	a11, a2
400849c2:	20a550        	or	a10, a5, a5
400849c5:	033565        	call8	40087d1c <xQueueReceiveFromISR>
400849c8:	0a5d      	mov.n	a5, a10
400849ca:	180c      	movi.n	a8, 1
400849cc:	024d      	mov.n	a4, a2
400849ce:	8348a0        	moveqz	a4, a8, a10
400849d1:	838230        	moveqz	a8, a2, a3
400849d4:	020847        	bnone	a8, a4, 400849da <lock_acquire_generic+0x5e>
400849d7:	069965        	call8	4008b36c <abort>
400849da:	3128      	l32i.n	a2, a1, 12
400849dc:	42ac      	beqz.n	a2, 40084a04 <lock_acquire_generic+0x88>
400849de:	056865        	call8	4008a064 <_frxt_setup_switch>
400849e1:	0007c6        	j	40084a04 <lock_acquire_generic+0x88>
400849e4:	0e4466        	bnei	a4, 4, 400849f6 <lock_acquire_generic+0x7a>
400849e7:	20b330        	or	a11, a3, a3
400849ea:	20a550        	or	a10, a5, a5
400849ed:	032da5        	call8	40087cc8 <xQueueTakeMutexRecursive>
400849f0:	205aa0        	or	a5, a10, a10
400849f3:	000346        	j	40084a04 <lock_acquire_generic+0x88>
400849f6:	0d0c      	movi.n	a13, 0
400849f8:	03cd      	mov.n	a12, a3
400849fa:	0dbd      	mov.n	a11, a13
400849fc:	20a550        	or	a10, a5, a5
400849ff:	031665        	call8	40087b64 <xQueueGenericReceive>
40084a02:	0a5d      	mov.n	a5, a10
40084a04:	081566        	bnei	a5, 1, 40084a10 <lock_acquire_generic+0x94>
40084a07:	020c      	movi.n	a2, 0
40084a09:	f01d      	retw.n
40084a0b:	020c00        	andb	b0, b12, b0
40084a0e:	f01d      	retw.n
40084a10:	f27c      	movi.n	a2, -1
40084a12:	f01d      	retw.n

40084a14 <lock_release_generic>:
40084a14:	006136        	entry	a1, 48
40084a17:	002222        	l32i	a2, a2, 0
40084a1a:	03e216        	beqz	a2, 40084a5c <lock_release_generic+0x48>
40084a1d:	0351e5        	call8	40087f3c <xPortInIsrContext>
40084a20:	01da16        	beqz	a10, 40084a41 <lock_release_generic+0x2d>
40084a23:	024366        	bnei	a3, 4, 40084a29 <lock_release_generic+0x15>
40084a26:	069465        	call8	4008b36c <abort>
40084a29:	030c      	movi.n	a3, 0
40084a2b:	3139      	s32i.n	a3, a1, 12
40084a2d:	b1cb      	addi.n	a11, a1, 12
40084a2f:	02ad      	mov.n	a10, a2
40084a31:	030725        	call8	40087aa4 <xQueueGiveFromISR>
40084a34:	3128      	l32i.n	a2, a1, 12
40084a36:	221237        	beq	a2, a3, 40084a5c <lock_release_generic+0x48>
40084a39:	0562a5        	call8	4008a064 <_frxt_setup_switch>
40084a3c:	f01d      	retw.n
40084a3e:	000000        	ill
40084a41:	094366        	bnei	a3, 4, 40084a4e <lock_release_generic+0x3a>
40084a44:	02ad      	mov.n	a10, a2
40084a46:	02f3e5        	call8	40087984 <xQueueGiveMutexRecursive>
40084a49:	f01d      	retw.n
40084a4b:	000000        	ill
40084a4e:	00a0d2        	movi	a13, 0
40084a51:	20cdd0        	or	a12, a13, a13
40084a54:	20bdd0        	or	a11, a13, a13
40084a57:	02ad      	mov.n	a10, a2
40084a59:	02d8a5        	call8	400877e4 <xQueueGenericSend>
40084a5c:	f01d      	retw.n
	...

40084a60 <_lock_init>:
40084a60:	004136        	entry	a1, 32
40084a63:	02ad      	mov.n	a10, a2
40084a65:	080c      	movi.n	a8, 0
40084a67:	0289      	s32i.n	a8, a2, 0
40084a69:	1b0c      	movi.n	a11, 1
40084a6b:	ffed65        	call8	40084940 <lock_init_generic>
40084a6e:	f01d      	retw.n

40084a70 <_lock_init_recursive>:
40084a70:	004136        	entry	a1, 32
40084a73:	02ad      	mov.n	a10, a2
40084a75:	080c      	movi.n	a8, 0
40084a77:	0289      	s32i.n	a8, a2, 0
40084a79:	4b0c      	movi.n	a11, 4
40084a7b:	ffec65        	call8	40084940 <lock_init_generic>
40084a7e:	f01d      	retw.n

40084a80 <_lock_close>:
40084a80:	004136        	entry	a1, 32
40084a83:	ef3ba1        	l32r	a10, 40080770 <_init_end+0x370>
40084a86:	0400a5        	call8	40088a90 <vTaskEnterCritical>
40084a89:	002232        	l32i	a3, a2, 0
40084a8c:	53ac      	beqz.n	a3, 40084ab5 <_lock_close+0x35>
40084a8e:	03ad      	mov.n	a10, a3
40084a90:	02cbe5        	call8	40087750 <xQueueGetMutexHolder>
40084a93:	3a9c      	beqz.n	a10, 40084aaa <_lock_close+0x2a>
40084a95:	ef3ad1        	l32r	a13, 40080780 <_init_end+0x380>
40084a98:	71a0c2        	movi	a12, 113
40084a9b:	ef37b1        	l32r	a11, 40080778 <_init_end+0x378>
40084a9e:	ef37a1        	l32r	a10, 4008077c <_init_end+0x37c>
40084aa1:	ee7d81        	l32r	a8, 40080498 <_init_end+0x98>
40084aa4:	0008e0        	callx8	a8
40084aa7:	068c65        	call8	4008b36c <abort>
40084aaa:	20a330        	or	a10, a3, a3
40084aad:	0330e5        	call8	40087dbc <vQueueDelete>
40084ab0:	00a032        	movi	a3, 0
40084ab3:	0239      	s32i.n	a3, a2, 0
40084ab5:	f03d      	nop.n
40084ab7:	f03d      	nop.n
40084ab9:	f03d      	nop.n
40084abb:	0020f0        	nop
40084abe:	ef2ca1        	l32r	a10, 40080770 <_init_end+0x370>
40084ac1:	0410e5        	call8	40088bd0 <vTaskExitCritical>
40084ac4:	f01d      	retw.n
	...

40084ac8 <_lock_acquire>:
40084ac8:	004136        	entry	a1, 32
40084acb:	1c0c      	movi.n	a12, 1
40084acd:	fb7c      	movi.n	a11, -1
40084acf:	02ad      	mov.n	a10, a2
40084ad1:	ffeaa5        	call8	4008497c <lock_acquire_generic>
40084ad4:	f01d      	retw.n
	...

40084ad8 <_lock_acquire_recursive>:
40084ad8:	004136        	entry	a1, 32
40084adb:	4c0c      	movi.n	a12, 4
40084add:	fb7c      	movi.n	a11, -1
40084adf:	02ad      	mov.n	a10, a2
40084ae1:	ffe9a5        	call8	4008497c <lock_acquire_generic>
40084ae4:	f01d      	retw.n
	...

40084ae8 <_lock_try_acquire>:
40084ae8:	004136        	entry	a1, 32
40084aeb:	1c0c      	movi.n	a12, 1
40084aed:	0b0c      	movi.n	a11, 0
40084aef:	02ad      	mov.n	a10, a2
40084af1:	ffe8a5        	call8	4008497c <lock_acquire_generic>
40084af4:	0a2d      	mov.n	a2, a10
40084af6:	f01d      	retw.n

40084af8 <_lock_try_acquire_recursive>:
40084af8:	004136        	entry	a1, 32
40084afb:	4c0c      	movi.n	a12, 4
40084afd:	0b0c      	movi.n	a11, 0
40084aff:	02ad      	mov.n	a10, a2
40084b01:	ffe7a5        	call8	4008497c <lock_acquire_generic>
40084b04:	0a2d      	mov.n	a2, a10
40084b06:	f01d      	retw.n

40084b08 <_lock_release>:
40084b08:	004136        	entry	a1, 32
40084b0b:	1b0c      	movi.n	a11, 1
40084b0d:	02ad      	mov.n	a10, a2
40084b0f:	fff065        	call8	40084a14 <lock_release_generic>
40084b12:	f01d      	retw.n

40084b14 <_lock_release_recursive>:
40084b14:	004136        	entry	a1, 32
40084b17:	4b0c      	movi.n	a11, 4
40084b19:	02ad      	mov.n	a10, a2
40084b1b:	ffefa5        	call8	40084a14 <lock_release_generic>
40084b1e:	f01d      	retw.n

40084b20 <pthread_mutex_lock_internal>:
40084b20:	004136        	entry	a1, 32
40084b23:	03d216        	beqz	a2, 40084b64 <pthread_mutex_lock_internal+0x44>
40084b26:	1288      	l32i.n	a8, a2, 4
40084b28:	0c2866        	bnei	a8, 2, 40084b38 <pthread_mutex_lock_internal+0x18>
40084b2b:	02a8      	l32i.n	a10, a2, 0
40084b2d:	02c225        	call8	40087750 <xQueueGetMutexHolder>
40084b30:	0a4d      	mov.n	a4, a10
40084b32:	03e765        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40084b35:	2f14a7        	beq	a4, a10, 40084b68 <pthread_mutex_lock_internal+0x48>
40084b38:	1288      	l32i.n	a8, a2, 4
40084b3a:	101866        	bnei	a8, 1, 40084b4e <pthread_mutex_lock_internal+0x2e>
40084b3d:	03bd      	mov.n	a11, a3
40084b3f:	02a8      	l32i.n	a10, a2, 0
40084b41:	031865        	call8	40087cc8 <xQueueTakeMutexRecursive>
40084b44:	241a26        	beqi	a10, 1, 40084b6c <pthread_mutex_lock_internal+0x4c>
40084b47:	021c      	movi.n	a2, 16
40084b49:	f01d      	retw.n
40084b4b:	000000        	ill
40084b4e:	00a0d2        	movi	a13, 0
40084b51:	20c330        	or	a12, a3, a3
40084b54:	20bdd0        	or	a11, a13, a13
40084b57:	02a8      	l32i.n	a10, a2, 0
40084b59:	0300a5        	call8	40087b64 <xQueueGenericReceive>
40084b5c:	101a26        	beqi	a10, 1, 40084b70 <pthread_mutex_lock_internal+0x50>
40084b5f:	021c      	movi.n	a2, 16
40084b61:	f01d      	retw.n
40084b63:	621c00        	lsi	f0, a12, 0x188
40084b66:	f01d      	retw.n
40084b68:	d22c      	movi.n	a2, 45
40084b6a:	f01d      	retw.n
40084b6c:	020c      	movi.n	a2, 0
40084b6e:	f01d      	retw.n
40084b70:	020c      	movi.n	a2, 0
40084b72:	f01d      	retw.n

40084b74 <pthread_mutex_lock>:
40084b74:	004136        	entry	a1, 32
40084b77:	013216        	beqz	a2, 40084b8e <pthread_mutex_lock+0x1a>
40084b7a:	20a220        	or	a10, a2, a2
40084b7d:	6508e5        	call8	400e9c0c <pthread_mutex_init_if_static>
40084b80:	00ea56        	bnez	a10, 40084b92 <pthread_mutex_lock+0x1e>
40084b83:	fb7c      	movi.n	a11, -1
40084b85:	02a8      	l32i.n	a10, a2, 0
40084b87:	fff9a5        	call8	40084b20 <pthread_mutex_lock_internal>
40084b8a:	0a2d      	mov.n	a2, a10
40084b8c:	f01d      	retw.n
40084b8e:	621c      	movi.n	a2, 22
40084b90:	f01d      	retw.n
40084b92:	0a2d      	mov.n	a2, a10
40084b94:	f01d      	retw.n
	...

40084b98 <pthread_mutex_timedlock>:
40084b98:	006136        	entry	a1, 48
40084b9b:	049216        	beqz	a2, 40084be8 <pthread_mutex_timedlock+0x50>
40084b9e:	20a220        	or	a10, a2, a2
40084ba1:	6506a5        	call8	400e9c0c <pthread_mutex_init_if_static>
40084ba4:	044a56        	bnez	a10, 40084bec <pthread_mutex_timedlock+0x54>
40084ba7:	08c1b2        	addi	a11, a1, 8
40084baa:	01a0a2        	movi	a10, 1
40084bad:	64cbe5        	call8	400e986c <clock_gettime>
40084bb0:	0388      	l32i.n	a8, a3, 0
40084bb2:	2198      	l32i.n	a9, a1, 8
40084bb4:	c09890        	sub	a9, a8, a9
40084bb7:	1189b0        	slli	a8, a9, 5
40084bba:	c08890        	sub	a8, a8, a9
40084bbd:	a08890        	addx4	a8, a8, a9
40084bc0:	11b8d0        	slli	a11, a8, 3
40084bc3:	1388      	l32i.n	a8, a3, 4
40084bc5:	31a8      	l32i.n	a10, a1, 12
40084bc7:	c0a8a0        	sub	a10, a8, a10
40084bca:	eeee81        	l32r	a8, 40080784 <_init_end+0x384>
40084bcd:	b28a80        	mulsh	a8, a10, a8
40084bd0:	319280        	srai	a9, a8, 18
40084bd3:	318fa0        	srai	a8, a10, 31
40084bd6:	c08980        	sub	a8, a9, a8
40084bd9:	bb8a      	add.n	a11, a11, a8
40084bdb:	02a8      	l32i.n	a10, a2, 0
40084bdd:	fff425        	call8	40084b20 <pthread_mutex_lock_internal>
40084be0:	0cba66        	bnei	a10, 16, 40084bf0 <pthread_mutex_timedlock+0x58>
40084be3:	74a022        	movi	a2, 116
40084be6:	f01d      	retw.n
40084be8:	621c      	movi.n	a2, 22
40084bea:	f01d      	retw.n
40084bec:	0a2d      	mov.n	a2, a10
40084bee:	f01d      	retw.n
40084bf0:	0a2d      	mov.n	a2, a10
40084bf2:	f01d      	retw.n

40084bf4 <pthread_mutex_trylock>:
40084bf4:	004136        	entry	a1, 32
40084bf7:	013216        	beqz	a2, 40084c0e <pthread_mutex_trylock+0x1a>
40084bfa:	20a220        	or	a10, a2, a2
40084bfd:	6500e5        	call8	400e9c0c <pthread_mutex_init_if_static>
40084c00:	00ea56        	bnez	a10, 40084c12 <pthread_mutex_trylock+0x1e>
40084c03:	0b0c      	movi.n	a11, 0
40084c05:	02a8      	l32i.n	a10, a2, 0
40084c07:	fff1a5        	call8	40084b20 <pthread_mutex_lock_internal>
40084c0a:	0a2d      	mov.n	a2, a10
40084c0c:	f01d      	retw.n
40084c0e:	621c      	movi.n	a2, 22
40084c10:	f01d      	retw.n
40084c12:	0a2d      	mov.n	a2, a10
40084c14:	f01d      	retw.n
	...

40084c18 <pthread_mutex_unlock>:
40084c18:	004136        	entry	a1, 32
40084c1b:	046216        	beqz	a2, 40084c65 <pthread_mutex_unlock+0x4d>
40084c1e:	002222        	l32i	a2, a2, 0
40084c21:	044216        	beqz	a2, 40084c69 <pthread_mutex_unlock+0x51>
40084c24:	012282        	l32i	a8, a2, 4
40084c27:	880b      	addi.n	a8, a8, -1
40084c29:	0c28f6        	bgeui	a8, 2, 40084c39 <pthread_mutex_unlock+0x21>
40084c2c:	02a8      	l32i.n	a10, a2, 0
40084c2e:	02b225        	call8	40087750 <xQueueGetMutexHolder>
40084c31:	0a3d      	mov.n	a3, a10
40084c33:	03d765        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40084c36:	3393a7        	bne	a3, a10, 40084c6d <pthread_mutex_unlock+0x55>
40084c39:	1288      	l32i.n	a8, a2, 4
40084c3b:	071866        	bnei	a8, 1, 40084c46 <pthread_mutex_unlock+0x2e>
40084c3e:	02a8      	l32i.n	a10, a2, 0
40084c40:	02d425        	call8	40087984 <xQueueGiveMutexRecursive>
40084c43:	000306        	j	40084c53 <pthread_mutex_unlock+0x3b>
40084c46:	00a0d2        	movi	a13, 0
40084c49:	20cdd0        	or	a12, a13, a13
40084c4c:	0dbd      	mov.n	a11, a13
40084c4e:	02a8      	l32i.n	a10, a2, 0
40084c50:	02b925        	call8	400877e4 <xQueueGenericSend>
40084c53:	1a1a26        	beqi	a10, 1, 40084c71 <pthread_mutex_unlock+0x59>
40084c56:	eeccd1        	l32r	a13, 40080788 <_init_end+0x388>
40084c59:	eeccc1        	l32r	a12, 4008078c <_init_end+0x38c>
40084c5c:	84a2b2        	movi	a11, 0x284
40084c5f:	eecca1        	l32r	a10, 40080790 <_init_end+0x390>
40084c62:	55e6a5        	call8	400daacc <__assert_func>
40084c65:	621c      	movi.n	a2, 22
40084c67:	f01d      	retw.n
40084c69:	621c      	movi.n	a2, 22
40084c6b:	f01d      	retw.n
40084c6d:	120c      	movi.n	a2, 1
40084c6f:	f01d      	retw.n
40084c71:	020c      	movi.n	a2, 0
40084c73:	f01d      	retw.n
40084c75:	000000        	ill

40084c78 <coex_bt_request>:
40084c78:	004136        	entry	a1, 32
40084c7b:	20b220        	or	a11, a2, a2
40084c7e:	20d440        	or	a13, a4, a4
40084c81:	20c330        	or	a12, a3, a3
40084c84:	0a0c      	movi.n	a10, 0
40084c86:	002165        	call8	40084e9c <coex_core_request>
40084c89:	0a2d      	mov.n	a2, a10
40084c8b:	f01d      	retw.n
40084c8d:	000000        	ill

40084c90 <coex_bt_release>:
40084c90:	004136        	entry	a1, 32
40084c93:	20b220        	or	a11, a2, a2
40084c96:	00a0a2        	movi	a10, 0
40084c99:	002aa5        	call8	40084f44 <coex_core_release>
40084c9c:	202aa0        	or	a2, a10, a10
40084c9f:	f01d      	retw.n
40084ca1:	000000        	ill

40084ca4 <coex_bb_reset_lock>:
40084ca4:	004136        	entry	a1, 32
40084ca7:	0037a5        	call8	40085020 <coex_core_bb_reset_lock>
40084caa:	0a2d      	mov.n	a2, a10
40084cac:	f01d      	retw.n
	...

40084cb0 <coex_bb_reset_unlock>:
40084cb0:	004136        	entry	a1, 32
40084cb3:	02ad      	mov.n	a10, a2
40084cb5:	003be5        	call8	40085074 <coex_core_bb_reset_unlock>
40084cb8:	f01d      	retw.n
40084cba:	940000        	extui	a0, a0, 0, 10
40084cbd:	ef          	.byte 0xef
40084cbe:	3ffb      	addi.n	a3, a15, 15
40084cc0:	ef08      	l32i.n	a0, a15, 56
40084cc2:	3ffb      	addi.n	a3, a15, 15
40084cc4:	008136        	entry	a1, 64
40084cc7:	fffd31        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084cca:	090c      	movi.n	a9, 0
40084ccc:	03a122        	movi	a2, 0x103
40084ccf:	2388      	l32i.n	a8, a3, 8
40084cd1:	0199      	s32i.n	a9, a1, 0
40084cd3:	491897        	beq	a8, a9, 40084d20 <coex_bb_reset_unlock+0x70>
40084cd6:	f03d      	nop.n
40084cd8:	f03d      	nop.n
40084cda:	f03d      	nop.n
40084cdc:	f03d      	nop.n
40084cde:	fff821        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
40084ce1:	0288      	l32i.n	a8, a2, 0
40084ce3:	c8a8      	l32i.n	a10, a8, 48
40084ce5:	000ae0        	callx8	a10
40084ce8:	da9c      	beqz.n	a10, 40084d09 <coex_bb_reset_unlock+0x59>
40084cea:	01bd      	mov.n	a11, a1
40084cec:	0288      	l32i.n	a8, a2, 0
40084cee:	23a8      	l32i.n	a10, a3, 8
40084cf0:	8838      	l32i.n	a3, a8, 32
40084cf2:	0003e0        	callx8	a3
40084cf5:	0138      	l32i.n	a3, a1, 0
40084cf7:	939c      	beqz.n	a3, 40084d14 <coex_bb_reset_unlock+0x64>
40084cf9:	0228      	l32i.n	a2, a2, 0
40084cfb:	5228      	l32i.n	a2, a2, 20
40084cfd:	41a9      	s32i.n	a10, a1, 16
40084cff:	0002e0        	callx8	a2
40084d02:	41a8      	l32i.n	a10, a1, 16
40084d04:	000306        	j	40084d14 <coex_bb_reset_unlock+0x64>
40084d07:	280000        	lsi	f0, a0, 160
40084d0a:	fb7c02        	lsi	f0, a12, 0x3ec
40084d0d:	a228      	l32i.n	a2, a2, 40
40084d0f:	23a8      	l32i.n	a10, a3, 8
40084d11:	0002e0        	callx8	a2
40084d14:	aa0b      	addi.n	a10, a10, -1
40084d16:	020c      	movi.n	a2, 0
40084d18:	130c      	movi.n	a3, 1
40084d1a:	9323a0        	movnez	a2, a3, a10
40084d1d:	602020        	neg	a2, a2
40084d20:	f01d      	retw.n
40084d22:	440000        	extui	a0, a0, 0, 5
40084d25:	407c      	movi.n	a0, -12
40084d27:	3f          	.byte 0x3f
40084d28:	ef0c      	movi.n	a15, 14
40084d2a:	3ffb      	addi.n	a3, a15, 15

40084d2c <coex_core_ts_start>:
40084d2c:	004136        	entry	a1, 32
40084d2f:	ffe331        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084d32:	742020        	extui	a2, a2, 0, 8
40084d35:	c8a042        	movi	a4, 200
40084d38:	050c      	movi.n	a5, 0
40084d3a:	13a8      	l32i.n	a10, a3, 4
40084d3c:	000346        	j	40084d4d <coex_core_ts_start+0x21>
40084d3f:	13a800        	lsi	f0, a8, 76
40084d42:	020c      	movi.n	a2, 0
40084d44:	000146        	j	40084d4d <coex_core_ts_start+0x21>
40084d47:	000000        	ill
40084d4a:	01a022        	movi	a2, 1
40084d4d:	014a56        	bnez	a10, 40084d65 <coex_core_ts_start+0x39>
40084d50:	0089a5        	call8	400855ec <coex_time_now>
40084d53:	0abd      	mov.n	a11, a10
40084d55:	fff3c1        	l32r	a12, 40084d24 <coex_bb_reset_unlock+0x74>
40084d58:	d4a0d2        	movi	a13, 212
40084d5b:	fff3a1        	l32r	a10, 40084d28 <coex_bb_reset_unlock+0x78>
40084d5e:	66d765        	call8	400ebad4 <coexist_printf>
40084d61:	ffff06        	j	40084d61 <coex_core_ts_start+0x35>
40084d64:	b2cc00        	mulsh	a12, a12, a0
40084d67:	0328      	l32i.n	a2, a3, 0
40084d69:	728c      	beqz.n	a2, 40084d74 <coex_core_ts_start+0x48>
40084d6b:	010a82        	l8ui	a8, a10, 1
40084d6e:	010222        	l8ui	a2, a2, 1
40084d71:	5bb287        	bgeu	a2, a8, 40084dd0 <coex_core_ts_start+0xa4>
40084d74:	008fa5        	call8	40085670 <coex_timer_ts_end_disalarm>
40084d77:	0123a2        	l32i	a10, a3, 4
40084d7a:	000a22        	l8ui	a2, a10, 0
40084d7d:	201266        	bnei	a2, 1, 40084da1 <coex_core_ts_start+0x75>
40084d80:	002322        	l32i	a2, a3, 0
40084d83:	005216        	beqz	a2, 40084d8c <coex_core_ts_start+0x60>
40084d86:	000222        	l8ui	a2, a2, 0
40084d89:	0b1226        	beqi	a2, 1, 40084d98 <coex_core_ts_start+0x6c>
40084d8c:	3328      	l32i.n	a2, a3, 12
40084d8e:	061266        	bnei	a2, 1, 40084d98 <coex_core_ts_start+0x6c>
40084d91:	02ad      	mov.n	a10, a2
40084d93:	0042a5        	call8	400851bc <coex_force_wifi_mode>
40084d96:	13a8      	l32i.n	a10, a3, 4
40084d98:	5328      	l32i.n	a2, a3, 20
40084d9a:	a2dc      	bnez.n	a2, 40084db8 <coex_core_ts_start+0x8c>
40084d9c:	000906        	j	40084dc4 <coex_core_ts_start+0x98>
40084d9f:	dc0000        	lsi	f0, a0, 0x370
40084da2:	0328f2        	l32i	a15, a8, 12
40084da5:	00a216        	beqz	a2, 40084db3 <coex_core_ts_start+0x87>
40084da8:	000222        	l8ui	a2, a2, 0
40084dab:	004216        	beqz	a2, 40084db3 <coex_core_ts_start+0x87>
40084dae:	007065        	call8	400854b4 <coex_unforce_wifi_mode>
40084db1:	13a8      	l32i.n	a10, a3, 4
40084db3:	4328      	l32i.n	a2, a3, 16
40084db5:	00b216        	beqz	a2, 40084dc4 <coex_core_ts_start+0x98>
40084db8:	061ab2        	l16ui	a11, a10, 12
40084dbb:	020aa2        	l8ui	a10, a10, 2
40084dbe:	0002e0        	callx8	a2
40084dc1:	0123a2        	l32i	a10, a3, 4
40084dc4:	061a82        	l16ui	a8, a10, 12
40084dc7:	01c882        	addi	a8, a8, 1
40084dca:	065a82        	s16i	a8, a10, 12
40084dcd:	0063a2        	s32i	a10, a3, 0
40084dd0:	00c4a5        	call8	40085a1c <coex_arbit_next>
40084dd3:	13a9      	s32i.n	a10, a3, 4
40084dd5:	048a16        	beqz	a10, 40084e21 <coex_core_ts_start+0xf5>
40084dd8:	008125        	call8	400855ec <coex_time_now>
40084ddb:	1328      	l32i.n	a2, a3, 4
40084ddd:	12b8      	l32i.n	a11, a2, 4
40084ddf:	022fe5        	call8	400870dc <coex_time_diff>
40084de2:	0a2d      	mov.n	a2, a10
40084de4:	0224a7        	blt	a4, a10, 40084dea <coex_core_ts_start+0xbe>
40084de7:	ffd546        	j	40084d40 <coex_core_ts_start+0x14>
40084dea:	008025        	call8	400855ec <coex_time_now>
40084ded:	002382        	l32i	a8, a3, 0
40084df0:	0228b2        	l32i	a11, a8, 8
40084df3:	022ea5        	call8	400870dc <coex_time_diff>
40084df6:	0aa4a7        	bge	a4, a10, 40084e04 <coex_core_ts_start+0xd8>
40084df9:	008525        	call8	4008564c <coex_timer_ts_end_alarm>
40084dfc:	02ad      	mov.n	a10, a2
40084dfe:	0089a5        	call8	40085698 <coex_timer_ts_start_alarm>
40084e01:	f01d      	retw.n
40084e03:	232200        	sext	a2, a2, 7
40084e06:	022200        	andb	b2, b2, b0
40084e09:	126600        	andbc	b6, b6, b0
40084e0c:	6a6502        	s32i	a0, a5, 0x1a8
40084e0f:	13a800        	lsi	f0, a8, 76
40084e12:	0359      	s32i.n	a5, a3, 0
40084e14:	00c365        	call8	40085a4c <coex_arbit_clean_overtime_until>
40084e17:	00bda5        	call8	400859f0 <coex_arbit_first>
40084e1a:	13a9      	s32i.n	a10, a3, 4
40084e1c:	f2aa56        	bnez	a10, 40084d4a <coex_core_ts_start+0x1e>
40084e1f:	f01d      	retw.n
40084e21:	007ca5        	call8	400855ec <coex_time_now>
40084e24:	002322        	l32i	a2, a3, 0
40084e27:	22b8      	l32i.n	a11, a2, 8
40084e29:	022b25        	call8	400870dc <coex_time_diff>
40084e2c:	04a4a7        	bge	a4, a10, 40084e34 <coex_core_ts_start+0x108>
40084e2f:	0081e5        	call8	4008564c <coex_timer_ts_end_alarm>
40084e32:	f01d      	retw.n
40084e34:	002322        	l32i	a2, a3, 0
40084e37:	000222        	l8ui	a2, a2, 0
40084e3a:	021266        	bnei	a2, 1, 40084e40 <coex_core_ts_start+0x114>
40084e3d:	006765        	call8	400854b4 <coex_unforce_wifi_mode>
40084e40:	13a8      	l32i.n	a10, a3, 4
40084e42:	0359      	s32i.n	a5, a3, 0
40084e44:	00c065        	call8	40085a4c <coex_arbit_clean_overtime_until>
40084e47:	00baa5        	call8	400859f0 <coex_arbit_first>
40084e4a:	13a9      	s32i.n	a10, a3, 4
40084e4c:	efaa56        	bnez	a10, 40084d4a <coex_core_ts_start+0x1e>
40084e4f:	f01d      	retw.n
40084e51:	000000        	ill
40084e54:	004136        	entry	a1, 32
40084e57:	008665        	call8	400856bc <coex_timer_ts_start_disalarm>
40084e5a:	008165        	call8	40085670 <coex_timer_ts_end_disalarm>
40084e5d:	00b925        	call8	400859f0 <coex_arbit_first>
40084e60:	0a3d      	mov.n	a3, a10
40084e62:	03a122        	movi	a2, 0x103
40084e65:	baac      	beqz.n	a10, 40084e94 <coex_core_ts_start+0x168>
40084e67:	1aa8      	l32i.n	a10, a10, 4
40084e69:	f4a1b2        	movi	a11, 0x1f4
40084e6c:	007ae5        	call8	4008561c <coex_time_is_in_time>
40084e6f:	0a2d      	mov.n	a2, a10
40084e71:	ca8c      	beqz.n	a10, 40084e81 <coex_core_ts_start+0x155>
40084e73:	ff9221        	l32r	a2, 40084cbc <coex_bb_reset_unlock+0xc>
40084e76:	1a0c      	movi.n	a10, 1
40084e78:	1239      	s32i.n	a3, a2, 4
40084e7a:	ffeb25        	call8	40084d2c <coex_core_ts_start>
40084e7d:	020c      	movi.n	a2, 0
40084e7f:	f01d      	retw.n
40084e81:	ff8e81        	l32r	a8, 40084cbc <coex_bb_reset_unlock+0xc>
40084e84:	0068a2        	s32i	a10, a8, 0
40084e87:	1839      	s32i.n	a3, a8, 4
40084e89:	007625        	call8	400855ec <coex_time_now>
40084e8c:	13b8      	l32i.n	a11, a3, 4
40084e8e:	0224e5        	call8	400870dc <coex_time_diff>
40084e91:	008065        	call8	40085698 <coex_timer_ts_start_alarm>
40084e94:	f01d      	retw.n
40084e96:	180000        	lsxp	f0, a0, a0
40084e99:	ef          	.byte 0xef
40084e9a:	3ffb      	addi.n	a3, a15, 15

40084e9c <coex_core_request>:
40084e9c:	008136        	entry	a1, 64
40084e9f:	004122        	s8i	a2, a1, 0
40084ea2:	0020c0        	memw
40084ea5:	482c      	movi.n	a8, 36
40084ea7:	ffa022        	movi	a2, 255
40084eaa:	0c3837        	bltu	a8, a3, 40084eba <coex_core_request+0x1e>
40084ead:	902330        	addx2	a2, a3, a3
40084eb0:	f03d      	nop.n
40084eb2:	fff981        	l32r	a8, 40084e98 <coex_core_ts_start+0x16c>
40084eb5:	282a      	add.n	a2, a8, a2
40084eb7:	010222        	l8ui	a2, a2, 1
40084eba:	545a      	add.n	a5, a4, a5
40084ebc:	014122        	s8i	a2, a1, 1
40084ebf:	020c      	movi.n	a2, 0
40084ec1:	024132        	s8i	a3, a1, 2
40084ec4:	0020c0        	memw
40084ec7:	007265        	call8	400855ec <coex_time_now>
40084eca:	aa4a      	add.n	a10, a10, a4
40084ecc:	0161a2        	s32i	a10, a1, 4
40084ecf:	0071e5        	call8	400855ec <coex_time_now>
40084ed2:	a5aa      	add.n	a10, a5, a10
40084ed4:	21a9      	s32i.n	a10, a1, 8
40084ed6:	065122        	s16i	a2, a1, 12
40084ed9:	0020c0        	memw
40084edc:	ffde65        	call8	40084cc4 <coex_bb_reset_unlock+0x14>
40084edf:	05ba56        	bnez	a10, 40084f3e <coex_core_request+0xa2>
40084ee2:	03a122        	movi	a2, 0x103
40084ee5:	ff7531        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084ee8:	3348      	l32i.n	a4, a3, 12
40084eea:	c48c      	beqz.n	a4, 40084efa <coex_core_request+0x5e>
40084eec:	01ad      	mov.n	a10, a1
40084eee:	008f25        	call8	400857e0 <coex_arbit_insert>
40084ef1:	0a2d      	mov.n	a2, a10
40084ef3:	3acc      	bnez.n	a10, 40084efa <coex_core_request+0x5e>
40084ef5:	fff5e5        	call8	40084e54 <coex_core_ts_start+0x128>
40084ef8:	0a2d      	mov.n	a2, a10
40084efa:	050c      	movi.n	a5, 0
40084efc:	2348      	l32i.n	a4, a3, 8
40084efe:	4159      	s32i.n	a5, a1, 16
40084f00:	3c1457        	beq	a4, a5, 40084f40 <coex_core_request+0xa4>
40084f03:	f03d      	nop.n
40084f05:	f03d      	nop.n
40084f07:	f03d      	nop.n
40084f09:	f03d      	nop.n
40084f0b:	ff6d41        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40084f0e:	0458      	l32i.n	a5, a4, 0
40084f10:	0c25a2        	l32i	a10, a5, 48
40084f13:	000ae0        	callx8	a10
40084f16:	8a9c      	beqz.n	a10, 40084f32 <coex_core_request+0x96>
40084f18:	10c1b2        	addi	a11, a1, 16
40084f1b:	0458      	l32i.n	a5, a4, 0
40084f1d:	23a8      	l32i.n	a10, a3, 8
40084f1f:	092532        	l32i	a3, a5, 36
40084f22:	0003e0        	callx8	a3
40084f25:	4138      	l32i.n	a3, a1, 16
40084f27:	539c      	beqz.n	a3, 40084f40 <coex_core_request+0xa4>
40084f29:	0438      	l32i.n	a3, a4, 0
40084f2b:	5338      	l32i.n	a3, a3, 20
40084f2d:	0003e0        	callx8	a3
40084f30:	f01d      	retw.n
40084f32:	0448      	l32i.n	a4, a4, 0
40084f34:	23a8      	l32i.n	a10, a3, 8
40084f36:	0b2432        	l32i	a3, a4, 44
40084f39:	0003e0        	callx8	a3
40084f3c:	f01d      	retw.n
40084f3e:	f27c      	movi.n	a2, -1
40084f40:	f01d      	retw.n
	...

40084f44 <coex_core_release>:
40084f44:	008136        	entry	a1, 64
40084f47:	004122        	s8i	a2, a1, 0
40084f4a:	0020c0        	memw
40084f4d:	24a082        	movi	a8, 36
40084f50:	ffa022        	movi	a2, 255
40084f53:	0e3837        	bltu	a8, a3, 40084f65 <coex_core_release+0x21>
40084f56:	902330        	addx2	a2, a3, a3
40084f59:	0020f0        	nop
40084f5c:	ffcf41        	l32r	a4, 40084e98 <coex_core_ts_start+0x16c>
40084f5f:	802420        	add	a2, a4, a2
40084f62:	010222        	l8ui	a2, a2, 1
40084f65:	014122        	s8i	a2, a1, 1
40084f68:	024132        	s8i	a3, a1, 2
40084f6b:	0020c0        	memw
40084f6e:	ffd565        	call8	40084cc4 <coex_bb_reset_unlock+0x14>
40084f71:	099a56        	bnez	a10, 4008500e <coex_core_release+0xca>
40084f74:	03a122        	movi	a2, 0x103
40084f77:	ff5131        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084f7a:	3388      	l32i.n	a8, a3, 12
40084f7c:	049816        	beqz	a8, 40084fc9 <coex_core_release+0x85>
40084f7f:	01ad      	mov.n	a10, a1
40084f81:	00a065        	call8	40085988 <coex_arbit_delete>
40084f84:	0a2d      	mov.n	a2, a10
40084f86:	03fa56        	bnez	a10, 40084fc9 <coex_core_release+0x85>
40084f89:	0328      	l32i.n	a2, a3, 0
40084f8b:	729c      	beqz.n	a2, 40084fa6 <coex_core_release+0x62>
40084f8d:	020142        	l8ui	a4, a1, 2
40084f90:	020222        	l8ui	a2, a2, 2
40084f93:	0f9427        	bne	a4, a2, 40084fa6 <coex_core_release+0x62>
40084f96:	000122        	l8ui	a2, a1, 0
40084f99:	021266        	bnei	a2, 1, 40084f9f <coex_core_release+0x5b>
40084f9c:	005165        	call8	400854b4 <coex_unforce_wifi_mode>
40084f9f:	020c      	movi.n	a2, 0
40084fa1:	006ce5        	call8	40085670 <coex_timer_ts_end_disalarm>
40084fa4:	0329      	s32i.n	a2, a3, 0
40084fa6:	f03d      	nop.n
40084fa8:	f03d      	nop.n
40084faa:	f03d      	nop.n
40084fac:	f03d      	nop.n
40084fae:	1328      	l32i.n	a2, a3, 4
40084fb0:	010216        	beqz	a2, 40084fc4 <coex_core_release+0x80>
40084fb3:	020142        	l8ui	a4, a1, 2
40084fb6:	020222        	l8ui	a2, a2, 2
40084fb9:	079427        	bne	a4, a2, 40084fc4 <coex_core_release+0x80>
40084fbc:	00a022        	movi	a2, 0
40084fbf:	006fe5        	call8	400856bc <coex_timer_ts_start_disalarm>
40084fc2:	1329      	s32i.n	a2, a3, 4
40084fc4:	ffe8e5        	call8	40084e54 <coex_core_ts_start+0x128>
40084fc7:	0a2d      	mov.n	a2, a10
40084fc9:	090c      	movi.n	a9, 0
40084fcb:	2388      	l32i.n	a8, a3, 8
40084fcd:	4199      	s32i.n	a9, a1, 16
40084fcf:	3d1897        	beq	a8, a9, 40085010 <coex_core_release+0xcc>
40084fd2:	f03d      	nop.n
40084fd4:	f03d      	nop.n
40084fd6:	f03d      	nop.n
40084fd8:	f03d      	nop.n
40084fda:	ff3941        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40084fdd:	002482        	l32i	a8, a4, 0
40084fe0:	0c28a2        	l32i	a10, a8, 48
40084fe3:	000ae0        	callx8	a10
40084fe6:	8a9c      	beqz.n	a10, 40085002 <coex_core_release+0xbe>
40084fe8:	10c1b2        	addi	a11, a1, 16
40084feb:	0488      	l32i.n	a8, a4, 0
40084fed:	23a8      	l32i.n	a10, a3, 8
40084fef:	092832        	l32i	a3, a8, 36
40084ff2:	0003e0        	callx8	a3
40084ff5:	4138      	l32i.n	a3, a1, 16
40084ff7:	539c      	beqz.n	a3, 40085010 <coex_core_release+0xcc>
40084ff9:	0438      	l32i.n	a3, a4, 0
40084ffb:	5338      	l32i.n	a3, a3, 20
40084ffd:	0003e0        	callx8	a3
40085000:	f01d      	retw.n
40085002:	0448      	l32i.n	a4, a4, 0
40085004:	23a8      	l32i.n	a10, a3, 8
40085006:	0b2432        	l32i	a3, a4, 44
40085009:	0003e0        	callx8	a3
4008500c:	f01d      	retw.n
4008500e:	f27c      	movi.n	a2, -1
40085010:	f01d      	retw.n
40085012:	870000        	lsi	f0, a0, 0x21c
40085015:	ef          	.byte 0xef
40085016:	3ffb      	addi.n	a3, a15, 15
40085018:	ef88      	l32i.n	a8, a15, 56
4008501a:	3ffb      	addi.n	a3, a15, 15
4008501c:	ef8c      	beqz.n	a15, 4008502e <coex_core_bb_reset_lock+0xe>
4008501e:	3ffb      	addi.n	a3, a15, 15

40085020 <coex_core_bb_reset_lock>:
40085020:	004136        	entry	a1, 32
40085023:	fffd81        	l32r	a8, 40085018 <coex_core_release+0xd4>
40085026:	fffb21        	l32r	a2, 40085014 <coex_core_release+0xd0>
40085029:	08a8      	l32i.n	a10, a8, 0
4008502b:	080c      	movi.n	a8, 0
4008502d:	004282        	s8i	a8, a2, 0
40085030:	0020c0        	memw
40085033:	1adc      	bnez.n	a10, 40085048 <coex_core_bb_reset_lock+0x28>
40085035:	f03d      	nop.n
40085037:	f03d      	nop.n
40085039:	f03d      	nop.n
4008503b:	f03d      	nop.n
4008503d:	fff781        	l32r	a8, 4008501c <coex_core_release+0xd8>
40085040:	08a8      	l32i.n	a10, a8, 0
40085042:	5adc      	bnez.n	a10, 4008505b <coex_core_bb_reset_lock+0x3b>
40085044:	0003c6        	j	40085057 <coex_core_bb_reset_lock+0x37>
40085047:	1e8100        	f64sexp	a8, a1, a0
4008504a:	ff          	.byte 0xff
4008504b:	0b0c      	movi.n	a11, 0
4008504d:	0888      	l32i.n	a8, a8, 0
4008504f:	8888      	l32i.n	a8, a8, 32
40085051:	0008e0        	callx8	a8
40085054:	dd1a26        	beqi	a10, 1, 40085035 <coex_core_bb_reset_lock+0x15>
40085057:	020c      	movi.n	a2, 0
40085059:	f01d      	retw.n
4008505b:	ff1981        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
4008505e:	190c      	movi.n	a9, 1
40085060:	0888      	l32i.n	a8, a8, 0
40085062:	3888      	l32i.n	a8, a8, 12
40085064:	004292        	s8i	a9, a2, 0
40085067:	0020c0        	memw
4008506a:	0008e0        	callx8	a8
4008506d:	0a2d      	mov.n	a2, a10
4008506f:	f01d      	retw.n
40085071:	000000        	ill

40085074 <coex_core_bb_reset_unlock>:
40085074:	004136        	entry	a1, 32
40085077:	ffe981        	l32r	a8, 4008501c <coex_core_release+0xd8>
4008507a:	08a8      	l32i.n	a10, a8, 0
4008507c:	4a9c      	beqz.n	a10, 40085094 <coex_core_bb_reset_unlock+0x20>
4008507e:	ffe581        	l32r	a8, 40085014 <coex_core_release+0xd0>
40085081:	000882        	l8ui	a8, a8, 0
40085084:	c88c      	beqz.n	a8, 40085094 <coex_core_bb_reset_unlock+0x20>
40085086:	02bd      	mov.n	a11, a2
40085088:	ff0e21        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
4008508b:	002222        	l32i	a2, a2, 0
4008508e:	042222        	l32i	a2, a2, 16
40085091:	0002e0        	callx8	a2
40085094:	ffe181        	l32r	a8, 40085018 <coex_core_release+0xd4>
40085097:	08a8      	l32i.n	a10, a8, 0
40085099:	ba8c      	beqz.n	a10, 400850a8 <coex_core_bb_reset_unlock+0x34>
4008509b:	0b0c      	movi.n	a11, 0
4008509d:	ff0881        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400850a0:	0888      	l32i.n	a8, a8, 0
400850a2:	092882        	l32i	a8, a8, 36
400850a5:	0008e0        	callx8	a8
400850a8:	f01d      	retw.n
400850aa:	500000        	lsi	f0, a0, 0x140
400850ad:	3ff712        	s32ri	a1, a7, 252
400850b0:	f71254        	lsi	f5, a2, 0x3dc
400850b3:	3f          	.byte 0x3f
400850b4:	00cc      	bnez.n	a0, 400850b8 <coex_core_bb_reset_unlock+0x44>
400850b6:	a03ff0        	addx4	a3, a15, a15
400850b9:	3ff510        	f64cmph	a15, a5, a1, 3
400850bc:	fb0000        	f64addc	a0, a0, 0, 0
400850bf:	3f          	.byte 0x3f
400850c0:	030000        	rsr.lbeg	a0
400850c3:	413600        	srli	a3, a0, 6
400850c6:	fe3100        	f64iter	a3, a1, a0, 3, 1
400850c9:	fe          	.byte 0xfe
400850ca:	ffd421        	l32r	a2, 4008501c <coex_core_release+0xd8>
400850cd:	002382        	l32i	a8, a3, 0
400850d0:	02a8      	l32i.n	a10, a2, 0
400850d2:	032882        	l32i	a8, a8, 12
400850d5:	0008e0        	callx8	a8
400850d8:	8da0b2        	movi	a11, 141
400850db:	80a0c2        	movi	a12, 128
400850de:	fff381        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
400850e1:	fff391        	l32r	a9, 400850b0 <coex_core_bb_reset_unlock+0x3c>
400850e4:	0020c0        	memw
400850e7:	08b9      	s32i.n	a11, a8, 0
400850e9:	f03d      	nop.n
400850eb:	f03d      	nop.n
400850ed:	f03d      	nop.n
400850ef:	f03d      	nop.n
400850f1:	0020c0        	memw
400850f4:	0988      	l32i.n	a8, a9, 0
400850f6:	ef88c7        	bany	a8, a12, 400850e9 <coex_core_bb_reset_unlock+0x75>
400850f9:	ffee91        	l32r	a9, 400850b4 <coex_core_bb_reset_unlock+0x40>
400850fc:	098d      	mov.n	a8, a9
400850fe:	ed16b1        	l32r	a11, 40080558 <_init_end+0x158>
40085101:	0063c0        	rsil	a12, 3
40085104:	0bb8      	l32i.n	a11, a11, 0
40085106:	0888      	l32i.n	a8, a8, 0
40085108:	13e6c0        	wsr.ps	a12
4008510b:	002010        	rsync
4008510e:	f6feb1        	l32r	a11, 40082d08 <ram_enable_agc+0x2c>
40085111:	10b8b0        	and	a11, a8, a11
40085114:	ed21c1        	l32r	a12, 40080598 <_init_end+0x198>
40085117:	0c8d      	mov.n	a8, a12
40085119:	0020c0        	memw
4008511c:	09b9      	s32i.n	a11, a9, 0
4008511e:	ed0eb1        	l32r	a11, 40080558 <_init_end+0x158>
40085121:	0063d0        	rsil	a13, 3
40085124:	0bb8      	l32i.n	a11, a11, 0
40085126:	0888      	l32i.n	a8, a8, 0
40085128:	13e6d0        	wsr.ps	a13
4008512b:	002010        	rsync
4008512e:	8b0c      	movi.n	a11, 8
40085130:	20b8b0        	or	a11, a8, a11
40085133:	0c8d      	mov.n	a8, a12
40085135:	0020c0        	memw
40085138:	0cb9      	s32i.n	a11, a12, 0
4008513a:	ed07b1        	l32r	a11, 40080558 <_init_end+0x158>
4008513d:	0063d0        	rsil	a13, 3
40085140:	0bb8      	l32i.n	a11, a11, 0
40085142:	0888      	l32i.n	a8, a8, 0
40085144:	13e6d0        	wsr.ps	a13
40085147:	002010        	rsync
4008514a:	7b7c      	movi.n	a11, -9
4008514c:	10b8b0        	and	a11, a8, a11
4008514f:	098d      	mov.n	a8, a9
40085151:	ffd9d1        	l32r	a13, 400850b8 <coex_core_bb_reset_unlock+0x44>
40085154:	0020c0        	memw
40085157:	0cb9      	s32i.n	a11, a12, 0
40085159:	f03d      	nop.n
4008515b:	f03d      	nop.n
4008515d:	f03d      	nop.n
4008515f:	f03d      	nop.n
40085161:	0020c0        	memw
40085164:	0dc8      	l32i.n	a12, a13, 0
40085166:	e4b0c0        	extui	a11, a12, 0, 15
40085169:	ffd4c1        	l32r	a12, 400850bc <coex_core_bb_reset_unlock+0x48>
4008516c:	20cbc0        	or	a12, a11, a12
4008516f:	0020c0        	memw
40085172:	0dc9      	s32i.n	a12, a13, 0
40085174:	ecf9b1        	l32r	a11, 40080558 <_init_end+0x158>
40085177:	0063c0        	rsil	a12, 3
4008517a:	0bb8      	l32i.n	a11, a11, 0
4008517c:	0888      	l32i.n	a8, a8, 0
4008517e:	13e6c0        	wsr.ps	a12
40085181:	002010        	rsync
40085184:	0abd      	mov.n	a11, a10
40085186:	f03d      	nop.n
40085188:	f03d      	nop.n
4008518a:	0338      	l32i.n	a3, a3, 0
4008518c:	ffcda1        	l32r	a10, 400850c0 <coex_core_bb_reset_unlock+0x4c>
4008518f:	2088a0        	or	a8, a8, a10
40085192:	02a8      	l32i.n	a10, a2, 0
40085194:	4328      	l32i.n	a2, a3, 16
40085196:	0020c0        	memw
40085199:	0989      	s32i.n	a8, a9, 0
4008519b:	0002e0        	callx8	a2
4008519e:	f01d      	retw.n
400851a0:	61a8      	l32i.n	a10, a1, 24
400851a2:	ac0000        	lsi	f0, a0, 0x2b0
400851a5:	ef          	.byte 0xef
400851a6:	3ffb      	addi.n	a3, a15, 15
400851a8:	f51110        	extui	a1, a1, 17, 16
400851ab:	3f          	.byte 0x3f
400851ac:	c00000        	sub	a0, a0, a0
400851af:	110c07        	bnone	a12, a0, 400851c4 <coex_force_wifi_mode+0x8>
400851b2:	903ff5        	call12	400155b0 <ea_prog_timer+0x628>
400851b5:	ef          	.byte 0xef
400851b6:	3ffb      	addi.n	a3, a15, 15
400851b8:	000000        	ill
400851bb:	f8          	.byte 0xf8

400851bc <coex_force_wifi_mode>:
400851bc:	006136        	entry	a1, 48
400851bf:	2129      	s32i.n	a2, a1, 8
400851c1:	0042a5        	call8	400855ec <coex_time_now>
400851c4:	81a042        	movi	a4, 129
400851c7:	01a9      	s32i.n	a10, a1, 0
400851c9:	f03d      	nop.n
400851cb:	f03d      	nop.n
400851cd:	f03d      	nop.n
400851cf:	f03d      	nop.n
400851d1:	febb21        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
400851d4:	ff9231        	l32r	a3, 4008501c <coex_core_release+0xd8>
400851d7:	fff461        	l32r	a6, 400851a8 <coex_core_bb_reset_unlock+0x134>
400851da:	fff451        	l32r	a5, 400851ac <coex_core_bb_reset_unlock+0x138>
400851dd:	000dc6        	j	40085218 <coex_force_wifi_mode+0x5c>
400851e0:	0040a5        	call8	400855ec <coex_time_now>
400851e3:	002182        	l32i	a8, a1, 0
400851e6:	c0aa80        	sub	a10, a10, a8
400851e9:	ffed91        	l32r	a9, 400851a0 <coex_core_bb_reset_unlock+0x12c>
400851ec:	28b9a7        	bgeu	a9, a10, 40085218 <coex_force_wifi_mode+0x5c>
400851ef:	ffed41        	l32r	a4, 400851a4 <coex_core_bb_reset_unlock+0x130>
400851f2:	016142        	s32i	a4, a1, 4
400851f5:	81af42        	movi	a4, -127
400851f8:	f03d      	nop.n
400851fa:	f03d      	nop.n
400851fc:	f03d      	nop.n
400851fe:	012152        	l32i	a5, a1, 4
40085201:	004542        	s8i	a4, a5, 0
40085204:	0020c0        	memw
40085207:	f03d      	nop.n
40085209:	f03d      	nop.n
4008520b:	f03d      	nop.n
4008520d:	f03d      	nop.n
4008520f:	ffe861        	l32r	a6, 400851b0 <coex_core_bb_reset_unlock+0x13c>
40085212:	ffe571        	l32r	a7, 400851a8 <coex_core_bb_reset_unlock+0x134>
40085215:	001a46        	j	40085282 <coex_force_wifi_mode+0xc6>
40085218:	0288      	l32i.n	a8, a2, 0
4008521a:	03a8      	l32i.n	a10, a3, 0
4008521c:	3888      	l32i.n	a8, a8, 12
4008521e:	0008e0        	callx8	a8
40085221:	0abd      	mov.n	a11, a10
40085223:	ffa281        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
40085226:	0298      	l32i.n	a9, a2, 0
40085228:	0020c0        	memw
4008522b:	0849      	s32i.n	a4, a8, 0
4008522d:	f03d      	nop.n
4008522f:	f03d      	nop.n
40085231:	f03d      	nop.n
40085233:	f03d      	nop.n
40085235:	ff9e81        	l32r	a8, 400850b0 <coex_core_bb_reset_unlock+0x3c>
40085238:	4998      	l32i.n	a9, a9, 16
4008523a:	03a8      	l32i.n	a10, a3, 0
4008523c:	0020c0        	memw
4008523f:	0878      	l32i.n	a7, a8, 0
40085241:	0009e0        	callx8	a9
40085244:	248570        	extui	a8, a7, 5, 3
40085247:	097866        	bnei	a8, 7, 40085254 <coex_force_wifi_mode+0x98>
4008524a:	ffd691        	l32r	a9, 400851a4 <coex_core_bb_reset_unlock+0x130>
4008524d:	1199      	s32i.n	a9, a1, 4
4008524f:	ffed06        	j	40085207 <coex_force_wifi_mode+0x4b>
40085252:	c00000        	sub	a0, a0, a0
40085255:	880020        	lsi	f2, a0, 0x220
40085258:	885706        	j	400673b8 <__udivmoddi4+0x27c4>
4008525b:	d24183        	ssi	f8, a1, 0x348
4008525e:	ff          	.byte 0xff
4008525f:	1149      	s32i.n	a4, a1, 4
40085261:	ffe886        	j	40085207 <coex_force_wifi_mode+0x4b>
40085264:	003865        	call8	400855ec <coex_time_now>
40085267:	002182        	l32i	a8, a1, 0
4008526a:	c0aa80        	sub	a10, a10, a8
4008526d:	1ea082        	movi	a8, 30
40085270:	0eb8a7        	bgeu	a8, a10, 40085282 <coex_force_wifi_mode+0xc6>
40085273:	012192        	l32i	a9, a1, 4
40085276:	85af32        	movi	a3, -123
40085279:	004932        	s8i	a3, a9, 0
4008527c:	0020c0        	memw
4008527f:	001806        	j	400852e3 <coex_force_wifi_mode+0x127>
40085282:	0248      	l32i.n	a4, a2, 0
40085284:	81a052        	movi	a5, 129
40085287:	3448      	l32i.n	a4, a4, 12
40085289:	03a8      	l32i.n	a10, a3, 0
4008528b:	0004e0        	callx8	a4
4008528e:	0abd      	mov.n	a11, a10
40085290:	ff8741        	l32r	a4, 400850ac <coex_core_bb_reset_unlock+0x38>
40085293:	ff8781        	l32r	a8, 400850b0 <coex_core_bb_reset_unlock+0x3c>
40085296:	0020c0        	memw
40085299:	0459      	s32i.n	a5, a4, 0
4008529b:	f03d      	nop.n
4008529d:	f03d      	nop.n
4008529f:	f03d      	nop.n
400852a1:	f03d      	nop.n
400852a3:	0258      	l32i.n	a5, a2, 0
400852a5:	0020c0        	memw
400852a8:	0848      	l32i.n	a4, a8, 0
400852aa:	244540        	extui	a4, a4, 5, 3
400852ad:	4558      	l32i.n	a5, a5, 16
400852af:	0023a2        	l32i	a10, a3, 0
400852b2:	0005e0        	callx8	a5
400852b5:	197466        	bnei	a4, 7, 400852d2 <coex_force_wifi_mode+0x116>
400852b8:	065d      	mov.n	a5, a6
400852ba:	0020c0        	memw
400852bd:	0648      	l32i.n	a4, a6, 0
400852bf:	eea091        	l32r	a9, 40080d40 <_init_end+0x940>
400852c2:	0c8497        	bany	a4, a9, 400852d2 <coex_force_wifi_mode+0x116>
400852c5:	074d      	mov.n	a4, a7
400852c7:	0020c0        	memw
400852ca:	0798      	l32i.n	a9, a7, 0
400852cc:	ffb881        	l32r	a8, 400851ac <coex_core_bb_reset_unlock+0x138>
400852cf:	918987        	bany	a9, a8, 40085264 <coex_force_wifi_mode+0xa8>
400852d2:	1158      	l32i.n	a5, a1, 4
400852d4:	000542        	l8ui	a4, a5, 0
400852d7:	644040        	extui	a4, a4, 0, 7
400852da:	09a416        	beqz	a4, 40085378 <coex_force_wifi_mode+0x1bc>
400852dd:	ffb241        	l32r	a4, 400851a8 <coex_core_bb_reset_unlock+0x134>
400852e0:	ffb451        	l32r	a5, 400851b0 <coex_core_bb_reset_unlock+0x13c>
400852e3:	ffde25        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
400852e6:	1168      	l32i.n	a6, a1, 4
400852e8:	ffb331        	l32r	a3, 400851b4 <coex_core_bb_reset_unlock+0x140>
400852eb:	000682        	l8ui	a8, a6, 0
400852ee:	80af62        	movi	a6, -128
400852f1:	106860        	and	a6, a8, a6
400852f4:	0278      	l32i.n	a7, a2, 0
400852f6:	1188      	l32i.n	a8, a1, 4
400852f8:	03a8      	l32i.n	a10, a3, 0
400852fa:	3778      	l32i.n	a7, a7, 12
400852fc:	004862        	s8i	a6, a8, 0
400852ff:	0020c0        	memw
40085302:	0007e0        	callx8	a7
40085305:	206aa0        	or	a6, a10, a10
40085308:	0221a2        	l32i	a10, a1, 8
4008530b:	067565        	call8	4008ba60 <force_wifi_mode>
4008530e:	06bd      	mov.n	a11, a6
40085310:	0228      	l32i.n	a2, a2, 0
40085312:	03a8      	l32i.n	a10, a3, 0
40085314:	4228      	l32i.n	a2, a2, 16
40085316:	0002e0        	callx8	a2
40085319:	ee6231        	l32r	a3, 40080ca4 <_init_end+0x8a4>
4008531c:	0020c0        	memw
4008531f:	002522        	l32i	a2, a5, 0
40085322:	f68237        	bany	a2, a3, 4008531c <coex_force_wifi_mode+0x160>
40085325:	002c65        	call8	400855ec <coex_time_now>
40085328:	206aa0        	or	a6, a10, a10
4008532b:	ffa331        	l32r	a3, 400851b8 <coex_core_bb_reset_unlock+0x144>
4008532e:	1ea052        	movi	a5, 30
40085331:	0005c6        	j	4008534c <coex_force_wifi_mode+0x190>
40085334:	002b65        	call8	400855ec <coex_time_now>
40085337:	c0aa60        	sub	a10, a10, a6
4008533a:	0eb5a7        	bgeu	a5, a10, 4008534c <coex_force_wifi_mode+0x190>
4008533d:	1198      	l32i.n	a9, a1, 4
4008533f:	82af22        	movi	a2, -126
40085342:	004922        	s8i	a2, a9, 0
40085345:	0020c0        	memw
40085348:	000546        	j	40085361 <coex_force_wifi_mode+0x1a5>
4008534b:	20c000        	or	a12, a0, a0
4008534e:	242200        	extui	a2, a0, 2, 3
40085351:	823700        	mull	a3, a7, a0
40085354:	de          	.byte 0xde
40085355:	012132        	l32i	a3, a1, 4
40085358:	000322        	l8ui	a2, a3, 0
4008535b:	642020        	extui	a2, a2, 0, 7
4008535e:	123216        	beqz	a2, 40085485 <coex_force_wifi_mode+0x2c9>
40085361:	ffd625        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085364:	012142        	l32i	a4, a1, 4
40085367:	80af22        	movi	a2, -128
4008536a:	000432        	l8ui	a3, a4, 0
4008536d:	102320        	and	a2, a3, a2
40085370:	004422        	s8i	a2, a4, 0
40085373:	0020c0        	memw
40085376:	f01d      	retw.n
40085378:	ff8f41        	l32r	a4, 400851b4 <coex_core_bb_reset_unlock+0x140>
4008537b:	002252        	l32i	a5, a2, 0
4008537e:	0024a2        	l32i	a10, a4, 0
40085381:	3558      	l32i.n	a5, a5, 12
40085383:	0005e0        	callx8	a5
40085386:	0a6d      	mov.n	a6, a10
40085388:	21a8      	l32i.n	a10, a1, 8
4008538a:	066d65        	call8	4008ba60 <force_wifi_mode>
4008538d:	06bd      	mov.n	a11, a6
4008538f:	0258      	l32i.n	a5, a2, 0
40085391:	04a8      	l32i.n	a10, a4, 0
40085393:	81a042        	movi	a4, 129
40085396:	4558      	l32i.n	a5, a5, 16
40085398:	0005e0        	callx8	a5
4008539b:	002525        	call8	400855ec <coex_time_now>
4008539e:	0a7d      	mov.n	a7, a10
400853a0:	ff8261        	l32r	a6, 400851a8 <coex_core_bb_reset_unlock+0x134>
400853a3:	000786        	j	400853c5 <coex_force_wifi_mode+0x209>
400853a6:	250000        	extui	a0, a0, 16, 3
400853a9:	510024        	lsi	f2, a0, 0x144
400853ac:	ff7d      	lsi	f7, a15, 60
400853ae:	c0aa70        	sub	a10, a10, a7
400853b1:	10b5a7        	bgeu	a5, a10, 400853c5 <coex_force_wifi_mode+0x209>
400853b4:	1168      	l32i.n	a6, a1, 4
400853b6:	83af22        	movi	a2, -125
400853b9:	004622        	s8i	a2, a6, 0
400853bc:	0020c0        	memw
400853bf:	001446        	j	40085414 <coex_force_wifi_mode+0x258>
400853c2:	000000        	ill
400853c5:	0258      	l32i.n	a5, a2, 0
400853c7:	03a8      	l32i.n	a10, a3, 0
400853c9:	3558      	l32i.n	a5, a5, 12
400853cb:	0005e0        	callx8	a5
400853ce:	0abd      	mov.n	a11, a10
400853d0:	ff3781        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
400853d3:	ff3791        	l32r	a9, 400850b0 <coex_core_bb_reset_unlock+0x3c>
400853d6:	0020c0        	memw
400853d9:	0849      	s32i.n	a4, a8, 0
400853db:	f03d      	nop.n
400853dd:	f03d      	nop.n
400853df:	f03d      	nop.n
400853e1:	f03d      	nop.n
400853e3:	0288      	l32i.n	a8, a2, 0
400853e5:	0020c0        	memw
400853e8:	0958      	l32i.n	a5, a9, 0
400853ea:	245550        	extui	a5, a5, 5, 3
400853ed:	4888      	l32i.n	a8, a8, 16
400853ef:	03a8      	l32i.n	a10, a3, 0
400853f1:	0008e0        	callx8	a8
400853f4:	0a7526        	beqi	a5, 7, 40085402 <coex_force_wifi_mode+0x246>
400853f7:	0020c0        	memw
400853fa:	0658      	l32i.n	a5, a6, 0
400853fc:	ff6c81        	l32r	a8, 400851ac <coex_core_bb_reset_unlock+0x138>
400853ff:	a58587        	bany	a5, a8, 400853a8 <coex_force_wifi_mode+0x1ec>
40085402:	012192        	l32i	a9, a1, 4
40085405:	000922        	l8ui	a2, a9, 0
40085408:	642020        	extui	a2, a2, 0, 7
4008540b:	ff6951        	l32r	a5, 400851b0 <coex_core_bb_reset_unlock+0x13c>
4008540e:	ee2531        	l32r	a3, 40080ca4 <_init_end+0x8a4>
40085411:	018216        	beqz	a2, 4008542d <coex_force_wifi_mode+0x271>
40085414:	ffcae5        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085417:	012122        	l32i	a2, a1, 4
4008541a:	000232        	l8ui	a3, a2, 0
4008541d:	80af22        	movi	a2, -128
40085420:	102320        	and	a2, a3, a2
40085423:	1138      	l32i.n	a3, a1, 4
40085425:	004322        	s8i	a2, a3, 0
40085428:	0020c0        	memw
4008542b:	f01d      	retw.n
4008542d:	0020c0        	memw
40085430:	0528      	l32i.n	a2, a5, 0
40085432:	f78237        	bany	a2, a3, 4008542d <coex_force_wifi_mode+0x271>
40085435:	001b65        	call8	400855ec <coex_time_now>
40085438:	0a6d      	mov.n	a6, a10
4008543a:	ff5b41        	l32r	a4, 400851a8 <coex_core_bb_reset_unlock+0x134>
4008543d:	e51c      	movi.n	a5, 30
4008543f:	ff5e31        	l32r	a3, 400851b8 <coex_core_bb_reset_unlock+0x144>
40085442:	000586        	j	4008545c <coex_force_wifi_mode+0x2a0>
40085445:	001a65        	call8	400855ec <coex_time_now>
40085448:	c0aa60        	sub	a10, a10, a6
4008544b:	0db5a7        	bgeu	a5, a10, 4008545c <coex_force_wifi_mode+0x2a0>
4008544e:	1148      	l32i.n	a4, a1, 4
40085450:	84af22        	movi	a2, -124
40085453:	004422        	s8i	a2, a4, 0
40085456:	0020c0        	memw
40085459:	000506        	j	40085471 <coex_force_wifi_mode+0x2b5>
4008545c:	0020c0        	memw
4008545f:	002422        	l32i	a2, a4, 0
40085462:	df8237        	bany	a2, a3, 40085445 <coex_force_wifi_mode+0x289>
40085465:	012152        	l32i	a5, a1, 4
40085468:	000522        	l8ui	a2, a5, 0
4008546b:	642020        	extui	a2, a2, 0, 7
4008546e:	013216        	beqz	a2, 40085485 <coex_force_wifi_mode+0x2c9>
40085471:	ffc525        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085474:	1168      	l32i.n	a6, a1, 4
40085476:	80af22        	movi	a2, -128
40085479:	000632        	l8ui	a3, a6, 0
4008547c:	102320        	and	a2, a3, a2
4008547f:	004622        	s8i	a2, a6, 0
40085482:	0020c0        	memw
40085485:	f01d      	retw.n
40085487:	109c00        	and	a9, a12, a0
4008548a:	ff3ff5        	call12	40084888 <_malloc_r>
4008548d:	ff          	.byte 0xff
4008548e:	00ff00        	lsi	f0, a15, 0
40085491:	006200        	rsil	a0, 2
40085494:	005000        	syscall
40085497:	109800        	and	a9, a8, a0
4008549a:	ff3ff5        	call12	40084898 <_free_r+0x4>
4008549d:	fffe01        	l32r	a0, 40085498 <coex_force_wifi_mode+0x2dc>
400854a0:	ff          	.byte 0xff
400854a1:	ff          	.byte 0xff
400854a2:	00e001        	l32r	a0, 40045824 <llcp_pdu_handler_tab_p_get+0x18c0>
400854a5:	00ac00        	any8	b0, b8:b9:b10:b11:b12:b13:b14:b15
400854a8:	106c      	movi.n	a0, -31
400854aa:	f83ff5        	call12	4007d8a8 <__udivmoddi4+0x18cb4>
400854ad:	3ff510        	f64cmph	a15, a5, a1, 3
400854b0:	0009      	s32i.n	a0, a0, 0
400854b2:	04          	.byte 0x4
	...

400854b4 <coex_unforce_wifi_mode>:
400854b4:	004136        	entry	a1, 32
400854b7:	ff3b31        	l32r	a3, 400851a4 <coex_core_bb_reset_unlock+0x130>
400854ba:	000322        	l8ui	a2, a3, 0
400854bd:	232200        	sext	a2, a2, 7
400854c0:	0e62d6        	bgez	a2, 400855aa <coex_unforce_wifi_mode+0xf6>
400854c3:	064fe5        	call8	4008b9c0 <bt_bb_init_cmplx_reg>
400854c6:	fff041        	l32r	a4, 40085488 <coex_force_wifi_mode+0x2cc>
400854c9:	fff021        	l32r	a2, 4008548c <coex_force_wifi_mode+0x2d0>
400854cc:	0020c0        	memw
400854cf:	0458      	l32i.n	a5, a4, 0
400854d1:	105520        	and	a5, a5, a2
400854d4:	ffef21        	l32r	a2, 40085490 <coex_force_wifi_mode+0x2d4>
400854d7:	202520        	or	a2, a5, a2
400854da:	0020c0        	memw
400854dd:	0429      	s32i.n	a2, a4, 0
400854df:	f03d      	nop.n
400854e1:	f03d      	nop.n
400854e3:	f03d      	nop.n
400854e5:	f03d      	nop.n
400854e7:	0020c0        	memw
400854ea:	0458      	l32i.n	a5, a4, 0
400854ec:	f42f21        	l32r	a2, 400825a8 <phy_en_hw_set_freq$part$0+0x20>
400854ef:	105520        	and	a5, a5, a2
400854f2:	ffe821        	l32r	a2, 40085494 <coex_force_wifi_mode+0x2d8>
400854f5:	202520        	or	a2, a5, a2
400854f8:	0020c0        	memw
400854fb:	0429      	s32i.n	a2, a4, 0
400854fd:	00af22        	movi	a2, 0xffffff00
40085500:	f03d      	nop.n
40085502:	f03d      	nop.n
40085504:	f03d      	nop.n
40085506:	0020c0        	memw
40085509:	0458      	l32i.n	a5, a4, 0
4008550b:	105520        	and	a5, a5, a2
4008550e:	422c      	movi.n	a2, 36
40085510:	205520        	or	a5, a5, a2
40085513:	ffe121        	l32r	a2, 40085498 <coex_force_wifi_mode+0x2dc>
40085516:	0020c0        	memw
40085519:	0459      	s32i.n	a5, a4, 0
4008551b:	f03d      	nop.n
4008551d:	f03d      	nop.n
4008551f:	f03d      	nop.n
40085521:	f03d      	nop.n
40085523:	0020c0        	memw
40085526:	0258      	l32i.n	a5, a2, 0
40085528:	ffdd41        	l32r	a4, 4008549c <coex_force_wifi_mode+0x2e0>
4008552b:	105540        	and	a5, a5, a4
4008552e:	eca141        	l32r	a4, 400807b4 <_init_end+0x3b4>
40085531:	204540        	or	a4, a5, a4
40085534:	0020c0        	memw
40085537:	0249      	s32i.n	a4, a2, 0
40085539:	01ae42        	movi	a4, 0xfffffe01
4008553c:	f03d      	nop.n
4008553e:	f03d      	nop.n
40085540:	f03d      	nop.n
40085542:	0020c0        	memw
40085545:	0258      	l32i.n	a5, a2, 0
40085547:	105540        	and	a5, a5, a4
4008554a:	dca042        	movi	a4, 220
4008554d:	204540        	or	a4, a5, a4
40085550:	0020c0        	memw
40085553:	0249      	s32i.n	a4, a2, 0
40085555:	f03d      	nop.n
40085557:	f03d      	nop.n
40085559:	f03d      	nop.n
4008555b:	f03d      	nop.n
4008555d:	0020c0        	memw
40085560:	0258      	l32i.n	a5, a2, 0
40085562:	ffcf41        	l32r	a4, 400854a0 <coex_force_wifi_mode+0x2e4>
40085565:	105540        	and	a5, a5, a4
40085568:	ffcf41        	l32r	a4, 400854a4 <coex_force_wifi_mode+0x2e8>
4008556b:	204540        	or	a4, a5, a4
4008556e:	ffce51        	l32r	a5, 400854a8 <coex_force_wifi_mode+0x2ec>
40085571:	0020c0        	memw
40085574:	0249      	s32i.n	a4, a2, 0
40085576:	f03d      	nop.n
40085578:	f03d      	nop.n
4008557a:	f03d      	nop.n
4008557c:	f03d      	nop.n
4008557e:	0020c0        	memw
40085581:	0548      	l32i.n	a4, a5, 0
40085583:	edd521        	l32r	a2, 40080cd8 <_init_end+0x8d8>
40085586:	102420        	and	a2, a4, a2
40085589:	0020c0        	memw
4008558c:	0529      	s32i.n	a2, a5, 0
4008558e:	f03d      	nop.n
40085590:	f03d      	nop.n
40085592:	f03d      	nop.n
40085594:	f03d      	nop.n
40085596:	ffc641        	l32r	a4, 400854b0 <coex_force_wifi_mode+0x2f4>
40085599:	ffc421        	l32r	a2, 400854ac <coex_force_wifi_mode+0x2f0>
4008559c:	0020c0        	memw
4008559f:	0249      	s32i.n	a4, a2, 0
400855a1:	00a022        	movi	a2, 0
400855a4:	004322        	s8i	a2, a3, 0
400855a7:	0020c0        	memw
400855aa:	f03d      	nop.n
400855ac:	f03d      	nop.n
400855ae:	f03d      	nop.n
400855b0:	0020f0        	nop
400855b3:	feff21        	l32r	a2, 400851b0 <coex_core_bb_reset_unlock+0x13c>
400855b6:	edbb31        	l32r	a3, 40080ca4 <_init_end+0x8a4>
400855b9:	0020c0        	memw
400855bc:	0288      	l32i.n	a8, a2, 0
400855be:	f78837        	bany	a8, a3, 400855b9 <coex_unforce_wifi_mode+0x105>
400855c1:	fdbf51        	l32r	a5, 40084cc0 <coex_bb_reset_unlock+0x10>
400855c4:	fefc41        	l32r	a4, 400851b4 <coex_core_bb_reset_unlock+0x140>
400855c7:	0568      	l32i.n	a6, a5, 0
400855c9:	04a8      	l32i.n	a10, a4, 0
400855cb:	3668      	l32i.n	a6, a6, 12
400855cd:	0006e0        	callx8	a6
400855d0:	0a6d      	mov.n	a6, a10
400855d2:	0651e5        	call8	4008baf0 <unforce_wifi_mode>
400855d5:	0558      	l32i.n	a5, a5, 0
400855d7:	06bd      	mov.n	a11, a6
400855d9:	4558      	l32i.n	a5, a5, 16
400855db:	04a8      	l32i.n	a10, a4, 0
400855dd:	0005e0        	callx8	a5
400855e0:	0020c0        	memw
400855e3:	0288      	l32i.n	a8, a2, 0
400855e5:	f78837        	bany	a8, a3, 400855e0 <coex_unforce_wifi_mode+0x12c>
400855e8:	f01d      	retw.n
	...

400855ec <coex_time_now>:
400855ec:	004136        	entry	a1, 32
400855ef:	fdb481        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400855f2:	0888      	l32i.n	a8, a8, 0
400855f4:	1328a2        	l32i	a10, a8, 76
400855f7:	000ae0        	callx8	a10
400855fa:	0a2d      	mov.n	a2, a10
400855fc:	f01d      	retw.n
	...

40085600 <coex_time_is_past>:
40085600:	004136        	entry	a1, 32
40085603:	fdaf81        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085606:	0888      	l32i.n	a8, a8, 0
40085608:	1328a2        	l32i	a10, a8, 76
4008560b:	000ae0        	callx8	a10
4008560e:	c02a20        	sub	a2, a10, a2
40085611:	fa7c      	movi.n	a10, -1
40085613:	302a20        	xor	a2, a10, a2
40085616:	052f20        	extui	a2, a2, 31, 1
40085619:	f01d      	retw.n
	...

4008561c <coex_time_is_in_time>:
4008561c:	004136        	entry	a1, 32
4008561f:	fda881        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085622:	0888      	l32i.n	a8, a8, 0
40085624:	1328a2        	l32i	a10, a8, 76
40085627:	000ae0        	callx8	a10
4008562a:	c09a20        	sub	a9, a10, a2
4008562d:	01a082        	movi	a8, 1
40085630:	00b9d6        	bgez	a9, 4008563f <coex_time_is_in_time+0x23>
40085633:	c022a0        	sub	a2, a2, a10
40085636:	02b327        	bgeu	a3, a2, 4008563c <coex_time_is_in_time+0x20>
40085639:	00a082        	movi	a8, 0
4008563c:	748080        	extui	a8, a8, 0, 8
4008563f:	082d      	mov.n	a2, a8
40085641:	f01d      	retw.n
40085643:	efae00        	f64cmph	a10, a14, a0, 14
40085646:	3ffb      	addi.n	a3, a15, 15
40085648:	fbefc4        	lsi	f12, a15, 0x3ec
4008564b:	3f          	.byte 0x3f

4008564c <coex_timer_ts_end_alarm>:
4008564c:	004136        	entry	a1, 32
4008564f:	fd9c81        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085652:	0d0c      	movi.n	a13, 0
40085654:	0c0c      	movi.n	a12, 0
40085656:	02bd      	mov.n	a11, a2
40085658:	0888      	l32i.n	a8, a8, 0
4008565a:	fffa91        	l32r	a9, 40085644 <coex_time_is_in_time+0x28>
4008565d:	122882        	l32i	a8, a8, 72
40085660:	fffaa1        	l32r	a10, 40085648 <coex_time_is_in_time+0x2c>
40085663:	0049d2        	s8i	a13, a9, 0
40085666:	0020c0        	memw
40085669:	0008e0        	callx8	a8
4008566c:	f01d      	retw.n
	...

40085670 <coex_timer_ts_end_disalarm>:
40085670:	004136        	entry	a1, 32
40085673:	fd9381        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085676:	1b0c      	movi.n	a11, 1
40085678:	0888      	l32i.n	a8, a8, 0
4008567a:	fff291        	l32r	a9, 40085644 <coex_time_is_in_time+0x28>
4008567d:	0f2882        	l32i	a8, a8, 60
40085680:	fff2a1        	l32r	a10, 40085648 <coex_time_is_in_time+0x2c>
40085683:	0049b2        	s8i	a11, a9, 0
40085686:	0020c0        	memw
40085689:	0008e0        	callx8	a8
4008568c:	f01d      	retw.n
4008568e:	ad0000        	lsi	f0, a0, 0x2b4
40085691:	ef          	.byte 0xef
40085692:	3ffb      	addi.n	a3, a15, 15
40085694:	fbefb0        	f64subc	a11, a15, 3, 0
40085697:	3f          	.byte 0x3f

40085698 <coex_timer_ts_start_alarm>:
40085698:	004136        	entry	a1, 32
4008569b:	fd8981        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
4008569e:	0d0c      	movi.n	a13, 0
400856a0:	0c0c      	movi.n	a12, 0
400856a2:	02bd      	mov.n	a11, a2
400856a4:	0888      	l32i.n	a8, a8, 0
400856a6:	fffa91        	l32r	a9, 40085690 <coex_timer_ts_end_disalarm+0x20>
400856a9:	122882        	l32i	a8, a8, 72
400856ac:	fffaa1        	l32r	a10, 40085694 <coex_timer_ts_end_disalarm+0x24>
400856af:	0049d2        	s8i	a13, a9, 0
400856b2:	0020c0        	memw
400856b5:	0008e0        	callx8	a8
400856b8:	f01d      	retw.n
	...

400856bc <coex_timer_ts_start_disalarm>:
400856bc:	004136        	entry	a1, 32
400856bf:	fd8081        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400856c2:	1b0c      	movi.n	a11, 1
400856c4:	0888      	l32i.n	a8, a8, 0
400856c6:	fff291        	l32r	a9, 40085690 <coex_timer_ts_end_disalarm+0x20>
400856c9:	0f2882        	l32i	a8, a8, 60
400856cc:	fff2a1        	l32r	a10, 40085694 <coex_timer_ts_end_disalarm+0x24>
400856cf:	0049b2        	s8i	a11, a9, 0
400856d2:	0020c0        	memw
400856d5:	0008e0        	callx8	a8
400856d8:	f01d      	retw.n
400856da:	280000        	lsi	f0, a0, 160
400856dd:	3ffbf0        	f64cmph	a15, a11, a15, 3
400856e0:	aaab      	addi.n	a10, a10, 10
400856e2:	aaaa      	add.n	a10, a10, a10
400856e4:	fbf000        	f64subc	a0, a0, 3, 1
400856e7:	3f          	.byte 0x3f
400856e8:	f01c      	movi.n	a0, 31
400856ea:	3ffb      	addi.n	a3, a15, 15
400856ec:	fbf020        	f64subc	a2, a0, 3, 1
400856ef:	3f          	.byte 0x3f
400856f0:	fbefe4        	lsi	f14, a15, 0x3ec
400856f3:	3f          	.byte 0x3f
400856f4:	004136        	entry	a1, 32
400856f7:	fff931        	l32r	a3, 400856dc <coex_timer_ts_start_disalarm+0x20>
400856fa:	0023c2        	l32i	a12, a3, 0
400856fd:	24a032        	movi	a3, 36
40085700:	c022c0        	sub	a2, a2, a12
40085703:	212320        	srai	a2, a2, 3
40085706:	fff6c1        	l32r	a12, 400856e0 <coex_timer_ts_start_disalarm+0x24>
40085709:	8222c0        	mull	a2, a2, a12
4008570c:	11b327        	bgeu	a3, a2, 40085721 <coex_timer_ts_start_disalarm+0x65>
4008570f:	ffede5        	call8	400855ec <coex_time_now>
40085712:	20baa0        	or	a11, a10, a10
40085715:	fff3a1        	l32r	a10, 400856e4 <coex_timer_ts_start_disalarm+0x28>
40085718:	02cd      	mov.n	a12, a2
4008571a:	663ba5        	call8	400ebad4 <coexist_printf>
4008571d:	f01d      	retw.n
4008571f:	410000        	srli	a0, a0, 0
40085722:	31fd67        	bbsi	a13, 22, 40085757 <coex_timer_ts_start_disalarm+0x9b>
40085725:	52fff1        	l32r	a15, 4005a324 <strftime+0x870>
40085728:	a20024        	lsi	f2, a0, 0x288
4008572b:	580023        	lsi	f2, a0, 0x160
4008572e:	05e035        	call12	4008b530 <panicHandler+0x174>
40085731:	852000        	extui	a2, a0, 16, 9
40085734:	0a5d21        	l32r	a2, 400480a8 <lld_evt_get_next_free_slot+0x177c>
40085737:	ffed91        	l32r	a9, 400856ec <coex_timer_ts_start_disalarm+0x30>
4008573a:	a08890        	addx4	a8, a8, a9
4008573d:	190c      	movi.n	a9, 1
4008573f:	401200        	ssl	a2
40085742:	a19900        	sll	a9, a9
40085745:	08a8      	l32i.n	a10, a8, 0
40085747:	110a97        	bnone	a10, a9, 4008575c <coex_timer_ts_start_disalarm+0xa0>
4008574a:	ffea25        	call8	400855ec <coex_time_now>
4008574d:	0abd      	mov.n	a11, a10
4008574f:	ffe8a1        	l32r	a10, 400856f0 <coex_timer_ts_start_disalarm+0x34>
40085752:	20c220        	or	a12, a2, a2
40085755:	6637e5        	call8	400ebad4 <coexist_printf>
40085758:	000146        	j	40085761 <coex_timer_ts_start_disalarm+0xa5>
4008575b:	9a9000        	trunc.s	a9, f0, 0
4008575e:	089920        	lsx	f9, a9, a2
40085761:	05bd      	mov.n	a11, a5
40085763:	f03d      	nop.n
40085765:	f03d      	nop.n
40085767:	f03d      	nop.n
40085769:	0428      	l32i.n	a2, a4, 0
4008576b:	03a8      	l32i.n	a10, a3, 0
4008576d:	4228      	l32i.n	a2, a2, 16
4008576f:	0002e0        	callx8	a2
40085772:	f01d      	retw.n
40085774:	f02c      	movi.n	a0, 47
40085776:	3ffb      	addi.n	a3, a15, 15
40085778:	004136        	entry	a1, 32
4008577b:	fffe31        	l32r	a3, 40085774 <coex_timer_ts_start_disalarm+0xb8>
4008577e:	0348      	l32i.n	a4, a3, 0
40085780:	04c416        	beqz	a4, 400857d0 <coex_timer_ts_start_disalarm+0x114>
40085783:	0288      	l32i.n	a8, a2, 0
40085785:	1248      	l32i.n	a4, a2, 4
40085787:	d88c      	beqz.n	a8, 40085798 <coex_timer_ts_start_disalarm+0xdc>
40085789:	1849      	s32i.n	a4, a8, 4
4008578b:	f03d      	nop.n
4008578d:	f03d      	nop.n
4008578f:	f03d      	nop.n
40085791:	f03d      	nop.n
40085793:	1248      	l32i.n	a4, a2, 4
40085795:	000046        	j	4008579a <coex_timer_ts_start_disalarm+0xde>
40085798:	0349      	s32i.n	a4, a3, 0
4008579a:	448c      	beqz.n	a4, 400857a2 <coex_timer_ts_start_disalarm+0xe6>
4008579c:	0489      	s32i.n	a8, a4, 0
4008579e:	0000c6        	j	400857a5 <coex_timer_ts_start_disalarm+0xe9>
400857a1:	638200        	minu	a8, a2, a0
400857a4:	a22001        	l32r	a0, 4006e024 <__udivmoddi4+0x9430>
400857a7:	f03d20        	subx8	a3, a13, a2
400857aa:	f03d      	nop.n
400857ac:	f03d      	nop.n
400857ae:	0a0242        	l8ui	a4, a2, 10
400857b1:	fff425        	call8	400856f4 <coex_timer_ts_start_disalarm+0x38>
400857b4:	412540        	srli	a2, a4, 5
400857b7:	a02230        	addx4	a2, a2, a3
400857ba:	feaf92        	movi	a9, -2
400857bd:	3288      	l32i.n	a8, a2, 12
400857bf:	401400        	ssl	a4
400857c2:	819990        	src	a9, a9, a9
400857c5:	109980        	and	a9, a9, a8
400857c8:	2388      	l32i.n	a8, a3, 8
400857ca:	880b      	addi.n	a8, a8, -1
400857cc:	3299      	s32i.n	a9, a2, 12
400857ce:	2389      	s32i.n	a8, a3, 8
400857d0:	020c      	movi.n	a2, 0
400857d2:	f01d      	retw.n
400857d4:	f018      	l32i.n	a1, a0, 60
400857d6:	3ffb      	addi.n	a3, a15, 15
400857d8:	407c54        	lsi	f5, a12, 0x100
400857db:	3f          	.byte 0x3f
400857dc:	efd8      	l32i.n	a13, a15, 56
400857de:	3ffb      	addi.n	a3, a15, 15

400857e0 <coex_arbit_insert>:
400857e0:	006136        	entry	a1, 48
400857e3:	176216        	beqz	a2, 4008595d <coex_arbit_insert+0x17d>
400857e6:	fd3641        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
400857e9:	fffa51        	l32r	a5, 400857d4 <coex_timer_ts_start_disalarm+0x118>
400857ec:	0438      	l32i.n	a3, a4, 0
400857ee:	05a8      	l32i.n	a10, a5, 0
400857f0:	032332        	l32i	a3, a3, 12
400857f3:	0003e0        	callx8	a3
400857f6:	0a6d      	mov.n	a6, a10
400857f8:	020282        	l8ui	a8, a2, 2
400857fb:	413580        	srli	a3, a8, 5
400857fe:	ffdd71        	l32r	a7, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085801:	a03370        	addx4	a3, a3, a7
40085804:	3338      	l32i.n	a3, a3, 12
40085806:	0f5387        	bbc	a3, a8, 40085819 <coex_arbit_insert+0x39>
40085809:	0abd      	mov.n	a11, a10
4008580b:	0428      	l32i.n	a2, a4, 0
4008580d:	05a8      	l32i.n	a10, a5, 0
4008580f:	4228      	l32i.n	a2, a2, 16
40085811:	0002e0        	callx8	a2
40085814:	03a122        	movi	a2, 0x103
40085817:	f01d      	retw.n
40085819:	0738      	l32i.n	a3, a7, 0
4008581b:	33cc      	bnez.n	a3, 40085822 <coex_arbit_insert+0x42>
4008581d:	030c      	movi.n	a3, 0
4008581f:	000546        	j	40085838 <coex_arbit_insert+0x58>
40085822:	0323a2        	l32i	a10, a3, 12
40085825:	0122b2        	l32i	a11, a2, 4
40085828:	018b25        	call8	400870dc <coex_time_diff>
4008582b:	091aa6        	blti	a10, 1, 40085838 <coex_arbit_insert+0x58>
4008582e:	012332        	l32i	a3, a3, 4
40085831:	fed356        	bnez	a3, 40085822 <coex_arbit_insert+0x42>
40085834:	fff946        	j	4008581d <coex_arbit_insert+0x3d>
40085837:	ace100        	lsi	f0, a1, 0x2b0
4008583a:	ff          	.byte 0xff
4008583b:	0488      	l32i.n	a8, a4, 0
4008583d:	0ea8      	l32i.n	a10, a14, 0
4008583f:	3888      	l32i.n	a8, a8, 12
40085841:	01e9      	s32i.n	a14, a1, 0
40085843:	0008e0        	callx8	a8
40085846:	0abd      	mov.n	a11, a10
40085848:	ffa9d1        	l32r	a13, 400856ec <coex_timer_ts_start_disalarm+0x30>
4008584b:	0dc8      	l32i.n	a12, a13, 0
4008584d:	01e8      	l32i.n	a14, a1, 0
4008584f:	bccc      	bnez.n	a12, 4008585e <coex_arbit_insert+0x7e>
40085851:	1dc8      	l32i.n	a12, a13, 4
40085853:	10bc16        	beqz	a12, 40085962 <coex_arbit_insert+0x182>
40085856:	082c      	movi.n	a8, 32
40085858:	1f0c      	movi.n	a15, 1
4008585a:	000106        	j	40085862 <coex_arbit_insert+0x82>
4008585d:	080c00        	lsx	f0, a12, a0
40085860:	08fd      	mov.n	a15, a8
40085862:	6090c0        	neg	a9, a12
40085865:	1099c0        	and	a9, a9, a12
40085868:	40f990        	nsau	a9, a9
4008586b:	609090        	neg	a9, a9
4008586e:	1fc992        	addi	a9, a9, 31
40085871:	0458      	l32i.n	a5, a4, 0
40085873:	ea7c      	movi.n	a10, -2
40085875:	401900        	ssl	a9
40085878:	81aaa0        	src	a10, a10, a10
4008587b:	a0dfd0        	addx4	a13, a15, a13
4008587e:	10cac0        	and	a12, a10, a12
40085881:	45f8      	l32i.n	a15, a5, 16
40085883:	598a      	add.n	a5, a9, a8
40085885:	0ea8      	l32i.n	a10, a14, 0
40085887:	0dc9      	s32i.n	a12, a13, 0
40085889:	000fe0        	callx8	a15
4008588c:	908550        	addx2	a8, a5, a5
4008588f:	ff9391        	l32r	a9, 400856dc <coex_timer_ts_start_disalarm+0x20>
40085892:	0998      	l32i.n	a9, a9, 0
40085894:	b05890        	addx8	a5, a8, a9
40085897:	0d1516        	beqz	a5, 4008596c <coex_arbit_insert+0x18c>
4008589a:	8c1c      	movi.n	a12, 24
4008589c:	0b0c      	movi.n	a11, 0
4008589e:	05ad      	mov.n	a10, a5
400858a0:	eafd81        	l32r	a8, 40080494 <_init_end+0x94>
400858a3:	0008e0        	callx8	a8
400858a6:	0c1c      	movi.n	a12, 16
400858a8:	02bd      	mov.n	a11, a2
400858aa:	a58b      	addi.n	a10, a5, 8
400858ac:	eba681        	l32r	a8, 40080744 <_init_end+0x344>
400858af:	0008e0        	callx8	a8
400858b2:	03ac      	beqz.n	a3, 400858d6 <coex_arbit_insert+0xf6>
400858b4:	0328      	l32i.n	a2, a3, 0
400858b6:	0529      	s32i.n	a2, a5, 0
400858b8:	129c      	beqz.n	a2, 400858cd <coex_arbit_insert+0xed>
400858ba:	f03d      	nop.n
400858bc:	f03d      	nop.n
400858be:	f03d      	nop.n
400858c0:	f03d      	nop.n
400858c2:	0328      	l32i.n	a2, a3, 0
400858c4:	1539      	s32i.n	a3, a5, 4
400858c6:	1259      	s32i.n	a5, a2, 4
400858c8:	0359      	s32i.n	a5, a3, 0
400858ca:	0014c6        	j	40085921 <coex_arbit_insert+0x141>
400858cd:	1539      	s32i.n	a3, a5, 4
400858cf:	0359      	s32i.n	a5, a3, 0
400858d1:	0759      	s32i.n	a5, a7, 0
400858d3:	001286        	j	40085921 <coex_arbit_insert+0x141>
400858d6:	012722        	l32i	a2, a7, 4
400858d9:	023256        	bnez	a2, 40085900 <coex_arbit_insert+0x120>
400858dc:	0728      	l32i.n	a2, a7, 0
400858de:	229c      	beqz.n	a2, 400858f4 <coex_arbit_insert+0x114>
400858e0:	ffd0a5        	call8	400855ec <coex_time_now>
400858e3:	0abd      	mov.n	a11, a10
400858e5:	ffbcc1        	l32r	a12, 400857d8 <coex_timer_ts_start_disalarm+0x11c>
400858e8:	96a0d2        	movi	a13, 150
400858eb:	ffbca1        	l32r	a10, 400857dc <coex_timer_ts_start_disalarm+0x120>
400858ee:	661e65        	call8	400ebad4 <coexist_printf>
400858f1:	ffff06        	j	400858f1 <coex_arbit_insert+0x111>
400858f4:	1759      	s32i.n	a5, a7, 4
400858f6:	0759      	s32i.n	a5, a7, 0
400858f8:	1539      	s32i.n	a3, a5, 4
400858fa:	0539      	s32i.n	a3, a5, 0
400858fc:	000846        	j	40085921 <coex_arbit_insert+0x141>
400858ff:	129800        	andbc	b9, b8, b0
40085902:	399c      	beqz.n	a9, 40085919 <coex_arbit_insert+0x139>
40085904:	1599      	s32i.n	a9, a5, 4
40085906:	f03d      	nop.n
40085908:	f03d      	nop.n
4008590a:	f03d      	nop.n
4008590c:	f03d      	nop.n
4008590e:	1238      	l32i.n	a3, a2, 4
40085910:	0529      	s32i.n	a2, a5, 0
40085912:	0359      	s32i.n	a5, a3, 0
40085914:	1259      	s32i.n	a5, a2, 4
40085916:	0001c6        	j	40085921 <coex_arbit_insert+0x141>
40085919:	1539      	s32i.n	a3, a5, 4
4008591b:	0529      	s32i.n	a2, a5, 0
4008591d:	1259      	s32i.n	a5, a2, 4
4008591f:	1759      	s32i.n	a5, a7, 4
40085921:	130c      	movi.n	a3, 1
40085923:	06bd      	mov.n	a11, a6
40085925:	f03d      	nop.n
40085927:	f03d      	nop.n
40085929:	0a0592        	l8ui	a9, a5, 10
4008592c:	412590        	srli	a2, a9, 5
4008592f:	a02270        	addx4	a2, a2, a7
40085932:	401900        	ssl	a9
40085935:	a19300        	sll	a9, a3
40085938:	2788      	l32i.n	a8, a7, 8
4008593a:	883a      	add.n	a8, a8, a3
4008593c:	3238      	l32i.n	a3, a2, 12
4008593e:	203930        	or	a3, a9, a3
40085941:	3239      	s32i.n	a3, a2, 12
40085943:	f03d      	nop.n
40085945:	f03d      	nop.n
40085947:	f03d      	nop.n
40085949:	f03d      	nop.n
4008594b:	0428      	l32i.n	a2, a4, 0
4008594d:	ffa131        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085950:	4228      	l32i.n	a2, a2, 16
40085952:	03a8      	l32i.n	a10, a3, 0
40085954:	2789      	s32i.n	a8, a7, 8
40085956:	0002e0        	callx8	a2
40085959:	020c      	movi.n	a2, 0
4008595b:	f01d      	retw.n
4008595d:	02a122        	movi	a2, 0x102
40085960:	f01d      	retw.n
40085962:	0428      	l32i.n	a2, a4, 0
40085964:	002ea2        	l32i	a10, a14, 0
40085967:	4228      	l32i.n	a2, a2, 16
40085969:	0002e0        	callx8	a2
4008596c:	06bd      	mov.n	a11, a6
4008596e:	0428      	l32i.n	a2, a4, 0
40085970:	ff9951        	l32r	a5, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085973:	042222        	l32i	a2, a2, 16
40085976:	0025a2        	l32i	a10, a5, 0
40085979:	0002e0        	callx8	a2
4008597c:	01a122        	movi	a2, 0x101
4008597f:	f01d      	retw.n
40085981:	000000        	ill
40085984:	ff          	.byte 0xff
40085985:	00ff00        	lsi	f0, a15, 0

40085988 <coex_arbit_delete>:
40085988:	004136        	entry	a1, 32
4008598b:	02a132        	movi	a3, 0x102
4008598e:	05a216        	beqz	a2, 400859ec <coex_arbit_delete+0x64>
40085991:	fccb41        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40085994:	ff9031        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085997:	0458      	l32i.n	a5, a4, 0
40085999:	03a8      	l32i.n	a10, a3, 0
4008599b:	3558      	l32i.n	a5, a5, 12
4008599d:	0005e0        	callx8	a5
400859a0:	0a5d      	mov.n	a5, a10
400859a2:	ff7481        	l32r	a8, 40085774 <coex_timer_ts_start_disalarm+0xb8>
400859a5:	08a8      	l32i.n	a10, a8, 0
400859a7:	fa9c      	beqz.n	a10, 400859ca <coex_arbit_delete+0x42>
400859a9:	fff6c1        	l32r	a12, 40085984 <coex_arbit_insert+0x1a4>
400859ac:	0298      	l32i.n	a9, a2, 0
400859ae:	1099c0        	and	a9, a9, a12
400859b1:	2a28      	l32i.n	a2, a10, 8
400859b3:	1022c0        	and	a2, a2, a12
400859b6:	0b9927        	bne	a9, a2, 400859c5 <coex_arbit_delete+0x3d>
400859b9:	0007c6        	j	400859dc <coex_arbit_delete+0x54>
400859bc:	2a8800        	mul.s	f8, f8, f0
400859bf:	1088c0        	and	a8, a8, a12
400859c2:	161987        	beq	a9, a8, 400859dc <coex_arbit_delete+0x54>
400859c5:	1aa8      	l32i.n	a10, a10, 4
400859c7:	ff2a56        	bnez	a10, 400859bd <coex_arbit_delete+0x35>
400859ca:	0428      	l32i.n	a2, a4, 0
400859cc:	05bd      	mov.n	a11, a5
400859ce:	03a8      	l32i.n	a10, a3, 0
400859d0:	02a132        	movi	a3, 0x102
400859d3:	4228      	l32i.n	a2, a2, 16
400859d5:	0002e0        	callx8	a2
400859d8:	000406        	j	400859ec <coex_arbit_delete+0x64>
400859db:	d9a500        	lsi	f0, a5, 0x364
400859de:	ff          	.byte 0xff
400859df:	0428      	l32i.n	a2, a4, 0
400859e1:	05bd      	mov.n	a11, a5
400859e3:	03a8      	l32i.n	a10, a3, 0
400859e5:	030c      	movi.n	a3, 0
400859e7:	4228      	l32i.n	a2, a2, 16
400859e9:	0002e0        	callx8	a2
400859ec:	032d      	mov.n	a2, a3
400859ee:	f01d      	retw.n

400859f0 <coex_arbit_first>:
400859f0:	004136        	entry	a1, 32
400859f3:	fcb321        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
400859f6:	ff7731        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
400859f9:	0288      	l32i.n	a8, a2, 0
400859fb:	03a8      	l32i.n	a10, a3, 0
400859fd:	3888      	l32i.n	a8, a8, 12
400859ff:	0008e0        	callx8	a8
40085a02:	0abd      	mov.n	a11, a10
40085a04:	0298      	l32i.n	a9, a2, 0
40085a06:	ff5b21        	l32r	a2, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085a09:	0288      	l32i.n	a8, a2, 0
40085a0b:	020c      	movi.n	a2, 0
40085a0d:	a88b      	addi.n	a10, a8, 8
40085a0f:	932a80        	movnez	a2, a10, a8
40085a12:	4988      	l32i.n	a8, a9, 16
40085a14:	03a8      	l32i.n	a10, a3, 0
40085a16:	0008e0        	callx8	a8
40085a19:	f01d      	retw.n
	...

40085a1c <coex_arbit_next>:
40085a1c:	004136        	entry	a1, 32
40085a1f:	fca841        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40085a22:	ff6c31        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085a25:	0488      	l32i.n	a8, a4, 0
40085a27:	03a8      	l32i.n	a10, a3, 0
40085a29:	3888      	l32i.n	a8, a8, 12
40085a2b:	0008e0        	callx8	a8
40085a2e:	b28c      	beqz.n	a2, 40085a3d <coex_arbit_next+0x21>
40085a30:	f8c222        	addi	a2, a2, -8
40085a33:	1288      	l32i.n	a8, a2, 4
40085a35:	020c      	movi.n	a2, 0
40085a37:	08c892        	addi	a9, a8, 8
40085a3a:	932980        	movnez	a2, a9, a8
40085a3d:	0abd      	mov.n	a11, a10
40085a3f:	0448      	l32i.n	a4, a4, 0
40085a41:	03a8      	l32i.n	a10, a3, 0
40085a43:	4448      	l32i.n	a4, a4, 16
40085a45:	0004e0        	callx8	a4
40085a48:	f01d      	retw.n
	...

40085a4c <coex_arbit_clean_overtime_until>:
40085a4c:	004136        	entry	a1, 32
40085a4f:	fc9c51        	l32r	a5, 40084cc0 <coex_bb_reset_unlock+0x10>
40085a52:	ff6061        	l32r	a6, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085a55:	0538      	l32i.n	a3, a5, 0
40085a57:	06a8      	l32i.n	a10, a6, 0
40085a59:	3338      	l32i.n	a3, a3, 12
40085a5b:	0003e0        	callx8	a3
40085a5e:	0a7d      	mov.n	a7, a10
40085a60:	ff4531        	l32r	a3, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085a63:	002332        	l32i	a3, a3, 0
40085a66:	00c356        	bnez	a3, 40085a76 <coex_arbit_clean_overtime_until+0x2a>
40085a69:	0528      	l32i.n	a2, a5, 0
40085a6b:	07bd      	mov.n	a11, a7
40085a6d:	4228      	l32i.n	a2, a2, 16
40085a6f:	06a8      	l32i.n	a10, a6, 0
40085a71:	0002e0        	callx8	a2
40085a74:	f01d      	retw.n
40085a76:	08c342        	addi	a4, a3, 8
40085a79:	ec1247        	beq	a2, a4, 40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a7c:	0423a2        	l32i	a10, a3, 16
40085a7f:	012342        	l32i	a4, a3, 4
40085a82:	ffb7e5        	call8	40085600 <coex_time_is_past>
40085a85:	3a8c      	beqz.n	a10, 40085a8c <coex_arbit_clean_overtime_until+0x40>
40085a87:	03ad      	mov.n	a10, a3
40085a89:	ffcee5        	call8	40085778 <coex_timer_ts_start_disalarm+0xbc>
40085a8c:	043d      	mov.n	a3, a4
40085a8e:	848b      	addi.n	a8, a4, 8
40085a90:	fd5416        	beqz	a4, 40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a93:	e59287        	bne	a2, a8, 40085a7c <coex_arbit_clean_overtime_until+0x30>
40085a96:	fff3c6        	j	40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a99:	000000        	ill

40085a9c <get_mmu_region>:
40085a9c:	004136        	entry	a1, 32
40085a9f:	52dc      	bnez.n	a2, 40085ab8 <get_mmu_region+0x1c>
40085aa1:	080c      	movi.n	a8, 0
40085aa3:	0389      	s32i.n	a8, a3, 0
40085aa5:	034c      	movi.n	a3, 64
40085aa7:	0439      	s32i.n	a3, a4, 0
40085aa9:	f03d      	nop.n
40085aab:	f03d      	nop.n
40085aad:	f03d      	nop.n
40085aaf:	f03d      	nop.n
40085ab1:	eb3831        	l32r	a3, 40080794 <_init_end+0x394>
40085ab4:	0539      	s32i.n	a3, a5, 0
40085ab6:	f01d      	retw.n
40085ab8:	d84c      	movi.n	a8, 77
40085aba:	0389      	s32i.n	a8, a3, 0
40085abc:	73a032        	movi	a3, 115
40085abf:	0439      	s32i.n	a3, a4, 0
40085ac1:	f03d      	nop.n
40085ac3:	f03d      	nop.n
40085ac5:	f03d      	nop.n
40085ac7:	f03d      	nop.n
40085ac9:	eb3331        	l32r	a3, 40080798 <_init_end+0x398>
40085acc:	0539      	s32i.n	a3, a5, 0
40085ace:	f01d      	retw.n

40085ad0 <spi_flash_mmap_init>:
40085ad0:	004136        	entry	a1, 32
40085ad3:	eb3221        	l32r	a2, 4008079c <_init_end+0x39c>
40085ad6:	000222        	l8ui	a2, a2, 0
40085ad9:	075256        	bnez	a2, 40085b52 <spi_flash_mmap_init+0x82>
40085adc:	006560        	rsil	a6, 5
40085adf:	030c      	movi.n	a3, 0
40085ae1:	0017c6        	j	40085b44 <spi_flash_mmap_init+0x74>
40085ae4:	53e000        	max	a14, a0, a0
40085ae7:	2e4111        	l32r	a1, 400513ec <r_lm_init+0x26b8>
40085aea:	40eb      	addi.n	a4, a0, 14
40085aec:	408045        	call0	400c62f4 <_rtc_text_end+0x62f4>
40085aef:	e520a4        	lsi	f10, a0, 0x394
40085af2:	a0fbe6        	bgei	a11, 0x100, 40085a96 <coex_arbit_clean_overtime_until+0x4a>
40085af5:	202a      	add.n	a2, a0, a2
40085af7:	eb2b81        	l32r	a8, 400807a4 <_init_end+0x3a4>
40085afa:	558a      	add.n	a5, a5, a8
40085afc:	05ad      	mov.n	a10, a5
40085afe:	fbe625        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085b01:	0712a7        	beq	a2, a10, 40085b0c <spi_flash_mmap_init+0x3c>
40085b04:	00a122        	movi	a2, 0x100
40085b07:	0020c0        	memw
40085b0a:	0429      	s32i.n	a2, a4, 0
40085b0c:	25e287        	bbsi	a2, 8, 40085b35 <spi_flash_mmap_init+0x65>
40085b0f:	1b0c      	movi.n	a11, 1
40085b11:	080c      	movi.n	a8, 0
40085b13:	089d      	mov.n	a9, a8
40085b15:	839b30        	moveqz	a9, a11, a3
40085b18:	b3c3a2        	addi	a10, a3, -77
40085b1b:	838ba0        	moveqz	a8, a11, a10
40085b1e:	208890        	or	a8, a8, a9
40085b21:	08cc      	bnez.n	a8, 40085b25 <spi_flash_mmap_init+0x55>
40085b23:	e28c      	beqz.n	a2, 40085b35 <spi_flash_mmap_init+0x65>
40085b25:	eb1d21        	l32r	a2, 4008079c <_init_end+0x39c>
40085b28:	223a      	add.n	a2, a2, a3
40085b2a:	140c      	movi.n	a4, 1
40085b2c:	004242        	s8i	a4, a2, 0
40085b2f:	0020c0        	memw
40085b32:	000306        	j	40085b42 <spi_flash_mmap_init+0x72>
40085b35:	00a122        	movi	a2, 0x100
40085b38:	0020c0        	memw
40085b3b:	0429      	s32i.n	a2, a4, 0
40085b3d:	0020c0        	memw
40085b40:	0529      	s32i.n	a2, a5, 0
40085b42:	331b      	addi.n	a3, a3, 1
40085b44:	ffa022        	movi	a2, 255
40085b47:	9aa237        	bge	a2, a3, 40085ae5 <spi_flash_mmap_init+0x15>
40085b4a:	06ad      	mov.n	a10, a6
40085b4c:	ea7f81        	l32r	a8, 40080548 <_init_end+0x148>
40085b4f:	0008e0        	callx8	a8
40085b52:	f01d      	retw.n

40085b54 <spi_flash_protected_mmap_init>:
40085b54:	004136        	entry	a1, 32
40085b57:	006d65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085b5a:	fff765        	call8	40085ad0 <spi_flash_mmap_init>
40085b5d:	007b65        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085b60:	f01d      	retw.n
	...

40085b64 <spi_flash_protected_read_mmu_entry>:
40085b64:	004136        	entry	a1, 32
40085b67:	006c65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085b6a:	eb0da1        	l32r	a10, 400807a0 <_init_end+0x3a0>
40085b6d:	a0a2a0        	addx4	a10, a2, a10
40085b70:	fbdd65        	call8	40081948 <esp_dport_access_reg_read>
40085b73:	202aa0        	or	a2, a10, a10
40085b76:	0079e5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085b79:	f01d      	retw.n
	...

40085b7c <spi_flash_ensure_unmodified_region>:
40085b7c:	004136        	entry	a1, 32
40085b7f:	eb0a81        	l32r	a8, 400807a8 <_init_end+0x3a8>
40085b82:	10d280        	and	a13, a2, a8
40085b85:	c022d0        	sub	a2, a2, a13
40085b88:	332a      	add.n	a3, a3, a2
40085b8a:	eb08c1        	l32r	a12, 400807ac <_init_end+0x3ac>
40085b8d:	23ca      	add.n	a2, a3, a12
40085b8f:	10c280        	and	a12, a2, a8
40085b92:	0d8d      	mov.n	a8, a13
40085b94:	001746        	j	40085bf5 <spi_flash_ensure_unmodified_region+0x79>
40085b97:	908000        	addx2	a8, a0, a0
40085b9a:	a0a2f5        	call12	400265c8 <lmp_pref_rate_handler+0x4c>
40085b9d:	ff          	.byte 0xff
40085b9e:	5c2a97        	blt	a10, a9, 40085bfe <spi_flash_ensure_unmodified_region+0x82>
40085ba1:	41b590        	srli	a11, a9, 5
40085ba4:	1a0c      	movi.n	a10, 1
40085ba6:	401900        	ssl	a9
40085ba9:	a19a00        	sll	a9, a10
40085bac:	eb01a1        	l32r	a10, 400807b0 <_init_end+0x3b0>
40085baf:	a0aba0        	addx4	a10, a11, a10
40085bb2:	0aa8      	l32i.n	a10, a10, 0
40085bb4:	3809a7        	bnone	a9, a10, 40085bf0 <spi_flash_ensure_unmodified_region+0x74>
40085bb7:	012325        	call8	40086de8 <esp_spiram_writeback_cache>
40085bba:	fbbc25        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085bbd:	0a0c      	movi.n	a10, 0
40085bbf:	ea3781        	l32r	a8, 4008049c <_init_end+0x9c>
40085bc2:	0008e0        	callx8	a8
40085bc5:	fbc8a5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085bc8:	fbbb25        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085bcb:	1a0c      	movi.n	a10, 1
40085bcd:	ea3381        	l32r	a8, 4008049c <_init_end+0x9c>
40085bd0:	0008e0        	callx8	a8
40085bd3:	fbc7e5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085bd6:	eaf621        	l32r	a2, 400807b0 <_init_end+0x3b0>
40085bd9:	080c      	movi.n	a8, 0
40085bdb:	0289      	s32i.n	a8, a2, 0
40085bdd:	1289      	s32i.n	a8, a2, 4
40085bdf:	2289      	s32i.n	a8, a2, 8
40085be1:	3289      	s32i.n	a8, a2, 12
40085be3:	4289      	s32i.n	a8, a2, 16
40085be5:	5289      	s32i.n	a8, a2, 20
40085be7:	6289      	s32i.n	a8, a2, 24
40085be9:	7289      	s32i.n	a8, a2, 28
40085beb:	120c      	movi.n	a2, 1
40085bed:	f01d      	retw.n
40085bef:	f19100        	lsi	f0, a1, 0x3c4
40085bf2:	9aea      	add.n	a9, a10, a14
40085bf4:	ca88      	l32i.n	a8, a10, 48
40085bf6:	979d      	lsi	f9, a7, 28
40085bf8:	9d38      	l32i.n	a3, a13, 36
40085bfa:	020c      	movi.n	a2, 0
40085bfc:	f01d      	retw.n
40085bfe:	020c      	movi.n	a2, 0
40085c00:	f01d      	retw.n
	...

40085c04 <spi_flash_mmap_pages>:
40085c04:	00a136        	entry	a1, 80
40085c07:	0159      	s32i.n	a5, a1, 0
40085c09:	1169      	s32i.n	a6, a1, 4
40085c0b:	26d316        	beqz	a3, 40085e7c <spi_flash_mmap_pages+0x278>
40085c0e:	f03d      	nop.n
40085c10:	f03d      	nop.n
40085c12:	f03d      	nop.n
40085c14:	f03d      	nop.n
40085c16:	eae861        	l32r	a6, 400807b8 <_init_end+0x3b8>
40085c19:	626a      	add.n	a6, a2, a6
40085c1b:	150c      	movi.n	a5, 1
40085c1d:	eae771        	l32r	a7, 400807bc <_init_end+0x3bc>
40085c20:	01b767        	bgeu	a7, a6, 40085c25 <spi_flash_mmap_pages+0x21>
40085c23:	050c      	movi.n	a5, 0
40085c25:	745050        	extui	a5, a5, 0, 8
40085c28:	eae671        	l32r	a7, 400807c0 <_init_end+0x3c0>
40085c2b:	727a      	add.n	a7, a2, a7
40085c2d:	160c      	movi.n	a6, 1
40085c2f:	eae581        	l32r	a8, 400807c4 <_init_end+0x3c4>
40085c32:	02b877        	bgeu	a8, a7, 40085c38 <spi_flash_mmap_pages+0x34>
40085c35:	00a062        	movi	a6, 0
40085c38:	746060        	extui	a6, a6, 0, 8
40085c3b:	25ec      	bnez.n	a5, 40085c61 <spi_flash_mmap_pages+0x5d>
40085c3d:	06ec      	bnez.n	a6, 40085c61 <spi_flash_mmap_pages+0x5d>
40085c3f:	02a122        	movi	a2, 0x102
40085c42:	f01d      	retw.n
40085c44:	a05620        	addx4	a5, a6, a2
40085c47:	0558      	l32i.n	a5, a5, 0
40085c49:	234596        	bltz	a5, 40085e81 <spi_flash_mmap_pages+0x27d>
40085c4c:	115500        	slli	a5, a5, 16
40085c4f:	eade71        	l32r	a7, 400807c8 <_init_end+0x3c8>
40085c52:	1778      	l32i.n	a7, a7, 4
40085c54:	023577        	bltu	a5, a7, 40085c5a <spi_flash_mmap_pages+0x56>
40085c57:	008b46        	j	40085e88 <spi_flash_mmap_pages+0x284>
40085c5a:	661b      	addi.n	a6, a6, 1
40085c5c:	000106        	j	40085c64 <spi_flash_mmap_pages+0x60>
40085c5f:	620000        	lsi	f0, a0, 0x188
40085c62:	3700a0        	lsi	f10, a0, 220
40085c65:	b1dc36        	entry	a12, 0x58e8
40085c68:	ead9      	s32i.n	a13, a10, 56
40085c6a:	14a0a2        	movi	a10, 20
40085c6d:	fe6a65        	call8	40084314 <heap_caps_malloc>
40085c70:	41a9      	s32i.n	a10, a1, 16
40085c72:	217a16        	beqz	a10, 40085e8d <spi_flash_mmap_pages+0x289>
40085c75:	005b65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085c78:	050c      	movi.n	a5, 0
40085c7a:	6159      	s32i.n	a5, a1, 24
40085c7c:	056d      	mov.n	a6, a5
40085c7e:	000586        	j	40085c98 <spi_flash_mmap_pages+0x94>
40085c81:	a07520        	addx4	a7, a5, a2
40085c84:	0027a2        	l32i	a10, a7, 0
40085c87:	eacbb1        	l32r	a11, 400807b4 <_init_end+0x3b4>
40085c8a:	11aa00        	slli	a10, a10, 16
40085c8d:	ffeee5        	call8	40085b7c <spi_flash_ensure_unmodified_region>
40085c90:	002a16        	beqz	a10, 40085c96 <spi_flash_mmap_pages+0x92>
40085c93:	01a062        	movi	a6, 1
40085c96:	551b      	addi.n	a5, a5, 1
40085c98:	e53537        	bltu	a5, a3, 40085c81 <spi_flash_mmap_pages+0x7d>
40085c9b:	6169      	s32i.n	a6, a1, 24
40085c9d:	ffe325        	call8	40085ad0 <spi_flash_mmap_init>
40085ca0:	2cc1d2        	addi	a13, a1, 44
40085ca3:	28c1c2        	addi	a12, a1, 40
40085ca6:	24c1b2        	addi	a11, a1, 36
40085ca9:	04ad      	mov.n	a10, a4
40085cab:	ffdf25        	call8	40085a9c <get_mmu_region>
40085cae:	a148      	l32i.n	a4, a1, 40
40085cb0:	02b437        	bgeu	a4, a3, 40085cb6 <spi_flash_mmap_pages+0xb2>
40085cb3:	007786        	j	40085e95 <spi_flash_mmap_pages+0x291>
40085cb6:	9168      	l32i.n	a6, a1, 36
40085cb8:	446a      	add.n	a4, a4, a6
40085cba:	c04430        	sub	a4, a4, a3
40085cbd:	441b      	addi.n	a4, a4, 1
40085cbf:	2149      	s32i.n	a4, a1, 8
40085cc1:	000fc6        	j	40085d04 <spi_flash_mmap_pages+0x100>
40085cc4:	006570        	rsil	a7, 5
40085cc7:	064d      	mov.n	a4, a6
40085cc9:	050c      	movi.n	a5, 0
40085ccb:	000806        	j	40085cef <spi_flash_mmap_pages+0xeb>
40085cce:	a10000        	sll	a0, a0
40085cd1:	a0eab4        	lsi	f11, a10, 0x280
40085cd4:	a5a0a4        	lsi	f10, a0, 0x294
40085cd7:	fbc8      	l32i.n	a12, a11, 60
40085cd9:	eab081        	l32r	a8, 4008079c <_init_end+0x39c>
40085cdc:	884a      	add.n	a8, a8, a4
40085cde:	000882        	l8ui	a8, a8, 0
40085ce1:	688c      	beqz.n	a8, 40085ceb <spi_flash_mmap_pages+0xe7>
40085ce3:	a08520        	addx4	a8, a5, a2
40085ce6:	0888      	l32i.n	a8, a8, 0
40085ce8:	089a87        	bne	a10, a8, 40085cf4 <spi_flash_mmap_pages+0xf0>
40085ceb:	441b      	addi.n	a4, a4, 1
40085ced:	551b      	addi.n	a5, a5, 1
40085cef:	863a      	add.n	a8, a6, a3
40085cf1:	db3487        	bltu	a4, a8, 40085cd0 <spi_flash_mmap_pages+0xcc>
40085cf4:	07ad      	mov.n	a10, a7
40085cf6:	ea1481        	l32r	a8, 40080548 <_init_end+0x148>
40085cf9:	0008e0        	callx8	a8
40085cfc:	c04460        	sub	a4, a4, a6
40085cff:	061347        	beq	a3, a4, 40085d09 <spi_flash_mmap_pages+0x105>
40085d02:	661b      	addi.n	a6, a6, 1
40085d04:	2148      	l32i.n	a4, a1, 8
40085d06:	ba2647        	blt	a6, a4, 40085cc4 <spi_flash_mmap_pages+0xc0>
40085d09:	2158      	l32i.n	a5, a1, 8
40085d0b:	199657        	bne	a6, a5, 40085d28 <spi_flash_mmap_pages+0x124>
40085d0e:	020c      	movi.n	a2, 0
40085d10:	1138      	l32i.n	a3, a1, 4
40085d12:	0329      	s32i.n	a2, a3, 0
40085d14:	f03d      	nop.n
40085d16:	f03d      	nop.n
40085d18:	f03d      	nop.n
40085d1a:	f03d      	nop.n
40085d1c:	0148      	l32i.n	a4, a1, 0
40085d1e:	0429      	s32i.n	a2, a4, 0
40085d20:	5129      	s32i.n	a2, a1, 20
40085d22:	01a122        	movi	a2, 0x101
40085d25:	0044c6        	j	40085e3c <spi_flash_mmap_pages+0x238>
40085d28:	006550        	rsil	a5, 5
40085d2b:	7159      	s32i.n	a5, a1, 28
40085d2d:	067d      	mov.n	a7, a6
40085d2f:	050c      	movi.n	a5, 0
40085d31:	5159      	s32i.n	a5, a1, 20
40085d33:	2169      	s32i.n	a6, a1, 8
40085d35:	3129      	s32i.n	a2, a1, 12
40085d37:	002286        	j	40085dc5 <spi_flash_mmap_pages+0x1c1>
40085d3a:	000000        	ill
40085d3d:	1127e0        	slli	a2, a7, 2
40085d40:	ea9841        	l32r	a4, 400807a0 <_init_end+0x3a0>
40085d43:	804240        	add	a4, a2, a4
40085d46:	20a440        	or	a10, a4, a4
40085d49:	fbc165        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085d4c:	206aa0        	or	a6, a10, a10
40085d4f:	ea9581        	l32r	a8, 400807a4 <_init_end+0x3a4>
40085d52:	228a      	add.n	a2, a2, a8
40085d54:	02ad      	mov.n	a10, a2
40085d56:	fbc0a5        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085d59:	ea9081        	l32r	a8, 4008079c <_init_end+0x39c>
40085d5c:	887a      	add.n	a8, a8, a7
40085d5e:	000882        	l8ui	a8, a8, 0
40085d61:	d89c      	beqz.n	a8, 40085d82 <spi_flash_mmap_pages+0x17e>
40085d63:	31b8      	l32i.n	a11, a1, 12
40085d65:	a095b0        	addx4	a9, a5, a11
40085d68:	0998      	l32i.n	a9, a9, 0
40085d6a:	029697        	bne	a6, a9, 40085d70 <spi_flash_mmap_pages+0x16c>
40085d6d:	111a97        	beq	a10, a9, 40085d82 <spi_flash_mmap_pages+0x17e>
40085d70:	ea98d1        	l32r	a13, 400807d0 <_init_end+0x3d0>
40085d73:	ea98c1        	l32r	a12, 400807d4 <_init_end+0x3d4>
40085d76:	dca0b2        	movi	a11, 220
40085d79:	ea97a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085d7c:	201110        	or	a1, a1, a1
40085d7f:	54d4e5        	call8	400daacc <__assert_func>
40085d82:	38ec      	bnez.n	a8, 40085da9 <spi_flash_mmap_pages+0x1a5>
40085d84:	3188      	l32i.n	a8, a1, 12
40085d86:	a09580        	addx4	a9, a5, a8
40085d89:	0988      	l32i.n	a8, a9, 0
40085d8b:	029687        	bne	a6, a8, 40085d91 <spi_flash_mmap_pages+0x18d>
40085d8e:	171a87        	beq	a10, a8, 40085da9 <spi_flash_mmap_pages+0x1a5>
40085d91:	0020c0        	memw
40085d94:	0489      	s32i.n	a8, a4, 0
40085d96:	f03d      	nop.n
40085d98:	f03d      	nop.n
40085d9a:	f03d      	nop.n
40085d9c:	f03d      	nop.n
40085d9e:	0948      	l32i.n	a4, a9, 0
40085da0:	0020c0        	memw
40085da3:	0249      	s32i.n	a4, a2, 0
40085da5:	120c      	movi.n	a2, 1
40085da7:	5129      	s32i.n	a2, a1, 20
40085da9:	f03d      	nop.n
40085dab:	f03d      	nop.n
40085dad:	f03d      	nop.n
40085daf:	f03d      	nop.n
40085db1:	ea7a21        	l32r	a2, 4008079c <_init_end+0x39c>
40085db4:	227a      	add.n	a2, a2, a7
40085db6:	000242        	l8ui	a4, a2, 0
40085db9:	441b      	addi.n	a4, a4, 1
40085dbb:	004242        	s8i	a4, a2, 0
40085dbe:	0020c0        	memw
40085dc1:	771b      	addi.n	a7, a7, 1
40085dc3:	551b      	addi.n	a5, a5, 1
40085dc5:	f03d      	nop.n
40085dc7:	f03d      	nop.n
40085dc9:	2148      	l32i.n	a4, a1, 8
40085dcb:	243a      	add.n	a2, a4, a3
40085dcd:	021277        	beq	a2, a7, 40085dd3 <spi_flash_mmap_pages+0x1cf>
40085dd0:	ffda46        	j	40085d3d <spi_flash_mmap_pages+0x139>
40085dd3:	046d      	mov.n	a6, a4
40085dd5:	71a8      	l32i.n	a10, a1, 28
40085dd7:	e9dc81        	l32r	a8, 40080548 <_init_end+0x148>
40085dda:	0008e0        	callx8	a8
40085ddd:	ea7f21        	l32r	a2, 400807dc <_init_end+0x3dc>
40085de0:	0228      	l32i.n	a2, a2, 0
40085de2:	4158      	l32i.n	a5, a1, 16
40085de4:	3529      	s32i.n	a2, a5, 12
40085de6:	228c      	beqz.n	a2, 40085dec <spi_flash_mmap_pages+0x1e8>
40085de8:	45cb      	addi.n	a4, a5, 12
40085dea:	4249      	s32i.n	a4, a2, 16
40085dec:	f03d      	nop.n
40085dee:	f03d      	nop.n
40085df0:	f03d      	nop.n
40085df2:	f03d      	nop.n
40085df4:	ea7a21        	l32r	a2, 400807dc <_init_end+0x3dc>
40085df7:	042142        	l32i	a4, a1, 16
40085dfa:	006242        	s32i	a4, a2, 0
40085dfd:	4429      	s32i.n	a2, a4, 16
40085dff:	1469      	s32i.n	a6, a4, 4
40085e01:	2439      	s32i.n	a3, a4, 8
40085e03:	f03d      	nop.n
40085e05:	f03d      	nop.n
40085e07:	f03d      	nop.n
40085e09:	f03d      	nop.n
40085e0b:	ea7531        	l32r	a3, 400807e0 <_init_end+0x3e0>
40085e0e:	0328      	l32i.n	a2, a3, 0
40085e10:	221b      	addi.n	a2, a2, 1
40085e12:	0329      	s32i.n	a2, a3, 0
40085e14:	0429      	s32i.n	a2, a4, 0
40085e16:	f03d      	nop.n
40085e18:	f03d      	nop.n
40085e1a:	f03d      	nop.n
40085e1c:	f03d      	nop.n
40085e1e:	1158      	l32i.n	a5, a1, 4
40085e20:	0529      	s32i.n	a2, a5, 0
40085e22:	f03d      	nop.n
40085e24:	f03d      	nop.n
40085e26:	f03d      	nop.n
40085e28:	f03d      	nop.n
40085e2a:	9128      	l32i.n	a2, a1, 36
40085e2c:	c02620        	sub	a2, a6, a2
40085e2f:	112200        	slli	a2, a2, 16
40085e32:	b138      	l32i.n	a3, a1, 44
40085e34:	223a      	add.n	a2, a2, a3
40085e36:	0138      	l32i.n	a3, a1, 0
40085e38:	0329      	s32i.n	a2, a3, 0
40085e3a:	020c      	movi.n	a2, 0
40085e3c:	f03d      	nop.n
40085e3e:	f03d      	nop.n
40085e40:	f03d      	nop.n
40085e42:	6148      	l32i.n	a4, a1, 24
40085e44:	5158      	l32i.n	a5, a1, 20
40085e46:	1fb457        	bgeu	a4, a5, 40085e69 <spi_flash_mmap_pages+0x265>
40085e49:	00f9e5        	call8	40086de8 <esp_spiram_writeback_cache>
40085e4c:	fb92e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085e4f:	00a0a2        	movi	a10, 0
40085e52:	e99281        	l32r	a8, 4008049c <_init_end+0x9c>
40085e55:	0008e0        	callx8	a8
40085e58:	fb9f65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085e5b:	fb9225        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085e5e:	1a0c      	movi.n	a10, 1
40085e60:	e98f81        	l32r	a8, 4008049c <_init_end+0x9c>
40085e63:	0008e0        	callx8	a8
40085e66:	fb9ea5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085e69:	004aa5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085e6c:	0148      	l32i.n	a4, a1, 0
40085e6e:	0438      	l32i.n	a3, a4, 0
40085e70:	43ec      	bnez.n	a3, 40085e98 <spi_flash_mmap_pages+0x294>
40085e72:	41a8      	l32i.n	a10, a1, 16
40085e74:	ea5c81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085e77:	0008e0        	callx8	a8
40085e7a:	f01d      	retw.n
40085e7c:	02a122        	movi	a2, 0x102
40085e7f:	f01d      	retw.n
40085e81:	02a122        	movi	a2, 0x102
40085e84:	f01d      	retw.n
40085e86:	220000        	orb	b0, b0, b0
40085e89:	1d02a1        	l32r	a10, 4004d294 <r_llm_init+0x89c>
40085e8c:	a122f0        	lsi	f15, a2, 0x284
40085e8f:	f01d01        	l32r	a0, 40081f04 <timer_alarm_isr+0x90>
40085e92:	000000        	ill
40085e95:	01a122        	movi	a2, 0x101
40085e98:	f01d      	retw.n
	...

40085e9c <spi_flash_mmap>:
40085e9c:	006136        	entry	a1, 48
40085e9f:	f47020        	extui	a7, a2, 0, 16
40085ea2:	05a756        	bnez	a7, 40085f00 <spi_flash_mmap+0x64>
40085ea5:	807230        	add	a7, a2, a3
40085ea8:	ea4881        	l32r	a8, 400807c8 <_init_end+0x3c8>
40085eab:	012882        	l32i	a8, a8, 4
40085eae:	533877        	bltu	a8, a7, 40085f05 <spi_flash_mmap+0x69>
40085eb1:	f52020        	extui	a2, a2, 16, 16
40085eb4:	ea3e71        	l32r	a7, 400807ac <_init_end+0x3ac>
40085eb7:	803370        	add	a3, a3, a7
40085eba:	f53030        	extui	a3, a3, 16, 16
40085ebd:	3139      	s32i.n	a3, a1, 12
40085ebf:	037d      	mov.n	a7, a3
40085ec1:	f03d      	nop.n
40085ec3:	f03d      	nop.n
40085ec5:	f03d      	nop.n
40085ec7:	ea48b1        	l32r	a11, 400807e8 <_init_end+0x3e8>
40085eca:	11a3e0        	slli	a10, a3, 2
40085ecd:	fe4465        	call8	40084314 <heap_caps_malloc>
40085ed0:	0a3d      	mov.n	a3, a10
40085ed2:	6abc      	beqz.n	a10, 40085f0c <spi_flash_mmap+0x70>
40085ed4:	080c      	movi.n	a8, 0
40085ed6:	000206        	j	40085ee2 <spi_flash_mmap+0x46>
40085ed9:	a09830        	addx4	a9, a8, a3
40085edc:	a82a      	add.n	a10, a8, a2
40085ede:	09a9      	s32i.n	a10, a9, 0
40085ee0:	881b      	addi.n	a8, a8, 1
40085ee2:	f32877        	blt	a8, a7, 40085ed9 <spi_flash_mmap+0x3d>
40085ee5:	06ed      	mov.n	a14, a6
40085ee7:	05dd      	mov.n	a13, a5
40085ee9:	04cd      	mov.n	a12, a4
40085eeb:	31b8      	l32i.n	a11, a1, 12
40085eed:	03ad      	mov.n	a10, a3
40085eef:	ffd165        	call8	40085c04 <spi_flash_mmap_pages>
40085ef2:	0a2d      	mov.n	a2, a10
40085ef4:	03ad      	mov.n	a10, a3
40085ef6:	ea3b81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085ef9:	0008e0        	callx8	a8
40085efc:	f01d      	retw.n
40085efe:	220000        	orb	b0, b0, b0
40085f01:	1d02a1        	l32r	a10, 4004d30c <r_llm_init+0x914>
40085f04:	a122f0        	lsi	f15, a2, 0x284
40085f07:	f01d02        	l16ui	a0, a13, 0x1e0
40085f0a:	220000        	orb	b0, b0, b0
40085f0d:	1d01a1        	l32r	a10, 4004d314 <r_llm_init+0x91c>
40085f10:	0000f0        	callx12	a0
	...

40085f14 <spi_flash_munmap>:
40085f14:	004136        	entry	a1, 32
40085f17:	003165        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085f1a:	ea3031        	l32r	a3, 400807dc <_init_end+0x3dc>
40085f1d:	0338      	l32i.n	a3, a3, 0
40085f1f:	002546        	j	40085fb8 <spi_flash_munmap+0xa4>
40085f22:	000000        	ill
40085f25:	0388      	l32i.n	a8, a3, 0
40085f27:	021827        	beq	a8, a2, 40085f2d <spi_flash_munmap+0x19>
40085f2a:	0021c6        	j	40085fb5 <spi_flash_munmap+0xa1>
40085f2d:	1398      	l32i.n	a9, a3, 4
40085f2f:	001646        	j	40085f8c <spi_flash_munmap+0x78>
40085f32:	810000        	src	a0, a0, a0
40085f35:	ea1a      	add.n	a14, a10, a1
40085f37:	889a      	add.n	a8, a8, a9
40085f39:	000882        	l8ui	a8, a8, 0
40085f3c:	08dc      	bnez.n	a8, 40085f50 <spi_flash_munmap+0x3c>
40085f3e:	ea2bd1        	l32r	a13, 400807ec <_init_end+0x3ec>
40085f41:	ea2bc1        	l32r	a12, 400807f0 <_init_end+0x3f0>
40085f44:	10a1b2        	movi	a11, 0x110
40085f47:	ea24a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085f4a:	201110        	or	a1, a1, a1
40085f4d:	54b7e5        	call8	400daacc <__assert_func>
40085f50:	880b      	addi.n	a8, a8, -1
40085f52:	748080        	extui	a8, a8, 0, 8
40085f55:	ea11a1        	l32r	a10, 4008079c <_init_end+0x39c>
40085f58:	aa9a      	add.n	a10, a10, a9
40085f5a:	004a82        	s8i	a8, a10, 0
40085f5d:	0020c0        	memw
40085f60:	68ec      	bnez.n	a8, 40085f8a <spi_flash_munmap+0x76>
40085f62:	1189e0        	slli	a8, a9, 2
40085f65:	f03d      	nop.n
40085f67:	f03d      	nop.n
40085f69:	f03d      	nop.n
40085f6b:	ea0da1        	l32r	a10, 400807a0 <_init_end+0x3a0>
40085f6e:	a8aa      	add.n	a10, a8, a10
40085f70:	00a1b2        	movi	a11, 0x100
40085f73:	0020c0        	memw
40085f76:	0ab9      	s32i.n	a11, a10, 0
40085f78:	f03d      	nop.n
40085f7a:	f03d      	nop.n
40085f7c:	f03d      	nop.n
40085f7e:	f03d      	nop.n
40085f80:	ea09a1        	l32r	a10, 400807a4 <_init_end+0x3a4>
40085f83:	88aa      	add.n	a8, a8, a10
40085f85:	0020c0        	memw
40085f88:	08b9      	s32i.n	a11, a8, 0
40085f8a:	991b      	addi.n	a9, a9, 1
40085f8c:	f03d      	nop.n
40085f8e:	f03d      	nop.n
40085f90:	f03d      	nop.n
40085f92:	13a8      	l32i.n	a10, a3, 4
40085f94:	2388      	l32i.n	a8, a3, 8
40085f96:	8a8a      	add.n	a8, a10, a8
40085f98:	982987        	blt	a9, a8, 40085f34 <spi_flash_munmap+0x20>
40085f9b:	3328      	l32i.n	a2, a3, 12
40085f9d:	328c      	beqz.n	a2, 40085fa4 <spi_flash_munmap+0x90>
40085f9f:	4388      	l32i.n	a8, a3, 16
40085fa1:	046282        	s32i	a8, a2, 16
40085fa4:	f03d      	nop.n
40085fa6:	f03d      	nop.n
40085fa8:	f03d      	nop.n
40085faa:	f03d      	nop.n
40085fac:	4328      	l32i.n	a2, a3, 16
40085fae:	3388      	l32i.n	a8, a3, 12
40085fb0:	0289      	s32i.n	a8, a2, 0
40085fb2:	000146        	j	40085fbb <spi_flash_munmap+0xa7>
40085fb5:	032332        	l32i	a3, a3, 12
40085fb8:	f69356        	bnez	a3, 40085f25 <spi_flash_munmap+0x11>
40085fbb:	0035a5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085fbe:	00e356        	bnez	a3, 40085fd0 <spi_flash_munmap+0xbc>
40085fc1:	ea0cd1        	l32r	a13, 400807f4 <_init_end+0x3f4>
40085fc4:	ea0bc1        	l32r	a12, 400807f0 <_init_end+0x3f0>
40085fc7:	1ca1b2        	movi	a11, 0x11c
40085fca:	ea03a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085fcd:	54afe5        	call8	400daacc <__assert_func>
40085fd0:	03ad      	mov.n	a10, a3
40085fd2:	ea0481        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085fd5:	0008e0        	callx8	a8
40085fd8:	f01d      	retw.n
	...

40085fdc <spi_flash_mmap_get_free_pages>:
40085fdc:	006136        	entry	a1, 48
40085fdf:	0024e5        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085fe2:	ffaee5        	call8	40085ad0 <spi_flash_mmap_init>
40085fe5:	d1cb      	addi.n	a13, a1, 12
40085fe7:	c18b      	addi.n	a12, a1, 8
40085fe9:	b14b      	addi.n	a11, a1, 4
40085feb:	02ad      	mov.n	a10, a2
40085fed:	ffaae5        	call8	40085a9c <get_mmu_region>
40085ff0:	006540        	rsil	a4, 5
40085ff3:	1138      	l32i.n	a3, a1, 4
40085ff5:	020c      	movi.n	a2, 0
40085ff7:	000746        	j	40086018 <spi_flash_mmap_get_free_pages+0x3c>
40085ffa:	000000        	ill
40085ffd:	e9e781        	l32r	a8, 4008079c <_init_end+0x39c>
40086000:	883a      	add.n	a8, a8, a3
40086002:	000882        	l8ui	a8, a8, 0
40086005:	00d856        	bnez	a8, 40086016 <spi_flash_mmap_get_free_pages+0x3a>
40086008:	e9e6a1        	l32r	a10, 400807a0 <_init_end+0x3a0>
4008600b:	a0a3a0        	addx4	a10, a3, a10
4008600e:	fb9525        	call8	40081960 <esp_dport_access_sequence_reg_read>
40086011:	01fa66        	bnei	a10, 0x100, 40086016 <spi_flash_mmap_get_free_pages+0x3a>
40086014:	221b      	addi.n	a2, a2, 1
40086016:	331b      	addi.n	a3, a3, 1
40086018:	012192        	l32i	a9, a1, 4
4008601b:	022182        	l32i	a8, a1, 8
4008601e:	898a      	add.n	a8, a9, a8
40086020:	d92387        	blt	a3, a8, 40085ffd <spi_flash_mmap_get_free_pages+0x21>
40086023:	04ad      	mov.n	a10, a4
40086025:	e94881        	l32r	a8, 40080548 <_init_end+0x148>
40086028:	0008e0        	callx8	a8
4008602b:	002ea5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
4008602e:	f01d      	retw.n

40086030 <spi_flash_mark_modified_region>:
40086030:	004136        	entry	a1, 32
40086033:	e9dd81        	l32r	a8, 400807a8 <_init_end+0x3a8>
40086036:	10c280        	and	a12, a2, a8
40086039:	c022c0        	sub	a2, a2, a12
4008603c:	332a      	add.n	a3, a3, a2
4008603e:	e9dbd1        	l32r	a13, 400807ac <_init_end+0x3ac>
40086041:	23da      	add.n	a2, a3, a13
40086043:	10d280        	and	a13, a2, a8
40086046:	0cad      	mov.n	a10, a12
40086048:	000bc6        	j	4008607b <spi_flash_mark_modified_region+0x4b>
4008604b:	a00000        	addx4	a0, a0, a0
4008604e:	82f5b0        	mull	a15, a5, a11
40086051:	b7ffa0        	lsi	f10, a15, 0x2dc
40086054:	2928      	l32i.n	a2, a9, 8
40086056:	4195b0        	srli	a9, a11, 5
40086059:	180c      	movi.n	a8, 1
4008605b:	401b00        	ssl	a11
4008605e:	a18800        	sll	a8, a8
40086061:	e9d3b1        	l32r	a11, 400807b0 <_init_end+0x3b0>
40086064:	a099b0        	addx4	a9, a9, a11
40086067:	09b8      	l32i.n	a11, a9, 0
40086069:	208b80        	or	a8, a11, a8
4008606c:	0989      	s32i.n	a8, a9, 0
4008606e:	f03d      	nop.n
40086070:	f03d      	nop.n
40086072:	f03d      	nop.n
40086074:	f03d      	nop.n
40086076:	e9cf81        	l32r	a8, 400807b4 <_init_end+0x3b4>
40086079:	aa8a      	add.n	a10, a10, a8
4008607b:	8cda      	add.n	a8, a12, a13
4008607d:	cc3a87        	bltu	a10, a8, 4008604d <spi_flash_mark_modified_region+0x1d>
40086080:	f01d      	retw.n
	...

40086084 <spi_flash_phys2cache>:
40086084:	006136        	entry	a1, 48
40086087:	f55020        	extui	a5, a2, 16, 16
4008608a:	e3cc      	bnez.n	a3, 4008609c <spi_flash_phys2cache+0x18>
4008608c:	e9c231        	l32r	a3, 40080794 <_init_end+0x394>
4008608f:	3139      	s32i.n	a3, a1, 12
40086091:	070c      	movi.n	a7, 0
40086093:	044c      	movi.n	a4, 64
40086095:	073d      	mov.n	a3, a7
40086097:	000386        	j	400860a9 <spi_flash_phys2cache+0x25>
4008609a:	410000        	srli	a0, a0, 0
4008609d:	49e9d7        	bbsi	a9, 13, 400860ea <spi_flash_phys2cache+0x66>
400860a0:	074c31        	l32r	a3, 40047dd0 <lld_evt_get_next_free_slot+0x14a4>
400860a3:	00a142        	movi	a4, 0x100
400860a6:	4da032        	movi	a3, 77
400860a9:	001825        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
400860ac:	006560        	rsil	a6, 5
400860af:	000c06        	j	400860e3 <spi_flash_phys2cache+0x5f>
400860b2:	a10000        	sll	a0, a0
400860b5:	e9bb      	addi.n	a14, a9, 11
400860b7:	a0a3a0        	addx4	a10, a3, a10
400860ba:	fb8a65        	call8	40081960 <esp_dport_access_sequence_reg_read>
400860bd:	1f95a7        	bne	a5, a10, 400860e0 <spi_flash_phys2cache+0x5c>
400860c0:	c03370        	sub	a3, a3, a7
400860c3:	113300        	slli	a3, a3, 16
400860c6:	032142        	l32i	a4, a1, 12
400860c9:	803430        	add	a3, a4, a3
400860cc:	06ad      	mov.n	a10, a6
400860ce:	e91e81        	l32r	a8, 40080548 <_init_end+0x148>
400860d1:	0008e0        	callx8	a8
400860d4:	0023e5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
400860d7:	f42020        	extui	a2, a2, 0, 16
400860da:	202320        	or	a2, a3, a2
400860dd:	f01d      	retw.n
400860df:	c33200        	movf	a3, a2, b0
400860e2:	234701        	l32r	a0, 4004ee00 <r_lm_init+0xcc>
400860e5:	60cd      	lsi	f12, a0, 0
400860e7:	8120a6        	blti	a0, 2, 4008606c <spi_flash_mark_modified_region+0x3c>
400860ea:	e0e917        	bbsi	a9, 1, 400860ce <spi_flash_phys2cache+0x4a>
400860ed:	0008      	l32i.n	a0, a0, 0
400860ef:	002265        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
400860f2:	00a022        	movi	a2, 0
400860f5:	f01d      	retw.n
	...

400860f8 <spi_flash_restore_cache>:
400860f8:	004136        	entry	a1, 32
400860fb:	036256        	bnez	a2, 40086135 <spi_flash_restore_cache+0x3d>
400860fe:	e9bf41        	l32r	a4, 400807fc <_init_end+0x3fc>
40086101:	20a440        	or	a10, a4, a4
40086104:	fb8425        	call8	40081948 <esp_dport_access_reg_read>
40086107:	820c      	movi.n	a2, 8
40086109:	20aa20        	or	a10, a10, a2
4008610c:	0020c0        	memw
4008610f:	04a9      	s32i.n	a10, a4, 0
40086111:	f03d      	nop.n
40086113:	f03d      	nop.n
40086115:	f03d      	nop.n
40086117:	f03d      	nop.n
40086119:	e9b941        	l32r	a4, 40080800 <_init_end+0x400>
4008611c:	04ad      	mov.n	a10, a4
4008611e:	fb82a5        	call8	40081948 <esp_dport_access_reg_read>
40086121:	c0af22        	movi	a2, -64
40086124:	10aa20        	and	a10, a10, a2
40086127:	543030        	extui	a3, a3, 0, 6
4008612a:	203a30        	or	a3, a10, a3
4008612d:	0020c0        	memw
40086130:	0439      	s32i.n	a3, a4, 0
40086132:	f01d      	retw.n
40086134:	b32100        	movgez	a2, a1, a0
40086137:	20e9      	s32i.n	a14, a0, 8
40086139:	e520a2        	l32i	a10, a0, 0x394
4008613c:	82fb80        	mull	a15, a11, a8
4008613f:	8008a0        	add	a0, a8, a10
40086142:	20aa      	add.n	a2, a0, a10
40086144:	0020c0        	memw
40086147:	02a9      	s32i.n	a10, a2, 0
40086149:	f03d      	nop.n
4008614b:	f03d      	nop.n
4008614d:	f03d      	nop.n
4008614f:	f03d      	nop.n
40086151:	e9ad21        	l32r	a2, 40080808 <_init_end+0x408>
40086154:	02ad      	mov.n	a10, a2
40086156:	fb7f25        	call8	40081948 <esp_dport_access_reg_read>
40086159:	c0af82        	movi	a8, -64
4008615c:	10aa80        	and	a10, a10, a8
4008615f:	543030        	extui	a3, a3, 0, 6
40086162:	203a30        	or	a3, a10, a3
40086165:	0020c0        	memw
40086168:	0239      	s32i.n	a3, a2, 0
4008616a:	f01d      	retw.n

4008616c <spi_flash_op_block_func>:
4008616c:	004136        	entry	a1, 32
4008616f:	024a65        	call8	40088614 <vTaskSuspendAll>
40086172:	fb2ba5        	call8	4008142c <esp_intr_noniram_disable>
40086175:	00a092        	movi	a9, 0
40086178:	e9a581        	l32r	a8, 4008080c <_init_end+0x40c>
4008617b:	0020c0        	memw
4008617e:	004892        	s8i	a9, a8, 0
40086181:	0020c0        	memw
40086184:	01a092        	movi	a9, 1
40086187:	f03d      	nop.n
40086189:	f03d      	nop.n
4008618b:	f03d      	nop.n
4008618d:	e9a081        	l32r	a8, 40080810 <_init_end+0x410>
40086190:	0020c0        	memw
40086193:	004892        	s8i	a9, a8, 0
40086196:	0020c0        	memw
40086199:	f03d      	nop.n
4008619b:	f03d      	nop.n
4008619d:	f03d      	nop.n
4008619f:	f03d      	nop.n
400861a1:	e99a81        	l32r	a8, 4008080c <_init_end+0x40c>
400861a4:	000882        	l8ui	a8, a8, 0
400861a7:	748080        	extui	a8, a8, 0, 8
400861aa:	feb816        	beqz	a8, 40086199 <spi_flash_op_block_func+0x2d>
400861ad:	e99981        	l32r	a8, 40080814 <_init_end+0x414>
400861b0:	a08280        	addx4	a8, a2, a8
400861b3:	08b8      	l32i.n	a11, a8, 0
400861b5:	02ad      	mov.n	a10, a2
400861b7:	fff425        	call8	400860f8 <spi_flash_restore_cache>
400861ba:	fb2c65        	call8	40081480 <esp_intr_noniram_enable>
400861bd:	033165        	call8	400894d4 <xTaskResumeAll>
400861c0:	f01d      	retw.n
	...

400861c4 <spi_flash_disable_cache>:
400861c4:	004136        	entry	a1, 32
400861c7:	e2ec      	bnez.n	a2, 400861f9 <spi_flash_disable_cache+0x35>
400861c9:	e98da1        	l32r	a10, 40080800 <_init_end+0x400>
400861cc:	201110        	or	a1, a1, a1
400861cf:	fb77a5        	call8	40081948 <esp_dport_access_reg_read>
400861d2:	5420a0        	extui	a2, a10, 0, 6
400861d5:	e990a1        	l32r	a10, 40080818 <_init_end+0x418>
400861d8:	fb76e5        	call8	40081948 <esp_dport_access_reg_read>
400861db:	b4a7a0        	extui	a10, a10, 7, 12
400861de:	f31a66        	bnei	a10, 1, 400861d5 <spi_flash_disable_cache+0x11>
400861e1:	e98641        	l32r	a4, 400807fc <_init_end+0x3fc>
400861e4:	20a440        	or	a10, a4, a4
400861e7:	fb7625        	call8	40081948 <esp_dport_access_reg_read>
400861ea:	f7af82        	movi	a8, -9
400861ed:	10aa80        	and	a10, a10, a8
400861f0:	0020c0        	memw
400861f3:	0064a2        	s32i	a10, a4, 0
400861f6:	000b06        	j	40086226 <spi_flash_disable_cache+0x62>
400861f9:	e983a1        	l32r	a10, 40080808 <_init_end+0x408>
400861fc:	201110        	or	a1, a1, a1
400861ff:	fb74a5        	call8	40081948 <esp_dport_access_reg_read>
40086202:	5420a0        	extui	a2, a10, 0, 6
40086205:	e985a1        	l32r	a10, 4008081c <_init_end+0x41c>
40086208:	fb73e5        	call8	40081948 <esp_dport_access_reg_read>
4008620b:	b4a7a0        	extui	a10, a10, 7, 12
4008620e:	f31a66        	bnei	a10, 1, 40086205 <spi_flash_disable_cache+0x41>
40086211:	e97c41        	l32r	a4, 40080804 <_init_end+0x404>
40086214:	20a440        	or	a10, a4, a4
40086217:	fb7325        	call8	40081948 <esp_dport_access_reg_read>
4008621a:	f7af82        	movi	a8, -9
4008621d:	10aa80        	and	a10, a10, a8
40086220:	0020c0        	memw
40086223:	0064a2        	s32i	a10, a4, 0
40086226:	0329      	s32i.n	a2, a3, 0
40086228:	f01d      	retw.n
	...

4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>:
4008622c:	004136        	entry	a1, 32
4008622f:	63dee5        	call8	400ea01c <spi_flash_op_lock>
40086232:	03eb30        	rsr.prid	a3
40086235:	043d30        	extui	a3, a3, 13, 1
40086238:	204330        	or	a4, a3, a3
4008623b:	00a052        	movi	a5, 0
4008623e:	120c      	movi.n	a2, 1
40086240:	932530        	movnez	a2, a5, a3
40086243:	742020        	extui	a2, a2, 0, 8
40086246:	e97651        	l32r	a5, 40080820 <_init_end+0x420>
40086249:	0020c0        	memw
4008624c:	0558      	l32i.n	a5, a5, 0
4008624e:	0e0526        	beqi	a5, -1, 40086260 <spi_flash_disable_interrupts_caches_and_other_cpu+0x34>
40086251:	e974d1        	l32r	a13, 40080824 <_init_end+0x424>
40086254:	e975c1        	l32r	a12, 40080828 <_init_end+0x428>
40086257:	65a0b2        	movi	a11, 101
4008625a:	e974a1        	l32r	a10, 4008082c <_init_end+0x42c>
4008625d:	5486e5        	call8	400daacc <__assert_func>
40086260:	e97051        	l32r	a5, 40080820 <_init_end+0x420>
40086263:	0020c0        	memw
40086266:	006532        	s32i	a3, a5, 0
40086269:	027ee5        	call8	40088a58 <xTaskGetSchedulerState>
4008626c:	201a66        	bnei	a10, 1, 40086290 <spi_flash_disable_interrupts_caches_and_other_cpu+0x64>
4008626f:	00e316        	beqz	a3, 40086281 <spi_flash_disable_interrupts_caches_and_other_cpu+0x55>
40086272:	e96fd1        	l32r	a13, 40080830 <_init_end+0x430>
40086275:	e96cc1        	l32r	a12, 40080828 <_init_end+0x428>
40086278:	6ea0b2        	movi	a11, 110
4008627b:	e96ca1        	l32r	a10, 4008082c <_init_end+0x42c>
4008627e:	5484e5        	call8	400daacc <__assert_func>
40086281:	e964b1        	l32r	a11, 40080814 <_init_end+0x414>
40086284:	a0b2b0        	addx4	a11, a2, a11
40086287:	02ad      	mov.n	a10, a2
40086289:	fff3a5        	call8	400861c4 <spi_flash_disable_cache>
4008628c:	001ac6        	j	400862fb <spi_flash_disable_interrupts_caches_and_other_cpu+0xcf>
4008628f:	0a0c00        	add.s	f0, f12, f0
40086292:	02e5e5        	call8	400890f0 <uxTaskPriorityGet>
40086295:	0a5d      	mov.n	a5, a10
40086297:	8b1c      	movi.n	a11, 24
40086299:	0a0c      	movi.n	a10, 0
4008629b:	02e725        	call8	4008910c <vTaskPrioritySet>
4008629e:	090c      	movi.n	a9, 0
400862a0:	e95c81        	l32r	a8, 40080810 <_init_end+0x410>
400862a3:	0020c0        	memw
400862a6:	004892        	s8i	a9, a8, 0
400862a9:	0020c0        	memw
400862ac:	02cd      	mov.n	a12, a2
400862ae:	f03d      	nop.n
400862b0:	f03d      	nop.n
400862b2:	f03d      	nop.n
400862b4:	e960b1        	l32r	a11, 40080834 <_init_end+0x434>
400862b7:	02ad      	mov.n	a10, a2
400862b9:	50d465        	call8	400d7000 <esp_ipc_call>
400862bc:	da8c      	beqz.n	a10, 400862cd <spi_flash_disable_interrupts_caches_and_other_cpu+0xa1>
400862be:	e95ed1        	l32r	a13, 40080838 <_init_end+0x438>
400862c1:	e959c1        	l32r	a12, 40080828 <_init_end+0x428>
400862c4:	79a0b2        	movi	a11, 121
400862c7:	e959a1        	l32r	a10, 4008082c <_init_end+0x42c>
400862ca:	548025        	call8	400daacc <__assert_func>
400862cd:	e95081        	l32r	a8, 40080810 <_init_end+0x410>
400862d0:	000882        	l8ui	a8, a8, 0
400862d3:	748080        	extui	a8, a8, 0, 8
400862d6:	ff3816        	beqz	a8, 400862cd <spi_flash_disable_interrupts_caches_and_other_cpu+0xa1>
400862d9:	0233a5        	call8	40088614 <vTaskSuspendAll>
400862dc:	05bd      	mov.n	a11, a5
400862de:	0a0c      	movi.n	a10, 0
400862e0:	02e2a5        	call8	4008910c <vTaskPrioritySet>
400862e3:	03eb50        	rsr.prid	a5
400862e6:	045d50        	extui	a5, a5, 13, 1
400862e9:	0e1457        	beq	a4, a5, 400862fb <spi_flash_disable_interrupts_caches_and_other_cpu+0xcf>
400862ec:	e954d1        	l32r	a13, 4008083c <_init_end+0x43c>
400862ef:	e94ec1        	l32r	a12, 40080828 <_init_end+0x428>
400862f2:	84a0b2        	movi	a11, 132
400862f5:	e94da1        	l32r	a10, 4008082c <_init_end+0x42c>
400862f8:	547d25        	call8	400daacc <__assert_func>
400862fb:	fb1325        	call8	4008142c <esp_intr_noniram_disable>
400862fe:	e94541        	l32r	a4, 40080814 <_init_end+0x414>
40086301:	a0b340        	addx4	a11, a3, a4
40086304:	03ad      	mov.n	a10, a3
40086306:	ffebe5        	call8	400861c4 <spi_flash_disable_cache>
40086309:	a0b240        	addx4	a11, a2, a4
4008630c:	02ad      	mov.n	a10, a2
4008630e:	ffeb65        	call8	400861c4 <spi_flash_disable_cache>
40086311:	f01d      	retw.n
	...

40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>:
40086314:	004136        	entry	a1, 32
40086317:	03eb40        	rsr.prid	a4
4008631a:	044d40        	extui	a4, a4, 13, 1
4008631d:	080c      	movi.n	a8, 0
4008631f:	120c      	movi.n	a2, 1
40086321:	932840        	movnez	a2, a8, a4
40086324:	742020        	extui	a2, a2, 0, 8
40086327:	e93e81        	l32r	a8, 40080820 <_init_end+0x420>
4008632a:	0020c0        	memw
4008632d:	0888      	l32i.n	a8, a8, 0
4008632f:	0e1847        	beq	a8, a4, 40086341 <spi_flash_enable_interrupts_caches_and_other_cpu+0x2d>
40086332:	e943d1        	l32r	a13, 40080840 <_init_end+0x440>
40086335:	e943c1        	l32r	a12, 40080844 <_init_end+0x444>
40086338:	96a0b2        	movi	a11, 150
4008633b:	e93ca1        	l32r	a10, 4008082c <_init_end+0x42c>
4008633e:	5478e5        	call8	400daacc <__assert_func>
40086341:	201110        	or	a1, a1, a1
40086344:	027125        	call8	40088a58 <xTaskGetSchedulerState>
40086347:	131a66        	bnei	a10, 1, 4008635e <spi_flash_enable_interrupts_caches_and_other_cpu+0x4a>
4008634a:	049c      	beqz.n	a4, 4008635e <spi_flash_enable_interrupts_caches_and_other_cpu+0x4a>
4008634c:	e93fd1        	l32r	a13, 40080848 <_init_end+0x448>
4008634f:	e93dc1        	l32r	a12, 40080844 <_init_end+0x444>
40086352:	98a0b2        	movi	a11, 152
40086355:	e935a1        	l32r	a10, 4008082c <_init_end+0x42c>
40086358:	201110        	or	a1, a1, a1
4008635b:	547725        	call8	400daacc <__assert_func>
4008635e:	f87c      	movi.n	a8, -1
40086360:	e93031        	l32r	a3, 40080820 <_init_end+0x420>
40086363:	0020c0        	memw
40086366:	0389      	s32i.n	a8, a3, 0
40086368:	f03d      	nop.n
4008636a:	f03d      	nop.n
4008636c:	f03d      	nop.n
4008636e:	f03d      	nop.n
40086370:	e92931        	l32r	a3, 40080814 <_init_end+0x414>
40086373:	a08430        	addx4	a8, a4, a3
40086376:	08b8      	l32i.n	a11, a8, 0
40086378:	04ad      	mov.n	a10, a4
4008637a:	ffd7e5        	call8	400860f8 <spi_flash_restore_cache>
4008637d:	a03230        	addx4	a3, a2, a3
40086380:	03b8      	l32i.n	a11, a3, 0
40086382:	20a220        	or	a10, a2, a2
40086385:	ffd725        	call8	400860f8 <spi_flash_restore_cache>
40086388:	026ce5        	call8	40088a58 <xTaskGetSchedulerState>
4008638b:	0d1a26        	beqi	a10, 1, 4008639c <spi_flash_enable_interrupts_caches_and_other_cpu+0x88>
4008638e:	130c      	movi.n	a3, 1
40086390:	e91f21        	l32r	a2, 4008080c <_init_end+0x40c>
40086393:	0020c0        	memw
40086396:	004232        	s8i	a3, a2, 0
40086399:	0020c0        	memw
4008639c:	201110        	or	a1, a1, a1
4008639f:	fb0e25        	call8	40081480 <esp_intr_noniram_enable>
400863a2:	201110        	or	a1, a1, a1
400863a5:	026b25        	call8	40088a58 <xTaskGetSchedulerState>
400863a8:	051a26        	beqi	a10, 1, 400863b1 <spi_flash_enable_interrupts_caches_and_other_cpu+0x9d>
400863ab:	201110        	or	a1, a1, a1
400863ae:	031265        	call8	400894d4 <xTaskResumeAll>
400863b1:	63c7e5        	call8	400ea030 <spi_flash_op_unlock>
400863b4:	f01d      	retw.n
	...

400863b8 <spi_flash_disable_interrupts_caches_and_other_cpu_no_os>:
400863b8:	004136        	entry	a1, 32
400863bb:	03eb20        	rsr.prid	a2
400863be:	042d20        	extui	a2, a2, 13, 1
400863c1:	00a0a2        	movi	a10, 0
400863c4:	01a082        	movi	a8, 1
400863c7:	83a820        	moveqz	a10, a8, a2
400863ca:	74a0a0        	extui	a10, a10, 0, 8
400863cd:	e91131        	l32r	a3, 40080814 <_init_end+0x414>
400863d0:	a0ba30        	addx4	a11, a10, a3
400863d3:	ffdf25        	call8	400861c4 <spi_flash_disable_cache>
400863d6:	fb0565        	call8	4008142c <esp_intr_noniram_disable>
400863d9:	a0b230        	addx4	a11, a2, a3
400863dc:	20a220        	or	a10, a2, a2
400863df:	ffde65        	call8	400861c4 <spi_flash_disable_cache>
400863e2:	f01d      	retw.n

400863e4 <spi_flash_enable_interrupts_caches_no_os>:
400863e4:	004136        	entry	a1, 32
400863e7:	03eba0        	rsr.prid	a10
400863ea:	04ada0        	extui	a10, a10, 13, 1
400863ed:	e90981        	l32r	a8, 40080814 <_init_end+0x414>
400863f0:	a08a80        	addx4	a8, a10, a8
400863f3:	08b8      	l32i.n	a11, a8, 0
400863f5:	ffd025        	call8	400860f8 <spi_flash_restore_cache>
400863f8:	fb0865        	call8	40081480 <esp_intr_noniram_enable>
400863fb:	f01d      	retw.n
400863fd:	000000        	ill

40086400 <spi_flash_cache_enabled>:
40086400:	004136        	entry	a1, 32
40086403:	e8fea1        	l32r	a10, 400807fc <_init_end+0x3fc>
40086406:	fb5425        	call8	40081948 <esp_dport_access_reg_read>
40086409:	0f6a37        	bbci	a10, 3, 4008641c <spi_flash_cache_enabled+0x1c>
4008640c:	e8fea1        	l32r	a10, 40080804 <_init_end+0x404>
4008640f:	fb53a5        	call8	40081948 <esp_dport_access_reg_read>
40086412:	0a6a37        	bbci	a10, 3, 40086420 <spi_flash_cache_enabled+0x20>
40086415:	01a022        	movi	a2, 1
40086418:	000090        	retw
4008641b:	020c00        	andb	b0, b12, b0
4008641e:	f01d      	retw.n
40086420:	020c      	movi.n	a2, 0
40086422:	f01d      	retw.n

40086424 <spi_flash_translate_rc>:
40086424:	004136        	entry	a1, 32
40086427:	528c      	beqz.n	a2, 40086430 <spi_flash_translate_rc+0xc>
40086429:	0c2226        	beqi	a2, 2, 40086439 <spi_flash_translate_rc+0x15>
4008642c:	000106        	j	40086434 <spi_flash_translate_rc+0x10>
4008642f:	020c00        	andb	b0, b12, b0
40086432:	f01d      	retw.n
40086434:	e90721        	l32r	a2, 40080850 <_init_end+0x450>
40086437:	f01d      	retw.n
40086439:	e90421        	l32r	a2, 4008084c <_init_end+0x44c>
4008643c:	f01d      	retw.n
	...

40086440 <spi_flash_unlock>:
40086440:	004136        	entry	a1, 32
40086443:	e90421        	l32r	a2, 40080854 <_init_end+0x454>
40086446:	000222        	l8ui	a2, a2, 0
40086449:	035256        	bnez	a2, 40086482 <spi_flash_unlock+0x42>
4008644c:	e90321        	l32r	a2, 40080858 <_init_end+0x458>
4008644f:	002222        	l32i	a2, a2, 0
40086452:	006216        	beqz	a2, 4008645c <spi_flash_unlock+0x1c>
40086455:	0228      	l32i.n	a2, a2, 0
40086457:	128c      	beqz.n	a2, 4008645c <spi_flash_unlock+0x1c>
40086459:	0002e0        	callx8	a2
4008645c:	0712e5        	call8	4008d58c <esp_rom_spiflash_unlock>
4008645f:	0a2d      	mov.n	a2, a10
40086461:	e8fd81        	l32r	a8, 40080858 <_init_end+0x458>
40086464:	0888      	l32i.n	a8, a8, 0
40086466:	688c      	beqz.n	a8, 40086470 <spi_flash_unlock+0x30>
40086468:	1888      	l32i.n	a8, a8, 4
4008646a:	002816        	beqz	a8, 40086470 <spi_flash_unlock+0x30>
4008646d:	0008e0        	callx8	a8
40086470:	02dc      	bnez.n	a2, 40086484 <spi_flash_unlock+0x44>
40086472:	180c      	movi.n	a8, 1
40086474:	e8f821        	l32r	a2, 40080854 <_init_end+0x454>
40086477:	004282        	s8i	a8, a2, 0
4008647a:	0020c0        	memw
4008647d:	020c      	movi.n	a2, 0
4008647f:	f01d      	retw.n
40086481:	020c00        	andb	b0, b12, b0
40086484:	f01d      	retw.n
	...

40086488 <spi_flash_write_inner>:
40086488:	004136        	entry	a1, 32
4008648b:	04cd      	mov.n	a12, a4
4008648d:	03bd      	mov.n	a11, a3
4008648f:	02ad      	mov.n	a10, a2
40086491:	0726e5        	call8	4008d700 <esp_rom_spiflash_write>
40086494:	0a2d      	mov.n	a2, a10
40086496:	f01d      	retw.n

40086498 <spi_flash_guard_set>:
40086498:	004136        	entry	a1, 32
4008649b:	e8ef81        	l32r	a8, 40080858 <_init_end+0x458>
4008649e:	0829      	s32i.n	a2, a8, 0
400864a0:	f01d      	retw.n
	...

400864a4 <spi_flash_guard_get>:
400864a4:	004136        	entry	a1, 32
400864a7:	e8ec81        	l32r	a8, 40080858 <_init_end+0x458>
400864aa:	0828      	l32i.n	a2, a8, 0
400864ac:	f01d      	retw.n
	...

400864b0 <spi_flash_get_chip_size>:
400864b0:	004136        	entry	a1, 32
400864b3:	e8c581        	l32r	a8, 400807c8 <_init_end+0x3c8>
400864b6:	1828      	l32i.n	a2, a8, 4
400864b8:	f01d      	retw.n
	...

400864bc <spi_flash_erase_range>:
400864bc:	004136        	entry	a1, 32
400864bf:	e8e681        	l32r	a8, 40080858 <_init_end+0x458>
400864c2:	0888      	l32i.n	a8, a8, 0
400864c4:	c88c      	beqz.n	a8, 400864d4 <spi_flash_erase_range+0x18>
400864c6:	4888      	l32i.n	a8, a8, 16
400864c8:	888c      	beqz.n	a8, 400864d4 <spi_flash_erase_range+0x18>
400864ca:	03bd      	mov.n	a11, a3
400864cc:	02ad      	mov.n	a10, a2
400864ce:	0008e0        	callx8	a8
400864d1:	08ca16        	beqz	a10, 40086561 <spi_flash_erase_range+0xa5>
400864d4:	b48020        	extui	a8, a2, 0, 12
400864d7:	08d856        	bnez	a8, 40086568 <spi_flash_erase_range+0xac>
400864da:	b48030        	extui	a8, a3, 0, 12
400864dd:	08c856        	bnez	a8, 4008656d <spi_flash_erase_range+0xb1>
400864e0:	423a      	add.n	a4, a2, a3
400864e2:	fffce5        	call8	400864b0 <spi_flash_get_chip_size>
400864e5:	02ba47        	bgeu	a10, a4, 400864eb <spi_flash_erase_range+0x2f>
400864e8:	002206        	j	40086574 <spi_flash_erase_range+0xb8>
400864eb:	412c20        	srli	a2, a2, 12
400864ee:	413c30        	srli	a3, a3, 12
400864f1:	323a      	add.n	a3, a2, a3
400864f3:	fff4e5        	call8	40086440 <spi_flash_unlock>
400864f6:	0a5d      	mov.n	a5, a10
400864f8:	048a16        	beqz	a10, 40086544 <spi_flash_erase_range+0x88>
400864fb:	001646        	j	40086558 <spi_flash_erase_range+0x9c>
400864fe:	410000        	srli	a0, a0, 0
40086501:	48e8d6        	bgez	a8, 40086993 <spi_flash_read+0x1d3>
40086504:	648c04        	lsi	f0, a12, 0x190
40086507:	0448      	l32i.n	a4, a4, 0
40086509:	002416        	beqz	a4, 4008650f <spi_flash_erase_range+0x53>
4008650c:	0004e0        	callx8	a4
4008650f:	344020        	extui	a4, a2, 0, 4
40086512:	44dc      	bnez.n	a4, 4008652a <spi_flash_erase_range+0x6e>
40086514:	c04320        	sub	a4, a3, a2
40086517:	f50c      	movi.n	a5, 15
40086519:	0db547        	bgeu	a5, a4, 4008652a <spi_flash_erase_range+0x6e>
4008651c:	41a420        	srli	a10, a2, 4
4008651f:	070fa5        	call8	4008d618 <esp_rom_spiflash_erase_block>
40086522:	0a5d      	mov.n	a5, a10
40086524:	10c222        	addi	a2, a2, 16
40086527:	0002c6        	j	40086536 <spi_flash_erase_range+0x7a>
4008652a:	20a220        	or	a10, a2, a2
4008652d:	0715e5        	call8	4008d68c <esp_rom_spiflash_erase_sector>
40086530:	205aa0        	or	a5, a10, a10
40086533:	01c222        	addi	a2, a2, 1
40086536:	e8c841        	l32r	a4, 40080858 <_init_end+0x458>
40086539:	0448      	l32i.n	a4, a4, 0
4008653b:	548c      	beqz.n	a4, 40086544 <spi_flash_erase_range+0x88>
4008653d:	1448      	l32i.n	a4, a4, 4
4008653f:	148c      	beqz.n	a4, 40086544 <spi_flash_erase_range+0x88>
40086541:	0004e0        	callx8	a4
40086544:	c04230        	sub	a4, a2, a3
40086547:	180c      	movi.n	a8, 1
40086549:	090c      	movi.n	a9, 0
4008654b:	096d      	mov.n	a6, a9
4008654d:	936840        	movnez	a6, a8, a4
40086550:	064d      	mov.n	a4, a6
40086552:	938950        	movnez	a8, a9, a5
40086555:	a78867        	bany	a8, a6, 40086500 <spi_flash_erase_range+0x44>
40086558:	05ad      	mov.n	a10, a5
4008655a:	ffeca5        	call8	40086424 <spi_flash_translate_rc>
4008655d:	0a2d      	mov.n	a2, a10
4008655f:	f01d      	retw.n
40086561:	02a122        	movi	a2, 0x102
40086564:	f01d      	retw.n
40086566:	220000        	orb	b0, b0, b0
40086569:	1d02a1        	l32r	a10, 4004d974 <r_llm_init+0xf7c>
4008656c:	a122f0        	lsi	f15, a2, 0x284
4008656f:	f01d04        	lsi	f0, a13, 0x3c0
40086572:	220000        	orb	b0, b0, b0
40086575:	1d04a1        	l32r	a10, 4004d988 <r_llm_init+0xf90>
40086578:	0000f0        	callx12	a0
	...

4008657c <spi_flash_erase_sector>:
4008657c:	004136        	entry	a1, 32
4008657f:	e8b681        	l32r	a8, 40080858 <_init_end+0x458>
40086582:	0888      	l32i.n	a8, a8, 0
40086584:	010816        	beqz	a8, 40086598 <spi_flash_erase_sector+0x1c>
40086587:	042882        	l32i	a8, a8, 16
4008658a:	00a816        	beqz	a8, 40086598 <spi_flash_erase_sector+0x1c>
4008658d:	e866b1        	l32r	a11, 40080728 <_init_end+0x328>
40086590:	11a240        	slli	a10, a2, 12
40086593:	0008e0        	callx8	a8
40086596:	ba8c      	beqz.n	a10, 400865a5 <spi_flash_erase_sector+0x29>
40086598:	e864b1        	l32r	a11, 40080728 <_init_end+0x328>
4008659b:	11a240        	slli	a10, a2, 12
4008659e:	fff1e5        	call8	400864bc <spi_flash_erase_range>
400865a1:	0a2d      	mov.n	a2, a10
400865a3:	f01d      	retw.n
400865a5:	02a122        	movi	a2, 0x102
400865a8:	f01d      	retw.n
	...

400865ac <spi_flash_write>:
400865ac:	00a136        	entry	a1, 80
400865af:	e8aa51        	l32r	a5, 40080858 <_init_end+0x458>
400865b2:	0558      	l32i.n	a5, a5, 0
400865b4:	c58c      	beqz.n	a5, 400865c4 <spi_flash_write+0x18>
400865b6:	4558      	l32i.n	a5, a5, 16
400865b8:	858c      	beqz.n	a5, 400865c4 <spi_flash_write+0x18>
400865ba:	04bd      	mov.n	a11, a4
400865bc:	02ad      	mov.n	a10, a2
400865be:	0005e0        	callx8	a5
400865c1:	1e8a16        	beqz	a10, 400867ad <spi_flash_write+0x201>
400865c4:	524a      	add.n	a5, a2, a4
400865c6:	e88061        	l32r	a6, 400807c8 <_init_end+0x3c8>
400865c9:	1668      	l32i.n	a6, a6, 4
400865cb:	02b657        	bgeu	a6, a5, 400865d1 <spi_flash_write+0x25>
400865ce:	007886        	j	400867b4 <spi_flash_write+0x208>
400865d1:	1e4416        	beqz	a4, 400867b9 <spi_flash_write+0x20d>
400865d4:	c67c      	movi.n	a6, -4
400865d6:	105260        	and	a5, a2, a6
400865d9:	0159      	s32i.n	a5, a1, 0
400865db:	523b      	addi.n	a5, a2, 3
400865dd:	105560        	and	a5, a5, a6
400865e0:	c05520        	sub	a5, a5, a2
400865e3:	635450        	minu	a5, a4, a5
400865e6:	c07450        	sub	a7, a4, a5
400865e9:	106760        	and	a6, a7, a6
400865ec:	856a      	add.n	a8, a5, a6
400865ee:	3189      	s32i.n	a8, a1, 12
400865f0:	c07460        	sub	a7, a4, a6
400865f3:	c09750        	sub	a9, a7, a5
400865f6:	026192        	s32i	a9, a1, 8
400865f9:	ffe465        	call8	40086440 <spi_flash_unlock>
400865fc:	0a7d      	mov.n	a7, a10
400865fe:	17da56        	bnez	a10, 4008677f <spi_flash_write+0x1d3>
40086601:	04b516        	beqz	a5, 40086650 <spi_flash_write+0xa4>
40086604:	f77c      	movi.n	a7, -1
40086606:	4179      	s32i.n	a7, a1, 16
40086608:	f03d      	nop.n
4008660a:	f03d      	nop.n
4008660c:	f03d      	nop.n
4008660e:	f03d      	nop.n
40086610:	0188      	l32i.n	a8, a1, 0
40086612:	c0a280        	sub	a10, a2, a8
40086615:	05cd      	mov.n	a12, a5
40086617:	03bd      	mov.n	a11, a3
40086619:	10c192        	addi	a9, a1, 16
4008661c:	a9aa      	add.n	a10, a9, a10
4008661e:	e84981        	l32r	a8, 40080744 <_init_end+0x344>
40086621:	0008e0        	callx8	a8
40086624:	e88d71        	l32r	a7, 40080858 <_init_end+0x458>
40086627:	0778      	l32i.n	a7, a7, 0
40086629:	578c      	beqz.n	a7, 40086632 <spi_flash_write+0x86>
4008662b:	0778      	l32i.n	a7, a7, 0
4008662d:	178c      	beqz.n	a7, 40086632 <spi_flash_write+0x86>
4008662f:	0007e0        	callx8	a7
40086632:	4c0c      	movi.n	a12, 4
40086634:	10c1b2        	addi	a11, a1, 16
40086637:	01a8      	l32i.n	a10, a1, 0
40086639:	ffe4e5        	call8	40086488 <spi_flash_write_inner>
4008663c:	0a7d      	mov.n	a7, a10
4008663e:	e88681        	l32r	a8, 40080858 <_init_end+0x458>
40086641:	0888      	l32i.n	a8, a8, 0
40086643:	688c      	beqz.n	a8, 4008664d <spi_flash_write+0xa1>
40086645:	1888      	l32i.n	a8, a8, 4
40086647:	002816        	beqz	a8, 4008664d <spi_flash_write+0xa1>
4008664a:	0008e0        	callx8	a8
4008664d:	12e756        	bnez	a7, 4008677f <spi_flash_write+0x1d3>
40086650:	0e0616        	beqz	a6, 40086734 <spi_flash_write+0x188>
40086653:	e85981        	l32r	a8, 400807b8 <_init_end+0x3b8>
40086656:	808380        	add	a8, a3, a8
40086659:	01a092        	movi	a9, 1
4008665c:	e858a1        	l32r	a10, 400807bc <_init_end+0x3bc>
4008665f:	02ba87        	bgeu	a10, a8, 40086665 <spi_flash_write+0xb9>
40086662:	00a092        	movi	a9, 0
40086665:	749090        	extui	a9, a9, 0, 8
40086668:	e856b1        	l32r	a11, 400807c0 <_init_end+0x3c0>
4008666b:	b3ba      	add.n	a11, a3, a11
4008666d:	01a0a2        	movi	a10, 1
40086670:	e855c1        	l32r	a12, 400807c4 <_init_end+0x3c4>
40086673:	02bcb7        	bgeu	a12, a11, 40086679 <spi_flash_write+0xcd>
40086676:	00a0a2        	movi	a10, 0
40086679:	74a0a0        	extui	a10, a10, 0, 8
4008667c:	09cc      	bnez.n	a9, 40086680 <spi_flash_write+0xd4>
4008667e:	2abc      	beqz.n	a10, 400866b4 <spi_flash_write+0x108>
40086680:	01a092        	movi	a9, 1
40086683:	e876a1        	l32r	a10, 4008085c <_init_end+0x45c>
40086686:	02ba87        	bgeu	a10, a8, 4008668c <spi_flash_write+0xe0>
40086689:	00a092        	movi	a9, 0
4008668c:	749090        	extui	a9, a9, 0, 8
4008668f:	e874a1        	l32r	a10, 40080860 <_init_end+0x460>
40086692:	80a3a0        	add	a10, a3, a10
40086695:	01a082        	movi	a8, 1
40086698:	e873b1        	l32r	a11, 40080864 <_init_end+0x464>
4008669b:	02bba7        	bgeu	a11, a10, 400866a1 <spi_flash_write+0xf5>
4008669e:	00a082        	movi	a8, 0
400866a1:	748080        	extui	a8, a8, 0, 8
400866a4:	09cc      	bnez.n	a9, 400866a8 <spi_flash_write+0xfc>
400866a6:	f88c      	beqz.n	a8, 400866b9 <spi_flash_write+0x10d>
400866a8:	835a      	add.n	a8, a3, a5
400866aa:	148080        	extui	a8, a8, 0, 2
400866ad:	d8cc      	bnez.n	a8, 400866be <spi_flash_write+0x112>
400866af:	180c      	movi.n	a8, 1
400866b1:	0002c6        	j	400866c0 <spi_flash_write+0x114>
400866b4:	080c      	movi.n	a8, 0
400866b6:	000186        	j	400866c0 <spi_flash_write+0x114>
400866b9:	080c      	movi.n	a8, 0
400866bb:	000046        	j	400866c0 <spi_flash_write+0x114>
400866be:	080c      	movi.n	a8, 0
400866c0:	1189      	s32i.n	a8, a1, 4
400866c2:	001706        	j	40086722 <spi_flash_write+0x176>
400866c5:	e86871        	l32r	a7, 40080868 <_init_end+0x468>
400866c8:	638670        	minu	a8, a6, a7
400866cb:	0189      	s32i.n	a8, a1, 0
400866cd:	735a      	add.n	a7, a3, a5
400866cf:	f03d      	nop.n
400866d1:	f03d      	nop.n
400866d3:	f03d      	nop.n
400866d5:	1198      	l32i.n	a9, a1, 4
400866d7:	89dc      	bnez.n	a9, 400866f3 <spi_flash_write+0x147>
400866d9:	082c      	movi.n	a8, 32
400866db:	0198      	l32i.n	a9, a1, 0
400866dd:	639980        	minu	a9, a9, a8
400866e0:	0199      	s32i.n	a9, a1, 0
400866e2:	09cd      	mov.n	a12, a9
400866e4:	20b770        	or	a11, a7, a7
400866e7:	10c1a2        	addi	a10, a1, 16
400866ea:	e81681        	l32r	a8, 40080744 <_init_end+0x344>
400866ed:	0008e0        	callx8	a8
400866f0:	10c172        	addi	a7, a1, 16
400866f3:	e85981        	l32r	a8, 40080858 <_init_end+0x458>
400866f6:	0888      	l32i.n	a8, a8, 0
400866f8:	588c      	beqz.n	a8, 40086701 <spi_flash_write+0x155>
400866fa:	0888      	l32i.n	a8, a8, 0
400866fc:	188c      	beqz.n	a8, 40086701 <spi_flash_write+0x155>
400866fe:	0008e0        	callx8	a8
40086701:	01c8      	l32i.n	a12, a1, 0
40086703:	07bd      	mov.n	a11, a7
40086705:	80a520        	add	a10, a5, a2
40086708:	ffd7e5        	call8	40086488 <spi_flash_write_inner>
4008670b:	0a7d      	mov.n	a7, a10
4008670d:	e85281        	l32r	a8, 40080858 <_init_end+0x458>
40086710:	0888      	l32i.n	a8, a8, 0
40086712:	588c      	beqz.n	a8, 4008671b <spi_flash_write+0x16f>
40086714:	1888      	l32i.n	a8, a8, 4
40086716:	188c      	beqz.n	a8, 4008671b <spi_flash_write+0x16f>
40086718:	0008e0        	callx8	a8
4008671b:	0188      	l32i.n	a8, a1, 0
4008671d:	c06680        	sub	a6, a6, a8
40086720:	558a      	add.n	a5, a5, a8
40086722:	180c      	movi.n	a8, 1
40086724:	090c      	movi.n	a9, 0
40086726:	09ad      	mov.n	a10, a9
40086728:	93a860        	movnez	a10, a8, a6
4008672b:	938970        	movnez	a8, a9, a7
4008672e:	9388a7        	bany	a8, a10, 400866c5 <spi_flash_write+0x119>
40086731:	4a9797        	bne	a7, a9, 4008677f <spi_flash_write+0x1d3>
40086734:	2158      	l32i.n	a5, a1, 8
40086736:	045516        	beqz	a5, 4008677f <spi_flash_write+0x1d3>
40086739:	f57c      	movi.n	a5, -1
4008673b:	4159      	s32i.n	a5, a1, 16
4008673d:	f03d      	nop.n
4008673f:	f03d      	nop.n
40086741:	f03d      	nop.n
40086743:	f03d      	nop.n
40086745:	21c8      	l32i.n	a12, a1, 8
40086747:	3158      	l32i.n	a5, a1, 12
40086749:	b35a      	add.n	a11, a3, a5
4008674b:	10c1a2        	addi	a10, a1, 16
4008674e:	e7fd81        	l32r	a8, 40080744 <_init_end+0x344>
40086751:	0008e0        	callx8	a8
40086754:	e84131        	l32r	a3, 40080858 <_init_end+0x458>
40086757:	0338      	l32i.n	a3, a3, 0
40086759:	638c      	beqz.n	a3, 40086763 <spi_flash_write+0x1b7>
4008675b:	0338      	l32i.n	a3, a3, 0
4008675d:	002316        	beqz	a3, 40086763 <spi_flash_write+0x1b7>
40086760:	0003e0        	callx8	a3
40086763:	4c0c      	movi.n	a12, 4
40086765:	10c1b2        	addi	a11, a1, 16
40086768:	3138      	l32i.n	a3, a1, 12
4008676a:	a23a      	add.n	a10, a2, a3
4008676c:	ffd1a5        	call8	40086488 <spi_flash_write_inner>
4008676f:	0a7d      	mov.n	a7, a10
40086771:	e83931        	l32r	a3, 40080858 <_init_end+0x458>
40086774:	0338      	l32i.n	a3, a3, 0
40086776:	538c      	beqz.n	a3, 4008677f <spi_flash_write+0x1d3>
40086778:	1338      	l32i.n	a3, a3, 4
4008677a:	138c      	beqz.n	a3, 4008677f <spi_flash_write+0x1d3>
4008677c:	0003e0        	callx8	a3
4008677f:	e83631        	l32r	a3, 40080858 <_init_end+0x458>
40086782:	0338      	l32i.n	a3, a3, 0
40086784:	538c      	beqz.n	a3, 4008678d <spi_flash_write+0x1e1>
40086786:	2338      	l32i.n	a3, a3, 8
40086788:	138c      	beqz.n	a3, 4008678d <spi_flash_write+0x1e1>
4008678a:	0003e0        	callx8	a3
4008678d:	04bd      	mov.n	a11, a4
4008678f:	20a220        	or	a10, a2, a2
40086792:	ff89e5        	call8	40086030 <spi_flash_mark_modified_region>
40086795:	e83021        	l32r	a2, 40080858 <_init_end+0x458>
40086798:	0228      	l32i.n	a2, a2, 0
4008679a:	628c      	beqz.n	a2, 400867a4 <spi_flash_write+0x1f8>
4008679c:	3228      	l32i.n	a2, a2, 12
4008679e:	002216        	beqz	a2, 400867a4 <spi_flash_write+0x1f8>
400867a1:	0002e0        	callx8	a2
400867a4:	07ad      	mov.n	a10, a7
400867a6:	ffc7e5        	call8	40086424 <spi_flash_translate_rc>
400867a9:	0a2d      	mov.n	a2, a10
400867ab:	f01d      	retw.n
400867ad:	02a122        	movi	a2, 0x102
400867b0:	f01d      	retw.n
400867b2:	220000        	orb	b0, b0, b0
400867b5:	1d04a1        	l32r	a10, 4004dbc8 <r_llm_init+0x11d0>
400867b8:	020cf0        	andb	b0, b12, b15
400867bb:	f01d      	retw.n
400867bd:	000000        	ill

400867c0 <spi_flash_read>:
400867c0:	00e136        	entry	a1, 112
400867c3:	524a      	add.n	a5, a2, a4
400867c5:	e80061        	l32r	a6, 400807c8 <_init_end+0x3c8>
400867c8:	1668      	l32i.n	a6, a6, 4
400867ca:	02b657        	bgeu	a6, a5, 400867d0 <spi_flash_read+0x10>
400867cd:	00b506        	j	40086aa5 <spi_flash_read+0x2e5>
400867d0:	2d6416        	beqz	a4, 40086aaa <spi_flash_read+0x2ea>
400867d3:	e82151        	l32r	a5, 40080858 <_init_end+0x458>
400867d6:	0558      	l32i.n	a5, a5, 0
400867d8:	558c      	beqz.n	a5, 400867e1 <spi_flash_read+0x21>
400867da:	0558      	l32i.n	a5, a5, 0
400867dc:	158c      	beqz.n	a5, 400867e1 <spi_flash_read+0x21>
400867de:	0005e0        	callx8	a5
400867e1:	f50c      	movi.n	a5, 15
400867e3:	2d3547        	bltu	a5, a4, 40086814 <spi_flash_read+0x54>
400867e6:	ca7c      	movi.n	a10, -4
400867e8:	145020        	extui	a5, a2, 0, 2
400867eb:	c45a      	add.n	a12, a4, a5
400867ed:	cc3b      	addi.n	a12, a12, 3
400867ef:	10cca0        	and	a12, a12, a10
400867f2:	30c1b2        	addi	a11, a1, 48
400867f5:	10a2a0        	and	a10, a2, a10
400867f8:	070365        	call8	4008d830 <esp_rom_spiflash_read>
400867fb:	0a7d      	mov.n	a7, a10
400867fd:	28ca56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
40086800:	04cd      	mov.n	a12, a4
40086802:	30c122        	addi	a2, a1, 48
40086805:	b25a      	add.n	a11, a2, a5
40086807:	20a330        	or	a10, a3, a3
4008680a:	e7ce81        	l32r	a8, 40080744 <_init_end+0x344>
4008680d:	0008e0        	callx8	a8
40086810:	009e46        	j	40086a8d <spi_flash_read+0x2cd>
40086813:	502000        	lsi	f0, a0, 0x140
40086816:	958c14        	lsi	f1, a12, 0x254
40086819:	460c      	movi.n	a6, 4
4008681b:	c06650        	sub	a6, a6, a5
4008681e:	6169      	s32i.n	a6, a1, 24
40086820:	000106        	j	40086828 <spi_flash_read+0x68>
40086823:	050c00        	extui	a0, a0, 28, 1
40086826:	6159      	s32i.n	a5, a1, 24
40086828:	145030        	extui	a5, a3, 0, 2
4008682b:	759c      	beqz.n	a5, 40086846 <spi_flash_read+0x86>
4008682d:	315f30        	srai	a5, a3, 31
40086830:	156e50        	extui	a6, a5, 30, 2
40086833:	536a      	add.n	a5, a3, a6
40086835:	145050        	extui	a5, a5, 0, 2
40086838:	c05560        	sub	a5, a5, a6
4008683b:	460c      	movi.n	a6, 4
4008683d:	c06650        	sub	a6, a6, a5
40086840:	4169      	s32i.n	a6, a1, 16
40086842:	000106        	j	4008684a <spi_flash_read+0x8a>
40086845:	060c00        	lsi	f0, a12, 24
40086848:	4169      	s32i.n	a6, a1, 16
4008684a:	f03d      	nop.n
4008684c:	f03d      	nop.n
4008684e:	f03d      	nop.n
40086850:	f03d      	nop.n
40086852:	6158      	l32i.n	a5, a1, 24
40086854:	4188      	l32i.n	a8, a1, 16
40086856:	736580        	maxu	a6, a5, a8
40086859:	c06460        	sub	a6, a4, a6
4008685c:	c57c      	movi.n	a5, -4
4008685e:	106650        	and	a6, a6, a5
40086861:	7169      	s32i.n	a6, a1, 28
40086863:	106250        	and	a6, a2, a5
40086866:	b169      	s32i.n	a6, a1, 44
40086868:	f03d      	nop.n
4008686a:	f03d      	nop.n
4008686c:	f03d      	nop.n
4008686e:	f03d      	nop.n
40086870:	6168      	l32i.n	a6, a1, 24
40086872:	662a      	add.n	a6, a6, a2
40086874:	5169      	s32i.n	a6, a1, 20
40086876:	f03d      	nop.n
40086878:	f03d      	nop.n
4008687a:	f03d      	nop.n
4008687c:	f03d      	nop.n
4008687e:	7188      	l32i.n	a8, a1, 28
40086880:	686a      	add.n	a6, a8, a6
40086882:	105650        	and	a5, a6, a5
40086885:	8159      	s32i.n	a5, a1, 32
40086887:	c02520        	sub	a2, a5, a2
4008688a:	9129      	s32i.n	a2, a1, 36
4008688c:	c04420        	sub	a4, a4, a2
4008688f:	a149      	s32i.n	a4, a1, 40
40086891:	f03d      	nop.n
40086893:	f03d      	nop.n
40086895:	f03d      	nop.n
40086897:	f03d      	nop.n
40086899:	e7c741        	l32r	a4, 400807b8 <_init_end+0x3b8>
4008689c:	434a      	add.n	a4, a3, a4
4008689e:	120c      	movi.n	a2, 1
400868a0:	e7c751        	l32r	a5, 400807bc <_init_end+0x3bc>
400868a3:	02b547        	bgeu	a5, a4, 400868a9 <spi_flash_read+0xe9>
400868a6:	00a022        	movi	a2, 0
400868a9:	742020        	extui	a2, a2, 0, 8
400868ac:	e7c561        	l32r	a6, 400807c0 <_init_end+0x3c0>
400868af:	636a      	add.n	a6, a3, a6
400868b1:	01a052        	movi	a5, 1
400868b4:	e7c471        	l32r	a7, 400807c4 <_init_end+0x3c4>
400868b7:	02b767        	bgeu	a7, a6, 400868bd <spi_flash_read+0xfd>
400868ba:	00a052        	movi	a5, 0
400868bd:	745050        	extui	a5, a5, 0, 8
400868c0:	001256        	bnez	a2, 400868c5 <spi_flash_read+0x105>
400868c3:	35bc      	beqz.n	a5, 400868fa <spi_flash_read+0x13a>
400868c5:	01a022        	movi	a2, 1
400868c8:	e7e551        	l32r	a5, 4008085c <_init_end+0x45c>
400868cb:	02b547        	bgeu	a5, a4, 400868d1 <spi_flash_read+0x111>
400868ce:	00a022        	movi	a2, 0
400868d1:	742020        	extui	a2, a2, 0, 8
400868d4:	e7e351        	l32r	a5, 40080860 <_init_end+0x460>
400868d7:	535a      	add.n	a5, a3, a5
400868d9:	140c      	movi.n	a4, 1
400868db:	e7e261        	l32r	a6, 40080864 <_init_end+0x464>
400868de:	02b657        	bgeu	a6, a5, 400868e4 <spi_flash_read+0x124>
400868e1:	00a042        	movi	a4, 0
400868e4:	744040        	extui	a4, a4, 0, 8
400868e7:	001256        	bnez	a2, 400868ec <spi_flash_read+0x12c>
400868ea:	249c      	beqz.n	a4, 40086900 <spi_flash_read+0x140>
400868ec:	4148      	l32i.n	a4, a1, 16
400868ee:	234a      	add.n	a2, a3, a4
400868f0:	142020        	extui	a2, a2, 0, 2
400868f3:	e2cc      	bnez.n	a2, 40086905 <spi_flash_read+0x145>
400868f5:	120c      	movi.n	a2, 1
400868f7:	000306        	j	40086907 <spi_flash_read+0x147>
400868fa:	020c      	movi.n	a2, 0
400868fc:	0001c6        	j	40086907 <spi_flash_read+0x147>
400868ff:	020c00        	andb	b0, b12, b0
40086902:	000046        	j	40086907 <spi_flash_read+0x147>
40086905:	020c      	movi.n	a2, 0
40086907:	3129      	s32i.n	a2, a1, 12
40086909:	f03d      	nop.n
4008690b:	f03d      	nop.n
4008690d:	f03d      	nop.n
4008690f:	f03d      	nop.n
40086911:	7158      	l32i.n	a5, a1, 28
40086913:	08f556        	bnez	a5, 400869a6 <spi_flash_read+0x1e6>
40086916:	070c      	movi.n	a7, 0
40086918:	003386        	j	400869ea <spi_flash_read+0x22a>
4008691b:	d42100        	extui	a2, a0, 1, 14
4008691e:	2420e7        	blt	a0, a14, 40086946 <spi_flash_read+0x186>
40086921:	418863        	lsip	f6, a8, 0x104
40086924:	658a      	add.n	a6, a5, a8
40086926:	636a      	add.n	a6, a3, a6
40086928:	3198      	l32i.n	a9, a1, 12
4008692a:	a9cc      	bnez.n	a9, 40086938 <spi_flash_read+0x178>
4008692c:	072c      	movi.n	a7, 32
4008692e:	632270        	minu	a2, a2, a7
40086931:	30c1b2        	addi	a11, a1, 48
40086934:	000086        	j	4008693a <spi_flash_read+0x17a>
40086937:	06bd00        	lsi	f0, a13, 24
4008693a:	02cd      	mov.n	a12, a2
4008693c:	5188      	l32i.n	a8, a1, 20
4008693e:	a58a      	add.n	a10, a5, a8
40086940:	06eee5        	call8	4008d830 <esp_rom_spiflash_read>
40086943:	0a7d      	mov.n	a7, a10
40086945:	144a56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
40086948:	c04420        	sub	a4, a4, a2
4008694b:	552a      	add.n	a5, a5, a2
4008694d:	3198      	l32i.n	a9, a1, 12
4008694f:	d9ec      	bnez.n	a9, 40086980 <spi_flash_read+0x1c0>
40086951:	e7c181        	l32r	a8, 40080858 <_init_end+0x458>
40086954:	0888      	l32i.n	a8, a8, 0
40086956:	688c      	beqz.n	a8, 40086960 <spi_flash_read+0x1a0>
40086958:	1888      	l32i.n	a8, a8, 4
4008695a:	002816        	beqz	a8, 40086960 <spi_flash_read+0x1a0>
4008695d:	0008e0        	callx8	a8
40086960:	02cd      	mov.n	a12, a2
40086962:	30c1b2        	addi	a11, a1, 48
40086965:	06ad      	mov.n	a10, a6
40086967:	e77781        	l32r	a8, 40080744 <_init_end+0x344>
4008696a:	0008e0        	callx8	a8
4008696d:	e7ba21        	l32r	a2, 40080858 <_init_end+0x458>
40086970:	0228      	l32i.n	a2, a2, 0
40086972:	62bc      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086974:	002222        	l32i	a2, a2, 0
40086977:	12bc      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086979:	0002e0        	callx8	a2
4008697c:	000b06        	j	400869ac <spi_flash_read+0x1ec>
4008697f:	84ac00        	extui	a10, a0, 12, 9
40086982:	e7b521        	l32r	a2, 40080858 <_init_end+0x458>
40086985:	0228      	l32i.n	a2, a2, 0
40086987:	528c      	beqz.n	a2, 40086990 <spi_flash_read+0x1d0>
40086989:	1228      	l32i.n	a2, a2, 4
4008698b:	128c      	beqz.n	a2, 40086990 <spi_flash_read+0x1d0>
4008698d:	0002e0        	callx8	a2
40086990:	e7b221        	l32r	a2, 40080858 <_init_end+0x458>
40086993:	0228      	l32i.n	a2, a2, 0
40086995:	329c      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086997:	002222        	l32i	a2, a2, 0
4008699a:	00e216        	beqz	a2, 400869ac <spi_flash_read+0x1ec>
4008699d:	0002e0        	callx8	a2
400869a0:	000206        	j	400869ac <spi_flash_read+0x1ec>
400869a3:	000000        	ill
400869a6:	7148      	l32i.n	a4, a1, 28
400869a8:	050c      	movi.n	a5, 0
400869aa:	057d      	mov.n	a7, a5
400869ac:	f6c456        	bnez	a4, 4008691c <spi_flash_read+0x15c>
400869af:	6128      	l32i.n	a2, a1, 24
400869b1:	4148      	l32i.n	a4, a1, 16
400869b3:	331247        	beq	a2, a4, 400869ea <spi_flash_read+0x22a>
400869b6:	3158      	l32i.n	a5, a1, 12
400869b8:	c5cc      	bnez.n	a5, 400869c8 <spi_flash_read+0x208>
400869ba:	e7a721        	l32r	a2, 40080858 <_init_end+0x458>
400869bd:	0228      	l32i.n	a2, a2, 0
400869bf:	528c      	beqz.n	a2, 400869c8 <spi_flash_read+0x208>
400869c1:	1228      	l32i.n	a2, a2, 4
400869c3:	128c      	beqz.n	a2, 400869c8 <spi_flash_read+0x208>
400869c5:	0002e0        	callx8	a2
400869c8:	71c8      	l32i.n	a12, a1, 28
400869ca:	4168      	l32i.n	a6, a1, 16
400869cc:	b36a      	add.n	a11, a3, a6
400869ce:	6128      	l32i.n	a2, a1, 24
400869d0:	a32a      	add.n	a10, a3, a2
400869d2:	e7a781        	l32r	a8, 40080870 <_init_end+0x470>
400869d5:	0008e0        	callx8	a8
400869d8:	3148      	l32i.n	a4, a1, 12
400869da:	c4cc      	bnez.n	a4, 400869ea <spi_flash_read+0x22a>
400869dc:	e79f21        	l32r	a2, 40080858 <_init_end+0x458>
400869df:	0228      	l32i.n	a2, a2, 0
400869e1:	528c      	beqz.n	a2, 400869ea <spi_flash_read+0x22a>
400869e3:	0228      	l32i.n	a2, a2, 0
400869e5:	128c      	beqz.n	a2, 400869ea <spi_flash_read+0x22a>
400869e7:	0002e0        	callx8	a2
400869ea:	6158      	l32i.n	a5, a1, 24
400869ec:	04a516        	beqz	a5, 40086a3a <spi_flash_read+0x27a>
400869ef:	4c0c      	movi.n	a12, 4
400869f1:	30c1b2        	addi	a11, a1, 48
400869f4:	0b21a2        	l32i	a10, a1, 44
400869f7:	06e3a5        	call8	4008d830 <esp_rom_spiflash_read>
400869fa:	0a7d      	mov.n	a7, a10
400869fc:	08da56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
400869ff:	3168      	l32i.n	a6, a1, 12
40086a01:	d6cc      	bnez.n	a6, 40086a12 <spi_flash_read+0x252>
40086a03:	e79521        	l32r	a2, 40080858 <_init_end+0x458>
40086a06:	0228      	l32i.n	a2, a2, 0
40086a08:	628c      	beqz.n	a2, 40086a12 <spi_flash_read+0x252>
40086a0a:	1228      	l32i.n	a2, a2, 4
40086a0c:	002216        	beqz	a2, 40086a12 <spi_flash_read+0x252>
40086a0f:	0002e0        	callx8	a2
40086a12:	4b0c      	movi.n	a11, 4
40086a14:	6128      	l32i.n	a2, a1, 24
40086a16:	c0bb20        	sub	a11, a11, a2
40086a19:	02cd      	mov.n	a12, a2
40086a1b:	30c142        	addi	a4, a1, 48
40086a1e:	b4ba      	add.n	a11, a4, a11
40086a20:	03ad      	mov.n	a10, a3
40086a22:	e74881        	l32r	a8, 40080744 <_init_end+0x344>
40086a25:	0008e0        	callx8	a8
40086a28:	3158      	l32i.n	a5, a1, 12
40086a2a:	c5cc      	bnez.n	a5, 40086a3a <spi_flash_read+0x27a>
40086a2c:	e78b21        	l32r	a2, 40080858 <_init_end+0x458>
40086a2f:	0228      	l32i.n	a2, a2, 0
40086a31:	528c      	beqz.n	a2, 40086a3a <spi_flash_read+0x27a>
40086a33:	0228      	l32i.n	a2, a2, 0
40086a35:	128c      	beqz.n	a2, 40086a3a <spi_flash_read+0x27a>
40086a37:	0002e0        	callx8	a2
40086a3a:	a168      	l32i.n	a6, a1, 40
40086a3c:	04d616        	beqz	a6, 40086a8d <spi_flash_read+0x2cd>
40086a3f:	0656f6        	bgeui	a6, 5, 40086a49 <spi_flash_read+0x289>
40086a42:	4c0c      	movi.n	a12, 4
40086a44:	0000c6        	j	40086a4b <spi_flash_read+0x28b>
40086a47:	0c0000        	lsi	f0, a0, 48
40086a4a:	b28c      	beqz.n	a2, 40086a59 <spi_flash_read+0x299>
40086a4c:	a830c1        	l32r	a12, 40070b0c <__udivmoddi4+0xbf18>
40086a4f:	dde581        	l32r	a8, 4007e1e4 <__udivmoddi4+0x195f0>
40086a52:	0a7d06        	j	4008944a <xTaskIncrementTick+0x12a>
40086a55:	4afc      	bnez.n	a10, 40086a8d <spi_flash_read+0x2cd>
40086a57:	3128      	l32i.n	a2, a1, 12
40086a59:	d2cc      	bnez.n	a2, 40086a6a <spi_flash_read+0x2aa>
40086a5b:	e77f21        	l32r	a2, 40080858 <_init_end+0x458>
40086a5e:	0228      	l32i.n	a2, a2, 0
40086a60:	628c      	beqz.n	a2, 40086a6a <spi_flash_read+0x2aa>
40086a62:	1228      	l32i.n	a2, a2, 4
40086a64:	002216        	beqz	a2, 40086a6a <spi_flash_read+0x2aa>
40086a67:	0002e0        	callx8	a2
40086a6a:	a1c8      	l32i.n	a12, a1, 40
40086a6c:	30c1b2        	addi	a11, a1, 48
40086a6f:	9148      	l32i.n	a4, a1, 36
40086a71:	80a340        	add	a10, a3, a4
40086a74:	e73481        	l32r	a8, 40080744 <_init_end+0x344>
40086a77:	0008e0        	callx8	a8
40086a7a:	3158      	l32i.n	a5, a1, 12
40086a7c:	d5cc      	bnez.n	a5, 40086a8d <spi_flash_read+0x2cd>
40086a7e:	e77621        	l32r	a2, 40080858 <_init_end+0x458>
40086a81:	0228      	l32i.n	a2, a2, 0
40086a83:	628c      	beqz.n	a2, 40086a8d <spi_flash_read+0x2cd>
40086a85:	0228      	l32i.n	a2, a2, 0
40086a87:	002216        	beqz	a2, 40086a8d <spi_flash_read+0x2cd>
40086a8a:	0002e0        	callx8	a2
40086a8d:	e77221        	l32r	a2, 40080858 <_init_end+0x458>
40086a90:	0228      	l32i.n	a2, a2, 0
40086a92:	628c      	beqz.n	a2, 40086a9c <spi_flash_read+0x2dc>
40086a94:	1228      	l32i.n	a2, a2, 4
40086a96:	002216        	beqz	a2, 40086a9c <spi_flash_read+0x2dc>
40086a99:	0002e0        	callx8	a2
40086a9c:	07ad      	mov.n	a10, a7
40086a9e:	ff9865        	call8	40086424 <spi_flash_translate_rc>
40086aa1:	0a2d      	mov.n	a2, a10
40086aa3:	f01d      	retw.n
40086aa5:	04a122        	movi	a2, 0x104
40086aa8:	f01d      	retw.n
40086aaa:	020c      	movi.n	a2, 0
40086aac:	f01d      	retw.n
	...

40086ab0 <spi_flash_read_encrypted>:
40086ab0:	006136        	entry	a1, 48
40086ab3:	805240        	add	a5, a2, a4
40086ab6:	e74481        	l32r	a8, 400807c8 <_init_end+0x3c8>
40086ab9:	012882        	l32i	a8, a8, 4
40086abc:	2e3857        	bltu	a8, a5, 40086aee <spi_flash_read_encrypted+0x3e>
40086abf:	14bc      	beqz.n	a4, 40086af4 <spi_flash_read_encrypted+0x44>
40086ac1:	e739a1        	l32r	a10, 400807a8 <_init_end+0x3a8>
40086ac4:	10a2a0        	and	a10, a2, a10
40086ac7:	c052a0        	sub	a5, a2, a10
40086aca:	e1cb      	addi.n	a14, a1, 12
40086acc:	d18b      	addi.n	a13, a1, 8
40086ace:	0c0c      	movi.n	a12, 0
40086ad0:	b45a      	add.n	a11, a4, a5
40086ad2:	ff3ca5        	call8	40085e9c <spi_flash_mmap>
40086ad5:	0a2d      	mov.n	a2, a10
40086ad7:	badc      	bnez.n	a10, 40086af6 <spi_flash_read_encrypted+0x46>
40086ad9:	21b8      	l32i.n	a11, a1, 8
40086adb:	04cd      	mov.n	a12, a4
40086add:	bb5a      	add.n	a11, a11, a5
40086adf:	03ad      	mov.n	a10, a3
40086ae1:	e71881        	l32r	a8, 40080744 <_init_end+0x344>
40086ae4:	0008e0        	callx8	a8
40086ae7:	31a8      	l32i.n	a10, a1, 12
40086ae9:	ff42a5        	call8	40085f14 <spi_flash_munmap>
40086aec:	f01d      	retw.n
40086aee:	04a122        	movi	a2, 0x104
40086af1:	f01d      	retw.n
40086af3:	020c00        	andb	b0, b12, b0
40086af6:	f01d      	retw.n

40086af8 <spi_flash_write_encrypted>:
40086af8:	00a136        	entry	a1, 80
40086afb:	e75e81        	l32r	a8, 40080874 <_init_end+0x474>
40086afe:	0020c0        	memw
40086b01:	0888      	l32i.n	a8, a8, 0
40086b03:	0020c0        	memw
40086b06:	b189      	s32i.n	a8, a1, 44
40086b08:	f03d      	nop.n
40086b0a:	f03d      	nop.n
40086b0c:	f03d      	nop.n
40086b0e:	f03d      	nop.n
40086b10:	e75281        	l32r	a8, 40080858 <_init_end+0x458>
40086b13:	0888      	l32i.n	a8, a8, 0
40086b15:	e88c      	beqz.n	a8, 40086b27 <spi_flash_write_encrypted+0x2f>
40086b17:	4888      	l32i.n	a8, a8, 16
40086b19:	a88c      	beqz.n	a8, 40086b27 <spi_flash_write_encrypted+0x2f>
40086b1b:	20b440        	or	a11, a4, a4
40086b1e:	20a220        	or	a10, a2, a2
40086b21:	0008e0        	callx8	a8
40086b24:	0f4a16        	beqz	a10, 40086c1c <spi_flash_write_encrypted+0x124>
40086b27:	345020        	extui	a5, a2, 0, 4
40086b2a:	0f6556        	bnez	a5, 40086c24 <spi_flash_write_encrypted+0x12c>
40086b2d:	345040        	extui	a5, a4, 0, 4
40086b30:	0f8556        	bnez	a5, 40086c2c <spi_flash_write_encrypted+0x134>
40086b33:	ff90e5        	call8	40086440 <spi_flash_unlock>
40086b36:	0a7d      	mov.n	a7, a10
40086b38:	08da16        	beqz	a10, 40086bc9 <spi_flash_write_encrypted+0xd1>
40086b3b:	002906        	j	40086be3 <spi_flash_write_encrypted+0xeb>
40086b3e:	752a      	add.n	a7, a5, a2
40086b40:	45ec      	bnez.n	a5, 40086b68 <spi_flash_write_encrypted+0x70>
40086b42:	446070        	extui	a6, a7, 0, 5
40086b45:	f69c      	beqz.n	a6, 40086b68 <spi_flash_write_encrypted+0x70>
40086b47:	f0c772        	addi	a7, a7, -16
40086b4a:	061c      	movi.n	a6, 16
40086b4c:	06cd      	mov.n	a12, a6
40086b4e:	b35a      	add.n	a11, a3, a5
40086b50:	1cc1a2        	addi	a10, a1, 28
40086b53:	e6fc81        	l32r	a8, 40080744 <_init_end+0x344>
40086b56:	0008e0        	callx8	a8
40086b59:	06cd      	mov.n	a12, a6
40086b5b:	0cc1b2        	addi	a11, a1, 12
40086b5e:	20a770        	or	a10, a7, a7
40086b61:	fff4e5        	call8	40086ab0 <spi_flash_read_encrypted>
40086b64:	000cc6        	j	40086b9b <spi_flash_write_encrypted+0xa3>
40086b67:	645000        	extui	a5, a0, 0, 7
40086b6a:	b666c0        	lsi	f12, a6, 0x2d8
40086b6d:	cd1b      	addi.n	a12, a13, 1
40086b6f:	b35a06        	j	400738db <__udivmoddi4+0xece7>
40086b72:	a1cb      	addi.n	a10, a1, 12
40086b74:	e6f481        	l32r	a8, 40080744 <_init_end+0x344>
40086b77:	0008e0        	callx8	a8
40086b7a:	06cd      	mov.n	a12, a6
40086b7c:	1cc1b2        	addi	a11, a1, 28
40086b7f:	a76a      	add.n	a10, a7, a6
40086b81:	fff2e5        	call8	40086ab0 <spi_flash_read_encrypted>
40086b84:	0004c6        	j	40086b9b <spi_flash_write_encrypted+0xa3>
40086b87:	000000        	ill
40086b8a:	20a062        	movi	a6, 32
40086b8d:	20c660        	or	a12, a6, a6
40086b90:	80b350        	add	a11, a3, a5
40086b93:	a1cb      	addi.n	a10, a1, 12
40086b95:	e6eb81        	l32r	a8, 40080744 <_init_end+0x344>
40086b98:	0008e0        	callx8	a8
40086b9b:	e72f81        	l32r	a8, 40080858 <_init_end+0x458>
40086b9e:	0888      	l32i.n	a8, a8, 0
40086ba0:	588c      	beqz.n	a8, 40086ba9 <spi_flash_write_encrypted+0xb1>
40086ba2:	0888      	l32i.n	a8, a8, 0
40086ba4:	188c      	beqz.n	a8, 40086ba9 <spi_flash_write_encrypted+0xb1>
40086ba6:	0008e0        	callx8	a8
40086ba9:	0c2c      	movi.n	a12, 32
40086bab:	b1cb      	addi.n	a11, a1, 12
40086bad:	07ad      	mov.n	a10, a7
40086baf:	06c265        	call8	4008d7d4 <esp_rom_spiflash_write_encrypted>
40086bb2:	0a7d      	mov.n	a7, a10
40086bb4:	e72981        	l32r	a8, 40080858 <_init_end+0x458>
40086bb7:	0888      	l32i.n	a8, a8, 0
40086bb9:	588c      	beqz.n	a8, 40086bc2 <spi_flash_write_encrypted+0xca>
40086bbb:	1888      	l32i.n	a8, a8, 4
40086bbd:	188c      	beqz.n	a8, 40086bc2 <spi_flash_write_encrypted+0xca>
40086bbf:	0008e0        	callx8	a8
40086bc2:	b7cc      	bnez.n	a7, 40086bd1 <spi_flash_write_encrypted+0xd9>
40086bc4:	556a      	add.n	a5, a5, a6
40086bc6:	000046        	j	40086bcb <spi_flash_write_encrypted+0xd3>
40086bc9:	050c      	movi.n	a5, 0
40086bcb:	02b547        	bgeu	a5, a4, 40086bd1 <spi_flash_write_encrypted+0xd9>
40086bce:	ffdb06        	j	40086b3e <spi_flash_write_encrypted+0x46>
40086bd1:	030c      	movi.n	a3, 0
40086bd3:	3139      	s32i.n	a3, a1, 12
40086bd5:	4139      	s32i.n	a3, a1, 16
40086bd7:	5139      	s32i.n	a3, a1, 20
40086bd9:	6139      	s32i.n	a3, a1, 24
40086bdb:	7139      	s32i.n	a3, a1, 28
40086bdd:	8139      	s32i.n	a3, a1, 32
40086bdf:	9139      	s32i.n	a3, a1, 36
40086be1:	a139      	s32i.n	a3, a1, 40
40086be3:	f03d      	nop.n
40086be5:	f03d      	nop.n
40086be7:	f03d      	nop.n
40086be9:	f03d      	nop.n
40086beb:	e71b31        	l32r	a3, 40080858 <_init_end+0x458>
40086bee:	0338      	l32i.n	a3, a3, 0
40086bf0:	638c      	beqz.n	a3, 40086bfa <spi_flash_write_encrypted+0x102>
40086bf2:	2338      	l32i.n	a3, a3, 8
40086bf4:	002316        	beqz	a3, 40086bfa <spi_flash_write_encrypted+0x102>
40086bf7:	0003e0        	callx8	a3
40086bfa:	04bd      	mov.n	a11, a4
40086bfc:	02ad      	mov.n	a10, a2
40086bfe:	ff4325        	call8	40086030 <spi_flash_mark_modified_region>
40086c01:	e71521        	l32r	a2, 40080858 <_init_end+0x458>
40086c04:	0228      	l32i.n	a2, a2, 0
40086c06:	628c      	beqz.n	a2, 40086c10 <spi_flash_write_encrypted+0x118>
40086c08:	3228      	l32i.n	a2, a2, 12
40086c0a:	002216        	beqz	a2, 40086c10 <spi_flash_write_encrypted+0x118>
40086c0d:	0002e0        	callx8	a2
40086c10:	07ad      	mov.n	a10, a7
40086c12:	ff8125        	call8	40086424 <spi_flash_translate_rc>
40086c15:	0a2d      	mov.n	a2, a10
40086c17:	000506        	j	40086c2f <spi_flash_write_encrypted+0x137>
40086c1a:	220000        	orb	b0, b0, b0
40086c1d:	0602a1        	l32r	a10, 40048428 <lld_evt_get_next_free_slot+0x1afc>
40086c20:	000003        	lsi	f0, a0, 0
40086c23:	a12200        	sll	a2, a2
40086c26:	010602        	l8ui	a0, a6, 1
40086c29:	000000        	ill
40086c2c:	04a122        	movi	a2, 0x104
40086c2f:	0020c0        	memw
40086c32:	b188      	l32i.n	a8, a1, 44
40086c34:	e71041        	l32r	a4, 40080874 <_init_end+0x474>
40086c37:	0020c0        	memw
40086c3a:	0448      	l32i.n	a4, a4, 0
40086c3c:	021847        	beq	a8, a4, 40086c42 <spi_flash_write_encrypted+0x14a>
40086c3f:	4f66e5        	call8	400d62ac <__stack_chk_fail>
40086c42:	f01d      	retw.n

40086c44 <xTaskCreate>:
			const char * const pcName,
			const uint32_t usStackDepth,
			void * const pvParameters,
			UBaseType_t uxPriority,
			TaskHandle_t * const pvCreatedTask)
	{
40086c44:	00a136        	entry	a1, 80
40086c47:	208770        	or	a8, a7, a7
40086c4a:	207110        	or	a7, a1, a1
40086c4d:	2cc792        	addi	a9, a7, 44
40086c50:	006922        	s32i	a2, a9, 0
40086c53:	28c722        	addi	a2, a7, 40
40086c56:	0239      	s32i.n	a3, a2, 0
40086c58:	24c722        	addi	a2, a7, 36
40086c5b:	0249      	s32i.n	a4, a2, 0
40086c5d:	20c722        	addi	a2, a7, 32
40086c60:	0259      	s32i.n	a5, a2, 0
40086c62:	1cc722        	addi	a2, a7, 28
40086c65:	0269      	s32i.n	a6, a2, 0
40086c67:	18c722        	addi	a2, a7, 24
40086c6a:	0289      	s32i.n	a8, a2, 0
		return xTaskCreatePinnedToCore( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pvCreatedTask, tskNO_AFFINITY );
40086c6c:	18c782        	addi	a8, a7, 24
40086c6f:	1cc762        	addi	a6, a7, 28
40086c72:	20c752        	addi	a5, a7, 32
40086c75:	24c742        	addi	a4, a7, 36
40086c78:	28c732        	addi	a3, a7, 40
40086c7b:	2cc722        	addi	a2, a7, 44
40086c7e:	e62891        	l32r	a9, 40080520 <_init_end+0x120>
40086c81:	0199      	s32i.n	a9, a1, 0
40086c83:	08f8      	l32i.n	a15, a8, 0
40086c85:	06e8      	l32i.n	a14, a6, 0
40086c87:	05d8      	l32i.n	a13, a5, 0
40086c89:	04c8      	l32i.n	a12, a4, 0
40086c8b:	03b8      	l32i.n	a11, a3, 0
40086c8d:	02a8      	l32i.n	a10, a2, 0
40086c8f:	021a65        	call8	40088e34 <xTaskCreatePinnedToCore>
40086c92:	0a2d      	mov.n	a2, a10
	}
40086c94:	f01d      	retw.n
	...

40086c98 <micros>:
    }
#endif
}

unsigned long IRAM_ATTR micros()
{
40086c98:	004136        	entry	a1, 32
40086c9b:	017d      	mov.n	a7, a1
    return (unsigned long) (esp_timer_get_time());
40086c9d:	faa325        	call8	400816d0 <esp_timer_get_time>
40086ca0:	0a2d      	mov.n	a2, a10
40086ca2:	0b3d      	mov.n	a3, a11
}
40086ca4:	f01d      	retw.n
	...

40086ca8 <millis>:

unsigned long IRAM_ATTR millis()
{
40086ca8:	004136        	entry	a1, 32
40086cab:	017d      	mov.n	a7, a1
    return (unsigned long) (esp_timer_get_time() / 1000ULL);
40086cad:	faa225        	call8	400816d0 <esp_timer_get_time>
40086cb0:	0a2d      	mov.n	a2, a10
40086cb2:	0b3d      	mov.n	a3, a11
40086cb4:	e6f1c1        	l32r	a12, 40080878 <_init_end+0x478>
40086cb7:	e617d1        	l32r	a13, 40080514 <_init_end+0x114>
40086cba:	02ad      	mov.n	a10, a2
40086cbc:	03bd      	mov.n	a11, a3
40086cbe:	e65981        	l32r	a8, 40080624 <_init_end+0x224>
40086cc1:	0008e0        	callx8	a8
40086cc4:	0a2d      	mov.n	a2, a10
40086cc6:	0b3d      	mov.n	a3, a11
}
40086cc8:	f01d      	retw.n
	...

40086ccc <delayMicroseconds>:
{
    vTaskDelay(ms / portTICK_PERIOD_MS);
}

void IRAM_ATTR delayMicroseconds(uint32_t us)
{
40086ccc:	008136        	entry	a1, 64
40086ccf:	017d      	mov.n	a7, a1
40086cd1:	37cb      	addi.n	a3, a7, 12
40086cd3:	0329      	s32i.n	a2, a3, 0
    uint32_t m = micros();
40086cd5:	fffc25        	call8	40086c98 <micros>
40086cd8:	0a3d      	mov.n	a3, a10
40086cda:	18c722        	addi	a2, a7, 24
40086cdd:	0239      	s32i.n	a3, a2, 0
    if(us){
40086cdf:	27cb      	addi.n	a2, a7, 12
40086ce1:	0228      	l32i.n	a2, a2, 0
40086ce3:	042216        	beqz	a2, 40086d29 <delayMicroseconds+0x5d>
        uint32_t e = (m + us);
40086ce6:	1cc722        	addi	a2, a7, 28
40086ce9:	18c742        	addi	a4, a7, 24
40086cec:	37cb      	addi.n	a3, a7, 12
40086cee:	0448      	l32i.n	a4, a4, 0
40086cf0:	0338      	l32i.n	a3, a3, 0
40086cf2:	343a      	add.n	a3, a4, a3
40086cf4:	0239      	s32i.n	a3, a2, 0
        if(m > e){ //overflow
40086cf6:	18c722        	addi	a2, a7, 24
40086cf9:	1cc732        	addi	a3, a7, 28
40086cfc:	0228      	l32i.n	a2, a2, 0
40086cfe:	0338      	l32i.n	a3, a3, 0
40086d00:	18b327        	bgeu	a3, a2, 40086d1c <delayMicroseconds+0x50>
            while(micros() > e){
40086d03:	000046        	j	40086d08 <delayMicroseconds+0x3c>
                NOP();
40086d06:	f03d      	nop.n
            while(micros() > e){
40086d08:	fff8e5        	call8	40086c98 <micros>
40086d0b:	0a2d      	mov.n	a2, a10
40086d0d:	1cc732        	addi	a3, a7, 28
40086d10:	0338      	l32i.n	a3, a3, 0
40086d12:	f03327        	bltu	a3, a2, 40086d06 <delayMicroseconds+0x3a>
            }
        }
        while(micros() < e){
40086d15:	0000c6        	j	40086d1c <delayMicroseconds+0x50>
40086d18:	3d0000        	lsi	f0, a0, 244
            NOP();
40086d1b:	f7a5f0        	lsi	f15, a5, 0x3dc
        while(micros() < e){
40086d1e:	ff          	.byte 0xff
40086d1f:	0a3d      	mov.n	a3, a10
40086d21:	1cc722        	addi	a2, a7, 28
40086d24:	0228      	l32i.n	a2, a2, 0
40086d26:	f03327        	bltu	a3, a2, 40086d1a <delayMicroseconds+0x4e>
        }
    }
}
40086d29:	f03d      	nop.n
40086d2b:	f01d      	retw.n
40086d2d:	000000        	ill

40086d30 <pathToFileName>:
    initVariant();
}

//used by hal log
const char * IRAM_ATTR pathToFileName(const char * path)
{
40086d30:	008136        	entry	a1, 64
40086d33:	017d      	mov.n	a7, a1
40086d35:	37cb      	addi.n	a3, a7, 12
40086d37:	0329      	s32i.n	a2, a3, 0
    size_t i = 0;
40086d39:	14c722        	addi	a2, a7, 20
40086d3c:	030c      	movi.n	a3, 0
40086d3e:	0239      	s32i.n	a3, a2, 0
    size_t pos = 0;
40086d40:	18c722        	addi	a2, a7, 24
40086d43:	030c      	movi.n	a3, 0
40086d45:	0239      	s32i.n	a3, a2, 0
    char * p = (char *)path;
40086d47:	1cc722        	addi	a2, a7, 28
40086d4a:	37cb      	addi.n	a3, a7, 12
40086d4c:	0338      	l32i.n	a3, a3, 0
40086d4e:	0239      	s32i.n	a3, a2, 0
    while(*p){
40086d50:	001006        	j	40086d94 <pathToFileName+0x64>
40086d53:	c72200        	lsi	f0, a2, 0x31c
        i++;
40086d56:	c73214        	lsi	f1, a2, 0x31c
40086d59:	033814        	lsi	f1, a8, 12
40086d5c:	331b      	addi.n	a3, a3, 1
40086d5e:	0239      	s32i.n	a3, a2, 0
        if(*p == '/' || *p == '\\'){
40086d60:	1cc722        	addi	a2, a7, 28
40086d63:	0228      	l32i.n	a2, a2, 0
40086d65:	000232        	l8ui	a3, a2, 0
40086d68:	f22c      	movi.n	a2, 47
40086d6a:	0e1327        	beq	a3, a2, 40086d7c <pathToFileName+0x4c>
40086d6d:	1cc722        	addi	a2, a7, 28
40086d70:	002222        	l32i	a2, a2, 0
40086d73:	000232        	l8ui	a3, a2, 0
40086d76:	5ca022        	movi	a2, 92
40086d79:	0b9327        	bne	a3, a2, 40086d88 <pathToFileName+0x58>
            pos = i;
40086d7c:	18c722        	addi	a2, a7, 24
40086d7f:	14c732        	addi	a3, a7, 20
40086d82:	002332        	l32i	a3, a3, 0
40086d85:	006232        	s32i	a3, a2, 0
        }
        p++;
40086d88:	1cc722        	addi	a2, a7, 28
40086d8b:	1cc732        	addi	a3, a7, 28
40086d8e:	0338      	l32i.n	a3, a3, 0
40086d90:	331b      	addi.n	a3, a3, 1
40086d92:	0239      	s32i.n	a3, a2, 0
    while(*p){
40086d94:	1cc722        	addi	a2, a7, 28
40086d97:	0228      	l32i.n	a2, a2, 0
40086d99:	000222        	l8ui	a2, a2, 0
40086d9c:	fb4256        	bnez	a2, 40086d54 <pathToFileName+0x24>
    }
    return path+pos;
40086d9f:	37cb      	addi.n	a3, a7, 12
40086da1:	18c722        	addi	a2, a7, 24
40086da4:	0338      	l32i.n	a3, a3, 0
40086da6:	0228      	l32i.n	a2, a2, 0
40086da8:	232a      	add.n	a2, a3, a2
}
40086daa:	f01d      	retw.n

40086dac <esp_spiram_init_cache>:
40086dac:	004136        	entry	a1, 32
40086daf:	e6b321        	l32r	a2, 4008087c <_init_end+0x47c>
40086db2:	80a0f2        	movi	a15, 128
40086db5:	20a0e2        	movi	a14, 32
40086db8:	0d0c      	movi.n	a13, 0
40086dba:	02cd      	mov.n	a12, a2
40086dbc:	0dbd      	mov.n	a11, a13
40086dbe:	0dad      	mov.n	a10, a13
40086dc0:	0012a5        	call8	40086eec <cache_sram_mmu_set>
40086dc3:	e69131        	l32r	a3, 40080808 <_init_end+0x408>
40086dc6:	03ad      	mov.n	a10, a3
40086dc8:	fab7e5        	call8	40081948 <esp_dport_access_reg_read>
40086dcb:	787c      	movi.n	a8, -9
40086dcd:	10aa80        	and	a10, a10, a8
40086dd0:	0020c0        	memw
40086dd3:	03a9      	s32i.n	a10, a3, 0
40086dd5:	80a0f2        	movi	a15, 128
40086dd8:	0e2c      	movi.n	a14, 32
40086dda:	0d0c      	movi.n	a13, 0
40086ddc:	02cd      	mov.n	a12, a2
40086dde:	0dbd      	mov.n	a11, a13
40086de0:	1a0c      	movi.n	a10, 1
40086de2:	0010a5        	call8	40086eec <cache_sram_mmu_set>
40086de5:	f01d      	retw.n
	...

40086de8 <esp_spiram_writeback_cache>:
40086de8:	006136        	entry	a1, 48
40086deb:	00a022        	movi	a2, 0
40086dee:	0020c0        	memw
40086df1:	036122        	s32i	a2, a1, 12
40086df4:	f03d      	nop.n
40086df6:	f03d      	nop.n
40086df8:	f03d      	nop.n
40086dfa:	f03d      	nop.n
40086dfc:	e6a121        	l32r	a2, 40080880 <_init_end+0x480>
40086dff:	000222        	l8ui	a2, a2, 0
40086e02:	0e2216        	beqz	a2, 40086ee8 <esp_spiram_writeback_cache+0x100>
40086e05:	e67da1        	l32r	a10, 400807fc <_init_end+0x3fc>
40086e08:	fab3e5        	call8	40081948 <esp_dport_access_reg_read>
40086e0b:	17ea37        	bbsi	a10, 3, 40086e26 <esp_spiram_writeback_cache+0x3e>
40086e0e:	e67b31        	l32r	a3, 400807fc <_init_end+0x3fc>
40086e11:	03ad      	mov.n	a10, a3
40086e13:	fab365        	call8	40081948 <esp_dport_access_reg_read>
40086e16:	820c      	movi.n	a2, 8
40086e18:	20aa20        	or	a10, a10, a2
40086e1b:	0020c0        	memw
40086e1e:	03a9      	s32i.n	a10, a3, 0
40086e20:	120c      	movi.n	a2, 1
40086e22:	0000c6        	j	40086e29 <esp_spiram_writeback_cache+0x41>
40086e25:	a02200        	addx4	a2, a2, a0
40086e28:	76a100        	lsi	f0, a1, 0x1d8
40086e2b:	b1a5e6        	bgei	a5, 12, 40086de0 <esp_spiram_init_cache+0x34>
40086e2e:	37fa      	add.n	a3, a7, a15
40086e30:	17ea      	add.n	a1, a7, a14
40086e32:	02a032        	movi	a3, 2
40086e35:	202230        	or	a2, a2, a3
40086e38:	e67341        	l32r	a4, 40080804 <_init_end+0x404>
40086e3b:	04ad      	mov.n	a10, a4
40086e3d:	fab0a5        	call8	40081948 <esp_dport_access_reg_read>
40086e40:	830c      	movi.n	a3, 8
40086e42:	20aa30        	or	a10, a10, a3
40086e45:	0020c0        	memw
40086e48:	04a9      	s32i.n	a10, a4, 0
40086e4a:	080c      	movi.n	a8, 0
40086e4c:	000ec6        	j	40086e8b <esp_spiram_writeback_cache+0xa3>
40086e4f:	8b9100        	moveqz.s	f9, f1, a0
40086e52:	a89ae6        	bgei	a10, 10, 40086dfe <esp_spiram_writeback_cache+0x16>
40086e55:	000aa2        	l8ui	a10, a10, 0
40086e58:	74b0a0        	extui	a11, a10, 0, 8
40086e5b:	0020c0        	memw
40086e5e:	31a8      	l32i.n	a10, a1, 12
40086e60:	abaa      	add.n	a10, a11, a10
40086e62:	0020c0        	memw
40086e65:	31a9      	s32i.n	a10, a1, 12
40086e67:	f03d      	nop.n
40086e69:	f03d      	nop.n
40086e6b:	f03d      	nop.n
40086e6d:	f03d      	nop.n
40086e6f:	e685a1        	l32r	a10, 40080884 <_init_end+0x484>
40086e72:	a8aa      	add.n	a10, a8, a10
40086e74:	9a9a      	add.n	a9, a10, a9
40086e76:	000992        	l8ui	a9, a9, 0
40086e79:	74a090        	extui	a10, a9, 0, 8
40086e7c:	0020c0        	memw
40086e7f:	3198      	l32i.n	a9, a1, 12
40086e81:	9a9a      	add.n	a9, a10, a9
40086e83:	0020c0        	memw
40086e86:	3199      	s32i.n	a9, a1, 12
40086e88:	20c882        	addi	a8, a8, 32
40086e8b:	0020f0        	nop
40086e8e:	0020f0        	nop
40086e91:	f03d      	nop.n
40086e93:	e64691        	l32r	a9, 400807ac <_init_end+0x3ac>
40086e96:	b6a987        	bge	a9, a8, 40086e50 <esp_spiram_writeback_cache+0x68>
40086e99:	206207        	bbci	a2, 0, 40086ebd <esp_spiram_writeback_cache+0xd5>
40086e9c:	e65fa1        	l32r	a10, 40080818 <_init_end+0x418>
40086e9f:	faaaa5        	call8	40081948 <esp_dport_access_reg_read>
40086ea2:	b4a7a0        	extui	a10, a10, 7, 12
40086ea5:	f31a66        	bnei	a10, 1, 40086e9c <esp_spiram_writeback_cache+0xb4>
40086ea8:	e65531        	l32r	a3, 400807fc <_init_end+0x3fc>
40086eab:	20a330        	or	a10, a3, a3
40086eae:	faa9a5        	call8	40081948 <esp_dport_access_reg_read>
40086eb1:	f7af82        	movi	a8, -9
40086eb4:	10aa80        	and	a10, a10, a8
40086eb7:	0020c0        	memw
40086eba:	0063a2        	s32i	a10, a3, 0
40086ebd:	276217        	bbci	a2, 1, 40086ee8 <esp_spiram_writeback_cache+0x100>
40086ec0:	f03d      	nop.n
40086ec2:	f03d      	nop.n
40086ec4:	f03d      	nop.n
40086ec6:	f03d      	nop.n
40086ec8:	e655a1        	l32r	a10, 4008081c <_init_end+0x41c>
40086ecb:	faa7e5        	call8	40081948 <esp_dport_access_reg_read>
40086ece:	b4a7a0        	extui	a10, a10, 7, 12
40086ed1:	eb1a66        	bnei	a10, 1, 40086ec0 <esp_spiram_writeback_cache+0xd8>
40086ed4:	e64c31        	l32r	a3, 40080804 <_init_end+0x404>
40086ed7:	20a330        	or	a10, a3, a3
40086eda:	faa6e5        	call8	40081948 <esp_dport_access_reg_read>
40086edd:	f7af22        	movi	a2, -9
40086ee0:	10aa20        	and	a10, a10, a2
40086ee3:	0020c0        	memw
40086ee6:	03a9      	s32i.n	a10, a3, 0
40086ee8:	f01d      	retw.n
	...

40086eec <cache_sram_mmu_set>:
40086eec:	006136        	entry	a1, 48
40086eef:	2179      	s32i.n	a7, a1, 8
40086ef1:	ff5b25        	call8	400864a4 <spi_flash_guard_get>
40086ef4:	11a9      	s32i.n	a10, a1, 4
40086ef6:	6adc      	bnez.n	a10, 40086f10 <cache_sram_mmu_set+0x24>
40086ef8:	07fd      	mov.n	a15, a7
40086efa:	06ed      	mov.n	a14, a6
40086efc:	05dd      	mov.n	a13, a5
40086efe:	04cd      	mov.n	a12, a4
40086f00:	03bd      	mov.n	a11, a3
40086f02:	02ad      	mov.n	a10, a2
40086f04:	e66281        	l32r	a8, 4008088c <_init_end+0x48c>
40086f07:	0008e0        	callx8	a8
40086f0a:	0a7d      	mov.n	a7, a10
40086f0c:	005d86        	j	40087086 <cache_sram_mmu_set+0x19a>
40086f0f:	074c00        	lsi	f0, a12, 28
40086f12:	d27760        	quos	a7, a7, a6
40086f15:	770b      	addi.n	a7, a7, -1
40086f17:	e62581        	l32r	a8, 400807ac <_init_end+0x3ac>
40086f1a:	400700        	ssr	a7
40086f1d:	b17080        	sra	a7, a8
40086f20:	020477        	bnone	a4, a7, 40086f26 <cache_sram_mmu_set+0x3a>
40086f23:	004f46        	j	40087064 <cache_sram_mmu_set+0x178>
40086f26:	107570        	and	a7, a5, a7
40086f29:	13c756        	bnez	a7, 40087069 <cache_sram_mmu_set+0x17d>
40086f2c:	18c626        	beqi	a6, 32, 40086f48 <cache_sram_mmu_set+0x5c>
40086f2f:	1eb626        	beqi	a6, 16, 40086f51 <cache_sram_mmu_set+0x65>
40086f32:	248626        	beqi	a6, 8, 40086f5a <cache_sram_mmu_set+0x6e>
40086f35:	2b4626        	beqi	a6, 4, 40086f64 <cache_sram_mmu_set+0x78>
40086f38:	022626        	beqi	a6, 2, 40086f3e <cache_sram_mmu_set+0x52>
40086f3b:	004bc6        	j	4008706e <cache_sram_mmu_set+0x182>
40086f3e:	480c      	movi.n	a8, 4
40086f40:	3189      	s32i.n	a8, a1, 12
40086f42:	b90c      	movi.n	a9, 11
40086f44:	000886        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f47:	080c00        	lsx	f0, a12, a0
40086f4a:	3189      	s32i.n	a8, a1, 12
40086f4c:	f90c      	movi.n	a9, 15
40086f4e:	000606        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f51:	180c      	movi.n	a8, 1
40086f53:	3189      	s32i.n	a8, a1, 12
40086f55:	e90c      	movi.n	a9, 14
40086f57:	0003c6        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f5a:	280c      	movi.n	a8, 2
40086f5c:	3189      	s32i.n	a8, a1, 12
40086f5e:	d90c      	movi.n	a9, 13
40086f60:	000186        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f63:	380c00        	lsi	f0, a12, 224
40086f66:	3189      	s32i.n	a8, a1, 12
40086f68:	c90c      	movi.n	a9, 12
40086f6a:	400900        	ssr	a9
40086f6d:	915050        	srl	a5, a5
40086f70:	3823f6        	bgeui	a3, 2, 40086fac <cache_sram_mmu_set+0xc0>
40086f73:	f03d      	nop.n
40086f75:	f03d      	nop.n
40086f77:	e64481        	l32r	a8, 40080888 <_init_end+0x488>
40086f7a:	023847        	bltu	a8, a4, 40086f80 <cache_sram_mmu_set+0x94>
40086f7d:	003cc6        	j	40087074 <cache_sram_mmu_set+0x188>
40086f80:	0166f0        	slli	a6, a6, 17
40086f83:	e63e81        	l32r	a8, 4008087c <_init_end+0x47c>
40086f86:	668a      	add.n	a6, a6, a8
40086f88:	023467        	bltu	a4, a6, 40086f8e <cache_sram_mmu_set+0xa2>
40086f8b:	003a86        	j	40087079 <cache_sram_mmu_set+0x18d>
40086f8e:	e63561        	l32r	a6, 40080864 <_init_end+0x464>
40086f91:	3138      	l32i.n	a3, a1, 12
40086f93:	400300        	ssr	a3
40086f96:	b16060        	sra	a6, a6
40086f99:	104640        	and	a4, a6, a4
40086f9c:	400900        	ssr	a9
40086f9f:	914040        	srl	a4, a4
40086fa2:	80a462        	movi	a6, 0x480
40086fa5:	446a      	add.n	a4, a4, a6
40086fa7:	000d06        	j	40086fdf <cache_sram_mmu_set+0xf3>
40086faa:	810000        	src	a0, a0, a0
40086fad:	47e637        	bbsi	a6, 3, 40086ff8 <cache_sram_mmu_set+0x10c>
40086fb0:	0238      	l32i.n	a3, a2, 0
40086fb2:	003206        	j	4008707e <cache_sram_mmu_set+0x192>
40086fb5:	0166f0        	slli	a6, a6, 17
40086fb8:	e63181        	l32r	a8, 4008087c <_init_end+0x47c>
40086fbb:	668a      	add.n	a6, a6, a8
40086fbd:	023467        	bltu	a4, a6, 40086fc3 <cache_sram_mmu_set+0xd7>
40086fc0:	003006        	j	40087084 <cache_sram_mmu_set+0x198>
40086fc3:	118390        	slli	a8, a3, 7
40086fc6:	e62761        	l32r	a6, 40080864 <_init_end+0x464>
40086fc9:	3138      	l32i.n	a3, a1, 12
40086fcb:	400300        	ssr	a3
40086fce:	b16060        	sra	a6, a6
40086fd1:	106640        	and	a6, a6, a4
40086fd4:	400900        	ssr	a9
40086fd7:	914060        	srl	a4, a6
40086fda:	484a      	add.n	a4, a8, a4
40086fdc:	04d442        	addmi	a4, a4, 0x400
40086fdf:	1138      	l32i.n	a3, a1, 4
40086fe1:	0368      	l32i.n	a6, a3, 0
40086fe3:	0006e0        	callx8	a6
40086fe6:	060c      	movi.n	a6, 0
40086fe8:	000746        	j	40087009 <cache_sram_mmu_set+0x11d>
40086feb:	528c00        	lsi	f0, a12, 0x148
40086fee:	e5ed81        	l32r	a8, 400807a4 <_init_end+0x3a4>
40086ff1:	0000c6        	j	40086ff8 <cache_sram_mmu_set+0x10c>
40086ff4:	ea8100        	utrunc.s	a8, f1, 0
40086ff7:	8480e5        	call8	4000b804 <roundup2+0xc88>
40086ffa:	9650a0        	lsi	f10, a0, 0x258
40086ffd:	20c080        	or	a12, a0, a8
40087000:	689200        	lsi	f0, a2, 0x1a0
40087003:	c44200        	extui	a4, a0, 2, 13
40087006:	661b01        	l32r	a0, 40060874 <esp_crc8+0x3730>
40087009:	f03d      	nop.n
4008700b:	f03d      	nop.n
4008700d:	2138      	l32i.n	a3, a1, 8
4008700f:	d93637        	bltu	a6, a3, 40086fec <cache_sram_mmu_set+0x100>
40087012:	f2dc      	bnez.n	a2, 40087035 <cache_sram_mmu_set+0x149>
40087014:	e5fb41        	l32r	a4, 40080800 <_init_end+0x400>
40087017:	04ad      	mov.n	a10, a4
40087019:	fa92e5        	call8	40081948 <esp_dport_access_reg_read>
4008701c:	3fae22        	movi	a2, 0xfffffe3f
4008701f:	10aa20        	and	a10, a10, a2
40087022:	3138      	l32i.n	a3, a1, 12
40087024:	1123a0        	slli	a2, a3, 6
40087027:	202a20        	or	a2, a10, a2
4008702a:	0020c0        	memw
4008702d:	0429      	s32i.n	a2, a4, 0
4008702f:	000746        	j	40087050 <cache_sram_mmu_set+0x164>
40087032:	000000        	ill
40087035:	e5f441        	l32r	a4, 40080808 <_init_end+0x408>
40087038:	04ad      	mov.n	a10, a4
4008703a:	fa90e5        	call8	40081948 <esp_dport_access_reg_read>
4008703d:	3fae22        	movi	a2, 0xfffffe3f
40087040:	10aa20        	and	a10, a10, a2
40087043:	3138      	l32i.n	a3, a1, 12
40087045:	1123a0        	slli	a2, a3, 6
40087048:	202a20        	or	a2, a10, a2
4008704b:	0020c0        	memw
4008704e:	0429      	s32i.n	a2, a4, 0
40087050:	f03d      	nop.n
40087052:	f03d      	nop.n
40087054:	f03d      	nop.n
40087056:	f03d      	nop.n
40087058:	1138      	l32i.n	a3, a1, 4
4008705a:	012322        	l32i	a2, a3, 4
4008705d:	0002e0        	callx8	a2
40087060:	000886        	j	40087086 <cache_sram_mmu_set+0x19a>
40087063:	170c00        	lsi	f0, a12, 92
40087066:	000706        	j	40087086 <cache_sram_mmu_set+0x19a>
40087069:	170c      	movi.n	a7, 1
4008706b:	0005c6        	j	40087086 <cache_sram_mmu_set+0x19a>
4008706e:	370c      	movi.n	a7, 3
40087070:	000486        	j	40087086 <cache_sram_mmu_set+0x19a>
40087073:	570c00        	lsi	f0, a12, 0x15c
40087076:	000306        	j	40087086 <cache_sram_mmu_set+0x19a>
40087079:	570c      	movi.n	a7, 5
4008707b:	0001c6        	j	40087086 <cache_sram_mmu_set+0x19a>
4008707e:	570c      	movi.n	a7, 5
40087080:	000086        	j	40087086 <cache_sram_mmu_set+0x19a>
40087083:	570c00        	lsi	f0, a12, 0x15c
40087086:	072d      	mov.n	a2, a7
40087088:	f01d      	retw.n
	...

4008708c <s_stub_code_buf>:
	...

400870ac <xt_debugexception>:
400870ac:	100c      	movi.n	a0, 1
400870ae:	13e800        	wsr.exccause	a0
400870b1:	03b600        	rsr.epc6	a0
400870b4:	13b100        	wsr.epc1	a0
400870b7:	03d600        	rsr.excsave6	a0
400870ba:	13d100        	wsr.excsave1	a0
400870bd:	fccc45        	call0	40083d84 <_xt_panic>
400870c0:	003610        	rfi	6
	...

400870c4 <_xt_highint4>:
400870c4:	03d400        	rsr.excsave4	a0
400870c7:	003410        	rfi	4
	...

400870cc <xt_highint5>:
400870cc:	03d500        	rsr.excsave5	a0
400870cf:	003510        	rfi	5
	...

400870d4 <_xt_nmi>:
400870d4:	03d700        	rsr.excsave7	a0
400870d7:	003710        	rfi	7
	...

400870dc <coex_time_diff>:
400870dc:	004136        	entry	a1, 32
400870df:	c02320        	sub	a2, a3, a2
400870e2:	f01d      	retw.n

400870e4 <prvGetFreeSize>:
400870e4:	004136        	entry	a1, 32
400870e7:	029d      	mov.n	a9, a2
400870e9:	1228      	l32i.n	a2, a2, 4
400870eb:	12e227        	bbsi	a2, 2, 40087101 <prvGetFreeSize+0x1d>
400870ee:	a988      	l32i.n	a8, a9, 40
400870f0:	8928      	l32i.n	a2, a9, 32
400870f2:	c08820        	sub	a8, a8, a2
400870f5:	0318e6        	bgei	a8, 1, 400870fc <prvGetFreeSize+0x18>
400870f8:	0928      	l32i.n	a2, a9, 0
400870fa:	882a      	add.n	a8, a8, a2
400870fc:	082d      	mov.n	a2, a8
400870fe:	000046        	j	40087103 <prvGetFreeSize+0x1f>
40087101:	020c      	movi.n	a2, 0
40087103:	002982        	l32i	a8, a9, 0
40087106:	14b827        	bgeu	a8, a2, 4008711e <prvGetFreeSize+0x3a>
40087109:	e5e1d1        	l32r	a13, 40080890 <_init_end+0x490>
4008710c:	9ca0c2        	movi	a12, 156
4008710f:	e5e1b1        	l32r	a11, 40080894 <_init_end+0x494>
40087112:	e5e1a1        	l32r	a10, 40080898 <_init_end+0x498>
40087115:	e4e081        	l32r	a8, 40080498 <_init_end+0x98>
40087118:	0008e0        	callx8	a8
4008711b:	042525        	call8	4008b36c <abort>
4008711e:	f01d      	retw.n

40087120 <prvReceiveGeneric>:
40087120:	008136        	entry	a1, 64
40087123:	036172        	s32i	a7, a1, 12
40087126:	016142        	s32i	a4, a1, 4
40087129:	006152        	s32i	a5, a1, 0
4008712c:	2169      	s32i.n	a6, a1, 8
4008712e:	f03d      	nop.n
40087130:	f03d      	nop.n
40087132:	f03d      	nop.n
40087134:	f03d      	nop.n
40087136:	102162        	l32i	a6, a1, 64
40087139:	015025        	call8	4008863c <xTaskGetTickCount>
4008713c:	7a6a      	add.n	a7, a10, a6
4008713e:	065d      	mov.n	a5, a6
40087140:	004086        	j	40087246 <prvReceiveGeneric+0x126>
40087143:	000000        	ill
40087146:	00a0d2        	movi	a13, 0
40087149:	05cd      	mov.n	a12, a5
4008714b:	0dbd      	mov.n	a11, a13
4008714d:	f2a8      	l32i.n	a10, a2, 60
4008714f:	00a165        	call8	40087b64 <xQueueGenericReceive>
40087152:	021a26        	beqi	a10, 1, 40087158 <prvReceiveGeneric+0x38>
40087155:	003ec6        	j	40087254 <prvReceiveGeneric+0x134>
40087158:	40c242        	addi	a4, a2, 64
4008715b:	04ad      	mov.n	a10, a4
4008715d:	019325        	call8	40088a90 <vTaskEnterCritical>
40087160:	02ad      	mov.n	a10, a2
40087162:	002ba5        	call8	4008741c <prvCheckItemAvail>
40087165:	021a26        	beqi	a10, 1, 4008716b <prvReceiveGeneric+0x4b>
40087168:	0032c6        	j	40087237 <prvReceiveGeneric+0x117>
4008716b:	1258      	l32i.n	a5, a2, 4
4008716d:	116517        	bbci	a5, 1, 40087182 <prvReceiveGeneric+0x62>
40087170:	5258      	l32i.n	a5, a2, 20
40087172:	01d8      	l32i.n	a13, a1, 0
40087174:	31c8      	l32i.n	a12, a1, 12
40087176:	0b0c      	movi.n	a11, 0
40087178:	02ad      	mov.n	a10, a2
4008717a:	0005e0        	callx8	a5
4008717d:	03a9      	s32i.n	a10, a3, 0
4008717f:	000446        	j	40087194 <prvReceiveGeneric+0x74>
40087182:	052252        	l32i	a5, a2, 20
40087185:	0021d2        	l32i	a13, a1, 0
40087188:	0c0c      	movi.n	a12, 0
4008718a:	1cc1b2        	addi	a11, a1, 28
4008718d:	02ad      	mov.n	a10, a2
4008718f:	0005e0        	callx8	a5
40087192:	03a9      	s32i.n	a10, a3, 0
40087194:	f03d      	nop.n
40087196:	f03d      	nop.n
40087198:	f03d      	nop.n
4008719a:	f03d      	nop.n
4008719c:	1258      	l32i.n	a5, a2, 4
4008719e:	736507        	bbci	a5, 0, 40087215 <prvReceiveGeneric+0xf5>
400871a1:	150c      	movi.n	a5, 1
400871a3:	070c      	movi.n	a7, 0
400871a5:	076d      	mov.n	a6, a7
400871a7:	1188      	l32i.n	a8, a1, 4
400871a9:	936580        	movnez	a6, a5, a8
400871ac:	746060        	extui	a6, a6, 0, 8
400871af:	2188      	l32i.n	a8, a1, 8
400871b1:	835780        	moveqz	a5, a7, a8
400871b4:	745050        	extui	a5, a5, 0, 8
400871b7:	5a1677        	beq	a6, a7, 40087215 <prvReceiveGeneric+0xf5>
400871ba:	571577        	beq	a5, a7, 40087215 <prvReceiveGeneric+0xf5>
400871bd:	7158      	l32i.n	a5, a1, 28
400871bf:	4c1566        	bnei	a5, 1, 4008720f <prvReceiveGeneric+0xef>
400871c2:	5258      	l32i.n	a5, a2, 20
400871c4:	08dd      	mov.n	a13, a8
400871c6:	07cd      	mov.n	a12, a7
400871c8:	1cc1b2        	addi	a11, a1, 28
400871cb:	02ad      	mov.n	a10, a2
400871cd:	0005e0        	callx8	a5
400871d0:	1158      	l32i.n	a5, a1, 4
400871d2:	05a9      	s32i.n	a10, a5, 0
400871d4:	f03d      	nop.n
400871d6:	f03d      	nop.n
400871d8:	f03d      	nop.n
400871da:	f03d      	nop.n
400871dc:	0338      	l32i.n	a3, a3, 0
400871de:	143a37        	bltu	a10, a3, 400871f6 <prvReceiveGeneric+0xd6>
400871e1:	e5aed1        	l32r	a13, 4008089c <_init_end+0x49c>
400871e4:	48a2c2        	movi	a12, 0x248
400871e7:	e5abb1        	l32r	a11, 40080894 <_init_end+0x494>
400871ea:	e5aba1        	l32r	a10, 40080898 <_init_end+0x498>
400871ed:	e4aa81        	l32r	a8, 40080498 <_init_end+0x98>
400871f0:	0008e0        	callx8	a8
400871f3:	0417a5        	call8	4008b36c <abort>
400871f6:	7138      	l32i.n	a3, a1, 28
400871f8:	939c      	beqz.n	a3, 40087215 <prvReceiveGeneric+0xf5>
400871fa:	e5a8d1        	l32r	a13, 4008089c <_init_end+0x49c>
400871fd:	49a2c2        	movi	a12, 0x249
40087200:	e5a5b1        	l32r	a11, 40080894 <_init_end+0x494>
40087203:	e5a5a1        	l32r	a10, 40080898 <_init_end+0x498>
40087206:	e4a481        	l32r	a8, 40080498 <_init_end+0x98>
40087209:	0008e0        	callx8	a8
4008720c:	0415e5        	call8	4008b36c <abort>
4008720f:	030c      	movi.n	a3, 0
40087211:	1188      	l32i.n	a8, a1, 4
40087213:	0839      	s32i.n	a3, a8, 0
40087215:	f03d      	nop.n
40087217:	f03d      	nop.n
40087219:	f03d      	nop.n
4008721b:	f03d      	nop.n
4008721d:	d238      	l32i.n	a3, a2, 52
4008721f:	0513e6        	bgei	a3, 1, 40087228 <prvReceiveGeneric+0x108>
40087222:	030c      	movi.n	a3, 0
40087224:	0000c6        	j	4008722b <prvReceiveGeneric+0x10b>
40087227:	a03200        	addx4	a3, a2, a0
4008722a:	a44001        	l32r	a0, 4007032c <__udivmoddi4+0xb738>
4008722d:	9a2520        	trunc.s	a2, f5, 2
40087230:	a04201        	l32r	a0, 4006f338 <__udivmoddi4+0xa744>
40087233:	088601        	l32r	a0, 4004944c <r_lld_scan_stop+0x2bc>
40087236:	062600        	lsi	f0, a6, 24
40087239:	402505        	call0	400c748c <_rtc_text_end+0x748c>
4008723c:	57a001        	l32r	a0, 4005d0bc <crc32_le+0xd0>
4008723f:	a440c0        	extui	a4, a12, 0, 11
40087242:	98e520        	lsi	f2, a5, 0x260
40087245:	365701        	l32r	a0, 40054ba4 <nvds_init_memory+0x84c>
40087248:	be4602        	s8i	a0, a6, 190
4008724b:	ff          	.byte 0xff
4008724c:	00a032        	movi	a3, 0
4008724f:	034d      	mov.n	a4, a3
40087251:	000146        	j	4008725a <prvReceiveGeneric+0x13a>
40087254:	00a032        	movi	a3, 0
40087257:	204330        	or	a4, a3, a3
4008725a:	0b1366        	bnei	a3, 1, 40087269 <prvReceiveGeneric+0x149>
4008725d:	00a0d2        	movi	a13, 0
40087260:	0dcd      	mov.n	a12, a13
40087262:	0dbd      	mov.n	a11, a13
40087264:	f2a8      	l32i.n	a10, a2, 60
40087266:	0057e5        	call8	400877e4 <xQueueGenericSend>
40087269:	042d      	mov.n	a2, a4
4008726b:	f01d      	retw.n
4008726d:	000000        	ill

40087270 <xRingbufferSend>:
40087270:	006136        	entry	a1, 48
40087273:	017256        	bnez	a2, 4008728e <xRingbufferSend+0x1e>
40087276:	e58ad1        	l32r	a13, 400808a0 <_init_end+0x4a0>
40087279:	eca2c2        	movi	a12, 0x2ec
4008727c:	e586b1        	l32r	a11, 40080894 <_init_end+0x494>
4008727f:	e586a1        	l32r	a10, 40080898 <_init_end+0x498>
40087282:	e48581        	l32r	a8, 40080498 <_init_end+0x98>
40087285:	0008e0        	callx8	a8
40087288:	201110        	or	a1, a1, a1
4008728b:	040e25        	call8	4008b36c <abort>
4008728e:	160c      	movi.n	a6, 1
40087290:	070c      	movi.n	a7, 0
40087292:	078d      	mov.n	a8, a7
40087294:	838630        	moveqz	a8, a6, a3
40087297:	836740        	moveqz	a6, a7, a4
4008729a:	140687        	bnone	a6, a8, 400872b2 <xRingbufferSend+0x42>
4008729d:	e580d1        	l32r	a13, 400808a0 <_init_end+0x4a0>
400872a0:	eda2c2        	movi	a12, 0x2ed
400872a3:	e57cb1        	l32r	a11, 40080894 <_init_end+0x494>
400872a6:	e57ca1        	l32r	a10, 40080898 <_init_end+0x498>
400872a9:	e47b81        	l32r	a8, 40080498 <_init_end+0x98>
400872ac:	0008e0        	callx8	a8
400872af:	040be5        	call8	4008b36c <abort>
400872b2:	022262        	l32i	a6, a2, 8
400872b5:	02b647        	bgeu	a6, a4, 400872bb <xRingbufferSend+0x4b>
400872b8:	002946        	j	40087361 <xRingbufferSend+0xf1>
400872bb:	012262        	l32i	a6, a2, 4
400872be:	026617        	bbci	a6, 1, 400872c4 <xRingbufferSend+0x54>
400872c1:	0a0416        	beqz	a4, 40087365 <xRingbufferSend+0xf5>
400872c4:	013765        	call8	4008863c <xTaskGetTickCount>
400872c7:	80aa50        	add	a10, a10, a5
400872ca:	31a9      	s32i.n	a10, a1, 12
400872cc:	057d      	mov.n	a7, a5
400872ce:	001706        	j	4008732e <xRingbufferSend+0xbe>
400872d1:	a0d200        	addx4	a13, a2, a0
400872d4:	07cd00        	lsi	f0, a13, 28
400872d7:	0dbd      	mov.n	a11, a13
400872d9:	e2a8      	l32i.n	a10, a2, 56
400872db:	0088a5        	call8	40087b64 <xQueueGenericReceive>
400872de:	581a66        	bnei	a10, 1, 4008733a <xRingbufferSend+0xca>
400872e1:	40c262        	addi	a6, a2, 64
400872e4:	06ad      	mov.n	a10, a6
400872e6:	017aa5        	call8	40088a90 <vTaskEnterCritical>
400872e9:	3288      	l32i.n	a8, a2, 12
400872eb:	20b440        	or	a11, a4, a4
400872ee:	02ad      	mov.n	a10, a2
400872f0:	0008e0        	callx8	a8
400872f3:	261a66        	bnei	a10, 1, 4008731d <xRingbufferSend+0xad>
400872f6:	4258      	l32i.n	a5, a2, 16
400872f8:	04cd      	mov.n	a12, a4
400872fa:	03bd      	mov.n	a11, a3
400872fc:	02ad      	mov.n	a10, a2
400872fe:	0005e0        	callx8	a5
40087301:	02ad      	mov.n	a10, a2
40087303:	ffde25        	call8	400870e4 <prvGetFreeSize>
40087306:	4acc      	bnez.n	a10, 4008730e <xRingbufferSend+0x9e>
40087308:	040c      	movi.n	a4, 0
4008730a:	0000c6        	j	40087311 <xRingbufferSend+0xa1>
4008730d:	a04200        	addx4	a4, a2, a0
40087310:	a66001        	l32r	a0, 40070c90 <__udivmoddi4+0xc09c>
40087313:	8ba520        	moveqz.s	f10, f5, a2
40087316:	a03201        	l32r	a0, 4006f3e0 <__udivmoddi4+0xa7ec>
40087319:	080601        	l32r	a0, 40049334 <r_lld_scan_stop+0x1a4>
4008731c:	052600        	extui	a2, a0, 22, 1
4008731f:	31a507        	bge	a5, a0, 40087354 <xRingbufferSend+0xe4>
40087322:	318801        	l32r	a0, 40053944 <lm_cmd_cmp_send+0x210c>
40087325:	c078a0        	sub	a7, a8, a10
40087328:	20a660        	or	a10, a6, a6
4008732b:	018a65        	call8	40088bd0 <vTaskExitCritical>
4008732e:	a0b577        	bgeu	a5, a7, 400872d2 <xRingbufferSend+0x62>
40087331:	00a042        	movi	a4, 0
40087334:	203440        	or	a3, a4, a4
40087337:	0000c6        	j	4008733e <xRingbufferSend+0xce>
4008733a:	040c      	movi.n	a4, 0
4008733c:	043d      	mov.n	a3, a4
4008733e:	0a1366        	bnei	a3, 1, 4008734c <xRingbufferSend+0xdc>
40087341:	0d0c      	movi.n	a13, 0
40087343:	0dcd      	mov.n	a12, a13
40087345:	0dbd      	mov.n	a11, a13
40087347:	f2a8      	l32i.n	a10, a2, 60
40087349:	0049a5        	call8	400877e4 <xQueueGenericSend>
4008734c:	191466        	bnei	a4, 1, 40087369 <xRingbufferSend+0xf9>
4008734f:	00a0d2        	movi	a13, 0
40087352:	20cdd0        	or	a12, a13, a13
40087355:	20bdd0        	or	a11, a13, a13
40087358:	e2a8      	l32i.n	a10, a2, 56
4008735a:	0048a5        	call8	400877e4 <xQueueGenericSend>
4008735d:	032d      	mov.n	a2, a3
4008735f:	f01d      	retw.n
40087361:	020c      	movi.n	a2, 0
40087363:	f01d      	retw.n
40087365:	120c      	movi.n	a2, 1
40087367:	f01d      	retw.n
40087369:	032d      	mov.n	a2, a3
4008736b:	f01d      	retw.n
4008736d:	000000        	ill

40087370 <xRingbufferReceive>:
40087370:	008136        	entry	a1, 64
40087373:	017256        	bnez	a2, 4008738e <xRingbufferReceive+0x1e>
40087376:	e54bd1        	l32r	a13, 400808a4 <_init_end+0x4a4>
40087379:	4da3c2        	movi	a12, 0x34d
4008737c:	e546b1        	l32r	a11, 40080894 <_init_end+0x494>
4008737f:	e546a1        	l32r	a10, 40080898 <_init_end+0x498>
40087382:	e44581        	l32r	a8, 40080498 <_init_end+0x98>
40087385:	0008e0        	callx8	a8
40087388:	201110        	or	a1, a1, a1
4008738b:	03fe25        	call8	4008b36c <abort>
4008738e:	006142        	s32i	a4, a1, 0
40087391:	00a0f2        	movi	a15, 0
40087394:	20eff0        	or	a14, a15, a15
40087397:	1cc1d2        	addi	a13, a1, 28
4008739a:	0fcd      	mov.n	a12, a15
4008739c:	18c1b2        	addi	a11, a1, 24
4008739f:	02ad      	mov.n	a10, a2
400873a1:	ffd7e5        	call8	40087120 <prvReceiveGeneric>
400873a4:	111a66        	bnei	a10, 1, 400873b9 <xRingbufferReceive+0x49>
400873a7:	238c      	beqz.n	a3, 400873ad <xRingbufferReceive+0x3d>
400873a9:	7128      	l32i.n	a2, a1, 28
400873ab:	0329      	s32i.n	a2, a3, 0
400873ad:	f03d      	nop.n
400873af:	f03d      	nop.n
400873b1:	f03d      	nop.n
400873b3:	f03d      	nop.n
400873b5:	6128      	l32i.n	a2, a1, 24
400873b7:	f01d      	retw.n
400873b9:	020c      	movi.n	a2, 0
400873bb:	f01d      	retw.n
400873bd:	000000        	ill

400873c0 <vRingbufferReturnItem>:
400873c0:	004136        	entry	a1, 32
400873c3:	017256        	bnez	a2, 400873de <vRingbufferReturnItem+0x1e>
400873c6:	e538d1        	l32r	a13, 400808a8 <_init_end+0x4a8>
400873c9:	e5a3c2        	movi	a12, 0x3e5
400873cc:	e532b1        	l32r	a11, 40080894 <_init_end+0x494>
400873cf:	e532a1        	l32r	a10, 40080898 <_init_end+0x498>
400873d2:	e43181        	l32r	a8, 40080498 <_init_end+0x98>
400873d5:	0008e0        	callx8	a8
400873d8:	201110        	or	a1, a1, a1
400873db:	03f925        	call8	4008b36c <abort>
400873de:	33dc      	bnez.n	a3, 400873f5 <vRingbufferReturnItem+0x35>
400873e0:	e532d1        	l32r	a13, 400808a8 <_init_end+0x4a8>
400873e3:	e6a3c2        	movi	a12, 0x3e6
400873e6:	e52bb1        	l32r	a11, 40080894 <_init_end+0x494>
400873e9:	e52ba1        	l32r	a10, 40080898 <_init_end+0x498>
400873ec:	e42b81        	l32r	a8, 40080498 <_init_end+0x98>
400873ef:	0008e0        	callx8	a8
400873f2:	03f7a5        	call8	4008b36c <abort>
400873f5:	40c242        	addi	a4, a2, 64
400873f8:	04ad      	mov.n	a10, a4
400873fa:	016965        	call8	40088a90 <vTaskEnterCritical>
400873fd:	062282        	l32i	a8, a2, 24
40087400:	03bd      	mov.n	a11, a3
40087402:	20a220        	or	a10, a2, a2
40087405:	0008e0        	callx8	a8
40087408:	04ad      	mov.n	a10, a4
4008740a:	017c65        	call8	40088bd0 <vTaskExitCritical>
4008740d:	0d0c      	movi.n	a13, 0
4008740f:	0dcd      	mov.n	a12, a13
40087411:	0dbd      	mov.n	a11, a13
40087413:	e2a8      	l32i.n	a10, a2, 56
40087415:	003ce5        	call8	400877e4 <xQueueGenericSend>
40087418:	f01d      	retw.n
	...

4008741c <prvCheckItemAvail>:
4008741c:	004136        	entry	a1, 32
4008741f:	1288      	l32i.n	a8, a2, 4
40087421:	076817        	bbci	a8, 1, 4008742c <prvCheckItemAvail+0x10>
40087424:	92a8      	l32i.n	a10, a2, 36
40087426:	0a2292        	l32i	a9, a2, 40
40087429:	139a97        	bne	a10, a9, 40087440 <prvCheckItemAvail+0x24>
4008742c:	d298      	l32i.n	a9, a2, 52
4008742e:	1219a6        	blti	a9, 1, 40087444 <prvCheckItemAvail+0x28>
40087431:	9298      	l32i.n	a9, a2, 36
40087433:	8228      	l32i.n	a2, a2, 32
40087435:	0f9927        	bne	a9, a2, 40087448 <prvCheckItemAvail+0x2c>
40087438:	10e827        	bbsi	a8, 2, 4008744c <prvCheckItemAvail+0x30>
4008743b:	020c      	movi.n	a2, 0
4008743d:	f01d      	retw.n
4008743f:	020c00        	andb	b0, b12, b0
40087442:	f01d      	retw.n
40087444:	020c      	movi.n	a2, 0
40087446:	f01d      	retw.n
40087448:	120c      	movi.n	a2, 1
4008744a:	f01d      	retw.n
4008744c:	120c      	movi.n	a2, 1
4008744e:	f01d      	retw.n

40087450 <xt_unhandled_interrupt>:
40087450:	004136        	entry	a1, 32
40087453:	02bd      	mov.n	a11, a2
40087455:	03ebc0        	rsr.prid	a12
40087458:	04cdc0        	extui	a12, a12, 13, 1
4008745b:	e514a1        	l32r	a10, 400808ac <_init_end+0x4ac>
4008745e:	e40e81        	l32r	a8, 40080498 <_init_end+0x98>
40087461:	0008e0        	callx8	a8
40087464:	f01d      	retw.n
	...

40087468 <xt_set_interrupt_handler>:
40087468:	004136        	entry	a1, 32
4008746b:	f81c      	movi.n	a8, 31
4008746d:	403827        	bltu	a8, a2, 400874b1 <xt_set_interrupt_handler+0x49>
40087470:	e51081        	l32r	a8, 400808b0 <_init_end+0x4b0>
40087473:	882a      	add.n	a8, a8, a2
40087475:	000882        	l8ui	a8, a8, 0
40087478:	3a48f6        	bgeui	a8, 4, 400874b6 <xt_set_interrupt_handler+0x4e>
4008747b:	1122f0        	slli	a2, a2, 1
4008747e:	03eb90        	rsr.prid	a9
40087481:	049d90        	extui	a9, a9, 13, 1
40087484:	929a      	add.n	a9, a2, a9
40087486:	e49481        	l32r	a8, 400806d8 <_init_end+0x2d8>
40087489:	b08980        	addx8	a8, a9, a8
4008748c:	0828      	l32i.n	a2, a8, 0
4008748e:	638c      	beqz.n	a3, 40087498 <xt_set_interrupt_handler+0x30>
40087490:	0839      	s32i.n	a3, a8, 0
40087492:	1849      	s32i.n	a4, a8, 4
40087494:	0001c6        	j	4008749f <xt_set_interrupt_handler+0x37>
40087497:	073100        	lsi	f0, a1, 28
4008749a:	0839e5        	call8	4008f838 <_iram_end+0x1ce4>
4008749d:	1899      	s32i.n	a9, a8, 4
4008749f:	f03d      	nop.n
400874a1:	f03d      	nop.n
400874a3:	f03d      	nop.n
400874a5:	f03d      	nop.n
400874a7:	e50331        	l32r	a3, 400808b4 <_init_end+0x4b4>
400874aa:	0a9237        	bne	a2, a3, 400874b8 <xt_set_interrupt_handler+0x50>
400874ad:	020c      	movi.n	a2, 0
400874af:	f01d      	retw.n
400874b1:	020c      	movi.n	a2, 0
400874b3:	f01d      	retw.n
400874b5:	020c00        	andb	b0, b12, b0
400874b8:	f01d      	retw.n
	...

400874bc <prvIsQueueFull>:
400874bc:	004136        	entry	a1, 32
400874bf:	48c232        	addi	a3, a2, 72
400874c2:	20a330        	or	a10, a3, a3
400874c5:	015ca5        	call8	40088a90 <vTaskEnterCritical>
400874c8:	0020c0        	memw
400874cb:	0e2282        	l32i	a8, a2, 56
400874ce:	0f2222        	l32i	a2, a2, 60
400874d1:	059827        	bne	a8, a2, 400874da <prvIsQueueFull+0x1e>
400874d4:	120c      	movi.n	a2, 1
400874d6:	0000c6        	j	400874dd <prvIsQueueFull+0x21>
400874d9:	a02200        	addx4	a2, a2, a0
400874dc:	a33000        	movltz	a3, a0, a0
400874df:	6ee520        	f64rnd	a14, a5, a2, 2
400874e2:	009001        	l32r	a0, 40047724 <lld_evt_get_next_free_slot+0xdf8>
400874e5:	000000        	ill

400874e8 <prvCopyDataToQueue>:
400874e8:	004136        	entry	a1, 32
400874eb:	1022c2        	l32i	a12, a2, 64
400874ee:	010c56        	bnez	a12, 40087502 <prvCopyDataToQueue+0x1a>
400874f1:	002232        	l32i	a3, a2, 0
400874f4:	084356        	bnez	a3, 4008757c <prvCopyDataToQueue+0x94>
400874f7:	0122a2        	l32i	a10, a2, 4
400874fa:	025465        	call8	40089a40 <xTaskPriorityDisinherit>
400874fd:	1239      	s32i.n	a3, a2, 4
400874ff:	0022c6        	j	4008758e <prvCopyDataToQueue+0xa6>
40087502:	84ec      	bnez.n	a4, 4008752e <prvCopyDataToQueue+0x46>
40087504:	03bd      	mov.n	a11, a3
40087506:	22a8      	l32i.n	a10, a2, 8
40087508:	e48f81        	l32r	a8, 40080744 <_init_end+0x344>
4008750b:	0008e0        	callx8	a8
4008750e:	2248      	l32i.n	a4, a2, 8
40087510:	102232        	l32i	a3, a2, 64
40087513:	343a      	add.n	a3, a4, a3
40087515:	2239      	s32i.n	a3, a2, 8
40087517:	f03d      	nop.n
40087519:	f03d      	nop.n
4008751b:	f03d      	nop.n
4008751d:	f03d      	nop.n
4008751f:	1248      	l32i.n	a4, a2, 4
40087521:	5c3347        	bltu	a3, a4, 40087581 <prvCopyDataToQueue+0x99>
40087524:	0238      	l32i.n	a3, a2, 0
40087526:	2239      	s32i.n	a3, a2, 8
40087528:	0a0c      	movi.n	a10, 0
4008752a:	001806        	j	4008758e <prvCopyDataToQueue+0xa6>
4008752d:	03bd00        	lsi	f0, a13, 12
40087530:	0322a2        	l32i	a10, a2, 12
40087533:	e48481        	l32r	a8, 40080744 <_init_end+0x344>
40087536:	0008e0        	callx8	a8
40087539:	102232        	l32i	a3, a2, 64
4008753c:	603030        	neg	a3, a3
4008753f:	3288      	l32i.n	a8, a2, 12
40087541:	883a      	add.n	a8, a8, a3
40087543:	3289      	s32i.n	a8, a2, 12
40087545:	f03d      	nop.n
40087547:	f03d      	nop.n
40087549:	f03d      	nop.n
4008754b:	f03d      	nop.n
4008754d:	0298      	l32i.n	a9, a2, 0
4008754f:	05b897        	bgeu	a8, a9, 40087558 <prvCopyDataToQueue+0x70>
40087552:	1288      	l32i.n	a8, a2, 4
40087554:	383a      	add.n	a3, a8, a3
40087556:	3239      	s32i.n	a3, a2, 12
40087558:	2a2466        	bnei	a4, 2, 40087586 <prvCopyDataToQueue+0x9e>
4008755b:	f03d      	nop.n
4008755d:	f03d      	nop.n
4008755f:	f03d      	nop.n
40087561:	f03d      	nop.n
40087563:	0020c0        	memw
40087566:	e238      	l32i.n	a3, a2, 56
40087568:	03ac      	beqz.n	a3, 4008758c <prvCopyDataToQueue+0xa4>
4008756a:	0020c0        	memw
4008756d:	e238      	l32i.n	a3, a2, 56
4008756f:	330b      	addi.n	a3, a3, -1
40087571:	0020c0        	memw
40087574:	e239      	s32i.n	a3, a2, 56
40087576:	0a0c      	movi.n	a10, 0
40087578:	000486        	j	4008758e <prvCopyDataToQueue+0xa6>
4008757b:	0a0c00        	add.s	f0, f12, f0
4008757e:	000306        	j	4008758e <prvCopyDataToQueue+0xa6>
40087581:	0a0c      	movi.n	a10, 0
40087583:	0001c6        	j	4008758e <prvCopyDataToQueue+0xa6>
40087586:	0a0c      	movi.n	a10, 0
40087588:	000086        	j	4008758e <prvCopyDataToQueue+0xa6>
4008758b:	0a0c00        	add.s	f0, f12, f0
4008758e:	0020c0        	memw
40087591:	e288      	l32i.n	a8, a2, 56
40087593:	881b      	addi.n	a8, a8, 1
40087595:	0020c0        	memw
40087598:	e289      	s32i.n	a8, a2, 56
4008759a:	0a2d      	mov.n	a2, a10
4008759c:	f01d      	retw.n
	...

400875a0 <prvNotifyQueueSetContainer>:
400875a0:	006136        	entry	a1, 48
400875a3:	3129      	s32i.n	a2, a1, 12
400875a5:	f03d      	nop.n
400875a7:	f03d      	nop.n
400875a9:	f03d      	nop.n
400875ab:	f03d      	nop.n
400875ad:	112242        	l32i	a4, a2, 68
400875b0:	34dc      	bnez.n	a4, 400875c7 <prvNotifyQueueSetContainer+0x27>
400875b2:	e4c1d1        	l32r	a13, 400808b8 <_init_end+0x4b8>
400875b5:	e4c1c1        	l32r	a12, 400808bc <_init_end+0x4bc>
400875b8:	e4c2b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400875bb:	e4c2a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400875be:	e3b681        	l32r	a8, 40080498 <_init_end+0x98>
400875c1:	0008e0        	callx8	a8
400875c4:	03da65        	call8	4008b36c <abort>
400875c7:	48c452        	addi	a5, a4, 72
400875ca:	05ad      	mov.n	a10, a5
400875cc:	014c25        	call8	40088a90 <vTaskEnterCritical>
400875cf:	0020c0        	memw
400875d2:	e428      	l32i.n	a2, a4, 56
400875d4:	f488      	l32i.n	a8, a4, 60
400875d6:	143287        	bltu	a2, a8, 400875ee <prvNotifyQueueSetContainer+0x4e>
400875d9:	e4b7d1        	l32r	a13, 400808b8 <_init_end+0x4b8>
400875dc:	e4bbc1        	l32r	a12, 400808c8 <_init_end+0x4c8>
400875df:	e4b8b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400875e2:	e4b8a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400875e5:	e3ac81        	l32r	a8, 40080498 <_init_end+0x98>
400875e8:	0008e0        	callx8	a8
400875eb:	03d825        	call8	4008b36c <abort>
400875ee:	0020c0        	memw
400875f1:	e428      	l32i.n	a2, a4, 56
400875f3:	1ab287        	bgeu	a2, a8, 40087611 <prvNotifyQueueSetContainer+0x71>
400875f6:	03cd      	mov.n	a12, a3
400875f8:	b1cb      	addi.n	a11, a1, 12
400875fa:	20a440        	or	a10, a4, a4
400875fd:	ffeea5        	call8	400874e8 <prvCopyDataToQueue>
40087600:	0a2d      	mov.n	a2, a10
40087602:	9438      	l32i.n	a3, a4, 36
40087604:	039c      	beqz.n	a3, 40087618 <prvNotifyQueueSetContainer+0x78>
40087606:	24c4a2        	addi	a10, a4, 36
40087609:	0215a5        	call8	40089764 <xTaskRemoveFromEventList>
4008760c:	6acc      	bnez.n	a10, 40087616 <prvNotifyQueueSetContainer+0x76>
4008760e:	000186        	j	40087618 <prvNotifyQueueSetContainer+0x78>
40087611:	020c      	movi.n	a2, 0
40087613:	000046        	j	40087618 <prvNotifyQueueSetContainer+0x78>
40087616:	120c      	movi.n	a2, 1
40087618:	05ad      	mov.n	a10, a5
4008761a:	015b65        	call8	40088bd0 <vTaskExitCritical>
4008761d:	f01d      	retw.n
	...

40087620 <prvCopyDataFromQueue>:
40087620:	004136        	entry	a1, 32
40087623:	1022c2        	l32i	a12, a2, 64
40087626:	8cac      	beqz.n	a12, 40087652 <prvCopyDataFromQueue+0x32>
40087628:	3288      	l32i.n	a8, a2, 12
4008762a:	88ca      	add.n	a8, a8, a12
4008762c:	3289      	s32i.n	a8, a2, 12
4008762e:	f03d      	nop.n
40087630:	f03d      	nop.n
40087632:	f03d      	nop.n
40087634:	f03d      	nop.n
40087636:	1298      	l32i.n	a9, a2, 4
40087638:	043897        	bltu	a8, a9, 40087640 <prvCopyDataFromQueue+0x20>
4008763b:	002282        	l32i	a8, a2, 0
4008763e:	3289      	s32i.n	a8, a2, 12
40087640:	f03d      	nop.n
40087642:	f03d      	nop.n
40087644:	f03d      	nop.n
40087646:	f03d      	nop.n
40087648:	32b8      	l32i.n	a11, a2, 12
4008764a:	03ad      	mov.n	a10, a3
4008764c:	e43e81        	l32r	a8, 40080744 <_init_end+0x344>
4008764f:	0008e0        	callx8	a8
40087652:	f01d      	retw.n

40087654 <xQueueGenericReset>:
40087654:	004136        	entry	a1, 32
40087657:	014256        	bnez	a2, 4008766f <xQueueGenericReset+0x1b>
4008765a:	e49cd1        	l32r	a13, 400808cc <_init_end+0x4cc>
4008765d:	0aa1c2        	movi	a12, 0x10a
40087660:	e498b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087663:	e498a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087666:	e38c81        	l32r	a8, 40080498 <_init_end+0x98>
40087669:	0008e0        	callx8	a8
4008766c:	03cfe5        	call8	4008b36c <abort>
4008766f:	051366        	bnei	a3, 1, 40087678 <xQueueGenericReset+0x24>
40087672:	48c2a2        	addi	a10, a2, 72
40087675:	008ee5        	call8	40087f64 <vPortCPUInitializeMutex>
40087678:	48c242        	addi	a4, a2, 72
4008767b:	04ad      	mov.n	a10, a4
4008767d:	014125        	call8	40088a90 <vTaskEnterCritical>
40087680:	02a8      	l32i.n	a10, a2, 0
40087682:	f288      	l32i.n	a8, a2, 60
40087684:	1022b2        	l32i	a11, a2, 64
40087687:	8298b0        	mull	a9, a8, a11
4008768a:	9a9a      	add.n	a9, a10, a9
4008768c:	1299      	s32i.n	a9, a2, 4
4008768e:	090c      	movi.n	a9, 0
40087690:	0020c0        	memw
40087693:	e299      	s32i.n	a9, a2, 56
40087695:	22a9      	s32i.n	a10, a2, 8
40087697:	980b      	addi.n	a9, a8, -1
40087699:	828b90        	mull	a8, a11, a9
4008769c:	8a8a      	add.n	a8, a10, a8
4008769e:	3289      	s32i.n	a8, a2, 12
400876a0:	03ec      	bnez.n	a3, 400876c4 <xQueueGenericReset+0x70>
400876a2:	f03d      	nop.n
400876a4:	f03d      	nop.n
400876a6:	f03d      	nop.n
400876a8:	f03d      	nop.n
400876aa:	4238      	l32i.n	a3, a2, 16
400876ac:	63ac      	beqz.n	a3, 400876d6 <xQueueGenericReset+0x82>
400876ae:	10c2a2        	addi	a10, a2, 16
400876b1:	020b25        	call8	40089764 <xTaskRemoveFromEventList>
400876b4:	1e1a66        	bnei	a10, 1, 400876d6 <xQueueGenericReset+0x82>
400876b7:	03eba0        	rsr.prid	a10
400876ba:	04ada0        	extui	a10, a10, 13, 1
400876bd:	f9b0a5        	call8	400811c8 <esp_crosscore_int_send_yield>
400876c0:	000486        	j	400876d6 <xQueueGenericReset+0x82>
400876c3:	c2a200        	quou	a10, a2, a0
400876c6:	111010        	slli	a1, a0, 15
400876c9:	b7e520        	lsi	f2, a5, 0x2dc
400876cc:	c2a202        	movi	a0, 0x2c2
400876cf:	111024        	lsi	f2, a0, 68
400876d2:	b76520        	lsi	f2, a5, 0x2dc
400876d5:	a44002        	s8i	a0, a0, 164
400876d8:	4f6520        	f64cmph	a6, a5, a2, 4
400876db:	a02201        	l32r	a0, 4006f764 <__udivmoddi4+0xab70>
400876de:	009001        	l32r	a0, 40047920 <lld_evt_get_next_free_slot+0xff4>
400876e1:	000000        	ill

400876e4 <prvInitialiseNewQueue>:
400876e4:	004136        	entry	a1, 32
400876e7:	33cc      	bnez.n	a3, 400876ee <prvInitialiseNewQueue+0xa>
400876e9:	0669      	s32i.n	a6, a6, 0
400876eb:	000046        	j	400876f0 <prvInitialiseNewQueue+0xc>
400876ee:	0649      	s32i.n	a4, a6, 0
400876f0:	f629      	s32i.n	a2, a6, 60
400876f2:	106632        	s32i	a3, a6, 64
400876f5:	1b0c      	movi.n	a11, 1
400876f7:	06ad      	mov.n	a10, a6
400876f9:	fff5a5        	call8	40087654 <xQueueGenericReset>
400876fc:	030c      	movi.n	a3, 0
400876fe:	116632        	s32i	a3, a6, 68
40087701:	f01d      	retw.n
	...

40087704 <xQueueGenericCreate>:
40087704:	004136        	entry	a1, 32
40087707:	744040        	extui	a4, a4, 0, 8
4008770a:	32dc      	bnez.n	a2, 40087721 <xQueueGenericCreate+0x1d>
4008770c:	e471d1        	l32r	a13, 400808d0 <_init_end+0x4d0>
4008770f:	7aa1c2        	movi	a12, 0x17a
40087712:	e46bb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087715:	e46ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087718:	e36081        	l32r	a8, 40080498 <_init_end+0x98>
4008771b:	0008e0        	callx8	a8
4008771e:	03c4e5        	call8	4008b36c <abort>
40087721:	438c      	beqz.n	a3, 40087729 <xQueueGenericCreate+0x25>
40087723:	82a230        	mull	a10, a2, a3
40087726:	000086        	j	4008772c <xQueueGenericCreate+0x28>
40087729:	00a0a2        	movi	a10, 0
4008772c:	50caa2        	addi	a10, a10, 80
4008772f:	e3a081        	l32r	a8, 400805b0 <_init_end+0x1b0>
40087732:	0008e0        	callx8	a8
40087735:	205aa0        	or	a5, a10, a10
40087738:	00da16        	beqz	a10, 40087749 <xQueueGenericCreate+0x45>
4008773b:	0aed      	mov.n	a14, a10
4008773d:	04dd      	mov.n	a13, a4
4008773f:	50cac2        	addi	a12, a10, 80
40087742:	03bd      	mov.n	a11, a3
40087744:	02ad      	mov.n	a10, a2
40087746:	fff9e5        	call8	400876e4 <prvInitialiseNewQueue>
40087749:	052d      	mov.n	a2, a5
4008774b:	f01d      	retw.n
4008774d:	000000        	ill

40087750 <xQueueGetMutexHolder>:
40087750:	004136        	entry	a1, 32
40087753:	48c232        	addi	a3, a2, 72
40087756:	20a330        	or	a10, a3, a3
40087759:	013365        	call8	40088a90 <vTaskEnterCritical>
4008775c:	002282        	l32i	a8, a2, 0
4008775f:	004856        	bnez	a8, 40087767 <xQueueGetMutexHolder+0x17>
40087762:	1228      	l32i.n	a2, a2, 4
40087764:	000086        	j	4008776a <xQueueGetMutexHolder+0x1a>
40087767:	00a022        	movi	a2, 0
4008776a:	20a330        	or	a10, a3, a3
4008776d:	014625        	call8	40088bd0 <vTaskExitCritical>
40087770:	000090        	retw
	...

40087774 <xQueueCreateCountingSemaphore>:
40087774:	004136        	entry	a1, 32
40087777:	014256        	bnez	a2, 4008778f <xQueueCreateCountingSemaphore+0x1b>
4008777a:	e456d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
4008777d:	b2a2c2        	movi	a12, 0x2b2
40087780:	e450b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087783:	e450a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087786:	e34481        	l32r	a8, 40080498 <_init_end+0x98>
40087789:	0008e0        	callx8	a8
4008778c:	03bde5        	call8	4008b36c <abort>
4008778f:	17b237        	bgeu	a2, a3, 400877aa <xQueueCreateCountingSemaphore+0x36>
40087792:	e450d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
40087795:	b3a2c2        	movi	a12, 0x2b3
40087798:	e44ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
4008779b:	e44aa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008779e:	e33e81        	l32r	a8, 40080498 <_init_end+0x98>
400877a1:	0008e0        	callx8	a8
400877a4:	201110        	or	a1, a1, a1
400877a7:	03bc65        	call8	4008b36c <abort>
400877aa:	2c0c      	movi.n	a12, 2
400877ac:	00a0b2        	movi	a11, 0
400877af:	20a220        	or	a10, a2, a2
400877b2:	fff525        	call8	40087704 <xQueueGenericCreate>
400877b5:	3a8c      	beqz.n	a10, 400877bc <xQueueCreateCountingSemaphore+0x48>
400877b7:	0020c0        	memw
400877ba:	ea39      	s32i.n	a3, a10, 56
400877bc:	eadc      	bnez.n	a10, 400877de <xQueueCreateCountingSemaphore+0x6a>
400877be:	f03d      	nop.n
400877c0:	f03d      	nop.n
400877c2:	f03d      	nop.n
400877c4:	f03d      	nop.n
400877c6:	e443d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
400877c9:	c2a2c2        	movi	a12, 0x2c2
400877cc:	e43db1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400877cf:	e43da1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400877d2:	e33181        	l32r	a8, 40080498 <_init_end+0x98>
400877d5:	0008e0        	callx8	a8
400877d8:	201110        	or	a1, a1, a1
400877db:	03b925        	call8	4008b36c <abort>
400877de:	0a2d      	mov.n	a2, a10
400877e0:	f01d      	retw.n
	...

400877e4 <xQueueGenericSend>:
400877e4:	008136        	entry	a1, 64
400877e7:	036142        	s32i	a4, a1, 12
400877ea:	01c256        	bnez	a2, 4008780a <xQueueGenericSend+0x26>
400877ed:	f03d      	nop.n
400877ef:	f03d      	nop.n
400877f1:	f03d      	nop.n
400877f3:	f03d      	nop.n
400877f5:	e438d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
400877f8:	cfa2c2        	movi	a12, 0x2cf
400877fb:	e431b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400877fe:	e431a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087801:	e32581        	l32r	a8, 40080498 <_init_end+0x98>
40087804:	0008e0        	callx8	a8
40087807:	03b665        	call8	4008b36c <abort>
4008780a:	019356        	bnez	a3, 40087827 <xQueueGenericSend+0x43>
4008780d:	102242        	l32i	a4, a2, 64
40087810:	349c      	beqz.n	a4, 40087827 <xQueueGenericSend+0x43>
40087812:	e431d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087815:	d0a2c2        	movi	a12, 0x2d0
40087818:	e42ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
4008781b:	e42aa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008781e:	e31e81        	l32r	a8, 40080498 <_init_end+0x98>
40087821:	0008e0        	callx8	a8
40087824:	03b465        	call8	4008b36c <abort>
40087827:	192566        	bnei	a5, 2, 40087844 <xQueueGenericSend+0x60>
4008782a:	f248      	l32i.n	a4, a2, 60
4008782c:	141426        	beqi	a4, 1, 40087844 <xQueueGenericSend+0x60>
4008782f:	e42ad1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087832:	d1a2c2        	movi	a12, 0x2d1
40087835:	e422b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087838:	e423a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008783b:	e31781        	l32r	a8, 40080498 <_init_end+0x98>
4008783e:	0008e0        	callx8	a8
40087841:	03b2a5        	call8	4008b36c <abort>
40087844:	012125        	call8	40088a58 <xTaskGetSchedulerState>
40087847:	7adc      	bnez.n	a10, 40087862 <xQueueGenericSend+0x7e>
40087849:	3148      	l32i.n	a4, a1, 12
4008784b:	949c      	beqz.n	a4, 40087868 <xQueueGenericSend+0x84>
4008784d:	e422d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087850:	d4a2c2        	movi	a12, 0x2d4
40087853:	e41bb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087856:	e41ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087859:	e30f81        	l32r	a8, 40080498 <_init_end+0x98>
4008785c:	0008e0        	callx8	a8
4008785f:	03b0e5        	call8	4008b36c <abort>
40087862:	060c      	movi.n	a6, 0
40087864:	0000c6        	j	4008786b <xQueueGenericSend+0x87>
40087867:	a06200        	addx4	a6, a2, a0
4008786a:	c24200        	quou	a4, a2, a0
4008786d:	4048      	l32i.n	a4, a0, 16
4008786f:	e520a4        	lsi	f10, a0, 0x394
40087872:	c00121        	l32r	a2, 40077878 <__udivmoddi4+0x12c84>
40087875:	920020        	lsi	f2, a0, 0x248
40087878:	880e22        	l8ui	a2, a14, 136
4008787b:	3987f2        	lsi	f15, a7, 228
4008787e:	256602        	s32i	a0, a6, 148
40087881:	cd5b      	addi.n	a12, a13, 5
40087883:	03bd05        	call0	4008b454 <panicHandler+0x98>
40087886:	02ad      	mov.n	a10, a2
40087888:	ffc5e5        	call8	400874e8 <prvCopyDataToQueue>
4008788b:	112232        	l32i	a3, a2, 68
4008788e:	639c      	beqz.n	a3, 400878a8 <xQueueGenericSend+0xc4>
40087890:	05bd      	mov.n	a11, a5
40087892:	20a220        	or	a10, a2, a2
40087895:	ffd0a5        	call8	400875a0 <prvNotifyQueueSetContainer>
40087898:	361a66        	bnei	a10, 1, 400878d2 <xQueueGenericSend+0xee>
4008789b:	03eba0        	rsr.prid	a10
4008789e:	04ada0        	extui	a10, a10, 13, 1
400878a1:	f99265        	call8	400811c8 <esp_crosscore_int_send_yield>
400878a4:	000a86        	j	400878d2 <xQueueGenericSend+0xee>
400878a7:	223200        	orb	b3, b2, b0
400878aa:	1609      	s32i.n	a0, a6, 4
400878ac:	a20153        	lsi	f5, a1, 0x288
400878af:	2524c2        	l32i	a12, a4, 148
400878b2:	01eb      	addi.n	a0, a1, 14
400878b4:	1a1a66        	bnei	a10, 1, 400878d2 <xQueueGenericSend+0xee>
400878b7:	03eba0        	rsr.prid	a10
400878ba:	04ada0        	extui	a10, a10, 13, 1
400878bd:	f990a5        	call8	400811c8 <esp_crosscore_int_send_yield>
400878c0:	000386        	j	400878d2 <xQueueGenericSend+0xee>
400878c3:	aa8c00        	floor.s	a8, f12, 0
400878c6:	03eba0        	rsr.prid	a10
400878c9:	04ada0        	extui	a10, a10, 13, 1
400878cc:	201110        	or	a1, a1, a1
400878cf:	f98fa5        	call8	400811c8 <esp_crosscore_int_send_yield>
400878d2:	20a440        	or	a10, a4, a4
400878d5:	012fa5        	call8	40088bd0 <vTaskExitCritical>
400878d8:	01a022        	movi	a2, 1
400878db:	000090        	retw
400878de:	032182        	l32i	a8, a1, 12
400878e1:	00c856        	bnez	a8, 400878f1 <xQueueGenericSend+0x10d>
400878e4:	20a440        	or	a10, a4, a4
400878e7:	012ea5        	call8	40088bd0 <vTaskExitCritical>
400878ea:	020c      	movi.n	a2, 0
400878ec:	f01d      	retw.n
400878ee:	000000        	ill
400878f1:	96cc      	bnez.n	a6, 400878fe <xQueueGenericSend+0x11a>
400878f3:	18c1a2        	addi	a10, a1, 24
400878f6:	201110        	or	a1, a1, a1
400878f9:	010725        	call8	4008896c <vTaskSetTimeOutState>
400878fc:	160c      	movi.n	a6, 1
400878fe:	20a440        	or	a10, a4, a4
40087901:	012ce5        	call8	40088bd0 <vTaskExitCritical>
40087904:	04ad      	mov.n	a10, a4
40087906:	0118a5        	call8	40088a90 <vTaskEnterCritical>
40087909:	0cc1b2        	addi	a11, a1, 12
4008790c:	18c1a2        	addi	a10, a1, 24
4008790f:	01f8e5        	call8	4008989c <xTaskCheckForTimeOut>
40087912:	6aec      	bnez.n	a10, 4008793c <xQueueGenericSend+0x158>
40087914:	02ad      	mov.n	a10, a2
40087916:	ffba65        	call8	400874bc <prvIsQueueFull>
40087919:	7a9c      	beqz.n	a10, 40087934 <xQueueGenericSend+0x150>
4008791b:	31b8      	l32i.n	a11, a1, 12
4008791d:	10c2a2        	addi	a10, a2, 16
40087920:	01d465        	call8	40089668 <vTaskPlaceOnEventList>
40087923:	04ad      	mov.n	a10, a4
40087925:	012aa5        	call8	40088bd0 <vTaskExitCritical>
40087928:	03eba0        	rsr.prid	a10
4008792b:	04ada0        	extui	a10, a10, 13, 1
4008792e:	f989a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087931:	ffcd86        	j	4008786b <xQueueGenericSend+0x87>
40087934:	04ad      	mov.n	a10, a4
40087936:	0129a5        	call8	40088bd0 <vTaskExitCritical>
40087939:	ffcb86        	j	4008786b <xQueueGenericSend+0x87>
4008793c:	20a440        	or	a10, a4, a4
4008793f:	012925        	call8	40088bd0 <vTaskExitCritical>
40087942:	00a022        	movi	a2, 0
40087945:	000090        	retw

40087948 <prvInitialiseMutex>:
40087948:	004136        	entry	a1, 32
4008794b:	019216        	beqz	a2, 40087968 <prvInitialiseMutex+0x20>
4008794e:	00a032        	movi	a3, 0
40087951:	1239      	s32i.n	a3, a2, 4
40087953:	0239      	s32i.n	a3, a2, 0
40087955:	3239      	s32i.n	a3, a2, 12
40087957:	48c2a2        	addi	a10, a2, 72
4008795a:	0060a5        	call8	40087f64 <vPortCPUInitializeMutex>
4008795d:	03dd      	mov.n	a13, a3
4008795f:	03cd      	mov.n	a12, a3
40087961:	03bd      	mov.n	a11, a3
40087963:	02ad      	mov.n	a10, a2
40087965:	ffe7e5        	call8	400877e4 <xQueueGenericSend>
40087968:	f01d      	retw.n
	...

4008796c <xQueueCreateMutex>:
4008796c:	004136        	entry	a1, 32
4008796f:	74c020        	extui	a12, a2, 0, 8
40087972:	00a0b2        	movi	a11, 0
40087975:	01a0a2        	movi	a10, 1
40087978:	ffd8a5        	call8	40087704 <xQueueGenericCreate>
4008797b:	0a2d      	mov.n	a2, a10
4008797d:	fffca5        	call8	40087948 <prvInitialiseMutex>
40087980:	f01d      	retw.n
	...

40087984 <xQueueGiveMutexRecursive>:
40087984:	004136        	entry	a1, 32
40087987:	017256        	bnez	a2, 400879a2 <xQueueGiveMutexRecursive+0x1e>
4008798a:	e3d4d1        	l32r	a13, 400808dc <_init_end+0x4dc>
4008798d:	36a2c2        	movi	a12, 0x236
40087990:	e3ccb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087993:	e3cca1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087996:	e2c081        	l32r	a8, 40080498 <_init_end+0x98>
40087999:	0008e0        	callx8	a8
4008799c:	201110        	or	a1, a1, a1
4008799f:	039ce5        	call8	4008b36c <abort>
400879a2:	012232        	l32i	a3, a2, 4
400879a5:	010025        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400879a8:	1893a7        	bne	a3, a10, 400879c4 <xQueueGiveMutexRecursive+0x40>
400879ab:	032232        	l32i	a3, a2, 12
400879ae:	330b      	addi.n	a3, a3, -1
400879b0:	3239      	s32i.n	a3, a2, 12
400879b2:	23dc      	bnez.n	a3, 400879c8 <xQueueGiveMutexRecursive+0x44>
400879b4:	0d0c      	movi.n	a13, 0
400879b6:	0dcd      	mov.n	a12, a13
400879b8:	0dbd      	mov.n	a11, a13
400879ba:	20a220        	or	a10, a2, a2
400879bd:	ffe265        	call8	400877e4 <xQueueGenericSend>
400879c0:	120c      	movi.n	a2, 1
400879c2:	f01d      	retw.n
400879c4:	020c      	movi.n	a2, 0
400879c6:	f01d      	retw.n
400879c8:	120c      	movi.n	a2, 1
400879ca:	f01d      	retw.n

400879cc <xQueueGenericSendFromISR>:
400879cc:	004136        	entry	a1, 32
400879cf:	014256        	bnez	a2, 400879e7 <xQueueGenericSendFromISR+0x1b>
400879d2:	e3c3d1        	l32r	a13, 400808e0 <_init_end+0x4e0>
400879d5:	85a4c2        	movi	a12, 0x485
400879d8:	e3bab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400879db:	e3baa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400879de:	e2ae81        	l32r	a8, 40080498 <_init_end+0x98>
400879e1:	0008e0        	callx8	a8
400879e4:	039865        	call8	4008b36c <abort>
400879e7:	019356        	bnez	a3, 40087a04 <xQueueGenericSendFromISR+0x38>
400879ea:	102262        	l32i	a6, a2, 64
400879ed:	369c      	beqz.n	a6, 40087a04 <xQueueGenericSendFromISR+0x38>
400879ef:	e3bcd1        	l32r	a13, 400808e0 <_init_end+0x4e0>
400879f2:	86a4c2        	movi	a12, 0x486
400879f5:	e3b2b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400879f8:	e3b3a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400879fb:	e2a781        	l32r	a8, 40080498 <_init_end+0x98>
400879fe:	0008e0        	callx8	a8
40087a01:	0396a5        	call8	4008b36c <abort>
40087a04:	192566        	bnei	a5, 2, 40087a21 <xQueueGenericSendFromISR+0x55>
40087a07:	f268      	l32i.n	a6, a2, 60
40087a09:	141626        	beqi	a6, 1, 40087a21 <xQueueGenericSendFromISR+0x55>
40087a0c:	e3b5d1        	l32r	a13, 400808e0 <_init_end+0x4e0>
40087a0f:	87a4c2        	movi	a12, 0x487
40087a12:	e3abb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087a15:	e3aba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087a18:	e2a081        	l32r	a8, 40080498 <_init_end+0x98>
40087a1b:	0008e0        	callx8	a8
40087a1e:	0394e5        	call8	4008b36c <abort>
40087a21:	006370        	rsil	a7, 3
40087a24:	48c262        	addi	a6, a2, 72
40087a27:	06ad      	mov.n	a10, a6
40087a29:	010665        	call8	40088a90 <vTaskEnterCritical>
40087a2c:	0020c0        	memw
40087a2f:	e298      	l32i.n	a9, a2, 56
40087a31:	f288      	l32i.n	a8, a2, 60
40087a33:	023987        	bltu	a9, a8, 40087a39 <xQueueGenericSendFromISR+0x6d>
40087a36:	3a2566        	bnei	a5, 2, 40087a74 <xQueueGenericSendFromISR+0xa8>
40087a39:	20c550        	or	a12, a5, a5
40087a3c:	20b330        	or	a11, a3, a3
40087a3f:	02ad      	mov.n	a10, a2
40087a41:	ffaa65        	call8	400874e8 <prvCopyDataToQueue>
40087a44:	112232        	l32i	a3, a2, 68
40087a47:	139c      	beqz.n	a3, 40087a5c <xQueueGenericSendFromISR+0x90>
40087a49:	05bd      	mov.n	a11, a5
40087a4b:	02ad      	mov.n	a10, a2
40087a4d:	ffb525        	call8	400875a0 <prvNotifyQueueSetContainer>
40087a50:	251a66        	bnei	a10, 1, 40087a79 <xQueueGenericSendFromISR+0xad>
40087a53:	74ac      	beqz.n	a4, 40087a7e <xQueueGenericSendFromISR+0xb2>
40087a55:	120c      	movi.n	a2, 1
40087a57:	0429      	s32i.n	a2, a4, 0
40087a59:	000d06        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a5c:	092232        	l32i	a3, a2, 36
40087a5f:	021316        	beqz	a3, 40087a84 <xQueueGenericSendFromISR+0xb8>
40087a62:	24c2a2        	addi	a10, a2, 36
40087a65:	01cfe5        	call8	40089764 <xTaskRemoveFromEventList>
40087a68:	01da16        	beqz	a10, 40087a89 <xQueueGenericSendFromISR+0xbd>
40087a6b:	f49c      	beqz.n	a4, 40087a8e <xQueueGenericSendFromISR+0xc2>
40087a6d:	120c      	movi.n	a2, 1
40087a6f:	0429      	s32i.n	a2, a4, 0
40087a71:	000706        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a74:	020c      	movi.n	a2, 0
40087a76:	0005c6        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a79:	120c      	movi.n	a2, 1
40087a7b:	000486        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a7e:	120c      	movi.n	a2, 1
40087a80:	000346        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a83:	120c00        	andbc	b0, b12, b0
40087a86:	0001c6        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a89:	120c      	movi.n	a2, 1
40087a8b:	000086        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a8e:	01a022        	movi	a2, 1
40087a91:	20a660        	or	a10, a6, a6
40087a94:	0113a5        	call8	40088bd0 <vTaskExitCritical>
40087a97:	20a770        	or	a10, a7, a7
40087a9a:	e2ab81        	l32r	a8, 40080548 <_init_end+0x148>
40087a9d:	0008e0        	callx8	a8
40087aa0:	f01d      	retw.n
	...

40087aa4 <xQueueGiveFromISR>:
40087aa4:	004136        	entry	a1, 32
40087aa7:	014256        	bnez	a2, 40087abf <xQueueGiveFromISR+0x1b>
40087aaa:	e38ed1        	l32r	a13, 400808e4 <_init_end+0x4e4>
40087aad:	10a5c2        	movi	a12, 0x510
40087ab0:	e384b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087ab3:	e384a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087ab6:	e27881        	l32r	a8, 40080498 <_init_end+0x98>
40087ab9:	0008e0        	callx8	a8
40087abc:	038ae5        	call8	4008b36c <abort>
40087abf:	102242        	l32i	a4, a2, 64
40087ac2:	349c      	beqz.n	a4, 40087ad9 <xQueueGiveFromISR+0x35>
40087ac4:	e388d1        	l32r	a13, 400808e4 <_init_end+0x4e4>
40087ac7:	13a5c2        	movi	a12, 0x513
40087aca:	e37db1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087acd:	e37da1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087ad0:	e27281        	l32r	a8, 40080498 <_init_end+0x98>
40087ad3:	0008e0        	callx8	a8
40087ad6:	038965        	call8	4008b36c <abort>
40087ad9:	006350        	rsil	a5, 3
40087adc:	48c242        	addi	a4, a2, 72
40087adf:	04ad      	mov.n	a10, a4
40087ae1:	00fae5        	call8	40088a90 <vTaskEnterCritical>
40087ae4:	0020c0        	memw
40087ae7:	e298      	l32i.n	a9, a2, 56
40087ae9:	f288      	l32i.n	a8, a2, 60
40087aeb:	45b987        	bgeu	a9, a8, 40087b34 <xQueueGiveFromISR+0x90>
40087aee:	0020c0        	memw
40087af1:	e288      	l32i.n	a8, a2, 56
40087af3:	881b      	addi.n	a8, a8, 1
40087af5:	0020c0        	memw
40087af8:	e289      	s32i.n	a8, a2, 56
40087afa:	f03d      	nop.n
40087afc:	f03d      	nop.n
40087afe:	f03d      	nop.n
40087b00:	f03d      	nop.n
40087b02:	112282        	l32i	a8, a2, 68
40087b05:	389c      	beqz.n	a8, 40087b1c <xQueueGiveFromISR+0x78>
40087b07:	00a0b2        	movi	a11, 0
40087b0a:	20a220        	or	a10, a2, a2
40087b0d:	ffa925        	call8	400875a0 <prvNotifyQueueSetContainer>
40087b10:	251a66        	bnei	a10, 1, 40087b39 <xQueueGiveFromISR+0x95>
40087b13:	73ac      	beqz.n	a3, 40087b3e <xQueueGiveFromISR+0x9a>
40087b15:	120c      	movi.n	a2, 1
40087b17:	0329      	s32i.n	a2, a3, 0
40087b19:	000d06        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b1c:	092282        	l32i	a8, a2, 36
40087b1f:	021816        	beqz	a8, 40087b44 <xQueueGiveFromISR+0xa0>
40087b22:	24c2a2        	addi	a10, a2, 36
40087b25:	01c3e5        	call8	40089764 <xTaskRemoveFromEventList>
40087b28:	01da16        	beqz	a10, 40087b49 <xQueueGiveFromISR+0xa5>
40087b2b:	f39c      	beqz.n	a3, 40087b4e <xQueueGiveFromISR+0xaa>
40087b2d:	120c      	movi.n	a2, 1
40087b2f:	0329      	s32i.n	a2, a3, 0
40087b31:	000706        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b34:	020c      	movi.n	a2, 0
40087b36:	0005c6        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b39:	120c      	movi.n	a2, 1
40087b3b:	000486        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b3e:	120c      	movi.n	a2, 1
40087b40:	000346        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b43:	120c00        	andbc	b0, b12, b0
40087b46:	0001c6        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b49:	120c      	movi.n	a2, 1
40087b4b:	000086        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b4e:	01a022        	movi	a2, 1
40087b51:	20a440        	or	a10, a4, a4
40087b54:	0107a5        	call8	40088bd0 <vTaskExitCritical>
40087b57:	20a550        	or	a10, a5, a5
40087b5a:	e27b81        	l32r	a8, 40080548 <_init_end+0x148>
40087b5d:	0008e0        	callx8	a8
40087b60:	f01d      	retw.n
	...

40087b64 <xQueueGenericReceive>:
40087b64:	008136        	entry	a1, 64
40087b67:	3149      	s32i.n	a4, a1, 12
40087b69:	b2dc      	bnez.n	a2, 40087b88 <xQueueGenericReceive+0x24>
40087b6b:	f03d      	nop.n
40087b6d:	f03d      	nop.n
40087b6f:	f03d      	nop.n
40087b71:	f03d      	nop.n
40087b73:	e35dd1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087b76:	a2a5c2        	movi	a12, 0x5a2
40087b79:	e351b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087b7c:	e352a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087b7f:	e24681        	l32r	a8, 40080498 <_init_end+0x98>
40087b82:	0008e0        	callx8	a8
40087b85:	037e65        	call8	4008b36c <abort>
40087b88:	83dc      	bnez.n	a3, 40087ba4 <xQueueGenericReceive+0x40>
40087b8a:	102242        	l32i	a4, a2, 64
40087b8d:	349c      	beqz.n	a4, 40087ba4 <xQueueGenericReceive+0x40>
40087b8f:	e356d1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087b92:	a3a5c2        	movi	a12, 0x5a3
40087b95:	e34ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087b98:	e34ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087b9b:	e23f81        	l32r	a8, 40080498 <_init_end+0x98>
40087b9e:	0008e0        	callx8	a8
40087ba1:	037ca5        	call8	4008b36c <abort>
40087ba4:	00eb25        	call8	40088a58 <xTaskGetSchedulerState>
40087ba7:	7adc      	bnez.n	a10, 40087bc2 <xQueueGenericReceive+0x5e>
40087ba9:	3148      	l32i.n	a4, a1, 12
40087bab:	949c      	beqz.n	a4, 40087bc8 <xQueueGenericReceive+0x64>
40087bad:	e34ed1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087bb0:	a6a5c2        	movi	a12, 0x5a6
40087bb3:	e343b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087bb6:	e343a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087bb9:	e23781        	l32r	a8, 40080498 <_init_end+0x98>
40087bbc:	0008e0        	callx8	a8
40087bbf:	037ae5        	call8	4008b36c <abort>
40087bc2:	060c      	movi.n	a6, 0
40087bc4:	0000c6        	j	40087bcb <xQueueGenericReceive+0x67>
40087bc7:	a06200        	addx4	a6, a2, a0
40087bca:	c24200        	quou	a4, a2, a0
40087bcd:	ad48      	l32i.n	a4, a13, 40
40087bcf:	ebe504        	lsi	f0, a5, 0x3ac
40087bd2:	20c000        	or	a12, a0, a0
40087bd5:	e28800        	remu	a8, a8, a0
40087bd8:	078816        	beqz	a8, 40087c54 <xQueueGenericReceive+0xf0>
40087bdb:	3268      	l32i.n	a6, a2, 12
40087bdd:	03bd      	mov.n	a11, a3
40087bdf:	02ad      	mov.n	a10, a2
40087be1:	ffa3e5        	call8	40087620 <prvCopyDataFromQueue>
40087be4:	03f556        	bnez	a5, 40087c27 <xQueueGenericReceive+0xc3>
40087be7:	0020c0        	memw
40087bea:	e238      	l32i.n	a3, a2, 56
40087bec:	330b      	addi.n	a3, a3, -1
40087bee:	0020c0        	memw
40087bf1:	e239      	s32i.n	a3, a2, 56
40087bf3:	f03d      	nop.n
40087bf5:	f03d      	nop.n
40087bf7:	f03d      	nop.n
40087bf9:	f03d      	nop.n
40087bfb:	0238      	l32i.n	a3, a2, 0
40087bfd:	33cc      	bnez.n	a3, 40087c04 <xQueueGenericReceive+0xa0>
40087bff:	01eea5        	call8	40089ae8 <pvTaskIncrementMutexHeldCount>
40087c02:	12a9      	s32i.n	a10, a2, 4
40087c04:	f03d      	nop.n
40087c06:	f03d      	nop.n
40087c08:	f03d      	nop.n
40087c0a:	f03d      	nop.n
40087c0c:	042232        	l32i	a3, a2, 16
40087c0f:	035316        	beqz	a3, 40087c48 <xQueueGenericReceive+0xe4>
40087c12:	10c2a2        	addi	a10, a2, 16
40087c15:	01b4e5        	call8	40089764 <xTaskRemoveFromEventList>
40087c18:	2c1a66        	bnei	a10, 1, 40087c48 <xQueueGenericReceive+0xe4>
40087c1b:	03eba0        	rsr.prid	a10
40087c1e:	04ada0        	extui	a10, a10, 13, 1
40087c21:	f95a65        	call8	400811c8 <esp_crosscore_int_send_yield>
40087c24:	000806        	j	40087c48 <xQueueGenericReceive+0xe4>
40087c27:	036262        	s32i	a6, a2, 12
40087c2a:	f03d      	nop.n
40087c2c:	f03d      	nop.n
40087c2e:	f03d      	nop.n
40087c30:	f03d      	nop.n
40087c32:	092232        	l32i	a3, a2, 36
40087c35:	f38c      	beqz.n	a3, 40087c48 <xQueueGenericReceive+0xe4>
40087c37:	24c2a2        	addi	a10, a2, 36
40087c3a:	01b2a5        	call8	40089764 <xTaskRemoveFromEventList>
40087c3d:	7a8c      	beqz.n	a10, 40087c48 <xQueueGenericReceive+0xe4>
40087c3f:	03eba0        	rsr.prid	a10
40087c42:	04ada0        	extui	a10, a10, 13, 1
40087c45:	f95825        	call8	400811c8 <esp_crosscore_int_send_yield>
40087c48:	20a440        	or	a10, a4, a4
40087c4b:	00f865        	call8	40088bd0 <vTaskExitCritical>
40087c4e:	01a022        	movi	a2, 1
40087c51:	000090        	retw
40087c54:	032182        	l32i	a8, a1, 12
40087c57:	00a856        	bnez	a8, 40087c65 <xQueueGenericReceive+0x101>
40087c5a:	20a440        	or	a10, a4, a4
40087c5d:	00f725        	call8	40088bd0 <vTaskExitCritical>
40087c60:	020c      	movi.n	a2, 0
40087c62:	f01d      	retw.n
40087c64:	96cc00        	lsi	f0, a12, 0x258
40087c67:	18c1a2        	addi	a10, a1, 24
40087c6a:	201110        	or	a1, a1, a1
40087c6d:	00cfe5        	call8	4008896c <vTaskSetTimeOutState>
40087c70:	160c      	movi.n	a6, 1
40087c72:	04ad      	mov.n	a10, a4
40087c74:	00f5a5        	call8	40088bd0 <vTaskExitCritical>
40087c77:	04ad      	mov.n	a10, a4
40087c79:	00e165        	call8	40088a90 <vTaskEnterCritical>
40087c7c:	b1cb      	addi.n	a11, a1, 12
40087c7e:	18c1a2        	addi	a10, a1, 24
40087c81:	01c1a5        	call8	4008989c <xTaskCheckForTimeOut>
40087c84:	034a56        	bnez	a10, 40087cbc <xQueueGenericReceive+0x158>
40087c87:	20a220        	or	a10, a2, a2
40087c8a:	025aa5        	call8	4008a234 <prvIsQueueEmpty>
40087c8d:	3aac      	beqz.n	a10, 40087cb4 <xQueueGenericReceive+0x150>
40087c8f:	0288      	l32i.n	a8, a2, 0
40087c91:	48cc      	bnez.n	a8, 40087c99 <xQueueGenericReceive+0x135>
40087c93:	0122a2        	l32i	a10, a2, 4
40087c96:	01cc25        	call8	40089958 <vTaskPriorityInherit>
40087c99:	0321b2        	l32i	a11, a1, 12
40087c9c:	24c2a2        	addi	a10, a2, 36
40087c9f:	019ca5        	call8	40089668 <vTaskPlaceOnEventList>
40087ca2:	04ad      	mov.n	a10, a4
40087ca4:	00f2a5        	call8	40088bd0 <vTaskExitCritical>
40087ca7:	03eba0        	rsr.prid	a10
40087caa:	04ada0        	extui	a10, a10, 13, 1
40087cad:	f951a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087cb0:	ffc5c6        	j	40087bcb <xQueueGenericReceive+0x67>
40087cb3:	04ad00        	extui	a10, a0, 13, 1
40087cb6:	00f1a5        	call8	40088bd0 <vTaskExitCritical>
40087cb9:	ffc386        	j	40087bcb <xQueueGenericReceive+0x67>
40087cbc:	20a440        	or	a10, a4, a4
40087cbf:	00f125        	call8	40088bd0 <vTaskExitCritical>
40087cc2:	00a022        	movi	a2, 0
40087cc5:	000090        	retw

40087cc8 <xQueueTakeMutexRecursive>:
40087cc8:	004136        	entry	a1, 32
40087ccb:	017256        	bnez	a2, 40087ce6 <xQueueTakeMutexRecursive+0x1e>
40087cce:	e307d1        	l32r	a13, 400808ec <_init_end+0x4ec>
40087cd1:	6da2c2        	movi	a12, 0x26d
40087cd4:	e2fbb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087cd7:	e2fba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087cda:	e1ef81        	l32r	a8, 40080498 <_init_end+0x98>
40087cdd:	0008e0        	callx8	a8
40087ce0:	201110        	or	a1, a1, a1
40087ce3:	0368a5        	call8	4008b36c <abort>
40087ce6:	012242        	l32i	a4, a2, 4
40087ce9:	00cbe5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40087cec:	0e94a7        	bne	a4, a10, 40087cfe <xQueueTakeMutexRecursive+0x36>
40087cef:	032232        	l32i	a3, a2, 12
40087cf2:	01c332        	addi	a3, a3, 1
40087cf5:	3239      	s32i.n	a3, a2, 12
40087cf7:	1a0c      	movi.n	a10, 1
40087cf9:	000606        	j	40087d15 <xQueueTakeMutexRecursive+0x4d>
40087cfc:	d20000        	quos	a0, a0, a0
40087cff:	3000a0        	xor	a0, a0, a10
40087d02:	d020c3        	lsi	f12, a0, 0x340
40087d05:	20bd      	lsi	f11, a0, 0
40087d07:	02ad      	mov.n	a10, a2
40087d09:	ffe5a5        	call8	40087b64 <xQueueGenericReceive>
40087d0c:	051a66        	bnei	a10, 1, 40087d15 <xQueueTakeMutexRecursive+0x4d>
40087d0f:	3238      	l32i.n	a3, a2, 12
40087d11:	331b      	addi.n	a3, a3, 1
40087d13:	3239      	s32i.n	a3, a2, 12
40087d15:	0a2d      	mov.n	a2, a10
40087d17:	f01d      	retw.n
40087d19:	000000        	ill

40087d1c <xQueueReceiveFromISR>:
40087d1c:	004136        	entry	a1, 32
40087d1f:	014256        	bnez	a2, 40087d37 <xQueueReceiveFromISR+0x1b>
40087d22:	e2f3d1        	l32r	a13, 400808f0 <_init_end+0x4f0>
40087d25:	50a6c2        	movi	a12, 0x650
40087d28:	e2e6b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087d2b:	e2e6a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087d2e:	e1da81        	l32r	a8, 40080498 <_init_end+0x98>
40087d31:	0008e0        	callx8	a8
40087d34:	036365        	call8	4008b36c <abort>
40087d37:	01a356        	bnez	a3, 40087d55 <xQueueReceiveFromISR+0x39>
40087d3a:	102252        	l32i	a5, a2, 64
40087d3d:	014516        	beqz	a5, 40087d55 <xQueueReceiveFromISR+0x39>
40087d40:	e2ecd1        	l32r	a13, 400808f0 <_init_end+0x4f0>
40087d43:	51a6c2        	movi	a12, 0x651
40087d46:	e2deb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087d49:	e2dea1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087d4c:	e1d381        	l32r	a8, 40080498 <_init_end+0x98>
40087d4f:	0008e0        	callx8	a8
40087d52:	0361a5        	call8	4008b36c <abort>
40087d55:	006360        	rsil	a6, 3
40087d58:	48c252        	addi	a5, a2, 72
40087d5b:	20a550        	or	a10, a5, a5
40087d5e:	00d325        	call8	40088a90 <vTaskEnterCritical>
40087d61:	0020c0        	memw
40087d64:	0e2282        	l32i	a8, a2, 56
40087d67:	e8ac      	beqz.n	a8, 40087d99 <xQueueReceiveFromISR+0x7d>
40087d69:	03bd      	mov.n	a11, a3
40087d6b:	02ad      	mov.n	a10, a2
40087d6d:	ff8b25        	call8	40087620 <prvCopyDataFromQueue>
40087d70:	0020c0        	memw
40087d73:	e238      	l32i.n	a3, a2, 56
40087d75:	330b      	addi.n	a3, a3, -1
40087d77:	0020c0        	memw
40087d7a:	e239      	s32i.n	a3, a2, 56
40087d7c:	f03d      	nop.n
40087d7e:	f03d      	nop.n
40087d80:	f03d      	nop.n
40087d82:	f03d      	nop.n
40087d84:	4238      	l32i.n	a3, a2, 16
40087d86:	439c      	beqz.n	a3, 40087d9e <xQueueReceiveFromISR+0x82>
40087d88:	10c2a2        	addi	a10, a2, 16
40087d8b:	019da5        	call8	40089764 <xTaskRemoveFromEventList>
40087d8e:	2a9c      	beqz.n	a10, 40087da4 <xQueueReceiveFromISR+0x88>
40087d90:	549c      	beqz.n	a4, 40087da9 <xQueueReceiveFromISR+0x8d>
40087d92:	120c      	movi.n	a2, 1
40087d94:	0429      	s32i.n	a2, a4, 0
40087d96:	000446        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087d99:	020c      	movi.n	a2, 0
40087d9b:	000306        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087d9e:	120c      	movi.n	a2, 1
40087da0:	0001c6        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087da3:	120c00        	andbc	b0, b12, b0
40087da6:	000046        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087da9:	120c      	movi.n	a2, 1
40087dab:	05ad      	mov.n	a10, a5
40087dad:	00e225        	call8	40088bd0 <vTaskExitCritical>
40087db0:	06ad      	mov.n	a10, a6
40087db2:	e1e581        	l32r	a8, 40080548 <_init_end+0x148>
40087db5:	0008e0        	callx8	a8
40087db8:	f01d      	retw.n
	...

40087dbc <vQueueDelete>:
40087dbc:	004136        	entry	a1, 32
40087dbf:	017256        	bnez	a2, 40087dda <vQueueDelete+0x1e>
40087dc2:	e2ccd1        	l32r	a13, 400808f4 <_init_end+0x4f4>
40087dc5:	04a7c2        	movi	a12, 0x704
40087dc8:	e2beb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087dcb:	e2bea1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087dce:	e1b281        	l32r	a8, 40080498 <_init_end+0x98>
40087dd1:	0008e0        	callx8	a8
40087dd4:	201110        	or	a1, a1, a1
40087dd7:	035965        	call8	4008b36c <abort>
40087dda:	02ad      	mov.n	a10, a2
40087ddc:	e28281        	l32r	a8, 400807e4 <_init_end+0x3e4>
40087ddf:	0008e0        	callx8	a8
40087de2:	f01d      	retw.n

40087de4 <vQueueWaitForMessageRestricted>:
40087de4:	004136        	entry	a1, 32
40087de7:	48c242        	addi	a4, a2, 72
40087dea:	20a440        	or	a10, a4, a4
40087ded:	00ca25        	call8	40088a90 <vTaskEnterCritical>
40087df0:	0020c0        	memw
40087df3:	0e2282        	l32i	a8, a2, 56
40087df6:	68cc      	bnez.n	a8, 40087e00 <vQueueWaitForMessageRestricted+0x1c>
40087df8:	03bd      	mov.n	a11, a3
40087dfa:	24c2a2        	addi	a10, a2, 36
40087dfd:	018fa5        	call8	400896f8 <vTaskPlaceOnEventListRestricted>
40087e00:	04ad      	mov.n	a10, a4
40087e02:	00dce5        	call8	40088bd0 <vTaskExitCritical>
40087e05:	f01d      	retw.n
	...

40087e08 <_xt_tick_divisor_init>:
40087e08:	004136        	entry	a1, 32
40087e0b:	f92ce5        	call8	400810d8 <esp_clk_cpu_freq>
40087e0e:	e2ba81        	l32r	a8, 400808f8 <_init_end+0x4f8>
40087e11:	b28a80        	mulsh	a8, a10, a8
40087e14:	218680        	srai	a8, a8, 6
40087e17:	31afa0        	srai	a10, a10, 31
40087e1a:	c0a8a0        	sub	a10, a8, a10
40087e1d:	e2b781        	l32r	a8, 400808fc <_init_end+0x4fc>
40087e20:	08a9      	s32i.n	a10, a8, 0
40087e22:	f01d      	retw.n

40087e24 <vPortTaskWrapper>:
40087e24:	004136        	entry	a1, 32
40087e27:	03ad      	mov.n	a10, a3
40087e29:	0002e0        	callx8	a2
40087e2c:	0a0c      	movi.n	a10, 0
40087e2e:	00bb65        	call8	400889e4 <pcTaskGetTaskName>
40087e31:	0a2d      	mov.n	a2, a10
40087e33:	fbefe5        	call8	40083d30 <esp_log_timestamp>
40087e36:	e2b2b1        	l32r	a11, 40080900 <_init_end+0x500>
40087e39:	02fd      	mov.n	a15, a2
40087e3b:	0bed      	mov.n	a14, a11
40087e3d:	0add      	mov.n	a13, a10
40087e3f:	e2b1c1        	l32r	a12, 40080904 <_init_end+0x504>
40087e42:	1a0c      	movi.n	a10, 1
40087e44:	fbd725        	call8	40083bb8 <esp_log_write>
40087e47:	035265        	call8	4008b36c <abort>
	...

40087e4c <pxPortInitialiseStack>:
40087e4c:	004136        	entry	a1, 32
40087e4f:	025d      	mov.n	a5, a2
40087e51:	e2aec1        	l32r	a12, 4008090c <_init_end+0x50c>
40087e54:	e2ad21        	l32r	a2, 40080908 <_init_end+0x508>
40087e57:	c0c2c0        	sub	a12, a2, a12
40087e5a:	ccfb      	addi.n	a12, a12, 15
40087e5c:	077c      	movi.n	a7, -16
40087e5e:	10cc70        	and	a12, a12, a7
40087e61:	251b      	addi.n	a2, a5, 1
40087e63:	c022c0        	sub	a2, a2, a12
40087e66:	e0ae62        	movi	a6, 0xfffffee0
40087e69:	226a      	add.n	a2, a2, a6
40087e6b:	102270        	and	a2, a2, a7
40087e6e:	028d      	mov.n	a8, a2
40087e70:	000286        	j	40087e7e <pxPortInitialiseStack+0x32>
40087e73:	090c00        	l32e	a0, a12, -64
40087e76:	004892        	s8i	a9, a8, 0
40087e79:	0020c0        	memw
40087e7c:	881b      	addi.n	a8, a8, 1
40087e7e:	f2b587        	bgeu	a5, a8, 40087e74 <pxPortInitialiseStack+0x28>
40087e81:	f03d      	nop.n
40087e83:	f03d      	nop.n
40087e85:	f03d      	nop.n
40087e87:	e2a261        	l32r	a6, 40080910 <_init_end+0x510>
40087e8a:	1269      	s32i.n	a6, a2, 4
40087e8c:	060c      	movi.n	a6, 0
40087e8e:	3269      	s32i.n	a6, a2, 12
40087e90:	c0a072        	movi	a7, 192
40087e93:	727a      	add.n	a7, a2, a7
40087e95:	4279      	s32i.n	a7, a2, 16
40087e97:	f03d      	nop.n
40087e99:	f03d      	nop.n
40087e9b:	f03d      	nop.n
40087e9d:	f03d      	nop.n
40087e9f:	e20771        	l32r	a7, 400806bc <_init_end+0x2bc>
40087ea2:	0279      	s32i.n	a7, a2, 0
40087ea4:	9239      	s32i.n	a3, a2, 36
40087ea6:	a249      	s32i.n	a4, a2, 40
40087ea8:	f03d      	nop.n
40087eaa:	f03d      	nop.n
40087eac:	f03d      	nop.n
40087eae:	f03d      	nop.n
40087eb0:	e29931        	l32r	a3, 40080914 <_init_end+0x514>
40087eb3:	2239      	s32i.n	a3, a2, 8
40087eb5:	c035c0        	sub	a3, a5, a12
40087eb8:	a0c332        	addi	a3, a3, -96
40087ebb:	047c      	movi.n	a4, -16
40087ebd:	103340        	and	a3, a3, a4
40087ec0:	e29371        	l32r	a7, 4008090c <_init_end+0x50c>
40087ec3:	07bd      	mov.n	a11, a7
40087ec5:	03ad      	mov.n	a10, a3
40087ec7:	e21f81        	l32r	a8, 40080744 <_init_end+0x344>
40087eca:	0008e0        	callx8	a8
40087ecd:	c03370        	sub	a3, a3, a7
40087ed0:	e29271        	l32r	a7, 40080918 <_init_end+0x518>
40087ed3:	774a      	add.n	a7, a7, a4
40087ed5:	373a      	add.n	a3, a7, a3
40087ed7:	1c6232        	s32i	a3, a2, 112
40087eda:	a0c552        	addi	a5, a5, -96
40087edd:	105540        	and	a5, a5, a4
40087ee0:	0569      	s32i.n	a6, a5, 0
40087ee2:	1569      	s32i.n	a6, a5, 4
40087ee4:	45fb      	addi.n	a4, a5, 15
40087ee6:	c37c      	movi.n	a3, -4
40087ee8:	103430        	and	a3, a4, a3
40087eeb:	2539      	s32i.n	a3, a5, 8
40087eed:	f01d      	retw.n
	...

40087ef0 <xPortStartScheduler>:
40087ef0:	004136        	entry	a1, 32
40087ef3:	020f25        	call8	40089fe4 <_xt_coproc_init>
40087ef6:	fff125        	call8	40087e08 <_xt_tick_divisor_init>
40087ef9:	022425        	call8	4008a13c <_frxt_tick_timer_init>
40087efc:	03eb80        	rsr.prid	a8
40087eff:	048d80        	extui	a8, a8, 13, 1
40087f02:	e15021        	l32r	a2, 40080444 <_init_end+0x44>
40087f05:	a08820        	addx4	a8, a8, a2
40087f08:	120c      	movi.n	a2, 1
40087f0a:	006822        	s32i	a2, a8, 0
40087f0d:	022445        	call0	4008a154 <_frxt_dispatch>
40087f10:	f01d      	retw.n
	...

40087f14 <xPortSysTickHandler>:
40087f14:	004136        	entry	a1, 32
40087f17:	0140a5        	call8	40089320 <xTaskIncrementTick>
40087f1a:	0a2d      	mov.n	a2, a10
40087f1c:	002a16        	beqz	a10, 40087f22 <xPortSysTickHandler+0xe>
40087f1f:	021465        	call8	4008a064 <_frxt_setup_switch>
40087f22:	f01d      	retw.n

40087f24 <vPortYieldOtherCore>:
40087f24:	004136        	entry	a1, 32
40087f27:	02ad      	mov.n	a10, a2
40087f29:	f929e5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087f2c:	f01d      	retw.n
	...

40087f30 <vPortReleaseTaskMPUSettings>:
40087f30:	004136        	entry	a1, 32
40087f33:	02a8      	l32i.n	a10, a2, 0
40087f35:	020c25        	call8	40089ff8 <_xt_coproc_release>
40087f38:	f01d      	retw.n
	...

40087f3c <xPortInIsrContext>:
40087f3c:	004136        	entry	a1, 32
40087f3f:	0063a0        	rsil	a10, 3
40087f42:	03eb20        	rsr.prid	a2
40087f45:	042d20        	extui	a2, a2, 13, 1
40087f48:	e1d881        	l32r	a8, 400806a8 <_init_end+0x2a8>
40087f4b:	a02280        	addx4	a2, a2, a8
40087f4e:	0288      	l32i.n	a8, a2, 0
40087f50:	020c      	movi.n	a2, 0
40087f52:	190c      	movi.n	a9, 1
40087f54:	932980        	movnez	a2, a9, a8
40087f57:	742020        	extui	a2, a2, 0, 8
40087f5a:	e17b81        	l32r	a8, 40080548 <_init_end+0x148>
40087f5d:	0008e0        	callx8	a8
40087f60:	f01d      	retw.n
	...

40087f64 <vPortCPUInitializeMutex>:
40087f64:	004136        	entry	a1, 32
40087f67:	e26d81        	l32r	a8, 4008091c <_init_end+0x51c>
40087f6a:	0289      	s32i.n	a8, a2, 0
40087f6c:	080c      	movi.n	a8, 0
40087f6e:	1289      	s32i.n	a8, a2, 4
40087f70:	f01d      	retw.n
	...

40087f74 <vPortCPUReleaseMutex>:
40087f74:	004136        	entry	a1, 32
40087f77:	0063a0        	rsil	a10, 3
40087f7a:	e23981        	l32r	a8, 40080860 <_init_end+0x460>
40087f7d:	828a      	add.n	a8, a2, a8
40087f7f:	e23991        	l32r	a9, 40080864 <_init_end+0x464>
40087f82:	463987        	bltu	a9, a8, 40087fcc <vPortCPUReleaseMutex+0x58>
40087f85:	03eb80        	rsr.prid	a8
40087f88:	0298      	l32i.n	a9, a2, 0
40087f8a:	0e1987        	beq	a9, a8, 40087f9c <vPortCPUReleaseMutex+0x28>
40087f8d:	e264d1        	l32r	a13, 40080920 <_init_end+0x520>
40087f90:	e265c1        	l32r	a12, 40080924 <_init_end+0x524>
40087f93:	9da0b2        	movi	a11, 157
40087f96:	e264a1        	l32r	a10, 40080928 <_init_end+0x528>
40087f99:	52b325        	call8	400daacc <__assert_func>
40087f9c:	1288      	l32i.n	a8, a2, 4
40087f9e:	880b      	addi.n	a8, a8, -1
40087fa0:	1289      	s32i.n	a8, a2, 4
40087fa2:	e8cc      	bnez.n	a8, 40087fb4 <vPortCPUReleaseMutex+0x40>
40087fa4:	f03d      	nop.n
40087fa6:	f03d      	nop.n
40087fa8:	f03d      	nop.n
40087faa:	f03d      	nop.n
40087fac:	e25c81        	l32r	a8, 4008091c <_init_end+0x51c>
40087faf:	0289      	s32i.n	a8, a2, 0
40087fb1:	001806        	j	40088015 <vPortCPUReleaseMutex+0xa1>
40087fb4:	ffa022        	movi	a2, 255
40087fb7:	5ab287        	bgeu	a2, a8, 40088015 <vPortCPUReleaseMutex+0xa1>
40087fba:	e25cd1        	l32r	a13, 4008092c <_init_end+0x52c>
40087fbd:	e259c1        	l32r	a12, 40080924 <_init_end+0x524>
40087fc0:	a3a0b2        	movi	a11, 163
40087fc3:	e259a1        	l32r	a10, 40080928 <_init_end+0x528>
40087fc6:	201110        	or	a1, a1, a1
40087fc9:	52b025        	call8	400daacc <__assert_func>
40087fcc:	03eb80        	rsr.prid	a8
40087fcf:	0298      	l32i.n	a9, a2, 0
40087fd1:	111987        	beq	a9, a8, 40087fe6 <vPortCPUReleaseMutex+0x72>
40087fd4:	e253d1        	l32r	a13, 40080920 <_init_end+0x520>
40087fd7:	e256c1        	l32r	a12, 40080930 <_init_end+0x530>
40087fda:	9da0b2        	movi	a11, 157
40087fdd:	e252a1        	l32r	a10, 40080928 <_init_end+0x528>
40087fe0:	201110        	or	a1, a1, a1
40087fe3:	52aea5        	call8	400daacc <__assert_func>
40087fe6:	1288      	l32i.n	a8, a2, 4
40087fe8:	880b      	addi.n	a8, a8, -1
40087fea:	1289      	s32i.n	a8, a2, 4
40087fec:	08dc      	bnez.n	a8, 40088000 <vPortCPUReleaseMutex+0x8c>
40087fee:	f03d      	nop.n
40087ff0:	f03d      	nop.n
40087ff2:	f03d      	nop.n
40087ff4:	f03d      	nop.n
40087ff6:	e24981        	l32r	a8, 4008091c <_init_end+0x51c>
40087ff9:	0289      	s32i.n	a8, a2, 0
40087ffb:	000586        	j	40088015 <vPortCPUReleaseMutex+0xa1>
40087ffe:	220000        	orb	b0, b0, b0
40088001:	87ffa0        	lsi	f10, a15, 0x21c
40088004:	d10eb2        	l8ui	a11, a14, 209
40088007:	e249      	s32i.n	a4, a2, 56
40088009:	e249c1        	l32r	a12, 40080930 <_init_end+0x530>
4008800c:	a3a0b2        	movi	a11, 163
4008800f:	e246a1        	l32r	a10, 40080928 <_init_end+0x528>
40088012:	52aba5        	call8	400daacc <__assert_func>
40088015:	e14c81        	l32r	a8, 40080548 <_init_end+0x148>
40088018:	0008e0        	callx8	a8
4008801b:	f01d      	retw.n
4008801d:	000000        	ill

40088020 <vPortSetStackWatchpoint>:
40088020:	004136        	entry	a1, 32
40088023:	1fc2b2        	addi	a11, a2, 31
40088026:	e195d1        	l32r	a13, 4008067c <_init_end+0x27c>
40088029:	20a0c2        	movi	a12, 32
4008802c:	e0af82        	movi	a8, -32
4008802f:	10bb80        	and	a11, a11, a8
40088032:	01a0a2        	movi	a10, 1
40088035:	035b25        	call8	4008b5e8 <esp_set_watchpoint>
40088038:	f01d      	retw.n
	...

4008803c <uxPortCompareSetExtram>:
4008803c:	006136        	entry	a1, 48
4008803f:	e20951        	l32r	a5, 40080864 <_init_end+0x464>
40088042:	e24461        	l32r	a6, 40080954 <_init_end+0x554>
40088045:	02b567        	bgeu	a5, a6, 4008804b <uxPortCompareSetExtram+0xf>
40088048:	002346        	j	400880d9 <uxPortCompareSetExtram+0x9d>
4008804b:	03eb50        	rsr.prid	a5
4008804e:	e23a61        	l32r	a6, 40080938 <_init_end+0x538>
40088051:	306560        	xor	a6, a5, a6
40088054:	036152        	s32i	a5, a1, 12
40088057:	0cc1c2        	addi	a12, a1, 12
4008805a:	f03d      	nop.n
4008805c:	f03d      	nop.n
4008805e:	0020f0        	nop
40088061:	e22eb1        	l32r	a11, 4008091c <_init_end+0x51c>
40088064:	e234a1        	l32r	a10, 40080934 <_init_end+0x534>
40088067:	fffd65        	call8	4008803c <uxPortCompareSetExtram>
4008806a:	032182        	l32i	a8, a1, 12
4008806d:	e31867        	beq	a8, a6, 40088054 <uxPortCompareSetExtram+0x18>
40088070:	141587        	beq	a5, a8, 40088088 <uxPortCompareSetExtram+0x4c>
40088073:	e22a51        	l32r	a5, 4008091c <_init_end+0x51c>
40088076:	0e1857        	beq	a8, a5, 40088088 <uxPortCompareSetExtram+0x4c>
40088079:	e230d1        	l32r	a13, 4008093c <_init_end+0x53c>
4008807c:	e231c1        	l32r	a12, 40080940 <_init_end+0x540>
4008807f:	69a0b2        	movi	a11, 105
40088082:	e229a1        	l32r	a10, 40080928 <_init_end+0x528>
40088085:	52a465        	call8	400daacc <__assert_func>
40088088:	e22f51        	l32r	a5, 40080944 <_init_end+0x544>
4008808b:	808850        	add	a8, a8, a5
4008808e:	01a052        	movi	a5, 1
40088091:	00a072        	movi	a7, 0
40088094:	079d      	mov.n	a9, a7
40088096:	939580        	movnez	a9, a5, a8
40088099:	748090        	extui	a8, a9, 0, 8
4008809c:	e22661        	l32r	a6, 40080934 <_init_end+0x534>
4008809f:	1668      	l32i.n	a6, a6, 4
400880a1:	935760        	movnez	a5, a7, a6
400880a4:	745050        	extui	a5, a5, 0, 8
400880a7:	0e9857        	bne	a8, a5, 400880b9 <uxPortCompareSetExtram+0x7d>
400880aa:	e227d1        	l32r	a13, 40080948 <_init_end+0x548>
400880ad:	e224c1        	l32r	a12, 40080940 <_init_end+0x540>
400880b0:	6aa0b2        	movi	a11, 106
400880b3:	e21da1        	l32r	a10, 40080928 <_init_end+0x528>
400880b6:	52a165        	call8	400daacc <__assert_func>
400880b9:	fea052        	movi	a5, 254
400880bc:	0eb567        	bgeu	a5, a6, 400880ce <uxPortCompareSetExtram+0x92>
400880bf:	e223d1        	l32r	a13, 4008094c <_init_end+0x54c>
400880c2:	e21fc1        	l32r	a12, 40080940 <_init_end+0x540>
400880c5:	6ba0b2        	movi	a11, 107
400880c8:	e218a1        	l32r	a10, 40080928 <_init_end+0x528>
400880cb:	52a025        	call8	400daacc <__assert_func>
400880ce:	661b      	addi.n	a6, a6, 1
400880d0:	e21951        	l32r	a5, 40080934 <_init_end+0x534>
400880d3:	1569      	s32i.n	a6, a5, 4
400880d5:	001f86        	j	40088157 <uxPortCompareSetExtram+0x11b>
400880d8:	eb6000        	f64cmpl	a6, a0, a0
400880db:	179103        	lsi	f0, a1, 92
400880de:	9690e2        	l16si	a14, a0, 0x12c
400880e1:	566030        	lsi	f3, a0, 0x158
400880e4:	0d8120        	lsi	f2, a1, 52
400880e7:	1371e2        	lsi	f14, a1, 76
400880ea:	0c80e2        	lsi	f14, a0, 48
400880ed:	e75213        	lsi	f1, a2, 0x39c
400880f0:	195700        	lsi	f0, a7, 100
400880f3:	57ed      	lsi	f14, a7, 28
400880f5:	871116        	beqz	a1, 4008796a <prvInitialiseMutex+0x22>
400880f8:	d10e15        	call4	400591dc <__smakebuf_r+0xd4>
400880fb:	c1e210        	mul16u	a14, a2, a1
400880fe:	b2e214        	lsi	f1, a2, 0x2c8
40088101:	a169a0        	lsi	f10, a9, 0x284
40088104:	e209      	s32i.n	a0, a2, 56
40088106:	529c65        	call8	400daacc <__assert_func>
40088109:	e20e61        	l32r	a6, 40080944 <_init_end+0x544>
4008810c:	805560        	add	a5, a5, a6
4008810f:	160c      	movi.n	a6, 1
40088111:	080c      	movi.n	a8, 0
40088113:	089d      	mov.n	a9, a8
40088115:	939650        	movnez	a9, a6, a5
40088118:	745090        	extui	a5, a9, 0, 8
4008811b:	e20671        	l32r	a7, 40080934 <_init_end+0x534>
4008811e:	1778      	l32i.n	a7, a7, 4
40088120:	936870        	movnez	a6, a8, a7
40088123:	746060        	extui	a6, a6, 0, 8
40088126:	0e9567        	bne	a5, a6, 40088138 <uxPortCompareSetExtram+0xfc>
40088129:	e207d1        	l32r	a13, 40080948 <_init_end+0x548>
4008812c:	e209c1        	l32r	a12, 40080950 <_init_end+0x550>
4008812f:	6aa0b2        	movi	a11, 106
40088132:	e1fda1        	l32r	a10, 40080928 <_init_end+0x528>
40088135:	529965        	call8	400daacc <__assert_func>
40088138:	fea052        	movi	a5, 254
4008813b:	11b577        	bgeu	a5, a7, 40088150 <uxPortCompareSetExtram+0x114>
4008813e:	e203d1        	l32r	a13, 4008094c <_init_end+0x54c>
40088141:	e203c1        	l32r	a12, 40080950 <_init_end+0x550>
40088144:	6ba0b2        	movi	a11, 107
40088147:	e1f8a1        	l32r	a10, 40080928 <_init_end+0x528>
4008814a:	201110        	or	a1, a1, a1
4008814d:	5297e5        	call8	400daacc <__assert_func>
40088150:	771b      	addi.n	a7, a7, 1
40088152:	e1f851        	l32r	a5, 40080934 <_init_end+0x534>
40088155:	1579      	s32i.n	a7, a5, 4
40088157:	f03d      	nop.n
40088159:	f03d      	nop.n
4008815b:	f03d      	nop.n
4008815d:	f03d      	nop.n
4008815f:	0020c0        	memw
40088162:	0258      	l32i.n	a5, a2, 0
40088164:	069537        	bne	a5, a3, 4008816e <uxPortCompareSetExtram+0x132>
40088167:	0438      	l32i.n	a3, a4, 0
40088169:	0020c0        	memw
4008816c:	0239      	s32i.n	a3, a2, 0
4008816e:	0459      	s32i.n	a5, a4, 0
40088170:	f03d      	nop.n
40088172:	f03d      	nop.n
40088174:	f03d      	nop.n
40088176:	0020f0        	nop
40088179:	e1ba21        	l32r	a2, 40080864 <_init_end+0x464>
4008817c:	e1f631        	l32r	a3, 40080954 <_init_end+0x554>
4008817f:	4b3237        	bltu	a2, a3, 400881ce <uxPortCompareSetExtram+0x192>
40088182:	03eb20        	rsr.prid	a2
40088185:	e1eb31        	l32r	a3, 40080934 <_init_end+0x534>
40088188:	0338      	l32i.n	a3, a3, 0
4008818a:	0e1327        	beq	a3, a2, 4008819c <uxPortCompareSetExtram+0x160>
4008818d:	e1e4d1        	l32r	a13, 40080920 <_init_end+0x520>
40088190:	e1e5c1        	l32r	a12, 40080924 <_init_end+0x524>
40088193:	9da0b2        	movi	a11, 157
40088196:	e1e4a1        	l32r	a10, 40080928 <_init_end+0x528>
40088199:	529325        	call8	400daacc <__assert_func>
4008819c:	e1e631        	l32r	a3, 40080934 <_init_end+0x534>
4008819f:	1328      	l32i.n	a2, a3, 4
400881a1:	220b      	addi.n	a2, a2, -1
400881a3:	1329      	s32i.n	a2, a3, 4
400881a5:	02dc      	bnez.n	a2, 400881b9 <uxPortCompareSetExtram+0x17d>
400881a7:	f03d      	nop.n
400881a9:	f03d      	nop.n
400881ab:	f03d      	nop.n
400881ad:	f03d      	nop.n
400881af:	e1db31        	l32r	a3, 4008091c <_init_end+0x51c>
400881b2:	e1e021        	l32r	a2, 40080934 <_init_end+0x534>
400881b5:	0239      	s32i.n	a3, a2, 0
400881b7:	f01d      	retw.n
400881b9:	ffa032        	movi	a3, 255
400881bc:	5db327        	bgeu	a3, a2, 4008821d <uxPortCompareSetExtram+0x1e1>
400881bf:	e1dbd1        	l32r	a13, 4008092c <_init_end+0x52c>
400881c2:	e1d8c1        	l32r	a12, 40080924 <_init_end+0x524>
400881c5:	a3a0b2        	movi	a11, 163
400881c8:	e1d8a1        	l32r	a10, 40080928 <_init_end+0x528>
400881cb:	529025        	call8	400daacc <__assert_func>
400881ce:	03eb20        	rsr.prid	a2
400881d1:	e1d831        	l32r	a3, 40080934 <_init_end+0x534>
400881d4:	002332        	l32i	a3, a3, 0
400881d7:	0e1327        	beq	a3, a2, 400881e9 <uxPortCompareSetExtram+0x1ad>
400881da:	e1d1d1        	l32r	a13, 40080920 <_init_end+0x520>
400881dd:	e1d4c1        	l32r	a12, 40080930 <_init_end+0x530>
400881e0:	9da0b2        	movi	a11, 157
400881e3:	e1d1a1        	l32r	a10, 40080928 <_init_end+0x528>
400881e6:	528e65        	call8	400daacc <__assert_func>
400881e9:	e1d231        	l32r	a3, 40080934 <_init_end+0x534>
400881ec:	012322        	l32i	a2, a3, 4
400881ef:	220b      	addi.n	a2, a2, -1
400881f1:	1329      	s32i.n	a2, a3, 4
400881f3:	12dc      	bnez.n	a2, 40088208 <uxPortCompareSetExtram+0x1cc>
400881f5:	f03d      	nop.n
400881f7:	f03d      	nop.n
400881f9:	f03d      	nop.n
400881fb:	f03d      	nop.n
400881fd:	e1c731        	l32r	a3, 4008091c <_init_end+0x51c>
40088200:	e1cd21        	l32r	a2, 40080934 <_init_end+0x534>
40088203:	0239      	s32i.n	a3, a2, 0
40088205:	f01d      	retw.n
40088207:	a03200        	addx4	a3, a2, a0
4008820a:	ff          	.byte 0xff
4008820b:	0eb327        	bgeu	a3, a2, 4008821d <uxPortCompareSetExtram+0x1e1>
4008820e:	e1c7d1        	l32r	a13, 4008092c <_init_end+0x52c>
40088211:	e1c7c1        	l32r	a12, 40080930 <_init_end+0x530>
40088214:	a3a0b2        	movi	a11, 163
40088217:	e1c4a1        	l32r	a10, 40080928 <_init_end+0x528>
4008821a:	528b25        	call8	400daacc <__assert_func>
4008821d:	f01d      	retw.n
	...

40088220 <vPortCPUAcquireMutex>:
40088220:	006136        	entry	a1, 48
40088223:	006340        	rsil	a4, 3
40088226:	e18e31        	l32r	a3, 40080860 <_init_end+0x460>
40088229:	323a      	add.n	a3, a2, a3
4008822b:	e18e51        	l32r	a5, 40080864 <_init_end+0x464>
4008822e:	02b537        	bgeu	a5, a3, 40088234 <vPortCPUAcquireMutex+0x14>
40088231:	002006        	j	400882b5 <vPortCPUAcquireMutex+0x95>
40088234:	03eb30        	rsr.prid	a3
40088237:	e1c051        	l32r	a5, 40080938 <_init_end+0x538>
4008823a:	305350        	xor	a5, a3, a5
4008823d:	036132        	s32i	a3, a1, 12
40088240:	c1cb      	addi.n	a12, a1, 12
40088242:	f03d      	nop.n
40088244:	f03d      	nop.n
40088246:	f03d      	nop.n
40088248:	e1b5b1        	l32r	a11, 4008091c <_init_end+0x51c>
4008824b:	02ad      	mov.n	a10, a2
4008824d:	ffdee5        	call8	4008803c <uxPortCompareSetExtram>
40088250:	3188      	l32i.n	a8, a1, 12
40088252:	e71857        	beq	a8, a5, 4008823d <vPortCPUAcquireMutex+0x1d>
40088255:	141387        	beq	a3, a8, 4008826d <vPortCPUAcquireMutex+0x4d>
40088258:	e1b131        	l32r	a3, 4008091c <_init_end+0x51c>
4008825b:	0e1837        	beq	a8, a3, 4008826d <vPortCPUAcquireMutex+0x4d>
4008825e:	e1b7d1        	l32r	a13, 4008093c <_init_end+0x53c>
40088261:	e1b7c1        	l32r	a12, 40080940 <_init_end+0x540>
40088264:	69a0b2        	movi	a11, 105
40088267:	e1b0a1        	l32r	a10, 40080928 <_init_end+0x528>
4008826a:	528625        	call8	400daacc <__assert_func>
4008826d:	e1b531        	l32r	a3, 40080944 <_init_end+0x544>
40088270:	883a      	add.n	a8, a8, a3
40088272:	130c      	movi.n	a3, 1
40088274:	060c      	movi.n	a6, 0
40088276:	065d      	mov.n	a5, a6
40088278:	935380        	movnez	a5, a3, a8
4008827b:	748050        	extui	a8, a5, 0, 8
4008827e:	1258      	l32i.n	a5, a2, 4
40088280:	933650        	movnez	a3, a6, a5
40088283:	743030        	extui	a3, a3, 0, 8
40088286:	0e9837        	bne	a8, a3, 40088298 <vPortCPUAcquireMutex+0x78>
40088289:	e1afd1        	l32r	a13, 40080948 <_init_end+0x548>
4008828c:	e1adc1        	l32r	a12, 40080940 <_init_end+0x540>
4008828f:	6aa0b2        	movi	a11, 106
40088292:	e1a5a1        	l32r	a10, 40080928 <_init_end+0x528>
40088295:	528365        	call8	400daacc <__assert_func>
40088298:	fea032        	movi	a3, 254
4008829b:	0eb357        	bgeu	a3, a5, 400882ad <vPortCPUAcquireMutex+0x8d>
4008829e:	e1abd1        	l32r	a13, 4008094c <_init_end+0x54c>
400882a1:	e1a7c1        	l32r	a12, 40080940 <_init_end+0x540>
400882a4:	6ba0b2        	movi	a11, 107
400882a7:	e1a0a1        	l32r	a10, 40080928 <_init_end+0x528>
400882aa:	528225        	call8	400daacc <__assert_func>
400882ad:	551b      	addi.n	a5, a5, 1
400882af:	1259      	s32i.n	a5, a2, 4
400882b1:	001c06        	j	40088325 <vPortCPUAcquireMutex+0x105>
400882b4:	eb9000        	f64cmpl	a9, a0, a0
400882b7:	a0a103        	lsi	f0, a1, 0x280
400882ba:	a9a0e1        	l32r	a14, 4007293c <__udivmoddi4+0xdd48>
400882bd:	098d30        	l32e	a3, a13, -32
400882c0:	e19731        	l32r	a3, 4008091c <_init_end+0x51c>
400882c3:	130c30        	wsr.scompare1	a3
400882c6:	00e282        	s32c1i	a8, a2, 0
400882c9:	f11a87        	beq	a10, a8, 400882be <vPortCPUAcquireMutex+0x9e>
400882cc:	111987        	beq	a9, a8, 400882e1 <vPortCPUAcquireMutex+0xc1>
400882cf:	0e1837        	beq	a8, a3, 400882e1 <vPortCPUAcquireMutex+0xc1>
400882d2:	e19ad1        	l32r	a13, 4008093c <_init_end+0x53c>
400882d5:	e19ec1        	l32r	a12, 40080950 <_init_end+0x550>
400882d8:	69a0b2        	movi	a11, 105
400882db:	e193a1        	l32r	a10, 40080928 <_init_end+0x528>
400882de:	527ee5        	call8	400daacc <__assert_func>
400882e1:	e19831        	l32r	a3, 40080944 <_init_end+0x544>
400882e4:	883a      	add.n	a8, a8, a3
400882e6:	130c      	movi.n	a3, 1
400882e8:	060c      	movi.n	a6, 0
400882ea:	065d      	mov.n	a5, a6
400882ec:	935380        	movnez	a5, a3, a8
400882ef:	748050        	extui	a8, a5, 0, 8
400882f2:	1258      	l32i.n	a5, a2, 4
400882f4:	933650        	movnez	a3, a6, a5
400882f7:	743030        	extui	a3, a3, 0, 8
400882fa:	0e9837        	bne	a8, a3, 4008830c <vPortCPUAcquireMutex+0xec>
400882fd:	e192d1        	l32r	a13, 40080948 <_init_end+0x548>
40088300:	e194c1        	l32r	a12, 40080950 <_init_end+0x550>
40088303:	6aa0b2        	movi	a11, 106
40088306:	e188a1        	l32r	a10, 40080928 <_init_end+0x528>
40088309:	527c25        	call8	400daacc <__assert_func>
4008830c:	fea032        	movi	a3, 254
4008830f:	0eb357        	bgeu	a3, a5, 40088321 <vPortCPUAcquireMutex+0x101>
40088312:	e18ed1        	l32r	a13, 4008094c <_init_end+0x54c>
40088315:	e18ec1        	l32r	a12, 40080950 <_init_end+0x550>
40088318:	6ba0b2        	movi	a11, 107
4008831b:	e183a1        	l32r	a10, 40080928 <_init_end+0x528>
4008831e:	527ae5        	call8	400daacc <__assert_func>
40088321:	551b      	addi.n	a5, a5, 1
40088323:	1259      	s32i.n	a5, a2, 4
40088325:	04ad      	mov.n	a10, a4
40088327:	e08881        	l32r	a8, 40080548 <_init_end+0x148>
4008832a:	0008e0        	callx8	a8
4008832d:	f01d      	retw.n
	...

40088330 <prvResetNextTaskUnblockTime>:
40088330:	004136        	entry	a1, 32
40088333:	e18981        	l32r	a8, 40080958 <_init_end+0x558>
40088336:	0020c0        	memw
40088339:	0888      	l32i.n	a8, a8, 0
4008833b:	0888      	l32i.n	a8, a8, 0
4008833d:	b8cc      	bnez.n	a8, 4008834c <prvResetNextTaskUnblockTime+0x1c>
4008833f:	f97c      	movi.n	a9, -1
40088341:	e18681        	l32r	a8, 4008095c <_init_end+0x55c>
40088344:	0020c0        	memw
40088347:	0899      	s32i.n	a9, a8, 0
40088349:	f01d      	retw.n
4008834b:	838100        	moveqz	a8, a1, a0
4008834e:	20c0e1        	l32r	a14, 40050650 <r_lm_init+0x191c>
40088351:	088800        	lsx	f8, a8, a0
40088354:	3888      	l32i.n	a8, a8, 12
40088356:	3888      	l32i.n	a8, a8, 12
40088358:	2898      	l32i.n	a9, a8, 8
4008835a:	e18081        	l32r	a8, 4008095c <_init_end+0x55c>
4008835d:	0020c0        	memw
40088360:	0899      	s32i.n	a9, a8, 0
40088362:	f01d      	retw.n

40088364 <prvDeleteTLS>:
40088364:	004136        	entry	a1, 32
40088367:	22fc      	bnez.n	a2, 4008839d <prvDeleteTLS+0x39>
40088369:	e17dd1        	l32r	a13, 40080960 <_init_end+0x560>
4008836c:	e17ec1        	l32r	a12, 40080964 <_init_end+0x564>
4008836f:	e17eb1        	l32r	a11, 40080968 <_init_end+0x568>
40088372:	e17ea1        	l32r	a10, 4008096c <_init_end+0x56c>
40088375:	e04881        	l32r	a8, 40080498 <_init_end+0x98>
40088378:	0008e0        	callx8	a8
4008837b:	201110        	or	a1, a1, a1
4008837e:	02fee5        	call8	4008b36c <abort>
40088381:	18c382        	addi	a8, a3, 24
40088384:	a08820        	addx4	a8, a8, a2
40088387:	1898      	l32i.n	a9, a8, 4
40088389:	b98c      	beqz.n	a9, 40088398 <prvDeleteTLS+0x34>
4008838b:	18c382        	addi	a8, a3, 24
4008838e:	a08820        	addx4	a8, a8, a2
40088391:	08b8      	l32i.n	a11, a8, 0
40088393:	03ad      	mov.n	a10, a3
40088395:	0009e0        	callx8	a9
40088398:	331b      	addi.n	a3, a3, 1
4008839a:	000046        	j	4008839f <prvDeleteTLS+0x3b>
4008839d:	030c      	movi.n	a3, 0
4008839f:	fde316        	beqz	a3, 40088381 <prvDeleteTLS+0x1d>
400883a2:	f01d      	retw.n

400883a4 <prvInitialiseNewTask>:
400883a4:	006136        	entry	a1, 48
400883a7:	1129      	s32i.n	a2, a1, 4
400883a9:	2159      	s32i.n	a5, a1, 8
400883ab:	3179      	s32i.n	a7, a1, 12
400883ad:	f03d      	nop.n
400883af:	f03d      	nop.n
400883b1:	f03d      	nop.n
400883b3:	f03d      	nop.n
400883b5:	c128      	l32i.n	a2, a1, 48
400883b7:	04cd      	mov.n	a12, a4
400883b9:	a5a0b2        	movi	a11, 165
400883bc:	d2a8      	l32i.n	a10, a2, 52
400883be:	e03581        	l32r	a8, 40080494 <_init_end+0x94>
400883c1:	0008e0        	callx8	a8
400883c4:	d288      	l32i.n	a8, a2, 52
400883c6:	540b      	addi.n	a5, a4, -1
400883c8:	585a      	add.n	a5, a8, a5
400883ca:	c87c      	movi.n	a8, -4
400883cc:	105580        	and	a5, a5, a8
400883cf:	136252        	s32i	a5, a2, 76
400883d2:	080c      	movi.n	a8, 0
400883d4:	000746        	j	400883f5 <prvInitialiseNewTask+0x51>
400883d7:	8a0000        	round.s	a0, f0, 0
400883da:	09b293        	lsi	f9, a2, 36
400883dd:	a28a00        	muluh	a8, a10, a0
400883e0:	384ab2        	s8i	a11, a10, 56
400883e3:	0020c0        	memw
400883e6:	f03d      	nop.n
400883e8:	f03d      	nop.n
400883ea:	f03d      	nop.n
400883ec:	f03d      	nop.n
400883ee:	000992        	l8ui	a9, a9, 0
400883f1:	598c      	beqz.n	a9, 400883fa <prvInitialiseNewTask+0x56>
400883f3:	881b      	addi.n	a8, a8, 1
400883f5:	f90c      	movi.n	a9, 15
400883f7:	deb987        	bgeu	a9, a8, 400883d9 <prvInitialiseNewTask+0x35>
400883fa:	030c      	movi.n	a3, 0
400883fc:	474232        	s8i	a3, a2, 71
400883ff:	0020c0        	memw
40088402:	831c      	movi.n	a3, 24
40088404:	01b367        	bgeu	a3, a6, 40088409 <prvInitialiseNewTask+0x65>
40088407:	036d      	mov.n	a6, a3
40088409:	0c6262        	s32i	a6, a2, 48
4008840c:	f03d      	nop.n
4008840e:	f03d      	nop.n
40088410:	f03d      	nop.n
40088412:	f03d      	nop.n
40088414:	e138      	l32i.n	a3, a1, 56
40088416:	126232        	s32i	a3, a2, 72
40088419:	166262        	s32i	a6, a2, 88
4008841c:	030c      	movi.n	a3, 0
4008841e:	176232        	s32i	a3, a2, 92
40088421:	08c2a2        	addi	a10, a2, 8
40088424:	01e3a5        	call8	4008a260 <vListInitialiseItem>
40088427:	1cc2a2        	addi	a10, a2, 28
4008842a:	01e365        	call8	4008a260 <vListInitialiseItem>
4008842d:	5229      	s32i.n	a2, a2, 20
4008842f:	981c      	movi.n	a8, 25
40088431:	c06860        	sub	a6, a8, a6
40088434:	7269      	s32i.n	a6, a2, 28
40088436:	a229      	s32i.n	a2, a2, 40
40088438:	146232        	s32i	a3, a2, 80
4008843b:	04dd      	mov.n	a13, a4
4008843d:	f03d      	nop.n
4008843f:	f03d      	nop.n
40088441:	f03d      	nop.n
40088443:	d2c8      	l32i.n	a12, a2, 52
40088445:	d1b8      	l32i.n	a11, a1, 52
40088447:	a24b      	addi.n	a10, a2, 4
40088449:	01ece5        	call8	4008a318 <vPortStoreTaskMPUSettings>
4008844c:	000406        	j	40088460 <prvInitialiseNewTask+0xbc>
4008844f:	c34200        	movf	a4, a2, b0
40088452:	2018      	l32i.n	a1, a0, 8
40088454:	62a044        	lsi	f4, a0, 0x188
40088457:	6200a0        	lsi	f10, a0, 0x188
4008845a:	690064        	mula.da.hl	m0, a6
4008845d:	331b14        	lsi	f1, a11, 204
40088460:	fec316        	beqz	a3, 40088450 <prvInitialiseNewTask+0xac>
40088463:	030c      	movi.n	a3, 0
40088465:	0020c0        	memw
40088468:	566232        	s32i	a3, a2, 0x158
4008846b:	0020c0        	memw
4008846e:	576232        	s32i	a3, a2, 0x15c
40088471:	68c2a2        	addi	a10, a2, 104
40088474:	fc46e5        	call8	400848e4 <esp_reent_init>
40088477:	03dd      	mov.n	a13, a3
40088479:	21c8      	l32i.n	a12, a1, 8
4008847b:	11b8      	l32i.n	a11, a1, 4
4008847d:	05ad      	mov.n	a10, a5
4008847f:	ff9ce5        	call8	40087e4c <pxPortInitialiseStack>
40088482:	02a9      	s32i.n	a10, a2, 0
40088484:	f03d      	nop.n
40088486:	f03d      	nop.n
40088488:	f03d      	nop.n
4008848a:	f03d      	nop.n
4008848c:	3138      	l32i.n	a3, a1, 12
4008848e:	038c      	beqz.n	a3, 40088492 <prvInitialiseNewTask+0xee>
40088490:	0729      	s32i.n	a2, a7, 0
40088492:	f01d      	retw.n

40088494 <prvInitialiseTaskLists>:
40088494:	004136        	entry	a1, 32
40088497:	020c      	movi.n	a2, 0
40088499:	000446        	j	400884ae <prvInitialiseTaskLists+0x1a>
4008849c:	922000        	lsi	f0, a0, 0x248
4008849f:	89e0a0        	lsi	f10, a0, 0x224
400884a2:	33a111        	l32r	a1, 40055328 <nvds_init_memory+0xfd0>
400884a5:	aa80e1        	l32r	a14, 40072ea8 <__udivmoddi4+0xe2b4>
400884a8:	d9e580        	lsi	f8, a5, 0x364
400884ab:	221b01        	l32r	a0, 40050d18 <r_lm_init+0x1fe4>
400884ae:	881c      	movi.n	a8, 24
400884b0:	e9b827        	bgeu	a8, a2, 4008849d <prvInitialiseTaskLists+0x9>
400884b3:	e13031        	l32r	a3, 40080974 <_init_end+0x574>
400884b6:	20a330        	or	a10, a3, a3
400884b9:	01d8e5        	call8	4008a248 <vListInitialise>
400884bc:	e12f21        	l32r	a2, 40080978 <_init_end+0x578>
400884bf:	02ad      	mov.n	a10, a2
400884c1:	01d865        	call8	4008a248 <vListInitialise>
400884c4:	e12ea1        	l32r	a10, 4008097c <_init_end+0x57c>
400884c7:	01d825        	call8	4008a248 <vListInitialise>
400884ca:	e12da1        	l32r	a10, 40080980 <_init_end+0x580>
400884cd:	01d7a5        	call8	4008a248 <vListInitialise>
400884d0:	e12da1        	l32r	a10, 40080984 <_init_end+0x584>
400884d3:	01d765        	call8	4008a248 <vListInitialise>
400884d6:	e12ca1        	l32r	a10, 40080988 <_init_end+0x588>
400884d9:	01d6e5        	call8	4008a248 <vListInitialise>
400884dc:	e11f81        	l32r	a8, 40080958 <_init_end+0x558>
400884df:	0020c0        	memw
400884e2:	0839      	s32i.n	a3, a8, 0
400884e4:	f03d      	nop.n
400884e6:	f03d      	nop.n
400884e8:	f03d      	nop.n
400884ea:	f03d      	nop.n
400884ec:	e12831        	l32r	a3, 4008098c <_init_end+0x58c>
400884ef:	0020c0        	memw
400884f2:	0329      	s32i.n	a2, a3, 0
400884f4:	f01d      	retw.n
	...

400884f8 <prvDeleteTCB>:
400884f8:	004136        	entry	a1, 32
400884fb:	68c2a2        	addi	a10, a2, 104
400884fe:	52b425        	call8	400db040 <_reclaim_reent>
40088501:	04c2a2        	addi	a10, a2, 4
40088504:	ffa2a5        	call8	40087f30 <vPortReleaseTaskMPUSettings>
40088507:	01d282        	addmi	a8, a2, 0x100
4008850a:	600882        	l8ui	a8, a8, 96
4008850d:	014856        	bnez	a8, 40088525 <prvDeleteTCB+0x2d>
40088510:	d2a8      	l32i.n	a10, a2, 52
40088512:	e0b481        	l32r	a8, 400807e4 <_init_end+0x3e4>
40088515:	0008e0        	callx8	a8
40088518:	02ad      	mov.n	a10, a2
4008851a:	e0b281        	l32r	a8, 400807e4 <_init_end+0x3e4>
4008851d:	0008e0        	callx8	a8
40088520:	f01d      	retw.n
40088522:	000000        	ill
40088525:	0b1866        	bnei	a8, 1, 40088534 <prvDeleteTCB+0x3c>
40088528:	02ad      	mov.n	a10, a2
4008852a:	e0ae81        	l32r	a8, 400807e4 <_init_end+0x3e4>
4008852d:	0008e0        	callx8	a8
40088530:	f01d      	retw.n
40088532:	260000        	lsi	f0, a0, 152
40088535:	1428      	l32i.n	a2, a4, 4
40088537:	e116d1        	l32r	a13, 40080990 <_init_end+0x590>
4008853a:	e116c1        	l32r	a12, 40080994 <_init_end+0x594>
4008853d:	e10ab1        	l32r	a11, 40080968 <_init_end+0x568>
40088540:	e10ba1        	l32r	a10, 4008096c <_init_end+0x56c>
40088543:	dfd581        	l32r	a8, 40080498 <_init_end+0x98>
40088546:	0008e0        	callx8	a8
40088549:	02e225        	call8	4008b36c <abort>
4008854c:	f01d      	retw.n
	...

40088550 <prvAddCurrentTaskToDelayedList>:
40088550:	004136        	entry	a1, 32
40088553:	e05c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088556:	a08280        	addx4	a8, a2, a8
40088559:	0020c0        	memw
4008855c:	002882        	l32i	a8, a8, 0
4008855f:	026832        	s32i	a3, a8, 8
40088562:	f03d      	nop.n
40088564:	f03d      	nop.n
40088566:	f03d      	nop.n
40088568:	f03d      	nop.n
4008856a:	e10b81        	l32r	a8, 40080998 <_init_end+0x598>
4008856d:	0020c0        	memw
40088570:	002882        	l32i	a8, a8, 0
40088573:	1ab387        	bgeu	a3, a8, 40088591 <prvAddCurrentTaskToDelayedList+0x41>
40088576:	e10531        	l32r	a3, 4008098c <_init_end+0x58c>
40088579:	0020c0        	memw
4008857c:	03a8      	l32i.n	a10, a3, 0
4008857e:	e05131        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088581:	a02230        	addx4	a2, a2, a3
40088584:	0020c0        	memw
40088587:	02b8      	l32i.n	a11, a2, 0
40088589:	bb8b      	addi.n	a11, a11, 8
4008858b:	01d165        	call8	4008a2a0 <vListInsert>
4008858e:	f01d      	retw.n
40088590:	f18100        	lsi	f0, a1, 0x3c4
40088593:	20c0e0        	or	a12, a0, a14
40088596:	08a800        	lsx	f10, a8, a0
40088599:	e04a81        	l32r	a8, 400806c4 <_init_end+0x2c4>
4008859c:	a02280        	addx4	a2, a2, a8
4008859f:	0020c0        	memw
400885a2:	02b8      	l32i.n	a11, a2, 0
400885a4:	bb8b      	addi.n	a11, a11, 8
400885a6:	01cfa5        	call8	4008a2a0 <vListInsert>
400885a9:	e0ec21        	l32r	a2, 4008095c <_init_end+0x55c>
400885ac:	0020c0        	memw
400885af:	0228      	l32i.n	a2, a2, 0
400885b1:	07b327        	bgeu	a3, a2, 400885bc <prvAddCurrentTaskToDelayedList+0x6c>
400885b4:	e0ea21        	l32r	a2, 4008095c <_init_end+0x55c>
400885b7:	0020c0        	memw
400885ba:	0239      	s32i.n	a3, a2, 0
400885bc:	f01d      	retw.n
	...

400885c0 <taskYIELD_OTHER_CORE>:
400885c0:	004136        	entry	a1, 32
400885c3:	e04081        	l32r	a8, 400806c4 <_init_end+0x2c4>
400885c6:	a08280        	addx4	a8, a2, a8
400885c9:	0020c0        	memw
400885cc:	002892        	l32i	a9, a8, 0
400885cf:	dfd481        	l32r	a8, 40080520 <_init_end+0x120>
400885d2:	361287        	beq	a2, a8, 4008860c <taskYIELD_OTHER_CORE+0x4c>
400885d5:	0c2982        	l32i	a8, a9, 48
400885d8:	35b837        	bgeu	a8, a3, 40088611 <taskYIELD_OTHER_CORE+0x51>
400885db:	20a220        	or	a10, a2, a2
400885de:	ff9465        	call8	40087f24 <vPortYieldOtherCore>
400885e1:	f01d      	retw.n
400885e3:	200000        	or	a0, a0, a0
400885e6:	03eb      	addi.n	a0, a3, 14
400885e8:	042d20        	extui	a2, a2, 13, 1
400885eb:	171a27        	beq	a10, a2, 40088606 <taskYIELD_OTHER_CORE+0x46>
400885ee:	e03521        	l32r	a2, 400806c4 <_init_end+0x2c4>
400885f1:	a02a20        	addx4	a2, a10, a2
400885f4:	0020c0        	memw
400885f7:	002222        	l32i	a2, a2, 0
400885fa:	0c2222        	l32i	a2, a2, 48
400885fd:	05b237        	bgeu	a2, a3, 40088606 <taskYIELD_OTHER_CORE+0x46>
40088600:	ff9225        	call8	40087f24 <vPortYieldOtherCore>
40088603:	000090        	retw
40088606:	aa1b      	addi.n	a10, a10, 1
40088608:	000086        	j	4008860e <taskYIELD_OTHER_CORE+0x4e>
4008860b:	0a0c00        	add.s	f0, f12, f0
4008860e:	d32aa6        	blti	a10, 2, 400885e5 <taskYIELD_OTHER_CORE+0x25>
40088611:	f01d      	retw.n
	...

40088614 <vTaskSuspendAll>:
40088614:	004136        	entry	a1, 32
40088617:	0063a0        	rsil	a10, 3
4008861a:	03eb80        	rsr.prid	a8
4008861d:	048d80        	extui	a8, a8, 13, 1
40088620:	e0df91        	l32r	a9, 4008099c <_init_end+0x59c>
40088623:	a08890        	addx4	a8, a8, a9
40088626:	0020c0        	memw
40088629:	0898      	l32i.n	a9, a8, 0
4008862b:	991b      	addi.n	a9, a9, 1
4008862d:	0020c0        	memw
40088630:	0899      	s32i.n	a9, a8, 0
40088632:	dfc581        	l32r	a8, 40080548 <_init_end+0x148>
40088635:	0008e0        	callx8	a8
40088638:	f01d      	retw.n
	...

4008863c <xTaskGetTickCount>:
4008863c:	004136        	entry	a1, 32
4008863f:	e0d621        	l32r	a2, 40080998 <_init_end+0x598>
40088642:	0020c0        	memw
40088645:	0228      	l32i.n	a2, a2, 0
40088647:	f01d      	retw.n
40088649:	000000        	ill

4008864c <xTaskGetIdleTaskHandleForCPU>:
4008864c:	004136        	entry	a1, 32
4008864f:	1f22f6        	bgeui	a2, 2, 40088672 <xTaskGetIdleTaskHandleForCPU+0x26>
40088652:	e0d381        	l32r	a8, 400809a0 <_init_end+0x5a0>
40088655:	a02280        	addx4	a2, a2, a8
40088658:	0228      	l32i.n	a2, a2, 0
4008865a:	016256        	bnez	a2, 40088674 <xTaskGetIdleTaskHandleForCPU+0x28>
4008865d:	e0d1d1        	l32r	a13, 400809a4 <_init_end+0x5a4>
40088660:	e0d2c1        	l32r	a12, 400809a8 <_init_end+0x5a8>
40088663:	e0c1b1        	l32r	a11, 40080968 <_init_end+0x568>
40088666:	e0c1a1        	l32r	a10, 4008096c <_init_end+0x56c>
40088669:	df8b81        	l32r	a8, 40080498 <_init_end+0x98>
4008866c:	0008e0        	callx8	a8
4008866f:	02cfe5        	call8	4008b36c <abort>
40088672:	020c      	movi.n	a2, 0
40088674:	f01d      	retw.n
	...

40088678 <vTaskSwitchContext>:
40088678:	004136        	entry	a1, 32
4008867b:	006320        	rsil	a2, 3
4008867e:	03eb30        	rsr.prid	a3
40088681:	043d30        	extui	a3, a3, 13, 1
40088684:	e0c641        	l32r	a4, 4008099c <_init_end+0x59c>
40088687:	a03340        	addx4	a3, a3, a4
4008868a:	0020c0        	memw
4008868d:	0338      	l32i.n	a3, a3, 0
4008868f:	539c      	beqz.n	a3, 400886a8 <vTaskSwitchContext+0x30>
40088691:	03eb30        	rsr.prid	a3
40088694:	043d30        	extui	a3, a3, 13, 1
40088697:	e0c541        	l32r	a4, 400809ac <_init_end+0x5ac>
4008869a:	a03340        	addx4	a3, a3, a4
4008869d:	140c      	movi.n	a4, 1
4008869f:	0020c0        	memw
400886a2:	0349      	s32i.n	a4, a3, 0
400886a4:	00ae46        	j	40088961 <vTaskSwitchContext+0x2e9>
400886a7:	eb3000        	f64cmpl	a3, a0, a0
400886aa:	3d3003        	lsi	f0, a0, 244
400886ad:	bf4104        	lsi	f0, a1, 0x2fc
400886b0:	3340e0        	clamps	a4, a0, 21
400886b3:	a042a0        	addx4	a4, a2, a10
400886b6:	20c000        	or	a12, a0, a0
400886b9:	034900        	rsr.windowstart	a0
400886bc:	03eb30        	rsr.prid	a3
400886bf:	043d30        	extui	a3, a3, 13, 1
400886c2:	f03d      	nop.n
400886c4:	f03d      	nop.n
400886c6:	f03d      	nop.n
400886c8:	e0ba41        	l32r	a4, 400809b0 <_init_end+0x5b0>
400886cb:	a03340        	addx4	a3, a3, a4
400886ce:	140c      	movi.n	a4, 1
400886d0:	0020c0        	memw
400886d3:	0349      	s32i.n	a4, a3, 0
400886d5:	03eb30        	rsr.prid	a3
400886d8:	043d30        	extui	a3, a3, 13, 1
400886db:	f03d      	nop.n
400886dd:	f03d      	nop.n
400886df:	f03d      	nop.n
400886e1:	dff841        	l32r	a4, 400806c4 <_init_end+0x2c4>
400886e4:	a03340        	addx4	a3, a3, a4
400886e7:	0020c0        	memw
400886ea:	0338      	l32i.n	a3, a3, 0
400886ec:	0358      	l32i.n	a5, a3, 0
400886ee:	03eb30        	rsr.prid	a3
400886f1:	043d30        	extui	a3, a3, 13, 1
400886f4:	a03340        	addx4	a3, a3, a4
400886f7:	0020c0        	memw
400886fa:	0338      	l32i.n	a3, a3, 0
400886fc:	d338      	l32i.n	a3, a3, 52
400886fe:	213357        	bltu	a3, a5, 40088723 <vTaskSwitchContext+0xab>
40088701:	03eb30        	rsr.prid	a3
40088704:	043d30        	extui	a3, a3, 13, 1
40088707:	a03340        	addx4	a3, a3, a4
4008870a:	0020c0        	memw
4008870d:	03a8      	l32i.n	a10, a3, 0
4008870f:	03eb30        	rsr.prid	a3
40088712:	043d30        	extui	a3, a3, 13, 1
40088715:	a03340        	addx4	a3, a3, a4
40088718:	0020c0        	memw
4008871b:	03b8      	l32i.n	a11, a3, 0
4008871d:	38cbb2        	addi	a11, a11, 56
40088720:	02c825        	call8	4008b3a4 <vApplicationStackOverflowHook>
40088723:	03eb30        	rsr.prid	a3
40088726:	043d30        	extui	a3, a3, 13, 1
40088729:	dfe641        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008872c:	a03340        	addx4	a3, a3, a4
4008872f:	0020c0        	memw
40088732:	0338      	l32i.n	a3, a3, 0
40088734:	14a0c2        	movi	a12, 20
40088737:	e09fb1        	l32r	a11, 400809b4 <_init_end+0x5b4>
4008873a:	0d23a2        	l32i	a10, a3, 52
4008873d:	e0a081        	l32r	a8, 400809c0 <_init_end+0x5c0>
40088740:	0008e0        	callx8	a8
40088743:	0aac      	beqz.n	a10, 40088767 <vTaskSwitchContext+0xef>
40088745:	03eb30        	rsr.prid	a3
40088748:	043d30        	extui	a3, a3, 13, 1
4008874b:	a03340        	addx4	a3, a3, a4
4008874e:	0020c0        	memw
40088751:	03a8      	l32i.n	a10, a3, 0
40088753:	03eb30        	rsr.prid	a3
40088756:	043d30        	extui	a3, a3, 13, 1
40088759:	a03340        	addx4	a3, a3, a4
4008875c:	0020c0        	memw
4008875f:	03b8      	l32i.n	a11, a3, 0
40088761:	38cbb2        	addi	a11, a11, 56
40088764:	02c3e5        	call8	4008b3a4 <vApplicationStackOverflowHook>
40088767:	e094a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008876a:	ffab65        	call8	40088220 <vPortCPUAcquireMutex>
4008876d:	e09331        	l32r	a3, 400809bc <_init_end+0x5bc>
40088770:	0020c0        	memw
40088773:	0388      	l32i.n	a8, a3, 0
40088775:	0f0c      	movi.n	a15, 0
40088777:	0f3d      	mov.n	a3, a15
40088779:	006586        	j	40088913 <vTaskSwitchContext+0x29b>
4008877c:	588000        	ssxp	f8, a0, a0
4008877f:	45e0a0        	extui	a14, a10, 16, 5
40088782:	7b5111        	l32r	a1, 400674c8 <__udivmoddi4+0x28d4>
40088785:	454ae0        	extui	a4, a14, 26, 5
40088788:	0448      	l32i.n	a4, a4, 0
4008878a:	170416        	beqz	a4, 400888fe <vTaskSwitchContext+0x286>
4008878d:	1148e0        	slli	a4, a8, 2
40088790:	448a      	add.n	a4, a4, a8
40088792:	1134e0        	slli	a3, a4, 2
40088795:	c53a      	add.n	a12, a5, a3
40088797:	1c38      	l32i.n	a3, a12, 4
40088799:	33d8      	l32i.n	a13, a3, 12
4008879b:	cc8b      	addi.n	a12, a12, 8
4008879d:	3d93c7        	bne	a3, a12, 400887de <vTaskSwitchContext+0x166>
400887a0:	1348      	l32i.n	a4, a3, 4
400887a2:	a05880        	addx4	a5, a8, a8
400887a5:	1135e0        	slli	a3, a5, 2
400887a8:	e07251        	l32r	a5, 40080970 <_init_end+0x570>
400887ab:	353a      	add.n	a3, a5, a3
400887ad:	1349      	s32i.n	a4, a3, 4
400887af:	169c47        	bne	a12, a4, 400887c9 <vTaskSwitchContext+0x151>
400887b2:	f03d      	nop.n
400887b4:	f03d      	nop.n
400887b6:	f03d      	nop.n
400887b8:	f03d      	nop.n
400887ba:	1458      	l32i.n	a5, a4, 4
400887bc:	a04880        	addx4	a4, a8, a8
400887bf:	1134e0        	slli	a3, a4, 2
400887c2:	e06b41        	l32r	a4, 40080970 <_init_end+0x570>
400887c5:	343a      	add.n	a3, a4, a3
400887c7:	1359      	s32i.n	a5, a3, 4
400887c9:	a04880        	addx4	a4, a8, a8
400887cc:	1134e0        	slli	a3, a4, 2
400887cf:	f03d      	nop.n
400887d1:	f03d      	nop.n
400887d3:	e06741        	l32r	a4, 40080970 <_init_end+0x570>
400887d6:	343a      	add.n	a3, a4, a3
400887d8:	012332        	l32i	a3, a3, 4
400887db:	0323d2        	l32i	a13, a3, 12
400887de:	0e0c      	movi.n	a14, 0
400887e0:	1198e0        	slli	a9, a8, 2
400887e3:	998a      	add.n	a9, a9, a8
400887e5:	1139e0        	slli	a3, a9, 2
400887e8:	e06241        	l32r	a4, 40080970 <_init_end+0x570>
400887eb:	343a      	add.n	a3, a4, a3
400887ed:	1348      	l32i.n	a4, a3, 4
400887ef:	1498      	l32i.n	a9, a4, 4
400887f1:	1399      	s32i.n	a9, a3, 4
400887f3:	169c97        	bne	a12, a9, 4008880d <vTaskSwitchContext+0x195>
400887f6:	f03d      	nop.n
400887f8:	f03d      	nop.n
400887fa:	f03d      	nop.n
400887fc:	f03d      	nop.n
400887fe:	1958      	l32i.n	a5, a9, 4
40088800:	a04880        	addx4	a4, a8, a8
40088803:	1134e0        	slli	a3, a4, 2
40088806:	e05a41        	l32r	a4, 40080970 <_init_end+0x570>
40088809:	343a      	add.n	a3, a4, a3
4008880b:	1359      	s32i.n	a5, a3, 4
4008880d:	a04880        	addx4	a4, a8, a8
40088810:	1134e0        	slli	a3, a4, 2
40088813:	f03d      	nop.n
40088815:	f03d      	nop.n
40088817:	e05641        	l32r	a4, 40080970 <_init_end+0x570>
4008881a:	343a      	add.n	a3, a4, a3
4008881c:	1338      	l32i.n	a3, a3, 4
4008881e:	33b8      	l32i.n	a11, a3, 12
40088820:	090c      	movi.n	a9, 0
40088822:	000606        	j	4008883e <vTaskSwitchContext+0x1c6>
40088825:	03eb30        	rsr.prid	a3
40088828:	043d30        	extui	a3, a3, 13, 1
4008882b:	0d1937        	beq	a9, a3, 4008883c <vTaskSwitchContext+0x1c4>
4008882e:	dfa531        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088831:	a03930        	addx4	a3, a9, a3
40088834:	0020c0        	memw
40088837:	0338      	l32i.n	a3, a3, 0
40088839:	091b37        	beq	a11, a3, 40088846 <vTaskSwitchContext+0x1ce>
4008883c:	991b      	addi.n	a9, a9, 1
4008883e:	e329a6        	blti	a9, 2, 40088825 <vTaskSwitchContext+0x1ad>
40088841:	130c      	movi.n	a3, 1
40088843:	0000c6        	j	4008884a <vTaskSwitchContext+0x1d2>
40088846:	1f0c      	movi.n	a15, 1
40088848:	030c      	movi.n	a3, 0
4008884a:	3e1366        	bnei	a3, 1, 4008888c <vTaskSwitchContext+0x214>
4008884d:	122b32        	l32i	a3, a11, 72
40088850:	df3441        	l32r	a4, 40080520 <_init_end+0x120>
40088853:	159347        	bne	a3, a4, 4008886c <vTaskSwitchContext+0x1f4>
40088856:	03eb30        	rsr.prid	a3
40088859:	043d30        	extui	a3, a3, 13, 1
4008885c:	df9a41        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008885f:	a03340        	addx4	a3, a3, a4
40088862:	0020c0        	memw
40088865:	03b9      	s32i.n	a11, a3, 0
40088867:	130c      	movi.n	a3, 1
40088869:	000a46        	j	40088896 <vTaskSwitchContext+0x21e>
4008886c:	03eb40        	rsr.prid	a4
4008886f:	044d40        	extui	a4, a4, 13, 1
40088872:	1c9347        	bne	a3, a4, 40088892 <vTaskSwitchContext+0x21a>
40088875:	03eb30        	rsr.prid	a3
40088878:	043d30        	extui	a3, a3, 13, 1
4008887b:	df9241        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008887e:	a03340        	addx4	a3, a3, a4
40088881:	0020c0        	memw
40088884:	03b9      	s32i.n	a11, a3, 0
40088886:	130c      	movi.n	a3, 1
40088888:	000286        	j	40088896 <vTaskSwitchContext+0x21e>
4008888b:	030c00        	rsr.scompare1	a0
4008888e:	000106        	j	40088896 <vTaskSwitchContext+0x21e>
40088891:	1f0c00        	f64cmph	a0, a12, a0, 1
40088894:	030c      	movi.n	a3, 0
40088896:	048316        	beqz	a3, 400888e2 <vTaskSwitchContext+0x26a>
40088899:	4703e7        	bnone	a3, a14, 400888e4 <vTaskSwitchContext+0x26c>
4008889c:	11a8e0        	slli	a10, a8, 2
4008889f:	aa8a      	add.n	a10, a10, a8
400888a1:	119ae0        	slli	a9, a10, 2
400888a4:	e033a1        	l32r	a10, 40080970 <_init_end+0x570>
400888a7:	9a9a      	add.n	a9, a10, a9
400888a9:	19a8      	l32i.n	a10, a9, 4
400888ab:	1aa8      	l32i.n	a10, a10, 4
400888ad:	19a9      	s32i.n	a10, a9, 4
400888af:	169ca7        	bne	a12, a10, 400888c9 <vTaskSwitchContext+0x251>
400888b2:	f03d      	nop.n
400888b4:	f03d      	nop.n
400888b6:	f03d      	nop.n
400888b8:	f03d      	nop.n
400888ba:	1a98      	l32i.n	a9, a10, 4
400888bc:	a05880        	addx4	a5, a8, a8
400888bf:	1145e0        	slli	a4, a5, 2
400888c2:	e02b51        	l32r	a5, 40080970 <_init_end+0x570>
400888c5:	454a      	add.n	a4, a5, a4
400888c7:	1499      	s32i.n	a9, a4, 4
400888c9:	a0a880        	addx4	a10, a8, a8
400888cc:	119ae0        	slli	a9, a10, 2
400888cf:	f03d      	nop.n
400888d1:	f03d      	nop.n
400888d3:	e027a1        	l32r	a10, 40080970 <_init_end+0x570>
400888d6:	9a9a      	add.n	a9, a10, a9
400888d8:	1998      	l32i.n	a9, a9, 4
400888da:	3998      	l32i.n	a9, a9, 12
400888dc:	bc99d7        	bne	a9, a13, 4008889c <vTaskSwitchContext+0x224>
400888df:	000046        	j	400888e4 <vTaskSwitchContext+0x26c>
400888e2:	1e0c      	movi.n	a14, 1
400888e4:	140c      	movi.n	a4, 1
400888e6:	0a0c      	movi.n	a10, 0
400888e8:	0a5d      	mov.n	a5, a10
400888ea:	835430        	moveqz	a5, a4, a3
400888ed:	c09bd0        	sub	a9, a11, a13
400888f0:	0abd      	mov.n	a11, a10
400888f2:	93b490        	movnez	a11, a4, a9
400888f5:	020b57        	bnone	a11, a5, 400888fb <vTaskSwitchContext+0x283>
400888f8:	ffb906        	j	400887e0 <vTaskSwitchContext+0x168>
400888fb:	000446        	j	40088910 <vTaskSwitchContext+0x298>
400888fe:	efcc      	bnez.n	a15, 40088910 <vTaskSwitchContext+0x298>
40088900:	e02f51        	l32r	a5, 400809bc <_init_end+0x5bc>
40088903:	0020c0        	memw
40088906:	0548      	l32i.n	a4, a5, 0
40088908:	440b      	addi.n	a4, a4, -1
4008890a:	0020c0        	memw
4008890d:	006542        	s32i	a4, a5, 0
40088910:	ffc882        	addi	a8, a8, -1
40088913:	00a052        	movi	a5, 0
40088916:	140c      	movi.n	a4, 1
40088918:	835430        	moveqz	a5, a4, a3
4008891b:	f47c      	movi.n	a4, -1
4008891d:	304480        	xor	a4, a4, a8
40088920:	054f40        	extui	a4, a4, 31, 1
40088923:	020547        	bnone	a5, a4, 40088929 <vTaskSwitchContext+0x2b1>
40088926:	ff94c6        	j	4008877d <vTaskSwitchContext+0x105>
40088929:	03eb30        	rsr.prid	a3
4008892c:	043d30        	extui	a3, a3, 13, 1
4008892f:	e02041        	l32r	a4, 400809b0 <_init_end+0x5b0>
40088932:	a03340        	addx4	a3, a3, a4
40088935:	040c      	movi.n	a4, 0
40088937:	0020c0        	memw
4008893a:	0349      	s32i.n	a4, a3, 0
4008893c:	f03d      	nop.n
4008893e:	f03d      	nop.n
40088940:	f03d      	nop.n
40088942:	0020f0        	nop
40088945:	e01ca1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088948:	ff62a5        	call8	40087f74 <vPortCPUReleaseMutex>
4008894b:	03eb30        	rsr.prid	a3
4008894e:	043d30        	extui	a3, a3, 13, 1
40088951:	df5c41        	l32r	a4, 400806c4 <_init_end+0x2c4>
40088954:	a03340        	addx4	a3, a3, a4
40088957:	0020c0        	memw
4008895a:	0338      	l32i.n	a3, a3, 0
4008895c:	d3a8      	l32i.n	a10, a3, 52
4008895e:	ff6c25        	call8	40088020 <vPortSetStackWatchpoint>
40088961:	02ad      	mov.n	a10, a2
40088963:	def981        	l32r	a8, 40080548 <_init_end+0x148>
40088966:	0008e0        	callx8	a8
40088969:	f01d      	retw.n
	...

4008896c <vTaskSetTimeOutState>:
4008896c:	004136        	entry	a1, 32
4008896f:	014256        	bnez	a2, 40088987 <vTaskSetTimeOutState+0x1b>
40088972:	e014d1        	l32r	a13, 400809c4 <_init_end+0x5c4>
40088975:	e014c1        	l32r	a12, 400809c8 <_init_end+0x5c8>
40088978:	dffcb1        	l32r	a11, 40080968 <_init_end+0x568>
4008897b:	dffca1        	l32r	a10, 4008096c <_init_end+0x56c>
4008897e:	dec681        	l32r	a8, 40080498 <_init_end+0x98>
40088981:	0008e0        	callx8	a8
40088984:	029e65        	call8	4008b36c <abort>
40088987:	e01181        	l32r	a8, 400809cc <_init_end+0x5cc>
4008898a:	0020c0        	memw
4008898d:	002882        	l32i	a8, a8, 0
40088990:	006282        	s32i	a8, a2, 0
40088993:	f03d      	nop.n
40088995:	f03d      	nop.n
40088997:	f03d      	nop.n
40088999:	f03d      	nop.n
4008899b:	dfff81        	l32r	a8, 40080998 <_init_end+0x598>
4008899e:	0020c0        	memw
400889a1:	002882        	l32i	a8, a8, 0
400889a4:	1289      	s32i.n	a8, a2, 4
400889a6:	f01d      	retw.n

400889a8 <xTaskGetCurrentTaskHandle>:
400889a8:	004136        	entry	a1, 32
400889ab:	0063a0        	rsil	a10, 3
400889ae:	03eb80        	rsr.prid	a8
400889b1:	048d80        	extui	a8, a8, 13, 1
400889b4:	df4421        	l32r	a2, 400806c4 <_init_end+0x2c4>
400889b7:	a08820        	addx4	a8, a8, a2
400889ba:	0020c0        	memw
400889bd:	0828      	l32i.n	a2, a8, 0
400889bf:	dee281        	l32r	a8, 40080548 <_init_end+0x148>
400889c2:	0008e0        	callx8	a8
400889c5:	f01d      	retw.n
	...

400889c8 <__getreent>:
400889c8:	004136        	entry	a1, 32
400889cb:	fffde5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400889ce:	00aa56        	bnez	a10, 400889dc <__getreent+0x14>
400889d1:	de8e21        	l32r	a2, 4008040c <_init_end+0xc>
400889d4:	002222        	l32i	a2, a2, 0
400889d7:	000090        	retw
400889da:	220000        	orb	b0, b0, b0
400889dd:	68ca      	add.n	a6, a8, a12
400889df:	f01d      	retw.n
400889e1:	000000        	ill

400889e4 <pcTaskGetTaskName>:
400889e4:	004136        	entry	a1, 32
400889e7:	007256        	bnez	a2, 400889f2 <pcTaskGetTaskName+0xe>
400889ea:	201110        	or	a1, a1, a1
400889ed:	fffba5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400889f0:	0a2d      	mov.n	a2, a10
400889f2:	32dc      	bnez.n	a2, 40088a09 <pcTaskGetTaskName+0x25>
400889f4:	dff7d1        	l32r	a13, 400809d0 <_init_end+0x5d0>
400889f7:	dff7c1        	l32r	a12, 400809d4 <_init_end+0x5d4>
400889fa:	dfdbb1        	l32r	a11, 40080968 <_init_end+0x568>
400889fd:	dfdba1        	l32r	a10, 4008096c <_init_end+0x56c>
40088a00:	dea681        	l32r	a8, 40080498 <_init_end+0x98>
40088a03:	0008e0        	callx8	a8
40088a06:	029665        	call8	4008b36c <abort>
40088a09:	38c222        	addi	a2, a2, 56
40088a0c:	f01d      	retw.n
	...

40088a10 <pvTaskGetThreadLocalStoragePointer>:
40088a10:	004136        	entry	a1, 32
40088a13:	1313e6        	bgei	a3, 1, 40088a2a <pvTaskGetThreadLocalStoragePointer+0x1a>
40088a16:	32cc      	bnez.n	a2, 40088a1d <pvTaskGetThreadLocalStoragePointer+0xd>
40088a18:	fff8e5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088a1b:	0a2d      	mov.n	a2, a10
40088a1d:	18c332        	addi	a3, a3, 24
40088a20:	a02320        	addx4	a2, a3, a2
40088a23:	0228      	l32i.n	a2, a2, 0
40088a25:	f01d      	retw.n
40088a27:	000000        	ill
40088a2a:	020c      	movi.n	a2, 0
40088a2c:	f01d      	retw.n
	...

40088a30 <xTaskGetAffinity>:
40088a30:	004136        	entry	a1, 32
40088a33:	004256        	bnez	a2, 40088a3b <xTaskGetAffinity+0xb>
40088a36:	fff725        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088a39:	0a2d      	mov.n	a2, a10
40088a3b:	122222        	l32i	a2, a2, 72
40088a3e:	f01d      	retw.n

40088a40 <xTaskGetCurrentTaskHandleForCPU>:
40088a40:	004136        	entry	a1, 32
40088a43:	0d22e6        	bgei	a2, 2, 40088a54 <xTaskGetCurrentTaskHandleForCPU+0x14>
40088a46:	df1f81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088a49:	a02280        	addx4	a2, a2, a8
40088a4c:	0020c0        	memw
40088a4f:	0228      	l32i.n	a2, a2, 0
40088a51:	f01d      	retw.n
40088a53:	020c00        	andb	b0, b12, b0
40088a56:	f01d      	retw.n

40088a58 <xTaskGetSchedulerState>:
40088a58:	004136        	entry	a1, 32
40088a5b:	0063a0        	rsil	a10, 3
40088a5e:	dfde81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088a61:	0020c0        	memw
40088a64:	0888      	l32i.n	a8, a8, 0
40088a66:	689c      	beqz.n	a8, 40088a80 <xTaskGetSchedulerState+0x28>
40088a68:	03eb80        	rsr.prid	a8
40088a6b:	048d80        	extui	a8, a8, 13, 1
40088a6e:	dfcb21        	l32r	a2, 4008099c <_init_end+0x59c>
40088a71:	a08820        	addx4	a8, a8, a2
40088a74:	0020c0        	memw
40088a77:	0828      	l32i.n	a2, a8, 0
40088a79:	82cc      	bnez.n	a2, 40088a85 <xTaskGetSchedulerState+0x2d>
40088a7b:	220c      	movi.n	a2, 2
40088a7d:	000186        	j	40088a87 <xTaskGetSchedulerState+0x2f>
40088a80:	120c      	movi.n	a2, 1
40088a82:	000046        	j	40088a87 <xTaskGetSchedulerState+0x2f>
40088a85:	020c      	movi.n	a2, 0
40088a87:	deb081        	l32r	a8, 40080548 <_init_end+0x148>
40088a8a:	0008e0        	callx8	a8
40088a8d:	f01d      	retw.n
	...

40088a90 <vTaskEnterCritical>:
40088a90:	006136        	entry	a1, 48
40088a93:	dfd131        	l32r	a3, 400809d8 <_init_end+0x5d8>
40088a96:	0020c0        	memw
40088a99:	0358      	l32i.n	a5, a3, 0
40088a9b:	558c      	beqz.n	a5, 40088aa4 <vTaskEnterCritical+0x14>
40088a9d:	006360        	rsil	a6, 3
40088aa0:	000086        	j	40088aa6 <vTaskEnterCritical+0x16>
40088aa3:	060c00        	lsi	f0, a12, 24
40088aa6:	df6e31        	l32r	a3, 40080860 <_init_end+0x460>
40088aa9:	323a      	add.n	a3, a2, a3
40088aab:	df6e41        	l32r	a4, 40080864 <_init_end+0x464>
40088aae:	02b437        	bgeu	a4, a3, 40088ab4 <vTaskEnterCritical+0x24>
40088ab1:	002006        	j	40088b35 <vTaskEnterCritical+0xa5>
40088ab4:	03eb30        	rsr.prid	a3
40088ab7:	dfa041        	l32r	a4, 40080938 <_init_end+0x538>
40088aba:	304340        	xor	a4, a3, a4
40088abd:	036132        	s32i	a3, a1, 12
40088ac0:	c1cb      	addi.n	a12, a1, 12
40088ac2:	f03d      	nop.n
40088ac4:	f03d      	nop.n
40088ac6:	f03d      	nop.n
40088ac8:	df95b1        	l32r	a11, 4008091c <_init_end+0x51c>
40088acb:	02ad      	mov.n	a10, a2
40088acd:	ff56e5        	call8	4008803c <uxPortCompareSetExtram>
40088ad0:	3188      	l32i.n	a8, a1, 12
40088ad2:	e71847        	beq	a8, a4, 40088abd <vTaskEnterCritical+0x2d>
40088ad5:	141387        	beq	a3, a8, 40088aed <vTaskEnterCritical+0x5d>
40088ad8:	df9131        	l32r	a3, 4008091c <_init_end+0x51c>
40088adb:	0e1837        	beq	a8, a3, 40088aed <vTaskEnterCritical+0x5d>
40088ade:	dfbfd1        	l32r	a13, 400809dc <_init_end+0x5dc>
40088ae1:	dfbfc1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088ae4:	69a0b2        	movi	a11, 105
40088ae7:	dfbfa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088aea:	51fe25        	call8	400daacc <__assert_func>
40088aed:	df9531        	l32r	a3, 40080944 <_init_end+0x544>
40088af0:	883a      	add.n	a8, a8, a3
40088af2:	130c      	movi.n	a3, 1
40088af4:	070c      	movi.n	a7, 0
40088af6:	074d      	mov.n	a4, a7
40088af8:	934380        	movnez	a4, a3, a8
40088afb:	748040        	extui	a8, a4, 0, 8
40088afe:	1248      	l32i.n	a4, a2, 4
40088b00:	933740        	movnez	a3, a7, a4
40088b03:	743030        	extui	a3, a3, 0, 8
40088b06:	0e9837        	bne	a8, a3, 40088b18 <vTaskEnterCritical+0x88>
40088b09:	dfb7d1        	l32r	a13, 400809e8 <_init_end+0x5e8>
40088b0c:	dfb5c1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088b0f:	6aa0b2        	movi	a11, 106
40088b12:	dfb4a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b15:	51fb65        	call8	400daacc <__assert_func>
40088b18:	fea032        	movi	a3, 254
40088b1b:	0eb347        	bgeu	a3, a4, 40088b2d <vTaskEnterCritical+0x9d>
40088b1e:	dfb3d1        	l32r	a13, 400809ec <_init_end+0x5ec>
40088b21:	dfafc1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088b24:	6ba0b2        	movi	a11, 107
40088b27:	dfafa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b2a:	51fa25        	call8	400daacc <__assert_func>
40088b2d:	441b      	addi.n	a4, a4, 1
40088b2f:	1249      	s32i.n	a4, a2, 4
40088b31:	001c06        	j	40088ba5 <vTaskEnterCritical+0x115>
40088b34:	eb3000        	f64cmpl	a3, a0, a0
40088b37:	807103        	lsi	f0, a1, 0x200
40088b3a:	df          	.byte 0xdf
40088b3b:	307370        	xor	a7, a3, a7
40088b3e:	038d      	mov.n	a8, a3
40088b40:	df7741        	l32r	a4, 4008091c <_init_end+0x51c>
40088b43:	130c40        	wsr.scompare1	a4
40088b46:	00e282        	s32c1i	a8, a2, 0
40088b49:	f11787        	beq	a7, a8, 40088b3e <vTaskEnterCritical+0xae>
40088b4c:	111387        	beq	a3, a8, 40088b61 <vTaskEnterCritical+0xd1>
40088b4f:	0e1847        	beq	a8, a4, 40088b61 <vTaskEnterCritical+0xd1>
40088b52:	dfa2d1        	l32r	a13, 400809dc <_init_end+0x5dc>
40088b55:	dfa6c1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b58:	69a0b2        	movi	a11, 105
40088b5b:	dfa2a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b5e:	51f6e5        	call8	400daacc <__assert_func>
40088b61:	df7831        	l32r	a3, 40080944 <_init_end+0x544>
40088b64:	883a      	add.n	a8, a8, a3
40088b66:	130c      	movi.n	a3, 1
40088b68:	070c      	movi.n	a7, 0
40088b6a:	074d      	mov.n	a4, a7
40088b6c:	934380        	movnez	a4, a3, a8
40088b6f:	748040        	extui	a8, a4, 0, 8
40088b72:	1248      	l32i.n	a4, a2, 4
40088b74:	933740        	movnez	a3, a7, a4
40088b77:	743030        	extui	a3, a3, 0, 8
40088b7a:	0e9837        	bne	a8, a3, 40088b8c <vTaskEnterCritical+0xfc>
40088b7d:	df9ad1        	l32r	a13, 400809e8 <_init_end+0x5e8>
40088b80:	df9cc1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b83:	6aa0b2        	movi	a11, 106
40088b86:	df97a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b89:	51f425        	call8	400daacc <__assert_func>
40088b8c:	fea032        	movi	a3, 254
40088b8f:	0eb347        	bgeu	a3, a4, 40088ba1 <vTaskEnterCritical+0x111>
40088b92:	df96d1        	l32r	a13, 400809ec <_init_end+0x5ec>
40088b95:	df96c1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b98:	6ba0b2        	movi	a11, 107
40088b9b:	df92a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b9e:	51f2e5        	call8	400daacc <__assert_func>
40088ba1:	441b      	addi.n	a4, a4, 1
40088ba3:	1249      	s32i.n	a4, a2, 4
40088ba5:	35ac      	beqz.n	a5, 40088bcc <vTaskEnterCritical+0x13c>
40088ba7:	03eb20        	rsr.prid	a2
40088baa:	042d20        	extui	a2, a2, 13, 1
40088bad:	f03d      	nop.n
40088baf:	f03d      	nop.n
40088bb1:	f03d      	nop.n
40088bb3:	dec431        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088bb6:	a02230        	addx4	a2, a2, a3
40088bb9:	0020c0        	memw
40088bbc:	0238      	l32i.n	a3, a2, 0
40088bbe:	142322        	l32i	a2, a3, 80
40088bc1:	221b      	addi.n	a2, a2, 1
40088bc3:	146322        	s32i	a2, a3, 80
40088bc6:	021266        	bnei	a2, 1, 40088bcc <vTaskEnterCritical+0x13c>
40088bc9:	156362        	s32i	a6, a3, 84
40088bcc:	f01d      	retw.n
	...

40088bd0 <vTaskExitCritical>:
40088bd0:	004136        	entry	a1, 32
40088bd3:	df2381        	l32r	a8, 40080860 <_init_end+0x460>
40088bd6:	828a      	add.n	a8, a2, a8
40088bd8:	df2391        	l32r	a9, 40080864 <_init_end+0x464>
40088bdb:	493987        	bltu	a9, a8, 40088c28 <vTaskExitCritical+0x58>
40088bde:	03eb80        	rsr.prid	a8
40088be1:	0298      	l32i.n	a9, a2, 0
40088be3:	0e1987        	beq	a9, a8, 40088bf5 <vTaskExitCritical+0x25>
40088be6:	df83d1        	l32r	a13, 400809f4 <_init_end+0x5f4>
40088be9:	df83c1        	l32r	a12, 400809f8 <_init_end+0x5f8>
40088bec:	9da0b2        	movi	a11, 157
40088bef:	df7da1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088bf2:	51eda5        	call8	400daacc <__assert_func>
40088bf5:	1288      	l32i.n	a8, a2, 4
40088bf7:	880b      	addi.n	a8, a8, -1
40088bf9:	1289      	s32i.n	a8, a2, 4
40088bfb:	18dc      	bnez.n	a8, 40088c10 <vTaskExitCritical+0x40>
40088bfd:	f03d      	nop.n
40088bff:	f03d      	nop.n
40088c01:	f03d      	nop.n
40088c03:	f03d      	nop.n
40088c05:	df4581        	l32r	a8, 4008091c <_init_end+0x51c>
40088c08:	0289      	s32i.n	a8, a2, 0
40088c0a:	0018c6        	j	40088c71 <vTaskExitCritical+0xa1>
40088c0d:	000000        	ill
40088c10:	ffa022        	movi	a2, 255
40088c13:	5ab287        	bgeu	a2, a8, 40088c71 <vTaskExitCritical+0xa1>
40088c16:	df79d1        	l32r	a13, 400809fc <_init_end+0x5fc>
40088c19:	df77c1        	l32r	a12, 400809f8 <_init_end+0x5f8>
40088c1c:	a3a0b2        	movi	a11, 163
40088c1f:	df71a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088c22:	201110        	or	a1, a1, a1
40088c25:	51ea65        	call8	400daacc <__assert_func>
40088c28:	03eb80        	rsr.prid	a8
40088c2b:	0298      	l32i.n	a9, a2, 0
40088c2d:	111987        	beq	a9, a8, 40088c42 <vTaskExitCritical+0x72>
40088c30:	df71d1        	l32r	a13, 400809f4 <_init_end+0x5f4>
40088c33:	df73c1        	l32r	a12, 40080a00 <_init_end+0x600>
40088c36:	9da0b2        	movi	a11, 157
40088c39:	df6aa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088c3c:	201110        	or	a1, a1, a1
40088c3f:	51e8e5        	call8	400daacc <__assert_func>
40088c42:	1288      	l32i.n	a8, a2, 4
40088c44:	880b      	addi.n	a8, a8, -1
40088c46:	1289      	s32i.n	a8, a2, 4
40088c48:	08dc      	bnez.n	a8, 40088c5c <vTaskExitCritical+0x8c>
40088c4a:	f03d      	nop.n
40088c4c:	f03d      	nop.n
40088c4e:	f03d      	nop.n
40088c50:	f03d      	nop.n
40088c52:	df3281        	l32r	a8, 4008091c <_init_end+0x51c>
40088c55:	0289      	s32i.n	a8, a2, 0
40088c57:	000586        	j	40088c71 <vTaskExitCritical+0xa1>
40088c5a:	220000        	orb	b0, b0, b0
40088c5d:	87ffa0        	lsi	f10, a15, 0x21c
40088c60:	d10eb2        	l8ui	a11, a14, 209
40088c63:	c1df66        	bnei	a15, 64, 40088c28 <vTaskExitCritical+0x58>
40088c66:	b2df66        	bnei	a15, 64, 40088c1c <vTaskExitCritical+0x4c>
40088c69:	a1a3a0        	lsi	f10, a3, 0x284
40088c6c:	5e          	.byte 0x5e
40088c6d:	df          	.byte 0xdf
40088c6e:	51e5e5        	call8	400daacc <__assert_func>
40088c71:	df5921        	l32r	a2, 400809d8 <_init_end+0x5d8>
40088c74:	0020c0        	memw
40088c77:	002222        	l32i	a2, a2, 0
40088c7a:	02e216        	beqz	a2, 40088cac <vTaskExitCritical+0xdc>
40088c7d:	03eb20        	rsr.prid	a2
40088c80:	042d20        	extui	a2, a2, 13, 1
40088c83:	de9081        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088c86:	a02280        	addx4	a2, a2, a8
40088c89:	0020c0        	memw
40088c8c:	002282        	l32i	a8, a2, 0
40088c8f:	142822        	l32i	a2, a8, 80
40088c92:	629c      	beqz.n	a2, 40088cac <vTaskExitCritical+0xdc>
40088c94:	220b      	addi.n	a2, a2, -1
40088c96:	146822        	s32i	a2, a8, 80
40088c99:	f2cc      	bnez.n	a2, 40088cac <vTaskExitCritical+0xdc>
40088c9b:	f03d      	nop.n
40088c9d:	f03d      	nop.n
40088c9f:	f03d      	nop.n
40088ca1:	f03d      	nop.n
40088ca3:	1528a2        	l32i	a10, a8, 84
40088ca6:	de2881        	l32r	a8, 40080548 <_init_end+0x148>
40088ca9:	0008e0        	callx8	a8
40088cac:	f01d      	retw.n
	...

40088cb0 <prvAddNewTaskToReadyList>:
40088cb0:	004136        	entry	a1, 32
40088cb3:	fec482        	addi	a8, a4, -2
40088cb6:	df5391        	l32r	a9, 40080a04 <_init_end+0x604>
40088cb9:	143987        	bltu	a9, a8, 40088cd1 <prvAddNewTaskToReadyList+0x21>
40088cbc:	df53d1        	l32r	a13, 40080a08 <_init_end+0x608>
40088cbf:	2da4c2        	movi	a12, 0x42d
40088cc2:	df29b1        	l32r	a11, 40080968 <_init_end+0x568>
40088cc5:	df29a1        	l32r	a10, 4008096c <_init_end+0x56c>
40088cc8:	ddf481        	l32r	a8, 40080498 <_init_end+0x98>
40088ccb:	0008e0        	callx8	a8
40088cce:	0269e5        	call8	4008b36c <abort>
40088cd1:	df39a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088cd4:	ffdba5        	call8	40088a90 <vTaskEnterCritical>
40088cd7:	df4d91        	l32r	a9, 40080a0c <_init_end+0x60c>
40088cda:	0020c0        	memw
40088cdd:	0988      	l32i.n	a8, a9, 0
40088cdf:	881b      	addi.n	a8, a8, 1
40088ce1:	0020c0        	memw
40088ce4:	0989      	s32i.n	a8, a9, 0
40088ce6:	f03d      	nop.n
40088ce8:	f03d      	nop.n
40088cea:	f03d      	nop.n
40088cec:	f03d      	nop.n
40088cee:	de0c81        	l32r	a8, 40080520 <_init_end+0x120>
40088cf1:	3f9487        	bne	a4, a8, 40088d34 <prvAddNewTaskToReadyList+0x84>
40088cf4:	de7441        	l32r	a4, 400806c4 <_init_end+0x2c4>
40088cf7:	0020c0        	memw
40088cfa:	0488      	l32i.n	a8, a4, 0
40088cfc:	0020c0        	memw
40088cff:	1448      	l32i.n	a4, a4, 4
40088d01:	d89c      	beqz.n	a8, 40088d22 <prvAddNewTaskToReadyList+0x72>
40088d03:	14ac      	beqz.n	a4, 40088d28 <prvAddNewTaskToReadyList+0x78>
40088d05:	c898      	l32i.n	a9, a8, 48
40088d07:	c288      	l32i.n	a8, a2, 48
40088d09:	04b987        	bgeu	a9, a8, 40088d11 <prvAddNewTaskToReadyList+0x61>
40088d0c:	c4a8      	l32i.n	a10, a4, 48
40088d0e:	1b39a7        	bltu	a9, a10, 40088d2d <prvAddNewTaskToReadyList+0x7d>
40088d11:	c448      	l32i.n	a4, a4, 48
40088d13:	1b3487        	bltu	a4, a8, 40088d32 <prvAddNewTaskToReadyList+0x82>
40088d16:	03eb40        	rsr.prid	a4
40088d19:	044d40        	extui	a4, a4, 13, 1
40088d1c:	000506        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d1f:	000000        	ill
40088d22:	040c      	movi.n	a4, 0
40088d24:	000306        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d27:	140c00        	extui	a0, a0, 12, 2
40088d2a:	000186        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d2d:	040c      	movi.n	a4, 0
40088d2f:	000046        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d32:	140c      	movi.n	a4, 1
40088d34:	de6481        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d37:	a08480        	addx4	a8, a4, a8
40088d3a:	0020c0        	memw
40088d3d:	002882        	l32i	a8, a8, 0
40088d40:	024856        	bnez	a8, 40088d68 <prvAddNewTaskToReadyList+0xb8>
40088d43:	de6081        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d46:	a08480        	addx4	a8, a4, a8
40088d49:	0020c0        	memw
40088d4c:	006822        	s32i	a2, a8, 0
40088d4f:	f03d      	nop.n
40088d51:	f03d      	nop.n
40088d53:	f03d      	nop.n
40088d55:	f03d      	nop.n
40088d57:	df2d81        	l32r	a8, 40080a0c <_init_end+0x60c>
40088d5a:	0020c0        	memw
40088d5d:	0888      	l32i.n	a8, a8, 0
40088d5f:	391866        	bnei	a8, 1, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d62:	ff7325        	call8	40088494 <prvInitialiseTaskLists>
40088d65:	000cc6        	j	40088d9c <prvAddNewTaskToReadyList+0xec>
40088d68:	df1c81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088d6b:	0020c0        	memw
40088d6e:	0888      	l32i.n	a8, a8, 0
40088d70:	88ec      	bnez.n	a8, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d72:	de5481        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d75:	a08480        	addx4	a8, a4, a8
40088d78:	0020c0        	memw
40088d7b:	0888      	l32i.n	a8, a8, 0
40088d7d:	089c      	beqz.n	a8, 40088d91 <prvAddNewTaskToReadyList+0xe1>
40088d7f:	de5181        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d82:	a08480        	addx4	a8, a4, a8
40088d85:	0020c0        	memw
40088d88:	0888      	l32i.n	a8, a8, 0
40088d8a:	c888      	l32i.n	a8, a8, 48
40088d8c:	c298      	l32i.n	a9, a2, 48
40088d8e:	0a3987        	bltu	a9, a8, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d91:	de4c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d94:	a08480        	addx4	a8, a4, a8
40088d97:	0020c0        	memw
40088d9a:	0829      	s32i.n	a2, a8, 0
40088d9c:	f03d      	nop.n
40088d9e:	f03d      	nop.n
40088da0:	f03d      	nop.n
40088da2:	f03d      	nop.n
40088da4:	df1b91        	l32r	a9, 40080a10 <_init_end+0x610>
40088da7:	0988      	l32i.n	a8, a9, 0
40088da9:	881b      	addi.n	a8, a8, 1
40088dab:	0989      	s32i.n	a8, a9, 0
40088dad:	f03d      	nop.n
40088daf:	f03d      	nop.n
40088db1:	f03d      	nop.n
40088db3:	f03d      	nop.n
40088db5:	0c2282        	l32i	a8, a2, 48
40088db8:	df0191        	l32r	a9, 400809bc <_init_end+0x5bc>
40088dbb:	0020c0        	memw
40088dbe:	002992        	l32i	a9, a9, 0
40088dc1:	07b987        	bgeu	a9, a8, 40088dcc <prvAddNewTaskToReadyList+0x11c>
40088dc4:	defe91        	l32r	a9, 400809bc <_init_end+0x5bc>
40088dc7:	0020c0        	memw
40088dca:	0989      	s32i.n	a8, a9, 0
40088dcc:	a08880        	addx4	a8, a8, a8
40088dcf:	1198e0        	slli	a9, a8, 2
40088dd2:	b28b      	addi.n	a11, a2, 8
40088dd4:	f03d      	nop.n
40088dd6:	dee6a1        	l32r	a10, 40080970 <_init_end+0x570>
40088dd9:	aa9a      	add.n	a10, a10, a9
40088ddb:	014925        	call8	4008a26c <vListInsertEnd>
40088dde:	def6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088de1:	ffdee5        	call8	40088bd0 <vTaskExitCritical>
40088de4:	defd81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088de7:	0020c0        	memw
40088dea:	0888      	l32i.n	a8, a8, 0
40088dec:	042816        	beqz	a8, 40088e32 <prvAddNewTaskToReadyList+0x182>
40088def:	def2a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088df2:	ffc9e5        	call8	40088a90 <vTaskEnterCritical>
40088df5:	de3381        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088df8:	a08480        	addx4	a8, a4, a8
40088dfb:	0020c0        	memw
40088dfe:	0888      	l32i.n	a8, a8, 0
40088e00:	007816        	beqz	a8, 40088e0b <prvAddNewTaskToReadyList+0x15b>
40088e03:	c898      	l32i.n	a9, a8, 48
40088e05:	0c2282        	l32i	a8, a2, 48
40088e08:	1db987        	bgeu	a9, a8, 40088e29 <prvAddNewTaskToReadyList+0x179>
40088e0b:	03eb80        	rsr.prid	a8
40088e0e:	048d80        	extui	a8, a8, 13, 1
40088e11:	0d9487        	bne	a4, a8, 40088e22 <prvAddNewTaskToReadyList+0x172>
40088e14:	03eba0        	rsr.prid	a10
40088e17:	04ada0        	extui	a10, a10, 13, 1
40088e1a:	f83ae5        	call8	400811c8 <esp_crosscore_int_send_yield>
40088e1d:	000206        	j	40088e29 <prvAddNewTaskToReadyList+0x179>
40088e20:	b80000        	lsi	f0, a0, 0x2e0
40088e23:	04adc2        	movi	a12, 0xfffffd04
40088e26:	ff79a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
40088e29:	dee3a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088e2c:	201110        	or	a1, a1, a1
40088e2f:	ffda25        	call8	40088bd0 <vTaskExitCritical>
40088e32:	f01d      	retw.n

40088e34 <xTaskCreatePinnedToCore>:
40088e34:	008136        	entry	a1, 64
40088e37:	076172        	s32i	a7, a1, 28
40088e3a:	066132        	s32i	a3, a1, 24
40088e3d:	f03d      	nop.n
40088e3f:	f03d      	nop.n
40088e41:	f03d      	nop.n
40088e43:	f03d      	nop.n
40088e45:	de61b1        	l32r	a11, 400807cc <_init_end+0x3cc>
40088e48:	04ad      	mov.n	a10, a4
40088e4a:	fb4ca5        	call8	40084314 <heap_caps_malloc>
40088e4d:	0a7d      	mov.n	a7, a10
40088e4f:	ba9c      	beqz.n	a10, 40088e6e <xTaskCreatePinnedToCore+0x3a>
40088e51:	de5eb1        	l32r	a11, 400807cc <_init_end+0x3cc>
40088e54:	64a1a2        	movi	a10, 0x164
40088e57:	fb4be5        	call8	40084314 <heap_caps_malloc>
40088e5a:	0a3d      	mov.n	a3, a10
40088e5c:	3a8c      	beqz.n	a10, 40088e63 <xTaskCreatePinnedToCore+0x2f>
40088e5e:	da79      	s32i.n	a7, a10, 52
40088e60:	000346        	j	40088e71 <xTaskCreatePinnedToCore+0x3d>
40088e63:	07ad      	mov.n	a10, a7
40088e65:	de5f81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40088e68:	0008e0        	callx8	a8
40088e6b:	000086        	j	40088e71 <xTaskCreatePinnedToCore+0x3d>
40088e6e:	00a032        	movi	a3, 0
40088e71:	044316        	beqz	a3, 40088eb9 <xTaskCreatePinnedToCore+0x85>
40088e74:	01d372        	addmi	a7, a3, 0x100
40088e77:	00a082        	movi	a8, 0
40088e7a:	604782        	s8i	a8, a7, 96
40088e7d:	0020c0        	memw
40088e80:	f03d      	nop.n
40088e82:	f03d      	nop.n
40088e84:	f03d      	nop.n
40088e86:	f03d      	nop.n
40088e88:	102182        	l32i	a8, a1, 64
40088e8b:	2189      	s32i.n	a8, a1, 8
40088e8d:	070c      	movi.n	a7, 0
40088e8f:	1179      	s32i.n	a7, a1, 4
40088e91:	0139      	s32i.n	a3, a1, 0
40088e93:	f03d      	nop.n
40088e95:	f03d      	nop.n
40088e97:	f03d      	nop.n
40088e99:	f03d      	nop.n
40088e9b:	71f8      	l32i.n	a15, a1, 28
40088e9d:	06ed      	mov.n	a14, a6
40088e9f:	05dd      	mov.n	a13, a5
40088ea1:	04cd      	mov.n	a12, a4
40088ea3:	61b8      	l32i.n	a11, a1, 24
40088ea5:	20a220        	or	a10, a2, a2
40088ea8:	ff4fa5        	call8	400883a4 <prvInitialiseNewTask>
40088eab:	1021c2        	l32i	a12, a1, 64
40088eae:	02bd      	mov.n	a11, a2
40088eb0:	03ad      	mov.n	a10, a3
40088eb2:	ffdfe5        	call8	40088cb0 <prvAddNewTaskToReadyList>
40088eb5:	120c      	movi.n	a2, 1
40088eb7:	f01d      	retw.n
40088eb9:	f27c      	movi.n	a2, -1
40088ebb:	f01d      	retw.n
40088ebd:	000000        	ill

40088ec0 <vTaskStartScheduler>:
40088ec0:	00a136        	entry	a1, 80
40088ec3:	de6c21        	l32r	a2, 40080874 <_init_end+0x474>
40088ec6:	0020c0        	memw
40088ec9:	0228      	l32i.n	a2, a2, 0
40088ecb:	0020c0        	memw
40088ece:	b129      	s32i.n	a2, a1, 44
40088ed0:	020c      	movi.n	a2, 0
40088ed2:	000c46        	j	40088f07 <vTaskStartScheduler+0x47>
40088ed5:	20d220        	or	a13, a2, a2
40088ed8:	decfc1        	l32r	a12, 40080a14 <_init_end+0x614>
40088edb:	0b1c      	movi.n	a11, 16
40088edd:	1cc1a2        	addi	a10, a1, 28
40088ee0:	52f465        	call8	400dbe28 <snprintf>
40088ee3:	0129      	s32i.n	a2, a1, 0
40088ee5:	f03d      	nop.n
40088ee7:	f03d      	nop.n
40088ee9:	f03d      	nop.n
40088eeb:	f03d      	nop.n
40088eed:	deacf1        	l32r	a15, 400809a0 <_init_end+0x5a0>
40088ef0:	a0f2f0        	addx4	a15, a2, a15
40088ef3:	00a0e2        	movi	a14, 0
40088ef6:	20dee0        	or	a13, a14, a14
40088ef9:	00a4c2        	movi	a12, 0x400
40088efc:	1cc1b2        	addi	a11, a1, 28
40088eff:	dec6a1        	l32r	a10, 40080a18 <_init_end+0x618>
40088f02:	fff325        	call8	40088e34 <xTaskCreatePinnedToCore>
40088f05:	221b      	addi.n	a2, a2, 1
40088f07:	ca22a6        	blti	a2, 2, 40088ed5 <vTaskStartScheduler+0x15>
40088f0a:	021a66        	bnei	a10, 1, 40088f10 <vTaskStartScheduler+0x50>
40088f0d:	00d2a5        	call8	40089c38 <xTimerCreateTimerTask>
40088f10:	241a66        	bnei	a10, 1, 40088f38 <vTaskStartScheduler+0x78>
40088f13:	006320        	rsil	a2, 3
40088f16:	080c      	movi.n	a8, 0
40088f18:	dea021        	l32r	a2, 40080998 <_init_end+0x598>
40088f1b:	0020c0        	memw
40088f1e:	0289      	s32i.n	a8, a2, 0
40088f20:	180c      	movi.n	a8, 1
40088f22:	f03d      	nop.n
40088f24:	f03d      	nop.n
40088f26:	0020f0        	nop
40088f29:	deab21        	l32r	a2, 400809d8 <_init_end+0x5d8>
40088f2c:	0020c0        	memw
40088f2f:	0289      	s32i.n	a8, a2, 0
40088f31:	fefbe5        	call8	40087ef0 <xPortStartScheduler>
40088f34:	000606        	j	40088f50 <vTaskStartScheduler+0x90>
40088f37:	4a5600        	madd.s	f5, f6, f0
40088f3a:	b8d101        	l32r	a0, 40077280 <__udivmoddi4+0x1268c>
40088f3d:	de          	.byte 0xde
40088f3e:	deb8c1        	l32r	a12, 40080a20 <_init_end+0x620>
40088f41:	de89b1        	l32r	a11, 40080968 <_init_end+0x568>
40088f44:	de8aa1        	l32r	a10, 4008096c <_init_end+0x56c>
40088f47:	dd5481        	l32r	a8, 40080498 <_init_end+0x98>
40088f4a:	0008e0        	callx8	a8
40088f4d:	0241e5        	call8	4008b36c <abort>
40088f50:	0020c0        	memw
40088f53:	0b2182        	l32i	a8, a1, 44
40088f56:	de4721        	l32r	a2, 40080874 <_init_end+0x474>
40088f59:	0020c0        	memw
40088f5c:	0228      	l32i.n	a2, a2, 0
40088f5e:	021827        	beq	a8, a2, 40088f64 <vTaskStartScheduler+0xa4>
40088f61:	4d34a5        	call8	400d62ac <__stack_chk_fail>
40088f64:	f01d      	retw.n
	...

40088f68 <vTaskDelete>:
40088f68:	004136        	entry	a1, 32
40088f6b:	03eb30        	rsr.prid	a3
40088f6e:	043d30        	extui	a3, a3, 13, 1
40088f71:	de91a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088f74:	ffb1a5        	call8	40088a90 <vTaskEnterCritical>
40088f77:	005256        	bnez	a2, 40088f80 <vTaskDelete+0x18>
40088f7a:	ffa2e5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088f7d:	202aa0        	or	a2, a10, a10
40088f80:	08c242        	addi	a4, a2, 8
40088f83:	20a440        	or	a10, a4, a4
40088f86:	013525        	call8	4008a2d8 <uxListRemove>
40088f89:	0b2282        	l32i	a8, a2, 44
40088f8c:	488c      	beqz.n	a8, 40088f94 <vTaskDelete+0x2c>
40088f8e:	1cc2a2        	addi	a10, a2, 28
40088f91:	013465        	call8	4008a2d8 <uxListRemove>
40088f94:	de9f91        	l32r	a9, 40080a10 <_init_end+0x610>
40088f97:	0988      	l32i.n	a8, a9, 0
40088f99:	881b      	addi.n	a8, a8, 1
40088f9b:	0989      	s32i.n	a8, a9, 0
40088f9d:	f03d      	nop.n
40088f9f:	f03d      	nop.n
40088fa1:	f03d      	nop.n
40088fa3:	f03d      	nop.n
40088fa5:	ddc781        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088fa8:	a08380        	addx4	a8, a3, a8
40088fab:	0020c0        	memw
40088fae:	0888      	l32i.n	a8, a8, 0
40088fb0:	1a1287        	beq	a2, a8, 40088fce <vTaskDelete+0x66>
40088fb3:	090c      	movi.n	a9, 0
40088fb5:	180c      	movi.n	a8, 1
40088fb7:	938930        	movnez	a8, a9, a3
40088fba:	ddc291        	l32r	a9, 400806c4 <_init_end+0x2c4>
40088fbd:	a09890        	addx4	a9, a8, a9
40088fc0:	0020c0        	memw
40088fc3:	0998      	l32i.n	a9, a9, 0
40088fc5:	051297        	beq	a2, a9, 40088fce <vTaskDelete+0x66>
40088fc8:	122292        	l32i	a9, a2, 72
40088fcb:	1e9897        	bne	a8, a9, 40088fed <vTaskDelete+0x85>
40088fce:	20b440        	or	a11, a4, a4
40088fd1:	de6ca1        	l32r	a10, 40080984 <_init_end+0x584>
40088fd4:	012965        	call8	4008a26c <vListInsertEnd>
40088fd7:	de9381        	l32r	a8, 40080a24 <_init_end+0x624>
40088fda:	0020c0        	memw
40088fdd:	002842        	l32i	a4, a8, 0
40088fe0:	01c442        	addi	a4, a4, 1
40088fe3:	0020c0        	memw
40088fe6:	0849      	s32i.n	a4, a8, 0
40088fe8:	040c      	movi.n	a4, 0
40088fea:	0004c6        	j	40089001 <vTaskDelete+0x99>
40088fed:	de8781        	l32r	a8, 40080a0c <_init_end+0x60c>
40088ff0:	0020c0        	memw
40088ff3:	0848      	l32i.n	a4, a8, 0
40088ff5:	440b      	addi.n	a4, a4, -1
40088ff7:	0020c0        	memw
40088ffa:	0849      	s32i.n	a4, a8, 0
40088ffc:	ff3325        	call8	40088330 <prvResetNextTaskUnblockTime>
40088fff:	140c      	movi.n	a4, 1
40089001:	de6da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089004:	ffbca5        	call8	40088bd0 <vTaskExitCritical>
40089007:	091466        	bnei	a4, 1, 40089014 <vTaskDelete+0xac>
4008900a:	02ad      	mov.n	a10, a2
4008900c:	ff3565        	call8	40088364 <prvDeleteTLS>
4008900f:	02ad      	mov.n	a10, a2
40089011:	ff4e65        	call8	400884f8 <prvDeleteTCB>
40089014:	de7141        	l32r	a4, 400809d8 <_init_end+0x5d8>
40089017:	0020c0        	memw
4008901a:	002442        	l32i	a4, a4, 0
4008901d:	057416        	beqz	a4, 40089078 <vTaskDelete+0x110>
40089020:	dda941        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089023:	a04340        	addx4	a4, a3, a4
40089026:	0020c0        	memw
40089029:	002442        	l32i	a4, a4, 0
4008902c:	2d9247        	bne	a2, a4, 4008905d <vTaskDelete+0xf5>
4008902f:	de5ba1        	l32r	a10, 4008099c <_init_end+0x59c>
40089032:	a033a0        	addx4	a3, a3, a10
40089035:	0020c0        	memw
40089038:	0328      	l32i.n	a2, a3, 0
4008903a:	329c      	beqz.n	a2, 40089051 <vTaskDelete+0xe9>
4008903c:	de7bd1        	l32r	a13, 40080a28 <_init_end+0x628>
4008903f:	19a5c2        	movi	a12, 0x519
40089042:	de49b1        	l32r	a11, 40080968 <_init_end+0x568>
40089045:	de49a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089048:	dd1481        	l32r	a8, 40080498 <_init_end+0x98>
4008904b:	0008e0        	callx8	a8
4008904e:	0231e5        	call8	4008b36c <abort>
40089051:	03eba0        	rsr.prid	a10
40089054:	04ada0        	extui	a10, a10, 13, 1
40089057:	f81725        	call8	400811c8 <esp_crosscore_int_send_yield>
4008905a:	f01d      	retw.n
4008905c:	a04200        	addx4	a4, a2, a0
4008905f:	a0a200        	addx4	a10, a2, a0
40089062:	a43001        	l32r	a0, 40072124 <__udivmoddi4+0xd530>
40089065:	973193        	lsi	f9, a1, 0x25c
40089068:	30dd      	lsi	f13, a0, 0
4008906a:	a03a      	add.n	a10, a0, a3
4008906c:	0020c0        	memw
4008906f:	002332        	l32i	a3, a3, 0
40089072:	029237        	bne	a2, a3, 40089078 <vTaskDelete+0x110>
40089075:	feeae5        	call8	40087f24 <vPortYieldOtherCore>
40089078:	f01d      	retw.n
	...

4008907c <vTaskDelay>:
4008907c:	004136        	entry	a1, 32
4008907f:	062216        	beqz	a2, 400890e5 <vTaskDelay+0x69>
40089082:	03eb80        	rsr.prid	a8
40089085:	048d80        	extui	a8, a8, 13, 1
40089088:	de4531        	l32r	a3, 4008099c <_init_end+0x59c>
4008908b:	a08830        	addx4	a8, a8, a3
4008908e:	0020c0        	memw
40089091:	002832        	l32i	a3, a8, 0
40089094:	014316        	beqz	a3, 400890ac <vTaskDelay+0x30>
40089097:	de65d1        	l32r	a13, 40080a2c <_init_end+0x62c>
4008909a:	9ea5c2        	movi	a12, 0x59e
4008909d:	de32b1        	l32r	a11, 40080968 <_init_end+0x568>
400890a0:	de33a1        	l32r	a10, 4008096c <_init_end+0x56c>
400890a3:	dcfd81        	l32r	a8, 40080498 <_init_end+0x98>
400890a6:	0008e0        	callx8	a8
400890a9:	022c25        	call8	4008b36c <abort>
400890ac:	de4331        	l32r	a3, 400809b8 <_init_end+0x5b8>
400890af:	20a330        	or	a10, a3, a3
400890b2:	ff9de5        	call8	40088a90 <vTaskEnterCritical>
400890b5:	de3881        	l32r	a8, 40080998 <_init_end+0x598>
400890b8:	0020c0        	memw
400890bb:	0888      	l32i.n	a8, a8, 0
400890bd:	228a      	add.n	a2, a2, a8
400890bf:	03eb80        	rsr.prid	a8
400890c2:	048d80        	extui	a8, a8, 13, 1
400890c5:	dd7f91        	l32r	a9, 400806c4 <_init_end+0x2c4>
400890c8:	a08890        	addx4	a8, a8, a9
400890cb:	0020c0        	memw
400890ce:	08a8      	l32i.n	a10, a8, 0
400890d0:	aa8b      	addi.n	a10, a10, 8
400890d2:	012065        	call8	4008a2d8 <uxListRemove>
400890d5:	03eba0        	rsr.prid	a10
400890d8:	04ada0        	extui	a10, a10, 13, 1
400890db:	02bd      	mov.n	a11, a2
400890dd:	ff4725        	call8	40088550 <prvAddCurrentTaskToDelayedList>
400890e0:	03ad      	mov.n	a10, a3
400890e2:	ffaee5        	call8	40088bd0 <vTaskExitCritical>
400890e5:	03eba0        	rsr.prid	a10
400890e8:	04ada0        	extui	a10, a10, 13, 1
400890eb:	f80de5        	call8	400811c8 <esp_crosscore_int_send_yield>
400890ee:	f01d      	retw.n

400890f0 <uxTaskPriorityGet>:
400890f0:	004136        	entry	a1, 32
400890f3:	de31a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400890f6:	ff99a5        	call8	40088a90 <vTaskEnterCritical>
400890f9:	005256        	bnez	a2, 40089102 <uxTaskPriorityGet+0x12>
400890fc:	ff8aa5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400890ff:	202aa0        	or	a2, a10, a10
40089102:	c228      	l32i.n	a2, a2, 48
40089104:	de2da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089107:	ffaca5        	call8	40088bd0 <vTaskExitCritical>
4008910a:	f01d      	retw.n

4008910c <vTaskPrioritySet>:
4008910c:	004136        	entry	a1, 32
4008910f:	841c      	movi.n	a4, 24
40089111:	14b437        	bgeu	a4, a3, 40089129 <vTaskPrioritySet+0x1d>
40089114:	de47d1        	l32r	a13, 40080a30 <_init_end+0x630>
40089117:	50a6c2        	movi	a12, 0x650
4008911a:	de13b1        	l32r	a11, 40080968 <_init_end+0x568>
4008911d:	de13a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089120:	dcde81        	l32r	a8, 40080498 <_init_end+0x98>
40089123:	0008e0        	callx8	a8
40089126:	022465        	call8	4008b36c <abort>
40089129:	841c      	movi.n	a4, 24
4008912b:	01b437        	bgeu	a4, a3, 40089130 <vTaskPrioritySet+0x24>
4008912e:	043d      	mov.n	a3, a4
40089130:	de22a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089133:	ff95e5        	call8	40088a90 <vTaskEnterCritical>
40089136:	007256        	bnez	a2, 40089141 <vTaskPrioritySet+0x35>
40089139:	201110        	or	a1, a1, a1
4008913c:	ff86a5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
4008913f:	0a2d      	mov.n	a2, a10
40089141:	162242        	l32i	a4, a2, 88
40089144:	029347        	bne	a3, a4, 4008914a <vTaskPrioritySet+0x3e>
40089147:	003d86        	j	40089241 <vTaskPrioritySet+0x135>
4008914a:	52b437        	bgeu	a4, a3, 400891a0 <vTaskPrioritySet+0x94>
4008914d:	03eb40        	rsr.prid	a4
40089150:	044d40        	extui	a4, a4, 13, 1
40089153:	dd5c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40089156:	a04480        	addx4	a4, a4, a8
40089159:	0020c0        	memw
4008915c:	0448      	l32i.n	a4, a4, 0
4008915e:	571247        	beq	a2, a4, 400891b9 <vTaskPrioritySet+0xad>
40089161:	1222a2        	l32i	a10, a2, 72
40089164:	0a8d      	mov.n	a8, a10
40089166:	03eb40        	rsr.prid	a4
40089169:	044d40        	extui	a4, a4, 13, 1
4008916c:	051a47        	beq	a10, a4, 40089175 <vTaskPrioritySet+0x69>
4008916f:	dcec41        	l32r	a4, 40080520 <_init_end+0x120>
40089172:	159a47        	bne	a10, a4, 4008918b <vTaskPrioritySet+0x7f>
40089175:	03eb40        	rsr.prid	a4
40089178:	044d40        	extui	a4, a4, 13, 1
4008917b:	dd5291        	l32r	a9, 400806c4 <_init_end+0x2c4>
4008917e:	a04490        	addx4	a4, a4, a9
40089181:	0020c0        	memw
40089184:	0448      	l32i.n	a4, a4, 0
40089186:	c448      	l32i.n	a4, a4, 48
40089188:	32b347        	bgeu	a3, a4, 400891be <vTaskPrioritySet+0xb2>
4008918b:	03eb40        	rsr.prid	a4
4008918e:	044d40        	extui	a4, a4, 13, 1
40089191:	2f1847        	beq	a8, a4, 400891c4 <vTaskPrioritySet+0xb8>
40089194:	03bd      	mov.n	a11, a3
40089196:	ff42a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
40089199:	040c      	movi.n	a4, 0
4008919b:	000b06        	j	400891cb <vTaskPrioritySet+0xbf>
4008919e:	400000        	ssr	a0
400891a1:	03eb      	addi.n	a0, a3, 14
400891a3:	044d40        	extui	a4, a4, 13, 1
400891a6:	dd4781        	l32r	a8, 400806c4 <_init_end+0x2c4>
400891a9:	a04480        	addx4	a4, a4, a8
400891ac:	0020c0        	memw
400891af:	0448      	l32i.n	a4, a4, 0
400891b1:	141247        	beq	a2, a4, 400891c9 <vTaskPrioritySet+0xbd>
400891b4:	040c      	movi.n	a4, 0
400891b6:	000446        	j	400891cb <vTaskPrioritySet+0xbf>
400891b9:	040c      	movi.n	a4, 0
400891bb:	000306        	j	400891cb <vTaskPrioritySet+0xbf>
400891be:	140c      	movi.n	a4, 1
400891c0:	0001c6        	j	400891cb <vTaskPrioritySet+0xbf>
400891c3:	040c00        	extui	a0, a0, 12, 1
400891c6:	000046        	j	400891cb <vTaskPrioritySet+0xbf>
400891c9:	140c      	movi.n	a4, 1
400891cb:	c288      	l32i.n	a8, a2, 48
400891cd:	162292        	l32i	a9, a2, 88
400891d0:	019897        	bne	a8, a9, 400891d5 <vTaskPrioritySet+0xc9>
400891d3:	c239      	s32i.n	a3, a2, 48
400891d5:	166232        	s32i	a3, a2, 88
400891d8:	f03d      	nop.n
400891da:	f03d      	nop.n
400891dc:	f03d      	nop.n
400891de:	f03d      	nop.n
400891e0:	7298      	l32i.n	a9, a2, 28
400891e2:	006996        	bltz	a9, 400891ec <vTaskPrioritySet+0xe0>
400891e5:	991c      	movi.n	a9, 25
400891e7:	c03930        	sub	a3, a9, a3
400891ea:	7239      	s32i.n	a3, a2, 28
400891ec:	f03d      	nop.n
400891ee:	f03d      	nop.n
400891f0:	f03d      	nop.n
400891f2:	f03d      	nop.n
400891f4:	62a8      	l32i.n	a10, a2, 24
400891f6:	a08880        	addx4	a8, a8, a8
400891f9:	1198e0        	slli	a9, a8, 2
400891fc:	dddd31        	l32r	a3, 40080970 <_init_end+0x570>
400891ff:	393a      	add.n	a3, a9, a3
40089201:	309a37        	bne	a10, a3, 40089235 <vTaskPrioritySet+0x129>
40089204:	528b      	addi.n	a5, a2, 8
40089206:	05ad      	mov.n	a10, a5
40089208:	010ce5        	call8	4008a2d8 <uxListRemove>
4008920b:	c228      	l32i.n	a2, a2, 48
4008920d:	ddeb31        	l32r	a3, 400809bc <_init_end+0x5bc>
40089210:	0020c0        	memw
40089213:	0338      	l32i.n	a3, a3, 0
40089215:	07b327        	bgeu	a3, a2, 40089220 <vTaskPrioritySet+0x114>
40089218:	dde931        	l32r	a3, 400809bc <_init_end+0x5bc>
4008921b:	0020c0        	memw
4008921e:	0329      	s32i.n	a2, a3, 0
40089220:	a02220        	addx4	a2, a2, a2
40089223:	1132e0        	slli	a3, a2, 2
40089226:	202330        	or	a2, a3, a3
40089229:	20b550        	or	a11, a5, a5
4008922c:	ddd1a1        	l32r	a10, 40080970 <_init_end+0x570>
4008922f:	80aa30        	add	a10, a10, a3
40089232:	0103a5        	call8	4008a26c <vListInsertEnd>
40089235:	081466        	bnei	a4, 1, 40089241 <vTaskPrioritySet+0x135>
40089238:	03eba0        	rsr.prid	a10
4008923b:	04ada0        	extui	a10, a10, 13, 1
4008923e:	f7f8a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40089241:	dddda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089244:	ff98a5        	call8	40088bd0 <vTaskExitCritical>
40089247:	f01d      	retw.n
40089249:	000000        	ill

4008924c <prvCheckTasksWaitingTermination>:
4008924c:	004136        	entry	a1, 32
4008924f:	03eb30        	rsr.prid	a3
40089252:	043d30        	extui	a3, a3, 13, 1
40089255:	002b06        	j	40089305 <prvCheckTasksWaitingTermination+0xb9>
40089258:	ddd8a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008925b:	ff8365        	call8	40088a90 <vTaskEnterCritical>
4008925e:	ddc921        	l32r	a2, 40080984 <_init_end+0x584>
40089261:	0228      	l32i.n	a2, a2, 0
40089263:	087216        	beqz	a2, 400892ee <prvCheckTasksWaitingTermination+0xa2>
40089266:	ddc721        	l32r	a2, 40080984 <_init_end+0x584>
40089269:	32a8      	l32i.n	a10, a2, 12
4008926b:	001206        	j	400892b7 <prvCheckTasksWaitingTermination+0x6b>
4008926e:	000000        	ill
40089271:	032a22        	l32i	a2, a10, 12
40089274:	1222c2        	l32i	a12, a2, 72
40089277:	dd1391        	l32r	a9, 400806c4 <_init_end+0x2c4>
4008927a:	a09390        	addx4	a9, a3, a9
4008927d:	0020c0        	memw
40089280:	002982        	l32i	a8, a9, 0
40089283:	2e1287        	beq	a2, a8, 400892b5 <prvCheckTasksWaitingTermination+0x69>
40089286:	00a092        	movi	a9, 0
40089289:	180c      	movi.n	a8, 1
4008928b:	938930        	movnez	a8, a9, a3
4008928e:	dd0d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089291:	a08890        	addx4	a8, a8, a9
40089294:	0020c0        	memw
40089297:	0888      	l32i.n	a8, a8, 0
40089299:	181287        	beq	a2, a8, 400892b5 <prvCheckTasksWaitingTermination+0x69>
4008929c:	c09c30        	sub	a9, a12, a3
4008929f:	1d0c      	movi.n	a13, 1
400892a1:	080c      	movi.n	a8, 0
400892a3:	084d      	mov.n	a4, a8
400892a5:	834d90        	moveqz	a4, a13, a9
400892a8:	dde3b1        	l32r	a11, 40080a34 <_init_end+0x634>
400892ab:	bcba      	add.n	a11, a12, a11
400892ad:	838db0        	moveqz	a8, a13, a11
400892b0:	208840        	or	a8, a8, a4
400892b3:	88cc      	bnez.n	a8, 400892bf <prvCheckTasksWaitingTermination+0x73>
400892b5:	1aa8      	l32i.n	a10, a10, 4
400892b7:	dde021        	l32r	a2, 40080a38 <_init_end+0x638>
400892ba:	b39a27        	bne	a10, a2, 40089271 <prvCheckTasksWaitingTermination+0x25>
400892bd:	020c      	movi.n	a2, 0
400892bf:	e2ac      	beqz.n	a2, 400892f1 <prvCheckTasksWaitingTermination+0xa5>
400892c1:	010165        	call8	4008a2d8 <uxListRemove>
400892c4:	ddd291        	l32r	a9, 40080a0c <_init_end+0x60c>
400892c7:	0020c0        	memw
400892ca:	0988      	l32i.n	a8, a9, 0
400892cc:	880b      	addi.n	a8, a8, -1
400892ce:	0020c0        	memw
400892d1:	0989      	s32i.n	a8, a9, 0
400892d3:	f03d      	nop.n
400892d5:	f03d      	nop.n
400892d7:	f03d      	nop.n
400892d9:	f03d      	nop.n
400892db:	ddd291        	l32r	a9, 40080a24 <_init_end+0x624>
400892de:	0020c0        	memw
400892e1:	0988      	l32i.n	a8, a9, 0
400892e3:	880b      	addi.n	a8, a8, -1
400892e5:	0020c0        	memw
400892e8:	0989      	s32i.n	a8, a9, 0
400892ea:	0000c6        	j	400892f1 <prvCheckTasksWaitingTermination+0xa5>
400892ed:	a02200        	addx4	a2, a2, a0
400892f0:	b1a100        	lsi	f0, a1, 0x2c4
400892f3:	a5dd      	lsi	f13, a5, 20
400892f5:	ff8d      	lsi	f8, a15, 60
400892f7:	015216        	beqz	a2, 40089310 <prvCheckTasksWaitingTermination+0xc4>
400892fa:	20a220        	or	a10, a2, a2
400892fd:	ff0665        	call8	40088364 <prvDeleteTLS>
40089300:	02ad      	mov.n	a10, a2
40089302:	ff1f65        	call8	400884f8 <prvDeleteTCB>
40089305:	ddc721        	l32r	a2, 40080a24 <_init_end+0x624>
40089308:	0020c0        	memw
4008930b:	0228      	l32i.n	a2, a2, 0
4008930d:	f47256        	bnez	a2, 40089258 <prvCheckTasksWaitingTermination+0xc>
40089310:	f01d      	retw.n
	...

40089314 <prvIdleTask>:
40089314:	004136        	entry	a1, 32
40089317:	fff365        	call8	4008924c <prvCheckTasksWaitingTermination>
4008931a:	4da725        	call8	400d6d8c <esp_vApplicationIdleHook>
4008931d:	fffd86        	j	40089317 <prvIdleTask+0x3>

40089320 <xTaskIncrementTick>:
40089320:	004136        	entry	a1, 32
40089323:	fec1a5        	call8	40087f3c <xPortInIsrContext>
40089326:	da8c      	beqz.n	a10, 40089337 <xTaskIncrementTick+0x17>
40089328:	f906e5        	call8	40082398 <esp_vApplicationTickHook>
4008932b:	03eb20        	rsr.prid	a2
4008932e:	042d20        	extui	a2, a2, 13, 1
40089331:	021266        	bnei	a2, 1, 40089337 <xTaskIncrementTick+0x17>
40089334:	006486        	j	400894ca <xTaskIncrementTick+0x1aa>
40089337:	03eb20        	rsr.prid	a2
4008933a:	042d20        	extui	a2, a2, 13, 1
4008933d:	dd9731        	l32r	a3, 4008099c <_init_end+0x59c>
40089340:	a02230        	addx4	a2, a2, a3
40089343:	0020c0        	memw
40089346:	0228      	l32i.n	a2, a2, 0
40089348:	154256        	bnez	a2, 400894a0 <xTaskIncrementTick+0x180>
4008934b:	dd9ba1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008934e:	ff7425        	call8	40088a90 <vTaskEnterCritical>
40089351:	dd9121        	l32r	a2, 40080998 <_init_end+0x598>
40089354:	0020c0        	memw
40089357:	0238      	l32i.n	a3, a2, 0
40089359:	331b      	addi.n	a3, a3, 1
4008935b:	0020c0        	memw
4008935e:	0239      	s32i.n	a3, a2, 0
40089360:	f03d      	nop.n
40089362:	f03d      	nop.n
40089364:	f03d      	nop.n
40089366:	f03d      	nop.n
40089368:	0020c0        	memw
4008936b:	0248      	l32i.n	a4, a2, 0
4008936d:	054456        	bnez	a4, 400893c5 <xTaskIncrementTick+0xa5>
40089370:	dd7a21        	l32r	a2, 40080958 <_init_end+0x558>
40089373:	0020c0        	memw
40089376:	0228      	l32i.n	a2, a2, 0
40089378:	0228      	l32i.n	a2, a2, 0
4008937a:	329c      	beqz.n	a2, 40089391 <xTaskIncrementTick+0x71>
4008937c:	ddb0d1        	l32r	a13, 40080a3c <_init_end+0x63c>
4008937f:	ddb0c1        	l32r	a12, 40080a40 <_init_end+0x640>
40089382:	dd79b1        	l32r	a11, 40080968 <_init_end+0x568>
40089385:	dd79a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089388:	dc4481        	l32r	a8, 40080498 <_init_end+0x98>
4008938b:	0008e0        	callx8	a8
4008938e:	01fde5        	call8	4008b36c <abort>
40089391:	dd7131        	l32r	a3, 40080958 <_init_end+0x558>
40089394:	0020c0        	memw
40089397:	0358      	l32i.n	a5, a3, 0
40089399:	dd7c21        	l32r	a2, 4008098c <_init_end+0x58c>
4008939c:	0020c0        	memw
4008939f:	0288      	l32i.n	a8, a2, 0
400893a1:	0020c0        	memw
400893a4:	0389      	s32i.n	a8, a3, 0
400893a6:	0020c0        	memw
400893a9:	0259      	s32i.n	a5, a2, 0
400893ab:	f03d      	nop.n
400893ad:	f03d      	nop.n
400893af:	f03d      	nop.n
400893b1:	f03d      	nop.n
400893b3:	dd8631        	l32r	a3, 400809cc <_init_end+0x5cc>
400893b6:	0020c0        	memw
400893b9:	0328      	l32i.n	a2, a3, 0
400893bb:	221b      	addi.n	a2, a2, 1
400893bd:	0020c0        	memw
400893c0:	0329      	s32i.n	a2, a3, 0
400893c2:	fef6e5        	call8	40088330 <prvResetNextTaskUnblockTime>
400893c5:	dd6521        	l32r	a2, 4008095c <_init_end+0x55c>
400893c8:	0020c0        	memw
400893cb:	0228      	l32i.n	a2, a2, 0
400893cd:	09b427        	bgeu	a4, a2, 400893da <xTaskIncrementTick+0xba>
400893d0:	020c      	movi.n	a2, 0
400893d2:	002646        	j	4008946f <xTaskIncrementTick+0x14f>
400893d5:	120c      	movi.n	a2, 1
400893d7:	000046        	j	400893dc <xTaskIncrementTick+0xbc>
400893da:	020c      	movi.n	a2, 0
400893dc:	dd5f31        	l32r	a3, 40080958 <_init_end+0x558>
400893df:	0020c0        	memw
400893e2:	0338      	l32i.n	a3, a3, 0
400893e4:	0338      	l32i.n	a3, a3, 0
400893e6:	b3cc      	bnez.n	a3, 400893f5 <xTaskIncrementTick+0xd5>
400893e8:	f47c      	movi.n	a4, -1
400893ea:	dd5c31        	l32r	a3, 4008095c <_init_end+0x55c>
400893ed:	0020c0        	memw
400893f0:	0349      	s32i.n	a4, a3, 0
400893f2:	001e46        	j	4008946f <xTaskIncrementTick+0x14f>
400893f5:	dd5831        	l32r	a3, 40080958 <_init_end+0x558>
400893f8:	0020c0        	memw
400893fb:	0338      	l32i.n	a3, a3, 0
400893fd:	3338      	l32i.n	a3, a3, 12
400893ff:	3338      	l32i.n	a3, a3, 12
40089401:	2358      	l32i.n	a5, a3, 8
40089403:	0bb457        	bgeu	a4, a5, 40089412 <xTaskIncrementTick+0xf2>
40089406:	dd5531        	l32r	a3, 4008095c <_init_end+0x55c>
40089409:	0020c0        	memw
4008940c:	0359      	s32i.n	a5, a3, 0
4008940e:	001746        	j	4008946f <xTaskIncrementTick+0x14f>
40089411:	c35200        	movf	a5, a2, b0
40089414:	5008      	l32i.n	a0, a0, 20
40089416:	e520a5        	call8	4006e620 <__udivmoddi4+0x9a2c>
40089419:	00eb      	addi.n	a0, a0, 14
4008941b:	0b2382        	l32i	a8, a3, 44
4008941e:	488c      	beqz.n	a8, 40089426 <xTaskIncrementTick+0x106>
40089420:	1cc3a2        	addi	a10, a3, 28
40089423:	00eb65        	call8	4008a2d8 <uxListRemove>
40089426:	c388      	l32i.n	a8, a3, 48
40089428:	dd6591        	l32r	a9, 400809bc <_init_end+0x5bc>
4008942b:	0020c0        	memw
4008942e:	0998      	l32i.n	a9, a9, 0
40089430:	08b987        	bgeu	a9, a8, 4008943c <xTaskIncrementTick+0x11c>
40089433:	dd6291        	l32r	a9, 400809bc <_init_end+0x5bc>
40089436:	0020c0        	memw
40089439:	006982        	s32i	a8, a9, 0
4008943c:	a08880        	addx4	a8, a8, a8
4008943f:	1198e0        	slli	a9, a8, 2
40089442:	20b550        	or	a11, a5, a5
40089445:	f03d      	nop.n
40089447:	dd4aa1        	l32r	a10, 40080970 <_init_end+0x570>
4008944a:	80aa90        	add	a10, a10, a9
4008944d:	00e1e5        	call8	4008a26c <vListInsertEnd>
40089450:	0c2352        	l32i	a5, a3, 48
40089453:	03eb30        	rsr.prid	a3
40089456:	043d30        	extui	a3, a3, 13, 1
40089459:	dc9a81        	l32r	a8, 400806c4 <_init_end+0x2c4>
4008945c:	a03380        	addx4	a3, a3, a8
4008945f:	0020c0        	memw
40089462:	0338      	l32i.n	a3, a3, 0
40089464:	c338      	l32i.n	a3, a3, 48
40089466:	023537        	bltu	a5, a3, 4008946c <xTaskIncrementTick+0x14c>
40089469:	ffda06        	j	400893d5 <xTaskIncrementTick+0xb5>
4008946c:	ffdb06        	j	400893dc <xTaskIncrementTick+0xbc>
4008946f:	03eb30        	rsr.prid	a3
40089472:	043d30        	extui	a3, a3, 13, 1
40089475:	dc9341        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089478:	a03340        	addx4	a3, a3, a4
4008947b:	0020c0        	memw
4008947e:	0338      	l32i.n	a3, a3, 0
40089480:	c338      	l32i.n	a3, a3, 48
40089482:	a03330        	addx4	a3, a3, a3
40089485:	1143e0        	slli	a4, a3, 2
40089488:	dd3a31        	l32r	a3, 40080970 <_init_end+0x570>
4008948b:	434a      	add.n	a4, a3, a4
4008948d:	0438      	l32i.n	a3, a4, 0
4008948f:	0123b6        	bltui	a3, 2, 40089494 <xTaskIncrementTick+0x174>
40089492:	120c      	movi.n	a2, 1
40089494:	dd49a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089497:	ff73a5        	call8	40088bd0 <vTaskExitCritical>
4008949a:	0004c6        	j	400894b1 <xTaskIncrementTick+0x191>
4008949d:	000000        	ill
400894a0:	dd6931        	l32r	a3, 40080a44 <_init_end+0x644>
400894a3:	0020c0        	memw
400894a6:	0328      	l32i.n	a2, a3, 0
400894a8:	221b      	addi.n	a2, a2, 1
400894aa:	0020c0        	memw
400894ad:	0329      	s32i.n	a2, a3, 0
400894af:	020c      	movi.n	a2, 0
400894b1:	03eb30        	rsr.prid	a3
400894b4:	043d30        	extui	a3, a3, 13, 1
400894b7:	f03d      	nop.n
400894b9:	f03d      	nop.n
400894bb:	dd3c41        	l32r	a4, 400809ac <_init_end+0x5ac>
400894be:	a03340        	addx4	a3, a3, a4
400894c1:	0020c0        	memw
400894c4:	0338      	l32i.n	a3, a3, 0
400894c6:	43cc      	bnez.n	a3, 400894ce <xTaskIncrementTick+0x1ae>
400894c8:	f01d      	retw.n
400894ca:	120c      	movi.n	a2, 1
400894cc:	f01d      	retw.n
400894ce:	120c      	movi.n	a2, 1
400894d0:	f01d      	retw.n
	...

400894d4 <xTaskResumeAll>:
400894d4:	004136        	entry	a1, 32
400894d7:	03eb20        	rsr.prid	a2
400894da:	042d20        	extui	a2, a2, 13, 1
400894dd:	dd2f31        	l32r	a3, 4008099c <_init_end+0x59c>
400894e0:	a02230        	addx4	a2, a2, a3
400894e3:	0020c0        	memw
400894e6:	002222        	l32i	a2, a2, 0
400894e9:	014256        	bnez	a2, 40089501 <xTaskResumeAll+0x2d>
400894ec:	dd57d1        	l32r	a13, 40080a48 <_init_end+0x648>
400894ef:	dd57c1        	l32r	a12, 40080a4c <_init_end+0x64c>
400894f2:	dd1db1        	l32r	a11, 40080968 <_init_end+0x568>
400894f5:	dd1da1        	l32r	a10, 4008096c <_init_end+0x56c>
400894f8:	dbe881        	l32r	a8, 40080498 <_init_end+0x98>
400894fb:	0008e0        	callx8	a8
400894fe:	01e6e5        	call8	4008b36c <abort>
40089501:	dd2da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089504:	ff58a5        	call8	40088a90 <vTaskEnterCritical>
40089507:	03eb20        	rsr.prid	a2
4008950a:	042d20        	extui	a2, a2, 13, 1
4008950d:	dd2381        	l32r	a8, 4008099c <_init_end+0x59c>
40089510:	a02280        	addx4	a2, a2, a8
40089513:	0020c0        	memw
40089516:	002232        	l32i	a3, a2, 0
40089519:	330b      	addi.n	a3, a3, -1
4008951b:	0020c0        	memw
4008951e:	0239      	s32i.n	a3, a2, 0
40089520:	03eb20        	rsr.prid	a2
40089523:	042d20        	extui	a2, a2, 13, 1
40089526:	a02280        	addx4	a2, a2, a8
40089529:	f03d      	nop.n
4008952b:	f03d      	nop.n
4008952d:	0020c0        	memw
40089530:	0228      	l32i.n	a2, a2, 0
40089532:	122256        	bnez	a2, 40089658 <xTaskResumeAll+0x184>
40089535:	dd3521        	l32r	a2, 40080a0c <_init_end+0x60c>
40089538:	0020c0        	memw
4008953b:	0228      	l32i.n	a2, a2, 0
4008953d:	08c256        	bnez	a2, 400895cd <xTaskResumeAll+0xf9>
40089540:	0046c6        	j	4008965f <xTaskResumeAll+0x18b>
40089543:	eb8000        	f64cmpl	a8, a0, a0
40089546:	8d8003        	lsip	f0, a0, 0x234
40089549:	888004        	lsi	f0, a0, 0x220
4008954c:	28e0a0        	lsi	f10, a0, 160
4008954f:	0b3111        	l32r	a1, 4004c214 <lld_pdu_pack+0x1700>
40089552:	20dd      	lsi	f13, a0, 0
40089554:	228023        	lsip	f2, a0, 136
40089557:	280322        	l8ui	a2, a3, 40
4008955a:	c2a232        	movi	a3, 0x2c2
4008955d:	a51c      	movi.n	a5, 26
4008955f:	8b00d7        	bnone	a0, a13, 400894ee <xTaskResumeAll+0x1a>
40089562:	03ad32        	movi	a3, 0xfffffd03
40089565:	00d725        	call8	4008a2d8 <uxListRemove>
40089568:	c288      	l32i.n	a8, a2, 48
4008956a:	dd1491        	l32r	a9, 400809bc <_init_end+0x5bc>
4008956d:	0020c0        	memw
40089570:	0998      	l32i.n	a9, a9, 0
40089572:	07b987        	bgeu	a9, a8, 4008957d <xTaskResumeAll+0xa9>
40089575:	dd1191        	l32r	a9, 400809bc <_init_end+0x5bc>
40089578:	0020c0        	memw
4008957b:	0989      	s32i.n	a8, a9, 0
4008957d:	a08880        	addx4	a8, a8, a8
40089580:	1198e0        	slli	a9, a8, 2
40089583:	03bd      	mov.n	a11, a3
40089585:	0020f0        	nop
40089588:	dcfaa1        	l32r	a10, 40080970 <_init_end+0x570>
4008958b:	aa9a      	add.n	a10, a10, a9
4008958d:	00cde5        	call8	4008a26c <vListInsertEnd>
40089590:	122232        	l32i	a3, a2, 72
40089593:	03eb80        	rsr.prid	a8
40089596:	048d80        	extui	a8, a8, 13, 1
40089599:	051387        	beq	a3, a8, 400895a2 <xTaskResumeAll+0xce>
4008959c:	dbe181        	l32r	a8, 40080520 <_init_end+0x120>
4008959f:	2a9387        	bne	a3, a8, 400895cd <xTaskResumeAll+0xf9>
400895a2:	c238      	l32i.n	a3, a2, 48
400895a4:	03eb20        	rsr.prid	a2
400895a7:	042d20        	extui	a2, a2, 13, 1
400895aa:	dc4681        	l32r	a8, 400806c4 <_init_end+0x2c4>
400895ad:	a02280        	addx4	a2, a2, a8
400895b0:	0020c0        	memw
400895b3:	0228      	l32i.n	a2, a2, 0
400895b5:	c228      	l32i.n	a2, a2, 48
400895b7:	123327        	bltu	a3, a2, 400895cd <xTaskResumeAll+0xf9>
400895ba:	03eb20        	rsr.prid	a2
400895bd:	042d20        	extui	a2, a2, 13, 1
400895c0:	dcfb31        	l32r	a3, 400809ac <_init_end+0x5ac>
400895c3:	a02230        	addx4	a2, a2, a3
400895c6:	130c      	movi.n	a3, 1
400895c8:	0020c0        	memw
400895cb:	0239      	s32i.n	a3, a2, 0
400895cd:	03eb80        	rsr.prid	a8
400895d0:	048d80        	extui	a8, a8, 13, 1
400895d3:	a08880        	addx4	a8, a8, a8
400895d6:	1198e0        	slli	a9, a8, 2
400895d9:	f03d      	nop.n
400895db:	dce821        	l32r	a2, 4008097c <_init_end+0x57c>
400895de:	929a      	add.n	a9, a2, a9
400895e0:	0928      	l32i.n	a2, a9, 0
400895e2:	f5e256        	bnez	a2, 40089544 <xTaskResumeAll+0x70>
400895e5:	dd1721        	l32r	a2, 40080a44 <_init_end+0x644>
400895e8:	0020c0        	memw
400895eb:	0228      	l32i.n	a2, a2, 0
400895ed:	32fc      	bnez.n	a2, 40089624 <xTaskResumeAll+0x150>
400895ef:	001106        	j	40089637 <xTaskResumeAll+0x163>
400895f2:	a50000        	extui	a0, a0, 16, 11
400895f5:	9cffd2        	s32ri	a13, a15, 0x270
400895f8:	201a      	add.n	a2, a0, a1
400895fa:	03eb      	addi.n	a0, a3, 14
400895fc:	042d20        	extui	a2, a2, 13, 1
400895ff:	dceb31        	l32r	a3, 400809ac <_init_end+0x5ac>
40089602:	a02230        	addx4	a2, a2, a3
40089605:	130c      	movi.n	a3, 1
40089607:	0020c0        	memw
4008960a:	0239      	s32i.n	a3, a2, 0
4008960c:	f03d      	nop.n
4008960e:	f03d      	nop.n
40089610:	f03d      	nop.n
40089612:	f03d      	nop.n
40089614:	dd0c31        	l32r	a3, 40080a44 <_init_end+0x644>
40089617:	0020c0        	memw
4008961a:	0328      	l32i.n	a2, a3, 0
4008961c:	220b      	addi.n	a2, a2, -1
4008961e:	0020c0        	memw
40089621:	006322        	s32i	a2, a3, 0
40089624:	f03d      	nop.n
40089626:	f03d      	nop.n
40089628:	f03d      	nop.n
4008962a:	f03d      	nop.n
4008962c:	dd0621        	l32r	a2, 40080a44 <_init_end+0x644>
4008962f:	0020c0        	memw
40089632:	0228      	l32i.n	a2, a2, 0
40089634:	fbc256        	bnez	a2, 400895f4 <xTaskResumeAll+0x120>
40089637:	03eb20        	rsr.prid	a2
4008963a:	042d20        	extui	a2, a2, 13, 1
4008963d:	dcdb31        	l32r	a3, 400809ac <_init_end+0x5ac>
40089640:	a02230        	addx4	a2, a2, a3
40089643:	0020c0        	memw
40089646:	0228      	l32i.n	a2, a2, 0
40089648:	111266        	bnei	a2, 1, 4008965d <xTaskResumeAll+0x189>
4008964b:	03eba0        	rsr.prid	a10
4008964e:	04ada0        	extui	a10, a10, 13, 1
40089651:	f7b765        	call8	400811c8 <esp_crosscore_int_send_yield>
40089654:	0001c6        	j	4008965f <xTaskResumeAll+0x18b>
40089657:	020c00        	andb	b0, b12, b0
4008965a:	000046        	j	4008965f <xTaskResumeAll+0x18b>
4008965d:	020c      	movi.n	a2, 0
4008965f:	dcd6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089662:	ff56e5        	call8	40088bd0 <vTaskExitCritical>
40089665:	f01d      	retw.n
	...

40089668 <vTaskPlaceOnEventList>:
40089668:	004136        	entry	a1, 32
4008966b:	014256        	bnez	a2, 40089683 <vTaskPlaceOnEventList+0x1b>
4008966e:	dcf8d1        	l32r	a13, 40080a50 <_init_end+0x650>
40089671:	dcf8c1        	l32r	a12, 40080a54 <_init_end+0x654>
40089674:	dcbdb1        	l32r	a11, 40080968 <_init_end+0x568>
40089677:	dcbda1        	l32r	a10, 4008096c <_init_end+0x56c>
4008967a:	db8781        	l32r	a8, 40080498 <_init_end+0x98>
4008967d:	0008e0        	callx8	a8
40089680:	01cea5        	call8	4008b36c <abort>
40089683:	dccda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089686:	ff40a5        	call8	40088a90 <vTaskEnterCritical>
40089689:	03eb80        	rsr.prid	a8
4008968c:	048d80        	extui	a8, a8, 13, 1
4008968f:	dc0d41        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089692:	a08840        	addx4	a8, a8, a4
40089695:	0020c0        	memw
40089698:	08b8      	l32i.n	a11, a8, 0
4008969a:	1ccbb2        	addi	a11, a11, 28
4008969d:	20a220        	or	a10, a2, a2
400896a0:	00bfe5        	call8	4008a2a0 <vListInsert>
400896a3:	03eb80        	rsr.prid	a8
400896a6:	048d80        	extui	a8, a8, 13, 1
400896a9:	a08840        	addx4	a8, a8, a4
400896ac:	0020c0        	memw
400896af:	08a8      	l32i.n	a10, a8, 0
400896b1:	08caa2        	addi	a10, a10, 8
400896b4:	00c225        	call8	4008a2d8 <uxListRemove>
400896b7:	1e0366        	bnei	a3, -1, 400896d9 <vTaskPlaceOnEventList+0x71>
400896ba:	03eb20        	rsr.prid	a2
400896bd:	042d20        	extui	a2, a2, 13, 1
400896c0:	dc0131        	l32r	a3, 400806c4 <_init_end+0x2c4>
400896c3:	a02230        	addx4	a2, a2, a3
400896c6:	0020c0        	memw
400896c9:	02b8      	l32i.n	a11, a2, 0
400896cb:	08cbb2        	addi	a11, a11, 8
400896ce:	dcaea1        	l32r	a10, 40080988 <_init_end+0x588>
400896d1:	00b9a5        	call8	4008a26c <vListInsertEnd>
400896d4:	000586        	j	400896ee <vTaskPlaceOnEventList+0x86>
400896d7:	210000        	srai	a0, a0, 0
400896da:	af          	.byte 0xaf
400896db:	c0dc      	bnez.n	a0, 400896fb <vTaskPlaceOnEventListRestricted+0x3>
400896dd:	b20020        	mulsh	a0, a0, a2
400896e0:	b00022        	l8ui	a2, a0, 176
400896e3:	a080b3        	lsip	f11, a0, 0x280
400896e6:	03eb      	addi.n	a0, a3, 14
400896e8:	04ada0        	extui	a10, a10, 13, 1
400896eb:	fee665        	call8	40088550 <prvAddCurrentTaskToDelayedList>
400896ee:	dcb2a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400896f1:	ff4de5        	call8	40088bd0 <vTaskExitCritical>
400896f4:	000090        	retw
	...

400896f8 <vTaskPlaceOnEventListRestricted>:
400896f8:	004136        	entry	a1, 32
400896fb:	dcafa1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400896fe:	ff3925        	call8	40088a90 <vTaskEnterCritical>
40089701:	014256        	bnez	a2, 40089719 <vTaskPlaceOnEventListRestricted+0x21>
40089704:	dcd5d1        	l32r	a13, 40080a58 <_init_end+0x658>
40089707:	dcd5c1        	l32r	a12, 40080a5c <_init_end+0x65c>
4008970a:	dc97b1        	l32r	a11, 40080968 <_init_end+0x568>
4008970d:	dc97a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089710:	db6281        	l32r	a8, 40080498 <_init_end+0x98>
40089713:	0008e0        	callx8	a8
40089716:	01c565        	call8	4008b36c <abort>
40089719:	03eb80        	rsr.prid	a8
4008971c:	048d80        	extui	a8, a8, 13, 1
4008971f:	dbe941        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089722:	a08840        	addx4	a8, a8, a4
40089725:	0020c0        	memw
40089728:	08b8      	l32i.n	a11, a8, 0
4008972a:	1ccbb2        	addi	a11, a11, 28
4008972d:	02ad      	mov.n	a10, a2
4008972f:	00b3e5        	call8	4008a26c <vListInsertEnd>
40089732:	03eb80        	rsr.prid	a8
40089735:	048d80        	extui	a8, a8, 13, 1
40089738:	a08840        	addx4	a8, a8, a4
4008973b:	0020c0        	memw
4008973e:	08a8      	l32i.n	a10, a8, 0
40089740:	08caa2        	addi	a10, a10, 8
40089743:	00b965        	call8	4008a2d8 <uxListRemove>
40089746:	dc9421        	l32r	a2, 40080998 <_init_end+0x598>
40089749:	0020c0        	memw
4008974c:	0022b2        	l32i	a11, a2, 0
4008974f:	80bb30        	add	a11, a11, a3
40089752:	03eba0        	rsr.prid	a10
40089755:	04ada0        	extui	a10, a10, 13, 1
40089758:	fedf65        	call8	40088550 <prvAddCurrentTaskToDelayedList>
4008975b:	dc97a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008975e:	ff4725        	call8	40088bd0 <vTaskExitCritical>
40089761:	f01d      	retw.n
	...

40089764 <xTaskRemoveFromEventList>:
40089764:	004136        	entry	a1, 32
40089767:	dc94a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008976a:	ff3265        	call8	40088a90 <vTaskEnterCritical>
4008976d:	002232        	l32i	a3, a2, 0
40089770:	d3ac      	beqz.n	a3, 400897a1 <xTaskRemoveFromEventList+0x3d>
40089772:	3228      	l32i.n	a2, a2, 12
40089774:	3228      	l32i.n	a2, a2, 12
40089776:	32dc      	bnez.n	a2, 4008978d <xTaskRemoveFromEventList+0x29>
40089778:	dcbad1        	l32r	a13, 40080a60 <_init_end+0x660>
4008977b:	dcbac1        	l32r	a12, 40080a64 <_init_end+0x664>
4008977e:	dc7ab1        	l32r	a11, 40080968 <_init_end+0x568>
40089781:	dc7aa1        	l32r	a10, 4008096c <_init_end+0x56c>
40089784:	db4581        	l32r	a8, 40080498 <_init_end+0x98>
40089787:	0008e0        	callx8	a8
4008978a:	01be25        	call8	4008b36c <abort>
4008978d:	1cc232        	addi	a3, a2, 28
40089790:	03ad      	mov.n	a10, a3
40089792:	00b465        	call8	4008a2d8 <uxListRemove>
40089795:	122282        	l32i	a8, a2, 72
40089798:	db6291        	l32r	a9, 40080520 <_init_end+0x120>
4008979b:	319897        	bne	a8, a9, 400897d0 <xTaskRemoveFromEventList+0x6c>
4008979e:	000306        	j	400897ae <xTaskRemoveFromEventList+0x4a>
400897a1:	dc85a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400897a4:	ff42a5        	call8	40088bd0 <vTaskExitCritical>
400897a7:	020c      	movi.n	a2, 0
400897a9:	f01d      	retw.n
400897ab:	000000        	ill
400897ae:	03eba0        	rsr.prid	a10
400897b1:	04ada0        	extui	a10, a10, 13, 1
400897b4:	080c      	movi.n	a8, 0
400897b6:	000386        	j	400897c8 <xTaskRemoveFromEventList+0x64>
400897b9:	dc7891        	l32r	a9, 4008099c <_init_end+0x59c>
400897bc:	a09890        	addx4	a9, a8, a9
400897bf:	0020c0        	memw
400897c2:	0948      	l32i.n	a4, a9, 0
400897c4:	24ac      	beqz.n	a4, 400897ea <xTaskRemoveFromEventList+0x86>
400897c6:	881b      	addi.n	a8, a8, 1
400897c8:	ed28b6        	bltui	a8, 2, 400897b9 <xTaskRemoveFromEventList+0x55>
400897cb:	080c      	movi.n	a8, 0
400897cd:	000706        	j	400897ed <xTaskRemoveFromEventList+0x89>
400897d0:	08ad      	mov.n	a10, a8
400897d2:	dc7241        	l32r	a4, 4008099c <_init_end+0x59c>
400897d5:	a08840        	addx4	a8, a8, a4
400897d8:	0020c0        	memw
400897db:	0898      	l32i.n	a9, a8, 0
400897dd:	040c      	movi.n	a4, 0
400897df:	180c      	movi.n	a8, 1
400897e1:	938490        	movnez	a8, a4, a9
400897e4:	748080        	extui	a8, a8, 0, 8
400897e7:	000086        	j	400897ed <xTaskRemoveFromEventList+0x89>
400897ea:	01a082        	movi	a8, 1
400897ed:	034816        	beqz	a8, 40089825 <xTaskRemoveFromEventList+0xc1>
400897f0:	08c242        	addi	a4, a2, 8
400897f3:	04ad      	mov.n	a10, a4
400897f5:	00ae25        	call8	4008a2d8 <uxListRemove>
400897f8:	c238      	l32i.n	a3, a2, 48
400897fa:	dc7081        	l32r	a8, 400809bc <_init_end+0x5bc>
400897fd:	0020c0        	memw
40089800:	0888      	l32i.n	a8, a8, 0
40089802:	07b837        	bgeu	a8, a3, 4008980d <xTaskRemoveFromEventList+0xa9>
40089805:	dc6d81        	l32r	a8, 400809bc <_init_end+0x5bc>
40089808:	0020c0        	memw
4008980b:	0839      	s32i.n	a3, a8, 0
4008980d:	a03330        	addx4	a3, a3, a3
40089810:	1183e0        	slli	a8, a3, 2
40089813:	04bd      	mov.n	a11, a4
40089815:	0020f0        	nop
40089818:	dc56a1        	l32r	a10, 40080970 <_init_end+0x570>
4008981b:	aa8a      	add.n	a10, a10, a8
4008981d:	00a4e5        	call8	4008a26c <vListInsertEnd>
40089820:	0004c6        	j	40089837 <xTaskRemoveFromEventList+0xd3>
40089823:	a00000        	addx4	a0, a0, a0
40089826:	a0aa      	add.n	a10, a0, a10
40089828:	118ae0        	slli	a8, a10, 2
4008982b:	20b330        	or	a11, a3, a3
4008982e:	dc53a1        	l32r	a10, 4008097c <_init_end+0x57c>
40089831:	80aa80        	add	a10, a10, a8
40089834:	00a365        	call8	4008a26c <vListInsertEnd>
40089837:	1222a2        	l32i	a10, a2, 72
4008983a:	208aa0        	or	a8, a10, a10
4008983d:	03eb30        	rsr.prid	a3
40089840:	043d30        	extui	a3, a3, 13, 1
40089843:	051a37        	beq	a10, a3, 4008984c <xTaskRemoveFromEventList+0xe8>
40089846:	db3631        	l32r	a3, 40080520 <_init_end+0x120>
40089849:	2f9a37        	bne	a10, a3, 4008987c <xTaskRemoveFromEventList+0x118>
4008984c:	c248      	l32i.n	a4, a2, 48
4008984e:	03eb30        	rsr.prid	a3
40089851:	043d30        	extui	a3, a3, 13, 1
40089854:	db9c91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089857:	a03390        	addx4	a3, a3, a9
4008985a:	0020c0        	memw
4008985d:	0338      	l32i.n	a3, a3, 0
4008985f:	c338      	l32i.n	a3, a3, 48
40089861:	173437        	bltu	a4, a3, 4008987c <xTaskRemoveFromEventList+0x118>
40089864:	03eb30        	rsr.prid	a3
40089867:	043d30        	extui	a3, a3, 13, 1
4008986a:	dc5021        	l32r	a2, 400809ac <_init_end+0x5ac>
4008986d:	a03320        	addx4	a3, a3, a2
40089870:	120c      	movi.n	a2, 1
40089872:	0020c0        	memw
40089875:	0329      	s32i.n	a2, a3, 0
40089877:	000646        	j	40089894 <xTaskRemoveFromEventList+0x130>
4008987a:	300000        	xor	a0, a0, a0
4008987d:	03eb      	addi.n	a0, a3, 14
4008987f:	043d30        	extui	a3, a3, 13, 1
40089882:	0c1837        	beq	a8, a3, 40089892 <xTaskRemoveFromEventList+0x12e>
40089885:	c2b8      	l32i.n	a11, a2, 48
40089887:	fed3a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
4008988a:	020c      	movi.n	a2, 0
4008988c:	000106        	j	40089894 <xTaskRemoveFromEventList+0x130>
4008988f:	000000        	ill
40089892:	020c      	movi.n	a2, 0
40089894:	dc49a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089897:	ff33a5        	call8	40088bd0 <vTaskExitCritical>
4008989a:	f01d      	retw.n

4008989c <xTaskCheckForTimeOut>:
4008989c:	004136        	entry	a1, 32
4008989f:	017256        	bnez	a2, 400898ba <xTaskCheckForTimeOut+0x1e>
400898a2:	dc71d1        	l32r	a13, 40080a68 <_init_end+0x668>
400898a5:	dc71c1        	l32r	a12, 40080a6c <_init_end+0x66c>
400898a8:	dc30b1        	l32r	a11, 40080968 <_init_end+0x568>
400898ab:	dc30a1        	l32r	a10, 4008096c <_init_end+0x56c>
400898ae:	dafa81        	l32r	a8, 40080498 <_init_end+0x98>
400898b1:	0008e0        	callx8	a8
400898b4:	201110        	or	a1, a1, a1
400898b7:	01ab65        	call8	4008b36c <abort>
400898ba:	33dc      	bnez.n	a3, 400898d1 <xTaskCheckForTimeOut+0x35>
400898bc:	dc6bd1        	l32r	a13, 40080a68 <_init_end+0x668>
400898bf:	dc6cc1        	l32r	a12, 40080a70 <_init_end+0x670>
400898c2:	dc29b1        	l32r	a11, 40080968 <_init_end+0x568>
400898c5:	dc29a1        	l32r	a10, 4008096c <_init_end+0x56c>
400898c8:	daf481        	l32r	a8, 40080498 <_init_end+0x98>
400898cb:	0008e0        	callx8	a8
400898ce:	01a9e5        	call8	4008b36c <abort>
400898d1:	dc39a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400898d4:	ff1ba5        	call8	40088a90 <vTaskEnterCritical>
400898d7:	dc3081        	l32r	a8, 40080998 <_init_end+0x598>
400898da:	0020c0        	memw
400898dd:	0898      	l32i.n	a9, a8, 0
400898df:	0388      	l32i.n	a8, a3, 0
400898e1:	2c0826        	beqi	a8, -1, 40089911 <xTaskCheckForTimeOut+0x75>
400898e4:	02b8      	l32i.n	a11, a2, 0
400898e6:	dc39a1        	l32r	a10, 400809cc <_init_end+0x5cc>
400898e9:	0020c0        	memw
400898ec:	0aa8      	l32i.n	a10, a10, 0
400898ee:	041ba7        	beq	a11, a10, 400898f6 <xTaskCheckForTimeOut+0x5a>
400898f1:	12a8      	l32i.n	a10, a2, 4
400898f3:	1fb9a7        	bgeu	a9, a10, 40089916 <xTaskCheckForTimeOut+0x7a>
400898f6:	12a8      	l32i.n	a10, a2, 4
400898f8:	c0b9a0        	sub	a11, a9, a10
400898fb:	1ebb87        	bgeu	a11, a8, 4008991d <xTaskCheckForTimeOut+0x81>
400898fe:	c09a90        	sub	a9, a10, a9
40089901:	808890        	add	a8, a8, a9
40089904:	006382        	s32i	a8, a3, 0
40089907:	02ad      	mov.n	a10, a2
40089909:	ff0625        	call8	4008896c <vTaskSetTimeOutState>
4008990c:	020c      	movi.n	a2, 0
4008990e:	000346        	j	4008991f <xTaskCheckForTimeOut+0x83>
40089911:	020c      	movi.n	a2, 0
40089913:	000206        	j	4008991f <xTaskCheckForTimeOut+0x83>
40089916:	120c      	movi.n	a2, 1
40089918:	0000c6        	j	4008991f <xTaskCheckForTimeOut+0x83>
4008991b:	0c0000        	lsi	f0, a0, 48
4008991e:	26a112        	movi	a1, 0x126
40089921:	e5dc      	bnez.n	a5, 40089943 <vTaskSetThreadLocalStoragePointerAndDelCallback+0x1b>
40089923:	ff2a      	add.n	a15, a15, a2
40089925:	f01d      	retw.n
	...

40089928 <vTaskSetThreadLocalStoragePointerAndDelCallback>:
40089928:	004136        	entry	a1, 32
4008992b:	2613e6        	bgei	a3, 1, 40089955 <vTaskSetThreadLocalStoragePointerAndDelCallback+0x2d>
4008992e:	dc22a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089931:	ff15e5        	call8	40088a90 <vTaskEnterCritical>
40089934:	005256        	bnez	a2, 4008993d <vTaskSetThreadLocalStoragePointerAndDelCallback+0x15>
40089937:	ff0725        	call8	400889a8 <xTaskGetCurrentTaskHandle>
4008993a:	202aa0        	or	a2, a10, a10
4008993d:	18c332        	addi	a3, a3, 24
40089940:	a02320        	addx4	a2, a3, a2
40089943:	0249      	s32i.n	a4, a2, 0
40089945:	1259      	s32i.n	a5, a2, 4
40089947:	f03d      	nop.n
40089949:	f03d      	nop.n
4008994b:	f03d      	nop.n
4008994d:	f03d      	nop.n
4008994f:	dc1aa1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089952:	ff27e5        	call8	40088bd0 <vTaskExitCritical>
40089955:	f01d      	retw.n
	...

40089958 <vTaskPriorityInherit>:
40089958:	004136        	entry	a1, 32
4008995b:	dc17a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008995e:	ff1325        	call8	40088a90 <vTaskEnterCritical>
40089961:	0d3216        	beqz	a2, 40089a38 <vTaskPriorityInherit+0xe0>
40089964:	c298      	l32i.n	a9, a2, 48
40089966:	03eb80        	rsr.prid	a8
40089969:	048d80        	extui	a8, a8, 13, 1
4008996c:	db56a1        	l32r	a10, 400806c4 <_init_end+0x2c4>
4008996f:	a088a0        	addx4	a8, a8, a10
40089972:	0020c0        	memw
40089975:	0888      	l32i.n	a8, a8, 0
40089977:	c888      	l32i.n	a8, a8, 48
40089979:	023987        	bltu	a9, a8, 4008997f <vTaskPriorityInherit+0x27>
4008997c:	002e06        	j	40089a38 <vTaskPriorityInherit+0xe0>
4008997f:	dc0ea1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089982:	ff10e5        	call8	40088a90 <vTaskEnterCritical>
40089985:	7288      	l32i.n	a8, a2, 28
40089987:	019896        	bltz	a8, 400899a4 <vTaskPriorityInherit+0x4c>
4008998a:	03eb80        	rsr.prid	a8
4008998d:	048d80        	extui	a8, a8, 13, 1
40089990:	db4d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089993:	a08890        	addx4	a8, a8, a9
40089996:	0020c0        	memw
40089999:	0888      	l32i.n	a8, a8, 0
4008999b:	c898      	l32i.n	a9, a8, 48
4008999d:	981c      	movi.n	a8, 25
4008999f:	c08890        	sub	a8, a8, a9
400899a2:	7289      	s32i.n	a8, a2, 28
400899a4:	f03d      	nop.n
400899a6:	f03d      	nop.n
400899a8:	f03d      	nop.n
400899aa:	f03d      	nop.n
400899ac:	0622a2        	l32i	a10, a2, 24
400899af:	0c2282        	l32i	a8, a2, 48
400899b2:	a08880        	addx4	a8, a8, a8
400899b5:	1198e0        	slli	a9, a8, 2
400899b8:	dbee81        	l32r	a8, 40080970 <_init_end+0x570>
400899bb:	808980        	add	a8, a9, a8
400899be:	4e9a87        	bne	a10, a8, 40089a10 <vTaskPriorityInherit+0xb8>
400899c1:	328b      	addi.n	a3, a2, 8
400899c3:	03ad      	mov.n	a10, a3
400899c5:	009125        	call8	4008a2d8 <uxListRemove>
400899c8:	03eb80        	rsr.prid	a8
400899cb:	048d80        	extui	a8, a8, 13, 1
400899ce:	db3d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
400899d1:	a08890        	addx4	a8, a8, a9
400899d4:	0020c0        	memw
400899d7:	0888      	l32i.n	a8, a8, 0
400899d9:	c888      	l32i.n	a8, a8, 48
400899db:	c289      	s32i.n	a8, a2, 48
400899dd:	f03d      	nop.n
400899df:	f03d      	nop.n
400899e1:	f03d      	nop.n
400899e3:	f03d      	nop.n
400899e5:	dbf521        	l32r	a2, 400809bc <_init_end+0x5bc>
400899e8:	0020c0        	memw
400899eb:	0228      	l32i.n	a2, a2, 0
400899ed:	07b287        	bgeu	a2, a8, 400899f8 <vTaskPriorityInherit+0xa0>
400899f0:	dbf321        	l32r	a2, 400809bc <_init_end+0x5bc>
400899f3:	0020c0        	memw
400899f6:	0289      	s32i.n	a8, a2, 0
400899f8:	a08880        	addx4	a8, a8, a8
400899fb:	1128e0        	slli	a2, a8, 2
400899fe:	03bd      	mov.n	a11, a3
40089a00:	f03d      	nop.n
40089a02:	dbdba1        	l32r	a10, 40080970 <_init_end+0x570>
40089a05:	aa2a      	add.n	a10, a10, a2
40089a07:	008665        	call8	4008a26c <vListInsertEnd>
40089a0a:	000686        	j	40089a28 <vTaskPriorityInherit+0xd0>
40089a0d:	000000        	ill
40089a10:	03eb80        	rsr.prid	a8
40089a13:	048d80        	extui	a8, a8, 13, 1
40089a16:	db2b91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089a19:	a08890        	addx4	a8, a8, a9
40089a1c:	0020c0        	memw
40089a1f:	002882        	l32i	a8, a8, 0
40089a22:	0c2882        	l32i	a8, a8, 48
40089a25:	0c6282        	s32i	a8, a2, 48
40089a28:	f03d      	nop.n
40089a2a:	0020f0        	nop
40089a2d:	f03d      	nop.n
40089a2f:	0020f0        	nop
40089a32:	dbe1a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a35:	ff19a5        	call8	40088bd0 <vTaskExitCritical>
40089a38:	dbe0a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a3b:	ff1965        	call8	40088bd0 <vTaskExitCritical>
40089a3e:	f01d      	retw.n

40089a40 <xTaskPriorityDisinherit>:
40089a40:	004136        	entry	a1, 32
40089a43:	dbdda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a46:	ff04a5        	call8	40088a90 <vTaskEnterCritical>
40089a49:	087216        	beqz	a2, 40089ad4 <xTaskPriorityDisinherit+0x94>
40089a4c:	172282        	l32i	a8, a2, 92
40089a4f:	68dc      	bnez.n	a8, 40089a69 <xTaskPriorityDisinherit+0x29>
40089a51:	dc08d1        	l32r	a13, 40080a74 <_init_end+0x674>
40089a54:	dc09c1        	l32r	a12, 40080a78 <_init_end+0x678>
40089a57:	dbc4b1        	l32r	a11, 40080968 <_init_end+0x568>
40089a5a:	dbc4a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089a5d:	da8e81        	l32r	a8, 40080498 <_init_end+0x98>
40089a60:	0008e0        	callx8	a8
40089a63:	201110        	or	a1, a1, a1
40089a66:	019065        	call8	4008b36c <abort>
40089a69:	880b      	addi.n	a8, a8, -1
40089a6b:	176282        	s32i	a8, a2, 92
40089a6e:	f03d      	nop.n
40089a70:	f03d      	nop.n
40089a72:	f03d      	nop.n
40089a74:	f03d      	nop.n
40089a76:	c2a8      	l32i.n	a10, a2, 48
40089a78:	162292        	l32i	a9, a2, 88
40089a7b:	5a1a97        	beq	a10, a9, 40089ad9 <xTaskPriorityDisinherit+0x99>
40089a7e:	05c856        	bnez	a8, 40089ade <xTaskPriorityDisinherit+0x9e>
40089a81:	dbcda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a84:	ff00a5        	call8	40088a90 <vTaskEnterCritical>
40089a87:	328b      	addi.n	a3, a2, 8
40089a89:	03ad      	mov.n	a10, a3
40089a8b:	0084e5        	call8	4008a2d8 <uxListRemove>
40089a8e:	162282        	l32i	a8, a2, 88
40089a91:	c289      	s32i.n	a8, a2, 48
40089a93:	991c      	movi.n	a9, 25
40089a95:	c09980        	sub	a9, a9, a8
40089a98:	7299      	s32i.n	a9, a2, 28
40089a9a:	f03d      	nop.n
40089a9c:	f03d      	nop.n
40089a9e:	f03d      	nop.n
40089aa0:	f03d      	nop.n
40089aa2:	dbc621        	l32r	a2, 400809bc <_init_end+0x5bc>
40089aa5:	0020c0        	memw
40089aa8:	0228      	l32i.n	a2, a2, 0
40089aaa:	07b287        	bgeu	a2, a8, 40089ab5 <xTaskPriorityDisinherit+0x75>
40089aad:	dbc321        	l32r	a2, 400809bc <_init_end+0x5bc>
40089ab0:	0020c0        	memw
40089ab3:	0289      	s32i.n	a8, a2, 0
40089ab5:	a08880        	addx4	a8, a8, a8
40089ab8:	1128e0        	slli	a2, a8, 2
40089abb:	03bd      	mov.n	a11, a3
40089abd:	f03d      	nop.n
40089abf:	dbaca1        	l32r	a10, 40080970 <_init_end+0x570>
40089ac2:	80aa20        	add	a10, a10, a2
40089ac5:	007a65        	call8	4008a26c <vListInsertEnd>
40089ac8:	dbbca1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089acb:	ff1065        	call8	40088bd0 <vTaskExitCritical>
40089ace:	120c      	movi.n	a2, 1
40089ad0:	000306        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ad3:	020c00        	andb	b0, b12, b0
40089ad6:	000186        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ad9:	020c      	movi.n	a2, 0
40089adb:	000046        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ade:	020c      	movi.n	a2, 0
40089ae0:	dbb6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089ae3:	ff0ee5        	call8	40088bd0 <vTaskExitCritical>
40089ae6:	f01d      	retw.n

40089ae8 <pvTaskIncrementMutexHeldCount>:
40089ae8:	004136        	entry	a1, 32
40089aeb:	dbb3a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089aee:	fefa25        	call8	40088a90 <vTaskEnterCritical>
40089af1:	03eb80        	rsr.prid	a8
40089af4:	048d80        	extui	a8, a8, 13, 1
40089af7:	daf321        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089afa:	a08820        	addx4	a8, a8, a2
40089afd:	0020c0        	memw
40089b00:	002822        	l32i	a2, a8, 0
40089b03:	018216        	beqz	a2, 40089b1f <pvTaskIncrementMutexHeldCount+0x37>
40089b06:	03eb80        	rsr.prid	a8
40089b09:	048d80        	extui	a8, a8, 13, 1
40089b0c:	daee21        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089b0f:	a08820        	addx4	a8, a8, a2
40089b12:	0020c0        	memw
40089b15:	0898      	l32i.n	a9, a8, 0
40089b17:	172982        	l32i	a8, a9, 92
40089b1a:	881b      	addi.n	a8, a8, 1
40089b1c:	176982        	s32i	a8, a9, 92
40089b1f:	03eb80        	rsr.prid	a8
40089b22:	048d80        	extui	a8, a8, 13, 1
40089b25:	f03d      	nop.n
40089b27:	f03d      	nop.n
40089b29:	f03d      	nop.n
40089b2b:	dae621        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089b2e:	a08820        	addx4	a8, a8, a2
40089b31:	0020c0        	memw
40089b34:	0828      	l32i.n	a2, a8, 0
40089b36:	dba0a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089b39:	ff0965        	call8	40088bd0 <vTaskExitCritical>
40089b3c:	f01d      	retw.n
	...

40089b40 <prvGetNextExpireTime>:
40089b40:	004136        	entry	a1, 32
40089b43:	dbce81        	l32r	a8, 40080a7c <_init_end+0x67c>
40089b46:	08a8      	l32i.n	a10, a8, 0
40089b48:	0a98      	l32i.n	a9, a10, 0
40089b4a:	080c      	movi.n	a8, 0
40089b4c:	1b0c      	movi.n	a11, 1
40089b4e:	838b90        	moveqz	a8, a11, a9
40089b51:	0289      	s32i.n	a8, a2, 0
40089b53:	d8cc      	bnez.n	a8, 40089b64 <prvGetNextExpireTime+0x24>
40089b55:	f03d      	nop.n
40089b57:	f03d      	nop.n
40089b59:	f03d      	nop.n
40089b5b:	f03d      	nop.n
40089b5d:	3a28      	l32i.n	a2, a10, 12
40089b5f:	0228      	l32i.n	a2, a2, 0
40089b61:	f01d      	retw.n
40089b63:	020c00        	andb	b0, b12, b0
40089b66:	f01d      	retw.n

40089b68 <prvInsertTimerInActiveList>:
40089b68:	004136        	entry	a1, 32
40089b6b:	016232        	s32i	a3, a2, 4
40089b6e:	046222        	s32i	a2, a2, 16
40089b71:	1c3437        	bltu	a4, a3, 40089b91 <prvInsertTimerInActiveList+0x29>
40089b74:	c04450        	sub	a4, a4, a5
40089b77:	f03d      	nop.n
40089b79:	f03d      	nop.n
40089b7b:	f03d      	nop.n
40089b7d:	062232        	l32i	a3, a2, 24
40089b80:	34b437        	bgeu	a4, a3, 40089bb8 <prvInsertTimerInActiveList+0x50>
40089b83:	b24b      	addi.n	a11, a2, 4
40089b85:	dbbe21        	l32r	a2, 40080a80 <_init_end+0x680>
40089b88:	02a8      	l32i.n	a10, a2, 0
40089b8a:	007165        	call8	4008a2a0 <vListInsert>
40089b8d:	020c      	movi.n	a2, 0
40089b8f:	f01d      	retw.n
40089b91:	180c      	movi.n	a8, 1
40089b93:	013457        	bltu	a4, a5, 40089b98 <prvInsertTimerInActiveList+0x30>
40089b96:	080c      	movi.n	a8, 0
40089b98:	748080        	extui	a8, a8, 0, 8
40089b9b:	01a042        	movi	a4, 1
40089b9e:	02b357        	bgeu	a3, a5, 40089ba4 <prvInsertTimerInActiveList+0x3c>
40089ba1:	00a042        	movi	a4, 0
40089ba4:	148847        	bany	a8, a4, 40089bbc <prvInsertTimerInActiveList+0x54>
40089ba7:	04c2b2        	addi	a11, a2, 4
40089baa:	dbb421        	l32r	a2, 40080a7c <_init_end+0x67c>
40089bad:	0022a2        	l32i	a10, a2, 0
40089bb0:	006ee5        	call8	4008a2a0 <vListInsert>
40089bb3:	00a022        	movi	a2, 0
40089bb6:	f01d      	retw.n
40089bb8:	120c      	movi.n	a2, 1
40089bba:	f01d      	retw.n
40089bbc:	120c      	movi.n	a2, 1
40089bbe:	f01d      	retw.n

40089bc0 <prvCheckForValidListAndQueue>:
40089bc0:	004136        	entry	a1, 32
40089bc3:	dbb081        	l32r	a8, 40080a84 <_init_end+0x684>
40089bc6:	0888      	l32i.n	a8, a8, 0
40089bc8:	005856        	bnez	a8, 40089bd1 <prvCheckForValidListAndQueue+0x11>
40089bcb:	dbafa1        	l32r	a10, 40080a88 <_init_end+0x688>
40089bce:	fe3965        	call8	40087f64 <vPortCPUInitializeMutex>
40089bd1:	dbada1        	l32r	a10, 40080a88 <_init_end+0x688>
40089bd4:	feeba5        	call8	40088a90 <vTaskEnterCritical>
40089bd7:	dbab81        	l32r	a8, 40080a84 <_init_end+0x684>
40089bda:	0888      	l32i.n	a8, a8, 0
40089bdc:	04e856        	bnez	a8, 40089c2e <prvCheckForValidListAndQueue+0x6e>
40089bdf:	dbab31        	l32r	a3, 40080a8c <_init_end+0x68c>
40089be2:	03ad      	mov.n	a10, a3
40089be4:	006625        	call8	4008a248 <vListInitialise>
40089be7:	dbaa21        	l32r	a2, 40080a90 <_init_end+0x690>
40089bea:	02ad      	mov.n	a10, a2
40089bec:	0065a5        	call8	4008a248 <vListInitialise>
40089bef:	dba381        	l32r	a8, 40080a7c <_init_end+0x67c>
40089bf2:	0839      	s32i.n	a3, a8, 0
40089bf4:	f03d      	nop.n
40089bf6:	f03d      	nop.n
40089bf8:	f03d      	nop.n
40089bfa:	f03d      	nop.n
40089bfc:	dba131        	l32r	a3, 40080a80 <_init_end+0x680>
40089bff:	0329      	s32i.n	a2, a3, 0
40089c01:	0c0c      	movi.n	a12, 0
40089c03:	0b1c      	movi.n	a11, 16
40089c05:	aa0c      	movi.n	a10, 10
40089c07:	fdafe5        	call8	40087704 <xQueueGenericCreate>
40089c0a:	db9e21        	l32r	a2, 40080a84 <_init_end+0x684>
40089c0d:	02a9      	s32i.n	a10, a2, 0
40089c0f:	badc      	bnez.n	a10, 40089c2e <prvCheckForValidListAndQueue+0x6e>
40089c11:	f03d      	nop.n
40089c13:	f03d      	nop.n
40089c15:	f03d      	nop.n
40089c17:	f03d      	nop.n
40089c19:	db9ed1        	l32r	a13, 40080a94 <_init_end+0x694>
40089c1c:	9aa3c2        	movi	a12, 0x39a
40089c1f:	db9eb1        	l32r	a11, 40080a98 <_init_end+0x698>
40089c22:	db9ea1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089c25:	da1c81        	l32r	a8, 40080498 <_init_end+0x98>
40089c28:	0008e0        	callx8	a8
40089c2b:	017425        	call8	4008b36c <abort>
40089c2e:	db96a1        	l32r	a10, 40080a88 <_init_end+0x688>
40089c31:	fef9e5        	call8	40088bd0 <vTaskExitCritical>
40089c34:	f01d      	retw.n
	...

40089c38 <xTimerCreateTimerTask>:
40089c38:	006136        	entry	a1, 48
40089c3b:	fff865        	call8	40089bc0 <prvCheckForValidListAndQueue>
40089c3e:	db9121        	l32r	a2, 40080a84 <_init_end+0x684>
40089c41:	002222        	l32i	a2, a2, 0
40089c44:	01e216        	beqz	a2, 40089c66 <xTimerCreateTimerTask+0x2e>
40089c47:	0d0c      	movi.n	a13, 0
40089c49:	01d9      	s32i.n	a13, a1, 0
40089c4b:	0dfd      	mov.n	a15, a13
40089c4d:	1e0c      	movi.n	a14, 1
40089c4f:	f03d      	nop.n
40089c51:	0020f0        	nop
40089c54:	dae5c1        	l32r	a12, 400807e8 <_init_end+0x3e8>
40089c57:	db92b1        	l32r	a11, 40080aa0 <_init_end+0x6a0>
40089c5a:	db92a1        	l32r	a10, 40080aa4 <_init_end+0x6a4>
40089c5d:	ff1d65        	call8	40088e34 <xTaskCreatePinnedToCore>
40089c60:	0a2d      	mov.n	a2, a10
40089c62:	000086        	j	40089c68 <xTimerCreateTimerTask+0x30>
40089c65:	020c00        	andb	b0, b12, b0
40089c68:	62dc      	bnez.n	a2, 40089c82 <xTimerCreateTimerTask+0x4a>
40089c6a:	db8fd1        	l32r	a13, 40080aa8 <_init_end+0x6a8>
40089c6d:	27a1c2        	movi	a12, 0x127
40089c70:	db8ab1        	l32r	a11, 40080a98 <_init_end+0x698>
40089c73:	db8aa1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089c76:	da0881        	l32r	a8, 40080498 <_init_end+0x98>
40089c79:	0008e0        	callx8	a8
40089c7c:	201110        	or	a1, a1, a1
40089c7f:	016ee5        	call8	4008b36c <abort>
40089c82:	f01d      	retw.n

40089c84 <xTimerGenericCommand>:
40089c84:	006136        	entry	a1, 48
40089c87:	db7f81        	l32r	a8, 40080a84 <_init_end+0x684>
40089c8a:	08a8      	l32i.n	a10, a8, 0
40089c8c:	045a16        	beqz	a10, 40089cd5 <xTimerGenericCommand+0x51>
40089c8f:	0139      	s32i.n	a3, a1, 0
40089c91:	1149      	s32i.n	a4, a1, 4
40089c93:	2129      	s32i.n	a2, a1, 8
40089c95:	2c63e6        	bgei	a3, 6, 40089cc5 <xTimerGenericCommand+0x41>
40089c98:	fedbe5        	call8	40088a58 <xTaskGetSchedulerState>
40089c9b:	112a66        	bnei	a10, 2, 40089cb0 <xTimerGenericCommand+0x2c>
40089c9e:	0d0c      	movi.n	a13, 0
40089ca0:	06cd      	mov.n	a12, a6
40089ca2:	01bd      	mov.n	a11, a1
40089ca4:	db7821        	l32r	a2, 40080a84 <_init_end+0x684>
40089ca7:	02a8      	l32i.n	a10, a2, 0
40089ca9:	fdb3a5        	call8	400877e4 <xQueueGenericSend>
40089cac:	0a2d      	mov.n	a2, a10
40089cae:	f01d      	retw.n
40089cb0:	00a0d2        	movi	a13, 0
40089cb3:	20cdd0        	or	a12, a13, a13
40089cb6:	20b110        	or	a11, a1, a1
40089cb9:	db7221        	l32r	a2, 40080a84 <_init_end+0x684>
40089cbc:	02a8      	l32i.n	a10, a2, 0
40089cbe:	fdb265        	call8	400877e4 <xQueueGenericSend>
40089cc1:	0a2d      	mov.n	a2, a10
40089cc3:	f01d      	retw.n
40089cc5:	00a0d2        	movi	a13, 0
40089cc8:	20c550        	or	a12, a5, a5
40089ccb:	20b110        	or	a11, a1, a1
40089cce:	fdcfe5        	call8	400879cc <xQueueGenericSendFromISR>
40089cd1:	0a2d      	mov.n	a2, a10
40089cd3:	f01d      	retw.n
40089cd5:	020c      	movi.n	a2, 0
40089cd7:	f01d      	retw.n
40089cd9:	000000        	ill

40089cdc <prvSwitchTimerLists>:
40089cdc:	004136        	entry	a1, 32
40089cdf:	0017c6        	j	40089d42 <prvSwitchTimerLists+0x66>
40089ce2:	032222        	l32i	a2, a2, 12
40089ce5:	002242        	l32i	a4, a2, 0
40089ce8:	3228      	l32i.n	a2, a2, 12
40089cea:	324b      	addi.n	a3, a2, 4
40089cec:	03ad      	mov.n	a10, a3
40089cee:	005ea5        	call8	4008a2d8 <uxListRemove>
40089cf1:	9288      	l32i.n	a8, a2, 36
40089cf3:	02ad      	mov.n	a10, a2
40089cf5:	0008e0        	callx8	a8
40089cf8:	7288      	l32i.n	a8, a2, 28
40089cfa:	441866        	bnei	a8, 1, 40089d42 <prvSwitchTimerLists+0x66>
40089cfd:	6288      	l32i.n	a8, a2, 24
40089cff:	848a      	add.n	a8, a4, a8
40089d01:	17b487        	bgeu	a4, a8, 40089d1c <prvSwitchTimerLists+0x40>
40089d04:	1289      	s32i.n	a8, a2, 4
40089d06:	4229      	s32i.n	a2, a2, 16
40089d08:	03bd      	mov.n	a11, a3
40089d0a:	f03d      	nop.n
40089d0c:	f03d      	nop.n
40089d0e:	f03d      	nop.n
40089d10:	db5b21        	l32r	a2, 40080a7c <_init_end+0x67c>
40089d13:	02a8      	l32i.n	a10, a2, 0
40089d15:	0058a5        	call8	4008a2a0 <vListInsert>
40089d18:	000986        	j	40089d42 <prvSwitchTimerLists+0x66>
40089d1b:	a0e200        	addx4	a14, a2, a0
40089d1e:	dee000        	f64iter	a14, a0, a0, 1, 1
40089d21:	04cd20        	extui	a12, a2, 13, 1
40089d24:	0ebd      	mov.n	a11, a14
40089d26:	02ad      	mov.n	a10, a2
40089d28:	fff5a5        	call8	40089c84 <xTimerGenericCommand>
40089d2b:	3adc      	bnez.n	a10, 40089d42 <prvSwitchTimerLists+0x66>
40089d2d:	db5fd1        	l32r	a13, 40080aac <_init_end+0x6ac>
40089d30:	75a3c2        	movi	a12, 0x375
40089d33:	db59b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089d36:	db59a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089d39:	d9d781        	l32r	a8, 40080498 <_init_end+0x98>
40089d3c:	0008e0        	callx8	a8
40089d3f:	0162e5        	call8	4008b36c <abort>
40089d42:	db4e21        	l32r	a2, 40080a7c <_init_end+0x67c>
40089d45:	0228      	l32i.n	a2, a2, 0
40089d47:	0288      	l32i.n	a8, a2, 0
40089d49:	f95856        	bnez	a8, 40089ce2 <prvSwitchTimerLists+0x6>
40089d4c:	db4d31        	l32r	a3, 40080a80 <_init_end+0x680>
40089d4f:	0388      	l32i.n	a8, a3, 0
40089d51:	db4a41        	l32r	a4, 40080a7c <_init_end+0x67c>
40089d54:	0489      	s32i.n	a8, a4, 0
40089d56:	0329      	s32i.n	a2, a3, 0
40089d58:	f01d      	retw.n
	...

40089d5c <prvSampleTimeNow>:
40089d5c:	004136        	entry	a1, 32
40089d5f:	203220        	or	a3, a2, a2
40089d62:	fe8da5        	call8	4008863c <xTaskGetTickCount>
40089d65:	202aa0        	or	a2, a10, a10
40089d68:	db5281        	l32r	a8, 40080ab0 <_init_end+0x6b0>
40089d6b:	002882        	l32i	a8, a8, 0
40089d6e:	0aba87        	bgeu	a10, a8, 40089d7c <prvSampleTimeNow+0x20>
40089d71:	fff6a5        	call8	40089cdc <prvSwitchTimerLists>
40089d74:	180c      	movi.n	a8, 1
40089d76:	0389      	s32i.n	a8, a3, 0
40089d78:	000106        	j	40089d80 <prvSampleTimeNow+0x24>
40089d7b:	080c00        	lsx	f0, a12, a0
40089d7e:	0389      	s32i.n	a8, a3, 0
40089d80:	f03d      	nop.n
40089d82:	f03d      	nop.n
40089d84:	f03d      	nop.n
40089d86:	f03d      	nop.n
40089d88:	db4a81        	l32r	a8, 40080ab0 <_init_end+0x6b0>
40089d8b:	0829      	s32i.n	a2, a8, 0
40089d8d:	f01d      	retw.n
	...

40089d90 <prvProcessExpiredTimer>:
40089d90:	004136        	entry	a1, 32
40089d93:	db3a41        	l32r	a4, 40080a7c <_init_end+0x67c>
40089d96:	0448      	l32i.n	a4, a4, 0
40089d98:	3448      	l32i.n	a4, a4, 12
40089d9a:	3448      	l32i.n	a4, a4, 12
40089d9c:	a44b      	addi.n	a10, a4, 4
40089d9e:	0053a5        	call8	4008a2d8 <uxListRemove>
40089da1:	7488      	l32i.n	a8, a4, 28
40089da3:	331866        	bnei	a8, 1, 40089dda <prvProcessExpiredTimer+0x4a>
40089da6:	64b8      	l32i.n	a11, a4, 24
40089da8:	02dd      	mov.n	a13, a2
40089daa:	03cd      	mov.n	a12, a3
40089dac:	bb2a      	add.n	a11, a11, a2
40089dae:	04ad      	mov.n	a10, a4
40089db0:	ffdb65        	call8	40089b68 <prvInsertTimerInActiveList>
40089db3:	231a66        	bnei	a10, 1, 40089dda <prvProcessExpiredTimer+0x4a>
40089db6:	0e0c      	movi.n	a14, 0
40089db8:	0edd      	mov.n	a13, a14
40089dba:	02cd      	mov.n	a12, a2
40089dbc:	0ebd      	mov.n	a11, a14
40089dbe:	04ad      	mov.n	a10, a4
40089dc0:	ffec25        	call8	40089c84 <xTimerGenericCommand>
40089dc3:	3adc      	bnez.n	a10, 40089dda <prvProcessExpiredTimer+0x4a>
40089dc5:	db3bd1        	l32r	a13, 40080ab4 <_init_end+0x6b4>
40089dc8:	fea1c2        	movi	a12, 0x1fe
40089dcb:	db33b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089dce:	db33a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089dd1:	d9b181        	l32r	a8, 40080498 <_init_end+0x98>
40089dd4:	0008e0        	callx8	a8
40089dd7:	015965        	call8	4008b36c <abort>
40089dda:	9488      	l32i.n	a8, a4, 36
40089ddc:	04ad      	mov.n	a10, a4
40089dde:	0008e0        	callx8	a8
40089de1:	f01d      	retw.n
	...

40089de4 <prvProcessTimerOrBlockTask>:
40089de4:	006136        	entry	a1, 48
40089de7:	fe82e5        	call8	40088614 <vTaskSuspendAll>
40089dea:	a1cb      	addi.n	a10, a1, 12
40089dec:	fff6e5        	call8	40089d5c <prvSampleTimeNow>
40089def:	0a4d      	mov.n	a4, a10
40089df1:	3188      	l32i.n	a8, a1, 12
40089df3:	03d856        	bnez	a8, 40089e34 <prvProcessTimerOrBlockTask+0x50>
40089df6:	180c      	movi.n	a8, 1
40089df8:	090c      	movi.n	a9, 0
40089dfa:	839830        	moveqz	a9, a8, a3
40089dfd:	743090        	extui	a3, a9, 0, 8
40089e00:	01ba27        	bgeu	a10, a2, 40089e05 <prvProcessTimerOrBlockTask+0x21>
40089e03:	080c      	movi.n	a8, 0
40089e05:	0d0387        	bnone	a3, a8, 40089e16 <prvProcessTimerOrBlockTask+0x32>
40089e08:	ff6ca5        	call8	400894d4 <xTaskResumeAll>
40089e0b:	20b440        	or	a11, a4, a4
40089e0e:	20a220        	or	a10, a2, a2
40089e11:	fff7e5        	call8	40089d90 <prvProcessExpiredTimer>
40089e14:	f01d      	retw.n
40089e16:	c0b240        	sub	a11, a2, a4
40089e19:	db1a21        	l32r	a2, 40080a84 <_init_end+0x684>
40089e1c:	0022a2        	l32i	a10, a2, 0
40089e1f:	fdfc65        	call8	40087de4 <vQueueWaitForMessageRestricted>
40089e22:	ff6b25        	call8	400894d4 <xTaskResumeAll>
40089e25:	1adc      	bnez.n	a10, 40089e3a <prvProcessTimerOrBlockTask+0x56>
40089e27:	03eba0        	rsr.prid	a10
40089e2a:	04ada0        	extui	a10, a10, 13, 1
40089e2d:	f739a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40089e30:	f01d      	retw.n
40089e32:	100000        	and	a0, a0, a0
40089e35:	e52011        	l32r	a1, 400832b8 <ram_read_sar_dout+0x10>
40089e38:	ff69      	s32i.n	a6, a15, 60
40089e3a:	f01d      	retw.n

40089e3c <prvProcessReceivedCommands>:
40089e3c:	008136        	entry	a1, 64
40089e3f:	0030c6        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089e42:	4188      	l32i.n	a8, a1, 16
40089e44:	0098d6        	bgez	a8, 40089e51 <prvProcessReceivedCommands+0x15>
40089e47:	5188      	l32i.n	a8, a1, 20
40089e49:	71b8      	l32i.n	a11, a1, 28
40089e4b:	0621a2        	l32i	a10, a1, 24
40089e4e:	0008e0        	callx8	a8
40089e51:	4188      	l32i.n	a8, a1, 16
40089e53:	0af896        	bltz	a8, 40089f06 <prvProcessReceivedCommands+0xca>
40089e56:	6128      	l32i.n	a2, a1, 24
40089e58:	5288      	l32i.n	a8, a2, 20
40089e5a:	488c      	beqz.n	a8, 40089e62 <prvProcessReceivedCommands+0x26>
40089e5c:	04c2a2        	addi	a10, a2, 4
40089e5f:	0047a5        	call8	4008a2d8 <uxListRemove>
40089e62:	0cc1a2        	addi	a10, a1, 12
40089e65:	ffef65        	call8	40089d5c <prvSampleTimeNow>
40089e68:	042182        	l32i	a8, a1, 16
40089e6b:	09a092        	movi	a9, 9
40089e6e:	02b987        	bgeu	a9, a8, 40089e74 <prvProcessReceivedCommands+0x38>
40089e71:	002446        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089e74:	db1191        	l32r	a9, 40080ab8 <_init_end+0x6b8>
40089e77:	a08890        	addx4	a8, a8, a9
40089e7a:	0888      	l32i.n	a8, a8, 0
40089e7c:	0008a0        	jx	a8
40089e7f:	5188      	l32i.n	a8, a1, 20
40089e81:	62b8      	l32i.n	a11, a2, 24
40089e83:	08dd      	mov.n	a13, a8
40089e85:	0acd      	mov.n	a12, a10
40089e87:	b8ba      	add.n	a11, a8, a11
40089e89:	02ad      	mov.n	a10, a2
40089e8b:	ffcde5        	call8	40089b68 <prvInsertTimerInActiveList>
40089e8e:	741a66        	bnei	a10, 1, 40089f06 <prvProcessReceivedCommands+0xca>
40089e91:	9288      	l32i.n	a8, a2, 36
40089e93:	20a220        	or	a10, a2, a2
40089e96:	0008e0        	callx8	a8
40089e99:	7288      	l32i.n	a8, a2, 28
40089e9b:	671866        	bnei	a8, 1, 40089f06 <prvProcessReceivedCommands+0xca>
40089e9e:	51c8      	l32i.n	a12, a1, 20
40089ea0:	6288      	l32i.n	a8, a2, 24
40089ea2:	0e0c      	movi.n	a14, 0
40089ea4:	0edd      	mov.n	a13, a14
40089ea6:	cc8a      	add.n	a12, a12, a8
40089ea8:	0ebd      	mov.n	a11, a14
40089eaa:	02ad      	mov.n	a10, a2
40089eac:	ffdd65        	call8	40089c84 <xTimerGenericCommand>
40089eaf:	053a56        	bnez	a10, 40089f06 <prvProcessReceivedCommands+0xca>
40089eb2:	db02d1        	l32r	a13, 40080abc <_init_end+0x6bc>
40089eb5:	04a3c2        	movi	a12, 0x304
40089eb8:	daf8b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089ebb:	daf8a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089ebe:	d97681        	l32r	a8, 40080498 <_init_end+0x98>
40089ec1:	0008e0        	callx8	a8
40089ec4:	014a65        	call8	4008b36c <abort>
40089ec7:	51b8      	l32i.n	a11, a1, 20
40089ec9:	62b9      	s32i.n	a11, a2, 24
40089ecb:	bbdc      	bnez.n	a11, 40089eea <prvProcessReceivedCommands+0xae>
40089ecd:	f03d      	nop.n
40089ecf:	f03d      	nop.n
40089ed1:	f03d      	nop.n
40089ed3:	f03d      	nop.n
40089ed5:	daf9d1        	l32r	a13, 40080abc <_init_end+0x6bc>
40089ed8:	1ba3c2        	movi	a12, 0x31b
40089edb:	daefb1        	l32r	a11, 40080a98 <_init_end+0x698>
40089ede:	daefa1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089ee1:	d96d81        	l32r	a8, 40080498 <_init_end+0x98>
40089ee4:	0008e0        	callx8	a8
40089ee7:	014865        	call8	4008b36c <abort>
40089eea:	20daa0        	or	a13, a10, a10
40089eed:	20caa0        	or	a12, a10, a10
40089ef0:	80bab0        	add	a11, a10, a11
40089ef3:	02ad      	mov.n	a10, a2
40089ef5:	ffc725        	call8	40089b68 <prvInsertTimerInActiveList>
40089ef8:	000286        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089efb:	000000        	ill
40089efe:	02ad      	mov.n	a10, a2
40089f00:	da3981        	l32r	a8, 400807e4 <_init_end+0x3e4>
40089f03:	0008e0        	callx8	a8
40089f06:	00a0d2        	movi	a13, 0
40089f09:	20cdd0        	or	a12, a13, a13
40089f0c:	10c1b2        	addi	a11, a1, 16
40089f0f:	dadd81        	l32r	a8, 40080a84 <_init_end+0x684>
40089f12:	0028a2        	l32i	a10, a8, 0
40089f15:	fdc4e5        	call8	40087b64 <xQueueGenericReceive>
40089f18:	f26a56        	bnez	a10, 40089e42 <prvProcessReceivedCommands+0x6>
40089f1b:	f01d      	retw.n
40089f1d:	000000        	ill

40089f20 <prvTimerTask>:
40089f20:	006136        	entry	a1, 48
40089f23:	0cc1a2        	addi	a10, a1, 12
40089f26:	ffc1a5        	call8	40089b40 <prvGetNextExpireTime>
40089f29:	0321b2        	l32i	a11, a1, 12
40089f2c:	ffeb65        	call8	40089de4 <prvProcessTimerOrBlockTask>
40089f2f:	fff0e5        	call8	40089e3c <prvProcessReceivedCommands>
40089f32:	fffb46        	j	40089f23 <prvTimerTask+0x3>
40089f35:	000000        	ill

40089f38 <_xt_context_save>:
40089f38:	5129      	s32i.n	a2, a1, 20
40089f3a:	6139      	s32i.n	a3, a1, 24
40089f3c:	7149      	s32i.n	a4, a1, 28
40089f3e:	8159      	s32i.n	a5, a1, 32
40089f40:	9169      	s32i.n	a6, a1, 36
40089f42:	a179      	s32i.n	a7, a1, 40
40089f44:	b189      	s32i.n	a8, a1, 44
40089f46:	c199      	s32i.n	a9, a1, 48
40089f48:	d1a9      	s32i.n	a10, a1, 52
40089f4a:	e1b9      	s32i.n	a11, a1, 56
40089f4c:	1161e2        	s32i	a14, a1, 68
40089f4f:	1261f2        	s32i	a15, a1, 72
40089f52:	030330        	rsr.sar	a3
40089f55:	136132        	s32i	a3, a1, 76
40089f58:	030030        	rsr.lbeg	a3
40089f5b:	166132        	s32i	a3, a1, 88
40089f5e:	030130        	rsr.lend	a3
40089f61:	176132        	s32i	a3, a1, 92
40089f64:	030230        	rsr.lcount	a3
40089f67:	186132        	s32i	a3, a1, 96
40089f6a:	009d      	mov.n	a9, a0
40089f6c:	1961c2        	s32i	a12, a1, 100
40089f6f:	1a61d2        	s32i	a13, a1, 104
40089f72:	1b6192        	s32i	a9, a1, 108
40089f75:	f1c8      	l32i.n	a12, a1, 60
40089f77:	1021d2        	l32i	a13, a1, 64
40089f7a:	c198      	l32i.n	a9, a1, 48
40089f7c:	01d112        	addmi	a1, a1, 0x100
40089f7f:	c0c112        	addi	a1, a1, -64
40089f82:	02f185        	call0	4008ce9c <xthal_window_spill_nw>
40089f85:	ffd112        	addmi	a1, a1, 0xffffff00
40089f88:	40c112        	addi	a1, a1, 64
40089f8b:	1921c2        	l32i	a12, a1, 100
40089f8e:	1a21d2        	l32i	a13, a1, 104
40089f91:	1b2192        	l32i	a9, a1, 108
40089f94:	70c122        	addi	a2, a1, 112
40089f97:	030cc5        	call0	4008d064 <xthal_save_extra_nw>
40089f9a:	090d      	mov.n	a0, a9
40089f9c:	f00d      	ret.n
	...

40089fa0 <_xt_context_restore>:
40089fa0:	00dd      	mov.n	a13, a0
40089fa2:	70c122        	addi	a2, a1, 112
40089fa5:	0307c5        	call0	4008d024 <xthal_restore_extra_nw>
40089fa8:	0d0d      	mov.n	a0, a13
40089faa:	162122        	l32i	a2, a1, 88
40089fad:	172132        	l32i	a3, a1, 92
40089fb0:	130020        	wsr.lbeg	a2
40089fb3:	182122        	l32i	a2, a1, 96
40089fb6:	130130        	wsr.lend	a3
40089fb9:	130220        	wsr.lcount	a2
40089fbc:	132132        	l32i	a3, a1, 76
40089fbf:	5128      	l32i.n	a2, a1, 20
40089fc1:	130330        	wsr.sar	a3
40089fc4:	6138      	l32i.n	a3, a1, 24
40089fc6:	7148      	l32i.n	a4, a1, 28
40089fc8:	8158      	l32i.n	a5, a1, 32
40089fca:	9168      	l32i.n	a6, a1, 36
40089fcc:	a178      	l32i.n	a7, a1, 40
40089fce:	b188      	l32i.n	a8, a1, 44
40089fd0:	c198      	l32i.n	a9, a1, 48
40089fd2:	d1a8      	l32i.n	a10, a1, 52
40089fd4:	e1b8      	l32i.n	a11, a1, 56
40089fd6:	f1c8      	l32i.n	a12, a1, 60
40089fd8:	1021d2        	l32i	a13, a1, 64
40089fdb:	1121e2        	l32i	a14, a1, 68
40089fde:	1221f2        	l32i	a15, a1, 72
40089fe1:	f00d      	ret.n
	...

40089fe4 <_xt_coproc_init>:
40089fe4:	002136        	entry	a1, 16
40089fe7:	d9b821        	l32r	a2, 400806c8 <_init_end+0x2c8>
40089fea:	328b      	addi.n	a3, a2, 8
40089fec:	040c      	movi.n	a4, 0
40089fee:	0249      	s32i.n	a4, a2, 0
40089ff0:	224b      	addi.n	a2, a2, 4
40089ff2:	f83237        	bltu	a2, a3, 40089fee <_xt_coproc_init+0xa>
40089ff5:	f01d      	retw.n
	...

40089ff8 <_xt_coproc_release>:
40089ff8:	002136        	entry	a1, 16
40089ffb:	03eb50        	rsr.prid	a5
40089ffe:	045d50        	extui	a5, a5, 13, 1
4008a001:	430c      	movi.n	a3, 4
4008a003:	825530        	mull	a5, a5, a3
4008a006:	d9b031        	l32r	a3, 400806c8 <_init_end+0x2c8>
4008a009:	335a      	add.n	a3, a3, a5
4008a00b:	434b      	addi.n	a4, a3, 4
4008a00d:	050c      	movi.n	a5, 0
4008a00f:	006360        	rsil	a6, 3
4008a012:	0378      	l32i.n	a7, a3, 0
4008a014:	019277        	bne	a2, a7, 4008a019 <_xt_coproc_release+0x21>
4008a017:	0359      	s32i.n	a5, a3, 0
4008a019:	334b      	addi.n	a3, a3, 4
4008a01b:	f33347        	bltu	a3, a4, 4008a012 <_xt_coproc_release+0x1a>
4008a01e:	13e660        	wsr.ps	a6
4008a021:	f01d      	retw.n
	...

4008a024 <_xt_coproc_savecs>:
4008a024:	03e020        	rsr.cpenable	a2
4008a027:	629c      	beqz.n	a2, 4008a041 <_xt_coproc_savecs+0x1d>
4008a029:	00ed      	mov.n	a14, a0
4008a02b:	001dc5        	call0	4008a208 <_frxt_task_coproc_state>
4008a02e:	0e0d      	mov.n	a0, a14
4008a030:	df8c      	beqz.n	a15, 4008a041 <_xt_coproc_savecs+0x1d>
4008a032:	025f22        	s16i	a2, a15, 4
4008a035:	d9a5d1        	l32r	a13, 400806cc <_init_end+0x2cc>
4008a038:	2ff8      	l32i.n	a15, a15, 8
4008a03a:	036207        	bbci	a2, 0, 4008a041 <_xt_coproc_savecs+0x1d>
4008a03d:	0de8      	l32i.n	a14, a13, 0
4008a03f:	3efa      	add.n	a3, a14, a15
4008a041:	f00d      	ret.n
	...

4008a044 <_xt_coproc_restorecs>:
4008a044:	00ed      	mov.n	a14, a0
4008a046:	001c05        	call0	4008a208 <_frxt_task_coproc_state>
4008a049:	0e0d      	mov.n	a0, a14
4008a04b:	2f9c      	beqz.n	a15, 4008a061 <_xt_coproc_restorecs+0x1d>
4008a04d:	021f32        	l16ui	a3, a15, 4
4008a050:	303320        	xor	a3, a3, a2
4008a053:	1f39      	s32i.n	a3, a15, 4
4008a055:	d99dd1        	l32r	a13, 400806cc <_init_end+0x2cc>
4008a058:	2ff8      	l32i.n	a15, a15, 8
4008a05a:	036207        	bbci	a2, 0, 4008a061 <_xt_coproc_restorecs+0x1d>
4008a05d:	0de8      	l32i.n	a14, a13, 0
4008a05f:	3efa      	add.n	a3, a14, a15
4008a061:	f00d      	ret.n
	...

4008a064 <_frxt_setup_switch>:
4008a064:	002136        	entry	a1, 16
4008a067:	03eb30        	rsr.prid	a3
4008a06a:	043d30        	extui	a3, a3, 13, 1
4008a06d:	da9421        	l32r	a2, 40080ac0 <_init_end+0x6c0>
4008a070:	a02320        	addx4	a2, a3, a2
4008a073:	130c      	movi.n	a3, 1
4008a075:	0239      	s32i.n	a3, a2, 0
4008a077:	f01d      	retw.n
4008a079:	000000        	ill

4008a07c <_frxt_int_enter>:
4008a07c:	0f61c2        	s32i	a12, a1, 60
4008a07f:	1061d2        	s32i	a13, a1, 64
4008a082:	20c000        	or	a12, a0, a0
4008a085:	ffeb05        	call0	40089f38 <_xt_context_save>
4008a088:	03eb40        	rsr.prid	a4
4008a08b:	044d40        	extui	a4, a4, 13, 1
4008a08e:	d8ed21        	l32r	a2, 40080444 <_init_end+0x44>
4008a091:	a02420        	addx4	a2, a4, a2
4008a094:	d98531        	l32r	a3, 400806a8 <_init_end+0x2a8>
4008a097:	a03430        	addx4	a3, a4, a3
4008a09a:	0228      	l32i.n	a2, a2, 0
4008a09c:	e29c      	beqz.n	a2, 4008a0be <_frxt_int_enter+0x42>
4008a09e:	0328      	l32i.n	a2, a3, 0
4008a0a0:	221b      	addi.n	a2, a2, 1
4008a0a2:	0329      	s32i.n	a2, a3, 0
4008a0a4:	161266        	bnei	a2, 1, 4008a0be <_frxt_int_enter+0x42>
4008a0a7:	d98721        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a0aa:	a02420        	addx4	a2, a4, a2
4008a0ad:	0228      	l32i.n	a2, a2, 0
4008a0af:	b28c      	beqz.n	a2, 4008a0be <_frxt_int_enter+0x42>
4008a0b1:	0219      	s32i.n	a1, a2, 0
4008a0b3:	da8411        	l32r	a1, 40080ac4 <_init_end+0x6c4>
4008a0b6:	00a622        	movi	a2, 0x600
4008a0b9:	822420        	mull	a2, a4, a2
4008a0bc:	112a      	add.n	a1, a1, a2
4008a0be:	0c0d      	mov.n	a0, a12
4008a0c0:	f00d      	ret.n
	...

4008a0c4 <_frxt_int_exit>:
4008a0c4:	03eb40        	rsr.prid	a4
4008a0c7:	044d40        	extui	a4, a4, 13, 1
4008a0ca:	d8de21        	l32r	a2, 40080444 <_init_end+0x44>
4008a0cd:	a02420        	addx4	a2, a4, a2
4008a0d0:	d97631        	l32r	a3, 400806a8 <_init_end+0x2a8>
4008a0d3:	a03430        	addx4	a3, a4, a3
4008a0d6:	006300        	rsil	a0, 3
4008a0d9:	0228      	l32i.n	a2, a2, 0
4008a0db:	e2ac      	beqz.n	a2, 4008a10d <_frxt_int_exit+0x49>
4008a0dd:	0328      	l32i.n	a2, a3, 0
4008a0df:	220b      	addi.n	a2, a2, -1
4008a0e1:	0329      	s32i.n	a2, a3, 0
4008a0e3:	62ec      	bnez.n	a2, 4008a10d <_frxt_int_exit+0x49>
4008a0e5:	d97721        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a0e8:	a02420        	addx4	a2, a4, a2
4008a0eb:	0228      	l32i.n	a2, a2, 0
4008a0ed:	029c      	beqz.n	a2, 4008a101 <_frxt_int_exit+0x3d>
4008a0ef:	0218      	l32i.n	a1, a2, 0
4008a0f1:	da7321        	l32r	a2, 40080ac0 <_init_end+0x6c0>
4008a0f4:	a02420        	addx4	a2, a4, a2
4008a0f7:	0238      	l32i.n	a3, a2, 0
4008a0f9:	039c      	beqz.n	a3, 4008a10d <_frxt_int_exit+0x49>
4008a0fb:	00a032        	movi	a3, 0
4008a0fe:	006232        	s32i	a3, a2, 0
4008a101:	201110        	or	a1, a1, a1
4008a104:	000e15        	call4	4008a1e8 <vPortYieldFromInt>
4008a107:	201110        	or	a1, a1, a1
4008a10a:	000485        	call0	4008a154 <_frxt_dispatch>
4008a10d:	ffe905        	call0	40089fa0 <_xt_context_restore>
4008a110:	0108      	l32i.n	a0, a1, 0
4008a112:	f00d      	ret.n

4008a114 <_frxt_timer_int>:
4008a114:	002136        	entry	a1, 16
4008a117:	d9f931        	l32r	a3, 400808fc <_init_end+0x4fc>
4008a11a:	002322        	l32i	a2, a3, 0
4008a11d:	03f030        	rsr.ccompare0	a3
4008a120:	804320        	add	a4, a3, a2
4008a123:	13f040        	wsr.ccompare0	a4
4008a126:	002020        	esync
4008a129:	fdde95        	call4	40087f14 <xPortSysTickHandler>
4008a12c:	002020        	esync
4008a12f:	03ea40        	rsr.ccount	a4
4008a132:	c04430        	sub	a4, a4, a3
4008a135:	de2247        	blt	a2, a4, 4008a117 <_frxt_timer_int+0x3>
4008a138:	f01d      	retw.n
	...

4008a13c <_frxt_tick_timer_init>:
4008a13c:	002136        	entry	a1, 16
4008a13f:	d9ef21        	l32r	a2, 400808fc <_init_end+0x4fc>
4008a142:	0238      	l32i.n	a3, a2, 0
4008a144:	03ea20        	rsr.ccount	a2
4008a147:	223a      	add.n	a2, a2, a3
4008a149:	13f020        	wsr.ccompare0	a2
4008a14c:	064c      	movi.n	a6, 64
4008a14e:	001dd5        	call4	4008a32c <xt_ints_on>
4008a151:	f01d      	retw.n
	...

4008a154 <_frxt_dispatch>:
4008a154:	fe5215        	call4	40088678 <vTaskSwitchContext>
4008a157:	d95b21        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a15a:	03eb30        	rsr.prid	a3
4008a15d:	043d30        	extui	a3, a3, 13, 1
4008a160:	a02320        	addx4	a2, a3, a2
4008a163:	0238      	l32i.n	a3, a2, 0
4008a165:	0318      	l32i.n	a1, a3, 0
4008a167:	0239      	s32i.n	a3, a2, 0
4008a169:	0128      	l32i.n	a2, a1, 0
4008a16b:	a2cc      	bnez.n	a2, 4008a179 <_frxt_dispatch+0x25>
4008a16d:	2138      	l32i.n	a3, a1, 8
4008a16f:	1108      	l32i.n	a0, a1, 4
4008a171:	002010        	rsync
4008a174:	13e630        	wsr.ps	a3
4008a177:	f01d      	retw.n
4008a179:	d95231        	l32r	a3, 400806c4 <_init_end+0x2c4>
4008a17c:	03eb20        	rsr.prid	a2
4008a17f:	042d20        	extui	a2, a2, 13, 1
4008a182:	a03230        	addx4	a3, a2, a3
4008a185:	002332        	l32i	a3, a3, 0
4008a188:	012322        	l32i	a2, a3, 4
4008a18b:	001232        	l16ui	a3, a2, 0
4008a18e:	13e030        	wsr.cpenable	a3
4008a191:	ffe0c5        	call0	40089fa0 <_xt_context_restore>
4008a194:	002010        	rsync
4008a197:	0108      	l32i.n	a0, a1, 0
4008a199:	f00d      	ret.n
	...

4008a19c <vPortYield>:
4008a19c:	004136        	entry	a1, 32
4008a19f:	03e620        	rsr.ps	a2
4008a1a2:	1109      	s32i.n	a0, a1, 4
4008a1a4:	026122        	s32i	a2, a1, 8
4008a1a7:	da4861        	l32r	a6, 40080ac8 <_init_end+0x6c8>
4008a1aa:	102260        	and	a2, a2, a6
4008a1ad:	03c222        	addi	a2, a2, 3
4008a1b0:	13e620        	wsr.ps	a2
4008a1b3:	002010        	rsync
4008a1b6:	02ce45        	call0	4008ce9c <xthal_window_spill_nw>
4008a1b9:	2128      	l32i.n	a2, a1, 8
4008a1bb:	13e620        	wsr.ps	a2
4008a1be:	006320        	rsil	a2, 3
4008a1c1:	ffe605        	call0	4008a024 <_xt_coproc_savecs>
4008a1c4:	d94021        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a1c7:	03eb30        	rsr.prid	a3
4008a1ca:	043d30        	extui	a3, a3, 13, 1
4008a1cd:	a02320        	addx4	a2, a3, a2
4008a1d0:	0228      	l32i.n	a2, a2, 0
4008a1d2:	030c      	movi.n	a3, 0
4008a1d4:	0139      	s32i.n	a3, a1, 0
4008a1d6:	0219      	s32i.n	a1, a2, 0
4008a1d8:	1228      	l32i.n	a2, a2, 4
4008a1da:	030c      	movi.n	a3, 0
4008a1dc:	13e030        	wsr.cpenable	a3
4008a1df:	002216        	beqz	a2, 4008a1e5 <vPortYield+0x49>
4008a1e2:	005232        	s16i	a3, a2, 0
4008a1e5:	fff6c5        	call0	4008a154 <_frxt_dispatch>

4008a1e8 <vPortYieldFromInt>:
4008a1e8:	002136        	entry	a1, 16
4008a1eb:	d93631        	l32r	a3, 400806c4 <_init_end+0x2c4>
4008a1ee:	03eb20        	rsr.prid	a2
4008a1f1:	042d20        	extui	a2, a2, 13, 1
4008a1f4:	a03230        	addx4	a3, a2, a3
4008a1f7:	0338      	l32i.n	a3, a3, 0
4008a1f9:	1328      	l32i.n	a2, a3, 4
4008a1fb:	03e030        	rsr.cpenable	a3
4008a1fe:	005232        	s16i	a3, a2, 0
4008a201:	030c      	movi.n	a3, 0
4008a203:	13e030        	wsr.cpenable	a3
4008a206:	f01d      	retw.n

4008a208 <_frxt_task_coproc_state>:
4008a208:	03eb30        	rsr.prid	a3
4008a20b:	043d30        	extui	a3, a3, 13, 1
4008a20e:	d88df1        	l32r	a15, 40080444 <_init_end+0x44>
4008a211:	a0f3f0        	addx4	a15, a3, a15
4008a214:	0ff8      	l32i.n	a15, a15, 0
4008a216:	6f9c      	beqz.n	a15, 4008a230 <_frxt_task_coproc_state+0x28>
4008a218:	d924f1        	l32r	a15, 400806a8 <_init_end+0x2a8>
4008a21b:	a0f3f0        	addx4	a15, a3, a15
4008a21e:	0ff8      	l32i.n	a15, a15, 0
4008a220:	cfcc      	bnez.n	a15, 4008a230 <_frxt_task_coproc_state+0x28>
4008a222:	d928f1        	l32r	a15, 400806c4 <_init_end+0x2c4>
4008a225:	a0f3f0        	addx4	a15, a3, a15
4008a228:	0ff8      	l32i.n	a15, a15, 0
4008a22a:	4f8c      	beqz.n	a15, 4008a232 <_frxt_task_coproc_state+0x2a>
4008a22c:	1ff8      	l32i.n	a15, a15, 4
4008a22e:	f00d      	ret.n
4008a230:	0f0c      	movi.n	a15, 0
4008a232:	f00d      	ret.n

4008a234 <prvIsQueueEmpty>:
4008a234:	004136        	entry	a1, 32
4008a237:	0020c0        	memw
4008a23a:	e228      	l32i.n	a2, a2, 56
4008a23c:	22cc      	bnez.n	a2, 4008a242 <prvIsQueueEmpty+0xe>
4008a23e:	120c      	movi.n	a2, 1
4008a240:	f01d      	retw.n
4008a242:	020c      	movi.n	a2, 0
4008a244:	f01d      	retw.n
	...

4008a248 <vListInitialise>:
4008a248:	004136        	entry	a1, 32
4008a24b:	828b      	addi.n	a8, a2, 8
4008a24d:	1289      	s32i.n	a8, a2, 4
4008a24f:	f97c      	movi.n	a9, -1
4008a251:	2299      	s32i.n	a9, a2, 8
4008a253:	3289      	s32i.n	a8, a2, 12
4008a255:	4289      	s32i.n	a8, a2, 16
4008a257:	080c      	movi.n	a8, 0
4008a259:	0289      	s32i.n	a8, a2, 0
4008a25b:	f01d      	retw.n
4008a25d:	000000        	ill

4008a260 <vListInitialiseItem>:
4008a260:	004136        	entry	a1, 32
4008a263:	080c      	movi.n	a8, 0
4008a265:	4289      	s32i.n	a8, a2, 16
4008a267:	f01d      	retw.n
4008a269:	000000        	ill

4008a26c <vListInsertEnd>:
4008a26c:	004136        	entry	a1, 32
4008a26f:	1288      	l32i.n	a8, a2, 4
4008a271:	1389      	s32i.n	a8, a3, 4
4008a273:	f03d      	nop.n
4008a275:	f03d      	nop.n
4008a277:	f03d      	nop.n
4008a279:	f03d      	nop.n
4008a27b:	2898      	l32i.n	a9, a8, 8
4008a27d:	2399      	s32i.n	a9, a3, 8
4008a27f:	f03d      	nop.n
4008a281:	f03d      	nop.n
4008a283:	f03d      	nop.n
4008a285:	f03d      	nop.n
4008a287:	2898      	l32i.n	a9, a8, 8
4008a289:	1939      	s32i.n	a3, a9, 4
4008a28b:	2839      	s32i.n	a3, a8, 8
4008a28d:	4329      	s32i.n	a2, a3, 16
4008a28f:	f03d      	nop.n
4008a291:	f03d      	nop.n
4008a293:	f03d      	nop.n
4008a295:	f03d      	nop.n
4008a297:	0238      	l32i.n	a3, a2, 0
4008a299:	331b      	addi.n	a3, a3, 1
4008a29b:	0239      	s32i.n	a3, a2, 0
4008a29d:	f01d      	retw.n
	...

4008a2a0 <vListInsert>:
4008a2a0:	004136        	entry	a1, 32
4008a2a3:	03b8      	l32i.n	a11, a3, 0
4008a2a5:	040b66        	bnei	a11, -1, 4008a2ad <vListInsert+0xd>
4008a2a8:	4298      	l32i.n	a9, a2, 16
4008a2aa:	000346        	j	4008a2bb <vListInsert+0x1b>
4008a2ad:	928b      	addi.n	a9, a2, 8
4008a2af:	000046        	j	4008a2b4 <vListInsert+0x14>
4008a2b2:	089d      	mov.n	a9, a8
4008a2b4:	1988      	l32i.n	a8, a9, 4
4008a2b6:	08a8      	l32i.n	a10, a8, 0
4008a2b8:	f6bba7        	bgeu	a11, a10, 4008a2b2 <vListInsert+0x12>
4008a2bb:	1988      	l32i.n	a8, a9, 4
4008a2bd:	1389      	s32i.n	a8, a3, 4
4008a2bf:	2839      	s32i.n	a3, a8, 8
4008a2c1:	2399      	s32i.n	a9, a3, 8
4008a2c3:	1939      	s32i.n	a3, a9, 4
4008a2c5:	4329      	s32i.n	a2, a3, 16
4008a2c7:	f03d      	nop.n
4008a2c9:	f03d      	nop.n
4008a2cb:	f03d      	nop.n
4008a2cd:	f03d      	nop.n
4008a2cf:	0238      	l32i.n	a3, a2, 0
4008a2d1:	331b      	addi.n	a3, a3, 1
4008a2d3:	0239      	s32i.n	a3, a2, 0
4008a2d5:	f01d      	retw.n
	...

4008a2d8 <uxListRemove>:
4008a2d8:	004136        	entry	a1, 32
4008a2db:	4288      	l32i.n	a8, a2, 16
4008a2dd:	1298      	l32i.n	a9, a2, 4
4008a2df:	22a8      	l32i.n	a10, a2, 8
4008a2e1:	29a9      	s32i.n	a10, a9, 8
4008a2e3:	f03d      	nop.n
4008a2e5:	f03d      	nop.n
4008a2e7:	f03d      	nop.n
4008a2e9:	f03d      	nop.n
4008a2eb:	2298      	l32i.n	a9, a2, 8
4008a2ed:	12a8      	l32i.n	a10, a2, 4
4008a2ef:	19a9      	s32i.n	a10, a9, 4
4008a2f1:	f03d      	nop.n
4008a2f3:	f03d      	nop.n
4008a2f5:	f03d      	nop.n
4008a2f7:	f03d      	nop.n
4008a2f9:	1898      	l32i.n	a9, a8, 4
4008a2fb:	039297        	bne	a2, a9, 4008a302 <uxListRemove+0x2a>
4008a2fe:	2298      	l32i.n	a9, a2, 8
4008a300:	1899      	s32i.n	a9, a8, 4
4008a302:	090c      	movi.n	a9, 0
4008a304:	4299      	s32i.n	a9, a2, 16
4008a306:	f03d      	nop.n
4008a308:	f03d      	nop.n
4008a30a:	f03d      	nop.n
4008a30c:	f03d      	nop.n
4008a30e:	0828      	l32i.n	a2, a8, 0
4008a310:	220b      	addi.n	a2, a2, -1
4008a312:	0829      	s32i.n	a2, a8, 0
4008a314:	f01d      	retw.n
	...

4008a318 <vPortStoreTaskMPUSettings>:
4008a318:	004136        	entry	a1, 32
4008a31b:	550b      	addi.n	a5, a5, -1
4008a31d:	445a      	add.n	a4, a4, a5
4008a31f:	a0c452        	addi	a5, a4, -96
4008a322:	047c      	movi.n	a4, -16
4008a324:	105540        	and	a5, a5, a4
4008a327:	0259      	s32i.n	a5, a2, 0
4008a329:	f01d      	retw.n
	...

4008a32c <xt_ints_on>:
4008a32c:	002136        	entry	a1, 16
4008a32f:	030c      	movi.n	a3, 0
4008a331:	61e430        	xsr.intenable	a3
4008a334:	002010        	rsync
4008a337:	202320        	or	a2, a3, a2
4008a33a:	13e420        	wsr.intenable	a2
4008a33d:	002010        	rsync
4008a340:	032d      	mov.n	a2, a3
4008a342:	f01d      	retw.n

4008a344 <xt_ints_off>:
4008a344:	002136        	entry	a1, 16
4008a347:	040c      	movi.n	a4, 0
4008a349:	61e440        	xsr.intenable	a4
4008a34c:	002010        	rsync
4008a34f:	203420        	or	a3, a4, a2
4008a352:	303320        	xor	a3, a3, a2
4008a355:	13e430        	wsr.intenable	a3
4008a358:	002010        	rsync
4008a35b:	042d      	mov.n	a2, a4
4008a35d:	f01d      	retw.n
	...

4008a360 <get_prev_free_block>:
4008a360:	004136        	entry	a1, 32
4008a363:	10c222        	addi	a2, a2, 16
4008a366:	479327        	bne	a3, a2, 4008a3b1 <get_prev_free_block+0x51>
4008a369:	d9d8d1        	l32r	a13, 40080acc <_init_end+0x6cc>
4008a36c:	d9d9c1        	l32r	a12, 40080ad0 <_init_end+0x6d0>
4008a36f:	b8a0b2        	movi	a11, 184
4008a372:	d9d8a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a375:	507565        	call8	400daacc <__assert_func>
4008a378:	0288      	l32i.n	a8, a2, 0
4008a37a:	02cd      	mov.n	a12, a2
4008a37c:	0ee807        	bbsi	a8, 0, 4008a38e <get_prev_free_block+0x2e>
4008a37f:	bba0b2        	movi	a11, 187
4008a382:	d9d5a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a385:	d84481        	l32r	a8, 40080498 <_init_end+0x98>
4008a388:	0008e0        	callx8	a8
4008a38b:	00fe25        	call8	4008b36c <abort>
4008a38e:	1288      	l32i.n	a8, a2, 4
4008a390:	188c      	beqz.n	a8, 4008a395 <get_prev_free_block+0x35>
4008a392:	183837        	bltu	a8, a3, 4008a3ae <get_prev_free_block+0x4e>
4008a395:	0398      	l32i.n	a9, a3, 0
4008a397:	2b6907        	bbci	a9, 0, 4008a3c6 <get_prev_free_block+0x66>
4008a39a:	c24b      	addi.n	a12, a2, 4
4008a39c:	261387        	beq	a3, a8, 4008a3c6 <get_prev_free_block+0x66>
4008a39f:	bfa0b2        	movi	a11, 191
4008a3a2:	d9cda1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a3a5:	d83c81        	l32r	a8, 40080498 <_init_end+0x98>
4008a3a8:	0008e0        	callx8	a8
4008a3ab:	00fc25        	call8	4008b36c <abort>
4008a3ae:	202880        	or	a2, a8, a8
4008a3b1:	190c      	movi.n	a9, 1
4008a3b3:	080c      	movi.n	a8, 0
4008a3b5:	938920        	movnez	a8, a9, a2
4008a3b8:	748080        	extui	a8, a8, 0, 8
4008a3bb:	013237        	bltu	a2, a3, 4008a3c0 <get_prev_free_block+0x60>
4008a3be:	090c      	movi.n	a9, 0
4008a3c0:	b48897        	bany	a8, a9, 4008a378 <get_prev_free_block+0x18>
4008a3c3:	00faa5        	call8	4008b36c <abort>
4008a3c6:	f01d      	retw.n

4008a3c8 <split_if_necessary>:
4008a3c8:	004136        	entry	a1, 32
4008a3cb:	05ad      	mov.n	a10, a5
4008a3cd:	0368      	l32i.n	a6, a3, 0
4008a3cf:	c87c      	movi.n	a8, -4
4008a3d1:	108680        	and	a8, a6, a8
4008a3d4:	a88c      	beqz.n	a8, 4008a3e2 <split_if_necessary+0x1a>
4008a3d6:	c05830        	sub	a5, a8, a3
4008a3d9:	fcc552        	addi	a5, a5, -4
4008a3dc:	000146        	j	4008a3e5 <split_if_necessary+0x1d>
4008a3df:	000000        	ill
4008a3e2:	00a052        	movi	a5, 0
4008a3e5:	106607        	bbci	a6, 0, 4008a3f9 <split_if_necessary+0x31>
4008a3e8:	03cd      	mov.n	a12, a3
4008a3ea:	0ca1b2        	movi	a11, 0x10c
4008a3ed:	d9baa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a3f0:	d82a81        	l32r	a8, 40080498 <_init_end+0x98>
4008a3f3:	0008e0        	callx8	a8
4008a3f6:	00f765        	call8	4008b36c <abort>
4008a3f9:	10b547        	bgeu	a5, a4, 4008a40d <split_if_necessary+0x45>
4008a3fc:	03cd      	mov.n	a12, a3
4008a3fe:	0da1b2        	movi	a11, 0x10d
4008a401:	d9b5a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a404:	d82581        	l32r	a8, 40080498 <_init_end+0x98>
4008a407:	0008e0        	callx8	a8
4008a40a:	00f625        	call8	4008b36c <abort>
4008a40d:	443b      	addi.n	a4, a4, 3
4008a40f:	fcaf62        	movi	a6, -4
4008a412:	104460        	and	a4, a4, a6
4008a415:	10c262        	addi	a6, a2, 16
4008a418:	0e9367        	bne	a3, a6, 4008a42a <split_if_necessary+0x62>
4008a41b:	d9acd1        	l32r	a13, 40080acc <_init_end+0x6cc>
4008a41e:	d9afc1        	l32r	a12, 40080adc <_init_end+0x6dc>
4008a421:	11a1b2        	movi	a11, 0x111
4008a424:	d9aca1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a427:	506a65        	call8	400daacc <__assert_func>
4008a42a:	08dc      	bnez.n	a8, 4008a43e <split_if_necessary+0x76>
4008a42c:	d9add1        	l32r	a13, 40080ae0 <_init_end+0x6e0>
4008a42f:	d9abc1        	l32r	a12, 40080adc <_init_end+0x6dc>
4008a432:	12a1b2        	movi	a11, 0x112
4008a435:	d9a7a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a438:	201110        	or	a1, a1, a1
4008a43b:	506925        	call8	400daacc <__assert_func>
4008a43e:	734b      	addi.n	a7, a3, 4
4008a440:	774a      	add.n	a7, a7, a4
4008a442:	0398      	l32i.n	a9, a3, 0
4008a444:	c67c      	movi.n	a6, -4
4008a446:	106960        	and	a6, a9, a6
4008a449:	011616        	beqz	a6, 4008a45e <split_if_necessary+0x96>
4008a44c:	102367        	blt	a3, a6, 4008a460 <split_if_necessary+0x98>
4008a44f:	d9a5d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a452:	d9a5c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a455:	7ca0b2        	movi	a11, 124
4008a458:	d99fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a45b:	506725        	call8	400daacc <__assert_func>
4008a45e:	060c      	movi.n	a6, 0
4008a460:	0698      	l32i.n	a9, a6, 0
4008a462:	406907        	bbci	a9, 0, 4008a4a6 <split_if_necessary+0xde>
4008a465:	cb7c      	movi.n	a11, -4
4008a467:	3b09b7        	bnone	a9, a11, 4008a4a6 <split_if_necessary+0xde>
4008a46a:	0799      	s32i.n	a9, a7, 0
4008a46c:	f03d      	nop.n
4008a46e:	f03d      	nop.n
4008a470:	f03d      	nop.n
4008a472:	f03d      	nop.n
4008a474:	1688      	l32i.n	a8, a6, 4
4008a476:	1789      	s32i.n	a8, a7, 4
4008a478:	5acc      	bnez.n	a10, 4008a481 <split_if_necessary+0xb9>
4008a47a:	03bd      	mov.n	a11, a3
4008a47c:	02ad      	mov.n	a10, a2
4008a47e:	ffee25        	call8	4008a360 <get_prev_free_block>
4008a481:	012a82        	l32i	a8, a10, 4
4008a484:	04cac2        	addi	a12, a10, 4
4008a487:	0e1867        	beq	a8, a6, 4008a499 <split_if_necessary+0xd1>
4008a48a:	20a1b2        	movi	a11, 0x120
4008a48d:	d992a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a490:	d80281        	l32r	a8, 40080498 <_init_end+0x98>
4008a493:	0008e0        	callx8	a8
4008a496:	00ed65        	call8	4008b36c <abort>
4008a499:	c04540        	sub	a4, a5, a4
4008a49c:	012252        	l32i	a5, a2, 4
4008a49f:	454a      	add.n	a4, a5, a4
4008a4a1:	1249      	s32i.n	a4, a2, 4
4008a4a3:	001ac6        	j	4008a512 <split_if_necessary+0x14a>
4008a4a6:	788c      	beqz.n	a8, 4008a4b1 <split_if_necessary+0xe9>
4008a4a8:	c08830        	sub	a8, a8, a3
4008a4ab:	fcc882        	addi	a8, a8, -4
4008a4ae:	000086        	j	4008a4b4 <split_if_necessary+0xec>
4008a4b1:	00a082        	movi	a8, 0
4008a4b4:	08c442        	addi	a4, a4, 8
4008a4b7:	5b3847        	bltu	a8, a4, 4008a516 <split_if_necessary+0x14e>
4008a4ba:	006a56        	bnez	a10, 4008a4c4 <split_if_necessary+0xfc>
4008a4bd:	03bd      	mov.n	a11, a3
4008a4bf:	02ad      	mov.n	a10, a2
4008a4c1:	ffe9e5        	call8	4008a360 <get_prev_free_block>
4008a4c4:	002352        	l32i	a5, a3, 0
4008a4c7:	01a042        	movi	a4, 1
4008a4ca:	205540        	or	a5, a5, a4
4008a4cd:	006752        	s32i	a5, a7, 0
4008a4d0:	f03d      	nop.n
4008a4d2:	f03d      	nop.n
4008a4d4:	f03d      	nop.n
4008a4d6:	f03d      	nop.n
4008a4d8:	1a48      	l32i.n	a4, a10, 4
4008a4da:	1749      	s32i.n	a4, a7, 4
4008a4dc:	f03d      	nop.n
4008a4de:	f03d      	nop.n
4008a4e0:	f03d      	nop.n
4008a4e2:	f03d      	nop.n
4008a4e4:	1a48      	l32i.n	a4, a10, 4
4008a4e6:	ca4b      	addi.n	a12, a10, 4
4008a4e8:	0e3747        	bltu	a7, a4, 4008a4fa <split_if_necessary+0x132>
4008a4eb:	34a1b2        	movi	a11, 0x134
4008a4ee:	d97aa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a4f1:	d7e981        	l32r	a8, 40080498 <_init_end+0x98>
4008a4f4:	0008e0        	callx8	a8
4008a4f7:	00e765        	call8	4008b36c <abort>
4008a4fa:	c47c      	movi.n	a4, -4
4008a4fc:	104540        	and	a4, a5, a4
4008a4ff:	748c      	beqz.n	a4, 4008a50a <split_if_necessary+0x142>
4008a501:	c04470        	sub	a4, a4, a7
4008a504:	fcc442        	addi	a4, a4, -4
4008a507:	000046        	j	4008a50c <split_if_necessary+0x144>
4008a50a:	040c      	movi.n	a4, 0
4008a50c:	1258      	l32i.n	a5, a2, 4
4008a50e:	454a      	add.n	a4, a5, a4
4008a510:	1249      	s32i.n	a4, a2, 4
4008a512:	0379      	s32i.n	a7, a3, 0
4008a514:	1a79      	s32i.n	a7, a10, 4
4008a516:	f01d      	retw.n

4008a518 <assert_valid_block>:
4008a518:	004136        	entry	a1, 32
4008a51b:	10c282        	addi	a8, a2, 16
4008a51e:	0a3387        	bltu	a3, a8, 4008a52c <assert_valid_block+0x14>
4008a521:	3298      	l32i.n	a9, a2, 12
4008a523:	0bb937        	bgeu	a9, a3, 4008a532 <assert_valid_block+0x1a>
4008a526:	090c      	movi.n	a9, 0
4008a528:	000246        	j	4008a535 <assert_valid_block+0x1d>
4008a52b:	090c00        	l32e	a0, a12, -64
4008a52e:	0000c6        	j	4008a535 <assert_valid_block+0x1d>
4008a531:	a09200        	addx4	a9, a2, a0
4008a534:	095601        	l32r	a0, 4004ca8c <r_llm_init+0x94>
4008a537:	03cd01        	l32r	a0, 4004b46c <lld_pdu_pack+0x958>
4008a53a:	a2a0b2        	movi	a11, 162
4008a53d:	d966a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a540:	d7d681        	l32r	a8, 40080498 <_init_end+0x98>
4008a543:	0008e0        	callx8	a8
4008a546:	00e265        	call8	4008b36c <abort>
4008a549:	3298      	l32i.n	a9, a2, 12
4008a54b:	77b297        	bgeu	a2, a9, 4008a5c6 <assert_valid_block+0xae>
4008a54e:	03a8      	l32i.n	a10, a3, 0
4008a550:	c27c      	movi.n	a2, -4
4008a552:	102a20        	and	a2, a10, a2
4008a555:	011216        	beqz	a2, 4008a56a <assert_valid_block+0x52>
4008a558:	102327        	blt	a3, a2, 4008a56c <assert_valid_block+0x54>
4008a55b:	d962d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a55e:	d962c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a561:	7ca0b2        	movi	a11, 124
4008a564:	d95ca1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a567:	505665        	call8	400daacc <__assert_func>
4008a56a:	020c      	movi.n	a2, 0
4008a56c:	083287        	bltu	a2, a8, 4008a578 <assert_valid_block+0x60>
4008a56f:	0bb927        	bgeu	a9, a2, 4008a57e <assert_valid_block+0x66>
4008a572:	020c      	movi.n	a2, 0
4008a574:	000246        	j	4008a581 <assert_valid_block+0x69>
4008a577:	020c00        	andb	b0, b12, b0
4008a57a:	0000c6        	j	4008a581 <assert_valid_block+0x69>
4008a57d:	a02200        	addx4	a2, a2, a0
4008a580:	125601        	l32r	a0, 4004eed8 <r_lm_init+0x1a4>
4008a583:	c33001        	l32r	a0, 4007b244 <__udivmoddi4+0x16650>
4008a586:	a0b220        	addx4	a11, a2, a2
4008a589:	53a1a5        	call8	400ddfa4 <_svfprintf_r+0x1c8c>
4008a58c:	81d9      	s32i.n	a13, a1, 32
4008a58e:	e0d7c2        	addmi	a12, a7, 0xffffe000
4008a591:	0008      	l32i.n	a0, a0, 0
4008a593:	00dda5        	call8	4008b36c <abort>
4008a596:	0328      	l32i.n	a2, a3, 0
4008a598:	2a6207        	bbci	a2, 0, 4008a5c6 <assert_valid_block+0xae>
4008a59b:	1328      	l32i.n	a2, a3, 4
4008a59d:	073287        	bltu	a2, a8, 4008a5a8 <assert_valid_block+0x90>
4008a5a0:	0ab927        	bgeu	a9, a2, 4008a5ae <assert_valid_block+0x96>
4008a5a3:	020c      	movi.n	a2, 0
4008a5a5:	000206        	j	4008a5b1 <assert_valid_block+0x99>
4008a5a8:	020c      	movi.n	a2, 0
4008a5aa:	0000c6        	j	4008a5b1 <assert_valid_block+0x99>
4008a5ad:	a02200        	addx4	a2, a2, a0
4008a5b0:	c3c201        	l32r	a0, 4007b4b8 <__udivmoddi4+0x168c4>
4008a5b3:	e25604        	lsi	f0, a6, 0x388
4008a5b6:	a0b200        	addx4	a11, a2, a0
4008a5b9:	a1a8      	l32i.n	a10, a1, 40
4008a5bb:	81d947        	bbs	a9, a4, 4008a540 <assert_valid_block+0x28>
4008a5be:	e0d7b6        	bltui	a7, 64, 4008a5a2 <assert_valid_block+0x8a>
4008a5c1:	0008      	l32i.n	a0, a0, 0
4008a5c3:	00daa5        	call8	4008b36c <abort>
4008a5c6:	f01d      	retw.n

4008a5c8 <merge_adjacent>:
4008a5c8:	004136        	entry	a1, 32
4008a5cb:	0e3347        	bltu	a3, a4, 4008a5dd <merge_adjacent+0x15>
4008a5ce:	d947d1        	l32r	a13, 40080aec <_init_end+0x6ec>
4008a5d1:	d947c1        	l32r	a12, 40080af0 <_init_end+0x6f0>
4008a5d4:	d1a0b2        	movi	a11, 209
4008a5d7:	d93fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a5da:	504f25        	call8	400daacc <__assert_func>
4008a5dd:	002492        	l32i	a9, a4, 0
4008a5e0:	fcaf52        	movi	a5, -4
4008a5e3:	028957        	bany	a9, a5, 4008a5e9 <merge_adjacent+0x21>
4008a5e6:	004986        	j	4008a710 <merge_adjacent+0x148>
4008a5e9:	10c252        	addi	a5, a2, 16
4008a5ec:	029357        	bne	a3, a5, 4008a5f2 <merge_adjacent+0x2a>
4008a5ef:	004846        	j	4008a714 <merge_adjacent+0x14c>
4008a5f2:	0358      	l32i.n	a5, a3, 0
4008a5f4:	c87c      	movi.n	a8, -4
4008a5f6:	108580        	and	a8, a5, a8
4008a5f9:	011816        	beqz	a8, 4008a60e <merge_adjacent+0x46>
4008a5fc:	112387        	blt	a3, a8, 4008a611 <merge_adjacent+0x49>
4008a5ff:	d939d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a602:	d939c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a605:	7ca0b2        	movi	a11, 124
4008a608:	d933a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a60b:	504c25        	call8	400daacc <__assert_func>
4008a60e:	00a082        	movi	a8, 0
4008a611:	111487        	beq	a4, a8, 4008a626 <merge_adjacent+0x5e>
4008a614:	20c330        	or	a12, a3, a3
4008a617:	dba0b2        	movi	a11, 219
4008a61a:	d92fa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a61d:	d79e81        	l32r	a8, 40080498 <_init_end+0x98>
4008a620:	0008e0        	callx8	a8
4008a623:	00d4a5        	call8	4008b36c <abort>
4008a626:	002382        	l32i	a8, a3, 0
4008a629:	048080        	extui	a8, a8, 0, 1
4008a62c:	a88c      	beqz.n	a8, 4008a63a <merge_adjacent+0x72>
4008a62e:	045090        	extui	a5, a9, 0, 1
4008a631:	758c      	beqz.n	a5, 4008a63c <merge_adjacent+0x74>
4008a633:	150c      	movi.n	a5, 1
4008a635:	0000c6        	j	4008a63c <merge_adjacent+0x74>
4008a638:	5d0000        	lsi	f0, a0, 0x174
4008a63b:	5608      	l32i.n	a0, a6, 20
4008a63d:	cc0555        	call4	40056694 <qsort+0x270>
4008a640:	0718      	l32i.n	a1, a7, 0
4008a642:	5069      	s32i.n	a6, a0, 20
4008a644:	588c      	beqz.n	a8, 4008a64d <merge_adjacent+0x85>
4008a646:	036d      	mov.n	a6, a3
4008a648:	000106        	j	4008a650 <merge_adjacent+0x88>
4008a64b:	400000        	ssr	a0
4008a64e:	602064        	lsi	f6, a0, 0x180
4008a651:	ad20b6        	bltui	a0, 2, 4008a602 <merge_adjacent+0x3a>
4008a654:	d0a502        	movi	a0, 0x5d0
4008a657:	ff          	.byte 0xff
4008a658:	1688      	l32i.n	a8, a6, 4
4008a65a:	c64b      	addi.n	a12, a6, 4
4008a65c:	0e3a87        	bltu	a10, a8, 4008a66e <merge_adjacent+0xa6>
4008a65f:	e4a0b2        	movi	a11, 228
4008a662:	d91da1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a665:	d78c81        	l32r	a8, 40080498 <_init_end+0x98>
4008a668:	0008e0        	callx8	a8
4008a66b:	00d025        	call8	4008b36c <abort>
4008a66e:	1a89      	s32i.n	a8, a10, 4
4008a670:	f03d      	nop.n
4008a672:	f03d      	nop.n
4008a674:	f03d      	nop.n
4008a676:	f03d      	nop.n
4008a678:	0698      	l32i.n	a9, a6, 0
4008a67a:	c87c      	movi.n	a8, -4
4008a67c:	108980        	and	a8, a9, a8
4008a67f:	788c      	beqz.n	a8, 4008a68a <merge_adjacent+0xc2>
4008a681:	c08860        	sub	a8, a8, a6
4008a684:	fcc882        	addi	a8, a8, -4
4008a687:	000086        	j	4008a68d <merge_adjacent+0xc5>
4008a68a:	00a082        	movi	a8, 0
4008a68d:	1268      	l32i.n	a6, a2, 4
4008a68f:	c08680        	sub	a8, a6, a8
4008a692:	016282        	s32i	a8, a2, 4
4008a695:	f03d      	nop.n
4008a697:	f03d      	nop.n
4008a699:	f03d      	nop.n
4008a69b:	f03d      	nop.n
4008a69d:	0468      	l32i.n	a6, a4, 0
4008a69f:	c87c      	movi.n	a8, -4
4008a6a1:	108680        	and	a8, a6, a8
4008a6a4:	0389      	s32i.n	a8, a3, 0
4008a6a6:	38dc      	bnez.n	a8, 4008a6bd <merge_adjacent+0xf5>
4008a6a8:	03cd      	mov.n	a12, a3
4008a6aa:	eba0b2        	movi	a11, 235
4008a6ad:	f03d      	nop.n
4008a6af:	f03d      	nop.n
4008a6b1:	d909a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6b4:	d77981        	l32r	a8, 40080498 <_init_end+0x98>
4008a6b7:	0008e0        	callx8	a8
4008a6ba:	00cb25        	call8	4008b36c <abort>
4008a6bd:	057516        	beqz	a5, 4008a718 <merge_adjacent+0x150>
4008a6c0:	150c      	movi.n	a5, 1
4008a6c2:	208850        	or	a8, a8, a5
4008a6c5:	0389      	s32i.n	a8, a3, 0
4008a6c7:	f03d      	nop.n
4008a6c9:	f03d      	nop.n
4008a6cb:	f03d      	nop.n
4008a6cd:	0020f0        	nop
4008a6d0:	012452        	l32i	a5, a4, 4
4008a6d3:	45ac      	beqz.n	a5, 4008a6fb <merge_adjacent+0x133>
4008a6d5:	c44b      	addi.n	a12, a4, 4
4008a6d7:	0e3357        	bltu	a3, a5, 4008a6e9 <merge_adjacent+0x121>
4008a6da:	efa0b2        	movi	a11, 239
4008a6dd:	d8fea1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6e0:	d76e81        	l32r	a8, 40080498 <_init_end+0x98>
4008a6e3:	0008e0        	callx8	a8
4008a6e6:	00c865        	call8	4008b36c <abort>
4008a6e9:	0e3457        	bltu	a4, a5, 4008a6fb <merge_adjacent+0x133>
4008a6ec:	f0a0b2        	movi	a11, 240
4008a6ef:	d8faa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6f2:	d76981        	l32r	a8, 40080498 <_init_end+0x98>
4008a6f5:	0008e0        	callx8	a8
4008a6f8:	00c725        	call8	4008b36c <abort>
4008a6fb:	1359      	s32i.n	a5, a3, 4
4008a6fd:	f03d      	nop.n
4008a6ff:	f03d      	nop.n
4008a701:	f03d      	nop.n
4008a703:	f03d      	nop.n
4008a705:	1248      	l32i.n	a4, a2, 4
4008a707:	444b      	addi.n	a4, a4, 4
4008a709:	1249      	s32i.n	a4, a2, 4
4008a70b:	032d      	mov.n	a2, a3
4008a70d:	f01d      	retw.n
4008a70f:	032d00        	lsi	f0, a13, 12
4008a712:	f01d      	retw.n
4008a714:	042d      	mov.n	a2, a4
4008a716:	f01d      	retw.n
4008a718:	032d      	mov.n	a2, a3
4008a71a:	f01d      	retw.n

4008a71c <multi_heap_get_allocated_size_impl>:
4008a71c:	004136        	entry	a1, 32
4008a71f:	fcc332        	addi	a3, a3, -4
4008a722:	20b330        	or	a11, a3, a3
4008a725:	20a220        	or	a10, a2, a2
4008a728:	ffdee5        	call8	4008a518 <assert_valid_block>
4008a72b:	002322        	l32i	a2, a3, 0
4008a72e:	106207        	bbci	a2, 0, 4008a742 <multi_heap_get_allocated_size_impl+0x26>
4008a731:	03cd      	mov.n	a12, a3
4008a733:	45a1b2        	movi	a11, 0x145
4008a736:	d8e8a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a739:	d75781        	l32r	a8, 40080498 <_init_end+0x98>
4008a73c:	0008e0        	callx8	a8
4008a73f:	00c2e5        	call8	4008b36c <abort>
4008a742:	c87c      	movi.n	a8, -4
4008a744:	102280        	and	a2, a2, a8
4008a747:	528c      	beqz.n	a2, 4008a750 <multi_heap_get_allocated_size_impl+0x34>
4008a749:	c02230        	sub	a2, a2, a3
4008a74c:	228a      	add.n	a2, a2, a8
4008a74e:	f01d      	retw.n
4008a750:	020c      	movi.n	a2, 0
4008a752:	f01d      	retw.n

4008a754 <multi_heap_internal_lock>:
4008a754:	004136        	entry	a1, 32
4008a757:	02a8      	l32i.n	a10, a2, 0
4008a759:	1a8c      	beqz.n	a10, 4008a75e <multi_heap_internal_lock+0xa>
4008a75b:	fe3365        	call8	40088a90 <vTaskEnterCritical>
4008a75e:	f01d      	retw.n

4008a760 <multi_heap_internal_unlock>:
4008a760:	004136        	entry	a1, 32
4008a763:	02a8      	l32i.n	a10, a2, 0
4008a765:	1a8c      	beqz.n	a10, 4008a76a <multi_heap_internal_unlock+0xa>
4008a767:	fe46a5        	call8	40088bd0 <vTaskExitCritical>
4008a76a:	f01d      	retw.n

4008a76c <multi_heap_malloc_impl>:
4008a76c:	004136        	entry	a1, 32
4008a76f:	03c332        	addi	a3, a3, 3
4008a772:	fcaf42        	movi	a4, -4
4008a775:	103340        	and	a3, a3, a4
4008a778:	140c      	movi.n	a4, 1
4008a77a:	090c      	movi.n	a9, 0
4008a77c:	098d      	mov.n	a8, a9
4008a77e:	838430        	moveqz	a8, a4, a3
4008a781:	934920        	movnez	a4, a9, a2
4008a784:	204480        	or	a4, a4, a8
4008a787:	021497        	beq	a4, a9, 4008a78d <multi_heap_malloc_impl+0x21>
4008a78a:	003e86        	j	4008a888 <multi_heap_malloc_impl+0x11c>
4008a78d:	02a8      	l32i.n	a10, a2, 0
4008a78f:	021a97        	beq	a10, a9, 4008a795 <multi_heap_malloc_impl+0x29>
4008a792:	fe2fe5        	call8	40088a90 <vTaskEnterCritical>
4008a795:	1248      	l32i.n	a4, a2, 4
4008a797:	0db437        	bgeu	a4, a3, 4008a7a8 <multi_heap_malloc_impl+0x3c>
4008a79a:	0228      	l32i.n	a2, a2, 0
4008a79c:	0ea216        	beqz	a2, 4008a88a <multi_heap_malloc_impl+0x11e>
4008a79f:	02ad      	mov.n	a10, a2
4008a7a1:	fe42e5        	call8	40088bd0 <vTaskExitCritical>
4008a7a4:	020c      	movi.n	a2, 0
4008a7a6:	f01d      	retw.n
4008a7a8:	10c2a2        	addi	a10, a2, 16
4008a7ab:	5298      	l32i.n	a9, a2, 20
4008a7ad:	fe7c      	movi.n	a14, -1
4008a7af:	0d0c      	movi.n	a13, 0
4008a7b1:	0d4d      	mov.n	a4, a13
4008a7b3:	001846        	j	4008a818 <multi_heap_malloc_impl+0xac>
4008a7b6:	04cac2        	addi	a12, a10, 4
4008a7b9:	0e3a97        	bltu	a10, a9, 4008a7cb <multi_heap_malloc_impl+0x5f>
4008a7bc:	afa1b2        	movi	a11, 0x1af
4008a7bf:	d8c6a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a7c2:	d73581        	l32r	a8, 40080498 <_init_end+0x98>
4008a7c5:	0008e0        	callx8	a8
4008a7c8:	00ba25        	call8	4008b36c <abort>
4008a7cb:	0029b2        	l32i	a11, a9, 0
4008a7ce:	10eb07        	bbsi	a11, 0, 4008a7e2 <multi_heap_malloc_impl+0x76>
4008a7d1:	09cd      	mov.n	a12, a9
4008a7d3:	b0a1b2        	movi	a11, 0x1b0
4008a7d6:	d8c0a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a7d9:	d72f81        	l32r	a8, 40080498 <_init_end+0x98>
4008a7dc:	0008e0        	callx8	a8
4008a7df:	00b8e5        	call8	4008b36c <abort>
4008a7e2:	c87c      	movi.n	a8, -4
4008a7e4:	10cb80        	and	a12, a11, a8
4008a7e7:	6c8c      	beqz.n	a12, 4008a7f1 <multi_heap_malloc_impl+0x85>
4008a7e9:	c0cc90        	sub	a12, a12, a9
4008a7ec:	cc8a      	add.n	a12, a12, a8
4008a7ee:	000046        	j	4008a7f3 <multi_heap_malloc_impl+0x87>
4008a7f1:	0c0c      	movi.n	a12, 0
4008a7f3:	01a082        	movi	a8, 1
4008a7f6:	02bc37        	bgeu	a12, a3, 4008a7fc <multi_heap_malloc_impl+0x90>
4008a7f9:	00a082        	movi	a8, 0
4008a7fc:	748080        	extui	a8, a8, 0, 8
4008a7ff:	01a0b2        	movi	a11, 1
4008a802:	023ce7        	bltu	a12, a14, 4008a808 <multi_heap_malloc_impl+0x9c>
4008a805:	00a0b2        	movi	a11, 0
4008a808:	0808b7        	bnone	a8, a11, 4008a814 <multi_heap_malloc_impl+0xa8>
4008a80b:	0f13c7        	beq	a3, a12, 4008a81e <multi_heap_malloc_impl+0xb2>
4008a80e:	0ced      	mov.n	a14, a12
4008a810:	0add      	mov.n	a13, a10
4008a812:	094d      	mov.n	a4, a9
4008a814:	09ad      	mov.n	a10, a9
4008a816:	1998      	l32i.n	a9, a9, 4
4008a818:	f9a956        	bnez	a9, 4008a7b6 <multi_heap_malloc_impl+0x4a>
4008a81b:	000146        	j	4008a824 <multi_heap_malloc_impl+0xb8>
4008a81e:	20daa0        	or	a13, a10, a10
4008a821:	204990        	or	a4, a9, a9
4008a824:	00d456        	bnez	a4, 4008a835 <multi_heap_malloc_impl+0xc9>
4008a827:	0228      	l32i.n	a2, a2, 0
4008a829:	05d216        	beqz	a2, 4008a88a <multi_heap_malloc_impl+0x11e>
4008a82c:	02ad      	mov.n	a10, a2
4008a82e:	fe3a25        	call8	40088bd0 <vTaskExitCritical>
4008a831:	020c      	movi.n	a2, 0
4008a833:	f01d      	retw.n
4008a835:	1488      	l32i.n	a8, a4, 4
4008a837:	1d89      	s32i.n	a8, a13, 4
4008a839:	f03d      	nop.n
4008a83b:	f03d      	nop.n
4008a83d:	f03d      	nop.n
4008a83f:	f03d      	nop.n
4008a841:	0488      	l32i.n	a8, a4, 0
4008a843:	e97c      	movi.n	a9, -2
4008a845:	109980        	and	a9, a9, a8
4008a848:	0499      	s32i.n	a9, a4, 0
4008a84a:	c87c      	movi.n	a8, -4
4008a84c:	108980        	and	a8, a9, a8
4008a84f:	788c      	beqz.n	a8, 4008a85a <multi_heap_malloc_impl+0xee>
4008a851:	c08840        	sub	a8, a8, a4
4008a854:	fcc882        	addi	a8, a8, -4
4008a857:	000046        	j	4008a85c <multi_heap_malloc_impl+0xf0>
4008a85a:	080c      	movi.n	a8, 0
4008a85c:	1298      	l32i.n	a9, a2, 4
4008a85e:	c08980        	sub	a8, a9, a8
4008a861:	1289      	s32i.n	a8, a2, 4
4008a863:	03cd      	mov.n	a12, a3
4008a865:	04bd      	mov.n	a11, a4
4008a867:	02ad      	mov.n	a10, a2
4008a869:	ffb5e5        	call8	4008a3c8 <split_if_necessary>
4008a86c:	1238      	l32i.n	a3, a2, 4
4008a86e:	2288      	l32i.n	a8, a2, 8
4008a870:	01b387        	bgeu	a3, a8, 4008a875 <multi_heap_malloc_impl+0x109>
4008a873:	2239      	s32i.n	a3, a2, 8
4008a875:	f03d      	nop.n
4008a877:	f03d      	nop.n
4008a879:	f03d      	nop.n
4008a87b:	f03d      	nop.n
4008a87d:	02a8      	l32i.n	a10, a2, 0
4008a87f:	1a8c      	beqz.n	a10, 4008a884 <multi_heap_malloc_impl+0x118>
4008a881:	fe34e5        	call8	40088bd0 <vTaskExitCritical>
4008a884:	244b      	addi.n	a2, a4, 4
4008a886:	f01d      	retw.n
4008a888:	020c      	movi.n	a2, 0
4008a88a:	f01d      	retw.n

4008a88c <multi_heap_free_impl>:
4008a88c:	004136        	entry	a1, 32
4008a88f:	fcc342        	addi	a4, a3, -4
4008a892:	150c      	movi.n	a5, 1
4008a894:	070c      	movi.n	a7, 0
4008a896:	076d      	mov.n	a6, a7
4008a898:	836520        	moveqz	a6, a5, a2
4008a89b:	935730        	movnez	a5, a7, a3
4008a89e:	205560        	or	a5, a5, a6
4008a8a1:	021577        	beq	a5, a7, 4008a8a7 <multi_heap_free_impl+0x1b>
4008a8a4:	004886        	j	4008a9ca <multi_heap_free_impl+0x13e>
4008a8a7:	02a8      	l32i.n	a10, a2, 0
4008a8a9:	021a77        	beq	a10, a7, 4008a8af <multi_heap_free_impl+0x23>
4008a8ac:	fe1e25        	call8	40088a90 <vTaskEnterCritical>
4008a8af:	04bd      	mov.n	a11, a4
4008a8b1:	02ad      	mov.n	a10, a2
4008a8b3:	ffc665        	call8	4008a518 <assert_valid_block>
4008a8b6:	fcc352        	addi	a5, a3, -4
4008a8b9:	0558      	l32i.n	a5, a5, 0
4008a8bb:	047050        	extui	a7, a5, 0, 1
4008a8be:	046d      	mov.n	a6, a4
4008a8c0:	010716        	beqz	a7, 4008a8d4 <multi_heap_free_impl+0x48>
4008a8c3:	04cd      	mov.n	a12, a4
4008a8c5:	dda1b2        	movi	a11, 0x1dd
4008a8c8:	d884a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8cb:	d6f381        	l32r	a8, 40080498 <_init_end+0x98>
4008a8ce:	0008e0        	callx8	a8
4008a8d1:	00a9a5        	call8	4008b36c <abort>
4008a8d4:	c87c      	movi.n	a8, -4
4008a8d6:	108587        	bany	a5, a8, 4008a8ea <multi_heap_free_impl+0x5e>
4008a8d9:	04cd      	mov.n	a12, a4
4008a8db:	dea1b2        	movi	a11, 0x1de
4008a8de:	d87ea1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8e1:	d6ed81        	l32r	a8, 40080498 <_init_end+0x98>
4008a8e4:	0008e0        	callx8	a8
4008a8e7:	00a865        	call8	4008b36c <abort>
4008a8ea:	10c252        	addi	a5, a2, 16
4008a8ed:	109547        	bne	a5, a4, 4008a901 <multi_heap_free_impl+0x75>
4008a8f0:	04cd      	mov.n	a12, a4
4008a8f2:	dfa1b2        	movi	a11, 0x1df
4008a8f5:	d878a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8f8:	d6e881        	l32r	a8, 40080498 <_init_end+0x98>
4008a8fb:	0008e0        	callx8	a8
4008a8fe:	00a6e5        	call8	4008b36c <abort>
4008a901:	0488      	l32i.n	a8, a4, 0
4008a903:	c57c      	movi.n	a5, -4
4008a905:	105850        	and	a5, a8, a5
4008a908:	059c      	beqz.n	a5, 4008a91c <multi_heap_free_impl+0x90>
4008a90a:	112457        	blt	a4, a5, 4008a91f <multi_heap_free_impl+0x93>
4008a90d:	d875d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a910:	d876c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a913:	7ca0b2        	movi	a11, 124
4008a916:	d86fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a919:	501b25        	call8	400daacc <__assert_func>
4008a91c:	00a052        	movi	a5, 0
4008a91f:	20b440        	or	a11, a4, a4
4008a922:	20a220        	or	a10, a2, a2
4008a925:	ffa3a5        	call8	4008a360 <get_prev_free_block>
4008a928:	1a88      	l32i.n	a8, a10, 4
4008a92a:	688c      	beqz.n	a8, 4008a934 <multi_heap_free_impl+0xa8>
4008a92c:	06b487        	bgeu	a4, a8, 4008a936 <multi_heap_free_impl+0xaa>
4008a92f:	170c      	movi.n	a7, 1
4008a931:	000046        	j	4008a936 <multi_heap_free_impl+0xaa>
4008a934:	170c      	movi.n	a7, 1
4008a936:	04cac2        	addi	a12, a10, 4
4008a939:	00e756        	bnez	a7, 4008a94b <multi_heap_free_impl+0xbf>
4008a93c:	e6a1b2        	movi	a11, 0x1e6
4008a93f:	d866a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a942:	d6d581        	l32r	a8, 40080498 <_init_end+0x98>
4008a945:	0008e0        	callx8	a8
4008a948:	00a225        	call8	4008b36c <abort>
4008a94b:	006382        	s32i	a8, a3, 0
4008a94e:	fcc332        	addi	a3, a3, -4
4008a951:	1a49      	s32i.n	a4, a10, 4
4008a953:	f03d      	nop.n
4008a955:	f03d      	nop.n
4008a957:	f03d      	nop.n
4008a959:	f03d      	nop.n
4008a95b:	0378      	l32i.n	a7, a3, 0
4008a95d:	180c      	movi.n	a8, 1
4008a95f:	207870        	or	a7, a8, a7
4008a962:	0379      	s32i.n	a7, a3, 0
4008a964:	c37c      	movi.n	a3, -4
4008a966:	103730        	and	a3, a7, a3
4008a969:	738c      	beqz.n	a3, 4008a974 <multi_heap_free_impl+0xe8>
4008a96b:	c06360        	sub	a6, a3, a6
4008a96e:	fcc662        	addi	a6, a6, -4
4008a971:	000086        	j	4008a977 <multi_heap_free_impl+0xeb>
4008a974:	00a062        	movi	a6, 0
4008a977:	012232        	l32i	a3, a2, 4
4008a97a:	806360        	add	a6, a3, a6
4008a97d:	1269      	s32i.n	a6, a2, 4
4008a97f:	f03d      	nop.n
4008a981:	f03d      	nop.n
4008a983:	f03d      	nop.n
4008a985:	f03d      	nop.n
4008a987:	0a68      	l32i.n	a6, a10, 0
4008a989:	c37c      	movi.n	a3, -4
4008a98b:	103630        	and	a3, a6, a3
4008a98e:	039c      	beqz.n	a3, 4008a9a2 <multi_heap_free_impl+0x116>
4008a990:	112a37        	blt	a10, a3, 4008a9a5 <multi_heap_free_impl+0x119>
4008a993:	d854d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a996:	d854c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a999:	7ca0b2        	movi	a11, 124
4008a99c:	d84ea1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a99f:	5012e5        	call8	400daacc <__assert_func>
4008a9a2:	00a032        	movi	a3, 0
4008a9a5:	0b9437        	bne	a4, a3, 4008a9b4 <multi_heap_free_impl+0x128>
4008a9a8:	04cd      	mov.n	a12, a4
4008a9aa:	20baa0        	or	a11, a10, a10
4008a9ad:	02ad      	mov.n	a10, a2
4008a9af:	ffc1a5        	call8	4008a5c8 <merge_adjacent>
4008a9b2:	0a4d      	mov.n	a4, a10
4008a9b4:	0538      	l32i.n	a3, a5, 0
4008a9b6:	096307        	bbci	a3, 0, 4008a9c3 <multi_heap_free_impl+0x137>
4008a9b9:	05cd      	mov.n	a12, a5
4008a9bb:	20b440        	or	a11, a4, a4
4008a9be:	02ad      	mov.n	a10, a2
4008a9c0:	ffc065        	call8	4008a5c8 <merge_adjacent>
4008a9c3:	02a8      	l32i.n	a10, a2, 0
4008a9c5:	1a8c      	beqz.n	a10, 4008a9ca <multi_heap_free_impl+0x13e>
4008a9c7:	fe20a5        	call8	40088bd0 <vTaskExitCritical>
4008a9ca:	f01d      	retw.n

4008a9cc <multi_heap_realloc_impl>:
4008a9cc:	006136        	entry	a1, 48
4008a9cf:	fcc362        	addi	a6, a3, -4
4008a9d2:	03c442        	addi	a4, a4, 3
4008a9d5:	fcaf52        	movi	a5, -4
4008a9d8:	104450        	and	a4, a4, a5
4008a9db:	00e256        	bnez	a2, 4008a9ed <multi_heap_realloc_impl+0x21>
4008a9de:	d845d1        	l32r	a13, 40080af4 <_init_end+0x6f4>
4008a9e1:	d845c1        	l32r	a12, 40080af8 <_init_end+0x6f8>
4008a9e4:	03a2b2        	movi	a11, 0x203
4008a9e7:	d83ba1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a9ea:	500e25        	call8	400daacc <__assert_func>
4008a9ed:	00d356        	bnez	a3, 4008a9fe <multi_heap_realloc_impl+0x32>
4008a9f0:	20b440        	or	a11, a4, a4
4008a9f3:	20a220        	or	a10, a2, a2
4008a9f6:	ffd765        	call8	4008a76c <multi_heap_malloc_impl>
4008a9f9:	0a2d      	mov.n	a2, a10
4008a9fb:	f01d      	retw.n
4008a9fd:	b66000        	lsi	f0, a0, 0x2d8
4008aa00:	02ad20        	andb	b10, b13, b2
4008aa03:	ffb165        	call8	4008a518 <assert_valid_block>
4008aa06:	fcc352        	addi	a5, a3, -4
4008aa09:	0558      	l32i.n	a5, a5, 0
4008aa0b:	067d      	mov.n	a7, a6
4008aa0d:	106507        	bbci	a5, 0, 4008aa21 <multi_heap_realloc_impl+0x55>
4008aa10:	06cd      	mov.n	a12, a6
4008aa12:	0ba2b2        	movi	a11, 0x20b
4008aa15:	d830a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008aa18:	d6a081        	l32r	a8, 40080498 <_init_end+0x98>
4008aa1b:	0008e0        	callx8	a8
4008aa1e:	0094e5        	call8	4008b36c <abort>
4008aa21:	b4cc      	bnez.n	a4, 4008aa30 <multi_heap_realloc_impl+0x64>
4008aa23:	03bd      	mov.n	a11, a3
4008aa25:	02ad      	mov.n	a10, a2
4008aa27:	ffe665        	call8	4008a88c <multi_heap_free_impl>
4008aa2a:	020c      	movi.n	a2, 0
4008aa2c:	f01d      	retw.n
4008aa2e:	160000        	lsi	f0, a0, 88
4008aa31:	a22082        	l32i	a8, a0, 0x288
4008aa34:	160022        	l8ui	a2, a0, 22
4008aa37:	002a      	add.n	a0, a0, a2
4008aa39:	fe0565        	call8	40088a90 <vTaskEnterCritical>
4008aa3c:	fcc352        	addi	a5, a3, -4
4008aa3f:	002582        	l32i	a8, a5, 0
4008aa42:	c57c      	movi.n	a5, -4
4008aa44:	105850        	and	a5, a8, a5
4008aa47:	758c      	beqz.n	a5, 4008aa52 <multi_heap_realloc_impl+0x86>
4008aa49:	c08570        	sub	a8, a5, a7
4008aa4c:	fcc882        	addi	a8, a8, -4
4008aa4f:	000086        	j	4008aa55 <multi_heap_realloc_impl+0x89>
4008aa52:	00a082        	movi	a8, 0
4008aa55:	113847        	bltu	a8, a4, 4008aa6a <multi_heap_realloc_impl+0x9e>
4008aa58:	00a0d2        	movi	a13, 0
4008aa5b:	20c440        	or	a12, a4, a4
4008aa5e:	06bd      	mov.n	a11, a6
4008aa60:	02ad      	mov.n	a10, a2
4008aa62:	ff9665        	call8	4008a3c8 <split_if_necessary>
4008aa65:	035d      	mov.n	a5, a3
4008aa67:	000a06        	j	4008aa93 <multi_heap_realloc_impl+0xc7>
4008aa6a:	1288      	l32i.n	a8, a2, 4
4008aa6c:	858c      	beqz.n	a5, 4008aa78 <multi_heap_realloc_impl+0xac>
4008aa6e:	c05570        	sub	a5, a5, a7
4008aa71:	fcc552        	addi	a5, a5, -4
4008aa74:	0000c6        	j	4008aa7b <multi_heap_realloc_impl+0xaf>
4008aa77:	a05200        	addx4	a5, a2, a0
4008aa7a:	545000        	extui	a5, a0, 0, 6
4008aa7d:	b857c0        	lsi	f12, a7, 0x2e0
4008aa80:	0f          	.byte 0xf
4008aa81:	002222        	l32i	a2, a2, 0
4008aa84:	1ba216        	beqz	a2, 4008ac42 <multi_heap_realloc_impl+0x276>
4008aa87:	20a220        	or	a10, a2, a2
4008aa8a:	fe1465        	call8	40088bd0 <vTaskExitCritical>
4008aa8d:	020c      	movi.n	a2, 0
4008aa8f:	f01d      	retw.n
4008aa91:	050c      	movi.n	a5, 0
4008aa93:	152556        	bnez	a5, 4008abe9 <multi_heap_realloc_impl+0x21d>
4008aa96:	fcc382        	addi	a8, a3, -4
4008aa99:	0898      	l32i.n	a9, a8, 0
4008aa9b:	c87c      	movi.n	a8, -4
4008aa9d:	108980        	and	a8, a9, a8
4008aaa0:	a88c      	beqz.n	a8, 4008aaae <multi_heap_realloc_impl+0xe2>
4008aaa2:	c08870        	sub	a8, a8, a7
4008aaa5:	fcc882        	addi	a8, a8, -4
4008aaa8:	3189      	s32i.n	a8, a1, 12
4008aaaa:	000186        	j	4008aab4 <multi_heap_realloc_impl+0xe8>
4008aaad:	a08200        	addx4	a8, a2, a0
4008aab0:	618200        	lsi	f0, a2, 0x184
4008aab3:	f03d03        	lsi	f0, a13, 0x3c0
4008aab6:	f03d      	nop.n
4008aab8:	f03d      	nop.n
4008aaba:	f03d      	nop.n
4008aabc:	002692        	l32i	a9, a6, 0
4008aabf:	c87c      	movi.n	a8, -4
4008aac1:	108980        	and	a8, a9, a8
4008aac4:	689c      	beqz.n	a8, 4008aade <multi_heap_realloc_impl+0x112>
4008aac6:	0e2687        	blt	a6, a8, 4008aad8 <multi_heap_realloc_impl+0x10c>
4008aac9:	d806d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008aacc:	d807c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008aacf:	7ca0b2        	movi	a11, 124
4008aad2:	d800a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008aad5:	4fff65        	call8	400daacc <__assert_func>
4008aad8:	2189      	s32i.n	a8, a1, 8
4008aada:	000186        	j	4008aae4 <multi_heap_realloc_impl+0x118>
4008aadd:	a09200        	addx4	a9, a2, a0
4008aae0:	619200        	lsi	f0, a2, 0x184
4008aae3:	06bd02        	l32ai	a0, a13, 24
4008aae6:	02ad      	mov.n	a10, a2
4008aae8:	ff8765        	call8	4008a360 <get_prev_free_block>
4008aaeb:	01a9      	s32i.n	a10, a1, 0
4008aaed:	f03d      	nop.n
4008aaef:	f03d      	nop.n
4008aaf1:	f03d      	nop.n
4008aaf3:	f03d      	nop.n
4008aaf5:	0a98      	l32i.n	a9, a10, 0
4008aaf7:	fcaf82        	movi	a8, -4
4008aafa:	108980        	and	a8, a9, a8
4008aafd:	011816        	beqz	a8, 4008ab12 <multi_heap_realloc_impl+0x146>
4008ab00:	102a87        	blt	a10, a8, 4008ab14 <multi_heap_realloc_impl+0x148>
4008ab03:	d7f8d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008ab06:	d7f8c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008ab09:	7ca0b2        	movi	a11, 124
4008ab0c:	d7f2a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008ab0f:	4ffbe5        	call8	400daacc <__assert_func>
4008ab12:	080c      	movi.n	a8, 0
4008ab14:	209687        	bne	a6, a8, 4008ab38 <multi_heap_realloc_impl+0x16c>
4008ab17:	0188      	l32i.n	a8, a1, 0
4008ab19:	0898      	l32i.n	a9, a8, 0
4008ab1b:	c87c      	movi.n	a8, -4
4008ab1d:	108980        	and	a8, a9, a8
4008ab20:	c88c      	beqz.n	a8, 4008ab30 <multi_heap_realloc_impl+0x164>
4008ab22:	0198      	l32i.n	a9, a1, 0
4008ab24:	c08890        	sub	a8, a8, a9
4008ab27:	fcc882        	addi	a8, a8, -4
4008ab2a:	1189      	s32i.n	a8, a1, 4
4008ab2c:	000306        	j	4008ab3c <multi_heap_realloc_impl+0x170>
4008ab2f:	080c00        	lsx	f0, a12, a0
4008ab32:	1189      	s32i.n	a8, a1, 4
4008ab34:	000106        	j	4008ab3c <multi_heap_realloc_impl+0x170>
4008ab37:	090c00        	l32e	a0, a12, -64
4008ab3a:	1199      	s32i.n	a9, a1, 4
4008ab3c:	f03d      	nop.n
4008ab3e:	f03d      	nop.n
4008ab40:	f03d      	nop.n
4008ab42:	f03d      	nop.n
4008ab44:	2188      	l32i.n	a8, a1, 8
4008ab46:	0898      	l32i.n	a9, a8, 0
4008ab48:	406907        	bbci	a9, 0, 4008ab8c <multi_heap_realloc_impl+0x1c0>
4008ab4b:	fcc382        	addi	a8, a3, -4
4008ab4e:	08a8      	l32i.n	a10, a8, 0
4008ab50:	c87c      	movi.n	a8, -4
4008ab52:	108a80        	and	a8, a10, a8
4008ab55:	788c      	beqz.n	a8, 4008ab60 <multi_heap_realloc_impl+0x194>
4008ab57:	c07870        	sub	a7, a8, a7
4008ab5a:	fcc782        	addi	a8, a7, -4
4008ab5d:	000046        	j	4008ab62 <multi_heap_realloc_impl+0x196>
4008ab60:	080c      	movi.n	a8, 0
4008ab62:	c77c      	movi.n	a7, -4
4008ab64:	107970        	and	a7, a9, a7
4008ab67:	b78c      	beqz.n	a7, 4008ab76 <multi_heap_realloc_impl+0x1aa>
4008ab69:	2198      	l32i.n	a9, a1, 8
4008ab6b:	c07790        	sub	a7, a7, a9
4008ab6e:	fcc772        	addi	a7, a7, -4
4008ab71:	0000c6        	j	4008ab78 <multi_heap_realloc_impl+0x1ac>
4008ab74:	0c0000        	lsi	f0, a0, 48
4008ab77:	778a07        	bany	a10, a0, 4008abf2 <multi_heap_realloc_impl+0x226>
4008ab7a:	1188      	l32i.n	a8, a1, 4
4008ab7c:	787a      	add.n	a7, a8, a7
4008ab7e:	0a3747        	bltu	a7, a4, 4008ab8c <multi_heap_realloc_impl+0x1c0>
4008ab81:	21c8      	l32i.n	a12, a1, 8
4008ab83:	06bd      	mov.n	a11, a6
4008ab85:	02ad      	mov.n	a10, a2
4008ab87:	ffa425        	call8	4008a5c8 <merge_adjacent>
4008ab8a:	0a6d      	mov.n	a6, a10
4008ab8c:	1198      	l32i.n	a9, a1, 4
4008ab8e:	49ac      	beqz.n	a9, 4008abb6 <multi_heap_realloc_impl+0x1ea>
4008ab90:	0688      	l32i.n	a8, a6, 0
4008ab92:	c77c      	movi.n	a7, -4
4008ab94:	107870        	and	a7, a8, a7
4008ab97:	778c      	beqz.n	a7, 4008aba2 <multi_heap_realloc_impl+0x1d6>
4008ab99:	c07760        	sub	a7, a7, a6
4008ab9c:	fcc772        	addi	a7, a7, -4
4008ab9f:	000046        	j	4008aba4 <multi_heap_realloc_impl+0x1d8>
4008aba2:	070c      	movi.n	a7, 0
4008aba4:	1188      	l32i.n	a8, a1, 4
4008aba6:	787a      	add.n	a7, a8, a7
4008aba8:	0a3747        	bltu	a7, a4, 4008abb6 <multi_heap_realloc_impl+0x1ea>
4008abab:	06cd      	mov.n	a12, a6
4008abad:	01b8      	l32i.n	a11, a1, 0
4008abaf:	02ad      	mov.n	a10, a2
4008abb1:	ffa165        	call8	4008a5c8 <merge_adjacent>
4008abb4:	0a6d      	mov.n	a6, a10
4008abb6:	0688      	l32i.n	a8, a6, 0
4008abb8:	c77c      	movi.n	a7, -4
4008abba:	107870        	and	a7, a8, a7
4008abbd:	878c      	beqz.n	a7, 4008abc9 <multi_heap_realloc_impl+0x1fd>
4008abbf:	c07760        	sub	a7, a7, a6
4008abc2:	fcc772        	addi	a7, a7, -4
4008abc5:	0000c6        	j	4008abcc <multi_heap_realloc_impl+0x200>
4008abc8:	a07200        	addx4	a7, a2, a0
4008abcb:	374700        	lsi	f0, a7, 220
4008abce:	5219      	s32i.n	a1, a2, 20
4008abd0:	c804c6        	j	4007cbe7 <__udivmoddi4+0x17ff3>
4008abd3:	03bd31        	l32r	a3, 4004bac8 <lld_pdu_pack+0xfb4>
4008abd6:	05ad      	mov.n	a10, a5
4008abd8:	d72681        	l32r	a8, 40080870 <_init_end+0x470>
4008abdb:	0008e0        	callx8	a8
4008abde:	0d0c      	movi.n	a13, 0
4008abe0:	04cd      	mov.n	a12, a4
4008abe2:	06bd      	mov.n	a11, a6
4008abe4:	02ad      	mov.n	a10, a2
4008abe6:	ff7e25        	call8	4008a3c8 <split_if_necessary>
4008abe9:	35fc      	bnez.n	a5, 4008ac20 <multi_heap_realloc_impl+0x254>
4008abeb:	04bd      	mov.n	a11, a4
4008abed:	02ad      	mov.n	a10, a2
4008abef:	ffb7e5        	call8	4008a76c <multi_heap_malloc_impl>
4008abf2:	0a5d      	mov.n	a5, a10
4008abf4:	8aac      	beqz.n	a10, 4008ac20 <multi_heap_realloc_impl+0x254>
4008abf6:	464b      	addi.n	a4, a6, 4
4008abf8:	0678      	l32i.n	a7, a6, 0
4008abfa:	c37c      	movi.n	a3, -4
4008abfc:	103730        	and	a3, a7, a3
4008abff:	738c      	beqz.n	a3, 4008ac0a <multi_heap_realloc_impl+0x23e>
4008ac01:	c03360        	sub	a3, a3, a6
4008ac04:	fcc3c2        	addi	a12, a3, -4
4008ac07:	000086        	j	4008ac0d <multi_heap_realloc_impl+0x241>
4008ac0a:	00a0c2        	movi	a12, 0
4008ac0d:	20b440        	or	a11, a4, a4
4008ac10:	20a550        	or	a10, a5, a5
4008ac13:	d6cc81        	l32r	a8, 40080744 <_init_end+0x344>
4008ac16:	0008e0        	callx8	a8
4008ac19:	04bd      	mov.n	a11, a4
4008ac1b:	02ad      	mov.n	a10, a2
4008ac1d:	ffc6e5        	call8	4008a88c <multi_heap_free_impl>
4008ac20:	1238      	l32i.n	a3, a2, 4
4008ac22:	2248      	l32i.n	a4, a2, 8
4008ac24:	01b347        	bgeu	a3, a4, 4008ac29 <multi_heap_realloc_impl+0x25d>
4008ac27:	2239      	s32i.n	a3, a2, 8
4008ac29:	f03d      	nop.n
4008ac2b:	f03d      	nop.n
4008ac2d:	f03d      	nop.n
4008ac2f:	f03d      	nop.n
4008ac31:	02a8      	l32i.n	a10, a2, 0
4008ac33:	9a8c      	beqz.n	a10, 4008ac40 <multi_heap_realloc_impl+0x274>
4008ac35:	fdf9a5        	call8	40088bd0 <vTaskExitCritical>
4008ac38:	052d      	mov.n	a2, a5
4008ac3a:	f01d      	retw.n
4008ac3c:	020c      	movi.n	a2, 0
4008ac3e:	f01d      	retw.n
4008ac40:	052d      	mov.n	a2, a5
4008ac42:	f01d      	retw.n

4008ac44 <multi_heap_register_impl>:
4008ac44:	004136        	entry	a1, 32
4008ac47:	823b      	addi.n	a8, a2, 3
4008ac49:	c97c      	movi.n	a9, -4
4008ac4b:	108890        	and	a8, a8, a9
4008ac4e:	323a      	add.n	a3, a2, a3
4008ac50:	103390        	and	a3, a3, a9
4008ac53:	c09380        	sub	a9, a3, a8
4008ac56:	120c      	movi.n	a2, 1
4008ac58:	013387        	bltu	a3, a8, 4008ac5d <multi_heap_register_impl+0x19>
4008ac5b:	020c      	movi.n	a2, 0
4008ac5d:	74a020        	extui	a10, a2, 0, 8
4008ac60:	120c      	movi.n	a2, 1
4008ac62:	7b2c      	movi.n	a11, 39
4008ac64:	01bb97        	bgeu	a11, a9, 4008ac69 <multi_heap_register_impl+0x25>
4008ac67:	020c      	movi.n	a2, 0
4008ac69:	742020        	extui	a2, a2, 0, 8
4008ac6c:	202a20        	or	a2, a10, a2
4008ac6f:	32fc      	bnez.n	a2, 4008aca6 <multi_heap_register_impl+0x62>
4008ac71:	0b0c      	movi.n	a11, 0
4008ac73:	08b9      	s32i.n	a11, a8, 0
4008ac75:	f8c332        	addi	a3, a3, -8
4008ac78:	3839      	s32i.n	a3, a8, 12
4008ac7a:	18c8a2        	addi	a10, a8, 24
4008ac7d:	120c      	movi.n	a2, 1
4008ac7f:	20c320        	or	a12, a3, a2
4008ac82:	68c9      	s32i.n	a12, a8, 24
4008ac84:	7839      	s32i.n	a3, a8, 28
4008ac86:	0329      	s32i.n	a2, a3, 0
4008ac88:	f03d      	nop.n
4008ac8a:	f03d      	nop.n
4008ac8c:	f03d      	nop.n
4008ac8e:	f03d      	nop.n
4008ac90:	3838      	l32i.n	a3, a8, 12
4008ac92:	13b9      	s32i.n	a11, a3, 4
4008ac94:	202a20        	or	a2, a10, a2
4008ac97:	4829      	s32i.n	a2, a8, 16
4008ac99:	58a9      	s32i.n	a10, a8, 20
4008ac9b:	dcc992        	addi	a9, a9, -36
4008ac9e:	1899      	s32i.n	a9, a8, 4
4008aca0:	2899      	s32i.n	a9, a8, 8
4008aca2:	082d      	mov.n	a2, a8
4008aca4:	f01d      	retw.n
4008aca6:	020c      	movi.n	a2, 0
4008aca8:	f01d      	retw.n
	...

4008acac <multi_heap_set_lock>:
4008acac:	004136        	entry	a1, 32
4008acaf:	0239      	s32i.n	a3, a2, 0
4008acb1:	f01d      	retw.n
	...

4008acb4 <poison_allocated_region>:
4008acb4:	006136        	entry	a1, 48
4008acb7:	029d      	mov.n	a9, a2
4008acb9:	228b      	addi.n	a2, a2, 8
4008acbb:	823a      	add.n	a8, a2, a3
4008acbd:	1939      	s32i.n	a3, a9, 4
4008acbf:	f03d      	nop.n
4008acc1:	f03d      	nop.n
4008acc3:	f03d      	nop.n
4008acc5:	f03d      	nop.n
4008acc7:	d78d31        	l32r	a3, 40080afc <_init_end+0x6fc>
4008acca:	0939      	s32i.n	a3, a9, 0
4008accc:	f03d      	nop.n
4008acce:	f03d      	nop.n
4008acd0:	f03d      	nop.n
4008acd2:	f03d      	nop.n
4008acd4:	d78b31        	l32r	a3, 40080b00 <_init_end+0x700>
4008acd7:	3139      	s32i.n	a3, a1, 12
4008acd9:	143080        	extui	a3, a8, 0, 2
4008acdc:	c3cc      	bnez.n	a3, 4008acec <poison_allocated_region+0x38>
4008acde:	f03d      	nop.n
4008ace0:	f03d      	nop.n
4008ace2:	f03d      	nop.n
4008ace4:	d78731        	l32r	a3, 40080b00 <_init_end+0x700>
4008ace7:	0839      	s32i.n	a3, a8, 0
4008ace9:	f01d      	retw.n
4008aceb:	019200        	slli	a9, a2, 32
4008acee:	320c      	movi.n	a2, 3
4008acf0:	920d01        	l32r	a0, 4006f524 <__udivmoddi4+0xa930>
4008acf3:	0048      	l32i.n	a4, a0, 0
4008acf5:	0020c0        	memw
4008acf8:	f03d      	nop.n
4008acfa:	f03d      	nop.n
4008acfc:	f03d      	nop.n
4008acfe:	f03d      	nop.n
4008ad00:	0e0192        	l8ui	a9, a1, 14
4008ad03:	014832        	s8i	a3, a8, 1
4008ad06:	0020c0        	memw
4008ad09:	f03d      	nop.n
4008ad0b:	f03d      	nop.n
4008ad0d:	f03d      	nop.n
4008ad0f:	f03d      	nop.n
4008ad11:	0f0132        	l8ui	a3, a1, 15
4008ad14:	024892        	s8i	a9, a8, 2
4008ad17:	034832        	s8i	a3, a8, 3
4008ad1a:	0020c0        	memw
4008ad1d:	f01d      	retw.n
	...

4008ad20 <verify_allocated_region>:
4008ad20:	006136        	entry	a1, 48
4008ad23:	f8c2b2        	addi	a11, a2, -8
4008ad26:	1b88      	l32i.n	a8, a11, 4
4008ad28:	228a      	add.n	a2, a2, a8
4008ad2a:	0bd8      	l32i.n	a13, a11, 0
4008ad2c:	d77481        	l32r	a8, 40080afc <_init_end+0x6fc>
4008ad2f:	111d87        	beq	a13, a8, 4008ad44 <verify_allocated_region+0x24>
4008ad32:	06e316        	beqz	a3, 4008ada4 <verify_allocated_region+0x84>
4008ad35:	08cd      	mov.n	a12, a8
4008ad37:	d773a1        	l32r	a10, 40080b04 <_init_end+0x704>
4008ad3a:	d5d781        	l32r	a8, 40080498 <_init_end+0x98>
4008ad3d:	0008e0        	callx8	a8
4008ad40:	020c      	movi.n	a2, 0
4008ad42:	f01d      	retw.n
4008ad44:	148020        	extui	a8, a2, 0, 2
4008ad47:	58cc      	bnez.n	a8, 4008ad50 <verify_allocated_region+0x30>
4008ad49:	0288      	l32i.n	a8, a2, 0
4008ad4b:	3189      	s32i.n	a8, a1, 12
4008ad4d:	000c06        	j	4008ad81 <verify_allocated_region+0x61>
4008ad50:	000292        	l8ui	a9, a2, 0
4008ad53:	010282        	l8ui	a8, a2, 1
4008ad56:	0c4192        	s8i	a9, a1, 12
4008ad59:	0020c0        	memw
4008ad5c:	f03d      	nop.n
4008ad5e:	f03d      	nop.n
4008ad60:	f03d      	nop.n
4008ad62:	f03d      	nop.n
4008ad64:	020292        	l8ui	a9, a2, 2
4008ad67:	0d4182        	s8i	a8, a1, 13
4008ad6a:	0020c0        	memw
4008ad6d:	f03d      	nop.n
4008ad6f:	f03d      	nop.n
4008ad71:	f03d      	nop.n
4008ad73:	f03d      	nop.n
4008ad75:	030282        	l8ui	a8, a2, 3
4008ad78:	0e4192        	s8i	a9, a1, 14
4008ad7b:	0f4182        	s8i	a8, a1, 15
4008ad7e:	0020c0        	memw
4008ad81:	f03d      	nop.n
4008ad83:	f03d      	nop.n
4008ad85:	f03d      	nop.n
4008ad87:	f03d      	nop.n
4008ad89:	0321d2        	l32i	a13, a1, 12
4008ad8c:	d75d81        	l32r	a8, 40080b00 <_init_end+0x700>
4008ad8f:	151d87        	beq	a13, a8, 4008ada8 <verify_allocated_region+0x88>
4008ad92:	016316        	beqz	a3, 4008adac <verify_allocated_region+0x8c>
4008ad95:	20c880        	or	a12, a8, a8
4008ad98:	02bd      	mov.n	a11, a2
4008ad9a:	d75ba1        	l32r	a10, 40080b08 <_init_end+0x708>
4008ad9d:	50fe65        	call8	400dbd84 <printf>
4008ada0:	020c      	movi.n	a2, 0
4008ada2:	f01d      	retw.n
4008ada4:	020c      	movi.n	a2, 0
4008ada6:	f01d      	retw.n
4008ada8:	0b2d      	mov.n	a2, a11
4008adaa:	f01d      	retw.n
4008adac:	020c      	movi.n	a2, 0
4008adae:	f01d      	retw.n

4008adb0 <multi_heap_malloc>:
4008adb0:	004136        	entry	a1, 32
4008adb3:	f3af82        	movi	a8, -13
4008adb6:	263837        	bltu	a8, a3, 4008ade0 <multi_heap_malloc+0x30>
4008adb9:	02ad      	mov.n	a10, a2
4008adbb:	ff99a5        	call8	4008a754 <multi_heap_internal_lock>
4008adbe:	b3cb      	addi.n	a11, a3, 12
4008adc0:	02ad      	mov.n	a10, a2
4008adc2:	ff9aa5        	call8	4008a76c <multi_heap_malloc_impl>
4008adc5:	9a8c      	beqz.n	a10, 4008add2 <multi_heap_malloc+0x22>
4008adc7:	03bd      	mov.n	a11, a3
4008adc9:	ffeea5        	call8	4008acb4 <poison_allocated_region>
4008adcc:	0a3d      	mov.n	a3, a10
4008adce:	0000c6        	j	4008add5 <multi_heap_malloc+0x25>
4008add1:	a03200        	addx4	a3, a2, a0
4008add4:	a22000        	muluh	a2, a0, a0
4008add7:	986520        	lsi	f2, a5, 0x260
4008adda:	ff          	.byte 0xff
4008addb:	202330        	or	a2, a3, a3
4008adde:	f01d      	retw.n
4008ade0:	020c      	movi.n	a2, 0
4008ade2:	f01d      	retw.n

4008ade4 <multi_heap_free>:
4008ade4:	004136        	entry	a1, 32
4008ade7:	02b316        	beqz	a3, 4008ae16 <multi_heap_free+0x32>
4008adea:	20a220        	or	a10, a2, a2
4008aded:	ff9665        	call8	4008a754 <multi_heap_internal_lock>
4008adf0:	1b0c      	movi.n	a11, 1
4008adf2:	03ad      	mov.n	a10, a3
4008adf4:	fff2a5        	call8	4008ad20 <verify_allocated_region>
4008adf7:	dacc      	bnez.n	a10, 4008ae08 <multi_heap_free+0x24>
4008adf9:	d744d1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008adfc:	d745c1        	l32r	a12, 40080b10 <_init_end+0x710>
4008adff:	d6a0b2        	movi	a11, 214
4008ae02:	d744a1        	l32r	a10, 40080b14 <_init_end+0x714>
4008ae05:	4fcc65        	call8	400daacc <__assert_func>
4008ae08:	20baa0        	or	a11, a10, a10
4008ae0b:	20a220        	or	a10, a2, a2
4008ae0e:	ffa7e5        	call8	4008a88c <multi_heap_free_impl>
4008ae11:	02ad      	mov.n	a10, a2
4008ae13:	ff94e5        	call8	4008a760 <multi_heap_internal_unlock>
4008ae16:	f01d      	retw.n

4008ae18 <multi_heap_realloc>:
4008ae18:	004136        	entry	a1, 32
4008ae1b:	f3af82        	movi	a8, -13
4008ae1e:	643847        	bltu	a8, a4, 4008ae86 <multi_heap_realloc+0x6e>
4008ae21:	00b356        	bnez	a3, 4008ae30 <multi_heap_realloc+0x18>
4008ae24:	20b440        	or	a11, a4, a4
4008ae27:	02ad      	mov.n	a10, a2
4008ae29:	fff865        	call8	4008adb0 <multi_heap_malloc>
4008ae2c:	0a2d      	mov.n	a2, a10
4008ae2e:	f01d      	retw.n
4008ae30:	00c456        	bnez	a4, 4008ae40 <multi_heap_realloc+0x28>
4008ae33:	20b330        	or	a11, a3, a3
4008ae36:	20a220        	or	a10, a2, a2
4008ae39:	fffaa5        	call8	4008ade4 <multi_heap_free>
4008ae3c:	020c      	movi.n	a2, 0
4008ae3e:	f01d      	retw.n
4008ae40:	01a0b2        	movi	a11, 1
4008ae43:	20a330        	or	a10, a3, a3
4008ae46:	ffeda5        	call8	4008ad20 <verify_allocated_region>
4008ae49:	0a3d      	mov.n	a3, a10
4008ae4b:	dacc      	bnez.n	a10, 4008ae5c <multi_heap_realloc+0x44>
4008ae4d:	d72fd1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008ae50:	d732c1        	l32r	a12, 40080b18 <_init_end+0x718>
4008ae53:	f5a0b2        	movi	a11, 245
4008ae56:	d72fa1        	l32r	a10, 40080b14 <_init_end+0x714>
4008ae59:	4fc725        	call8	400daacc <__assert_func>
4008ae5c:	20a220        	or	a10, a2, a2
4008ae5f:	ff8f65        	call8	4008a754 <multi_heap_internal_lock>
4008ae62:	c4cb      	addi.n	a12, a4, 12
4008ae64:	03bd      	mov.n	a11, a3
4008ae66:	02ad      	mov.n	a10, a2
4008ae68:	ffb625        	call8	4008a9cc <multi_heap_realloc_impl>
4008ae6b:	9a8c      	beqz.n	a10, 4008ae78 <multi_heap_realloc+0x60>
4008ae6d:	04bd      	mov.n	a11, a4
4008ae6f:	ffe465        	call8	4008acb4 <poison_allocated_region>
4008ae72:	0a4d      	mov.n	a4, a10
4008ae74:	0000c6        	j	4008ae7b <multi_heap_realloc+0x63>
4008ae77:	a04200        	addx4	a4, a2, a0
4008ae7a:	a22000        	muluh	a2, a0, a0
4008ae7d:	8e2520        	f64iter	a2, a5, a2, 0, 0
4008ae80:	ff          	.byte 0xff
4008ae81:	202440        	or	a2, a4, a4
4008ae84:	f01d      	retw.n
4008ae86:	020c      	movi.n	a2, 0
4008ae88:	f01d      	retw.n
	...

4008ae8c <multi_heap_get_allocated_size>:
4008ae8c:	004136        	entry	a1, 32
4008ae8f:	01a0b2        	movi	a11, 1
4008ae92:	20a330        	or	a10, a3, a3
4008ae95:	ffe8a5        	call8	4008ad20 <verify_allocated_region>
4008ae98:	00ea56        	bnez	a10, 4008aeaa <multi_heap_get_allocated_size+0x1e>
4008ae9b:	d71cd1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008ae9e:	d71fc1        	l32r	a12, 40080b1c <_init_end+0x71c>
4008aea1:	22a1b2        	movi	a11, 0x122
4008aea4:	d71ca1        	l32r	a10, 40080b14 <_init_end+0x714>
4008aea7:	4fc265        	call8	400daacc <__assert_func>
4008aeaa:	20baa0        	or	a11, a10, a10
4008aead:	20a220        	or	a10, a2, a2
4008aeb0:	ff86a5        	call8	4008a71c <multi_heap_get_allocated_size_impl>
4008aeb3:	005a16        	beqz	a10, 4008aebc <multi_heap_get_allocated_size+0x30>
4008aeb6:	f4ca22        	addi	a2, a10, -12
4008aeb9:	f01d      	retw.n
4008aebb:	020c00        	andb	b0, b12, b0
4008aebe:	f01d      	retw.n

4008aec0 <multi_heap_register>:
4008aec0:	004136        	entry	a1, 32
4008aec3:	b28c      	beqz.n	a2, 4008aed2 <multi_heap_register+0x12>
4008aec5:	03cd      	mov.n	a12, a3
4008aec7:	fea0b2        	movi	a11, 254
4008aeca:	02ad      	mov.n	a10, a2
4008aecc:	d57281        	l32r	a8, 40080494 <_init_end+0x94>
4008aecf:	0008e0        	callx8	a8
4008aed2:	20b330        	or	a11, a3, a3
4008aed5:	20a220        	or	a10, a2, a2
4008aed8:	ffd6a5        	call8	4008ac44 <multi_heap_register_impl>
4008aedb:	202aa0        	or	a2, a10, a10
4008aede:	f01d      	retw.n

4008aee0 <panicPutChar>:
4008aee0:	004136        	entry	a1, 32
4008aee3:	d5a381        	l32r	a8, 40080570 <_init_end+0x170>
4008aee6:	0020c0        	memw
4008aee9:	0888      	l32i.n	a8, a8, 0
4008aeeb:	758080        	extui	a8, a8, 16, 8
4008aeee:	7da092        	movi	a9, 125
4008aef1:	ee3987        	bltu	a9, a8, 4008aee3 <panicPutChar+0x3>
4008aef4:	d70b81        	l32r	a8, 40080b20 <_init_end+0x720>
4008aef7:	0020c0        	memw
4008aefa:	0829      	s32i.n	a2, a8, 0
4008aefc:	f01d      	retw.n
	...

4008af00 <panicPutStr>:
4008af00:	004136        	entry	a1, 32
4008af03:	030c      	movi.n	a3, 0
4008af05:	000146        	j	4008af0e <panicPutStr+0xe>
4008af08:	fffd65        	call8	4008aee0 <panicPutChar>
4008af0b:	01c332        	addi	a3, a3, 1
4008af0e:	808230        	add	a8, a2, a3
4008af11:	0008a2        	l8ui	a10, a8, 0
4008af14:	ff0a56        	bnez	a10, 4008af08 <panicPutStr+0x8>
4008af17:	000090        	retw
	...

4008af1c <panicPutHex>:
4008af1c:	004136        	entry	a1, 32
4008af1f:	030c      	movi.n	a3, 0
4008af21:	000786        	j	4008af43 <panicPutHex+0x27>
4008af24:	35ac20        	extui	a10, a2, 28, 4
4008af27:	980c      	movi.n	a8, 9
4008af29:	0b28a7        	blt	a8, a10, 4008af38 <panicPutHex+0x1c>
4008af2c:	30caa2        	addi	a10, a10, 48
4008af2f:	fffb25        	call8	4008aee0 <panicPutChar>
4008af32:	000206        	j	4008af3e <panicPutHex+0x22>
4008af35:	000000        	ill
4008af38:	57caa2        	addi	a10, a10, 87
4008af3b:	fffa65        	call8	4008aee0 <panicPutChar>
4008af3e:	1122c0        	slli	a2, a2, 4
4008af41:	331b      	addi.n	a3, a3, 1
4008af43:	dd83a6        	blti	a3, 8, 4008af24 <panicPutHex+0x8>
4008af46:	f01d      	retw.n

4008af48 <panicPutDec>:
4008af48:	004136        	entry	a1, 32
4008af4b:	d6f631        	l32r	a3, 40080b24 <_init_end+0x724>
4008af4e:	b23230        	mulsh	a3, a2, a3
4008af51:	213230        	srai	a3, a3, 2
4008af54:	31af20        	srai	a10, a2, 31
4008af57:	c033a0        	sub	a3, a3, a10
4008af5a:	038d      	mov.n	a8, a3
4008af5c:	a03330        	addx4	a3, a3, a3
4008af5f:	11a3f0        	slli	a10, a3, 1
4008af62:	c032a0        	sub	a3, a2, a10
4008af65:	78cc      	bnez.n	a8, 4008af70 <panicPutDec+0x28>
4008af67:	0a2c      	movi.n	a10, 32
4008af69:	fff765        	call8	4008aee0 <panicPutChar>
4008af6c:	000246        	j	4008af79 <panicPutDec+0x31>
4008af6f:	c8a200        	lsi	f0, a2, 0x320
4008af72:	a0a030        	addx4	a10, a0, a3
4008af75:	f6a574        	lsi	f7, a5, 0x3d8
4008af78:	ff          	.byte 0xff
4008af79:	30c3a2        	addi	a10, a3, 48
4008af7c:	74a0a0        	extui	a10, a10, 0, 8
4008af7f:	fff625        	call8	4008aee0 <panicPutChar>
4008af82:	f01d      	retw.n

4008af84 <illegal_instruction_helper>:
4008af84:	004136        	entry	a1, 32
4008af87:	1288      	l32i.n	a8, a2, 4
4008af89:	c27c      	movi.n	a2, -4
4008af8b:	108820        	and	a8, a8, a2
4008af8e:	282a      	add.n	a2, a8, a2
4008af90:	d6e691        	l32r	a9, 40080b28 <_init_end+0x728>
4008af93:	889a      	add.n	a8, a8, a9
4008af95:	d63331        	l32r	a3, 40080864 <_init_end+0x464>
4008af98:	3d3387        	bltu	a3, a8, 4008afd9 <illegal_instruction_helper+0x55>
4008af9b:	d6e4a1        	l32r	a10, 40080b2c <_init_end+0x72c>
4008af9e:	fff625        	call8	4008af00 <panicPutStr>
4008afa1:	02ad      	mov.n	a10, a2
4008afa3:	fff7a5        	call8	4008af1c <panicPutHex>
4008afa6:	d6e2a1        	l32r	a10, 40080b30 <_init_end+0x730>
4008afa9:	fff565        	call8	4008af00 <panicPutStr>
4008afac:	0020c0        	memw
4008afaf:	02a8      	l32i.n	a10, a2, 0
4008afb1:	fff6a5        	call8	4008af1c <panicPutHex>
4008afb4:	d6e031        	l32r	a3, 40080b34 <_init_end+0x734>
4008afb7:	20a330        	or	a10, a3, a3
4008afba:	fff465        	call8	4008af00 <panicPutStr>
4008afbd:	0020c0        	memw
4008afc0:	0122a2        	l32i	a10, a2, 4
4008afc3:	fff5a5        	call8	4008af1c <panicPutHex>
4008afc6:	03ad      	mov.n	a10, a3
4008afc8:	fff365        	call8	4008af00 <panicPutStr>
4008afcb:	0020c0        	memw
4008afce:	22a8      	l32i.n	a10, a2, 8
4008afd0:	fff4a5        	call8	4008af1c <panicPutHex>
4008afd3:	d6d9a1        	l32r	a10, 40080b38 <_init_end+0x738>
4008afd6:	fff2a5        	call8	4008af00 <panicPutStr>
4008afd9:	f01d      	retw.n
	...

4008afdc <reconfigureAllWdts>:
4008afdc:	004136        	entry	a1, 32
4008afdf:	d56381        	l32r	a8, 4008056c <_init_end+0x16c>
4008afe2:	d545b1        	l32r	a11, 400804f8 <_init_end+0xf8>
4008afe5:	0020c0        	memw
4008afe8:	1968b2        	s32i	a11, a8, 100
4008afeb:	190c      	movi.n	a9, 1
4008afed:	0020c0        	memw
4008aff0:	186892        	s32i	a9, a8, 96
4008aff3:	f03d      	nop.n
4008aff5:	f03d      	nop.n
4008aff7:	f03d      	nop.n
4008aff9:	f03d      	nop.n
4008affb:	0020c0        	memw
4008affe:	1228a2        	l32i	a10, a8, 72
4008b001:	d6ce91        	l32r	a9, 40080b3c <_init_end+0x73c>
4008b004:	209a90        	or	a9, a10, a9
4008b007:	0020c0        	memw
4008b00a:	126892        	s32i	a9, a8, 72
4008b00d:	f03d      	nop.n
4008b00f:	f03d      	nop.n
4008b011:	f03d      	nop.n
4008b013:	f03d      	nop.n
4008b015:	0020c0        	memw
4008b018:	1228a2        	l32i	a10, a8, 72
4008b01b:	d6c991        	l32r	a9, 40080b40 <_init_end+0x740>
4008b01e:	209a90        	or	a9, a10, a9
4008b021:	0020c0        	memw
4008b024:	126892        	s32i	a9, a8, 72
4008b027:	f03d      	nop.n
4008b029:	f03d      	nop.n
4008b02b:	f03d      	nop.n
4008b02d:	f03d      	nop.n
4008b02f:	0020c0        	memw
4008b032:	1228a2        	l32i	a10, a8, 72
4008b035:	d59d91        	l32r	a9, 400806ac <_init_end+0x2ac>
4008b038:	209a90        	or	a9, a10, a9
4008b03b:	0020c0        	memw
4008b03e:	126892        	s32i	a9, a8, 72
4008b041:	f03d      	nop.n
4008b043:	f03d      	nop.n
4008b045:	f03d      	nop.n
4008b047:	f03d      	nop.n
4008b049:	0020c0        	memw
4008b04c:	1328a2        	l32i	a10, a8, 76
4008b04f:	f4a0a0        	extui	a10, a10, 0, 16
4008b052:	d6bc91        	l32r	a9, 40080b44 <_init_end+0x744>
4008b055:	209a90        	or	a9, a10, a9
4008b058:	0020c0        	memw
4008b05b:	136892        	s32i	a9, a8, 76
4008b05e:	d0a792        	movi	a9, 0x7d0
4008b061:	0020c0        	memw
4008b064:	146892        	s32i	a9, a8, 80
4008b067:	f03d      	nop.n
4008b069:	f03d      	nop.n
4008b06b:	f03d      	nop.n
4008b06d:	f03d      	nop.n
4008b06f:	0020c0        	memw
4008b072:	1228a2        	l32i	a10, a8, 72
4008b075:	d58191        	l32r	a9, 4008067c <_init_end+0x27c>
4008b078:	209a90        	or	a9, a10, a9
4008b07b:	0020c0        	memw
4008b07e:	126892        	s32i	a9, a8, 72
4008b081:	0a0c      	movi.n	a10, 0
4008b083:	0020c0        	memw
4008b086:	1968a2        	s32i	a10, a8, 100
4008b089:	f03d      	nop.n
4008b08b:	f03d      	nop.n
4008b08d:	f03d      	nop.n
4008b08f:	f03d      	nop.n
4008b091:	d51881        	l32r	a8, 400804f4 <_init_end+0xf4>
4008b094:	0020c0        	memw
4008b097:	1968b2        	s32i	a11, a8, 100
4008b09a:	f03d      	nop.n
4008b09c:	f03d      	nop.n
4008b09e:	f03d      	nop.n
4008b0a0:	f03d      	nop.n
4008b0a2:	0020c0        	memw
4008b0a5:	1228b2        	l32i	a11, a8, 72
4008b0a8:	d51e91        	l32r	a9, 40080520 <_init_end+0x120>
4008b0ab:	109b90        	and	a9, a11, a9
4008b0ae:	0020c0        	memw
4008b0b1:	126892        	s32i	a9, a8, 72
4008b0b4:	0020c0        	memw
4008b0b7:	1968a2        	s32i	a10, a8, 100
4008b0ba:	f01d      	retw.n

4008b0bc <putEntry>:
4008b0bc:	004136        	entry	a1, 32
4008b0bf:	00b2d6        	bgez	a2, 4008b0ce <putEntry+0x12>
4008b0c2:	d6a181        	l32r	a8, 40080b48 <_init_end+0x748>
4008b0c5:	102280        	and	a2, a2, a8
4008b0c8:	d5cc81        	l32r	a8, 400807f8 <_init_end+0x3f8>
4008b0cb:	202280        	or	a2, a2, a8
4008b0ce:	d69fa1        	l32r	a10, 40080b4c <_init_end+0x74c>
4008b0d1:	ffe2e5        	call8	4008af00 <panicPutStr>
4008b0d4:	20a220        	or	a10, a2, a2
4008b0d7:	ffe465        	call8	4008af1c <panicPutHex>
4008b0da:	d69da1        	l32r	a10, 40080b50 <_init_end+0x750>
4008b0dd:	ffe225        	call8	4008af00 <panicPutStr>
4008b0e0:	03ad      	mov.n	a10, a3
4008b0e2:	ffe3a5        	call8	4008af1c <panicPutHex>
4008b0e5:	f01d      	retw.n
	...

4008b0e8 <doBacktrace>:
4008b0e8:	004136        	entry	a1, 32
4008b0eb:	012242        	l32i	a4, a2, 4
4008b0ee:	042232        	l32i	a3, a2, 16
4008b0f1:	d698a1        	l32r	a10, 40080b54 <_init_end+0x754>
4008b0f4:	ffe0a5        	call8	4008af00 <panicPutStr>
4008b0f7:	03bd      	mov.n	a11, a3
4008b0f9:	04ad      	mov.n	a10, a4
4008b0fb:	fffc25        	call8	4008b0bc <putEntry>
4008b0fe:	32a8      	l32i.n	a10, a2, 12
4008b100:	020c      	movi.n	a2, 0
4008b102:	0010c6        	j	4008b149 <doBacktrace+0x61>
4008b105:	d69481        	l32r	a8, 40080b58 <_init_end+0x758>
4008b108:	838a      	add.n	a8, a3, a8
4008b10a:	d69441        	l32r	a4, 40080b5c <_init_end+0x75c>
4008b10d:	093487        	bltu	a4, a8, 4008b11a <doBacktrace+0x32>
4008b110:	344030        	extui	a4, a3, 0, 4
4008b113:	948c      	beqz.n	a4, 4008b120 <doBacktrace+0x38>
4008b115:	080c      	movi.n	a8, 0
4008b117:	000206        	j	4008b123 <doBacktrace+0x3b>
4008b11a:	080c      	movi.n	a8, 0
4008b11c:	0000c6        	j	4008b123 <doBacktrace+0x3b>
4008b11f:	a08200        	addx4	a8, a2, a0
4008b122:	a81601        	l32r	a0, 4007517c <__udivmoddi4+0x10588>
4008b125:	c22202        	l32i	a0, a2, 0x308
4008b128:	a04202        	s8i	a0, a2, 160
4008b12b:	349764        	lsi	f6, a7, 208
4008b12e:	c34221        	l32r	a2, 4007be38 <__udivmoddi4+0x17244>
4008b131:	0448f4        	lsi	f15, a8, 16
4008b134:	04bd      	mov.n	a11, a4
4008b136:	fdcaa2        	addi	a10, a10, -3
4008b139:	fff825        	call8	4008b0bc <putEntry>
4008b13c:	f0c332        	addi	a3, a3, -16
4008b13f:	03a8      	l32i.n	a10, a3, 0
4008b141:	d68131        	l32r	a3, 40080b48 <_init_end+0x748>
4008b144:	09b3a7        	bgeu	a3, a10, 4008b151 <doBacktrace+0x69>
4008b147:	043d      	mov.n	a3, a4
4008b149:	921b      	addi.n	a9, a2, 1
4008b14b:	63a042        	movi	a4, 99
4008b14e:	b3b427        	bgeu	a4, a2, 4008b105 <doBacktrace+0x1d>
4008b151:	d683a1        	l32r	a10, 40080b60 <_init_end+0x760>
4008b154:	ffdaa5        	call8	4008af00 <panicPutStr>
4008b157:	f01d      	retw.n
4008b159:	000000        	ill

4008b15c <invoke_abort>:
4008b15c:	004136        	entry	a1, 32
4008b15f:	190c      	movi.n	a9, 1
4008b161:	d68081        	l32r	a8, 40080b64 <_init_end+0x764>
4008b164:	004892        	s8i	a9, a8, 0
4008b167:	0020c0        	memw
4008b16a:	f969a5        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b16d:	1a8c      	beqz.n	a10, 4008b172 <invoke_abort+0x16>
4008b16f:	004000        	break	0, 0
4008b172:	080c      	movi.n	a8, 0
4008b174:	0889      	s32i.n	a8, a8, 0
4008b176:	fffc06        	j	4008b16a <invoke_abort+0xe>
4008b179:	000000        	ill

4008b17c <haltOtherCore>:
4008b17c:	004136        	entry	a1, 32
4008b17f:	03eb80        	rsr.prid	a8
4008b182:	048d80        	extui	a8, a8, 13, 1
4008b185:	00a092        	movi	a9, 0
4008b188:	01a0a2        	movi	a10, 1
4008b18b:	93a980        	movnez	a10, a9, a8
4008b18e:	f952a5        	call8	400846b8 <esp_cpu_stall>
4008b191:	000090        	retw

4008b194 <commonErrorHandler_dump>:
4008b194:	010136        	entry	a1, 128
4008b197:	60a0c2        	movi	a12, 96
4008b19a:	d673b1        	l32r	a11, 40080b68 <_init_end+0x768>
4008b19d:	20a110        	or	a10, a1, a1
4008b1a0:	d56981        	l32r	a8, 40080744 <_init_end+0x344>
4008b1a3:	0008e0        	callx8	a8
4008b1a6:	d66f41        	l32r	a4, 40080b64 <_init_end+0x764>
4008b1a9:	000442        	l8ui	a4, a4, 0
4008b1ac:	0b6456        	bnez	a4, 4008b266 <commonErrorHandler_dump+0xd2>
4008b1af:	d66fa1        	l32r	a10, 40080b6c <_init_end+0x76c>
4008b1b2:	ffd4e5        	call8	4008af00 <panicPutStr>
4008b1b5:	20a330        	or	a10, a3, a3
4008b1b8:	ffd8e5        	call8	4008af48 <panicPutDec>
4008b1bb:	d66da1        	l32r	a10, 40080b70 <_init_end+0x770>
4008b1be:	ffd425        	call8	4008af00 <panicPutStr>
4008b1c1:	050c      	movi.n	a5, 0
4008b1c3:	000f46        	j	4008b204 <commonErrorHandler_dump+0x70>
4008b1c6:	456a      	add.n	a4, a5, a6
4008b1c8:	209110        	or	a9, a1, a1
4008b1cb:	a08490        	addx4	a8, a4, a9
4008b1ce:	0028a2        	l32i	a10, a8, 0
4008b1d1:	000a82        	l8ui	a8, a10, 0
4008b1d4:	019816        	beqz	a8, 4008b1f1 <commonErrorHandler_dump+0x5d>
4008b1d7:	ffd2a5        	call8	4008af00 <panicPutStr>
4008b1da:	d666a1        	l32r	a10, 40080b74 <_init_end+0x774>
4008b1dd:	ffd225        	call8	4008af00 <panicPutStr>
4008b1e0:	441b      	addi.n	a4, a4, 1
4008b1e2:	a04420        	addx4	a4, a4, a2
4008b1e5:	0024a2        	l32i	a10, a4, 0
4008b1e8:	ffd325        	call8	4008af1c <panicPutHex>
4008b1eb:	d663a1        	l32r	a10, 40080b78 <_init_end+0x778>
4008b1ee:	ffd125        	call8	4008af00 <panicPutStr>
4008b1f1:	661b      	addi.n	a6, a6, 1
4008b1f3:	000086        	j	4008b1f9 <commonErrorHandler_dump+0x65>
4008b1f6:	00a062        	movi	a6, 0
4008b1f9:	c946a6        	blti	a6, 4, 4008b1c6 <commonErrorHandler_dump+0x32>
4008b1fc:	d64fa1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b1ff:	ffd025        	call8	4008af00 <panicPutStr>
4008b202:	554b      	addi.n	a5, a5, 4
4008b204:	741c      	movi.n	a4, 23
4008b206:	eca457        	bge	a4, a5, 4008b1f6 <commonErrorHandler_dump+0x62>
4008b209:	f8b5e5        	call8	40083d68 <xPortInterruptedFromISRContext>
4008b20c:	056a16        	beqz	a10, 4008b266 <commonErrorHandler_dump+0xd2>
4008b20f:	d65b41        	l32r	a4, 40080b7c <_init_end+0x77c>
4008b212:	0448      	l32i.n	a4, a4, 0
4008b214:	4e1247        	beq	a2, a4, 4008b266 <commonErrorHandler_dump+0xd2>
4008b217:	d655a1        	l32r	a10, 40080b6c <_init_end+0x76c>
4008b21a:	ffce65        	call8	4008af00 <panicPutStr>
4008b21d:	03ad      	mov.n	a10, a3
4008b21f:	ffd2a5        	call8	4008af48 <panicPutDec>
4008b222:	d657a1        	l32r	a10, 40080b80 <_init_end+0x780>
4008b225:	ffcda5        	call8	4008af00 <panicPutStr>
4008b228:	03b130        	rsr.epc1	a3
4008b22b:	d656a1        	l32r	a10, 40080b84 <_init_end+0x784>
4008b22e:	ffcd25        	call8	4008af00 <panicPutStr>
4008b231:	03ad      	mov.n	a10, a3
4008b233:	ffcea5        	call8	4008af1c <panicPutHex>
4008b236:	03b230        	rsr.epc2	a3
4008b239:	d653a1        	l32r	a10, 40080b88 <_init_end+0x788>
4008b23c:	ffcc25        	call8	4008af00 <panicPutStr>
4008b23f:	03ad      	mov.n	a10, a3
4008b241:	ffcda5        	call8	4008af1c <panicPutHex>
4008b244:	03b330        	rsr.epc3	a3
4008b247:	d651a1        	l32r	a10, 40080b8c <_init_end+0x78c>
4008b24a:	ffcb65        	call8	4008af00 <panicPutStr>
4008b24d:	03ad      	mov.n	a10, a3
4008b24f:	ffcce5        	call8	4008af1c <panicPutHex>
4008b252:	03b430        	rsr.epc4	a3
4008b255:	d64ea1        	l32r	a10, 40080b90 <_init_end+0x790>
4008b258:	ffca65        	call8	4008af00 <panicPutStr>
4008b25b:	03ad      	mov.n	a10, a3
4008b25d:	ffcbe5        	call8	4008af1c <panicPutHex>
4008b260:	d636a1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b263:	ffc9e5        	call8	4008af00 <panicPutStr>
4008b266:	20a220        	or	a10, a2, a2
4008b269:	ffe7e5        	call8	4008b0e8 <doBacktrace>
4008b26c:	f01d      	retw.n
	...

4008b270 <esp_panic_dig_reset>:
4008b270:	004136        	entry	a1, 32
4008b273:	d4bf81        	l32r	a8, 40080570 <_init_end+0x170>
4008b276:	0020c0        	memw
4008b279:	002892        	l32i	a9, a8, 0
4008b27c:	d4be81        	l32r	a8, 40080574 <_init_end+0x174>
4008b27f:	f08987        	bany	a9, a8, 4008b273 <esp_panic_dig_reset+0x3>
4008b282:	01a3e5        	call8	4008ccc0 <rtc_clk_cpu_freq_set_xtal>
4008b285:	00a0a2        	movi	a10, 0
4008b288:	f94f25        	call8	4008477c <esp_cpu_unstall>
4008b28b:	d53291        	l32r	a9, 40080754 <_init_end+0x354>
4008b28e:	0020c0        	memw
4008b291:	0029a2        	l32i	a10, a9, 0
4008b294:	d4fa81        	l32r	a8, 4008067c <_init_end+0x27c>
4008b297:	208a80        	or	a8, a10, a8
4008b29a:	0020c0        	memw
4008b29d:	0989      	s32i.n	a8, a9, 0
4008b29f:	ffff06        	j	4008b29f <esp_panic_dig_reset+0x2f>
	...

4008b2a4 <commonErrorHandler>:
4008b2a4:	004136        	entry	a1, 32
4008b2a7:	03eb30        	rsr.prid	a3
4008b2aa:	043d30        	extui	a3, a3, 13, 1
4008b2ad:	00b625        	call8	4008be10 <rtc_wdt_is_on>
4008b2b0:	028a56        	bnez	a10, 4008b2dc <commonErrorHandler+0x38>
4008b2b3:	008d25        	call8	4008bb84 <rtc_wdt_protect_off>
4008b2b6:	00a7a5        	call8	4008bd30 <rtc_wdt_disable>
4008b2b9:	7b0c      	movi.n	a11, 7
4008b2bb:	0a0c      	movi.n	a10, 0
4008b2bd:	00ae65        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
4008b2c0:	7b0c      	movi.n	a11, 7
4008b2c2:	1a0c      	movi.n	a10, 1
4008b2c4:	00ade5        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
4008b2c7:	3b0c      	movi.n	a11, 3
4008b2c9:	0a0c      	movi.n	a10, 0
4008b2cb:	009b25        	call8	4008bc7c <rtc_wdt_set_stage>
4008b2ce:	d631b1        	l32r	a11, 40080b94 <_init_end+0x794>
4008b2d1:	0a0c      	movi.n	a10, 0
4008b2d3:	0094a5        	call8	4008bc1c <rtc_wdt_set_time>
4008b2d6:	008ce5        	call8	4008bba4 <rtc_wdt_enable>
4008b2d9:	008ba5        	call8	4008bb94 <rtc_wdt_protect_on>
4008b2dc:	ffcfe5        	call8	4008afdc <reconfigureAllWdts>
4008b2df:	20b330        	or	a11, a3, a3
4008b2e2:	20a220        	or	a10, a2, a2
4008b2e5:	ffeae5        	call8	4008b194 <commonErrorHandler_dump>
4008b2e8:	d62581        	l32r	a8, 40080b7c <_init_end+0x77c>
4008b2eb:	08a8      	l32i.n	a10, a8, 0
4008b2ed:	8a8c      	beqz.n	a10, 4008b2f9 <commonErrorHandler+0x55>
4008b2ef:	080c      	movi.n	a8, 0
4008b2f1:	1b0c      	movi.n	a11, 1
4008b2f3:	93b830        	movnez	a11, a8, a3
4008b2f6:	ffe9e5        	call8	4008b194 <commonErrorHandler_dump>
4008b2f9:	00a365        	call8	4008bd30 <rtc_wdt_disable>
4008b2fc:	d627a1        	l32r	a10, 40080b98 <_init_end+0x798>
4008b2ff:	201110        	or	a1, a1, a1
4008b302:	ffbfe5        	call8	4008af00 <panicPutStr>
4008b305:	142222        	l32i	a2, a2, 80
4008b308:	057226        	beqi	a2, 7, 4008b311 <commonErrorHandler+0x6d>
4008b30b:	201110        	or	a1, a1, a1
4008b30e:	f676e5        	call8	40081a7c <esp_restart_noos>
4008b311:	fff5e5        	call8	4008b270 <esp_panic_dig_reset>

4008b314 <esp_error_check_failed_print>:
4008b314:	004136        	entry	a1, 32
4008b317:	03cd      	mov.n	a12, a3
4008b319:	02bd      	mov.n	a11, a2
4008b31b:	d620a1        	l32r	a10, 40080b9c <_init_end+0x79c>
4008b31e:	d45e81        	l32r	a8, 40080498 <_init_end+0x98>
4008b321:	0008e0        	callx8	a8
4008b324:	03ad      	mov.n	a10, a3
4008b326:	4af4a5        	call8	400d6270 <esp_err_to_name>
4008b329:	0abd      	mov.n	a11, a10
4008b32b:	d61da1        	l32r	a10, 40080ba0 <_init_end+0x7a0>
4008b32e:	d45a81        	l32r	a8, 40080498 <_init_end+0x98>
4008b331:	0008e0        	callx8	a8
4008b334:	d61c31        	l32r	a3, 40080ba4 <_init_end+0x7a4>
4008b337:	153e30        	extui	a3, a3, 30, 2
4008b33a:	013320        	slli	a3, a3, 30
4008b33d:	11b0e0        	slli	a11, a0, 2
4008b340:	41b2b0        	srli	a11, a11, 2
4008b343:	20bb30        	or	a11, a11, a3
4008b346:	fdcbb2        	addi	a11, a11, -3
4008b349:	d617a1        	l32r	a10, 40080ba8 <_init_end+0x7a8>
4008b34c:	d45381        	l32r	a8, 40080498 <_init_end+0x98>
4008b34f:	0008e0        	callx8	a8
4008b352:	fb0ae5        	call8	40086400 <spi_flash_cache_enabled>
4008b355:	fa8c      	beqz.n	a10, 4008b368 <esp_error_check_failed_print+0x54>
4008b357:	07ed      	mov.n	a14, a7
4008b359:	06dd      	mov.n	a13, a6
4008b35b:	05cd      	mov.n	a12, a5
4008b35d:	04bd      	mov.n	a11, a4
4008b35f:	d613a1        	l32r	a10, 40080bac <_init_end+0x7ac>
4008b362:	d44d81        	l32r	a8, 40080498 <_init_end+0x98>
4008b365:	0008e0        	callx8	a8
4008b368:	f01d      	retw.n
	...

4008b36c <abort>:
4008b36c:	004136        	entry	a1, 32
4008b36f:	d61081        	l32r	a8, 40080bb0 <_init_end+0x7b0>
4008b372:	158e80        	extui	a8, a8, 30, 2
4008b375:	018820        	slli	a8, a8, 30
4008b378:	11b0e0        	slli	a11, a0, 2
4008b37b:	41b2b0        	srli	a11, a11, 2
4008b37e:	20bb80        	or	a11, a11, a8
4008b381:	03ebc0        	rsr.prid	a12
4008b384:	04cdc0        	extui	a12, a12, 13, 1
4008b387:	fdcbb2        	addi	a11, a11, -3
4008b38a:	d60aa1        	l32r	a10, 40080bb4 <_init_end+0x7b4>
4008b38d:	d44281        	l32r	a8, 40080498 <_init_end+0x98>
4008b390:	0008e0        	callx8	a8
4008b393:	f71c65        	call8	40082558 <esp_reset_reason_get_hint>
4008b396:	007a56        	bnez	a10, 4008b3a1 <abort+0x35>
4008b399:	4a0c      	movi.n	a10, 4
4008b39b:	201110        	or	a1, a1, a1
4008b39e:	f718a5        	call8	40082528 <esp_reset_reason_set_hint>
4008b3a1:	ffdba5        	call8	4008b15c <invoke_abort>

4008b3a4 <vApplicationStackOverflowHook>:
4008b3a4:	004136        	entry	a1, 32
4008b3a7:	d604a1        	l32r	a10, 40080bb8 <_init_end+0x7b8>
4008b3aa:	ffb565        	call8	4008af00 <panicPutStr>
4008b3ad:	03ad      	mov.n	a10, a3
4008b3af:	ffb525        	call8	4008af00 <panicPutStr>
4008b3b2:	d602a1        	l32r	a10, 40080bbc <_init_end+0x7bc>
4008b3b5:	ffb4a5        	call8	4008af00 <panicPutStr>
4008b3b8:	fffb25        	call8	4008b36c <abort>
	...

4008b3bc <panicHandler>:
4008b3bc:	008136        	entry	a1, 64
4008b3bf:	03eb40        	rsr.prid	a4
4008b3c2:	044d40        	extui	a4, a4, 13, 1
4008b3c5:	20a0c2        	movi	a12, 32
4008b3c8:	d5ffb1        	l32r	a11, 40080bc4 <_init_end+0x7c4>
4008b3cb:	20a110        	or	a10, a1, a1
4008b3ce:	d4dd81        	l32r	a8, 40080744 <_init_end+0x344>
4008b3d1:	0008e0        	callx8	a8
4008b3d4:	142232        	l32i	a3, a2, 80
4008b3d7:	0983e6        	bgei	a3, 8, 4008b3e4 <panicHandler+0x28>
4008b3da:	016d      	mov.n	a6, a1
4008b3dc:	a05360        	addx4	a5, a3, a6
4008b3df:	0558      	l32i.n	a5, a5, 0
4008b3e1:	000086        	j	4008b3e7 <panicHandler+0x2b>
4008b3e4:	d5f751        	l32r	a5, 40080bc0 <_init_end+0x7c0>
4008b3e7:	025366        	bnei	a3, 5, 4008b3ed <panicHandler+0x31>
4008b3ea:	041426        	beqi	a4, 1, 4008b3f2 <panicHandler+0x36>
4008b3ed:	0b6366        	bnei	a3, 6, 4008b3fc <panicHandler+0x40>
4008b3f0:	84cc      	bnez.n	a4, 4008b3fc <panicHandler+0x40>
4008b3f2:	d5e231        	l32r	a3, 40080b7c <_init_end+0x77c>
4008b3f5:	0329      	s32i.n	a2, a3, 0
4008b3f7:	ffff06        	j	4008b3f7 <panicHandler+0x3b>
4008b3fa:	320000        	orbc	b0, b0, b0
4008b3fd:	f6fbc3        	lsi	f12, a11, 0x3d8
4008b400:	0c0723        	lsi	f2, a7, 48
4008b403:	811a      	add.n	a8, a1, a1
4008b405:	d428      	l32i.n	a2, a4, 52
4008b407:	0008e0        	callx8	a8
4008b40a:	142232        	l32i	a3, a2, 80
4008b40d:	0b7366        	bnei	a3, 7, 4008b41c <panicHandler+0x60>
4008b410:	f6a365        	call8	40081e48 <esp_cache_err_get_cpuid>
4008b413:	051a47        	beq	a10, a4, 4008b41c <panicHandler+0x60>
4008b416:	ffff06        	j	4008b416 <panicHandler+0x5a>
4008b419:	000000        	ill
4008b41c:	142232        	l32i	a3, a2, 80
4008b41f:	fbc332        	addi	a3, a3, -5
4008b422:	0723f6        	bgeui	a3, 2, 4008b42d <panicHandler+0x71>
4008b425:	5a0c      	movi.n	a10, 5
4008b427:	201110        	or	a1, a1, a1
4008b42a:	f70fe5        	call8	40082528 <esp_reset_reason_set_hint>
4008b42d:	ffd4e5        	call8	4008b17c <haltOtherCore>
4008b430:	f64de5        	call8	40081910 <esp_dport_access_int_abort>
4008b433:	d5e5a1        	l32r	a10, 40080bc8 <_init_end+0x7c8>
4008b436:	ffaca5        	call8	4008af00 <panicPutStr>
4008b439:	20a440        	or	a10, a4, a4
4008b43c:	ffb0a5        	call8	4008af48 <panicPutDec>
4008b43f:	d5e3a1        	l32r	a10, 40080bcc <_init_end+0x7cc>
4008b442:	ffabe5        	call8	4008af00 <panicPutStr>
4008b445:	20a550        	or	a10, a5, a5
4008b448:	ffab65        	call8	4008af00 <panicPutStr>
4008b44b:	d5e1a1        	l32r	a10, 40080bd0 <_init_end+0x7d0>
4008b44e:	ffab25        	call8	4008af00 <panicPutStr>
4008b451:	142232        	l32i	a3, a2, 80
4008b454:	021326        	beqi	a3, 1, 4008b45a <panicHandler+0x9e>
4008b457:	001946        	j	4008b4c0 <panicHandler+0x104>
4008b45a:	03e930        	rsr.debugcause	a3
4008b45d:	d5dda1        	l32r	a10, 40080bd4 <_init_end+0x7d4>
4008b460:	ffa9e5        	call8	4008af00 <panicPutStr>
4008b463:	056307        	bbci	a3, 0, 4008b46c <panicHandler+0xb0>
4008b466:	d5dca1        	l32r	a10, 40080bd8 <_init_end+0x7d8>
4008b469:	ffa965        	call8	4008af00 <panicPutStr>
4008b46c:	056317        	bbci	a3, 1, 4008b475 <panicHandler+0xb9>
4008b46f:	d5dba1        	l32r	a10, 40080bdc <_init_end+0x7dc>
4008b472:	ffa8e5        	call8	4008af00 <panicPutStr>
4008b475:	266327        	bbci	a3, 2, 4008b49f <panicHandler+0xe3>
4008b478:	1d6387        	bbci	a3, 8, 4008b499 <panicHandler+0xdd>
4008b47b:	04ad      	mov.n	a10, a4
4008b47d:	fd5c25        	call8	40088a40 <xTaskGetCurrentTaskHandleForCPU>
4008b480:	fd5625        	call8	400889e4 <pcTaskGetTaskName>
4008b483:	0a4d      	mov.n	a4, a10
4008b485:	d5d6a1        	l32r	a10, 40080be0 <_init_end+0x7e0>
4008b488:	ffa765        	call8	4008af00 <panicPutStr>
4008b48b:	04ad      	mov.n	a10, a4
4008b48d:	ffa725        	call8	4008af00 <panicPutStr>
4008b490:	d5d5a1        	l32r	a10, 40080be4 <_init_end+0x7e4>
4008b493:	ffa6e5        	call8	4008af00 <panicPutStr>
4008b496:	000146        	j	4008b49f <panicHandler+0xe3>
4008b499:	d5d3a1        	l32r	a10, 40080be8 <_init_end+0x7e8>
4008b49c:	ffa625        	call8	4008af00 <panicPutStr>
4008b49f:	056337        	bbci	a3, 3, 4008b4a8 <panicHandler+0xec>
4008b4a2:	d5d2a1        	l32r	a10, 40080bec <_init_end+0x7ec>
4008b4a5:	ffa5a5        	call8	4008af00 <panicPutStr>
4008b4a8:	056347        	bbci	a3, 4, 4008b4b1 <panicHandler+0xf5>
4008b4ab:	d5d1a1        	l32r	a10, 40080bf0 <_init_end+0x7f0>
4008b4ae:	ffa525        	call8	4008af00 <panicPutStr>
4008b4b1:	056357        	bbci	a3, 5, 4008b4ba <panicHandler+0xfe>
4008b4b4:	d5d0a1        	l32r	a10, 40080bf4 <_init_end+0x7f4>
4008b4b7:	ffa4a5        	call8	4008af00 <panicPutStr>
4008b4ba:	d59fa1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b4bd:	ffa425        	call8	4008af00 <panicPutStr>
4008b4c0:	f93425        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b4c3:	093a16        	beqz	a10, 4008b55a <panicHandler+0x19e>
4008b4c6:	d42941        	l32r	a4, 4008056c <_init_end+0x16c>
4008b4c9:	d40b81        	l32r	a8, 400804f8 <_init_end+0xf8>
4008b4cc:	0020c0        	memw
4008b4cf:	196482        	s32i	a8, a4, 100
4008b4d2:	f03d      	nop.n
4008b4d4:	f03d      	nop.n
4008b4d6:	f03d      	nop.n
4008b4d8:	f03d      	nop.n
4008b4da:	0020c0        	memw
4008b4dd:	122492        	l32i	a9, a4, 72
4008b4e0:	d41031        	l32r	a3, 40080520 <_init_end+0x120>
4008b4e3:	105930        	and	a5, a9, a3
4008b4e6:	0020c0        	memw
4008b4e9:	126452        	s32i	a5, a4, 72
4008b4ec:	00a052        	movi	a5, 0
4008b4ef:	0020c0        	memw
4008b4f2:	196452        	s32i	a5, a4, 100
4008b4f5:	f03d      	nop.n
4008b4f7:	f03d      	nop.n
4008b4f9:	f03d      	nop.n
4008b4fb:	f03d      	nop.n
4008b4fd:	d3fd41        	l32r	a4, 400804f4 <_init_end+0xf4>
4008b500:	0020c0        	memw
4008b503:	196482        	s32i	a8, a4, 100
4008b506:	f03d      	nop.n
4008b508:	f03d      	nop.n
4008b50a:	f03d      	nop.n
4008b50c:	f03d      	nop.n
4008b50e:	0020c0        	memw
4008b511:	122482        	l32i	a8, a4, 72
4008b514:	103830        	and	a3, a8, a3
4008b517:	0020c0        	memw
4008b51a:	126432        	s32i	a3, a4, 72
4008b51d:	0020c0        	memw
4008b520:	196452        	s32i	a5, a4, 100
4008b523:	f03d      	nop.n
4008b525:	f03d      	nop.n
4008b527:	f03d      	nop.n
4008b529:	f03d      	nop.n
4008b52b:	142232        	l32i	a3, a2, 80
4008b52e:	fbc332        	addi	a3, a3, -5
4008b531:	1323f6        	bgeui	a3, 2, 4008b548 <panicHandler+0x18c>
4008b534:	0020c0        	memw
4008b537:	292452        	l32i	a5, a4, 164
4008b53a:	04a032        	movi	a3, 4
4008b53d:	203530        	or	a3, a5, a3
4008b540:	035d      	mov.n	a5, a3
4008b542:	0020c0        	memw
4008b545:	296432        	s32i	a3, a4, 164
4008b548:	f03d      	nop.n
4008b54a:	f03d      	nop.n
4008b54c:	f03d      	nop.n
4008b54e:	f03d      	nop.n
4008b550:	12a8      	l32i.n	a10, a2, 4
4008b552:	0010a5        	call8	4008b65c <setFirstBreakpoint>
4008b555:	f01d      	retw.n
4008b557:	000000        	ill
4008b55a:	02ad      	mov.n	a10, a2
4008b55c:	ffd465        	call8	4008b2a4 <commonErrorHandler>
	...

4008b560 <xt_unhandled_exception>:
4008b560:	004136        	entry	a1, 32
4008b563:	ffc1a5        	call8	4008b17c <haltOtherCore>
4008b566:	f63aa5        	call8	40081910 <esp_dport_access_int_abort>
4008b569:	d57e31        	l32r	a3, 40080b64 <_init_end+0x764>
4008b56c:	000332        	l8ui	a3, a3, 0
4008b56f:	06f356        	bnez	a3, 4008b5e2 <xt_unhandled_exception+0x82>
4008b572:	d595a1        	l32r	a10, 40080bc8 <_init_end+0x7c8>
4008b575:	ff98a5        	call8	4008af00 <panicPutStr>
4008b578:	03eba0        	rsr.prid	a10
4008b57b:	04ada0        	extui	a10, a10, 13, 1
4008b57e:	ff9ca5        	call8	4008af48 <panicPutDec>
4008b581:	d592a1        	l32r	a10, 40080bcc <_init_end+0x7cc>
4008b584:	ff97a5        	call8	4008af00 <panicPutStr>
4008b587:	142232        	l32i	a3, a2, 80
4008b58a:	27a082        	movi	a8, 39
4008b58d:	0f3837        	bltu	a8, a3, 4008b5a0 <xt_unhandled_exception+0x40>
4008b590:	d59a81        	l32r	a8, 40080bf8 <_init_end+0x7f8>
4008b593:	a08380        	addx4	a8, a3, a8
4008b596:	0028a2        	l32i	a10, a8, 0
4008b599:	ff9665        	call8	4008af00 <panicPutStr>
4008b59c:	000186        	j	4008b5a6 <xt_unhandled_exception+0x46>
4008b59f:	97a100        	lsi	f0, a1, 0x25c
4008b5a2:	95e5d5        	call4	40021400 <btdm_r_ip_func_p_get+0x7910>
4008b5a5:	ff          	.byte 0xff
4008b5a6:	d596a1        	l32r	a10, 40080c00 <_init_end+0x800>
4008b5a9:	ff9565        	call8	4008af00 <panicPutStr>
4008b5ac:	f92565        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b5af:	01aa16        	beqz	a10, 4008b5cd <xt_unhandled_exception+0x6d>
4008b5b2:	d594a1        	l32r	a10, 40080c04 <_init_end+0x804>
4008b5b5:	ff94a5        	call8	4008af00 <panicPutStr>
4008b5b8:	0122a2        	l32i	a10, a2, 4
4008b5bb:	ff9625        	call8	4008af1c <panicPutHex>
4008b5be:	d592a1        	l32r	a10, 40080c08 <_init_end+0x808>
4008b5c1:	ff93e5        	call8	4008af00 <panicPutStr>
4008b5c4:	12a8      	l32i.n	a10, a2, 4
4008b5c6:	000965        	call8	4008b65c <setFirstBreakpoint>
4008b5c9:	f01d      	retw.n
4008b5cb:	a10000        	sll	a0, a0
4008b5ce:	8f          	.byte 0x8f
4008b5cf:	92e5d5        	call4	4001e42c <btdm_r_ip_func_p_get+0x493c>
4008b5d2:	ff          	.byte 0xff
4008b5d3:	005356        	bnez	a3, 4008b5dc <xt_unhandled_exception+0x7c>
4008b5d6:	20a220        	or	a10, a2, a2
4008b5d9:	ff9aa5        	call8	4008af84 <illegal_instruction_helper>
4008b5dc:	04a0a2        	movi	a10, 4
4008b5df:	f6f4a5        	call8	40082528 <esp_reset_reason_set_hint>
4008b5e2:	20a220        	or	a10, a2, a2
4008b5e5:	ffcbe5        	call8	4008b2a4 <commonErrorHandler>

4008b5e8 <esp_set_watchpoint>:
4008b5e8:	004136        	entry	a1, 32
4008b5eb:	4122f6        	bgeui	a2, 2, 4008b630 <esp_set_watchpoint+0x48>
4008b5ee:	d55681        	l32r	a8, 40080b48 <_init_end+0x748>
4008b5f1:	408587        	bany	a5, a8, 4008b635 <esp_set_watchpoint+0x4d>
4008b5f4:	fa3c      	movi.n	a10, 63
4008b5f6:	080c      	movi.n	a8, 0
4008b5f8:	000446        	j	4008b60d <esp_set_watchpoint+0x25>
4008b5fb:	0c0000        	lsi	f0, a0, 48
4008b5fe:	0019      	s32i.n	a1, a0, 0
4008b600:	4018      	l32i.n	a1, a0, 16
4008b602:	a19900        	sll	a9, a9
4008b605:	071947        	beq	a9, a4, 4008b610 <esp_set_watchpoint+0x28>
4008b608:	11aaf0        	slli	a10, a10, 1
4008b60b:	881b      	addi.n	a8, a8, 1
4008b60d:	ec78a6        	blti	a8, 7, 4008b5fd <esp_set_watchpoint+0x15>
4008b610:	287826        	beqi	a8, 7, 4008b63c <esp_set_watchpoint+0x54>
4008b613:	54a0a0        	extui	a10, a10, 0, 6
4008b616:	2055a0        	or	a5, a5, a10
4008b619:	72cc      	bnez.n	a2, 4008b624 <esp_set_watchpoint+0x3c>
4008b61b:	139030        	wsr.dbreaka0	a3
4008b61e:	13a050        	wsr.dbreakc0	a5
4008b621:	f01d      	retw.n
4008b623:	913000        	srl	a3, a0
4008b626:	a15013        	lsi	f1, a0, 0x284
4008b629:	020c13        	lsi	f1, a12, 8
4008b62c:	f01d      	retw.n
4008b62e:	220000        	orb	b0, b0, b0
4008b631:	1d02a1        	l32r	a10, 40052a3c <lm_cmd_cmp_send+0x1204>
4008b634:	a122f0        	lsi	f15, a2, 0x284
4008b637:	f01d02        	l16ui	a0, a13, 0x1e0
4008b63a:	220000        	orb	b0, b0, b0
4008b63d:	1d02a1        	l32r	a10, 40052a48 <lm_cmd_cmp_send+0x1210>
4008b640:	0000f0        	callx12	a0
	...

4008b644 <_esp_error_check_failed>:
4008b644:	004136        	entry	a1, 32
4008b647:	06fd      	mov.n	a15, a6
4008b649:	05ed      	mov.n	a14, a5
4008b64b:	04dd      	mov.n	a13, a4
4008b64d:	03cd      	mov.n	a12, a3
4008b64f:	02bd      	mov.n	a11, a2
4008b651:	d56fa1        	l32r	a10, 40080c10 <_init_end+0x810>
4008b654:	ffcbe5        	call8	4008b314 <esp_error_check_failed_print>
4008b657:	ffb065        	call8	4008b15c <invoke_abort>
	...

4008b65c <setFirstBreakpoint>:
4008b65c:	004136        	entry	a1, 32
4008b65f:	138020        	wsr.ibreaka0	a2
4008b662:	036030        	rsr.ibreakenable	a3
4008b665:	140c      	movi.n	a4, 1
4008b667:	204430        	or	a4, a4, a3
4008b66a:	136040        	wsr.ibreakenable	a4
4008b66d:	f01d      	retw.n
	...

4008b670 <eri_write>:
4008b670:	004136        	entry	a1, 32
4008b673:	407230        	wer	a3, a2
4008b676:	f01d      	retw.n
4008b678:	103c      	movi.n	a0, 49
4008b67a:	ff3ff5        	call12	4008aa78 <multi_heap_realloc_impl+0xac>
4008b67d:	ff          	.byte 0xff
4008b67e:	1f          	.byte 0x1f
4008b67f:	07ff80        	lsi	f8, a15, 28
4008b682:	e0          	.byte 0xe0
4008b683:	ff          	.byte 0xff

4008b684 <BT_tx_if_init>:
4008b684:	004136        	entry	a1, 32
4008b687:	fffc31        	l32r	a3, 4008b678 <eri_write+0x8>
4008b68a:	fffc81        	l32r	a8, 4008b67c <eri_write+0xc>
4008b68d:	0020c0        	memw
4008b690:	002392        	l32i	a9, a3, 0
4008b693:	942020        	extui	a2, a2, 0, 10
4008b696:	108980        	and	a8, a9, a8
4008b699:	0122b0        	slli	a2, a2, 21
4008b69c:	202280        	or	a2, a2, a8
4008b69f:	0020c0        	memw
4008b6a2:	006322        	s32i	a2, a3, 0
4008b6a5:	f735a5        	call8	40082a00 <phy_get_fetx_delay>
4008b6a8:	e8a382        	movi	a8, 0x3e8
4008b6ab:	0020c0        	memw
4008b6ae:	002322        	l32i	a2, a3, 0
4008b6b1:	c0a8a0        	sub	a10, a8, a10
4008b6b4:	fff381        	l32r	a8, 4008b680 <eri_write+0x10>
4008b6b7:	94a0a0        	extui	a10, a10, 0, 10
4008b6ba:	108280        	and	a8, a2, a8
4008b6bd:	11aa50        	slli	a10, a10, 11
4008b6c0:	20aa80        	or	a10, a10, a8
4008b6c3:	0020c0        	memw
4008b6c6:	03a9      	s32i.n	a10, a3, 0
4008b6c8:	0020c0        	memw
4008b6cb:	0388      	l32i.n	a8, a3, 0
4008b6cd:	944040        	extui	a4, a4, 0, 10
4008b6d0:	01a892        	movi	a9, 0xfffff801
4008b6d3:	1144f0        	slli	a4, a4, 1
4008b6d6:	108890        	and	a8, a8, a9
4008b6d9:	208480        	or	a8, a4, a8
4008b6dc:	0020c0        	memw
4008b6df:	0389      	s32i.n	a8, a3, 0
4008b6e1:	0020c0        	memw
4008b6e4:	0348      	l32i.n	a4, a3, 0
4008b6e6:	d3e521        	l32r	a2, 4008067c <_init_end+0x27c>
4008b6e9:	202420        	or	a2, a4, a2
4008b6ec:	0020c0        	memw
4008b6ef:	0329      	s32i.n	a2, a3, 0
4008b6f1:	d58c      	beqz.n	a5, 4008b702 <BT_tx_if_init+0x7e>
4008b6f3:	0020c0        	memw
4008b6f6:	0348      	l32i.n	a4, a3, 0
4008b6f8:	120c      	movi.n	a2, 1
4008b6fa:	202420        	or	a2, a4, a2
4008b6fd:	0020c0        	memw
4008b700:	0329      	s32i.n	a2, a3, 0
4008b702:	f01d      	retw.n
4008b704:	1028      	l32i.n	a2, a0, 4
4008b706:	5c3ff5        	call12	400e7b04 <_svfiprintf_r+0x14e8>
4008b709:	3ff510        	f64cmph	a15, a5, a1, 3
4008b70c:	ff          	.byte 0xff
4008b70d:	ff          	.byte 0xff
4008b70e:	1f          	.byte 0x1f
4008b70f:	00fc      	bnez.n	a0, 4008b743 <BT_tx_if_init+0xbf>
4008b711:	034000        	lsi	f0, a0, 12
4008b714:	ff          	.byte 0xff
4008b715:	ffff07        	bbsi	a15, 16, 4008b718 <BT_tx_if_init+0x94>
4008b718:	009800        	all4	b0, b8:b9:b10:b11
4008b71b:	105800        	and	a5, a8, a0
4008b71e:	ff3ff5        	call12	4008ab1c <multi_heap_realloc_impl+0x150>
4008b721:	ffff03        	lsi	f0, a15, 0x3fc
4008b724:	f51020        	extui	a1, a2, 16, 16
4008b727:	3f          	.byte 0x3f
4008b728:	c07c      	movi.n	a0, -4
4008b72a:	003ff5        	call12	4008bb28 <unforce_wifi_mode+0x38>
4008b72d:	00a100        	any8	b0, b0:b1:b2:b3:b4:b5:b6:b7
4008b730:	f5c090        	extui	a12, a9, 16, 16
4008b733:	3f          	.byte 0x3f
4008b734:	ff          	.byte 0xff
4008b735:	ff          	.byte 0xff
4008b736:	ff          	.byte 0xff
4008b737:	0000c1        	l32r	a12, 4004b738 <lld_pdu_pack+0xc24>
4008b73a:	ff3200        	f64cmph	a3, a2, a0, 15
4008b73d:	ff          	.byte 0xff
4008b73e:	0f          	.byte 0xf
4008b73f:	fe          	.byte 0xfe
4008b740:	700000        	lsi	f0, a0, 0x1c0
4008b743:	c08000        	sub	a8, a0, a0
4008b746:	ff3ff5        	call12	4008ab44 <multi_heap_realloc_impl+0x178>
4008b749:	fffe00        	f64cmph	a15, a14, a0, 15
4008b74c:	01d400        	slli	a13, a4, 32
4008b74f:	c0d000        	sub	a13, a0, a0
4008b752:	ff3ff5        	call12	4008ab50 <multi_heap_realloc_impl+0x184>
4008b755:	ff          	.byte 0xff
4008b756:	00ff81        	l32r	a8, 4004bb54 <lld_pdu_pack+0x1040>
4008b759:	001800        	movsp	a0, a8
4008b75c:	104c      	movi.n	a0, 65
4008b75e:	ff3ff5        	call12	4008ab5c <multi_heap_realloc_impl+0x190>
4008b761:	ffff83        	lsi	f8, a15, 0x3fc
4008b764:	007800        	waiti	8
4008b767:	ffff00        	f64cmph	a15, a15, a0, 15
4008b76a:	ff          	.byte 0xff
4008b76b:	fffff0        	f64cmph	a15, a15, a15, 15
4008b76e:	ff          	.byte 0xff
4008b76f:	cf          	.byte 0xcf
4008b770:	ff          	.byte 0xff
4008b771:	ff          	.byte 0xff
4008b772:	ff          	.byte 0xff
4008b773:	1f          	.byte 0x1f
4008b774:	f5c084        	lsi	f8, a0, 0x3d4
4008b777:	3f          	.byte 0x3f
4008b778:	ff          	.byte 0xff
4008b779:	7f          	.byte 0x7f
4008b77a:	00ffe0        	lsi	f14, a15, 0
4008b77d:	001880        	movsp	a8, a8
4008b780:	ff          	.byte 0xff
4008b781:	ffff81        	l32r	a8, 4008b780 <BT_tx_if_init+0xfc>
4008b784:	001e00        	movsp	a0, a14
4008b787:	ffff00        	f64cmph	a15, a15, a0, 15
4008b78a:	3f          	.byte 0x3f
4008b78b:	fff8      	l32i.n	a15, a15, 60
4008b78d:	ff          	.byte 0xff
4008b78e:	24fff0        	extui	a15, a15, 15, 3
4008b791:	600321        	l32r	a2, 400637a0 <__ltdf2+0x10>
4008b794:	f51084        	lsi	f8, a0, 0x3d4
4008b797:	3f          	.byte 0x3f
4008b798:	fb0000        	f64addc	a0, a0, 0, 0
	...

4008b79c <BT_init_rx_filters>:
4008b79c:	004136        	entry	a1, 32
4008b79f:	ffd991        	l32r	a9, 4008b704 <BT_tx_if_init+0x80>
4008b7a2:	ffd981        	l32r	a8, 4008b708 <BT_tx_if_init+0x84>
4008b7a5:	7a1c      	movi.n	a10, 23
4008b7a7:	0020c0        	memw
4008b7aa:	09a9      	s32i.n	a10, a9, 0
4008b7ac:	0020c0        	memw
4008b7af:	08a8      	l32i.n	a10, a8, 0
4008b7b1:	ffd691        	l32r	a9, 4008b70c <BT_tx_if_init+0x88>
4008b7b4:	ffdab1        	l32r	a11, 4008b71c <BT_tx_if_init+0x98>
4008b7b7:	10aa90        	and	a10, a10, a9
4008b7ba:	ffd591        	l32r	a9, 4008b710 <BT_tx_if_init+0x8c>
4008b7bd:	602020        	neg	a2, a2
4008b7c0:	209a90        	or	a9, a10, a9
4008b7c3:	0020c0        	memw
4008b7c6:	0899      	s32i.n	a9, a8, 0
4008b7c8:	0020c0        	memw
4008b7cb:	08a8      	l32i.n	a10, a8, 0
4008b7cd:	ffd191        	l32r	a9, 4008b714 <BT_tx_if_init+0x90>
4008b7d0:	542020        	extui	a2, a2, 0, 6
4008b7d3:	10aa90        	and	a10, a10, a9
4008b7d6:	ffd091        	l32r	a9, 4008b718 <BT_tx_if_init+0x94>
4008b7d9:	209a90        	or	a9, a10, a9
4008b7dc:	0020c0        	memw
4008b7df:	0899      	s32i.n	a9, a8, 0
4008b7e1:	0020c0        	memw
4008b7e4:	0b98      	l32i.n	a9, a11, 0
4008b7e6:	ffce81        	l32r	a8, 4008b720 <BT_tx_if_init+0x9c>
4008b7e9:	ffcea1        	l32r	a10, 4008b724 <BT_tx_if_init+0xa0>
4008b7ec:	109980        	and	a9, a9, a8
4008b7ef:	e72981        	l32r	a8, 40085494 <coex_force_wifi_mode+0x2d8>
4008b7f2:	208980        	or	a8, a9, a8
4008b7f5:	0020c0        	memw
4008b7f8:	0b89      	s32i.n	a8, a11, 0
4008b7fa:	0020c0        	memw
4008b7fd:	0a98      	l32i.n	a9, a10, 0
4008b7ff:	c0af82        	movi	a8, -64
4008b802:	109980        	and	a9, a9, a8
4008b805:	202290        	or	a2, a2, a9
4008b808:	ffc881        	l32r	a8, 4008b728 <BT_tx_if_init+0xa4>
4008b80b:	0020c0        	memw
4008b80e:	0a29      	s32i.n	a2, a10, 0
4008b810:	0020c0        	memw
4008b813:	08a8      	l32i.n	a10, a8, 0
4008b815:	e71d21        	l32r	a2, 4008548c <coex_force_wifi_mode+0x2d0>
4008b818:	ffc691        	l32r	a9, 4008b730 <BT_tx_if_init+0xac>
4008b81b:	10ba20        	and	a11, a10, a2
4008b81e:	ffc3a1        	l32r	a10, 4008b72c <BT_tx_if_init+0xa8>
4008b821:	20aba0        	or	a10, a11, a10
4008b824:	0020c0        	memw
4008b827:	08a9      	s32i.n	a10, a8, 0
4008b829:	0020c0        	memw
4008b82c:	09b8      	l32i.n	a11, a9, 0
4008b82e:	ffc1a1        	l32r	a10, 4008b734 <BT_tx_if_init+0xb0>
4008b831:	10bba0        	and	a11, a11, a10
4008b834:	ffc1a1        	l32r	a10, 4008b738 <BT_tx_if_init+0xb4>
4008b837:	20aba0        	or	a10, a11, a10
4008b83a:	0020c0        	memw
4008b83d:	09a9      	s32i.n	a10, a9, 0
4008b83f:	0020c0        	memw
4008b842:	09b8      	l32i.n	a11, a9, 0
4008b844:	ffbea1        	l32r	a10, 4008b73c <BT_tx_if_init+0xb8>
4008b847:	10bba0        	and	a11, a11, a10
4008b84a:	ffbda1        	l32r	a10, 4008b740 <BT_tx_if_init+0xbc>
4008b84d:	20aba0        	or	a10, a11, a10
4008b850:	0020c0        	memw
4008b853:	09a9      	s32i.n	a10, a9, 0
4008b855:	ffbb91        	l32r	a9, 4008b744 <BT_tx_if_init+0xc0>
4008b858:	ffbca1        	l32r	a10, 4008b748 <BT_tx_if_init+0xc4>
4008b85b:	0020c0        	memw
4008b85e:	09b8      	l32i.n	a11, a9, 0
4008b860:	ffbcc1        	l32r	a12, 4008b750 <BT_tx_if_init+0xcc>
4008b863:	10bba0        	and	a11, a11, a10
4008b866:	ffb9a1        	l32r	a10, 4008b74c <BT_tx_if_init+0xc8>
4008b869:	20aba0        	or	a10, a11, a10
4008b86c:	0020c0        	memw
4008b86f:	09a9      	s32i.n	a10, a9, 0
4008b871:	0020c0        	memw
4008b874:	0cb8      	l32i.n	a11, a12, 0
4008b876:	00aea2        	movi	a10, 0xfffffe00
4008b879:	10bba0        	and	a11, a11, a10
4008b87c:	d4a1a2        	movi	a10, 0x1d4
4008b87f:	20aba0        	or	a10, a11, a10
4008b882:	0020c0        	memw
4008b885:	0ca9      	s32i.n	a10, a12, 0
4008b887:	0020c0        	memw
4008b88a:	09b8      	l32i.n	a11, a9, 0
4008b88c:	ffb2a1        	l32r	a10, 4008b754 <BT_tx_if_init+0xd0>
4008b88f:	ffb3c1        	l32r	a12, 4008b75c <BT_tx_if_init+0xd8>
4008b892:	10bba0        	and	a11, a11, a10
4008b895:	ffb0a1        	l32r	a10, 4008b758 <BT_tx_if_init+0xd4>
4008b898:	20aba0        	or	a10, a11, a10
4008b89b:	0020c0        	memw
4008b89e:	09a9      	s32i.n	a10, a9, 0
4008b8a0:	0020c0        	memw
4008b8a3:	0cb8      	l32i.n	a11, a12, 0
4008b8a5:	ffaea1        	l32r	a10, 4008b760 <BT_tx_if_init+0xdc>
4008b8a8:	10bba0        	and	a11, a11, a10
4008b8ab:	ffaea1        	l32r	a10, 4008b764 <BT_tx_if_init+0xe0>
4008b8ae:	20aba0        	or	a10, a11, a10
4008b8b1:	0020c0        	memw
4008b8b4:	0ca9      	s32i.n	a10, a12, 0
4008b8b6:	0020c0        	memw
4008b8b9:	08b8      	l32i.n	a11, a8, 0
4008b8bb:	ffaba1        	l32r	a10, 4008b768 <BT_tx_if_init+0xe4>
4008b8be:	10bba0        	and	a11, a11, a10
4008b8c1:	d4eaa1        	l32r	a10, 40080c6c <_init_end+0x86c>
4008b8c4:	20aba0        	or	a10, a11, a10
4008b8c7:	0020c0        	memw
4008b8ca:	08a9      	s32i.n	a10, a8, 0
4008b8cc:	0020c0        	memw
4008b8cf:	09b8      	l32i.n	a11, a9, 0
4008b8d1:	c1afa2        	movi	a10, -63
4008b8d4:	10bba0        	and	a11, a11, a10
4008b8d7:	8a0c      	movi.n	a10, 8
4008b8d9:	20aba0        	or	a10, a11, a10
4008b8dc:	0020c0        	memw
4008b8df:	09a9      	s32i.n	a10, a9, 0
4008b8e1:	0020c0        	memw
4008b8e4:	08b8      	l32i.n	a11, a8, 0
4008b8e6:	ffa1a1        	l32r	a10, 4008b76c <BT_tx_if_init+0xe8>
4008b8e9:	10aba0        	and	a10, a11, a10
4008b8ec:	0020c0        	memw
4008b8ef:	08a9      	s32i.n	a10, a8, 0
4008b8f1:	0020c0        	memw
4008b8f4:	09a8      	l32i.n	a10, a9, 0
4008b8f6:	ff9e81        	l32r	a8, 4008b770 <BT_tx_if_init+0xec>
4008b8f9:	10ba80        	and	a11, a10, a8
4008b8fc:	d36ca1        	l32r	a10, 400806ac <_init_end+0x2ac>
4008b8ff:	ff9d81        	l32r	a8, 4008b774 <BT_tx_if_init+0xf0>
4008b902:	20aba0        	or	a10, a11, a10
4008b905:	0020c0        	memw
4008b908:	09a9      	s32i.n	a10, a9, 0
4008b90a:	0020c0        	memw
4008b90d:	08a8      	l32i.n	a10, a8, 0
4008b90f:	ff9a91        	l32r	a9, 4008b778 <BT_tx_if_init+0xf4>
4008b912:	e6e5b1        	l32r	a11, 400854a8 <coex_force_wifi_mode+0x2ec>
4008b915:	10aa90        	and	a10, a10, a9
4008b918:	ff9991        	l32r	a9, 4008b77c <BT_tx_if_init+0xf8>
4008b91b:	209a90        	or	a9, a10, a9
4008b91e:	0020c0        	memw
4008b921:	0899      	s32i.n	a9, a8, 0
4008b923:	0020c0        	memw
4008b926:	08a8      	l32i.n	a10, a8, 0
4008b928:	ff9691        	l32r	a9, 4008b780 <BT_tx_if_init+0xfc>
4008b92b:	10aa90        	and	a10, a10, a9
4008b92e:	ff9591        	l32r	a9, 4008b784 <BT_tx_if_init+0x100>
4008b931:	209a90        	or	a9, a10, a9
4008b934:	0020c0        	memw
4008b937:	0899      	s32i.n	a9, a8, 0
4008b939:	0020c0        	memw
4008b93c:	08a8      	l32i.n	a10, a8, 0
4008b93e:	d50f91        	l32r	a9, 40080d7c <_init_end+0x97c>
4008b941:	109a90        	and	a9, a10, a9
4008b944:	0020c0        	memw
4008b947:	0899      	s32i.n	a9, a8, 0
4008b949:	0020c0        	memw
4008b94c:	08a8      	l32i.n	a10, a8, 0
4008b94e:	ff8e91        	l32r	a9, 4008b788 <BT_tx_if_init+0x104>
4008b951:	10aa90        	and	a10, a10, a9
4008b954:	d4d791        	l32r	a9, 40080cb0 <_init_end+0x8b0>
4008b957:	209a90        	or	a9, a10, a9
4008b95a:	0020c0        	memw
4008b95d:	0899      	s32i.n	a9, a8, 0
4008b95f:	0020c0        	memw
4008b962:	0b98      	l32i.n	a9, a11, 0
4008b964:	ff8a81        	l32r	a8, 4008b78c <BT_tx_if_init+0x108>
4008b967:	ff8aa1        	l32r	a10, 4008b790 <BT_tx_if_init+0x10c>
4008b96a:	109980        	and	a9, a9, a8
4008b96d:	d4f281        	l32r	a8, 40080d38 <_init_end+0x938>
4008b970:	208980        	or	a8, a9, a8
4008b973:	0020c0        	memw
4008b976:	0b89      	s32i.n	a8, a11, 0
4008b978:	0020c0        	memw
4008b97b:	0ab8      	l32i.n	a11, a10, 0
4008b97d:	00a282        	movi	a8, 0x200
4008b980:	ff8591        	l32r	a9, 4008b794 <BT_tx_if_init+0x110>
4008b983:	208b80        	or	a8, a11, a8
4008b986:	0020c0        	memw
4008b989:	0a89      	s32i.n	a8, a10, 0
4008b98b:	0020c0        	memw
4008b98e:	0988      	l32i.n	a8, a9, 0
4008b990:	102820        	and	a2, a8, a2
4008b993:	ff8181        	l32r	a8, 4008b798 <BT_tx_if_init+0x114>
4008b996:	202280        	or	a2, a2, a8
4008b999:	0020c0        	memw
4008b99c:	0929      	s32i.n	a2, a9, 0
4008b99e:	f01d      	retw.n
4008b9a0:	f51000        	extui	a1, a0, 16, 16
4008b9a3:	3f          	.byte 0x3f
4008b9a4:	f51014        	lsi	f1, a0, 0x3d4
4008b9a7:	3f          	.byte 0x3f
4008b9a8:	018021        	l32r	a2, 4004bfa8 <lld_pdu_pack+0x1494>
4008b9ab:	104400        	and	a4, a4, a0
4008b9ae:	403ff5        	call12	400cbdac <_rtc_text_end+0xbdac>
4008b9b1:	3ff510        	f64cmph	a15, a5, a1, 3
4008b9b4:	ff          	.byte 0xff
4008b9b5:	ff          	.byte 0xff
4008b9b6:	1f          	.byte 0x1f
4008b9b7:	01f8      	l32i.n	a15, a1, 0
4008b9b9:	ffe000        	f64cmph	a14, a0, a0, 15
4008b9bc:	199a      	add.n	a1, a9, a9
	...

4008b9c0 <bt_bb_init_cmplx_reg>:
4008b9c0:	004136        	entry	a1, 32
4008b9c3:	fff781        	l32r	a8, 4008b9a0 <BT_init_rx_filters+0x204>
4008b9c6:	c3af22        	movi	a2, -61
4008b9c9:	0020c0        	memw
4008b9cc:	002892        	l32i	a9, a8, 0
4008b9cf:	fff7a1        	l32r	a10, 4008b9ac <BT_init_rx_filters+0x210>
4008b9d2:	102920        	and	a2, a9, a2
4008b9d5:	0020c0        	memw
4008b9d8:	006822        	s32i	a2, a8, 0
4008b9db:	fff381        	l32r	a8, 4008b9a8 <BT_init_rx_filters+0x20c>
4008b9de:	fff121        	l32r	a2, 4008b9a4 <BT_init_rx_filters+0x208>
4008b9e1:	c8a0c2        	movi	a12, 200
4008b9e4:	0020c0        	memw
4008b9e7:	0289      	s32i.n	a8, a2, 0
4008b9e9:	0020c0        	memw
4008b9ec:	0a88      	l32i.n	a8, a10, 0
4008b9ee:	00af22        	movi	a2, 0xffffff00
4008b9f1:	109820        	and	a9, a8, a2
4008b9f4:	a0a082        	movi	a8, 160
4008b9f7:	ffee21        	l32r	a2, 4008b9b0 <BT_init_rx_filters+0x214>
4008b9fa:	208980        	or	a8, a9, a8
4008b9fd:	0020c0        	memw
4008ba00:	0a89      	s32i.n	a8, a10, 0
4008ba02:	0020c0        	memw
4008ba05:	02a8      	l32i.n	a10, a2, 0
4008ba07:	ffeb91        	l32r	a9, 4008b9b4 <BT_init_rx_filters+0x218>
4008ba0a:	180c      	movi.n	a8, 1
4008ba0c:	109a90        	and	a9, a10, a9
4008ba0f:	0020c0        	memw
4008ba12:	0299      	s32i.n	a9, a2, 0
4008ba14:	0020c0        	memw
4008ba17:	0298      	l32i.n	a9, a2, 0
4008ba19:	08dd      	mov.n	a13, a8
4008ba1b:	208980        	or	a8, a9, a8
4008ba1e:	0020c0        	memw
4008ba21:	0289      	s32i.n	a8, a2, 0
4008ba23:	e8a3b2        	movi	a11, 0x3e8
4008ba26:	22a1a2        	movi	a10, 0x122
4008ba29:	ffc5a5        	call8	4008b684 <BT_tx_if_init>
4008ba2c:	8a3c      	movi.n	a10, 56
4008ba2e:	ffd6e5        	call8	4008b79c <BT_init_rx_filters>
4008ba31:	0020c0        	memw
4008ba34:	0298      	l32i.n	a9, a2, 0
4008ba36:	ffe081        	l32r	a8, 4008b9b8 <BT_init_rx_filters+0x21c>
4008ba39:	109980        	and	a9, a9, a8
4008ba3c:	ffe081        	l32r	a8, 4008b9bc <BT_init_rx_filters+0x220>
4008ba3f:	208980        	or	a8, a9, a8
4008ba42:	0020c0        	memw
4008ba45:	0289      	s32i.n	a8, a2, 0
4008ba47:	f01d      	retw.n
4008ba49:	000000        	ill
4008ba4c:	09c8      	l32i.n	a12, a9, 0
4008ba4e:	3ffc      	bnez.n	a15, 4008ba85 <force_wifi_mode+0x25>
4008ba50:	0310d0        	rsr.acclo	a13
4008ba53:	130060        	wsr.lbeg	a6
4008ba56:	c46003        	lsi	f0, a0, 0x310
4008ba59:	600041        	l32r	a4, 40063a5c <__mulsc3+0x118>
4008ba5c:	f5d040        	extui	a13, a4, 16, 16
4008ba5f:	3f          	.byte 0x3f

4008ba60 <force_wifi_mode>:
4008ba60:	004136        	entry	a1, 32
4008ba63:	fffa31        	l32r	a3, 4008ba4c <bt_bb_init_cmplx_reg+0x8c>
4008ba66:	0388      	l32i.n	a8, a3, 0
4008ba68:	080856        	bnez	a8, 4008baec <force_wifi_mode+0x8c>
4008ba6b:	129c      	beqz.n	a2, 4008ba80 <force_wifi_mode+0x20>
4008ba6d:	e68a81        	l32r	a8, 40085498 <coex_force_wifi_mode+0x2dc>
4008ba70:	e27c      	movi.n	a2, -2
4008ba72:	0020c0        	memw
4008ba75:	0898      	l32i.n	a9, a8, 0
4008ba77:	102920        	and	a2, a9, a2
4008ba7a:	0020c0        	memw
4008ba7d:	006822        	s32i	a2, a8, 0
4008ba80:	fff4b1        	l32r	a11, 4008ba50 <bt_bb_init_cmplx_reg+0x90>
4008ba83:	0faf82        	movi	a8, -241
4008ba86:	0020c0        	memw
4008ba89:	002b92        	l32i	a9, a11, 0
4008ba8c:	fff2a1        	l32r	a10, 4008ba54 <bt_bb_init_cmplx_reg+0x94>
4008ba8f:	109980        	and	a9, a9, a8
4008ba92:	0020c0        	memw
4008ba95:	006b92        	s32i	a9, a11, 0
4008ba98:	0020c0        	memw
4008ba9b:	002a22        	l32i	a2, a10, 0
4008ba9e:	ff29b1        	l32r	a11, 4008b744 <BT_tx_if_init+0xc0>
4008baa1:	108280        	and	a8, a2, a8
4008baa4:	0020c0        	memw
4008baa7:	0a89      	s32i.n	a8, a10, 0
4008baa9:	0020c0        	memw
4008baac:	0b98      	l32i.n	a9, a11, 0
4008baae:	3faf82        	movi	a8, -193
4008bab1:	109980        	and	a9, a9, a8
4008bab4:	80a082        	movi	a8, 128
4008bab7:	208980        	or	a8, a9, a8
4008baba:	ffe7a1        	l32r	a10, 4008ba58 <bt_bb_init_cmplx_reg+0x98>
4008babd:	0020c0        	memw
4008bac0:	0b89      	s32i.n	a8, a11, 0
4008bac2:	0020c0        	memw
4008bac5:	0a28      	l32i.n	a2, a10, 0
4008bac7:	bfaf82        	movi	a8, -65
4008baca:	108280        	and	a8, a2, a8
4008bacd:	0020c0        	memw
4008bad0:	0a89      	s32i.n	a8, a10, 0
4008bad2:	f6c665        	call8	40082738 <phy_force_wifi_chan>
4008bad5:	ffe191        	l32r	a9, 4008ba5c <bt_bb_init_cmplx_reg+0x9c>
4008bad8:	d2e981        	l32r	a8, 4008067c <_init_end+0x27c>
4008badb:	0020c0        	memw
4008bade:	0928      	l32i.n	a2, a9, 0
4008bae0:	208280        	or	a8, a2, a8
4008bae3:	0020c0        	memw
4008bae6:	0989      	s32i.n	a8, a9, 0
4008bae8:	120c      	movi.n	a2, 1
4008baea:	0329      	s32i.n	a2, a3, 0
4008baec:	f01d      	retw.n
	...

4008baf0 <unforce_wifi_mode>:
4008baf0:	004136        	entry	a1, 32
4008baf3:	ffd621        	l32r	a2, 4008ba4c <bt_bb_init_cmplx_reg+0x8c>
4008baf6:	0288      	l32i.n	a8, a2, 0
4008baf8:	681866        	bnei	a8, 1, 4008bb64 <unforce_wifi_mode+0x74>
4008bafb:	e5ad81        	l32r	a8, 400851b0 <coex_core_bb_reset_unlock+0x13c>
4008bafe:	0020c0        	memw
4008bb01:	002892        	l32i	a9, a8, 0
4008bb04:	0879e7        	bbci	a9, 30, 4008bb10 <unforce_wifi_mode+0x20>
4008bb07:	0020c0        	memw
4008bb0a:	002882        	l32i	a8, a8, 0
4008bb0d:	53f847        	bbsi	a8, 20, 4008bb64 <unforce_wifi_mode+0x74>
4008bb10:	f6b7a5        	call8	4008268c <phy_unforce_wifi_chan>
4008bb13:	ff0ca1        	l32r	a10, 4008b744 <BT_tx_if_init+0xc0>
4008bb16:	3faf82        	movi	a8, -193
4008bb19:	0020c0        	memw
4008bb1c:	002ab2        	l32i	a11, a10, 0
4008bb1f:	ffce91        	l32r	a9, 4008ba58 <bt_bb_init_cmplx_reg+0x98>
4008bb22:	108b80        	and	a8, a11, a8
4008bb25:	0020c0        	memw
4008bb28:	006a82        	s32i	a8, a10, 0
4008bb2b:	0020c0        	memw
4008bb2e:	0029b2        	l32i	a11, a9, 0
4008bb31:	084c      	movi.n	a8, 64
4008bb33:	ffcaa1        	l32r	a10, 4008ba5c <bt_bb_init_cmplx_reg+0x9c>
4008bb36:	208b80        	or	a8, a11, a8
4008bb39:	0020c0        	memw
4008bb3c:	0989      	s32i.n	a8, a9, 0
4008bb3e:	0020c0        	memw
4008bb41:	0ab8      	l32i.n	a11, a10, 0
4008bb43:	d27781        	l32r	a8, 40080520 <_init_end+0x120>
4008bb46:	e65491        	l32r	a9, 40085498 <coex_force_wifi_mode+0x2dc>
4008bb49:	108b80        	and	a8, a11, a8
4008bb4c:	0020c0        	memw
4008bb4f:	0a89      	s32i.n	a8, a10, 0
4008bb51:	0020c0        	memw
4008bb54:	09a8      	l32i.n	a10, a9, 0
4008bb56:	180c      	movi.n	a8, 1
4008bb58:	208a80        	or	a8, a10, a8
4008bb5b:	0020c0        	memw
4008bb5e:	0989      	s32i.n	a8, a9, 0
4008bb60:	080c      	movi.n	a8, 0
4008bb62:	0289      	s32i.n	a8, a2, 0
4008bb64:	f01d      	retw.n
	...

4008bb68 <rtc_wdt_get_protect_status>:
4008bb68:	004136        	entry	a1, 32
4008bb6b:	d42a21        	l32r	a2, 40080c14 <_init_end+0x814>
4008bb6e:	0020c0        	memw
4008bb71:	0288      	l32i.n	a8, a2, 0
4008bb73:	d42921        	l32r	a2, 40080c18 <_init_end+0x818>
4008bb76:	882a      	add.n	a8, a8, a2
4008bb78:	020c      	movi.n	a2, 0
4008bb7a:	190c      	movi.n	a9, 1
4008bb7c:	932980        	movnez	a2, a9, a8
4008bb7f:	f01d      	retw.n
4008bb81:	000000        	ill

4008bb84 <rtc_wdt_protect_off>:
4008bb84:	004136        	entry	a1, 32
4008bb87:	d25c91        	l32r	a9, 400804f8 <_init_end+0xf8>
4008bb8a:	d42281        	l32r	a8, 40080c14 <_init_end+0x814>
4008bb8d:	0020c0        	memw
4008bb90:	0899      	s32i.n	a9, a8, 0
4008bb92:	f01d      	retw.n

4008bb94 <rtc_wdt_protect_on>:
4008bb94:	004136        	entry	a1, 32
4008bb97:	090c      	movi.n	a9, 0
4008bb99:	d41e81        	l32r	a8, 40080c14 <_init_end+0x814>
4008bb9c:	0020c0        	memw
4008bb9f:	0899      	s32i.n	a9, a8, 0
4008bba1:	f01d      	retw.n
	...

4008bba4 <rtc_wdt_enable>:
4008bba4:	004136        	entry	a1, 32
4008bba7:	d41d91        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bbaa:	0020c0        	memw
4008bbad:	09a8      	l32i.n	a10, a9, 0
4008bbaf:	d2b381        	l32r	a8, 4008067c <_init_end+0x27c>
4008bbb2:	208a80        	or	a8, a10, a8
4008bbb5:	0020c0        	memw
4008bbb8:	0989      	s32i.n	a8, a9, 0
4008bbba:	f03d      	nop.n
4008bbbc:	f03d      	nop.n
4008bbbe:	f03d      	nop.n
4008bbc0:	f03d      	nop.n
4008bbc2:	d41791        	l32r	a9, 40080c20 <_init_end+0x820>
4008bbc5:	0020c0        	memw
4008bbc8:	09a8      	l32i.n	a10, a9, 0
4008bbca:	d41681        	l32r	a8, 40080c24 <_init_end+0x824>
4008bbcd:	208a80        	or	a8, a10, a8
4008bbd0:	0020c0        	memw
4008bbd3:	0989      	s32i.n	a8, a9, 0
4008bbd5:	f01d      	retw.n
	...

4008bbd8 <rtc_wdt_flashboot_mode_enable>:
4008bbd8:	004136        	entry	a1, 32
4008bbdb:	d41191        	l32r	a9, 40080c20 <_init_end+0x820>
4008bbde:	0020c0        	memw
4008bbe1:	09a8      	l32i.n	a10, a9, 0
4008bbe3:	00a482        	movi	a8, 0x400
4008bbe6:	208a80        	or	a8, a10, a8
4008bbe9:	0020c0        	memw
4008bbec:	0989      	s32i.n	a8, a9, 0
4008bbee:	f01d      	retw.n

4008bbf0 <rtc_wdt_feed>:
4008bbf0:	004136        	entry	a1, 32
4008bbf3:	fff765        	call8	4008bb68 <rtc_wdt_get_protect_status>
4008bbf6:	202aa0        	or	a2, a10, a10
4008bbf9:	002a16        	beqz	a10, 4008bbff <rtc_wdt_feed+0xf>
4008bbfc:	fff865        	call8	4008bb84 <rtc_wdt_protect_off>
4008bbff:	d40791        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bc02:	0020c0        	memw
4008bc05:	0029a2        	l32i	a10, a9, 0
4008bc08:	d29d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008bc0b:	208a80        	or	a8, a10, a8
4008bc0e:	0020c0        	memw
4008bc11:	0989      	s32i.n	a8, a9, 0
4008bc13:	128c      	beqz.n	a2, 4008bc18 <rtc_wdt_feed+0x28>
4008bc15:	fff7e5        	call8	4008bb94 <rtc_wdt_protect_on>
4008bc18:	f01d      	retw.n
	...

4008bc1c <rtc_wdt_set_time>:
4008bc1c:	004136        	entry	a1, 32
4008bc1f:	5142f6        	bgeui	a2, 4, 4008bc74 <rtc_wdt_set_time+0x58>
4008bc22:	00cb65        	call8	4008c8d8 <rtc_clk_slow_freq_get_hz>
4008bc25:	a2b3a0        	muluh	a11, a3, a10
4008bc28:	d314c1        	l32r	a12, 40080878 <_init_end+0x478>
4008bc2b:	d23ad1        	l32r	a13, 40080514 <_init_end+0x114>
4008bc2e:	82a3a0        	mull	a10, a3, a10
4008bc31:	d27c81        	l32r	a8, 40080624 <_init_end+0x224>
4008bc34:	0008e0        	callx8	a8
4008bc37:	00d256        	bnez	a2, 4008bc48 <rtc_wdt_set_time+0x2c>
4008bc3a:	d3fb21        	l32r	a2, 40080c28 <_init_end+0x828>
4008bc3d:	0020c0        	memw
4008bc40:	0062a2        	s32i	a10, a2, 0
4008bc43:	00a022        	movi	a2, 0
4008bc46:	f01d      	retw.n
4008bc48:	0c1266        	bnei	a2, 1, 4008bc58 <rtc_wdt_set_time+0x3c>
4008bc4b:	d3f821        	l32r	a2, 40080c2c <_init_end+0x82c>
4008bc4e:	0020c0        	memw
4008bc51:	02a9      	s32i.n	a10, a2, 0
4008bc53:	020c      	movi.n	a2, 0
4008bc55:	f01d      	retw.n
4008bc57:	226600        	orb	b6, b6, b0
4008bc5a:	210c      	movi.n	a1, 2
4008bc5c:	c0d3f5        	call12	4004c99c <llm_hci_cmd_handler_tab_p_get+0x7c>
4008bc5f:	a90020        	lsi	f2, a0, 0x2a4
4008bc62:	020c02        	l8ui	a0, a12, 2
4008bc65:	f01d      	retw.n
4008bc67:	f32100        	lsi	f0, a1, 0x3cc
4008bc6a:	20c0d3        	ssip	f13, a0, 128
4008bc6d:	02a900        	andb	b10, b9, b0
4008bc70:	020c      	movi.n	a2, 0
4008bc72:	f01d      	retw.n
4008bc74:	02a122        	movi	a2, 0x102
4008bc77:	f01d      	retw.n
4008bc79:	000000        	ill

4008bc7c <rtc_wdt_set_stage>:
4008bc7c:	004136        	entry	a1, 32
4008bc7f:	01a082        	movi	a8, 1
4008bc82:	0242f6        	bgeui	a2, 4, 4008bc88 <rtc_wdt_set_stage+0xc>
4008bc85:	00a082        	movi	a8, 0
4008bc88:	749080        	extui	a9, a8, 0, 8
4008bc8b:	01a082        	movi	a8, 1
4008bc8e:	0253f6        	bgeui	a3, 5, 4008bc94 <rtc_wdt_set_stage+0x18>
4008bc91:	00a082        	movi	a8, 0
4008bc94:	748080        	extui	a8, a8, 0, 8
4008bc97:	208980        	or	a8, a9, a8
4008bc9a:	08a856        	bnez	a8, 4008bd28 <rtc_wdt_set_stage+0xac>
4008bc9d:	f2dc      	bnez.n	a2, 4008bcc0 <rtc_wdt_set_stage+0x44>
4008bc9f:	d3e081        	l32r	a8, 40080c20 <_init_end+0x820>
4008bca2:	0020c0        	memw
4008bca5:	0898      	l32i.n	a9, a8, 0
4008bca7:	d3e421        	l32r	a2, 40080c38 <_init_end+0x838>
4008bcaa:	102920        	and	a2, a9, a2
4008bcad:	243030        	extui	a3, a3, 0, 3
4008bcb0:	013340        	slli	a3, a3, 28
4008bcb3:	203230        	or	a3, a2, a3
4008bcb6:	0020c0        	memw
4008bcb9:	0839      	s32i.n	a3, a8, 0
4008bcbb:	020c      	movi.n	a2, 0
4008bcbd:	f01d      	retw.n
4008bcbf:	126600        	andbc	b6, b6, b0
4008bcc2:	d78120        	lsi	f2, a1, 0x35c
4008bcc5:	20c0d3        	ssip	f13, a0, 128
4008bcc8:	089800        	lsx	f9, a8, a0
4008bccb:	d3dc21        	l32r	a2, 40080c3c <_init_end+0x83c>
4008bcce:	102920        	and	a2, a9, a2
4008bcd1:	243030        	extui	a3, a3, 0, 3
4008bcd4:	013370        	slli	a3, a3, 25
4008bcd7:	202230        	or	a2, a2, a3
4008bcda:	0020c0        	memw
4008bcdd:	0829      	s32i.n	a2, a8, 0
4008bcdf:	020c      	movi.n	a2, 0
4008bce1:	f01d      	retw.n
4008bce3:	226600        	orb	b6, b6, b0
4008bce6:	ce8120        	f64iter	a8, a1, a2, 0, 1
4008bce9:	20c0d3        	ssip	f13, a0, 128
4008bcec:	089800        	lsx	f9, a8, a0
4008bcef:	d3d421        	l32r	a2, 40080c40 <_init_end+0x840>
4008bcf2:	102920        	and	a2, a9, a2
4008bcf5:	243030        	extui	a3, a3, 0, 3
4008bcf8:	0133a0        	slli	a3, a3, 22
4008bcfb:	202230        	or	a2, a2, a3
4008bcfe:	0020c0        	memw
4008bd01:	0829      	s32i.n	a2, a8, 0
4008bd03:	020c      	movi.n	a2, 0
4008bd05:	f01d      	retw.n
4008bd07:	c68100        	lsi	f0, a1, 0x318
4008bd0a:	20c0d3        	ssip	f13, a0, 128
4008bd0d:	089800        	lsx	f9, a8, a0
4008bd10:	d3cd21        	l32r	a2, 40080c44 <_init_end+0x844>
4008bd13:	102920        	and	a2, a9, a2
4008bd16:	243030        	extui	a3, a3, 0, 3
4008bd19:	0133d0        	slli	a3, a3, 19
4008bd1c:	203230        	or	a3, a2, a3
4008bd1f:	0020c0        	memw
4008bd22:	0839      	s32i.n	a3, a8, 0
4008bd24:	020c      	movi.n	a2, 0
4008bd26:	f01d      	retw.n
4008bd28:	02a122        	movi	a2, 0x102
4008bd2b:	f01d      	retw.n
4008bd2d:	000000        	ill

4008bd30 <rtc_wdt_disable>:
4008bd30:	004136        	entry	a1, 32
4008bd33:	ffe365        	call8	4008bb68 <rtc_wdt_get_protect_status>
4008bd36:	202aa0        	or	a2, a10, a10
4008bd39:	002a16        	beqz	a10, 4008bd3f <rtc_wdt_disable+0xf>
4008bd3c:	ffe465        	call8	4008bb84 <rtc_wdt_protect_off>
4008bd3f:	d3b791        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bd42:	0020c0        	memw
4008bd45:	09a8      	l32i.n	a10, a9, 0
4008bd47:	d24d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008bd4a:	208a80        	or	a8, a10, a8
4008bd4d:	0020c0        	memw
4008bd50:	0989      	s32i.n	a8, a9, 0
4008bd52:	0b0c      	movi.n	a11, 0
4008bd54:	20abb0        	or	a10, a11, a11
4008bd57:	fff265        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd5a:	0b0c      	movi.n	a11, 0
4008bd5c:	1a0c      	movi.n	a10, 1
4008bd5e:	fff1e5        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd61:	0b0c      	movi.n	a11, 0
4008bd63:	2a0c      	movi.n	a10, 2
4008bd65:	fff165        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd68:	0b0c      	movi.n	a11, 0
4008bd6a:	03a0a2        	movi	a10, 3
4008bd6d:	fff0e5        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd70:	d3ac81        	l32r	a8, 40080c20 <_init_end+0x820>
4008bd73:	0020c0        	memw
4008bd76:	08a8      	l32i.n	a10, a8, 0
4008bd78:	ffab92        	movi	a9, 0xfffffbff
4008bd7b:	109a90        	and	a9, a10, a9
4008bd7e:	0020c0        	memw
4008bd81:	0899      	s32i.n	a9, a8, 0
4008bd83:	f03d      	nop.n
4008bd85:	f03d      	nop.n
4008bd87:	f03d      	nop.n
4008bd89:	f03d      	nop.n
4008bd8b:	0020c0        	memw
4008bd8e:	08a8      	l32i.n	a10, a8, 0
4008bd90:	d1e491        	l32r	a9, 40080520 <_init_end+0x120>
4008bd93:	109a90        	and	a9, a10, a9
4008bd96:	0020c0        	memw
4008bd99:	0899      	s32i.n	a9, a8, 0
4008bd9b:	128c      	beqz.n	a2, 4008bda0 <rtc_wdt_disable+0x70>
4008bd9d:	ffdf65        	call8	4008bb94 <rtc_wdt_protect_on>
4008bda0:	f01d      	retw.n
	...

4008bda4 <rtc_wdt_set_length_of_reset_signal>:
4008bda4:	004136        	entry	a1, 32
4008bda7:	01a082        	movi	a8, 1
4008bdaa:	0222f6        	bgeui	a2, 2, 4008bdb0 <rtc_wdt_set_length_of_reset_signal+0xc>
4008bdad:	00a082        	movi	a8, 0
4008bdb0:	749080        	extui	a9, a8, 0, 8
4008bdb3:	01a082        	movi	a8, 1
4008bdb6:	0283f6        	bgeui	a3, 8, 4008bdbc <rtc_wdt_set_length_of_reset_signal+0x18>
4008bdb9:	00a082        	movi	a8, 0
4008bdbc:	748080        	extui	a8, a8, 0, 8
4008bdbf:	208980        	or	a8, a9, a8
4008bdc2:	042856        	bnez	a8, 4008be08 <rtc_wdt_set_length_of_reset_signal+0x64>
4008bdc5:	f2dc      	bnez.n	a2, 4008bde8 <rtc_wdt_set_length_of_reset_signal+0x44>
4008bdc7:	d39681        	l32r	a8, 40080c20 <_init_end+0x820>
4008bdca:	0020c0        	memw
4008bdcd:	0898      	l32i.n	a9, a8, 0
4008bdcf:	d39e21        	l32r	a2, 40080c48 <_init_end+0x848>
4008bdd2:	102920        	and	a2, a9, a2
4008bdd5:	243030        	extui	a3, a3, 0, 3
4008bdd8:	113350        	slli	a3, a3, 11
4008bddb:	203230        	or	a3, a2, a3
4008bdde:	0020c0        	memw
4008bde1:	0839      	s32i.n	a3, a8, 0
4008bde3:	020c      	movi.n	a2, 0
4008bde5:	f01d      	retw.n
4008bde7:	8e8100        	f64iter	a8, a1, a0, 0, 0
4008bdea:	20c0d3        	ssip	f13, a0, 128
4008bded:	089800        	lsx	f9, a8, a0
4008bdf0:	d39721        	l32r	a2, 40080c4c <_init_end+0x84c>
4008bdf3:	102920        	and	a2, a9, a2
4008bdf6:	243030        	extui	a3, a3, 0, 3
4008bdf9:	113320        	slli	a3, a3, 14
4008bdfc:	203230        	or	a3, a2, a3
4008bdff:	0020c0        	memw
4008be02:	0839      	s32i.n	a3, a8, 0
4008be04:	020c      	movi.n	a2, 0
4008be06:	f01d      	retw.n
4008be08:	02a122        	movi	a2, 0x102
4008be0b:	f01d      	retw.n
4008be0d:	000000        	ill

4008be10 <rtc_wdt_is_on>:
4008be10:	004136        	entry	a1, 32
4008be13:	d38381        	l32r	a8, 40080c20 <_init_end+0x820>
4008be16:	0020c0        	memw
4008be19:	0888      	l32i.n	a8, a8, 0
4008be1b:	00e896        	bltz	a8, 4008be2d <rtc_wdt_is_on+0x1d>
4008be1e:	d38021        	l32r	a2, 40080c20 <_init_end+0x820>
4008be21:	0020c0        	memw
4008be24:	0228      	l32i.n	a2, a2, 0
4008be26:	0762a7        	bbci	a2, 10, 4008be31 <rtc_wdt_is_on+0x21>
4008be29:	120c      	movi.n	a2, 1
4008be2b:	f01d      	retw.n
4008be2d:	120c      	movi.n	a2, 1
4008be2f:	f01d      	retw.n
4008be31:	020c      	movi.n	a2, 0
4008be33:	f01d      	retw.n
4008be35:	000000        	ill

4008be38 <rtc_init>:
4008be38:	004136        	entry	a1, 32
4008be3b:	d38591        	l32r	a9, 40080c50 <_init_end+0x850>
4008be3e:	0020c0        	memw
4008be41:	0938      	l32i.n	a3, a9, 0
4008be43:	d38481        	l32r	a8, 40080c54 <_init_end+0x854>
4008be46:	108380        	and	a8, a3, a8
4008be49:	0020c0        	memw
4008be4c:	0989      	s32i.n	a8, a9, 0
4008be4e:	f03d      	nop.n
4008be50:	f03d      	nop.n
4008be52:	f03d      	nop.n
4008be54:	f03d      	nop.n
4008be56:	d38081        	l32r	a8, 40080c58 <_init_end+0x858>
4008be59:	0020c0        	memw
4008be5c:	08a8      	l32i.n	a10, a8, 0
4008be5e:	d37f91        	l32r	a9, 40080c5c <_init_end+0x85c>
4008be61:	10aa90        	and	a10, a10, a9
4008be64:	759020        	extui	a9, a2, 16, 8
4008be67:	019980        	slli	a9, a9, 24
4008be6a:	2099a0        	or	a9, a9, a10
4008be6d:	0020c0        	memw
4008be70:	0899      	s32i.n	a9, a8, 0
4008be72:	f03d      	nop.n
4008be74:	f03d      	nop.n
4008be76:	f03d      	nop.n
4008be78:	f03d      	nop.n
4008be7a:	0020c0        	memw
4008be7d:	08a8      	l32i.n	a10, a8, 0
4008be7f:	d37891        	l32r	a9, 40080c60 <_init_end+0x860>
4008be82:	10aa90        	and	a10, a10, a9
4008be85:	749820        	extui	a9, a2, 8, 8
4008be88:	119920        	slli	a9, a9, 14
4008be8b:	2099a0        	or	a9, a9, a10
4008be8e:	0020c0        	memw
4008be91:	0899      	s32i.n	a9, a8, 0
4008be93:	f03d      	nop.n
4008be95:	f03d      	nop.n
4008be97:	f03d      	nop.n
4008be99:	f03d      	nop.n
4008be9b:	0020c0        	memw
4008be9e:	08a8      	l32i.n	a10, a8, 0
4008bea0:	d37191        	l32r	a9, 40080c64 <_init_end+0x864>
4008bea3:	10aa90        	and	a10, a10, a9
4008bea6:	749020        	extui	a9, a2, 0, 8
4008bea9:	1199a0        	slli	a9, a9, 6
4008beac:	2099a0        	or	a9, a9, a10
4008beaf:	0020c0        	memw
4008beb2:	0899      	s32i.n	a9, a8, 0
4008beb4:	f03d      	nop.n
4008beb6:	f03d      	nop.n
4008beb8:	f03d      	nop.n
4008beba:	f03d      	nop.n
4008bebc:	d36b81        	l32r	a8, 40080c68 <_init_end+0x868>
4008bebf:	0020c0        	memw
4008bec2:	0838      	l32i.n	a3, a8, 0
4008bec4:	d36a91        	l32r	a9, 40080c6c <_init_end+0x86c>
4008bec7:	209390        	or	a9, a3, a9
4008beca:	0020c0        	memw
4008becd:	0899      	s32i.n	a9, a8, 0
4008becf:	f03d      	nop.n
4008bed1:	f03d      	nop.n
4008bed3:	f03d      	nop.n
4008bed5:	f03d      	nop.n
4008bed7:	0020c0        	memw
4008beda:	0838      	l32i.n	a3, a8, 0
4008bedc:	d1f491        	l32r	a9, 400806ac <_init_end+0x2ac>
4008bedf:	209390        	or	a9, a3, a9
4008bee2:	0020c0        	memw
4008bee5:	0899      	s32i.n	a9, a8, 0
4008bee7:	f03d      	nop.n
4008bee9:	f03d      	nop.n
4008beeb:	f03d      	nop.n
4008beed:	f03d      	nop.n
4008beef:	d36091        	l32r	a9, 40080c70 <_init_end+0x870>
4008bef2:	0020c0        	memw
4008bef5:	09a8      	l32i.n	a10, a9, 0
4008bef7:	d35181        	l32r	a8, 40080c3c <_init_end+0x83c>
4008befa:	10aa80        	and	a10, a10, a8
4008befd:	d35d81        	l32r	a8, 40080c74 <_init_end+0x874>
4008bf00:	208a80        	or	a8, a10, a8
4008bf03:	0020c0        	memw
4008bf06:	0989      	s32i.n	a8, a9, 0
4008bf08:	f03d      	nop.n
4008bf0a:	f03d      	nop.n
4008bf0c:	f03d      	nop.n
4008bf0e:	f03d      	nop.n
4008bf10:	0020c0        	memw
4008bf13:	0938      	l32i.n	a3, a9, 0
4008bf15:	d34a81        	l32r	a8, 40080c40 <_init_end+0x840>
4008bf18:	108380        	and	a8, a3, a8
4008bf1b:	d357a1        	l32r	a10, 40080c78 <_init_end+0x878>
4008bf1e:	2088a0        	or	a8, a8, a10
4008bf21:	0020c0        	memw
4008bf24:	0989      	s32i.n	a8, a9, 0
4008bf26:	0282a7        	bany	a2, a10, 4008bf2c <rtc_init+0xf4>
4008bf29:	0031c6        	j	4008bff4 <rtc_init+0x1bc>
4008bf2c:	f03d      	nop.n
4008bf2e:	f03d      	nop.n
4008bf30:	f03d      	nop.n
4008bf32:	0020f0        	nop
4008bf35:	d23241        	l32r	a4, 40080800 <_init_end+0x400>
4008bf38:	04ad      	mov.n	a10, a4
4008bf3a:	f5a0e5        	call8	40081948 <esp_dport_access_reg_read>
4008bf3d:	d34f31        	l32r	a3, 40080c7c <_init_end+0x87c>
4008bf40:	10aa30        	and	a10, a10, a3
4008bf43:	0020c0        	memw
4008bf46:	04a9      	s32i.n	a10, a4, 0
4008bf48:	f03d      	nop.n
4008bf4a:	f03d      	nop.n
4008bf4c:	f03d      	nop.n
4008bf4e:	0020f0        	nop
4008bf51:	d22d41        	l32r	a4, 40080808 <_init_end+0x408>
4008bf54:	04ad      	mov.n	a10, a4
4008bf56:	f59f25        	call8	40081948 <esp_dport_access_reg_read>
4008bf59:	10aa30        	and	a10, a10, a3
4008bf5c:	0020c0        	memw
4008bf5f:	04a9      	s32i.n	a10, a4, 0
4008bf61:	f03d      	nop.n
4008bf63:	f03d      	nop.n
4008bf65:	f03d      	nop.n
4008bf67:	f03d      	nop.n
4008bf69:	d34531        	l32r	a3, 40080c80 <_init_end+0x880>
4008bf6c:	03ad      	mov.n	a10, a3
4008bf6e:	f59da5        	call8	40081948 <esp_dport_access_reg_read>
4008bf71:	03af42        	movi	a4, -253
4008bf74:	10aa40        	and	a10, a10, a4
4008bf77:	0020c0        	memw
4008bf7a:	03a9      	s32i.n	a10, a3, 0
4008bf7c:	03ad      	mov.n	a10, a3
4008bf7e:	f59ca5        	call8	40081948 <esp_dport_access_reg_read>
4008bf81:	d47c      	movi.n	a4, -3
4008bf83:	10aa40        	and	a10, a10, a4
4008bf86:	0020c0        	memw
4008bf89:	03a9      	s32i.n	a10, a3, 0
4008bf8b:	03ad      	mov.n	a10, a3
4008bf8d:	f59ba5        	call8	40081948 <esp_dport_access_reg_read>
4008bf90:	e47c      	movi.n	a4, -2
4008bf92:	10aa40        	and	a10, a10, a4
4008bf95:	0020c0        	memw
4008bf98:	03a9      	s32i.n	a10, a3, 0
4008bf9a:	f03d      	nop.n
4008bf9c:	f03d      	nop.n
4008bf9e:	f03d      	nop.n
4008bfa0:	0020f0        	nop
4008bfa3:	d33831        	l32r	a3, 40080c84 <_init_end+0x884>
4008bfa6:	03ad      	mov.n	a10, a3
4008bfa8:	f599e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfab:	080c      	movi.n	a8, 0
4008bfad:	0020c0        	memw
4008bfb0:	0389      	s32i.n	a8, a3, 0
4008bfb2:	f03d      	nop.n
4008bfb4:	f03d      	nop.n
4008bfb6:	f03d      	nop.n
4008bfb8:	0020f0        	nop
4008bfbb:	d33331        	l32r	a3, 40080c88 <_init_end+0x888>
4008bfbe:	03ad      	mov.n	a10, a3
4008bfc0:	f59865        	call8	40081948 <esp_dport_access_reg_read>
4008bfc3:	10aa40        	and	a10, a10, a4
4008bfc6:	0020c0        	memw
4008bfc9:	03a9      	s32i.n	a10, a3, 0
4008bfcb:	f03d      	nop.n
4008bfcd:	f03d      	nop.n
4008bfcf:	f03d      	nop.n
4008bfd1:	0020f0        	nop
4008bfd4:	d32e31        	l32r	a3, 40080c8c <_init_end+0x88c>
4008bfd7:	03ad      	mov.n	a10, a3
4008bfd9:	f596e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfdc:	ffae82        	movi	a8, 0xfffffeff
4008bfdf:	10aa80        	and	a10, a10, a8
4008bfe2:	0020c0        	memw
4008bfe5:	03a9      	s32i.n	a10, a3, 0
4008bfe7:	03ad      	mov.n	a10, a3
4008bfe9:	f595e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfec:	10aa40        	and	a10, a10, a4
4008bfef:	0020c0        	memw
4008bff2:	03a9      	s32i.n	a10, a3, 0
4008bff4:	02f297        	bbsi	a2, 25, 4008bffa <rtc_init+0x1c2>
4008bff7:	00b2c6        	j	4008c2c6 <rtc_init+0x48e>
4008bffa:	f03d      	nop.n
4008bffc:	f03d      	nop.n
4008bffe:	f03d      	nop.n
4008c000:	f03d      	nop.n
4008c002:	d32331        	l32r	a3, 40080c90 <_init_end+0x890>
4008c005:	0020c0        	memw
4008c008:	0348      	l32i.n	a4, a3, 0
4008c00a:	d31281        	l32r	a8, 40080c54 <_init_end+0x854>
4008c00d:	108480        	and	a8, a4, a8
4008c010:	0020c0        	memw
4008c013:	0389      	s32i.n	a8, a3, 0
4008c015:	f03d      	nop.n
4008c017:	f03d      	nop.n
4008c019:	f03d      	nop.n
4008c01b:	f03d      	nop.n
4008c01d:	d1cd81        	l32r	a8, 40080754 <_init_end+0x354>
4008c020:	0020c0        	memw
4008c023:	0838      	l32i.n	a3, a8, 0
4008c025:	d31b91        	l32r	a9, 40080c94 <_init_end+0x894>
4008c028:	109390        	and	a9, a3, a9
4008c02b:	0020c0        	memw
4008c02e:	0899      	s32i.n	a9, a8, 0
4008c030:	f03d      	nop.n
4008c032:	f03d      	nop.n
4008c034:	f03d      	nop.n
4008c036:	f03d      	nop.n
4008c038:	0020c0        	memw
4008c03b:	0838      	l32i.n	a3, a8, 0
4008c03d:	d31691        	l32r	a9, 40080c98 <_init_end+0x898>
4008c040:	109390        	and	a9, a3, a9
4008c043:	0020c0        	memw
4008c046:	0899      	s32i.n	a9, a8, 0
4008c048:	f03d      	nop.n
4008c04a:	f03d      	nop.n
4008c04c:	f03d      	nop.n
4008c04e:	f03d      	nop.n
4008c050:	0020c0        	memw
4008c053:	0838      	l32i.n	a3, a8, 0
4008c055:	d31191        	l32r	a9, 40080c9c <_init_end+0x89c>
4008c058:	109390        	and	a9, a3, a9
4008c05b:	0020c0        	memw
4008c05e:	0899      	s32i.n	a9, a8, 0
4008c060:	f03d      	nop.n
4008c062:	f03d      	nop.n
4008c064:	f03d      	nop.n
4008c066:	f03d      	nop.n
4008c068:	0020c0        	memw
4008c06b:	0838      	l32i.n	a3, a8, 0
4008c06d:	d30c91        	l32r	a9, 40080ca0 <_init_end+0x8a0>
4008c070:	109390        	and	a9, a3, a9
4008c073:	0020c0        	memw
4008c076:	0899      	s32i.n	a9, a8, 0
4008c078:	f03d      	nop.n
4008c07a:	f03d      	nop.n
4008c07c:	f03d      	nop.n
4008c07e:	f03d      	nop.n
4008c080:	0020c0        	memw
4008c083:	0838      	l32i.n	a3, a8, 0
4008c085:	d30791        	l32r	a9, 40080ca4 <_init_end+0x8a4>
4008c088:	209390        	or	a9, a3, a9
4008c08b:	0020c0        	memw
4008c08e:	0899      	s32i.n	a9, a8, 0
4008c090:	f03d      	nop.n
4008c092:	f03d      	nop.n
4008c094:	f03d      	nop.n
4008c096:	f03d      	nop.n
4008c098:	0020c0        	memw
4008c09b:	0838      	l32i.n	a3, a8, 0
4008c09d:	d30291        	l32r	a9, 40080ca8 <_init_end+0x8a8>
4008c0a0:	209390        	or	a9, a3, a9
4008c0a3:	0020c0        	memw
4008c0a6:	0899      	s32i.n	a9, a8, 0
4008c0a8:	f03d      	nop.n
4008c0aa:	f03d      	nop.n
4008c0ac:	f03d      	nop.n
4008c0ae:	f03d      	nop.n
4008c0b0:	0020c0        	memw
4008c0b3:	0838      	l32i.n	a3, a8, 0
4008c0b5:	d1ed91        	l32r	a9, 4008086c <_init_end+0x46c>
4008c0b8:	209390        	or	a9, a3, a9
4008c0bb:	0020c0        	memw
4008c0be:	0899      	s32i.n	a9, a8, 0
4008c0c0:	f03d      	nop.n
4008c0c2:	f03d      	nop.n
4008c0c4:	f03d      	nop.n
4008c0c6:	f03d      	nop.n
4008c0c8:	d2e291        	l32r	a9, 40080c50 <_init_end+0x850>
4008c0cb:	0020c0        	memw
4008c0ce:	0938      	l32i.n	a3, a9, 0
4008c0d0:	d2f7a1        	l32r	a10, 40080cac <_init_end+0x8ac>
4008c0d3:	10a3a0        	and	a10, a3, a10
4008c0d6:	0020c0        	memw
4008c0d9:	09a9      	s32i.n	a10, a9, 0
4008c0db:	f03d      	nop.n
4008c0dd:	f03d      	nop.n
4008c0df:	f03d      	nop.n
4008c0e1:	f03d      	nop.n
4008c0e3:	0020c0        	memw
4008c0e6:	0938      	l32i.n	a3, a9, 0
4008c0e8:	d2f2a1        	l32r	a10, 40080cb0 <_init_end+0x8b0>
4008c0eb:	20a3a0        	or	a10, a3, a10
4008c0ee:	0020c0        	memw
4008c0f1:	09a9      	s32i.n	a10, a9, 0
4008c0f3:	f03d      	nop.n
4008c0f5:	f03d      	nop.n
4008c0f7:	f03d      	nop.n
4008c0f9:	f03d      	nop.n
4008c0fb:	0020c0        	memw
4008c0fe:	0838      	l32i.n	a3, a8, 0
4008c100:	d2df91        	l32r	a9, 40080c7c <_init_end+0x87c>
4008c103:	109390        	and	a9, a3, a9
4008c106:	0020c0        	memw
4008c109:	0899      	s32i.n	a9, a8, 0
4008c10b:	f03d      	nop.n
4008c10d:	f03d      	nop.n
4008c10f:	f03d      	nop.n
4008c111:	f03d      	nop.n
4008c113:	0020c0        	memw
4008c116:	0838      	l32i.n	a3, a8, 0
4008c118:	ffad92        	movi	a9, 0xfffffdff
4008c11b:	109390        	and	a9, a3, a9
4008c11e:	0020c0        	memw
4008c121:	0899      	s32i.n	a9, a8, 0
4008c123:	f03d      	nop.n
4008c125:	f03d      	nop.n
4008c127:	f03d      	nop.n
4008c129:	f03d      	nop.n
4008c12b:	d2d181        	l32r	a8, 40080c70 <_init_end+0x870>
4008c12e:	0020c0        	memw
4008c131:	0838      	l32i.n	a3, a8, 0
4008c133:	d0fb91        	l32r	a9, 40080520 <_init_end+0x120>
4008c136:	109390        	and	a9, a3, a9
4008c139:	0020c0        	memw
4008c13c:	0899      	s32i.n	a9, a8, 0
4008c13e:	f03d      	nop.n
4008c140:	f03d      	nop.n
4008c142:	f03d      	nop.n
4008c144:	f03d      	nop.n
4008c146:	0020c0        	memw
4008c149:	0838      	l32i.n	a3, a8, 0
4008c14b:	d2da91        	l32r	a9, 40080cb4 <_init_end+0x8b4>
4008c14e:	109390        	and	a9, a3, a9
4008c151:	0020c0        	memw
4008c154:	0899      	s32i.n	a9, a8, 0
4008c156:	1a72a7        	bbci	a2, 26, 4008c174 <rtc_init+0x33c>
4008c159:	f03d      	nop.n
4008c15b:	f03d      	nop.n
4008c15d:	f03d      	nop.n
4008c15f:	f03d      	nop.n
4008c161:	0020c0        	memw
4008c164:	0848      	l32i.n	a4, a8, 0
4008c166:	d0ff21        	l32r	a2, 40080564 <_init_end+0x164>
4008c169:	202420        	or	a2, a4, a2
4008c16c:	0020c0        	memw
4008c16f:	0829      	s32i.n	a2, a8, 0
4008c171:	000486        	j	4008c187 <rtc_init+0x34f>
4008c174:	d2bf31        	l32r	a3, 40080c70 <_init_end+0x870>
4008c177:	0020c0        	memw
4008c17a:	0348      	l32i.n	a4, a3, 0
4008c17c:	d11821        	l32r	a2, 400805dc <_init_end+0x1dc>
4008c17f:	102420        	and	a2, a4, a2
4008c182:	0020c0        	memw
4008c185:	0329      	s32i.n	a2, a3, 0
4008c187:	f03d      	nop.n
4008c189:	f03d      	nop.n
4008c18b:	f03d      	nop.n
4008c18d:	f03d      	nop.n
4008c18f:	d2ca21        	l32r	a2, 40080cb8 <_init_end+0x8b8>
4008c192:	0020c0        	memw
4008c195:	0238      	l32i.n	a3, a2, 0
4008c197:	f86c      	movi.n	a8, -17
4008c199:	108380        	and	a8, a3, a8
4008c19c:	0020c0        	memw
4008c19f:	0289      	s32i.n	a8, a2, 0
4008c1a1:	f03d      	nop.n
4008c1a3:	f03d      	nop.n
4008c1a5:	f03d      	nop.n
4008c1a7:	f03d      	nop.n
4008c1a9:	0020c0        	memw
4008c1ac:	0238      	l32i.n	a3, a2, 0
4008c1ae:	d2c381        	l32r	a8, 40080cbc <_init_end+0x8bc>
4008c1b1:	108380        	and	a8, a3, a8
4008c1b4:	0020c0        	memw
4008c1b7:	0289      	s32i.n	a8, a2, 0
4008c1b9:	f03d      	nop.n
4008c1bb:	f03d      	nop.n
4008c1bd:	f03d      	nop.n
4008c1bf:	f03d      	nop.n
4008c1c1:	0020c0        	memw
4008c1c4:	0238      	l32i.n	a3, a2, 0
4008c1c6:	d2be81        	l32r	a8, 40080cc0 <_init_end+0x8c0>
4008c1c9:	108380        	and	a8, a3, a8
4008c1cc:	0020c0        	memw
4008c1cf:	0289      	s32i.n	a8, a2, 0
4008c1d1:	f03d      	nop.n
4008c1d3:	f03d      	nop.n
4008c1d5:	f03d      	nop.n
4008c1d7:	f03d      	nop.n
4008c1d9:	0020c0        	memw
4008c1dc:	0238      	l32i.n	a3, a2, 0
4008c1de:	d2b981        	l32r	a8, 40080cc4 <_init_end+0x8c4>
4008c1e1:	108380        	and	a8, a3, a8
4008c1e4:	0020c0        	memw
4008c1e7:	0289      	s32i.n	a8, a2, 0
4008c1e9:	f03d      	nop.n
4008c1eb:	f03d      	nop.n
4008c1ed:	f03d      	nop.n
4008c1ef:	f03d      	nop.n
4008c1f1:	d2b521        	l32r	a2, 40080cc8 <_init_end+0x8c8>
4008c1f4:	0020c0        	memw
4008c1f7:	0238      	l32i.n	a3, a2, 0
4008c1f9:	d2b481        	l32r	a8, 40080ccc <_init_end+0x8cc>
4008c1fc:	108380        	and	a8, a3, a8
4008c1ff:	0020c0        	memw
4008c202:	0289      	s32i.n	a8, a2, 0
4008c204:	f03d      	nop.n
4008c206:	f03d      	nop.n
4008c208:	f03d      	nop.n
4008c20a:	f03d      	nop.n
4008c20c:	0020c0        	memw
4008c20f:	0238      	l32i.n	a3, a2, 0
4008c211:	d2a281        	l32r	a8, 40080c9c <_init_end+0x89c>
4008c214:	108380        	and	a8, a3, a8
4008c217:	0020c0        	memw
4008c21a:	0289      	s32i.n	a8, a2, 0
4008c21c:	f03d      	nop.n
4008c21e:	f03d      	nop.n
4008c220:	f03d      	nop.n
4008c222:	f03d      	nop.n
4008c224:	d2ab81        	l32r	a8, 40080cd0 <_init_end+0x8d0>
4008c227:	0020c0        	memw
4008c22a:	0838      	l32i.n	a3, a8, 0
4008c22c:	d0bd91        	l32r	a9, 40080520 <_init_end+0x120>
4008c22f:	109390        	and	a9, a3, a9
4008c232:	0020c0        	memw
4008c235:	0899      	s32i.n	a9, a8, 0
4008c237:	f03d      	nop.n
4008c239:	f03d      	nop.n
4008c23b:	f03d      	nop.n
4008c23d:	f03d      	nop.n
4008c23f:	0020c0        	memw
4008c242:	0838      	l32i.n	a3, a8, 0
4008c244:	d29c91        	l32r	a9, 40080cb4 <_init_end+0x8b4>
4008c247:	109390        	and	a9, a3, a9
4008c24a:	0020c0        	memw
4008c24d:	0899      	s32i.n	a9, a8, 0
4008c24f:	f03d      	nop.n
4008c251:	f03d      	nop.n
4008c253:	f03d      	nop.n
4008c255:	f03d      	nop.n
4008c257:	0020c0        	memw
4008c25a:	0838      	l32i.n	a3, a8, 0
4008c25c:	d29e91        	l32r	a9, 40080cd4 <_init_end+0x8d4>
4008c25f:	109390        	and	a9, a3, a9
4008c262:	0020c0        	memw
4008c265:	0899      	s32i.n	a9, a8, 0
4008c267:	f03d      	nop.n
4008c269:	f03d      	nop.n
4008c26b:	f03d      	nop.n
4008c26d:	f03d      	nop.n
4008c26f:	0020c0        	memw
4008c272:	0238      	l32i.n	a3, a2, 0
4008c274:	a97c      	movi.n	a9, -6
4008c276:	109390        	and	a9, a3, a9
4008c279:	0020c0        	memw
4008c27c:	0299      	s32i.n	a9, a2, 0
4008c27e:	f03d      	nop.n
4008c280:	f03d      	nop.n
4008c282:	f03d      	nop.n
4008c284:	f03d      	nop.n
4008c286:	0020c0        	memw
4008c289:	0238      	l32i.n	a3, a2, 0
4008c28b:	dfaf92        	movi	a9, -33
4008c28e:	109390        	and	a9, a3, a9
4008c291:	0020c0        	memw
4008c294:	0299      	s32i.n	a9, a2, 0
4008c296:	f03d      	nop.n
4008c298:	f03d      	nop.n
4008c29a:	f03d      	nop.n
4008c29c:	f03d      	nop.n
4008c29e:	0020c0        	memw
4008c2a1:	0838      	l32i.n	a3, a8, 0
4008c2a3:	d28d21        	l32r	a2, 40080cd8 <_init_end+0x8d8>
4008c2a6:	102320        	and	a2, a3, a2
4008c2a9:	0020c0        	memw
4008c2ac:	0829      	s32i.n	a2, a8, 0
4008c2ae:	f03d      	nop.n
4008c2b0:	f03d      	nop.n
4008c2b2:	f03d      	nop.n
4008c2b4:	f03d      	nop.n
4008c2b6:	0020c0        	memw
4008c2b9:	0838      	l32i.n	a3, a8, 0
4008c2bb:	d28821        	l32r	a2, 40080cdc <_init_end+0x8dc>
4008c2be:	102320        	and	a2, a3, a2
4008c2c1:	0020c0        	memw
4008c2c4:	0829      	s32i.n	a2, a8, 0
4008c2c6:	f01d      	retw.n

4008c2c8 <rtc_clk_cal_internal>:
4008c2c8:	004136        	entry	a1, 32
4008c2cb:	d28841        	l32r	a4, 40080cec <_init_end+0x8ec>
4008c2ce:	0db437        	bgeu	a4, a3, 4008c2df <rtc_clk_cal_internal+0x17>
4008c2d1:	d287d1        	l32r	a13, 40080cf0 <_init_end+0x8f0>
4008c2d4:	d288c1        	l32r	a12, 40080cf4 <_init_end+0x8f4>
4008c2d7:	eb2c      	movi.n	a11, 46
4008c2d9:	d287a1        	l32r	a10, 40080cf8 <_init_end+0x8f8>
4008c2dc:	4e7ee5        	call8	400daacc <__assert_func>
4008c2df:	d26c41        	l32r	a4, 40080c90 <_init_end+0x890>
4008c2e2:	0020c0        	memw
4008c2e5:	0448      	l32i.n	a4, a4, 0
4008c2e7:	044840        	extui	a4, a4, 8, 1
4008c2ea:	fec292        	addi	a9, a2, -2
4008c2ed:	180c      	movi.n	a8, 1
4008c2ef:	050c      	movi.n	a5, 0
4008c2f1:	056d      	mov.n	a6, a5
4008c2f3:	836890        	moveqz	a6, a8, a9
4008c2f6:	938540        	movnez	a8, a5, a4
4008c2f9:	130867        	bnone	a8, a6, 4008c310 <rtc_clk_cal_internal+0x48>
4008c2fc:	d26581        	l32r	a8, 40080c90 <_init_end+0x890>
4008c2ff:	0020c0        	memw
4008c302:	0898      	l32i.n	a9, a8, 0
4008c304:	00a152        	movi	a5, 0x100
4008c307:	205950        	or	a5, a9, a5
4008c30a:	0020c0        	memw
4008c30d:	006852        	s32i	a5, a8, 0
4008c310:	1a1266        	bnei	a2, 1, 4008c32e <rtc_clk_cal_internal+0x66>
4008c313:	f03d      	nop.n
4008c315:	f03d      	nop.n
4008c317:	f03d      	nop.n
4008c319:	f03d      	nop.n
4008c31b:	d25d81        	l32r	a8, 40080c90 <_init_end+0x890>
4008c31e:	0020c0        	memw
4008c321:	0898      	l32i.n	a9, a8, 0
4008c323:	00a252        	movi	a5, 0x200
4008c326:	205950        	or	a5, a9, a5
4008c329:	0020c0        	memw
4008c32c:	0859      	s32i.n	a5, a8, 0
4008c32e:	f03d      	nop.n
4008c330:	f03d      	nop.n
4008c332:	f03d      	nop.n
4008c334:	f03d      	nop.n
4008c336:	d27181        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c339:	0020c0        	memw
4008c33c:	08a8      	l32i.n	a10, a8, 0
4008c33e:	d27091        	l32r	a9, 40080d00 <_init_end+0x900>
4008c341:	10aa90        	and	a10, a10, a9
4008c344:	149020        	extui	a9, a2, 0, 2
4008c347:	119930        	slli	a9, a9, 13
4008c34a:	209a90        	or	a9, a10, a9
4008c34d:	0020c0        	memw
4008c350:	0899      	s32i.n	a9, a8, 0
4008c352:	f03d      	nop.n
4008c354:	f03d      	nop.n
4008c356:	f03d      	nop.n
4008c358:	f03d      	nop.n
4008c35a:	0020c0        	memw
4008c35d:	0858      	l32i.n	a5, a8, 0
4008c35f:	d25f91        	l32r	a9, 40080cdc <_init_end+0x8dc>
4008c362:	109590        	and	a9, a5, a9
4008c365:	0020c0        	memw
4008c368:	0899      	s32i.n	a9, a8, 0
4008c36a:	f03d      	nop.n
4008c36c:	f03d      	nop.n
4008c36e:	f03d      	nop.n
4008c370:	f03d      	nop.n
4008c372:	0020c0        	memw
4008c375:	08a8      	l32i.n	a10, a8, 0
4008c377:	d26391        	l32r	a9, 40080d04 <_init_end+0x904>
4008c37a:	10aa90        	and	a10, a10, a9
4008c37d:	e49030        	extui	a9, a3, 0, 15
4008c380:	119900        	slli	a9, a9, 16
4008c383:	209a90        	or	a9, a10, a9
4008c386:	0020c0        	memw
4008c389:	0899      	s32i.n	a9, a8, 0
4008c38b:	f03d      	nop.n
4008c38d:	f03d      	nop.n
4008c38f:	f03d      	nop.n
4008c391:	f03d      	nop.n
4008c393:	d23f51        	l32r	a5, 40080c90 <_init_end+0x890>
4008c396:	0020c0        	memw
4008c399:	0588      	l32i.n	a8, a5, 0
4008c39b:	158e80        	extui	a8, a8, 30, 2
4008c39e:	272226        	beqi	a2, 2, 4008c3c9 <rtc_clk_cal_internal+0x101>
4008c3a1:	1b0c      	movi.n	a11, 1
4008c3a3:	090c      	movi.n	a9, 0
4008c3a5:	095d      	mov.n	a5, a9
4008c3a7:	835b20        	moveqz	a5, a11, a2
4008c3aa:	745050        	extui	a5, a5, 0, 8
4008c3ad:	a80b      	addi.n	a10, a8, -1
4008c3af:	839ba0        	moveqz	a9, a11, a10
4008c3b2:	1a8957        	bany	a9, a5, 4008c3d0 <rtc_clk_cal_internal+0x108>
4008c3b5:	1f12b7        	beq	a2, a11, 4008c3d8 <rtc_clk_cal_internal+0x110>
4008c3b8:	fec882        	addi	a8, a8, -2
4008c3bb:	090c      	movi.n	a9, 0
4008c3bd:	839b80        	moveqz	a9, a11, a8
4008c3c0:	1d0957        	bnone	a9, a5, 4008c3e1 <rtc_clk_cal_internal+0x119>
4008c3c3:	d248c1        	l32r	a12, 40080ce4 <_init_end+0x8e4>
4008c3c6:	000686        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3c9:	d245c1        	l32r	a12, 40080ce0 <_init_end+0x8e0>
4008c3cc:	000506        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3cf:	44c100        	extui	a12, a0, 1, 5
4008c3d2:	0346d2        	s8i	a13, a6, 3
4008c3d5:	000000        	ill
4008c3d8:	d243c1        	l32r	a12, 40080ce4 <_init_end+0x8e4>
4008c3db:	000146        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3de:	000000        	ill
4008c3e1:	d241c1        	l32r	a12, 40080ce8 <_init_end+0x8e8>
4008c3e4:	d032a1        	l32r	a10, 400804ac <_init_end+0xac>
4008c3e7:	a2b3a0        	muluh	a11, a3, a10
4008c3ea:	0d0c      	movi.n	a13, 0
4008c3ec:	82a3a0        	mull	a10, a3, a10
4008c3ef:	d08d81        	l32r	a8, 40080624 <_init_end+0x224>
4008c3f2:	0008e0        	callx8	a8
4008c3f5:	0a3d      	mov.n	a3, a10
4008c3f7:	0a5d      	mov.n	a5, a10
4008c3f9:	006c25        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008c3fc:	1acc      	bnez.n	a10, 4008c401 <rtc_clk_cal_internal+0x139>
4008c3fe:	28a0a2        	movi	a10, 40
4008c401:	d24181        	l32r	a8, 40080d08 <_init_end+0x908>
4008c404:	c2a8a0        	quou	a10, a8, a10
4008c407:	1a35a7        	bltu	a5, a10, 4008c425 <rtc_clk_cal_internal+0x15d>
4008c40a:	f79265        	call8	40083d30 <esp_log_timestamp>
4008c40d:	d23fc1        	l32r	a12, 40080d0c <_init_end+0x90c>
4008c410:	20baa0        	or	a11, a10, a10
4008c413:	d23fa1        	l32r	a10, 40080d10 <_init_end+0x910>
4008c416:	d02081        	l32r	a8, 40080498 <_init_end+0x98>
4008c419:	0008e0        	callx8	a8
4008c41c:	00a022        	movi	a2, 0
4008c41f:	000090        	retw
4008c422:	000000        	ill
4008c425:	d23551        	l32r	a5, 40080cfc <_init_end+0x8fc>
4008c428:	0020c0        	memw
4008c42b:	0598      	l32i.n	a9, a5, 0
4008c42d:	d03c81        	l32r	a8, 40080520 <_init_end+0x120>
4008c430:	108980        	and	a8, a9, a8
4008c433:	0020c0        	memw
4008c436:	0589      	s32i.n	a8, a5, 0
4008c438:	f03d      	nop.n
4008c43a:	f03d      	nop.n
4008c43c:	f03d      	nop.n
4008c43e:	f03d      	nop.n
4008c440:	0020c0        	memw
4008c443:	0598      	l32i.n	a9, a5, 0
4008c445:	d08d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008c448:	208980        	or	a8, a9, a8
4008c44b:	0020c0        	memw
4008c44e:	0589      	s32i.n	a8, a5, 0
4008c450:	03ad      	mov.n	a10, a3
4008c452:	d01481        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c455:	0008e0        	callx8	a8
4008c458:	000306        	j	4008c468 <rtc_clk_cal_internal+0x1a0>
4008c45b:	000000        	ill
4008c45e:	330b      	addi.n	a3, a3, -1
4008c460:	1a0c      	movi.n	a10, 1
4008c462:	d01081        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c465:	0008e0        	callx8	a8
4008c468:	d22581        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c46b:	0020c0        	memw
4008c46e:	0888      	l32i.n	a8, a8, 0
4008c470:	02e8f7        	bbsi	a8, 15, 4008c476 <rtc_clk_cal_internal+0x1ae>
4008c473:	e713e6        	bgei	a3, 1, 4008c45e <rtc_clk_cal_internal+0x196>
4008c476:	d20651        	l32r	a5, 40080c90 <_init_end+0x890>
4008c479:	0020c0        	memw
4008c47c:	0598      	l32i.n	a9, a5, 0
4008c47e:	ffae82        	movi	a8, 0xfffffeff
4008c481:	108980        	and	a8, a9, a8
4008c484:	044040        	extui	a4, a4, 0, 1
4008c487:	114480        	slli	a4, a4, 8
4008c48a:	204480        	or	a4, a4, a8
4008c48d:	0020c0        	memw
4008c490:	0549      	s32i.n	a4, a5, 0
4008c492:	171266        	bnei	a2, 1, 4008c4ad <rtc_clk_cal_internal+0x1e5>
4008c495:	054d      	mov.n	a4, a5
4008c497:	f03d      	nop.n
4008c499:	f03d      	nop.n
4008c49b:	f03d      	nop.n
4008c49d:	0020c0        	memw
4008c4a0:	0558      	l32i.n	a5, a5, 0
4008c4a2:	ffad22        	movi	a2, 0xfffffdff
4008c4a5:	102520        	and	a2, a5, a2
4008c4a8:	0020c0        	memw
4008c4ab:	0429      	s32i.n	a2, a4, 0
4008c4ad:	339c      	beqz.n	a3, 4008c4c4 <rtc_clk_cal_internal+0x1fc>
4008c4af:	f03d      	nop.n
4008c4b1:	f03d      	nop.n
4008c4b3:	f03d      	nop.n
4008c4b5:	f03d      	nop.n
4008c4b7:	d21721        	l32r	a2, 40080d14 <_init_end+0x914>
4008c4ba:	0020c0        	memw
4008c4bd:	0228      	l32i.n	a2, a2, 0
4008c4bf:	412720        	srli	a2, a2, 7
4008c4c2:	f01d      	retw.n
4008c4c4:	020c      	movi.n	a2, 0
4008c4c6:	f01d      	retw.n

4008c4c8 <rtc_clk_cal>:
4008c4c8:	004136        	entry	a1, 32
4008c4cb:	005f25        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008c4ce:	204aa0        	or	a4, a10, a10
4008c4d1:	20b330        	or	a11, a3, a3
4008c4d4:	02ad      	mov.n	a10, a2
4008c4d6:	ffdf25        	call8	4008c2c8 <rtc_clk_cal_internal>
4008c4d9:	82c430        	mull	a12, a4, a3
4008c4dc:	a2d430        	muluh	a13, a4, a3
4008c4df:	413da0        	srli	a3, a10, 13
4008c4e2:	01aad0        	slli	a10, a10, 19
4008c4e5:	014d10        	slli	a4, a13, 31
4008c4e8:	4191c0        	srli	a9, a12, 1
4008c4eb:	209490        	or	a9, a4, a9
4008c4ee:	41e1d0        	srli	a14, a13, 1
4008c4f1:	9a9a      	add.n	a9, a10, a9
4008c4f3:	180c      	movi.n	a8, 1
4008c4f5:	0139a7        	bltu	a9, a10, 4008c4fa <rtc_clk_cal+0x32>
4008c4f8:	080c      	movi.n	a8, 0
4008c4fa:	e3ea      	add.n	a14, a3, a14
4008c4fc:	88ea      	add.n	a8, a8, a14
4008c4fe:	a90b      	addi.n	a10, a9, -1
4008c500:	01a0b2        	movi	a11, 1
4008c503:	013a97        	bltu	a10, a9, 4008c508 <rtc_clk_cal+0x40>
4008c506:	0b0c      	movi.n	a11, 0
4008c508:	880b      	addi.n	a8, a8, -1
4008c50a:	bb8a      	add.n	a11, a11, a8
4008c50c:	d04681        	l32r	a8, 40080624 <_init_end+0x224>
4008c50f:	0008e0        	callx8	a8
4008c512:	0a2d      	mov.n	a2, a10
4008c514:	f01d      	retw.n
	...

4008c518 <rtc_time_get>:
4008c518:	004136        	entry	a1, 32
4008c51b:	d1ff91        	l32r	a9, 40080d18 <_init_end+0x918>
4008c51e:	0020c0        	memw
4008c521:	0928      	l32i.n	a2, a9, 0
4008c523:	d05681        	l32r	a8, 4008067c <_init_end+0x27c>
4008c526:	208280        	or	a8, a2, a8
4008c529:	0020c0        	memw
4008c52c:	0989      	s32i.n	a8, a9, 0
4008c52e:	0001c6        	j	4008c539 <rtc_time_get+0x21>
4008c531:	1a0c      	movi.n	a10, 1
4008c533:	cfdc81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c536:	0008e0        	callx8	a8
4008c539:	d1f781        	l32r	a8, 40080d18 <_init_end+0x918>
4008c53c:	0020c0        	memw
4008c53f:	0888      	l32i.n	a8, a8, 0
4008c541:	ec78e7        	bbci	a8, 30, 4008c531 <rtc_time_get+0x19>
4008c544:	d1f691        	l32r	a9, 40080d1c <_init_end+0x91c>
4008c547:	0020c0        	memw
4008c54a:	0928      	l32i.n	a2, a9, 0
4008c54c:	081c      	movi.n	a8, 16
4008c54e:	208280        	or	a8, a2, a8
4008c551:	0020c0        	memw
4008c554:	0989      	s32i.n	a8, a9, 0
4008c556:	f03d      	nop.n
4008c558:	f03d      	nop.n
4008c55a:	f03d      	nop.n
4008c55c:	f03d      	nop.n
4008c55e:	d1f021        	l32r	a2, 40080d20 <_init_end+0x920>
4008c561:	0020c0        	memw
4008c564:	0228      	l32i.n	a2, a2, 0
4008c566:	d1ef31        	l32r	a3, 40080d24 <_init_end+0x924>
4008c569:	0020c0        	memw
4008c56c:	0338      	l32i.n	a3, a3, 0
4008c56e:	f01d      	retw.n

4008c570 <rtc_clk_wait_for_slow_cycle>:
4008c570:	004136        	entry	a1, 32
4008c573:	d1e281        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c576:	0020c0        	memw
4008c579:	08a8      	l32i.n	a10, a8, 0
4008c57b:	d1eb91        	l32r	a9, 40080d28 <_init_end+0x928>
4008c57e:	109a90        	and	a9, a10, a9
4008c581:	0020c0        	memw
4008c584:	0899      	s32i.n	a9, a8, 0
4008c586:	f03d      	nop.n
4008c588:	f03d      	nop.n
4008c58a:	f03d      	nop.n
4008c58c:	f03d      	nop.n
4008c58e:	0020c0        	memw
4008c591:	08a8      	l32i.n	a10, a8, 0
4008c593:	d1e691        	l32r	a9, 40080d2c <_init_end+0x92c>
4008c596:	109a90        	and	a9, a10, a9
4008c599:	0020c0        	memw
4008c59c:	0899      	s32i.n	a9, a8, 0
4008c59e:	f03d      	nop.n
4008c5a0:	f03d      	nop.n
4008c5a2:	f03d      	nop.n
4008c5a4:	f03d      	nop.n
4008c5a6:	0020c0        	memw
4008c5a9:	08a8      	l32i.n	a10, a8, 0
4008c5ab:	d1d591        	l32r	a9, 40080d00 <_init_end+0x900>
4008c5ae:	109a90        	and	a9, a10, a9
4008c5b1:	0020c0        	memw
4008c5b4:	0899      	s32i.n	a9, a8, 0
4008c5b6:	f03d      	nop.n
4008c5b8:	f03d      	nop.n
4008c5ba:	f03d      	nop.n
4008c5bc:	f03d      	nop.n
4008c5be:	0020c0        	memw
4008c5c1:	08a8      	l32i.n	a10, a8, 0
4008c5c3:	d1d091        	l32r	a9, 40080d04 <_init_end+0x904>
4008c5c6:	109a90        	and	a9, a10, a9
4008c5c9:	0020c0        	memw
4008c5cc:	0899      	s32i.n	a9, a8, 0
4008c5ce:	f03d      	nop.n
4008c5d0:	f03d      	nop.n
4008c5d2:	f03d      	nop.n
4008c5d4:	f03d      	nop.n
4008c5d6:	0020c0        	memw
4008c5d9:	08a8      	l32i.n	a10, a8, 0
4008c5db:	d02891        	l32r	a9, 4008067c <_init_end+0x27c>
4008c5de:	209a90        	or	a9, a10, a9
4008c5e1:	0020c0        	memw
4008c5e4:	006892        	s32i	a9, a8, 0
4008c5e7:	01a0a2        	movi	a10, 1
4008c5ea:	cfae81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c5ed:	0008e0        	callx8	a8
4008c5f0:	000206        	j	4008c5fc <rtc_clk_wait_for_slow_cycle+0x8c>
4008c5f3:	1a0c00        	sub.s	f0, f12, f0
4008c5f6:	cfab81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c5f9:	0008e0        	callx8	a8
4008c5fc:	d1c081        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c5ff:	0020c0        	memw
4008c602:	0888      	l32i.n	a8, a8, 0
4008c604:	ec68f7        	bbci	a8, 15, 4008c5f4 <rtc_clk_wait_for_slow_cycle+0x84>
4008c607:	f01d      	retw.n
4008c609:	000000        	ill

4008c60c <rtc_clk_32k_enable_common>:
4008c60c:	004136        	entry	a1, 32
4008c60f:	d1c881        	l32r	a8, 40080d30 <_init_end+0x930>
4008c612:	0020c0        	memw
4008c615:	08a8      	l32i.n	a10, a8, 0
4008c617:	d1c791        	l32r	a9, 40080d34 <_init_end+0x934>
4008c61a:	109a90        	and	a9, a10, a9
4008c61d:	0020c0        	memw
4008c620:	0899      	s32i.n	a9, a8, 0
4008c622:	f03d      	nop.n
4008c624:	f03d      	nop.n
4008c626:	f03d      	nop.n
4008c628:	f03d      	nop.n
4008c62a:	0020c0        	memw
4008c62d:	08a8      	l32i.n	a10, a8, 0
4008c62f:	d1c291        	l32r	a9, 40080d38 <_init_end+0x938>
4008c632:	209a90        	or	a9, a10, a9
4008c635:	0020c0        	memw
4008c638:	0899      	s32i.n	a9, a8, 0
4008c63a:	f03d      	nop.n
4008c63c:	f03d      	nop.n
4008c63e:	f03d      	nop.n
4008c640:	f03d      	nop.n
4008c642:	0020c0        	memw
4008c645:	08a8      	l32i.n	a10, a8, 0
4008c647:	d1bd91        	l32r	a9, 40080d3c <_init_end+0x93c>
4008c64a:	109a90        	and	a9, a10, a9
4008c64d:	142020        	extui	a2, a2, 0, 2
4008c650:	0122c0        	slli	a2, a2, 20
4008c653:	209290        	or	a9, a2, a9
4008c656:	0020c0        	memw
4008c659:	0899      	s32i.n	a9, a8, 0
4008c65b:	f03d      	nop.n
4008c65d:	f03d      	nop.n
4008c65f:	f03d      	nop.n
4008c661:	f03d      	nop.n
4008c663:	0020c0        	memw
4008c666:	0828      	l32i.n	a2, a8, 0
4008c668:	796c      	movi.n	a9, -25
4008c66a:	109290        	and	a9, a2, a9
4008c66d:	143030        	extui	a3, a3, 0, 2
4008c670:	1133d0        	slli	a3, a3, 3
4008c673:	209390        	or	a9, a3, a9
4008c676:	0020c0        	memw
4008c679:	0899      	s32i.n	a9, a8, 0
4008c67b:	f03d      	nop.n
4008c67d:	f03d      	nop.n
4008c67f:	f03d      	nop.n
4008c681:	f03d      	nop.n
4008c683:	0020c0        	memw
4008c686:	0828      	l32i.n	a2, a8, 0
4008c688:	997c      	movi.n	a9, -7
4008c68a:	109290        	and	a9, a2, a9
4008c68d:	144040        	extui	a4, a4, 0, 2
4008c690:	1144f0        	slli	a4, a4, 1
4008c693:	209490        	or	a9, a4, a9
4008c696:	0020c0        	memw
4008c699:	0899      	s32i.n	a9, a8, 0
4008c69b:	f03d      	nop.n
4008c69d:	f03d      	nop.n
4008c69f:	f03d      	nop.n
4008c6a1:	f03d      	nop.n
4008c6a3:	0020c0        	memw
4008c6a6:	0828      	l32i.n	a2, a8, 0
4008c6a8:	d1a691        	l32r	a9, 40080d40 <_init_end+0x940>
4008c6ab:	209290        	or	a9, a2, a9
4008c6ae:	0020c0        	memw
4008c6b1:	0899      	s32i.n	a9, a8, 0
4008c6b3:	f01d      	retw.n
4008c6b5:	000000        	ill

4008c6b8 <rtc_clk_bbpll_disable>:
4008c6b8:	004136        	entry	a1, 32
4008c6bb:	d02691        	l32r	a9, 40080754 <_init_end+0x354>
4008c6be:	0020c0        	memw
4008c6c1:	09a8      	l32i.n	a10, a9, 0
4008c6c3:	40a582        	movi	a8, 0x540
4008c6c6:	208a80        	or	a8, a10, a8
4008c6c9:	0020c0        	memw
4008c6cc:	0989      	s32i.n	a8, a9, 0
4008c6ce:	090c      	movi.n	a9, 0
4008c6d0:	f03d      	nop.n
4008c6d2:	f03d      	nop.n
4008c6d4:	f03d      	nop.n
4008c6d6:	d19b81        	l32r	a8, 40080d44 <_init_end+0x944>
4008c6d9:	0899      	s32i.n	a9, a8, 0
4008c6db:	f03d      	nop.n
4008c6dd:	f03d      	nop.n
4008c6df:	f03d      	nop.n
4008c6e1:	f03d      	nop.n
4008c6e3:	d15b81        	l32r	a8, 40080c50 <_init_end+0x850>
4008c6e6:	0020c0        	memw
4008c6e9:	0888      	l32i.n	a8, a8, 0
4008c6eb:	127877        	bbci	a8, 23, 4008c701 <rtc_clk_bbpll_disable+0x49>
4008c6ee:	d01991        	l32r	a9, 40080754 <_init_end+0x354>
4008c6f1:	0020c0        	memw
4008c6f4:	09a8      	l32i.n	a10, a9, 0
4008c6f6:	d19481        	l32r	a8, 40080d48 <_init_end+0x948>
4008c6f9:	208a80        	or	a8, a10, a8
4008c6fc:	0020c0        	memw
4008c6ff:	0989      	s32i.n	a8, a9, 0
4008c701:	f01d      	retw.n
	...

4008c704 <rtc_clk_bbpll_enable>:
4008c704:	004136        	entry	a1, 32
4008c707:	d01391        	l32r	a9, 40080754 <_init_end+0x354>
4008c70a:	0020c0        	memw
4008c70d:	09a8      	l32i.n	a10, a9, 0
4008c70f:	d18f81        	l32r	a8, 40080d4c <_init_end+0x94c>
4008c712:	108a80        	and	a8, a10, a8
4008c715:	0020c0        	memw
4008c718:	0989      	s32i.n	a8, a9, 0
4008c71a:	8d1c      	movi.n	a13, 24
4008c71c:	0c0c      	movi.n	a12, 0
4008c71e:	04a0b2        	movi	a11, 4
4008c721:	66a0a2        	movi	a10, 102
4008c724:	d18b81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c727:	0008e0        	callx8	a8
4008c72a:	0d2c      	movi.n	a13, 32
4008c72c:	1c0c      	movi.n	a12, 1
4008c72e:	4b0c      	movi.n	a11, 4
4008c730:	66a0a2        	movi	a10, 102
4008c733:	d18781        	l32r	a8, 40080d50 <_init_end+0x950>
4008c736:	0008e0        	callx8	a8
4008c739:	9aa0d2        	movi	a13, 154
4008c73c:	4c0c      	movi.n	a12, 4
4008c73e:	20bcc0        	or	a11, a12, a12
4008c741:	66a0a2        	movi	a10, 102
4008c744:	d18381        	l32r	a8, 40080d50 <_init_end+0x950>
4008c747:	0008e0        	callx8	a8
4008c74a:	0d0c      	movi.n	a13, 0
4008c74c:	ac0c      	movi.n	a12, 10
4008c74e:	4b0c      	movi.n	a11, 4
4008c750:	66a0a2        	movi	a10, 102
4008c753:	d17f81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c756:	0008e0        	callx8	a8
4008c759:	0d0c      	movi.n	a13, 0
4008c75b:	cc0c      	movi.n	a12, 12
4008c75d:	4b0c      	movi.n	a11, 4
4008c75f:	66a0a2        	movi	a10, 102
4008c762:	d17b81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c765:	0008e0        	callx8	a8
4008c768:	f01d      	retw.n
	...

4008c76c <rtc_clk_32k_enable>:
4008c76c:	004136        	entry	a1, 32
4008c76f:	742020        	extui	a2, a2, 0, 8
4008c772:	00e216        	beqz	a2, 4008c784 <rtc_clk_32k_enable+0x18>
4008c775:	00a0c2        	movi	a12, 0
4008c778:	03a0b2        	movi	a11, 3
4008c77b:	0bad      	mov.n	a10, a11
4008c77d:	ffe8e5        	call8	4008c60c <rtc_clk_32k_enable_common>
4008c780:	f01d      	retw.n
4008c782:	810000        	src	a0, a0, a0
4008c785:	d16b      	addi.n	a13, a1, 6
4008c787:	0020c0        	memw
4008c78a:	0828      	l32i.n	a2, a8, 0
4008c78c:	d14491        	l32r	a9, 40080c9c <_init_end+0x89c>
4008c78f:	109290        	and	a9, a2, a9
4008c792:	0020c0        	memw
4008c795:	0899      	s32i.n	a9, a8, 0
4008c797:	f03d      	nop.n
4008c799:	f03d      	nop.n
4008c79b:	f03d      	nop.n
4008c79d:	f03d      	nop.n
4008c79f:	0020c0        	memw
4008c7a2:	0828      	l32i.n	a2, a8, 0
4008c7a4:	d16c91        	l32r	a9, 40080d54 <_init_end+0x954>
4008c7a7:	109290        	and	a9, a2, a9
4008c7aa:	0020c0        	memw
4008c7ad:	0899      	s32i.n	a9, a8, 0
4008c7af:	f01d      	retw.n
4008c7b1:	000000        	ill

4008c7b4 <rtc_clk_32k_enable_external>:
4008c7b4:	004136        	entry	a1, 32
4008c7b7:	1c0c      	movi.n	a12, 1
4008c7b9:	3b0c      	movi.n	a11, 3
4008c7bb:	2a0c      	movi.n	a10, 2
4008c7bd:	ffe4e5        	call8	4008c60c <rtc_clk_32k_enable_common>
4008c7c0:	f01d      	retw.n
	...

4008c7c4 <rtc_clk_8m_enable>:
4008c7c4:	004136        	entry	a1, 32
4008c7c7:	742020        	extui	a2, a2, 0, 8
4008c7ca:	743030        	extui	a3, a3, 0, 8
4008c7cd:	071216        	beqz	a2, 4008c842 <rtc_clk_8m_enable+0x7e>
4008c7d0:	d13021        	l32r	a2, 40080c90 <_init_end+0x890>
4008c7d3:	0020c0        	memw
4008c7d6:	0298      	l32i.n	a9, a2, 0
4008c7d8:	bfaf82        	movi	a8, -65
4008c7db:	108980        	and	a8, a9, a8
4008c7de:	0020c0        	memw
4008c7e1:	0289      	s32i.n	a8, a2, 0
4008c7e3:	f03d      	nop.n
4008c7e5:	f03d      	nop.n
4008c7e7:	f03d      	nop.n
4008c7e9:	f03d      	nop.n
4008c7eb:	d11b21        	l32r	a2, 40080c58 <_init_end+0x858>
4008c7ee:	0020c0        	memw
4008c7f1:	0298      	l32i.n	a9, a2, 0
4008c7f3:	d11c81        	l32r	a8, 40080c64 <_init_end+0x864>
4008c7f6:	109980        	and	a9, a9, a8
4008c7f9:	084c      	movi.n	a8, 64
4008c7fb:	208980        	or	a8, a9, a8
4008c7fe:	0020c0        	memw
4008c801:	0289      	s32i.n	a8, a2, 0
4008c803:	e39c      	beqz.n	a3, 4008c825 <rtc_clk_8m_enable+0x61>
4008c805:	f03d      	nop.n
4008c807:	f03d      	nop.n
4008c809:	f03d      	nop.n
4008c80b:	f03d      	nop.n
4008c80d:	d12031        	l32r	a3, 40080c90 <_init_end+0x890>
4008c810:	0020c0        	memw
4008c813:	0388      	l32i.n	a8, a3, 0
4008c815:	7faf22        	movi	a2, -129
4008c818:	102820        	and	a2, a8, a2
4008c81b:	0020c0        	memw
4008c81e:	0329      	s32i.n	a2, a3, 0
4008c820:	000506        	j	4008c838 <rtc_clk_8m_enable+0x74>
4008c823:	310000        	srai	a0, a0, 16
4008c826:	d11a      	add.n	a13, a1, a1
4008c828:	0020c0        	memw
4008c82b:	0388      	l32i.n	a8, a3, 0
4008c82d:	80a022        	movi	a2, 128
4008c830:	202820        	or	a2, a8, a2
4008c833:	0020c0        	memw
4008c836:	0329      	s32i.n	a2, a3, 0
4008c838:	2a3c      	movi.n	a10, 50
4008c83a:	cf1a81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c83d:	0008e0        	callx8	a8
4008c840:	f01d      	retw.n
4008c842:	d11321        	l32r	a2, 40080c90 <_init_end+0x890>
4008c845:	0020c0        	memw
4008c848:	0238      	l32i.n	a3, a2, 0
4008c84a:	084c      	movi.n	a8, 64
4008c84c:	208380        	or	a8, a3, a8
4008c84f:	0020c0        	memw
4008c852:	0289      	s32i.n	a8, a2, 0
4008c854:	f03d      	nop.n
4008c856:	f03d      	nop.n
4008c858:	f03d      	nop.n
4008c85a:	f03d      	nop.n
4008c85c:	d0ff21        	l32r	a2, 40080c58 <_init_end+0x858>
4008c85f:	0020c0        	memw
4008c862:	0298      	l32i.n	a9, a2, 0
4008c864:	d10081        	l32r	a8, 40080c64 <_init_end+0x864>
4008c867:	109980        	and	a9, a9, a8
4008c86a:	00a582        	movi	a8, 0x500
4008c86d:	208980        	or	a8, a9, a8
4008c870:	0020c0        	memw
4008c873:	0289      	s32i.n	a8, a2, 0
4008c875:	f01d      	retw.n
	...

4008c878 <rtc_clk_slow_freq_set>:
4008c878:	004136        	entry	a1, 32
4008c87b:	d10581        	l32r	a8, 40080c90 <_init_end+0x890>
4008c87e:	0020c0        	memw
4008c881:	08a8      	l32i.n	a10, a8, 0
4008c883:	d0b191        	l32r	a9, 40080b48 <_init_end+0x748>
4008c886:	10aa90        	and	a10, a10, a9
4008c889:	019220        	slli	a9, a2, 30
4008c88c:	209a90        	or	a9, a10, a9
4008c88f:	0020c0        	memw
4008c892:	0899      	s32i.n	a9, a8, 0
4008c894:	f03d      	nop.n
4008c896:	f03d      	nop.n
4008c898:	f03d      	nop.n
4008c89a:	f03d      	nop.n
4008c89c:	0020c0        	memw
4008c89f:	0898      	l32i.n	a9, a8, 0
4008c8a1:	ffae82        	movi	a8, 0xfffffeff
4008c8a4:	108980        	and	a8, a9, a8
4008c8a7:	051266        	bnei	a2, 1, 4008c8b0 <rtc_clk_slow_freq_set+0x38>
4008c8aa:	00a122        	movi	a2, 0x100
4008c8ad:	000046        	j	4008c8b2 <rtc_clk_slow_freq_set+0x3a>
4008c8b0:	020c      	movi.n	a2, 0
4008c8b2:	208280        	or	a8, a2, a8
4008c8b5:	d0f621        	l32r	a2, 40080c90 <_init_end+0x890>
4008c8b8:	0020c0        	memw
4008c8bb:	0289      	s32i.n	a8, a2, 0
4008c8bd:	2ca1a2        	movi	a10, 0x12c
4008c8c0:	cef981        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c8c3:	0008e0        	callx8	a8
4008c8c6:	f01d      	retw.n

4008c8c8 <rtc_clk_slow_freq_get>:
4008c8c8:	004136        	entry	a1, 32
4008c8cb:	d0f121        	l32r	a2, 40080c90 <_init_end+0x890>
4008c8ce:	0020c0        	memw
4008c8d1:	0228      	l32i.n	a2, a2, 0
4008c8d3:	152e20        	extui	a2, a2, 30, 2
4008c8d6:	f01d      	retw.n

4008c8d8 <rtc_clk_slow_freq_get_hz>:
4008c8d8:	004136        	entry	a1, 32
4008c8db:	fffee5        	call8	4008c8c8 <rtc_clk_slow_freq_get>
4008c8de:	1a1a26        	beqi	a10, 1, 4008c8fc <rtc_clk_slow_freq_get_hz+0x24>
4008c8e1:	7a8c      	beqz.n	a10, 4008c8ec <rtc_clk_slow_freq_get_hz+0x14>
4008c8e3:	0a2a26        	beqi	a10, 2, 4008c8f1 <rtc_clk_slow_freq_get_hz+0x19>
4008c8e6:	000386        	j	4008c8f8 <rtc_clk_slow_freq_get_hz+0x20>
4008c8e9:	000000        	ill
4008c8ec:	d0ff21        	l32r	a2, 40080ce8 <_init_end+0x8e8>
4008c8ef:	f01d      	retw.n
4008c8f1:	d0fc21        	l32r	a2, 40080ce4 <_init_end+0x8e4>
4008c8f4:	f01d      	retw.n
4008c8f6:	0c0000        	lsi	f0, a0, 48
4008c8f9:	f01d02        	l16ui	a0, a13, 0x1e0
4008c8fc:	d0f921        	l32r	a2, 40080ce0 <_init_end+0x8e0>
4008c8ff:	f01d      	retw.n
4008c901:	000000        	ill

4008c904 <rtc_clk_fast_freq_set>:
4008c904:	004136        	entry	a1, 32
4008c907:	d0e291        	l32r	a9, 40080c90 <_init_end+0x890>
4008c90a:	0020c0        	memw
4008c90d:	09a8      	l32i.n	a10, a9, 0
4008c90f:	d0e981        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008c912:	108a80        	and	a8, a10, a8
4008c915:	042020        	extui	a2, a2, 0, 1
4008c918:	012230        	slli	a2, a2, 29
4008c91b:	202820        	or	a2, a8, a2
4008c91e:	0020c0        	memw
4008c921:	0929      	s32i.n	a2, a9, 0
4008c923:	03a0a2        	movi	a10, 3
4008c926:	cedf81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c929:	0008e0        	callx8	a8
4008c92c:	f01d      	retw.n
	...

4008c930 <rtc_clk_bbpll_configure>:
4008c930:	006136        	entry	a1, 48
4008c933:	40a142        	movi	a4, 0x140
4008c936:	021347        	beq	a3, a4, 4008c93c <rtc_clk_bbpll_configure+0xc>
4008c939:	002506        	j	4008c9d1 <rtc_clk_bbpll_configure+0xa1>
4008c93c:	d0cd61        	l32r	a6, 40080c70 <_init_end+0x870>
4008c93f:	0020c0        	memw
4008c942:	0658      	l32i.n	a5, a6, 0
4008c944:	d0c141        	l32r	a4, 40080c48 <_init_end+0x848>
4008c947:	105540        	and	a5, a5, a4
4008c94a:	cfc741        	l32r	a4, 40080868 <_init_end+0x468>
4008c94d:	204540        	or	a4, a5, a4
4008c950:	0020c0        	memw
4008c953:	0649      	s32i.n	a4, a6, 0
4008c955:	a41c      	movi.n	a4, 26
4008c957:	411247        	beq	a2, a4, 4008c99c <rtc_clk_bbpll_configure+0x6c>
4008c95a:	842c      	movi.n	a4, 40
4008c95c:	081247        	beq	a2, a4, 4008c968 <rtc_clk_bbpll_configure+0x38>
4008c95f:	841c      	movi.n	a4, 24
4008c961:	279247        	bne	a2, a4, 4008c98c <rtc_clk_bbpll_configure+0x5c>
4008c964:	000446        	j	4008c979 <rtc_clk_bbpll_configure+0x49>
4008c967:	340c00        	extui	a0, a0, 12, 4
4008c96a:	620c      	movi.n	a2, 6
4008c96c:	3129      	s32i.n	a2, a1, 12
4008c96e:	050c      	movi.n	a5, 0
4008c970:	052d      	mov.n	a2, a5
4008c972:	062c      	movi.n	a6, 32
4008c974:	057d      	mov.n	a7, a5
4008c976:	000c46        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c979:	140c      	movi.n	a4, 1
4008c97b:	020c      	movi.n	a2, 0
4008c97d:	3129      	s32i.n	a2, a1, 12
4008c97f:	045d      	mov.n	a5, a4
4008c981:	420c      	movi.n	a2, 4
4008c983:	e0a062        	movi	a6, 224
4008c986:	b70c      	movi.n	a7, 11
4008c988:	0007c6        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c98b:	040c00        	extui	a0, a0, 12, 1
4008c98e:	3149      	s32i.n	a4, a1, 12
4008c990:	045d      	mov.n	a5, a4
4008c992:	420c      	movi.n	a2, 4
4008c994:	e0a062        	movi	a6, 224
4008c997:	c70c      	movi.n	a7, 12
4008c999:	000386        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c99c:	140c      	movi.n	a4, 1
4008c99e:	020c      	movi.n	a2, 0
4008c9a0:	3129      	s32i.n	a2, a1, 12
4008c9a2:	045d      	mov.n	a5, a4
4008c9a4:	420c      	movi.n	a2, 4
4008c9a6:	e0a062        	movi	a6, 224
4008c9a9:	c70c      	movi.n	a7, 12
4008c9ab:	3d4c      	movi.n	a13, 67
4008c9ad:	0ba0c2        	movi	a12, 11
4008c9b0:	04a0b2        	movi	a11, 4
4008c9b3:	66a0a2        	movi	a10, 102
4008c9b6:	d0e681        	l32r	a8, 40080d50 <_init_end+0x950>
4008c9b9:	0008e0        	callx8	a8
4008c9bc:	84a0d2        	movi	a13, 132
4008c9bf:	9c0c      	movi.n	a12, 9
4008c9c1:	4b0c      	movi.n	a11, 4
4008c9c3:	66a0a2        	movi	a10, 102
4008c9c6:	d0e281        	l32r	a8, 40080d50 <_init_end+0x950>
4008c9c9:	0008e0        	callx8	a8
4008c9cc:	002406        	j	4008ca60 <rtc_clk_bbpll_configure+0x130>
4008c9cf:	510000        	lsi	f0, a0, 0x144
4008c9d2:	c0d0a7        	bbs	a0, a10, 4008c996 <rtc_clk_bbpll_configure+0x66>
4008c9d5:	680020        	lsi	f2, a0, 0x1a0
4008c9d8:	df4105        	call0	4006bdec <__udivmoddi4+0x71f8>
4008c9db:	4640d0        	lsi	f13, a0, 0x118
4008c9de:	20c020        	or	a12, a0, a2
4008c9e1:	054900        	extui	a4, a0, 25, 1
4008c9e4:	3a0c      	movi.n	a10, 3
4008c9e6:	ceaf81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c9e9:	0008e0        	callx8	a8
4008c9ec:	a41c      	movi.n	a4, 26
4008c9ee:	3f1247        	beq	a2, a4, 4008ca31 <rtc_clk_bbpll_configure+0x101>
4008c9f1:	842c      	movi.n	a4, 40
4008c9f3:	071247        	beq	a2, a4, 4008c9fe <rtc_clk_bbpll_configure+0xce>
4008c9f6:	841c      	movi.n	a4, 24
4008c9f8:	259247        	bne	a2, a4, 4008ca21 <rtc_clk_bbpll_configure+0xf1>
4008c9fb:	000406        	j	4008ca0f <rtc_clk_bbpll_configure+0xdf>
4008c9fe:	340c      	movi.n	a4, 3
4008ca00:	620c      	movi.n	a2, 6
4008ca02:	3129      	s32i.n	a2, a1, 12
4008ca04:	050c      	movi.n	a5, 0
4008ca06:	052d      	mov.n	a2, a5
4008ca08:	c61c      	movi.n	a6, 28
4008ca0a:	057d      	mov.n	a7, a5
4008ca0c:	000c06        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca0f:	140c      	movi.n	a4, 1
4008ca11:	020c      	movi.n	a2, 0
4008ca13:	3129      	s32i.n	a2, a1, 12
4008ca15:	045d      	mov.n	a5, a4
4008ca17:	420c      	movi.n	a2, 4
4008ca19:	90a062        	movi	a6, 144
4008ca1c:	b70c      	movi.n	a7, 11
4008ca1e:	000786        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca21:	040c      	movi.n	a4, 0
4008ca23:	3149      	s32i.n	a4, a1, 12
4008ca25:	045d      	mov.n	a5, a4
4008ca27:	420c      	movi.n	a2, 4
4008ca29:	e0a062        	movi	a6, 224
4008ca2c:	c70c      	movi.n	a7, 12
4008ca2e:	000386        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca31:	140c      	movi.n	a4, 1
4008ca33:	020c      	movi.n	a2, 0
4008ca35:	3129      	s32i.n	a2, a1, 12
4008ca37:	045d      	mov.n	a5, a4
4008ca39:	420c      	movi.n	a2, 4
4008ca3b:	90a062        	movi	a6, 144
4008ca3e:	c70c      	movi.n	a7, 12
4008ca40:	c3a0d2        	movi	a13, 195
4008ca43:	bc0c      	movi.n	a12, 11
4008ca45:	4b0c      	movi.n	a11, 4
4008ca47:	66a0a2        	movi	a10, 102
4008ca4a:	d0c181        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca4d:	0008e0        	callx8	a8
4008ca50:	74a0d2        	movi	a13, 116
4008ca53:	9c0c      	movi.n	a12, 9
4008ca55:	4b0c      	movi.n	a11, 4
4008ca57:	66a0a2        	movi	a10, 102
4008ca5a:	d0bd81        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca5d:	0008e0        	callx8	a8
4008ca60:	11d590        	slli	a13, a5, 7
4008ca63:	1122c0        	slli	a2, a2, 4
4008ca66:	20dd20        	or	a13, a13, a2
4008ca69:	1144a0        	slli	a4, a4, 6
4008ca6c:	3128      	l32i.n	a2, a1, 12
4008ca6e:	204420        	or	a4, a4, a2
4008ca71:	20dd70        	or	a13, a13, a7
4008ca74:	2c0c      	movi.n	a12, 2
4008ca76:	4b0c      	movi.n	a11, 4
4008ca78:	66a0a2        	movi	a10, 102
4008ca7b:	d0b581        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca7e:	0008e0        	callx8	a8
4008ca81:	06dd      	mov.n	a13, a6
4008ca83:	3c0c      	movi.n	a12, 3
4008ca85:	4b0c      	movi.n	a11, 4
4008ca87:	66a0a2        	movi	a10, 102
4008ca8a:	d0b181        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca8d:	0008e0        	callx8	a8
4008ca90:	04dd      	mov.n	a13, a4
4008ca92:	5c0c      	movi.n	a12, 5
4008ca94:	4b0c      	movi.n	a11, 4
4008ca96:	66a0a2        	movi	a10, 102
4008ca99:	d0ad81        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca9c:	0008e0        	callx8	a8
4008ca9f:	ffe2a5        	call8	4008c8c8 <rtc_clk_slow_freq_get>
4008caa2:	3acc      	bnez.n	a10, 4008caa9 <rtc_clk_bbpll_configure+0x179>
4008caa4:	0a5c      	movi.n	a10, 80
4008caa6:	000086        	j	4008caac <rtc_clk_bbpll_configure+0x17c>
4008caa9:	a0a0a2        	movi	a10, 160
4008caac:	ce7e81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008caaf:	0008e0        	callx8	a8
4008cab2:	d0a421        	l32r	a2, 40080d44 <_init_end+0x944>
4008cab5:	0239      	s32i.n	a3, a2, 0
4008cab7:	f01d      	retw.n
4008cab9:	000000        	ill

4008cabc <rtc_clk_xtal_freq_get>:
4008cabc:	004136        	entry	a1, 32
4008cabf:	d0a721        	l32r	a2, 40080d5c <_init_end+0x95c>
4008cac2:	0020c0        	memw
4008cac5:	0288      	l32i.n	a8, a2, 0
4008cac7:	f42080        	extui	a2, a8, 0, 16
4008caca:	f59080        	extui	a9, a8, 16, 16
4008cacd:	0b9927        	bne	a9, a2, 4008cadc <rtc_clk_xtal_freq_get+0x20>
4008cad0:	280b      	addi.n	a2, a8, -1
4008cad2:	d97c      	movi.n	a9, -3
4008cad4:	09b927        	bgeu	a9, a2, 4008cae1 <rtc_clk_xtal_freq_get+0x25>
4008cad7:	020c      	movi.n	a2, 0
4008cad9:	000186        	j	4008cae3 <rtc_clk_xtal_freq_get+0x27>
4008cadc:	020c      	movi.n	a2, 0
4008cade:	000046        	j	4008cae3 <rtc_clk_xtal_freq_get+0x27>
4008cae1:	120c      	movi.n	a2, 1
4008cae3:	628c      	beqz.n	a2, 4008caed <rtc_clk_xtal_freq_get+0x31>
4008cae5:	d09e21        	l32r	a2, 40080d60 <_init_end+0x960>
4008cae8:	102820        	and	a2, a8, a2
4008caeb:	f01d      	retw.n
4008caed:	020c      	movi.n	a2, 0
4008caef:	f01d      	retw.n
4008caf1:	000000        	ill

4008caf4 <rtc_clk_cpu_freq_mhz_to_config>:
4008caf4:	004136        	entry	a1, 32
4008caf7:	fffc65        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cafa:	173a27        	bltu	a10, a2, 4008cb15 <rtc_clk_cpu_freq_mhz_to_config+0x21>
4008cafd:	c29a20        	quou	a9, a10, a2
4008cb00:	418190        	srli	a8, a9, 1
4008cb03:	808a80        	add	a8, a10, a8
4008cb06:	c28890        	quou	a8, a8, a9
4008cb09:	409287        	bne	a2, a8, 4008cb4d <rtc_clk_cpu_freq_mhz_to_config+0x59>
4008cb0c:	202880        	or	a2, a8, a8
4008cb0f:	00a082        	movi	a8, 0
4008cb12:	000ac6        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb15:	085c      	movi.n	a8, 80
4008cb17:	151287        	beq	a2, a8, 4008cb30 <rtc_clk_cpu_freq_mhz_to_config+0x3c>
4008cb1a:	a0a082        	movi	a8, 160
4008cb1d:	191287        	beq	a2, a8, 4008cb3a <rtc_clk_cpu_freq_mhz_to_config+0x46>
4008cb20:	f0a082        	movi	a8, 240
4008cb23:	2a9287        	bne	a2, a8, 4008cb51 <rtc_clk_cpu_freq_mhz_to_config+0x5d>
4008cb26:	290c      	movi.n	a9, 2
4008cb28:	180c      	movi.n	a8, 1
4008cb2a:	e0a1a2        	movi	a10, 0x1e0
4008cb2d:	000406        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb30:	490c      	movi.n	a9, 4
4008cb32:	180c      	movi.n	a8, 1
4008cb34:	40a1a2        	movi	a10, 0x140
4008cb37:	000186        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb3a:	290c      	movi.n	a9, 2
4008cb3c:	180c      	movi.n	a8, 1
4008cb3e:	40a1a2        	movi	a10, 0x140
4008cb41:	0389      	s32i.n	a8, a3, 0
4008cb43:	13a9      	s32i.n	a10, a3, 4
4008cb45:	2399      	s32i.n	a9, a3, 8
4008cb47:	3329      	s32i.n	a2, a3, 12
4008cb49:	120c      	movi.n	a2, 1
4008cb4b:	f01d      	retw.n
4008cb4d:	020c      	movi.n	a2, 0
4008cb4f:	f01d      	retw.n
4008cb51:	020c      	movi.n	a2, 0
4008cb53:	f01d      	retw.n
4008cb55:	000000        	ill

4008cb58 <rtc_clk_cpu_freq_get_config>:
4008cb58:	004136        	entry	a1, 32
4008cb5b:	d04d31        	l32r	a3, 40080c90 <_init_end+0x890>
4008cb5e:	0020c0        	memw
4008cb61:	0388      	l32i.n	a8, a3, 0
4008cb63:	158b80        	extui	a8, a8, 27, 2
4008cb66:	221826        	beqi	a8, 1, 4008cb8c <rtc_clk_cpu_freq_get_config+0x34>
4008cb69:	488c      	beqz.n	a8, 4008cb71 <rtc_clk_cpu_freq_get_config+0x19>
4008cb6b:	572826        	beqi	a8, 2, 4008cbc6 <rtc_clk_cpu_freq_get_config+0x6e>
4008cb6e:	001006        	j	4008cbb2 <rtc_clk_cpu_freq_get_config+0x5a>
4008cb71:	d07c31        	l32r	a3, 40080d64 <_init_end+0x964>
4008cb74:	0020c0        	memw
4008cb77:	002332        	l32i	a3, a3, 0
4008cb7a:	943030        	extui	a3, a3, 0, 10
4008cb7d:	01c332        	addi	a3, a3, 1
4008cb80:	fff3a5        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cb83:	c28a30        	quou	a8, a10, a3
4008cb86:	00a092        	movi	a9, 0
4008cb89:	001a46        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cb8c:	d077a1        	l32r	a10, 40080d68 <_init_end+0x968>
4008cb8f:	f4dba5        	call8	40081948 <esp_dport_access_reg_read>
4008cb92:	14a0a0        	extui	a10, a10, 0, 2
4008cb95:	038a16        	beqz	a10, 4008cbd1 <rtc_clk_cpu_freq_get_config+0x79>
4008cb98:	411a26        	beqi	a10, 1, 4008cbdd <rtc_clk_cpu_freq_get_config+0x85>
4008cb9b:	4d2a26        	beqi	a10, 2, 4008cbec <rtc_clk_cpu_freq_get_config+0x94>
4008cb9e:	f71925        	call8	40083d30 <esp_log_timestamp>
4008cba1:	d072c1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008cba4:	0abd      	mov.n	a11, a10
4008cba6:	d072a1        	l32r	a10, 40080d70 <_init_end+0x970>
4008cba9:	ce3b81        	l32r	a8, 40080498 <_init_end+0x98>
4008cbac:	0008e0        	callx8	a8
4008cbaf:	fe7be5        	call8	4008b36c <abort>
4008cbb2:	f717e5        	call8	40083d30 <esp_log_timestamp>
4008cbb5:	d06dc1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008cbb8:	0abd      	mov.n	a11, a10
4008cbba:	d06da1        	l32r	a10, 40080d70 <_init_end+0x970>
4008cbbd:	ce3681        	l32r	a8, 40080498 <_init_end+0x98>
4008cbc0:	0008e0        	callx8	a8
4008cbc3:	fe7aa5        	call8	4008b36c <abort>
4008cbc6:	880c      	movi.n	a8, 8
4008cbc8:	130c      	movi.n	a3, 1
4008cbca:	08ad      	mov.n	a10, a8
4008cbcc:	290c      	movi.n	a9, 2
4008cbce:	000906        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbd1:	085c      	movi.n	a8, 80
4008cbd3:	430c      	movi.n	a3, 4
4008cbd5:	40a1a2        	movi	a10, 0x140
4008cbd8:	190c      	movi.n	a9, 1
4008cbda:	000606        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbdd:	a0a082        	movi	a8, 160
4008cbe0:	230c      	movi.n	a3, 2
4008cbe2:	40a1a2        	movi	a10, 0x140
4008cbe5:	190c      	movi.n	a9, 1
4008cbe7:	0002c6        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbea:	820000        	mull	a0, a0, a0
4008cbed:	0cf0a0        	lsi	f10, a0, 48
4008cbf0:	a1a223        	lsi	f2, a2, 0x284
4008cbf3:	190ce0        	lsi	f14, a12, 100
4008cbf6:	0299      	s32i.n	a9, a2, 0
4008cbf8:	12a9      	s32i.n	a10, a2, 4
4008cbfa:	2239      	s32i.n	a3, a2, 8
4008cbfc:	3289      	s32i.n	a8, a2, 12
4008cbfe:	f01d      	retw.n

4008cc00 <rtc_clk_apb_freq_update>:
4008cc00:	004136        	entry	a1, 32
4008cc03:	412c20        	srli	a2, a2, 12
4008cc06:	f48020        	extui	a8, a2, 0, 16
4008cc09:	112200        	slli	a2, a2, 16
4008cc0c:	202820        	or	a2, a8, a2
4008cc0f:	d05981        	l32r	a8, 40080d74 <_init_end+0x974>
4008cc12:	0020c0        	memw
4008cc15:	0829      	s32i.n	a2, a8, 0
4008cc17:	f01d      	retw.n
4008cc19:	000000        	ill

4008cc1c <rtc_clk_cpu_freq_to_xtal>:
4008cc1c:	004136        	entry	a1, 32
4008cc1f:	02ad      	mov.n	a10, a2
4008cc21:	f44ee5        	call8	40081110 <ets_update_cpu_frequency>
4008cc24:	d050a1        	l32r	a10, 40080d64 <_init_end+0x964>
4008cc27:	0020c0        	memw
4008cc2a:	0a98      	l32i.n	a9, a10, 0
4008cc2c:	00ac82        	movi	a8, 0xfffffc00
4008cc2f:	109980        	and	a9, a9, a8
4008cc32:	830b      	addi.n	a8, a3, -1
4008cc34:	948080        	extui	a8, a8, 0, 10
4008cc37:	208890        	or	a8, a8, a9
4008cc3a:	0020c0        	memw
4008cc3d:	0a89      	s32i.n	a8, a10, 0
4008cc3f:	f03d      	nop.n
4008cc41:	f03d      	nop.n
4008cc43:	f03d      	nop.n
4008cc45:	f03d      	nop.n
4008cc47:	ce19a1        	l32r	a10, 400804ac <_init_end+0xac>
4008cc4a:	82a2a0        	mull	a10, a2, a10
4008cc4d:	cecd81        	l32r	a8, 40080784 <_init_end+0x384>
4008cc50:	b28a80        	mulsh	a8, a10, a8
4008cc53:	318280        	srai	a8, a8, 18
4008cc56:	313fa0        	srai	a3, a10, 31
4008cc59:	c08830        	sub	a8, a8, a3
4008cc5c:	880b      	addi.n	a8, a8, -1
4008cc5e:	d04631        	l32r	a3, 40080d78 <_init_end+0x978>
4008cc61:	0020c0        	memw
4008cc64:	0389      	s32i.n	a8, a3, 0
4008cc66:	f03d      	nop.n
4008cc68:	f03d      	nop.n
4008cc6a:	f03d      	nop.n
4008cc6c:	f03d      	nop.n
4008cc6e:	d00881        	l32r	a8, 40080c90 <_init_end+0x890>
4008cc71:	0020c0        	memw
4008cc74:	0898      	l32i.n	a9, a8, 0
4008cc76:	d04131        	l32r	a3, 40080d7c <_init_end+0x97c>
4008cc79:	103930        	and	a3, a9, a3
4008cc7c:	0020c0        	memw
4008cc7f:	0839      	s32i.n	a3, a8, 0
4008cc81:	fff7e5        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cc84:	1c32e6        	bgei	a2, 3, 4008cca4 <rtc_clk_cpu_freq_to_xtal+0x88>
4008cc87:	cffa81        	l32r	a8, 40080c70 <_init_end+0x870>
4008cc8a:	0020c0        	memw
4008cc8d:	0838      	l32i.n	a3, a8, 0
4008cc8f:	cfee21        	l32r	a2, 40080c48 <_init_end+0x848>
4008cc92:	103320        	and	a3, a3, a2
4008cc95:	cea421        	l32r	a2, 40080728 <_init_end+0x328>
4008cc98:	202320        	or	a2, a3, a2
4008cc9b:	0020c0        	memw
4008cc9e:	0829      	s32i.n	a2, a8, 0
4008cca0:	f01d      	retw.n
4008cca2:	810000        	src	a0, a0, a0
4008cca5:	c0cff3        	ssip	f15, a15, 0x300
4008cca8:	380020        	lsi	f2, a0, 224
4008ccab:	2108      	l32i.n	a0, a1, 8
4008ccad:	20cfe7        	bnall	a15, a14, 4008ccd1 <rtc_clk_cpu_freq_set_xtal+0x11>
4008ccb0:	211033        	lsi	f3, a0, 132
4008ccb3:	ceed      	lsi	f14, a14, 56
4008ccb5:	202320        	or	a2, a3, a2
4008ccb8:	0020c0        	memw
4008ccbb:	0829      	s32i.n	a2, a8, 0
4008ccbd:	f01d      	retw.n
	...

4008ccc0 <rtc_clk_cpu_freq_set_xtal>:
4008ccc0:	004136        	entry	a1, 32
4008ccc3:	ffdfa5        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008ccc6:	1b0c      	movi.n	a11, 1
4008ccc8:	fff525        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008cccb:	ff8a65        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ccce:	ff9ea5        	call8	4008c6b8 <rtc_clk_bbpll_disable>
4008ccd1:	f01d      	retw.n
	...

4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>:
4008ccd4:	004136        	entry	a1, 32
4008ccd7:	50a082        	movi	a8, 80
4008ccda:	201287        	beq	a2, a8, 4008ccfe <rtc_clk_cpu_freq_to_pll_mhz+0x2a>
4008ccdd:	a0a082        	movi	a8, 160
4008cce0:	211287        	beq	a2, a8, 4008cd05 <rtc_clk_cpu_freq_to_pll_mhz+0x31>
4008cce3:	f0a082        	movi	a8, 240
4008cce6:	231287        	beq	a2, a8, 4008cd0d <rtc_clk_cpu_freq_to_pll_mhz+0x39>
4008cce9:	f70465        	call8	40083d30 <esp_log_timestamp>
4008ccec:	d020c1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008ccef:	20baa0        	or	a11, a10, a10
4008ccf2:	d023a1        	l32r	a10, 40080d80 <_init_end+0x980>
4008ccf5:	cde881        	l32r	a8, 40080498 <_init_end+0x98>
4008ccf8:	0008e0        	callx8	a8
4008ccfb:	fe6725        	call8	4008b36c <abort>
4008ccfe:	0a0c      	movi.n	a10, 0
4008cd00:	480c      	movi.n	a8, 4
4008cd02:	000306        	j	4008cd12 <rtc_clk_cpu_freq_to_pll_mhz+0x3e>
4008cd05:	1a0c      	movi.n	a10, 1
4008cd07:	480c      	movi.n	a8, 4
4008cd09:	000146        	j	4008cd12 <rtc_clk_cpu_freq_to_pll_mhz+0x3e>
4008cd0c:	a0a200        	addx4	a10, a2, a0
4008cd0f:	780c02        	l8ui	a0, a12, 120
4008cd12:	d01591        	l32r	a9, 40080d68 <_init_end+0x968>
4008cd15:	0020c0        	memw
4008cd18:	09a9      	s32i.n	a10, a9, 0
4008cd1a:	f03d      	nop.n
4008cd1c:	f03d      	nop.n
4008cd1e:	f03d      	nop.n
4008cd20:	f03d      	nop.n
4008cd22:	cfd3a1        	l32r	a10, 40080c70 <_init_end+0x870>
4008cd25:	0020c0        	memw
4008cd28:	0ab8      	l32i.n	a11, a10, 0
4008cd2a:	cfc791        	l32r	a9, 40080c48 <_init_end+0x848>
4008cd2d:	109b90        	and	a9, a11, a9
4008cd30:	118850        	slli	a8, a8, 11
4008cd33:	208890        	or	a8, a8, a9
4008cd36:	0020c0        	memw
4008cd39:	0a89      	s32i.n	a8, a10, 0
4008cd3b:	f03d      	nop.n
4008cd3d:	f03d      	nop.n
4008cd3f:	f03d      	nop.n
4008cd41:	f03d      	nop.n
4008cd43:	cfd3a1        	l32r	a10, 40080c90 <_init_end+0x890>
4008cd46:	0020c0        	memw
4008cd49:	0a98      	l32i.n	a9, a10, 0
4008cd4b:	d00c81        	l32r	a8, 40080d7c <_init_end+0x97c>
4008cd4e:	109980        	and	a9, a9, a8
4008cd51:	cfc881        	l32r	a8, 40080c74 <_init_end+0x874>
4008cd54:	208980        	or	a8, a9, a8
4008cd57:	0020c0        	memw
4008cd5a:	0a89      	s32i.n	a8, a10, 0
4008cd5c:	f03d      	nop.n
4008cd5e:	f03d      	nop.n
4008cd60:	f03d      	nop.n
4008cd62:	f03d      	nop.n
4008cd64:	d008a1        	l32r	a10, 40080d84 <_init_end+0x984>
4008cd67:	ffe9a5        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cd6a:	02ad      	mov.n	a10, a2
4008cd6c:	f43a25        	call8	40081110 <ets_update_cpu_frequency>
4008cd6f:	ff8025        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008cd72:	f01d      	retw.n

4008cd74 <rtc_clk_cpu_freq_to_8m>:
4008cd74:	004136        	entry	a1, 32
4008cd77:	08a0a2        	movi	a10, 8
4008cd7a:	f43965        	call8	40081110 <ets_update_cpu_frequency>
4008cd7d:	cfbca1        	l32r	a10, 40080c70 <_init_end+0x870>
4008cd80:	0020c0        	memw
4008cd83:	002a92        	l32i	a9, a10, 0
4008cd86:	cfb081        	l32r	a8, 40080c48 <_init_end+0x848>
4008cd89:	109980        	and	a9, a9, a8
4008cd8c:	ceb781        	l32r	a8, 40080868 <_init_end+0x468>
4008cd8f:	208980        	or	a8, a9, a8
4008cd92:	0020c0        	memw
4008cd95:	006a82        	s32i	a8, a10, 0
4008cd98:	f03d      	nop.n
4008cd9a:	f03d      	nop.n
4008cd9c:	f03d      	nop.n
4008cd9e:	f03d      	nop.n
4008cda0:	cff191        	l32r	a9, 40080d64 <_init_end+0x964>
4008cda3:	0020c0        	memw
4008cda6:	09a8      	l32i.n	a10, a9, 0
4008cda8:	00ac82        	movi	a8, 0xfffffc00
4008cdab:	108a80        	and	a8, a10, a8
4008cdae:	0020c0        	memw
4008cdb1:	0989      	s32i.n	a8, a9, 0
4008cdb3:	f03d      	nop.n
4008cdb5:	f03d      	nop.n
4008cdb7:	f03d      	nop.n
4008cdb9:	f03d      	nop.n
4008cdbb:	cfb5a1        	l32r	a10, 40080c90 <_init_end+0x890>
4008cdbe:	0020c0        	memw
4008cdc1:	0a98      	l32i.n	a9, a10, 0
4008cdc3:	cfee81        	l32r	a8, 40080d7c <_init_end+0x97c>
4008cdc6:	109980        	and	a9, a9, a8
4008cdc9:	cde681        	l32r	a8, 40080564 <_init_end+0x164>
4008cdcc:	208980        	or	a8, a9, a8
4008cdcf:	0020c0        	memw
4008cdd2:	0a89      	s32i.n	a8, a10, 0
4008cdd4:	f03d      	nop.n
4008cdd6:	f03d      	nop.n
4008cdd8:	f03d      	nop.n
4008cdda:	f03d      	nop.n
4008cddc:	cfeba1        	l32r	a10, 40080d88 <_init_end+0x988>
4008cddf:	ffe225        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cde2:	f01d      	retw.n

4008cde4 <rtc_clk_cpu_freq_set_config>:
4008cde4:	004136        	entry	a1, 32
4008cde7:	ffcd65        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cdea:	cfa931        	l32r	a3, 40080c90 <_init_end+0x890>
4008cded:	0020c0        	memw
4008cdf0:	002332        	l32i	a3, a3, 0
4008cdf3:	153b30        	extui	a3, a3, 27, 2
4008cdf6:	008316        	beqz	a3, 4008ce02 <rtc_clk_cpu_freq_set_config+0x1e>
4008cdf9:	01a0b2        	movi	a11, 1
4008cdfc:	ffe1e5        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008cdff:	ff7725        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ce02:	021366        	bnei	a3, 1, 4008ce08 <rtc_clk_cpu_freq_set_config+0x24>
4008ce05:	ff8b25        	call8	4008c6b8 <rtc_clk_bbpll_disable>
4008ce08:	002232        	l32i	a3, a2, 0
4008ce0b:	00d356        	bnez	a3, 4008ce1c <rtc_clk_cpu_freq_set_config+0x38>
4008ce0e:	0222b2        	l32i	a11, a2, 8
4008ce11:	282bb6        	bltui	a11, 2, 4008ce3d <rtc_clk_cpu_freq_set_config+0x59>
4008ce14:	32a8      	l32i.n	a10, a2, 12
4008ce16:	ffe065        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008ce19:	f01d      	retw.n
4008ce1b:	136600        	lsi	f0, a6, 76
4008ce1e:	8e6517        	bbci	a5, 1, 4008cdb0 <rtc_clk_cpu_freq_to_8m+0x3c>
4008ce21:	ff          	.byte 0xff
4008ce22:	ff74e5        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ce25:	ffc965        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008ce28:	0122b2        	l32i	a11, a2, 4
4008ce2b:	ffb065        	call8	4008c930 <rtc_clk_bbpll_configure>
4008ce2e:	0322a2        	l32i	a10, a2, 12
4008ce31:	ffea25        	call8	4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>
4008ce34:	000090        	retw
4008ce37:	022366        	bnei	a3, 2, 4008ce3d <rtc_clk_cpu_freq_set_config+0x59>
4008ce3a:	fff3a5        	call8	4008cd74 <rtc_clk_cpu_freq_to_8m>
4008ce3d:	f01d      	retw.n
	...

4008ce40 <rtc_clk_cpu_freq_set_config_fast>:
4008ce40:	004136        	entry	a1, 32
4008ce43:	002282        	l32i	a8, a2, 0
4008ce46:	00a856        	bnez	a8, 4008ce54 <rtc_clk_cpu_freq_set_config_fast+0x14>
4008ce49:	0222b2        	l32i	a11, a2, 8
4008ce4c:	32a8      	l32i.n	a10, a2, 12
4008ce4e:	ffdce5        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008ce51:	f01d      	retw.n
4008ce53:	186600        	lsxp	f6, a6, a0
4008ce56:	229214        	lsi	f1, a2, 136
4008ce59:	ba8101        	l32r	a0, 4007b860 <__udivmoddi4+0x16c6c>
4008ce5c:	cf          	.byte 0xcf
4008ce5d:	002882        	l32i	a8, a8, 0
4008ce60:	089987        	bne	a9, a8, 4008ce6c <rtc_clk_cpu_freq_set_config_fast+0x2c>
4008ce63:	0322a2        	l32i	a10, a2, 12
4008ce66:	ffe6e5        	call8	4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>
4008ce69:	f01d      	retw.n
4008ce6b:	02ad00        	andb	b10, b13, b0
4008ce6e:	fff765        	call8	4008cde4 <rtc_clk_cpu_freq_set_config>
4008ce71:	f01d      	retw.n
	...

4008ce74 <rtc_clk_apb_freq_get>:
4008ce74:	004136        	entry	a1, 32
4008ce77:	cfbf21        	l32r	a2, 40080d74 <_init_end+0x974>
4008ce7a:	0020c0        	memw
4008ce7d:	0288      	l32i.n	a8, a2, 0
4008ce7f:	f48080        	extui	a8, a8, 0, 16
4008ce82:	118840        	slli	a8, a8, 12
4008ce85:	cfc121        	l32r	a2, 40080d8c <_init_end+0x98c>
4008ce88:	882a      	add.n	a8, a8, a2
4008ce8a:	ce3e91        	l32r	a9, 40080784 <_init_end+0x384>
4008ce8d:	a28890        	muluh	a8, a8, a9
4008ce90:	d58280        	extui	a8, a8, 18, 14
4008ce93:	cd8621        	l32r	a2, 400804ac <_init_end+0xac>
4008ce96:	822820        	mull	a2, a8, a2
4008ce99:	f01d      	retw.n
	...

4008ce9c <xthal_window_spill_nw>:
4008ce9c:	034820        	rsr.windowbase	a2
4008ce9f:	221b      	addi.n	a2, a2, 1
4008cea1:	400200        	ssr	a2
4008cea4:	034930        	rsr.windowstart	a3
4008cea7:	912030        	srl	a2, a3
4008ceaa:	a13300        	sll	a3, a3
4008cead:	0bf3d6        	bgez	a3, 4008cf70 <xthal_window_spill_nw+0xd4>
4008ceb0:	f53030        	extui	a3, a3, 16, 16
4008ceb3:	202230        	or	a2, a2, a3
4008ceb6:	603020        	neg	a3, a2
4008ceb9:	103320        	and	a3, a3, a2
4008cebc:	40f330        	nsau	a3, a3
4008cebf:	401300        	ssl	a3
4008cec2:	912020        	srl	a2, a2
4008cec5:	134920        	wsr.windowstart	a2
4008cec8:	034820        	rsr.windowbase	a2
4008cecb:	1fc222        	addi	a2, a2, 31
4008cece:	c03230        	sub	a3, a2, a3
4008ced1:	134830        	wsr.windowbase	a3
4008ced4:	002010        	rsync
4008ced7:	034920        	rsr.windowstart	a2
4008ceda:	07a216        	beqz	a2, 4008cf58 <xthal_window_spill_nw+0xbc>
4008cedd:	08e207        	bbsi	a2, 0, 4008cee9 <xthal_window_spill_nw+0x4d>
4008cee0:	19e217        	bbsi	a2, 1, 4008cefd <xthal_window_spill_nw+0x61>
4008cee3:	3ae227        	bbsi	a2, 2, 4008cf21 <xthal_window_spill_nw+0x85>
4008cee6:	002306        	j	4008cf76 <xthal_window_spill_nw+0xda>
4008cee9:	f0c932        	addi	a3, a9, -16
4008ceec:	0349      	s32i.n	a4, a3, 0
4008ceee:	1359      	s32i.n	a5, a3, 4
4008cef0:	2369      	s32i.n	a6, a3, 8
4008cef2:	3379      	s32i.n	a7, a3, 12
4008cef4:	416120        	srli	a6, a2, 1
4008cef7:	408010        	rotw	1
4008cefa:	fff706        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cefd:	f0cd32        	addi	a3, a13, -16
4008cf00:	0349      	s32i.n	a4, a3, 0
4008cf02:	1359      	s32i.n	a5, a3, 4
4008cf04:	2369      	s32i.n	a6, a3, 8
4008cf06:	3379      	s32i.n	a7, a3, 12
4008cf08:	f4c532        	addi	a3, a5, -12
4008cf0b:	0338      	l32i.n	a3, a3, 0
4008cf0d:	e0c332        	addi	a3, a3, -32
4008cf10:	0389      	s32i.n	a8, a3, 0
4008cf12:	1399      	s32i.n	a9, a3, 4
4008cf14:	23a9      	s32i.n	a10, a3, 8
4008cf16:	33b9      	s32i.n	a11, a3, 12
4008cf18:	41a220        	srli	a10, a2, 2
4008cf1b:	408020        	rotw	2
4008cf1e:	ffee06        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cf21:	408010        	rotw	1
4008cf24:	f0cdd2        	addi	a13, a13, -16
4008cf27:	0d09      	s32i.n	a0, a13, 0
4008cf29:	1d19      	s32i.n	a1, a13, 4
4008cf2b:	2d29      	s32i.n	a2, a13, 8
4008cf2d:	3d39      	s32i.n	a3, a13, 12
4008cf2f:	f4c132        	addi	a3, a1, -12
4008cf32:	0338      	l32i.n	a3, a3, 0
4008cf34:	10cdd2        	addi	a13, a13, 16
4008cf37:	d0c332        	addi	a3, a3, -48
4008cf3a:	0349      	s32i.n	a4, a3, 0
4008cf3c:	1359      	s32i.n	a5, a3, 4
4008cf3e:	2369      	s32i.n	a6, a3, 8
4008cf40:	3379      	s32i.n	a7, a3, 12
4008cf42:	4389      	s32i.n	a8, a3, 16
4008cf44:	5399      	s32i.n	a9, a3, 20
4008cf46:	63a9      	s32i.n	a10, a3, 24
4008cf48:	73b9      	s32i.n	a11, a3, 28
4008cf4a:	4080f0        	rotw	-1
4008cf4d:	41e320        	srli	a14, a2, 3
4008cf50:	408030        	rotw	3
4008cf53:	ffe0c6        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cf56:	100000        	and	a0, a0, a0
4008cf59:	204080        	or	a4, a0, a8
4008cf5c:	0348      	l32i.n	a4, a3, 0
4008cf5e:	401200        	ssl	a2
4008cf61:	120c      	movi.n	a2, 1
4008cf63:	a12200        	sll	a2, a2
4008cf66:	134920        	wsr.windowstart	a2
4008cf69:	002010        	rsync
4008cf6c:	020c      	movi.n	a2, 0
4008cf6e:	f00d      	ret.n
4008cf70:	120c      	movi.n	a2, 1
4008cf72:	f00d      	ret.n
4008cf74:	f00000        	subx8	a0, a0, a0
4008cf77:	1b1122        	l16ui	a2, a1, 54
4008cf7a:	483022        	lsi	f2, a0, 0x120
4008cf7d:	e2f703        	lsi	f0, a7, 0x388
4008cf80:	0b0a      	add.n	a0, a11, a0
4008cf82:	22f033        	lsi	f3, a0, 136
4008cf85:	62f711        	l32r	a1, 40065b64 <__udivmoddi4+0xf70>
4008cf88:	3030f7        	bltu	a0, a15, 4008cfbc <xthal_window_spill+0xc>
4008cf8b:	130034        	lsi	f3, a0, 76
4008cf8e:	320040        	orbc	b0, b0, b4
4008cf91:	223011        	l32r	a1, 40055854 <nvds_init_memory+0x14fc>
4008cf94:	202081        	l32r	a8, 40055014 <nvds_init_memory+0xcbc>
4008cf97:	4920f4        	mula.da.hl.ldinc	m2, a0, m0, a15
4008cf9a:	033013        	lsi	f1, a0, 12
4008cf9d:	022c03        	lsi	f0, a12, 8
4008cfa0:	c03230        	sub	a3, a2, a3
4008cfa3:	134830        	wsr.windowbase	a3
4008cfa6:	002010        	rsync
4008cfa9:	220c      	movi.n	a2, 2
4008cfab:	f00d      	ret.n
4008cfad:	000000        	ill

4008cfb0 <xthal_window_spill>:
4008cfb0:	002136        	entry	a1, 16
4008cfb3:	cec561        	l32r	a6, 40080ac8 <_init_end+0x6c8>
4008cfb6:	03e650        	rsr.ps	a5
4008cfb9:	004d      	mov.n	a4, a0
4008cfbb:	102560        	and	a2, a5, a6
4008cfbe:	223b      	addi.n	a2, a2, 3
4008cfc0:	13e620        	wsr.ps	a2
4008cfc3:	002010        	rsync
4008cfc6:	ffed45        	call0	4008ce9c <xthal_window_spill_nw>
4008cfc9:	040d      	mov.n	a0, a4
4008cfcb:	13e650        	wsr.ps	a5
4008cfce:	002010        	rsync
4008cfd1:	f01d      	retw.n
	...

4008cfd4 <xthal_get_ccount>:
4008cfd4:	002136        	entry	a1, 16
4008cfd7:	03ea20        	rsr.ccount	a2
4008cfda:	f01d      	retw.n

4008cfdc <xthal_set_ccompare>:
4008cfdc:	002136        	entry	a1, 16
4008cfdf:	52cc      	bnez.n	a2, 4008cfe8 <xthal_set_ccompare+0xc>
4008cfe1:	13f030        	wsr.ccompare0	a3
4008cfe4:	0003c6        	j	4008cff7 <xthal_set_ccompare+0x1b>
4008cfe7:	22f600        	orb	b15, b6, b0
4008cfea:	f13005        	call0	4007e2ec <__udivmoddi4+0x196f8>
4008cfed:	014613        	ssi	f1, a6, 4
4008cff0:	32f600        	orbc	b15, b6, b0
4008cff3:	f23005        	call0	4007f2f4 <__udivmoddi4+0x1a700>
4008cff6:	200013        	lsi	f1, a0, 128
4008cff9:	f01d00        	subx8	a1, a13, a0

4008cffc <xthal_get_ccompare>:
4008cffc:	002136        	entry	a1, 16
4008cfff:	52cc      	bnez.n	a2, 4008d008 <xthal_get_ccompare+0xc>
4008d001:	03f020        	rsr.ccompare0	a2
4008d004:	f01d      	retw.n
4008d006:	f60000        	lsi	f0, a0, 0x3d8
4008d009:	200422        	l8ui	a2, a4, 32
4008d00c:	1d03f1        	l32r	a15, 40054418 <nvds_init_memory+0xc0>
4008d00f:	32f6f0        	orbc	b15, b6, b15
4008d012:	f22004        	lsi	f0, a0, 0x3c8
4008d015:	f01d03        	lsi	f0, a13, 0x3c0
4008d018:	020c      	movi.n	a2, 0
4008d01a:	f01d      	retw.n

4008d01c <xthal_set_intclear>:
4008d01c:	002136        	entry	a1, 16
4008d01f:	13e320        	wsr.intclear	a2
4008d022:	f01d      	retw.n

4008d024 <xthal_restore_extra_nw>:
4008d024:	0238      	l32i.n	a3, a2, 0
4008d026:	f3e730        	wur.threadptr	a3
4008d029:	1238      	l32i.n	a3, a2, 4
4008d02b:	131030        	wsr.acclo	a3
4008d02e:	2238      	l32i.n	a3, a2, 8
4008d030:	131130        	wsr.acchi	a3
4008d033:	3238      	l32i.n	a3, a2, 12
4008d035:	130430        	wsr.br	a3
4008d038:	4238      	l32i.n	a3, a2, 16
4008d03a:	130c30        	wsr.scompare1	a3
4008d03d:	5238      	l32i.n	a3, a2, 20
4008d03f:	132030        	wsr.m0	a3
4008d042:	6238      	l32i.n	a3, a2, 24
4008d044:	132130        	wsr.m1	a3
4008d047:	7238      	l32i.n	a3, a2, 28
4008d049:	132230        	wsr.m2	a3
4008d04c:	8238      	l32i.n	a3, a2, 32
4008d04e:	132330        	wsr.m3	a3
4008d051:	9238      	l32i.n	a3, a2, 36
4008d053:	f3ea30        	wur.f64r_lo	a3
4008d056:	a238      	l32i.n	a3, a2, 40
4008d058:	f3eb30        	wur.f64r_hi	a3
4008d05b:	b238      	l32i.n	a3, a2, 44
4008d05d:	f3ec30        	wur.f64s	a3
4008d060:	f00d      	ret.n
	...

4008d064 <xthal_save_extra_nw>:
4008d064:	e33e70        	rur.threadptr	a3
4008d067:	0239      	s32i.n	a3, a2, 0
4008d069:	031030        	rsr.acclo	a3
4008d06c:	1239      	s32i.n	a3, a2, 4
4008d06e:	031130        	rsr.acchi	a3
4008d071:	2239      	s32i.n	a3, a2, 8
4008d073:	030430        	rsr.br	a3
4008d076:	3239      	s32i.n	a3, a2, 12
4008d078:	030c30        	rsr.scompare1	a3
4008d07b:	4239      	s32i.n	a3, a2, 16
4008d07d:	032030        	rsr.m0	a3
4008d080:	5239      	s32i.n	a3, a2, 20
4008d082:	032130        	rsr.m1	a3
4008d085:	6239      	s32i.n	a3, a2, 24
4008d087:	032230        	rsr.m2	a3
4008d08a:	7239      	s32i.n	a3, a2, 28
4008d08c:	032330        	rsr.m3	a3
4008d08f:	8239      	s32i.n	a3, a2, 32
4008d091:	e33ea0        	rur.f64r_lo	a3
4008d094:	9239      	s32i.n	a3, a2, 36
4008d096:	e33eb0        	rur.f64r_hi	a3
4008d099:	a239      	s32i.n	a3, a2, 40
4008d09b:	e33ec0        	rur.f64s	a3
4008d09e:	b239      	s32i.n	a3, a2, 44
4008d0a0:	f00d      	ret.n
	...

4008d0a4 <__xtensa_libgcc_window_spill>:
4008d0a4:	006136        	entry	a1, 48
4008d0a7:	000075        	call12	4008d0ac <__xtensa_libgcc_window_spill+0x8>
4008d0aa:	f01d      	retw.n
4008d0ac:	006136        	entry	a1, 48
4008d0af:	00cd      	mov.n	a12, a0
4008d0b1:	006136        	entry	a1, 48
4008d0b4:	00cd      	mov.n	a12, a0
4008d0b6:	006136        	entry	a1, 48
4008d0b9:	00cd      	mov.n	a12, a0
4008d0bb:	002136        	entry	a1, 16
4008d0be:	088d      	mov.n	a8, a8
4008d0c0:	f01d      	retw.n
	...

4008d0c4 <__xtensa_nonlocal_goto>:
4008d0c4:	004136        	entry	a1, 32
4008d0c7:	fffde5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
4008d0ca:	f0c152        	addi	a5, a1, -16
4008d0cd:	1568      	l32i.n	a6, a5, 4
4008d0cf:	f0c662        	addi	a6, a6, -16
4008d0d2:	008d      	mov.n	a8, a0
4008d0d4:	000186        	j	4008d0de <__xtensa_nonlocal_goto+0x1a>
4008d0d7:	0588      	l32i.n	a8, a5, 0
4008d0d9:	065d      	mov.n	a5, a6
4008d0db:	f0c762        	addi	a6, a7, -16
4008d0de:	1678      	l32i.n	a7, a6, 4
4008d0e0:	f3b277        	bgeu	a2, a7, 4008d0d7 <__xtensa_nonlocal_goto+0x13>
4008d0e3:	f0c142        	addi	a4, a1, -16
4008d0e6:	0568      	l32i.n	a6, a5, 0
4008d0e8:	1578      	l32i.n	a7, a5, 4
4008d0ea:	0469      	s32i.n	a6, a4, 0
4008d0ec:	1479      	s32i.n	a7, a4, 4
4008d0ee:	2568      	l32i.n	a6, a5, 8
4008d0f0:	3578      	l32i.n	a7, a5, 12
4008d0f2:	2469      	s32i.n	a6, a4, 8
4008d0f4:	3479      	s32i.n	a7, a4, 12
4008d0f6:	158e80        	extui	a8, a8, 30, 2
4008d0f9:	1133e0        	slli	a3, a3, 2
4008d0fc:	404200        	ssai	2
4008d0ff:	810830        	src	a0, a8, a3
4008d102:	f01d      	retw.n

4008d104 <__xtensa_sync_caches>:
4008d104:	004136        	entry	a1, 32
4008d107:	002000        	isync
4008d10a:	f01d      	retw.n

4008d10c <esp_rom_spiflash_read_status>:
4008d10c:	006136        	entry	a1, 48
4008d10f:	180c      	movi.n	a8, 1
4008d111:	3189      	s32i.n	a8, a1, 12
4008d113:	f03d      	nop.n
4008d115:	f03d      	nop.n
4008d117:	f03d      	nop.n
4008d119:	f03d      	nop.n
4008d11b:	cf1d81        	l32r	a8, 40080d90 <_init_end+0x990>
4008d11e:	010882        	l8ui	a8, a8, 1
4008d121:	043816        	beqz	a8, 4008d168 <esp_rom_spiflash_read_status+0x5c>
4008d124:	001686        	j	4008d182 <esp_rom_spiflash_read_status+0x76>
4008d127:	0c0000        	lsi	f0, a0, 48
4008d12a:	8109      	s32i.n	a0, a1, 32
4008d12c:	cf1a      	add.n	a12, a15, a1
4008d12e:	0020c0        	memw
4008d131:	0899      	s32i.n	a9, a8, 0
4008d133:	f03d      	nop.n
4008d135:	f03d      	nop.n
4008d137:	f03d      	nop.n
4008d139:	f03d      	nop.n
4008d13b:	cece91        	l32r	a9, 40080c74 <_init_end+0x874>
4008d13e:	cf1681        	l32r	a8, 40080d98 <_init_end+0x998>
4008d141:	0020c0        	memw
4008d144:	0899      	s32i.n	a9, a8, 0
4008d146:	f03d      	nop.n
4008d148:	f03d      	nop.n
4008d14a:	f03d      	nop.n
4008d14c:	f03d      	nop.n
4008d14e:	cf1281        	l32r	a8, 40080d98 <_init_end+0x998>
4008d151:	0020c0        	memw
4008d154:	0888      	l32i.n	a8, a8, 0
4008d156:	fec856        	bnez	a8, 4008d146 <esp_rom_spiflash_read_status+0x3a>
4008d159:	cf0e81        	l32r	a8, 40080d94 <_init_end+0x994>
4008d15c:	0020c0        	memw
4008d15f:	0898      	l32i.n	a9, a8, 0
4008d161:	5288      	l32i.n	a8, a2, 20
4008d163:	108980        	and	a8, a9, a8
4008d166:	3189      	s32i.n	a8, a1, 12
4008d168:	f03d      	nop.n
4008d16a:	f03d      	nop.n
4008d16c:	f03d      	nop.n
4008d16e:	f03d      	nop.n
4008d170:	3188      	l32i.n	a8, a1, 12
4008d172:	b3e807        	bbsi	a8, 0, 4008d129 <esp_rom_spiflash_read_status+0x1d>
4008d175:	000386        	j	4008d187 <esp_rom_spiflash_read_status+0x7b>
4008d178:	5b0c      	movi.n	a11, 5
4008d17a:	a1cb      	addi.n	a10, a1, 12
4008d17c:	cf0881        	l32r	a8, 40080d9c <_init_end+0x99c>
4008d17f:	0008e0        	callx8	a8
4008d182:	3188      	l32i.n	a8, a1, 12
4008d184:	f0e807        	bbsi	a8, 0, 4008d178 <esp_rom_spiflash_read_status+0x6c>
4008d187:	3128      	l32i.n	a2, a1, 12
4008d189:	0329      	s32i.n	a2, a3, 0
4008d18b:	020c      	movi.n	a2, 0
4008d18d:	f01d      	retw.n
	...

4008d190 <esp_rom_spiflash_wait_idle>:
4008d190:	006136        	entry	a1, 48
4008d193:	02ad      	mov.n	a10, a2
4008d195:	cf0281        	l32r	a8, 40080da0 <_init_end+0x9a0>
4008d198:	0020c0        	memw
4008d19b:	002882        	l32i	a8, a8, 0
4008d19e:	248080        	extui	a8, a8, 0, 3
4008d1a1:	ff0856        	bnez	a8, 4008d195 <esp_rom_spiflash_wait_idle+0x5>
4008d1a4:	cf0081        	l32r	a8, 40080da4 <_init_end+0x9a4>
4008d1a7:	0020c0        	memw
4008d1aa:	002882        	l32i	a8, a8, 0
4008d1ad:	248080        	extui	a8, a8, 0, 3
4008d1b0:	ff0856        	bnez	a8, 4008d1a4 <esp_rom_spiflash_wait_idle+0x14>
4008d1b3:	0cc1b2        	addi	a11, a1, 12
4008d1b6:	fff565        	call8	4008d10c <esp_rom_spiflash_read_status>
4008d1b9:	001a16        	beqz	a10, 4008d1be <esp_rom_spiflash_wait_idle+0x2e>
4008d1bc:	1a0c      	movi.n	a10, 1
4008d1be:	0a2d      	mov.n	a2, a10
4008d1c0:	f01d      	retw.n
	...

4008d1c4 <esp_rom_spiflash_erase_block_internal>:
4008d1c4:	004136        	entry	a1, 32
4008d1c7:	02ad      	mov.n	a10, a2
4008d1c9:	fffc65        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d1cc:	cea481        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d1cf:	103380        	and	a3, a3, a8
4008d1d2:	cef581        	l32r	a8, 40080da8 <_init_end+0x9a8>
4008d1d5:	0020c0        	memw
4008d1d8:	0839      	s32i.n	a3, a8, 0
4008d1da:	f03d      	nop.n
4008d1dc:	f03d      	nop.n
4008d1de:	f03d      	nop.n
4008d1e0:	f03d      	nop.n
4008d1e2:	ceb381        	l32r	a8, 40080cb0 <_init_end+0x8b0>
4008d1e5:	ceec31        	l32r	a3, 40080d98 <_init_end+0x998>
4008d1e8:	0020c0        	memw
4008d1eb:	0389      	s32i.n	a8, a3, 0
4008d1ed:	f03d      	nop.n
4008d1ef:	f03d      	nop.n
4008d1f1:	f03d      	nop.n
4008d1f3:	f03d      	nop.n
4008d1f5:	cee881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d1f8:	0020c0        	memw
4008d1fb:	002882        	l32i	a8, a8, 0
4008d1fe:	feb856        	bnez	a8, 4008d1ed <esp_rom_spiflash_erase_block_internal+0x29>
4008d201:	20a220        	or	a10, a2, a2
4008d204:	fff8a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d207:	00a022        	movi	a2, 0
4008d20a:	f01d      	retw.n

4008d20c <esp_rom_spiflash_erase_sector_internal>:
4008d20c:	004136        	entry	a1, 32
4008d20f:	b48030        	extui	a8, a3, 0, 12
4008d212:	047856        	bnez	a8, 4008d25d <esp_rom_spiflash_erase_sector_internal+0x51>
4008d215:	20a220        	or	a10, a2, a2
4008d218:	fff765        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d21b:	ce9081        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d21e:	103380        	and	a3, a3, a8
4008d221:	cee181        	l32r	a8, 40080da8 <_init_end+0x9a8>
4008d224:	0020c0        	memw
4008d227:	006832        	s32i	a3, a8, 0
4008d22a:	f03d      	nop.n
4008d22c:	f03d      	nop.n
4008d22e:	f03d      	nop.n
4008d230:	f03d      	nop.n
4008d232:	ce9181        	l32r	a8, 40080c78 <_init_end+0x878>
4008d235:	ced831        	l32r	a3, 40080d98 <_init_end+0x998>
4008d238:	0020c0        	memw
4008d23b:	006382        	s32i	a8, a3, 0
4008d23e:	f03d      	nop.n
4008d240:	f03d      	nop.n
4008d242:	f03d      	nop.n
4008d244:	f03d      	nop.n
4008d246:	ced481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d249:	0020c0        	memw
4008d24c:	002882        	l32i	a8, a8, 0
4008d24f:	feb856        	bnez	a8, 4008d23e <esp_rom_spiflash_erase_sector_internal+0x32>
4008d252:	20a220        	or	a10, a2, a2
4008d255:	fff3a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d258:	00a022        	movi	a2, 0
4008d25b:	f01d      	retw.n
4008d25d:	120c      	movi.n	a2, 1
4008d25f:	f01d      	retw.n
4008d261:	000000        	ill

4008d264 <esp_rom_spiflash_read_data>:
4008d264:	004136        	entry	a1, 32
4008d267:	808530        	add	a8, a5, a3
4008d26a:	012292        	l32i	a9, a2, 4
4008d26d:	02b987        	bgeu	a9, a8, 4008d273 <esp_rom_spiflash_read_data+0xf>
4008d270:	004f46        	j	4008d3b1 <esp_rom_spiflash_read_data+0x14d>
4008d273:	20a220        	or	a10, a2, a2
4008d276:	fff1a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d279:	004a86        	j	4008d3a7 <esp_rom_spiflash_read_data+0x143>
4008d27c:	f83c00        	lsi	f0, a12, 0x3e0
4008d27f:	022857        	blt	a8, a5, 4008d285 <esp_rom_spiflash_read_data+0x21>
4008d282:	0022c6        	j	4008d311 <esp_rom_spiflash_read_data+0xad>
4008d285:	ffa192        	movi	a9, 0x1ff
4008d288:	cec981        	l32r	a8, 40080dac <_init_end+0x9ac>
4008d28b:	0020c0        	memw
4008d28e:	0899      	s32i.n	a9, a8, 0
4008d290:	118380        	slli	a8, a3, 8
4008d293:	f03d      	nop.n
4008d295:	f03d      	nop.n
4008d297:	f03d      	nop.n
4008d299:	cec391        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d29c:	0020c0        	memw
4008d29f:	0989      	s32i.n	a8, a9, 0
4008d2a1:	f03d      	nop.n
4008d2a3:	f03d      	nop.n
4008d2a5:	f03d      	nop.n
4008d2a7:	f03d      	nop.n
4008d2a9:	cea791        	l32r	a9, 40080d48 <_init_end+0x948>
4008d2ac:	cebb81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d2af:	0020c0        	memw
4008d2b2:	0899      	s32i.n	a9, a8, 0
4008d2b4:	f03d      	nop.n
4008d2b6:	f03d      	nop.n
4008d2b8:	f03d      	nop.n
4008d2ba:	f03d      	nop.n
4008d2bc:	ceb781        	l32r	a8, 40080d98 <_init_end+0x998>
4008d2bf:	0020c0        	memw
4008d2c2:	0888      	l32i.n	a8, a8, 0
4008d2c4:	fec856        	bnez	a8, 4008d2b4 <esp_rom_spiflash_read_data+0x50>
4008d2c7:	090c      	movi.n	a9, 0
4008d2c9:	000d46        	j	4008d302 <esp_rom_spiflash_read_data+0x9e>
4008d2cc:	c4b200        	extui	a11, a0, 2, 13
4008d2cf:	b88104        	lsi	f0, a1, 0x2e0
4008d2d2:	ce          	.byte 0xce
4008d2d3:	808980        	add	a8, a9, a8
4008d2d6:	1188e0        	slli	a8, a8, 2
4008d2d9:	ceb6a1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d2dc:	80a8a0        	add	a10, a8, a10
4008d2df:	ceb6c1        	l32r	a12, 40080db8 <_init_end+0x9b8>
4008d2e2:	0e3ca7        	bltu	a12, a10, 4008d2f4 <esp_rom_spiflash_read_data+0x90>
4008d2e5:	ceb5d1        	l32r	a13, 40080dbc <_init_end+0x9bc>
4008d2e8:	ceb6c1        	l32r	a12, 40080dc0 <_init_end+0x9c0>
4008d2eb:	e1a0b2        	movi	a11, 225
4008d2ee:	ceb5a1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d2f1:	4d7da5        	call8	400daacc <__assert_func>
4008d2f4:	0020c0        	memw
4008d2f7:	0888      	l32i.n	a8, a8, 0
4008d2f9:	0489      	s32i.n	a8, a4, 0
4008d2fb:	991b      	addi.n	a9, a9, 1
4008d2fd:	749090        	extui	a9, a9, 0, 8
4008d300:	0b4d      	mov.n	a4, a11
4008d302:	f80c      	movi.n	a8, 15
4008d304:	c5b897        	bgeu	a8, a9, 4008d2cd <esp_rom_spiflash_read_data+0x69>
4008d307:	c0c552        	addi	a5, a5, -64
4008d30a:	40c332        	addi	a3, a3, 64
4008d30d:	002586        	j	4008d3a7 <esp_rom_spiflash_read_data+0x143>
4008d310:	838000        	moveqz	a8, a0, a0
4008d313:	a59111        	l32r	a1, 40076958 <__udivmoddi4+0x11d64>
4008d316:	ce          	.byte 0xce
4008d317:	0020c0        	memw
4008d31a:	0989      	s32i.n	a8, a9, 0
4008d31c:	ffa192        	movi	a9, 0x1ff
4008d31f:	f03d      	nop.n
4008d321:	f03d      	nop.n
4008d323:	f03d      	nop.n
4008d325:	cea181        	l32r	a8, 40080dac <_init_end+0x9ac>
4008d328:	0020c0        	memw
4008d32b:	0899      	s32i.n	a9, a8, 0
4008d32d:	f03d      	nop.n
4008d32f:	f03d      	nop.n
4008d331:	f03d      	nop.n
4008d333:	f03d      	nop.n
4008d335:	ce8491        	l32r	a9, 40080d48 <_init_end+0x948>
4008d338:	ce9881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d33b:	0020c0        	memw
4008d33e:	0899      	s32i.n	a9, a8, 0
4008d340:	f03d      	nop.n
4008d342:	f03d      	nop.n
4008d344:	f03d      	nop.n
4008d346:	f03d      	nop.n
4008d348:	ce9481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d34b:	0020c0        	memw
4008d34e:	0888      	l32i.n	a8, a8, 0
4008d350:	fec856        	bnez	a8, 4008d340 <esp_rom_spiflash_read_data+0xdc>
4008d353:	148050        	extui	a8, a5, 0, 2
4008d356:	68cc      	bnez.n	a8, 4008d360 <esp_rom_spiflash_read_data+0xfc>
4008d358:	745250        	extui	a5, a5, 2, 8
4008d35b:	000246        	j	4008d368 <esp_rom_spiflash_read_data+0x104>
4008d35e:	500000        	lsi	f0, a0, 0x140
4008d361:	1b2152        	l32i	a5, a1, 108
4008d364:	505055        	call4	400dd86c <_svfprintf_r+0x1554>
4008d367:	090c74        	lsi	f7, a12, 36
4008d36a:	000d06        	j	4008d3a2 <esp_rom_spiflash_read_data+0x13e>
4008d36d:	04c4c2        	addi	a12, a4, 4
4008d370:	ce9081        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d373:	808980        	add	a8, a9, a8
4008d376:	1188e0        	slli	a8, a8, 2
4008d379:	ce8ea1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d37c:	80a8a0        	add	a10, a8, a10
4008d37f:	ce8eb1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d382:	0e3ba7        	bltu	a11, a10, 4008d394 <esp_rom_spiflash_read_data+0x130>
4008d385:	ce8dd1        	l32r	a13, 40080dbc <_init_end+0x9bc>
4008d388:	ce8ec1        	l32r	a12, 40080dc0 <_init_end+0x9c0>
4008d38b:	eea0b2        	movi	a11, 238
4008d38e:	ce8da1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d391:	4d73a5        	call8	400daacc <__assert_func>
4008d394:	0020c0        	memw
4008d397:	0888      	l32i.n	a8, a8, 0
4008d399:	0489      	s32i.n	a8, a4, 0
4008d39b:	991b      	addi.n	a9, a9, 1
4008d39d:	749090        	extui	a9, a9, 0, 8
4008d3a0:	0c4d      	mov.n	a4, a12
4008d3a2:	c73957        	bltu	a9, a5, 4008d36d <esp_rom_spiflash_read_data+0x109>
4008d3a5:	050c      	movi.n	a5, 0
4008d3a7:	0215a6        	blti	a5, 1, 4008d3ad <esp_rom_spiflash_read_data+0x149>
4008d3aa:	ffb3c6        	j	4008d27d <esp_rom_spiflash_read_data+0x19>
4008d3ad:	020c      	movi.n	a2, 0
4008d3af:	f01d      	retw.n
4008d3b1:	120c      	movi.n	a2, 1
4008d3b3:	f01d      	retw.n
4008d3b5:	000000        	ill

4008d3b8 <esp_rom_spiflash_enable_write>:
4008d3b8:	006136        	entry	a1, 48
4008d3bb:	080c      	movi.n	a8, 0
4008d3bd:	3189      	s32i.n	a8, a1, 12
4008d3bf:	20a220        	or	a10, a2, a2
4008d3c2:	ffdce5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d3c5:	cd0c91        	l32r	a9, 400807f8 <_init_end+0x3f8>
4008d3c8:	ce7481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d3cb:	0020c0        	memw
4008d3ce:	0899      	s32i.n	a9, a8, 0
4008d3d0:	f03d      	nop.n
4008d3d2:	f03d      	nop.n
4008d3d4:	f03d      	nop.n
4008d3d6:	f03d      	nop.n
4008d3d8:	ce7081        	l32r	a8, 40080d98 <_init_end+0x998>
4008d3db:	0020c0        	memw
4008d3de:	0888      	l32i.n	a8, a8, 0
4008d3e0:	fec856        	bnez	a8, 4008d3d0 <esp_rom_spiflash_enable_write+0x18>
4008d3e3:	000206        	j	4008d3ef <esp_rom_spiflash_enable_write+0x37>
4008d3e6:	0cc1b2        	addi	a11, a1, 12
4008d3e9:	20a220        	or	a10, a2, a2
4008d3ec:	ffd1e5        	call8	4008d10c <esp_rom_spiflash_read_status>
4008d3ef:	032182        	l32i	a8, a1, 12
4008d3f2:	f06817        	bbci	a8, 1, 4008d3e6 <esp_rom_spiflash_enable_write+0x2e>
4008d3f5:	020c      	movi.n	a2, 0
4008d3f7:	f01d      	retw.n
4008d3f9:	000000        	ill

4008d3fc <esp_rom_spiflash_program_page_internal>:
4008d3fc:	004136        	entry	a1, 32
4008d3ff:	148050        	extui	a8, a5, 0, 2
4008d402:	114856        	bnez	a8, 4008d51a <esp_rom_spiflash_program_page_internal+0x11e>
4008d405:	4298      	l32i.n	a9, a2, 16
4008d407:	e28390        	remu	a8, a3, a9
4008d40a:	858a      	add.n	a8, a5, a8
4008d40c:	02b987        	bgeu	a9, a8, 4008d412 <esp_rom_spiflash_program_page_internal+0x16>
4008d40f:	0042c6        	j	4008d51e <esp_rom_spiflash_program_page_internal+0x122>
4008d412:	20a220        	or	a10, a2, a2
4008d415:	ffd7a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d418:	003cc6        	j	4008d50f <esp_rom_spiflash_program_page_internal+0x113>
4008d41b:	a22000        	muluh	a2, a0, a0
4008d41e:	f9a520        	lsi	f2, a5, 0x3e4
4008d421:	ff          	.byte 0xff
4008d422:	0fca56        	bnez	a10, 4008d522 <esp_rom_spiflash_program_page_internal+0x126>
4008d425:	1fa082        	movi	a8, 31
4008d428:	58a857        	bge	a8, a5, 4008d484 <esp_rom_spiflash_program_page_internal+0x88>
4008d42b:	ce0c81        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d42e:	109380        	and	a9, a3, a8
4008d431:	ce6581        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008d434:	208980        	or	a8, a9, a8
4008d437:	ce5c91        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d43a:	0020c0        	memw
4008d43d:	006982        	s32i	a8, a9, 0
4008d440:	090c      	movi.n	a9, 0
4008d442:	000c86        	j	4008d478 <esp_rom_spiflash_program_page_internal+0x7c>
4008d445:	ce5a81        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d448:	898a      	add.n	a8, a9, a8
4008d44a:	1188e0        	slli	a8, a8, 2
4008d44d:	ce59a1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d450:	a8aa      	add.n	a10, a8, a10
4008d452:	ce59b1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d455:	113ba7        	bltu	a11, a10, 4008d46a <esp_rom_spiflash_program_page_internal+0x6e>
4008d458:	ce5dd1        	l32r	a13, 40080dcc <_init_end+0x9cc>
4008d45b:	ce5dc1        	l32r	a12, 40080dd0 <_init_end+0x9d0>
4008d45e:	ada0b2        	movi	a11, 173
4008d461:	ce58a1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d464:	201110        	or	a1, a1, a1
4008d467:	4d6665        	call8	400daacc <__assert_func>
4008d46a:	04a8      	l32i.n	a10, a4, 0
4008d46c:	0020c0        	memw
4008d46f:	08a9      	s32i.n	a10, a8, 0
4008d471:	991b      	addi.n	a9, a9, 1
4008d473:	749090        	extui	a9, a9, 0, 8
4008d476:	444b      	addi.n	a4, a4, 4
4008d478:	c989b6        	bltui	a9, 8, 4008d445 <esp_rom_spiflash_program_page_internal+0x49>
4008d47b:	e0c552        	addi	a5, a5, -32
4008d47e:	20c332        	addi	a3, a3, 32
4008d481:	001906        	j	4008d4e9 <esp_rom_spiflash_program_page_internal+0xed>
4008d484:	cdf681        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d487:	109380        	and	a9, a3, a8
4008d48a:	018580        	slli	a8, a5, 24
4008d48d:	208980        	or	a8, a9, a8
4008d490:	ce4691        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d493:	0020c0        	memw
4008d496:	0989      	s32i.n	a8, a9, 0
4008d498:	148050        	extui	a8, a5, 0, 2
4008d49b:	58cc      	bnez.n	a8, 4008d4a4 <esp_rom_spiflash_program_page_internal+0xa8>
4008d49d:	745250        	extui	a5, a5, 2, 8
4008d4a0:	000206        	j	4008d4ac <esp_rom_spiflash_program_page_internal+0xb0>
4008d4a3:	525000        	lsi	f0, a0, 0x148
4008d4a6:	551b21        	l32r	a2, 40062914 <esp_rom_spiflash_read_user_cmd+0x764>
4008d4a9:	745050        	extui	a5, a5, 0, 8
4008d4ac:	090c      	movi.n	a9, 0
4008d4ae:	000c86        	j	4008d4e4 <esp_rom_spiflash_program_page_internal+0xe8>
4008d4b1:	ce3f81        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d4b4:	898a      	add.n	a8, a9, a8
4008d4b6:	1188e0        	slli	a8, a8, 2
4008d4b9:	ce3ea1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d4bc:	a8aa      	add.n	a10, a8, a10
4008d4be:	ce3eb1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d4c1:	113ba7        	bltu	a11, a10, 4008d4d6 <esp_rom_spiflash_program_page_internal+0xda>
4008d4c4:	ce42d1        	l32r	a13, 40080dcc <_init_end+0x9cc>
4008d4c7:	ce42c1        	l32r	a12, 40080dd0 <_init_end+0x9d0>
4008d4ca:	b6a0b2        	movi	a11, 182
4008d4cd:	ce3da1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d4d0:	201110        	or	a1, a1, a1
4008d4d3:	4d5fa5        	call8	400daacc <__assert_func>
4008d4d6:	04a8      	l32i.n	a10, a4, 0
4008d4d8:	0020c0        	memw
4008d4db:	08a9      	s32i.n	a10, a8, 0
4008d4dd:	991b      	addi.n	a9, a9, 1
4008d4df:	749090        	extui	a9, a9, 0, 8
4008d4e2:	444b      	addi.n	a4, a4, 4
4008d4e4:	c93957        	bltu	a9, a5, 4008d4b1 <esp_rom_spiflash_program_page_internal+0xb5>
4008d4e7:	050c      	movi.n	a5, 0
4008d4e9:	ce3a91        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008d4ec:	ce2b81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d4ef:	0020c0        	memw
4008d4f2:	006892        	s32i	a9, a8, 0
4008d4f5:	f03d      	nop.n
4008d4f7:	f03d      	nop.n
4008d4f9:	f03d      	nop.n
4008d4fb:	f03d      	nop.n
4008d4fd:	ce2681        	l32r	a8, 40080d98 <_init_end+0x998>
4008d500:	0020c0        	memw
4008d503:	002882        	l32i	a8, a8, 0
4008d506:	feb856        	bnez	a8, 4008d4f5 <esp_rom_spiflash_program_page_internal+0xf9>
4008d509:	20a220        	or	a10, a2, a2
4008d50c:	ffc825        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d50f:	0215a6        	blti	a5, 1, 4008d515 <esp_rom_spiflash_program_page_internal+0x119>
4008d512:	ffc186        	j	4008d41c <esp_rom_spiflash_program_page_internal+0x20>
4008d515:	00a022        	movi	a2, 0
4008d518:	f01d      	retw.n
4008d51a:	120c      	movi.n	a2, 1
4008d51c:	f01d      	retw.n
4008d51e:	120c      	movi.n	a2, 1
4008d520:	f01d      	retw.n
4008d522:	120c      	movi.n	a2, 1
4008d524:	f01d      	retw.n
	...

4008d528 <esp_rom_spiflash_read_statushigh>:
4008d528:	004136        	entry	a1, 32
4008d52b:	ce2ba1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d52e:	ffc625        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d531:	35a0b2        	movi	a11, 53
4008d534:	20a330        	or	a10, a3, a3
4008d537:	ce1981        	l32r	a8, 40080d9c <_init_end+0x99c>
4008d53a:	0008e0        	callx8	a8
4008d53d:	002382        	l32i	a8, a3, 0
4008d540:	118880        	slli	a8, a8, 8
4008d543:	0389      	s32i.n	a8, a3, 0
4008d545:	0a2d      	mov.n	a2, a10
4008d547:	f01d      	retw.n
4008d549:	000000        	ill

4008d54c <esp_rom_spiflash_write_status>:
4008d54c:	004136        	entry	a1, 32
4008d54f:	02ad      	mov.n	a10, a2
4008d551:	ffc3e5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d554:	ce1081        	l32r	a8, 40080d94 <_init_end+0x994>
4008d557:	0020c0        	memw
4008d55a:	0839      	s32i.n	a3, a8, 0
4008d55c:	f03d      	nop.n
4008d55e:	f03d      	nop.n
4008d560:	f03d      	nop.n
4008d562:	f03d      	nop.n
4008d564:	ce1e91        	l32r	a9, 40080ddc <_init_end+0x9dc>
4008d567:	ce0c81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d56a:	0020c0        	memw
4008d56d:	006892        	s32i	a9, a8, 0
4008d570:	f03d      	nop.n
4008d572:	f03d      	nop.n
4008d574:	f03d      	nop.n
4008d576:	f03d      	nop.n
4008d578:	ce0881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d57b:	0020c0        	memw
4008d57e:	0888      	l32i.n	a8, a8, 0
4008d580:	fec856        	bnez	a8, 4008d570 <esp_rom_spiflash_write_status+0x24>
4008d583:	02ad      	mov.n	a10, a2
4008d585:	ffc0a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d588:	020c      	movi.n	a2, 0
4008d58a:	f01d      	retw.n

4008d58c <esp_rom_spiflash_unlock>:
4008d58c:	006136        	entry	a1, 48
4008d58f:	ce1221        	l32r	a2, 40080dd8 <_init_end+0x9d8>
4008d592:	20a220        	or	a10, a2, a2
4008d595:	ffbfa5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d598:	b1cb      	addi.n	a11, a1, 12
4008d59a:	02ad      	mov.n	a10, a2
4008d59c:	fff8a5        	call8	4008d528 <esp_rom_spiflash_read_statushigh>
4008d59f:	06fa56        	bnez	a10, 4008d612 <esp_rom_spiflash_unlock+0x86>
4008d5a2:	3138      	l32i.n	a3, a1, 12
4008d5a4:	00a222        	movi	a2, 0x200
4008d5a7:	102320        	and	a2, a3, a2
4008d5aa:	3129      	s32i.n	a2, a1, 12
4008d5ac:	f03d      	nop.n
4008d5ae:	0020f0        	nop
4008d5b1:	0020f0        	nop
4008d5b4:	0020f0        	nop
4008d5b7:	ce08a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d5ba:	ffbd65        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d5bd:	cc8e31        	l32r	a3, 400807f8 <_init_end+0x3f8>
4008d5c0:	cdf621        	l32r	a2, 40080d98 <_init_end+0x998>
4008d5c3:	0020c0        	memw
4008d5c6:	0239      	s32i.n	a3, a2, 0
4008d5c8:	f03d      	nop.n
4008d5ca:	f03d      	nop.n
4008d5cc:	f03d      	nop.n
4008d5ce:	0020f0        	nop
4008d5d1:	cdf181        	l32r	a8, 40080d98 <_init_end+0x998>
4008d5d4:	0020c0        	memw
4008d5d7:	002882        	l32i	a8, a8, 0
4008d5da:	fea856        	bnez	a8, 4008d5c8 <esp_rom_spiflash_unlock+0x3c>
4008d5dd:	cdfe31        	l32r	a3, 40080dd8 <_init_end+0x9d8>
4008d5e0:	20a330        	or	a10, a3, a3
4008d5e3:	ffbae5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d5e6:	cdfe81        	l32r	a8, 40080de0 <_init_end+0x9e0>
4008d5e9:	0020c0        	memw
4008d5ec:	002892        	l32i	a9, a8, 0
4008d5ef:	cc4b21        	l32r	a2, 4008071c <_init_end+0x31c>
4008d5f2:	202920        	or	a2, a9, a2
4008d5f5:	0020c0        	memw
4008d5f8:	0829      	s32i.n	a2, a8, 0
4008d5fa:	f03d      	nop.n
4008d5fc:	f03d      	nop.n
4008d5fe:	f03d      	nop.n
4008d600:	f03d      	nop.n
4008d602:	31b8      	l32i.n	a11, a1, 12
4008d604:	03ad      	mov.n	a10, a3
4008d606:	fff465        	call8	4008d54c <esp_rom_spiflash_write_status>
4008d609:	0a2d      	mov.n	a2, a10
4008d60b:	5a8c      	beqz.n	a10, 4008d614 <esp_rom_spiflash_unlock+0x88>
4008d60d:	120c      	movi.n	a2, 1
4008d60f:	f01d      	retw.n
4008d611:	120c00        	andbc	b0, b12, b0
4008d614:	f01d      	retw.n
	...

4008d618 <esp_rom_spiflash_erase_block>:
4008d618:	004136        	entry	a1, 32
4008d61b:	cdf291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d61e:	0020c0        	memw
4008d621:	0029a2        	l32i	a10, a9, 0
4008d624:	cda481        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d627:	108a80        	and	a8, a10, a8
4008d62a:	0020c0        	memw
4008d62d:	006982        	s32i	a8, a9, 0
4008d630:	f03d      	nop.n
4008d632:	f03d      	nop.n
4008d634:	f03d      	nop.n
4008d636:	f03d      	nop.n
4008d638:	cdeca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d63b:	0020c0        	memw
4008d63e:	0a98      	l32i.n	a9, a10, 0
4008d640:	cc4681        	l32r	a8, 40080758 <_init_end+0x358>
4008d643:	109980        	and	a9, a9, a8
4008d646:	cde981        	l32r	a8, 40080dec <_init_end+0x9ec>
4008d649:	208980        	or	a8, a9, a8
4008d64c:	0020c0        	memw
4008d64f:	0a89      	s32i.n	a8, a10, 0
4008d651:	f03d      	nop.n
4008d653:	f03d      	nop.n
4008d655:	f03d      	nop.n
4008d657:	f03d      	nop.n
4008d659:	cddf91        	l32r	a9, 40080dd8 <_init_end+0x9d8>
4008d65c:	1988      	l32i.n	a8, a9, 4
4008d65e:	2998      	l32i.n	a9, a9, 8
4008d660:	c28890        	quou	a8, a8, a9
4008d663:	1ab287        	bgeu	a2, a8, 4008d681 <esp_rom_spiflash_erase_block+0x69>
4008d666:	cddca1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d669:	ffd4e5        	call8	4008d3b8 <esp_rom_spiflash_enable_write>
4008d66c:	6adc      	bnez.n	a10, 4008d686 <esp_rom_spiflash_erase_block+0x6e>
4008d66e:	cddaa1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d671:	2ab8      	l32i.n	a11, a10, 8
4008d673:	82b2b0        	mull	a11, a2, a11
4008d676:	ffb4e5        	call8	4008d1c4 <esp_rom_spiflash_erase_block_internal>
4008d679:	0a2d      	mov.n	a2, a10
4008d67b:	9a8c      	beqz.n	a10, 4008d688 <esp_rom_spiflash_erase_block+0x70>
4008d67d:	120c      	movi.n	a2, 1
4008d67f:	f01d      	retw.n
4008d681:	120c      	movi.n	a2, 1
4008d683:	f01d      	retw.n
4008d685:	120c00        	andbc	b0, b12, b0
4008d688:	f01d      	retw.n
	...

4008d68c <esp_rom_spiflash_erase_sector>:
4008d68c:	004136        	entry	a1, 32
4008d68f:	cdd591        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d692:	0020c0        	memw
4008d695:	0029a2        	l32i	a10, a9, 0
4008d698:	cd8781        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d69b:	108a80        	and	a8, a10, a8
4008d69e:	0020c0        	memw
4008d6a1:	006982        	s32i	a8, a9, 0
4008d6a4:	f03d      	nop.n
4008d6a6:	f03d      	nop.n
4008d6a8:	f03d      	nop.n
4008d6aa:	f03d      	nop.n
4008d6ac:	cdcfa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d6af:	0020c0        	memw
4008d6b2:	0a98      	l32i.n	a9, a10, 0
4008d6b4:	cc2981        	l32r	a8, 40080758 <_init_end+0x358>
4008d6b7:	109980        	and	a9, a9, a8
4008d6ba:	cdcc81        	l32r	a8, 40080dec <_init_end+0x9ec>
4008d6bd:	208980        	or	a8, a9, a8
4008d6c0:	0020c0        	memw
4008d6c3:	0a89      	s32i.n	a8, a10, 0
4008d6c5:	f03d      	nop.n
4008d6c7:	f03d      	nop.n
4008d6c9:	f03d      	nop.n
4008d6cb:	f03d      	nop.n
4008d6cd:	cdc291        	l32r	a9, 40080dd8 <_init_end+0x9d8>
4008d6d0:	1988      	l32i.n	a8, a9, 4
4008d6d2:	3998      	l32i.n	a9, a9, 12
4008d6d4:	c28890        	quou	a8, a8, a9
4008d6d7:	1ab287        	bgeu	a2, a8, 4008d6f5 <esp_rom_spiflash_erase_sector+0x69>
4008d6da:	cdbfa1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d6dd:	ffcda5        	call8	4008d3b8 <esp_rom_spiflash_enable_write>
4008d6e0:	5adc      	bnez.n	a10, 4008d6f9 <esp_rom_spiflash_erase_sector+0x6d>
4008d6e2:	cdbda1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d6e5:	3ab8      	l32i.n	a11, a10, 12
4008d6e7:	82b2b0        	mull	a11, a2, a11
4008d6ea:	ffb225        	call8	4008d20c <esp_rom_spiflash_erase_sector_internal>
4008d6ed:	0a2d      	mov.n	a2, a10
4008d6ef:	8a8c      	beqz.n	a10, 4008d6fb <esp_rom_spiflash_erase_sector+0x6f>
4008d6f1:	120c      	movi.n	a2, 1
4008d6f3:	f01d      	retw.n
4008d6f5:	120c      	movi.n	a2, 1
4008d6f7:	f01d      	retw.n
4008d6f9:	120c      	movi.n	a2, 1
4008d6fb:	f01d      	retw.n
4008d6fd:	000000        	ill

4008d700 <esp_rom_spiflash_write>:
4008d700:	006136        	entry	a1, 48
4008d703:	cdb861        	l32r	a6, 40080de4 <_init_end+0x9e4>
4008d706:	0020c0        	memw
4008d709:	0678      	l32i.n	a7, a6, 0
4008d70b:	cd6a51        	l32r	a5, 40080cb4 <_init_end+0x8b4>
4008d70e:	105750        	and	a5, a7, a5
4008d711:	0020c0        	memw
4008d714:	0659      	s32i.n	a5, a6, 0
4008d716:	f03d      	nop.n
4008d718:	f03d      	nop.n
4008d71a:	f03d      	nop.n
4008d71c:	f03d      	nop.n
4008d71e:	cdb271        	l32r	a7, 40080de8 <_init_end+0x9e8>
4008d721:	0020c0        	memw
4008d724:	0768      	l32i.n	a6, a7, 0
4008d726:	cc0c51        	l32r	a5, 40080758 <_init_end+0x358>
4008d729:	106650        	and	a6, a6, a5
4008d72c:	cdb051        	l32r	a5, 40080dec <_init_end+0x9ec>
4008d72f:	205650        	or	a5, a6, a5
4008d732:	0020c0        	memw
4008d735:	0759      	s32i.n	a5, a7, 0
4008d737:	542a      	add.n	a5, a4, a2
4008d739:	f03d      	nop.n
4008d73b:	f03d      	nop.n
4008d73d:	f03d      	nop.n
4008d73f:	cda661        	l32r	a6, 40080dd8 <_init_end+0x9d8>
4008d742:	1668      	l32i.n	a6, a6, 4
4008d744:	02b657        	bgeu	a6, a5, 4008d74a <esp_rom_spiflash_write+0x4a>
4008d747:	001ec6        	j	4008d7c6 <esp_rom_spiflash_write+0xc6>
4008d74a:	cda351        	l32r	a5, 40080dd8 <_init_end+0x9d8>
4008d74d:	4578      	l32i.n	a7, a5, 16
4008d74f:	e25270        	remu	a5, a2, a7
4008d752:	c05750        	sub	a5, a7, a5
4008d755:	14b457        	bgeu	a4, a5, 4008d76d <esp_rom_spiflash_write+0x6d>
4008d758:	04dd      	mov.n	a13, a4
4008d75a:	03cd      	mov.n	a12, a3
4008d75c:	02bd      	mov.n	a11, a2
4008d75e:	cd9ea1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d761:	ffc9a5        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d764:	0a2d      	mov.n	a2, a10
4008d766:	066a16        	beqz	a10, 4008d7d0 <esp_rom_spiflash_write+0xd0>
4008d769:	120c      	movi.n	a2, 1
4008d76b:	f01d      	retw.n
4008d76d:	20d550        	or	a13, a5, a5
4008d770:	20c330        	or	a12, a3, a3
4008d773:	20b220        	or	a11, a2, a2
4008d776:	cd98a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d779:	ffc825        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d77c:	04aa56        	bnez	a10, 4008d7ca <esp_rom_spiflash_write+0xca>
4008d77f:	c06450        	sub	a6, a4, a5
4008d782:	c26670        	quou	a6, a6, a7
4008d785:	3169      	s32i.n	a6, a1, 12
4008d787:	060c      	movi.n	a6, 0
4008d789:	0006c6        	j	4008d7a8 <esp_rom_spiflash_write+0xa8>
4008d78c:	c25000        	quou	a5, a0, a0
4008d78f:	d77041        	l32r	a4, 40083550 <set_chan_dig_gain+0xb0>
4008d792:	cc3020        	lsi	f2, a0, 0x330
4008d795:	b520a0        	extui	a2, a10, 16, 12
4008d798:	8fa180        	f64cmph	a10, a1, a8, 8
4008d79b:	e5cd      	lsi	f12, a5, 20
4008d79d:	ecffc5        	call0	4007a79c <__udivmoddi4+0x15ba8>
4008d7a0:	7aba      	add.n	a7, a10, a11
4008d7a2:	661b55        	call4	400f3958 <_text_end+0x7487>
4008d7a5:	746060        	extui	a6, a6, 0, 8
4008d7a8:	3188      	l32i.n	a8, a1, 12
4008d7aa:	df3687        	bltu	a6, a8, 4008d78d <esp_rom_spiflash_write+0x8d>
4008d7ad:	41c250        	srli	a12, a5, 2
4008d7b0:	c0d450        	sub	a13, a4, a5
4008d7b3:	a0cc30        	addx4	a12, a12, a3
4008d7b6:	b52a      	add.n	a11, a5, a2
4008d7b8:	cd88a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d7bb:	ffc425        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d7be:	0a2d      	mov.n	a2, a10
4008d7c0:	ca8c      	beqz.n	a10, 4008d7d0 <esp_rom_spiflash_write+0xd0>
4008d7c2:	120c      	movi.n	a2, 1
4008d7c4:	f01d      	retw.n
4008d7c6:	120c      	movi.n	a2, 1
4008d7c8:	f01d      	retw.n
4008d7ca:	120c      	movi.n	a2, 1
4008d7cc:	f01d      	retw.n
4008d7ce:	120c      	movi.n	a2, 1
4008d7d0:	f01d      	retw.n
	...

4008d7d4 <esp_rom_spiflash_write_encrypted>:
4008d7d4:	004136        	entry	a1, 32
4008d7d7:	445020        	extui	a5, a2, 0, 5
4008d7da:	048556        	bnez	a5, 4008d826 <esp_rom_spiflash_write_encrypted+0x52>
4008d7dd:	445040        	extui	a5, a4, 0, 5
4008d7e0:	046556        	bnez	a5, 4008d82a <esp_rom_spiflash_write_encrypted+0x56>
4008d7e3:	cd8381        	l32r	a8, 40080df0 <_init_end+0x9f0>
4008d7e6:	0008e0        	callx8	a8
4008d7e9:	060c      	movi.n	a6, 0
4008d7eb:	065d      	mov.n	a5, a6
4008d7ed:	000946        	j	4008d816 <esp_rom_spiflash_write_encrypted+0x42>
4008d7f0:	b6b000        	lsi	f0, a0, 0x2d8
4008d7f3:	72b011        	l32r	a1, 4006a2b4 <__udivmoddi4+0x56c0>
4008d7f6:	b3b080        	movgez	a11, a0, a8
4008d7f9:	a77080        	lsi	f8, a0, 0x29c
4008d7fc:	7d8120        	lsi	f2, a1, 0x1f4
4008d7ff:	e0cd      	lsi	f12, a0, 0
4008d801:	0008      	l32i.n	a0, a0, 0
4008d803:	0a5d      	mov.n	a5, a10
4008d805:	3adc      	bnez.n	a10, 4008d81c <esp_rom_spiflash_write_encrypted+0x48>
4008d807:	0c2c      	movi.n	a12, 32
4008d809:	03bd      	mov.n	a11, a3
4008d80b:	07ad      	mov.n	a10, a7
4008d80d:	ffef25        	call8	4008d700 <esp_rom_spiflash_write>
4008d810:	0a5d      	mov.n	a5, a10
4008d812:	6acc      	bnez.n	a10, 4008d81c <esp_rom_spiflash_write_encrypted+0x48>
4008d814:	661b      	addi.n	a6, a6, 1
4008d816:	417540        	srli	a7, a4, 5
4008d819:	d43677        	bltu	a6, a7, 4008d7f1 <esp_rom_spiflash_write_encrypted+0x1d>
4008d81c:	cd7781        	l32r	a8, 40080df8 <_init_end+0x9f8>
4008d81f:	0008e0        	callx8	a8
4008d822:	052d      	mov.n	a2, a5
4008d824:	f01d      	retw.n
4008d826:	120c      	movi.n	a2, 1
4008d828:	f01d      	retw.n
4008d82a:	120c      	movi.n	a2, 1
4008d82c:	f01d      	retw.n
	...

4008d830 <esp_rom_spiflash_read>:
4008d830:	004136        	entry	a1, 32
4008d833:	02bd      	mov.n	a11, a2
4008d835:	03cd      	mov.n	a12, a3
4008d837:	04dd      	mov.n	a13, a4
4008d839:	cd6981        	l32r	a8, 40080de0 <_init_end+0x9e0>
4008d83c:	0020c0        	memw
4008d83f:	0888      	l32i.n	a8, a8, 0
4008d841:	cd6e91        	l32r	a9, 40080dfc <_init_end+0x9fc>
4008d844:	10a890        	and	a10, a8, a9
4008d847:	021a97        	beq	a10, a9, 4008d84d <esp_rom_spiflash_read+0x1d>
4008d84a:	0021c6        	j	4008d8d5 <esp_rom_spiflash_read+0xa5>
4008d84d:	cd6581        	l32r	a8, 40080de4 <_init_end+0x9e4>
4008d850:	0020c0        	memw
4008d853:	08a8      	l32i.n	a10, a8, 0
4008d855:	cd6a91        	l32r	a9, 40080e00 <_init_end+0xa00>
4008d858:	109a90        	and	a9, a10, a9
4008d85b:	0020c0        	memw
4008d85e:	0899      	s32i.n	a9, a8, 0
4008d860:	f03d      	nop.n
4008d862:	f03d      	nop.n
4008d864:	f03d      	nop.n
4008d866:	f03d      	nop.n
4008d868:	0020c0        	memw
4008d86b:	08a8      	l32i.n	a10, a8, 0
4008d86d:	cd6591        	l32r	a9, 40080e04 <_init_end+0xa04>
4008d870:	209a90        	or	a9, a10, a9
4008d873:	0020c0        	memw
4008d876:	0899      	s32i.n	a9, a8, 0
4008d878:	f03d      	nop.n
4008d87a:	f03d      	nop.n
4008d87c:	f03d      	nop.n
4008d87e:	f03d      	nop.n
4008d880:	cd5aa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d883:	0020c0        	memw
4008d886:	0a98      	l32i.n	a9, a10, 0
4008d888:	cbb481        	l32r	a8, 40080758 <_init_end+0x358>
4008d88b:	109980        	and	a9, a9, a8
4008d88e:	cd5e81        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d891:	208980        	or	a8, a9, a8
4008d894:	0020c0        	memw
4008d897:	0a89      	s32i.n	a8, a10, 0
4008d899:	f03d      	nop.n
4008d89b:	f03d      	nop.n
4008d89d:	f03d      	nop.n
4008d89f:	f03d      	nop.n
4008d8a1:	0020c0        	memw
4008d8a4:	0a98      	l32i.n	a9, a10, 0
4008d8a6:	00af82        	movi	a8, 0xffffff00
4008d8a9:	109980        	and	a9, a9, a8
4008d8ac:	cd3981        	l32r	a8, 40080d90 <_init_end+0x990>
4008d8af:	010882        	l8ui	a8, a8, 1
4008d8b2:	883b      	addi.n	a8, a8, 3
4008d8b4:	748080        	extui	a8, a8, 0, 8
4008d8b7:	208890        	or	a8, a8, a9
4008d8ba:	0020c0        	memw
4008d8bd:	0a89      	s32i.n	a8, a10, 0
4008d8bf:	f03d      	nop.n
4008d8c1:	f03d      	nop.n
4008d8c3:	f03d      	nop.n
4008d8c5:	f03d      	nop.n
4008d8c7:	cd5291        	l32r	a9, 40080e10 <_init_end+0xa10>
4008d8ca:	cd5081        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d8cd:	0020c0        	memw
4008d8d0:	0899      	s32i.n	a9, a8, 0
4008d8d2:	009a06        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d8d5:	02e8d7        	bbsi	a8, 13, 4008d8db <esp_rom_spiflash_read+0xab>
4008d8d8:	006706        	j	4008da78 <esp_rom_spiflash_read+0x248>
4008d8db:	cd4291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d8de:	0020c0        	memw
4008d8e1:	09e8      	l32i.n	a14, a9, 0
4008d8e3:	cd47a1        	l32r	a10, 40080e00 <_init_end+0xa00>
4008d8e6:	10aea0        	and	a10, a14, a10
4008d8e9:	0020c0        	memw
4008d8ec:	09a9      	s32i.n	a10, a9, 0
4008d8ee:	f03d      	nop.n
4008d8f0:	f03d      	nop.n
4008d8f2:	f03d      	nop.n
4008d8f4:	f03d      	nop.n
4008d8f6:	0020c0        	memw
4008d8f9:	09e8      	l32i.n	a14, a9, 0
4008d8fb:	cd46a1        	l32r	a10, 40080e14 <_init_end+0xa14>
4008d8fe:	20aea0        	or	a10, a14, a10
4008d901:	0020c0        	memw
4008d904:	09a9      	s32i.n	a10, a9, 0
4008d906:	02f877        	bbsi	a8, 23, 4008d90c <esp_rom_spiflash_read+0xdc>
4008d909:	0035c6        	j	4008d9e4 <esp_rom_spiflash_read+0x1b4>
4008d90c:	f03d      	nop.n
4008d90e:	f03d      	nop.n
4008d910:	f03d      	nop.n
4008d912:	f03d      	nop.n
4008d914:	cd1f81        	l32r	a8, 40080d90 <_init_end+0x990>
4008d917:	010882        	l8ui	a8, a8, 1
4008d91a:	046856        	bnez	a8, 4008d964 <esp_rom_spiflash_read+0x134>
4008d91d:	0020c0        	memw
4008d920:	09a8      	l32i.n	a10, a9, 0
4008d922:	cce481        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d925:	108a80        	and	a8, a10, a8
4008d928:	0020c0        	memw
4008d92b:	0989      	s32i.n	a8, a9, 0
4008d92d:	f03d      	nop.n
4008d92f:	f03d      	nop.n
4008d931:	f03d      	nop.n
4008d933:	f03d      	nop.n
4008d935:	cd2ca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d938:	0020c0        	memw
4008d93b:	0a98      	l32i.n	a9, a10, 0
4008d93d:	cb8681        	l32r	a8, 40080758 <_init_end+0x358>
4008d940:	109980        	and	a9, a9, a8
4008d943:	cd3181        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d946:	208980        	or	a8, a9, a8
4008d949:	0020c0        	memw
4008d94c:	0a89      	s32i.n	a8, a10, 0
4008d94e:	f03d      	nop.n
4008d950:	f03d      	nop.n
4008d952:	f03d      	nop.n
4008d954:	f03d      	nop.n
4008d956:	cd3091        	l32r	a9, 40080e18 <_init_end+0xa18>
4008d959:	cd2c81        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d95c:	0020c0        	memw
4008d95f:	0899      	s32i.n	a9, a8, 0
4008d961:	007646        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d964:	cd2091        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d967:	0020c0        	memw
4008d96a:	09a8      	l32i.n	a10, a9, 0
4008d96c:	cd1781        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008d96f:	208a80        	or	a8, a10, a8
4008d972:	0020c0        	memw
4008d975:	0989      	s32i.n	a8, a9, 0
4008d977:	f03d      	nop.n
4008d979:	f03d      	nop.n
4008d97b:	f03d      	nop.n
4008d97d:	f03d      	nop.n
4008d97f:	cd1aa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d982:	0020c0        	memw
4008d985:	0a98      	l32i.n	a9, a10, 0
4008d987:	cb7481        	l32r	a8, 40080758 <_init_end+0x358>
4008d98a:	109980        	and	a9, a9, a8
4008d98d:	cd1e81        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d990:	208980        	or	a8, a9, a8
4008d993:	0020c0        	memw
4008d996:	0a89      	s32i.n	a8, a10, 0
4008d998:	f03d      	nop.n
4008d99a:	f03d      	nop.n
4008d99c:	f03d      	nop.n
4008d99e:	f03d      	nop.n
4008d9a0:	0020c0        	memw
4008d9a3:	0a98      	l32i.n	a9, a10, 0
4008d9a5:	00af82        	movi	a8, 0xffffff00
4008d9a8:	109980        	and	a9, a9, a8
4008d9ab:	ccf981        	l32r	a8, 40080d90 <_init_end+0x990>
4008d9ae:	010882        	l8ui	a8, a8, 1
4008d9b1:	880b      	addi.n	a8, a8, -1
4008d9b3:	748080        	extui	a8, a8, 0, 8
4008d9b6:	208890        	or	a8, a8, a9
4008d9b9:	0020c0        	memw
4008d9bc:	0a89      	s32i.n	a8, a10, 0
4008d9be:	f03d      	nop.n
4008d9c0:	f03d      	nop.n
4008d9c2:	f03d      	nop.n
4008d9c4:	f03d      	nop.n
4008d9c6:	cd11a1        	l32r	a10, 40080e0c <_init_end+0xa0c>
4008d9c9:	0020c0        	memw
4008d9cc:	0a98      	l32i.n	a9, a10, 0
4008d9ce:	cb7681        	l32r	a8, 400807a8 <_init_end+0x3a8>
4008d9d1:	109980        	and	a9, a9, a8
4008d9d4:	bba082        	movi	a8, 187
4008d9d7:	208980        	or	a8, a9, a8
4008d9da:	0020c0        	memw
4008d9dd:	0a89      	s32i.n	a8, a10, 0
4008d9df:	0056c6        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d9e2:	470000        	lsi	f0, a0, 0x11c
4008d9e5:	0d78      	l32i.n	a7, a13, 0
4008d9e7:	cd0d91        	l32r	a9, 40080e1c <_init_end+0xa1c>
4008d9ea:	cd0881        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d9ed:	0020c0        	memw
4008d9f0:	0899      	s32i.n	a9, a8, 0
4008d9f2:	000746        	j	4008da13 <esp_rom_spiflash_read+0x1e3>
4008d9f5:	0f68e7        	bbci	a8, 14, 4008da08 <esp_rom_spiflash_read+0x1d8>
4008d9f8:	cd0a91        	l32r	a9, 40080e20 <_init_end+0xa20>
4008d9fb:	cd0481        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d9fe:	0020c0        	memw
4008da01:	0899      	s32i.n	a9, a8, 0
4008da03:	000306        	j	4008da13 <esp_rom_spiflash_read+0x1e3>
4008da06:	910000        	srl	a0, a0
4008da09:	81cd07        	bnall	a13, a0, 4008d98e <esp_rom_spiflash_read+0x15e>
4008da0c:	c0cd00        	sub	a12, a13, a0
4008da0f:	990020        	lsi	f2, a0, 0x264
4008da12:	3d08      	l32i.n	a0, a13, 12
4008da14:	f03df0        	subx8	a3, a13, a15
4008da17:	f03d      	nop.n
4008da19:	f03d      	nop.n
4008da1b:	ccf291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008da1e:	0020c0        	memw
4008da21:	09a8      	l32i.n	a10, a9, 0
4008da23:	cce981        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008da26:	208a80        	or	a8, a10, a8
4008da29:	0020c0        	memw
4008da2c:	0989      	s32i.n	a8, a9, 0
4008da2e:	f03d      	nop.n
4008da30:	f03d      	nop.n
4008da32:	f03d      	nop.n
4008da34:	f03d      	nop.n
4008da36:	cceca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008da39:	0020c0        	memw
4008da3c:	0a98      	l32i.n	a9, a10, 0
4008da3e:	cb4681        	l32r	a8, 40080758 <_init_end+0x358>
4008da41:	109980        	and	a9, a9, a8
4008da44:	ccea81        	l32r	a8, 40080dec <_init_end+0x9ec>
4008da47:	208980        	or	a8, a9, a8
4008da4a:	0020c0        	memw
4008da4d:	0a89      	s32i.n	a8, a10, 0
4008da4f:	f03d      	nop.n
4008da51:	f03d      	nop.n
4008da53:	f03d      	nop.n
4008da55:	f03d      	nop.n
4008da57:	0020c0        	memw
4008da5a:	0a98      	l32i.n	a9, a10, 0
4008da5c:	00af82        	movi	a8, 0xffffff00
4008da5f:	109980        	and	a9, a9, a8
4008da62:	cccb81        	l32r	a8, 40080d90 <_init_end+0x990>
4008da65:	010882        	l8ui	a8, a8, 1
4008da68:	887b      	addi.n	a8, a8, 7
4008da6a:	748080        	extui	a8, a8, 0, 8
4008da6d:	208890        	or	a8, a8, a9
4008da70:	0020c0        	memw
4008da73:	0a89      	s32i.n	a8, a10, 0
4008da75:	003146        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008da78:	ccdb91        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008da7b:	0020c0        	memw
4008da7e:	09a8      	l32i.n	a10, a9, 0
4008da80:	cce081        	l32r	a8, 40080e00 <_init_end+0xa00>
4008da83:	108a80        	and	a8, a10, a8
4008da86:	0020c0        	memw
4008da89:	0989      	s32i.n	a8, a9, 0
4008da8b:	f03d      	nop.n
4008da8d:	f03d      	nop.n
4008da8f:	f03d      	nop.n
4008da91:	f03d      	nop.n
4008da93:	ccbf81        	l32r	a8, 40080d90 <_init_end+0x990>
4008da96:	010882        	l8ui	a8, a8, 1
4008da99:	38dc      	bnez.n	a8, 4008dab0 <esp_rom_spiflash_read+0x280>
4008da9b:	0020c0        	memw
4008da9e:	09a8      	l32i.n	a10, a9, 0
4008daa0:	cc8581        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008daa3:	108a80        	and	a8, a10, a8
4008daa6:	0020c0        	memw
4008daa9:	0989      	s32i.n	a8, a9, 0
4008daab:	001006        	j	4008daef <esp_rom_spiflash_read+0x2bf>
4008daae:	910000        	srl	a0, a0
4008dab1:	cccd      	lsi	f12, a12, 48
4008dab3:	0020c0        	memw
4008dab6:	0029a2        	l32i	a10, a9, 0
4008dab9:	ccc381        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008dabc:	208a80        	or	a8, a10, a8
4008dabf:	0020c0        	memw
4008dac2:	006982        	s32i	a8, a9, 0
4008dac5:	f03d      	nop.n
4008dac7:	f03d      	nop.n
4008dac9:	f03d      	nop.n
4008dacb:	f03d      	nop.n
4008dacd:	ccc6a1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008dad0:	0020c0        	memw
4008dad3:	002a92        	l32i	a9, a10, 0
4008dad6:	00af82        	movi	a8, 0xffffff00
4008dad9:	109980        	and	a9, a9, a8
4008dadc:	ccad81        	l32r	a8, 40080d90 <_init_end+0x990>
4008dadf:	010882        	l8ui	a8, a8, 1
4008dae2:	880b      	addi.n	a8, a8, -1
4008dae4:	748080        	extui	a8, a8, 0, 8
4008dae7:	208890        	or	a8, a8, a9
4008daea:	0020c0        	memw
4008daed:	0a89      	s32i.n	a8, a10, 0
4008daef:	f03d      	nop.n
4008daf1:	f03d      	nop.n
4008daf3:	f03d      	nop.n
4008daf5:	f03d      	nop.n
4008daf7:	ccbb91        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008dafa:	0020c0        	memw
4008dafd:	09a8      	l32i.n	a10, a9, 0
4008daff:	ccc581        	l32r	a8, 40080e14 <_init_end+0xa14>
4008db02:	208a80        	or	a8, a10, a8
4008db05:	0020c0        	memw
4008db08:	0989      	s32i.n	a8, a9, 0
4008db0a:	f03d      	nop.n
4008db0c:	f03d      	nop.n
4008db0e:	f03d      	nop.n
4008db10:	f03d      	nop.n
4008db12:	ccb5a1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008db15:	0020c0        	memw
4008db18:	0a98      	l32i.n	a9, a10, 0
4008db1a:	cb0f81        	l32r	a8, 40080758 <_init_end+0x358>
4008db1d:	109980        	and	a9, a9, a8
4008db20:	ccb381        	l32r	a8, 40080dec <_init_end+0x9ec>
4008db23:	208980        	or	a8, a9, a8
4008db26:	0020c0        	memw
4008db29:	0a89      	s32i.n	a8, a10, 0
4008db2b:	f03d      	nop.n
4008db2d:	f03d      	nop.n
4008db2f:	f03d      	nop.n
4008db31:	f03d      	nop.n
4008db33:	ccbd91        	l32r	a9, 40080e28 <_init_end+0xa28>
4008db36:	ccb581        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008db39:	0020c0        	memw
4008db3c:	0899      	s32i.n	a9, a8, 0
4008db3e:	f03d      	nop.n
4008db40:	f03d      	nop.n
4008db42:	f03d      	nop.n
4008db44:	f03d      	nop.n
4008db46:	cca4a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008db49:	ff71a5        	call8	4008d264 <esp_rom_spiflash_read_data>
4008db4c:	0a8c      	beqz.n	a10, 4008db50 <esp_rom_spiflash_read+0x320>
4008db4e:	1a0c      	movi.n	a10, 1
4008db50:	0a2d      	mov.n	a2, a10
4008db52:	f01d      	retw.n

Disassembly of section .flash.text:

400d0018 <_flash_cache_start>:
400d0018:	153c      	movi.n	a5, 49
400d001a:	503f40        	ritlb0	a4, a15
400d001d:	3f4015        	call4	4010f420 <_etext+0x22f4f>
400d0020:	400020        	lsi	f2, a0, 0x100
400d0023:	3f          	.byte 0x3f
400d0024:	0028      	l32i.n	a2, a0, 0
400d0026:	303f40        	xor	a3, a15, a4
400d0029:	3f4000        	f64cmph	a4, a0, a0, 3
400d002c:	0038      	l32i.n	a3, a0, 0
400d002e:	403f40        	lsi	f4, a15, 0x100
400d0031:	3f4000        	f64cmph	a4, a0, a0, 3
400d0034:	0048      	l32i.n	a4, a0, 0
400d0036:	403f40        	lsi	f4, a15, 0x100
400d0039:	1f          	.byte 0x1f
400d003a:	3f0000        	f64cmph	a0, a0, a0, 3
400d003d:	1f          	.byte 0x1f
400d003e:	500000        	lsi	f0, a0, 0x140
400d0041:	3f4000        	f64cmph	a4, a0, a0, 3
400d0044:	cff8      	l32i.n	a15, a15, 48
400d0046:	4c4000        	lsi	f0, a0, 0x130
400d0049:	400023        	lsi	f2, a0, 0x100
400d004c:	c938      	l32i.n	a3, a9, 48
400d004e:	544000        	extui	a4, a0, 0, 6
400d0051:	0029      	s32i.n	a2, a0, 0
400d0053:	006c40        	rsil	a4, 12
400d0056:	8c3f40        	lsi	f4, a15, 0x230
400d0059:	400635        	call12	401100bc <_etext+0x23beb>
400d005c:	000000        	ill
400d005f:	ffff00        	f64cmph	a15, a15, a0, 15
400d0062:	ff          	.byte 0xff
400d0063:	7f          	.byte 0x7f
400d0064:	ff          	.byte 0xff
400d0065:	ff          	.byte 0xff
400d0066:	ff          	.byte 0xff
400d0067:	3f          	.byte 0x3f
400d0068:	ff          	.byte 0xff
400d0069:	ff          	.byte 0xff
400d006a:	ff          	.byte 0xff
400d006b:	1f          	.byte 0x1f
400d006c:	c44c      	movi.n	a4, 76
400d006e:	ff4000        	f64cmph	a4, a0, a0, 15
400d0071:	ff          	.byte 0xff
400d0072:	140000        	extui	a0, a0, 0, 2
400d0075:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0078:	001c      	movi.n	a0, 16
400d007a:	3ffc      	bnez.n	a15, 400d00b1 <_flash_cache_start+0x99>
400d007c:	000000        	ill
400d007f:	14c080        	extui	a12, a8, 0, 2
400d0082:	9c4000        	lsi	f0, a0, 0x270
400d0085:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0088:	fc0024        	lsi	f2, a0, 0x3f0
400d008b:	3f          	.byte 0x3f
400d008c:	beb8      	l32i.n	a11, a14, 44
400d008e:	c84000        	lsi	f0, a0, 0x320
400d0091:	4000c2        	l8ui	a12, a0, 64
400d0094:	becc      	bnez.n	a14, 400d00a3 <_flash_cache_start+0x8b>
400d0096:	c04000        	sub	a4, a0, a0
400d0099:	4000c3        	lsi	f12, a0, 0x100
400d009c:	002c      	movi.n	a0, 32
400d009e:	3ffc      	bnez.n	a15, 400d00d5 <_flash_cache_start+0xbd>
400d00a0:	400094        	lsi	f9, a0, 0x100
400d00a3:	3f          	.byte 0x3f
400d00a4:	fc0034        	lsi	f3, a0, 0x3f0
400d00a7:	3f          	.byte 0x3f
400d00a8:	0d4224        	lsi	f2, a2, 52
400d00ab:	000040        	lsi	f4, a0, 0
400d00ae:	98c000        	lsi	f0, a0, 0x260
400d00b1:	3f4000        	f64cmph	a4, a0, a0, 3
400d00b4:	47ac      	beqz.n	a7, 400d00dc <_flash_cache_start+0xc4>
400d00b6:	400d      	lsi	f0, a0, 0
400d00b8:	4858      	l32i.n	a5, a8, 16
400d00ba:	400d      	lsi	f0, a0, 0
400d00bc:	0d48b4        	lsi	f11, a8, 52
400d00bf:	492d40        	s32e	a4, a13, -56
400d00c2:	400d      	lsi	f0, a0, 0
400d00c4:	0d4990        	lsi	f9, a9, 52
400d00c7:	00cc40        	lsi	f4, a12, 0
400d00ca:	943f40        	extui	a3, a4, 15, 10
400d00cd:	4e          	.byte 0x4e
400d00ce:	400d      	lsi	f0, a0, 0
400d00d0:	4fac      	beqz.n	a15, 400d00f8 <_flash_cache_start+0xe0>
400d00d2:	400d      	lsi	f0, a0, 0
400d00d4:	4c28      	l32i.n	a2, a12, 16
400d00d6:	400d      	lsi	f0, a0, 0
400d00d8:	fc0000        	lsi	f0, a0, 0x3f0
400d00db:	3f          	.byte 0x3f
400d00dc:	fc0004        	lsi	f0, a0, 0x3f0
400d00df:	3f          	.byte 0x3f
400d00e0:	ff          	.byte 0xff
400d00e1:	ff          	.byte 0xff
400d00e2:	1f          	.byte 0x1f
400d00e3:	bea000        	f64iter	a10, a0, a0, 3, 0
400d00e6:	784000        	lsi	f0, a0, 0x1e0
400d00e9:	0e9b      	addi.n	a0, a14, 9
400d00eb:	dbb440        	movt.s	f11, f4, b4
400d00ee:	3ffb      	addi.n	a3, a15, 15
400d00f0:	fc0010        	lsi	f1, a0, 0x3f0
400d00f3:	3f          	.byte 0x3f
400d00f4:	000c      	movi.n	a0, 0
400d00f6:	3ffc      	bnez.n	a15, 400d012d <_flash_cache_start+0x115>
400d00f8:	400100        	ssr	a1
400d00fb:	3f          	.byte 0x3f
400d00fc:	000000        	ill
400d00ff:	0b5c20        	lsi	f2, a12, 44
400d0102:	3ffc      	bnez.n	a15, 400d0139 <_flash_cache_start+0x121>
400d0104:	155c      	movi.n	a5, 81
400d0106:	243f40        	extui	a3, a4, 15, 3
400d0109:	3f4017        	ball	a0, a1, 400d014c <_flash_cache_start+0x134>
400d010c:	401590        	lsi	f9, a5, 0x100
400d010f:	3f          	.byte 0x3f
400d0110:	15fc      	bnez.n	a5, 400d0145 <_flash_cache_start+0x12d>
400d0112:	1c3f40        	lsi	f4, a15, 112
400d0115:	0068      	l32i.n	a6, a0, 0
400d0117:	868440        	lsi	f4, a4, 0x218
400d011a:	443f41        	l32r	a4, 400a1218 <_iram_end+0x136c4>
400d011d:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0120:	409570        	lsi	f7, a5, 0x100
400d0123:	3f          	.byte 0x3f
400d0124:	8648      	l32i.n	a4, a6, 32
400d0126:	683f41        	l32r	a4, 400aa224 <_iram_end+0x1c6d0>
400d0129:	3ff004        	lsi	f0, a0, 252
400d012c:	bf          	.byte 0xbf
400d012d:	00e4e1        	l32r	a14, 400904c0 <_iram_end+0x296c>
400d0130:	400114        	lsi	f1, a1, 0x100
400d0133:	3f          	.byte 0x3f
400d0134:	401744        	lsi	f4, a7, 0x100
400d0137:	3f          	.byte 0x3f
400d0138:	4017e0        	lsi	f14, a7, 0x100
400d013b:	3f          	.byte 0x3f
400d013c:	401774        	lsi	f7, a7, 0x100
400d013f:	3f          	.byte 0x3f
400d0140:	2328      	l32i.n	a2, a3, 8
400d0142:	dc0000        	lsi	f0, a0, 0x370
400d0145:	3f4017        	ball	a0, a1, 400d0188 <_flash_cache_start+0x170>
400d0148:	001c      	movi.n	a0, 16
400d014a:	003ff4        	lsi	f15, a15, 0
400d014d:	0fff00        	f64cmph	a15, a15, a0, 0
400d0150:	037c36        	entry	a12, 0x1b8
400d0153:	8c0800        	lsi	f0, a8, 0x230
400d0156:	061a      	add.n	a0, a6, a1
400d0158:	f000c0        	subx8	a0, a0, a12
400d015b:	3f          	.byte 0x3f
400d015c:	001c      	movi.n	a0, 16
400d015e:	cc3ff0        	lsi	f15, a15, 0x330
400d0161:	3ff000        	f64cmph	a15, a0, a0, 3
400d0164:	e513f0        	extui	a1, a15, 19, 15
400d0167:	f0ac00        	subx8	a10, a12, a0
400d016a:	003ff4        	lsi	f15, a15, 0
400d016d:	002000        	isync
400d0170:	d0ac      	beqz.n	a0, 400d01a1 <_flash_cache_start+0x189>
400d0172:	c43ff6        	bgeui	a15, 3, 400d013a <_flash_cache_start+0x122>
400d0175:	3ff000        	f64cmph	a15, a0, a0, 3
400d0178:	f00020        	subx8	a0, a0, a2
400d017b:	3f          	.byte 0x3f
400d017c:	0081d4        	lsi	f13, a1, 0
400d017f:	ebe840        	f64cmpl	a14, a8, a4
400d0182:	3ffb      	addi.n	a3, a15, 15
400d0184:	0078      	l32i.n	a7, a0, 0
400d0186:	3ffc      	bnez.n	a15, 400d01bd <_flash_cache_start+0x1a5>
400d0188:	117c      	movi.n	a1, -15
400d018a:	4008      	l32i.n	a0, a0, 16
400d018c:	007c      	movi.n	a0, -16
400d018e:	3ffc      	bnez.n	a15, 400d01c5 <_flash_cache_start+0x1ad>
400d0190:	187c      	movi.n	a8, -15
400d0192:	a43f40        	extui	a3, a4, 15, 11
400d0195:	4018      	l32i.n	a1, a0, 16
400d0197:	3f          	.byte 0x3f
400d0198:	180c      	movi.n	a8, 1
400d019a:	943f40        	extui	a3, a4, 15, 10
400d019d:	3ffc00        	f64cmph	a15, a12, a0, 3
400d01a0:	e7e8      	l32i.n	a14, a7, 56
400d01a2:	3ffb      	addi.n	a3, a15, 15
400d01a4:	087450        	lsx	f7, a4, a5
400d01a7:	080440        	lsx	f0, a4, a4
400d01aa:	ff0000        	f64cmph	a0, a0, a0, 15
400d01ad:	ff          	.byte 0xff
400d01ae:	ffffc1        	l32r	a12, 400d01ac <_flash_cache_start+0x194>
400d01b1:	ff          	.byte 0xff
400d01b2:	fe          	.byte 0xfe
400d01b3:	ff          	.byte 0xff
400d01b4:	18bc      	beqz.n	a8, 400d01e9 <_flash_cache_start+0x1d1>
400d01b6:	a43f40        	extui	a3, a4, 15, 11
400d01b9:	4019      	s32i.n	a1, a0, 16
400d01bb:	3f          	.byte 0x3f
400d01bc:	18c8      	l32i.n	a12, a8, 4
400d01be:	bc3f40        	lsi	f4, a15, 0x2f0
400d01c1:	4019      	s32i.n	a1, a0, 16
400d01c3:	3f          	.byte 0x3f
400d01c4:	401934        	lsi	f3, a9, 0x100
400d01c7:	3f          	.byte 0x3f
400d01c8:	401990        	lsi	f9, a9, 0x100
400d01cb:	3f          	.byte 0x3f
400d01cc:	f40000        	extui	a0, a0, 0, 16
400d01cf:	bf          	.byte 0xbf
400d01d0:	ff          	.byte 0xff
400d01d1:	ff          	.byte 0xff
400d01d2:	f00ff3        	lsi	f15, a15, 0x3c0
400d01d5:	fbeb      	addi.n	a15, a11, 14
400d01d7:	3f          	.byte 0x3f
400d01d8:	0811e0        	lsx	f1, a1, a14
400d01db:	ffff40        	f64cmph	a15, a15, a4, 15
400d01de:	3f          	.byte 0x3f
400d01df:	008cc0        	any4	b12, b12:b13:b14:b15
400d01e2:	3ffc      	bnez.n	a15, 400d0219 <_flash_cache_start+0x201>
400d01e4:	f60000        	lsi	f0, a0, 0x3d8
400d01e7:	3f          	.byte 0x3f
400d01e8:	d83aa1        	l32r	a10, 400c62d0 <_rtc_text_end+0x62d0>
400d01eb:	800050        	add	a0, a0, a5
400d01ee:	000003        	lsi	f0, a0, 0
400d01f1:	001c00        	movsp	a0, a12
400d01f4:	ff          	.byte 0xff
400d01f5:	ff          	.byte 0xff
400d01f6:	ff          	.byte 0xff
400d01f7:	9f          	.byte 0x9f
400d01f8:	000000        	ill
400d01fb:	0018      	l32i.n	a1, a0, 0
400d01fd:	9c4000        	lsi	f0, a0, 0x270
400d0200:	002710        	lsi	f1, a7, 0
400d0203:	14dc00        	extui	a13, a0, 12, 2
400d0206:	4008      	l32i.n	a0, a0, 16
400d0208:	000000        	ill
400d020b:	294c01        	l32r	a0, 4009a73c <_iram_end+0xcbe8>
400d020e:	543f40        	extui	a3, a4, 15, 6
400d0211:	4029      	s32i.n	a2, a0, 16
400d0213:	3f          	.byte 0x3f
400d0214:	2d8c      	beqz.n	a13, 400d021a <_flash_cache_start+0x202>
400d0216:	543f40        	extui	a3, a4, 15, 6
400d0219:	007d      	mov.n	a7, a0
400d021b:	00a040        	any8	b4, b0:b1:b2:b3:b4:b5:b6:b7
400d021e:	3ffc      	bnez.n	a15, 400d0255 <_flash_cache_start+0x23d>
400d0220:	00ac      	beqz.n	a0, 400d0244 <_flash_cache_start+0x22c>
400d0222:	3ffc      	bnez.n	a15, 400d0259 <_flash_cache_start+0x241>
400d0224:	fc00a4        	lsi	f10, a0, 0x3f0
400d0227:	3f          	.byte 0x3f
400d0228:	401664        	lsi	f6, a6, 0x100
400d022b:	3f          	.byte 0x3f
400d022c:	402e50        	lsi	f5, a14, 0x100
400d022f:	3f          	.byte 0x3f
400d0230:	2dbc      	beqz.n	a13, 400d0266 <_flash_cache_start+0x24e>
400d0232:	e43f40        	extui	a3, a4, 15, 15
400d0235:	be          	.byte 0xbe
400d0236:	a84000        	lsi	f0, a0, 0x2a0
400d0239:	3ffc00        	f64cmph	a15, a12, a0, 3
400d023c:	001200        	movsp	a0, a2
400d023f:	2e4400        	f64norm	a4, a4, a0, 0
400d0242:	743f40        	extui	a3, a4, 15, 8
400d0245:	400d63        	lsi	f6, a13, 0x100
400d0248:	081670        	lsx	f1, a6, a7
400d024b:	000040        	lsi	f4, a0, 0
400d024e:	b81000        	lsi	f0, a0, 0x2e0
400d0251:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0254:	fc12b0        	lsi	f11, a2, 0x3f0
400d0257:	3f          	.byte 0x3f
400d0258:	12a8      	l32i.n	a10, a2, 4
400d025a:	3ffc      	bnez.n	a15, 400d0291 <_flash_cache_start+0x279>
400d025c:	fc00c0        	lsi	f12, a0, 0x3f0
400d025f:	3f          	.byte 0x3f
400d0260:	2edc      	bnez.n	a14, 400d0276 <_flash_cache_start+0x25e>
400d0262:	d03f40        	subx2	a3, a15, a4
400d0265:	400d64        	lsi	f6, a13, 0x100
400d0268:	401664        	lsi	f6, a6, 0x100
400d026b:	3f          	.byte 0x3f
400d026c:	402ee4        	lsi	f14, a14, 0x100
400d026f:	3f          	.byte 0x3f
400d0270:	2e6c      	movi.n	a14, -30
400d0272:	483f40        	ssx	f3, a15, a4
400d0275:	3ff480        	f64cmph	a15, a4, a8, 3
400d0278:	2f28      	l32i.n	a2, a15, 8
400d027a:	d43f40        	extui	a3, a4, 15, 14
400d027d:	3ff480        	f64cmph	a15, a4, a8, 3
400d0280:	028000        	andb	b8, b0, b0
400d0283:	658040        	extui	a8, a4, 16, 7
400d0286:	400d      	lsi	f0, a0, 0
400d0288:	402f50        	lsi	f5, a15, 0x100
400d028b:	3f          	.byte 0x3f
400d028c:	300c      	movi.n	a0, 3
400d028e:	a03f40        	addx4	a3, a15, a4
400d0291:	2f          	.byte 0x2f
400d0292:	3c3f40        	lsi	f4, a15, 240
400d0295:	3ff480        	f64cmph	a15, a4, a8, 3
400d0298:	fc00d0        	lsi	f13, a0, 0x3f0
400d029b:	3f          	.byte 0x3f
400d029c:	f5f000        	extui	a15, a0, 16, 16
400d029f:	3f          	.byte 0x3f
400d02a0:	fbeef0        	f64subc	a15, a14, 3, 0
400d02a3:	3f          	.byte 0x3f
400d02a4:	eee8      	l32i.n	a14, a14, 56
400d02a6:	3ffb      	addi.n	a3, a15, 15
400d02a8:	fbeee0        	f64subc	a14, a14, 3, 0
400d02ab:	3f          	.byte 0x3f
400d02ac:	ec08      	l32i.n	a0, a12, 56
400d02ae:	3ffb      	addi.n	a3, a15, 15
400d02b0:	403020        	lsi	f2, a0, 0x100
400d02b3:	3f          	.byte 0x3f
400d02b4:	302c      	movi.n	a0, 35
400d02b6:	903f40        	addx2	a3, a15, a4
400d02b9:	3f4030        	f64cmph	a4, a0, a3, 3
400d02bc:	fbeec4        	lsi	f12, a14, 0x3ec
400d02bf:	3f          	.byte 0x3f
400d02c0:	30a8      	l32i.n	a10, a0, 12
400d02c2:	b83f40        	lsi	f4, a15, 0x2e0
400d02c5:	3f4030        	f64cmph	a4, a0, a3, 3
400d02c8:	4030d0        	lsi	f13, a0, 0x100
400d02cb:	3f          	.byte 0x3f
400d02cc:	0d6680        	lsi	f8, a6, 52
400d02cf:	30e840        	xor	a14, a8, a4
400d02d2:	2c3f40        	lsi	f4, a15, 176
400d02d5:	3f4032        	s8i	a3, a0, 63
400d02d8:	3148      	l32i.n	a4, a1, 12
400d02da:	043f40        	extui	a3, a4, 15, 1
400d02dd:	0d6b      	addi.n	a0, a13, 6
400d02df:	31dc40        	srai	a13, a4, 28
400d02e2:	183f40        	lsxp	f3, a15, a4
400d02e5:	3f4032        	s8i	a3, a0, 63
400d02e8:	708c      	beqz.n	a0, 400d02f3 <_flash_cache_start+0x2db>
400d02ea:	4008      	l32i.n	a0, a0, 16
400d02ec:	08dc      	bnez.n	a8, 400d0300 <_flash_cache_start+0x2e8>
400d02ee:	3ffc      	bnez.n	a15, 400d0325 <_flash_cache_start+0x30d>
400d02f0:	fc00d4        	lsi	f13, a0, 0x3f0
400d02f3:	3f          	.byte 0x3f
400d02f4:	0d6b20        	lsi	f2, a11, 52
400d02f7:	6b1040        	ole.s	b1, f0, f4
400d02fa:	400d      	lsi	f0, a0, 0
400d02fc:	fc08d4        	lsi	f13, a8, 0x3f0
400d02ff:	3f          	.byte 0x3f
400d0300:	100014        	lsi	f1, a0, 64
400d0303:	ffff00        	f64cmph	a15, a15, a0, 15
400d0306:	3f          	.byte 0x3f
400d0307:	0000b3        	lsi	f11, a0, 0
400d030a:	a00200        	addx4	a0, a2, a0
400d030d:	3ff005        	call0	40110210 <_etext+0x23d3f>
400d0310:	0fc000        	f64cmph	a12, a0, a0, 0
400d0313:	324000        	orbc	b4, b0, b0
400d0316:	003f40        	lsi	f4, a15, 0
400d0319:	fc09      	s32i.n	a0, a12, 60
400d031b:	3f          	.byte 0x3f
400d031c:	fc0904        	lsi	f0, a9, 0x3f0
400d031f:	3f          	.byte 0x3f
400d0320:	081e74        	lsi	f7, a14, 32
400d0323:	0c0040        	lsi	f4, a0, 48
400d0326:	640000        	extui	a0, a0, 0, 7
400d0329:	3f4033        	ssi	f3, a0, 252
400d032c:	403374        	lsi	f7, a3, 0x100
400d032f:	3f          	.byte 0x3f
400d0330:	1bde83        	lsi	f8, a14, 108
400d0333:	08f443        	lsi	f4, a4, 32
400d0336:	3ffc      	bnez.n	a15, 400d036d <_flash_cache_start+0x355>
400d0338:	4033a0        	lsi	f10, a3, 0x100
400d033b:	3f          	.byte 0x3f
400d033c:	3458      	l32i.n	a5, a4, 12
400d033e:	843f40        	extui	a3, a4, 15, 9
400d0341:	3f4032        	s8i	a3, a0, 63
400d0344:	ff          	.byte 0xff
400d0345:	ff          	.byte 0xff
400d0346:	ff          	.byte 0xff
400d0347:	ef          	.byte 0xef
400d0348:	fc08f0        	lsi	f15, a8, 0x3f0
400d034b:	3f          	.byte 0x3f
400d034c:	08f8      	l32i.n	a15, a8, 0
400d034e:	3ffc      	bnez.n	a15, 400d0385 <_flash_cache_start+0x36d>
400d0350:	f47030        	extui	a7, a3, 0, 16
400d0353:	3f          	.byte 0x3f
400d0354:	f47020        	extui	a7, a2, 0, 16
400d0357:	3f          	.byte 0x3f
400d0358:	7028      	l32i.n	a2, a0, 28
400d035a:	2c3ff4        	lsi	f15, a15, 176
400d035d:	3ff470        	f64cmph	a15, a4, a7, 3
400d0360:	3418      	l32i.n	a1, a4, 12
400d0362:	483f40        	ssx	f3, a15, a4
400d0365:	fc09      	s32i.n	a0, a12, 60
400d0367:	3f          	.byte 0x3f
400d0368:	ec6c      	movi.n	a12, -18
400d036a:	3ffb      	addi.n	a3, a15, 15
400d036c:	0908      	l32i.n	a0, a9, 0
400d036e:	3ffc      	bnez.n	a15, 400d03a5 <_flash_cache_start+0x38d>
400d0370:	121212        	l16ui	a1, a2, 36
400d0373:	348812        	lsi	f1, a8, 208
400d0376:	943f40        	extui	a3, a4, 15, 10
400d0379:	3f4034        	lsi	f3, a0, 252
400d037c:	403600        	ssa8b	a6
400d037f:	3f          	.byte 0x3f
400d0380:	4034e0        	lsi	f14, a4, 0x100
400d0383:	3f          	.byte 0x3f
400d0384:	fc09a0        	lsi	f10, a9, 0x3f0
400d0387:	3f          	.byte 0x3f
400d0388:	fc0990        	lsi	f9, a9, 0x3f0
400d038b:	3f          	.byte 0x3f
400d038c:	098c      	beqz.n	a9, 400d0390 <_flash_cache_start+0x378>
400d038e:	3ffc      	bnez.n	a15, 400d03c5 <_flash_cache_start+0x3ad>
400d0390:	0988      	l32i.n	a8, a9, 0
400d0392:	3ffc      	bnez.n	a15, 400d03c9 <_flash_cache_start+0x3b1>
400d0394:	0998      	l32i.n	a9, a9, 0
400d0396:	3ffc      	bnez.n	a15, 400d03cd <_flash_cache_start+0x3b5>
400d0398:	fc0994        	lsi	f9, a9, 0x3f0
400d039b:	3f          	.byte 0x3f
400d039c:	403694        	lsi	f9, a6, 0x100
400d039f:	3f          	.byte 0x3f
400d03a0:	24a8      	l32i.n	a10, a4, 8
400d03a2:	4008      	l32i.n	a0, a0, 16
400d03a4:	401664        	lsi	f6, a6, 0x100
400d03a7:	3f          	.byte 0x3f
400d03a8:	36a8      	l32i.n	a10, a6, 12
400d03aa:	2c3f40        	lsi	f4, a15, 176
400d03ad:	3f4036        	entry	a0, 0x1fa0
400d03b0:	36b8      	l32i.n	a11, a6, 12
400d03b2:	b83f40        	lsi	f4, a15, 0x2e0
400d03b5:	3ff480        	f64cmph	a15, a4, a8, 3
400d03b8:	fc09a4        	lsi	f10, a9, 0x3f0
400d03bb:	3f          	.byte 0x3f
400d03bc:	301c      	movi.n	a0, 19
400d03be:	143ff4        	lsi	f15, a15, 80
400d03c1:	3ff430        	f64cmph	a15, a4, a3, 3
400d03c4:	201c      	movi.n	a0, 18
400d03c6:	143ff4        	lsi	f15, a15, 80
400d03c9:	3ff420        	f64cmph	a15, a4, a2, 3
400d03cc:	09cc      	bnez.n	a9, 400d03d0 <_flash_cache_start+0x3b8>
400d03ce:	3ffc      	bnez.n	a15, 400d0405 <_flash_cache_start+0x3ed>
400d03d0:	001274        	lsi	f7, a2, 0
400d03d3:	09d840        	l32e	a4, a8, -12
400d03d6:	3ffc      	bnez.n	a15, 400d040d <_flash_cache_start+0x3f5>
400d03d8:	37ac      	beqz.n	a7, 400d03ff <_flash_cache_start+0x3e7>
400d03da:	d43f40        	extui	a3, a4, 15, 14
400d03dd:	400015        	call4	401103e0 <_etext+0x23f0f>
400d03e0:	00c5f4        	lsi	f15, a5, 0
400d03e3:	37b040        	lsi	f4, a0, 220
400d03e6:	a43f40        	extui	a3, a4, 15, 11
400d03e9:	403a      	add.n	a4, a0, a3
400d03eb:	3f          	.byte 0x3f
400d03ec:	37cc      	bnez.n	a7, 400d03f3 <_flash_cache_start+0x3db>
400d03ee:	ec3f40        	lsi	f4, a15, 0x3b0
400d03f1:	cf          	.byte 0xcf
400d03f2:	dc4005        	call0	400ac7f4 <_iram_end+0x1eca0>
400d03f5:	403a      	add.n	a4, a0, a3
400d03f7:	3f          	.byte 0x3f
400d03f8:	4028      	l32i.n	a2, a0, 16
400d03fa:	f83f40        	lsi	f4, a15, 0x3e0
400d03fd:	403a      	add.n	a4, a0, a3
400d03ff:	3f          	.byte 0x3f
400d0400:	403844        	lsi	f4, a8, 0x100
400d0403:	3f          	.byte 0x3f
400d0404:	404060        	lsi	f6, a0, 0x100
400d0407:	3f          	.byte 0x3f
400d0408:	403864        	lsi	f6, a8, 0x100
400d040b:	3f          	.byte 0x3f
400d040c:	3b6c      	movi.n	a11, -29
400d040e:	b03f40        	addx8	a3, a15, a4
400d0411:	3f          	.byte 0x3f
400d0412:	903f40        	addx2	a3, a15, a4
400d0415:	403b      	addi.n	a4, a0, 3
400d0417:	3f          	.byte 0x3f
400d0418:	3f6c      	movi.n	a15, -29
400d041a:	b83f40        	lsi	f4, a15, 0x2e0
400d041d:	3e          	.byte 0x3e
400d041e:	a43f40        	extui	a3, a4, 15, 11
400d0421:	403b      	addi.n	a4, a0, 3
400d0423:	3f          	.byte 0x3f
400d0424:	404144        	lsi	f4, a1, 0x100
400d0427:	3f          	.byte 0x3f
400d0428:	3bb8      	l32i.n	a11, a11, 12
400d042a:	2c3f40        	lsi	f4, a15, 176
400d042d:	403c      	movi.n	a0, 52
400d042f:	3f          	.byte 0x3f
400d0430:	403e64        	lsi	f6, a14, 0x100
400d0433:	3f          	.byte 0x3f
400d0434:	403c40        	lsi	f4, a12, 0x100
400d0437:	3f          	.byte 0x3f
400d0438:	403ce4        	lsi	f14, a12, 0x100
400d043b:	3f          	.byte 0x3f
400d043c:	404114        	lsi	f1, a1, 0x100
400d043f:	3f          	.byte 0x3f
400d0440:	001102        	l16ui	a0, a1, 0
400d0443:	3d2000        	lsi	f0, a0, 244
400d0446:	fc3f40        	lsi	f4, a15, 0x3f0
400d0449:	3f          	.byte 0x3f
400d044a:	033f40        	lsi	f4, a15, 12
400d044d:	000011        	l32r	a1, 40090450 <_iram_end+0x28fc>
400d0450:	403d44        	lsi	f4, a13, 0x100
400d0453:	3f          	.byte 0x3f
400d0454:	403fd4        	lsi	f13, a15, 0x100
400d0457:	3f          	.byte 0x3f
400d0458:	001110        	movsp	a1, a1
400d045b:	0fff00        	f64cmph	a15, a15, a0, 0
400d045e:	010000        	slli	a0, a0, 32
400d0461:	000011        	l32r	a1, 40090464 <_iram_end+0x2910>
400d0464:	110b      	addi.n	a1, a1, -1
400d0466:	780000        	lsi	f0, a0, 0x1e0
400d0469:	3f4041        	l32r	a4, 400a016c <_iram_end+0x12618>
400d046c:	422c      	movi.n	a2, 36
400d046e:	ac3f40        	lsi	f4, a15, 0x2b0
400d0471:	3f4041        	l32r	a4, 400a0174 <_iram_end+0x12620>
400d0474:	ff          	.byte 0xff
400d0475:	ff          	.byte 0xff
400d0476:	ff          	.byte 0xff
400d0477:	110500        	slli	a0, a5, 16
400d047a:	0d0000        	lsi	f0, a0, 52
400d047d:	000011        	l32r	a1, 40090480 <_iram_end+0x292c>
400d0480:	980000        	lsi	f0, a0, 0x260
400d0483:	42fc01        	l32r	a0, 400a1074 <_iram_end+0x13520>
400d0486:	283f40        	lsi	f4, a15, 160
400d0489:	3f4043        	ssi	f4, a0, 252
400d048c:	404280        	lsi	f8, a2, 0x100
400d048f:	3f          	.byte 0x3f
400d0490:	fe          	.byte 0xfe
400d0491:	ee          	.byte 0xee
400d0492:	ff          	.byte 0xff
400d0493:	ff          	.byte 0xff
400d0494:	404520        	lsi	f2, a5, 0x100
400d0497:	3f          	.byte 0x3f
400d0498:	fbeca0        	f64subc	a10, a12, 3, 0
400d049b:	3f          	.byte 0x3f
400d049c:	ec7c      	movi.n	a12, -2
400d049e:	3ffb      	addi.n	a3, a15, 15
400d04a0:	09f8      	l32i.n	a15, a9, 0
400d04a2:	3ffc      	bnez.n	a15, 400d04d9 <_flash_cache_start+0x4c1>
400d04a4:	fc09f4        	lsi	f15, a9, 0x3f0
400d04a7:	3f          	.byte 0x3f
400d04a8:	fc09f0        	lsi	f15, a9, 0x3f0
400d04ab:	3f          	.byte 0x3f
400d04ac:	09ec      	bnez.n	a9, 400d04d0 <_flash_cache_start+0x4b8>
400d04ae:	3ffc      	bnez.n	a15, 400d04e5 <_flash_cache_start+0x4cd>
400d04b0:	09e8      	l32i.n	a14, a9, 0
400d04b2:	3ffc      	bnez.n	a15, 400d04e9 <_flash_cache_start+0x4d1>
400d04b4:	fc09e4        	lsi	f14, a9, 0x3f0
400d04b7:	3f          	.byte 0x3f
400d04b8:	fc09e0        	lsi	f14, a9, 0x3f0
400d04bb:	3f          	.byte 0x3f
400d04bc:	09fc      	bnez.n	a9, 400d04f0 <_flash_cache_start+0x4d8>
400d04be:	3ffc      	bnez.n	a15, 400d04f5 <_flash_cache_start+0x4dd>
400d04c0:	0d92f4        	lsi	f15, a2, 52
400d04c3:	ec9440        	lsi	f4, a4, 0x3b0
400d04c6:	3ffb      	addi.n	a3, a15, 15
400d04c8:	009600        	all4	b0, b4:b5:b6:b7
400d04cb:	096000        	l32e	a0, a0, -40
400d04ce:	800000        	add	a0, a0, a0
400d04d1:	000025        	call8	400d04d4 <_flash_cache_start+0x4bc>
400d04d4:	004b00        	break	11, 0
400d04d7:	12c000        	andbc	b12, b0, b0
400d04da:	400000        	ssr	a0
400d04dd:	000f42        	l8ui	a4, a15, 0
400d04e0:	070800        	lsi	f0, a8, 28
400d04e3:	c20000        	quou	a0, a0, a0
400d04e6:	000001        	l32r	a0, 400904e8 <_iram_end+0x2994>
400d04e9:	000384        	lsi	f8, a3, 0
400d04ec:	00e100        	lsi	f0, a1, 0
400d04ef:	ca0000        	float.s	f0, a0, 0
400d04f2:	0008      	l32i.n	a0, a0, 0
400d04f4:	0e1000        	setb_expstate	0
400d04f7:	a12000        	sll	a2, a0
400d04fa:	a00007        	bnone	a0, a0, 400d049e <_flash_cache_start+0x486>
400d04fd:	002625        	call8	400d0760 <_flash_cache_start+0x748>
400d0500:	16e360        	lsi	f6, a3, 88
400d0503:	848000        	extui	a8, a0, 0, 9
400d0506:	1e          	.byte 0x1e
400d0507:	940000        	extui	a0, a0, 0, 10
400d050a:	e00011        	l32r	a1, 400c850c <_rtc_text_end+0x850c>
400d050d:	003567        	bltu	a5, a6, 400d0511 <_flash_cache_start+0x4f9>
400d0510:	3d0900        	lsi	f0, a9, 244
400d0513:	c6c000        	lsi	f0, a0, 0x318
400d0516:	002d      	mov.n	a2, a0
400d0518:	404360        	lsi	f6, a3, 0x100
400d051b:	3f          	.byte 0x3f
400d051c:	43dc      	bnez.n	a3, 400d0534 <_flash_cache_start+0x51c>
400d051e:	e03f40        	subx4	a3, a15, a4
400d0521:	3f4043        	ssi	f4, a0, 252
400d0524:	4043e4        	lsi	f14, a3, 0x100
400d0527:	3f          	.byte 0x3f
400d0528:	004000        	break	0, 0
400d052b:	0a0000        	add.s	f0, f0, f0
400d052e:	3ffc      	bnez.n	a15, 400d0565 <_flash_cache_start+0x54d>
400d0530:	43e8      	l32i.n	a14, a3, 16
400d0532:	f83f40        	lsi	f4, a15, 0x3e0
400d0535:	3f4044        	lsi	f4, a0, 252
400d0538:	43fc      	bnez.n	a3, 400d0570 <_flash_cache_start+0x558>
400d053a:	ec3f40        	lsi	f4, a15, 0x3b0
400d053d:	3f4044        	lsi	f4, a0, 252
400d0540:	002000        	isync
400d0543:	44e000        	extui	a14, a0, 0, 5
400d0546:	643f40        	extui	a3, a4, 15, 7
400d0549:	3f4044        	lsi	f4, a0, 252
400d054c:	4044c0        	lsi	f12, a4, 0x100
400d054f:	3f          	.byte 0x3f
400d0550:	4044d4        	lsi	f13, a4, 0x100
400d0553:	3f          	.byte 0x3f
400d0554:	fc0a10        	lsi	f1, a10, 0x3f0
400d0557:	3f          	.byte 0x3f
400d0558:	4044b4        	lsi	f11, a4, 0x100
400d055b:	3f          	.byte 0x3f
400d055c:	fc0a04        	lsi	f0, a10, 0x3f0
400d055f:	3f          	.byte 0x3f
400d0560:	09dc      	bnez.n	a9, 400d0574 <_flash_cache_start+0x55c>
400d0562:	3ffc      	bnez.n	a15, 400d0599 <_flash_cache_start+0x581>
400d0564:	ec88      	l32i.n	a8, a12, 56
400d0566:	3ffb      	addi.n	a3, a15, 15
400d0568:	0d9c84        	lsi	f8, a12, 52
400d056b:	9be440        	movnez.s	f14, f4, a4
400d056e:	400d      	lsi	f0, a0, 0
400d0570:	9a88      	l32i.n	a8, a10, 36
400d0572:	400d      	lsi	f0, a0, 0
400d0574:	0d9ba0        	lsi	f10, a11, 52
400d0577:	9b8040        	movnez.s	f8, f0, a4
400d057a:	400d      	lsi	f0, a0, 0
400d057c:	0d9ae4        	lsi	f14, a10, 52
400d057f:	9a2c40        	trunc.s	a2, f12, 4
400d0582:	400d      	lsi	f0, a0, 0
400d0584:	97dc      	bnez.n	a7, 400d05a1 <_flash_cache_start+0x589>
400d0586:	400d      	lsi	f0, a0, 0
400d0588:	0d9430        	lsi	f3, a4, 52
400d058b:	940440        	extui	a0, a4, 4, 10
400d058e:	400d      	lsi	f0, a0, 0
400d0590:	93c8      	l32i.n	a12, a3, 36
400d0592:	400d      	lsi	f0, a0, 0
400d0594:	90e8      	l32i.n	a14, a0, 36
400d0596:	400d      	lsi	f0, a0, 0
400d0598:	9038      	l32i.n	a3, a0, 36
400d059a:	400d      	lsi	f0, a0, 0
400d059c:	447c      	movi.n	a4, -12
400d059e:	883f40        	lsi	f4, a15, 0x220
400d05a1:	3f4044        	lsi	f4, a0, 252
400d05a4:	404504        	lsi	f0, a5, 0x100
400d05a7:	3f          	.byte 0x3f
400d05a8:	ecac      	beqz.n	a12, 400d05da <_flash_cache_start+0x5c2>
400d05aa:	3ffb      	addi.n	a3, a15, 15
400d05ac:	fc0a20        	lsi	f2, a10, 0x3f0
400d05af:	3f          	.byte 0x3f
400d05b0:	fc0a24        	lsi	f2, a10, 0x3f0
400d05b3:	3f          	.byte 0x3f
400d05b4:	13ac      	beqz.n	a3, 400d05d9 <_flash_cache_start+0x5c1>
400d05b6:	604000        	neg	a4, a0
400d05b9:	4000c2        	l8ui	a12, a0, 64
400d05bc:	452c      	movi.n	a5, 36
400d05be:	303f40        	xor	a3, a15, a4
400d05c1:	3f4045        	call0	4010f9c8 <_etext+0x234f7>
400d05c4:	4045d4        	lsi	f13, a5, 0x100
400d05c7:	3f          	.byte 0x3f
400d05c8:	404570        	lsi	f7, a5, 0x100
400d05cb:	3f          	.byte 0x3f
400d05cc:	0a1c      	movi.n	a10, 16
400d05ce:	3ffc      	bnez.n	a15, 400d0605 <_flash_cache_start+0x5ed>
400d05d0:	0118      	l32i.n	a1, a1, 0
400d05d2:	543f40        	extui	a3, a4, 15, 6
400d05d5:	fc0a      	add.n	a15, a12, a0
400d05d7:	3f          	.byte 0x3f
400d05d8:	0a48      	l32i.n	a4, a10, 0
400d05da:	3ffc      	bnez.n	a15, 400d0611 <_flash_cache_start+0x5f9>
400d05dc:	4045e4        	lsi	f14, a5, 0x100
400d05df:	3f          	.byte 0x3f
400d05e0:	fbed70        	f64subc	a7, a13, 3, 0
400d05e3:	3f          	.byte 0x3f
400d05e4:	0b4c      	movi.n	a11, 64
400d05e6:	3ffc      	bnez.n	a15, 400d061d <_flash_cache_start+0x605>
400d05e8:	0a4c      	movi.n	a10, 64
400d05ea:	3ffc      	bnez.n	a15, 400d0621 <_flash_cache_start+0x609>
400d05ec:	fc0a50        	lsi	f5, a10, 0x3f0
400d05ef:	3f          	.byte 0x3f
400d05f0:	400000        	ssr	a0
400d05f3:	4e4c00        	f64rnd	a4, a12, a0, 0
400d05f6:	4c3f40        	lsi	f4, a15, 0x130
400d05f9:	4f          	.byte 0x4f
400d05fa:	683f40        	lsi	f4, a15, 0x1a0
400d05fd:	4e          	.byte 0x4e
400d05fe:	103f40        	and	a3, a15, a4
400d0601:	3ffc16        	beqz	a12, 400d0a04 <_flash_cache_start+0x9ec>
400d0604:	4ed8      	l32i.n	a13, a14, 16
400d0606:	3c3f40        	lsi	f4, a15, 240
400d0609:	4f          	.byte 0x4f
400d060a:	943f40        	extui	a3, a4, 15, 10
400d060d:	3f4055        	call4	4010fa14 <_etext+0x23543>
400d0610:	404ef0        	lsi	f15, a14, 0x100
400d0613:	3f          	.byte 0x3f
400d0614:	4f08      	l32i.n	a0, a15, 16
400d0616:	283f40        	lsi	f4, a15, 160
400d0619:	4f          	.byte 0x4f
400d061a:	583f40        	ssxp	f3, a15, a4
400d061d:	0e          	.byte 0xe
400d061e:	3ffc      	bnez.n	a15, 400d0655 <_flash_cache_start+0x63d>
400d0620:	405234        	lsi	f3, a2, 0x100
400d0623:	3f          	.byte 0x3f
400d0624:	405230        	lsi	f3, a2, 0x100
400d0627:	3f          	.byte 0x3f
400d0628:	f00000        	subx8	a0, a0, a0
400d062b:	ff          	.byte 0xff
400d062c:	ff          	.byte 0xff
400d062d:	ff          	.byte 0xff
400d062e:	df          	.byte 0xdf
400d062f:	7f          	.byte 0x7f
400d0630:	ff          	.byte 0xff
400d0631:	ff          	.byte 0xff
400d0632:	0f          	.byte 0xf
400d0633:	000000        	ill
400d0636:	f48010        	extui	a8, a1, 0, 16
400d0639:	3f4051        	l32r	a5, 400a033c <_iram_end+0x127e8>
400d063c:	2f          	.byte 0x2f
400d063d:	3f4052        	s8i	a5, a0, 63
400d0640:	405201        	l32r	a0, 400a0788 <_iram_end+0x12c34>
400d0643:	3f          	.byte 0x3f
400d0644:	1118      	l32i.n	a1, a1, 4
400d0646:	504000        	iitlb	a0
400d0649:	400011        	l32r	a1, 400a064c <_iram_end+0x12af8>
400d064c:	001184        	lsi	f8, a1, 0
400d064f:	11b840        	slli	a11, a8, 12
400d0652:	904000        	addx2	a4, a0, a0
400d0655:	1e          	.byte 0x1e
400d0656:	544000        	extui	a4, a0, 0, 6
400d0659:	00bd      	mov.n	a11, a0
400d065b:	1e0840        	f64sexp	a0, a8, a4
400d065e:	144000        	extui	a4, a0, 0, 2
400d0661:	1e          	.byte 0x1e
400d0662:	984000        	lsi	f0, a0, 0x260
400d0665:	3ff964        	lsi	f6, a9, 252
400d0668:	6478      	l32i.n	a7, a4, 24
400d066a:	3ff9      	s32i.n	a15, a15, 12
400d066c:	6458      	l32i.n	a5, a4, 24
400d066e:	3ff9      	s32i.n	a15, a15, 12
400d0670:	001000        	movsp	a0, a0
400d0673:	081a00        	lsx	f1, a10, a0
400d0676:	000000        	ill
400d0679:	0008      	l32i.n	a0, a0, 0
400d067b:	f00000        	subx8	a0, a0, a0
400d067e:	000000        	ill
400d0681:	000080        	ret
400d0684:	df          	.byte 0xdf
400d0685:	fffff7        	bbsi	a15, 31, 400d0688 <_flash_cache_start+0x670>
400d0688:	1e38      	l32i.n	a3, a14, 4
400d068a:	204000        	or	a4, a0, a0
400d068d:	400593        	lsi	f9, a5, 0x100
400d0690:	9108      	l32i.n	a0, a1, 36
400d0692:	cc4005        	call0	4009ca94 <_iram_end+0xef40>
400d0695:	00bc      	beqz.n	a0, 400d06c9 <_flash_cache_start+0x6b1>
400d0697:	93d440        	movnez	a13, a4, a4
400d069a:	2e4005        	call0	400fea9c <_etext+0x125cb>
400d069d:	3f4052        	s8i	a5, a0, 63
400d06a0:	ff          	.byte 0xff
400d06a1:	df          	.byte 0xdf
400d06a2:	ff          	.byte 0xff
400d06a3:	ff          	.byte 0xff
400d06a4:	893c      	movi.n	a9, 56
400d06a6:	394005        	call0	40109aa8 <_etext+0x1d5d7>
400d06a9:	8e          	.byte 0x8e
400d06aa:	0038e3        	lsi	f14, a8, 0
400d06ad:	ffff00        	f64cmph	a15, a15, a0, 15
400d06b0:	000000        	ill
400d06b3:	ff          	.byte 0xff
400d06b4:	000000        	ill
400d06b7:	0000f0        	callx12	a0
400d06ba:	484000        	ssx	f4, a0, a0
400d06bd:	3f4001        	l32r	a0, 400a03c0 <_iram_end+0x1286c>
400d06c0:	f00000        	subx8	a0, a0, a0
400d06c3:	7f          	.byte 0x7f
400d06c4:	c00000        	sub	a0, a0, a0
400d06c7:	00fc      	bnez.n	a0, 400d06fb <_flash_cache_start+0x6e3>
400d06c9:	000800        	lsi	f0, a8, 0
400d06cc:	000000        	ill
400d06cf:	000000        	ill
400d06d2:	003ff0        	lsi	f15, a15, 0
400d06d5:	001000        	movsp	a0, a0
400d06d8:	01a8      	l32i.n	a10, a1, 0
400d06da:	003f40        	lsi	f4, a15, 0
400d06dd:	402400        	ssa8l	a4
400d06e0:	8bec      	bnez.n	a11, 400d070c <_flash_cache_start+0x6f4>
400d06e2:	f84005        	call0	400c8ae4 <_rtc_text_end+0x8ae4>
400d06e5:	3f4186        	j	400e03ef <_vfiprintf_r+0xaeb>
400d06e8:	86a8      	l32i.n	a10, a6, 32
400d06ea:	fe3f41        	l32r	a4, 400cffe8 <_rtc_text_end+0xffe8>
400d06ed:	ff          	.byte 0xff
400d06ee:	ff          	.byte 0xff
400d06ef:	1f          	.byte 0x1f
400d06f0:	fbdb60        	f64subc	a6, a11, 2, 1
400d06f3:	3f          	.byte 0x3f
400d06f4:	fc1620        	lsi	f2, a6, 0x3f0
400d06f7:	3f          	.byte 0x3f
400d06f8:	080000        	lsx	f0, a0, a0
400d06fb:	db5440        	movt.s	f5, f4, b4
400d06fe:	4008      	l32i.n	a0, a0, 16
400d0700:	0ec340        	lsi	f4, a3, 56
400d0703:	57c040        	lsi	f4, a0, 0x15c
400d0706:	343f40        	extui	a3, a4, 15, 4
400d0709:	4059      	s32i.n	a5, a0, 16
400d070b:	3f          	.byte 0x3f
400d070c:	4057e4        	lsi	f14, a7, 0x100
400d070f:	3f          	.byte 0x3f
400d0710:	585c      	movi.n	a8, 85
400d0712:	843f40        	extui	a3, a4, 15, 9
400d0715:	4058      	l32i.n	a5, a0, 16
400d0717:	3f          	.byte 0x3f
400d0718:	405894        	lsi	f9, a8, 0x100
400d071b:	3f          	.byte 0x3f
400d071c:	056424        	lsi	f2, a4, 20
400d071f:	58f840        	ssxp	f15, a8, a4
400d0722:	503f40        	ritlb0	a4, a15
400d0725:	4059      	s32i.n	a5, a0, 16
400d0727:	3f          	.byte 0x3f
400d0728:	5918      	l32i.n	a1, a9, 20
400d072a:	483f40        	ssx	f3, a15, a4
400d072d:	0e          	.byte 0xe
400d072e:	dc3f40        	lsi	f4, a15, 0x370
400d0731:	400d      	lsi	f0, a0, 0
400d0733:	3f          	.byte 0x3f
400d0734:	400d70        	lsi	f7, a13, 0x100
400d0737:	3f          	.byte 0x3f
400d0738:	400270        	lsi	f7, a2, 0x100
400d073b:	3f          	.byte 0x3f
400d073c:	400290        	lsi	f9, a2, 0x100
400d073f:	3f          	.byte 0x3f
400d0740:	400370        	lsi	f7, a3, 0x100
400d0743:	3f          	.byte 0x3f
400d0744:	038c      	beqz.n	a3, 400d0748 <_flash_cache_start+0x730>
400d0746:	713f40        	lsi	f4, a15, 0x1c4
400d0749:	4059      	s32i.n	a5, a0, 16
400d074b:	3f          	.byte 0x3f
400d074c:	405975        	call12	40110ce4 <_etext+0x24813>
400d074f:	3f          	.byte 0x3f
400d0750:	5979      	s32i.n	a7, a9, 20
400d0752:	7d3f40        	lsi	f4, a15, 0x1f4
400d0755:	4059      	s32i.n	a5, a0, 16
400d0757:	3f          	.byte 0x3f
400d0758:	405981        	l32r	a8, 400a08bc <_iram_end+0x12d68>
400d075b:	3f          	.byte 0x3f
400d075c:	405992        	s16i	a9, a9, 128
400d075f:	3f          	.byte 0x3f
400d0760:	4003a4        	lsi	f10, a3, 0x100
400d0763:	3f          	.byte 0x3f
400d0764:	c00000        	sub	a0, a0, a0
400d0767:	3f          	.byte 0x3f
400d0768:	300000        	xor	a0, a0, a0
400d076b:	000040        	lsi	f4, a0, 0
400d076e:	673fe0        	lsi	f14, a15, 0x19c
400d0771:	666666        	bnei	a6, 6, 400d07db <_flash_cache_start+0x7c3>
400d0774:	000a      	add.n	a0, a0, a0
400d0776:	200000        	or	a0, a0, a0
400d0779:	3f4005        	call0	4010fb7c <_etext+0x236ab>
400d077c:	400510        	lsi	f1, a5, 0x100
400d077f:	3f          	.byte 0x3f
400d0780:	4059a3        	lsi	f10, a9, 0x100
400d0783:	3f          	.byte 0x3f
400d0784:	059560        	extui	a9, a6, 21, 1
400d0787:	379040        	lsi	f4, a0, 220
400d078a:	a84006        	j	400ba88e <_iram_end+0x2cd3a>
400d078d:	400636        	entry	a6, 0x2000
400d0790:	2a78      	l32i.n	a7, a10, 8
400d0792:	444000        	extui	a4, a0, 0, 5
400d0795:	00c9      	s32i.n	a12, a0, 0
400d0797:	26e440        	lsi	f4, a4, 152
400d079a:	a84000        	lsi	f0, a0, 0x2a0
400d079d:	400636        	entry	a6, 0x2000
400d07a0:	36dc      	bnez.n	a6, 400d07b7 <_flash_cache_start+0x79f>
400d07a2:	444006        	j	400e18a6 <_vfiprintf_r+0x1fa2>
400d07a5:	4000c2        	l8ui	a12, a0, 64
400d07a8:	00d280        	lsi	f8, a2, 0
400d07ab:	053040        	extui	a3, a4, 16, 1
400d07ae:	503f40        	ritlb0	a4, a15
400d07b1:	3f4005        	call0	4010fbb4 <_etext+0x236e3>
400d07b4:	400630        	lsi	f3, a6, 0x100
400d07b7:	3f          	.byte 0x3f
400d07b8:	064c      	movi.n	a6, 64
400d07ba:	4c3f40        	lsi	f4, a15, 0x130
400d07bd:	8e          	.byte 0x8e
400d07be:	924005        	call0	40062bc0 <esp_rom_spiflash_read_user_cmd+0xa10>
400d07c1:	4059      	s32i.n	a5, a0, 16
400d07c3:	3f          	.byte 0x3f
400d07c4:	405981        	l32r	a8, 400a0928 <_iram_end+0x12dd4>
400d07c7:	3f          	.byte 0x3f
400d07c8:	400664        	lsi	f6, a6, 0x100
400d07cb:	3f          	.byte 0x3f
400d07cc:	4007e0        	lsi	f14, a7, 0x100
400d07cf:	3f          	.byte 0x3f
400d07d0:	4007d0        	lsi	f13, a7, 0x100
400d07d3:	3f          	.byte 0x3f
400d07d4:	8cc8      	l32i.n	a12, a12, 32
400d07d6:	f04005        	call0	400c0bd8 <_rtc_text_end+0xbd8>
400d07d9:	3f4007        	ball	a0, a0, 400d081c <_flash_cache_start+0x804>
400d07dc:	400810        	lsi	f1, a8, 0x100
400d07df:	3f          	.byte 0x3f
400d07e0:	4008f0        	lsi	f15, a8, 0x100
400d07e3:	3f          	.byte 0x3f
400d07e4:	090c      	movi.n	a9, 0
400d07e6:	713f40        	lsi	f4, a15, 0x1c4
400d07e9:	4059      	s32i.n	a5, a0, 16
400d07eb:	3f          	.byte 0x3f
400d07ec:	405975        	call12	40110d84 <_etext+0x248b3>
400d07ef:	3f          	.byte 0x3f
400d07f0:	5979      	s32i.n	a7, a9, 20
400d07f2:	7d3f40        	lsi	f4, a15, 0x1f4
400d07f5:	4059      	s32i.n	a5, a0, 16
400d07f7:	3f          	.byte 0x3f
400d07f8:	405981        	l32r	a8, 400a095c <_iram_end+0x12e08>
400d07fb:	3f          	.byte 0x3f
400d07fc:	405992        	s16i	a9, a9, 128
400d07ff:	3f          	.byte 0x3f
400d0800:	400924        	lsi	f2, a9, 0x100
400d0803:	3f          	.byte 0x3f
400d0804:	400aa0        	lsi	f10, a10, 0x100
400d0807:	3f          	.byte 0x3f
400d0808:	400a90        	lsi	f9, a10, 0x100
400d080b:	3f          	.byte 0x3f
400d080c:	4059a3        	lsi	f10, a9, 0x100
400d080f:	3f          	.byte 0x3f
400d0810:	4059a5        	call8	40110dac <_etext+0x248db>
400d0813:	3f          	.byte 0x3f
400d0814:	ae          	.byte 0xae
400d0815:	4059      	s32i.n	a5, a0, 16
400d0817:	3f          	.byte 0x3f
400d0818:	4059a3        	lsi	f10, a9, 0x100
400d081b:	3f          	.byte 0x3f
400d081c:	0f          	.byte 0xf
400d081d:	000027        	bnone	a0, a2, 400d0821 <_flash_cache_start+0x809>
400d0820:	4059a4        	lsi	f10, a9, 0x100
400d0823:	3f          	.byte 0x3f
400d0824:	100000        	and	a0, a0, a0
400d0827:	fe          	.byte 0xfe
400d0828:	f80000        	lsi	f0, a0, 0x3e0
400d082b:	3f          	.byte 0x3f
400d082c:	6f4361        	l32r	a6, 400ac538 <_iram_end+0x1e9e4>
400d082f:	87a763        	lsi	f6, a7, 0x21c
400d0832:	b33fd2        	lsi	f13, a15, 0x2cc
400d0835:	60c8      	l32i.n	a12, a0, 24
400d0837:	288b      	addi.n	a2, a8, 8
400d0839:	c68a      	add.n	a12, a6, a8
400d083b:	3f          	.byte 0x3f
400d083c:	79fb      	addi.n	a7, a9, 15
400d083e:	9f          	.byte 0x9f
400d083f:	441350        	extui	a1, a5, 3, 5
400d0842:	803fd3        	lsi	f13, a15, 0x200
400d0845:	3f4001        	l32r	a0, 400a0548 <_iram_end+0x129f4>
400d0848:	1c0000        	lsi	f0, a0, 112
400d084b:	000040        	lsi	f4, a0, 0
400d084e:	904014        	lsi	f1, a0, 0x240
400d0851:	400025        	call8	40110854 <_etext+0x24383>
400d0854:	3768      	l32i.n	a6, a7, 12
400d0856:	ff4006        	j	400d055a <_flash_cache_start+0x542>
400d0859:	ff          	.byte 0xff
400d085a:	ef          	.byte 0xef
400d085b:	7f          	.byte 0x7f
400d085c:	500000        	lsi	f0, a0, 0x140
400d085f:	ffff43        	lsi	f4, a15, 0x3fc
400d0862:	0f          	.byte 0xf
400d0863:	0ab080        	add.s	f11, f0, f8
400d0866:	d03f40        	subx2	a3, a15, a4
400d0869:	400a      	add.n	a4, a0, a0
400d086b:	3f          	.byte 0x3f
400d086c:	400bb0        	lsi	f11, a11, 0x100
400d086f:	3f          	.byte 0x3f
400d0870:	0bcc      	bnez.n	a11, 400d0874 <_flash_cache_start+0x85c>
400d0872:	923f40        	lsi	f4, a15, 0x248
400d0875:	4059      	s32i.n	a5, a0, 16
400d0877:	3f          	.byte 0x3f
400d0878:	405981        	l32r	a8, 400a09dc <_iram_end+0x12e88>
400d087b:	3f          	.byte 0x3f
400d087c:	400be4        	lsi	f14, a11, 0x100
400d087f:	3f          	.byte 0x3f
400d0880:	400d60        	lsi	f6, a13, 0x100
400d0883:	3f          	.byte 0x3f
400d0884:	400d50        	lsi	f5, a13, 0x100
400d0887:	3f          	.byte 0x3f
400d0888:	fc0e60        	lsi	f6, a14, 0x3f0
400d088b:	3f          	.byte 0x3f
400d088c:	7478      	l32i.n	a7, a4, 28
400d088e:	b43f40        	extui	a3, a4, 15, 12
400d0891:	4059      	s32i.n	a5, a0, 16
400d0893:	3f          	.byte 0x3f
400d0894:	59bc      	beqz.n	a9, 400d08cd <_flash_cache_start+0x8b5>
400d0896:	d43f40        	extui	a3, a4, 15, 14
400d0899:	4059      	s32i.n	a5, a0, 16
400d089b:	3f          	.byte 0x3f
400d089c:	ed9c      	beqz.n	a13, 400d08be <_flash_cache_start+0x8a6>
400d089e:	3ffb      	addi.n	a3, a15, 15
400d08a0:	00e000        	lsi	f0, a0, 0
400d08a3:	74bc00        	extui	a11, a0, 12, 8
400d08a6:	e83f40        	lsi	f4, a15, 0x3a0
400d08a9:	4059      	s32i.n	a5, a0, 16
400d08ab:	3f          	.byte 0x3f
400d08ac:	003ff4        	lsi	f15, a15, 0
400d08af:	000000        	ill
400d08b2:	fcc010        	lsi	f1, a0, 0x3f0
400d08b5:	3f          	.byte 0x3f
400d08b6:	f80001        	l32r	a0, 400ce8b8 <_rtc_text_end+0xe8b8>
400d08b9:	4059      	s32i.n	a5, a0, 16
400d08bb:	3f          	.byte 0x3f
400d08bc:	74a8      	l32i.n	a10, a4, 28
400d08be:	103f40        	and	a3, a15, a4
400d08c1:	405b      	addi.n	a4, a0, 5
400d08c3:	3f          	.byte 0x3f
400d08c4:	eefc      	bnez.n	a14, 400d0906 <_flash_cache_start+0x8ee>
400d08c6:	3ffb      	addi.n	a3, a15, 15
400d08c8:	75b8      	l32i.n	a11, a5, 28
400d08ca:	943f40        	extui	a3, a4, 15, 10
400d08cd:	405c      	movi.n	a0, 84
400d08cf:	3f          	.byte 0x3f
400d08d0:	4075a0        	wer	a10, a5
400d08d3:	3f          	.byte 0x3f
400d08d4:	758c      	beqz.n	a5, 400d08df <_flash_cache_start+0x8c7>
400d08d6:	a43f40        	extui	a3, a4, 15, 11
400d08d9:	405c      	movi.n	a0, 84
400d08db:	3f          	.byte 0x3f
400d08dc:	7578      	l32i.n	a7, a5, 28
400d08de:	683f40        	lsi	f4, a15, 0x1a0
400d08e1:	3f4075        	call12	4010fce8 <_etext+0x23817>
400d08e4:	7558      	l32i.n	a5, a5, 28
400d08e6:	443f40        	extui	a3, a4, 15, 5
400d08e9:	3f4075        	call12	4010fcf0 <_etext+0x2381f>
400d08ec:	ff          	.byte 0xff
400d08ed:	ff          	.byte 0xff
400d08ee:	0f          	.byte 0xf
400d08ef:	ff          	.byte 0xff
400d08f0:	407530        	wer	a3, a5
400d08f3:	3f          	.byte 0x3f
400d08f4:	7518      	l32i.n	a1, a5, 28
400d08f6:	103f40        	and	a3, a15, a4
400d08f9:	c01000        	sub	a1, a0, a0
400d08fc:	619c      	beqz.n	a1, 400d0916 <_flash_cache_start+0x8fe>
400d08fe:	003f40        	lsi	f4, a15, 0
400d0901:	3f4075        	call12	4010fd08 <_etext+0x23837>
400d0904:	4062c0        	rer	a12, a2
400d0907:	3f          	.byte 0x3f
400d0908:	4063e0        	rer	a14, a3
400d090b:	3f          	.byte 0x3f
400d090c:	000c      	movi.n	a0, 0
400d090e:	fcc010        	lsi	f1, a0, 0x3f0
400d0911:	3f4064        	lsi	f6, a0, 252
400d0914:	661c      	movi.n	a6, 22
400d0916:	3c3f40        	lsi	f4, a15, 240
400d0919:	3f4067        	ball	a0, a6, 400d095c <_flash_cache_start+0x944>
400d091c:	74e8      	l32i.n	a14, a4, 28
400d091e:	543f40        	extui	a3, a4, 15, 6
400d0921:	4068      	l32i.n	a6, a0, 16
400d0923:	3f          	.byte 0x3f
400d0924:	4074d0        	wer	a13, a4
400d0927:	3f          	.byte 0x3f
400d0928:	407494        	lsi	f9, a4, 0x100
400d092b:	3f          	.byte 0x3f
400d092c:	745c      	movi.n	a4, 87
400d092e:	483f40        	ssx	f3, a15, a4
400d0931:	3f4074        	lsi	f7, a0, 252
400d0934:	4072b4        	lsi	f11, a2, 0x100
400d0937:	3f          	.byte 0x3f
400d0938:	fbed94        	lsi	f9, a13, 0x3ec
400d093b:	3f          	.byte 0x3f
400d093c:	800000        	add	a0, a0, a0
400d093f:	000000        	ill
400d0942:	000004        	lsi	f0, a0, 0
400d0945:	000200        	lsi	f0, a2, 0
400d0948:	000000        	ill
400d094b:	000004        	lsi	f0, a0, 0
400d094e:	000001        	l32r	a0, 40090950 <_iram_end+0x2dfc>
400d0951:	0308      	l32i.n	a0, a3, 0
400d0953:	000000        	ill
400d0956:	d00003        	lsi	f0, a0, 0x340
400d0959:	3f4075        	call12	4010fd60 <_etext+0x2388f>
400d095c:	765c      	movi.n	a6, 87
400d095e:	d03f40        	subx2	a3, a15, a4
400d0961:	3ff000        	f64cmph	a15, a0, a0, 3
400d0964:	fbedb4        	lsi	f11, a13, 0x3ec
400d0967:	3f          	.byte 0x3f
400d0968:	4077c0        	wer	a12, a7
400d096b:	3f          	.byte 0x3f
400d096c:	76e8      	l32i.n	a14, a6, 28
400d096e:	bc3f40        	lsi	f4, a15, 0x2f0
400d0971:	4059      	s32i.n	a5, a0, 16
400d0973:	3f          	.byte 0x3f
400d0974:	4076f4        	lsi	f15, a6, 0x100
400d0977:	3f          	.byte 0x3f
400d0978:	edbc      	beqz.n	a13, 400d09ba <_flash_cache_start+0x9a2>
400d097a:	3ffb      	addi.n	a3, a15, 15
400d097c:	77d8      	l32i.n	a13, a7, 28
400d097e:	443f40        	extui	a3, a4, 15, 5
400d0981:	3ff480        	f64cmph	a15, a4, a8, 3
400d0984:	edcc      	bnez.n	a13, 400d0996 <_flash_cache_start+0x97e>
400d0986:	3ffb      	addi.n	a3, a15, 15
400d0988:	fc0e70        	lsi	f7, a14, 0x3f0
400d098b:	3f          	.byte 0x3f
400d098c:	0e6c      	movi.n	a14, -32
400d098e:	3ffc      	bnez.n	a15, 400d09c5 <_flash_cache_start+0x9ad>
400d0990:	9488      	l32i.n	a8, a4, 36
400d0992:	0e          	.byte 0xe
400d0993:	86e840        	lsi	f4, a8, 0x218
400d0996:	c83f40        	lsi	f4, a15, 0x320
400d0999:	3ff480        	f64cmph	a15, a4, a8, 3
400d099c:	0e8c      	beqz.n	a14, 400d09a0 <_flash_cache_start+0x988>
400d099e:	3ffc      	bnez.n	a15, 400d09d5 <_flash_cache_start+0x9bd>
400d09a0:	f48054        	lsi	f5, a0, 0x3d0
400d09a3:	3f          	.byte 0x3f
400d09a4:	8058      	l32i.n	a5, a0, 32
400d09a6:	183ff4        	lsi	f15, a15, 96
400d09a9:	3ffc16        	beqz	a12, 400d0dac <void testDiv<unsigned char>(char const*)+0x5c>
400d09ac:	fc0e80        	lsi	f8, a14, 0x3f0
400d09af:	3f          	.byte 0x3f
400d09b0:	0e78      	l32i.n	a7, a14, 0
400d09b2:	3ffc      	bnez.n	a15, 400d09e9 <_flash_cache_start+0x9d1>
400d09b4:	0e88      	l32i.n	a8, a14, 0
400d09b6:	3ffc      	bnez.n	a15, 400d09ed <_flash_cache_start+0x9d5>
400d09b8:	f48050        	extui	a8, a5, 0, 16
400d09bb:	3f          	.byte 0x3f
400d09bc:	ff          	.byte 0xff
400d09bd:	ff          	.byte 0xff
400d09be:	240007        	bnone	a0, a0, 400d09e6 <_flash_cache_start+0x9ce>
400d09c1:	3ffae0        	f64cmph	a15, a10, a14, 3
400d09c4:	fbedd4        	lsi	f13, a13, 0x3ec
400d09c7:	3f          	.byte 0x3f
400d09c8:	fae020        	lsi	f2, a0, 0x3e8
400d09cb:	3f          	.byte 0x3f
400d09cc:	fae0b0        	nexp01.s	f14, f0
400d09cf:	3f          	.byte 0x3f
400d09d0:	fc0e90        	lsi	f9, a14, 0x3f0
400d09d3:	3f          	.byte 0x3f
400d09d4:	fae0b4        	lsi	f11, a0, 0x3e8
400d09d7:	3f          	.byte 0x3f
400d09d8:	ee6c      	movi.n	a14, -18
400d09da:	3ffb      	addi.n	a3, a15, 15
400d09dc:	fc0f80        	lsi	f8, a15, 0x3f0
400d09df:	3f          	.byte 0x3f
400d09e0:	407870        	wer	a7, a8
400d09e3:	3f          	.byte 0x3f
400d09e4:	78f8      	l32i.n	a15, a8, 28
400d09e6:	7c3f40        	lsi	f4, a15, 0x1f0
400d09e9:	4078      	l32i.n	a7, a0, 16
400d09eb:	3f          	.byte 0x3f
400d09ec:	9988      	l32i.n	a8, a9, 36
400d09ee:	0e          	.byte 0xe
400d09ef:	9b2c40        	movnez.s	f2, f12, a4
400d09f2:	0e          	.byte 0xe
400d09f3:	0f8440        	f64cmph	a8, a4, a4, 0
400d09f6:	3ffc      	bnez.n	a15, 400d0a2d <_flash_cache_start+0xa15>
400d09f8:	0f88      	l32i.n	a8, a15, 0
400d09fa:	3ffc      	bnez.n	a15, 400d0a31 <_flash_cache_start+0xa19>
400d09fc:	407b24        	lsi	f2, a11, 0x100
400d09ff:	3f          	.byte 0x3f
400d0a00:	7928      	l32i.n	a2, a9, 28
400d0a02:	783f40        	lsi	f4, a15, 0x1e0
400d0a05:	407a      	add.n	a4, a0, a7
400d0a07:	3f          	.byte 0x3f
400d0a08:	fbee74        	lsi	f7, a14, 0x3ec
400d0a0b:	3f          	.byte 0x3f
400d0a0c:	ff          	.byte 0xff
400d0a0d:	ff          	.byte 0xff
400d0a0e:	000c      	movi.n	a0, 0
400d0a10:	ff          	.byte 0xff
400d0a11:	ff          	.byte 0xff
400d0a12:	400c      	movi.n	a0, 4
400d0a14:	c00000        	sub	a0, a0, a0
400d0a17:	10b8c0        	and	a11, a8, a12
400d0a1a:	3ffc      	bnez.n	a15, 400d0a51 <_flash_cache_start+0xa39>
400d0a1c:	009000        	all4	b0, b0:b1:b2:b3
400d0a1f:	50aa00        	lsi	f0, a10, 0x140
400d0a22:	000000        	ill
400d0a25:	3ff5a0        	f64cmph	a15, a5, a10, 3
400d0a28:	010000        	slli	a0, a0, 32
400d0a2b:	7de804        	lsi	f0, a8, 0x1f4
400d0a2e:	b43f40        	extui	a3, a4, 15, 12
400d0a31:	7e          	.byte 0x7e
400d0a32:	ec3f40        	lsi	f4, a15, 0x3b0
400d0a35:	407d      	lsi	f7, a0, 0
400d0a37:	3f          	.byte 0x3f
400d0a38:	fc10b4        	lsi	f11, a0, 0x3f0
400d0a3b:	3f          	.byte 0x3f
400d0a3c:	7e5c      	movi.n	a14, 87
400d0a3e:	a03f40        	addx4	a3, a15, a4
400d0a41:	7e          	.byte 0x7e
400d0a42:	703f40        	lsi	f4, a15, 0x1c0
400d0a45:	7e          	.byte 0x7e
400d0a46:	843f40        	extui	a3, a4, 15, 9
400d0a49:	7e          	.byte 0x7e
400d0a4a:	c03f40        	sub	a3, a15, a4
400d0a4d:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0a50:	7ec8      	l32i.n	a12, a14, 28
400d0a52:	783f40        	lsi	f4, a15, 0x1e0
400d0a55:	3f4080        	f64cmph	a4, a0, a8, 3
400d0a58:	407ee4        	lsi	f14, a14, 0x100
400d0a5b:	3f          	.byte 0x3f
400d0a5c:	008c00        	any4	b0, b12:b13:b14:b15
400d0a5f:	84c800        	extui	a12, a0, 8, 9
400d0a62:	003f40        	lsi	f4, a15, 0
400d0a65:	bcd4d5        	call4	4008d7b4 <esp_rom_spiflash_write+0xb4>
400d0a68:	aabc      	beqz.n	a10, 400d0aa6 <_flash_cache_start+0xa8e>
400d0a6a:	dcb8b1        	l32r	a11, 400c7d4c <_rtc_text_end+0x7d4c>
400d0a6d:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0a70:	fc10d4        	lsi	f13, a0, 0x3f0
400d0a73:	3f          	.byte 0x3f
400d0a74:	a5fc      	bnez.n	a5, 400d0ab2 <_flash_cache_start+0xa9a>
400d0a76:	0e          	.byte 0xe
400d0a77:	2b0040        	oeq.s	b0, f0, f4
400d0a7a:	432b      	addi.n	a4, a3, 2
400d0a7c:	4e5543        	lsi	f4, a5, 0x138
400d0a7f:	a6e447        	bbsi	a4, 4, 400d0a29 <_flash_cache_start+0xa11>
400d0a82:	0e          	.byte 0xe
400d0a83:	865440        	lsi	f4, a4, 0x218
400d0a86:	903f40        	addx2	a3, a15, a4
400d0a89:	0eab      	addi.n	a0, a14, 10
400d0a8b:	852440        	extui	a2, a4, 20, 9
400d0a8e:	383f40        	lsi	f4, a15, 224
400d0a91:	3f4085        	call0	4010fe9c <_etext+0x239cb>
400d0a94:	855c      	movi.n	a5, 88
400d0a96:	803f40        	add	a3, a15, a4
400d0a99:	3f4085        	call0	4010fea4 <_etext+0x239d3>
400d0a9c:	861c      	movi.n	a6, 24
400d0a9e:	303f40        	xor	a3, a15, a4
400d0aa1:	3f4086        	j	400e07a7 <_vfiprintf_r+0xea3>
400d0aa4:	a93c      	movi.n	a9, 58
400d0aa6:	0e          	.byte 0xe
400d0aa7:	85d040        	extui	a13, a4, 16, 9
400d0aaa:	503f40        	ritlb0	a4, a15
400d0aad:	0ea9      	s32i.n	a10, a14, 0
400d0aaf:	860840        	lsi	f4, a8, 0x218
400d0ab2:	e83f40        	lsi	f4, a15, 0x3a0
400d0ab5:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0ab8:	fc10e4        	lsi	f14, a0, 0x3f0
400d0abb:	3f          	.byte 0x3f
400d0abc:	863c      	movi.n	a6, 56
400d0abe:	803f40        	add	a3, a15, a4
400d0ac1:	ee          	.byte 0xee
400d0ac2:	3ffb      	addi.n	a3, a15, 15
400d0ac4:	fbee84        	lsi	f8, a14, 0x3ec
400d0ac7:	3f          	.byte 0x3f
400d0ac8:	fc10f4        	lsi	f15, a0, 0x3f0
400d0acb:	3f          	.byte 0x3f
400d0acc:	8668      	l32i.n	a6, a6, 32
400d0ace:	503f40        	ritlb0	a4, a15
400d0ad1:	3ffc11        	l32r	a1, 400a0ac4 <_iram_end+0x12f70>
400d0ad4:	1148      	l32i.n	a4, a1, 4
400d0ad6:	3ffc      	bnez.n	a15, 400d0b0d <_flash_cache_start+0xaf5>
400d0ad8:	fc1140        	lsi	f4, a1, 0x3f0
400d0adb:	3f          	.byte 0x3f
400d0adc:	1138      	l32i.n	a3, a1, 4
400d0ade:	3ffc      	bnez.n	a15, 400d0b15 <_flash_cache_start+0xafd>
400d0ae0:	fc1130        	lsi	f3, a1, 0x3f0
400d0ae3:	3f          	.byte 0x3f
400d0ae4:	1128      	l32i.n	a2, a1, 4
400d0ae6:	3ffc      	bnez.n	a15, 400d0b1d <_flash_cache_start+0xb05>
400d0ae8:	fc1120        	lsi	f2, a1, 0x3f0
400d0aeb:	3f          	.byte 0x3f
400d0aec:	1118      	l32i.n	a1, a1, 4
400d0aee:	3ffc      	bnez.n	a15, 400d0b25 <_flash_cache_start+0xb0d>
400d0af0:	fc1110        	lsi	f1, a1, 0x3f0
400d0af3:	3f          	.byte 0x3f
400d0af4:	1108      	l32i.n	a0, a1, 4
400d0af6:	3ffc      	bnez.n	a15, 400d0b2d <_flash_cache_start+0xb15>
400d0af8:	fc1100        	lsi	f0, a1, 0x3f0
400d0afb:	3f          	.byte 0x3f
400d0afc:	10f8      	l32i.n	a15, a0, 4
400d0afe:	3ffc      	bnez.n	a15, 400d0b35 <_flash_cache_start+0xb1d>
400d0b00:	fc11b0        	lsi	f11, a1, 0x3f0
400d0b03:	3f          	.byte 0x3f
400d0b04:	11a8      	l32i.n	a10, a1, 4
400d0b06:	3ffc      	bnez.n	a15, 400d0b3d <_flash_cache_start+0xb25>
400d0b08:	fc11a0        	lsi	f10, a1, 0x3f0
400d0b0b:	3f          	.byte 0x3f
400d0b0c:	1198      	l32i.n	a9, a1, 4
400d0b0e:	3ffc      	bnez.n	a15, 400d0b45 <_flash_cache_start+0xb2d>
400d0b10:	fc1190        	lsi	f9, a1, 0x3f0
400d0b13:	3f          	.byte 0x3f
400d0b14:	1188      	l32i.n	a8, a1, 4
400d0b16:	3ffc      	bnez.n	a15, 400d0b4d <_flash_cache_start+0xb35>
400d0b18:	fc1180        	lsi	f8, a1, 0x3f0
400d0b1b:	3f          	.byte 0x3f
400d0b1c:	1178      	l32i.n	a7, a1, 4
400d0b1e:	3ffc      	bnez.n	a15, 400d0b55 <_flash_cache_start+0xb3d>
400d0b20:	fc1170        	lsi	f7, a1, 0x3f0
400d0b23:	3f          	.byte 0x3f
400d0b24:	1168      	l32i.n	a6, a1, 4
400d0b26:	3ffc      	bnez.n	a15, 400d0b5d <_flash_cache_start+0xb45>
400d0b28:	fc1160        	lsi	f6, a1, 0x3f0
400d0b2b:	3f          	.byte 0x3f
400d0b2c:	1158      	l32i.n	a5, a1, 4
400d0b2e:	3ffc      	bnez.n	a15, 400d0b65 <_flash_cache_start+0xb4d>
400d0b30:	fc11f0        	lsi	f15, a1, 0x3f0
400d0b33:	3f          	.byte 0x3f
400d0b34:	11e8      	l32i.n	a14, a1, 4
400d0b36:	3ffc      	bnez.n	a15, 400d0b6d <_flash_cache_start+0xb55>
400d0b38:	fc11e0        	lsi	f14, a1, 0x3f0
400d0b3b:	3f          	.byte 0x3f
400d0b3c:	11d8      	l32i.n	a13, a1, 4
400d0b3e:	3ffc      	bnez.n	a15, 400d0b75 <_flash_cache_start+0xb5d>
400d0b40:	fc11d0        	lsi	f13, a1, 0x3f0
400d0b43:	3f          	.byte 0x3f
400d0b44:	11c8      	l32i.n	a12, a1, 4
400d0b46:	3ffc      	bnez.n	a15, 400d0b7d <_flash_cache_start+0xb65>
400d0b48:	fc11c0        	lsi	f12, a1, 0x3f0
400d0b4b:	3f          	.byte 0x3f
400d0b4c:	11b8      	l32i.n	a11, a1, 4
400d0b4e:	3ffc      	bnez.n	a15, 400d0b85 <_flash_cache_start+0xb6d>
400d0b50:	fc1230        	lsi	f3, a2, 0x3f0
400d0b53:	3f          	.byte 0x3f
400d0b54:	1228      	l32i.n	a2, a2, 4
400d0b56:	3ffc      	bnez.n	a15, 400d0b8d <_flash_cache_start+0xb75>
400d0b58:	fc1220        	lsi	f2, a2, 0x3f0
400d0b5b:	3f          	.byte 0x3f
400d0b5c:	1218      	l32i.n	a1, a2, 4
400d0b5e:	3ffc      	bnez.n	a15, 400d0b95 <_flash_cache_start+0xb7d>
400d0b60:	fc1210        	lsi	f1, a2, 0x3f0
400d0b63:	3f          	.byte 0x3f
400d0b64:	1208      	l32i.n	a0, a2, 4
400d0b66:	3ffc      	bnez.n	a15, 400d0b9d <_flash_cache_start+0xb85>
400d0b68:	fc1200        	lsi	f0, a2, 0x3f0
400d0b6b:	3f          	.byte 0x3f
400d0b6c:	11f8      	l32i.n	a15, a1, 4
400d0b6e:	3ffc      	bnez.n	a15, 400d0ba5 <_flash_cache_start+0xb8d>
400d0b70:	fc1244        	lsi	f4, a2, 0x3f0
400d0b73:	3f          	.byte 0x3f
400d0b74:	fc1240        	lsi	f4, a2, 0x3f0
400d0b77:	3f          	.byte 0x3f
400d0b78:	0f68      	l32i.n	a6, a15, 0
400d0b7a:	d83f40        	lsi	f4, a15, 0x360
400d0b7d:	400eb1        	l32r	a11, 400a0bb8 <_iram_end+0x13064>
400d0b80:	1238      	l32i.n	a3, a2, 4
400d0b82:	3ffc      	bnez.n	a15, 400d0bb9 <_flash_cache_start+0xba1>
400d0b84:	116c      	movi.n	a1, -31
400d0b86:	743f40        	extui	a3, a4, 15, 8
400d0b89:	0f          	.byte 0xf
400d0b8a:	8c3f40        	lsi	f4, a15, 0x230
400d0b8d:	3f4086        	j	400e0893 <_vfiprintf_r+0xf8f>
400d0b90:	401170        	lsi	f7, a1, 0x100
400d0b93:	3f          	.byte 0x3f
400d0b94:	4011b0        	lsi	f11, a1, 0x100
400d0b97:	3f          	.byte 0x3f
400d0b98:	1248      	l32i.n	a4, a2, 4
400d0b9a:	3ffc      	bnez.n	a15, 400d0bd1 <_flash_cache_start+0xbb9>
400d0b9c:	124c      	movi.n	a2, 65
400d0b9e:	3ffc      	bnez.n	a15, 400d0bd5 <_flash_cache_start+0xbbd>
400d0ba0:	ee88      	l32i.n	a8, a14, 56
400d0ba2:	3ffb      	addi.n	a3, a15, 15
400d0ba4:	401364        	lsi	f6, a3, 0x100
400d0ba7:	3f          	.byte 0x3f
400d0ba8:	fc1294        	lsi	f9, a2, 0x3f0
400d0bab:	3f          	.byte 0x3f
400d0bac:	fc1290        	lsi	f9, a2, 0x3f0
400d0baf:	3f          	.byte 0x3f
400d0bb0:	128c      	beqz.n	a2, 400d0bb5 <_flash_cache_start+0xb9d>
400d0bb2:	3ffc      	bnez.n	a15, 400d0be9 <_flash_cache_start+0xbd1>
400d0bb4:	1368      	l32i.n	a6, a3, 4
400d0bb6:	983f40        	lsi	f4, a15, 0x260
400d0bb9:	3f4086        	j	400e08bf <_vfiprintf_r+0xfbb>
400d0bbc:	13fc      	bnez.n	a3, 400d0bf1 <_flash_cache_start+0xbd9>
400d0bbe:	503f40        	ritlb0	a4, a15
400d0bc1:	3f4014        	lsi	f1, a0, 252
400d0bc4:	a00c      	movi.n	a0, 10
400d0bc6:	a83ff5        	call12	40078fc4 <__udivmoddi4+0x143d0>
400d0bc9:	3f4014        	lsi	f1, a0, 252
400d0bcc:	14fc      	bnez.n	a4, 400d0c01 <_flash_cache_start+0xbe9>
400d0bce:	d33f40        	movt	a3, a15, b4
400d0bd1:	624d      	lsi	f4, a2, 8
400d0bd3:	0b5010        	lsi	f1, a0, 44
400d0bd6:	3ffc      	bnez.n	a15, 400d0c0d <_flash_cache_start+0xbf5>
400d0bd8:	1298      	l32i.n	a9, a2, 4
400d0bda:	3ffc      	bnez.n	a15, 400d0c11 <_flash_cache_start+0xbf9>
400d0bdc:	86ac      	beqz.n	a6, 400d0c08 <_flash_cache_start+0xbf0>
400d0bde:	e03f40        	subx4	a3, a15, a4
400d0be1:	3f4086        	j	400e08e7 <_vfiprintf_r+0xfe3>
400d0be4:	fc12a4        	lsi	f10, a2, 0x3f0
400d0be7:	3f          	.byte 0x3f
400d0be8:	0ebb04        	lsi	f0, a11, 56
400d0beb:	900840        	addx2	a0, a8, a4
400d0bee:	ac3f40        	lsi	f4, a15, 0x2b0
400d0bf1:	3f4091        	l32r	a9, 400a08f4 <_iram_end+0x12da0>
400d0bf4:	408f50        	lsi	f5, a15, 0x100
400d0bf7:	3f          	.byte 0x3f
400d0bf8:	409030        	lsi	f3, a0, 0x100
400d0bfb:	3f          	.byte 0x3f
400d0bfc:	f078      	l32i.n	a7, a0, 60
400d0bfe:	3ffb      	addi.n	a3, a15, 15
400d0c00:	fbdb60        	f64subc	a6, a11, 2, 1
400d0c03:	3f          	.byte 0x3f
400d0c04:	91cc      	bnez.n	a1, 400d0c11 <_flash_cache_start+0xbf9>
400d0c06:	803f40        	add	a3, a15, a4
400d0c09:	3f4092        	s8i	a9, a0, 63
400d0c0c:	91fc      	bnez.n	a1, 400d0c49 <Printable::~Printable()+0x5>
400d0c0e:	003f40        	lsi	f4, a15, 0
400d0c11:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0c14:	fc0000        	lsi	f0, a0, 0x3f0
400d0c17:	3f          	.byte 0x3f
400d0c18:	fbdbb4        	lsi	f11, a11, 0x3ec
400d0c1b:	3f          	.byte 0x3f
400d0c1c:	fbdbb4        	lsi	f11, a11, 0x3ec
400d0c1f:	3f          	.byte 0x3f

400d0c20 <Printable::~Printable()>:
 */

class Printable
{
public:
    virtual ~Printable() {}
400d0c20:	006136        	entry	a1, 48
400d0c23:	207110        	or	a7, a1, a1
400d0c26:	0cc732        	addi	a3, a7, 12
400d0c29:	006322        	s32i	a2, a3, 0
400d0c2c:	fcfb31        	l32r	a3, 400d0018 <_flash_cache_start>
400d0c2f:	27cb      	addi.n	a2, a7, 12
400d0c31:	0228      	l32i.n	a2, a2, 0
400d0c33:	0239      	s32i.n	a3, a2, 0
400d0c35:	020c      	movi.n	a2, 0
400d0c37:	528c      	beqz.n	a2, 400d0c40 <Printable::~Printable()+0x20>
400d0c39:	27cb      	addi.n	a2, a7, 12
400d0c3b:	02a8      	l32i.n	a10, a2, 0
400d0c3d:	19bb25        	call8	400ea7f0 <operator delete(void*)>
400d0c40:	f01d      	retw.n
	...

400d0c44 <Printable::~Printable()>:
400d0c44:	006136        	entry	a1, 48
400d0c47:	207110        	or	a7, a1, a1
400d0c4a:	0cc732        	addi	a3, a7, 12
400d0c4d:	0329      	s32i.n	a2, a3, 0
400d0c4f:	0cc722        	addi	a2, a7, 12
400d0c52:	02a8      	l32i.n	a10, a2, 0
400d0c54:	fffca5        	call8	400d0c20 <Printable::~Printable()>
400d0c57:	27cb      	addi.n	a2, a7, 12
400d0c59:	02a8      	l32i.n	a10, a2, 0
400d0c5b:	19b965        	call8	400ea7f0 <operator delete(void*)>
400d0c5e:	f01d      	retw.n

400d0c60 <IPAddress::~IPAddress()>:
    // Constructors
    IPAddress();
    IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet);
    IPAddress(uint32_t address);
    IPAddress(const uint8_t *address);
    virtual ~IPAddress() {}
400d0c60:	006136        	entry	a1, 48
400d0c63:	207110        	or	a7, a1, a1
400d0c66:	0cc732        	addi	a3, a7, 12
400d0c69:	0329      	s32i.n	a2, a3, 0
400d0c6b:	fcec31        	l32r	a3, 400d001c <_flash_cache_start+0x4>
400d0c6e:	27cb      	addi.n	a2, a7, 12
400d0c70:	0228      	l32i.n	a2, a2, 0
400d0c72:	0239      	s32i.n	a3, a2, 0
400d0c74:	27cb      	addi.n	a2, a7, 12
400d0c76:	0228      	l32i.n	a2, a2, 0
400d0c78:	02ad      	mov.n	a10, a2
400d0c7a:	fffa65        	call8	400d0c20 <Printable::~Printable()>
400d0c7d:	020c      	movi.n	a2, 0
400d0c7f:	528c      	beqz.n	a2, 400d0c88 <IPAddress::~IPAddress()+0x28>
400d0c81:	27cb      	addi.n	a2, a7, 12
400d0c83:	02a8      	l32i.n	a10, a2, 0
400d0c85:	19b6a5        	call8	400ea7f0 <operator delete(void*)>
400d0c88:	f01d      	retw.n
	...

400d0c8c <IPAddress::~IPAddress()>:
400d0c8c:	006136        	entry	a1, 48
400d0c8f:	207110        	or	a7, a1, a1
400d0c92:	0cc732        	addi	a3, a7, 12
400d0c95:	0329      	s32i.n	a2, a3, 0
400d0c97:	0cc722        	addi	a2, a7, 12
400d0c9a:	02a8      	l32i.n	a10, a2, 0
400d0c9c:	fffc25        	call8	400d0c60 <IPAddress::~IPAddress()>
400d0c9f:	27cb      	addi.n	a2, a7, 12
400d0ca1:	02a8      	l32i.n	a10, a2, 0
400d0ca3:	19b4e5        	call8	400ea7f0 <operator delete(void*)>
400d0ca6:	f01d      	retw.n

400d0ca8 <setup()>:
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
    vTaskDelay(10);
}

void setup()
{
400d0ca8:	004136        	entry	a1, 32
400d0cab:	017d      	mov.n	a7, a1
    testDiv<uint8_t>("uint8");
400d0cad:	fcdc21        	l32r	a2, 400d0020 <_flash_cache_start+0x8>
400d0cb0:	02ad      	mov.n	a10, a2
400d0cb2:	0009e5        	call8	400d0d50 <void testDiv<unsigned char>(char const*)>
    testDiv<uint16_t>("uint16");
400d0cb5:	fcdb21        	l32r	a2, 400d0024 <_flash_cache_start+0xc>
400d0cb8:	02ad      	mov.n	a10, a2
400d0cba:	001fa5        	call8	400d0eb4 <void testDiv<unsigned short>(char const*)>
    testDiv<uint32_t>("uint32");
400d0cbd:	fcda21        	l32r	a2, 400d0028 <_flash_cache_start+0x10>
400d0cc0:	02ad      	mov.n	a10, a2
400d0cc2:	003565        	call8	400d1018 <void testDiv<unsigned int>(char const*)>
    testDiv<uint64_t>("uint64");
400d0cc5:	fcd921        	l32r	a2, 400d002c <_flash_cache_start+0x14>
400d0cc8:	02ad      	mov.n	a10, a2
400d0cca:	004a65        	call8	400d1170 <void testDiv<unsigned long long>(char const*)>
    testDiv<float>("float");
400d0ccd:	fcd821        	l32r	a2, 400d0030 <_flash_cache_start+0x18>
400d0cd0:	02ad      	mov.n	a10, a2
400d0cd2:	006165        	call8	400d12e8 <void testDiv<float>(char const*)>
    testDiv<double>("double");
400d0cd5:	fcd721        	l32r	a2, 400d0034 <_flash_cache_start+0x1c>
400d0cd8:	02ad      	mov.n	a10, a2
400d0cda:	0077a5        	call8	400d1454 <void testDiv<double>(char const*)>

    printf("\n");
400d0cdd:	aa0c      	movi.n	a10, 10
400d0cdf:	0a2765        	call8	400daf54 <putchar>

    testMult<uint8_t>("uint8");
400d0ce2:	fccf21        	l32r	a2, 400d0020 <_flash_cache_start+0x8>
400d0ce5:	02ad      	mov.n	a10, a2
400d0ce7:	008f25        	call8	400d15d8 <void testMult<unsigned char>(char const*)>
    testMult<uint16_t>("uint16");
400d0cea:	fcce21        	l32r	a2, 400d0024 <_flash_cache_start+0xc>
400d0ced:	02ad      	mov.n	a10, a2
400d0cef:	00a4e5        	call8	400d173c <void testMult<unsigned short>(char const*)>
    testMult<uint32_t>("uint32");
400d0cf2:	fccd21        	l32r	a2, 400d0028 <_flash_cache_start+0x10>
400d0cf5:	02ad      	mov.n	a10, a2
400d0cf7:	00baa5        	call8	400d18a0 <void testMult<unsigned int>(char const*)>
    testMult<uint64_t>("uint64");
400d0cfa:	fccc21        	l32r	a2, 400d002c <_flash_cache_start+0x14>
400d0cfd:	20a220        	or	a10, a2, a2
400d0d00:	00cf65        	call8	400d19f8 <void testMult<unsigned long long>(char const*)>
    testMult<float>("float");
400d0d03:	fccb21        	l32r	a2, 400d0030 <_flash_cache_start+0x18>
400d0d06:	20a220        	or	a10, a2, a2
400d0d09:	00e6e5        	call8	400d1b78 <void testMult<float>(char const*)>
    testMult<double>("double");
400d0d0c:	fcca21        	l32r	a2, 400d0034 <_flash_cache_start+0x1c>
400d0d0f:	02ad      	mov.n	a10, a2
400d0d11:	00fca5        	call8	400d1cdc <void testMult<double>(char const*)>
}
400d0d14:	f03d      	nop.n
400d0d16:	f01d      	retw.n

400d0d18 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
400d0d18:	006136        	entry	a1, 48
400d0d1b:	207110        	or	a7, a1, a1
400d0d1e:	37cb      	addi.n	a3, a7, 12
400d0d20:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d0d22:	27cb      	addi.n	a2, a7, 12
400d0d24:	0228      	l32i.n	a2, a2, 0
400d0d26:	0228      	l32i.n	a2, a2, 0
400d0d28:	37cb      	addi.n	a3, a7, 12
400d0d2a:	0338      	l32i.n	a3, a3, 0
400d0d2c:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d0d2e:	47cb      	addi.n	a4, a7, 12
400d0d30:	0448      	l32i.n	a4, a4, 0
400d0d32:	20a440        	or	a10, a4, a4
400d0d35:	1afae5        	call8	400ebce4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>
400d0d38:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d0d3a:	04cd      	mov.n	a12, a4
400d0d3c:	03bd      	mov.n	a11, a3
400d0d3e:	02ad      	mov.n	a10, a2
400d0d40:	011765        	call8	400d1eb8 <void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)>
		      _M_get_Tp_allocator()); }
400d0d43:	27cb      	addi.n	a2, a7, 12
400d0d45:	0228      	l32i.n	a2, a2, 0
400d0d47:	02ad      	mov.n	a10, a2
400d0d49:	0112e5        	call8	400d1e78 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>
400d0d4c:	f03d      	nop.n
400d0d4e:	f01d      	retw.n

400d0d50 <void testDiv<unsigned char>(char const*)>:
static void testDiv(const char *name)
400d0d50:	00c136        	entry	a1, 96
400d0d53:	017d      	mov.n	a7, a1
400d0d55:	37cb      	addi.n	a3, a7, 12
400d0d57:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d0d59:	2cc722        	addi	a2, a7, 44
400d0d5c:	fcb731        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d0d5f:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d0d61:	1ec722        	addi	a2, a7, 30
400d0d64:	02ad      	mov.n	a10, a2
400d0d66:	201110        	or	a1, a1, a1
400d0d69:	0116e5        	call8	400d1ed8 <std::allocator<unsigned char>::allocator()>
400d0d6c:	1ec742        	addi	a4, a7, 30
400d0d6f:	fcb231        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d0d72:	34c722        	addi	a2, a7, 52
400d0d75:	04cd      	mov.n	a12, a4
400d0d77:	03bd      	mov.n	a11, a3
400d0d79:	02ad      	mov.n	a10, a2
400d0d7b:	201110        	or	a1, a1, a1
400d0d7e:	011825        	call8	400d1f00 <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>
400d0d81:	1ec722        	addi	a2, a7, 30
400d0d84:	02ad      	mov.n	a10, a2
400d0d86:	201110        	or	a1, a1, a1
400d0d89:	011625        	call8	400d1eec <std::allocator<unsigned char>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d0d8c:	20c722        	addi	a2, a7, 32
400d0d8f:	030c      	movi.n	a3, 0
400d0d91:	0239      	s32i.n	a3, a2, 0
400d0d93:	20c722        	addi	a2, a7, 32
400d0d96:	0228      	l32i.n	a2, a2, 0
400d0d98:	fca931        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0d9b:	2e3327        	bltu	a3, a2, 400d0dcd <void testDiv<unsigned char>(char const*)+0x7d>
        data[i] = esp_random();
400d0d9e:	20c732        	addi	a3, a7, 32
400d0da1:	34c722        	addi	a2, a7, 52
400d0da4:	03b8      	l32i.n	a11, a3, 0
400d0da6:	02ad      	mov.n	a10, a2
400d0da8:	201110        	or	a1, a1, a1
400d0dab:	1af4a5        	call8	400ebcf4 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d0dae:	0a2d      	mov.n	a2, a10
400d0db0:	201110        	or	a1, a1, a1
400d0db3:	b007a5        	call8	40080e2c <esp_random>
400d0db6:	0a3d      	mov.n	a3, a10
400d0db8:	743030        	extui	a3, a3, 0, 8
400d0dbb:	004232        	s8i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d0dbe:	20c722        	addi	a2, a7, 32
400d0dc1:	20c732        	addi	a3, a7, 32
400d0dc4:	0338      	l32i.n	a3, a3, 0
400d0dc6:	331b      	addi.n	a3, a3, 1
400d0dc8:	0239      	s32i.n	a3, a2, 0
400d0dca:	fff146        	j	400d0d93 <void testDiv<unsigned char>(char const*)+0x43>
    const T div = esp_random();
400d0dcd:	201110        	or	a1, a1, a1
400d0dd0:	b005a5        	call8	40080e2c <esp_random>
400d0dd3:	203aa0        	or	a3, a10, a10
400d0dd6:	1fc722        	addi	a2, a7, 31
400d0dd9:	004232        	s8i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d0ddc:	201110        	or	a1, a1, a1
400d0ddf:	b785e5        	call8	4008863c <xTaskGetTickCount>
400d0de2:	0a3d      	mov.n	a3, a10
400d0de4:	30c722        	addi	a2, a7, 48
400d0de7:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d0de9:	24c722        	addi	a2, a7, 36
400d0dec:	030c      	movi.n	a3, 0
400d0dee:	0239      	s32i.n	a3, a2, 0
400d0df0:	24c722        	addi	a2, a7, 36
400d0df3:	0228      	l32i.n	a2, a2, 0
400d0df5:	133c      	movi.n	a3, 49
400d0df7:	552327        	blt	a3, a2, 400d0e50 <void testDiv<unsigned char>(char const*)+0x100>
        for (size_t i = 0; i < size; ++i)
400d0dfa:	28c722        	addi	a2, a7, 40
400d0dfd:	030c      	movi.n	a3, 0
400d0dff:	0239      	s32i.n	a3, a2, 0
400d0e01:	28c722        	addi	a2, a7, 40
400d0e04:	0228      	l32i.n	a2, a2, 0
400d0e06:	fc8d31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0e09:	333327        	bltu	a3, a2, 400d0e40 <void testDiv<unsigned char>(char const*)+0xf0>
            data[i] /= div;
400d0e0c:	28c732        	addi	a3, a7, 40
400d0e0f:	34c722        	addi	a2, a7, 52
400d0e12:	03b8      	l32i.n	a11, a3, 0
400d0e14:	02ad      	mov.n	a10, a2
400d0e16:	201110        	or	a1, a1, a1
400d0e19:	1aeda5        	call8	400ebcf4 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d0e1c:	0a2d      	mov.n	a2, a10
400d0e1e:	000242        	l8ui	a4, a2, 0
400d0e21:	1fc732        	addi	a3, a7, 31
400d0e24:	000332        	l8ui	a3, a3, 0
400d0e27:	c23430        	quou	a3, a4, a3
400d0e2a:	743030        	extui	a3, a3, 0, 8
400d0e2d:	004232        	s8i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d0e30:	28c722        	addi	a2, a7, 40
400d0e33:	28c732        	addi	a3, a7, 40
400d0e36:	0338      	l32i.n	a3, a3, 0
400d0e38:	331b      	addi.n	a3, a3, 1
400d0e3a:	0239      	s32i.n	a3, a2, 0
400d0e3c:	fff046        	j	400d0e01 <void testDiv<unsigned char>(char const*)+0xb1>
400d0e3f:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d0e42:	c73224        	lsi	f2, a2, 0x31c
400d0e45:	033824        	lsi	f2, a8, 12
400d0e48:	331b      	addi.n	a3, a3, 1
400d0e4a:	0239      	s32i.n	a3, a2, 0
400d0e4c:	ffe806        	j	400d0df0 <void testDiv<unsigned char>(char const*)+0xa0>
400d0e4f:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d0e52:	7ea520        	f64rnd	a10, a5, a2, 3
400d0e55:	0a3db7        	bltu	a13, a11, 400d0e63 <void testDiv<unsigned char>(char const*)+0x113>
400d0e58:	30c722        	addi	a2, a7, 48
400d0e5b:	0228      	l32i.n	a2, a2, 0
400d0e5d:	c04320        	sub	a4, a3, a2
400d0e60:	37cb      	addi.n	a3, a7, 12
400d0e62:	fc7721        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d0e65:	04dd      	mov.n	a13, a4
400d0e67:	01a0c2        	movi	a12, 1
400d0e6a:	03b8      	l32i.n	a11, a3, 0
400d0e6c:	20a220        	or	a10, a2, a2
400d0e6f:	201110        	or	a1, a1, a1
400d0e72:	0af125        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d0e75:	aa0c      	movi.n	a10, 10
400d0e77:	201110        	or	a1, a1, a1
400d0e7a:	b82025        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d0e7d:	34c722        	addi	a2, a7, 52
400d0e80:	02ad      	mov.n	a10, a2
400d0e82:	201110        	or	a1, a1, a1
400d0e85:	010ca5        	call8	400d1f50 <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
}
400d0e88:	000946        	j	400d0eb1 <void testDiv<unsigned char>(char const*)+0x161>
400d0e8b:	1ec732        	addi	a3, a7, 30
400d0e8e:	03ad      	mov.n	a10, a3
400d0e90:	201110        	or	a1, a1, a1
400d0e93:	0105a5        	call8	400d1eec <std::allocator<unsigned char>::~allocator()>
400d0e96:	02ad      	mov.n	a10, a2
400d0e98:	201110        	or	a1, a1, a1
400d0e9b:	03a1a5        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d0e9e:	34c732        	addi	a3, a7, 52
400d0ea1:	03ad      	mov.n	a10, a3
400d0ea3:	201110        	or	a1, a1, a1
400d0ea6:	010aa5        	call8	400d1f50 <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
400d0ea9:	02ad      	mov.n	a10, a2
400d0eab:	201110        	or	a1, a1, a1
400d0eae:	03a065        	call8	400d48b4 <_Unwind_Resume>
}
400d0eb1:	f01d      	retw.n
	...

400d0eb4 <void testDiv<unsigned short>(char const*)>:
static void testDiv(const char *name)
400d0eb4:	00c136        	entry	a1, 96
400d0eb7:	017d      	mov.n	a7, a1
400d0eb9:	37cb      	addi.n	a3, a7, 12
400d0ebb:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d0ebd:	2cc722        	addi	a2, a7, 44
400d0ec0:	fc5e31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d0ec3:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d0ec5:	1dc722        	addi	a2, a7, 29
400d0ec8:	02ad      	mov.n	a10, a2
400d0eca:	201110        	or	a1, a1, a1
400d0ecd:	010ba5        	call8	400d1f88 <std::allocator<unsigned short>::allocator()>
400d0ed0:	1dc742        	addi	a4, a7, 29
400d0ed3:	fc5931        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d0ed6:	34c722        	addi	a2, a7, 52
400d0ed9:	04cd      	mov.n	a12, a4
400d0edb:	03bd      	mov.n	a11, a3
400d0edd:	02ad      	mov.n	a10, a2
400d0edf:	201110        	or	a1, a1, a1
400d0ee2:	010ce5        	call8	400d1fb0 <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>
400d0ee5:	1dc722        	addi	a2, a7, 29
400d0ee8:	02ad      	mov.n	a10, a2
400d0eea:	201110        	or	a1, a1, a1
400d0eed:	010ae5        	call8	400d1f9c <std::allocator<unsigned short>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d0ef0:	20c722        	addi	a2, a7, 32
400d0ef3:	030c      	movi.n	a3, 0
400d0ef5:	0239      	s32i.n	a3, a2, 0
400d0ef7:	20c722        	addi	a2, a7, 32
400d0efa:	0228      	l32i.n	a2, a2, 0
400d0efc:	fc5031        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0eff:	2e3327        	bltu	a3, a2, 400d0f31 <void testDiv<unsigned short>(char const*)+0x7d>
        data[i] = esp_random();
400d0f02:	20c732        	addi	a3, a7, 32
400d0f05:	34c722        	addi	a2, a7, 52
400d0f08:	03b8      	l32i.n	a11, a3, 0
400d0f0a:	02ad      	mov.n	a10, a2
400d0f0c:	201110        	or	a1, a1, a1
400d0f0f:	1ae025        	call8	400ebd10 <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d0f12:	0a2d      	mov.n	a2, a10
400d0f14:	201110        	or	a1, a1, a1
400d0f17:	aff165        	call8	40080e2c <esp_random>
400d0f1a:	0a3d      	mov.n	a3, a10
400d0f1c:	f43030        	extui	a3, a3, 0, 16
400d0f1f:	005232        	s16i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d0f22:	20c722        	addi	a2, a7, 32
400d0f25:	20c732        	addi	a3, a7, 32
400d0f28:	0338      	l32i.n	a3, a3, 0
400d0f2a:	331b      	addi.n	a3, a3, 1
400d0f2c:	0239      	s32i.n	a3, a2, 0
400d0f2e:	fff146        	j	400d0ef7 <void testDiv<unsigned short>(char const*)+0x43>
    const T div = esp_random();
400d0f31:	201110        	or	a1, a1, a1
400d0f34:	afef65        	call8	40080e2c <esp_random>
400d0f37:	203aa0        	or	a3, a10, a10
400d0f3a:	1ec722        	addi	a2, a7, 30
400d0f3d:	005232        	s16i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d0f40:	201110        	or	a1, a1, a1
400d0f43:	b76fa5        	call8	4008863c <xTaskGetTickCount>
400d0f46:	0a3d      	mov.n	a3, a10
400d0f48:	30c722        	addi	a2, a7, 48
400d0f4b:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d0f4d:	24c722        	addi	a2, a7, 36
400d0f50:	030c      	movi.n	a3, 0
400d0f52:	0239      	s32i.n	a3, a2, 0
400d0f54:	24c722        	addi	a2, a7, 36
400d0f57:	0228      	l32i.n	a2, a2, 0
400d0f59:	133c      	movi.n	a3, 49
400d0f5b:	552327        	blt	a3, a2, 400d0fb4 <void testDiv<unsigned short>(char const*)+0x100>
        for (size_t i = 0; i < size; ++i)
400d0f5e:	28c722        	addi	a2, a7, 40
400d0f61:	030c      	movi.n	a3, 0
400d0f63:	0239      	s32i.n	a3, a2, 0
400d0f65:	28c722        	addi	a2, a7, 40
400d0f68:	0228      	l32i.n	a2, a2, 0
400d0f6a:	fc3431        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0f6d:	333327        	bltu	a3, a2, 400d0fa4 <void testDiv<unsigned short>(char const*)+0xf0>
            data[i] /= div;
400d0f70:	28c732        	addi	a3, a7, 40
400d0f73:	34c722        	addi	a2, a7, 52
400d0f76:	03b8      	l32i.n	a11, a3, 0
400d0f78:	02ad      	mov.n	a10, a2
400d0f7a:	201110        	or	a1, a1, a1
400d0f7d:	1ad925        	call8	400ebd10 <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d0f80:	0a2d      	mov.n	a2, a10
400d0f82:	001242        	l16ui	a4, a2, 0
400d0f85:	1ec732        	addi	a3, a7, 30
400d0f88:	001332        	l16ui	a3, a3, 0
400d0f8b:	c23430        	quou	a3, a4, a3
400d0f8e:	f43030        	extui	a3, a3, 0, 16
400d0f91:	005232        	s16i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d0f94:	28c722        	addi	a2, a7, 40
400d0f97:	28c732        	addi	a3, a7, 40
400d0f9a:	0338      	l32i.n	a3, a3, 0
400d0f9c:	331b      	addi.n	a3, a3, 1
400d0f9e:	0239      	s32i.n	a3, a2, 0
400d0fa0:	fff046        	j	400d0f65 <void testDiv<unsigned short>(char const*)+0xb1>
400d0fa3:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d0fa6:	c73224        	lsi	f2, a2, 0x31c
400d0fa9:	033824        	lsi	f2, a8, 12
400d0fac:	331b      	addi.n	a3, a3, 1
400d0fae:	0239      	s32i.n	a3, a2, 0
400d0fb0:	ffe806        	j	400d0f54 <void testDiv<unsigned short>(char const*)+0xa0>
400d0fb3:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d0fb6:	686520        	lsi	f2, a5, 0x1a0
400d0fb9:	0a3db7        	bltu	a13, a11, 400d0fc7 <void testDiv<unsigned short>(char const*)+0x113>
400d0fbc:	30c722        	addi	a2, a7, 48
400d0fbf:	0228      	l32i.n	a2, a2, 0
400d0fc1:	c04320        	sub	a4, a3, a2
400d0fc4:	37cb      	addi.n	a3, a7, 12
400d0fc6:	fc1e21        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d0fc9:	04dd      	mov.n	a13, a4
400d0fcb:	02a0c2        	movi	a12, 2
400d0fce:	03b8      	l32i.n	a11, a3, 0
400d0fd0:	20a220        	or	a10, a2, a2
400d0fd3:	201110        	or	a1, a1, a1
400d0fd6:	0adae5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d0fd9:	aa0c      	movi.n	a10, 10
400d0fdb:	201110        	or	a1, a1, a1
400d0fde:	b809e5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d0fe1:	34c722        	addi	a2, a7, 52
400d0fe4:	02ad      	mov.n	a10, a2
400d0fe6:	201110        	or	a1, a1, a1
400d0fe9:	010165        	call8	400d2000 <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
}
400d0fec:	000946        	j	400d1015 <void testDiv<unsigned short>(char const*)+0x161>
400d0fef:	1dc732        	addi	a3, a7, 29
400d0ff2:	03ad      	mov.n	a10, a3
400d0ff4:	201110        	or	a1, a1, a1
400d0ff7:	00fa65        	call8	400d1f9c <std::allocator<unsigned short>::~allocator()>
400d0ffa:	02ad      	mov.n	a10, a2
400d0ffc:	201110        	or	a1, a1, a1
400d0fff:	038b65        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d1002:	34c732        	addi	a3, a7, 52
400d1005:	03ad      	mov.n	a10, a3
400d1007:	201110        	or	a1, a1, a1
400d100a:	00ff65        	call8	400d2000 <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
400d100d:	02ad      	mov.n	a10, a2
400d100f:	201110        	or	a1, a1, a1
400d1012:	038a25        	call8	400d48b4 <_Unwind_Resume>
}
400d1015:	f01d      	retw.n
	...

400d1018 <void testDiv<unsigned int>(char const*)>:
static void testDiv(const char *name)
400d1018:	00c136        	entry	a1, 96
400d101b:	017d      	mov.n	a7, a1
400d101d:	37cb      	addi.n	a3, a7, 12
400d101f:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1021:	28c722        	addi	a2, a7, 40
400d1024:	fc0531        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1027:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1029:	1bc722        	addi	a2, a7, 27
400d102c:	02ad      	mov.n	a10, a2
400d102e:	201110        	or	a1, a1, a1
400d1031:	010065        	call8	400d2038 <std::allocator<unsigned int>::allocator()>
400d1034:	1bc742        	addi	a4, a7, 27
400d1037:	fc0031        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d103a:	34c722        	addi	a2, a7, 52
400d103d:	04cd      	mov.n	a12, a4
400d103f:	03bd      	mov.n	a11, a3
400d1041:	02ad      	mov.n	a10, a2
400d1043:	201110        	or	a1, a1, a1
400d1046:	0101a5        	call8	400d2060 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>
400d1049:	1bc722        	addi	a2, a7, 27
400d104c:	02ad      	mov.n	a10, a2
400d104e:	201110        	or	a1, a1, a1
400d1051:	00ffa5        	call8	400d204c <std::allocator<unsigned int>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1054:	1cc722        	addi	a2, a7, 28
400d1057:	030c      	movi.n	a3, 0
400d1059:	0239      	s32i.n	a3, a2, 0
400d105b:	1cc722        	addi	a2, a7, 28
400d105e:	0228      	l32i.n	a2, a2, 0
400d1060:	fbf731        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1063:	2a3327        	bltu	a3, a2, 400d1091 <void testDiv<unsigned int>(char const*)+0x79>
        data[i] = esp_random();
400d1066:	1cc732        	addi	a3, a7, 28
400d1069:	34c722        	addi	a2, a7, 52
400d106c:	03b8      	l32i.n	a11, a3, 0
400d106e:	02ad      	mov.n	a10, a2
400d1070:	201110        	or	a1, a1, a1
400d1073:	1acbe5        	call8	400ebd30 <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d1076:	0a2d      	mov.n	a2, a10
400d1078:	201110        	or	a1, a1, a1
400d107b:	afdb25        	call8	40080e2c <esp_random>
400d107e:	0a3d      	mov.n	a3, a10
400d1080:	0239      	s32i.n	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1082:	1cc722        	addi	a2, a7, 28
400d1085:	1cc732        	addi	a3, a7, 28
400d1088:	0338      	l32i.n	a3, a3, 0
400d108a:	331b      	addi.n	a3, a3, 1
400d108c:	0239      	s32i.n	a3, a2, 0
400d108e:	fff246        	j	400d105b <void testDiv<unsigned int>(char const*)+0x43>
    const T div = esp_random();
400d1091:	201110        	or	a1, a1, a1
400d1094:	afd965        	call8	40080e2c <esp_random>
400d1097:	0a3d      	mov.n	a3, a10
400d1099:	2cc722        	addi	a2, a7, 44
400d109c:	0239      	s32i.n	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d109e:	201110        	or	a1, a1, a1
400d10a1:	b759a5        	call8	4008863c <xTaskGetTickCount>
400d10a4:	0a3d      	mov.n	a3, a10
400d10a6:	30c722        	addi	a2, a7, 48
400d10a9:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d10ab:	20c722        	addi	a2, a7, 32
400d10ae:	030c      	movi.n	a3, 0
400d10b0:	0239      	s32i.n	a3, a2, 0
400d10b2:	20c722        	addi	a2, a7, 32
400d10b5:	0228      	l32i.n	a2, a2, 0
400d10b7:	133c      	movi.n	a3, 49
400d10b9:	4f2327        	blt	a3, a2, 400d110c <void testDiv<unsigned int>(char const*)+0xf4>
        for (size_t i = 0; i < size; ++i)
400d10bc:	24c722        	addi	a2, a7, 36
400d10bf:	030c      	movi.n	a3, 0
400d10c1:	0239      	s32i.n	a3, a2, 0
400d10c3:	24c722        	addi	a2, a7, 36
400d10c6:	0228      	l32i.n	a2, a2, 0
400d10c8:	fbdd31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d10cb:	2d3327        	bltu	a3, a2, 400d10fc <void testDiv<unsigned int>(char const*)+0xe4>
            data[i] /= div;
400d10ce:	24c732        	addi	a3, a7, 36
400d10d1:	34c722        	addi	a2, a7, 52
400d10d4:	03b8      	l32i.n	a11, a3, 0
400d10d6:	02ad      	mov.n	a10, a2
400d10d8:	201110        	or	a1, a1, a1
400d10db:	1ac565        	call8	400ebd30 <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d10de:	0a2d      	mov.n	a2, a10
400d10e0:	0248      	l32i.n	a4, a2, 0
400d10e2:	2cc732        	addi	a3, a7, 44
400d10e5:	0338      	l32i.n	a3, a3, 0
400d10e7:	c23430        	quou	a3, a4, a3
400d10ea:	0239      	s32i.n	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d10ec:	24c722        	addi	a2, a7, 36
400d10ef:	24c732        	addi	a3, a7, 36
400d10f2:	0338      	l32i.n	a3, a3, 0
400d10f4:	331b      	addi.n	a3, a3, 1
400d10f6:	0239      	s32i.n	a3, a2, 0
400d10f8:	fff1c6        	j	400d10c3 <void testDiv<unsigned int>(char const*)+0xab>
400d10fb:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d10fe:	c73220        	lsi	f2, a2, 0x31c
400d1101:	033820        	lsi	f2, a8, 12
400d1104:	331b      	addi.n	a3, a3, 1
400d1106:	0239      	s32i.n	a3, a2, 0
400d1108:	ffe986        	j	400d10b2 <void testDiv<unsigned int>(char const*)+0x9a>
400d110b:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d110e:	52e520        	lsi	f2, a5, 0x148
400d1111:	0a3db7        	bltu	a13, a11, 400d111f <void testDiv<unsigned int>(char const*)+0x107>
400d1114:	30c722        	addi	a2, a7, 48
400d1117:	0228      	l32i.n	a2, a2, 0
400d1119:	c04320        	sub	a4, a3, a2
400d111c:	37cb      	addi.n	a3, a7, 12
400d111e:	fbc821        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d1121:	04dd      	mov.n	a13, a4
400d1123:	04a0c2        	movi	a12, 4
400d1126:	03b8      	l32i.n	a11, a3, 0
400d1128:	20a220        	or	a10, a2, a2
400d112b:	201110        	or	a1, a1, a1
400d112e:	0ac565        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1131:	aa0c      	movi.n	a10, 10
400d1133:	201110        	or	a1, a1, a1
400d1136:	b7f465        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1139:	34c722        	addi	a2, a7, 52
400d113c:	02ad      	mov.n	a10, a2
400d113e:	201110        	or	a1, a1, a1
400d1141:	ffbd65        	call8	400d0d18 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
}
400d1144:	000946        	j	400d116d <void testDiv<unsigned int>(char const*)+0x155>
400d1147:	1bc732        	addi	a3, a7, 27
400d114a:	03ad      	mov.n	a10, a3
400d114c:	201110        	or	a1, a1, a1
400d114f:	00efe5        	call8	400d204c <std::allocator<unsigned int>::~allocator()>
400d1152:	02ad      	mov.n	a10, a2
400d1154:	201110        	or	a1, a1, a1
400d1157:	0375e5        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d115a:	34c732        	addi	a3, a7, 52
400d115d:	03ad      	mov.n	a10, a3
400d115f:	201110        	or	a1, a1, a1
400d1162:	ffbb65        	call8	400d0d18 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
400d1165:	02ad      	mov.n	a10, a2
400d1167:	201110        	or	a1, a1, a1
400d116a:	0374a5        	call8	400d48b4 <_Unwind_Resume>
}
400d116d:	f01d      	retw.n
	...

400d1170 <void testDiv<unsigned long long>(char const*)>:
static void testDiv(const char *name)
400d1170:	00c136        	entry	a1, 96
400d1173:	017d      	mov.n	a7, a1
400d1175:	37cb      	addi.n	a3, a7, 12
400d1177:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1179:	20c722        	addi	a2, a7, 32
400d117c:	fbaf31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d117f:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1181:	13c722        	addi	a2, a7, 19
400d1184:	02ad      	mov.n	a10, a2
400d1186:	201110        	or	a1, a1, a1
400d1189:	00f265        	call8	400d20b0 <std::allocator<unsigned long long>::allocator()>
400d118c:	13c762        	addi	a6, a7, 19
400d118f:	fbaa31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1192:	34c722        	addi	a2, a7, 52
400d1195:	06cd      	mov.n	a12, a6
400d1197:	03bd      	mov.n	a11, a3
400d1199:	02ad      	mov.n	a10, a2
400d119b:	201110        	or	a1, a1, a1
400d119e:	00f3a5        	call8	400d20d8 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>
400d11a1:	13c722        	addi	a2, a7, 19
400d11a4:	02ad      	mov.n	a10, a2
400d11a6:	201110        	or	a1, a1, a1
400d11a9:	00f1a5        	call8	400d20c4 <std::allocator<unsigned long long>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d11ac:	14c722        	addi	a2, a7, 20
400d11af:	030c      	movi.n	a3, 0
400d11b1:	0239      	s32i.n	a3, a2, 0
400d11b3:	14c722        	addi	a2, a7, 20
400d11b6:	0228      	l32i.n	a2, a2, 0
400d11b8:	fba131        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d11bb:	313327        	bltu	a3, a2, 400d11f0 <void testDiv<unsigned long long>(char const*)+0x80>
        data[i] = esp_random();
400d11be:	14c732        	addi	a3, a7, 20
400d11c1:	34c722        	addi	a2, a7, 52
400d11c4:	03b8      	l32i.n	a11, a3, 0
400d11c6:	02ad      	mov.n	a10, a2
400d11c8:	201110        	or	a1, a1, a1
400d11cb:	1ab865        	call8	400ebd50 <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d11ce:	0a2d      	mov.n	a2, a10
400d11d0:	201110        	or	a1, a1, a1
400d11d3:	afc5a5        	call8	40080e2c <esp_random>
400d11d6:	0a3d      	mov.n	a3, a10
400d11d8:	034d      	mov.n	a4, a3
400d11da:	050c      	movi.n	a5, 0
400d11dc:	0249      	s32i.n	a4, a2, 0
400d11de:	1259      	s32i.n	a5, a2, 4
    for (size_t i = 0; i < size; ++i)
400d11e0:	14c722        	addi	a2, a7, 20
400d11e3:	14c732        	addi	a3, a7, 20
400d11e6:	0338      	l32i.n	a3, a3, 0
400d11e8:	331b      	addi.n	a3, a3, 1
400d11ea:	0239      	s32i.n	a3, a2, 0
400d11ec:	fff0c6        	j	400d11b3 <void testDiv<unsigned long long>(char const*)+0x43>
400d11ef:	111000        	slli	a1, a0, 16
    const T div = esp_random();
400d11f2:	c3a520        	movf	a10, a5, b2
400d11f5:	af          	.byte 0xaf
400d11f6:	0a3d      	mov.n	a3, a10
400d11f8:	28c722        	addi	a2, a7, 40
400d11fb:	006232        	s32i	a3, a2, 0
400d11fe:	00a032        	movi	a3, 0
400d1201:	016232        	s32i	a3, a2, 4
    const auto start = xTaskGetTickCount();
400d1204:	201110        	or	a1, a1, a1
400d1207:	b74365        	call8	4008863c <xTaskGetTickCount>
400d120a:	0a3d      	mov.n	a3, a10
400d120c:	24c722        	addi	a2, a7, 36
400d120f:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1211:	18c722        	addi	a2, a7, 24
400d1214:	030c      	movi.n	a3, 0
400d1216:	0239      	s32i.n	a3, a2, 0
400d1218:	18c722        	addi	a2, a7, 24
400d121b:	0228      	l32i.n	a2, a2, 0
400d121d:	133c      	movi.n	a3, 49
400d121f:	612327        	blt	a3, a2, 400d1284 <void testDiv<unsigned long long>(char const*)+0x114>
        for (size_t i = 0; i < size; ++i)
400d1222:	1cc722        	addi	a2, a7, 28
400d1225:	030c      	movi.n	a3, 0
400d1227:	0239      	s32i.n	a3, a2, 0
400d1229:	1cc722        	addi	a2, a7, 28
400d122c:	0228      	l32i.n	a2, a2, 0
400d122e:	fb8331        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1231:	3f3327        	bltu	a3, a2, 400d1274 <void testDiv<unsigned long long>(char const*)+0x104>
            data[i] /= div;
400d1234:	1cc732        	addi	a3, a7, 28
400d1237:	34c722        	addi	a2, a7, 52
400d123a:	03b8      	l32i.n	a11, a3, 0
400d123c:	20a220        	or	a10, a2, a2
400d123f:	201110        	or	a1, a1, a1
400d1242:	1ab0e5        	call8	400ebd50 <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1245:	0a4d      	mov.n	a4, a10
400d1247:	0428      	l32i.n	a2, a4, 0
400d1249:	1438      	l32i.n	a3, a4, 4
400d124b:	28c752        	addi	a5, a7, 40
400d124e:	05c8      	l32i.n	a12, a5, 0
400d1250:	15d8      	l32i.n	a13, a5, 4
400d1252:	02ad      	mov.n	a10, a2
400d1254:	03bd      	mov.n	a11, a3
400d1256:	fb7b81        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400d1259:	0008e0        	callx8	a8
400d125c:	0a2d      	mov.n	a2, a10
400d125e:	0b3d      	mov.n	a3, a11
400d1260:	0429      	s32i.n	a2, a4, 0
400d1262:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d1264:	1cc722        	addi	a2, a7, 28
400d1267:	1cc732        	addi	a3, a7, 28
400d126a:	0338      	l32i.n	a3, a3, 0
400d126c:	331b      	addi.n	a3, a3, 1
400d126e:	0239      	s32i.n	a3, a2, 0
400d1270:	ffed46        	j	400d1229 <void testDiv<unsigned long long>(char const*)+0xb9>
400d1273:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d1276:	3218      	l32i.n	a1, a2, 12
400d1278:	3818c7        	beq	a8, a12, 400d12b4 <void testDiv<unsigned long long>(char const*)+0x144>
400d127b:	331b03        	lsi	f0, a11, 204
400d127e:	0239      	s32i.n	a3, a2, 0
400d1280:	ffe506        	j	400d1218 <void testDiv<unsigned long long>(char const*)+0xa8>
400d1283:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1286:	3b6520        	ueq.s	b6, f5, f2
400d1289:	0a3db7        	bltu	a13, a11, 400d1297 <void testDiv<unsigned long long>(char const*)+0x127>
400d128c:	24c722        	addi	a2, a7, 36
400d128f:	0228      	l32i.n	a2, a2, 0
400d1291:	c04320        	sub	a4, a3, a2
400d1294:	37cb      	addi.n	a3, a7, 12
400d1296:	fb6a21        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d1299:	04dd      	mov.n	a13, a4
400d129b:	08a0c2        	movi	a12, 8
400d129e:	03b8      	l32i.n	a11, a3, 0
400d12a0:	20a220        	or	a10, a2, a2
400d12a3:	201110        	or	a1, a1, a1
400d12a6:	0aade5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d12a9:	aa0c      	movi.n	a10, 10
400d12ab:	201110        	or	a1, a1, a1
400d12ae:	b7dce5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d12b1:	34c722        	addi	a2, a7, 52
400d12b4:	02ad      	mov.n	a10, a2
400d12b6:	201110        	or	a1, a1, a1
400d12b9:	00e6e5        	call8	400d2128 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
}
400d12bc:	000946        	j	400d12e5 <void testDiv<unsigned long long>(char const*)+0x175>
400d12bf:	13c732        	addi	a3, a7, 19
400d12c2:	03ad      	mov.n	a10, a3
400d12c4:	201110        	or	a1, a1, a1
400d12c7:	00dfe5        	call8	400d20c4 <std::allocator<unsigned long long>::~allocator()>
400d12ca:	02ad      	mov.n	a10, a2
400d12cc:	201110        	or	a1, a1, a1
400d12cf:	035e65        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d12d2:	34c732        	addi	a3, a7, 52
400d12d5:	03ad      	mov.n	a10, a3
400d12d7:	201110        	or	a1, a1, a1
400d12da:	00e4e5        	call8	400d2128 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
400d12dd:	02ad      	mov.n	a10, a2
400d12df:	201110        	or	a1, a1, a1
400d12e2:	035d25        	call8	400d48b4 <_Unwind_Resume>
}
400d12e5:	f01d      	retw.n
	...

400d12e8 <void testDiv<float>(char const*)>:
static void testDiv(const char *name)
400d12e8:	00c136        	entry	a1, 96
400d12eb:	017d      	mov.n	a7, a1
400d12ed:	37cb      	addi.n	a3, a7, 12
400d12ef:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d12f1:	28c722        	addi	a2, a7, 40
400d12f4:	fb5131        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d12f7:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d12f9:	1bc722        	addi	a2, a7, 27
400d12fc:	02ad      	mov.n	a10, a2
400d12fe:	201110        	or	a1, a1, a1
400d1301:	00e5e5        	call8	400d2160 <std::allocator<float>::allocator()>
400d1304:	1bc742        	addi	a4, a7, 27
400d1307:	fb4c31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d130a:	34c722        	addi	a2, a7, 52
400d130d:	04cd      	mov.n	a12, a4
400d130f:	03bd      	mov.n	a11, a3
400d1311:	02ad      	mov.n	a10, a2
400d1313:	201110        	or	a1, a1, a1
400d1316:	00e725        	call8	400d2188 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>
400d1319:	1bc722        	addi	a2, a7, 27
400d131c:	02ad      	mov.n	a10, a2
400d131e:	201110        	or	a1, a1, a1
400d1321:	00e525        	call8	400d2174 <std::allocator<float>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1324:	1cc722        	addi	a2, a7, 28
400d1327:	030c      	movi.n	a3, 0
400d1329:	0239      	s32i.n	a3, a2, 0
400d132b:	1cc722        	addi	a2, a7, 28
400d132e:	0228      	l32i.n	a2, a2, 0
400d1330:	fb4331        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1333:	2e3327        	bltu	a3, a2, 400d1365 <void testDiv<float>(char const*)+0x7d>
        data[i] = esp_random();
400d1336:	1cc732        	addi	a3, a7, 28
400d1339:	34c722        	addi	a2, a7, 52
400d133c:	03b8      	l32i.n	a11, a3, 0
400d133e:	02ad      	mov.n	a10, a2
400d1340:	201110        	or	a1, a1, a1
400d1343:	1aa2e5        	call8	400ebd70 <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1346:	0a2d      	mov.n	a2, a10
400d1348:	201110        	or	a1, a1, a1
400d134b:	afae25        	call8	40080e2c <esp_random>
400d134e:	0a3d      	mov.n	a3, a10
400d1350:	da0300        	ufloat.s	f0, a3, 0
400d1353:	004203        	ssi	f0, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1356:	1cc722        	addi	a2, a7, 28
400d1359:	1cc732        	addi	a3, a7, 28
400d135c:	0338      	l32i.n	a3, a3, 0
400d135e:	331b      	addi.n	a3, a3, 1
400d1360:	0239      	s32i.n	a3, a2, 0
400d1362:	fff146        	j	400d132b <void testDiv<float>(char const*)+0x43>
    const T div = esp_random();
400d1365:	201110        	or	a1, a1, a1
400d1368:	afac25        	call8	40080e2c <esp_random>
400d136b:	0a3d      	mov.n	a3, a10
400d136d:	2cc722        	addi	a2, a7, 44
400d1370:	da0300        	ufloat.s	f0, a3, 0
400d1373:	004203        	ssi	f0, a2, 0
    const auto start = xTaskGetTickCount();
400d1376:	201110        	or	a1, a1, a1
400d1379:	b72c25        	call8	4008863c <xTaskGetTickCount>
400d137c:	0a3d      	mov.n	a3, a10
400d137e:	30c722        	addi	a2, a7, 48
400d1381:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1383:	20c722        	addi	a2, a7, 32
400d1386:	030c      	movi.n	a3, 0
400d1388:	0239      	s32i.n	a3, a2, 0
400d138a:	20c722        	addi	a2, a7, 32
400d138d:	0228      	l32i.n	a2, a2, 0
400d138f:	133c      	movi.n	a3, 49
400d1391:	5b2327        	blt	a3, a2, 400d13f0 <void testDiv<float>(char const*)+0x108>
        for (size_t i = 0; i < size; ++i)
400d1394:	24c722        	addi	a2, a7, 36
400d1397:	030c      	movi.n	a3, 0
400d1399:	0239      	s32i.n	a3, a2, 0
400d139b:	24c722        	addi	a2, a7, 36
400d139e:	0228      	l32i.n	a2, a2, 0
400d13a0:	fb2731        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d13a3:	393327        	bltu	a3, a2, 400d13e0 <void testDiv<float>(char const*)+0xf8>
            data[i] /= div;
400d13a6:	24c732        	addi	a3, a7, 36
400d13a9:	34c722        	addi	a2, a7, 52
400d13ac:	03b8      	l32i.n	a11, a3, 0
400d13ae:	02ad      	mov.n	a10, a2
400d13b0:	201110        	or	a1, a1, a1
400d13b3:	1a9be5        	call8	400ebd70 <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d13b6:	0a2d      	mov.n	a2, a10
400d13b8:	000203        	lsi	f0, a2, 0
400d13bb:	2cc732        	addi	a3, a7, 44
400d13be:	03b8      	l32i.n	a11, a3, 0
400d13c0:	faa040        	rfr	a10, f0
400d13c3:	fb2181        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d13c6:	0008e0        	callx8	a8
400d13c9:	fa0a50        	wfr	f0, a10
400d13cc:	004203        	ssi	f0, a2, 0
        for (size_t i = 0; i < size; ++i)
400d13cf:	24c722        	addi	a2, a7, 36
400d13d2:	24c732        	addi	a3, a7, 36
400d13d5:	0338      	l32i.n	a3, a3, 0
400d13d7:	331b      	addi.n	a3, a3, 1
400d13d9:	0239      	s32i.n	a3, a2, 0
400d13db:	ffef06        	j	400d139b <void testDiv<float>(char const*)+0xb3>
400d13de:	220000        	orb	b0, b0, b0
    for (int x = 0; x < 50; ++x)
400d13e1:	3220c7        	blt	a0, a12, 400d1417 <void testDiv<float>(char const*)+0x12f>
400d13e4:	3820c7        	blt	a0, a12, 400d1420 <void testDiv<float>(char const*)+0x138>
400d13e7:	331b03        	lsi	f0, a11, 204
400d13ea:	0239      	s32i.n	a3, a2, 0
400d13ec:	ffe686        	j	400d138a <void testDiv<float>(char const*)+0xa2>
400d13ef:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d13f2:	24a520        	extui	a10, a2, 5, 3
400d13f5:	0a3db7        	bltu	a13, a11, 400d1403 <void testDiv<float>(char const*)+0x11b>
400d13f8:	30c722        	addi	a2, a7, 48
400d13fb:	0228      	l32i.n	a2, a2, 0
400d13fd:	c04320        	sub	a4, a3, a2
400d1400:	37cb      	addi.n	a3, a7, 12
400d1402:	fb0f21        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d1405:	04dd      	mov.n	a13, a4
400d1407:	04a0c2        	movi	a12, 4
400d140a:	03b8      	l32i.n	a11, a3, 0
400d140c:	20a220        	or	a10, a2, a2
400d140f:	201110        	or	a1, a1, a1
400d1412:	0a9725        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1415:	aa0c      	movi.n	a10, 10
400d1417:	201110        	or	a1, a1, a1
400d141a:	b7c625        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d141d:	34c722        	addi	a2, a7, 52
400d1420:	02ad      	mov.n	a10, a2
400d1422:	201110        	or	a1, a1, a1
400d1425:	00db25        	call8	400d21d8 <std::vector<float, std::allocator<float> >::~vector()>
}
400d1428:	000946        	j	400d1451 <void testDiv<float>(char const*)+0x169>
400d142b:	1bc732        	addi	a3, a7, 27
400d142e:	03ad      	mov.n	a10, a3
400d1430:	201110        	or	a1, a1, a1
400d1433:	00d425        	call8	400d2174 <std::allocator<float>::~allocator()>
400d1436:	02ad      	mov.n	a10, a2
400d1438:	201110        	or	a1, a1, a1
400d143b:	0347a5        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d143e:	34c732        	addi	a3, a7, 52
400d1441:	03ad      	mov.n	a10, a3
400d1443:	201110        	or	a1, a1, a1
400d1446:	00d925        	call8	400d21d8 <std::vector<float, std::allocator<float> >::~vector()>
400d1449:	02ad      	mov.n	a10, a2
400d144b:	201110        	or	a1, a1, a1
400d144e:	034665        	call8	400d48b4 <_Unwind_Resume>
}
400d1451:	f01d      	retw.n
	...

400d1454 <void testDiv<double>(char const*)>:
static void testDiv(const char *name)
400d1454:	00c136        	entry	a1, 96
400d1457:	017d      	mov.n	a7, a1
400d1459:	37cb      	addi.n	a3, a7, 12
400d145b:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d145d:	20c722        	addi	a2, a7, 32
400d1460:	faf631        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1463:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1465:	13c722        	addi	a2, a7, 19
400d1468:	02ad      	mov.n	a10, a2
400d146a:	201110        	or	a1, a1, a1
400d146d:	00da25        	call8	400d2210 <std::allocator<double>::allocator()>
400d1470:	13c742        	addi	a4, a7, 19
400d1473:	faf131        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1476:	34c722        	addi	a2, a7, 52
400d1479:	04cd      	mov.n	a12, a4
400d147b:	03bd      	mov.n	a11, a3
400d147d:	02ad      	mov.n	a10, a2
400d147f:	201110        	or	a1, a1, a1
400d1482:	00db65        	call8	400d2238 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>
400d1485:	13c722        	addi	a2, a7, 19
400d1488:	02ad      	mov.n	a10, a2
400d148a:	201110        	or	a1, a1, a1
400d148d:	00d965        	call8	400d2224 <std::allocator<double>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1490:	14c722        	addi	a2, a7, 20
400d1493:	030c      	movi.n	a3, 0
400d1495:	0239      	s32i.n	a3, a2, 0
400d1497:	14c722        	addi	a2, a7, 20
400d149a:	0228      	l32i.n	a2, a2, 0
400d149c:	fae831        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d149f:	383327        	bltu	a3, a2, 400d14db <void testDiv<double>(char const*)+0x87>
        data[i] = esp_random();
400d14a2:	14c732        	addi	a3, a7, 20
400d14a5:	34c722        	addi	a2, a7, 52
400d14a8:	03b8      	l32i.n	a11, a3, 0
400d14aa:	02ad      	mov.n	a10, a2
400d14ac:	201110        	or	a1, a1, a1
400d14af:	1a8e25        	call8	400ebd90 <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d14b2:	0a4d      	mov.n	a4, a10
400d14b4:	201110        	or	a1, a1, a1
400d14b7:	af9765        	call8	40080e2c <esp_random>
400d14ba:	0a2d      	mov.n	a2, a10
400d14bc:	02ad      	mov.n	a10, a2
400d14be:	fae381        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d14c1:	0008e0        	callx8	a8
400d14c4:	0a2d      	mov.n	a2, a10
400d14c6:	0b3d      	mov.n	a3, a11
400d14c8:	0429      	s32i.n	a2, a4, 0
400d14ca:	1439      	s32i.n	a3, a4, 4
    for (size_t i = 0; i < size; ++i)
400d14cc:	14c722        	addi	a2, a7, 20
400d14cf:	14c732        	addi	a3, a7, 20
400d14d2:	0338      	l32i.n	a3, a3, 0
400d14d4:	331b      	addi.n	a3, a3, 1
400d14d6:	0239      	s32i.n	a3, a2, 0
400d14d8:	ffeec6        	j	400d1497 <void testDiv<double>(char const*)+0x43>
    const T div = esp_random();
400d14db:	201110        	or	a1, a1, a1
400d14de:	af94e5        	call8	40080e2c <esp_random>
400d14e1:	0a2d      	mov.n	a2, a10
400d14e3:	28c742        	addi	a4, a7, 40
400d14e6:	02ad      	mov.n	a10, a2
400d14e8:	fad981        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d14eb:	0008e0        	callx8	a8
400d14ee:	0a2d      	mov.n	a2, a10
400d14f0:	0b3d      	mov.n	a3, a11
400d14f2:	0429      	s32i.n	a2, a4, 0
400d14f4:	1439      	s32i.n	a3, a4, 4
    const auto start = xTaskGetTickCount();
400d14f6:	201110        	or	a1, a1, a1
400d14f9:	b71425        	call8	4008863c <xTaskGetTickCount>
400d14fc:	0a3d      	mov.n	a3, a10
400d14fe:	24c722        	addi	a2, a7, 36
400d1501:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1503:	18c722        	addi	a2, a7, 24
400d1506:	030c      	movi.n	a3, 0
400d1508:	0239      	s32i.n	a3, a2, 0
400d150a:	18c722        	addi	a2, a7, 24
400d150d:	0228      	l32i.n	a2, a2, 0
400d150f:	133c      	movi.n	a3, 49
400d1511:	5f2327        	blt	a3, a2, 400d1574 <void testDiv<double>(char const*)+0x120>
        for (size_t i = 0; i < size; ++i)
400d1514:	1cc722        	addi	a2, a7, 28
400d1517:	030c      	movi.n	a3, 0
400d1519:	0239      	s32i.n	a3, a2, 0
400d151b:	1cc722        	addi	a2, a7, 28
400d151e:	0228      	l32i.n	a2, a2, 0
400d1520:	fac731        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1523:	3d3327        	bltu	a3, a2, 400d1564 <void testDiv<double>(char const*)+0x110>
            data[i] /= div;
400d1526:	1cc732        	addi	a3, a7, 28
400d1529:	34c722        	addi	a2, a7, 52
400d152c:	03b8      	l32i.n	a11, a3, 0
400d152e:	02ad      	mov.n	a10, a2
400d1530:	201110        	or	a1, a1, a1
400d1533:	1a85e5        	call8	400ebd90 <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d1536:	0a4d      	mov.n	a4, a10
400d1538:	0428      	l32i.n	a2, a4, 0
400d153a:	1438      	l32i.n	a3, a4, 4
400d153c:	28c752        	addi	a5, a7, 40
400d153f:	05c8      	l32i.n	a12, a5, 0
400d1541:	15d8      	l32i.n	a13, a5, 4
400d1543:	02ad      	mov.n	a10, a2
400d1545:	03bd      	mov.n	a11, a3
400d1547:	fac281        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400d154a:	0008e0        	callx8	a8
400d154d:	0a2d      	mov.n	a2, a10
400d154f:	0b3d      	mov.n	a3, a11
400d1551:	0429      	s32i.n	a2, a4, 0
400d1553:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d1555:	1cc722        	addi	a2, a7, 28
400d1558:	1cc732        	addi	a3, a7, 28
400d155b:	0338      	l32i.n	a3, a3, 0
400d155d:	331b      	addi.n	a3, a3, 1
400d155f:	0239      	s32i.n	a3, a2, 0
400d1561:	ffed86        	j	400d151b <void testDiv<double>(char const*)+0xc7>
    for (int x = 0; x < 50; ++x)
400d1564:	18c722        	addi	a2, a7, 24
400d1567:	18c732        	addi	a3, a7, 24
400d156a:	0338      	l32i.n	a3, a3, 0
400d156c:	331b      	addi.n	a3, a3, 1
400d156e:	0239      	s32i.n	a3, a2, 0
400d1570:	ffe586        	j	400d150a <void testDiv<double>(char const*)+0xb6>
400d1573:	111000        	slli	a1, a0, 16
    printf("%8s (%d) divide took %4dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1576:	0c6520        	lsi	f2, a5, 48
400d1579:	0a3db7        	bltu	a13, a11, 400d1587 <void testDiv<double>(char const*)+0x133>
400d157c:	24c722        	addi	a2, a7, 36
400d157f:	0228      	l32i.n	a2, a2, 0
400d1581:	c04320        	sub	a4, a3, a2
400d1584:	37cb      	addi.n	a3, a7, 12
400d1586:	faae21        	l32r	a2, 400d0040 <_flash_cache_start+0x28>
400d1589:	04dd      	mov.n	a13, a4
400d158b:	08a0c2        	movi	a12, 8
400d158e:	03b8      	l32i.n	a11, a3, 0
400d1590:	20a220        	or	a10, a2, a2
400d1593:	201110        	or	a1, a1, a1
400d1596:	0a7ee5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1599:	aa0c      	movi.n	a10, 10
400d159b:	201110        	or	a1, a1, a1
400d159e:	b7ade5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d15a1:	34c722        	addi	a2, a7, 52
400d15a4:	02ad      	mov.n	a10, a2
400d15a6:	201110        	or	a1, a1, a1
400d15a9:	00cde5        	call8	400d2288 <std::vector<double, std::allocator<double> >::~vector()>
}
400d15ac:	000946        	j	400d15d5 <void testDiv<double>(char const*)+0x181>
400d15af:	13c732        	addi	a3, a7, 19
400d15b2:	03ad      	mov.n	a10, a3
400d15b4:	201110        	or	a1, a1, a1
400d15b7:	00c6e5        	call8	400d2224 <std::allocator<double>::~allocator()>
400d15ba:	02ad      	mov.n	a10, a2
400d15bc:	201110        	or	a1, a1, a1
400d15bf:	032f65        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d15c2:	34c732        	addi	a3, a7, 52
400d15c5:	03ad      	mov.n	a10, a3
400d15c7:	201110        	or	a1, a1, a1
400d15ca:	00cbe5        	call8	400d2288 <std::vector<double, std::allocator<double> >::~vector()>
400d15cd:	02ad      	mov.n	a10, a2
400d15cf:	201110        	or	a1, a1, a1
400d15d2:	032e25        	call8	400d48b4 <_Unwind_Resume>
}
400d15d5:	f01d      	retw.n
	...

400d15d8 <void testMult<unsigned char>(char const*)>:
static void testMult(const char *name)
400d15d8:	00c136        	entry	a1, 96
400d15db:	017d      	mov.n	a7, a1
400d15dd:	37cb      	addi.n	a3, a7, 12
400d15df:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d15e1:	2cc722        	addi	a2, a7, 44
400d15e4:	fa9531        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d15e7:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d15e9:	1ec722        	addi	a2, a7, 30
400d15ec:	02ad      	mov.n	a10, a2
400d15ee:	201110        	or	a1, a1, a1
400d15f1:	008e65        	call8	400d1ed8 <std::allocator<unsigned char>::allocator()>
400d15f4:	1ec742        	addi	a4, a7, 30
400d15f7:	fa9031        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d15fa:	34c722        	addi	a2, a7, 52
400d15fd:	04cd      	mov.n	a12, a4
400d15ff:	03bd      	mov.n	a11, a3
400d1601:	02ad      	mov.n	a10, a2
400d1603:	201110        	or	a1, a1, a1
400d1606:	008fa5        	call8	400d1f00 <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>
400d1609:	1ec722        	addi	a2, a7, 30
400d160c:	02ad      	mov.n	a10, a2
400d160e:	201110        	or	a1, a1, a1
400d1611:	008da5        	call8	400d1eec <std::allocator<unsigned char>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1614:	20c722        	addi	a2, a7, 32
400d1617:	030c      	movi.n	a3, 0
400d1619:	0239      	s32i.n	a3, a2, 0
400d161b:	20c722        	addi	a2, a7, 32
400d161e:	0228      	l32i.n	a2, a2, 0
400d1620:	fa8731        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1623:	2e3327        	bltu	a3, a2, 400d1655 <void testMult<unsigned char>(char const*)+0x7d>
        data[i] = esp_random();
400d1626:	20c732        	addi	a3, a7, 32
400d1629:	34c722        	addi	a2, a7, 52
400d162c:	03b8      	l32i.n	a11, a3, 0
400d162e:	02ad      	mov.n	a10, a2
400d1630:	201110        	or	a1, a1, a1
400d1633:	1a6c25        	call8	400ebcf4 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d1636:	0a2d      	mov.n	a2, a10
400d1638:	201110        	or	a1, a1, a1
400d163b:	af7f25        	call8	40080e2c <esp_random>
400d163e:	0a3d      	mov.n	a3, a10
400d1640:	743030        	extui	a3, a3, 0, 8
400d1643:	004232        	s8i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1646:	20c722        	addi	a2, a7, 32
400d1649:	20c732        	addi	a3, a7, 32
400d164c:	0338      	l32i.n	a3, a3, 0
400d164e:	331b      	addi.n	a3, a3, 1
400d1650:	0239      	s32i.n	a3, a2, 0
400d1652:	fff146        	j	400d161b <void testMult<unsigned char>(char const*)+0x43>
    const T div = esp_random();
400d1655:	201110        	or	a1, a1, a1
400d1658:	af7d25        	call8	40080e2c <esp_random>
400d165b:	203aa0        	or	a3, a10, a10
400d165e:	1fc722        	addi	a2, a7, 31
400d1661:	004232        	s8i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d1664:	201110        	or	a1, a1, a1
400d1667:	b6fd65        	call8	4008863c <xTaskGetTickCount>
400d166a:	0a3d      	mov.n	a3, a10
400d166c:	30c722        	addi	a2, a7, 48
400d166f:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1671:	24c722        	addi	a2, a7, 36
400d1674:	030c      	movi.n	a3, 0
400d1676:	0239      	s32i.n	a3, a2, 0
400d1678:	24c722        	addi	a2, a7, 36
400d167b:	0228      	l32i.n	a2, a2, 0
400d167d:	133c      	movi.n	a3, 49
400d167f:	552327        	blt	a3, a2, 400d16d8 <void testMult<unsigned char>(char const*)+0x100>
        for (size_t i = 0; i < size; ++i)
400d1682:	28c722        	addi	a2, a7, 40
400d1685:	030c      	movi.n	a3, 0
400d1687:	0239      	s32i.n	a3, a2, 0
400d1689:	28c722        	addi	a2, a7, 40
400d168c:	0228      	l32i.n	a2, a2, 0
400d168e:	fa6b31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1691:	333327        	bltu	a3, a2, 400d16c8 <void testMult<unsigned char>(char const*)+0xf0>
            data[i] *= div;
400d1694:	28c732        	addi	a3, a7, 40
400d1697:	34c722        	addi	a2, a7, 52
400d169a:	03b8      	l32i.n	a11, a3, 0
400d169c:	02ad      	mov.n	a10, a2
400d169e:	201110        	or	a1, a1, a1
400d16a1:	1a6525        	call8	400ebcf4 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d16a4:	0a2d      	mov.n	a2, a10
400d16a6:	000242        	l8ui	a4, a2, 0
400d16a9:	1fc732        	addi	a3, a7, 31
400d16ac:	000332        	l8ui	a3, a3, 0
400d16af:	c13430        	mul16u	a3, a4, a3
400d16b2:	743030        	extui	a3, a3, 0, 8
400d16b5:	004232        	s8i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d16b8:	28c722        	addi	a2, a7, 40
400d16bb:	28c732        	addi	a3, a7, 40
400d16be:	0338      	l32i.n	a3, a3, 0
400d16c0:	331b      	addi.n	a3, a3, 1
400d16c2:	0239      	s32i.n	a3, a2, 0
400d16c4:	fff046        	j	400d1689 <void testMult<unsigned char>(char const*)+0xb1>
400d16c7:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d16ca:	c73224        	lsi	f2, a2, 0x31c
400d16cd:	033824        	lsi	f2, a8, 12
400d16d0:	331b      	addi.n	a3, a3, 1
400d16d2:	0239      	s32i.n	a3, a2, 0
400d16d4:	ffe806        	j	400d1678 <void testMult<unsigned char>(char const*)+0xa0>
400d16d7:	111000        	slli	a1, a0, 16
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d16da:	f62520        	lsi	f2, a5, 0x3d8
400d16dd:	0a3db6        	bltui	a13, 3, 400d16eb <void testMult<unsigned char>(char const*)+0x113>
400d16e0:	30c722        	addi	a2, a7, 48
400d16e3:	0228      	l32i.n	a2, a2, 0
400d16e5:	c04320        	sub	a4, a3, a2
400d16e8:	37cb      	addi.n	a3, a7, 12
400d16ea:	fa5a21        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d16ed:	04dd      	mov.n	a13, a4
400d16ef:	01a0c2        	movi	a12, 1
400d16f2:	03b8      	l32i.n	a11, a3, 0
400d16f4:	20a220        	or	a10, a2, a2
400d16f7:	201110        	or	a1, a1, a1
400d16fa:	0a68a5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d16fd:	aa0c      	movi.n	a10, 10
400d16ff:	201110        	or	a1, a1, a1
400d1702:	b797a5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1705:	34c722        	addi	a2, a7, 52
400d1708:	02ad      	mov.n	a10, a2
400d170a:	201110        	or	a1, a1, a1
400d170d:	008425        	call8	400d1f50 <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
}
400d1710:	000946        	j	400d1739 <void testMult<unsigned char>(char const*)+0x161>
400d1713:	1ec732        	addi	a3, a7, 30
400d1716:	03ad      	mov.n	a10, a3
400d1718:	201110        	or	a1, a1, a1
400d171b:	007d25        	call8	400d1eec <std::allocator<unsigned char>::~allocator()>
400d171e:	02ad      	mov.n	a10, a2
400d1720:	201110        	or	a1, a1, a1
400d1723:	031925        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d1726:	34c732        	addi	a3, a7, 52
400d1729:	03ad      	mov.n	a10, a3
400d172b:	201110        	or	a1, a1, a1
400d172e:	008225        	call8	400d1f50 <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
400d1731:	02ad      	mov.n	a10, a2
400d1733:	201110        	or	a1, a1, a1
400d1736:	0317e5        	call8	400d48b4 <_Unwind_Resume>
}
400d1739:	f01d      	retw.n
	...

400d173c <void testMult<unsigned short>(char const*)>:
static void testMult(const char *name)
400d173c:	00c136        	entry	a1, 96
400d173f:	017d      	mov.n	a7, a1
400d1741:	37cb      	addi.n	a3, a7, 12
400d1743:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1745:	2cc722        	addi	a2, a7, 44
400d1748:	fa3c31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d174b:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d174d:	1dc722        	addi	a2, a7, 29
400d1750:	02ad      	mov.n	a10, a2
400d1752:	201110        	or	a1, a1, a1
400d1755:	008325        	call8	400d1f88 <std::allocator<unsigned short>::allocator()>
400d1758:	1dc742        	addi	a4, a7, 29
400d175b:	fa3731        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d175e:	34c722        	addi	a2, a7, 52
400d1761:	04cd      	mov.n	a12, a4
400d1763:	03bd      	mov.n	a11, a3
400d1765:	02ad      	mov.n	a10, a2
400d1767:	201110        	or	a1, a1, a1
400d176a:	008465        	call8	400d1fb0 <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>
400d176d:	1dc722        	addi	a2, a7, 29
400d1770:	02ad      	mov.n	a10, a2
400d1772:	201110        	or	a1, a1, a1
400d1775:	008265        	call8	400d1f9c <std::allocator<unsigned short>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1778:	20c722        	addi	a2, a7, 32
400d177b:	030c      	movi.n	a3, 0
400d177d:	0239      	s32i.n	a3, a2, 0
400d177f:	20c722        	addi	a2, a7, 32
400d1782:	0228      	l32i.n	a2, a2, 0
400d1784:	fa2e31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1787:	2e3327        	bltu	a3, a2, 400d17b9 <void testMult<unsigned short>(char const*)+0x7d>
        data[i] = esp_random();
400d178a:	20c732        	addi	a3, a7, 32
400d178d:	34c722        	addi	a2, a7, 52
400d1790:	03b8      	l32i.n	a11, a3, 0
400d1792:	02ad      	mov.n	a10, a2
400d1794:	201110        	or	a1, a1, a1
400d1797:	1a57a5        	call8	400ebd10 <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d179a:	0a2d      	mov.n	a2, a10
400d179c:	201110        	or	a1, a1, a1
400d179f:	af68e5        	call8	40080e2c <esp_random>
400d17a2:	0a3d      	mov.n	a3, a10
400d17a4:	f43030        	extui	a3, a3, 0, 16
400d17a7:	005232        	s16i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d17aa:	20c722        	addi	a2, a7, 32
400d17ad:	20c732        	addi	a3, a7, 32
400d17b0:	0338      	l32i.n	a3, a3, 0
400d17b2:	331b      	addi.n	a3, a3, 1
400d17b4:	0239      	s32i.n	a3, a2, 0
400d17b6:	fff146        	j	400d177f <void testMult<unsigned short>(char const*)+0x43>
    const T div = esp_random();
400d17b9:	201110        	or	a1, a1, a1
400d17bc:	af66e5        	call8	40080e2c <esp_random>
400d17bf:	203aa0        	or	a3, a10, a10
400d17c2:	1ec722        	addi	a2, a7, 30
400d17c5:	005232        	s16i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d17c8:	201110        	or	a1, a1, a1
400d17cb:	b6e725        	call8	4008863c <xTaskGetTickCount>
400d17ce:	0a3d      	mov.n	a3, a10
400d17d0:	30c722        	addi	a2, a7, 48
400d17d3:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d17d5:	24c722        	addi	a2, a7, 36
400d17d8:	030c      	movi.n	a3, 0
400d17da:	0239      	s32i.n	a3, a2, 0
400d17dc:	24c722        	addi	a2, a7, 36
400d17df:	0228      	l32i.n	a2, a2, 0
400d17e1:	133c      	movi.n	a3, 49
400d17e3:	552327        	blt	a3, a2, 400d183c <void testMult<unsigned short>(char const*)+0x100>
        for (size_t i = 0; i < size; ++i)
400d17e6:	28c722        	addi	a2, a7, 40
400d17e9:	030c      	movi.n	a3, 0
400d17eb:	0239      	s32i.n	a3, a2, 0
400d17ed:	28c722        	addi	a2, a7, 40
400d17f0:	0228      	l32i.n	a2, a2, 0
400d17f2:	fa1231        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d17f5:	323327        	bltu	a3, a2, 400d182b <void testMult<unsigned short>(char const*)+0xef>
            data[i] *= div;
400d17f8:	28c732        	addi	a3, a7, 40
400d17fb:	34c722        	addi	a2, a7, 52
400d17fe:	03b8      	l32i.n	a11, a3, 0
400d1800:	02ad      	mov.n	a10, a2
400d1802:	201110        	or	a1, a1, a1
400d1805:	1a50a5        	call8	400ebd10 <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d1808:	0a2d      	mov.n	a2, a10
400d180a:	001232        	l16ui	a3, a2, 0
400d180d:	1ec742        	addi	a4, a7, 30
400d1810:	001442        	l16ui	a4, a4, 0
400d1813:	c13430        	mul16u	a3, a4, a3
400d1816:	f43030        	extui	a3, a3, 0, 16
400d1819:	005232        	s16i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d181c:	28c722        	addi	a2, a7, 40
400d181f:	28c732        	addi	a3, a7, 40
400d1822:	0338      	l32i.n	a3, a3, 0
400d1824:	331b      	addi.n	a3, a3, 1
400d1826:	0239      	s32i.n	a3, a2, 0
400d1828:	fff046        	j	400d17ed <void testMult<unsigned short>(char const*)+0xb1>
    for (int x = 0; x < 50; ++x)
400d182b:	24c722        	addi	a2, a7, 36
400d182e:	24c732        	addi	a3, a7, 36
400d1831:	0338      	l32i.n	a3, a3, 0
400d1833:	331b      	addi.n	a3, a3, 1
400d1835:	0239      	s32i.n	a3, a2, 0
400d1837:	ffe846        	j	400d17dc <void testMult<unsigned short>(char const*)+0xa0>
400d183a:	100000        	and	a0, a0, a0
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d183d:	e52011        	l32r	a1, 400cacc0 <_rtc_text_end+0xacc0>
400d1840:	df          	.byte 0xdf
400d1841:	0a3db6        	bltui	a13, 3, 400d184f <void testMult<unsigned short>(char const*)+0x113>
400d1844:	30c722        	addi	a2, a7, 48
400d1847:	0228      	l32i.n	a2, a2, 0
400d1849:	c04320        	sub	a4, a3, a2
400d184c:	37cb      	addi.n	a3, a7, 12
400d184e:	fa0121        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d1851:	04dd      	mov.n	a13, a4
400d1853:	02a0c2        	movi	a12, 2
400d1856:	03b8      	l32i.n	a11, a3, 0
400d1858:	20a220        	or	a10, a2, a2
400d185b:	201110        	or	a1, a1, a1
400d185e:	0a5265        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1861:	aa0c      	movi.n	a10, 10
400d1863:	201110        	or	a1, a1, a1
400d1866:	b78165        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1869:	34c722        	addi	a2, a7, 52
400d186c:	02ad      	mov.n	a10, a2
400d186e:	201110        	or	a1, a1, a1
400d1871:	0078e5        	call8	400d2000 <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
}
400d1874:	000946        	j	400d189d <void testMult<unsigned short>(char const*)+0x161>
400d1877:	1dc732        	addi	a3, a7, 29
400d187a:	03ad      	mov.n	a10, a3
400d187c:	201110        	or	a1, a1, a1
400d187f:	0071e5        	call8	400d1f9c <std::allocator<unsigned short>::~allocator()>
400d1882:	02ad      	mov.n	a10, a2
400d1884:	201110        	or	a1, a1, a1
400d1887:	0302e5        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d188a:	34c732        	addi	a3, a7, 52
400d188d:	03ad      	mov.n	a10, a3
400d188f:	201110        	or	a1, a1, a1
400d1892:	0076e5        	call8	400d2000 <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
400d1895:	02ad      	mov.n	a10, a2
400d1897:	201110        	or	a1, a1, a1
400d189a:	0301a5        	call8	400d48b4 <_Unwind_Resume>
}
400d189d:	f01d      	retw.n
	...

400d18a0 <void testMult<unsigned int>(char const*)>:
static void testMult(const char *name)
400d18a0:	00c136        	entry	a1, 96
400d18a3:	017d      	mov.n	a7, a1
400d18a5:	37cb      	addi.n	a3, a7, 12
400d18a7:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d18a9:	28c722        	addi	a2, a7, 40
400d18ac:	f9e331        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d18af:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d18b1:	1bc722        	addi	a2, a7, 27
400d18b4:	02ad      	mov.n	a10, a2
400d18b6:	201110        	or	a1, a1, a1
400d18b9:	0077e5        	call8	400d2038 <std::allocator<unsigned int>::allocator()>
400d18bc:	1bc742        	addi	a4, a7, 27
400d18bf:	f9de31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d18c2:	34c722        	addi	a2, a7, 52
400d18c5:	04cd      	mov.n	a12, a4
400d18c7:	03bd      	mov.n	a11, a3
400d18c9:	02ad      	mov.n	a10, a2
400d18cb:	201110        	or	a1, a1, a1
400d18ce:	007925        	call8	400d2060 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>
400d18d1:	1bc722        	addi	a2, a7, 27
400d18d4:	02ad      	mov.n	a10, a2
400d18d6:	201110        	or	a1, a1, a1
400d18d9:	007725        	call8	400d204c <std::allocator<unsigned int>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d18dc:	1cc722        	addi	a2, a7, 28
400d18df:	030c      	movi.n	a3, 0
400d18e1:	0239      	s32i.n	a3, a2, 0
400d18e3:	1cc722        	addi	a2, a7, 28
400d18e6:	0228      	l32i.n	a2, a2, 0
400d18e8:	f9d531        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d18eb:	2a3327        	bltu	a3, a2, 400d1919 <void testMult<unsigned int>(char const*)+0x79>
        data[i] = esp_random();
400d18ee:	1cc732        	addi	a3, a7, 28
400d18f1:	34c722        	addi	a2, a7, 52
400d18f4:	03b8      	l32i.n	a11, a3, 0
400d18f6:	02ad      	mov.n	a10, a2
400d18f8:	201110        	or	a1, a1, a1
400d18fb:	1a4365        	call8	400ebd30 <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d18fe:	0a2d      	mov.n	a2, a10
400d1900:	201110        	or	a1, a1, a1
400d1903:	af52a5        	call8	40080e2c <esp_random>
400d1906:	0a3d      	mov.n	a3, a10
400d1908:	0239      	s32i.n	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d190a:	1cc722        	addi	a2, a7, 28
400d190d:	1cc732        	addi	a3, a7, 28
400d1910:	0338      	l32i.n	a3, a3, 0
400d1912:	331b      	addi.n	a3, a3, 1
400d1914:	0239      	s32i.n	a3, a2, 0
400d1916:	fff246        	j	400d18e3 <void testMult<unsigned int>(char const*)+0x43>
    const T div = esp_random();
400d1919:	201110        	or	a1, a1, a1
400d191c:	af50e5        	call8	40080e2c <esp_random>
400d191f:	0a3d      	mov.n	a3, a10
400d1921:	2cc722        	addi	a2, a7, 44
400d1924:	0239      	s32i.n	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d1926:	201110        	or	a1, a1, a1
400d1929:	b6d125        	call8	4008863c <xTaskGetTickCount>
400d192c:	0a3d      	mov.n	a3, a10
400d192e:	30c722        	addi	a2, a7, 48
400d1931:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1933:	20c722        	addi	a2, a7, 32
400d1936:	030c      	movi.n	a3, 0
400d1938:	0239      	s32i.n	a3, a2, 0
400d193a:	20c722        	addi	a2, a7, 32
400d193d:	0228      	l32i.n	a2, a2, 0
400d193f:	133c      	movi.n	a3, 49
400d1941:	4f2327        	blt	a3, a2, 400d1994 <void testMult<unsigned int>(char const*)+0xf4>
        for (size_t i = 0; i < size; ++i)
400d1944:	24c722        	addi	a2, a7, 36
400d1947:	030c      	movi.n	a3, 0
400d1949:	0239      	s32i.n	a3, a2, 0
400d194b:	24c722        	addi	a2, a7, 36
400d194e:	0228      	l32i.n	a2, a2, 0
400d1950:	f9bb31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1953:	2d3327        	bltu	a3, a2, 400d1984 <void testMult<unsigned int>(char const*)+0xe4>
            data[i] *= div;
400d1956:	24c732        	addi	a3, a7, 36
400d1959:	34c722        	addi	a2, a7, 52
400d195c:	03b8      	l32i.n	a11, a3, 0
400d195e:	02ad      	mov.n	a10, a2
400d1960:	201110        	or	a1, a1, a1
400d1963:	1a3ce5        	call8	400ebd30 <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d1966:	0a2d      	mov.n	a2, a10
400d1968:	0248      	l32i.n	a4, a2, 0
400d196a:	2cc732        	addi	a3, a7, 44
400d196d:	0338      	l32i.n	a3, a3, 0
400d196f:	823430        	mull	a3, a4, a3
400d1972:	0239      	s32i.n	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1974:	24c722        	addi	a2, a7, 36
400d1977:	24c732        	addi	a3, a7, 36
400d197a:	0338      	l32i.n	a3, a3, 0
400d197c:	331b      	addi.n	a3, a3, 1
400d197e:	0239      	s32i.n	a3, a2, 0
400d1980:	fff1c6        	j	400d194b <void testMult<unsigned int>(char const*)+0xab>
400d1983:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d1986:	c73220        	lsi	f2, a2, 0x31c
400d1989:	033820        	lsi	f2, a8, 12
400d198c:	331b      	addi.n	a3, a3, 1
400d198e:	0239      	s32i.n	a3, a2, 0
400d1990:	ffe986        	j	400d193a <void testMult<unsigned int>(char const*)+0x9a>
400d1993:	111000        	slli	a1, a0, 16
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1996:	ca6520        	float.s	f6, a5, 2
400d1999:	0a3db6        	bltui	a13, 3, 400d19a7 <void testMult<unsigned int>(char const*)+0x107>
400d199c:	30c722        	addi	a2, a7, 48
400d199f:	0228      	l32i.n	a2, a2, 0
400d19a1:	c04320        	sub	a4, a3, a2
400d19a4:	37cb      	addi.n	a3, a7, 12
400d19a6:	f9ab21        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d19a9:	04dd      	mov.n	a13, a4
400d19ab:	04a0c2        	movi	a12, 4
400d19ae:	03b8      	l32i.n	a11, a3, 0
400d19b0:	20a220        	or	a10, a2, a2
400d19b3:	201110        	or	a1, a1, a1
400d19b6:	0a3ce5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d19b9:	aa0c      	movi.n	a10, 10
400d19bb:	201110        	or	a1, a1, a1
400d19be:	b76be5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d19c1:	34c722        	addi	a2, a7, 52
400d19c4:	02ad      	mov.n	a10, a2
400d19c6:	201110        	or	a1, a1, a1
400d19c9:	ff34e5        	call8	400d0d18 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
}
400d19cc:	000946        	j	400d19f5 <void testMult<unsigned int>(char const*)+0x155>
400d19cf:	1bc732        	addi	a3, a7, 27
400d19d2:	03ad      	mov.n	a10, a3
400d19d4:	201110        	or	a1, a1, a1
400d19d7:	006765        	call8	400d204c <std::allocator<unsigned int>::~allocator()>
400d19da:	02ad      	mov.n	a10, a2
400d19dc:	201110        	or	a1, a1, a1
400d19df:	02ed65        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d19e2:	34c732        	addi	a3, a7, 52
400d19e5:	03ad      	mov.n	a10, a3
400d19e7:	201110        	or	a1, a1, a1
400d19ea:	ff32e5        	call8	400d0d18 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
400d19ed:	02ad      	mov.n	a10, a2
400d19ef:	201110        	or	a1, a1, a1
400d19f2:	02ec25        	call8	400d48b4 <_Unwind_Resume>
}
400d19f5:	f01d      	retw.n
	...

400d19f8 <void testMult<unsigned long long>(char const*)>:
static void testMult(const char *name)
400d19f8:	00c136        	entry	a1, 96
400d19fb:	017d      	mov.n	a7, a1
400d19fd:	37cb      	addi.n	a3, a7, 12
400d19ff:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1a01:	20c722        	addi	a2, a7, 32
400d1a04:	f98d31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1a07:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1a09:	13c722        	addi	a2, a7, 19
400d1a0c:	02ad      	mov.n	a10, a2
400d1a0e:	201110        	or	a1, a1, a1
400d1a11:	0069e5        	call8	400d20b0 <std::allocator<unsigned long long>::allocator()>
400d1a14:	13c762        	addi	a6, a7, 19
400d1a17:	f98831        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1a1a:	34c722        	addi	a2, a7, 52
400d1a1d:	06cd      	mov.n	a12, a6
400d1a1f:	03bd      	mov.n	a11, a3
400d1a21:	02ad      	mov.n	a10, a2
400d1a23:	201110        	or	a1, a1, a1
400d1a26:	006b25        	call8	400d20d8 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>
400d1a29:	13c722        	addi	a2, a7, 19
400d1a2c:	02ad      	mov.n	a10, a2
400d1a2e:	201110        	or	a1, a1, a1
400d1a31:	006925        	call8	400d20c4 <std::allocator<unsigned long long>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1a34:	14c722        	addi	a2, a7, 20
400d1a37:	030c      	movi.n	a3, 0
400d1a39:	0239      	s32i.n	a3, a2, 0
400d1a3b:	14c722        	addi	a2, a7, 20
400d1a3e:	0228      	l32i.n	a2, a2, 0
400d1a40:	f97f31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1a43:	363327        	bltu	a3, a2, 400d1a7d <void testMult<unsigned long long>(char const*)+0x85>
        data[i] = esp_random();
400d1a46:	14c732        	addi	a3, a7, 20
400d1a49:	34c722        	addi	a2, a7, 52
400d1a4c:	03b8      	l32i.n	a11, a3, 0
400d1a4e:	02ad      	mov.n	a10, a2
400d1a50:	201110        	or	a1, a1, a1
400d1a53:	1a2fe5        	call8	400ebd50 <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1a56:	0a2d      	mov.n	a2, a10
400d1a58:	201110        	or	a1, a1, a1
400d1a5b:	af3d25        	call8	40080e2c <esp_random>
400d1a5e:	0a3d      	mov.n	a3, a10
400d1a60:	0739      	s32i.n	a3, a7, 0
400d1a62:	080c      	movi.n	a8, 0
400d1a64:	1789      	s32i.n	a8, a7, 4
400d1a66:	0788      	l32i.n	a8, a7, 0
400d1a68:	1798      	l32i.n	a9, a7, 4
400d1a6a:	0289      	s32i.n	a8, a2, 0
400d1a6c:	1299      	s32i.n	a9, a2, 4
    for (size_t i = 0; i < size; ++i)
400d1a6e:	14c722        	addi	a2, a7, 20
400d1a71:	14c732        	addi	a3, a7, 20
400d1a74:	0338      	l32i.n	a3, a3, 0
400d1a76:	331b      	addi.n	a3, a3, 1
400d1a78:	0239      	s32i.n	a3, a2, 0
400d1a7a:	ffef46        	j	400d1a3b <void testMult<unsigned long long>(char const*)+0x43>
    const T div = esp_random();
400d1a7d:	201110        	or	a1, a1, a1
400d1a80:	af3aa5        	call8	40080e2c <esp_random>
400d1a83:	0a3d      	mov.n	a3, a10
400d1a85:	28c722        	addi	a2, a7, 40
400d1a88:	0239      	s32i.n	a3, a2, 0
400d1a8a:	030c      	movi.n	a3, 0
400d1a8c:	1239      	s32i.n	a3, a2, 4
    const auto start = xTaskGetTickCount();
400d1a8e:	201110        	or	a1, a1, a1
400d1a91:	b6baa5        	call8	4008863c <xTaskGetTickCount>
400d1a94:	0a3d      	mov.n	a3, a10
400d1a96:	24c722        	addi	a2, a7, 36
400d1a99:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1a9b:	18c722        	addi	a2, a7, 24
400d1a9e:	030c      	movi.n	a3, 0
400d1aa0:	0239      	s32i.n	a3, a2, 0
400d1aa2:	18c722        	addi	a2, a7, 24
400d1aa5:	0228      	l32i.n	a2, a2, 0
400d1aa7:	133c      	movi.n	a3, 49
400d1aa9:	662327        	blt	a3, a2, 400d1b13 <void testMult<unsigned long long>(char const*)+0x11b>
        for (size_t i = 0; i < size; ++i)
400d1aac:	1cc722        	addi	a2, a7, 28
400d1aaf:	030c      	movi.n	a3, 0
400d1ab1:	0239      	s32i.n	a3, a2, 0
400d1ab3:	1cc722        	addi	a2, a7, 28
400d1ab6:	0228      	l32i.n	a2, a2, 0
400d1ab8:	f96131        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1abb:	453327        	bltu	a3, a2, 400d1b04 <void testMult<unsigned long long>(char const*)+0x10c>
            data[i] *= div;
400d1abe:	1cc732        	addi	a3, a7, 28
400d1ac1:	34c722        	addi	a2, a7, 52
400d1ac4:	03b8      	l32i.n	a11, a3, 0
400d1ac6:	02ad      	mov.n	a10, a2
400d1ac8:	201110        	or	a1, a1, a1
400d1acb:	1a2865        	call8	400ebd50 <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1ace:	0a8d      	mov.n	a8, a10
400d1ad0:	0828      	l32i.n	a2, a8, 0
400d1ad2:	1838      	l32i.n	a3, a8, 4
400d1ad4:	28c762        	addi	a6, a7, 40
400d1ad7:	0698      	l32i.n	a9, a6, 0
400d1ad9:	82a930        	mull	a10, a9, a3
400d1adc:	1698      	l32i.n	a9, a6, 4
400d1ade:	829920        	mull	a9, a9, a2
400d1ae1:	9a9a      	add.n	a9, a10, a9
400d1ae3:	0668      	l32i.n	a6, a6, 0
400d1ae5:	82a620        	mull	a10, a6, a2
400d1ae8:	a25620        	muluh	a5, a6, a2
400d1aeb:	0a4d      	mov.n	a4, a10
400d1aed:	295a      	add.n	a2, a9, a5
400d1aef:	025d      	mov.n	a5, a2
400d1af1:	0849      	s32i.n	a4, a8, 0
400d1af3:	1859      	s32i.n	a5, a8, 4
        for (size_t i = 0; i < size; ++i)
400d1af5:	1cc722        	addi	a2, a7, 28
400d1af8:	1cc732        	addi	a3, a7, 28
400d1afb:	0338      	l32i.n	a3, a3, 0
400d1afd:	331b      	addi.n	a3, a3, 1
400d1aff:	0239      	s32i.n	a3, a2, 0
400d1b01:	ffeb86        	j	400d1ab3 <void testMult<unsigned long long>(char const*)+0xbb>
    for (int x = 0; x < 50; ++x)
400d1b04:	18c722        	addi	a2, a7, 24
400d1b07:	18c732        	addi	a3, a7, 24
400d1b0a:	0338      	l32i.n	a3, a3, 0
400d1b0c:	331b      	addi.n	a3, a3, 1
400d1b0e:	0239      	s32i.n	a3, a2, 0
400d1b10:	ffe386        	j	400d1aa2 <void testMult<unsigned long long>(char const*)+0xaa>
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1b13:	201110        	or	a1, a1, a1
400d1b16:	b6b265        	call8	4008863c <xTaskGetTickCount>
400d1b19:	0a3d      	mov.n	a3, a10
400d1b1b:	24c722        	addi	a2, a7, 36
400d1b1e:	0228      	l32i.n	a2, a2, 0
400d1b20:	c04320        	sub	a4, a3, a2
400d1b23:	37cb      	addi.n	a3, a7, 12
400d1b25:	f94b21        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d1b28:	04dd      	mov.n	a13, a4
400d1b2a:	8c0c      	movi.n	a12, 8
400d1b2c:	03b8      	l32i.n	a11, a3, 0
400d1b2e:	02ad      	mov.n	a10, a2
400d1b30:	201110        	or	a1, a1, a1
400d1b33:	0a2525        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1b36:	aa0c      	movi.n	a10, 10
400d1b38:	201110        	or	a1, a1, a1
400d1b3b:	b75425        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1b3e:	34c722        	addi	a2, a7, 52
400d1b41:	02ad      	mov.n	a10, a2
400d1b43:	201110        	or	a1, a1, a1
400d1b46:	005e25        	call8	400d2128 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
}
400d1b49:	0009c6        	j	400d1b74 <void testMult<unsigned long long>(char const*)+0x17c>
400d1b4c:	320000        	orbc	b0, b0, b0
400d1b4f:	ad13c7        	beq	a3, a12, 400d1b00 <void testMult<unsigned long long>(char const*)+0x108>
400d1b52:	111003        	lsi	f0, a0, 68
400d1b55:	56e520        	lsi	f2, a5, 0x158
400d1b58:	02ad00        	andb	b10, b13, b0
400d1b5b:	201110        	or	a1, a1, a1
400d1b5e:	02d565        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d1b61:	34c732        	addi	a3, a7, 52
400d1b64:	03ad      	mov.n	a10, a3
400d1b66:	201110        	or	a1, a1, a1
400d1b69:	005be5        	call8	400d2128 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
400d1b6c:	02ad      	mov.n	a10, a2
400d1b6e:	201110        	or	a1, a1, a1
400d1b71:	02d425        	call8	400d48b4 <_Unwind_Resume>
}
400d1b74:	f01d      	retw.n
	...

400d1b78 <void testMult<float>(char const*)>:
static void testMult(const char *name)
400d1b78:	00c136        	entry	a1, 96
400d1b7b:	017d      	mov.n	a7, a1
400d1b7d:	37cb      	addi.n	a3, a7, 12
400d1b7f:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1b81:	28c722        	addi	a2, a7, 40
400d1b84:	f92d31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1b87:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1b89:	1bc722        	addi	a2, a7, 27
400d1b8c:	02ad      	mov.n	a10, a2
400d1b8e:	201110        	or	a1, a1, a1
400d1b91:	005ce5        	call8	400d2160 <std::allocator<float>::allocator()>
400d1b94:	1bc742        	addi	a4, a7, 27
400d1b97:	f92831        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1b9a:	34c722        	addi	a2, a7, 52
400d1b9d:	04cd      	mov.n	a12, a4
400d1b9f:	03bd      	mov.n	a11, a3
400d1ba1:	02ad      	mov.n	a10, a2
400d1ba3:	201110        	or	a1, a1, a1
400d1ba6:	005e25        	call8	400d2188 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>
400d1ba9:	1bc722        	addi	a2, a7, 27
400d1bac:	02ad      	mov.n	a10, a2
400d1bae:	201110        	or	a1, a1, a1
400d1bb1:	005c25        	call8	400d2174 <std::allocator<float>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1bb4:	1cc722        	addi	a2, a7, 28
400d1bb7:	030c      	movi.n	a3, 0
400d1bb9:	0239      	s32i.n	a3, a2, 0
400d1bbb:	1cc722        	addi	a2, a7, 28
400d1bbe:	0228      	l32i.n	a2, a2, 0
400d1bc0:	f91f31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1bc3:	2e3327        	bltu	a3, a2, 400d1bf5 <void testMult<float>(char const*)+0x7d>
        data[i] = esp_random();
400d1bc6:	1cc732        	addi	a3, a7, 28
400d1bc9:	34c722        	addi	a2, a7, 52
400d1bcc:	03b8      	l32i.n	a11, a3, 0
400d1bce:	02ad      	mov.n	a10, a2
400d1bd0:	201110        	or	a1, a1, a1
400d1bd3:	1a19e5        	call8	400ebd70 <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1bd6:	0a2d      	mov.n	a2, a10
400d1bd8:	201110        	or	a1, a1, a1
400d1bdb:	af2525        	call8	40080e2c <esp_random>
400d1bde:	0a3d      	mov.n	a3, a10
400d1be0:	da0300        	ufloat.s	f0, a3, 0
400d1be3:	004203        	ssi	f0, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1be6:	1cc722        	addi	a2, a7, 28
400d1be9:	1cc732        	addi	a3, a7, 28
400d1bec:	0338      	l32i.n	a3, a3, 0
400d1bee:	331b      	addi.n	a3, a3, 1
400d1bf0:	0239      	s32i.n	a3, a2, 0
400d1bf2:	fff146        	j	400d1bbb <void testMult<float>(char const*)+0x43>
    const T div = esp_random();
400d1bf5:	201110        	or	a1, a1, a1
400d1bf8:	af2325        	call8	40080e2c <esp_random>
400d1bfb:	0a3d      	mov.n	a3, a10
400d1bfd:	2cc722        	addi	a2, a7, 44
400d1c00:	da0300        	ufloat.s	f0, a3, 0
400d1c03:	004203        	ssi	f0, a2, 0
    const auto start = xTaskGetTickCount();
400d1c06:	201110        	or	a1, a1, a1
400d1c09:	b6a325        	call8	4008863c <xTaskGetTickCount>
400d1c0c:	0a3d      	mov.n	a3, a10
400d1c0e:	30c722        	addi	a2, a7, 48
400d1c11:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1c13:	20c722        	addi	a2, a7, 32
400d1c16:	030c      	movi.n	a3, 0
400d1c18:	0239      	s32i.n	a3, a2, 0
400d1c1a:	20c722        	addi	a2, a7, 32
400d1c1d:	0228      	l32i.n	a2, a2, 0
400d1c1f:	133c      	movi.n	a3, 49
400d1c21:	532327        	blt	a3, a2, 400d1c78 <void testMult<float>(char const*)+0x100>
        for (size_t i = 0; i < size; ++i)
400d1c24:	24c722        	addi	a2, a7, 36
400d1c27:	030c      	movi.n	a3, 0
400d1c29:	0239      	s32i.n	a3, a2, 0
400d1c2b:	24c722        	addi	a2, a7, 36
400d1c2e:	0228      	l32i.n	a2, a2, 0
400d1c30:	f90331        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1c33:	313327        	bltu	a3, a2, 400d1c68 <void testMult<float>(char const*)+0xf0>
            data[i] *= div;
400d1c36:	24c732        	addi	a3, a7, 36
400d1c39:	34c722        	addi	a2, a7, 52
400d1c3c:	03b8      	l32i.n	a11, a3, 0
400d1c3e:	02ad      	mov.n	a10, a2
400d1c40:	201110        	or	a1, a1, a1
400d1c43:	1a12e5        	call8	400ebd70 <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1c46:	0a2d      	mov.n	a2, a10
400d1c48:	000213        	lsi	f1, a2, 0
400d1c4b:	2cc732        	addi	a3, a7, 44
400d1c4e:	000303        	lsi	f0, a3, 0
400d1c51:	2a0100        	mul.s	f0, f1, f0
400d1c54:	004203        	ssi	f0, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1c57:	24c722        	addi	a2, a7, 36
400d1c5a:	24c732        	addi	a3, a7, 36
400d1c5d:	0338      	l32i.n	a3, a3, 0
400d1c5f:	331b      	addi.n	a3, a3, 1
400d1c61:	0239      	s32i.n	a3, a2, 0
400d1c63:	fff106        	j	400d1c2b <void testMult<float>(char const*)+0xb3>
400d1c66:	220000        	orb	b0, b0, b0
    for (int x = 0; x < 50; ++x)
400d1c69:	3220c7        	blt	a0, a12, 400d1c9f <void testMult<float>(char const*)+0x127>
400d1c6c:	3820c7        	blt	a0, a12, 400d1ca8 <void testMult<float>(char const*)+0x130>
400d1c6f:	331b03        	lsi	f0, a11, 204
400d1c72:	0239      	s32i.n	a3, a2, 0
400d1c74:	ffe886        	j	400d1c1a <void testMult<float>(char const*)+0xa2>
400d1c77:	111000        	slli	a1, a0, 16
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1c7a:	9c2520        	lsi	f2, a5, 0x270
400d1c7d:	0a3db6        	bltui	a13, 3, 400d1c8b <void testMult<float>(char const*)+0x113>
400d1c80:	30c722        	addi	a2, a7, 48
400d1c83:	0228      	l32i.n	a2, a2, 0
400d1c85:	c04320        	sub	a4, a3, a2
400d1c88:	37cb      	addi.n	a3, a7, 12
400d1c8a:	f8f221        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d1c8d:	04dd      	mov.n	a13, a4
400d1c8f:	04a0c2        	movi	a12, 4
400d1c92:	03b8      	l32i.n	a11, a3, 0
400d1c94:	20a220        	or	a10, a2, a2
400d1c97:	201110        	or	a1, a1, a1
400d1c9a:	0a0ea5        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1c9d:	aa0c      	movi.n	a10, 10
400d1c9f:	201110        	or	a1, a1, a1
400d1ca2:	b73da5        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1ca5:	34c722        	addi	a2, a7, 52
400d1ca8:	02ad      	mov.n	a10, a2
400d1caa:	201110        	or	a1, a1, a1
400d1cad:	0052a5        	call8	400d21d8 <std::vector<float, std::allocator<float> >::~vector()>
}
400d1cb0:	000946        	j	400d1cd9 <void testMult<float>(char const*)+0x161>
400d1cb3:	1bc732        	addi	a3, a7, 27
400d1cb6:	03ad      	mov.n	a10, a3
400d1cb8:	201110        	or	a1, a1, a1
400d1cbb:	004ba5        	call8	400d2174 <std::allocator<float>::~allocator()>
400d1cbe:	02ad      	mov.n	a10, a2
400d1cc0:	201110        	or	a1, a1, a1
400d1cc3:	02bf25        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d1cc6:	34c732        	addi	a3, a7, 52
400d1cc9:	03ad      	mov.n	a10, a3
400d1ccb:	201110        	or	a1, a1, a1
400d1cce:	0050a5        	call8	400d21d8 <std::vector<float, std::allocator<float> >::~vector()>
400d1cd1:	02ad      	mov.n	a10, a2
400d1cd3:	201110        	or	a1, a1, a1
400d1cd6:	02bde5        	call8	400d48b4 <_Unwind_Resume>
}
400d1cd9:	f01d      	retw.n
	...

400d1cdc <void testMult<double>(char const*)>:
static void testMult(const char *name)
400d1cdc:	00c136        	entry	a1, 96
400d1cdf:	017d      	mov.n	a7, a1
400d1ce1:	37cb      	addi.n	a3, a7, 12
400d1ce3:	0329      	s32i.n	a2, a3, 0
    const size_t size = 8000;
400d1ce5:	20c722        	addi	a2, a7, 32
400d1ce8:	f8d431        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1ceb:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1ced:	13c722        	addi	a2, a7, 19
400d1cf0:	02ad      	mov.n	a10, a2
400d1cf2:	201110        	or	a1, a1, a1
400d1cf5:	0051a5        	call8	400d2210 <std::allocator<double>::allocator()>
400d1cf8:	13c742        	addi	a4, a7, 19
400d1cfb:	f8cf31        	l32r	a3, 400d0038 <_flash_cache_start+0x20>
400d1cfe:	34c722        	addi	a2, a7, 52
400d1d01:	04cd      	mov.n	a12, a4
400d1d03:	03bd      	mov.n	a11, a3
400d1d05:	02ad      	mov.n	a10, a2
400d1d07:	201110        	or	a1, a1, a1
400d1d0a:	0052e5        	call8	400d2238 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>
400d1d0d:	13c722        	addi	a2, a7, 19
400d1d10:	02ad      	mov.n	a10, a2
400d1d12:	201110        	or	a1, a1, a1
400d1d15:	0050e5        	call8	400d2224 <std::allocator<double>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1d18:	14c722        	addi	a2, a7, 20
400d1d1b:	030c      	movi.n	a3, 0
400d1d1d:	0239      	s32i.n	a3, a2, 0
400d1d1f:	14c722        	addi	a2, a7, 20
400d1d22:	0228      	l32i.n	a2, a2, 0
400d1d24:	f8c631        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1d27:	3a3327        	bltu	a3, a2, 400d1d65 <void testMult<double>(char const*)+0x89>
        data[i] = esp_random();
400d1d2a:	14c732        	addi	a3, a7, 20
400d1d2d:	34c722        	addi	a2, a7, 52
400d1d30:	03b8      	l32i.n	a11, a3, 0
400d1d32:	02ad      	mov.n	a10, a2
400d1d34:	201110        	or	a1, a1, a1
400d1d37:	1a05a5        	call8	400ebd90 <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d1d3a:	0a4d      	mov.n	a4, a10
400d1d3c:	201110        	or	a1, a1, a1
400d1d3f:	af0ee5        	call8	40080e2c <esp_random>
400d1d42:	0a2d      	mov.n	a2, a10
400d1d44:	02ad      	mov.n	a10, a2
400d1d46:	f8c181        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1d49:	0008e0        	callx8	a8
400d1d4c:	0a2d      	mov.n	a2, a10
400d1d4e:	0b3d      	mov.n	a3, a11
400d1d50:	0429      	s32i.n	a2, a4, 0
400d1d52:	1439      	s32i.n	a3, a4, 4
    for (size_t i = 0; i < size; ++i)
400d1d54:	14c722        	addi	a2, a7, 20
400d1d57:	14c732        	addi	a3, a7, 20
400d1d5a:	0338      	l32i.n	a3, a3, 0
400d1d5c:	331b      	addi.n	a3, a3, 1
400d1d5e:	0239      	s32i.n	a3, a2, 0
400d1d60:	ffeec6        	j	400d1d1f <void testMult<double>(char const*)+0x43>
400d1d63:	100000        	and	a0, a0, a0
    const T div = esp_random();
400d1d66:	252011        	l32r	a1, 4009b1e8 <_iram_end+0xd694>
400d1d69:	af0c      	movi.n	a15, 10
400d1d6b:	0a2d      	mov.n	a2, a10
400d1d6d:	28c742        	addi	a4, a7, 40
400d1d70:	02ad      	mov.n	a10, a2
400d1d72:	f8b681        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1d75:	0008e0        	callx8	a8
400d1d78:	0a2d      	mov.n	a2, a10
400d1d7a:	0b3d      	mov.n	a3, a11
400d1d7c:	0429      	s32i.n	a2, a4, 0
400d1d7e:	1439      	s32i.n	a3, a4, 4
    const auto start = xTaskGetTickCount();
400d1d80:	201110        	or	a1, a1, a1
400d1d83:	b68ba5        	call8	4008863c <xTaskGetTickCount>
400d1d86:	0a3d      	mov.n	a3, a10
400d1d88:	24c722        	addi	a2, a7, 36
400d1d8b:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1d8d:	18c722        	addi	a2, a7, 24
400d1d90:	030c      	movi.n	a3, 0
400d1d92:	0239      	s32i.n	a3, a2, 0
400d1d94:	18c722        	addi	a2, a7, 24
400d1d97:	0228      	l32i.n	a2, a2, 0
400d1d99:	133c      	movi.n	a3, 49
400d1d9b:	612327        	blt	a3, a2, 400d1e00 <void testMult<double>(char const*)+0x124>
        for (size_t i = 0; i < size; ++i)
400d1d9e:	1cc722        	addi	a2, a7, 28
400d1da1:	030c      	movi.n	a3, 0
400d1da3:	0239      	s32i.n	a3, a2, 0
400d1da5:	1cc722        	addi	a2, a7, 28
400d1da8:	0228      	l32i.n	a2, a2, 0
400d1daa:	f8a431        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1dad:	3f3327        	bltu	a3, a2, 400d1df0 <void testMult<double>(char const*)+0x114>
            data[i] *= div;
400d1db0:	1cc732        	addi	a3, a7, 28
400d1db3:	34c722        	addi	a2, a7, 52
400d1db6:	03b8      	l32i.n	a11, a3, 0
400d1db8:	20a220        	or	a10, a2, a2
400d1dbb:	201110        	or	a1, a1, a1
400d1dbe:	19fd25        	call8	400ebd90 <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d1dc1:	0a4d      	mov.n	a4, a10
400d1dc3:	0428      	l32i.n	a2, a4, 0
400d1dc5:	1438      	l32i.n	a3, a4, 4
400d1dc7:	28c752        	addi	a5, a7, 40
400d1dca:	05c8      	l32i.n	a12, a5, 0
400d1dcc:	15d8      	l32i.n	a13, a5, 4
400d1dce:	02ad      	mov.n	a10, a2
400d1dd0:	03bd      	mov.n	a11, a3
400d1dd2:	f8a181        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400d1dd5:	0008e0        	callx8	a8
400d1dd8:	0a2d      	mov.n	a2, a10
400d1dda:	0b3d      	mov.n	a3, a11
400d1ddc:	0429      	s32i.n	a2, a4, 0
400d1dde:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d1de0:	1cc722        	addi	a2, a7, 28
400d1de3:	1cc732        	addi	a3, a7, 28
400d1de6:	0338      	l32i.n	a3, a3, 0
400d1de8:	331b      	addi.n	a3, a3, 1
400d1dea:	0239      	s32i.n	a3, a2, 0
400d1dec:	ffed46        	j	400d1da5 <void testMult<double>(char const*)+0xc9>
400d1def:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d1df2:	3218      	l32i.n	a1, a2, 12
400d1df4:	3818c7        	beq	a8, a12, 400d1e30 <void testMult<double>(char const*)+0x154>
400d1df7:	331b03        	lsi	f0, a11, 204
400d1dfa:	0239      	s32i.n	a3, a2, 0
400d1dfc:	ffe506        	j	400d1d94 <void testMult<double>(char const*)+0xb8>
400d1dff:	111000        	slli	a1, a0, 16
    printf("%8s (%d) multiply took %dms\n", name, sizeof(T), xTaskGetTickCount() - start);
400d1e02:	83a520        	moveqz	a10, a5, a2
400d1e05:	0a3db6        	bltui	a13, 3, 400d1e13 <void testMult<double>(char const*)+0x137>
400d1e08:	24c722        	addi	a2, a7, 36
400d1e0b:	0228      	l32i.n	a2, a2, 0
400d1e0d:	c04320        	sub	a4, a3, a2
400d1e10:	37cb      	addi.n	a3, a7, 12
400d1e12:	f89021        	l32r	a2, 400d0054 <_flash_cache_start+0x3c>
400d1e15:	04dd      	mov.n	a13, a4
400d1e17:	08a0c2        	movi	a12, 8
400d1e1a:	03b8      	l32i.n	a11, a3, 0
400d1e1c:	20a220        	or	a10, a2, a2
400d1e1f:	201110        	or	a1, a1, a1
400d1e22:	09f625        	call8	400dbd84 <printf>
    vTaskDelay(10);
400d1e25:	aa0c      	movi.n	a10, 10
400d1e27:	201110        	or	a1, a1, a1
400d1e2a:	b72525        	call8	4008907c <vTaskDelay>
    std::vector<T> data(size);
400d1e2d:	34c722        	addi	a2, a7, 52
400d1e30:	02ad      	mov.n	a10, a2
400d1e32:	201110        	or	a1, a1, a1
400d1e35:	004525        	call8	400d2288 <std::vector<double, std::allocator<double> >::~vector()>
}
400d1e38:	000946        	j	400d1e61 <void testMult<double>(char const*)+0x185>
400d1e3b:	13c732        	addi	a3, a7, 19
400d1e3e:	03ad      	mov.n	a10, a3
400d1e40:	201110        	or	a1, a1, a1
400d1e43:	003e25        	call8	400d2224 <std::allocator<double>::~allocator()>
400d1e46:	02ad      	mov.n	a10, a2
400d1e48:	201110        	or	a1, a1, a1
400d1e4b:	02a6a5        	call8	400d48b4 <_Unwind_Resume>
    std::vector<T> data(size);
400d1e4e:	34c732        	addi	a3, a7, 52
400d1e51:	03ad      	mov.n	a10, a3
400d1e53:	201110        	or	a1, a1, a1
400d1e56:	004325        	call8	400d2288 <std::vector<double, std::allocator<double> >::~vector()>
400d1e59:	02ad      	mov.n	a10, a2
400d1e5b:	201110        	or	a1, a1, a1
400d1e5e:	02a565        	call8	400d48b4 <_Unwind_Resume>
}
400d1e61:	f01d      	retw.n
	...

400d1e64 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d1e64:	006136        	entry	a1, 48
400d1e67:	017d      	mov.n	a7, a1
400d1e69:	37cb      	addi.n	a3, a7, 12
400d1e6b:	0329      	s32i.n	a2, a3, 0
400d1e6d:	27cb      	addi.n	a2, a7, 12
400d1e6f:	02a8      	l32i.n	a10, a2, 0
400d1e71:	001da5        	call8	400d204c <std::allocator<unsigned int>::~allocator()>
400d1e74:	f03d      	nop.n
400d1e76:	f01d      	retw.n

400d1e78 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d1e78:	006136        	entry	a1, 48
400d1e7b:	207110        	or	a7, a1, a1
400d1e7e:	0cc732        	addi	a3, a7, 12
400d1e81:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d1e83:	27cb      	addi.n	a2, a7, 12
400d1e85:	0228      	l32i.n	a2, a2, 0
400d1e87:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d1e89:	27cb      	addi.n	a2, a7, 12
400d1e8b:	0228      	l32i.n	a2, a2, 0
400d1e8d:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d1e8f:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d1e91:	27cb      	addi.n	a2, a7, 12
400d1e93:	0228      	l32i.n	a2, a2, 0
400d1e95:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d1e97:	c02420        	sub	a2, a4, a2
400d1e9a:	212220        	srai	a2, a2, 2
400d1e9d:	024d      	mov.n	a4, a2
400d1e9f:	27cb      	addi.n	a2, a7, 12
400d1ea1:	04cd      	mov.n	a12, a4
400d1ea3:	03bd      	mov.n	a11, a3
400d1ea5:	0022a2        	l32i	a10, a2, 0
400d1ea8:	004165        	call8	400d22c0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)>
		      - this->_M_impl._M_start); }
400d1eab:	27cb      	addi.n	a2, a7, 12
400d1ead:	0228      	l32i.n	a2, a2, 0
400d1eaf:	02ad      	mov.n	a10, a2
400d1eb1:	fffb25        	call8	400d1e64 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>
400d1eb4:	f03d      	nop.n
400d1eb6:	f01d      	retw.n

400d1eb8 <void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d1eb8:	006136        	entry	a1, 48
400d1ebb:	017d      	mov.n	a7, a1
400d1ebd:	57cb      	addi.n	a5, a7, 12
400d1ebf:	0529      	s32i.n	a2, a5, 0
400d1ec1:	278b      	addi.n	a2, a7, 8
400d1ec3:	0239      	s32i.n	a3, a2, 0
400d1ec5:	274b      	addi.n	a2, a7, 4
400d1ec7:	0249      	s32i.n	a4, a2, 0
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
400d1ec9:	378b      	addi.n	a3, a7, 8
400d1ecb:	27cb      	addi.n	a2, a7, 12
400d1ecd:	03b8      	l32i.n	a11, a3, 0
400d1ecf:	02a8      	l32i.n	a10, a2, 0
400d1ed1:	0041a5        	call8	400d22ec <void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)>
    }
400d1ed4:	f03d      	nop.n
400d1ed6:	f01d      	retw.n

400d1ed8 <std::allocator<unsigned char>::allocator()>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 2103. std::allocator propagate_on_container_move_assignment
      typedef true_type propagate_on_container_move_assignment;
#endif

      allocator() throw() { }
400d1ed8:	006136        	entry	a1, 48
400d1edb:	017d      	mov.n	a7, a1
400d1edd:	37cb      	addi.n	a3, a7, 12
400d1edf:	0329      	s32i.n	a2, a3, 0
400d1ee1:	27cb      	addi.n	a2, a7, 12
400d1ee3:	02a8      	l32i.n	a10, a2, 0
400d1ee5:	19eca5        	call8	400ebdb0 <__gnu_cxx::new_allocator<unsigned char>::new_allocator()>
400d1ee8:	f03d      	nop.n
400d1eea:	f01d      	retw.n

400d1eec <std::allocator<unsigned char>::~allocator()>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
400d1eec:	006136        	entry	a1, 48
400d1eef:	017d      	mov.n	a7, a1
400d1ef1:	37cb      	addi.n	a3, a7, 12
400d1ef3:	0329      	s32i.n	a2, a3, 0
400d1ef5:	27cb      	addi.n	a2, a7, 12
400d1ef7:	02a8      	l32i.n	a10, a2, 0
400d1ef9:	19ec65        	call8	400ebdc0 <__gnu_cxx::new_allocator<unsigned char>::~new_allocator()>
400d1efc:	f03d      	nop.n
400d1efe:	f01d      	retw.n

400d1f00 <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d1f00:	006136        	entry	a1, 48
400d1f03:	017d      	mov.n	a7, a1
400d1f05:	57cb      	addi.n	a5, a7, 12
400d1f07:	0529      	s32i.n	a2, a5, 0
400d1f09:	278b      	addi.n	a2, a7, 8
400d1f0b:	0239      	s32i.n	a3, a2, 0
400d1f0d:	274b      	addi.n	a2, a7, 4
400d1f0f:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d1f11:	27cb      	addi.n	a2, a7, 12
400d1f13:	0228      	l32i.n	a2, a2, 0
400d1f15:	474b      	addi.n	a4, a7, 4
400d1f17:	378b      	addi.n	a3, a7, 8
400d1f19:	04c8      	l32i.n	a12, a4, 0
400d1f1b:	03b8      	l32i.n	a11, a3, 0
400d1f1d:	20a220        	or	a10, a2, a2
400d1f20:	201110        	or	a1, a1, a1
400d1f23:	003fa5        	call8	400d231c <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)>
      { _M_default_initialize(__n); }
400d1f26:	378b      	addi.n	a3, a7, 8
400d1f28:	27cb      	addi.n	a2, a7, 12
400d1f2a:	03b8      	l32i.n	a11, a3, 0
400d1f2c:	02a8      	l32i.n	a10, a2, 0
400d1f2e:	201110        	or	a1, a1, a1
400d1f31:	004725        	call8	400d23a4 <std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_initialize(unsigned int)>
400d1f34:	000506        	j	400d1f4c <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)+0x4c>
400d1f37:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d1f3a:	0338      	l32i.n	a3, a3, 0
400d1f3c:	03ad      	mov.n	a10, a3
400d1f3e:	201110        	or	a1, a1, a1
400d1f41:	004265        	call8	400d2368 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>
400d1f44:	02ad      	mov.n	a10, a2
400d1f46:	201110        	or	a1, a1, a1
400d1f49:	0296a5        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d1f4c:	f01d      	retw.n
	...

400d1f50 <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d1f50:	006136        	entry	a1, 48
400d1f53:	207110        	or	a7, a1, a1
400d1f56:	37cb      	addi.n	a3, a7, 12
400d1f58:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d1f5a:	27cb      	addi.n	a2, a7, 12
400d1f5c:	0228      	l32i.n	a2, a2, 0
400d1f5e:	0228      	l32i.n	a2, a2, 0
400d1f60:	37cb      	addi.n	a3, a7, 12
400d1f62:	0338      	l32i.n	a3, a3, 0
400d1f64:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d1f66:	47cb      	addi.n	a4, a7, 12
400d1f68:	0448      	l32i.n	a4, a4, 0
400d1f6a:	20a440        	or	a10, a4, a4
400d1f6d:	19e625        	call8	400ebdd0 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>
400d1f70:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d1f72:	04cd      	mov.n	a12, a4
400d1f74:	03bd      	mov.n	a11, a3
400d1f76:	02ad      	mov.n	a10, a2
400d1f78:	004625        	call8	400d23dc <void std::_Destroy<unsigned char*, unsigned char>(unsigned char*, unsigned char*, std::allocator<unsigned char>&)>
		      _M_get_Tp_allocator()); }
400d1f7b:	27cb      	addi.n	a2, a7, 12
400d1f7d:	0228      	l32i.n	a2, a2, 0
400d1f7f:	02ad      	mov.n	a10, a2
400d1f81:	003e65        	call8	400d2368 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>
400d1f84:	f03d      	nop.n
400d1f86:	f01d      	retw.n

400d1f88 <std::allocator<unsigned short>::allocator()>:
      allocator() throw() { }
400d1f88:	006136        	entry	a1, 48
400d1f8b:	017d      	mov.n	a7, a1
400d1f8d:	37cb      	addi.n	a3, a7, 12
400d1f8f:	0329      	s32i.n	a2, a3, 0
400d1f91:	27cb      	addi.n	a2, a7, 12
400d1f93:	02a8      	l32i.n	a10, a2, 0
400d1f95:	19e4a5        	call8	400ebde0 <__gnu_cxx::new_allocator<unsigned short>::new_allocator()>
400d1f98:	f03d      	nop.n
400d1f9a:	f01d      	retw.n

400d1f9c <std::allocator<unsigned short>::~allocator()>:
      ~allocator() throw() { }
400d1f9c:	006136        	entry	a1, 48
400d1f9f:	017d      	mov.n	a7, a1
400d1fa1:	37cb      	addi.n	a3, a7, 12
400d1fa3:	0329      	s32i.n	a2, a3, 0
400d1fa5:	27cb      	addi.n	a2, a7, 12
400d1fa7:	02a8      	l32i.n	a10, a2, 0
400d1fa9:	19e465        	call8	400ebdf0 <__gnu_cxx::new_allocator<unsigned short>::~new_allocator()>
400d1fac:	f03d      	nop.n
400d1fae:	f01d      	retw.n

400d1fb0 <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d1fb0:	006136        	entry	a1, 48
400d1fb3:	017d      	mov.n	a7, a1
400d1fb5:	57cb      	addi.n	a5, a7, 12
400d1fb7:	0529      	s32i.n	a2, a5, 0
400d1fb9:	278b      	addi.n	a2, a7, 8
400d1fbb:	0239      	s32i.n	a3, a2, 0
400d1fbd:	274b      	addi.n	a2, a7, 4
400d1fbf:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d1fc1:	27cb      	addi.n	a2, a7, 12
400d1fc3:	0228      	l32i.n	a2, a2, 0
400d1fc5:	474b      	addi.n	a4, a7, 4
400d1fc7:	378b      	addi.n	a3, a7, 8
400d1fc9:	04c8      	l32i.n	a12, a4, 0
400d1fcb:	03b8      	l32i.n	a11, a3, 0
400d1fcd:	20a220        	or	a10, a2, a2
400d1fd0:	201110        	or	a1, a1, a1
400d1fd3:	0043e5        	call8	400d2410 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)>
      { _M_default_initialize(__n); }
400d1fd6:	378b      	addi.n	a3, a7, 8
400d1fd8:	27cb      	addi.n	a2, a7, 12
400d1fda:	03b8      	l32i.n	a11, a3, 0
400d1fdc:	02a8      	l32i.n	a10, a2, 0
400d1fde:	201110        	or	a1, a1, a1
400d1fe1:	004ba5        	call8	400d249c <std::vector<unsigned short, std::allocator<unsigned short> >::_M_default_initialize(unsigned int)>
400d1fe4:	000506        	j	400d1ffc <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)+0x4c>
400d1fe7:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d1fea:	0338      	l32i.n	a3, a3, 0
400d1fec:	03ad      	mov.n	a10, a3
400d1fee:	201110        	or	a1, a1, a1
400d1ff1:	0046a5        	call8	400d245c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>
400d1ff4:	02ad      	mov.n	a10, a2
400d1ff6:	201110        	or	a1, a1, a1
400d1ff9:	028ba5        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d1ffc:	f01d      	retw.n
	...

400d2000 <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d2000:	006136        	entry	a1, 48
400d2003:	207110        	or	a7, a1, a1
400d2006:	37cb      	addi.n	a3, a7, 12
400d2008:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d200a:	27cb      	addi.n	a2, a7, 12
400d200c:	0228      	l32i.n	a2, a2, 0
400d200e:	0228      	l32i.n	a2, a2, 0
400d2010:	37cb      	addi.n	a3, a7, 12
400d2012:	0338      	l32i.n	a3, a3, 0
400d2014:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d2016:	47cb      	addi.n	a4, a7, 12
400d2018:	0448      	l32i.n	a4, a4, 0
400d201a:	20a440        	or	a10, a4, a4
400d201d:	19de25        	call8	400ebe00 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>
400d2020:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2022:	04cd      	mov.n	a12, a4
400d2024:	03bd      	mov.n	a11, a3
400d2026:	02ad      	mov.n	a10, a2
400d2028:	004aa5        	call8	400d24d4 <void std::_Destroy<unsigned short*, unsigned short>(unsigned short*, unsigned short*, std::allocator<unsigned short>&)>
		      _M_get_Tp_allocator()); }
400d202b:	27cb      	addi.n	a2, a7, 12
400d202d:	0228      	l32i.n	a2, a2, 0
400d202f:	02ad      	mov.n	a10, a2
400d2031:	0042a5        	call8	400d245c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>
400d2034:	f03d      	nop.n
400d2036:	f01d      	retw.n

400d2038 <std::allocator<unsigned int>::allocator()>:
      allocator() throw() { }
400d2038:	006136        	entry	a1, 48
400d203b:	017d      	mov.n	a7, a1
400d203d:	37cb      	addi.n	a3, a7, 12
400d203f:	0329      	s32i.n	a2, a3, 0
400d2041:	27cb      	addi.n	a2, a7, 12
400d2043:	02a8      	l32i.n	a10, a2, 0
400d2045:	19dca5        	call8	400ebe10 <__gnu_cxx::new_allocator<unsigned int>::new_allocator()>
400d2048:	f03d      	nop.n
400d204a:	f01d      	retw.n

400d204c <std::allocator<unsigned int>::~allocator()>:
      ~allocator() throw() { }
400d204c:	006136        	entry	a1, 48
400d204f:	017d      	mov.n	a7, a1
400d2051:	37cb      	addi.n	a3, a7, 12
400d2053:	0329      	s32i.n	a2, a3, 0
400d2055:	27cb      	addi.n	a2, a7, 12
400d2057:	02a8      	l32i.n	a10, a2, 0
400d2059:	19dc65        	call8	400ebe20 <__gnu_cxx::new_allocator<unsigned int>::~new_allocator()>
400d205c:	f03d      	nop.n
400d205e:	f01d      	retw.n

400d2060 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d2060:	006136        	entry	a1, 48
400d2063:	017d      	mov.n	a7, a1
400d2065:	57cb      	addi.n	a5, a7, 12
400d2067:	0529      	s32i.n	a2, a5, 0
400d2069:	278b      	addi.n	a2, a7, 8
400d206b:	0239      	s32i.n	a3, a2, 0
400d206d:	274b      	addi.n	a2, a7, 4
400d206f:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d2071:	27cb      	addi.n	a2, a7, 12
400d2073:	0228      	l32i.n	a2, a2, 0
400d2075:	474b      	addi.n	a4, a7, 4
400d2077:	378b      	addi.n	a3, a7, 8
400d2079:	04c8      	l32i.n	a12, a4, 0
400d207b:	03b8      	l32i.n	a11, a3, 0
400d207d:	20a220        	or	a10, a2, a2
400d2080:	201110        	or	a1, a1, a1
400d2083:	004725        	call8	400d24f4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)>
      { _M_default_initialize(__n); }
400d2086:	378b      	addi.n	a3, a7, 8
400d2088:	27cb      	addi.n	a2, a7, 12
400d208a:	03b8      	l32i.n	a11, a3, 0
400d208c:	02a8      	l32i.n	a10, a2, 0
400d208e:	201110        	or	a1, a1, a1
400d2091:	004ae5        	call8	400d2540 <std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned int)>
400d2094:	000506        	j	400d20ac <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)+0x4c>
400d2097:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d209a:	0338      	l32i.n	a3, a3, 0
400d209c:	03ad      	mov.n	a10, a3
400d209e:	201110        	or	a1, a1, a1
400d20a1:	ffdd65        	call8	400d1e78 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>
400d20a4:	02ad      	mov.n	a10, a2
400d20a6:	201110        	or	a1, a1, a1
400d20a9:	0280a5        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d20ac:	f01d      	retw.n
	...

400d20b0 <std::allocator<unsigned long long>::allocator()>:
      allocator() throw() { }
400d20b0:	006136        	entry	a1, 48
400d20b3:	017d      	mov.n	a7, a1
400d20b5:	37cb      	addi.n	a3, a7, 12
400d20b7:	0329      	s32i.n	a2, a3, 0
400d20b9:	27cb      	addi.n	a2, a7, 12
400d20bb:	02a8      	l32i.n	a10, a2, 0
400d20bd:	19d725        	call8	400ebe30 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator()>
400d20c0:	f03d      	nop.n
400d20c2:	f01d      	retw.n

400d20c4 <std::allocator<unsigned long long>::~allocator()>:
      ~allocator() throw() { }
400d20c4:	006136        	entry	a1, 48
400d20c7:	017d      	mov.n	a7, a1
400d20c9:	37cb      	addi.n	a3, a7, 12
400d20cb:	0329      	s32i.n	a2, a3, 0
400d20cd:	27cb      	addi.n	a2, a7, 12
400d20cf:	02a8      	l32i.n	a10, a2, 0
400d20d1:	19d6e5        	call8	400ebe40 <__gnu_cxx::new_allocator<unsigned long long>::~new_allocator()>
400d20d4:	f03d      	nop.n
400d20d6:	f01d      	retw.n

400d20d8 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d20d8:	006136        	entry	a1, 48
400d20db:	017d      	mov.n	a7, a1
400d20dd:	57cb      	addi.n	a5, a7, 12
400d20df:	0529      	s32i.n	a2, a5, 0
400d20e1:	278b      	addi.n	a2, a7, 8
400d20e3:	0239      	s32i.n	a3, a2, 0
400d20e5:	274b      	addi.n	a2, a7, 4
400d20e7:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d20e9:	27cb      	addi.n	a2, a7, 12
400d20eb:	0228      	l32i.n	a2, a2, 0
400d20ed:	474b      	addi.n	a4, a7, 4
400d20ef:	378b      	addi.n	a3, a7, 8
400d20f1:	04c8      	l32i.n	a12, a4, 0
400d20f3:	03b8      	l32i.n	a11, a3, 0
400d20f5:	20a220        	or	a10, a2, a2
400d20f8:	201110        	or	a1, a1, a1
400d20fb:	004925        	call8	400d258c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)>
      { _M_default_initialize(__n); }
400d20fe:	378b      	addi.n	a3, a7, 8
400d2100:	27cb      	addi.n	a2, a7, 12
400d2102:	03b8      	l32i.n	a11, a3, 0
400d2104:	02a8      	l32i.n	a10, a2, 0
400d2106:	201110        	or	a1, a1, a1
400d2109:	0050e5        	call8	400d2618 <std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_default_initialize(unsigned int)>
400d210c:	000506        	j	400d2124 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)+0x4c>
400d210f:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d2112:	0338      	l32i.n	a3, a3, 0
400d2114:	03ad      	mov.n	a10, a3
400d2116:	201110        	or	a1, a1, a1
400d2119:	004be5        	call8	400d25d8 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>
400d211c:	02ad      	mov.n	a10, a2
400d211e:	201110        	or	a1, a1, a1
400d2121:	027925        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2124:	f01d      	retw.n
	...

400d2128 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d2128:	006136        	entry	a1, 48
400d212b:	207110        	or	a7, a1, a1
400d212e:	37cb      	addi.n	a3, a7, 12
400d2130:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2132:	27cb      	addi.n	a2, a7, 12
400d2134:	0228      	l32i.n	a2, a2, 0
400d2136:	0228      	l32i.n	a2, a2, 0
400d2138:	37cb      	addi.n	a3, a7, 12
400d213a:	0338      	l32i.n	a3, a3, 0
400d213c:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d213e:	47cb      	addi.n	a4, a7, 12
400d2140:	0448      	l32i.n	a4, a4, 0
400d2142:	20a440        	or	a10, a4, a4
400d2145:	19d0a5        	call8	400ebe50 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>
400d2148:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d214a:	04cd      	mov.n	a12, a4
400d214c:	03bd      	mov.n	a11, a3
400d214e:	02ad      	mov.n	a10, a2
400d2150:	004fe5        	call8	400d2650 <void std::_Destroy<unsigned long long*, unsigned long long>(unsigned long long*, unsigned long long*, std::allocator<unsigned long long>&)>
		      _M_get_Tp_allocator()); }
400d2153:	27cb      	addi.n	a2, a7, 12
400d2155:	0228      	l32i.n	a2, a2, 0
400d2157:	02ad      	mov.n	a10, a2
400d2159:	0047e5        	call8	400d25d8 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>
400d215c:	f03d      	nop.n
400d215e:	f01d      	retw.n

400d2160 <std::allocator<float>::allocator()>:
      allocator() throw() { }
400d2160:	006136        	entry	a1, 48
400d2163:	017d      	mov.n	a7, a1
400d2165:	37cb      	addi.n	a3, a7, 12
400d2167:	0329      	s32i.n	a2, a3, 0
400d2169:	27cb      	addi.n	a2, a7, 12
400d216b:	02a8      	l32i.n	a10, a2, 0
400d216d:	19cf25        	call8	400ebe60 <__gnu_cxx::new_allocator<float>::new_allocator()>
400d2170:	f03d      	nop.n
400d2172:	f01d      	retw.n

400d2174 <std::allocator<float>::~allocator()>:
      ~allocator() throw() { }
400d2174:	006136        	entry	a1, 48
400d2177:	017d      	mov.n	a7, a1
400d2179:	37cb      	addi.n	a3, a7, 12
400d217b:	0329      	s32i.n	a2, a3, 0
400d217d:	27cb      	addi.n	a2, a7, 12
400d217f:	02a8      	l32i.n	a10, a2, 0
400d2181:	19cee5        	call8	400ebe70 <__gnu_cxx::new_allocator<float>::~new_allocator()>
400d2184:	f03d      	nop.n
400d2186:	f01d      	retw.n

400d2188 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d2188:	006136        	entry	a1, 48
400d218b:	017d      	mov.n	a7, a1
400d218d:	57cb      	addi.n	a5, a7, 12
400d218f:	0529      	s32i.n	a2, a5, 0
400d2191:	278b      	addi.n	a2, a7, 8
400d2193:	0239      	s32i.n	a3, a2, 0
400d2195:	274b      	addi.n	a2, a7, 4
400d2197:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d2199:	27cb      	addi.n	a2, a7, 12
400d219b:	0228      	l32i.n	a2, a2, 0
400d219d:	474b      	addi.n	a4, a7, 4
400d219f:	378b      	addi.n	a3, a7, 8
400d21a1:	04c8      	l32i.n	a12, a4, 0
400d21a3:	03b8      	l32i.n	a11, a3, 0
400d21a5:	20a220        	or	a10, a2, a2
400d21a8:	201110        	or	a1, a1, a1
400d21ab:	004da5        	call8	400d2684 <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)>
      { _M_default_initialize(__n); }
400d21ae:	378b      	addi.n	a3, a7, 8
400d21b0:	27cb      	addi.n	a2, a7, 12
400d21b2:	03b8      	l32i.n	a11, a3, 0
400d21b4:	02a8      	l32i.n	a10, a2, 0
400d21b6:	201110        	or	a1, a1, a1
400d21b9:	005565        	call8	400d2710 <std::vector<float, std::allocator<float> >::_M_default_initialize(unsigned int)>
400d21bc:	000506        	j	400d21d4 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)+0x4c>
400d21bf:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d21c2:	0338      	l32i.n	a3, a3, 0
400d21c4:	03ad      	mov.n	a10, a3
400d21c6:	201110        	or	a1, a1, a1
400d21c9:	005065        	call8	400d26d0 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
400d21cc:	02ad      	mov.n	a10, a2
400d21ce:	201110        	or	a1, a1, a1
400d21d1:	026e25        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d21d4:	f01d      	retw.n
	...

400d21d8 <std::vector<float, std::allocator<float> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d21d8:	006136        	entry	a1, 48
400d21db:	207110        	or	a7, a1, a1
400d21de:	37cb      	addi.n	a3, a7, 12
400d21e0:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d21e2:	27cb      	addi.n	a2, a7, 12
400d21e4:	0228      	l32i.n	a2, a2, 0
400d21e6:	0228      	l32i.n	a2, a2, 0
400d21e8:	37cb      	addi.n	a3, a7, 12
400d21ea:	0338      	l32i.n	a3, a3, 0
400d21ec:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d21ee:	47cb      	addi.n	a4, a7, 12
400d21f0:	0448      	l32i.n	a4, a4, 0
400d21f2:	20a440        	or	a10, a4, a4
400d21f5:	19c8a5        	call8	400ebe80 <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>
400d21f8:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d21fa:	04cd      	mov.n	a12, a4
400d21fc:	03bd      	mov.n	a11, a3
400d21fe:	02ad      	mov.n	a10, a2
400d2200:	005465        	call8	400d2748 <void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)>
		      _M_get_Tp_allocator()); }
400d2203:	27cb      	addi.n	a2, a7, 12
400d2205:	0228      	l32i.n	a2, a2, 0
400d2207:	02ad      	mov.n	a10, a2
400d2209:	004c65        	call8	400d26d0 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
400d220c:	f03d      	nop.n
400d220e:	f01d      	retw.n

400d2210 <std::allocator<double>::allocator()>:
      allocator() throw() { }
400d2210:	006136        	entry	a1, 48
400d2213:	017d      	mov.n	a7, a1
400d2215:	37cb      	addi.n	a3, a7, 12
400d2217:	0329      	s32i.n	a2, a3, 0
400d2219:	27cb      	addi.n	a2, a7, 12
400d221b:	02a8      	l32i.n	a10, a2, 0
400d221d:	19c725        	call8	400ebe90 <__gnu_cxx::new_allocator<double>::new_allocator()>
400d2220:	f03d      	nop.n
400d2222:	f01d      	retw.n

400d2224 <std::allocator<double>::~allocator()>:
      ~allocator() throw() { }
400d2224:	006136        	entry	a1, 48
400d2227:	017d      	mov.n	a7, a1
400d2229:	37cb      	addi.n	a3, a7, 12
400d222b:	0329      	s32i.n	a2, a3, 0
400d222d:	27cb      	addi.n	a2, a7, 12
400d222f:	02a8      	l32i.n	a10, a2, 0
400d2231:	19c6e5        	call8	400ebea0 <__gnu_cxx::new_allocator<double>::~new_allocator()>
400d2234:	f03d      	nop.n
400d2236:	f01d      	retw.n

400d2238 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d2238:	006136        	entry	a1, 48
400d223b:	017d      	mov.n	a7, a1
400d223d:	57cb      	addi.n	a5, a7, 12
400d223f:	0529      	s32i.n	a2, a5, 0
400d2241:	278b      	addi.n	a2, a7, 8
400d2243:	0239      	s32i.n	a3, a2, 0
400d2245:	274b      	addi.n	a2, a7, 4
400d2247:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d2249:	27cb      	addi.n	a2, a7, 12
400d224b:	0228      	l32i.n	a2, a2, 0
400d224d:	474b      	addi.n	a4, a7, 4
400d224f:	378b      	addi.n	a3, a7, 8
400d2251:	04c8      	l32i.n	a12, a4, 0
400d2253:	03b8      	l32i.n	a11, a3, 0
400d2255:	20a220        	or	a10, a2, a2
400d2258:	201110        	or	a1, a1, a1
400d225b:	005225        	call8	400d277c <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)>
      { _M_default_initialize(__n); }
400d225e:	378b      	addi.n	a3, a7, 8
400d2260:	27cb      	addi.n	a2, a7, 12
400d2262:	03b8      	l32i.n	a11, a3, 0
400d2264:	02a8      	l32i.n	a10, a2, 0
400d2266:	201110        	or	a1, a1, a1
400d2269:	0059e5        	call8	400d2808 <std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned int)>
400d226c:	000506        	j	400d2284 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)+0x4c>
400d226f:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d2272:	0338      	l32i.n	a3, a3, 0
400d2274:	03ad      	mov.n	a10, a3
400d2276:	201110        	or	a1, a1, a1
400d2279:	0054e5        	call8	400d27c8 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>
400d227c:	02ad      	mov.n	a10, a2
400d227e:	201110        	or	a1, a1, a1
400d2281:	026325        	call8	400d48b4 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2284:	f01d      	retw.n
	...

400d2288 <std::vector<double, std::allocator<double> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d2288:	006136        	entry	a1, 48
400d228b:	207110        	or	a7, a1, a1
400d228e:	37cb      	addi.n	a3, a7, 12
400d2290:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2292:	27cb      	addi.n	a2, a7, 12
400d2294:	0228      	l32i.n	a2, a2, 0
400d2296:	0228      	l32i.n	a2, a2, 0
400d2298:	37cb      	addi.n	a3, a7, 12
400d229a:	0338      	l32i.n	a3, a3, 0
400d229c:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d229e:	47cb      	addi.n	a4, a7, 12
400d22a0:	0448      	l32i.n	a4, a4, 0
400d22a2:	20a440        	or	a10, a4, a4
400d22a5:	19c0a5        	call8	400ebeb0 <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>
400d22a8:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d22aa:	04cd      	mov.n	a12, a4
400d22ac:	03bd      	mov.n	a11, a3
400d22ae:	02ad      	mov.n	a10, a2
400d22b0:	0058e5        	call8	400d2840 <void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)>
		      _M_get_Tp_allocator()); }
400d22b3:	27cb      	addi.n	a2, a7, 12
400d22b5:	0228      	l32i.n	a2, a2, 0
400d22b7:	02ad      	mov.n	a10, a2
400d22b9:	0050e5        	call8	400d27c8 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>
400d22bc:	f03d      	nop.n
400d22be:	f01d      	retw.n

400d22c0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d22c0:	006136        	entry	a1, 48
400d22c3:	017d      	mov.n	a7, a1
400d22c5:	57cb      	addi.n	a5, a7, 12
400d22c7:	0529      	s32i.n	a2, a5, 0
400d22c9:	278b      	addi.n	a2, a7, 8
400d22cb:	0239      	s32i.n	a3, a2, 0
400d22cd:	274b      	addi.n	a2, a7, 4
400d22cf:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d22d1:	278b      	addi.n	a2, a7, 8
400d22d3:	0228      	l32i.n	a2, a2, 0
400d22d5:	f28c      	beqz.n	a2, 400d22e8 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d22d7:	27cb      	addi.n	a2, a7, 12
400d22d9:	0228      	l32i.n	a2, a2, 0
400d22db:	474b      	addi.n	a4, a7, 4
400d22dd:	378b      	addi.n	a3, a7, 8
400d22df:	04c8      	l32i.n	a12, a4, 0
400d22e1:	03b8      	l32i.n	a11, a3, 0
400d22e3:	02ad      	mov.n	a10, a2
400d22e5:	0057a5        	call8	400d2860 <std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned int)>
      }
400d22e8:	f03d      	nop.n
400d22ea:	f01d      	retw.n

400d22ec <void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d22ec:	006136        	entry	a1, 48
400d22ef:	017d      	mov.n	a7, a1
400d22f1:	47cb      	addi.n	a4, a7, 12
400d22f3:	0429      	s32i.n	a2, a4, 0
400d22f5:	278b      	addi.n	a2, a7, 8
400d22f7:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d22f9:	378b      	addi.n	a3, a7, 8
400d22fb:	27cb      	addi.n	a2, a7, 12
400d22fd:	03b8      	l32i.n	a11, a3, 0
400d22ff:	02a8      	l32i.n	a10, a2, 0
400d2301:	19bbe5        	call8	400ebec0 <void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*)>
    }
400d2304:	f03d      	nop.n
400d2306:	f01d      	retw.n

400d2308 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2308:	006136        	entry	a1, 48
400d230b:	017d      	mov.n	a7, a1
400d230d:	37cb      	addi.n	a3, a7, 12
400d230f:	0329      	s32i.n	a2, a3, 0
400d2311:	27cb      	addi.n	a2, a7, 12
400d2313:	02a8      	l32i.n	a10, a2, 0
400d2315:	ffbd65        	call8	400d1eec <std::allocator<unsigned char>::~allocator()>
400d2318:	f03d      	nop.n
400d231a:	f01d      	retw.n

400d231c <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d231c:	006136        	entry	a1, 48
400d231f:	017d      	mov.n	a7, a1
400d2321:	57cb      	addi.n	a5, a7, 12
400d2323:	0529      	s32i.n	a2, a5, 0
400d2325:	278b      	addi.n	a2, a7, 8
400d2327:	0239      	s32i.n	a3, a2, 0
400d2329:	274b      	addi.n	a2, a7, 4
400d232b:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d232d:	27cb      	addi.n	a2, a7, 12
400d232f:	0228      	l32i.n	a2, a2, 0
400d2331:	374b      	addi.n	a3, a7, 4
400d2333:	03b8      	l32i.n	a11, a3, 0
400d2335:	20a220        	or	a10, a2, a2
400d2338:	201110        	or	a1, a1, a1
400d233b:	0054a5        	call8	400d2884 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&)>
      { _M_create_storage(__n); }
400d233e:	378b      	addi.n	a3, a7, 8
400d2340:	27cb      	addi.n	a2, a7, 12
400d2342:	03b8      	l32i.n	a11, a3, 0
400d2344:	02a8      	l32i.n	a10, a2, 0
400d2346:	201110        	or	a1, a1, a1
400d2349:	0056e5        	call8	400d28b8 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned int)>
400d234c:	000506        	j	400d2364 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)+0x48>
400d234f:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d2352:	0338      	l32i.n	a3, a3, 0
400d2354:	03ad      	mov.n	a10, a3
400d2356:	201110        	or	a1, a1, a1
400d2359:	fffae5        	call8	400d2308 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>
400d235c:	02ad      	mov.n	a10, a2
400d235e:	201110        	or	a1, a1, a1
400d2361:	025525        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2364:	f01d      	retw.n
	...

400d2368 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2368:	006136        	entry	a1, 48
400d236b:	207110        	or	a7, a1, a1
400d236e:	0cc732        	addi	a3, a7, 12
400d2371:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2373:	27cb      	addi.n	a2, a7, 12
400d2375:	0228      	l32i.n	a2, a2, 0
400d2377:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2379:	27cb      	addi.n	a2, a7, 12
400d237b:	0228      	l32i.n	a2, a2, 0
400d237d:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d237f:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d2381:	27cb      	addi.n	a2, a7, 12
400d2383:	0228      	l32i.n	a2, a2, 0
400d2385:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2387:	c02420        	sub	a2, a4, a2
400d238a:	024d      	mov.n	a4, a2
400d238c:	27cb      	addi.n	a2, a7, 12
400d238e:	04cd      	mov.n	a12, a4
400d2390:	03bd      	mov.n	a11, a3
400d2392:	02a8      	l32i.n	a10, a2, 0
400d2394:	005665        	call8	400d28fc <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)>
		      - this->_M_impl._M_start); }
400d2397:	27cb      	addi.n	a2, a7, 12
400d2399:	0228      	l32i.n	a2, a2, 0
400d239b:	02ad      	mov.n	a10, a2
400d239d:	fff6a5        	call8	400d2308 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>
400d23a0:	f03d      	nop.n
400d23a2:	f01d      	retw.n

400d23a4 <std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_initialize(unsigned int)>:
      }

#if __cplusplus >= 201103L
      // Called by the vector(n) constructor.
      void
      _M_default_initialize(size_type __n)
400d23a4:	006136        	entry	a1, 48
400d23a7:	207110        	or	a7, a1, a1
400d23aa:	0cc742        	addi	a4, a7, 12
400d23ad:	0429      	s32i.n	a2, a4, 0
400d23af:	278b      	addi.n	a2, a7, 8
400d23b1:	0239      	s32i.n	a3, a2, 0
      {
	this->_M_impl._M_finish =
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d23b3:	27cb      	addi.n	a2, a7, 12
400d23b5:	0228      	l32i.n	a2, a2, 0
400d23b7:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d23b9:	37cb      	addi.n	a3, a7, 12
400d23bb:	0338      	l32i.n	a3, a3, 0
400d23bd:	20a330        	or	a10, a3, a3
400d23c0:	19a0e5        	call8	400ebdd0 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>
400d23c3:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d23c5:	378b      	addi.n	a3, a7, 8
400d23c7:	04cd      	mov.n	a12, a4
400d23c9:	03b8      	l32i.n	a11, a3, 0
400d23cb:	02ad      	mov.n	a10, a2
400d23cd:	0055a5        	call8	400d2928 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>
400d23d0:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d23d2:	27cb      	addi.n	a2, a7, 12
400d23d4:	0228      	l32i.n	a2, a2, 0
400d23d6:	1239      	s32i.n	a3, a2, 4
      }
400d23d8:	f03d      	nop.n
400d23da:	f01d      	retw.n

400d23dc <void std::_Destroy<unsigned char*, unsigned char>(unsigned char*, unsigned char*, std::allocator<unsigned char>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d23dc:	006136        	entry	a1, 48
400d23df:	017d      	mov.n	a7, a1
400d23e1:	57cb      	addi.n	a5, a7, 12
400d23e3:	0529      	s32i.n	a2, a5, 0
400d23e5:	278b      	addi.n	a2, a7, 8
400d23e7:	0239      	s32i.n	a3, a2, 0
400d23e9:	274b      	addi.n	a2, a7, 4
400d23eb:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d23ed:	378b      	addi.n	a3, a7, 8
400d23ef:	27cb      	addi.n	a2, a7, 12
400d23f1:	03b8      	l32i.n	a11, a3, 0
400d23f3:	02a8      	l32i.n	a10, a2, 0
400d23f5:	005525        	call8	400d2948 <void std::_Destroy<unsigned char*>(unsigned char*, unsigned char*)>
    }
400d23f8:	f03d      	nop.n
400d23fa:	f01d      	retw.n

400d23fc <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d23fc:	006136        	entry	a1, 48
400d23ff:	017d      	mov.n	a7, a1
400d2401:	37cb      	addi.n	a3, a7, 12
400d2403:	0329      	s32i.n	a2, a3, 0
400d2405:	27cb      	addi.n	a2, a7, 12
400d2407:	02a8      	l32i.n	a10, a2, 0
400d2409:	ffb925        	call8	400d1f9c <std::allocator<unsigned short>::~allocator()>
400d240c:	f03d      	nop.n
400d240e:	f01d      	retw.n

400d2410 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2410:	006136        	entry	a1, 48
400d2413:	017d      	mov.n	a7, a1
400d2415:	57cb      	addi.n	a5, a7, 12
400d2417:	0529      	s32i.n	a2, a5, 0
400d2419:	278b      	addi.n	a2, a7, 8
400d241b:	0239      	s32i.n	a3, a2, 0
400d241d:	274b      	addi.n	a2, a7, 4
400d241f:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2421:	27cb      	addi.n	a2, a7, 12
400d2423:	0228      	l32i.n	a2, a2, 0
400d2425:	374b      	addi.n	a3, a7, 4
400d2427:	03b8      	l32i.n	a11, a3, 0
400d2429:	20a220        	or	a10, a2, a2
400d242c:	201110        	or	a1, a1, a1
400d242f:	005365        	call8	400d2964 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::_Vector_impl(std::allocator<unsigned short> const&)>
      { _M_create_storage(__n); }
400d2432:	378b      	addi.n	a3, a7, 8
400d2434:	27cb      	addi.n	a2, a7, 12
400d2436:	03b8      	l32i.n	a11, a3, 0
400d2438:	02a8      	l32i.n	a10, a2, 0
400d243a:	201110        	or	a1, a1, a1
400d243d:	0055a5        	call8	400d2998 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_create_storage(unsigned int)>
400d2440:	000506        	j	400d2458 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)+0x48>
      : _M_impl(__a)
400d2443:	37cb      	addi.n	a3, a7, 12
400d2445:	0338      	l32i.n	a3, a3, 0
400d2447:	20a330        	or	a10, a3, a3
400d244a:	201110        	or	a1, a1, a1
400d244d:	fffae5        	call8	400d23fc <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>
400d2450:	02ad      	mov.n	a10, a2
400d2452:	201110        	or	a1, a1, a1
400d2455:	0245e5        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2458:	f01d      	retw.n
	...

400d245c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d245c:	006136        	entry	a1, 48
400d245f:	207110        	or	a7, a1, a1
400d2462:	0cc732        	addi	a3, a7, 12
400d2465:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2467:	27cb      	addi.n	a2, a7, 12
400d2469:	0228      	l32i.n	a2, a2, 0
400d246b:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d246d:	27cb      	addi.n	a2, a7, 12
400d246f:	0228      	l32i.n	a2, a2, 0
400d2471:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2473:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d2475:	27cb      	addi.n	a2, a7, 12
400d2477:	0228      	l32i.n	a2, a2, 0
400d2479:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d247b:	c02420        	sub	a2, a4, a2
400d247e:	212120        	srai	a2, a2, 1
400d2481:	024d      	mov.n	a4, a2
400d2483:	27cb      	addi.n	a2, a7, 12
400d2485:	04cd      	mov.n	a12, a4
400d2487:	03bd      	mov.n	a11, a3
400d2489:	0022a2        	l32i	a10, a2, 0
400d248c:	005525        	call8	400d29e0 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)>
		      - this->_M_impl._M_start); }
400d248f:	27cb      	addi.n	a2, a7, 12
400d2491:	0228      	l32i.n	a2, a2, 0
400d2493:	02ad      	mov.n	a10, a2
400d2495:	fff665        	call8	400d23fc <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>
400d2498:	f03d      	nop.n
400d249a:	f01d      	retw.n

400d249c <std::vector<unsigned short, std::allocator<unsigned short> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d249c:	006136        	entry	a1, 48
400d249f:	207110        	or	a7, a1, a1
400d24a2:	0cc742        	addi	a4, a7, 12
400d24a5:	0429      	s32i.n	a2, a4, 0
400d24a7:	278b      	addi.n	a2, a7, 8
400d24a9:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d24ab:	27cb      	addi.n	a2, a7, 12
400d24ad:	0228      	l32i.n	a2, a2, 0
400d24af:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d24b1:	37cb      	addi.n	a3, a7, 12
400d24b3:	0338      	l32i.n	a3, a3, 0
400d24b5:	20a330        	or	a10, a3, a3
400d24b8:	199465        	call8	400ebe00 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>
400d24bb:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d24bd:	378b      	addi.n	a3, a7, 8
400d24bf:	04cd      	mov.n	a12, a4
400d24c1:	03b8      	l32i.n	a11, a3, 0
400d24c3:	02ad      	mov.n	a10, a2
400d24c5:	005465        	call8	400d2a0c <unsigned short* std::__uninitialized_default_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, std::allocator<unsigned short>&)>
400d24c8:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d24ca:	27cb      	addi.n	a2, a7, 12
400d24cc:	0228      	l32i.n	a2, a2, 0
400d24ce:	1239      	s32i.n	a3, a2, 4
      }
400d24d0:	f03d      	nop.n
400d24d2:	f01d      	retw.n

400d24d4 <void std::_Destroy<unsigned short*, unsigned short>(unsigned short*, unsigned short*, std::allocator<unsigned short>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d24d4:	006136        	entry	a1, 48
400d24d7:	017d      	mov.n	a7, a1
400d24d9:	57cb      	addi.n	a5, a7, 12
400d24db:	0529      	s32i.n	a2, a5, 0
400d24dd:	278b      	addi.n	a2, a7, 8
400d24df:	0239      	s32i.n	a3, a2, 0
400d24e1:	274b      	addi.n	a2, a7, 4
400d24e3:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d24e5:	378b      	addi.n	a3, a7, 8
400d24e7:	27cb      	addi.n	a2, a7, 12
400d24e9:	03b8      	l32i.n	a11, a3, 0
400d24eb:	02a8      	l32i.n	a10, a2, 0
400d24ed:	0053e5        	call8	400d2a2c <void std::_Destroy<unsigned short*>(unsigned short*, unsigned short*)>
    }
400d24f0:	f03d      	nop.n
400d24f2:	f01d      	retw.n

400d24f4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d24f4:	006136        	entry	a1, 48
400d24f7:	017d      	mov.n	a7, a1
400d24f9:	57cb      	addi.n	a5, a7, 12
400d24fb:	0529      	s32i.n	a2, a5, 0
400d24fd:	278b      	addi.n	a2, a7, 8
400d24ff:	0239      	s32i.n	a3, a2, 0
400d2501:	274b      	addi.n	a2, a7, 4
400d2503:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2505:	27cb      	addi.n	a2, a7, 12
400d2507:	0228      	l32i.n	a2, a2, 0
400d2509:	374b      	addi.n	a3, a7, 4
400d250b:	03b8      	l32i.n	a11, a3, 0
400d250d:	20a220        	or	a10, a2, a2
400d2510:	201110        	or	a1, a1, a1
400d2513:	005365        	call8	400d2a48 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&)>
      { _M_create_storage(__n); }
400d2516:	378b      	addi.n	a3, a7, 8
400d2518:	27cb      	addi.n	a2, a7, 12
400d251a:	03b8      	l32i.n	a11, a3, 0
400d251c:	02a8      	l32i.n	a10, a2, 0
400d251e:	201110        	or	a1, a1, a1
400d2521:	0055a5        	call8	400d2a7c <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned int)>
400d2524:	000506        	j	400d253c <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)+0x48>
400d2527:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d252a:	0338      	l32i.n	a3, a3, 0
400d252c:	03ad      	mov.n	a10, a3
400d252e:	201110        	or	a1, a1, a1
400d2531:	ff9325        	call8	400d1e64 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>
400d2534:	02ad      	mov.n	a10, a2
400d2536:	201110        	or	a1, a1, a1
400d2539:	0237a5        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d253c:	f01d      	retw.n
	...

400d2540 <std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2540:	006136        	entry	a1, 48
400d2543:	207110        	or	a7, a1, a1
400d2546:	0cc742        	addi	a4, a7, 12
400d2549:	0429      	s32i.n	a2, a4, 0
400d254b:	278b      	addi.n	a2, a7, 8
400d254d:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d254f:	27cb      	addi.n	a2, a7, 12
400d2551:	0228      	l32i.n	a2, a2, 0
400d2553:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2555:	37cb      	addi.n	a3, a7, 12
400d2557:	0338      	l32i.n	a3, a3, 0
400d2559:	20a330        	or	a10, a3, a3
400d255c:	197865        	call8	400ebce4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>
400d255f:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2561:	378b      	addi.n	a3, a7, 8
400d2563:	04cd      	mov.n	a12, a4
400d2565:	03b8      	l32i.n	a11, a3, 0
400d2567:	02ad      	mov.n	a10, a2
400d2569:	0055a5        	call8	400d2ac4 <unsigned int* std::__uninitialized_default_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, std::allocator<unsigned int>&)>
400d256c:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d256e:	27cb      	addi.n	a2, a7, 12
400d2570:	0228      	l32i.n	a2, a2, 0
400d2572:	1239      	s32i.n	a3, a2, 4
      }
400d2574:	f03d      	nop.n
400d2576:	f01d      	retw.n

400d2578 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2578:	006136        	entry	a1, 48
400d257b:	017d      	mov.n	a7, a1
400d257d:	37cb      	addi.n	a3, a7, 12
400d257f:	0329      	s32i.n	a2, a3, 0
400d2581:	27cb      	addi.n	a2, a7, 12
400d2583:	02a8      	l32i.n	a10, a2, 0
400d2585:	ffb3e5        	call8	400d20c4 <std::allocator<unsigned long long>::~allocator()>
400d2588:	f03d      	nop.n
400d258a:	f01d      	retw.n

400d258c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d258c:	006136        	entry	a1, 48
400d258f:	017d      	mov.n	a7, a1
400d2591:	57cb      	addi.n	a5, a7, 12
400d2593:	0529      	s32i.n	a2, a5, 0
400d2595:	278b      	addi.n	a2, a7, 8
400d2597:	0239      	s32i.n	a3, a2, 0
400d2599:	274b      	addi.n	a2, a7, 4
400d259b:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d259d:	27cb      	addi.n	a2, a7, 12
400d259f:	0228      	l32i.n	a2, a2, 0
400d25a1:	374b      	addi.n	a3, a7, 4
400d25a3:	03b8      	l32i.n	a11, a3, 0
400d25a5:	20a220        	or	a10, a2, a2
400d25a8:	201110        	or	a1, a1, a1
400d25ab:	0053a5        	call8	400d2ae4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::_Vector_impl(std::allocator<unsigned long long> const&)>
      { _M_create_storage(__n); }
400d25ae:	378b      	addi.n	a3, a7, 8
400d25b0:	27cb      	addi.n	a2, a7, 12
400d25b2:	03b8      	l32i.n	a11, a3, 0
400d25b4:	02a8      	l32i.n	a10, a2, 0
400d25b6:	201110        	or	a1, a1, a1
400d25b9:	0055e5        	call8	400d2b18 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_create_storage(unsigned int)>
400d25bc:	000506        	j	400d25d4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)+0x48>
400d25bf:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d25c2:	0338      	l32i.n	a3, a3, 0
400d25c4:	03ad      	mov.n	a10, a3
400d25c6:	201110        	or	a1, a1, a1
400d25c9:	fffae5        	call8	400d2578 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>
400d25cc:	02ad      	mov.n	a10, a2
400d25ce:	201110        	or	a1, a1, a1
400d25d1:	022e25        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d25d4:	f01d      	retw.n
	...

400d25d8 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d25d8:	006136        	entry	a1, 48
400d25db:	207110        	or	a7, a1, a1
400d25de:	0cc732        	addi	a3, a7, 12
400d25e1:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d25e3:	27cb      	addi.n	a2, a7, 12
400d25e5:	0228      	l32i.n	a2, a2, 0
400d25e7:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d25e9:	27cb      	addi.n	a2, a7, 12
400d25eb:	0228      	l32i.n	a2, a2, 0
400d25ed:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d25ef:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d25f1:	27cb      	addi.n	a2, a7, 12
400d25f3:	0228      	l32i.n	a2, a2, 0
400d25f5:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d25f7:	c02420        	sub	a2, a4, a2
400d25fa:	212320        	srai	a2, a2, 3
400d25fd:	024d      	mov.n	a4, a2
400d25ff:	27cb      	addi.n	a2, a7, 12
400d2601:	04cd      	mov.n	a12, a4
400d2603:	03bd      	mov.n	a11, a3
400d2605:	0022a2        	l32i	a10, a2, 0
400d2608:	005565        	call8	400d2b60 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)>
		      - this->_M_impl._M_start); }
400d260b:	27cb      	addi.n	a2, a7, 12
400d260d:	0228      	l32i.n	a2, a2, 0
400d260f:	02ad      	mov.n	a10, a2
400d2611:	fff665        	call8	400d2578 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>
400d2614:	f03d      	nop.n
400d2616:	f01d      	retw.n

400d2618 <std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2618:	006136        	entry	a1, 48
400d261b:	207110        	or	a7, a1, a1
400d261e:	0cc742        	addi	a4, a7, 12
400d2621:	0429      	s32i.n	a2, a4, 0
400d2623:	278b      	addi.n	a2, a7, 8
400d2625:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2627:	27cb      	addi.n	a2, a7, 12
400d2629:	0228      	l32i.n	a2, a2, 0
400d262b:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d262d:	37cb      	addi.n	a3, a7, 12
400d262f:	0338      	l32i.n	a3, a3, 0
400d2631:	20a330        	or	a10, a3, a3
400d2634:	1981a5        	call8	400ebe50 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>
400d2637:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2639:	378b      	addi.n	a3, a7, 8
400d263b:	04cd      	mov.n	a12, a4
400d263d:	03b8      	l32i.n	a11, a3, 0
400d263f:	02ad      	mov.n	a10, a2
400d2641:	0054a5        	call8	400d2b8c <unsigned long long* std::__uninitialized_default_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, std::allocator<unsigned long long>&)>
400d2644:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d2646:	27cb      	addi.n	a2, a7, 12
400d2648:	0228      	l32i.n	a2, a2, 0
400d264a:	1239      	s32i.n	a3, a2, 4
      }
400d264c:	f03d      	nop.n
400d264e:	f01d      	retw.n

400d2650 <void std::_Destroy<unsigned long long*, unsigned long long>(unsigned long long*, unsigned long long*, std::allocator<unsigned long long>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2650:	006136        	entry	a1, 48
400d2653:	017d      	mov.n	a7, a1
400d2655:	57cb      	addi.n	a5, a7, 12
400d2657:	0529      	s32i.n	a2, a5, 0
400d2659:	278b      	addi.n	a2, a7, 8
400d265b:	0239      	s32i.n	a3, a2, 0
400d265d:	274b      	addi.n	a2, a7, 4
400d265f:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2661:	378b      	addi.n	a3, a7, 8
400d2663:	27cb      	addi.n	a2, a7, 12
400d2665:	03b8      	l32i.n	a11, a3, 0
400d2667:	02a8      	l32i.n	a10, a2, 0
400d2669:	005425        	call8	400d2bac <void std::_Destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>
    }
400d266c:	f03d      	nop.n
400d266e:	f01d      	retw.n

400d2670 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2670:	006136        	entry	a1, 48
400d2673:	017d      	mov.n	a7, a1
400d2675:	37cb      	addi.n	a3, a7, 12
400d2677:	0329      	s32i.n	a2, a3, 0
400d2679:	27cb      	addi.n	a2, a7, 12
400d267b:	02a8      	l32i.n	a10, a2, 0
400d267d:	ffaf65        	call8	400d2174 <std::allocator<float>::~allocator()>
400d2680:	f03d      	nop.n
400d2682:	f01d      	retw.n

400d2684 <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2684:	006136        	entry	a1, 48
400d2687:	017d      	mov.n	a7, a1
400d2689:	57cb      	addi.n	a5, a7, 12
400d268b:	0529      	s32i.n	a2, a5, 0
400d268d:	278b      	addi.n	a2, a7, 8
400d268f:	0239      	s32i.n	a3, a2, 0
400d2691:	274b      	addi.n	a2, a7, 4
400d2693:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2695:	27cb      	addi.n	a2, a7, 12
400d2697:	0228      	l32i.n	a2, a2, 0
400d2699:	374b      	addi.n	a3, a7, 4
400d269b:	03b8      	l32i.n	a11, a3, 0
400d269d:	20a220        	or	a10, a2, a2
400d26a0:	201110        	or	a1, a1, a1
400d26a3:	005265        	call8	400d2bc8 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)>
      { _M_create_storage(__n); }
400d26a6:	378b      	addi.n	a3, a7, 8
400d26a8:	27cb      	addi.n	a2, a7, 12
400d26aa:	03b8      	l32i.n	a11, a3, 0
400d26ac:	02a8      	l32i.n	a10, a2, 0
400d26ae:	201110        	or	a1, a1, a1
400d26b1:	0054a5        	call8	400d2bfc <std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned int)>
400d26b4:	000506        	j	400d26cc <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)+0x48>
400d26b7:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d26ba:	0338      	l32i.n	a3, a3, 0
400d26bc:	03ad      	mov.n	a10, a3
400d26be:	201110        	or	a1, a1, a1
400d26c1:	fffae5        	call8	400d2670 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>
400d26c4:	02ad      	mov.n	a10, a2
400d26c6:	201110        	or	a1, a1, a1
400d26c9:	021ea5        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d26cc:	f01d      	retw.n
	...

400d26d0 <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d26d0:	006136        	entry	a1, 48
400d26d3:	207110        	or	a7, a1, a1
400d26d6:	0cc732        	addi	a3, a7, 12
400d26d9:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d26db:	27cb      	addi.n	a2, a7, 12
400d26dd:	0228      	l32i.n	a2, a2, 0
400d26df:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d26e1:	27cb      	addi.n	a2, a7, 12
400d26e3:	0228      	l32i.n	a2, a2, 0
400d26e5:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d26e7:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d26e9:	27cb      	addi.n	a2, a7, 12
400d26eb:	0228      	l32i.n	a2, a2, 0
400d26ed:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d26ef:	c02420        	sub	a2, a4, a2
400d26f2:	212220        	srai	a2, a2, 2
400d26f5:	024d      	mov.n	a4, a2
400d26f7:	27cb      	addi.n	a2, a7, 12
400d26f9:	04cd      	mov.n	a12, a4
400d26fb:	03bd      	mov.n	a11, a3
400d26fd:	0022a2        	l32i	a10, a2, 0
400d2700:	005425        	call8	400d2c44 <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)>
		      - this->_M_impl._M_start); }
400d2703:	27cb      	addi.n	a2, a7, 12
400d2705:	0228      	l32i.n	a2, a2, 0
400d2707:	02ad      	mov.n	a10, a2
400d2709:	fff665        	call8	400d2670 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>
400d270c:	f03d      	nop.n
400d270e:	f01d      	retw.n

400d2710 <std::vector<float, std::allocator<float> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2710:	006136        	entry	a1, 48
400d2713:	207110        	or	a7, a1, a1
400d2716:	0cc742        	addi	a4, a7, 12
400d2719:	0429      	s32i.n	a2, a4, 0
400d271b:	278b      	addi.n	a2, a7, 8
400d271d:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d271f:	27cb      	addi.n	a2, a7, 12
400d2721:	0228      	l32i.n	a2, a2, 0
400d2723:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2725:	37cb      	addi.n	a3, a7, 12
400d2727:	0338      	l32i.n	a3, a3, 0
400d2729:	20a330        	or	a10, a3, a3
400d272c:	197525        	call8	400ebe80 <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>
400d272f:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2731:	378b      	addi.n	a3, a7, 8
400d2733:	04cd      	mov.n	a12, a4
400d2735:	03b8      	l32i.n	a11, a3, 0
400d2737:	02ad      	mov.n	a10, a2
400d2739:	005365        	call8	400d2c70 <float* std::__uninitialized_default_n_a<float*, unsigned int, float>(float*, unsigned int, std::allocator<float>&)>
400d273c:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d273e:	27cb      	addi.n	a2, a7, 12
400d2740:	0228      	l32i.n	a2, a2, 0
400d2742:	1239      	s32i.n	a3, a2, 4
      }
400d2744:	f03d      	nop.n
400d2746:	f01d      	retw.n

400d2748 <void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2748:	006136        	entry	a1, 48
400d274b:	017d      	mov.n	a7, a1
400d274d:	57cb      	addi.n	a5, a7, 12
400d274f:	0529      	s32i.n	a2, a5, 0
400d2751:	278b      	addi.n	a2, a7, 8
400d2753:	0239      	s32i.n	a3, a2, 0
400d2755:	274b      	addi.n	a2, a7, 4
400d2757:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2759:	378b      	addi.n	a3, a7, 8
400d275b:	27cb      	addi.n	a2, a7, 12
400d275d:	03b8      	l32i.n	a11, a3, 0
400d275f:	02a8      	l32i.n	a10, a2, 0
400d2761:	0052e5        	call8	400d2c90 <void std::_Destroy<float*>(float*, float*)>
    }
400d2764:	f03d      	nop.n
400d2766:	f01d      	retw.n

400d2768 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2768:	006136        	entry	a1, 48
400d276b:	017d      	mov.n	a7, a1
400d276d:	37cb      	addi.n	a3, a7, 12
400d276f:	0329      	s32i.n	a2, a3, 0
400d2771:	27cb      	addi.n	a2, a7, 12
400d2773:	02a8      	l32i.n	a10, a2, 0
400d2775:	ffaae5        	call8	400d2224 <std::allocator<double>::~allocator()>
400d2778:	f03d      	nop.n
400d277a:	f01d      	retw.n

400d277c <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d277c:	006136        	entry	a1, 48
400d277f:	017d      	mov.n	a7, a1
400d2781:	57cb      	addi.n	a5, a7, 12
400d2783:	0529      	s32i.n	a2, a5, 0
400d2785:	278b      	addi.n	a2, a7, 8
400d2787:	0239      	s32i.n	a3, a2, 0
400d2789:	274b      	addi.n	a2, a7, 4
400d278b:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d278d:	27cb      	addi.n	a2, a7, 12
400d278f:	0228      	l32i.n	a2, a2, 0
400d2791:	374b      	addi.n	a3, a7, 4
400d2793:	03b8      	l32i.n	a11, a3, 0
400d2795:	20a220        	or	a10, a2, a2
400d2798:	201110        	or	a1, a1, a1
400d279b:	005125        	call8	400d2cac <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)>
      { _M_create_storage(__n); }
400d279e:	378b      	addi.n	a3, a7, 8
400d27a0:	27cb      	addi.n	a2, a7, 12
400d27a2:	03b8      	l32i.n	a11, a3, 0
400d27a4:	02a8      	l32i.n	a10, a2, 0
400d27a6:	201110        	or	a1, a1, a1
400d27a9:	005365        	call8	400d2ce0 <std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned int)>
400d27ac:	000506        	j	400d27c4 <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)+0x48>
400d27af:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d27b2:	0338      	l32i.n	a3, a3, 0
400d27b4:	03ad      	mov.n	a10, a3
400d27b6:	201110        	or	a1, a1, a1
400d27b9:	fffae5        	call8	400d2768 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>
400d27bc:	02ad      	mov.n	a10, a2
400d27be:	201110        	or	a1, a1, a1
400d27c1:	020f25        	call8	400d48b4 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d27c4:	f01d      	retw.n
	...

400d27c8 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d27c8:	006136        	entry	a1, 48
400d27cb:	207110        	or	a7, a1, a1
400d27ce:	0cc732        	addi	a3, a7, 12
400d27d1:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d27d3:	27cb      	addi.n	a2, a7, 12
400d27d5:	0228      	l32i.n	a2, a2, 0
400d27d7:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d27d9:	27cb      	addi.n	a2, a7, 12
400d27db:	0228      	l32i.n	a2, a2, 0
400d27dd:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d27df:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d27e1:	27cb      	addi.n	a2, a7, 12
400d27e3:	0228      	l32i.n	a2, a2, 0
400d27e5:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d27e7:	c02420        	sub	a2, a4, a2
400d27ea:	212320        	srai	a2, a2, 3
400d27ed:	024d      	mov.n	a4, a2
400d27ef:	27cb      	addi.n	a2, a7, 12
400d27f1:	04cd      	mov.n	a12, a4
400d27f3:	03bd      	mov.n	a11, a3
400d27f5:	0022a2        	l32i	a10, a2, 0
400d27f8:	0052e5        	call8	400d2d28 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)>
		      - this->_M_impl._M_start); }
400d27fb:	27cb      	addi.n	a2, a7, 12
400d27fd:	0228      	l32i.n	a2, a2, 0
400d27ff:	02ad      	mov.n	a10, a2
400d2801:	fff665        	call8	400d2768 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>
400d2804:	f03d      	nop.n
400d2806:	f01d      	retw.n

400d2808 <std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2808:	006136        	entry	a1, 48
400d280b:	207110        	or	a7, a1, a1
400d280e:	0cc742        	addi	a4, a7, 12
400d2811:	0429      	s32i.n	a2, a4, 0
400d2813:	278b      	addi.n	a2, a7, 8
400d2815:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2817:	27cb      	addi.n	a2, a7, 12
400d2819:	0228      	l32i.n	a2, a2, 0
400d281b:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d281d:	37cb      	addi.n	a3, a7, 12
400d281f:	0338      	l32i.n	a3, a3, 0
400d2821:	20a330        	or	a10, a3, a3
400d2824:	1968a5        	call8	400ebeb0 <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>
400d2827:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2829:	378b      	addi.n	a3, a7, 8
400d282b:	04cd      	mov.n	a12, a4
400d282d:	03b8      	l32i.n	a11, a3, 0
400d282f:	02ad      	mov.n	a10, a2
400d2831:	005225        	call8	400d2d54 <double* std::__uninitialized_default_n_a<double*, unsigned int, double>(double*, unsigned int, std::allocator<double>&)>
400d2834:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d2836:	27cb      	addi.n	a2, a7, 12
400d2838:	0228      	l32i.n	a2, a2, 0
400d283a:	1239      	s32i.n	a3, a2, 4
      }
400d283c:	f03d      	nop.n
400d283e:	f01d      	retw.n

400d2840 <void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2840:	006136        	entry	a1, 48
400d2843:	017d      	mov.n	a7, a1
400d2845:	57cb      	addi.n	a5, a7, 12
400d2847:	0529      	s32i.n	a2, a5, 0
400d2849:	278b      	addi.n	a2, a7, 8
400d284b:	0239      	s32i.n	a3, a2, 0
400d284d:	274b      	addi.n	a2, a7, 4
400d284f:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2851:	378b      	addi.n	a3, a7, 8
400d2853:	27cb      	addi.n	a2, a7, 12
400d2855:	03b8      	l32i.n	a11, a3, 0
400d2857:	02a8      	l32i.n	a10, a2, 0
400d2859:	0051a5        	call8	400d2d74 <void std::_Destroy<double*>(double*, double*)>
    }
400d285c:	f03d      	nop.n
400d285e:	f01d      	retw.n

400d2860 <std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned int)>:
       *  @param  __p  Pointer to the memory to deallocate.
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d2860:	006136        	entry	a1, 48
400d2863:	017d      	mov.n	a7, a1
400d2865:	57cb      	addi.n	a5, a7, 12
400d2867:	0529      	s32i.n	a2, a5, 0
400d2869:	278b      	addi.n	a2, a7, 8
400d286b:	0239      	s32i.n	a3, a2, 0
400d286d:	274b      	addi.n	a2, a7, 4
400d286f:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d2871:	474b      	addi.n	a4, a7, 4
400d2873:	378b      	addi.n	a3, a7, 8
400d2875:	27cb      	addi.n	a2, a7, 12
400d2877:	04c8      	l32i.n	a12, a4, 0
400d2879:	03b8      	l32i.n	a11, a3, 0
400d287b:	02a8      	l32i.n	a10, a2, 0
400d287d:	005125        	call8	400d2d90 <__gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned int)>
400d2880:	f03d      	nop.n
400d2882:	f01d      	retw.n

400d2884 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2884:	006136        	entry	a1, 48
400d2887:	017d      	mov.n	a7, a1
400d2889:	47cb      	addi.n	a4, a7, 12
400d288b:	0429      	s32i.n	a2, a4, 0
400d288d:	278b      	addi.n	a2, a7, 8
400d288f:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2891:	378b      	addi.n	a3, a7, 8
400d2893:	27cb      	addi.n	a2, a7, 12
400d2895:	03b8      	l32i.n	a11, a3, 0
400d2897:	02a8      	l32i.n	a10, a2, 0
400d2899:	005125        	call8	400d2dac <std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)>
400d289c:	27cb      	addi.n	a2, a7, 12
400d289e:	0228      	l32i.n	a2, a2, 0
400d28a0:	030c      	movi.n	a3, 0
400d28a2:	0239      	s32i.n	a3, a2, 0
400d28a4:	27cb      	addi.n	a2, a7, 12
400d28a6:	0228      	l32i.n	a2, a2, 0
400d28a8:	030c      	movi.n	a3, 0
400d28aa:	1239      	s32i.n	a3, a2, 4
400d28ac:	27cb      	addi.n	a2, a7, 12
400d28ae:	0228      	l32i.n	a2, a2, 0
400d28b0:	030c      	movi.n	a3, 0
400d28b2:	2239      	s32i.n	a3, a2, 8
	{ }
400d28b4:	f03d      	nop.n
400d28b6:	f01d      	retw.n

400d28b8 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d28b8:	006136        	entry	a1, 48
400d28bb:	017d      	mov.n	a7, a1
400d28bd:	47cb      	addi.n	a4, a7, 12
400d28bf:	0429      	s32i.n	a2, a4, 0
400d28c1:	278b      	addi.n	a2, a7, 8
400d28c3:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d28c5:	378b      	addi.n	a3, a7, 8
400d28c7:	27cb      	addi.n	a2, a7, 12
400d28c9:	03b8      	l32i.n	a11, a3, 0
400d28cb:	02a8      	l32i.n	a10, a2, 0
400d28cd:	004fa5        	call8	400d2dc8 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)>
400d28d0:	0a3d      	mov.n	a3, a10
400d28d2:	27cb      	addi.n	a2, a7, 12
400d28d4:	0228      	l32i.n	a2, a2, 0
400d28d6:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d28d8:	27cb      	addi.n	a2, a7, 12
400d28da:	0228      	l32i.n	a2, a2, 0
400d28dc:	0238      	l32i.n	a3, a2, 0
400d28de:	27cb      	addi.n	a2, a7, 12
400d28e0:	0228      	l32i.n	a2, a2, 0
400d28e2:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d28e4:	27cb      	addi.n	a2, a7, 12
400d28e6:	0228      	l32i.n	a2, a2, 0
400d28e8:	0238      	l32i.n	a3, a2, 0
400d28ea:	278b      	addi.n	a2, a7, 8
400d28ec:	0228      	l32i.n	a2, a2, 0
400d28ee:	332a      	add.n	a3, a3, a2
400d28f0:	27cb      	addi.n	a2, a7, 12
400d28f2:	0228      	l32i.n	a2, a2, 0
400d28f4:	2239      	s32i.n	a3, a2, 8
      }
400d28f6:	f03d      	nop.n
400d28f8:	f01d      	retw.n
	...

400d28fc <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d28fc:	006136        	entry	a1, 48
400d28ff:	017d      	mov.n	a7, a1
400d2901:	57cb      	addi.n	a5, a7, 12
400d2903:	0529      	s32i.n	a2, a5, 0
400d2905:	278b      	addi.n	a2, a7, 8
400d2907:	0239      	s32i.n	a3, a2, 0
400d2909:	274b      	addi.n	a2, a7, 4
400d290b:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d290d:	278b      	addi.n	a2, a7, 8
400d290f:	0228      	l32i.n	a2, a2, 0
400d2911:	f28c      	beqz.n	a2, 400d2924 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2913:	27cb      	addi.n	a2, a7, 12
400d2915:	0228      	l32i.n	a2, a2, 0
400d2917:	474b      	addi.n	a4, a7, 4
400d2919:	378b      	addi.n	a3, a7, 8
400d291b:	04c8      	l32i.n	a12, a4, 0
400d291d:	03b8      	l32i.n	a11, a3, 0
400d291f:	02ad      	mov.n	a10, a2
400d2921:	004d25        	call8	400d2df4 <std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned int)>
      }
400d2924:	f03d      	nop.n
400d2926:	f01d      	retw.n

400d2928 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>:
	}
    }

  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2928:	006136        	entry	a1, 48
400d292b:	017d      	mov.n	a7, a1
400d292d:	57cb      	addi.n	a5, a7, 12
400d292f:	0529      	s32i.n	a2, a5, 0
400d2931:	278b      	addi.n	a2, a7, 8
400d2933:	0239      	s32i.n	a3, a2, 0
400d2935:	274b      	addi.n	a2, a7, 4
400d2937:	0249      	s32i.n	a4, a2, 0
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
400d2939:	378b      	addi.n	a3, a7, 8
400d293b:	27cb      	addi.n	a2, a7, 12
400d293d:	03b8      	l32i.n	a11, a3, 0
400d293f:	02a8      	l32i.n	a10, a2, 0
400d2941:	004d65        	call8	400d2e18 <unsigned char* std::__uninitialized_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>
400d2944:	0a2d      	mov.n	a2, a10
400d2946:	f01d      	retw.n

400d2948 <void std::_Destroy<unsigned char*>(unsigned char*, unsigned char*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2948:	006136        	entry	a1, 48
400d294b:	017d      	mov.n	a7, a1
400d294d:	47cb      	addi.n	a4, a7, 12
400d294f:	0429      	s32i.n	a2, a4, 0
400d2951:	278b      	addi.n	a2, a7, 8
400d2953:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2955:	378b      	addi.n	a3, a7, 8
400d2957:	27cb      	addi.n	a2, a7, 12
400d2959:	03b8      	l32i.n	a11, a3, 0
400d295b:	02a8      	l32i.n	a10, a2, 0
400d295d:	195765        	call8	400ebed4 <void std::_Destroy_aux<true>::__destroy<unsigned char*>(unsigned char*, unsigned char*)>
    }
400d2960:	f03d      	nop.n
400d2962:	f01d      	retw.n

400d2964 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::_Vector_impl(std::allocator<unsigned short> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2964:	006136        	entry	a1, 48
400d2967:	017d      	mov.n	a7, a1
400d2969:	47cb      	addi.n	a4, a7, 12
400d296b:	0429      	s32i.n	a2, a4, 0
400d296d:	278b      	addi.n	a2, a7, 8
400d296f:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2971:	378b      	addi.n	a3, a7, 8
400d2973:	27cb      	addi.n	a2, a7, 12
400d2975:	03b8      	l32i.n	a11, a3, 0
400d2977:	02a8      	l32i.n	a10, a2, 0
400d2979:	004c25        	call8	400d2e3c <std::allocator<unsigned short>::allocator(std::allocator<unsigned short> const&)>
400d297c:	27cb      	addi.n	a2, a7, 12
400d297e:	0228      	l32i.n	a2, a2, 0
400d2980:	030c      	movi.n	a3, 0
400d2982:	0239      	s32i.n	a3, a2, 0
400d2984:	27cb      	addi.n	a2, a7, 12
400d2986:	0228      	l32i.n	a2, a2, 0
400d2988:	030c      	movi.n	a3, 0
400d298a:	1239      	s32i.n	a3, a2, 4
400d298c:	27cb      	addi.n	a2, a7, 12
400d298e:	0228      	l32i.n	a2, a2, 0
400d2990:	030c      	movi.n	a3, 0
400d2992:	2239      	s32i.n	a3, a2, 8
	{ }
400d2994:	f03d      	nop.n
400d2996:	f01d      	retw.n

400d2998 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2998:	006136        	entry	a1, 48
400d299b:	017d      	mov.n	a7, a1
400d299d:	47cb      	addi.n	a4, a7, 12
400d299f:	0429      	s32i.n	a2, a4, 0
400d29a1:	278b      	addi.n	a2, a7, 8
400d29a3:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d29a5:	378b      	addi.n	a3, a7, 8
400d29a7:	27cb      	addi.n	a2, a7, 12
400d29a9:	03b8      	l32i.n	a11, a3, 0
400d29ab:	02a8      	l32i.n	a10, a2, 0
400d29ad:	004aa5        	call8	400d2e58 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)>
400d29b0:	0a3d      	mov.n	a3, a10
400d29b2:	27cb      	addi.n	a2, a7, 12
400d29b4:	0228      	l32i.n	a2, a2, 0
400d29b6:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d29b8:	27cb      	addi.n	a2, a7, 12
400d29ba:	0228      	l32i.n	a2, a2, 0
400d29bc:	0238      	l32i.n	a3, a2, 0
400d29be:	27cb      	addi.n	a2, a7, 12
400d29c0:	0228      	l32i.n	a2, a2, 0
400d29c2:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d29c4:	27cb      	addi.n	a2, a7, 12
400d29c6:	0228      	l32i.n	a2, a2, 0
400d29c8:	0238      	l32i.n	a3, a2, 0
400d29ca:	278b      	addi.n	a2, a7, 8
400d29cc:	0228      	l32i.n	a2, a2, 0
400d29ce:	1122f0        	slli	a2, a2, 1
400d29d1:	332a      	add.n	a3, a3, a2
400d29d3:	27cb      	addi.n	a2, a7, 12
400d29d5:	0228      	l32i.n	a2, a2, 0
400d29d7:	2239      	s32i.n	a3, a2, 8
      }
400d29d9:	f03d      	nop.n
400d29db:	f01d      	retw.n
400d29dd:	000000        	ill

400d29e0 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d29e0:	006136        	entry	a1, 48
400d29e3:	017d      	mov.n	a7, a1
400d29e5:	57cb      	addi.n	a5, a7, 12
400d29e7:	0529      	s32i.n	a2, a5, 0
400d29e9:	278b      	addi.n	a2, a7, 8
400d29eb:	0239      	s32i.n	a3, a2, 0
400d29ed:	274b      	addi.n	a2, a7, 4
400d29ef:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d29f1:	278b      	addi.n	a2, a7, 8
400d29f3:	0228      	l32i.n	a2, a2, 0
400d29f5:	f28c      	beqz.n	a2, 400d2a08 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d29f7:	27cb      	addi.n	a2, a7, 12
400d29f9:	0228      	l32i.n	a2, a2, 0
400d29fb:	474b      	addi.n	a4, a7, 4
400d29fd:	378b      	addi.n	a3, a7, 8
400d29ff:	04c8      	l32i.n	a12, a4, 0
400d2a01:	03b8      	l32i.n	a11, a3, 0
400d2a03:	02ad      	mov.n	a10, a2
400d2a05:	0047e5        	call8	400d2e84 <std::allocator_traits<std::allocator<unsigned short> >::deallocate(std::allocator<unsigned short>&, unsigned short*, unsigned int)>
      }
400d2a08:	f03d      	nop.n
400d2a0a:	f01d      	retw.n

400d2a0c <unsigned short* std::__uninitialized_default_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, std::allocator<unsigned short>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2a0c:	006136        	entry	a1, 48
400d2a0f:	017d      	mov.n	a7, a1
400d2a11:	57cb      	addi.n	a5, a7, 12
400d2a13:	0529      	s32i.n	a2, a5, 0
400d2a15:	278b      	addi.n	a2, a7, 8
400d2a17:	0239      	s32i.n	a3, a2, 0
400d2a19:	274b      	addi.n	a2, a7, 4
400d2a1b:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2a1d:	378b      	addi.n	a3, a7, 8
400d2a1f:	27cb      	addi.n	a2, a7, 12
400d2a21:	03b8      	l32i.n	a11, a3, 0
400d2a23:	02a8      	l32i.n	a10, a2, 0
400d2a25:	004825        	call8	400d2ea8 <unsigned short* std::__uninitialized_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>
400d2a28:	0a2d      	mov.n	a2, a10
400d2a2a:	f01d      	retw.n

400d2a2c <void std::_Destroy<unsigned short*>(unsigned short*, unsigned short*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2a2c:	006136        	entry	a1, 48
400d2a2f:	017d      	mov.n	a7, a1
400d2a31:	47cb      	addi.n	a4, a7, 12
400d2a33:	0429      	s32i.n	a2, a4, 0
400d2a35:	278b      	addi.n	a2, a7, 8
400d2a37:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2a39:	378b      	addi.n	a3, a7, 8
400d2a3b:	27cb      	addi.n	a2, a7, 12
400d2a3d:	03b8      	l32i.n	a11, a3, 0
400d2a3f:	02a8      	l32i.n	a10, a2, 0
400d2a41:	194a65        	call8	400ebee8 <void std::_Destroy_aux<true>::__destroy<unsigned short*>(unsigned short*, unsigned short*)>
    }
400d2a44:	f03d      	nop.n
400d2a46:	f01d      	retw.n

400d2a48 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2a48:	006136        	entry	a1, 48
400d2a4b:	017d      	mov.n	a7, a1
400d2a4d:	47cb      	addi.n	a4, a7, 12
400d2a4f:	0429      	s32i.n	a2, a4, 0
400d2a51:	278b      	addi.n	a2, a7, 8
400d2a53:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2a55:	378b      	addi.n	a3, a7, 8
400d2a57:	27cb      	addi.n	a2, a7, 12
400d2a59:	03b8      	l32i.n	a11, a3, 0
400d2a5b:	02a8      	l32i.n	a10, a2, 0
400d2a5d:	0046e5        	call8	400d2ecc <std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&)>
400d2a60:	27cb      	addi.n	a2, a7, 12
400d2a62:	0228      	l32i.n	a2, a2, 0
400d2a64:	030c      	movi.n	a3, 0
400d2a66:	0239      	s32i.n	a3, a2, 0
400d2a68:	27cb      	addi.n	a2, a7, 12
400d2a6a:	0228      	l32i.n	a2, a2, 0
400d2a6c:	030c      	movi.n	a3, 0
400d2a6e:	1239      	s32i.n	a3, a2, 4
400d2a70:	27cb      	addi.n	a2, a7, 12
400d2a72:	0228      	l32i.n	a2, a2, 0
400d2a74:	030c      	movi.n	a3, 0
400d2a76:	2239      	s32i.n	a3, a2, 8
	{ }
400d2a78:	f03d      	nop.n
400d2a7a:	f01d      	retw.n

400d2a7c <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2a7c:	006136        	entry	a1, 48
400d2a7f:	017d      	mov.n	a7, a1
400d2a81:	47cb      	addi.n	a4, a7, 12
400d2a83:	0429      	s32i.n	a2, a4, 0
400d2a85:	278b      	addi.n	a2, a7, 8
400d2a87:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2a89:	378b      	addi.n	a3, a7, 8
400d2a8b:	27cb      	addi.n	a2, a7, 12
400d2a8d:	03b8      	l32i.n	a11, a3, 0
400d2a8f:	02a8      	l32i.n	a10, a2, 0
400d2a91:	004565        	call8	400d2ee8 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)>
400d2a94:	0a3d      	mov.n	a3, a10
400d2a96:	27cb      	addi.n	a2, a7, 12
400d2a98:	0228      	l32i.n	a2, a2, 0
400d2a9a:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2a9c:	27cb      	addi.n	a2, a7, 12
400d2a9e:	0228      	l32i.n	a2, a2, 0
400d2aa0:	0238      	l32i.n	a3, a2, 0
400d2aa2:	27cb      	addi.n	a2, a7, 12
400d2aa4:	0228      	l32i.n	a2, a2, 0
400d2aa6:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2aa8:	27cb      	addi.n	a2, a7, 12
400d2aaa:	0228      	l32i.n	a2, a2, 0
400d2aac:	0238      	l32i.n	a3, a2, 0
400d2aae:	278b      	addi.n	a2, a7, 8
400d2ab0:	0228      	l32i.n	a2, a2, 0
400d2ab2:	1122e0        	slli	a2, a2, 2
400d2ab5:	332a      	add.n	a3, a3, a2
400d2ab7:	27cb      	addi.n	a2, a7, 12
400d2ab9:	0228      	l32i.n	a2, a2, 0
400d2abb:	2239      	s32i.n	a3, a2, 8
      }
400d2abd:	f03d      	nop.n
400d2abf:	f01d      	retw.n
400d2ac1:	000000        	ill

400d2ac4 <unsigned int* std::__uninitialized_default_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, std::allocator<unsigned int>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2ac4:	006136        	entry	a1, 48
400d2ac7:	017d      	mov.n	a7, a1
400d2ac9:	57cb      	addi.n	a5, a7, 12
400d2acb:	0529      	s32i.n	a2, a5, 0
400d2acd:	278b      	addi.n	a2, a7, 8
400d2acf:	0239      	s32i.n	a3, a2, 0
400d2ad1:	274b      	addi.n	a2, a7, 4
400d2ad3:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2ad5:	378b      	addi.n	a3, a7, 8
400d2ad7:	27cb      	addi.n	a2, a7, 12
400d2ad9:	03b8      	l32i.n	a11, a3, 0
400d2adb:	02a8      	l32i.n	a10, a2, 0
400d2add:	004365        	call8	400d2f14 <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>
400d2ae0:	0a2d      	mov.n	a2, a10
400d2ae2:	f01d      	retw.n

400d2ae4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::_Vector_impl(std::allocator<unsigned long long> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2ae4:	006136        	entry	a1, 48
400d2ae7:	017d      	mov.n	a7, a1
400d2ae9:	47cb      	addi.n	a4, a7, 12
400d2aeb:	0429      	s32i.n	a2, a4, 0
400d2aed:	278b      	addi.n	a2, a7, 8
400d2aef:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2af1:	378b      	addi.n	a3, a7, 8
400d2af3:	27cb      	addi.n	a2, a7, 12
400d2af5:	03b8      	l32i.n	a11, a3, 0
400d2af7:	02a8      	l32i.n	a10, a2, 0
400d2af9:	0043e5        	call8	400d2f38 <std::allocator<unsigned long long>::allocator(std::allocator<unsigned long long> const&)>
400d2afc:	27cb      	addi.n	a2, a7, 12
400d2afe:	0228      	l32i.n	a2, a2, 0
400d2b00:	030c      	movi.n	a3, 0
400d2b02:	0239      	s32i.n	a3, a2, 0
400d2b04:	27cb      	addi.n	a2, a7, 12
400d2b06:	0228      	l32i.n	a2, a2, 0
400d2b08:	030c      	movi.n	a3, 0
400d2b0a:	1239      	s32i.n	a3, a2, 4
400d2b0c:	27cb      	addi.n	a2, a7, 12
400d2b0e:	0228      	l32i.n	a2, a2, 0
400d2b10:	030c      	movi.n	a3, 0
400d2b12:	2239      	s32i.n	a3, a2, 8
	{ }
400d2b14:	f03d      	nop.n
400d2b16:	f01d      	retw.n

400d2b18 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2b18:	006136        	entry	a1, 48
400d2b1b:	017d      	mov.n	a7, a1
400d2b1d:	47cb      	addi.n	a4, a7, 12
400d2b1f:	0429      	s32i.n	a2, a4, 0
400d2b21:	278b      	addi.n	a2, a7, 8
400d2b23:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2b25:	378b      	addi.n	a3, a7, 8
400d2b27:	27cb      	addi.n	a2, a7, 12
400d2b29:	03b8      	l32i.n	a11, a3, 0
400d2b2b:	02a8      	l32i.n	a10, a2, 0
400d2b2d:	004265        	call8	400d2f54 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)>
400d2b30:	0a3d      	mov.n	a3, a10
400d2b32:	27cb      	addi.n	a2, a7, 12
400d2b34:	0228      	l32i.n	a2, a2, 0
400d2b36:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2b38:	27cb      	addi.n	a2, a7, 12
400d2b3a:	0228      	l32i.n	a2, a2, 0
400d2b3c:	0238      	l32i.n	a3, a2, 0
400d2b3e:	27cb      	addi.n	a2, a7, 12
400d2b40:	0228      	l32i.n	a2, a2, 0
400d2b42:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2b44:	27cb      	addi.n	a2, a7, 12
400d2b46:	0228      	l32i.n	a2, a2, 0
400d2b48:	0238      	l32i.n	a3, a2, 0
400d2b4a:	278b      	addi.n	a2, a7, 8
400d2b4c:	0228      	l32i.n	a2, a2, 0
400d2b4e:	1122d0        	slli	a2, a2, 3
400d2b51:	332a      	add.n	a3, a3, a2
400d2b53:	27cb      	addi.n	a2, a7, 12
400d2b55:	0228      	l32i.n	a2, a2, 0
400d2b57:	2239      	s32i.n	a3, a2, 8
      }
400d2b59:	f03d      	nop.n
400d2b5b:	f01d      	retw.n
400d2b5d:	000000        	ill

400d2b60 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2b60:	006136        	entry	a1, 48
400d2b63:	017d      	mov.n	a7, a1
400d2b65:	57cb      	addi.n	a5, a7, 12
400d2b67:	0529      	s32i.n	a2, a5, 0
400d2b69:	278b      	addi.n	a2, a7, 8
400d2b6b:	0239      	s32i.n	a3, a2, 0
400d2b6d:	274b      	addi.n	a2, a7, 4
400d2b6f:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2b71:	278b      	addi.n	a2, a7, 8
400d2b73:	0228      	l32i.n	a2, a2, 0
400d2b75:	f28c      	beqz.n	a2, 400d2b88 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2b77:	27cb      	addi.n	a2, a7, 12
400d2b79:	0228      	l32i.n	a2, a2, 0
400d2b7b:	474b      	addi.n	a4, a7, 4
400d2b7d:	378b      	addi.n	a3, a7, 8
400d2b7f:	04c8      	l32i.n	a12, a4, 0
400d2b81:	03b8      	l32i.n	a11, a3, 0
400d2b83:	02ad      	mov.n	a10, a2
400d2b85:	003fa5        	call8	400d2f80 <std::allocator_traits<std::allocator<unsigned long long> >::deallocate(std::allocator<unsigned long long>&, unsigned long long*, unsigned int)>
      }
400d2b88:	f03d      	nop.n
400d2b8a:	f01d      	retw.n

400d2b8c <unsigned long long* std::__uninitialized_default_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, std::allocator<unsigned long long>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2b8c:	006136        	entry	a1, 48
400d2b8f:	017d      	mov.n	a7, a1
400d2b91:	57cb      	addi.n	a5, a7, 12
400d2b93:	0529      	s32i.n	a2, a5, 0
400d2b95:	278b      	addi.n	a2, a7, 8
400d2b97:	0239      	s32i.n	a3, a2, 0
400d2b99:	274b      	addi.n	a2, a7, 4
400d2b9b:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2b9d:	378b      	addi.n	a3, a7, 8
400d2b9f:	27cb      	addi.n	a2, a7, 12
400d2ba1:	03b8      	l32i.n	a11, a3, 0
400d2ba3:	02a8      	l32i.n	a10, a2, 0
400d2ba5:	003fe5        	call8	400d2fa4 <unsigned long long* std::__uninitialized_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>
400d2ba8:	0a2d      	mov.n	a2, a10
400d2baa:	f01d      	retw.n

400d2bac <void std::_Destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2bac:	006136        	entry	a1, 48
400d2baf:	017d      	mov.n	a7, a1
400d2bb1:	47cb      	addi.n	a4, a7, 12
400d2bb3:	0429      	s32i.n	a2, a4, 0
400d2bb5:	278b      	addi.n	a2, a7, 8
400d2bb7:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2bb9:	378b      	addi.n	a3, a7, 8
400d2bbb:	27cb      	addi.n	a2, a7, 12
400d2bbd:	03b8      	l32i.n	a11, a3, 0
400d2bbf:	02a8      	l32i.n	a10, a2, 0
400d2bc1:	1933a5        	call8	400ebefc <void std::_Destroy_aux<true>::__destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>
    }
400d2bc4:	f03d      	nop.n
400d2bc6:	f01d      	retw.n

400d2bc8 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2bc8:	006136        	entry	a1, 48
400d2bcb:	017d      	mov.n	a7, a1
400d2bcd:	47cb      	addi.n	a4, a7, 12
400d2bcf:	0429      	s32i.n	a2, a4, 0
400d2bd1:	278b      	addi.n	a2, a7, 8
400d2bd3:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2bd5:	378b      	addi.n	a3, a7, 8
400d2bd7:	27cb      	addi.n	a2, a7, 12
400d2bd9:	03b8      	l32i.n	a11, a3, 0
400d2bdb:	02a8      	l32i.n	a10, a2, 0
400d2bdd:	003ea5        	call8	400d2fc8 <std::allocator<float>::allocator(std::allocator<float> const&)>
400d2be0:	27cb      	addi.n	a2, a7, 12
400d2be2:	0228      	l32i.n	a2, a2, 0
400d2be4:	030c      	movi.n	a3, 0
400d2be6:	0239      	s32i.n	a3, a2, 0
400d2be8:	27cb      	addi.n	a2, a7, 12
400d2bea:	0228      	l32i.n	a2, a2, 0
400d2bec:	030c      	movi.n	a3, 0
400d2bee:	1239      	s32i.n	a3, a2, 4
400d2bf0:	27cb      	addi.n	a2, a7, 12
400d2bf2:	0228      	l32i.n	a2, a2, 0
400d2bf4:	030c      	movi.n	a3, 0
400d2bf6:	2239      	s32i.n	a3, a2, 8
	{ }
400d2bf8:	f03d      	nop.n
400d2bfa:	f01d      	retw.n

400d2bfc <std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2bfc:	006136        	entry	a1, 48
400d2bff:	017d      	mov.n	a7, a1
400d2c01:	47cb      	addi.n	a4, a7, 12
400d2c03:	0429      	s32i.n	a2, a4, 0
400d2c05:	278b      	addi.n	a2, a7, 8
400d2c07:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2c09:	378b      	addi.n	a3, a7, 8
400d2c0b:	27cb      	addi.n	a2, a7, 12
400d2c0d:	03b8      	l32i.n	a11, a3, 0
400d2c0f:	02a8      	l32i.n	a10, a2, 0
400d2c11:	003d25        	call8	400d2fe4 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)>
400d2c14:	0a3d      	mov.n	a3, a10
400d2c16:	27cb      	addi.n	a2, a7, 12
400d2c18:	0228      	l32i.n	a2, a2, 0
400d2c1a:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2c1c:	27cb      	addi.n	a2, a7, 12
400d2c1e:	0228      	l32i.n	a2, a2, 0
400d2c20:	0238      	l32i.n	a3, a2, 0
400d2c22:	27cb      	addi.n	a2, a7, 12
400d2c24:	0228      	l32i.n	a2, a2, 0
400d2c26:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2c28:	27cb      	addi.n	a2, a7, 12
400d2c2a:	0228      	l32i.n	a2, a2, 0
400d2c2c:	0238      	l32i.n	a3, a2, 0
400d2c2e:	278b      	addi.n	a2, a7, 8
400d2c30:	0228      	l32i.n	a2, a2, 0
400d2c32:	1122e0        	slli	a2, a2, 2
400d2c35:	332a      	add.n	a3, a3, a2
400d2c37:	27cb      	addi.n	a2, a7, 12
400d2c39:	0228      	l32i.n	a2, a2, 0
400d2c3b:	2239      	s32i.n	a3, a2, 8
      }
400d2c3d:	f03d      	nop.n
400d2c3f:	f01d      	retw.n
400d2c41:	000000        	ill

400d2c44 <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2c44:	006136        	entry	a1, 48
400d2c47:	017d      	mov.n	a7, a1
400d2c49:	57cb      	addi.n	a5, a7, 12
400d2c4b:	0529      	s32i.n	a2, a5, 0
400d2c4d:	278b      	addi.n	a2, a7, 8
400d2c4f:	0239      	s32i.n	a3, a2, 0
400d2c51:	274b      	addi.n	a2, a7, 4
400d2c53:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2c55:	278b      	addi.n	a2, a7, 8
400d2c57:	0228      	l32i.n	a2, a2, 0
400d2c59:	f28c      	beqz.n	a2, 400d2c6c <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2c5b:	27cb      	addi.n	a2, a7, 12
400d2c5d:	0228      	l32i.n	a2, a2, 0
400d2c5f:	474b      	addi.n	a4, a7, 4
400d2c61:	378b      	addi.n	a3, a7, 8
400d2c63:	04c8      	l32i.n	a12, a4, 0
400d2c65:	03b8      	l32i.n	a11, a3, 0
400d2c67:	02ad      	mov.n	a10, a2
400d2c69:	003a65        	call8	400d3010 <std::allocator_traits<std::allocator<float> >::deallocate(std::allocator<float>&, float*, unsigned int)>
      }
400d2c6c:	f03d      	nop.n
400d2c6e:	f01d      	retw.n

400d2c70 <float* std::__uninitialized_default_n_a<float*, unsigned int, float>(float*, unsigned int, std::allocator<float>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2c70:	006136        	entry	a1, 48
400d2c73:	017d      	mov.n	a7, a1
400d2c75:	57cb      	addi.n	a5, a7, 12
400d2c77:	0529      	s32i.n	a2, a5, 0
400d2c79:	278b      	addi.n	a2, a7, 8
400d2c7b:	0239      	s32i.n	a3, a2, 0
400d2c7d:	274b      	addi.n	a2, a7, 4
400d2c7f:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2c81:	378b      	addi.n	a3, a7, 8
400d2c83:	27cb      	addi.n	a2, a7, 12
400d2c85:	03b8      	l32i.n	a11, a3, 0
400d2c87:	02a8      	l32i.n	a10, a2, 0
400d2c89:	003aa5        	call8	400d3034 <float* std::__uninitialized_default_n<float*, unsigned int>(float*, unsigned int)>
400d2c8c:	0a2d      	mov.n	a2, a10
400d2c8e:	f01d      	retw.n

400d2c90 <void std::_Destroy<float*>(float*, float*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2c90:	006136        	entry	a1, 48
400d2c93:	017d      	mov.n	a7, a1
400d2c95:	47cb      	addi.n	a4, a7, 12
400d2c97:	0429      	s32i.n	a2, a4, 0
400d2c99:	278b      	addi.n	a2, a7, 8
400d2c9b:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2c9d:	378b      	addi.n	a3, a7, 8
400d2c9f:	27cb      	addi.n	a2, a7, 12
400d2ca1:	03b8      	l32i.n	a11, a3, 0
400d2ca3:	02a8      	l32i.n	a10, a2, 0
400d2ca5:	1926a5        	call8	400ebf10 <void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)>
    }
400d2ca8:	f03d      	nop.n
400d2caa:	f01d      	retw.n

400d2cac <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2cac:	006136        	entry	a1, 48
400d2caf:	017d      	mov.n	a7, a1
400d2cb1:	47cb      	addi.n	a4, a7, 12
400d2cb3:	0429      	s32i.n	a2, a4, 0
400d2cb5:	278b      	addi.n	a2, a7, 8
400d2cb7:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2cb9:	378b      	addi.n	a3, a7, 8
400d2cbb:	27cb      	addi.n	a2, a7, 12
400d2cbd:	03b8      	l32i.n	a11, a3, 0
400d2cbf:	02a8      	l32i.n	a10, a2, 0
400d2cc1:	003965        	call8	400d3058 <std::allocator<double>::allocator(std::allocator<double> const&)>
400d2cc4:	27cb      	addi.n	a2, a7, 12
400d2cc6:	0228      	l32i.n	a2, a2, 0
400d2cc8:	030c      	movi.n	a3, 0
400d2cca:	0239      	s32i.n	a3, a2, 0
400d2ccc:	27cb      	addi.n	a2, a7, 12
400d2cce:	0228      	l32i.n	a2, a2, 0
400d2cd0:	030c      	movi.n	a3, 0
400d2cd2:	1239      	s32i.n	a3, a2, 4
400d2cd4:	27cb      	addi.n	a2, a7, 12
400d2cd6:	0228      	l32i.n	a2, a2, 0
400d2cd8:	030c      	movi.n	a3, 0
400d2cda:	2239      	s32i.n	a3, a2, 8
	{ }
400d2cdc:	f03d      	nop.n
400d2cde:	f01d      	retw.n

400d2ce0 <std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2ce0:	006136        	entry	a1, 48
400d2ce3:	017d      	mov.n	a7, a1
400d2ce5:	47cb      	addi.n	a4, a7, 12
400d2ce7:	0429      	s32i.n	a2, a4, 0
400d2ce9:	278b      	addi.n	a2, a7, 8
400d2ceb:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2ced:	378b      	addi.n	a3, a7, 8
400d2cef:	27cb      	addi.n	a2, a7, 12
400d2cf1:	03b8      	l32i.n	a11, a3, 0
400d2cf3:	02a8      	l32i.n	a10, a2, 0
400d2cf5:	0037e5        	call8	400d3074 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)>
400d2cf8:	0a3d      	mov.n	a3, a10
400d2cfa:	27cb      	addi.n	a2, a7, 12
400d2cfc:	0228      	l32i.n	a2, a2, 0
400d2cfe:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2d00:	27cb      	addi.n	a2, a7, 12
400d2d02:	0228      	l32i.n	a2, a2, 0
400d2d04:	0238      	l32i.n	a3, a2, 0
400d2d06:	27cb      	addi.n	a2, a7, 12
400d2d08:	0228      	l32i.n	a2, a2, 0
400d2d0a:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2d0c:	27cb      	addi.n	a2, a7, 12
400d2d0e:	0228      	l32i.n	a2, a2, 0
400d2d10:	0238      	l32i.n	a3, a2, 0
400d2d12:	278b      	addi.n	a2, a7, 8
400d2d14:	0228      	l32i.n	a2, a2, 0
400d2d16:	1122d0        	slli	a2, a2, 3
400d2d19:	332a      	add.n	a3, a3, a2
400d2d1b:	27cb      	addi.n	a2, a7, 12
400d2d1d:	0228      	l32i.n	a2, a2, 0
400d2d1f:	2239      	s32i.n	a3, a2, 8
      }
400d2d21:	f03d      	nop.n
400d2d23:	f01d      	retw.n
400d2d25:	000000        	ill

400d2d28 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2d28:	006136        	entry	a1, 48
400d2d2b:	017d      	mov.n	a7, a1
400d2d2d:	57cb      	addi.n	a5, a7, 12
400d2d2f:	0529      	s32i.n	a2, a5, 0
400d2d31:	278b      	addi.n	a2, a7, 8
400d2d33:	0239      	s32i.n	a3, a2, 0
400d2d35:	274b      	addi.n	a2, a7, 4
400d2d37:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2d39:	278b      	addi.n	a2, a7, 8
400d2d3b:	0228      	l32i.n	a2, a2, 0
400d2d3d:	f28c      	beqz.n	a2, 400d2d50 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2d3f:	27cb      	addi.n	a2, a7, 12
400d2d41:	0228      	l32i.n	a2, a2, 0
400d2d43:	474b      	addi.n	a4, a7, 4
400d2d45:	378b      	addi.n	a3, a7, 8
400d2d47:	04c8      	l32i.n	a12, a4, 0
400d2d49:	03b8      	l32i.n	a11, a3, 0
400d2d4b:	02ad      	mov.n	a10, a2
400d2d4d:	003525        	call8	400d30a0 <std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned int)>
      }
400d2d50:	f03d      	nop.n
400d2d52:	f01d      	retw.n

400d2d54 <double* std::__uninitialized_default_n_a<double*, unsigned int, double>(double*, unsigned int, std::allocator<double>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2d54:	006136        	entry	a1, 48
400d2d57:	017d      	mov.n	a7, a1
400d2d59:	57cb      	addi.n	a5, a7, 12
400d2d5b:	0529      	s32i.n	a2, a5, 0
400d2d5d:	278b      	addi.n	a2, a7, 8
400d2d5f:	0239      	s32i.n	a3, a2, 0
400d2d61:	274b      	addi.n	a2, a7, 4
400d2d63:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2d65:	378b      	addi.n	a3, a7, 8
400d2d67:	27cb      	addi.n	a2, a7, 12
400d2d69:	03b8      	l32i.n	a11, a3, 0
400d2d6b:	02a8      	l32i.n	a10, a2, 0
400d2d6d:	003565        	call8	400d30c4 <double* std::__uninitialized_default_n<double*, unsigned int>(double*, unsigned int)>
400d2d70:	0a2d      	mov.n	a2, a10
400d2d72:	f01d      	retw.n

400d2d74 <void std::_Destroy<double*>(double*, double*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2d74:	006136        	entry	a1, 48
400d2d77:	017d      	mov.n	a7, a1
400d2d79:	47cb      	addi.n	a4, a7, 12
400d2d7b:	0429      	s32i.n	a2, a4, 0
400d2d7d:	278b      	addi.n	a2, a7, 8
400d2d7f:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2d81:	378b      	addi.n	a3, a7, 8
400d2d83:	27cb      	addi.n	a2, a7, 12
400d2d85:	03b8      	l32i.n	a11, a3, 0
400d2d87:	02a8      	l32i.n	a10, a2, 0
400d2d89:	1919a5        	call8	400ebf24 <void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)>
    }
400d2d8c:	f03d      	nop.n
400d2d8e:	f01d      	retw.n

400d2d90 <__gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned int)>:
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
400d2d90:	006136        	entry	a1, 48
400d2d93:	017d      	mov.n	a7, a1
400d2d95:	57cb      	addi.n	a5, a7, 12
400d2d97:	0529      	s32i.n	a2, a5, 0
400d2d99:	278b      	addi.n	a2, a7, 8
400d2d9b:	0239      	s32i.n	a3, a2, 0
400d2d9d:	274b      	addi.n	a2, a7, 4
400d2d9f:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d2da1:	278b      	addi.n	a2, a7, 8
400d2da3:	02a8      	l32i.n	a10, a2, 0
400d2da5:	17a4a5        	call8	400ea7f0 <operator delete(void*)>
400d2da8:	f03d      	nop.n
400d2daa:	f01d      	retw.n

400d2dac <std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)>:
      allocator(const allocator& __a) throw()
400d2dac:	006136        	entry	a1, 48
400d2daf:	017d      	mov.n	a7, a1
400d2db1:	47cb      	addi.n	a4, a7, 12
400d2db3:	0429      	s32i.n	a2, a4, 0
400d2db5:	278b      	addi.n	a2, a7, 8
400d2db7:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d2db9:	378b      	addi.n	a3, a7, 8
400d2dbb:	27cb      	addi.n	a2, a7, 12
400d2dbd:	03b8      	l32i.n	a11, a3, 0
400d2dbf:	02a8      	l32i.n	a10, a2, 0
400d2dc1:	191765        	call8	400ebf38 <__gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&)>
400d2dc4:	f03d      	nop.n
400d2dc6:	f01d      	retw.n

400d2dc8 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d2dc8:	006136        	entry	a1, 48
400d2dcb:	017d      	mov.n	a7, a1
400d2dcd:	47cb      	addi.n	a4, a7, 12
400d2dcf:	0429      	s32i.n	a2, a4, 0
400d2dd1:	278b      	addi.n	a2, a7, 8
400d2dd3:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d2dd5:	278b      	addi.n	a2, a7, 8
400d2dd7:	0228      	l32i.n	a2, a2, 0
400d2dd9:	029c      	beqz.n	a2, 400d2ded <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)+0x25>
400d2ddb:	27cb      	addi.n	a2, a7, 12
400d2ddd:	0228      	l32i.n	a2, a2, 0
400d2ddf:	378b      	addi.n	a3, a7, 8
400d2de1:	03b8      	l32i.n	a11, a3, 0
400d2de3:	02ad      	mov.n	a10, a2
400d2de5:	003025        	call8	400d30e8 <std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned int)>
400d2de8:	0a2d      	mov.n	a2, a10
400d2dea:	000046        	j	400d2def <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)+0x27>
400d2ded:	020c      	movi.n	a2, 0
      }
400d2def:	f01d      	retw.n
400d2df1:	000000        	ill

400d2df4 <std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d2df4:	006136        	entry	a1, 48
400d2df7:	017d      	mov.n	a7, a1
400d2df9:	57cb      	addi.n	a5, a7, 12
400d2dfb:	0529      	s32i.n	a2, a5, 0
400d2dfd:	278b      	addi.n	a2, a7, 8
400d2dff:	0239      	s32i.n	a3, a2, 0
400d2e01:	274b      	addi.n	a2, a7, 4
400d2e03:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d2e05:	474b      	addi.n	a4, a7, 4
400d2e07:	378b      	addi.n	a3, a7, 8
400d2e09:	27cb      	addi.n	a2, a7, 12
400d2e0b:	04c8      	l32i.n	a12, a4, 0
400d2e0d:	03b8      	l32i.n	a11, a3, 0
400d2e0f:	02a8      	l32i.n	a10, a2, 0
400d2e11:	002fa5        	call8	400d310c <__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned int)>
400d2e14:	f03d      	nop.n
400d2e16:	f01d      	retw.n

400d2e18 <unsigned char* std::__uninitialized_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d2e18:	008136        	entry	a1, 64
400d2e1b:	017d      	mov.n	a7, a1
400d2e1d:	47cb      	addi.n	a4, a7, 12
400d2e1f:	0429      	s32i.n	a2, a4, 0
400d2e21:	278b      	addi.n	a2, a7, 8
400d2e23:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d2e25:	1fc722        	addi	a2, a7, 31
400d2e28:	130c      	movi.n	a3, 1
400d2e2a:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d2e2d:	378b      	addi.n	a3, a7, 8
400d2e2f:	27cb      	addi.n	a2, a7, 12
400d2e31:	03b8      	l32i.n	a11, a3, 0
400d2e33:	02a8      	l32i.n	a10, a2, 0
400d2e35:	002f25        	call8	400d3128 <unsigned char* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>
400d2e38:	0a2d      	mov.n	a2, a10
    }
400d2e3a:	f01d      	retw.n

400d2e3c <std::allocator<unsigned short>::allocator(std::allocator<unsigned short> const&)>:
      allocator(const allocator& __a) throw()
400d2e3c:	006136        	entry	a1, 48
400d2e3f:	017d      	mov.n	a7, a1
400d2e41:	47cb      	addi.n	a4, a7, 12
400d2e43:	0429      	s32i.n	a2, a4, 0
400d2e45:	278b      	addi.n	a2, a7, 8
400d2e47:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d2e49:	378b      	addi.n	a3, a7, 8
400d2e4b:	27cb      	addi.n	a2, a7, 12
400d2e4d:	03b8      	l32i.n	a11, a3, 0
400d2e4f:	02a8      	l32i.n	a10, a2, 0
400d2e51:	190fa5        	call8	400ebf4c <__gnu_cxx::new_allocator<unsigned short>::new_allocator(__gnu_cxx::new_allocator<unsigned short> const&)>
400d2e54:	f03d      	nop.n
400d2e56:	f01d      	retw.n

400d2e58 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d2e58:	006136        	entry	a1, 48
400d2e5b:	017d      	mov.n	a7, a1
400d2e5d:	47cb      	addi.n	a4, a7, 12
400d2e5f:	0429      	s32i.n	a2, a4, 0
400d2e61:	278b      	addi.n	a2, a7, 8
400d2e63:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d2e65:	278b      	addi.n	a2, a7, 8
400d2e67:	0228      	l32i.n	a2, a2, 0
400d2e69:	029c      	beqz.n	a2, 400d2e7d <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)+0x25>
400d2e6b:	27cb      	addi.n	a2, a7, 12
400d2e6d:	0228      	l32i.n	a2, a2, 0
400d2e6f:	378b      	addi.n	a3, a7, 8
400d2e71:	03b8      	l32i.n	a11, a3, 0
400d2e73:	02ad      	mov.n	a10, a2
400d2e75:	002de5        	call8	400d3154 <std::allocator_traits<std::allocator<unsigned short> >::allocate(std::allocator<unsigned short>&, unsigned int)>
400d2e78:	0a2d      	mov.n	a2, a10
400d2e7a:	000046        	j	400d2e7f <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)+0x27>
400d2e7d:	020c      	movi.n	a2, 0
      }
400d2e7f:	f01d      	retw.n
400d2e81:	000000        	ill

400d2e84 <std::allocator_traits<std::allocator<unsigned short> >::deallocate(std::allocator<unsigned short>&, unsigned short*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d2e84:	006136        	entry	a1, 48
400d2e87:	017d      	mov.n	a7, a1
400d2e89:	57cb      	addi.n	a5, a7, 12
400d2e8b:	0529      	s32i.n	a2, a5, 0
400d2e8d:	278b      	addi.n	a2, a7, 8
400d2e8f:	0239      	s32i.n	a3, a2, 0
400d2e91:	274b      	addi.n	a2, a7, 4
400d2e93:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d2e95:	474b      	addi.n	a4, a7, 4
400d2e97:	378b      	addi.n	a3, a7, 8
400d2e99:	27cb      	addi.n	a2, a7, 12
400d2e9b:	04c8      	l32i.n	a12, a4, 0
400d2e9d:	03b8      	l32i.n	a11, a3, 0
400d2e9f:	02a8      	l32i.n	a10, a2, 0
400d2ea1:	002d65        	call8	400d3178 <__gnu_cxx::new_allocator<unsigned short>::deallocate(unsigned short*, unsigned int)>
400d2ea4:	f03d      	nop.n
400d2ea6:	f01d      	retw.n

400d2ea8 <unsigned short* std::__uninitialized_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d2ea8:	008136        	entry	a1, 64
400d2eab:	017d      	mov.n	a7, a1
400d2ead:	47cb      	addi.n	a4, a7, 12
400d2eaf:	0429      	s32i.n	a2, a4, 0
400d2eb1:	278b      	addi.n	a2, a7, 8
400d2eb3:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d2eb5:	1fc722        	addi	a2, a7, 31
400d2eb8:	130c      	movi.n	a3, 1
400d2eba:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d2ebd:	378b      	addi.n	a3, a7, 8
400d2ebf:	27cb      	addi.n	a2, a7, 12
400d2ec1:	03b8      	l32i.n	a11, a3, 0
400d2ec3:	02a8      	l32i.n	a10, a2, 0
400d2ec5:	002ce5        	call8	400d3194 <unsigned short* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>
400d2ec8:	0a2d      	mov.n	a2, a10
    }
400d2eca:	f01d      	retw.n

400d2ecc <std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&)>:
      allocator(const allocator& __a) throw()
400d2ecc:	006136        	entry	a1, 48
400d2ecf:	017d      	mov.n	a7, a1
400d2ed1:	47cb      	addi.n	a4, a7, 12
400d2ed3:	0429      	s32i.n	a2, a4, 0
400d2ed5:	278b      	addi.n	a2, a7, 8
400d2ed7:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d2ed9:	378b      	addi.n	a3, a7, 8
400d2edb:	27cb      	addi.n	a2, a7, 12
400d2edd:	03b8      	l32i.n	a11, a3, 0
400d2edf:	02a8      	l32i.n	a10, a2, 0
400d2ee1:	1907e5        	call8	400ebf60 <__gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&)>
400d2ee4:	f03d      	nop.n
400d2ee6:	f01d      	retw.n

400d2ee8 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d2ee8:	006136        	entry	a1, 48
400d2eeb:	017d      	mov.n	a7, a1
400d2eed:	47cb      	addi.n	a4, a7, 12
400d2eef:	0429      	s32i.n	a2, a4, 0
400d2ef1:	278b      	addi.n	a2, a7, 8
400d2ef3:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d2ef5:	278b      	addi.n	a2, a7, 8
400d2ef7:	0228      	l32i.n	a2, a2, 0
400d2ef9:	029c      	beqz.n	a2, 400d2f0d <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)+0x25>
400d2efb:	27cb      	addi.n	a2, a7, 12
400d2efd:	0228      	l32i.n	a2, a2, 0
400d2eff:	378b      	addi.n	a3, a7, 8
400d2f01:	03b8      	l32i.n	a11, a3, 0
400d2f03:	02ad      	mov.n	a10, a2
400d2f05:	002ba5        	call8	400d31c0 <std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned int)>
400d2f08:	0a2d      	mov.n	a2, a10
400d2f0a:	000046        	j	400d2f0f <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)+0x27>
400d2f0d:	020c      	movi.n	a2, 0
      }
400d2f0f:	f01d      	retw.n
400d2f11:	000000        	ill

400d2f14 <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d2f14:	008136        	entry	a1, 64
400d2f17:	017d      	mov.n	a7, a1
400d2f19:	47cb      	addi.n	a4, a7, 12
400d2f1b:	0429      	s32i.n	a2, a4, 0
400d2f1d:	278b      	addi.n	a2, a7, 8
400d2f1f:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d2f21:	1fc722        	addi	a2, a7, 31
400d2f24:	130c      	movi.n	a3, 1
400d2f26:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d2f29:	378b      	addi.n	a3, a7, 8
400d2f2b:	27cb      	addi.n	a2, a7, 12
400d2f2d:	03b8      	l32i.n	a11, a3, 0
400d2f2f:	02a8      	l32i.n	a10, a2, 0
400d2f31:	002b25        	call8	400d31e4 <unsigned int* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>
400d2f34:	0a2d      	mov.n	a2, a10
    }
400d2f36:	f01d      	retw.n

400d2f38 <std::allocator<unsigned long long>::allocator(std::allocator<unsigned long long> const&)>:
      allocator(const allocator& __a) throw()
400d2f38:	006136        	entry	a1, 48
400d2f3b:	017d      	mov.n	a7, a1
400d2f3d:	47cb      	addi.n	a4, a7, 12
400d2f3f:	0429      	s32i.n	a2, a4, 0
400d2f41:	278b      	addi.n	a2, a7, 8
400d2f43:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d2f45:	378b      	addi.n	a3, a7, 8
400d2f47:	27cb      	addi.n	a2, a7, 12
400d2f49:	03b8      	l32i.n	a11, a3, 0
400d2f4b:	02a8      	l32i.n	a10, a2, 0
400d2f4d:	190265        	call8	400ebf74 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator(__gnu_cxx::new_allocator<unsigned long long> const&)>
400d2f50:	f03d      	nop.n
400d2f52:	f01d      	retw.n

400d2f54 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d2f54:	006136        	entry	a1, 48
400d2f57:	017d      	mov.n	a7, a1
400d2f59:	47cb      	addi.n	a4, a7, 12
400d2f5b:	0429      	s32i.n	a2, a4, 0
400d2f5d:	278b      	addi.n	a2, a7, 8
400d2f5f:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d2f61:	278b      	addi.n	a2, a7, 8
400d2f63:	0228      	l32i.n	a2, a2, 0
400d2f65:	029c      	beqz.n	a2, 400d2f79 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)+0x25>
400d2f67:	27cb      	addi.n	a2, a7, 12
400d2f69:	0228      	l32i.n	a2, a2, 0
400d2f6b:	378b      	addi.n	a3, a7, 8
400d2f6d:	03b8      	l32i.n	a11, a3, 0
400d2f6f:	02ad      	mov.n	a10, a2
400d2f71:	0029a5        	call8	400d320c <std::allocator_traits<std::allocator<unsigned long long> >::allocate(std::allocator<unsigned long long>&, unsigned int)>
400d2f74:	0a2d      	mov.n	a2, a10
400d2f76:	000046        	j	400d2f7b <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)+0x27>
400d2f79:	020c      	movi.n	a2, 0
      }
400d2f7b:	f01d      	retw.n
400d2f7d:	000000        	ill

400d2f80 <std::allocator_traits<std::allocator<unsigned long long> >::deallocate(std::allocator<unsigned long long>&, unsigned long long*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d2f80:	006136        	entry	a1, 48
400d2f83:	017d      	mov.n	a7, a1
400d2f85:	57cb      	addi.n	a5, a7, 12
400d2f87:	0529      	s32i.n	a2, a5, 0
400d2f89:	278b      	addi.n	a2, a7, 8
400d2f8b:	0239      	s32i.n	a3, a2, 0
400d2f8d:	274b      	addi.n	a2, a7, 4
400d2f8f:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d2f91:	474b      	addi.n	a4, a7, 4
400d2f93:	378b      	addi.n	a3, a7, 8
400d2f95:	27cb      	addi.n	a2, a7, 12
400d2f97:	04c8      	l32i.n	a12, a4, 0
400d2f99:	03b8      	l32i.n	a11, a3, 0
400d2f9b:	02a8      	l32i.n	a10, a2, 0
400d2f9d:	002925        	call8	400d3230 <__gnu_cxx::new_allocator<unsigned long long>::deallocate(unsigned long long*, unsigned int)>
400d2fa0:	f03d      	nop.n
400d2fa2:	f01d      	retw.n

400d2fa4 <unsigned long long* std::__uninitialized_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d2fa4:	008136        	entry	a1, 64
400d2fa7:	017d      	mov.n	a7, a1
400d2fa9:	47cb      	addi.n	a4, a7, 12
400d2fab:	0429      	s32i.n	a2, a4, 0
400d2fad:	278b      	addi.n	a2, a7, 8
400d2faf:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d2fb1:	1fc722        	addi	a2, a7, 31
400d2fb4:	130c      	movi.n	a3, 1
400d2fb6:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d2fb9:	378b      	addi.n	a3, a7, 8
400d2fbb:	27cb      	addi.n	a2, a7, 12
400d2fbd:	03b8      	l32i.n	a11, a3, 0
400d2fbf:	02a8      	l32i.n	a10, a2, 0
400d2fc1:	0028a5        	call8	400d324c <unsigned long long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>
400d2fc4:	0a2d      	mov.n	a2, a10
    }
400d2fc6:	f01d      	retw.n

400d2fc8 <std::allocator<float>::allocator(std::allocator<float> const&)>:
      allocator(const allocator& __a) throw()
400d2fc8:	006136        	entry	a1, 48
400d2fcb:	017d      	mov.n	a7, a1
400d2fcd:	47cb      	addi.n	a4, a7, 12
400d2fcf:	0429      	s32i.n	a2, a4, 0
400d2fd1:	278b      	addi.n	a2, a7, 8
400d2fd3:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d2fd5:	378b      	addi.n	a3, a7, 8
400d2fd7:	27cb      	addi.n	a2, a7, 12
400d2fd9:	03b8      	l32i.n	a11, a3, 0
400d2fdb:	02a8      	l32i.n	a10, a2, 0
400d2fdd:	18faa5        	call8	400ebf88 <__gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)>
400d2fe0:	f03d      	nop.n
400d2fe2:	f01d      	retw.n

400d2fe4 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d2fe4:	006136        	entry	a1, 48
400d2fe7:	017d      	mov.n	a7, a1
400d2fe9:	47cb      	addi.n	a4, a7, 12
400d2feb:	0429      	s32i.n	a2, a4, 0
400d2fed:	278b      	addi.n	a2, a7, 8
400d2fef:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d2ff1:	278b      	addi.n	a2, a7, 8
400d2ff3:	0228      	l32i.n	a2, a2, 0
400d2ff5:	029c      	beqz.n	a2, 400d3009 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)+0x25>
400d2ff7:	27cb      	addi.n	a2, a7, 12
400d2ff9:	0228      	l32i.n	a2, a2, 0
400d2ffb:	378b      	addi.n	a3, a7, 8
400d2ffd:	03b8      	l32i.n	a11, a3, 0
400d2fff:	02ad      	mov.n	a10, a2
400d3001:	0027e5        	call8	400d3280 <std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned int)>
400d3004:	0a2d      	mov.n	a2, a10
400d3006:	000046        	j	400d300b <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)+0x27>
400d3009:	020c      	movi.n	a2, 0
      }
400d300b:	f01d      	retw.n
400d300d:	000000        	ill

400d3010 <std::allocator_traits<std::allocator<float> >::deallocate(std::allocator<float>&, float*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d3010:	006136        	entry	a1, 48
400d3013:	017d      	mov.n	a7, a1
400d3015:	57cb      	addi.n	a5, a7, 12
400d3017:	0529      	s32i.n	a2, a5, 0
400d3019:	278b      	addi.n	a2, a7, 8
400d301b:	0239      	s32i.n	a3, a2, 0
400d301d:	274b      	addi.n	a2, a7, 4
400d301f:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d3021:	474b      	addi.n	a4, a7, 4
400d3023:	378b      	addi.n	a3, a7, 8
400d3025:	27cb      	addi.n	a2, a7, 12
400d3027:	04c8      	l32i.n	a12, a4, 0
400d3029:	03b8      	l32i.n	a11, a3, 0
400d302b:	02a8      	l32i.n	a10, a2, 0
400d302d:	002765        	call8	400d32a4 <__gnu_cxx::new_allocator<float>::deallocate(float*, unsigned int)>
400d3030:	f03d      	nop.n
400d3032:	f01d      	retw.n

400d3034 <float* std::__uninitialized_default_n<float*, unsigned int>(float*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d3034:	008136        	entry	a1, 64
400d3037:	017d      	mov.n	a7, a1
400d3039:	47cb      	addi.n	a4, a7, 12
400d303b:	0429      	s32i.n	a2, a4, 0
400d303d:	278b      	addi.n	a2, a7, 8
400d303f:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d3041:	1fc722        	addi	a2, a7, 31
400d3044:	130c      	movi.n	a3, 1
400d3046:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d3049:	378b      	addi.n	a3, a7, 8
400d304b:	27cb      	addi.n	a2, a7, 12
400d304d:	03b8      	l32i.n	a11, a3, 0
400d304f:	02a8      	l32i.n	a10, a2, 0
400d3051:	0026e5        	call8	400d32c0 <float* std::__uninitialized_default_n_1<true>::__uninit_default_n<float*, unsigned int>(float*, unsigned int)>
400d3054:	0a2d      	mov.n	a2, a10
    }
400d3056:	f01d      	retw.n

400d3058 <std::allocator<double>::allocator(std::allocator<double> const&)>:
      allocator(const allocator& __a) throw()
400d3058:	006136        	entry	a1, 48
400d305b:	017d      	mov.n	a7, a1
400d305d:	47cb      	addi.n	a4, a7, 12
400d305f:	0429      	s32i.n	a2, a4, 0
400d3061:	278b      	addi.n	a2, a7, 8
400d3063:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d3065:	378b      	addi.n	a3, a7, 8
400d3067:	27cb      	addi.n	a2, a7, 12
400d3069:	03b8      	l32i.n	a11, a3, 0
400d306b:	02a8      	l32i.n	a10, a2, 0
400d306d:	18f2e5        	call8	400ebf9c <__gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)>
400d3070:	f03d      	nop.n
400d3072:	f01d      	retw.n

400d3074 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d3074:	006136        	entry	a1, 48
400d3077:	017d      	mov.n	a7, a1
400d3079:	47cb      	addi.n	a4, a7, 12
400d307b:	0429      	s32i.n	a2, a4, 0
400d307d:	278b      	addi.n	a2, a7, 8
400d307f:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d3081:	278b      	addi.n	a2, a7, 8
400d3083:	0228      	l32i.n	a2, a2, 0
400d3085:	029c      	beqz.n	a2, 400d3099 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)+0x25>
400d3087:	27cb      	addi.n	a2, a7, 12
400d3089:	0228      	l32i.n	a2, a2, 0
400d308b:	378b      	addi.n	a3, a7, 8
400d308d:	03b8      	l32i.n	a11, a3, 0
400d308f:	02ad      	mov.n	a10, a2
400d3091:	0025a5        	call8	400d32ec <std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned int)>
400d3094:	0a2d      	mov.n	a2, a10
400d3096:	000046        	j	400d309b <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)+0x27>
400d3099:	020c      	movi.n	a2, 0
      }
400d309b:	f01d      	retw.n
400d309d:	000000        	ill

400d30a0 <std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d30a0:	006136        	entry	a1, 48
400d30a3:	017d      	mov.n	a7, a1
400d30a5:	57cb      	addi.n	a5, a7, 12
400d30a7:	0529      	s32i.n	a2, a5, 0
400d30a9:	278b      	addi.n	a2, a7, 8
400d30ab:	0239      	s32i.n	a3, a2, 0
400d30ad:	274b      	addi.n	a2, a7, 4
400d30af:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d30b1:	474b      	addi.n	a4, a7, 4
400d30b3:	378b      	addi.n	a3, a7, 8
400d30b5:	27cb      	addi.n	a2, a7, 12
400d30b7:	04c8      	l32i.n	a12, a4, 0
400d30b9:	03b8      	l32i.n	a11, a3, 0
400d30bb:	02a8      	l32i.n	a10, a2, 0
400d30bd:	002525        	call8	400d3310 <__gnu_cxx::new_allocator<double>::deallocate(double*, unsigned int)>
400d30c0:	f03d      	nop.n
400d30c2:	f01d      	retw.n

400d30c4 <double* std::__uninitialized_default_n<double*, unsigned int>(double*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d30c4:	008136        	entry	a1, 64
400d30c7:	017d      	mov.n	a7, a1
400d30c9:	47cb      	addi.n	a4, a7, 12
400d30cb:	0429      	s32i.n	a2, a4, 0
400d30cd:	278b      	addi.n	a2, a7, 8
400d30cf:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d30d1:	1fc722        	addi	a2, a7, 31
400d30d4:	130c      	movi.n	a3, 1
400d30d6:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d30d9:	378b      	addi.n	a3, a7, 8
400d30db:	27cb      	addi.n	a2, a7, 12
400d30dd:	03b8      	l32i.n	a11, a3, 0
400d30df:	02a8      	l32i.n	a10, a2, 0
400d30e1:	0024a5        	call8	400d332c <double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned int>(double*, unsigned int)>
400d30e4:	0a2d      	mov.n	a2, a10
    }
400d30e6:	f01d      	retw.n

400d30e8 <std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d30e8:	006136        	entry	a1, 48
400d30eb:	207110        	or	a7, a1, a1
400d30ee:	0cc742        	addi	a4, a7, 12
400d30f1:	006422        	s32i	a2, a4, 0
400d30f4:	278b      	addi.n	a2, a7, 8
400d30f6:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d30f8:	378b      	addi.n	a3, a7, 8
400d30fa:	27cb      	addi.n	a2, a7, 12
400d30fc:	0c0c      	movi.n	a12, 0
400d30fe:	03b8      	l32i.n	a11, a3, 0
400d3100:	02a8      	l32i.n	a10, a2, 0
400d3102:	0025e5        	call8	400d3360 <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)>
400d3105:	0a2d      	mov.n	a2, a10
400d3107:	f01d      	retw.n
400d3109:	000000        	ill

400d310c <__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d310c:	006136        	entry	a1, 48
400d310f:	017d      	mov.n	a7, a1
400d3111:	57cb      	addi.n	a5, a7, 12
400d3113:	0529      	s32i.n	a2, a5, 0
400d3115:	278b      	addi.n	a2, a7, 8
400d3117:	0239      	s32i.n	a3, a2, 0
400d3119:	274b      	addi.n	a2, a7, 4
400d311b:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d311d:	278b      	addi.n	a2, a7, 8
400d311f:	02a8      	l32i.n	a10, a2, 0
400d3121:	176ce5        	call8	400ea7f0 <operator delete(void*)>
400d3124:	f03d      	nop.n
400d3126:	f01d      	retw.n

400d3128 <unsigned char* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d3128:	008136        	entry	a1, 64
400d312b:	207110        	or	a7, a1, a1
400d312e:	0cc742        	addi	a4, a7, 12
400d3131:	006422        	s32i	a2, a4, 0
400d3134:	278b      	addi.n	a2, a7, 8
400d3136:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d3138:	1fc722        	addi	a2, a7, 31
400d313b:	030c      	movi.n	a3, 0
400d313d:	004232        	s8i	a3, a2, 0
400d3140:	1fc742        	addi	a4, a7, 31
400d3143:	378b      	addi.n	a3, a7, 8
400d3145:	27cb      	addi.n	a2, a7, 12
400d3147:	04cd      	mov.n	a12, a4
400d3149:	03b8      	l32i.n	a11, a3, 0
400d314b:	02a8      	l32i.n	a10, a2, 0
400d314d:	0024e5        	call8	400d339c <unsigned char* std::fill_n<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>
400d3150:	0a2d      	mov.n	a2, a10
	}
400d3152:	f01d      	retw.n

400d3154 <std::allocator_traits<std::allocator<unsigned short> >::allocate(std::allocator<unsigned short>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d3154:	006136        	entry	a1, 48
400d3157:	207110        	or	a7, a1, a1
400d315a:	0cc742        	addi	a4, a7, 12
400d315d:	006422        	s32i	a2, a4, 0
400d3160:	278b      	addi.n	a2, a7, 8
400d3162:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3164:	378b      	addi.n	a3, a7, 8
400d3166:	27cb      	addi.n	a2, a7, 12
400d3168:	0c0c      	movi.n	a12, 0
400d316a:	03b8      	l32i.n	a11, a3, 0
400d316c:	02a8      	l32i.n	a10, a2, 0
400d316e:	0025e5        	call8	400d33cc <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)>
400d3171:	0a2d      	mov.n	a2, a10
400d3173:	f01d      	retw.n
400d3175:	000000        	ill

400d3178 <__gnu_cxx::new_allocator<unsigned short>::deallocate(unsigned short*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d3178:	006136        	entry	a1, 48
400d317b:	017d      	mov.n	a7, a1
400d317d:	57cb      	addi.n	a5, a7, 12
400d317f:	0529      	s32i.n	a2, a5, 0
400d3181:	278b      	addi.n	a2, a7, 8
400d3183:	0239      	s32i.n	a3, a2, 0
400d3185:	274b      	addi.n	a2, a7, 4
400d3187:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d3189:	278b      	addi.n	a2, a7, 8
400d318b:	02a8      	l32i.n	a10, a2, 0
400d318d:	176625        	call8	400ea7f0 <operator delete(void*)>
400d3190:	f03d      	nop.n
400d3192:	f01d      	retw.n

400d3194 <unsigned short* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d3194:	008136        	entry	a1, 64
400d3197:	207110        	or	a7, a1, a1
400d319a:	0cc742        	addi	a4, a7, 12
400d319d:	006422        	s32i	a2, a4, 0
400d31a0:	278b      	addi.n	a2, a7, 8
400d31a2:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d31a4:	1ec722        	addi	a2, a7, 30
400d31a7:	030c      	movi.n	a3, 0
400d31a9:	005232        	s16i	a3, a2, 0
400d31ac:	1ec742        	addi	a4, a7, 30
400d31af:	378b      	addi.n	a3, a7, 8
400d31b1:	27cb      	addi.n	a2, a7, 12
400d31b3:	04cd      	mov.n	a12, a4
400d31b5:	03b8      	l32i.n	a11, a3, 0
400d31b7:	02a8      	l32i.n	a10, a2, 0
400d31b9:	002525        	call8	400d340c <unsigned short* std::fill_n<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>
400d31bc:	0a2d      	mov.n	a2, a10
	}
400d31be:	f01d      	retw.n

400d31c0 <std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d31c0:	006136        	entry	a1, 48
400d31c3:	207110        	or	a7, a1, a1
400d31c6:	0cc742        	addi	a4, a7, 12
400d31c9:	006422        	s32i	a2, a4, 0
400d31cc:	278b      	addi.n	a2, a7, 8
400d31ce:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d31d0:	378b      	addi.n	a3, a7, 8
400d31d2:	27cb      	addi.n	a2, a7, 12
400d31d4:	0c0c      	movi.n	a12, 0
400d31d6:	03b8      	l32i.n	a11, a3, 0
400d31d8:	02a8      	l32i.n	a10, a2, 0
400d31da:	002625        	call8	400d343c <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)>
400d31dd:	0a2d      	mov.n	a2, a10
400d31df:	f01d      	retw.n
400d31e1:	000000        	ill

400d31e4 <unsigned int* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d31e4:	008136        	entry	a1, 64
400d31e7:	017d      	mov.n	a7, a1
400d31e9:	47cb      	addi.n	a4, a7, 12
400d31eb:	0429      	s32i.n	a2, a4, 0
400d31ed:	278b      	addi.n	a2, a7, 8
400d31ef:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d31f1:	1cc722        	addi	a2, a7, 28
400d31f4:	030c      	movi.n	a3, 0
400d31f6:	0239      	s32i.n	a3, a2, 0
400d31f8:	1cc742        	addi	a4, a7, 28
400d31fb:	378b      	addi.n	a3, a7, 8
400d31fd:	27cb      	addi.n	a2, a7, 12
400d31ff:	04cd      	mov.n	a12, a4
400d3201:	03b8      	l32i.n	a11, a3, 0
400d3203:	02a8      	l32i.n	a10, a2, 0
400d3205:	002765        	call8	400d347c <unsigned int* std::fill_n<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>
400d3208:	0a2d      	mov.n	a2, a10
	}
400d320a:	f01d      	retw.n

400d320c <std::allocator_traits<std::allocator<unsigned long long> >::allocate(std::allocator<unsigned long long>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d320c:	006136        	entry	a1, 48
400d320f:	207110        	or	a7, a1, a1
400d3212:	0cc742        	addi	a4, a7, 12
400d3215:	006422        	s32i	a2, a4, 0
400d3218:	278b      	addi.n	a2, a7, 8
400d321a:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d321c:	378b      	addi.n	a3, a7, 8
400d321e:	27cb      	addi.n	a2, a7, 12
400d3220:	0c0c      	movi.n	a12, 0
400d3222:	03b8      	l32i.n	a11, a3, 0
400d3224:	02a8      	l32i.n	a10, a2, 0
400d3226:	002865        	call8	400d34ac <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)>
400d3229:	0a2d      	mov.n	a2, a10
400d322b:	f01d      	retw.n
400d322d:	000000        	ill

400d3230 <__gnu_cxx::new_allocator<unsigned long long>::deallocate(unsigned long long*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d3230:	006136        	entry	a1, 48
400d3233:	017d      	mov.n	a7, a1
400d3235:	57cb      	addi.n	a5, a7, 12
400d3237:	0529      	s32i.n	a2, a5, 0
400d3239:	278b      	addi.n	a2, a7, 8
400d323b:	0239      	s32i.n	a3, a2, 0
400d323d:	274b      	addi.n	a2, a7, 4
400d323f:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d3241:	278b      	addi.n	a2, a7, 8
400d3243:	02a8      	l32i.n	a10, a2, 0
400d3245:	175aa5        	call8	400ea7f0 <operator delete(void*)>
400d3248:	f03d      	nop.n
400d324a:	f01d      	retw.n

400d324c <unsigned long long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d324c:	008136        	entry	a1, 64
400d324f:	207110        	or	a7, a1, a1
400d3252:	0cc742        	addi	a4, a7, 12
400d3255:	006422        	s32i	a2, a4, 0
400d3258:	278b      	addi.n	a2, a7, 8
400d325a:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d325c:	18c742        	addi	a4, a7, 24
400d325f:	f37f21        	l32r	a2, 400d005c <_flash_cache_start+0x44>
400d3262:	f37e31        	l32r	a3, 400d005c <_flash_cache_start+0x44>
400d3265:	0429      	s32i.n	a2, a4, 0
400d3267:	1439      	s32i.n	a3, a4, 4
400d3269:	18c742        	addi	a4, a7, 24
400d326c:	378b      	addi.n	a3, a7, 8
400d326e:	27cb      	addi.n	a2, a7, 12
400d3270:	04cd      	mov.n	a12, a4
400d3272:	03b8      	l32i.n	a11, a3, 0
400d3274:	02a8      	l32i.n	a10, a2, 0
400d3276:	002765        	call8	400d34ec <unsigned long long* std::fill_n<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>
400d3279:	0a2d      	mov.n	a2, a10
	}
400d327b:	f01d      	retw.n
400d327d:	000000        	ill

400d3280 <std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d3280:	006136        	entry	a1, 48
400d3283:	207110        	or	a7, a1, a1
400d3286:	0cc742        	addi	a4, a7, 12
400d3289:	006422        	s32i	a2, a4, 0
400d328c:	278b      	addi.n	a2, a7, 8
400d328e:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3290:	378b      	addi.n	a3, a7, 8
400d3292:	27cb      	addi.n	a2, a7, 12
400d3294:	0c0c      	movi.n	a12, 0
400d3296:	03b8      	l32i.n	a11, a3, 0
400d3298:	02a8      	l32i.n	a10, a2, 0
400d329a:	002825        	call8	400d351c <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)>
400d329d:	0a2d      	mov.n	a2, a10
400d329f:	f01d      	retw.n
400d32a1:	000000        	ill

400d32a4 <__gnu_cxx::new_allocator<float>::deallocate(float*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d32a4:	006136        	entry	a1, 48
400d32a7:	017d      	mov.n	a7, a1
400d32a9:	57cb      	addi.n	a5, a7, 12
400d32ab:	0529      	s32i.n	a2, a5, 0
400d32ad:	278b      	addi.n	a2, a7, 8
400d32af:	0239      	s32i.n	a3, a2, 0
400d32b1:	274b      	addi.n	a2, a7, 4
400d32b3:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d32b5:	278b      	addi.n	a2, a7, 8
400d32b7:	02a8      	l32i.n	a10, a2, 0
400d32b9:	175365        	call8	400ea7f0 <operator delete(void*)>
400d32bc:	f03d      	nop.n
400d32be:	f01d      	retw.n

400d32c0 <float* std::__uninitialized_default_n_1<true>::__uninit_default_n<float*, unsigned int>(float*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d32c0:	008136        	entry	a1, 64
400d32c3:	207110        	or	a7, a1, a1
400d32c6:	0cc742        	addi	a4, a7, 12
400d32c9:	006422        	s32i	a2, a4, 0
400d32cc:	278b      	addi.n	a2, a7, 8
400d32ce:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d32d0:	1cc722        	addi	a2, a7, 28
400d32d3:	f36231        	l32r	a3, 400d005c <_flash_cache_start+0x44>
400d32d6:	0239      	s32i.n	a3, a2, 0
400d32d8:	1cc742        	addi	a4, a7, 28
400d32db:	378b      	addi.n	a3, a7, 8
400d32dd:	27cb      	addi.n	a2, a7, 12
400d32df:	04cd      	mov.n	a12, a4
400d32e1:	03b8      	l32i.n	a11, a3, 0
400d32e3:	02a8      	l32i.n	a10, a2, 0
400d32e5:	002765        	call8	400d355c <float* std::fill_n<float*, unsigned int, float>(float*, unsigned int, float const&)>
400d32e8:	0a2d      	mov.n	a2, a10
	}
400d32ea:	f01d      	retw.n

400d32ec <std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d32ec:	006136        	entry	a1, 48
400d32ef:	207110        	or	a7, a1, a1
400d32f2:	0cc742        	addi	a4, a7, 12
400d32f5:	006422        	s32i	a2, a4, 0
400d32f8:	278b      	addi.n	a2, a7, 8
400d32fa:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d32fc:	378b      	addi.n	a3, a7, 8
400d32fe:	27cb      	addi.n	a2, a7, 12
400d3300:	0c0c      	movi.n	a12, 0
400d3302:	03b8      	l32i.n	a11, a3, 0
400d3304:	02a8      	l32i.n	a10, a2, 0
400d3306:	002865        	call8	400d358c <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)>
400d3309:	0a2d      	mov.n	a2, a10
400d330b:	f01d      	retw.n
400d330d:	000000        	ill

400d3310 <__gnu_cxx::new_allocator<double>::deallocate(double*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d3310:	006136        	entry	a1, 48
400d3313:	017d      	mov.n	a7, a1
400d3315:	57cb      	addi.n	a5, a7, 12
400d3317:	0529      	s32i.n	a2, a5, 0
400d3319:	278b      	addi.n	a2, a7, 8
400d331b:	0239      	s32i.n	a3, a2, 0
400d331d:	274b      	addi.n	a2, a7, 4
400d331f:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d3321:	278b      	addi.n	a2, a7, 8
400d3323:	02a8      	l32i.n	a10, a2, 0
400d3325:	174ca5        	call8	400ea7f0 <operator delete(void*)>
400d3328:	f03d      	nop.n
400d332a:	f01d      	retw.n

400d332c <double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned int>(double*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d332c:	008136        	entry	a1, 64
400d332f:	207110        	or	a7, a1, a1
400d3332:	0cc742        	addi	a4, a7, 12
400d3335:	006422        	s32i	a2, a4, 0
400d3338:	278b      	addi.n	a2, a7, 8
400d333a:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d333c:	18c742        	addi	a4, a7, 24
400d333f:	f34721        	l32r	a2, 400d005c <_flash_cache_start+0x44>
400d3342:	f34631        	l32r	a3, 400d005c <_flash_cache_start+0x44>
400d3345:	0429      	s32i.n	a2, a4, 0
400d3347:	1439      	s32i.n	a3, a4, 4
400d3349:	18c742        	addi	a4, a7, 24
400d334c:	378b      	addi.n	a3, a7, 8
400d334e:	27cb      	addi.n	a2, a7, 12
400d3350:	04cd      	mov.n	a12, a4
400d3352:	03b8      	l32i.n	a11, a3, 0
400d3354:	02a8      	l32i.n	a10, a2, 0
400d3356:	002765        	call8	400d35cc <double* std::fill_n<double*, unsigned int, double>(double*, unsigned int, double const&)>
400d3359:	0a2d      	mov.n	a2, a10
	}
400d335b:	f01d      	retw.n
400d335d:	000000        	ill

400d3360 <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d3360:	006136        	entry	a1, 48
400d3363:	017d      	mov.n	a7, a1
400d3365:	57cb      	addi.n	a5, a7, 12
400d3367:	0529      	s32i.n	a2, a5, 0
400d3369:	278b      	addi.n	a2, a7, 8
400d336b:	0239      	s32i.n	a3, a2, 0
400d336d:	274b      	addi.n	a2, a7, 4
400d336f:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d3371:	27cb      	addi.n	a2, a7, 12
400d3373:	02a8      	l32i.n	a10, a2, 0
400d3375:	18c3a5        	call8	400ebfb0 <__gnu_cxx::new_allocator<unsigned char>::max_size() const>
400d3378:	0a4d      	mov.n	a4, a10
400d337a:	378b      	addi.n	a3, a7, 8
400d337c:	120c      	movi.n	a2, 1
400d337e:	0338      	l32i.n	a3, a3, 0
400d3380:	013437        	bltu	a4, a3, 400d3385 <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)+0x25>
400d3383:	020c      	movi.n	a2, 0
400d3385:	742020        	extui	a2, a2, 0, 8
400d3388:	128c      	beqz.n	a2, 400d338d <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)+0x2d>
	  std::__throw_bad_alloc();
400d338a:	1782e5        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d338d:	278b      	addi.n	a2, a7, 8
400d338f:	002222        	l32i	a2, a2, 0
400d3392:	20a220        	or	a10, a2, a2
400d3395:	174925        	call8	400ea828 <operator new(unsigned int)>
400d3398:	0a2d      	mov.n	a2, a10
      }
400d339a:	f01d      	retw.n

400d339c <unsigned char* std::fill_n<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>:
   *  _GLIBCXX_RESOLVE_LIB_DEFECTS
   *  DR 865. More algorithms that throw away information
  */
  template<typename _OI, typename _Size, typename _Tp>
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d339c:	006136        	entry	a1, 48
400d339f:	207110        	or	a7, a1, a1
400d33a2:	0cc752        	addi	a5, a7, 12
400d33a5:	0529      	s32i.n	a2, a5, 0
400d33a7:	278b      	addi.n	a2, a7, 8
400d33a9:	0239      	s32i.n	a3, a2, 0
400d33ab:	274b      	addi.n	a2, a7, 4
400d33ad:	0249      	s32i.n	a4, a2, 0
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)

      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d33af:	0cc722        	addi	a2, a7, 12
400d33b2:	02a8      	l32i.n	a10, a2, 0
400d33b4:	002465        	call8	400d35fc <std::_Niter_base<unsigned char*>::iterator_type std::__niter_base<unsigned char*>(unsigned char*)>
400d33b7:	0a2d      	mov.n	a2, a10
400d33b9:	474b      	addi.n	a4, a7, 4
400d33bb:	378b      	addi.n	a3, a7, 8
400d33bd:	04c8      	l32i.n	a12, a4, 0
400d33bf:	03b8      	l32i.n	a11, a3, 0
400d33c1:	02ad      	mov.n	a10, a2
400d33c3:	0024e5        	call8	400d3610 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, unsigned char*>::__type std::__fill_n_a<unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>
400d33c6:	0a2d      	mov.n	a2, a10
    }
400d33c8:	f01d      	retw.n
	...

400d33cc <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d33cc:	006136        	entry	a1, 48
400d33cf:	017d      	mov.n	a7, a1
400d33d1:	57cb      	addi.n	a5, a7, 12
400d33d3:	0529      	s32i.n	a2, a5, 0
400d33d5:	278b      	addi.n	a2, a7, 8
400d33d7:	0239      	s32i.n	a3, a2, 0
400d33d9:	274b      	addi.n	a2, a7, 4
400d33db:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d33dd:	27cb      	addi.n	a2, a7, 12
400d33df:	02a8      	l32i.n	a10, a2, 0
400d33e1:	002625        	call8	400d3644 <__gnu_cxx::new_allocator<unsigned short>::max_size() const>
400d33e4:	0a4d      	mov.n	a4, a10
400d33e6:	378b      	addi.n	a3, a7, 8
400d33e8:	120c      	movi.n	a2, 1
400d33ea:	0338      	l32i.n	a3, a3, 0
400d33ec:	013437        	bltu	a4, a3, 400d33f1 <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)+0x25>
400d33ef:	020c      	movi.n	a2, 0
400d33f1:	742020        	extui	a2, a2, 0, 8
400d33f4:	002216        	beqz	a2, 400d33fa <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d33f7:	177c25        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d33fa:	278b      	addi.n	a2, a7, 8
400d33fc:	002222        	l32i	a2, a2, 0
400d33ff:	1122f0        	slli	a2, a2, 1
400d3402:	20a220        	or	a10, a2, a2
400d3405:	174225        	call8	400ea828 <operator new(unsigned int)>
400d3408:	0a2d      	mov.n	a2, a10
      }
400d340a:	f01d      	retw.n

400d340c <unsigned short* std::fill_n<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d340c:	006136        	entry	a1, 48
400d340f:	207110        	or	a7, a1, a1
400d3412:	0cc752        	addi	a5, a7, 12
400d3415:	0529      	s32i.n	a2, a5, 0
400d3417:	278b      	addi.n	a2, a7, 8
400d3419:	0239      	s32i.n	a3, a2, 0
400d341b:	274b      	addi.n	a2, a7, 4
400d341d:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d341f:	0cc722        	addi	a2, a7, 12
400d3422:	02a8      	l32i.n	a10, a2, 0
400d3424:	0022e5        	call8	400d3654 <std::_Niter_base<unsigned short*>::iterator_type std::__niter_base<unsigned short*>(unsigned short*)>
400d3427:	0a2d      	mov.n	a2, a10
400d3429:	474b      	addi.n	a4, a7, 4
400d342b:	378b      	addi.n	a3, a7, 8
400d342d:	04c8      	l32i.n	a12, a4, 0
400d342f:	03b8      	l32i.n	a11, a3, 0
400d3431:	02ad      	mov.n	a10, a2
400d3433:	18b8e5        	call8	400ebfc0 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>
400d3436:	0a2d      	mov.n	a2, a10
    }
400d3438:	f01d      	retw.n
	...

400d343c <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d343c:	006136        	entry	a1, 48
400d343f:	017d      	mov.n	a7, a1
400d3441:	57cb      	addi.n	a5, a7, 12
400d3443:	0529      	s32i.n	a2, a5, 0
400d3445:	278b      	addi.n	a2, a7, 8
400d3447:	0239      	s32i.n	a3, a2, 0
400d3449:	274b      	addi.n	a2, a7, 4
400d344b:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d344d:	27cb      	addi.n	a2, a7, 12
400d344f:	02a8      	l32i.n	a10, a2, 0
400d3451:	002165        	call8	400d3668 <__gnu_cxx::new_allocator<unsigned int>::max_size() const>
400d3454:	0a4d      	mov.n	a4, a10
400d3456:	378b      	addi.n	a3, a7, 8
400d3458:	120c      	movi.n	a2, 1
400d345a:	0338      	l32i.n	a3, a3, 0
400d345c:	013437        	bltu	a4, a3, 400d3461 <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)+0x25>
400d345f:	020c      	movi.n	a2, 0
400d3461:	742020        	extui	a2, a2, 0, 8
400d3464:	002216        	beqz	a2, 400d346a <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d3467:	177525        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d346a:	278b      	addi.n	a2, a7, 8
400d346c:	002222        	l32i	a2, a2, 0
400d346f:	1122e0        	slli	a2, a2, 2
400d3472:	20a220        	or	a10, a2, a2
400d3475:	173b25        	call8	400ea828 <operator new(unsigned int)>
400d3478:	0a2d      	mov.n	a2, a10
      }
400d347a:	f01d      	retw.n

400d347c <unsigned int* std::fill_n<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d347c:	006136        	entry	a1, 48
400d347f:	207110        	or	a7, a1, a1
400d3482:	0cc752        	addi	a5, a7, 12
400d3485:	0529      	s32i.n	a2, a5, 0
400d3487:	278b      	addi.n	a2, a7, 8
400d3489:	0239      	s32i.n	a3, a2, 0
400d348b:	274b      	addi.n	a2, a7, 4
400d348d:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d348f:	0cc722        	addi	a2, a7, 12
400d3492:	02a8      	l32i.n	a10, a2, 0
400d3494:	001e25        	call8	400d3678 <std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)>
400d3497:	0a2d      	mov.n	a2, a10
400d3499:	474b      	addi.n	a4, a7, 4
400d349b:	378b      	addi.n	a3, a7, 8
400d349d:	04c8      	l32i.n	a12, a4, 0
400d349f:	03b8      	l32i.n	a11, a3, 0
400d34a1:	02ad      	mov.n	a10, a2
400d34a3:	18b7a5        	call8	400ec01c <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>
400d34a6:	0a2d      	mov.n	a2, a10
    }
400d34a8:	f01d      	retw.n
	...

400d34ac <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d34ac:	006136        	entry	a1, 48
400d34af:	017d      	mov.n	a7, a1
400d34b1:	57cb      	addi.n	a5, a7, 12
400d34b3:	0529      	s32i.n	a2, a5, 0
400d34b5:	278b      	addi.n	a2, a7, 8
400d34b7:	0239      	s32i.n	a3, a2, 0
400d34b9:	274b      	addi.n	a2, a7, 4
400d34bb:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d34bd:	27cb      	addi.n	a2, a7, 12
400d34bf:	02a8      	l32i.n	a10, a2, 0
400d34c1:	001ca5        	call8	400d368c <__gnu_cxx::new_allocator<unsigned long long>::max_size() const>
400d34c4:	0a4d      	mov.n	a4, a10
400d34c6:	378b      	addi.n	a3, a7, 8
400d34c8:	120c      	movi.n	a2, 1
400d34ca:	0338      	l32i.n	a3, a3, 0
400d34cc:	013437        	bltu	a4, a3, 400d34d1 <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)+0x25>
400d34cf:	020c      	movi.n	a2, 0
400d34d1:	742020        	extui	a2, a2, 0, 8
400d34d4:	002216        	beqz	a2, 400d34da <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d34d7:	176e25        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d34da:	278b      	addi.n	a2, a7, 8
400d34dc:	002222        	l32i	a2, a2, 0
400d34df:	1122d0        	slli	a2, a2, 3
400d34e2:	20a220        	or	a10, a2, a2
400d34e5:	173425        	call8	400ea828 <operator new(unsigned int)>
400d34e8:	0a2d      	mov.n	a2, a10
      }
400d34ea:	f01d      	retw.n

400d34ec <unsigned long long* std::fill_n<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d34ec:	006136        	entry	a1, 48
400d34ef:	207110        	or	a7, a1, a1
400d34f2:	0cc752        	addi	a5, a7, 12
400d34f5:	0529      	s32i.n	a2, a5, 0
400d34f7:	278b      	addi.n	a2, a7, 8
400d34f9:	0239      	s32i.n	a3, a2, 0
400d34fb:	274b      	addi.n	a2, a7, 4
400d34fd:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d34ff:	0cc722        	addi	a2, a7, 12
400d3502:	02a8      	l32i.n	a10, a2, 0
400d3504:	001965        	call8	400d369c <std::_Niter_base<unsigned long long*>::iterator_type std::__niter_base<unsigned long long*>(unsigned long long*)>
400d3507:	0a2d      	mov.n	a2, a10
400d3509:	474b      	addi.n	a4, a7, 4
400d350b:	378b      	addi.n	a3, a7, 8
400d350d:	04c8      	l32i.n	a12, a4, 0
400d350f:	03b8      	l32i.n	a11, a3, 0
400d3511:	02ad      	mov.n	a10, a2
400d3513:	18b625        	call8	400ec074 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>
400d3516:	0a2d      	mov.n	a2, a10
    }
400d3518:	f01d      	retw.n
	...

400d351c <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d351c:	006136        	entry	a1, 48
400d351f:	017d      	mov.n	a7, a1
400d3521:	57cb      	addi.n	a5, a7, 12
400d3523:	0529      	s32i.n	a2, a5, 0
400d3525:	278b      	addi.n	a2, a7, 8
400d3527:	0239      	s32i.n	a3, a2, 0
400d3529:	274b      	addi.n	a2, a7, 4
400d352b:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d352d:	27cb      	addi.n	a2, a7, 12
400d352f:	02a8      	l32i.n	a10, a2, 0
400d3531:	0017e5        	call8	400d36b0 <__gnu_cxx::new_allocator<float>::max_size() const>
400d3534:	0a4d      	mov.n	a4, a10
400d3536:	378b      	addi.n	a3, a7, 8
400d3538:	120c      	movi.n	a2, 1
400d353a:	0338      	l32i.n	a3, a3, 0
400d353c:	013437        	bltu	a4, a3, 400d3541 <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)+0x25>
400d353f:	020c      	movi.n	a2, 0
400d3541:	742020        	extui	a2, a2, 0, 8
400d3544:	002216        	beqz	a2, 400d354a <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d3547:	176725        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d354a:	278b      	addi.n	a2, a7, 8
400d354c:	002222        	l32i	a2, a2, 0
400d354f:	1122e0        	slli	a2, a2, 2
400d3552:	20a220        	or	a10, a2, a2
400d3555:	172d25        	call8	400ea828 <operator new(unsigned int)>
400d3558:	0a2d      	mov.n	a2, a10
      }
400d355a:	f01d      	retw.n

400d355c <float* std::fill_n<float*, unsigned int, float>(float*, unsigned int, float const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d355c:	006136        	entry	a1, 48
400d355f:	207110        	or	a7, a1, a1
400d3562:	0cc752        	addi	a5, a7, 12
400d3565:	0529      	s32i.n	a2, a5, 0
400d3567:	278b      	addi.n	a2, a7, 8
400d3569:	0239      	s32i.n	a3, a2, 0
400d356b:	274b      	addi.n	a2, a7, 4
400d356d:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d356f:	0cc722        	addi	a2, a7, 12
400d3572:	02a8      	l32i.n	a10, a2, 0
400d3574:	0014a5        	call8	400d36c0 <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)>
400d3577:	0a2d      	mov.n	a2, a10
400d3579:	474b      	addi.n	a4, a7, 4
400d357b:	378b      	addi.n	a3, a7, 8
400d357d:	04c8      	l32i.n	a12, a4, 0
400d357f:	03b8      	l32i.n	a11, a3, 0
400d3581:	02ad      	mov.n	a10, a2
400d3583:	18b525        	call8	400ec0d4 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)>
400d3586:	0a2d      	mov.n	a2, a10
    }
400d3588:	f01d      	retw.n
	...

400d358c <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d358c:	006136        	entry	a1, 48
400d358f:	017d      	mov.n	a7, a1
400d3591:	57cb      	addi.n	a5, a7, 12
400d3593:	0529      	s32i.n	a2, a5, 0
400d3595:	278b      	addi.n	a2, a7, 8
400d3597:	0239      	s32i.n	a3, a2, 0
400d3599:	274b      	addi.n	a2, a7, 4
400d359b:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d359d:	27cb      	addi.n	a2, a7, 12
400d359f:	02a8      	l32i.n	a10, a2, 0
400d35a1:	001325        	call8	400d36d4 <__gnu_cxx::new_allocator<double>::max_size() const>
400d35a4:	0a4d      	mov.n	a4, a10
400d35a6:	378b      	addi.n	a3, a7, 8
400d35a8:	120c      	movi.n	a2, 1
400d35aa:	0338      	l32i.n	a3, a3, 0
400d35ac:	013437        	bltu	a4, a3, 400d35b1 <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)+0x25>
400d35af:	020c      	movi.n	a2, 0
400d35b1:	742020        	extui	a2, a2, 0, 8
400d35b4:	002216        	beqz	a2, 400d35ba <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d35b7:	176025        	call8	400eabb8 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d35ba:	278b      	addi.n	a2, a7, 8
400d35bc:	002222        	l32i	a2, a2, 0
400d35bf:	1122d0        	slli	a2, a2, 3
400d35c2:	20a220        	or	a10, a2, a2
400d35c5:	172625        	call8	400ea828 <operator new(unsigned int)>
400d35c8:	0a2d      	mov.n	a2, a10
      }
400d35ca:	f01d      	retw.n

400d35cc <double* std::fill_n<double*, unsigned int, double>(double*, unsigned int, double const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d35cc:	006136        	entry	a1, 48
400d35cf:	207110        	or	a7, a1, a1
400d35d2:	0cc752        	addi	a5, a7, 12
400d35d5:	0529      	s32i.n	a2, a5, 0
400d35d7:	278b      	addi.n	a2, a7, 8
400d35d9:	0239      	s32i.n	a3, a2, 0
400d35db:	274b      	addi.n	a2, a7, 4
400d35dd:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d35df:	0cc722        	addi	a2, a7, 12
400d35e2:	02a8      	l32i.n	a10, a2, 0
400d35e4:	000fe5        	call8	400d36e4 <std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)>
400d35e7:	0a2d      	mov.n	a2, a10
400d35e9:	474b      	addi.n	a4, a7, 4
400d35eb:	378b      	addi.n	a3, a7, 8
400d35ed:	04c8      	l32i.n	a12, a4, 0
400d35ef:	03b8      	l32i.n	a11, a3, 0
400d35f1:	02ad      	mov.n	a10, a2
400d35f3:	18b3e5        	call8	400ec130 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)>
400d35f6:	0a2d      	mov.n	a2, a10
    }
400d35f8:	f01d      	retw.n
	...

400d35fc <std::_Niter_base<unsigned char*>::iterator_type std::__niter_base<unsigned char*>(unsigned char*)>:
    __niter_base(_Iterator __it)
400d35fc:	006136        	entry	a1, 48
400d35ff:	017d      	mov.n	a7, a1
400d3601:	37cb      	addi.n	a3, a7, 12
400d3603:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3605:	27cb      	addi.n	a2, a7, 12
400d3607:	02a8      	l32i.n	a10, a2, 0
400d3609:	18b865        	call8	400ec190 <std::_Iter_base<unsigned char*, false>::_S_base(unsigned char*)>
400d360c:	0a2d      	mov.n	a2, a10
400d360e:	f01d      	retw.n

400d3610 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, unsigned char*>::__type std::__fill_n_a<unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>:
    __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
400d3610:	006136        	entry	a1, 48
400d3613:	017d      	mov.n	a7, a1
400d3615:	57cb      	addi.n	a5, a7, 12
400d3617:	0529      	s32i.n	a2, a5, 0
400d3619:	278b      	addi.n	a2, a7, 8
400d361b:	0239      	s32i.n	a3, a2, 0
400d361d:	274b      	addi.n	a2, a7, 4
400d361f:	0249      	s32i.n	a4, a2, 0
      std::__fill_a(__first, __first + __n, __c);
400d3621:	37cb      	addi.n	a3, a7, 12
400d3623:	278b      	addi.n	a2, a7, 8
400d3625:	0338      	l32i.n	a3, a3, 0
400d3627:	0228      	l32i.n	a2, a2, 0
400d3629:	332a      	add.n	a3, a3, a2
400d362b:	474b      	addi.n	a4, a7, 4
400d362d:	27cb      	addi.n	a2, a7, 12
400d362f:	04c8      	l32i.n	a12, a4, 0
400d3631:	03bd      	mov.n	a11, a3
400d3633:	02a8      	l32i.n	a10, a2, 0
400d3635:	000c25        	call8	400d36f8 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)>
      return __first + __n;
400d3638:	37cb      	addi.n	a3, a7, 12
400d363a:	278b      	addi.n	a2, a7, 8
400d363c:	0338      	l32i.n	a3, a3, 0
400d363e:	0228      	l32i.n	a2, a2, 0
400d3640:	232a      	add.n	a2, a3, a2
    }
400d3642:	f01d      	retw.n

400d3644 <__gnu_cxx::new_allocator<unsigned short>::max_size() const>:

      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3644:	006136        	entry	a1, 48
400d3647:	017d      	mov.n	a7, a1
400d3649:	37cb      	addi.n	a3, a7, 12
400d364b:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d364d:	f28421        	l32r	a2, 400d0060 <_flash_cache_start+0x48>
400d3650:	f01d      	retw.n
	...

400d3654 <std::_Niter_base<unsigned short*>::iterator_type std::__niter_base<unsigned short*>(unsigned short*)>:
    __niter_base(_Iterator __it)
400d3654:	006136        	entry	a1, 48
400d3657:	017d      	mov.n	a7, a1
400d3659:	37cb      	addi.n	a3, a7, 12
400d365b:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d365d:	27cb      	addi.n	a2, a7, 12
400d365f:	02a8      	l32i.n	a10, a2, 0
400d3661:	18b3e5        	call8	400ec1a0 <std::_Iter_base<unsigned short*, false>::_S_base(unsigned short*)>
400d3664:	0a2d      	mov.n	a2, a10
400d3666:	f01d      	retw.n

400d3668 <__gnu_cxx::new_allocator<unsigned int>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3668:	006136        	entry	a1, 48
400d366b:	017d      	mov.n	a7, a1
400d366d:	37cb      	addi.n	a3, a7, 12
400d366f:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3671:	f27c21        	l32r	a2, 400d0064 <_flash_cache_start+0x4c>
400d3674:	f01d      	retw.n
	...

400d3678 <std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)>:
    __niter_base(_Iterator __it)
400d3678:	006136        	entry	a1, 48
400d367b:	017d      	mov.n	a7, a1
400d367d:	37cb      	addi.n	a3, a7, 12
400d367f:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3681:	27cb      	addi.n	a2, a7, 12
400d3683:	02a8      	l32i.n	a10, a2, 0
400d3685:	18b2a5        	call8	400ec1b0 <std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*)>
400d3688:	0a2d      	mov.n	a2, a10
400d368a:	f01d      	retw.n

400d368c <__gnu_cxx::new_allocator<unsigned long long>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d368c:	006136        	entry	a1, 48
400d368f:	017d      	mov.n	a7, a1
400d3691:	37cb      	addi.n	a3, a7, 12
400d3693:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3695:	f27421        	l32r	a2, 400d0068 <_flash_cache_start+0x50>
400d3698:	f01d      	retw.n
	...

400d369c <std::_Niter_base<unsigned long long*>::iterator_type std::__niter_base<unsigned long long*>(unsigned long long*)>:
    __niter_base(_Iterator __it)
400d369c:	006136        	entry	a1, 48
400d369f:	017d      	mov.n	a7, a1
400d36a1:	37cb      	addi.n	a3, a7, 12
400d36a3:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d36a5:	27cb      	addi.n	a2, a7, 12
400d36a7:	02a8      	l32i.n	a10, a2, 0
400d36a9:	18b165        	call8	400ec1c0 <std::_Iter_base<unsigned long long*, false>::_S_base(unsigned long long*)>
400d36ac:	0a2d      	mov.n	a2, a10
400d36ae:	f01d      	retw.n

400d36b0 <__gnu_cxx::new_allocator<float>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d36b0:	006136        	entry	a1, 48
400d36b3:	017d      	mov.n	a7, a1
400d36b5:	37cb      	addi.n	a3, a7, 12
400d36b7:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d36b9:	f26a21        	l32r	a2, 400d0064 <_flash_cache_start+0x4c>
400d36bc:	f01d      	retw.n
	...

400d36c0 <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)>:
    __niter_base(_Iterator __it)
400d36c0:	006136        	entry	a1, 48
400d36c3:	017d      	mov.n	a7, a1
400d36c5:	37cb      	addi.n	a3, a7, 12
400d36c7:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d36c9:	27cb      	addi.n	a2, a7, 12
400d36cb:	02a8      	l32i.n	a10, a2, 0
400d36cd:	18b025        	call8	400ec1d0 <std::_Iter_base<float*, false>::_S_base(float*)>
400d36d0:	0a2d      	mov.n	a2, a10
400d36d2:	f01d      	retw.n

400d36d4 <__gnu_cxx::new_allocator<double>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d36d4:	006136        	entry	a1, 48
400d36d7:	017d      	mov.n	a7, a1
400d36d9:	37cb      	addi.n	a3, a7, 12
400d36db:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d36dd:	f26221        	l32r	a2, 400d0068 <_flash_cache_start+0x50>
400d36e0:	f01d      	retw.n
	...

400d36e4 <std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)>:
    __niter_base(_Iterator __it)
400d36e4:	006136        	entry	a1, 48
400d36e7:	017d      	mov.n	a7, a1
400d36e9:	37cb      	addi.n	a3, a7, 12
400d36eb:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d36ed:	27cb      	addi.n	a2, a7, 12
400d36ef:	02a8      	l32i.n	a10, a2, 0
400d36f1:	18aee5        	call8	400ec1e0 <std::_Iter_base<double*, false>::_S_base(double*)>
400d36f4:	0a2d      	mov.n	a2, a10
400d36f6:	f01d      	retw.n

400d36f8 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)>:
    __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
400d36f8:	008136        	entry	a1, 64
400d36fb:	017d      	mov.n	a7, a1
400d36fd:	57cb      	addi.n	a5, a7, 12
400d36ff:	0529      	s32i.n	a2, a5, 0
400d3701:	278b      	addi.n	a2, a7, 8
400d3703:	0239      	s32i.n	a3, a2, 0
400d3705:	274b      	addi.n	a2, a7, 4
400d3707:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __c;
400d3709:	1bc722        	addi	a2, a7, 27
400d370c:	374b      	addi.n	a3, a7, 4
400d370e:	0338      	l32i.n	a3, a3, 0
400d3710:	000332        	l8ui	a3, a3, 0
400d3713:	004232        	s8i	a3, a2, 0
      if (const size_t __len = __last - __first)
400d3716:	278b      	addi.n	a2, a7, 8
400d3718:	0238      	l32i.n	a3, a2, 0
400d371a:	27cb      	addi.n	a2, a7, 12
400d371c:	0228      	l32i.n	a2, a2, 0
400d371e:	c03320        	sub	a3, a3, a2
400d3721:	1cc722        	addi	a2, a7, 28
400d3724:	0239      	s32i.n	a3, a2, 0
400d3726:	1cc722        	addi	a2, a7, 28
400d3729:	0228      	l32i.n	a2, a2, 0
400d372b:	529c      	beqz.n	a2, 400d3744 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)+0x4c>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
400d372d:	1bc722        	addi	a2, a7, 27
400d3730:	000232        	l8ui	a3, a2, 0
400d3733:	1cc742        	addi	a4, a7, 28
400d3736:	27cb      	addi.n	a2, a7, 12
400d3738:	04c8      	l32i.n	a12, a4, 0
400d373a:	03bd      	mov.n	a11, a3
400d373c:	02a8      	l32i.n	a10, a2, 0
400d373e:	f24b81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d3741:	0008e0        	callx8	a8
    }
400d3744:	f03d      	nop.n
400d3746:	f01d      	retw.n

400d3748 <__static_initialization_and_destruction_0(int, int)>:

void loop()
{
}
400d3748:	006136        	entry	a1, 48
400d374b:	207110        	or	a7, a1, a1
400d374e:	0cc742        	addi	a4, a7, 12
400d3751:	006422        	s32i	a2, a4, 0
400d3754:	278b      	addi.n	a2, a7, 8
400d3756:	0239      	s32i.n	a3, a2, 0
400d3758:	27cb      	addi.n	a2, a7, 12
400d375a:	0228      	l32i.n	a2, a2, 0
400d375c:	191266        	bnei	a2, 1, 400d3779 <__static_initialization_and_destruction_0(int, int)+0x31>
400d375f:	278b      	addi.n	a2, a7, 8
400d3761:	0238      	l32i.n	a3, a2, 0
400d3763:	f24321        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3766:	0f9327        	bne	a3, a2, 400d3779 <__static_initialization_and_destruction_0(int, int)+0x31>
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0, 0, 0, 0);
400d3769:	f24221        	l32r	a2, 400d0074 <_flash_cache_start+0x5c>
400d376c:	0e0c      	movi.n	a14, 0
400d376e:	0d0c      	movi.n	a13, 0
400d3770:	0c0c      	movi.n	a12, 0
400d3772:	0b0c      	movi.n	a11, 0
400d3774:	02ad      	mov.n	a10, a2
400d3776:	000625        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d3779:	0cc722        	addi	a2, a7, 12
400d377c:	002222        	l32i	a2, a2, 0
400d377f:	011256        	bnez	a2, 400d3794 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3782:	278b      	addi.n	a2, a7, 8
400d3784:	0238      	l32i.n	a3, a2, 0
400d3786:	f23a21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3789:	079327        	bne	a3, a2, 400d3794 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d378c:	f23a21        	l32r	a2, 400d0074 <_flash_cache_start+0x5c>
400d378f:	02ad      	mov.n	a10, a2
400d3791:	fd4ce5        	call8	400d0c60 <IPAddress::~IPAddress()>
400d3794:	f03d      	nop.n
400d3796:	f01d      	retw.n

400d3798 <_GLOBAL__sub_I__Z5setupv>:
400d3798:	004136        	entry	a1, 32
400d379b:	207110        	or	a7, a1, a1
400d379e:	f23421        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d37a1:	20b220        	or	a11, a2, a2
400d37a4:	01a0a2        	movi	a10, 1
400d37a7:	fffa25        	call8	400d3748 <__static_initialization_and_destruction_0(int, int)>
400d37aa:	f01d      	retw.n

400d37ac <_GLOBAL__sub_D__Z5setupv>:
400d37ac:	004136        	entry	a1, 32
400d37af:	207110        	or	a7, a1, a1
400d37b2:	f22f21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d37b5:	20b220        	or	a11, a2, a2
400d37b8:	00a0a2        	movi	a10, 0
400d37bb:	fff8e5        	call8	400d3748 <__static_initialization_and_destruction_0(int, int)>
400d37be:	f01d      	retw.n

400d37c0 <Printable::Printable()>:
class Printable
400d37c0:	006136        	entry	a1, 48
400d37c3:	017d      	mov.n	a7, a1
400d37c5:	37cb      	addi.n	a3, a7, 12
400d37c7:	0329      	s32i.n	a2, a3, 0
400d37c9:	f21331        	l32r	a3, 400d0018 <_flash_cache_start>
400d37cc:	27cb      	addi.n	a2, a7, 12
400d37ce:	0228      	l32i.n	a2, a2, 0
400d37d0:	0239      	s32i.n	a3, a2, 0
400d37d2:	f03d      	nop.n
400d37d4:	f01d      	retw.n
	...

400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>:
IPAddress::IPAddress()
{
    _address.dword = 0;
}

IPAddress::IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet)
400d37d8:	008136        	entry	a1, 64
400d37db:	017d      	mov.n	a7, a1
400d37dd:	1cc782        	addi	a8, a7, 28
400d37e0:	0829      	s32i.n	a2, a8, 0
400d37e2:	039d      	mov.n	a9, a3
400d37e4:	048d      	mov.n	a8, a4
400d37e6:	054d      	mov.n	a4, a5
400d37e8:	063d      	mov.n	a3, a6
400d37ea:	18c722        	addi	a2, a7, 24
400d37ed:	004292        	s8i	a9, a2, 0
400d37f0:	14c722        	addi	a2, a7, 20
400d37f3:	004282        	s8i	a8, a2, 0
400d37f6:	10c722        	addi	a2, a7, 16
400d37f9:	004242        	s8i	a4, a2, 0
400d37fc:	27cb      	addi.n	a2, a7, 12
400d37fe:	004232        	s8i	a3, a2, 0
400d3801:	1cc722        	addi	a2, a7, 28
400d3804:	0228      	l32i.n	a2, a2, 0
400d3806:	20a220        	or	a10, a2, a2
400d3809:	fffb65        	call8	400d37c0 <Printable::Printable()>
400d380c:	f20431        	l32r	a3, 400d001c <_flash_cache_start+0x4>
400d380f:	1cc722        	addi	a2, a7, 28
400d3812:	0228      	l32i.n	a2, a2, 0
400d3814:	0239      	s32i.n	a3, a2, 0
{
    _address.bytes[0] = first_octet;
400d3816:	1cc722        	addi	a2, a7, 28
400d3819:	0228      	l32i.n	a2, a2, 0
400d381b:	18c732        	addi	a3, a7, 24
400d381e:	000332        	l8ui	a3, a3, 0
400d3821:	044232        	s8i	a3, a2, 4
    _address.bytes[1] = second_octet;
400d3824:	1cc722        	addi	a2, a7, 28
400d3827:	0228      	l32i.n	a2, a2, 0
400d3829:	14c732        	addi	a3, a7, 20
400d382c:	000332        	l8ui	a3, a3, 0
400d382f:	054232        	s8i	a3, a2, 5
    _address.bytes[2] = third_octet;
400d3832:	1cc722        	addi	a2, a7, 28
400d3835:	0228      	l32i.n	a2, a2, 0
400d3837:	10c732        	addi	a3, a7, 16
400d383a:	000332        	l8ui	a3, a3, 0
400d383d:	064232        	s8i	a3, a2, 6
    _address.bytes[3] = fourth_octet;
400d3840:	1cc722        	addi	a2, a7, 28
400d3843:	0228      	l32i.n	a2, a2, 0
400d3845:	37cb      	addi.n	a3, a7, 12
400d3847:	000332        	l8ui	a3, a3, 0
400d384a:	074232        	s8i	a3, a2, 7
}
400d384d:	f03d      	nop.n
400d384f:	f01d      	retw.n
400d3851:	000000        	ill

400d3854 <IPAddress::printTo(Print&) const>:
{
    return memcmp(addr, _address.bytes, sizeof(_address.bytes)) == 0;
}

size_t IPAddress::printTo(Print& p) const
{
400d3854:	008136        	entry	a1, 64
400d3857:	207110        	or	a7, a1, a1
400d385a:	0cc742        	addi	a4, a7, 12
400d385d:	0429      	s32i.n	a2, a4, 0
400d385f:	278b      	addi.n	a2, a7, 8
400d3861:	0239      	s32i.n	a3, a2, 0
    size_t n = 0;
400d3863:	18c722        	addi	a2, a7, 24
400d3866:	030c      	movi.n	a3, 0
400d3868:	0239      	s32i.n	a3, a2, 0
    for(int i = 0; i < 3; i++) {
400d386a:	1cc722        	addi	a2, a7, 28
400d386d:	030c      	movi.n	a3, 0
400d386f:	0239      	s32i.n	a3, a2, 0
400d3871:	1cc722        	addi	a2, a7, 28
400d3874:	0228      	l32i.n	a2, a2, 0
400d3876:	5332e6        	bgei	a2, 3, 400d38cd <IPAddress::printTo(Print&) const+0x79>
        n += p.print(_address.bytes[i], DEC);
400d3879:	27cb      	addi.n	a2, a7, 12
400d387b:	0238      	l32i.n	a3, a2, 0
400d387d:	1cc722        	addi	a2, a7, 28
400d3880:	0228      	l32i.n	a2, a2, 0
400d3882:	232a      	add.n	a2, a3, a2
400d3884:	224b      	addi.n	a2, a2, 4
400d3886:	000222        	l8ui	a2, a2, 0
400d3889:	023d      	mov.n	a3, a2
400d388b:	278b      	addi.n	a2, a7, 8
400d388d:	ac0c      	movi.n	a12, 10
400d388f:	20b330        	or	a11, a3, a3
400d3892:	02a8      	l32i.n	a10, a2, 0
400d3894:	001965        	call8	400d3a2c <Print::print(unsigned char, int)>
400d3897:	0a3d      	mov.n	a3, a10
400d3899:	18c722        	addi	a2, a7, 24
400d389c:	18c742        	addi	a4, a7, 24
400d389f:	0448      	l32i.n	a4, a4, 0
400d38a1:	343a      	add.n	a3, a4, a3
400d38a3:	0239      	s32i.n	a3, a2, 0
        n += p.print('.');
400d38a5:	278b      	addi.n	a2, a7, 8
400d38a7:	eb2c      	movi.n	a11, 46
400d38a9:	02a8      	l32i.n	a10, a2, 0
400d38ab:	189465        	call8	400ec1f0 <Print::print(char)>
400d38ae:	0a3d      	mov.n	a3, a10
400d38b0:	18c722        	addi	a2, a7, 24
400d38b3:	18c742        	addi	a4, a7, 24
400d38b6:	0448      	l32i.n	a4, a4, 0
400d38b8:	343a      	add.n	a3, a4, a3
400d38ba:	0239      	s32i.n	a3, a2, 0
    for(int i = 0; i < 3; i++) {
400d38bc:	1cc722        	addi	a2, a7, 28
400d38bf:	1cc732        	addi	a3, a7, 28
400d38c2:	0338      	l32i.n	a3, a3, 0
400d38c4:	331b      	addi.n	a3, a3, 1
400d38c6:	0239      	s32i.n	a3, a2, 0
400d38c8:	ffe946        	j	400d3871 <IPAddress::printTo(Print&) const+0x1d>
400d38cb:	220000        	orb	b0, b0, b0
    }
    n += p.print(_address.bytes[3], DEC);
400d38ce:	220cc7        	bnone	a12, a12, 400d38f4 <IPAddress::printTo(Print&) const+0xa0>
400d38d1:	220022        	l8ui	a2, a0, 34
400d38d4:	200702        	l8ui	a0, a7, 32
400d38d7:	8b2032        	l32i	a3, a0, 0x22c
400d38da:	ac0c27        	bnone	a12, a2, 400d388a <IPAddress::printTo(Print&) const+0x36>
400d38dd:	03bd      	mov.n	a11, a3
400d38df:	02a8      	l32i.n	a10, a2, 0
400d38e1:	0014a5        	call8	400d3a2c <Print::print(unsigned char, int)>
400d38e4:	0a3d      	mov.n	a3, a10
400d38e6:	18c722        	addi	a2, a7, 24
400d38e9:	18c742        	addi	a4, a7, 24
400d38ec:	0448      	l32i.n	a4, a4, 0
400d38ee:	343a      	add.n	a3, a4, a3
400d38f0:	0239      	s32i.n	a3, a2, 0
    return n;
400d38f2:	18c722        	addi	a2, a7, 24
400d38f5:	0228      	l32i.n	a2, a2, 0
}
400d38f7:	f01d      	retw.n
400d38f9:	000000        	ill

400d38fc <__static_initialization_and_destruction_0(int, int)>:
        // Too few dots (there must be 3 dots)
        return false;
    }
    _address.bytes[3] = acc;
    return true;
}
400d38fc:	006136        	entry	a1, 48
400d38ff:	207110        	or	a7, a1, a1
400d3902:	0cc742        	addi	a4, a7, 12
400d3905:	006422        	s32i	a2, a4, 0
400d3908:	278b      	addi.n	a2, a7, 8
400d390a:	0239      	s32i.n	a3, a2, 0
400d390c:	27cb      	addi.n	a2, a7, 12
400d390e:	0228      	l32i.n	a2, a2, 0
400d3910:	191266        	bnei	a2, 1, 400d392d <__static_initialization_and_destruction_0(int, int)+0x31>
400d3913:	278b      	addi.n	a2, a7, 8
400d3915:	0238      	l32i.n	a3, a2, 0
400d3917:	f1d621        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d391a:	0f9327        	bne	a3, a2, 400d392d <__static_initialization_and_destruction_0(int, int)+0x31>
400d391d:	f1d621        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3920:	0e0c      	movi.n	a14, 0
400d3922:	0d0c      	movi.n	a13, 0
400d3924:	0c0c      	movi.n	a12, 0
400d3926:	0b0c      	movi.n	a11, 0
400d3928:	02ad      	mov.n	a10, a2
400d392a:	ffeae5        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d392d:	0cc722        	addi	a2, a7, 12
400d3930:	002222        	l32i	a2, a2, 0
400d3933:	011256        	bnez	a2, 400d3948 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3936:	278b      	addi.n	a2, a7, 8
400d3938:	0238      	l32i.n	a3, a2, 0
400d393a:	f1cd21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d393d:	079327        	bne	a3, a2, 400d3948 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3940:	f1ce21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3943:	02ad      	mov.n	a10, a2
400d3945:	fd31a5        	call8	400d0c60 <IPAddress::~IPAddress()>
400d3948:	f03d      	nop.n
400d394a:	f01d      	retw.n

400d394c <_GLOBAL__sub_I__ZN9IPAddressC2Ev>:
400d394c:	004136        	entry	a1, 32
400d394f:	207110        	or	a7, a1, a1
400d3952:	f1c721        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3955:	20b220        	or	a11, a2, a2
400d3958:	01a0a2        	movi	a10, 1
400d395b:	fffa25        	call8	400d38fc <__static_initialization_and_destruction_0(int, int)>
400d395e:	f01d      	retw.n

400d3960 <_GLOBAL__sub_D__ZN9IPAddressC2Ev>:
400d3960:	004136        	entry	a1, 32
400d3963:	207110        	or	a7, a1, a1
400d3966:	f1c221        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3969:	20b220        	or	a11, a2, a2
400d396c:	00a0a2        	movi	a10, 0
400d396f:	fff8e5        	call8	400d38fc <__static_initialization_and_destruction_0(int, int)>
400d3972:	f01d      	retw.n

400d3974 <String::isSSO() const>:
        union {
            struct _ptr ptr;
            struct _sso sso;
        };
        // Accessor functions
        inline bool isSSO() const { return sso.isSSO; }
400d3974:	006136        	entry	a1, 48
400d3977:	017d      	mov.n	a7, a1
400d3979:	37cb      	addi.n	a3, a7, 12
400d397b:	0329      	s32i.n	a2, a3, 0
400d397d:	27cb      	addi.n	a2, a7, 12
400d397f:	0228      	l32i.n	a2, a2, 0
400d3981:	2238      	l32i.n	a3, a2, 8
400d3983:	f1be21        	l32r	a2, 400d007c <_flash_cache_start+0x64>
400d3986:	104320        	and	a4, a3, a2
400d3989:	130c      	movi.n	a3, 1
400d398b:	020c      	movi.n	a2, 0
400d398d:	932340        	movnez	a2, a3, a4
400d3990:	742020        	extui	a2, a2, 0, 8
400d3993:	f01d      	retw.n
400d3995:	000000        	ill

400d3998 <String::len() const>:
        inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
400d3998:	006136        	entry	a1, 48
400d399b:	017d      	mov.n	a7, a1
400d399d:	37cb      	addi.n	a3, a7, 12
400d399f:	0329      	s32i.n	a2, a3, 0
400d39a1:	27cb      	addi.n	a2, a7, 12
400d39a3:	02a8      	l32i.n	a10, a2, 0
400d39a5:	fffce5        	call8	400d3974 <String::isSSO() const>
400d39a8:	0a2d      	mov.n	a2, a10
400d39aa:	e28c      	beqz.n	a2, 400d39bc <String::len() const+0x24>
400d39ac:	27cb      	addi.n	a2, a7, 12
400d39ae:	0228      	l32i.n	a2, a2, 0
400d39b0:	2228      	l32i.n	a2, a2, 8
400d39b2:	652820        	extui	a2, a2, 24, 7
400d39b5:	742020        	extui	a2, a2, 0, 8
400d39b8:	0001c6        	j	400d39c3 <String::len() const+0x2b>
400d39bb:	27cb00        	lsi	f0, a11, 156
400d39be:	0228      	l32i.n	a2, a2, 0
400d39c0:	031222        	l16ui	a2, a2, 6
400d39c3:	f01d      	retw.n
400d39c5:	000000        	ill

400d39c8 <String::buffer() const>:
        inline void setSSO(bool set) { sso.isSSO = set; }
        inline void setLen(int len) { if (isSSO()) sso.len = len; else ptr.len = len; }
        inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
	inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
        // Buffer accessor functions
        inline const char *buffer() const { return (const char *)(isSSO() ? sso.buff : ptr.buff); }
400d39c8:	006136        	entry	a1, 48
400d39cb:	017d      	mov.n	a7, a1
400d39cd:	37cb      	addi.n	a3, a7, 12
400d39cf:	0329      	s32i.n	a2, a3, 0
400d39d1:	27cb      	addi.n	a2, a7, 12
400d39d3:	02a8      	l32i.n	a10, a2, 0
400d39d5:	fff9e5        	call8	400d3974 <String::isSSO() const>
400d39d8:	0a2d      	mov.n	a2, a10
400d39da:	628c      	beqz.n	a2, 400d39e4 <String::buffer() const+0x1c>
400d39dc:	27cb      	addi.n	a2, a7, 12
400d39de:	0228      	l32i.n	a2, a2, 0
400d39e0:	000186        	j	400d39ea <String::buffer() const+0x22>
400d39e3:	27cb00        	lsi	f0, a11, 156
400d39e6:	0228      	l32i.n	a2, a2, 0
400d39e8:	0228      	l32i.n	a2, a2, 0
400d39ea:	f01d      	retw.n

400d39ec <Print::write(char const*)>:
    {
        setWriteError(0);
    }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str)
400d39ec:	006136        	entry	a1, 48
400d39ef:	017d      	mov.n	a7, a1
400d39f1:	47cb      	addi.n	a4, a7, 12
400d39f3:	0429      	s32i.n	a2, a4, 0
400d39f5:	278b      	addi.n	a2, a7, 8
400d39f7:	0239      	s32i.n	a3, a2, 0
    {
        if(str == NULL) {
400d39f9:	278b      	addi.n	a2, a7, 8
400d39fb:	0228      	l32i.n	a2, a2, 0
400d39fd:	42cc      	bnez.n	a2, 400d3a05 <Print::write(char const*)+0x19>
            return 0;
400d39ff:	020c      	movi.n	a2, 0
400d3a01:	000946        	j	400d3a2a <Print::write(char const*)+0x3e>
400d3a04:	27cb00        	lsi	f0, a11, 156
        }
        return write((const uint8_t *) str, strlen(str));
400d3a07:	0228      	l32i.n	a2, a2, 0
400d3a09:	0228      	l32i.n	a2, a2, 0
400d3a0b:	22cb      	addi.n	a2, a2, 12
400d3a0d:	0228      	l32i.n	a2, a2, 0
400d3a0f:	378b      	addi.n	a3, a7, 8
400d3a11:	03a8      	l32i.n	a10, a3, 0
400d3a13:	f19b81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d3a16:	0008e0        	callx8	a8
400d3a19:	0a5d      	mov.n	a5, a10
400d3a1b:	478b      	addi.n	a4, a7, 8
400d3a1d:	37cb      	addi.n	a3, a7, 12
400d3a1f:	05cd      	mov.n	a12, a5
400d3a21:	04b8      	l32i.n	a11, a4, 0
400d3a23:	03a8      	l32i.n	a10, a3, 0
400d3a25:	0002e0        	callx8	a2
400d3a28:	0a2d      	mov.n	a2, a10
    }
400d3a2a:	f01d      	retw.n

400d3a2c <Print::print(unsigned char, int)>:
{
    return write(c);
}

size_t Print::print(unsigned char b, int base)
{
400d3a2c:	006136        	entry	a1, 48
400d3a2f:	017d      	mov.n	a7, a1
400d3a31:	57cb      	addi.n	a5, a7, 12
400d3a33:	0529      	s32i.n	a2, a5, 0
400d3a35:	274b      	addi.n	a2, a7, 4
400d3a37:	0249      	s32i.n	a4, a2, 0
400d3a39:	278b      	addi.n	a2, a7, 8
400d3a3b:	004232        	s8i	a3, a2, 0
    return print((unsigned long) b, base);
400d3a3e:	278b      	addi.n	a2, a7, 8
400d3a40:	000232        	l8ui	a3, a2, 0
400d3a43:	474b      	addi.n	a4, a7, 4
400d3a45:	27cb      	addi.n	a2, a7, 12
400d3a47:	04c8      	l32i.n	a12, a4, 0
400d3a49:	03bd      	mov.n	a11, a3
400d3a4b:	02a8      	l32i.n	a10, a2, 0
400d3a4d:	000065        	call8	400d3a54 <Print::print(unsigned long, int)>
400d3a50:	0a2d      	mov.n	a2, a10
}
400d3a52:	f01d      	retw.n

400d3a54 <Print::print(unsigned long, int)>:
        return printNumber(n, base);
    }
}

size_t Print::print(unsigned long n, int base)
{
400d3a54:	006136        	entry	a1, 48
400d3a57:	017d      	mov.n	a7, a1
400d3a59:	57cb      	addi.n	a5, a7, 12
400d3a5b:	0529      	s32i.n	a2, a5, 0
400d3a5d:	278b      	addi.n	a2, a7, 8
400d3a5f:	0239      	s32i.n	a3, a2, 0
400d3a61:	274b      	addi.n	a2, a7, 4
400d3a63:	0249      	s32i.n	a4, a2, 0
    if(base == 0) {
400d3a65:	274b      	addi.n	a2, a7, 4
400d3a67:	0228      	l32i.n	a2, a2, 0
400d3a69:	d2dc      	bnez.n	a2, 400d3a8a <Print::print(unsigned long, int)+0x36>
        return write(n);
400d3a6b:	27cb      	addi.n	a2, a7, 12
400d3a6d:	0228      	l32i.n	a2, a2, 0
400d3a6f:	0228      	l32i.n	a2, a2, 0
400d3a71:	228b      	addi.n	a2, a2, 8
400d3a73:	0228      	l32i.n	a2, a2, 0
400d3a75:	378b      	addi.n	a3, a7, 8
400d3a77:	0338      	l32i.n	a3, a3, 0
400d3a79:	744030        	extui	a4, a3, 0, 8
400d3a7c:	37cb      	addi.n	a3, a7, 12
400d3a7e:	04bd      	mov.n	a11, a4
400d3a80:	03a8      	l32i.n	a10, a3, 0
400d3a82:	0002e0        	callx8	a2
400d3a85:	0a2d      	mov.n	a2, a10
400d3a87:	000606        	j	400d3aa3 <Print::print(unsigned long, int)+0x4f>
    } else {
        return printNumber(n, base);
400d3a8a:	04c722        	addi	a2, a7, 4
400d3a8d:	002222        	l32i	a2, a2, 0
400d3a90:	744020        	extui	a4, a2, 0, 8
400d3a93:	08c732        	addi	a3, a7, 8
400d3a96:	27cb      	addi.n	a2, a7, 12
400d3a98:	04cd      	mov.n	a12, a4
400d3a9a:	03b8      	l32i.n	a11, a3, 0
400d3a9c:	02a8      	l32i.n	a10, a2, 0
400d3a9e:	0000a5        	call8	400d3aa8 <Print::printNumber(unsigned long, unsigned char)>
400d3aa1:	0a2d      	mov.n	a2, a10
    }
}
400d3aa3:	f01d      	retw.n
400d3aa5:	000000        	ill

400d3aa8 <Print::printNumber(unsigned long, unsigned char)>:
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
{
400d3aa8:	00e136        	entry	a1, 112
400d3aab:	017d      	mov.n	a7, a1
400d3aad:	57cb      	addi.n	a5, a7, 12
400d3aaf:	0529      	s32i.n	a2, a5, 0
400d3ab1:	278b      	addi.n	a2, a7, 8
400d3ab3:	0239      	s32i.n	a3, a2, 0
400d3ab5:	043d      	mov.n	a3, a4
400d3ab7:	274b      	addi.n	a2, a7, 4
400d3ab9:	004232        	s8i	a3, a2, 0
400d3abc:	4cc722        	addi	a2, a7, 76
400d3abf:	f17131        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d3ac2:	0020c0        	memw
400d3ac5:	0338      	l32i.n	a3, a3, 0
400d3ac7:	0020c0        	memw
400d3aca:	0239      	s32i.n	a3, a2, 0
    char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
    char *str = &buf[sizeof(buf) - 1];
400d3acc:	032c      	movi.n	a3, 32
400d3ace:	20c722        	addi	a2, a7, 32
400d3ad1:	2bc742        	addi	a4, a7, 43
400d3ad4:	343a      	add.n	a3, a4, a3
400d3ad6:	0239      	s32i.n	a3, a2, 0

    *str = '\0';
400d3ad8:	20c722        	addi	a2, a7, 32
400d3adb:	0228      	l32i.n	a2, a2, 0
400d3add:	030c      	movi.n	a3, 0
400d3adf:	004232        	s8i	a3, a2, 0

    // prevent crash if called with base == 1
    if(base < 2) {
400d3ae2:	274b      	addi.n	a2, a7, 4
400d3ae4:	000222        	l8ui	a2, a2, 0
400d3ae7:	0622f6        	bgeui	a2, 2, 400d3af1 <Print::printNumber(unsigned long, unsigned char)+0x49>
        base = 10;
400d3aea:	274b      	addi.n	a2, a7, 4
400d3aec:	a30c      	movi.n	a3, 10
400d3aee:	004232        	s8i	a3, a2, 0
    }

    do {
        unsigned long m = n;
400d3af1:	24c722        	addi	a2, a7, 36
400d3af4:	378b      	addi.n	a3, a7, 8
400d3af6:	0338      	l32i.n	a3, a3, 0
400d3af8:	0239      	s32i.n	a3, a2, 0
        n /= base;
400d3afa:	274b      	addi.n	a2, a7, 4
400d3afc:	000232        	l8ui	a3, a2, 0
400d3aff:	278b      	addi.n	a2, a7, 8
400d3b01:	478b      	addi.n	a4, a7, 8
400d3b03:	0448      	l32i.n	a4, a4, 0
400d3b05:	c23430        	quou	a3, a4, a3
400d3b08:	0239      	s32i.n	a3, a2, 0
        char c = m - base * n;
400d3b0a:	24c722        	addi	a2, a7, 36
400d3b0d:	0228      	l32i.n	a2, a2, 0
400d3b0f:	744020        	extui	a4, a2, 0, 8
400d3b12:	278b      	addi.n	a2, a7, 8
400d3b14:	0228      	l32i.n	a2, a2, 0
400d3b16:	743020        	extui	a3, a2, 0, 8
400d3b19:	274b      	addi.n	a2, a7, 4
400d3b1b:	000222        	l8ui	a2, a2, 0
400d3b1e:	c12320        	mul16u	a2, a3, a2
400d3b21:	743020        	extui	a3, a2, 0, 8
400d3b24:	1fc722        	addi	a2, a7, 31
400d3b27:	c03430        	sub	a3, a4, a3
400d3b2a:	004232        	s8i	a3, a2, 0
        *--str = c < 10 ? c + '0' : c + 'A' - 10;
400d3b2d:	20c722        	addi	a2, a7, 32
400d3b30:	20c732        	addi	a3, a7, 32
400d3b33:	0338      	l32i.n	a3, a3, 0
400d3b35:	330b      	addi.n	a3, a3, -1
400d3b37:	0239      	s32i.n	a3, a2, 0
400d3b39:	1fc722        	addi	a2, a7, 31
400d3b3c:	000222        	l8ui	a2, a2, 0
400d3b3f:	0e92f6        	bgeui	a2, 10, 400d3b51 <Print::printNumber(unsigned long, unsigned char)+0xa9>
400d3b42:	1fc722        	addi	a2, a7, 31
400d3b45:	000222        	l8ui	a2, a2, 0
400d3b48:	30c222        	addi	a2, a2, 48
400d3b4b:	742020        	extui	a2, a2, 0, 8
400d3b4e:	0002c6        	j	400d3b5d <Print::printNumber(unsigned long, unsigned char)+0xb5>
400d3b51:	1fc722        	addi	a2, a7, 31
400d3b54:	000222        	l8ui	a2, a2, 0
400d3b57:	37c222        	addi	a2, a2, 55
400d3b5a:	742020        	extui	a2, a2, 0, 8
400d3b5d:	20c732        	addi	a3, a7, 32
400d3b60:	0338      	l32i.n	a3, a3, 0
400d3b62:	004322        	s8i	a2, a3, 0
    do {
400d3b65:	278b      	addi.n	a2, a7, 8
400d3b67:	0228      	l32i.n	a2, a2, 0
400d3b69:	c28c      	beqz.n	a2, 400d3b79 <Print::printNumber(unsigned long, unsigned char)+0xd1>
400d3b6b:	274b      	addi.n	a2, a7, 4
400d3b6d:	374b      	addi.n	a3, a7, 4
400d3b6f:	000332        	l8ui	a3, a3, 0
400d3b72:	004232        	s8i	a3, a2, 0
400d3b75:	ffde06        	j	400d3af1 <Print::printNumber(unsigned long, unsigned char)+0x49>
400d3b78:	c73200        	lsi	f0, a2, 0x31c
    } while(n);

    return write(str);
400d3b7b:	c72220        	lsi	f2, a2, 0x31c
400d3b7e:	b20c      	movi.n	a2, 11
400d3b80:	a20023        	lsi	f2, a0, 0x288
400d3b83:	650022        	l8ui	a2, a0, 101
400d3b86:	2dffe6        	bgei	a15, 0x100, 400d3bb7 <__static_initialization_and_destruction_0(int, int)+0x13>
400d3b89:	420a      	add.n	a4, a2, a0
}
400d3b8b:	314cc7        	ball	a12, a12, 400d3bc0 <__static_initialization_and_destruction_0(int, int)+0x1c>
400d3b8e:	f13d      	lsi	f3, a1, 4
400d3b90:	0020c0        	memw
400d3b93:	0448      	l32i.n	a4, a4, 0
400d3b95:	0020c0        	memw
400d3b98:	0338      	l32i.n	a3, a3, 0
400d3b9a:	021437        	beq	a4, a3, 400d3ba0 <Print::printNumber(unsigned long, unsigned char)+0xf8>
400d3b9d:	0270e5        	call8	400d62ac <__stack_chk_fail>
400d3ba0:	f01d      	retw.n
	...

400d3ba4 <__static_initialization_and_destruction_0(int, int)>:
        n += print(toPrint);
        remainder -= toPrint;
    }

    return n;
}
400d3ba4:	006136        	entry	a1, 48
400d3ba7:	207110        	or	a7, a1, a1
400d3baa:	0cc742        	addi	a4, a7, 12
400d3bad:	006422        	s32i	a2, a4, 0
400d3bb0:	278b      	addi.n	a2, a7, 8
400d3bb2:	0239      	s32i.n	a3, a2, 0
400d3bb4:	27cb      	addi.n	a2, a7, 12
400d3bb6:	0228      	l32i.n	a2, a2, 0
400d3bb8:	191266        	bnei	a2, 1, 400d3bd5 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3bbb:	278b      	addi.n	a2, a7, 8
400d3bbd:	0238      	l32i.n	a3, a2, 0
400d3bbf:	f12c21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3bc2:	0f9327        	bne	a3, a2, 400d3bd5 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3bc5:	f13021        	l32r	a2, 400d0088 <_flash_cache_start+0x70>
400d3bc8:	0e0c      	movi.n	a14, 0
400d3bca:	0d0c      	movi.n	a13, 0
400d3bcc:	0c0c      	movi.n	a12, 0
400d3bce:	0b0c      	movi.n	a11, 0
400d3bd0:	02ad      	mov.n	a10, a2
400d3bd2:	ffc065        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d3bd5:	0cc722        	addi	a2, a7, 12
400d3bd8:	002222        	l32i	a2, a2, 0
400d3bdb:	011256        	bnez	a2, 400d3bf0 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3bde:	278b      	addi.n	a2, a7, 8
400d3be0:	0238      	l32i.n	a3, a2, 0
400d3be2:	f12321        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3be5:	079327        	bne	a3, a2, 400d3bf0 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3be8:	f12821        	l32r	a2, 400d0088 <_flash_cache_start+0x70>
400d3beb:	02ad      	mov.n	a10, a2
400d3bed:	fd0725        	call8	400d0c60 <IPAddress::~IPAddress()>
400d3bf0:	f03d      	nop.n
400d3bf2:	f01d      	retw.n

400d3bf4 <_GLOBAL__sub_I__ZN5Print5writeEPKhj>:
400d3bf4:	004136        	entry	a1, 32
400d3bf7:	207110        	or	a7, a1, a1
400d3bfa:	f11d21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3bfd:	20b220        	or	a11, a2, a2
400d3c00:	01a0a2        	movi	a10, 1
400d3c03:	fffa25        	call8	400d3ba4 <__static_initialization_and_destruction_0(int, int)>
400d3c06:	f01d      	retw.n

400d3c08 <_GLOBAL__sub_D__ZN5Print5writeEPKhj>:
400d3c08:	004136        	entry	a1, 32
400d3c0b:	207110        	or	a7, a1, a1
400d3c0e:	f11821        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3c11:	20b220        	or	a11, a2, a2
400d3c14:	00a0a2        	movi	a10, 0
400d3c17:	fff8e5        	call8	400d3ba4 <__static_initialization_and_destruction_0(int, int)>
400d3c1a:	f01d      	retw.n

400d3c1c <String::capacity() const>:
        inline unsigned int capacity() const { return isSSO() ? (unsigned int)SSOSIZE - 1 : ptr.cap; } // Size of max string not including terminal NUL
400d3c1c:	006136        	entry	a1, 48
400d3c1f:	017d      	mov.n	a7, a1
400d3c21:	37cb      	addi.n	a3, a7, 12
400d3c23:	0329      	s32i.n	a2, a3, 0
400d3c25:	27cb      	addi.n	a2, a7, 12
400d3c27:	02a8      	l32i.n	a10, a2, 0
400d3c29:	ffd4a5        	call8	400d3974 <String::isSSO() const>
400d3c2c:	0a2d      	mov.n	a2, a10
400d3c2e:	328c      	beqz.n	a2, 400d3c35 <String::capacity() const+0x19>
400d3c30:	a20c      	movi.n	a2, 10
400d3c32:	000186        	j	400d3c3c <String::capacity() const+0x20>
400d3c35:	27cb      	addi.n	a2, a7, 12
400d3c37:	0228      	l32i.n	a2, a2, 0
400d3c39:	021222        	l16ui	a2, a2, 4
400d3c3c:	f01d      	retw.n
	...

400d3c40 <String::setLen(int)>:
        inline void setLen(int len) { if (isSSO()) sso.len = len; else ptr.len = len; }
400d3c40:	006136        	entry	a1, 48
400d3c43:	017d      	mov.n	a7, a1
400d3c45:	47cb      	addi.n	a4, a7, 12
400d3c47:	0429      	s32i.n	a2, a4, 0
400d3c49:	278b      	addi.n	a2, a7, 8
400d3c4b:	0239      	s32i.n	a3, a2, 0
400d3c4d:	27cb      	addi.n	a2, a7, 12
400d3c4f:	02a8      	l32i.n	a10, a2, 0
400d3c51:	ffd225        	call8	400d3974 <String::isSSO() const>
400d3c54:	0a2d      	mov.n	a2, a10
400d3c56:	42ac      	beqz.n	a2, 400d3c7e <String::setLen(int)+0x3e>
400d3c58:	278b      	addi.n	a2, a7, 8
400d3c5a:	0228      	l32i.n	a2, a2, 0
400d3c5c:	742020        	extui	a2, a2, 0, 8
400d3c5f:	642020        	extui	a2, a2, 0, 7
400d3c62:	743020        	extui	a3, a2, 0, 8
400d3c65:	27cb      	addi.n	a2, a7, 12
400d3c67:	0228      	l32i.n	a2, a2, 0
400d3c69:	643030        	extui	a3, a3, 0, 7
400d3c6c:	0b0252        	l8ui	a5, a2, 11
400d3c6f:	80af42        	movi	a4, -128
400d3c72:	104540        	and	a4, a5, a4
400d3c75:	203430        	or	a3, a4, a3
400d3c78:	0b4232        	s8i	a3, a2, 11
400d3c7b:	000346        	j	400d3c8c <String::setLen(int)+0x4c>
400d3c7e:	278b      	addi.n	a2, a7, 8
400d3c80:	0228      	l32i.n	a2, a2, 0
400d3c82:	f43020        	extui	a3, a2, 0, 16
400d3c85:	27cb      	addi.n	a2, a7, 12
400d3c87:	0228      	l32i.n	a2, a2, 0
400d3c89:	035232        	s16i	a3, a2, 6
400d3c8c:	f03d      	nop.n
400d3c8e:	f01d      	retw.n

400d3c90 <String::setCapacity(int)>:
        inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
400d3c90:	006136        	entry	a1, 48
400d3c93:	017d      	mov.n	a7, a1
400d3c95:	47cb      	addi.n	a4, a7, 12
400d3c97:	0429      	s32i.n	a2, a4, 0
400d3c99:	278b      	addi.n	a2, a7, 8
400d3c9b:	0239      	s32i.n	a3, a2, 0
400d3c9d:	27cb      	addi.n	a2, a7, 12
400d3c9f:	02a8      	l32i.n	a10, a2, 0
400d3ca1:	ffcd25        	call8	400d3974 <String::isSSO() const>
400d3ca4:	0a2d      	mov.n	a2, a10
400d3ca6:	023d      	mov.n	a3, a2
400d3ca8:	120c      	movi.n	a2, 1
400d3caa:	302320        	xor	a2, a3, a2
400d3cad:	742020        	extui	a2, a2, 0, 8
400d3cb0:	c28c      	beqz.n	a2, 400d3cc0 <String::setCapacity(int)+0x30>
400d3cb2:	278b      	addi.n	a2, a7, 8
400d3cb4:	0228      	l32i.n	a2, a2, 0
400d3cb6:	f43020        	extui	a3, a2, 0, 16
400d3cb9:	27cb      	addi.n	a2, a7, 12
400d3cbb:	0228      	l32i.n	a2, a2, 0
400d3cbd:	025232        	s16i	a3, a2, 4
400d3cc0:	f03d      	nop.n
400d3cc2:	f01d      	retw.n

400d3cc4 <String::setBuffer(char*)>:
	inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
400d3cc4:	006136        	entry	a1, 48
400d3cc7:	017d      	mov.n	a7, a1
400d3cc9:	47cb      	addi.n	a4, a7, 12
400d3ccb:	0429      	s32i.n	a2, a4, 0
400d3ccd:	278b      	addi.n	a2, a7, 8
400d3ccf:	0239      	s32i.n	a3, a2, 0
400d3cd1:	27cb      	addi.n	a2, a7, 12
400d3cd3:	02a8      	l32i.n	a10, a2, 0
400d3cd5:	ffc9e5        	call8	400d3974 <String::isSSO() const>
400d3cd8:	0a2d      	mov.n	a2, a10
400d3cda:	023d      	mov.n	a3, a2
400d3cdc:	120c      	movi.n	a2, 1
400d3cde:	302320        	xor	a2, a3, a2
400d3ce1:	742020        	extui	a2, a2, 0, 8
400d3ce4:	828c      	beqz.n	a2, 400d3cf0 <String::setBuffer(char*)+0x2c>
400d3ce6:	27cb      	addi.n	a2, a7, 12
400d3ce8:	0228      	l32i.n	a2, a2, 0
400d3cea:	378b      	addi.n	a3, a7, 8
400d3cec:	0338      	l32i.n	a3, a3, 0
400d3cee:	0239      	s32i.n	a3, a2, 0
400d3cf0:	f03d      	nop.n
400d3cf2:	f01d      	retw.n

400d3cf4 <String::wbuffer() const>:
        inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
400d3cf4:	006136        	entry	a1, 48
400d3cf7:	017d      	mov.n	a7, a1
400d3cf9:	37cb      	addi.n	a3, a7, 12
400d3cfb:	0329      	s32i.n	a2, a3, 0
400d3cfd:	27cb      	addi.n	a2, a7, 12
400d3cff:	02a8      	l32i.n	a10, a2, 0
400d3d01:	ffc725        	call8	400d3974 <String::isSSO() const>
400d3d04:	0a2d      	mov.n	a2, a10
400d3d06:	628c      	beqz.n	a2, 400d3d10 <String::wbuffer() const+0x1c>
400d3d08:	27cb      	addi.n	a2, a7, 12
400d3d0a:	0228      	l32i.n	a2, a2, 0
400d3d0c:	000186        	j	400d3d16 <String::wbuffer() const+0x22>
400d3d0f:	27cb00        	lsi	f0, a11, 156
400d3d12:	0228      	l32i.n	a2, a2, 0
400d3d14:	0228      	l32i.n	a2, a2, 0
400d3d16:	f01d      	retw.n

400d3d18 <String::String(char const*)>:

/*********************************************/
/*  Constructors                             */
/*********************************************/

String::String(const char *cstr) {
400d3d18:	006136        	entry	a1, 48
400d3d1b:	207110        	or	a7, a1, a1
400d3d1e:	0cc742        	addi	a4, a7, 12
400d3d21:	0429      	s32i.n	a2, a4, 0
400d3d23:	278b      	addi.n	a2, a7, 8
400d3d25:	0239      	s32i.n	a3, a2, 0
    init();
400d3d27:	0cc722        	addi	a2, a7, 12
400d3d2a:	02a8      	l32i.n	a10, a2, 0
400d3d2c:	0003a5        	call8	400d3d68 <String::init()>
    if (cstr)
400d3d2f:	278b      	addi.n	a2, a7, 8
400d3d31:	0228      	l32i.n	a2, a2, 0
400d3d33:	729c      	beqz.n	a2, 400d3d4e <String::String(char const*)+0x36>
        copy(cstr, strlen(cstr));
400d3d35:	278b      	addi.n	a2, a7, 8
400d3d37:	02a8      	l32i.n	a10, a2, 0
400d3d39:	f0d181        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d3d3c:	0008e0        	callx8	a8
400d3d3f:	0a4d      	mov.n	a4, a10
400d3d41:	378b      	addi.n	a3, a7, 8
400d3d43:	27cb      	addi.n	a2, a7, 12
400d3d45:	04cd      	mov.n	a12, a4
400d3d47:	03b8      	l32i.n	a11, a3, 0
400d3d49:	02a8      	l32i.n	a10, a2, 0
400d3d4b:	0033a5        	call8	400d4084 <String::copy(char const*, unsigned int)>
}
400d3d4e:	f03d      	nop.n
400d3d50:	f01d      	retw.n
	...

400d3d54 <String::~String()>:
    init();
    char buf[33];
    *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String() {
400d3d54:	006136        	entry	a1, 48
400d3d57:	017d      	mov.n	a7, a1
400d3d59:	37cb      	addi.n	a3, a7, 12
400d3d5b:	0329      	s32i.n	a2, a3, 0
    invalidate();
400d3d5d:	27cb      	addi.n	a2, a7, 12
400d3d5f:	02a8      	l32i.n	a10, a2, 0
400d3d61:	0003a5        	call8	400d3d9c <String::invalidate()>
}
400d3d64:	f03d      	nop.n
400d3d66:	f01d      	retw.n

400d3d68 <String::init()>:

// /*********************************************/
// /*  Memory Management                        */
// /*********************************************/

inline void String::init(void) {
400d3d68:	006136        	entry	a1, 48
400d3d6b:	017d      	mov.n	a7, a1
400d3d6d:	37cb      	addi.n	a3, a7, 12
400d3d6f:	0329      	s32i.n	a2, a3, 0
    setSSO(false);
400d3d71:	27cb      	addi.n	a2, a7, 12
400d3d73:	0b0c      	movi.n	a11, 0
400d3d75:	02a8      	l32i.n	a10, a2, 0
400d3d77:	184a65        	call8	400ec21c <String::setSSO(bool)>
    setCapacity(0);
400d3d7a:	27cb      	addi.n	a2, a7, 12
400d3d7c:	0b0c      	movi.n	a11, 0
400d3d7e:	02a8      	l32i.n	a10, a2, 0
400d3d80:	fff0e5        	call8	400d3c90 <String::setCapacity(int)>
    setLen(0);
400d3d83:	27cb      	addi.n	a2, a7, 12
400d3d85:	0b0c      	movi.n	a11, 0
400d3d87:	02a8      	l32i.n	a10, a2, 0
400d3d89:	ffeb65        	call8	400d3c40 <String::setLen(int)>
    setBuffer(nullptr);
400d3d8c:	27cb      	addi.n	a2, a7, 12
400d3d8e:	0b0c      	movi.n	a11, 0
400d3d90:	02a8      	l32i.n	a10, a2, 0
400d3d92:	fff325        	call8	400d3cc4 <String::setBuffer(char*)>
}
400d3d95:	f03d      	nop.n
400d3d97:	f01d      	retw.n
400d3d99:	000000        	ill

400d3d9c <String::invalidate()>:

void String::invalidate(void) {
400d3d9c:	006136        	entry	a1, 48
400d3d9f:	207110        	or	a7, a1, a1
400d3da2:	0cc732        	addi	a3, a7, 12
400d3da5:	0329      	s32i.n	a2, a3, 0
    if(!isSSO() && wbuffer())
400d3da7:	27cb      	addi.n	a2, a7, 12
400d3da9:	0022a2        	l32i	a10, a2, 0
400d3dac:	ffbc65        	call8	400d3974 <String::isSSO() const>
400d3daf:	0a2d      	mov.n	a2, a10
400d3db1:	023d      	mov.n	a3, a2
400d3db3:	120c      	movi.n	a2, 1
400d3db5:	302320        	xor	a2, a3, a2
400d3db8:	742020        	extui	a2, a2, 0, 8
400d3dbb:	f28c      	beqz.n	a2, 400d3dce <String::invalidate()+0x32>
400d3dbd:	27cb      	addi.n	a2, a7, 12
400d3dbf:	02a8      	l32i.n	a10, a2, 0
400d3dc1:	fff325        	call8	400d3cf4 <String::wbuffer() const>
400d3dc4:	0a2d      	mov.n	a2, a10
400d3dc6:	428c      	beqz.n	a2, 400d3dce <String::invalidate()+0x32>
400d3dc8:	120c      	movi.n	a2, 1
400d3dca:	0000c6        	j	400d3dd1 <String::invalidate()+0x35>
400d3dcd:	a02200        	addx4	a2, a2, a0
400d3dd0:	121600        	andbc	b1, b6, b0
400d3dd3:	c72201        	l32r	a0, 400c5a5c <_rtc_text_end+0x5a5c>
        free(wbuffer());
400d3dd6:	a80c      	movi.n	a8, 10
400d3dd8:	f1a502        	movi	a0, 0x5f1
400d3ddb:	ff          	.byte 0xff
400d3ddc:	0a2d      	mov.n	a2, a10
400d3dde:	02ad      	mov.n	a10, a2
400d3de0:	f0ab81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d3de3:	0008e0        	callx8	a8
    init();
400d3de6:	0cc722        	addi	a2, a7, 12
400d3de9:	0022a2        	l32i	a10, a2, 0
400d3dec:	fff7a5        	call8	400d3d68 <String::init()>
}
400d3def:	f03d      	nop.n
400d3df1:	000090        	retw

400d3df4 <String::reserve(unsigned int)>:

unsigned char String::reserve(unsigned int size) {
400d3df4:	006136        	entry	a1, 48
400d3df7:	207110        	or	a7, a1, a1
400d3dfa:	0cc742        	addi	a4, a7, 12
400d3dfd:	0429      	s32i.n	a2, a4, 0
400d3dff:	278b      	addi.n	a2, a7, 8
400d3e01:	0239      	s32i.n	a3, a2, 0
    if(buffer() && capacity() >= size)
400d3e03:	0cc722        	addi	a2, a7, 12
400d3e06:	02a8      	l32i.n	a10, a2, 0
400d3e08:	ffbbe5        	call8	400d39c8 <String::buffer() const>
400d3e0b:	0a2d      	mov.n	a2, a10
400d3e0d:	329c      	beqz.n	a2, 400d3e24 <String::reserve(unsigned int)+0x30>
400d3e0f:	27cb      	addi.n	a2, a7, 12
400d3e11:	02a8      	l32i.n	a10, a2, 0
400d3e13:	ffe0a5        	call8	400d3c1c <String::capacity() const>
400d3e16:	0a3d      	mov.n	a3, a10
400d3e18:	278b      	addi.n	a2, a7, 8
400d3e1a:	0228      	l32i.n	a2, a2, 0
400d3e1c:	043327        	bltu	a3, a2, 400d3e24 <String::reserve(unsigned int)+0x30>
400d3e1f:	120c      	movi.n	a2, 1
400d3e21:	000046        	j	400d3e26 <String::reserve(unsigned int)+0x32>
400d3e24:	020c      	movi.n	a2, 0
400d3e26:	428c      	beqz.n	a2, 400d3e2e <String::reserve(unsigned int)+0x3a>
        return 1;
400d3e28:	120c      	movi.n	a2, 1
400d3e2a:	001186        	j	400d3e74 <String::reserve(unsigned int)+0x80>
400d3e2d:	c73200        	lsi	f0, a2, 0x31c
    if(changeBuffer(size)) {
400d3e30:	cb08      	l32i.n	a0, a11, 48
400d3e32:	03b827        	bgeu	a8, a2, 400d3e39 <String::reserve(unsigned int)+0x45>
400d3e35:	02a8      	l32i.n	a10, a2, 0
400d3e37:	000425        	call8	400d3e78 <String::changeBuffer(unsigned int)>
400d3e3a:	0a2d      	mov.n	a2, a10
400d3e3c:	024d      	mov.n	a4, a2
400d3e3e:	130c      	movi.n	a3, 1
400d3e40:	020c      	movi.n	a2, 0
400d3e42:	932340        	movnez	a2, a3, a4
400d3e45:	742020        	extui	a2, a2, 0, 8
400d3e48:	62ac      	beqz.n	a2, 400d3e72 <String::reserve(unsigned int)+0x7e>
        if(len() == 0)
400d3e4a:	27cb      	addi.n	a2, a7, 12
400d3e4c:	02a8      	l32i.n	a10, a2, 0
400d3e4e:	ffb4a5        	call8	400d3998 <String::len() const>
400d3e51:	0a4d      	mov.n	a4, a10
400d3e53:	130c      	movi.n	a3, 1
400d3e55:	020c      	movi.n	a2, 0
400d3e57:	832340        	moveqz	a2, a3, a4
400d3e5a:	742020        	extui	a2, a2, 0, 8
400d3e5d:	c28c      	beqz.n	a2, 400d3e6d <String::reserve(unsigned int)+0x79>
            wbuffer()[0] = 0;
400d3e5f:	27cb      	addi.n	a2, a7, 12
400d3e61:	02a8      	l32i.n	a10, a2, 0
400d3e63:	ffe925        	call8	400d3cf4 <String::wbuffer() const>
400d3e66:	0a2d      	mov.n	a2, a10
400d3e68:	030c      	movi.n	a3, 0
400d3e6a:	004232        	s8i	a3, a2, 0
        return 1;
400d3e6d:	120c      	movi.n	a2, 1
400d3e6f:	000046        	j	400d3e74 <String::reserve(unsigned int)+0x80>
    }
    return 0;
400d3e72:	020c      	movi.n	a2, 0
}
400d3e74:	f01d      	retw.n
	...

400d3e78 <String::changeBuffer(unsigned int)>:

unsigned char String::changeBuffer(unsigned int maxStrLen) {
400d3e78:	00c136        	entry	a1, 96
400d3e7b:	207110        	or	a7, a1, a1
400d3e7e:	0cc742        	addi	a4, a7, 12
400d3e81:	0429      	s32i.n	a2, a4, 0
400d3e83:	278b      	addi.n	a2, a7, 8
400d3e85:	0239      	s32i.n	a3, a2, 0
400d3e87:	3cc722        	addi	a2, a7, 60
400d3e8a:	f07e31        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d3e8d:	0020c0        	memw
400d3e90:	0338      	l32i.n	a3, a3, 0
400d3e92:	0020c0        	memw
400d3e95:	0239      	s32i.n	a3, a2, 0
    // Can we use SSO here to avoid allocation?
    if (maxStrLen < sizeof(sso.buff) - 1) {
400d3e97:	a20c      	movi.n	a2, 10
400d3e99:	378b      	addi.n	a3, a7, 8
400d3e9b:	0338      	l32i.n	a3, a3, 0
400d3e9d:	023327        	bltu	a3, a2, 400d3ea3 <String::changeBuffer(unsigned int)+0x2b>
400d3ea0:	003046        	j	400d3f65 <String::changeBuffer(unsigned int)+0xed>
        if (isSSO() || !buffer()) {
400d3ea3:	0cc722        	addi	a2, a7, 12
400d3ea6:	02a8      	l32i.n	a10, a2, 0
400d3ea8:	ffaca5        	call8	400d3974 <String::isSSO() const>
400d3eab:	0a2d      	mov.n	a2, a10
400d3ead:	92cc      	bnez.n	a2, 400d3eba <String::changeBuffer(unsigned int)+0x42>
400d3eaf:	27cb      	addi.n	a2, a7, 12
400d3eb1:	02a8      	l32i.n	a10, a2, 0
400d3eb3:	ffb165        	call8	400d39c8 <String::buffer() const>
400d3eb6:	0a2d      	mov.n	a2, a10
400d3eb8:	32cc      	bnez.n	a2, 400d3ebf <String::changeBuffer(unsigned int)+0x47>
400d3eba:	120c      	movi.n	a2, 1
400d3ebc:	000086        	j	400d3ec2 <String::changeBuffer(unsigned int)+0x4a>
400d3ebf:	00a022        	movi	a2, 0
400d3ec2:	c2ac      	beqz.n	a2, 400d3ef2 <String::changeBuffer(unsigned int)+0x7a>
            // Already using SSO, nothing to do
	    uint16_t oldLen = len();
400d3ec4:	27cb      	addi.n	a2, a7, 12
400d3ec6:	02a8      	l32i.n	a10, a2, 0
400d3ec8:	fface5        	call8	400d3998 <String::len() const>
400d3ecb:	0a3d      	mov.n	a3, a10
400d3ecd:	1ec722        	addi	a2, a7, 30
400d3ed0:	005232        	s16i	a3, a2, 0
            setSSO(true);
400d3ed3:	27cb      	addi.n	a2, a7, 12
400d3ed5:	1b0c      	movi.n	a11, 1
400d3ed7:	02a8      	l32i.n	a10, a2, 0
400d3ed9:	183425        	call8	400ec21c <String::setSSO(bool)>
	    setLen(oldLen);
400d3edc:	1ec722        	addi	a2, a7, 30
400d3edf:	001232        	l16ui	a3, a2, 0
400d3ee2:	27cb      	addi.n	a2, a7, 12
400d3ee4:	03bd      	mov.n	a11, a3
400d3ee6:	0022a2        	l32i	a10, a2, 0
400d3ee9:	ffd565        	call8	400d3c40 <String::setLen(int)>
            return 1;
400d3eec:	120c      	movi.n	a2, 1
400d3eee:	005d86        	j	400d4068 <String::changeBuffer(unsigned int)+0x1f0>
400d3ef1:	27cb00        	lsi	f0, a11, 156
        } else { // if bufptr && !isSSO()
            // Using bufptr, need to shrink into sso.buff
            char temp[sizeof(sso.buff)];
            memcpy(temp, buffer(), maxStrLen);
400d3ef4:	02a8      	l32i.n	a10, a2, 0
400d3ef6:	ffad25        	call8	400d39c8 <String::buffer() const>
400d3ef9:	0a3d      	mov.n	a3, a10
400d3efb:	478b      	addi.n	a4, a7, 8
400d3efd:	31c722        	addi	a2, a7, 49
400d3f00:	04c8      	l32i.n	a12, a4, 0
400d3f02:	03bd      	mov.n	a11, a3
400d3f04:	20a220        	or	a10, a2, a2
400d3f07:	f06281        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d3f0a:	0008e0        	callx8	a8
            free(wbuffer());
400d3f0d:	27cb      	addi.n	a2, a7, 12
400d3f0f:	02a8      	l32i.n	a10, a2, 0
400d3f11:	ffde25        	call8	400d3cf4 <String::wbuffer() const>
400d3f14:	0a2d      	mov.n	a2, a10
400d3f16:	02ad      	mov.n	a10, a2
400d3f18:	f05d81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d3f1b:	0008e0        	callx8	a8
            uint16_t oldLen = len();
400d3f1e:	27cb      	addi.n	a2, a7, 12
400d3f20:	02a8      	l32i.n	a10, a2, 0
400d3f22:	ffa765        	call8	400d3998 <String::len() const>
400d3f25:	0a3d      	mov.n	a3, a10
400d3f27:	20c722        	addi	a2, a7, 32
400d3f2a:	005232        	s16i	a3, a2, 0
            setSSO(true);
400d3f2d:	27cb      	addi.n	a2, a7, 12
400d3f2f:	1b0c      	movi.n	a11, 1
400d3f31:	02a8      	l32i.n	a10, a2, 0
400d3f33:	182ea5        	call8	400ec21c <String::setSSO(bool)>
	    setLen(oldLen);
400d3f36:	20c722        	addi	a2, a7, 32
400d3f39:	001232        	l16ui	a3, a2, 0
400d3f3c:	27cb      	addi.n	a2, a7, 12
400d3f3e:	03bd      	mov.n	a11, a3
400d3f40:	02a8      	l32i.n	a10, a2, 0
400d3f42:	ffcfe5        	call8	400d3c40 <String::setLen(int)>
            memcpy(wbuffer(), temp, maxStrLen);
400d3f45:	27cb      	addi.n	a2, a7, 12
400d3f47:	0022a2        	l32i	a10, a2, 0
400d3f4a:	ffdaa5        	call8	400d3cf4 <String::wbuffer() const>
400d3f4d:	0a2d      	mov.n	a2, a10
400d3f4f:	478b      	addi.n	a4, a7, 8
400d3f51:	31c732        	addi	a3, a7, 49
400d3f54:	04c8      	l32i.n	a12, a4, 0
400d3f56:	03bd      	mov.n	a11, a3
400d3f58:	02ad      	mov.n	a10, a2
400d3f5a:	f04d81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d3f5d:	0008e0        	callx8	a8
            return 1;
400d3f60:	120c      	movi.n	a2, 1
400d3f62:	004086        	j	400d4068 <String::changeBuffer(unsigned int)+0x1f0>
        }
    }
    // Fallthrough to normal allocator
    size_t newSize = (maxStrLen + 16) & (~0xf);
400d3f65:	278b      	addi.n	a2, a7, 8
400d3f67:	0228      	l32i.n	a2, a2, 0
400d3f69:	10c242        	addi	a4, a2, 16
400d3f6c:	24c722        	addi	a2, a7, 36
400d3f6f:	037c      	movi.n	a3, -16
400d3f71:	103430        	and	a3, a4, a3
400d3f74:	0239      	s32i.n	a3, a2, 0
    // Make sure we can fit newsize in the buffer
    if (newSize > CAPACITY_MAX) {
400d3f76:	24c722        	addi	a2, a7, 36
400d3f79:	0228      	l32i.n	a2, a2, 0
400d3f7b:	0512b6        	bltui	a2, 0x10000, 400d3f84 <String::changeBuffer(unsigned int)+0x10c>
        return false;
400d3f7e:	020c      	movi.n	a2, 0
400d3f80:	003906        	j	400d4068 <String::changeBuffer(unsigned int)+0x1f0>
400d3f83:	c72200        	lsi	f0, a2, 0x31c
    }
    uint16_t oldLen = len();
400d3f86:	a20c      	movi.n	a2, 10
400d3f88:	e50022        	l8ui	a2, a0, 229
400d3f8b:	3dffa0        	lsi	f10, a15, 244
400d3f8e:	220a      	add.n	a2, a2, a0
400d3f90:	3222c7        	blt	a2, a12, 400d3fc6 <String::changeBuffer(unsigned int)+0x14e>
400d3f93:	cb0052        	l8ui	a5, a0, 203
    char *newbuffer = (char *) realloc(isSSO() ? nullptr : wbuffer(), newSize);
400d3f96:	02a827        	bge	a8, a2, 400d3f9c <String::changeBuffer(unsigned int)+0x124>
400d3f99:	ff9da5        	call8	400d3974 <String::isSSO() const>
400d3f9c:	0a2d      	mov.n	a2, a10
400d3f9e:	428c      	beqz.n	a2, 400d3fa6 <String::changeBuffer(unsigned int)+0x12e>
400d3fa0:	020c      	movi.n	a2, 0
400d3fa2:	000286        	j	400d3fb0 <String::changeBuffer(unsigned int)+0x138>
400d3fa5:	c72200        	lsi	f0, a2, 0x31c
400d3fa8:	a80c      	movi.n	a8, 10
400d3faa:	d4a502        	movi	a0, 0x5d4
400d3fad:	ff          	.byte 0xff
400d3fae:	0a2d      	mov.n	a2, a10
400d3fb0:	28c732        	addi	a3, a7, 40
400d3fb3:	24c742        	addi	a4, a7, 36
400d3fb6:	04b8      	l32i.n	a11, a4, 0
400d3fb8:	02ad      	mov.n	a10, a2
400d3fba:	f03681        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d3fbd:	0008e0        	callx8	a8
400d3fc0:	03a9      	s32i.n	a10, a3, 0
    if (newbuffer) {
400d3fc2:	28c722        	addi	a2, a7, 40
400d3fc5:	0228      	l32i.n	a2, a2, 0
400d3fc7:	09a216        	beqz	a2, 400d4065 <String::changeBuffer(unsigned int)+0x1ed>
        size_t oldSize = capacity() + 1; // include NULL.
400d3fca:	27cb      	addi.n	a2, a7, 12
400d3fcc:	02a8      	l32i.n	a10, a2, 0
400d3fce:	ffc4e5        	call8	400d3c1c <String::capacity() const>
400d3fd1:	0a3d      	mov.n	a3, a10
400d3fd3:	2cc722        	addi	a2, a7, 44
400d3fd6:	331b      	addi.n	a3, a3, 1
400d3fd8:	0239      	s32i.n	a3, a2, 0
        if (isSSO()) {
400d3fda:	27cb      	addi.n	a2, a7, 12
400d3fdc:	02a8      	l32i.n	a10, a2, 0
400d3fde:	ff9965        	call8	400d3974 <String::isSSO() const>
400d3fe1:	0a2d      	mov.n	a2, a10
400d3fe3:	129c      	beqz.n	a2, 400d3ff8 <String::changeBuffer(unsigned int)+0x180>
            // Copy the SSO buffer into allocated space
            memmove(newbuffer, sso.buff, sizeof(sso.buff));
400d3fe5:	27cb      	addi.n	a2, a7, 12
400d3fe7:	0238      	l32i.n	a3, a2, 0
400d3fe9:	28c722        	addi	a2, a7, 40
400d3fec:	bc0c      	movi.n	a12, 11
400d3fee:	03bd      	mov.n	a11, a3
400d3ff0:	02a8      	l32i.n	a10, a2, 0
400d3ff2:	f02981        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d3ff5:	0008e0        	callx8	a8
        }
        if (newSize > oldSize)
400d3ff8:	24c722        	addi	a2, a7, 36
400d3ffb:	2cc732        	addi	a3, a7, 44
400d3ffe:	0228      	l32i.n	a2, a2, 0
400d4000:	0338      	l32i.n	a3, a3, 0
400d4002:	24b327        	bgeu	a3, a2, 400d402a <String::changeBuffer(unsigned int)+0x1b2>
        {
            memset(newbuffer + oldSize, 0, newSize - oldSize);
400d4005:	28c732        	addi	a3, a7, 40
400d4008:	2cc722        	addi	a2, a7, 44
400d400b:	0338      	l32i.n	a3, a3, 0
400d400d:	0228      	l32i.n	a2, a2, 0
400d400f:	232a      	add.n	a2, a3, a2
400d4011:	24c742        	addi	a4, a7, 36
400d4014:	2cc732        	addi	a3, a7, 44
400d4017:	0448      	l32i.n	a4, a4, 0
400d4019:	0338      	l32i.n	a3, a3, 0
400d401b:	c03430        	sub	a3, a4, a3
400d401e:	03cd      	mov.n	a12, a3
400d4020:	0b0c      	movi.n	a11, 0
400d4022:	02ad      	mov.n	a10, a2
400d4024:	f01281        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d4027:	0008e0        	callx8	a8
        }
        setSSO(false);
400d402a:	27cb      	addi.n	a2, a7, 12
400d402c:	0b0c      	movi.n	a11, 0
400d402e:	02a8      	l32i.n	a10, a2, 0
400d4030:	181ea5        	call8	400ec21c <String::setSSO(bool)>
        setCapacity(newSize - 1);
400d4033:	24c722        	addi	a2, a7, 36
400d4036:	0228      	l32i.n	a2, a2, 0
400d4038:	220b      	addi.n	a2, a2, -1
400d403a:	023d      	mov.n	a3, a2
400d403c:	27cb      	addi.n	a2, a7, 12
400d403e:	03bd      	mov.n	a11, a3
400d4040:	02a8      	l32i.n	a10, a2, 0
400d4042:	ffc4e5        	call8	400d3c90 <String::setCapacity(int)>
        setLen(oldLen); // Needed in case of SSO where len() never existed
400d4045:	22c722        	addi	a2, a7, 34
400d4048:	001232        	l16ui	a3, a2, 0
400d404b:	27cb      	addi.n	a2, a7, 12
400d404d:	03bd      	mov.n	a11, a3
400d404f:	02a8      	l32i.n	a10, a2, 0
400d4051:	ffbee5        	call8	400d3c40 <String::setLen(int)>
        setBuffer(newbuffer);
400d4054:	28c732        	addi	a3, a7, 40
400d4057:	27cb      	addi.n	a2, a7, 12
400d4059:	03b8      	l32i.n	a11, a3, 0
400d405b:	02a8      	l32i.n	a10, a2, 0
400d405d:	ffc665        	call8	400d3cc4 <String::setBuffer(char*)>
        return 1;
400d4060:	120c      	movi.n	a2, 1
400d4062:	000086        	j	400d4068 <String::changeBuffer(unsigned int)+0x1f0>
    }
    return 0;
400d4065:	00a022        	movi	a2, 0
}
400d4068:	3cc742        	addi	a4, a7, 60
400d406b:	f00631        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d406e:	0020c0        	memw
400d4071:	002442        	l32i	a4, a4, 0
400d4074:	0020c0        	memw
400d4077:	002332        	l32i	a3, a3, 0
400d407a:	021437        	beq	a4, a3, 400d4080 <String::changeBuffer(unsigned int)+0x208>
400d407d:	0222e5        	call8	400d62ac <__stack_chk_fail>
400d4080:	f01d      	retw.n
	...

400d4084 <String::copy(char const*, unsigned int)>:

// /*********************************************/
// /*  Copy and Move                            */
// /*********************************************/

String & String::copy(const char *cstr, unsigned int length) {
400d4084:	006136        	entry	a1, 48
400d4087:	207110        	or	a7, a1, a1
400d408a:	0cc752        	addi	a5, a7, 12
400d408d:	0529      	s32i.n	a2, a5, 0
400d408f:	278b      	addi.n	a2, a7, 8
400d4091:	0239      	s32i.n	a3, a2, 0
400d4093:	274b      	addi.n	a2, a7, 4
400d4095:	0249      	s32i.n	a4, a2, 0
    if(!reserve(length)) {
400d4097:	374b      	addi.n	a3, a7, 4
400d4099:	27cb      	addi.n	a2, a7, 12
400d409b:	0023b2        	l32i	a11, a3, 0
400d409e:	02a8      	l32i.n	a10, a2, 0
400d40a0:	ffd525        	call8	400d3df4 <String::reserve(unsigned int)>
400d40a3:	0a2d      	mov.n	a2, a10
400d40a5:	024d      	mov.n	a4, a2
400d40a7:	130c      	movi.n	a3, 1
400d40a9:	020c      	movi.n	a2, 0
400d40ab:	832340        	moveqz	a2, a3, a4
400d40ae:	742020        	extui	a2, a2, 0, 8
400d40b1:	c28c      	beqz.n	a2, 400d40c1 <String::copy(char const*, unsigned int)+0x3d>
        invalidate();
400d40b3:	27cb      	addi.n	a2, a7, 12
400d40b5:	02a8      	l32i.n	a10, a2, 0
400d40b7:	ffce65        	call8	400d3d9c <String::invalidate()>
        return *this;
400d40ba:	27cb      	addi.n	a2, a7, 12
400d40bc:	0228      	l32i.n	a2, a2, 0
400d40be:	000c06        	j	400d40f2 <String::copy(char const*, unsigned int)+0x6e>
    }
    setLen(length);
400d40c1:	04c722        	addi	a2, a7, 4
400d40c4:	002232        	l32i	a3, a2, 0
400d40c7:	27cb      	addi.n	a2, a7, 12
400d40c9:	03bd      	mov.n	a11, a3
400d40cb:	0022a2        	l32i	a10, a2, 0
400d40ce:	ffb725        	call8	400d3c40 <String::setLen(int)>
    memmove(wbuffer(), cstr, length + 1);
400d40d1:	27cb      	addi.n	a2, a7, 12
400d40d3:	02a8      	l32i.n	a10, a2, 0
400d40d5:	ffc1e5        	call8	400d3cf4 <String::wbuffer() const>
400d40d8:	0a2d      	mov.n	a2, a10
400d40da:	374b      	addi.n	a3, a7, 4
400d40dc:	0338      	l32i.n	a3, a3, 0
400d40de:	431b      	addi.n	a4, a3, 1
400d40e0:	378b      	addi.n	a3, a7, 8
400d40e2:	04cd      	mov.n	a12, a4
400d40e4:	03b8      	l32i.n	a11, a3, 0
400d40e6:	02ad      	mov.n	a10, a2
400d40e8:	efec81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d40eb:	0008e0        	callx8	a8
    return *this;
400d40ee:	27cb      	addi.n	a2, a7, 12
400d40f0:	0228      	l32i.n	a2, a2, 0
}
400d40f2:	f01d      	retw.n

400d40f4 <__static_initialization_and_destruction_0(int, int)>:
    return 0.0;
}

// global empty string to allow returning const String& with nothing

const String emptyString;
400d40f4:	006136        	entry	a1, 48
400d40f7:	207110        	or	a7, a1, a1
400d40fa:	0cc742        	addi	a4, a7, 12
400d40fd:	0429      	s32i.n	a2, a4, 0
400d40ff:	278b      	addi.n	a2, a7, 8
400d4101:	0239      	s32i.n	a3, a2, 0
400d4103:	27cb      	addi.n	a2, a7, 12
400d4105:	0228      	l32i.n	a2, a2, 0
400d4107:	261266        	bnei	a2, 1, 400d4131 <__static_initialization_and_destruction_0(int, int)+0x3d>
400d410a:	278b      	addi.n	a2, a7, 8
400d410c:	0238      	l32i.n	a3, a2, 0
400d410e:	efd821        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d4111:	1c9327        	bne	a3, a2, 400d4131 <__static_initialization_and_destruction_0(int, int)+0x3d>
400d4114:	efe221        	l32r	a2, 400d009c <_flash_cache_start+0x84>
400d4117:	0e0c      	movi.n	a14, 0
400d4119:	0d0c      	movi.n	a13, 0
400d411b:	0c0c      	movi.n	a12, 0
400d411d:	0b0c      	movi.n	a11, 0
400d411f:	02ad      	mov.n	a10, a2
400d4121:	ff6b65        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d4124:	efdf31        	l32r	a3, 400d00a0 <_flash_cache_start+0x88>
400d4127:	efdf21        	l32r	a2, 400d00a4 <_flash_cache_start+0x8c>
400d412a:	03bd      	mov.n	a11, a3
400d412c:	02ad      	mov.n	a10, a2
400d412e:	ffbea5        	call8	400d3d18 <String::String(char const*)>
400d4131:	0cc722        	addi	a2, a7, 12
400d4134:	002222        	l32i	a2, a2, 0
400d4137:	92dc      	bnez.n	a2, 400d4154 <__static_initialization_and_destruction_0(int, int)+0x60>
400d4139:	278b      	addi.n	a2, a7, 8
400d413b:	0238      	l32i.n	a3, a2, 0
400d413d:	efcc21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d4140:	109327        	bne	a3, a2, 400d4154 <__static_initialization_and_destruction_0(int, int)+0x60>
400d4143:	efd821        	l32r	a2, 400d00a4 <_flash_cache_start+0x8c>
400d4146:	20a220        	or	a10, a2, a2
400d4149:	ffc0a5        	call8	400d3d54 <String::~String()>
400d414c:	efd421        	l32r	a2, 400d009c <_flash_cache_start+0x84>
400d414f:	02ad      	mov.n	a10, a2
400d4151:	fcb0e5        	call8	400d0c60 <IPAddress::~IPAddress()>
400d4154:	f03d      	nop.n
400d4156:	f01d      	retw.n

400d4158 <_GLOBAL__sub_I__ZN6StringC2EPKc>:
400d4158:	004136        	entry	a1, 32
400d415b:	207110        	or	a7, a1, a1
400d415e:	efc421        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d4161:	20b220        	or	a11, a2, a2
400d4164:	01a0a2        	movi	a10, 1
400d4167:	fff8e5        	call8	400d40f4 <__static_initialization_and_destruction_0(int, int)>
400d416a:	f01d      	retw.n

400d416c <_GLOBAL__sub_D__ZN6StringC2EPKc>:
400d416c:	004136        	entry	a1, 32
400d416f:	207110        	or	a7, a1, a1
400d4172:	efbf21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d4175:	20b220        	or	a11, a2, a2
400d4178:	00a0a2        	movi	a10, 0
400d417b:	fff7a5        	call8	400d40f4 <__static_initialization_and_destruction_0(int, int)>
400d417e:	f01d      	retw.n

400d4180 <uw_update_context_1>:
400d4180:	00c136        	entry	a1, 96
400d4183:	8c3c      	movi.n	a12, 56
400d4185:	02bd      	mov.n	a11, a2
400d4187:	20a110        	or	a10, a1, a1
400d418a:	efc181        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d418d:	0008e0        	callx8	a8
400d4190:	4388      	l32i.n	a8, a3, 16
400d4192:	a89c      	beqz.n	a8, 400d41b0 <uw_update_context_1+0x30>
400d4194:	1898      	l32i.n	a9, a8, 4
400d4196:	10c8d2        	addi	a13, a8, 16
400d4199:	f4c9a2        	addi	a10, a9, -12
400d419c:	20c8c2        	addi	a12, a8, 32
400d419f:	30c8b2        	addi	a11, a8, 48
400d41a2:	0aa8      	l32i.n	a10, a10, 0
400d41a4:	0289      	s32i.n	a8, a2, 0
400d41a6:	12d9      	s32i.n	a13, a2, 4
400d41a8:	22c9      	s32i.n	a12, a2, 8
400d41aa:	32b9      	s32i.n	a11, a2, 12
400d41ac:	001446        	j	400d4201 <uw_update_context_1+0x81>
400d41af:	429800        	xorb	b9, b8, b0
400d41b2:	52b8      	l32i.n	a11, a2, 20
400d41b4:	1388      	l32i.n	a8, a3, 4
400d41b6:	f4c9a2        	addi	a10, a9, -12
400d41b9:	f0cbb2        	addi	a11, a11, -16
400d41bc:	0aa8      	l32i.n	a10, a10, 0
400d41be:	418280        	srli	a8, a8, 2
400d41c1:	02b9      	s32i.n	a11, a2, 0
400d41c3:	0a28f6        	bgeui	a8, 2, 400d41d1 <uw_update_context_1+0x51>
400d41c6:	000906        	j	400d41ee <uw_update_context_1+0x6e>
400d41c9:	660000        	lsi	f0, a0, 0x198
400d41cc:	1f48      	l32i.n	a4, a15, 4
400d41ce:	000bc6        	j	400d4201 <uw_update_context_1+0x81>
400d41d1:	11c8c0        	slli	a12, a8, 4
400d41d4:	e0ccb2        	addi	a11, a12, -32
400d41d7:	41b4b0        	srli	a11, a11, 4
400d41da:	d24b      	addi.n	a13, a2, 4
400d41dc:	c0cac0        	sub	a12, a10, a12
400d41df:	bb1b      	addi.n	a11, a11, 1
400d41e1:	068b76        	loop	a11, 400d41eb <uw_update_context_1+0x6b>
400d41e4:	0dc9      	s32i.n	a12, a13, 0
400d41e6:	10ccc2        	addi	a12, a12, 16
400d41e9:	dd4b      	addi.n	a13, a13, 4
400d41eb:	fff706        	j	400d41cb <uw_update_context_1+0x4b>
400d41ee:	01bd      	mov.n	a11, a1
400d41f0:	a08820        	addx4	a8, a8, a2
400d41f3:	10c2d2        	addi	a13, a2, 16
400d41f6:	0bc8      	l32i.n	a12, a11, 0
400d41f8:	bb4b      	addi.n	a11, a11, 4
400d41fa:	08c9      	s32i.n	a12, a8, 0
400d41fc:	884b      	addi.n	a8, a8, 4
400d41fe:	f49d87        	bne	a13, a8, 400d41f6 <uw_update_context_1+0x76>
400d4201:	5299      	s32i.n	a9, a2, 20
400d4203:	42a9      	s32i.n	a10, a2, 16
400d4205:	0b0332        	l8ui	a3, a3, 11
400d4208:	c288      	l32i.n	a8, a2, 48
400d420a:	a38c      	beqz.n	a3, 400d4218 <uw_update_context_1+0x98>
400d420c:	ef9c31        	l32r	a3, 400d007c <_flash_cache_start+0x64>
400d420f:	203830        	or	a3, a8, a3
400d4212:	c239      	s32i.n	a3, a2, 48
400d4214:	f01d      	retw.n
400d4216:	310000        	srai	a0, a0, 16
400d4219:	30ef92        	s32c1i	a9, a15, 192
400d421c:	1038      	l32i.n	a3, a0, 4
400d421e:	c239      	s32i.n	a3, a2, 48
400d4220:	f01d      	retw.n
	...

400d4224 <uw_init_context_1>:
400d4224:	008136        	entry	a1, 64
400d4227:	efa081        	l32r	a8, 400d00a8 <_flash_cache_start+0x90>
400d422a:	1150e0        	slli	a5, a0, 2
400d422d:	158e80        	extui	a8, a8, 30, 2
400d4230:	018820        	slli	a8, a8, 30
400d4233:	8c3c      	movi.n	a12, 56
400d4235:	0b0c      	movi.n	a11, 0
400d4237:	02ad      	mov.n	a10, a2
400d4239:	415250        	srli	a5, a5, 2
400d423c:	205580        	or	a5, a5, a8
400d423f:	ef8b81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d4242:	0008e0        	callx8	a8
400d4245:	ef98a1        	l32r	a10, 400d00a8 <_flash_cache_start+0x90>
400d4248:	ef9991        	l32r	a9, 400d00ac <_flash_cache_start+0x94>
400d424b:	6259      	s32i.n	a5, a2, 24
400d424d:	109a90        	and	a9, a10, a9
400d4250:	40c152        	addi	a5, a1, 64
400d4253:	080c      	movi.n	a8, 0
400d4255:	5259      	s32i.n	a5, a2, 20
400d4257:	4239      	s32i.n	a3, a2, 16
400d4259:	7299      	s32i.n	a9, a2, 28
400d425b:	01bd      	mov.n	a11, a1
400d425d:	02ad      	mov.n	a10, a2
400d425f:	850c      	movi.n	a5, 8
400d4261:	0189      	s32i.n	a8, a1, 0
400d4263:	2189      	s32i.n	a8, a1, 8
400d4265:	3189      	s32i.n	a8, a1, 12
400d4267:	4189      	s32i.n	a8, a1, 16
400d4269:	5189      	s32i.n	a8, a1, 20
400d426b:	1159      	s32i.n	a5, a1, 4
400d426d:	fff125        	call8	400d4180 <uw_update_context_1>
400d4270:	6249      	s32i.n	a4, a2, 24
400d4272:	f01d      	retw.n

400d4274 <read_encoded_value_with_base>:
400d4274:	004136        	entry	a1, 32
400d4277:	085c      	movi.n	a8, 80
400d4279:	0f9287        	bne	a2, a8, 400d428c <read_encoded_value_with_base+0x18>
400d427c:	943b      	addi.n	a9, a4, 3
400d427e:	c27c      	movi.n	a2, -4
400d4280:	109920        	and	a9, a9, a2
400d4283:	0988      	l32i.n	a8, a9, 0
400d4285:	994b      	addi.n	a9, a9, 4
400d4287:	003fc6        	j	400d438a <read_encoded_value_with_base+0x116>
400d428a:	200000        	or	a0, a0, a0
400d428d:	0c3480        	lsi	f8, a4, 48
400d4290:	87c9      	s32i.n	a12, a7, 32
400d4292:	02b9      	s32i.n	a11, a2, 0
400d4294:	003506        	j	400d436c <read_encoded_value_with_base+0xf8>
400d4297:	ef8691        	l32r	a9, 400d00b0 <_flash_cache_start+0x98>
400d429a:	a08890        	addx4	a8, a8, a9
400d429d:	0888      	l32i.n	a8, a8, 0
400d429f:	0008a0        	jx	a8
400d42a2:	080c      	movi.n	a8, 0
400d42a4:	049d      	mov.n	a9, a4
400d42a6:	08cd      	mov.n	a12, a8
400d42a8:	991b      	addi.n	a9, a9, 1
400d42aa:	a90b      	addi.n	a10, a9, -1
400d42ac:	000aa2        	l8ui	a10, a10, 0
400d42af:	64b0a0        	extui	a11, a10, 0, 7
400d42b2:	401c00        	ssl	a12
400d42b5:	a1bb00        	sll	a11, a11
400d42b8:	23aa00        	sext	a10, a10, 7
400d42bb:	2088b0        	or	a8, a8, a11
400d42be:	cc7b      	addi.n	a12, a12, 7
400d42c0:	fe4a96        	bltz	a10, 400d42a8 <read_encoded_value_with_base+0x34>
400d42c3:	002ac6        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d42c6:	080c      	movi.n	a8, 0
400d42c8:	049d      	mov.n	a9, a4
400d42ca:	08bd      	mov.n	a11, a8
400d42cc:	991b      	addi.n	a9, a9, 1
400d42ce:	a90b      	addi.n	a10, a9, -1
400d42d0:	000ac2        	l8ui	a12, a10, 0
400d42d3:	64a0c0        	extui	a10, a12, 0, 7
400d42d6:	401b00        	ssl	a11
400d42d9:	a1aa00        	sll	a10, a10
400d42dc:	23dc00        	sext	a13, a12, 7
400d42df:	2088a0        	or	a8, a8, a10
400d42e2:	bb7b      	addi.n	a11, a11, 7
400d42e4:	fe4d96        	bltz	a13, 400d42cc <read_encoded_value_with_base+0x58>
400d42e7:	fa1c      	movi.n	a10, 31
400d42e9:	02bab7        	bgeu	a10, a11, 400d42ef <read_encoded_value_with_base+0x7b>
400d42ec:	002086        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d42ef:	7f6c67        	bbci	a12, 6, 400d4372 <read_encoded_value_with_base+0xfe>
400d42f2:	fa7c      	movi.n	a10, -1
400d42f4:	401b00        	ssl	a11
400d42f7:	a1ba00        	sll	a11, a10
400d42fa:	2088b0        	or	a8, a8, a11
400d42fd:	001cc6        	j	400d4374 <read_encoded_value_with_base+0x100>
400d4300:	010482        	l8ui	a8, a4, 1
400d4303:	000492        	l8ui	a9, a4, 0
400d4306:	118880        	slli	a8, a8, 8
400d4309:	208890        	or	a8, a8, a9
400d430c:	942b      	addi.n	a9, a4, 2
400d430e:	001806        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d4311:	048200        	extui	a8, a0, 2, 1
400d4314:	049201        	l32r	a0, 4009555c <_iram_end+0x7a08>
400d4317:	888000        	lsi	f0, a0, 0x220
400d431a:	889011        	l32r	a1, 400b655c <_iram_end+0x28a08>
400d431d:	888020        	lsi	f2, a0, 0x220
400d4320:	942b23        	lsi	f2, a11, 0x250
400d4323:	0012c6        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d4326:	0104a2        	l8ui	a10, a4, 1
400d4329:	0004b2        	l8ui	a11, a4, 0
400d432c:	020492        	l8ui	a9, a4, 2
400d432f:	11aa80        	slli	a10, a10, 8
400d4332:	030482        	l8ui	a8, a4, 3
400d4335:	20aab0        	or	a10, a10, a11
400d4338:	119900        	slli	a9, a9, 16
400d433b:	2099a0        	or	a9, a9, a10
400d433e:	018880        	slli	a8, a8, 24
400d4341:	208890        	or	a8, a8, a9
400d4344:	944b      	addi.n	a9, a4, 4
400d4346:	000a06        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d4349:	0104a2        	l8ui	a10, a4, 1
400d434c:	0004b2        	l8ui	a11, a4, 0
400d434f:	020492        	l8ui	a9, a4, 2
400d4352:	11aa80        	slli	a10, a10, 8
400d4355:	030482        	l8ui	a8, a4, 3
400d4358:	20aab0        	or	a10, a10, a11
400d435b:	119900        	slli	a9, a9, 16
400d435e:	2099a0        	or	a9, a9, a10
400d4361:	018880        	slli	a8, a8, 24
400d4364:	208890        	or	a8, a8, a9
400d4367:	948b      	addi.n	a9, a4, 8
400d4369:	000146        	j	400d4372 <read_encoded_value_with_base+0xfe>
400d436c:	201110        	or	a1, a1, a1
400d436f:	b6ffe5        	call8	4008b36c <abort>
400d4372:	489c      	beqz.n	a8, 400d438a <read_encoded_value_with_base+0x116>
400d4374:	70a0a2        	movi	a10, 112
400d4377:	10a2a0        	and	a10, a2, a10
400d437a:	f0caa2        	addi	a10, a10, -16
400d437d:	9343a0        	movnez	a4, a3, a10
400d4380:	232200        	sext	a2, a2, 7
400d4383:	884a      	add.n	a8, a8, a4
400d4385:	0012d6        	bgez	a2, 400d438a <read_encoded_value_with_base+0x116>
400d4388:	0888      	l32i.n	a8, a8, 0
400d438a:	0589      	s32i.n	a8, a5, 0
400d438c:	092d      	mov.n	a2, a9
400d438e:	f01d      	retw.n

400d4390 <base_of_encoded_value>:
400d4390:	004136        	entry	a1, 32
400d4393:	ffa082        	movi	a8, 255
400d4396:	381287        	beq	a2, a8, 400d43d2 <base_of_encoded_value+0x42>
400d4399:	70a082        	movi	a8, 112
400d439c:	102280        	and	a2, a2, a8
400d439f:	1dc226        	beqi	a2, 32, 400d43c0 <base_of_encoded_value+0x30>
400d43a2:	082c      	movi.n	a8, 32
400d43a4:	083827        	bltu	a8, a2, 400d43b0 <base_of_encoded_value+0x20>
400d43a7:	72ac      	beqz.n	a2, 400d43d2 <base_of_encoded_value+0x42>
400d43a9:	1fb266        	bnei	a2, 16, 400d43cc <base_of_encoded_value+0x3c>
400d43ac:	000886        	j	400d43d2 <base_of_encoded_value+0x42>
400d43af:	d22600        	quos	a2, a6, a0
400d43b2:	085c14        	lsi	f1, a12, 32
400d43b5:	191287        	beq	a2, a8, 400d43d2 <base_of_encoded_value+0x42>
400d43b8:	083c      	movi.n	a8, 48
400d43ba:	061287        	beq	a2, a8, 400d43c4 <base_of_encoded_value+0x34>
400d43bd:	0002c6        	j	400d43cc <base_of_encoded_value+0x3c>
400d43c0:	9328      	l32i.n	a2, a3, 36
400d43c2:	f01d      	retw.n
400d43c4:	a328      	l32i.n	a2, a3, 40
400d43c6:	f01d      	retw.n
400d43c8:	b328      	l32i.n	a2, a3, 44
400d43ca:	f01d      	retw.n
400d43cc:	201110        	or	a1, a1, a1
400d43cf:	b6f9e5        	call8	4008b36c <abort>
400d43d2:	020c      	movi.n	a2, 0
400d43d4:	f01d      	retw.n
	...

400d43d8 <uw_frame_state_for>:
400d43d8:	00a136        	entry	a1, 80
400d43db:	040c      	movi.n	a4, 0
400d43dd:	0349      	s32i.n	a4, a3, 0
400d43df:	1349      	s32i.n	a4, a3, 4
400d43e1:	2349      	s32i.n	a4, a3, 8
400d43e3:	3349      	s32i.n	a4, a3, 12
400d43e5:	4349      	s32i.n	a4, a3, 16
400d43e7:	5349      	s32i.n	a4, a3, 20
400d43e9:	c258      	l32i.n	a5, a2, 48
400d43eb:	62a8      	l32i.n	a10, a2, 24
400d43ed:	055f50        	extui	a5, a5, 31, 1
400d43f0:	550b      	addi.n	a5, a5, -1
400d43f2:	8249      	s32i.n	a4, a2, 32
400d43f4:	24c2b2        	addi	a11, a2, 36
400d43f7:	aa5a      	add.n	a10, a10, a5
400d43f9:	011d25        	call8	400d55cc <_Unwind_Find_FDE>
400d43fc:	0aed      	mov.n	a14, a10
400d43fe:	029a47        	bne	a10, a4, 400d4404 <uw_frame_state_for+0x2c>
400d4401:	006cc6        	j	400d45b8 <uw_frame_state_for+0x1e0>
400d4404:	1a48      	l32i.n	a4, a10, 4
400d4406:	6a4b      	addi.n	a6, a10, 4
400d4408:	c06640        	sub	a6, a6, a4
400d440b:	469b      	addi.n	a4, a6, 9
400d440d:	04ad      	mov.n	a10, a4
400d440f:	0861e2        	s32i	a14, a1, 32
400d4412:	ef1b81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d4415:	0008e0        	callx8	a8
400d4418:	090682        	l8ui	a8, a6, 9
400d441b:	aa1b      	addi.n	a10, a10, 1
400d441d:	65a052        	movi	a5, 101
400d4420:	a4aa      	add.n	a10, a4, a10
400d4422:	81e8      	l32i.n	a14, a1, 32
400d4424:	2c9857        	bne	a8, a5, 400d4454 <uw_frame_state_for+0x7c>
400d4427:	0a0672        	l8ui	a7, a6, 10
400d442a:	68a052        	movi	a5, 104
400d442d:	239757        	bne	a7, a5, 400d4454 <uw_frame_state_for+0x7c>
400d4430:	010a82        	l8ui	a8, a10, 1
400d4433:	000a42        	l8ui	a4, a10, 0
400d4436:	020a72        	l8ui	a7, a10, 2
400d4439:	030a52        	l8ui	a5, a10, 3
400d443c:	118880        	slli	a8, a8, 8
400d443f:	204840        	or	a4, a8, a4
400d4442:	117700        	slli	a7, a7, 16
400d4445:	204740        	or	a4, a7, a4
400d4448:	015580        	slli	a5, a5, 24
400d444b:	204540        	or	a4, a5, a4
400d444e:	3349      	s32i.n	a4, a3, 12
400d4450:	aa4b      	addi.n	a10, a10, 4
400d4452:	46bb      	addi.n	a4, a6, 11
400d4454:	aa1b      	addi.n	a10, a10, 1
400d4456:	5a0b      	addi.n	a5, a10, -1
400d4458:	000552        	l8ui	a5, a5, 0
400d445b:	235500        	sext	a5, a5, 7
400d445e:	ff2596        	bltz	a5, 400d4454 <uw_frame_state_for+0x7c>
400d4461:	aa1b      	addi.n	a10, a10, 1
400d4463:	5a0b      	addi.n	a5, a10, -1
400d4465:	000552        	l8ui	a5, a5, 0
400d4468:	235500        	sext	a5, a5, 7
400d446b:	ff2596        	bltz	a5, 400d4461 <uw_frame_state_for+0x89>
400d446e:	080652        	l8ui	a5, a6, 8
400d4471:	080c      	movi.n	a8, 0
400d4473:	087d      	mov.n	a7, a8
400d4475:	091566        	bnei	a5, 1, 400d4482 <uw_frame_state_for+0xaa>
400d4478:	000a52        	l8ui	a5, a10, 0
400d447b:	aa1b      	addi.n	a10, a10, 1
400d447d:	1359      	s32i.n	a5, a3, 4
400d447f:	000706        	j	400d449f <uw_frame_state_for+0xc7>
400d4482:	aa1b      	addi.n	a10, a10, 1
400d4484:	5a0b      	addi.n	a5, a10, -1
400d4486:	000552        	l8ui	a5, a5, 0
400d4489:	646050        	extui	a6, a5, 0, 7
400d448c:	401700        	ssl	a7
400d448f:	a16600        	sll	a6, a6
400d4492:	235500        	sext	a5, a5, 7
400d4495:	208860        	or	a8, a8, a6
400d4498:	777b      	addi.n	a7, a7, 7
400d449a:	fe4596        	bltz	a5, 400d4482 <uw_frame_state_for+0xaa>
400d449d:	1389      	s32i.n	a8, a3, 4
400d449f:	f57c      	movi.n	a5, -1
400d44a1:	094352        	s8i	a5, a3, 9
400d44a4:	0004b2        	l8ui	a11, a4, 0
400d44a7:	7aa052        	movi	a5, 122
400d44aa:	070c      	movi.n	a7, 0
400d44ac:	289b57        	bne	a11, a5, 400d44d8 <uw_frame_state_for+0x100>
400d44af:	078d      	mov.n	a8, a7
400d44b1:	aa1b      	addi.n	a10, a10, 1
400d44b3:	5a0b      	addi.n	a5, a10, -1
400d44b5:	000552        	l8ui	a5, a5, 0
400d44b8:	646050        	extui	a6, a5, 0, 7
400d44bb:	401800        	ssl	a8
400d44be:	a16600        	sll	a6, a6
400d44c1:	235500        	sext	a5, a5, 7
400d44c4:	207760        	or	a7, a7, a6
400d44c7:	887b      	addi.n	a8, a8, 7
400d44c9:	fe4596        	bltz	a5, 400d44b1 <uw_frame_state_for+0xd9>
400d44cc:	150c      	movi.n	a5, 1
400d44ce:	0a4352        	s8i	a5, a3, 10
400d44d1:	0104b2        	l8ui	a11, a4, 1
400d44d4:	7a7a      	add.n	a7, a10, a7
400d44d6:	441b      	addi.n	a4, a4, 1
400d44d8:	441b      	addi.n	a4, a4, 1
400d44da:	c54c      	movi.n	a5, 76
400d44dc:	265c      	movi.n	a6, 82
400d44de:	085c      	movi.n	a8, 80
400d44e0:	395c      	movi.n	a9, 83
400d44e2:	0017c6        	j	400d4545 <uw_frame_state_for+0x16d>
400d44e5:	0b9b57        	bne	a11, a5, 400d44f4 <uw_frame_state_for+0x11c>
400d44e8:	000ab2        	l8ui	a11, a10, 0
400d44eb:	aa1b      	addi.n	a10, a10, 1
400d44ed:	0943b2        	s8i	a11, a3, 9
400d44f0:	001306        	j	400d4540 <uw_frame_state_for+0x168>
400d44f3:	9b6700        	movnez.s	f6, f7, a0
400d44f6:	b20c      	movi.n	a2, 11
400d44f8:	000a      	add.n	a0, a0, a0
400d44fa:	aa1b      	addi.n	a10, a10, 1
400d44fc:	0843b2        	s8i	a11, a3, 8
400d44ff:	000f46        	j	400d4540 <uw_frame_state_for+0x168>
400d4502:	870000        	lsi	f0, a0, 0x21c
400d4505:	309b      	addi.n	a3, a0, 9
400d4507:	000af2        	l8ui	a15, a10, 0
400d450a:	ca1b      	addi.n	a12, a10, 1
400d450c:	02bd      	mov.n	a11, a2
400d450e:	0fad      	mov.n	a10, a15
400d4510:	6189      	s32i.n	a8, a1, 24
400d4512:	7199      	s32i.n	a9, a1, 28
400d4514:	81e9      	s32i.n	a14, a1, 32
400d4516:	41c9      	s32i.n	a12, a1, 16
400d4518:	51f9      	s32i.n	a15, a1, 20
400d451a:	ffe765        	call8	400d4390 <base_of_encoded_value>
400d451d:	51f8      	l32i.n	a15, a1, 20
400d451f:	41c8      	l32i.n	a12, a1, 16
400d4521:	0abd      	mov.n	a11, a10
400d4523:	01dd      	mov.n	a13, a1
400d4525:	0fad      	mov.n	a10, a15
400d4527:	ffd4e5        	call8	400d4274 <read_encoded_value_with_base>
400d452a:	01b8      	l32i.n	a11, a1, 0
400d452c:	6188      	l32i.n	a8, a1, 24
400d452e:	03b9      	s32i.n	a11, a3, 0
400d4530:	7198      	l32i.n	a9, a1, 28
400d4532:	81e8      	l32i.n	a14, a1, 32
400d4534:	000206        	j	400d4540 <uw_frame_state_for+0x168>
400d4537:	9b9700        	movnez.s	f9, f7, a0
400d453a:	1b0c10        	un.s	b0, f12, f1
400d453d:	0b43b2        	s8i	a11, a3, 11
400d4540:	0004b2        	l8ui	a11, a4, 0
400d4543:	441b      	addi.n	a4, a4, 1
400d4545:	f9cb56        	bnez	a11, 400d44e5 <uw_frame_state_for+0x10d>
400d4548:	57cc      	bnez.n	a7, 400d4551 <uw_frame_state_for+0x179>
400d454a:	0a7d      	mov.n	a7, a10
400d454c:	350c      	movi.n	a5, 3
400d454e:	080716        	beqz	a7, 400d45d2 <uw_frame_state_for+0x1fa>
400d4551:	080342        	l8ui	a4, a3, 8
400d4554:	ffa052        	movi	a5, 255
400d4557:	221457        	beq	a4, a5, 400d457d <uw_frame_state_for+0x1a5>
400d455a:	244040        	extui	a4, a4, 0, 3
400d455d:	212426        	beqi	a4, 2, 400d4582 <uw_frame_state_for+0x1aa>
400d4560:	0434f6        	bgeui	a4, 3, 400d4568 <uw_frame_state_for+0x190>
400d4563:	d48c      	beqz.n	a4, 400d4574 <uw_frame_state_for+0x19c>
400d4565:	000446        	j	400d457a <uw_frame_state_for+0x1a2>
400d4568:	083426        	beqi	a4, 3, 400d4574 <uw_frame_state_for+0x19c>
400d456b:	851c      	movi.n	a5, 24
400d456d:	134426        	beqi	a4, 4, 400d4584 <uw_frame_state_for+0x1ac>
400d4570:	000186        	j	400d457a <uw_frame_state_for+0x1a2>
400d4573:	051c00        	extui	a1, a0, 28, 1
400d4576:	000286        	j	400d4584 <uw_frame_state_for+0x1ac>
400d4579:	df2500        	f64cmph	a2, a5, a0, 13
400d457c:	850cb6        	bltui	a12, 0x8000, 400d4505 <uw_frame_state_for+0x12d>
400d457f:	000046        	j	400d4584 <uw_frame_state_for+0x1ac>
400d4582:	c50c      	movi.n	a5, 12
400d4584:	0a0342        	l8ui	a4, a3, 10
400d4587:	5e5a      	add.n	a5, a14, a5
400d4589:	00c416        	beqz	a4, 400d4599 <uw_frame_state_for+0x1c1>
400d458c:	551b      	addi.n	a5, a5, 1
400d458e:	450b      	addi.n	a4, a5, -1
400d4590:	000442        	l8ui	a4, a4, 0
400d4593:	234400        	sext	a4, a4, 7
400d4596:	ff2496        	bltz	a4, 400d458c <uw_frame_state_for+0x1b4>
400d4599:	090342        	l8ui	a4, a3, 9
400d459c:	ffa062        	movi	a6, 255
400d459f:	151467        	beq	a4, a6, 400d45b8 <uw_frame_state_for+0x1e0>
400d45a2:	02bd      	mov.n	a11, a2
400d45a4:	04ad      	mov.n	a10, a4
400d45a6:	ffdea5        	call8	400d4390 <base_of_encoded_value>
400d45a9:	0abd      	mov.n	a11, a10
400d45ab:	01dd      	mov.n	a13, a1
400d45ad:	04ad      	mov.n	a10, a4
400d45af:	05cd      	mov.n	a12, a5
400d45b1:	ffcc25        	call8	400d4274 <read_encoded_value_with_base>
400d45b4:	0148      	l32i.n	a4, a1, 0
400d45b6:	8249      	s32i.n	a4, a2, 32
400d45b8:	0228      	l32i.n	a2, a2, 0
400d45ba:	e28c      	beqz.n	a2, 400d45cc <uw_frame_state_for+0x1f4>
400d45bc:	0248      	l32i.n	a4, a2, 0
400d45be:	550c      	movi.n	a5, 5
400d45c0:	e48c      	beqz.n	a4, 400d45d2 <uw_frame_state_for+0x1fa>
400d45c2:	154e40        	extui	a4, a4, 30, 2
400d45c5:	1144e0        	slli	a4, a4, 2
400d45c8:	000086        	j	400d45ce <uw_frame_state_for+0x1f6>
400d45cb:	840c00        	extui	a0, a0, 12, 9
400d45ce:	1349      	s32i.n	a4, a3, 4
400d45d0:	050c      	movi.n	a5, 0
400d45d2:	052d      	mov.n	a2, a5
400d45d4:	f01d      	retw.n
	...

400d45d8 <uw_install_context_1>:
400d45d8:	004136        	entry	a1, 32
400d45db:	628b      	addi.n	a6, a2, 8
400d45dd:	150c      	movi.n	a5, 1
400d45df:	00a042        	movi	a4, 0
400d45e2:	0298      	l32i.n	a9, a2, 0
400d45e4:	0388      	l32i.n	a8, a3, 0
400d45e6:	04dd      	mov.n	a13, a4
400d45e8:	04ed      	mov.n	a14, a4
400d45ea:	93d590        	movnez	a13, a5, a9
400d45ed:	93e580        	movnez	a14, a5, a8
400d45f0:	224b      	addi.n	a2, a2, 4
400d45f2:	0c1c      	movi.n	a12, 16
400d45f4:	08bd      	mov.n	a11, a8
400d45f6:	09ad      	mov.n	a10, a9
400d45f8:	080ed7        	bnone	a14, a13, 400d4604 <uw_install_context_1+0x2c>
400d45fb:	051987        	beq	a9, a8, 400d4604 <uw_install_context_1+0x2c>
400d45fe:	eea481        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d4601:	0008e0        	callx8	a8
400d4604:	334b      	addi.n	a3, a3, 4
400d4606:	d89627        	bne	a6, a2, 400d45e2 <uw_install_context_1+0xa>
400d4609:	020c      	movi.n	a2, 0
400d460b:	f01d      	retw.n
400d460d:	000000        	ill

400d4610 <uw_update_context>:
400d4610:	004136        	entry	a1, 32
400d4613:	03bd      	mov.n	a11, a3
400d4615:	02ad      	mov.n	a10, a2
400d4617:	ffb6a5        	call8	400d4180 <uw_update_context_1>
400d461a:	5388      	l32i.n	a8, a3, 20
400d461c:	288c      	beqz.n	a8, 400d4622 <uw_update_context+0x12>
400d461e:	6289      	s32i.n	a8, a2, 24
400d4620:	f01d      	retw.n
400d4622:	1388      	l32i.n	a8, a3, 4
400d4624:	213280        	srai	a3, a8, 2
400d4627:	a03320        	addx4	a3, a3, a2
400d462a:	0338      	l32i.n	a3, a3, 0
400d462c:	148080        	extui	a8, a8, 0, 2
400d462f:	a08830        	addx4	a8, a8, a3
400d4632:	0898      	l32i.n	a9, a8, 0
400d4634:	ee8c31        	l32r	a3, 400d0064 <_flash_cache_start+0x4c>
400d4637:	7288      	l32i.n	a8, a2, 28
400d4639:	103930        	and	a3, a9, a3
400d463c:	203380        	or	a3, a3, a8
400d463f:	6239      	s32i.n	a3, a2, 24
400d4641:	f01d      	retw.n
	...

400d4644 <_Unwind_RaiseException_Phase2>:
400d4644:	008136        	entry	a1, 64
400d4647:	460c      	movi.n	a6, 4
400d4649:	050c      	movi.n	a5, 0
400d464b:	270c      	movi.n	a7, 2
400d464d:	01bd      	mov.n	a11, a1
400d464f:	03ad      	mov.n	a10, a3
400d4651:	ffd865        	call8	400d43d8 <uw_frame_state_for>
400d4654:	4288      	l32i.n	a8, a2, 16
400d4656:	5348      	l32i.n	a4, a3, 20
400d4658:	c04480        	sub	a4, a4, a8
400d465b:	058d      	mov.n	a8, a5
400d465d:	838640        	moveqz	a8, a6, a4
400d4660:	084d      	mov.n	a4, a8
400d4662:	eaec      	bnez.n	a10, 400d4694 <_Unwind_RaiseException_Phase2+0x50>
400d4664:	0188      	l32i.n	a8, a1, 0
400d4666:	38cc      	bnez.n	a8, 400d466d <_Unwind_RaiseException_Phase2+0x29>
400d4668:	e49c      	beqz.n	a4, 400d468a <_Unwind_RaiseException_Phase2+0x46>
400d466a:	000646        	j	400d4687 <_Unwind_RaiseException_Phase2+0x43>
400d466d:	02c8      	l32i.n	a12, a2, 0
400d466f:	12d8      	l32i.n	a13, a2, 4
400d4671:	03fd      	mov.n	a15, a3
400d4673:	02ed      	mov.n	a14, a2
400d4675:	20b470        	or	a11, a4, a7
400d4678:	1a0c      	movi.n	a10, 1
400d467a:	0008e0        	callx8	a8
400d467d:	177a26        	beqi	a10, 7, 400d4698 <_Unwind_RaiseException_Phase2+0x54>
400d4680:	e48a26        	beqi	a10, 8, 400d4668 <_Unwind_RaiseException_Phase2+0x24>
400d4683:	000346        	j	400d4694 <_Unwind_RaiseException_Phase2+0x50>
400d4686:	ce6500        	f64iter	a6, a5, a0, 0, 1
400d4689:	01bdb6        	bltui	a13, 16, 400d468e <_Unwind_RaiseException_Phase2+0x4a>
400d468c:	03ad      	mov.n	a10, a3
400d468e:	fff825        	call8	400d4610 <uw_update_context>
400d4691:	ffee06        	j	400d464d <_Unwind_RaiseException_Phase2+0x9>
400d4694:	220c      	movi.n	a2, 2
400d4696:	f01d      	retw.n
400d4698:	0a2d      	mov.n	a2, a10
400d469a:	f01d      	retw.n

400d469c <_Unwind_ForcedUnwind_Phase2>:
400d469c:	00a136        	entry	a1, 80
400d469f:	3258      	l32i.n	a5, a2, 12
400d46a1:	4268      	l32i.n	a6, a2, 16
400d46a3:	10c1b2        	addi	a11, a1, 16
400d46a6:	20a330        	or	a10, a3, a3
400d46a9:	ffd2e5        	call8	400d43d8 <uw_frame_state_for>
400d46ac:	0a4d      	mov.n	a4, a10
400d46ae:	03fd      	mov.n	a15, a3
400d46b0:	02ed      	mov.n	a14, a2
400d46b2:	ab0c      	movi.n	a11, 10
400d46b4:	1a0c      	movi.n	a10, 1
400d46b6:	002416        	beqz	a4, 400d46bc <_Unwind_ForcedUnwind_Phase2+0x20>
400d46b9:	275466        	bnei	a4, 5, 400d46e4 <_Unwind_ForcedUnwind_Phase2+0x48>
400d46bc:	2c5466        	bnei	a4, 5, 400d46ec <_Unwind_ForcedUnwind_Phase2+0x50>
400d46bf:	000f86        	j	400d4701 <_Unwind_ForcedUnwind_Phase2+0x65>
400d46c2:	4148      	l32i.n	a4, a1, 16
400d46c4:	1a0c      	movi.n	a10, 1
400d46c6:	b4cc      	bnez.n	a4, 400d46d5 <_Unwind_ForcedUnwind_Phase2+0x39>
400d46c8:	10c1b2        	addi	a11, a1, 16
400d46cb:	03ad      	mov.n	a10, a3
400d46cd:	fff425        	call8	400d4610 <uw_update_context>
400d46d0:	fff3c6        	j	400d46a3 <_Unwind_ForcedUnwind_Phase2+0x7>
400d46d3:	c80000        	lsi	f0, a0, 0x320
400d46d6:	12d802        	addmi	a0, a8, 0x1200
400d46d9:	0004e0        	callx8	a4
400d46dc:	0a4d      	mov.n	a4, a10
400d46de:	067a26        	beqi	a10, 7, 400d46e8 <_Unwind_ForcedUnwind_Phase2+0x4c>
400d46e1:	e38a26        	beqi	a10, 8, 400d46c8 <_Unwind_ForcedUnwind_Phase2+0x2c>
400d46e4:	220c      	movi.n	a2, 2
400d46e6:	f01d      	retw.n
400d46e8:	042d      	mov.n	a2, a4
400d46ea:	f01d      	retw.n
400d46ec:	02c8      	l32i.n	a12, a2, 0
400d46ee:	12d8      	l32i.n	a13, a2, 4
400d46f0:	0169      	s32i.n	a6, a1, 0
400d46f2:	0005e0        	callx8	a5
400d46f5:	03fd      	mov.n	a15, a3
400d46f7:	02ed      	mov.n	a14, a2
400d46f9:	ab0c      	movi.n	a11, 10
400d46fb:	fc3a16        	beqz	a10, 400d46c2 <_Unwind_ForcedUnwind_Phase2+0x26>
400d46fe:	fff886        	j	400d46e4 <_Unwind_ForcedUnwind_Phase2+0x48>
400d4701:	02c8      	l32i.n	a12, a2, 0
400d4703:	12d8      	l32i.n	a13, a2, 4
400d4705:	03fd      	mov.n	a15, a3
400d4707:	0169      	s32i.n	a6, a1, 0
400d4709:	02ed      	mov.n	a14, a2
400d470b:	1aa0b2        	movi	a11, 26
400d470e:	01a0a2        	movi	a10, 1
400d4711:	0005e0        	callx8	a5
400d4714:	fcca56        	bnez	a10, 400d46e4 <_Unwind_ForcedUnwind_Phase2+0x48>
400d4717:	fff346        	j	400d46e8 <_Unwind_ForcedUnwind_Phase2+0x4c>
	...

400d471c <_Unwind_GetGR>:
400d471c:	004136        	entry	a1, 32
400d471f:	218230        	srai	a8, a3, 2
400d4722:	a02820        	addx4	a2, a8, a2
400d4725:	0228      	l32i.n	a2, a2, 0
400d4727:	143030        	extui	a3, a3, 0, 2
400d472a:	a03320        	addx4	a3, a3, a2
400d472d:	0328      	l32i.n	a2, a3, 0
400d472f:	f01d      	retw.n
400d4731:	000000        	ill

400d4734 <_Unwind_GetCFA>:
400d4734:	004136        	entry	a1, 32
400d4737:	5228      	l32i.n	a2, a2, 20
400d4739:	f01d      	retw.n
	...

400d473c <_Unwind_SetGR>:
400d473c:	004136        	entry	a1, 32
400d473f:	218230        	srai	a8, a3, 2
400d4742:	a02820        	addx4	a2, a8, a2
400d4745:	0228      	l32i.n	a2, a2, 0
400d4747:	143030        	extui	a3, a3, 0, 2
400d474a:	a03320        	addx4	a3, a3, a2
400d474d:	0349      	s32i.n	a4, a3, 0
400d474f:	f01d      	retw.n
400d4751:	000000        	ill

400d4754 <_Unwind_GetIP>:
400d4754:	004136        	entry	a1, 32
400d4757:	6228      	l32i.n	a2, a2, 24
400d4759:	f01d      	retw.n
	...

400d475c <_Unwind_GetIPInfo>:
400d475c:	004136        	entry	a1, 32
400d475f:	c288      	l32i.n	a8, a2, 48
400d4761:	6228      	l32i.n	a2, a2, 24
400d4763:	058f80        	extui	a8, a8, 31, 1
400d4766:	0389      	s32i.n	a8, a3, 0
400d4768:	f01d      	retw.n
	...

400d476c <_Unwind_SetIP>:
400d476c:	004136        	entry	a1, 32
400d476f:	6239      	s32i.n	a3, a2, 24
400d4771:	f01d      	retw.n
	...

400d4774 <_Unwind_GetLanguageSpecificData>:
400d4774:	004136        	entry	a1, 32
400d4777:	8228      	l32i.n	a2, a2, 32
400d4779:	f01d      	retw.n
	...

400d477c <_Unwind_GetRegionStart>:
400d477c:	004136        	entry	a1, 32
400d477f:	b228      	l32i.n	a2, a2, 44
400d4781:	f01d      	retw.n
	...

400d4784 <_Unwind_FindEnclosingFunction>:
400d4784:	006136        	entry	a1, 48
400d4787:	ffc2a2        	addi	a10, a2, -1
400d478a:	20b110        	or	a11, a1, a1
400d478d:	00e3e5        	call8	400d55cc <_Unwind_Find_FDE>
400d4790:	022182        	l32i	a8, a1, 8
400d4793:	020c      	movi.n	a2, 0
400d4795:	9328a0        	movnez	a2, a8, a10
400d4798:	f01d      	retw.n
	...

400d479c <_Unwind_GetDataRelBase>:
400d479c:	004136        	entry	a1, 32
400d479f:	a228      	l32i.n	a2, a2, 40
400d47a1:	f01d      	retw.n
	...

400d47a4 <_Unwind_GetTextRelBase>:
400d47a4:	004136        	entry	a1, 32
400d47a7:	9228      	l32i.n	a2, a2, 36
400d47a9:	f01d      	retw.n
	...

400d47ac <_Unwind_RaiseException>:
400d47ac:	016136        	entry	a1, 176
400d47af:	017d      	mov.n	a7, a1
400d47b1:	b88f25        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d47b4:	ee4031        	l32r	a3, 400d00b4 <_flash_cache_start+0x9c>
400d47b7:	11c0e0        	slli	a12, a0, 2
400d47ba:	153e30        	extui	a3, a3, 30, 2
400d47bd:	013320        	slli	a3, a3, 30
400d47c0:	41c2c0        	srli	a12, a12, 2
400d47c3:	b0a0b2        	movi	a11, 176
400d47c6:	38c7a2        	addi	a10, a7, 56
400d47c9:	20cc30        	or	a12, a12, a3
400d47cc:	bb7a      	add.n	a11, a11, a7
400d47ce:	ffa565        	call8	400d4224 <uw_init_context_1>
400d47d1:	8c3c      	movi.n	a12, 56
400d47d3:	b7ca      	add.n	a11, a7, a12
400d47d5:	07ad      	mov.n	a10, a7
400d47d7:	ee2e81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d47da:	0008e0        	callx8	a8
400d47dd:	70c7b2        	addi	a11, a7, 112
400d47e0:	07ad      	mov.n	a10, a7
400d47e2:	ffbf65        	call8	400d43d8 <uw_frame_state_for>
400d47e5:	0a3d      	mov.n	a3, a10
400d47e7:	1b0c      	movi.n	a11, 1
400d47e9:	07fd      	mov.n	a15, a7
400d47eb:	02ed      	mov.n	a14, a2
400d47ed:	0bad      	mov.n	a10, a11
400d47ef:	265326        	beqi	a3, 5, 400d4819 <_Unwind_RaiseException+0x6d>
400d47f2:	338c      	beqz.n	a3, 400d47f9 <_Unwind_RaiseException+0x4d>
400d47f4:	320c      	movi.n	a2, 3
400d47f6:	001686        	j	400d4854 <_Unwind_RaiseException+0xa8>
400d47f9:	1c2782        	l32i	a8, a7, 112
400d47fc:	98cc      	bnez.n	a8, 400d4809 <_Unwind_RaiseException+0x5d>
400d47fe:	70c7b2        	addi	a11, a7, 112
400d4801:	07ad      	mov.n	a10, a7
400d4803:	ffe0e5        	call8	400d4610 <uw_update_context>
400d4806:	fff4c6        	j	400d47dd <_Unwind_RaiseException+0x31>
400d4809:	02c8      	l32i.n	a12, a2, 0
400d480b:	12d8      	l32i.n	a13, a2, 4
400d480d:	0008e0        	callx8	a8
400d4810:	0a6a26        	beqi	a10, 6, 400d481e <_Unwind_RaiseException+0x72>
400d4813:	e78a26        	beqi	a10, 8, 400d47fe <_Unwind_RaiseException+0x52>
400d4816:	fff686        	j	400d47f4 <_Unwind_RaiseException+0x48>
400d4819:	032d      	mov.n	a2, a3
400d481b:	000d46        	j	400d4854 <_Unwind_RaiseException+0xa8>
400d481e:	3239      	s32i.n	a3, a2, 12
400d4820:	5738      	l32i.n	a3, a7, 20
400d4822:	8c3c      	movi.n	a12, 56
400d4824:	b7ca      	add.n	a11, a7, a12
400d4826:	4239      	s32i.n	a3, a2, 16
400d4828:	20a770        	or	a10, a7, a7
400d482b:	ee1981        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d482e:	0008e0        	callx8	a8
400d4831:	02ad      	mov.n	a10, a2
400d4833:	07bd      	mov.n	a11, a7
400d4835:	ffe0e5        	call8	400d4644 <_Unwind_RaiseException_Phase2>
400d4838:	0a2d      	mov.n	a2, a10
400d483a:	167a66        	bnei	a10, 7, 400d4854 <_Unwind_RaiseException+0xa8>
400d483d:	07bd      	mov.n	a11, a7
400d483f:	38c7a2        	addi	a10, a7, 56
400d4842:	ffd965        	call8	400d45d8 <uw_install_context_1>
400d4845:	6738      	l32i.n	a3, a7, 24
400d4847:	1143e0        	slli	a4, a3, 2
400d484a:	442b      	addi.n	a4, a4, 2
400d484c:	404200        	ssai	2
400d484f:	810440        	src	a0, a4, a4
400d4852:	f01d      	retw.n
400d4854:	f01d      	retw.n
	...

400d4858 <_Unwind_ForcedUnwind>:
400d4858:	012136        	entry	a1, 144
400d485b:	017d      	mov.n	a7, a1
400d485d:	b88465        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4860:	ee1681        	l32r	a8, 400d00b8 <_flash_cache_start+0xa0>
400d4863:	11c0e0        	slli	a12, a0, 2
400d4866:	158e80        	extui	a8, a8, 30, 2
400d4869:	018820        	slli	a8, a8, 30
400d486c:	41c2c0        	srli	a12, a12, 2
400d486f:	90a0b2        	movi	a11, 144
400d4872:	20cc80        	or	a12, a12, a8
400d4875:	38c7a2        	addi	a10, a7, 56
400d4878:	bb7a      	add.n	a11, a11, a7
400d487a:	ff9aa5        	call8	400d4224 <uw_init_context_1>
400d487d:	38c7b2        	addi	a11, a7, 56
400d4880:	8c3c      	movi.n	a12, 56
400d4882:	07ad      	mov.n	a10, a7
400d4884:	ee0381        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d4887:	0008e0        	callx8	a8
400d488a:	07bd      	mov.n	a11, a7
400d488c:	3239      	s32i.n	a3, a2, 12
400d488e:	4249      	s32i.n	a4, a2, 16
400d4890:	02ad      	mov.n	a10, a2
400d4892:	ffe0a5        	call8	400d469c <_Unwind_ForcedUnwind_Phase2>
400d4895:	037a26        	beqi	a10, 7, 400d489c <_Unwind_ForcedUnwind+0x44>
400d4898:	0a2d      	mov.n	a2, a10
400d489a:	f01d      	retw.n
400d489c:	07bd      	mov.n	a11, a7
400d489e:	38c7a2        	addi	a10, a7, 56
400d48a1:	ffd365        	call8	400d45d8 <uw_install_context_1>
400d48a4:	6738      	l32i.n	a3, a7, 24
400d48a6:	1143e0        	slli	a4, a3, 2
400d48a9:	442b      	addi.n	a4, a4, 2
400d48ab:	404200        	ssai	2
400d48ae:	810440        	src	a0, a4, a4
400d48b1:	f01d      	retw.n
	...

400d48b4 <_Unwind_Resume>:
400d48b4:	012136        	entry	a1, 144
400d48b7:	017d      	mov.n	a7, a1
400d48b9:	b87ea5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d48bc:	ee0081        	l32r	a8, 400d00bc <_flash_cache_start+0xa4>
400d48bf:	11c0e0        	slli	a12, a0, 2
400d48c2:	158e80        	extui	a8, a8, 30, 2
400d48c5:	018820        	slli	a8, a8, 30
400d48c8:	41c2c0        	srli	a12, a12, 2
400d48cb:	90a0b2        	movi	a11, 144
400d48ce:	20cc80        	or	a12, a12, a8
400d48d1:	38c7a2        	addi	a10, a7, 56
400d48d4:	bb7a      	add.n	a11, a11, a7
400d48d6:	ff94e5        	call8	400d4224 <uw_init_context_1>
400d48d9:	8c3c      	movi.n	a12, 56
400d48db:	b7ca      	add.n	a11, a7, a12
400d48dd:	07ad      	mov.n	a10, a7
400d48df:	edec81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d48e2:	0008e0        	callx8	a8
400d48e5:	3288      	l32i.n	a8, a2, 12
400d48e7:	07bd      	mov.n	a11, a7
400d48e9:	02ad      	mov.n	a10, a2
400d48eb:	68cc      	bnez.n	a8, 400d48f5 <_Unwind_Resume+0x41>
400d48ed:	ffd565        	call8	400d4644 <_Unwind_RaiseException_Phase2>
400d48f0:	000106        	j	400d48f8 <_Unwind_Resume+0x44>
400d48f3:	650000        	extui	a0, a0, 16, 7
400d48f6:	ffda      	add.n	a15, a15, a13
400d48f8:	027a26        	beqi	a10, 7, 400d48fe <_Unwind_Resume+0x4a>
400d48fb:	b6a725        	call8	4008b36c <abort>
400d48fe:	20b770        	or	a11, a7, a7
400d4901:	38c7a2        	addi	a10, a7, 56
400d4904:	ffcd25        	call8	400d45d8 <uw_install_context_1>
400d4907:	062722        	l32i	a2, a7, 24
400d490a:	1132e0        	slli	a3, a2, 2
400d490d:	02c332        	addi	a3, a3, 2
400d4910:	404200        	ssai	2
400d4913:	810330        	src	a0, a3, a3
400d4916:	f01d      	retw.n

400d4918 <_Unwind_Resume_or_Rethrow>:
400d4918:	012136        	entry	a1, 144
400d491b:	3238      	l32i.n	a3, a2, 12
400d491d:	017d      	mov.n	a7, a1
400d491f:	a3cc      	bnez.n	a3, 400d492d <_Unwind_Resume_or_Rethrow+0x15>
400d4921:	02ad      	mov.n	a10, a2
400d4923:	ffe8a5        	call8	400d47ac <_Unwind_RaiseException>
400d4926:	0a2d      	mov.n	a2, a10
400d4928:	f01d      	retw.n
400d492a:	000000        	ill
400d492d:	b87765        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4930:	ede481        	l32r	a8, 400d00c0 <_flash_cache_start+0xa8>
400d4933:	11c0e0        	slli	a12, a0, 2
400d4936:	158e80        	extui	a8, a8, 30, 2
400d4939:	018820        	slli	a8, a8, 30
400d493c:	41c2c0        	srli	a12, a12, 2
400d493f:	90a0b2        	movi	a11, 144
400d4942:	20cc80        	or	a12, a12, a8
400d4945:	38c7a2        	addi	a10, a7, 56
400d4948:	80bb70        	add	a11, a11, a7
400d494b:	ff8da5        	call8	400d4224 <uw_init_context_1>
400d494e:	38a0c2        	movi	a12, 56
400d4951:	80b7c0        	add	a11, a7, a12
400d4954:	07ad      	mov.n	a10, a7
400d4956:	edce81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d4959:	0008e0        	callx8	a8
400d495c:	07bd      	mov.n	a11, a7
400d495e:	02ad      	mov.n	a10, a2
400d4960:	ffd3a5        	call8	400d469c <_Unwind_ForcedUnwind_Phase2>
400d4963:	027a26        	beqi	a10, 7, 400d4969 <_Unwind_Resume_or_Rethrow+0x51>
400d4966:	b6a065        	call8	4008b36c <abort>
400d4969:	07bd      	mov.n	a11, a7
400d496b:	38c7a2        	addi	a10, a7, 56
400d496e:	ffc6a5        	call8	400d45d8 <uw_install_context_1>
400d4971:	6738      	l32i.n	a3, a7, 24
400d4973:	1143e0        	slli	a4, a3, 2
400d4976:	442b      	addi.n	a4, a4, 2
400d4978:	404200        	ssai	2
400d497b:	810440        	src	a0, a4, a4
400d497e:	f01d      	retw.n

400d4980 <_Unwind_DeleteException>:
400d4980:	004136        	entry	a1, 32
400d4983:	2288      	l32i.n	a8, a2, 8
400d4985:	588c      	beqz.n	a8, 400d498e <_Unwind_DeleteException+0xe>
400d4987:	02bd      	mov.n	a11, a2
400d4989:	1a0c      	movi.n	a10, 1
400d498b:	0008e0        	callx8	a8
400d498e:	f01d      	retw.n

400d4990 <_Unwind_Backtrace>:
400d4990:	00e136        	entry	a1, 112
400d4993:	017d      	mov.n	a7, a1
400d4995:	b870e5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4998:	edcb41        	l32r	a4, 400d00c4 <_flash_cache_start+0xac>
400d499b:	11c0e0        	slli	a12, a0, 2
400d499e:	154e40        	extui	a4, a4, 30, 2
400d49a1:	014420        	slli	a4, a4, 30
400d49a4:	41c2c0        	srli	a12, a12, 2
400d49a7:	20cc40        	or	a12, a12, a4
400d49aa:	70c7b2        	addi	a11, a7, 112
400d49ad:	07ad      	mov.n	a10, a7
400d49af:	ff8765        	call8	400d4224 <uw_init_context_1>
400d49b2:	38c7b2        	addi	a11, a7, 56
400d49b5:	07ad      	mov.n	a10, a7
400d49b7:	ffa225        	call8	400d43d8 <uw_frame_state_for>
400d49ba:	0a4d      	mov.n	a4, a10
400d49bc:	03bd      	mov.n	a11, a3
400d49be:	07ad      	mov.n	a10, a7
400d49c0:	148c      	beqz.n	a4, 400d49c5 <_Unwind_Backtrace+0x35>
400d49c2:	125466        	bnei	a4, 5, 400d49d8 <_Unwind_Backtrace+0x48>
400d49c5:	0002e0        	callx8	a2
400d49c8:	38c7b2        	addi	a11, a7, 56
400d49cb:	9acc      	bnez.n	a10, 400d49d8 <_Unwind_Backtrace+0x48>
400d49cd:	07ad      	mov.n	a10, a7
400d49cf:	095426        	beqi	a4, 5, 400d49dc <_Unwind_Backtrace+0x4c>
400d49d2:	ffc3e5        	call8	400d4610 <uw_update_context>
400d49d5:	fff646        	j	400d49b2 <_Unwind_Backtrace+0x22>
400d49d8:	320c      	movi.n	a2, 3
400d49da:	f01d      	retw.n
400d49dc:	042d      	mov.n	a2, a4
400d49de:	f01d      	retw.n

400d49e0 <frame_downheap>:
400d49e0:	006136        	entry	a1, 48
400d49e3:	1175f0        	slli	a7, a5, 1
400d49e6:	771b      	addi.n	a7, a7, 1
400d49e8:	0129      	s32i.n	a2, a1, 0
400d49ea:	1139      	s32i.n	a3, a1, 4
400d49ec:	042767        	blt	a7, a6, 400d49f4 <frame_downheap+0x14>
400d49ef:	f01d      	retw.n
400d49f1:	035d00        	lsi	f0, a13, 12
400d49f4:	371b      	addi.n	a3, a7, 1
400d49f6:	072367        	blt	a3, a6, 400d4a01 <frame_downheap+0x21>
400d49f9:	a02740        	addx4	a2, a7, a4
400d49fc:	073d      	mov.n	a3, a7
400d49fe:	000786        	j	400d4a20 <frame_downheap+0x40>
400d4a01:	1187e0        	slli	a8, a7, 2
400d4a04:	d84b      	addi.n	a13, a8, 4
400d4a06:	d4da      	add.n	a13, a4, a13
400d4a08:	248a      	add.n	a2, a4, a8
400d4a0a:	02b8      	l32i.n	a11, a2, 0
400d4a0c:	0dc8      	l32i.n	a12, a13, 0
400d4a0e:	01a8      	l32i.n	a10, a1, 0
400d4a10:	1188      	l32i.n	a8, a1, 4
400d4a12:	0261d2        	s32i	a13, a1, 8
400d4a15:	0008e0        	callx8	a8
400d4a18:	21d8      	l32i.n	a13, a1, 8
400d4a1a:	b337a0        	movgez	a3, a7, a10
400d4a1d:	a32da0        	movltz	a2, a13, a10
400d4a20:	a05540        	addx4	a5, a5, a4
400d4a23:	02c8      	l32i.n	a12, a2, 0
400d4a25:	05b8      	l32i.n	a11, a5, 0
400d4a27:	01a8      	l32i.n	a10, a1, 0
400d4a29:	1188      	l32i.n	a8, a1, 4
400d4a2b:	1173f0        	slli	a7, a3, 1
400d4a2e:	0008e0        	callx8	a8
400d4a31:	771b      	addi.n	a7, a7, 1
400d4a33:	00aad6        	bgez	a10, 400d4a41 <frame_downheap+0x61>
400d4a36:	02b8      	l32i.n	a11, a2, 0
400d4a38:	05a8      	l32i.n	a10, a5, 0
400d4a3a:	05b9      	s32i.n	a11, a5, 0
400d4a3c:	02a9      	s32i.n	a10, a2, 0
400d4a3e:	b02767        	blt	a7, a6, 400d49f2 <frame_downheap+0x12>
400d4a41:	f01d      	retw.n
	...

400d4a44 <frame_heapsort>:
400d4a44:	004136        	entry	a1, 32
400d4a47:	1458      	l32i.n	a5, a4, 4
400d4a49:	648b      	addi.n	a6, a4, 8
400d4a4b:	417150        	srli	a7, a5, 1
400d4a4e:	770b      	addi.n	a7, a7, -1
400d4a50:	0e0766        	bnei	a7, -1, 400d4a62 <frame_heapsort+0x1e>
400d4a53:	ed8481        	l32r	a8, 400d0064 <_flash_cache_start+0x4c>
400d4a56:	750b      	addi.n	a7, a5, -1
400d4a58:	558a      	add.n	a5, a5, a8
400d4a5a:	a05560        	addx4	a5, a5, a6
400d4a5d:	1817e6        	bgei	a7, 1, 400d4a79 <frame_heapsort+0x35>
400d4a60:	f01d      	retw.n
400d4a62:	07dd      	mov.n	a13, a7
400d4a64:	05ed      	mov.n	a14, a5
400d4a66:	770b      	addi.n	a7, a7, -1
400d4a68:	06cd      	mov.n	a12, a6
400d4a6a:	03bd      	mov.n	a11, a3
400d4a6c:	02ad      	mov.n	a10, a2
400d4a6e:	fff725        	call8	400d49e0 <frame_downheap>
400d4a71:	ed0766        	bnei	a7, -1, 400d4a62 <frame_heapsort+0x1e>
400d4a74:	fff6c6        	j	400d4a53 <frame_heapsort+0xf>
400d4a77:	980000        	lsi	f0, a0, 0x260
400d4a7a:	248805        	call0	400f92fc <_etext+0xce2b>
400d4a7d:	2499      	s32i.n	a9, a4, 8
400d4a7f:	0589      	s32i.n	a8, a5, 0
400d4a81:	07ed      	mov.n	a14, a7
400d4a83:	0d0c      	movi.n	a13, 0
400d4a85:	06cd      	mov.n	a12, a6
400d4a87:	03bd      	mov.n	a11, a3
400d4a89:	02ad      	mov.n	a10, a2
400d4a8b:	770b      	addi.n	a7, a7, -1
400d4a8d:	fff525        	call8	400d49e0 <frame_downheap>
400d4a90:	fcc552        	addi	a5, a5, -4
400d4a93:	fe2756        	bnez	a7, 400d4a79 <frame_heapsort+0x35>
400d4a96:	f01d      	retw.n

400d4a98 <size_of_encoded_value>:
400d4a98:	004136        	entry	a1, 32
400d4a9b:	ffa082        	movi	a8, 255
400d4a9e:	241287        	beq	a2, a8, 400d4ac6 <size_of_encoded_value+0x2e>
400d4aa1:	248020        	extui	a8, a2, 0, 3
400d4aa4:	142826        	beqi	a8, 2, 400d4abc <size_of_encoded_value+0x24>
400d4aa7:	0538f6        	bgeui	a8, 3, 400d4ab0 <size_of_encoded_value+0x18>
400d4aaa:	c89c      	beqz.n	a8, 400d4aca <size_of_encoded_value+0x32>
400d4aac:	000406        	j	400d4ac0 <size_of_encoded_value+0x28>
400d4aaf:	382600        	lsi	f0, a6, 224
400d4ab2:	820c16        	beqz	a12, 400d42d6 <read_encoded_value_with_base+0x62>
400d4ab5:	134826        	beqi	a8, 4, 400d4acc <size_of_encoded_value+0x34>
400d4ab8:	000106        	j	400d4ac0 <size_of_encoded_value+0x28>
400d4abb:	082d00        	lsx	f2, a13, a0
400d4abe:	f01d      	retw.n
400d4ac0:	201110        	or	a1, a1, a1
400d4ac3:	b68aa5        	call8	4008b36c <abort>
400d4ac6:	020c      	movi.n	a2, 0
400d4ac8:	f01d      	retw.n
400d4aca:	420c      	movi.n	a2, 4
400d4acc:	f01d      	retw.n
	...

400d4ad0 <base_from_object>:
400d4ad0:	004136        	entry	a1, 32
400d4ad3:	ffa082        	movi	a8, 255
400d4ad6:	2e1287        	beq	a2, a8, 400d4b08 <base_from_object+0x38>
400d4ad9:	70a082        	movi	a8, 112
400d4adc:	102280        	and	a2, a2, a8
400d4adf:	1ac226        	beqi	a2, 32, 400d4afd <base_from_object+0x2d>
400d4ae2:	082c      	movi.n	a8, 32
400d4ae4:	083827        	bltu	a8, a2, 400d4af0 <base_from_object+0x20>
400d4ae7:	d29c      	beqz.n	a2, 400d4b08 <base_from_object+0x38>
400d4ae9:	18b266        	bnei	a2, 16, 400d4b05 <base_from_object+0x35>
400d4aec:	000606        	j	400d4b08 <base_from_object+0x38>
400d4aef:	083c00        	lsx	f3, a12, a0
400d4af2:	0b1287        	beq	a2, a8, 400d4b01 <base_from_object+0x31>
400d4af5:	035c      	movi.n	a3, 80
400d4af7:	0a9237        	bne	a2, a3, 400d4b05 <base_from_object+0x35>
400d4afa:	000286        	j	400d4b08 <base_from_object+0x38>
400d4afd:	1328      	l32i.n	a2, a3, 4
400d4aff:	f01d      	retw.n
400d4b01:	2328      	l32i.n	a2, a3, 8
400d4b03:	f01d      	retw.n
400d4b05:	b68665        	call8	4008b36c <abort>
400d4b08:	020c      	movi.n	a2, 0
400d4b0a:	f01d      	retw.n

400d4b0c <read_encoded_value_with_base>:
400d4b0c:	004136        	entry	a1, 32
400d4b0f:	085c      	movi.n	a8, 80
400d4b11:	0f9287        	bne	a2, a8, 400d4b24 <read_encoded_value_with_base+0x18>
400d4b14:	943b      	addi.n	a9, a4, 3
400d4b16:	c27c      	movi.n	a2, -4
400d4b18:	109920        	and	a9, a9, a2
400d4b1b:	0988      	l32i.n	a8, a9, 0
400d4b1d:	994b      	addi.n	a9, a9, 4
400d4b1f:	003fc6        	j	400d4c22 <read_encoded_value_with_base+0x116>
400d4b22:	200000        	or	a0, a0, a0
400d4b25:	0c3480        	lsi	f8, a4, 48
400d4b28:	87c9      	s32i.n	a12, a7, 32
400d4b2a:	02b9      	s32i.n	a11, a2, 0
400d4b2c:	003506        	j	400d4c04 <read_encoded_value_with_base+0xf8>
400d4b2f:	ed6691        	l32r	a9, 400d00c8 <_flash_cache_start+0xb0>
400d4b32:	a08890        	addx4	a8, a8, a9
400d4b35:	0888      	l32i.n	a8, a8, 0
400d4b37:	0008a0        	jx	a8
400d4b3a:	080c      	movi.n	a8, 0
400d4b3c:	049d      	mov.n	a9, a4
400d4b3e:	08cd      	mov.n	a12, a8
400d4b40:	991b      	addi.n	a9, a9, 1
400d4b42:	a90b      	addi.n	a10, a9, -1
400d4b44:	000aa2        	l8ui	a10, a10, 0
400d4b47:	64b0a0        	extui	a11, a10, 0, 7
400d4b4a:	401c00        	ssl	a12
400d4b4d:	a1bb00        	sll	a11, a11
400d4b50:	23aa00        	sext	a10, a10, 7
400d4b53:	2088b0        	or	a8, a8, a11
400d4b56:	cc7b      	addi.n	a12, a12, 7
400d4b58:	fe4a96        	bltz	a10, 400d4b40 <read_encoded_value_with_base+0x34>
400d4b5b:	002ac6        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4b5e:	080c      	movi.n	a8, 0
400d4b60:	049d      	mov.n	a9, a4
400d4b62:	08bd      	mov.n	a11, a8
400d4b64:	991b      	addi.n	a9, a9, 1
400d4b66:	a90b      	addi.n	a10, a9, -1
400d4b68:	000ac2        	l8ui	a12, a10, 0
400d4b6b:	64a0c0        	extui	a10, a12, 0, 7
400d4b6e:	401b00        	ssl	a11
400d4b71:	a1aa00        	sll	a10, a10
400d4b74:	23dc00        	sext	a13, a12, 7
400d4b77:	2088a0        	or	a8, a8, a10
400d4b7a:	bb7b      	addi.n	a11, a11, 7
400d4b7c:	fe4d96        	bltz	a13, 400d4b64 <read_encoded_value_with_base+0x58>
400d4b7f:	fa1c      	movi.n	a10, 31
400d4b81:	02bab7        	bgeu	a10, a11, 400d4b87 <read_encoded_value_with_base+0x7b>
400d4b84:	002086        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4b87:	7f6c67        	bbci	a12, 6, 400d4c0a <read_encoded_value_with_base+0xfe>
400d4b8a:	fa7c      	movi.n	a10, -1
400d4b8c:	401b00        	ssl	a11
400d4b8f:	a1ba00        	sll	a11, a10
400d4b92:	2088b0        	or	a8, a8, a11
400d4b95:	001cc6        	j	400d4c0c <read_encoded_value_with_base+0x100>
400d4b98:	010482        	l8ui	a8, a4, 1
400d4b9b:	000492        	l8ui	a9, a4, 0
400d4b9e:	118880        	slli	a8, a8, 8
400d4ba1:	208890        	or	a8, a8, a9
400d4ba4:	942b      	addi.n	a9, a4, 2
400d4ba6:	001806        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4ba9:	010482        	l8ui	a8, a4, 1
400d4bac:	000492        	l8ui	a9, a4, 0
400d4baf:	118880        	slli	a8, a8, 8
400d4bb2:	208890        	or	a8, a8, a9
400d4bb5:	238880        	sext	a8, a8, 15
400d4bb8:	942b      	addi.n	a9, a4, 2
400d4bba:	001306        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4bbd:	0104a2        	l8ui	a10, a4, 1
400d4bc0:	0004b2        	l8ui	a11, a4, 0
400d4bc3:	020492        	l8ui	a9, a4, 2
400d4bc6:	11aa80        	slli	a10, a10, 8
400d4bc9:	030482        	l8ui	a8, a4, 3
400d4bcc:	20aab0        	or	a10, a10, a11
400d4bcf:	119900        	slli	a9, a9, 16
400d4bd2:	2099a0        	or	a9, a9, a10
400d4bd5:	018880        	slli	a8, a8, 24
400d4bd8:	208890        	or	a8, a8, a9
400d4bdb:	944b      	addi.n	a9, a4, 4
400d4bdd:	000a46        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4be0:	04a200        	extui	a10, a0, 2, 1
400d4be3:	04b201        	l32r	a0, 40095eac <_iram_end+0x8358>
400d4be6:	049200        	extui	a9, a0, 2, 1
400d4be9:	aa8002        	lsi	f0, a0, 0x2a8
400d4bec:	048211        	l32r	a1, 40095df4 <_iram_end+0x82a0>
400d4bef:	aab003        	lsi	f0, a0, 0x2a8
400d4bf2:	990020        	lsi	f2, a0, 0x264
400d4bf5:	99a011        	l32r	a1, 400bb278 <_iram_end+0x2d724>
400d4bf8:	888020        	lsi	f2, a0, 0x220
400d4bfb:	889001        	l32r	a0, 400b6e3c <_iram_end+0x292e8>
400d4bfe:	948b20        	extui	a8, a2, 11, 10
400d4c01:	000146        	j	400d4c0a <read_encoded_value_with_base+0xfe>
400d4c04:	201110        	or	a1, a1, a1
400d4c07:	b67665        	call8	4008b36c <abort>
400d4c0a:	489c      	beqz.n	a8, 400d4c22 <read_encoded_value_with_base+0x116>
400d4c0c:	70a0a2        	movi	a10, 112
400d4c0f:	10a2a0        	and	a10, a2, a10
400d4c12:	f0caa2        	addi	a10, a10, -16
400d4c15:	9343a0        	movnez	a4, a3, a10
400d4c18:	232200        	sext	a2, a2, 7
400d4c1b:	884a      	add.n	a8, a8, a4
400d4c1d:	0012d6        	bgez	a2, 400d4c22 <read_encoded_value_with_base+0x116>
400d4c20:	0888      	l32i.n	a8, a8, 0
400d4c22:	0589      	s32i.n	a8, a5, 0
400d4c24:	092d      	mov.n	a2, a9
400d4c26:	f01d      	retw.n

400d4c28 <fde_single_encoding_compare>:
400d4c28:	006136        	entry	a1, 48
400d4c2b:	4258      	l32i.n	a5, a2, 16
400d4c2d:	02bd      	mov.n	a11, a2
400d4c2f:	745350        	extui	a5, a5, 3, 8
400d4c32:	20a550        	or	a10, a5, a5
400d4c35:	ffe9a5        	call8	400d4ad0 <base_from_object>
400d4c38:	0a6d      	mov.n	a6, a10
400d4c3a:	0abd      	mov.n	a11, a10
400d4c3c:	d14b      	addi.n	a13, a1, 4
400d4c3e:	c38b      	addi.n	a12, a3, 8
400d4c40:	20a550        	or	a10, a5, a5
400d4c43:	ffeca5        	call8	400d4b0c <read_encoded_value_with_base>
400d4c46:	42a8      	l32i.n	a10, a2, 16
400d4c48:	06bd      	mov.n	a11, a6
400d4c4a:	20d110        	or	a13, a1, a1
400d4c4d:	08c4c2        	addi	a12, a4, 8
400d4c50:	74a3a0        	extui	a10, a10, 3, 8
400d4c53:	ffeba5        	call8	400d4b0c <read_encoded_value_with_base>
400d4c56:	1168      	l32i.n	a6, a1, 4
400d4c58:	0158      	l32i.n	a5, a1, 0
400d4c5a:	120c      	movi.n	a2, 1
400d4c5c:	083567        	bltu	a5, a6, 400d4c68 <fde_single_encoding_compare+0x40>
400d4c5f:	023657        	bltu	a6, a5, 400d4c65 <fde_single_encoding_compare+0x3d>
400d4c62:	00a022        	movi	a2, 0
400d4c65:	602020        	neg	a2, a2
400d4c68:	f01d      	retw.n
	...

400d4c6c <get_cie_encoding>:
400d4c6c:	006136        	entry	a1, 48
400d4c6f:	329b      	addi.n	a3, a2, 9
400d4c71:	03ad      	mov.n	a10, a3
400d4c73:	ed0381        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d4c76:	0008e0        	callx8	a8
400d4c79:	080242        	l8ui	a4, a2, 8
400d4c7c:	aa1b      	addi.n	a10, a10, 1
400d4c7e:	a3aa      	add.n	a10, a3, a10
400d4c80:	1444b6        	bltui	a4, 4, 400d4c98 <get_cie_encoding+0x2c>
400d4c83:	000a52        	l8ui	a5, a10, 0
400d4c86:	ffa032        	movi	a3, 255
400d4c89:	024526        	beqi	a5, 4, 400d4c8f <get_cie_encoding+0x23>
400d4c8c:	002406        	j	400d4d20 <get_cie_encoding+0xb4>
400d4c8f:	010a52        	l8ui	a5, a10, 1
400d4c92:	08a556        	bnez	a5, 400d4d20 <get_cie_encoding+0xb4>
400d4c95:	02caa2        	addi	a10, a10, 2
400d4c98:	090252        	l8ui	a5, a2, 9
400d4c9b:	7aa032        	movi	a3, 122
400d4c9e:	041537        	beq	a5, a3, 400d4ca6 <get_cie_encoding+0x3a>
400d4ca1:	030c      	movi.n	a3, 0
400d4ca3:	001e46        	j	400d4d20 <get_cie_encoding+0xb4>
400d4ca6:	aa1b      	addi.n	a10, a10, 1
400d4ca8:	ffca32        	addi	a3, a10, -1
400d4cab:	000382        	l8ui	a8, a3, 0
400d4cae:	238800        	sext	a8, a8, 7
400d4cb1:	ff1896        	bltz	a8, 400d4ca6 <get_cie_encoding+0x3a>
400d4cb4:	aa1b      	addi.n	a10, a10, 1
400d4cb6:	3a0b      	addi.n	a3, a10, -1
400d4cb8:	000382        	l8ui	a8, a3, 0
400d4cbb:	238800        	sext	a8, a8, 7
400d4cbe:	ff2896        	bltz	a8, 400d4cb4 <get_cie_encoding+0x48>
400d4cc1:	041466        	bnei	a4, 1, 400d4cc9 <get_cie_encoding+0x5d>
400d4cc4:	aa1b      	addi.n	a10, a10, 1
400d4cc6:	000306        	j	400d4cd6 <get_cie_encoding+0x6a>
400d4cc9:	aa1b      	addi.n	a10, a10, 1
400d4ccb:	3a0b      	addi.n	a3, a10, -1
400d4ccd:	000332        	l8ui	a3, a3, 0
400d4cd0:	233300        	sext	a3, a3, 7
400d4cd3:	ff2396        	bltz	a3, 400d4cc9 <get_cie_encoding+0x5d>
400d4cd6:	32ab      	addi.n	a3, a2, 10
400d4cd8:	aa1b      	addi.n	a10, a10, 1
400d4cda:	8a0b      	addi.n	a8, a10, -1
400d4cdc:	000882        	l8ui	a8, a8, 0
400d4cdf:	238800        	sext	a8, a8, 7
400d4ce2:	ff2896        	bltz	a8, 400d4cd8 <get_cie_encoding+0x6c>
400d4ce5:	0a0282        	l8ui	a8, a2, 10
400d4ce8:	225c      	movi.n	a2, 82
400d4cea:	045c      	movi.n	a4, 80
400d4cec:	c54c      	movi.n	a5, 76
400d4cee:	069827        	bne	a8, a2, 400d4cf8 <get_cie_encoding+0x8c>
400d4cf1:	000a32        	l8ui	a3, a10, 0
400d4cf4:	000a06        	j	400d4d20 <get_cie_encoding+0xb4>
400d4cf7:	984700        	lsi	f0, a7, 0x260
400d4cfa:	0a8214        	lsi	f1, a2, 40
400d4cfd:	ca1b00        	float.s	f1, a11, 0
400d4d00:	20d110        	or	a13, a1, a1
400d4d03:	00a0b2        	movi	a11, 0
400d4d06:	64a080        	extui	a10, a8, 0, 7
400d4d09:	ffe025        	call8	400d4b0c <read_encoded_value_with_base>
400d4d0c:	000146        	j	400d4d15 <get_cie_encoding+0xa9>
400d4d0f:	985700        	lsi	f0, a7, 0x260
400d4d12:	1b8d      	lsi	f8, a11, 44
400d4d14:	1baa      	add.n	a1, a11, a10
400d4d16:	038233        	lsip	f3, a2, 12
400d4d19:	982700        	lsi	f0, a7, 0x260
400d4d1c:	06da      	add.n	a0, a6, a13
400d4d1e:	2dfff4        	lsi	f15, a15, 180
400d4d21:	f01d03        	lsi	f0, a13, 0x3c0

400d4d24 <classify_object_over_fdes>:
400d4d24:	008136        	entry	a1, 64
400d4d27:	036d      	mov.n	a6, a3
400d4d29:	0338      	l32i.n	a3, a3, 0
400d4d2b:	0ad316        	beqz	a3, 400d4ddc <classify_object_over_fdes+0xb8>
400d4d2e:	030c      	movi.n	a3, 0
400d4d30:	037d      	mov.n	a7, a3
400d4d32:	4139      	s32i.n	a3, a1, 16
400d4d34:	03bd      	mov.n	a11, a3
400d4d36:	1648      	l32i.n	a4, a6, 4
400d4d38:	092416        	beqz	a4, 400d4dce <classify_object_over_fdes+0xaa>
400d4d3b:	a64b      	addi.n	a10, a6, 4
400d4d3d:	c04a40        	sub	a4, a10, a4
400d4d40:	0594b7        	bne	a4, a11, 400d4d49 <classify_object_over_fdes+0x25>
400d4d43:	745070        	extui	a5, a7, 0, 8
400d4d46:	001306        	j	400d4d96 <classify_object_over_fdes+0x72>
400d4d49:	04ad      	mov.n	a10, a4
400d4d4b:	fff225        	call8	400d4c6c <get_cie_encoding>
400d4d4e:	ffa032        	movi	a3, 255
400d4d51:	0a7d      	mov.n	a7, a10
400d4d53:	059a37        	bne	a10, a3, 400d4d5c <classify_object_over_fdes+0x38>
400d4d56:	f37c      	movi.n	a3, -1
400d4d58:	002006        	j	400d4ddc <classify_object_over_fdes+0xb8>
400d4d5b:	50a000        	lsi	f0, a0, 0x140
400d4d5e:	02bd74        	lsi	f7, a13, 8
400d4d61:	05ad      	mov.n	a10, a5
400d4d63:	ffd6e5        	call8	400d4ad0 <base_from_object>
400d4d66:	0a3d      	mov.n	a3, a10
400d4d68:	42a8      	l32i.n	a10, a2, 16
400d4d6a:	f8a782        	movi	a8, 0x7f8
400d4d6d:	10b8a0        	and	a11, a8, a10
400d4d70:	159b87        	bne	a11, a8, 400d4d89 <classify_object_over_fdes+0x65>
400d4d73:	74b070        	extui	a11, a7, 0, 8
400d4d76:	07a8c2        	movi	a12, 0xfffff807
400d4d79:	11bbd0        	slli	a11, a11, 3
400d4d7c:	10aac0        	and	a10, a10, a12
400d4d7f:	20aab0        	or	a10, a10, a11
400d4d82:	42a9      	s32i.n	a10, a2, 16
400d4d84:	000386        	j	400d4d96 <classify_object_over_fdes+0x72>
400d4d87:	a00000        	addx4	a0, a0, a0
400d4d8a:	b774b3        	lsi	f11, a4, 0x2dc
400d4d8d:	0c0617        	bnone	a6, a1, 400d4d9d <classify_object_over_fdes+0x79>
400d4d90:	b04b      	addi.n	a11, a0, 4
400d4d92:	20aa      	add.n	a2, a0, a10
400d4d94:	42a9      	s32i.n	a10, a2, 16
400d4d96:	01dd      	mov.n	a13, a1
400d4d98:	c68b      	addi.n	a12, a6, 8
400d4d9a:	03bd      	mov.n	a11, a3
400d4d9c:	05ad      	mov.n	a10, a5
400d4d9e:	ffd6e5        	call8	400d4b0c <read_encoded_value_with_base>
400d4da1:	05ad      	mov.n	a10, a5
400d4da3:	ffcf65        	call8	400d4a98 <size_of_encoded_value>
400d4da6:	fd7c      	movi.n	a13, -1
400d4da8:	0c4af6        	bgeui	a10, 4, 400d4db8 <classify_object_over_fdes+0x94>
400d4dab:	11aad0        	slli	a10, a10, 3
400d4dae:	150c      	movi.n	a5, 1
400d4db0:	401a00        	ssl	a10
400d4db3:	a1a500        	sll	a10, a5
400d4db6:	dada      	add.n	a13, a10, a13
400d4db8:	01c8      	l32i.n	a12, a1, 0
400d4dba:	04bd      	mov.n	a11, a4
400d4dbc:	0e0dc7        	bnone	a13, a12, 400d4dce <classify_object_over_fdes+0xaa>
400d4dbf:	4188      	l32i.n	a8, a1, 16
400d4dc1:	02a8      	l32i.n	a10, a2, 0
400d4dc3:	881b      	addi.n	a8, a8, 1
400d4dc5:	4189      	s32i.n	a8, a1, 16
400d4dc7:	01bca7        	bgeu	a12, a10, 400d4dcc <classify_object_over_fdes+0xa8>
400d4dca:	02c9      	s32i.n	a12, a2, 0
400d4dcc:	04bd      	mov.n	a11, a4
400d4dce:	0648      	l32i.n	a4, a6, 0
400d4dd0:	444b      	addi.n	a4, a4, 4
400d4dd2:	664a      	add.n	a6, a6, a4
400d4dd4:	0648      	l32i.n	a4, a6, 0
400d4dd6:	f5c456        	bnez	a4, 400d4d36 <classify_object_over_fdes+0x12>
400d4dd9:	042132        	l32i	a3, a1, 16
400d4ddc:	032d      	mov.n	a2, a3
400d4dde:	f01d      	retw.n

400d4de0 <linear_search_fdes>:
400d4de0:	008136        	entry	a1, 64
400d4de3:	4278      	l32i.n	a7, a2, 16
400d4de5:	02bd      	mov.n	a11, a2
400d4de7:	747370        	extui	a7, a7, 3, 8
400d4dea:	20a770        	or	a10, a7, a7
400d4ded:	ffce25        	call8	400d4ad0 <base_from_object>
400d4df0:	0388      	l32i.n	a8, a3, 0
400d4df2:	060c      	movi.n	a6, 0
400d4df4:	0aed      	mov.n	a14, a10
400d4df6:	450c      	movi.n	a5, 4
400d4df8:	049867        	bne	a8, a6, 400d4e00 <linear_search_fdes+0x20>
400d4dfb:	020c      	movi.n	a2, 0
400d4dfd:	f01d      	retw.n
400d4dff:	138800        	lsi	f0, a8, 76
400d4e02:	080816        	beqz	a8, 400d4e86 <linear_search_fdes+0xa6>
400d4e05:	42a8      	l32i.n	a10, a2, 16
400d4e07:	1f05a7        	bnone	a5, a10, 400d4e2a <linear_search_fdes+0x4a>
400d4e0a:	a34b      	addi.n	a10, a3, 4
400d4e0c:	c08a80        	sub	a8, a10, a8
400d4e0f:	171867        	beq	a8, a6, 400d4e2a <linear_search_fdes+0x4a>
400d4e12:	08ad      	mov.n	a10, a8
400d4e14:	056182        	s32i	a8, a1, 20
400d4e17:	ffe565        	call8	400d4c6c <get_cie_encoding>
400d4e1a:	0a7d      	mov.n	a7, a10
400d4e1c:	02bd      	mov.n	a11, a2
400d4e1e:	74a0a0        	extui	a10, a10, 0, 8
400d4e21:	ffcae5        	call8	400d4ad0 <base_from_object>
400d4e24:	5188      	l32i.n	a8, a1, 20
400d4e26:	0aed      	mov.n	a14, a10
400d4e28:	086d      	mov.n	a6, a8
400d4e2a:	e7cc      	bnez.n	a7, 400d4e3c <linear_search_fdes+0x5c>
400d4e2c:	2388      	l32i.n	a8, a3, 8
400d4e2e:	33a8      	l32i.n	a10, a3, 12
400d4e30:	1189      	s32i.n	a8, a1, 4
400d4e32:	01a9      	s32i.n	a10, a1, 0
400d4e34:	04e816        	beqz	a8, 400d4e86 <linear_search_fdes+0xa6>
400d4e37:	001046        	j	400d4e7c <linear_search_fdes+0x9c>
400d4e3a:	700000        	lsi	f0, a0, 0x1c0
400d4e3d:	bd7480        	lsi	f8, a4, 0x2f4
400d4e40:	0e          	.byte 0xe
400d4e41:	08ad      	mov.n	a10, a8
400d4e43:	d14b      	addi.n	a13, a1, 4
400d4e45:	c38b      	addi.n	a12, a3, 8
400d4e47:	41e9      	s32i.n	a14, a1, 16
400d4e49:	5189      	s32i.n	a8, a1, 20
400d4e4b:	ffcc25        	call8	400d4b0c <read_encoded_value_with_base>
400d4e4e:	0acd      	mov.n	a12, a10
400d4e50:	0b0c      	movi.n	a11, 0
400d4e52:	01dd      	mov.n	a13, a1
400d4e54:	34a070        	extui	a10, a7, 0, 4
400d4e57:	ffcb65        	call8	400d4b0c <read_encoded_value_with_base>
400d4e5a:	5188      	l32i.n	a8, a1, 20
400d4e5c:	08ad      	mov.n	a10, a8
400d4e5e:	ffc3a5        	call8	400d4a98 <size_of_encoded_value>
400d4e61:	fb7c      	movi.n	a11, -1
400d4e63:	41e8      	l32i.n	a14, a1, 16
400d4e65:	0c4af6        	bgeui	a10, 4, 400d4e75 <linear_search_fdes+0x95>
400d4e68:	11aad0        	slli	a10, a10, 3
400d4e6b:	180c      	movi.n	a8, 1
400d4e6d:	401a00        	ssl	a10
400d4e70:	a1a800        	sll	a10, a8
400d4e73:	baba      	add.n	a11, a10, a11
400d4e75:	1188      	l32i.n	a8, a1, 4
400d4e77:	0b0b87        	bnone	a11, a8, 400d4e86 <linear_search_fdes+0xa6>
400d4e7a:	01a8      	l32i.n	a10, a1, 0
400d4e7c:	c08480        	sub	a8, a4, a8
400d4e7f:	03b8a7        	bgeu	a8, a10, 400d4e86 <linear_search_fdes+0xa6>
400d4e82:	032d      	mov.n	a2, a3
400d4e84:	f01d      	retw.n
400d4e86:	0388      	l32i.n	a8, a3, 0
400d4e88:	884b      	addi.n	a8, a8, 4
400d4e8a:	338a      	add.n	a3, a3, a8
400d4e8c:	0388      	l32i.n	a8, a3, 0
400d4e8e:	f6e856        	bnez	a8, 400d4e00 <linear_search_fdes+0x20>
400d4e91:	ffd986        	j	400d4dfb <linear_search_fdes+0x1b>

400d4e94 <fde_mixed_encoding_compare>:
400d4e94:	006136        	entry	a1, 48
400d4e97:	1358      	l32i.n	a5, a3, 4
400d4e99:	a34b      	addi.n	a10, a3, 4
400d4e9b:	c0aa50        	sub	a10, a10, a5
400d4e9e:	ffdce5        	call8	400d4c6c <get_cie_encoding>
400d4ea1:	7450a0        	extui	a5, a10, 0, 8
400d4ea4:	02bd      	mov.n	a11, a2
400d4ea6:	20a550        	or	a10, a5, a5
400d4ea9:	ffc265        	call8	400d4ad0 <base_from_object>
400d4eac:	c38b      	addi.n	a12, a3, 8
400d4eae:	20baa0        	or	a11, a10, a10
400d4eb1:	04c1d2        	addi	a13, a1, 4
400d4eb4:	20a550        	or	a10, a5, a5
400d4eb7:	ffc565        	call8	400d4b0c <read_encoded_value_with_base>
400d4eba:	1438      	l32i.n	a3, a4, 4
400d4ebc:	a44b      	addi.n	a10, a4, 4
400d4ebe:	c0aa30        	sub	a10, a10, a3
400d4ec1:	ffdaa5        	call8	400d4c6c <get_cie_encoding>
400d4ec4:	7430a0        	extui	a3, a10, 0, 8
400d4ec7:	02bd      	mov.n	a11, a2
400d4ec9:	03ad      	mov.n	a10, a3
400d4ecb:	ffc065        	call8	400d4ad0 <base_from_object>
400d4ece:	0abd      	mov.n	a11, a10
400d4ed0:	c48b      	addi.n	a12, a4, 8
400d4ed2:	03ad      	mov.n	a10, a3
400d4ed4:	20d110        	or	a13, a1, a1
400d4ed7:	ffc365        	call8	400d4b0c <read_encoded_value_with_base>
400d4eda:	1148      	l32i.n	a4, a1, 4
400d4edc:	0138      	l32i.n	a3, a1, 0
400d4ede:	120c      	movi.n	a2, 1
400d4ee0:	083347        	bltu	a3, a4, 400d4eec <fde_mixed_encoding_compare+0x58>
400d4ee3:	023437        	bltu	a4, a3, 400d4ee9 <fde_mixed_encoding_compare+0x55>
400d4ee6:	00a022        	movi	a2, 0
400d4ee9:	602020        	neg	a2, a2
400d4eec:	f01d      	retw.n
	...

400d4ef0 <add_fdes>:
400d4ef0:	008136        	entry	a1, 64
400d4ef3:	4278      	l32i.n	a7, a2, 16
400d4ef5:	02bd      	mov.n	a11, a2
400d4ef7:	747370        	extui	a7, a7, 3, 8
400d4efa:	07ad      	mov.n	a10, a7
400d4efc:	046132        	s32i	a3, a1, 16
400d4eff:	ffbd25        	call8	400d4ad0 <base_from_object>
400d4f02:	0488      	l32i.n	a8, a4, 0
400d4f04:	060c      	movi.n	a6, 0
400d4f06:	0a3d      	mov.n	a3, a10
400d4f08:	450c      	movi.n	a5, 4
400d4f0a:	029867        	bne	a8, a6, 400d4f10 <add_fdes+0x20>
400d4f0d:	0025c6        	j	400d4fa8 <add_fdes+0xb8>
400d4f10:	1488      	l32i.n	a8, a4, 4
400d4f12:	087816        	beqz	a8, 400d4f9d <add_fdes+0xad>
400d4f15:	42a8      	l32i.n	a10, a2, 16
400d4f17:	1f05a7        	bnone	a5, a10, 400d4f3a <add_fdes+0x4a>
400d4f1a:	a44b      	addi.n	a10, a4, 4
400d4f1c:	c08a80        	sub	a8, a10, a8
400d4f1f:	171867        	beq	a8, a6, 400d4f3a <add_fdes+0x4a>
400d4f22:	08ad      	mov.n	a10, a8
400d4f24:	056182        	s32i	a8, a1, 20
400d4f27:	ffd465        	call8	400d4c6c <get_cie_encoding>
400d4f2a:	0a7d      	mov.n	a7, a10
400d4f2c:	02bd      	mov.n	a11, a2
400d4f2e:	74a0a0        	extui	a10, a10, 0, 8
400d4f31:	ffb9e5        	call8	400d4ad0 <base_from_object>
400d4f34:	5188      	l32i.n	a8, a1, 20
400d4f36:	0a3d      	mov.n	a3, a10
400d4f38:	086d      	mov.n	a6, a8
400d4f3a:	e7dc      	bnez.n	a7, 400d4f5c <add_fdes+0x6c>
400d4f3c:	0b0482        	l8ui	a8, a4, 11
400d4f3f:	0804c2        	l8ui	a12, a4, 8
400d4f42:	0904b2        	l8ui	a11, a4, 9
400d4f45:	0a04a2        	l8ui	a10, a4, 10
400d4f48:	0041c2        	s8i	a12, a1, 0
400d4f4b:	0141b2        	s8i	a11, a1, 1
400d4f4e:	0241a2        	s8i	a10, a1, 2
400d4f51:	034182        	s8i	a8, a1, 3
400d4f54:	0188      	l32i.n	a8, a1, 0
400d4f56:	18fc      	bnez.n	a8, 400d4f8b <add_fdes+0x9b>
400d4f58:	001046        	j	400d4f9d <add_fdes+0xad>
400d4f5b:	807000        	add	a7, a0, a0
400d4f5e:	01dd74        	lsi	f7, a13, 4
400d4f61:	c48b      	addi.n	a12, a4, 8
400d4f63:	03bd      	mov.n	a11, a3
400d4f65:	08ad      	mov.n	a10, a8
400d4f67:	056182        	s32i	a8, a1, 20
400d4f6a:	ffba25        	call8	400d4b0c <read_encoded_value_with_base>
400d4f6d:	5188      	l32i.n	a8, a1, 20
400d4f6f:	08ad      	mov.n	a10, a8
400d4f71:	ffb265        	call8	400d4a98 <size_of_encoded_value>
400d4f74:	f87c      	movi.n	a8, -1
400d4f76:	0c4af6        	bgeui	a10, 4, 400d4f86 <add_fdes+0x96>
400d4f79:	180c      	movi.n	a8, 1
400d4f7b:	11aad0        	slli	a10, a10, 3
400d4f7e:	401a00        	ssl	a10
400d4f81:	a1a800        	sll	a10, a8
400d4f84:	8a0b      	addi.n	a8, a10, -1
400d4f86:	01a8      	l32i.n	a10, a1, 0
400d4f88:	1108a7        	bnone	a8, a10, 400d4f9d <add_fdes+0xad>
400d4f8b:	4198      	l32i.n	a9, a1, 16
400d4f8d:	0988      	l32i.n	a8, a9, 0
400d4f8f:	a88c      	beqz.n	a8, 400d4f9d <add_fdes+0xad>
400d4f91:	18a8      	l32i.n	a10, a8, 4
400d4f93:	ba1b      	addi.n	a11, a10, 1
400d4f95:	18b9      	s32i.n	a11, a8, 4
400d4f97:	a08a80        	addx4	a8, a10, a8
400d4f9a:	026842        	s32i	a4, a8, 8
400d4f9d:	0488      	l32i.n	a8, a4, 0
400d4f9f:	884b      	addi.n	a8, a8, 4
400d4fa1:	448a      	add.n	a4, a4, a8
400d4fa3:	0488      	l32i.n	a8, a4, 0
400d4fa5:	f67856        	bnez	a8, 400d4f10 <add_fdes+0x20>
400d4fa8:	f01d      	retw.n
	...

400d4fac <fde_unencoded_compare>:
400d4fac:	006136        	entry	a1, 48
400d4faf:	248b      	addi.n	a2, a4, 8
400d4fb1:	0803c2        	l8ui	a12, a3, 8
400d4fb4:	0903b2        	l8ui	a11, a3, 9
400d4fb7:	0a03a2        	l8ui	a10, a3, 10
400d4fba:	0b0392        	l8ui	a9, a3, 11
400d4fbd:	080482        	l8ui	a8, a4, 8
400d4fc0:	020232        	l8ui	a3, a2, 2
400d4fc3:	090442        	l8ui	a4, a4, 9
400d4fc6:	030222        	l8ui	a2, a2, 3
400d4fc9:	014142        	s8i	a4, a1, 1
400d4fcc:	034122        	s8i	a2, a1, 3
400d4fcf:	0441c2        	s8i	a12, a1, 4
400d4fd2:	0541b2        	s8i	a11, a1, 5
400d4fd5:	0641a2        	s8i	a10, a1, 6
400d4fd8:	074192        	s8i	a9, a1, 7
400d4fdb:	004182        	s8i	a8, a1, 0
400d4fde:	024132        	s8i	a3, a1, 2
400d4fe1:	1148      	l32i.n	a4, a1, 4
400d4fe3:	0138      	l32i.n	a3, a1, 0
400d4fe5:	01a022        	movi	a2, 1
400d4fe8:	083347        	bltu	a3, a4, 400d4ff4 <fde_unencoded_compare+0x48>
400d4feb:	023437        	bltu	a4, a3, 400d4ff1 <fde_unencoded_compare+0x45>
400d4fee:	00a022        	movi	a2, 0
400d4ff1:	602020        	neg	a2, a2
400d4ff4:	f01d      	retw.n
	...

400d4ff8 <search_object>:
400d4ff8:	00c136        	entry	a1, 96
400d4ffb:	4268      	l32i.n	a6, a2, 16
400d4ffd:	8139      	s32i.n	a3, a1, 32
400d4fff:	026607        	bbci	a6, 0, 400d5005 <search_object+0xd>
400d5002:	0096c6        	j	400d5261 <search_object+0x269>
400d5005:	413b60        	srli	a3, a6, 11
400d5008:	7139      	s32i.n	a3, a1, 28
400d500a:	064356        	bnez	a3, 400d5072 <search_object+0x7a>
400d500d:	2c6617        	bbci	a6, 1, 400d503d <search_object+0x45>
400d5010:	3238      	l32i.n	a3, a2, 12
400d5012:	03b8      	l32i.n	a11, a3, 0
400d5014:	236b16        	beqz	a11, 400d524e <search_object+0x256>
400d5017:	7148      	l32i.n	a4, a1, 28
400d5019:	02ad      	mov.n	a10, a2
400d501b:	ffd0a5        	call8	400d4d24 <classify_object_over_fdes>
400d501e:	0c0a66        	bnei	a10, -1, 400d502e <search_object+0x36>
400d5021:	f8a732        	movi	a3, 0x7f8
400d5024:	4239      	s32i.n	a3, a2, 16
400d5026:	ec2d31        	l32r	a3, 400d00dc <_flash_cache_start+0xc4>
400d5029:	3239      	s32i.n	a3, a2, 12
400d502b:	0087c6        	j	400d524e <search_object+0x256>
400d502e:	334b      	addi.n	a3, a3, 4
400d5030:	03b8      	l32i.n	a11, a3, 0
400d5032:	44aa      	add.n	a4, a4, a10
400d5034:	fe1b56        	bnez	a11, 400d5019 <search_object+0x21>
400d5037:	7149      	s32i.n	a4, a1, 28
400d5039:	000306        	j	400d5049 <search_object+0x51>
400d503c:	32b800        	orbc	b11, b8, b0
400d503f:	02ad      	mov.n	a10, a2
400d5041:	ffce25        	call8	400d4d24 <classify_object_over_fdes>
400d5044:	71a9      	s32i.n	a10, a1, 28
400d5046:	d70a26        	beqi	a10, -1, 400d5021 <search_object+0x29>
400d5049:	ec2531        	l32r	a3, 400d00e0 <_flash_cache_start+0xc8>
400d504c:	7148      	l32i.n	a4, a1, 28
400d504e:	103430        	and	a3, a4, a3
400d5051:	119437        	bne	a4, a3, 400d5066 <search_object+0x6e>
400d5054:	4248      	l32i.n	a4, a2, 16
400d5056:	7158      	l32i.n	a5, a1, 28
400d5058:	a44040        	extui	a4, a4, 0, 11
400d505b:	113550        	slli	a3, a5, 11
400d505e:	203430        	or	a3, a4, a3
400d5061:	4239      	s32i.n	a3, a2, 16
400d5063:	000186        	j	400d506d <search_object+0x75>
400d5066:	4238      	l32i.n	a3, a2, 16
400d5068:	a43030        	extui	a3, a3, 0, 11
400d506b:	4239      	s32i.n	a3, a2, 16
400d506d:	7168      	l32i.n	a6, a1, 28
400d506f:	1db616        	beqz	a6, 400d524e <search_object+0x256>
400d5072:	7188      	l32i.n	a8, a1, 28
400d5074:	382b      	addi.n	a3, a8, 2
400d5076:	1133e0        	slli	a3, a3, 2
400d5079:	03ad      	mov.n	a10, a3
400d507b:	ec1a81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d507e:	0008e0        	callx8	a8
400d5081:	01a9      	s32i.n	a10, a1, 0
400d5083:	0a4d      	mov.n	a4, a10
400d5085:	1c5a16        	beqz	a10, 400d524e <search_object+0x256>
400d5088:	050c      	movi.n	a5, 0
400d508a:	03ad      	mov.n	a10, a3
400d508c:	1459      	s32i.n	a5, a4, 4
400d508e:	ec1581        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d5091:	0008e0        	callx8	a8
400d5094:	11a9      	s32i.n	a10, a1, 4
400d5096:	029a57        	bne	a10, a5, 400d509c <search_object+0xa4>
400d5099:	00cf06        	j	400d53d9 <search_object+0x3e1>
400d509c:	1a59      	s32i.n	a5, a10, 4
400d509e:	00cdc6        	j	400d53d9 <search_object+0x3e1>
400d50a1:	323800        	orbc	b3, b8, b0
400d50a4:	03c8      	l32i.n	a12, a3, 0
400d50a6:	7cac      	beqz.n	a12, 400d50d1 <search_object+0xd9>
400d50a8:	01bd      	mov.n	a11, a1
400d50aa:	02ad      	mov.n	a10, a2
400d50ac:	334b      	addi.n	a3, a3, 4
400d50ae:	ffe425        	call8	400d4ef0 <add_fdes>
400d50b1:	03c8      	l32i.n	a12, a3, 0
400d50b3:	ff1c56        	bnez	a12, 400d50a8 <search_object+0xb0>
400d50b6:	000206        	j	400d50c2 <search_object+0xca>
400d50b9:	32c8      	l32i.n	a12, a2, 12
400d50bb:	01bd      	mov.n	a11, a1
400d50bd:	02ad      	mov.n	a10, a2
400d50bf:	ffe325        	call8	400d4ef0 <add_fdes>
400d50c2:	0198      	l32i.n	a9, a1, 0
400d50c4:	a199      	s32i.n	a9, a1, 40
400d50c6:	c199      	s32i.n	a9, a1, 48
400d50c8:	898c      	beqz.n	a9, 400d50d4 <search_object+0xdc>
400d50ca:	1938      	l32i.n	a3, a9, 4
400d50cc:	7148      	l32i.n	a4, a1, 28
400d50ce:	021347        	beq	a3, a4, 400d50d4 <search_object+0xdc>
400d50d1:	b629a5        	call8	4008b36c <abort>
400d50d4:	042232        	l32i	a3, a2, 16
400d50d7:	ebfd71        	l32r	a7, 400d00cc <_flash_cache_start+0xb4>
400d50da:	11e327        	bbsi	a3, 2, 400d50ef <search_object+0xf7>
400d50dd:	f8a742        	movi	a4, 0x7f8
400d50e0:	103340        	and	a3, a3, a4
400d50e3:	ebfb51        	l32r	a5, 400d00d0 <_flash_cache_start+0xb8>
400d50e6:	ebfb41        	l32r	a4, 400d00d4 <_flash_cache_start+0xbc>
400d50e9:	834530        	moveqz	a4, a5, a3
400d50ec:	207440        	or	a7, a4, a4
400d50ef:	012162        	l32i	a6, a1, 4
400d50f2:	13e616        	beqz	a6, 400d5234 <search_object+0x23c>
400d50f5:	a158      	l32i.n	a5, a1, 40
400d50f7:	1558      	l32i.n	a5, a5, 4
400d50f9:	9159      	s32i.n	a5, a1, 36
400d50fb:	092516        	beqz	a5, 400d5191 <search_object+0x199>
400d50fe:	a188      	l32i.n	a8, a1, 40
400d5100:	ebf641        	l32r	a4, 400d00d8 <_flash_cache_start+0xc0>
400d5103:	888b      	addi.n	a8, a8, 8
400d5105:	968b      	addi.n	a9, a6, 8
400d5107:	030c      	movi.n	a3, 0
400d5109:	5139      	s32i.n	a3, a1, 20
400d510b:	4189      	s32i.n	a8, a1, 16
400d510d:	b199      	s32i.n	a9, a1, 44
400d510f:	d189      	s32i.n	a8, a1, 52
400d5111:	083d      	mov.n	a3, a8
400d5113:	6199      	s32i.n	a9, a1, 24
400d5115:	045d      	mov.n	a5, a4
400d5117:	000a46        	j	400d5144 <search_object+0x14c>
400d511a:	4198      	l32i.n	a9, a1, 16
400d511c:	c08590        	sub	a8, a5, a9
400d511f:	968a      	add.n	a9, a6, a8
400d5121:	2958      	l32i.n	a5, a9, 8
400d5123:	080c      	movi.n	a8, 0
400d5125:	2989      	s32i.n	a8, a9, 8
400d5127:	059547        	bne	a5, a4, 400d5130 <search_object+0x138>
400d512a:	045d      	mov.n	a5, a4
400d512c:	000306        	j	400d513c <search_object+0x144>
400d512f:	05c800        	extui	a12, a0, 24, 1
400d5132:	13b8      	l32i.n	a11, a3, 4
400d5134:	02ad      	mov.n	a10, a2
400d5136:	0007e0        	callx8	a7
400d5139:	fdda96        	bltz	a10, 400d511a <search_object+0x122>
400d513c:	6198      	l32i.n	a9, a1, 24
400d513e:	334b      	addi.n	a3, a3, 4
400d5140:	994b      	addi.n	a9, a9, 4
400d5142:	6199      	s32i.n	a9, a1, 24
400d5144:	5198      	l32i.n	a9, a1, 20
400d5146:	6188      	l32i.n	a8, a1, 24
400d5148:	991b      	addi.n	a9, a9, 1
400d514a:	0859      	s32i.n	a5, a8, 0
400d514c:	9158      	l32i.n	a5, a1, 36
400d514e:	5199      	s32i.n	a9, a1, 20
400d5150:	091597        	beq	a5, a9, 400d515d <search_object+0x165>
400d5153:	035d      	mov.n	a5, a3
400d5155:	d79437        	bne	a4, a3, 400d5130 <search_object+0x138>
400d5158:	fff386        	j	400d512a <search_object+0x132>
400d515b:	0c0000        	lsi	f0, a0, 48
400d515e:	3808      	l32i.n	a0, a8, 12
400d5160:	d19891        	l32r	a9, 400c97c0 <_rtc_text_end+0x97c0>
400d5163:	b158      	l32i.n	a5, a1, 44
400d5165:	a1c8      	l32i.n	a12, a1, 40
400d5167:	084d      	mov.n	a4, a8
400d5169:	1a8376        	loop	a3, 400d5187 <search_object+0x18f>
400d516c:	05a8      	l32i.n	a10, a5, 0
400d516e:	09b8      	l32i.n	a11, a9, 0
400d5170:	8a8c      	beqz.n	a10, 400d517c <search_object+0x184>
400d5172:	a0a4c0        	addx4	a10, a4, a12
400d5175:	2ab9      	s32i.n	a11, a10, 8
400d5177:	441b      	addi.n	a4, a4, 1
400d5179:	000186        	j	400d5183 <search_object+0x18b>
400d517c:	a0a860        	addx4	a10, a8, a6
400d517f:	2ab9      	s32i.n	a11, a10, 8
400d5181:	881b      	addi.n	a8, a8, 1
400d5183:	554b      	addi.n	a5, a5, 4
400d5185:	994b      	addi.n	a9, a9, 4
400d5187:	0198      	l32i.n	a9, a1, 0
400d5189:	11c8      	l32i.n	a12, a1, 4
400d518b:	a199      	s32i.n	a9, a1, 40
400d518d:	000186        	j	400d5197 <search_object+0x19f>
400d5190:	918800        	lsi	f0, a8, 0x244
400d5193:	06cd      	mov.n	a12, a6
400d5195:	084d      	mov.n	a4, a8
400d5197:	c138      	l32i.n	a3, a1, 48
400d5199:	a158      	l32i.n	a5, a1, 40
400d519b:	1349      	s32i.n	a4, a3, 4
400d519d:	1689      	s32i.n	a8, a6, 4
400d519f:	1548      	l32i.n	a4, a5, 4
400d51a1:	1c38      	l32i.n	a3, a12, 4
400d51a3:	7168      	l32i.n	a6, a1, 28
400d51a5:	343a      	add.n	a3, a4, a3
400d51a7:	021367        	beq	a3, a6, 400d51ad <search_object+0x1b5>
400d51aa:	ffc8c6        	j	400d50d1 <search_object+0xd9>
400d51ad:	07bd      	mov.n	a11, a7
400d51af:	02ad      	mov.n	a10, a2
400d51b1:	ff8925        	call8	400d4a44 <frame_heapsort>
400d51b4:	1188      	l32i.n	a8, a1, 4
400d51b6:	1898      	l32i.n	a9, a8, 4
400d51b8:	7189      	s32i.n	a8, a1, 28
400d51ba:	06b916        	beqz	a9, 400d5229 <search_object+0x231>
400d51bd:	0138      	l32i.n	a3, a1, 0
400d51bf:	a04980        	addx4	a4, a9, a8
400d51c2:	1368      	l32i.n	a6, a3, 4
400d51c4:	4139      	s32i.n	a3, a1, 16
400d51c6:	5149      	s32i.n	a4, a1, 20
400d51c8:	590b      	addi.n	a5, a9, -1
400d51ca:	5188      	l32i.n	a8, a1, 20
400d51cc:	6159      	s32i.n	a5, a1, 24
400d51ce:	1838      	l32i.n	a3, a8, 4
400d51d0:	46dc      	bnez.n	a6, 400d51e8 <search_object+0x1f0>
400d51d2:	060c      	movi.n	a6, 0
400d51d4:	000a86        	j	400d5202 <search_object+0x20a>
400d51d7:	05a8      	l32i.n	a10, a5, 0
400d51d9:	0b6d      	mov.n	a6, a11
400d51db:	14a9      	s32i.n	a10, a4, 4
400d51dd:	fcc552        	addi	a5, a5, -4
400d51e0:	fcc442        	addi	a4, a4, -4
400d51e3:	dbcc      	bnez.n	a11, 400d51f4 <search_object+0x1fc>
400d51e5:	fffa46        	j	400d51d2 <search_object+0x1da>
400d51e8:	4148      	l32i.n	a4, a1, 16
400d51ea:	861b      	addi.n	a8, a6, 1
400d51ec:	996a      	add.n	a9, a9, a6
400d51ee:	a05840        	addx4	a5, a8, a4
400d51f1:	a04940        	addx4	a4, a9, a4
400d51f4:	05b8      	l32i.n	a11, a5, 0
400d51f6:	03cd      	mov.n	a12, a3
400d51f8:	02ad      	mov.n	a10, a2
400d51fa:	0007e0        	callx8	a7
400d51fd:	b60b      	addi.n	a11, a6, -1
400d51ff:	d41ae6        	bgei	a10, 1, 400d51d7 <search_object+0x1df>
400d5202:	6158      	l32i.n	a5, a1, 24
400d5204:	4198      	l32i.n	a9, a1, 16
400d5206:	865a      	add.n	a8, a6, a5
400d5208:	a08890        	addx4	a8, a8, a9
400d520b:	2839      	s32i.n	a3, a8, 8
400d520d:	5138      	l32i.n	a3, a1, 20
400d520f:	059d      	mov.n	a9, a5
400d5211:	fcc332        	addi	a3, a3, -4
400d5214:	5139      	s32i.n	a3, a1, 20
400d5216:	fae556        	bnez	a5, 400d51c8 <search_object+0x1d0>
400d5219:	7148      	l32i.n	a4, a1, 28
400d521b:	4168      	l32i.n	a6, a1, 16
400d521d:	1438      	l32i.n	a3, a4, 4
400d521f:	1658      	l32i.n	a5, a6, 4
400d5221:	1188      	l32i.n	a8, a1, 4
400d5223:	353a      	add.n	a3, a5, a3
400d5225:	7189      	s32i.n	a8, a1, 28
400d5227:	1639      	s32i.n	a3, a6, 4
400d5229:	71a8      	l32i.n	a10, a1, 28
400d522b:	eb9881        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d522e:	0008e0        	callx8	a8
400d5231:	000206        	j	400d523d <search_object+0x245>
400d5234:	a1c8      	l32i.n	a12, a1, 40
400d5236:	07bd      	mov.n	a11, a7
400d5238:	02ad      	mov.n	a10, a2
400d523a:	ff80a5        	call8	400d4a44 <frame_heapsort>
400d523d:	0148      	l32i.n	a4, a1, 0
400d523f:	3238      	l32i.n	a3, a2, 12
400d5241:	0439      	s32i.n	a3, a4, 0
400d5243:	4258      	l32i.n	a5, a2, 16
400d5245:	130c      	movi.n	a3, 1
400d5247:	203530        	or	a3, a5, a3
400d524a:	3249      	s32i.n	a4, a2, 12
400d524c:	4239      	s32i.n	a3, a2, 16
400d524e:	0238      	l32i.n	a3, a2, 0
400d5250:	8198      	l32i.n	a9, a1, 32
400d5252:	03b937        	bgeu	a9, a3, 400d5259 <search_object+0x261>
400d5255:	020c      	movi.n	a2, 0
400d5257:	f01d      	retw.n
400d5259:	4268      	l32i.n	a6, a2, 16
400d525b:	02e607        	bbsi	a6, 0, 400d5261 <search_object+0x269>
400d525e:	0051c6        	j	400d53a9 <search_object+0x3b1>
400d5261:	490c      	movi.n	a9, 4
400d5263:	107690        	and	a7, a6, a9
400d5266:	06e716        	beqz	a7, 400d52d8 <search_object+0x2e0>
400d5269:	3238      	l32i.n	a3, a2, 12
400d526b:	1398      	l32i.n	a9, a3, 4
400d526d:	4139      	s32i.n	a3, a1, 16
400d526f:	fe2916        	beqz	a9, 400d5255 <search_object+0x25d>
400d5272:	050c      	movi.n	a5, 0
400d5274:	718b      	addi.n	a7, a1, 8
400d5276:	5129      	s32i.n	a2, a1, 20
400d5278:	6179      	s32i.n	a7, a1, 24
400d527a:	052d      	mov.n	a2, a5
400d527c:	095d      	mov.n	a5, a9
400d527e:	4168      	l32i.n	a6, a1, 16
400d5280:	452a      	add.n	a4, a5, a2
400d5282:	414140        	srli	a4, a4, 1
400d5285:	a03460        	addx4	a3, a4, a6
400d5288:	2338      	l32i.n	a3, a3, 8
400d528a:	1388      	l32i.n	a8, a3, 4
400d528c:	04c3a2        	addi	a10, a3, 4
400d528f:	c0aa80        	sub	a10, a10, a8
400d5292:	ff9da5        	call8	400d4c6c <get_cie_encoding>
400d5295:	51b8      	l32i.n	a11, a1, 20
400d5297:	7460a0        	extui	a6, a10, 0, 8
400d529a:	0a7d      	mov.n	a7, a10
400d529c:	06ad      	mov.n	a10, a6
400d529e:	ff8325        	call8	400d4ad0 <base_from_object>
400d52a1:	61d8      	l32i.n	a13, a1, 24
400d52a3:	0abd      	mov.n	a11, a10
400d52a5:	c38b      	addi.n	a12, a3, 8
400d52a7:	06ad      	mov.n	a10, a6
400d52a9:	ff8625        	call8	400d4b0c <read_encoded_value_with_base>
400d52ac:	0acd      	mov.n	a12, a10
400d52ae:	01dd      	mov.n	a13, a1
400d52b0:	0b0c      	movi.n	a11, 0
400d52b2:	34a070        	extui	a10, a7, 0, 4
400d52b5:	ff8565        	call8	400d4b0c <read_encoded_value_with_base>
400d52b8:	2188      	l32i.n	a8, a1, 8
400d52ba:	8198      	l32i.n	a9, a1, 32
400d52bc:	103987        	bltu	a9, a8, 400d52d0 <search_object+0x2d8>
400d52bf:	01a8      	l32i.n	a10, a1, 0
400d52c1:	88aa      	add.n	a8, a8, a10
400d52c3:	053987        	bltu	a9, a8, 400d52cc <search_object+0x2d4>
400d52c6:	241b      	addi.n	a2, a4, 1
400d52c8:	000186        	j	400d52d2 <search_object+0x2da>
400d52cb:	032d00        	lsi	f0, a13, 12
400d52ce:	f01d      	retw.n
400d52d0:	045d      	mov.n	a5, a4
400d52d2:	a83257        	bltu	a2, a5, 400d527e <search_object+0x286>
400d52d5:	ffdf06        	j	400d5255 <search_object+0x25d>
400d52d8:	f8a752        	movi	a5, 0x7f8
400d52db:	105650        	and	a5, a6, a5
400d52de:	060556        	bnez	a5, 400d5342 <search_object+0x34a>
400d52e1:	32a8      	l32i.n	a10, a2, 12
400d52e3:	1a68      	l32i.n	a6, a10, 4
400d52e5:	f6c616        	beqz	a6, 400d5255 <search_object+0x25d>
400d52e8:	81b8      	l32i.n	a11, a1, 32
400d52ea:	718b      	addi.n	a7, a1, 8
400d52ec:	356a      	add.n	a3, a5, a6
400d52ee:	413130        	srli	a3, a3, 1
400d52f1:	a023a0        	addx4	a2, a3, a10
400d52f4:	2228      	l32i.n	a2, a2, 8
400d52f6:	080282        	l8ui	a8, a2, 8
400d52f9:	090292        	l8ui	a9, a2, 9
400d52fc:	004782        	s8i	a8, a7, 0
400d52ff:	0a0282        	l8ui	a8, a2, 10
400d5302:	014792        	s8i	a9, a7, 1
400d5305:	0b0242        	l8ui	a4, a2, 11
400d5308:	024782        	s8i	a8, a7, 2
400d530b:	034742        	s8i	a4, a7, 3
400d530e:	0c0292        	l8ui	a9, a2, 12
400d5311:	0d0282        	l8ui	a8, a2, 13
400d5314:	004192        	s8i	a9, a1, 0
400d5317:	0e0292        	l8ui	a9, a2, 14
400d531a:	014182        	s8i	a8, a1, 1
400d531d:	0f0282        	l8ui	a8, a2, 15
400d5320:	2148      	l32i.n	a4, a1, 8
400d5322:	024192        	s8i	a9, a1, 2
400d5325:	034182        	s8i	a8, a1, 3
400d5328:	0e3b47        	bltu	a11, a4, 400d533a <search_object+0x342>
400d532b:	0158      	l32i.n	a5, a1, 0
400d532d:	445a      	add.n	a4, a4, a5
400d532f:	02bb47        	bgeu	a11, a4, 400d5335 <search_object+0x33d>
400d5332:	002b86        	j	400d53e4 <search_object+0x3ec>
400d5335:	531b      	addi.n	a5, a3, 1
400d5337:	000046        	j	400d533c <search_object+0x344>
400d533a:	036d      	mov.n	a6, a3
400d533c:	ac3567        	bltu	a5, a6, 400d52ec <search_object+0x2f4>
400d533f:	ffc486        	j	400d5255 <search_object+0x25d>
400d5342:	3238      	l32i.n	a3, a2, 12
400d5344:	02bd      	mov.n	a11, a2
400d5346:	4139      	s32i.n	a3, a1, 16
400d5348:	743360        	extui	a3, a6, 3, 8
400d534b:	03ad      	mov.n	a10, a3
400d534d:	ff7825        	call8	400d4ad0 <base_from_object>
400d5350:	4148      	l32i.n	a4, a1, 16
400d5352:	51a9      	s32i.n	a10, a1, 20
400d5354:	1458      	l32i.n	a5, a4, 4
400d5356:	efb516        	beqz	a5, 400d5255 <search_object+0x25d>
400d5359:	346030        	extui	a6, a3, 0, 4
400d535c:	6169      	s32i.n	a6, a1, 24
400d535e:	8148      	l32i.n	a4, a1, 32
400d5360:	076d      	mov.n	a6, a7
400d5362:	7139      	s32i.n	a3, a1, 28
400d5364:	718b      	addi.n	a7, a1, 8
400d5366:	062d      	mov.n	a2, a6
400d5368:	053d      	mov.n	a3, a5
400d536a:	823a      	add.n	a8, a2, a3
400d536c:	415180        	srli	a5, a8, 1
400d536f:	4188      	l32i.n	a8, a1, 16
400d5371:	51b8      	l32i.n	a11, a1, 20
400d5373:	a0a580        	addx4	a10, a5, a8
400d5376:	2a68      	l32i.n	a6, a10, 8
400d5378:	71a8      	l32i.n	a10, a1, 28
400d537a:	07dd      	mov.n	a13, a7
400d537c:	c68b      	addi.n	a12, a6, 8
400d537e:	ff78e5        	call8	400d4b0c <read_encoded_value_with_base>
400d5381:	0acd      	mov.n	a12, a10
400d5383:	61a8      	l32i.n	a10, a1, 24
400d5385:	01dd      	mov.n	a13, a1
400d5387:	0b0c      	movi.n	a11, 0
400d5389:	ff7825        	call8	400d4b0c <read_encoded_value_with_base>
400d538c:	21a8      	l32i.n	a10, a1, 8
400d538e:	0f34a7        	bltu	a4, a10, 400d53a1 <search_object+0x3a9>
400d5391:	01b8      	l32i.n	a11, a1, 0
400d5393:	aaba      	add.n	a10, a10, a11
400d5395:	0434a7        	bltu	a4, a10, 400d539d <search_object+0x3a5>
400d5398:	251b      	addi.n	a2, a5, 1
400d539a:	000146        	j	400d53a3 <search_object+0x3ab>
400d539d:	062d      	mov.n	a2, a6
400d539f:	f01d      	retw.n
400d53a1:	053d      	mov.n	a3, a5
400d53a3:	c33237        	bltu	a2, a3, 400d536a <search_object+0x372>
400d53a6:	ffaac6        	j	400d5255 <search_object+0x25d>
400d53a9:	1b6617        	bbci	a6, 1, 400d53c8 <search_object+0x3d0>
400d53ac:	3238      	l32i.n	a3, a2, 12
400d53ae:	03b8      	l32i.n	a11, a3, 0
400d53b0:	ea1b16        	beqz	a11, 400d5255 <search_object+0x25d>
400d53b3:	8148      	l32i.n	a4, a1, 32
400d53b5:	04cd      	mov.n	a12, a4
400d53b7:	02ad      	mov.n	a10, a2
400d53b9:	ffa265        	call8	400d4de0 <linear_search_fdes>
400d53bc:	5adc      	bnez.n	a10, 400d53d5 <search_object+0x3dd>
400d53be:	334b      	addi.n	a3, a3, 4
400d53c0:	03b8      	l32i.n	a11, a3, 0
400d53c2:	fefb56        	bnez	a11, 400d53b5 <search_object+0x3bd>
400d53c5:	ffa306        	j	400d5255 <search_object+0x25d>
400d53c8:	32b8      	l32i.n	a11, a2, 12
400d53ca:	81c8      	l32i.n	a12, a1, 32
400d53cc:	02ad      	mov.n	a10, a2
400d53ce:	ffa125        	call8	400d4de0 <linear_search_fdes>
400d53d1:	0a2d      	mov.n	a2, a10
400d53d3:	f01d      	retw.n
400d53d5:	0a2d      	mov.n	a2, a10
400d53d7:	f01d      	retw.n
400d53d9:	4238      	l32i.n	a3, a2, 16
400d53db:	026317        	bbci	a3, 1, 400d53e1 <search_object+0x3e9>
400d53de:	ff3006        	j	400d50a2 <search_object+0xaa>
400d53e1:	ff3506        	j	400d50b9 <search_object+0xc1>
400d53e4:	f01d      	retw.n
	...

400d53e8 <__register_frame_info$part$4>:
400d53e8:	004136        	entry	a1, 32
400d53eb:	036322        	s32i	a2, a3, 12
400d53ee:	f8a722        	movi	a2, 0x7f8
400d53f1:	00a082        	movi	a8, 0
400d53f4:	f97c      	movi.n	a9, -1
400d53f6:	4329      	s32i.n	a2, a3, 16
400d53f8:	eb3c21        	l32r	a2, 400d00e8 <_flash_cache_start+0xd0>
400d53fb:	0399      	s32i.n	a9, a3, 0
400d53fd:	1389      	s32i.n	a8, a3, 4
400d53ff:	2389      	s32i.n	a8, a3, 8
400d5401:	171287        	beq	a2, a8, 400d541c <__register_frame_info$part$4+0x34>
400d5404:	eb3a21        	l32r	a2, 400d00ec <_flash_cache_start+0xd4>
400d5407:	02ad      	mov.n	a10, a2
400d5409:	af76a5        	call8	40084b74 <pthread_mutex_lock>
400d540c:	eb3981        	l32r	a8, 400d00f0 <_flash_cache_start+0xd8>
400d540f:	02ad      	mov.n	a10, a2
400d5411:	0828      	l32i.n	a2, a8, 0
400d5413:	0839      	s32i.n	a3, a8, 0
400d5415:	5329      	s32i.n	a2, a3, 20
400d5417:	af8025        	call8	40084c18 <pthread_mutex_unlock>
400d541a:	f01d      	retw.n
400d541c:	eb3521        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d541f:	0288      	l32i.n	a8, a2, 0
400d5421:	0239      	s32i.n	a3, a2, 0
400d5423:	5389      	s32i.n	a8, a3, 20
400d5425:	f01d      	retw.n
	...

400d5428 <__register_frame_info_bases>:
400d5428:	004136        	entry	a1, 32
400d542b:	03a216        	beqz	a2, 400d5469 <__register_frame_info_bases+0x41>
400d542e:	002282        	l32i	a8, a2, 0
400d5431:	48bc      	beqz.n	a8, 400d5469 <__register_frame_info_bases+0x41>
400d5433:	3329      	s32i.n	a2, a3, 12
400d5435:	f8a722        	movi	a2, 0x7f8
400d5438:	f87c      	movi.n	a8, -1
400d543a:	4329      	s32i.n	a2, a3, 16
400d543c:	eb2b21        	l32r	a2, 400d00e8 <_flash_cache_start+0xd0>
400d543f:	0389      	s32i.n	a8, a3, 0
400d5441:	1349      	s32i.n	a4, a3, 4
400d5443:	2359      	s32i.n	a5, a3, 8
400d5445:	729c      	beqz.n	a2, 400d5460 <__register_frame_info_bases+0x38>
400d5447:	eb2941        	l32r	a4, 400d00ec <_flash_cache_start+0xd4>
400d544a:	04ad      	mov.n	a10, a4
400d544c:	af7265        	call8	40084b74 <pthread_mutex_lock>
400d544f:	eb2821        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d5452:	04ad      	mov.n	a10, a4
400d5454:	0248      	l32i.n	a4, a2, 0
400d5456:	0239      	s32i.n	a3, a2, 0
400d5458:	5349      	s32i.n	a4, a3, 20
400d545a:	af7be5        	call8	40084c18 <pthread_mutex_unlock>
400d545d:	f01d      	retw.n
400d545f:	242100        	extui	a2, a0, 1, 3
400d5462:	48eb      	addi.n	a4, a8, 14
400d5464:	023902        	lsi	f0, a9, 8
400d5467:	5349      	s32i.n	a4, a3, 20
400d5469:	f01d      	retw.n
	...

400d546c <__register_frame_info>:
400d546c:	004136        	entry	a1, 32
400d546f:	928c      	beqz.n	a2, 400d547c <__register_frame_info+0x10>
400d5471:	0288      	l32i.n	a8, a2, 0
400d5473:	588c      	beqz.n	a8, 400d547c <__register_frame_info+0x10>
400d5475:	03bd      	mov.n	a11, a3
400d5477:	02ad      	mov.n	a10, a2
400d5479:	fff6e5        	call8	400d53e8 <__register_frame_info$part$4>
400d547c:	f01d      	retw.n
	...

400d5480 <__register_frame>:
400d5480:	004136        	entry	a1, 32
400d5483:	0288      	l32i.n	a8, a2, 0
400d5485:	00f816        	beqz	a8, 400d5498 <__register_frame+0x18>
400d5488:	18a0a2        	movi	a10, 24
400d548b:	eb1681        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d548e:	0008e0        	callx8	a8
400d5491:	0abd      	mov.n	a11, a10
400d5493:	02ad      	mov.n	a10, a2
400d5495:	fff525        	call8	400d53e8 <__register_frame_info$part$4>
400d5498:	f01d      	retw.n
	...

400d549c <__register_frame_info_table_bases>:
400d549c:	004136        	entry	a1, 32
400d549f:	3329      	s32i.n	a2, a3, 12
400d54a1:	faa722        	movi	a2, 0x7fa
400d54a4:	f87c      	movi.n	a8, -1
400d54a6:	4329      	s32i.n	a2, a3, 16
400d54a8:	eb1021        	l32r	a2, 400d00e8 <_flash_cache_start+0xd0>
400d54ab:	0389      	s32i.n	a8, a3, 0
400d54ad:	1349      	s32i.n	a4, a3, 4
400d54af:	2359      	s32i.n	a5, a3, 8
400d54b1:	729c      	beqz.n	a2, 400d54cc <__register_frame_info_table_bases+0x30>
400d54b3:	eb0e21        	l32r	a2, 400d00ec <_flash_cache_start+0xd4>
400d54b6:	02ad      	mov.n	a10, a2
400d54b8:	af6ba5        	call8	40084b74 <pthread_mutex_lock>
400d54bb:	eb0d81        	l32r	a8, 400d00f0 <_flash_cache_start+0xd8>
400d54be:	02ad      	mov.n	a10, a2
400d54c0:	0828      	l32i.n	a2, a8, 0
400d54c2:	0839      	s32i.n	a3, a8, 0
400d54c4:	5329      	s32i.n	a2, a3, 20
400d54c6:	af7525        	call8	40084c18 <pthread_mutex_unlock>
400d54c9:	f01d      	retw.n
400d54cb:	092100        	l32e	a0, a1, -56
400d54ce:	88eb      	addi.n	a8, a8, 14
400d54d0:	023902        	lsi	f0, a9, 8
400d54d3:	5389      	s32i.n	a8, a3, 20
400d54d5:	f01d      	retw.n
	...

400d54d8 <__register_frame_info_table>:
400d54d8:	004136        	entry	a1, 32
400d54db:	0d0c      	movi.n	a13, 0
400d54dd:	0dcd      	mov.n	a12, a13
400d54df:	03bd      	mov.n	a11, a3
400d54e1:	02ad      	mov.n	a10, a2
400d54e3:	fffba5        	call8	400d549c <__register_frame_info_table_bases>
400d54e6:	f01d      	retw.n

400d54e8 <__register_frame_table>:
400d54e8:	004136        	entry	a1, 32
400d54eb:	18a0a2        	movi	a10, 24
400d54ee:	eafd81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d54f1:	0008e0        	callx8	a8
400d54f4:	0d0c      	movi.n	a13, 0
400d54f6:	0abd      	mov.n	a11, a10
400d54f8:	0dcd      	mov.n	a12, a13
400d54fa:	20a220        	or	a10, a2, a2
400d54fd:	fff9e5        	call8	400d549c <__register_frame_info_table_bases>
400d5500:	f01d      	retw.n
	...

400d5504 <__deregister_frame_info_bases>:
400d5504:	004136        	entry	a1, 32
400d5507:	204220        	or	a4, a2, a2
400d550a:	08c216        	beqz	a2, 400d559a <__deregister_frame_info_bases+0x96>
400d550d:	002232        	l32i	a3, a2, 0
400d5510:	088316        	beqz	a3, 400d559c <__deregister_frame_info_bases+0x98>
400d5513:	eaf531        	l32r	a3, 400d00e8 <_flash_cache_start+0xd0>
400d5516:	005316        	beqz	a3, 400d551f <__deregister_frame_info_bases+0x1b>
400d5519:	eaf4a1        	l32r	a10, 400d00ec <_flash_cache_start+0xd4>
400d551c:	af6565        	call8	40084b74 <pthread_mutex_lock>
400d551f:	eaf491        	l32r	a9, 400d00f0 <_flash_cache_start+0xd8>
400d5522:	002982        	l32i	a8, a9, 0
400d5525:	48ac      	beqz.n	a8, 400d554d <__deregister_frame_info_bases+0x49>
400d5527:	3828      	l32i.n	a2, a8, 12
400d5529:	1b9427        	bne	a4, a2, 400d5548 <__deregister_frame_info_bases+0x44>
400d552c:	0002c6        	j	400d553b <__deregister_frame_info_bases+0x37>
400d552f:	329800        	orbc	b9, b8, b0
400d5532:	109497        	bne	a4, a9, 400d5546 <__deregister_frame_info_bases+0x42>
400d5535:	14c882        	addi	a8, a8, 20
400d5538:	0000c6        	j	400d553f <__deregister_frame_info_bases+0x3b>
400d553b:	082d      	mov.n	a2, a8
400d553d:	098d      	mov.n	a8, a9
400d553f:	5248      	l32i.n	a4, a2, 20
400d5541:	0849      	s32i.n	a4, a8, 0
400d5543:	001006        	j	400d5587 <__deregister_frame_info_bases+0x83>
400d5546:	028d      	mov.n	a8, a2
400d5548:	5828      	l32i.n	a2, a8, 20
400d554a:	fe2256        	bnez	a2, 400d5530 <__deregister_frame_info_bases+0x2c>
400d554d:	eae991        	l32r	a9, 400d00f4 <_flash_cache_start+0xdc>
400d5550:	0928      	l32i.n	a2, a9, 0
400d5552:	04a216        	beqz	a2, 400d55a0 <__deregister_frame_info_bases+0x9c>
400d5555:	4288      	l32i.n	a8, a2, 16
400d5557:	156807        	bbci	a8, 0, 400d5570 <__deregister_frame_info_bases+0x6c>
400d555a:	3288      	l32i.n	a8, a2, 12
400d555c:	0888      	l32i.n	a8, a8, 0
400d555e:	1a9487        	bne	a4, a8, 400d557c <__deregister_frame_info_bases+0x78>
400d5561:	5248      	l32i.n	a4, a2, 20
400d5563:	0949      	s32i.n	a4, a9, 0
400d5565:	32a8      	l32i.n	a10, a2, 12
400d5567:	eac981        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d556a:	0008e0        	callx8	a8
400d556d:	000586        	j	400d5587 <__deregister_frame_info_bases+0x83>
400d5570:	3288      	l32i.n	a8, a2, 12
400d5572:	069487        	bne	a4, a8, 400d557c <__deregister_frame_info_bases+0x78>
400d5575:	5248      	l32i.n	a4, a2, 20
400d5577:	0949      	s32i.n	a4, a9, 0
400d5579:	000286        	j	400d5587 <__deregister_frame_info_bases+0x83>
400d557c:	14c292        	addi	a9, a2, 20
400d557f:	5228      	l32i.n	a2, a2, 20
400d5581:	fd0256        	bnez	a2, 400d5555 <__deregister_frame_info_bases+0x51>
400d5584:	000606        	j	400d55a0 <__deregister_frame_info_bases+0x9c>
400d5587:	d39c      	beqz.n	a3, 400d55a8 <__deregister_frame_info_bases+0xa4>
400d5589:	ead8a1        	l32r	a10, 400d00ec <_flash_cache_start+0xd4>
400d558c:	201110        	or	a1, a1, a1
400d558f:	af68a5        	call8	40084c18 <pthread_mutex_unlock>
400d5592:	22dc      	bnez.n	a2, 400d55a8 <__deregister_frame_info_bases+0xa4>
400d5594:	201110        	or	a1, a1, a1
400d5597:	b5dd65        	call8	4008b36c <abort>
400d559a:	f01d      	retw.n
400d559c:	032d      	mov.n	a2, a3
400d559e:	f01d      	retw.n
400d55a0:	020c      	movi.n	a2, 0
400d55a2:	e39327        	bne	a3, a2, 400d5589 <__deregister_frame_info_bases+0x85>
400d55a5:	fffac6        	j	400d5594 <__deregister_frame_info_bases+0x90>
400d55a8:	f01d      	retw.n
	...

400d55ac <__deregister_frame_info>:
400d55ac:	004136        	entry	a1, 32
400d55af:	02ad      	mov.n	a10, a2
400d55b1:	fff525        	call8	400d5504 <__deregister_frame_info_bases>
400d55b4:	0a2d      	mov.n	a2, a10
400d55b6:	f01d      	retw.n

400d55b8 <__deregister_frame>:
400d55b8:	004136        	entry	a1, 32
400d55bb:	0288      	l32i.n	a8, a2, 0
400d55bd:	988c      	beqz.n	a8, 400d55ca <__deregister_frame+0x12>
400d55bf:	02ad      	mov.n	a10, a2
400d55c1:	fff425        	call8	400d5504 <__deregister_frame_info_bases>
400d55c4:	eab281        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d55c7:	0008e0        	callx8	a8
400d55ca:	f01d      	retw.n

400d55cc <_Unwind_Find_FDE>:
400d55cc:	006136        	entry	a1, 48
400d55cf:	207220        	or	a7, a2, a2
400d55d2:	eac521        	l32r	a2, 400d00e8 <_flash_cache_start+0xd0>
400d55d5:	005216        	beqz	a2, 400d55de <_Unwind_Find_FDE+0x12>
400d55d8:	eac5a1        	l32r	a10, 400d00ec <_flash_cache_start+0xd4>
400d55db:	af59a5        	call8	40084b74 <pthread_mutex_lock>
400d55de:	eac551        	l32r	a5, 400d00f4 <_flash_cache_start+0xdc>
400d55e1:	002522        	l32i	a2, a5, 0
400d55e4:	005256        	bnez	a2, 400d55ed <_Unwind_Find_FDE+0x21>
400d55e7:	eac241        	l32r	a4, 400d00f0 <_flash_cache_start+0xd8>
400d55ea:	001446        	j	400d563f <_Unwind_Find_FDE+0x73>
400d55ed:	0248      	l32i.n	a4, a2, 0
400d55ef:	0e3747        	bltu	a7, a4, 400d5601 <_Unwind_Find_FDE+0x35>
400d55f2:	07bd      	mov.n	a11, a7
400d55f4:	02ad      	mov.n	a10, a2
400d55f6:	ffa025        	call8	400d4ff8 <search_object>
400d55f9:	0a6d      	mov.n	a6, a10
400d55fb:	091a56        	bnez	a10, 400d5690 <_Unwind_Find_FDE+0xc4>
400d55fe:	fff946        	j	400d55e7 <_Unwind_Find_FDE+0x1b>
400d5601:	5228      	l32i.n	a2, a2, 20
400d5603:	fe6256        	bnez	a2, 400d55ed <_Unwind_Find_FDE+0x21>
400d5606:	fff746        	j	400d55e7 <_Unwind_Find_FDE+0x1b>
400d5609:	5288      	l32i.n	a8, a2, 20
400d560b:	07bd      	mov.n	a11, a7
400d560d:	02ad      	mov.n	a10, a2
400d560f:	0489      	s32i.n	a8, a4, 0
400d5611:	ff9e65        	call8	400d4ff8 <search_object>
400d5614:	0588      	l32i.n	a8, a5, 0
400d5616:	0a6d      	mov.n	a6, a10
400d5618:	989c      	beqz.n	a8, 400d5635 <_Unwind_Find_FDE+0x69>
400d561a:	02a8      	l32i.n	a10, a2, 0
400d561c:	0898      	l32i.n	a9, a8, 0
400d561e:	07b9a7        	bgeu	a9, a10, 400d5629 <_Unwind_Find_FDE+0x5d>
400d5621:	000406        	j	400d5635 <_Unwind_Find_FDE+0x69>
400d5624:	0898      	l32i.n	a9, a8, 0
400d5626:	0e39a7        	bltu	a9, a10, 400d5638 <_Unwind_Find_FDE+0x6c>
400d5629:	14c8b2        	addi	a11, a8, 20
400d562c:	5888      	l32i.n	a8, a8, 20
400d562e:	ff2856        	bnez	a8, 400d5624 <_Unwind_Find_FDE+0x58>
400d5631:	0000c6        	j	400d5638 <_Unwind_Find_FDE+0x6c>
400d5634:	afb100        	f64cmph	a11, a1, a0, 10
400d5637:	89ea      	add.n	a8, a9, a14
400d5639:	0b2952        	l32i	a5, a9, 44
400d563c:	050656        	bnez	a6, 400d5690 <_Unwind_Find_FDE+0xc4>
400d563f:	0428      	l32i.n	a2, a4, 0
400d5641:	fc4256        	bnez	a2, 400d5609 <_Unwind_Find_FDE+0x3d>
400d5644:	000f86        	j	400d5686 <_Unwind_Find_FDE+0xba>
400d5647:	eaa9a1        	l32r	a10, 400d00ec <_flash_cache_start+0xd4>
400d564a:	af5ce5        	call8	40084c18 <pthread_mutex_unlock>
400d564d:	1278      	l32i.n	a7, a2, 4
400d564f:	2258      	l32i.n	a5, a2, 8
400d5651:	4248      	l32i.n	a4, a2, 16
400d5653:	0379      	s32i.n	a7, a3, 0
400d5655:	1359      	s32i.n	a5, a3, 4
400d5657:	74a340        	extui	a10, a4, 3, 8
400d565a:	0a6427        	bbci	a4, 2, 400d5668 <_Unwind_Find_FDE+0x9c>
400d565d:	012642        	l32i	a4, a6, 4
400d5660:	a64b      	addi.n	a10, a6, 4
400d5662:	c0aa40        	sub	a10, a10, a4
400d5665:	ff6065        	call8	400d4c6c <get_cie_encoding>
400d5668:	7440a0        	extui	a4, a10, 0, 8
400d566b:	02bd      	mov.n	a11, a2
400d566d:	04ad      	mov.n	a10, a4
400d566f:	ff4625        	call8	400d4ad0 <base_from_object>
400d5672:	0abd      	mov.n	a11, a10
400d5674:	01dd      	mov.n	a13, a1
400d5676:	c68b      	addi.n	a12, a6, 8
400d5678:	04ad      	mov.n	a10, a4
400d567a:	ff4925        	call8	400d4b0c <read_encoded_value_with_base>
400d567d:	0128      	l32i.n	a2, a1, 0
400d567f:	2329      	s32i.n	a2, a3, 8
400d5681:	000746        	j	400d56a2 <_Unwind_Find_FDE+0xd6>
400d5684:	310000        	srai	a0, a0, 16
400d5687:	ea98      	l32i.n	a9, a10, 56
400d5689:	036d      	mov.n	a6, a3
400d568b:	339c      	beqz.n	a3, 400d56a2 <_Unwind_Find_FDE+0xd6>
400d568d:	000206        	j	400d5699 <_Unwind_Find_FDE+0xcd>
400d5690:	ea9641        	l32r	a4, 400d00e8 <_flash_cache_start+0xd0>
400d5693:	fb0456        	bnez	a4, 400d5647 <_Unwind_Find_FDE+0x7b>
400d5696:	ffecc6        	j	400d564d <_Unwind_Find_FDE+0x81>
400d5699:	ea94a1        	l32r	a10, 400d00ec <_flash_cache_start+0xd4>
400d569c:	206220        	or	a6, a2, a2
400d569f:	af57a5        	call8	40084c18 <pthread_mutex_unlock>
400d56a2:	202660        	or	a2, a6, a6
400d56a5:	000090        	retw

400d56a8 <cpu_configure_region_protection>:
400d56a8:	008136        	entry	a1, 64
400d56ab:	4c1c      	movi.n	a12, 20
400d56ad:	ea92b1        	l32r	a11, 400d00f8 <_flash_cache_start+0xe0>
400d56b0:	01ad      	mov.n	a10, a1
400d56b2:	ea7781        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d56b5:	0008e0        	callx8	a8
400d56b8:	080c      	movi.n	a8, 0
400d56ba:	000506        	j	400d56d2 <cpu_configure_region_protection+0x2a>
400d56bd:	a09810        	addx4	a9, a8, a1
400d56c0:	0998      	l32i.n	a9, a9, 0
400d56c2:	fa0c      	movi.n	a10, 15
400d56c4:	50e9a0        	wdtlb	a10, a9
400d56c7:	002030        	dsync
400d56ca:	5069a0        	witlb	a10, a9
400d56cd:	002000        	isync
400d56d0:	881b      	addi.n	a8, a8, 1
400d56d2:	e758b6        	bltui	a8, 5, 400d56bd <cpu_configure_region_protection+0x15>
400d56d5:	ea8981        	l32r	a8, 400d00fc <_flash_cache_start+0xe4>
400d56d8:	090c      	movi.n	a9, 0
400d56da:	50e890        	wdtlb	a9, a8
400d56dd:	002030        	dsync
400d56e0:	506890        	witlb	a9, a8
400d56e3:	002000        	isync
400d56e6:	f01d      	retw.n

400d56e8 <main_task>:
400d56e8:	004136        	entry	a1, 32
400d56eb:	ea8581        	l32r	a8, 400d0100 <_flash_cache_start+0xe8>
400d56ee:	0020c0        	memw
400d56f1:	012882        	l32i	a8, a8, 4
400d56f4:	ff3816        	beqz	a8, 400d56eb <main_task+0x3>
400d56f7:	04faa5        	call8	400da6a0 <heap_caps_enable_nonos_stack_heaps>
400d56fa:	01a0b2        	movi	a11, 1
400d56fd:	05a0a2        	movi	a10, 5
400d5700:	010ba5        	call8	400d67bc <esp_task_wdt_init>
400d5703:	da8c      	beqz.n	a10, 400d5714 <main_task+0x2c>
400d5705:	ea7fe1        	l32r	a14, 400d0104 <_flash_cache_start+0xec>
400d5708:	ea80d1        	l32r	a13, 400d0108 <_flash_cache_start+0xf0>
400d570b:	e2a1c2        	movi	a12, 0x1e2
400d570e:	ea7fb1        	l32r	a11, 400d010c <_flash_cache_start+0xf4>
400d5711:	b5f325        	call8	4008b644 <_esp_error_check_failed>
400d5714:	0a0c      	movi.n	a10, 0
400d5716:	b2f365        	call8	4008864c <xTaskGetIdleTaskHandleForCPU>
400d5719:	2a9c      	beqz.n	a10, 400d572f <main_task+0x47>
400d571b:	012d65        	call8	400d69f0 <esp_task_wdt_add>
400d571e:	da8c      	beqz.n	a10, 400d572f <main_task+0x47>
400d5720:	ea7ce1        	l32r	a14, 400d0110 <_flash_cache_start+0xf8>
400d5723:	ea79d1        	l32r	a13, 400d0108 <_flash_cache_start+0xf0>
400d5726:	eba1c2        	movi	a12, 0x1eb
400d5729:	ea78b1        	l32r	a11, 400d010c <_flash_cache_start+0xf4>
400d572c:	b5f165        	call8	4008b644 <_esp_error_check_failed>
400d572f:	b66025        	call8	4008bd30 <rtc_wdt_disable>
400d5732:	15ac65        	call8	400eb1f8 <app_main>
400d5735:	0a0c      	movi.n	a10, 0
400d5737:	b38325        	call8	40088f68 <vTaskDelete>
400d573a:	f01d      	retw.n

400d573c <intr_matrix_clear>:
400d573c:	004136        	entry	a1, 32
400d573f:	020c      	movi.n	a2, 0
400d5741:	000646        	j	400d575e <intr_matrix_clear+0x22>
400d5744:	6c0c      	movi.n	a12, 6
400d5746:	02bd      	mov.n	a11, a2
400d5748:	0a0c      	movi.n	a10, 0
400d574a:	ea7281        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d574d:	0008e0        	callx8	a8
400d5750:	6c0c      	movi.n	a12, 6
400d5752:	02bd      	mov.n	a11, a2
400d5754:	1a0c      	movi.n	a10, 1
400d5756:	ea6f81        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d5759:	0008e0        	callx8	a8
400d575c:	221b      	addi.n	a2, a2, 1
400d575e:	484c      	movi.n	a8, 68
400d5760:	e0a827        	bge	a8, a2, 400d5744 <intr_matrix_clear+0x8>
400d5763:	f01d      	retw.n
400d5765:	000000        	ill

400d5768 <do_global_ctors>:
400d5768:	004136        	entry	a1, 32
400d576b:	ea6cb1        	l32r	a11, 400d011c <_flash_cache_start+0x104>
400d576e:	ea6ca1        	l32r	a10, 400d0120 <_flash_cache_start+0x108>
400d5771:	ffcfa5        	call8	400d546c <__register_frame_info>
400d5774:	ea6921        	l32r	a2, 400d0118 <_flash_cache_start+0x100>
400d5777:	000286        	j	400d5785 <do_global_ctors+0x1d>
400d577a:	000000        	ill
400d577d:	0288      	l32i.n	a8, a2, 0
400d577f:	0008e0        	callx8	a8
400d5782:	fcc222        	addi	a2, a2, -4
400d5785:	ea6781        	l32r	a8, 400d0124 <_flash_cache_start+0x10c>
400d5788:	f1b287        	bgeu	a2, a8, 400d577d <do_global_ctors+0x15>
400d578b:	f01d      	retw.n
400d578d:	000000        	ill

400d5790 <wdt_reset_cpu1_info_enable>:
400d5790:	004136        	entry	a1, 32
400d5793:	ea6521        	l32r	a2, 400d0128 <_flash_cache_start+0x110>
400d5796:	20a220        	or	a10, a2, a2
400d5799:	ac1ae5        	call8	40081948 <esp_dport_access_reg_read>
400d579c:	01a182        	movi	a8, 0x101
400d579f:	20aa80        	or	a10, a10, a8
400d57a2:	0020c0        	memw
400d57a5:	0062a2        	s32i	a10, a2, 0
400d57a8:	02ad      	mov.n	a10, a2
400d57aa:	ac19e5        	call8	40081948 <esp_dport_access_reg_read>
400d57ad:	e87c      	movi.n	a8, -2
400d57af:	10aa80        	and	a10, a10, a8
400d57b2:	0020c0        	memw
400d57b5:	02a9      	s32i.n	a10, a2, 0
400d57b7:	f01d      	retw.n
400d57b9:	000000        	ill

400d57bc <select_rtc_slow_clk>:
400d57bc:	004136        	entry	a1, 32
400d57bf:	143020        	extui	a3, a2, 0, 2
400d57c2:	2b1366        	bnei	a3, 1, 400d57f1 <select_rtc_slow_clk+0x35>
400d57c5:	091266        	bnei	a2, 1, 400d57d2 <select_rtc_slow_clk+0x16>
400d57c8:	1a0c      	movi.n	a10, 1
400d57ca:	b6fa25        	call8	4008c76c <rtc_clk_32k_enable>
400d57cd:	000306        	j	400d57dd <select_rtc_slow_clk+0x21>
400d57d0:	0c0000        	lsi	f0, a0, 48
400d57d3:	8798      	l32i.n	a9, a7, 32
400d57d5:	100592        	l8ui	a9, a5, 16
400d57d8:	a52011        	l32r	a1, 400bec58 <_iram_end+0x31104>
400d57db:	b6fd      	lsi	f15, a6, 24
400d57dd:	00a4b2        	movi	a11, 0x400
400d57e0:	2a0c      	movi.n	a10, 2
400d57e2:	b6ce65        	call8	4008c4c8 <rtc_clk_cal>
400d57e5:	ea5181        	l32r	a8, 400d012c <_flash_cache_start+0x114>
400d57e8:	14b8a7        	bgeu	a8, a10, 400d5800 <select_rtc_slow_clk+0x44>
400d57eb:	0004c6        	j	400d5802 <select_rtc_slow_clk+0x46>
400d57ee:	000000        	ill
400d57f1:	0d2366        	bnei	a3, 2, 400d5802 <select_rtc_slow_clk+0x46>
400d57f4:	1b0c      	movi.n	a11, 1
400d57f6:	20abb0        	or	a10, a11, a11
400d57f9:	b6fca5        	call8	4008c7c4 <rtc_clk_8m_enable>
400d57fc:	000086        	j	400d5802 <select_rtc_slow_clk+0x46>
400d57ff:	030c00        	rsr.scompare1	a0
400d5802:	20a330        	or	a10, a3, a3
400d5805:	b70725        	call8	4008c878 <rtc_clk_slow_freq_set>
400d5808:	00a4b2        	movi	a11, 0x400
400d580b:	0a0c      	movi.n	a10, 0
400d580d:	b6cba5        	call8	4008c4c8 <rtc_clk_cal>
400d5810:	faea16        	beqz	a10, 400d57c2 <select_rtc_slow_clk+0x6>
400d5813:	13f725        	call8	400e9784 <esp_clk_slowclk_cal_set>
400d5816:	f01d      	retw.n

400d5818 <esp_clk_init>:
400d5818:	008136        	entry	a1, 64
400d581b:	ea4521        	l32r	a2, 400d0130 <_flash_cache_start+0x118>
400d581e:	0022a2        	l32i	a10, a2, 0
400d5821:	b66165        	call8	4008be38 <rtc_init>
400d5824:	b72965        	call8	4008cabc <rtc_clk_xtal_freq_get>
400d5827:	00ea56        	bnez	a10, 400d5839 <esp_clk_init+0x21>
400d582a:	ea42d1        	l32r	a13, 400d0134 <_flash_cache_start+0x11c>
400d582d:	ea42c1        	l32r	a12, 400d0138 <_flash_cache_start+0x120>
400d5830:	58a0b2        	movi	a11, 88
400d5833:	ea42a1        	l32r	a10, 400d013c <_flash_cache_start+0x124>
400d5836:	052965        	call8	400daacc <__assert_func>
400d5839:	01a0a2        	movi	a10, 1
400d583c:	b70c65        	call8	4008c904 <rtc_clk_fast_freq_set>
400d583f:	b63465        	call8	4008bb84 <rtc_wdt_protect_off>
400d5842:	b63ae5        	call8	4008bbf0 <rtc_wdt_feed>
400d5845:	40a6b2        	movi	a11, 0x640
400d5848:	00a0a2        	movi	a10, 0
400d584b:	b63d25        	call8	4008bc1c <rtc_wdt_set_time>
400d584e:	b63465        	call8	4008bb94 <rtc_wdt_protect_on>
400d5851:	0a0c      	movi.n	a10, 0
400d5853:	fff6a5        	call8	400d57bc <select_rtc_slow_clk>
400d5856:	b632e5        	call8	4008bb84 <rtc_wdt_protect_off>
400d5859:	b63965        	call8	4008bbf0 <rtc_wdt_feed>
400d585c:	ea39b1        	l32r	a11, 400d0140 <_flash_cache_start+0x128>
400d585f:	0a0c      	movi.n	a10, 0
400d5861:	b63ba5        	call8	4008bc1c <rtc_wdt_set_time>
400d5864:	b632e5        	call8	4008bb94 <rtc_wdt_protect_on>
400d5867:	20a110        	or	a10, a1, a1
400d586a:	b72ee5        	call8	4008cb58 <rtc_clk_cpu_freq_get_config>
400d586d:	3128      	l32i.n	a2, a1, 12
400d586f:	10c1b2        	addi	a11, a1, 16
400d5872:	f0a0a2        	movi	a10, 240
400d5875:	b727e5        	call8	4008caf4 <rtc_clk_cpu_freq_mhz_to_config>
400d5878:	dacc      	bnez.n	a10, 400d5889 <esp_clk_init+0x71>
400d587a:	ea32d1        	l32r	a13, 400d0144 <_flash_cache_start+0x12c>
400d587d:	ea2ec1        	l32r	a12, 400d0138 <_flash_cache_start+0x120>
400d5880:	81a0b2        	movi	a11, 129
400d5883:	ea2ea1        	l32r	a10, 400d013c <_flash_cache_start+0x124>
400d5886:	052465        	call8	400daacc <__assert_func>
400d5889:	ea2f81        	l32r	a8, 400d0148 <_flash_cache_start+0x130>
400d588c:	0020c0        	memw
400d588f:	0898      	l32i.n	a9, a8, 0
400d5891:	ea2e81        	l32r	a8, 400d014c <_flash_cache_start+0x134>
400d5894:	f18987        	bany	a9, a8, 400d5889 <esp_clk_init+0x71>
400d5897:	10c1a2        	addi	a10, a1, 16
400d589a:	b754a5        	call8	4008cde4 <rtc_clk_cpu_freq_set_config>
400d589d:	03ea90        	rsr.ccount	a9
400d58a0:	1189c0        	slli	a8, a9, 4
400d58a3:	c09890        	sub	a9, a8, a9
400d58a6:	1189c0        	slli	a8, a9, 4
400d58a9:	c28820        	quou	a8, a8, a2
400d58ac:	13ea80        	wsr.ccount	a8
400d58af:	f01d      	retw.n
400d58b1:	000000        	ill

400d58b4 <esp_perip_clk_init>:
400d58b4:	004136        	entry	a1, 32
400d58b7:	0a0c      	movi.n	a10, 0
400d58b9:	ea3081        	l32r	a8, 400d017c <_flash_cache_start+0x164>
400d58bc:	0008e0        	callx8	a8
400d58bf:	0a2d      	mov.n	a2, a10
400d58c1:	1a0c      	movi.n	a10, 1
400d58c3:	ea2e81        	l32r	a8, 400d017c <_flash_cache_start+0x164>
400d58c6:	0008e0        	callx8	a8
400d58c9:	f5c222        	addi	a2, a2, -11
400d58cc:	0532b6        	bltui	a2, 3, 400d58d5 <esp_perip_clk_init+0x21>
400d58cf:	f5caa2        	addi	a10, a10, -11
400d58d2:	203af6        	bgeui	a10, 3, 400d58f6 <esp_perip_clk_init+0x42>
400d58d5:	ea20a1        	l32r	a10, 400d0158 <_flash_cache_start+0x140>
400d58d8:	ac06e5        	call8	40081948 <esp_dport_access_reg_read>
400d58db:	ffaf32        	movi	a3, -1
400d58de:	3023a0        	xor	a2, a3, a10
400d58e1:	ea1ea1        	l32r	a10, 400d015c <_flash_cache_start+0x144>
400d58e4:	ac0625        	call8	40081948 <esp_dport_access_reg_read>
400d58e7:	3053a0        	xor	a5, a3, a10
400d58ea:	ea1da1        	l32r	a10, 400d0160 <_flash_cache_start+0x148>
400d58ed:	ac05a5        	call8	40081948 <esp_dport_access_reg_read>
400d58f0:	3033a0        	xor	a3, a3, a10
400d58f3:	0001c6        	j	400d58fe <esp_perip_clk_init+0x4a>
400d58f6:	ea1631        	l32r	a3, 400d0150 <_flash_cache_start+0x138>
400d58f9:	f50c      	movi.n	a5, 15
400d58fb:	ea1621        	l32r	a2, 400d0154 <_flash_cache_start+0x13c>
400d58fe:	ea19a1        	l32r	a10, 400d0164 <_flash_cache_start+0x14c>
400d5901:	2022a0        	or	a2, a2, a10
400d5904:	ea1961        	l32r	a6, 400d0168 <_flash_cache_start+0x150>
400d5907:	06ad      	mov.n	a10, a6
400d5909:	ac03e5        	call8	40081948 <esp_dport_access_reg_read>
400d590c:	ea1841        	l32r	a4, 400d016c <_flash_cache_start+0x154>
400d590f:	20aa40        	or	a10, a10, a4
400d5912:	0020c0        	memw
400d5915:	06a9      	s32i.n	a10, a6, 0
400d5917:	f03d      	nop.n
400d5919:	f03d      	nop.n
400d591b:	f03d      	nop.n
400d591d:	f03d      	nop.n
400d591f:	ea1461        	l32r	a6, 400d0170 <_flash_cache_start+0x158>
400d5922:	06ad      	mov.n	a10, a6
400d5924:	ac0225        	call8	40081948 <esp_dport_access_reg_read>
400d5927:	20aa40        	or	a10, a10, a4
400d592a:	0020c0        	memw
400d592d:	06a9      	s32i.n	a10, a6, 0
400d592f:	f03d      	nop.n
400d5931:	f03d      	nop.n
400d5933:	f03d      	nop.n
400d5935:	f03d      	nop.n
400d5937:	ea0861        	l32r	a6, 400d0158 <_flash_cache_start+0x140>
400d593a:	06ad      	mov.n	a10, a6
400d593c:	ac00a5        	call8	40081948 <esp_dport_access_reg_read>
400d593f:	f47c      	movi.n	a4, -1
400d5941:	308420        	xor	a8, a4, a2
400d5944:	10a8a0        	and	a10, a8, a10
400d5947:	0020c0        	memw
400d594a:	06a9      	s32i.n	a10, a6, 0
400d594c:	f03d      	nop.n
400d594e:	f03d      	nop.n
400d5950:	f03d      	nop.n
400d5952:	f03d      	nop.n
400d5954:	ea0861        	l32r	a6, 400d0174 <_flash_cache_start+0x15c>
400d5957:	06ad      	mov.n	a10, a6
400d5959:	abfee5        	call8	40081948 <esp_dport_access_reg_read>
400d595c:	20a2a0        	or	a10, a2, a10
400d595f:	0020c0        	memw
400d5962:	06a9      	s32i.n	a10, a6, 0
400d5964:	f03d      	nop.n
400d5966:	f03d      	nop.n
400d5968:	f03d      	nop.n
400d596a:	f03d      	nop.n
400d596c:	e9fc61        	l32r	a6, 400d015c <_flash_cache_start+0x144>
400d596f:	06ad      	mov.n	a10, a6
400d5971:	abfd65        	call8	40081948 <esp_dport_access_reg_read>
400d5974:	302450        	xor	a2, a4, a5
400d5977:	10a2a0        	and	a10, a2, a10
400d597a:	0020c0        	memw
400d597d:	06a9      	s32i.n	a10, a6, 0
400d597f:	f03d      	nop.n
400d5981:	f03d      	nop.n
400d5983:	f03d      	nop.n
400d5985:	f03d      	nop.n
400d5987:	e9fc21        	l32r	a2, 400d0178 <_flash_cache_start+0x160>
400d598a:	02ad      	mov.n	a10, a2
400d598c:	abfba5        	call8	40081948 <esp_dport_access_reg_read>
400d598f:	20a5a0        	or	a10, a5, a10
400d5992:	0020c0        	memw
400d5995:	02a9      	s32i.n	a10, a2, 0
400d5997:	f03d      	nop.n
400d5999:	f03d      	nop.n
400d599b:	f03d      	nop.n
400d599d:	0020f0        	nop
400d59a0:	e9f051        	l32r	a5, 400d0160 <_flash_cache_start+0x148>
400d59a3:	05ad      	mov.n	a10, a5
400d59a5:	abfa25        	call8	40081948 <esp_dport_access_reg_read>
400d59a8:	302430        	xor	a2, a4, a3
400d59ab:	10aa20        	and	a10, a10, a2
400d59ae:	0020c0        	memw
400d59b1:	05a9      	s32i.n	a10, a5, 0
400d59b3:	aa1c      	movi.n	a10, 26
400d59b5:	13a265        	call8	400e93dc <periph_module_enable>
400d59b8:	f01d      	retw.n
	...

400d59bc <esp_crosscore_int_init>:
400d59bc:	004136        	entry	a1, 32
400d59bf:	e9f021        	l32r	a2, 400d0180 <_flash_cache_start+0x168>
400d59c2:	20a220        	or	a10, a2, a2
400d59c5:	b30ca5        	call8	40088a90 <vTaskEnterCritical>
400d59c8:	03eb80        	rsr.prid	a8
400d59cb:	048d80        	extui	a8, a8, 13, 1
400d59ce:	e9ed91        	l32r	a9, 400d0184 <_flash_cache_start+0x16c>
400d59d1:	a08890        	addx4	a8, a8, a9
400d59d4:	090c      	movi.n	a9, 0
400d59d6:	0020c0        	memw
400d59d9:	0899      	s32i.n	a9, a8, 0
400d59db:	02ad      	mov.n	a10, a2
400d59dd:	b31f25        	call8	40088bd0 <vTaskExitCritical>
400d59e0:	03eb20        	rsr.prid	a2
400d59e3:	042d20        	extui	a2, a2, 13, 1
400d59e6:	42dc      	bnez.n	a2, 400d59fe <esp_crosscore_int_init+0x42>
400d59e8:	0e0c      	movi.n	a14, 0
400d59ea:	e9e6d1        	l32r	a13, 400d0184 <_flash_cache_start+0x16c>
400d59ed:	e9e6c1        	l32r	a12, 400d0188 <_flash_cache_start+0x170>
400d59f0:	00a4b2        	movi	a11, 0x400
400d59f3:	8a1c      	movi.n	a10, 24
400d59f5:	007165        	call8	400d610c <esp_intr_alloc>
400d59f8:	000506        	j	400d5a10 <esp_crosscore_int_init+0x54>
400d59fb:	000000        	ill
400d59fe:	00a0e2        	movi	a14, 0
400d5a01:	e9e2d1        	l32r	a13, 400d018c <_flash_cache_start+0x174>
400d5a04:	e9e1c1        	l32r	a12, 400d0188 <_flash_cache_start+0x170>
400d5a07:	00a4b2        	movi	a11, 0x400
400d5a0a:	19a0a2        	movi	a10, 25
400d5a0d:	006fe5        	call8	400d610c <esp_intr_alloc>
400d5a10:	ca8c      	beqz.n	a10, 400d5a20 <esp_crosscore_int_init+0x64>
400d5a12:	e9dfd1        	l32r	a13, 400d0190 <_flash_cache_start+0x178>
400d5a15:	e9dfc1        	l32r	a12, 400d0194 <_flash_cache_start+0x17c>
400d5a18:	db5c      	movi.n	a11, 93
400d5a1a:	e9dfa1        	l32r	a10, 400d0198 <_flash_cache_start+0x180>
400d5a1d:	050ae5        	call8	400daacc <__assert_func>
400d5a20:	f01d      	retw.n
	...

400d5a24 <insert_vector_desc>:
400d5a24:	004136        	entry	a1, 32
400d5a27:	e9dd81        	l32r	a8, 400d019c <_flash_cache_start+0x184>
400d5a2a:	08c8      	l32i.n	a12, a8, 0
400d5a2c:	0c8d      	mov.n	a8, a12
400d5a2e:	0b0c      	movi.n	a11, 0
400d5a30:	000986        	j	400d5a5a <insert_vector_desc+0x36>
400d5a33:	089800        	lsx	f9, a8, a0
400d5a36:	059090        	extui	a9, a9, 16, 1
400d5a39:	02a8      	l32i.n	a10, a2, 0
400d5a3b:	05a0a0        	extui	a10, a10, 16, 1
400d5a3e:	1b2a97        	blt	a10, a9, 400d5a5d <insert_vector_desc+0x39>
400d5a41:	08a8      	l32i.n	a10, a8, 0
400d5a43:	0298      	l32i.n	a9, a2, 0
400d5a45:	309a90        	xor	a9, a10, a9
400d5a48:	0af907        	bbsi	a9, 16, 400d5a56 <insert_vector_desc+0x32>
400d5a4b:	45a1a0        	extui	a10, a10, 17, 5
400d5a4e:	0298      	l32i.n	a9, a2, 0
400d5a50:	459190        	extui	a9, a9, 17, 5
400d5a53:	06aa97        	bge	a10, a9, 400d5a5d <insert_vector_desc+0x39>
400d5a56:	08bd      	mov.n	a11, a8
400d5a58:	2888      	l32i.n	a8, a8, 8
400d5a5a:	fd6856        	bnez	a8, 400d5a34 <insert_vector_desc+0x10>
400d5a5d:	0c8c      	beqz.n	a12, 400d5a61 <insert_vector_desc+0x3d>
400d5a5f:	fbcc      	bnez.n	a11, 400d5a72 <insert_vector_desc+0x4e>
400d5a61:	2289      	s32i.n	a8, a2, 8
400d5a63:	f03d      	nop.n
400d5a65:	f03d      	nop.n
400d5a67:	f03d      	nop.n
400d5a69:	f03d      	nop.n
400d5a6b:	e9cc81        	l32r	a8, 400d019c <_flash_cache_start+0x184>
400d5a6e:	0829      	s32i.n	a2, a8, 0
400d5a70:	f01d      	retw.n
400d5a72:	2b29      	s32i.n	a2, a11, 8
400d5a74:	2289      	s32i.n	a8, a2, 8
400d5a76:	f01d      	retw.n

400d5a78 <find_desc_for_int>:
400d5a78:	004136        	entry	a1, 32
400d5a7b:	e9c881        	l32r	a8, 400d019c <_flash_cache_start+0x184>
400d5a7e:	0888      	l32i.n	a8, a8, 0
400d5a80:	000486        	j	400d5a96 <find_desc_for_int+0x1e>
400d5a83:	089800        	lsx	f9, a8, a0
400d5a86:	059090        	extui	a9, a9, 16, 1
400d5a89:	079937        	bne	a9, a3, 400d5a94 <find_desc_for_int+0x1c>
400d5a8c:	0898      	l32i.n	a9, a8, 0
400d5a8e:	459190        	extui	a9, a9, 17, 5
400d5a91:	041927        	beq	a9, a2, 400d5a99 <find_desc_for_int+0x21>
400d5a94:	2888      	l32i.n	a8, a8, 8
400d5a96:	fea856        	bnez	a8, 400d5a84 <find_desc_for_int+0xc>
400d5a99:	082d      	mov.n	a2, a8
400d5a9b:	f01d      	retw.n
400d5a9d:	000000        	ill

400d5aa0 <int_has_handler>:
400d5aa0:	004136        	entry	a1, 32
400d5aa3:	902230        	addx2	a2, a2, a3
400d5aa6:	e9be31        	l32r	a3, 400d01a0 <_flash_cache_start+0x188>
400d5aa9:	b02230        	addx8	a2, a2, a3
400d5aac:	0228      	l32i.n	a2, a2, 0
400d5aae:	e9bd81        	l32r	a8, 400d01a4 <_flash_cache_start+0x18c>
400d5ab1:	c08280        	sub	a8, a2, a8
400d5ab4:	020c      	movi.n	a2, 0
400d5ab6:	190c      	movi.n	a9, 1
400d5ab8:	932980        	movnez	a2, a9, a8
400d5abb:	f01d      	retw.n
400d5abd:	000000        	ill

400d5ac0 <get_desc_for_int>:
400d5ac0:	004136        	entry	a1, 32
400d5ac3:	20b330        	or	a11, a3, a3
400d5ac6:	02ad      	mov.n	a10, a2
400d5ac8:	fffae5        	call8	400d5a78 <find_desc_for_int>
400d5acb:	063a56        	bnez	a10, 400d5b32 <get_desc_for_int+0x72>
400d5ace:	e9b6b1        	l32r	a11, 400d01a8 <_flash_cache_start+0x190>
400d5ad1:	0ca0a2        	movi	a10, 12
400d5ad4:	ae83e5        	call8	40084314 <heap_caps_malloc>
400d5ad7:	0a4d      	mov.n	a4, a10
400d5ad9:	059a16        	beqz	a10, 400d5b36 <get_desc_for_int+0x76>
400d5adc:	080c      	movi.n	a8, 0
400d5ade:	004a82        	s8i	a8, a10, 0
400d5ae1:	014a82        	s8i	a8, a10, 1
400d5ae4:	024a82        	s8i	a8, a10, 2
400d5ae7:	034a82        	s8i	a8, a10, 3
400d5aea:	044a82        	s8i	a8, a10, 4
400d5aed:	054a82        	s8i	a8, a10, 5
400d5af0:	064a82        	s8i	a8, a10, 6
400d5af3:	074a82        	s8i	a8, a10, 7
400d5af6:	084a82        	s8i	a8, a10, 8
400d5af9:	094a82        	s8i	a8, a10, 9
400d5afc:	0a4a82        	s8i	a8, a10, 10
400d5aff:	0b4a82        	s8i	a8, a10, 11
400d5b02:	0020c0        	memw
400d5b05:	442020        	extui	a2, a2, 0, 5
400d5b08:	0122f0        	slli	a2, a2, 17
400d5b0b:	f03d      	nop.n
400d5b0d:	f03d      	nop.n
400d5b0f:	0a98      	l32i.n	a9, a10, 0
400d5b11:	e9a681        	l32r	a8, 400d01ac <_flash_cache_start+0x194>
400d5b14:	108980        	and	a8, a9, a8
400d5b17:	208820        	or	a8, a8, a2
400d5b1a:	043030        	extui	a3, a3, 0, 1
400d5b1d:	112300        	slli	a2, a3, 16
400d5b20:	e9a431        	l32r	a3, 400d01b0 <_flash_cache_start+0x198>
400d5b23:	103830        	and	a3, a8, a3
400d5b26:	203320        	or	a3, a3, a2
400d5b29:	0a39      	s32i.n	a3, a10, 0
400d5b2b:	ffefa5        	call8	400d5a24 <insert_vector_desc>
400d5b2e:	042d      	mov.n	a2, a4
400d5b30:	f01d      	retw.n
400d5b32:	0a2d      	mov.n	a2, a10
400d5b34:	f01d      	retw.n
400d5b36:	020c      	movi.n	a2, 0
400d5b38:	f01d      	retw.n
	...

400d5b3c <find_desc_for_source>:
400d5b3c:	004136        	entry	a1, 32
400d5b3f:	e99781        	l32r	a8, 400d019c <_flash_cache_start+0x184>
400d5b42:	08a8      	l32i.n	a10, a8, 0
400d5b44:	001586        	j	400d5b9e <find_desc_for_source+0x62>
400d5b47:	1a8200        	sub.s	f8, f2, f0
400d5b4a:	e82700        	lsi	f0, a7, 0x3a0
400d5b4d:	0a8815        	call4	400e03d0 <_vfiprintf_r+0xacc>
400d5b50:	758680        	extui	a8, a8, 22, 8
400d5b53:	238800        	sext	a8, a8, 7
400d5b56:	429287        	bne	a2, a8, 400d5b9c <find_desc_for_source+0x60>
400d5b59:	0a88      	l32i.n	a8, a10, 0
400d5b5b:	058080        	extui	a8, a8, 16, 1
400d5b5e:	3a9387        	bne	a3, a8, 400d5b9c <find_desc_for_source+0x60>
400d5b61:	000f06        	j	400d5ba1 <find_desc_for_source+0x65>
400d5b64:	002a82        	l32i	a8, a10, 0
400d5b67:	058080        	extui	a8, a8, 16, 1
400d5b6a:	2e9837        	bne	a8, a3, 400d5b9c <find_desc_for_source+0x60>
400d5b6d:	012a92        	l32i	a9, a10, 4
400d5b70:	01c956        	bnez	a9, 400d5b90 <find_desc_for_source+0x54>
400d5b73:	e990d1        	l32r	a13, 400d01b4 <_flash_cache_start+0x19c>
400d5b76:	e990c1        	l32r	a12, 400d01b8 <_flash_cache_start+0x1a0>
400d5b79:	f9a0b2        	movi	a11, 249
400d5b7c:	e990a1        	l32r	a10, 400d01bc <_flash_cache_start+0x1a4>
400d5b7f:	04f4e5        	call8	400daacc <__assert_func>
400d5b82:	0988      	l32i.n	a8, a9, 0
400d5b84:	748180        	extui	a8, a8, 1, 8
400d5b87:	238800        	sext	a8, a8, 7
400d5b8a:	0a1827        	beq	a8, a2, 400d5b98 <find_desc_for_source+0x5c>
400d5b8d:	052992        	l32i	a9, a9, 20
400d5b90:	fee956        	bnez	a9, 400d5b82 <find_desc_for_source+0x46>
400d5b93:	080c      	movi.n	a8, 0
400d5b95:	000046        	j	400d5b9a <find_desc_for_source+0x5e>
400d5b98:	180c      	movi.n	a8, 1
400d5b9a:	38cc      	bnez.n	a8, 400d5ba1 <find_desc_for_source+0x65>
400d5b9c:	2aa8      	l32i.n	a10, a10, 8
400d5b9e:	fa6a56        	bnez	a10, 400d5b48 <find_desc_for_source+0xc>
400d5ba1:	0a2d      	mov.n	a2, a10
400d5ba3:	f01d      	retw.n
400d5ba5:	000000        	ill

400d5ba8 <is_vect_desc_usable>:
400d5ba8:	004136        	entry	a1, 32
400d5bab:	0022a2        	l32i	a10, a2, 0
400d5bae:	45a1a0        	extui	a10, a10, 17, 5
400d5bb1:	a08a40        	addx4	a8, a10, a4
400d5bb4:	e98391        	l32r	a9, 400d01c0 <_flash_cache_start+0x1a8>
400d5bb7:	a08890        	addx4	a8, a8, a9
400d5bba:	022882        	l32i	a8, a8, 8
400d5bbd:	021866        	bnei	a8, 1, 400d5bc3 <is_vect_desc_usable+0x1b>
400d5bc0:	002506        	j	400d5c58 <is_vect_desc_usable+0xb0>
400d5bc3:	052866        	bnei	a8, 2, 400d5bcc <is_vect_desc_usable+0x24>
400d5bc6:	020566        	bnei	a5, -1, 400d5bcc <is_vect_desc_usable+0x24>
400d5bc9:	0023c6        	j	400d5c5c <is_vect_desc_usable+0xb4>
400d5bcc:	118ac0        	slli	a8, a10, 4
400d5bcf:	e97c91        	l32r	a9, 400d01c0 <_flash_cache_start+0x1a8>
400d5bd2:	898a      	add.n	a8, a9, a8
400d5bd4:	0888      	l32i.n	a8, a8, 0
400d5bd6:	02d387        	bbs	a3, a8, 400d5bdc <is_vect_desc_usable+0x34>
400d5bd9:	0020c6        	j	400d5c60 <is_vect_desc_usable+0xb8>
400d5bdc:	00a282        	movi	a8, 0x200
400d5bdf:	108380        	and	a8, a3, a8
400d5be2:	b88c      	beqz.n	a8, 400d5bf1 <is_vect_desc_usable+0x49>
400d5be4:	119ac0        	slli	a9, a10, 4
400d5be7:	e97651        	l32r	a5, 400d01c0 <_flash_cache_start+0x1a8>
400d5bea:	959a      	add.n	a9, a5, a9
400d5bec:	1958      	l32i.n	a5, a9, 4
400d5bee:	072516        	beqz	a5, 400d5c64 <is_vect_desc_usable+0xbc>
400d5bf1:	b8cc      	bnez.n	a8, 400d5c00 <is_vect_desc_usable+0x58>
400d5bf3:	115ac0        	slli	a5, a10, 4
400d5bf6:	e97281        	l32r	a8, 400d01c0 <_flash_cache_start+0x1a8>
400d5bf9:	585a      	add.n	a5, a8, a5
400d5bfb:	1558      	l32i.n	a5, a5, 4
400d5bfd:	671526        	beqi	a5, 1, 400d5c68 <is_vect_desc_usable+0xc0>
400d5c00:	001222        	l16ui	a2, a2, 0
400d5c03:	65e207        	bbsi	a2, 0, 400d5c6c <is_vect_desc_usable+0xc4>
400d5c06:	c50c      	movi.n	a5, 12
400d5c08:	105250        	and	a5, a2, a5
400d5c0b:	0ea566        	bnei	a5, 12, 400d5c1d <is_vect_desc_usable+0x75>
400d5c0e:	e96dd1        	l32r	a13, 400d01c4 <_flash_cache_start+0x1ac>
400d5c11:	e96dc1        	l32r	a12, 400d01c8 <_flash_cache_start+0x1b0>
400d5c14:	5aa1b2        	movi	a11, 0x15a
400d5c17:	e969a1        	l32r	a10, 400d01bc <_flash_cache_start+0x1a4>
400d5c1a:	04eb25        	call8	400daacc <__assert_func>
400d5c1d:	4fe237        	bbsi	a2, 3, 400d5c70 <is_vect_desc_usable+0xc8>
400d5c20:	450c      	movi.n	a5, 4
400d5c22:	105250        	and	a5, a2, a5
400d5c25:	05ac      	beqz.n	a5, 400d5c49 <is_vect_desc_usable+0xa1>
400d5c27:	496387        	bbci	a3, 8, 400d5c74 <is_vect_desc_usable+0xcc>
400d5c2a:	00a442        	movi	a4, 0x400
400d5c2d:	103340        	and	a3, a3, a4
400d5c30:	040c      	movi.n	a4, 0
400d5c32:	180c      	movi.n	a8, 1
400d5c34:	934830        	movnez	a4, a8, a3
400d5c37:	743040        	extui	a3, a4, 0, 8
400d5c3a:	042120        	extui	a2, a2, 1, 1
400d5c3d:	75bc      	beqz.n	a5, 400d5c78 <is_vect_desc_usable+0xd0>
400d5c3f:	391327        	beq	a3, a2, 400d5c7c <is_vect_desc_usable+0xd4>
400d5c42:	020c      	movi.n	a2, 0
400d5c44:	f01d      	retw.n
400d5c46:	000000        	ill
400d5c49:	20b440        	or	a11, a4, a4
400d5c4c:	ffe525        	call8	400d5aa0 <int_has_handler>
400d5c4f:	02da16        	beqz	a10, 400d5c80 <is_vect_desc_usable+0xd8>
400d5c52:	00a022        	movi	a2, 0
400d5c55:	f01d      	retw.n
400d5c57:	020c00        	andb	b0, b12, b0
400d5c5a:	f01d      	retw.n
400d5c5c:	020c      	movi.n	a2, 0
400d5c5e:	f01d      	retw.n
400d5c60:	020c      	movi.n	a2, 0
400d5c62:	f01d      	retw.n
400d5c64:	020c      	movi.n	a2, 0
400d5c66:	f01d      	retw.n
400d5c68:	020c      	movi.n	a2, 0
400d5c6a:	f01d      	retw.n
400d5c6c:	020c      	movi.n	a2, 0
400d5c6e:	f01d      	retw.n
400d5c70:	020c      	movi.n	a2, 0
400d5c72:	f01d      	retw.n
400d5c74:	020c      	movi.n	a2, 0
400d5c76:	f01d      	retw.n
400d5c78:	120c      	movi.n	a2, 1
400d5c7a:	f01d      	retw.n
400d5c7c:	120c      	movi.n	a2, 1
400d5c7e:	f01d      	retw.n
400d5c80:	120c      	movi.n	a2, 1
400d5c82:	f01d      	retw.n

400d5c84 <get_available_int>:
400d5c84:	008136        	entry	a1, 64
400d5c87:	060c      	movi.n	a6, 0
400d5c89:	5169      	s32i.n	a6, a1, 20
400d5c8b:	6169      	s32i.n	a6, a1, 24
400d5c8d:	7169      	s32i.n	a6, a1, 28
400d5c8f:	fea062        	movi	a6, 254
400d5c92:	048267        	bany	a2, a6, 400d5c9a <get_available_int+0x16>
400d5c95:	e60c      	movi.n	a6, 14
400d5c97:	202260        	or	a2, a2, a6
400d5c9a:	20b330        	or	a11, a3, a3
400d5c9d:	20a550        	or	a10, a5, a5
400d5ca0:	ffe9a5        	call8	400d5b3c <find_desc_for_source>
400d5ca3:	205aa0        	or	a5, a10, a10
400d5ca6:	6aac      	beqz.n	a10, 400d5cd0 <get_available_int+0x4c>
400d5ca8:	0a0426        	beqi	a4, -1, 400d5cb6 <get_available_int+0x32>
400d5cab:	0a68      	l32i.n	a6, a10, 0
400d5cad:	456160        	extui	a6, a6, 17, 5
400d5cb0:	021467        	beq	a4, a6, 400d5cb6 <get_available_int+0x32>
400d5cb3:	004886        	j	400d5dd9 <get_available_int+0x155>
400d5cb6:	20d440        	or	a13, a4, a4
400d5cb9:	20c330        	or	a12, a3, a3
400d5cbc:	20b220        	or	a11, a2, a2
400d5cbf:	05ad      	mov.n	a10, a5
400d5cc1:	ffee65        	call8	400d5ba8 <is_vect_desc_usable>
400d5cc4:	116a16        	beqz	a10, 400d5dde <get_available_int+0x15a>
400d5cc7:	0578      	l32i.n	a7, a5, 0
400d5cc9:	457170        	extui	a7, a7, 17, 5
400d5ccc:	004586        	j	400d5de6 <get_available_int+0x162>
400d5ccf:	046600        	extui	a6, a0, 6, 1
400d5cd2:	3a8602        	lsi	f0, a6, 232
400d5cd5:	b33000        	movgez	a3, a0, a0
400d5cd8:	a44020        	extui	a4, a2, 0, 11
400d5cdb:	d9a520        	lsi	f2, a5, 0x364
400d5cde:	ff          	.byte 0xff
400d5cdf:	205aa0        	or	a5, a10, a10
400d5ce2:	4adc      	bnez.n	a10, 400d5cfa <get_available_int+0x76>
400d5ce4:	445040        	extui	a5, a4, 0, 5
400d5ce7:	0155f0        	slli	a5, a5, 17
400d5cea:	5178      	l32i.n	a7, a1, 20
400d5cec:	e93061        	l32r	a6, 400d01ac <_flash_cache_start+0x194>
400d5cef:	106760        	and	a6, a7, a6
400d5cf2:	205650        	or	a5, a6, a5
400d5cf5:	5159      	s32i.n	a5, a1, 20
400d5cf7:	14c152        	addi	a5, a1, 20
400d5cfa:	20d440        	or	a13, a4, a4
400d5cfd:	20c330        	or	a12, a3, a3
400d5d00:	20b220        	or	a11, a2, a2
400d5d03:	05ad      	mov.n	a10, a5
400d5d05:	ffea25        	call8	400d5ba8 <is_vect_desc_usable>
400d5d08:	0d8a16        	beqz	a10, 400d5de4 <get_available_int+0x160>
400d5d0b:	0578      	l32i.n	a7, a5, 0
400d5d0d:	457170        	extui	a7, a7, 17, 5
400d5d10:	003486        	j	400d5de6 <get_available_int+0x162>
400d5d13:	03bd00        	lsi	f0, a13, 12
400d5d16:	05ad      	mov.n	a10, a5
400d5d18:	ffd5e5        	call8	400d5a78 <find_desc_for_int>
400d5d1b:	0a6d      	mov.n	a6, a10
400d5d1d:	5adc      	bnez.n	a10, 400d5d36 <get_available_int+0xb2>
400d5d1f:	446050        	extui	a6, a5, 0, 5
400d5d22:	0186f0        	slli	a8, a6, 17
400d5d25:	5198      	l32i.n	a9, a1, 20
400d5d27:	e92161        	l32r	a6, 400d01ac <_flash_cache_start+0x194>
400d5d2a:	106960        	and	a6, a9, a6
400d5d2d:	206680        	or	a6, a6, a8
400d5d30:	056162        	s32i	a6, a1, 20
400d5d33:	14c162        	addi	a6, a1, 20
400d5d36:	20d440        	or	a13, a4, a4
400d5d39:	20c330        	or	a12, a3, a3
400d5d3c:	20b220        	or	a11, a2, a2
400d5d3f:	06ad      	mov.n	a10, a6
400d5d41:	ffe665        	call8	400d5ba8 <is_vect_desc_usable>
400d5d44:	074a16        	beqz	a10, 400d5dbc <get_available_int+0x138>
400d5d47:	526287        	bbci	a2, 8, 400d5d9d <get_available_int+0x119>
400d5d4a:	001682        	l16ui	a8, a6, 0
400d5d4d:	376827        	bbci	a8, 2, 400d5d88 <get_available_int+0x104>
400d5d50:	1668      	l32i.n	a6, a6, 4
400d5d52:	080c      	movi.n	a8, 0
400d5d54:	000146        	j	400d5d5d <get_available_int+0xd9>
400d5d57:	1b0000        	un.s	b0, f0, f0
400d5d5a:	6888      	l32i.n	a8, a8, 24
400d5d5c:	865656        	bnez	a6, 400d55c5 <__deregister_frame+0xd>
400d5d5f:	ff          	.byte 0xff
400d5d60:	3168      	l32i.n	a6, a1, 12
400d5d62:	0e2867        	blt	a8, a6, 400d5d74 <get_available_int+0xf0>
400d5d65:	1165c0        	slli	a6, a5, 4
400d5d68:	e91691        	l32r	a9, 400d01c0 <_flash_cache_start+0x1a8>
400d5d6b:	696a      	add.n	a6, a9, a6
400d5d6d:	0668      	l32i.n	a6, a6, 0
400d5d6f:	2198      	l32i.n	a9, a1, 8
400d5d71:	47a697        	bge	a6, a9, 400d5dbc <get_available_int+0x138>
400d5d74:	1165c0        	slli	a6, a5, 4
400d5d77:	e91271        	l32r	a7, 400d01c0 <_flash_cache_start+0x1a8>
400d5d7a:	676a      	add.n	a6, a7, a6
400d5d7c:	0668      	l32i.n	a6, a6, 0
400d5d7e:	2169      	s32i.n	a6, a1, 8
400d5d80:	3189      	s32i.n	a8, a1, 12
400d5d82:	057d      	mov.n	a7, a5
400d5d84:	000d06        	j	400d5dbc <get_available_int+0x138>
400d5d87:	076600        	lsi	f0, a6, 28
400d5d8a:	65c030        	extui	a12, a3, 16, 7
400d5d8d:	0c8111        	l32r	a1, 40098f94 <_iram_end+0xb440>
400d5d90:	6ae9      	s32i.n	a14, a10, 24
400d5d92:	6868      	l32i.n	a6, a8, 24
400d5d94:	218806        	j	400de3b8 <_svfprintf_r+0x20a0>
400d5d97:	152687        	blt	a6, a8, 400d5db0 <get_available_int+0x12c>
400d5d9a:	000786        	j	400d5dbc <get_available_int+0x138>
400d5d9d:	1165c0        	slli	a6, a5, 4
400d5da0:	e90881        	l32r	a8, 400d01c0 <_flash_cache_start+0x1a8>
400d5da3:	686a      	add.n	a6, a8, a6
400d5da5:	0668      	l32i.n	a6, a6, 0
400d5da7:	2198      	l32i.n	a9, a1, 8
400d5da9:	0b2697        	blt	a6, a9, 400d5db8 <get_available_int+0x134>
400d5dac:	000306        	j	400d5dbc <get_available_int+0x138>
400d5daf:	216900        	srai	a6, a0, 9
400d5db2:	057d      	mov.n	a7, a5
400d5db4:	000106        	j	400d5dbc <get_available_int+0x138>
400d5db7:	216900        	srai	a6, a0, 9
400d5dba:	057d      	mov.n	a7, a5
400d5dbc:	551b      	addi.n	a5, a5, 1
400d5dbe:	000306        	j	400d5dce <get_available_int+0x14a>
400d5dc1:	e8a751        	l32r	a5, 400d0060 <_flash_cache_start+0x48>
400d5dc4:	3159      	s32i.n	a5, a1, 12
400d5dc6:	960c      	movi.n	a6, 9
400d5dc8:	2169      	s32i.n	a6, a1, 8
400d5dca:	f77c      	movi.n	a7, -1
400d5dcc:	050c      	movi.n	a5, 0
400d5dce:	f61c      	movi.n	a6, 31
400d5dd0:	022657        	blt	a6, a5, 400d5dd6 <get_available_int+0x152>
400d5dd3:	ffcf46        	j	400d5d14 <get_available_int+0x90>
400d5dd6:	000306        	j	400d5de6 <get_available_int+0x162>
400d5dd9:	f77c      	movi.n	a7, -1
400d5ddb:	0001c6        	j	400d5de6 <get_available_int+0x162>
400d5dde:	f77c      	movi.n	a7, -1
400d5de0:	000086        	j	400d5de6 <get_available_int+0x162>
400d5de3:	f77c00        	lsi	f0, a12, 0x3dc
400d5de6:	072d      	mov.n	a2, a7
400d5de8:	f01d      	retw.n
	...

400d5dec <esp_intr_alloc_intrstatus>:
400d5dec:	008136        	entry	a1, 64
400d5def:	00a382        	movi	a8, 0x300
400d5df2:	109380        	and	a9, a3, a8
400d5df5:	029987        	bne	a9, a8, 400d5dfb <esp_intr_alloc_intrstatus+0xf>
400d5df8:	00bb06        	j	400d60e8 <esp_intr_alloc_intrstatus+0x2fc>
400d5dfb:	f0a082        	movi	a8, 240
400d5dfe:	020387        	bnone	a3, a8, 400d5e04 <esp_intr_alloc_intrstatus+0x18>
400d5e01:	2e8656        	bnez	a6, 400d60ed <esp_intr_alloc_intrstatus+0x301>
400d5e04:	00a182        	movi	a8, 0x100
400d5e07:	108380        	and	a8, a3, a8
400d5e0a:	f88c      	beqz.n	a8, 400d5e1d <esp_intr_alloc_intrstatus+0x31>
400d5e0c:	0a0c      	movi.n	a10, 0
400d5e0e:	01a092        	movi	a9, 1
400d5e11:	83a960        	moveqz	a10, a9, a6
400d5e14:	059f20        	extui	a9, a2, 31, 1
400d5e17:	209a90        	or	a9, a10, a9
400d5e1a:	2d6956        	bnez	a9, 400d60f4 <esp_intr_alloc_intrstatus+0x308>
400d5e1d:	190c      	movi.n	a9, 1
400d5e1f:	0a0c      	movi.n	a10, 0
400d5e21:	0abd      	mov.n	a11, a10
400d5e23:	93b940        	movnez	a11, a9, a4
400d5e26:	939a50        	movnez	a9, a10, a5
400d5e29:	0209b7        	bnone	a9, a11, 400d5e2f <esp_intr_alloc_intrstatus+0x43>
400d5e2c:	00b246        	j	400d60f9 <esp_intr_alloc_intrstatus+0x30d>
400d5e2f:	0d63a7        	bbci	a3, 10, 400d5e40 <esp_intr_alloc_intrstatus+0x54>
400d5e32:	e8e691        	l32r	a9, 400d01cc <_flash_cache_start+0x1b4>
400d5e35:	969a      	add.n	a9, a6, a9
400d5e37:	e8e6a1        	l32r	a10, 400d01d0 <_flash_cache_start+0x1b8>
400d5e3a:	023a97        	bltu	a10, a9, 400d5e40 <esp_intr_alloc_intrstatus+0x54>
400d5e3d:	00afc6        	j	400d6100 <esp_intr_alloc_intrstatus+0x314>
400d5e40:	fea092        	movi	a9, 254
400d5e43:	0e8397        	bany	a3, a9, 400d5e55 <esp_intr_alloc_intrstatus+0x69>
400d5e46:	688c      	beqz.n	a8, 400d5e50 <esp_intr_alloc_intrstatus+0x64>
400d5e48:	280c      	movi.n	a8, 2
400d5e4a:	203380        	or	a3, a3, a8
400d5e4d:	000106        	j	400d5e55 <esp_intr_alloc_intrstatus+0x69>
400d5e50:	e80c      	movi.n	a8, 14
400d5e52:	203380        	or	a3, a3, a8
400d5e55:	070226        	beqi	a2, -1, 400d5e60 <esp_intr_alloc_intrstatus+0x74>
400d5e58:	f87c      	movi.n	a8, -1
400d5e5a:	3189      	s32i.n	a8, a1, 12
400d5e5c:	000106        	j	400d5e64 <esp_intr_alloc_intrstatus+0x78>
400d5e5f:	680c00        	lsi	f0, a12, 0x1a0
400d5e62:	3189      	s32i.n	a8, a1, 12
400d5e64:	e87c      	movi.n	a8, -2
400d5e66:	039287        	bne	a2, a8, 400d5e6d <esp_intr_alloc_intrstatus+0x81>
400d5e69:	f80c      	movi.n	a8, 15
400d5e6b:	3189      	s32i.n	a8, a1, 12
400d5e6d:	d87c      	movi.n	a8, -3
400d5e6f:	039287        	bne	a2, a8, 400d5e76 <esp_intr_alloc_intrstatus+0x8a>
400d5e72:	081c      	movi.n	a8, 16
400d5e74:	3189      	s32i.n	a8, a1, 12
400d5e76:	c87c      	movi.n	a8, -4
400d5e78:	049287        	bne	a2, a8, 400d5e80 <esp_intr_alloc_intrstatus+0x94>
400d5e7b:	780c      	movi.n	a8, 7
400d5e7d:	036182        	s32i	a8, a1, 12
400d5e80:	b87c      	movi.n	a8, -5
400d5e82:	039287        	bne	a2, a8, 400d5e89 <esp_intr_alloc_intrstatus+0x9d>
400d5e85:	d81c      	movi.n	a8, 29
400d5e87:	3189      	s32i.n	a8, a1, 12
400d5e89:	a87c      	movi.n	a8, -6
400d5e8b:	039287        	bne	a2, a8, 400d5e92 <esp_intr_alloc_intrstatus+0xa6>
400d5e8e:	b80c      	movi.n	a8, 11
400d5e90:	3189      	s32i.n	a8, a1, 12
400d5e92:	f03d      	nop.n
400d5e94:	f03d      	nop.n
400d5e96:	f03d      	nop.n
400d5e98:	f03d      	nop.n
400d5e9a:	e8c3b1        	l32r	a11, 400d01a8 <_flash_cache_start+0x190>
400d5e9d:	08a0a2        	movi	a10, 8
400d5ea0:	ae4725        	call8	40084314 <heap_caps_malloc>
400d5ea3:	41a9      	s32i.n	a10, a1, 16
400d5ea5:	25ca16        	beqz	a10, 400d6105 <esp_intr_alloc_intrstatus+0x319>
400d5ea8:	f03d      	nop.n
400d5eaa:	f03d      	nop.n
400d5eac:	f03d      	nop.n
400d5eae:	f03d      	nop.n
400d5eb0:	e8c9a1        	l32r	a10, 400d01d4 <_flash_cache_start+0x1bc>
400d5eb3:	b2bde5        	call8	40088a90 <vTaskEnterCritical>
400d5eb6:	03eb80        	rsr.prid	a8
400d5eb9:	048d80        	extui	a8, a8, 13, 1
400d5ebc:	6189      	s32i.n	a8, a1, 24
400d5ebe:	02dd      	mov.n	a13, a2
400d5ec0:	f03d      	nop.n
400d5ec2:	f03d      	nop.n
400d5ec4:	f03d      	nop.n
400d5ec6:	31c8      	l32i.n	a12, a1, 12
400d5ec8:	08bd      	mov.n	a11, a8
400d5eca:	03ad      	mov.n	a10, a3
400d5ecc:	ffdb65        	call8	400d5c84 <get_available_int>
400d5ecf:	51a9      	s32i.n	a10, a1, 20
400d5ed1:	1b0a66        	bnei	a10, -1, 400d5ef0 <esp_intr_alloc_intrstatus+0x104>
400d5ed4:	f03d      	nop.n
400d5ed6:	f03d      	nop.n
400d5ed8:	f03d      	nop.n
400d5eda:	f03d      	nop.n
400d5edc:	e8bea1        	l32r	a10, 400d01d4 <_flash_cache_start+0x1bc>
400d5edf:	b2cf25        	call8	40088bd0 <vTaskExitCritical>
400d5ee2:	41a8      	l32i.n	a10, a1, 16
400d5ee4:	e86a81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d5ee7:	0008e0        	callx8	a8
400d5eea:	05a122        	movi	a2, 0x105
400d5eed:	f01d      	retw.n
400d5eef:	21b200        	srai	a11, a0, 2
400d5ef2:	21a206        	j	400de57e <_svfprintf_r+0x2266>
400d5ef5:	bca505        	call0	40092948 <_iram_end+0x4df4>
400d5ef8:	ff          	.byte 0xff
400d5ef9:	31a9      	s32i.n	a10, a1, 12
400d5efb:	aadc      	bnez.n	a10, 400d5f19 <esp_intr_alloc_intrstatus+0x12d>
400d5efd:	f03d      	nop.n
400d5eff:	f03d      	nop.n
400d5f01:	f03d      	nop.n
400d5f03:	0020f0        	nop
400d5f06:	e8b3a1        	l32r	a10, 400d01d4 <_flash_cache_start+0x1bc>
400d5f09:	b2cc65        	call8	40088bd0 <vTaskExitCritical>
400d5f0c:	41a8      	l32i.n	a10, a1, 16
400d5f0e:	e85f81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d5f11:	0008e0        	callx8	a8
400d5f14:	01a122        	movi	a2, 0x101
400d5f17:	f01d      	retw.n
400d5f19:	02e387        	bbsi	a3, 8, 400d5f1f <esp_intr_alloc_intrstatus+0x133>
400d5f1c:	002906        	j	400d5fc4 <esp_intr_alloc_intrstatus+0x1d8>
400d5f1f:	8a1c      	movi.n	a10, 24
400d5f21:	e87081        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d5f24:	0008e0        	callx8	a8
400d5f27:	71a9      	s32i.n	a10, a1, 28
400d5f29:	9adc      	bnez.n	a10, 400d5f46 <esp_intr_alloc_intrstatus+0x15a>
400d5f2b:	f03d      	nop.n
400d5f2d:	f03d      	nop.n
400d5f2f:	f03d      	nop.n
400d5f31:	f03d      	nop.n
400d5f33:	e8a8a1        	l32r	a10, 400d01d4 <_flash_cache_start+0x1bc>
400d5f36:	b2c9a5        	call8	40088bd0 <vTaskExitCritical>
400d5f39:	41a8      	l32i.n	a10, a1, 16
400d5f3b:	e85481        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d5f3e:	0008e0        	callx8	a8
400d5f41:	01a122        	movi	a2, 0x101
400d5f44:	f01d      	retw.n
400d5f46:	18a0c2        	movi	a12, 24
400d5f49:	00a0b2        	movi	a11, 0
400d5f4c:	0721a2        	l32i	a10, a1, 28
400d5f4f:	e84781        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d5f52:	0008e0        	callx8	a8
400d5f55:	7188      	l32i.n	a8, a1, 28
400d5f57:	1849      	s32i.n	a4, a8, 4
400d5f59:	2859      	s32i.n	a5, a8, 8
400d5f5b:	3869      	s32i.n	a6, a8, 12
400d5f5d:	4879      	s32i.n	a7, a8, 16
400d5f5f:	f03d      	nop.n
400d5f61:	f03d      	nop.n
400d5f63:	f03d      	nop.n
400d5f65:	f03d      	nop.n
400d5f67:	3158      	l32i.n	a5, a1, 12
400d5f69:	1548      	l32i.n	a4, a5, 4
400d5f6b:	5849      	s32i.n	a4, a8, 20
400d5f6d:	744020        	extui	a4, a2, 0, 8
400d5f70:	1144f0        	slli	a4, a4, 1
400d5f73:	f03d      	nop.n
400d5f75:	f03d      	nop.n
400d5f77:	001862        	l16ui	a6, a8, 0
400d5f7a:	01ae52        	movi	a5, 0xfffffe01
400d5f7d:	105650        	and	a5, a6, a5
400d5f80:	204540        	or	a4, a5, a4
400d5f83:	e57c      	movi.n	a5, -2
400d5f85:	104450        	and	a4, a4, a5
400d5f88:	005842        	s16i	a4, a8, 0
400d5f8b:	0020c0        	memw
400d5f8e:	f03d      	nop.n
400d5f90:	f03d      	nop.n
400d5f92:	f03d      	nop.n
400d5f94:	f03d      	nop.n
400d5f96:	3168      	l32i.n	a6, a1, 12
400d5f98:	1689      	s32i.n	a8, a6, 4
400d5f9a:	f03d      	nop.n
400d5f9c:	f03d      	nop.n
400d5f9e:	f03d      	nop.n
400d5fa0:	f03d      	nop.n
400d5fa2:	001652        	l16ui	a5, a6, 0
400d5fa5:	440c      	movi.n	a4, 4
400d5fa7:	204540        	or	a4, a5, a4
400d5faa:	005642        	s16i	a4, a6, 0
400d5fad:	0020c0        	memw
400d5fb0:	06cd      	mov.n	a12, a6
400d5fb2:	f03d      	nop.n
400d5fb4:	f03d      	nop.n
400d5fb6:	f03d      	nop.n
400d5fb8:	e888b1        	l32r	a11, 400d01d8 <_flash_cache_start+0x1c0>
400d5fbb:	51a8      	l32i.n	a10, a1, 20
400d5fbd:	b14aa5        	call8	40087468 <xt_set_interrupt_handler>
400d5fc0:	001006        	j	400d6004 <esp_intr_alloc_intrstatus+0x218>
400d5fc3:	840c00        	extui	a0, a0, 12, 9
400d5fc6:	3158      	l32i.n	a5, a1, 12
400d5fc8:	005542        	s16i	a4, a5, 0
400d5fcb:	0020c0        	memw
400d5fce:	b68c      	beqz.n	a6, 400d5fdd <esp_intr_alloc_intrstatus+0x1f1>
400d5fd0:	07cd      	mov.n	a12, a7
400d5fd2:	06bd      	mov.n	a11, a6
400d5fd4:	f03d      	nop.n
400d5fd6:	f03d      	nop.n
400d5fd8:	51a8      	l32i.n	a10, a1, 20
400d5fda:	b148e5        	call8	40087468 <xt_set_interrupt_handler>
400d5fdd:	0c6397        	bbci	a3, 9, 400d5fed <esp_intr_alloc_intrstatus+0x201>
400d5fe0:	1a0c      	movi.n	a10, 1
400d5fe2:	5168      	l32i.n	a6, a1, 20
400d5fe4:	401600        	ssl	a6
400d5fe7:	a1aa00        	sll	a10, a10
400d5fea:	b70325        	call8	4008d01c <xthal_set_intclear>
400d5fed:	744020        	extui	a4, a2, 0, 8
400d5ff0:	0144a0        	slli	a4, a4, 22
400d5ff3:	3158      	l32i.n	a5, a1, 12
400d5ff5:	0568      	l32i.n	a6, a5, 0
400d5ff7:	e87951        	l32r	a5, 400d01dc <_flash_cache_start+0x1c4>
400d5ffa:	105650        	and	a5, a6, a5
400d5ffd:	204540        	or	a4, a5, a4
400d6000:	3168      	l32i.n	a6, a1, 12
400d6002:	0649      	s32i.n	a4, a6, 0
400d6004:	4263a7        	bbci	a3, 10, 400d604a <esp_intr_alloc_intrstatus+0x25e>
400d6007:	f03d      	nop.n
400d6009:	f03d      	nop.n
400d600b:	f03d      	nop.n
400d600d:	f03d      	nop.n
400d600f:	3148      	l32i.n	a4, a1, 12
400d6011:	001452        	l16ui	a5, a4, 0
400d6014:	240c      	movi.n	a4, 2
400d6016:	204540        	or	a4, a5, a4
400d6019:	3158      	l32i.n	a5, a1, 12
400d601b:	005542        	s16i	a4, a5, 0
400d601e:	0020c0        	memw
400d6021:	140c      	movi.n	a4, 1
400d6023:	f03d      	nop.n
400d6025:	f03d      	nop.n
400d6027:	f03d      	nop.n
400d6029:	5168      	l32i.n	a6, a1, 20
400d602b:	401600        	ssl	a6
400d602e:	a14400        	sll	a4, a4
400d6031:	f57c      	movi.n	a5, -1
400d6033:	304540        	xor	a4, a5, a4
400d6036:	e86a51        	l32r	a5, 400d01e0 <_flash_cache_start+0x1c8>
400d6039:	6168      	l32i.n	a6, a1, 24
400d603b:	a05650        	addx4	a5, a6, a5
400d603e:	0568      	l32i.n	a6, a5, 0
400d6040:	104640        	and	a4, a6, a4
400d6043:	0549      	s32i.n	a4, a5, 0
400d6045:	000c86        	j	400d607b <esp_intr_alloc_intrstatus+0x28f>
400d6048:	480000        	ssx	f0, a0, a0
400d604b:	145231        	l32r	a3, 4009b194 <_iram_end+0xd640>
400d604e:	d47c00        	extui	a7, a0, 12, 14
400d6051:	104540        	and	a4, a5, a4
400d6054:	3158      	l32i.n	a5, a1, 12
400d6056:	005542        	s16i	a4, a5, 0
400d6059:	0020c0        	memw
400d605c:	140c      	movi.n	a4, 1
400d605e:	f03d      	nop.n
400d6060:	f03d      	nop.n
400d6062:	f03d      	nop.n
400d6064:	5168      	l32i.n	a6, a1, 20
400d6066:	401600        	ssl	a6
400d6069:	a14400        	sll	a4, a4
400d606c:	e85d51        	l32r	a5, 400d01e0 <_flash_cache_start+0x1c8>
400d606f:	6168      	l32i.n	a6, a1, 24
400d6071:	a05650        	addx4	a5, a6, a5
400d6074:	0568      	l32i.n	a6, a5, 0
400d6076:	204640        	or	a4, a6, a4
400d6079:	0549      	s32i.n	a4, a5, 0
400d607b:	013296        	bltz	a2, 400d6092 <esp_intr_alloc_intrstatus+0x2a6>
400d607e:	f03d      	nop.n
400d6080:	f03d      	nop.n
400d6082:	f03d      	nop.n
400d6084:	f03d      	nop.n
400d6086:	51c8      	l32i.n	a12, a1, 20
400d6088:	02bd      	mov.n	a11, a2
400d608a:	61a8      	l32i.n	a10, a1, 24
400d608c:	e82281        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d608f:	0008e0        	callx8	a8
400d6092:	032142        	l32i	a4, a1, 12
400d6095:	042122        	l32i	a2, a1, 16
400d6098:	0249      	s32i.n	a4, a2, 0
400d609a:	f03d      	nop.n
400d609c:	f03d      	nop.n
400d609e:	f03d      	nop.n
400d60a0:	f03d      	nop.n
400d60a2:	1428      	l32i.n	a2, a4, 4
400d60a4:	4158      	l32i.n	a5, a1, 16
400d60a6:	1529      	s32i.n	a2, a5, 4
400d60a8:	1a0c      	movi.n	a10, 1
400d60aa:	f03d      	nop.n
400d60ac:	f03d      	nop.n
400d60ae:	f03d      	nop.n
400d60b0:	052162        	l32i	a6, a1, 20
400d60b3:	401600        	ssl	a6
400d60b6:	a1aa00        	sll	a10, a10
400d60b9:	b42725        	call8	4008a32c <xt_ints_on>
400d60bc:	0463b7        	bbci	a3, 11, 400d60c4 <esp_intr_alloc_intrstatus+0x2d8>
400d60bf:	41a8      	l32i.n	a10, a1, 16
400d60c1:	ab2965        	call8	40081358 <esp_intr_disable>
400d60c4:	e844a1        	l32r	a10, 400d01d4 <_flash_cache_start+0x1bc>
400d60c7:	b2b0a5        	call8	40088bd0 <vTaskExitCritical>
400d60ca:	102182        	l32i	a8, a1, 64
400d60cd:	009816        	beqz	a8, 400d60da <esp_intr_alloc_intrstatus+0x2ee>
400d60d0:	042122        	l32i	a2, a1, 16
400d60d3:	006822        	s32i	a2, a8, 0
400d60d6:	020c      	movi.n	a2, 0
400d60d8:	f01d      	retw.n
400d60da:	41a8      	l32i.n	a10, a1, 16
400d60dc:	e7ec81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d60df:	0008e0        	callx8	a8
400d60e2:	020c      	movi.n	a2, 0
400d60e4:	f01d      	retw.n
400d60e6:	220000        	orb	b0, b0, b0
400d60e9:	1d02a1        	l32r	a10, 4009d4f4 <_iram_end+0xf9a0>
400d60ec:	a122f0        	lsi	f15, a2, 0x284
400d60ef:	f01d02        	l16ui	a0, a13, 0x1e0
400d60f2:	220000        	orb	b0, b0, b0
400d60f5:	1d02a1        	l32r	a10, 4009d500 <_iram_end+0xf9ac>
400d60f8:	a122f0        	lsi	f15, a2, 0x284
400d60fb:	f01d02        	l16ui	a0, a13, 0x1e0
400d60fe:	220000        	orb	b0, b0, b0
400d6101:	1d02a1        	l32r	a10, 4009d50c <_iram_end+0xf9b8>
400d6104:	a122f0        	lsi	f15, a2, 0x284
400d6107:	f01d01        	l32r	a0, 400d217c <std::allocator<float>::~allocator()+0x8>
	...

400d610c <esp_intr_alloc>:
400d610c:	006136        	entry	a1, 48
400d610f:	0169      	s32i.n	a6, a1, 0
400d6111:	05fd      	mov.n	a15, a5
400d6113:	04ed      	mov.n	a14, a4
400d6115:	0d0c      	movi.n	a13, 0
400d6117:	0dcd      	mov.n	a12, a13
400d6119:	03bd      	mov.n	a11, a3
400d611b:	02ad      	mov.n	a10, a2
400d611d:	ffcce5        	call8	400d5dec <esp_intr_alloc_intrstatus>
400d6120:	0a2d      	mov.n	a2, a10
400d6122:	f01d      	retw.n

400d6124 <esp_int_wdt_init>:
400d6124:	004136        	entry	a1, 32
400d6127:	09a0a2        	movi	a10, 9
400d612a:	132b25        	call8	400e93dc <periph_module_enable>
400d612d:	e82d81        	l32r	a8, 400d01e4 <_flash_cache_start+0x1cc>
400d6130:	e82e91        	l32r	a9, 400d01e8 <_flash_cache_start+0x1d0>
400d6133:	0020c0        	memw
400d6136:	196892        	s32i	a9, a8, 100
400d6139:	f03d      	nop.n
400d613b:	f03d      	nop.n
400d613d:	f03d      	nop.n
400d613f:	f03d      	nop.n
400d6141:	0020c0        	memw
400d6144:	1228a2        	l32i	a10, a8, 72
400d6147:	e82991        	l32r	a9, 400d01ec <_flash_cache_start+0x1d4>
400d614a:	209a90        	or	a9, a10, a9
400d614d:	0020c0        	memw
400d6150:	126892        	s32i	a9, a8, 72
400d6153:	f03d      	nop.n
400d6155:	f03d      	nop.n
400d6157:	f03d      	nop.n
400d6159:	f03d      	nop.n
400d615b:	0020c0        	memw
400d615e:	1228a2        	l32i	a10, a8, 72
400d6161:	e82391        	l32r	a9, 400d01f0 <_flash_cache_start+0x1d8>
400d6164:	209a90        	or	a9, a10, a9
400d6167:	0020c0        	memw
400d616a:	126892        	s32i	a9, a8, 72
400d616d:	f03d      	nop.n
400d616f:	f03d      	nop.n
400d6171:	f03d      	nop.n
400d6173:	f03d      	nop.n
400d6175:	0020c0        	memw
400d6178:	1228a2        	l32i	a10, a8, 72
400d617b:	e7fc91        	l32r	a9, 400d016c <_flash_cache_start+0x154>
400d617e:	209a90        	or	a9, a10, a9
400d6181:	0020c0        	memw
400d6184:	126892        	s32i	a9, a8, 72
400d6187:	f03d      	nop.n
400d6189:	f03d      	nop.n
400d618b:	f03d      	nop.n
400d618d:	f03d      	nop.n
400d618f:	0020c0        	memw
400d6192:	1228a2        	l32i	a10, a8, 72
400d6195:	e81791        	l32r	a9, 400d01f4 <_flash_cache_start+0x1dc>
400d6198:	10aa90        	and	a10, a10, a9
400d619b:	e7d891        	l32r	a9, 400d00fc <_flash_cache_start+0xe4>
400d619e:	209a90        	or	a9, a10, a9
400d61a1:	0020c0        	memw
400d61a4:	126892        	s32i	a9, a8, 72
400d61a7:	f03d      	nop.n
400d61a9:	f03d      	nop.n
400d61ab:	f03d      	nop.n
400d61ad:	f03d      	nop.n
400d61af:	0020c0        	memw
400d61b2:	1228a2        	l32i	a10, a8, 72
400d61b5:	e81091        	l32r	a9, 400d01f8 <_flash_cache_start+0x1e0>
400d61b8:	209a90        	or	a9, a10, a9
400d61bb:	0020c0        	memw
400d61be:	126892        	s32i	a9, a8, 72
400d61c1:	f03d      	nop.n
400d61c3:	f03d      	nop.n
400d61c5:	f03d      	nop.n
400d61c7:	f03d      	nop.n
400d61c9:	0020c0        	memw
400d61cc:	1328a2        	l32i	a10, a8, 76
400d61cf:	f4a0a0        	extui	a10, a10, 0, 16
400d61d2:	e80a91        	l32r	a9, 400d01fc <_flash_cache_start+0x1e4>
400d61d5:	209a90        	or	a9, a10, a9
400d61d8:	0020c0        	memw
400d61db:	136892        	s32i	a9, a8, 76
400d61de:	f03d      	nop.n
400d61e0:	f03d      	nop.n
400d61e2:	f03d      	nop.n
400d61e4:	f03d      	nop.n
400d61e6:	e80691        	l32r	a9, 400d0200 <_flash_cache_start+0x1e8>
400d61e9:	0020c0        	memw
400d61ec:	146892        	s32i	a9, a8, 80
400d61ef:	0020c0        	memw
400d61f2:	156892        	s32i	a9, a8, 84
400d61f5:	f03d      	nop.n
400d61f7:	f03d      	nop.n
400d61f9:	f03d      	nop.n
400d61fb:	f03d      	nop.n
400d61fd:	0020c0        	memw
400d6200:	1228a2        	l32i	a10, a8, 72
400d6203:	e79e91        	l32r	a9, 400d007c <_flash_cache_start+0x64>
400d6206:	209a90        	or	a9, a10, a9
400d6209:	0020c0        	memw
400d620c:	126892        	s32i	a9, a8, 72
400d620f:	01a0a2        	movi	a10, 1
400d6212:	0020c0        	memw
400d6215:	1868a2        	s32i	a10, a8, 96
400d6218:	00a092        	movi	a9, 0
400d621b:	0020c0        	memw
400d621e:	196892        	s32i	a9, a8, 100
400d6221:	f03d      	nop.n
400d6223:	f03d      	nop.n
400d6225:	f03d      	nop.n
400d6227:	f03d      	nop.n
400d6229:	0020c0        	memw
400d622c:	2928c2        	l32i	a12, a8, 164
400d622f:	4b0c      	movi.n	a11, 4
400d6231:	209cb0        	or	a9, a12, a11
400d6234:	0020c0        	memw
400d6237:	296892        	s32i	a9, a8, 164
400d623a:	131ee5        	call8	400e9428 <timer_group_intr_enable>
400d623d:	f01d      	retw.n
	...

400d6240 <esp_int_wdt_cpu_init>:
400d6240:	004136        	entry	a1, 32
400d6243:	03ebb0        	rsr.prid	a11
400d6246:	04bdb0        	extui	a11, a11, 13, 1
400d6249:	e7eea1        	l32r	a10, 400d0204 <_flash_cache_start+0x1ec>
400d624c:	00bc65        	call8	400d6e14 <esp_register_freertos_tick_hook_for_cpu>
400d624f:	e7ee21        	l32r	a2, 400d0208 <_flash_cache_start+0x1f0>
400d6252:	20a220        	or	a10, a2, a2
400d6255:	b40ee5        	call8	4008a344 <xt_ints_off>
400d6258:	03eba0        	rsr.prid	a10
400d625b:	04ada0        	extui	a10, a10, 13, 1
400d625e:	8c1c      	movi.n	a12, 24
400d6260:	4b1c      	movi.n	a11, 20
400d6262:	e7ac81        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d6265:	0008e0        	callx8	a8
400d6268:	02ad      	mov.n	a10, a2
400d626a:	b40c25        	call8	4008a32c <xt_ints_on>
400d626d:	f01d      	retw.n
	...

400d6270 <esp_err_to_name>:
400d6270:	004136        	entry	a1, 32
400d6273:	080c      	movi.n	a8, 0
400d6275:	000586        	j	400d628f <esp_err_to_name+0x1f>
400d6278:	e7e691        	l32r	a9, 400d0210 <_flash_cache_start+0x1f8>
400d627b:	b09890        	addx8	a9, a8, a9
400d627e:	0998      	l32i.n	a9, a9, 0
400d6280:	099927        	bne	a9, a2, 400d628d <esp_err_to_name+0x1d>
400d6283:	e7e321        	l32r	a2, 400d0210 <_flash_cache_start+0x1f8>
400d6286:	b08820        	addx8	a8, a8, a2
400d6289:	1828      	l32i.n	a2, a8, 4
400d628b:	f01d      	retw.n
400d628d:	881b      	addi.n	a8, a8, 1
400d628f:	86a092        	movi	a9, 134
400d6292:	e2b987        	bgeu	a9, a8, 400d6278 <esp_err_to_name+0x8>
400d6295:	e7dd21        	l32r	a2, 400d020c <_flash_cache_start+0x1f4>
400d6298:	f01d      	retw.n
	...

400d629c <__esp_stack_guard_setup>:
400d629c:	004136        	entry	a1, 32
400d629f:	aab8e5        	call8	40080e2c <esp_random>
400d62a2:	e77881        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400d62a5:	08a9      	s32i.n	a10, a8, 0
400d62a7:	f01d      	retw.n
400d62a9:	000000        	ill

400d62ac <__stack_chk_fail>:
400d62ac:	004136        	entry	a1, 32
400d62af:	e7d9a1        	l32r	a10, 400d0214 <_flash_cache_start+0x1fc>
400d62b2:	e7d981        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d62b5:	0008e0        	callx8	a8
400d62b8:	b50b25        	call8	4008b36c <abort>
	...

400d62bc <timer_process_alarm>:
400d62bc:	004136        	entry	a1, 32
400d62bf:	ffafb2        	movi	a11, -1
400d62c2:	e7d621        	l32r	a2, 400d021c <_flash_cache_start+0x204>
400d62c5:	02a8      	l32i.n	a10, a2, 0
400d62c7:	b1a025        	call8	40087cc8 <xQueueTakeMutexRecursive>
400d62ca:	ab29e5        	call8	40081568 <timer_list_lock>
400d62cd:	abcf65        	call8	40081fc4 <esp_timer_impl_get_time>
400d62d0:	e7d421        	l32r	a2, 400d0220 <_flash_cache_start+0x208>
400d62d3:	0228      	l32i.n	a2, a2, 0
400d62d5:	001a46        	j	400d6342 <timer_process_alarm+0x86>
400d62d8:	6288      	l32i.n	a8, a2, 24
400d62da:	288c      	beqz.n	a8, 400d62e0 <timer_process_alarm+0x24>
400d62dc:	7298      	l32i.n	a9, a2, 28
400d62de:	7899      	s32i.n	a9, a8, 28
400d62e0:	f03d      	nop.n
400d62e2:	f03d      	nop.n
400d62e4:	f03d      	nop.n
400d62e6:	f03d      	nop.n
400d62e8:	7288      	l32i.n	a8, a2, 28
400d62ea:	6298      	l32i.n	a9, a2, 24
400d62ec:	0899      	s32i.n	a9, a8, 0
400d62ee:	f03d      	nop.n
400d62f0:	f03d      	nop.n
400d62f2:	f03d      	nop.n
400d62f4:	f03d      	nop.n
400d62f6:	2288      	l32i.n	a8, a2, 8
400d62f8:	3298      	l32i.n	a9, a2, 12
400d62fa:	20a890        	or	a10, a8, a9
400d62fd:	0aac      	beqz.n	a10, 400d6321 <timer_process_alarm+0x65>
400d62ff:	02b8      	l32i.n	a11, a2, 0
400d6301:	12c8      	l32i.n	a12, a2, 4
400d6303:	8b8a      	add.n	a8, a11, a8
400d6305:	1a0c      	movi.n	a10, 1
400d6307:	0138b7        	bltu	a8, a11, 400d630c <timer_process_alarm+0x50>
400d630a:	0a0c      	movi.n	a10, 0
400d630c:	809c90        	add	a9, a12, a9
400d630f:	80aa90        	add	a10, a10, a9
400d6312:	006282        	s32i	a8, a2, 0
400d6315:	12a9      	s32i.n	a10, a2, 4
400d6317:	02ad      	mov.n	a10, a2
400d6319:	ab2665        	call8	40081580 <timer_insert>
400d631c:	000346        	j	400d632d <timer_process_alarm+0x71>
400d631f:	810000        	src	a0, a0, a0
400d6322:	4e          	.byte 0x4e
400d6323:	4e91e7        	bne	a1, a14, 400d6375 <timer_task+0x1>
400d6326:	6282e7        	bany	a2, a14, 400d638c <timer_task+0x18>
400d6329:	629200        	lsi	f0, a2, 0x188
400d632c:	246501        	l32r	a0, 4009f4c0 <_iram_end+0x1196c>
400d632f:	88ab      	addi.n	a8, a8, 10
400d6331:	52a842        	movi	a4, 0xfffff852
400d6334:	0008e0        	callx8	a8
400d6337:	ab2325        	call8	40081568 <timer_list_lock>
400d633a:	abc8a5        	call8	40081fc4 <esp_timer_impl_get_time>
400d633d:	e7b821        	l32r	a2, 400d0220 <_flash_cache_start+0x208>
400d6340:	0228      	l32i.n	a2, a2, 0
400d6342:	e28c      	beqz.n	a2, 400d6354 <timer_process_alarm+0x98>
400d6344:	0298      	l32i.n	a9, a2, 0
400d6346:	1288      	l32i.n	a8, a2, 4
400d6348:	8c38b7        	bltu	a8, a11, 400d62d8 <timer_process_alarm+0x1c>
400d634b:	059b87        	bne	a11, a8, 400d6354 <timer_process_alarm+0x98>
400d634e:	02b9a7        	bgeu	a9, a10, 400d6354 <timer_process_alarm+0x98>
400d6351:	ffe0c6        	j	400d62d8 <timer_process_alarm+0x1c>
400d6354:	e7b321        	l32r	a2, 400d0220 <_flash_cache_start+0x208>
400d6357:	002222        	l32i	a2, a2, 0
400d635a:	007216        	beqz	a2, 400d6365 <timer_process_alarm+0xa9>
400d635d:	0022a2        	l32i	a10, a2, 0
400d6360:	12b8      	l32i.n	a11, a2, 4
400d6362:	abdd25        	call8	40082134 <esp_timer_impl_set_alarm>
400d6365:	ab20e5        	call8	40081574 <timer_list_unlock>
400d6368:	e7ad21        	l32r	a2, 400d021c <_flash_cache_start+0x204>
400d636b:	0022a2        	l32i	a10, a2, 0
400d636e:	b16165        	call8	40087984 <xQueueGiveMutexRecursive>
400d6371:	000090        	retw

400d6374 <timer_task>:
400d6374:	004136        	entry	a1, 32
400d6377:	00a0d2        	movi	a13, 0
400d637a:	ffafc2        	movi	a12, -1
400d637d:	0dbd      	mov.n	a11, a13
400d637f:	e7a981        	l32r	a8, 400d0224 <_flash_cache_start+0x20c>
400d6382:	08a8      	l32i.n	a10, a8, 0
400d6384:	b17de5        	call8	40087b64 <xQueueGenericReceive>
400d6387:	0e1a26        	beqi	a10, 1, 400d6399 <timer_task+0x25>
400d638a:	e7a7d1        	l32r	a13, 400d0228 <_flash_cache_start+0x210>
400d638d:	e7a7c1        	l32r	a12, 400d022c <_flash_cache_start+0x214>
400d6390:	3da1b2        	movi	a11, 0x13d
400d6393:	e7a7a1        	l32r	a10, 400d0230 <_flash_cache_start+0x218>
400d6396:	047365        	call8	400daacc <__assert_func>
400d6399:	0a0c      	movi.n	a10, 0
400d639b:	fff225        	call8	400d62bc <timer_process_alarm>
400d639e:	fff546        	j	400d6377 <timer_task+0x3>
400d63a1:	000000        	ill

400d63a4 <esp_timer_create>:
400d63a4:	004136        	entry	a1, 32
400d63a7:	ab1ae5        	call8	40081554 <is_initialized>
400d63aa:	026a16        	beqz	a10, 400d63d4 <esp_timer_create+0x30>
400d63ad:	002242        	l32i	a4, a2, 0
400d63b0:	025416        	beqz	a4, 400d63d9 <esp_timer_create+0x35>
400d63b3:	0b2c      	movi.n	a11, 32
400d63b5:	1a0c      	movi.n	a10, 1
400d63b7:	e79f81        	l32r	a8, 400d0234 <_flash_cache_start+0x21c>
400d63ba:	0008e0        	callx8	a8
400d63bd:	fa9c      	beqz.n	a10, 400d63e0 <esp_timer_create+0x3c>
400d63bf:	4a49      	s32i.n	a4, a10, 16
400d63c1:	f03d      	nop.n
400d63c3:	f03d      	nop.n
400d63c5:	f03d      	nop.n
400d63c7:	f03d      	nop.n
400d63c9:	1228      	l32i.n	a2, a2, 4
400d63cb:	5a29      	s32i.n	a2, a10, 20
400d63cd:	03a9      	s32i.n	a10, a3, 0
400d63cf:	020c      	movi.n	a2, 0
400d63d1:	f01d      	retw.n
400d63d3:	a12200        	sll	a2, a2
400d63d6:	f01d03        	lsi	f0, a13, 0x3c0
400d63d9:	02a122        	movi	a2, 0x102
400d63dc:	f01d      	retw.n
400d63de:	220000        	orb	b0, b0, b0
400d63e1:	1d01a1        	l32r	a10, 4009d7e8 <_iram_end+0xfc94>
400d63e4:	0000f0        	callx12	a0
	...

400d63e8 <esp_timer_delete>:
400d63e8:	004136        	entry	a1, 32
400d63eb:	021216        	beqz	a2, 400d6410 <esp_timer_delete+0x28>
400d63ee:	02ad      	mov.n	a10, a2
400d63f0:	ab14e5        	call8	40081540 <timer_armed>
400d63f3:	eadc      	bnez.n	a10, 400d6415 <esp_timer_delete+0x2d>
400d63f5:	e78931        	l32r	a3, 400d021c <_flash_cache_start+0x204>
400d63f8:	fb7c      	movi.n	a11, -1
400d63fa:	03a8      	l32i.n	a10, a3, 0
400d63fc:	b18ca5        	call8	40087cc8 <xQueueTakeMutexRecursive>
400d63ff:	02ad      	mov.n	a10, a2
400d6401:	e72281        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d6404:	0008e0        	callx8	a8
400d6407:	03a8      	l32i.n	a10, a3, 0
400d6409:	b157a5        	call8	40087984 <xQueueGiveMutexRecursive>
400d640c:	020c      	movi.n	a2, 0
400d640e:	f01d      	retw.n
400d6410:	02a122        	movi	a2, 0x102
400d6413:	f01d      	retw.n
400d6415:	03a122        	movi	a2, 0x103
400d6418:	f01d      	retw.n
	...

400d641c <esp_timer_init>:
400d641c:	006136        	entry	a1, 48
400d641f:	ab1365        	call8	40081554 <is_initialized>
400d6422:	097a56        	bnez	a10, 400d64bd <esp_timer_init+0xa1>
400d6425:	0b0c      	movi.n	a11, 0
400d6427:	10a0a2        	movi	a10, 16
400d642a:	b134a5        	call8	40087774 <xQueueCreateCountingSemaphore>
400d642d:	e77d21        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d6430:	02a9      	s32i.n	a10, a2, 0
400d6432:	6abc      	beqz.n	a10, 400d646c <esp_timer_init+0x50>
400d6434:	04a0a2        	movi	a10, 4
400d6437:	b15365        	call8	4008796c <xQueueCreateMutex>
400d643a:	e77821        	l32r	a2, 400d021c <_flash_cache_start+0x204>
400d643d:	02a9      	s32i.n	a10, a2, 0
400d643f:	9aac      	beqz.n	a10, 400d646c <esp_timer_init+0x50>
400d6441:	0d0c      	movi.n	a13, 0
400d6443:	01d9      	s32i.n	a13, a1, 0
400d6445:	f03d      	nop.n
400d6447:	f03d      	nop.n
400d6449:	f03d      	nop.n
400d644b:	0020f0        	nop
400d644e:	e77af1        	l32r	a15, 400d0238 <_flash_cache_start+0x220>
400d6451:	16a0e2        	movi	a14, 22
400d6454:	e77ac1        	l32r	a12, 400d023c <_flash_cache_start+0x224>
400d6457:	e77ab1        	l32r	a11, 400d0240 <_flash_cache_start+0x228>
400d645a:	e77aa1        	l32r	a10, 400d0244 <_flash_cache_start+0x22c>
400d645d:	b29d65        	call8	40088e34 <xTaskCreatePinnedToCore>
400d6460:	081a66        	bnei	a10, 1, 400d646c <esp_timer_init+0x50>
400d6463:	e779a1        	l32r	a10, 400d0248 <_flash_cache_start+0x230>
400d6466:	008365        	call8	400d6c9c <esp_timer_impl_init>
400d6469:	055a16        	beqz	a10, 400d64c2 <esp_timer_init+0xa6>
400d646c:	e77321        	l32r	a2, 400d0238 <_flash_cache_start+0x220>
400d646f:	0022a2        	l32i	a10, a2, 0
400d6472:	00aa16        	beqz	a10, 400d6480 <esp_timer_init+0x64>
400d6475:	b2af25        	call8	40088f68 <vTaskDelete>
400d6478:	00a082        	movi	a8, 0
400d647b:	e76f21        	l32r	a2, 400d0238 <_flash_cache_start+0x220>
400d647e:	0289      	s32i.n	a8, a2, 0
400d6480:	f03d      	nop.n
400d6482:	f03d      	nop.n
400d6484:	f03d      	nop.n
400d6486:	f03d      	nop.n
400d6488:	e76721        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d648b:	0022a2        	l32i	a10, a2, 0
400d648e:	00aa16        	beqz	a10, 400d649c <esp_timer_init+0x80>
400d6491:	b192a5        	call8	40087dbc <vQueueDelete>
400d6494:	00a082        	movi	a8, 0
400d6497:	e76321        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d649a:	0289      	s32i.n	a8, a2, 0
400d649c:	f03d      	nop.n
400d649e:	f03d      	nop.n
400d64a0:	f03d      	nop.n
400d64a2:	f03d      	nop.n
400d64a4:	e75e21        	l32r	a2, 400d021c <_flash_cache_start+0x204>
400d64a7:	0022a2        	l32i	a10, a2, 0
400d64aa:	01aa16        	beqz	a10, 400d64c8 <esp_timer_init+0xac>
400d64ad:	b190e5        	call8	40087dbc <vQueueDelete>
400d64b0:	00a082        	movi	a8, 0
400d64b3:	e75a21        	l32r	a2, 400d021c <_flash_cache_start+0x204>
400d64b6:	0289      	s32i.n	a8, a2, 0
400d64b8:	01a122        	movi	a2, 0x101
400d64bb:	f01d      	retw.n
400d64bd:	03a122        	movi	a2, 0x103
400d64c0:	f01d      	retw.n
400d64c2:	020c      	movi.n	a2, 0
400d64c4:	f01d      	retw.n
400d64c6:	220000        	orb	b0, b0, b0
400d64c9:	1d01a1        	l32r	a10, 4009d8d0 <_iram_end+0xfd7c>
400d64cc:	0000f0        	callx12	a0
	...

400d64d0 <dport_access_init_core>:
400d64d0:	004136        	entry	a1, 32
400d64d3:	03eb20        	rsr.prid	a2
400d64d6:	042d20        	extui	a2, a2, 13, 1
400d64d9:	041226        	beqi	a2, 1, 400d64e1 <dport_access_init_core+0x11>
400d64dc:	a41c      	movi.n	a4, 26
400d64de:	000086        	j	400d64e4 <dport_access_init_core+0x14>
400d64e1:	1ba042        	movi	a4, 27
400d64e4:	e75a31        	l32r	a3, 400d024c <_flash_cache_start+0x234>
400d64e7:	03ad      	mov.n	a10, a3
400d64e9:	b3e5a5        	call8	4008a344 <xt_ints_off>
400d64ec:	cc1c      	movi.n	a12, 28
400d64ee:	04bd      	mov.n	a11, a4
400d64f0:	02ad      	mov.n	a10, a2
400d64f2:	e70881        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d64f5:	0008e0        	callx8	a8
400d64f8:	03ad      	mov.n	a10, a3
400d64fa:	b3e325        	call8	4008a32c <xt_ints_on>
400d64fd:	1182e0        	slli	a8, a2, 2
400d6500:	e75421        	l32r	a2, 400d0250 <_flash_cache_start+0x238>
400d6503:	228a      	add.n	a2, a2, a8
400d6505:	0a0c      	movi.n	a10, 0
400d6507:	0020c0        	memw
400d650a:	02a9      	s32i.n	a10, a2, 0
400d650c:	f03d      	nop.n
400d650e:	f03d      	nop.n
400d6510:	f03d      	nop.n
400d6512:	f03d      	nop.n
400d6514:	e75021        	l32r	a2, 400d0254 <_flash_cache_start+0x23c>
400d6517:	228a      	add.n	a2, a2, a8
400d6519:	0020c0        	memw
400d651c:	02a9      	s32i.n	a10, a2, 0
400d651e:	f03d      	nop.n
400d6520:	f03d      	nop.n
400d6522:	f03d      	nop.n
400d6524:	f03d      	nop.n
400d6526:	e74c21        	l32r	a2, 400d0258 <_flash_cache_start+0x240>
400d6529:	228a      	add.n	a2, a2, a8
400d652b:	0020c0        	memw
400d652e:	02a9      	s32i.n	a10, a2, 0
400d6530:	f03d      	nop.n
400d6532:	f03d      	nop.n
400d6534:	f03d      	nop.n
400d6536:	f03d      	nop.n
400d6538:	e74921        	l32r	a2, 400d025c <_flash_cache_start+0x244>
400d653b:	828a      	add.n	a8, a2, a8
400d653d:	120c      	movi.n	a2, 1
400d653f:	0020c0        	memw
400d6542:	006822        	s32i	a2, a8, 0
400d6545:	b2a225        	call8	40088f68 <vTaskDelete>
400d6548:	f01d      	retw.n
	...

400d654c <esp_dport_access_int_init>:
400d654c:	006136        	entry	a1, 48
400d654f:	03eb80        	rsr.prid	a8
400d6552:	048d80        	extui	a8, a8, 13, 1
400d6555:	006182        	s32i	a8, a1, 0
400d6558:	00a0f2        	movi	a15, 0
400d655b:	5e0c      	movi.n	a14, 5
400d655d:	0fdd      	mov.n	a13, a15
400d655f:	00a3c2        	movi	a12, 0x300
400d6562:	e73fb1        	l32r	a11, 400d0260 <_flash_cache_start+0x248>
400d6565:	e73fa1        	l32r	a10, 400d0264 <_flash_cache_start+0x24c>
400d6568:	b28ca5        	call8	40088e34 <xTaskCreatePinnedToCore>
400d656b:	0e1a26        	beqi	a10, 1, 400d657d <esp_dport_access_int_init+0x31>
400d656e:	e73ed1        	l32r	a13, 400d0268 <_flash_cache_start+0x250>
400d6571:	e73ec1        	l32r	a12, 400d026c <_flash_cache_start+0x254>
400d6574:	bba0b2        	movi	a11, 187
400d6577:	e73ea1        	l32r	a10, 400d0270 <_flash_cache_start+0x258>
400d657a:	045525        	call8	400daacc <__assert_func>
400d657d:	f01d      	retw.n
	...

400d6580 <rtc_brownout_isr_handler>:
400d6580:	004136        	entry	a1, 32
400d6583:	80a092        	movi	a9, 128
400d6586:	e73b81        	l32r	a8, 400d0274 <_flash_cache_start+0x25c>
400d6589:	0020c0        	memw
400d658c:	006892        	s32i	a9, a8, 0
400d658f:	03eb80        	rsr.prid	a8
400d6592:	048d80        	extui	a8, a8, 13, 1
400d6595:	090c      	movi.n	a9, 0
400d6597:	1a0c      	movi.n	a10, 1
400d6599:	93a980        	movnez	a10, a9, a8
400d659c:	ae11a5        	call8	400846b8 <esp_cpu_stall>
400d659f:	9a0c      	movi.n	a10, 9
400d65a1:	abf865        	call8	40082528 <esp_reset_reason_set_hint>
400d65a4:	e735a1        	l32r	a10, 400d0278 <_flash_cache_start+0x260>
400d65a7:	e71c81        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d65aa:	0008e0        	callx8	a8
400d65ad:	ab4ce5        	call8	40081a7c <esp_restart_noos>

400d65b0 <esp_brownout_init>:
400d65b0:	004136        	entry	a1, 32
400d65b3:	e73391        	l32r	a9, 400d0280 <_flash_cache_start+0x268>
400d65b6:	e73181        	l32r	a8, 400d027c <_flash_cache_start+0x264>
400d65b9:	0020c0        	memw
400d65bc:	006892        	s32i	a9, a8, 0
400d65bf:	80a0c2        	movi	a12, 128
400d65c2:	00a0b2        	movi	a11, 0
400d65c5:	f03d      	nop.n
400d65c7:	0020f0        	nop
400d65ca:	e72ea1        	l32r	a10, 400d0284 <_flash_cache_start+0x26c>
400d65cd:	12f925        	call8	400e9560 <rtc_isr_register>
400d65d0:	ca8c      	beqz.n	a10, 400d65e0 <esp_brownout_init+0x30>
400d65d2:	e72de1        	l32r	a14, 400d0288 <_flash_cache_start+0x270>
400d65d5:	e72dd1        	l32r	a13, 400d028c <_flash_cache_start+0x274>
400d65d8:	bc3c      	movi.n	a12, 59
400d65da:	e72db1        	l32r	a11, 400d0290 <_flash_cache_start+0x278>
400d65dd:	b50665        	call8	4008b644 <_esp_error_check_failed>
400d65e0:	e72d91        	l32r	a9, 400d0294 <_flash_cache_start+0x27c>
400d65e3:	0020c0        	memw
400d65e6:	09a8      	l32i.n	a10, a9, 0
400d65e8:	80a082        	movi	a8, 128
400d65eb:	208a80        	or	a8, a10, a8
400d65ee:	0020c0        	memw
400d65f1:	0989      	s32i.n	a8, a9, 0
400d65f3:	f01d      	retw.n
400d65f5:	000000        	ill

400d65f8 <find_task_in_twdt_list>:
400d65f8:	004136        	entry	a1, 32
400d65fb:	02ad      	mov.n	a10, a2
400d65fd:	120c      	movi.n	a2, 1
400d65ff:	004322        	s8i	a2, a3, 0
400d6602:	0020c0        	memw
400d6605:	f03d      	nop.n
400d6607:	f03d      	nop.n
400d6609:	f03d      	nop.n
400d660b:	f03d      	nop.n
400d660d:	e72221        	l32r	a2, 400d0298 <_flash_cache_start+0x280>
400d6610:	0228      	l32i.n	a2, a2, 0
400d6612:	0288      	l32i.n	a8, a2, 0
400d6614:	020c      	movi.n	a2, 0
400d6616:	000586        	j	400d6630 <find_task_in_twdt_list+0x38>
400d6619:	0898      	l32i.n	a9, a8, 0
400d661b:	0d19a7        	beq	a9, a10, 400d662c <find_task_in_twdt_list+0x34>
400d661e:	040892        	l8ui	a9, a8, 4
400d6621:	99cc      	bnez.n	a9, 400d662e <find_task_in_twdt_list+0x36>
400d6623:	004392        	s8i	a9, a3, 0
400d6626:	0020c0        	memw
400d6629:	000046        	j	400d662e <find_task_in_twdt_list+0x36>
400d662c:	082d      	mov.n	a2, a8
400d662e:	2888      	l32i.n	a8, a8, 8
400d6630:	fe5856        	bnez	a8, 400d6619 <find_task_in_twdt_list+0x21>
400d6633:	f01d      	retw.n
400d6635:	000000        	ill

400d6638 <reset_hw_timer>:
400d6638:	004136        	entry	a1, 32
400d663b:	e71881        	l32r	a8, 400d029c <_flash_cache_start+0x284>
400d663e:	e6ea91        	l32r	a9, 400d01e8 <_flash_cache_start+0x1d0>
400d6641:	0020c0        	memw
400d6644:	196892        	s32i	a9, a8, 100
400d6647:	190c      	movi.n	a9, 1
400d6649:	0020c0        	memw
400d664c:	186892        	s32i	a9, a8, 96
400d664f:	090c      	movi.n	a9, 0
400d6651:	0020c0        	memw
400d6654:	196892        	s32i	a9, a8, 100
400d6657:	f03d      	nop.n
400d6659:	f03d      	nop.n
400d665b:	f03d      	nop.n
400d665d:	f03d      	nop.n
400d665f:	e70e81        	l32r	a8, 400d0298 <_flash_cache_start+0x280>
400d6662:	0888      	l32i.n	a8, a8, 0
400d6664:	0888      	l32i.n	a8, a8, 0
400d6666:	000446        	j	400d667b <reset_hw_timer+0x43>
400d6669:	090c      	movi.n	a9, 0
400d666b:	044892        	s8i	a9, a8, 4
400d666e:	0020c0        	memw
400d6671:	f03d      	nop.n
400d6673:	f03d      	nop.n
400d6675:	f03d      	nop.n
400d6677:	f03d      	nop.n
400d6679:	2888      	l32i.n	a8, a8, 8
400d667b:	fea856        	bnez	a8, 400d6669 <reset_hw_timer+0x31>
400d667e:	f01d      	retw.n

400d6680 <task_wdt_isr>:
400d6680:	004136        	entry	a1, 32
400d6683:	e70aa1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6686:	b240a5        	call8	40088a90 <vTaskEnterCritical>
400d6689:	e70421        	l32r	a2, 400d029c <_flash_cache_start+0x284>
400d668c:	e6d731        	l32r	a3, 400d01e8 <_flash_cache_start+0x1d0>
400d668f:	0020c0        	memw
400d6692:	196232        	s32i	a3, a2, 100
400d6695:	01a032        	movi	a3, 1
400d6698:	0020c0        	memw
400d669b:	186232        	s32i	a3, a2, 96
400d669e:	00a032        	movi	a3, 0
400d66a1:	0020c0        	memw
400d66a4:	196232        	s32i	a3, a2, 100
400d66a7:	f03d      	nop.n
400d66a9:	f03d      	nop.n
400d66ab:	f03d      	nop.n
400d66ad:	f03d      	nop.n
400d66af:	0020c0        	memw
400d66b2:	292242        	l32i	a4, a2, 164
400d66b5:	430c      	movi.n	a3, 4
400d66b7:	203430        	or	a3, a4, a3
400d66ba:	034d      	mov.n	a4, a3
400d66bc:	0020c0        	memw
400d66bf:	296232        	s32i	a3, a2, 164
400d66c2:	f03d      	nop.n
400d66c4:	f03d      	nop.n
400d66c6:	f03d      	nop.n
400d66c8:	f03d      	nop.n
400d66ca:	e6f321        	l32r	a2, 400d0298 <_flash_cache_start+0x280>
400d66cd:	0228      	l32i.n	a2, a2, 0
400d66cf:	0228      	l32i.n	a2, a2, 0
400d66d1:	72cc      	bnez.n	a2, 400d66dc <task_wdt_isr+0x5c>
400d66d3:	e6f6a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d66d6:	b24fa5        	call8	40088bd0 <vTaskExitCritical>
400d66d9:	f01d      	retw.n
400d66db:	652500        	extui	a2, a0, 21, 7
400d66de:	c1ad      	lsi	f10, a1, 4
400d66e0:	a0e6f4        	lsi	f15, a6, 0x280
400d66e3:	20ba      	add.n	a2, a0, a11
400d66e5:	e6f3a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d66e8:	e6cc81        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d66eb:	0008e0        	callx8	a8
400d66ee:	e6ea21        	l32r	a2, 400d0298 <_flash_cache_start+0x280>
400d66f1:	002222        	l32i	a2, a2, 0
400d66f4:	002222        	l32i	a2, a2, 0
400d66f7:	001206        	j	400d6743 <task_wdt_isr+0xc3>
400d66fa:	820000        	mull	a0, a0, a0
400d66fd:	560402        	l8ui	a0, a4, 86
400d6700:	03e8      	l32i.n	a14, a3, 0
400d6702:	02a8      	l32i.n	a10, a2, 0
400d6704:	b232a5        	call8	40088a30 <xTaskGetAffinity>
400d6707:	6acc      	bnez.n	a10, 400d6711 <task_wdt_isr+0x91>
400d6709:	e6e531        	l32r	a3, 400d02a0 <_flash_cache_start+0x288>
400d670c:	000106        	j	400d6714 <task_wdt_isr+0x94>
400d670f:	310000        	srai	a0, a0, 16
400d6712:	a8e6e4        	lsi	f14, a6, 0x2a0
400d6715:	111002        	l16ui	a0, a0, 34
400d6718:	316520        	srai	a6, a2, 21
400d671b:	5141b2        	s8i	a11, a1, 81
400d671e:	9a47e6        	bgei	a7, 4, 400d66bc <task_wdt_isr+0x3c>
400d6721:	e13102        	lsi	f0, a1, 0x384
400d6724:	60a5e6        	bgei	a5, 12, 400d6788 <task_wdt_isr+0x108>
400d6727:	4dad      	lsi	f10, a13, 52
400d6729:	a80a      	add.n	a10, a8, a0
400d672b:	2b6502        	s32i	a0, a5, 172
400d672e:	03edb2        	s32c1i	a11, a13, 12
400d6731:	0add      	mov.n	a13, a10
400d6733:	e6dfc1        	l32r	a12, 400d02b0 <_flash_cache_start+0x298>
400d6736:	04bd      	mov.n	a11, a4
400d6738:	e6e0a1        	l32r	a10, 400d02b8 <_flash_cache_start+0x2a0>
400d673b:	e6b781        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d673e:	0008e0        	callx8	a8
400d6741:	2228      	l32i.n	a2, a2, 8
400d6743:	fb5256        	bnez	a2, 400d66fc <task_wdt_isr+0x7c>
400d6746:	ad5ea5        	call8	40083d30 <esp_log_timestamp>
400d6749:	e6dcd1        	l32r	a13, 400d02bc <_flash_cache_start+0x2a4>
400d674c:	e6d9c1        	l32r	a12, 400d02b0 <_flash_cache_start+0x298>
400d674f:	0abd      	mov.n	a11, a10
400d6751:	e6dba1        	l32r	a10, 400d02c0 <_flash_cache_start+0x2a8>
400d6754:	e6b181        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d6757:	0008e0        	callx8	a8
400d675a:	000906        	j	400d6782 <task_wdt_isr+0x102>
400d675d:	000000        	ill
400d6760:	ad5ce5        	call8	40083d30 <esp_log_timestamp>
400d6763:	0a3d      	mov.n	a3, a10
400d6765:	02ad      	mov.n	a10, a2
400d6767:	b22da5        	call8	40088a40 <xTaskGetCurrentTaskHandleForCPU>
400d676a:	b227a5        	call8	400889e4 <pcTaskGetTaskName>
400d676d:	0aed      	mov.n	a14, a10
400d676f:	02dd      	mov.n	a13, a2
400d6771:	e6cfc1        	l32r	a12, 400d02b0 <_flash_cache_start+0x298>
400d6774:	20b330        	or	a11, a3, a3
400d6777:	e6d3a1        	l32r	a10, 400d02c4 <_flash_cache_start+0x2ac>
400d677a:	e6a781        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d677d:	0008e0        	callx8	a8
400d6780:	221b      	addi.n	a2, a2, 1
400d6782:	da22a6        	blti	a2, 2, 400d6760 <task_wdt_isr+0xe0>
400d6785:	15ace5        	call8	400ec254 <esp_task_wdt_isr_user_handler>
400d6788:	e6c421        	l32r	a2, 400d0298 <_flash_cache_start+0x280>
400d678b:	0228      	l32i.n	a2, a2, 0
400d678d:	080222        	l8ui	a2, a2, 8
400d6790:	e29c      	beqz.n	a2, 400d67b2 <task_wdt_isr+0x132>
400d6792:	ad59e5        	call8	40083d30 <esp_log_timestamp>
400d6795:	e6c6c1        	l32r	a12, 400d02b0 <_flash_cache_start+0x298>
400d6798:	20baa0        	or	a11, a10, a10
400d679b:	e6cba1        	l32r	a10, 400d02c8 <_flash_cache_start+0x2b0>
400d679e:	e69e81        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d67a1:	0008e0        	callx8	a8
400d67a4:	e6c2a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d67a7:	b242a5        	call8	40088bd0 <vTaskExitCritical>
400d67aa:	6a0c      	movi.n	a10, 6
400d67ac:	abd7a5        	call8	40082528 <esp_reset_reason_set_hint>
400d67af:	b4bbe5        	call8	4008b36c <abort>
400d67b2:	e6bea1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d67b5:	b241a5        	call8	40088bd0 <vTaskExitCritical>
400d67b8:	f01d      	retw.n
	...

400d67bc <esp_task_wdt_init>:
400d67bc:	004136        	entry	a1, 32
400d67bf:	743030        	extui	a3, a3, 0, 8
400d67c2:	e6baa1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d67c5:	b22ca5        	call8	40088a90 <vTaskEnterCritical>
400d67c8:	e6b481        	l32r	a8, 400d0298 <_flash_cache_start+0x280>
400d67cb:	0028a2        	l32i	a10, a8, 0
400d67ce:	172a56        	bnez	a10, 400d6944 <esp_task_wdt_init+0x188>
400d67d1:	10a0b2        	movi	a11, 16
400d67d4:	1a0c      	movi.n	a10, 1
400d67d6:	e69781        	l32r	a8, 400d0234 <_flash_cache_start+0x21c>
400d67d9:	0008e0        	callx8	a8
400d67dc:	e6af81        	l32r	a8, 400d0298 <_flash_cache_start+0x280>
400d67df:	08a9      	s32i.n	a10, a8, 0
400d67e1:	1adc      	bnez.n	a10, 400d67f6 <esp_task_wdt_init+0x3a>
400d67e3:	f03d      	nop.n
400d67e5:	f03d      	nop.n
400d67e7:	f03d      	nop.n
400d67e9:	f03d      	nop.n
400d67eb:	e6b0a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d67ee:	b23e25        	call8	40088bd0 <vTaskExitCritical>
400d67f1:	01a122        	movi	a2, 0x101
400d67f4:	f01d      	retw.n
400d67f6:	00a0b2        	movi	a11, 0
400d67f9:	0ab9      	s32i.n	a11, a10, 0
400d67fb:	1a29      	s32i.n	a2, a10, 4
400d67fd:	084a32        	s8i	a3, a10, 8
400d6800:	0020c0        	memw
400d6803:	eacb      	addi.n	a14, a10, 12
400d6805:	0bdd      	mov.n	a13, a11
400d6807:	f03d      	nop.n
400d6809:	f03d      	nop.n
400d680b:	e6b0c1        	l32r	a12, 400d02cc <_flash_cache_start+0x2b4>
400d680e:	0a1c      	movi.n	a10, 16
400d6810:	ff8fa5        	call8	400d610c <esp_intr_alloc>
400d6813:	da8c      	beqz.n	a10, 400d6824 <esp_task_wdt_init+0x68>
400d6815:	e6aee1        	l32r	a14, 400d02d0 <_flash_cache_start+0x2b8>
400d6818:	e6afd1        	l32r	a13, 400d02d4 <_flash_cache_start+0x2bc>
400d681b:	c7a0c2        	movi	a12, 199
400d681e:	e6aeb1        	l32r	a11, 400d02d8 <_flash_cache_start+0x2c0>
400d6821:	b4e225        	call8	4008b644 <_esp_error_check_failed>
400d6824:	8a0c      	movi.n	a10, 8
400d6826:	12bb65        	call8	400e93dc <periph_module_enable>
400d6829:	e69c21        	l32r	a2, 400d029c <_flash_cache_start+0x284>
400d682c:	e66f31        	l32r	a3, 400d01e8 <_flash_cache_start+0x1d0>
400d682f:	0020c0        	memw
400d6832:	196232        	s32i	a3, a2, 100
400d6835:	f03d      	nop.n
400d6837:	f03d      	nop.n
400d6839:	f03d      	nop.n
400d683b:	f03d      	nop.n
400d683d:	0020c0        	memw
400d6840:	122282        	l32i	a8, a2, 72
400d6843:	e66a31        	l32r	a3, 400d01ec <_flash_cache_start+0x1d4>
400d6846:	203830        	or	a3, a8, a3
400d6849:	0020c0        	memw
400d684c:	126232        	s32i	a3, a2, 72
400d684f:	f03d      	nop.n
400d6851:	f03d      	nop.n
400d6853:	f03d      	nop.n
400d6855:	f03d      	nop.n
400d6857:	0020c0        	memw
400d685a:	122282        	l32i	a8, a2, 72
400d685d:	e66431        	l32r	a3, 400d01f0 <_flash_cache_start+0x1d8>
400d6860:	203830        	or	a3, a8, a3
400d6863:	0020c0        	memw
400d6866:	126232        	s32i	a3, a2, 72
400d6869:	f03d      	nop.n
400d686b:	f03d      	nop.n
400d686d:	f03d      	nop.n
400d686f:	f03d      	nop.n
400d6871:	0020c0        	memw
400d6874:	122282        	l32i	a8, a2, 72
400d6877:	e63d31        	l32r	a3, 400d016c <_flash_cache_start+0x154>
400d687a:	203830        	or	a3, a8, a3
400d687d:	0020c0        	memw
400d6880:	126232        	s32i	a3, a2, 72
400d6883:	f03d      	nop.n
400d6885:	f03d      	nop.n
400d6887:	f03d      	nop.n
400d6889:	f03d      	nop.n
400d688b:	0020c0        	memw
400d688e:	122282        	l32i	a8, a2, 72
400d6891:	e65831        	l32r	a3, 400d01f4 <_flash_cache_start+0x1dc>
400d6894:	108830        	and	a8, a8, a3
400d6897:	e61931        	l32r	a3, 400d00fc <_flash_cache_start+0xe4>
400d689a:	203830        	or	a3, a8, a3
400d689d:	0020c0        	memw
400d68a0:	126232        	s32i	a3, a2, 72
400d68a3:	f03d      	nop.n
400d68a5:	f03d      	nop.n
400d68a7:	f03d      	nop.n
400d68a9:	f03d      	nop.n
400d68ab:	0020c0        	memw
400d68ae:	122282        	l32i	a8, a2, 72
400d68b1:	e65131        	l32r	a3, 400d01f8 <_flash_cache_start+0x1e0>
400d68b4:	203830        	or	a3, a8, a3
400d68b7:	0020c0        	memw
400d68ba:	126232        	s32i	a3, a2, 72
400d68bd:	f03d      	nop.n
400d68bf:	f03d      	nop.n
400d68c1:	f03d      	nop.n
400d68c3:	f03d      	nop.n
400d68c5:	0020c0        	memw
400d68c8:	132282        	l32i	a8, a2, 76
400d68cb:	f48080        	extui	a8, a8, 0, 16
400d68ce:	e64b31        	l32r	a3, 400d01fc <_flash_cache_start+0x1e4>
400d68d1:	203830        	or	a3, a8, a3
400d68d4:	0020c0        	memw
400d68d7:	136232        	s32i	a3, a2, 76
400d68da:	f03d      	nop.n
400d68dc:	f03d      	nop.n
400d68de:	f03d      	nop.n
400d68e0:	f03d      	nop.n
400d68e2:	e66d31        	l32r	a3, 400d0298 <_flash_cache_start+0x280>
400d68e5:	0398      	l32i.n	a9, a3, 0
400d68e7:	1988      	l32i.n	a8, a9, 4
400d68e9:	1138b0        	slli	a3, a8, 5
400d68ec:	c03380        	sub	a3, a3, a8
400d68ef:	a03380        	addx4	a3, a3, a8
400d68f2:	1183c0        	slli	a8, a3, 4
400d68f5:	0020c0        	memw
400d68f8:	146282        	s32i	a8, a2, 80
400d68fb:	f03d      	nop.n
400d68fd:	f03d      	nop.n
400d68ff:	f03d      	nop.n
400d6901:	f03d      	nop.n
400d6903:	1988      	l32i.n	a8, a9, 4
400d6905:	1138b0        	slli	a3, a8, 5
400d6908:	c03380        	sub	a3, a3, a8
400d690b:	a03380        	addx4	a3, a3, a8
400d690e:	1183b0        	slli	a8, a3, 5
400d6911:	0020c0        	memw
400d6914:	156282        	s32i	a8, a2, 84
400d6917:	f03d      	nop.n
400d6919:	f03d      	nop.n
400d691b:	f03d      	nop.n
400d691d:	f03d      	nop.n
400d691f:	0020c0        	memw
400d6922:	122282        	l32i	a8, a2, 72
400d6925:	e5d531        	l32r	a3, 400d007c <_flash_cache_start+0x64>
400d6928:	203830        	or	a3, a8, a3
400d692b:	0020c0        	memw
400d692e:	126232        	s32i	a3, a2, 72
400d6931:	130c      	movi.n	a3, 1
400d6933:	0020c0        	memw
400d6936:	186232        	s32i	a3, a2, 96
400d6939:	030c      	movi.n	a3, 0
400d693b:	0020c0        	memw
400d693e:	196232        	s32i	a3, a2, 100
400d6941:	0025c6        	j	400d69dc <esp_task_wdt_init+0x220>
400d6944:	084a32        	s8i	a3, a10, 8
400d6947:	016a22        	s32i	a2, a10, 4
400d694a:	f03d      	nop.n
400d694c:	f03d      	nop.n
400d694e:	f03d      	nop.n
400d6950:	f03d      	nop.n
400d6952:	e65281        	l32r	a8, 400d029c <_flash_cache_start+0x284>
400d6955:	e62421        	l32r	a2, 400d01e8 <_flash_cache_start+0x1d0>
400d6958:	0020c0        	memw
400d695b:	196822        	s32i	a2, a8, 100
400d695e:	f03d      	nop.n
400d6960:	f03d      	nop.n
400d6962:	f03d      	nop.n
400d6964:	f03d      	nop.n
400d6966:	0020c0        	memw
400d6969:	1228b2        	l32i	a11, a8, 72
400d696c:	e5bd91        	l32r	a9, 400d0060 <_flash_cache_start+0x48>
400d696f:	109b90        	and	a9, a11, a9
400d6972:	0020c0        	memw
400d6975:	126892        	s32i	a9, a8, 72
400d6978:	f03d      	nop.n
400d697a:	f03d      	nop.n
400d697c:	f03d      	nop.n
400d697e:	f03d      	nop.n
400d6980:	012ab2        	l32i	a11, a10, 4
400d6983:	119bb0        	slli	a9, a11, 5
400d6986:	c099b0        	sub	a9, a9, a11
400d6989:	a099b0        	addx4	a9, a9, a11
400d698c:	11b9c0        	slli	a11, a9, 4
400d698f:	0020c0        	memw
400d6992:	1468b2        	s32i	a11, a8, 80
400d6995:	f03d      	nop.n
400d6997:	f03d      	nop.n
400d6999:	f03d      	nop.n
400d699b:	f03d      	nop.n
400d699d:	012aa2        	l32i	a10, a10, 4
400d69a0:	119ab0        	slli	a9, a10, 5
400d69a3:	c099a0        	sub	a9, a9, a10
400d69a6:	a099a0        	addx4	a9, a9, a10
400d69a9:	11a9b0        	slli	a10, a9, 5
400d69ac:	0020c0        	memw
400d69af:	1568a2        	s32i	a10, a8, 84
400d69b2:	f03d      	nop.n
400d69b4:	f03d      	nop.n
400d69b6:	f03d      	nop.n
400d69b8:	f03d      	nop.n
400d69ba:	0020c0        	memw
400d69bd:	1228a2        	l32i	a10, a8, 72
400d69c0:	e5af91        	l32r	a9, 400d007c <_flash_cache_start+0x64>
400d69c3:	209a90        	or	a9, a10, a9
400d69c6:	0020c0        	memw
400d69c9:	126892        	s32i	a9, a8, 72
400d69cc:	120c      	movi.n	a2, 1
400d69ce:	0020c0        	memw
400d69d1:	186822        	s32i	a2, a8, 96
400d69d4:	020c      	movi.n	a2, 0
400d69d6:	0020c0        	memw
400d69d9:	196822        	s32i	a2, a8, 100
400d69dc:	f03d      	nop.n
400d69de:	f03d      	nop.n
400d69e0:	f03d      	nop.n
400d69e2:	f03d      	nop.n
400d69e4:	e632a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d69e7:	b21ea5        	call8	40088bd0 <vTaskExitCritical>
400d69ea:	020c      	movi.n	a2, 0
400d69ec:	f01d      	retw.n
	...

400d69f0 <esp_task_wdt_add>:
400d69f0:	006136        	entry	a1, 48
400d69f3:	e62ea1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d69f6:	b209a5        	call8	40088a90 <vTaskEnterCritical>
400d69f9:	e62781        	l32r	a8, 400d0298 <_flash_cache_start+0x280>
400d69fc:	002882        	l32i	a8, a8, 0
400d69ff:	00b856        	bnez	a8, 400d6a0e <esp_task_wdt_add+0x1e>
400d6a02:	e62aa1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6a05:	b21ca5        	call8	40088bd0 <vTaskExitCritical>
400d6a08:	03a122        	movi	a2, 0x103
400d6a0b:	f01d      	retw.n
400d6a0d:	32cc00        	orbc	b12, b12, b0
400d6a10:	b1f965        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400d6a13:	0a2d      	mov.n	a2, a10
400d6a15:	b1fb      	addi.n	a11, a1, 15
400d6a17:	20a220        	or	a10, a2, a2
400d6a1a:	ffbde5        	call8	400d65f8 <find_task_in_twdt_list>
400d6a1d:	9a8c      	beqz.n	a10, 400d6a2a <esp_task_wdt_add+0x3a>
400d6a1f:	e623a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6a22:	b21ae5        	call8	40088bd0 <vTaskExitCritical>
400d6a25:	02a122        	movi	a2, 0x102
400d6a28:	f01d      	retw.n
400d6a2a:	cb0c      	movi.n	a11, 12
400d6a2c:	1a0c      	movi.n	a10, 1
400d6a2e:	e60181        	l32r	a8, 400d0234 <_flash_cache_start+0x21c>
400d6a31:	0008e0        	callx8	a8
400d6a34:	9acc      	bnez.n	a10, 400d6a41 <esp_task_wdt_add+0x51>
400d6a36:	e61da1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6a39:	b21965        	call8	40088bd0 <vTaskExitCritical>
400d6a3c:	01a122        	movi	a2, 0x101
400d6a3f:	f01d      	retw.n
400d6a41:	0a29      	s32i.n	a2, a10, 0
400d6a43:	130c      	movi.n	a3, 1
400d6a45:	044a32        	s8i	a3, a10, 4
400d6a48:	030c      	movi.n	a3, 0
400d6a4a:	2a39      	s32i.n	a3, a10, 8
400d6a4c:	f03d      	nop.n
400d6a4e:	f03d      	nop.n
400d6a50:	f03d      	nop.n
400d6a52:	f03d      	nop.n
400d6a54:	e61131        	l32r	a3, 400d0298 <_flash_cache_start+0x280>
400d6a57:	0338      	l32i.n	a3, a3, 0
400d6a59:	0398      	l32i.n	a9, a3, 0
400d6a5b:	79cc      	bnez.n	a9, 400d6a66 <esp_task_wdt_add+0x76>
400d6a5d:	03a9      	s32i.n	a10, a3, 0
400d6a5f:	030c      	movi.n	a3, 0
400d6a61:	000c06        	j	400d6a95 <esp_task_wdt_add+0xa5>
400d6a64:	089d      	mov.n	a9, a8
400d6a66:	2988      	l32i.n	a8, a9, 8
400d6a68:	ff8856        	bnez	a8, 400d6a64 <esp_task_wdt_add+0x74>
400d6a6b:	29a9      	s32i.n	a10, a9, 8
400d6a6d:	fffb86        	j	400d6a5f <esp_task_wdt_add+0x6f>
400d6a70:	034d      	mov.n	a4, a3
400d6a72:	03ad      	mov.n	a10, a3
400d6a74:	b1bd65        	call8	4008864c <xTaskGetIdleTaskHandleForCPU>
400d6a77:	1892a7        	bne	a2, a10, 400d6a93 <esp_task_wdt_add+0xa3>
400d6a7a:	03bd      	mov.n	a11, a3
400d6a7c:	e618a1        	l32r	a10, 400d02dc <_flash_cache_start+0x2c4>
400d6a7f:	0033e5        	call8	400d6dbc <esp_register_freertos_idle_hook_for_cpu>
400d6a82:	2a9c      	beqz.n	a10, 400d6a98 <esp_task_wdt_add+0xa8>
400d6a84:	e617e1        	l32r	a14, 400d02e0 <_flash_cache_start+0x2c8>
400d6a87:	e617d1        	l32r	a13, 400d02e4 <_flash_cache_start+0x2cc>
400d6a8a:	21a1c2        	movi	a12, 0x121
400d6a8d:	e612b1        	l32r	a11, 400d02d8 <_flash_cache_start+0x2c0>
400d6a90:	b4bb25        	call8	4008b644 <_esp_error_check_failed>
400d6a93:	331b      	addi.n	a3, a3, 1
400d6a95:	d723a6        	blti	a3, 2, 400d6a70 <esp_task_wdt_add+0x80>
400d6a98:	0f0122        	l8ui	a2, a1, 15
400d6a9b:	128c      	beqz.n	a2, 400d6aa0 <esp_task_wdt_add+0xb0>
400d6a9d:	ffb9a5        	call8	400d6638 <reset_hw_timer>
400d6aa0:	e603a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6aa3:	b212e5        	call8	40088bd0 <vTaskExitCritical>
400d6aa6:	020c      	movi.n	a2, 0
400d6aa8:	f01d      	retw.n
	...

400d6aac <esp_task_wdt_reset>:
400d6aac:	006136        	entry	a1, 48
400d6aaf:	e5ffa1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6ab2:	b1fde5        	call8	40088a90 <vTaskEnterCritical>
400d6ab5:	e5f881        	l32r	a8, 400d0298 <_flash_cache_start+0x280>
400d6ab8:	002882        	l32i	a8, a8, 0
400d6abb:	00a856        	bnez	a8, 400d6ac9 <esp_task_wdt_reset+0x1d>
400d6abe:	e5fba1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6ac1:	b210e5        	call8	40088bd0 <vTaskExitCritical>
400d6ac4:	03a122        	movi	a2, 0x103
400d6ac7:	f01d      	retw.n
400d6ac9:	b1ede5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400d6acc:	0fc1b2        	addi	a11, a1, 15
400d6acf:	ffb2a5        	call8	400d65f8 <find_task_in_twdt_list>
400d6ad2:	00ba56        	bnez	a10, 400d6ae1 <esp_task_wdt_reset+0x35>
400d6ad5:	e5f5a1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6ad8:	b20f65        	call8	40088bd0 <vTaskExitCritical>
400d6adb:	05a122        	movi	a2, 0x105
400d6ade:	000090        	retw
400d6ae1:	120c      	movi.n	a2, 1
400d6ae3:	044a22        	s8i	a2, a10, 4
400d6ae6:	0020c0        	memw
400d6ae9:	f03d      	nop.n
400d6aeb:	f03d      	nop.n
400d6aed:	f03d      	nop.n
400d6aef:	f03d      	nop.n
400d6af1:	0f0122        	l8ui	a2, a1, 15
400d6af4:	128c      	beqz.n	a2, 400d6af9 <esp_task_wdt_reset+0x4d>
400d6af6:	ffb425        	call8	400d6638 <reset_hw_timer>
400d6af9:	e5eca1        	l32r	a10, 400d02ac <_flash_cache_start+0x294>
400d6afc:	b20d25        	call8	40088bd0 <vTaskExitCritical>
400d6aff:	020c      	movi.n	a2, 0
400d6b01:	f01d      	retw.n
	...

400d6b04 <idle_hook_cb>:
400d6b04:	004136        	entry	a1, 32
400d6b07:	fffa65        	call8	400d6aac <esp_task_wdt_reset>
400d6b0a:	120c      	movi.n	a2, 1
400d6b0c:	f01d      	retw.n
	...

400d6b10 <esp_dbg_stubs_data_free>:
400d6b10:	004136        	entry	a1, 32
400d6b13:	20a220        	or	a10, a2, a2
400d6b16:	e55d81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d6b19:	0008e0        	callx8	a8
400d6b1c:	f01d      	retw.n
	...

400d6b20 <esp_dbg_stubs_data_alloc>:
400d6b20:	004136        	entry	a1, 32
400d6b23:	20a220        	or	a10, a2, a2
400d6b26:	e56f81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d6b29:	0008e0        	callx8	a8
400d6b2c:	0a2d      	mov.n	a2, a10
400d6b2e:	f01d      	retw.n

400d6b30 <esp_dbg_stubs_init>:
400d6b30:	004136        	entry	a1, 32
400d6b33:	e5ee81        	l32r	a8, 400d02ec <_flash_cache_start+0x2d4>
400d6b36:	e5ec91        	l32r	a9, 400d02e8 <_flash_cache_start+0x2d0>
400d6b39:	006892        	s32i	a9, a8, 0
400d6b3c:	f03d      	nop.n
400d6b3e:	f03d      	nop.n
400d6b40:	f03d      	nop.n
400d6b42:	f03d      	nop.n
400d6b44:	e5eb91        	l32r	a9, 400d02f0 <_flash_cache_start+0x2d8>
400d6b47:	016892        	s32i	a9, a8, 4
400d6b4a:	f03d      	nop.n
400d6b4c:	f03d      	nop.n
400d6b4e:	f03d      	nop.n
400d6b50:	f03d      	nop.n
400d6b52:	e5e891        	l32r	a9, 400d02f4 <_flash_cache_start+0x2dc>
400d6b55:	026892        	s32i	a9, a8, 8
400d6b58:	f03d      	nop.n
400d6b5a:	f03d      	nop.n
400d6b5c:	f03d      	nop.n
400d6b5e:	f03d      	nop.n
400d6b60:	e5e691        	l32r	a9, 400d02f8 <_flash_cache_start+0x2e0>
400d6b63:	3899      	s32i.n	a9, a8, 12
400d6b65:	f03d      	nop.n
400d6b67:	f03d      	nop.n
400d6b69:	f03d      	nop.n
400d6b6b:	f03d      	nop.n
400d6b6d:	e5e3b1        	l32r	a11, 400d02fc <_flash_cache_start+0x2e4>
400d6b70:	0b89      	s32i.n	a8, a11, 0
400d6b72:	f03d      	nop.n
400d6b74:	f03d      	nop.n
400d6b76:	f03d      	nop.n
400d6b78:	f03d      	nop.n
400d6b7a:	e5e1a1        	l32r	a10, 400d0300 <_flash_cache_start+0x2e8>
400d6b7d:	b4af25        	call8	4008b670 <eri_write>
400d6b80:	f01d      	retw.n
	...

400d6b84 <semphr_delete_wrapper>:
400d6b84:	004136        	entry	a1, 32
400d6b87:	02ad      	mov.n	a10, a2
400d6b89:	b12325        	call8	40087dbc <vQueueDelete>
400d6b8c:	f01d      	retw.n
	...

400d6b90 <timer_setfn_wrapper>:
400d6b90:	004136        	entry	a1, 32
400d6b93:	04cd      	mov.n	a12, a4
400d6b95:	03bd      	mov.n	a11, a3
400d6b97:	02ad      	mov.n	a10, a2
400d6b99:	002d25        	call8	400d6e6c <ets_timer_setfn>
400d6b9c:	f01d      	retw.n
	...

400d6ba0 <timer_done_wrapper>:
400d6ba0:	004136        	entry	a1, 32
400d6ba3:	02ad      	mov.n	a10, a2
400d6ba5:	003225        	call8	400d6ec8 <ets_timer_done>
400d6ba8:	f01d      	retw.n
	...

400d6bac <semphr_take_wrapper>:
400d6bac:	004136        	entry	a1, 32
400d6baf:	110366        	bnei	a3, -1, 400d6bc4 <semphr_take_wrapper+0x18>
400d6bb2:	00a0d2        	movi	a13, 0
400d6bb5:	ffafc2        	movi	a12, -1
400d6bb8:	20bdd0        	or	a11, a13, a13
400d6bbb:	02ad      	mov.n	a10, a2
400d6bbd:	b0fa65        	call8	40087b64 <xQueueGenericReceive>
400d6bc0:	0a2d      	mov.n	a2, a10
400d6bc2:	f01d      	retw.n
400d6bc4:	00a0d2        	movi	a13, 0
400d6bc7:	20c330        	or	a12, a3, a3
400d6bca:	20bdd0        	or	a11, a13, a13
400d6bcd:	02ad      	mov.n	a10, a2
400d6bcf:	b0f965        	call8	40087b64 <xQueueGenericReceive>
400d6bd2:	0a2d      	mov.n	a2, a10
400d6bd4:	f01d      	retw.n
	...

400d6bd8 <semphr_give_wrapper>:
400d6bd8:	004136        	entry	a1, 32
400d6bdb:	00a0d2        	movi	a13, 0
400d6bde:	20cdd0        	or	a12, a13, a13
400d6be1:	20bdd0        	or	a11, a13, a13
400d6be4:	02ad      	mov.n	a10, a2
400d6be6:	b0bfe5        	call8	400877e4 <xQueueGenericSend>
400d6be9:	0a2d      	mov.n	a2, a10
400d6beb:	f01d      	retw.n
400d6bed:	000000        	ill

400d6bf0 <semphr_create_wrapper>:
400d6bf0:	004136        	entry	a1, 32
400d6bf3:	20b330        	or	a11, a3, a3
400d6bf6:	20a220        	or	a10, a2, a2
400d6bf9:	b0b7a5        	call8	40087774 <xQueueCreateCountingSemaphore>
400d6bfc:	202aa0        	or	a2, a10, a10
400d6bff:	f01d      	retw.n
400d6c01:	000000        	ill

400d6c04 <spin_lock_create_wrapper>:
400d6c04:	006136        	entry	a1, 48
400d6c07:	e5bf21        	l32r	a2, 400d0304 <_flash_cache_start+0x2ec>
400d6c0a:	2129      	s32i.n	a2, a1, 8
400d6c0c:	020c      	movi.n	a2, 0
400d6c0e:	3129      	s32i.n	a2, a1, 12
400d6c10:	8a0c      	movi.n	a10, 8
400d6c12:	e53481        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d6c15:	0008e0        	callx8	a8
400d6c18:	0a2d      	mov.n	a2, a10
400d6c1a:	aa8c      	beqz.n	a10, 400d6c28 <spin_lock_create_wrapper+0x24>
400d6c1c:	8c0c      	movi.n	a12, 8
400d6c1e:	b1ca      	add.n	a11, a1, a12
400d6c20:	e51c81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d6c23:	0008e0        	callx8	a8
400d6c26:	f01d      	retw.n
400d6c28:	020c      	movi.n	a2, 0
400d6c2a:	f01d      	retw.n

400d6c2c <esp_cache_err_int_init>:
400d6c2c:	004136        	entry	a1, 32
400d6c2f:	03eb20        	rsr.prid	a2
400d6c32:	042d20        	extui	a2, a2, 13, 1
400d6c35:	e5b4a1        	l32r	a10, 400d0308 <_flash_cache_start+0x2f0>
400d6c38:	b370a5        	call8	4008a344 <xt_ints_off>
400d6c3b:	19a0c2        	movi	a12, 25
400d6c3e:	44a0b2        	movi	a11, 68
400d6c41:	02ad      	mov.n	a10, a2
400d6c43:	e53481        	l32r	a8, 400d0114 <_flash_cache_start+0xfc>
400d6c46:	0008e0        	callx8	a8
400d6c49:	82dc      	bnez.n	a2, 400d6c65 <esp_cache_err_int_init+0x39>
400d6c4b:	e5b031        	l32r	a3, 400d030c <_flash_cache_start+0x2f4>
400d6c4e:	20a330        	or	a10, a3, a3
400d6c51:	aacf65        	call8	40081948 <esp_dport_access_reg_read>
400d6c54:	e5af21        	l32r	a2, 400d0310 <_flash_cache_start+0x2f8>
400d6c57:	20aa20        	or	a10, a10, a2
400d6c5a:	0020c0        	memw
400d6c5d:	03a9      	s32i.n	a10, a3, 0
400d6c5f:	0005c6        	j	400d6c7a <esp_cache_err_int_init+0x4e>
400d6c62:	000000        	ill
400d6c65:	e5a931        	l32r	a3, 400d030c <_flash_cache_start+0x2f4>
400d6c68:	20a330        	or	a10, a3, a3
400d6c6b:	aacde5        	call8	40081948 <esp_dport_access_reg_read>
400d6c6e:	3fa022        	movi	a2, 63
400d6c71:	20aa20        	or	a10, a10, a2
400d6c74:	0020c0        	memw
400d6c77:	0063a2        	s32i	a10, a3, 0
400d6c7a:	f03d      	nop.n
400d6c7c:	f03d      	nop.n
400d6c7e:	f03d      	nop.n
400d6c80:	f03d      	nop.n
400d6c82:	e5a1a1        	l32r	a10, 400d0308 <_flash_cache_start+0x2f0>
400d6c85:	b36a65        	call8	4008a32c <xt_ints_on>
400d6c88:	f01d      	retw.n
	...

400d6c8c <s_set_default_wifi_log_level>:
400d6c8c:	004136        	entry	a1, 32
400d6c8f:	1b0c      	movi.n	a11, 1
400d6c91:	e5a0a1        	l32r	a10, 400d0314 <_flash_cache_start+0x2fc>
400d6c94:	038a65        	call8	400da53c <esp_log_level_set>
400d6c97:	f01d      	retw.n
400d6c99:	000000        	ill

400d6c9c <esp_timer_impl_init>:
400d6c9c:	004136        	entry	a1, 32
400d6c9f:	e59e81        	l32r	a8, 400d0318 <_flash_cache_start+0x300>
400d6ca2:	006822        	s32i	a2, a8, 0
400d6ca5:	f03d      	nop.n
400d6ca7:	f03d      	nop.n
400d6ca9:	f03d      	nop.n
400d6cab:	f03d      	nop.n
400d6cad:	e59be1        	l32r	a14, 400d031c <_flash_cache_start+0x304>
400d6cb0:	00a0d2        	movi	a13, 0
400d6cb3:	e59bc1        	l32r	a12, 400d0320 <_flash_cache_start+0x308>
400d6cb6:	e59bb1        	l32r	a11, 400d0324 <_flash_cache_start+0x30c>
400d6cb9:	39a0a2        	movi	a10, 57
400d6cbc:	ff44e5        	call8	400d610c <esp_intr_alloc>
400d6cbf:	0a2d      	mov.n	a2, a10
400d6cc1:	3a9c      	beqz.n	a10, 400d6cd8 <esp_timer_impl_init+0x3c>
400d6cc3:	ad06e5        	call8	40083d30 <esp_log_timestamp>
400d6cc6:	02dd      	mov.n	a13, a2
400d6cc8:	e598c1        	l32r	a12, 400d0328 <_flash_cache_start+0x310>
400d6ccb:	0abd      	mov.n	a11, a10
400d6ccd:	e597a1        	l32r	a10, 400d032c <_flash_cache_start+0x314>
400d6cd0:	e55281        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400d6cd3:	0008e0        	callx8	a8
400d6cd6:	f01d      	retw.n
400d6cd8:	b619a5        	call8	4008ce74 <rtc_clk_apb_freq_get>
400d6cdb:	e59581        	l32r	a8, 400d0330 <_flash_cache_start+0x318>
400d6cde:	a2aa80        	muluh	a10, a10, a8
400d6ce1:	d5a2a0        	extui	a10, a10, 18, 14
400d6ce4:	e59421        	l32r	a2, 400d0334 <_flash_cache_start+0x31c>
400d6ce7:	0062a2        	s32i	a10, a2, 0
400d6cea:	016a56        	bnez	a10, 400d6d04 <esp_timer_impl_init+0x68>
400d6ced:	f03d      	nop.n
400d6cef:	f03d      	nop.n
400d6cf1:	f03d      	nop.n
400d6cf3:	f03d      	nop.n
400d6cf5:	e590d1        	l32r	a13, 400d0338 <_flash_cache_start+0x320>
400d6cf8:	e591c1        	l32r	a12, 400d033c <_flash_cache_start+0x324>
400d6cfb:	68a1b2        	movi	a11, 0x168
400d6cfe:	e590a1        	l32r	a10, 400d0340 <_flash_cache_start+0x328>
400d6d01:	03dca5        	call8	400daacc <__assert_func>
400d6d04:	e59021        	l32r	a2, 400d0344 <_flash_cache_start+0x32c>
400d6d07:	c2a2a0        	quou	a10, a2, a10
400d6d0a:	e58f81        	l32r	a8, 400d0348 <_flash_cache_start+0x330>
400d6d0d:	0068a2        	s32i	a10, a8, 0
400d6d10:	f03d      	nop.n
400d6d12:	f03d      	nop.n
400d6d14:	f03d      	nop.n
400d6d16:	f03d      	nop.n
400d6d18:	e4d1a1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400d6d1b:	e4d0b1        	l32r	a11, 400d005c <_flash_cache_start+0x44>
400d6d1e:	e58b81        	l32r	a8, 400d034c <_flash_cache_start+0x334>
400d6d21:	0068a2        	s32i	a10, a8, 0
400d6d24:	18b9      	s32i.n	a11, a8, 4
400d6d26:	f03d      	nop.n
400d6d28:	f03d      	nop.n
400d6d2a:	f03d      	nop.n
400d6d2c:	f03d      	nop.n
400d6d2e:	e58881        	l32r	a8, 400d0350 <_flash_cache_start+0x338>
400d6d31:	0020c0        	memw
400d6d34:	0829      	s32i.n	a2, a8, 0
400d6d36:	080c      	movi.n	a8, 0
400d6d38:	f03d      	nop.n
400d6d3a:	f03d      	nop.n
400d6d3c:	f03d      	nop.n
400d6d3e:	e58521        	l32r	a2, 400d0354 <_flash_cache_start+0x33c>
400d6d41:	0020c0        	memw
400d6d44:	0289      	s32i.n	a8, a2, 0
400d6d46:	81a082        	movi	a8, 129
400d6d49:	f03d      	nop.n
400d6d4b:	f03d      	nop.n
400d6d4d:	f03d      	nop.n
400d6d4f:	e58221        	l32r	a2, 400d0358 <_flash_cache_start+0x340>
400d6d52:	0020c0        	memw
400d6d55:	0289      	s32i.n	a8, a2, 0
400d6d57:	180c      	movi.n	a8, 1
400d6d59:	f03d      	nop.n
400d6d5b:	f03d      	nop.n
400d6d5d:	f03d      	nop.n
400d6d5f:	e57f21        	l32r	a2, 400d035c <_flash_cache_start+0x344>
400d6d62:	0020c0        	memw
400d6d65:	0289      	s32i.n	a8, a2, 0
400d6d67:	f03d      	nop.n
400d6d69:	f03d      	nop.n
400d6d6b:	f03d      	nop.n
400d6d6d:	f03d      	nop.n
400d6d6f:	e56b21        	l32r	a2, 400d031c <_flash_cache_start+0x304>
400d6d72:	02a8      	l32i.n	a10, a2, 0
400d6d74:	aa54e5        	call8	400812c4 <esp_intr_enable>
400d6d77:	da8c      	beqz.n	a10, 400d6d88 <esp_timer_impl_init+0xec>
400d6d79:	e579e1        	l32r	a14, 400d0360 <_flash_cache_start+0x348>
400d6d7c:	e570d1        	l32r	a13, 400d033c <_flash_cache_start+0x324>
400d6d7f:	71a1c2        	movi	a12, 0x171
400d6d82:	e56fb1        	l32r	a11, 400d0340 <_flash_cache_start+0x328>
400d6d85:	b48be5        	call8	4008b644 <_esp_error_check_failed>
400d6d88:	020c      	movi.n	a2, 0
400d6d8a:	f01d      	retw.n

400d6d8c <esp_vApplicationIdleHook>:
400d6d8c:	004136        	entry	a1, 32
400d6d8f:	03eb30        	rsr.prid	a3
400d6d92:	043d30        	extui	a3, a3, 13, 1
400d6d95:	020c      	movi.n	a2, 0
400d6d97:	140c      	movi.n	a4, 1
400d6d99:	000546        	j	400d6db2 <esp_vApplicationIdleHook+0x26>
400d6d9c:	b08320        	addx8	a8, a3, a2
400d6d9f:	e57191        	l32r	a9, 400d0364 <_flash_cache_start+0x34c>
400d6da2:	a08890        	addx4	a8, a8, a9
400d6da5:	08a8      	l32i.n	a10, a8, 0
400d6da7:	5a8c      	beqz.n	a10, 400d6db0 <esp_vApplicationIdleHook+0x24>
400d6da9:	000ae0        	callx8	a10
400d6dac:	0acc      	bnez.n	a10, 400d6db0 <esp_vApplicationIdleHook+0x24>
400d6dae:	040c      	movi.n	a4, 0
400d6db0:	221b      	addi.n	a2, a2, 1
400d6db2:	e682a6        	blti	a2, 8, 400d6d9c <esp_vApplicationIdleHook+0x10>
400d6db5:	148c      	beqz.n	a4, 400d6dba <esp_vApplicationIdleHook+0x2e>
400d6db7:	154a65        	call8	400ec25c <esp_pm_impl_waiti>
400d6dba:	f01d      	retw.n

400d6dbc <esp_register_freertos_idle_hook_for_cpu>:
400d6dbc:	004136        	entry	a1, 32
400d6dbf:	4a23f6        	bgeui	a3, 2, 400d6e0d <esp_register_freertos_idle_hook_for_cpu+0x51>
400d6dc2:	e569a1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6dc5:	b1cca5        	call8	40088a90 <vTaskEnterCritical>
400d6dc8:	090c      	movi.n	a9, 0
400d6dca:	000b86        	j	400d6dfc <esp_register_freertos_idle_hook_for_cpu+0x40>
400d6dcd:	000000        	ill
400d6dd0:	b08390        	addx8	a8, a3, a9
400d6dd3:	e564a1        	l32r	a10, 400d0364 <_flash_cache_start+0x34c>
400d6dd6:	a088a0        	addx4	a8, a8, a10
400d6dd9:	002882        	l32i	a8, a8, 0
400d6ddc:	01a856        	bnez	a8, 400d6dfa <esp_register_freertos_idle_hook_for_cpu+0x3e>
400d6ddf:	b03390        	addx8	a3, a3, a9
400d6de2:	a033a0        	addx4	a3, a3, a10
400d6de5:	006322        	s32i	a2, a3, 0
400d6de8:	f03d      	nop.n
400d6dea:	f03d      	nop.n
400d6dec:	f03d      	nop.n
400d6dee:	f03d      	nop.n
400d6df0:	e55ea1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6df3:	b1dde5        	call8	40088bd0 <vTaskExitCritical>
400d6df6:	020c      	movi.n	a2, 0
400d6df8:	f01d      	retw.n
400d6dfa:	991b      	addi.n	a9, a9, 1
400d6dfc:	d089a6        	blti	a9, 8, 400d6dd0 <esp_register_freertos_idle_hook_for_cpu+0x14>
400d6dff:	e55aa1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6e02:	b1dce5        	call8	40088bd0 <vTaskExitCritical>
400d6e05:	01a122        	movi	a2, 0x101
400d6e08:	f01d      	retw.n
400d6e0a:	000000        	ill
400d6e0d:	02a122        	movi	a2, 0x102
400d6e10:	f01d      	retw.n
	...

400d6e14 <esp_register_freertos_tick_hook_for_cpu>:
400d6e14:	004136        	entry	a1, 32
400d6e17:	4a23f6        	bgeui	a3, 2, 400d6e65 <esp_register_freertos_tick_hook_for_cpu+0x51>
400d6e1a:	e553a1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6e1d:	b1c725        	call8	40088a90 <vTaskEnterCritical>
400d6e20:	090c      	movi.n	a9, 0
400d6e22:	000b86        	j	400d6e54 <esp_register_freertos_tick_hook_for_cpu+0x40>
400d6e25:	000000        	ill
400d6e28:	b08390        	addx8	a8, a3, a9
400d6e2b:	e550a1        	l32r	a10, 400d036c <_flash_cache_start+0x354>
400d6e2e:	a088a0        	addx4	a8, a8, a10
400d6e31:	002882        	l32i	a8, a8, 0
400d6e34:	01a856        	bnez	a8, 400d6e52 <esp_register_freertos_tick_hook_for_cpu+0x3e>
400d6e37:	b03390        	addx8	a3, a3, a9
400d6e3a:	a033a0        	addx4	a3, a3, a10
400d6e3d:	006322        	s32i	a2, a3, 0
400d6e40:	f03d      	nop.n
400d6e42:	f03d      	nop.n
400d6e44:	f03d      	nop.n
400d6e46:	f03d      	nop.n
400d6e48:	e548a1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6e4b:	b1d865        	call8	40088bd0 <vTaskExitCritical>
400d6e4e:	020c      	movi.n	a2, 0
400d6e50:	f01d      	retw.n
400d6e52:	991b      	addi.n	a9, a9, 1
400d6e54:	d089a6        	blti	a9, 8, 400d6e28 <esp_register_freertos_tick_hook_for_cpu+0x14>
400d6e57:	e544a1        	l32r	a10, 400d0368 <_flash_cache_start+0x350>
400d6e5a:	b1d765        	call8	40088bd0 <vTaskExitCritical>
400d6e5d:	01a122        	movi	a2, 0x101
400d6e60:	f01d      	retw.n
400d6e62:	000000        	ill
400d6e65:	02a122        	movi	a2, 0x102
400d6e68:	f01d      	retw.n
	...

400d6e6c <ets_timer_setfn>:
400d6e6c:	006136        	entry	a1, 48
400d6e6f:	02ad      	mov.n	a10, a2
400d6e71:	ab54e5        	call8	400823c0 <timer_initialized>
400d6e74:	1adc      	bnez.n	a10, 400d6e89 <ets_timer_setfn+0x1d>
400d6e76:	14a0c2        	movi	a12, 20
400d6e79:	0b0c      	movi.n	a11, 0
400d6e7b:	20a220        	or	a10, a2, a2
400d6e7e:	e47b81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d6e81:	0008e0        	callx8	a8
400d6e84:	e53b81        	l32r	a8, 400d0370 <_flash_cache_start+0x358>
400d6e87:	1289      	s32i.n	a8, a2, 4
400d6e89:	f03d      	nop.n
400d6e8b:	f03d      	nop.n
400d6e8d:	f03d      	nop.n
400d6e8f:	f03d      	nop.n
400d6e91:	042282        	l32i	a8, a2, 16
400d6e94:	02c856        	bnez	a8, 400d6ec4 <ets_timer_setfn+0x58>
400d6e97:	0139      	s32i.n	a3, a1, 0
400d6e99:	1149      	s32i.n	a4, a1, 4
400d6e9b:	030c      	movi.n	a3, 0
400d6e9d:	2139      	s32i.n	a3, a1, 8
400d6e9f:	f03d      	nop.n
400d6ea1:	f03d      	nop.n
400d6ea3:	f03d      	nop.n
400d6ea5:	f03d      	nop.n
400d6ea7:	e53331        	l32r	a3, 400d0374 <_flash_cache_start+0x35c>
400d6eaa:	3139      	s32i.n	a3, a1, 12
400d6eac:	10c2b2        	addi	a11, a2, 16
400d6eaf:	01ad      	mov.n	a10, a1
400d6eb1:	ff4f25        	call8	400d63a4 <esp_timer_create>
400d6eb4:	ca8c      	beqz.n	a10, 400d6ec4 <ets_timer_setfn+0x58>
400d6eb6:	e530e1        	l32r	a14, 400d0378 <_flash_cache_start+0x360>
400d6eb9:	e530d1        	l32r	a13, 400d037c <_flash_cache_start+0x364>
400d6ebc:	2c4c      	movi.n	a12, 66
400d6ebe:	e530b1        	l32r	a11, 400d0380 <_flash_cache_start+0x368>
400d6ec1:	b47825        	call8	4008b644 <_esp_error_check_failed>
400d6ec4:	f01d      	retw.n
	...

400d6ec8 <ets_timer_done>:
400d6ec8:	004136        	entry	a1, 32
400d6ecb:	20a220        	or	a10, a2, a2
400d6ece:	ab4f25        	call8	400823c0 <timer_initialized>
400d6ed1:	00ba16        	beqz	a10, 400d6ee0 <ets_timer_done+0x18>
400d6ed4:	0422a2        	l32i	a10, a2, 16
400d6ed7:	ff5125        	call8	400d63e8 <esp_timer_delete>
400d6eda:	080c      	movi.n	a8, 0
400d6edc:	4289      	s32i.n	a8, a2, 16
400d6ede:	1289      	s32i.n	a8, a2, 4
400d6ee0:	f01d      	retw.n
	...

400d6ee4 <esp_ipc_call_and_wait>:
400d6ee4:	004136        	entry	a1, 32
400d6ee7:	0222b6        	bltui	a2, 2, 400d6eed <esp_ipc_call_and_wait+0x9>
400d6eea:	001c86        	j	400d6f60 <esp_ipc_call_and_wait+0x7c>
400d6eed:	b1b6a5        	call8	40088a58 <xTaskGetSchedulerState>
400d6ef0:	712a66        	bnei	a10, 2, 400d6f65 <esp_ipc_call_and_wait+0x81>
400d6ef3:	e52461        	l32r	a6, 400d0384 <_flash_cache_start+0x36c>
400d6ef6:	0d0c      	movi.n	a13, 0
400d6ef8:	fc7c      	movi.n	a12, -1
400d6efa:	0dbd      	mov.n	a11, a13
400d6efc:	06a8      	l32i.n	a10, a6, 0
400d6efe:	b0c665        	call8	40087b64 <xQueueGenericReceive>
400d6f01:	e52181        	l32r	a8, 400d0388 <_flash_cache_start+0x370>
400d6f04:	0020c0        	memw
400d6f07:	0839      	s32i.n	a3, a8, 0
400d6f09:	f03d      	nop.n
400d6f0b:	f03d      	nop.n
400d6f0d:	f03d      	nop.n
400d6f0f:	f03d      	nop.n
400d6f11:	e51e31        	l32r	a3, 400d038c <_flash_cache_start+0x374>
400d6f14:	0020c0        	memw
400d6f17:	0349      	s32i.n	a4, a3, 0
400d6f19:	f03d      	nop.n
400d6f1b:	f03d      	nop.n
400d6f1d:	f03d      	nop.n
400d6f1f:	f03d      	nop.n
400d6f21:	e51b31        	l32r	a3, 400d0390 <_flash_cache_start+0x378>
400d6f24:	0020c0        	memw
400d6f27:	0359      	s32i.n	a5, a3, 0
400d6f29:	f03d      	nop.n
400d6f2b:	f03d      	nop.n
400d6f2d:	f03d      	nop.n
400d6f2f:	f03d      	nop.n
400d6f31:	e51831        	l32r	a3, 400d0394 <_flash_cache_start+0x37c>
400d6f34:	a02230        	addx4	a2, a2, a3
400d6f37:	0d0c      	movi.n	a13, 0
400d6f39:	0dcd      	mov.n	a12, a13
400d6f3b:	0dbd      	mov.n	a11, a13
400d6f3d:	0022a2        	l32i	a10, a2, 0
400d6f40:	b08a25        	call8	400877e4 <xQueueGenericSend>
400d6f43:	0d0c      	movi.n	a13, 0
400d6f45:	fc7c      	movi.n	a12, -1
400d6f47:	0dbd      	mov.n	a11, a13
400d6f49:	e51321        	l32r	a2, 400d0398 <_flash_cache_start+0x380>
400d6f4c:	02a8      	l32i.n	a10, a2, 0
400d6f4e:	b0c165        	call8	40087b64 <xQueueGenericReceive>
400d6f51:	0d0c      	movi.n	a13, 0
400d6f53:	0dcd      	mov.n	a12, a13
400d6f55:	0dbd      	mov.n	a11, a13
400d6f57:	06a8      	l32i.n	a10, a6, 0
400d6f59:	b088a5        	call8	400877e4 <xQueueGenericSend>
400d6f5c:	020c      	movi.n	a2, 0
400d6f5e:	f01d      	retw.n
400d6f60:	02a122        	movi	a2, 0x102
400d6f63:	f01d      	retw.n
400d6f65:	03a122        	movi	a2, 0x103
400d6f68:	f01d      	retw.n
	...

400d6f6c <esp_ipc_init>:
400d6f6c:	00a136        	entry	a1, 80
400d6f6f:	e44521        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400d6f72:	0020c0        	memw
400d6f75:	002222        	l32i	a2, a2, 0
400d6f78:	0020c0        	memw
400d6f7b:	0b6122        	s32i	a2, a1, 44
400d6f7e:	1a0c      	movi.n	a10, 1
400d6f80:	b09ea5        	call8	4008796c <xQueueCreateMutex>
400d6f83:	e50021        	l32r	a2, 400d0384 <_flash_cache_start+0x36c>
400d6f86:	02a9      	s32i.n	a10, a2, 0
400d6f88:	3c0c      	movi.n	a12, 3
400d6f8a:	0b0c      	movi.n	a11, 0
400d6f8c:	1a0c      	movi.n	a10, 1
400d6f8e:	b07765        	call8	40087704 <xQueueGenericCreate>
400d6f91:	e50121        	l32r	a2, 400d0398 <_flash_cache_start+0x380>
400d6f94:	02a9      	s32i.n	a10, a2, 0
400d6f96:	020c      	movi.n	a2, 0
400d6f98:	001286        	j	400d6fe6 <esp_ipc_init+0x7a>
400d6f9b:	200000        	or	a0, a0, a0
400d6f9e:	c120d2        	l32i	a13, a0, 0x304
400d6fa1:	ff          	.byte 0xff
400d6fa2:	a0b2e4        	lsi	f14, a2, 0x280
400d6fa5:	0f          	.byte 0xf
400d6fa6:	1dc1a2        	addi	a10, a1, 29
400d6fa9:	04e7e5        	call8	400dbe28 <snprintf>
400d6fac:	03a0c2        	movi	a12, 3
400d6faf:	0b0c      	movi.n	a11, 0
400d6fb1:	1a0c      	movi.n	a10, 1
400d6fb3:	b07525        	call8	40087704 <xQueueGenericCreate>
400d6fb6:	e4f781        	l32r	a8, 400d0394 <_flash_cache_start+0x37c>
400d6fb9:	a08280        	addx4	a8, a2, a8
400d6fbc:	08a9      	s32i.n	a10, a8, 0
400d6fbe:	0129      	s32i.n	a2, a1, 0
400d6fc0:	0f0c      	movi.n	a15, 0
400d6fc2:	8e1c      	movi.n	a14, 24
400d6fc4:	02dd      	mov.n	a13, a2
400d6fc6:	00a4c2        	movi	a12, 0x400
400d6fc9:	1dc1b2        	addi	a11, a1, 29
400d6fcc:	e4f5a1        	l32r	a10, 400d03a0 <_flash_cache_start+0x388>
400d6fcf:	b1e665        	call8	40088e34 <xTaskCreatePinnedToCore>
400d6fd2:	0e1a26        	beqi	a10, 1, 400d6fe4 <esp_ipc_init+0x78>
400d6fd5:	e4f3d1        	l32r	a13, 400d03a4 <_flash_cache_start+0x38c>
400d6fd8:	e4f4c1        	l32r	a12, 400d03a8 <_flash_cache_start+0x390>
400d6fdb:	61a0b2        	movi	a11, 97
400d6fde:	e4f3a1        	l32r	a10, 400d03ac <_flash_cache_start+0x394>
400d6fe1:	03aea5        	call8	400daacc <__assert_func>
400d6fe4:	221b      	addi.n	a2, a2, 1
400d6fe6:	b322a6        	blti	a2, 2, 400d6f9d <esp_ipc_init+0x31>
400d6fe9:	0020c0        	memw
400d6fec:	b188      	l32i.n	a8, a1, 44
400d6fee:	e42521        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400d6ff1:	0020c0        	memw
400d6ff4:	0228      	l32i.n	a2, a2, 0
400d6ff6:	021827        	beq	a8, a2, 400d6ffc <esp_ipc_init+0x90>
400d6ff9:	ff2b25        	call8	400d62ac <__stack_chk_fail>
400d6ffc:	f01d      	retw.n
	...

400d7000 <esp_ipc_call>:
400d7000:	004136        	entry	a1, 32
400d7003:	00a0d2        	movi	a13, 0
400d7006:	20c440        	or	a12, a4, a4
400d7009:	20b330        	or	a11, a3, a3
400d700c:	02ad      	mov.n	a10, a2
400d700e:	ffed65        	call8	400d6ee4 <esp_ipc_call_and_wait>
400d7011:	0a2d      	mov.n	a2, a10
400d7013:	f01d      	retw.n
400d7015:	000000        	ill

400d7018 <get_reset_reason>:
400d7018:	004136        	entry	a1, 32
400d701b:	081c      	movi.n	a8, 16
400d701d:	433827        	bltu	a8, a2, 400d7064 <get_reset_reason+0x4c>
400d7020:	e4e481        	l32r	a8, 400d03b0 <_flash_cache_start+0x398>
400d7023:	a02280        	addx4	a2, a2, a8
400d7026:	0228      	l32i.n	a2, a2, 0
400d7028:	0002a0        	jx	a2
400d702b:	120c      	movi.n	a2, 1
400d702d:	f01d      	retw.n
400d702f:	fcc382        	addi	a8, a3, -4
400d7032:	1a0c      	movi.n	a10, 1
400d7034:	020c      	movi.n	a2, 0
400d7036:	024d      	mov.n	a4, a2
400d7038:	834a80        	moveqz	a4, a10, a8
400d703b:	f7c392        	addi	a9, a3, -9
400d703e:	832a90        	moveqz	a2, a10, a9
400d7041:	202240        	or	a2, a2, a4
400d7044:	42ec      	bnez.n	a2, 400d706c <get_reset_reason+0x54>
400d7046:	fbc322        	addi	a2, a3, -5
400d7049:	2322b6        	bltui	a2, 2, 400d7070 <get_reset_reason+0x58>
400d704c:	320c      	movi.n	a2, 3
400d704e:	f01d      	retw.n
400d7050:	620c      	movi.n	a2, 6
400d7052:	f01d      	retw.n
400d7054:	520c      	movi.n	a2, 5
400d7056:	f01d      	retw.n
400d7058:	720c      	movi.n	a2, 7
400d705a:	f01d      	retw.n
400d705c:	920c      	movi.n	a2, 9
400d705e:	f01d      	retw.n
400d7060:	a20c      	movi.n	a2, 10
400d7062:	f01d      	retw.n
400d7064:	020c      	movi.n	a2, 0
400d7066:	f01d      	retw.n
400d7068:	820c      	movi.n	a2, 8
400d706a:	f01d      	retw.n
400d706c:	032d      	mov.n	a2, a3
400d706e:	f01d      	retw.n
400d7070:	032d      	mov.n	a2, a3
400d7072:	f01d      	retw.n

400d7074 <esp_reset_reason_clear_hint>:
400d7074:	004136        	entry	a1, 32
400d7077:	090c      	movi.n	a9, 0
400d7079:	e4ce81        	l32r	a8, 400d03b4 <_flash_cache_start+0x39c>
400d707c:	0020c0        	memw
400d707f:	0899      	s32i.n	a9, a8, 0
400d7081:	f01d      	retw.n
	...

400d7084 <esp_reset_reason_init>:
400d7084:	004136        	entry	a1, 32
400d7087:	ab4d25        	call8	40082558 <esp_reset_reason_get_hint>
400d708a:	202aa0        	or	a2, a10, a10
400d708d:	00a0a2        	movi	a10, 0
400d7090:	e43b81        	l32r	a8, 400d017c <_flash_cache_start+0x164>
400d7093:	0008e0        	callx8	a8
400d7096:	02bd      	mov.n	a11, a2
400d7098:	fff7e5        	call8	400d7018 <get_reset_reason>
400d709b:	e4c781        	l32r	a8, 400d03b8 <_flash_cache_start+0x3a0>
400d709e:	08a9      	s32i.n	a10, a8, 0
400d70a0:	128c      	beqz.n	a2, 400d70a5 <esp_reset_reason_init+0x21>
400d70a2:	fffd25        	call8	400d7074 <esp_reset_reason_clear_hint>
400d70a5:	f01d      	retw.n
400d70a7:	880c00        	lsi	f0, a12, 0x220
400d70aa:	006000        	rsil	a0, 0
400d70ad:	000c00        	lsi	f0, a12, 0
400d70b0:	008890        	any4	b9, b8:b9:b10:b11
400d70b3:	000060        	lsi	f6, a0, 0
400d70b6:	100800        	and	a0, a8, a0
400d70b9:	600260        	lsi	f6, a2, 0x180
400d70bc:	008894        	lsi	f9, a8, 0
400d70bf:	ffff60        	f64cmph	a15, a15, a6, 15
400d70c2:	2c8007        	bany	a0, a0, 400d70f2 <pwdet_sar2_init+0x26>
400d70c5:	0088      	l32i.n	a8, a0, 0
400d70c7:	883860        	lsi	f6, a8, 0x220
400d70ca:	00          	.byte 00
400d70cb:	60          	.byte 0x60

400d70cc <pwdet_sar2_init>:
400d70cc:	004136        	entry	a1, 32
400d70cf:	fff6a1        	l32r	a10, 400d70a8 <esp_reset_reason_init+0x24>
400d70d2:	fff691        	l32r	a9, 400d70ac <esp_reset_reason_init+0x28>
400d70d5:	0020c0        	memw
400d70d8:	0ab8      	l32i.n	a11, a10, 0
400d70da:	fff581        	l32r	a8, 400d70b0 <esp_reset_reason_init+0x2c>
400d70dd:	209b90        	or	a9, a11, a9
400d70e0:	0020c0        	memw
400d70e3:	0a99      	s32i.n	a9, a10, 0
400d70e5:	0020c0        	memw
400d70e8:	08b8      	l32i.n	a11, a8, 0
400d70ea:	fff291        	l32r	a9, 400d70b4 <esp_reset_reason_init+0x30>
400d70ed:	fff2a1        	l32r	a10, 400d70b8 <esp_reset_reason_init+0x34>
400d70f0:	209b90        	or	a9, a11, a9
400d70f3:	0020c0        	memw
400d70f6:	0899      	s32i.n	a9, a8, 0
400d70f8:	0020c0        	memw
400d70fb:	0ab8      	l32i.n	a11, a10, 0
400d70fd:	b97c      	movi.n	a9, -5
400d70ff:	109b90        	and	a9, a11, a9
400d7102:	0020c0        	memw
400d7105:	0a99      	s32i.n	a9, a10, 0
400d7107:	0020c0        	memw
400d710a:	08b8      	l32i.n	a11, a8, 0
400d710c:	e48ea1        	l32r	a10, 400d0344 <_flash_cache_start+0x32c>
400d710f:	ffeb91        	l32r	a9, 400d70bc <esp_reset_reason_init+0x38>
400d7112:	10aba0        	and	a10, a11, a10
400d7115:	0020c0        	memw
400d7118:	08a9      	s32i.n	a10, a8, 0
400d711a:	0020c0        	memw
400d711d:	09a8      	l32i.n	a10, a9, 0
400d711f:	e3d781        	l32r	a8, 400d007c <_flash_cache_start+0x64>
400d7122:	208a80        	or	a8, a10, a8
400d7125:	0020c0        	memw
400d7128:	0989      	s32i.n	a8, a9, 0
400d712a:	0020c0        	memw
400d712d:	09b8      	l32i.n	a11, a9, 0
400d712f:	ffe4a1        	l32r	a10, 400d70c0 <esp_reset_reason_init+0x3c>
400d7132:	ffe481        	l32r	a8, 400d70c4 <esp_reset_reason_init+0x40>
400d7135:	10aba0        	and	a10, a11, a10
400d7138:	0020c0        	memw
400d713b:	09a9      	s32i.n	a10, a9, 0
400d713d:	0020c0        	memw
400d7140:	08b8      	l32i.n	a11, a8, 0
400d7142:	ca0c      	movi.n	a10, 12
400d7144:	ffe191        	l32r	a9, 400d70c8 <esp_reset_reason_init+0x44>
400d7147:	20aba0        	or	a10, a11, a10
400d714a:	0020c0        	memw
400d714d:	08a9      	s32i.n	a10, a8, 0
400d714f:	0020c0        	memw
400d7152:	09b8      	l32i.n	a11, a9, 0
400d7154:	e3c4a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400d7157:	10aba0        	and	a10, a11, a10
400d715a:	0020c0        	memw
400d715d:	09a9      	s32i.n	a10, a9, 0
400d715f:	0020c0        	memw
400d7162:	09b8      	l32i.n	a11, a9, 0
400d7164:	ca7c      	movi.n	a10, -4
400d7166:	10aba0        	and	a10, a11, a10
400d7169:	0020c0        	memw
400d716c:	09a9      	s32i.n	a10, a9, 0
400d716e:	0020c0        	memw
400d7171:	08a8      	l32i.n	a10, a8, 0
400d7173:	1faf92        	movi	a9, -225
400d7176:	10aa90        	and	a10, a10, a9
400d7179:	80a092        	movi	a9, 128
400d717c:	209a90        	or	a9, a10, a9
400d717f:	0020c0        	memw
400d7182:	0899      	s32i.n	a9, a8, 0
400d7184:	f01d      	retw.n
	...

400d7188 <bootloader_common_set_flash_cs_timing>:
400d7188:	004136        	entry	a1, 32
400d718b:	e48c91        	l32r	a9, 400d03bc <_flash_cache_start+0x3a4>
400d718e:	0020c0        	memw
400d7191:	0988      	l32i.n	a8, a9, 0
400d7193:	0c3c      	movi.n	a12, 48
400d7195:	2088c0        	or	a8, a8, a12
400d7198:	0020c0        	memw
400d719b:	0989      	s32i.n	a8, a9, 0
400d719d:	f03d      	nop.n
400d719f:	f03d      	nop.n
400d71a1:	f03d      	nop.n
400d71a3:	f03d      	nop.n
400d71a5:	e486d1        	l32r	a13, 400d03c0 <_flash_cache_start+0x3a8>
400d71a8:	0020c0        	memw
400d71ab:	0d88      	l32i.n	a8, a13, 0
400d71ad:	0fafb2        	movi	a11, -241
400d71b0:	1088b0        	and	a8, a8, a11
400d71b3:	0a1c      	movi.n	a10, 16
400d71b5:	2088a0        	or	a8, a8, a10
400d71b8:	0020c0        	memw
400d71bb:	0d89      	s32i.n	a8, a13, 0
400d71bd:	f03d      	nop.n
400d71bf:	f03d      	nop.n
400d71c1:	f03d      	nop.n
400d71c3:	f03d      	nop.n
400d71c5:	0020c0        	memw
400d71c8:	0d88      	l32i.n	a8, a13, 0
400d71ca:	097c      	movi.n	a9, -16
400d71cc:	108890        	and	a8, a8, a9
400d71cf:	0020c0        	memw
400d71d2:	0d89      	s32i.n	a8, a13, 0
400d71d4:	f03d      	nop.n
400d71d6:	f03d      	nop.n
400d71d8:	f03d      	nop.n
400d71da:	f03d      	nop.n
400d71dc:	e47a81        	l32r	a8, 400d03c4 <_flash_cache_start+0x3ac>
400d71df:	0020c0        	memw
400d71e2:	08d8      	l32i.n	a13, a8, 0
400d71e4:	20cdc0        	or	a12, a13, a12
400d71e7:	0020c0        	memw
400d71ea:	08c9      	s32i.n	a12, a8, 0
400d71ec:	f03d      	nop.n
400d71ee:	f03d      	nop.n
400d71f0:	f03d      	nop.n
400d71f2:	f03d      	nop.n
400d71f4:	e47581        	l32r	a8, 400d03c8 <_flash_cache_start+0x3b0>
400d71f7:	0020c0        	memw
400d71fa:	08c8      	l32i.n	a12, a8, 0
400d71fc:	10bcb0        	and	a11, a12, a11
400d71ff:	20aba0        	or	a10, a11, a10
400d7202:	0020c0        	memw
400d7205:	08a9      	s32i.n	a10, a8, 0
400d7207:	f03d      	nop.n
400d7209:	f03d      	nop.n
400d720b:	f03d      	nop.n
400d720d:	f03d      	nop.n
400d720f:	0020c0        	memw
400d7212:	08a8      	l32i.n	a10, a8, 0
400d7214:	109a90        	and	a9, a10, a9
400d7217:	0020c0        	memw
400d721a:	0899      	s32i.n	a9, a8, 0
400d721c:	f01d      	retw.n
	...

400d7220 <lookup_storage_from_name(char const*)>:
400d7220:	004136        	entry	a1, 32
400d7223:	e46a31        	l32r	a3, 400d03cc <_flash_cache_start+0x3b4>
400d7226:	0338      	l32i.n	a3, a3, 0
400d7228:	040c      	movi.n	a4, 0
400d722a:	121347        	beq	a3, a4, 400d7240 <lookup_storage_from_name(char const*)+0x20>
400d722d:	02bd      	mov.n	a11, a2
400d722f:	0223a2        	l32i	a10, a3, 8
400d7232:	e46781        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d7235:	0008e0        	callx8	a8
400d7238:	9a8c      	beqz.n	a10, 400d7245 <lookup_storage_from_name(char const*)+0x25>
400d723a:	180c      	movi.n	a8, 1
400d723c:	0001c6        	j	400d7247 <lookup_storage_from_name(char const*)+0x27>
400d723f:	080c00        	lsx	f0, a12, a0
400d7242:	000046        	j	400d7247 <lookup_storage_from_name(char const*)+0x27>
400d7245:	080c      	movi.n	a8, 0
400d7247:	388c      	beqz.n	a8, 400d724e <lookup_storage_from_name(char const*)+0x2e>
400d7249:	1338      	l32i.n	a3, a3, 4
400d724b:	fff6c6        	j	400d722a <lookup_storage_from_name(char const*)+0xa>
400d724e:	032d      	mov.n	a2, a3
400d7250:	f01d      	retw.n
	...

400d7254 <nvs_flash_init_custom>:
400d7254:	004136        	entry	a1, 32
400d7257:	20a220        	or	a10, a2, a2
400d725a:	fffc65        	call8	400d7220 <lookup_storage_from_name(char const*)>
400d725d:	02ba56        	bnez	a10, 400d728c <nvs_flash_init_custom+0x38>
400d7260:	68a0a2        	movi	a10, 104
400d7263:	135c65        	call8	400ea828 <operator new(unsigned int)>
400d7266:	205aa0        	or	a5, a10, a10
400d7269:	080c      	movi.n	a8, 0
400d726b:	0a89      	s32i.n	a8, a10, 0
400d726d:	1a89      	s32i.n	a8, a10, 4
400d726f:	2a29      	s32i.n	a2, a10, 8
400d7271:	4a89      	s32i.n	a8, a10, 16
400d7273:	5a89      	s32i.n	a8, a10, 20
400d7275:	6a89      	s32i.n	a8, a10, 24
400d7277:	7a89      	s32i.n	a8, a10, 28
400d7279:	8a89      	s32i.n	a8, a10, 32
400d727b:	9a89      	s32i.n	a8, a10, 36
400d727d:	aa89      	s32i.n	a8, a10, 40
400d727f:	ea89      	s32i.n	a8, a10, 56
400d7281:	fa89      	s32i.n	a8, a10, 60
400d7283:	106a82        	s32i	a8, a10, 64
400d7286:	196a82        	s32i	a8, a10, 100
400d7289:	000086        	j	400d728f <nvs_flash_init_custom+0x3b>
400d728c:	00a052        	movi	a5, 0
400d728f:	20c440        	or	a12, a4, a4
400d7292:	20b330        	or	a11, a3, a3
400d7295:	003d65        	call8	400d766c <nvs::Storage::init(unsigned int, unsigned int)>
400d7298:	0a2d      	mov.n	a2, a10
400d729a:	054516        	beqz	a5, 400d72f2 <nvs_flash_init_custom+0x9e>
400d729d:	043a56        	bnez	a10, 400d72e4 <nvs_flash_init_custom+0x90>
400d72a0:	e44b31        	l32r	a3, 400d03cc <_flash_cache_start+0x3b4>
400d72a3:	1338      	l32i.n	a3, a3, 4
400d72a5:	038c      	beqz.n	a3, 400d72a9 <nvs_flash_init_custom+0x55>
400d72a7:	1359      	s32i.n	a5, a3, 4
400d72a9:	f03d      	nop.n
400d72ab:	f03d      	nop.n
400d72ad:	f03d      	nop.n
400d72af:	f03d      	nop.n
400d72b1:	e44631        	l32r	a3, 400d03cc <_flash_cache_start+0x3b4>
400d72b4:	1348      	l32i.n	a4, a3, 4
400d72b6:	0549      	s32i.n	a4, a5, 0
400d72b8:	040c      	movi.n	a4, 0
400d72ba:	1549      	s32i.n	a4, a5, 4
400d72bc:	1359      	s32i.n	a5, a3, 4
400d72be:	f03d      	nop.n
400d72c0:	f03d      	nop.n
400d72c2:	f03d      	nop.n
400d72c4:	f03d      	nop.n
400d72c6:	0338      	l32i.n	a3, a3, 0
400d72c8:	049347        	bne	a3, a4, 400d72d0 <nvs_flash_init_custom+0x7c>
400d72cb:	e44031        	l32r	a3, 400d03cc <_flash_cache_start+0x3b4>
400d72ce:	0359      	s32i.n	a5, a3, 0
400d72d0:	f03d      	nop.n
400d72d2:	f03d      	nop.n
400d72d4:	f03d      	nop.n
400d72d6:	f03d      	nop.n
400d72d8:	e43d41        	l32r	a4, 400d03cc <_flash_cache_start+0x3b4>
400d72db:	2438      	l32i.n	a3, a4, 8
400d72dd:	331b      	addi.n	a3, a3, 1
400d72df:	2439      	s32i.n	a3, a4, 8
400d72e1:	f01d      	retw.n
400d72e3:	a51600        	extui	a1, a0, 22, 11
400d72e6:	a55000        	extui	a5, a0, 16, 11
400d72e9:	0f6520        	f64cmph	a6, a5, a2, 0
400d72ec:	05ad00        	extui	a10, a0, 29, 1
400d72ef:	135025        	call8	400ea7f0 <operator delete(void*)>
400d72f2:	f01d      	retw.n

400d72f4 <nvs_flash_init_partition>:
400d72f4:	004136        	entry	a1, 32
400d72f7:	e43781        	l32r	a8, 400d03d4 <_flash_cache_start+0x3bc>
400d72fa:	002882        	l32i	a8, a8, 0
400d72fd:	c8cc      	bnez.n	a8, 400d730d <nvs_flash_init_partition+0x19>
400d72ff:	01a0a2        	movi	a10, 1
400d7302:	201110        	or	a1, a1, a1
400d7305:	b06665        	call8	4008796c <xQueueCreateMutex>
400d7308:	e43381        	l32r	a8, 400d03d4 <_flash_cache_start+0x3bc>
400d730b:	08a9      	s32i.n	a10, a8, 0
400d730d:	f03d      	nop.n
400d730f:	f03d      	nop.n
400d7311:	f03d      	nop.n
400d7313:	f03d      	nop.n
400d7315:	e42f81        	l32r	a8, 400d03d4 <_flash_cache_start+0x3bc>
400d7318:	08a8      	l32i.n	a10, a8, 0
400d731a:	aa8c      	beqz.n	a10, 400d7328 <nvs_flash_init_partition+0x34>
400d731c:	0d0c      	movi.n	a13, 0
400d731e:	fc7c      	movi.n	a12, -1
400d7320:	0dbd      	mov.n	a11, a13
400d7322:	201110        	or	a1, a1, a1
400d7325:	b083e5        	call8	40087b64 <xQueueGenericReceive>
400d7328:	02ad      	mov.n	a10, a2
400d732a:	201110        	or	a1, a1, a1
400d732d:	ffef25        	call8	400d7220 <lookup_storage_from_name(char const*)>
400d7330:	4aec      	bnez.n	a10, 400d7358 <nvs_flash_init_partition+0x64>
400d7332:	02cd      	mov.n	a12, a2
400d7334:	2b0c      	movi.n	a11, 2
400d7336:	1a0c      	movi.n	a10, 1
400d7338:	201110        	or	a1, a1, a1
400d733b:	12c425        	call8	400e9f7c <esp_partition_find_first>
400d733e:	ba9c      	beqz.n	a10, 400d735d <nvs_flash_init_partition+0x69>
400d7340:	2ab8      	l32i.n	a11, a10, 8
400d7342:	3ac8      	l32i.n	a12, a10, 12
400d7344:	41ccc0        	srli	a12, a12, 12
400d7347:	41bcb0        	srli	a11, a11, 12
400d734a:	02ad      	mov.n	a10, a2
400d734c:	201110        	or	a1, a1, a1
400d734f:	fff065        	call8	400d7254 <nvs_flash_init_custom>
400d7352:	0a2d      	mov.n	a2, a10
400d7354:	000206        	j	400d7360 <nvs_flash_init_partition+0x6c>
400d7357:	020c00        	andb	b0, b12, b0
400d735a:	000086        	j	400d7360 <nvs_flash_init_partition+0x6c>
400d735d:	05a122        	movi	a2, 0x105
400d7360:	e41d81        	l32r	a8, 400d03d4 <_flash_cache_start+0x3bc>
400d7363:	08a8      	l32i.n	a10, a8, 0
400d7365:	8aac      	beqz.n	a10, 400d7391 <nvs_flash_init_partition+0x9d>
400d7367:	0d0c      	movi.n	a13, 0
400d7369:	0dcd      	mov.n	a12, a13
400d736b:	20bdd0        	or	a11, a13, a13
400d736e:	201110        	or	a1, a1, a1
400d7371:	b04725        	call8	400877e4 <xQueueGenericSend>
400d7374:	f01d      	retw.n
400d7376:	e41781        	l32r	a8, 400d03d4 <_flash_cache_start+0x3bc>
400d7379:	08a8      	l32i.n	a10, a8, 0
400d737b:	aa8c      	beqz.n	a10, 400d7389 <nvs_flash_init_partition+0x95>
400d737d:	0d0c      	movi.n	a13, 0
400d737f:	0dcd      	mov.n	a12, a13
400d7381:	0dbd      	mov.n	a11, a13
400d7383:	201110        	or	a1, a1, a1
400d7386:	b045e5        	call8	400877e4 <xQueueGenericSend>
400d7389:	02ad      	mov.n	a10, a2
400d738b:	201110        	or	a1, a1, a1
400d738e:	fd5265        	call8	400d48b4 <_Unwind_Resume>
400d7391:	f01d      	retw.n
	...

400d7394 <nvs_flash_init>:
400d7394:	004136        	entry	a1, 32
400d7397:	e410a1        	l32r	a10, 400d03d8 <_flash_cache_start+0x3c0>
400d739a:	fff5a5        	call8	400d72f4 <nvs_flash_init_partition>
400d739d:	0a2d      	mov.n	a2, a10
400d739f:	f01d      	retw.n
400d73a1:	000000        	ill

400d73a4 <nvs::Storage::clearNamespaces()>:
400d73a4:	004136        	entry	a1, 32
400d73a7:	38c222        	addi	a2, a2, 56
400d73aa:	02a8      	l32i.n	a10, a2, 0
400d73ac:	caac      	beqz.n	a10, 400d73dc <nvs::Storage::clearNamespaces()+0x38>
400d73ae:	0a88      	l32i.n	a8, a10, 0
400d73b0:	1a98      	l32i.n	a9, a10, 4
400d73b2:	388c      	beqz.n	a8, 400d73b9 <nvs::Storage::clearNamespaces()+0x15>
400d73b4:	1899      	s32i.n	a9, a8, 4
400d73b6:	000046        	j	400d73bb <nvs::Storage::clearNamespaces()+0x17>
400d73b9:	0299      	s32i.n	a9, a2, 0
400d73bb:	398c      	beqz.n	a9, 400d73c2 <nvs::Storage::clearNamespaces()+0x1e>
400d73bd:	0989      	s32i.n	a8, a9, 0
400d73bf:	000086        	j	400d73c5 <nvs::Storage::clearNamespaces()+0x21>
400d73c2:	016282        	s32i	a8, a2, 4
400d73c5:	f03d      	nop.n
400d73c7:	f03d      	nop.n
400d73c9:	f03d      	nop.n
400d73cb:	f03d      	nop.n
400d73cd:	022282        	l32i	a8, a2, 8
400d73d0:	ffc882        	addi	a8, a8, -1
400d73d3:	2289      	s32i.n	a8, a2, 8
400d73d5:	1341a5        	call8	400ea7f0 <operator delete(void*)>
400d73d8:	fff386        	j	400d73aa <nvs::Storage::clearNamespaces()+0x6>
400d73db:	f01d00        	subx8	a1, a13, a0
	...

400d73e0 <nvs::Storage::~Storage()>:
400d73e0:	004136        	entry	a1, 32
400d73e3:	02ad      	mov.n	a10, a2
400d73e5:	fffbe5        	call8	400d73a4 <nvs::Storage::clearNamespaces()>
400d73e8:	a248      	l32i.n	a4, a2, 40
400d73ea:	44ac      	beqz.n	a4, 400d7412 <nvs::Storage::~Storage()+0x32>
400d73ec:	24ac      	beqz.n	a4, 400d7412 <nvs::Storage::~Storage()+0x32>
400d73ee:	fcc432        	addi	a3, a4, -4
400d73f1:	0388      	l32i.n	a8, a3, 0
400d73f3:	a08880        	addx4	a8, a8, a8
400d73f6:	1138c0        	slli	a3, a8, 4
400d73f9:	803430        	add	a3, a4, a3
400d73fc:	0c1437        	beq	a4, a3, 400d740c <nvs::Storage::~Storage()+0x2c>
400d73ff:	b0c332        	addi	a3, a3, -80
400d7402:	44c3a2        	addi	a10, a3, 68
400d7405:	013e65        	call8	400d87ec <nvs::HashList::~HashList()>
400d7408:	fffc06        	j	400d73fc <nvs::Storage::~Storage()+0x1c>
400d740b:	c4a200        	extui	a10, a0, 2, 13
400d740e:	e5fc      	bnez.n	a5, 400d7450 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x34>
400d7410:	321376        	bt	b3, 400d7446 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x2a>
400d7413:	3200a0        	orbc	b0, b0, b10
400d7416:	900a62        	l8ui	a6, a10, 144
400d7419:	000000        	ill

400d741c <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)>:
400d741c:	00c136        	entry	a1, 96
400d741f:	e31941        	l32r	a4, 400d0084 <_flash_cache_start+0x6c>
400d7422:	0020c0        	memw
400d7425:	0448      	l32i.n	a4, a4, 0
400d7427:	0020c0        	memw
400d742a:	f149      	s32i.n	a4, a1, 60
400d742c:	f03d      	nop.n
400d742e:	f03d      	nop.n
400d7430:	f03d      	nop.n
400d7432:	f03d      	nop.n
400d7434:	4248      	l32i.n	a4, a2, 16
400d7436:	0b7416        	beqz	a4, 400d74f1 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xd5>
400d7439:	020c      	movi.n	a2, 0
400d743b:	6129      	s32i.n	a2, a1, 24
400d743d:	ffa0b2        	movi	a11, 255
400d7440:	11b9      	s32i.n	a11, a1, 4
400d7442:	01b9      	s32i.n	a11, a1, 0
400d7444:	1cc1f2        	addi	a15, a1, 28
400d7447:	18c1e2        	addi	a14, a1, 24
400d744a:	0d0c      	movi.n	a13, 0
400d744c:	8c4c      	movi.n	a12, 72
400d744e:	20a440        	or	a10, a4, a4
400d7451:	009e25        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d7454:	094a56        	bnez	a10, 400d74ec <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xd0>
400d7457:	ca1c      	movi.n	a10, 28
400d7459:	133ce5        	call8	400ea828 <operator new(unsigned int)>
400d745c:	0a2d      	mov.n	a2, a10
400d745e:	080c      	movi.n	a8, 0
400d7460:	0a89      	s32i.n	a8, a10, 0
400d7462:	1a89      	s32i.n	a8, a10, 4
400d7464:	fc0c      	movi.n	a12, 15
400d7466:	24c1b2        	addi	a11, a1, 36
400d7469:	aa8b      	addi.n	a10, a10, 8
400d746b:	e3dc81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d746e:	0008e0        	callx8	a8
400d7471:	1c0182        	l8ui	a8, a1, 28
400d7474:	184282        	s8i	a8, a2, 24
400d7477:	0020c0        	memw
400d747a:	f03d      	nop.n
400d747c:	f03d      	nop.n
400d747e:	f03d      	nop.n
400d7480:	f03d      	nop.n
400d7482:	390182        	l8ui	a8, a1, 57
400d7485:	1a4282        	s8i	a8, a2, 26
400d7488:	0020c0        	memw
400d748b:	f03d      	nop.n
400d748d:	f03d      	nop.n
400d748f:	f03d      	nop.n
400d7491:	f03d      	nop.n
400d7493:	380182        	l8ui	a8, a1, 56
400d7496:	194282        	s8i	a8, a2, 25
400d7499:	0020c0        	memw
400d749c:	f03d      	nop.n
400d749e:	f03d      	nop.n
400d74a0:	f03d      	nop.n
400d74a2:	f03d      	nop.n
400d74a4:	1388      	l32i.n	a8, a3, 4
400d74a6:	088c      	beqz.n	a8, 400d74aa <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x8e>
400d74a8:	1829      	s32i.n	a2, a8, 4
400d74aa:	f03d      	nop.n
400d74ac:	f03d      	nop.n
400d74ae:	f03d      	nop.n
400d74b0:	f03d      	nop.n
400d74b2:	1388      	l32i.n	a8, a3, 4
400d74b4:	0289      	s32i.n	a8, a2, 0
400d74b6:	080c      	movi.n	a8, 0
400d74b8:	1289      	s32i.n	a8, a2, 4
400d74ba:	1329      	s32i.n	a2, a3, 4
400d74bc:	f03d      	nop.n
400d74be:	f03d      	nop.n
400d74c0:	f03d      	nop.n
400d74c2:	f03d      	nop.n
400d74c4:	0388      	l32i.n	a8, a3, 0
400d74c6:	08cc      	bnez.n	a8, 400d74ca <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xae>
400d74c8:	0329      	s32i.n	a2, a3, 0
400d74ca:	f03d      	nop.n
400d74cc:	f03d      	nop.n
400d74ce:	f03d      	nop.n
400d74d0:	f03d      	nop.n
400d74d2:	2328      	l32i.n	a2, a3, 8
400d74d4:	221b      	addi.n	a2, a2, 1
400d74d6:	2329      	s32i.n	a2, a3, 8
400d74d8:	f03d      	nop.n
400d74da:	f03d      	nop.n
400d74dc:	f03d      	nop.n
400d74de:	f03d      	nop.n
400d74e0:	1e0122        	l8ui	a2, a1, 30
400d74e3:	6188      	l32i.n	a8, a1, 24
400d74e5:	282a      	add.n	a2, a8, a2
400d74e7:	6129      	s32i.n	a2, a1, 24
400d74e9:	ffd406        	j	400d743d <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x21>
400d74ec:	1448      	l32i.n	a4, a4, 4
400d74ee:	ffd106        	j	400d7436 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x1a>
400d74f1:	0020c0        	memw
400d74f4:	f138      	l32i.n	a3, a1, 60
400d74f6:	e2e321        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400d74f9:	0020c0        	memw
400d74fc:	0228      	l32i.n	a2, a2, 0
400d74fe:	021327        	beq	a3, a2, 400d7504 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xe8>
400d7501:	fedaa5        	call8	400d62ac <__stack_chk_fail>
400d7504:	f01d      	retw.n
	...

400d7508 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)>:
400d7508:	028136        	entry	a1, 0x140
400d750b:	e2de41        	l32r	a4, 400d0084 <_flash_cache_start+0x6c>
400d750e:	0020c0        	memw
400d7511:	0448      	l32i.n	a4, a4, 0
400d7513:	0020c0        	memw
400d7516:	476142        	s32i	a4, a1, 0x11c
400d7519:	f03d      	nop.n
400d751b:	f03d      	nop.n
400d751d:	f03d      	nop.n
400d751f:	f03d      	nop.n
400d7521:	4268      	l32i.n	a6, a2, 16
400d7523:	12e616        	beqz	a6, 400d7655 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x14d>
400d7526:	020c      	movi.n	a2, 0
400d7528:	6129      	s32i.n	a2, a1, 24
400d752a:	ffa0b2        	movi	a11, 255
400d752d:	11b9      	s32i.n	a11, a1, 4
400d752f:	01b9      	s32i.n	a11, a1, 0
400d7531:	fcaef2        	movi	a15, 0xfffffefc
400d7534:	20a122        	movi	a2, 0x120
400d7537:	221a      	add.n	a2, a2, a1
400d7539:	f2fa      	add.n	a15, a2, a15
400d753b:	f8aee2        	movi	a14, 0xfffffef8
400d753e:	e2ea      	add.n	a14, a2, a14
400d7540:	0d0c      	movi.n	a13, 0
400d7542:	2c4c      	movi.n	a12, 66
400d7544:	06ad      	mov.n	a10, a6
400d7546:	008ee5        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d7549:	103a56        	bnez	a10, 400d7650 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x148>
400d754c:	0328      	l32i.n	a2, a3, 0
400d754e:	3cc172        	addi	a7, a1, 60
400d7551:	042c      	movi.n	a4, 32
400d7553:	04cd      	mov.n	a12, a4
400d7555:	fcaeb2        	movi	a11, 0xfffffefc
400d7558:	20a152        	movi	a5, 0x120
400d755b:	551a      	add.n	a5, a5, a1
400d755d:	b5ba      	add.n	a11, a5, a11
400d755f:	07ad      	mov.n	a10, a7
400d7561:	e2cb81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d7564:	0008e0        	callx8	a8
400d7567:	814a      	add.n	a8, a1, a4
400d7569:	3cc852        	addi	a5, a8, 60
400d756c:	04cd      	mov.n	a12, a4
400d756e:	07bd      	mov.n	a11, a7
400d7570:	05ad      	mov.n	a10, a5
400d7572:	e2c781        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d7575:	0008e0        	callx8	a8
400d7578:	814a      	add.n	a8, a1, a4
400d757a:	5cc872        	addi	a7, a8, 92
400d757d:	04cd      	mov.n	a12, a4
400d757f:	05bd      	mov.n	a11, a5
400d7581:	07ad      	mov.n	a10, a7
400d7583:	e2c381        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d7586:	0008e0        	callx8	a8
400d7589:	814a      	add.n	a8, a1, a4
400d758b:	7cc852        	addi	a5, a8, 124
400d758e:	04cd      	mov.n	a12, a4
400d7590:	07bd      	mov.n	a11, a7
400d7592:	05ad      	mov.n	a10, a5
400d7594:	e2bf81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d7597:	0008e0        	callx8	a8
400d759a:	04cd      	mov.n	a12, a4
400d759c:	05bd      	mov.n	a11, a5
400d759e:	bca0a2        	movi	a10, 188
400d75a1:	80aa10        	add	a10, a10, a1
400d75a4:	e2bb81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d75a7:	0008e0        	callx8	a8
400d75aa:	04cd      	mov.n	a12, a4
400d75ac:	bca0b2        	movi	a11, 188
400d75af:	bb1a      	add.n	a11, a11, a1
400d75b1:	dca0a2        	movi	a10, 220
400d75b4:	aa1a      	add.n	a10, a10, a1
400d75b6:	e2b681        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d75b9:	0008e0        	callx8	a8
400d75bc:	050c      	movi.n	a5, 0
400d75be:	04cd      	mov.n	a12, a4
400d75c0:	dca0b2        	movi	a11, 220
400d75c3:	bb1a      	add.n	a11, a11, a1
400d75c5:	fca042        	movi	a4, 252
400d75c8:	a14a      	add.n	a10, a1, a4
400d75ca:	e2b181        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d75cd:	0008e0        	callx8	a8
400d75d0:	024d      	mov.n	a4, a2
400d75d2:	481257        	beq	a2, a5, 400d761e <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x116>
400d75d5:	fc0c      	movi.n	a12, 15
400d75d7:	b28b      	addi.n	a11, a2, 8
400d75d9:	04a182        	movi	a8, 0x104
400d75dc:	a18a      	add.n	a10, a1, a8
400d75de:	e38081        	l32r	a8, 400d03e0 <_flash_cache_start+0x3c8>
400d75e1:	0008e0        	callx8	a8
400d75e4:	dadc      	bnez.n	a10, 400d7605 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xfd>
400d75e6:	fc0192        	l8ui	a9, a1, 252
400d75e9:	180282        	l8ui	a8, a2, 24
400d75ec:	1a9987        	bne	a9, a8, 400d760a <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x102>
400d75ef:	ff0182        	l8ui	a8, a1, 255
400d75f2:	1a0292        	l8ui	a9, a2, 26
400d75f5:	173897        	bltu	a8, a9, 400d7610 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x108>
400d75f8:	190272        	l8ui	a7, a2, 25
400d75fb:	997a      	add.n	a9, a9, a7
400d75fd:	142897        	blt	a8, a9, 400d7615 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10d>
400d7600:	080c      	movi.n	a8, 0
400d7602:	000446        	j	400d7617 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7605:	080c      	movi.n	a8, 0
400d7607:	000306        	j	400d7617 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d760a:	080c      	movi.n	a8, 0
400d760c:	0001c6        	j	400d7617 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d760f:	080c00        	lsx	f0, a12, a0
400d7612:	000046        	j	400d7617 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7615:	180c      	movi.n	a8, 1
400d7617:	98cc      	bnez.n	a8, 400d7624 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11c>
400d7619:	180c      	movi.n	a8, 1
400d761b:	0001c6        	j	400d7626 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11e>
400d761e:	080c      	movi.n	a8, 0
400d7620:	000086        	j	400d7626 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11e>
400d7623:	080c00        	lsx	f0, a12, a0
400d7626:	388c      	beqz.n	a8, 400d762d <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x125>
400d7628:	1428      	l32i.n	a2, a4, 4
400d762a:	ffe886        	j	400d75d0 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xc8>
400d762d:	013256        	bnez	a2, 400d7644 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x13c>
400d7630:	ffa0f2        	movi	a15, 255
400d7633:	1f01e2        	l8ui	a14, a1, 31
400d7636:	24c1d2        	addi	a13, a1, 36
400d7639:	1d01c2        	l8ui	a12, a1, 29
400d763c:	1c01b2        	l8ui	a11, a1, 28
400d763f:	06ad      	mov.n	a10, a6
400d7641:	00ac65        	call8	400d8108 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d7644:	1e0122        	l8ui	a2, a1, 30
400d7647:	6148      	l32i.n	a4, a1, 24
400d7649:	242a      	add.n	a2, a4, a2
400d764b:	6129      	s32i.n	a2, a1, 24
400d764d:	ffb646        	j	400d752a <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x22>
400d7650:	1668      	l32i.n	a6, a6, 4
400d7652:	ffb346        	j	400d7523 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x1b>
400d7655:	0020c0        	memw
400d7658:	472132        	l32i	a3, a1, 0x11c
400d765b:	e28a21        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400d765e:	0020c0        	memw
400d7661:	0228      	l32i.n	a2, a2, 0
400d7663:	021327        	beq	a3, a2, 400d7669 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x161>
400d7666:	fec465        	call8	400d62ac <__stack_chk_fail>
400d7669:	f01d      	retw.n
	...

400d766c <nvs::Storage::init(unsigned int, unsigned int)>:
400d766c:	00c136        	entry	a1, 96
400d766f:	e28581        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400d7672:	0020c0        	memw
400d7675:	002882        	l32i	a8, a8, 0
400d7678:	0020c0        	memw
400d767b:	0f6182        	s32i	a8, a1, 60
400d767e:	20c440        	or	a12, a4, a4
400d7681:	03bd      	mov.n	a11, a3
400d7683:	10c2a2        	addi	a10, a2, 16
400d7686:	013865        	call8	400d8a0c <nvs::PageManager::load(unsigned int, unsigned int)>
400d7689:	8a8c      	beqz.n	a10, 400d7695 <nvs::Storage::init(unsigned int, unsigned int)+0x29>
400d768b:	030c      	movi.n	a3, 0
400d768d:	196232        	s32i	a3, a2, 100
400d7690:	0a2d      	mov.n	a2, a10
400d7692:	005e46        	j	400d780f <nvs::Storage::init(unsigned int, unsigned int)+0x1a3>
400d7695:	20a220        	or	a10, a2, a2
400d7698:	ffd0a5        	call8	400d73a4 <nvs::Storage::clearNamespaces()>
400d769b:	44c242        	addi	a4, a2, 68
400d769e:	08a032        	movi	a3, 8
400d76a1:	00b316        	beqz	a3, 400d76b0 <nvs::Storage::init(unsigned int, unsigned int)+0x44>
400d76a4:	080c      	movi.n	a8, 0
400d76a6:	0489      	s32i.n	a8, a4, 0
400d76a8:	330b      	addi.n	a3, a3, -1
400d76aa:	444b      	addi.n	a4, a4, 4
400d76ac:	fffc46        	j	400d76a1 <nvs::Storage::init(unsigned int, unsigned int)+0x35>
400d76af:	224200        	orb	b4, b2, b0
400d76b2:	941604        	lsi	f0, a6, 0x250
400d76b5:	0c0d      	mov.n	a0, a12
400d76b7:	413903        	lsi	f0, a9, 0x104
400d76ba:	ffa032        	movi	a3, 255
400d76bd:	1139      	s32i.n	a3, a1, 4
400d76bf:	0139      	s32i.n	a3, a1, 0
400d76c1:	1cc1f2        	addi	a15, a1, 28
400d76c4:	10c1e2        	addi	a14, a1, 16
400d76c7:	0d0c      	movi.n	a13, 0
400d76c9:	1c0c      	movi.n	a12, 1
400d76cb:	0dbd      	mov.n	a11, a13
400d76cd:	20a440        	or	a10, a4, a4
400d76d0:	007625        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d76d3:	0b2a56        	bnez	a10, 400d7789 <nvs::Storage::init(unsigned int, unsigned int)+0x11d>
400d76d6:	ca1c      	movi.n	a10, 28
400d76d8:	1314e5        	call8	400ea828 <operator new(unsigned int)>
400d76db:	0a3d      	mov.n	a3, a10
400d76dd:	080c      	movi.n	a8, 0
400d76df:	0a89      	s32i.n	a8, a10, 0
400d76e1:	1a89      	s32i.n	a8, a10, 4
400d76e3:	fc0c      	movi.n	a12, 15
400d76e5:	24c1b2        	addi	a11, a1, 36
400d76e8:	aa8b      	addi.n	a10, a10, 8
400d76ea:	e33c81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d76ed:	0008e0        	callx8	a8
400d76f0:	1d0182        	l8ui	a8, a1, 29
400d76f3:	0e1826        	beqi	a8, 1, 400d7705 <nvs::Storage::init(unsigned int, unsigned int)+0x99>
400d76f6:	e33bd1        	l32r	a13, 400d03e4 <_flash_cache_start+0x3cc>
400d76f9:	e33bc1        	l32r	a12, 400d03e8 <_flash_cache_start+0x3d0>
400d76fc:	86a0b2        	movi	a11, 134
400d76ff:	e33ba1        	l32r	a10, 400d03ec <_flash_cache_start+0x3d4>
400d7702:	033ca5        	call8	400daacc <__assert_func>
400d7705:	340182        	l8ui	a8, a1, 52
400d7708:	184382        	s8i	a8, a3, 24
400d770b:	0020c0        	memw
400d770e:	f03d      	nop.n
400d7710:	f03d      	nop.n
400d7712:	f03d      	nop.n
400d7714:	f03d      	nop.n
400d7716:	f288      	l32i.n	a8, a2, 60
400d7718:	088c      	beqz.n	a8, 400d771c <nvs::Storage::init(unsigned int, unsigned int)+0xb0>
400d771a:	1839      	s32i.n	a3, a8, 4
400d771c:	f03d      	nop.n
400d771e:	f03d      	nop.n
400d7720:	f03d      	nop.n
400d7722:	f03d      	nop.n
400d7724:	f288      	l32i.n	a8, a2, 60
400d7726:	0389      	s32i.n	a8, a3, 0
400d7728:	080c      	movi.n	a8, 0
400d772a:	1389      	s32i.n	a8, a3, 4
400d772c:	f239      	s32i.n	a3, a2, 60
400d772e:	f03d      	nop.n
400d7730:	f03d      	nop.n
400d7732:	f03d      	nop.n
400d7734:	f03d      	nop.n
400d7736:	e288      	l32i.n	a8, a2, 56
400d7738:	08cc      	bnez.n	a8, 400d773c <nvs::Storage::init(unsigned int, unsigned int)+0xd0>
400d773a:	e239      	s32i.n	a3, a2, 56
400d773c:	f03d      	nop.n
400d773e:	f03d      	nop.n
400d7740:	f03d      	nop.n
400d7742:	f03d      	nop.n
400d7744:	102282        	l32i	a8, a2, 64
400d7747:	881b      	addi.n	a8, a8, 1
400d7749:	106282        	s32i	a8, a2, 64
400d774c:	44c282        	addi	a8, a2, 68
400d774f:	f03d      	nop.n
400d7751:	f03d      	nop.n
400d7753:	f03d      	nop.n
400d7755:	1803a2        	l8ui	a10, a3, 24
400d7758:	4195a0        	srli	a9, a10, 5
400d775b:	130c      	movi.n	a3, 1
400d775d:	401a00        	ssl	a10
400d7760:	a13300        	sll	a3, a3
400d7763:	a08980        	addx4	a8, a9, a8
400d7766:	08a8      	l32i.n	a10, a8, 0
400d7768:	f97c      	movi.n	a9, -1
400d776a:	309930        	xor	a9, a9, a3
400d776d:	1099a0        	and	a9, a9, a10
400d7770:	203930        	or	a3, a9, a3
400d7773:	0839      	s32i.n	a3, a8, 0
400d7775:	f03d      	nop.n
400d7777:	f03d      	nop.n
400d7779:	f03d      	nop.n
400d777b:	f03d      	nop.n
400d777d:	1e0132        	l8ui	a3, a1, 30
400d7780:	4188      	l32i.n	a8, a1, 16
400d7782:	383a      	add.n	a3, a8, a3
400d7784:	4139      	s32i.n	a3, a1, 16
400d7786:	ffcc06        	j	400d76ba <nvs::Storage::init(unsigned int, unsigned int)+0x4e>
400d7789:	1448      	l32i.n	a4, a4, 4
400d778b:	ffc906        	j	400d76b3 <nvs::Storage::init(unsigned int, unsigned int)+0x47>
400d778e:	420000        	xorb	b0, b0, b0
400d7791:	321122        	l16ui	a2, a1, 100
400d7794:	af          	.byte 0xaf
400d7795:	fe          	.byte 0xfe
400d7796:	103430        	and	a3, a4, a3
400d7799:	01a082        	movi	a8, 1
400d779c:	203380        	or	a3, a3, a8
400d779f:	116232        	s32i	a3, a2, 68
400d77a2:	f03d      	nop.n
400d77a4:	f03d      	nop.n
400d77a6:	f03d      	nop.n
400d77a8:	f03d      	nop.n
400d77aa:	182242        	l32i	a4, a2, 96
400d77ad:	e22c31        	l32r	a3, 400d0060 <_flash_cache_start+0x48>
400d77b0:	104430        	and	a4, a4, a3
400d77b3:	e23231        	l32r	a3, 400d007c <_flash_cache_start+0x64>
400d77b6:	203430        	or	a3, a4, a3
400d77b9:	186232        	s32i	a3, a2, 96
400d77bc:	196282        	s32i	a8, a2, 100
400d77bf:	030c      	movi.n	a3, 0
400d77c1:	4139      	s32i.n	a3, a1, 16
400d77c3:	5139      	s32i.n	a3, a1, 20
400d77c5:	6139      	s32i.n	a3, a1, 24
400d77c7:	10c1b2        	addi	a11, a1, 16
400d77ca:	20a220        	or	a10, a2, a2
400d77cd:	ffc4e5        	call8	400d741c <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)>
400d77d0:	10c1b2        	addi	a11, a1, 16
400d77d3:	02ad      	mov.n	a10, a2
400d77d5:	ffd325        	call8	400d7508 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)>
400d77d8:	41a8      	l32i.n	a10, a1, 16
400d77da:	eaac      	beqz.n	a10, 400d780c <nvs::Storage::init(unsigned int, unsigned int)+0x1a0>
400d77dc:	0a28      	l32i.n	a2, a10, 0
400d77de:	1a38      	l32i.n	a3, a10, 4
400d77e0:	428c      	beqz.n	a2, 400d77e8 <nvs::Storage::init(unsigned int, unsigned int)+0x17c>
400d77e2:	1239      	s32i.n	a3, a2, 4
400d77e4:	000086        	j	400d77ea <nvs::Storage::init(unsigned int, unsigned int)+0x17e>
400d77e7:	413900        	srli	a3, a0, 9
400d77ea:	438c      	beqz.n	a3, 400d77f2 <nvs::Storage::init(unsigned int, unsigned int)+0x186>
400d77ec:	0329      	s32i.n	a2, a3, 0
400d77ee:	0000c6        	j	400d77f5 <nvs::Storage::init(unsigned int, unsigned int)+0x189>
400d77f1:	612200        	xsr.m2	a0
400d77f4:	f03d05        	call0	400c7bc8 <_rtc_text_end+0x7bc8>
400d77f7:	f03d      	nop.n
400d77f9:	f03d      	nop.n
400d77fb:	f03d      	nop.n
400d77fd:	062122        	l32i	a2, a1, 24
400d7800:	ffc222        	addi	a2, a2, -1
400d7803:	6129      	s32i.n	a2, a1, 24
400d7805:	12fea5        	call8	400ea7f0 <operator delete(void*)>
400d7808:	fff306        	j	400d77d8 <nvs::Storage::init(unsigned int, unsigned int)+0x16c>
400d780b:	a02200        	addx4	a2, a2, a0
400d780e:	20c000        	or	a12, a0, a0
400d7811:	214200        	srai	a4, a0, 2
400d7814:	0f          	.byte 0xf
400d7815:	e21b31        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d7818:	0020c0        	memw
400d781b:	002332        	l32i	a3, a3, 0
400d781e:	021437        	beq	a4, a3, 400d7824 <nvs::Storage::init(unsigned int, unsigned int)+0x1b8>
400d7821:	fea8a5        	call8	400d62ac <__stack_chk_fail>
400d7824:	f01d      	retw.n
	...

400d7828 <nvs::Page::Header::calculateCrc32()>:
400d7828:	004136        	entry	a1, 32
400d782b:	8c1c      	movi.n	a12, 24
400d782d:	b24b      	addi.n	a11, a2, 4
400d782f:	ffafa2        	movi	a10, -1
400d7832:	e2ef81        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d7835:	0008e0        	callx8	a8
400d7838:	0a2d      	mov.n	a2, a10
400d783a:	f01d      	retw.n

400d783c <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)>:
400d783c:	004136        	entry	a1, 32
400d783f:	f288      	l32i.n	a8, a2, 60
400d7841:	111837        	beq	a8, a3, 400d7856 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x1a>
400d7844:	e2ecd1        	l32r	a13, 400d03f4 <_flash_cache_start+0x3dc>
400d7847:	e2ecc1        	l32r	a12, 400d03f8 <_flash_cache_start+0x3e0>
400d784a:	80a1b2        	movi	a11, 0x180
400d784d:	e2eba1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7850:	201110        	or	a1, a1, a1
400d7853:	0327a5        	call8	400daacc <__assert_func>
400d7856:	f87c      	movi.n	a8, -1
400d7858:	f289      	s32i.n	a8, a2, 60
400d785a:	f03d      	nop.n
400d785c:	f03d      	nop.n
400d785e:	f03d      	nop.n
400d7860:	f03d      	nop.n
400d7862:	e2b8      	l32i.n	a11, a2, 56
400d7864:	7ea082        	movi	a8, 126
400d7867:	01b8b7        	bgeu	a8, a11, 400d786c <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x30>
400d786a:	08bd      	mov.n	a11, a8
400d786c:	434a      	add.n	a4, a3, a4
400d786e:	3ab4b7        	bgeu	a4, a11, 400d78ac <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x70>
400d7871:	18c2a2        	addi	a10, a2, 24
400d7874:	7da082        	movi	a8, 125
400d7877:	0db847        	bgeu	a8, a4, 400d7888 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x4c>
400d787a:	e2e1d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d787d:	e2e1c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d7880:	6b2c      	movi.n	a11, 38
400d7882:	e2e1a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7885:	032465        	call8	400daacc <__assert_func>
400d7888:	419440        	srli	a9, a4, 4
400d788b:	348040        	extui	a8, a4, 0, 4
400d788e:	1188f0        	slli	a8, a8, 1
400d7891:	a099a0        	addx4	a9, a9, a10
400d7894:	0998      	l32i.n	a9, a9, 0
400d7896:	400800        	ssr	a8
400d7899:	918090        	srl	a8, a9
400d789c:	148080        	extui	a8, a8, 0, 2
400d789f:	032866        	bnei	a8, 2, 400d78a6 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x6a>
400d78a2:	f249      	s32i.n	a4, a2, 60
400d78a4:	f01d      	retw.n
400d78a6:	441b      	addi.n	a4, a4, 1
400d78a8:	fff086        	j	400d786e <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x32>
400d78ab:	f01d00        	subx8	a1, a13, a0
	...

400d78b0 <nvs::Page::initialize()>:
400d78b0:	00a136        	entry	a1, 80
400d78b3:	e1f481        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400d78b6:	0020c0        	memw
400d78b9:	0888      	l32i.n	a8, a8, 0
400d78bb:	0020c0        	memw
400d78be:	b189      	s32i.n	a8, a1, 44
400d78c0:	f03d      	nop.n
400d78c2:	f03d      	nop.n
400d78c4:	f03d      	nop.n
400d78c6:	f03d      	nop.n
400d78c8:	3288      	l32i.n	a8, a2, 12
400d78ca:	0e0826        	beqi	a8, -1, 400d78dc <nvs::Page::initialize()+0x2c>
400d78cd:	e2cfd1        	l32r	a13, 400d040c <_flash_cache_start+0x3f4>
400d78d0:	e2d0c1        	l32r	a12, 400d0410 <_flash_cache_start+0x3f8>
400d78d3:	83a2b2        	movi	a11, 0x283
400d78d6:	e2c9a1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d78d9:	031f25        	call8	400daacc <__assert_func>
400d78dc:	e87c      	movi.n	a8, -2
400d78de:	3289      	s32i.n	a8, a2, 12
400d78e0:	381c      	movi.n	a8, 19
400d78e2:	15c192        	addi	a9, a1, 21
400d78e5:	d88c      	beqz.n	a8, 400d78f6 <nvs::Page::initialize()+0x46>
400d78e7:	fa7c      	movi.n	a10, -1
400d78e9:	0049a2        	s8i	a10, a9, 0
400d78ec:	0020c0        	memw
400d78ef:	880b      	addi.n	a8, a8, -1
400d78f1:	991b      	addi.n	a9, a9, 1
400d78f3:	fffb86        	j	400d78e5 <nvs::Page::initialize()+0x35>
400d78f6:	032282        	l32i	a8, a2, 12
400d78f9:	036182        	s32i	a8, a1, 12
400d78fc:	f03d      	nop.n
400d78fe:	f03d      	nop.n
400d7900:	f03d      	nop.n
400d7902:	f03d      	nop.n
400d7904:	4288      	l32i.n	a8, a2, 16
400d7906:	4189      	s32i.n	a8, a1, 16
400d7908:	f03d      	nop.n
400d790a:	f03d      	nop.n
400d790c:	f03d      	nop.n
400d790e:	0020f0        	nop
400d7911:	140282        	l8ui	a8, a2, 20
400d7914:	144182        	s8i	a8, a1, 20
400d7917:	0020c0        	memw
400d791a:	a1cb      	addi.n	a10, a1, 12
400d791c:	fff0a5        	call8	400d7828 <nvs::Page::Header::calculateCrc32()>
400d791f:	a1a9      	s32i.n	a10, a1, 40
400d7921:	0c2c      	movi.n	a12, 32
400d7923:	b1cb      	addi.n	a11, a1, 12
400d7925:	f03d      	nop.n
400d7927:	f03d      	nop.n
400d7929:	22a8      	l32i.n	a10, a2, 8
400d792b:	aec825        	call8	400865ac <spi_flash_write>
400d792e:	7a8c      	beqz.n	a10, 400d7939 <nvs::Page::initialize()+0x89>
400d7930:	080c      	movi.n	a8, 0
400d7932:	3289      	s32i.n	a8, a2, 12
400d7934:	0a2d      	mov.n	a2, a10
400d7936:	000646        	j	400d7953 <nvs::Page::initialize()+0xa3>
400d7939:	080c      	movi.n	a8, 0
400d793b:	e289      	s32i.n	a8, a2, 56
400d793d:	18c282        	addi	a8, a2, 24
400d7940:	820c      	movi.n	a2, 8
400d7942:	a28c      	beqz.n	a2, 400d7950 <nvs::Page::initialize()+0xa0>
400d7944:	f97c      	movi.n	a9, -1
400d7946:	0899      	s32i.n	a9, a8, 0
400d7948:	229a      	add.n	a2, a2, a9
400d794a:	884b      	addi.n	a8, a8, 4
400d794c:	fffc86        	j	400d7942 <nvs::Page::initialize()+0x92>
400d794f:	a02200        	addx4	a2, a2, a0
400d7952:	20c000        	or	a12, a0, a0
400d7955:	219200        	srai	a9, a0, 2
400d7958:	810b      	addi.n	a8, a1, -1
400d795a:	e1ca      	add.n	a14, a1, a12
400d795c:	0020c0        	memw
400d795f:	002882        	l32i	a8, a8, 0
400d7962:	021987        	beq	a9, a8, 400d7968 <nvs::Page::initialize()+0xb8>
400d7965:	fe9465        	call8	400d62ac <__stack_chk_fail>
400d7968:	f01d      	retw.n
	...

400d796c <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>:
400d796c:	006136        	entry	a1, 48
400d796f:	7da082        	movi	a8, 125
400d7972:	11b837        	bgeu	a8, a3, 400d7987 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x1b>
400d7975:	e2a7d1        	l32r	a13, 400d0414 <_flash_cache_start+0x3fc>
400d7978:	e2a8c1        	l32r	a12, 400d0418 <_flash_cache_start+0x400>
400d797b:	98a2b2        	movi	a11, 0x298
400d797e:	e29fa1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7981:	201110        	or	a1, a1, a1
400d7984:	031465        	call8	400daacc <__assert_func>
400d7987:	18c2a2        	addi	a10, a2, 24
400d798a:	7da082        	movi	a8, 125
400d798d:	10b837        	bgeu	a8, a3, 400d79a1 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x35>
400d7990:	e29cd1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7993:	e2a2c1        	l32r	a12, 400d041c <_flash_cache_start+0x404>
400d7996:	fb2c      	movi.n	a11, 47
400d7998:	e29ca1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d799b:	201110        	or	a1, a1, a1
400d799e:	0312e5        	call8	400daacc <__assert_func>
400d79a1:	418430        	srli	a8, a3, 4
400d79a4:	343030        	extui	a3, a3, 0, 4
400d79a7:	1133f0        	slli	a3, a3, 1
400d79aa:	401300        	ssl	a3
400d79ad:	a14400        	sll	a4, a4
400d79b0:	1188e0        	slli	a8, a8, 2
400d79b3:	80aa80        	add	a10, a10, a8
400d79b6:	002ab2        	l32i	a11, a10, 0
400d79b9:	03a092        	movi	a9, 3
400d79bc:	401300        	ssl	a3
400d79bf:	a13900        	sll	a3, a9
400d79c2:	f97c      	movi.n	a9, -1
400d79c4:	303930        	xor	a3, a9, a3
400d79c7:	1033b0        	and	a3, a3, a11
400d79ca:	204340        	or	a4, a3, a4
400d79cd:	0a49      	s32i.n	a4, a10, 0
400d79cf:	18c232        	addi	a3, a2, 24
400d79d2:	338a      	add.n	a3, a3, a8
400d79d4:	f03d      	nop.n
400d79d6:	f03d      	nop.n
400d79d8:	0338      	l32i.n	a3, a3, 0
400d79da:	3139      	s32i.n	a3, a1, 12
400d79dc:	f03d      	nop.n
400d79de:	f03d      	nop.n
400d79e0:	f03d      	nop.n
400d79e2:	f03d      	nop.n
400d79e4:	22a8      	l32i.n	a10, a2, 8
400d79e6:	a8aa      	add.n	a10, a8, a10
400d79e8:	4c0c      	movi.n	a12, 4
400d79ea:	b1cb      	addi.n	a11, a1, 12
400d79ec:	20caa2        	addi	a10, a10, 32
400d79ef:	aebbe5        	call8	400865ac <spi_flash_write>
400d79f2:	6a8c      	beqz.n	a10, 400d79fc <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x90>
400d79f4:	030c      	movi.n	a3, 0
400d79f6:	3239      	s32i.n	a3, a2, 12
400d79f8:	0a2d      	mov.n	a2, a10
400d79fa:	f01d      	retw.n
400d79fc:	020c      	movi.n	a2, 0
400d79fe:	f01d      	retw.n

400d7a00 <nvs::Page::writeEntry(nvs::Item const&)>:
400d7a00:	004136        	entry	a1, 32
400d7a03:	e288      	l32i.n	a8, a2, 56
400d7a05:	7da092        	movi	a9, 125
400d7a08:	0eb987        	bgeu	a9, a8, 400d7a1a <nvs::Page::writeEntry(nvs::Item const&)+0x1a>
400d7a0b:	e285d1        	l32r	a13, 400d0420 <_flash_cache_start+0x408>
400d7a0e:	e285c1        	l32r	a12, 400d0424 <_flash_cache_start+0x40c>
400d7a11:	c5a0b2        	movi	a11, 197
400d7a14:	e285a1        	l32r	a10, 400d0428 <_flash_cache_start+0x410>
400d7a17:	030b65        	call8	400daacc <__assert_func>
400d7a1a:	22a8      	l32i.n	a10, a2, 8
400d7a1c:	1188b0        	slli	a8, a8, 5
400d7a1f:	80aa80        	add	a10, a10, a8
400d7a22:	20a0c2        	movi	a12, 32
400d7a25:	03bd      	mov.n	a11, a3
400d7a27:	40caa2        	addi	a10, a10, 64
400d7a2a:	0157a5        	call8	400d8fa4 <nvs::nvs_flash_write(unsigned int, void const*, unsigned int)>
400d7a2d:	8a8c      	beqz.n	a10, 400d7a39 <nvs::Page::writeEntry(nvs::Item const&)+0x39>
400d7a2f:	080c      	movi.n	a8, 0
400d7a31:	3289      	s32i.n	a8, a2, 12
400d7a33:	0a2d      	mov.n	a2, a10
400d7a35:	f01d      	retw.n
400d7a37:	c20000        	quou	a0, a0, a0
400d7a3a:	b202a0        	mulsh	a0, a2, a10
400d7a3d:	200e22        	l8ui	a2, a14, 32
400d7a40:	a520a2        	l32i	a10, a0, 0x294
400d7a43:	ecfff2        	s32ri	a15, a15, 0x3b0
400d7a46:	88ca      	add.n	a8, a8, a12
400d7a48:	0866f2        	s32i	a15, a6, 32
400d7a4b:	e28803        	lsip	f0, a8, 0x388
400d7a4e:	f289      	s32i.n	a8, a2, 60
400d7a50:	f03d      	nop.n
400d7a52:	f03d      	nop.n
400d7a54:	f03d      	nop.n
400d7a56:	f03d      	nop.n
400d7a58:	201282        	l16ui	a8, a2, 64
400d7a5b:	881b      	addi.n	a8, a8, 1
400d7a5d:	205282        	s16i	a8, a2, 64
400d7a60:	0020c0        	memw
400d7a63:	f03d      	nop.n
400d7a65:	f03d      	nop.n
400d7a67:	f03d      	nop.n
400d7a69:	f03d      	nop.n
400d7a6b:	e288      	l32i.n	a8, a2, 56
400d7a6d:	881b      	addi.n	a8, a8, 1
400d7a6f:	e289      	s32i.n	a8, a2, 56
400d7a71:	020c      	movi.n	a2, 0
400d7a73:	f01d      	retw.n
400d7a75:	0a2d      	mov.n	a2, a10
400d7a77:	f01d      	retw.n
400d7a79:	000000        	ill

400d7a7c <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)>:
400d7a7c:	006136        	entry	a1, 48
400d7a7f:	7ea062        	movi	a6, 126
400d7a82:	11b647        	bgeu	a6, a4, 400d7a97 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x1b>
400d7a85:	e269d1        	l32r	a13, 400d042c <_flash_cache_start+0x414>
400d7a88:	e26ac1        	l32r	a12, 400d0430 <_flash_cache_start+0x418>
400d7a8b:	a7a2b2        	movi	a11, 0x2a7
400d7a8e:	e25ba1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7a91:	201110        	or	a1, a1, a1
400d7a94:	030365        	call8	400daacc <__assert_func>
400d7a97:	113347        	bltu	a3, a4, 400d7aac <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x30>
400d7a9a:	e266d1        	l32r	a13, 400d0434 <_flash_cache_start+0x41c>
400d7a9d:	e264c1        	l32r	a12, 400d0430 <_flash_cache_start+0x418>
400d7aa0:	a8a2b2        	movi	a11, 0x2a8
400d7aa3:	e256a1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7aa6:	201110        	or	a1, a1, a1
400d7aa9:	030225        	call8	400daacc <__assert_func>
400d7aac:	440b      	addi.n	a4, a4, -1
400d7aae:	41a440        	srli	a10, a4, 4
400d7ab1:	02a437        	bge	a4, a3, 400d7ab7 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x3b>
400d7ab4:	002146        	j	400d7b3d <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xc1>
400d7ab7:	18c2b2        	addi	a11, a2, 24
400d7aba:	7da062        	movi	a6, 125
400d7abd:	10b647        	bgeu	a6, a4, 400d7ad1 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x55>
400d7ac0:	e250d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7ac3:	e256c1        	l32r	a12, 400d041c <_flash_cache_start+0x404>
400d7ac6:	fb2c      	movi.n	a11, 47
400d7ac8:	e250a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7acb:	201110        	or	a1, a1, a1
400d7ace:	02ffe5        	call8	400daacc <__assert_func>
400d7ad1:	418440        	srli	a8, a4, 4
400d7ad4:	349040        	extui	a9, a4, 0, 4
400d7ad7:	1199f0        	slli	a9, a9, 1
400d7ada:	401900        	ssl	a9
400d7add:	a16500        	sll	a6, a5
400d7ae0:	a088b0        	addx4	a8, a8, a11
400d7ae3:	08d8      	l32i.n	a13, a8, 0
400d7ae5:	3b0c      	movi.n	a11, 3
400d7ae7:	401900        	ssl	a9
400d7aea:	a1bb00        	sll	a11, a11
400d7aed:	f97c      	movi.n	a9, -1
400d7aef:	3099b0        	xor	a9, a9, a11
400d7af2:	1099d0        	and	a9, a9, a13
400d7af5:	209960        	or	a9, a9, a6
400d7af8:	0899      	s32i.n	a9, a8, 0
400d7afa:	081437        	beq	a4, a3, 400d7b06 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x8a>
400d7afd:	640b      	addi.n	a6, a4, -1
400d7aff:	416460        	srli	a6, a6, 4
400d7b02:	0000c6        	j	400d7b09 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x8d>
400d7b05:	af6200        	f64cmph	a6, a2, a0, 10
400d7b08:	ff          	.byte 0xff
400d7b09:	291a67        	beq	a10, a6, 400d7b36 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xba>
400d7b0c:	18c282        	addi	a8, a2, 24
400d7b0f:	11aae0        	slli	a10, a10, 2
400d7b12:	8088a0        	add	a8, a8, a10
400d7b15:	002882        	l32i	a8, a8, 0
400d7b18:	3189      	s32i.n	a8, a1, 12
400d7b1a:	f03d      	nop.n
400d7b1c:	f03d      	nop.n
400d7b1e:	f03d      	nop.n
400d7b20:	f03d      	nop.n
400d7b22:	2288      	l32i.n	a8, a2, 8
400d7b24:	aa8a      	add.n	a10, a10, a8
400d7b26:	4c0c      	movi.n	a12, 4
400d7b28:	b1cb      	addi.n	a11, a1, 12
400d7b2a:	20caa2        	addi	a10, a10, 32
400d7b2d:	aea7e5        	call8	400865ac <spi_flash_write>
400d7b30:	2a8c      	beqz.n	a10, 400d7b36 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xba>
400d7b32:	0a2d      	mov.n	a2, a10
400d7b34:	f01d      	retw.n
400d7b36:	440b      	addi.n	a4, a4, -1
400d7b38:	06ad      	mov.n	a10, a6
400d7b3a:	ffdcc6        	j	400d7ab1 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x35>
400d7b3d:	020c      	movi.n	a2, 0
400d7b3f:	f01d      	retw.n
400d7b41:	000000        	ill

400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>:
400d7b44:	004136        	entry	a1, 32
400d7b47:	7da082        	movi	a8, 125
400d7b4a:	0eb837        	bgeu	a8, a3, 400d7b5c <nvs::Page::readEntry(unsigned int, nvs::Item&) const+0x18>
400d7b4d:	e234d1        	l32r	a13, 400d0420 <_flash_cache_start+0x408>
400d7b50:	e235c1        	l32r	a12, 400d0424 <_flash_cache_start+0x40c>
400d7b53:	c5a0b2        	movi	a11, 197
400d7b56:	e234a1        	l32r	a10, 400d0428 <_flash_cache_start+0x410>
400d7b59:	02f725        	call8	400daacc <__assert_func>
400d7b5c:	0222a2        	l32i	a10, a2, 8
400d7b5f:	1133b0        	slli	a3, a3, 5
400d7b62:	80aa30        	add	a10, a10, a3
400d7b65:	0c2c      	movi.n	a12, 32
400d7b67:	20b440        	or	a11, a4, a4
400d7b6a:	40caa2        	addi	a10, a10, 64
400d7b6d:	014465        	call8	400d8fb4 <nvs::nvs_flash_read(unsigned int, void*, unsigned int)>
400d7b70:	2acc      	bnez.n	a10, 400d7b76 <nvs::Page::readEntry(unsigned int, nvs::Item&) const+0x32>
400d7b72:	020c      	movi.n	a2, 0
400d7b74:	f01d      	retw.n
400d7b76:	0a2d      	mov.n	a2, a10
400d7b78:	f01d      	retw.n
	...

400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>:
400d7b7c:	00a136        	entry	a1, 80
400d7b7f:	e14141        	l32r	a4, 400d0084 <_flash_cache_start+0x6c>
400d7b82:	0020c0        	memw
400d7b85:	0448      	l32i.n	a4, a4, 0
400d7b87:	0020c0        	memw
400d7b8a:	b149      	s32i.n	a4, a1, 44
400d7b8c:	18c242        	addi	a4, a2, 24
400d7b8f:	7da082        	movi	a8, 125
400d7b92:	13b837        	bgeu	a8, a3, 400d7ba9 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x2d>
400d7b95:	0020f0        	nop
400d7b98:	0020f0        	nop
400d7b9b:	e219d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7b9e:	e219c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d7ba1:	6b2c      	movi.n	a11, 38
400d7ba3:	e219a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7ba6:	02f265        	call8	400daacc <__assert_func>
400d7ba9:	419430        	srli	a9, a3, 4
400d7bac:	348030        	extui	a8, a3, 0, 4
400d7baf:	1188f0        	slli	a8, a8, 1
400d7bb2:	a09940        	addx4	a9, a9, a4
400d7bb5:	0998      	l32i.n	a9, a9, 0
400d7bb7:	400800        	ssr	a8
400d7bba:	918090        	srl	a8, a9
400d7bbd:	148080        	extui	a8, a8, 0, 2
400d7bc0:	fec892        	addi	a9, a8, -2
400d7bc3:	0e29b6        	bltui	a9, 2, 400d7bd5 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x59>
400d7bc6:	e21cd1        	l32r	a13, 400d0438 <_flash_cache_start+0x420>
400d7bc9:	e21cc1        	l32r	a12, 400d043c <_flash_cache_start+0x424>
400d7bcc:	49a1b2        	movi	a11, 0x149
400d7bcf:	e20ba1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7bd2:	02efa5        	call8	400daacc <__assert_func>
400d7bd5:	022826        	beqi	a8, 2, 400d7bdb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x5f>
400d7bd8:	003a06        	j	400d7cc4 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x148>
400d7bdb:	c1cb      	addi.n	a12, a1, 12
400d7bdd:	03bd      	mov.n	a11, a3
400d7bdf:	02ad      	mov.n	a10, a2
400d7be1:	fff625        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d7be4:	0cda56        	bnez	a10, 400d7cb5 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x139>
400d7be7:	a1cb      	addi.n	a10, a1, 12
400d7be9:	013665        	call8	400d8f50 <nvs::Item::calculateCrc32() const>
400d7bec:	4158      	l32i.n	a5, a1, 16
400d7bee:	3a1a57        	beq	a10, a5, 400d7c2c <nvs::Page::eraseEntryAndSpan(unsigned int)+0xb0>
400d7bf1:	0c0c      	movi.n	a12, 0
400d7bf3:	03bd      	mov.n	a11, a3
400d7bf5:	44c2a2        	addi	a10, a2, 68
400d7bf8:	00c8a5        	call8	400d8884 <nvs::HashList::erase(unsigned int, bool)>
400d7bfb:	0c0c      	movi.n	a12, 0
400d7bfd:	03bd      	mov.n	a11, a3
400d7bff:	02ad      	mov.n	a10, a2
400d7c01:	ffd6a5        	call8	400d796c <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d7c04:	201242        	l16ui	a4, a2, 64
400d7c07:	440b      	addi.n	a4, a4, -1
400d7c09:	205242        	s16i	a4, a2, 64
400d7c0c:	0020c0        	memw
400d7c0f:	f03d      	nop.n
400d7c11:	f03d      	nop.n
400d7c13:	f03d      	nop.n
400d7c15:	f03d      	nop.n
400d7c17:	211242        	l16ui	a4, a2, 66
400d7c1a:	441b      	addi.n	a4, a4, 1
400d7c1c:	215242        	s16i	a4, a2, 66
400d7c1f:	0020c0        	memw
400d7c22:	094a56        	bnez	a10, 400d7cba <nvs::Page::eraseEntryAndSpan(unsigned int)+0x13e>
400d7c25:	150c      	movi.n	a5, 1
400d7c27:	002a46        	j	400d7cd4 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x158>
400d7c2a:	0c0000        	lsi	f0, a0, 48
400d7c2d:	bd1c      	movi.n	a13, 27
400d7c2f:	c2a203        	lsi	f0, a2, 0x308
400d7c32:	c52544        	lsi	f4, a5, 0x314
400d7c35:	015200        	slli	a5, a2, 32
400d7c38:	0e          	.byte 0xe
400d7c39:	c35a      	add.n	a12, a3, a5
400d7c3b:	8c0b      	addi.n	a8, a12, -1
400d7c3d:	502837        	blt	a8, a3, 400d7c91 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x115>
400d7c40:	7da092        	movi	a9, 125
400d7c43:	0db987        	bgeu	a9, a8, 400d7c54 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xd8>
400d7c46:	e1eed1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7c49:	e1eec1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d7c4c:	6b2c      	movi.n	a11, 38
400d7c4e:	e1eea1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7c51:	02e7a5        	call8	400daacc <__assert_func>
400d7c54:	41a480        	srli	a10, a8, 4
400d7c57:	349080        	extui	a9, a8, 0, 4
400d7c5a:	11b9f0        	slli	a11, a9, 1
400d7c5d:	a0aa40        	addx4	a10, a10, a4
400d7c60:	0a98      	l32i.n	a9, a10, 0
400d7c62:	400b00        	ssr	a11
400d7c65:	919090        	srl	a9, a9
400d7c68:	149090        	extui	a9, a9, 0, 2
400d7c6b:	0a2966        	bnei	a9, 2, 400d7c79 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xfd>
400d7c6e:	201292        	l16ui	a9, a2, 64
400d7c71:	990b      	addi.n	a9, a9, -1
400d7c73:	205292        	s16i	a9, a2, 64
400d7c76:	0020c0        	memw
400d7c79:	f03d      	nop.n
400d7c7b:	f03d      	nop.n
400d7c7d:	f03d      	nop.n
400d7c7f:	f03d      	nop.n
400d7c81:	211292        	l16ui	a9, a2, 66
400d7c84:	991b      	addi.n	a9, a9, 1
400d7c86:	215292        	s16i	a9, a2, 66
400d7c89:	0020c0        	memw
400d7c8c:	880b      	addi.n	a8, a8, -1
400d7c8e:	ffeac6        	j	400d7c3d <nvs::Page::eraseEntryAndSpan(unsigned int)+0xc1>
400d7c91:	0f1566        	bnei	a5, 1, 400d7ca4 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x128>
400d7c94:	00a0c2        	movi	a12, 0
400d7c97:	20b330        	or	a11, a3, a3
400d7c9a:	20a220        	or	a10, a2, a2
400d7c9d:	ffcce5        	call8	400d796c <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d7ca0:	000306        	j	400d7cb0 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x134>
400d7ca3:	a0d200        	addx4	a13, a2, a0
400d7ca6:	b33000        	movgez	a3, a0, a0
400d7ca9:	a22020        	muluh	a2, a0, a2
400d7cac:	dce520        	lsi	f2, a5, 0x370
400d7caf:	ff          	.byte 0xff
400d7cb0:	0aac      	beqz.n	a10, 400d7cd4 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x158>
400d7cb2:	000246        	j	400d7cbf <nvs::Page::eraseEntryAndSpan(unsigned int)+0x143>
400d7cb5:	0a2d      	mov.n	a2, a10
400d7cb7:	001006        	j	400d7cfb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d7cba:	0a2d      	mov.n	a2, a10
400d7cbc:	000ec6        	j	400d7cfb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d7cbf:	0a2d      	mov.n	a2, a10
400d7cc1:	000d86        	j	400d7cfb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d7cc4:	00a0c2        	movi	a12, 0
400d7cc7:	20b330        	or	a11, a3, a3
400d7cca:	20a220        	or	a10, a2, a2
400d7ccd:	ffc9e5        	call8	400d796c <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d7cd0:	fadc      	bnez.n	a10, 400d7cf3 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x177>
400d7cd2:	150c      	movi.n	a5, 1
400d7cd4:	0f2242        	l32i	a4, a2, 60
400d7cd7:	0a9347        	bne	a3, a4, 400d7ce5 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x169>
400d7cda:	20c550        	or	a12, a5, a5
400d7cdd:	20b330        	or	a11, a3, a3
400d7ce0:	02ad      	mov.n	a10, a2
400d7ce2:	ffb5a5        	call8	400d783c <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)>
400d7ce5:	353a      	add.n	a3, a5, a3
400d7ce7:	e248      	l32i.n	a4, a2, 56
400d7ce9:	0bb437        	bgeu	a4, a3, 400d7cf8 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17c>
400d7cec:	e239      	s32i.n	a3, a2, 56
400d7cee:	020c      	movi.n	a2, 0
400d7cf0:	0001c6        	j	400d7cfb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d7cf3:	0a2d      	mov.n	a2, a10
400d7cf5:	000086        	j	400d7cfb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d7cf8:	00a022        	movi	a2, 0
400d7cfb:	0020c0        	memw
400d7cfe:	0b2142        	l32i	a4, a1, 44
400d7d01:	e0e031        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d7d04:	0020c0        	memw
400d7d07:	002332        	l32i	a3, a3, 0
400d7d0a:	021437        	beq	a4, a3, 400d7d10 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x194>
400d7d0d:	fe59e5        	call8	400d62ac <__stack_chk_fail>
400d7d10:	f01d      	retw.n
	...

400d7d14 <nvs::Page::copyItems(nvs::Page&)>:
400d7d14:	00a136        	entry	a1, 80
400d7d17:	e0db41        	l32r	a4, 400d0084 <_flash_cache_start+0x6c>
400d7d1a:	0020c0        	memw
400d7d1d:	002442        	l32i	a4, a4, 0
400d7d20:	0020c0        	memw
400d7d23:	0b6142        	s32i	a4, a1, 44
400d7d26:	f03d      	nop.n
400d7d28:	f03d      	nop.n
400d7d2a:	f03d      	nop.n
400d7d2c:	f03d      	nop.n
400d7d2e:	0f2242        	l32i	a4, a2, 60
400d7d31:	020466        	bnei	a4, -1, 400d7d37 <nvs::Page::copyItems(nvs::Page&)+0x23>
400d7d34:	003146        	j	400d7dfd <nvs::Page::copyItems(nvs::Page&)+0xe9>
400d7d37:	3348      	l32i.n	a4, a3, 12
400d7d39:	070466        	bnei	a4, -1, 400d7d44 <nvs::Page::copyItems(nvs::Page&)+0x30>
400d7d3c:	03ad      	mov.n	a10, a3
400d7d3e:	ffb725        	call8	400d78b0 <nvs::Page::initialize()>
400d7d41:	0bfa56        	bnez	a10, 400d7e04 <nvs::Page::copyItems(nvs::Page&)+0xf0>
400d7d44:	f248      	l32i.n	a4, a2, 60
400d7d46:	000086        	j	400d7d4c <nvs::Page::copyItems(nvs::Page&)+0x38>
400d7d49:	054d00        	extui	a4, a0, 29, 1
400d7d4c:	7da052        	movi	a5, 125
400d7d4f:	02b547        	bgeu	a5, a4, 400d7d55 <nvs::Page::copyItems(nvs::Page&)+0x41>
400d7d52:	002cc6        	j	400d7e09 <nvs::Page::copyItems(nvs::Page&)+0xf5>
400d7d55:	18c252        	addi	a5, a2, 24
400d7d58:	7da082        	movi	a8, 125
400d7d5b:	0db847        	bgeu	a8, a4, 400d7d6c <nvs::Page::copyItems(nvs::Page&)+0x58>
400d7d5e:	e1a8d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7d61:	e1a8c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d7d64:	6b2c      	movi.n	a11, 38
400d7d66:	e1a8a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7d69:	02d625        	call8	400daacc <__assert_func>
400d7d6c:	419440        	srli	a9, a4, 4
400d7d6f:	348040        	extui	a8, a4, 0, 4
400d7d72:	1188f0        	slli	a8, a8, 1
400d7d75:	a09950        	addx4	a9, a9, a5
400d7d78:	0998      	l32i.n	a9, a9, 0
400d7d7a:	400800        	ssr	a8
400d7d7d:	918090        	srl	a8, a9
400d7d80:	148080        	extui	a8, a8, 0, 2
400d7d83:	1b2826        	beqi	a8, 2, 400d7da2 <nvs::Page::copyItems(nvs::Page&)+0x8e>
400d7d86:	f258      	l32i.n	a5, a2, 60
400d7d88:	0e9457        	bne	a4, a5, 400d7d9a <nvs::Page::copyItems(nvs::Page&)+0x86>
400d7d8b:	e1aed1        	l32r	a13, 400d0444 <_flash_cache_start+0x42c>
400d7d8e:	e1aec1        	l32r	a12, 400d0448 <_flash_cache_start+0x430>
400d7d91:	a1a1b2        	movi	a11, 0x1a1
400d7d94:	e19aa1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7d97:	02d365        	call8	400daacc <__assert_func>
400d7d9a:	441b      	addi.n	a4, a4, 1
400d7d9c:	ffeb06        	j	400d7d4c <nvs::Page::copyItems(nvs::Page&)+0x38>
400d7d9f:	000000        	ill
400d7da2:	c1cb      	addi.n	a12, a1, 12
400d7da4:	04bd      	mov.n	a11, a4
400d7da6:	02ad      	mov.n	a10, a2
400d7da8:	ffd9a5        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d7dab:	05fa56        	bnez	a10, 400d7e0e <nvs::Page::copyItems(nvs::Page&)+0xfa>
400d7dae:	0e23c2        	l32i	a12, a3, 56
400d7db1:	0cc1b2        	addi	a11, a1, 12
400d7db4:	44c3a2        	addi	a10, a3, 68
400d7db7:	00a425        	call8	400d87f8 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d7dba:	b1cb      	addi.n	a11, a1, 12
400d7dbc:	03ad      	mov.n	a10, a3
400d7dbe:	ffc425        	call8	400d7a00 <nvs::Page::writeEntry(nvs::Item const&)>
400d7dc1:	04fa56        	bnez	a10, 400d7e14 <nvs::Page::copyItems(nvs::Page&)+0x100>
400d7dc4:	0e0152        	l8ui	a5, a1, 14
400d7dc7:	545a      	add.n	a5, a4, a5
400d7dc9:	7ea082        	movi	a8, 126
400d7dcc:	0eb857        	bgeu	a8, a5, 400d7dde <nvs::Page::copyItems(nvs::Page&)+0xca>
400d7dcf:	e197d1        	l32r	a13, 400d042c <_flash_cache_start+0x414>
400d7dd2:	e19dc1        	l32r	a12, 400d0448 <_flash_cache_start+0x430>
400d7dd5:	b2a1b2        	movi	a11, 0x1b2
400d7dd8:	e189a1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d7ddb:	02cf25        	call8	400daacc <__assert_func>
400d7dde:	441b      	addi.n	a4, a4, 1
400d7de0:	023457        	bltu	a4, a5, 400d7de6 <nvs::Page::copyItems(nvs::Page&)+0xd2>
400d7de3:	ffd8c6        	j	400d7d4a <nvs::Page::copyItems(nvs::Page&)+0x36>
400d7de6:	c1cb      	addi.n	a12, a1, 12
400d7de8:	04bd      	mov.n	a11, a4
400d7dea:	02ad      	mov.n	a10, a2
400d7dec:	ffd565        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d7def:	b1cb      	addi.n	a11, a1, 12
400d7df1:	03ad      	mov.n	a10, a3
400d7df3:	ffc0e5        	call8	400d7a00 <nvs::Page::writeEntry(nvs::Item const&)>
400d7df6:	fadc      	bnez.n	a10, 400d7e19 <nvs::Page::copyItems(nvs::Page&)+0x105>
400d7df8:	441b      	addi.n	a4, a4, 1
400d7dfa:	fff886        	j	400d7de0 <nvs::Page::copyItems(nvs::Page&)+0xcc>
400d7dfd:	e19021        	l32r	a2, 400d0440 <_flash_cache_start+0x428>
400d7e00:	000606        	j	400d7e1c <nvs::Page::copyItems(nvs::Page&)+0x108>
400d7e03:	0a2d00        	add.s	f2, f13, f0
400d7e06:	000486        	j	400d7e1c <nvs::Page::copyItems(nvs::Page&)+0x108>
400d7e09:	020c      	movi.n	a2, 0
400d7e0b:	000346        	j	400d7e1c <nvs::Page::copyItems(nvs::Page&)+0x108>
400d7e0e:	0a2d      	mov.n	a2, a10
400d7e10:	000206        	j	400d7e1c <nvs::Page::copyItems(nvs::Page&)+0x108>
400d7e13:	0a2d00        	add.s	f2, f13, f0
400d7e16:	000086        	j	400d7e1c <nvs::Page::copyItems(nvs::Page&)+0x108>
400d7e19:	202aa0        	or	a2, a10, a10
400d7e1c:	0020c0        	memw
400d7e1f:	0b2142        	l32i	a4, a1, 44
400d7e22:	e09831        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d7e25:	0020c0        	memw
400d7e28:	002332        	l32i	a3, a3, 0
400d7e2b:	021437        	beq	a4, a3, 400d7e31 <nvs::Page::copyItems(nvs::Page&)+0x11d>
400d7e2e:	fe47e5        	call8	400d62ac <__stack_chk_fail>
400d7e31:	f01d      	retw.n
	...

400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>:
400d7e34:	00e136        	entry	a1, 112
400d7e37:	4159      	s32i.n	a5, a1, 16
400d7e39:	3169      	s32i.n	a6, a1, 12
400d7e3b:	743030        	extui	a3, a3, 0, 8
400d7e3e:	2139      	s32i.n	a3, a1, 8
400d7e40:	744040        	extui	a4, a4, 0, 8
400d7e43:	5149      	s32i.n	a4, a1, 20
400d7e45:	f03d      	nop.n
400d7e47:	f03d      	nop.n
400d7e49:	f03d      	nop.n
400d7e4b:	f03d      	nop.n
400d7e4d:	700132        	l8ui	a3, a1, 112
400d7e50:	6139      	s32i.n	a3, a1, 24
400d7e52:	f03d      	nop.n
400d7e54:	f03d      	nop.n
400d7e56:	f03d      	nop.n
400d7e58:	f03d      	nop.n
400d7e5a:	740142        	l8ui	a4, a1, 116
400d7e5d:	7149      	s32i.n	a4, a1, 28
400d7e5f:	f03d      	nop.n
400d7e61:	f03d      	nop.n
400d7e63:	f03d      	nop.n
400d7e65:	f03d      	nop.n
400d7e67:	e08731        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d7e6a:	0020c0        	memw
400d7e6d:	0338      	l32i.n	a3, a3, 0
400d7e6f:	0020c0        	memw
400d7e72:	136132        	s32i	a3, a1, 76
400d7e75:	f03d      	nop.n
400d7e77:	f03d      	nop.n
400d7e79:	f03d      	nop.n
400d7e7b:	f03d      	nop.n
400d7e7d:	3268      	l32i.n	a6, a2, 12
400d7e7f:	10c652        	addi	a5, a6, 16
400d7e82:	140c      	movi.n	a4, 1
400d7e84:	030c      	movi.n	a3, 0
400d7e86:	038d      	mov.n	a8, a3
400d7e88:	838450        	moveqz	a8, a4, a5
400d7e8b:	205880        	or	a5, a8, a8
400d7e8e:	934360        	movnez	a4, a3, a6
400d7e91:	203840        	or	a3, a8, a4
400d7e94:	43cc      	bnez.n	a3, 400d7e9c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x68>
400d7e96:	020666        	bnei	a6, -1, 400d7e9c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x68>
400d7e99:	01a032        	movi	a3, 1
400d7e9c:	239356        	bnez	a3, 400d80d9 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2a5>
400d7e9f:	3168      	l32i.n	a6, a1, 12
400d7ea1:	0648      	l32i.n	a4, a6, 0
400d7ea3:	7da032        	movi	a3, 125
400d7ea6:	02b347        	bgeu	a3, a4, 400d7eac <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x78>
400d7ea9:	008cc6        	j	400d80e0 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2ac>
400d7eac:	f238      	l32i.n	a3, a2, 60
400d7eae:	08b347        	bgeu	a3, a4, 400d7eba <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x86>
400d7eb1:	7da052        	movi	a5, 125
400d7eb4:	023547        	bltu	a5, a4, 400d7eba <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x86>
400d7eb7:	203440        	or	a3, a4, a4
400d7eba:	e258      	l32i.n	a5, a2, 56
400d7ebc:	7ea042        	movi	a4, 126
400d7ebf:	01b457        	bgeu	a4, a5, 400d7ec4 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x90>
400d7ec2:	045d      	mov.n	a5, a4
400d7ec4:	01af42        	movi	a4, -255
400d7ec7:	2168      	l32i.n	a6, a1, 8
400d7ec9:	864a      	add.n	a8, a6, a4
400d7ecb:	1a0c      	movi.n	a10, 1
400d7ecd:	090c      	movi.n	a9, 0
400d7ecf:	09bd      	mov.n	a11, a9
400d7ed1:	93ba80        	movnez	a11, a10, a8
400d7ed4:	51c8      	l32i.n	a12, a1, 20
400d7ed6:	6c4a      	add.n	a6, a12, a4
400d7ed8:	094d      	mov.n	a4, a9
400d7eda:	934a60        	movnez	a4, a10, a6
400d7edd:	0284b7        	bany	a4, a11, 400d7ee3 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xaf>
400d7ee0:	002506        	j	400d7f78 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d7ee3:	4148      	l32i.n	a4, a1, 16
400d7ee5:	029497        	bne	a4, a9, 400d7eeb <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xb7>
400d7ee8:	002306        	j	400d7f78 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d7eeb:	44c242        	addi	a4, a2, 68
400d7eee:	2168      	l32i.n	a6, a1, 8
400d7ef0:	2c4162        	s8i	a6, a1, 44
400d7ef3:	2d41c2        	s8i	a12, a1, 45
400d7ef6:	060c      	movi.n	a6, 0
400d7ef8:	2e4162        	s8i	a6, a1, 46
400d7efb:	0020c0        	memw
400d7efe:	f03d      	nop.n
400d7f00:	f03d      	nop.n
400d7f02:	f03d      	nop.n
400d7f04:	f03d      	nop.n
400d7f06:	6168      	l32i.n	a6, a1, 24
400d7f08:	2f4162        	s8i	a6, a1, 47
400d7f0b:	0020c0        	memw
400d7f0e:	460c      	movi.n	a6, 4
400d7f10:	34c182        	addi	a8, a1, 52
400d7f13:	968c      	beqz.n	a6, 400d7f20 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xec>
400d7f15:	f97c      	movi.n	a9, -1
400d7f17:	0899      	s32i.n	a9, a8, 0
400d7f19:	669a      	add.n	a6, a6, a9
400d7f1b:	884b      	addi.n	a8, a8, 4
400d7f1d:	fffc86        	j	400d7f13 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xdf>
400d7f20:	260c      	movi.n	a6, 2
400d7f22:	44c182        	addi	a8, a1, 68
400d7f25:	968c      	beqz.n	a6, 400d7f32 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xfe>
400d7f27:	f97c      	movi.n	a9, -1
400d7f29:	0899      	s32i.n	a9, a8, 0
400d7f2b:	669a      	add.n	a6, a6, a9
400d7f2d:	884b      	addi.n	a8, a8, 4
400d7f2f:	fffc86        	j	400d7f25 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xf1>
400d7f32:	4188      	l32i.n	a8, a1, 16
400d7f34:	889c      	beqz.n	a8, 400d7f50 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x11c>
400d7f36:	fc0c      	movi.n	a12, 15
400d7f38:	20b880        	or	a11, a8, a8
400d7f3b:	34c1a2        	addi	a10, a1, 52
400d7f3e:	e12781        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d7f41:	0008e0        	callx8	a8
400d7f44:	060c      	movi.n	a6, 0
400d7f46:	434162        	s8i	a6, a1, 67
400d7f49:	0020c0        	memw
400d7f4c:	000246        	j	400d7f59 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x125>
400d7f4f:	a06200        	addx4	a6, a2, a0
400d7f52:	416200        	srli	a6, a0, 2
400d7f55:	20c034        	lsi	f3, a0, 128
400d7f58:	c1c200        	mul16u	a12, a2, a0
400d7f5b:	302c      	movi.n	a0, 35
400d7f5d:	4020b3        	lsi	f11, a0, 0x100
400d7f60:	e520a4        	lsi	f10, a0, 0x394
400d7f63:	009b      	addi.n	a0, a0, 9
400d7f65:	0a3d      	mov.n	a3, a10
400d7f67:	7da042        	movi	a4, 125
400d7f6a:	0ab4a7        	bgeu	a4, a10, 400d7f78 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d7f6d:	e13421        	l32r	a2, 400d0440 <_flash_cache_start+0x428>
400d7f70:	005f46        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d7f73:	000000        	ill
400d7f76:	043d      	mov.n	a3, a4
400d7f78:	023357        	bltu	a3, a5, 400d7f7e <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x14a>
400d7f7b:	005a46        	j	400d80e8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2b4>
400d7f7e:	431b      	addi.n	a4, a3, 1
400d7f80:	18c292        	addi	a9, a2, 24
400d7f83:	7da062        	movi	a6, 125
400d7f86:	0eb637        	bgeu	a6, a3, 400d7f98 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x164>
400d7f89:	e11dd1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d7f8c:	e11ec1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d7f8f:	26a0b2        	movi	a11, 38
400d7f92:	e11da1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d7f95:	02b365        	call8	400daacc <__assert_func>
400d7f98:	418430        	srli	a8, a3, 4
400d7f9b:	346030        	extui	a6, a3, 0, 4
400d7f9e:	1166f0        	slli	a6, a6, 1
400d7fa1:	a08890        	addx4	a8, a8, a9
400d7fa4:	002882        	l32i	a8, a8, 0
400d7fa7:	400600        	ssr	a6
400d7faa:	916080        	srl	a6, a8
400d7fad:	146060        	extui	a6, a6, 0, 2
400d7fb0:	c22666        	bnei	a6, 2, 400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d7fb3:	20c770        	or	a12, a7, a7
400d7fb6:	20b330        	or	a11, a3, a3
400d7fb9:	02ad      	mov.n	a10, a2
400d7fbb:	ffb8a5        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d7fbe:	7a8c      	beqz.n	a10, 400d7fc9 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x195>
400d7fc0:	030c      	movi.n	a3, 0
400d7fc2:	3239      	s32i.n	a3, a2, 12
400d7fc4:	0a2d      	mov.n	a2, a10
400d7fc6:	0049c6        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d7fc9:	20a770        	or	a10, a7, a7
400d7fcc:	00f825        	call8	400d8f50 <nvs::Item::calculateCrc32() const>
400d7fcf:	012762        	l32i	a6, a7, 4
400d7fd2:	131a67        	beq	a10, a6, 400d7fe9 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1b5>
400d7fd5:	03bd      	mov.n	a11, a3
400d7fd7:	02ad      	mov.n	a10, a2
400d7fd9:	ffba25        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d7fdc:	f96a16        	beqz	a10, 400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d7fdf:	030c      	movi.n	a3, 0
400d7fe1:	3239      	s32i.n	a3, a2, 12
400d7fe3:	0a2d      	mov.n	a2, a10
400d7fe5:	004206        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d7fe8:	076200        	lsi	f0, a2, 28
400d7feb:	c69201        	l32r	a0, 400c9a34 <_rtc_text_end+0x9a34>
400d7fee:	bf          	.byte 0xbf
400d7fef:	1b0c      	movi.n	a11, 1
400d7ff1:	080c      	movi.n	a8, 0
400d7ff3:	08ad      	mov.n	a10, a8
400d7ff5:	83ab90        	moveqz	a10, a11, a9
400d7ff8:	0a9d      	mov.n	a9, a10
400d7ffa:	dfc6a2        	addi	a10, a6, -33
400d7ffd:	838ba0        	moveqz	a8, a11, a10
400d8000:	208890        	or	a8, a8, a9
400d8003:	68cc      	bnez.n	a8, 400d800d <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1d9>
400d8005:	294c      	movi.n	a9, 66
400d8007:	029697        	bne	a6, a9, 400d800d <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1d9>
400d800a:	208bb0        	or	a8, a11, a11
400d800d:	388c      	beqz.n	a8, 400d8014 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1e0>
400d800f:	020742        	l8ui	a4, a7, 2
400d8012:	434a      	add.n	a4, a3, a4
400d8014:	ffa082        	movi	a8, 255
400d8017:	21b8      	l32i.n	a11, a1, 8
400d8019:	081b87        	beq	a11, a8, 400d8025 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1f1>
400d801c:	000782        	l8ui	a8, a7, 0
400d801f:	021b87        	beq	a11, a8, 400d8025 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1f1>
400d8022:	ffd406        	j	400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8025:	41c8      	l32i.n	a12, a1, 16
400d8027:	dc8c      	beqz.n	a12, 400d8038 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x204>
400d8029:	fc0c      	movi.n	a12, 15
400d802b:	b78b      	addi.n	a11, a7, 8
400d802d:	41a8      	l32i.n	a10, a1, 16
400d802f:	e0ec81        	l32r	a8, 400d03e0 <_flash_cache_start+0x3c8>
400d8032:	0008e0        	callx8	a8
400d8035:	f3da56        	bnez	a10, 400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8038:	01af82        	movi	a8, -255
400d803b:	6198      	l32i.n	a9, a1, 24
400d803d:	898a      	add.n	a8, a9, a8
400d803f:	1b0c      	movi.n	a11, 1
400d8041:	090c      	movi.n	a9, 0
400d8043:	09ad      	mov.n	a10, a9
400d8045:	93ab80        	movnez	a10, a11, a8
400d8048:	0a8d      	mov.n	a8, a10
400d804a:	0521c2        	l32i	a12, a1, 20
400d804d:	becca2        	addi	a10, a12, -66
400d8050:	839ba0        	moveqz	a9, a11, a10
400d8053:	0a0987        	bnone	a9, a8, 400d8061 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x22d>
400d8056:	030782        	l8ui	a8, a7, 3
400d8059:	6198      	l32i.n	a9, a1, 24
400d805b:	021987        	beq	a9, a8, 400d8061 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x22d>
400d805e:	ffc506        	j	400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8061:	884c      	movi.n	a8, 72
400d8063:	51a8      	l32i.n	a10, a1, 20
400d8065:	0b9a87        	bne	a10, a8, 400d8074 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x240>
400d8068:	030792        	l8ui	a9, a7, 3
400d806b:	ffa082        	movi	a8, 255
400d806e:	021987        	beq	a9, a8, 400d8074 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x240>
400d8071:	ffc046        	j	400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8074:	51b8      	l32i.n	a11, a1, 20
400d8076:	b8cba2        	addi	a10, a11, -72
400d8079:	1b0c      	movi.n	a11, 1
400d807b:	080c      	movi.n	a8, 0
400d807d:	08cd      	mov.n	a12, a8
400d807f:	83cba0        	moveqz	a12, a11, a10
400d8082:	0cad      	mov.n	a10, a12
400d8084:	01af92        	movi	a9, -255
400d8087:	0721c2        	l32i	a12, a1, 28
400d808a:	809c90        	add	a9, a12, a9
400d808d:	938b90        	movnez	a8, a11, a9
400d8090:	0808a7        	bnone	a8, a10, 400d809c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x268>
400d8093:	1d0782        	l8ui	a8, a7, 29
400d8096:	021c87        	beq	a12, a8, 400d809c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x268>
400d8099:	ffb646        	j	400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d809c:	ffa082        	movi	a8, 255
400d809f:	5198      	l32i.n	a9, a1, 20
400d80a1:	2b1987        	beq	a9, a8, 400d80d0 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x29c>
400d80a4:	281967        	beq	a9, a6, 400d80d0 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x29c>
400d80a7:	180c      	movi.n	a8, 1
400d80a9:	030c      	movi.n	a3, 0
400d80ab:	039d      	mov.n	a9, a3
400d80ad:	41a8      	l32i.n	a10, a1, 16
400d80af:	8398a0        	moveqz	a9, a8, a10
400d80b2:	01af62        	movi	a6, -255
400d80b5:	21b8      	l32i.n	a11, a1, 8
400d80b7:	6b6a      	add.n	a6, a11, a6
400d80b9:	833860        	moveqz	a3, a8, a6
400d80bc:	2e0397        	bnone	a3, a9, 400d80ee <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2ba>
400d80bf:	ffa032        	movi	a3, 255
400d80c2:	6168      	l32i.n	a6, a1, 24
400d80c4:	029637        	bne	a6, a3, 400d80ca <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x296>
400d80c7:	ffaac6        	j	400d7f76 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d80ca:	e0e021        	l32r	a2, 400d044c <_flash_cache_start+0x434>
400d80cd:	000806        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d80d0:	3128      	l32i.n	a2, a1, 12
400d80d2:	0239      	s32i.n	a3, a2, 0
400d80d4:	020c      	movi.n	a2, 0
400d80d6:	0005c6        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d80d9:	e0d921        	l32r	a2, 400d0440 <_flash_cache_start+0x428>
400d80dc:	000446        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d80df:	d82100        	lsi	f0, a1, 0x360
400d80e2:	0286e0        	andb	b8, b6, b14
400d80e5:	000000        	ill
400d80e8:	e0d621        	l32r	a2, 400d0440 <_flash_cache_start+0x428>
400d80eb:	000086        	j	400d80f1 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d80ee:	e0d721        	l32r	a2, 400d044c <_flash_cache_start+0x434>
400d80f1:	0020c0        	memw
400d80f4:	132142        	l32i	a4, a1, 76
400d80f7:	dfe331        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d80fa:	0020c0        	memw
400d80fd:	0338      	l32i.n	a3, a3, 0
400d80ff:	021437        	beq	a4, a3, 400d8105 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2d1>
400d8102:	fe1aa5        	call8	400d62ac <__stack_chk_fail>
400d8105:	f01d      	retw.n
	...

400d8108 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>:
400d8108:	00c136        	entry	a1, 96
400d810b:	746060        	extui	a6, a6, 0, 8
400d810e:	747070        	extui	a7, a7, 0, 8
400d8111:	dfdc81        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400d8114:	0020c0        	memw
400d8117:	002882        	l32i	a8, a8, 0
400d811a:	0020c0        	memw
400d811d:	0f6182        	s32i	a8, a1, 60
400d8120:	080c      	movi.n	a8, 0
400d8122:	6189      	s32i.n	a8, a1, 24
400d8124:	1179      	s32i.n	a7, a1, 4
400d8126:	0169      	s32i.n	a6, a1, 0
400d8128:	1cc1f2        	addi	a15, a1, 28
400d812b:	18c1e2        	addi	a14, a1, 24
400d812e:	05dd      	mov.n	a13, a5
400d8130:	74c040        	extui	a12, a4, 0, 8
400d8133:	74b030        	extui	a11, a3, 0, 8
400d8136:	02ad      	mov.n	a10, a2
400d8138:	ffcfa5        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d813b:	aacc      	bnez.n	a10, 400d8149 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x41>
400d813d:	61b8      	l32i.n	a11, a1, 24
400d813f:	02ad      	mov.n	a10, a2
400d8141:	ffa3a5        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8144:	0a2d      	mov.n	a2, a10
400d8146:	000086        	j	400d814c <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x44>
400d8149:	202aa0        	or	a2, a10, a10
400d814c:	0020c0        	memw
400d814f:	0f2182        	l32i	a8, a1, 60
400d8152:	dfcc71        	l32r	a7, 400d0084 <_flash_cache_start+0x6c>
400d8155:	0020c0        	memw
400d8158:	002772        	l32i	a7, a7, 0
400d815b:	021877        	beq	a8, a7, 400d8161 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x59>
400d815e:	fe14e5        	call8	400d62ac <__stack_chk_fail>
400d8161:	f01d      	retw.n
	...

400d8164 <nvs::Page::mLoadEntryTable()>:
400d8164:	010136        	entry	a1, 128
400d8167:	dfc731        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d816a:	0020c0        	memw
400d816d:	0338      	l32i.n	a3, a3, 0
400d816f:	0020c0        	memw
400d8172:	176132        	s32i	a3, a1, 92
400d8175:	f03d      	nop.n
400d8177:	f03d      	nop.n
400d8179:	f03d      	nop.n
400d817b:	f03d      	nop.n
400d817d:	3268      	l32i.n	a6, a2, 12
400d817f:	562b      	addi.n	a5, a6, 2
400d8181:	170c      	movi.n	a7, 1
400d8183:	030c      	movi.n	a3, 0
400d8185:	034d      	mov.n	a4, a3
400d8187:	834750        	moveqz	a4, a7, a5
400d818a:	045d      	mov.n	a5, a4
400d818c:	464b      	addi.n	a4, a6, 4
400d818e:	833740        	moveqz	a3, a7, a4
400d8191:	203530        	or	a3, a5, a3
400d8194:	53cc      	bnez.n	a3, 400d819d <nvs::Page::mLoadEntryTable()+0x39>
400d8196:	847c      	movi.n	a4, -8
400d8198:	019647        	bne	a6, a4, 400d819d <nvs::Page::mLoadEntryTable()+0x39>
400d819b:	073d      	mov.n	a3, a7
400d819d:	018316        	beqz	a3, 400d81b9 <nvs::Page::mLoadEntryTable()+0x55>
400d81a0:	0222a2        	l32i	a10, a2, 8
400d81a3:	20a0c2        	movi	a12, 32
400d81a6:	18c2b2        	addi	a11, a2, 24
400d81a9:	aaca      	add.n	a10, a10, a12
400d81ab:	ae6165        	call8	400867c0 <spi_flash_read>
400d81ae:	7a8c      	beqz.n	a10, 400d81b9 <nvs::Page::mLoadEntryTable()+0x55>
400d81b0:	030c      	movi.n	a3, 0
400d81b2:	3239      	s32i.n	a3, a2, 12
400d81b4:	0a2d      	mov.n	a2, a10
400d81b6:	010b06        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d81b9:	00a032        	movi	a3, 0
400d81bc:	215232        	s16i	a3, a2, 66
400d81bf:	205232        	s16i	a3, a2, 64
400d81c2:	0020c0        	memw
400d81c5:	00a0a2        	movi	a10, 0
400d81c8:	7da082        	movi	a8, 125
400d81cb:	5f38a7        	bltu	a8, a10, 400d822e <nvs::Page::mLoadEntryTable()+0xca>
400d81ce:	18c2b2        	addi	a11, a2, 24
400d81d1:	10b8a7        	bgeu	a8, a10, 400d81e5 <nvs::Page::mLoadEntryTable()+0x81>
400d81d4:	f03d      	nop.n
400d81d6:	e08ad1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d81d9:	e08ac1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d81dc:	26a0b2        	movi	a11, 38
400d81df:	e08aa1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d81e2:	028ea5        	call8	400daacc <__assert_func>
400d81e5:	4194a0        	srli	a9, a10, 4
400d81e8:	3480a0        	extui	a8, a10, 0, 4
400d81eb:	1188f0        	slli	a8, a8, 1
400d81ee:	a099b0        	addx4	a9, a9, a11
400d81f1:	0998      	l32i.n	a9, a9, 0
400d81f3:	400800        	ssr	a8
400d81f6:	918090        	srl	a8, a9
400d81f9:	148080        	extui	a8, a8, 0, 2
400d81fc:	1c2866        	bnei	a8, 2, 400d821c <nvs::Page::mLoadEntryTable()+0xb8>
400d81ff:	f238      	l32i.n	a3, a2, 60
400d8201:	010366        	bnei	a3, -1, 400d8206 <nvs::Page::mLoadEntryTable()+0xa2>
400d8204:	f2a9      	s32i.n	a10, a2, 60
400d8206:	f03d      	nop.n
400d8208:	f03d      	nop.n
400d820a:	f03d      	nop.n
400d820c:	f03d      	nop.n
400d820e:	201282        	l16ui	a8, a2, 64
400d8211:	881b      	addi.n	a8, a8, 1
400d8213:	205282        	s16i	a8, a2, 64
400d8216:	0020c0        	memw
400d8219:	000306        	j	400d8229 <nvs::Page::mLoadEntryTable()+0xc5>
400d821c:	98cc      	bnez.n	a8, 400d8229 <nvs::Page::mLoadEntryTable()+0xc5>
400d821e:	211282        	l16ui	a8, a2, 66
400d8221:	881b      	addi.n	a8, a8, 1
400d8223:	215282        	s16i	a8, a2, 66
400d8226:	0020c0        	memw
400d8229:	aa1b      	addi.n	a10, a10, 1
400d822b:	ffe646        	j	400d81c8 <nvs::Page::mLoadEntryTable()+0x64>
400d822e:	3238      	l32i.n	a3, a2, 12
400d8230:	e47c      	movi.n	a4, -2
400d8232:	021347        	beq	a3, a4, 400d8238 <nvs::Page::mLoadEntryTable()+0xd4>
400d8235:	009f06        	j	400d84b5 <nvs::Page::mLoadEntryTable()+0x351>
400d8238:	030c      	movi.n	a3, 0
400d823a:	7da042        	movi	a4, 125
400d823d:	383437        	bltu	a4, a3, 400d8279 <nvs::Page::mLoadEntryTable()+0x115>
400d8240:	18c282        	addi	a8, a2, 24
400d8243:	0db437        	bgeu	a4, a3, 400d8254 <nvs::Page::mLoadEntryTable()+0xf0>
400d8246:	e06ed1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d8249:	e06ec1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d824c:	6b2c      	movi.n	a11, 38
400d824e:	e06ea1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d8251:	0287a5        	call8	400daacc <__assert_func>
400d8254:	415430        	srli	a5, a3, 4
400d8257:	344030        	extui	a4, a3, 0, 4
400d825a:	1164f0        	slli	a6, a4, 1
400d825d:	a05580        	addx4	a5, a5, a8
400d8260:	0548      	l32i.n	a4, a5, 0
400d8262:	400600        	ssr	a6
400d8265:	914040        	srl	a4, a4
400d8268:	144040        	extui	a4, a4, 0, 2
400d826b:	053466        	bnei	a4, 3, 400d8274 <nvs::Page::mLoadEntryTable()+0x110>
400d826e:	e239      	s32i.n	a3, a2, 56
400d8270:	000146        	j	400d8279 <nvs::Page::mLoadEntryTable()+0x115>
400d8273:	331b00        	clamps	a1, a11, 7
400d8276:	fff006        	j	400d823a <nvs::Page::mLoadEntryTable()+0xd6>
400d8279:	e238      	l32i.n	a3, a2, 56
400d827b:	7da042        	movi	a4, 125
400d827e:	02b437        	bgeu	a4, a3, 400d8284 <nvs::Page::mLoadEntryTable()+0x120>
400d8281:	002b46        	j	400d8332 <nvs::Page::mLoadEntryTable()+0x1ce>
400d8284:	0eb437        	bgeu	a4, a3, 400d8296 <nvs::Page::mLoadEntryTable()+0x132>
400d8287:	e066d1        	l32r	a13, 400d0420 <_flash_cache_start+0x408>
400d828a:	e066c1        	l32r	a12, 400d0424 <_flash_cache_start+0x40c>
400d828d:	c5a0b2        	movi	a11, 197
400d8290:	e066a1        	l32r	a10, 400d0428 <_flash_cache_start+0x410>
400d8293:	0283a5        	call8	400daacc <__assert_func>
400d8296:	22a8      	l32i.n	a10, a2, 8
400d8298:	1133b0        	slli	a3, a3, 5
400d829b:	80a3a0        	add	a10, a3, a10
400d829e:	04a0c2        	movi	a12, 4
400d82a1:	18c1b2        	addi	a11, a1, 24
400d82a4:	40caa2        	addi	a10, a10, 64
400d82a7:	ae51a5        	call8	400867c0 <spi_flash_read>
400d82aa:	8a8c      	beqz.n	a10, 400d82b6 <nvs::Page::mLoadEntryTable()+0x152>
400d82ac:	030c      	movi.n	a3, 0
400d82ae:	3239      	s32i.n	a3, a2, 12
400d82b0:	0a2d      	mov.n	a2, a10
400d82b2:	00cc06        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d82b5:	613800        	lsi	f0, a8, 0x184
400d82b8:	760326        	beqi	a3, -1, 400d8332 <nvs::Page::mLoadEntryTable()+0x1ce>
400d82bb:	18c252        	addi	a5, a2, 24
400d82be:	e238      	l32i.n	a3, a2, 56
400d82c0:	7da042        	movi	a4, 125
400d82c3:	0db437        	bgeu	a4, a3, 400d82d4 <nvs::Page::mLoadEntryTable()+0x170>
400d82c6:	e04ed1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d82c9:	e04ec1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d82cc:	6b2c      	movi.n	a11, 38
400d82ce:	e04ea1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d82d1:	027fa5        	call8	400daacc <__assert_func>
400d82d4:	414430        	srli	a4, a3, 4
400d82d7:	343030        	extui	a3, a3, 0, 4
400d82da:	1133f0        	slli	a3, a3, 1
400d82dd:	a04450        	addx4	a4, a4, a5
400d82e0:	0448      	l32i.n	a4, a4, 0
400d82e2:	400300        	ssr	a3
400d82e5:	913040        	srl	a3, a4
400d82e8:	143030        	extui	a3, a3, 0, 2
400d82eb:	0c0c      	movi.n	a12, 0
400d82ed:	e2b8      	l32i.n	a11, a2, 56
400d82ef:	02ad      	mov.n	a10, a2
400d82f1:	ff67a5        	call8	400d796c <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d82f4:	7a8c      	beqz.n	a10, 400d82ff <nvs::Page::mLoadEntryTable()+0x19b>
400d82f6:	030c      	movi.n	a3, 0
400d82f8:	3239      	s32i.n	a3, a2, 12
400d82fa:	0a2d      	mov.n	a2, a10
400d82fc:	00b986        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d82ff:	e248      	l32i.n	a4, a2, 56
400d8301:	441b      	addi.n	a4, a4, 1
400d8303:	e249      	s32i.n	a4, a2, 56
400d8305:	132366        	bnei	a3, 2, 400d831c <nvs::Page::mLoadEntryTable()+0x1b8>
400d8308:	f03d      	nop.n
400d830a:	f03d      	nop.n
400d830c:	f03d      	nop.n
400d830e:	f03d      	nop.n
400d8310:	201232        	l16ui	a3, a2, 64
400d8313:	ffc332        	addi	a3, a3, -1
400d8316:	205232        	s16i	a3, a2, 64
400d8319:	0020c0        	memw
400d831c:	f03d      	nop.n
400d831e:	f03d      	nop.n
400d8320:	f03d      	nop.n
400d8322:	f03d      	nop.n
400d8324:	211232        	l16ui	a3, a2, 66
400d8327:	331b      	addi.n	a3, a3, 1
400d8329:	215232        	s16i	a3, a2, 66
400d832c:	0020c0        	memw
400d832f:	ffd186        	j	400d8279 <nvs::Page::mLoadEntryTable()+0x115>
400d8332:	e258      	l32i.n	a5, a2, 56
400d8334:	7ea032        	movi	a3, 126
400d8337:	01b357        	bgeu	a3, a5, 400d833c <nvs::Page::mLoadEntryTable()+0x1d8>
400d833a:	035d      	mov.n	a5, a3
400d833c:	030c      	movi.n	a3, 0
400d833e:	f47c      	movi.n	a4, -1
400d8340:	023357        	bltu	a3, a5, 400d8346 <nvs::Page::mLoadEntryTable()+0x1e2>
400d8343:	004986        	j	400d846d <nvs::Page::mLoadEntryTable()+0x309>
400d8346:	18c262        	addi	a6, a2, 24
400d8349:	7da042        	movi	a4, 125
400d834c:	0db437        	bgeu	a4, a3, 400d835d <nvs::Page::mLoadEntryTable()+0x1f9>
400d834f:	e02cd1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d8352:	e02cc1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d8355:	6b2c      	movi.n	a11, 38
400d8357:	e02ca1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d835a:	027725        	call8	400daacc <__assert_func>
400d835d:	418430        	srli	a8, a3, 4
400d8360:	344030        	extui	a4, a3, 0, 4
400d8363:	1194f0        	slli	a9, a4, 1
400d8366:	a08860        	addx4	a8, a8, a6
400d8369:	002842        	l32i	a4, a8, 0
400d836c:	400900        	ssr	a9
400d836f:	914040        	srl	a4, a4
400d8372:	144040        	extui	a4, a4, 0, 2
400d8375:	0e3416        	beqz	a4, 400d845c <nvs::Page::mLoadEntryTable()+0x2f8>
400d8378:	1cc1c2        	addi	a12, a1, 28
400d837b:	20b330        	or	a11, a3, a3
400d837e:	20a220        	or	a10, a2, a2
400d8381:	ff7c25        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d8384:	9a8c      	beqz.n	a10, 400d8391 <nvs::Page::mLoadEntryTable()+0x22d>
400d8386:	030c      	movi.n	a3, 0
400d8388:	3239      	s32i.n	a3, a2, 12
400d838a:	0a2d      	mov.n	a2, a10
400d838c:	009586        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d838f:	420000        	xorb	b0, b0, b0
400d8392:	a20821        	l32r	a2, 400c0bb4 <_rtc_text_end+0xbb4>
400d8395:	a51cc1        	l32r	a12, 400c1808 <_rtc_text_end+0x1808>
400d8398:	00bb      	addi.n	a0, a0, 11
400d839a:	1314a7        	beq	a4, a10, 400d83b1 <nvs::Page::mLoadEntryTable()+0x24d>
400d839d:	20b330        	or	a11, a3, a3
400d83a0:	02ad      	mov.n	a10, a2
400d83a2:	ff7da5        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d83a5:	0bba16        	beqz	a10, 400d8464 <nvs::Page::mLoadEntryTable()+0x300>
400d83a8:	030c      	movi.n	a3, 0
400d83aa:	3239      	s32i.n	a3, a2, 12
400d83ac:	0a2d      	mov.n	a2, a10
400d83ae:	008d06        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d83b1:	44c242        	addi	a4, a2, 68
400d83b4:	03cd      	mov.n	a12, a3
400d83b6:	1cc1b2        	addi	a11, a1, 28
400d83b9:	04ad      	mov.n	a10, a4
400d83bb:	0043e5        	call8	400d87f8 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d83be:	1cc1c2        	addi	a12, a1, 28
400d83c1:	0b0c      	movi.n	a11, 0
400d83c3:	04ad      	mov.n	a10, a4
400d83c5:	0055a5        	call8	400d8920 <nvs::HashList::find(unsigned int, nvs::Item const&)>
400d83c8:	1d0192        	l8ui	a9, a1, 29
400d83cb:	bfc942        	addi	a4, a9, -65
400d83ce:	1b0c      	movi.n	a11, 1
400d83d0:	070c      	movi.n	a7, 0
400d83d2:	078d      	mov.n	a8, a7
400d83d4:	838b40        	moveqz	a8, a11, a4
400d83d7:	084d      	mov.n	a4, a8
400d83d9:	dfc982        	addi	a8, a9, -33
400d83dc:	837b80        	moveqz	a7, a11, a8
400d83df:	204740        	or	a4, a7, a4
400d83e2:	54cc      	bnez.n	a4, 400d83eb <nvs::Page::mLoadEntryTable()+0x287>
400d83e4:	274c      	movi.n	a7, 66
400d83e6:	019977        	bne	a9, a7, 400d83eb <nvs::Page::mLoadEntryTable()+0x287>
400d83e9:	0b4d      	mov.n	a4, a11
400d83eb:	059416        	beqz	a4, 400d8448 <nvs::Page::mLoadEntryTable()+0x2e4>
400d83ee:	1e0172        	l8ui	a7, a1, 30
400d83f1:	034d      	mov.n	a4, a3
400d83f3:	837a      	add.n	a8, a3, a7
400d83f5:	33b487        	bgeu	a4, a8, 400d842c <nvs::Page::mLoadEntryTable()+0x2c8>
400d83f8:	7da082        	movi	a8, 125
400d83fb:	0db847        	bgeu	a8, a4, 400d840c <nvs::Page::mLoadEntryTable()+0x2a8>
400d83fe:	e000d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d8401:	e000c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d8404:	6b2c      	movi.n	a11, 38
400d8406:	e000a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d8409:	026c25        	call8	400daacc <__assert_func>
400d840c:	419440        	srli	a9, a4, 4
400d840f:	348040        	extui	a8, a4, 0, 4
400d8412:	11c8f0        	slli	a12, a8, 1
400d8415:	a09960        	addx4	a9, a9, a6
400d8418:	0988      	l32i.n	a8, a9, 0
400d841a:	400c00        	ssr	a12
400d841d:	918080        	srl	a8, a8
400d8420:	148080        	extui	a8, a8, 0, 2
400d8423:	0d2866        	bnei	a8, 2, 400d8434 <nvs::Page::mLoadEntryTable()+0x2d0>
400d8426:	441b      	addi.n	a4, a4, 1
400d8428:	fff1c6        	j	400d83f3 <nvs::Page::mLoadEntryTable()+0x28f>
400d842b:	034d00        	lsi	f0, a13, 12
400d842e:	060c      	movi.n	a6, 0
400d8430:	000186        	j	400d843a <nvs::Page::mLoadEntryTable()+0x2d6>
400d8433:	a06200        	addx4	a6, a2, a0
400d8436:	af4201        	l32r	a0, 400c4140 <_rtc_text_end+0x4140>
400d8439:	ff          	.byte 0xff
400d843a:	00e616        	beqz	a6, 400d844c <nvs::Page::mLoadEntryTable()+0x2e8>
400d843d:	03bd      	mov.n	a11, a3
400d843f:	02ad      	mov.n	a10, a2
400d8441:	ff73a5        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8444:	000806        	j	400d8468 <nvs::Page::mLoadEntryTable()+0x304>
400d8447:	034d00        	lsi	f0, a13, 12
400d844a:	170c      	movi.n	a7, 1
400d844c:	18ba37        	bgeu	a10, a3, 400d8468 <nvs::Page::mLoadEntryTable()+0x304>
400d844f:	0abd      	mov.n	a11, a10
400d8451:	02ad      	mov.n	a10, a2
400d8453:	ff72a5        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8456:	000386        	j	400d8468 <nvs::Page::mLoadEntryTable()+0x304>
400d8459:	000000        	ill
400d845c:	170c      	movi.n	a7, 1
400d845e:	f47c      	movi.n	a4, -1
400d8460:	000106        	j	400d8468 <nvs::Page::mLoadEntryTable()+0x304>
400d8463:	034d00        	lsi	f0, a13, 12
400d8466:	170c      	movi.n	a7, 1
400d8468:	337a      	add.n	a3, a3, a7
400d846a:	ffb486        	j	400d8340 <nvs::Page::mLoadEntryTable()+0x1dc>
400d846d:	3f0426        	beqi	a4, -1, 400d84b0 <nvs::Page::mLoadEntryTable()+0x34c>
400d8470:	00a032        	movi	a3, 0
400d8473:	066132        	s32i	a3, a1, 24
400d8476:	f03d      	nop.n
400d8478:	f03d      	nop.n
400d847a:	f03d      	nop.n
400d847c:	f03d      	nop.n
400d847e:	1c01b2        	l8ui	a11, a1, 28
400d8481:	1d01c2        	l8ui	a12, a1, 29
400d8484:	ffa032        	movi	a3, 255
400d8487:	1139      	s32i.n	a3, a1, 4
400d8489:	0139      	s32i.n	a3, a1, 0
400d848b:	3cc1f2        	addi	a15, a1, 60
400d848e:	18c1e2        	addi	a14, a1, 24
400d8491:	24c1d2        	addi	a13, a1, 36
400d8494:	02ad      	mov.n	a10, a2
400d8496:	ff99e5        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d8499:	3adc      	bnez.n	a10, 400d84b0 <nvs::Page::mLoadEntryTable()+0x34c>
400d849b:	61b8      	l32i.n	a11, a1, 24
400d849d:	0fbb47        	bgeu	a11, a4, 400d84b0 <nvs::Page::mLoadEntryTable()+0x34c>
400d84a0:	02ad      	mov.n	a10, a2
400d84a2:	ff6da5        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d84a5:	7a8c      	beqz.n	a10, 400d84b0 <nvs::Page::mLoadEntryTable()+0x34c>
400d84a7:	030c      	movi.n	a3, 0
400d84a9:	3239      	s32i.n	a3, a2, 12
400d84ab:	0a2d      	mov.n	a2, a10
400d84ad:	004d46        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d84b0:	020c      	movi.n	a2, 0
400d84b2:	004c06        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d84b5:	04c342        	addi	a4, a3, 4
400d84b8:	01a062        	movi	a6, 1
400d84bb:	00a052        	movi	a5, 0
400d84be:	059d      	mov.n	a9, a5
400d84c0:	839640        	moveqz	a9, a6, a4
400d84c3:	338b      	addi.n	a3, a3, 8
400d84c5:	835630        	moveqz	a5, a6, a3
400d84c8:	205590        	or	a5, a5, a9
400d84cb:	115516        	beqz	a5, 400d85e4 <nvs::Page::mLoadEntryTable()+0x480>
400d84ce:	f238      	l32i.n	a3, a2, 60
400d84d0:	7da042        	movi	a4, 125
400d84d3:	02b437        	bgeu	a4, a3, 400d84d9 <nvs::Page::mLoadEntryTable()+0x375>
400d84d6:	004106        	j	400d85de <nvs::Page::mLoadEntryTable()+0x47a>
400d84d9:	18c242        	addi	a4, a2, 24
400d84dc:	7da062        	movi	a6, 125
400d84df:	0db637        	bgeu	a6, a3, 400d84f0 <nvs::Page::mLoadEntryTable()+0x38c>
400d84e2:	dfc7d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d84e5:	dfc7c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d84e8:	6b2c      	movi.n	a11, 38
400d84ea:	dfc7a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d84ed:	025de5        	call8	400daacc <__assert_func>
400d84f0:	419430        	srli	a9, a3, 4
400d84f3:	348030        	extui	a8, a3, 0, 4
400d84f6:	11a8f0        	slli	a10, a8, 1
400d84f9:	a09940        	addx4	a9, a9, a4
400d84fc:	002982        	l32i	a8, a9, 0
400d84ff:	400a00        	ssr	a10
400d8502:	918080        	srl	a8, a8
400d8505:	148080        	extui	a8, a8, 0, 2
400d8508:	022826        	beqi	a8, 2, 400d850e <nvs::Page::mLoadEntryTable()+0x3aa>
400d850b:	003286        	j	400d85d9 <nvs::Page::mLoadEntryTable()+0x475>
400d850e:	3cc1c2        	addi	a12, a1, 60
400d8511:	20b330        	or	a11, a3, a3
400d8514:	20a220        	or	a10, a2, a2
400d8517:	ff62e5        	call8	400d7b44 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d851a:	7a8c      	beqz.n	a10, 400d8525 <nvs::Page::mLoadEntryTable()+0x3c1>
400d851c:	030c      	movi.n	a3, 0
400d851e:	3239      	s32i.n	a3, a2, 12
400d8520:	0a2d      	mov.n	a2, a10
400d8522:	003006        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d8525:	102162        	l32i	a6, a1, 64
400d8528:	3cc1a2        	addi	a10, a1, 60
400d852b:	00a265        	call8	400d8f50 <nvs::Item::calculateCrc32() const>
400d852e:	1316a7        	beq	a6, a10, 400d8545 <nvs::Page::mLoadEntryTable()+0x3e1>
400d8531:	03bd      	mov.n	a11, a3
400d8533:	02ad      	mov.n	a10, a2
400d8535:	ff6465        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8538:	09da16        	beqz	a10, 400d85d9 <nvs::Page::mLoadEntryTable()+0x475>
400d853b:	030c      	movi.n	a3, 0
400d853d:	3239      	s32i.n	a3, a2, 12
400d853f:	0a2d      	mov.n	a2, a10
400d8541:	002846        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d8544:	016200        	slli	a6, a2, 32
400d8547:	3e          	.byte 0x3e
400d8548:	d6cc      	bnez.n	a6, 400d8559 <nvs::Page::mLoadEntryTable()+0x3f5>
400d854a:	dfc1d1        	l32r	a13, 400d0450 <_flash_cache_start+0x438>
400d854d:	dfc1c1        	l32r	a12, 400d0454 <_flash_cache_start+0x43c>
400d8550:	69a2b2        	movi	a11, 0x269
400d8553:	dfaaa1        	l32r	a10, 400d03fc <_flash_cache_start+0x3e4>
400d8556:	025765        	call8	400daacc <__assert_func>
400d8559:	03cd      	mov.n	a12, a3
400d855b:	3cc1b2        	addi	a11, a1, 60
400d855e:	44c2a2        	addi	a10, a2, 68
400d8561:	002965        	call8	400d87f8 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d8564:	3e0162        	l8ui	a6, a1, 62
400d8567:	3d01a2        	l8ui	a10, a1, 61
400d856a:	bfca72        	addi	a7, a10, -65
400d856d:	01a0b2        	movi	a11, 1
400d8570:	080c      	movi.n	a8, 0
400d8572:	089d      	mov.n	a9, a8
400d8574:	839b70        	moveqz	a9, a11, a7
400d8577:	097d      	mov.n	a7, a9
400d8579:	dfca92        	addi	a9, a10, -33
400d857c:	838b90        	moveqz	a8, a11, a9
400d857f:	207870        	or	a7, a8, a7
400d8582:	57cc      	bnez.n	a7, 400d858b <nvs::Page::mLoadEntryTable()+0x427>
400d8584:	284c      	movi.n	a8, 66
400d8586:	019a87        	bne	a10, a8, 400d858b <nvs::Page::mLoadEntryTable()+0x427>
400d8589:	057d      	mov.n	a7, a5
400d858b:	046716        	beqz	a7, 400d85d5 <nvs::Page::mLoadEntryTable()+0x471>
400d858e:	831b      	addi.n	a8, a3, 1
400d8590:	936a      	add.n	a9, a3, a6
400d8592:	3fb897        	bgeu	a8, a9, 400d85d5 <nvs::Page::mLoadEntryTable()+0x471>
400d8595:	7da092        	movi	a9, 125
400d8598:	0db987        	bgeu	a9, a8, 400d85a9 <nvs::Page::mLoadEntryTable()+0x445>
400d859b:	df99d1        	l32r	a13, 400d0400 <_flash_cache_start+0x3e8>
400d859e:	df99c1        	l32r	a12, 400d0404 <_flash_cache_start+0x3ec>
400d85a1:	6b2c      	movi.n	a11, 38
400d85a3:	df99a1        	l32r	a10, 400d0408 <_flash_cache_start+0x3f0>
400d85a6:	025265        	call8	400daacc <__assert_func>
400d85a9:	41a480        	srli	a10, a8, 4
400d85ac:	349080        	extui	a9, a8, 0, 4
400d85af:	11b9f0        	slli	a11, a9, 1
400d85b2:	a0aa40        	addx4	a10, a10, a4
400d85b5:	002a92        	l32i	a9, a10, 0
400d85b8:	400b00        	ssr	a11
400d85bb:	919090        	srl	a9, a9
400d85be:	149090        	extui	a9, a9, 0, 2
400d85c1:	0b2926        	beqi	a9, 2, 400d85d0 <nvs::Page::mLoadEntryTable()+0x46c>
400d85c4:	20b330        	or	a11, a3, a3
400d85c7:	20a220        	or	a10, a2, a2
400d85ca:	ff5b25        	call8	400d7b7c <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d85cd:	000106        	j	400d85d5 <nvs::Page::mLoadEntryTable()+0x471>
400d85d0:	881b      	addi.n	a8, a8, 1
400d85d2:	ffee86        	j	400d8590 <nvs::Page::mLoadEntryTable()+0x42c>
400d85d5:	336a      	add.n	a3, a3, a6
400d85d7:	330b      	addi.n	a3, a3, -1
400d85d9:	331b      	addi.n	a3, a3, 1
400d85db:	ffbc46        	j	400d84d0 <nvs::Page::mLoadEntryTable()+0x36c>
400d85de:	020c      	movi.n	a2, 0
400d85e0:	000086        	j	400d85e6 <nvs::Page::mLoadEntryTable()+0x482>
400d85e3:	020c00        	andb	b0, b12, b0
400d85e6:	0020c0        	memw
400d85e9:	172142        	l32i	a4, a1, 92
400d85ec:	dea631        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d85ef:	0020c0        	memw
400d85f2:	0338      	l32i.n	a3, a3, 0
400d85f4:	021437        	beq	a4, a3, 400d85fa <nvs::Page::mLoadEntryTable()+0x496>
400d85f7:	fdcb65        	call8	400d62ac <__stack_chk_fail>
400d85fa:	f01d      	retw.n

400d85fc <nvs::Page::load(unsigned int)>:
400d85fc:	00e136        	entry	a1, 112
400d85ff:	dea141        	l32r	a4, 400d0084 <_flash_cache_start+0x6c>
400d8602:	0020c0        	memw
400d8605:	0448      	l32i.n	a4, a4, 0
400d8607:	0020c0        	memw
400d860a:	136142        	s32i	a4, a1, 76
400d860d:	113340        	slli	a3, a3, 12
400d8610:	2239      	s32i.n	a3, a2, 8
400d8612:	030c      	movi.n	a3, 0
400d8614:	205232        	s16i	a3, a2, 64
400d8617:	215232        	s16i	a3, a2, 66
400d861a:	0020c0        	memw
400d861d:	381c      	movi.n	a8, 19
400d861f:	35c192        	addi	a9, a1, 53
400d8622:	e88c      	beqz.n	a8, 400d8634 <nvs::Page::load(unsigned int)+0x38>
400d8624:	fa7c      	movi.n	a10, -1
400d8626:	0049a2        	s8i	a10, a9, 0
400d8629:	0020c0        	memw
400d862c:	880b      	addi.n	a8, a8, -1
400d862e:	991b      	addi.n	a9, a9, 1
400d8630:	fffb86        	j	400d8622 <nvs::Page::load(unsigned int)+0x26>
400d8633:	a0c200        	addx4	a12, a2, a0
400d8636:	c1b220        	mul16u	a11, a2, a2
400d8639:	a22c      	movi.n	a2, 42
400d863b:	250222        	l8ui	a2, a2, 37
400d863e:	ae18      	l32i.n	a1, a14, 40
400d8640:	009a16        	beqz	a10, 400d864d <nvs::Page::load(unsigned int)+0x51>
400d8643:	030c      	movi.n	a3, 0
400d8645:	3239      	s32i.n	a3, a2, 12
400d8647:	0a2d      	mov.n	a2, a10
400d8649:	0033c6        	j	400d871c <nvs::Page::load(unsigned int)+0x120>
400d864c:	213200        	srai	a3, a0, 2
400d864f:	660b      	addi.n	a6, a6, -1
400d8651:	324903        	ssi	f0, a9, 200
400d8654:	320362        	l8ui	a6, a3, 50
400d8657:	3d00a0        	lsi	f10, a0, 244
400d865a:	f03df0        	subx8	a3, a13, a15
400d865d:	f03d      	nop.n
400d865f:	df7f41        	l32r	a4, 400d045c <_flash_cache_start+0x444>
400d8662:	723437        	bltu	a4, a3, 400d86d8 <nvs::Page::load(unsigned int)+0xdc>
400d8665:	22a8      	l32i.n	a10, a2, 8
400d8667:	0c2c      	movi.n	a12, 32
400d8669:	b1cb      	addi.n	a11, a1, 12
400d866b:	a3aa      	add.n	a10, a3, a10
400d866d:	ae1525        	call8	400867c0 <spi_flash_read>
400d8670:	8a8c      	beqz.n	a10, 400d867c <nvs::Page::load(unsigned int)+0x80>
400d8672:	030c      	movi.n	a3, 0
400d8674:	3239      	s32i.n	a3, a2, 12
400d8676:	0a2d      	mov.n	a2, a10
400d8678:	002806        	j	400d871c <nvs::Page::load(unsigned int)+0x120>
400d867b:	c14200        	mul16u	a4, a2, a0
400d867e:	d21c      	movi.n	a2, 29
400d8680:	d000a0        	subx2	a0, a0, a10
400d8683:	20cd      	lsi	f12, a0, 0
400d8685:	20b440        	or	a11, a4, a4
400d8688:	a1cb      	addi.n	a10, a1, 12
400d868a:	13bda5        	call8	400ec264 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)>
400d868d:	0614a7        	beq	a4, a10, 400d8697 <nvs::Page::load(unsigned int)+0x9b>
400d8690:	037c      	movi.n	a3, -16
400d8692:	3239      	s32i.n	a3, a2, 12
400d8694:	001006        	j	400d86d8 <nvs::Page::load(unsigned int)+0xdc>
400d8697:	20c332        	addi	a3, a3, 32
400d869a:	ffeec6        	j	400d8659 <nvs::Page::load(unsigned int)+0x5d>
400d869d:	122132        	l32i	a3, a1, 72
400d86a0:	2cc1a2        	addi	a10, a1, 44
400d86a3:	ff1865        	call8	400d7828 <nvs::Page::Header::calculateCrc32()>
400d86a6:	0713a7        	beq	a3, a10, 400d86b1 <nvs::Page::load(unsigned int)+0xb5>
400d86a9:	037c      	movi.n	a3, -16
400d86ab:	b139      	s32i.n	a3, a1, 44
400d86ad:	0009c6        	j	400d86d8 <nvs::Page::load(unsigned int)+0xdc>
400d86b0:	b13800        	lsi	f0, a8, 0x2c4
400d86b3:	3239      	s32i.n	a3, a2, 12
400d86b5:	f03d      	nop.n
400d86b7:	f03d      	nop.n
400d86b9:	f03d      	nop.n
400d86bb:	f03d      	nop.n
400d86bd:	c138      	l32i.n	a3, a1, 48
400d86bf:	4239      	s32i.n	a3, a2, 16
400d86c1:	f03d      	nop.n
400d86c3:	f03d      	nop.n
400d86c5:	f03d      	nop.n
400d86c7:	f03d      	nop.n
400d86c9:	340132        	l8ui	a3, a1, 52
400d86cc:	fda042        	movi	a4, 253
400d86cf:	41b437        	bgeu	a4, a3, 400d8714 <nvs::Page::load(unsigned int)+0x118>
400d86d2:	144232        	s8i	a3, a2, 20
400d86d5:	0020c0        	memw
400d86d8:	f03d      	nop.n
400d86da:	f03d      	nop.n
400d86dc:	f03d      	nop.n
400d86de:	f03d      	nop.n
400d86e0:	3238      	l32i.n	a3, a2, 12
400d86e2:	c47c      	movi.n	a4, -4
400d86e4:	151347        	beq	a3, a4, 400d86fd <nvs::Page::load(unsigned int)+0x101>
400d86e7:	073437        	bltu	a4, a3, 400d86f2 <nvs::Page::load(unsigned int)+0xf6>
400d86ea:	847c      	movi.n	a4, -8
400d86ec:	1a9347        	bne	a3, a4, 400d870a <nvs::Page::load(unsigned int)+0x10e>
400d86ef:	000286        	j	400d86fd <nvs::Page::load(unsigned int)+0x101>
400d86f2:	e47c      	movi.n	a4, -2
400d86f4:	051347        	beq	a3, a4, 400d86fd <nvs::Page::load(unsigned int)+0x101>
400d86f7:	1f0326        	beqi	a3, -1, 400d871a <nvs::Page::load(unsigned int)+0x11e>
400d86fa:	000306        	j	400d870a <nvs::Page::load(unsigned int)+0x10e>
400d86fd:	02ad      	mov.n	a10, a2
400d86ff:	ffa665        	call8	400d8164 <nvs::Page::mLoadEntryTable()>
400d8702:	020c      	movi.n	a2, 0
400d8704:	000506        	j	400d871c <nvs::Page::load(unsigned int)+0x120>
400d8707:	000000        	ill
400d870a:	037c      	movi.n	a3, -16
400d870c:	3239      	s32i.n	a3, a2, 12
400d870e:	020c      	movi.n	a2, 0
400d8710:	000206        	j	400d871c <nvs::Page::load(unsigned int)+0x120>
400d8713:	512100        	lsi	f0, a1, 0x144
400d8716:	df          	.byte 0xdf
400d8717:	000046        	j	400d871c <nvs::Page::load(unsigned int)+0x120>
400d871a:	020c      	movi.n	a2, 0
400d871c:	0020c0        	memw
400d871f:	132142        	l32i	a4, a1, 76
400d8722:	de5831        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d8725:	0020c0        	memw
400d8728:	0338      	l32i.n	a3, a3, 0
400d872a:	021437        	beq	a4, a3, 400d8730 <nvs::Page::load(unsigned int)+0x134>
400d872d:	fdb7e5        	call8	400d62ac <__stack_chk_fail>
400d8730:	f01d      	retw.n
	...

400d8734 <nvs::Page::getSeqNumber(unsigned int&) const>:
400d8734:	004136        	entry	a1, 32
400d8737:	3288      	l32i.n	a8, a2, 12
400d8739:	980b      	addi.n	a9, a8, -1
400d873b:	1a0c      	movi.n	a10, 1
400d873d:	db7c      	movi.n	a11, -3
400d873f:	01bb97        	bgeu	a11, a9, 400d8744 <nvs::Page::getSeqNumber(unsigned int&) const+0x10>
400d8742:	0a0c      	movi.n	a10, 0
400d8744:	10c892        	addi	a9, a8, 16
400d8747:	080c      	movi.n	a8, 0
400d8749:	1b0c      	movi.n	a11, 1
400d874b:	938b90        	movnez	a8, a11, a9
400d874e:	0708a7        	bnone	a8, a10, 400d8759 <nvs::Page::getSeqNumber(unsigned int&) const+0x25>
400d8751:	4228      	l32i.n	a2, a2, 16
400d8753:	0329      	s32i.n	a2, a3, 0
400d8755:	020c      	movi.n	a2, 0
400d8757:	f01d      	retw.n
400d8759:	df4121        	l32r	a2, 400d0460 <_flash_cache_start+0x448>
400d875c:	f01d      	retw.n
	...

400d8760 <nvs::Page::setSeqNumber(unsigned int)>:
400d8760:	004136        	entry	a1, 32
400d8763:	3288      	l32i.n	a8, a2, 12
400d8765:	050866        	bnei	a8, -1, 400d876e <nvs::Page::setSeqNumber(unsigned int)+0xe>
400d8768:	4239      	s32i.n	a3, a2, 16
400d876a:	020c      	movi.n	a2, 0
400d876c:	f01d      	retw.n
400d876e:	df3d21        	l32r	a2, 400d0464 <_flash_cache_start+0x44c>
400d8771:	f01d      	retw.n
	...

400d8774 <nvs::Page::erase()>:
400d8774:	004136        	entry	a1, 32
400d8777:	0222a2        	l32i	a10, a2, 8
400d877a:	41aca0        	srli	a10, a10, 12
400d877d:	addfe5        	call8	4008657c <spi_flash_erase_sector>
400d8780:	008a16        	beqz	a10, 400d878c <nvs::Page::erase()+0x18>
400d8783:	00a082        	movi	a8, 0
400d8786:	3289      	s32i.n	a8, a2, 12
400d8788:	0a2d      	mov.n	a2, a10
400d878a:	f01d      	retw.n
400d878c:	00a082        	movi	a8, 0
400d878f:	205282        	s16i	a8, a2, 64
400d8792:	215282        	s16i	a8, a2, 66
400d8795:	ffaf82        	movi	a8, -1
400d8798:	0f6282        	s32i	a8, a2, 60
400d879b:	e289      	s32i.n	a8, a2, 56
400d879d:	3289      	s32i.n	a8, a2, 12
400d879f:	44c2a2        	addi	a10, a2, 68
400d87a2:	0000a5        	call8	400d87ac <nvs::HashList::clear()>
400d87a5:	020c      	movi.n	a2, 0
400d87a7:	f01d      	retw.n
400d87a9:	000000        	ill

400d87ac <nvs::HashList::clear()>:
400d87ac:	004136        	entry	a1, 32
400d87af:	0238      	l32i.n	a3, a2, 0
400d87b1:	03ad      	mov.n	a10, a3
400d87b3:	13bc      	beqz.n	a3, 400d87e8 <nvs::HashList::clear()+0x3c>
400d87b5:	1388      	l32i.n	a8, a3, 4
400d87b7:	083d      	mov.n	a3, a8
400d87b9:	0a98      	l32i.n	a9, a10, 0
400d87bb:	398c      	beqz.n	a9, 400d87c2 <nvs::HashList::clear()+0x16>
400d87bd:	1989      	s32i.n	a8, a9, 4
400d87bf:	000046        	j	400d87c4 <nvs::HashList::clear()+0x18>
400d87c2:	0289      	s32i.n	a8, a2, 0
400d87c4:	688c      	beqz.n	a8, 400d87ce <nvs::HashList::clear()+0x22>
400d87c6:	0899      	s32i.n	a9, a8, 0
400d87c8:	000146        	j	400d87d1 <nvs::HashList::clear()+0x25>
400d87cb:	000000        	ill
400d87ce:	016292        	s32i	a9, a2, 4
400d87d1:	f03d      	nop.n
400d87d3:	f03d      	nop.n
400d87d5:	f03d      	nop.n
400d87d7:	f03d      	nop.n
400d87d9:	022282        	l32i	a8, a2, 8
400d87dc:	ffc882        	addi	a8, a8, -1
400d87df:	2289      	s32i.n	a8, a2, 8
400d87e1:	1200e5        	call8	400ea7f0 <operator delete(void*)>
400d87e4:	fff246        	j	400d87b1 <nvs::HashList::clear()+0x5>
400d87e7:	f01d00        	subx8	a1, a13, a0
	...

400d87ec <nvs::HashList::~HashList()>:
400d87ec:	004136        	entry	a1, 32
400d87ef:	02ad      	mov.n	a10, a2
400d87f1:	fffba5        	call8	400d87ac <nvs::HashList::clear()>
400d87f4:	f01d      	retw.n
	...

400d87f8 <nvs::HashList::insert(nvs::Item const&, unsigned int)>:
400d87f8:	004136        	entry	a1, 32
400d87fb:	03ad      	mov.n	a10, a3
400d87fd:	0077e5        	call8	400d8f7c <nvs::Item::calculateCrc32WithoutValue() const>
400d8800:	0a5d      	mov.n	a5, a10
400d8802:	2238      	l32i.n	a3, a2, 8
400d8804:	d39c      	beqz.n	a3, 400d8825 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x2d>
400d8806:	1288      	l32i.n	a8, a2, 4
400d8808:	2838      	l32i.n	a3, a8, 8
400d880a:	c91c      	movi.n	a9, 28
400d880c:	153937        	bltu	a9, a3, 400d8825 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x2d>
400d880f:	231b      	addi.n	a2, a3, 1
400d8811:	2829      	s32i.n	a2, a8, 8
400d8813:	115a80        	slli	a5, a10, 8
400d8816:	744040        	extui	a4, a4, 0, 8
400d8819:	205450        	or	a5, a4, a5
400d881c:	a03380        	addx4	a3, a3, a8
400d881f:	3359      	s32i.n	a5, a3, 12
400d8821:	f01d      	retw.n
400d8823:	a20000        	muluh	a0, a0, a0
400d8826:	e580a0        	extui	a8, a10, 16, 15
400d8829:	ff          	.byte 0xff
400d882a:	3aa011        	l32r	a1, 400a72ac <_iram_end+0x19758>
400d882d:	ab2520        	movltz.s	f2, f5, a2
400d8830:	228213        	lsip	f1, a2, 136
400d8833:	088c01        	l32r	a0, 4009aa64 <_iram_end+0xcf10>
400d8836:	1839      	s32i.n	a3, a8, 4
400d8838:	f03d      	nop.n
400d883a:	f03d      	nop.n
400d883c:	f03d      	nop.n
400d883e:	f03d      	nop.n
400d8840:	1288      	l32i.n	a8, a2, 4
400d8842:	0389      	s32i.n	a8, a3, 0
400d8844:	080c      	movi.n	a8, 0
400d8846:	1389      	s32i.n	a8, a3, 4
400d8848:	1239      	s32i.n	a3, a2, 4
400d884a:	f03d      	nop.n
400d884c:	f03d      	nop.n
400d884e:	f03d      	nop.n
400d8850:	f03d      	nop.n
400d8852:	0288      	l32i.n	a8, a2, 0
400d8854:	08cc      	bnez.n	a8, 400d8858 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x60>
400d8856:	0239      	s32i.n	a3, a2, 0
400d8858:	f03d      	nop.n
400d885a:	f03d      	nop.n
400d885c:	f03d      	nop.n
400d885e:	f03d      	nop.n
400d8860:	2288      	l32i.n	a8, a2, 8
400d8862:	881b      	addi.n	a8, a8, 1
400d8864:	2289      	s32i.n	a8, a2, 8
400d8866:	115580        	slli	a5, a5, 8
400d8869:	744040        	extui	a4, a4, 0, 8
400d886c:	205450        	or	a5, a4, a5
400d886f:	3359      	s32i.n	a5, a3, 12
400d8871:	f03d      	nop.n
400d8873:	f03d      	nop.n
400d8875:	f03d      	nop.n
400d8877:	f03d      	nop.n
400d8879:	2328      	l32i.n	a2, a3, 8
400d887b:	221b      	addi.n	a2, a2, 1
400d887d:	2329      	s32i.n	a2, a3, 8
400d887f:	f01d      	retw.n
400d8881:	000000        	ill

400d8884 <nvs::HashList::erase(unsigned int, bool)>:
400d8884:	004136        	entry	a1, 32
400d8887:	744040        	extui	a4, a4, 0, 8
400d888a:	0268      	l32i.n	a6, a2, 0
400d888c:	069d      	mov.n	a9, a6
400d888e:	07a616        	beqz	a6, 400d890c <nvs::HashList::erase(unsigned int, bool)+0x88>
400d8891:	080c      	movi.n	a8, 0
400d8893:	085d      	mov.n	a5, a8
400d8895:	08cd      	mov.n	a12, a8
400d8897:	29a8      	l32i.n	a10, a9, 8
400d8899:	33b8a7        	bgeu	a8, a10, 400d88d0 <nvs::HashList::erase(unsigned int, bool)+0x4c>
400d889c:	a0a890        	addx4	a10, a8, a9
400d889f:	0c0aa2        	l8ui	a10, a10, 12
400d88a2:	0e9a37        	bne	a10, a3, 400d88b4 <nvs::HashList::erase(unsigned int, bool)+0x30>
400d88a5:	a05890        	addx4	a5, a8, a9
400d88a8:	ffafa2        	movi	a10, -1
400d88ab:	0c45a2        	s8i	a10, a5, 12
400d88ae:	0020c0        	memw
400d88b1:	01a052        	movi	a5, 1
400d88b4:	a0a890        	addx4	a10, a8, a9
400d88b7:	f03d      	nop.n
400d88b9:	0020f0        	nop
400d88bc:	0c0ab2        	l8ui	a11, a10, 12
400d88bf:	ffa0a2        	movi	a10, 255
400d88c2:	021ba7        	beq	a11, a10, 400d88c8 <nvs::HashList::erase(unsigned int, bool)+0x44>
400d88c5:	01a0c2        	movi	a12, 1
400d88c8:	518c57        	bany	a12, a5, 400d891d <nvs::HashList::erase(unsigned int, bool)+0x99>
400d88cb:	881b      	addi.n	a8, a8, 1
400d88cd:	fff186        	j	400d8897 <nvs::HashList::erase(unsigned int, bool)+0x13>
400d88d0:	0cfc      	bnez.n	a12, 400d8904 <nvs::HashList::erase(unsigned int, bool)+0x80>
400d88d2:	06ad      	mov.n	a10, a6
400d88d4:	1968      	l32i.n	a6, a9, 4
400d88d6:	0a88      	l32i.n	a8, a10, 0
400d88d8:	1a98      	l32i.n	a9, a10, 4
400d88da:	388c      	beqz.n	a8, 400d88e1 <nvs::HashList::erase(unsigned int, bool)+0x5d>
400d88dc:	1899      	s32i.n	a9, a8, 4
400d88de:	000046        	j	400d88e3 <nvs::HashList::erase(unsigned int, bool)+0x5f>
400d88e1:	0299      	s32i.n	a9, a2, 0
400d88e3:	398c      	beqz.n	a9, 400d88ea <nvs::HashList::erase(unsigned int, bool)+0x66>
400d88e5:	0989      	s32i.n	a8, a9, 0
400d88e7:	000086        	j	400d88ed <nvs::HashList::erase(unsigned int, bool)+0x69>
400d88ea:	016282        	s32i	a8, a2, 4
400d88ed:	f03d      	nop.n
400d88ef:	f03d      	nop.n
400d88f1:	f03d      	nop.n
400d88f3:	f03d      	nop.n
400d88f5:	022282        	l32i	a8, a2, 8
400d88f8:	ffc882        	addi	a8, a8, -1
400d88fb:	2289      	s32i.n	a8, a2, 8
400d88fd:	11ef25        	call8	400ea7f0 <operator delete(void*)>
400d8900:	000086        	j	400d8906 <nvs::HashList::erase(unsigned int, bool)+0x82>
400d8903:	196800        	lsi	f0, a8, 100
400d8906:	f82516        	beqz	a5, 400d888c <nvs::HashList::erase(unsigned int, bool)+0x8>
400d8909:	f01d      	retw.n
400d890b:	d48c00        	extui	a8, a0, 12, 14
400d890e:	ded6d1        	l32r	a13, 400d0468 <_flash_cache_start+0x450>
400d8911:	ded6c1        	l32r	a12, 400d046c <_flash_cache_start+0x454>
400d8914:	61a0b2        	movi	a11, 97
400d8917:	ded6a1        	l32r	a10, 400d0470 <_flash_cache_start+0x458>
400d891a:	021b25        	call8	400daacc <__assert_func>
400d891d:	f01d      	retw.n
	...

400d8920 <nvs::HashList::find(unsigned int, nvs::Item const&)>:
400d8920:	004136        	entry	a1, 32
400d8923:	04ad      	mov.n	a10, a4
400d8925:	006565        	call8	400d8f7c <nvs::Item::calculateCrc32WithoutValue() const>
400d8928:	ded381        	l32r	a8, 400d0474 <_flash_cache_start+0x45c>
400d892b:	10aa80        	and	a10, a10, a8
400d892e:	02b8      	l32i.n	a11, a2, 0
400d8930:	cbac      	beqz.n	a11, 400d8960 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x40>
400d8932:	080c      	movi.n	a8, 0
400d8934:	2b98      	l32i.n	a9, a11, 8
400d8936:	20b897        	bgeu	a8, a9, 400d895a <nvs::HashList::find(unsigned int, nvs::Item const&)+0x3a>
400d8939:	a098b0        	addx4	a9, a8, a11
400d893c:	0c0992        	l8ui	a9, a9, 12
400d893f:	092d      	mov.n	a2, a9
400d8941:	103937        	bltu	a9, a3, 400d8955 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x35>
400d8944:	a0c8b0        	addx4	a12, a8, a11
400d8947:	3cc8      	l32i.n	a12, a12, 12
400d8949:	41c8c0        	srli	a12, a12, 8
400d894c:	059ac7        	bne	a10, a12, 400d8955 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x35>
400d894f:	ffa0c2        	movi	a12, 255
400d8952:	0c99c7        	bne	a9, a12, 400d8962 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x42>
400d8955:	881b      	addi.n	a8, a8, 1
400d8957:	fff646        	j	400d8934 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x14>
400d895a:	1bb8      	l32i.n	a11, a11, 4
400d895c:	fff406        	j	400d8930 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x10>
400d895f:	f27c00        	rems	a7, a12, a0
400d8962:	f01d      	retw.n

400d8964 <nvs::PageManager::activatePage()>:
400d8964:	004136        	entry	a1, 32
400d8967:	052232        	l32i	a3, a2, 20
400d896a:	092316        	beqz	a3, 400d8a00 <nvs::PageManager::activatePage()+0x9c>
400d896d:	032232        	l32i	a3, a2, 12
400d8970:	032392        	l32i	a9, a3, 12
400d8973:	087c      	movi.n	a8, -16
400d8975:	079987        	bne	a9, a8, 400d8980 <nvs::PageManager::activatePage()+0x1c>
400d8978:	03ad      	mov.n	a10, a3
400d897a:	ffdfa5        	call8	400d8774 <nvs::Page::erase()>
400d897d:	084a56        	bnez	a10, 400d8a05 <nvs::PageManager::activatePage()+0xa1>
400d8980:	3298      	l32i.n	a9, a2, 12
400d8982:	0988      	l32i.n	a8, a9, 0
400d8984:	1998      	l32i.n	a9, a9, 4
400d8986:	388c      	beqz.n	a8, 400d898d <nvs::PageManager::activatePage()+0x29>
400d8988:	1899      	s32i.n	a9, a8, 4
400d898a:	000046        	j	400d898f <nvs::PageManager::activatePage()+0x2b>
400d898d:	3299      	s32i.n	a9, a2, 12
400d898f:	398c      	beqz.n	a9, 400d8996 <nvs::PageManager::activatePage()+0x32>
400d8991:	0989      	s32i.n	a8, a9, 0
400d8993:	000046        	j	400d8998 <nvs::PageManager::activatePage()+0x34>
400d8996:	4289      	s32i.n	a8, a2, 16
400d8998:	f03d      	nop.n
400d899a:	f03d      	nop.n
400d899c:	f03d      	nop.n
400d899e:	f03d      	nop.n
400d89a0:	5288      	l32i.n	a8, a2, 20
400d89a2:	880b      	addi.n	a8, a8, -1
400d89a4:	5289      	s32i.n	a8, a2, 20
400d89a6:	f03d      	nop.n
400d89a8:	f03d      	nop.n
400d89aa:	f03d      	nop.n
400d89ac:	f03d      	nop.n
400d89ae:	1288      	l32i.n	a8, a2, 4
400d89b0:	088c      	beqz.n	a8, 400d89b4 <nvs::PageManager::activatePage()+0x50>
400d89b2:	1839      	s32i.n	a3, a8, 4
400d89b4:	f03d      	nop.n
400d89b6:	f03d      	nop.n
400d89b8:	f03d      	nop.n
400d89ba:	f03d      	nop.n
400d89bc:	1288      	l32i.n	a8, a2, 4
400d89be:	0389      	s32i.n	a8, a3, 0
400d89c0:	080c      	movi.n	a8, 0
400d89c2:	1389      	s32i.n	a8, a3, 4
400d89c4:	1239      	s32i.n	a3, a2, 4
400d89c6:	f03d      	nop.n
400d89c8:	f03d      	nop.n
400d89ca:	f03d      	nop.n
400d89cc:	f03d      	nop.n
400d89ce:	0288      	l32i.n	a8, a2, 0
400d89d0:	08cc      	bnez.n	a8, 400d89d4 <nvs::PageManager::activatePage()+0x70>
400d89d2:	0239      	s32i.n	a3, a2, 0
400d89d4:	f03d      	nop.n
400d89d6:	f03d      	nop.n
400d89d8:	f03d      	nop.n
400d89da:	f03d      	nop.n
400d89dc:	022282        	l32i	a8, a2, 8
400d89df:	01c882        	addi	a8, a8, 1
400d89e2:	026282        	s32i	a8, a2, 8
400d89e5:	f03d      	nop.n
400d89e7:	f03d      	nop.n
400d89e9:	f03d      	nop.n
400d89eb:	f03d      	nop.n
400d89ed:	92b8      	l32i.n	a11, a2, 36
400d89ef:	03ad      	mov.n	a10, a3
400d89f1:	ffd6e5        	call8	400d8760 <nvs::Page::setSeqNumber(unsigned int)>
400d89f4:	9238      	l32i.n	a3, a2, 36
400d89f6:	331b      	addi.n	a3, a3, 1
400d89f8:	9239      	s32i.n	a3, a2, 36
400d89fa:	020c      	movi.n	a2, 0
400d89fc:	f01d      	retw.n
400d89fe:	210000        	srai	a0, a0, 0
400d8a01:	9e          	.byte 0x9e
400d8a02:	de          	.byte 0xde
400d8a03:	f01d      	retw.n
400d8a05:	0a2d      	mov.n	a2, a10
400d8a07:	f01d      	retw.n
400d8a09:	000000        	ill

400d8a0c <nvs::PageManager::load(unsigned int, unsigned int)>:
400d8a0c:	00e136        	entry	a1, 112
400d8a0f:	7139      	s32i.n	a3, a1, 28
400d8a11:	f03d      	nop.n
400d8a13:	f03d      	nop.n
400d8a15:	f03d      	nop.n
400d8a17:	f03d      	nop.n
400d8a19:	dd9a31        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d8a1c:	0020c0        	memw
400d8a1f:	0338      	l32i.n	a3, a3, 0
400d8a21:	0020c0        	memw
400d8a24:	136132        	s32i	a3, a1, 76
400d8a27:	f03d      	nop.n
400d8a29:	f03d      	nop.n
400d8a2b:	f03d      	nop.n
400d8a2d:	f03d      	nop.n
400d8a2f:	7138      	l32i.n	a3, a1, 28
400d8a31:	7239      	s32i.n	a3, a2, 28
400d8a33:	8249      	s32i.n	a4, a2, 32
400d8a35:	f03d      	nop.n
400d8a37:	f03d      	nop.n
400d8a39:	f03d      	nop.n
400d8a3b:	f03d      	nop.n
400d8a3d:	0238      	l32i.n	a3, a2, 0
400d8a3f:	53ac      	beqz.n	a3, 400d8a68 <nvs::PageManager::load(unsigned int, unsigned int)+0x5c>
400d8a41:	0358      	l32i.n	a5, a3, 0
400d8a43:	1338      	l32i.n	a3, a3, 4
400d8a45:	358c      	beqz.n	a5, 400d8a4c <nvs::PageManager::load(unsigned int, unsigned int)+0x40>
400d8a47:	1539      	s32i.n	a3, a5, 4
400d8a49:	000046        	j	400d8a4e <nvs::PageManager::load(unsigned int, unsigned int)+0x42>
400d8a4c:	0239      	s32i.n	a3, a2, 0
400d8a4e:	338c      	beqz.n	a3, 400d8a55 <nvs::PageManager::load(unsigned int, unsigned int)+0x49>
400d8a50:	0359      	s32i.n	a5, a3, 0
400d8a52:	000046        	j	400d8a57 <nvs::PageManager::load(unsigned int, unsigned int)+0x4b>
400d8a55:	1259      	s32i.n	a5, a2, 4
400d8a57:	f03d      	nop.n
400d8a59:	f03d      	nop.n
400d8a5b:	f03d      	nop.n
400d8a5d:	f03d      	nop.n
400d8a5f:	2238      	l32i.n	a3, a2, 8
400d8a61:	330b      	addi.n	a3, a3, -1
400d8a63:	2239      	s32i.n	a3, a2, 8
400d8a65:	fff306        	j	400d8a35 <nvs::PageManager::load(unsigned int, unsigned int)+0x29>
400d8a68:	3238      	l32i.n	a3, a2, 12
400d8a6a:	63ac      	beqz.n	a3, 400d8a94 <nvs::PageManager::load(unsigned int, unsigned int)+0x88>
400d8a6c:	0358      	l32i.n	a5, a3, 0
400d8a6e:	1338      	l32i.n	a3, a3, 4
400d8a70:	458c      	beqz.n	a5, 400d8a78 <nvs::PageManager::load(unsigned int, unsigned int)+0x6c>
400d8a72:	1539      	s32i.n	a3, a5, 4
400d8a74:	000086        	j	400d8a7a <nvs::PageManager::load(unsigned int, unsigned int)+0x6e>
400d8a77:	323900        	orbc	b3, b9, b0
400d8a7a:	338c      	beqz.n	a3, 400d8a81 <nvs::PageManager::load(unsigned int, unsigned int)+0x75>
400d8a7c:	0359      	s32i.n	a5, a3, 0
400d8a7e:	000046        	j	400d8a83 <nvs::PageManager::load(unsigned int, unsigned int)+0x77>
400d8a81:	4259      	s32i.n	a5, a2, 16
400d8a83:	f03d      	nop.n
400d8a85:	f03d      	nop.n
400d8a87:	f03d      	nop.n
400d8a89:	f03d      	nop.n
400d8a8b:	5238      	l32i.n	a3, a2, 20
400d8a8d:	330b      	addi.n	a3, a3, -1
400d8a8f:	5239      	s32i.n	a3, a2, 20
400d8a91:	fff4c6        	j	400d8a68 <nvs::PageManager::load(unsigned int, unsigned int)+0x5c>
400d8a94:	de7b31        	l32r	a3, 400d0480 <_flash_cache_start+0x468>
400d8a97:	0b3347        	bltu	a3, a4, 400d8aa6 <nvs::PageManager::load(unsigned int, unsigned int)+0x9a>
400d8a9a:	a03440        	addx4	a3, a4, a4
400d8a9d:	11a3c0        	slli	a10, a3, 4
400d8aa0:	aa4b      	addi.n	a10, a10, 4
400d8aa2:	000086        	j	400d8aa8 <nvs::PageManager::load(unsigned int, unsigned int)+0x9c>
400d8aa5:	fa7c00        	mov.s	f7, f12
400d8aa8:	201110        	or	a1, a1, a1
400d8aab:	11d565        	call8	400ea800 <operator new[](unsigned int)>
400d8aae:	0a6d      	mov.n	a6, a10
400d8ab0:	0a49      	s32i.n	a4, a10, 0
400d8ab2:	7a4b      	addi.n	a7, a10, 4
400d8ab4:	540b      	addi.n	a5, a4, -1
400d8ab6:	073d      	mov.n	a3, a7
400d8ab8:	300526        	beqi	a5, -1, 400d8aec <nvs::PageManager::load(unsigned int, unsigned int)+0xe0>
400d8abb:	080c      	movi.n	a8, 0
400d8abd:	0389      	s32i.n	a8, a3, 0
400d8abf:	1389      	s32i.n	a8, a3, 4
400d8ac1:	2389      	s32i.n	a8, a3, 8
400d8ac3:	3389      	s32i.n	a8, a3, 12
400d8ac5:	f97c      	movi.n	a9, -1
400d8ac7:	4399      	s32i.n	a9, a3, 16
400d8ac9:	ea7c      	movi.n	a10, -2
400d8acb:	1443a2        	s8i	a10, a3, 20
400d8ace:	e399      	s32i.n	a9, a3, 56
400d8ad0:	f399      	s32i.n	a9, a3, 60
400d8ad2:	205382        	s16i	a8, a3, 64
400d8ad5:	215382        	s16i	a8, a3, 66
400d8ad8:	0020c0        	memw
400d8adb:	44c3a2        	addi	a10, a3, 68
400d8ade:	201110        	or	a1, a1, a1
400d8ae1:	137ee5        	call8	400ec2d0 <nvs::HashList::HashList()>
400d8ae4:	50c332        	addi	a3, a3, 80
400d8ae7:	550b      	addi.n	a5, a5, -1
400d8ae9:	fff2c6        	j	400d8ab8 <nvs::PageManager::load(unsigned int, unsigned int)+0xac>
400d8aec:	6258      	l32i.n	a5, a2, 24
400d8aee:	6279      	s32i.n	a7, a2, 24
400d8af0:	15bc      	beqz.n	a5, 400d8b25 <nvs::PageManager::load(unsigned int, unsigned int)+0x119>
400d8af2:	f5ac      	beqz.n	a5, 400d8b25 <nvs::PageManager::load(unsigned int, unsigned int)+0x119>
400d8af4:	fcc532        	addi	a3, a5, -4
400d8af7:	f03d      	nop.n
400d8af9:	f03d      	nop.n
400d8afb:	f03d      	nop.n
400d8afd:	0368      	l32i.n	a6, a3, 0
400d8aff:	a06660        	addx4	a6, a6, a6
400d8b02:	1136c0        	slli	a3, a6, 4
400d8b05:	036d      	mov.n	a6, a3
400d8b07:	353a      	add.n	a3, a5, a3
400d8b09:	0f1537        	beq	a5, a3, 400d8b1c <nvs::PageManager::load(unsigned int, unsigned int)+0x110>
400d8b0c:	b0c332        	addi	a3, a3, -80
400d8b0f:	44c3a2        	addi	a10, a3, 68
400d8b12:	201110        	or	a1, a1, a1
400d8b15:	ffcd65        	call8	400d87ec <nvs::HashList::~HashList()>
400d8b18:	fffb46        	j	400d8b09 <nvs::PageManager::load(unsigned int, unsigned int)+0xfd>
400d8b1b:	c5a200        	extui	a10, a0, 18, 13
400d8b1e:	10fc      	bnez.n	a0, 400d8b53 <nvs::PageManager::load(unsigned int, unsigned int)+0x147>
400d8b20:	a52011        	l32r	a1, 400c1fa0 <_rtc_text_end+0x1fa0>
400d8b23:	0c1205        	call0	400e4c44 <_vfprintf_r+0x2d08>
400d8b26:	354705        	call0	4010df98 <_etext+0x21ac7>
400d8b29:	600602        	l8ui	a0, a6, 96
400d8b2c:	62a800        	lsi	f0, a8, 0x188
400d8b2f:	a03550        	addx4	a3, a5, a5
400d8b32:	1163c0        	slli	a6, a3, 4
400d8b35:	7138      	l32i.n	a3, a1, 28
400d8b37:	b53a      	add.n	a11, a5, a3
400d8b39:	aa6a      	add.n	a10, a10, a6
400d8b3b:	201110        	or	a1, a1, a1
400d8b3e:	ffabe5        	call8	400d85fc <nvs::Page::load(unsigned int)>
400d8b41:	3a8c      	beqz.n	a10, 400d8b48 <nvs::PageManager::load(unsigned int, unsigned int)+0x13c>
400d8b43:	0a2d      	mov.n	a2, a10
400d8b45:	00ed86        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8b48:	62a8      	l32i.n	a10, a2, 24
400d8b4a:	24c1b2        	addi	a11, a1, 36
400d8b4d:	aa6a      	add.n	a10, a10, a6
400d8b4f:	201110        	or	a1, a1, a1
400d8b52:	ffbe25        	call8	400d8734 <nvs::Page::getSeqNumber(unsigned int&) const>
400d8b55:	9abc      	beqz.n	a10, 400d8b92 <nvs::PageManager::load(unsigned int, unsigned int)+0x186>
400d8b57:	6238      	l32i.n	a3, a2, 24
400d8b59:	636a      	add.n	a6, a3, a6
400d8b5b:	4238      	l32i.n	a3, a2, 16
400d8b5d:	038c      	beqz.n	a3, 400d8b61 <nvs::PageManager::load(unsigned int, unsigned int)+0x155>
400d8b5f:	1369      	s32i.n	a6, a3, 4
400d8b61:	f03d      	nop.n
400d8b63:	f03d      	nop.n
400d8b65:	f03d      	nop.n
400d8b67:	f03d      	nop.n
400d8b69:	4238      	l32i.n	a3, a2, 16
400d8b6b:	0639      	s32i.n	a3, a6, 0
400d8b6d:	030c      	movi.n	a3, 0
400d8b6f:	1639      	s32i.n	a3, a6, 4
400d8b71:	4269      	s32i.n	a6, a2, 16
400d8b73:	f03d      	nop.n
400d8b75:	f03d      	nop.n
400d8b77:	f03d      	nop.n
400d8b79:	f03d      	nop.n
400d8b7b:	3238      	l32i.n	a3, a2, 12
400d8b7d:	03cc      	bnez.n	a3, 400d8b81 <nvs::PageManager::load(unsigned int, unsigned int)+0x175>
400d8b7f:	3269      	s32i.n	a6, a2, 12
400d8b81:	f03d      	nop.n
400d8b83:	f03d      	nop.n
400d8b85:	f03d      	nop.n
400d8b87:	f03d      	nop.n
400d8b89:	5238      	l32i.n	a3, a2, 20
400d8b8b:	331b      	addi.n	a3, a3, 1
400d8b8d:	5239      	s32i.n	a3, a2, 20
400d8b8f:	004546        	j	400d8ca8 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d8b92:	0238      	l32i.n	a3, a2, 0
400d8b94:	070c      	movi.n	a7, 0
400d8b96:	9188      	l32i.n	a8, a1, 36
400d8b98:	6189      	s32i.n	a8, a1, 24
400d8b9a:	271377        	beq	a3, a7, 400d8bc5 <nvs::PageManager::load(unsigned int, unsigned int)+0x1b9>
400d8b9d:	28c1b2        	addi	a11, a1, 40
400d8ba0:	03ad      	mov.n	a10, a3
400d8ba2:	201110        	or	a1, a1, a1
400d8ba5:	ffb8e5        	call8	400d8734 <nvs::Page::getSeqNumber(unsigned int&) const>
400d8ba8:	aacc      	bnez.n	a10, 400d8bb6 <nvs::PageManager::load(unsigned int, unsigned int)+0x1aa>
400d8baa:	a188      	l32i.n	a8, a1, 40
400d8bac:	6198      	l32i.n	a9, a1, 24
400d8bae:	0a3987        	bltu	a9, a8, 400d8bbc <nvs::PageManager::load(unsigned int, unsigned int)+0x1b0>
400d8bb1:	080c      	movi.n	a8, 0
400d8bb3:	0001c6        	j	400d8bbe <nvs::PageManager::load(unsigned int, unsigned int)+0x1b2>
400d8bb6:	080c      	movi.n	a8, 0
400d8bb8:	000086        	j	400d8bbe <nvs::PageManager::load(unsigned int, unsigned int)+0x1b2>
400d8bbb:	180c00        	lsxp	f0, a12, a0
400d8bbe:	88cc      	bnez.n	a8, 400d8bca <nvs::PageManager::load(unsigned int, unsigned int)+0x1be>
400d8bc0:	180c      	movi.n	a8, 1
400d8bc2:	000186        	j	400d8bcc <nvs::PageManager::load(unsigned int, unsigned int)+0x1c0>
400d8bc5:	080c      	movi.n	a8, 0
400d8bc7:	000046        	j	400d8bcc <nvs::PageManager::load(unsigned int, unsigned int)+0x1c0>
400d8bca:	080c      	movi.n	a8, 0
400d8bcc:	488c      	beqz.n	a8, 400d8bd4 <nvs::PageManager::load(unsigned int, unsigned int)+0x1c8>
400d8bce:	1338      	l32i.n	a3, a3, 4
400d8bd0:	fff186        	j	400d8b9a <nvs::PageManager::load(unsigned int, unsigned int)+0x18e>
400d8bd3:	93fc00        	movnez	a15, a12, a0
400d8bd6:	6238      	l32i.n	a3, a2, 24
400d8bd8:	636a      	add.n	a6, a3, a6
400d8bda:	1238      	l32i.n	a3, a2, 4
400d8bdc:	038c      	beqz.n	a3, 400d8be0 <nvs::PageManager::load(unsigned int, unsigned int)+0x1d4>
400d8bde:	1369      	s32i.n	a6, a3, 4
400d8be0:	f03d      	nop.n
400d8be2:	f03d      	nop.n
400d8be4:	f03d      	nop.n
400d8be6:	f03d      	nop.n
400d8be8:	1238      	l32i.n	a3, a2, 4
400d8bea:	0639      	s32i.n	a3, a6, 0
400d8bec:	030c      	movi.n	a3, 0
400d8bee:	1639      	s32i.n	a3, a6, 4
400d8bf0:	1269      	s32i.n	a6, a2, 4
400d8bf2:	f03d      	nop.n
400d8bf4:	f03d      	nop.n
400d8bf6:	f03d      	nop.n
400d8bf8:	f03d      	nop.n
400d8bfa:	0238      	l32i.n	a3, a2, 0
400d8bfc:	03cc      	bnez.n	a3, 400d8c00 <nvs::PageManager::load(unsigned int, unsigned int)+0x1f4>
400d8bfe:	0269      	s32i.n	a6, a2, 0
400d8c00:	f03d      	nop.n
400d8c02:	f03d      	nop.n
400d8c04:	f03d      	nop.n
400d8c06:	f03d      	nop.n
400d8c08:	2238      	l32i.n	a3, a2, 8
400d8c0a:	331b      	addi.n	a3, a3, 1
400d8c0c:	2239      	s32i.n	a3, a2, 8
400d8c0e:	002586        	j	400d8ca8 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d8c11:	6278      	l32i.n	a7, a2, 24
400d8c13:	676a      	add.n	a6, a7, a6
400d8c15:	037d      	mov.n	a7, a3
400d8c17:	63fc      	bnez.n	a3, 400d8c51 <nvs::PageManager::load(unsigned int, unsigned int)+0x245>
400d8c19:	1238      	l32i.n	a3, a2, 4
400d8c1b:	138c      	beqz.n	a3, 400d8c20 <nvs::PageManager::load(unsigned int, unsigned int)+0x214>
400d8c1d:	016362        	s32i	a6, a3, 4
400d8c20:	f03d      	nop.n
400d8c22:	f03d      	nop.n
400d8c24:	f03d      	nop.n
400d8c26:	f03d      	nop.n
400d8c28:	1238      	l32i.n	a3, a2, 4
400d8c2a:	0639      	s32i.n	a3, a6, 0
400d8c2c:	030c      	movi.n	a3, 0
400d8c2e:	1639      	s32i.n	a3, a6, 4
400d8c30:	1269      	s32i.n	a6, a2, 4
400d8c32:	f03d      	nop.n
400d8c34:	f03d      	nop.n
400d8c36:	f03d      	nop.n
400d8c38:	f03d      	nop.n
400d8c3a:	0238      	l32i.n	a3, a2, 0
400d8c3c:	03cc      	bnez.n	a3, 400d8c40 <nvs::PageManager::load(unsigned int, unsigned int)+0x234>
400d8c3e:	0269      	s32i.n	a6, a2, 0
400d8c40:	f03d      	nop.n
400d8c42:	f03d      	nop.n
400d8c44:	f03d      	nop.n
400d8c46:	f03d      	nop.n
400d8c48:	2238      	l32i.n	a3, a2, 8
400d8c4a:	331b      	addi.n	a3, a3, 1
400d8c4c:	2239      	s32i.n	a3, a2, 8
400d8c4e:	001586        	j	400d8ca8 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d8c51:	0338      	l32i.n	a3, a3, 0
400d8c53:	b3fc      	bnez.n	a3, 400d8c92 <nvs::PageManager::load(unsigned int, unsigned int)+0x286>
400d8c55:	0639      	s32i.n	a3, a6, 0
400d8c57:	f03d      	nop.n
400d8c59:	f03d      	nop.n
400d8c5b:	f03d      	nop.n
400d8c5d:	f03d      	nop.n
400d8c5f:	0238      	l32i.n	a3, a2, 0
400d8c61:	1639      	s32i.n	a3, a6, 4
400d8c63:	f03d      	nop.n
400d8c65:	f03d      	nop.n
400d8c67:	f03d      	nop.n
400d8c69:	f03d      	nop.n
400d8c6b:	0238      	l32i.n	a3, a2, 0
400d8c6d:	038c      	beqz.n	a3, 400d8c71 <nvs::PageManager::load(unsigned int, unsigned int)+0x265>
400d8c6f:	0369      	s32i.n	a6, a3, 0
400d8c71:	0269      	s32i.n	a6, a2, 0
400d8c73:	f03d      	nop.n
400d8c75:	f03d      	nop.n
400d8c77:	f03d      	nop.n
400d8c79:	f03d      	nop.n
400d8c7b:	1238      	l32i.n	a3, a2, 4
400d8c7d:	03cc      	bnez.n	a3, 400d8c81 <nvs::PageManager::load(unsigned int, unsigned int)+0x275>
400d8c7f:	1269      	s32i.n	a6, a2, 4
400d8c81:	f03d      	nop.n
400d8c83:	f03d      	nop.n
400d8c85:	f03d      	nop.n
400d8c87:	f03d      	nop.n
400d8c89:	2238      	l32i.n	a3, a2, 8
400d8c8b:	331b      	addi.n	a3, a3, 1
400d8c8d:	2239      	s32i.n	a3, a2, 8
400d8c8f:	000546        	j	400d8ca8 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d8c92:	1369      	s32i.n	a6, a3, 4
400d8c94:	0769      	s32i.n	a6, a7, 0
400d8c96:	1679      	s32i.n	a7, a6, 4
400d8c98:	0639      	s32i.n	a3, a6, 0
400d8c9a:	f03d      	nop.n
400d8c9c:	f03d      	nop.n
400d8c9e:	f03d      	nop.n
400d8ca0:	f03d      	nop.n
400d8ca2:	2238      	l32i.n	a3, a2, 8
400d8ca4:	331b      	addi.n	a3, a3, 1
400d8ca6:	2239      	s32i.n	a3, a2, 8
400d8ca8:	551b      	addi.n	a5, a5, 1
400d8caa:	ff9e46        	j	400d8b27 <nvs::PageManager::load(unsigned int, unsigned int)+0x11b>
400d8cad:	223800        	orb	b3, b8, b0
400d8cb0:	d3cc      	bnez.n	a3, 400d8cc1 <nvs::PageManager::load(unsigned int, unsigned int)+0x2b5>
400d8cb2:	9239      	s32i.n	a3, a2, 36
400d8cb4:	02ad      	mov.n	a10, a2
400d8cb6:	201110        	or	a1, a1, a1
400d8cb9:	ffcaa5        	call8	400d8964 <nvs::PageManager::activatePage()>
400d8cbc:	0a2d      	mov.n	a2, a10
400d8cbe:	008f46        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8cc1:	28c1b2        	addi	a11, a1, 40
400d8cc4:	0122a2        	l32i	a10, a2, 4
400d8cc7:	201110        	or	a1, a1, a1
400d8cca:	ffa6a5        	call8	400d8734 <nvs::Page::getSeqNumber(unsigned int&) const>
400d8ccd:	0a9c      	beqz.n	a10, 400d8ce1 <nvs::PageManager::load(unsigned int, unsigned int)+0x2d5>
400d8ccf:	ddede1        	l32r	a14, 400d0484 <_flash_cache_start+0x46c>
400d8cd2:	ddedd1        	l32r	a13, 400d0488 <_flash_cache_start+0x470>
400d8cd5:	34a0c2        	movi	a12, 52
400d8cd8:	ddedb1        	l32r	a11, 400d048c <_flash_cache_start+0x474>
400d8cdb:	201110        	or	a1, a1, a1
400d8cde:	b29665        	call8	4008b644 <_esp_error_check_failed>
400d8ce1:	a138      	l32i.n	a3, a1, 40
400d8ce3:	331b      	addi.n	a3, a3, 1
400d8ce5:	9239      	s32i.n	a3, a2, 36
400d8ce7:	f03d      	nop.n
400d8ce9:	f03d      	nop.n
400d8ceb:	f03d      	nop.n
400d8ced:	f03d      	nop.n
400d8cef:	1268      	l32i.n	a6, a2, 4
400d8cf1:	030c      	movi.n	a3, 0
400d8cf3:	a139      	s32i.n	a3, a1, 40
400d8cf5:	f37c      	movi.n	a3, -1
400d8cf7:	ffa0b2        	movi	a11, 255
400d8cfa:	11b9      	s32i.n	a11, a1, 4
400d8cfc:	01b9      	s32i.n	a11, a1, 0
400d8cfe:	2cc1f2        	addi	a15, a1, 44
400d8d01:	28c1e2        	addi	a14, a1, 40
400d8d04:	0d0c      	movi.n	a13, 0
400d8d06:	0bcd      	mov.n	a12, a11
400d8d08:	06ad      	mov.n	a10, a6
400d8d0a:	201110        	or	a1, a1, a1
400d8d0d:	ff1265        	call8	400d7e34 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d8d10:	cacc      	bnez.n	a10, 400d8d20 <nvs::PageManager::load(unsigned int, unsigned int)+0x314>
400d8d12:	2e0142        	l8ui	a4, a1, 46
400d8d15:	a138      	l32i.n	a3, a1, 40
400d8d17:	343a      	add.n	a3, a4, a3
400d8d19:	a139      	s32i.n	a3, a1, 40
400d8d1b:	fff606        	j	400d8cf7 <nvs::PageManager::load(unsigned int, unsigned int)+0x2eb>
400d8d1e:	660000        	lsi	f0, a0, 0x198
400d8d21:	c60203        	lsi	f0, a2, 0x318
400d8d24:	380022        	l8ui	a2, a0, 56
400d8d27:	03ad02        	movi	a0, 0xfffffd03
400d8d2a:	321367        	beq	a3, a6, 400d8d60 <nvs::PageManager::load(unsigned int, unsigned int)+0x354>
400d8d2d:	3358      	l32i.n	a5, a3, 12
400d8d2f:	847c      	movi.n	a4, -8
400d8d31:	1b1547        	beq	a5, a4, 400d8d50 <nvs::PageManager::load(unsigned int, unsigned int)+0x344>
400d8d34:	ffa0f2        	movi	a15, 255
400d8d37:	2f01e2        	l8ui	a14, a1, 47
400d8d3a:	34c1d2        	addi	a13, a1, 52
400d8d3d:	2d01c2        	l8ui	a12, a1, 45
400d8d40:	2c01b2        	l8ui	a11, a1, 44
400d8d43:	201110        	or	a1, a1, a1
400d8d46:	ff3c25        	call8	400d8108 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d8d49:	8acc      	bnez.n	a10, 400d8d55 <nvs::PageManager::load(unsigned int, unsigned int)+0x349>
400d8d4b:	140c      	movi.n	a4, 1
400d8d4d:	000186        	j	400d8d57 <nvs::PageManager::load(unsigned int, unsigned int)+0x34b>
400d8d50:	040c      	movi.n	a4, 0
400d8d52:	000046        	j	400d8d57 <nvs::PageManager::load(unsigned int, unsigned int)+0x34b>
400d8d55:	040c      	movi.n	a4, 0
400d8d57:	54cc      	bnez.n	a4, 400d8d60 <nvs::PageManager::load(unsigned int, unsigned int)+0x354>
400d8d59:	1338      	l32i.n	a3, a3, 4
400d8d5b:	fff246        	j	400d8d28 <nvs::PageManager::load(unsigned int, unsigned int)+0x31c>
400d8d5e:	670000        	lsi	f0, a0, 0x19c
400d8d61:	420c93        	lsi	f9, a12, 0x108
400d8d64:	4c2d01        	l32r	a0, 400abe18 <_iram_end+0x1e2c4>
400d8d67:	143783        	lsi	f8, a7, 80
400d8d6a:	0c0a      	add.n	a0, a12, a0
400d8d6c:	01c607        	bnall	a6, a0, 400d8d71 <nvs::PageManager::load(unsigned int, unsigned int)+0x365>
400d8d6f:	070c00        	lsi	f0, a12, 28
400d8d72:	000086        	j	400d8d78 <nvs::PageManager::load(unsigned int, unsigned int)+0x36c>
400d8d75:	170c00        	lsi	f0, a12, 92
400d8d78:	67bc      	beqz.n	a7, 400d8db2 <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d8d7a:	0238      	l32i.n	a3, a2, 0
400d8d7c:	03ad      	mov.n	a10, a3
400d8d7e:	301367        	beq	a3, a6, 400d8db2 <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d8d81:	3358      	l32i.n	a5, a3, 12
400d8d83:	847c      	movi.n	a4, -8
400d8d85:	1a1547        	beq	a5, a4, 400d8da3 <nvs::PageManager::load(unsigned int, unsigned int)+0x397>
400d8d88:	ffa0f2        	movi	a15, 255
400d8d8b:	2f01e2        	l8ui	a14, a1, 47
400d8d8e:	34c1d2        	addi	a13, a1, 52
400d8d91:	1c4c      	movi.n	a12, 65
400d8d93:	2c01b2        	l8ui	a11, a1, 44
400d8d96:	201110        	or	a1, a1, a1
400d8d99:	ff36e5        	call8	400d8108 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d8d9c:	8acc      	bnez.n	a10, 400d8da8 <nvs::PageManager::load(unsigned int, unsigned int)+0x39c>
400d8d9e:	074d      	mov.n	a4, a7
400d8da0:	000186        	j	400d8daa <nvs::PageManager::load(unsigned int, unsigned int)+0x39e>
400d8da3:	040c      	movi.n	a4, 0
400d8da5:	000046        	j	400d8daa <nvs::PageManager::load(unsigned int, unsigned int)+0x39e>
400d8da8:	040c      	movi.n	a4, 0
400d8daa:	44cc      	bnez.n	a4, 400d8db2 <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d8dac:	1338      	l32i.n	a3, a3, 4
400d8dae:	fff286        	j	400d8d7c <nvs::PageManager::load(unsigned int, unsigned int)+0x370>
400d8db1:	024800        	andb	b4, b8, b0
400d8db4:	043d      	mov.n	a3, a4
400d8db6:	123416        	beqz	a4, 400d8edd <nvs::PageManager::load(unsigned int, unsigned int)+0x4d1>
400d8db9:	3458      	l32i.n	a5, a4, 12
400d8dbb:	847c      	movi.n	a4, -8
400d8dbd:	021547        	beq	a5, a4, 400d8dc3 <nvs::PageManager::load(unsigned int, unsigned int)+0x3b7>
400d8dc0:	004506        	j	400d8ed8 <nvs::PageManager::load(unsigned int, unsigned int)+0x4cc>
400d8dc3:	1248      	l32i.n	a4, a2, 4
400d8dc5:	3468      	l32i.n	a6, a4, 12
400d8dc7:	e57c      	movi.n	a5, -2
400d8dc9:	6b9657        	bne	a6, a5, 400d8e38 <nvs::PageManager::load(unsigned int, unsigned int)+0x42c>
400d8dcc:	04ad      	mov.n	a10, a4
400d8dce:	201110        	or	a1, a1, a1
400d8dd1:	ff9a25        	call8	400d8774 <nvs::Page::erase()>
400d8dd4:	110a56        	bnez	a10, 400d8ee8 <nvs::PageManager::load(unsigned int, unsigned int)+0x4dc>
400d8dd7:	0458      	l32i.n	a5, a4, 0
400d8dd9:	1468      	l32i.n	a6, a4, 4
400d8ddb:	358c      	beqz.n	a5, 400d8de2 <nvs::PageManager::load(unsigned int, unsigned int)+0x3d6>
400d8ddd:	1569      	s32i.n	a6, a5, 4
400d8ddf:	000046        	j	400d8de4 <nvs::PageManager::load(unsigned int, unsigned int)+0x3d8>
400d8de2:	0269      	s32i.n	a6, a2, 0
400d8de4:	468c      	beqz.n	a6, 400d8dec <nvs::PageManager::load(unsigned int, unsigned int)+0x3e0>
400d8de6:	0659      	s32i.n	a5, a6, 0
400d8de8:	000086        	j	400d8dee <nvs::PageManager::load(unsigned int, unsigned int)+0x3e2>
400d8deb:	125900        	andbc	b5, b9, b0
400d8dee:	f03d      	nop.n
400d8df0:	f03d      	nop.n
400d8df2:	f03d      	nop.n
400d8df4:	f03d      	nop.n
400d8df6:	2258      	l32i.n	a5, a2, 8
400d8df8:	550b      	addi.n	a5, a5, -1
400d8dfa:	2259      	s32i.n	a5, a2, 8
400d8dfc:	f03d      	nop.n
400d8dfe:	f03d      	nop.n
400d8e00:	f03d      	nop.n
400d8e02:	f03d      	nop.n
400d8e04:	4258      	l32i.n	a5, a2, 16
400d8e06:	058c      	beqz.n	a5, 400d8e0a <nvs::PageManager::load(unsigned int, unsigned int)+0x3fe>
400d8e08:	1549      	s32i.n	a4, a5, 4
400d8e0a:	f03d      	nop.n
400d8e0c:	f03d      	nop.n
400d8e0e:	f03d      	nop.n
400d8e10:	f03d      	nop.n
400d8e12:	4258      	l32i.n	a5, a2, 16
400d8e14:	0459      	s32i.n	a5, a4, 0
400d8e16:	050c      	movi.n	a5, 0
400d8e18:	1459      	s32i.n	a5, a4, 4
400d8e1a:	4249      	s32i.n	a4, a2, 16
400d8e1c:	f03d      	nop.n
400d8e1e:	f03d      	nop.n
400d8e20:	f03d      	nop.n
400d8e22:	f03d      	nop.n
400d8e24:	3258      	l32i.n	a5, a2, 12
400d8e26:	05cc      	bnez.n	a5, 400d8e2a <nvs::PageManager::load(unsigned int, unsigned int)+0x41e>
400d8e28:	3249      	s32i.n	a4, a2, 12
400d8e2a:	f03d      	nop.n
400d8e2c:	f03d      	nop.n
400d8e2e:	f03d      	nop.n
400d8e30:	f03d      	nop.n
400d8e32:	5248      	l32i.n	a4, a2, 20
400d8e34:	441b      	addi.n	a4, a4, 1
400d8e36:	5249      	s32i.n	a4, a2, 20
400d8e38:	02ad      	mov.n	a10, a2
400d8e3a:	201110        	or	a1, a1, a1
400d8e3d:	ffb265        	call8	400d8964 <nvs::PageManager::activatePage()>
400d8e40:	0a9a56        	bnez	a10, 400d8eed <nvs::PageManager::load(unsigned int, unsigned int)+0x4e1>
400d8e43:	12b8      	l32i.n	a11, a2, 4
400d8e45:	03ad      	mov.n	a10, a3
400d8e47:	201110        	or	a1, a1, a1
400d8e4a:	feeca5        	call8	400d7d14 <nvs::Page::copyItems(nvs::Page&)>
400d8e4d:	160c      	movi.n	a6, 1
400d8e4f:	040c      	movi.n	a4, 0
400d8e51:	045d      	mov.n	a5, a4
400d8e53:	9356a0        	movnez	a5, a6, a10
400d8e56:	057d      	mov.n	a7, a5
400d8e58:	dd8e51        	l32r	a5, 400d0490 <_flash_cache_start+0x478>
400d8e5b:	805a50        	add	a5, a10, a5
400d8e5e:	934650        	movnez	a4, a6, a5
400d8e61:	020477        	bnone	a4, a7, 400d8e67 <nvs::PageManager::load(unsigned int, unsigned int)+0x45b>
400d8e64:	002286        	j	400d8ef2 <nvs::PageManager::load(unsigned int, unsigned int)+0x4e6>
400d8e67:	20a330        	or	a10, a3, a3
400d8e6a:	201110        	or	a1, a1, a1
400d8e6d:	ff9065        	call8	400d8774 <nvs::Page::erase()>
400d8e70:	084a56        	bnez	a10, 400d8ef8 <nvs::PageManager::load(unsigned int, unsigned int)+0x4ec>
400d8e73:	0348      	l32i.n	a4, a3, 0
400d8e75:	1358      	l32i.n	a5, a3, 4
400d8e77:	348c      	beqz.n	a4, 400d8e7e <nvs::PageManager::load(unsigned int, unsigned int)+0x472>
400d8e79:	1459      	s32i.n	a5, a4, 4
400d8e7b:	000046        	j	400d8e80 <nvs::PageManager::load(unsigned int, unsigned int)+0x474>
400d8e7e:	0259      	s32i.n	a5, a2, 0
400d8e80:	458c      	beqz.n	a5, 400d8e88 <nvs::PageManager::load(unsigned int, unsigned int)+0x47c>
400d8e82:	0549      	s32i.n	a4, a5, 0
400d8e84:	000086        	j	400d8e8a <nvs::PageManager::load(unsigned int, unsigned int)+0x47e>
400d8e87:	124900        	andbc	b4, b9, b0
400d8e8a:	f03d      	nop.n
400d8e8c:	f03d      	nop.n
400d8e8e:	f03d      	nop.n
400d8e90:	f03d      	nop.n
400d8e92:	2248      	l32i.n	a4, a2, 8
400d8e94:	440b      	addi.n	a4, a4, -1
400d8e96:	2249      	s32i.n	a4, a2, 8
400d8e98:	f03d      	nop.n
400d8e9a:	f03d      	nop.n
400d8e9c:	f03d      	nop.n
400d8e9e:	f03d      	nop.n
400d8ea0:	4248      	l32i.n	a4, a2, 16
400d8ea2:	048c      	beqz.n	a4, 400d8ea6 <nvs::PageManager::load(unsigned int, unsigned int)+0x49a>
400d8ea4:	1439      	s32i.n	a3, a4, 4
400d8ea6:	f03d      	nop.n
400d8ea8:	f03d      	nop.n
400d8eaa:	f03d      	nop.n
400d8eac:	f03d      	nop.n
400d8eae:	4248      	l32i.n	a4, a2, 16
400d8eb0:	0349      	s32i.n	a4, a3, 0
400d8eb2:	040c      	movi.n	a4, 0
400d8eb4:	1349      	s32i.n	a4, a3, 4
400d8eb6:	4239      	s32i.n	a3, a2, 16
400d8eb8:	f03d      	nop.n
400d8eba:	f03d      	nop.n
400d8ebc:	f03d      	nop.n
400d8ebe:	f03d      	nop.n
400d8ec0:	3248      	l32i.n	a4, a2, 12
400d8ec2:	04cc      	bnez.n	a4, 400d8ec6 <nvs::PageManager::load(unsigned int, unsigned int)+0x4ba>
400d8ec4:	3239      	s32i.n	a3, a2, 12
400d8ec6:	f03d      	nop.n
400d8ec8:	f03d      	nop.n
400d8eca:	f03d      	nop.n
400d8ecc:	f03d      	nop.n
400d8ece:	5238      	l32i.n	a3, a2, 20
400d8ed0:	331b      	addi.n	a3, a3, 1
400d8ed2:	5239      	s32i.n	a3, a2, 20
400d8ed4:	000146        	j	400d8edd <nvs::PageManager::load(unsigned int, unsigned int)+0x4d1>
400d8ed7:	134800        	wsr.windowbase	a0
400d8eda:	ffb586        	j	400d8db4 <nvs::PageManager::load(unsigned int, unsigned int)+0x3a8>
400d8edd:	5228      	l32i.n	a2, a2, 20
400d8edf:	a2dc      	bnez.n	a2, 400d8efd <nvs::PageManager::load(unsigned int, unsigned int)+0x4f1>
400d8ee1:	dd6621        	l32r	a2, 400d047c <_flash_cache_start+0x464>
400d8ee4:	0005c6        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8ee7:	0a2d00        	add.s	f2, f13, f0
400d8eea:	000446        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8eed:	0a2d      	mov.n	a2, a10
400d8eef:	000306        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8ef2:	0a2d      	mov.n	a2, a10
400d8ef4:	0001c6        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8ef7:	0a2d00        	add.s	f2, f13, f0
400d8efa:	000046        	j	400d8eff <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8efd:	020c      	movi.n	a2, 0
400d8eff:	0020c0        	memw
400d8f02:	132142        	l32i	a4, a1, 76
400d8f05:	dc5f31        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d8f08:	0020c0        	memw
400d8f0b:	0338      	l32i.n	a3, a3, 0
400d8f0d:	3d1437        	beq	a4, a3, 400d8f4e <nvs::PageManager::load(unsigned int, unsigned int)+0x542>
400d8f10:	000d06        	j	400d8f48 <nvs::PageManager::load(unsigned int, unsigned int)+0x53c>
400d8f13:	9c0000        	lsi	f0, a0, 0x270
400d8f16:	4450f7        	bbc	a0, a15, 400d8f5e <nvs::Item::calculateCrc32() const+0xe>
400d8f19:	4440c0        	extui	a4, a12, 0, 5
400d8f1c:	34c0a0        	extui	a12, a10, 0, 4
400d8f1f:	c33211        	l32r	a1, 400c9be8 <_rtc_text_end+0x9be8>
400d8f22:	373ab0        	lsi	f11, a10, 220
400d8f25:	0f1377        	beq	a3, a7, 400d8f38 <nvs::PageManager::load(unsigned int, unsigned int)+0x52c>
400d8f28:	b0c332        	addi	a3, a3, -80
400d8f2b:	44c3a2        	addi	a10, a3, 68
400d8f2e:	201110        	or	a1, a1, a1
400d8f31:	ff8ba5        	call8	400d87ec <nvs::HashList::~HashList()>
400d8f34:	fffb46        	j	400d8f25 <nvs::PageManager::load(unsigned int, unsigned int)+0x519>
400d8f37:	06ad00        	lsi	f0, a13, 24
400d8f3a:	201110        	or	a1, a1, a1
400d8f3d:	11c3e5        	call8	400eab7c <operator delete[](void*)>
400d8f40:	02ad      	mov.n	a10, a2
400d8f42:	201110        	or	a1, a1, a1
400d8f45:	fb96e5        	call8	400d48b4 <_Unwind_Resume>
400d8f48:	201110        	or	a1, a1, a1
400d8f4b:	fd3625        	call8	400d62ac <__stack_chk_fail>
400d8f4e:	f01d      	retw.n

400d8f50 <nvs::Item::calculateCrc32() const>:
400d8f50:	004136        	entry	a1, 32
400d8f53:	04a0c2        	movi	a12, 4
400d8f56:	20b220        	or	a11, a2, a2
400d8f59:	ffafa2        	movi	a10, -1
400d8f5c:	dd2581        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f5f:	0008e0        	callx8	a8
400d8f62:	0c1c      	movi.n	a12, 16
400d8f64:	08c2b2        	addi	a11, a2, 8
400d8f67:	dd2281        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f6a:	0008e0        	callx8	a8
400d8f6d:	8c0c      	movi.n	a12, 8
400d8f6f:	18c2b2        	addi	a11, a2, 24
400d8f72:	dd1f81        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f75:	0008e0        	callx8	a8
400d8f78:	0a2d      	mov.n	a2, a10
400d8f7a:	f01d      	retw.n

400d8f7c <nvs::Item::calculateCrc32WithoutValue() const>:
400d8f7c:	004136        	entry	a1, 32
400d8f7f:	1c0c      	movi.n	a12, 1
400d8f81:	20b220        	or	a11, a2, a2
400d8f84:	fa7c      	movi.n	a10, -1
400d8f86:	dd1a81        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f89:	0008e0        	callx8	a8
400d8f8c:	0c1c      	movi.n	a12, 16
400d8f8e:	b28b      	addi.n	a11, a2, 8
400d8f90:	dd1881        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f93:	0008e0        	callx8	a8
400d8f96:	1c0c      	movi.n	a12, 1
400d8f98:	b23b      	addi.n	a11, a2, 3
400d8f9a:	dd1581        	l32r	a8, 400d03f0 <_flash_cache_start+0x3d8>
400d8f9d:	0008e0        	callx8	a8
400d8fa0:	0a2d      	mov.n	a2, a10
400d8fa2:	f01d      	retw.n

400d8fa4 <nvs::nvs_flash_write(unsigned int, void const*, unsigned int)>:
400d8fa4:	004136        	entry	a1, 32
400d8fa7:	04cd      	mov.n	a12, a4
400d8fa9:	03bd      	mov.n	a11, a3
400d8fab:	02ad      	mov.n	a10, a2
400d8fad:	ad5fe5        	call8	400865ac <spi_flash_write>
400d8fb0:	0a2d      	mov.n	a2, a10
400d8fb2:	f01d      	retw.n

400d8fb4 <nvs::nvs_flash_read(unsigned int, void*, unsigned int)>:
400d8fb4:	004136        	entry	a1, 32
400d8fb7:	04cd      	mov.n	a12, a4
400d8fb9:	03bd      	mov.n	a11, a3
400d8fbb:	02ad      	mov.n	a10, a2
400d8fbd:	ad8025        	call8	400867c0 <spi_flash_read>
400d8fc0:	0a2d      	mov.n	a2, a10
400d8fc2:	f01d      	retw.n

400d8fc4 <uart_tx_char>:
400d8fc4:	004136        	entry	a1, 32
400d8fc7:	dd3381        	l32r	a8, 400d0494 <_flash_cache_start+0x47c>
400d8fca:	a02280        	addx4	a2, a2, a8
400d8fcd:	0022a2        	l32i	a10, a2, 0
400d8fd0:	0020c0        	memw
400d8fd3:	7a88      	l32i.n	a8, a10, 28
400d8fd5:	758080        	extui	a8, a8, 16, 8
400d8fd8:	7ea092        	movi	a9, 126
400d8fdb:	f13987        	bltu	a9, a8, 400d8fd0 <uart_tx_char+0xc>
400d8fde:	743030        	extui	a3, a3, 0, 8
400d8fe1:	0020c0        	memw
400d8fe4:	004a32        	s8i	a3, a10, 0
400d8fe7:	0020c0        	memw
400d8fea:	f01d      	retw.n

400d8fec <uart_rx_char>:
400d8fec:	004136        	entry	a1, 32
400d8fef:	dd2981        	l32r	a8, 400d0494 <_flash_cache_start+0x47c>
400d8ff2:	a02280        	addx4	a2, a2, a8
400d8ff5:	0228      	l32i.n	a2, a2, 0
400d8ff7:	0020c0        	memw
400d8ffa:	7288      	l32i.n	a8, a2, 28
400d8ffc:	748080        	extui	a8, a8, 0, 8
400d8fff:	688c      	beqz.n	a8, 400d9009 <uart_rx_char+0x1d>
400d9001:	000222        	l8ui	a2, a2, 0
400d9004:	742020        	extui	a2, a2, 0, 8
400d9007:	f01d      	retw.n
400d9009:	f27c      	movi.n	a2, -1
400d900b:	f01d      	retw.n
400d900d:	000000        	ill

400d9010 <uart_read_char>:
400d9010:	004136        	entry	a1, 32
400d9013:	02ad      	mov.n	a10, a2
400d9015:	dd2091        	l32r	a9, 400d0498 <_flash_cache_start+0x480>
400d9018:	a09290        	addx4	a9, a2, a9
400d901b:	0928      	l32i.n	a2, a9, 0
400d901d:	080226        	beqi	a2, -1, 400d9029 <uart_read_char+0x19>
400d9020:	098d      	mov.n	a8, a9
400d9022:	f97c      	movi.n	a9, -1
400d9024:	0899      	s32i.n	a9, a8, 0
400d9026:	f01d      	retw.n
400d9028:	1c2100        	lsi	f0, a1, 112
400d902b:	20dd      	lsi	f13, a0, 0
400d902d:	a02a      	add.n	a10, a0, a2
400d902f:	0228      	l32i.n	a2, a2, 0
400d9031:	0002e0        	callx8	a2
400d9034:	0a2d      	mov.n	a2, a10
400d9036:	f01d      	retw.n

400d9038 <uart_end_select>:
400d9038:	004136        	entry	a1, 32
400d903b:	101de5        	call8	400e9218 <uart_get_selectlock>
400d903e:	afa525        	call8	40088a90 <vTaskEnterCritical>
400d9041:	020c      	movi.n	a2, 0
400d9043:	000346        	j	400d9054 <uart_end_select+0x1c>
400d9046:	b20000        	mulsh	a0, a0, a0
400d9049:	2000a0        	or	a0, a0, a10
400d904c:	2520a2        	l32i	a10, a0, 148
400d904f:	101b      	addi.n	a1, a0, 1
400d9051:	01c222        	addi	a2, a2, 1
400d9054:	f032a6        	blti	a2, 3, 400d9048 <uart_end_select+0x10>
400d9057:	020c      	movi.n	a2, 0
400d9059:	dd1181        	l32r	a8, 400d04a0 <_flash_cache_start+0x488>
400d905c:	0829      	s32i.n	a2, a8, 0
400d905e:	f03d      	nop.n
400d9060:	f03d      	nop.n
400d9062:	f03d      	nop.n
400d9064:	f03d      	nop.n
400d9066:	dd0f81        	l32r	a8, 400d04a4 <_flash_cache_start+0x48c>
400d9069:	0829      	s32i.n	a2, a8, 0
400d906b:	f03d      	nop.n
400d906d:	f03d      	nop.n
400d906f:	f03d      	nop.n
400d9071:	f03d      	nop.n
400d9073:	dd0d81        	l32r	a8, 400d04a8 <_flash_cache_start+0x490>
400d9076:	0829      	s32i.n	a2, a8, 0
400d9078:	f03d      	nop.n
400d907a:	f03d      	nop.n
400d907c:	f03d      	nop.n
400d907e:	f03d      	nop.n
400d9080:	dd0b81        	l32r	a8, 400d04ac <_flash_cache_start+0x494>
400d9083:	0829      	s32i.n	a2, a8, 0
400d9085:	f03d      	nop.n
400d9087:	f03d      	nop.n
400d9089:	f03d      	nop.n
400d908b:	f03d      	nop.n
400d908d:	dd0821        	l32r	a2, 400d04b0 <_flash_cache_start+0x498>
400d9090:	02a8      	l32i.n	a10, a2, 0
400d9092:	ba8c      	beqz.n	a10, 400d90a1 <uart_end_select+0x69>
400d9094:	dbfe81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d9097:	0008e0        	callx8	a8
400d909a:	080c      	movi.n	a8, 0
400d909c:	dd0521        	l32r	a2, 400d04b0 <_flash_cache_start+0x498>
400d909f:	0289      	s32i.n	a8, a2, 0
400d90a1:	f03d      	nop.n
400d90a3:	f03d      	nop.n
400d90a5:	f03d      	nop.n
400d90a7:	f03d      	nop.n
400d90a9:	dd0221        	l32r	a2, 400d04b4 <_flash_cache_start+0x49c>
400d90ac:	02a8      	l32i.n	a10, a2, 0
400d90ae:	ba8c      	beqz.n	a10, 400d90bd <uart_end_select+0x85>
400d90b0:	dbf781        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d90b3:	0008e0        	callx8	a8
400d90b6:	080c      	movi.n	a8, 0
400d90b8:	dcff21        	l32r	a2, 400d04b4 <_flash_cache_start+0x49c>
400d90bb:	0289      	s32i.n	a8, a2, 0
400d90bd:	f03d      	nop.n
400d90bf:	f03d      	nop.n
400d90c1:	f03d      	nop.n
400d90c3:	f03d      	nop.n
400d90c5:	dcfc21        	l32r	a2, 400d04b8 <_flash_cache_start+0x4a0>
400d90c8:	02a8      	l32i.n	a10, a2, 0
400d90ca:	ba8c      	beqz.n	a10, 400d90d9 <uart_end_select+0xa1>
400d90cc:	dbf081        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d90cf:	0008e0        	callx8	a8
400d90d2:	080c      	movi.n	a8, 0
400d90d4:	dcf921        	l32r	a2, 400d04b8 <_flash_cache_start+0x4a0>
400d90d7:	0289      	s32i.n	a8, a2, 0
400d90d9:	1013e5        	call8	400e9218 <uart_get_selectlock>
400d90dc:	afaf25        	call8	40088bd0 <vTaskExitCritical>
400d90df:	dcf7a1        	l32r	a10, 400d04bc <_flash_cache_start+0x4a4>
400d90e2:	aba265        	call8	40084b08 <_lock_release>
400d90e5:	000090        	retw

400d90e8 <uart_start_select>:
400d90e8:	008136        	entry	a1, 64
400d90eb:	dcf4a1        	l32r	a10, 400d04bc <_flash_cache_start+0x4a4>
400d90ee:	ab9fa5        	call8	40084ae8 <_lock_try_acquire>
400d90f1:	207aa0        	or	a7, a10, a10
400d90f4:	1f4a56        	bnez	a10, 400d92ec <uart_start_select+0x204>
400d90f7:	03a082        	movi	a8, 3
400d90fa:	432280        	min	a2, a2, a8
400d90fd:	1011a5        	call8	400e9218 <uart_get_selectlock>
400d9100:	af98e5        	call8	40088a90 <vTaskEnterCritical>
400d9103:	dce881        	l32r	a8, 400d04a4 <_flash_cache_start+0x48c>
400d9106:	0888      	l32i.n	a8, a8, 0
400d9108:	88ec      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d910a:	dce781        	l32r	a8, 400d04a8 <_flash_cache_start+0x490>
400d910d:	0888      	l32i.n	a8, a8, 0
400d910f:	18ec      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d9111:	dce681        	l32r	a8, 400d04ac <_flash_cache_start+0x494>
400d9114:	0888      	l32i.n	a8, a8, 0
400d9116:	a8dc      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d9118:	dce681        	l32r	a8, 400d04b0 <_flash_cache_start+0x498>
400d911b:	0888      	l32i.n	a8, a8, 0
400d911d:	38dc      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d911f:	dce581        	l32r	a8, 400d04b4 <_flash_cache_start+0x49c>
400d9122:	0888      	l32i.n	a8, a8, 0
400d9124:	c8cc      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d9126:	dce481        	l32r	a8, 400d04b8 <_flash_cache_start+0x4a0>
400d9129:	0888      	l32i.n	a8, a8, 0
400d912b:	58cc      	bnez.n	a8, 400d9134 <uart_start_select+0x4c>
400d912d:	dcdc81        	l32r	a8, 400d04a0 <_flash_cache_start+0x488>
400d9130:	0888      	l32i.n	a8, a8, 0
400d9132:	e88c      	beqz.n	a8, 400d9144 <uart_start_select+0x5c>
400d9134:	100e25        	call8	400e9218 <uart_get_selectlock>
400d9137:	afa9a5        	call8	40088bd0 <vTaskExitCritical>
400d913a:	ffefe5        	call8	400d9038 <uart_end_select>
400d913d:	03a172        	movi	a7, 0x103
400d9140:	006ac6        	j	400d92ef <uart_start_select+0x207>
400d9143:	a0a200        	addx4	a10, a2, a0
400d9146:	8108      	l32i.n	a0, a1, 32
400d9148:	e0dbe7        	bbs	a11, a14, 400d912c <uart_start_select+0x44>
400d914b:	0008      	l32i.n	a0, a0, 0
400d914d:	dcd881        	l32r	a8, 400d04b0 <_flash_cache_start+0x498>
400d9150:	08a9      	s32i.n	a10, a8, 0
400d9152:	eacc      	bnez.n	a10, 400d9164 <uart_start_select+0x7c>
400d9154:	100c25        	call8	400e9218 <uart_get_selectlock>
400d9157:	afa7a5        	call8	40088bd0 <vTaskExitCritical>
400d915a:	ffede5        	call8	400d9038 <uart_end_select>
400d915d:	01a172        	movi	a7, 0x101
400d9160:	0062c6        	j	400d92ef <uart_start_select+0x207>
400d9163:	a0a200        	addx4	a10, a2, a0
400d9166:	8108      	l32i.n	a0, a1, 32
400d9168:	df          	.byte 0xdf
400d9169:	e0db      	addi.n	a14, a0, 13
400d916b:	0008      	l32i.n	a0, a0, 0
400d916d:	dcd181        	l32r	a8, 400d04b4 <_flash_cache_start+0x49c>
400d9170:	08a9      	s32i.n	a10, a8, 0
400d9172:	eacc      	bnez.n	a10, 400d9184 <uart_start_select+0x9c>
400d9174:	100a25        	call8	400e9218 <uart_get_selectlock>
400d9177:	afa5a5        	call8	40088bd0 <vTaskExitCritical>
400d917a:	ffebe5        	call8	400d9038 <uart_end_select>
400d917d:	01a172        	movi	a7, 0x101
400d9180:	005ac6        	j	400d92ef <uart_start_select+0x207>
400d9183:	a0a200        	addx4	a10, a2, a0
400d9186:	8108      	l32i.n	a0, a1, 32
400d9188:	e0dbd7        	bbs	a11, a13, 400d916c <uart_start_select+0x84>
400d918b:	0008      	l32i.n	a0, a0, 0
400d918d:	dcca81        	l32r	a8, 400d04b8 <_flash_cache_start+0x4a0>
400d9190:	08a9      	s32i.n	a10, a8, 0
400d9192:	040a56        	bnez	a10, 400d91d6 <uart_start_select+0xee>
400d9195:	100825        	call8	400e9218 <uart_get_selectlock>
400d9198:	afa365        	call8	40088bd0 <vTaskExitCritical>
400d919b:	ffe9e5        	call8	400d9038 <uart_end_select>
400d919e:	01a172        	movi	a7, 0x101
400d91a1:	005286        	j	400d92ef <uart_start_select+0x207>
400d91a4:	31a8      	l32i.n	a10, a1, 12
400d91a6:	4185a0        	srli	a8, a10, 5
400d91a9:	a09830        	addx4	a9, a8, a3
400d91ac:	09b8      	l32i.n	a11, a9, 0
400d91ae:	4490a0        	extui	a9, a10, 0, 5
400d91b1:	0fdb97        	bbs	a11, a9, 400d91c4 <uart_start_select+0xdc>
400d91b4:	a0b840        	addx4	a11, a8, a4
400d91b7:	0bb8      	l32i.n	a11, a11, 0
400d91b9:	07db97        	bbs	a11, a9, 400d91c4 <uart_start_select+0xdc>
400d91bc:	a08850        	addx4	a8, a8, a5
400d91bf:	0888      	l32i.n	a8, a8, 0
400d91c1:	055897        	bbc	a8, a9, 400d91ca <uart_start_select+0xe2>
400d91c4:	dcbfb1        	l32r	a11, 400d04c0 <_flash_cache_start+0x4a8>
400d91c7:	1003a5        	call8	400e9200 <uart_set_select_notif_callback>
400d91ca:	3188      	l32i.n	a8, a1, 12
400d91cc:	881b      	addi.n	a8, a8, 1
400d91ce:	3189      	s32i.n	a8, a1, 12
400d91d0:	000186        	j	400d91da <uart_start_select+0xf2>
400d91d3:	000000        	ill
400d91d6:	090c      	movi.n	a9, 0
400d91d8:	3199      	s32i.n	a9, a1, 12
400d91da:	f03d      	nop.n
400d91dc:	f03d      	nop.n
400d91de:	f03d      	nop.n
400d91e0:	f03d      	nop.n
400d91e2:	31c8      	l32i.n	a12, a1, 12
400d91e4:	bc2c27        	blt	a12, a2, 400d91a4 <uart_start_select+0xbc>
400d91e7:	dcae81        	l32r	a8, 400d04a0 <_flash_cache_start+0x488>
400d91ea:	0869      	s32i.n	a6, a8, 0
400d91ec:	f03d      	nop.n
400d91ee:	f03d      	nop.n
400d91f0:	f03d      	nop.n
400d91f2:	f03d      	nop.n
400d91f4:	dcac61        	l32r	a6, 400d04a4 <_flash_cache_start+0x48c>
400d91f7:	0639      	s32i.n	a3, a6, 0
400d91f9:	f03d      	nop.n
400d91fb:	f03d      	nop.n
400d91fd:	f03d      	nop.n
400d91ff:	f03d      	nop.n
400d9201:	dca961        	l32r	a6, 400d04a8 <_flash_cache_start+0x490>
400d9204:	0649      	s32i.n	a4, a6, 0
400d9206:	f03d      	nop.n
400d9208:	f03d      	nop.n
400d920a:	f03d      	nop.n
400d920c:	f03d      	nop.n
400d920e:	dca761        	l32r	a6, 400d04ac <_flash_cache_start+0x494>
400d9211:	0659      	s32i.n	a5, a6, 0
400d9213:	f03d      	nop.n
400d9215:	f03d      	nop.n
400d9217:	f03d      	nop.n
400d9219:	f03d      	nop.n
400d921b:	dca561        	l32r	a6, 400d04b0 <_flash_cache_start+0x498>
400d921e:	0668      	l32i.n	a6, a6, 0
400d9220:	0398      	l32i.n	a9, a3, 0
400d9222:	1388      	l32i.n	a8, a3, 4
400d9224:	0699      	s32i.n	a9, a6, 0
400d9226:	1689      	s32i.n	a8, a6, 4
400d9228:	f03d      	nop.n
400d922a:	f03d      	nop.n
400d922c:	f03d      	nop.n
400d922e:	f03d      	nop.n
400d9230:	dca161        	l32r	a6, 400d04b4 <_flash_cache_start+0x49c>
400d9233:	0668      	l32i.n	a6, a6, 0
400d9235:	0498      	l32i.n	a9, a4, 0
400d9237:	1488      	l32i.n	a8, a4, 4
400d9239:	0699      	s32i.n	a9, a6, 0
400d923b:	1689      	s32i.n	a8, a6, 4
400d923d:	f03d      	nop.n
400d923f:	f03d      	nop.n
400d9241:	f03d      	nop.n
400d9243:	f03d      	nop.n
400d9245:	dc9c61        	l32r	a6, 400d04b8 <_flash_cache_start+0x4a0>
400d9248:	0668      	l32i.n	a6, a6, 0
400d924a:	0598      	l32i.n	a9, a5, 0
400d924c:	1588      	l32i.n	a8, a5, 4
400d924e:	0699      	s32i.n	a9, a6, 0
400d9250:	1689      	s32i.n	a8, a6, 4
400d9252:	060c      	movi.n	a6, 0
400d9254:	000306        	j	400d9264 <uart_start_select+0x17c>
400d9257:	080c00        	lsx	f0, a12, a0
400d925a:	004382        	s8i	a8, a3, 0
400d925d:	0020c0        	memw
400d9260:	661b      	addi.n	a6, a6, 1
400d9262:	331b      	addi.n	a3, a3, 1
400d9264:	f086b6        	bltui	a6, 8, 400d9258 <uart_start_select+0x170>
400d9267:	030c      	movi.n	a3, 0
400d9269:	0002c6        	j	400d9278 <uart_start_select+0x190>
400d926c:	060c      	movi.n	a6, 0
400d926e:	004462        	s8i	a6, a4, 0
400d9271:	0020c0        	memw
400d9274:	331b      	addi.n	a3, a3, 1
400d9276:	441b      	addi.n	a4, a4, 1
400d9278:	f083b6        	bltui	a3, 8, 400d926c <uart_start_select+0x184>
400d927b:	030c      	movi.n	a3, 0
400d927d:	0002c6        	j	400d928c <uart_start_select+0x1a4>
400d9280:	040c      	movi.n	a4, 0
400d9282:	004542        	s8i	a4, a5, 0
400d9285:	0020c0        	memw
400d9288:	331b      	addi.n	a3, a3, 1
400d928a:	551b      	addi.n	a5, a5, 1
400d928c:	f083b6        	bltui	a3, 8, 400d9280 <uart_start_select+0x198>
400d928f:	030c      	movi.n	a3, 0
400d9291:	001246        	j	400d92de <uart_start_select+0x1f6>
400d9294:	dc8741        	l32r	a4, 400d04b0 <_flash_cache_start+0x498>
400d9297:	0458      	l32i.n	a5, a4, 0
400d9299:	414530        	srli	a4, a3, 5
400d929c:	a05450        	addx4	a5, a4, a5
400d929f:	0558      	l32i.n	a5, a5, 0
400d92a1:	446030        	extui	a6, a3, 0, 5
400d92a4:	345567        	bbc	a5, a6, 400d92dc <uart_start_select+0x1f4>
400d92a7:	1cc1b2        	addi	a11, a1, 28
400d92aa:	03ad      	mov.n	a10, a3
400d92ac:	0fd165        	call8	400e8fc4 <uart_get_buffered_data_len>
400d92af:	9aec      	bnez.n	a10, 400d92dc <uart_start_select+0x1f4>
400d92b1:	7158      	l32i.n	a5, a1, 28
400d92b3:	55ac      	beqz.n	a5, 400d92dc <uart_start_select+0x1f4>
400d92b5:	dc7b51        	l32r	a5, 400d04a4 <_flash_cache_start+0x48c>
400d92b8:	0588      	l32i.n	a8, a5, 0
400d92ba:	150c      	movi.n	a5, 1
400d92bc:	401600        	ssl	a6
400d92bf:	a15500        	sll	a5, a5
400d92c2:	a04480        	addx4	a4, a4, a8
400d92c5:	0468      	l32i.n	a6, a4, 0
400d92c7:	205650        	or	a5, a6, a5
400d92ca:	0459      	s32i.n	a5, a4, 0
400d92cc:	f03d      	nop.n
400d92ce:	f03d      	nop.n
400d92d0:	f03d      	nop.n
400d92d2:	f03d      	nop.n
400d92d4:	dc7341        	l32r	a4, 400d04a0 <_flash_cache_start+0x488>
400d92d7:	04a8      	l32i.n	a10, a4, 0
400d92d9:	0118a5        	call8	400da464 <esp_vfs_select_triggered>
400d92dc:	331b      	addi.n	a3, a3, 1
400d92de:	b22327        	blt	a3, a2, 400d9294 <uart_start_select+0x1ac>
400d92e1:	0ff365        	call8	400e9218 <uart_get_selectlock>
400d92e4:	af8ea5        	call8	40088bd0 <vTaskExitCritical>
400d92e7:	000106        	j	400d92ef <uart_start_select+0x207>
400d92ea:	720000        	lsi	f0, a0, 0x1c8
400d92ed:	2d03a1        	l32r	a10, 400a46fc <_iram_end+0x16ba8>
400d92f0:	f01d07        	beq	a13, a0, 400d92e4 <uart_start_select+0x1fc>
	...

400d92f4 <select_notif_callback>:
400d92f4:	004136        	entry	a1, 32
400d92f7:	4d1326        	beqi	a3, 1, 400d9348 <select_notif_callback+0x54>
400d92fa:	638c      	beqz.n	a3, 400d9304 <select_notif_callback+0x10>
400d92fc:	022366        	bnei	a3, 2, 400d9302 <select_notif_callback+0xe>
400d92ff:	002146        	j	400d9388 <select_notif_callback+0x94>
400d9302:	f01d      	retw.n
400d9304:	dc6b31        	l32r	a3, 400d04b0 <_flash_cache_start+0x498>
400d9307:	002332        	l32i	a3, a3, 0
400d930a:	418520        	srli	a8, a2, 5
400d930d:	a03830        	addx4	a3, a8, a3
400d9310:	002332        	l32i	a3, a3, 0
400d9313:	442020        	extui	a2, a2, 0, 5
400d9316:	02d327        	bbs	a3, a2, 400d931c <select_notif_callback+0x28>
400d9319:	002a06        	j	400d93c5 <select_notif_callback+0xd1>
400d931c:	dc6231        	l32r	a3, 400d04a4 <_flash_cache_start+0x48c>
400d931f:	002392        	l32i	a9, a3, 0
400d9322:	130c      	movi.n	a3, 1
400d9324:	401200        	ssl	a2
400d9327:	a12300        	sll	a2, a3
400d932a:	a08890        	addx4	a8, a8, a9
400d932d:	0838      	l32i.n	a3, a8, 0
400d932f:	202320        	or	a2, a3, a2
400d9332:	0829      	s32i.n	a2, a8, 0
400d9334:	04bd      	mov.n	a11, a4
400d9336:	f03d      	nop.n
400d9338:	f03d      	nop.n
400d933a:	f03d      	nop.n
400d933c:	dc5921        	l32r	a2, 400d04a0 <_flash_cache_start+0x488>
400d933f:	02a8      	l32i.n	a10, a2, 0
400d9341:	011665        	call8	400da4a8 <esp_vfs_select_triggered_isr>
400d9344:	f01d      	retw.n
400d9346:	310000        	srai	a0, a0, 16
400d9349:	dc5b      	addi.n	a13, a12, 5
400d934b:	002332        	l32i	a3, a3, 0
400d934e:	418520        	srli	a8, a2, 5
400d9351:	a03830        	addx4	a3, a8, a3
400d9354:	002332        	l32i	a3, a3, 0
400d9357:	442020        	extui	a2, a2, 0, 5
400d935a:	675327        	bbc	a3, a2, 400d93c5 <select_notif_callback+0xd1>
400d935d:	dc5231        	l32r	a3, 400d04a8 <_flash_cache_start+0x490>
400d9360:	002392        	l32i	a9, a3, 0
400d9363:	130c      	movi.n	a3, 1
400d9365:	401200        	ssl	a2
400d9368:	a12300        	sll	a2, a3
400d936b:	a08890        	addx4	a8, a8, a9
400d936e:	0838      	l32i.n	a3, a8, 0
400d9370:	202320        	or	a2, a3, a2
400d9373:	0829      	s32i.n	a2, a8, 0
400d9375:	04bd      	mov.n	a11, a4
400d9377:	f03d      	nop.n
400d9379:	f03d      	nop.n
400d937b:	f03d      	nop.n
400d937d:	dc4821        	l32r	a2, 400d04a0 <_flash_cache_start+0x488>
400d9380:	02a8      	l32i.n	a10, a2, 0
400d9382:	011265        	call8	400da4a8 <esp_vfs_select_triggered_isr>
400d9385:	f01d      	retw.n
400d9387:	4c3100        	lsi	f0, a1, 0x130
400d938a:	32dc      	bnez.n	a2, 400d93a1 <select_notif_callback+0xad>
400d938c:	200023        	lsi	f2, a0, 128
400d938f:	304185        	call0	401097a8 <_etext+0x1d2d7>
400d9392:	a038      	l32i.n	a3, a0, 40
400d9394:	002332        	l32i	a3, a3, 0
400d9397:	442020        	extui	a2, a2, 0, 5
400d939a:	275327        	bbc	a3, a2, 400d93c5 <select_notif_callback+0xd1>
400d939d:	dc4331        	l32r	a3, 400d04ac <_flash_cache_start+0x494>
400d93a0:	002392        	l32i	a9, a3, 0
400d93a3:	130c      	movi.n	a3, 1
400d93a5:	401200        	ssl	a2
400d93a8:	a12300        	sll	a2, a3
400d93ab:	a08890        	addx4	a8, a8, a9
400d93ae:	0838      	l32i.n	a3, a8, 0
400d93b0:	202320        	or	a2, a3, a2
400d93b3:	0829      	s32i.n	a2, a8, 0
400d93b5:	04bd      	mov.n	a11, a4
400d93b7:	f03d      	nop.n
400d93b9:	f03d      	nop.n
400d93bb:	f03d      	nop.n
400d93bd:	dc3821        	l32r	a2, 400d04a0 <_flash_cache_start+0x488>
400d93c0:	02a8      	l32i.n	a10, a2, 0
400d93c2:	010e65        	call8	400da4a8 <esp_vfs_select_triggered_isr>
400d93c5:	f01d      	retw.n
	...

400d93c8 <uart_tcflush>:
400d93c8:	004136        	entry	a1, 32
400d93cb:	0d32b6        	bltui	a2, 3, 400d93dc <uart_tcflush+0x14>
400d93ce:	017365        	call8	400dab04 <__errno>
400d93d1:	09a022        	movi	a2, 9
400d93d4:	006a22        	s32i	a2, a10, 0
400d93d7:	ffaf22        	movi	a2, -1
400d93da:	f01d      	retw.n
400d93dc:	014356        	bnez	a3, 400d93f4 <uart_tcflush+0x2c>
400d93df:	20a220        	or	a10, a2, a2
400d93e2:	0fc565        	call8	400e9038 <uart_flush>
400d93e5:	0a2d      	mov.n	a2, a10
400d93e7:	5a9c      	beqz.n	a10, 400d9400 <uart_tcflush+0x38>
400d93e9:	0171a5        	call8	400dab04 <__errno>
400d93ec:	621c      	movi.n	a2, 22
400d93ee:	0a29      	s32i.n	a2, a10, 0
400d93f0:	f27c      	movi.n	a2, -1
400d93f2:	f01d      	retw.n
400d93f4:	0170e5        	call8	400dab04 <__errno>
400d93f7:	16a022        	movi	a2, 22
400d93fa:	006a22        	s32i	a2, a10, 0
400d93fd:	ffaf22        	movi	a2, -1
400d9400:	f01d      	retw.n
	...

400d9404 <uart_tcdrain>:
400d9404:	004136        	entry	a1, 32
400d9407:	0d32b6        	bltui	a2, 3, 400d9418 <uart_tcdrain+0x14>
400d940a:	016fa5        	call8	400dab04 <__errno>
400d940d:	09a022        	movi	a2, 9
400d9410:	006a22        	s32i	a2, a10, 0
400d9413:	ffaf22        	movi	a2, -1
400d9416:	f01d      	retw.n
400d9418:	ffafb2        	movi	a11, -1
400d941b:	20a220        	or	a10, a2, a2
400d941e:	0fa4a5        	call8	400e8e68 <uart_wait_tx_done>
400d9421:	0a2d      	mov.n	a2, a10
400d9423:	7a8c      	beqz.n	a10, 400d942e <uart_tcdrain+0x2a>
400d9425:	016de5        	call8	400dab04 <__errno>
400d9428:	621c      	movi.n	a2, 22
400d942a:	0a29      	s32i.n	a2, a10, 0
400d942c:	f27c      	movi.n	a2, -1
400d942e:	f01d      	retw.n

400d9430 <uart_tcgetattr>:
400d9430:	006136        	entry	a1, 48
400d9433:	0d32b6        	bltui	a2, 3, 400d9444 <uart_tcgetattr+0x14>
400d9436:	016ce5        	call8	400dab04 <__errno>
400d9439:	09a022        	movi	a2, 9
400d943c:	006a22        	s32i	a2, a10, 0
400d943f:	ffaf22        	movi	a2, -1
400d9442:	f01d      	retw.n
400d9444:	00c356        	bnez	a3, 400d9454 <uart_tcgetattr+0x24>
400d9447:	016be5        	call8	400dab04 <__errno>
400d944a:	16a022        	movi	a2, 22
400d944d:	006a22        	s32i	a2, a10, 0
400d9450:	f27c      	movi.n	a2, -1
400d9452:	f01d      	retw.n
400d9454:	cc1c      	movi.n	a12, 28
400d9456:	0b0c      	movi.n	a11, 0
400d9458:	03ad      	mov.n	a10, a3
400d945a:	db0481        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d945d:	0008e0        	callx8	a8
400d9460:	dc1981        	l32r	a8, 400d04c4 <_flash_cache_start+0x4ac>
400d9463:	a08280        	addx4	a8, a2, a8
400d9466:	0888      	l32i.n	a8, a8, 0
400d9468:	18dc      	bnez.n	a8, 400d947d <uart_tcgetattr+0x4d>
400d946a:	001392        	l16ui	a9, a3, 0
400d946d:	880c      	movi.n	a8, 8
400d946f:	208980        	or	a8, a9, a8
400d9472:	005382        	s16i	a8, a3, 0
400d9475:	0020c0        	memw
400d9478:	0004c6        	j	400d948f <uart_tcgetattr+0x5f>
400d947b:	660000        	lsi	f0, a0, 0x198
400d947e:	0e18      	l32i.n	a1, a14, 0
400d9480:	001392        	l16ui	a9, a3, 0
400d9483:	02a082        	movi	a8, 2
400d9486:	208980        	or	a8, a9, a8
400d9489:	005382        	s16i	a8, a3, 0
400d948c:	0020c0        	memw
400d948f:	0cc1b2        	addi	a11, a1, 12
400d9492:	02ad      	mov.n	a10, a2
400d9494:	0f35a5        	call8	400e87f0 <uart_get_word_length>
400d9497:	9a8c      	beqz.n	a10, 400d94a4 <uart_tcgetattr+0x74>
400d9499:	0166a5        	call8	400dab04 <__errno>
400d949c:	621c      	movi.n	a2, 22
400d949e:	0a29      	s32i.n	a2, a10, 0
400d94a0:	001bc6        	j	400d9513 <uart_tcgetattr+0xe3>
400d94a3:	139200        	lsi	f0, a2, 76
400d94a6:	c87c02        	lsi	f0, a12, 0x320
400d94a9:	108980        	and	a8, a9, a8
400d94ac:	f48080        	extui	a8, a8, 0, 16
400d94af:	025382        	s16i	a8, a3, 4
400d94b2:	0020c0        	memw
400d94b5:	f03d      	nop.n
400d94b7:	f03d      	nop.n
400d94b9:	f03d      	nop.n
400d94bb:	f03d      	nop.n
400d94bd:	3198      	l32i.n	a9, a1, 12
400d94bf:	0a1926        	beqi	a9, 1, 400d94cd <uart_tcgetattr+0x9d>
400d94c2:	e9bc      	beqz.n	a9, 400d9504 <uart_tcgetattr+0xd4>
400d94c4:	132926        	beqi	a9, 2, 400d94db <uart_tcgetattr+0xab>
400d94c7:	1e3926        	beqi	a9, 3, 400d94e9 <uart_tcgetattr+0xb9>
400d94ca:	000a46        	j	400d94f7 <uart_tcgetattr+0xc7>
400d94cd:	190c      	movi.n	a9, 1
400d94cf:	208890        	or	a8, a8, a9
400d94d2:	025382        	s16i	a8, a3, 4
400d94d5:	0020c0        	memw
400d94d8:	000a06        	j	400d9504 <uart_tcgetattr+0xd4>
400d94db:	290c      	movi.n	a9, 2
400d94dd:	208890        	or	a8, a8, a9
400d94e0:	025382        	s16i	a8, a3, 4
400d94e3:	0020c0        	memw
400d94e6:	000686        	j	400d9504 <uart_tcgetattr+0xd4>
400d94e9:	390c      	movi.n	a9, 3
400d94eb:	208890        	or	a8, a8, a9
400d94ee:	025382        	s16i	a8, a3, 4
400d94f1:	0020c0        	memw
400d94f4:	000306        	j	400d9504 <uart_tcgetattr+0xd4>
400d94f7:	0160e5        	call8	400dab04 <__errno>
400d94fa:	825c      	movi.n	a2, 88
400d94fc:	0a29      	s32i.n	a2, a10, 0
400d94fe:	000446        	j	400d9513 <uart_tcgetattr+0xe3>
400d9501:	000000        	ill
400d9504:	0cc1b2        	addi	a11, a1, 12
400d9507:	20a220        	or	a10, a2, a2
400d950a:	0f4165        	call8	400e8920 <uart_get_stop_bits>
400d950d:	013a16        	beqz	a10, 400d9524 <uart_tcgetattr+0xf4>
400d9510:	0000c6        	j	400d9517 <uart_tcgetattr+0xe7>
400d9513:	f27c      	movi.n	a2, -1
400d9515:	f01d      	retw.n
400d9517:	015ee5        	call8	400dab04 <__errno>
400d951a:	621c      	movi.n	a2, 22
400d951c:	0a29      	s32i.n	a2, a10, 0
400d951e:	000e06        	j	400d955a <uart_tcgetattr+0x12a>
400d9521:	000000        	ill
400d9524:	3188      	l32i.n	a8, a1, 12
400d9526:	201826        	beqi	a8, 1, 400d954a <uart_tcgetattr+0x11a>
400d9529:	103866        	bnei	a8, 3, 400d953d <uart_tcgetattr+0x10d>
400d952c:	021392        	l16ui	a9, a3, 4
400d952f:	480c      	movi.n	a8, 4
400d9531:	208980        	or	a8, a9, a8
400d9534:	025382        	s16i	a8, a3, 4
400d9537:	0020c0        	memw
400d953a:	000306        	j	400d954a <uart_tcgetattr+0x11a>
400d953d:	015c65        	call8	400dab04 <__errno>
400d9540:	825c      	movi.n	a2, 88
400d9542:	0a29      	s32i.n	a2, a10, 0
400d9544:	000486        	j	400d955a <uart_tcgetattr+0x12a>
400d9547:	000000        	ill
400d954a:	0cc1b2        	addi	a11, a1, 12
400d954d:	20a220        	or	a10, a2, a2
400d9550:	0f4c25        	call8	400e8a14 <uart_get_parity>
400d9553:	014a16        	beqz	a10, 400d956b <uart_tcgetattr+0x13b>
400d9556:	000106        	j	400d955e <uart_tcgetattr+0x12e>
400d9559:	f27c00        	rems	a7, a12, a0
400d955c:	f01d      	retw.n
400d955e:	015a65        	call8	400dab04 <__errno>
400d9561:	621c      	movi.n	a2, 22
400d9563:	0a29      	s32i.n	a2, a10, 0
400d9565:	001386        	j	400d95b7 <uart_tcgetattr+0x187>
400d9568:	000000        	ill
400d956b:	3188      	l32i.n	a8, a1, 12
400d956d:	072826        	beqi	a8, 2, 400d9578 <uart_tcgetattr+0x148>
400d9570:	153826        	beqi	a8, 3, 400d9589 <uart_tcgetattr+0x159>
400d9573:	58ec      	bnez.n	a8, 400d959c <uart_tcgetattr+0x16c>
400d9575:	000b46        	j	400d95a6 <uart_tcgetattr+0x176>
400d9578:	021392        	l16ui	a9, a3, 4
400d957b:	081c      	movi.n	a8, 16
400d957d:	208980        	or	a8, a9, a8
400d9580:	025382        	s16i	a8, a3, 4
400d9583:	0020c0        	memw
400d9586:	000706        	j	400d95a6 <uart_tcgetattr+0x176>
400d9589:	021392        	l16ui	a9, a3, 4
400d958c:	083c      	movi.n	a8, 48
400d958e:	208980        	or	a8, a9, a8
400d9591:	025382        	s16i	a8, a3, 4
400d9594:	0020c0        	memw
400d9597:	0002c6        	j	400d95a6 <uart_tcgetattr+0x176>
400d959a:	650000        	extui	a0, a0, 16, 7
400d959d:	5c0156        	bnez	a1, 400d9b61 <uart_fcntl+0x7d>
400d95a0:	0a2982        	l32i	a8, a9, 40
400d95a3:	000406        	j	400d95b7 <uart_tcgetattr+0x187>
400d95a6:	0cc1b2        	addi	a11, a1, 12
400d95a9:	20a220        	or	a10, a2, a2
400d95ac:	0f57a5        	call8	400e8b28 <uart_get_baudrate>
400d95af:	202aa0        	or	a2, a10, a10
400d95b2:	3a9c      	beqz.n	a10, 400d95c9 <uart_tcgetattr+0x199>
400d95b4:	0000c6        	j	400d95bb <uart_tcgetattr+0x18b>
400d95b7:	f27c      	movi.n	a2, -1
400d95b9:	f01d      	retw.n
400d95bb:	0154a5        	call8	400dab04 <__errno>
400d95be:	16a022        	movi	a2, 22
400d95c1:	006a22        	s32i	a2, a10, 0
400d95c4:	ffaf22        	movi	a2, -1
400d95c7:	f01d      	retw.n
400d95c9:	021392        	l16ui	a9, a3, 4
400d95cc:	00a382        	movi	a8, 0x300
400d95cf:	209980        	or	a9, a9, a8
400d95d2:	f49090        	extui	a9, a9, 0, 16
400d95d5:	025392        	s16i	a9, a3, 4
400d95d8:	0020c0        	memw
400d95db:	f03d      	nop.n
400d95dd:	f03d      	nop.n
400d95df:	f03d      	nop.n
400d95e1:	f03d      	nop.n
400d95e3:	3188      	l32i.n	a8, a1, 12
400d95e5:	dbb8a1        	l32r	a10, 400d04c8 <_flash_cache_start+0x4b0>
400d95e8:	0298a7        	bne	a8, a10, 400d95ee <uart_tcgetattr+0x1be>
400d95eb:	0060c6        	j	400d9772 <uart_tcgetattr+0x342>
400d95ee:	02ba87        	bgeu	a10, a8, 400d95f4 <uart_tcgetattr+0x1c4>
400d95f1:	002646        	j	400d968e <uart_tcgetattr+0x25e>
400d95f4:	2ca1a2        	movi	a10, 0x12c
400d95f7:	0298a7        	bne	a8, a10, 400d95fd <uart_tcgetattr+0x1cd>
400d95fa:	0052c6        	j	400d9749 <uart_tcgetattr+0x319>
400d95fd:	433a87        	bltu	a10, a8, 400d9644 <uart_tcgetattr+0x214>
400d9600:	6ea0a2        	movi	a10, 110
400d9603:	0298a7        	bne	a8, a10, 400d9609 <uart_tcgetattr+0x1d9>
400d9606:	004a86        	j	400d9734 <uart_tcgetattr+0x304>
400d9609:	173a87        	bltu	a10, a8, 400d9624 <uart_tcgetattr+0x1f4>
400d960c:	2a3c      	movi.n	a10, 50
400d960e:	0298a7        	bne	a8, a10, 400d9614 <uart_tcgetattr+0x1e4>
400d9611:	006f06        	j	400d97d1 <uart_tcgetattr+0x3a1>
400d9614:	ba4c      	movi.n	a10, 75
400d9616:	0298a7        	bne	a8, a10, 400d961c <uart_tcgetattr+0x1ec>
400d9619:	004446        	j	400d972e <uart_tcgetattr+0x2fe>
400d961c:	1a2856        	bnez	a8, 400d97c2 <uart_tcgetattr+0x392>
400d961f:	006c06        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9622:	a20000        	muluh	a0, a0, a0
400d9625:	a796a0        	lsi	f10, a6, 0x29c
400d9628:	0298      	l32i.n	a9, a2, 0
400d962a:	004406        	j	400d973e <uart_tcgetattr+0x30e>
400d962d:	c8a0a2        	movi	a10, 200
400d9630:	0298a7        	bne	a8, a10, 400d9636 <uart_tcgetattr+0x206>
400d9633:	004346        	j	400d9744 <uart_tcgetattr+0x314>
400d9636:	86a0a2        	movi	a10, 134
400d9639:	0218a7        	beq	a8, a10, 400d963f <uart_tcgetattr+0x20f>
400d963c:	006086        	j	400d97c2 <uart_tcgetattr+0x392>
400d963f:	003d86        	j	400d9739 <uart_tcgetattr+0x309>
400d9642:	a10000        	sll	a0, a0
400d9645:	a7dba2        	addmi	a10, a11, 0xffffa700
400d9648:	0298      	l32i.n	a9, a2, 0
400d964a:	0043c6        	j	400d975d <uart_tcgetattr+0x32d>
400d964d:	1f3a87        	bltu	a10, a8, 400d9670 <uart_tcgetattr+0x240>
400d9650:	b0a4a2        	movi	a10, 0x4b0
400d9653:	0298a7        	bne	a8, a10, 400d9659 <uart_tcgetattr+0x229>
400d9656:	003e46        	j	400d9753 <uart_tcgetattr+0x323>
400d9659:	08a7a2        	movi	a10, 0x708
400d965c:	0298a7        	bne	a8, a10, 400d9662 <uart_tcgetattr+0x232>
400d965f:	003d46        	j	400d9758 <uart_tcgetattr+0x328>
400d9662:	58a2a2        	movi	a10, 0x258
400d9665:	0218a7        	beq	a8, a10, 400d966b <uart_tcgetattr+0x23b>
400d9668:	005586        	j	400d97c2 <uart_tcgetattr+0x392>
400d966b:	0037c6        	j	400d974e <uart_tcgetattr+0x31e>
400d966e:	a10000        	sll	a0, a0
400d9671:	db98      	l32i.n	a9, a11, 52
400d9673:	0298a7        	bne	a8, a10, 400d9679 <uart_tcgetattr+0x249>
400d9676:	003b86        	j	400d9768 <uart_tcgetattr+0x338>
400d9679:	db96a1        	l32r	a10, 400d04d4 <_flash_cache_start+0x4bc>
400d967c:	0298a7        	bne	a8, a10, 400d9682 <uart_tcgetattr+0x252>
400d967f:	003a86        	j	400d976d <uart_tcgetattr+0x33d>
400d9682:	db95a1        	l32r	a10, 400d04d8 <_flash_cache_start+0x4c0>
400d9685:	0218a7        	beq	a8, a10, 400d968b <uart_tcgetattr+0x25b>
400d9688:	004d86        	j	400d97c2 <uart_tcgetattr+0x392>
400d968b:	003506        	j	400d9763 <uart_tcgetattr+0x333>
400d968e:	db93a1        	l32r	a10, 400d04dc <_flash_cache_start+0x4c4>
400d9691:	0298a7        	bne	a8, a10, 400d9697 <uart_tcgetattr+0x267>
400d9694:	004086        	j	400d979a <uart_tcgetattr+0x36a>
400d9697:	493a87        	bltu	a10, a8, 400d96e4 <uart_tcgetattr+0x2b4>
400d969a:	db91a1        	l32r	a10, 400d04e0 <_flash_cache_start+0x4c8>
400d969d:	0298a7        	bne	a8, a10, 400d96a3 <uart_tcgetattr+0x273>
400d96a0:	003886        	j	400d9786 <uart_tcgetattr+0x356>
400d96a3:	1d3a87        	bltu	a10, a8, 400d96c4 <uart_tcgetattr+0x294>
400d96a6:	db8fa1        	l32r	a10, 400d04e4 <_flash_cache_start+0x4cc>
400d96a9:	0298a7        	bne	a8, a10, 400d96af <uart_tcgetattr+0x27f>
400d96ac:	003306        	j	400d977c <uart_tcgetattr+0x34c>
400d96af:	db8ea1        	l32r	a10, 400d04e8 <_flash_cache_start+0x4d0>
400d96b2:	0298a7        	bne	a8, a10, 400d96b8 <uart_tcgetattr+0x288>
400d96b5:	003206        	j	400d9781 <uart_tcgetattr+0x351>
400d96b8:	db8da1        	l32r	a10, 400d04ec <_flash_cache_start+0x4d4>
400d96bb:	0218a7        	beq	a8, a10, 400d96c1 <uart_tcgetattr+0x291>
400d96be:	004006        	j	400d97c2 <uart_tcgetattr+0x392>
400d96c1:	002c86        	j	400d9777 <uart_tcgetattr+0x347>
400d96c4:	db8ba1        	l32r	a10, 400d04f0 <_flash_cache_start+0x4d8>
400d96c7:	0298a7        	bne	a8, a10, 400d96cd <uart_tcgetattr+0x29d>
400d96ca:	003086        	j	400d9790 <uart_tcgetattr+0x360>
400d96cd:	db89a1        	l32r	a10, 400d04f4 <_flash_cache_start+0x4dc>
400d96d0:	0298a7        	bne	a8, a10, 400d96d6 <uart_tcgetattr+0x2a6>
400d96d3:	002f86        	j	400d9795 <uart_tcgetattr+0x365>
400d96d6:	db88a1        	l32r	a10, 400d04f8 <_flash_cache_start+0x4e0>
400d96d9:	0218a7        	beq	a8, a10, 400d96df <uart_tcgetattr+0x2af>
400d96dc:	003886        	j	400d97c2 <uart_tcgetattr+0x392>
400d96df:	002a06        	j	400d978b <uart_tcgetattr+0x35b>
400d96e2:	a10000        	sll	a0, a0
400d96e5:	a7db86        	j	400c3657 <_rtc_text_end+0x3657>
400d96e8:	0298      	l32i.n	a9, a2, 0
400d96ea:	003006        	j	400d97ae <uart_tcgetattr+0x37e>
400d96ed:	1f3a87        	bltu	a10, a8, 400d9710 <uart_tcgetattr+0x2e0>
400d96f0:	db84a1        	l32r	a10, 400d0500 <_flash_cache_start+0x4e8>
400d96f3:	0298a7        	bne	a8, a10, 400d96f9 <uart_tcgetattr+0x2c9>
400d96f6:	002a86        	j	400d97a4 <uart_tcgetattr+0x374>
400d96f9:	db82a1        	l32r	a10, 400d0504 <_flash_cache_start+0x4ec>
400d96fc:	0298a7        	bne	a8, a10, 400d9702 <uart_tcgetattr+0x2d2>
400d96ff:	002986        	j	400d97a9 <uart_tcgetattr+0x379>
400d9702:	db81a1        	l32r	a10, 400d0508 <_flash_cache_start+0x4f0>
400d9705:	0218a7        	beq	a8, a10, 400d970b <uart_tcgetattr+0x2db>
400d9708:	002d86        	j	400d97c2 <uart_tcgetattr+0x392>
400d970b:	002406        	j	400d979f <uart_tcgetattr+0x36f>
400d970e:	a10000        	sll	a0, a0
400d9711:	7f          	.byte 0x7f
400d9712:	a7db      	addi.n	a10, a7, 13
400d9714:	0298      	l32i.n	a9, a2, 0
400d9716:	002786        	j	400d97b8 <uart_tcgetattr+0x388>
400d9719:	db7da1        	l32r	a10, 400d0510 <_flash_cache_start+0x4f8>
400d971c:	0298a7        	bne	a8, a10, 400d9722 <uart_tcgetattr+0x2f2>
400d971f:	002686        	j	400d97bd <uart_tcgetattr+0x38d>
400d9722:	db7ca1        	l32r	a10, 400d0514 <_flash_cache_start+0x4fc>
400d9725:	0218a7        	beq	a8, a10, 400d972b <uart_tcgetattr+0x2fb>
400d9728:	002586        	j	400d97c2 <uart_tcgetattr+0x392>
400d972b:	002106        	j	400d97b3 <uart_tcgetattr+0x383>
400d972e:	280c      	movi.n	a8, 2
400d9730:	0027c6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9733:	380c00        	lsi	f0, a12, 224
400d9736:	002646        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9739:	480c      	movi.n	a8, 4
400d973b:	002506        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d973e:	580c      	movi.n	a8, 5
400d9740:	0023c6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9743:	680c00        	lsi	f0, a12, 0x1a0
400d9746:	002246        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9749:	780c      	movi.n	a8, 7
400d974b:	002106        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d974e:	880c      	movi.n	a8, 8
400d9750:	001fc6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9753:	980c      	movi.n	a8, 9
400d9755:	001e86        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9758:	a80c      	movi.n	a8, 10
400d975a:	001d46        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d975d:	b80c      	movi.n	a8, 11
400d975f:	001c06        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9762:	c80c00        	lsi	f0, a12, 0x320
400d9765:	001a86        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9768:	d80c      	movi.n	a8, 13
400d976a:	001946        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d976d:	e80c      	movi.n	a8, 14
400d976f:	001806        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9772:	f80c      	movi.n	a8, 15
400d9774:	0016c6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9777:	081c      	movi.n	a8, 16
400d9779:	001586        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d977c:	181c      	movi.n	a8, 17
400d977e:	001446        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9781:	281c      	movi.n	a8, 18
400d9783:	001306        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9786:	381c      	movi.n	a8, 19
400d9788:	0011c6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d978b:	481c      	movi.n	a8, 20
400d978d:	001086        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9790:	581c      	movi.n	a8, 21
400d9792:	000f46        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d9795:	681c      	movi.n	a8, 22
400d9797:	000e06        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d979a:	781c      	movi.n	a8, 23
400d979c:	000cc6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d979f:	881c      	movi.n	a8, 24
400d97a1:	000b86        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97a4:	981c      	movi.n	a8, 25
400d97a6:	000a46        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97a9:	a81c      	movi.n	a8, 26
400d97ab:	000906        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97ae:	b81c      	movi.n	a8, 27
400d97b0:	0007c6        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97b3:	c81c      	movi.n	a8, 28
400d97b5:	000686        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97b8:	d81c      	movi.n	a8, 29
400d97ba:	000546        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97bd:	e81c      	movi.n	a8, 30
400d97bf:	000406        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97c2:	00a4a2        	movi	a10, 0x400
400d97c5:	2099a0        	or	a9, a9, a10
400d97c8:	025392        	s16i	a9, a3, 4
400d97cb:	0020c0        	memw
400d97ce:	000046        	j	400d97d3 <uart_tcgetattr+0x3a3>
400d97d1:	180c      	movi.n	a8, 1
400d97d3:	6389      	s32i.n	a8, a3, 24
400d97d5:	5389      	s32i.n	a8, a3, 20
400d97d7:	f01d      	retw.n
400d97d9:	000000        	ill

400d97dc <uart_tcsetattr>:
400d97dc:	004136        	entry	a1, 32
400d97df:	205220        	or	a5, a2, a2
400d97e2:	0c32b6        	bltui	a2, 3, 400d97f2 <uart_tcsetattr+0x16>
400d97e5:	0131e5        	call8	400dab04 <__errno>
400d97e8:	09a022        	movi	a2, 9
400d97eb:	006a22        	s32i	a2, a10, 0
400d97ee:	f27c      	movi.n	a2, -1
400d97f0:	f01d      	retw.n
400d97f2:	00e456        	bnez	a4, 400d9804 <uart_tcsetattr+0x28>
400d97f5:	0130e5        	call8	400dab04 <__errno>
400d97f8:	16a022        	movi	a2, 22
400d97fb:	006a22        	s32i	a2, a10, 0
400d97fe:	f27c      	movi.n	a2, -1
400d9800:	f01d      	retw.n
400d9802:	260000        	lsi	f0, a0, 152
400d9805:	260813        	lsi	f1, a8, 152
400d9808:	ec1b23        	lsi	f2, a11, 0x3b0
400d980b:	0f06e3        	lsi	f14, a6, 60
400d980e:	b20000        	mulsh	a0, a0, a0
400d9811:	af          	.byte 0xaf
400d9812:	ff          	.byte 0xff
400d9813:	20a220        	or	a10, a2, a2
400d9816:	0f6525        	call8	400e8e68 <uart_wait_tx_done>
400d9819:	9a8c      	beqz.n	a10, 400d9826 <uart_tcsetattr+0x4a>
400d981b:	012ea5        	call8	400dab04 <__errno>
400d981e:	621c      	movi.n	a2, 22
400d9820:	0a29      	s32i.n	a2, a10, 0
400d9822:	f27c      	movi.n	a2, -1
400d9824:	f01d      	retw.n
400d9826:	20a550        	or	a10, a5, a5
400d9829:	0f80e5        	call8	400e9038 <uart_flush>
400d982c:	01ca16        	beqz	a10, 400d984c <uart_tcsetattr+0x70>
400d982f:	012d65        	call8	400dab04 <__errno>
400d9832:	621c      	movi.n	a2, 22
400d9834:	0a29      	s32i.n	a2, a10, 0
400d9836:	f27c      	movi.n	a2, -1
400d9838:	f01d      	retw.n
400d983a:	650000        	extui	a0, a0, 16, 7
400d983d:	012c      	movi.n	a1, 32
400d983f:	16a022        	movi	a2, 22
400d9842:	006a22        	s32i	a2, a10, 0
400d9845:	ffaf22        	movi	a2, -1
400d9848:	f01d      	retw.n
400d984a:	220000        	orb	b0, b0, b0
400d984d:	370014        	lsi	f1, a0, 220
400d9850:	210d62        	l8ui	a6, a13, 33
400d9853:	db1c      	movi.n	a11, 29
400d9855:	a02520        	addx4	a2, a5, a2
400d9858:	030c      	movi.n	a3, 0
400d985a:	0239      	s32i.n	a3, a2, 0
400d985c:	000686        	j	400d987a <uart_tcsetattr+0x9e>
400d985f:	621700        	lsi	f0, a7, 0x188
400d9862:	210c      	movi.n	a1, 2
400d9864:	db18      	l32i.n	a1, a11, 52
400d9866:	a02520        	addx4	a2, a5, a2
400d9869:	130c      	movi.n	a3, 1
400d986b:	0239      	s32i.n	a3, a2, 0
400d986d:	000246        	j	400d987a <uart_tcsetattr+0x9e>
400d9870:	db1521        	l32r	a2, 400d04c4 <_flash_cache_start+0x4ac>
400d9873:	a02520        	addx4	a2, a5, a2
400d9876:	230c      	movi.n	a3, 2
400d9878:	0239      	s32i.n	a3, a2, 0
400d987a:	f03d      	nop.n
400d987c:	f03d      	nop.n
400d987e:	f03d      	nop.n
400d9880:	f03d      	nop.n
400d9882:	021482        	l16ui	a8, a4, 4
400d9885:	148080        	extui	a8, a8, 0, 2
400d9888:	2a1826        	beqi	a8, 1, 400d98b6 <uart_tcsetattr+0xda>
400d988b:	18ac      	beqz.n	a8, 400d98b0 <uart_tcsetattr+0xd4>
400d988d:	052826        	beqi	a8, 2, 400d9896 <uart_tcsetattr+0xba>
400d9890:	083826        	beqi	a8, 3, 400d989c <uart_tcsetattr+0xc0>
400d9893:	0002c6        	j	400d98a2 <uart_tcsetattr+0xc6>
400d9896:	2b0c      	movi.n	a11, 2
400d9898:	000746        	j	400d98b9 <uart_tcsetattr+0xdd>
400d989b:	3b0c00        	ueq.s	b0, f12, f0
400d989e:	0005c6        	j	400d98b9 <uart_tcsetattr+0xdd>
400d98a1:	262500        	lsi	f0, a5, 152
400d98a4:	a02201        	l32r	a0, 400c192c <_rtc_text_end+0x192c>
400d98a7:	6a2216        	beqz	a2, 400d9f4d <get_vfs_for_path+0x45>
400d98aa:	af2200        	f64cmph	a2, a2, a0, 10
400d98ad:	ff          	.byte 0xff
400d98ae:	f01d      	retw.n
400d98b0:	0b0c      	movi.n	a11, 0
400d98b2:	0000c6        	j	400d98b9 <uart_tcsetattr+0xdd>
400d98b5:	a0b200        	addx4	a11, a2, a0
400d98b8:	a55001        	l32r	a0, 400c2df8 <_rtc_text_end+0x2df8>
400d98bb:	e96520        	lsi	f2, a5, 0x3a4
400d98be:	0e          	.byte 0xe
400d98bf:	9a8c      	beqz.n	a10, 400d98cc <uart_tcsetattr+0xf0>
400d98c1:	012425        	call8	400dab04 <__errno>
400d98c4:	621c      	movi.n	a2, 22
400d98c6:	0a29      	s32i.n	a2, a10, 0
400d98c8:	f27c      	movi.n	a2, -1
400d98ca:	f01d      	retw.n
400d98cc:	021422        	l16ui	a2, a4, 4
400d98cf:	056227        	bbci	a2, 2, 400d98d8 <uart_tcsetattr+0xfc>
400d98d2:	3b0c      	movi.n	a11, 3
400d98d4:	0000c6        	j	400d98db <uart_tcsetattr+0xff>
400d98d7:	a0b200        	addx4	a11, a2, a0
400d98da:	a55001        	l32r	a0, 400c2e1c <_rtc_text_end+0x2e1c>
400d98dd:	f5e520        	extui	a14, a2, 21, 16
400d98e0:	0e          	.byte 0xe
400d98e1:	ba8c      	beqz.n	a10, 400d98f0 <uart_tcsetattr+0x114>
400d98e3:	012225        	call8	400dab04 <__errno>
400d98e6:	621c      	movi.n	a2, 22
400d98e8:	0a29      	s32i.n	a2, a10, 0
400d98ea:	f27c      	movi.n	a2, -1
400d98ec:	f01d      	retw.n
400d98ee:	220000        	orb	b0, b0, b0
400d98f1:	470214        	lsi	f1, a2, 0x11c
400d98f4:	570762        	l8ui	a6, a7, 87
400d98f7:	0c0a62        	l8ui	a6, a10, 12
400d98fa:	063b      	addi.n	a0, a6, 3
400d98fc:	0c0002        	l8ui	a0, a0, 12
400d98ff:	c60b      	addi.n	a12, a6, -1
400d9901:	000000        	ill
400d9904:	02a0b2        	movi	a11, 2
400d9907:	20a550        	or	a10, a5, a5
400d990a:	0f07e5        	call8	400e8988 <uart_set_parity>
400d990d:	0a2d      	mov.n	a2, a10
400d990f:	9a8c      	beqz.n	a10, 400d991c <uart_tcsetattr+0x140>
400d9911:	011f25        	call8	400dab04 <__errno>
400d9914:	621c      	movi.n	a2, 22
400d9916:	0a29      	s32i.n	a2, a10, 0
400d9918:	f27c      	movi.n	a2, -1
400d991a:	f01d      	retw.n
400d991c:	021432        	l16ui	a3, a4, 4
400d991f:	00a382        	movi	a8, 0x300
400d9922:	028387        	bany	a3, a8, 400d9928 <uart_tcsetattr+0x14c>
400d9925:	003fc6        	j	400d9a28 <uart_tcsetattr+0x24c>
400d9928:	0524b2        	l32i	a11, a4, 20
400d992b:	062422        	l32i	a2, a4, 24
400d992e:	0b1b27        	beq	a11, a2, 400d993d <uart_tcsetattr+0x161>
400d9931:	011d25        	call8	400dab04 <__errno>
400d9934:	16a022        	movi	a2, 22
400d9937:	0a29      	s32i.n	a2, a10, 0
400d9939:	f27c      	movi.n	a2, -1
400d993b:	f01d      	retw.n
400d993d:	0263a7        	bbci	a3, 10, 400d9943 <uart_tcsetattr+0x167>
400d9940:	003446        	j	400d9a15 <uart_tcsetattr+0x239>
400d9943:	e21c      	movi.n	a2, 30
400d9945:	02b2b7        	bgeu	a2, a11, 400d994b <uart_tcsetattr+0x16f>
400d9948:	002e06        	j	400d9a04 <uart_tcsetattr+0x228>
400d994b:	daf321        	l32r	a2, 400d0518 <_flash_cache_start+0x500>
400d994e:	a02b20        	addx4	a2, a11, a2
400d9951:	0228      	l32i.n	a2, a2, 0
400d9953:	0002a0        	jx	a2
400d9956:	bb4c      	movi.n	a11, 75
400d9958:	002e46        	j	400d9a15 <uart_tcsetattr+0x239>
400d995b:	6ea0b2        	movi	a11, 110
400d995e:	002cc6        	j	400d9a15 <uart_tcsetattr+0x239>
400d9961:	86a0b2        	movi	a11, 134
400d9964:	002b46        	j	400d9a15 <uart_tcsetattr+0x239>
400d9967:	96a0b2        	movi	a11, 150
400d996a:	0029c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d996d:	c8a0b2        	movi	a11, 200
400d9970:	002846        	j	400d9a15 <uart_tcsetattr+0x239>
400d9973:	2ca1b2        	movi	a11, 0x12c
400d9976:	0026c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d9979:	58a2b2        	movi	a11, 0x258
400d997c:	002546        	j	400d9a15 <uart_tcsetattr+0x239>
400d997f:	b0a4b2        	movi	a11, 0x4b0
400d9982:	0023c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d9985:	08a7b2        	movi	a11, 0x708
400d9988:	002246        	j	400d9a15 <uart_tcsetattr+0x239>
400d998b:	dad0b1        	l32r	a11, 400d04cc <_flash_cache_start+0x4b4>
400d998e:	0020c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d9991:	dad1b1        	l32r	a11, 400d04d8 <_flash_cache_start+0x4c0>
400d9994:	001f46        	j	400d9a15 <uart_tcsetattr+0x239>
400d9997:	daceb1        	l32r	a11, 400d04d0 <_flash_cache_start+0x4b8>
400d999a:	001dc6        	j	400d9a15 <uart_tcsetattr+0x239>
400d999d:	dacdb1        	l32r	a11, 400d04d4 <_flash_cache_start+0x4bc>
400d99a0:	001c46        	j	400d9a15 <uart_tcsetattr+0x239>
400d99a3:	dac9b1        	l32r	a11, 400d04c8 <_flash_cache_start+0x4b0>
400d99a6:	001ac6        	j	400d9a15 <uart_tcsetattr+0x239>
400d99a9:	dad0b1        	l32r	a11, 400d04ec <_flash_cache_start+0x4d4>
400d99ac:	001946        	j	400d9a15 <uart_tcsetattr+0x239>
400d99af:	dacdb1        	l32r	a11, 400d04e4 <_flash_cache_start+0x4cc>
400d99b2:	0017c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d99b5:	daccb1        	l32r	a11, 400d04e8 <_flash_cache_start+0x4d0>
400d99b8:	001646        	j	400d9a15 <uart_tcsetattr+0x239>
400d99bb:	dac9b1        	l32r	a11, 400d04e0 <_flash_cache_start+0x4c8>
400d99be:	0014c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d99c1:	dacdb1        	l32r	a11, 400d04f8 <_flash_cache_start+0x4e0>
400d99c4:	001346        	j	400d9a15 <uart_tcsetattr+0x239>
400d99c7:	dacab1        	l32r	a11, 400d04f0 <_flash_cache_start+0x4d8>
400d99ca:	0011c6        	j	400d9a15 <uart_tcsetattr+0x239>
400d99cd:	dac9b1        	l32r	a11, 400d04f4 <_flash_cache_start+0x4dc>
400d99d0:	001046        	j	400d9a15 <uart_tcsetattr+0x239>
400d99d3:	dac2b1        	l32r	a11, 400d04dc <_flash_cache_start+0x4c4>
400d99d6:	000ec6        	j	400d9a15 <uart_tcsetattr+0x239>
400d99d9:	cbb100        	movf.s	f11, f1, b0
400d99dc:	06da      	add.n	a0, a6, a13
400d99de:	000d      	mov.n	a0, a0
400d99e0:	dac8b1        	l32r	a11, 400d0500 <_flash_cache_start+0x4e8>
400d99e3:	000b86        	j	400d9a15 <uart_tcsetattr+0x239>
400d99e6:	dac7b1        	l32r	a11, 400d0504 <_flash_cache_start+0x4ec>
400d99e9:	000a06        	j	400d9a15 <uart_tcsetattr+0x239>
400d99ec:	dac4b1        	l32r	a11, 400d04fc <_flash_cache_start+0x4e4>
400d99ef:	000886        	j	400d9a15 <uart_tcsetattr+0x239>
400d99f2:	dac8b1        	l32r	a11, 400d0514 <_flash_cache_start+0x4fc>
400d99f5:	000706        	j	400d9a15 <uart_tcsetattr+0x239>
400d99f8:	dac5b1        	l32r	a11, 400d050c <_flash_cache_start+0x4f4>
400d99fb:	000586        	j	400d9a15 <uart_tcsetattr+0x239>
400d99fe:	dac4b1        	l32r	a11, 400d0510 <_flash_cache_start+0x4f8>
400d9a01:	000406        	j	400d9a15 <uart_tcsetattr+0x239>
400d9a04:	010fe5        	call8	400dab04 <__errno>
400d9a07:	16a022        	movi	a2, 22
400d9a0a:	006a22        	s32i	a2, a10, 0
400d9a0d:	ffaf22        	movi	a2, -1
400d9a10:	f01d      	retw.n
400d9a12:	32a0b2        	movi	a11, 50
400d9a15:	20a550        	or	a10, a5, a5
400d9a18:	0f05a5        	call8	400e8a74 <uart_set_baudrate>
400d9a1b:	0a2d      	mov.n	a2, a10
400d9a1d:	7a8c      	beqz.n	a10, 400d9a28 <uart_tcsetattr+0x24c>
400d9a1f:	010e65        	call8	400dab04 <__errno>
400d9a22:	621c      	movi.n	a2, 22
400d9a24:	0a29      	s32i.n	a2, a10, 0
400d9a26:	f27c      	movi.n	a2, -1
400d9a28:	f01d      	retw.n
	...

400d9a2c <uart_access>:
400d9a2c:	004136        	entry	a1, 32
400d9a2f:	dabbb1        	l32r	a11, 400d051c <_flash_cache_start+0x504>
400d9a32:	02ad      	mov.n	a10, a2
400d9a34:	da6781        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9a37:	0008e0        	callx8	a8
400d9a3a:	01aa16        	beqz	a10, 400d9a58 <uart_access+0x2c>
400d9a3d:	dab8b1        	l32r	a11, 400d0520 <_flash_cache_start+0x508>
400d9a40:	20a220        	or	a10, a2, a2
400d9a43:	da6381        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9a46:	0008e0        	callx8	a8
400d9a49:	ba8c      	beqz.n	a10, 400d9a58 <uart_access+0x2c>
400d9a4b:	dab6b1        	l32r	a11, 400d0524 <_flash_cache_start+0x50c>
400d9a4e:	02ad      	mov.n	a10, a2
400d9a50:	da6081        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9a53:	0008e0        	callx8	a8
400d9a56:	6adc      	bnez.n	a10, 400d9a70 <uart_access+0x44>
400d9a58:	022316        	beqz	a3, 400d9a7e <uart_access+0x52>
400d9a5b:	06a022        	movi	a2, 6
400d9a5e:	020327        	bnone	a3, a2, 400d9a64 <uart_access+0x38>
400d9a61:	1d6307        	bbci	a3, 0, 400d9a82 <uart_access+0x56>
400d9a64:	0109e5        	call8	400dab04 <__errno>
400d9a67:	0da022        	movi	a2, 13
400d9a6a:	0a29      	s32i.n	a2, a10, 0
400d9a6c:	f27c      	movi.n	a2, -1
400d9a6e:	f01d      	retw.n
400d9a70:	010925        	call8	400dab04 <__errno>
400d9a73:	02a022        	movi	a2, 2
400d9a76:	006a22        	s32i	a2, a10, 0
400d9a79:	ffaf22        	movi	a2, -1
400d9a7c:	f01d      	retw.n
400d9a7e:	020c      	movi.n	a2, 0
400d9a80:	f01d      	retw.n
400d9a82:	020c      	movi.n	a2, 0
400d9a84:	f01d      	retw.n
	...

400d9a88 <uart_open>:
400d9a88:	004136        	entry	a1, 32
400d9a8b:	daa4b1        	l32r	a11, 400d051c <_flash_cache_start+0x504>
400d9a8e:	02ad      	mov.n	a10, a2
400d9a90:	da5081        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9a93:	0008e0        	callx8	a8
400d9a96:	3aac      	beqz.n	a10, 400d9abd <uart_open+0x35>
400d9a98:	daa2b1        	l32r	a11, 400d0520 <_flash_cache_start+0x508>
400d9a9b:	02ad      	mov.n	a10, a2
400d9a9d:	da4c81        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9aa0:	0008e0        	callx8	a8
400d9aa3:	ba9c      	beqz.n	a10, 400d9ac2 <uart_open+0x3a>
400d9aa5:	da9fb1        	l32r	a11, 400d0524 <_flash_cache_start+0x50c>
400d9aa8:	02ad      	mov.n	a10, a2
400d9aaa:	da4981        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d9aad:	0008e0        	callx8	a8
400d9ab0:	4a9c      	beqz.n	a10, 400d9ac8 <uart_open+0x40>
400d9ab2:	010525        	call8	400dab04 <__errno>
400d9ab5:	220c      	movi.n	a2, 2
400d9ab7:	0a29      	s32i.n	a2, a10, 0
400d9ab9:	f27c      	movi.n	a2, -1
400d9abb:	f01d      	retw.n
400d9abd:	020c      	movi.n	a2, 0
400d9abf:	0001c6        	j	400d9aca <uart_open+0x42>
400d9ac2:	120c      	movi.n	a2, 1
400d9ac4:	000086        	j	400d9aca <uart_open+0x42>
400d9ac7:	220c00        	orb	b0, b12, b0
400d9aca:	da9781        	l32r	a8, 400d0528 <_flash_cache_start+0x510>
400d9acd:	108380        	and	a8, a3, a8
400d9ad0:	030c      	movi.n	a3, 0
400d9ad2:	190c      	movi.n	a9, 1
400d9ad4:	933980        	movnez	a3, a9, a8
400d9ad7:	da9581        	l32r	a8, 400d052c <_flash_cache_start+0x514>
400d9ada:	882a      	add.n	a8, a8, a2
400d9adc:	004832        	s8i	a3, a8, 0
400d9adf:	0020c0        	memw
400d9ae2:	f01d      	retw.n

400d9ae4 <uart_fcntl>:
400d9ae4:	006136        	entry	a1, 48
400d9ae7:	016142        	s32i	a4, a1, 4
400d9aea:	026152        	s32i	a5, a1, 8
400d9aed:	036162        	s32i	a6, a1, 12
400d9af0:	1832b6        	bltui	a2, 3, 400d9b0c <uart_fcntl+0x28>
400d9af3:	f03d      	nop.n
400d9af5:	f03d      	nop.n
400d9af7:	0020f0        	nop
400d9afa:	0020f0        	nop
400d9afd:	da8cd1        	l32r	a13, 400d0530 <_flash_cache_start+0x518>
400d9b00:	da8dc1        	l32r	a12, 400d0534 <_flash_cache_start+0x51c>
400d9b03:	0da1b2        	movi	a11, 0x10d
400d9b06:	da8ca1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9b09:	00fc25        	call8	400daacc <__assert_func>
400d9b0c:	0c3366        	bnei	a3, 3, 400d9b1c <uart_fcntl+0x38>
400d9b0f:	da8731        	l32r	a3, 400d052c <_flash_cache_start+0x514>
400d9b12:	232a      	add.n	a2, a3, a2
400d9b14:	000222        	l8ui	a2, a2, 0
400d9b17:	060256        	bnez	a2, 400d9b7b <uart_fcntl+0x97>
400d9b1a:	f01d      	retw.n
400d9b1c:	4d4366        	bnei	a3, 4, 400d9b6d <uart_fcntl+0x89>
400d9b1f:	3188      	l32i.n	a8, a1, 12
400d9b21:	384b      	addi.n	a3, a8, 4
400d9b23:	3139      	s32i.n	a3, a1, 12
400d9b25:	891c      	movi.n	a9, 24
400d9b27:	0a2937        	blt	a9, a3, 400d9b35 <uart_fcntl+0x51>
400d9b2a:	f03d      	nop.n
400d9b2c:	f03d      	nop.n
400d9b2e:	f03d      	nop.n
400d9b30:	2138      	l32i.n	a3, a1, 8
400d9b32:	000486        	j	400d9b48 <uart_fcntl+0x64>
400d9b35:	831c      	movi.n	a3, 24
400d9b37:	032387        	blt	a3, a8, 400d9b3e <uart_fcntl+0x5a>
400d9b3a:	432c      	movi.n	a3, 36
400d9b3c:	3139      	s32i.n	a3, a1, 12
400d9b3e:	f03d      	nop.n
400d9b40:	f03d      	nop.n
400d9b42:	f03d      	nop.n
400d9b44:	f03d      	nop.n
400d9b46:	1138      	l32i.n	a3, a1, 4
400d9b48:	3188      	l32i.n	a8, a1, 12
400d9b4a:	fcc882        	addi	a8, a8, -4
400d9b4d:	838a      	add.n	a8, a3, a8
400d9b4f:	0898      	l32i.n	a9, a8, 0
400d9b51:	da7581        	l32r	a8, 400d0528 <_flash_cache_start+0x510>
400d9b54:	108980        	and	a8, a9, a8
400d9b57:	0a0c      	movi.n	a10, 0
400d9b59:	190c      	movi.n	a9, 1
400d9b5b:	839a80        	moveqz	a9, a10, a8
400d9b5e:	da7381        	l32r	a8, 400d052c <_flash_cache_start+0x514>
400d9b61:	882a      	add.n	a8, a8, a2
400d9b63:	004892        	s8i	a9, a8, 0
400d9b66:	0020c0        	memw
400d9b69:	0a2d      	mov.n	a2, a10
400d9b6b:	f01d      	retw.n
400d9b6d:	00f965        	call8	400dab04 <__errno>
400d9b70:	58a022        	movi	a2, 88
400d9b73:	006a22        	s32i	a2, a10, 0
400d9b76:	ffaf22        	movi	a2, -1
400d9b79:	f01d      	retw.n
400d9b7b:	da6b21        	l32r	a2, 400d0528 <_flash_cache_start+0x510>
400d9b7e:	f01d      	retw.n

400d9b80 <uart_fstat>:
400d9b80:	004136        	entry	a1, 32
400d9b83:	0e32b6        	bltui	a2, 3, 400d9b95 <uart_fstat+0x15>
400d9b86:	da6ad1        	l32r	a13, 400d0530 <_flash_cache_start+0x518>
400d9b89:	da6cc1        	l32r	a12, 400d053c <_flash_cache_start+0x524>
400d9b8c:	00a1b2        	movi	a11, 0x100
400d9b8f:	da6aa1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9b92:	00f3a5        	call8	400daacc <__assert_func>
400d9b95:	da6a21        	l32r	a2, 400d0540 <_flash_cache_start+0x528>
400d9b98:	1329      	s32i.n	a2, a3, 4
400d9b9a:	020c      	movi.n	a2, 0
400d9b9c:	f01d      	retw.n
	...

400d9ba0 <uart_close>:
400d9ba0:	004136        	entry	a1, 32
400d9ba3:	0e32b6        	bltui	a2, 3, 400d9bb5 <uart_close+0x15>
400d9ba6:	da62d1        	l32r	a13, 400d0530 <_flash_cache_start+0x518>
400d9ba9:	da66c1        	l32r	a12, 400d0544 <_flash_cache_start+0x52c>
400d9bac:	07a1b2        	movi	a11, 0x107
400d9baf:	da62a1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9bb2:	00f1a5        	call8	400daacc <__assert_func>
400d9bb5:	020c      	movi.n	a2, 0
400d9bb7:	f01d      	retw.n
400d9bb9:	000000        	ill

400d9bbc <uart_return_char>:
400d9bbc:	004136        	entry	a1, 32
400d9bbf:	da3681        	l32r	a8, 400d0498 <_flash_cache_start+0x480>
400d9bc2:	a08280        	addx4	a8, a2, a8
400d9bc5:	0888      	l32i.n	a8, a8, 0
400d9bc7:	0e0826        	beqi	a8, -1, 400d9bd9 <uart_return_char+0x1d>
400d9bca:	da5fd1        	l32r	a13, 400d0548 <_flash_cache_start+0x530>
400d9bcd:	da5fc1        	l32r	a12, 400d054c <_flash_cache_start+0x534>
400d9bd0:	cca0b2        	movi	a11, 204
400d9bd3:	da59a1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9bd6:	00ef65        	call8	400daacc <__assert_func>
400d9bd9:	da2f81        	l32r	a8, 400d0498 <_flash_cache_start+0x480>
400d9bdc:	a02280        	addx4	a2, a2, a8
400d9bdf:	0239      	s32i.n	a3, a2, 0
400d9be1:	f01d      	retw.n
	...

400d9be4 <uart_read>:
400d9be4:	004136        	entry	a1, 32
400d9be7:	0e32b6        	bltui	a2, 3, 400d9bf9 <uart_read+0x15>
400d9bea:	da51d1        	l32r	a13, 400d0530 <_flash_cache_start+0x518>
400d9bed:	da58c1        	l32r	a12, 400d0550 <_flash_cache_start+0x538>
400d9bf0:	d2a0b2        	movi	a11, 210
400d9bf3:	da51a1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9bf6:	00ed65        	call8	400daacc <__assert_func>
400d9bf9:	da5671        	l32r	a7, 400d0554 <_flash_cache_start+0x53c>
400d9bfc:	a07270        	addx4	a7, a2, a7
400d9bff:	07ad      	mov.n	a10, a7
400d9c01:	aaed65        	call8	40084ad8 <_lock_acquire_recursive>
400d9c04:	060c      	movi.n	a6, 0
400d9c06:	001646        	j	400d9c63 <uart_read+0x7f>
400d9c09:	000000        	ill
400d9c0c:	20a220        	or	a10, a2, a2
400d9c0f:	ff4025        	call8	400d9010 <uart_read_char>
400d9c12:	0a5d      	mov.n	a5, a10
400d9c14:	d80c      	movi.n	a8, 13
400d9c16:	2e9a87        	bne	a10, a8, 400d9c48 <uart_read+0x64>
400d9c19:	da2a81        	l32r	a8, 400d04c4 <_flash_cache_start+0x4ac>
400d9c1c:	a08280        	addx4	a8, a2, a8
400d9c1f:	0888      	l32i.n	a8, a8, 0
400d9c21:	291826        	beqi	a8, 1, 400d9c4e <uart_read+0x6a>
400d9c24:	e8ec      	bnez.n	a8, 400d9c56 <uart_read+0x72>
400d9c26:	02ad      	mov.n	a10, a2
400d9c28:	ff3e65        	call8	400d9010 <uart_read_char>
400d9c2b:	090a66        	bnei	a10, -1, 400d9c38 <uart_read+0x54>
400d9c2e:	05bd      	mov.n	a11, a5
400d9c30:	02ad      	mov.n	a10, a2
400d9c32:	fff8a5        	call8	400d9bbc <uart_return_char>
400d9c35:	000b46        	j	400d9c66 <uart_read+0x82>
400d9c38:	189a26        	beqi	a10, 10, 400d9c54 <uart_read+0x70>
400d9c3b:	0abd      	mov.n	a11, a10
400d9c3d:	02ad      	mov.n	a10, a2
400d9c3f:	fff7e5        	call8	400d9bbc <uart_return_char>
400d9c42:	000406        	j	400d9c56 <uart_read+0x72>
400d9c45:	000000        	ill
400d9c48:	0a0a66        	bnei	a10, -1, 400d9c56 <uart_read+0x72>
400d9c4b:	0005c6        	j	400d9c66 <uart_read+0x82>
400d9c4e:	a50c      	movi.n	a5, 10
400d9c50:	000086        	j	400d9c56 <uart_read+0x72>
400d9c53:	a50c00        	extui	a0, a0, 28, 11
400d9c56:	836a      	add.n	a8, a3, a6
400d9c58:	004852        	s8i	a5, a8, 0
400d9c5b:	0020c0        	memw
400d9c5e:	661b      	addi.n	a6, a6, 1
400d9c60:	029526        	beqi	a5, 10, 400d9c66 <uart_read+0x82>
400d9c63:	a53647        	bltu	a6, a4, 400d9c0c <uart_read+0x28>
400d9c66:	20a770        	or	a10, a7, a7
400d9c69:	aaeaa5        	call8	40084b14 <_lock_release_recursive>
400d9c6c:	004616        	beqz	a6, 400d9c74 <uart_read+0x90>
400d9c6f:	202660        	or	a2, a6, a6
400d9c72:	f01d      	retw.n
400d9c74:	00e8e5        	call8	400dab04 <__errno>
400d9c77:	0ba022        	movi	a2, 11
400d9c7a:	006a22        	s32i	a2, a10, 0
400d9c7d:	ffaf22        	movi	a2, -1
400d9c80:	f01d      	retw.n
	...

400d9c84 <uart_write>:
400d9c84:	004136        	entry	a1, 32
400d9c87:	0e32b6        	bltui	a2, 3, 400d9c99 <uart_write+0x15>
400d9c8a:	da29d1        	l32r	a13, 400d0530 <_flash_cache_start+0x518>
400d9c8d:	da32c1        	l32r	a12, 400d0558 <_flash_cache_start+0x540>
400d9c90:	a5a0b2        	movi	a11, 165
400d9c93:	da29a1        	l32r	a10, 400d0538 <_flash_cache_start+0x520>
400d9c96:	00e365        	call8	400daacc <__assert_func>
400d9c99:	da3071        	l32r	a7, 400d055c <_flash_cache_start+0x544>
400d9c9c:	a07270        	addx4	a7, a2, a7
400d9c9f:	07ad      	mov.n	a10, a7
400d9ca1:	aae365        	call8	40084ad8 <_lock_acquire_recursive>
400d9ca4:	050c      	movi.n	a5, 0
400d9ca6:	000ec6        	j	400d9ce5 <uart_write+0x61>
400d9ca9:	635a      	add.n	a6, a3, a5
400d9cab:	000662        	l8ui	a6, a6, 0
400d9cae:	1f9666        	bnei	a6, 10, 400d9cd1 <uart_write+0x4d>
400d9cb1:	da2b81        	l32r	a8, 400d0560 <_flash_cache_start+0x548>
400d9cb4:	0888      	l32i.n	a8, a8, 0
400d9cb6:	172826        	beqi	a8, 2, 400d9cd1 <uart_write+0x4d>
400d9cb9:	da2a81        	l32r	a8, 400d0564 <_flash_cache_start+0x54c>
400d9cbc:	a08280        	addx4	a8, a2, a8
400d9cbf:	0888      	l32i.n	a8, a8, 0
400d9cc1:	db0c      	movi.n	a11, 13
400d9cc3:	20a220        	or	a10, a2, a2
400d9cc6:	0008e0        	callx8	a8
400d9cc9:	da2581        	l32r	a8, 400d0560 <_flash_cache_start+0x548>
400d9ccc:	0888      	l32i.n	a8, a8, 0
400d9cce:	111826        	beqi	a8, 1, 400d9ce3 <uart_write+0x5f>
400d9cd1:	da2481        	l32r	a8, 400d0564 <_flash_cache_start+0x54c>
400d9cd4:	a08280        	addx4	a8, a2, a8
400d9cd7:	002882        	l32i	a8, a8, 0
400d9cda:	20b660        	or	a11, a6, a6
400d9cdd:	20a220        	or	a10, a2, a2
400d9ce0:	0008e0        	callx8	a8
400d9ce3:	551b      	addi.n	a5, a5, 1
400d9ce5:	c03547        	bltu	a5, a4, 400d9ca9 <uart_write+0x25>
400d9ce8:	07ad      	mov.n	a10, a7
400d9cea:	aae2a5        	call8	40084b14 <_lock_release_recursive>
400d9ced:	042d      	mov.n	a2, a4
400d9cef:	f01d      	retw.n
400d9cf1:	000000        	ill

400d9cf4 <esp_vfs_dev_uart_register>:
400d9cf4:	018136        	entry	a1, 192
400d9cf7:	94a022        	movi	a2, 148
400d9cfa:	02cd      	mov.n	a12, a2
400d9cfc:	0b0c      	movi.n	a11, 0
400d9cfe:	a1cb      	addi.n	a10, a1, 12
400d9d00:	d8db81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d9d03:	0008e0        	callx8	a8
400d9d06:	da1881        	l32r	a8, 400d0568 <_flash_cache_start+0x550>
400d9d09:	4189      	s32i.n	a8, a1, 16
400d9d0b:	f03d      	nop.n
400d9d0d:	f03d      	nop.n
400d9d0f:	f03d      	nop.n
400d9d11:	f03d      	nop.n
400d9d13:	da1681        	l32r	a8, 400d056c <_flash_cache_start+0x554>
400d9d16:	6189      	s32i.n	a8, a1, 24
400d9d18:	f03d      	nop.n
400d9d1a:	f03d      	nop.n
400d9d1c:	f03d      	nop.n
400d9d1e:	f03d      	nop.n
400d9d20:	da1481        	l32r	a8, 400d0570 <_flash_cache_start+0x558>
400d9d23:	7189      	s32i.n	a8, a1, 28
400d9d25:	f03d      	nop.n
400d9d27:	f03d      	nop.n
400d9d29:	f03d      	nop.n
400d9d2b:	f03d      	nop.n
400d9d2d:	da1181        	l32r	a8, 400d0574 <_flash_cache_start+0x55c>
400d9d30:	8189      	s32i.n	a8, a1, 32
400d9d32:	f03d      	nop.n
400d9d34:	f03d      	nop.n
400d9d36:	f03d      	nop.n
400d9d38:	f03d      	nop.n
400d9d3a:	da0f81        	l32r	a8, 400d0578 <_flash_cache_start+0x560>
400d9d3d:	9189      	s32i.n	a8, a1, 36
400d9d3f:	f03d      	nop.n
400d9d41:	f03d      	nop.n
400d9d43:	f03d      	nop.n
400d9d45:	f03d      	nop.n
400d9d47:	da0d81        	l32r	a8, 400d057c <_flash_cache_start+0x564>
400d9d4a:	166182        	s32i	a8, a1, 88
400d9d4d:	f03d      	nop.n
400d9d4f:	f03d      	nop.n
400d9d51:	f03d      	nop.n
400d9d53:	f03d      	nop.n
400d9d55:	da0a81        	l32r	a8, 400d0580 <_flash_cache_start+0x568>
400d9d58:	196182        	s32i	a8, a1, 100
400d9d5b:	f03d      	nop.n
400d9d5d:	f03d      	nop.n
400d9d5f:	f03d      	nop.n
400d9d61:	f03d      	nop.n
400d9d63:	da0881        	l32r	a8, 400d0584 <_flash_cache_start+0x56c>
400d9d66:	1b6182        	s32i	a8, a1, 108
400d9d69:	f03d      	nop.n
400d9d6b:	f03d      	nop.n
400d9d6d:	f03d      	nop.n
400d9d6f:	f03d      	nop.n
400d9d71:	da0581        	l32r	a8, 400d0588 <_flash_cache_start+0x570>
400d9d74:	1c6182        	s32i	a8, a1, 112
400d9d77:	f03d      	nop.n
400d9d79:	f03d      	nop.n
400d9d7b:	f03d      	nop.n
400d9d7d:	f03d      	nop.n
400d9d7f:	da0381        	l32r	a8, 400d058c <_flash_cache_start+0x574>
400d9d82:	1d6182        	s32i	a8, a1, 116
400d9d85:	f03d      	nop.n
400d9d87:	f03d      	nop.n
400d9d89:	f03d      	nop.n
400d9d8b:	f03d      	nop.n
400d9d8d:	da0081        	l32r	a8, 400d0590 <_flash_cache_start+0x578>
400d9d90:	1e6182        	s32i	a8, a1, 120
400d9d93:	f03d      	nop.n
400d9d95:	f03d      	nop.n
400d9d97:	f03d      	nop.n
400d9d99:	f03d      	nop.n
400d9d9b:	d9fe81        	l32r	a8, 400d0594 <_flash_cache_start+0x57c>
400d9d9e:	226182        	s32i	a8, a1, 136
400d9da1:	f03d      	nop.n
400d9da3:	f03d      	nop.n
400d9da5:	f03d      	nop.n
400d9da7:	f03d      	nop.n
400d9da9:	d9fb81        	l32r	a8, 400d0598 <_flash_cache_start+0x580>
400d9dac:	276182        	s32i	a8, a1, 156
400d9daf:	0c0c      	movi.n	a12, 0
400d9db1:	a0a032        	movi	a3, 160
400d9db4:	331a      	add.n	a3, a3, a1
400d9db6:	c0b320        	sub	a11, a3, a2
400d9db9:	d9f8a1        	l32r	a10, 400d059c <_flash_cache_start+0x584>
400d9dbc:	001fe5        	call8	400d9fbc <esp_vfs_register>
400d9dbf:	da8c      	beqz.n	a10, 400d9dd0 <esp_vfs_dev_uart_register+0xdc>
400d9dc1:	d9f7e1        	l32r	a14, 400d05a0 <_flash_cache_start+0x588>
400d9dc4:	d9f8d1        	l32r	a13, 400d05a4 <_flash_cache_start+0x58c>
400d9dc7:	8ba3c2        	movi	a12, 0x38b
400d9dca:	d9dbb1        	l32r	a11, 400d0538 <_flash_cache_start+0x520>
400d9dcd:	b18765        	call8	4008b644 <_esp_error_check_failed>
400d9dd0:	f01d      	retw.n
	...

400d9dd4 <get_vfs_for_fd>:
400d9dd4:	004136        	entry	a1, 32
400d9dd7:	f83c      	movi.n	a8, 63
400d9dd9:	2b3827        	bltu	a8, a2, 400d9e08 <get_vfs_for_fd+0x34>
400d9ddc:	902220        	addx2	a2, a2, a2
400d9ddf:	d9f281        	l32r	a8, 400d05a8 <_flash_cache_start+0x590>
400d9de2:	282a      	add.n	a2, a8, a2
400d9de4:	010222        	l8ui	a2, a2, 1
400d9de7:	238200        	sext	a8, a2, 7
400d9dea:	012896        	bltz	a8, 400d9e00 <get_vfs_for_fd+0x2c>
400d9ded:	d9ef91        	l32r	a9, 400d05ac <_flash_cache_start+0x594>
400d9df0:	0998      	l32i.n	a9, a9, 0
400d9df2:	0eb897        	bgeu	a8, a9, 400d9e04 <get_vfs_for_fd+0x30>
400d9df5:	d9ee21        	l32r	a2, 400d05b0 <_flash_cache_start+0x598>
400d9df8:	a08820        	addx4	a8, a8, a2
400d9dfb:	0828      	l32i.n	a2, a8, 0
400d9dfd:	f01d      	retw.n
400d9dff:	020c00        	andb	b0, b12, b0
400d9e02:	f01d      	retw.n
400d9e04:	020c      	movi.n	a2, 0
400d9e06:	f01d      	retw.n
400d9e08:	020c      	movi.n	a2, 0
400d9e0a:	f01d      	retw.n

400d9e0c <esp_vfs_register_common>:
400d9e0c:	006136        	entry	a1, 48
400d9e0f:	390326        	beqi	a3, -1, 400d9e4c <esp_vfs_register_common+0x40>
400d9e12:	830b      	addi.n	a8, a3, -1
400d9e14:	170c      	movi.n	a7, 1
400d9e16:	090c      	movi.n	a9, 0
400d9e18:	839780        	moveqz	a9, a7, a8
400d9e1b:	748090        	extui	a8, a9, 0, 8
400d9e1e:	f90c      	movi.n	a9, 15
400d9e20:	013937        	bltu	a9, a3, 400d9e25 <esp_vfs_register_common+0x19>
400d9e23:	070c      	movi.n	a7, 0
400d9e25:	747070        	extui	a7, a7, 0, 8
400d9e28:	207870        	or	a7, a8, a7
400d9e2b:	0ba756        	bnez	a7, 400d9ee9 <esp_vfs_register_common+0xdd>
400d9e2e:	00b316        	beqz	a3, 400d9e3d <esp_vfs_register_common+0x31>
400d9e31:	000282        	l8ui	a8, a2, 0
400d9e34:	2fa072        	movi	a7, 47
400d9e37:	021877        	beq	a8, a7, 400d9e3d <esp_vfs_register_common+0x31>
400d9e3a:	002c86        	j	400d9ef0 <esp_vfs_register_common+0xe4>
400d9e3d:	730b      	addi.n	a7, a3, -1
400d9e3f:	727a      	add.n	a7, a2, a7
400d9e41:	000782        	l8ui	a8, a7, 0
400d9e44:	f72c      	movi.n	a7, 47
400d9e46:	029877        	bne	a8, a7, 400d9e4c <esp_vfs_register_common+0x40>
400d9e49:	002a06        	j	400d9ef5 <esp_vfs_register_common+0xe9>
400d9e4c:	b0a0a2        	movi	a10, 176
400d9e4f:	d8a581        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400d9e52:	0008e0        	callx8	a8
400d9e55:	31a9      	s32i.n	a10, a1, 12
400d9e57:	0a1a16        	beqz	a10, 400d9efc <esp_vfs_register_common+0xf0>
400d9e5a:	070c      	movi.n	a7, 0
400d9e5c:	000306        	j	400d9e6c <esp_vfs_register_common+0x60>
400d9e5f:	d48100        	extui	a8, a0, 1, 14
400d9e62:	80d9      	s32i.n	a13, a0, 32
400d9e64:	88a087        	bge	a0, a8, 400d9df0 <get_vfs_for_fd+0x1c>
400d9e67:	8c08      	l32i.n	a0, a12, 32
400d9e69:	1b88      	l32i.n	a8, a11, 4
400d9e6b:	d08177        	bany	a1, a7, 400d9e3f <esp_vfs_register_common+0x33>
400d9e6e:	98d9      	s32i.n	a13, a8, 36
400d9e70:	9708      	l32i.n	a0, a7, 36
400d9e72:	97eb37        	bbsi	a11, 3, 400d9e0d <esp_vfs_register_common+0x1>
400d9e75:	b61897        	beq	a8, a9, 400d9e2f <esp_vfs_register_common+0x23>
400d9e78:	0e89      	s32i.n	a8, a14, 0
400d9e7a:	31a8      	l32i.n	a10, a1, 12
400d9e7c:	d88481        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d9e7f:	0008e0        	callx8	a8
400d9e82:	01a122        	movi	a2, 0x101
400d9e85:	f01d      	retw.n
400d9e87:	1b0000        	un.s	b0, f0, f0
400d9e8a:	8199      	s32i.n	a9, a1, 32
400d9e8c:	d9c8      	l32i.n	a12, a9, 52
400d9e8e:	0899      	s32i.n	a9, a8, 0
400d9e90:	f03d      	nop.n
400d9e92:	f03d      	nop.n
400d9e94:	f03d      	nop.n
400d9e96:	f03d      	nop.n
400d9e98:	d9c681        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400d9e9b:	a08780        	addx4	a8, a7, a8
400d9e9e:	3198      	l32i.n	a9, a1, 12
400d9ea0:	0899      	s32i.n	a9, a8, 0
400d9ea2:	120326        	beqi	a3, -1, 400d9eb8 <esp_vfs_register_common+0xac>
400d9ea5:	20b220        	or	a11, a2, a2
400d9ea8:	94a0a2        	movi	a10, 148
400d9eab:	80a9a0        	add	a10, a9, a10
400d9eae:	d9c181        	l32r	a8, 400d05b4 <_flash_cache_start+0x59c>
400d9eb1:	0008e0        	callx8	a8
400d9eb4:	000446        	j	400d9ec9 <esp_vfs_register_common+0xbd>
400d9eb7:	fc0c00        	lsi	f0, a12, 0x3f0
400d9eba:	0b0c      	movi.n	a11, 0
400d9ebc:	94a0a2        	movi	a10, 148
400d9ebf:	3128      	l32i.n	a2, a1, 12
400d9ec1:	a2aa      	add.n	a10, a2, a10
400d9ec3:	d86a81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d9ec6:	0008e0        	callx8	a8
400d9ec9:	94a0c2        	movi	a12, 148
400d9ecc:	04bd      	mov.n	a11, a4
400d9ece:	31a8      	l32i.n	a10, a1, 12
400d9ed0:	d87081        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400d9ed3:	0008e0        	callx8	a8
400d9ed6:	3128      	l32i.n	a2, a1, 12
400d9ed8:	296232        	s32i	a3, a2, 164
400d9edb:	2a6252        	s32i	a5, a2, 168
400d9ede:	2b6272        	s32i	a7, a2, 172
400d9ee1:	c69c      	beqz.n	a6, 400d9f01 <esp_vfs_register_common+0xf5>
400d9ee3:	0679      	s32i.n	a7, a6, 0
400d9ee5:	020c      	movi.n	a2, 0
400d9ee7:	f01d      	retw.n
400d9ee9:	02a122        	movi	a2, 0x102
400d9eec:	f01d      	retw.n
400d9eee:	220000        	orb	b0, b0, b0
400d9ef1:	1d02a1        	l32r	a10, 400a12fc <_iram_end+0x137a8>
400d9ef4:	a122f0        	lsi	f15, a2, 0x284
400d9ef7:	f01d02        	l16ui	a0, a13, 0x1e0
400d9efa:	220000        	orb	b0, b0, b0
400d9efd:	1d01a1        	l32r	a10, 400a1304 <_iram_end+0x137b0>
400d9f00:	020cf0        	andb	b0, b12, b15
400d9f03:	f01d      	retw.n
400d9f05:	000000        	ill

400d9f08 <get_vfs_for_path>:
400d9f08:	006136        	entry	a1, 48
400d9f0b:	20a220        	or	a10, a2, a2
400d9f0e:	d85c81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d9f11:	0008e0        	callx8	a8
400d9f14:	0a6d      	mov.n	a6, a10
400d9f16:	030c      	movi.n	a3, 0
400d9f18:	f47c      	movi.n	a4, -1
400d9f1a:	3149      	s32i.n	a4, a1, 12
400d9f1c:	037d      	mov.n	a7, a3
400d9f1e:	001286        	j	400d9f6c <get_vfs_for_path+0x64>
400d9f21:	d9a341        	l32r	a4, 400d05b0 <_flash_cache_start+0x598>
400d9f24:	a04340        	addx4	a4, a3, a4
400d9f27:	0448      	l32i.n	a4, a4, 0
400d9f29:	d4bc      	beqz.n	a4, 400d9f6a <get_vfs_for_path+0x62>
400d9f2b:	292452        	l32i	a5, a4, 164
400d9f2e:	380526        	beqi	a5, -1, 400d9f6a <get_vfs_for_path+0x62>
400d9f31:	353657        	bltu	a6, a5, 400d9f6a <get_vfs_for_path+0x62>
400d9f34:	20c550        	or	a12, a5, a5
400d9f37:	94a0b2        	movi	a11, 148
400d9f3a:	80b4b0        	add	a11, a4, a11
400d9f3d:	20a220        	or	a10, a2, a2
400d9f40:	d99e81        	l32r	a8, 400d05b8 <_flash_cache_start+0x5a0>
400d9f43:	0008e0        	callx8	a8
400d9f46:	0aec      	bnez.n	a10, 400d9f6a <get_vfs_for_path+0x62>
400d9f48:	05cc      	bnez.n	a5, 400d9f4c <get_vfs_for_path+0x44>
400d9f4a:	379c      	beqz.n	a7, 400d9f61 <get_vfs_for_path+0x59>
400d9f4c:	09b567        	bgeu	a5, a6, 400d9f59 <get_vfs_for_path+0x51>
400d9f4f:	825a      	add.n	a8, a2, a5
400d9f51:	000892        	l8ui	a9, a8, 0
400d9f54:	f82c      	movi.n	a8, 47
400d9f56:	109987        	bne	a9, a8, 400d9f6a <get_vfs_for_path+0x62>
400d9f59:	3188      	l32i.n	a8, a1, 12
400d9f5b:	072857        	blt	a8, a5, 400d9f66 <get_vfs_for_path+0x5e>
400d9f5e:	000206        	j	400d9f6a <get_vfs_for_path+0x62>
400d9f61:	047d      	mov.n	a7, a4
400d9f63:	0000c6        	j	400d9f6a <get_vfs_for_path+0x62>
400d9f66:	3159      	s32i.n	a5, a1, 12
400d9f68:	047d      	mov.n	a7, a4
400d9f6a:	331b      	addi.n	a3, a3, 1
400d9f6c:	f03d      	nop.n
400d9f6e:	f03d      	nop.n
400d9f70:	d98f41        	l32r	a4, 400d05ac <_flash_cache_start+0x594>
400d9f73:	0448      	l32i.n	a4, a4, 0
400d9f75:	a83347        	bltu	a3, a4, 400d9f21 <get_vfs_for_path+0x19>
400d9f78:	072d      	mov.n	a2, a7
400d9f7a:	f01d      	retw.n

400d9f7c <translate_path>:
400d9f7c:	004136        	entry	a1, 32
400d9f7f:	292242        	l32i	a4, a2, 164
400d9f82:	20c440        	or	a12, a4, a4
400d9f85:	94a0b2        	movi	a11, 148
400d9f88:	80b2b0        	add	a11, a2, a11
400d9f8b:	20a330        	or	a10, a3, a3
400d9f8e:	d91481        	l32r	a8, 400d03e0 <_flash_cache_start+0x3c8>
400d9f91:	0008e0        	callx8	a8
400d9f94:	da8c      	beqz.n	a10, 400d9fa5 <translate_path+0x29>
400d9f96:	d98ad1        	l32r	a13, 400d05c0 <_flash_cache_start+0x5a8>
400d9f99:	d98ac1        	l32r	a12, 400d05c4 <_flash_cache_start+0x5ac>
400d9f9c:	1da1b2        	movi	a11, 0x11d
400d9f9f:	d98aa1        	l32r	a10, 400d05c8 <_flash_cache_start+0x5b0>
400d9fa2:	00b2a5        	call8	400daacc <__assert_func>
400d9fa5:	03ad      	mov.n	a10, a3
400d9fa7:	d83681        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d9faa:	0008e0        	callx8	a8
400d9fad:	0314a7        	beq	a4, a10, 400d9fb4 <translate_path+0x38>
400d9fb0:	234a      	add.n	a2, a3, a4
400d9fb2:	f01d      	retw.n
400d9fb4:	d98221        	l32r	a2, 400d05bc <_flash_cache_start+0x5a4>
400d9fb7:	f01d      	retw.n
400d9fb9:	000000        	ill

400d9fbc <esp_vfs_register>:
400d9fbc:	004136        	entry	a1, 32
400d9fbf:	02ad      	mov.n	a10, a2
400d9fc1:	d82f81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400d9fc4:	0008e0        	callx8	a8
400d9fc7:	0e0c      	movi.n	a14, 0
400d9fc9:	04dd      	mov.n	a13, a4
400d9fcb:	03cd      	mov.n	a12, a3
400d9fcd:	0abd      	mov.n	a11, a10
400d9fcf:	02ad      	mov.n	a10, a2
400d9fd1:	ffe3a5        	call8	400d9e0c <esp_vfs_register_common>
400d9fd4:	0a2d      	mov.n	a2, a10
400d9fd6:	f01d      	retw.n

400d9fd8 <esp_vfs_open>:
400d9fd8:	004136        	entry	a1, 32
400d9fdb:	03ad      	mov.n	a10, a3
400d9fdd:	fff2a5        	call8	400d9f08 <get_vfs_for_path>
400d9fe0:	0a6d      	mov.n	a6, a10
400d9fe2:	6acc      	bnez.n	a10, 400d9fec <esp_vfs_open+0x14>
400d9fe4:	230c      	movi.n	a3, 2
400d9fe6:	0239      	s32i.n	a3, a2, 0
400d9fe8:	f27c      	movi.n	a2, -1
400d9fea:	f01d      	retw.n
400d9fec:	20b330        	or	a11, a3, a3
400d9fef:	fff8e5        	call8	400d9f7c <translate_path>
400d9ff2:	042632        	l32i	a3, a6, 16
400d9ff5:	007356        	bnez	a3, 400da000 <esp_vfs_open+0x28>
400d9ff8:	835c      	movi.n	a3, 88
400d9ffa:	0239      	s32i.n	a3, a2, 0
400d9ffc:	f27c      	movi.n	a2, -1
400d9ffe:	f01d      	retw.n
400da000:	0688      	l32i.n	a8, a6, 0
400da002:	106807        	bbci	a8, 0, 400da016 <esp_vfs_open+0x3e>
400da005:	05dd      	mov.n	a13, a5
400da007:	04cd      	mov.n	a12, a4
400da009:	0abd      	mov.n	a11, a10
400da00b:	2a26a2        	l32i	a10, a6, 168
400da00e:	0003e0        	callx8	a3
400da011:	0a4d      	mov.n	a4, a10
400da013:	000206        	j	400da01f <esp_vfs_open+0x47>
400da016:	05cd      	mov.n	a12, a5
400da018:	04bd      	mov.n	a11, a4
400da01a:	0003e0        	callx8	a3
400da01d:	0a4d      	mov.n	a4, a10
400da01f:	08a496        	bltz	a4, 400da0ad <esp_vfs_open+0xd5>
400da022:	d96aa1        	l32r	a10, 400d05cc <_flash_cache_start+0x5b4>
400da025:	aaaa25        	call8	40084ac8 <_lock_acquire>
400da028:	030c      	movi.n	a3, 0
400da02a:	001246        	j	400da077 <esp_vfs_open+0x9f>
400da02d:	908330        	addx2	a8, a3, a3
400da030:	d95e91        	l32r	a9, 400d05a8 <_flash_cache_start+0x590>
400da033:	808980        	add	a8, a9, a8
400da036:	010882        	l8ui	a8, a8, 1
400da039:	238800        	sext	a8, a8, 7
400da03c:	340866        	bnei	a8, -1, 400da074 <esp_vfs_open+0x9c>
400da03f:	902330        	addx2	a2, a3, a3
400da042:	802920        	add	a2, a9, a2
400da045:	00a052        	movi	a5, 0
400da048:	004252        	s8i	a5, a2, 0
400da04b:	0020c0        	memw
400da04e:	f03d      	nop.n
400da050:	f03d      	nop.n
400da052:	f03d      	nop.n
400da054:	f03d      	nop.n
400da056:	2b2652        	l32i	a5, a6, 172
400da059:	014252        	s8i	a5, a2, 1
400da05c:	024242        	s8i	a4, a2, 2
400da05f:	0020c0        	memw
400da062:	f03d      	nop.n
400da064:	f03d      	nop.n
400da066:	f03d      	nop.n
400da068:	f03d      	nop.n
400da06a:	d958a1        	l32r	a10, 400d05cc <_flash_cache_start+0x5b4>
400da06d:	aaa9a5        	call8	40084b08 <_lock_release>
400da070:	032d      	mov.n	a2, a3
400da072:	f01d      	retw.n
400da074:	01c332        	addi	a3, a3, 1
400da077:	3fa082        	movi	a8, 63
400da07a:	afa837        	bge	a8, a3, 400da02d <esp_vfs_open+0x55>
400da07d:	d953a1        	l32r	a10, 400d05cc <_flash_cache_start+0x5b4>
400da080:	aaa865        	call8	40084b08 <_lock_release>
400da083:	052632        	l32i	a3, a6, 20
400da086:	63cc      	bnez.n	a3, 400da090 <esp_vfs_open+0xb8>
400da088:	835c      	movi.n	a3, 88
400da08a:	0239      	s32i.n	a3, a2, 0
400da08c:	f27c      	movi.n	a2, -1
400da08e:	f01d      	retw.n
400da090:	0658      	l32i.n	a5, a6, 0
400da092:	0a6507        	bbci	a5, 0, 400da0a0 <esp_vfs_open+0xc8>
400da095:	04bd      	mov.n	a11, a4
400da097:	2a26a2        	l32i	a10, a6, 168
400da09a:	0003e0        	callx8	a3
400da09d:	000106        	j	400da0a5 <esp_vfs_open+0xcd>
400da0a0:	04ad      	mov.n	a10, a4
400da0a2:	0003e0        	callx8	a3
400da0a5:	c30c      	movi.n	a3, 12
400da0a7:	0239      	s32i.n	a3, a2, 0
400da0a9:	f27c      	movi.n	a2, -1
400da0ab:	f01d      	retw.n
400da0ad:	230c      	movi.n	a3, 2
400da0af:	0239      	s32i.n	a3, a2, 0
400da0b1:	f27c      	movi.n	a2, -1
400da0b3:	f01d      	retw.n
400da0b5:	000000        	ill

400da0b8 <esp_vfs_write>:
400da0b8:	004136        	entry	a1, 32
400da0bb:	03ad      	mov.n	a10, a3
400da0bd:	ffd165        	call8	400d9dd4 <get_vfs_for_fd>
400da0c0:	1a9c      	beqz.n	a10, 400da0d5 <esp_vfs_write+0x1d>
400da0c2:	f83c      	movi.n	a8, 63
400da0c4:	123837        	bltu	a8, a3, 400da0da <esp_vfs_write+0x22>
400da0c7:	903330        	addx2	a3, a3, a3
400da0ca:	d93781        	l32r	a8, 400d05a8 <_flash_cache_start+0x590>
400da0cd:	383a      	add.n	a3, a8, a3
400da0cf:	020392        	l8ui	a9, a3, 2
400da0d2:	000186        	j	400da0dc <esp_vfs_write+0x24>
400da0d5:	f97c      	movi.n	a9, -1
400da0d7:	000046        	j	400da0dc <esp_vfs_write+0x24>
400da0da:	f97c      	movi.n	a9, -1
400da0dc:	080c      	movi.n	a8, 0
400da0de:	130c      	movi.n	a3, 1
400da0e0:	8383a0        	moveqz	a8, a3, a10
400da0e3:	053f90        	extui	a3, a9, 31, 1
400da0e6:	203830        	or	a3, a8, a3
400da0e9:	738c      	beqz.n	a3, 400da0f4 <esp_vfs_write+0x3c>
400da0eb:	930c      	movi.n	a3, 9
400da0ed:	0239      	s32i.n	a3, a2, 0
400da0ef:	f27c      	movi.n	a2, -1
400da0f1:	f01d      	retw.n
400da0f3:	1a3800        	sub.s	f3, f8, f0
400da0f6:	63cc      	bnez.n	a3, 400da100 <esp_vfs_write+0x48>
400da0f8:	835c      	movi.n	a3, 88
400da0fa:	0239      	s32i.n	a3, a2, 0
400da0fc:	f27c      	movi.n	a2, -1
400da0fe:	f01d      	retw.n
400da100:	0a28      	l32i.n	a2, a10, 0
400da102:	0f6207        	bbci	a2, 0, 400da115 <esp_vfs_write+0x5d>
400da105:	05dd      	mov.n	a13, a5
400da107:	04cd      	mov.n	a12, a4
400da109:	09bd      	mov.n	a11, a9
400da10b:	2a2aa2        	l32i	a10, a10, 168
400da10e:	0003e0        	callx8	a3
400da111:	0a2d      	mov.n	a2, a10
400da113:	f01d      	retw.n
400da115:	05cd      	mov.n	a12, a5
400da117:	04bd      	mov.n	a11, a4
400da119:	09ad      	mov.n	a10, a9
400da11b:	0003e0        	callx8	a3
400da11e:	0a2d      	mov.n	a2, a10
400da120:	f01d      	retw.n
	...

400da124 <esp_vfs_lseek>:
400da124:	004136        	entry	a1, 32
400da127:	03ad      	mov.n	a10, a3
400da129:	ffcaa5        	call8	400d9dd4 <get_vfs_for_fd>
400da12c:	1a9c      	beqz.n	a10, 400da141 <esp_vfs_lseek+0x1d>
400da12e:	f83c      	movi.n	a8, 63
400da130:	123837        	bltu	a8, a3, 400da146 <esp_vfs_lseek+0x22>
400da133:	903330        	addx2	a3, a3, a3
400da136:	d91c81        	l32r	a8, 400d05a8 <_flash_cache_start+0x590>
400da139:	383a      	add.n	a3, a8, a3
400da13b:	020392        	l8ui	a9, a3, 2
400da13e:	000186        	j	400da148 <esp_vfs_lseek+0x24>
400da141:	f97c      	movi.n	a9, -1
400da143:	000046        	j	400da148 <esp_vfs_lseek+0x24>
400da146:	f97c      	movi.n	a9, -1
400da148:	080c      	movi.n	a8, 0
400da14a:	130c      	movi.n	a3, 1
400da14c:	8383a0        	moveqz	a8, a3, a10
400da14f:	053f90        	extui	a3, a9, 31, 1
400da152:	203830        	or	a3, a8, a3
400da155:	738c      	beqz.n	a3, 400da160 <esp_vfs_lseek+0x3c>
400da157:	930c      	movi.n	a3, 9
400da159:	0239      	s32i.n	a3, a2, 0
400da15b:	f27c      	movi.n	a2, -1
400da15d:	f01d      	retw.n
400da15f:	2a3800        	mul.s	f3, f8, f0
400da162:	63cc      	bnez.n	a3, 400da16c <esp_vfs_lseek+0x48>
400da164:	835c      	movi.n	a3, 88
400da166:	0239      	s32i.n	a3, a2, 0
400da168:	f27c      	movi.n	a2, -1
400da16a:	f01d      	retw.n
400da16c:	0a28      	l32i.n	a2, a10, 0
400da16e:	0f6207        	bbci	a2, 0, 400da181 <esp_vfs_lseek+0x5d>
400da171:	05dd      	mov.n	a13, a5
400da173:	04cd      	mov.n	a12, a4
400da175:	09bd      	mov.n	a11, a9
400da177:	2a2aa2        	l32i	a10, a10, 168
400da17a:	0003e0        	callx8	a3
400da17d:	0a2d      	mov.n	a2, a10
400da17f:	f01d      	retw.n
400da181:	05cd      	mov.n	a12, a5
400da183:	04bd      	mov.n	a11, a4
400da185:	09ad      	mov.n	a10, a9
400da187:	0003e0        	callx8	a3
400da18a:	0a2d      	mov.n	a2, a10
400da18c:	f01d      	retw.n
	...

400da190 <esp_vfs_read>:
400da190:	004136        	entry	a1, 32
400da193:	03ad      	mov.n	a10, a3
400da195:	ffc3e5        	call8	400d9dd4 <get_vfs_for_fd>
400da198:	1a9c      	beqz.n	a10, 400da1ad <esp_vfs_read+0x1d>
400da19a:	f83c      	movi.n	a8, 63
400da19c:	123837        	bltu	a8, a3, 400da1b2 <esp_vfs_read+0x22>
400da19f:	903330        	addx2	a3, a3, a3
400da1a2:	d90181        	l32r	a8, 400d05a8 <_flash_cache_start+0x590>
400da1a5:	383a      	add.n	a3, a8, a3
400da1a7:	020392        	l8ui	a9, a3, 2
400da1aa:	000186        	j	400da1b4 <esp_vfs_read+0x24>
400da1ad:	f97c      	movi.n	a9, -1
400da1af:	000046        	j	400da1b4 <esp_vfs_read+0x24>
400da1b2:	f97c      	movi.n	a9, -1
400da1b4:	080c      	movi.n	a8, 0
400da1b6:	130c      	movi.n	a3, 1
400da1b8:	8383a0        	moveqz	a8, a3, a10
400da1bb:	053f90        	extui	a3, a9, 31, 1
400da1be:	203830        	or	a3, a8, a3
400da1c1:	738c      	beqz.n	a3, 400da1cc <esp_vfs_read+0x3c>
400da1c3:	930c      	movi.n	a3, 9
400da1c5:	0239      	s32i.n	a3, a2, 0
400da1c7:	f27c      	movi.n	a2, -1
400da1c9:	f01d      	retw.n
400da1cb:	3a3800        	lsi	f0, a8, 232
400da1ce:	63cc      	bnez.n	a3, 400da1d8 <esp_vfs_read+0x48>
400da1d0:	835c      	movi.n	a3, 88
400da1d2:	0239      	s32i.n	a3, a2, 0
400da1d4:	f27c      	movi.n	a2, -1
400da1d6:	f01d      	retw.n
400da1d8:	0a28      	l32i.n	a2, a10, 0
400da1da:	0f6207        	bbci	a2, 0, 400da1ed <esp_vfs_read+0x5d>
400da1dd:	05dd      	mov.n	a13, a5
400da1df:	04cd      	mov.n	a12, a4
400da1e1:	09bd      	mov.n	a11, a9
400da1e3:	2a2aa2        	l32i	a10, a10, 168
400da1e6:	0003e0        	callx8	a3
400da1e9:	0a2d      	mov.n	a2, a10
400da1eb:	f01d      	retw.n
400da1ed:	05cd      	mov.n	a12, a5
400da1ef:	04bd      	mov.n	a11, a4
400da1f1:	09ad      	mov.n	a10, a9
400da1f3:	0003e0        	callx8	a3
400da1f6:	0a2d      	mov.n	a2, a10
400da1f8:	f01d      	retw.n
	...

400da1fc <esp_vfs_close>:
400da1fc:	004136        	entry	a1, 32
400da1ff:	03ad      	mov.n	a10, a3
400da201:	ffbd25        	call8	400d9dd4 <get_vfs_for_fd>
400da204:	1a9c      	beqz.n	a10, 400da219 <esp_vfs_close+0x1d>
400da206:	f83c      	movi.n	a8, 63
400da208:	123837        	bltu	a8, a3, 400da21e <esp_vfs_close+0x22>
400da20b:	908330        	addx2	a8, a3, a3
400da20e:	d8e691        	l32r	a9, 400d05a8 <_flash_cache_start+0x590>
400da211:	898a      	add.n	a8, a9, a8
400da213:	0208b2        	l8ui	a11, a8, 2
400da216:	000186        	j	400da220 <esp_vfs_close+0x24>
400da219:	fb7c      	movi.n	a11, -1
400da21b:	000046        	j	400da220 <esp_vfs_close+0x24>
400da21e:	fb7c      	movi.n	a11, -1
400da220:	090c      	movi.n	a9, 0
400da222:	180c      	movi.n	a8, 1
400da224:	8398a0        	moveqz	a9, a8, a10
400da227:	058fb0        	extui	a8, a11, 31, 1
400da22a:	208980        	or	a8, a9, a8
400da22d:	788c      	beqz.n	a8, 400da238 <esp_vfs_close+0x3c>
400da22f:	930c      	movi.n	a3, 9
400da231:	0239      	s32i.n	a3, a2, 0
400da233:	f27c      	movi.n	a2, -1
400da235:	f01d      	retw.n
400da237:	5a8800        	msub.s	f8, f8, f0
400da23a:	78cc      	bnez.n	a8, 400da245 <esp_vfs_close+0x49>
400da23c:	835c      	movi.n	a3, 88
400da23e:	0239      	s32i.n	a3, a2, 0
400da240:	f27c      	movi.n	a2, -1
400da242:	f01d      	retw.n
400da244:	0a2800        	add.s	f2, f8, f0
400da247:	0a6207        	bbci	a2, 0, 400da255 <esp_vfs_close+0x59>
400da24a:	2a2aa2        	l32i	a10, a10, 168
400da24d:	0008e0        	callx8	a8
400da250:	0a2d      	mov.n	a2, a10
400da252:	000206        	j	400da25e <esp_vfs_close+0x62>
400da255:	20abb0        	or	a10, a11, a11
400da258:	0008e0        	callx8	a8
400da25b:	202aa0        	or	a2, a10, a10
400da25e:	d8dba1        	l32r	a10, 400d05cc <_flash_cache_start+0x5b4>
400da261:	aa8665        	call8	40084ac8 <_lock_acquire>
400da264:	908330        	addx2	a8, a3, a3
400da267:	d8d091        	l32r	a9, 400d05a8 <_flash_cache_start+0x590>
400da26a:	808980        	add	a8, a9, a8
400da26d:	000882        	l8ui	a8, a8, 0
400da270:	68ec      	bnez.n	a8, 400da29a <esp_vfs_close+0x9e>
400da272:	903330        	addx2	a3, a3, a3
400da275:	393a      	add.n	a3, a9, a3
400da277:	d8d681        	l32r	a8, 400d05d0 <_flash_cache_start+0x5b8>
400da27a:	0008a2        	l8ui	a10, a8, 0
400da27d:	010892        	l8ui	a9, a8, 1
400da280:	0043a2        	s8i	a10, a3, 0
400da283:	0020c0        	memw
400da286:	f03d      	nop.n
400da288:	f03d      	nop.n
400da28a:	f03d      	nop.n
400da28c:	f03d      	nop.n
400da28e:	020882        	l8ui	a8, a8, 2
400da291:	014392        	s8i	a9, a3, 1
400da294:	024382        	s8i	a8, a3, 2
400da297:	0020c0        	memw
400da29a:	f03d      	nop.n
400da29c:	f03d      	nop.n
400da29e:	f03d      	nop.n
400da2a0:	0020f0        	nop
400da2a3:	d8caa1        	l32r	a10, 400d05cc <_flash_cache_start+0x5b4>
400da2a6:	aa8625        	call8	40084b08 <_lock_release>
400da2a9:	f01d      	retw.n
	...

400da2ac <esp_vfs_fstat>:
400da2ac:	004136        	entry	a1, 32
400da2af:	03ad      	mov.n	a10, a3
400da2b1:	ffb225        	call8	400d9dd4 <get_vfs_for_fd>
400da2b4:	1a9c      	beqz.n	a10, 400da2c9 <esp_vfs_fstat+0x1d>
400da2b6:	f83c      	movi.n	a8, 63
400da2b8:	123837        	bltu	a8, a3, 400da2ce <esp_vfs_fstat+0x22>
400da2bb:	903330        	addx2	a3, a3, a3
400da2be:	d8ba81        	l32r	a8, 400d05a8 <_flash_cache_start+0x590>
400da2c1:	383a      	add.n	a3, a8, a3
400da2c3:	020392        	l8ui	a9, a3, 2
400da2c6:	000186        	j	400da2d0 <esp_vfs_fstat+0x24>
400da2c9:	f97c      	movi.n	a9, -1
400da2cb:	000046        	j	400da2d0 <esp_vfs_fstat+0x24>
400da2ce:	f97c      	movi.n	a9, -1
400da2d0:	080c      	movi.n	a8, 0
400da2d2:	130c      	movi.n	a3, 1
400da2d4:	8383a0        	moveqz	a8, a3, a10
400da2d7:	053f90        	extui	a3, a9, 31, 1
400da2da:	203830        	or	a3, a8, a3
400da2dd:	738c      	beqz.n	a3, 400da2e8 <esp_vfs_fstat+0x3c>
400da2df:	930c      	movi.n	a3, 9
400da2e1:	0239      	s32i.n	a3, a2, 0
400da2e3:	f27c      	movi.n	a2, -1
400da2e5:	f01d      	retw.n
400da2e7:	6a3800        	maddn.s	f3, f8, f0
400da2ea:	73cc      	bnez.n	a3, 400da2f5 <esp_vfs_fstat+0x49>
400da2ec:	835c      	movi.n	a3, 88
400da2ee:	0239      	s32i.n	a3, a2, 0
400da2f0:	f27c      	movi.n	a2, -1
400da2f2:	f01d      	retw.n
400da2f4:	0a2800        	add.s	f2, f8, f0
400da2f7:	0e6207        	bbci	a2, 0, 400da309 <esp_vfs_fstat+0x5d>
400da2fa:	04cd      	mov.n	a12, a4
400da2fc:	09bd      	mov.n	a11, a9
400da2fe:	2a2aa2        	l32i	a10, a10, 168
400da301:	0003e0        	callx8	a3
400da304:	0a2d      	mov.n	a2, a10
400da306:	f01d      	retw.n
400da308:	04bd00        	extui	a11, a0, 13, 1
400da30b:	09ad      	mov.n	a10, a9
400da30d:	0003e0        	callx8	a3
400da310:	0a2d      	mov.n	a2, a10
400da312:	f01d      	retw.n

400da314 <esp_vfs_stat>:
400da314:	004136        	entry	a1, 32
400da317:	03ad      	mov.n	a10, a3
400da319:	ffbee5        	call8	400d9f08 <get_vfs_for_path>
400da31c:	0a5d      	mov.n	a5, a10
400da31e:	6acc      	bnez.n	a10, 400da328 <esp_vfs_stat+0x14>
400da320:	230c      	movi.n	a3, 2
400da322:	0239      	s32i.n	a3, a2, 0
400da324:	f27c      	movi.n	a2, -1
400da326:	f01d      	retw.n
400da328:	20b330        	or	a11, a3, a3
400da32b:	ffc525        	call8	400d9f7c <translate_path>
400da32e:	072532        	l32i	a3, a5, 28
400da331:	008356        	bnez	a3, 400da33d <esp_vfs_stat+0x29>
400da334:	835c      	movi.n	a3, 88
400da336:	0239      	s32i.n	a3, a2, 0
400da338:	f27c      	movi.n	a2, -1
400da33a:	f01d      	retw.n
400da33c:	052800        	extui	a2, a0, 24, 1
400da33f:	0d6207        	bbci	a2, 0, 400da350 <esp_vfs_stat+0x3c>
400da342:	04cd      	mov.n	a12, a4
400da344:	0abd      	mov.n	a11, a10
400da346:	2a25a2        	l32i	a10, a5, 168
400da349:	0003e0        	callx8	a3
400da34c:	0a2d      	mov.n	a2, a10
400da34e:	f01d      	retw.n
400da350:	04bd      	mov.n	a11, a4
400da352:	0003e0        	callx8	a3
400da355:	0a2d      	mov.n	a2, a10
400da357:	f01d      	retw.n
400da359:	000000        	ill

400da35c <esp_vfs_link>:
400da35c:	004136        	entry	a1, 32
400da35f:	03ad      	mov.n	a10, a3
400da361:	ffba65        	call8	400d9f08 <get_vfs_for_path>
400da364:	0a5d      	mov.n	a5, a10
400da366:	6acc      	bnez.n	a10, 400da370 <esp_vfs_link+0x14>
400da368:	230c      	movi.n	a3, 2
400da36a:	0239      	s32i.n	a3, a2, 0
400da36c:	f27c      	movi.n	a2, -1
400da36e:	f01d      	retw.n
400da370:	20a440        	or	a10, a4, a4
400da373:	ffb965        	call8	400d9f08 <get_vfs_for_path>
400da376:	0a15a7        	beq	a5, a10, 400da384 <esp_vfs_link+0x28>
400da379:	12a032        	movi	a3, 18
400da37c:	006232        	s32i	a3, a2, 0
400da37f:	f27c      	movi.n	a2, -1
400da381:	f01d      	retw.n
400da383:	b33000        	movgez	a3, a0, a0
400da386:	a55020        	extui	a5, a2, 16, 11
400da389:	bf2520        	f64cmph	a2, a5, a2, 11
400da38c:	ff          	.byte 0xff
400da38d:	0a6d      	mov.n	a6, a10
400da38f:	04bd      	mov.n	a11, a4
400da391:	05ad      	mov.n	a10, a5
400da393:	ffbea5        	call8	400d9f7c <translate_path>
400da396:	8538      	l32i.n	a3, a5, 32
400da398:	63cc      	bnez.n	a3, 400da3a2 <esp_vfs_link+0x46>
400da39a:	835c      	movi.n	a3, 88
400da39c:	0239      	s32i.n	a3, a2, 0
400da39e:	f27c      	movi.n	a2, -1
400da3a0:	f01d      	retw.n
400da3a2:	0528      	l32i.n	a2, a5, 0
400da3a4:	0d6207        	bbci	a2, 0, 400da3b5 <esp_vfs_link+0x59>
400da3a7:	0acd      	mov.n	a12, a10
400da3a9:	06bd      	mov.n	a11, a6
400da3ab:	2a25a2        	l32i	a10, a5, 168
400da3ae:	0003e0        	callx8	a3
400da3b1:	0a2d      	mov.n	a2, a10
400da3b3:	f01d      	retw.n
400da3b5:	0abd      	mov.n	a11, a10
400da3b7:	06ad      	mov.n	a10, a6
400da3b9:	0003e0        	callx8	a3
400da3bc:	0a2d      	mov.n	a2, a10
400da3be:	f01d      	retw.n

400da3c0 <esp_vfs_unlink>:
400da3c0:	004136        	entry	a1, 32
400da3c3:	03ad      	mov.n	a10, a3
400da3c5:	ffb425        	call8	400d9f08 <get_vfs_for_path>
400da3c8:	0a4d      	mov.n	a4, a10
400da3ca:	6acc      	bnez.n	a10, 400da3d4 <esp_vfs_unlink+0x14>
400da3cc:	230c      	movi.n	a3, 2
400da3ce:	0239      	s32i.n	a3, a2, 0
400da3d0:	f27c      	movi.n	a2, -1
400da3d2:	f01d      	retw.n
400da3d4:	20b330        	or	a11, a3, a3
400da3d7:	ffba65        	call8	400d9f7c <translate_path>
400da3da:	092432        	l32i	a3, a4, 36
400da3dd:	007356        	bnez	a3, 400da3e8 <esp_vfs_unlink+0x28>
400da3e0:	835c      	movi.n	a3, 88
400da3e2:	0239      	s32i.n	a3, a2, 0
400da3e4:	f27c      	movi.n	a2, -1
400da3e6:	f01d      	retw.n
400da3e8:	0428      	l32i.n	a2, a4, 0
400da3ea:	0b6207        	bbci	a2, 0, 400da3f9 <esp_vfs_unlink+0x39>
400da3ed:	0abd      	mov.n	a11, a10
400da3ef:	2a24a2        	l32i	a10, a4, 168
400da3f2:	0003e0        	callx8	a3
400da3f5:	0a2d      	mov.n	a2, a10
400da3f7:	f01d      	retw.n
400da3f9:	0003e0        	callx8	a3
400da3fc:	0a2d      	mov.n	a2, a10
400da3fe:	f01d      	retw.n

400da400 <esp_vfs_rename>:
400da400:	004136        	entry	a1, 32
400da403:	03ad      	mov.n	a10, a3
400da405:	ffb025        	call8	400d9f08 <get_vfs_for_path>
400da408:	0a5d      	mov.n	a5, a10
400da40a:	6acc      	bnez.n	a10, 400da414 <esp_vfs_rename+0x14>
400da40c:	230c      	movi.n	a3, 2
400da40e:	0239      	s32i.n	a3, a2, 0
400da410:	f27c      	movi.n	a2, -1
400da412:	f01d      	retw.n
400da414:	20a440        	or	a10, a4, a4
400da417:	ffaf25        	call8	400d9f08 <get_vfs_for_path>
400da41a:	0a15a7        	beq	a5, a10, 400da428 <esp_vfs_rename+0x28>
400da41d:	12a032        	movi	a3, 18
400da420:	006232        	s32i	a3, a2, 0
400da423:	f27c      	movi.n	a2, -1
400da425:	f01d      	retw.n
400da427:	b33000        	movgez	a3, a0, a0
400da42a:	a55020        	extui	a5, a2, 16, 11
400da42d:	b4e520        	extui	a14, a2, 5, 12
400da430:	ff          	.byte 0xff
400da431:	0a6d      	mov.n	a6, a10
400da433:	04bd      	mov.n	a11, a4
400da435:	05ad      	mov.n	a10, a5
400da437:	ffb465        	call8	400d9f7c <translate_path>
400da43a:	a538      	l32i.n	a3, a5, 40
400da43c:	63cc      	bnez.n	a3, 400da446 <esp_vfs_rename+0x46>
400da43e:	835c      	movi.n	a3, 88
400da440:	0239      	s32i.n	a3, a2, 0
400da442:	f27c      	movi.n	a2, -1
400da444:	f01d      	retw.n
400da446:	0528      	l32i.n	a2, a5, 0
400da448:	0d6207        	bbci	a2, 0, 400da459 <esp_vfs_rename+0x59>
400da44b:	0acd      	mov.n	a12, a10
400da44d:	06bd      	mov.n	a11, a6
400da44f:	2a25a2        	l32i	a10, a5, 168
400da452:	0003e0        	callx8	a3
400da455:	0a2d      	mov.n	a2, a10
400da457:	f01d      	retw.n
400da459:	0abd      	mov.n	a11, a10
400da45b:	06ad      	mov.n	a10, a6
400da45d:	0003e0        	callx8	a3
400da460:	0a2d      	mov.n	a2, a10
400da462:	f01d      	retw.n

400da464 <esp_vfs_select_triggered>:
400da464:	004136        	entry	a1, 32
400da467:	02a216        	beqz	a2, 400da495 <esp_vfs_select_triggered+0x31>
400da46a:	0022a2        	l32i	a10, a2, 0
400da46d:	029a16        	beqz	a10, 400da49a <esp_vfs_select_triggered+0x36>
400da470:	0d0c      	movi.n	a13, 0
400da472:	0dcd      	mov.n	a12, a13
400da474:	0dbd      	mov.n	a11, a13
400da476:	ad36e5        	call8	400877e4 <xQueueGenericSend>
400da479:	f01d      	retw.n
400da47b:	4d9100        	lsi	f0, a1, 0x134
400da47e:	90d8      	l32i.n	a13, a0, 36
400da480:	a098      	l32i.n	a9, a0, 40
400da482:	0998      	l32i.n	a9, a9, 0
400da484:	898c      	beqz.n	a9, 400da490 <esp_vfs_select_triggered+0x2c>
400da486:	212992        	l32i	a9, a9, 132
400da489:	398c      	beqz.n	a9, 400da490 <esp_vfs_select_triggered+0x2c>
400da48b:	0009e0        	callx8	a9
400da48e:	f01d      	retw.n
400da490:	881b      	addi.n	a8, a8, 1
400da492:	000186        	j	400da49c <esp_vfs_select_triggered+0x38>
400da495:	080c      	movi.n	a8, 0
400da497:	000046        	j	400da49c <esp_vfs_select_triggered+0x38>
400da49a:	080c      	movi.n	a8, 0
400da49c:	d84491        	l32r	a9, 400d05ac <_flash_cache_start+0x594>
400da49f:	0998      	l32i.n	a9, a9, 0
400da4a1:	d73897        	bltu	a8, a9, 400da47c <esp_vfs_select_triggered+0x18>
400da4a4:	f01d      	retw.n
	...

400da4a8 <esp_vfs_select_triggered_isr>:
400da4a8:	004136        	entry	a1, 32
400da4ab:	028216        	beqz	a2, 400da4d7 <esp_vfs_select_triggered_isr+0x2f>
400da4ae:	0022a2        	l32i	a10, a2, 0
400da4b1:	027a16        	beqz	a10, 400da4dc <esp_vfs_select_triggered_isr+0x34>
400da4b4:	03bd      	mov.n	a11, a3
400da4b6:	ad5ee5        	call8	40087aa4 <xQueueGiveFromISR>
400da4b9:	f01d      	retw.n
400da4bb:	3d9100        	lsi	f0, a1, 244
400da4be:	90d8      	l32i.n	a13, a0, 36
400da4c0:	a098      	l32i.n	a9, a0, 40
400da4c2:	0998      	l32i.n	a9, a9, 0
400da4c4:	a98c      	beqz.n	a9, 400da4d2 <esp_vfs_select_triggered_isr+0x2a>
400da4c6:	222992        	l32i	a9, a9, 136
400da4c9:	598c      	beqz.n	a9, 400da4d2 <esp_vfs_select_triggered_isr+0x2a>
400da4cb:	03ad      	mov.n	a10, a3
400da4cd:	0009e0        	callx8	a9
400da4d0:	f01d      	retw.n
400da4d2:	881b      	addi.n	a8, a8, 1
400da4d4:	000186        	j	400da4de <esp_vfs_select_triggered_isr+0x36>
400da4d7:	080c      	movi.n	a8, 0
400da4d9:	000046        	j	400da4de <esp_vfs_select_triggered_isr+0x36>
400da4dc:	080c      	movi.n	a8, 0
400da4de:	d83391        	l32r	a9, 400d05ac <_flash_cache_start+0x594>
400da4e1:	0998      	l32i.n	a9, a9, 0
400da4e3:	d53897        	bltu	a8, a9, 400da4bc <esp_vfs_select_triggered_isr+0x14>
400da4e6:	f01d      	retw.n

400da4e8 <heap_bubble_down>:
400da4e8:	006136        	entry	a1, 48
400da4eb:	001186        	j	400da535 <heap_bubble_down+0x4d>
400da4ee:	000000        	ill
400da4f1:	1192f0        	slli	a9, a2, 1
400da4f4:	b91b      	addi.n	a11, a9, 1
400da4f6:	992b      	addi.n	a9, a9, 2
400da4f8:	d83781        	l32r	a8, 400d05d4 <_flash_cache_start+0x5bc>
400da4fb:	b0ab80        	addx8	a10, a11, a8
400da4fe:	1aa8      	l32i.n	a10, a10, 4
400da500:	41a3a0        	srli	a10, a10, 3
400da503:	b08980        	addx8	a8, a9, a8
400da506:	1888      	l32i.n	a8, a8, 4
400da508:	418380        	srli	a8, a8, 3
400da50b:	01aa87        	bge	a10, a8, 400da510 <heap_bubble_down+0x28>
400da50e:	0b9d      	mov.n	a9, a11
400da510:	d83181        	l32r	a8, 400d05d4 <_flash_cache_start+0x5bc>
400da513:	b02280        	addx8	a2, a2, a8
400da516:	02b8      	l32i.n	a11, a2, 0
400da518:	12a8      	l32i.n	a10, a2, 4
400da51a:	21b9      	s32i.n	a11, a1, 8
400da51c:	31a9      	s32i.n	a10, a1, 12
400da51e:	b08980        	addx8	a8, a9, a8
400da521:	f03d      	nop.n
400da523:	f03d      	nop.n
400da525:	f03d      	nop.n
400da527:	08d8      	l32i.n	a13, a8, 0
400da529:	18c8      	l32i.n	a12, a8, 4
400da52b:	02d9      	s32i.n	a13, a2, 0
400da52d:	12c9      	s32i.n	a12, a2, 4
400da52f:	08b9      	s32i.n	a11, a8, 0
400da531:	18a9      	s32i.n	a10, a8, 4
400da533:	092d      	mov.n	a2, a9
400da535:	e80c      	movi.n	a8, 14
400da537:	b6a827        	bge	a8, a2, 400da4f1 <heap_bubble_down+0x9>
400da53a:	f01d      	retw.n

400da53c <esp_log_level_set>:
400da53c:	004136        	entry	a1, 32
400da53f:	d82641        	l32r	a4, 400d05d8 <_flash_cache_start+0x5c0>
400da542:	0448      	l32i.n	a4, a4, 0
400da544:	94cc      	bnez.n	a4, 400da551 <esp_log_level_set+0x15>
400da546:	01a0a2        	movi	a10, 1
400da549:	ad4225        	call8	4008796c <xQueueCreateMutex>
400da54c:	d82341        	l32r	a4, 400d05d8 <_flash_cache_start+0x5c0>
400da54f:	04a9      	s32i.n	a10, a4, 0
400da551:	0d0c      	movi.n	a13, 0
400da553:	fc7c      	movi.n	a12, -1
400da555:	0dbd      	mov.n	a11, a13
400da557:	f03d      	nop.n
400da559:	d81f41        	l32r	a4, 400d05d8 <_flash_cache_start+0x5c0>
400da55c:	04a8      	l32i.n	a10, a4, 0
400da55e:	ad6065        	call8	40087b64 <xQueueGenericReceive>
400da561:	d81eb1        	l32r	a11, 400d05dc <_flash_cache_start+0x5c4>
400da564:	02ad      	mov.n	a10, a2
400da566:	d79a81        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400da569:	0008e0        	callx8	a8
400da56c:	048a56        	bnez	a10, 400da5b8 <esp_log_level_set+0x7c>
400da56f:	d81c21        	l32r	a2, 400d05e0 <_flash_cache_start+0x5c8>
400da572:	0239      	s32i.n	a3, a2, 0
400da574:	000246        	j	400da581 <esp_log_level_set+0x45>
400da577:	223200        	orb	b3, b2, b0
400da57a:	1a2100        	sub.s	f2, f1, f0
400da57d:	32d8      	l32i.n	a13, a2, 12
400da57f:	3d0062        	l8ui	a6, a0, 61
400da582:	f03df0        	subx8	a3, a13, a15
400da585:	f03d      	nop.n
400da587:	f03d      	nop.n
400da589:	d81621        	l32r	a2, 400d05e4 <_flash_cache_start+0x5cc>
400da58c:	002222        	l32i	a2, a2, 0
400da58f:	fe5256        	bnez	a2, 400da578 <esp_log_level_set+0x3c>
400da592:	0b0c      	movi.n	a11, 0
400da594:	d81521        	l32r	a2, 400d05e8 <_flash_cache_start+0x5d0>
400da597:	02b9      	s32i.n	a11, a2, 0
400da599:	f03d      	nop.n
400da59b:	f03d      	nop.n
400da59d:	f03d      	nop.n
400da59f:	f03d      	nop.n
400da5a1:	d81221        	l32r	a2, 400d05ec <_flash_cache_start+0x5d4>
400da5a4:	02b9      	s32i.n	a11, a2, 0
400da5a6:	0bdd      	mov.n	a13, a11
400da5a8:	0bcd      	mov.n	a12, a11
400da5aa:	f03d      	nop.n
400da5ac:	f03d      	nop.n
400da5ae:	d80a21        	l32r	a2, 400d05d8 <_flash_cache_start+0x5c0>
400da5b1:	02a8      	l32i.n	a10, a2, 0
400da5b3:	ad2325        	call8	400877e4 <xQueueGenericSend>
400da5b6:	f01d      	retw.n
400da5b8:	d80b41        	l32r	a4, 400d05e4 <_flash_cache_start+0x5cc>
400da5bb:	0458      	l32i.n	a5, a4, 0
400da5bd:	054d      	mov.n	a4, a5
400da5bf:	000646        	j	400da5dc <esp_log_level_set+0xa0>
400da5c2:	02bd      	mov.n	a11, a2
400da5c4:	a45b      	addi.n	a10, a4, 5
400da5c6:	d78281        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400da5c9:	0008e0        	callx8	a8
400da5cc:	9acc      	bnez.n	a10, 400da5d9 <esp_log_level_set+0x9d>
400da5ce:	044432        	s8i	a3, a4, 4
400da5d1:	0020c0        	memw
400da5d4:	0001c6        	j	400da5df <esp_log_level_set+0xa3>
400da5d7:	420000        	xorb	b0, b0, b0
400da5da:	560024        	lsi	f2, a0, 0x158
400da5dd:	56fe24        	lsi	f2, a14, 0x158
400da5e0:	200454        	lsi	f5, a4, 128
400da5e3:	8120a2        	l32i	a10, a0, 0x204
400da5e6:	e0d6a6        	blti	a6, 64, 400da5ca <esp_log_level_set+0x8e>
400da5e9:	0008      	l32i.n	a0, a0, 0
400da5eb:	06caa2        	addi	a10, a10, 6
400da5ee:	d6bd81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400da5f1:	0008e0        	callx8	a8
400da5f4:	0a4d      	mov.n	a4, a10
400da5f6:	facc      	bnez.n	a10, 400da609 <esp_log_level_set+0xcd>
400da5f8:	0d0c      	movi.n	a13, 0
400da5fa:	0dcd      	mov.n	a12, a13
400da5fc:	0dbd      	mov.n	a11, a13
400da5fe:	d7f621        	l32r	a2, 400d05d8 <_flash_cache_start+0x5c0>
400da601:	02a8      	l32i.n	a10, a2, 0
400da603:	ad1e25        	call8	400877e4 <xQueueGenericSend>
400da606:	f01d      	retw.n
400da608:	4a3200        	madd.s	f3, f2, f0
400da60b:	20c004        	lsi	f0, a0, 128
400da60e:	02bd00        	andb	b11, b13, b0
400da611:	aa5b      	addi.n	a10, a10, 5
400da613:	d7e881        	l32r	a8, 400d05b4 <_flash_cache_start+0x59c>
400da616:	0008e0        	callx8	a8
400da619:	0459      	s32i.n	a5, a4, 0
400da61b:	f03d      	nop.n
400da61d:	f03d      	nop.n
400da61f:	f03d      	nop.n
400da621:	f03d      	nop.n
400da623:	d7f051        	l32r	a5, 400d05e4 <_flash_cache_start+0x5cc>
400da626:	0549      	s32i.n	a4, a5, 0
400da628:	040c      	movi.n	a4, 0
400da62a:	000b86        	j	400da65c <esp_log_level_set+0x120>
400da62d:	d7e981        	l32r	a8, 400d05d4 <_flash_cache_start+0x5bc>
400da630:	b08480        	addx8	a8, a4, a8
400da633:	02bd      	mov.n	a11, a2
400da635:	08a8      	l32i.n	a10, a8, 0
400da637:	d76681        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400da63a:	0008e0        	callx8	a8
400da63d:	8adc      	bnez.n	a10, 400da659 <esp_log_level_set+0x11d>
400da63f:	d7e521        	l32r	a2, 400d05d4 <_flash_cache_start+0x5bc>
400da642:	b04420        	addx8	a4, a4, a2
400da645:	243030        	extui	a3, a3, 0, 3
400da648:	1458      	l32i.n	a5, a4, 4
400da64a:	827c      	movi.n	a2, -8
400da64c:	102520        	and	a2, a5, a2
400da64f:	203230        	or	a3, a2, a3
400da652:	1439      	s32i.n	a3, a4, 4
400da654:	000346        	j	400da665 <esp_log_level_set+0x129>
400da657:	420000        	xorb	b0, b0, b0
400da65a:	8101c4        	lsi	f12, a1, 0x204
400da65d:	82d7e3        	lsi	f14, a7, 0x208
400da660:	0028      	l32i.n	a2, a0, 0
400da662:	c73487        	bltu	a4, a8, 400da62d <esp_log_level_set+0xf1>
400da665:	00a0d2        	movi	a13, 0
400da668:	0dcd      	mov.n	a12, a13
400da66a:	0dbd      	mov.n	a11, a13
400da66c:	d7db21        	l32r	a2, 400d05d8 <_flash_cache_start+0x5c0>
400da66f:	02a8      	l32i.n	a10, a2, 0
400da671:	ad1725        	call8	400877e4 <xQueueGenericSend>
400da674:	f01d      	retw.n
	...

400da678 <register_heap>:
400da678:	004136        	entry	a1, 32
400da67b:	0422b2        	l32i	a11, a2, 16
400da67e:	0322a2        	l32i	a10, a2, 12
400da681:	c0bba0        	sub	a11, a11, a10
400da684:	d7db81        	l32r	a8, 400d05f0 <_flash_cache_start+0x5d8>
400da687:	0eb8b7        	bgeu	a8, a11, 400da699 <register_heap+0x21>
400da68a:	d7dad1        	l32r	a13, 400d05f4 <_flash_cache_start+0x5dc>
400da68d:	d7dac1        	l32r	a12, 400d05f8 <_flash_cache_start+0x5e0>
400da690:	23a0b2        	movi	a11, 35
400da693:	d7daa1        	l32r	a10, 400d05fc <_flash_cache_start+0x5e4>
400da696:	004365        	call8	400daacc <__assert_func>
400da699:	b08265        	call8	4008aec0 <multi_heap_register>
400da69c:	72a9      	s32i.n	a10, a2, 28
400da69e:	f01d      	retw.n

400da6a0 <heap_caps_enable_nonos_stack_heaps>:
400da6a0:	004136        	entry	a1, 32
400da6a3:	d7d721        	l32r	a2, 400d0600 <_flash_cache_start+0x5e8>
400da6a6:	0228      	l32i.n	a2, a2, 0
400da6a8:	0005c6        	j	400da6c3 <heap_caps_enable_nonos_stack_heaps+0x23>
400da6ab:	228200        	orb	b8, b2, b0
400da6ae:	e85607        	bbc	a6, a0, 400da69a <register_heap+0x22>
400da6b1:	02ad00        	andb	b10, b13, b0
400da6b4:	fffc25        	call8	400da678 <register_heap>
400da6b7:	72a8      	l32i.n	a10, a2, 28
400da6b9:	4a8c      	beqz.n	a10, 400da6c1 <heap_caps_enable_nonos_stack_heaps+0x21>
400da6bb:	14c2b2        	addi	a11, a2, 20
400da6be:	b05ee5        	call8	4008acac <multi_heap_set_lock>
400da6c1:	8228      	l32i.n	a2, a2, 32
400da6c3:	fe5256        	bnez	a2, 400da6ac <heap_caps_enable_nonos_stack_heaps+0xc>
400da6c6:	f01d      	retw.n

400da6c8 <heap_caps_init>:
400da6c8:	00a136        	entry	a1, 80
400da6cb:	207110        	or	a7, a1, a1
400da6ce:	014ae5        	call8	400dbb7c <soc_get_available_memory_region_max_count>
400da6d1:	11aac0        	slli	a10, a10, 4
400da6d4:	12ca22        	addi	a2, a10, 18
400da6d7:	412420        	srli	a2, a2, 4
400da6da:	1122c0        	slli	a2, a2, 4
400da6dd:	c02120        	sub	a2, a1, a2
400da6e0:	001210        	movsp	a1, a2
400da6e3:	086712        	s32i	a1, a7, 32
400da6e6:	20a110        	or	a10, a1, a1
400da6e9:	014a65        	call8	400dbb90 <soc_get_available_memory_regions>
400da6ec:	67a9      	s32i.n	a10, a7, 24
400da6ee:	140c      	movi.n	a4, 1
400da6f0:	f03d      	nop.n
400da6f2:	f03d      	nop.n
400da6f4:	f03d      	nop.n
400da6f6:	8758      	l32i.n	a5, a7, 32
400da6f8:	0a8d      	mov.n	a8, a10
400da6fa:	001506        	j	400da752 <heap_caps_init+0x8a>
400da6fd:	340b00        	extui	a0, a0, 11, 4
400da700:	1124c0        	slli	a2, a4, 4
400da703:	252a      	add.n	a2, a5, a2
400da705:	0268      	l32i.n	a6, a2, 0
400da707:	1123c0        	slli	a2, a3, 4
400da70a:	252a      	add.n	a2, a5, a2
400da70c:	0298      	l32i.n	a9, a2, 0
400da70e:	1228      	l32i.n	a2, a2, 4
400da710:	292a      	add.n	a2, a9, a2
400da712:	3a9627        	bne	a6, a2, 400da750 <heap_caps_init+0x88>
400da715:	1124c0        	slli	a2, a4, 4
400da718:	252a      	add.n	a2, a5, a2
400da71a:	2268      	l32i.n	a6, a2, 8
400da71c:	1123c0        	slli	a2, a3, 4
400da71f:	252a      	add.n	a2, a5, a2
400da721:	2228      	l32i.n	a2, a2, 8
400da723:	299627        	bne	a6, a2, 400da750 <heap_caps_init+0x88>
400da726:	1133c0        	slli	a3, a3, 4
400da729:	353a      	add.n	a3, a5, a3
400da72b:	f27c      	movi.n	a2, -1
400da72d:	2329      	s32i.n	a2, a3, 8
400da72f:	f03d      	nop.n
400da731:	f03d      	nop.n
400da733:	f03d      	nop.n
400da735:	f03d      	nop.n
400da737:	0368      	l32i.n	a6, a3, 0
400da739:	1124c0        	slli	a2, a4, 4
400da73c:	252a      	add.n	a2, a5, a2
400da73e:	0269      	s32i.n	a6, a2, 0
400da740:	f03d      	nop.n
400da742:	f03d      	nop.n
400da744:	f03d      	nop.n
400da746:	f03d      	nop.n
400da748:	1338      	l32i.n	a3, a3, 4
400da74a:	1268      	l32i.n	a6, a2, 4
400da74c:	363a      	add.n	a3, a6, a3
400da74e:	1239      	s32i.n	a3, a2, 4
400da750:	441b      	addi.n	a4, a4, 1
400da752:	a83487        	bltu	a4, a8, 400da6fe <heap_caps_init+0x36>
400da755:	020c      	movi.n	a2, 0
400da757:	5729      	s32i.n	a2, a7, 20
400da759:	024d      	mov.n	a4, a2
400da75b:	f03d      	nop.n
400da75d:	f03d      	nop.n
400da75f:	f03d      	nop.n
400da761:	8768      	l32i.n	a6, a7, 32
400da763:	6758      	l32i.n	a5, a7, 24
400da765:	000346        	j	400da776 <heap_caps_init+0xae>
400da768:	1132c0        	slli	a3, a2, 4
400da76b:	363a      	add.n	a3, a6, a3
400da76d:	2338      	l32i.n	a3, a3, 8
400da76f:	010326        	beqi	a3, -1, 400da774 <heap_caps_init+0xac>
400da772:	441b      	addi.n	a4, a4, 1
400da774:	221b      	addi.n	a2, a2, 1
400da776:	ee3257        	bltu	a2, a5, 400da768 <heap_caps_init+0xa0>
400da779:	5749      	s32i.n	a4, a7, 20
400da77b:	b02440        	addx8	a2, a4, a4
400da77e:	1122e0        	slli	a2, a2, 2
400da781:	4729      	s32i.n	a2, a7, 16
400da783:	2729      	s32i.n	a2, a7, 8
400da785:	12c222        	addi	a2, a2, 18
400da788:	412420        	srli	a2, a2, 4
400da78b:	1122c0        	slli	a2, a2, 4
400da78e:	c02120        	sub	a2, a1, a2
400da791:	001210        	movsp	a1, a2
400da794:	3719      	s32i.n	a1, a7, 12
400da796:	060c      	movi.n	a6, 0
400da798:	065d      	mov.n	a5, a6
400da79a:	014d      	mov.n	a4, a1
400da79c:	0036c6        	j	400da87b <heap_caps_init+0x1b3>
400da79f:	c00000        	sub	a0, a0, a0
400da7a2:	321126        	beqi	a1, 1, 400da7d8 <heap_caps_init+0x110>
400da7a5:	200827        	bnone	a8, a2, 400da7c9 <heap_caps_init+0x101>
400da7a8:	228023        	lsip	f2, a0, 136
400da7ab:	500222        	l8ui	a2, a2, 80
400da7ae:	e0b085        	call0	400bb2b8 <_iram_end+0x2d764>
400da7b1:	1138      	l32i.n	a3, a1, 4
400da7b3:	343a      	add.n	a3, a4, a3
400da7b5:	7739      	s32i.n	a3, a7, 28
400da7b7:	020266        	bnei	a2, -1, 400da7bd <heap_caps_init+0xf5>
400da7ba:	002ec6        	j	400da879 <heap_caps_init+0x1b1>
400da7bd:	351b      	addi.n	a3, a5, 1
400da7bf:	b739      	s32i.n	a3, a7, 44
400da7c1:	f03d      	nop.n
400da7c3:	f03d      	nop.n
400da7c5:	f03d      	nop.n
400da7c7:	f03d      	nop.n
400da7c9:	5788      	l32i.n	a8, a7, 20
400da7cb:	0eb837        	bgeu	a8, a3, 400da7dd <heap_caps_init+0x115>
400da7ce:	d78dd1        	l32r	a13, 400d0604 <_flash_cache_start+0x5ec>
400da7d1:	d78dc1        	l32r	a12, 400d0608 <_flash_cache_start+0x5f0>
400da7d4:	69a0b2        	movi	a11, 105
400da7d7:	d789a1        	l32r	a10, 400d05fc <_flash_cache_start+0x5e4>
400da7da:	002f25        	call8	400daacc <__assert_func>
400da7dd:	1135d0        	slli	a3, a5, 3
400da7e0:	a739      	s32i.n	a3, a7, 40
400da7e2:	835a      	add.n	a8, a3, a5
400da7e4:	1138e0        	slli	a3, a8, 2
400da7e7:	343a      	add.n	a3, a4, a3
400da7e9:	1182e0        	slli	a8, a2, 2
400da7ec:	9789      	s32i.n	a8, a7, 36
400da7ee:	882a      	add.n	a8, a8, a2
400da7f0:	11b8e0        	slli	a11, a8, 2
400da7f3:	f03d      	nop.n
400da7f5:	f03d      	nop.n
400da7f7:	d78591        	l32r	a9, 400d060c <_flash_cache_start+0x5f4>
400da7fa:	bb9a      	add.n	a11, a11, a9
400da7fc:	cc0c      	movi.n	a12, 12
400da7fe:	bb4b      	addi.n	a11, a11, 4
400da800:	03ad      	mov.n	a10, a3
400da802:	d62381        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400da805:	0008e0        	callx8	a8
400da808:	1186c0        	slli	a8, a6, 4
400da80b:	8798      	l32i.n	a9, a7, 32
400da80d:	898a      	add.n	a8, a9, a8
400da80f:	0898      	l32i.n	a9, a8, 0
400da811:	3399      	s32i.n	a9, a3, 12
400da813:	f03d      	nop.n
400da815:	f03d      	nop.n
400da817:	f03d      	nop.n
400da819:	f03d      	nop.n
400da81b:	0898      	l32i.n	a9, a8, 0
400da81d:	1888      	l32i.n	a8, a8, 4
400da81f:	898a      	add.n	a8, a9, a8
400da821:	4389      	s32i.n	a8, a3, 16
400da823:	f03d      	nop.n
400da825:	f03d      	nop.n
400da827:	f03d      	nop.n
400da829:	f03d      	nop.n
400da82b:	a788      	l32i.n	a8, a7, 40
400da82d:	385a      	add.n	a3, a8, a5
400da82f:	11a3e0        	slli	a10, a3, 2
400da832:	10caa2        	addi	a10, a10, 16
400da835:	a4aa      	add.n	a10, a4, a10
400da837:	aa4b      	addi.n	a10, a10, 4
400da839:	ad72a5        	call8	40087f64 <vPortCPUInitializeMutex>
400da83c:	9738      	l32i.n	a3, a7, 36
400da83e:	232a      	add.n	a2, a3, a2
400da840:	1132e0        	slli	a3, a2, 2
400da843:	d77281        	l32r	a8, 400d060c <_flash_cache_start+0x5f4>
400da846:	383a      	add.n	a3, a8, a3
400da848:	110322        	l8ui	a2, a3, 17
400da84b:	d28c      	beqz.n	a2, 400da85c <heap_caps_init+0x194>
400da84d:	b03550        	addx8	a3, a5, a5
400da850:	1123e0        	slli	a2, a3, 2
400da853:	242a      	add.n	a2, a4, a2
400da855:	030c      	movi.n	a3, 0
400da857:	7239      	s32i.n	a3, a2, 28
400da859:	000146        	j	400da862 <heap_caps_init+0x19a>
400da85c:	0727a2        	l32i	a10, a7, 28
400da85f:	ffe1a5        	call8	400da678 <register_heap>
400da862:	b05550        	addx8	a5, a5, a5
400da865:	1125e0        	slli	a2, a5, 2
400da868:	802420        	add	a2, a4, a2
400da86b:	030c      	movi.n	a3, 0
400da86d:	8239      	s32i.n	a3, a2, 32
400da86f:	f03d      	nop.n
400da871:	f03d      	nop.n
400da873:	f03d      	nop.n
400da875:	f03d      	nop.n
400da877:	b758      	l32i.n	a5, a7, 44
400da879:	661b      	addi.n	a6, a6, 1
400da87b:	062722        	l32i	a2, a7, 24
400da87e:	02b627        	bgeu	a6, a2, 400da884 <heap_caps_init+0x1bc>
400da881:	ffc706        	j	400da7a1 <heap_caps_init+0xd9>
400da884:	5738      	l32i.n	a3, a7, 20
400da886:	0e1357        	beq	a3, a5, 400da898 <heap_caps_init+0x1d0>
400da889:	d761d1        	l32r	a13, 400d0610 <_flash_cache_start+0x5f8>
400da88c:	d75fc1        	l32r	a12, 400d0608 <_flash_cache_start+0x5f0>
400da88f:	7ba0b2        	movi	a11, 123
400da892:	d75aa1        	l32r	a10, 400d05fc <_flash_cache_start+0x5e4>
400da895:	002365        	call8	400daacc <__assert_func>
400da898:	d75a21        	l32r	a2, 400d0600 <_flash_cache_start+0x5e8>
400da89b:	0228      	l32i.n	a2, a2, 0
400da89d:	b2bc      	beqz.n	a2, 400da8dc <heap_caps_init+0x214>
400da89f:	d75dd1        	l32r	a13, 400d0614 <_flash_cache_start+0x5fc>
400da8a2:	d759c1        	l32r	a12, 400d0608 <_flash_cache_start+0x5f0>
400da8a5:	80a0b2        	movi	a11, 128
400da8a8:	d755a1        	l32r	a10, 400d05fc <_flash_cache_start+0x5e4>
400da8ab:	201110        	or	a1, a1, a1
400da8ae:	0021e5        	call8	400daacc <__assert_func>
400da8b1:	b08220        	addx8	a8, a2, a2
400da8b4:	11a8e0        	slli	a10, a8, 2
400da8b7:	d63cb1        	l32r	a11, 400d01a8 <_flash_cache_start+0x190>
400da8ba:	80a4a0        	add	a10, a4, a10
400da8bd:	11a4e5        	call8	400ec30c <heap_caps_match>
400da8c0:	012a16        	beqz	a10, 400da8d6 <heap_caps_init+0x20e>
400da8c3:	b08220        	addx8	a8, a2, a2
400da8c6:	1138e0        	slli	a3, a8, 2
400da8c9:	343a      	add.n	a3, a4, a3
400da8cb:	06bd      	mov.n	a11, a6
400da8cd:	73a8      	l32i.n	a10, a3, 28
400da8cf:	b04e25        	call8	4008adb0 <multi_heap_malloc>
400da8d2:	0a3d      	mov.n	a3, a10
400da8d4:	4adc      	bnez.n	a10, 400da8ec <heap_caps_init+0x224>
400da8d6:	221b      	addi.n	a2, a2, 1
400da8d8:	000346        	j	400da8e9 <heap_caps_init+0x221>
400da8db:	a02200        	addx4	a2, a2, a0
400da8de:	322000        	orbc	b2, b0, b0
400da8e1:	275220        	lsi	f2, a2, 156
400da8e4:	276805        	call0	40101f68 <_etext+0x15a97>
400da8e7:	3748      	l32i.n	a4, a7, 12
400da8e9:	c43257        	bltu	a2, a5, 400da8b1 <heap_caps_init+0x1e9>
400da8ec:	d3cc      	bnez.n	a3, 400da8fd <heap_caps_init+0x235>
400da8ee:	d74ad1        	l32r	a13, 400d0618 <_flash_cache_start+0x600>
400da8f1:	d745c1        	l32r	a12, 400d0608 <_flash_cache_start+0x5f0>
400da8f4:	8ca0b2        	movi	a11, 140
400da8f7:	d741a1        	l32r	a10, 400d05fc <_flash_cache_start+0x5e4>
400da8fa:	001d25        	call8	400daacc <__assert_func>
400da8fd:	47c8      	l32i.n	a12, a7, 16
400da8ff:	37b8      	l32i.n	a11, a7, 12
400da901:	03ad      	mov.n	a10, a3
400da903:	d5e381        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400da906:	0008e0        	callx8	a8
400da909:	040c      	movi.n	a4, 0
400da90b:	5768      	l32i.n	a6, a7, 20
400da90d:	000c06        	j	400da941 <heap_caps_init+0x279>
400da910:	b05440        	addx8	a5, a4, a4
400da913:	1125e0        	slli	a2, a5, 2
400da916:	805320        	add	a5, a3, a2
400da919:	0725a2        	l32i	a10, a5, 28
400da91c:	005a16        	beqz	a10, 400da925 <heap_caps_init+0x25d>
400da91f:	14c5b2        	addi	a11, a5, 20
400da922:	b038a5        	call8	4008acac <multi_heap_set_lock>
400da925:	b4cc      	bnez.n	a4, 400da934 <heap_caps_init+0x26c>
400da927:	d73621        	l32r	a2, 400d0600 <_flash_cache_start+0x5e8>
400da92a:	0258      	l32i.n	a5, a2, 0
400da92c:	8359      	s32i.n	a5, a3, 32
400da92e:	0239      	s32i.n	a3, a2, 0
400da930:	0002c6        	j	400da93f <heap_caps_init+0x277>
400da933:	c22200        	quou	a2, a2, a0
400da936:	2adc      	bnez.n	a10, 400da94c <heap_caps_add_region_with_caps+0x4>
400da938:	828823        	lsip	f2, a8, 0x208
400da93b:	8589      	s32i.n	a8, a5, 32
400da93d:	8259      	s32i.n	a5, a2, 32
400da93f:	441b      	addi.n	a4, a4, 1
400da941:	cb3467        	bltu	a4, a6, 400da910 <heap_caps_init+0x248>
400da944:	f01d      	retw.n
	...

400da948 <heap_caps_add_region_with_caps>:
400da948:	004136        	entry	a1, 32
400da94b:	180c      	movi.n	a8, 1
400da94d:	0a0c      	movi.n	a10, 0
400da94f:	0a9d      	mov.n	a9, a10
400da951:	839820        	moveqz	a9, a8, a2
400da954:	938a30        	movnez	a8, a10, a3
400da957:	208890        	or	a8, a8, a9
400da95a:	0218a7        	beq	a8, a10, 400da960 <heap_caps_add_region_with_caps+0x18>
400da95d:	002ac6        	j	400daa0c <heap_caps_add_region_with_caps+0xc4>
400da960:	180c      	movi.n	a8, 1
400da962:	0a9d      	mov.n	a9, a10
400da964:	839840        	moveqz	a9, a8, a4
400da967:	749090        	extui	a9, a9, 0, 8
400da96a:	02a347        	bge	a3, a4, 400da970 <heap_caps_add_region_with_caps+0x28>
400da96d:	00a082        	movi	a8, 0
400da970:	748080        	extui	a8, a8, 0, 8
400da973:	09a956        	bnez	a9, 400daa11 <heap_caps_add_region_with_caps+0xc9>
400da976:	097856        	bnez	a8, 400daa11 <heap_caps_add_region_with_caps+0xc9>
400da979:	d72151        	l32r	a5, 400d0600 <_flash_cache_start+0x5e8>
400da97c:	0588      	l32i.n	a8, a5, 0
400da97e:	000606        	j	400da99a <heap_caps_add_region_with_caps+0x52>
400da981:	389800        	lsi	f0, a8, 224
400da984:	052937        	blt	a9, a3, 400da98d <heap_caps_add_region_with_caps+0x45>
400da987:	02a947        	bge	a9, a4, 400da98d <heap_caps_add_region_with_caps+0x45>
400da98a:	002206        	j	400daa16 <heap_caps_add_region_with_caps+0xce>
400da98d:	4898      	l32i.n	a9, a8, 16
400da98f:	05a397        	bge	a3, a9, 400da998 <heap_caps_add_region_with_caps+0x50>
400da992:	02a947        	bge	a9, a4, 400da998 <heap_caps_add_region_with_caps+0x50>
400da995:	002046        	j	400daa1a <heap_caps_add_region_with_caps+0xd2>
400da998:	8888      	l32i.n	a8, a8, 32
400da99a:	fe4856        	bnez	a8, 400da982 <heap_caps_add_region_with_caps+0x3a>
400da99d:	d602b1        	l32r	a11, 400d01a8 <_flash_cache_start+0x190>
400da9a0:	4a2c      	movi.n	a10, 36
400da9a2:	a99725        	call8	40084314 <heap_caps_malloc>
400da9a5:	0a5d      	mov.n	a5, a10
400da9a7:	049a16        	beqz	a10, 400da9f4 <heap_caps_add_region_with_caps+0xac>
400da9aa:	cc0c      	movi.n	a12, 12
400da9ac:	20b220        	or	a11, a2, a2
400da9af:	d5b881        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400da9b2:	0008e0        	callx8	a8
400da9b5:	3539      	s32i.n	a3, a5, 12
400da9b7:	4549      	s32i.n	a4, a5, 16
400da9b9:	14c522        	addi	a2, a5, 20
400da9bc:	02ad      	mov.n	a10, a2
400da9be:	ad5a65        	call8	40087f64 <vPortCPUInitializeMutex>
400da9c1:	c0b430        	sub	a11, a4, a3
400da9c4:	03ad      	mov.n	a10, a3
400da9c6:	b04fa5        	call8	4008aec0 <multi_heap_register>
400da9c9:	75a9      	s32i.n	a10, a5, 28
400da9cb:	030c      	movi.n	a3, 0
400da9cd:	8539      	s32i.n	a3, a5, 32
400da9cf:	291a37        	beq	a10, a3, 400da9fc <heap_caps_add_region_with_caps+0xb4>
400da9d2:	02bd      	mov.n	a11, a2
400da9d4:	b02d65        	call8	4008acac <multi_heap_set_lock>
400da9d7:	d71121        	l32r	a2, 400d061c <_flash_cache_start+0x604>
400da9da:	02ad      	mov.n	a10, a2
400da9dc:	aa0ea5        	call8	40084ac8 <_lock_acquire>
400da9df:	d70831        	l32r	a3, 400d0600 <_flash_cache_start+0x5e8>
400da9e2:	0348      	l32i.n	a4, a3, 0
400da9e4:	8549      	s32i.n	a4, a5, 32
400da9e6:	0359      	s32i.n	a5, a3, 0
400da9e8:	02ad      	mov.n	a10, a2
400da9ea:	aa11e5        	call8	40084b08 <_lock_release>
400da9ed:	020c      	movi.n	a2, 0
400da9ef:	000306        	j	400da9ff <heap_caps_add_region_with_caps+0xb7>
400da9f2:	220000        	orb	b0, b0, b0
400da9f5:	0601a1        	l32r	a10, 4009c1fc <_iram_end+0xe6a8>
400da9f8:	000001        	l32r	a0, 4009a9f8 <_iram_end+0xcea4>
400da9fb:	a12200        	sll	a2, a2
400da9fe:	929c04        	lsi	f0, a12, 0x248
400daa01:	05ad      	mov.n	a10, a5
400daa03:	d5a281        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400daa06:	0008e0        	callx8	a8
400daa09:	f01d      	retw.n
400daa0b:	a12200        	sll	a2, a2
400daa0e:	f01d02        	l16ui	a0, a13, 0x1e0
400daa11:	02a122        	movi	a2, 0x102
400daa14:	f01d      	retw.n
400daa16:	f27c      	movi.n	a2, -1
400daa18:	f01d      	retw.n
400daa1a:	f27c      	movi.n	a2, -1
400daa1c:	f01d      	retw.n
	...

400daa20 <heap_caps_add_region>:
400daa20:	004136        	entry	a1, 32
400daa23:	052216        	beqz	a2, 400daa79 <heap_caps_add_region+0x59>
400daa26:	090c      	movi.n	a9, 0
400daa28:	001006        	j	400daa6c <heap_caps_add_region+0x4c>
400daa2b:	89c000        	lsi	f0, a0, 0x224
400daa2e:	fca111        	l32r	a1, 400d9cb4 <uart_write+0x30>
400daa31:	8a80d6        	bgez	a0, 400da2dd <esp_vfs_fstat+0x31>
400daa34:	28a280        	lsi	f8, a2, 160
400daa37:	22a700        	orb	b10, b7, b0
400daa3a:	2e          	.byte 0x2e
400daa3b:	1189c0        	slli	a8, a9, 4
400daa3e:	d6f8b1        	l32r	a11, 400d0620 <_flash_cache_start+0x608>
400daa41:	808b80        	add	a8, a11, a8
400daa44:	1888      	l32i.n	a8, a8, 4
400daa46:	aa8a      	add.n	a10, a10, a8
400daa48:	1eb2a7        	bgeu	a2, a10, 400daa6a <heap_caps_add_region+0x4a>
400daa4b:	1199c0        	slli	a9, a9, 4
400daa4e:	9b9a      	add.n	a9, a11, a9
400daa50:	2988      	l32i.n	a8, a9, 8
400daa52:	a08880        	addx4	a8, a8, a8
400daa55:	11a8e0        	slli	a10, a8, 2
400daa58:	d6ed81        	l32r	a8, 400d060c <_flash_cache_start+0x5f4>
400daa5b:	aa8a      	add.n	a10, a10, a8
400daa5d:	03cd      	mov.n	a12, a3
400daa5f:	02bd      	mov.n	a11, a2
400daa61:	aa4b      	addi.n	a10, a10, 4
400daa63:	ffee65        	call8	400da948 <heap_caps_add_region_with_caps>
400daa66:	0a2d      	mov.n	a2, a10
400daa68:	f01d      	retw.n
400daa6a:	991b      	addi.n	a9, a9, 1
400daa6c:	d6ee81        	l32r	a8, 400d0624 <_flash_cache_start+0x60c>
400daa6f:	0888      	l32i.n	a8, a8, 0
400daa71:	b73987        	bltu	a9, a8, 400daa2c <heap_caps_add_region+0xc>
400daa74:	05a122        	movi	a2, 0x105
400daa77:	f01d      	retw.n
400daa79:	02a122        	movi	a2, 0x102
400daa7c:	f01d      	retw.n
	...

400daa80 <__fpclassifyd>:
400daa80:	004136        	entry	a1, 32
400daa83:	208320        	or	a8, a3, a2
400daa86:	02ad      	mov.n	a10, a2
400daa88:	220c      	movi.n	a2, 2
400daa8a:	c8bc      	beqz.n	a8, 400daaca <__fpclassifyd+0x4a>
400daa8c:	080c      	movi.n	a8, 0
400daa8e:	190c      	movi.n	a9, 1
400daa90:	9398a0        	movnez	a9, a8, a10
400daa93:	d57a81        	l32r	a8, 400d007c <_flash_cache_start+0x64>
400daa96:	749090        	extui	a9, a9, 0, 8
400daa99:	808830        	add	a8, a8, a3
400daa9c:	08cc      	bnez.n	a8, 400daaa0 <__fpclassifyd+0x20>
400daa9e:	89ec      	bnez.n	a9, 400daaca <__fpclassifyd+0x4a>
400daaa0:	d57021        	l32r	a2, 400d0060 <_flash_cache_start+0x48>
400daaa3:	d6e181        	l32r	a8, 400d0628 <_flash_cache_start+0x610>
400daaa6:	103230        	and	a3, a2, a3
400daaa9:	d6e0a1        	l32r	a10, 400d062c <_flash_cache_start+0x614>
400daaac:	838a      	add.n	a8, a3, a8
400daaae:	420c      	movi.n	a2, 4
400daab0:	16ba87        	bgeu	a10, a8, 400daaca <__fpclassifyd+0x4a>
400daab3:	d6df81        	l32r	a8, 400d0630 <_flash_cache_start+0x618>
400daab6:	320c      	movi.n	a2, 3
400daab8:	0eb837        	bgeu	a8, a3, 400daaca <__fpclassifyd+0x4a>
400daabb:	d6de81        	l32r	a8, 400d0634 <_flash_cache_start+0x61c>
400daabe:	020c      	movi.n	a2, 0
400daac0:	338a      	add.n	a3, a3, a8
400daac2:	180c      	movi.n	a8, 1
400daac4:	832830        	moveqz	a2, a8, a3
400daac7:	102920        	and	a2, a9, a2
400daaca:	f01d      	retw.n

400daacc <__assert_func>:
400daacc:	006136        	entry	a1, 48
400daacf:	adefa5        	call8	400889c8 <__getreent>
400daad2:	032aa2        	l32i	a10, a10, 12
400daad5:	d6d8f1        	l32r	a15, 400d0638 <_flash_cache_start+0x620>
400daad8:	005456        	bnez	a4, 400daae1 <__assert_func+0x15>
400daadb:	d6d8f1        	l32r	a15, 400d063c <_flash_cache_start+0x624>
400daade:	204ff0        	or	a4, a15, a15
400daae1:	d6d7b1        	l32r	a11, 400d0640 <_flash_cache_start+0x628>
400daae4:	03ed      	mov.n	a14, a3
400daae6:	02dd      	mov.n	a13, a2
400daae8:	05cd      	mov.n	a12, a5
400daaea:	0149      	s32i.n	a4, a1, 0
400daaec:	0122e5        	call8	400dbd1c <fiprintf>
400daaef:	b087e5        	call8	4008b36c <abort>
	...

400daaf4 <__assert>:
400daaf4:	004136        	entry	a1, 32
400daaf7:	04dd      	mov.n	a13, a4
400daaf9:	0c0c      	movi.n	a12, 0
400daafb:	20b330        	or	a11, a3, a3
400daafe:	20a220        	or	a10, a2, a2
400dab01:	fffca5        	call8	400daacc <__assert_func>

400dab04 <__errno>:
400dab04:	004136        	entry	a1, 32
400dab07:	adec25        	call8	400889c8 <__getreent>
400dab0a:	0a2d      	mov.n	a2, a10
400dab0c:	f01d      	retw.n
	...

400dab10 <_fopen_r>:
400dab10:	006136        	entry	a1, 48
400dab13:	01cd      	mov.n	a12, a1
400dab15:	04bd      	mov.n	a11, a4
400dab17:	02ad      	mov.n	a10, a2
400dab19:	005f65        	call8	400db110 <__sflags>
400dab1c:	0a5d      	mov.n	a5, a10
400dab1e:	4acc      	bnez.n	a10, 400dab26 <_fopen_r+0x16>
400dab20:	000f06        	j	400dab60 <_fopen_r+0x50>
400dab23:	000000        	ill
400dab26:	20a220        	or	a10, a2, a2
400dab29:	d6ca81        	l32r	a8, 400d0654 <_flash_cache_start+0x63c>
400dab2c:	0008e0        	callx8	a8
400dab2f:	204aa0        	or	a4, a10, a10
400dab32:	02aa16        	beqz	a10, 400dab60 <_fopen_r+0x50>
400dab35:	01c8      	l32i.n	a12, a1, 0
400dab37:	03bd      	mov.n	a11, a3
400dab39:	b6a1d2        	movi	a13, 0x1b6
400dab3c:	02ad      	mov.n	a10, a2
400dab3e:	d6c681        	l32r	a8, 400d0658 <_flash_cache_start+0x640>
400dab41:	0008e0        	callx8	a8
400dab44:	0a3d      	mov.n	a3, a10
400dab46:	01aad6        	bgez	a10, 400dab64 <_fopen_r+0x54>
400dab49:	d6c481        	l32r	a8, 400d065c <_flash_cache_start+0x644>
400dab4c:	0008e0        	callx8	a8
400dab4f:	020c      	movi.n	a2, 0
400dab51:	58c4a2        	addi	a10, a4, 88
400dab54:	065422        	s16i	a2, a4, 12
400dab57:	a9f2a5        	call8	40084a80 <_lock_close>
400dab5a:	d6c181        	l32r	a8, 400d0660 <_flash_cache_start+0x648>
400dab5d:	0008e0        	callx8	a8
400dab60:	020c      	movi.n	a2, 0
400dab62:	f01d      	retw.n
400dab64:	192482        	l32i	a8, a4, 100
400dab67:	0ee807        	bbsi	a8, 0, 400dab79 <_fopen_r+0x69>
400dab6a:	061482        	l16ui	a8, a4, 12
400dab6d:	08e897        	bbsi	a8, 9, 400dab79 <_fopen_r+0x69>
400dab70:	58c4a2        	addi	a10, a4, 88
400dab73:	201110        	or	a1, a1, a1
400dab76:	a9f625        	call8	40084ad8 <_lock_acquire_recursive>
400dab79:	075432        	s16i	a3, a4, 14
400dab7c:	d6b231        	l32r	a3, 400d0644 <_flash_cache_start+0x62c>
400dab7f:	065452        	s16i	a5, a4, 12
400dab82:	9439      	s32i.n	a3, a4, 36
400dab84:	d6b131        	l32r	a3, 400d0648 <_flash_cache_start+0x630>
400dab87:	8449      	s32i.n	a4, a4, 32
400dab89:	a439      	s32i.n	a3, a4, 40
400dab8b:	d6b031        	l32r	a3, 400d064c <_flash_cache_start+0x634>
400dab8e:	b439      	s32i.n	a3, a4, 44
400dab90:	d6b031        	l32r	a3, 400d0650 <_flash_cache_start+0x638>
400dab93:	c439      	s32i.n	a3, a4, 48
400dab95:	0c6587        	bbci	a5, 8, 400daba5 <_fopen_r+0x95>
400dab98:	2d0c      	movi.n	a13, 2
400dab9a:	0c0c      	movi.n	a12, 0
400dab9c:	20b440        	or	a11, a4, a4
400dab9f:	20a220        	or	a10, a2, a2
400daba2:	0002e5        	call8	400dabd0 <_fseek_r>
400daba5:	192432        	l32i	a3, a4, 100
400daba8:	042d      	mov.n	a2, a4
400dabaa:	0be307        	bbsi	a3, 0, 400dabb9 <_fopen_r+0xa9>
400dabad:	061432        	l16ui	a3, a4, 12
400dabb0:	05e397        	bbsi	a3, 9, 400dabb9 <_fopen_r+0xa9>
400dabb3:	58c4a2        	addi	a10, a4, 88
400dabb6:	a9f5e5        	call8	40084b14 <_lock_release_recursive>
400dabb9:	f01d      	retw.n
	...

400dabbc <fopen>:
400dabbc:	004136        	entry	a1, 32
400dabbf:	ade0a5        	call8	400889c8 <__getreent>
400dabc2:	20b220        	or	a11, a2, a2
400dabc5:	20c330        	or	a12, a3, a3
400dabc8:	fff465        	call8	400dab10 <_fopen_r>
400dabcb:	202aa0        	or	a2, a10, a10
400dabce:	f01d      	retw.n

400dabd0 <_fseek_r>:
400dabd0:	004136        	entry	a1, 32
400dabd3:	20d550        	or	a13, a5, a5
400dabd6:	20c440        	or	a12, a4, a4
400dabd9:	20b330        	or	a11, a3, a3
400dabdc:	02ad      	mov.n	a10, a2
400dabde:	000225        	call8	400dac00 <_fseeko_r>
400dabe1:	0a2d      	mov.n	a2, a10
400dabe3:	f01d      	retw.n
400dabe5:	000000        	ill

400dabe8 <fseek>:
400dabe8:	004136        	entry	a1, 32
400dabeb:	addde5        	call8	400889c8 <__getreent>
400dabee:	20b220        	or	a11, a2, a2
400dabf1:	20d440        	or	a13, a4, a4
400dabf4:	03cd      	mov.n	a12, a3
400dabf6:	0000a5        	call8	400dac00 <_fseeko_r>
400dabf9:	0a2d      	mov.n	a2, a10
400dabfb:	f01d      	retw.n
400dabfd:	000000        	ill

400dac00 <_fseeko_r>:
400dac00:	00e136        	entry	a1, 112
400dac03:	106142        	s32i	a4, a1, 64
400dac06:	a28c      	beqz.n	a2, 400dac14 <_fseeko_r+0x14>
400dac08:	6268      	l32i.n	a6, a2, 24
400dac0a:	66cc      	bnez.n	a6, 400dac14 <_fseeko_r+0x14>
400dac0c:	02ad      	mov.n	a10, a2
400dac0e:	d69e81        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400dac11:	0008e0        	callx8	a8
400dac14:	d69461        	l32r	a6, 400d0664 <_flash_cache_start+0x64c>
400dac17:	059367        	bne	a3, a6, 400dac20 <_fseeko_r+0x20>
400dac1a:	1238      	l32i.n	a3, a2, 4
400dac1c:	000506        	j	400dac34 <_fseeko_r+0x34>
400dac1f:	926100        	lsi	f0, a1, 0x248
400dac22:	9367d6        	bgez	a7, 400da55c <esp_log_level_set+0x20>
400dac25:	223805        	call0	400fcfa8 <_etext+0x10ad7>
400dac28:	000206        	j	400dac34 <_fseeko_r+0x34>
400dac2b:	906100        	addx2	a6, a1, a0
400dac2e:	9367d6        	bgez	a7, 400da568 <esp_log_level_set+0x2c>
400dac31:	323801        	l32r	a0, 400a7514 <_iram_end+0x199c0>
400dac34:	192362        	l32i	a6, a3, 100
400dac37:	0ee607        	bbsi	a6, 0, 400dac49 <_fseeko_r+0x49>
400dac3a:	061362        	l16ui	a6, a3, 12
400dac3d:	08e697        	bbsi	a6, 9, 400dac49 <_fseeko_r+0x49>
400dac40:	58c3a2        	addi	a10, a3, 88
400dac43:	201110        	or	a1, a1, a1
400dac46:	a9e925        	call8	40084ad8 <_lock_acquire_recursive>
400dac49:	061372        	l16ui	a7, a3, 12
400dac4c:	08a162        	movi	a6, 0x108
400dac4f:	106760        	and	a6, a7, a6
400dac52:	08a172        	movi	a7, 0x108
400dac55:	099677        	bne	a6, a7, 400dac62 <_fseeko_r+0x62>
400dac58:	03bd      	mov.n	a11, a3
400dac5a:	02ad      	mov.n	a10, a2
400dac5c:	d68c81        	l32r	a8, 400d068c <_flash_cache_start+0x674>
400dac5f:	0008e0        	callx8	a8
400dac62:	b368      	l32i.n	a6, a3, 44
400dac64:	d41c      	movi.n	a4, 29
400dac66:	08a616        	beqz	a6, 400dacf4 <_fseeko_r+0xf4>
400dac69:	0004c6        	j	400dac80 <_fseeko_r+0x80>
400dac6c:	132200        	wsr.m2	a0
400dac6f:	e29706        	j	400d36cf <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)+0xf>
400dac72:	c3a205        	call0	4009e694 <_iram_end+0x10b40>
400dac75:	e558      	l32i.n	a5, a5, 56
400dac77:	a9e9      	s32i.n	a14, a9, 40
400dac79:	f27c      	movi.n	a2, -1
400dac7b:	f01d      	retw.n
400dac7d:	000000        	ill
400dac80:	0a1526        	beqi	a5, 1, 400dac8e <_fseeko_r+0x8e>
400dac83:	732526        	beqi	a5, 2, 400dacfa <_fseeko_r+0xfa>
400dac86:	641c      	movi.n	a4, 22
400dac88:	068556        	bnez	a5, 400dacf4 <_fseeko_r+0xf4>
400dac8b:	001ac6        	j	400dacfa <_fseeko_r+0xfa>
400dac8e:	03bd      	mov.n	a11, a3
400dac90:	02ad      	mov.n	a10, a2
400dac92:	d67e81        	l32r	a8, 400d068c <_flash_cache_start+0x674>
400dac95:	0008e0        	callx8	a8
400dac98:	d676c1        	l32r	a12, 400d0670 <_flash_cache_start+0x658>
400dac9b:	061372        	l16ui	a7, a3, 12
400dac9e:	10cc70        	and	a12, a12, a7
400daca1:	4c8c      	beqz.n	a12, 400daca9 <_fseeko_r+0xa9>
400daca3:	152342        	l32i	a4, a3, 84
400daca6:	000486        	j	400dacbc <_fseeko_r+0xbc>
400daca9:	83b8      	l32i.n	a11, a3, 32
400dacab:	05dd      	mov.n	a13, a5
400dacad:	02ad      	mov.n	a10, a2
400dacaf:	0006e0        	callx8	a6
400dacb2:	0a4d      	mov.n	a4, a10
400dacb4:	040a66        	bnei	a10, -1, 400dacbc <_fseeko_r+0xbc>
400dacb7:	007ec6        	j	400daeb6 <_fseeko_r+0x2b6>
400dacba:	520000        	lsi	f0, a0, 0x148
400dacbd:	270613        	lsi	f1, a6, 156
400dacc0:	581165        	call8	40132dd8 <_etext+0x46907>
400dacc3:	445013        	lsi	f1, a0, 0x110
400dacc6:	d358c0        	movt	a5, a8, b12
400dacc9:	759c      	beqz.n	a5, 400dace4 <_fseeko_r+0xe4>
400daccb:	102352        	l32i	a5, a3, 64
400dacce:	c04450        	sub	a4, a4, a5
400dacd1:	0003c6        	j	400dace4 <_fseeko_r+0xe4>
400dacd4:	0c6537        	bbci	a5, 3, 400dace4 <_fseeko_r+0xe4>
400dacd7:	0358      	l32i.n	a5, a3, 0
400dacd9:	758c      	beqz.n	a5, 400dace4 <_fseeko_r+0xe4>
400dacdb:	042372        	l32i	a7, a3, 16
400dacde:	c05570        	sub	a5, a5, a7
400dace1:	804450        	add	a4, a4, a5
400dace4:	102182        	l32i	a8, a1, 64
400dace7:	170c      	movi.n	a7, 1
400dace9:	884a      	add.n	a8, a8, a4
400daceb:	106182        	s32i	a8, a1, 64
400dacee:	050c      	movi.n	a5, 0
400dacf0:	000286        	j	400dacfe <_fseeko_r+0xfe>
400dacf3:	024900        	andb	b4, b9, b0
400dacf6:	006f06        	j	400daeb6 <_fseeko_r+0x2b6>
400dacf9:	070c00        	lsi	f0, a12, 28
400dacfc:	074d      	mov.n	a4, a7
400dacfe:	4398      	l32i.n	a9, a3, 16
400dad00:	89cc      	bnez.n	a9, 400dad0c <_fseeko_r+0x10c>
400dad02:	03bd      	mov.n	a11, a3
400dad04:	02ad      	mov.n	a10, a2
400dad06:	d66281        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400dad09:	0008e0        	callx8	a8
400dad0c:	0613a2        	l16ui	a10, a3, 12
400dad0f:	d65991        	l32r	a9, 400d0674 <_flash_cache_start+0x65c>
400dad12:	020a97        	bnone	a10, a9, 400dad18 <_fseeko_r+0x118>
400dad15:	006446        	j	400daeaa <_fseeko_r+0x2aa>
400dad18:	00a492        	movi	a9, 0x400
400dad1b:	4d8a97        	bany	a10, a9, 400dad6c <_fseeko_r+0x16c>
400dad1e:	d64ba1        	l32r	a10, 400d064c <_flash_cache_start+0x634>
400dad21:	0e16a7        	beq	a6, a10, 400dad33 <_fseeko_r+0x133>
400dad24:	061382        	l16ui	a8, a3, 12
400dad27:	d65471        	l32r	a7, 400d0678 <_flash_cache_start+0x660>
400dad2a:	207870        	or	a7, a8, a7
400dad2d:	065372        	s16i	a7, a3, 12
400dad30:	005d86        	j	400daeaa <_fseeko_r+0x2aa>
400dad33:	0793b2        	l16si	a11, a3, 14
400dad36:	feab96        	bltz	a11, 400dad24 <_fseeko_r+0x124>
400dad39:	20c110        	or	a12, a1, a1
400dad3c:	20a220        	or	a10, a2, a2
400dad3f:	126192        	s32i	a9, a1, 72
400dad42:	d65481        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400dad45:	0008e0        	callx8	a8
400dad48:	122192        	l32i	a9, a1, 72
400dad4b:	fd5a56        	bnez	a10, 400dad24 <_fseeko_r+0x124>
400dad4e:	0121b2        	l32i	a11, a1, 4
400dad51:	d64aa1        	l32r	a10, 400d067c <_flash_cache_start+0x664>
400dad54:	10aba0        	and	a10, a11, a10
400dad57:	d64ab1        	l32r	a11, 400d0680 <_flash_cache_start+0x668>
400dad5a:	c69ab7        	bne	a10, a11, 400dad24 <_fseeko_r+0x124>
400dad5d:	00a4a2        	movi	a10, 0x400
400dad60:	1463a2        	s32i	a10, a3, 80
400dad63:	0613a2        	l16ui	a10, a3, 12
400dad66:	209a90        	or	a9, a10, a9
400dad69:	065392        	s16i	a9, a3, 12
400dad6c:	102192        	l32i	a9, a1, 64
400dad6f:	759c      	beqz.n	a5, 400dad8a <_fseeko_r+0x18a>
400dad71:	0793b2        	l16si	a11, a3, 14
400dad74:	20c110        	or	a12, a1, a1
400dad77:	20a220        	or	a10, a2, a2
400dad7a:	d64681        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400dad7d:	0008e0        	callx8	a8
400dad80:	126a56        	bnez	a10, 400daeaa <_fseeko_r+0x2aa>
400dad83:	4198      	l32i.n	a9, a1, 16
400dad85:	102182        	l32i	a8, a1, 64
400dad88:	989a      	add.n	a9, a8, a9
400dad8a:	27fc      	bnez.n	a7, 400dadc0 <_fseeko_r+0x1c0>
400dad8c:	061382        	l16ui	a8, a3, 12
400dad8f:	0768c7        	bbci	a8, 12, 400dad9a <_fseeko_r+0x19a>
400dad92:	1523a2        	l32i	a10, a3, 84
400dad95:	000606        	j	400dadb1 <_fseeko_r+0x1b1>
400dad98:	b80000        	lsi	f0, a0, 0x2e0
400dad9b:	1d0c83        	lsi	f8, a12, 116
400dad9e:	126192        	s32i	a9, a1, 72
400dada1:	07cd      	mov.n	a12, a7
400dada3:	02ad      	mov.n	a10, a2
400dada5:	0006e0        	callx8	a6
400dada8:	122192        	l32i	a9, a1, 72
400dadab:	020a66        	bnei	a10, -1, 400dadb1 <_fseeko_r+0x1b1>
400dadae:	003e06        	j	400daeaa <_fseeko_r+0x2aa>
400dadb1:	1388      	l32i.n	a8, a3, 4
400dadb3:	d378      	l32i.n	a7, a3, 52
400dadb5:	c04a80        	sub	a4, a10, a8
400dadb8:	478c      	beqz.n	a7, 400dadc0 <_fseeko_r+0x1c0>
400dadba:	102372        	l32i	a7, a3, 64
400dadbd:	c04470        	sub	a4, a4, a7
400dadc0:	d3b8      	l32i.n	a11, a3, 52
400dadc2:	13d8      	l32i.n	a13, a3, 4
400dadc4:	43f8      	l32i.n	a15, a3, 16
400dadc6:	0b9c      	beqz.n	a11, 400dadda <_fseeko_r+0x1da>
400dadc8:	f3c8      	l32i.n	a12, a3, 60
400dadca:	1023e2        	l32i	a14, a3, 64
400dadcd:	c07cf0        	sub	a7, a12, a15
400dadd0:	84da      	add.n	a8, a4, a13
400dadd2:	c08870        	sub	a8, a8, a7
400dadd5:	c7ea      	add.n	a12, a7, a14
400dadd7:	0002c6        	j	400dade6 <_fseeko_r+0x1e6>
400dadda:	0023c2        	l32i	a12, a3, 0
400daddd:	c0ccf0        	sub	a12, a12, a15
400dade0:	c084c0        	sub	a8, a4, a12
400dade3:	80ccd0        	add	a12, a12, a13
400dade6:	4b2987        	blt	a9, a8, 400dae35 <_fseeko_r+0x235>
400dade9:	8078c0        	add	a7, a8, a12
400dadec:	45b977        	bgeu	a9, a7, 400dae35 <_fseeko_r+0x235>
400dadef:	c08980        	sub	a8, a9, a8
400dadf2:	ff8a      	add.n	a15, a15, a8
400dadf4:	c0cc80        	sub	a12, a12, a8
400dadf7:	03f9      	s32i.n	a15, a3, 0
400dadf9:	13c9      	s32i.n	a12, a3, 4
400dadfb:	db8c      	beqz.n	a11, 400dae0c <_fseeko_r+0x20c>
400dadfd:	44c342        	addi	a4, a3, 68
400dae00:	041b47        	beq	a11, a4, 400dae08 <_fseeko_r+0x208>
400dae03:	02ad      	mov.n	a10, a2
400dae05:	a9a8e5        	call8	40084894 <_free_r>
400dae08:	020c      	movi.n	a2, 0
400dae0a:	d329      	s32i.n	a2, a3, 52
400dae0c:	061342        	l16ui	a4, a3, 12
400dae0f:	dfaf22        	movi	a2, -33
400dae12:	102420        	and	a2, a4, a2
400dae15:	065322        	s16i	a2, a3, 12
400dae18:	8c0c      	movi.n	a12, 8
400dae1a:	0b0c      	movi.n	a11, 0
400dae1c:	5cc3a2        	addi	a10, a3, 92
400dae1f:	d49381        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400dae22:	0008e0        	callx8	a8
400dae25:	192322        	l32i	a2, a3, 100
400dae28:	042020        	extui	a2, a2, 0, 1
400dae2b:	0d6216        	beqz	a2, 400daf05 <_fseeko_r+0x305>
400dae2e:	020c      	movi.n	a2, 0
400dae30:	f01d      	retw.n
400dae32:	000000        	ill
400dae35:	142372        	l32i	a7, a3, 80
400dae38:	83b8      	l32i.n	a11, a3, 32
400dae3a:	607070        	neg	a7, a7
400dae3d:	107790        	and	a7, a7, a9
400dae40:	126192        	s32i	a9, a1, 72
400dae43:	0d0c      	movi.n	a13, 0
400dae45:	07cd      	mov.n	a12, a7
400dae47:	02ad      	mov.n	a10, a2
400dae49:	0006e0        	callx8	a6
400dae4c:	122192        	l32i	a9, a1, 72
400dae4f:	570a26        	beqi	a10, -1, 400daeaa <_fseeko_r+0x2aa>
400dae52:	43a8      	l32i.n	a10, a3, 16
400dae54:	080c      	movi.n	a8, 0
400dae56:	d3b8      	l32i.n	a11, a3, 52
400dae58:	1389      	s32i.n	a8, a3, 4
400dae5a:	03a9      	s32i.n	a10, a3, 0
400dae5c:	181b87        	beq	a11, a8, 400dae78 <_fseeko_r+0x278>
400dae5f:	44c3a2        	addi	a10, a3, 68
400dae62:	101ba7        	beq	a11, a10, 400dae76 <_fseeko_r+0x276>
400dae65:	02ad      	mov.n	a10, a2
400dae67:	116182        	s32i	a8, a1, 68
400dae6a:	126192        	s32i	a9, a1, 72
400dae6d:	a9a265        	call8	40084894 <_free_r>
400dae70:	122192        	l32i	a9, a1, 72
400dae73:	112182        	l32i	a8, a1, 68
400dae76:	d389      	s32i.n	a8, a3, 52
400dae78:	0613a2        	l16ui	a10, a3, 12
400dae7b:	dfaf82        	movi	a8, -33
400dae7e:	108a80        	and	a8, a10, a8
400dae81:	065382        	s16i	a8, a3, 12
400dae84:	c07970        	sub	a7, a9, a7
400dae87:	f8d716        	beqz	a7, 400dae18 <_fseeko_r+0x218>
400dae8a:	03bd      	mov.n	a11, a3
400dae8c:	02ad      	mov.n	a10, a2
400dae8e:	d60281        	l32r	a8, 400d0698 <_flash_cache_start+0x680>
400dae91:	0008e0        	callx8	a8
400dae94:	2adc      	bnez.n	a10, 400daeaa <_fseeko_r+0x2aa>
400dae96:	1398      	l32i.n	a9, a3, 4
400dae98:	0e3977        	bltu	a9, a7, 400daeaa <_fseeko_r+0x2aa>
400dae9b:	0328      	l32i.n	a2, a3, 0
400dae9d:	227a      	add.n	a2, a2, a7
400dae9f:	c07970        	sub	a7, a9, a7
400daea2:	0329      	s32i.n	a2, a3, 0
400daea4:	1379      	s32i.n	a7, a3, 4
400daea6:	ffdb86        	j	400dae18 <_fseeko_r+0x218>
400daea9:	03bd00        	lsi	f0, a13, 12
400daeac:	02ad      	mov.n	a10, a2
400daeae:	d5f781        	l32r	a8, 400d068c <_flash_cache_start+0x674>
400daeb1:	0008e0        	callx8	a8
400daeb4:	ca8c      	beqz.n	a10, 400daec4 <_fseeko_r+0x2c4>
400daeb6:	192322        	l32i	a2, a3, 100
400daeb9:	02e207        	bbsi	a2, 0, 400daebf <_fseeko_r+0x2bf>
400daebc:	ff6b46        	j	400dac6d <_fseeko_r+0x6d>
400daebf:	ff6d86        	j	400dac79 <_fseeko_r+0x79>
400daec2:	c20000        	quou	a0, a0, a0
400daec5:	b81021        	l32r	a2, 400c8f08 <_rtc_text_end+0x8f08>
400daec8:	05dd83        	lsi	f8, a13, 20
400daecb:	02ad      	mov.n	a10, a2
400daecd:	0006e0        	callx8	a6
400daed0:	020a66        	bnei	a10, -1, 400daed6 <_fseeko_r+0x2d6>
400daed3:	fff7c6        	j	400daeb6 <_fseeko_r+0x2b6>
400daed6:	0d23b2        	l32i	a11, a3, 52
400daed9:	00fb16        	beqz	a11, 400daeec <_fseeko_r+0x2ec>
400daedc:	44c342        	addi	a4, a3, 68
400daedf:	051b47        	beq	a11, a4, 400daee8 <_fseeko_r+0x2e8>
400daee2:	20a220        	or	a10, a2, a2
400daee5:	a99ae5        	call8	40084894 <_free_r>
400daee8:	020c      	movi.n	a2, 0
400daeea:	d329      	s32i.n	a2, a3, 52
400daeec:	4328      	l32i.n	a2, a3, 16
400daeee:	061342        	l16ui	a4, a3, 12
400daef1:	0329      	s32i.n	a2, a3, 0
400daef3:	d5e421        	l32r	a2, 400d0684 <_flash_cache_start+0x66c>
400daef6:	0b0c      	movi.n	a11, 0
400daef8:	102420        	and	a2, a4, a2
400daefb:	13b9      	s32i.n	a11, a3, 4
400daefd:	065322        	s16i	a2, a3, 12
400daf00:	8c0c      	movi.n	a12, 8
400daf02:	ffc586        	j	400dae1c <_fseeko_r+0x21c>
400daf05:	061342        	l16ui	a4, a3, 12
400daf08:	026497        	bbci	a4, 9, 400daf0e <_fseeko_r+0x30e>
400daf0b:	ffc7c6        	j	400dae2e <_fseeko_r+0x22e>
400daf0e:	58c3a2        	addi	a10, a3, 88
400daf11:	a9c025        	call8	40084b14 <_lock_release_recursive>
400daf14:	f01d      	retw.n
	...

400daf18 <fseeko>:
400daf18:	004136        	entry	a1, 32
400daf1b:	adaae5        	call8	400889c8 <__getreent>
400daf1e:	20b220        	or	a11, a2, a2
400daf21:	20d440        	or	a13, a4, a4
400daf24:	20c330        	or	a12, a3, a3
400daf27:	ffcda5        	call8	400dac00 <_fseeko_r>
400daf2a:	0a2d      	mov.n	a2, a10
400daf2c:	f01d      	retw.n
	...

400daf30 <_putchar_r>:
400daf30:	004136        	entry	a1, 32
400daf33:	a28c      	beqz.n	a2, 400daf41 <_putchar_r+0x11>
400daf35:	6288      	l32i.n	a8, a2, 24
400daf37:	68cc      	bnez.n	a8, 400daf41 <_putchar_r+0x11>
400daf39:	02ad      	mov.n	a10, a2
400daf3b:	d5d381        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400daf3e:	0008e0        	callx8	a8
400daf41:	0222c2        	l32i	a12, a2, 8
400daf44:	20b330        	or	a11, a3, a3
400daf47:	20a220        	or	a10, a2, a2
400daf4a:	00a725        	call8	400db9bc <_putc_r>
400daf4d:	0a2d      	mov.n	a2, a10
400daf4f:	f01d      	retw.n
400daf51:	000000        	ill

400daf54 <putchar>:
400daf54:	004136        	entry	a1, 32
400daf57:	ada725        	call8	400889c8 <__getreent>
400daf5a:	203aa0        	or	a3, a10, a10
400daf5d:	00ba16        	beqz	a10, 400daf6c <putchar+0x18>
400daf60:	062a82        	l32i	a8, a10, 24
400daf63:	005856        	bnez	a8, 400daf6c <putchar+0x18>
400daf66:	d5c881        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400daf69:	0008e0        	callx8	a8
400daf6c:	0223c2        	l32i	a12, a3, 8
400daf6f:	20b220        	or	a11, a2, a2
400daf72:	20a330        	or	a10, a3, a3
400daf75:	00a465        	call8	400db9bc <_putc_r>
400daf78:	0a2d      	mov.n	a2, a10
400daf7a:	f01d      	retw.n

400daf7c <_puts_r>:
400daf7c:	008136        	entry	a1, 64
400daf7f:	20a330        	or	a10, a3, a3
400daf82:	d43f81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400daf85:	0008e0        	callx8	a8
400daf88:	0139      	s32i.n	a3, a1, 0
400daf8a:	d5c431        	l32r	a3, 400d069c <_flash_cache_start+0x684>
400daf8d:	11a9      	s32i.n	a10, a1, 4
400daf8f:	2139      	s32i.n	a3, a1, 8
400daf91:	130c      	movi.n	a3, 1
400daf93:	aa3a      	add.n	a10, a10, a3
400daf95:	3139      	s32i.n	a3, a1, 12
400daf97:	230c      	movi.n	a3, 2
400daf99:	61a9      	s32i.n	a10, a1, 24
400daf9b:	4119      	s32i.n	a1, a1, 16
400daf9d:	5139      	s32i.n	a3, a1, 20
400daf9f:	b28c      	beqz.n	a2, 400dafae <_puts_r+0x32>
400dafa1:	6238      	l32i.n	a3, a2, 24
400dafa3:	73cc      	bnez.n	a3, 400dafae <_puts_r+0x32>
400dafa5:	20a220        	or	a10, a2, a2
400dafa8:	d5b881        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400dafab:	0008e0        	callx8	a8
400dafae:	2238      	l32i.n	a3, a2, 8
400dafb0:	192382        	l32i	a8, a3, 100
400dafb3:	0ee807        	bbsi	a8, 0, 400dafc5 <_puts_r+0x49>
400dafb6:	061382        	l16ui	a8, a3, 12
400dafb9:	08e897        	bbsi	a8, 9, 400dafc5 <_puts_r+0x49>
400dafbc:	58c3a2        	addi	a10, a3, 88
400dafbf:	201110        	or	a1, a1, a1
400dafc2:	a9b165        	call8	40084ad8 <_lock_acquire_recursive>
400dafc5:	061382        	l16ui	a8, a3, 12
400dafc8:	d55e91        	l32r	a9, 400d0540 <_flash_cache_start+0x528>
400dafcb:	23a880        	sext	a10, a8, 15
400dafce:	108980        	and	a8, a9, a8
400dafd1:	f48080        	extui	a8, a8, 0, 16
400dafd4:	08dc      	bnez.n	a8, 400dafe8 <_puts_r+0x6c>
400dafd6:	209a90        	or	a9, a10, a9
400dafd9:	065392        	s16i	a9, a3, 12
400dafdc:	d5b181        	l32r	a8, 400d06a0 <_flash_cache_start+0x688>
400dafdf:	192392        	l32i	a9, a3, 100
400dafe2:	108980        	and	a8, a9, a8
400dafe5:	196382        	s32i	a8, a3, 100
400dafe8:	20a220        	or	a10, a2, a2
400dafeb:	10c1c2        	addi	a12, a1, 16
400dafee:	20b330        	or	a11, a3, a3
400daff1:	d5ac81        	l32r	a8, 400d06a4 <_flash_cache_start+0x68c>
400daff4:	0008e0        	callx8	a8
400daff7:	0aa082        	movi	a8, 10
400daffa:	f27c      	movi.n	a2, -1
400daffc:	8328a0        	moveqz	a2, a8, a10
400dafff:	192382        	l32i	a8, a3, 100
400db002:	0be807        	bbsi	a8, 0, 400db011 <_puts_r+0x95>
400db005:	061382        	l16ui	a8, a3, 12
400db008:	05e897        	bbsi	a8, 9, 400db011 <_puts_r+0x95>
400db00b:	58c3a2        	addi	a10, a3, 88
400db00e:	a9b065        	call8	40084b14 <_lock_release_recursive>
400db011:	f01d      	retw.n
	...

400db014 <puts>:
400db014:	004136        	entry	a1, 32
400db017:	ad9b25        	call8	400889c8 <__getreent>
400db01a:	20b220        	or	a11, a2, a2
400db01d:	fff5e5        	call8	400daf7c <_puts_r>
400db020:	202aa0        	or	a2, a10, a10
400db023:	000090        	retw
	...

400db028 <cleanup_glue>:
400db028:	004136        	entry	a1, 32
400db02b:	03b8      	l32i.n	a11, a3, 0
400db02d:	3b8c      	beqz.n	a11, 400db034 <cleanup_glue+0xc>
400db02f:	02ad      	mov.n	a10, a2
400db031:	ffff65        	call8	400db028 <cleanup_glue>
400db034:	20b330        	or	a11, a3, a3
400db037:	20a220        	or	a10, a2, a2
400db03a:	a985a5        	call8	40084894 <_free_r>
400db03d:	000090        	retw

400db040 <_reclaim_reent>:
400db040:	004136        	entry	a1, 32
400db043:	ad9865        	call8	400889c8 <__getreent>
400db046:	0292a7        	bne	a2, a10, 400db04c <_reclaim_reent+0xc>
400db049:	003046        	j	400db10e <_reclaim_reent+0xce>
400db04c:	092232        	l32i	a3, a2, 36
400db04f:	037316        	beqz	a3, 400db08a <_reclaim_reent+0x4a>
400db052:	032332        	l32i	a3, a3, 12
400db055:	63ac      	beqz.n	a3, 400db07f <_reclaim_reent+0x3f>
400db057:	030c      	movi.n	a3, 0
400db059:	9248      	l32i.n	a4, a2, 36
400db05b:	3488      	l32i.n	a8, a4, 12
400db05d:	883a      	add.n	a8, a8, a3
400db05f:	08b8      	l32i.n	a11, a8, 0
400db061:	000246        	j	400db06e <_reclaim_reent+0x2e>
400db064:	002b42        	l32i	a4, a11, 0
400db067:	02ad      	mov.n	a10, a2
400db069:	a982a5        	call8	40084894 <_free_r>
400db06c:	04bd      	mov.n	a11, a4
400db06e:	ff2b56        	bnez	a11, 400db064 <_reclaim_reent+0x24>
400db071:	334b      	addi.n	a3, a3, 4
400db073:	e2e366        	bnei	a3, 128, 400db059 <_reclaim_reent+0x19>
400db076:	9238      	l32i.n	a3, a2, 36
400db078:	02ad      	mov.n	a10, a2
400db07a:	33b8      	l32i.n	a11, a3, 12
400db07c:	a98165        	call8	40084894 <_free_r>
400db07f:	9238      	l32i.n	a3, a2, 36
400db081:	03b8      	l32i.n	a11, a3, 0
400db083:	3b8c      	beqz.n	a11, 400db08a <_reclaim_reent+0x4a>
400db085:	02ad      	mov.n	a10, a2
400db087:	a980e5        	call8	40084894 <_free_r>
400db08a:	0522b2        	l32i	a11, a2, 20
400db08d:	005b16        	beqz	a11, 400db096 <_reclaim_reent+0x56>
400db090:	20a220        	or	a10, a2, a2
400db093:	a98025        	call8	40084894 <_free_r>
400db096:	0922b2        	l32i	a11, a2, 36
400db099:	005b16        	beqz	a11, 400db0a2 <_reclaim_reent+0x62>
400db09c:	20a220        	or	a10, a2, a2
400db09f:	a97f65        	call8	40084894 <_free_r>
400db0a2:	0e22b2        	l32i	a11, a2, 56
400db0a5:	005b16        	beqz	a11, 400db0ae <_reclaim_reent+0x6e>
400db0a8:	20a220        	or	a10, a2, a2
400db0ab:	a97ea5        	call8	40084894 <_free_r>
400db0ae:	f2b8      	l32i.n	a11, a2, 60
400db0b0:	004b16        	beqz	a11, 400db0b8 <_reclaim_reent+0x78>
400db0b3:	02ad      	mov.n	a10, a2
400db0b5:	a97de5        	call8	40084894 <_free_r>
400db0b8:	1022b2        	l32i	a11, a2, 64
400db0bb:	6b8c      	beqz.n	a11, 400db0c5 <_reclaim_reent+0x85>
400db0bd:	02ad      	mov.n	a10, a2
400db0bf:	201110        	or	a1, a1, a1
400db0c2:	a97d25        	call8	40084894 <_free_r>
400db0c5:	3b22b2        	l32i	a11, a2, 236
400db0c8:	004b16        	beqz	a11, 400db0d0 <_reclaim_reent+0x90>
400db0cb:	02ad      	mov.n	a10, a2
400db0cd:	a97c65        	call8	40084894 <_free_r>
400db0d0:	3a22b2        	l32i	a11, a2, 232
400db0d3:	6b8c      	beqz.n	a11, 400db0dd <_reclaim_reent+0x9d>
400db0d5:	02ad      	mov.n	a10, a2
400db0d7:	201110        	or	a1, a1, a1
400db0da:	a97ba5        	call8	40084894 <_free_r>
400db0dd:	122232        	l32i	a3, a2, 72
400db0e0:	938c      	beqz.n	a3, 400db0ed <_reclaim_reent+0xad>
400db0e2:	2223b2        	l32i	a11, a3, 136
400db0e5:	004b16        	beqz	a11, 400db0ed <_reclaim_reent+0xad>
400db0e8:	02ad      	mov.n	a10, a2
400db0ea:	a97aa5        	call8	40084894 <_free_r>
400db0ed:	0d22b2        	l32i	a11, a2, 52
400db0f0:	005b16        	beqz	a11, 400db0f9 <_reclaim_reent+0xb9>
400db0f3:	20a220        	or	a10, a2, a2
400db0f6:	a979e5        	call8	40084894 <_free_r>
400db0f9:	6238      	l32i.n	a3, a2, 24
400db0fb:	f38c      	beqz.n	a3, 400db10e <_reclaim_reent+0xce>
400db0fd:	a238      	l32i.n	a3, a2, 40
400db0ff:	02ad      	mov.n	a10, a2
400db101:	0003e0        	callx8	a3
400db104:	3622b2        	l32i	a11, a2, 216
400db107:	3b8c      	beqz.n	a11, 400db10e <_reclaim_reent+0xce>
400db109:	02ad      	mov.n	a10, a2
400db10b:	fff1e5        	call8	400db028 <cleanup_glue>
400db10e:	f01d      	retw.n

400db110 <__sflags>:
400db110:	004136        	entry	a1, 32
400db113:	000352        	l8ui	a5, a3, 0
400db116:	72a062        	movi	a6, 114
400db119:	241567        	beq	a5, a6, 400db141 <__sflags+0x31>
400db11c:	77a062        	movi	a6, 119
400db11f:	091567        	beq	a5, a6, 400db12c <__sflags+0x1c>
400db122:	61a062        	movi	a6, 97
400db125:	2f9567        	bne	a5, a6, 400db158 <__sflags+0x48>
400db128:	000286        	j	400db136 <__sflags+0x26>
400db12b:	a69200        	lsi	f0, a2, 0x298
400db12e:	180c00        	lsxp	f0, a12, a0
400db131:	820c      	movi.n	a2, 8
400db133:	000406        	j	400db147 <__sflags+0x37>
400db136:	08a292        	movi	a9, 0x208
400db139:	180c      	movi.n	a8, 1
400db13b:	08a122        	movi	a2, 0x108
400db13e:	000146        	j	400db147 <__sflags+0x37>
400db141:	090c      	movi.n	a9, 0
400db143:	098d      	mov.n	a8, a9
400db145:	420c      	movi.n	a2, 4
400db147:	b72c      	movi.n	a7, 43
400db149:	3c6c      	movi.n	a12, -29
400db14b:	0d1c      	movi.n	a13, 16
400db14d:	ce7c      	movi.n	a14, -4
400db14f:	2f0c      	movi.n	a15, 2
400db151:	78a052        	movi	a5, 120
400db154:	000a06        	j	400db180 <__sflags+0x70>
400db157:	631c00        	minu	a1, a12, a0
400db15a:	0239      	s32i.n	a3, a2, 0
400db15c:	020c      	movi.n	a2, 0
400db15e:	f01d      	retw.n
400db160:	101a77        	beq	a10, a7, 400db174 <__sflags+0x64>
400db163:	d545b1        	l32r	a11, 400d0678 <_flash_cache_start+0x660>
400db166:	c0aa50        	sub	a10, a10, a5
400db169:	2068b0        	or	a6, a8, a11
400db16c:	8386a0        	moveqz	a8, a6, a10
400db16f:	000346        	j	400db180 <__sflags+0x70>
400db172:	c00000        	sub	a0, a0, a0
400db175:	e01022        	l16ui	a2, a0, 0x1c0
400db178:	1088      	l32i.n	a8, a0, 4
400db17a:	2022d0        	or	a2, a2, a13
400db17d:	2088f0        	or	a8, a8, a15
400db180:	331b      	addi.n	a3, a3, 1
400db182:	0003a2        	l8ui	a10, a3, 0
400db185:	fd7a56        	bnez	a10, 400db160 <__sflags+0x50>
400db188:	208890        	or	a8, a8, a9
400db18b:	0489      	s32i.n	a8, a4, 0
400db18d:	f01d      	retw.n
	...

400db190 <_Balloc>:
400db190:	004136        	entry	a1, 32
400db193:	9248      	l32i.n	a4, a2, 36
400db195:	011456        	bnez	a4, 400db1aa <_Balloc+0x1a>
400db198:	0a1c      	movi.n	a10, 16
400db19a:	d3d281        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400db19d:	0008e0        	callx8	a8
400db1a0:	92a9      	s32i.n	a10, a2, 36
400db1a2:	1a49      	s32i.n	a4, a10, 4
400db1a4:	2a49      	s32i.n	a4, a10, 8
400db1a6:	0a49      	s32i.n	a4, a10, 0
400db1a8:	3a49      	s32i.n	a4, a10, 12
400db1aa:	9248      	l32i.n	a4, a2, 36
400db1ac:	3488      	l32i.n	a8, a4, 12
400db1ae:	c88c      	beqz.n	a8, 400db1be <_Balloc+0x2e>
400db1b0:	9248      	l32i.n	a4, a2, 36
400db1b2:	3448      	l32i.n	a4, a4, 12
400db1b4:	a04340        	addx4	a4, a3, a4
400db1b7:	04a8      	l32i.n	a10, a4, 0
400db1b9:	7adc      	bnez.n	a10, 400db1d4 <_Balloc+0x44>
400db1bb:	000706        	j	400db1db <_Balloc+0x4b>
400db1be:	1c2c      	movi.n	a12, 33
400db1c0:	4b0c      	movi.n	a11, 4
400db1c2:	02ad      	mov.n	a10, a2
400db1c4:	a96ee5        	call8	400848b4 <_calloc_r>
400db1c7:	34a9      	s32i.n	a10, a4, 12
400db1c9:	9248      	l32i.n	a4, a2, 36
400db1cb:	3448      	l32i.n	a4, a4, 12
400db1cd:	fdf456        	bnez	a4, 400db1b0 <_Balloc+0x20>
400db1d0:	020c      	movi.n	a2, 0
400db1d2:	f01d      	retw.n
400db1d4:	0a28      	l32i.n	a2, a10, 0
400db1d6:	0429      	s32i.n	a2, a4, 0
400db1d8:	0006c6        	j	400db1f7 <_Balloc+0x67>
400db1db:	01a0b2        	movi	a11, 1
400db1de:	401300        	ssl	a3
400db1e1:	a14b00        	sll	a4, a11
400db1e4:	05c4c2        	addi	a12, a4, 5
400db1e7:	11cce0        	slli	a12, a12, 2
400db1ea:	20a220        	or	a10, a2, a2
400db1ed:	a96c65        	call8	400848b4 <_calloc_r>
400db1f0:	fdca16        	beqz	a10, 400db1d0 <_Balloc+0x40>
400db1f3:	1a39      	s32i.n	a3, a10, 4
400db1f5:	2a49      	s32i.n	a4, a10, 8
400db1f7:	020c      	movi.n	a2, 0
400db1f9:	4a29      	s32i.n	a2, a10, 16
400db1fb:	3a29      	s32i.n	a2, a10, 12
400db1fd:	0a2d      	mov.n	a2, a10
400db1ff:	f01d      	retw.n
400db201:	000000        	ill

400db204 <_Bfree>:
400db204:	004136        	entry	a1, 32
400db207:	9248      	l32i.n	a4, a2, 36
400db209:	011456        	bnez	a4, 400db21e <_Bfree+0x1a>
400db20c:	0a1c      	movi.n	a10, 16
400db20e:	d3b581        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400db211:	0008e0        	callx8	a8
400db214:	92a9      	s32i.n	a10, a2, 36
400db216:	1a49      	s32i.n	a4, a10, 4
400db218:	2a49      	s32i.n	a4, a10, 8
400db21a:	0a49      	s32i.n	a4, a10, 0
400db21c:	3a49      	s32i.n	a4, a10, 12
400db21e:	e38c      	beqz.n	a3, 400db230 <_Bfree+0x2c>
400db220:	9228      	l32i.n	a2, a2, 36
400db222:	1348      	l32i.n	a4, a3, 4
400db224:	3228      	l32i.n	a2, a2, 12
400db226:	a04420        	addx4	a4, a4, a2
400db229:	0428      	l32i.n	a2, a4, 0
400db22b:	0329      	s32i.n	a2, a3, 0
400db22d:	006432        	s32i	a3, a4, 0
400db230:	f01d      	retw.n
	...

400db234 <__multadd>:
400db234:	004136        	entry	a1, 32
400db237:	4368      	l32i.n	a6, a3, 16
400db239:	190c      	movi.n	a9, 1
400db23b:	14c3b2        	addi	a11, a3, 20
400db23e:	539960        	max	a9, a9, a6
400db241:	238976        	loop	a9, 400db268 <__multadd+0x34>
400db244:	0ba8      	l32i.n	a10, a11, 0
400db246:	f480a0        	extui	a8, a10, 0, 16
400db249:	828840        	mull	a8, a8, a4
400db24c:	f5a0a0        	extui	a10, a10, 16, 16
400db24f:	885a      	add.n	a8, a8, a5
400db251:	82aa40        	mull	a10, a10, a4
400db254:	f55080        	extui	a5, a8, 16, 16
400db257:	aa5a      	add.n	a10, a10, a5
400db259:	f550a0        	extui	a5, a10, 16, 16
400db25c:	f48080        	extui	a8, a8, 0, 16
400db25f:	11aa00        	slli	a10, a10, 16
400db262:	8a8a      	add.n	a8, a10, a8
400db264:	0b89      	s32i.n	a8, a11, 0
400db266:	bb4b      	addi.n	a11, a11, 4
400db268:	55bc      	beqz.n	a5, 400db2a1 <__multadd+0x6d>
400db26a:	2348      	l32i.n	a4, a3, 8
400db26c:	282647        	blt	a6, a4, 400db298 <__multadd+0x64>
400db26f:	13b8      	l32i.n	a11, a3, 4
400db271:	02ad      	mov.n	a10, a2
400db273:	01cbb2        	addi	a11, a11, 1
400db276:	fff1a5        	call8	400db190 <_Balloc>
400db279:	43c8      	l32i.n	a12, a3, 16
400db27b:	b3cb      	addi.n	a11, a3, 12
400db27d:	cc2b      	addi.n	a12, a12, 2
400db27f:	204aa0        	or	a4, a10, a10
400db282:	11cce0        	slli	a12, a12, 2
400db285:	0ccaa2        	addi	a10, a10, 12
400db288:	d38281        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400db28b:	0008e0        	callx8	a8
400db28e:	03bd      	mov.n	a11, a3
400db290:	20a220        	or	a10, a2, a2
400db293:	fff725        	call8	400db204 <_Bfree>
400db296:	043d      	mov.n	a3, a4
400db298:	a02630        	addx4	a2, a6, a3
400db29b:	5259      	s32i.n	a5, a2, 20
400db29d:	661b      	addi.n	a6, a6, 1
400db29f:	4369      	s32i.n	a6, a3, 16
400db2a1:	032d      	mov.n	a2, a3
400db2a3:	f01d      	retw.n
400db2a5:	000000        	ill

400db2a8 <__s2b>:
400db2a8:	004136        	entry	a1, 32
400db2ab:	d4ff91        	l32r	a9, 400d06a8 <_flash_cache_start+0x690>
400db2ae:	858b      	addi.n	a8, a5, 8
400db2b0:	b29890        	mulsh	a9, a8, a9
400db2b3:	318f80        	srai	a8, a8, 31
400db2b6:	219190        	srai	a9, a9, 1
400db2b9:	c08980        	sub	a8, a9, a8
400db2bc:	170c      	movi.n	a7, 1
400db2be:	0b0c      	movi.n	a11, 0
400db2c0:	000146        	j	400db2c9 <__s2b+0x21>
400db2c3:	77f000        	lsi	f0, a0, 0x1dc
400db2c6:	bb1b11        	l32r	a1, 400c9f34 <_rtc_text_end+0x9f34>
400db2c9:	f72787        	blt	a7, a8, 400db2c4 <__s2b+0x1c>
400db2cc:	02ad      	mov.n	a10, a2
400db2ce:	ffec25        	call8	400db190 <_Balloc>
400db2d1:	5a69      	s32i.n	a6, a10, 20
400db2d3:	160c      	movi.n	a6, 1
400db2d5:	4a69      	s32i.n	a6, a10, 16
400db2d7:	960c      	movi.n	a6, 9
400db2d9:	23a647        	bge	a6, a4, 400db300 <__s2b+0x58>
400db2dc:	806360        	add	a6, a3, a6
400db2df:	067d      	mov.n	a7, a6
400db2e1:	803340        	add	a3, a3, a4
400db2e4:	0007d2        	l8ui	a13, a7, 0
400db2e7:	0abd      	mov.n	a11, a10
400db2e9:	d0cdd2        	addi	a13, a13, -48
400db2ec:	ac0c      	movi.n	a12, 10
400db2ee:	02ad      	mov.n	a10, a2
400db2f0:	771b      	addi.n	a7, a7, 1
400db2f2:	fff425        	call8	400db234 <__multadd>
400db2f5:	eb9737        	bne	a7, a3, 400db2e4 <__s2b+0x3c>
400db2f8:	364a      	add.n	a3, a6, a4
400db2fa:	f8c332        	addi	a3, a3, -8
400db2fd:	0000c6        	j	400db304 <__s2b+0x5c>
400db300:	33ab      	addi.n	a3, a3, 10
400db302:	064d      	mov.n	a4, a6
400db304:	c04430        	sub	a4, a4, a3
400db307:	0004c6        	j	400db31e <__s2b+0x76>
400db30a:	000000        	ill
400db30d:	0003d2        	l8ui	a13, a3, 0
400db310:	0abd      	mov.n	a11, a10
400db312:	d0cdd2        	addi	a13, a13, -48
400db315:	ac0c      	movi.n	a12, 10
400db317:	02ad      	mov.n	a10, a2
400db319:	fff1a5        	call8	400db234 <__multadd>
400db31c:	331b      	addi.n	a3, a3, 1
400db31e:	643a      	add.n	a6, a4, a3
400db320:	e92657        	blt	a6, a5, 400db30d <__s2b+0x65>
400db323:	0a2d      	mov.n	a2, a10
400db325:	f01d      	retw.n
	...

400db328 <__hi0bits>:
400db328:	004136        	entry	a1, 32
400db32b:	208220        	or	a8, a2, a2
400db32e:	d4df21        	l32r	a2, 400d06ac <_flash_cache_start+0x694>
400db331:	00a092        	movi	a9, 0
400db334:	058827        	bany	a8, a2, 400db33d <__hi0bits+0x15>
400db337:	118800        	slli	a8, a8, 16
400db33a:	10a092        	movi	a9, 16
400db33d:	d4dc21        	l32r	a2, 400d06b0 <_flash_cache_start+0x698>
400db340:	058827        	bany	a8, a2, 400db349 <__hi0bits+0x21>
400db343:	08c992        	addi	a9, a9, 8
400db346:	118880        	slli	a8, a8, 8
400db349:	d4da21        	l32r	a2, 400d06b4 <_flash_cache_start+0x69c>
400db34c:	058827        	bany	a8, a2, 400db355 <__hi0bits+0x2d>
400db34f:	04c992        	addi	a9, a9, 4
400db352:	1188c0        	slli	a8, a8, 4
400db355:	d35521        	l32r	a2, 400d00ac <_flash_cache_start+0x94>
400db358:	048827        	bany	a8, a2, 400db360 <__hi0bits+0x38>
400db35b:	992b      	addi.n	a9, a9, 2
400db35d:	1188e0        	slli	a8, a8, 2
400db360:	092d      	mov.n	a2, a9
400db362:	00c896        	bltz	a8, 400db372 <__hi0bits+0x4a>
400db365:	d4d421        	l32r	a2, 400d06b8 <_flash_cache_start+0x6a0>
400db368:	991b      	addi.n	a9, a9, 1
400db36a:	108820        	and	a8, a8, a2
400db36d:	022c      	movi.n	a2, 32
400db36f:	932980        	movnez	a2, a9, a8
400db372:	f01d      	retw.n

400db374 <__lo0bits>:
400db374:	004136        	entry	a1, 32
400db377:	0288      	l32i.n	a8, a2, 0
400db379:	02ad      	mov.n	a10, a2
400db37b:	249080        	extui	a9, a8, 0, 3
400db37e:	a99c      	beqz.n	a9, 400db39c <__lo0bits+0x28>
400db380:	020c      	movi.n	a2, 0
400db382:	56d827        	bbs	a8, a2, 400db3dc <__lo0bits+0x68>
400db385:	290c      	movi.n	a9, 2
400db387:	090897        	bnone	a8, a9, 400db394 <__lo0bits+0x20>
400db38a:	418180        	srli	a8, a8, 1
400db38d:	0a89      	s32i.n	a8, a10, 0
400db38f:	120c      	movi.n	a2, 1
400db391:	f01d      	retw.n
400db393:	828000        	mull	a8, a0, a0
400db396:	0f4641        	l32r	a4, 4009f0b0 <_iram_end+0x1155c>
400db399:	000000        	ill
400db39c:	f42080        	extui	a2, a8, 0, 16
400db39f:	005256        	bnez	a2, 400db3a8 <__lo0bits+0x34>
400db3a2:	f58080        	extui	a8, a8, 16, 16
400db3a5:	10a092        	movi	a9, 16
400db3a8:	742080        	extui	a2, a8, 0, 8
400db3ab:	005256        	bnez	a2, 400db3b4 <__lo0bits+0x40>
400db3ae:	08c992        	addi	a9, a9, 8
400db3b1:	418880        	srli	a8, a8, 8
400db3b4:	342080        	extui	a2, a8, 0, 4
400db3b7:	005256        	bnez	a2, 400db3c0 <__lo0bits+0x4c>
400db3ba:	04c992        	addi	a9, a9, 4
400db3bd:	418480        	srli	a8, a8, 4
400db3c0:	142080        	extui	a2, a8, 0, 2
400db3c3:	005256        	bnez	a2, 400db3cc <__lo0bits+0x58>
400db3c6:	02c992        	addi	a9, a9, 2
400db3c9:	418280        	srli	a8, a8, 2
400db3cc:	08e807        	bbsi	a8, 0, 400db3d8 <__lo0bits+0x64>
400db3cf:	418180        	srli	a8, a8, 1
400db3d2:	022c      	movi.n	a2, 32
400db3d4:	488c      	beqz.n	a8, 400db3dc <__lo0bits+0x68>
400db3d6:	991b      	addi.n	a9, a9, 1
400db3d8:	0a89      	s32i.n	a8, a10, 0
400db3da:	092d      	mov.n	a2, a9
400db3dc:	f01d      	retw.n
	...

400db3e0 <__i2b>:
400db3e0:	004136        	entry	a1, 32
400db3e3:	1b0c      	movi.n	a11, 1
400db3e5:	02ad      	mov.n	a10, a2
400db3e7:	ffdaa5        	call8	400db190 <_Balloc>
400db3ea:	180c      	movi.n	a8, 1
400db3ec:	5a39      	s32i.n	a3, a10, 20
400db3ee:	4a89      	s32i.n	a8, a10, 16
400db3f0:	0a2d      	mov.n	a2, a10
400db3f2:	f01d      	retw.n

400db3f4 <__multiply>:
400db3f4:	006136        	entry	a1, 48
400db3f7:	4368      	l32i.n	a6, a3, 16
400db3f9:	4458      	l32i.n	a5, a4, 16
400db3fb:	06a657        	bge	a6, a5, 400db405 <__multiply+0x11>
400db3fe:	035d      	mov.n	a5, a3
400db400:	203440        	or	a3, a4, a4
400db403:	054d      	mov.n	a4, a5
400db405:	4378      	l32i.n	a7, a3, 16
400db407:	4468      	l32i.n	a6, a4, 16
400db409:	2388      	l32i.n	a8, a3, 8
400db40b:	576a      	add.n	a5, a7, a6
400db40d:	0123b2        	l32i	a11, a3, 4
400db410:	01a857        	bge	a8, a5, 400db415 <__multiply+0x21>
400db413:	bb1b      	addi.n	a11, a11, 1
400db415:	02ad      	mov.n	a10, a2
400db417:	ffd7a5        	call8	400db190 <_Balloc>
400db41a:	14cab2        	addi	a11, a10, 20
400db41d:	a0e5b0        	addx4	a14, a5, a11
400db420:	0b2d      	mov.n	a2, a11
400db422:	080c      	movi.n	a8, 0
400db424:	000106        	j	400db42c <__multiply+0x38>
400db427:	028900        	andb	b8, b9, b0
400db42a:	224b      	addi.n	a2, a2, 4
400db42c:	f832e7        	bltu	a2, a14, 400db428 <__multiply+0x34>
400db42f:	14c332        	addi	a3, a3, 20
400db432:	14c442        	addi	a4, a4, 20
400db435:	a02730        	addx4	a2, a7, a3
400db438:	a06640        	addx4	a6, a6, a4
400db43b:	0129      	s32i.n	a2, a1, 0
400db43d:	1169      	s32i.n	a6, a1, 4
400db43f:	002586        	j	400db4d9 <__multiply+0xe5>
400db442:	c20000        	quou	a0, a0, a0
400db445:	160014        	lsi	f1, a0, 88
400db448:	045c      	movi.n	a4, 80
400db44a:	0b7d      	mov.n	a7, a11
400db44c:	208330        	or	a8, a3, a3
400db44f:	00a092        	movi	a9, 0
400db452:	0868      	l32i.n	a6, a8, 0
400db454:	07f8      	l32i.n	a15, a7, 0
400db456:	f4d060        	extui	a13, a6, 0, 16
400db459:	82ddc0        	mull	a13, a13, a12
400db45c:	f420f0        	extui	a2, a15, 0, 16
400db45f:	f56060        	extui	a6, a6, 16, 16
400db462:	2d2a      	add.n	a2, a13, a2
400db464:	8266c0        	mull	a6, a6, a12
400db467:	229a      	add.n	a2, a2, a9
400db469:	f590f0        	extui	a9, a15, 16, 16
400db46c:	669a      	add.n	a6, a6, a9
400db46e:	f59020        	extui	a9, a2, 16, 16
400db471:	669a      	add.n	a6, a6, a9
400db473:	f59060        	extui	a9, a6, 16, 16
400db476:	f42020        	extui	a2, a2, 0, 16
400db479:	116600        	slli	a6, a6, 16
400db47c:	202620        	or	a2, a6, a2
400db47f:	0729      	s32i.n	a2, a7, 0
400db481:	0128      	l32i.n	a2, a1, 0
400db483:	2179      	s32i.n	a7, a1, 8
400db485:	884b      	addi.n	a8, a8, 4
400db487:	774b      	addi.n	a7, a7, 4
400db489:	c53827        	bltu	a8, a2, 400db452 <__multiply+0x5e>
400db48c:	21d8      	l32i.n	a13, a1, 8
400db48e:	1d99      	s32i.n	a9, a13, 4
400db490:	0114f2        	l16ui	a15, a4, 2
400db493:	efbc      	beqz.n	a15, 400db4d5 <__multiply+0xe1>
400db495:	0b88      	l32i.n	a8, a11, 0
400db497:	03dd      	mov.n	a13, a3
400db499:	0bcd      	mov.n	a12, a11
400db49b:	060c      	movi.n	a6, 0
400db49d:	001d22        	l16ui	a2, a13, 0
400db4a0:	011c92        	l16ui	a9, a12, 2
400db4a3:	8222f0        	mull	a2, a2, a15
400db4a6:	f48080        	extui	a8, a8, 0, 16
400db4a9:	929a      	add.n	a9, a2, a9
400db4ab:	696a      	add.n	a6, a9, a6
400db4ad:	112600        	slli	a2, a6, 16
400db4b0:	208280        	or	a8, a2, a8
400db4b3:	0c89      	s32i.n	a8, a12, 0
400db4b5:	011d82        	l16ui	a8, a13, 2
400db4b8:	021c22        	l16ui	a2, a12, 4
400db4bb:	8288f0        	mull	a8, a8, a15
400db4be:	f56060        	extui	a6, a6, 16, 16
400db4c1:	882a      	add.n	a8, a8, a2
400db4c3:	0128      	l32i.n	a2, a1, 0
400db4c5:	886a      	add.n	a8, a8, a6
400db4c7:	dd4b      	addi.n	a13, a13, 4
400db4c9:	0c7d      	mov.n	a7, a12
400db4cb:	f56080        	extui	a6, a8, 16, 16
400db4ce:	cc4b      	addi.n	a12, a12, 4
400db4d0:	c93d27        	bltu	a13, a2, 400db49d <__multiply+0xa9>
400db4d3:	1789      	s32i.n	a8, a7, 4
400db4d5:	444b      	addi.n	a4, a4, 4
400db4d7:	bb4b      	addi.n	a11, a11, 4
400db4d9:	11d8      	l32i.n	a13, a1, 4
400db4db:	02b4d7        	bgeu	a4, a13, 400db4e1 <__multiply+0xed>
400db4de:	ffd886        	j	400db444 <__multiply+0x50>
400db4e1:	000046        	j	400db4e6 <__multiply+0xf2>
400db4e4:	550b      	addi.n	a5, a5, -1
400db4e6:	0715a6        	blti	a5, 1, 400db4f1 <__multiply+0xfd>
400db4e9:	fccee2        	addi	a14, a14, -4
400db4ec:	0e28      	l32i.n	a2, a14, 0
400db4ee:	ff2216        	beqz	a2, 400db4e4 <__multiply+0xf0>
400db4f1:	4a59      	s32i.n	a5, a10, 16
400db4f3:	0a2d      	mov.n	a2, a10
400db4f5:	f01d      	retw.n
	...

400db4f8 <__pow5mult>:
400db4f8:	004136        	entry	a1, 32
400db4fb:	145040        	extui	a5, a4, 0, 2
400db4fe:	459c      	beqz.n	a5, 400db516 <__pow5mult+0x1e>
400db500:	d46f61        	l32r	a6, 400d06bc <_flash_cache_start+0x6a4>
400db503:	550b      	addi.n	a5, a5, -1
400db505:	a05560        	addx4	a5, a5, a6
400db508:	05c8      	l32i.n	a12, a5, 0
400db50a:	03bd      	mov.n	a11, a3
400db50c:	00a0d2        	movi	a13, 0
400db50f:	02ad      	mov.n	a10, a2
400db511:	ffd225        	call8	400db234 <__multadd>
400db514:	0a3d      	mov.n	a3, a10
400db516:	214240        	srai	a4, a4, 2
400db519:	067416        	beqz	a4, 400db584 <__pow5mult+0x8c>
400db51c:	9258      	l32i.n	a5, a2, 36
400db51e:	05dc      	bnez.n	a5, 400db532 <__pow5mult+0x3a>
400db520:	0a1c      	movi.n	a10, 16
400db522:	d2f081        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400db525:	0008e0        	callx8	a8
400db528:	92a9      	s32i.n	a10, a2, 36
400db52a:	1a59      	s32i.n	a5, a10, 4
400db52c:	2a59      	s32i.n	a5, a10, 8
400db52e:	0a59      	s32i.n	a5, a10, 0
400db530:	3a59      	s32i.n	a5, a10, 12
400db532:	9268      	l32i.n	a6, a2, 36
400db534:	2658      	l32i.n	a5, a6, 8
400db536:	e5cc      	bnez.n	a5, 400db548 <__pow5mult+0x50>
400db538:	71a2b2        	movi	a11, 0x271
400db53b:	02ad      	mov.n	a10, a2
400db53d:	ffea25        	call8	400db3e0 <__i2b>
400db540:	26a9      	s32i.n	a10, a6, 8
400db542:	060c      	movi.n	a6, 0
400db544:	0a5d      	mov.n	a5, a10
400db546:	0a69      	s32i.n	a6, a10, 0
400db548:	060c      	movi.n	a6, 0
400db54a:	000086        	j	400db550 <__pow5mult+0x58>
400db54d:	0a5d00        	add.s	f5, f13, f0
400db550:	156407        	bbci	a4, 0, 400db569 <__pow5mult+0x71>
400db553:	03bd      	mov.n	a11, a3
400db555:	05cd      	mov.n	a12, a5
400db557:	02ad      	mov.n	a10, a2
400db559:	ffe9a5        	call8	400db3f4 <__multiply>
400db55c:	0a7d      	mov.n	a7, a10
400db55e:	03bd      	mov.n	a11, a3
400db560:	20a220        	or	a10, a2, a2
400db563:	ffca25        	call8	400db204 <_Bfree>
400db566:	203770        	or	a3, a7, a7
400db569:	214140        	srai	a4, a4, 1
400db56c:	449c      	beqz.n	a4, 400db584 <__pow5mult+0x8c>
400db56e:	05a8      	l32i.n	a10, a5, 0
400db570:	fdaa56        	bnez	a10, 400db54e <__pow5mult+0x56>
400db573:	05cd      	mov.n	a12, a5
400db575:	05bd      	mov.n	a11, a5
400db577:	02ad      	mov.n	a10, a2
400db579:	ffe7a5        	call8	400db3f4 <__multiply>
400db57c:	05a9      	s32i.n	a10, a5, 0
400db57e:	0a69      	s32i.n	a6, a10, 0
400db580:	fff286        	j	400db54e <__pow5mult+0x56>
400db583:	032d00        	lsi	f0, a13, 12
400db586:	f01d      	retw.n

400db588 <__lshift>:
400db588:	006136        	entry	a1, 48
400db58b:	215540        	srai	a5, a4, 5
400db58e:	04cd      	mov.n	a12, a4
400db590:	4348      	l32i.n	a4, a3, 16
400db592:	13b8      	l32i.n	a11, a3, 4
400db594:	454a      	add.n	a4, a5, a4
400db596:	741b      	addi.n	a7, a4, 1
400db598:	2368      	l32i.n	a6, a3, 8
400db59a:	000106        	j	400db5a2 <__lshift+0x1a>
400db59d:	bb1b      	addi.n	a11, a11, 1
400db59f:	1166f0        	slli	a6, a6, 1
400db5a2:	f72677        	blt	a6, a7, 400db59d <__lshift+0x15>
400db5a5:	02ad      	mov.n	a10, a2
400db5a7:	01c9      	s32i.n	a12, a1, 0
400db5a9:	ffbe65        	call8	400db190 <_Balloc>
400db5ac:	14cad2        	addi	a13, a10, 20
400db5af:	090c      	movi.n	a9, 0
400db5b1:	0a6d      	mov.n	a6, a10
400db5b3:	0dbd      	mov.n	a11, a13
400db5b5:	098d      	mov.n	a8, a9
400db5b7:	01c8      	l32i.n	a12, a1, 0
400db5b9:	000146        	j	400db5c2 <__lshift+0x3a>
400db5bc:	0b89      	s32i.n	a8, a11, 0
400db5be:	991b      	addi.n	a9, a9, 1
400db5c0:	bb4b      	addi.n	a11, a11, 4
400db5c2:	0a0c      	movi.n	a10, 0
400db5c4:	f42957        	blt	a9, a5, 400db5bc <__lshift+0x34>
400db5c7:	43b8      	l32i.n	a11, a3, 16
400db5c9:	5385a0        	max	a8, a5, a10
400db5cc:	14c392        	addi	a9, a3, 20
400db5cf:	4450c0        	extui	a5, a12, 0, 5
400db5d2:	a088d0        	addx4	a8, a8, a13
400db5d5:	a0bb90        	addx4	a11, a11, a9
400db5d8:	2c15a7        	beq	a5, a10, 400db608 <__lshift+0x80>
400db5db:	0c2c      	movi.n	a12, 32
400db5dd:	c0cc50        	sub	a12, a12, a5
400db5e0:	09d8      	l32i.n	a13, a9, 0
400db5e2:	08ed      	mov.n	a14, a8
400db5e4:	401500        	ssl	a5
400db5e7:	a1dd00        	sll	a13, a13
400db5ea:	20ada0        	or	a10, a13, a10
400db5ed:	08a9      	s32i.n	a10, a8, 0
400db5ef:	09a8      	l32i.n	a10, a9, 0
400db5f1:	994b      	addi.n	a9, a9, 4
400db5f3:	400c00        	ssr	a12
400db5f6:	91a0a0        	srl	a10, a10
400db5f9:	884b      	addi.n	a8, a8, 4
400db5fb:	e139b7        	bltu	a9, a11, 400db5e0 <__lshift+0x58>
400db5fe:	442b      	addi.n	a4, a4, 2
400db600:	1ea9      	s32i.n	a10, a14, 4
400db602:	9374a0        	movnez	a7, a4, a10
400db605:	000286        	j	400db613 <__lshift+0x8b>
400db608:	0948      	l32i.n	a4, a9, 0
400db60a:	994b      	addi.n	a9, a9, 4
400db60c:	0849      	s32i.n	a4, a8, 0
400db60e:	884b      	addi.n	a8, a8, 4
400db610:	f439b7        	bltu	a9, a11, 400db608 <__lshift+0x80>
400db613:	570b      	addi.n	a5, a7, -1
400db615:	02ad      	mov.n	a10, a2
400db617:	4659      	s32i.n	a5, a6, 16
400db619:	03bd      	mov.n	a11, a3
400db61b:	ffbea5        	call8	400db204 <_Bfree>
400db61e:	062d      	mov.n	a2, a6
400db620:	f01d      	retw.n
	...

400db624 <__mcmp>:
400db624:	004136        	entry	a1, 32
400db627:	4288      	l32i.n	a8, a2, 16
400db629:	4398      	l32i.n	a9, a3, 16
400db62b:	02ad      	mov.n	a10, a2
400db62d:	c08890        	sub	a8, a8, a9
400db630:	082d      	mov.n	a2, a8
400db632:	78ec      	bnez.n	a8, 400db65d <__mcmp+0x39>
400db634:	1189e0        	slli	a8, a9, 2
400db637:	14caa2        	addi	a10, a10, 20
400db63a:	14c332        	addi	a3, a3, 20
400db63d:	2a8a      	add.n	a2, a10, a8
400db63f:	338a      	add.n	a3, a3, a8
400db641:	fcc222        	addi	a2, a2, -4
400db644:	fcc332        	addi	a3, a3, -4
400db647:	0298      	l32i.n	a9, a2, 0
400db649:	0388      	l32i.n	a8, a3, 0
400db64b:	091987        	beq	a9, a8, 400db658 <__mcmp+0x34>
400db64e:	f27c      	movi.n	a2, -1
400db650:	093987        	bltu	a9, a8, 400db65d <__mcmp+0x39>
400db653:	120c      	movi.n	a2, 1
400db655:	f01d      	retw.n
400db657:	3a2700        	lsi	f0, a7, 232
400db65a:	020ce5        	call8	400dd728 <_svfprintf_r+0x1410>
400db65d:	f01d      	retw.n
	...

400db660 <__mdiff>:
400db660:	004136        	entry	a1, 32
400db663:	04bd      	mov.n	a11, a4
400db665:	03ad      	mov.n	a10, a3
400db667:	fffbe5        	call8	400db624 <__mcmp>
400db66a:	0a5d      	mov.n	a5, a10
400db66c:	eacc      	bnez.n	a10, 400db67e <__mdiff+0x1e>
400db66e:	0abd      	mov.n	a11, a10
400db670:	02ad      	mov.n	a10, a2
400db672:	ffb1e5        	call8	400db190 <_Balloc>
400db675:	120c      	movi.n	a2, 1
400db677:	4a29      	s32i.n	a2, a10, 16
400db679:	5a59      	s32i.n	a5, a10, 20
400db67b:	002786        	j	400db71d <__mdiff+0xbd>
400db67e:	060c      	movi.n	a6, 0
400db680:	09aa67        	bge	a10, a6, 400db68d <__mdiff+0x2d>
400db683:	035d      	mov.n	a5, a3
400db685:	160c      	movi.n	a6, 1
400db687:	203440        	or	a3, a4, a4
400db68a:	204550        	or	a4, a5, a5
400db68d:	13b8      	l32i.n	a11, a3, 4
400db68f:	20a220        	or	a10, a2, a2
400db692:	ffafe5        	call8	400db190 <_Balloc>
400db695:	43c8      	l32i.n	a12, a3, 16
400db697:	4428      	l32i.n	a2, a4, 16
400db699:	14c332        	addi	a3, a3, 20
400db69c:	14c4f2        	addi	a15, a4, 20
400db69f:	3a69      	s32i.n	a6, a10, 12
400db6a1:	a0dc30        	addx4	a13, a12, a3
400db6a4:	a022f0        	addx4	a2, a2, a15
400db6a7:	14ca92        	addi	a9, a10, 20
400db6aa:	0e0c      	movi.n	a14, 0
400db6ac:	03b8      	l32i.n	a11, a3, 0
400db6ae:	0f48      	l32i.n	a4, a15, 0
400db6b0:	f480b0        	extui	a8, a11, 0, 16
400db6b3:	e8ea      	add.n	a14, a8, a14
400db6b5:	f48040        	extui	a8, a4, 0, 16
400db6b8:	c08e80        	sub	a8, a14, a8
400db6bb:	f5b0b0        	extui	a11, a11, 16, 16
400db6be:	f5e040        	extui	a14, a4, 16, 16
400db6c1:	c0ebe0        	sub	a14, a11, a14
400db6c4:	31b080        	srai	a11, a8, 16
400db6c7:	beba      	add.n	a11, a14, a11
400db6c9:	31e0b0        	srai	a14, a11, 16
400db6cc:	994b      	addi.n	a9, a9, 4
400db6ce:	11bb00        	slli	a11, a11, 16
400db6d1:	f48080        	extui	a8, a8, 0, 16
400db6d4:	fcc942        	addi	a4, a9, -4
400db6d7:	208b80        	or	a8, a11, a8
400db6da:	ff4b      	addi.n	a15, a15, 4
400db6dc:	0489      	s32i.n	a8, a4, 0
400db6de:	334b      	addi.n	a3, a3, 4
400db6e0:	c83f27        	bltu	a15, a2, 400db6ac <__mdiff+0x4c>
400db6e3:	092d      	mov.n	a2, a9
400db6e5:	000806        	j	400db709 <__mdiff+0xa9>
400db6e8:	03b8      	l32i.n	a11, a3, 0
400db6ea:	334b      	addi.n	a3, a3, 4
400db6ec:	f490b0        	extui	a9, a11, 0, 16
400db6ef:	99ea      	add.n	a9, a9, a14
400db6f1:	318090        	srai	a8, a9, 16
400db6f4:	f5b0b0        	extui	a11, a11, 16, 16
400db6f7:	bb8a      	add.n	a11, a11, a8
400db6f9:	31e0b0        	srai	a14, a11, 16
400db6fc:	f49090        	extui	a9, a9, 0, 16
400db6ff:	11bb00        	slli	a11, a11, 16
400db702:	209b90        	or	a9, a11, a9
400db705:	0299      	s32i.n	a9, a2, 0
400db707:	224b      	addi.n	a2, a2, 4
400db709:	024d      	mov.n	a4, a2
400db70b:	d933d7        	bltu	a3, a13, 400db6e8 <__mdiff+0x88>
400db70e:	000046        	j	400db713 <__mdiff+0xb3>
400db711:	cc0b      	addi.n	a12, a12, -1
400db713:	fcc442        	addi	a4, a4, -4
400db716:	0428      	l32i.n	a2, a4, 0
400db718:	ff5216        	beqz	a2, 400db711 <__mdiff+0xb1>
400db71b:	4ac9      	s32i.n	a12, a10, 16
400db71d:	0a2d      	mov.n	a2, a10
400db71f:	f01d      	retw.n
400db721:	000000        	ill

400db724 <__ulp>:
400db724:	004136        	entry	a1, 32
400db727:	d3e681        	l32r	a8, 400d06c0 <_flash_cache_start+0x6a8>
400db72a:	d3e691        	l32r	a9, 400d06c4 <_flash_cache_start+0x6ac>
400db72d:	103830        	and	a3, a8, a3
400db730:	839a      	add.n	a8, a3, a9
400db732:	083d      	mov.n	a3, a8
400db734:	1418e6        	bgei	a8, 1, 400db74c <__ulp+0x28>
400db737:	608080        	neg	a8, a8
400db73a:	318480        	srai	a8, a8, 20
400db73d:	13a022        	movi	a2, 19
400db740:	0c2287        	blt	a2, a8, 400db750 <__ulp+0x2c>
400db743:	d3e191        	l32r	a9, 400d06c8 <_flash_cache_start+0x6b0>
400db746:	400800        	ssr	a8
400db749:	b13090        	sra	a3, a9
400db74c:	020c      	movi.n	a2, 0
400db74e:	f01d      	retw.n
400db750:	ecc882        	addi	a8, a8, -20
400db753:	ea1c      	movi.n	a10, 30
400db755:	d24131        	l32r	a3, 400d005c <_flash_cache_start+0x44>
400db758:	190c      	movi.n	a9, 1
400db75a:	0a2a87        	blt	a10, a8, 400db768 <__ulp+0x44>
400db75d:	fa1c      	movi.n	a10, 31
400db75f:	c08a80        	sub	a8, a10, a8
400db762:	401800        	ssl	a8
400db765:	a19900        	sll	a9, a9
400db768:	092d      	mov.n	a2, a9
400db76a:	f01d      	retw.n

400db76c <__b2d>:
400db76c:	004136        	entry	a1, 32
400db76f:	4278      	l32i.n	a7, a2, 16
400db771:	14c262        	addi	a6, a2, 20
400db774:	a07760        	addx4	a7, a7, a6
400db777:	fcc742        	addi	a4, a7, -4
400db77a:	0458      	l32i.n	a5, a4, 0
400db77c:	022c      	movi.n	a2, 32
400db77e:	20a550        	or	a10, a5, a5
400db781:	ffba65        	call8	400db328 <__hi0bits>
400db784:	c022a0        	sub	a2, a2, a10
400db787:	0329      	s32i.n	a2, a3, 0
400db789:	a20c      	movi.n	a2, 10
400db78b:	d3d131        	l32r	a3, 400d06d0 <_flash_cache_start+0x6b8>
400db78e:	2c22a7        	blt	a2, a10, 400db7be <__b2d+0x52>
400db791:	b20c      	movi.n	a2, 11
400db793:	c0b2a0        	sub	a11, a2, a10
400db796:	400b00        	ssr	a11
400db799:	912050        	srl	a2, a5
400db79c:	209230        	or	a9, a2, a3
400db79f:	020c      	movi.n	a2, 0
400db7a1:	04b647        	bgeu	a6, a4, 400db7a9 <__b2d+0x3d>
400db7a4:	f8c772        	addi	a7, a7, -8
400db7a7:	0728      	l32i.n	a2, a7, 0
400db7a9:	15caa2        	addi	a10, a10, 21
400db7ac:	401a00        	ssl	a10
400db7af:	a1a500        	sll	a10, a5
400db7b2:	400b00        	ssr	a11
400db7b5:	912020        	srl	a2, a2
400db7b8:	001206        	j	400db804 <__b2d+0x98>
400db7bb:	000000        	ill
400db7be:	0c0c      	movi.n	a12, 0
400db7c0:	04b647        	bgeu	a6, a4, 400db7c8 <__b2d+0x5c>
400db7c3:	f8c742        	addi	a4, a7, -8
400db7c6:	04c8      	l32i.n	a12, a4, 0
400db7c8:	f5caa2        	addi	a10, a10, -11
400db7cb:	209530        	or	a9, a5, a3
400db7ce:	0c8d      	mov.n	a8, a12
400db7d0:	6abc      	beqz.n	a10, 400db80a <__b2d+0x9e>
400db7d2:	022c      	movi.n	a2, 32
400db7d4:	d3bf81        	l32r	a8, 400d06d0 <_flash_cache_start+0x6b8>
400db7d7:	c072a0        	sub	a7, a2, a10
400db7da:	401a00        	ssl	a10
400db7dd:	a1b500        	sll	a11, a5
400db7e0:	400700        	ssr	a7
400db7e3:	9120c0        	srl	a2, a12
400db7e6:	20bb80        	or	a11, a11, a8
400db7e9:	209b20        	or	a9, a11, a2
400db7ec:	00a022        	movi	a2, 0
400db7ef:	05b647        	bgeu	a6, a4, 400db7f8 <__b2d+0x8c>
400db7f2:	fcc432        	addi	a3, a4, -4
400db7f5:	002322        	l32i	a2, a3, 0
400db7f8:	401a00        	ssl	a10
400db7fb:	a1ac00        	sll	a10, a12
400db7fe:	400700        	ssr	a7
400db801:	912020        	srl	a2, a2
400db804:	208a20        	or	a8, a10, a2
400db807:	ffffc6        	j	400db80a <__b2d+0x9e>
400db80a:	082d      	mov.n	a2, a8
400db80c:	093d      	mov.n	a3, a9
400db80e:	f01d      	retw.n

400db810 <__d2b>:
400db810:	006136        	entry	a1, 48
400db813:	20a220        	or	a10, a2, a2
400db816:	01a0b2        	movi	a11, 1
400db819:	ff9765        	call8	400db190 <_Balloc>
400db81c:	d38531        	l32r	a3, 400d0630 <_flash_cache_start+0x618>
400db81f:	103350        	and	a3, a3, a5
400db822:	a55450        	extui	a5, a5, 20, 11
400db825:	0a2d      	mov.n	a2, a10
400db827:	15cc      	bnez.n	a5, 400db82c <__d2b+0x1c>
400db829:	000146        	j	400db832 <__d2b+0x22>
400db82c:	d3aa81        	l32r	a8, 400d06d4 <_flash_cache_start+0x6bc>
400db82f:	203380        	or	a3, a3, a8
400db832:	0139      	s32i.n	a3, a1, 0
400db834:	64bc      	beqz.n	a4, 400db86e <__d2b+0x5e>
400db836:	a14b      	addi.n	a10, a1, 4
400db838:	1149      	s32i.n	a4, a1, 4
400db83a:	ffb3a5        	call8	400db374 <__lo0bits>
400db83d:	1138      	l32i.n	a3, a1, 4
400db83f:	9a9c      	beqz.n	a10, 400db85c <__d2b+0x4c>
400db841:	0188      	l32i.n	a8, a1, 0
400db843:	6040a0        	neg	a4, a10
400db846:	401400        	ssl	a4
400db849:	a14800        	sll	a4, a8
400db84c:	203430        	or	a3, a4, a3
400db84f:	400a00        	ssr	a10
400db852:	918080        	srl	a8, a8
400db855:	5239      	s32i.n	a3, a2, 20
400db857:	0189      	s32i.n	a8, a1, 0
400db859:	000046        	j	400db85e <__d2b+0x4e>
400db85c:	5239      	s32i.n	a3, a2, 20
400db85e:	0188      	l32i.n	a8, a1, 0
400db860:	130c      	movi.n	a3, 1
400db862:	240c      	movi.n	a4, 2
400db864:	933480        	movnez	a3, a4, a8
400db867:	6289      	s32i.n	a8, a2, 24
400db869:	4239      	s32i.n	a3, a2, 16
400db86b:	0003c6        	j	400db87e <__d2b+0x6e>
400db86e:	01ad      	mov.n	a10, a1
400db870:	ffb025        	call8	400db374 <__lo0bits>
400db873:	0138      	l32i.n	a3, a1, 0
400db875:	20caa2        	addi	a10, a10, 32
400db878:	5239      	s32i.n	a3, a2, 20
400db87a:	130c      	movi.n	a3, 1
400db87c:	4239      	s32i.n	a3, a2, 16
400db87e:	f58c      	beqz.n	a5, 400db891 <__d2b+0x81>
400db880:	cdab32        	movi	a3, 0xfffffbcd
400db883:	553a      	add.n	a5, a5, a3
400db885:	55aa      	add.n	a5, a5, a10
400db887:	0659      	s32i.n	a5, a6, 0
400db889:	533c      	movi.n	a3, 53
400db88b:	000646        	j	400db8a8 <__d2b+0x98>
400db88e:	000000        	ill
400db891:	d1f451        	l32r	a5, 400d0064 <_flash_cache_start+0x4c>
400db894:	ceab42        	movi	a4, 0xfffffbce
400db897:	535a      	add.n	a5, a3, a5
400db899:	aa4a      	add.n	a10, a10, a4
400db89b:	a05520        	addx4	a5, a5, a2
400db89e:	06a9      	s32i.n	a10, a6, 0
400db8a0:	55a8      	l32i.n	a10, a5, 20
400db8a2:	1133b0        	slli	a3, a3, 5
400db8a5:	ffa825        	call8	400db328 <__hi0bits>
400db8a8:	c0a3a0        	sub	a10, a3, a10
400db8ab:	07a9      	s32i.n	a10, a7, 0
400db8ad:	f01d      	retw.n
	...

400db8b0 <__ratio>:
400db8b0:	006136        	entry	a1, 48
400db8b3:	b14b      	addi.n	a11, a1, 4
400db8b5:	02ad      	mov.n	a10, a2
400db8b7:	ffeb65        	call8	400db76c <__b2d>
400db8ba:	036d      	mov.n	a6, a3
400db8bc:	0a4d      	mov.n	a4, a10
400db8be:	0b3d      	mov.n	a3, a11
400db8c0:	0b5d      	mov.n	a5, a11
400db8c2:	06ad      	mov.n	a10, a6
400db8c4:	01bd      	mov.n	a11, a1
400db8c6:	ffea65        	call8	400db76c <__b2d>
400db8c9:	027d      	mov.n	a7, a2
400db8cb:	46e8      	l32i.n	a14, a6, 16
400db8cd:	4788      	l32i.n	a8, a7, 16
400db8cf:	1198      	l32i.n	a9, a1, 4
400db8d1:	c088e0        	sub	a8, a8, a14
400db8d4:	11e8b0        	slli	a14, a8, 5
400db8d7:	0188      	l32i.n	a8, a1, 0
400db8d9:	0acd      	mov.n	a12, a10
400db8db:	c08980        	sub	a8, a9, a8
400db8de:	8e8a      	add.n	a8, a14, a8
400db8e0:	0bdd      	mov.n	a13, a11
400db8e2:	0718a6        	blti	a8, 1, 400db8ed <__ratio+0x3d>
400db8e5:	0188c0        	slli	a8, a8, 20
400db8e8:	583a      	add.n	a5, a8, a3
400db8ea:	000146        	j	400db8f3 <__ratio+0x43>
400db8ed:	0188c0        	slli	a8, a8, 20
400db8f0:	c0db80        	sub	a13, a11, a8
400db8f3:	04ad      	mov.n	a10, a4
400db8f5:	05bd      	mov.n	a11, a5
400db8f7:	d1d681        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400db8fa:	0008e0        	callx8	a8
400db8fd:	0a2d      	mov.n	a2, a10
400db8ff:	0b3d      	mov.n	a3, a11
400db901:	f01d      	retw.n
	...

400db904 <_mprec_log10>:
400db904:	004136        	entry	a1, 32
400db907:	731c      	movi.n	a3, 23
400db909:	d1d4a1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400db90c:	d371b1        	l32r	a11, 400d06d0 <_flash_cache_start+0x6b8>
400db90f:	0d2327        	blt	a3, a2, 400db920 <_mprec_log10+0x1c>
400db912:	d37131        	l32r	a3, 400d06d8 <_flash_cache_start+0x6c0>
400db915:	b02230        	addx8	a2, a2, a3
400db918:	1238      	l32i.n	a3, a2, 4
400db91a:	0228      	l32i.n	a2, a2, 0
400db91c:	f01d      	retw.n
400db91e:	c10000        	mul16u	a0, a0, a0
400db921:	cf          	.byte 0xcf
400db922:	6ed1d1        	l32r	a13, 400b7468 <_iram_end+0x29914>
400db925:	220bd3        	lsi	f13, a11, 136
400db928:	d1cc81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400db92b:	0008e0        	callx8	a8
400db92e:	fee256        	bnez	a2, 400db920 <_mprec_log10+0x1c>
400db931:	0a2d      	mov.n	a2, a10
400db933:	0b3d      	mov.n	a3, a11
400db935:	f01d      	retw.n
	...

400db938 <__copybits>:
400db938:	004136        	entry	a1, 32
400db93b:	330b      	addi.n	a3, a3, -1
400db93d:	218530        	srai	a8, a3, 5
400db940:	44a8      	l32i.n	a10, a4, 16
400db942:	881b      	addi.n	a8, a8, 1
400db944:	14c492        	addi	a9, a4, 20
400db947:	a08820        	addx4	a8, a8, a2
400db94a:	a0aa90        	addx4	a10, a10, a9
400db94d:	0001c6        	j	400db958 <__copybits+0x20>
400db950:	0948      	l32i.n	a4, a9, 0
400db952:	994b      	addi.n	a9, a9, 4
400db954:	0249      	s32i.n	a4, a2, 0
400db956:	224b      	addi.n	a2, a2, 4
400db958:	f439a7        	bltu	a9, a10, 400db950 <__copybits+0x18>
400db95b:	040c      	movi.n	a4, 0
400db95d:	0000c6        	j	400db964 <__copybits+0x2c>
400db960:	0249      	s32i.n	a4, a2, 0
400db962:	224b      	addi.n	a2, a2, 4
400db964:	f83287        	bltu	a2, a8, 400db960 <__copybits+0x28>
400db967:	f01d      	retw.n
400db969:	000000        	ill

400db96c <__any_on>:
400db96c:	004136        	entry	a1, 32
400db96f:	14c292        	addi	a9, a2, 20
400db972:	4228      	l32i.n	a2, a2, 16
400db974:	218530        	srai	a8, a3, 5
400db977:	232287        	blt	a2, a8, 400db99e <__any_on+0x32>
400db97a:	22a827        	bge	a8, a2, 400db9a0 <__any_on+0x34>
400db97d:	443030        	extui	a3, a3, 0, 5
400db980:	c39c      	beqz.n	a3, 400db9a0 <__any_on+0x34>
400db982:	a02890        	addx4	a2, a8, a9
400db985:	02a8      	l32i.n	a10, a2, 0
400db987:	400300        	ssr	a3
400db98a:	9120a0        	srl	a2, a10
400db98d:	401300        	ssl	a3
400db990:	a13200        	sll	a3, a2
400db993:	120c      	movi.n	a2, 1
400db995:	1f9a37        	bne	a10, a3, 400db9b8 <__any_on+0x4c>
400db998:	000106        	j	400db9a0 <__any_on+0x34>
400db99b:	000000        	ill
400db99e:	028d      	mov.n	a8, a2
400db9a0:	a08890        	addx4	a8, a8, a9
400db9a3:	000206        	j	400db9af <__any_on+0x43>
400db9a6:	820000        	mull	a0, a0, a0
400db9a9:	fcc8      	l32i.n	a12, a12, 60
400db9ab:	0828      	l32i.n	a2, a8, 0
400db9ad:	52cc      	bnez.n	a2, 400db9b6 <__any_on+0x4a>
400db9af:	f53987        	bltu	a9, a8, 400db9a8 <__any_on+0x3c>
400db9b2:	020c      	movi.n	a2, 0
400db9b4:	f01d      	retw.n
400db9b6:	120c      	movi.n	a2, 1
400db9b8:	f01d      	retw.n
	...

400db9bc <_putc_r>:
400db9bc:	004136        	entry	a1, 32
400db9bf:	a28c      	beqz.n	a2, 400db9cd <_putc_r+0x11>
400db9c1:	6288      	l32i.n	a8, a2, 24
400db9c3:	68cc      	bnez.n	a8, 400db9cd <_putc_r+0x11>
400db9c5:	02ad      	mov.n	a10, a2
400db9c7:	d33081        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400db9ca:	0008e0        	callx8	a8
400db9cd:	d32581        	l32r	a8, 400d0664 <_flash_cache_start+0x64c>
400db9d0:	049487        	bne	a4, a8, 400db9d8 <_putc_r+0x1c>
400db9d3:	1248      	l32i.n	a4, a2, 4
400db9d5:	0004c6        	j	400db9ec <_putc_r+0x30>
400db9d8:	d32481        	l32r	a8, 400d0668 <_flash_cache_start+0x650>
400db9db:	059487        	bne	a4, a8, 400db9e4 <_putc_r+0x28>
400db9de:	2248      	l32i.n	a4, a2, 8
400db9e0:	000206        	j	400db9ec <_putc_r+0x30>
400db9e3:	228100        	orb	b8, b1, b0
400db9e6:	9487d3        	lsip	f13, a7, 0x250
400db9e9:	324801        	l32r	a0, 400a830c <_iram_end+0x1a7b8>
400db9ec:	192482        	l32i	a8, a4, 100
400db9ef:	0be807        	bbsi	a8, 0, 400db9fe <_putc_r+0x42>
400db9f2:	061482        	l16ui	a8, a4, 12
400db9f5:	05e897        	bbsi	a8, 9, 400db9fe <_putc_r+0x42>
400db9f8:	58c4a2        	addi	a10, a4, 88
400db9fb:	a90de5        	call8	40084ad8 <_lock_acquire_recursive>
400db9fe:	2488      	l32i.n	a8, a4, 8
400dba00:	880b      	addi.n	a8, a8, -1
400dba02:	2489      	s32i.n	a8, a4, 8
400dba04:	0358d6        	bgez	a8, 400dba3d <_putc_r+0x81>
400dba07:	6498      	l32i.n	a9, a4, 24
400dba09:	1f2897        	blt	a8, a9, 400dba2c <_putc_r+0x70>
400dba0c:	0488      	l32i.n	a8, a4, 0
400dba0e:	004832        	s8i	a3, a8, 0
400dba11:	0438      	l32i.n	a3, a4, 0
400dba13:	0003b2        	l8ui	a11, a3, 0
400dba16:	0c9b26        	beqi	a11, 10, 400dba26 <_putc_r+0x6a>
400dba19:	231b      	addi.n	a2, a3, 1
400dba1b:	0429      	s32i.n	a2, a4, 0
400dba1d:	000322        	l8ui	a2, a3, 0
400dba20:	000a86        	j	400dba4e <_putc_r+0x92>
400dba23:	000000        	ill
400dba26:	04cd      	mov.n	a12, a4
400dba28:	000106        	j	400dba30 <_putc_r+0x74>
400dba2b:	04cd00        	extui	a12, a0, 13, 1
400dba2e:	03bd      	mov.n	a11, a3
400dba30:	02ad      	mov.n	a10, a2
400dba32:	d32b81        	l32r	a8, 400d06e0 <_flash_cache_start+0x6c8>
400dba35:	0008e0        	callx8	a8
400dba38:	0a2d      	mov.n	a2, a10
400dba3a:	000406        	j	400dba4e <_putc_r+0x92>
400dba3d:	002422        	l32i	a2, a4, 0
400dba40:	004232        	s8i	a3, a2, 0
400dba43:	002422        	l32i	a2, a4, 0
400dba46:	01c232        	addi	a3, a2, 1
400dba49:	0439      	s32i.n	a3, a4, 0
400dba4b:	000222        	l8ui	a2, a2, 0
400dba4e:	192432        	l32i	a3, a4, 100
400dba51:	0be307        	bbsi	a3, 0, 400dba60 <_putc_r+0xa4>
400dba54:	061432        	l16ui	a3, a4, 12
400dba57:	05e397        	bbsi	a3, 9, 400dba60 <_putc_r+0xa4>
400dba5a:	58c4a2        	addi	a10, a4, 88
400dba5d:	a90b65        	call8	40084b14 <_lock_release_recursive>
400dba60:	f01d      	retw.n
	...

400dba64 <putc>:
400dba64:	004136        	entry	a1, 32
400dba67:	acf625        	call8	400889c8 <__getreent>
400dba6a:	20b220        	or	a11, a2, a2
400dba6d:	20c330        	or	a12, a3, a3
400dba70:	fff4a5        	call8	400db9bc <_putc_r>
400dba73:	202aa0        	or	a2, a10, a10
400dba76:	f01d      	retw.n

400dba78 <s_get_num_reserved_regions>:
400dba78:	004136        	entry	a1, 32
400dba7b:	d31b81        	l32r	a8, 400d06e8 <_flash_cache_start+0x6d0>
400dba7e:	d31921        	l32r	a2, 400d06e4 <_flash_cache_start+0x6cc>
400dba81:	c02280        	sub	a2, a2, a8
400dba84:	212320        	srai	a2, a2, 3
400dba87:	222b      	addi.n	a2, a2, 2
400dba89:	f01d      	retw.n
	...

400dba8c <s_prepare_reserved_regions>:
400dba8c:	006136        	entry	a1, 48
400dba8f:	d317c1        	l32r	a12, 400d06ec <_flash_cache_start+0x6d4>
400dba92:	80c3c0        	add	a12, a3, a12
400dba95:	11ccd0        	slli	a12, a12, 3
400dba98:	d314b1        	l32r	a11, 400d06e8 <_flash_cache_start+0x6d0>
400dba9b:	10c2a2        	addi	a10, a2, 16
400dba9e:	d17c81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400dbaa1:	0008e0        	callx8	a8
400dbaa4:	d31341        	l32r	a4, 400d06f0 <_flash_cache_start+0x6d8>
400dbaa7:	0249      	s32i.n	a4, a2, 0
400dbaa9:	f03d      	nop.n
400dbaab:	f03d      	nop.n
400dbaad:	f03d      	nop.n
400dbaaf:	f03d      	nop.n
400dbab1:	d31041        	l32r	a4, 400d06f4 <_flash_cache_start+0x6dc>
400dbab4:	1249      	s32i.n	a4, a2, 4
400dbab6:	f03d      	nop.n
400dbab8:	f03d      	nop.n
400dbaba:	f03d      	nop.n
400dbabc:	f03d      	nop.n
400dbabe:	d30e41        	l32r	a4, 400d06f8 <_flash_cache_start+0x6e0>
400dbac1:	2249      	s32i.n	a4, a2, 8
400dbac3:	f03d      	nop.n
400dbac5:	f03d      	nop.n
400dbac7:	f03d      	nop.n
400dbac9:	f03d      	nop.n
400dbacb:	d30c41        	l32r	a4, 400d06fc <_flash_cache_start+0x6e4>
400dbace:	3249      	s32i.n	a4, a2, 12
400dbad0:	f03d      	nop.n
400dbad2:	f03d      	nop.n
400dbad4:	f03d      	nop.n
400dbad6:	f03d      	nop.n
400dbad8:	d30ad1        	l32r	a13, 400d0700 <_flash_cache_start+0x6e8>
400dbadb:	8c0c      	movi.n	a12, 8
400dbadd:	03bd      	mov.n	a11, a3
400dbadf:	20a220        	or	a10, a2, a2
400dbae2:	d30e81        	l32r	a8, 400d071c <_flash_cache_start+0x704>
400dbae5:	0008e0        	callx8	a8
400dbae8:	0a0c      	movi.n	a10, 0
400dbaea:	0020c6        	j	400dbb71 <s_prepare_reserved_regions+0xe5>
400dbaed:	b04a20        	addx8	a4, a10, a2
400dbaf0:	0024b2        	l32i	a11, a4, 0
400dbaf3:	fcaf92        	movi	a9, -4
400dbaf6:	10bb90        	and	a11, a11, a9
400dbaf9:	0064b2        	s32i	a11, a4, 0
400dbafc:	f03d      	nop.n
400dbafe:	f03d      	nop.n
400dbb00:	f03d      	nop.n
400dbb02:	f03d      	nop.n
400dbb04:	1488      	l32i.n	a8, a4, 4
400dbb06:	883b      	addi.n	a8, a8, 3
400dbb08:	108890        	and	a8, a8, a9
400dbb0b:	1489      	s32i.n	a8, a4, 4
400dbb0d:	152b87        	blt	a11, a8, 400dbb26 <s_prepare_reserved_regions+0x9a>
400dbb10:	f03d      	nop.n
400dbb12:	f03d      	nop.n
400dbb14:	f03d      	nop.n
400dbb16:	f03d      	nop.n
400dbb18:	d2fbd1        	l32r	a13, 400d0704 <_flash_cache_start+0x6ec>
400dbb1b:	d2fbc1        	l32r	a12, 400d0708 <_flash_cache_start+0x6f0>
400dbb1e:	9b5c      	movi.n	a11, 89
400dbb20:	d2fba1        	l32r	a10, 400d070c <_flash_cache_start+0x6f4>
400dbb23:	fefaa5        	call8	400daacc <__assert_func>
400dbb26:	530b      	addi.n	a5, a3, -1
400dbb28:	43ba57        	bgeu	a10, a5, 400dbb6f <s_prepare_reserved_regions+0xe3>
400dbb2b:	5a1b      	addi.n	a5, a10, 1
400dbb2d:	b05520        	addx8	a5, a5, a2
400dbb30:	0598      	l32i.n	a9, a5, 0
400dbb32:	0e2b97        	blt	a11, a9, 400dbb44 <s_prepare_reserved_regions+0xb8>
400dbb35:	d2f6d1        	l32r	a13, 400d0710 <_flash_cache_start+0x6f8>
400dbb38:	d2f4c1        	l32r	a12, 400d0708 <_flash_cache_start+0x6f0>
400dbb3b:	5ba0b2        	movi	a11, 91
400dbb3e:	d2f3a1        	l32r	a10, 400d070c <_flash_cache_start+0x6f4>
400dbb41:	fef8a5        	call8	400daacc <__assert_func>
400dbb44:	27a987        	bge	a9, a8, 400dbb6f <s_prepare_reserved_regions+0xe3>
400dbb47:	a81ea5        	call8	40083d30 <esp_log_timestamp>
400dbb4a:	012522        	l32i	a2, a5, 4
400dbb4d:	006122        	s32i	a2, a1, 0
400dbb50:	f03d      	nop.n
400dbb52:	f03d      	nop.n
400dbb54:	f03d      	nop.n
400dbb56:	f03d      	nop.n
400dbb58:	05f8      	l32i.n	a15, a5, 0
400dbb5a:	14e8      	l32i.n	a14, a4, 4
400dbb5c:	04d8      	l32i.n	a13, a4, 0
400dbb5e:	d2edc1        	l32r	a12, 400d0714 <_flash_cache_start+0x6fc>
400dbb61:	0abd      	mov.n	a11, a10
400dbb63:	d2eda1        	l32r	a10, 400d0718 <_flash_cache_start+0x700>
400dbb66:	d1ac81        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400dbb69:	0008e0        	callx8	a8
400dbb6c:	af7fe5        	call8	4008b36c <abort>
400dbb6f:	aa1b      	addi.n	a10, a10, 1
400dbb71:	02ba37        	bgeu	a10, a3, 400dbb77 <s_prepare_reserved_regions+0xeb>
400dbb74:	ffdd46        	j	400dbaed <s_prepare_reserved_regions+0x61>
400dbb77:	f01d      	retw.n
400dbb79:	000000        	ill

400dbb7c <soc_get_available_memory_region_max_count>:
400dbb7c:	004136        	entry	a1, 32
400dbb7f:	ffefa5        	call8	400dba78 <s_get_num_reserved_regions>
400dbb82:	d2a821        	l32r	a2, 400d0624 <_flash_cache_start+0x60c>
400dbb85:	002222        	l32i	a2, a2, 0
400dbb88:	802a20        	add	a2, a10, a2
400dbb8b:	000090        	retw
	...

400dbb90 <soc_get_available_memory_regions>:
400dbb90:	006136        	entry	a1, 48
400dbb93:	207110        	or	a7, a1, a1
400dbb96:	d2a331        	l32r	a3, 400d0624 <_flash_cache_start+0x60c>
400dbb99:	002352        	l32i	a5, a3, 0
400dbb9c:	1155c0        	slli	a5, a5, 4
400dbb9f:	12c532        	addi	a3, a5, 18
400dbba2:	413430        	srli	a3, a3, 4
400dbba5:	1133c0        	slli	a3, a3, 4
400dbba8:	c03130        	sub	a3, a1, a3
400dbbab:	001310        	movsp	a1, a3
400dbbae:	016d      	mov.n	a6, a1
400dbbb0:	20c550        	or	a12, a5, a5
400dbbb3:	d29bb1        	l32r	a11, 400d0620 <_flash_cache_start+0x608>
400dbbb6:	01ad      	mov.n	a10, a1
400dbbb8:	d13681        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400dbbbb:	0008e0        	callx8	a8
400dbbbe:	ffeba5        	call8	400dba78 <s_get_num_reserved_regions>
400dbbc1:	0a4d      	mov.n	a4, a10
400dbbc3:	113ad0        	slli	a3, a10, 3
400dbbc6:	12c332        	addi	a3, a3, 18
400dbbc9:	413430        	srli	a3, a3, 4
400dbbcc:	1133c0        	slli	a3, a3, 4
400dbbcf:	c03130        	sub	a3, a1, a3
400dbbd2:	001310        	movsp	a1, a3
400dbbd5:	0abd      	mov.n	a11, a10
400dbbd7:	03ad      	mov.n	a10, a3
400dbbd9:	ffeb25        	call8	400dba8c <s_prepare_reserved_regions>
400dbbdc:	06cd      	mov.n	a12, a6
400dbbde:	02dd      	mov.n	a13, a2
400dbbe0:	004046        	j	400dbce5 <soc_get_available_memory_regions+0x155>
400dbbe3:	0c8800        	lsi	f0, a8, 48
400dbbe6:	1ce8      	l32i.n	a14, a12, 4
400dbbe8:	0789      	s32i.n	a8, a7, 0
400dbbea:	f03d      	nop.n
400dbbec:	f03d      	nop.n
400dbbee:	f03d      	nop.n
400dbbf0:	f03d      	nop.n
400dbbf2:	2ca8      	l32i.n	a10, a12, 8
400dbbf4:	17e9      	s32i.n	a14, a7, 4
400dbbf6:	f03d      	nop.n
400dbbf8:	f03d      	nop.n
400dbbfa:	f03d      	nop.n
400dbbfc:	f03d      	nop.n
400dbbfe:	3c98      	l32i.n	a9, a12, 12
400dbc00:	27a9      	s32i.n	a10, a7, 8
400dbc02:	3799      	s32i.n	a9, a7, 12
400dbc04:	08ad      	mov.n	a10, a8
400dbc06:	e8ea      	add.n	a14, a8, a14
400dbc08:	080c      	movi.n	a8, 0
400dbc0a:	002506        	j	400dbca2 <soc_get_available_memory_regions+0x112>
400dbc0d:	b09830        	addx8	a9, a8, a3
400dbc10:	012992        	l32i	a9, a9, 4
400dbc13:	022a97        	blt	a10, a9, 400dbc19 <soc_get_available_memory_regions+0x89>
400dbc16:	002186        	j	400dbca0 <soc_get_available_memory_regions+0x110>
400dbc19:	b0b830        	addx8	a11, a8, a3
400dbc1c:	0bb8      	l32i.n	a11, a11, 0
400dbc1e:	022be7        	blt	a11, a14, 400dbc24 <soc_get_available_memory_regions+0x94>
400dbc21:	0022c6        	j	400dbcb0 <soc_get_available_memory_regions+0x120>
400dbc24:	052ab7        	blt	a10, a11, 400dbc2d <soc_get_available_memory_regions+0x9d>
400dbc27:	0229e7        	blt	a9, a14, 400dbc2d <soc_get_available_memory_regions+0x9d>
400dbc2a:	002246        	j	400dbcb7 <soc_get_available_memory_regions+0x127>
400dbc2d:	58aab7        	bge	a10, a11, 400dbc89 <soc_get_available_memory_regions+0xf9>
400dbc30:	55a9e7        	bge	a9, a14, 400dbc89 <soc_get_available_memory_regions+0xf9>
400dbc33:	112ab7        	blt	a10, a11, 400dbc48 <soc_get_available_memory_regions+0xb8>
400dbc36:	d2bad1        	l32r	a13, 400d0720 <_flash_cache_start+0x708>
400dbc39:	d2bac1        	l32r	a12, 400d0724 <_flash_cache_start+0x70c>
400dbc3c:	96a0b2        	movi	a11, 150
400dbc3f:	d2b3a1        	l32r	a10, 400d070c <_flash_cache_start+0x6f4>
400dbc42:	201110        	or	a1, a1, a1
400dbc45:	fee865        	call8	400daacc <__assert_func>
400dbc48:	1129e7        	blt	a9, a14, 400dbc5d <soc_get_available_memory_regions+0xcd>
400dbc4b:	d2b7d1        	l32r	a13, 400d0728 <_flash_cache_start+0x710>
400dbc4e:	d2b5c1        	l32r	a12, 400d0724 <_flash_cache_start+0x70c>
400dbc51:	97a0b2        	movi	a11, 151
400dbc54:	d2aea1        	l32r	a10, 400d070c <_flash_cache_start+0x6f4>
400dbc57:	201110        	or	a1, a1, a1
400dbc5a:	fee725        	call8	400daacc <__assert_func>
400dbc5d:	c0aba0        	sub	a10, a11, a10
400dbc60:	17a9      	s32i.n	a10, a7, 4
400dbc62:	f03d      	nop.n
400dbc64:	f03d      	nop.n
400dbc66:	f03d      	nop.n
400dbc68:	f03d      	nop.n
400dbc6a:	0ca8      	l32i.n	a10, a12, 0
400dbc6c:	c09a90        	sub	a9, a10, a9
400dbc6f:	1ca8      	l32i.n	a10, a12, 4
400dbc71:	9a9a      	add.n	a9, a10, a9
400dbc73:	1c99      	s32i.n	a9, a12, 4
400dbc75:	b08830        	addx8	a8, a8, a3
400dbc78:	f03d      	nop.n
400dbc7a:	f03d      	nop.n
400dbc7c:	f03d      	nop.n
400dbc7e:	1888      	l32i.n	a8, a8, 4
400dbc80:	0c89      	s32i.n	a8, a12, 0
400dbc82:	080c      	movi.n	a8, 0
400dbc84:	190c      	movi.n	a9, 1
400dbc86:	000c46        	j	400dbcbb <soc_get_available_memory_regions+0x12b>
400dbc89:	0c2ab7        	blt	a10, a11, 400dbc99 <soc_get_available_memory_regions+0x109>
400dbc8c:	0799      	s32i.n	a9, a7, 0
400dbc8e:	c0ae90        	sub	a10, a14, a9
400dbc91:	17a9      	s32i.n	a10, a7, 4
400dbc93:	09ad      	mov.n	a10, a9
400dbc95:	0001c6        	j	400dbca0 <soc_get_available_memory_regions+0x110>
400dbc98:	9ba000        	movnez.s	f10, f0, a0
400dbc9b:	1799c0        	lsi	f12, a9, 92
400dbc9e:	0bed      	mov.n	a14, a11
400dbca0:	881b      	addi.n	a8, a8, 1
400dbca2:	02b847        	bgeu	a8, a4, 400dbca8 <soc_get_available_memory_regions+0x118>
400dbca5:	ffd906        	j	400dbc0d <soc_get_available_memory_regions+0x7d>
400dbca8:	180c      	movi.n	a8, 1
400dbcaa:	089d      	mov.n	a9, a8
400dbcac:	0002c6        	j	400dbcbb <soc_get_available_memory_regions+0x12b>
400dbcaf:	180c00        	lsxp	f0, a12, a0
400dbcb2:	089d      	mov.n	a9, a8
400dbcb4:	0000c6        	j	400dbcbb <soc_get_available_memory_regions+0x12b>
400dbcb7:	180c      	movi.n	a8, 1
400dbcb9:	090c      	movi.n	a9, 0
400dbcbb:	19ac      	beqz.n	a9, 400dbce0 <soc_get_available_memory_regions+0x150>
400dbcbd:	07a8      	l32i.n	a10, a7, 0
400dbcbf:	1798      	l32i.n	a9, a7, 4
400dbcc1:	0da9      	s32i.n	a10, a13, 0
400dbcc3:	f03d      	nop.n
400dbcc5:	f03d      	nop.n
400dbcc7:	f03d      	nop.n
400dbcc9:	f03d      	nop.n
400dbccb:	27a8      	l32i.n	a10, a7, 8
400dbccd:	1d99      	s32i.n	a9, a13, 4
400dbccf:	f03d      	nop.n
400dbcd1:	f03d      	nop.n
400dbcd3:	f03d      	nop.n
400dbcd5:	f03d      	nop.n
400dbcd7:	3798      	l32i.n	a9, a7, 12
400dbcd9:	2da9      	s32i.n	a10, a13, 8
400dbcdb:	3d99      	s32i.n	a9, a13, 12
400dbcdd:	10cdd2        	addi	a13, a13, 16
400dbce0:	188c      	beqz.n	a8, 400dbce5 <soc_get_available_memory_regions+0x155>
400dbce2:	10ccc2        	addi	a12, a12, 16
400dbce5:	865a      	add.n	a8, a6, a5
400dbce7:	021c87        	beq	a12, a8, 400dbced <soc_get_available_memory_regions+0x15d>
400dbcea:	ffbd86        	j	400dbbe4 <soc_get_available_memory_regions+0x54>
400dbced:	c02d20        	sub	a2, a13, a2
400dbcf0:	212420        	srai	a2, a2, 4
400dbcf3:	f01d      	retw.n
400dbcf5:	000000        	ill

400dbcf8 <_fiprintf_r>:
400dbcf8:	00a136        	entry	a1, 80
400dbcfb:	10c1e2        	addi	a14, a1, 16
400dbcfe:	30c1d2        	addi	a13, a1, 48
400dbd01:	cf0c      	movi.n	a15, 12
400dbd03:	04cd      	mov.n	a12, a4
400dbd05:	03bd      	mov.n	a11, a3
400dbd07:	02ad      	mov.n	a10, a2
400dbd09:	7159      	s32i.n	a5, a1, 28
400dbd0b:	8169      	s32i.n	a6, a1, 32
400dbd0d:	9179      	s32i.n	a7, a1, 36
400dbd0f:	11e9      	s32i.n	a14, a1, 4
400dbd11:	01d9      	s32i.n	a13, a1, 0
400dbd13:	21f9      	s32i.n	a15, a1, 8
400dbd15:	03bee5        	call8	400df904 <_vfiprintf_r>
400dbd18:	0a2d      	mov.n	a2, a10
400dbd1a:	f01d      	retw.n

400dbd1c <fiprintf>:
400dbd1c:	00a136        	entry	a1, 80
400dbd1f:	10c182        	addi	a8, a1, 16
400dbd22:	016182        	s32i	a8, a1, 4
400dbd25:	30c182        	addi	a8, a1, 48
400dbd28:	006182        	s32i	a8, a1, 0
400dbd2b:	880c      	movi.n	a8, 8
400dbd2d:	2189      	s32i.n	a8, a1, 8
400dbd2f:	6149      	s32i.n	a4, a1, 24
400dbd31:	7159      	s32i.n	a5, a1, 28
400dbd33:	8169      	s32i.n	a6, a1, 32
400dbd35:	096172        	s32i	a7, a1, 36
400dbd38:	acc8e5        	call8	400889c8 <__getreent>
400dbd3b:	01d8      	l32i.n	a13, a1, 0
400dbd3d:	11e8      	l32i.n	a14, a1, 4
400dbd3f:	21f8      	l32i.n	a15, a1, 8
400dbd41:	02bd      	mov.n	a11, a2
400dbd43:	03cd      	mov.n	a12, a3
400dbd45:	03bbe5        	call8	400df904 <_vfiprintf_r>
400dbd48:	0a2d      	mov.n	a2, a10
400dbd4a:	f01d      	retw.n

400dbd4c <_printf_r>:
400dbd4c:	00a136        	entry	a1, 80
400dbd4f:	6149      	s32i.n	a4, a1, 24
400dbd51:	7159      	s32i.n	a5, a1, 28
400dbd53:	8169      	s32i.n	a6, a1, 32
400dbd55:	9179      	s32i.n	a7, a1, 36
400dbd57:	b28c      	beqz.n	a2, 400dbd66 <_printf_r+0x1a>
400dbd59:	6288      	l32i.n	a8, a2, 24
400dbd5b:	78cc      	bnez.n	a8, 400dbd66 <_printf_r+0x1a>
400dbd5d:	20a220        	or	a10, a2, a2
400dbd60:	d24a81        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400dbd63:	0008e0        	callx8	a8
400dbd66:	0222b2        	l32i	a11, a2, 8
400dbd69:	10c1e2        	addi	a14, a1, 16
400dbd6c:	30c1d2        	addi	a13, a1, 48
400dbd6f:	08a0f2        	movi	a15, 8
400dbd72:	20c330        	or	a12, a3, a3
400dbd75:	02ad      	mov.n	a10, a2
400dbd77:	11e9      	s32i.n	a14, a1, 4
400dbd79:	01d9      	s32i.n	a13, a1, 0
400dbd7b:	21f9      	s32i.n	a15, a1, 8
400dbd7d:	061be5        	call8	400e1f3c <_vfprintf_r>
400dbd80:	0a2d      	mov.n	a2, a10
400dbd82:	f01d      	retw.n

400dbd84 <printf>:
400dbd84:	00a136        	entry	a1, 80
400dbd87:	5139      	s32i.n	a3, a1, 20
400dbd89:	6149      	s32i.n	a4, a1, 24
400dbd8b:	7159      	s32i.n	a5, a1, 28
400dbd8d:	8169      	s32i.n	a6, a1, 32
400dbd8f:	9179      	s32i.n	a7, a1, 36
400dbd91:	acc365        	call8	400889c8 <__getreent>
400dbd94:	0a3d      	mov.n	a3, a10
400dbd96:	8a8c      	beqz.n	a10, 400dbda2 <printf+0x1e>
400dbd98:	6a88      	l32i.n	a8, a10, 24
400dbd9a:	48cc      	bnez.n	a8, 400dbda2 <printf+0x1e>
400dbd9c:	d23b81        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400dbd9f:	0008e0        	callx8	a8
400dbda2:	0223b2        	l32i	a11, a3, 8
400dbda5:	10c1e2        	addi	a14, a1, 16
400dbda8:	30c1d2        	addi	a13, a1, 48
400dbdab:	04a0f2        	movi	a15, 4
400dbdae:	20c220        	or	a12, a2, a2
400dbdb1:	03ad      	mov.n	a10, a3
400dbdb3:	11e9      	s32i.n	a14, a1, 4
400dbdb5:	01d9      	s32i.n	a13, a1, 0
400dbdb7:	21f9      	s32i.n	a15, a1, 8
400dbdb9:	061825        	call8	400e1f3c <_vfprintf_r>
400dbdbc:	0a2d      	mov.n	a2, a10
400dbdbe:	f01d      	retw.n

400dbdc0 <_snprintf_r>:
400dbdc0:	018136        	entry	a1, 192
400dbdc3:	246162        	s32i	a6, a1, 144
400dbdc6:	256172        	s32i	a7, a1, 148
400dbdc9:	05cd      	mov.n	a12, a5
400dbdcb:	0094d6        	bgez	a4, 400dbdd8 <_snprintf_r+0x18>
400dbdce:	8ba032        	movi	a3, 139
400dbdd1:	0239      	s32i.n	a3, a2, 0
400dbdd3:	f27c      	movi.n	a2, -1
400dbdd5:	f01d      	retw.n
400dbdd7:	a28200        	muluh	a8, a2, a0
400dbdda:	8208      	l32i.n	a0, a2, 32
400dbddc:	320651        	l32r	a5, 400a85f4 <_iram_end+0x1aaa0>
400dbddf:	320061        	l32r	a6, 400a85e0 <_iram_end+0x1aa8c>
400dbde2:	820461        	l32r	a6, 400bc5f4 <_iram_end+0x2eaa0>
400dbde5:	0cffc4        	lsi	f12, a15, 48
400dbde8:	834003        	ssi	f0, a0, 0x20c
400dbdeb:	f37c83        	lsi	f8, a12, 0x3cc
400dbdee:	075132        	s16i	a3, a1, 14
400dbdf1:	80a0e2        	movi	a14, 128
400dbdf4:	a0a032        	movi	a3, 160
400dbdf7:	e1ea      	add.n	a14, a1, a14
400dbdf9:	d13a      	add.n	a13, a1, a3
400dbdfb:	0f1c      	movi.n	a15, 16
400dbdfd:	01bd      	mov.n	a11, a1
400dbdff:	02ad      	mov.n	a10, a2
400dbe01:	2189      	s32i.n	a8, a1, 8
400dbe03:	5189      	s32i.n	a8, a1, 20
400dbe05:	1b61e2        	s32i	a14, a1, 108
400dbe08:	1a61d2        	s32i	a13, a1, 104
400dbe0b:	1c61f2        	s32i	a15, a1, 112
400dbe0e:	0050a5        	call8	400dc318 <_svfprintf_r>
400dbe11:	040ae6        	bgei	a10, -1, 400dbe19 <_snprintf_r+0x59>
400dbe14:	8ba032        	movi	a3, 139
400dbe17:	0239      	s32i.n	a3, a2, 0
400dbe19:	0a2d      	mov.n	a2, a10
400dbe1b:	548c      	beqz.n	a4, 400dbe24 <_snprintf_r+0x64>
400dbe1d:	0138      	l32i.n	a3, a1, 0
400dbe1f:	040c      	movi.n	a4, 0
400dbe21:	004342        	s8i	a4, a3, 0
400dbe24:	f01d      	retw.n
	...

400dbe28 <snprintf>:
400dbe28:	018136        	entry	a1, 192
400dbe2b:	236152        	s32i	a5, a1, 140
400dbe2e:	246162        	s32i	a6, a1, 144
400dbe31:	256172        	s32i	a7, a1, 148
400dbe34:	acb925        	call8	400889c8 <__getreent>
400dbe37:	205aa0        	or	a5, a10, a10
400dbe3a:	00a3d6        	bgez	a3, 400dbe48 <snprintf+0x20>
400dbe3d:	8ba022        	movi	a2, 139
400dbe40:	006a22        	s32i	a2, a10, 0
400dbe43:	ffaf22        	movi	a2, -1
400dbe46:	f01d      	retw.n
400dbe48:	08a282        	movi	a8, 0x208
400dbe4b:	065182        	s16i	a8, a1, 12
400dbe4e:	006122        	s32i	a2, a1, 0
400dbe51:	046122        	s32i	a2, a1, 16
400dbe54:	00a082        	movi	a8, 0
400dbe57:	230b      	addi.n	a2, a3, -1
400dbe59:	832830        	moveqz	a2, a8, a3
400dbe5c:	2129      	s32i.n	a2, a1, 8
400dbe5e:	5129      	s32i.n	a2, a1, 20
400dbe60:	f27c      	movi.n	a2, -1
400dbe62:	075122        	s16i	a2, a1, 14
400dbe65:	80a0e2        	movi	a14, 128
400dbe68:	a0a022        	movi	a2, 160
400dbe6b:	e1ea      	add.n	a14, a1, a14
400dbe6d:	d12a      	add.n	a13, a1, a2
400dbe6f:	cf0c      	movi.n	a15, 12
400dbe71:	04cd      	mov.n	a12, a4
400dbe73:	01bd      	mov.n	a11, a1
400dbe75:	1b61e2        	s32i	a14, a1, 108
400dbe78:	1a61d2        	s32i	a13, a1, 104
400dbe7b:	1c61f2        	s32i	a15, a1, 112
400dbe7e:	0049a5        	call8	400dc318 <_svfprintf_r>
400dbe81:	040ae6        	bgei	a10, -1, 400dbe89 <snprintf+0x61>
400dbe84:	8ba022        	movi	a2, 139
400dbe87:	0529      	s32i.n	a2, a5, 0
400dbe89:	0a2d      	mov.n	a2, a10
400dbe8b:	538c      	beqz.n	a3, 400dbe94 <snprintf+0x6c>
400dbe8d:	0138      	l32i.n	a3, a1, 0
400dbe8f:	050c      	movi.n	a5, 0
400dbe91:	004352        	s8i	a5, a3, 0
400dbe94:	f01d      	retw.n
	...

400dbe98 <get_arg$isra$0>:
400dbe98:	008136        	entry	a1, 64
400dbe9b:	102182        	l32i	a8, a1, 64
400dbe9e:	2129      	s32i.n	a2, a1, 8
400dbea0:	3159      	s32i.n	a5, a1, 12
400dbea2:	0528      	l32i.n	a2, a5, 0
400dbea4:	2198      	l32i.n	a9, a1, 8
400dbea6:	0858      	l32i.n	a5, a8, 0
400dbea8:	933550        	movnez	a3, a5, a5
400dbeab:	0199      	s32i.n	a9, a1, 0
400dbead:	00d3c6        	j	400dc200 <get_arg$isra$0+0x368>
400dbeb0:	1b0000        	un.s	b0, f0, f0
400dbeb3:	035233        	lsi	f3, a2, 12
400dbeb6:	551600        	extui	a1, a0, 22, 6
400dbeb9:	c58200        	extui	a8, a0, 18, 13
400dbebc:	56db      	addi.n	a5, a6, 13
400dbebe:	ff18      	l32i.n	a1, a15, 60
400dbec0:	349516        	beqz	a5, 400dc20d <get_arg$isra$0+0x375>
400dbec3:	050c      	movi.n	a5, 0
400dbec5:	05ed      	mov.n	a14, a5
400dbec7:	f97c      	movi.n	a9, -1
400dbec9:	05dd      	mov.n	a13, a5
400dbecb:	1159      	s32i.n	a5, a1, 4
400dbecd:	03ad      	mov.n	a10, a3
400dbecf:	d217c1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400dbed2:	000a82        	l8ui	a8, a10, 0
400dbed5:	331b      	addi.n	a3, a3, 1
400dbed7:	bc8a      	add.n	a11, a12, a8
400dbed9:	000bc2        	l8ui	a12, a11, 0
400dbedc:	11b8      	l32i.n	a11, a1, 4
400dbede:	b0fbb0        	addx8	a15, a11, a11
400dbee1:	d213b1        	l32r	a11, 400d0730 <_flash_cache_start+0x718>
400dbee4:	bbfa      	add.n	a11, a11, a15
400dbee6:	bbca      	add.n	a11, a11, a12
400dbee8:	000bb2        	l8ui	a11, a11, 0
400dbeeb:	11b9      	s32i.n	a11, a1, 4
400dbeed:	d211b1        	l32r	a11, 400d0734 <_flash_cache_start+0x71c>
400dbef0:	fbfa      	add.n	a15, a11, a15
400dbef2:	ffca      	add.n	a15, a15, a12
400dbef4:	000fb2        	l8ui	a11, a15, 0
400dbef7:	bb0b      	addi.n	a11, a11, -1
400dbef9:	74b0b0        	extui	a11, a11, 0, 8
400dbefc:	028bb6        	bltui	a11, 8, 400dbf02 <get_arg$isra$0+0x6a>
400dbeff:	00bcc6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf02:	d20dc1        	l32r	a12, 400d0738 <_flash_cache_start+0x720>
400dbf05:	a0bbc0        	addx4	a11, a11, a12
400dbf08:	0bb8      	l32i.n	a11, a11, 0
400dbf0a:	000ba0        	jx	a11
400dbf0d:	9a0c      	movi.n	a10, 9
400dbf0f:	00b5c6        	j	400dc1ea <get_arg$isra$0+0x352>
400dbf12:	6aa0b2        	movi	a11, 106
400dbf15:	3018b7        	beq	a8, a11, 400dbf49 <get_arg$isra$0+0xb1>
400dbf18:	0d3b87        	bltu	a11, a8, 400dbf29 <get_arg$isra$0+0x91>
400dbf1b:	cb4c      	movi.n	a11, 76
400dbf1d:	2318b7        	beq	a8, a11, 400dbf44 <get_arg$isra$0+0xac>
400dbf20:	68a0b2        	movi	a11, 104
400dbf23:	2a98b7        	bne	a8, a11, 400dbf51 <get_arg$isra$0+0xb9>
400dbf26:	00b306        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf29:	74a0b2        	movi	a11, 116
400dbf2c:	0298b7        	bne	a8, a11, 400dbf32 <get_arg$isra$0+0x9a>
400dbf2f:	00b0c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf32:	7aa0b2        	movi	a11, 122
400dbf35:	0298b7        	bne	a8, a11, 400dbf3b <get_arg$isra$0+0xa3>
400dbf38:	00ae86        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf3b:	71a0b2        	movi	a11, 113
400dbf3e:	0718b7        	beq	a8, a11, 400dbf49 <get_arg$isra$0+0xb1>
400dbf41:	000306        	j	400dbf51 <get_arg$isra$0+0xb9>
400dbf44:	880c      	movi.n	a8, 8
400dbf46:	000046        	j	400dbf4b <get_arg$isra$0+0xb3>
400dbf49:	082c      	movi.n	a8, 32
400dbf4b:	20dd80        	or	a13, a13, a8
400dbf4e:	00a906        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf51:	010ab2        	l8ui	a11, a10, 1
400dbf54:	6ca082        	movi	a8, 108
400dbf57:	099b87        	bne	a11, a8, 400dbf64 <get_arg$isra$0+0xcc>
400dbf5a:	032c      	movi.n	a3, 32
400dbf5c:	20dd30        	or	a13, a13, a3
400dbf5f:	3a2b      	addi.n	a3, a10, 2
400dbf61:	00a446        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbf64:	081c      	movi.n	a8, 16
400dbf66:	fff846        	j	400dbf4b <get_arg$isra$0+0xb3>
400dbf69:	bfc882        	addi	a8, a8, -65
400dbf6c:	748080        	extui	a8, a8, 0, 8
400dbf6f:	7a3c      	movi.n	a10, 55
400dbf71:	442020        	extui	a2, a2, 0, 5
400dbf74:	253a87        	bltu	a10, a8, 400dbf9d <get_arg$isra$0+0x105>
400dbf77:	d1f1a1        	l32r	a10, 400d073c <_flash_cache_start+0x724>
400dbf7a:	a088a0        	addx4	a8, a8, a10
400dbf7d:	0888      	l32i.n	a8, a8, 0
400dbf7f:	0008a0        	jx	a8
400dbf82:	026d47        	bbci	a13, 4, 400dbf88 <get_arg$isra$0+0xf0>
400dbf85:	00d806        	j	400dc2e9 <get_arg$isra$0+0x451>
400dbf88:	026d57        	bbci	a13, 5, 400dbf8e <get_arg$isra$0+0xf6>
400dbf8b:	00dec6        	j	400dc30a <get_arg$isra$0+0x472>
400dbf8e:	00db46        	j	400dc2ff <get_arg$isra$0+0x467>
400dbf91:	026d47        	bbci	a13, 4, 400dbf97 <get_arg$isra$0+0xff>
400dbf94:	00d186        	j	400dc2de <get_arg$isra$0+0x446>
400dbf97:	00d906        	j	400dc2ff <get_arg$isra$0+0x467>
400dbf9a:	000000        	ill
400dbf9d:	070926        	beqi	a9, -1, 400dbfa8 <get_arg$isra$0+0x110>
400dbfa0:	a08970        	addx4	a8, a9, a7
400dbfa3:	0859      	s32i.n	a5, a8, 0
400dbfa5:	009346        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbfa8:	0275b6        	bltui	a5, 7, 400dbfae <get_arg$isra$0+0x116>
400dbfab:	0091c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbfae:	d1e481        	l32r	a8, 400d0740 <_flash_cache_start+0x728>
400dbfb1:	a08580        	addx4	a8, a5, a8
400dbfb4:	0888      	l32i.n	a8, a8, 0
400dbfb6:	0008a0        	jx	a8
400dbfb9:	2458      	l32i.n	a5, a4, 8
400dbfbb:	881c      	movi.n	a8, 24
400dbfbd:	954b      	addi.n	a9, a5, 4
400dbfbf:	2499      	s32i.n	a9, a4, 8
400dbfc1:	a21b      	addi.n	a10, a2, 1
400dbfc3:	b02260        	addx8	a2, a2, a6
400dbfc6:	072897        	blt	a8, a9, 400dbfd1 <get_arg$isra$0+0x139>
400dbfc9:	1488      	l32i.n	a8, a4, 4
400dbfcb:	0002c6        	j	400dbfda <get_arg$isra$0+0x142>
400dbfce:	000000        	ill
400dbfd1:	032857        	blt	a8, a5, 400dbfd8 <get_arg$isra$0+0x140>
400dbfd4:	452c      	movi.n	a5, 36
400dbfd6:	2459      	s32i.n	a5, a4, 8
400dbfd8:	0488      	l32i.n	a8, a4, 0
400dbfda:	2458      	l32i.n	a5, a4, 8
400dbfdc:	f97c      	movi.n	a9, -1
400dbfde:	585a      	add.n	a5, a8, a5
400dbfe0:	fcc552        	addi	a5, a5, -4
400dbfe3:	0558      	l32i.n	a5, a5, 0
400dbfe5:	0259      	s32i.n	a5, a2, 0
400dbfe7:	0a2d      	mov.n	a2, a10
400dbfe9:	150c      	movi.n	a5, 1
400dbfeb:	0081c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dbfee:	2458      	l32i.n	a5, a4, 8
400dbff0:	887c      	movi.n	a8, -8
400dbff2:	557b      	addi.n	a5, a5, 7
400dbff4:	105580        	and	a5, a5, a8
400dbff7:	958b      	addi.n	a9, a5, 8
400dbff9:	2499      	s32i.n	a9, a4, 8
400dbffb:	881c      	movi.n	a8, 24
400dbffd:	a21b      	addi.n	a10, a2, 1
400dbfff:	b02260        	addx8	a2, a2, a6
400dc002:	072897        	blt	a8, a9, 400dc00d <get_arg$isra$0+0x175>
400dc005:	1488      	l32i.n	a8, a4, 4
400dc007:	0002c6        	j	400dc016 <get_arg$isra$0+0x17e>
400dc00a:	000000        	ill
400dc00d:	032857        	blt	a8, a5, 400dc014 <get_arg$isra$0+0x17c>
400dc010:	852c      	movi.n	a5, 40
400dc012:	2459      	s32i.n	a5, a4, 8
400dc014:	0488      	l32i.n	a8, a4, 0
400dc016:	2458      	l32i.n	a5, a4, 8
400dc018:	585a      	add.n	a5, a8, a5
400dc01a:	f8c552        	addi	a5, a5, -8
400dc01d:	1598      	l32i.n	a9, a5, 4
400dc01f:	0588      	l32i.n	a8, a5, 0
400dc021:	1299      	s32i.n	a9, a2, 4
400dc023:	0289      	s32i.n	a8, a2, 0
400dc025:	f97c      	movi.n	a9, -1
400dc027:	0a2d      	mov.n	a2, a10
400dc029:	250c      	movi.n	a5, 2
400dc02b:	0071c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc02e:	2458      	l32i.n	a5, a4, 8
400dc030:	881c      	movi.n	a8, 24
400dc032:	954b      	addi.n	a9, a5, 4
400dc034:	2499      	s32i.n	a9, a4, 8
400dc036:	a21b      	addi.n	a10, a2, 1
400dc038:	b02260        	addx8	a2, a2, a6
400dc03b:	062897        	blt	a8, a9, 400dc045 <get_arg$isra$0+0x1ad>
400dc03e:	1488      	l32i.n	a8, a4, 4
400dc040:	000286        	j	400dc04e <get_arg$isra$0+0x1b6>
400dc043:	570000        	lsi	f0, a0, 0x15c
400dc046:	0328      	l32i.n	a2, a3, 0
400dc048:	452c      	movi.n	a5, 36
400dc04a:	2459      	s32i.n	a5, a4, 8
400dc04c:	0488      	l32i.n	a8, a4, 0
400dc04e:	2458      	l32i.n	a5, a4, 8
400dc050:	f97c      	movi.n	a9, -1
400dc052:	585a      	add.n	a5, a8, a5
400dc054:	fcc552        	addi	a5, a5, -4
400dc057:	0558      	l32i.n	a5, a5, 0
400dc059:	0259      	s32i.n	a5, a2, 0
400dc05b:	0a2d      	mov.n	a2, a10
400dc05d:	650c      	movi.n	a5, 6
400dc05f:	0064c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc062:	2458      	l32i.n	a5, a4, 8
400dc064:	881c      	movi.n	a8, 24
400dc066:	954b      	addi.n	a9, a5, 4
400dc068:	2499      	s32i.n	a9, a4, 8
400dc06a:	a21b      	addi.n	a10, a2, 1
400dc06c:	b02260        	addx8	a2, a2, a6
400dc06f:	062897        	blt	a8, a9, 400dc079 <get_arg$isra$0+0x1e1>
400dc072:	1488      	l32i.n	a8, a4, 4
400dc074:	000286        	j	400dc082 <get_arg$isra$0+0x1ea>
400dc077:	570000        	lsi	f0, a0, 0x15c
400dc07a:	0328      	l32i.n	a2, a3, 0
400dc07c:	452c      	movi.n	a5, 36
400dc07e:	2459      	s32i.n	a5, a4, 8
400dc080:	0488      	l32i.n	a8, a4, 0
400dc082:	2458      	l32i.n	a5, a4, 8
400dc084:	f97c      	movi.n	a9, -1
400dc086:	585a      	add.n	a5, a8, a5
400dc088:	fcc552        	addi	a5, a5, -4
400dc08b:	0558      	l32i.n	a5, a5, 0
400dc08d:	0259      	s32i.n	a5, a2, 0
400dc08f:	0a2d      	mov.n	a2, a10
400dc091:	050c      	movi.n	a5, 0
400dc093:	0057c6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc096:	2458      	l32i.n	a5, a4, 8
400dc098:	881c      	movi.n	a8, 24
400dc09a:	954b      	addi.n	a9, a5, 4
400dc09c:	2499      	s32i.n	a9, a4, 8
400dc09e:	a21b      	addi.n	a10, a2, 1
400dc0a0:	b02260        	addx8	a2, a2, a6
400dc0a3:	062897        	blt	a8, a9, 400dc0ad <get_arg$isra$0+0x215>
400dc0a6:	1488      	l32i.n	a8, a4, 4
400dc0a8:	000286        	j	400dc0b6 <get_arg$isra$0+0x21e>
400dc0ab:	570000        	lsi	f0, a0, 0x15c
400dc0ae:	0328      	l32i.n	a2, a3, 0
400dc0b0:	452c      	movi.n	a5, 36
400dc0b2:	2459      	s32i.n	a5, a4, 8
400dc0b4:	0488      	l32i.n	a8, a4, 0
400dc0b6:	2458      	l32i.n	a5, a4, 8
400dc0b8:	f97c      	movi.n	a9, -1
400dc0ba:	585a      	add.n	a5, a8, a5
400dc0bc:	fcc552        	addi	a5, a5, -4
400dc0bf:	0558      	l32i.n	a5, a5, 0
400dc0c1:	0259      	s32i.n	a5, a2, 0
400dc0c3:	0a2d      	mov.n	a2, a10
400dc0c5:	350c      	movi.n	a5, 3
400dc0c7:	004ac6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc0ca:	2458      	l32i.n	a5, a4, 8
400dc0cc:	887c      	movi.n	a8, -8
400dc0ce:	557b      	addi.n	a5, a5, 7
400dc0d0:	105580        	and	a5, a5, a8
400dc0d3:	958b      	addi.n	a9, a5, 8
400dc0d5:	2499      	s32i.n	a9, a4, 8
400dc0d7:	881c      	movi.n	a8, 24
400dc0d9:	a21b      	addi.n	a10, a2, 1
400dc0db:	b02260        	addx8	a2, a2, a6
400dc0de:	072897        	blt	a8, a9, 400dc0e9 <get_arg$isra$0+0x251>
400dc0e1:	1488      	l32i.n	a8, a4, 4
400dc0e3:	0002c6        	j	400dc0f2 <get_arg$isra$0+0x25a>
400dc0e6:	000000        	ill
400dc0e9:	032857        	blt	a8, a5, 400dc0f0 <get_arg$isra$0+0x258>
400dc0ec:	852c      	movi.n	a5, 40
400dc0ee:	2459      	s32i.n	a5, a4, 8
400dc0f0:	0488      	l32i.n	a8, a4, 0
400dc0f2:	2458      	l32i.n	a5, a4, 8
400dc0f4:	585a      	add.n	a5, a8, a5
400dc0f6:	f8c552        	addi	a5, a5, -8
400dc0f9:	1598      	l32i.n	a9, a5, 4
400dc0fb:	0588      	l32i.n	a8, a5, 0
400dc0fd:	1299      	s32i.n	a9, a2, 4
400dc0ff:	0289      	s32i.n	a8, a2, 0
400dc101:	f97c      	movi.n	a9, -1
400dc103:	0a2d      	mov.n	a2, a10
400dc105:	450c      	movi.n	a5, 4
400dc107:	003ac6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc10a:	2488      	l32i.n	a8, a4, 8
400dc10c:	8a7c      	movi.n	a10, -8
400dc10e:	887b      	addi.n	a8, a8, 7
400dc110:	1088a0        	and	a8, a8, a10
400dc113:	b88b      	addi.n	a11, a8, 8
400dc115:	24b9      	s32i.n	a11, a4, 8
400dc117:	8a1c      	movi.n	a10, 24
400dc119:	c21b      	addi.n	a12, a2, 1
400dc11b:	b02260        	addx8	a2, a2, a6
400dc11e:	072ab7        	blt	a10, a11, 400dc129 <get_arg$isra$0+0x291>
400dc121:	14a8      	l32i.n	a10, a4, 4
400dc123:	0002c6        	j	400dc132 <get_arg$isra$0+0x29a>
400dc126:	000000        	ill
400dc129:	032a87        	blt	a10, a8, 400dc130 <get_arg$isra$0+0x298>
400dc12c:	882c      	movi.n	a8, 40
400dc12e:	2489      	s32i.n	a8, a4, 8
400dc130:	04a8      	l32i.n	a10, a4, 0
400dc132:	2488      	l32i.n	a8, a4, 8
400dc134:	8a8a      	add.n	a8, a10, a8
400dc136:	f8c882        	addi	a8, a8, -8
400dc139:	08a8      	l32i.n	a10, a8, 0
400dc13b:	18b8      	l32i.n	a11, a8, 4
400dc13d:	02a9      	s32i.n	a10, a2, 0
400dc13f:	12b9      	s32i.n	a11, a2, 4
400dc141:	002006        	j	400dc1c5 <get_arg$isra$0+0x32d>
400dc144:	0788      	l32i.n	a8, a7, 0
400dc146:	140866        	bnei	a8, -1, 400dc15e <get_arg$isra$0+0x2c6>
400dc149:	80a0c2        	movi	a12, 128
400dc14c:	0b0c      	movi.n	a11, 0
400dc14e:	07ad      	mov.n	a10, a7
400dc150:	51d9      	s32i.n	a13, a1, 20
400dc152:	61e9      	s32i.n	a14, a1, 24
400dc154:	cfc681        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400dc157:	0008e0        	callx8	a8
400dc15a:	61e8      	l32i.n	a14, a1, 24
400dc15c:	51d8      	l32i.n	a13, a1, 20
400dc15e:	0188      	l32i.n	a8, a1, 0
400dc160:	9e0b      	addi.n	a9, a14, -1
400dc162:	538890        	max	a8, a8, a9
400dc165:	000ac6        	j	400dc194 <get_arg$isra$0+0x2fc>
400dc168:	0788      	l32i.n	a8, a7, 0
400dc16a:	180866        	bnei	a8, -1, 400dc186 <get_arg$isra$0+0x2ee>
400dc16d:	80a0c2        	movi	a12, 128
400dc170:	0b0c      	movi.n	a11, 0
400dc172:	07ad      	mov.n	a10, a7
400dc174:	4199      	s32i.n	a9, a1, 16
400dc176:	51d9      	s32i.n	a13, a1, 20
400dc178:	61e9      	s32i.n	a14, a1, 24
400dc17a:	cfbc81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400dc17d:	0008e0        	callx8	a8
400dc180:	61e8      	l32i.n	a14, a1, 24
400dc182:	51d8      	l32i.n	a13, a1, 20
400dc184:	4198      	l32i.n	a9, a1, 16
400dc186:	ee0b      	addi.n	a14, a14, -1
400dc188:	a08e70        	addx4	a8, a14, a7
400dc18b:	0a0c      	movi.n	a10, 0
400dc18d:	08a9      	s32i.n	a10, a8, 0
400dc18f:	0188      	l32i.n	a8, a1, 0
400dc191:	5388e0        	max	a8, a8, a14
400dc194:	0189      	s32i.n	a8, a1, 0
400dc196:	001706        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc199:	0a3d      	mov.n	a3, a10
400dc19b:	2488      	l32i.n	a8, a4, 8
400dc19d:	8a1c      	movi.n	a10, 24
400dc19f:	b84b      	addi.n	a11, a8, 4
400dc1a1:	24b9      	s32i.n	a11, a4, 8
400dc1a3:	c21b      	addi.n	a12, a2, 1
400dc1a5:	b02260        	addx8	a2, a2, a6
400dc1a8:	052ab7        	blt	a10, a11, 400dc1b1 <get_arg$isra$0+0x319>
400dc1ab:	14a8      	l32i.n	a10, a4, 4
400dc1ad:	000246        	j	400dc1ba <get_arg$isra$0+0x322>
400dc1b0:	2a8700        	mul.s	f8, f7, f0
400dc1b3:	482c03        	lsi	f0, a12, 0x120
400dc1b6:	2489      	s32i.n	a8, a4, 8
400dc1b8:	04a8      	l32i.n	a10, a4, 0
400dc1ba:	2488      	l32i.n	a8, a4, 8
400dc1bc:	8a8a      	add.n	a8, a10, a8
400dc1be:	fcc882        	addi	a8, a8, -4
400dc1c1:	0888      	l32i.n	a8, a8, 0
400dc1c3:	0289      	s32i.n	a8, a2, 0
400dc1c5:	0c2d      	mov.n	a2, a12
400dc1c7:	000ac6        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc1ca:	d0c8e2        	addi	a14, a8, -48
400dc1cd:	9a0c      	movi.n	a10, 9
400dc1cf:	0001c6        	j	400dc1da <get_arg$isra$0+0x342>
400dc1d2:	a0eee0        	addx4	a14, a14, a14
400dc1d5:	90ee80        	addx2	a14, a14, a8
400dc1d8:	331b      	addi.n	a3, a3, 1
400dc1da:	000382        	l8ui	a8, a3, 0
400dc1dd:	589c      	beqz.n	a8, 400dc1f6 <get_arg$isra$0+0x35e>
400dc1df:	d0c882        	addi	a8, a8, -48
400dc1e2:	ecba87        	bgeu	a10, a8, 400dc1d2 <get_arg$isra$0+0x33a>
400dc1e5:	000346        	j	400dc1f6 <get_arg$isra$0+0x35e>
400dc1e8:	331b      	addi.n	a3, a3, 1
400dc1ea:	000382        	l8ui	a8, a3, 0
400dc1ed:	d0c882        	addi	a8, a8, -48
400dc1f0:	748080        	extui	a8, a8, 0, 8
400dc1f3:	f1ba87        	bgeu	a10, a8, 400dc1e8 <get_arg$isra$0+0x350>
400dc1f6:	11a8      	l32i.n	a10, a1, 4
400dc1f8:	b80c      	movi.n	a8, 11
400dc1fa:	021a87        	beq	a10, a8, 400dc200 <get_arg$isra$0+0x368>
400dc1fd:	ff3306        	j	400dbecd <get_arg$isra$0+0x35>
400dc200:	000352        	l8ui	a5, a3, 0
400dc203:	658c      	beqz.n	a5, 400dc20d <get_arg$isra$0+0x375>
400dc205:	2188      	l32i.n	a8, a1, 8
400dc207:	022827        	blt	a8, a2, 400dc20d <get_arg$isra$0+0x375>
400dc20a:	ff2986        	j	400dbeb4 <get_arg$isra$0+0x1c>
400dc20d:	0188      	l32i.n	a8, a1, 0
400dc20f:	000352        	l8ui	a5, a3, 0
400dc212:	2198      	l32i.n	a9, a1, 8
400dc214:	f21b      	addi.n	a15, a2, 1
400dc216:	839850        	moveqz	a9, a8, a5
400dc219:	0199      	s32i.n	a9, a1, 0
400dc21b:	b0b260        	addx8	a11, a2, a6
400dc21e:	a07270        	addx4	a7, a2, a7
400dc221:	8a1c      	movi.n	a10, 24
400dc223:	4c2c      	movi.n	a12, 36
400dc225:	8d7c      	movi.n	a13, -8
400dc227:	8e2c      	movi.n	a14, 40
400dc229:	002306        	j	400dc2b9 <get_arg$isra$0+0x421>
400dc22c:	0758      	l32i.n	a5, a7, 0
400dc22e:	2428      	l32i.n	a2, a4, 8
400dc230:	550b      	addi.n	a5, a5, -1
400dc232:	5f65f6        	bgeui	a5, 6, 400dc295 <get_arg$isra$0+0x3fd>
400dc235:	d14391        	l32r	a9, 400d0744 <_flash_cache_start+0x72c>
400dc238:	a05590        	addx4	a5, a5, a9
400dc23b:	0558      	l32i.n	a5, a5, 0
400dc23d:	0005a0        	jx	a5
400dc240:	227b      	addi.n	a2, a2, 7
400dc242:	1022d0        	and	a2, a2, a13
400dc245:	528b      	addi.n	a5, a2, 8
400dc247:	2459      	s32i.n	a5, a4, 8
400dc249:	042a57        	blt	a10, a5, 400dc251 <get_arg$isra$0+0x3b9>
400dc24c:	1458      	l32i.n	a5, a4, 4
400dc24e:	000186        	j	400dc258 <get_arg$isra$0+0x3c0>
400dc251:	012a27        	blt	a10, a2, 400dc256 <get_arg$isra$0+0x3be>
400dc254:	24e9      	s32i.n	a14, a4, 8
400dc256:	0458      	l32i.n	a5, a4, 0
400dc258:	2428      	l32i.n	a2, a4, 8
400dc25a:	252a      	add.n	a2, a5, a2
400dc25c:	f8c222        	addi	a2, a2, -8
400dc25f:	0288      	l32i.n	a8, a2, 0
400dc261:	1298      	l32i.n	a9, a2, 4
400dc263:	0b89      	s32i.n	a8, a11, 0
400dc265:	1b99      	s32i.n	a9, a11, 4
400dc267:	001206        	j	400dc2b3 <get_arg$isra$0+0x41b>
400dc26a:	227b      	addi.n	a2, a2, 7
400dc26c:	1022d0        	and	a2, a2, a13
400dc26f:	528b      	addi.n	a5, a2, 8
400dc271:	2459      	s32i.n	a5, a4, 8
400dc273:	052a57        	blt	a10, a5, 400dc27c <get_arg$isra$0+0x3e4>
400dc276:	1458      	l32i.n	a5, a4, 4
400dc278:	0001c6        	j	400dc283 <get_arg$isra$0+0x3eb>
400dc27b:	2a2700        	mul.s	f2, f7, f0
400dc27e:	24e901        	l32r	a0, 400a5624 <_iram_end+0x17ad0>
400dc281:	0458      	l32i.n	a5, a4, 0
400dc283:	2428      	l32i.n	a2, a4, 8
400dc285:	252a      	add.n	a2, a5, a2
400dc287:	f8c222        	addi	a2, a2, -8
400dc28a:	0288      	l32i.n	a8, a2, 0
400dc28c:	1298      	l32i.n	a9, a2, 4
400dc28e:	0b89      	s32i.n	a8, a11, 0
400dc290:	1b99      	s32i.n	a9, a11, 4
400dc292:	000746        	j	400dc2b3 <get_arg$isra$0+0x41b>
400dc295:	524b      	addi.n	a5, a2, 4
400dc297:	2459      	s32i.n	a5, a4, 8
400dc299:	042a57        	blt	a10, a5, 400dc2a1 <get_arg$isra$0+0x409>
400dc29c:	1458      	l32i.n	a5, a4, 4
400dc29e:	000186        	j	400dc2a8 <get_arg$isra$0+0x410>
400dc2a1:	012a27        	blt	a10, a2, 400dc2a6 <get_arg$isra$0+0x40e>
400dc2a4:	24c9      	s32i.n	a12, a4, 8
400dc2a6:	0458      	l32i.n	a5, a4, 0
400dc2a8:	2428      	l32i.n	a2, a4, 8
400dc2aa:	252a      	add.n	a2, a5, a2
400dc2ac:	fcc222        	addi	a2, a2, -4
400dc2af:	0228      	l32i.n	a2, a2, 0
400dc2b1:	0b29      	s32i.n	a2, a11, 0
400dc2b3:	ff1b      	addi.n	a15, a15, 1
400dc2b5:	bb8b      	addi.n	a11, a11, 8
400dc2b7:	774b      	addi.n	a7, a7, 4
400dc2b9:	0158      	l32i.n	a5, a1, 0
400dc2bb:	2f0b      	addi.n	a2, a15, -1
400dc2bd:	022527        	blt	a5, a2, 400dc2c3 <get_arg$isra$0+0x42b>
400dc2c0:	ffda06        	j	400dc22c <get_arg$isra$0+0x394>
400dc2c3:	3188      	l32i.n	a8, a1, 12
400dc2c5:	102192        	l32i	a9, a1, 64
400dc2c8:	0829      	s32i.n	a2, a8, 0
400dc2ca:	2188      	l32i.n	a8, a1, 8
400dc2cc:	0939      	s32i.n	a3, a9, 0
400dc2ce:	b02860        	addx8	a2, a8, a6
400dc2d1:	f01d      	retw.n
400dc2d3:	350c      	movi.n	a5, 3
400dc2d5:	020926        	beqi	a9, -1, 400dc2db <get_arg$isra$0+0x443>
400dc2d8:	ff3106        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc2db:	ff6dc6        	j	400dc096 <get_arg$isra$0+0x1fe>
400dc2de:	650c      	movi.n	a5, 6
400dc2e0:	020926        	beqi	a9, -1, 400dc2e6 <get_arg$isra$0+0x44e>
400dc2e3:	ff2e46        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc2e6:	ff5106        	j	400dc02e <get_arg$isra$0+0x196>
400dc2e9:	150c      	movi.n	a5, 1
400dc2eb:	020926        	beqi	a9, -1, 400dc2f1 <get_arg$isra$0+0x459>
400dc2ee:	ff2b86        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc2f1:	ff3106        	j	400dbfb9 <get_arg$isra$0+0x121>
400dc2f4:	450c      	movi.n	a5, 4
400dc2f6:	020926        	beqi	a9, -1, 400dc2fc <get_arg$isra$0+0x464>
400dc2f9:	ff28c6        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc2fc:	ff7286        	j	400dc0ca <get_arg$isra$0+0x232>
400dc2ff:	050c      	movi.n	a5, 0
400dc301:	020926        	beqi	a9, -1, 400dc307 <get_arg$isra$0+0x46f>
400dc304:	ff2606        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc307:	ff55c6        	j	400dc062 <get_arg$isra$0+0x1ca>
400dc30a:	250c      	movi.n	a5, 2
400dc30c:	020926        	beqi	a9, -1, 400dc312 <get_arg$isra$0+0x47a>
400dc30f:	ff2346        	j	400dbfa0 <get_arg$isra$0+0x108>
400dc312:	ff3606        	j	400dbfee <get_arg$isra$0+0x156>
400dc315:	000000        	ill

400dc318 <_svfprintf_r>:
400dc318:	062136        	entry	a1, 0x310
400dc31b:	a36122        	s32i	a2, a1, 0x28c
400dc31e:	a321a2        	l32i	a10, a1, 0x28c
400dc321:	a46132        	s32i	a3, a1, 0x290
400dc324:	a16142        	s32i	a4, a1, 0x284
400dc327:	9c6152        	s32i	a5, a1, 0x270
400dc32a:	9d6162        	s32i	a6, a1, 0x274
400dc32d:	9e6172        	s32i	a7, a1, 0x278
400dc330:	d11581        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400dc333:	0008e0        	callx8	a8
400dc336:	0aa8      	l32i.n	a10, a10, 0
400dc338:	b161a2        	s32i	a10, a1, 0x2c4
400dc33b:	cf5181        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400dc33e:	0008e0        	callx8	a8
400dc341:	a42182        	l32i	a8, a1, 0x290
400dc344:	af61a2        	s32i	a10, a1, 0x2bc
400dc347:	061822        	l16ui	a2, a8, 12
400dc34a:	10c132        	addi	a3, a1, 16
400dc34d:	276277        	bbci	a2, 7, 400dc378 <_svfprintf_r+0x60>
400dc350:	4828      	l32i.n	a2, a8, 16
400dc352:	22ec      	bnez.n	a2, 400dc378 <_svfprintf_r+0x60>
400dc354:	a321a2        	l32i	a10, a1, 0x28c
400dc357:	0b4c      	movi.n	a11, 64
400dc359:	a852e5        	call8	40084888 <_malloc_r>
400dc35c:	a42192        	l32i	a9, a1, 0x290
400dc35f:	09a9      	s32i.n	a10, a9, 0
400dc361:	49a9      	s32i.n	a10, a9, 16
400dc363:	aacc      	bnez.n	a10, 400dc371 <_svfprintf_r+0x59>
400dc365:	a32182        	l32i	a8, a1, 0x28c
400dc368:	c20c      	movi.n	a2, 12
400dc36a:	0829      	s32i.n	a2, a8, 0
400dc36c:	f27c      	movi.n	a2, -1
400dc36e:	f01d      	retw.n
400dc370:	219200        	srai	a9, a0, 2
400dc373:	024ca4        	lsi	f10, a12, 8
400dc376:	5929      	s32i.n	a2, a9, 20
400dc378:	f47c      	movi.n	a4, -1
400dc37a:	10c1a2        	addi	a10, a1, 16
400dc37d:	e4a132        	movi	a3, 0x1e4
400dc380:	446142        	s32i	a4, a1, 0x110
400dc383:	cf3651        	l32r	a5, 400d005c <_flash_cache_start+0x44>
400dc386:	cf3541        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400dc389:	020c      	movi.n	a2, 0
400dc38b:	3a3a      	add.n	a3, a10, a3
400dc38d:	8d6132        	s32i	a3, a1, 0x234
400dc390:	8f6122        	s32i	a2, a1, 0x23c
400dc393:	8e6122        	s32i	a2, a1, 0x238
400dc396:	966122        	s32i	a2, a1, 0x258
400dc399:	976122        	s32i	a2, a1, 0x25c
400dc39c:	a76122        	s32i	a2, a1, 0x29c
400dc39f:	aa6142        	s32i	a4, a1, 0x2a8
400dc3a2:	ab6152        	s32i	a5, a1, 0x2ac
400dc3a5:	9f6132        	s32i	a3, a1, 0x27c
400dc3a8:	b56122        	s32i	a2, a1, 0x2d4
400dc3ab:	b46122        	s32i	a2, a1, 0x2d0
400dc3ae:	ad6122        	s32i	a2, a1, 0x2b4
400dc3b1:	b06122        	s32i	a2, a1, 0x2c0
400dc3b4:	b36122        	s32i	a2, a1, 0x2cc
400dc3b7:	ae6122        	s32i	a2, a1, 0x2b8
400dc3ba:	000206        	j	400dc3c6 <_svfprintf_r+0xae>
400dc3bd:	215200        	srai	a5, a0, 2
400dc3c0:	2da8      	l32i.n	a10, a13, 8
400dc3c2:	615207        	bbc	a2, a0, 400dc427 <_svfprintf_r+0x10f>
400dc3c5:	2152a1        	l32r	a10, 400a4910 <_iram_end+0x16dbc>
400dc3c8:	0046a1        	l32r	a10, 4009c4e0 <_iram_end+0xe98c>
400dc3cb:	551b00        	extui	a1, a0, 27, 6
400dc3ce:	000532        	l8ui	a3, a5, 0
400dc3d1:	438c      	beqz.n	a3, 400dc3d9 <_svfprintf_r+0xc1>
400dc3d3:	dbc332        	addi	a3, a3, -37
400dc3d6:	ff2356        	bnez	a3, 400dc3cc <_svfprintf_r+0xb4>
400dc3d9:	a12182        	l32i	a8, a1, 0x284
400dc3dc:	c03580        	sub	a3, a5, a8
400dc3df:	052316        	beqz	a3, 400dc435 <_svfprintf_r+0x11d>
400dc3e2:	8f2142        	l32i	a4, a1, 0x23c
400dc3e5:	9f2192        	l32i	a9, a1, 0x27c
400dc3e8:	443a      	add.n	a4, a4, a3
400dc3ea:	8f6142        	s32i	a4, a1, 0x23c
400dc3ed:	8e2142        	l32i	a4, a1, 0x238
400dc3f0:	10c1a2        	addi	a10, a1, 16
400dc3f3:	441b      	addi.n	a4, a4, 1
400dc3f5:	0989      	s32i.n	a8, a9, 0
400dc3f7:	1939      	s32i.n	a3, a9, 4
400dc3f9:	8e6142        	s32i	a4, a1, 0x238
400dc3fc:	02da62        	addmi	a6, a10, 0x200
400dc3ff:	0984e6        	bgei	a4, 8, 400dc40c <_svfprintf_r+0xf4>
400dc402:	998b      	addi.n	a9, a9, 8
400dc404:	9f6192        	s32i	a9, a1, 0x27c
400dc407:	000886        	j	400dc42d <_svfprintf_r+0x115>
400dc40a:	c20000        	quou	a0, a0, a0
400dc40d:	b234a2        	lsi	f10, a4, 0x2c8
400dc410:	a2a421        	l32r	a2, 400c4ea0 <_rtc_text_end+0x4ea0>
400dc413:	10a321        	l32r	a2, 400a06a0 <_iram_end+0x12b4c>
400dc416:	80cc      	bnez.n	a0, 400dc422 <_svfprintf_r+0x10a>
400dc418:	0a0fa5        	call8	400e6514 <__ssprint_r>
400dc41b:	002a16        	beqz	a10, 400dc421 <_svfprintf_r+0x109>
400dc41e:	0befc6        	j	400df3e1 <_svfprintf_r+0x30c9>
400dc421:	e4a142        	movi	a4, 0x1e4
400dc424:	10c162        	addi	a6, a1, 16
400dc427:	806640        	add	a6, a6, a4
400dc42a:	9f6162        	s32i	a6, a1, 0x27c
400dc42d:	ae2182        	l32i	a8, a1, 0x2b8
400dc430:	883a      	add.n	a8, a8, a3
400dc432:	ae6182        	s32i	a8, a1, 0x2b8
400dc435:	000532        	l8ui	a3, a5, 0
400dc438:	13cc      	bnez.n	a3, 400dc43d <_svfprintf_r+0x125>
400dc43a:	0bde86        	j	400df3b8 <_svfprintf_r+0x30a0>
400dc43d:	10c192        	addi	a9, a1, 16
400dc440:	060c      	movi.n	a6, 0
400dc442:	02d942        	addmi	a4, a9, 0x200
400dc445:	524462        	s8i	a6, a4, 82
400dc448:	060c      	movi.n	a6, 0
400dc44a:	f47c      	movi.n	a4, -1
400dc44c:	a56142        	s32i	a4, a1, 0x294
400dc44f:	ac6162        	s32i	a6, a1, 0x2b0
400dc452:	064d      	mov.n	a4, a6
400dc454:	a06162        	s32i	a6, a1, 0x280
400dc457:	4ca262        	movi	a6, 0x24c
400dc45a:	896a      	add.n	a8, a9, a6
400dc45c:	351b      	addi.n	a3, a5, 1
400dc45e:	027d      	mov.n	a7, a2
400dc460:	a26182        	s32i	a8, a1, 0x288
400dc463:	000286        	j	400dc471 <_svfprintf_r+0x159>
400dc466:	000000        	ill
400dc469:	a86132        	s32i	a3, a1, 0x2a0
400dc46c:	040c      	movi.n	a4, 0
400dc46e:	a82132        	l32i	a3, a1, 0x2a0
400dc471:	931b      	addi.n	a9, a3, 1
400dc473:	000332        	l8ui	a3, a3, 0
400dc476:	a86192        	s32i	a9, a1, 0x2a0
400dc479:	a66132        	s32i	a3, a1, 0x298
400dc47c:	d0b9d1        	l32r	a13, 400d0760 <_flash_cache_start+0x748>
400dc47f:	980c      	movi.n	a8, 9
400dc481:	4a2c      	movi.n	a10, 36
400dc483:	ab2c      	movi.n	a11, 42
400dc485:	fc7c      	movi.n	a12, -1
400dc487:	000106        	j	400dc48f <_svfprintf_r+0x177>
400dc48a:	320000        	orbc	b0, b0, b0
400dc48d:	62ac61        	l32r	a6, 400b4f40 <_iram_end+0x273ec>
400dc490:	5ca621        	l32r	a2, 400b3728 <_iram_end+0x25bd4>
400dc493:	32a9      	s32i.n	a10, a2, 12
400dc495:	37e0c6        	j	400ea41c <__gxx_personality_v0+0x168>
400dc498:	02b9      	s32i.n	a11, a2, 0
400dc49a:	08a586        	j	400de734 <_svfprintf_r+0x241c>
400dc49d:	a033d0        	addx4	a3, a3, a13
400dc4a0:	0338      	l32i.n	a3, a3, 0
400dc4a2:	0003a0        	jx	a3
400dc4a5:	d0ad31        	l32r	a3, 400d075c <_flash_cache_start+0x744>
400dc4a8:	b56132        	s32i	a3, a1, 0x2d4
400dc4ab:	0722c6        	j	400de13a <_svfprintf_r+0x1e22>
400dc4ae:	a20000        	muluh	a0, a0, a0
400dc4b1:	81a321        	l32r	a2, 400bcb40 <_iram_end+0x2efec>
400dc4b4:	e0d0b4        	lsi	f11, a0, 0x380
400dc4b7:	0008      	l32i.n	a0, a0, 0
400dc4b9:	1aa8      	l32i.n	a10, a10, 4
400dc4bb:	b361a2        	s32i	a10, a1, 0x2cc
400dc4be:	cef081        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400dc4c1:	0008e0        	callx8	a8
400dc4c4:	b061a2        	s32i	a10, a1, 0x2c0
400dc4c7:	a321a2        	l32i	a10, a1, 0x28c
400dc4ca:	d0ae81        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400dc4cd:	0008e0        	callx8	a8
400dc4d0:	2aa8      	l32i.n	a10, a10, 8
400dc4d2:	b02162        	l32i	a6, a1, 0x2c0
400dc4d5:	ad61a2        	s32i	a10, a1, 0x2b4
400dc4d8:	f92616        	beqz	a6, 400dc46e <_svfprintf_r+0x156>
400dc4db:	f8fa16        	beqz	a10, 400dc46e <_svfprintf_r+0x156>
400dc4de:	000a32        	l8ui	a3, a10, 0
400dc4e1:	f89316        	beqz	a3, 400dc46e <_svfprintf_r+0x156>
400dc4e4:	00a432        	movi	a3, 0x400
400dc4e7:	00bfc6        	j	400dc7ea <_svfprintf_r+0x4d2>
400dc4ea:	10c192        	addi	a9, a1, 16
400dc4ed:	02d932        	addmi	a3, a9, 0x200
400dc4f0:	520362        	l8ui	a6, a3, 82
400dc4f3:	f77656        	bnez	a6, 400dc46e <_svfprintf_r+0x156>
400dc4f6:	062c      	movi.n	a6, 32
400dc4f8:	004606        	j	400dc614 <_svfprintf_r+0x2fc>
400dc4fb:	130c      	movi.n	a3, 1
400dc4fd:	00b046        	j	400dc7c2 <_svfprintf_r+0x4aa>
400dc500:	a82182        	l32i	a8, a1, 0x2a0
400dc503:	000862        	l8ui	a6, a8, 0
400dc506:	980c      	movi.n	a8, 9
400dc508:	d0c632        	addi	a3, a6, -48
400dc50b:	02b837        	bgeu	a8, a3, 400dc511 <_svfprintf_r+0x1f9>
400dc50e:	0bb9c6        	j	400df3f9 <_svfprintf_r+0x30e1>
400dc511:	a82192        	l32i	a9, a1, 0x2a0
400dc514:	0a0c      	movi.n	a10, 0
400dc516:	391b      	addi.n	a3, a9, 1
400dc518:	d0c662        	addi	a6, a6, -48
400dc51b:	a0aaa0        	addx4	a10, a10, a10
400dc51e:	331b      	addi.n	a3, a3, 1
400dc520:	90aa60        	addx2	a10, a10, a6
400dc523:	630b      	addi.n	a6, a3, -1
400dc525:	000662        	l8ui	a6, a6, 0
400dc528:	d0c692        	addi	a9, a6, -48
400dc52b:	e9b897        	bgeu	a8, a9, 400dc518 <_svfprintf_r+0x200>
400dc52e:	482c      	movi.n	a8, 36
400dc530:	021687        	beq	a6, a8, 400dc536 <_svfprintf_r+0x21e>
400dc533:	ffcd46        	j	400dc46c <_svfprintf_r+0x154>
400dc536:	062c      	movi.n	a6, 32
400dc538:	02a6a7        	bge	a6, a10, 400dc53e <_svfprintf_r+0x226>
400dc53b:	0ba886        	j	400df3e1 <_svfprintf_r+0x30c9>
400dc53e:	972162        	l32i	a6, a1, 0x25c
400dc541:	aa0b      	addi.n	a10, a10, -1
400dc543:	09aa67        	bge	a10, a6, 400dc550 <_svfprintf_r+0x238>
400dc546:	10c1e2        	addi	a14, a1, 16
400dc549:	b0aae0        	addx8	a10, a10, a14
400dc54c:	000706        	j	400dc56c <_svfprintf_r+0x254>
400dc54f:	c18200        	mul16u	a8, a2, a0
400dc552:	a26210        	muluh	a6, a2, a1
400dc555:	6a48      	l32i.n	a4, a10, 24
400dc557:	c268      	l32i.n	a6, a2, 48
400dc559:	d260a2        	s32i	a10, a0, 0x348
400dc55c:	69a221        	l32r	a2, 400b6be4 <_iram_end+0x29090>
400dc55f:	d8f201        	l32r	a0, 400d2928 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>
400dc562:	08ed01        	l32r	a0, 4009e918 <_iram_end+0x10dc4>
400dc565:	c8ca      	add.n	a12, a8, a12
400dc567:	05bd      	mov.n	a11, a5
400dc569:	ff92e5        	call8	400dbe98 <get_arg$isra$0>
400dc56c:	0aa8      	l32i.n	a10, a10, 0
400dc56e:	076d      	mov.n	a6, a7
400dc570:	ac61a2        	s32i	a10, a1, 0x2b0
400dc573:	a86132        	s32i	a3, a1, 0x2a0
400dc576:	001fc6        	j	400dc5f9 <_svfprintf_r+0x2e1>
400dc579:	10c192        	addi	a9, a1, 16
400dc57c:	b03290        	addx8	a3, a2, a9
400dc57f:	001c46        	j	400dc5f4 <_svfprintf_r+0x2dc>
400dc582:	f31c      	movi.n	a3, 31
400dc584:	402387        	blt	a3, a8, 400dc5c8 <_svfprintf_r+0x2b0>
400dc587:	381b      	addi.n	a3, a8, 1
400dc589:	10c1a2        	addi	a10, a1, 16
400dc58c:	976132        	s32i	a3, a1, 0x25c
400dc58f:	02da32        	addmi	a3, a10, 0x200
400dc592:	1a2372        	l32i	a7, a3, 104
400dc595:	891c      	movi.n	a9, 24
400dc597:	a74b      	addi.n	a10, a7, 4
400dc599:	1a63a2        	s32i	a10, a3, 104
400dc59c:	0529a7        	blt	a9, a10, 400dc5a5 <_svfprintf_r+0x28d>
400dc59f:	192372        	l32i	a7, a3, 100
400dc5a2:	000286        	j	400dc5b0 <_svfprintf_r+0x298>
400dc5a5:	042977        	blt	a9, a7, 400dc5ad <_svfprintf_r+0x295>
400dc5a8:	472c      	movi.n	a7, 36
400dc5aa:	1a6372        	s32i	a7, a3, 104
400dc5ad:	9c2172        	l32i	a7, a1, 0x270
400dc5b0:	9e2132        	l32i	a3, a1, 0x278
400dc5b3:	10c1e2        	addi	a14, a1, 16
400dc5b6:	373a      	add.n	a3, a7, a3
400dc5b8:	fcc332        	addi	a3, a3, -4
400dc5bb:	0338      	l32i.n	a3, a3, 0
400dc5bd:	b088e0        	addx8	a8, a8, a14
400dc5c0:	ac6132        	s32i	a3, a1, 0x2b0
400dc5c3:	0839      	s32i.n	a3, a8, 0
400dc5c5:	000c06        	j	400dc5f9 <_svfprintf_r+0x2e1>
400dc5c8:	10c182        	addi	a8, a1, 16
400dc5cb:	02d832        	addmi	a3, a8, 0x200
400dc5ce:	1a2372        	l32i	a7, a3, 104
400dc5d1:	881c      	movi.n	a8, 24
400dc5d3:	974b      	addi.n	a9, a7, 4
400dc5d5:	1a6392        	s32i	a9, a3, 104
400dc5d8:	052897        	blt	a8, a9, 400dc5e1 <_svfprintf_r+0x2c9>
400dc5db:	192372        	l32i	a7, a3, 100
400dc5de:	000286        	j	400dc5ec <_svfprintf_r+0x2d4>
400dc5e1:	042877        	blt	a8, a7, 400dc5e9 <_svfprintf_r+0x2d1>
400dc5e4:	472c      	movi.n	a7, 36
400dc5e6:	1a6372        	s32i	a7, a3, 104
400dc5e9:	9c2172        	l32i	a7, a1, 0x270
400dc5ec:	9e2132        	l32i	a3, a1, 0x278
400dc5ef:	373a      	add.n	a3, a7, a3
400dc5f1:	fcc332        	addi	a3, a3, -4
400dc5f4:	0338      	l32i.n	a3, a3, 0
400dc5f6:	ac6132        	s32i	a3, a1, 0x2b0
400dc5f9:	ac2192        	l32i	a9, a1, 0x2b0
400dc5fc:	067d      	mov.n	a7, a6
400dc5fe:	e6c9d6        	bgez	a9, 400dc46e <_svfprintf_r+0x156>
400dc601:	609090        	neg	a9, a9
400dc604:	ac6192        	s32i	a9, a1, 0x2b0
400dc607:	430c      	movi.n	a3, 4
400dc609:	006d46        	j	400dc7c2 <_svfprintf_r+0x4aa>
400dc60c:	10c182        	addi	a8, a1, 16
400dc60f:	b62c      	movi.n	a6, 43
400dc611:	02d832        	addmi	a3, a8, 0x200
400dc614:	524362        	s8i	a6, a3, 82
400dc617:	ff94c6        	j	400dc46e <_svfprintf_r+0x156>
400dc61a:	a82192        	l32i	a9, a1, 0x2a0
400dc61d:	000962        	l8ui	a6, a9, 0
400dc620:	391b      	addi.n	a3, a9, 1
400dc622:	a66162        	s32i	a6, a1, 0x298
400dc625:	0416b7        	beq	a6, a11, 400dc62d <_svfprintf_r+0x315>
400dc628:	060c      	movi.n	a6, 0
400dc62a:	004706        	j	400dc74a <_svfprintf_r+0x432>
400dc62d:	a82182        	l32i	a8, a1, 0x2a0
400dc630:	010862        	l8ui	a6, a8, 1
400dc633:	980c      	movi.n	a8, 9
400dc635:	d0c692        	addi	a9, a6, -48
400dc638:	02b897        	bgeu	a8, a9, 400dc63e <_svfprintf_r+0x326>
400dc63b:	0b7246        	j	400df408 <_svfprintf_r+0x30f0>
400dc63e:	a82192        	l32i	a9, a1, 0x2a0
400dc641:	0a0c      	movi.n	a10, 0
400dc643:	992b      	addi.n	a9, a9, 2
400dc645:	a86192        	s32i	a9, a1, 0x2a0
400dc648:	d0c662        	addi	a6, a6, -48
400dc64b:	a0aaa0        	addx4	a10, a10, a10
400dc64e:	90aa60        	addx2	a10, a10, a6
400dc651:	a82162        	l32i	a6, a1, 0x2a0
400dc654:	661b      	addi.n	a6, a6, 1
400dc656:	a86162        	s32i	a6, a1, 0x2a0
400dc659:	660b      	addi.n	a6, a6, -1
400dc65b:	000662        	l8ui	a6, a6, 0
400dc65e:	d0c692        	addi	a9, a6, -48
400dc661:	e3b897        	bgeu	a8, a9, 400dc648 <_svfprintf_r+0x330>
400dc664:	482c      	movi.n	a8, 36
400dc666:	021687        	beq	a6, a8, 400dc66c <_svfprintf_r+0x354>
400dc669:	ff7f06        	j	400dc469 <_svfprintf_r+0x151>
400dc66c:	032c      	movi.n	a3, 32
400dc66e:	02a3a7        	bge	a3, a10, 400dc674 <_svfprintf_r+0x35c>
400dc671:	0b5b06        	j	400df3e1 <_svfprintf_r+0x30c9>
400dc674:	972132        	l32i	a3, a1, 0x25c
400dc677:	aa0b      	addi.n	a10, a10, -1
400dc679:	08aa37        	bge	a10, a3, 400dc685 <_svfprintf_r+0x36d>
400dc67c:	10c182        	addi	a8, a1, 16
400dc67f:	b0aa80        	addx8	a10, a10, a8
400dc682:	0006c6        	j	400dc6a1 <_svfprintf_r+0x389>
400dc685:	10c192        	addi	a9, a1, 16
400dc688:	48a232        	movi	a3, 0x248
400dc68b:	393a      	add.n	a3, a9, a3
400dc68d:	60a2c2        	movi	a12, 0x260
400dc690:	a221d2        	l32i	a13, a1, 0x288
400dc693:	0139      	s32i.n	a3, a1, 0
400dc695:	01d9f2        	addmi	a15, a9, 0x100
400dc698:	09ed      	mov.n	a14, a9
400dc69a:	c9ca      	add.n	a12, a9, a12
400dc69c:	05bd      	mov.n	a11, a5
400dc69e:	ff7fa5        	call8	400dbe98 <get_arg$isra$0>
400dc6a1:	0aa8      	l32i.n	a10, a10, 0
400dc6a3:	a561a2        	s32i	a10, a1, 0x294
400dc6a6:	002106        	j	400dc72e <_svfprintf_r+0x416>
400dc6a9:	10c1a2        	addi	a10, a1, 16
400dc6ac:	b062a0        	addx8	a6, a2, a10
400dc6af:	001c46        	j	400dc724 <_svfprintf_r+0x40c>
400dc6b2:	f71c      	movi.n	a7, 31
400dc6b4:	402767        	blt	a7, a6, 400dc6f8 <_svfprintf_r+0x3e0>
400dc6b7:	761b      	addi.n	a7, a6, 1
400dc6b9:	10c1e2        	addi	a14, a1, 16
400dc6bc:	976172        	s32i	a7, a1, 0x25c
400dc6bf:	02de72        	addmi	a7, a14, 0x200
400dc6c2:	1a2792        	l32i	a9, a7, 104
400dc6c5:	8a1c      	movi.n	a10, 24
400dc6c7:	b94b      	addi.n	a11, a9, 4
400dc6c9:	1a67b2        	s32i	a11, a7, 104
400dc6cc:	052ab7        	blt	a10, a11, 400dc6d5 <_svfprintf_r+0x3bd>
400dc6cf:	192792        	l32i	a9, a7, 100
400dc6d2:	000286        	j	400dc6e0 <_svfprintf_r+0x3c8>
400dc6d5:	042a97        	blt	a10, a9, 400dc6dd <_svfprintf_r+0x3c5>
400dc6d8:	492c      	movi.n	a9, 36
400dc6da:	1a6792        	s32i	a9, a7, 104
400dc6dd:	9c2192        	l32i	a9, a1, 0x270
400dc6e0:	9e2172        	l32i	a7, a1, 0x278
400dc6e3:	10c1a2        	addi	a10, a1, 16
400dc6e6:	797a      	add.n	a7, a9, a7
400dc6e8:	fcc772        	addi	a7, a7, -4
400dc6eb:	0798      	l32i.n	a9, a7, 0
400dc6ed:	b066a0        	addx8	a6, a6, a10
400dc6f0:	a56192        	s32i	a9, a1, 0x294
400dc6f3:	0699      	s32i.n	a9, a6, 0
400dc6f5:	000c06        	j	400dc729 <_svfprintf_r+0x411>
400dc6f8:	10c1e2        	addi	a14, a1, 16
400dc6fb:	02de62        	addmi	a6, a14, 0x200
400dc6fe:	1a2672        	l32i	a7, a6, 104
400dc701:	891c      	movi.n	a9, 24
400dc703:	a74b      	addi.n	a10, a7, 4
400dc705:	1a66a2        	s32i	a10, a6, 104
400dc708:	0529a7        	blt	a9, a10, 400dc711 <_svfprintf_r+0x3f9>
400dc70b:	192672        	l32i	a7, a6, 100
400dc70e:	000286        	j	400dc71c <_svfprintf_r+0x404>
400dc711:	042977        	blt	a9, a7, 400dc719 <_svfprintf_r+0x401>
400dc714:	472c      	movi.n	a7, 36
400dc716:	1a6672        	s32i	a7, a6, 104
400dc719:	9c2172        	l32i	a7, a1, 0x270
400dc71c:	9e2162        	l32i	a6, a1, 0x278
400dc71f:	676a      	add.n	a6, a7, a6
400dc721:	fcc662        	addi	a6, a6, -4
400dc724:	0668      	l32i.n	a6, a6, 0
400dc726:	a56162        	s32i	a6, a1, 0x294
400dc729:	a86132        	s32i	a3, a1, 0x2a0
400dc72c:	087d      	mov.n	a7, a8
400dc72e:	a52162        	l32i	a6, a1, 0x294
400dc731:	f37c      	movi.n	a3, -1
400dc733:	536630        	max	a6, a6, a3
400dc736:	a56162        	s32i	a6, a1, 0x294
400dc739:	ff4c46        	j	400dc46e <_svfprintf_r+0x156>
400dc73c:	a06660        	addx4	a6, a6, a6
400dc73f:	906690        	addx2	a6, a6, a9
400dc742:	000392        	l8ui	a9, a3, 0
400dc745:	331b      	addi.n	a3, a3, 1
400dc747:	a66192        	s32i	a9, a1, 0x298
400dc74a:	a621e2        	l32i	a14, a1, 0x298
400dc74d:	a86132        	s32i	a3, a1, 0x2a0
400dc750:	d0ce92        	addi	a9, a14, -48
400dc753:	e5b897        	bgeu	a8, a9, 400dc73c <_svfprintf_r+0x424>
400dc756:	5366c0        	max	a6, a6, a12
400dc759:	a56162        	s32i	a6, a1, 0x294
400dc75c:	ac2132        	l32i	a3, a1, 0x2b0
400dc75f:	ff4a46        	j	400dc48c <_svfprintf_r+0x174>
400dc762:	80a032        	movi	a3, 128
400dc765:	001646        	j	400dc7c2 <_svfprintf_r+0x4aa>
400dc768:	030c      	movi.n	a3, 0
400dc76a:	a62192        	l32i	a9, a1, 0x298
400dc76d:	a03330        	addx4	a3, a3, a3
400dc770:	d0c962        	addi	a6, a9, -48
400dc773:	903360        	addx2	a3, a3, a6
400dc776:	a82162        	l32i	a6, a1, 0x2a0
400dc779:	661b      	addi.n	a6, a6, 1
400dc77b:	a86162        	s32i	a6, a1, 0x2a0
400dc77e:	660b      	addi.n	a6, a6, -1
400dc780:	000662        	l8ui	a6, a6, 0
400dc783:	a66162        	s32i	a6, a1, 0x298
400dc786:	d0c662        	addi	a6, a6, -48
400dc789:	ddb867        	bgeu	a8, a6, 400dc76a <_svfprintf_r+0x452>
400dc78c:	a62192        	l32i	a9, a1, 0x298
400dc78f:	0219a7        	beq	a9, a10, 400dc795 <_svfprintf_r+0x47d>
400dc792:	ff3d86        	j	400dc48c <_svfprintf_r+0x174>
400dc795:	022c      	movi.n	a2, 32
400dc797:	02a237        	bge	a2, a3, 400dc79d <_svfprintf_r+0x485>
400dc79a:	0b10c6        	j	400df3e1 <_svfprintf_r+0x30c9>
400dc79d:	230b      	addi.n	a2, a3, -1
400dc79f:	140c      	movi.n	a4, 1
400dc7a1:	ff3246        	j	400dc46e <_svfprintf_r+0x156>
400dc7a4:	830c      	movi.n	a3, 8
400dc7a6:	000606        	j	400dc7c2 <_svfprintf_r+0x4aa>
400dc7a9:	a82182        	l32i	a8, a1, 0x2a0
400dc7ac:	68a032        	movi	a3, 104
400dc7af:	000862        	l8ui	a6, a8, 0
400dc7b2:	0a9637        	bne	a6, a3, 400dc7c0 <_svfprintf_r+0x4a8>
400dc7b5:	881b      	addi.n	a8, a8, 1
400dc7b7:	a86182        	s32i	a8, a1, 0x2a0
400dc7ba:	00a232        	movi	a3, 0x200
400dc7bd:	000dc6        	j	400dc7f8 <_svfprintf_r+0x4e0>
400dc7c0:	034c      	movi.n	a3, 64
400dc7c2:	a02162        	l32i	a6, a1, 0x280
400dc7c5:	206630        	or	a6, a6, a3
400dc7c8:	a06162        	s32i	a6, a1, 0x280
400dc7cb:	ff27c6        	j	400dc46e <_svfprintf_r+0x156>
400dc7ce:	a82182        	l32i	a8, a1, 0x2a0
400dc7d1:	6ca032        	movi	a3, 108
400dc7d4:	000862        	l8ui	a6, a8, 0
400dc7d7:	079637        	bne	a6, a3, 400dc7e2 <_svfprintf_r+0x4ca>
400dc7da:	881b      	addi.n	a8, a8, 1
400dc7dc:	a86182        	s32i	a8, a1, 0x2a0
400dc7df:	0004c6        	j	400dc7f6 <_svfprintf_r+0x4de>
400dc7e2:	031c      	movi.n	a3, 16
400dc7e4:	fff686        	j	400dc7c2 <_svfprintf_r+0x4aa>
400dc7e7:	032c00        	lsi	f0, a12, 12
400dc7ea:	a02182        	l32i	a8, a1, 0x280
400dc7ed:	208830        	or	a8, a8, a3
400dc7f0:	a06182        	s32i	a8, a1, 0x280
400dc7f3:	ff1dc6        	j	400dc46e <_svfprintf_r+0x156>
400dc7f6:	032c      	movi.n	a3, 32
400dc7f8:	a02192        	l32i	a9, a1, 0x280
400dc7fb:	209930        	or	a9, a9, a3
400dc7fe:	a06192        	s32i	a9, a1, 0x280
400dc801:	ff1a46        	j	400dc46e <_svfprintf_r+0x156>
400dc804:	972132        	l32i	a3, a1, 0x25c
400dc807:	54bc      	beqz.n	a4, 400dc840 <_svfprintf_r+0x528>
400dc809:	0ba237        	bge	a2, a3, 400dc818 <_svfprintf_r+0x500>
400dc80c:	10c1a2        	addi	a10, a1, 16
400dc80f:	b022a0        	addx8	a2, a2, a10
400dc812:	000222        	l8ui	a2, a2, 0
400dc815:	000886        	j	400dc83b <_svfprintf_r+0x523>
400dc818:	10c1e2        	addi	a14, a1, 16
400dc81b:	48a232        	movi	a3, 0x248
400dc81e:	3e3a      	add.n	a3, a14, a3
400dc820:	4ca2d2        	movi	a13, 0x24c
400dc823:	60a2c2        	movi	a12, 0x260
400dc826:	02ad      	mov.n	a10, a2
400dc828:	0139      	s32i.n	a3, a1, 0
400dc82a:	01def2        	addmi	a15, a14, 0x100
400dc82d:	deda      	add.n	a13, a14, a13
400dc82f:	80cec0        	add	a12, a14, a12
400dc832:	20b550        	or	a11, a5, a5
400dc835:	ff6625        	call8	400dbe98 <get_arg$isra$0>
400dc838:	000a22        	l8ui	a2, a10, 0
400dc83b:	074d      	mov.n	a4, a7
400dc83d:	002086        	j	400dc8c3 <_svfprintf_r+0x5ab>
400dc840:	471b      	addi.n	a4, a7, 1
400dc842:	08a737        	bge	a7, a3, 400dc84e <_svfprintf_r+0x536>
400dc845:	10c132        	addi	a3, a1, 16
400dc848:	b02230        	addx8	a2, a2, a3
400dc84b:	001c46        	j	400dc8c0 <_svfprintf_r+0x5a8>
400dc84e:	f21c      	movi.n	a2, 31
400dc850:	402237        	blt	a2, a3, 400dc894 <_svfprintf_r+0x57c>
400dc853:	231b      	addi.n	a2, a3, 1
400dc855:	10c152        	addi	a5, a1, 16
400dc858:	976122        	s32i	a2, a1, 0x25c
400dc85b:	02d522        	addmi	a2, a5, 0x200
400dc85e:	1a2252        	l32i	a5, a2, 104
400dc861:	861c      	movi.n	a6, 24
400dc863:	754b      	addi.n	a7, a5, 4
400dc865:	1a6272        	s32i	a7, a2, 104
400dc868:	052677        	blt	a6, a7, 400dc871 <_svfprintf_r+0x559>
400dc86b:	192252        	l32i	a5, a2, 100
400dc86e:	000286        	j	400dc87c <_svfprintf_r+0x564>
400dc871:	042657        	blt	a6, a5, 400dc879 <_svfprintf_r+0x561>
400dc874:	452c      	movi.n	a5, 36
400dc876:	1a6252        	s32i	a5, a2, 104
400dc879:	9c2152        	l32i	a5, a1, 0x270
400dc87c:	9e2122        	l32i	a2, a1, 0x278
400dc87f:	10c162        	addi	a6, a1, 16
400dc882:	252a      	add.n	a2, a5, a2
400dc884:	fcc222        	addi	a2, a2, -4
400dc887:	0228      	l32i.n	a2, a2, 0
400dc889:	b03360        	addx8	a3, a3, a6
400dc88c:	0329      	s32i.n	a2, a3, 0
400dc88e:	742020        	extui	a2, a2, 0, 8
400dc891:	000b86        	j	400dc8c3 <_svfprintf_r+0x5ab>
400dc894:	10c182        	addi	a8, a1, 16
400dc897:	02d822        	addmi	a2, a8, 0x200
400dc89a:	1a2232        	l32i	a3, a2, 104
400dc89d:	851c      	movi.n	a5, 24
400dc89f:	634b      	addi.n	a6, a3, 4
400dc8a1:	1a6262        	s32i	a6, a2, 104
400dc8a4:	052567        	blt	a5, a6, 400dc8ad <_svfprintf_r+0x595>
400dc8a7:	192232        	l32i	a3, a2, 100
400dc8aa:	000286        	j	400dc8b8 <_svfprintf_r+0x5a0>
400dc8ad:	042537        	blt	a5, a3, 400dc8b5 <_svfprintf_r+0x59d>
400dc8b0:	432c      	movi.n	a3, 36
400dc8b2:	1a6232        	s32i	a3, a2, 104
400dc8b5:	9c2132        	l32i	a3, a1, 0x270
400dc8b8:	9e2122        	l32i	a2, a1, 0x278
400dc8bb:	232a      	add.n	a2, a3, a2
400dc8bd:	fcc222        	addi	a2, a2, -4
400dc8c0:	000222        	l8ui	a2, a2, 0
400dc8c3:	10c192        	addi	a9, a1, 16
400dc8c6:	01d932        	addmi	a3, a9, 0x100
400dc8c9:	804322        	s8i	a2, a3, 128
400dc8cc:	030c      	movi.n	a3, 0
400dc8ce:	02d922        	addmi	a2, a9, 0x200
400dc8d1:	524232        	s8i	a3, a2, 82
400dc8d4:	020c      	movi.n	a2, 0
400dc8d6:	130c      	movi.n	a3, 1
400dc8d8:	a56132        	s32i	a3, a1, 0x294
400dc8db:	047d      	mov.n	a7, a4
400dc8dd:	a26122        	s32i	a2, a1, 0x288
400dc8e0:	026d      	mov.n	a6, a2
400dc8e2:	023d      	mov.n	a3, a2
400dc8e4:	025d      	mov.n	a5, a2
400dc8e6:	079d46        	j	400de75f <_svfprintf_r+0x2447>
400dc8e9:	920000        	lsi	f0, a0, 0x248
400dc8ec:	1ca021        	l32r	a2, 400a3b6c <_iram_end+0x16018>
400dc8ef:	993003        	lsi	f0, a0, 0x264
400dc8f2:	619220        	lsi	f2, a2, 0x184
400dc8f5:	2132a0        	srai	a3, a10, 2
400dc8f8:	e357a0        	lsi	f10, a7, 0x38c
400dc8fb:	358602        	lsi	f0, a6, 212
400dc8fe:	218200        	srai	a8, a0, 2
400dc901:	74bc97        	bgeu	a12, a9, 400dc979 <_svfprintf_r+0x661>
400dc904:	0ca287        	bge	a2, a8, 400dc914 <_svfprintf_r+0x5fc>
400dc907:	10c142        	addi	a4, a1, 16
400dc90a:	b02240        	addx8	a2, a2, a4
400dc90d:	0258      	l32i.n	a5, a2, 0
400dc90f:	1238      	l32i.n	a3, a2, 4
400dc911:	0008c6        	j	400dc938 <_svfprintf_r+0x620>
400dc914:	10c162        	addi	a6, a1, 16
400dc917:	48a232        	movi	a3, 0x248
400dc91a:	363a      	add.n	a3, a6, a3
400dc91c:	4ca2d2        	movi	a13, 0x24c
400dc91f:	60a2c2        	movi	a12, 0x260
400dc922:	0139      	s32i.n	a3, a1, 0
400dc924:	05bd      	mov.n	a11, a5
400dc926:	01d6f2        	addmi	a15, a6, 0x100
400dc929:	06ed      	mov.n	a14, a6
400dc92b:	d6da      	add.n	a13, a6, a13
400dc92d:	c6ca      	add.n	a12, a6, a12
400dc92f:	02ad      	mov.n	a10, a2
400dc931:	ff5665        	call8	400dbe98 <get_arg$isra$0>
400dc934:	0a58      	l32i.n	a5, a10, 0
400dc936:	1a38      	l32i.n	a3, a10, 4
400dc938:	074d      	mov.n	a4, a7
400dc93a:	00dbc6        	j	400dccad <_svfprintf_r+0x995>
400dc93d:	471b      	addi.n	a4, a7, 1
400dc93f:	09a787        	bge	a7, a8, 400dc94c <_svfprintf_r+0x634>
400dc942:	10c182        	addi	a8, a1, 16
400dc945:	b02280        	addx8	a2, a2, a8
400dc948:	0020c6        	j	400dc9cf <_svfprintf_r+0x6b7>
400dc94b:	f21c00        	rems	a1, a12, a0
400dc94e:	4a2287        	blt	a2, a8, 400dc99c <_svfprintf_r+0x684>
400dc951:	281b      	addi.n	a2, a8, 1
400dc953:	10c192        	addi	a9, a1, 16
400dc956:	976122        	s32i	a2, a1, 0x25c
400dc959:	02d922        	addmi	a2, a9, 0x200
400dc95c:	1a2232        	l32i	a3, a2, 104
400dc95f:	537b      	addi.n	a5, a3, 7
400dc961:	837c      	movi.n	a3, -8
400dc963:	103530        	and	a3, a5, a3
400dc966:	638b      	addi.n	a6, a3, 8
400dc968:	1a6262        	s32i	a6, a2, 104
400dc96b:	851c      	movi.n	a5, 24
400dc96d:	072567        	blt	a5, a6, 400dc978 <_svfprintf_r+0x660>
400dc970:	192232        	l32i	a3, a2, 100
400dc973:	000306        	j	400dc983 <_svfprintf_r+0x66b>
400dc976:	370000        	lsi	f0, a0, 220
400dc979:	2c0425        	call8	401089bc <_etext+0x1c4eb>
400dc97c:	623283        	lsi	f8, a2, 0x188
400dc97f:	321a      	add.n	a3, a2, a1
400dc981:	229c21        	l32r	a2, 400a53f4 <_iram_end+0x178a0>
400dc984:	a29e21        	l32r	a2, 400c53fc <_rtc_text_end+0x53fc>
400dc987:	2a10c1        	l32r	a12, 400a71c8 <_iram_end+0x19674>
400dc98a:	c22223        	lsi	f2, a2, 0x308
400dc98d:	58f8      	l32i.n	a15, a8, 20
400dc98f:	123802        	lsi	f0, a8, 72
400dc992:	b028a0        	addx8	a2, a8, a10
400dc995:	0259      	s32i.n	a5, a2, 0
400dc997:	1239      	s32i.n	a3, a2, 4
400dc999:	00c406        	j	400dccad <_svfprintf_r+0x995>
400dc99c:	10c1e2        	addi	a14, a1, 16
400dc99f:	02de22        	addmi	a2, a14, 0x200
400dc9a2:	1a2232        	l32i	a3, a2, 104
400dc9a5:	537b      	addi.n	a5, a3, 7
400dc9a7:	837c      	movi.n	a3, -8
400dc9a9:	103530        	and	a3, a5, a3
400dc9ac:	638b      	addi.n	a6, a3, 8
400dc9ae:	1a6262        	s32i	a6, a2, 104
400dc9b1:	851c      	movi.n	a5, 24
400dc9b3:	052567        	blt	a5, a6, 400dc9bc <_svfprintf_r+0x6a4>
400dc9b6:	192232        	l32i	a3, a2, 100
400dc9b9:	000286        	j	400dc9c7 <_svfprintf_r+0x6af>
400dc9bc:	042537        	blt	a5, a3, 400dc9c4 <_svfprintf_r+0x6ac>
400dc9bf:	832c      	movi.n	a3, 40
400dc9c1:	1a6232        	s32i	a3, a2, 104
400dc9c4:	9c2132        	l32i	a3, a1, 0x270
400dc9c7:	9e2122        	l32i	a2, a1, 0x278
400dc9ca:	232a      	add.n	a2, a3, a2
400dc9cc:	f8c222        	addi	a2, a2, -8
400dc9cf:	0258      	l32i.n	a5, a2, 0
400dc9d1:	1238      	l32i.n	a3, a2, 4
400dc9d3:	00b586        	j	400dccad <_svfprintf_r+0x995>
400dc9d6:	a02132        	l32i	a3, a1, 0x280
400dc9d9:	7c6347        	bbci	a3, 4, 400dca59 <_svfprintf_r+0x741>
400dc9dc:	972162        	l32i	a6, a1, 0x25c
400dc9df:	d49c      	beqz.n	a4, 400dca00 <_svfprintf_r+0x6e8>
400dc9e1:	08a267        	bge	a2, a6, 400dc9ed <_svfprintf_r+0x6d5>
400dc9e4:	10c142        	addi	a4, a1, 16
400dc9e7:	b02240        	addx8	a2, a2, a4
400dc9ea:	008486        	j	400dcc00 <_svfprintf_r+0x8e8>
400dc9ed:	10c162        	addi	a6, a1, 16
400dc9f0:	48a232        	movi	a3, 0x248
400dc9f3:	363a      	add.n	a3, a6, a3
400dc9f5:	0139      	s32i.n	a3, a1, 0
400dc9f7:	01d6f2        	addmi	a15, a6, 0x100
400dc9fa:	06ed      	mov.n	a14, a6
400dc9fc:	008506        	j	400dcc14 <_svfprintf_r+0x8fc>
400dc9ff:	c18200        	mul16u	a8, a2, a0
400dca02:	471b10        	lsi	f1, a11, 0x11c
400dca05:	b02280        	addx8	a2, a2, a8
400dca08:	02a767        	bge	a7, a6, 400dca0e <_svfprintf_r+0x6f6>
400dca0b:	00a646        	j	400dcca8 <_svfprintf_r+0x990>
400dca0e:	f21c      	movi.n	a2, 31
400dca10:	3c2267        	blt	a2, a6, 400dca50 <_svfprintf_r+0x738>
400dca13:	261b      	addi.n	a2, a6, 1
400dca15:	10c192        	addi	a9, a1, 16
400dca18:	976122        	s32i	a2, a1, 0x25c
400dca1b:	02d922        	addmi	a2, a9, 0x200
400dca1e:	1a2232        	l32i	a3, a2, 104
400dca21:	851c      	movi.n	a5, 24
400dca23:	734b      	addi.n	a7, a3, 4
400dca25:	1a6272        	s32i	a7, a2, 104
400dca28:	052577        	blt	a5, a7, 400dca31 <_svfprintf_r+0x719>
400dca2b:	192222        	l32i	a2, a2, 100
400dca2e:	000286        	j	400dca3c <_svfprintf_r+0x724>
400dca31:	042537        	blt	a5, a3, 400dca39 <_svfprintf_r+0x721>
400dca34:	432c      	movi.n	a3, 36
400dca36:	1a6232        	s32i	a3, a2, 104
400dca39:	9c2122        	l32i	a2, a1, 0x270
400dca3c:	9e2132        	l32i	a3, a1, 0x278
400dca3f:	10c1a2        	addi	a10, a1, 16
400dca42:	323a      	add.n	a3, a2, a3
400dca44:	fcc332        	addi	a3, a3, -4
400dca47:	0358      	l32i.n	a5, a3, 0
400dca49:	b026a0        	addx8	a2, a6, a10
400dca4c:	0089c6        	j	400dcc77 <_svfprintf_r+0x95f>
400dca4f:	c1e200        	mul16u	a14, a2, a0
400dca52:	de2210        	f64iter	a2, a2, a1, 1, 1
400dca55:	8a0602        	l8ui	a0, a6, 138
400dca58:	213200        	srai	a3, a0, 2
400dca5b:	e367a0        	lsi	f10, a7, 0x38c
400dca5e:	30c602        	addi	a0, a6, 48
400dca61:	216200        	srai	a6, a0, 2
400dca64:	74bc97        	bgeu	a12, a9, 400dcadc <_svfprintf_r+0x7c4>
400dca67:	0da267        	bge	a2, a6, 400dca78 <_svfprintf_r+0x760>
400dca6a:	10c142        	addi	a4, a1, 16
400dca6d:	b02240        	addx8	a2, a2, a4
400dca70:	009252        	l16si	a5, a2, 0
400dca73:	006c06        	j	400dcc27 <_svfprintf_r+0x90f>
400dca76:	620000        	lsi	f0, a0, 0x188
400dca79:	3210c1        	l32r	a12, 400a92bc <_iram_end+0x1b768>
400dca7c:	3a48a2        	s8i	a10, a8, 58
400dca7f:	a2d236        	entry	a2, 0x5168
400dca82:	c24c      	movi.n	a2, 76
400dca84:	bd60a2        	s32i	a10, a0, 0x2f4
400dca87:	013905        	call0	400dde18 <_svfprintf_r+0x1b00>
400dca8a:	01d6f2        	addmi	a15, a6, 0x100
400dca8d:	06ed      	mov.n	a14, a6
400dca8f:	d6da      	add.n	a13, a6, a13
400dca91:	c6ca      	add.n	a12, a6, a12
400dca93:	02ad      	mov.n	a10, a2
400dca95:	ff4025        	call8	400dbe98 <get_arg$isra$0>
400dca98:	009a52        	l16si	a5, a10, 0
400dca9b:	006206        	j	400dcc27 <_svfprintf_r+0x90f>
400dca9e:	820000        	mull	a0, a0, a0
400dcaa1:	1b10c1        	l32r	a12, 400a36e4 <_iram_end+0x15b90>
400dcaa4:	228047        	bany	a0, a4, 400dcaca <_svfprintf_r+0x7b2>
400dcaa7:	2767b0        	lsi	f11, a7, 156
400dcaaa:	f21c74        	lsi	f7, a12, 0x3c8
400dcaad:	432267        	blt	a2, a6, 400dcaf4 <_svfprintf_r+0x7dc>
400dcab0:	261b      	addi.n	a2, a6, 1
400dcab2:	10c192        	addi	a9, a1, 16
400dcab5:	976122        	s32i	a2, a1, 0x25c
400dcab8:	02d922        	addmi	a2, a9, 0x200
400dcabb:	1a2232        	l32i	a3, a2, 104
400dcabe:	851c      	movi.n	a5, 24
400dcac0:	734b      	addi.n	a7, a3, 4
400dcac2:	1a6272        	s32i	a7, a2, 104
400dcac5:	072577        	blt	a5, a7, 400dcad0 <_svfprintf_r+0x7b8>
400dcac8:	192222        	l32i	a2, a2, 100
400dcacb:	000306        	j	400dcadb <_svfprintf_r+0x7c3>
400dcace:	370000        	lsi	f0, a0, 220
400dcad1:	2c0425        	call8	40108b14 <_etext+0x1c643>
400dcad4:	623243        	lsi	f4, a2, 0x188
400dcad7:	221a      	add.n	a2, a2, a1
400dcad9:	329c21        	l32r	a2, 400a954c <_iram_end+0x1b9f8>
400dcadc:	a29e21        	l32r	a2, 400c5554 <_rtc_text_end+0x5554>
400dcadf:	3a10c1        	l32r	a12, 400ab320 <_iram_end+0x1d7cc>
400dcae2:	c33232        	lsi	f3, a2, 0x30c
400dcae5:	58fc      	bnez.n	a8, 400dcb1e <_svfprintf_r+0x806>
400dcae7:	26a003        	lsi	f0, a0, 152
400dcaea:	0259b0        	andb	b5, b9, b11
400dcaed:	235580        	sext	a5, a5, 15
400dcaf0:	006d86        	j	400dccaa <_svfprintf_r+0x992>
400dcaf3:	c1e200        	mul16u	a14, a2, a0
400dcaf6:	de2210        	f64iter	a2, a2, a1, 1, 1
400dcaf9:	223202        	lsi	f0, a2, 136
400dcafc:	1c1a      	add.n	a1, a12, a1
400dcafe:	634b85        	call0	4013ffb8 <_etext+0x53ae7>
400dcb01:	1a6262        	s32i	a6, a2, 104
400dcb04:	052567        	blt	a5, a6, 400dcb0d <_svfprintf_r+0x7f5>
400dcb07:	192232        	l32i	a3, a2, 100
400dcb0a:	000286        	j	400dcb18 <_svfprintf_r+0x800>
400dcb0d:	042537        	blt	a5, a3, 400dcb15 <_svfprintf_r+0x7fd>
400dcb10:	432c      	movi.n	a3, 36
400dcb12:	1a6232        	s32i	a3, a2, 104
400dcb15:	9c2132        	l32i	a3, a1, 0x270
400dcb18:	9e2122        	l32i	a2, a1, 0x278
400dcb1b:	232a      	add.n	a2, a3, a2
400dcb1d:	fcc222        	addi	a2, a2, -4
400dcb20:	009252        	l16si	a5, a2, 0
400dcb23:	0060c6        	j	400dccaa <_svfprintf_r+0x992>
400dcb26:	a02162        	l32i	a6, a1, 0x280
400dcb29:	972132        	l32i	a3, a1, 0x25c
400dcb2c:	02e697        	bbsi	a6, 9, 400dcb32 <_svfprintf_r+0x81a>
400dcb2f:	003086        	j	400dcbf5 <_svfprintf_r+0x8dd>
400dcb32:	64bc      	beqz.n	a4, 400dcb6c <_svfprintf_r+0x854>
400dcb34:	0ca237        	bge	a2, a3, 400dcb44 <_svfprintf_r+0x82c>
400dcb37:	10c182        	addi	a8, a1, 16
400dcb3a:	b02280        	addx8	a2, a2, a8
400dcb3d:	000252        	l8ui	a5, a2, 0
400dcb40:	0008c6        	j	400dcb67 <_svfprintf_r+0x84f>
400dcb43:	c19200        	mul16u	a9, a2, a0
400dcb46:	a23210        	muluh	a3, a2, a1
400dcb49:	3a48      	l32i.n	a4, a10, 12
400dcb4b:	d239      	s32i.n	a3, a2, 52
400dcb4d:	c24ca2        	s8i	a10, a12, 194
400dcb50:	bd60a2        	s32i	a10, a0, 0x2f4
400dcb53:	013905        	call0	400ddee4 <_svfprintf_r+0x1bcc>
400dcb56:	01d9f2        	addmi	a15, a9, 0x100
400dcb59:	09ed      	mov.n	a14, a9
400dcb5b:	d9da      	add.n	a13, a9, a13
400dcb5d:	c9ca      	add.n	a12, a9, a12
400dcb5f:	02ad      	mov.n	a10, a2
400dcb61:	ff3365        	call8	400dbe98 <get_arg$isra$0>
400dcb64:	000a52        	l8ui	a5, a10, 0
400dcb67:	074d      	mov.n	a4, a7
400dcb69:	002086        	j	400dcbef <_svfprintf_r+0x8d7>
400dcb6c:	10c1a2        	addi	a10, a1, 16
400dcb6f:	471b      	addi.n	a4, a7, 1
400dcb71:	b022a0        	addx8	a2, a2, a10
400dcb74:	742737        	blt	a7, a3, 400dcbec <_svfprintf_r+0x8d4>
400dcb77:	f21c      	movi.n	a2, 31
400dcb79:	432237        	blt	a2, a3, 400dcbc0 <_svfprintf_r+0x8a8>
400dcb7c:	231b      	addi.n	a2, a3, 1
400dcb7e:	10c1e2        	addi	a14, a1, 16
400dcb81:	976122        	s32i	a2, a1, 0x25c
400dcb84:	02de22        	addmi	a2, a14, 0x200
400dcb87:	1a2252        	l32i	a5, a2, 104
400dcb8a:	861c      	movi.n	a6, 24
400dcb8c:	754b      	addi.n	a7, a5, 4
400dcb8e:	1a6272        	s32i	a7, a2, 104
400dcb91:	072677        	blt	a6, a7, 400dcb9c <_svfprintf_r+0x884>
400dcb94:	192252        	l32i	a5, a2, 100
400dcb97:	000306        	j	400dcba7 <_svfprintf_r+0x88f>
400dcb9a:	570000        	lsi	f0, a0, 0x15c
400dcb9d:	2c0426        	beqi	a4, -1, 400dcbcd <_svfprintf_r+0x8b5>
400dcba0:	625245        	call0	4013f0c8 <_etext+0x52bf7>
400dcba3:	521a      	add.n	a5, a2, a1
400dcba5:	229c21        	l32r	a2, 400a5618 <_iram_end+0x17ac4>
400dcba8:	629e21        	l32r	a2, 400b5620 <_iram_end+0x27acc>
400dcbab:	2a10c1        	l32r	a12, 400a73ec <_iram_end+0x19898>
400dcbae:	c22225        	call8	4009edd0 <_iram_end+0x1127c>
400dcbb1:	58fc      	bnez.n	a8, 400dcbea <_svfprintf_r+0x8d2>
400dcbb3:	236002        	s32i	a0, a0, 140
400dcbb6:	0259b0        	andb	b5, b9, b11
400dcbb9:	745050        	extui	a5, a5, 0, 8
400dcbbc:	000bc6        	j	400dcbef <_svfprintf_r+0x8d7>
400dcbbf:	c18200        	mul16u	a8, a2, a0
400dcbc2:	d82210        	lsi	f1, a2, 0x360
400dcbc5:	223202        	lsi	f0, a2, 136
400dcbc8:	1c1a      	add.n	a1, a12, a1
400dcbca:	634b85        	call0	40140084 <_etext+0x53bb3>
400dcbcd:	1a6262        	s32i	a6, a2, 104
400dcbd0:	052567        	blt	a5, a6, 400dcbd9 <_svfprintf_r+0x8c1>
400dcbd3:	192232        	l32i	a3, a2, 100
400dcbd6:	000286        	j	400dcbe4 <_svfprintf_r+0x8cc>
400dcbd9:	042537        	blt	a5, a3, 400dcbe1 <_svfprintf_r+0x8c9>
400dcbdc:	432c      	movi.n	a3, 36
400dcbde:	1a6232        	s32i	a3, a2, 104
400dcbe1:	9c2132        	l32i	a3, a1, 0x270
400dcbe4:	9e2122        	l32i	a2, a1, 0x278
400dcbe7:	232a      	add.n	a2, a3, a2
400dcbe9:	fcc222        	addi	a2, a2, -4
400dcbec:	000252        	l8ui	a5, a2, 0
400dcbef:	235500        	sext	a5, a5, 7
400dcbf2:	002d06        	j	400dccaa <_svfprintf_r+0x992>
400dcbf5:	34bc      	beqz.n	a4, 400dcc2c <_svfprintf_r+0x914>
400dcbf7:	0aa237        	bge	a2, a3, 400dcc05 <_svfprintf_r+0x8ed>
400dcbfa:	10c192        	addi	a9, a1, 16
400dcbfd:	b02290        	addx8	a2, a2, a9
400dcc00:	0258      	l32i.n	a5, a2, 0
400dcc02:	000846        	j	400dcc27 <_svfprintf_r+0x90f>
400dcc05:	10c1a2        	addi	a10, a1, 16
400dcc08:	48a232        	movi	a3, 0x248
400dcc0b:	3a3a      	add.n	a3, a10, a3
400dcc0d:	0139      	s32i.n	a3, a1, 0
400dcc0f:	01daf2        	addmi	a15, a10, 0x100
400dcc12:	0aed      	mov.n	a14, a10
400dcc14:	4ca2d2        	movi	a13, 0x24c
400dcc17:	60a2c2        	movi	a12, 0x260
400dcc1a:	05bd      	mov.n	a11, a5
400dcc1c:	deda      	add.n	a13, a14, a13
400dcc1e:	ceca      	add.n	a12, a14, a12
400dcc20:	02ad      	mov.n	a10, a2
400dcc22:	ff2765        	call8	400dbe98 <get_arg$isra$0>
400dcc25:	0a58      	l32i.n	a5, a10, 0
400dcc27:	074d      	mov.n	a4, a7
400dcc29:	001f46        	j	400dccaa <_svfprintf_r+0x992>
400dcc2c:	10c1e2        	addi	a14, a1, 16
400dcc2f:	471b      	addi.n	a4, a7, 1
400dcc31:	b022e0        	addx8	a2, a2, a14
400dcc34:	702737        	blt	a7, a3, 400dcca8 <_svfprintf_r+0x990>
400dcc37:	f21c      	movi.n	a2, 31
400dcc39:	3f2237        	blt	a2, a3, 400dcc7c <_svfprintf_r+0x964>
400dcc3c:	231b      	addi.n	a2, a3, 1
400dcc3e:	10c152        	addi	a5, a1, 16
400dcc41:	976122        	s32i	a2, a1, 0x25c
400dcc44:	02d522        	addmi	a2, a5, 0x200
400dcc47:	1a2252        	l32i	a5, a2, 104
400dcc4a:	861c      	movi.n	a6, 24
400dcc4c:	754b      	addi.n	a7, a5, 4
400dcc4e:	1a6272        	s32i	a7, a2, 104
400dcc51:	072677        	blt	a6, a7, 400dcc5c <_svfprintf_r+0x944>
400dcc54:	192252        	l32i	a5, a2, 100
400dcc57:	000306        	j	400dcc67 <_svfprintf_r+0x94f>
400dcc5a:	570000        	lsi	f0, a0, 0x15c
400dcc5d:	2c0426        	beqi	a4, -1, 400dcc8d <_svfprintf_r+0x975>
400dcc60:	625245        	call0	4013f188 <_etext+0x52cb7>
400dcc63:	521a      	add.n	a5, a2, a1
400dcc65:	229c21        	l32r	a2, 400a56d8 <_iram_end+0x17b84>
400dcc68:	629e21        	l32r	a2, 400b56e0 <_iram_end+0x27b8c>
400dcc6b:	2a10c1        	l32r	a12, 400a74ac <_iram_end+0x19958>
400dcc6e:	c22225        	call8	4009ee90 <_iram_end+0x1133c>
400dcc71:	58fc      	bnez.n	a8, 400dccaa <_svfprintf_r+0x992>
400dcc73:	236002        	s32i	a0, a0, 140
400dcc76:	0259b0        	andb	b5, b9, b11
400dcc79:	000b46        	j	400dccaa <_svfprintf_r+0x992>
400dcc7c:	10c182        	addi	a8, a1, 16
400dcc7f:	02d822        	addmi	a2, a8, 0x200
400dcc82:	1a2232        	l32i	a3, a2, 104
400dcc85:	851c      	movi.n	a5, 24
400dcc87:	634b      	addi.n	a6, a3, 4
400dcc89:	1a6262        	s32i	a6, a2, 104
400dcc8c:	052567        	blt	a5, a6, 400dcc95 <_svfprintf_r+0x97d>
400dcc8f:	192232        	l32i	a3, a2, 100
400dcc92:	000286        	j	400dcca0 <_svfprintf_r+0x988>
400dcc95:	042537        	blt	a5, a3, 400dcc9d <_svfprintf_r+0x985>
400dcc98:	432c      	movi.n	a3, 36
400dcc9a:	1a6232        	s32i	a3, a2, 104
400dcc9d:	9c2132        	l32i	a3, a1, 0x270
400dcca0:	9e2122        	l32i	a2, a1, 0x278
400dcca3:	232a      	add.n	a2, a3, a2
400dcca5:	fcc222        	addi	a2, a2, -4
400dcca8:	0258      	l32i.n	a5, a2, 0
400dccaa:	313f50        	srai	a3, a5, 31
400dccad:	047d      	mov.n	a7, a4
400dccaf:	120c      	movi.n	a2, 1
400dccb1:	002396        	bltz	a3, 400dccb7 <_svfprintf_r+0x99f>
400dccb4:	062506        	j	400de54c <_svfprintf_r+0x2234>
400dccb7:	605050        	neg	a5, a5
400dccba:	080c      	movi.n	a8, 0
400dccbc:	938250        	movnez	a8, a2, a5
400dccbf:	603030        	neg	a3, a3
400dccc2:	10c192        	addi	a9, a1, 16
400dccc5:	c03380        	sub	a3, a3, a8
400dccc8:	d62c      	movi.n	a6, 45
400dccca:	02d942        	addmi	a4, a9, 0x200
400dcccd:	061e06        	j	400de549 <_svfprintf_r+0x2231>
400dccd0:	a02162        	l32i	a6, a1, 0x280
400dccd3:	972132        	l32i	a3, a1, 0x25c
400dccd6:	0e6637        	bbci	a6, 3, 400dcce8 <_svfprintf_r+0x9d0>
400dccd9:	053416        	beqz	a4, 400dcd30 <_svfprintf_r+0xa18>
400dccdc:	21a237        	bge	a2, a3, 400dcd01 <_svfprintf_r+0x9e9>
400dccdf:	10c182        	addi	a8, a1, 16
400dcce2:	b02280        	addx8	a2, a2, a8
400dcce5:	0002c6        	j	400dccf4 <_svfprintf_r+0x9dc>
400dcce8:	044416        	beqz	a4, 400dcd30 <_svfprintf_r+0xa18>
400dcceb:	12a237        	bge	a2, a3, 400dcd01 <_svfprintf_r+0x9e9>
400dccee:	10c192        	addi	a9, a1, 16
400dccf1:	b02290        	addx8	a2, a2, a9
400dccf4:	0248      	l32i.n	a4, a2, 0
400dccf6:	1258      	l32i.n	a5, a2, 4
400dccf8:	aa6142        	s32i	a4, a1, 0x2a8
400dccfb:	ab6152        	s32i	a5, a1, 0x2ac
400dccfe:	003586        	j	400dcdd8 <_svfprintf_r+0xac0>
400dcd01:	10c162        	addi	a6, a1, 16
400dcd04:	48a232        	movi	a3, 0x248
400dcd07:	363a      	add.n	a3, a6, a3
400dcd09:	4ca2d2        	movi	a13, 0x24c
400dcd0c:	60a2c2        	movi	a12, 0x260
400dcd0f:	0139      	s32i.n	a3, a1, 0
400dcd11:	01d6f2        	addmi	a15, a6, 0x100
400dcd14:	06ed      	mov.n	a14, a6
400dcd16:	d6da      	add.n	a13, a6, a13
400dcd18:	c6ca      	add.n	a12, a6, a12
400dcd1a:	05bd      	mov.n	a11, a5
400dcd1c:	02ad      	mov.n	a10, a2
400dcd1e:	ff17a5        	call8	400dbe98 <get_arg$isra$0>
400dcd21:	0a88      	l32i.n	a8, a10, 0
400dcd23:	1a98      	l32i.n	a9, a10, 4
400dcd25:	aa6182        	s32i	a8, a1, 0x2a8
400dcd28:	ab6192        	s32i	a9, a1, 0x2ac
400dcd2b:	002a46        	j	400dcdd8 <_svfprintf_r+0xac0>
400dcd2e:	920000        	lsi	f0, a0, 0x248
400dcd31:	1b10c1        	l32r	a12, 400a3974 <_iram_end+0x15e20>
400dcd34:	229047        	bne	a0, a4, 400dcd5a <_svfprintf_r+0xa42>
400dcd37:	a737b0        	lsi	f11, a7, 0x29c
400dcd3a:	234602        	s8i	a0, a6, 35
400dcd3d:	f21c00        	rems	a1, a12, a0
400dcd40:	542237        	blt	a2, a3, 400dcd98 <_svfprintf_r+0xa80>
400dcd43:	231b      	addi.n	a2, a3, 1
400dcd45:	10c192        	addi	a9, a1, 16
400dcd48:	976122        	s32i	a2, a1, 0x25c
400dcd4b:	02d922        	addmi	a2, a9, 0x200
400dcd4e:	1a2252        	l32i	a5, a2, 104
400dcd51:	657b      	addi.n	a6, a5, 7
400dcd53:	857c      	movi.n	a5, -8
400dcd55:	105650        	and	a5, a6, a5
400dcd58:	758b      	addi.n	a7, a5, 8
400dcd5a:	1a6272        	s32i	a7, a2, 104
400dcd5d:	861c      	movi.n	a6, 24
400dcd5f:	052677        	blt	a6, a7, 400dcd68 <_svfprintf_r+0xa50>
400dcd62:	192252        	l32i	a5, a2, 100
400dcd65:	000286        	j	400dcd73 <_svfprintf_r+0xa5b>
400dcd68:	042657        	blt	a6, a5, 400dcd70 <_svfprintf_r+0xa58>
400dcd6b:	852c      	movi.n	a5, 40
400dcd6d:	1a6252        	s32i	a5, a2, 104
400dcd70:	9c2152        	l32i	a5, a1, 0x270
400dcd73:	9e2122        	l32i	a2, a1, 0x278
400dcd76:	252a      	add.n	a2, a5, a2
400dcd78:	f8c222        	addi	a2, a2, -8
400dcd7b:	0288      	l32i.n	a8, a2, 0
400dcd7d:	1298      	l32i.n	a9, a2, 4
400dcd7f:	aa6182        	s32i	a8, a1, 0x2a8
400dcd82:	ab6192        	s32i	a9, a1, 0x2ac
400dcd85:	10c192        	addi	a9, a1, 16
400dcd88:	b02390        	addx8	a2, a3, a9
400dcd8b:	aa2182        	l32i	a8, a1, 0x2a8
400dcd8e:	ab2192        	l32i	a9, a1, 0x2ac
400dcd91:	0289      	s32i.n	a8, a2, 0
400dcd93:	1299      	s32i.n	a9, a2, 4
400dcd95:	000f46        	j	400dcdd6 <_svfprintf_r+0xabe>
400dcd98:	10c192        	addi	a9, a1, 16
400dcd9b:	02d922        	addmi	a2, a9, 0x200
400dcd9e:	1a2232        	l32i	a3, a2, 104
400dcda1:	537b      	addi.n	a5, a3, 7
400dcda3:	837c      	movi.n	a3, -8
400dcda5:	103530        	and	a3, a5, a3
400dcda8:	638b      	addi.n	a6, a3, 8
400dcdaa:	1a6262        	s32i	a6, a2, 104
400dcdad:	851c      	movi.n	a5, 24
400dcdaf:	062567        	blt	a5, a6, 400dcdb9 <_svfprintf_r+0xaa1>
400dcdb2:	192232        	l32i	a3, a2, 100
400dcdb5:	0002c6        	j	400dcdc4 <_svfprintf_r+0xaac>
400dcdb8:	253700        	extui	a3, a0, 23, 3
400dcdbb:	832c04        	lsi	f0, a12, 0x20c
400dcdbe:	1a6232        	s32i	a3, a2, 104
400dcdc1:	9c2132        	l32i	a3, a1, 0x270
400dcdc4:	9e2122        	l32i	a2, a1, 0x278
400dcdc7:	232a      	add.n	a2, a3, a2
400dcdc9:	f8c222        	addi	a2, a2, -8
400dcdcc:	0288      	l32i.n	a8, a2, 0
400dcdce:	1298      	l32i.n	a9, a2, 4
400dcdd0:	aa6182        	s32i	a8, a1, 0x2a8
400dcdd3:	ab6192        	s32i	a9, a1, 0x2ac
400dcdd6:	047d      	mov.n	a7, a4
400dcdd8:	aa21a2        	l32i	a10, a1, 0x2a8
400dcddb:	ab21b2        	l32i	a11, a1, 0x2ac
400dcdde:	fdca25        	call8	400daa80 <__fpclassifyd>
400dcde1:	341a66        	bnei	a10, 1, 400dce19 <_svfprintf_r+0xb01>
400dcde4:	cc9ec1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcde7:	cc9dd1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400dcdea:	aa21a2        	l32i	a10, a1, 0x2a8
400dcded:	ab21b2        	l32i	a11, a1, 0x2ac
400dcdf0:	ce6681        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400dcdf3:	0008e0        	callx8	a8
400dcdf6:	00aad6        	bgez	a10, 400dce04 <_svfprintf_r+0xaec>
400dcdf9:	10c192        	addi	a9, a1, 16
400dcdfc:	d32c      	movi.n	a3, 45
400dcdfe:	02d922        	addmi	a2, a9, 0x200
400dce01:	524232        	s8i	a3, a2, 82
400dce04:	ce5221        	l32r	a2, 400d074c <_flash_cache_start+0x734>
400dce07:	a62132        	l32i	a3, a1, 0x298
400dce0a:	a16122        	s32i	a2, a1, 0x284
400dce0d:	724c      	movi.n	a2, 71
400dce0f:	ce4e41        	l32r	a4, 400d0748 <_flash_cache_start+0x730>
400dce12:	1fa237        	bge	a2, a3, 400dce35 <_svfprintf_r+0xb1d>
400dce15:	0007c6        	j	400dce38 <_svfprintf_r+0xb20>
400dce18:	21a200        	srai	a10, a0, 2
400dce1b:	b2aa      	add.n	a11, a2, a10
400dce1d:	25ab21        	l32r	a2, 400a64cc <_iram_end+0x18978>
400dce20:	ecfdc6        	j	400d821b <nvs::Page::mLoadEntryTable()+0xb7>
400dce23:	91ba      	add.n	a9, a1, a11
400dce25:	ce4c      	movi.n	a14, 76
400dce27:	a62132        	l32i	a3, a1, 0x298
400dce2a:	a16192        	s32i	a9, a1, 0x284
400dce2d:	724c      	movi.n	a2, 71
400dce2f:	052237        	blt	a2, a3, 400dce38 <_svfprintf_r+0xb20>
400dce32:	ce4741        	l32r	a4, 400d0750 <_flash_cache_start+0x738>
400dce35:	a16142        	s32i	a4, a1, 0x284
400dce38:	a02152        	l32i	a5, a1, 0x280
400dce3b:	7faf22        	movi	a2, -129
400dce3e:	105520        	and	a5, a5, a2
400dce41:	060c      	movi.n	a6, 0
400dce43:	380c      	movi.n	a8, 3
400dce45:	a06152        	s32i	a5, a1, 0x280
400dce48:	a26162        	s32i	a6, a1, 0x288
400dce4b:	a56182        	s32i	a8, a1, 0x294
400dce4e:	064806        	j	400de772 <_svfprintf_r+0x245a>
400dce51:	a62192        	l32i	a9, a1, 0x298
400dce54:	dfaf22        	movi	a2, -33
400dce57:	102920        	and	a2, a9, a2
400dce5a:	a96122        	s32i	a2, a1, 0x2a4
400dce5d:	a92132        	l32i	a3, a1, 0x2a4
400dce60:	41a022        	movi	a2, 65
400dce63:	4d9327        	bne	a3, a2, 400dceb4 <_svfprintf_r+0xb9c>
400dce66:	10c142        	addi	a4, a1, 16
400dce69:	02d422        	addmi	a2, a4, 0x200
400dce6c:	30a032        	movi	a3, 48
400dce6f:	504232        	s8i	a3, a2, 80
400dce72:	58a052        	movi	a5, 88
400dce75:	9fc942        	addi	a4, a9, -97
400dce78:	78a032        	movi	a3, 120
400dce7b:	933540        	movnez	a3, a5, a4
400dce7e:	a02152        	l32i	a5, a1, 0x280
400dce81:	514232        	s8i	a3, a2, 81
400dce84:	220c      	movi.n	a2, 2
400dce86:	205520        	or	a5, a5, a2
400dce89:	a52162        	l32i	a6, a1, 0x294
400dce8c:	a06152        	s32i	a5, a1, 0x280
400dce8f:	63a022        	movi	a2, 99
400dce92:	3aa267        	bge	a2, a6, 400dced0 <_svfprintf_r+0xbb8>
400dce95:	a321a2        	l32i	a10, a1, 0x28c
400dce98:	b61b      	addi.n	a11, a6, 1
400dce9a:	a79ee5        	call8	40084888 <_malloc_r>
400dce9d:	a161a2        	s32i	a10, a1, 0x284
400dcea0:	040a56        	bnez	a10, 400dcee4 <_svfprintf_r+0xbcc>
400dcea3:	a42182        	l32i	a8, a1, 0x290
400dcea6:	024c      	movi.n	a2, 64
400dcea8:	061832        	l16ui	a3, a8, 12
400dceab:	202320        	or	a2, a3, a2
400dceae:	065822        	s16i	a2, a8, 12
400dceb1:	094b06        	j	400df3e1 <_svfprintf_r+0x30c9>
400dceb4:	a52192        	l32i	a9, a1, 0x294
400dceb7:	0a0c      	movi.n	a10, 0
400dceb9:	300926        	beqi	a9, -1, 400dceed <_svfprintf_r+0xbd5>
400dcebc:	0899a7        	bne	a9, a10, 400dcec8 <_svfprintf_r+0xbb0>
400dcebf:	a92132        	l32i	a3, a1, 0x2a4
400dcec2:	b9c322        	addi	a2, a3, -71
400dcec5:	2f12a7        	beq	a2, a10, 400dcef8 <_svfprintf_r+0xbe0>
400dcec8:	040c      	movi.n	a4, 0
400dceca:	a26142        	s32i	a4, a1, 0x288
400dcecd:	000bc6        	j	400dcf00 <_svfprintf_r+0xbe8>
400dced0:	80a142        	movi	a4, 0x180
400dced3:	10c182        	addi	a8, a1, 16
400dced6:	050c      	movi.n	a5, 0
400dced8:	884a      	add.n	a8, a8, a4
400dceda:	a26152        	s32i	a5, a1, 0x288
400dcedd:	a16182        	s32i	a8, a1, 0x284
400dcee0:	000706        	j	400dcf00 <_svfprintf_r+0xbe8>
400dcee3:	219200        	srai	a9, a0, 2
400dcee6:	6192a1        	l32r	a10, 400b5530 <_iram_end+0x279dc>
400dcee9:	0486a2        	lsi	f10, a6, 16
400dceec:	620c00        	lsi	f0, a12, 0x188
400dceef:	a261a2        	s32i	a10, a1, 0x288
400dcef2:	a56122        	s32i	a2, a1, 0x294
400dcef5:	0001c6        	j	400dcf00 <_svfprintf_r+0xbe8>
400dcef8:	130c      	movi.n	a3, 1
400dcefa:	a261a2        	s32i	a10, a1, 0x288
400dcefd:	a56132        	s32i	a3, a1, 0x294
400dcf00:	a02142        	l32i	a4, a1, 0x280
400dcf03:	00a122        	movi	a2, 0x100
400dcf06:	202420        	or	a2, a4, a2
400dcf09:	b26122        	s32i	a2, a1, 0x2c8
400dcf0c:	ab2122        	l32i	a2, a1, 0x2ac
400dcf0f:	aa2132        	l32i	a3, a1, 0x2a8
400dcf12:	0102d6        	bgez	a2, 400dcf26 <_svfprintf_r+0xc0e>
400dcf15:	cc5921        	l32r	a2, 400d007c <_flash_cache_start+0x64>
400dcf18:	ab2152        	l32i	a5, a1, 0x2ac
400dcf1b:	d62c      	movi.n	a6, 45
400dcf1d:	302520        	xor	a2, a5, a2
400dcf20:	b66162        	s32i	a6, a1, 0x2d8
400dcf23:	000106        	j	400dcf2b <_svfprintf_r+0xc13>
400dcf26:	080c      	movi.n	a8, 0
400dcf28:	b66182        	s32i	a8, a1, 0x2d8
400dcf2b:	a92192        	l32i	a9, a1, 0x2a4
400dcf2e:	144c      	movi.n	a4, 65
400dcf30:	021947        	beq	a9, a4, 400dcf36 <_svfprintf_r+0xc1e>
400dcf33:	005246        	j	400dd080 <_svfprintf_r+0xd68>
400dcf36:	10c1a2        	addi	a10, a1, 16
400dcf39:	44a2c2        	movi	a12, 0x244
400dcf3c:	caca      	add.n	a12, a10, a12
400dcf3e:	02bd      	mov.n	a11, a2
400dcf40:	03ad      	mov.n	a10, a3
400dcf42:	090ee5        	call8	400e6030 <frexp>
400dcf45:	cc45c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcf48:	ce07d1        	l32r	a13, 400d0764 <_flash_cache_start+0x74c>
400dcf4b:	cc4381        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400dcf4e:	0008e0        	callx8	a8
400dcf51:	cc42c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcf54:	cc42d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400dcf57:	0a4d      	mov.n	a4, a10
400dcf59:	205bb0        	or	a5, a11, a11
400dcf5c:	ce0c81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dcf5f:	0008e0        	callx8	a8
400dcf62:	3acc      	bnez.n	a10, 400dcf69 <_svfprintf_r+0xc51>
400dcf64:	120c      	movi.n	a2, 1
400dcf66:	956122        	s32i	a2, a1, 0x254
400dcf69:	a62132        	l32i	a3, a1, 0x298
400dcf6c:	cdfc61        	l32r	a6, 400d075c <_flash_cache_start+0x744>
400dcf6f:	9fc322        	addi	a2, a3, -97
400dcf72:	cdf981        	l32r	a8, 400d0758 <_flash_cache_start+0x740>
400dcf75:	023d      	mov.n	a3, a2
400dcf77:	062d      	mov.n	a2, a6
400dcf79:	a52162        	l32i	a6, a1, 0x294
400dcf7c:	832830        	moveqz	a2, a8, a3
400dcf7f:	a12182        	l32i	a8, a1, 0x284
400dcf82:	960b      	addi.n	a9, a6, -1
400dcf84:	cc36c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcf87:	cdf8d1        	l32r	a13, 400d0768 <_flash_cache_start+0x750>
400dcf8a:	20a440        	or	a10, a4, a4
400dcf8d:	20b550        	or	a11, a5, a5
400dcf90:	b86182        	s32i	a8, a1, 0x2e0
400dcf93:	b76192        	s32i	a9, a1, 0x2dc
400dcf96:	cc3081        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400dcf99:	0008e0        	callx8	a8
400dcf9c:	0b5d      	mov.n	a5, a11
400dcf9e:	0a4d      	mov.n	a4, a10
400dcfa0:	cdfc81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400dcfa3:	0008e0        	callx8	a8
400dcfa6:	0a3d      	mov.n	a3, a10
400dcfa8:	cdfb81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400dcfab:	0008e0        	callx8	a8
400dcfae:	0acd      	mov.n	a12, a10
400dcfb0:	0bdd      	mov.n	a13, a11
400dcfb2:	04ad      	mov.n	a10, a4
400dcfb4:	05bd      	mov.n	a11, a5
400dcfb6:	cdf881        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400dcfb9:	0008e0        	callx8	a8
400dcfbc:	b82182        	l32i	a8, a1, 0x2e0
400dcfbf:	0a4d      	mov.n	a4, a10
400dcfc1:	a23a      	add.n	a10, a2, a3
400dcfc3:	881b      	addi.n	a8, a8, 1
400dcfc5:	000aa2        	l8ui	a10, a10, 0
400dcfc8:	680b      	addi.n	a6, a8, -1
400dcfca:	0046a2        	s8i	a10, a6, 0
400dcfcd:	b72192        	l32i	a9, a1, 0x2dc
400dcfd0:	0b5d      	mov.n	a5, a11
400dcfd2:	096d      	mov.n	a6, a9
400dcfd4:	1e0926        	beqi	a9, -1, 400dcff6 <_svfprintf_r+0xcde>
400dcfd7:	cc21c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcfda:	cc20d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400dcfdd:	990b      	addi.n	a9, a9, -1
400dcfdf:	04ad      	mov.n	a10, a4
400dcfe1:	b86182        	s32i	a8, a1, 0x2e0
400dcfe4:	b76192        	s32i	a9, a1, 0x2dc
400dcfe7:	cded81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400dcfea:	0008e0        	callx8	a8
400dcfed:	b82182        	l32i	a8, a1, 0x2e0
400dcff0:	b72192        	l32i	a9, a1, 0x2dc
400dcff3:	f8da56        	bnez	a10, 400dcf84 <_svfprintf_r+0xc6c>
400dcff6:	cc19c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dcff9:	cddcd1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400dcffc:	04ad      	mov.n	a10, a4
400dcffe:	05bd      	mov.n	a11, a5
400dd000:	b86182        	s32i	a8, a1, 0x2e0
400dd003:	cde781        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400dd006:	0008e0        	callx8	a8
400dd009:	b82182        	l32i	a8, a1, 0x2e0
400dd00c:	201ae6        	bgei	a10, 1, 400dd030 <_svfprintf_r+0xd18>
400dd00f:	cc13c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dd012:	cdd6d1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400dd015:	04ad      	mov.n	a10, a4
400dd017:	20b550        	or	a11, a5, a5
400dd01a:	cddc81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dd01d:	0008e0        	callx8	a8
400dd020:	b82182        	l32i	a8, a1, 0x2e0
400dd023:	1acc      	bnez.n	a10, 400dd028 <_svfprintf_r+0xd10>
400dd025:	07e307        	bbsi	a3, 0, 400dd030 <_svfprintf_r+0xd18>
400dd028:	082d      	mov.n	a2, a8
400dd02a:	053c      	movi.n	a5, 48
400dd02c:	000e46        	j	400dd069 <_svfprintf_r+0xd51>
400dd02f:	618200        	lsi	f0, a2, 0x184
400dd032:	024290        	andb	b4, b2, b9
400dd035:	0f          	.byte 0xf
400dd036:	063c      	movi.n	a6, 48
400dd038:	0000c6        	j	400dd03f <_svfprintf_r+0xd27>
400dd03b:	436200        	min	a6, a2, a0
400dd03e:	213200        	srai	a3, a0, 2
400dd041:	330b90        	clamps	a0, a11, 16
400dd044:	906132        	s32i	a3, a1, 0x240
400dd047:	000352        	l8ui	a5, a3, 0
400dd04a:	ee1547        	beq	a5, a4, 400dd03c <_svfprintf_r+0xd24>
400dd04d:	01c542        	addi	a4, a5, 1
400dd050:	39a062        	movi	a6, 57
400dd053:	744040        	extui	a4, a4, 0, 8
400dd056:	029567        	bne	a5, a6, 400dd05c <_svfprintf_r+0xd44>
400dd059:	0a0242        	l8ui	a4, a2, 10
400dd05c:	004342        	s8i	a4, a3, 0
400dd05f:	084d      	mov.n	a4, a8
400dd061:	000386        	j	400dd073 <_svfprintf_r+0xd5b>
400dd064:	004252        	s8i	a5, a2, 0
400dd067:	221b      	addi.n	a2, a2, 1
400dd069:	c03620        	sub	a3, a6, a2
400dd06c:	383a      	add.n	a3, a8, a3
400dd06e:	024d      	mov.n	a4, a2
400dd070:	ff03d6        	bgez	a3, 400dd064 <_svfprintf_r+0xd4c>
400dd073:	a12182        	l32i	a8, a1, 0x284
400dd076:	c04480        	sub	a4, a4, a8
400dd079:	a76142        	s32i	a4, a1, 0x29c
400dd07c:	002dc6        	j	400dd137 <_svfprintf_r+0xe1f>
400dd07f:	219200        	srai	a9, a0, 2
400dd082:	4ca9      	s32i.n	a10, a12, 16
400dd084:	214265        	call8	400fe4ac <_etext+0x11fdb>
400dd087:	3e0ca5        	call8	4011b150 <_etext+0x2ec7f>
400dd08a:	0a1957        	beq	a9, a5, 400dd098 <_svfprintf_r+0xd80>
400dd08d:	45a052        	movi	a5, 69
400dd090:	2e0c      	movi.n	a14, 2
400dd092:	029957        	bne	a9, a5, 400dd098 <_svfprintf_r+0xd80>
400dd095:	01c442        	addi	a4, a4, 1
400dd098:	40a2a2        	movi	a10, 0x240
400dd09b:	8051a0        	add	a5, a1, a10
400dd09e:	50a262        	movi	a6, 0x250
400dd0a1:	026152        	s32i	a5, a1, 8
400dd0a4:	54a282        	movi	a8, 0x254
400dd0a7:	805160        	add	a5, a1, a6
400dd0aa:	1159      	s32i.n	a5, a1, 4
400dd0ac:	a321a2        	l32i	a10, a1, 0x28c
400dd0af:	518a      	add.n	a5, a1, a8
400dd0b1:	0159      	s32i.n	a5, a1, 0
400dd0b3:	04fd      	mov.n	a15, a4
400dd0b5:	03cd      	mov.n	a12, a3
400dd0b7:	02dd      	mov.n	a13, a2
400dd0b9:	083265        	call8	400e53e0 <_dtoa_r>
400dd0bc:	a92192        	l32i	a9, a1, 0x2a4
400dd0bf:	a161a2        	s32i	a10, a1, 0x284
400dd0c2:	754c      	movi.n	a5, 71
400dd0c4:	059957        	bne	a9, a5, 400dd0cd <_svfprintf_r+0xdb5>
400dd0c7:	a02152        	l32i	a5, a1, 0x280
400dd0ca:	5d6507        	bbci	a5, 0, 400dd12b <_svfprintf_r+0xe13>
400dd0cd:	a12182        	l32i	a8, a1, 0x284
400dd0d0:	a92192        	l32i	a9, a1, 0x2a4
400dd0d3:	664c      	movi.n	a6, 70
400dd0d5:	584a      	add.n	a5, a8, a4
400dd0d7:	269967        	bne	a9, a6, 400dd101 <_svfprintf_r+0xde9>
400dd0da:	000862        	l8ui	a6, a8, 0
400dd0dd:	d0c662        	addi	a6, a6, -48
400dd0e0:	86dc      	bnez.n	a6, 400dd0fc <_svfprintf_r+0xde4>
400dd0e2:	cbdec1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dd0e5:	cbddd1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400dd0e8:	03ad      	mov.n	a10, a3
400dd0ea:	02bd      	mov.n	a11, a2
400dd0ec:	cdac81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400dd0ef:	0008e0        	callx8	a8
400dd0f2:	6a8c      	beqz.n	a10, 400dd0fc <_svfprintf_r+0xde4>
400dd0f4:	160c      	movi.n	a6, 1
400dd0f6:	c04640        	sub	a4, a6, a4
400dd0f9:	956142        	s32i	a4, a1, 0x254
400dd0fc:	952142        	l32i	a4, a1, 0x254
400dd0ff:	554a      	add.n	a5, a5, a4
400dd101:	cbd6c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400dd104:	cbd6d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400dd107:	03ad      	mov.n	a10, a3
400dd109:	02bd      	mov.n	a11, a2
400dd10b:	cda081        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dd10e:	0008e0        	callx8	a8
400dd111:	033c      	movi.n	a3, 48
400dd113:	eacc      	bnez.n	a10, 400dd125 <_svfprintf_r+0xe0d>
400dd115:	906152        	s32i	a5, a1, 0x240
400dd118:	0003c6        	j	400dd12b <_svfprintf_r+0xe13>
400dd11b:	1b0000        	un.s	b0, f0, f0
400dd11e:	614242        	s8i	a4, a2, 97
400dd121:	423290        	xorb	b3, b2, b9
400dd124:	212200        	srai	a2, a0, 2
400dd127:	325790        	orbc	b5, b7, b9
400dd12a:	2122f1        	l32r	a15, 400a55b4 <_iram_end+0x17a60>
400dd12d:	213290        	srai	a3, a9, 2
400dd130:	2230a1        	l32r	a10, 400a59f0 <_iram_end+0x17e9c>
400dd133:	6122c0        	xsr.m2	a12
400dd136:	2142a7        	ball	a2, a10, 400dd15b <_svfprintf_r+0xe43>
400dd139:	4ca9      	s32i.n	a10, a12, 16
400dd13b:	942772        	l32i	a7, a7, 0x250
400dd13e:	221c      	movi.n	a2, 18
400dd140:	7c9521        	l32r	a2, 400bc394 <_iram_end+0x2e840>
400dd143:	2237d3        	lsi	f13, a7, 136
400dd146:	5208      	l32i.n	a0, a2, 20
400dd148:	27a521        	l32r	a2, 400a6fdc <_iram_end+0x19488>
400dd14b:	c60225        	call8	400a316c <_iram_end+0x15618>
400dd14e:	005d      	mov.n	a5, a0
400dd150:	a62162        	l32i	a6, a1, 0x298
400dd153:	fec662        	addi	a6, a6, -2
400dd156:	a66162        	s32i	a6, a1, 0x298
400dd159:	0004c6        	j	400dd170 <_svfprintf_r+0xe58>
400dd15c:	a62182        	l32i	a8, a1, 0x298
400dd15f:	624c      	movi.n	a2, 70
400dd161:	029827        	bne	a8, a2, 400dd167 <_svfprintf_r+0xe4f>
400dd164:	004546        	j	400dd27d <_svfprintf_r+0xf65>
400dd167:	65a022        	movi	a2, 101
400dd16a:	02a287        	bge	a2, a8, 400dd170 <_svfprintf_r+0xe58>
400dd16d:	0040c6        	j	400dd274 <_svfprintf_r+0xf5c>
400dd170:	952122        	l32i	a2, a1, 0x254
400dd173:	a62192        	l32i	a9, a1, 0x298
400dd176:	220b      	addi.n	a2, a2, -1
400dd178:	dfaf42        	movi	a4, -33
400dd17b:	956122        	s32i	a2, a1, 0x254
400dd17e:	104940        	and	a4, a9, a4
400dd181:	41a052        	movi	a5, 65
400dd184:	743090        	extui	a3, a9, 0, 8
400dd187:	059457        	bne	a4, a5, 400dd190 <_svfprintf_r+0xe78>
400dd18a:	0fc932        	addi	a3, a9, 15
400dd18d:	743030        	extui	a3, a3, 0, 8
400dd190:	10c1a2        	addi	a10, a1, 16
400dd193:	02da52        	addmi	a5, a10, 0x200
400dd196:	374532        	s8i	a3, a5, 55
400dd199:	b32c      	movi.n	a3, 43
400dd19b:	0072d6        	bgez	a2, 400dd1a6 <_svfprintf_r+0xe8e>
400dd19e:	602020        	neg	a2, a2
400dd1a1:	d32c      	movi.n	a3, 45
400dd1a3:	ffffc6        	j	400dd1a6 <_svfprintf_r+0xe8e>
400dd1a6:	384532        	s8i	a3, a5, 56
400dd1a9:	950c      	movi.n	a5, 9
400dd1ab:	5da527        	bge	a5, a2, 400dd20c <_svfprintf_r+0xef4>
400dd1ae:	37a232        	movi	a3, 0x237
400dd1b1:	10c1e2        	addi	a14, a1, 16
400dd1b4:	cd6f61        	l32r	a6, 400d0770 <_flash_cache_start+0x758>
400dd1b7:	3e3a      	add.n	a3, a14, a3
400dd1b9:	b24260        	mulsh	a4, a2, a6
400dd1bc:	318f20        	srai	a8, a2, 31
400dd1bf:	214240        	srai	a4, a4, 2
400dd1c2:	c04480        	sub	a4, a4, a8
400dd1c5:	a08440        	addx4	a8, a4, a4
400dd1c8:	1188f0        	slli	a8, a8, 1
400dd1cb:	c02280        	sub	a2, a2, a8
400dd1ce:	30c222        	addi	a2, a2, 48
400dd1d1:	330b      	addi.n	a3, a3, -1
400dd1d3:	004322        	s8i	a2, a3, 0
400dd1d6:	042d      	mov.n	a2, a4
400dd1d8:	dd2547        	blt	a5, a4, 400dd1b9 <_svfprintf_r+0xea1>
400dd1db:	330b      	addi.n	a3, a3, -1
400dd1dd:	30c422        	addi	a2, a4, 48
400dd1e0:	004322        	s8i	a2, a3, 0
400dd1e3:	39a242        	movi	a4, 0x239
400dd1e6:	10c122        	addi	a2, a1, 16
400dd1e9:	424a      	add.n	a4, a2, a4
400dd1eb:	10c152        	addi	a5, a1, 16
400dd1ee:	032d      	mov.n	a2, a3
400dd1f0:	37a232        	movi	a3, 0x237
400dd1f3:	353a      	add.n	a3, a5, a3
400dd1f5:	000246        	j	400dd202 <_svfprintf_r+0xeea>
400dd1f8:	000252        	l8ui	a5, a2, 0
400dd1fb:	221b      	addi.n	a2, a2, 1
400dd1fd:	004452        	s8i	a5, a4, 0
400dd200:	441b      	addi.n	a4, a4, 1
400dd202:	045d      	mov.n	a5, a4
400dd204:	f03237        	bltu	a2, a3, 400dd1f8 <_svfprintf_r+0xee0>
400dd207:	000986        	j	400dd231 <_svfprintf_r+0xf19>
400dd20a:	320000        	orbc	b0, b0, b0
400dd20d:	6239a2        	lsi	f10, a9, 0x188
400dd210:	4c10c1        	l32r	a12, 400b0250 <_iram_end+0x226fc>
400dd213:	363015        	call4	40113514 <_etext+0x27043>
400dd216:	145780        	extui	a5, a8, 7, 2
400dd219:	0e          	.byte 0xe
400dd21a:	02d632        	addmi	a3, a6, 0x200
400dd21d:	30a042        	movi	a4, 48
400dd220:	394342        	s8i	a4, a3, 57
400dd223:	3aa232        	movi	a3, 0x23a
400dd226:	803630        	add	a3, a6, a3
400dd229:	30c222        	addi	a2, a2, 48
400dd22c:	531b      	addi.n	a5, a3, 1
400dd22e:	004322        	s8i	a2, a3, 0
400dd231:	47a282        	movi	a8, 0x247
400dd234:	218a      	add.n	a2, a1, a8
400dd236:	a72192        	l32i	a9, a1, 0x29c
400dd239:	c02520        	sub	a2, a5, a2
400dd23c:	992a      	add.n	a9, a9, a2
400dd23e:	b46122        	s32i	a2, a1, 0x2d0
400dd241:	a72122        	l32i	a2, a1, 0x29c
400dd244:	a56192        	s32i	a9, a1, 0x294
400dd247:	0522e6        	bgei	a2, 2, 400dd250 <_svfprintf_r+0xf38>
400dd24a:	a02132        	l32i	a3, a1, 0x280
400dd24d:	076307        	bbci	a3, 0, 400dd258 <_svfprintf_r+0xf40>
400dd250:	a52142        	l32i	a4, a1, 0x294
400dd253:	441b      	addi.n	a4, a4, 1
400dd255:	a56142        	s32i	a4, a1, 0x294
400dd258:	a02152        	l32i	a5, a1, 0x280
400dd25b:	ffab22        	movi	a2, 0xfffffbff
400dd25e:	102520        	and	a2, a5, a2
400dd261:	00a132        	movi	a3, 0x100
400dd264:	203230        	or	a3, a2, a3
400dd267:	a06132        	s32i	a3, a1, 0x280
400dd26a:	030c      	movi.n	a3, 0
400dd26c:	035d      	mov.n	a5, a3
400dd26e:	032d      	mov.n	a2, a3
400dd270:	003946        	j	400dd359 <_svfprintf_r+0x1041>
400dd273:	216200        	srai	a6, a0, 2
400dd276:	a022a6        	blti	a2, 2, 400dd21a <_svfprintf_r+0xf02>
400dd279:	962766        	bnei	a7, 2, 400dd213 <_svfprintf_r+0xefb>
400dd27c:	424a      	add.n	a4, a2, a4
400dd27e:	a69521        	l32r	a2, 400c6cd4 <_rtc_text_end+0x6cd4>
400dd281:	822114        	lsi	f1, a1, 0x208
400dd284:	cca521        	l32r	a2, 400d0518 <_flash_cache_start+0x500>
400dd287:	92a8      	l32i.n	a10, a2, 36
400dd289:	2266a0        	orb	b6, b6, b10
400dd28c:	92a021        	l32r	a2, 400c1d0c <_rtc_text_end+0x1d0c>
400dd28f:	07a661        	l32r	a6, 4009f128 <_iram_end+0x115d4>
400dd292:	326362        	s32i	a6, a3, 200
400dd295:	52a521        	l32r	a2, 400b1d2c <_iram_end+0x241d8>
400dd298:	1b66a0        	un.s	b6, f6, f10
400dd29b:	446a63        	lsi	f6, a10, 0x110
400dd29e:	a66152        	s32i	a5, a1, 0x298
400dd2a1:	0014c6        	j	400dd2f8 <_svfprintf_r+0xfe0>
400dd2a4:	216200        	srai	a6, a0, 2
400dd2a7:	c6cca5        	call8	400a3f70 <_iram_end+0x1641c>
400dd2aa:	66a082        	movi	a8, 102
400dd2ad:	a02192        	l32i	a9, a1, 0x280
400dd2b0:	a66182        	s32i	a8, a1, 0x298
400dd2b3:	140c      	movi.n	a4, 1
400dd2b5:	3f6907        	bbci	a9, 0, 400dd2f8 <_svfprintf_r+0xfe0>
400dd2b8:	a52122        	l32i	a2, a1, 0x294
400dd2bb:	66a032        	movi	a3, 102
400dd2be:	422b      	addi.n	a4, a2, 2
400dd2c0:	a66132        	s32i	a3, a1, 0x298
400dd2c3:	000c46        	j	400dd2f8 <_svfprintf_r+0xfe0>
400dd2c6:	420000        	xorb	b0, b0, b0
400dd2c9:	529521        	l32r	a2, 400b1d20 <_iram_end+0x241cc>
400dd2cc:	57a721        	l32r	a2, 400b3168 <_iram_end+0x25614>
400dd2cf:	621024        	lsi	f2, a0, 0x188
400dd2d2:	8267a0        	mull	a6, a7, a10
400dd2d5:	62a021        	l32r	a2, 400b5d58 <_iram_end+0x28204>
400dd2d8:	07a661        	l32r	a6, 4009f170 <_iram_end+0x1161c>
400dd2db:	1a68      	l32i.n	a6, a10, 4
400dd2dd:	441b      	addi.n	a4, a4, 1
400dd2df:	000546        	j	400dd2f8 <_svfprintf_r+0xfe0>
400dd2e2:	120c      	movi.n	a2, 1
400dd2e4:	05a427        	bge	a4, a2, 400dd2ed <_svfprintf_r+0xfd5>
400dd2e7:	02a022        	movi	a2, 2
400dd2ea:	c02240        	sub	a2, a2, a4
400dd2ed:	a72192        	l32i	a9, a1, 0x29c
400dd2f0:	429a      	add.n	a4, a2, a9
400dd2f2:	67a022        	movi	a2, 103
400dd2f5:	a66122        	s32i	a2, a1, 0x298
400dd2f8:	a02152        	l32i	a5, a1, 0x280
400dd2fb:	952132        	l32i	a3, a1, 0x254
400dd2fe:	4865a7        	bbci	a5, 10, 400dd34a <_svfprintf_r+0x1032>
400dd301:	032d      	mov.n	a2, a3
400dd303:	4313a6        	blti	a3, 1, 400dd34a <_svfprintf_r+0x1032>
400dd306:	030c      	movi.n	a3, 0
400dd308:	035d      	mov.n	a5, a3
400dd30a:	ffa082        	movi	a8, 255
400dd30d:	000686        	j	400dd32b <_svfprintf_r+0x1013>
400dd310:	20a627        	bge	a6, a2, 400dd334 <_svfprintf_r+0x101c>
400dd313:	ad2192        	l32i	a9, a1, 0x2b4
400dd316:	c02260        	sub	a2, a2, a6
400dd319:	010962        	l8ui	a6, a9, 1
400dd31c:	968c      	beqz.n	a6, 400dd329 <_svfprintf_r+0x1011>
400dd31e:	991b      	addi.n	a9, a9, 1
400dd320:	551b      	addi.n	a5, a5, 1
400dd322:	ad6192        	s32i	a9, a1, 0x2b4
400dd325:	000086        	j	400dd32b <_svfprintf_r+0x1013>
400dd328:	331b00        	clamps	a1, a11, 7
400dd32b:	ad2192        	l32i	a9, a1, 0x2b4
400dd32e:	000962        	l8ui	a6, a9, 0
400dd331:	db9687        	bne	a6, a8, 400dd310 <_svfprintf_r+0xff8>
400dd334:	b02182        	l32i	a8, a1, 0x2c0
400dd337:	653a      	add.n	a6, a5, a3
400dd339:	826680        	mull	a6, a6, a8
400dd33c:	b22192        	l32i	a9, a1, 0x2c8
400dd33f:	664a      	add.n	a6, a6, a4
400dd341:	a56162        	s32i	a6, a1, 0x294
400dd344:	a06192        	s32i	a9, a1, 0x280
400dd347:	000386        	j	400dd359 <_svfprintf_r+0x1041>
400dd34a:	032d      	mov.n	a2, a3
400dd34c:	b22132        	l32i	a3, a1, 0x2c8
400dd34f:	a56142        	s32i	a4, a1, 0x294
400dd352:	a06132        	s32i	a3, a1, 0x280
400dd355:	030c      	movi.n	a3, 0
400dd357:	035d      	mov.n	a5, a3
400dd359:	b62142        	l32i	a4, a1, 0x2d8
400dd35c:	060c      	movi.n	a6, 0
400dd35e:	029467        	bne	a4, a6, 400dd364 <_svfprintf_r+0x104c>
400dd361:	0504c6        	j	400de778 <_svfprintf_r+0x2460>
400dd364:	10c192        	addi	a9, a1, 16
400dd367:	d82c      	movi.n	a8, 45
400dd369:	02d942        	addmi	a4, a9, 0x200
400dd36c:	524482        	s8i	a8, a4, 82
400dd36f:	050146        	j	400de778 <_svfprintf_r+0x2460>
400dd372:	a02132        	l32i	a3, a1, 0x280
400dd375:	02e357        	bbsi	a3, 5, 400dd37b <_svfprintf_r+0x1063>
400dd378:	003106        	j	400dd440 <_svfprintf_r+0x1128>
400dd37b:	972132        	l32i	a3, a1, 0x25c
400dd37e:	34bc      	beqz.n	a4, 400dd3b5 <_svfprintf_r+0x109d>
400dd380:	0aa237        	bge	a2, a3, 400dd38e <_svfprintf_r+0x1076>
400dd383:	10c142        	addi	a4, a1, 16
400dd386:	b02240        	addx8	a2, a2, a4
400dd389:	0228      	l32i.n	a2, a2, 0
400dd38b:	000846        	j	400dd3b0 <_svfprintf_r+0x1098>
400dd38e:	10c162        	addi	a6, a1, 16
400dd391:	48a232        	movi	a3, 0x248
400dd394:	363a      	add.n	a3, a6, a3
400dd396:	4ca2d2        	movi	a13, 0x24c
400dd399:	60a2c2        	movi	a12, 0x260
400dd39c:	02ad      	mov.n	a10, a2
400dd39e:	0139      	s32i.n	a3, a1, 0
400dd3a0:	01d6f2        	addmi	a15, a6, 0x100
400dd3a3:	06ed      	mov.n	a14, a6
400dd3a5:	d6da      	add.n	a13, a6, a13
400dd3a7:	c6ca      	add.n	a12, a6, a12
400dd3a9:	05bd      	mov.n	a11, a5
400dd3ab:	feaee5        	call8	400dbe98 <get_arg$isra$0>
400dd3ae:	0a28      	l32i.n	a2, a10, 0
400dd3b0:	074d      	mov.n	a4, a7
400dd3b2:	001f06        	j	400dd432 <_svfprintf_r+0x111a>
400dd3b5:	10c182        	addi	a8, a1, 16
400dd3b8:	471b      	addi.n	a4, a7, 1
400dd3ba:	b02280        	addx8	a2, a2, a8
400dd3bd:	6f2737        	blt	a7, a3, 400dd430 <_svfprintf_r+0x1118>
400dd3c0:	f21c      	movi.n	a2, 31
400dd3c2:	3e2237        	blt	a2, a3, 400dd404 <_svfprintf_r+0x10ec>
400dd3c5:	231b      	addi.n	a2, a3, 1
400dd3c7:	10c192        	addi	a9, a1, 16
400dd3ca:	976122        	s32i	a2, a1, 0x25c
400dd3cd:	02d922        	addmi	a2, a9, 0x200
400dd3d0:	1a2252        	l32i	a5, a2, 104
400dd3d3:	861c      	movi.n	a6, 24
400dd3d5:	754b      	addi.n	a7, a5, 4
400dd3d7:	1a6272        	s32i	a7, a2, 104
400dd3da:	062677        	blt	a6, a7, 400dd3e4 <_svfprintf_r+0x10cc>
400dd3dd:	192252        	l32i	a5, a2, 100
400dd3e0:	0002c6        	j	400dd3ef <_svfprintf_r+0x10d7>
400dd3e3:	265700        	lsi	f0, a7, 152
400dd3e6:	452c04        	lsi	f0, a12, 0x114
400dd3e9:	1a6252        	s32i	a5, a2, 104
400dd3ec:	9c2152        	l32i	a5, a1, 0x270
400dd3ef:	9e2122        	l32i	a2, a1, 0x278
400dd3f2:	10c1a2        	addi	a10, a1, 16
400dd3f5:	252a      	add.n	a2, a5, a2
400dd3f7:	fcc222        	addi	a2, a2, -4
400dd3fa:	0228      	l32i.n	a2, a2, 0
400dd3fc:	b033a0        	addx8	a3, a3, a10
400dd3ff:	0329      	s32i.n	a2, a3, 0
400dd401:	000b46        	j	400dd432 <_svfprintf_r+0x111a>
400dd404:	10c1e2        	addi	a14, a1, 16
400dd407:	02de22        	addmi	a2, a14, 0x200
400dd40a:	1a2232        	l32i	a3, a2, 104
400dd40d:	851c      	movi.n	a5, 24
400dd40f:	634b      	addi.n	a6, a3, 4
400dd411:	1a6262        	s32i	a6, a2, 104
400dd414:	052567        	blt	a5, a6, 400dd41d <_svfprintf_r+0x1105>
400dd417:	192232        	l32i	a3, a2, 100
400dd41a:	000286        	j	400dd428 <_svfprintf_r+0x1110>
400dd41d:	042537        	blt	a5, a3, 400dd425 <_svfprintf_r+0x110d>
400dd420:	432c      	movi.n	a3, 36
400dd422:	1a6232        	s32i	a3, a2, 104
400dd425:	9c2132        	l32i	a3, a1, 0x270
400dd428:	9e2122        	l32i	a2, a1, 0x278
400dd42b:	232a      	add.n	a2, a3, a2
400dd42d:	fcc222        	addi	a2, a2, -4
400dd430:	0228      	l32i.n	a2, a2, 0
400dd432:	ae2132        	l32i	a3, a1, 0x2b8
400dd435:	0239      	s32i.n	a3, a2, 0
400dd437:	313f30        	srai	a3, a3, 31
400dd43a:	1239      	s32i.n	a3, a2, 4
400dd43c:	0031c6        	j	400dd507 <_svfprintf_r+0x11ef>
400dd43f:	216200        	srai	a6, a0, 2
400dd442:	e647a0        	lsi	f10, a7, 0x398
400dd445:	308602        	lsi	f0, a6, 192
400dd448:	216200        	srai	a6, a0, 2
400dd44b:	44bc97        	bgeu	a12, a9, 400dd493 <_svfprintf_r+0x117b>
400dd44e:	0aa267        	bge	a2, a6, 400dd45c <_svfprintf_r+0x1144>
400dd451:	10c182        	addi	a8, a1, 16
400dd454:	b02280        	addx8	a2, a2, a8
400dd457:	0238      	l32i.n	a3, a2, 0
400dd459:	000846        	j	400dd47e <_svfprintf_r+0x1166>
400dd45c:	10c192        	addi	a9, a1, 16
400dd45f:	48a232        	movi	a3, 0x248
400dd462:	393a      	add.n	a3, a9, a3
400dd464:	4ca2d2        	movi	a13, 0x24c
400dd467:	60a2c2        	movi	a12, 0x260
400dd46a:	0139      	s32i.n	a3, a1, 0
400dd46c:	01d9f2        	addmi	a15, a9, 0x100
400dd46f:	09ed      	mov.n	a14, a9
400dd471:	d9da      	add.n	a13, a9, a13
400dd473:	c9ca      	add.n	a12, a9, a12
400dd475:	05bd      	mov.n	a11, a5
400dd477:	02ad      	mov.n	a10, a2
400dd479:	fea1e5        	call8	400dbe98 <get_arg$isra$0>
400dd47c:	0a38      	l32i.n	a3, a10, 0
400dd47e:	074d      	mov.n	a4, a7
400dd480:	001f86        	j	400dd502 <_svfprintf_r+0x11ea>
400dd483:	c1a200        	mul16u	a10, a2, a0
400dd486:	471b10        	lsi	f1, a11, 0x11c
400dd489:	b022a0        	addx8	a2, a2, a10
400dd48c:	702767        	blt	a7, a6, 400dd500 <_svfprintf_r+0x11e8>
400dd48f:	f21c      	movi.n	a2, 31
400dd491:	3f2267        	blt	a2, a6, 400dd4d4 <_svfprintf_r+0x11bc>
400dd494:	261b      	addi.n	a2, a6, 1
400dd496:	10c1e2        	addi	a14, a1, 16
400dd499:	976122        	s32i	a2, a1, 0x25c
400dd49c:	02de22        	addmi	a2, a14, 0x200
400dd49f:	1a2232        	l32i	a3, a2, 104
400dd4a2:	851c      	movi.n	a5, 24
400dd4a4:	734b      	addi.n	a7, a3, 4
400dd4a6:	1a6272        	s32i	a7, a2, 104
400dd4a9:	072577        	blt	a5, a7, 400dd4b4 <_svfprintf_r+0x119c>
400dd4ac:	192222        	l32i	a2, a2, 100
400dd4af:	000306        	j	400dd4bf <_svfprintf_r+0x11a7>
400dd4b2:	370000        	lsi	f0, a0, 220
400dd4b5:	2c0425        	call8	401094f8 <_etext+0x1d027>
400dd4b8:	623243        	lsi	f4, a2, 0x188
400dd4bb:	221a      	add.n	a2, a2, a1
400dd4bd:	329c21        	l32r	a2, 400a9f30 <_iram_end+0x1c3dc>
400dd4c0:	529e21        	l32r	a2, 400b1f38 <_iram_end+0x243e4>
400dd4c3:	3a10c1        	l32r	a12, 400abd04 <_iram_end+0x1e1b0>
400dd4c6:	c33232        	lsi	f3, a2, 0x30c
400dd4c9:	38fc      	bnez.n	a8, 400dd500 <_svfprintf_r+0x11e8>
400dd4cb:	265003        	lsi	f0, a0, 152
400dd4ce:	0239b0        	andb	b3, b9, b11
400dd4d1:	000b46        	j	400dd502 <_svfprintf_r+0x11ea>
400dd4d4:	10c162        	addi	a6, a1, 16
400dd4d7:	02d622        	addmi	a2, a6, 0x200
400dd4da:	1a2232        	l32i	a3, a2, 104
400dd4dd:	851c      	movi.n	a5, 24
400dd4df:	634b      	addi.n	a6, a3, 4
400dd4e1:	1a6262        	s32i	a6, a2, 104
400dd4e4:	052567        	blt	a5, a6, 400dd4ed <_svfprintf_r+0x11d5>
400dd4e7:	192232        	l32i	a3, a2, 100
400dd4ea:	000286        	j	400dd4f8 <_svfprintf_r+0x11e0>
400dd4ed:	042537        	blt	a5, a3, 400dd4f5 <_svfprintf_r+0x11dd>
400dd4f0:	432c      	movi.n	a3, 36
400dd4f2:	1a6232        	s32i	a3, a2, 104
400dd4f5:	9c2132        	l32i	a3, a1, 0x270
400dd4f8:	9e2122        	l32i	a2, a1, 0x278
400dd4fb:	232a      	add.n	a2, a3, a2
400dd4fd:	fcc222        	addi	a2, a2, -4
400dd500:	0238      	l32i.n	a3, a2, 0
400dd502:	ae2182        	l32i	a8, a1, 0x2b8
400dd505:	0389      	s32i.n	a8, a3, 0
400dd507:	047d      	mov.n	a7, a4
400dd509:	fbac46        	j	400dc3be <_svfprintf_r+0xa6>
400dd50c:	a02192        	l32i	a9, a1, 0x280
400dd50f:	02e967        	bbsi	a9, 6, 400dd515 <_svfprintf_r+0x11fd>
400dd512:	002f86        	j	400dd5d4 <_svfprintf_r+0x12bc>
400dd515:	972162        	l32i	a6, a1, 0x25c
400dd518:	14bc      	beqz.n	a4, 400dd54d <_svfprintf_r+0x1235>
400dd51a:	0aa267        	bge	a2, a6, 400dd528 <_svfprintf_r+0x1210>
400dd51d:	10c1a2        	addi	a10, a1, 16
400dd520:	b022a0        	addx8	a2, a2, a10
400dd523:	0238      	l32i.n	a3, a2, 0
400dd525:	0007c6        	j	400dd548 <_svfprintf_r+0x1230>
400dd528:	10c1e2        	addi	a14, a1, 16
400dd52b:	48a232        	movi	a3, 0x248
400dd52e:	3e3a      	add.n	a3, a14, a3
400dd530:	4ca2d2        	movi	a13, 0x24c
400dd533:	60a2c2        	movi	a12, 0x260
400dd536:	0139      	s32i.n	a3, a1, 0
400dd538:	01def2        	addmi	a15, a14, 0x100
400dd53b:	deda      	add.n	a13, a14, a13
400dd53d:	ceca      	add.n	a12, a14, a12
400dd53f:	05bd      	mov.n	a11, a5
400dd541:	02ad      	mov.n	a10, a2
400dd543:	fe9565        	call8	400dbe98 <get_arg$isra$0>
400dd546:	0a38      	l32i.n	a3, a10, 0
400dd548:	074d      	mov.n	a4, a7
400dd54a:	001f06        	j	400dd5ca <_svfprintf_r+0x12b2>
400dd54d:	10c132        	addi	a3, a1, 16
400dd550:	471b      	addi.n	a4, a7, 1
400dd552:	b02230        	addx8	a2, a2, a3
400dd555:	6f2767        	blt	a7, a6, 400dd5c8 <_svfprintf_r+0x12b0>
400dd558:	f21c      	movi.n	a2, 31
400dd55a:	3e2267        	blt	a2, a6, 400dd59c <_svfprintf_r+0x1284>
400dd55d:	261b      	addi.n	a2, a6, 1
400dd55f:	10c152        	addi	a5, a1, 16
400dd562:	976122        	s32i	a2, a1, 0x25c
400dd565:	02d522        	addmi	a2, a5, 0x200
400dd568:	1a2232        	l32i	a3, a2, 104
400dd56b:	851c      	movi.n	a5, 24
400dd56d:	734b      	addi.n	a7, a3, 4
400dd56f:	1a6272        	s32i	a7, a2, 104
400dd572:	062577        	blt	a5, a7, 400dd57c <_svfprintf_r+0x1264>
400dd575:	192222        	l32i	a2, a2, 100
400dd578:	0002c6        	j	400dd587 <_svfprintf_r+0x126f>
400dd57b:	253700        	extui	a3, a0, 23, 3
400dd57e:	432c04        	lsi	f0, a12, 0x10c
400dd581:	1a6232        	s32i	a3, a2, 104
400dd584:	9c2122        	l32i	a2, a1, 0x270
400dd587:	9e2132        	l32i	a3, a1, 0x278
400dd58a:	10c182        	addi	a8, a1, 16
400dd58d:	323a      	add.n	a3, a2, a3
400dd58f:	fcc332        	addi	a3, a3, -4
400dd592:	0338      	l32i.n	a3, a3, 0
400dd594:	b02680        	addx8	a2, a6, a8
400dd597:	0239      	s32i.n	a3, a2, 0
400dd599:	000b46        	j	400dd5ca <_svfprintf_r+0x12b2>
400dd59c:	10c192        	addi	a9, a1, 16
400dd59f:	02d922        	addmi	a2, a9, 0x200
400dd5a2:	1a2232        	l32i	a3, a2, 104
400dd5a5:	851c      	movi.n	a5, 24
400dd5a7:	634b      	addi.n	a6, a3, 4
400dd5a9:	1a6262        	s32i	a6, a2, 104
400dd5ac:	052567        	blt	a5, a6, 400dd5b5 <_svfprintf_r+0x129d>
400dd5af:	192232        	l32i	a3, a2, 100
400dd5b2:	000286        	j	400dd5c0 <_svfprintf_r+0x12a8>
400dd5b5:	042537        	blt	a5, a3, 400dd5bd <_svfprintf_r+0x12a5>
400dd5b8:	432c      	movi.n	a3, 36
400dd5ba:	1a6232        	s32i	a3, a2, 104
400dd5bd:	9c2132        	l32i	a3, a1, 0x270
400dd5c0:	9e2122        	l32i	a2, a1, 0x278
400dd5c3:	232a      	add.n	a2, a3, a2
400dd5c5:	fcc222        	addi	a2, a2, -4
400dd5c8:	0238      	l32i.n	a3, a2, 0
400dd5ca:	ae2122        	l32i	a2, a1, 0x2b8
400dd5cd:	005322        	s16i	a2, a3, 0
400dd5d0:	ffccc6        	j	400dd507 <_svfprintf_r+0x11ef>
400dd5d3:	216200        	srai	a6, a0, 2
400dd5d6:	2132a0        	srai	a3, a10, 2
400dd5d9:	e69797        	bne	a7, a9, 400dd5c3 <_svfprintf_r+0x12ab>
400dd5dc:	2fc602        	addi	a0, a6, 47
400dd5df:	44bc00        	extui	a11, a0, 12, 5
400dd5e2:	0aa237        	bge	a2, a3, 400dd5f0 <_svfprintf_r+0x12d8>
400dd5e5:	10c182        	addi	a8, a1, 16
400dd5e8:	b02280        	addx8	a2, a2, a8
400dd5eb:	0248      	l32i.n	a4, a2, 0
400dd5ed:	000846        	j	400dd612 <_svfprintf_r+0x12fa>
400dd5f0:	10c192        	addi	a9, a1, 16
400dd5f3:	48a232        	movi	a3, 0x248
400dd5f6:	393a      	add.n	a3, a9, a3
400dd5f8:	4ca2d2        	movi	a13, 0x24c
400dd5fb:	60a2c2        	movi	a12, 0x260
400dd5fe:	0139      	s32i.n	a3, a1, 0
400dd600:	01d9f2        	addmi	a15, a9, 0x100
400dd603:	09ed      	mov.n	a14, a9
400dd605:	d9da      	add.n	a13, a9, a13
400dd607:	c9ca      	add.n	a12, a9, a12
400dd609:	05bd      	mov.n	a11, a5
400dd60b:	02ad      	mov.n	a10, a2
400dd60d:	fe88a5        	call8	400dbe98 <get_arg$isra$0>
400dd610:	0a48      	l32i.n	a4, a10, 0
400dd612:	075d      	mov.n	a5, a7
400dd614:	001f86        	j	400dd696 <_svfprintf_r+0x137e>
400dd617:	c1a200        	mul16u	a10, a2, a0
400dd61a:	571b10        	lsi	f1, a11, 0x15c
400dd61d:	b022a0        	addx8	a2, a2, a10
400dd620:	702737        	blt	a7, a3, 400dd694 <_svfprintf_r+0x137c>
400dd623:	f21c      	movi.n	a2, 31
400dd625:	3f2237        	blt	a2, a3, 400dd668 <_svfprintf_r+0x1350>
400dd628:	231b      	addi.n	a2, a3, 1
400dd62a:	10c1e2        	addi	a14, a1, 16
400dd62d:	976122        	s32i	a2, a1, 0x25c
400dd630:	02de22        	addmi	a2, a14, 0x200
400dd633:	1a2242        	l32i	a4, a2, 104
400dd636:	861c      	movi.n	a6, 24
400dd638:	744b      	addi.n	a7, a4, 4
400dd63a:	1a6272        	s32i	a7, a2, 104
400dd63d:	072677        	blt	a6, a7, 400dd648 <_svfprintf_r+0x1330>
400dd640:	192242        	l32i	a4, a2, 100
400dd643:	000306        	j	400dd653 <_svfprintf_r+0x133b>
400dd646:	470000        	lsi	f0, a0, 0x11c
400dd649:	2c0426        	beqi	a4, -1, 400dd679 <_svfprintf_r+0x1361>
400dd64c:	624244        	lsi	f4, a2, 0x188
400dd64f:	421a      	add.n	a4, a2, a1
400dd651:	229c21        	l32r	a2, 400a60c4 <_iram_end+0x18570>
400dd654:	629e21        	l32r	a2, 400b60cc <_iram_end+0x28578>
400dd657:	2a10c1        	l32r	a12, 400a7e98 <_iram_end+0x1a344>
400dd65a:	c22224        	lsi	f2, a2, 0x308
400dd65d:	48fc      	bnez.n	a8, 400dd695 <_svfprintf_r+0x137d>
400dd65f:	236002        	s32i	a0, a0, 140
400dd662:	0249b0        	andb	b4, b9, b11
400dd665:	000b46        	j	400dd696 <_svfprintf_r+0x137e>
400dd668:	10c182        	addi	a8, a1, 16
400dd66b:	02d822        	addmi	a2, a8, 0x200
400dd66e:	1a2232        	l32i	a3, a2, 104
400dd671:	841c      	movi.n	a4, 24
400dd673:	634b      	addi.n	a6, a3, 4
400dd675:	1a6262        	s32i	a6, a2, 104
400dd678:	052467        	blt	a4, a6, 400dd681 <_svfprintf_r+0x1369>
400dd67b:	192232        	l32i	a3, a2, 100
400dd67e:	000286        	j	400dd68c <_svfprintf_r+0x1374>
400dd681:	042437        	blt	a4, a3, 400dd689 <_svfprintf_r+0x1371>
400dd684:	432c      	movi.n	a3, 36
400dd686:	1a6232        	s32i	a3, a2, 104
400dd689:	9c2132        	l32i	a3, a1, 0x270
400dd68c:	9e2122        	l32i	a2, a1, 0x278
400dd68f:	232a      	add.n	a2, a3, a2
400dd691:	fcc222        	addi	a2, a2, -4
400dd694:	0248      	l32i.n	a4, a2, 0
400dd696:	ae2192        	l32i	a9, a1, 0x2b8
400dd699:	004492        	s8i	a9, a4, 0
400dd69c:	002ec6        	j	400dd75b <_svfprintf_r+0x1443>
400dd69f:	14bc00        	extui	a11, a0, 12, 2
400dd6a2:	0aa237        	bge	a2, a3, 400dd6b0 <_svfprintf_r+0x1398>
400dd6a5:	10c1a2        	addi	a10, a1, 16
400dd6a8:	b022a0        	addx8	a2, a2, a10
400dd6ab:	0248      	l32i.n	a4, a2, 0
400dd6ad:	0007c6        	j	400dd6d0 <_svfprintf_r+0x13b8>
400dd6b0:	10c1e2        	addi	a14, a1, 16
400dd6b3:	48a232        	movi	a3, 0x248
400dd6b6:	3e3a      	add.n	a3, a14, a3
400dd6b8:	4ca2d2        	movi	a13, 0x24c
400dd6bb:	60a2c2        	movi	a12, 0x260
400dd6be:	0139      	s32i.n	a3, a1, 0
400dd6c0:	01def2        	addmi	a15, a14, 0x100
400dd6c3:	deda      	add.n	a13, a14, a13
400dd6c5:	ceca      	add.n	a12, a14, a12
400dd6c7:	05bd      	mov.n	a11, a5
400dd6c9:	02ad      	mov.n	a10, a2
400dd6cb:	fe7ce5        	call8	400dbe98 <get_arg$isra$0>
400dd6ce:	0a48      	l32i.n	a4, a10, 0
400dd6d0:	075d      	mov.n	a5, a7
400dd6d2:	002006        	j	400dd756 <_svfprintf_r+0x143e>
400dd6d5:	571b      	addi.n	a5, a7, 1
400dd6d7:	09a737        	bge	a7, a3, 400dd6e4 <_svfprintf_r+0x13cc>
400dd6da:	10c132        	addi	a3, a1, 16
400dd6dd:	b02230        	addx8	a2, a2, a3
400dd6e0:	001c06        	j	400dd754 <_svfprintf_r+0x143c>
400dd6e3:	f21c00        	rems	a1, a12, a0
400dd6e6:	3e2237        	blt	a2, a3, 400dd728 <_svfprintf_r+0x1410>
400dd6e9:	231b      	addi.n	a2, a3, 1
400dd6eb:	10c142        	addi	a4, a1, 16
400dd6ee:	976122        	s32i	a2, a1, 0x25c
400dd6f1:	02d422        	addmi	a2, a4, 0x200
400dd6f4:	1a2242        	l32i	a4, a2, 104
400dd6f7:	861c      	movi.n	a6, 24
400dd6f9:	744b      	addi.n	a7, a4, 4
400dd6fb:	1a6272        	s32i	a7, a2, 104
400dd6fe:	062677        	blt	a6, a7, 400dd708 <_svfprintf_r+0x13f0>
400dd701:	192242        	l32i	a4, a2, 100
400dd704:	0002c6        	j	400dd713 <_svfprintf_r+0x13fb>
400dd707:	264700        	lsi	f0, a7, 152
400dd70a:	442c04        	lsi	f0, a12, 0x110
400dd70d:	1a6242        	s32i	a4, a2, 104
400dd710:	9c2142        	l32i	a4, a1, 0x270
400dd713:	9e2122        	l32i	a2, a1, 0x278
400dd716:	10c162        	addi	a6, a1, 16
400dd719:	242a      	add.n	a2, a4, a2
400dd71b:	fcc222        	addi	a2, a2, -4
400dd71e:	0248      	l32i.n	a4, a2, 0
400dd720:	b02360        	addx8	a2, a3, a6
400dd723:	0249      	s32i.n	a4, a2, 0
400dd725:	000b46        	j	400dd756 <_svfprintf_r+0x143e>
400dd728:	10c182        	addi	a8, a1, 16
400dd72b:	02d822        	addmi	a2, a8, 0x200
400dd72e:	1a2232        	l32i	a3, a2, 104
400dd731:	841c      	movi.n	a4, 24
400dd733:	634b      	addi.n	a6, a3, 4
400dd735:	1a6262        	s32i	a6, a2, 104
400dd738:	052467        	blt	a4, a6, 400dd741 <_svfprintf_r+0x1429>
400dd73b:	192232        	l32i	a3, a2, 100
400dd73e:	000286        	j	400dd74c <_svfprintf_r+0x1434>
400dd741:	042437        	blt	a4, a3, 400dd749 <_svfprintf_r+0x1431>
400dd744:	432c      	movi.n	a3, 36
400dd746:	1a6232        	s32i	a3, a2, 104
400dd749:	9c2132        	l32i	a3, a1, 0x270
400dd74c:	9e2122        	l32i	a2, a1, 0x278
400dd74f:	232a      	add.n	a2, a3, a2
400dd751:	fcc222        	addi	a2, a2, -4
400dd754:	0248      	l32i.n	a4, a2, 0
400dd756:	ae2192        	l32i	a9, a1, 0x2b8
400dd759:	0499      	s32i.n	a9, a4, 0
400dd75b:	057d      	mov.n	a7, a5
400dd75d:	fb1746        	j	400dc3be <_svfprintf_r+0xa6>
400dd760:	a02162        	l32i	a6, a1, 0x280
400dd763:	031c      	movi.n	a3, 16
400dd765:	206630        	or	a6, a6, a3
400dd768:	a06162        	s32i	a6, a1, 0x280
400dd76b:	a02182        	l32i	a8, a1, 0x280
400dd76e:	02e857        	bbsi	a8, 5, 400dd774 <_svfprintf_r+0x145c>
400dd771:	0034c6        	j	400dd848 <_svfprintf_r+0x1530>
400dd774:	972162        	l32i	a6, a1, 0x25c
400dd777:	54bc      	beqz.n	a4, 400dd7b0 <_svfprintf_r+0x1498>
400dd779:	0ca267        	bge	a2, a6, 400dd789 <_svfprintf_r+0x1471>
400dd77c:	10c192        	addi	a9, a1, 16
400dd77f:	b02290        	addx8	a2, a2, a9
400dd782:	0258      	l32i.n	a5, a2, 0
400dd784:	1238      	l32i.n	a3, a2, 4
400dd786:	00ed06        	j	400ddb3e <_svfprintf_r+0x1826>
400dd789:	10c1a2        	addi	a10, a1, 16
400dd78c:	48a232        	movi	a3, 0x248
400dd78f:	3a3a      	add.n	a3, a10, a3
400dd791:	4ca2d2        	movi	a13, 0x24c
400dd794:	60a2c2        	movi	a12, 0x260
400dd797:	0139      	s32i.n	a3, a1, 0
400dd799:	01daf2        	addmi	a15, a10, 0x100
400dd79c:	0aed      	mov.n	a14, a10
400dd79e:	dada      	add.n	a13, a10, a13
400dd7a0:	caca      	add.n	a12, a10, a12
400dd7a2:	05bd      	mov.n	a11, a5
400dd7a4:	02ad      	mov.n	a10, a2
400dd7a6:	fe6f25        	call8	400dbe98 <get_arg$isra$0>
400dd7a9:	0a58      	l32i.n	a5, a10, 0
400dd7ab:	1a38      	l32i.n	a3, a10, 4
400dd7ad:	00e346        	j	400ddb3e <_svfprintf_r+0x1826>
400dd7b0:	10c1e2        	addi	a14, a1, 16
400dd7b3:	471b      	addi.n	a4, a7, 1
400dd7b5:	b022e0        	addx8	a2, a2, a14
400dd7b8:	02a767        	bge	a7, a6, 400dd7be <_svfprintf_r+0x14a6>
400dd7bb:	002046        	j	400dd840 <_svfprintf_r+0x1528>
400dd7be:	f21c      	movi.n	a2, 31
400dd7c0:	482267        	blt	a2, a6, 400dd80c <_svfprintf_r+0x14f4>
400dd7c3:	261b      	addi.n	a2, a6, 1
400dd7c5:	10c132        	addi	a3, a1, 16
400dd7c8:	976122        	s32i	a2, a1, 0x25c
400dd7cb:	02d322        	addmi	a2, a3, 0x200
400dd7ce:	1a2232        	l32i	a3, a2, 104
400dd7d1:	537b      	addi.n	a5, a3, 7
400dd7d3:	837c      	movi.n	a3, -8
400dd7d5:	103530        	and	a3, a5, a3
400dd7d8:	738b      	addi.n	a7, a3, 8
400dd7da:	1a6272        	s32i	a7, a2, 104
400dd7dd:	851c      	movi.n	a5, 24
400dd7df:	052577        	blt	a5, a7, 400dd7e8 <_svfprintf_r+0x14d0>
400dd7e2:	192232        	l32i	a3, a2, 100
400dd7e5:	000286        	j	400dd7f3 <_svfprintf_r+0x14db>
400dd7e8:	042537        	blt	a5, a3, 400dd7f0 <_svfprintf_r+0x14d8>
400dd7eb:	832c      	movi.n	a3, 40
400dd7ed:	1a6232        	s32i	a3, a2, 104
400dd7f0:	9c2132        	l32i	a3, a1, 0x270
400dd7f3:	9e2122        	l32i	a2, a1, 0x278
400dd7f6:	10c182        	addi	a8, a1, 16
400dd7f9:	232a      	add.n	a2, a3, a2
400dd7fb:	f8c222        	addi	a2, a2, -8
400dd7fe:	0258      	l32i.n	a5, a2, 0
400dd800:	1238      	l32i.n	a3, a2, 4
400dd802:	b02680        	addx8	a2, a6, a8
400dd805:	0259      	s32i.n	a5, a2, 0
400dd807:	1239      	s32i.n	a3, a2, 4
400dd809:	00cbc6        	j	400ddb3c <_svfprintf_r+0x1824>
400dd80c:	10c192        	addi	a9, a1, 16
400dd80f:	02d922        	addmi	a2, a9, 0x200
400dd812:	1a2232        	l32i	a3, a2, 104
400dd815:	537b      	addi.n	a5, a3, 7
400dd817:	837c      	movi.n	a3, -8
400dd819:	103530        	and	a3, a5, a3
400dd81c:	638b      	addi.n	a6, a3, 8
400dd81e:	1a6262        	s32i	a6, a2, 104
400dd821:	851c      	movi.n	a5, 24
400dd823:	062567        	blt	a5, a6, 400dd82d <_svfprintf_r+0x1515>
400dd826:	192232        	l32i	a3, a2, 100
400dd829:	0002c6        	j	400dd838 <_svfprintf_r+0x1520>
400dd82c:	253700        	extui	a3, a0, 23, 3
400dd82f:	832c04        	lsi	f0, a12, 0x20c
400dd832:	1a6232        	s32i	a3, a2, 104
400dd835:	9c2132        	l32i	a3, a1, 0x270
400dd838:	9e2122        	l32i	a2, a1, 0x278
400dd83b:	232a      	add.n	a2, a3, a2
400dd83d:	f8c222        	addi	a2, a2, -8
400dd840:	0258      	l32i.n	a5, a2, 0
400dd842:	1238      	l32i.n	a3, a2, 4
400dd844:	00bd06        	j	400ddb3c <_svfprintf_r+0x1824>
400dd847:	213200        	srai	a3, a0, 2
400dd84a:	061ca0        	lsi	f10, a12, 24
400dd84d:	106360        	and	a6, a3, a6
400dd850:	07d616        	beqz	a6, 400dd8d1 <_svfprintf_r+0x15b9>
400dd853:	972162        	l32i	a6, a1, 0x25c
400dd856:	e49c      	beqz.n	a4, 400dd878 <_svfprintf_r+0x1560>
400dd858:	08a267        	bge	a2, a6, 400dd864 <_svfprintf_r+0x154c>
400dd85b:	10c142        	addi	a4, a1, 16
400dd85e:	b02240        	addx8	a2, a2, a4
400dd861:	008a06        	j	400dda8d <_svfprintf_r+0x1775>
400dd864:	10c162        	addi	a6, a1, 16
400dd867:	48a232        	movi	a3, 0x248
400dd86a:	363a      	add.n	a3, a6, a3
400dd86c:	0139      	s32i.n	a3, a1, 0
400dd86e:	01d6f2        	addmi	a15, a6, 0x100
400dd871:	06ed      	mov.n	a14, a6
400dd873:	008b06        	j	400ddaa3 <_svfprintf_r+0x178b>
400dd876:	820000        	mull	a0, a0, a0
400dd879:	1b10c1        	l32r	a12, 400a44bc <_iram_end+0x16968>
400dd87c:	228047        	bany	a0, a4, 400dd8a2 <_svfprintf_r+0x158a>
400dd87f:	a767b0        	lsi	f11, a7, 0x29c
400dd882:	ac4602        	s8i	a0, a6, 172
400dd885:	f21c00        	rems	a1, a12, a0
400dd888:	3c2267        	blt	a2, a6, 400dd8c8 <_svfprintf_r+0x15b0>
400dd88b:	261b      	addi.n	a2, a6, 1
400dd88d:	10c192        	addi	a9, a1, 16
400dd890:	976122        	s32i	a2, a1, 0x25c
400dd893:	02d922        	addmi	a2, a9, 0x200
400dd896:	1a2232        	l32i	a3, a2, 104
400dd899:	851c      	movi.n	a5, 24
400dd89b:	734b      	addi.n	a7, a3, 4
400dd89d:	1a6272        	s32i	a7, a2, 104
400dd8a0:	052577        	blt	a5, a7, 400dd8a9 <_svfprintf_r+0x1591>
400dd8a3:	192222        	l32i	a2, a2, 100
400dd8a6:	000286        	j	400dd8b4 <_svfprintf_r+0x159c>
400dd8a9:	042537        	blt	a5, a3, 400dd8b1 <_svfprintf_r+0x1599>
400dd8ac:	432c      	movi.n	a3, 36
400dd8ae:	1a6232        	s32i	a3, a2, 104
400dd8b1:	9c2122        	l32i	a2, a1, 0x270
400dd8b4:	9e2132        	l32i	a3, a1, 0x278
400dd8b7:	10c1a2        	addi	a10, a1, 16
400dd8ba:	323a      	add.n	a3, a2, a3
400dd8bc:	fcc332        	addi	a3, a3, -4
400dd8bf:	0358      	l32i.n	a5, a3, 0
400dd8c1:	b026a0        	addx8	a2, a6, a10
400dd8c4:	008fc6        	j	400ddb07 <_svfprintf_r+0x17ef>
400dd8c7:	c1e200        	mul16u	a14, a2, a0
400dd8ca:	de2210        	f64iter	a2, a2, a1, 1, 1
400dd8cd:	900602        	l8ui	a0, a6, 144
400dd8d0:	218200        	srai	a8, a0, 2
400dd8d3:	034ca0        	lsi	f10, a12, 12
400dd8d6:	103830        	and	a3, a8, a3
400dd8d9:	0cf316        	beqz	a3, 400dd9ac <_svfprintf_r+0x1694>
400dd8dc:	972182        	l32i	a8, a1, 0x25c
400dd8df:	54bc      	beqz.n	a4, 400dd918 <_svfprintf_r+0x1600>
400dd8e1:	0ba287        	bge	a2, a8, 400dd8f0 <_svfprintf_r+0x15d8>
400dd8e4:	10c192        	addi	a9, a1, 16
400dd8e7:	b02290        	addx8	a2, a2, a9
400dd8ea:	001252        	l16ui	a5, a2, 0
400dd8ed:	000886        	j	400dd913 <_svfprintf_r+0x15fb>
400dd8f0:	10c1a2        	addi	a10, a1, 16
400dd8f3:	48a232        	movi	a3, 0x248
400dd8f6:	3a3a      	add.n	a3, a10, a3
400dd8f8:	4ca2d2        	movi	a13, 0x24c
400dd8fb:	60a2c2        	movi	a12, 0x260
400dd8fe:	01daf2        	addmi	a15, a10, 0x100
400dd901:	0aed      	mov.n	a14, a10
400dd903:	dada      	add.n	a13, a10, a13
400dd905:	caca      	add.n	a12, a10, a12
400dd907:	05bd      	mov.n	a11, a5
400dd909:	0139      	s32i.n	a3, a1, 0
400dd90b:	02ad      	mov.n	a10, a2
400dd90d:	fe58a5        	call8	400dbe98 <get_arg$isra$0>
400dd910:	001a52        	l16ui	a5, a10, 0
400dd913:	063d      	mov.n	a3, a6
400dd915:	008946        	j	400ddb3e <_svfprintf_r+0x1826>
400dd918:	671b      	addi.n	a6, a7, 1
400dd91a:	0da787        	bge	a7, a8, 400dd92b <_svfprintf_r+0x1613>
400dd91d:	10c1e2        	addi	a14, a1, 16
400dd920:	b022e0        	addx8	a2, a2, a14
400dd923:	001252        	l16ui	a5, a2, 0
400dd926:	043d      	mov.n	a3, a4
400dd928:	001e46        	j	400dd9a5 <_svfprintf_r+0x168d>
400dd92b:	f21c      	movi.n	a2, 31
400dd92d:	432287        	blt	a2, a8, 400dd974 <_svfprintf_r+0x165c>
400dd930:	281b      	addi.n	a2, a8, 1
400dd932:	10c132        	addi	a3, a1, 16
400dd935:	976122        	s32i	a2, a1, 0x25c
400dd938:	02d322        	addmi	a2, a3, 0x200
400dd93b:	1a2232        	l32i	a3, a2, 104
400dd93e:	841c      	movi.n	a4, 24
400dd940:	534b      	addi.n	a5, a3, 4
400dd942:	1a6252        	s32i	a5, a2, 104
400dd945:	072457        	blt	a4, a5, 400dd950 <_svfprintf_r+0x1638>
400dd948:	192222        	l32i	a2, a2, 100
400dd94b:	000306        	j	400dd95b <_svfprintf_r+0x1643>
400dd94e:	370000        	lsi	f0, a0, 220
400dd951:	2c0424        	lsi	f2, a4, 176
400dd954:	623243        	lsi	f4, a2, 0x188
400dd957:	221a      	add.n	a2, a2, a1
400dd959:	329c21        	l32r	a2, 400aa3cc <_iram_end+0x1c878>
400dd95c:	429e21        	l32r	a2, 400ae3d4 <_iram_end+0x20880>
400dd95f:	3a10c1        	l32r	a12, 400ac1a0 <_iram_end+0x1e64c>
400dd962:	c33232        	lsi	f3, a2, 0x30c
400dd965:	58fc      	bnez.n	a8, 400dd99e <_svfprintf_r+0x1686>
400dd967:	284003        	ssi	f0, a0, 160
400dd96a:	0259b0        	andb	b5, b9, b11
400dd96d:	f45050        	extui	a5, a5, 0, 16
400dd970:	000bc6        	j	400dd9a3 <_svfprintf_r+0x168b>
400dd973:	c15200        	mul16u	a5, a2, a0
400dd976:	d52210        	extui	a2, a1, 18, 14
400dd979:	223202        	lsi	f0, a2, 136
400dd97c:	1c1a      	add.n	a1, a12, a1
400dd97e:	534b84        	lsi	f8, a11, 0x14c
400dd981:	1a6252        	s32i	a5, a2, 104
400dd984:	052457        	blt	a4, a5, 400dd98d <_svfprintf_r+0x1675>
400dd987:	192232        	l32i	a3, a2, 100
400dd98a:	000286        	j	400dd998 <_svfprintf_r+0x1680>
400dd98d:	042437        	blt	a4, a3, 400dd995 <_svfprintf_r+0x167d>
400dd990:	432c      	movi.n	a3, 36
400dd992:	1a6232        	s32i	a3, a2, 104
400dd995:	9c2132        	l32i	a3, a1, 0x270
400dd998:	9e2122        	l32i	a2, a1, 0x278
400dd99b:	232a      	add.n	a2, a3, a2
400dd99d:	fcc222        	addi	a2, a2, -4
400dd9a0:	001252        	l16ui	a5, a2, 0
400dd9a3:	030c      	movi.n	a3, 0
400dd9a5:	067d      	mov.n	a7, a6
400dd9a7:	0064c6        	j	400ddb3e <_svfprintf_r+0x1826>
400dd9aa:	820000        	mull	a0, a0, a0
400dd9ad:	62a021        	l32r	a2, 400b6430 <_iram_end+0x288dc>
400dd9b0:	979721        	l32r	a2, 400c380c <_rtc_text_end+0x380c>
400dd9b3:	02e8      	l32i.n	a14, a2, 0
400dd9b5:	003246        	j	400dda82 <_svfprintf_r+0x176a>
400dd9b8:	44bc      	beqz.n	a4, 400dd9f0 <_svfprintf_r+0x16d8>
400dd9ba:	0ba267        	bge	a2, a6, 400dd9c9 <_svfprintf_r+0x16b1>
400dd9bd:	10c192        	addi	a9, a1, 16
400dd9c0:	b02290        	addx8	a2, a2, a9
400dd9c3:	000252        	l8ui	a5, a2, 0
400dd9c6:	005d06        	j	400ddb3e <_svfprintf_r+0x1826>
400dd9c9:	10c1a2        	addi	a10, a1, 16
400dd9cc:	48a242        	movi	a4, 0x248
400dd9cf:	4a4a      	add.n	a4, a10, a4
400dd9d1:	4ca2d2        	movi	a13, 0x24c
400dd9d4:	60a2c2        	movi	a12, 0x260
400dd9d7:	01daf2        	addmi	a15, a10, 0x100
400dd9da:	0aed      	mov.n	a14, a10
400dd9dc:	dada      	add.n	a13, a10, a13
400dd9de:	caca      	add.n	a12, a10, a12
400dd9e0:	05bd      	mov.n	a11, a5
400dd9e2:	0149      	s32i.n	a4, a1, 0
400dd9e4:	02ad      	mov.n	a10, a2
400dd9e6:	fe4b25        	call8	400dbe98 <get_arg$isra$0>
400dd9e9:	000a52        	l8ui	a5, a10, 0
400dd9ec:	005386        	j	400ddb3e <_svfprintf_r+0x1826>
400dd9ef:	871b00        	lsi	f0, a11, 0x21c
400dd9f2:	0ea767        	bge	a7, a6, 400dda04 <_svfprintf_r+0x16ec>
400dd9f5:	10c1e2        	addi	a14, a1, 16
400dd9f8:	b022e0        	addx8	a2, a2, a14
400dd9fb:	000252        	l8ui	a5, a2, 0
400dd9fe:	043d      	mov.n	a3, a4
400dda00:	001e46        	j	400dda7d <_svfprintf_r+0x1765>
400dda03:	f21c00        	rems	a1, a12, a0
400dda06:	422267        	blt	a2, a6, 400dda4c <_svfprintf_r+0x1734>
400dda09:	261b      	addi.n	a2, a6, 1
400dda0b:	10c132        	addi	a3, a1, 16
400dda0e:	976122        	s32i	a2, a1, 0x25c
400dda11:	02d322        	addmi	a2, a3, 0x200
400dda14:	1a2232        	l32i	a3, a2, 104
400dda17:	841c      	movi.n	a4, 24
400dda19:	534b      	addi.n	a5, a3, 4
400dda1b:	1a6252        	s32i	a5, a2, 104
400dda1e:	062457        	blt	a4, a5, 400dda28 <_svfprintf_r+0x1710>
400dda21:	192232        	l32i	a3, a2, 100
400dda24:	0002c6        	j	400dda33 <_svfprintf_r+0x171b>
400dda27:	243700        	extui	a3, a0, 7, 3
400dda2a:	432c04        	lsi	f0, a12, 0x10c
400dda2d:	1a6232        	s32i	a3, a2, 104
400dda30:	9c2132        	l32i	a3, a1, 0x270
400dda33:	9e2122        	l32i	a2, a1, 0x278
400dda36:	10c142        	addi	a4, a1, 16
400dda39:	232a      	add.n	a2, a3, a2
400dda3b:	fcc222        	addi	a2, a2, -4
400dda3e:	0258      	l32i.n	a5, a2, 0
400dda40:	b02640        	addx8	a2, a6, a4
400dda43:	0259      	s32i.n	a5, a2, 0
400dda45:	745050        	extui	a5, a5, 0, 8
400dda48:	000bc6        	j	400dda7b <_svfprintf_r+0x1763>
400dda4b:	c15200        	mul16u	a5, a2, a0
400dda4e:	d52210        	extui	a2, a1, 18, 14
400dda51:	223202        	lsi	f0, a2, 136
400dda54:	1c1a      	add.n	a1, a12, a1
400dda56:	534b84        	lsi	f8, a11, 0x14c
400dda59:	1a6252        	s32i	a5, a2, 104
400dda5c:	052457        	blt	a4, a5, 400dda65 <_svfprintf_r+0x174d>
400dda5f:	192232        	l32i	a3, a2, 100
400dda62:	000286        	j	400dda70 <_svfprintf_r+0x1758>
400dda65:	042437        	blt	a4, a3, 400dda6d <_svfprintf_r+0x1755>
400dda68:	432c      	movi.n	a3, 36
400dda6a:	1a6232        	s32i	a3, a2, 104
400dda6d:	9c2132        	l32i	a3, a1, 0x270
400dda70:	9e2122        	l32i	a2, a1, 0x278
400dda73:	232a      	add.n	a2, a3, a2
400dda75:	fcc222        	addi	a2, a2, -4
400dda78:	000252        	l8ui	a5, a2, 0
400dda7b:	030c      	movi.n	a3, 0
400dda7d:	087d      	mov.n	a7, a8
400dda7f:	002ec6        	j	400ddb3e <_svfprintf_r+0x1826>
400dda82:	64bc      	beqz.n	a4, 400ddabc <_svfprintf_r+0x17a4>
400dda84:	0ca267        	bge	a2, a6, 400dda94 <_svfprintf_r+0x177c>
400dda87:	10c162        	addi	a6, a1, 16
400dda8a:	b02260        	addx8	a2, a2, a6
400dda8d:	0258      	l32i.n	a5, a2, 0
400dda8f:	0008c6        	j	400ddab6 <_svfprintf_r+0x179e>
400dda92:	820000        	mull	a0, a0, a0
400dda95:	3210c1        	l32r	a12, 400aa2d8 <_iram_end+0x1c784>
400dda98:	3a48a2        	s8i	a10, a8, 58
400dda9b:	3938      	l32i.n	a3, a9, 12
400dda9d:	d8f201        	l32r	a0, 400d3e68 <String::reserve(unsigned int)+0x74>
400ddaa0:	08ed01        	l32r	a0, 4009fe54 <_iram_end+0x12300>
400ddaa3:	4ca2d2        	movi	a13, 0x24c
400ddaa6:	60a2c2        	movi	a12, 0x260
400ddaa9:	05bd      	mov.n	a11, a5
400ddaab:	deda      	add.n	a13, a14, a13
400ddaad:	ceca      	add.n	a12, a14, a12
400ddaaf:	02ad      	mov.n	a10, a2
400ddab1:	fe3e65        	call8	400dbe98 <get_arg$isra$0>
400ddab4:	0a58      	l32i.n	a5, a10, 0
400ddab6:	074d      	mov.n	a4, a7
400ddab8:	001f86        	j	400ddb3a <_svfprintf_r+0x1822>
400ddabb:	c19200        	mul16u	a9, a2, a0
400ddabe:	471b10        	lsi	f1, a11, 0x11c
400ddac1:	b02290        	addx8	a2, a2, a9
400ddac4:	702767        	blt	a7, a6, 400ddb38 <_svfprintf_r+0x1820>
400ddac7:	f21c      	movi.n	a2, 31
400ddac9:	3f2267        	blt	a2, a6, 400ddb0c <_svfprintf_r+0x17f4>
400ddacc:	261b      	addi.n	a2, a6, 1
400ddace:	10c1a2        	addi	a10, a1, 16
400ddad1:	976122        	s32i	a2, a1, 0x25c
400ddad4:	02da22        	addmi	a2, a10, 0x200
400ddad7:	1a2232        	l32i	a3, a2, 104
400ddada:	851c      	movi.n	a5, 24
400ddadc:	734b      	addi.n	a7, a3, 4
400ddade:	1a6272        	s32i	a7, a2, 104
400ddae1:	072577        	blt	a5, a7, 400ddaec <_svfprintf_r+0x17d4>
400ddae4:	192232        	l32i	a3, a2, 100
400ddae7:	000306        	j	400ddaf7 <_svfprintf_r+0x17df>
400ddaea:	370000        	lsi	f0, a0, 220
400ddaed:	2c0425        	call8	40109b30 <_etext+0x1d65f>
400ddaf0:	623243        	lsi	f4, a2, 0x188
400ddaf3:	321a      	add.n	a3, a2, a1
400ddaf5:	229c21        	l32r	a2, 400a6568 <_iram_end+0x18a14>
400ddaf8:	e29e21        	l32r	a2, 400d6570 <esp_dport_access_int_init+0x24>
400ddafb:	2a10c1        	l32r	a12, 400a833c <_iram_end+0x1a7e8>
400ddafe:	c22223        	lsi	f2, a2, 0x308
400ddb01:	58fc      	bnez.n	a8, 400ddb3a <_svfprintf_r+0x1822>
400ddb03:	26e002        	s32c1i	a0, a0, 152
400ddb06:	0259b0        	andb	b5, b9, b11
400ddb09:	000b46        	j	400ddb3a <_svfprintf_r+0x1822>
400ddb0c:	10c132        	addi	a3, a1, 16
400ddb0f:	02d322        	addmi	a2, a3, 0x200
400ddb12:	1a2232        	l32i	a3, a2, 104
400ddb15:	851c      	movi.n	a5, 24
400ddb17:	634b      	addi.n	a6, a3, 4
400ddb19:	1a6262        	s32i	a6, a2, 104
400ddb1c:	052567        	blt	a5, a6, 400ddb25 <_svfprintf_r+0x180d>
400ddb1f:	192232        	l32i	a3, a2, 100
400ddb22:	000286        	j	400ddb30 <_svfprintf_r+0x1818>
400ddb25:	042537        	blt	a5, a3, 400ddb2d <_svfprintf_r+0x1815>
400ddb28:	432c      	movi.n	a3, 36
400ddb2a:	1a6232        	s32i	a3, a2, 104
400ddb2d:	9c2132        	l32i	a3, a1, 0x270
400ddb30:	9e2122        	l32i	a2, a1, 0x278
400ddb33:	232a      	add.n	a2, a3, a2
400ddb35:	fcc222        	addi	a2, a2, -4
400ddb38:	0258      	l32i.n	a5, a2, 0
400ddb3a:	030c      	movi.n	a3, 0
400ddb3c:	047d      	mov.n	a7, a4
400ddb3e:	a02142        	l32i	a4, a1, 0x280
400ddb41:	ffab22        	movi	a2, 0xfffffbff
400ddb44:	104420        	and	a4, a4, a2
400ddb47:	a06142        	s32i	a4, a1, 0x280
400ddb4a:	020c      	movi.n	a2, 0
400ddb4c:	027c06        	j	400de540 <_svfprintf_r+0x2228>
400ddb4f:	620000        	lsi	f0, a0, 0x188
400ddb52:	bc9721        	l32r	a2, 400ccdb0 <_rtc_text_end+0xcdb0>
400ddb55:	a26744        	lsi	f4, a7, 0x288
400ddb58:	520a      	add.n	a5, a2, a0
400ddb5a:	5010c1        	l32r	a12, 400b1b9c <_iram_end+0x24048>
400ddb5d:	58b022        	l32ai	a2, a0, 0x160
400ddb60:	084602        	s8i	a0, a6, 8
400ddb63:	c16200        	mul16u	a6, a2, a0
400ddb66:	a23210        	muluh	a3, a2, a1
400ddb69:	3a48      	l32i.n	a4, a10, 12
400ddb6b:	a2d236        	entry	a2, 0x5168
400ddb6e:	c24c      	movi.n	a2, 76
400ddb70:	bd60a2        	s32i	a10, a0, 0x2f4
400ddb73:	013905        	call0	400def04 <_svfprintf_r+0x2bec>
400ddb76:	01d6f2        	addmi	a15, a6, 0x100
400ddb79:	06ed      	mov.n	a14, a6
400ddb7b:	d6da      	add.n	a13, a6, a13
400ddb7d:	c6ca      	add.n	a12, a6, a12
400ddb7f:	02ad      	mov.n	a10, a2
400ddb81:	fe3165        	call8	400dbe98 <get_arg$isra$0>
400ddb84:	0a58      	l32i.n	a5, a10, 0
400ddb86:	074d      	mov.n	a4, a7
400ddb88:	001f86        	j	400ddc0a <_svfprintf_r+0x18f2>
400ddb8b:	c18200        	mul16u	a8, a2, a0
400ddb8e:	471b10        	lsi	f1, a11, 0x11c
400ddb91:	b02280        	addx8	a2, a2, a8
400ddb94:	702767        	blt	a7, a6, 400ddc08 <_svfprintf_r+0x18f0>
400ddb97:	f21c      	movi.n	a2, 31
400ddb99:	3f2267        	blt	a2, a6, 400ddbdc <_svfprintf_r+0x18c4>
400ddb9c:	261b      	addi.n	a2, a6, 1
400ddb9e:	10c192        	addi	a9, a1, 16
400ddba1:	976122        	s32i	a2, a1, 0x25c
400ddba4:	02d922        	addmi	a2, a9, 0x200
400ddba7:	1a2232        	l32i	a3, a2, 104
400ddbaa:	851c      	movi.n	a5, 24
400ddbac:	734b      	addi.n	a7, a3, 4
400ddbae:	1a6272        	s32i	a7, a2, 104
400ddbb1:	072577        	blt	a5, a7, 400ddbbc <_svfprintf_r+0x18a4>
400ddbb4:	192222        	l32i	a2, a2, 100
400ddbb7:	000306        	j	400ddbc7 <_svfprintf_r+0x18af>
400ddbba:	370000        	lsi	f0, a0, 220
400ddbbd:	2c0425        	call8	40109c00 <_etext+0x1d72f>
400ddbc0:	623243        	lsi	f4, a2, 0x188
400ddbc3:	221a      	add.n	a2, a2, a1
400ddbc5:	329c21        	l32r	a2, 400aa638 <_iram_end+0x1cae4>
400ddbc8:	a29e21        	l32r	a2, 400c6640 <_rtc_text_end+0x6640>
400ddbcb:	3a10c1        	l32r	a12, 400ac40c <_iram_end+0x1e8b8>
400ddbce:	c33232        	lsi	f3, a2, 0x30c
400ddbd1:	58fc      	bnez.n	a8, 400ddc0a <_svfprintf_r+0x18f2>
400ddbd3:	26a003        	lsi	f0, a0, 152
400ddbd6:	0259b0        	andb	b5, b9, b11
400ddbd9:	000b46        	j	400ddc0a <_svfprintf_r+0x18f2>
400ddbdc:	10c1e2        	addi	a14, a1, 16
400ddbdf:	02de22        	addmi	a2, a14, 0x200
400ddbe2:	1a2232        	l32i	a3, a2, 104
400ddbe5:	851c      	movi.n	a5, 24
400ddbe7:	634b      	addi.n	a6, a3, 4
400ddbe9:	1a6262        	s32i	a6, a2, 104
400ddbec:	052567        	blt	a5, a6, 400ddbf5 <_svfprintf_r+0x18dd>
400ddbef:	192232        	l32i	a3, a2, 100
400ddbf2:	000286        	j	400ddc00 <_svfprintf_r+0x18e8>
400ddbf5:	042537        	blt	a5, a3, 400ddbfd <_svfprintf_r+0x18e5>
400ddbf8:	432c      	movi.n	a3, 36
400ddbfa:	1a6232        	s32i	a3, a2, 104
400ddbfd:	9c2132        	l32i	a3, a1, 0x270
400ddc00:	9e2122        	l32i	a2, a1, 0x278
400ddc03:	232a      	add.n	a2, a3, a2
400ddc05:	fcc222        	addi	a2, a2, -4
400ddc08:	0258      	l32i.n	a5, a2, 0
400ddc0a:	a02162        	l32i	a6, a1, 0x280
400ddc0d:	220c      	movi.n	a2, 2
400ddc0f:	206620        	or	a6, a6, a2
400ddc12:	10c182        	addi	a8, a1, 16
400ddc15:	073c      	movi.n	a7, 48
400ddc17:	a06162        	s32i	a6, a1, 0x280
400ddc1a:	02d862        	addmi	a6, a8, 0x200
400ddc1d:	504672        	s8i	a7, a6, 80
400ddc20:	cace91        	l32r	a9, 400d0758 <_flash_cache_start+0x740>
400ddc23:	78a072        	movi	a7, 120
400ddc26:	514672        	s8i	a7, a6, 81
400ddc29:	047d      	mov.n	a7, a4
400ddc2b:	78a042        	movi	a4, 120
400ddc2e:	030c      	movi.n	a3, 0
400ddc30:	b56192        	s32i	a9, a1, 0x2d4
400ddc33:	a66142        	s32i	a4, a1, 0x298
400ddc36:	024186        	j	400de540 <_svfprintf_r+0x2228>
400ddc39:	216200        	srai	a6, a0, 2
400ddc3c:	74bc97        	bgeu	a12, a9, 400ddcb4 <_svfprintf_r+0x199c>
400ddc3f:	0da267        	bge	a2, a6, 400ddc50 <_svfprintf_r+0x1938>
400ddc42:	10c152        	addi	a5, a1, 16
400ddc45:	b02250        	addx8	a2, a2, a5
400ddc48:	0228      	l32i.n	a2, a2, 0
400ddc4a:	a16122        	s32i	a2, a1, 0x284
400ddc4d:	002b86        	j	400ddcff <_svfprintf_r+0x19e7>
400ddc50:	10c162        	addi	a6, a1, 16
400ddc53:	48a232        	movi	a3, 0x248
400ddc56:	363a      	add.n	a3, a6, a3
400ddc58:	4ca2d2        	movi	a13, 0x24c
400ddc5b:	60a2c2        	movi	a12, 0x260
400ddc5e:	0139      	s32i.n	a3, a1, 0
400ddc60:	01d6f2        	addmi	a15, a6, 0x100
400ddc63:	06ed      	mov.n	a14, a6
400ddc65:	d6da      	add.n	a13, a6, a13
400ddc67:	c6ca      	add.n	a12, a6, a12
400ddc69:	05bd      	mov.n	a11, a5
400ddc6b:	02ad      	mov.n	a10, a2
400ddc6d:	fe22a5        	call8	400dbe98 <get_arg$isra$0>
400ddc70:	0aa8      	l32i.n	a10, a10, 0
400ddc72:	a161a2        	s32i	a10, a1, 0x284
400ddc75:	002186        	j	400ddcff <_svfprintf_r+0x19e7>
400ddc78:	10c182        	addi	a8, a1, 16
400ddc7b:	471b      	addi.n	a4, a7, 1
400ddc7d:	b02280        	addx8	a2, a2, a8
400ddc80:	742767        	blt	a7, a6, 400ddcf8 <_svfprintf_r+0x19e0>
400ddc83:	f21c      	movi.n	a2, 31
400ddc85:	432267        	blt	a2, a6, 400ddccc <_svfprintf_r+0x19b4>
400ddc88:	261b      	addi.n	a2, a6, 1
400ddc8a:	10c192        	addi	a9, a1, 16
400ddc8d:	976122        	s32i	a2, a1, 0x25c
400ddc90:	02d922        	addmi	a2, a9, 0x200
400ddc93:	1a2232        	l32i	a3, a2, 104
400ddc96:	851c      	movi.n	a5, 24
400ddc98:	734b      	addi.n	a7, a3, 4
400ddc9a:	1a6272        	s32i	a7, a2, 104
400ddc9d:	072577        	blt	a5, a7, 400ddca8 <_svfprintf_r+0x1990>
400ddca0:	192222        	l32i	a2, a2, 100
400ddca3:	000306        	j	400ddcb3 <_svfprintf_r+0x199b>
400ddca6:	370000        	lsi	f0, a0, 220
400ddca9:	2c0425        	call8	40109cec <_etext+0x1d81b>
400ddcac:	623243        	lsi	f4, a2, 0x188
400ddcaf:	221a      	add.n	a2, a2, a1
400ddcb1:	329c21        	l32r	a2, 400aa724 <_iram_end+0x1cbd0>
400ddcb4:	a29e21        	l32r	a2, 400c672c <_rtc_text_end+0x672c>
400ddcb7:	3a10c1        	l32r	a12, 400ac4f8 <_iram_end+0x1e9a4>
400ddcba:	c33232        	lsi	f3, a2, 0x30c
400ddcbd:	38fc      	bnez.n	a8, 400ddcf4 <_svfprintf_r+0x19dc>
400ddcbf:	26a003        	lsi	f0, a0, 152
400ddcc2:	6132b0        	lsi	f11, a2, 0x184
400ddcc5:	0239a1        	l32r	a10, 4009e5ac <_iram_end+0x10a58>
400ddcc8:	000c46        	j	400ddcfd <_svfprintf_r+0x19e5>
400ddccb:	c1e200        	mul16u	a14, a2, a0
400ddcce:	de2210        	f64iter	a2, a2, a1, 1, 1
400ddcd1:	223202        	lsi	f0, a2, 136
400ddcd4:	1c1a      	add.n	a1, a12, a1
400ddcd6:	634b85        	call0	40141190 <_etext+0x54cbf>
400ddcd9:	1a6262        	s32i	a6, a2, 104
400ddcdc:	052567        	blt	a5, a6, 400ddce5 <_svfprintf_r+0x19cd>
400ddcdf:	192232        	l32i	a3, a2, 100
400ddce2:	000286        	j	400ddcf0 <_svfprintf_r+0x19d8>
400ddce5:	042537        	blt	a5, a3, 400ddced <_svfprintf_r+0x19d5>
400ddce8:	432c      	movi.n	a3, 36
400ddcea:	1a6232        	s32i	a3, a2, 104
400ddced:	9c2132        	l32i	a3, a1, 0x270
400ddcf0:	9e2122        	l32i	a2, a1, 0x278
400ddcf3:	232a      	add.n	a2, a3, a2
400ddcf5:	fcc222        	addi	a2, a2, -4
400ddcf8:	0228      	l32i.n	a2, a2, 0
400ddcfa:	a16122        	s32i	a2, a1, 0x284
400ddcfd:	047d      	mov.n	a7, a4
400ddcff:	10c142        	addi	a4, a1, 16
400ddd02:	030c      	movi.n	a3, 0
400ddd04:	02d422        	addmi	a2, a4, 0x200
400ddd07:	a52152        	l32i	a5, a1, 0x294
400ddd0a:	524232        	s8i	a3, a2, 82
400ddd0d:	024596        	bltz	a5, 400ddd35 <_svfprintf_r+0x1a1d>
400ddd10:	a121a2        	l32i	a10, a1, 0x284
400ddd13:	05cd      	mov.n	a12, a5
400ddd15:	0b0c      	movi.n	a11, 0
400ddd17:	caa381        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400ddd1a:	0008e0        	callx8	a8
400ddd1d:	1acc      	bnez.n	a10, 400ddd22 <_svfprintf_r+0x1a0a>
400ddd1f:	029286        	j	400de76d <_svfprintf_r+0x2455>
400ddd22:	a12182        	l32i	a8, a1, 0x284
400ddd25:	090c      	movi.n	a9, 0
400ddd27:	c0aa80        	sub	a10, a10, a8
400ddd2a:	a561a2        	s32i	a10, a1, 0x294
400ddd2d:	a26192        	s32i	a9, a1, 0x288
400ddd30:	096d      	mov.n	a6, a9
400ddd32:	028f06        	j	400de772 <_svfprintf_r+0x245a>
400ddd35:	a121a2        	l32i	a10, a1, 0x284
400ddd38:	020c      	movi.n	a2, 0
400ddd3a:	c8d181        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400ddd3d:	0008e0        	callx8	a8
400ddd40:	a561a2        	s32i	a10, a1, 0x294
400ddd43:	a26122        	s32i	a2, a1, 0x288
400ddd46:	026d      	mov.n	a6, a2
400ddd48:	023d      	mov.n	a3, a2
400ddd4a:	025d      	mov.n	a5, a2
400ddd4c:	028a06        	j	400de778 <_svfprintf_r+0x2460>
400ddd4f:	a02162        	l32i	a6, a1, 0x280
400ddd52:	031c      	movi.n	a3, 16
400ddd54:	206630        	or	a6, a6, a3
400ddd57:	a06162        	s32i	a6, a1, 0x280
400ddd5a:	a02182        	l32i	a8, a1, 0x280
400ddd5d:	02e857        	bbsi	a8, 5, 400ddd63 <_svfprintf_r+0x1a4b>
400ddd60:	003506        	j	400dde38 <_svfprintf_r+0x1b20>
400ddd63:	972162        	l32i	a6, a1, 0x25c
400ddd66:	64bc      	beqz.n	a4, 400ddda0 <_svfprintf_r+0x1a88>
400ddd68:	0ca267        	bge	a2, a6, 400ddd78 <_svfprintf_r+0x1a60>
400ddd6b:	10c192        	addi	a9, a1, 16
400ddd6e:	b02290        	addx8	a2, a2, a9
400ddd71:	0258      	l32i.n	a5, a2, 0
400ddd73:	1238      	l32i.n	a3, a2, 4
400ddd75:	00ed46        	j	400de12e <_svfprintf_r+0x1e16>
400ddd78:	10c1a2        	addi	a10, a1, 16
400ddd7b:	48a232        	movi	a3, 0x248
400ddd7e:	3a3a      	add.n	a3, a10, a3
400ddd80:	4ca2d2        	movi	a13, 0x24c
400ddd83:	60a2c2        	movi	a12, 0x260
400ddd86:	0139      	s32i.n	a3, a1, 0
400ddd88:	01daf2        	addmi	a15, a10, 0x100
400ddd8b:	0aed      	mov.n	a14, a10
400ddd8d:	dada      	add.n	a13, a10, a13
400ddd8f:	caca      	add.n	a12, a10, a12
400ddd91:	05bd      	mov.n	a11, a5
400ddd93:	02ad      	mov.n	a10, a2
400ddd95:	fe1025        	call8	400dbe98 <get_arg$isra$0>
400ddd98:	0a58      	l32i.n	a5, a10, 0
400ddd9a:	1a38      	l32i.n	a3, a10, 4
400ddd9c:	00e386        	j	400de12e <_svfprintf_r+0x1e16>
400ddd9f:	c1e200        	mul16u	a14, a2, a0
400ddda2:	471b10        	lsi	f1, a11, 0x11c
400ddda5:	b022e0        	addx8	a2, a2, a14
400ddda8:	02a767        	bge	a7, a6, 400dddae <_svfprintf_r+0x1a96>
400dddab:	002046        	j	400dde30 <_svfprintf_r+0x1b18>
400dddae:	f21c      	movi.n	a2, 31
400dddb0:	482267        	blt	a2, a6, 400dddfc <_svfprintf_r+0x1ae4>
400dddb3:	261b      	addi.n	a2, a6, 1
400dddb5:	10c132        	addi	a3, a1, 16
400dddb8:	976122        	s32i	a2, a1, 0x25c
400dddbb:	02d322        	addmi	a2, a3, 0x200
400dddbe:	1a2232        	l32i	a3, a2, 104
400dddc1:	537b      	addi.n	a5, a3, 7
400dddc3:	837c      	movi.n	a3, -8
400dddc5:	103530        	and	a3, a5, a3
400dddc8:	738b      	addi.n	a7, a3, 8
400dddca:	1a6272        	s32i	a7, a2, 104
400dddcd:	851c      	movi.n	a5, 24
400dddcf:	052577        	blt	a5, a7, 400dddd8 <_svfprintf_r+0x1ac0>
400dddd2:	192232        	l32i	a3, a2, 100
400dddd5:	000286        	j	400ddde3 <_svfprintf_r+0x1acb>
400dddd8:	042537        	blt	a5, a3, 400ddde0 <_svfprintf_r+0x1ac8>
400ddddb:	832c      	movi.n	a3, 40
400ddddd:	1a6232        	s32i	a3, a2, 104
400ddde0:	9c2132        	l32i	a3, a1, 0x270
400ddde3:	9e2122        	l32i	a2, a1, 0x278
400ddde6:	10c182        	addi	a8, a1, 16
400ddde9:	232a      	add.n	a2, a3, a2
400dddeb:	f8c222        	addi	a2, a2, -8
400dddee:	0258      	l32i.n	a5, a2, 0
400dddf0:	1238      	l32i.n	a3, a2, 4
400dddf2:	b02680        	addx8	a2, a6, a8
400dddf5:	0259      	s32i.n	a5, a2, 0
400dddf7:	1239      	s32i.n	a3, a2, 4
400dddf9:	00cbc6        	j	400de12c <_svfprintf_r+0x1e14>
400dddfc:	10c192        	addi	a9, a1, 16
400dddff:	02d922        	addmi	a2, a9, 0x200
400dde02:	1a2232        	l32i	a3, a2, 104
400dde05:	537b      	addi.n	a5, a3, 7
400dde07:	837c      	movi.n	a3, -8
400dde09:	103530        	and	a3, a5, a3
400dde0c:	638b      	addi.n	a6, a3, 8
400dde0e:	1a6262        	s32i	a6, a2, 104
400dde11:	851c      	movi.n	a5, 24
400dde13:	062567        	blt	a5, a6, 400dde1d <_svfprintf_r+0x1b05>
400dde16:	192232        	l32i	a3, a2, 100
400dde19:	0002c6        	j	400dde28 <_svfprintf_r+0x1b10>
400dde1c:	253700        	extui	a3, a0, 23, 3
400dde1f:	832c04        	lsi	f0, a12, 0x20c
400dde22:	1a6232        	s32i	a3, a2, 104
400dde25:	9c2132        	l32i	a3, a1, 0x270
400dde28:	9e2122        	l32i	a2, a1, 0x278
400dde2b:	232a      	add.n	a2, a3, a2
400dde2d:	f8c222        	addi	a2, a2, -8
400dde30:	0258      	l32i.n	a5, a2, 0
400dde32:	1238      	l32i.n	a3, a2, 4
400dde34:	00bd06        	j	400de12c <_svfprintf_r+0x1e14>
400dde37:	218200        	srai	a8, a0, 2
400dde3a:	031ca0        	lsi	f10, a12, 12
400dde3d:	106830        	and	a6, a8, a3
400dde40:	07d616        	beqz	a6, 400ddec1 <_svfprintf_r+0x1ba9>
400dde43:	972162        	l32i	a6, a1, 0x25c
400dde46:	e49c      	beqz.n	a4, 400dde68 <_svfprintf_r+0x1b50>
400dde48:	08a267        	bge	a2, a6, 400dde54 <_svfprintf_r+0x1b3c>
400dde4b:	913a      	add.n	a9, a1, a3
400dde4d:	b02290        	addx8	a2, a2, a9
400dde50:	008a46        	j	400de07d <_svfprintf_r+0x1d65>
400dde53:	c1a200        	mul16u	a10, a2, a0
400dde56:	a23210        	muluh	a3, a2, a1
400dde59:	3a48      	l32i.n	a4, a10, 12
400dde5b:	393a      	add.n	a3, a9, a3
400dde5d:	daf201        	l32r	a0, 400d4a28 <frame_downheap+0x48>
400dde60:	0aed01        	l32r	a0, 400a0a14 <_iram_end+0x12ec0>
400dde63:	008b06        	j	400de093 <_svfprintf_r+0x1d7b>
400dde66:	e20000        	remu	a0, a0, a0
400dde69:	1b10c1        	l32r	a12, 400a4aac <_iram_end+0x16f58>
400dde6c:	22e047        	bbsi	a0, 4, 400dde92 <_svfprintf_r+0x1b7a>
400dde6f:	a767b0        	lsi	f11, a7, 0x29c
400dde72:	ac4602        	s8i	a0, a6, 172
400dde75:	f21c00        	rems	a1, a12, a0
400dde78:	3c2267        	blt	a2, a6, 400ddeb8 <_svfprintf_r+0x1ba0>
400dde7b:	261b      	addi.n	a2, a6, 1
400dde7d:	10c132        	addi	a3, a1, 16
400dde80:	976122        	s32i	a2, a1, 0x25c
400dde83:	02d322        	addmi	a2, a3, 0x200
400dde86:	1a2232        	l32i	a3, a2, 104
400dde89:	851c      	movi.n	a5, 24
400dde8b:	734b      	addi.n	a7, a3, 4
400dde8d:	1a6272        	s32i	a7, a2, 104
400dde90:	052577        	blt	a5, a7, 400dde99 <_svfprintf_r+0x1b81>
400dde93:	192222        	l32i	a2, a2, 100
400dde96:	000286        	j	400ddea4 <_svfprintf_r+0x1b8c>
400dde99:	042537        	blt	a5, a3, 400ddea1 <_svfprintf_r+0x1b89>
400dde9c:	432c      	movi.n	a3, 36
400dde9e:	1a6232        	s32i	a3, a2, 104
400ddea1:	9c2122        	l32i	a2, a1, 0x270
400ddea4:	9e2132        	l32i	a3, a1, 0x278
400ddea7:	10c182        	addi	a8, a1, 16
400ddeaa:	323a      	add.n	a3, a2, a3
400ddeac:	fcc332        	addi	a3, a3, -4
400ddeaf:	0358      	l32i.n	a5, a3, 0
400ddeb1:	b02680        	addx8	a2, a6, a8
400ddeb4:	008fc6        	j	400de0f7 <_svfprintf_r+0x1ddf>
400ddeb7:	c19200        	mul16u	a9, a2, a0
400ddeba:	d92210        	lsi	f1, a2, 0x364
400ddebd:	900602        	l8ui	a0, a6, 144
400ddec0:	218200        	srai	a8, a0, 2
400ddec3:	034ca0        	lsi	f10, a12, 12
400ddec6:	103830        	and	a3, a8, a3
400ddec9:	0cf316        	beqz	a3, 400ddf9c <_svfprintf_r+0x1c84>
400ddecc:	972182        	l32i	a8, a1, 0x25c
400ddecf:	54bc      	beqz.n	a4, 400ddf08 <_svfprintf_r+0x1bf0>
400dded1:	0ba287        	bge	a2, a8, 400ddee0 <_svfprintf_r+0x1bc8>
400dded4:	10c192        	addi	a9, a1, 16
400dded7:	b02290        	addx8	a2, a2, a9
400ddeda:	001252        	l16ui	a5, a2, 0
400ddedd:	000886        	j	400ddf03 <_svfprintf_r+0x1beb>
400ddee0:	10c1a2        	addi	a10, a1, 16
400ddee3:	48a232        	movi	a3, 0x248
400ddee6:	3a3a      	add.n	a3, a10, a3
400ddee8:	4ca2d2        	movi	a13, 0x24c
400ddeeb:	60a2c2        	movi	a12, 0x260
400ddeee:	01daf2        	addmi	a15, a10, 0x100
400ddef1:	0aed      	mov.n	a14, a10
400ddef3:	dada      	add.n	a13, a10, a13
400ddef5:	caca      	add.n	a12, a10, a12
400ddef7:	05bd      	mov.n	a11, a5
400ddef9:	0139      	s32i.n	a3, a1, 0
400ddefb:	02ad      	mov.n	a10, a2
400ddefd:	fdf9a5        	call8	400dbe98 <get_arg$isra$0>
400ddf00:	001a52        	l16ui	a5, a10, 0
400ddf03:	063d      	mov.n	a3, a6
400ddf05:	008946        	j	400de12e <_svfprintf_r+0x1e16>
400ddf08:	671b      	addi.n	a6, a7, 1
400ddf0a:	0da787        	bge	a7, a8, 400ddf1b <_svfprintf_r+0x1c03>
400ddf0d:	10c1e2        	addi	a14, a1, 16
400ddf10:	b022e0        	addx8	a2, a2, a14
400ddf13:	001252        	l16ui	a5, a2, 0
400ddf16:	043d      	mov.n	a3, a4
400ddf18:	001e46        	j	400ddf95 <_svfprintf_r+0x1c7d>
400ddf1b:	f21c      	movi.n	a2, 31
400ddf1d:	432287        	blt	a2, a8, 400ddf64 <_svfprintf_r+0x1c4c>
400ddf20:	281b      	addi.n	a2, a8, 1
400ddf22:	10c132        	addi	a3, a1, 16
400ddf25:	976122        	s32i	a2, a1, 0x25c
400ddf28:	02d322        	addmi	a2, a3, 0x200
400ddf2b:	1a2232        	l32i	a3, a2, 104
400ddf2e:	841c      	movi.n	a4, 24
400ddf30:	534b      	addi.n	a5, a3, 4
400ddf32:	1a6252        	s32i	a5, a2, 104
400ddf35:	072457        	blt	a4, a5, 400ddf40 <_svfprintf_r+0x1c28>
400ddf38:	192222        	l32i	a2, a2, 100
400ddf3b:	000306        	j	400ddf4b <_svfprintf_r+0x1c33>
400ddf3e:	370000        	lsi	f0, a0, 220
400ddf41:	2c0424        	lsi	f2, a4, 176
400ddf44:	623243        	lsi	f4, a2, 0x188
400ddf47:	221a      	add.n	a2, a2, a1
400ddf49:	329c21        	l32r	a2, 400aa9bc <_iram_end+0x1ce68>
400ddf4c:	429e21        	l32r	a2, 400ae9c4 <_iram_end+0x20e70>
400ddf4f:	3a10c1        	l32r	a12, 400ac790 <_iram_end+0x1ec3c>
400ddf52:	c33232        	lsi	f3, a2, 0x30c
400ddf55:	58fc      	bnez.n	a8, 400ddf8e <_svfprintf_r+0x1c76>
400ddf57:	284003        	ssi	f0, a0, 160
400ddf5a:	0259b0        	andb	b5, b9, b11
400ddf5d:	f45050        	extui	a5, a5, 0, 16
400ddf60:	000bc6        	j	400ddf93 <_svfprintf_r+0x1c7b>
400ddf63:	c15200        	mul16u	a5, a2, a0
400ddf66:	d52210        	extui	a2, a1, 18, 14
400ddf69:	223202        	lsi	f0, a2, 136
400ddf6c:	1c1a      	add.n	a1, a12, a1
400ddf6e:	534b84        	lsi	f8, a11, 0x14c
400ddf71:	1a6252        	s32i	a5, a2, 104
400ddf74:	052457        	blt	a4, a5, 400ddf7d <_svfprintf_r+0x1c65>
400ddf77:	192232        	l32i	a3, a2, 100
400ddf7a:	000286        	j	400ddf88 <_svfprintf_r+0x1c70>
400ddf7d:	042437        	blt	a4, a3, 400ddf85 <_svfprintf_r+0x1c6d>
400ddf80:	432c      	movi.n	a3, 36
400ddf82:	1a6232        	s32i	a3, a2, 104
400ddf85:	9c2132        	l32i	a3, a1, 0x270
400ddf88:	9e2122        	l32i	a2, a1, 0x278
400ddf8b:	232a      	add.n	a2, a3, a2
400ddf8d:	fcc222        	addi	a2, a2, -4
400ddf90:	001252        	l16ui	a5, a2, 0
400ddf93:	030c      	movi.n	a3, 0
400ddf95:	067d      	mov.n	a7, a6
400ddf97:	0064c6        	j	400de12e <_svfprintf_r+0x1e16>
400ddf9a:	820000        	mull	a0, a0, a0
400ddf9d:	62a021        	l32r	a2, 400b6a20 <_iram_end+0x28ecc>
400ddfa0:	979721        	l32r	a2, 400c3dfc <_rtc_text_end+0x3dfc>
400ddfa3:	02e8      	l32i.n	a14, a2, 0
400ddfa5:	003246        	j	400de072 <_svfprintf_r+0x1d5a>
400ddfa8:	44bc      	beqz.n	a4, 400ddfe0 <_svfprintf_r+0x1cc8>
400ddfaa:	0ba267        	bge	a2, a6, 400ddfb9 <_svfprintf_r+0x1ca1>
400ddfad:	10c192        	addi	a9, a1, 16
400ddfb0:	b02290        	addx8	a2, a2, a9
400ddfb3:	000252        	l8ui	a5, a2, 0
400ddfb6:	005d06        	j	400de12e <_svfprintf_r+0x1e16>
400ddfb9:	10c1a2        	addi	a10, a1, 16
400ddfbc:	48a242        	movi	a4, 0x248
400ddfbf:	4a4a      	add.n	a4, a10, a4
400ddfc1:	4ca2d2        	movi	a13, 0x24c
400ddfc4:	60a2c2        	movi	a12, 0x260
400ddfc7:	01daf2        	addmi	a15, a10, 0x100
400ddfca:	0aed      	mov.n	a14, a10
400ddfcc:	dada      	add.n	a13, a10, a13
400ddfce:	caca      	add.n	a12, a10, a12
400ddfd0:	05bd      	mov.n	a11, a5
400ddfd2:	0149      	s32i.n	a4, a1, 0
400ddfd4:	02ad      	mov.n	a10, a2
400ddfd6:	fdec25        	call8	400dbe98 <get_arg$isra$0>
400ddfd9:	000a52        	l8ui	a5, a10, 0
400ddfdc:	005386        	j	400de12e <_svfprintf_r+0x1e16>
400ddfdf:	871b00        	lsi	f0, a11, 0x21c
400ddfe2:	0ea767        	bge	a7, a6, 400ddff4 <_svfprintf_r+0x1cdc>
400ddfe5:	10c1e2        	addi	a14, a1, 16
400ddfe8:	b022e0        	addx8	a2, a2, a14
400ddfeb:	000252        	l8ui	a5, a2, 0
400ddfee:	043d      	mov.n	a3, a4
400ddff0:	001e46        	j	400de06d <_svfprintf_r+0x1d55>
400ddff3:	f21c00        	rems	a1, a12, a0
400ddff6:	422267        	blt	a2, a6, 400de03c <_svfprintf_r+0x1d24>
400ddff9:	261b      	addi.n	a2, a6, 1
400ddffb:	10c132        	addi	a3, a1, 16
400ddffe:	976122        	s32i	a2, a1, 0x25c
400de001:	02d322        	addmi	a2, a3, 0x200
400de004:	1a2232        	l32i	a3, a2, 104
400de007:	841c      	movi.n	a4, 24
400de009:	534b      	addi.n	a5, a3, 4
400de00b:	1a6252        	s32i	a5, a2, 104
400de00e:	062457        	blt	a4, a5, 400de018 <_svfprintf_r+0x1d00>
400de011:	192232        	l32i	a3, a2, 100
400de014:	0002c6        	j	400de023 <_svfprintf_r+0x1d0b>
400de017:	243700        	extui	a3, a0, 7, 3
400de01a:	432c04        	lsi	f0, a12, 0x10c
400de01d:	1a6232        	s32i	a3, a2, 104
400de020:	9c2132        	l32i	a3, a1, 0x270
400de023:	9e2122        	l32i	a2, a1, 0x278
400de026:	10c142        	addi	a4, a1, 16
400de029:	232a      	add.n	a2, a3, a2
400de02b:	fcc222        	addi	a2, a2, -4
400de02e:	0258      	l32i.n	a5, a2, 0
400de030:	b02640        	addx8	a2, a6, a4
400de033:	0259      	s32i.n	a5, a2, 0
400de035:	745050        	extui	a5, a5, 0, 8
400de038:	000bc6        	j	400de06b <_svfprintf_r+0x1d53>
400de03b:	c15200        	mul16u	a5, a2, a0
400de03e:	d52210        	extui	a2, a1, 18, 14
400de041:	223202        	lsi	f0, a2, 136
400de044:	1c1a      	add.n	a1, a12, a1
400de046:	534b84        	lsi	f8, a11, 0x14c
400de049:	1a6252        	s32i	a5, a2, 104
400de04c:	052457        	blt	a4, a5, 400de055 <_svfprintf_r+0x1d3d>
400de04f:	192232        	l32i	a3, a2, 100
400de052:	000286        	j	400de060 <_svfprintf_r+0x1d48>
400de055:	042437        	blt	a4, a3, 400de05d <_svfprintf_r+0x1d45>
400de058:	432c      	movi.n	a3, 36
400de05a:	1a6232        	s32i	a3, a2, 104
400de05d:	9c2132        	l32i	a3, a1, 0x270
400de060:	9e2122        	l32i	a2, a1, 0x278
400de063:	232a      	add.n	a2, a3, a2
400de065:	fcc222        	addi	a2, a2, -4
400de068:	000252        	l8ui	a5, a2, 0
400de06b:	030c      	movi.n	a3, 0
400de06d:	087d      	mov.n	a7, a8
400de06f:	002ec6        	j	400de12e <_svfprintf_r+0x1e16>
400de072:	64bc      	beqz.n	a4, 400de0ac <_svfprintf_r+0x1d94>
400de074:	0ca267        	bge	a2, a6, 400de084 <_svfprintf_r+0x1d6c>
400de077:	10c162        	addi	a6, a1, 16
400de07a:	b02260        	addx8	a2, a2, a6
400de07d:	0258      	l32i.n	a5, a2, 0
400de07f:	0008c6        	j	400de0a6 <_svfprintf_r+0x1d8e>
400de082:	820000        	mull	a0, a0, a0
400de085:	3210c1        	l32r	a12, 400aa8c8 <_iram_end+0x1cd74>
400de088:	3a48a2        	s8i	a10, a8, 58
400de08b:	3938      	l32i.n	a3, a9, 12
400de08d:	d8f201        	l32r	a0, 400d4458 <uw_frame_state_for+0x80>
400de090:	08ed01        	l32r	a0, 400a0444 <_iram_end+0x128f0>
400de093:	4ca2d2        	movi	a13, 0x24c
400de096:	60a2c2        	movi	a12, 0x260
400de099:	05bd      	mov.n	a11, a5
400de09b:	deda      	add.n	a13, a14, a13
400de09d:	ceca      	add.n	a12, a14, a12
400de09f:	02ad      	mov.n	a10, a2
400de0a1:	fddf65        	call8	400dbe98 <get_arg$isra$0>
400de0a4:	0a58      	l32i.n	a5, a10, 0
400de0a6:	074d      	mov.n	a4, a7
400de0a8:	001f86        	j	400de12a <_svfprintf_r+0x1e12>
400de0ab:	c19200        	mul16u	a9, a2, a0
400de0ae:	471b10        	lsi	f1, a11, 0x11c
400de0b1:	b02290        	addx8	a2, a2, a9
400de0b4:	702767        	blt	a7, a6, 400de128 <_svfprintf_r+0x1e10>
400de0b7:	f21c      	movi.n	a2, 31
400de0b9:	3f2267        	blt	a2, a6, 400de0fc <_svfprintf_r+0x1de4>
400de0bc:	261b      	addi.n	a2, a6, 1
400de0be:	10c1a2        	addi	a10, a1, 16
400de0c1:	976122        	s32i	a2, a1, 0x25c
400de0c4:	02da22        	addmi	a2, a10, 0x200
400de0c7:	1a2232        	l32i	a3, a2, 104
400de0ca:	851c      	movi.n	a5, 24
400de0cc:	734b      	addi.n	a7, a3, 4
400de0ce:	1a6272        	s32i	a7, a2, 104
400de0d1:	072577        	blt	a5, a7, 400de0dc <_svfprintf_r+0x1dc4>
400de0d4:	192232        	l32i	a3, a2, 100
400de0d7:	000306        	j	400de0e7 <_svfprintf_r+0x1dcf>
400de0da:	370000        	lsi	f0, a0, 220
400de0dd:	2c0425        	call8	4010a120 <_etext+0x1dc4f>
400de0e0:	623243        	lsi	f4, a2, 0x188
400de0e3:	321a      	add.n	a3, a2, a1
400de0e5:	229c21        	l32r	a2, 400a6b58 <_iram_end+0x19004>
400de0e8:	e29e21        	l32r	a2, 400d6b60 <esp_dbg_stubs_init+0x30>
400de0eb:	2a10c1        	l32r	a12, 400a892c <_iram_end+0x1add8>
400de0ee:	c22223        	lsi	f2, a2, 0x308
400de0f1:	58fc      	bnez.n	a8, 400de12a <_svfprintf_r+0x1e12>
400de0f3:	26e002        	s32c1i	a0, a0, 152
400de0f6:	0259b0        	andb	b5, b9, b11
400de0f9:	000b46        	j	400de12a <_svfprintf_r+0x1e12>
400de0fc:	10c132        	addi	a3, a1, 16
400de0ff:	02d322        	addmi	a2, a3, 0x200
400de102:	1a2232        	l32i	a3, a2, 104
400de105:	851c      	movi.n	a5, 24
400de107:	634b      	addi.n	a6, a3, 4
400de109:	1a6262        	s32i	a6, a2, 104
400de10c:	052567        	blt	a5, a6, 400de115 <_svfprintf_r+0x1dfd>
400de10f:	192232        	l32i	a3, a2, 100
400de112:	000286        	j	400de120 <_svfprintf_r+0x1e08>
400de115:	042537        	blt	a5, a3, 400de11d <_svfprintf_r+0x1e05>
400de118:	432c      	movi.n	a3, 36
400de11a:	1a6232        	s32i	a3, a2, 104
400de11d:	9c2132        	l32i	a3, a1, 0x270
400de120:	9e2122        	l32i	a2, a1, 0x278
400de123:	232a      	add.n	a2, a3, a2
400de125:	fcc222        	addi	a2, a2, -4
400de128:	0258      	l32i.n	a5, a2, 0
400de12a:	030c      	movi.n	a3, 0
400de12c:	047d      	mov.n	a7, a4
400de12e:	120c      	movi.n	a2, 1
400de130:	010306        	j	400de540 <_svfprintf_r+0x2228>
400de133:	896100        	lsi	f0, a1, 0x224
400de136:	62c9      	s32i.n	a12, a2, 24
400de138:	82b561        	l32r	a6, 400bec0c <_iram_end+0x310b8>
400de13b:	57a021        	l32r	a2, 400b3fbc <_iram_end+0x26468>
400de13e:	02e8      	l32i.n	a14, a2, 0
400de140:	003506        	j	400de218 <_svfprintf_r+0x1f00>
400de143:	972162        	l32i	a6, a1, 0x25c
400de146:	64bc      	beqz.n	a4, 400de180 <_svfprintf_r+0x1e68>
400de148:	0ca267        	bge	a2, a6, 400de158 <_svfprintf_r+0x1e40>
400de14b:	10c192        	addi	a9, a1, 16
400de14e:	b02290        	addx8	a2, a2, a9
400de151:	0258      	l32i.n	a5, a2, 0
400de153:	1238      	l32i.n	a3, a2, 4
400de155:	00ec46        	j	400de50a <_svfprintf_r+0x21f2>
400de158:	10c1a2        	addi	a10, a1, 16
400de15b:	48a232        	movi	a3, 0x248
400de15e:	3a3a      	add.n	a3, a10, a3
400de160:	4ca2d2        	movi	a13, 0x24c
400de163:	60a2c2        	movi	a12, 0x260
400de166:	0139      	s32i.n	a3, a1, 0
400de168:	01daf2        	addmi	a15, a10, 0x100
400de16b:	0aed      	mov.n	a14, a10
400de16d:	dada      	add.n	a13, a10, a13
400de16f:	caca      	add.n	a12, a10, a12
400de171:	05bd      	mov.n	a11, a5
400de173:	02ad      	mov.n	a10, a2
400de175:	fdd225        	call8	400dbe98 <get_arg$isra$0>
400de178:	0a58      	l32i.n	a5, a10, 0
400de17a:	1a38      	l32i.n	a3, a10, 4
400de17c:	00e286        	j	400de50a <_svfprintf_r+0x21f2>
400de17f:	c1e200        	mul16u	a14, a2, a0
400de182:	471b10        	lsi	f1, a11, 0x11c
400de185:	b022e0        	addx8	a2, a2, a14
400de188:	02a767        	bge	a7, a6, 400de18e <_svfprintf_r+0x1e76>
400de18b:	002046        	j	400de210 <_svfprintf_r+0x1ef8>
400de18e:	f21c      	movi.n	a2, 31
400de190:	482267        	blt	a2, a6, 400de1dc <_svfprintf_r+0x1ec4>
400de193:	261b      	addi.n	a2, a6, 1
400de195:	10c132        	addi	a3, a1, 16
400de198:	976122        	s32i	a2, a1, 0x25c
400de19b:	02d322        	addmi	a2, a3, 0x200
400de19e:	1a2232        	l32i	a3, a2, 104
400de1a1:	537b      	addi.n	a5, a3, 7
400de1a3:	837c      	movi.n	a3, -8
400de1a5:	103530        	and	a3, a5, a3
400de1a8:	738b      	addi.n	a7, a3, 8
400de1aa:	1a6272        	s32i	a7, a2, 104
400de1ad:	851c      	movi.n	a5, 24
400de1af:	052577        	blt	a5, a7, 400de1b8 <_svfprintf_r+0x1ea0>
400de1b2:	192232        	l32i	a3, a2, 100
400de1b5:	000286        	j	400de1c3 <_svfprintf_r+0x1eab>
400de1b8:	042537        	blt	a5, a3, 400de1c0 <_svfprintf_r+0x1ea8>
400de1bb:	832c      	movi.n	a3, 40
400de1bd:	1a6232        	s32i	a3, a2, 104
400de1c0:	9c2132        	l32i	a3, a1, 0x270
400de1c3:	9e2122        	l32i	a2, a1, 0x278
400de1c6:	10c182        	addi	a8, a1, 16
400de1c9:	232a      	add.n	a2, a3, a2
400de1cb:	f8c222        	addi	a2, a2, -8
400de1ce:	0258      	l32i.n	a5, a2, 0
400de1d0:	1238      	l32i.n	a3, a2, 4
400de1d2:	b02680        	addx8	a2, a6, a8
400de1d5:	0259      	s32i.n	a5, a2, 0
400de1d7:	1239      	s32i.n	a3, a2, 4
400de1d9:	00cac6        	j	400de508 <_svfprintf_r+0x21f0>
400de1dc:	10c192        	addi	a9, a1, 16
400de1df:	02d922        	addmi	a2, a9, 0x200
400de1e2:	1a2232        	l32i	a3, a2, 104
400de1e5:	537b      	addi.n	a5, a3, 7
400de1e7:	837c      	movi.n	a3, -8
400de1e9:	103530        	and	a3, a5, a3
400de1ec:	638b      	addi.n	a6, a3, 8
400de1ee:	1a6262        	s32i	a6, a2, 104
400de1f1:	851c      	movi.n	a5, 24
400de1f3:	052567        	blt	a5, a6, 400de1fc <_svfprintf_r+0x1ee4>
400de1f6:	192232        	l32i	a3, a2, 100
400de1f9:	0002c6        	j	400de208 <_svfprintf_r+0x1ef0>
400de1fc:	052537        	blt	a5, a3, 400de205 <_svfprintf_r+0x1eed>
400de1ff:	28a032        	movi	a3, 40
400de202:	1a6232        	s32i	a3, a2, 104
400de205:	9c2132        	l32i	a3, a1, 0x270
400de208:	9e2122        	l32i	a2, a1, 0x278
400de20b:	232a      	add.n	a2, a3, a2
400de20d:	f8c222        	addi	a2, a2, -8
400de210:	0258      	l32i.n	a5, a2, 0
400de212:	1238      	l32i.n	a3, a2, 4
400de214:	00bc06        	j	400de508 <_svfprintf_r+0x21f0>
400de217:	218200        	srai	a8, a0, 2
400de21a:	031ca0        	lsi	f10, a12, 12
400de21d:	106830        	and	a6, a8, a3
400de220:	07d616        	beqz	a6, 400de2a1 <_svfprintf_r+0x1f89>
400de223:	972162        	l32i	a6, a1, 0x25c
400de226:	e49c      	beqz.n	a4, 400de248 <_svfprintf_r+0x1f30>
400de228:	08a267        	bge	a2, a6, 400de234 <_svfprintf_r+0x1f1c>
400de22b:	913a      	add.n	a9, a1, a3
400de22d:	b02290        	addx8	a2, a2, a9
400de230:	008946        	j	400de459 <_svfprintf_r+0x2141>
400de233:	c1a200        	mul16u	a10, a2, a0
400de236:	a23210        	muluh	a3, a2, a1
400de239:	3a48      	l32i.n	a4, a10, 12
400de23b:	393a      	add.n	a3, a9, a3
400de23d:	daf201        	l32r	a0, 400d4e08 <linear_search_fdes+0x28>
400de240:	0aed01        	l32r	a0, 400a0df4 <_iram_end+0x132a0>
400de243:	008a06        	j	400de46f <_svfprintf_r+0x2157>
400de246:	e20000        	remu	a0, a0, a0
400de249:	1b10c1        	l32r	a12, 400a4e8c <_iram_end+0x17338>
400de24c:	22e047        	bbsi	a0, 4, 400de272 <_svfprintf_r+0x1f5a>
400de24f:	a767b0        	lsi	f11, a7, 0x29c
400de252:	ab4602        	s8i	a0, a6, 171
400de255:	f21c00        	rems	a1, a12, a0
400de258:	3c2267        	blt	a2, a6, 400de298 <_svfprintf_r+0x1f80>
400de25b:	261b      	addi.n	a2, a6, 1
400de25d:	10c132        	addi	a3, a1, 16
400de260:	976122        	s32i	a2, a1, 0x25c
400de263:	02d322        	addmi	a2, a3, 0x200
400de266:	1a2232        	l32i	a3, a2, 104
400de269:	851c      	movi.n	a5, 24
400de26b:	734b      	addi.n	a7, a3, 4
400de26d:	1a6272        	s32i	a7, a2, 104
400de270:	052577        	blt	a5, a7, 400de279 <_svfprintf_r+0x1f61>
400de273:	192222        	l32i	a2, a2, 100
400de276:	000286        	j	400de284 <_svfprintf_r+0x1f6c>
400de279:	042537        	blt	a5, a3, 400de281 <_svfprintf_r+0x1f69>
400de27c:	432c      	movi.n	a3, 36
400de27e:	1a6232        	s32i	a3, a2, 104
400de281:	9c2122        	l32i	a2, a1, 0x270
400de284:	9e2132        	l32i	a3, a1, 0x278
400de287:	10c182        	addi	a8, a1, 16
400de28a:	323a      	add.n	a3, a2, a3
400de28c:	fcc332        	addi	a3, a3, -4
400de28f:	0358      	l32i.n	a5, a3, 0
400de291:	b02680        	addx8	a2, a6, a8
400de294:	008e06        	j	400de4d0 <_svfprintf_r+0x21b8>
400de297:	c19200        	mul16u	a9, a2, a0
400de29a:	d92210        	lsi	f1, a2, 0x364
400de29d:	8e4602        	s8i	a0, a6, 142
400de2a0:	218200        	srai	a8, a0, 2
400de2a3:	034ca0        	lsi	f10, a12, 12
400de2a6:	103830        	and	a3, a8, a3
400de2a9:	0cc316        	beqz	a3, 400de379 <_svfprintf_r+0x2061>
400de2ac:	972182        	l32i	a8, a1, 0x25c
400de2af:	54bc      	beqz.n	a4, 400de2e8 <_svfprintf_r+0x1fd0>
400de2b1:	0ba287        	bge	a2, a8, 400de2c0 <_svfprintf_r+0x1fa8>
400de2b4:	10c192        	addi	a9, a1, 16
400de2b7:	b02290        	addx8	a2, a2, a9
400de2ba:	001252        	l16ui	a5, a2, 0
400de2bd:	000886        	j	400de2e3 <_svfprintf_r+0x1fcb>
400de2c0:	10c1a2        	addi	a10, a1, 16
400de2c3:	48a232        	movi	a3, 0x248
400de2c6:	3a3a      	add.n	a3, a10, a3
400de2c8:	4ca2d2        	movi	a13, 0x24c
400de2cb:	60a2c2        	movi	a12, 0x260
400de2ce:	01daf2        	addmi	a15, a10, 0x100
400de2d1:	0aed      	mov.n	a14, a10
400de2d3:	dada      	add.n	a13, a10, a13
400de2d5:	caca      	add.n	a12, a10, a12
400de2d7:	05bd      	mov.n	a11, a5
400de2d9:	0139      	s32i.n	a3, a1, 0
400de2db:	02ad      	mov.n	a10, a2
400de2dd:	fdbba5        	call8	400dbe98 <get_arg$isra$0>
400de2e0:	001a52        	l16ui	a5, a10, 0
400de2e3:	063d      	mov.n	a3, a6
400de2e5:	008846        	j	400de50a <_svfprintf_r+0x21f2>
400de2e8:	671b      	addi.n	a6, a7, 1
400de2ea:	0ea787        	bge	a7, a8, 400de2fc <_svfprintf_r+0x1fe4>
400de2ed:	10c1e2        	addi	a14, a1, 16
400de2f0:	b022e0        	addx8	a2, a2, a14
400de2f3:	001252        	l16ui	a5, a2, 0
400de2f6:	043d      	mov.n	a3, a4
400de2f8:	001e06        	j	400de374 <_svfprintf_r+0x205c>
400de2fb:	f21c00        	rems	a1, a12, a0
400de2fe:	412287        	blt	a2, a8, 400de343 <_svfprintf_r+0x202b>
400de301:	281b      	addi.n	a2, a8, 1
400de303:	10c132        	addi	a3, a1, 16
400de306:	976122        	s32i	a2, a1, 0x25c
400de309:	02d322        	addmi	a2, a3, 0x200
400de30c:	1a2232        	l32i	a3, a2, 104
400de30f:	841c      	movi.n	a4, 24
400de311:	534b      	addi.n	a5, a3, 4
400de313:	1a6252        	s32i	a5, a2, 104
400de316:	062457        	blt	a4, a5, 400de320 <_svfprintf_r+0x2008>
400de319:	192222        	l32i	a2, a2, 100
400de31c:	0002c6        	j	400de32b <_svfprintf_r+0x2013>
400de31f:	243700        	extui	a3, a0, 7, 3
400de322:	432c04        	lsi	f0, a12, 0x10c
400de325:	1a6232        	s32i	a3, a2, 104
400de328:	9c2122        	l32i	a2, a1, 0x270
400de32b:	9e2132        	l32i	a3, a1, 0x278
400de32e:	10c142        	addi	a4, a1, 16
400de331:	323a      	add.n	a3, a2, a3
400de333:	fcc332        	addi	a3, a3, -4
400de336:	0358      	l32i.n	a5, a3, 0
400de338:	b02840        	addx8	a2, a8, a4
400de33b:	0259      	s32i.n	a5, a2, 0
400de33d:	f45050        	extui	a5, a5, 0, 16
400de340:	000b86        	j	400de372 <_svfprintf_r+0x205a>
400de343:	10c152        	addi	a5, a1, 16
400de346:	02d522        	addmi	a2, a5, 0x200
400de349:	1a2232        	l32i	a3, a2, 104
400de34c:	841c      	movi.n	a4, 24
400de34e:	534b      	addi.n	a5, a3, 4
400de350:	1a6252        	s32i	a5, a2, 104
400de353:	052457        	blt	a4, a5, 400de35c <_svfprintf_r+0x2044>
400de356:	192232        	l32i	a3, a2, 100
400de359:	000286        	j	400de367 <_svfprintf_r+0x204f>
400de35c:	042437        	blt	a4, a3, 400de364 <_svfprintf_r+0x204c>
400de35f:	432c      	movi.n	a3, 36
400de361:	1a6232        	s32i	a3, a2, 104
400de364:	9c2132        	l32i	a3, a1, 0x270
400de367:	9e2122        	l32i	a2, a1, 0x278
400de36a:	232a      	add.n	a2, a3, a2
400de36c:	fcc222        	addi	a2, a2, -4
400de36f:	001252        	l16ui	a5, a2, 0
400de372:	030c      	movi.n	a3, 0
400de374:	067d      	mov.n	a7, a6
400de376:	006406        	j	400de50a <_svfprintf_r+0x21f2>
400de379:	a02182        	l32i	a8, a1, 0x280
400de37c:	972162        	l32i	a6, a1, 0x25c
400de37f:	02e897        	bbsi	a8, 9, 400de385 <_svfprintf_r+0x206d>
400de382:	003206        	j	400de44e <_svfprintf_r+0x2136>
400de385:	54bc      	beqz.n	a4, 400de3be <_svfprintf_r+0x20a6>
400de387:	0da267        	bge	a2, a6, 400de398 <_svfprintf_r+0x2080>
400de38a:	10c192        	addi	a9, a1, 16
400de38d:	b02290        	addx8	a2, a2, a9
400de390:	000252        	l8ui	a5, a2, 0
400de393:	005cc6        	j	400de50a <_svfprintf_r+0x21f2>
400de396:	a20000        	muluh	a0, a0, a0
400de399:	4210c1        	l32r	a12, 400aebdc <_iram_end+0x21088>
400de39c:	4a48a2        	s8i	a10, a8, 74
400de39f:	d24a      	add.n	a13, a2, a4
400de3a1:	c24ca2        	s8i	a10, a12, 194
400de3a4:	f260a2        	s32i	a10, a0, 0x3c8
400de3a7:	01da      	add.n	a0, a1, a13
400de3a9:	0aed      	mov.n	a14, a10
400de3ab:	dada      	add.n	a13, a10, a13
400de3ad:	caca      	add.n	a12, a10, a12
400de3af:	05bd      	mov.n	a11, a5
400de3b1:	0149      	s32i.n	a4, a1, 0
400de3b3:	02ad      	mov.n	a10, a2
400de3b5:	fdae25        	call8	400dbe98 <get_arg$isra$0>
400de3b8:	000a52        	l8ui	a5, a10, 0
400de3bb:	0052c6        	j	400de50a <_svfprintf_r+0x21f2>
400de3be:	871b      	addi.n	a8, a7, 1
400de3c0:	0da767        	bge	a7, a6, 400de3d1 <_svfprintf_r+0x20b9>
400de3c3:	10c1e2        	addi	a14, a1, 16
400de3c6:	b022e0        	addx8	a2, a2, a14
400de3c9:	000252        	l8ui	a5, a2, 0
400de3cc:	043d      	mov.n	a3, a4
400de3ce:	001dc6        	j	400de449 <_svfprintf_r+0x2131>
400de3d1:	f21c      	movi.n	a2, 31
400de3d3:	412267        	blt	a2, a6, 400de418 <_svfprintf_r+0x2100>
400de3d6:	261b      	addi.n	a2, a6, 1
400de3d8:	10c132        	addi	a3, a1, 16
400de3db:	976122        	s32i	a2, a1, 0x25c
400de3de:	02d322        	addmi	a2, a3, 0x200
400de3e1:	1a2232        	l32i	a3, a2, 104
400de3e4:	841c      	movi.n	a4, 24
400de3e6:	534b      	addi.n	a5, a3, 4
400de3e8:	1a6252        	s32i	a5, a2, 104
400de3eb:	052457        	blt	a4, a5, 400de3f4 <_svfprintf_r+0x20dc>
400de3ee:	192232        	l32i	a3, a2, 100
400de3f1:	000286        	j	400de3ff <_svfprintf_r+0x20e7>
400de3f4:	042437        	blt	a4, a3, 400de3fc <_svfprintf_r+0x20e4>
400de3f7:	432c      	movi.n	a3, 36
400de3f9:	1a6232        	s32i	a3, a2, 104
400de3fc:	9c2132        	l32i	a3, a1, 0x270
400de3ff:	9e2122        	l32i	a2, a1, 0x278
400de402:	10c142        	addi	a4, a1, 16
400de405:	232a      	add.n	a2, a3, a2
400de407:	fcc222        	addi	a2, a2, -4
400de40a:	0258      	l32i.n	a5, a2, 0
400de40c:	b02640        	addx8	a2, a6, a4
400de40f:	0259      	s32i.n	a5, a2, 0
400de411:	745050        	extui	a5, a5, 0, 8
400de414:	000bc6        	j	400de447 <_svfprintf_r+0x212f>
400de417:	c15200        	mul16u	a5, a2, a0
400de41a:	d52210        	extui	a2, a1, 18, 14
400de41d:	223202        	lsi	f0, a2, 136
400de420:	1c1a      	add.n	a1, a12, a1
400de422:	534b84        	lsi	f8, a11, 0x14c
400de425:	1a6252        	s32i	a5, a2, 104
400de428:	052457        	blt	a4, a5, 400de431 <_svfprintf_r+0x2119>
400de42b:	192232        	l32i	a3, a2, 100
400de42e:	000286        	j	400de43c <_svfprintf_r+0x2124>
400de431:	042437        	blt	a4, a3, 400de439 <_svfprintf_r+0x2121>
400de434:	432c      	movi.n	a3, 36
400de436:	1a6232        	s32i	a3, a2, 104
400de439:	9c2132        	l32i	a3, a1, 0x270
400de43c:	9e2122        	l32i	a2, a1, 0x278
400de43f:	232a      	add.n	a2, a3, a2
400de441:	fcc222        	addi	a2, a2, -4
400de444:	000252        	l8ui	a5, a2, 0
400de447:	030c      	movi.n	a3, 0
400de449:	087d      	mov.n	a7, a8
400de44b:	002ec6        	j	400de50a <_svfprintf_r+0x21f2>
400de44e:	54bc      	beqz.n	a4, 400de487 <_svfprintf_r+0x216f>
400de450:	0ca267        	bge	a2, a6, 400de460 <_svfprintf_r+0x2148>
400de453:	10c162        	addi	a6, a1, 16
400de456:	b02260        	addx8	a2, a2, a6
400de459:	0258      	l32i.n	a5, a2, 0
400de45b:	0008c6        	j	400de482 <_svfprintf_r+0x216a>
400de45e:	820000        	mull	a0, a0, a0
400de461:	3210c1        	l32r	a12, 400aaca4 <_iram_end+0x1d150>
400de464:	3a48a2        	s8i	a10, a8, 58
400de467:	3938      	l32i.n	a3, a9, 12
400de469:	d8f201        	l32r	a0, 400d4834 <_Unwind_RaiseException+0x88>
400de46c:	08ed01        	l32r	a0, 400a0820 <_iram_end+0x12ccc>
400de46f:	4ca2d2        	movi	a13, 0x24c
400de472:	60a2c2        	movi	a12, 0x260
400de475:	05bd      	mov.n	a11, a5
400de477:	deda      	add.n	a13, a14, a13
400de479:	ceca      	add.n	a12, a14, a12
400de47b:	02ad      	mov.n	a10, a2
400de47d:	fda1a5        	call8	400dbe98 <get_arg$isra$0>
400de480:	0a58      	l32i.n	a5, a10, 0
400de482:	074d      	mov.n	a4, a7
400de484:	001f86        	j	400de506 <_svfprintf_r+0x21ee>
400de487:	10c192        	addi	a9, a1, 16
400de48a:	471b      	addi.n	a4, a7, 1
400de48c:	b02290        	addx8	a2, a2, a9
400de48f:	712767        	blt	a7, a6, 400de504 <_svfprintf_r+0x21ec>
400de492:	f21c      	movi.n	a2, 31
400de494:	3d2267        	blt	a2, a6, 400de4d5 <_svfprintf_r+0x21bd>
400de497:	261b      	addi.n	a2, a6, 1
400de499:	10c1a2        	addi	a10, a1, 16
400de49c:	976122        	s32i	a2, a1, 0x25c
400de49f:	02da22        	addmi	a2, a10, 0x200
400de4a2:	1a2232        	l32i	a3, a2, 104
400de4a5:	851c      	movi.n	a5, 24
400de4a7:	734b      	addi.n	a7, a3, 4
400de4a9:	1a6272        	s32i	a7, a2, 104
400de4ac:	052577        	blt	a5, a7, 400de4b5 <_svfprintf_r+0x219d>
400de4af:	192232        	l32i	a3, a2, 100
400de4b2:	000286        	j	400de4c0 <_svfprintf_r+0x21a8>
400de4b5:	042537        	blt	a5, a3, 400de4bd <_svfprintf_r+0x21a5>
400de4b8:	432c      	movi.n	a3, 36
400de4ba:	1a6232        	s32i	a3, a2, 104
400de4bd:	9c2132        	l32i	a3, a1, 0x270
400de4c0:	9e2122        	l32i	a2, a1, 0x278
400de4c3:	10c1e2        	addi	a14, a1, 16
400de4c6:	232a      	add.n	a2, a3, a2
400de4c8:	fcc222        	addi	a2, a2, -4
400de4cb:	0258      	l32i.n	a5, a2, 0
400de4cd:	b026e0        	addx8	a2, a6, a14
400de4d0:	0259      	s32i.n	a5, a2, 0
400de4d2:	000c06        	j	400de506 <_svfprintf_r+0x21ee>
400de4d5:	10c132        	addi	a3, a1, 16
400de4d8:	02d322        	addmi	a2, a3, 0x200
400de4db:	1a2232        	l32i	a3, a2, 104
400de4de:	851c      	movi.n	a5, 24
400de4e0:	634b      	addi.n	a6, a3, 4
400de4e2:	1a6262        	s32i	a6, a2, 104
400de4e5:	082567        	blt	a5, a6, 400de4f1 <_svfprintf_r+0x21d9>
400de4e8:	192232        	l32i	a3, a2, 100
400de4eb:	000346        	j	400de4fc <_svfprintf_r+0x21e4>
400de4ee:	000000        	ill
400de4f1:	042537        	blt	a5, a3, 400de4f9 <_svfprintf_r+0x21e1>
400de4f4:	432c      	movi.n	a3, 36
400de4f6:	1a6232        	s32i	a3, a2, 104
400de4f9:	9c2132        	l32i	a3, a1, 0x270
400de4fc:	9e2122        	l32i	a2, a1, 0x278
400de4ff:	232a      	add.n	a2, a3, a2
400de501:	fcc222        	addi	a2, a2, -4
400de504:	0258      	l32i.n	a5, a2, 0
400de506:	030c      	movi.n	a3, 0
400de508:	047d      	mov.n	a7, a4
400de50a:	202530        	or	a2, a5, a3
400de50d:	02ac      	beqz.n	a2, 400de531 <_svfprintf_r+0x2219>
400de50f:	a02142        	l32i	a4, a1, 0x280
400de512:	1b6407        	bbci	a4, 0, 400de531 <_svfprintf_r+0x2219>
400de515:	10c162        	addi	a6, a1, 16
400de518:	a62182        	l32i	a8, a1, 0x298
400de51b:	02d622        	addmi	a2, a6, 0x200
400de51e:	a02192        	l32i	a9, a1, 0x280
400de521:	043c      	movi.n	a4, 48
400de523:	504242        	s8i	a4, a2, 80
400de526:	514282        	s8i	a8, a2, 81
400de529:	220c      	movi.n	a2, 2
400de52b:	209920        	or	a9, a9, a2
400de52e:	a06192        	s32i	a9, a1, 0x280
400de531:	a02142        	l32i	a4, a1, 0x280
400de534:	ffab22        	movi	a2, 0xfffffbff
400de537:	104420        	and	a4, a4, a2
400de53a:	a06142        	s32i	a4, a1, 0x280
400de53d:	02a022        	movi	a2, 2
400de540:	10c182        	addi	a8, a1, 16
400de543:	00a062        	movi	a6, 0
400de546:	02d842        	addmi	a4, a8, 0x200
400de549:	524462        	s8i	a6, a4, 82
400de54c:	a52192        	l32i	a9, a1, 0x294
400de54f:	00b996        	bltz	a9, 400de55e <_svfprintf_r+0x2246>
400de552:	a02162        	l32i	a6, a1, 0x280
400de555:	7faf42        	movi	a4, -129
400de558:	106640        	and	a6, a6, a4
400de55b:	a06162        	s32i	a6, a1, 0x280
400de55e:	204530        	or	a4, a5, a3
400de561:	01a062        	movi	a6, 1
400de564:	00a082        	movi	a8, 0
400de567:	938640        	movnez	a8, a6, a4
400de56a:	744080        	extui	a4, a8, 0, 8
400de56d:	008456        	bnez	a4, 400de579 <_svfprintf_r+0x2261>
400de570:	a52182        	l32i	a8, a1, 0x294
400de573:	934680        	movnez	a4, a6, a8
400de576:	172416        	beqz	a4, 400de6ec <_svfprintf_r+0x23d4>
400de579:	80a142        	movi	a4, 0x180
400de57c:	5a1226        	beqi	a2, 1, 400de5da <_svfprintf_r+0x22c2>
400de57f:	022266        	bnei	a2, 2, 400de585 <_svfprintf_r+0x226d>
400de582:	004ac6        	j	400de6b1 <_svfprintf_r+0x2399>
400de585:	10c192        	addi	a9, a1, 16
400de588:	494a      	add.n	a4, a9, a4
400de58a:	64c442        	addi	a4, a4, 100
400de58d:	a16142        	s32i	a4, a1, 0x284
400de590:	a12122        	l32i	a2, a1, 0x284
400de593:	220b      	addi.n	a2, a2, -1
400de595:	a16122        	s32i	a2, a1, 0x284
400de598:	a12142        	l32i	a4, a1, 0x284
400de59b:	242050        	extui	a2, a5, 0, 3
400de59e:	30c222        	addi	a2, a2, 48
400de5a1:	004422        	s8i	a2, a4, 0
400de5a4:	415350        	srli	a5, a5, 3
400de5a7:	014330        	slli	a4, a3, 29
400de5aa:	205450        	or	a5, a4, a5
400de5ad:	413330        	srli	a3, a3, 3
400de5b0:	204530        	or	a4, a5, a3
400de5b3:	fd9456        	bnez	a4, 400de590 <_svfprintf_r+0x2278>
400de5b6:	d0c232        	addi	a3, a2, -48
400de5b9:	120c      	movi.n	a2, 1
400de5bb:	832430        	moveqz	a2, a4, a3
400de5be:	742020        	extui	a2, a2, 0, 8
400de5c1:	14f216        	beqz	a2, 400de714 <_svfprintf_r+0x23fc>
400de5c4:	a02152        	l32i	a5, a1, 0x280
400de5c7:	02e507        	bbsi	a5, 0, 400de5cd <_svfprintf_r+0x22b5>
400de5ca:	005186        	j	400de714 <_svfprintf_r+0x23fc>
400de5cd:	a12182        	l32i	a8, a1, 0x284
400de5d0:	023c      	movi.n	a2, 48
400de5d2:	480b      	addi.n	a4, a8, -1
400de5d4:	004422        	s8i	a2, a4, 0
400de5d7:	0005c6        	j	400de5f2 <_svfprintf_r+0x22da>
400de5da:	a3dc      	bnez.n	a3, 400de5f8 <_svfprintf_r+0x22e0>
400de5dc:	920c      	movi.n	a2, 9
400de5de:	163257        	bltu	a2, a5, 400de5f8 <_svfprintf_r+0x22e0>
400de5e1:	10c192        	addi	a9, a1, 16
400de5e4:	30c552        	addi	a5, a5, 48
400de5e7:	01d922        	addmi	a2, a9, 0x100
400de5ea:	494a      	add.n	a4, a9, a4
400de5ec:	e34252        	s8i	a5, a2, 227
400de5ef:	63c442        	addi	a4, a4, 99
400de5f2:	a16142        	s32i	a4, a1, 0x284
400de5f5:	0046c6        	j	400de714 <_svfprintf_r+0x23fc>
400de5f8:	020c      	movi.n	a2, 0
400de5fa:	90a162        	movi	a6, 0x190
400de5fd:	a02182        	l32i	a8, a1, 0x280
400de600:	a76122        	s32i	a2, a1, 0x29c
400de603:	661a      	add.n	a6, a6, a1
400de605:	00a422        	movi	a2, 0x400
400de608:	64c642        	addi	a4, a6, 100
400de60b:	102820        	and	a2, a8, a2
400de60e:	000086        	j	400de614 <_svfprintf_r+0x22fc>
400de611:	a12142        	l32i	a4, a1, 0x284
400de614:	c858c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400de617:	c691d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400de61a:	440b      	addi.n	a4, a4, -1
400de61c:	05ad      	mov.n	a10, a5
400de61e:	03bd      	mov.n	a11, a3
400de620:	a16142        	s32i	a4, a1, 0x284
400de623:	c86181        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400de626:	0008e0        	callx8	a8
400de629:	a72192        	l32i	a9, a1, 0x29c
400de62c:	30caa2        	addi	a10, a10, 48
400de62f:	991b      	addi.n	a9, a9, 1
400de631:	0044a2        	s8i	a10, a4, 0
400de634:	a76192        	s32i	a9, a1, 0x29c
400de637:	056216        	beqz	a2, 400de691 <_svfprintf_r+0x2379>
400de63a:	ad2142        	l32i	a4, a1, 0x2b4
400de63d:	190c      	movi.n	a9, 1
400de63f:	000482        	l8ui	a8, a4, 0
400de642:	63cc      	bnez.n	a3, 400de64c <_svfprintf_r+0x2334>
400de644:	09a042        	movi	a4, 9
400de647:	013457        	bltu	a4, a5, 400de64c <_svfprintf_r+0x2334>
400de64a:	039d      	mov.n	a9, a3
400de64c:	01af42        	movi	a4, -255
400de64f:	484a      	add.n	a4, a8, a4
400de651:	060c      	movi.n	a6, 0
400de653:	01a0a2        	movi	a10, 1
400de656:	83a640        	moveqz	a10, a6, a4
400de659:	340a97        	bnone	a10, a9, 400de691 <_svfprintf_r+0x2379>
400de65c:	a72192        	l32i	a9, a1, 0x29c
400de65f:	2e9897        	bne	a8, a9, 400de691 <_svfprintf_r+0x2379>
400de662:	b02182        	l32i	a8, a1, 0x2c0
400de665:	a12142        	l32i	a4, a1, 0x284
400de668:	b321b2        	l32i	a11, a1, 0x2cc
400de66b:	c04480        	sub	a4, a4, a8
400de66e:	08cd      	mov.n	a12, a8
400de670:	20a440        	or	a10, a4, a4
400de673:	a16142        	s32i	a4, a1, 0x284
400de676:	c75981        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400de679:	0008e0        	callx8	a8
400de67c:	ad2192        	l32i	a9, a1, 0x2b4
400de67f:	064d      	mov.n	a4, a6
400de681:	010982        	l8ui	a8, a9, 1
400de684:	a76162        	s32i	a6, a1, 0x29c
400de687:	160c      	movi.n	a6, 1
400de689:	934680        	movnez	a4, a6, a8
400de68c:	994a      	add.n	a9, a9, a4
400de68e:	ad6192        	s32i	a9, a1, 0x2b4
400de691:	c838c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400de694:	c672d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400de697:	05ad      	mov.n	a10, a5
400de699:	03bd      	mov.n	a11, a3
400de69b:	c66a81        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400de69e:	0008e0        	callx8	a8
400de6a1:	0a5d      	mov.n	a5, a10
400de6a3:	20aba0        	or	a10, a11, a10
400de6a6:	0b3d      	mov.n	a3, a11
400de6a8:	f65a56        	bnez	a10, 400de611 <_svfprintf_r+0x22f9>
400de6ab:	001946        	j	400de714 <_svfprintf_r+0x23fc>
400de6ae:	000000        	ill
400de6b1:	10c1a2        	addi	a10, a1, 16
400de6b4:	4a4a      	add.n	a4, a10, a4
400de6b6:	64c442        	addi	a4, a4, 100
400de6b9:	a16142        	s32i	a4, a1, 0x284
400de6bc:	a12122        	l32i	a2, a1, 0x284
400de6bf:	b52142        	l32i	a4, a1, 0x2d4
400de6c2:	220b      	addi.n	a2, a2, -1
400de6c4:	a16122        	s32i	a2, a1, 0x284
400de6c7:	342050        	extui	a2, a5, 0, 4
400de6ca:	242a      	add.n	a2, a4, a2
400de6cc:	000222        	l8ui	a2, a2, 0
400de6cf:	a12182        	l32i	a8, a1, 0x284
400de6d2:	415450        	srli	a5, a5, 4
400de6d5:	004822        	s8i	a2, a8, 0
400de6d8:	012340        	slli	a2, a3, 28
400de6db:	205250        	or	a5, a2, a5
400de6de:	413430        	srli	a3, a3, 4
400de6e1:	202530        	or	a2, a5, a3
400de6e4:	fd4256        	bnez	a2, 400de6bc <_svfprintf_r+0x23a4>
400de6e7:	000a46        	j	400de714 <_svfprintf_r+0x23fc>
400de6ea:	320000        	orbc	b0, b0, b0
400de6ed:	9280a1        	l32r	a10, 400c30f0 <_rtc_text_end+0x30f0>
400de6f0:	3a10c1        	l32r	a12, 400acf30 <_iram_end+0x1f3dc>
400de6f3:	4249      	s32i.n	a4, a2, 16
400de6f5:	4264c4        	lsi	f12, a4, 0x108
400de6f8:	dca161        	l32r	a6, 400d597c <esp_perip_clk_init+0xc8>
400de6fb:	212262        	l32i	a6, a2, 132
400de6fe:	6207a0        	lsi	f10, a7, 0x188
400de701:	393011        	l32r	a1, 400acbc4 <_iram_end+0x1f070>
400de704:	a04280        	addx4	a4, a2, a8
400de707:	d92230        	lsi	f3, a2, 0x364
400de70a:	c33201        	l32r	a0, 400cf3d4 <_rtc_text_end+0xf3d4>
400de70d:	424263        	ssi	f6, a2, 0x108
400de710:	6132e3        	lsi	f14, a2, 0x184
400de713:	c132a1        	l32r	a10, 400cebdc <_rtc_text_end+0xebdc>
400de716:	a12210        	lsi	f1, a2, 0x284
400de719:	2142e4        	lsi	f14, a2, 132
400de71c:	232aa1        	l32r	a10, 400a73c4 <_iram_end+0x19870>
400de71f:	050c      	movi.n	a5, 0
400de721:	c02240        	sub	a2, a2, a4
400de724:	a52162        	l32i	a6, a1, 0x294
400de727:	a26152        	s32i	a5, a1, 0x288
400de72a:	a56122        	s32i	a2, a1, 0x294
400de72d:	053d      	mov.n	a3, a5
400de72f:	0010c6        	j	400de776 <_svfprintf_r+0x245e>
400de732:	620000        	lsi	f0, a0, 0x188
400de735:	cca621        	l32r	a2, 400d19d0 <void testMult<unsigned int>(char const*)+0x130>
400de738:	1ec616        	beqz	a6, 400de928 <_svfprintf_r+0x2610>
400de73b:	c18203        	lsip	f0, a2, 0x304
400de73e:	d82210        	lsi	f1, a2, 0x360
400de741:	426201        	l32r	a0, 400af0cc <_iram_end+0x21578>
400de744:	030c80        	rsr.scompare1	a8
400de747:	02d822        	addmi	a2, a8, 0x200
400de74a:	090c      	movi.n	a9, 0
400de74c:	524232        	s8i	a3, a2, 82
400de74f:	120c      	movi.n	a2, 1
400de751:	a56122        	s32i	a2, a1, 0x294
400de754:	a26192        	s32i	a9, a1, 0x288
400de757:	096d      	mov.n	a6, a9
400de759:	093d      	mov.n	a3, a9
400de75b:	095d      	mov.n	a5, a9
400de75d:	092d      	mov.n	a2, a9
400de75f:	90a182        	movi	a8, 0x190
400de762:	818a      	add.n	a8, a1, a8
400de764:	a16182        	s32i	a8, a1, 0x284
400de767:	000346        	j	400de778 <_svfprintf_r+0x2460>
400de76a:	000000        	ill
400de76d:	a261a2        	s32i	a10, a1, 0x288
400de770:	0a6d      	mov.n	a6, a10
400de772:	063d      	mov.n	a3, a6
400de774:	065d      	mov.n	a5, a6
400de776:	052d      	mov.n	a2, a5
400de778:	a52192        	l32i	a9, a1, 0x294
400de77b:	10c1a2        	addi	a10, a1, 16
400de77e:	539690        	max	a9, a6, a9
400de781:	02da42        	addmi	a4, a10, 0x200
400de784:	a96192        	s32i	a9, a1, 0x2a4
400de787:	520482        	l8ui	a8, a4, 82
400de78a:	190c      	movi.n	a9, 1
400de78c:	a921e2        	l32i	a14, a1, 0x2a4
400de78f:	040c      	movi.n	a4, 0
400de791:	934980        	movnez	a4, a9, a8
400de794:	a02182        	l32i	a8, a1, 0x280
400de797:	ee4a      	add.n	a14, a14, a4
400de799:	a02192        	l32i	a9, a1, 0x280
400de79c:	240c      	movi.n	a4, 2
400de79e:	104840        	and	a4, a8, a4
400de7a1:	84a082        	movi	a8, 132
400de7a4:	ee4a      	add.n	a14, a14, a4
400de7a6:	108980        	and	a8, a9, a8
400de7a9:	a961e2        	s32i	a14, a1, 0x2a4
400de7ac:	b26182        	s32i	a8, a1, 0x2c8
400de7af:	0b5856        	bnez	a8, 400de868 <_svfprintf_r+0x2550>
400de7b2:	ac2192        	l32i	a9, a1, 0x2b0
400de7b5:	0d1c      	movi.n	a13, 16
400de7b7:	c089e0        	sub	a8, a9, a14
400de7ba:	5b18e6        	bgei	a8, 1, 400de819 <_svfprintf_r+0x2501>
400de7bd:	0029c6        	j	400de868 <_svfprintf_r+0x2550>
400de7c0:	9f21a2        	l32i	a10, a1, 0x27c
400de7c3:	0a99      	s32i.n	a9, a10, 0
400de7c5:	8f2192        	l32i	a9, a1, 0x23c
400de7c8:	1ad9      	s32i.n	a13, a10, 4
400de7ca:	10c992        	addi	a9, a9, 16
400de7cd:	8f6192        	s32i	a9, a1, 0x23c
400de7d0:	8e2192        	l32i	a9, a1, 0x238
400de7d3:	991b      	addi.n	a9, a9, 1
400de7d5:	8e6192        	s32i	a9, a1, 0x238
400de7d8:	0d89e6        	bgei	a9, 8, 400de7e9 <_svfprintf_r+0x24d1>
400de7db:	9f2192        	l32i	a9, a1, 0x27c
400de7de:	998b      	addi.n	a9, a9, 8
400de7e0:	9f6192        	s32i	a9, a1, 0x27c
400de7e3:	000bc6        	j	400de816 <_svfprintf_r+0x24fe>
400de7e6:	000000        	ill
400de7e9:	34a2c2        	movi	a12, 0x234
400de7ec:	a421b2        	l32i	a11, a1, 0x290
400de7ef:	a321a2        	l32i	a10, a1, 0x28c
400de7f2:	80cc10        	add	a12, a12, a1
400de7f5:	b86182        	s32i	a8, a1, 0x2e0
400de7f8:	b761d2        	s32i	a13, a1, 0x2dc
400de7fb:	07d1a5        	call8	400e6514 <__ssprint_r>
400de7fe:	b82182        	l32i	a8, a1, 0x2e0
400de801:	b721d2        	l32i	a13, a1, 0x2dc
400de804:	002a16        	beqz	a10, 400de80a <_svfprintf_r+0x24f2>
400de807:	02f246        	j	400df3d4 <_svfprintf_r+0x30bc>
400de80a:	e4a192        	movi	a9, 0x1e4
400de80d:	10c1a2        	addi	a10, a1, 16
400de810:	80aa90        	add	a10, a10, a9
400de813:	9f61a2        	s32i	a10, a1, 0x27c
400de816:	f0c882        	addi	a8, a8, -16
400de819:	c7d791        	l32r	a9, 400d0778 <_flash_cache_start+0x760>
400de81c:	a02d87        	blt	a13, a8, 400de7c0 <_svfprintf_r+0x24a8>
400de81f:	9f21e2        	l32i	a14, a1, 0x27c
400de822:	10c1a2        	addi	a10, a1, 16
400de825:	0e99      	s32i.n	a9, a14, 0
400de827:	02da92        	addmi	a9, a10, 0x200
400de82a:	8f21a2        	l32i	a10, a1, 0x23c
400de82d:	1e89      	s32i.n	a8, a14, 4
400de82f:	8a8a      	add.n	a8, a10, a8
400de831:	b989      	s32i.n	a8, a9, 44
400de833:	a988      	l32i.n	a8, a9, 40
400de835:	881b      	addi.n	a8, a8, 1
400de837:	a989      	s32i.n	a8, a9, 40
400de839:	0788e6        	bgei	a8, 8, 400de844 <_svfprintf_r+0x252c>
400de83c:	ee8b      	addi.n	a14, a14, 8
400de83e:	9f61e2        	s32i	a14, a1, 0x27c
400de841:	0008c6        	j	400de868 <_svfprintf_r+0x2550>
400de844:	10c1e2        	addi	a14, a1, 16
400de847:	24a282        	movi	a8, 0x224
400de84a:	a421b2        	l32i	a11, a1, 0x290
400de84d:	a321a2        	l32i	a10, a1, 0x28c
400de850:	80ce80        	add	a12, a14, a8
400de853:	07cc25        	call8	400e6514 <__ssprint_r>
400de856:	002a16        	beqz	a10, 400de85c <_svfprintf_r+0x2544>
400de859:	02ddc6        	j	400df3d4 <_svfprintf_r+0x30bc>
400de85c:	e4a182        	movi	a8, 0x1e4
400de85f:	10c192        	addi	a9, a1, 16
400de862:	809980        	add	a9, a9, a8
400de865:	9f6192        	s32i	a9, a1, 0x27c
400de868:	10c1a2        	addi	a10, a1, 16
400de86b:	02da92        	addmi	a9, a10, 0x200
400de86e:	520982        	l8ui	a8, a9, 82
400de871:	049816        	beqz	a8, 400de8be <_svfprintf_r+0x25a6>
400de874:	9f21e2        	l32i	a14, a1, 0x27c
400de877:	52a282        	movi	a8, 0x252
400de87a:	8a8a      	add.n	a8, a10, a8
400de87c:	0e89      	s32i.n	a8, a14, 0
400de87e:	180c      	movi.n	a8, 1
400de880:	1e89      	s32i.n	a8, a14, 4
400de882:	8f2182        	l32i	a8, a1, 0x23c
400de885:	881b      	addi.n	a8, a8, 1
400de887:	8f6182        	s32i	a8, a1, 0x23c
400de88a:	8e2182        	l32i	a8, a1, 0x238
400de88d:	881b      	addi.n	a8, a8, 1
400de88f:	8e6182        	s32i	a8, a1, 0x238
400de892:	0788e6        	bgei	a8, 8, 400de89d <_svfprintf_r+0x2585>
400de895:	ee8b      	addi.n	a14, a14, 8
400de897:	9f61e2        	s32i	a14, a1, 0x27c
400de89a:	000806        	j	400de8be <_svfprintf_r+0x25a6>
400de89d:	34a2c2        	movi	a12, 0x234
400de8a0:	a421b2        	l32i	a11, a1, 0x290
400de8a3:	a321a2        	l32i	a10, a1, 0x28c
400de8a6:	80cc10        	add	a12, a12, a1
400de8a9:	07c6a5        	call8	400e6514 <__ssprint_r>
400de8ac:	002a16        	beqz	a10, 400de8b2 <_svfprintf_r+0x259a>
400de8af:	02c846        	j	400df3d4 <_svfprintf_r+0x30bc>
400de8b2:	e4a182        	movi	a8, 0x1e4
400de8b5:	10c192        	addi	a9, a1, 16
400de8b8:	809980        	add	a9, a9, a8
400de8bb:	9f6192        	s32i	a9, a1, 0x27c
400de8be:	04c416        	beqz	a4, 400de90e <_svfprintf_r+0x25f6>
400de8c1:	9f2182        	l32i	a8, a1, 0x27c
400de8c4:	60a2a2        	movi	a10, 0x260
400de8c7:	41aa      	add.n	a4, a1, a10
400de8c9:	0849      	s32i.n	a4, a8, 0
400de8cb:	240c      	movi.n	a4, 2
400de8cd:	1849      	s32i.n	a4, a8, 4
400de8cf:	8f2142        	l32i	a4, a1, 0x23c
400de8d2:	442b      	addi.n	a4, a4, 2
400de8d4:	8f6142        	s32i	a4, a1, 0x23c
400de8d7:	8e2142        	l32i	a4, a1, 0x238
400de8da:	441b      	addi.n	a4, a4, 1
400de8dc:	8e6142        	s32i	a4, a1, 0x238
400de8df:	0a84e6        	bgei	a4, 8, 400de8ed <_svfprintf_r+0x25d5>
400de8e2:	9f2142        	l32i	a4, a1, 0x27c
400de8e5:	448b      	addi.n	a4, a4, 8
400de8e7:	9f6142        	s32i	a4, a1, 0x27c
400de8ea:	000806        	j	400de90e <_svfprintf_r+0x25f6>
400de8ed:	34a2c2        	movi	a12, 0x234
400de8f0:	a421b2        	l32i	a11, a1, 0x290
400de8f3:	a321a2        	l32i	a10, a1, 0x28c
400de8f6:	80cc10        	add	a12, a12, a1
400de8f9:	07c1a5        	call8	400e6514 <__ssprint_r>
400de8fc:	002a16        	beqz	a10, 400de902 <_svfprintf_r+0x25ea>
400de8ff:	02b446        	j	400df3d4 <_svfprintf_r+0x30bc>
400de902:	e4a142        	movi	a4, 0x1e4
400de905:	10c182        	addi	a8, a1, 16
400de908:	808840        	add	a8, a8, a4
400de90b:	9f6182        	s32i	a8, a1, 0x27c
400de90e:	b22192        	l32i	a9, a1, 0x2c8
400de911:	02e926        	beqi	a9, 128, 400de917 <_svfprintf_r+0x25ff>
400de914:	002c46        	j	400de9c9 <_svfprintf_r+0x26b1>
400de917:	a92192        	l32i	a9, a1, 0x2a4
400de91a:	ac2182        	l32i	a8, a1, 0x2b0
400de91d:	c04890        	sub	a4, a8, a9
400de920:	091c      	movi.n	a9, 16
400de922:	5414e6        	bgei	a4, 1, 400de97a <_svfprintf_r+0x2662>
400de925:	002806        	j	400de9c9 <_svfprintf_r+0x26b1>
400de928:	9f21a2        	l32i	a10, a1, 0x27c
400de92b:	0a89      	s32i.n	a8, a10, 0
400de92d:	8f2182        	l32i	a8, a1, 0x23c
400de930:	1a99      	s32i.n	a9, a10, 4
400de932:	10c882        	addi	a8, a8, 16
400de935:	8f6182        	s32i	a8, a1, 0x23c
400de938:	8e2182        	l32i	a8, a1, 0x238
400de93b:	881b      	addi.n	a8, a8, 1
400de93d:	8e6182        	s32i	a8, a1, 0x238
400de940:	0c88e6        	bgei	a8, 8, 400de950 <_svfprintf_r+0x2638>
400de943:	9f2182        	l32i	a8, a1, 0x27c
400de946:	888b      	addi.n	a8, a8, 8
400de948:	9f6182        	s32i	a8, a1, 0x27c
400de94b:	000a06        	j	400de977 <_svfprintf_r+0x265f>
400de94e:	c20000        	quou	a0, a0, a0
400de951:	b234a2        	lsi	f10, a4, 0x2c8
400de954:	a2a421        	l32r	a2, 400c73e4 <_rtc_text_end+0x73e4>
400de957:	10a321        	l32r	a2, 400a2be4 <_iram_end+0x15090>
400de95a:	80cc      	bnez.n	a0, 400de966 <_svfprintf_r+0x264e>
400de95c:	b76192        	s32i	a9, a1, 0x2dc
400de95f:	07bb65        	call8	400e6514 <__ssprint_r>
400de962:	b72192        	l32i	a9, a1, 0x2dc
400de965:	002a16        	beqz	a10, 400de96b <_svfprintf_r+0x2653>
400de968:	029a06        	j	400df3d4 <_svfprintf_r+0x30bc>
400de96b:	e4a182        	movi	a8, 0x1e4
400de96e:	10c1a2        	addi	a10, a1, 16
400de971:	80aa80        	add	a10, a10, a8
400de974:	9f61a2        	s32i	a10, a1, 0x27c
400de977:	f0c442        	addi	a4, a4, -16
400de97a:	c78081        	l32r	a8, 400d077c <_flash_cache_start+0x764>
400de97d:	a72947        	blt	a9, a4, 400de928 <_svfprintf_r+0x2610>
400de980:	9f2192        	l32i	a9, a1, 0x27c
400de983:	1949      	s32i.n	a4, a9, 4
400de985:	0989      	s32i.n	a8, a9, 0
400de987:	8f2192        	l32i	a9, a1, 0x23c
400de98a:	494a      	add.n	a4, a9, a4
400de98c:	8f6142        	s32i	a4, a1, 0x23c
400de98f:	8e2142        	l32i	a4, a1, 0x238
400de992:	441b      	addi.n	a4, a4, 1
400de994:	8e6142        	s32i	a4, a1, 0x238
400de997:	0a84e6        	bgei	a4, 8, 400de9a5 <_svfprintf_r+0x268d>
400de99a:	9f2142        	l32i	a4, a1, 0x27c
400de99d:	448b      	addi.n	a4, a4, 8
400de99f:	9f6142        	s32i	a4, a1, 0x27c
400de9a2:	0008c6        	j	400de9c9 <_svfprintf_r+0x26b1>
400de9a5:	10c182        	addi	a8, a1, 16
400de9a8:	24a292        	movi	a9, 0x224
400de9ab:	a421b2        	l32i	a11, a1, 0x290
400de9ae:	a321a2        	l32i	a10, a1, 0x28c
400de9b1:	80c890        	add	a12, a8, a9
400de9b4:	07b5e5        	call8	400e6514 <__ssprint_r>
400de9b7:	002a16        	beqz	a10, 400de9bd <_svfprintf_r+0x26a5>
400de9ba:	028586        	j	400df3d4 <_svfprintf_r+0x30bc>
400de9bd:	e4a142        	movi	a4, 0x1e4
400de9c0:	10c182        	addi	a8, a1, 16
400de9c3:	808840        	add	a8, a8, a4
400de9c6:	9f6182        	s32i	a8, a1, 0x27c
400de9c9:	a52192        	l32i	a9, a1, 0x294
400de9cc:	081c      	movi.n	a8, 16
400de9ce:	c06690        	sub	a6, a6, a9
400de9d1:	5516e6        	bgei	a6, 1, 400dea2a <_svfprintf_r+0x2712>
400de9d4:	002846        	j	400dea79 <_svfprintf_r+0x2761>
400de9d7:	219200        	srai	a9, a0, 2
400de9da:	9f          	.byte 0x9f
400de9db:	0949      	s32i.n	a4, a9, 0
400de9dd:	8f2142        	l32i	a4, a1, 0x23c
400de9e0:	1989      	s32i.n	a8, a9, 4
400de9e2:	10c442        	addi	a4, a4, 16
400de9e5:	8f6142        	s32i	a4, a1, 0x23c
400de9e8:	8e2142        	l32i	a4, a1, 0x238
400de9eb:	441b      	addi.n	a4, a4, 1
400de9ed:	8e6142        	s32i	a4, a1, 0x238
400de9f0:	0c84e6        	bgei	a4, 8, 400dea00 <_svfprintf_r+0x26e8>
400de9f3:	9f2142        	l32i	a4, a1, 0x27c
400de9f6:	448b      	addi.n	a4, a4, 8
400de9f8:	9f6142        	s32i	a4, a1, 0x27c
400de9fb:	000a06        	j	400dea27 <_svfprintf_r+0x270f>
400de9fe:	c20000        	quou	a0, a0, a0
400dea01:	b234a2        	lsi	f10, a4, 0x2c8
400dea04:	a2a421        	l32r	a2, 400c7494 <_rtc_text_end+0x7494>
400dea07:	10a321        	l32r	a2, 400a2c94 <_iram_end+0x15140>
400dea0a:	80cc      	bnez.n	a0, 400dea16 <_svfprintf_r+0x26fe>
400dea0c:	b86182        	s32i	a8, a1, 0x2e0
400dea0f:	07b065        	call8	400e6514 <__ssprint_r>
400dea12:	b82182        	l32i	a8, a1, 0x2e0
400dea15:	002a16        	beqz	a10, 400dea1b <_svfprintf_r+0x2703>
400dea18:	026e06        	j	400df3d4 <_svfprintf_r+0x30bc>
400dea1b:	e4a142        	movi	a4, 0x1e4
400dea1e:	10c192        	addi	a9, a1, 16
400dea21:	809940        	add	a9, a9, a4
400dea24:	9f6192        	s32i	a9, a1, 0x27c
400dea27:	f0c662        	addi	a6, a6, -16
400dea2a:	c75441        	l32r	a4, 400d077c <_flash_cache_start+0x764>
400dea2d:	a72867        	blt	a8, a6, 400de9d8 <_svfprintf_r+0x26c0>
400dea30:	9f2182        	l32i	a8, a1, 0x27c
400dea33:	0849      	s32i.n	a4, a8, 0
400dea35:	8f2142        	l32i	a4, a1, 0x23c
400dea38:	1869      	s32i.n	a6, a8, 4
400dea3a:	646a      	add.n	a6, a4, a6
400dea3c:	8e2142        	l32i	a4, a1, 0x238
400dea3f:	8f6162        	s32i	a6, a1, 0x23c
400dea42:	441b      	addi.n	a4, a4, 1
400dea44:	8e6142        	s32i	a4, a1, 0x238
400dea47:	0a84e6        	bgei	a4, 8, 400dea55 <_svfprintf_r+0x273d>
400dea4a:	9f2142        	l32i	a4, a1, 0x27c
400dea4d:	448b      	addi.n	a4, a4, 8
400dea4f:	9f6142        	s32i	a4, a1, 0x27c
400dea52:	0008c6        	j	400dea79 <_svfprintf_r+0x2761>
400dea55:	10c162        	addi	a6, a1, 16
400dea58:	24a282        	movi	a8, 0x224
400dea5b:	a421b2        	l32i	a11, a1, 0x290
400dea5e:	a321a2        	l32i	a10, a1, 0x28c
400dea61:	80c680        	add	a12, a6, a8
400dea64:	07aae5        	call8	400e6514 <__ssprint_r>
400dea67:	002a16        	beqz	a10, 400dea6d <_svfprintf_r+0x2755>
400dea6a:	025986        	j	400df3d4 <_svfprintf_r+0x30bc>
400dea6d:	e4a142        	movi	a4, 0x1e4
400dea70:	10c192        	addi	a9, a1, 16
400dea73:	809940        	add	a9, a9, a4
400dea76:	9f6192        	s32i	a9, a1, 0x27c
400dea79:	a02142        	l32i	a4, a1, 0x280
400dea7c:	2ae487        	bbsi	a4, 8, 400deaaa <_svfprintf_r+0x2792>
400dea7f:	a52192        	l32i	a9, a1, 0x294
400dea82:	8f2162        	l32i	a6, a1, 0x23c
400dea85:	8e2122        	l32i	a2, a1, 0x238
400dea88:	9f2152        	l32i	a5, a1, 0x27c
400dea8b:	a12182        	l32i	a8, a1, 0x284
400dea8e:	669a      	add.n	a6, a6, a9
400dea90:	221b      	addi.n	a2, a2, 1
400dea92:	0589      	s32i.n	a8, a5, 0
400dea94:	1599      	s32i.n	a9, a5, 4
400dea96:	8f6162        	s32i	a6, a1, 0x23c
400dea99:	8e6122        	s32i	a2, a1, 0x238
400dea9c:	0282a6        	blti	a2, 8, 400deaa2 <_svfprintf_r+0x278a>
400dea9f:	01ff86        	j	400df2a1 <_svfprintf_r+0x2f89>
400deaa2:	558b      	addi.n	a5, a5, 8
400deaa4:	9f6152        	s32i	a5, a1, 0x27c
400deaa7:	020486        	j	400df2bd <_svfprintf_r+0x2fa5>
400deaaa:	a62162        	l32i	a6, a1, 0x298
400deaad:	65a042        	movi	a4, 101
400deab0:	022467        	blt	a4, a6, 400deab6 <_svfprintf_r+0x279e>
400deab3:	018e46        	j	400df0f0 <_svfprintf_r+0x2dd8>
400deab6:	c569c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400deab9:	c568d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400deabc:	aa21a2        	l32i	a10, a1, 0x2a8
400deabf:	ab21b2        	l32i	a11, a1, 0x2ac
400deac2:	c73281        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400deac5:	0008e0        	callx8	a8
400deac8:	109a56        	bnez	a10, 400debd5 <_svfprintf_r+0x28bd>
400deacb:	c72d21        	l32r	a2, 400d0780 <_flash_cache_start+0x768>
400deace:	9f2182        	l32i	a8, a1, 0x27c
400dead1:	0829      	s32i.n	a2, a8, 0
400dead3:	120c      	movi.n	a2, 1
400dead5:	1829      	s32i.n	a2, a8, 4
400dead7:	8f2122        	l32i	a2, a1, 0x23c
400deada:	221b      	addi.n	a2, a2, 1
400deadc:	8f6122        	s32i	a2, a1, 0x23c
400deadf:	8e2122        	l32i	a2, a1, 0x238
400deae2:	221b      	addi.n	a2, a2, 1
400deae4:	8e6122        	s32i	a2, a1, 0x238
400deae7:	0982e6        	bgei	a2, 8, 400deaf4 <_svfprintf_r+0x27dc>
400deaea:	888b      	addi.n	a8, a8, 8
400deaec:	9f6182        	s32i	a8, a1, 0x27c
400deaef:	0007c6        	j	400deb12 <_svfprintf_r+0x27fa>
400deaf2:	c20000        	quou	a0, a0, a0
400deaf5:	b234a2        	lsi	f10, a4, 0x2c8
400deaf8:	a2a421        	l32r	a2, 400c7588 <_rtc_text_end+0x7588>
400deafb:	1aa321        	l32r	a2, 400a5588 <_iram_end+0x17a34>
400deafe:	65cc      	bnez.n	a5, 400deb08 <_svfprintf_r+0x27f0>
400deb00:	8c07a1        	l32r	a10, 400c1b1c <_rtc_text_end+0x1b1c>
400deb03:	061a      	add.n	a0, a6, a1
400deb05:	220233        	lsi	f3, a2, 136
400deb08:	32e4a1        	l32r	a10, 400ab698 <_iram_end+0x1db44>
400deb0b:	2a10c1        	l32r	a12, 400a934c <_iram_end+0x1b7f8>
400deb0e:	613233        	lsi	f3, a2, 0x184
400deb11:	9f          	.byte 0x9f
400deb12:	952122        	l32i	a2, a1, 0x254
400deb15:	a72142        	l32i	a4, a1, 0x29c
400deb18:	082247        	blt	a2, a4, 400deb24 <_svfprintf_r+0x280c>
400deb1b:	a02152        	l32i	a5, a1, 0x280
400deb1e:	02e507        	bbsi	a5, 0, 400deb24 <_svfprintf_r+0x280c>
400deb21:	01e606        	j	400df2bd <_svfprintf_r+0x2fa5>
400deb24:	af2192        	l32i	a9, a1, 0x2bc
400deb27:	8f2122        	l32i	a2, a1, 0x23c
400deb2a:	9f2162        	l32i	a6, a1, 0x27c
400deb2d:	229a      	add.n	a2, a2, a9
400deb2f:	8f6122        	s32i	a2, a1, 0x23c
400deb32:	8e2122        	l32i	a2, a1, 0x238
400deb35:	b12182        	l32i	a8, a1, 0x2c4
400deb38:	221b      	addi.n	a2, a2, 1
400deb3a:	0689      	s32i.n	a8, a6, 0
400deb3c:	1699      	s32i.n	a9, a6, 4
400deb3e:	8e6122        	s32i	a2, a1, 0x238
400deb41:	0782e6        	bgei	a2, 8, 400deb4c <_svfprintf_r+0x2834>
400deb44:	668b      	addi.n	a6, a6, 8
400deb46:	9f6162        	s32i	a6, a1, 0x27c
400deb49:	000806        	j	400deb6d <_svfprintf_r+0x2855>
400deb4c:	34a2c2        	movi	a12, 0x234
400deb4f:	a421b2        	l32i	a11, a1, 0x290
400deb52:	a321a2        	l32i	a10, a1, 0x28c
400deb55:	80cc10        	add	a12, a12, a1
400deb58:	079ba5        	call8	400e6514 <__ssprint_r>
400deb5b:	002a16        	beqz	a10, 400deb61 <_svfprintf_r+0x2849>
400deb5e:	021c86        	j	400df3d4 <_svfprintf_r+0x30bc>
400deb61:	e4a122        	movi	a2, 0x1e4
400deb64:	10c132        	addi	a3, a1, 16
400deb67:	803320        	add	a3, a3, a2
400deb6a:	9f6132        	s32i	a3, a1, 0x27c
400deb6d:	a72142        	l32i	a4, a1, 0x29c
400deb70:	240b      	addi.n	a2, a4, -1
400deb72:	041c      	movi.n	a4, 16
400deb74:	5412e6        	bgei	a2, 1, 400debcc <_svfprintf_r+0x28b4>
400deb77:	01d086        	j	400df2bd <_svfprintf_r+0x2fa5>
400deb7a:	520000        	lsi	f0, a0, 0x148
400deb7d:	629f21        	l32r	a2, 400b75fc <_iram_end+0x29aa8>
400deb80:	3910c1        	l32r	a12, 400acfc0 <_iram_end+0x1f46c>
400deb83:	213205        	call0	400ffea4 <_etext+0x139d3>
400deb86:	8f          	.byte 0x8f
400deb87:	1549      	s32i.n	a4, a5, 4
400deb89:	10c332        	addi	a3, a3, 16
400deb8c:	8f6132        	s32i	a3, a1, 0x23c
400deb8f:	8e2132        	l32i	a3, a1, 0x238
400deb92:	02d652        	addmi	a5, a6, 0x200
400deb95:	331b      	addi.n	a3, a3, 1
400deb97:	8e6132        	s32i	a3, a1, 0x238
400deb9a:	0a83e6        	bgei	a3, 8, 400deba8 <_svfprintf_r+0x2890>
400deb9d:	9f2182        	l32i	a8, a1, 0x27c
400deba0:	888b      	addi.n	a8, a8, 8
400deba2:	9f6182        	s32i	a8, a1, 0x27c
400deba5:	000806        	j	400debc9 <_svfprintf_r+0x28b1>
400deba8:	34a2c2        	movi	a12, 0x234
400debab:	a421b2        	l32i	a11, a1, 0x290
400debae:	a321a2        	l32i	a10, a1, 0x28c
400debb1:	80cc10        	add	a12, a12, a1
400debb4:	0795e5        	call8	400e6514 <__ssprint_r>
400debb7:	002a16        	beqz	a10, 400debbd <_svfprintf_r+0x28a5>
400debba:	020586        	j	400df3d4 <_svfprintf_r+0x30bc>
400debbd:	e4a132        	movi	a3, 0x1e4
400debc0:	10c192        	addi	a9, a1, 16
400debc3:	809930        	add	a9, a9, a3
400debc6:	9f6192        	s32i	a9, a1, 0x27c
400debc9:	f0c222        	addi	a2, a2, -16
400debcc:	c6ec31        	l32r	a3, 400d077c <_flash_cache_start+0x764>
400debcf:	a92427        	blt	a4, a2, 400deb7c <_svfprintf_r+0x2864>
400debd2:	013906        	j	400df0ba <_svfprintf_r+0x2da2>
400debd5:	952142        	l32i	a4, a1, 0x254
400debd8:	0214a6        	blti	a4, 1, 400debde <_svfprintf_r+0x28c6>
400debdb:	004d46        	j	400ded14 <_svfprintf_r+0x29fc>
400debde:	c6e821        	l32r	a2, 400d0780 <_flash_cache_start+0x768>
400debe1:	9f2142        	l32i	a4, a1, 0x27c
400debe4:	10c152        	addi	a5, a1, 16
400debe7:	0429      	s32i.n	a2, a4, 0
400debe9:	120c      	movi.n	a2, 1
400debeb:	1429      	s32i.n	a2, a4, 4
400debed:	8f2122        	l32i	a2, a1, 0x23c
400debf0:	221b      	addi.n	a2, a2, 1
400debf2:	8f6122        	s32i	a2, a1, 0x23c
400debf5:	8e2122        	l32i	a2, a1, 0x238
400debf8:	221b      	addi.n	a2, a2, 1
400debfa:	8e6122        	s32i	a2, a1, 0x238
400debfd:	0782e6        	bgei	a2, 8, 400dec08 <_svfprintf_r+0x28f0>
400dec00:	448b      	addi.n	a4, a4, 8
400dec02:	9f6142        	s32i	a4, a1, 0x27c
400dec05:	0006c6        	j	400dec24 <_svfprintf_r+0x290c>
400dec08:	34a2c2        	movi	a12, 0x234
400dec0b:	a421b2        	l32i	a11, a1, 0x290
400dec0e:	a321a2        	l32i	a10, a1, 0x28c
400dec11:	cc1a      	add.n	a12, a12, a1
400dec13:	079025        	call8	400e6514 <__ssprint_r>
400dec16:	7baa56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400dec19:	e4a122        	movi	a2, 0x1e4
400dec1c:	10c162        	addi	a6, a1, 16
400dec1f:	662a      	add.n	a6, a6, a2
400dec21:	9f6162        	s32i	a6, a1, 0x27c
400dec24:	952122        	l32i	a2, a1, 0x254
400dec27:	a72182        	l32i	a8, a1, 0x29c
400dec2a:	202820        	or	a2, a8, a2
400dec2d:	008256        	bnez	a2, 400dec39 <_svfprintf_r+0x2921>
400dec30:	a02192        	l32i	a9, a1, 0x280
400dec33:	02e907        	bbsi	a9, 0, 400dec39 <_svfprintf_r+0x2921>
400dec36:	01a0c6        	j	400df2bd <_svfprintf_r+0x2fa5>
400dec39:	9f2122        	l32i	a2, a1, 0x27c
400dec3c:	af2142        	l32i	a4, a1, 0x2bc
400dec3f:	b12132        	l32i	a3, a1, 0x2c4
400dec42:	1249      	s32i.n	a4, a2, 4
400dec44:	0239      	s32i.n	a3, a2, 0
400dec46:	8f2122        	l32i	a2, a1, 0x23c
400dec49:	10c152        	addi	a5, a1, 16
400dec4c:	224a      	add.n	a2, a2, a4
400dec4e:	8f6122        	s32i	a2, a1, 0x23c
400dec51:	8e2122        	l32i	a2, a1, 0x238
400dec54:	221b      	addi.n	a2, a2, 1
400dec56:	8e6122        	s32i	a2, a1, 0x238
400dec59:	0782e6        	bgei	a2, 8, 400dec64 <_svfprintf_r+0x294c>
400dec5c:	9f2162        	l32i	a6, a1, 0x27c
400dec5f:	268b      	addi.n	a2, a6, 8
400dec61:	000686        	j	400dec7f <_svfprintf_r+0x2967>
400dec64:	34a2c2        	movi	a12, 0x234
400dec67:	a421b2        	l32i	a11, a1, 0x290
400dec6a:	a321a2        	l32i	a10, a1, 0x28c
400dec6d:	80cc10        	add	a12, a12, a1
400dec70:	078a25        	call8	400e6514 <__ssprint_r>
400dec73:	75da56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400dec76:	e4a122        	movi	a2, 0x1e4
400dec79:	10c182        	addi	a8, a1, 16
400dec7c:	802820        	add	a2, a8, a2
400dec7f:	952132        	l32i	a3, a1, 0x254
400dec82:	10a042        	movi	a4, 16
400dec85:	603030        	neg	a3, a3
400dec88:	3813e6        	bgei	a3, 1, 400decc4 <_svfprintf_r+0x29ac>
400dec8b:	001e46        	j	400ded08 <_svfprintf_r+0x29f0>
400dec8e:	520000        	lsi	f0, a0, 0x148
400dec91:	498f21        	l32r	a2, 400b12d0 <_iram_end+0x2377c>
400dec94:	c55212        	s16i	a1, a2, 0x18a
400dec97:	615210        	lsi	f1, a2, 0x184
400dec9a:	8f          	.byte 0x8f
400dec9b:	8e2152        	l32i	a5, a1, 0x238
400dec9e:	228b      	addi.n	a2, a2, 8
400deca0:	551b      	addi.n	a5, a5, 1
400deca2:	8e6152        	s32i	a5, a1, 0x238
400deca5:	1885a6        	blti	a5, 8, 400decc1 <_svfprintf_r+0x29a9>
400deca8:	34a2c2        	movi	a12, 0x234
400decab:	a421b2        	l32i	a11, a1, 0x290
400decae:	a321a2        	l32i	a10, a1, 0x28c
400decb1:	cc1a      	add.n	a12, a12, a1
400decb3:	078625        	call8	400e6514 <__ssprint_r>
400decb6:	71aa56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400decb9:	e4a122        	movi	a2, 0x1e4
400decbc:	10c1a2        	addi	a10, a1, 16
400decbf:	2a2a      	add.n	a2, a10, a2
400decc1:	f0c332        	addi	a3, a3, -16
400decc4:	c6ae51        	l32r	a5, 400d077c <_flash_cache_start+0x764>
400decc7:	006252        	s32i	a5, a2, 0
400decca:	c22437        	blt	a4, a3, 400dec90 <_svfprintf_r+0x2978>
400deccd:	8f2152        	l32i	a5, a1, 0x23c
400decd0:	016232        	s32i	a3, a2, 4
400decd3:	803530        	add	a3, a5, a3
400decd6:	8f6132        	s32i	a3, a1, 0x23c
400decd9:	8e2132        	l32i	a3, a1, 0x238
400decdc:	10c1e2        	addi	a14, a1, 16
400decdf:	331b      	addi.n	a3, a3, 1
400dece1:	8e6132        	s32i	a3, a1, 0x238
400dece4:	02de42        	addmi	a4, a14, 0x200
400dece7:	228b      	addi.n	a2, a2, 8
400dece9:	1b83a6        	blti	a3, 8, 400ded08 <_svfprintf_r+0x29f0>
400decec:	10c122        	addi	a2, a1, 16
400decef:	24a232        	movi	a3, 0x224
400decf2:	a421b2        	l32i	a11, a1, 0x290
400decf5:	a321a2        	l32i	a10, a1, 0x28c
400decf8:	c23a      	add.n	a12, a2, a3
400decfa:	0781a5        	call8	400e6514 <__ssprint_r>
400decfd:	6d3a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400ded00:	e4a122        	movi	a2, 0x1e4
400ded03:	10c142        	addi	a4, a1, 16
400ded06:	242a      	add.n	a2, a4, a2
400ded08:	a12182        	l32i	a8, a1, 0x284
400ded0b:	a72192        	l32i	a9, a1, 0x29c
400ded0e:	0289      	s32i.n	a8, a2, 0
400ded10:	015a86        	j	400df27e <_svfprintf_r+0x2f66>
400ded13:	216200        	srai	a6, a0, 2
400ded16:	4260a7        	bbci	a0, 10, 400ded5c <_svfprintf_r+0x2a44>
400ded19:	14a643        	lsi	f4, a6, 80
400ded1c:	216243        	lsi	f4, a2, 132
400ded1f:	8f          	.byte 0x8f
400ded20:	9f2182        	l32i	a8, a1, 0x27c
400ded23:	664a      	add.n	a6, a6, a4
400ded25:	8f6162        	s32i	a6, a1, 0x23c
400ded28:	8e2162        	l32i	a6, a1, 0x238
400ded2b:	a12192        	l32i	a9, a1, 0x284
400ded2e:	661b      	addi.n	a6, a6, 1
400ded30:	0899      	s32i.n	a9, a8, 0
400ded32:	1849      	s32i.n	a4, a8, 4
400ded34:	8e6162        	s32i	a6, a1, 0x238
400ded37:	0a86e6        	bgei	a6, 8, 400ded45 <_svfprintf_r+0x2a2d>
400ded3a:	9f2162        	l32i	a6, a1, 0x27c
400ded3d:	668b      	addi.n	a6, a6, 8
400ded3f:	9f6162        	s32i	a6, a1, 0x27c
400ded42:	0006c6        	j	400ded61 <_svfprintf_r+0x2a49>
400ded45:	34a2c2        	movi	a12, 0x234
400ded48:	a421b2        	l32i	a11, a1, 0x290
400ded4b:	a321a2        	l32i	a10, a1, 0x28c
400ded4e:	cc1a      	add.n	a12, a12, a1
400ded50:	077c25        	call8	400e6514 <__ssprint_r>
400ded53:	67da56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400ded56:	e4a162        	movi	a6, 0x1e4
400ded59:	10c182        	addi	a8, a1, 16
400ded5c:	886a      	add.n	a8, a8, a6
400ded5e:	9f6182        	s32i	a8, a1, 0x27c
400ded61:	060c      	movi.n	a6, 0
400ded63:	534460        	max	a4, a4, a6
400ded66:	c04240        	sub	a4, a2, a4
400ded69:	081c      	movi.n	a8, 16
400ded6b:	5214e6        	bgei	a4, 1, 400dedc1 <_svfprintf_r+0x2aa9>
400ded6e:	0026c6        	j	400dee0d <_svfprintf_r+0x2af5>
400ded71:	000000        	ill
400ded74:	9f2192        	l32i	a9, a1, 0x27c
400ded77:	0969      	s32i.n	a6, a9, 0
400ded79:	8f2162        	l32i	a6, a1, 0x23c
400ded7c:	1989      	s32i.n	a8, a9, 4
400ded7e:	10c662        	addi	a6, a6, 16
400ded81:	8f6162        	s32i	a6, a1, 0x23c
400ded84:	8e2162        	l32i	a6, a1, 0x238
400ded87:	661b      	addi.n	a6, a6, 1
400ded89:	8e6162        	s32i	a6, a1, 0x238
400ded8c:	0c86e6        	bgei	a6, 8, 400ded9c <_svfprintf_r+0x2a84>
400ded8f:	9f2162        	l32i	a6, a1, 0x27c
400ded92:	668b      	addi.n	a6, a6, 8
400ded94:	9f6162        	s32i	a6, a1, 0x27c
400ded97:	0008c6        	j	400dedbe <_svfprintf_r+0x2aa6>
400ded9a:	c20000        	quou	a0, a0, a0
400ded9d:	b234a2        	lsi	f10, a4, 0x2c8
400deda0:	a2a421        	l32r	a2, 400c7830 <_rtc_text_end+0x7830>
400deda3:	1aa321        	l32r	a2, 400a5830 <_iram_end+0x17cdc>
400deda6:	82cc      	bnez.n	a2, 400dedb2 <_svfprintf_r+0x2a9a>
400deda8:	a5b861        	l32r	a6, 400c8488 <_rtc_text_end+0x8488>
400dedab:	820776        	bf	b7, 400ded31 <_svfprintf_r+0x2a19>
400dedae:	56b821        	l32r	a2, 400b4890 <_iram_end+0x26d3c>
400dedb1:	620a      	add.n	a6, a2, a0
400dedb3:	e4a162        	movi	a6, 0x1e4
400dedb6:	10c192        	addi	a9, a1, 16
400dedb9:	996a      	add.n	a9, a9, a6
400dedbb:	9f6192        	s32i	a9, a1, 0x27c
400dedbe:	f0c442        	addi	a4, a4, -16
400dedc1:	c66e61        	l32r	a6, 400d077c <_flash_cache_start+0x764>
400dedc4:	ac2847        	blt	a8, a4, 400ded74 <_svfprintf_r+0x2a5c>
400dedc7:	9f2182        	l32i	a8, a1, 0x27c
400dedca:	1849      	s32i.n	a4, a8, 4
400dedcc:	0869      	s32i.n	a6, a8, 0
400dedce:	8f2182        	l32i	a8, a1, 0x23c
400dedd1:	484a      	add.n	a4, a8, a4
400dedd3:	8f6142        	s32i	a4, a1, 0x23c
400dedd6:	8e2142        	l32i	a4, a1, 0x238
400dedd9:	441b      	addi.n	a4, a4, 1
400deddb:	8e6142        	s32i	a4, a1, 0x238
400dedde:	0a84e6        	bgei	a4, 8, 400dedec <_svfprintf_r+0x2ad4>
400dede1:	9f2142        	l32i	a4, a1, 0x27c
400dede4:	448b      	addi.n	a4, a4, 8
400dede6:	9f6142        	s32i	a4, a1, 0x27c
400dede9:	000806        	j	400dee0d <_svfprintf_r+0x2af5>
400dedec:	10c162        	addi	a6, a1, 16
400dedef:	24a282        	movi	a8, 0x224
400dedf2:	a421b2        	l32i	a11, a1, 0x290
400dedf5:	a321a2        	l32i	a10, a1, 0x28c
400dedf8:	80c680        	add	a12, a6, a8
400dedfb:	0771a5        	call8	400e6514 <__ssprint_r>
400dedfe:	5d2a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400dee01:	e4a142        	movi	a4, 0x1e4
400dee04:	10c192        	addi	a9, a1, 16
400dee07:	809940        	add	a9, a9, a4
400dee0a:	9f6192        	s32i	a9, a1, 0x27c
400dee0d:	a12142        	l32i	a4, a1, 0x284
400dee10:	a02162        	l32i	a6, a1, 0x280
400dee13:	802420        	add	a2, a4, a2
400dee16:	e4a142        	movi	a4, 0x1e4
400dee19:	0266a7        	bbci	a6, 10, 400dee1f <_svfprintf_r+0x2b07>
400dee1c:	005906        	j	400def84 <_svfprintf_r+0x2c6c>
400dee1f:	005f86        	j	400defa1 <_svfprintf_r+0x2c89>
400dee22:	338c      	beqz.n	a3, 400dee29 <_svfprintf_r+0x2b11>
400dee24:	330b      	addi.n	a3, a3, -1
400dee26:	000246        	j	400dee33 <_svfprintf_r+0x2b1b>
400dee29:	ad2182        	l32i	a8, a1, 0x2b4
400dee2c:	550b      	addi.n	a5, a5, -1
400dee2e:	880b      	addi.n	a8, a8, -1
400dee30:	ad6182        	s32i	a8, a1, 0x2b4
400dee33:	b02182        	l32i	a8, a1, 0x2c0
400dee36:	9f2192        	l32i	a9, a1, 0x27c
400dee39:	b32162        	l32i	a6, a1, 0x2cc
400dee3c:	1989      	s32i.n	a8, a9, 4
400dee3e:	0969      	s32i.n	a6, a9, 0
400dee40:	10c192        	addi	a9, a1, 16
400dee43:	02d982        	addmi	a8, a9, 0x200
400dee46:	8f2162        	l32i	a6, a1, 0x23c
400dee49:	b02192        	l32i	a9, a1, 0x2c0
400dee4c:	669a      	add.n	a6, a6, a9
400dee4e:	b869      	s32i.n	a6, a8, 44
400dee50:	a868      	l32i.n	a6, a8, 40
400dee52:	661b      	addi.n	a6, a6, 1
400dee54:	a869      	s32i.n	a6, a8, 40
400dee56:	0a86e6        	bgei	a6, 8, 400dee64 <_svfprintf_r+0x2b4c>
400dee59:	9f2162        	l32i	a6, a1, 0x27c
400dee5c:	668b      	addi.n	a6, a6, 8
400dee5e:	9f6162        	s32i	a6, a1, 0x27c
400dee61:	000686        	j	400dee7f <_svfprintf_r+0x2b67>
400dee64:	34a2c2        	movi	a12, 0x234
400dee67:	a421b2        	l32i	a11, a1, 0x290
400dee6a:	a321a2        	l32i	a10, a1, 0x28c
400dee6d:	80cc10        	add	a12, a12, a1
400dee70:	076a25        	call8	400e6514 <__ssprint_r>
400dee73:	55da56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400dee76:	10c182        	addi	a8, a1, 16
400dee79:	808840        	add	a8, a8, a4
400dee7c:	9f6182        	s32i	a8, a1, 0x27c
400dee7f:	a12192        	l32i	a9, a1, 0x284
400dee82:	a72182        	l32i	a8, a1, 0x29c
400dee85:	806980        	add	a6, a9, a8
400dee88:	ad2192        	l32i	a9, a1, 0x2b4
400dee8b:	c06620        	sub	a6, a6, a2
400dee8e:	000982        	l8ui	a8, a9, 0
400dee91:	436680        	min	a6, a6, a8
400dee94:	3d16a6        	blti	a6, 1, 400deed5 <_svfprintf_r+0x2bbd>
400dee97:	9f2182        	l32i	a8, a1, 0x27c
400dee9a:	0829      	s32i.n	a2, a8, 0
400dee9c:	1869      	s32i.n	a6, a8, 4
400dee9e:	8f2182        	l32i	a8, a1, 0x23c
400deea1:	886a      	add.n	a8, a8, a6
400deea3:	8f6182        	s32i	a8, a1, 0x23c
400deea6:	8e2182        	l32i	a8, a1, 0x238
400deea9:	881b      	addi.n	a8, a8, 1
400deeab:	8e6182        	s32i	a8, a1, 0x238
400deeae:	0a88e6        	bgei	a8, 8, 400deebc <_svfprintf_r+0x2ba4>
400deeb1:	9f2182        	l32i	a8, a1, 0x27c
400deeb4:	888b      	addi.n	a8, a8, 8
400deeb6:	9f6182        	s32i	a8, a1, 0x27c
400deeb9:	000606        	j	400deed5 <_svfprintf_r+0x2bbd>
400deebc:	34a2c2        	movi	a12, 0x234
400deebf:	a421b2        	l32i	a11, a1, 0x290
400deec2:	a321a2        	l32i	a10, a1, 0x28c
400deec5:	cc1a      	add.n	a12, a12, a1
400deec7:	0764e5        	call8	400e6514 <__ssprint_r>
400deeca:	506a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400deecd:	10c192        	addi	a9, a1, 16
400deed0:	994a      	add.n	a9, a9, a4
400deed2:	9f6192        	s32i	a9, a1, 0x27c
400deed5:	ad2192        	l32i	a9, a1, 0x2b4
400deed8:	080c      	movi.n	a8, 0
400deeda:	536680        	max	a6, a6, a8
400deedd:	000982        	l8ui	a8, a9, 0
400deee0:	091c      	movi.n	a9, 16
400deee2:	c06860        	sub	a6, a8, a6
400deee5:	4c16e6        	bgei	a6, 1, 400def35 <_svfprintf_r+0x2c1d>
400deee8:	0023c6        	j	400def7b <_svfprintf_r+0x2c63>
400deeeb:	21a200        	srai	a10, a0, 2
400deeee:	9f          	.byte 0x9f
400deeef:	0a89      	s32i.n	a8, a10, 0
400deef1:	8f2182        	l32i	a8, a1, 0x23c
400deef4:	1a99      	s32i.n	a9, a10, 4
400deef6:	10c882        	addi	a8, a8, 16
400deef9:	8f6182        	s32i	a8, a1, 0x23c
400deefc:	8e2182        	l32i	a8, a1, 0x238
400deeff:	881b      	addi.n	a8, a8, 1
400def01:	8e6182        	s32i	a8, a1, 0x238
400def04:	0888e6        	bgei	a8, 8, 400def10 <_svfprintf_r+0x2bf8>
400def07:	9f2182        	l32i	a8, a1, 0x27c
400def0a:	888b      	addi.n	a8, a8, 8
400def0c:	0007c6        	j	400def2f <_svfprintf_r+0x2c17>
400def0f:	a2c200        	muluh	a12, a2, a0
400def12:	21b234        	lsi	f3, a2, 132
400def15:	21a2a4        	lsi	f10, a2, 132
400def18:	cc1aa3        	lsi	f10, a10, 0x330
400def1b:	b76192        	s32i	a9, a1, 0x2dc
400def1e:	201110        	or	a1, a1, a1
400def21:	075f25        	call8	400e6514 <__ssprint_r>
400def24:	b72192        	l32i	a9, a1, 0x2dc
400def27:	4a9a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400def2a:	10c182        	addi	a8, a1, 16
400def2d:	884a      	add.n	a8, a8, a4
400def2f:	9f6182        	s32i	a8, a1, 0x27c
400def32:	f0c662        	addi	a6, a6, -16
400def35:	c61181        	l32r	a8, 400d077c <_flash_cache_start+0x764>
400def38:	b02967        	blt	a9, a6, 400deeec <_svfprintf_r+0x2bd4>
400def3b:	9f2192        	l32i	a9, a1, 0x27c
400def3e:	1969      	s32i.n	a6, a9, 4
400def40:	0989      	s32i.n	a8, a9, 0
400def42:	8f2192        	l32i	a9, a1, 0x23c
400def45:	696a      	add.n	a6, a9, a6
400def47:	8f6162        	s32i	a6, a1, 0x23c
400def4a:	8e2162        	l32i	a6, a1, 0x238
400def4d:	661b      	addi.n	a6, a6, 1
400def4f:	8e6162        	s32i	a6, a1, 0x238
400def52:	0786e6        	bgei	a6, 8, 400def5d <_svfprintf_r+0x2c45>
400def55:	9f2162        	l32i	a6, a1, 0x27c
400def58:	668b      	addi.n	a6, a6, 8
400def5a:	000686        	j	400def78 <_svfprintf_r+0x2c60>
400def5d:	10c182        	addi	a8, a1, 16
400def60:	24a292        	movi	a9, 0x224
400def63:	a421b2        	l32i	a11, a1, 0x290
400def66:	a321a2        	l32i	a10, a1, 0x28c
400def69:	80c890        	add	a12, a8, a9
400def6c:	075a65        	call8	400e6514 <__ssprint_r>
400def6f:	461a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400def72:	10c162        	addi	a6, a1, 16
400def75:	806640        	add	a6, a6, a4
400def78:	9f6162        	s32i	a6, a1, 0x27c
400def7b:	ad2182        	l32i	a8, a1, 0x2b4
400def7e:	000862        	l8ui	a6, a8, 0
400def81:	802260        	add	a2, a2, a6
400def84:	316f50        	srai	a6, a5, 31
400def87:	c06650        	sub	a6, a6, a5
400def8a:	e94696        	bltz	a6, 400dee22 <_svfprintf_r+0x2b0a>
400def8d:	316f30        	srai	a6, a3, 31
400def90:	c06630        	sub	a6, a6, a3
400def93:	e8b696        	bltz	a6, 400dee22 <_svfprintf_r+0x2b0a>
400def96:	a12192        	l32i	a9, a1, 0x284
400def99:	a72142        	l32i	a4, a1, 0x29c
400def9c:	394a      	add.n	a3, a9, a4
400def9e:	632230        	minu	a2, a2, a3
400defa1:	952132        	l32i	a3, a1, 0x254
400defa4:	a72152        	l32i	a5, a1, 0x29c
400defa7:	052357        	blt	a3, a5, 400defb0 <_svfprintf_r+0x2c98>
400defaa:	a02162        	l32i	a6, a1, 0x280
400defad:	476607        	bbci	a6, 0, 400deff8 <_svfprintf_r+0x2ce0>
400defb0:	9f2182        	l32i	a8, a1, 0x27c
400defb3:	af2132        	l32i	a3, a1, 0x2bc
400defb6:	af2162        	l32i	a6, a1, 0x2bc
400defb9:	1839      	s32i.n	a3, a8, 4
400defbb:	8f2132        	l32i	a3, a1, 0x23c
400defbe:	b12192        	l32i	a9, a1, 0x2c4
400defc1:	336a      	add.n	a3, a3, a6
400defc3:	8f6132        	s32i	a3, a1, 0x23c
400defc6:	8e2132        	l32i	a3, a1, 0x238
400defc9:	0899      	s32i.n	a9, a8, 0
400defcb:	331b      	addi.n	a3, a3, 1
400defcd:	10c152        	addi	a5, a1, 16
400defd0:	8e6132        	s32i	a3, a1, 0x238
400defd3:	02d542        	addmi	a4, a5, 0x200
400defd6:	888b      	addi.n	a8, a8, 8
400defd8:	1983a6        	blti	a3, 8, 400deff5 <_svfprintf_r+0x2cdd>
400defdb:	34a2c2        	movi	a12, 0x234
400defde:	a421b2        	l32i	a11, a1, 0x290
400defe1:	a321a2        	l32i	a10, a1, 0x28c
400defe4:	cc1a      	add.n	a12, a12, a1
400defe6:	0752e5        	call8	400e6514 <__ssprint_r>
400defe9:	3e7a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400defec:	e4a132        	movi	a3, 0x1e4
400defef:	10c182        	addi	a8, a1, 16
400deff2:	808830        	add	a8, a8, a3
400deff5:	9f6182        	s32i	a8, a1, 0x27c
400deff8:	a72132        	l32i	a3, a1, 0x29c
400deffb:	a12192        	l32i	a9, a1, 0x284
400deffe:	a72152        	l32i	a5, a1, 0x29c
400df001:	493a      	add.n	a4, a9, a3
400df003:	952132        	l32i	a3, a1, 0x254
400df006:	c04420        	sub	a4, a4, a2
400df009:	c03530        	sub	a3, a5, a3
400df00c:	434430        	min	a4, a4, a3
400df00f:	3d14a6        	blti	a4, 1, 400df050 <_svfprintf_r+0x2d38>
400df012:	9f2162        	l32i	a6, a1, 0x27c
400df015:	0629      	s32i.n	a2, a6, 0
400df017:	8f2122        	l32i	a2, a1, 0x23c
400df01a:	1649      	s32i.n	a4, a6, 4
400df01c:	224a      	add.n	a2, a2, a4
400df01e:	8f6122        	s32i	a2, a1, 0x23c
400df021:	8e2122        	l32i	a2, a1, 0x238
400df024:	221b      	addi.n	a2, a2, 1
400df026:	8e6122        	s32i	a2, a1, 0x238
400df029:	0782e6        	bgei	a2, 8, 400df034 <_svfprintf_r+0x2d1c>
400df02c:	668b      	addi.n	a6, a6, 8
400df02e:	9f6162        	s32i	a6, a1, 0x27c
400df031:	0006c6        	j	400df050 <_svfprintf_r+0x2d38>
400df034:	34a2c2        	movi	a12, 0x234
400df037:	a421b2        	l32i	a11, a1, 0x290
400df03a:	a321a2        	l32i	a10, a1, 0x28c
400df03d:	cc1a      	add.n	a12, a12, a1
400df03f:	074d65        	call8	400e6514 <__ssprint_r>
400df042:	38ea56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df045:	e4a122        	movi	a2, 0x1e4
400df048:	10c192        	addi	a9, a1, 16
400df04b:	992a      	add.n	a9, a9, a2
400df04d:	9f6192        	s32i	a9, a1, 0x27c
400df050:	020c      	movi.n	a2, 0
400df052:	534420        	max	a4, a4, a2
400df055:	a72132        	l32i	a3, a1, 0x29c
400df058:	952122        	l32i	a2, a1, 0x254
400df05b:	c02320        	sub	a2, a3, a2
400df05e:	c02240        	sub	a2, a2, a4
400df061:	041c      	movi.n	a4, 16
400df063:	4d12e6        	bgei	a2, 1, 400df0b4 <_svfprintf_r+0x2d9c>
400df066:	0094c6        	j	400df2bd <_svfprintf_r+0x2fa5>
400df069:	9f2152        	l32i	a5, a1, 0x27c
400df06c:	10c162        	addi	a6, a1, 16
400df06f:	0539      	s32i.n	a3, a5, 0
400df071:	8f2132        	l32i	a3, a1, 0x23c
400df074:	1549      	s32i.n	a4, a5, 4
400df076:	10c332        	addi	a3, a3, 16
400df079:	8f6132        	s32i	a3, a1, 0x23c
400df07c:	8e2132        	l32i	a3, a1, 0x238
400df07f:	02d652        	addmi	a5, a6, 0x200
400df082:	331b      	addi.n	a3, a3, 1
400df084:	8e6132        	s32i	a3, a1, 0x238
400df087:	0a83e6        	bgei	a3, 8, 400df095 <_svfprintf_r+0x2d7d>
400df08a:	9f2182        	l32i	a8, a1, 0x27c
400df08d:	888b      	addi.n	a8, a8, 8
400df08f:	9f6182        	s32i	a8, a1, 0x27c
400df092:	0006c6        	j	400df0b1 <_svfprintf_r+0x2d99>
400df095:	34a2c2        	movi	a12, 0x234
400df098:	a421b2        	l32i	a11, a1, 0x290
400df09b:	a321a2        	l32i	a10, a1, 0x28c
400df09e:	cc1a      	add.n	a12, a12, a1
400df0a0:	074725        	call8	400e6514 <__ssprint_r>
400df0a3:	32da56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df0a6:	e4a132        	movi	a3, 0x1e4
400df0a9:	10c192        	addi	a9, a1, 16
400df0ac:	993a      	add.n	a9, a9, a3
400df0ae:	9f6192        	s32i	a9, a1, 0x27c
400df0b1:	f0c222        	addi	a2, a2, -16
400df0b4:	c5b231        	l32r	a3, 400d077c <_flash_cache_start+0x764>
400df0b7:	ae2427        	blt	a4, a2, 400df069 <_svfprintf_r+0x2d51>
400df0ba:	9f2142        	l32i	a4, a1, 0x27c
400df0bd:	10c152        	addi	a5, a1, 16
400df0c0:	1429      	s32i.n	a2, a4, 4
400df0c2:	0439      	s32i.n	a3, a4, 0
400df0c4:	8f2142        	l32i	a4, a1, 0x23c
400df0c7:	242a      	add.n	a2, a4, a2
400df0c9:	8f6122        	s32i	a2, a1, 0x23c
400df0cc:	8e2122        	l32i	a2, a1, 0x238
400df0cf:	221b      	addi.n	a2, a2, 1
400df0d1:	8e6122        	s32i	a2, a1, 0x238
400df0d4:	0c82e6        	bgei	a2, 8, 400df0e4 <_svfprintf_r+0x2dcc>
400df0d7:	9f2162        	l32i	a6, a1, 0x27c
400df0da:	668b      	addi.n	a6, a6, 8
400df0dc:	9f6162        	s32i	a6, a1, 0x27c
400df0df:	007686        	j	400df2bd <_svfprintf_r+0x2fa5>
400df0e2:	820000        	mull	a0, a0, a0
400df0e5:	9210c1        	l32r	a12, 400c3928 <_rtc_text_end+0x3928>
400df0e8:	9a24a2        	l32i	a10, a4, 0x268
400df0eb:	86c8      	l32i.n	a12, a6, 32
400df0ed:	006d      	mov.n	a6, a0
400df0ef:	214200        	srai	a4, a0, 2
400df0f2:	120ca7        	bnone	a12, a10, 400df108 <_svfprintf_r+0x2df0>
400df0f5:	0824e6        	bgei	a4, 2, 400df101 <_svfprintf_r+0x2de9>
400df0f8:	a02152        	l32i	a5, a1, 0x280
400df0fb:	02e507        	bbsi	a5, 0, 400df101 <_svfprintf_r+0x2de9>
400df0fe:	005286        	j	400df24c <_svfprintf_r+0x2f34>
400df101:	9f2162        	l32i	a6, a1, 0x27c
400df104:	a12182        	l32i	a8, a1, 0x284
400df107:	1629      	s32i.n	a2, a6, 4
400df109:	8f2122        	l32i	a2, a1, 0x23c
400df10c:	0689      	s32i.n	a8, a6, 0
400df10e:	221b      	addi.n	a2, a2, 1
400df110:	8f6122        	s32i	a2, a1, 0x23c
400df113:	8e2122        	l32i	a2, a1, 0x238
400df116:	221b      	addi.n	a2, a2, 1
400df118:	8e6122        	s32i	a2, a1, 0x238
400df11b:	0582e6        	bgei	a2, 8, 400df124 <_svfprintf_r+0x2e0c>
400df11e:	268b      	addi.n	a2, a6, 8
400df120:	000646        	j	400df13d <_svfprintf_r+0x2e25>
400df123:	a2c200        	muluh	a12, a2, a0
400df126:	21b234        	lsi	f3, a2, 132
400df129:	21a2a4        	lsi	f10, a2, 132
400df12c:	cc1aa3        	lsi	f10, a10, 0x330
400df12f:	073e65        	call8	400e6514 <__ssprint_r>
400df132:	29ea56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df135:	e4a122        	movi	a2, 0x1e4
400df138:	10c1a2        	addi	a10, a1, 16
400df13b:	2a2a      	add.n	a2, a10, a2
400df13d:	b12132        	l32i	a3, a1, 0x2c4
400df140:	af2162        	l32i	a6, a1, 0x2bc
400df143:	0239      	s32i.n	a3, a2, 0
400df145:	8f2132        	l32i	a3, a1, 0x23c
400df148:	af2142        	l32i	a4, a1, 0x2bc
400df14b:	336a      	add.n	a3, a3, a6
400df14d:	8f6132        	s32i	a3, a1, 0x23c
400df150:	8e2132        	l32i	a3, a1, 0x238
400df153:	1249      	s32i.n	a4, a2, 4
400df155:	331b      	addi.n	a3, a3, 1
400df157:	10c152        	addi	a5, a1, 16
400df15a:	8e6132        	s32i	a3, a1, 0x238
400df15d:	02d542        	addmi	a4, a5, 0x200
400df160:	228b      	addi.n	a2, a2, 8
400df162:	1883a6        	blti	a3, 8, 400df17e <_svfprintf_r+0x2e66>
400df165:	34a2c2        	movi	a12, 0x234
400df168:	a421b2        	l32i	a11, a1, 0x290
400df16b:	a321a2        	l32i	a10, a1, 0x28c
400df16e:	cc1a      	add.n	a12, a12, a1
400df170:	073a25        	call8	400e6514 <__ssprint_r>
400df173:	25da56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df176:	e4a122        	movi	a2, 0x1e4
400df179:	10c182        	addi	a8, a1, 16
400df17c:	282a      	add.n	a2, a8, a2
400df17e:	c3b7c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400df181:	c3b6d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400df184:	aa21a2        	l32i	a10, a1, 0x2a8
400df187:	ab21b2        	l32i	a11, a1, 0x2ac
400df18a:	c58481        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400df18d:	0008e0        	callx8	a8
400df190:	a72192        	l32i	a9, a1, 0x29c
400df193:	390b      	addi.n	a3, a9, -1
400df195:	047a16        	beqz	a10, 400df1e0 <_svfprintf_r+0x2ec8>
400df198:	1239      	s32i.n	a3, a2, 4
400df19a:	8f2132        	l32i	a3, a1, 0x23c
400df19d:	a72152        	l32i	a5, a1, 0x29c
400df1a0:	330b      	addi.n	a3, a3, -1
400df1a2:	335a      	add.n	a3, a3, a5
400df1a4:	a12182        	l32i	a8, a1, 0x284
400df1a7:	8f6132        	s32i	a3, a1, 0x23c
400df1aa:	8e2132        	l32i	a3, a1, 0x238
400df1ad:	481b      	addi.n	a4, a8, 1
400df1af:	331b      	addi.n	a3, a3, 1
400df1b1:	0249      	s32i.n	a4, a2, 0
400df1b3:	10c192        	addi	a9, a1, 16
400df1b6:	8e6132        	s32i	a3, a1, 0x238
400df1b9:	02d942        	addmi	a4, a9, 0x200
400df1bc:	228b      	addi.n	a2, a2, 8
400df1be:	0283e6        	bgei	a3, 8, 400df1c4 <_svfprintf_r+0x2eac>
400df1c1:	002bc6        	j	400df274 <_svfprintf_r+0x2f5c>
400df1c4:	34a2c2        	movi	a12, 0x234
400df1c7:	cc1a      	add.n	a12, a12, a1
400df1c9:	a421b2        	l32i	a11, a1, 0x290
400df1cc:	a321a2        	l32i	a10, a1, 0x28c
400df1cf:	073465        	call8	400e6514 <__ssprint_r>
400df1d2:	1fea56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df1d5:	f4a162        	movi	a6, 0x1f4
400df1d8:	216a      	add.n	a2, a1, a6
400df1da:	002586        	j	400df274 <_svfprintf_r+0x2f5c>
400df1dd:	000000        	ill
400df1e0:	041c      	movi.n	a4, 16
400df1e2:	3613e6        	bgei	a3, 1, 400df21c <_svfprintf_r+0x2f04>
400df1e5:	0022c6        	j	400df274 <_svfprintf_r+0x2f5c>
400df1e8:	8f2152        	l32i	a5, a1, 0x23c
400df1eb:	1249      	s32i.n	a4, a2, 4
400df1ed:	10c552        	addi	a5, a5, 16
400df1f0:	8f6152        	s32i	a5, a1, 0x23c
400df1f3:	8e2152        	l32i	a5, a1, 0x238
400df1f6:	228b      	addi.n	a2, a2, 8
400df1f8:	551b      	addi.n	a5, a5, 1
400df1fa:	8e6152        	s32i	a5, a1, 0x238
400df1fd:	1885a6        	blti	a5, 8, 400df219 <_svfprintf_r+0x2f01>
400df200:	34a2c2        	movi	a12, 0x234
400df203:	a421b2        	l32i	a11, a1, 0x290
400df206:	a321a2        	l32i	a10, a1, 0x28c
400df209:	cc1a      	add.n	a12, a12, a1
400df20b:	0730a5        	call8	400e6514 <__ssprint_r>
400df20e:	1c2a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df211:	e4a122        	movi	a2, 0x1e4
400df214:	10c192        	addi	a9, a1, 16
400df217:	292a      	add.n	a2, a9, a2
400df219:	f0c332        	addi	a3, a3, -16
400df21c:	c55851        	l32r	a5, 400d077c <_flash_cache_start+0x764>
400df21f:	0259      	s32i.n	a5, a2, 0
400df221:	c32437        	blt	a4, a3, 400df1e8 <_svfprintf_r+0x2ed0>
400df224:	8f2152        	l32i	a5, a1, 0x23c
400df227:	1239      	s32i.n	a3, a2, 4
400df229:	353a      	add.n	a3, a5, a3
400df22b:	8f6132        	s32i	a3, a1, 0x23c
400df22e:	8e2132        	l32i	a3, a1, 0x238
400df231:	10c1a2        	addi	a10, a1, 16
400df234:	331b      	addi.n	a3, a3, 1
400df236:	8e6132        	s32i	a3, a1, 0x238
400df239:	02da42        	addmi	a4, a10, 0x200
400df23c:	228b      	addi.n	a2, a2, 8
400df23e:	3283a6        	blti	a3, 8, 400df274 <_svfprintf_r+0x2f5c>
400df241:	10c1e2        	addi	a14, a1, 16
400df244:	24a222        	movi	a2, 0x224
400df247:	ce2a      	add.n	a12, a14, a2
400df249:	ffdf06        	j	400df1c9 <_svfprintf_r+0x2eb1>
400df24c:	9f2132        	l32i	a3, a1, 0x27c
400df24f:	a12142        	l32i	a4, a1, 0x284
400df252:	1329      	s32i.n	a2, a3, 4
400df254:	8f2122        	l32i	a2, a1, 0x23c
400df257:	0349      	s32i.n	a4, a3, 0
400df259:	221b      	addi.n	a2, a2, 1
400df25b:	8f6122        	s32i	a2, a1, 0x23c
400df25e:	8e2122        	l32i	a2, a1, 0x238
400df261:	10c152        	addi	a5, a1, 16
400df264:	221b      	addi.n	a2, a2, 1
400df266:	8e6122        	s32i	a2, a1, 0x238
400df269:	0282a6        	blti	a2, 8, 400df26f <_svfprintf_r+0x2f57>
400df26c:	ffd506        	j	400df1c4 <_svfprintf_r+0x2eac>
400df26f:	9f2162        	l32i	a6, a1, 0x27c
400df272:	268b      	addi.n	a2, a6, 8
400df274:	47a282        	movi	a8, 0x247
400df277:	318a      	add.n	a3, a1, a8
400df279:	b42192        	l32i	a9, a1, 0x2d0
400df27c:	0239      	s32i.n	a3, a2, 0
400df27e:	1299      	s32i.n	a9, a2, 4
400df280:	8f2132        	l32i	a3, a1, 0x23c
400df283:	10c1a2        	addi	a10, a1, 16
400df286:	339a      	add.n	a3, a3, a9
400df288:	8f6132        	s32i	a3, a1, 0x23c
400df28b:	8e2132        	l32i	a3, a1, 0x238
400df28e:	02da42        	addmi	a4, a10, 0x200
400df291:	331b      	addi.n	a3, a3, 1
400df293:	8e6132        	s32i	a3, a1, 0x238
400df296:	0783e6        	bgei	a3, 8, 400df2a1 <_svfprintf_r+0x2f89>
400df299:	228b      	addi.n	a2, a2, 8
400df29b:	9f6122        	s32i	a2, a1, 0x27c
400df29e:	0006c6        	j	400df2bd <_svfprintf_r+0x2fa5>
400df2a1:	34a2c2        	movi	a12, 0x234
400df2a4:	cc1a      	add.n	a12, a12, a1
400df2a6:	a421b2        	l32i	a11, a1, 0x290
400df2a9:	a321a2        	l32i	a10, a1, 0x28c
400df2ac:	072665        	call8	400e6514 <__ssprint_r>
400df2af:	121a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df2b2:	e4a122        	movi	a2, 0x1e4
400df2b5:	10c132        	addi	a3, a1, 16
400df2b8:	332a      	add.n	a3, a3, a2
400df2ba:	9f6132        	s32i	a3, a1, 0x27c
400df2bd:	a02142        	l32i	a4, a1, 0x280
400df2c0:	1ce427        	bbsi	a4, 2, 400df2e0 <_svfprintf_r+0x2fc8>
400df2c3:	ac2152        	l32i	a5, a1, 0x2b0
400df2c6:	a92162        	l32i	a6, a1, 0x2a4
400df2c9:	ae2182        	l32i	a8, a1, 0x2b8
400df2cc:	532560        	max	a2, a5, a6
400df2cf:	882a      	add.n	a8, a8, a2
400df2d1:	8f2122        	l32i	a2, a1, 0x23c
400df2d4:	ae6182        	s32i	a8, a1, 0x2b8
400df2d7:	09b216        	beqz	a2, 400df376 <_svfprintf_r+0x305e>
400df2da:	002c46        	j	400df38f <_svfprintf_r+0x3077>
400df2dd:	000000        	ill
400df2e0:	ac2192        	l32i	a9, a1, 0x2b0
400df2e3:	a921e2        	l32i	a14, a1, 0x2a4
400df2e6:	c029e0        	sub	a2, a9, a14
400df2e9:	d612a6        	blti	a2, 1, 400df2c3 <_svfprintf_r+0x2fab>
400df2ec:	041c      	movi.n	a4, 16
400df2ee:	001286        	j	400df33c <_svfprintf_r+0x3024>
400df2f1:	9f2152        	l32i	a5, a1, 0x27c
400df2f4:	10c162        	addi	a6, a1, 16
400df2f7:	0539      	s32i.n	a3, a5, 0
400df2f9:	8f2132        	l32i	a3, a1, 0x23c
400df2fc:	1549      	s32i.n	a4, a5, 4
400df2fe:	10c332        	addi	a3, a3, 16
400df301:	8f6132        	s32i	a3, a1, 0x23c
400df304:	8e2132        	l32i	a3, a1, 0x238
400df307:	02d652        	addmi	a5, a6, 0x200
400df30a:	331b      	addi.n	a3, a3, 1
400df30c:	8e6132        	s32i	a3, a1, 0x238
400df30f:	0a83e6        	bgei	a3, 8, 400df31d <_svfprintf_r+0x3005>
400df312:	9f2182        	l32i	a8, a1, 0x27c
400df315:	888b      	addi.n	a8, a8, 8
400df317:	9f6182        	s32i	a8, a1, 0x27c
400df31a:	0006c6        	j	400df339 <_svfprintf_r+0x3021>
400df31d:	34a2c2        	movi	a12, 0x234
400df320:	a421b2        	l32i	a11, a1, 0x290
400df323:	a321a2        	l32i	a10, a1, 0x28c
400df326:	cc1a      	add.n	a12, a12, a1
400df328:	071ea5        	call8	400e6514 <__ssprint_r>
400df32b:	0a5a56        	bnez	a10, 400df3d4 <_svfprintf_r+0x30bc>
400df32e:	e4a132        	movi	a3, 0x1e4
400df331:	10c192        	addi	a9, a1, 16
400df334:	993a      	add.n	a9, a9, a3
400df336:	9f6192        	s32i	a9, a1, 0x27c
400df339:	f0c222        	addi	a2, a2, -16
400df33c:	c50f31        	l32r	a3, 400d0778 <_flash_cache_start+0x760>
400df33f:	ae2427        	blt	a4, a2, 400df2f1 <_svfprintf_r+0x2fd9>
400df342:	9f2142        	l32i	a4, a1, 0x27c
400df345:	10c152        	addi	a5, a1, 16
400df348:	1429      	s32i.n	a2, a4, 4
400df34a:	0439      	s32i.n	a3, a4, 0
400df34c:	8f2142        	l32i	a4, a1, 0x23c
400df34f:	242a      	add.n	a2, a4, a2
400df351:	8f6122        	s32i	a2, a1, 0x23c
400df354:	8e2122        	l32i	a2, a1, 0x238
400df357:	221b      	addi.n	a2, a2, 1
400df359:	8e6122        	s32i	a2, a1, 0x238
400df35c:	0282e6        	bgei	a2, 8, 400df362 <_svfprintf_r+0x304a>
400df35f:	ffd806        	j	400df2c3 <_svfprintf_r+0x2fab>
400df362:	24a262        	movi	a6, 0x224
400df365:	a421b2        	l32i	a11, a1, 0x290
400df368:	a321a2        	l32i	a10, a1, 0x28c
400df36b:	c56a      	add.n	a12, a5, a6
400df36d:	071a65        	call8	400e6514 <__ssprint_r>
400df370:	f4fa16        	beqz	a10, 400df2c3 <_svfprintf_r+0x2fab>
400df373:	001746        	j	400df3d4 <_svfprintf_r+0x30bc>
400df376:	030c      	movi.n	a3, 0
400df378:	a22192        	l32i	a9, a1, 0x288
400df37b:	8e6132        	s32i	a3, a1, 0x238
400df37e:	10c182        	addi	a8, a1, 16
400df381:	e4a122        	movi	a2, 0x1e4
400df384:	1c9937        	bne	a9, a3, 400df3a4 <_svfprintf_r+0x308c>
400df387:	382a      	add.n	a3, a8, a2
400df389:	9f6132        	s32i	a3, a1, 0x27c
400df38c:	f40b86        	j	400dc3be <_svfprintf_r+0xa6>
400df38f:	34a2c2        	movi	a12, 0x234
400df392:	a421b2        	l32i	a11, a1, 0x290
400df395:	a321a2        	l32i	a10, a1, 0x28c
400df398:	cc1a      	add.n	a12, a12, a1
400df39a:	0717a5        	call8	400e6514 <__ssprint_r>
400df39d:	fd5a16        	beqz	a10, 400df376 <_svfprintf_r+0x305e>
400df3a0:	000c06        	j	400df3d4 <_svfprintf_r+0x30bc>
400df3a3:	21b200        	srai	a11, a0, 2
400df3a6:	21a2a2        	movi	a10, 0x221
400df3a9:	c142a3        	ssi	f10, a2, 0x304
400df3ac:	442a10        	extui	a2, a1, 10, 5
400df3af:	a54e65        	call8	40084894 <_free_r>
400df3b2:	9f6142        	s32i	a4, a1, 0x27c
400df3b5:	f40146        	j	400dc3be <_svfprintf_r+0xa6>
400df3b8:	8f2122        	l32i	a2, a1, 0x23c
400df3bb:	22ac      	beqz.n	a2, 400df3e1 <_svfprintf_r+0x30c9>
400df3bd:	10c152        	addi	a5, a1, 16
400df3c0:	24a2c2        	movi	a12, 0x224
400df3c3:	a421b2        	l32i	a11, a1, 0x290
400df3c6:	a321a2        	l32i	a10, a1, 0x28c
400df3c9:	c5ca      	add.n	a12, a5, a12
400df3cb:	0714a5        	call8	400e6514 <__ssprint_r>
400df3ce:	0003c6        	j	400df3e1 <_svfprintf_r+0x30c9>
400df3d1:	000000        	ill
400df3d4:	a22162        	l32i	a6, a1, 0x288
400df3d7:	668c      	beqz.n	a6, 400df3e1 <_svfprintf_r+0x30c9>
400df3d9:	a321a2        	l32i	a10, a1, 0x28c
400df3dc:	06bd      	mov.n	a11, a6
400df3de:	a54b65        	call8	40084894 <_free_r>
400df3e1:	a42182        	l32i	a8, a1, 0x290
400df3e4:	ae2192        	l32i	a9, a1, 0x2b8
400df3e7:	061822        	l16ui	a2, a8, 12
400df3ea:	f37c      	movi.n	a3, -1
400df3ec:	042620        	extui	a2, a2, 6, 1
400df3ef:	939320        	movnez	a9, a3, a2
400df3f2:	092d      	mov.n	a2, a9
400df3f4:	f01d      	retw.n
400df3f6:	000000        	ill
400df3f9:	972182        	l32i	a8, a1, 0x25c
400df3fc:	671b      	addi.n	a6, a7, 1
400df3fe:	02a787        	bge	a7, a8, 400df404 <_svfprintf_r+0x30ec>
400df401:	f45d06        	j	400dc579 <_svfprintf_r+0x261>
400df404:	f45e86        	j	400dc582 <_svfprintf_r+0x26a>
400df407:	216200        	srai	a6, a0, 2
400df40a:	871b97        	beq	a11, a9, 400df395 <_svfprintf_r+0x307d>
400df40d:	02a767        	bge	a7, a6, 400df413 <_svfprintf_r+0x30fb>
400df410:	f4a546        	j	400dc6a9 <_svfprintf_r+0x391>
400df413:	f4a6c6        	j	400dc6b2 <_svfprintf_r+0x39a>
	...

400df418 <get_arg$isra$0>:
400df418:	008136        	entry	a1, 64
400df41b:	102182        	l32i	a8, a1, 64
400df41e:	2129      	s32i.n	a2, a1, 8
400df420:	3159      	s32i.n	a5, a1, 12
400df422:	0528      	l32i.n	a2, a5, 0
400df424:	2198      	l32i.n	a9, a1, 8
400df426:	0858      	l32i.n	a5, a8, 0
400df428:	933550        	movnez	a3, a5, a5
400df42b:	0199      	s32i.n	a9, a1, 0
400df42d:	00d3c6        	j	400df780 <get_arg$isra$0+0x368>
400df430:	1b0000        	un.s	b0, f0, f0
400df433:	035233        	lsi	f3, a2, 12
400df436:	551600        	extui	a1, a0, 22, 6
400df439:	c58200        	extui	a8, a0, 18, 13
400df43c:	56db      	addi.n	a5, a6, 13
400df43e:	ff18      	l32i.n	a1, a15, 60
400df440:	349516        	beqz	a5, 400df78d <get_arg$isra$0+0x375>
400df443:	050c      	movi.n	a5, 0
400df445:	05ed      	mov.n	a14, a5
400df447:	f97c      	movi.n	a9, -1
400df449:	05dd      	mov.n	a13, a5
400df44b:	1159      	s32i.n	a5, a1, 4
400df44d:	03ad      	mov.n	a10, a3
400df44f:	c4b7c1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400df452:	000a82        	l8ui	a8, a10, 0
400df455:	331b      	addi.n	a3, a3, 1
400df457:	bc8a      	add.n	a11, a12, a8
400df459:	000bc2        	l8ui	a12, a11, 0
400df45c:	11b8      	l32i.n	a11, a1, 4
400df45e:	b0fbb0        	addx8	a15, a11, a11
400df461:	c4b3b1        	l32r	a11, 400d0730 <_flash_cache_start+0x718>
400df464:	bbfa      	add.n	a11, a11, a15
400df466:	bbca      	add.n	a11, a11, a12
400df468:	000bb2        	l8ui	a11, a11, 0
400df46b:	11b9      	s32i.n	a11, a1, 4
400df46d:	c4b1b1        	l32r	a11, 400d0734 <_flash_cache_start+0x71c>
400df470:	fbfa      	add.n	a15, a11, a15
400df472:	ffca      	add.n	a15, a15, a12
400df474:	000fb2        	l8ui	a11, a15, 0
400df477:	bb0b      	addi.n	a11, a11, -1
400df479:	74b0b0        	extui	a11, a11, 0, 8
400df47c:	028bb6        	bltui	a11, 8, 400df482 <get_arg$isra$0+0x6a>
400df47f:	00bcc6        	j	400df776 <get_arg$isra$0+0x35e>
400df482:	c4cac1        	l32r	a12, 400d07ac <_flash_cache_start+0x794>
400df485:	a0bbc0        	addx4	a11, a11, a12
400df488:	0bb8      	l32i.n	a11, a11, 0
400df48a:	000ba0        	jx	a11
400df48d:	9a0c      	movi.n	a10, 9
400df48f:	00b5c6        	j	400df76a <get_arg$isra$0+0x352>
400df492:	6aa0b2        	movi	a11, 106
400df495:	3018b7        	beq	a8, a11, 400df4c9 <get_arg$isra$0+0xb1>
400df498:	0d3b87        	bltu	a11, a8, 400df4a9 <get_arg$isra$0+0x91>
400df49b:	cb4c      	movi.n	a11, 76
400df49d:	2318b7        	beq	a8, a11, 400df4c4 <get_arg$isra$0+0xac>
400df4a0:	68a0b2        	movi	a11, 104
400df4a3:	2a98b7        	bne	a8, a11, 400df4d1 <get_arg$isra$0+0xb9>
400df4a6:	00b306        	j	400df776 <get_arg$isra$0+0x35e>
400df4a9:	74a0b2        	movi	a11, 116
400df4ac:	0298b7        	bne	a8, a11, 400df4b2 <get_arg$isra$0+0x9a>
400df4af:	00b0c6        	j	400df776 <get_arg$isra$0+0x35e>
400df4b2:	7aa0b2        	movi	a11, 122
400df4b5:	0298b7        	bne	a8, a11, 400df4bb <get_arg$isra$0+0xa3>
400df4b8:	00ae86        	j	400df776 <get_arg$isra$0+0x35e>
400df4bb:	71a0b2        	movi	a11, 113
400df4be:	0718b7        	beq	a8, a11, 400df4c9 <get_arg$isra$0+0xb1>
400df4c1:	000306        	j	400df4d1 <get_arg$isra$0+0xb9>
400df4c4:	880c      	movi.n	a8, 8
400df4c6:	000046        	j	400df4cb <get_arg$isra$0+0xb3>
400df4c9:	082c      	movi.n	a8, 32
400df4cb:	20dd80        	or	a13, a13, a8
400df4ce:	00a906        	j	400df776 <get_arg$isra$0+0x35e>
400df4d1:	010ab2        	l8ui	a11, a10, 1
400df4d4:	6ca082        	movi	a8, 108
400df4d7:	099b87        	bne	a11, a8, 400df4e4 <get_arg$isra$0+0xcc>
400df4da:	032c      	movi.n	a3, 32
400df4dc:	20dd30        	or	a13, a13, a3
400df4df:	3a2b      	addi.n	a3, a10, 2
400df4e1:	00a446        	j	400df776 <get_arg$isra$0+0x35e>
400df4e4:	081c      	movi.n	a8, 16
400df4e6:	fff846        	j	400df4cb <get_arg$isra$0+0xb3>
400df4e9:	bfc882        	addi	a8, a8, -65
400df4ec:	748080        	extui	a8, a8, 0, 8
400df4ef:	7a3c      	movi.n	a10, 55
400df4f1:	442020        	extui	a2, a2, 0, 5
400df4f4:	253a87        	bltu	a10, a8, 400df51d <get_arg$isra$0+0x105>
400df4f7:	c4aea1        	l32r	a10, 400d07b0 <_flash_cache_start+0x798>
400df4fa:	a088a0        	addx4	a8, a8, a10
400df4fd:	0888      	l32i.n	a8, a8, 0
400df4ff:	0008a0        	jx	a8
400df502:	026d47        	bbci	a13, 4, 400df508 <get_arg$isra$0+0xf0>
400df505:	00d806        	j	400df869 <get_arg$isra$0+0x451>
400df508:	026d57        	bbci	a13, 5, 400df50e <get_arg$isra$0+0xf6>
400df50b:	00dec6        	j	400df88a <get_arg$isra$0+0x472>
400df50e:	00db46        	j	400df87f <get_arg$isra$0+0x467>
400df511:	026d47        	bbci	a13, 4, 400df517 <get_arg$isra$0+0xff>
400df514:	00d186        	j	400df85e <get_arg$isra$0+0x446>
400df517:	00d906        	j	400df87f <get_arg$isra$0+0x467>
400df51a:	000000        	ill
400df51d:	070926        	beqi	a9, -1, 400df528 <get_arg$isra$0+0x110>
400df520:	a08970        	addx4	a8, a9, a7
400df523:	0859      	s32i.n	a5, a8, 0
400df525:	009346        	j	400df776 <get_arg$isra$0+0x35e>
400df528:	0275b6        	bltui	a5, 7, 400df52e <get_arg$isra$0+0x116>
400df52b:	0091c6        	j	400df776 <get_arg$isra$0+0x35e>
400df52e:	c4a181        	l32r	a8, 400d07b4 <_flash_cache_start+0x79c>
400df531:	a08580        	addx4	a8, a5, a8
400df534:	0888      	l32i.n	a8, a8, 0
400df536:	0008a0        	jx	a8
400df539:	2458      	l32i.n	a5, a4, 8
400df53b:	881c      	movi.n	a8, 24
400df53d:	954b      	addi.n	a9, a5, 4
400df53f:	2499      	s32i.n	a9, a4, 8
400df541:	a21b      	addi.n	a10, a2, 1
400df543:	b02260        	addx8	a2, a2, a6
400df546:	072897        	blt	a8, a9, 400df551 <get_arg$isra$0+0x139>
400df549:	1488      	l32i.n	a8, a4, 4
400df54b:	0002c6        	j	400df55a <get_arg$isra$0+0x142>
400df54e:	000000        	ill
400df551:	032857        	blt	a8, a5, 400df558 <get_arg$isra$0+0x140>
400df554:	452c      	movi.n	a5, 36
400df556:	2459      	s32i.n	a5, a4, 8
400df558:	0488      	l32i.n	a8, a4, 0
400df55a:	2458      	l32i.n	a5, a4, 8
400df55c:	f97c      	movi.n	a9, -1
400df55e:	585a      	add.n	a5, a8, a5
400df560:	fcc552        	addi	a5, a5, -4
400df563:	0558      	l32i.n	a5, a5, 0
400df565:	0259      	s32i.n	a5, a2, 0
400df567:	0a2d      	mov.n	a2, a10
400df569:	150c      	movi.n	a5, 1
400df56b:	0081c6        	j	400df776 <get_arg$isra$0+0x35e>
400df56e:	2458      	l32i.n	a5, a4, 8
400df570:	887c      	movi.n	a8, -8
400df572:	557b      	addi.n	a5, a5, 7
400df574:	105580        	and	a5, a5, a8
400df577:	958b      	addi.n	a9, a5, 8
400df579:	2499      	s32i.n	a9, a4, 8
400df57b:	881c      	movi.n	a8, 24
400df57d:	a21b      	addi.n	a10, a2, 1
400df57f:	b02260        	addx8	a2, a2, a6
400df582:	072897        	blt	a8, a9, 400df58d <get_arg$isra$0+0x175>
400df585:	1488      	l32i.n	a8, a4, 4
400df587:	0002c6        	j	400df596 <get_arg$isra$0+0x17e>
400df58a:	000000        	ill
400df58d:	032857        	blt	a8, a5, 400df594 <get_arg$isra$0+0x17c>
400df590:	852c      	movi.n	a5, 40
400df592:	2459      	s32i.n	a5, a4, 8
400df594:	0488      	l32i.n	a8, a4, 0
400df596:	2458      	l32i.n	a5, a4, 8
400df598:	585a      	add.n	a5, a8, a5
400df59a:	f8c552        	addi	a5, a5, -8
400df59d:	1598      	l32i.n	a9, a5, 4
400df59f:	0588      	l32i.n	a8, a5, 0
400df5a1:	1299      	s32i.n	a9, a2, 4
400df5a3:	0289      	s32i.n	a8, a2, 0
400df5a5:	f97c      	movi.n	a9, -1
400df5a7:	0a2d      	mov.n	a2, a10
400df5a9:	250c      	movi.n	a5, 2
400df5ab:	0071c6        	j	400df776 <get_arg$isra$0+0x35e>
400df5ae:	2458      	l32i.n	a5, a4, 8
400df5b0:	881c      	movi.n	a8, 24
400df5b2:	954b      	addi.n	a9, a5, 4
400df5b4:	2499      	s32i.n	a9, a4, 8
400df5b6:	a21b      	addi.n	a10, a2, 1
400df5b8:	b02260        	addx8	a2, a2, a6
400df5bb:	062897        	blt	a8, a9, 400df5c5 <get_arg$isra$0+0x1ad>
400df5be:	1488      	l32i.n	a8, a4, 4
400df5c0:	000286        	j	400df5ce <get_arg$isra$0+0x1b6>
400df5c3:	570000        	lsi	f0, a0, 0x15c
400df5c6:	0328      	l32i.n	a2, a3, 0
400df5c8:	452c      	movi.n	a5, 36
400df5ca:	2459      	s32i.n	a5, a4, 8
400df5cc:	0488      	l32i.n	a8, a4, 0
400df5ce:	2458      	l32i.n	a5, a4, 8
400df5d0:	f97c      	movi.n	a9, -1
400df5d2:	585a      	add.n	a5, a8, a5
400df5d4:	fcc552        	addi	a5, a5, -4
400df5d7:	0558      	l32i.n	a5, a5, 0
400df5d9:	0259      	s32i.n	a5, a2, 0
400df5db:	0a2d      	mov.n	a2, a10
400df5dd:	650c      	movi.n	a5, 6
400df5df:	0064c6        	j	400df776 <get_arg$isra$0+0x35e>
400df5e2:	2458      	l32i.n	a5, a4, 8
400df5e4:	881c      	movi.n	a8, 24
400df5e6:	954b      	addi.n	a9, a5, 4
400df5e8:	2499      	s32i.n	a9, a4, 8
400df5ea:	a21b      	addi.n	a10, a2, 1
400df5ec:	b02260        	addx8	a2, a2, a6
400df5ef:	062897        	blt	a8, a9, 400df5f9 <get_arg$isra$0+0x1e1>
400df5f2:	1488      	l32i.n	a8, a4, 4
400df5f4:	000286        	j	400df602 <get_arg$isra$0+0x1ea>
400df5f7:	570000        	lsi	f0, a0, 0x15c
400df5fa:	0328      	l32i.n	a2, a3, 0
400df5fc:	452c      	movi.n	a5, 36
400df5fe:	2459      	s32i.n	a5, a4, 8
400df600:	0488      	l32i.n	a8, a4, 0
400df602:	2458      	l32i.n	a5, a4, 8
400df604:	f97c      	movi.n	a9, -1
400df606:	585a      	add.n	a5, a8, a5
400df608:	fcc552        	addi	a5, a5, -4
400df60b:	0558      	l32i.n	a5, a5, 0
400df60d:	0259      	s32i.n	a5, a2, 0
400df60f:	0a2d      	mov.n	a2, a10
400df611:	050c      	movi.n	a5, 0
400df613:	0057c6        	j	400df776 <get_arg$isra$0+0x35e>
400df616:	2458      	l32i.n	a5, a4, 8
400df618:	881c      	movi.n	a8, 24
400df61a:	954b      	addi.n	a9, a5, 4
400df61c:	2499      	s32i.n	a9, a4, 8
400df61e:	a21b      	addi.n	a10, a2, 1
400df620:	b02260        	addx8	a2, a2, a6
400df623:	062897        	blt	a8, a9, 400df62d <get_arg$isra$0+0x215>
400df626:	1488      	l32i.n	a8, a4, 4
400df628:	000286        	j	400df636 <get_arg$isra$0+0x21e>
400df62b:	570000        	lsi	f0, a0, 0x15c
400df62e:	0328      	l32i.n	a2, a3, 0
400df630:	452c      	movi.n	a5, 36
400df632:	2459      	s32i.n	a5, a4, 8
400df634:	0488      	l32i.n	a8, a4, 0
400df636:	2458      	l32i.n	a5, a4, 8
400df638:	f97c      	movi.n	a9, -1
400df63a:	585a      	add.n	a5, a8, a5
400df63c:	fcc552        	addi	a5, a5, -4
400df63f:	0558      	l32i.n	a5, a5, 0
400df641:	0259      	s32i.n	a5, a2, 0
400df643:	0a2d      	mov.n	a2, a10
400df645:	350c      	movi.n	a5, 3
400df647:	004ac6        	j	400df776 <get_arg$isra$0+0x35e>
400df64a:	2458      	l32i.n	a5, a4, 8
400df64c:	887c      	movi.n	a8, -8
400df64e:	557b      	addi.n	a5, a5, 7
400df650:	105580        	and	a5, a5, a8
400df653:	958b      	addi.n	a9, a5, 8
400df655:	2499      	s32i.n	a9, a4, 8
400df657:	881c      	movi.n	a8, 24
400df659:	a21b      	addi.n	a10, a2, 1
400df65b:	b02260        	addx8	a2, a2, a6
400df65e:	072897        	blt	a8, a9, 400df669 <get_arg$isra$0+0x251>
400df661:	1488      	l32i.n	a8, a4, 4
400df663:	0002c6        	j	400df672 <get_arg$isra$0+0x25a>
400df666:	000000        	ill
400df669:	032857        	blt	a8, a5, 400df670 <get_arg$isra$0+0x258>
400df66c:	852c      	movi.n	a5, 40
400df66e:	2459      	s32i.n	a5, a4, 8
400df670:	0488      	l32i.n	a8, a4, 0
400df672:	2458      	l32i.n	a5, a4, 8
400df674:	585a      	add.n	a5, a8, a5
400df676:	f8c552        	addi	a5, a5, -8
400df679:	1598      	l32i.n	a9, a5, 4
400df67b:	0588      	l32i.n	a8, a5, 0
400df67d:	1299      	s32i.n	a9, a2, 4
400df67f:	0289      	s32i.n	a8, a2, 0
400df681:	f97c      	movi.n	a9, -1
400df683:	0a2d      	mov.n	a2, a10
400df685:	450c      	movi.n	a5, 4
400df687:	003ac6        	j	400df776 <get_arg$isra$0+0x35e>
400df68a:	2488      	l32i.n	a8, a4, 8
400df68c:	8a7c      	movi.n	a10, -8
400df68e:	887b      	addi.n	a8, a8, 7
400df690:	1088a0        	and	a8, a8, a10
400df693:	b88b      	addi.n	a11, a8, 8
400df695:	24b9      	s32i.n	a11, a4, 8
400df697:	8a1c      	movi.n	a10, 24
400df699:	c21b      	addi.n	a12, a2, 1
400df69b:	b02260        	addx8	a2, a2, a6
400df69e:	072ab7        	blt	a10, a11, 400df6a9 <get_arg$isra$0+0x291>
400df6a1:	14a8      	l32i.n	a10, a4, 4
400df6a3:	0002c6        	j	400df6b2 <get_arg$isra$0+0x29a>
400df6a6:	000000        	ill
400df6a9:	032a87        	blt	a10, a8, 400df6b0 <get_arg$isra$0+0x298>
400df6ac:	882c      	movi.n	a8, 40
400df6ae:	2489      	s32i.n	a8, a4, 8
400df6b0:	04a8      	l32i.n	a10, a4, 0
400df6b2:	2488      	l32i.n	a8, a4, 8
400df6b4:	8a8a      	add.n	a8, a10, a8
400df6b6:	f8c882        	addi	a8, a8, -8
400df6b9:	08a8      	l32i.n	a10, a8, 0
400df6bb:	18b8      	l32i.n	a11, a8, 4
400df6bd:	02a9      	s32i.n	a10, a2, 0
400df6bf:	12b9      	s32i.n	a11, a2, 4
400df6c1:	002006        	j	400df745 <get_arg$isra$0+0x32d>
400df6c4:	0788      	l32i.n	a8, a7, 0
400df6c6:	140866        	bnei	a8, -1, 400df6de <get_arg$isra$0+0x2c6>
400df6c9:	80a0c2        	movi	a12, 128
400df6cc:	0b0c      	movi.n	a11, 0
400df6ce:	07ad      	mov.n	a10, a7
400df6d0:	51d9      	s32i.n	a13, a1, 20
400df6d2:	61e9      	s32i.n	a14, a1, 24
400df6d4:	c26681        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400df6d7:	0008e0        	callx8	a8
400df6da:	61e8      	l32i.n	a14, a1, 24
400df6dc:	51d8      	l32i.n	a13, a1, 20
400df6de:	0188      	l32i.n	a8, a1, 0
400df6e0:	9e0b      	addi.n	a9, a14, -1
400df6e2:	538890        	max	a8, a8, a9
400df6e5:	000ac6        	j	400df714 <get_arg$isra$0+0x2fc>
400df6e8:	0788      	l32i.n	a8, a7, 0
400df6ea:	180866        	bnei	a8, -1, 400df706 <get_arg$isra$0+0x2ee>
400df6ed:	80a0c2        	movi	a12, 128
400df6f0:	0b0c      	movi.n	a11, 0
400df6f2:	07ad      	mov.n	a10, a7
400df6f4:	4199      	s32i.n	a9, a1, 16
400df6f6:	51d9      	s32i.n	a13, a1, 20
400df6f8:	61e9      	s32i.n	a14, a1, 24
400df6fa:	c25c81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400df6fd:	0008e0        	callx8	a8
400df700:	61e8      	l32i.n	a14, a1, 24
400df702:	51d8      	l32i.n	a13, a1, 20
400df704:	4198      	l32i.n	a9, a1, 16
400df706:	ee0b      	addi.n	a14, a14, -1
400df708:	a08e70        	addx4	a8, a14, a7
400df70b:	0a0c      	movi.n	a10, 0
400df70d:	08a9      	s32i.n	a10, a8, 0
400df70f:	0188      	l32i.n	a8, a1, 0
400df711:	5388e0        	max	a8, a8, a14
400df714:	0189      	s32i.n	a8, a1, 0
400df716:	001706        	j	400df776 <get_arg$isra$0+0x35e>
400df719:	0a3d      	mov.n	a3, a10
400df71b:	2488      	l32i.n	a8, a4, 8
400df71d:	8a1c      	movi.n	a10, 24
400df71f:	b84b      	addi.n	a11, a8, 4
400df721:	24b9      	s32i.n	a11, a4, 8
400df723:	c21b      	addi.n	a12, a2, 1
400df725:	b02260        	addx8	a2, a2, a6
400df728:	052ab7        	blt	a10, a11, 400df731 <get_arg$isra$0+0x319>
400df72b:	14a8      	l32i.n	a10, a4, 4
400df72d:	000246        	j	400df73a <get_arg$isra$0+0x322>
400df730:	2a8700        	mul.s	f8, f7, f0
400df733:	482c03        	lsi	f0, a12, 0x120
400df736:	2489      	s32i.n	a8, a4, 8
400df738:	04a8      	l32i.n	a10, a4, 0
400df73a:	2488      	l32i.n	a8, a4, 8
400df73c:	8a8a      	add.n	a8, a10, a8
400df73e:	fcc882        	addi	a8, a8, -4
400df741:	0888      	l32i.n	a8, a8, 0
400df743:	0289      	s32i.n	a8, a2, 0
400df745:	0c2d      	mov.n	a2, a12
400df747:	000ac6        	j	400df776 <get_arg$isra$0+0x35e>
400df74a:	d0c8e2        	addi	a14, a8, -48
400df74d:	9a0c      	movi.n	a10, 9
400df74f:	0001c6        	j	400df75a <get_arg$isra$0+0x342>
400df752:	a0eee0        	addx4	a14, a14, a14
400df755:	90ee80        	addx2	a14, a14, a8
400df758:	331b      	addi.n	a3, a3, 1
400df75a:	000382        	l8ui	a8, a3, 0
400df75d:	589c      	beqz.n	a8, 400df776 <get_arg$isra$0+0x35e>
400df75f:	d0c882        	addi	a8, a8, -48
400df762:	ecba87        	bgeu	a10, a8, 400df752 <get_arg$isra$0+0x33a>
400df765:	000346        	j	400df776 <get_arg$isra$0+0x35e>
400df768:	331b      	addi.n	a3, a3, 1
400df76a:	000382        	l8ui	a8, a3, 0
400df76d:	d0c882        	addi	a8, a8, -48
400df770:	748080        	extui	a8, a8, 0, 8
400df773:	f1ba87        	bgeu	a10, a8, 400df768 <get_arg$isra$0+0x350>
400df776:	11a8      	l32i.n	a10, a1, 4
400df778:	b80c      	movi.n	a8, 11
400df77a:	021a87        	beq	a10, a8, 400df780 <get_arg$isra$0+0x368>
400df77d:	ff3306        	j	400df44d <get_arg$isra$0+0x35>
400df780:	000352        	l8ui	a5, a3, 0
400df783:	658c      	beqz.n	a5, 400df78d <get_arg$isra$0+0x375>
400df785:	2188      	l32i.n	a8, a1, 8
400df787:	022827        	blt	a8, a2, 400df78d <get_arg$isra$0+0x375>
400df78a:	ff2986        	j	400df434 <get_arg$isra$0+0x1c>
400df78d:	0188      	l32i.n	a8, a1, 0
400df78f:	000352        	l8ui	a5, a3, 0
400df792:	2198      	l32i.n	a9, a1, 8
400df794:	f21b      	addi.n	a15, a2, 1
400df796:	839850        	moveqz	a9, a8, a5
400df799:	0199      	s32i.n	a9, a1, 0
400df79b:	b0b260        	addx8	a11, a2, a6
400df79e:	a07270        	addx4	a7, a2, a7
400df7a1:	8a1c      	movi.n	a10, 24
400df7a3:	4c2c      	movi.n	a12, 36
400df7a5:	8d7c      	movi.n	a13, -8
400df7a7:	8e2c      	movi.n	a14, 40
400df7a9:	002306        	j	400df839 <get_arg$isra$0+0x421>
400df7ac:	0758      	l32i.n	a5, a7, 0
400df7ae:	2428      	l32i.n	a2, a4, 8
400df7b0:	550b      	addi.n	a5, a5, -1
400df7b2:	5f65f6        	bgeui	a5, 6, 400df815 <get_arg$isra$0+0x3fd>
400df7b5:	c40091        	l32r	a9, 400d07b8 <_flash_cache_start+0x7a0>
400df7b8:	a05590        	addx4	a5, a5, a9
400df7bb:	0558      	l32i.n	a5, a5, 0
400df7bd:	0005a0        	jx	a5
400df7c0:	227b      	addi.n	a2, a2, 7
400df7c2:	1022d0        	and	a2, a2, a13
400df7c5:	528b      	addi.n	a5, a2, 8
400df7c7:	2459      	s32i.n	a5, a4, 8
400df7c9:	042a57        	blt	a10, a5, 400df7d1 <get_arg$isra$0+0x3b9>
400df7cc:	1458      	l32i.n	a5, a4, 4
400df7ce:	000186        	j	400df7d8 <get_arg$isra$0+0x3c0>
400df7d1:	012a27        	blt	a10, a2, 400df7d6 <get_arg$isra$0+0x3be>
400df7d4:	24e9      	s32i.n	a14, a4, 8
400df7d6:	0458      	l32i.n	a5, a4, 0
400df7d8:	2428      	l32i.n	a2, a4, 8
400df7da:	252a      	add.n	a2, a5, a2
400df7dc:	f8c222        	addi	a2, a2, -8
400df7df:	0288      	l32i.n	a8, a2, 0
400df7e1:	1298      	l32i.n	a9, a2, 4
400df7e3:	0b89      	s32i.n	a8, a11, 0
400df7e5:	1b99      	s32i.n	a9, a11, 4
400df7e7:	001206        	j	400df833 <get_arg$isra$0+0x41b>
400df7ea:	227b      	addi.n	a2, a2, 7
400df7ec:	1022d0        	and	a2, a2, a13
400df7ef:	528b      	addi.n	a5, a2, 8
400df7f1:	2459      	s32i.n	a5, a4, 8
400df7f3:	052a57        	blt	a10, a5, 400df7fc <get_arg$isra$0+0x3e4>
400df7f6:	1458      	l32i.n	a5, a4, 4
400df7f8:	0001c6        	j	400df803 <get_arg$isra$0+0x3eb>
400df7fb:	2a2700        	mul.s	f2, f7, f0
400df7fe:	24e901        	l32r	a0, 400a8ba4 <_iram_end+0x1b050>
400df801:	0458      	l32i.n	a5, a4, 0
400df803:	2428      	l32i.n	a2, a4, 8
400df805:	252a      	add.n	a2, a5, a2
400df807:	f8c222        	addi	a2, a2, -8
400df80a:	0288      	l32i.n	a8, a2, 0
400df80c:	1298      	l32i.n	a9, a2, 4
400df80e:	0b89      	s32i.n	a8, a11, 0
400df810:	1b99      	s32i.n	a9, a11, 4
400df812:	000746        	j	400df833 <get_arg$isra$0+0x41b>
400df815:	524b      	addi.n	a5, a2, 4
400df817:	2459      	s32i.n	a5, a4, 8
400df819:	042a57        	blt	a10, a5, 400df821 <get_arg$isra$0+0x409>
400df81c:	1458      	l32i.n	a5, a4, 4
400df81e:	000186        	j	400df828 <get_arg$isra$0+0x410>
400df821:	012a27        	blt	a10, a2, 400df826 <get_arg$isra$0+0x40e>
400df824:	24c9      	s32i.n	a12, a4, 8
400df826:	0458      	l32i.n	a5, a4, 0
400df828:	2428      	l32i.n	a2, a4, 8
400df82a:	252a      	add.n	a2, a5, a2
400df82c:	fcc222        	addi	a2, a2, -4
400df82f:	0228      	l32i.n	a2, a2, 0
400df831:	0b29      	s32i.n	a2, a11, 0
400df833:	ff1b      	addi.n	a15, a15, 1
400df835:	bb8b      	addi.n	a11, a11, 8
400df837:	774b      	addi.n	a7, a7, 4
400df839:	0158      	l32i.n	a5, a1, 0
400df83b:	2f0b      	addi.n	a2, a15, -1
400df83d:	022527        	blt	a5, a2, 400df843 <get_arg$isra$0+0x42b>
400df840:	ffda06        	j	400df7ac <get_arg$isra$0+0x394>
400df843:	3188      	l32i.n	a8, a1, 12
400df845:	102192        	l32i	a9, a1, 64
400df848:	0829      	s32i.n	a2, a8, 0
400df84a:	2188      	l32i.n	a8, a1, 8
400df84c:	0939      	s32i.n	a3, a9, 0
400df84e:	b02860        	addx8	a2, a8, a6
400df851:	f01d      	retw.n
400df853:	350c      	movi.n	a5, 3
400df855:	020926        	beqi	a9, -1, 400df85b <get_arg$isra$0+0x443>
400df858:	ff3106        	j	400df520 <get_arg$isra$0+0x108>
400df85b:	ff6dc6        	j	400df616 <get_arg$isra$0+0x1fe>
400df85e:	650c      	movi.n	a5, 6
400df860:	020926        	beqi	a9, -1, 400df866 <get_arg$isra$0+0x44e>
400df863:	ff2e46        	j	400df520 <get_arg$isra$0+0x108>
400df866:	ff5106        	j	400df5ae <get_arg$isra$0+0x196>
400df869:	150c      	movi.n	a5, 1
400df86b:	020926        	beqi	a9, -1, 400df871 <get_arg$isra$0+0x459>
400df86e:	ff2b86        	j	400df520 <get_arg$isra$0+0x108>
400df871:	ff3106        	j	400df539 <get_arg$isra$0+0x121>
400df874:	450c      	movi.n	a5, 4
400df876:	020926        	beqi	a9, -1, 400df87c <get_arg$isra$0+0x464>
400df879:	ff28c6        	j	400df520 <get_arg$isra$0+0x108>
400df87c:	ff7286        	j	400df64a <get_arg$isra$0+0x232>
400df87f:	050c      	movi.n	a5, 0
400df881:	020926        	beqi	a9, -1, 400df887 <get_arg$isra$0+0x46f>
400df884:	ff2606        	j	400df520 <get_arg$isra$0+0x108>
400df887:	ff55c6        	j	400df5e2 <get_arg$isra$0+0x1ca>
400df88a:	250c      	movi.n	a5, 2
400df88c:	020926        	beqi	a9, -1, 400df892 <get_arg$isra$0+0x47a>
400df88f:	ff2346        	j	400df520 <get_arg$isra$0+0x108>
400df892:	ff3606        	j	400df56e <get_arg$isra$0+0x156>
400df895:	000000        	ill

400df898 <__sprint_r>:
400df898:	006136        	entry	a1, 48
400df89b:	24a8      	l32i.n	a10, a4, 8
400df89d:	3acc      	bnez.n	a10, 400df8a4 <__sprint_r+0xc>
400df89f:	14a9      	s32i.n	a10, a4, 4
400df8a1:	001646        	j	400df8fe <__sprint_r+0x66>
400df8a4:	192352        	l32i	a5, a3, 100
400df8a7:	4165d7        	bbci	a5, 13, 400df8ec <__sprint_r+0x54>
400df8aa:	0468      	l32i.n	a6, a4, 0
400df8ac:	000d06        	j	400df8e4 <__sprint_r+0x4c>
400df8af:	165800        	lsi	f0, a8, 88
400df8b2:	0688      	l32i.n	a8, a6, 0
400df8b4:	415150        	srli	a5, a5, 1
400df8b7:	070c      	movi.n	a7, 0
400df8b9:	000606        	j	400df8d5 <__sprint_r+0x3d>
400df8bc:	18b200        	lsxp	f11, a2, a0
400df8bf:	03cd00        	lsi	f0, a13, 12
400df8c2:	02ad      	mov.n	a10, a2
400df8c4:	0189      	s32i.n	a8, a1, 0
400df8c6:	c3bd81        	l32r	a8, 400d07bc <_flash_cache_start+0x7a4>
400df8c9:	0008e0        	callx8	a8
400df8cc:	0188      	l32i.n	a8, a1, 0
400df8ce:	882b      	addi.n	a8, a8, 2
400df8d0:	240a26        	beqi	a10, -1, 400df8f8 <__sprint_r+0x60>
400df8d3:	771b      	addi.n	a7, a7, 1
400df8d5:	e42757        	blt	a7, a5, 400df8bd <__sprint_r+0x25>
400df8d8:	2488      	l32i.n	a8, a4, 8
400df8da:	1155f0        	slli	a5, a5, 1
400df8dd:	c05850        	sub	a5, a8, a5
400df8e0:	2459      	s32i.n	a5, a4, 8
400df8e2:	668b      	addi.n	a6, a6, 8
400df8e4:	24a8      	l32i.n	a10, a4, 8
400df8e6:	fc6a56        	bnez	a10, 400df8b0 <__sprint_r+0x18>
400df8e9:	0002c6        	j	400df8f8 <__sprint_r+0x60>
400df8ec:	04cd      	mov.n	a12, a4
400df8ee:	03bd      	mov.n	a11, a3
400df8f0:	02ad      	mov.n	a10, a2
400df8f2:	c36c81        	l32r	a8, 400d06a4 <_flash_cache_start+0x68c>
400df8f5:	0008e0        	callx8	a8
400df8f8:	020c      	movi.n	a2, 0
400df8fa:	2429      	s32i.n	a2, a4, 8
400df8fc:	1429      	s32i.n	a2, a4, 4
400df8fe:	0a2d      	mov.n	a2, a10
400df900:	f01d      	retw.n
	...

400df904 <_vfiprintf_r>:
400df904:	058136        	entry	a1, 0x2c0
400df907:	9c6122        	s32i	a2, a1, 0x270
400df90a:	9c2182        	l32i	a8, a1, 0x270
400df90d:	986132        	s32i	a3, a1, 0x260
400df910:	996142        	s32i	a4, a1, 0x264
400df913:	946152        	s32i	a5, a1, 0x250
400df916:	956162        	s32i	a6, a1, 0x254
400df919:	966172        	s32i	a7, a1, 0x258
400df91c:	c88c      	beqz.n	a8, 400df92c <_vfiprintf_r+0x28>
400df91e:	6828      	l32i.n	a2, a8, 24
400df920:	008256        	bnez	a2, 400df92c <_vfiprintf_r+0x28>
400df923:	20a880        	or	a10, a8, a8
400df926:	c35881        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400df929:	0008e0        	callx8	a8
400df92c:	c34e21        	l32r	a2, 400d0664 <_flash_cache_start+0x64c>
400df92f:	982192        	l32i	a9, a1, 0x260
400df932:	079927        	bne	a9, a2, 400df93d <_vfiprintf_r+0x39>
400df935:	9c2122        	l32i	a2, a1, 0x270
400df938:	1228      	l32i.n	a2, a2, 4
400df93a:	000846        	j	400df95f <_vfiprintf_r+0x5b>
400df93d:	c34a21        	l32r	a2, 400d0668 <_flash_cache_start+0x650>
400df940:	982132        	l32i	a3, a1, 0x260
400df943:	0a9327        	bne	a3, a2, 400df951 <_vfiprintf_r+0x4d>
400df946:	9c2182        	l32i	a8, a1, 0x270
400df949:	2888      	l32i.n	a8, a8, 8
400df94b:	986182        	s32i	a8, a1, 0x260
400df94e:	000406        	j	400df962 <_vfiprintf_r+0x5e>
400df951:	c34621        	l32r	a2, 400d066c <_flash_cache_start+0x654>
400df954:	982192        	l32i	a9, a1, 0x260
400df957:	079927        	bne	a9, a2, 400df962 <_vfiprintf_r+0x5e>
400df95a:	9c2122        	l32i	a2, a1, 0x270
400df95d:	3228      	l32i.n	a2, a2, 12
400df95f:	986122        	s32i	a2, a1, 0x260
400df962:	982132        	l32i	a3, a1, 0x260
400df965:	192322        	l32i	a2, a3, 100
400df968:	0ee207        	bbsi	a2, 0, 400df97a <_vfiprintf_r+0x76>
400df96b:	061322        	l16ui	a2, a3, 12
400df96e:	08e297        	bbsi	a2, 9, 400df97a <_vfiprintf_r+0x76>
400df971:	58c3a2        	addi	a10, a3, 88
400df974:	201110        	or	a1, a1, a1
400df977:	a51625        	call8	40084ad8 <_lock_acquire_recursive>
400df97a:	982182        	l32i	a8, a1, 0x260
400df97d:	c2f031        	l32r	a3, 400d0540 <_flash_cache_start+0x528>
400df980:	061822        	l16ui	a2, a8, 12
400df983:	234280        	sext	a4, a2, 15
400df986:	102320        	and	a2, a3, a2
400df989:	f42020        	extui	a2, a2, 0, 16
400df98c:	02dc      	bnez.n	a2, 400df9a0 <_vfiprintf_r+0x9c>
400df98e:	203430        	or	a3, a4, a3
400df991:	065832        	s16i	a3, a8, 12
400df994:	c34321        	l32r	a2, 400d06a0 <_flash_cache_start+0x688>
400df997:	192832        	l32i	a3, a8, 100
400df99a:	102320        	and	a2, a3, a2
400df99d:	196822        	s32i	a2, a8, 100
400df9a0:	982192        	l32i	a9, a1, 0x260
400df9a3:	061922        	l16ui	a2, a9, 12
400df9a6:	036237        	bbci	a2, 3, 400df9ad <_vfiprintf_r+0xa9>
400df9a9:	4928      	l32i.n	a2, a9, 16
400df9ab:	12fc      	bnez.n	a2, 400df9e0 <_vfiprintf_r+0xdc>
400df9ad:	9821b2        	l32i	a11, a1, 0x260
400df9b0:	9c21a2        	l32i	a10, a1, 0x270
400df9b3:	c38881        	l32r	a8, 400d07d4 <_flash_cache_start+0x7bc>
400df9b6:	0008e0        	callx8	a8
400df9b9:	3aac      	beqz.n	a10, 400df9e0 <_vfiprintf_r+0xdc>
400df9bb:	982132        	l32i	a3, a1, 0x260
400df9be:	192322        	l32i	a2, a3, 100
400df9c1:	036207        	bbci	a2, 0, 400df9c8 <_vfiprintf_r+0xc4>
400df9c4:	000486        	j	400df9da <_vfiprintf_r+0xd6>
400df9c7:	218200        	srai	a8, a0, 2
400df9ca:	2298      	l32i.n	a9, a2, 8
400df9cc:	0618      	l32i.n	a1, a6, 0
400df9ce:	08e297        	bbsi	a2, 9, 400df9da <_vfiprintf_r+0xd6>
400df9d1:	58c8a2        	addi	a10, a8, 88
400df9d4:	201110        	or	a1, a1, a1
400df9d7:	a513e5        	call8	40084b14 <_lock_release_recursive>
400df9da:	f27c      	movi.n	a2, -1
400df9dc:	f01d      	retw.n
400df9de:	920000        	lsi	f0, a0, 0x248
400df9e1:	229821        	l32r	a2, 400a8444 <_iram_end+0x1a8f0>
400df9e4:	321aa0        	orbc	b1, b10, b10
400df9e7:	0619      	s32i.n	a1, a6, 0
400df9e9:	102320        	and	a2, a3, a2
400df9ec:	309266        	bnei	a2, 10, 400dfa20 <_vfiprintf_r+0x11c>
400df9ef:	079922        	l16si	a2, a9, 14
400df9f2:	02a296        	bltz	a2, 400dfa20 <_vfiprintf_r+0x11c>
400df9f5:	192922        	l32i	a2, a9, 100
400df9f8:	08e207        	bbsi	a2, 0, 400dfa04 <_vfiprintf_r+0x100>
400df9fb:	05e397        	bbsi	a3, 9, 400dfa04 <_vfiprintf_r+0x100>
400df9fe:	58c9a2        	addi	a10, a9, 88
400dfa01:	a51125        	call8	40084b14 <_lock_release_recursive>
400dfa04:	9421d2        	l32i	a13, a1, 0x250
400dfa07:	9521e2        	l32i	a14, a1, 0x254
400dfa0a:	9621f2        	l32i	a15, a1, 0x258
400dfa0d:	9921c2        	l32i	a12, a1, 0x264
400dfa10:	9821b2        	l32i	a11, a1, 0x260
400dfa13:	9c21a2        	l32i	a10, a1, 0x270
400dfa16:	0200e5        	call8	400e1a24 <__sbprintf>
400dfa19:	202aa0        	or	a2, a10, a10
400dfa1c:	f01d      	retw.n
400dfa1e:	b20000        	mulsh	a0, a0, a0
400dfa21:	3210c1        	l32r	a12, 400ac264 <_iram_end+0x1e710>
400dfa24:	3ae4a1        	l32r	a10, 400ae5b4 <_iram_end+0x20a60>
400dfa27:	323b      	addi.n	a3, a2, 3
400dfa29:	328d61        	l32r	a6, 400ac460 <_iram_end+0x1e90c>
400dfa2c:	329761        	l32r	a6, 400ac488 <_iram_end+0x1e934>
400dfa2f:	1a90a1        	l32r	a10, 400a6470 <_iram_end+0x1891c>
400dfa32:	020c33        	lsi	f3, a12, 8
400dfa35:	f47c      	movi.n	a4, -1
400dfa37:	64c332        	addi	a3, a3, 100
400dfa3a:	8f6122        	s32i	a2, a1, 0x23c
400dfa3d:	8e6122        	s32i	a2, a1, 0x238
400dfa40:	906122        	s32i	a2, a1, 0x240
400dfa43:	446142        	s32i	a4, a1, 0x110
400dfa46:	916122        	s32i	a2, a1, 0x244
400dfa49:	9f6122        	s32i	a2, a1, 0x27c
400dfa4c:	a06122        	s32i	a2, a1, 0x280
400dfa4f:	a16122        	s32i	a2, a1, 0x284
400dfa52:	a26122        	s32i	a2, a1, 0x288
400dfa55:	9e6122        	s32i	a2, a1, 0x278
400dfa58:	a36132        	s32i	a3, a1, 0x28c
400dfa5b:	992172        	l32i	a7, a1, 0x264
400dfa5e:	000046        	j	400dfa63 <_vfiprintf_r+0x15f>
400dfa61:	771b      	addi.n	a7, a7, 1
400dfa63:	000732        	l8ui	a3, a7, 0
400dfa66:	438c      	beqz.n	a3, 400dfa6e <_vfiprintf_r+0x16a>
400dfa68:	dbc332        	addi	a3, a3, -37
400dfa6b:	ff2356        	bnez	a3, 400dfa61 <_vfiprintf_r+0x15d>
400dfa6e:	992142        	l32i	a4, a1, 0x264
400dfa71:	c03740        	sub	a3, a7, a4
400dfa74:	055316        	beqz	a3, 400dfacd <_vfiprintf_r+0x1c9>
400dfa77:	972152        	l32i	a5, a1, 0x25c
400dfa7a:	10c162        	addi	a6, a1, 16
400dfa7d:	0549      	s32i.n	a4, a5, 0
400dfa7f:	8f2142        	l32i	a4, a1, 0x23c
400dfa82:	1539      	s32i.n	a3, a5, 4
400dfa84:	443a      	add.n	a4, a4, a3
400dfa86:	8f6142        	s32i	a4, a1, 0x23c
400dfa89:	8e2142        	l32i	a4, a1, 0x238
400dfa8c:	02d652        	addmi	a5, a6, 0x200
400dfa8f:	441b      	addi.n	a4, a4, 1
400dfa91:	8e6142        	s32i	a4, a1, 0x238
400dfa94:	0c84e6        	bgei	a4, 8, 400dfaa4 <_vfiprintf_r+0x1a0>
400dfa97:	972182        	l32i	a8, a1, 0x25c
400dfa9a:	888b      	addi.n	a8, a8, 8
400dfa9c:	976182        	s32i	a8, a1, 0x25c
400dfa9f:	000886        	j	400dfac5 <_vfiprintf_r+0x1c1>
400dfaa2:	c20000        	quou	a0, a0, a0
400dfaa5:	9224a2        	l32i	a10, a4, 0x248
400dfaa8:	b210c1        	l32r	a12, 400cc2e8 <_rtc_text_end+0xc2e8>
400dfaab:	a29821        	l32r	a2, 400c850c <_rtc_text_end+0x850c>
400dfaae:	ca9c21        	l32r	a2, 400d2520 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)+0x2c>
400dfab1:	65c9      	s32i.n	a12, a5, 24
400dfab3:	de          	.byte 0xde
400dfab4:	ff          	.byte 0xff
400dfab5:	1a8c      	beqz.n	a10, 400dfaba <_vfiprintf_r+0x1b6>
400dfab7:	07bf86        	j	400e19b9 <_vfiprintf_r+0x20b5>
400dfaba:	e4a142        	movi	a4, 0x1e4
400dfabd:	10c152        	addi	a5, a1, 16
400dfac0:	554a      	add.n	a5, a5, a4
400dfac2:	976152        	s32i	a5, a1, 0x25c
400dfac5:	9e2162        	l32i	a6, a1, 0x278
400dfac8:	663a      	add.n	a6, a6, a3
400dfaca:	9e6162        	s32i	a6, a1, 0x278
400dfacd:	000732        	l8ui	a3, a7, 0
400dfad0:	13cc      	bnez.n	a3, 400dfad5 <_vfiprintf_r+0x1d1>
400dfad2:	07b086        	j	400e1998 <_vfiprintf_r+0x2094>
400dfad5:	10c182        	addi	a8, a1, 16
400dfad8:	f97c      	movi.n	a9, -1
400dfada:	02d832        	addmi	a3, a8, 0x200
400dfadd:	050c      	movi.n	a5, 0
400dfadf:	9b6192        	s32i	a9, a1, 0x26c
400dfae2:	34a282        	movi	a8, 0x234
400dfae5:	10c192        	addi	a9, a1, 16
400dfae8:	3a4352        	s8i	a5, a3, 58
400dfaeb:	998a      	add.n	a9, a9, a8
400dfaed:	050c      	movi.n	a5, 0
400dfaef:	471b      	addi.n	a4, a7, 1
400dfaf1:	023d      	mov.n	a3, a2
400dfaf3:	9d6152        	s32i	a5, a1, 0x274
400dfaf6:	056d      	mov.n	a6, a5
400dfaf8:	9a6192        	s32i	a9, a1, 0x268
400dfafb:	000286        	j	400dfb09 <_vfiprintf_r+0x205>
400dfafe:	000000        	ill
400dfb01:	996142        	s32i	a4, a1, 0x264
400dfb04:	060c      	movi.n	a6, 0
400dfb06:	992142        	l32i	a4, a1, 0x264
400dfb09:	841b      	addi.n	a8, a4, 1
400dfb0b:	996182        	s32i	a8, a1, 0x264
400dfb0e:	c32ef1        	l32r	a15, 400d07c8 <_flash_cache_start+0x7b0>
400dfb11:	000482        	l8ui	a8, a4, 0
400dfb14:	9a0c      	movi.n	a10, 9
400dfb16:	4c2c      	movi.n	a12, 36
400dfb18:	ad2c      	movi.n	a13, 42
400dfb1a:	fe7c      	movi.n	a14, -1
400dfb1c:	0000c6        	j	400dfb23 <_vfiprintf_r+0x21f>
400dfb1f:	614200        	lsi	f0, a2, 0x184
400dfb22:	429d      	lsi	f9, a2, 8
400dfb24:	e0c8      	l32i.n	a12, a0, 56
400dfb26:	a95c      	movi.n	a9, 90
400dfb28:	02b947        	bgeu	a9, a4, 400dfb2e <_vfiprintf_r+0x22a>
400dfb2b:	069a86        	j	400e1599 <_vfiprintf_r+0x1c95>
400dfb2e:	a044f0        	addx4	a4, a4, a15
400dfb31:	0448      	l32i.n	a4, a4, 0
400dfb33:	0004a0        	jx	a4
400dfb36:	c32241        	l32r	a4, 400d07c0 <_flash_cache_start+0x7a8>
400dfb39:	052d46        	j	400e0ff2 <_vfiprintf_r+0x16ee>
400dfb3c:	9c21a2        	l32i	a10, a1, 0x270
400dfb3f:	c31181        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400dfb42:	0008e0        	callx8	a8
400dfb45:	1aa8      	l32i.n	a10, a10, 4
400dfb47:	a261a2        	s32i	a10, a1, 0x288
400dfb4a:	c14d81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400dfb4d:	0008e0        	callx8	a8
400dfb50:	a161a2        	s32i	a10, a1, 0x284
400dfb53:	9c21a2        	l32i	a10, a1, 0x270
400dfb56:	c30b81        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400dfb59:	0008e0        	callx8	a8
400dfb5c:	2aa8      	l32i.n	a10, a10, 8
400dfb5e:	a12182        	l32i	a8, a1, 0x284
400dfb61:	a061a2        	s32i	a10, a1, 0x280
400dfb64:	f9e816        	beqz	a8, 400dfb06 <_vfiprintf_r+0x202>
400dfb67:	f9ba16        	beqz	a10, 400dfb06 <_vfiprintf_r+0x202>
400dfb6a:	000a42        	l8ui	a4, a10, 0
400dfb6d:	f95416        	beqz	a4, 400dfb06 <_vfiprintf_r+0x202>
400dfb70:	00a442        	movi	a4, 0x400
400dfb73:	00b1c6        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfb76:	10c192        	addi	a9, a1, 16
400dfb79:	02d942        	addmi	a4, a9, 0x200
400dfb7c:	3a0482        	l8ui	a8, a4, 58
400dfb7f:	f83856        	bnez	a8, 400dfb06 <_vfiprintf_r+0x202>
400dfb82:	082c      	movi.n	a8, 32
400dfb84:	0047c6        	j	400dfca7 <_vfiprintf_r+0x3a3>
400dfb87:	140c      	movi.n	a4, 1
400dfb89:	00ac46        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfb8c:	992142        	l32i	a4, a1, 0x264
400dfb8f:	990c      	movi.n	a9, 9
400dfb91:	000482        	l8ui	a8, a4, 0
400dfb94:	d0c842        	addi	a4, a8, -48
400dfb97:	02b947        	bgeu	a9, a4, 400dfb9d <_vfiprintf_r+0x299>
400dfb9a:	079186        	j	400e19e4 <_vfiprintf_r+0x20e0>
400dfb9d:	9921a2        	l32i	a10, a1, 0x264
400dfba0:	4a1b      	addi.n	a4, a10, 1
400dfba2:	0a0c      	movi.n	a10, 0
400dfba4:	d0c882        	addi	a8, a8, -48
400dfba7:	a0aaa0        	addx4	a10, a10, a10
400dfbaa:	441b      	addi.n	a4, a4, 1
400dfbac:	90aa80        	addx2	a10, a10, a8
400dfbaf:	840b      	addi.n	a8, a4, -1
400dfbb1:	000882        	l8ui	a8, a8, 0
400dfbb4:	d0c8b2        	addi	a11, a8, -48
400dfbb7:	e9b9b7        	bgeu	a9, a11, 400dfba4 <_vfiprintf_r+0x2a0>
400dfbba:	492c      	movi.n	a9, 36
400dfbbc:	021897        	beq	a8, a9, 400dfbc2 <_vfiprintf_r+0x2be>
400dfbbf:	ffd046        	j	400dfb04 <_vfiprintf_r+0x200>
400dfbc2:	082c      	movi.n	a8, 32
400dfbc4:	02a8a7        	bge	a8, a10, 400dfbca <_vfiprintf_r+0x2c6>
400dfbc7:	077b86        	j	400e19b9 <_vfiprintf_r+0x20b5>
400dfbca:	912182        	l32i	a8, a1, 0x244
400dfbcd:	aa0b      	addi.n	a10, a10, -1
400dfbcf:	09aa87        	bge	a10, a8, 400dfbdc <_vfiprintf_r+0x2d8>
400dfbd2:	10c1b2        	addi	a11, a1, 16
400dfbd5:	b0aab0        	addx8	a10, a10, a11
400dfbd8:	000706        	j	400dfbf8 <_vfiprintf_r+0x2f4>
400dfbdb:	c19200        	mul16u	a9, a2, a0
400dfbde:	a28210        	muluh	a8, a2, a1
400dfbe1:	898a30        	lsi	f3, a10, 0x224
400dfbe4:	40a2c2        	movi	a12, 0x240
400dfbe7:	9a21d2        	l32i	a13, a1, 0x268
400dfbea:	0189      	s32i.n	a8, a1, 0
400dfbec:	01d9f2        	addmi	a15, a9, 0x100
400dfbef:	09ed      	mov.n	a14, a9
400dfbf1:	c9ca      	add.n	a12, a9, a12
400dfbf3:	07bd      	mov.n	a11, a7
400dfbf5:	ff8225        	call8	400df418 <get_arg$isra$0>
400dfbf8:	0aa8      	l32i.n	a10, a10, 0
400dfbfa:	038d      	mov.n	a8, a3
400dfbfc:	9d61a2        	s32i	a10, a1, 0x274
400dfbff:	996142        	s32i	a4, a1, 0x264
400dfc02:	0020c6        	j	400dfc89 <_vfiprintf_r+0x385>
400dfc05:	10c1a2        	addi	a10, a1, 16
400dfc08:	b032a0        	addx8	a3, a2, a10
400dfc0b:	001d46        	j	400dfc84 <_vfiprintf_r+0x380>
400dfc0e:	f31c      	movi.n	a3, 31
400dfc10:	442347        	blt	a3, a4, 400dfc58 <_vfiprintf_r+0x354>
400dfc13:	341b      	addi.n	a3, a4, 1
400dfc15:	10c1b2        	addi	a11, a1, 16
400dfc18:	916132        	s32i	a3, a1, 0x244
400dfc1b:	02db32        	addmi	a3, a11, 0x200
400dfc1e:	122392        	l32i	a9, a3, 72
400dfc21:	8a1c      	movi.n	a10, 24
400dfc23:	b94b      	addi.n	a11, a9, 4
400dfc25:	1263b2        	s32i	a11, a3, 72
400dfc28:	052ab7        	blt	a10, a11, 400dfc31 <_vfiprintf_r+0x32d>
400dfc2b:	112392        	l32i	a9, a3, 68
400dfc2e:	000286        	j	400dfc3c <_vfiprintf_r+0x338>
400dfc31:	042a97        	blt	a10, a9, 400dfc39 <_vfiprintf_r+0x335>
400dfc34:	492c      	movi.n	a9, 36
400dfc36:	126392        	s32i	a9, a3, 72
400dfc39:	942192        	l32i	a9, a1, 0x250
400dfc3c:	962132        	l32i	a3, a1, 0x258
400dfc3f:	393a      	add.n	a3, a9, a3
400dfc41:	fcc332        	addi	a3, a3, -4
400dfc44:	0338      	l32i.n	a3, a3, 0
400dfc46:	9d6132        	s32i	a3, a1, 0x274
400dfc49:	9d2192        	l32i	a9, a1, 0x274
400dfc4c:	10c132        	addi	a3, a1, 16
400dfc4f:	b04430        	addx8	a4, a4, a3
400dfc52:	0499      	s32i.n	a9, a4, 0
400dfc54:	000c46        	j	400dfc89 <_vfiprintf_r+0x385>
400dfc57:	c1a200        	mul16u	a10, a2, a0
400dfc5a:	da3210        	ufloat.s	f3, a2, 1
400dfc5d:	234202        	s8i	a0, a2, 35
400dfc60:	891c12        	l16ui	a1, a12, 0x112
400dfc63:	a44b      	addi.n	a10, a4, 4
400dfc65:	1263a2        	s32i	a10, a3, 72
400dfc68:	0529a7        	blt	a9, a10, 400dfc71 <_vfiprintf_r+0x36d>
400dfc6b:	112342        	l32i	a4, a3, 68
400dfc6e:	000286        	j	400dfc7c <_vfiprintf_r+0x378>
400dfc71:	042947        	blt	a9, a4, 400dfc79 <_vfiprintf_r+0x375>
400dfc74:	442c      	movi.n	a4, 36
400dfc76:	126342        	s32i	a4, a3, 72
400dfc79:	942142        	l32i	a4, a1, 0x250
400dfc7c:	962132        	l32i	a3, a1, 0x258
400dfc7f:	343a      	add.n	a3, a4, a3
400dfc81:	fcc332        	addi	a3, a3, -4
400dfc84:	0338      	l32i.n	a3, a3, 0
400dfc86:	9d6132        	s32i	a3, a1, 0x274
400dfc89:	9d2142        	l32i	a4, a1, 0x274
400dfc8c:	083d      	mov.n	a3, a8
400dfc8e:	e744d6        	bgez	a4, 400dfb06 <_vfiprintf_r+0x202>
400dfc91:	604040        	neg	a4, a4
400dfc94:	9d6142        	s32i	a4, a1, 0x274
400dfc97:	440c      	movi.n	a4, 4
400dfc99:	006846        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfc9c:	000000        	ill
400dfc9f:	10c192        	addi	a9, a1, 16
400dfca2:	b82c      	movi.n	a8, 43
400dfca4:	02d942        	addmi	a4, a9, 0x200
400dfca7:	3a4482        	s8i	a8, a4, 58
400dfcaa:	ff9606        	j	400dfb06 <_vfiprintf_r+0x202>
400dfcad:	992182        	l32i	a8, a1, 0x264
400dfcb0:	481b      	addi.n	a4, a8, 1
400dfcb2:	000882        	l8ui	a8, a8, 0
400dfcb5:	0418d7        	beq	a8, a13, 400dfcbd <_vfiprintf_r+0x3b9>
400dfcb8:	090c      	movi.n	a9, 0
400dfcba:	004646        	j	400dfdd7 <_vfiprintf_r+0x4d3>
400dfcbd:	992192        	l32i	a9, a1, 0x264
400dfcc0:	010982        	l8ui	a8, a9, 1
400dfcc3:	990c      	movi.n	a9, 9
400dfcc5:	d0c8a2        	addi	a10, a8, -48
400dfcc8:	02b9a7        	bgeu	a9, a10, 400dfcce <_vfiprintf_r+0x3ca>
400dfccb:	074946        	j	400e19f4 <_vfiprintf_r+0x20f0>
400dfcce:	9921a2        	l32i	a10, a1, 0x264
400dfcd1:	aa2b      	addi.n	a10, a10, 2
400dfcd3:	9961a2        	s32i	a10, a1, 0x264
400dfcd6:	0a0c      	movi.n	a10, 0
400dfcd8:	d0c882        	addi	a8, a8, -48
400dfcdb:	a0aaa0        	addx4	a10, a10, a10
400dfcde:	90aa80        	addx2	a10, a10, a8
400dfce1:	992182        	l32i	a8, a1, 0x264
400dfce4:	881b      	addi.n	a8, a8, 1
400dfce6:	996182        	s32i	a8, a1, 0x264
400dfce9:	880b      	addi.n	a8, a8, -1
400dfceb:	000882        	l8ui	a8, a8, 0
400dfcee:	d0c8b2        	addi	a11, a8, -48
400dfcf1:	e3b9b7        	bgeu	a9, a11, 400dfcd8 <_vfiprintf_r+0x3d4>
400dfcf4:	492c      	movi.n	a9, 36
400dfcf6:	021897        	beq	a8, a9, 400dfcfc <_vfiprintf_r+0x3f8>
400dfcf9:	ff8106        	j	400dfb01 <_vfiprintf_r+0x1fd>
400dfcfc:	042c      	movi.n	a4, 32
400dfcfe:	02a4a7        	bge	a4, a10, 400dfd04 <_vfiprintf_r+0x400>
400dfd01:	072d06        	j	400e19b9 <_vfiprintf_r+0x20b5>
400dfd04:	912142        	l32i	a4, a1, 0x244
400dfd07:	aa0b      	addi.n	a10, a10, -1
400dfd09:	08aa47        	bge	a10, a4, 400dfd15 <_vfiprintf_r+0x411>
400dfd0c:	10c192        	addi	a9, a1, 16
400dfd0f:	b0aa90        	addx8	a10, a10, a9
400dfd12:	0006c6        	j	400dfd31 <_vfiprintf_r+0x42d>
400dfd15:	10c1b2        	addi	a11, a1, 16
400dfd18:	30a242        	movi	a4, 0x230
400dfd1b:	4b4a      	add.n	a4, a11, a4
400dfd1d:	40a2c2        	movi	a12, 0x240
400dfd20:	9a21d2        	l32i	a13, a1, 0x268
400dfd23:	01dbf2        	addmi	a15, a11, 0x100
400dfd26:	0bed      	mov.n	a14, a11
400dfd28:	cbca      	add.n	a12, a11, a12
400dfd2a:	0149      	s32i.n	a4, a1, 0
400dfd2c:	07bd      	mov.n	a11, a7
400dfd2e:	ff6ea5        	call8	400df418 <get_arg$isra$0>
400dfd31:	0aa8      	l32i.n	a10, a10, 0
400dfd33:	9b61a2        	s32i	a10, a1, 0x26c
400dfd36:	002106        	j	400dfdbe <_vfiprintf_r+0x4ba>
400dfd39:	10c182        	addi	a8, a1, 16
400dfd3c:	b03280        	addx8	a3, a2, a8
400dfd3f:	001c46        	j	400dfdb4 <_vfiprintf_r+0x4b0>
400dfd42:	f31c      	movi.n	a3, 31
400dfd44:	402387        	blt	a3, a8, 400dfd88 <_vfiprintf_r+0x484>
400dfd47:	381b      	addi.n	a3, a8, 1
400dfd49:	10c1a2        	addi	a10, a1, 16
400dfd4c:	916132        	s32i	a3, a1, 0x244
400dfd4f:	02da32        	addmi	a3, a10, 0x200
400dfd52:	1223a2        	l32i	a10, a3, 72
400dfd55:	8b1c      	movi.n	a11, 24
400dfd57:	ca4b      	addi.n	a12, a10, 4
400dfd59:	1263c2        	s32i	a12, a3, 72
400dfd5c:	052bc7        	blt	a11, a12, 400dfd65 <_vfiprintf_r+0x461>
400dfd5f:	1123a2        	l32i	a10, a3, 68
400dfd62:	000286        	j	400dfd70 <_vfiprintf_r+0x46c>
400dfd65:	042ba7        	blt	a11, a10, 400dfd6d <_vfiprintf_r+0x469>
400dfd68:	4a2c      	movi.n	a10, 36
400dfd6a:	1263a2        	s32i	a10, a3, 72
400dfd6d:	9421a2        	l32i	a10, a1, 0x250
400dfd70:	962132        	l32i	a3, a1, 0x258
400dfd73:	10c1b2        	addi	a11, a1, 16
400dfd76:	3a3a      	add.n	a3, a10, a3
400dfd78:	fcc332        	addi	a3, a3, -4
400dfd7b:	0338      	l32i.n	a3, a3, 0
400dfd7d:	b088b0        	addx8	a8, a8, a11
400dfd80:	9b6132        	s32i	a3, a1, 0x26c
400dfd83:	0839      	s32i.n	a3, a8, 0
400dfd85:	000c06        	j	400dfdb9 <_vfiprintf_r+0x4b5>
400dfd88:	10c182        	addi	a8, a1, 16
400dfd8b:	02d832        	addmi	a3, a8, 0x200
400dfd8e:	122382        	l32i	a8, a3, 72
400dfd91:	8a1c      	movi.n	a10, 24
400dfd93:	b84b      	addi.n	a11, a8, 4
400dfd95:	1263b2        	s32i	a11, a3, 72
400dfd98:	052ab7        	blt	a10, a11, 400dfda1 <_vfiprintf_r+0x49d>
400dfd9b:	112382        	l32i	a8, a3, 68
400dfd9e:	000286        	j	400dfdac <_vfiprintf_r+0x4a8>
400dfda1:	042a87        	blt	a10, a8, 400dfda9 <_vfiprintf_r+0x4a5>
400dfda4:	482c      	movi.n	a8, 36
400dfda6:	126382        	s32i	a8, a3, 72
400dfda9:	942182        	l32i	a8, a1, 0x250
400dfdac:	962132        	l32i	a3, a1, 0x258
400dfdaf:	383a      	add.n	a3, a8, a3
400dfdb1:	fcc332        	addi	a3, a3, -4
400dfdb4:	0338      	l32i.n	a3, a3, 0
400dfdb6:	9b6132        	s32i	a3, a1, 0x26c
400dfdb9:	996142        	s32i	a4, a1, 0x264
400dfdbc:	093d      	mov.n	a3, a9
400dfdbe:	9b2192        	l32i	a9, a1, 0x26c
400dfdc1:	f47c      	movi.n	a4, -1
400dfdc3:	539940        	max	a9, a9, a4
400dfdc6:	9b6192        	s32i	a9, a1, 0x26c
400dfdc9:	ff4e46        	j	400dfb06 <_vfiprintf_r+0x202>
400dfdcc:	a09990        	addx4	a9, a9, a9
400dfdcf:	000482        	l8ui	a8, a4, 0
400dfdd2:	9099b0        	addx2	a9, a9, a11
400dfdd5:	441b      	addi.n	a4, a4, 1
400dfdd7:	996142        	s32i	a4, a1, 0x264
400dfdda:	d0c8b2        	addi	a11, a8, -48
400dfddd:	ebbab7        	bgeu	a10, a11, 400dfdcc <_vfiprintf_r+0x4c8>
400dfde0:	5399e0        	max	a9, a9, a14
400dfde3:	9b6192        	s32i	a9, a1, 0x26c
400dfde6:	9d2142        	l32i	a4, a1, 0x274
400dfde9:	ff4cc6        	j	400dfb20 <_vfiprintf_r+0x21c>
400dfdec:	80a042        	movi	a4, 128
400dfdef:	0012c6        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfdf2:	040c      	movi.n	a4, 0
400dfdf4:	d0c882        	addi	a8, a8, -48
400dfdf7:	a04440        	addx4	a4, a4, a4
400dfdfa:	904480        	addx2	a4, a4, a8
400dfdfd:	992182        	l32i	a8, a1, 0x264
400dfe00:	881b      	addi.n	a8, a8, 1
400dfe02:	996182        	s32i	a8, a1, 0x264
400dfe05:	880b      	addi.n	a8, a8, -1
400dfe07:	000882        	l8ui	a8, a8, 0
400dfe0a:	d0c892        	addi	a9, a8, -48
400dfe0d:	e3ba97        	bgeu	a10, a9, 400dfdf4 <_vfiprintf_r+0x4f0>
400dfe10:	0218c7        	beq	a8, a12, 400dfe16 <_vfiprintf_r+0x512>
400dfe13:	ff4246        	j	400dfb20 <_vfiprintf_r+0x21c>
400dfe16:	022c      	movi.n	a2, 32
400dfe18:	02a247        	bge	a2, a4, 400dfe1e <_vfiprintf_r+0x51a>
400dfe1b:	06e686        	j	400e19b9 <_vfiprintf_r+0x20b5>
400dfe1e:	240b      	addi.n	a2, a4, -1
400dfe20:	160c      	movi.n	a6, 1
400dfe22:	ff3806        	j	400dfb06 <_vfiprintf_r+0x202>
400dfe25:	992192        	l32i	a9, a1, 0x264
400dfe28:	68a042        	movi	a4, 104
400dfe2b:	000982        	l8ui	a8, a9, 0
400dfe2e:	0a9847        	bne	a8, a4, 400dfe3c <_vfiprintf_r+0x538>
400dfe31:	991b      	addi.n	a9, a9, 1
400dfe33:	996192        	s32i	a9, a1, 0x264
400dfe36:	00a242        	movi	a4, 0x200
400dfe39:	000046        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfe3c:	044c      	movi.n	a4, 64
400dfe3e:	205540        	or	a5, a5, a4
400dfe41:	ff3046        	j	400dfb06 <_vfiprintf_r+0x202>
400dfe44:	992142        	l32i	a4, a1, 0x264
400dfe47:	000482        	l8ui	a8, a4, 0
400dfe4a:	6ca042        	movi	a4, 108
400dfe4d:	0b9847        	bne	a8, a4, 400dfe5c <_vfiprintf_r+0x558>
400dfe50:	992182        	l32i	a8, a1, 0x264
400dfe53:	881b      	addi.n	a8, a8, 1
400dfe55:	996182        	s32i	a8, a1, 0x264
400dfe58:	0001c6        	j	400dfe63 <_vfiprintf_r+0x55f>
400dfe5b:	041c00        	extui	a1, a0, 12, 1
400dfe5e:	fff706        	j	400dfe3e <_vfiprintf_r+0x53a>
400dfe61:	2c0000        	lsi	f0, a0, 176
400dfe64:	f54604        	lsi	f0, a6, 0x3d4
400dfe67:	ff          	.byte 0xff
400dfe68:	912142        	l32i	a4, a1, 0x244
400dfe6b:	66bc      	beqz.n	a6, 400dfea5 <_vfiprintf_r+0x5a1>
400dfe6d:	0ba247        	bge	a2, a4, 400dfe7c <_vfiprintf_r+0x578>
400dfe70:	10c192        	addi	a9, a1, 16
400dfe73:	b02290        	addx8	a2, a2, a9
400dfe76:	000222        	l8ui	a2, a2, 0
400dfe79:	000886        	j	400dfe9f <_vfiprintf_r+0x59b>
400dfe7c:	10c1a2        	addi	a10, a1, 16
400dfe7f:	30a242        	movi	a4, 0x230
400dfe82:	4a4a      	add.n	a4, a10, a4
400dfe84:	34a2d2        	movi	a13, 0x234
400dfe87:	40a2c2        	movi	a12, 0x240
400dfe8a:	01daf2        	addmi	a15, a10, 0x100
400dfe8d:	0aed      	mov.n	a14, a10
400dfe8f:	dada      	add.n	a13, a10, a13
400dfe91:	caca      	add.n	a12, a10, a12
400dfe93:	0149      	s32i.n	a4, a1, 0
400dfe95:	02ad      	mov.n	a10, a2
400dfe97:	07bd      	mov.n	a11, a7
400dfe99:	ff57e5        	call8	400df418 <get_arg$isra$0>
400dfe9c:	000a22        	l8ui	a2, a10, 0
400dfe9f:	9a6132        	s32i	a3, a1, 0x268
400dfea2:	002146        	j	400dff2b <_vfiprintf_r+0x627>
400dfea5:	631b      	addi.n	a6, a3, 1
400dfea7:	10c182        	addi	a8, a1, 16
400dfeaa:	9a6162        	s32i	a6, a1, 0x268
400dfead:	b02280        	addx8	a2, a2, a8
400dfeb0:	742347        	blt	a3, a4, 400dff28 <_vfiprintf_r+0x624>
400dfeb3:	f21c      	movi.n	a2, 31
400dfeb5:	432247        	blt	a2, a4, 400dfefc <_vfiprintf_r+0x5f8>
400dfeb8:	241b      	addi.n	a2, a4, 1
400dfeba:	10c192        	addi	a9, a1, 16
400dfebd:	916122        	s32i	a2, a1, 0x244
400dfec0:	02d922        	addmi	a2, a9, 0x200
400dfec3:	122232        	l32i	a3, a2, 72
400dfec6:	861c      	movi.n	a6, 24
400dfec8:	834b      	addi.n	a8, a3, 4
400dfeca:	126282        	s32i	a8, a2, 72
400dfecd:	072687        	blt	a6, a8, 400dfed8 <_vfiprintf_r+0x5d4>
400dfed0:	112232        	l32i	a3, a2, 68
400dfed3:	000306        	j	400dfee3 <_vfiprintf_r+0x5df>
400dfed6:	370000        	lsi	f0, a0, 220
400dfed9:	2c0426        	beqi	a4, -1, 400dff09 <_vfiprintf_r+0x605>
400dfedc:	623243        	lsi	f4, a2, 0x188
400dfedf:	213212        	lsi	f1, a2, 132
400dfee2:	212294        	lsi	f9, a2, 132
400dfee5:	c1a296        	bltz	a2, 400dfb03 <_vfiprintf_r+0x1ff>
400dfee8:	232a10        	sext	a2, a10, 8
400dfeeb:	fcc222        	addi	a2, a2, -4
400dfeee:	0228      	l32i.n	a2, a2, 0
400dfef0:	b044a0        	addx8	a4, a4, a10
400dfef3:	0429      	s32i.n	a2, a4, 0
400dfef5:	742020        	extui	a2, a2, 0, 8
400dfef8:	000bc6        	j	400dff2b <_vfiprintf_r+0x627>
400dfefb:	c1b200        	mul16u	a11, a2, a0
400dfefe:	db2210        	movt.s	f2, f2, b1
400dff01:	223202        	lsi	f0, a2, 136
400dff04:	841c12        	l16ui	a1, a12, 0x108
400dff07:	634b      	addi.n	a6, a3, 4
400dff09:	126262        	s32i	a6, a2, 72
400dff0c:	052467        	blt	a4, a6, 400dff15 <_vfiprintf_r+0x611>
400dff0f:	112232        	l32i	a3, a2, 68
400dff12:	000286        	j	400dff20 <_vfiprintf_r+0x61c>
400dff15:	042437        	blt	a4, a3, 400dff1d <_vfiprintf_r+0x619>
400dff18:	432c      	movi.n	a3, 36
400dff1a:	126232        	s32i	a3, a2, 72
400dff1d:	942132        	l32i	a3, a1, 0x250
400dff20:	962122        	l32i	a2, a1, 0x258
400dff23:	232a      	add.n	a2, a3, a2
400dff25:	fcc222        	addi	a2, a2, -4
400dff28:	000222        	l8ui	a2, a2, 0
400dff2b:	10c142        	addi	a4, a1, 16
400dff2e:	01d432        	addmi	a3, a4, 0x100
400dff31:	804322        	s8i	a2, a3, 128
400dff34:	160c      	movi.n	a6, 1
400dff36:	02d422        	addmi	a2, a4, 0x200
400dff39:	030c      	movi.n	a3, 0
400dff3b:	90a182        	movi	a8, 0x190
400dff3e:	3a4232        	s8i	a3, a2, 58
400dff41:	9b6162        	s32i	a6, a1, 0x26c
400dff44:	020c      	movi.n	a2, 0
400dff46:	718a      	add.n	a7, a1, a8
400dff48:	059c06        	j	400e15bc <_vfiprintf_r+0x1cb8>
400dff4b:	041c00        	extui	a1, a0, 12, 1
400dff4e:	205540        	or	a5, a5, a4
400dff51:	02e557        	bbsi	a5, 5, 400dff57 <_vfiprintf_r+0x653>
400dff54:	003606        	j	400e0030 <_vfiprintf_r+0x72c>
400dff57:	912182        	l32i	a8, a1, 0x244
400dff5a:	86bc      	beqz.n	a6, 400dff96 <_vfiprintf_r+0x692>
400dff5c:	0ca287        	bge	a2, a8, 400dff6c <_vfiprintf_r+0x668>
400dff5f:	10c192        	addi	a9, a1, 16
400dff62:	b02290        	addx8	a2, a2, a9
400dff65:	02e8      	l32i.n	a14, a2, 0
400dff67:	1248      	l32i.n	a4, a2, 4
400dff69:	0008c6        	j	400dff90 <_vfiprintf_r+0x68c>
400dff6c:	10c1a2        	addi	a10, a1, 16
400dff6f:	30a242        	movi	a4, 0x230
400dff72:	4a4a      	add.n	a4, a10, a4
400dff74:	34a2d2        	movi	a13, 0x234
400dff77:	40a2c2        	movi	a12, 0x240
400dff7a:	0aed      	mov.n	a14, a10
400dff7c:	0149      	s32i.n	a4, a1, 0
400dff7e:	01daf2        	addmi	a15, a10, 0x100
400dff81:	dada      	add.n	a13, a10, a13
400dff83:	caca      	add.n	a12, a10, a12
400dff85:	07bd      	mov.n	a11, a7
400dff87:	02ad      	mov.n	a10, a2
400dff89:	ff48e5        	call8	400df418 <get_arg$isra$0>
400dff8c:	0ae8      	l32i.n	a14, a10, 0
400dff8e:	1a48      	l32i.n	a4, a10, 4
400dff90:	9a6132        	s32i	a3, a1, 0x268
400dff93:	00bb86        	j	400e0285 <_vfiprintf_r+0x981>
400dff96:	431b      	addi.n	a4, a3, 1
400dff98:	10c162        	addi	a6, a1, 16
400dff9b:	9a6142        	s32i	a4, a1, 0x268
400dff9e:	b02260        	addx8	a2, a2, a6
400dffa1:	02a387        	bge	a3, a8, 400dffa7 <_vfiprintf_r+0x6a3>
400dffa4:	002006        	j	400e0028 <_vfiprintf_r+0x724>
400dffa7:	f21c      	movi.n	a2, 31
400dffa9:	482287        	blt	a2, a8, 400dfff5 <_vfiprintf_r+0x6f1>
400dffac:	281b      	addi.n	a2, a8, 1
400dffae:	10c192        	addi	a9, a1, 16
400dffb1:	916122        	s32i	a2, a1, 0x244
400dffb4:	02d922        	addmi	a2, a9, 0x200
400dffb7:	122232        	l32i	a3, a2, 72
400dffba:	437b      	addi.n	a4, a3, 7
400dffbc:	837c      	movi.n	a3, -8
400dffbe:	103430        	and	a3, a4, a3
400dffc1:	638b      	addi.n	a6, a3, 8
400dffc3:	126262        	s32i	a6, a2, 72
400dffc6:	841c      	movi.n	a4, 24
400dffc8:	052467        	blt	a4, a6, 400dffd1 <_vfiprintf_r+0x6cd>
400dffcb:	112232        	l32i	a3, a2, 68
400dffce:	000286        	j	400dffdc <_vfiprintf_r+0x6d8>
400dffd1:	042437        	blt	a4, a3, 400dffd9 <_vfiprintf_r+0x6d5>
400dffd4:	832c      	movi.n	a3, 40
400dffd6:	126232        	s32i	a3, a2, 72
400dffd9:	942132        	l32i	a3, a1, 0x250
400dffdc:	962122        	l32i	a2, a1, 0x258
400dffdf:	10c1a2        	addi	a10, a1, 16
400dffe2:	232a      	add.n	a2, a3, a2
400dffe4:	f8c222        	addi	a2, a2, -8
400dffe7:	02e8      	l32i.n	a14, a2, 0
400dffe9:	1248      	l32i.n	a4, a2, 4
400dffeb:	b028a0        	addx8	a2, a8, a10
400dffee:	02e9      	s32i.n	a14, a2, 0
400dfff0:	1249      	s32i.n	a4, a2, 4
400dfff2:	00a3c6        	j	400e0285 <_vfiprintf_r+0x981>
400dfff5:	10c1b2        	addi	a11, a1, 16
400dfff8:	02db22        	addmi	a2, a11, 0x200
400dfffb:	122232        	l32i	a3, a2, 72
400dfffe:	437b      	addi.n	a4, a3, 7
400e0000:	837c      	movi.n	a3, -8
400e0002:	103430        	and	a3, a4, a3
400e0005:	638b      	addi.n	a6, a3, 8
400e0007:	126262        	s32i	a6, a2, 72
400e000a:	841c      	movi.n	a4, 24
400e000c:	052467        	blt	a4, a6, 400e0015 <_vfiprintf_r+0x711>
400e000f:	112232        	l32i	a3, a2, 68
400e0012:	000286        	j	400e0020 <_vfiprintf_r+0x71c>
400e0015:	042437        	blt	a4, a3, 400e001d <_vfiprintf_r+0x719>
400e0018:	832c      	movi.n	a3, 40
400e001a:	126232        	s32i	a3, a2, 72
400e001d:	942132        	l32i	a3, a1, 0x250
400e0020:	962122        	l32i	a2, a1, 0x258
400e0023:	232a      	add.n	a2, a3, a2
400e0025:	f8c222        	addi	a2, a2, -8
400e0028:	02e8      	l32i.n	a14, a2, 0
400e002a:	1248      	l32i.n	a4, a2, 4
400e002c:	009546        	j	400e0285 <_vfiprintf_r+0x981>
400e002f:	214200        	srai	a4, a0, 2
400e0032:	654791        	l32r	a9, 400b9550 <_iram_end+0x2b9fc>
400e0035:	63c602        	addi	a0, a6, 99
400e0038:	e56700        	extui	a6, a0, 23, 15
400e003b:	2f8602        	lsi	f0, a6, 188
400e003e:	36bc00        	lsi	f0, a12, 216
400e0041:	0ba247        	bge	a2, a4, 400e0050 <_vfiprintf_r+0x74c>
400e0044:	10c142        	addi	a4, a1, 16
400e0047:	b02240        	addx8	a2, a2, a4
400e004a:	0092e2        	l16si	a14, a2, 0
400e004d:	006a86        	j	400e01fb <_vfiprintf_r+0x8f7>
400e0050:	10c162        	addi	a6, a1, 16
400e0053:	30a242        	movi	a4, 0x230
400e0056:	464a      	add.n	a4, a6, a4
400e0058:	34a2d2        	movi	a13, 0x234
400e005b:	40a2c2        	movi	a12, 0x240
400e005e:	06ed      	mov.n	a14, a6
400e0060:	0149      	s32i.n	a4, a1, 0
400e0062:	01d6f2        	addmi	a15, a6, 0x100
400e0065:	d6da      	add.n	a13, a6, a13
400e0067:	c6ca      	add.n	a12, a6, a12
400e0069:	07bd      	mov.n	a11, a7
400e006b:	02ad      	mov.n	a10, a2
400e006d:	ff3aa5        	call8	400df418 <get_arg$isra$0>
400e0070:	009ae2        	l16si	a14, a10, 0
400e0073:	006106        	j	400e01fb <_vfiprintf_r+0x8f7>
400e0076:	831b      	addi.n	a8, a3, 1
400e0078:	10c192        	addi	a9, a1, 16
400e007b:	9a6182        	s32i	a8, a1, 0x268
400e007e:	b02290        	addx8	a2, a2, a9
400e0081:	732347        	blt	a3, a4, 400e00f8 <_vfiprintf_r+0x7f4>
400e0084:	f21c      	movi.n	a2, 31
400e0086:	422247        	blt	a2, a4, 400e00cc <_vfiprintf_r+0x7c8>
400e0089:	241b      	addi.n	a2, a4, 1
400e008b:	10c1a2        	addi	a10, a1, 16
400e008e:	916122        	s32i	a2, a1, 0x244
400e0091:	02da22        	addmi	a2, a10, 0x200
400e0094:	122232        	l32i	a3, a2, 72
400e0097:	861c      	movi.n	a6, 24
400e0099:	834b      	addi.n	a8, a3, 4
400e009b:	126282        	s32i	a8, a2, 72
400e009e:	062687        	blt	a6, a8, 400e00a8 <_vfiprintf_r+0x7a4>
400e00a1:	112232        	l32i	a3, a2, 68
400e00a4:	0002c6        	j	400e00b3 <_vfiprintf_r+0x7af>
400e00a7:	263700        	lsi	f0, a7, 152
400e00aa:	432c04        	lsi	f0, a12, 0x10c
400e00ad:	126232        	s32i	a3, a2, 72
400e00b0:	942132        	l32i	a3, a1, 0x250
400e00b3:	962122        	l32i	a2, a1, 0x258
400e00b6:	10c1b2        	addi	a11, a1, 16
400e00b9:	232a      	add.n	a2, a3, a2
400e00bb:	fcc222        	addi	a2, a2, -4
400e00be:	02e8      	l32i.n	a14, a2, 0
400e00c0:	b044b0        	addx8	a4, a4, a11
400e00c3:	04e9      	s32i.n	a14, a4, 0
400e00c5:	23ee80        	sext	a14, a14, 15
400e00c8:	006d86        	j	400e0282 <_vfiprintf_r+0x97e>
400e00cb:	c13200        	mul16u	a3, a2, a0
400e00ce:	d32210        	movt	a2, a2, b1
400e00d1:	223202        	lsi	f0, a2, 136
400e00d4:	841c12        	l16ui	a1, a12, 0x108
400e00d7:	634b      	addi.n	a6, a3, 4
400e00d9:	126262        	s32i	a6, a2, 72
400e00dc:	052467        	blt	a4, a6, 400e00e5 <_vfiprintf_r+0x7e1>
400e00df:	112232        	l32i	a3, a2, 68
400e00e2:	000286        	j	400e00f0 <_vfiprintf_r+0x7ec>
400e00e5:	042437        	blt	a4, a3, 400e00ed <_vfiprintf_r+0x7e9>
400e00e8:	432c      	movi.n	a3, 36
400e00ea:	126232        	s32i	a3, a2, 72
400e00ed:	942132        	l32i	a3, a1, 0x250
400e00f0:	962122        	l32i	a2, a1, 0x258
400e00f3:	232a      	add.n	a2, a3, a2
400e00f5:	fcc222        	addi	a2, a2, -4
400e00f8:	0092e2        	l16si	a14, a2, 0
400e00fb:	0060c6        	j	400e0282 <_vfiprintf_r+0x97e>
400e00fe:	02e597        	bbsi	a5, 9, 400e0104 <_vfiprintf_r+0x800>
400e0101:	003106        	j	400e01c9 <_vfiprintf_r+0x8c5>
400e0104:	66bc      	beqz.n	a6, 400e013e <_vfiprintf_r+0x83a>
400e0106:	0ba247        	bge	a2, a4, 400e0115 <_vfiprintf_r+0x811>
400e0109:	10c142        	addi	a4, a1, 16
400e010c:	b02240        	addx8	a2, a2, a4
400e010f:	0002e2        	l8ui	a14, a2, 0
400e0112:	000886        	j	400e0138 <_vfiprintf_r+0x834>
400e0115:	10c162        	addi	a6, a1, 16
400e0118:	30a242        	movi	a4, 0x230
400e011b:	464a      	add.n	a4, a6, a4
400e011d:	34a2d2        	movi	a13, 0x234
400e0120:	40a2c2        	movi	a12, 0x240
400e0123:	06ed      	mov.n	a14, a6
400e0125:	0149      	s32i.n	a4, a1, 0
400e0127:	01d6f2        	addmi	a15, a6, 0x100
400e012a:	d6da      	add.n	a13, a6, a13
400e012c:	c6ca      	add.n	a12, a6, a12
400e012e:	07bd      	mov.n	a11, a7
400e0130:	02ad      	mov.n	a10, a2
400e0132:	ff2e65        	call8	400df418 <get_arg$isra$0>
400e0135:	000ae2        	l8ui	a14, a10, 0
400e0138:	9a6132        	s32i	a3, a1, 0x268
400e013b:	002106        	j	400e01c3 <_vfiprintf_r+0x8bf>
400e013e:	831b      	addi.n	a8, a3, 1
400e0140:	10c192        	addi	a9, a1, 16
400e0143:	9a6182        	s32i	a8, a1, 0x268
400e0146:	b02290        	addx8	a2, a2, a9
400e0149:	732347        	blt	a3, a4, 400e01c0 <_vfiprintf_r+0x8bc>
400e014c:	f21c      	movi.n	a2, 31
400e014e:	422247        	blt	a2, a4, 400e0194 <_vfiprintf_r+0x890>
400e0151:	241b      	addi.n	a2, a4, 1
400e0153:	10c1a2        	addi	a10, a1, 16
400e0156:	916122        	s32i	a2, a1, 0x244
400e0159:	02da22        	addmi	a2, a10, 0x200
400e015c:	122232        	l32i	a3, a2, 72
400e015f:	861c      	movi.n	a6, 24
400e0161:	834b      	addi.n	a8, a3, 4
400e0163:	126282        	s32i	a8, a2, 72
400e0166:	062687        	blt	a6, a8, 400e0170 <_vfiprintf_r+0x86c>
400e0169:	112232        	l32i	a3, a2, 68
400e016c:	0002c6        	j	400e017b <_vfiprintf_r+0x877>
400e016f:	263700        	lsi	f0, a7, 152
400e0172:	432c04        	lsi	f0, a12, 0x10c
400e0175:	126232        	s32i	a3, a2, 72
400e0178:	942132        	l32i	a3, a1, 0x250
400e017b:	962122        	l32i	a2, a1, 0x258
400e017e:	10c1b2        	addi	a11, a1, 16
400e0181:	232a      	add.n	a2, a3, a2
400e0183:	fcc222        	addi	a2, a2, -4
400e0186:	02e8      	l32i.n	a14, a2, 0
400e0188:	b044b0        	addx8	a4, a4, a11
400e018b:	04e9      	s32i.n	a14, a4, 0
400e018d:	74e0e0        	extui	a14, a14, 0, 8
400e0190:	000bc6        	j	400e01c3 <_vfiprintf_r+0x8bf>
400e0193:	c13200        	mul16u	a3, a2, a0
400e0196:	d32210        	movt	a2, a2, b1
400e0199:	223202        	lsi	f0, a2, 136
400e019c:	841c12        	l16ui	a1, a12, 0x108
400e019f:	634b      	addi.n	a6, a3, 4
400e01a1:	126262        	s32i	a6, a2, 72
400e01a4:	052467        	blt	a4, a6, 400e01ad <_vfiprintf_r+0x8a9>
400e01a7:	112232        	l32i	a3, a2, 68
400e01aa:	000286        	j	400e01b8 <_vfiprintf_r+0x8b4>
400e01ad:	042437        	blt	a4, a3, 400e01b5 <_vfiprintf_r+0x8b1>
400e01b0:	432c      	movi.n	a3, 36
400e01b2:	126232        	s32i	a3, a2, 72
400e01b5:	942132        	l32i	a3, a1, 0x250
400e01b8:	962122        	l32i	a2, a1, 0x258
400e01bb:	232a      	add.n	a2, a3, a2
400e01bd:	fcc222        	addi	a2, a2, -4
400e01c0:	0002e2        	l8ui	a14, a2, 0
400e01c3:	23ee00        	sext	a14, a14, 7
400e01c6:	002e06        	j	400e0282 <_vfiprintf_r+0x97e>
400e01c9:	46bc      	beqz.n	a6, 400e0201 <_vfiprintf_r+0x8fd>
400e01cb:	0aa247        	bge	a2, a4, 400e01d9 <_vfiprintf_r+0x8d5>
400e01ce:	10c142        	addi	a4, a1, 16
400e01d1:	b02240        	addx8	a2, a2, a4
400e01d4:	02e8      	l32i.n	a14, a2, 0
400e01d6:	000846        	j	400e01fb <_vfiprintf_r+0x8f7>
400e01d9:	10c162        	addi	a6, a1, 16
400e01dc:	30a242        	movi	a4, 0x230
400e01df:	464a      	add.n	a4, a6, a4
400e01e1:	34a2d2        	movi	a13, 0x234
400e01e4:	40a2c2        	movi	a12, 0x240
400e01e7:	06ed      	mov.n	a14, a6
400e01e9:	0149      	s32i.n	a4, a1, 0
400e01eb:	01d6f2        	addmi	a15, a6, 0x100
400e01ee:	d6da      	add.n	a13, a6, a13
400e01f0:	c6ca      	add.n	a12, a6, a12
400e01f2:	07bd      	mov.n	a11, a7
400e01f4:	02ad      	mov.n	a10, a2
400e01f6:	ff2225        	call8	400df418 <get_arg$isra$0>
400e01f9:	0ae8      	l32i.n	a14, a10, 0
400e01fb:	9a6132        	s32i	a3, a1, 0x268
400e01fe:	002006        	j	400e0282 <_vfiprintf_r+0x97e>
400e0201:	831b      	addi.n	a8, a3, 1
400e0203:	10c192        	addi	a9, a1, 16
400e0206:	9a6182        	s32i	a8, a1, 0x268
400e0209:	b02290        	addx8	a2, a2, a9
400e020c:	702347        	blt	a3, a4, 400e0280 <_vfiprintf_r+0x97c>
400e020f:	f21c      	movi.n	a2, 31
400e0211:	3f2247        	blt	a2, a4, 400e0254 <_vfiprintf_r+0x950>
400e0214:	241b      	addi.n	a2, a4, 1
400e0216:	10c1a2        	addi	a10, a1, 16
400e0219:	916122        	s32i	a2, a1, 0x244
400e021c:	02da22        	addmi	a2, a10, 0x200
400e021f:	122232        	l32i	a3, a2, 72
400e0222:	861c      	movi.n	a6, 24
400e0224:	834b      	addi.n	a8, a3, 4
400e0226:	126282        	s32i	a8, a2, 72
400e0229:	072687        	blt	a6, a8, 400e0234 <_vfiprintf_r+0x930>
400e022c:	112232        	l32i	a3, a2, 68
400e022f:	000306        	j	400e023f <_vfiprintf_r+0x93b>
400e0232:	370000        	lsi	f0, a0, 220
400e0235:	2c0426        	beqi	a4, -1, 400e0265 <_vfiprintf_r+0x961>
400e0238:	623243        	lsi	f4, a2, 0x188
400e023b:	213212        	lsi	f1, a2, 132
400e023e:	212294        	lsi	f9, a2, 132
400e0241:	c1b296        	bltz	a2, 400dfe60 <_vfiprintf_r+0x55c>
400e0244:	232a10        	sext	a2, a10, 8
400e0247:	fcc222        	addi	a2, a2, -4
400e024a:	02e8      	l32i.n	a14, a2, 0
400e024c:	b044b0        	addx8	a4, a4, a11
400e024f:	04e9      	s32i.n	a14, a4, 0
400e0251:	000b46        	j	400e0282 <_vfiprintf_r+0x97e>
400e0254:	10c132        	addi	a3, a1, 16
400e0257:	02d322        	addmi	a2, a3, 0x200
400e025a:	122232        	l32i	a3, a2, 72
400e025d:	841c      	movi.n	a4, 24
400e025f:	634b      	addi.n	a6, a3, 4
400e0261:	126262        	s32i	a6, a2, 72
400e0264:	052467        	blt	a4, a6, 400e026d <_vfiprintf_r+0x969>
400e0267:	112232        	l32i	a3, a2, 68
400e026a:	000286        	j	400e0278 <_vfiprintf_r+0x974>
400e026d:	042437        	blt	a4, a3, 400e0275 <_vfiprintf_r+0x971>
400e0270:	432c      	movi.n	a3, 36
400e0272:	126232        	s32i	a3, a2, 72
400e0275:	942132        	l32i	a3, a1, 0x250
400e0278:	962122        	l32i	a2, a1, 0x258
400e027b:	232a      	add.n	a2, a3, a2
400e027d:	fcc222        	addi	a2, a2, -4
400e0280:	02e8      	l32i.n	a14, a2, 0
400e0282:	314fe0        	srai	a4, a14, 31
400e0285:	120c      	movi.n	a2, 1
400e0287:	002496        	bltz	a4, 400e028d <_vfiprintf_r+0x989>
400e028a:	045e86        	j	400e1408 <_vfiprintf_r+0x1b04>
400e028d:	60e0e0        	neg	a14, a14
400e0290:	030c      	movi.n	a3, 0
400e0292:	9332e0        	movnez	a3, a2, a14
400e0295:	604040        	neg	a4, a4
400e0298:	10c182        	addi	a8, a1, 16
400e029b:	c04430        	sub	a4, a4, a3
400e029e:	d62c      	movi.n	a6, 45
400e02a0:	02d832        	addmi	a3, a8, 0x200
400e02a3:	3a4362        	s8i	a6, a3, 58
400e02a6:	045786        	j	400e1408 <_vfiprintf_r+0x1b04>
400e02a9:	420000        	xorb	b0, b0, b0
400e02ac:	579121        	l32r	a2, 400b60f0 <_iram_end+0x2859c>
400e02af:	c602e5        	call8	400a62dc <_iram_end+0x18788>
400e02b2:	bc0030        	lsi	f3, a0, 0x2f0
400e02b5:	a24746        	j	400c8bd6 <_rtc_text_end+0x8bd6>
400e02b8:	920a      	add.n	a9, a2, a0
400e02ba:	9010c1        	l32r	a12, 400c42fc <_rtc_text_end+0x42fc>
400e02bd:	28b022        	l32ai	a2, a0, 160
400e02c0:	084602        	s8i	a0, a6, 8
400e02c3:	c1a200        	mul16u	a10, a2, a0
400e02c6:	a24210        	muluh	a4, a2, a1
400e02c9:	4a4a30        	madd.s	f4, f10, f3
400e02cc:	34a2d2        	movi	a13, 0x234
400e02cf:	40a2c2        	movi	a12, 0x240
400e02d2:	01daf2        	addmi	a15, a10, 0x100
400e02d5:	0aed      	mov.n	a14, a10
400e02d7:	dada      	add.n	a13, a10, a13
400e02d9:	caca      	add.n	a12, a10, a12
400e02db:	0149      	s32i.n	a4, a1, 0
400e02dd:	02ad      	mov.n	a10, a2
400e02df:	07bd      	mov.n	a11, a7
400e02e1:	ff1365        	call8	400df418 <get_arg$isra$0>
400e02e4:	0a28      	l32i.n	a2, a10, 0
400e02e6:	035d      	mov.n	a5, a3
400e02e8:	001f86        	j	400e036a <_vfiprintf_r+0xa66>
400e02eb:	c1b200        	mul16u	a11, a2, a0
400e02ee:	531b10        	max	a1, a11, a1
400e02f1:	b022b0        	addx8	a2, a2, a11
400e02f4:	702347        	blt	a3, a4, 400e0368 <_vfiprintf_r+0xa64>
400e02f7:	f21c      	movi.n	a2, 31
400e02f9:	3f2247        	blt	a2, a4, 400e033c <_vfiprintf_r+0xa38>
400e02fc:	241b      	addi.n	a2, a4, 1
400e02fe:	10c132        	addi	a3, a1, 16
400e0301:	916122        	s32i	a2, a1, 0x244
400e0304:	02d322        	addmi	a2, a3, 0x200
400e0307:	122232        	l32i	a3, a2, 72
400e030a:	861c      	movi.n	a6, 24
400e030c:	734b      	addi.n	a7, a3, 4
400e030e:	126272        	s32i	a7, a2, 72
400e0311:	072677        	blt	a6, a7, 400e031c <_vfiprintf_r+0xa18>
400e0314:	112232        	l32i	a3, a2, 68
400e0317:	000306        	j	400e0327 <_vfiprintf_r+0xa23>
400e031a:	370000        	lsi	f0, a0, 220
400e031d:	2c0426        	beqi	a4, -1, 400e034d <_vfiprintf_r+0xa49>
400e0320:	623243        	lsi	f4, a2, 0x188
400e0323:	213212        	lsi	f1, a2, 132
400e0326:	212294        	lsi	f9, a2, 132
400e0329:	c16296        	bltz	a2, 400dff43 <_vfiprintf_r+0x63f>
400e032c:	232a10        	sext	a2, a10, 8
400e032f:	fcc222        	addi	a2, a2, -4
400e0332:	0228      	l32i.n	a2, a2, 0
400e0334:	b03460        	addx8	a3, a4, a6
400e0337:	0329      	s32i.n	a2, a3, 0
400e0339:	000b46        	j	400e036a <_vfiprintf_r+0xa66>
400e033c:	10c182        	addi	a8, a1, 16
400e033f:	02d822        	addmi	a2, a8, 0x200
400e0342:	122232        	l32i	a3, a2, 72
400e0345:	841c      	movi.n	a4, 24
400e0347:	634b      	addi.n	a6, a3, 4
400e0349:	126262        	s32i	a6, a2, 72
400e034c:	052467        	blt	a4, a6, 400e0355 <_vfiprintf_r+0xa51>
400e034f:	112232        	l32i	a3, a2, 68
400e0352:	000286        	j	400e0360 <_vfiprintf_r+0xa5c>
400e0355:	042437        	blt	a4, a3, 400e035d <_vfiprintf_r+0xa59>
400e0358:	432c      	movi.n	a3, 36
400e035a:	126232        	s32i	a3, a2, 72
400e035d:	942132        	l32i	a3, a1, 0x250
400e0360:	962122        	l32i	a2, a1, 0x258
400e0363:	232a      	add.n	a2, a3, a2
400e0365:	fcc222        	addi	a2, a2, -4
400e0368:	0228      	l32i.n	a2, a2, 0
400e036a:	9e2192        	l32i	a9, a1, 0x278
400e036d:	313f90        	srai	a3, a9, 31
400e0370:	0299      	s32i.n	a9, a2, 0
400e0372:	1239      	s32i.n	a3, a2, 4
400e0374:	00c4c6        	j	400e068b <_vfiprintf_r+0xd87>
400e0377:	e54700        	extui	a4, a0, 23, 15
400e037a:	308602        	lsi	f0, a6, 192
400e037d:	66bc00        	lsi	f0, a12, 0x198
400e0380:	0ca247        	bge	a2, a4, 400e0390 <_vfiprintf_r+0xa8c>
400e0383:	10c1a2        	addi	a10, a1, 16
400e0386:	b022a0        	addx8	a2, a2, a10
400e0389:	0258      	l32i.n	a5, a2, 0
400e038b:	0008c6        	j	400e03b2 <_vfiprintf_r+0xaae>
400e038e:	b20000        	mulsh	a0, a0, a0
400e0391:	4210c1        	l32r	a12, 400b0bd4 <_iram_end+0x23080>
400e0394:	4a30a2        	lsi	f10, a0, 0x128
400e0397:	d24b      	addi.n	a13, a2, 4
400e0399:	c234a2        	lsi	f10, a4, 0x308
400e039c:	f240a2        	s8i	a10, a0, 242
400e039f:	01db      	addi.n	a0, a1, 13
400e03a1:	0bed      	mov.n	a14, a11
400e03a3:	dbda      	add.n	a13, a11, a13
400e03a5:	cbca      	add.n	a12, a11, a12
400e03a7:	0149      	s32i.n	a4, a1, 0
400e03a9:	07bd      	mov.n	a11, a7
400e03ab:	02ad      	mov.n	a10, a2
400e03ad:	ff06a5        	call8	400df418 <get_arg$isra$0>
400e03b0:	0a58      	l32i.n	a5, a10, 0
400e03b2:	036d      	mov.n	a6, a3
400e03b4:	002046        	j	400e0439 <_vfiprintf_r+0xb35>
400e03b7:	631b00        	minu	a1, a11, a0
400e03ba:	08a347        	bge	a3, a4, 400e03c6 <_vfiprintf_r+0xac2>
400e03bd:	10c132        	addi	a3, a1, 16
400e03c0:	b02230        	addx8	a2, a2, a3
400e03c3:	001c06        	j	400e0437 <_vfiprintf_r+0xb33>
400e03c6:	f21c      	movi.n	a2, 31
400e03c8:	3d2247        	blt	a2, a4, 400e0409 <_vfiprintf_r+0xb05>
400e03cb:	241b      	addi.n	a2, a4, 1
400e03cd:	10c152        	addi	a5, a1, 16
400e03d0:	916122        	s32i	a2, a1, 0x244
400e03d3:	02d522        	addmi	a2, a5, 0x200
400e03d6:	122232        	l32i	a3, a2, 72
400e03d9:	851c      	movi.n	a5, 24
400e03db:	734b      	addi.n	a7, a3, 4
400e03dd:	126272        	s32i	a7, a2, 72
400e03e0:	052577        	blt	a5, a7, 400e03e9 <_vfiprintf_r+0xae5>
400e03e3:	112232        	l32i	a3, a2, 68
400e03e6:	000286        	j	400e03f4 <_vfiprintf_r+0xaf0>
400e03e9:	042537        	blt	a5, a3, 400e03f1 <_vfiprintf_r+0xaed>
400e03ec:	432c      	movi.n	a3, 36
400e03ee:	126232        	s32i	a3, a2, 72
400e03f1:	942132        	l32i	a3, a1, 0x250
400e03f4:	962122        	l32i	a2, a1, 0x258
400e03f7:	10c182        	addi	a8, a1, 16
400e03fa:	232a      	add.n	a2, a3, a2
400e03fc:	fcc222        	addi	a2, a2, -4
400e03ff:	0258      	l32i.n	a5, a2, 0
400e0401:	b02480        	addx8	a2, a4, a8
400e0404:	0259      	s32i.n	a5, a2, 0
400e0406:	000bc6        	j	400e0439 <_vfiprintf_r+0xb35>
400e0409:	10c192        	addi	a9, a1, 16
400e040c:	02d922        	addmi	a2, a9, 0x200
400e040f:	122232        	l32i	a3, a2, 72
400e0412:	841c      	movi.n	a4, 24
400e0414:	534b      	addi.n	a5, a3, 4
400e0416:	126252        	s32i	a5, a2, 72
400e0419:	072457        	blt	a4, a5, 400e0424 <_vfiprintf_r+0xb20>
400e041c:	112232        	l32i	a3, a2, 68
400e041f:	000306        	j	400e042f <_vfiprintf_r+0xb2b>
400e0422:	370000        	lsi	f0, a0, 220
400e0425:	2c0424        	lsi	f2, a4, 176
400e0428:	623243        	lsi	f4, a2, 0x188
400e042b:	213212        	lsi	f1, a2, 132
400e042e:	212294        	lsi	f9, a2, 132
400e0431:	232a96        	bltz	a10, 400e0667 <_vfiprintf_r+0xd63>
400e0434:	fcc222        	addi	a2, a2, -4
400e0437:	0258      	l32i.n	a5, a2, 0
400e0439:	9e2122        	l32i	a2, a1, 0x278
400e043c:	0529      	s32i.n	a2, a5, 0
400e043e:	003086        	j	400e0504 <_vfiprintf_r+0xc00>
400e0441:	02e567        	bbsi	a5, 6, 400e0447 <_vfiprintf_r+0xb43>
400e0444:	003046        	j	400e0509 <_vfiprintf_r+0xc05>
400e0447:	56bc      	beqz.n	a6, 400e0480 <_vfiprintf_r+0xb7c>
400e0449:	0ba247        	bge	a2, a4, 400e0458 <_vfiprintf_r+0xb54>
400e044c:	10c142        	addi	a4, a1, 16
400e044f:	b02240        	addx8	a2, a2, a4
400e0452:	0258      	l32i.n	a5, a2, 0
400e0454:	000886        	j	400e047a <_vfiprintf_r+0xb76>
400e0457:	c15200        	mul16u	a5, a2, a0
400e045a:	a24210        	muluh	a4, a2, a1
400e045d:	454a30        	extui	a4, a3, 26, 5
400e0460:	34a2d2        	movi	a13, 0x234
400e0463:	40a2c2        	movi	a12, 0x240
400e0466:	01d5f2        	addmi	a15, a5, 0x100
400e0469:	05ed      	mov.n	a14, a5
400e046b:	d5da      	add.n	a13, a5, a13
400e046d:	c5ca      	add.n	a12, a5, a12
400e046f:	0149      	s32i.n	a4, a1, 0
400e0471:	07bd      	mov.n	a11, a7
400e0473:	02ad      	mov.n	a10, a2
400e0475:	fefa25        	call8	400df418 <get_arg$isra$0>
400e0478:	0a58      	l32i.n	a5, a10, 0
400e047a:	036d      	mov.n	a6, a3
400e047c:	001f86        	j	400e04fe <_vfiprintf_r+0xbfa>
400e047f:	c18200        	mul16u	a8, a2, a0
400e0482:	631b10        	minu	a1, a11, a1
400e0485:	b02280        	addx8	a2, a2, a8
400e0488:	702347        	blt	a3, a4, 400e04fc <_vfiprintf_r+0xbf8>
400e048b:	f21c      	movi.n	a2, 31
400e048d:	3f2247        	blt	a2, a4, 400e04d0 <_vfiprintf_r+0xbcc>
400e0490:	241b      	addi.n	a2, a4, 1
400e0492:	10c192        	addi	a9, a1, 16
400e0495:	916122        	s32i	a2, a1, 0x244
400e0498:	02d922        	addmi	a2, a9, 0x200
400e049b:	122232        	l32i	a3, a2, 72
400e049e:	851c      	movi.n	a5, 24
400e04a0:	734b      	addi.n	a7, a3, 4
400e04a2:	126272        	s32i	a7, a2, 72
400e04a5:	072577        	blt	a5, a7, 400e04b0 <_vfiprintf_r+0xbac>
400e04a8:	112232        	l32i	a3, a2, 68
400e04ab:	000306        	j	400e04bb <_vfiprintf_r+0xbb7>
400e04ae:	370000        	lsi	f0, a0, 220
400e04b1:	2c0425        	call8	4010c4f4 <_etext+0x20023>
400e04b4:	623243        	lsi	f4, a2, 0x188
400e04b7:	213212        	lsi	f1, a2, 132
400e04ba:	212294        	lsi	f9, a2, 132
400e04bd:	c1a296        	bltz	a2, 400e00db <_vfiprintf_r+0x7d7>
400e04c0:	232a10        	sext	a2, a10, 8
400e04c3:	fcc222        	addi	a2, a2, -4
400e04c6:	0258      	l32i.n	a5, a2, 0
400e04c8:	b024a0        	addx8	a2, a4, a10
400e04cb:	0259      	s32i.n	a5, a2, 0
400e04cd:	000b46        	j	400e04fe <_vfiprintf_r+0xbfa>
400e04d0:	10c1b2        	addi	a11, a1, 16
400e04d3:	02db22        	addmi	a2, a11, 0x200
400e04d6:	122232        	l32i	a3, a2, 72
400e04d9:	841c      	movi.n	a4, 24
400e04db:	534b      	addi.n	a5, a3, 4
400e04dd:	126252        	s32i	a5, a2, 72
400e04e0:	052457        	blt	a4, a5, 400e04e9 <_vfiprintf_r+0xbe5>
400e04e3:	112232        	l32i	a3, a2, 68
400e04e6:	000286        	j	400e04f4 <_vfiprintf_r+0xbf0>
400e04e9:	042437        	blt	a4, a3, 400e04f1 <_vfiprintf_r+0xbed>
400e04ec:	432c      	movi.n	a3, 36
400e04ee:	126232        	s32i	a3, a2, 72
400e04f1:	942132        	l32i	a3, a1, 0x250
400e04f4:	962122        	l32i	a2, a1, 0x258
400e04f7:	232a      	add.n	a2, a3, a2
400e04f9:	fcc222        	addi	a2, a2, -4
400e04fc:	0258      	l32i.n	a5, a2, 0
400e04fe:	9e2122        	l32i	a2, a1, 0x278
400e0501:	005522        	s16i	a2, a5, 0
400e0504:	062d      	mov.n	a2, a6
400e0506:	fd5446        	j	400dfa5b <_vfiprintf_r+0x157>
400e0509:	02e597        	bbsi	a5, 9, 400e050f <_vfiprintf_r+0xc0b>
400e050c:	003006        	j	400e05d0 <_vfiprintf_r+0xccc>
400e050f:	46bc      	beqz.n	a6, 400e0547 <_vfiprintf_r+0xc43>
400e0511:	0ba247        	bge	a2, a4, 400e0520 <_vfiprintf_r+0xc1c>
400e0514:	10c142        	addi	a4, a1, 16
400e0517:	b02240        	addx8	a2, a2, a4
400e051a:	0228      	l32i.n	a2, a2, 0
400e051c:	000886        	j	400e0542 <_vfiprintf_r+0xc3e>
400e051f:	c15200        	mul16u	a5, a2, a0
400e0522:	a24210        	muluh	a4, a2, a1
400e0525:	454a30        	extui	a4, a3, 26, 5
400e0528:	34a2d2        	movi	a13, 0x234
400e052b:	40a2c2        	movi	a12, 0x240
400e052e:	02ad      	mov.n	a10, a2
400e0530:	0149      	s32i.n	a4, a1, 0
400e0532:	01d5f2        	addmi	a15, a5, 0x100
400e0535:	05ed      	mov.n	a14, a5
400e0537:	d5da      	add.n	a13, a5, a13
400e0539:	c5ca      	add.n	a12, a5, a12
400e053b:	07bd      	mov.n	a11, a7
400e053d:	feeda5        	call8	400df418 <get_arg$isra$0>
400e0540:	0a28      	l32i.n	a2, a10, 0
400e0542:	035d      	mov.n	a5, a3
400e0544:	001f86        	j	400e05c6 <_vfiprintf_r+0xcc2>
400e0547:	10c162        	addi	a6, a1, 16
400e054a:	531b      	addi.n	a5, a3, 1
400e054c:	b02260        	addx8	a2, a2, a6
400e054f:	712347        	blt	a3, a4, 400e05c4 <_vfiprintf_r+0xcc0>
400e0552:	f21c      	movi.n	a2, 31
400e0554:	3d2247        	blt	a2, a4, 400e0595 <_vfiprintf_r+0xc91>
400e0557:	241b      	addi.n	a2, a4, 1
400e0559:	10c182        	addi	a8, a1, 16
400e055c:	916122        	s32i	a2, a1, 0x244
400e055f:	02d822        	addmi	a2, a8, 0x200
400e0562:	122232        	l32i	a3, a2, 72
400e0565:	861c      	movi.n	a6, 24
400e0567:	734b      	addi.n	a7, a3, 4
400e0569:	126272        	s32i	a7, a2, 72
400e056c:	052677        	blt	a6, a7, 400e0575 <_vfiprintf_r+0xc71>
400e056f:	112232        	l32i	a3, a2, 68
400e0572:	000286        	j	400e0580 <_vfiprintf_r+0xc7c>
400e0575:	042637        	blt	a6, a3, 400e057d <_vfiprintf_r+0xc79>
400e0578:	432c      	movi.n	a3, 36
400e057a:	126232        	s32i	a3, a2, 72
400e057d:	942132        	l32i	a3, a1, 0x250
400e0580:	962122        	l32i	a2, a1, 0x258
400e0583:	10c192        	addi	a9, a1, 16
400e0586:	232a      	add.n	a2, a3, a2
400e0588:	fcc222        	addi	a2, a2, -4
400e058b:	0228      	l32i.n	a2, a2, 0
400e058d:	b04490        	addx8	a4, a4, a9
400e0590:	0429      	s32i.n	a2, a4, 0
400e0592:	000c06        	j	400e05c6 <_vfiprintf_r+0xcc2>
400e0595:	10c1a2        	addi	a10, a1, 16
400e0598:	02da22        	addmi	a2, a10, 0x200
400e059b:	122232        	l32i	a3, a2, 72
400e059e:	841c      	movi.n	a4, 24
400e05a0:	634b      	addi.n	a6, a3, 4
400e05a2:	126262        	s32i	a6, a2, 72
400e05a5:	082467        	blt	a4, a6, 400e05b1 <_vfiprintf_r+0xcad>
400e05a8:	112232        	l32i	a3, a2, 68
400e05ab:	000346        	j	400e05bc <_vfiprintf_r+0xcb8>
400e05ae:	000000        	ill
400e05b1:	042437        	blt	a4, a3, 400e05b9 <_vfiprintf_r+0xcb5>
400e05b4:	432c      	movi.n	a3, 36
400e05b6:	126232        	s32i	a3, a2, 72
400e05b9:	942132        	l32i	a3, a1, 0x250
400e05bc:	962122        	l32i	a2, a1, 0x258
400e05bf:	232a      	add.n	a2, a3, a2
400e05c1:	fcc222        	addi	a2, a2, -4
400e05c4:	0228      	l32i.n	a2, a2, 0
400e05c6:	9e2132        	l32i	a3, a1, 0x278
400e05c9:	004232        	s8i	a3, a2, 0
400e05cc:	002ec6        	j	400e068b <_vfiprintf_r+0xd87>
400e05cf:	46bc00        	lsi	f0, a12, 0x118
400e05d2:	0aa247        	bge	a2, a4, 400e05e0 <_vfiprintf_r+0xcdc>
400e05d5:	10c142        	addi	a4, a1, 16
400e05d8:	b02240        	addx8	a2, a2, a4
400e05db:	0228      	l32i.n	a2, a2, 0
400e05dd:	000846        	j	400e0602 <_vfiprintf_r+0xcfe>
400e05e0:	10c152        	addi	a5, a1, 16
400e05e3:	30a242        	movi	a4, 0x230
400e05e6:	454a      	add.n	a4, a5, a4
400e05e8:	34a2d2        	movi	a13, 0x234
400e05eb:	40a2c2        	movi	a12, 0x240
400e05ee:	02ad      	mov.n	a10, a2
400e05f0:	0149      	s32i.n	a4, a1, 0
400e05f2:	01d5f2        	addmi	a15, a5, 0x100
400e05f5:	05ed      	mov.n	a14, a5
400e05f7:	d5da      	add.n	a13, a5, a13
400e05f9:	c5ca      	add.n	a12, a5, a12
400e05fb:	07bd      	mov.n	a11, a7
400e05fd:	fee1a5        	call8	400df418 <get_arg$isra$0>
400e0600:	0a28      	l32i.n	a2, a10, 0
400e0602:	035d      	mov.n	a5, a3
400e0604:	001f86        	j	400e0686 <_vfiprintf_r+0xd82>
400e0607:	c16200        	mul16u	a6, a2, a0
400e060a:	531b10        	max	a1, a11, a1
400e060d:	b02260        	addx8	a2, a2, a6
400e0610:	702347        	blt	a3, a4, 400e0684 <_vfiprintf_r+0xd80>
400e0613:	f21c      	movi.n	a2, 31
400e0615:	3f2247        	blt	a2, a4, 400e0658 <_vfiprintf_r+0xd54>
400e0618:	241b      	addi.n	a2, a4, 1
400e061a:	10c182        	addi	a8, a1, 16
400e061d:	916122        	s32i	a2, a1, 0x244
400e0620:	02d822        	addmi	a2, a8, 0x200
400e0623:	122232        	l32i	a3, a2, 72
400e0626:	861c      	movi.n	a6, 24
400e0628:	734b      	addi.n	a7, a3, 4
400e062a:	126272        	s32i	a7, a2, 72
400e062d:	072677        	blt	a6, a7, 400e0638 <_vfiprintf_r+0xd34>
400e0630:	112232        	l32i	a3, a2, 68
400e0633:	000306        	j	400e0643 <_vfiprintf_r+0xd3f>
400e0636:	370000        	lsi	f0, a0, 220
400e0639:	2c0426        	beqi	a4, -1, 400e0669 <_vfiprintf_r+0xd65>
400e063c:	623243        	lsi	f4, a2, 0x188
400e063f:	213212        	lsi	f1, a2, 132
400e0642:	212294        	lsi	f9, a2, 132
400e0645:	c19296        	bltz	a2, 400e0262 <_vfiprintf_r+0x95e>
400e0648:	232a10        	sext	a2, a10, 8
400e064b:	fcc222        	addi	a2, a2, -4
400e064e:	0228      	l32i.n	a2, a2, 0
400e0650:	b04490        	addx8	a4, a4, a9
400e0653:	0429      	s32i.n	a2, a4, 0
400e0655:	000b46        	j	400e0686 <_vfiprintf_r+0xd82>
400e0658:	10c1a2        	addi	a10, a1, 16
400e065b:	02da22        	addmi	a2, a10, 0x200
400e065e:	122232        	l32i	a3, a2, 72
400e0661:	841c      	movi.n	a4, 24
400e0663:	634b      	addi.n	a6, a3, 4
400e0665:	126262        	s32i	a6, a2, 72
400e0668:	052467        	blt	a4, a6, 400e0671 <_vfiprintf_r+0xd6d>
400e066b:	112232        	l32i	a3, a2, 68
400e066e:	000286        	j	400e067c <_vfiprintf_r+0xd78>
400e0671:	042437        	blt	a4, a3, 400e0679 <_vfiprintf_r+0xd75>
400e0674:	432c      	movi.n	a3, 36
400e0676:	126232        	s32i	a3, a2, 72
400e0679:	942132        	l32i	a3, a1, 0x250
400e067c:	962122        	l32i	a2, a1, 0x258
400e067f:	232a      	add.n	a2, a3, a2
400e0681:	fcc222        	addi	a2, a2, -4
400e0684:	0228      	l32i.n	a2, a2, 0
400e0686:	9e2132        	l32i	a3, a1, 0x278
400e0689:	0239      	s32i.n	a3, a2, 0
400e068b:	052d      	mov.n	a2, a5
400e068d:	fcf286        	j	400dfa5b <_vfiprintf_r+0x157>
400e0690:	041c      	movi.n	a4, 16
400e0692:	205540        	or	a5, a5, a4
400e0695:	02e557        	bbsi	a5, 5, 400e069b <_vfiprintf_r+0xd97>
400e0698:	003486        	j	400e076e <_vfiprintf_r+0xe6a>
400e069b:	912182        	l32i	a8, a1, 0x244
400e069e:	66bc      	beqz.n	a6, 400e06d8 <_vfiprintf_r+0xdd4>
400e06a0:	0ca287        	bge	a2, a8, 400e06b0 <_vfiprintf_r+0xdac>
400e06a3:	10c142        	addi	a4, a1, 16
400e06a6:	b02240        	addx8	a2, a2, a4
400e06a9:	02e8      	l32i.n	a14, a2, 0
400e06ab:	1248      	l32i.n	a4, a2, 4
400e06ad:	00e206        	j	400e0a39 <_vfiprintf_r+0x1135>
400e06b0:	10c162        	addi	a6, a1, 16
400e06b3:	30a242        	movi	a4, 0x230
400e06b6:	464a      	add.n	a4, a6, a4
400e06b8:	34a2d2        	movi	a13, 0x234
400e06bb:	40a2c2        	movi	a12, 0x240
400e06be:	0149      	s32i.n	a4, a1, 0
400e06c0:	06ed      	mov.n	a14, a6
400e06c2:	01d6f2        	addmi	a15, a6, 0x100
400e06c5:	d6da      	add.n	a13, a6, a13
400e06c7:	c6ca      	add.n	a12, a6, a12
400e06c9:	07bd      	mov.n	a11, a7
400e06cb:	02ad      	mov.n	a10, a2
400e06cd:	fed4a5        	call8	400df418 <get_arg$isra$0>
400e06d0:	0ae8      	l32i.n	a14, a10, 0
400e06d2:	1a48      	l32i.n	a4, a10, 4
400e06d4:	00d846        	j	400e0a39 <_vfiprintf_r+0x1135>
400e06d7:	631b00        	minu	a1, a11, a0
400e06da:	08a387        	bge	a3, a8, 400e06e6 <_vfiprintf_r+0xde2>
400e06dd:	10c182        	addi	a8, a1, 16
400e06e0:	b02280        	addx8	a2, a2, a8
400e06e3:	002006        	j	400e0767 <_vfiprintf_r+0xe63>
400e06e6:	f21c      	movi.n	a2, 31
400e06e8:	482287        	blt	a2, a8, 400e0734 <_vfiprintf_r+0xe30>
400e06eb:	10c192        	addi	a9, a1, 16
400e06ee:	281b      	addi.n	a2, a8, 1
400e06f0:	02d932        	addmi	a3, a9, 0x200
400e06f3:	916122        	s32i	a2, a1, 0x244
400e06f6:	122322        	l32i	a2, a3, 72
400e06f9:	427b      	addi.n	a4, a2, 7
400e06fb:	827c      	movi.n	a2, -8
400e06fd:	102420        	and	a2, a4, a2
400e0700:	728b      	addi.n	a7, a2, 8
400e0702:	126372        	s32i	a7, a3, 72
400e0705:	841c      	movi.n	a4, 24
400e0707:	052477        	blt	a4, a7, 400e0710 <_vfiprintf_r+0xe0c>
400e070a:	112332        	l32i	a3, a3, 68
400e070d:	000286        	j	400e071b <_vfiprintf_r+0xe17>
400e0710:	042427        	blt	a4, a2, 400e0718 <_vfiprintf_r+0xe14>
400e0713:	822c      	movi.n	a2, 40
400e0715:	126322        	s32i	a2, a3, 72
400e0718:	942132        	l32i	a3, a1, 0x250
400e071b:	962122        	l32i	a2, a1, 0x258
400e071e:	10c1a2        	addi	a10, a1, 16
400e0721:	232a      	add.n	a2, a3, a2
400e0723:	f8c222        	addi	a2, a2, -8
400e0726:	02e8      	l32i.n	a14, a2, 0
400e0728:	1248      	l32i.n	a4, a2, 4
400e072a:	b028a0        	addx8	a2, a8, a10
400e072d:	02e9      	s32i.n	a14, a2, 0
400e072f:	1249      	s32i.n	a4, a2, 4
400e0731:	00c086        	j	400e0a37 <_vfiprintf_r+0x1133>
400e0734:	10c1b2        	addi	a11, a1, 16
400e0737:	02db22        	addmi	a2, a11, 0x200
400e073a:	122232        	l32i	a3, a2, 72
400e073d:	437b      	addi.n	a4, a3, 7
400e073f:	837c      	movi.n	a3, -8
400e0741:	103430        	and	a3, a4, a3
400e0744:	738b      	addi.n	a7, a3, 8
400e0746:	126272        	s32i	a7, a2, 72
400e0749:	841c      	movi.n	a4, 24
400e074b:	052477        	blt	a4, a7, 400e0754 <_vfiprintf_r+0xe50>
400e074e:	112232        	l32i	a3, a2, 68
400e0751:	000286        	j	400e075f <_vfiprintf_r+0xe5b>
400e0754:	042437        	blt	a4, a3, 400e075c <_vfiprintf_r+0xe58>
400e0757:	832c      	movi.n	a3, 40
400e0759:	126232        	s32i	a3, a2, 72
400e075c:	942132        	l32i	a3, a1, 0x250
400e075f:	962122        	l32i	a2, a1, 0x258
400e0762:	232a      	add.n	a2, a3, a2
400e0764:	f8c222        	addi	a2, a2, -8
400e0767:	02e8      	l32i.n	a14, a2, 0
400e0769:	1248      	l32i.n	a4, a2, 4
400e076b:	00b206        	j	400e0a37 <_vfiprintf_r+0x1133>
400e076e:	091c      	movi.n	a9, 16
400e0770:	109590        	and	a9, a5, a9
400e0773:	05d916        	beqz	a9, 400e07d4 <_vfiprintf_r+0xed0>
400e0776:	912142        	l32i	a4, a1, 0x244
400e0779:	768c      	beqz.n	a6, 400e0784 <_vfiprintf_r+0xe80>
400e077b:	022247        	blt	a2, a4, 400e0781 <_vfiprintf_r+0xe7d>
400e077e:	0082c6        	j	400e098d <_vfiprintf_r+0x1089>
400e0781:	007f46        	j	400e0982 <_vfiprintf_r+0x107e>
400e0784:	631b      	addi.n	a6, a3, 1
400e0786:	02a347        	bge	a3, a4, 400e078c <_vfiprintf_r+0xe88>
400e0789:	008b06        	j	400e09b9 <_vfiprintf_r+0x10b5>
400e078c:	f21c      	movi.n	a2, 31
400e078e:	02a247        	bge	a2, a4, 400e0794 <_vfiprintf_r+0xe90>
400e0791:	009c06        	j	400e0a05 <_vfiprintf_r+0x1101>
400e0794:	241b      	addi.n	a2, a4, 1
400e0796:	10c192        	addi	a9, a1, 16
400e0799:	916122        	s32i	a2, a1, 0x244
400e079c:	02d922        	addmi	a2, a9, 0x200
400e079f:	122232        	l32i	a3, a2, 72
400e07a2:	871c      	movi.n	a7, 24
400e07a4:	834b      	addi.n	a8, a3, 4
400e07a6:	126282        	s32i	a8, a2, 72
400e07a9:	072787        	blt	a7, a8, 400e07b4 <_vfiprintf_r+0xeb0>
400e07ac:	112232        	l32i	a3, a2, 68
400e07af:	000306        	j	400e07bf <_vfiprintf_r+0xebb>
400e07b2:	370000        	lsi	f0, a0, 220
400e07b5:	2c0427        	bnone	a4, a2, 400e07e5 <_vfiprintf_r+0xee1>
400e07b8:	623243        	lsi	f4, a2, 0x188
400e07bb:	213212        	lsi	f1, a2, 132
400e07be:	212294        	lsi	f9, a2, 132
400e07c1:	c1a296        	bltz	a2, 400e03df <_vfiprintf_r+0xadb>
400e07c4:	232a10        	sext	a2, a10, 8
400e07c7:	fcc222        	addi	a2, a2, -4
400e07ca:	02e8      	l32i.n	a14, a2, 0
400e07cc:	b024a0        	addx8	a2, a4, a10
400e07cf:	02e9      	s32i.n	a14, a2, 0
400e07d1:	009806        	j	400e0a35 <_vfiprintf_r+0x1131>
400e07d4:	044c      	movi.n	a4, 64
400e07d6:	104540        	and	a4, a5, a4
400e07d9:	0cf416        	beqz	a4, 400e08ac <_vfiprintf_r+0xfa8>
400e07dc:	912142        	l32i	a4, a1, 0x244
400e07df:	d6bc      	beqz.n	a6, 400e0820 <_vfiprintf_r+0xf1c>
400e07e1:	0ba247        	bge	a2, a4, 400e07f0 <_vfiprintf_r+0xeec>
400e07e4:	10c142        	addi	a4, a1, 16
400e07e7:	b02240        	addx8	a2, a2, a4
400e07ea:	0012e2        	l16ui	a14, a2, 0
400e07ed:	000a46        	j	400e081a <_vfiprintf_r+0xf16>
400e07f0:	10c162        	addi	a6, a1, 16
400e07f3:	30a242        	movi	a4, 0x230
400e07f6:	464a      	add.n	a4, a6, a4
400e07f8:	34a2d2        	movi	a13, 0x234
400e07fb:	40a2c2        	movi	a12, 0x240
400e07fe:	06ed      	mov.n	a14, a6
400e0800:	0149      	s32i.n	a4, a1, 0
400e0802:	01d6f2        	addmi	a15, a6, 0x100
400e0805:	d6da      	add.n	a13, a6, a13
400e0807:	c6ca      	add.n	a12, a6, a12
400e0809:	07bd      	mov.n	a11, a7
400e080b:	20a220        	or	a10, a2, a2
400e080e:	a66192        	s32i	a9, a1, 0x298
400e0811:	fec065        	call8	400df418 <get_arg$isra$0>
400e0814:	001ae2        	l16ui	a14, a10, 0
400e0817:	a62192        	l32i	a9, a1, 0x298
400e081a:	094d      	mov.n	a4, a9
400e081c:	008646        	j	400e0a39 <_vfiprintf_r+0x1135>
400e081f:	731b00        	maxu	a1, a11, a0
400e0822:	0ba347        	bge	a3, a4, 400e0831 <_vfiprintf_r+0xf2d>
400e0825:	10c182        	addi	a8, a1, 16
400e0828:	b02280        	addx8	a2, a2, a8
400e082b:	0012e2        	l16ui	a14, a2, 0
400e082e:	003286        	j	400e08fc <_vfiprintf_r+0xff8>
400e0831:	f21c      	movi.n	a2, 31
400e0833:	412247        	blt	a2, a4, 400e0878 <_vfiprintf_r+0xf74>
400e0836:	241b      	addi.n	a2, a4, 1
400e0838:	10c192        	addi	a9, a1, 16
400e083b:	916122        	s32i	a2, a1, 0x244
400e083e:	02d922        	addmi	a2, a9, 0x200
400e0841:	122232        	l32i	a3, a2, 72
400e0844:	861c      	movi.n	a6, 24
400e0846:	834b      	addi.n	a8, a3, 4
400e0848:	126282        	s32i	a8, a2, 72
400e084b:	052687        	blt	a6, a8, 400e0854 <_vfiprintf_r+0xf50>
400e084e:	112232        	l32i	a3, a2, 68
400e0851:	000286        	j	400e085f <_vfiprintf_r+0xf5b>
400e0854:	042637        	blt	a6, a3, 400e085c <_vfiprintf_r+0xf58>
400e0857:	432c      	movi.n	a3, 36
400e0859:	126232        	s32i	a3, a2, 72
400e085c:	942132        	l32i	a3, a1, 0x250
400e085f:	962122        	l32i	a2, a1, 0x258
400e0862:	10c1a2        	addi	a10, a1, 16
400e0865:	232a      	add.n	a2, a3, a2
400e0867:	fcc222        	addi	a2, a2, -4
400e086a:	02e8      	l32i.n	a14, a2, 0
400e086c:	b044a0        	addx8	a4, a4, a10
400e086f:	04e9      	s32i.n	a14, a4, 0
400e0871:	f4e0e0        	extui	a14, a14, 0, 16
400e0874:	003f86        	j	400e0976 <_vfiprintf_r+0x1072>
400e0877:	c1b200        	mul16u	a11, a2, a0
400e087a:	db2210        	movt.s	f2, f2, b1
400e087d:	223202        	lsi	f0, a2, 136
400e0880:	841c12        	l16ui	a1, a12, 0x108
400e0883:	634b      	addi.n	a6, a3, 4
400e0885:	126262        	s32i	a6, a2, 72
400e0888:	052467        	blt	a4, a6, 400e0891 <_vfiprintf_r+0xf8d>
400e088b:	112232        	l32i	a3, a2, 68
400e088e:	000286        	j	400e089c <_vfiprintf_r+0xf98>
400e0891:	042437        	blt	a4, a3, 400e0899 <_vfiprintf_r+0xf95>
400e0894:	432c      	movi.n	a3, 36
400e0896:	126232        	s32i	a3, a2, 72
400e0899:	942132        	l32i	a3, a1, 0x250
400e089c:	962122        	l32i	a2, a1, 0x258
400e089f:	232a      	add.n	a2, a3, a2
400e08a1:	fcc222        	addi	a2, a2, -4
400e08a4:	0012e2        	l16ui	a14, a2, 0
400e08a7:	0032c6        	j	400e0976 <_vfiprintf_r+0x1072>
400e08aa:	820000        	mull	a0, a0, a0
400e08ad:	979121        	l32r	a2, 400c66f4 <_rtc_text_end+0x66f4>
400e08b0:	c602e5        	call8	400a68e0 <_iram_end+0x18d8c>
400e08b3:	bc0031        	l32r	a3, 400cf8b4 <_rtc_text_end+0xf8b4>
400e08b6:	a28756        	bnez	a7, 400e02e2 <_vfiprintf_r+0x9de>
400e08b9:	620d      	lsi	f0, a2, 8
400e08bb:	6010c1        	l32r	a12, 400b88fc <_iram_end+0x2ada8>
400e08be:	e2b022        	l32ai	a2, a0, 0x388
400e08c1:	860002        	l8ui	a0, a0, 134
400e08c4:	005c      	movi.n	a0, 80
400e08c6:	820000        	mull	a0, a0, a0
400e08c9:	6210c1        	l32r	a12, 400b910c <_iram_end+0x2b5b8>
400e08cc:	6a30a2        	lsi	f10, a0, 0x1a8
400e08cf:	d268      	l32i.n	a6, a2, 52
400e08d1:	c234a2        	lsi	f10, a4, 0x308
400e08d4:	ed40a2        	s8i	a10, a0, 237
400e08d7:	6908      	l32i.n	a0, a9, 24
400e08d9:	d8f201        	l32r	a0, 400d6ca4 <esp_timer_impl_init+0x8>
400e08dc:	d8da01        	l32r	a0, 400d6c44 <esp_cache_err_int_init+0x18>
400e08df:	c8ca      	add.n	a12, a8, a12
400e08e1:	07bd      	mov.n	a11, a7
400e08e3:	02ad      	mov.n	a10, a2
400e08e5:	feb325        	call8	400df418 <get_arg$isra$0>
400e08e8:	000ae2        	l8ui	a14, a10, 0
400e08eb:	005286        	j	400e0a39 <_vfiprintf_r+0x1135>
400e08ee:	731b      	addi.n	a7, a3, 1
400e08f0:	0da387        	bge	a3, a8, 400e0901 <_vfiprintf_r+0xffd>
400e08f3:	10c192        	addi	a9, a1, 16
400e08f6:	b02290        	addx8	a2, a2, a9
400e08f9:	0002e2        	l8ui	a14, a2, 0
400e08fc:	064d      	mov.n	a4, a6
400e08fe:	001d86        	j	400e0978 <_vfiprintf_r+0x1074>
400e0901:	f21c      	movi.n	a2, 31
400e0903:	402287        	blt	a2, a8, 400e0947 <_vfiprintf_r+0x1043>
400e0906:	281b      	addi.n	a2, a8, 1
400e0908:	10c1a2        	addi	a10, a1, 16
400e090b:	916122        	s32i	a2, a1, 0x244
400e090e:	02da22        	addmi	a2, a10, 0x200
400e0911:	122232        	l32i	a3, a2, 72
400e0914:	841c      	movi.n	a4, 24
400e0916:	634b      	addi.n	a6, a3, 4
400e0918:	126262        	s32i	a6, a2, 72
400e091b:	052467        	blt	a4, a6, 400e0924 <_vfiprintf_r+0x1020>
400e091e:	112232        	l32i	a3, a2, 68
400e0921:	000286        	j	400e092f <_vfiprintf_r+0x102b>
400e0924:	042437        	blt	a4, a3, 400e092c <_vfiprintf_r+0x1028>
400e0927:	432c      	movi.n	a3, 36
400e0929:	126232        	s32i	a3, a2, 72
400e092c:	942132        	l32i	a3, a1, 0x250
400e092f:	962122        	l32i	a2, a1, 0x258
400e0932:	10c1b2        	addi	a11, a1, 16
400e0935:	232a      	add.n	a2, a3, a2
400e0937:	fcc222        	addi	a2, a2, -4
400e093a:	02e8      	l32i.n	a14, a2, 0
400e093c:	b088b0        	addx8	a8, a8, a11
400e093f:	08e9      	s32i.n	a14, a8, 0
400e0941:	74e0e0        	extui	a14, a14, 0, 8
400e0944:	000b86        	j	400e0976 <_vfiprintf_r+0x1072>
400e0947:	10c132        	addi	a3, a1, 16
400e094a:	02d322        	addmi	a2, a3, 0x200
400e094d:	122232        	l32i	a3, a2, 72
400e0950:	841c      	movi.n	a4, 24
400e0952:	634b      	addi.n	a6, a3, 4
400e0954:	126262        	s32i	a6, a2, 72
400e0957:	052467        	blt	a4, a6, 400e0960 <_vfiprintf_r+0x105c>
400e095a:	112232        	l32i	a3, a2, 68
400e095d:	000286        	j	400e096b <_vfiprintf_r+0x1067>
400e0960:	042437        	blt	a4, a3, 400e0968 <_vfiprintf_r+0x1064>
400e0963:	432c      	movi.n	a3, 36
400e0965:	126232        	s32i	a3, a2, 72
400e0968:	942132        	l32i	a3, a1, 0x250
400e096b:	962122        	l32i	a2, a1, 0x258
400e096e:	232a      	add.n	a2, a3, a2
400e0970:	fcc222        	addi	a2, a2, -4
400e0973:	0002e2        	l8ui	a14, a2, 0
400e0976:	040c      	movi.n	a4, 0
400e0978:	073d      	mov.n	a3, a7
400e097a:	002ec6        	j	400e0a39 <_vfiprintf_r+0x1135>
400e097d:	36bc      	beqz.n	a6, 400e09b4 <_vfiprintf_r+0x10b0>
400e097f:	0aa287        	bge	a2, a8, 400e098d <_vfiprintf_r+0x1089>
400e0982:	10c142        	addi	a4, a1, 16
400e0985:	b02240        	addx8	a2, a2, a4
400e0988:	02e8      	l32i.n	a14, a2, 0
400e098a:	000846        	j	400e09af <_vfiprintf_r+0x10ab>
400e098d:	10c162        	addi	a6, a1, 16
400e0990:	30a242        	movi	a4, 0x230
400e0993:	464a      	add.n	a4, a6, a4
400e0995:	34a2d2        	movi	a13, 0x234
400e0998:	40a2c2        	movi	a12, 0x240
400e099b:	06ed      	mov.n	a14, a6
400e099d:	0149      	s32i.n	a4, a1, 0
400e099f:	01d6f2        	addmi	a15, a6, 0x100
400e09a2:	d6da      	add.n	a13, a6, a13
400e09a4:	c6ca      	add.n	a12, a6, a12
400e09a6:	07bd      	mov.n	a11, a7
400e09a8:	02ad      	mov.n	a10, a2
400e09aa:	fea6e5        	call8	400df418 <get_arg$isra$0>
400e09ad:	0ae8      	l32i.n	a14, a10, 0
400e09af:	036d      	mov.n	a6, a3
400e09b1:	002006        	j	400e0a35 <_vfiprintf_r+0x1131>
400e09b4:	631b      	addi.n	a6, a3, 1
400e09b6:	08a387        	bge	a3, a8, 400e09c2 <_vfiprintf_r+0x10be>
400e09b9:	10c182        	addi	a8, a1, 16
400e09bc:	b02280        	addx8	a2, a2, a8
400e09bf:	001c06        	j	400e0a33 <_vfiprintf_r+0x112f>
400e09c2:	f21c      	movi.n	a2, 31
400e09c4:	3d2287        	blt	a2, a8, 400e0a05 <_vfiprintf_r+0x1101>
400e09c7:	281b      	addi.n	a2, a8, 1
400e09c9:	10c192        	addi	a9, a1, 16
400e09cc:	916122        	s32i	a2, a1, 0x244
400e09cf:	02d922        	addmi	a2, a9, 0x200
400e09d2:	122232        	l32i	a3, a2, 72
400e09d5:	841c      	movi.n	a4, 24
400e09d7:	734b      	addi.n	a7, a3, 4
400e09d9:	126272        	s32i	a7, a2, 72
400e09dc:	052477        	blt	a4, a7, 400e09e5 <_vfiprintf_r+0x10e1>
400e09df:	112232        	l32i	a3, a2, 68
400e09e2:	000286        	j	400e09f0 <_vfiprintf_r+0x10ec>
400e09e5:	042437        	blt	a4, a3, 400e09ed <_vfiprintf_r+0x10e9>
400e09e8:	432c      	movi.n	a3, 36
400e09ea:	126232        	s32i	a3, a2, 72
400e09ed:	942132        	l32i	a3, a1, 0x250
400e09f0:	962122        	l32i	a2, a1, 0x258
400e09f3:	10c1a2        	addi	a10, a1, 16
400e09f6:	232a      	add.n	a2, a3, a2
400e09f8:	fcc222        	addi	a2, a2, -4
400e09fb:	02e8      	l32i.n	a14, a2, 0
400e09fd:	b088a0        	addx8	a8, a8, a10
400e0a00:	08e9      	s32i.n	a14, a8, 0
400e0a02:	000bc6        	j	400e0a35 <_vfiprintf_r+0x1131>
400e0a05:	10c1b2        	addi	a11, a1, 16
400e0a08:	02db22        	addmi	a2, a11, 0x200
400e0a0b:	122232        	l32i	a3, a2, 72
400e0a0e:	841c      	movi.n	a4, 24
400e0a10:	734b      	addi.n	a7, a3, 4
400e0a12:	126272        	s32i	a7, a2, 72
400e0a15:	072477        	blt	a4, a7, 400e0a20 <_vfiprintf_r+0x111c>
400e0a18:	112232        	l32i	a3, a2, 68
400e0a1b:	000306        	j	400e0a2b <_vfiprintf_r+0x1127>
400e0a1e:	370000        	lsi	f0, a0, 220
400e0a21:	2c0424        	lsi	f2, a4, 176
400e0a24:	623243        	lsi	f4, a2, 0x188
400e0a27:	213212        	lsi	f1, a2, 132
400e0a2a:	212294        	lsi	f9, a2, 132
400e0a2d:	232a96        	bltz	a10, 400e0c63 <_vfiprintf_r+0x135f>
400e0a30:	fcc222        	addi	a2, a2, -4
400e0a33:	02e8      	l32i.n	a14, a2, 0
400e0a35:	040c      	movi.n	a4, 0
400e0a37:	063d      	mov.n	a3, a6
400e0a39:	ffab22        	movi	a2, 0xfffffbff
400e0a3c:	105520        	and	a5, a5, a2
400e0a3f:	020c      	movi.n	a2, 0
400e0a41:	026d06        	j	400e13f9 <_vfiprintf_r+0x1af5>
400e0a44:	214200        	srai	a4, a0, 2
400e0a47:	36bc91        	l32r	a9, 400ae538 <_iram_end+0x209e4>
400e0a4a:	0aa247        	bge	a2, a4, 400e0a58 <_vfiprintf_r+0x1154>
400e0a4d:	10c142        	addi	a4, a1, 16
400e0a50:	b02240        	addx8	a2, a2, a4
400e0a53:	02e8      	l32i.n	a14, a2, 0
400e0a55:	000846        	j	400e0a7a <_vfiprintf_r+0x1176>
400e0a58:	10c162        	addi	a6, a1, 16
400e0a5b:	30a242        	movi	a4, 0x230
400e0a5e:	464a      	add.n	a4, a6, a4
400e0a60:	34a2d2        	movi	a13, 0x234
400e0a63:	40a2c2        	movi	a12, 0x240
400e0a66:	06ed      	mov.n	a14, a6
400e0a68:	0149      	s32i.n	a4, a1, 0
400e0a6a:	01d6f2        	addmi	a15, a6, 0x100
400e0a6d:	d6da      	add.n	a13, a6, a13
400e0a6f:	c6ca      	add.n	a12, a6, a12
400e0a71:	07bd      	mov.n	a11, a7
400e0a73:	02ad      	mov.n	a10, a2
400e0a75:	fe9a25        	call8	400df418 <get_arg$isra$0>
400e0a78:	0ae8      	l32i.n	a14, a10, 0
400e0a7a:	036d      	mov.n	a6, a3
400e0a7c:	001f86        	j	400e0afe <_vfiprintf_r+0x11fa>
400e0a7f:	10c182        	addi	a8, a1, 16
400e0a82:	631b      	addi.n	a6, a3, 1
400e0a84:	b02280        	addx8	a2, a2, a8
400e0a87:	712347        	blt	a3, a4, 400e0afc <_vfiprintf_r+0x11f8>
400e0a8a:	f21c      	movi.n	a2, 31
400e0a8c:	3d2247        	blt	a2, a4, 400e0acd <_vfiprintf_r+0x11c9>
400e0a8f:	241b      	addi.n	a2, a4, 1
400e0a91:	10c192        	addi	a9, a1, 16
400e0a94:	916122        	s32i	a2, a1, 0x244
400e0a97:	02d922        	addmi	a2, a9, 0x200
400e0a9a:	122232        	l32i	a3, a2, 72
400e0a9d:	871c      	movi.n	a7, 24
400e0a9f:	834b      	addi.n	a8, a3, 4
400e0aa1:	126282        	s32i	a8, a2, 72
400e0aa4:	052787        	blt	a7, a8, 400e0aad <_vfiprintf_r+0x11a9>
400e0aa7:	112232        	l32i	a3, a2, 68
400e0aaa:	000286        	j	400e0ab8 <_vfiprintf_r+0x11b4>
400e0aad:	042737        	blt	a7, a3, 400e0ab5 <_vfiprintf_r+0x11b1>
400e0ab0:	432c      	movi.n	a3, 36
400e0ab2:	126232        	s32i	a3, a2, 72
400e0ab5:	942132        	l32i	a3, a1, 0x250
400e0ab8:	962122        	l32i	a2, a1, 0x258
400e0abb:	10c1a2        	addi	a10, a1, 16
400e0abe:	232a      	add.n	a2, a3, a2
400e0ac0:	fcc222        	addi	a2, a2, -4
400e0ac3:	02e8      	l32i.n	a14, a2, 0
400e0ac5:	b024a0        	addx8	a2, a4, a10
400e0ac8:	02e9      	s32i.n	a14, a2, 0
400e0aca:	000c06        	j	400e0afe <_vfiprintf_r+0x11fa>
400e0acd:	10c1b2        	addi	a11, a1, 16
400e0ad0:	02db22        	addmi	a2, a11, 0x200
400e0ad3:	122232        	l32i	a3, a2, 72
400e0ad6:	841c      	movi.n	a4, 24
400e0ad8:	734b      	addi.n	a7, a3, 4
400e0ada:	126272        	s32i	a7, a2, 72
400e0add:	082477        	blt	a4, a7, 400e0ae9 <_vfiprintf_r+0x11e5>
400e0ae0:	112232        	l32i	a3, a2, 68
400e0ae3:	000346        	j	400e0af4 <_vfiprintf_r+0x11f0>
400e0ae6:	000000        	ill
400e0ae9:	042437        	blt	a4, a3, 400e0af1 <_vfiprintf_r+0x11ed>
400e0aec:	432c      	movi.n	a3, 36
400e0aee:	126232        	s32i	a3, a2, 72
400e0af1:	942132        	l32i	a3, a1, 0x250
400e0af4:	962122        	l32i	a2, a1, 0x258
400e0af7:	232a      	add.n	a2, a3, a2
400e0af9:	fcc222        	addi	a2, a2, -4
400e0afc:	02e8      	l32i.n	a14, a2, 0
400e0afe:	10c182        	addi	a8, a1, 16
400e0b01:	02d832        	addmi	a3, a8, 0x200
400e0b04:	073c      	movi.n	a7, 48
400e0b06:	bf2f91        	l32r	a9, 400d07c4 <_flash_cache_start+0x7ac>
400e0b09:	384372        	s8i	a7, a3, 56
400e0b0c:	220c      	movi.n	a2, 2
400e0b0e:	78a072        	movi	a7, 120
400e0b11:	394372        	s8i	a7, a3, 57
400e0b14:	040c      	movi.n	a4, 0
400e0b16:	205520        	or	a5, a5, a2
400e0b19:	063d      	mov.n	a3, a6
400e0b1b:	9f6192        	s32i	a9, a1, 0x27c
400e0b1e:	0235c6        	j	400e13f9 <_vfiprintf_r+0x1af5>
400e0b21:	912142        	l32i	a4, a1, 0x244
400e0b24:	46bc      	beqz.n	a6, 400e0b5c <_vfiprintf_r+0x1258>
400e0b26:	0aa247        	bge	a2, a4, 400e0b34 <_vfiprintf_r+0x1230>
400e0b29:	10c1a2        	addi	a10, a1, 16
400e0b2c:	b022a0        	addx8	a2, a2, a10
400e0b2f:	0278      	l32i.n	a7, a2, 0
400e0b31:	000846        	j	400e0b56 <_vfiprintf_r+0x1252>
400e0b34:	10c1b2        	addi	a11, a1, 16
400e0b37:	30a242        	movi	a4, 0x230
400e0b3a:	4b4a      	add.n	a4, a11, a4
400e0b3c:	34a2d2        	movi	a13, 0x234
400e0b3f:	40a2c2        	movi	a12, 0x240
400e0b42:	01dbf2        	addmi	a15, a11, 0x100
400e0b45:	0bed      	mov.n	a14, a11
400e0b47:	dbda      	add.n	a13, a11, a13
400e0b49:	cbca      	add.n	a12, a11, a12
400e0b4b:	0149      	s32i.n	a4, a1, 0
400e0b4d:	07bd      	mov.n	a11, a7
400e0b4f:	02ad      	mov.n	a10, a2
400e0b51:	fe8c65        	call8	400df418 <get_arg$isra$0>
400e0b54:	0a78      	l32i.n	a7, a10, 0
400e0b56:	9a6132        	s32i	a3, a1, 0x268
400e0b59:	002086        	j	400e0bdf <_vfiprintf_r+0x12db>
400e0b5c:	631b      	addi.n	a6, a3, 1
400e0b5e:	10c182        	addi	a8, a1, 16
400e0b61:	9a6162        	s32i	a6, a1, 0x268
400e0b64:	b02280        	addx8	a2, a2, a8
400e0b67:	722347        	blt	a3, a4, 400e0bdd <_vfiprintf_r+0x12d9>
400e0b6a:	f21c      	movi.n	a2, 31
400e0b6c:	3d2247        	blt	a2, a4, 400e0bad <_vfiprintf_r+0x12a9>
400e0b6f:	241b      	addi.n	a2, a4, 1
400e0b71:	10c192        	addi	a9, a1, 16
400e0b74:	916122        	s32i	a2, a1, 0x244
400e0b77:	02d922        	addmi	a2, a9, 0x200
400e0b7a:	122232        	l32i	a3, a2, 72
400e0b7d:	861c      	movi.n	a6, 24
400e0b7f:	834b      	addi.n	a8, a3, 4
400e0b81:	126282        	s32i	a8, a2, 72
400e0b84:	052687        	blt	a6, a8, 400e0b8d <_vfiprintf_r+0x1289>
400e0b87:	112232        	l32i	a3, a2, 68
400e0b8a:	000286        	j	400e0b98 <_vfiprintf_r+0x1294>
400e0b8d:	042637        	blt	a6, a3, 400e0b95 <_vfiprintf_r+0x1291>
400e0b90:	432c      	movi.n	a3, 36
400e0b92:	126232        	s32i	a3, a2, 72
400e0b95:	942132        	l32i	a3, a1, 0x250
400e0b98:	962122        	l32i	a2, a1, 0x258
400e0b9b:	10c1a2        	addi	a10, a1, 16
400e0b9e:	232a      	add.n	a2, a3, a2
400e0ba0:	fcc222        	addi	a2, a2, -4
400e0ba3:	0278      	l32i.n	a7, a2, 0
400e0ba5:	b044a0        	addx8	a4, a4, a10
400e0ba8:	0479      	s32i.n	a7, a4, 0
400e0baa:	000c46        	j	400e0bdf <_vfiprintf_r+0x12db>
400e0bad:	10c1b2        	addi	a11, a1, 16
400e0bb0:	02db22        	addmi	a2, a11, 0x200
400e0bb3:	122232        	l32i	a3, a2, 72
400e0bb6:	841c      	movi.n	a4, 24
400e0bb8:	634b      	addi.n	a6, a3, 4
400e0bba:	126262        	s32i	a6, a2, 72
400e0bbd:	082467        	blt	a4, a6, 400e0bc9 <_vfiprintf_r+0x12c5>
400e0bc0:	112232        	l32i	a3, a2, 68
400e0bc3:	000346        	j	400e0bd4 <_vfiprintf_r+0x12d0>
400e0bc6:	000000        	ill
400e0bc9:	042437        	blt	a4, a3, 400e0bd1 <_vfiprintf_r+0x12cd>
400e0bcc:	432c      	movi.n	a3, 36
400e0bce:	126232        	s32i	a3, a2, 72
400e0bd1:	942132        	l32i	a3, a1, 0x250
400e0bd4:	962122        	l32i	a2, a1, 0x258
400e0bd7:	802320        	add	a2, a3, a2
400e0bda:	fcc222        	addi	a2, a2, -4
400e0bdd:	0278      	l32i.n	a7, a2, 0
400e0bdf:	10c142        	addi	a4, a1, 16
400e0be2:	030c      	movi.n	a3, 0
400e0be4:	02d422        	addmi	a2, a4, 0x200
400e0be7:	9b2162        	l32i	a6, a1, 0x26c
400e0bea:	3a4232        	s8i	a3, a2, 58
400e0bed:	018696        	bltz	a6, 400e0c09 <_vfiprintf_r+0x1305>
400e0bf0:	06cd      	mov.n	a12, a6
400e0bf2:	0b0c      	movi.n	a11, 0
400e0bf4:	07ad      	mov.n	a10, a7
400e0bf6:	beeb81        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e0bf9:	0008e0        	callx8	a8
400e0bfc:	0a2d      	mov.n	a2, a10
400e0bfe:	1acc      	bnez.n	a10, 400e0c03 <_vfiprintf_r+0x12ff>
400e0c00:	026e06        	j	400e15bc <_vfiprintf_r+0x1cb8>
400e0c03:	c0aa70        	sub	a10, a10, a7
400e0c06:	0001c6        	j	400e0c11 <_vfiprintf_r+0x130d>
400e0c09:	07ad      	mov.n	a10, a7
400e0c0b:	bd1d81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e0c0e:	0008e0        	callx8	a8
400e0c11:	9b61a2        	s32i	a10, a1, 0x26c
400e0c14:	020c      	movi.n	a2, 0
400e0c16:	026886        	j	400e15bc <_vfiprintf_r+0x1cb8>
400e0c19:	041c      	movi.n	a4, 16
400e0c1b:	205540        	or	a5, a5, a4
400e0c1e:	02e557        	bbsi	a5, 5, 400e0c24 <_vfiprintf_r+0x1320>
400e0c21:	0034c6        	j	400e0cf8 <_vfiprintf_r+0x13f4>
400e0c24:	912182        	l32i	a8, a1, 0x244
400e0c27:	56bc      	beqz.n	a6, 400e0c60 <_vfiprintf_r+0x135c>
400e0c29:	0ca287        	bge	a2, a8, 400e0c39 <_vfiprintf_r+0x1335>
400e0c2c:	10c182        	addi	a8, a1, 16
400e0c2f:	b02280        	addx8	a2, a2, a8
400e0c32:	02e8      	l32i.n	a14, a2, 0
400e0c34:	1248      	l32i.n	a4, a2, 4
400e0c36:	00ec06        	j	400e0fea <_vfiprintf_r+0x16e6>
400e0c39:	10c192        	addi	a9, a1, 16
400e0c3c:	30a242        	movi	a4, 0x230
400e0c3f:	494a      	add.n	a4, a9, a4
400e0c41:	34a2d2        	movi	a13, 0x234
400e0c44:	40a2c2        	movi	a12, 0x240
400e0c47:	0149      	s32i.n	a4, a1, 0
400e0c49:	09ed      	mov.n	a14, a9
400e0c4b:	01d9f2        	addmi	a15, a9, 0x100
400e0c4e:	d9da      	add.n	a13, a9, a13
400e0c50:	c9ca      	add.n	a12, a9, a12
400e0c52:	07bd      	mov.n	a11, a7
400e0c54:	02ad      	mov.n	a10, a2
400e0c56:	fe7c25        	call8	400df418 <get_arg$isra$0>
400e0c59:	0ae8      	l32i.n	a14, a10, 0
400e0c5b:	1a48      	l32i.n	a4, a10, 4
400e0c5d:	00e246        	j	400e0fea <_vfiprintf_r+0x16e6>
400e0c60:	10c1a2        	addi	a10, a1, 16
400e0c63:	631b      	addi.n	a6, a3, 1
400e0c65:	b022a0        	addx8	a2, a2, a10
400e0c68:	02a387        	bge	a3, a8, 400e0c6e <_vfiprintf_r+0x136a>
400e0c6b:	002046        	j	400e0cf0 <_vfiprintf_r+0x13ec>
400e0c6e:	f21c      	movi.n	a2, 31
400e0c70:	482287        	blt	a2, a8, 400e0cbc <_vfiprintf_r+0x13b8>
400e0c73:	10c1b2        	addi	a11, a1, 16
400e0c76:	281b      	addi.n	a2, a8, 1
400e0c78:	02db32        	addmi	a3, a11, 0x200
400e0c7b:	916122        	s32i	a2, a1, 0x244
400e0c7e:	122322        	l32i	a2, a3, 72
400e0c81:	427b      	addi.n	a4, a2, 7
400e0c83:	827c      	movi.n	a2, -8
400e0c85:	102420        	and	a2, a4, a2
400e0c88:	728b      	addi.n	a7, a2, 8
400e0c8a:	126372        	s32i	a7, a3, 72
400e0c8d:	841c      	movi.n	a4, 24
400e0c8f:	052477        	blt	a4, a7, 400e0c98 <_vfiprintf_r+0x1394>
400e0c92:	112332        	l32i	a3, a3, 68
400e0c95:	000286        	j	400e0ca3 <_vfiprintf_r+0x139f>
400e0c98:	042427        	blt	a4, a2, 400e0ca0 <_vfiprintf_r+0x139c>
400e0c9b:	822c      	movi.n	a2, 40
400e0c9d:	126322        	s32i	a2, a3, 72
400e0ca0:	942132        	l32i	a3, a1, 0x250
400e0ca3:	962122        	l32i	a2, a1, 0x258
400e0ca6:	232a      	add.n	a2, a3, a2
400e0ca8:	f8c222        	addi	a2, a2, -8
400e0cab:	02e8      	l32i.n	a14, a2, 0
400e0cad:	1248      	l32i.n	a4, a2, 4
400e0caf:	10c132        	addi	a3, a1, 16
400e0cb2:	b02830        	addx8	a2, a8, a3
400e0cb5:	02e9      	s32i.n	a14, a2, 0
400e0cb7:	1249      	s32i.n	a4, a2, 4
400e0cb9:	00cac6        	j	400e0fe8 <_vfiprintf_r+0x16e4>
400e0cbc:	10c142        	addi	a4, a1, 16
400e0cbf:	02d422        	addmi	a2, a4, 0x200
400e0cc2:	122232        	l32i	a3, a2, 72
400e0cc5:	437b      	addi.n	a4, a3, 7
400e0cc7:	837c      	movi.n	a3, -8
400e0cc9:	103430        	and	a3, a4, a3
400e0ccc:	738b      	addi.n	a7, a3, 8
400e0cce:	126272        	s32i	a7, a2, 72
400e0cd1:	841c      	movi.n	a4, 24
400e0cd3:	062477        	blt	a4, a7, 400e0cdd <_vfiprintf_r+0x13d9>
400e0cd6:	112232        	l32i	a3, a2, 68
400e0cd9:	0002c6        	j	400e0ce8 <_vfiprintf_r+0x13e4>
400e0cdc:	243700        	extui	a3, a0, 7, 3
400e0cdf:	832c04        	lsi	f0, a12, 0x20c
400e0ce2:	126232        	s32i	a3, a2, 72
400e0ce5:	942132        	l32i	a3, a1, 0x250
400e0ce8:	962122        	l32i	a2, a1, 0x258
400e0ceb:	232a      	add.n	a2, a3, a2
400e0ced:	f8c222        	addi	a2, a2, -8
400e0cf0:	02e8      	l32i.n	a14, a2, 0
400e0cf2:	1248      	l32i.n	a4, a2, 4
400e0cf4:	00bc06        	j	400e0fe8 <_vfiprintf_r+0x16e4>
400e0cf7:	041c00        	extui	a1, a0, 12, 1
400e0cfa:	109540        	and	a9, a5, a4
400e0cfd:	07d916        	beqz	a9, 400e0d7e <_vfiprintf_r+0x147a>
400e0d00:	912142        	l32i	a4, a1, 0x244
400e0d03:	d69c      	beqz.n	a6, 400e0d24 <_vfiprintf_r+0x1420>
400e0d05:	08a247        	bge	a2, a4, 400e0d11 <_vfiprintf_r+0x140d>
400e0d08:	10c162        	addi	a6, a1, 16
400e0d0b:	b02260        	addx8	a2, a2, a6
400e0d0e:	0088c6        	j	400e0f35 <_vfiprintf_r+0x1631>
400e0d11:	10c182        	addi	a8, a1, 16
400e0d14:	30a242        	movi	a4, 0x230
400e0d17:	484a      	add.n	a4, a8, a4
400e0d19:	0149      	s32i.n	a4, a1, 0
400e0d1b:	01d8f2        	addmi	a15, a8, 0x100
400e0d1e:	08ed      	mov.n	a14, a8
400e0d20:	0089c6        	j	400e0f4b <_vfiprintf_r+0x1647>
400e0d23:	c19200        	mul16u	a9, a2, a0
400e0d26:	631b10        	minu	a1, a11, a1
400e0d29:	b02290        	addx8	a2, a2, a9
400e0d2c:	02a347        	bge	a3, a4, 400e0d32 <_vfiprintf_r+0x142e>
400e0d2f:	00ac46        	j	400e0fe4 <_vfiprintf_r+0x16e0>
400e0d32:	f21c      	movi.n	a2, 31
400e0d34:	3d2247        	blt	a2, a4, 400e0d75 <_vfiprintf_r+0x1471>
400e0d37:	241b      	addi.n	a2, a4, 1
400e0d39:	10c1a2        	addi	a10, a1, 16
400e0d3c:	916122        	s32i	a2, a1, 0x244
400e0d3f:	02da22        	addmi	a2, a10, 0x200
400e0d42:	122232        	l32i	a3, a2, 72
400e0d45:	871c      	movi.n	a7, 24
400e0d47:	834b      	addi.n	a8, a3, 4
400e0d49:	126282        	s32i	a8, a2, 72
400e0d4c:	052787        	blt	a7, a8, 400e0d55 <_vfiprintf_r+0x1451>
400e0d4f:	112232        	l32i	a3, a2, 68
400e0d52:	000286        	j	400e0d60 <_vfiprintf_r+0x145c>
400e0d55:	042737        	blt	a7, a3, 400e0d5d <_vfiprintf_r+0x1459>
400e0d58:	432c      	movi.n	a3, 36
400e0d5a:	126232        	s32i	a3, a2, 72
400e0d5d:	942132        	l32i	a3, a1, 0x250
400e0d60:	962122        	l32i	a2, a1, 0x258
400e0d63:	10c1b2        	addi	a11, a1, 16
400e0d66:	232a      	add.n	a2, a3, a2
400e0d68:	fcc222        	addi	a2, a2, -4
400e0d6b:	02e8      	l32i.n	a14, a2, 0
400e0d6d:	b024b0        	addx8	a2, a4, a11
400e0d70:	02e9      	s32i.n	a14, a2, 0
400e0d72:	009c06        	j	400e0fe6 <_vfiprintf_r+0x16e2>
400e0d75:	10c132        	addi	a3, a1, 16
400e0d78:	02d322        	addmi	a2, a3, 0x200
400e0d7b:	008f06        	j	400e0fbb <_vfiprintf_r+0x16b7>
400e0d7e:	044c      	movi.n	a4, 64
400e0d80:	104540        	and	a4, a5, a4
400e0d83:	0d1416        	beqz	a4, 400e0e58 <_vfiprintf_r+0x1554>
400e0d86:	912142        	l32i	a4, a1, 0x244
400e0d89:	f6bc      	beqz.n	a6, 400e0dcc <_vfiprintf_r+0x14c8>
400e0d8b:	0ea247        	bge	a2, a4, 400e0d9d <_vfiprintf_r+0x1499>
400e0d8e:	10c142        	addi	a4, a1, 16
400e0d91:	b02240        	addx8	a2, a2, a4
400e0d94:	0012e2        	l16ui	a14, a2, 0
400e0d97:	000ac6        	j	400e0dc6 <_vfiprintf_r+0x14c2>
400e0d9a:	000000        	ill
400e0d9d:	10c162        	addi	a6, a1, 16
400e0da0:	30a242        	movi	a4, 0x230
400e0da3:	464a      	add.n	a4, a6, a4
400e0da5:	34a2d2        	movi	a13, 0x234
400e0da8:	40a2c2        	movi	a12, 0x240
400e0dab:	06ed      	mov.n	a14, a6
400e0dad:	0149      	s32i.n	a4, a1, 0
400e0daf:	01d6f2        	addmi	a15, a6, 0x100
400e0db2:	d6da      	add.n	a13, a6, a13
400e0db4:	c6ca      	add.n	a12, a6, a12
400e0db6:	07bd      	mov.n	a11, a7
400e0db8:	02ad      	mov.n	a10, a2
400e0dba:	a66192        	s32i	a9, a1, 0x298
400e0dbd:	fe65a5        	call8	400df418 <get_arg$isra$0>
400e0dc0:	001ae2        	l16ui	a14, a10, 0
400e0dc3:	a62192        	l32i	a9, a1, 0x298
400e0dc6:	094d      	mov.n	a4, a9
400e0dc8:	008786        	j	400e0fea <_vfiprintf_r+0x16e6>
400e0dcb:	731b00        	maxu	a1, a11, a0
400e0dce:	0ba347        	bge	a3, a4, 400e0ddd <_vfiprintf_r+0x14d9>
400e0dd1:	10c182        	addi	a8, a1, 16
400e0dd4:	b02280        	addx8	a2, a2, a8
400e0dd7:	0012e2        	l16ui	a14, a2, 0
400e0dda:	003286        	j	400e0ea8 <_vfiprintf_r+0x15a4>
400e0ddd:	f21c      	movi.n	a2, 31
400e0ddf:	412247        	blt	a2, a4, 400e0e24 <_vfiprintf_r+0x1520>
400e0de2:	241b      	addi.n	a2, a4, 1
400e0de4:	10c192        	addi	a9, a1, 16
400e0de7:	916122        	s32i	a2, a1, 0x244
400e0dea:	02d922        	addmi	a2, a9, 0x200
400e0ded:	122232        	l32i	a3, a2, 72
400e0df0:	861c      	movi.n	a6, 24
400e0df2:	834b      	addi.n	a8, a3, 4
400e0df4:	126282        	s32i	a8, a2, 72
400e0df7:	052687        	blt	a6, a8, 400e0e00 <_vfiprintf_r+0x14fc>
400e0dfa:	112232        	l32i	a3, a2, 68
400e0dfd:	000286        	j	400e0e0b <_vfiprintf_r+0x1507>
400e0e00:	042637        	blt	a6, a3, 400e0e08 <_vfiprintf_r+0x1504>
400e0e03:	432c      	movi.n	a3, 36
400e0e05:	126232        	s32i	a3, a2, 72
400e0e08:	942132        	l32i	a3, a1, 0x250
400e0e0b:	962122        	l32i	a2, a1, 0x258
400e0e0e:	10c1a2        	addi	a10, a1, 16
400e0e11:	232a      	add.n	a2, a3, a2
400e0e13:	fcc222        	addi	a2, a2, -4
400e0e16:	02e8      	l32i.n	a14, a2, 0
400e0e18:	b044a0        	addx8	a4, a4, a10
400e0e1b:	04e9      	s32i.n	a14, a4, 0
400e0e1d:	f4e0e0        	extui	a14, a14, 0, 16
400e0e20:	003fc6        	j	400e0f23 <_vfiprintf_r+0x161f>
400e0e23:	c1b200        	mul16u	a11, a2, a0
400e0e26:	db2210        	movt.s	f2, f2, b1
400e0e29:	223202        	lsi	f0, a2, 136
400e0e2c:	841c12        	l16ui	a1, a12, 0x108
400e0e2f:	634b      	addi.n	a6, a3, 4
400e0e31:	126262        	s32i	a6, a2, 72
400e0e34:	052467        	blt	a4, a6, 400e0e3d <_vfiprintf_r+0x1539>
400e0e37:	112232        	l32i	a3, a2, 68
400e0e3a:	000286        	j	400e0e48 <_vfiprintf_r+0x1544>
400e0e3d:	042437        	blt	a4, a3, 400e0e45 <_vfiprintf_r+0x1541>
400e0e40:	432c      	movi.n	a3, 36
400e0e42:	126232        	s32i	a3, a2, 72
400e0e45:	942132        	l32i	a3, a1, 0x250
400e0e48:	962122        	l32i	a2, a1, 0x258
400e0e4b:	232a      	add.n	a2, a3, a2
400e0e4d:	fcc222        	addi	a2, a2, -4
400e0e50:	0012e2        	l16ui	a14, a2, 0
400e0e53:	003306        	j	400e0f23 <_vfiprintf_r+0x161f>
400e0e56:	820000        	mull	a0, a0, a0
400e0e59:	979121        	l32r	a2, 400c6ca0 <_rtc_text_end+0x6ca0>
400e0e5c:	0602e5        	call8	400e6e8c <_svfiprintf_r+0x870>
400e0e5f:	bc0032        	l8ui	a3, a0, 188
400e0e62:	a28756        	bnez	a7, 400e088e <_vfiprintf_r+0xf8a>
400e0e65:	620d      	lsi	f0, a2, 8
400e0e67:	6010c1        	l32r	a12, 400b8ea8 <_iram_end+0x2b354>
400e0e6a:	e2b022        	l32ai	a2, a0, 0x388
400e0e6d:	c60002        	l8ui	a0, a0, 198
400e0e70:	005d      	mov.n	a5, a0
400e0e72:	820000        	mull	a0, a0, a0
400e0e75:	6210c1        	l32r	a12, 400b96b8 <_iram_end+0x2bb64>
400e0e78:	6a30a2        	lsi	f10, a0, 0x1a8
400e0e7b:	d268      	l32i.n	a6, a2, 52
400e0e7d:	c234a2        	lsi	f10, a4, 0x308
400e0e80:	ed40a2        	s8i	a10, a0, 237
400e0e83:	6908      	l32i.n	a0, a9, 24
400e0e85:	d8f201        	l32r	a0, 400d7250 <lookup_storage_from_name(char const*)+0x30>
400e0e88:	d8da01        	l32r	a0, 400d71f0 <bootloader_common_set_flash_cs_timing+0x68>
400e0e8b:	c8ca      	add.n	a12, a8, a12
400e0e8d:	07bd      	mov.n	a11, a7
400e0e8f:	02ad      	mov.n	a10, a2
400e0e91:	fe5865        	call8	400df418 <get_arg$isra$0>
400e0e94:	000ae2        	l8ui	a14, a10, 0
400e0e97:	0053c6        	j	400e0fea <_vfiprintf_r+0x16e6>
400e0e9a:	731b      	addi.n	a7, a3, 1
400e0e9c:	0da387        	bge	a3, a8, 400e0ead <_vfiprintf_r+0x15a9>
400e0e9f:	10c192        	addi	a9, a1, 16
400e0ea2:	b02290        	addx8	a2, a2, a9
400e0ea5:	0002e2        	l8ui	a14, a2, 0
400e0ea8:	064d      	mov.n	a4, a6
400e0eaa:	001dc6        	j	400e0f25 <_vfiprintf_r+0x1621>
400e0ead:	f21c      	movi.n	a2, 31
400e0eaf:	412287        	blt	a2, a8, 400e0ef4 <_vfiprintf_r+0x15f0>
400e0eb2:	281b      	addi.n	a2, a8, 1
400e0eb4:	10c1a2        	addi	a10, a1, 16
400e0eb7:	916122        	s32i	a2, a1, 0x244
400e0eba:	02da22        	addmi	a2, a10, 0x200
400e0ebd:	122232        	l32i	a3, a2, 72
400e0ec0:	841c      	movi.n	a4, 24
400e0ec2:	634b      	addi.n	a6, a3, 4
400e0ec4:	126262        	s32i	a6, a2, 72
400e0ec7:	052467        	blt	a4, a6, 400e0ed0 <_vfiprintf_r+0x15cc>
400e0eca:	112232        	l32i	a3, a2, 68
400e0ecd:	000286        	j	400e0edb <_vfiprintf_r+0x15d7>
400e0ed0:	042437        	blt	a4, a3, 400e0ed8 <_vfiprintf_r+0x15d4>
400e0ed3:	432c      	movi.n	a3, 36
400e0ed5:	126232        	s32i	a3, a2, 72
400e0ed8:	942132        	l32i	a3, a1, 0x250
400e0edb:	962122        	l32i	a2, a1, 0x258
400e0ede:	10c1b2        	addi	a11, a1, 16
400e0ee1:	232a      	add.n	a2, a3, a2
400e0ee3:	fcc222        	addi	a2, a2, -4
400e0ee6:	02e8      	l32i.n	a14, a2, 0
400e0ee8:	b088b0        	addx8	a8, a8, a11
400e0eeb:	08e9      	s32i.n	a14, a8, 0
400e0eed:	74e0e0        	extui	a14, a14, 0, 8
400e0ef0:	000bc6        	j	400e0f23 <_vfiprintf_r+0x161f>
400e0ef3:	c13200        	mul16u	a3, a2, a0
400e0ef6:	d32210        	movt	a2, a2, b1
400e0ef9:	223202        	lsi	f0, a2, 136
400e0efc:	841c12        	l16ui	a1, a12, 0x108
400e0eff:	634b      	addi.n	a6, a3, 4
400e0f01:	126262        	s32i	a6, a2, 72
400e0f04:	052467        	blt	a4, a6, 400e0f0d <_vfiprintf_r+0x1609>
400e0f07:	112232        	l32i	a3, a2, 68
400e0f0a:	000286        	j	400e0f18 <_vfiprintf_r+0x1614>
400e0f0d:	042437        	blt	a4, a3, 400e0f15 <_vfiprintf_r+0x1611>
400e0f10:	432c      	movi.n	a3, 36
400e0f12:	126232        	s32i	a3, a2, 72
400e0f15:	942132        	l32i	a3, a1, 0x250
400e0f18:	962122        	l32i	a2, a1, 0x258
400e0f1b:	232a      	add.n	a2, a3, a2
400e0f1d:	fcc222        	addi	a2, a2, -4
400e0f20:	0002e2        	l8ui	a14, a2, 0
400e0f23:	040c      	movi.n	a4, 0
400e0f25:	073d      	mov.n	a3, a7
400e0f27:	002fc6        	j	400e0fea <_vfiprintf_r+0x16e6>
400e0f2a:	66bc      	beqz.n	a6, 400e0f64 <_vfiprintf_r+0x1660>
400e0f2c:	0ca287        	bge	a2, a8, 400e0f3c <_vfiprintf_r+0x1638>
400e0f2f:	10c142        	addi	a4, a1, 16
400e0f32:	b02240        	addx8	a2, a2, a4
400e0f35:	02e8      	l32i.n	a14, a2, 0
400e0f37:	0008c6        	j	400e0f5e <_vfiprintf_r+0x165a>
400e0f3a:	620000        	lsi	f0, a0, 0x188
400e0f3d:	4210c1        	l32r	a12, 400b1780 <_iram_end+0x23c2c>
400e0f40:	4a30a2        	lsi	f10, a0, 0x128
400e0f43:	014946        	j	400e146c <_vfiprintf_r+0x1b68>
400e0f46:	01d6f2        	addmi	a15, a6, 0x100
400e0f49:	06ed      	mov.n	a14, a6
400e0f4b:	34a2d2        	movi	a13, 0x234
400e0f4e:	40a2c2        	movi	a12, 0x240
400e0f51:	deda      	add.n	a13, a14, a13
400e0f53:	ceca      	add.n	a12, a14, a12
400e0f55:	07bd      	mov.n	a11, a7
400e0f57:	02ad      	mov.n	a10, a2
400e0f59:	fe4be5        	call8	400df418 <get_arg$isra$0>
400e0f5c:	0ae8      	l32i.n	a14, a10, 0
400e0f5e:	036d      	mov.n	a6, a3
400e0f60:	002086        	j	400e0fe6 <_vfiprintf_r+0x16e2>
400e0f63:	631b00        	minu	a1, a11, a0
400e0f66:	08a387        	bge	a3, a8, 400e0f72 <_vfiprintf_r+0x166e>
400e0f69:	10c182        	addi	a8, a1, 16
400e0f6c:	b02280        	addx8	a2, a2, a8
400e0f6f:	001c46        	j	400e0fe4 <_vfiprintf_r+0x16e0>
400e0f72:	f21c      	movi.n	a2, 31
400e0f74:	3d2287        	blt	a2, a8, 400e0fb5 <_vfiprintf_r+0x16b1>
400e0f77:	281b      	addi.n	a2, a8, 1
400e0f79:	10c192        	addi	a9, a1, 16
400e0f7c:	916122        	s32i	a2, a1, 0x244
400e0f7f:	02d922        	addmi	a2, a9, 0x200
400e0f82:	122232        	l32i	a3, a2, 72
400e0f85:	841c      	movi.n	a4, 24
400e0f87:	734b      	addi.n	a7, a3, 4
400e0f89:	126272        	s32i	a7, a2, 72
400e0f8c:	052477        	blt	a4, a7, 400e0f95 <_vfiprintf_r+0x1691>
400e0f8f:	112232        	l32i	a3, a2, 68
400e0f92:	000286        	j	400e0fa0 <_vfiprintf_r+0x169c>
400e0f95:	042437        	blt	a4, a3, 400e0f9d <_vfiprintf_r+0x1699>
400e0f98:	432c      	movi.n	a3, 36
400e0f9a:	126232        	s32i	a3, a2, 72
400e0f9d:	942132        	l32i	a3, a1, 0x250
400e0fa0:	962122        	l32i	a2, a1, 0x258
400e0fa3:	10c1a2        	addi	a10, a1, 16
400e0fa6:	232a      	add.n	a2, a3, a2
400e0fa8:	fcc222        	addi	a2, a2, -4
400e0fab:	02e8      	l32i.n	a14, a2, 0
400e0fad:	b088a0        	addx8	a8, a8, a10
400e0fb0:	08e9      	s32i.n	a14, a8, 0
400e0fb2:	000c06        	j	400e0fe6 <_vfiprintf_r+0x16e2>
400e0fb5:	10c1b2        	addi	a11, a1, 16
400e0fb8:	02db22        	addmi	a2, a11, 0x200
400e0fbb:	122232        	l32i	a3, a2, 72
400e0fbe:	841c      	movi.n	a4, 24
400e0fc0:	734b      	addi.n	a7, a3, 4
400e0fc2:	126272        	s32i	a7, a2, 72
400e0fc5:	082477        	blt	a4, a7, 400e0fd1 <_vfiprintf_r+0x16cd>
400e0fc8:	112232        	l32i	a3, a2, 68
400e0fcb:	000346        	j	400e0fdc <_vfiprintf_r+0x16d8>
400e0fce:	000000        	ill
400e0fd1:	042437        	blt	a4, a3, 400e0fd9 <_vfiprintf_r+0x16d5>
400e0fd4:	432c      	movi.n	a3, 36
400e0fd6:	126232        	s32i	a3, a2, 72
400e0fd9:	942132        	l32i	a3, a1, 0x250
400e0fdc:	962122        	l32i	a2, a1, 0x258
400e0fdf:	232a      	add.n	a2, a3, a2
400e0fe1:	fcc222        	addi	a2, a2, -4
400e0fe4:	02e8      	l32i.n	a14, a2, 0
400e0fe6:	040c      	movi.n	a4, 0
400e0fe8:	063d      	mov.n	a3, a6
400e0fea:	120c      	movi.n	a2, 1
400e0fec:	010246        	j	400e13f9 <_vfiprintf_r+0x1af5>
400e0fef:	bdf541        	l32r	a4, 400d07c4 <_flash_cache_start+0x7ac>
400e0ff2:	9f6142        	s32i	a4, a1, 0x27c
400e0ff5:	02e557        	bbsi	a5, 5, 400e0ffb <_vfiprintf_r+0x16f7>
400e0ff8:	003606        	j	400e10d4 <_vfiprintf_r+0x17d0>
400e0ffb:	912192        	l32i	a9, a1, 0x244
400e0ffe:	a6bc      	beqz.n	a6, 400e103c <_vfiprintf_r+0x1738>
400e1000:	0ca297        	bge	a2, a9, 400e1010 <_vfiprintf_r+0x170c>
400e1003:	10c162        	addi	a6, a1, 16
400e1006:	b02260        	addx8	a2, a2, a6
400e1009:	02e8      	l32i.n	a14, a2, 0
400e100b:	1248      	l32i.n	a4, a2, 4
400e100d:	00f146        	j	400e13d6 <_vfiprintf_r+0x1ad2>
400e1010:	10c192        	addi	a9, a1, 16
400e1013:	30a242        	movi	a4, 0x230
400e1016:	494a      	add.n	a4, a9, a4
400e1018:	34a2d2        	movi	a13, 0x234
400e101b:	40a2c2        	movi	a12, 0x240
400e101e:	0149      	s32i.n	a4, a1, 0
400e1020:	09ed      	mov.n	a14, a9
400e1022:	01d9f2        	addmi	a15, a9, 0x100
400e1025:	d9da      	add.n	a13, a9, a13
400e1027:	c9ca      	add.n	a12, a9, a12
400e1029:	07bd      	mov.n	a11, a7
400e102b:	20a220        	or	a10, a2, a2
400e102e:	a46182        	s32i	a8, a1, 0x290
400e1031:	fe3e65        	call8	400df418 <get_arg$isra$0>
400e1034:	0ae8      	l32i.n	a14, a10, 0
400e1036:	1a48      	l32i.n	a4, a10, 4
400e1038:	008fc6        	j	400e127b <_vfiprintf_r+0x1977>
400e103b:	c1a200        	mul16u	a10, a2, a0
400e103e:	631b10        	minu	a1, a11, a1
400e1041:	b022a0        	addx8	a2, a2, a10
400e1044:	02a397        	bge	a3, a9, 400e104a <_vfiprintf_r+0x1746>
400e1047:	002046        	j	400e10cc <_vfiprintf_r+0x17c8>
400e104a:	f21c      	movi.n	a2, 31
400e104c:	482297        	blt	a2, a9, 400e1098 <_vfiprintf_r+0x1794>
400e104f:	10c1b2        	addi	a11, a1, 16
400e1052:	291b      	addi.n	a2, a9, 1
400e1054:	02db32        	addmi	a3, a11, 0x200
400e1057:	916122        	s32i	a2, a1, 0x244
400e105a:	122322        	l32i	a2, a3, 72
400e105d:	427b      	addi.n	a4, a2, 7
400e105f:	827c      	movi.n	a2, -8
400e1061:	102420        	and	a2, a4, a2
400e1064:	728b      	addi.n	a7, a2, 8
400e1066:	126372        	s32i	a7, a3, 72
400e1069:	841c      	movi.n	a4, 24
400e106b:	052477        	blt	a4, a7, 400e1074 <_vfiprintf_r+0x1770>
400e106e:	112332        	l32i	a3, a3, 68
400e1071:	000286        	j	400e107f <_vfiprintf_r+0x177b>
400e1074:	042427        	blt	a4, a2, 400e107c <_vfiprintf_r+0x1778>
400e1077:	822c      	movi.n	a2, 40
400e1079:	126322        	s32i	a2, a3, 72
400e107c:	942132        	l32i	a3, a1, 0x250
400e107f:	962122        	l32i	a2, a1, 0x258
400e1082:	232a      	add.n	a2, a3, a2
400e1084:	f8c222        	addi	a2, a2, -8
400e1087:	02e8      	l32i.n	a14, a2, 0
400e1089:	1248      	l32i.n	a4, a2, 4
400e108b:	10c132        	addi	a3, a1, 16
400e108e:	b02930        	addx8	a2, a9, a3
400e1091:	02e9      	s32i.n	a14, a2, 0
400e1093:	1249      	s32i.n	a4, a2, 4
400e1095:	00cec6        	j	400e13d4 <_vfiprintf_r+0x1ad0>
400e1098:	10c142        	addi	a4, a1, 16
400e109b:	02d432        	addmi	a3, a4, 0x200
400e109e:	122322        	l32i	a2, a3, 72
400e10a1:	427b      	addi.n	a4, a2, 7
400e10a3:	827c      	movi.n	a2, -8
400e10a5:	102420        	and	a2, a4, a2
400e10a8:	728b      	addi.n	a7, a2, 8
400e10aa:	126372        	s32i	a7, a3, 72
400e10ad:	841c      	movi.n	a4, 24
400e10af:	062477        	blt	a4, a7, 400e10b9 <_vfiprintf_r+0x17b5>
400e10b2:	112332        	l32i	a3, a3, 68
400e10b5:	0002c6        	j	400e10c4 <_vfiprintf_r+0x17c0>
400e10b8:	242700        	extui	a2, a0, 7, 3
400e10bb:	822c04        	lsi	f0, a12, 0x208
400e10be:	126322        	s32i	a2, a3, 72
400e10c1:	942132        	l32i	a3, a1, 0x250
400e10c4:	962122        	l32i	a2, a1, 0x258
400e10c7:	232a      	add.n	a2, a3, a2
400e10c9:	f8c222        	addi	a2, a2, -8
400e10cc:	02e8      	l32i.n	a14, a2, 0
400e10ce:	1248      	l32i.n	a4, a2, 4
400e10d0:	00c006        	j	400e13d4 <_vfiprintf_r+0x1ad0>
400e10d3:	091c00        	l32e	a0, a12, -60
400e10d6:	109590        	and	a9, a5, a9
400e10d9:	07d916        	beqz	a9, 400e115a <_vfiprintf_r+0x1856>
400e10dc:	912142        	l32i	a4, a1, 0x244
400e10df:	d69c      	beqz.n	a6, 400e1100 <_vfiprintf_r+0x17fc>
400e10e1:	08a247        	bge	a2, a4, 400e10ed <_vfiprintf_r+0x17e9>
400e10e4:	10c162        	addi	a6, a1, 16
400e10e7:	b02260        	addx8	a2, a2, a6
400e10ea:	008b86        	j	400e131c <_vfiprintf_r+0x1a18>
400e10ed:	10c192        	addi	a9, a1, 16
400e10f0:	30a242        	movi	a4, 0x230
400e10f3:	494a      	add.n	a4, a9, a4
400e10f5:	0149      	s32i.n	a4, a1, 0
400e10f7:	01d9f2        	addmi	a15, a9, 0x100
400e10fa:	09ed      	mov.n	a14, a9
400e10fc:	008d06        	j	400e1334 <_vfiprintf_r+0x1a30>
400e10ff:	c1a200        	mul16u	a10, a2, a0
400e1102:	631b10        	minu	a1, a11, a1
400e1105:	b022a0        	addx8	a2, a2, a10
400e1108:	02a347        	bge	a3, a4, 400e110e <_vfiprintf_r+0x180a>
400e110b:	00b046        	j	400e13d0 <_vfiprintf_r+0x1acc>
400e110e:	f21c      	movi.n	a2, 31
400e1110:	3d2247        	blt	a2, a4, 400e1151 <_vfiprintf_r+0x184d>
400e1113:	241b      	addi.n	a2, a4, 1
400e1115:	10c1b2        	addi	a11, a1, 16
400e1118:	916122        	s32i	a2, a1, 0x244
400e111b:	02db22        	addmi	a2, a11, 0x200
400e111e:	122232        	l32i	a3, a2, 72
400e1121:	871c      	movi.n	a7, 24
400e1123:	934b      	addi.n	a9, a3, 4
400e1125:	126292        	s32i	a9, a2, 72
400e1128:	052797        	blt	a7, a9, 400e1131 <_vfiprintf_r+0x182d>
400e112b:	112232        	l32i	a3, a2, 68
400e112e:	000286        	j	400e113c <_vfiprintf_r+0x1838>
400e1131:	042737        	blt	a7, a3, 400e1139 <_vfiprintf_r+0x1835>
400e1134:	432c      	movi.n	a3, 36
400e1136:	126232        	s32i	a3, a2, 72
400e1139:	942132        	l32i	a3, a1, 0x250
400e113c:	962122        	l32i	a2, a1, 0x258
400e113f:	232a      	add.n	a2, a3, a2
400e1141:	fcc222        	addi	a2, a2, -4
400e1144:	02e8      	l32i.n	a14, a2, 0
400e1146:	10c132        	addi	a3, a1, 16
400e1149:	b02430        	addx8	a2, a4, a3
400e114c:	02e9      	s32i.n	a14, a2, 0
400e114e:	00a006        	j	400e13d2 <_vfiprintf_r+0x1ace>
400e1151:	10c142        	addi	a4, a1, 16
400e1154:	02d422        	addmi	a2, a4, 0x200
400e1157:	0093c6        	j	400e13aa <_vfiprintf_r+0x1aa6>
400e115a:	044c      	movi.n	a4, 64
400e115c:	104540        	and	a4, a5, a4
400e115f:	0d5416        	beqz	a4, 400e1238 <_vfiprintf_r+0x1934>
400e1162:	912142        	l32i	a4, a1, 0x244
400e1165:	043616        	beqz	a6, 400e11ac <_vfiprintf_r+0x18a8>
400e1168:	0da247        	bge	a2, a4, 400e1179 <_vfiprintf_r+0x1875>
400e116b:	10c162        	addi	a6, a1, 16
400e116e:	b02260        	addx8	a2, a2, a6
400e1171:	0012e2        	l16ui	a14, a2, 0
400e1174:	094d      	mov.n	a4, a9
400e1176:	009706        	j	400e13d6 <_vfiprintf_r+0x1ad2>
400e1179:	10c1a2        	addi	a10, a1, 16
400e117c:	30a242        	movi	a4, 0x230
400e117f:	4a4a      	add.n	a4, a10, a4
400e1181:	34a2d2        	movi	a13, 0x234
400e1184:	40a2c2        	movi	a12, 0x240
400e1187:	0aed      	mov.n	a14, a10
400e1189:	0149      	s32i.n	a4, a1, 0
400e118b:	01daf2        	addmi	a15, a10, 0x100
400e118e:	dada      	add.n	a13, a10, a13
400e1190:	caca      	add.n	a12, a10, a12
400e1192:	07bd      	mov.n	a11, a7
400e1194:	20a220        	or	a10, a2, a2
400e1197:	a66192        	s32i	a9, a1, 0x298
400e119a:	a46182        	s32i	a8, a1, 0x290
400e119d:	fe27a5        	call8	400df418 <get_arg$isra$0>
400e11a0:	a62192        	l32i	a9, a1, 0x298
400e11a3:	001ae2        	l16ui	a14, a10, 0
400e11a6:	094d      	mov.n	a4, a9
400e11a8:	0033c6        	j	400e127b <_vfiprintf_r+0x1977>
400e11ab:	731b00        	maxu	a1, a11, a0
400e11ae:	0ba347        	bge	a3, a4, 400e11bd <_vfiprintf_r+0x18b9>
400e11b1:	10c1b2        	addi	a11, a1, 16
400e11b4:	b022b0        	addx8	a2, a2, a11
400e11b7:	0012e2        	l16ui	a14, a2, 0
400e11ba:	003446        	j	400e128f <_vfiprintf_r+0x198b>
400e11bd:	f21c      	movi.n	a2, 31
400e11bf:	412247        	blt	a2, a4, 400e1204 <_vfiprintf_r+0x1900>
400e11c2:	241b      	addi.n	a2, a4, 1
400e11c4:	10c132        	addi	a3, a1, 16
400e11c7:	916122        	s32i	a2, a1, 0x244
400e11ca:	02d322        	addmi	a2, a3, 0x200
400e11cd:	122232        	l32i	a3, a2, 72
400e11d0:	861c      	movi.n	a6, 24
400e11d2:	934b      	addi.n	a9, a3, 4
400e11d4:	126292        	s32i	a9, a2, 72
400e11d7:	052697        	blt	a6, a9, 400e11e0 <_vfiprintf_r+0x18dc>
400e11da:	112232        	l32i	a3, a2, 68
400e11dd:	000286        	j	400e11eb <_vfiprintf_r+0x18e7>
400e11e0:	042637        	blt	a6, a3, 400e11e8 <_vfiprintf_r+0x18e4>
400e11e3:	432c      	movi.n	a3, 36
400e11e5:	126232        	s32i	a3, a2, 72
400e11e8:	942132        	l32i	a3, a1, 0x250
400e11eb:	962122        	l32i	a2, a1, 0x258
400e11ee:	10c162        	addi	a6, a1, 16
400e11f1:	232a      	add.n	a2, a3, a2
400e11f3:	fcc222        	addi	a2, a2, -4
400e11f6:	02e8      	l32i.n	a14, a2, 0
400e11f8:	b04460        	addx8	a4, a4, a6
400e11fb:	04e9      	s32i.n	a14, a4, 0
400e11fd:	f4e0e0        	extui	a14, a14, 0, 16
400e1200:	004186        	j	400e130a <_vfiprintf_r+0x1a06>
400e1203:	c19200        	mul16u	a9, a2, a0
400e1206:	d92210        	lsi	f1, a2, 0x364
400e1209:	223202        	lsi	f0, a2, 136
400e120c:	841c12        	l16ui	a1, a12, 0x108
400e120f:	634b      	addi.n	a6, a3, 4
400e1211:	126262        	s32i	a6, a2, 72
400e1214:	052467        	blt	a4, a6, 400e121d <_vfiprintf_r+0x1919>
400e1217:	112232        	l32i	a3, a2, 68
400e121a:	000286        	j	400e1228 <_vfiprintf_r+0x1924>
400e121d:	042437        	blt	a4, a3, 400e1225 <_vfiprintf_r+0x1921>
400e1220:	432c      	movi.n	a3, 36
400e1222:	126232        	s32i	a3, a2, 72
400e1225:	942132        	l32i	a3, a1, 0x250
400e1228:	962122        	l32i	a2, a1, 0x258
400e122b:	232a      	add.n	a2, a3, a2
400e122d:	fcc222        	addi	a2, a2, -4
400e1230:	0012e2        	l16ui	a14, a2, 0
400e1233:	0034c6        	j	400e130a <_vfiprintf_r+0x1a06>
400e1236:	920000        	lsi	f0, a0, 0x248
400e1239:	979121        	l32r	a2, 400c7080 <_rtc_text_end+0x7080>
400e123c:	c602e5        	call8	400a726c <_iram_end+0x19718>
400e123f:	bc0033        	lsi	f3, a0, 0x2f0
400e1242:	a297c6        	j	400c9ca5 <_rtc_text_end+0x9ca5>
400e1245:	0e          	.byte 0xe
400e1246:	10c1a2        	addi	a10, a1, 16
400e1249:	b022a0        	addx8	a2, a2, a10
400e124c:	0002e2        	l8ui	a14, a2, 0
400e124f:	0060c6        	j	400e13d6 <_vfiprintf_r+0x1ad2>
400e1252:	000000        	ill
400e1255:	10c1b2        	addi	a11, a1, 16
400e1258:	30a262        	movi	a6, 0x230
400e125b:	6b6a      	add.n	a6, a11, a6
400e125d:	34a2d2        	movi	a13, 0x234
400e1260:	40a2c2        	movi	a12, 0x240
400e1263:	0bed      	mov.n	a14, a11
400e1265:	01dbf2        	addmi	a15, a11, 0x100
400e1268:	dbda      	add.n	a13, a11, a13
400e126a:	cbca      	add.n	a12, a11, a12
400e126c:	0169      	s32i.n	a6, a1, 0
400e126e:	07bd      	mov.n	a11, a7
400e1270:	02ad      	mov.n	a10, a2
400e1272:	a46182        	s32i	a8, a1, 0x290
400e1275:	fe1a25        	call8	400df418 <get_arg$isra$0>
400e1278:	000ae2        	l8ui	a14, a10, 0
400e127b:	a42182        	l32i	a8, a1, 0x290
400e127e:	005506        	j	400e13d6 <_vfiprintf_r+0x1ad2>
400e1281:	731b      	addi.n	a7, a3, 1
400e1283:	0da397        	bge	a3, a9, 400e1294 <_vfiprintf_r+0x1990>
400e1286:	10c132        	addi	a3, a1, 16
400e1289:	b02230        	addx8	a2, a2, a3
400e128c:	0002e2        	l8ui	a14, a2, 0
400e128f:	064d      	mov.n	a4, a6
400e1291:	001dc6        	j	400e130c <_vfiprintf_r+0x1a08>
400e1294:	f21c      	movi.n	a2, 31
400e1296:	412297        	blt	a2, a9, 400e12db <_vfiprintf_r+0x19d7>
400e1299:	291b      	addi.n	a2, a9, 1
400e129b:	10c142        	addi	a4, a1, 16
400e129e:	916122        	s32i	a2, a1, 0x244
400e12a1:	02d422        	addmi	a2, a4, 0x200
400e12a4:	122232        	l32i	a3, a2, 72
400e12a7:	841c      	movi.n	a4, 24
400e12a9:	634b      	addi.n	a6, a3, 4
400e12ab:	126262        	s32i	a6, a2, 72
400e12ae:	062467        	blt	a4, a6, 400e12b8 <_vfiprintf_r+0x19b4>
400e12b1:	112232        	l32i	a3, a2, 68
400e12b4:	0002c6        	j	400e12c3 <_vfiprintf_r+0x19bf>
400e12b7:	243700        	extui	a3, a0, 7, 3
400e12ba:	432c04        	lsi	f0, a12, 0x10c
400e12bd:	126232        	s32i	a3, a2, 72
400e12c0:	942132        	l32i	a3, a1, 0x250
400e12c3:	962122        	l32i	a2, a1, 0x258
400e12c6:	10c162        	addi	a6, a1, 16
400e12c9:	232a      	add.n	a2, a3, a2
400e12cb:	fcc222        	addi	a2, a2, -4
400e12ce:	02e8      	l32i.n	a14, a2, 0
400e12d0:	b09960        	addx8	a9, a9, a6
400e12d3:	09e9      	s32i.n	a14, a9, 0
400e12d5:	74e0e0        	extui	a14, a14, 0, 8
400e12d8:	000b86        	j	400e130a <_vfiprintf_r+0x1a06>
400e12db:	10c192        	addi	a9, a1, 16
400e12de:	02d922        	addmi	a2, a9, 0x200
400e12e1:	122232        	l32i	a3, a2, 72
400e12e4:	841c      	movi.n	a4, 24
400e12e6:	634b      	addi.n	a6, a3, 4
400e12e8:	126262        	s32i	a6, a2, 72
400e12eb:	052467        	blt	a4, a6, 400e12f4 <_vfiprintf_r+0x19f0>
400e12ee:	112232        	l32i	a3, a2, 68
400e12f1:	000286        	j	400e12ff <_vfiprintf_r+0x19fb>
400e12f4:	042437        	blt	a4, a3, 400e12fc <_vfiprintf_r+0x19f8>
400e12f7:	432c      	movi.n	a3, 36
400e12f9:	126232        	s32i	a3, a2, 72
400e12fc:	942132        	l32i	a3, a1, 0x250
400e12ff:	962122        	l32i	a2, a1, 0x258
400e1302:	232a      	add.n	a2, a3, a2
400e1304:	fcc222        	addi	a2, a2, -4
400e1307:	0002e2        	l8ui	a14, a2, 0
400e130a:	040c      	movi.n	a4, 0
400e130c:	073d      	mov.n	a3, a7
400e130e:	003106        	j	400e13d6 <_vfiprintf_r+0x1ad2>
400e1311:	d6bc      	beqz.n	a6, 400e1352 <_vfiprintf_r+0x1a4e>
400e1313:	0ea297        	bge	a2, a9, 400e1325 <_vfiprintf_r+0x1a21>
400e1316:	10c1a2        	addi	a10, a1, 16
400e1319:	b022a0        	addx8	a2, a2, a10
400e131c:	02e8      	l32i.n	a14, a2, 0
400e131e:	036d      	mov.n	a6, a3
400e1320:	002b86        	j	400e13d2 <_vfiprintf_r+0x1ace>
400e1323:	b20000        	mulsh	a0, a0, a0
400e1326:	4210c1        	l32r	a12, 400b1b68 <_iram_end+0x24014>
400e1329:	4a30a2        	lsi	f10, a0, 0x128
400e132c:	494b      	addi.n	a4, a9, 4
400e132e:	dbf201        	l32r	a0, 400d82f8 <nvs::Page::mLoadEntryTable()+0x194>
400e1331:	0bed01        	l32r	a0, 400a42e8 <_iram_end+0x16794>
400e1334:	34a2d2        	movi	a13, 0x234
400e1337:	40a2c2        	movi	a12, 0x240
400e133a:	deda      	add.n	a13, a14, a13
400e133c:	ceca      	add.n	a12, a14, a12
400e133e:	07bd      	mov.n	a11, a7
400e1340:	02ad      	mov.n	a10, a2
400e1342:	a46182        	s32i	a8, a1, 0x290
400e1345:	fe0d25        	call8	400df418 <get_arg$isra$0>
400e1348:	0ae8      	l32i.n	a14, a10, 0
400e134a:	036d      	mov.n	a6, a3
400e134c:	a42182        	l32i	a8, a1, 0x290
400e134f:	001fc6        	j	400e13d2 <_vfiprintf_r+0x1ace>
400e1352:	631b      	addi.n	a6, a3, 1
400e1354:	08a397        	bge	a3, a9, 400e1360 <_vfiprintf_r+0x1a5c>
400e1357:	10c132        	addi	a3, a1, 16
400e135a:	b02230        	addx8	a2, a2, a3
400e135d:	001bc6        	j	400e13d0 <_vfiprintf_r+0x1acc>
400e1360:	f21c      	movi.n	a2, 31
400e1362:	3e2297        	blt	a2, a9, 400e13a4 <_vfiprintf_r+0x1aa0>
400e1365:	291b      	addi.n	a2, a9, 1
400e1367:	10c142        	addi	a4, a1, 16
400e136a:	916122        	s32i	a2, a1, 0x244
400e136d:	02d422        	addmi	a2, a4, 0x200
400e1370:	122232        	l32i	a3, a2, 72
400e1373:	841c      	movi.n	a4, 24
400e1375:	734b      	addi.n	a7, a3, 4
400e1377:	126272        	s32i	a7, a2, 72
400e137a:	062477        	blt	a4, a7, 400e1384 <_vfiprintf_r+0x1a80>
400e137d:	112232        	l32i	a3, a2, 68
400e1380:	0002c6        	j	400e138f <_vfiprintf_r+0x1a8b>
400e1383:	243700        	extui	a3, a0, 7, 3
400e1386:	432c04        	lsi	f0, a12, 0x10c
400e1389:	126232        	s32i	a3, a2, 72
400e138c:	942132        	l32i	a3, a1, 0x250
400e138f:	962122        	l32i	a2, a1, 0x258
400e1392:	10c1a2        	addi	a10, a1, 16
400e1395:	232a      	add.n	a2, a3, a2
400e1397:	fcc222        	addi	a2, a2, -4
400e139a:	02e8      	l32i.n	a14, a2, 0
400e139c:	b099a0        	addx8	a9, a9, a10
400e139f:	09e9      	s32i.n	a14, a9, 0
400e13a1:	000b46        	j	400e13d2 <_vfiprintf_r+0x1ace>
400e13a4:	10c1b2        	addi	a11, a1, 16
400e13a7:	02db22        	addmi	a2, a11, 0x200
400e13aa:	122232        	l32i	a3, a2, 72
400e13ad:	841c      	movi.n	a4, 24
400e13af:	734b      	addi.n	a7, a3, 4
400e13b1:	126272        	s32i	a7, a2, 72
400e13b4:	052477        	blt	a4, a7, 400e13bd <_vfiprintf_r+0x1ab9>
400e13b7:	112232        	l32i	a3, a2, 68
400e13ba:	000286        	j	400e13c8 <_vfiprintf_r+0x1ac4>
400e13bd:	042437        	blt	a4, a3, 400e13c5 <_vfiprintf_r+0x1ac1>
400e13c0:	432c      	movi.n	a3, 36
400e13c2:	126232        	s32i	a3, a2, 72
400e13c5:	942132        	l32i	a3, a1, 0x250
400e13c8:	962122        	l32i	a2, a1, 0x258
400e13cb:	232a      	add.n	a2, a3, a2
400e13cd:	fcc222        	addi	a2, a2, -4
400e13d0:	02e8      	l32i.n	a14, a2, 0
400e13d2:	040c      	movi.n	a4, 0
400e13d4:	063d      	mov.n	a3, a6
400e13d6:	202e40        	or	a2, a14, a4
400e13d9:	429c      	beqz.n	a2, 400e13f1 <_vfiprintf_r+0x1aed>
400e13db:	126507        	bbci	a5, 0, 400e13f1 <_vfiprintf_r+0x1aed>
400e13de:	10c192        	addi	a9, a1, 16
400e13e1:	02d922        	addmi	a2, a9, 0x200
400e13e4:	063c      	movi.n	a6, 48
400e13e6:	384262        	s8i	a6, a2, 56
400e13e9:	394282        	s8i	a8, a2, 57
400e13ec:	220c      	movi.n	a2, 2
400e13ee:	205520        	or	a5, a5, a2
400e13f1:	ffab22        	movi	a2, 0xfffffbff
400e13f4:	105520        	and	a5, a5, a2
400e13f7:	220c      	movi.n	a2, 2
400e13f9:	10c1a2        	addi	a10, a1, 16
400e13fc:	00a072        	movi	a7, 0
400e13ff:	02da62        	addmi	a6, a10, 0x200
400e1402:	3a4672        	s8i	a7, a6, 58
400e1405:	9a6132        	s32i	a3, a1, 0x268
400e1408:	9b2132        	l32i	a3, a1, 0x26c
400e140b:	005396        	bltz	a3, 400e1414 <_vfiprintf_r+0x1b10>
400e140e:	7faf32        	movi	a3, -129
400e1411:	105530        	and	a5, a5, a3
400e1414:	206e40        	or	a6, a14, a4
400e1417:	180c      	movi.n	a8, 1
400e1419:	030c      	movi.n	a3, 0
400e141b:	933860        	movnez	a3, a8, a6
400e141e:	743030        	extui	a3, a3, 0, 8
400e1421:	73cc      	bnez.n	a3, 400e142c <_vfiprintf_r+0x1b28>
400e1423:	9b2162        	l32i	a6, a1, 0x26c
400e1426:	933860        	movnez	a3, a8, a6
400e1429:	140316        	beqz	a3, 400e156d <_vfiprintf_r+0x1c69>
400e142c:	4a1226        	beqi	a2, 1, 400e147a <_vfiprintf_r+0x1b76>
400e142f:	022266        	bnei	a2, 2, 400e1435 <_vfiprintf_r+0x1b31>
400e1432:	0041c6        	j	400e153d <_vfiprintf_r+0x1c39>
400e1435:	90a182        	movi	a8, 0x190
400e1438:	881a      	add.n	a8, a8, a1
400e143a:	64c872        	addi	a7, a8, 100
400e143d:	2420e0        	extui	a2, a14, 0, 3
400e1440:	013430        	slli	a3, a4, 29
400e1443:	41e3e0        	srli	a14, a14, 3
400e1446:	770b      	addi.n	a7, a7, -1
400e1448:	30c222        	addi	a2, a2, 48
400e144b:	20e3e0        	or	a14, a3, a14
400e144e:	414340        	srli	a4, a4, 3
400e1451:	004722        	s8i	a2, a7, 0
400e1454:	206e40        	or	a6, a14, a4
400e1457:	fe2656        	bnez	a6, 400e143d <_vfiprintf_r+0x1b39>
400e145a:	d0c232        	addi	a3, a2, -48
400e145d:	120c      	movi.n	a2, 1
400e145f:	832630        	moveqz	a2, a6, a3
400e1462:	742020        	extui	a2, a2, 0, 8
400e1465:	11f216        	beqz	a2, 400e1588 <_vfiprintf_r+0x1c84>
400e1468:	02e507        	bbsi	a5, 0, 400e146e <_vfiprintf_r+0x1b6a>
400e146b:	004646        	j	400e1588 <_vfiprintf_r+0x1c84>
400e146e:	870b      	addi.n	a8, a7, -1
400e1470:	023c      	movi.n	a2, 48
400e1472:	004822        	s8i	a2, a8, 0
400e1475:	087d      	mov.n	a7, a8
400e1477:	004346        	j	400e1588 <_vfiprintf_r+0x1c84>
400e147a:	a4dc      	bnez.n	a4, 400e1498 <_vfiprintf_r+0x1b94>
400e147c:	920c      	movi.n	a2, 9
400e147e:	1632e7        	bltu	a2, a14, 400e1498 <_vfiprintf_r+0x1b94>
400e1481:	10c192        	addi	a9, a1, 16
400e1484:	90a1a2        	movi	a10, 0x190
400e1487:	30cee2        	addi	a14, a14, 48
400e148a:	01d922        	addmi	a2, a9, 0x100
400e148d:	aa1a      	add.n	a10, a10, a1
400e148f:	e342e2        	s8i	a14, a2, 227
400e1492:	63ca72        	addi	a7, a10, 99
400e1495:	003bc6        	j	400e1588 <_vfiprintf_r+0x1c84>
400e1498:	00a422        	movi	a2, 0x400
400e149b:	030c      	movi.n	a3, 0
400e149d:	a32182        	l32i	a8, a1, 0x28c
400e14a0:	102520        	and	a2, a5, a2
400e14a3:	000046        	j	400e14a8 <_vfiprintf_r+0x1ba4>
400e14a6:	078d      	mov.n	a8, a7
400e14a8:	bcb3c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e14ab:	baecd1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e14ae:	0ead      	mov.n	a10, a14
400e14b0:	04bd      	mov.n	a11, a4
400e14b2:	780b      	addi.n	a7, a8, -1
400e14b4:	a561e2        	s32i	a14, a1, 0x294
400e14b7:	bcbc81        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e14ba:	0008e0        	callx8	a8
400e14bd:	30caa2        	addi	a10, a10, 48
400e14c0:	0047a2        	s8i	a10, a7, 0
400e14c3:	331b      	addi.n	a3, a3, 1
400e14c5:	a521e2        	l32i	a14, a1, 0x294
400e14c8:	054216        	beqz	a2, 400e1520 <_vfiprintf_r+0x1c1c>
400e14cb:	a02162        	l32i	a6, a1, 0x280
400e14ce:	01af92        	movi	a9, -255
400e14d1:	0006a2        	l8ui	a10, a6, 0
400e14d4:	0b0c      	movi.n	a11, 0
400e14d6:	9a9a      	add.n	a9, a10, a9
400e14d8:	160c      	movi.n	a6, 1
400e14da:	93b690        	movnez	a11, a6, a9
400e14dd:	0b9d      	mov.n	a9, a11
400e14df:	54cc      	bnez.n	a4, 400e14e8 <_vfiprintf_r+0x1be4>
400e14e1:	9b0c      	movi.n	a11, 9
400e14e3:	013be7        	bltu	a11, a14, 400e14e8 <_vfiprintf_r+0x1be4>
400e14e6:	046d      	mov.n	a6, a4
400e14e8:	340967        	bnone	a9, a6, 400e1520 <_vfiprintf_r+0x1c1c>
400e14eb:	319a37        	bne	a10, a3, 400e1520 <_vfiprintf_r+0x1c1c>
400e14ee:	a12182        	l32i	a8, a1, 0x284
400e14f1:	a221b2        	l32i	a11, a1, 0x288
400e14f4:	c07780        	sub	a7, a7, a8
400e14f7:	08cd      	mov.n	a12, a8
400e14f9:	07ad      	mov.n	a10, a7
400e14fb:	a561e2        	s32i	a14, a1, 0x294
400e14fe:	bbb781        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400e1501:	0008e0        	callx8	a8
400e1504:	a02132        	l32i	a3, a1, 0x280
400e1507:	a02182        	l32i	a8, a1, 0x280
400e150a:	010392        	l8ui	a9, a3, 1
400e150d:	030c      	movi.n	a3, 0
400e150f:	036d      	mov.n	a6, a3
400e1511:	01a0a2        	movi	a10, 1
400e1514:	936a90        	movnez	a6, a10, a9
400e1517:	808860        	add	a8, a8, a6
400e151a:	a521e2        	l32i	a14, a1, 0x294
400e151d:	a06182        	s32i	a8, a1, 0x280
400e1520:	bc95c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e1523:	baced1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e1526:	0ead      	mov.n	a10, a14
400e1528:	04bd      	mov.n	a11, a4
400e152a:	bac681        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400e152d:	0008e0        	callx8	a8
400e1530:	0aed      	mov.n	a14, a10
400e1532:	20aba0        	or	a10, a11, a10
400e1535:	0b4d      	mov.n	a4, a11
400e1537:	f6ba56        	bnez	a10, 400e14a6 <_vfiprintf_r+0x1ba2>
400e153a:	001286        	j	400e1588 <_vfiprintf_r+0x1c84>
400e153d:	90a192        	movi	a9, 0x190
400e1540:	991a      	add.n	a9, a9, a1
400e1542:	64c972        	addi	a7, a9, 100
400e1545:	9f2132        	l32i	a3, a1, 0x27c
400e1548:	3420e0        	extui	a2, a14, 0, 4
400e154b:	232a      	add.n	a2, a3, a2
400e154d:	000222        	l8ui	a2, a2, 0
400e1550:	770b      	addi.n	a7, a7, -1
400e1552:	004722        	s8i	a2, a7, 0
400e1555:	41e4e0        	srli	a14, a14, 4
400e1558:	012440        	slli	a2, a4, 28
400e155b:	20e2e0        	or	a14, a2, a14
400e155e:	414440        	srli	a4, a4, 4
400e1561:	202e40        	or	a2, a14, a4
400e1564:	fdd256        	bnez	a2, 400e1545 <_vfiprintf_r+0x1c41>
400e1567:	000746        	j	400e1588 <_vfiprintf_r+0x1c84>
400e156a:	000000        	ill
400e156d:	90a142        	movi	a4, 0x190
400e1570:	441a      	add.n	a4, a4, a1
400e1572:	64c472        	addi	a7, a4, 100
400e1575:	f2cc      	bnez.n	a2, 400e1588 <_vfiprintf_r+0x1c84>
400e1577:	0d6507        	bbci	a5, 0, 400e1588 <_vfiprintf_r+0x1c84>
400e157a:	10c162        	addi	a6, a1, 16
400e157d:	033c      	movi.n	a3, 48
400e157f:	01d622        	addmi	a2, a6, 0x100
400e1582:	e34232        	s8i	a3, a2, 227
400e1585:	63c472        	addi	a7, a4, 99
400e1588:	a32182        	l32i	a8, a1, 0x28c
400e158b:	9b2122        	l32i	a2, a1, 0x26c
400e158e:	c08870        	sub	a8, a8, a7
400e1591:	9b6182        	s32i	a8, a1, 0x26c
400e1594:	000906        	j	400e15bc <_vfiprintf_r+0x1cb8>
400e1597:	160000        	lsi	f0, a0, 88
400e159a:	3fb8      	l32i.n	a11, a15, 12
400e159c:	10c192        	addi	a9, a1, 16
400e159f:	01d922        	addmi	a2, a9, 0x100
400e15a2:	804282        	s8i	a8, a2, 128
400e15a5:	040c      	movi.n	a4, 0
400e15a7:	02d922        	addmi	a2, a9, 0x200
400e15aa:	3a4242        	s8i	a4, a2, 58
400e15ad:	9a6132        	s32i	a3, a1, 0x268
400e15b0:	120c      	movi.n	a2, 1
400e15b2:	90a132        	movi	a3, 0x190
400e15b5:	9b6122        	s32i	a2, a1, 0x26c
400e15b8:	713a      	add.n	a7, a1, a3
400e15ba:	020c      	movi.n	a2, 0
400e15bc:	9b2142        	l32i	a4, a1, 0x26c
400e15bf:	10c162        	addi	a6, a1, 16
400e15c2:	533240        	max	a3, a2, a4
400e15c5:	02d642        	addmi	a4, a6, 0x200
400e15c8:	3a0462        	l8ui	a6, a4, 58
400e15cb:	190c      	movi.n	a9, 1
400e15cd:	040c      	movi.n	a4, 0
400e15cf:	934960        	movnez	a4, a9, a6
400e15d2:	334a      	add.n	a3, a3, a4
400e15d4:	260c      	movi.n	a6, 2
400e15d6:	84a042        	movi	a4, 132
400e15d9:	106560        	and	a6, a5, a6
400e15dc:	104540        	and	a4, a5, a4
400e15df:	336a      	add.n	a3, a3, a6
400e15e1:	0a7456        	bnez	a4, 400e168c <_vfiprintf_r+0x1d88>
400e15e4:	9d2182        	l32i	a8, a1, 0x274
400e15e7:	c09830        	sub	a9, a8, a3
400e15ea:	0219e6        	bgei	a9, 1, 400e15f0 <_vfiprintf_r+0x1cec>
400e15ed:	0026c6        	j	400e168c <_vfiprintf_r+0x1d88>
400e15f0:	0e1c      	movi.n	a14, 16
400e15f2:	24a2d2        	movi	a13, 0x224
400e15f5:	a1ea      	add.n	a10, a1, a14
400e15f7:	dada      	add.n	a13, a10, a13
400e15f9:	001286        	j	400e1647 <_vfiprintf_r+0x1d43>
400e15fc:	c1a200        	mul16u	a10, a2, a0
400e15ff:	dab210        	ufloat.s	f11, a2, 1
400e1602:	21a202        	movi	a0, 0x221
400e1605:	8f          	.byte 0x8f
400e1606:	18e9      	s32i.n	a14, a8, 4
400e1608:	10caa2        	addi	a10, a10, 16
400e160b:	bba9      	s32i.n	a10, a11, 44
400e160d:	aba8      	l32i.n	a10, a11, 40
400e160f:	888b      	addi.n	a8, a8, 8
400e1611:	aa1b      	addi.n	a10, a10, 1
400e1613:	aba9      	s32i.n	a10, a11, 40
400e1615:	288aa6        	blti	a10, 8, 400e1641 <_vfiprintf_r+0x1d3d>
400e1618:	9821b2        	l32i	a11, a1, 0x260
400e161b:	9c21a2        	l32i	a10, a1, 0x270
400e161e:	20cdd0        	or	a12, a13, a13
400e1621:	a66192        	s32i	a9, a1, 0x298
400e1624:	a461d2        	s32i	a13, a1, 0x290
400e1627:	a561e2        	s32i	a14, a1, 0x294
400e162a:	fe26e5        	call8	400df898 <__sprint_r>
400e162d:	a62192        	l32i	a9, a1, 0x298
400e1630:	a421d2        	l32i	a13, a1, 0x290
400e1633:	a521e2        	l32i	a14, a1, 0x294
400e1636:	37fa56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e1639:	e4a1a2        	movi	a10, 0x1e4
400e163c:	10c182        	addi	a8, a1, 16
400e163f:	88aa      	add.n	a8, a8, a10
400e1641:	976182        	s32i	a8, a1, 0x25c
400e1644:	f0c992        	addi	a9, a9, -16
400e1647:	bc61a1        	l32r	a10, 400d07cc <_flash_cache_start+0x7b4>
400e164a:	972182        	l32i	a8, a1, 0x25c
400e164d:	08a9      	s32i.n	a10, a8, 0
400e164f:	aa2e97        	blt	a14, a9, 400e15fd <_vfiprintf_r+0x1cf9>
400e1652:	10c1b2        	addi	a11, a1, 16
400e1655:	02dba2        	addmi	a10, a11, 0x200
400e1658:	8f21b2        	l32i	a11, a1, 0x23c
400e165b:	1899      	s32i.n	a9, a8, 4
400e165d:	9b9a      	add.n	a9, a11, a9
400e165f:	ba99      	s32i.n	a9, a10, 44
400e1661:	aa98      	l32i.n	a9, a10, 40
400e1663:	888b      	addi.n	a8, a8, 8
400e1665:	991b      	addi.n	a9, a9, 1
400e1667:	aa99      	s32i.n	a9, a10, 40
400e1669:	1c89a6        	blti	a9, 8, 400e1689 <_vfiprintf_r+0x1d85>
400e166c:	24a2c2        	movi	a12, 0x224
400e166f:	10c182        	addi	a8, a1, 16
400e1672:	9821b2        	l32i	a11, a1, 0x260
400e1675:	9c21a2        	l32i	a10, a1, 0x270
400e1678:	c8ca      	add.n	a12, a8, a12
400e167a:	fe21e5        	call8	400df898 <__sprint_r>
400e167d:	338a56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e1680:	e4a192        	movi	a9, 0x1e4
400e1683:	10c182        	addi	a8, a1, 16
400e1686:	808890        	add	a8, a8, a9
400e1689:	976182        	s32i	a8, a1, 0x25c
400e168c:	10c1a2        	addi	a10, a1, 16
400e168f:	02da92        	addmi	a9, a10, 0x200
400e1692:	3a09a2        	l8ui	a10, a9, 58
400e1695:	043a16        	beqz	a10, 400e16dc <_vfiprintf_r+0x1dd8>
400e1698:	972182        	l32i	a8, a1, 0x25c
400e169b:	3aa2a2        	movi	a10, 0x23a
400e169e:	10c1b2        	addi	a11, a1, 16
400e16a1:	abaa      	add.n	a10, a11, a10
400e16a3:	08a9      	s32i.n	a10, a8, 0
400e16a5:	1a0c      	movi.n	a10, 1
400e16a7:	18a9      	s32i.n	a10, a8, 4
400e16a9:	b9a8      	l32i.n	a10, a9, 44
400e16ab:	888b      	addi.n	a8, a8, 8
400e16ad:	aa1b      	addi.n	a10, a10, 1
400e16af:	b9a9      	s32i.n	a10, a9, 44
400e16b1:	a9a8      	l32i.n	a10, a9, 40
400e16b3:	aa1b      	addi.n	a10, a10, 1
400e16b5:	0a69a2        	s32i	a10, a9, 40
400e16b8:	1d8aa6        	blti	a10, 8, 400e16d9 <_vfiprintf_r+0x1dd5>
400e16bb:	24a2c2        	movi	a12, 0x224
400e16be:	10c192        	addi	a9, a1, 16
400e16c1:	9821b2        	l32i	a11, a1, 0x260
400e16c4:	9c21a2        	l32i	a10, a1, 0x270
400e16c7:	80c9c0        	add	a12, a9, a12
400e16ca:	fe1ce5        	call8	400df898 <__sprint_r>
400e16cd:	2e8a56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e16d0:	e4a192        	movi	a9, 0x1e4
400e16d3:	10c182        	addi	a8, a1, 16
400e16d6:	808890        	add	a8, a8, a9
400e16d9:	976182        	s32i	a8, a1, 0x25c
400e16dc:	044616        	beqz	a6, 400e1724 <_vfiprintf_r+0x1e20>
400e16df:	972182        	l32i	a8, a1, 0x25c
400e16e2:	48a292        	movi	a9, 0x248
400e16e5:	619a      	add.n	a6, a1, a9
400e16e7:	0869      	s32i.n	a6, a8, 0
400e16e9:	260c      	movi.n	a6, 2
400e16eb:	1869      	s32i.n	a6, a8, 4
400e16ed:	8f2162        	l32i	a6, a1, 0x23c
400e16f0:	888b      	addi.n	a8, a8, 8
400e16f2:	662b      	addi.n	a6, a6, 2
400e16f4:	8f6162        	s32i	a6, a1, 0x23c
400e16f7:	8e2162        	l32i	a6, a1, 0x238
400e16fa:	01c662        	addi	a6, a6, 1
400e16fd:	8e6162        	s32i	a6, a1, 0x238
400e1700:	1d86a6        	blti	a6, 8, 400e1721 <_vfiprintf_r+0x1e1d>
400e1703:	10c1b2        	addi	a11, a1, 16
400e1706:	24a2c2        	movi	a12, 0x224
400e1709:	80cbc0        	add	a12, a11, a12
400e170c:	9c21a2        	l32i	a10, a1, 0x270
400e170f:	9821b2        	l32i	a11, a1, 0x260
400e1712:	fe1865        	call8	400df898 <__sprint_r>
400e1715:	2a0a56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e1718:	e4a162        	movi	a6, 0x1e4
400e171b:	10c182        	addi	a8, a1, 16
400e171e:	808860        	add	a8, a8, a6
400e1721:	976182        	s32i	a8, a1, 0x25c
400e1724:	02e426        	beqi	a4, 128, 400e172a <_vfiprintf_r+0x1e26>
400e1727:	002b46        	j	400e17d8 <_vfiprintf_r+0x1ed4>
400e172a:	9d2192        	l32i	a9, a1, 0x274
400e172d:	c04930        	sub	a4, a9, a3
400e1730:	0214e6        	bgei	a4, 1, 400e1736 <_vfiprintf_r+0x1e32>
400e1733:	002846        	j	400e17d8 <_vfiprintf_r+0x1ed4>
400e1736:	0d1c      	movi.n	a13, 16
400e1738:	24a292        	movi	a9, 0x224
400e173b:	a1da      	add.n	a10, a1, a13
400e173d:	9a9a      	add.n	a9, a10, a9
400e173f:	001206        	j	400e178b <_vfiprintf_r+0x1e87>
400e1742:	820000        	mull	a0, a0, a0
400e1745:	699721        	l32r	a2, 400bbda4 <_iram_end+0x2e250>
400e1748:	6208      	l32i.n	a0, a2, 24
400e174a:	d98f21        	l32r	a2, 400d7d88 <nvs::Page::copyItems(nvs::Page&)+0x74>
400e174d:	6218      	l32i.n	a1, a2, 24
400e174f:	6210c6        	j	400f9f96 <_etext+0xdac5>
400e1752:	628f61        	l32r	a6, 400ba190 <_iram_end+0x2c63c>
400e1755:	828e21        	l32r	a2, 400c2190 <_rtc_text_end+0x2190>
400e1758:	08c8      	l32i.n	a12, a8, 0
400e175a:	661b      	addi.n	a6, a6, 1
400e175c:	8e6162        	s32i	a6, a1, 0x238
400e175f:	2286a6        	blti	a6, 8, 400e1785 <_vfiprintf_r+0x1e81>
400e1762:	9821b2        	l32i	a11, a1, 0x260
400e1765:	9c21a2        	l32i	a10, a1, 0x270
400e1768:	20c990        	or	a12, a9, a9
400e176b:	a66192        	s32i	a9, a1, 0x298
400e176e:	a461d2        	s32i	a13, a1, 0x290
400e1771:	fe1265        	call8	400df898 <__sprint_r>
400e1774:	a62192        	l32i	a9, a1, 0x298
400e1777:	a421d2        	l32i	a13, a1, 0x290
400e177a:	23ba56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e177d:	e4a162        	movi	a6, 0x1e4
400e1780:	10c182        	addi	a8, a1, 16
400e1783:	886a      	add.n	a8, a8, a6
400e1785:	976182        	s32i	a8, a1, 0x25c
400e1788:	f0c442        	addi	a4, a4, -16
400e178b:	bc1161        	l32r	a6, 400d07d0 <_flash_cache_start+0x7b8>
400e178e:	b22d47        	blt	a13, a4, 400e1744 <_vfiprintf_r+0x1e40>
400e1791:	972192        	l32i	a9, a1, 0x25c
400e1794:	1949      	s32i.n	a4, a9, 4
400e1796:	0969      	s32i.n	a6, a9, 0
400e1798:	8f2192        	l32i	a9, a1, 0x23c
400e179b:	494a      	add.n	a4, a9, a4
400e179d:	8f6142        	s32i	a4, a1, 0x23c
400e17a0:	8e2142        	l32i	a4, a1, 0x238
400e17a3:	441b      	addi.n	a4, a4, 1
400e17a5:	8e6142        	s32i	a4, a1, 0x238
400e17a8:	0c84e6        	bgei	a4, 8, 400e17b8 <_vfiprintf_r+0x1eb4>
400e17ab:	972142        	l32i	a4, a1, 0x25c
400e17ae:	448b      	addi.n	a4, a4, 8
400e17b0:	976142        	s32i	a4, a1, 0x25c
400e17b3:	000846        	j	400e17d8 <_vfiprintf_r+0x1ed4>
400e17b6:	c20000        	quou	a0, a0, a0
400e17b9:	6224a2        	l32i	a10, a4, 0x188
400e17bc:	b210c1        	l32r	a12, 400cdffc <_rtc_text_end+0xdffc>
400e17bf:	a29821        	l32r	a2, 400ca220 <_rtc_text_end+0xa220>
400e17c2:	ca9c21        	l32r	a2, 400d4234 <uw_init_context_1+0x10>
400e17c5:	0d25c6        	j	400e4c60 <_vfprintf_r+0x2d24>
400e17c8:	fe          	.byte 0xfe
400e17c9:	1eca56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e17cc:	e4a142        	movi	a4, 0x1e4
400e17cf:	10c182        	addi	a8, a1, 16
400e17d2:	808840        	add	a8, a8, a4
400e17d5:	976182        	s32i	a8, a1, 0x25c
400e17d8:	9b2192        	l32i	a9, a1, 0x26c
400e17db:	c02290        	sub	a2, a2, a9
400e17de:	0212e6        	bgei	a2, 1, 400e17e4 <_vfiprintf_r+0x1ee0>
400e17e1:	0026c6        	j	400e1880 <_vfiprintf_r+0x1f7c>
400e17e4:	091c      	movi.n	a9, 16
400e17e6:	24a262        	movi	a6, 0x224
400e17e9:	a19a      	add.n	a10, a1, a9
400e17eb:	6a6a      	add.n	a6, a10, a6
400e17ed:	000fc6        	j	400e1830 <_vfiprintf_r+0x1f2c>
400e17f0:	218200        	srai	a8, a0, 2
400e17f3:	084997        	ball	a9, a9, 400e17ff <_vfiprintf_r+0x1efb>
400e17f6:	8f2142        	l32i	a4, a1, 0x23c
400e17f9:	1899      	s32i.n	a9, a8, 4
400e17fb:	10c442        	addi	a4, a4, 16
400e17fe:	8f6142        	s32i	a4, a1, 0x23c
400e1801:	8e2142        	l32i	a4, a1, 0x238
400e1804:	888b      	addi.n	a8, a8, 8
400e1806:	441b      	addi.n	a4, a4, 1
400e1808:	8e6142        	s32i	a4, a1, 0x238
400e180b:	1b84a6        	blti	a4, 8, 400e182a <_vfiprintf_r+0x1f26>
400e180e:	9821b2        	l32i	a11, a1, 0x260
400e1811:	9c21a2        	l32i	a10, a1, 0x270
400e1814:	06cd      	mov.n	a12, a6
400e1816:	a66192        	s32i	a9, a1, 0x298
400e1819:	fe07e5        	call8	400df898 <__sprint_r>
400e181c:	a62192        	l32i	a9, a1, 0x298
400e181f:	196a56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e1822:	e4a142        	movi	a4, 0x1e4
400e1825:	10c182        	addi	a8, a1, 16
400e1828:	884a      	add.n	a8, a8, a4
400e182a:	976182        	s32i	a8, a1, 0x25c
400e182d:	f0c222        	addi	a2, a2, -16
400e1830:	bbe841        	l32r	a4, 400d07d0 <_flash_cache_start+0x7b8>
400e1833:	ba2927        	blt	a9, a2, 400e17f1 <_vfiprintf_r+0x1eed>
400e1836:	972192        	l32i	a9, a1, 0x25c
400e1839:	8f2162        	l32i	a6, a1, 0x23c
400e183c:	1929      	s32i.n	a2, a9, 4
400e183e:	262a      	add.n	a2, a6, a2
400e1840:	8f6122        	s32i	a2, a1, 0x23c
400e1843:	8e2122        	l32i	a2, a1, 0x238
400e1846:	0949      	s32i.n	a4, a9, 0
400e1848:	221b      	addi.n	a2, a2, 1
400e184a:	10c1a2        	addi	a10, a1, 16
400e184d:	8e6122        	s32i	a2, a1, 0x238
400e1850:	02da42        	addmi	a4, a10, 0x200
400e1853:	0982e6        	bgei	a2, 8, 400e1860 <_vfiprintf_r+0x1f5c>
400e1856:	998b      	addi.n	a9, a9, 8
400e1858:	976192        	s32i	a9, a1, 0x25c
400e185b:	000846        	j	400e1880 <_vfiprintf_r+0x1f7c>
400e185e:	b20000        	mulsh	a0, a0, a0
400e1861:	c210c1        	l32r	a12, 400d20a4 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)+0x44>
400e1864:	ca24a2        	l32i	a10, a4, 0x328
400e1867:	a2cb      	addi.n	a10, a2, 12
400e1869:	b29c21        	l32r	a2, 400ce2dc <_rtc_text_end+0xe2dc>
400e186c:	a59821        	l32r	a2, 400caecc <_rtc_text_end+0xaecc>
400e186f:	56fe02        	s32ri	a0, a14, 0x158
400e1872:	144a      	add.n	a1, a4, a4
400e1874:	e4a122        	movi	a2, 0x1e4
400e1877:	10c142        	addi	a4, a1, 16
400e187a:	804420        	add	a4, a4, a2
400e187d:	976142        	s32i	a4, a1, 0x25c
400e1880:	10c192        	addi	a9, a1, 16
400e1883:	02d942        	addmi	a4, a9, 0x200
400e1886:	9b2182        	l32i	a8, a1, 0x26c
400e1889:	8f2192        	l32i	a9, a1, 0x23c
400e188c:	a428      	l32i.n	a2, a4, 40
400e188e:	972162        	l32i	a6, a1, 0x25c
400e1891:	998a      	add.n	a9, a9, a8
400e1893:	221b      	addi.n	a2, a2, 1
400e1895:	0679      	s32i.n	a7, a6, 0
400e1897:	1689      	s32i.n	a8, a6, 4
400e1899:	b499      	s32i.n	a9, a4, 44
400e189b:	a429      	s32i.n	a2, a4, 40
400e189d:	0482e6        	bgei	a2, 8, 400e18a5 <_vfiprintf_r+0x1fa1>
400e18a0:	468b      	addi.n	a4, a6, 8
400e18a2:	0006c6        	j	400e18c1 <_vfiprintf_r+0x1fbd>
400e18a5:	10c1a2        	addi	a10, a1, 16
400e18a8:	24a2c2        	movi	a12, 0x224
400e18ab:	caca      	add.n	a12, a10, a12
400e18ad:	9821b2        	l32i	a11, a1, 0x260
400e18b0:	9c21a2        	l32i	a10, a1, 0x270
400e18b3:	fdfe65        	call8	400df898 <__sprint_r>
400e18b6:	0ffa56        	bnez	a10, 400e19b9 <_vfiprintf_r+0x20b5>
400e18b9:	e4a142        	movi	a4, 0x1e4
400e18bc:	10c1b2        	addi	a11, a1, 16
400e18bf:	4b4a      	add.n	a4, a11, a4
400e18c1:	17e527        	bbsi	a5, 2, 400e18dc <_vfiprintf_r+0x1fd8>
400e18c4:	9d2122        	l32i	a2, a1, 0x274
400e18c7:	9e2142        	l32i	a4, a1, 0x278
400e18ca:	533230        	max	a3, a2, a3
400e18cd:	443a      	add.n	a4, a4, a3
400e18cf:	8f2122        	l32i	a2, a1, 0x23c
400e18d2:	9e6142        	s32i	a4, a1, 0x278
400e18d5:	08f216        	beqz	a2, 400e1968 <_vfiprintf_r+0x2064>
400e18d8:	0028c6        	j	400e197f <_vfiprintf_r+0x207b>
400e18db:	215200        	srai	a5, a0, 2
400e18de:	309d      	lsi	f9, a0, 0
400e18e0:	a6c025        	call8	400884e4 <prvInitialiseTaskLists+0x50>
400e18e3:	1cde12        	addmi	a1, a14, 0x1c00
400e18e6:	6208      	l32i.n	a0, a2, 24
400e18e8:	8a24a2        	l32i	a10, a4, 0x228
400e18eb:	696a91        	l32r	a9, 400bbe94 <_iram_end+0x2e340>
400e18ee:	000ec6        	j	400e192d <_vfiprintf_r+0x2029>
400e18f1:	8f2152        	l32i	a5, a1, 0x23c
400e18f4:	1489      	s32i.n	a8, a4, 4
400e18f6:	10c552        	addi	a5, a5, 16
400e18f9:	8f6152        	s32i	a5, a1, 0x23c
400e18fc:	8e2152        	l32i	a5, a1, 0x238
400e18ff:	551b      	addi.n	a5, a5, 1
400e1901:	8e6152        	s32i	a5, a1, 0x238
400e1904:	0585e6        	bgei	a5, 8, 400e190d <_vfiprintf_r+0x2009>
400e1907:	448b      	addi.n	a4, a4, 8
400e1909:	000746        	j	400e192a <_vfiprintf_r+0x2026>
400e190c:	21b200        	srai	a11, a0, 2
400e190f:	a298      	l32i.n	a9, a2, 40
400e1911:	609c21        	l32r	a2, 400b9b84 <_iram_end+0x2c030>
400e1914:	8220c6        	j	400c219b <_rtc_text_end+0x219b>
400e1917:	e5a461        	l32r	a6, 400dafa8 <_puts_r+0x2c>
400e191a:	82fdf7        	bbsi	a13, 31, 400e18a0 <_vfiprintf_r+0x1f9c>
400e191d:	56a421        	l32r	a2, 400b73b0 <_iram_end+0x2985c>
400e1920:	096a      	add.n	a0, a9, a6
400e1922:	e4a142        	movi	a4, 0x1e4
400e1925:	10c1b2        	addi	a11, a1, 16
400e1928:	4b4a      	add.n	a4, a11, a4
400e192a:	f0c222        	addi	a2, a2, -16
400e192d:	bba751        	l32r	a5, 400d07cc <_flash_cache_start+0x7b4>
400e1930:	0459      	s32i.n	a5, a4, 0
400e1932:	bb2827        	blt	a8, a2, 400e18f1 <_vfiprintf_r+0x1fed>
400e1935:	10c152        	addi	a5, a1, 16
400e1938:	1429      	s32i.n	a2, a4, 4
400e193a:	02d542        	addmi	a4, a5, 0x200
400e193d:	8f2152        	l32i	a5, a1, 0x23c
400e1940:	252a      	add.n	a2, a5, a2
400e1942:	b429      	s32i.n	a2, a4, 44
400e1944:	a428      	l32i.n	a2, a4, 40
400e1946:	221b      	addi.n	a2, a2, 1
400e1948:	a429      	s32i.n	a2, a4, 40
400e194a:	0282e6        	bgei	a2, 8, 400e1950 <_vfiprintf_r+0x204c>
400e194d:	ffdcc6        	j	400e18c4 <_vfiprintf_r+0x1fc0>
400e1950:	24a2c2        	movi	a12, 0x224
400e1953:	10c162        	addi	a6, a1, 16
400e1956:	9821b2        	l32i	a11, a1, 0x260
400e1959:	9c21a2        	l32i	a10, a1, 0x270
400e195c:	c6ca      	add.n	a12, a6, a12
400e195e:	fdf3a5        	call8	400df898 <__sprint_r>
400e1961:	f5fa16        	beqz	a10, 400e18c4 <_vfiprintf_r+0x1fc0>
400e1964:	001446        	j	400e19b9 <_vfiprintf_r+0x20b5>
400e1967:	030c00        	rsr.scompare1	a0
400e196a:	10c182        	addi	a8, a1, 16
400e196d:	8e6132        	s32i	a3, a1, 0x238
400e1970:	e4a132        	movi	a3, 0x1e4
400e1973:	983a      	add.n	a9, a8, a3
400e1975:	9a2122        	l32i	a2, a1, 0x268
400e1978:	976192        	s32i	a9, a1, 0x25c
400e197b:	f83706        	j	400dfa5b <_vfiprintf_r+0x157>
400e197e:	c1a200        	mul16u	a10, a2, a0
400e1981:	a2c210        	muluh	a12, a2, a1
400e1984:	caca24        	lsi	f2, a10, 0x328
400e1987:	9821b2        	l32i	a11, a1, 0x260
400e198a:	9c21a2        	l32i	a10, a1, 0x270
400e198d:	fdf0a5        	call8	400df898 <__sprint_r>
400e1990:	fd4a16        	beqz	a10, 400e1968 <_vfiprintf_r+0x2064>
400e1993:	000886        	j	400e19b9 <_vfiprintf_r+0x20b5>
400e1996:	220000        	orb	b0, b0, b0
400e1999:	cc8f21        	l32r	a2, 400d4bd8 <read_encoded_value_with_base+0xcc>
400e199c:	030c62        	l8ui	a6, a12, 3
400e199f:	8e6132        	s32i	a3, a1, 0x238
400e19a2:	0004c6        	j	400e19b9 <_vfiprintf_r+0x20b5>
400e19a5:	24a2c2        	movi	a12, 0x224
400e19a8:	10c122        	addi	a2, a1, 16
400e19ab:	9821b2        	l32i	a11, a1, 0x260
400e19ae:	9c21a2        	l32i	a10, a1, 0x270
400e19b1:	c2ca      	add.n	a12, a2, a12
400e19b3:	fdee65        	call8	400df898 <__sprint_r>
400e19b6:	fe3a16        	beqz	a10, 400e199d <_vfiprintf_r+0x2099>
400e19b9:	982132        	l32i	a3, a1, 0x260
400e19bc:	192322        	l32i	a2, a3, 100
400e19bf:	0ee207        	bbsi	a2, 0, 400e19d1 <_vfiprintf_r+0x20cd>
400e19c2:	061322        	l16ui	a2, a3, 12
400e19c5:	08e297        	bbsi	a2, 9, 400e19d1 <_vfiprintf_r+0x20cd>
400e19c8:	58c3a2        	addi	a10, a3, 88
400e19cb:	201110        	or	a1, a1, a1
400e19ce:	a31465        	call8	40084b14 <_lock_release_recursive>
400e19d1:	982182        	l32i	a8, a1, 0x260
400e19d4:	061822        	l16ui	a2, a8, 12
400e19d7:	026267        	bbci	a2, 6, 400e19dd <_vfiprintf_r+0x20d9>
400e19da:	f7ff06        	j	400df9da <_vfiprintf_r+0xd6>
400e19dd:	9e2122        	l32i	a2, a1, 0x278
400e19e0:	f01d      	retw.n
400e19e2:	420000        	xorb	b0, b0, b0
400e19e5:	1b9121        	l32r	a2, 400a882c <_iram_end+0x1acd8>
400e19e8:	a34783        	ssi	f8, a7, 0x28c
400e19eb:	854602        	s8i	a0, a6, 133
400e19ee:	c6f8      	l32i.n	a15, a6, 48
400e19f0:	00f886        	j	400e1dd6 <get_arg$isra$0+0x31a>
400e19f3:	218200        	srai	a8, a0, 2
400e19f6:	931b91        	l32r	a9, 400c6664 <_rtc_text_end+0x6664>
400e19f9:	02a387        	bge	a3, a8, 400e19ff <_vfiprintf_r+0x20fb>
400e19fc:	f8ce46        	j	400dfd39 <_vfiprintf_r+0x435>
400e19ff:	f8cfc6        	j	400dfd42 <_vfiprintf_r+0x43e>
	...

400e1a04 <vfiprintf>:
400e1a04:	006136        	entry	a1, 48
400e1a07:	0149      	s32i.n	a4, a1, 0
400e1a09:	1159      	s32i.n	a5, a1, 4
400e1a0b:	2169      	s32i.n	a6, a1, 8
400e1a0d:	a6fba5        	call8	400889c8 <__getreent>
400e1a10:	01d8      	l32i.n	a13, a1, 0
400e1a12:	11e8      	l32i.n	a14, a1, 4
400e1a14:	21f8      	l32i.n	a15, a1, 8
400e1a16:	02bd      	mov.n	a11, a2
400e1a18:	03cd      	mov.n	a12, a3
400e1a1a:	fdeea5        	call8	400df904 <_vfiprintf_r>
400e1a1d:	0a2d      	mov.n	a2, a10
400e1a1f:	f01d      	retw.n
400e1a21:	000000        	ill

400e1a24 <__sbprintf>:
400e1a24:	024136        	entry	a1, 0x120
400e1a27:	061392        	l16ui	a9, a3, 12
400e1a2a:	d87c      	movi.n	a8, -3
400e1a2c:	108980        	and	a8, a9, a8
400e1a2f:	465182        	s16i	a8, a1, 140
400e1a32:	192382        	l32i	a8, a3, 100
400e1a35:	3c6152        	s32i	a5, a1, 240
400e1a38:	396182        	s32i	a8, a1, 228
400e1a3b:	071382        	l16ui	a8, a3, 14
400e1a3e:	090c      	movi.n	a9, 0
400e1a40:	475182        	s16i	a8, a1, 142
400e1a43:	8388      	l32i.n	a8, a3, 32
400e1a45:	266192        	s32i	a9, a1, 152
400e1a48:	286182        	s32i	a8, a1, 160
400e1a4b:	a388      	l32i.n	a8, a3, 40
400e1a4d:	3d6162        	s32i	a6, a1, 244
400e1a50:	2a6182        	s32i	a8, a1, 168
400e1a53:	80a082        	movi	a8, 128
400e1a56:	581a      	add.n	a5, a8, a1
400e1a58:	58c5a2        	addi	a10, a5, 88
400e1a5b:	226182        	s32i	a8, a1, 136
400e1a5e:	256182        	s32i	a8, a1, 148
400e1a61:	3e6172        	s32i	a7, a1, 248
400e1a64:	206112        	s32i	a1, a1, 128
400e1a67:	246112        	s32i	a1, a1, 144
400e1a6a:	a30065        	call8	40084a70 <_lock_init_recursive>
400e1a6d:	3c21d2        	l32i	a13, a1, 240
400e1a70:	3d21e2        	l32i	a14, a1, 244
400e1a73:	3e21f2        	l32i	a15, a1, 248
400e1a76:	80a0b2        	movi	a11, 128
400e1a79:	04cd      	mov.n	a12, a4
400e1a7b:	bb1a      	add.n	a11, a11, a1
400e1a7d:	02ad      	mov.n	a10, a2
400e1a7f:	fde865        	call8	400df904 <_vfiprintf_r>
400e1a82:	0a4d      	mov.n	a4, a10
400e1a84:	011a96        	bltz	a10, 400e1a99 <__sbprintf+0x75>
400e1a87:	80a0b2        	movi	a11, 128
400e1a8a:	02ad      	mov.n	a10, a2
400e1a8c:	bb1a      	add.n	a11, a11, a1
400e1a8e:	baff81        	l32r	a8, 400d068c <_flash_cache_start+0x674>
400e1a91:	0008e0        	callx8	a8
400e1a94:	f27c      	movi.n	a2, -1
400e1a96:	9342a0        	movnez	a4, a2, a10
400e1a99:	461182        	l16ui	a8, a1, 140
400e1a9c:	40a022        	movi	a2, 64
400e1a9f:	080827        	bnone	a8, a2, 400e1aab <__sbprintf+0x87>
400e1aa2:	061382        	l16ui	a8, a3, 12
400e1aa5:	202820        	or	a2, a8, a2
400e1aa8:	065322        	s16i	a2, a3, 12
400e1aab:	d8a0a2        	movi	a10, 216
400e1aae:	80a1a0        	add	a10, a1, a10
400e1ab1:	a2fce5        	call8	40084a80 <_lock_close>
400e1ab4:	202440        	or	a2, a4, a4
400e1ab7:	f01d      	retw.n
400e1ab9:	000000        	ill

400e1abc <get_arg$isra$0>:
400e1abc:	008136        	entry	a1, 64
400e1abf:	102182        	l32i	a8, a1, 64
400e1ac2:	2129      	s32i.n	a2, a1, 8
400e1ac4:	3159      	s32i.n	a5, a1, 12
400e1ac6:	0528      	l32i.n	a2, a5, 0
400e1ac8:	2198      	l32i.n	a9, a1, 8
400e1aca:	0858      	l32i.n	a5, a8, 0
400e1acc:	933550        	movnez	a3, a5, a5
400e1acf:	0199      	s32i.n	a9, a1, 0
400e1ad1:	00d3c6        	j	400e1e24 <get_arg$isra$0+0x368>
400e1ad4:	1b0000        	un.s	b0, f0, f0
400e1ad7:	035233        	lsi	f3, a2, 12
400e1ada:	551600        	extui	a1, a0, 22, 6
400e1add:	c58200        	extui	a8, a0, 18, 13
400e1ae0:	56db      	addi.n	a5, a6, 13
400e1ae2:	ff18      	l32i.n	a1, a15, 60
400e1ae4:	349516        	beqz	a5, 400e1e31 <get_arg$isra$0+0x375>
400e1ae7:	050c      	movi.n	a5, 0
400e1ae9:	05ed      	mov.n	a14, a5
400e1aeb:	f97c      	movi.n	a9, -1
400e1aed:	05dd      	mov.n	a13, a5
400e1aef:	1159      	s32i.n	a5, a1, 4
400e1af1:	03ad      	mov.n	a10, a3
400e1af3:	bb0ec1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400e1af6:	000a82        	l8ui	a8, a10, 0
400e1af9:	331b      	addi.n	a3, a3, 1
400e1afb:	bc8a      	add.n	a11, a12, a8
400e1afd:	000bc2        	l8ui	a12, a11, 0
400e1b00:	11b8      	l32i.n	a11, a1, 4
400e1b02:	b0fbb0        	addx8	a15, a11, a11
400e1b05:	bb0ab1        	l32r	a11, 400d0730 <_flash_cache_start+0x718>
400e1b08:	bbfa      	add.n	a11, a11, a15
400e1b0a:	bbca      	add.n	a11, a11, a12
400e1b0c:	000bb2        	l8ui	a11, a11, 0
400e1b0f:	11b9      	s32i.n	a11, a1, 4
400e1b11:	bb08b1        	l32r	a11, 400d0734 <_flash_cache_start+0x71c>
400e1b14:	fbfa      	add.n	a15, a11, a15
400e1b16:	ffca      	add.n	a15, a15, a12
400e1b18:	000fb2        	l8ui	a11, a15, 0
400e1b1b:	bb0b      	addi.n	a11, a11, -1
400e1b1d:	74b0b0        	extui	a11, a11, 0, 8
400e1b20:	028bb6        	bltui	a11, 8, 400e1b26 <get_arg$isra$0+0x6a>
400e1b23:	00bcc6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b26:	bb2cc1        	l32r	a12, 400d07d8 <_flash_cache_start+0x7c0>
400e1b29:	a0bbc0        	addx4	a11, a11, a12
400e1b2c:	0bb8      	l32i.n	a11, a11, 0
400e1b2e:	000ba0        	jx	a11
400e1b31:	9a0c      	movi.n	a10, 9
400e1b33:	00b5c6        	j	400e1e0e <get_arg$isra$0+0x352>
400e1b36:	6aa0b2        	movi	a11, 106
400e1b39:	3018b7        	beq	a8, a11, 400e1b6d <get_arg$isra$0+0xb1>
400e1b3c:	0d3b87        	bltu	a11, a8, 400e1b4d <get_arg$isra$0+0x91>
400e1b3f:	cb4c      	movi.n	a11, 76
400e1b41:	2318b7        	beq	a8, a11, 400e1b68 <get_arg$isra$0+0xac>
400e1b44:	68a0b2        	movi	a11, 104
400e1b47:	2a98b7        	bne	a8, a11, 400e1b75 <get_arg$isra$0+0xb9>
400e1b4a:	00b306        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b4d:	74a0b2        	movi	a11, 116
400e1b50:	0298b7        	bne	a8, a11, 400e1b56 <get_arg$isra$0+0x9a>
400e1b53:	00b0c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b56:	7aa0b2        	movi	a11, 122
400e1b59:	0298b7        	bne	a8, a11, 400e1b5f <get_arg$isra$0+0xa3>
400e1b5c:	00ae86        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b5f:	71a0b2        	movi	a11, 113
400e1b62:	0718b7        	beq	a8, a11, 400e1b6d <get_arg$isra$0+0xb1>
400e1b65:	000306        	j	400e1b75 <get_arg$isra$0+0xb9>
400e1b68:	880c      	movi.n	a8, 8
400e1b6a:	000046        	j	400e1b6f <get_arg$isra$0+0xb3>
400e1b6d:	082c      	movi.n	a8, 32
400e1b6f:	20dd80        	or	a13, a13, a8
400e1b72:	00a906        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b75:	010ab2        	l8ui	a11, a10, 1
400e1b78:	6ca082        	movi	a8, 108
400e1b7b:	099b87        	bne	a11, a8, 400e1b88 <get_arg$isra$0+0xcc>
400e1b7e:	032c      	movi.n	a3, 32
400e1b80:	20dd30        	or	a13, a13, a3
400e1b83:	3a2b      	addi.n	a3, a10, 2
400e1b85:	00a446        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1b88:	081c      	movi.n	a8, 16
400e1b8a:	fff846        	j	400e1b6f <get_arg$isra$0+0xb3>
400e1b8d:	bfc882        	addi	a8, a8, -65
400e1b90:	748080        	extui	a8, a8, 0, 8
400e1b93:	7a3c      	movi.n	a10, 55
400e1b95:	442020        	extui	a2, a2, 0, 5
400e1b98:	253a87        	bltu	a10, a8, 400e1bc1 <get_arg$isra$0+0x105>
400e1b9b:	bb10a1        	l32r	a10, 400d07dc <_flash_cache_start+0x7c4>
400e1b9e:	a088a0        	addx4	a8, a8, a10
400e1ba1:	0888      	l32i.n	a8, a8, 0
400e1ba3:	0008a0        	jx	a8
400e1ba6:	026d47        	bbci	a13, 4, 400e1bac <get_arg$isra$0+0xf0>
400e1ba9:	00d806        	j	400e1f0d <get_arg$isra$0+0x451>
400e1bac:	026d57        	bbci	a13, 5, 400e1bb2 <get_arg$isra$0+0xf6>
400e1baf:	00dec6        	j	400e1f2e <get_arg$isra$0+0x472>
400e1bb2:	00db46        	j	400e1f23 <get_arg$isra$0+0x467>
400e1bb5:	026d47        	bbci	a13, 4, 400e1bbb <get_arg$isra$0+0xff>
400e1bb8:	00d186        	j	400e1f02 <get_arg$isra$0+0x446>
400e1bbb:	00d906        	j	400e1f23 <get_arg$isra$0+0x467>
400e1bbe:	000000        	ill
400e1bc1:	070926        	beqi	a9, -1, 400e1bcc <get_arg$isra$0+0x110>
400e1bc4:	a08970        	addx4	a8, a9, a7
400e1bc7:	0859      	s32i.n	a5, a8, 0
400e1bc9:	009346        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1bcc:	0275b6        	bltui	a5, 7, 400e1bd2 <get_arg$isra$0+0x116>
400e1bcf:	0091c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1bd2:	bb0381        	l32r	a8, 400d07e0 <_flash_cache_start+0x7c8>
400e1bd5:	a08580        	addx4	a8, a5, a8
400e1bd8:	0888      	l32i.n	a8, a8, 0
400e1bda:	0008a0        	jx	a8
400e1bdd:	2458      	l32i.n	a5, a4, 8
400e1bdf:	881c      	movi.n	a8, 24
400e1be1:	954b      	addi.n	a9, a5, 4
400e1be3:	2499      	s32i.n	a9, a4, 8
400e1be5:	a21b      	addi.n	a10, a2, 1
400e1be7:	b02260        	addx8	a2, a2, a6
400e1bea:	072897        	blt	a8, a9, 400e1bf5 <get_arg$isra$0+0x139>
400e1bed:	1488      	l32i.n	a8, a4, 4
400e1bef:	0002c6        	j	400e1bfe <get_arg$isra$0+0x142>
400e1bf2:	000000        	ill
400e1bf5:	032857        	blt	a8, a5, 400e1bfc <get_arg$isra$0+0x140>
400e1bf8:	452c      	movi.n	a5, 36
400e1bfa:	2459      	s32i.n	a5, a4, 8
400e1bfc:	0488      	l32i.n	a8, a4, 0
400e1bfe:	2458      	l32i.n	a5, a4, 8
400e1c00:	f97c      	movi.n	a9, -1
400e1c02:	585a      	add.n	a5, a8, a5
400e1c04:	fcc552        	addi	a5, a5, -4
400e1c07:	0558      	l32i.n	a5, a5, 0
400e1c09:	0259      	s32i.n	a5, a2, 0
400e1c0b:	0a2d      	mov.n	a2, a10
400e1c0d:	150c      	movi.n	a5, 1
400e1c0f:	0081c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1c12:	2458      	l32i.n	a5, a4, 8
400e1c14:	887c      	movi.n	a8, -8
400e1c16:	557b      	addi.n	a5, a5, 7
400e1c18:	105580        	and	a5, a5, a8
400e1c1b:	958b      	addi.n	a9, a5, 8
400e1c1d:	2499      	s32i.n	a9, a4, 8
400e1c1f:	881c      	movi.n	a8, 24
400e1c21:	a21b      	addi.n	a10, a2, 1
400e1c23:	b02260        	addx8	a2, a2, a6
400e1c26:	072897        	blt	a8, a9, 400e1c31 <get_arg$isra$0+0x175>
400e1c29:	1488      	l32i.n	a8, a4, 4
400e1c2b:	0002c6        	j	400e1c3a <get_arg$isra$0+0x17e>
400e1c2e:	000000        	ill
400e1c31:	032857        	blt	a8, a5, 400e1c38 <get_arg$isra$0+0x17c>
400e1c34:	852c      	movi.n	a5, 40
400e1c36:	2459      	s32i.n	a5, a4, 8
400e1c38:	0488      	l32i.n	a8, a4, 0
400e1c3a:	2458      	l32i.n	a5, a4, 8
400e1c3c:	585a      	add.n	a5, a8, a5
400e1c3e:	f8c552        	addi	a5, a5, -8
400e1c41:	1598      	l32i.n	a9, a5, 4
400e1c43:	0588      	l32i.n	a8, a5, 0
400e1c45:	1299      	s32i.n	a9, a2, 4
400e1c47:	0289      	s32i.n	a8, a2, 0
400e1c49:	f97c      	movi.n	a9, -1
400e1c4b:	0a2d      	mov.n	a2, a10
400e1c4d:	250c      	movi.n	a5, 2
400e1c4f:	0071c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1c52:	2458      	l32i.n	a5, a4, 8
400e1c54:	881c      	movi.n	a8, 24
400e1c56:	954b      	addi.n	a9, a5, 4
400e1c58:	2499      	s32i.n	a9, a4, 8
400e1c5a:	a21b      	addi.n	a10, a2, 1
400e1c5c:	b02260        	addx8	a2, a2, a6
400e1c5f:	062897        	blt	a8, a9, 400e1c69 <get_arg$isra$0+0x1ad>
400e1c62:	1488      	l32i.n	a8, a4, 4
400e1c64:	000286        	j	400e1c72 <get_arg$isra$0+0x1b6>
400e1c67:	570000        	lsi	f0, a0, 0x15c
400e1c6a:	0328      	l32i.n	a2, a3, 0
400e1c6c:	452c      	movi.n	a5, 36
400e1c6e:	2459      	s32i.n	a5, a4, 8
400e1c70:	0488      	l32i.n	a8, a4, 0
400e1c72:	2458      	l32i.n	a5, a4, 8
400e1c74:	f97c      	movi.n	a9, -1
400e1c76:	585a      	add.n	a5, a8, a5
400e1c78:	fcc552        	addi	a5, a5, -4
400e1c7b:	0558      	l32i.n	a5, a5, 0
400e1c7d:	0259      	s32i.n	a5, a2, 0
400e1c7f:	0a2d      	mov.n	a2, a10
400e1c81:	650c      	movi.n	a5, 6
400e1c83:	0064c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1c86:	2458      	l32i.n	a5, a4, 8
400e1c88:	881c      	movi.n	a8, 24
400e1c8a:	954b      	addi.n	a9, a5, 4
400e1c8c:	2499      	s32i.n	a9, a4, 8
400e1c8e:	a21b      	addi.n	a10, a2, 1
400e1c90:	b02260        	addx8	a2, a2, a6
400e1c93:	062897        	blt	a8, a9, 400e1c9d <get_arg$isra$0+0x1e1>
400e1c96:	1488      	l32i.n	a8, a4, 4
400e1c98:	000286        	j	400e1ca6 <get_arg$isra$0+0x1ea>
400e1c9b:	570000        	lsi	f0, a0, 0x15c
400e1c9e:	0328      	l32i.n	a2, a3, 0
400e1ca0:	452c      	movi.n	a5, 36
400e1ca2:	2459      	s32i.n	a5, a4, 8
400e1ca4:	0488      	l32i.n	a8, a4, 0
400e1ca6:	2458      	l32i.n	a5, a4, 8
400e1ca8:	f97c      	movi.n	a9, -1
400e1caa:	585a      	add.n	a5, a8, a5
400e1cac:	fcc552        	addi	a5, a5, -4
400e1caf:	0558      	l32i.n	a5, a5, 0
400e1cb1:	0259      	s32i.n	a5, a2, 0
400e1cb3:	0a2d      	mov.n	a2, a10
400e1cb5:	050c      	movi.n	a5, 0
400e1cb7:	0057c6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1cba:	2458      	l32i.n	a5, a4, 8
400e1cbc:	881c      	movi.n	a8, 24
400e1cbe:	954b      	addi.n	a9, a5, 4
400e1cc0:	2499      	s32i.n	a9, a4, 8
400e1cc2:	a21b      	addi.n	a10, a2, 1
400e1cc4:	b02260        	addx8	a2, a2, a6
400e1cc7:	062897        	blt	a8, a9, 400e1cd1 <get_arg$isra$0+0x215>
400e1cca:	1488      	l32i.n	a8, a4, 4
400e1ccc:	000286        	j	400e1cda <get_arg$isra$0+0x21e>
400e1ccf:	570000        	lsi	f0, a0, 0x15c
400e1cd2:	0328      	l32i.n	a2, a3, 0
400e1cd4:	452c      	movi.n	a5, 36
400e1cd6:	2459      	s32i.n	a5, a4, 8
400e1cd8:	0488      	l32i.n	a8, a4, 0
400e1cda:	2458      	l32i.n	a5, a4, 8
400e1cdc:	f97c      	movi.n	a9, -1
400e1cde:	585a      	add.n	a5, a8, a5
400e1ce0:	fcc552        	addi	a5, a5, -4
400e1ce3:	0558      	l32i.n	a5, a5, 0
400e1ce5:	0259      	s32i.n	a5, a2, 0
400e1ce7:	0a2d      	mov.n	a2, a10
400e1ce9:	350c      	movi.n	a5, 3
400e1ceb:	004ac6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1cee:	2458      	l32i.n	a5, a4, 8
400e1cf0:	887c      	movi.n	a8, -8
400e1cf2:	557b      	addi.n	a5, a5, 7
400e1cf4:	105580        	and	a5, a5, a8
400e1cf7:	958b      	addi.n	a9, a5, 8
400e1cf9:	2499      	s32i.n	a9, a4, 8
400e1cfb:	881c      	movi.n	a8, 24
400e1cfd:	a21b      	addi.n	a10, a2, 1
400e1cff:	b02260        	addx8	a2, a2, a6
400e1d02:	072897        	blt	a8, a9, 400e1d0d <get_arg$isra$0+0x251>
400e1d05:	1488      	l32i.n	a8, a4, 4
400e1d07:	0002c6        	j	400e1d16 <get_arg$isra$0+0x25a>
400e1d0a:	000000        	ill
400e1d0d:	032857        	blt	a8, a5, 400e1d14 <get_arg$isra$0+0x258>
400e1d10:	852c      	movi.n	a5, 40
400e1d12:	2459      	s32i.n	a5, a4, 8
400e1d14:	0488      	l32i.n	a8, a4, 0
400e1d16:	2458      	l32i.n	a5, a4, 8
400e1d18:	585a      	add.n	a5, a8, a5
400e1d1a:	f8c552        	addi	a5, a5, -8
400e1d1d:	1598      	l32i.n	a9, a5, 4
400e1d1f:	0588      	l32i.n	a8, a5, 0
400e1d21:	1299      	s32i.n	a9, a2, 4
400e1d23:	0289      	s32i.n	a8, a2, 0
400e1d25:	f97c      	movi.n	a9, -1
400e1d27:	0a2d      	mov.n	a2, a10
400e1d29:	450c      	movi.n	a5, 4
400e1d2b:	003ac6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1d2e:	2488      	l32i.n	a8, a4, 8
400e1d30:	8a7c      	movi.n	a10, -8
400e1d32:	887b      	addi.n	a8, a8, 7
400e1d34:	1088a0        	and	a8, a8, a10
400e1d37:	b88b      	addi.n	a11, a8, 8
400e1d39:	24b9      	s32i.n	a11, a4, 8
400e1d3b:	8a1c      	movi.n	a10, 24
400e1d3d:	c21b      	addi.n	a12, a2, 1
400e1d3f:	b02260        	addx8	a2, a2, a6
400e1d42:	072ab7        	blt	a10, a11, 400e1d4d <get_arg$isra$0+0x291>
400e1d45:	14a8      	l32i.n	a10, a4, 4
400e1d47:	0002c6        	j	400e1d56 <get_arg$isra$0+0x29a>
400e1d4a:	000000        	ill
400e1d4d:	032a87        	blt	a10, a8, 400e1d54 <get_arg$isra$0+0x298>
400e1d50:	882c      	movi.n	a8, 40
400e1d52:	2489      	s32i.n	a8, a4, 8
400e1d54:	04a8      	l32i.n	a10, a4, 0
400e1d56:	2488      	l32i.n	a8, a4, 8
400e1d58:	8a8a      	add.n	a8, a10, a8
400e1d5a:	f8c882        	addi	a8, a8, -8
400e1d5d:	08a8      	l32i.n	a10, a8, 0
400e1d5f:	18b8      	l32i.n	a11, a8, 4
400e1d61:	02a9      	s32i.n	a10, a2, 0
400e1d63:	12b9      	s32i.n	a11, a2, 4
400e1d65:	002006        	j	400e1de9 <get_arg$isra$0+0x32d>
400e1d68:	0788      	l32i.n	a8, a7, 0
400e1d6a:	140866        	bnei	a8, -1, 400e1d82 <get_arg$isra$0+0x2c6>
400e1d6d:	80a0c2        	movi	a12, 128
400e1d70:	0b0c      	movi.n	a11, 0
400e1d72:	07ad      	mov.n	a10, a7
400e1d74:	51d9      	s32i.n	a13, a1, 20
400e1d76:	61e9      	s32i.n	a14, a1, 24
400e1d78:	b8bd81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400e1d7b:	0008e0        	callx8	a8
400e1d7e:	61e8      	l32i.n	a14, a1, 24
400e1d80:	51d8      	l32i.n	a13, a1, 20
400e1d82:	0188      	l32i.n	a8, a1, 0
400e1d84:	9e0b      	addi.n	a9, a14, -1
400e1d86:	538890        	max	a8, a8, a9
400e1d89:	000ac6        	j	400e1db8 <get_arg$isra$0+0x2fc>
400e1d8c:	0788      	l32i.n	a8, a7, 0
400e1d8e:	180866        	bnei	a8, -1, 400e1daa <get_arg$isra$0+0x2ee>
400e1d91:	80a0c2        	movi	a12, 128
400e1d94:	0b0c      	movi.n	a11, 0
400e1d96:	07ad      	mov.n	a10, a7
400e1d98:	4199      	s32i.n	a9, a1, 16
400e1d9a:	51d9      	s32i.n	a13, a1, 20
400e1d9c:	61e9      	s32i.n	a14, a1, 24
400e1d9e:	b8b381        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400e1da1:	0008e0        	callx8	a8
400e1da4:	61e8      	l32i.n	a14, a1, 24
400e1da6:	51d8      	l32i.n	a13, a1, 20
400e1da8:	4198      	l32i.n	a9, a1, 16
400e1daa:	ee0b      	addi.n	a14, a14, -1
400e1dac:	a08e70        	addx4	a8, a14, a7
400e1daf:	0a0c      	movi.n	a10, 0
400e1db1:	08a9      	s32i.n	a10, a8, 0
400e1db3:	0188      	l32i.n	a8, a1, 0
400e1db5:	5388e0        	max	a8, a8, a14
400e1db8:	0189      	s32i.n	a8, a1, 0
400e1dba:	001706        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1dbd:	0a3d      	mov.n	a3, a10
400e1dbf:	2488      	l32i.n	a8, a4, 8
400e1dc1:	8a1c      	movi.n	a10, 24
400e1dc3:	b84b      	addi.n	a11, a8, 4
400e1dc5:	24b9      	s32i.n	a11, a4, 8
400e1dc7:	c21b      	addi.n	a12, a2, 1
400e1dc9:	b02260        	addx8	a2, a2, a6
400e1dcc:	052ab7        	blt	a10, a11, 400e1dd5 <get_arg$isra$0+0x319>
400e1dcf:	14a8      	l32i.n	a10, a4, 4
400e1dd1:	000246        	j	400e1dde <get_arg$isra$0+0x322>
400e1dd4:	2a8700        	mul.s	f8, f7, f0
400e1dd7:	482c03        	lsi	f0, a12, 0x120
400e1dda:	2489      	s32i.n	a8, a4, 8
400e1ddc:	04a8      	l32i.n	a10, a4, 0
400e1dde:	2488      	l32i.n	a8, a4, 8
400e1de0:	8a8a      	add.n	a8, a10, a8
400e1de2:	fcc882        	addi	a8, a8, -4
400e1de5:	0888      	l32i.n	a8, a8, 0
400e1de7:	0289      	s32i.n	a8, a2, 0
400e1de9:	0c2d      	mov.n	a2, a12
400e1deb:	000ac6        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1dee:	d0c8e2        	addi	a14, a8, -48
400e1df1:	9a0c      	movi.n	a10, 9
400e1df3:	0001c6        	j	400e1dfe <get_arg$isra$0+0x342>
400e1df6:	a0eee0        	addx4	a14, a14, a14
400e1df9:	90ee80        	addx2	a14, a14, a8
400e1dfc:	331b      	addi.n	a3, a3, 1
400e1dfe:	000382        	l8ui	a8, a3, 0
400e1e01:	589c      	beqz.n	a8, 400e1e1a <get_arg$isra$0+0x35e>
400e1e03:	d0c882        	addi	a8, a8, -48
400e1e06:	ecba87        	bgeu	a10, a8, 400e1df6 <get_arg$isra$0+0x33a>
400e1e09:	000346        	j	400e1e1a <get_arg$isra$0+0x35e>
400e1e0c:	331b      	addi.n	a3, a3, 1
400e1e0e:	000382        	l8ui	a8, a3, 0
400e1e11:	d0c882        	addi	a8, a8, -48
400e1e14:	748080        	extui	a8, a8, 0, 8
400e1e17:	f1ba87        	bgeu	a10, a8, 400e1e0c <get_arg$isra$0+0x350>
400e1e1a:	11a8      	l32i.n	a10, a1, 4
400e1e1c:	b80c      	movi.n	a8, 11
400e1e1e:	021a87        	beq	a10, a8, 400e1e24 <get_arg$isra$0+0x368>
400e1e21:	ff3306        	j	400e1af1 <get_arg$isra$0+0x35>
400e1e24:	000352        	l8ui	a5, a3, 0
400e1e27:	658c      	beqz.n	a5, 400e1e31 <get_arg$isra$0+0x375>
400e1e29:	2188      	l32i.n	a8, a1, 8
400e1e2b:	022827        	blt	a8, a2, 400e1e31 <get_arg$isra$0+0x375>
400e1e2e:	ff2986        	j	400e1ad8 <get_arg$isra$0+0x1c>
400e1e31:	0188      	l32i.n	a8, a1, 0
400e1e33:	000352        	l8ui	a5, a3, 0
400e1e36:	2198      	l32i.n	a9, a1, 8
400e1e38:	f21b      	addi.n	a15, a2, 1
400e1e3a:	839850        	moveqz	a9, a8, a5
400e1e3d:	0199      	s32i.n	a9, a1, 0
400e1e3f:	b0b260        	addx8	a11, a2, a6
400e1e42:	a07270        	addx4	a7, a2, a7
400e1e45:	8a1c      	movi.n	a10, 24
400e1e47:	4c2c      	movi.n	a12, 36
400e1e49:	8d7c      	movi.n	a13, -8
400e1e4b:	8e2c      	movi.n	a14, 40
400e1e4d:	002306        	j	400e1edd <get_arg$isra$0+0x421>
400e1e50:	0758      	l32i.n	a5, a7, 0
400e1e52:	2428      	l32i.n	a2, a4, 8
400e1e54:	550b      	addi.n	a5, a5, -1
400e1e56:	5f65f6        	bgeui	a5, 6, 400e1eb9 <get_arg$isra$0+0x3fd>
400e1e59:	ba6291        	l32r	a9, 400d07e4 <_flash_cache_start+0x7cc>
400e1e5c:	a05590        	addx4	a5, a5, a9
400e1e5f:	0558      	l32i.n	a5, a5, 0
400e1e61:	0005a0        	jx	a5
400e1e64:	227b      	addi.n	a2, a2, 7
400e1e66:	1022d0        	and	a2, a2, a13
400e1e69:	528b      	addi.n	a5, a2, 8
400e1e6b:	2459      	s32i.n	a5, a4, 8
400e1e6d:	042a57        	blt	a10, a5, 400e1e75 <get_arg$isra$0+0x3b9>
400e1e70:	1458      	l32i.n	a5, a4, 4
400e1e72:	000186        	j	400e1e7c <get_arg$isra$0+0x3c0>
400e1e75:	012a27        	blt	a10, a2, 400e1e7a <get_arg$isra$0+0x3be>
400e1e78:	24e9      	s32i.n	a14, a4, 8
400e1e7a:	0458      	l32i.n	a5, a4, 0
400e1e7c:	2428      	l32i.n	a2, a4, 8
400e1e7e:	252a      	add.n	a2, a5, a2
400e1e80:	f8c222        	addi	a2, a2, -8
400e1e83:	0288      	l32i.n	a8, a2, 0
400e1e85:	1298      	l32i.n	a9, a2, 4
400e1e87:	0b89      	s32i.n	a8, a11, 0
400e1e89:	1b99      	s32i.n	a9, a11, 4
400e1e8b:	001206        	j	400e1ed7 <get_arg$isra$0+0x41b>
400e1e8e:	227b      	addi.n	a2, a2, 7
400e1e90:	1022d0        	and	a2, a2, a13
400e1e93:	528b      	addi.n	a5, a2, 8
400e1e95:	2459      	s32i.n	a5, a4, 8
400e1e97:	052a57        	blt	a10, a5, 400e1ea0 <get_arg$isra$0+0x3e4>
400e1e9a:	1458      	l32i.n	a5, a4, 4
400e1e9c:	0001c6        	j	400e1ea7 <get_arg$isra$0+0x3eb>
400e1e9f:	2a2700        	mul.s	f2, f7, f0
400e1ea2:	24e901        	l32r	a0, 400ab248 <_iram_end+0x1d6f4>
400e1ea5:	0458      	l32i.n	a5, a4, 0
400e1ea7:	2428      	l32i.n	a2, a4, 8
400e1ea9:	252a      	add.n	a2, a5, a2
400e1eab:	f8c222        	addi	a2, a2, -8
400e1eae:	0288      	l32i.n	a8, a2, 0
400e1eb0:	1298      	l32i.n	a9, a2, 4
400e1eb2:	0b89      	s32i.n	a8, a11, 0
400e1eb4:	1b99      	s32i.n	a9, a11, 4
400e1eb6:	000746        	j	400e1ed7 <get_arg$isra$0+0x41b>
400e1eb9:	524b      	addi.n	a5, a2, 4
400e1ebb:	2459      	s32i.n	a5, a4, 8
400e1ebd:	042a57        	blt	a10, a5, 400e1ec5 <get_arg$isra$0+0x409>
400e1ec0:	1458      	l32i.n	a5, a4, 4
400e1ec2:	000186        	j	400e1ecc <get_arg$isra$0+0x410>
400e1ec5:	012a27        	blt	a10, a2, 400e1eca <get_arg$isra$0+0x40e>
400e1ec8:	24c9      	s32i.n	a12, a4, 8
400e1eca:	0458      	l32i.n	a5, a4, 0
400e1ecc:	2428      	l32i.n	a2, a4, 8
400e1ece:	252a      	add.n	a2, a5, a2
400e1ed0:	fcc222        	addi	a2, a2, -4
400e1ed3:	0228      	l32i.n	a2, a2, 0
400e1ed5:	0b29      	s32i.n	a2, a11, 0
400e1ed7:	ff1b      	addi.n	a15, a15, 1
400e1ed9:	bb8b      	addi.n	a11, a11, 8
400e1edb:	774b      	addi.n	a7, a7, 4
400e1edd:	0158      	l32i.n	a5, a1, 0
400e1edf:	2f0b      	addi.n	a2, a15, -1
400e1ee1:	022527        	blt	a5, a2, 400e1ee7 <get_arg$isra$0+0x42b>
400e1ee4:	ffda06        	j	400e1e50 <get_arg$isra$0+0x394>
400e1ee7:	3188      	l32i.n	a8, a1, 12
400e1ee9:	102192        	l32i	a9, a1, 64
400e1eec:	0829      	s32i.n	a2, a8, 0
400e1eee:	2188      	l32i.n	a8, a1, 8
400e1ef0:	0939      	s32i.n	a3, a9, 0
400e1ef2:	b02860        	addx8	a2, a8, a6
400e1ef5:	f01d      	retw.n
400e1ef7:	350c      	movi.n	a5, 3
400e1ef9:	020926        	beqi	a9, -1, 400e1eff <get_arg$isra$0+0x443>
400e1efc:	ff3106        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1eff:	ff6dc6        	j	400e1cba <get_arg$isra$0+0x1fe>
400e1f02:	650c      	movi.n	a5, 6
400e1f04:	020926        	beqi	a9, -1, 400e1f0a <get_arg$isra$0+0x44e>
400e1f07:	ff2e46        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1f0a:	ff5106        	j	400e1c52 <get_arg$isra$0+0x196>
400e1f0d:	150c      	movi.n	a5, 1
400e1f0f:	020926        	beqi	a9, -1, 400e1f15 <get_arg$isra$0+0x459>
400e1f12:	ff2b86        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1f15:	ff3106        	j	400e1bdd <get_arg$isra$0+0x121>
400e1f18:	450c      	movi.n	a5, 4
400e1f1a:	020926        	beqi	a9, -1, 400e1f20 <get_arg$isra$0+0x464>
400e1f1d:	ff28c6        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1f20:	ff7286        	j	400e1cee <get_arg$isra$0+0x232>
400e1f23:	050c      	movi.n	a5, 0
400e1f25:	020926        	beqi	a9, -1, 400e1f2b <get_arg$isra$0+0x46f>
400e1f28:	ff2606        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1f2b:	ff55c6        	j	400e1c86 <get_arg$isra$0+0x1ca>
400e1f2e:	250c      	movi.n	a5, 2
400e1f30:	020926        	beqi	a9, -1, 400e1f36 <get_arg$isra$0+0x47a>
400e1f33:	ff2346        	j	400e1bc4 <get_arg$isra$0+0x108>
400e1f36:	ff3606        	j	400e1c12 <get_arg$isra$0+0x156>
400e1f39:	000000        	ill

400e1f3c <_vfprintf_r>:
400e1f3c:	062136        	entry	a1, 0x310
400e1f3f:	a36122        	s32i	a2, a1, 0x28c
400e1f42:	a321a2        	l32i	a10, a1, 0x28c
400e1f45:	a26132        	s32i	a3, a1, 0x288
400e1f48:	a16142        	s32i	a4, a1, 0x284
400e1f4b:	9c6152        	s32i	a5, a1, 0x270
400e1f4e:	9d6162        	s32i	a6, a1, 0x274
400e1f51:	9e6172        	s32i	a7, a1, 0x278
400e1f54:	ba0c81        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400e1f57:	0008e0        	callx8	a8
400e1f5a:	0aa8      	l32i.n	a10, a10, 0
400e1f5c:	b161a2        	s32i	a10, a1, 0x2c4
400e1f5f:	b84881        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e1f62:	0008e0        	callx8	a8
400e1f65:	a32182        	l32i	a8, a1, 0x28c
400e1f68:	af61a2        	s32i	a10, a1, 0x2bc
400e1f6b:	a88c      	beqz.n	a8, 400e1f79 <_vfprintf_r+0x3d>
400e1f6d:	6828      	l32i.n	a2, a8, 24
400e1f6f:	62cc      	bnez.n	a2, 400e1f79 <_vfprintf_r+0x3d>
400e1f71:	08ad      	mov.n	a10, a8
400e1f73:	b9c581        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400e1f76:	0008e0        	callx8	a8
400e1f79:	b9ba21        	l32r	a2, 400d0664 <_flash_cache_start+0x64c>
400e1f7c:	a22192        	l32i	a9, a1, 0x288
400e1f7f:	099927        	bne	a9, a2, 400e1f8c <_vfprintf_r+0x50>
400e1f82:	a32122        	l32i	a2, a1, 0x28c
400e1f85:	1228      	l32i.n	a2, a2, 4
400e1f87:	0008c6        	j	400e1fae <_vfprintf_r+0x72>
400e1f8a:	210000        	srai	a0, a0, 0
400e1f8d:	32b9b7        	bgeu	a9, a11, 400e1fc3 <_vfprintf_r+0x87>
400e1f90:	27a221        	l32r	a2, 400abe18 <_iram_end+0x1e2c4>
400e1f93:	820a93        	lsi	f9, a10, 0x208
400e1f96:	88a321        	l32r	a2, 400c4224 <_rtc_text_end+0x4224>
400e1f99:	8228      	l32i.n	a2, a2, 32
400e1f9b:	06a261        	l32r	a6, 400a3a24 <_iram_end+0x15ed0>
400e1f9e:	210004        	lsi	f0, a0, 132
400e1fa1:	92b9b3        	lsi	f11, a9, 0x248
400e1fa4:	27a221        	l32r	a2, 400abe2c <_iram_end+0x1e2d8>
400e1fa7:	0799      	s32i.n	a9, a7, 0
400e1fa9:	a32122        	l32i	a2, a1, 0x28c
400e1fac:	3228      	l32i.n	a2, a2, 12
400e1fae:	a26122        	s32i	a2, a1, 0x288
400e1fb1:	a22132        	l32i	a3, a1, 0x288
400e1fb4:	192322        	l32i	a2, a3, 100
400e1fb7:	0ee207        	bbsi	a2, 0, 400e1fc9 <_vfprintf_r+0x8d>
400e1fba:	061322        	l16ui	a2, a3, 12
400e1fbd:	08e297        	bbsi	a2, 9, 400e1fc9 <_vfprintf_r+0x8d>
400e1fc0:	58c3a2        	addi	a10, a3, 88
400e1fc3:	201110        	or	a1, a1, a1
400e1fc6:	a2b125        	call8	40084ad8 <_lock_acquire_recursive>
400e1fc9:	a22182        	l32i	a8, a1, 0x288
400e1fcc:	b95d31        	l32r	a3, 400d0540 <_flash_cache_start+0x528>
400e1fcf:	061822        	l16ui	a2, a8, 12
400e1fd2:	234280        	sext	a4, a2, 15
400e1fd5:	102320        	and	a2, a3, a2
400e1fd8:	f42020        	extui	a2, a2, 0, 16
400e1fdb:	011256        	bnez	a2, 400e1ff0 <_vfprintf_r+0xb4>
400e1fde:	203430        	or	a3, a4, a3
400e1fe1:	065832        	s16i	a3, a8, 12
400e1fe4:	b9af21        	l32r	a2, 400d06a0 <_flash_cache_start+0x688>
400e1fe7:	192832        	l32i	a3, a8, 100
400e1fea:	102320        	and	a2, a3, a2
400e1fed:	196822        	s32i	a2, a8, 100
400e1ff0:	a22192        	l32i	a9, a1, 0x288
400e1ff3:	061922        	l16ui	a2, a9, 12
400e1ff6:	036237        	bbci	a2, 3, 400e1ffd <_vfprintf_r+0xc1>
400e1ff9:	4928      	l32i.n	a2, a9, 16
400e1ffb:	12fc      	bnez.n	a2, 400e2030 <_vfprintf_r+0xf4>
400e1ffd:	a221b2        	l32i	a11, a1, 0x288
400e2000:	a321a2        	l32i	a10, a1, 0x28c
400e2003:	b9f481        	l32r	a8, 400d07d4 <_flash_cache_start+0x7bc>
400e2006:	0008e0        	callx8	a8
400e2009:	3aac      	beqz.n	a10, 400e2030 <_vfprintf_r+0xf4>
400e200b:	a22132        	l32i	a3, a1, 0x288
400e200e:	192322        	l32i	a2, a3, 100
400e2011:	036207        	bbci	a2, 0, 400e2018 <_vfprintf_r+0xdc>
400e2014:	000486        	j	400e202a <_vfprintf_r+0xee>
400e2017:	218200        	srai	a8, a0, 2
400e201a:	1822a2        	l32i	a10, a2, 96
400e201d:	e29706        	j	400daa7d <heap_caps_add_region+0x5d>
400e2020:	a208      	l32i.n	a0, a2, 40
400e2022:	58c8      	l32i.n	a12, a8, 20
400e2024:	201110        	or	a1, a1, a1
400e2027:	a2aee5        	call8	40084b14 <_lock_release_recursive>
400e202a:	f27c      	movi.n	a2, -1
400e202c:	f01d      	retw.n
400e202e:	920000        	lsi	f0, a0, 0x248
400e2031:	22a221        	l32r	a2, 400aaabc <_iram_end+0x1cf68>
400e2034:	321aa0        	orbc	b1, b10, b10
400e2037:	0619      	s32i.n	a1, a6, 0
400e2039:	102320        	and	a2, a3, a2
400e203c:	2e9266        	bnei	a2, 10, 400e206e <_vfprintf_r+0x132>
400e203f:	079922        	l16si	a2, a9, 14
400e2042:	028296        	bltz	a2, 400e206e <_vfprintf_r+0x132>
400e2045:	192922        	l32i	a2, a9, 100
400e2048:	08e207        	bbsi	a2, 0, 400e2054 <_vfprintf_r+0x118>
400e204b:	05e397        	bbsi	a3, 9, 400e2054 <_vfprintf_r+0x118>
400e204e:	58c9a2        	addi	a10, a9, 88
400e2051:	a2ac25        	call8	40084b14 <_lock_release_recursive>
400e2054:	9c21d2        	l32i	a13, a1, 0x270
400e2057:	9d21e2        	l32i	a14, a1, 0x274
400e205a:	9e21f2        	l32i	a15, a1, 0x278
400e205d:	a121c2        	l32i	a12, a1, 0x284
400e2060:	a221b2        	l32i	a11, a1, 0x288
400e2063:	a321a2        	l32i	a10, a1, 0x28c
400e2066:	030fa5        	call8	400e5160 <__sbprintf>
400e2069:	202aa0        	or	a2, a10, a10
400e206c:	f01d      	retw.n
400e206e:	f47c      	movi.n	a4, -1
400e2070:	10c1e2        	addi	a14, a1, 16
400e2073:	e4a132        	movi	a3, 0x1e4
400e2076:	446142        	s32i	a4, a1, 0x110
400e2079:	b7f851        	l32r	a5, 400d005c <_flash_cache_start+0x44>
400e207c:	b7f841        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400e207f:	020c      	movi.n	a2, 0
400e2081:	3e3a      	add.n	a3, a14, a3
400e2083:	8d6132        	s32i	a3, a1, 0x234
400e2086:	8f6122        	s32i	a2, a1, 0x23c
400e2089:	8e6122        	s32i	a2, a1, 0x238
400e208c:	966122        	s32i	a2, a1, 0x258
400e208f:	976122        	s32i	a2, a1, 0x25c
400e2092:	a76122        	s32i	a2, a1, 0x29c
400e2095:	aa6142        	s32i	a4, a1, 0x2a8
400e2098:	ab6152        	s32i	a5, a1, 0x2ac
400e209b:	9f6132        	s32i	a3, a1, 0x27c
400e209e:	b56122        	s32i	a2, a1, 0x2d4
400e20a1:	b46122        	s32i	a2, a1, 0x2d0
400e20a4:	ad6122        	s32i	a2, a1, 0x2b4
400e20a7:	b06122        	s32i	a2, a1, 0x2c0
400e20aa:	b36122        	s32i	a2, a1, 0x2cc
400e20ad:	ae6122        	s32i	a2, a1, 0x2b8
400e20b0:	0001c6        	j	400e20bb <_vfprintf_r+0x17f>
400e20b3:	a82152        	l32i	a5, a1, 0x2a0
400e20b6:	072d      	mov.n	a2, a7
400e20b8:	a16152        	s32i	a5, a1, 0x284
400e20bb:	a12152        	l32i	a5, a1, 0x284
400e20be:	000046        	j	400e20c3 <_vfprintf_r+0x187>
400e20c1:	551b      	addi.n	a5, a5, 1
400e20c3:	000532        	l8ui	a3, a5, 0
400e20c6:	438c      	beqz.n	a3, 400e20ce <_vfprintf_r+0x192>
400e20c8:	dbc332        	addi	a3, a3, -37
400e20cb:	ff2356        	bnez	a3, 400e20c1 <_vfprintf_r+0x185>
400e20ce:	a12182        	l32i	a8, a1, 0x284
400e20d1:	c03580        	sub	a3, a5, a8
400e20d4:	051316        	beqz	a3, 400e2129 <_vfprintf_r+0x1ed>
400e20d7:	8f2142        	l32i	a4, a1, 0x23c
400e20da:	9f2192        	l32i	a9, a1, 0x27c
400e20dd:	443a      	add.n	a4, a4, a3
400e20df:	8f6142        	s32i	a4, a1, 0x23c
400e20e2:	8e2142        	l32i	a4, a1, 0x238
400e20e5:	10c1a2        	addi	a10, a1, 16
400e20e8:	441b      	addi.n	a4, a4, 1
400e20ea:	0989      	s32i.n	a8, a9, 0
400e20ec:	1939      	s32i.n	a3, a9, 4
400e20ee:	8e6142        	s32i	a4, a1, 0x238
400e20f1:	02da62        	addmi	a6, a10, 0x200
400e20f4:	0884e6        	bgei	a4, 8, 400e2100 <_vfprintf_r+0x1c4>
400e20f7:	998b      	addi.n	a9, a9, 8
400e20f9:	9f6192        	s32i	a9, a1, 0x27c
400e20fc:	000846        	j	400e2121 <_vfprintf_r+0x1e5>
400e20ff:	a2c200        	muluh	a12, a2, a0
400e2102:	21b234        	lsi	f3, a2, 132
400e2105:	21a2a2        	movi	a10, 0x221
400e2108:	cc10a3        	lsi	f10, a0, 0x330
400e210b:	78a580        	lsi	f8, a5, 0x1e0
400e210e:	16fd      	lsi	f15, a6, 24
400e2110:	002a      	add.n	a0, a0, a2
400e2112:	0bf8c6        	j	400e50f9 <_vfprintf_r+0x31bd>
400e2115:	e4a142        	movi	a4, 0x1e4
400e2118:	10c162        	addi	a6, a1, 16
400e211b:	806640        	add	a6, a6, a4
400e211e:	9f6162        	s32i	a6, a1, 0x27c
400e2121:	ae2182        	l32i	a8, a1, 0x2b8
400e2124:	883a      	add.n	a8, a8, a3
400e2126:	ae6182        	s32i	a8, a1, 0x2b8
400e2129:	000532        	l8ui	a3, a5, 0
400e212c:	13cc      	bnez.n	a3, 400e2131 <_vfprintf_r+0x1f5>
400e212e:	0be386        	j	400e50c0 <_vfprintf_r+0x3184>
400e2131:	10c192        	addi	a9, a1, 16
400e2134:	060c      	movi.n	a6, 0
400e2136:	02d942        	addmi	a4, a9, 0x200
400e2139:	524462        	s8i	a6, a4, 82
400e213c:	060c      	movi.n	a6, 0
400e213e:	f47c      	movi.n	a4, -1
400e2140:	a56142        	s32i	a4, a1, 0x294
400e2143:	ac6162        	s32i	a6, a1, 0x2b0
400e2146:	064d      	mov.n	a4, a6
400e2148:	a06162        	s32i	a6, a1, 0x280
400e214b:	4ca262        	movi	a6, 0x24c
400e214e:	896a      	add.n	a8, a9, a6
400e2150:	351b      	addi.n	a3, a5, 1
400e2152:	027d      	mov.n	a7, a2
400e2154:	a46182        	s32i	a8, a1, 0x290
400e2157:	000286        	j	400e2165 <_vfprintf_r+0x229>
400e215a:	000000        	ill
400e215d:	a86132        	s32i	a3, a1, 0x2a0
400e2160:	040c      	movi.n	a4, 0
400e2162:	a82132        	l32i	a3, a1, 0x2a0
400e2165:	931b      	addi.n	a9, a3, 1
400e2167:	000332        	l8ui	a3, a3, 0
400e216a:	a86192        	s32i	a9, a1, 0x2a0
400e216d:	a66132        	s32i	a3, a1, 0x298
400e2170:	b9a4d1        	l32r	a13, 400d0800 <_flash_cache_start+0x7e8>
400e2173:	980c      	movi.n	a8, 9
400e2175:	4a2c      	movi.n	a10, 36
400e2177:	ab2c      	movi.n	a11, 42
400e2179:	fc7c      	movi.n	a12, -1
400e217b:	000106        	j	400e2183 <_vfprintf_r+0x247>
400e217e:	320000        	orbc	b0, b0, b0
400e2181:	62ac61        	l32r	a6, 400bac34 <_iram_end+0x2d0e0>
400e2184:	5ca621        	l32r	a2, 400b941c <_iram_end+0x2b8c8>
400e2187:	32a9      	s32i.n	a10, a2, 12
400e2189:	37e0c6        	j	400f0110 <_etext+0x3c3f>
400e218c:	02b9      	s32i.n	a11, a2, 0
400e218e:	08a486        	j	400e4424 <_vfprintf_r+0x24e8>
400e2191:	a033d0        	addx4	a3, a3, a13
400e2194:	0338      	l32i.n	a3, a3, 0
400e2196:	0003a0        	jx	a3
400e2199:	310000        	srai	a0, a0, 16
400e219c:	b998      	l32i.n	a9, a9, 44
400e219e:	b56132        	s32i	a3, a1, 0x2d4
400e21a1:	072206        	j	400e3e2d <_vfprintf_r+0x1ef1>
400e21a4:	a321a2        	l32i	a10, a1, 0x28c
400e21a7:	b97781        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400e21aa:	0008e0        	callx8	a8
400e21ad:	1aa8      	l32i.n	a10, a10, 4
400e21af:	b361a2        	s32i	a10, a1, 0x2cc
400e21b2:	b7b381        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e21b5:	0008e0        	callx8	a8
400e21b8:	b061a2        	s32i	a10, a1, 0x2c0
400e21bb:	a321a2        	l32i	a10, a1, 0x28c
400e21be:	b97181        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400e21c1:	0008e0        	callx8	a8
400e21c4:	2aa8      	l32i.n	a10, a10, 8
400e21c6:	b02162        	l32i	a6, a1, 0x2c0
400e21c9:	ad61a2        	s32i	a10, a1, 0x2b4
400e21cc:	f92616        	beqz	a6, 400e2162 <_vfprintf_r+0x226>
400e21cf:	f8fa16        	beqz	a10, 400e2162 <_vfprintf_r+0x226>
400e21d2:	000a32        	l8ui	a3, a10, 0
400e21d5:	f89316        	beqz	a3, 400e2162 <_vfprintf_r+0x226>
400e21d8:	00a432        	movi	a3, 0x400
400e21db:	00c006        	j	400e24df <_vfprintf_r+0x5a3>
400e21de:	10c192        	addi	a9, a1, 16
400e21e1:	02d932        	addmi	a3, a9, 0x200
400e21e4:	520362        	l8ui	a6, a3, 82
400e21e7:	f77656        	bnez	a6, 400e2162 <_vfprintf_r+0x226>
400e21ea:	062c      	movi.n	a6, 32
400e21ec:	004606        	j	400e2308 <_vfprintf_r+0x3cc>
400e21ef:	130c      	movi.n	a3, 1
400e21f1:	00b0c6        	j	400e24b8 <_vfprintf_r+0x57c>
400e21f4:	a82182        	l32i	a8, a1, 0x2a0
400e21f7:	000862        	l8ui	a6, a8, 0
400e21fa:	980c      	movi.n	a8, 9
400e21fc:	d0c632        	addi	a3, a6, -48
400e21ff:	02b837        	bgeu	a8, a3, 400e2205 <_vfprintf_r+0x2c9>
400e2202:	0bc706        	j	400e5122 <_vfprintf_r+0x31e6>
400e2205:	a82192        	l32i	a9, a1, 0x2a0
400e2208:	0a0c      	movi.n	a10, 0
400e220a:	391b      	addi.n	a3, a9, 1
400e220c:	d0c662        	addi	a6, a6, -48
400e220f:	a0aaa0        	addx4	a10, a10, a10
400e2212:	331b      	addi.n	a3, a3, 1
400e2214:	90aa60        	addx2	a10, a10, a6
400e2217:	630b      	addi.n	a6, a3, -1
400e2219:	000662        	l8ui	a6, a6, 0
400e221c:	d0c692        	addi	a9, a6, -48
400e221f:	e9b897        	bgeu	a8, a9, 400e220c <_vfprintf_r+0x2d0>
400e2222:	482c      	movi.n	a8, 36
400e2224:	021687        	beq	a6, a8, 400e222a <_vfprintf_r+0x2ee>
400e2227:	ffcd46        	j	400e2160 <_vfprintf_r+0x224>
400e222a:	062c      	movi.n	a6, 32
400e222c:	02a6a7        	bge	a6, a10, 400e2232 <_vfprintf_r+0x2f6>
400e222f:	0bb186        	j	400e50f9 <_vfprintf_r+0x31bd>
400e2232:	972162        	l32i	a6, a1, 0x25c
400e2235:	aa0b      	addi.n	a10, a10, -1
400e2237:	09aa67        	bge	a10, a6, 400e2244 <_vfprintf_r+0x308>
400e223a:	10c1e2        	addi	a14, a1, 16
400e223d:	b0aae0        	addx8	a10, a10, a14
400e2240:	000706        	j	400e2260 <_vfprintf_r+0x324>
400e2243:	c18200        	mul16u	a8, a2, a0
400e2246:	a26210        	muluh	a6, a2, a1
400e2249:	6a48      	l32i.n	a4, a10, 24
400e224b:	c268      	l32i.n	a6, a2, 48
400e224d:	d260a2        	s32i	a10, a0, 0x348
400e2250:	69a421        	l32r	a2, 400bc8e0 <_iram_end+0x2ed8c>
400e2253:	d8f201        	l32r	a0, 400d861c <nvs::Page::load(unsigned int)+0x20>
400e2256:	08ed01        	l32r	a0, 400a460c <_iram_end+0x16ab8>
400e2259:	c8ca      	add.n	a12, a8, a12
400e225b:	05bd      	mov.n	a11, a5
400e225d:	ff85e5        	call8	400e1abc <get_arg$isra$0>
400e2260:	0aa8      	l32i.n	a10, a10, 0
400e2262:	076d      	mov.n	a6, a7
400e2264:	ac61a2        	s32i	a10, a1, 0x2b0
400e2267:	a86132        	s32i	a3, a1, 0x2a0
400e226a:	001fc6        	j	400e22ed <_vfprintf_r+0x3b1>
400e226d:	10c192        	addi	a9, a1, 16
400e2270:	b03290        	addx8	a3, a2, a9
400e2273:	001c46        	j	400e22e8 <_vfprintf_r+0x3ac>
400e2276:	f31c      	movi.n	a3, 31
400e2278:	402387        	blt	a3, a8, 400e22bc <_vfprintf_r+0x380>
400e227b:	381b      	addi.n	a3, a8, 1
400e227d:	10c1a2        	addi	a10, a1, 16
400e2280:	976132        	s32i	a3, a1, 0x25c
400e2283:	02da32        	addmi	a3, a10, 0x200
400e2286:	1a2372        	l32i	a7, a3, 104
400e2289:	891c      	movi.n	a9, 24
400e228b:	a74b      	addi.n	a10, a7, 4
400e228d:	1a63a2        	s32i	a10, a3, 104
400e2290:	0529a7        	blt	a9, a10, 400e2299 <_vfprintf_r+0x35d>
400e2293:	192372        	l32i	a7, a3, 100
400e2296:	000286        	j	400e22a4 <_vfprintf_r+0x368>
400e2299:	042977        	blt	a9, a7, 400e22a1 <_vfprintf_r+0x365>
400e229c:	472c      	movi.n	a7, 36
400e229e:	1a6372        	s32i	a7, a3, 104
400e22a1:	9c2172        	l32i	a7, a1, 0x270
400e22a4:	9e2132        	l32i	a3, a1, 0x278
400e22a7:	10c1e2        	addi	a14, a1, 16
400e22aa:	373a      	add.n	a3, a7, a3
400e22ac:	fcc332        	addi	a3, a3, -4
400e22af:	0338      	l32i.n	a3, a3, 0
400e22b1:	b088e0        	addx8	a8, a8, a14
400e22b4:	ac6132        	s32i	a3, a1, 0x2b0
400e22b7:	0839      	s32i.n	a3, a8, 0
400e22b9:	000c06        	j	400e22ed <_vfprintf_r+0x3b1>
400e22bc:	10c182        	addi	a8, a1, 16
400e22bf:	02d832        	addmi	a3, a8, 0x200
400e22c2:	1a2372        	l32i	a7, a3, 104
400e22c5:	881c      	movi.n	a8, 24
400e22c7:	974b      	addi.n	a9, a7, 4
400e22c9:	1a6392        	s32i	a9, a3, 104
400e22cc:	052897        	blt	a8, a9, 400e22d5 <_vfprintf_r+0x399>
400e22cf:	192372        	l32i	a7, a3, 100
400e22d2:	000286        	j	400e22e0 <_vfprintf_r+0x3a4>
400e22d5:	042877        	blt	a8, a7, 400e22dd <_vfprintf_r+0x3a1>
400e22d8:	472c      	movi.n	a7, 36
400e22da:	1a6372        	s32i	a7, a3, 104
400e22dd:	9c2172        	l32i	a7, a1, 0x270
400e22e0:	9e2132        	l32i	a3, a1, 0x278
400e22e3:	373a      	add.n	a3, a7, a3
400e22e5:	fcc332        	addi	a3, a3, -4
400e22e8:	0338      	l32i.n	a3, a3, 0
400e22ea:	ac6132        	s32i	a3, a1, 0x2b0
400e22ed:	ac2192        	l32i	a9, a1, 0x2b0
400e22f0:	067d      	mov.n	a7, a6
400e22f2:	e6c9d6        	bgez	a9, 400e2162 <_vfprintf_r+0x226>
400e22f5:	609090        	neg	a9, a9
400e22f8:	ac6192        	s32i	a9, a1, 0x2b0
400e22fb:	430c      	movi.n	a3, 4
400e22fd:	006dc6        	j	400e24b8 <_vfprintf_r+0x57c>
400e2300:	10c182        	addi	a8, a1, 16
400e2303:	b62c      	movi.n	a6, 43
400e2305:	02d832        	addmi	a3, a8, 0x200
400e2308:	524362        	s8i	a6, a3, 82
400e230b:	ff94c6        	j	400e2162 <_vfprintf_r+0x226>
400e230e:	a82192        	l32i	a9, a1, 0x2a0
400e2311:	000962        	l8ui	a6, a9, 0
400e2314:	391b      	addi.n	a3, a9, 1
400e2316:	a66162        	s32i	a6, a1, 0x298
400e2319:	0416b7        	beq	a6, a11, 400e2321 <_vfprintf_r+0x3e5>
400e231c:	060c      	movi.n	a6, 0
400e231e:	004706        	j	400e243e <_vfprintf_r+0x502>
400e2321:	a82182        	l32i	a8, a1, 0x2a0
400e2324:	010862        	l8ui	a6, a8, 1
400e2327:	980c      	movi.n	a8, 9
400e2329:	d0c692        	addi	a9, a6, -48
400e232c:	02b897        	bgeu	a8, a9, 400e2332 <_vfprintf_r+0x3f6>
400e232f:	0b7f46        	j	400e5130 <_vfprintf_r+0x31f4>
400e2332:	a82192        	l32i	a9, a1, 0x2a0
400e2335:	0a0c      	movi.n	a10, 0
400e2337:	992b      	addi.n	a9, a9, 2
400e2339:	a86192        	s32i	a9, a1, 0x2a0
400e233c:	d0c662        	addi	a6, a6, -48
400e233f:	a0aaa0        	addx4	a10, a10, a10
400e2342:	90aa60        	addx2	a10, a10, a6
400e2345:	a82162        	l32i	a6, a1, 0x2a0
400e2348:	661b      	addi.n	a6, a6, 1
400e234a:	a86162        	s32i	a6, a1, 0x2a0
400e234d:	660b      	addi.n	a6, a6, -1
400e234f:	000662        	l8ui	a6, a6, 0
400e2352:	d0c692        	addi	a9, a6, -48
400e2355:	e3b897        	bgeu	a8, a9, 400e233c <_vfprintf_r+0x400>
400e2358:	482c      	movi.n	a8, 36
400e235a:	021687        	beq	a6, a8, 400e2360 <_vfprintf_r+0x424>
400e235d:	ff7f06        	j	400e215d <_vfprintf_r+0x221>
400e2360:	032c      	movi.n	a3, 32
400e2362:	02a3a7        	bge	a3, a10, 400e2368 <_vfprintf_r+0x42c>
400e2365:	0b6406        	j	400e50f9 <_vfprintf_r+0x31bd>
400e2368:	972132        	l32i	a3, a1, 0x25c
400e236b:	aa0b      	addi.n	a10, a10, -1
400e236d:	08aa37        	bge	a10, a3, 400e2379 <_vfprintf_r+0x43d>
400e2370:	10c182        	addi	a8, a1, 16
400e2373:	b0aa80        	addx8	a10, a10, a8
400e2376:	0006c6        	j	400e2395 <_vfprintf_r+0x459>
400e2379:	10c192        	addi	a9, a1, 16
400e237c:	48a232        	movi	a3, 0x248
400e237f:	393a      	add.n	a3, a9, a3
400e2381:	60a2c2        	movi	a12, 0x260
400e2384:	a421d2        	l32i	a13, a1, 0x290
400e2387:	0139      	s32i.n	a3, a1, 0
400e2389:	01d9f2        	addmi	a15, a9, 0x100
400e238c:	09ed      	mov.n	a14, a9
400e238e:	c9ca      	add.n	a12, a9, a12
400e2390:	05bd      	mov.n	a11, a5
400e2392:	ff72a5        	call8	400e1abc <get_arg$isra$0>
400e2395:	0aa8      	l32i.n	a10, a10, 0
400e2397:	a561a2        	s32i	a10, a1, 0x294
400e239a:	002106        	j	400e2422 <_vfprintf_r+0x4e6>
400e239d:	10c1a2        	addi	a10, a1, 16
400e23a0:	b062a0        	addx8	a6, a2, a10
400e23a3:	001c46        	j	400e2418 <_vfprintf_r+0x4dc>
400e23a6:	f71c      	movi.n	a7, 31
400e23a8:	402767        	blt	a7, a6, 400e23ec <_vfprintf_r+0x4b0>
400e23ab:	761b      	addi.n	a7, a6, 1
400e23ad:	10c1e2        	addi	a14, a1, 16
400e23b0:	976172        	s32i	a7, a1, 0x25c
400e23b3:	02de72        	addmi	a7, a14, 0x200
400e23b6:	1a2792        	l32i	a9, a7, 104
400e23b9:	8a1c      	movi.n	a10, 24
400e23bb:	b94b      	addi.n	a11, a9, 4
400e23bd:	1a67b2        	s32i	a11, a7, 104
400e23c0:	052ab7        	blt	a10, a11, 400e23c9 <_vfprintf_r+0x48d>
400e23c3:	192792        	l32i	a9, a7, 100
400e23c6:	000286        	j	400e23d4 <_vfprintf_r+0x498>
400e23c9:	042a97        	blt	a10, a9, 400e23d1 <_vfprintf_r+0x495>
400e23cc:	492c      	movi.n	a9, 36
400e23ce:	1a6792        	s32i	a9, a7, 104
400e23d1:	9c2192        	l32i	a9, a1, 0x270
400e23d4:	9e2172        	l32i	a7, a1, 0x278
400e23d7:	10c1a2        	addi	a10, a1, 16
400e23da:	797a      	add.n	a7, a9, a7
400e23dc:	fcc772        	addi	a7, a7, -4
400e23df:	0798      	l32i.n	a9, a7, 0
400e23e1:	b066a0        	addx8	a6, a6, a10
400e23e4:	a56192        	s32i	a9, a1, 0x294
400e23e7:	0699      	s32i.n	a9, a6, 0
400e23e9:	000c06        	j	400e241d <_vfprintf_r+0x4e1>
400e23ec:	10c1e2        	addi	a14, a1, 16
400e23ef:	02de62        	addmi	a6, a14, 0x200
400e23f2:	1a2672        	l32i	a7, a6, 104
400e23f5:	891c      	movi.n	a9, 24
400e23f7:	a74b      	addi.n	a10, a7, 4
400e23f9:	1a66a2        	s32i	a10, a6, 104
400e23fc:	0529a7        	blt	a9, a10, 400e2405 <_vfprintf_r+0x4c9>
400e23ff:	192672        	l32i	a7, a6, 100
400e2402:	000286        	j	400e2410 <_vfprintf_r+0x4d4>
400e2405:	042977        	blt	a9, a7, 400e240d <_vfprintf_r+0x4d1>
400e2408:	472c      	movi.n	a7, 36
400e240a:	1a6672        	s32i	a7, a6, 104
400e240d:	9c2172        	l32i	a7, a1, 0x270
400e2410:	9e2162        	l32i	a6, a1, 0x278
400e2413:	676a      	add.n	a6, a7, a6
400e2415:	fcc662        	addi	a6, a6, -4
400e2418:	0668      	l32i.n	a6, a6, 0
400e241a:	a56162        	s32i	a6, a1, 0x294
400e241d:	a86132        	s32i	a3, a1, 0x2a0
400e2420:	087d      	mov.n	a7, a8
400e2422:	a52162        	l32i	a6, a1, 0x294
400e2425:	f37c      	movi.n	a3, -1
400e2427:	536630        	max	a6, a6, a3
400e242a:	a56162        	s32i	a6, a1, 0x294
400e242d:	ff4c46        	j	400e2162 <_vfprintf_r+0x226>
400e2430:	a06660        	addx4	a6, a6, a6
400e2433:	906690        	addx2	a6, a6, a9
400e2436:	000392        	l8ui	a9, a3, 0
400e2439:	331b      	addi.n	a3, a3, 1
400e243b:	a66192        	s32i	a9, a1, 0x298
400e243e:	a621e2        	l32i	a14, a1, 0x298
400e2441:	a86132        	s32i	a3, a1, 0x2a0
400e2444:	d0ce92        	addi	a9, a14, -48
400e2447:	e5b897        	bgeu	a8, a9, 400e2430 <_vfprintf_r+0x4f4>
400e244a:	5366c0        	max	a6, a6, a12
400e244d:	a56162        	s32i	a6, a1, 0x294
400e2450:	ac2132        	l32i	a3, a1, 0x2b0
400e2453:	ff4a46        	j	400e2180 <_vfprintf_r+0x244>
400e2456:	320000        	orbc	b0, b0, b0
400e2459:	4680a0        	lsi	f10, a0, 0x118
400e245c:	0c0016        	beqz	a0, 400e2520 <_vfprintf_r+0x5e4>
400e245f:	219203        	lsi	f0, a2, 132
400e2462:	3330a6        	blti	a0, 3, 400e2499 <_vfprintf_r+0x55d>
400e2465:	c962a0        	lsi	f10, a2, 0x324
400e2468:	3360d0        	clamps	a6, a0, 20
400e246b:	216290        	srai	a6, a9, 2
400e246e:	1ba8      	l32i.n	a10, a11, 4
400e2470:	616266        	bnei	a2, 6, 400e24d5 <_vfprintf_r+0x599>
400e2473:	0ba8      	l32i.n	a10, a11, 0
400e2475:	066266        	bnei	a2, 6, 400e247f <_vfprintf_r+0x543>
400e2478:	616200        	lsi	f0, a2, 0x184
400e247b:	c662a6        	blti	a2, 6, 400e2445 <_vfprintf_r+0x509>
400e247e:	b867d0        	lsi	f13, a7, 0x2e0
400e2481:	92dd      	lsi	f13, a2, 8
400e2483:	a7a621        	l32r	a2, 400cc31c <_rtc_text_end+0xc31c>
400e2486:	0219      	s32i.n	a1, a2, 0
400e2488:	ff3d06        	j	400e2180 <_vfprintf_r+0x244>
400e248b:	022c      	movi.n	a2, 32
400e248d:	02a237        	bge	a2, a3, 400e2493 <_vfprintf_r+0x557>
400e2490:	0b1946        	j	400e50f9 <_vfprintf_r+0x31bd>
400e2493:	230b      	addi.n	a2, a3, -1
400e2495:	140c      	movi.n	a4, 1
400e2497:	ff31c6        	j	400e2162 <_vfprintf_r+0x226>
400e249a:	830c      	movi.n	a3, 8
400e249c:	000606        	j	400e24b8 <_vfprintf_r+0x57c>
400e249f:	a82182        	l32i	a8, a1, 0x2a0
400e24a2:	68a032        	movi	a3, 104
400e24a5:	000862        	l8ui	a6, a8, 0
400e24a8:	0a9637        	bne	a6, a3, 400e24b6 <_vfprintf_r+0x57a>
400e24ab:	881b      	addi.n	a8, a8, 1
400e24ad:	a86182        	s32i	a8, a1, 0x2a0
400e24b0:	00a232        	movi	a3, 0x200
400e24b3:	000d86        	j	400e24ed <_vfprintf_r+0x5b1>
400e24b6:	034c      	movi.n	a3, 64
400e24b8:	a02162        	l32i	a6, a1, 0x280
400e24bb:	206630        	or	a6, a6, a3
400e24be:	a06162        	s32i	a6, a1, 0x280
400e24c1:	ff2746        	j	400e2162 <_vfprintf_r+0x226>
400e24c4:	a82182        	l32i	a8, a1, 0x2a0
400e24c7:	6ca032        	movi	a3, 108
400e24ca:	000862        	l8ui	a6, a8, 0
400e24cd:	079637        	bne	a6, a3, 400e24d8 <_vfprintf_r+0x59c>
400e24d0:	881b      	addi.n	a8, a8, 1
400e24d2:	a86182        	s32i	a8, a1, 0x2a0
400e24d5:	000486        	j	400e24eb <_vfprintf_r+0x5af>
400e24d8:	031c      	movi.n	a3, 16
400e24da:	fff686        	j	400e24b8 <_vfprintf_r+0x57c>
400e24dd:	032c      	movi.n	a3, 32
400e24df:	a02182        	l32i	a8, a1, 0x280
400e24e2:	208830        	or	a8, a8, a3
400e24e5:	a06182        	s32i	a8, a1, 0x280
400e24e8:	ff1d86        	j	400e2162 <_vfprintf_r+0x226>
400e24eb:	032c      	movi.n	a3, 32
400e24ed:	a02192        	l32i	a9, a1, 0x280
400e24f0:	209930        	or	a9, a9, a3
400e24f3:	a06192        	s32i	a9, a1, 0x280
400e24f6:	ff1a06        	j	400e2162 <_vfprintf_r+0x226>
400e24f9:	972132        	l32i	a3, a1, 0x25c
400e24fc:	44bc      	beqz.n	a4, 400e2534 <_vfprintf_r+0x5f8>
400e24fe:	0ba237        	bge	a2, a3, 400e250d <_vfprintf_r+0x5d1>
400e2501:	10c1a2        	addi	a10, a1, 16
400e2504:	b022a0        	addx8	a2, a2, a10
400e2507:	000222        	l8ui	a2, a2, 0
400e250a:	000846        	j	400e252f <_vfprintf_r+0x5f3>
400e250d:	10c1e2        	addi	a14, a1, 16
400e2510:	48a232        	movi	a3, 0x248
400e2513:	3e3a      	add.n	a3, a14, a3
400e2515:	4ca2d2        	movi	a13, 0x24c
400e2518:	60a2c2        	movi	a12, 0x260
400e251b:	02ad      	mov.n	a10, a2
400e251d:	0139      	s32i.n	a3, a1, 0
400e251f:	01def2        	addmi	a15, a14, 0x100
400e2522:	deda      	add.n	a13, a14, a13
400e2524:	ceca      	add.n	a12, a14, a12
400e2526:	20b550        	or	a11, a5, a5
400e2529:	ff5925        	call8	400e1abc <get_arg$isra$0>
400e252c:	000a22        	l8ui	a2, a10, 0
400e252f:	074d      	mov.n	a4, a7
400e2531:	002086        	j	400e25b7 <_vfprintf_r+0x67b>
400e2534:	471b      	addi.n	a4, a7, 1
400e2536:	08a737        	bge	a7, a3, 400e2542 <_vfprintf_r+0x606>
400e2539:	10c132        	addi	a3, a1, 16
400e253c:	b02230        	addx8	a2, a2, a3
400e253f:	001c46        	j	400e25b4 <_vfprintf_r+0x678>
400e2542:	f21c      	movi.n	a2, 31
400e2544:	402237        	blt	a2, a3, 400e2588 <_vfprintf_r+0x64c>
400e2547:	231b      	addi.n	a2, a3, 1
400e2549:	10c152        	addi	a5, a1, 16
400e254c:	976122        	s32i	a2, a1, 0x25c
400e254f:	02d522        	addmi	a2, a5, 0x200
400e2552:	1a2252        	l32i	a5, a2, 104
400e2555:	861c      	movi.n	a6, 24
400e2557:	754b      	addi.n	a7, a5, 4
400e2559:	1a6272        	s32i	a7, a2, 104
400e255c:	052677        	blt	a6, a7, 400e2565 <_vfprintf_r+0x629>
400e255f:	192252        	l32i	a5, a2, 100
400e2562:	000286        	j	400e2570 <_vfprintf_r+0x634>
400e2565:	042657        	blt	a6, a5, 400e256d <_vfprintf_r+0x631>
400e2568:	452c      	movi.n	a5, 36
400e256a:	1a6252        	s32i	a5, a2, 104
400e256d:	9c2152        	l32i	a5, a1, 0x270
400e2570:	9e2122        	l32i	a2, a1, 0x278
400e2573:	10c162        	addi	a6, a1, 16
400e2576:	252a      	add.n	a2, a5, a2
400e2578:	fcc222        	addi	a2, a2, -4
400e257b:	0228      	l32i.n	a2, a2, 0
400e257d:	b03360        	addx8	a3, a3, a6
400e2580:	0329      	s32i.n	a2, a3, 0
400e2582:	742020        	extui	a2, a2, 0, 8
400e2585:	000b86        	j	400e25b7 <_vfprintf_r+0x67b>
400e2588:	10c182        	addi	a8, a1, 16
400e258b:	02d822        	addmi	a2, a8, 0x200
400e258e:	1a2232        	l32i	a3, a2, 104
400e2591:	851c      	movi.n	a5, 24
400e2593:	634b      	addi.n	a6, a3, 4
400e2595:	1a6262        	s32i	a6, a2, 104
400e2598:	052567        	blt	a5, a6, 400e25a1 <_vfprintf_r+0x665>
400e259b:	192232        	l32i	a3, a2, 100
400e259e:	000286        	j	400e25ac <_vfprintf_r+0x670>
400e25a1:	042537        	blt	a5, a3, 400e25a9 <_vfprintf_r+0x66d>
400e25a4:	432c      	movi.n	a3, 36
400e25a6:	1a6232        	s32i	a3, a2, 104
400e25a9:	9c2132        	l32i	a3, a1, 0x270
400e25ac:	9e2122        	l32i	a2, a1, 0x278
400e25af:	232a      	add.n	a2, a3, a2
400e25b1:	fcc222        	addi	a2, a2, -4
400e25b4:	000222        	l8ui	a2, a2, 0
400e25b7:	10c192        	addi	a9, a1, 16
400e25ba:	01d932        	addmi	a3, a9, 0x100
400e25bd:	804322        	s8i	a2, a3, 128
400e25c0:	030c      	movi.n	a3, 0
400e25c2:	02d922        	addmi	a2, a9, 0x200
400e25c5:	524232        	s8i	a3, a2, 82
400e25c8:	020c      	movi.n	a2, 0
400e25ca:	130c      	movi.n	a3, 1
400e25cc:	a56132        	s32i	a3, a1, 0x294
400e25cf:	047d      	mov.n	a7, a4
400e25d1:	a46122        	s32i	a2, a1, 0x290
400e25d4:	026d      	mov.n	a6, a2
400e25d6:	023d      	mov.n	a3, a2
400e25d8:	025d      	mov.n	a5, a2
400e25da:	079c46        	j	400e444f <_vfprintf_r+0x2513>
400e25dd:	920000        	lsi	f0, a0, 0x248
400e25e0:	1ca021        	l32r	a2, 400a9860 <_iram_end+0x1bd0c>
400e25e3:	993003        	lsi	f0, a0, 0x264
400e25e6:	619220        	lsi	f2, a2, 0x184
400e25e9:	2132a0        	srai	a3, a10, 2
400e25ec:	e357a0        	lsi	f10, a7, 0x38c
400e25ef:	350602        	l8ui	a0, a6, 53
400e25f2:	218200        	srai	a8, a0, 2
400e25f5:	74bc97        	bgeu	a12, a9, 400e266d <_vfprintf_r+0x731>
400e25f8:	0ca287        	bge	a2, a8, 400e2608 <_vfprintf_r+0x6cc>
400e25fb:	10c142        	addi	a4, a1, 16
400e25fe:	b02240        	addx8	a2, a2, a4
400e2601:	0258      	l32i.n	a5, a2, 0
400e2603:	1238      	l32i.n	a3, a2, 4
400e2605:	0008c6        	j	400e262c <_vfprintf_r+0x6f0>
400e2608:	10c162        	addi	a6, a1, 16
400e260b:	48a232        	movi	a3, 0x248
400e260e:	363a      	add.n	a3, a6, a3
400e2610:	4ca2d2        	movi	a13, 0x24c
400e2613:	60a2c2        	movi	a12, 0x260
400e2616:	0139      	s32i.n	a3, a1, 0
400e2618:	05bd      	mov.n	a11, a5
400e261a:	01d6f2        	addmi	a15, a6, 0x100
400e261d:	06ed      	mov.n	a14, a6
400e261f:	d6da      	add.n	a13, a6, a13
400e2621:	c6ca      	add.n	a12, a6, a12
400e2623:	02ad      	mov.n	a10, a2
400e2625:	ff4965        	call8	400e1abc <get_arg$isra$0>
400e2628:	0a58      	l32i.n	a5, a10, 0
400e262a:	1a38      	l32i.n	a3, a10, 4
400e262c:	074d      	mov.n	a4, a7
400e262e:	00dac6        	j	400e299d <_vfprintf_r+0xa61>
400e2631:	471b      	addi.n	a4, a7, 1
400e2633:	08a787        	bge	a7, a8, 400e263f <_vfprintf_r+0x703>
400e2636:	10c182        	addi	a8, a1, 16
400e2639:	b02280        	addx8	a2, a2, a8
400e263c:	002006        	j	400e26c0 <_vfprintf_r+0x784>
400e263f:	f21c      	movi.n	a2, 31
400e2641:	482287        	blt	a2, a8, 400e268d <_vfprintf_r+0x751>
400e2644:	281b      	addi.n	a2, a8, 1
400e2646:	10c192        	addi	a9, a1, 16
400e2649:	976122        	s32i	a2, a1, 0x25c
400e264c:	02d922        	addmi	a2, a9, 0x200
400e264f:	1a2232        	l32i	a3, a2, 104
400e2652:	537b      	addi.n	a5, a3, 7
400e2654:	837c      	movi.n	a3, -8
400e2656:	103530        	and	a3, a5, a3
400e2659:	638b      	addi.n	a6, a3, 8
400e265b:	1a6262        	s32i	a6, a2, 104
400e265e:	851c      	movi.n	a5, 24
400e2660:	052567        	blt	a5, a6, 400e2669 <_vfprintf_r+0x72d>
400e2663:	192232        	l32i	a3, a2, 100
400e2666:	000286        	j	400e2674 <_vfprintf_r+0x738>
400e2669:	042537        	blt	a5, a3, 400e2671 <_vfprintf_r+0x735>
400e266c:	832c      	movi.n	a3, 40
400e266e:	1a6232        	s32i	a3, a2, 104
400e2671:	9c2132        	l32i	a3, a1, 0x270
400e2674:	9e2122        	l32i	a2, a1, 0x278
400e2677:	10c1a2        	addi	a10, a1, 16
400e267a:	232a      	add.n	a2, a3, a2
400e267c:	f8c222        	addi	a2, a2, -8
400e267f:	0258      	l32i.n	a5, a2, 0
400e2681:	1238      	l32i.n	a3, a2, 4
400e2683:	b028a0        	addx8	a2, a8, a10
400e2686:	0259      	s32i.n	a5, a2, 0
400e2688:	1239      	s32i.n	a3, a2, 4
400e268a:	00c3c6        	j	400e299d <_vfprintf_r+0xa61>
400e268d:	10c1e2        	addi	a14, a1, 16
400e2690:	02de22        	addmi	a2, a14, 0x200
400e2693:	1a2232        	l32i	a3, a2, 104
400e2696:	537b      	addi.n	a5, a3, 7
400e2698:	837c      	movi.n	a3, -8
400e269a:	103530        	and	a3, a5, a3
400e269d:	638b      	addi.n	a6, a3, 8
400e269f:	1a6262        	s32i	a6, a2, 104
400e26a2:	851c      	movi.n	a5, 24
400e26a4:	052567        	blt	a5, a6, 400e26ad <_vfprintf_r+0x771>
400e26a7:	192232        	l32i	a3, a2, 100
400e26aa:	000286        	j	400e26b8 <_vfprintf_r+0x77c>
400e26ad:	042537        	blt	a5, a3, 400e26b5 <_vfprintf_r+0x779>
400e26b0:	832c      	movi.n	a3, 40
400e26b2:	1a6232        	s32i	a3, a2, 104
400e26b5:	9c2132        	l32i	a3, a1, 0x270
400e26b8:	9e2122        	l32i	a2, a1, 0x278
400e26bb:	232a      	add.n	a2, a3, a2
400e26bd:	f8c222        	addi	a2, a2, -8
400e26c0:	0258      	l32i.n	a5, a2, 0
400e26c2:	1238      	l32i.n	a3, a2, 4
400e26c4:	00b546        	j	400e299d <_vfprintf_r+0xa61>
400e26c7:	213200        	srai	a3, a0, 2
400e26ca:	6347a0        	minu	a4, a7, a10
400e26cd:	7e          	.byte 0x7e
400e26ce:	972162        	l32i	a6, a1, 0x25c
400e26d1:	f49c      	beqz.n	a4, 400e26f4 <_vfprintf_r+0x7b8>
400e26d3:	09a267        	bge	a2, a6, 400e26e0 <_vfprintf_r+0x7a4>
400e26d6:	10c142        	addi	a4, a1, 16
400e26d9:	b02240        	addx8	a2, a2, a4
400e26dc:	008406        	j	400e28f0 <_vfprintf_r+0x9b4>
400e26df:	c16200        	mul16u	a6, a2, a0
400e26e2:	a23210        	muluh	a3, a2, a1
400e26e5:	3a48      	l32i.n	a4, a10, 12
400e26e7:	013936        	entry	a9, 152
400e26ea:	01d6f2        	addmi	a15, a6, 0x100
400e26ed:	06ed      	mov.n	a14, a6
400e26ef:	008446        	j	400e2904 <_vfprintf_r+0x9c8>
400e26f2:	820000        	mull	a0, a0, a0
400e26f5:	1b10c1        	l32r	a12, 400a9338 <_iram_end+0x1b7e4>
400e26f8:	228047        	bany	a0, a4, 400e271e <_vfprintf_r+0x7e2>
400e26fb:	a767b0        	lsi	f11, a7, 0x29c
400e26fe:	a54602        	s8i	a0, a6, 165
400e2701:	f21c00        	rems	a1, a12, a0
400e2704:	3c2267        	blt	a2, a6, 400e2744 <_vfprintf_r+0x808>
400e2707:	261b      	addi.n	a2, a6, 1
400e2709:	10c192        	addi	a9, a1, 16
400e270c:	976122        	s32i	a2, a1, 0x25c
400e270f:	02d922        	addmi	a2, a9, 0x200
400e2712:	1a2232        	l32i	a3, a2, 104
400e2715:	851c      	movi.n	a5, 24
400e2717:	734b      	addi.n	a7, a3, 4
400e2719:	1a6272        	s32i	a7, a2, 104
400e271c:	052577        	blt	a5, a7, 400e2725 <_vfprintf_r+0x7e9>
400e271f:	192222        	l32i	a2, a2, 100
400e2722:	000286        	j	400e2730 <_vfprintf_r+0x7f4>
400e2725:	042537        	blt	a5, a3, 400e272d <_vfprintf_r+0x7f1>
400e2728:	432c      	movi.n	a3, 36
400e272a:	1a6232        	s32i	a3, a2, 104
400e272d:	9c2122        	l32i	a2, a1, 0x270
400e2730:	9e2132        	l32i	a3, a1, 0x278
400e2733:	10c1a2        	addi	a10, a1, 16
400e2736:	323a      	add.n	a3, a2, a3
400e2738:	fcc332        	addi	a3, a3, -4
400e273b:	0358      	l32i.n	a5, a3, 0
400e273d:	b026a0        	addx8	a2, a6, a10
400e2740:	0088c6        	j	400e2967 <_vfprintf_r+0xa2b>
400e2743:	c1e200        	mul16u	a14, a2, a0
400e2746:	de2210        	f64iter	a2, a2, a1, 1, 1
400e2749:	890602        	l8ui	a0, a6, 137
400e274c:	213200        	srai	a3, a0, 2
400e274f:	e367a0        	lsi	f10, a7, 0x38c
400e2752:	304602        	s8i	a0, a6, 48
400e2755:	216200        	srai	a6, a0, 2
400e2758:	54bc97        	bgeu	a12, a9, 400e27b0 <_vfprintf_r+0x874>
400e275b:	0da267        	bge	a2, a6, 400e276c <_vfprintf_r+0x830>
400e275e:	10c142        	addi	a4, a1, 16
400e2761:	b02240        	addx8	a2, a2, a4
400e2764:	009252        	l16si	a5, a2, 0
400e2767:	006b06        	j	400e2917 <_vfprintf_r+0x9db>
400e276a:	620000        	lsi	f0, a0, 0x188
400e276d:	3210c1        	l32r	a12, 400aefb0 <_iram_end+0x2145c>
400e2770:	3a48a2        	s8i	a10, a8, 58
400e2773:	a2d236        	entry	a2, 0x5168
400e2776:	c24c      	movi.n	a2, 76
400e2778:	bd60a2        	s32i	a10, a0, 0x2f4
400e277b:	013905        	call0	400e3b0c <_vfprintf_r+0x1bd0>
400e277e:	01d6f2        	addmi	a15, a6, 0x100
400e2781:	06ed      	mov.n	a14, a6
400e2783:	d6da      	add.n	a13, a6, a13
400e2785:	c6ca      	add.n	a12, a6, a12
400e2787:	02ad      	mov.n	a10, a2
400e2789:	ff3325        	call8	400e1abc <get_arg$isra$0>
400e278c:	009a52        	l16si	a5, a10, 0
400e278f:	006106        	j	400e2917 <_vfprintf_r+0x9db>
400e2792:	10c182        	addi	a8, a1, 16
400e2795:	471b      	addi.n	a4, a7, 1
400e2797:	b02280        	addx8	a2, a2, a8
400e279a:	722767        	blt	a7, a6, 400e2810 <_vfprintf_r+0x8d4>
400e279d:	f21c      	movi.n	a2, 31
400e279f:	412267        	blt	a2, a6, 400e27e4 <_vfprintf_r+0x8a8>
400e27a2:	261b      	addi.n	a2, a6, 1
400e27a4:	10c192        	addi	a9, a1, 16
400e27a7:	976122        	s32i	a2, a1, 0x25c
400e27aa:	02d922        	addmi	a2, a9, 0x200
400e27ad:	1a2232        	l32i	a3, a2, 104
400e27b0:	851c      	movi.n	a5, 24
400e27b2:	734b      	addi.n	a7, a3, 4
400e27b4:	1a6272        	s32i	a7, a2, 104
400e27b7:	052577        	blt	a5, a7, 400e27c0 <_vfprintf_r+0x884>
400e27ba:	192222        	l32i	a2, a2, 100
400e27bd:	000286        	j	400e27cb <_vfprintf_r+0x88f>
400e27c0:	042537        	blt	a5, a3, 400e27c8 <_vfprintf_r+0x88c>
400e27c3:	432c      	movi.n	a3, 36
400e27c5:	1a6232        	s32i	a3, a2, 104
400e27c8:	9c2122        	l32i	a2, a1, 0x270
400e27cb:	9e2132        	l32i	a3, a1, 0x278
400e27ce:	10c1a2        	addi	a10, a1, 16
400e27d1:	323a      	add.n	a3, a2, a3
400e27d3:	fcc332        	addi	a3, a3, -4
400e27d6:	0358      	l32i.n	a5, a3, 0
400e27d8:	b026a0        	addx8	a2, a6, a10
400e27db:	0259      	s32i.n	a5, a2, 0
400e27dd:	235580        	sext	a5, a5, 15
400e27e0:	006d86        	j	400e299a <_vfprintf_r+0xa5e>
400e27e3:	c1e200        	mul16u	a14, a2, a0
400e27e6:	de2210        	f64iter	a2, a2, a1, 1, 1
400e27e9:	223202        	lsi	f0, a2, 136
400e27ec:	1c1a      	add.n	a1, a12, a1
400e27ee:	634b85        	call0	40145ca8 <_etext+0x597d7>
400e27f1:	1a6262        	s32i	a6, a2, 104
400e27f4:	052567        	blt	a5, a6, 400e27fd <_vfprintf_r+0x8c1>
400e27f7:	192232        	l32i	a3, a2, 100
400e27fa:	000286        	j	400e2808 <_vfprintf_r+0x8cc>
400e27fd:	042537        	blt	a5, a3, 400e2805 <_vfprintf_r+0x8c9>
400e2800:	432c      	movi.n	a3, 36
400e2802:	1a6232        	s32i	a3, a2, 104
400e2805:	9c2132        	l32i	a3, a1, 0x270
400e2808:	9e2122        	l32i	a2, a1, 0x278
400e280b:	232a      	add.n	a2, a3, a2
400e280d:	fcc222        	addi	a2, a2, -4
400e2810:	009252        	l16si	a5, a2, 0
400e2813:	0060c6        	j	400e299a <_vfprintf_r+0xa5e>
400e2816:	620000        	lsi	f0, a0, 0x188
400e2819:	32a021        	l32r	a2, 400af29c <_iram_end+0x21748>
400e281c:	979721        	l32r	a2, 400c8678 <_rtc_text_end+0x8678>
400e281f:	0602e6        	bgei	a2, -1, 400e2829 <_vfprintf_r+0x8ed>
400e2822:	bc0030        	lsi	f3, a0, 0x2f0
400e2825:	a23754        	lsi	f5, a7, 0x288
400e2828:	820b      	addi.n	a8, a2, -1
400e282a:	8010c1        	l32r	a12, 400c286c <_rtc_text_end+0x286c>
400e282d:	52b022        	l32ai	a2, a0, 0x148
400e2830:	860002        	l8ui	a0, a0, 134
400e2833:	0008      	l32i.n	a0, a0, 0
400e2835:	10c192        	addi	a9, a1, 16
400e2838:	48a232        	movi	a3, 0x248
400e283b:	393a      	add.n	a3, a9, a3
400e283d:	4ca2d2        	movi	a13, 0x24c
400e2840:	60a2c2        	movi	a12, 0x260
400e2843:	05bd      	mov.n	a11, a5
400e2845:	0139      	s32i.n	a3, a1, 0
400e2847:	01d9f2        	addmi	a15, a9, 0x100
400e284a:	09ed      	mov.n	a14, a9
400e284c:	d9da      	add.n	a13, a9, a13
400e284e:	c9ca      	add.n	a12, a9, a12
400e2850:	02ad      	mov.n	a10, a2
400e2852:	ff26a5        	call8	400e1abc <get_arg$isra$0>
400e2855:	000a52        	l8ui	a5, a10, 0
400e2858:	074d      	mov.n	a4, a7
400e285a:	002046        	j	400e28df <_vfprintf_r+0x9a3>
400e285d:	10c1a2        	addi	a10, a1, 16
400e2860:	471b      	addi.n	a4, a7, 1
400e2862:	b022a0        	addx8	a2, a2, a10
400e2865:	732737        	blt	a7, a3, 400e28dc <_vfprintf_r+0x9a0>
400e2868:	f21c      	movi.n	a2, 31
400e286a:	422237        	blt	a2, a3, 400e28b0 <_vfprintf_r+0x974>
400e286d:	231b      	addi.n	a2, a3, 1
400e286f:	10c1e2        	addi	a14, a1, 16
400e2872:	976122        	s32i	a2, a1, 0x25c
400e2875:	02de22        	addmi	a2, a14, 0x200
400e2878:	1a2252        	l32i	a5, a2, 104
400e287b:	861c      	movi.n	a6, 24
400e287d:	754b      	addi.n	a7, a5, 4
400e287f:	1a6272        	s32i	a7, a2, 104
400e2882:	062677        	blt	a6, a7, 400e288c <_vfprintf_r+0x950>
400e2885:	192252        	l32i	a5, a2, 100
400e2888:	0002c6        	j	400e2897 <_vfprintf_r+0x95b>
400e288b:	265700        	lsi	f0, a7, 152
400e288e:	452c04        	lsi	f0, a12, 0x114
400e2891:	1a6252        	s32i	a5, a2, 104
400e2894:	9c2152        	l32i	a5, a1, 0x270
400e2897:	9e2122        	l32i	a2, a1, 0x278
400e289a:	10c162        	addi	a6, a1, 16
400e289d:	252a      	add.n	a2, a5, a2
400e289f:	fcc222        	addi	a2, a2, -4
400e28a2:	0258      	l32i.n	a5, a2, 0
400e28a4:	b02360        	addx8	a2, a3, a6
400e28a7:	0259      	s32i.n	a5, a2, 0
400e28a9:	745050        	extui	a5, a5, 0, 8
400e28ac:	000bc6        	j	400e28df <_vfprintf_r+0x9a3>
400e28af:	c18200        	mul16u	a8, a2, a0
400e28b2:	d82210        	lsi	f1, a2, 0x360
400e28b5:	223202        	lsi	f0, a2, 136
400e28b8:	1c1a      	add.n	a1, a12, a1
400e28ba:	634b85        	call0	40145d74 <_etext+0x598a3>
400e28bd:	1a6262        	s32i	a6, a2, 104
400e28c0:	052567        	blt	a5, a6, 400e28c9 <_vfprintf_r+0x98d>
400e28c3:	192232        	l32i	a3, a2, 100
400e28c6:	000286        	j	400e28d4 <_vfprintf_r+0x998>
400e28c9:	042537        	blt	a5, a3, 400e28d1 <_vfprintf_r+0x995>
400e28cc:	432c      	movi.n	a3, 36
400e28ce:	1a6232        	s32i	a3, a2, 104
400e28d1:	9c2132        	l32i	a3, a1, 0x270
400e28d4:	9e2122        	l32i	a2, a1, 0x278
400e28d7:	232a      	add.n	a2, a3, a2
400e28d9:	fcc222        	addi	a2, a2, -4
400e28dc:	000252        	l8ui	a5, a2, 0
400e28df:	235500        	sext	a5, a5, 7
400e28e2:	002d06        	j	400e299a <_vfprintf_r+0xa5e>
400e28e5:	34bc      	beqz.n	a4, 400e291c <_vfprintf_r+0x9e0>
400e28e7:	0aa237        	bge	a2, a3, 400e28f5 <_vfprintf_r+0x9b9>
400e28ea:	10c192        	addi	a9, a1, 16
400e28ed:	b02290        	addx8	a2, a2, a9
400e28f0:	0258      	l32i.n	a5, a2, 0
400e28f2:	000846        	j	400e2917 <_vfprintf_r+0x9db>
400e28f5:	10c1a2        	addi	a10, a1, 16
400e28f8:	48a232        	movi	a3, 0x248
400e28fb:	3a3a      	add.n	a3, a10, a3
400e28fd:	0139      	s32i.n	a3, a1, 0
400e28ff:	01daf2        	addmi	a15, a10, 0x100
400e2902:	0aed      	mov.n	a14, a10
400e2904:	4ca2d2        	movi	a13, 0x24c
400e2907:	60a2c2        	movi	a12, 0x260
400e290a:	05bd      	mov.n	a11, a5
400e290c:	deda      	add.n	a13, a14, a13
400e290e:	ceca      	add.n	a12, a14, a12
400e2910:	02ad      	mov.n	a10, a2
400e2912:	ff1aa5        	call8	400e1abc <get_arg$isra$0>
400e2915:	0a58      	l32i.n	a5, a10, 0
400e2917:	074d      	mov.n	a4, a7
400e2919:	001f46        	j	400e299a <_vfprintf_r+0xa5e>
400e291c:	10c1e2        	addi	a14, a1, 16
400e291f:	471b      	addi.n	a4, a7, 1
400e2921:	b022e0        	addx8	a2, a2, a14
400e2924:	702737        	blt	a7, a3, 400e2998 <_vfprintf_r+0xa5c>
400e2927:	f21c      	movi.n	a2, 31
400e2929:	3f2237        	blt	a2, a3, 400e296c <_vfprintf_r+0xa30>
400e292c:	231b      	addi.n	a2, a3, 1
400e292e:	10c152        	addi	a5, a1, 16
400e2931:	976122        	s32i	a2, a1, 0x25c
400e2934:	02d522        	addmi	a2, a5, 0x200
400e2937:	1a2252        	l32i	a5, a2, 104
400e293a:	861c      	movi.n	a6, 24
400e293c:	754b      	addi.n	a7, a5, 4
400e293e:	1a6272        	s32i	a7, a2, 104
400e2941:	072677        	blt	a6, a7, 400e294c <_vfprintf_r+0xa10>
400e2944:	192252        	l32i	a5, a2, 100
400e2947:	000306        	j	400e2957 <_vfprintf_r+0xa1b>
400e294a:	570000        	lsi	f0, a0, 0x15c
400e294d:	2c0426        	beqi	a4, -1, 400e297d <_vfprintf_r+0xa41>
400e2950:	625245        	call0	40144e78 <_etext+0x589a7>
400e2953:	521a      	add.n	a5, a2, a1
400e2955:	229c21        	l32r	a2, 400ab3c8 <_iram_end+0x1d874>
400e2958:	629e21        	l32r	a2, 400bb3d0 <_iram_end+0x2d87c>
400e295b:	2a10c1        	l32r	a12, 400ad19c <_iram_end+0x1f648>
400e295e:	c22225        	call8	400a4b80 <_iram_end+0x1702c>
400e2961:	58fc      	bnez.n	a8, 400e299a <_vfprintf_r+0xa5e>
400e2963:	236002        	s32i	a0, a0, 140
400e2966:	0259b0        	andb	b5, b9, b11
400e2969:	000b46        	j	400e299a <_vfprintf_r+0xa5e>
400e296c:	10c182        	addi	a8, a1, 16
400e296f:	02d822        	addmi	a2, a8, 0x200
400e2972:	1a2232        	l32i	a3, a2, 104
400e2975:	851c      	movi.n	a5, 24
400e2977:	634b      	addi.n	a6, a3, 4
400e2979:	1a6262        	s32i	a6, a2, 104
400e297c:	052567        	blt	a5, a6, 400e2985 <_vfprintf_r+0xa49>
400e297f:	192232        	l32i	a3, a2, 100
400e2982:	000286        	j	400e2990 <_vfprintf_r+0xa54>
400e2985:	042537        	blt	a5, a3, 400e298d <_vfprintf_r+0xa51>
400e2988:	432c      	movi.n	a3, 36
400e298a:	1a6232        	s32i	a3, a2, 104
400e298d:	9c2132        	l32i	a3, a1, 0x270
400e2990:	9e2122        	l32i	a2, a1, 0x278
400e2993:	232a      	add.n	a2, a3, a2
400e2995:	fcc222        	addi	a2, a2, -4
400e2998:	0258      	l32i.n	a5, a2, 0
400e299a:	313f50        	srai	a3, a5, 31
400e299d:	047d      	mov.n	a7, a4
400e299f:	120c      	movi.n	a2, 1
400e29a1:	002396        	bltz	a3, 400e29a7 <_vfprintf_r+0xa6b>
400e29a4:	062606        	j	400e4240 <_vfprintf_r+0x2304>
400e29a7:	605050        	neg	a5, a5
400e29aa:	080c      	movi.n	a8, 0
400e29ac:	938250        	movnez	a8, a2, a5
400e29af:	603030        	neg	a3, a3
400e29b2:	10c192        	addi	a9, a1, 16
400e29b5:	c03380        	sub	a3, a3, a8
400e29b8:	d62c      	movi.n	a6, 45
400e29ba:	02d942        	addmi	a4, a9, 0x200
400e29bd:	061f06        	j	400e423d <_vfprintf_r+0x2301>
400e29c0:	a02162        	l32i	a6, a1, 0x280
400e29c3:	972132        	l32i	a3, a1, 0x25c
400e29c6:	0e6637        	bbci	a6, 3, 400e29d8 <_vfprintf_r+0xa9c>
400e29c9:	053416        	beqz	a4, 400e2a20 <_vfprintf_r+0xae4>
400e29cc:	21a237        	bge	a2, a3, 400e29f1 <_vfprintf_r+0xab5>
400e29cf:	10c182        	addi	a8, a1, 16
400e29d2:	b02280        	addx8	a2, a2, a8
400e29d5:	0002c6        	j	400e29e4 <_vfprintf_r+0xaa8>
400e29d8:	044416        	beqz	a4, 400e2a20 <_vfprintf_r+0xae4>
400e29db:	12a237        	bge	a2, a3, 400e29f1 <_vfprintf_r+0xab5>
400e29de:	10c192        	addi	a9, a1, 16
400e29e1:	b02290        	addx8	a2, a2, a9
400e29e4:	0248      	l32i.n	a4, a2, 0
400e29e6:	1258      	l32i.n	a5, a2, 4
400e29e8:	aa6142        	s32i	a4, a1, 0x2a8
400e29eb:	ab6152        	s32i	a5, a1, 0x2ac
400e29ee:	003586        	j	400e2ac8 <_vfprintf_r+0xb8c>
400e29f1:	10c162        	addi	a6, a1, 16
400e29f4:	48a232        	movi	a3, 0x248
400e29f7:	363a      	add.n	a3, a6, a3
400e29f9:	4ca2d2        	movi	a13, 0x24c
400e29fc:	60a2c2        	movi	a12, 0x260
400e29ff:	0139      	s32i.n	a3, a1, 0
400e2a01:	01d6f2        	addmi	a15, a6, 0x100
400e2a04:	06ed      	mov.n	a14, a6
400e2a06:	d6da      	add.n	a13, a6, a13
400e2a08:	c6ca      	add.n	a12, a6, a12
400e2a0a:	05bd      	mov.n	a11, a5
400e2a0c:	02ad      	mov.n	a10, a2
400e2a0e:	ff0ae5        	call8	400e1abc <get_arg$isra$0>
400e2a11:	0a88      	l32i.n	a8, a10, 0
400e2a13:	1a98      	l32i.n	a9, a10, 4
400e2a15:	aa6182        	s32i	a8, a1, 0x2a8
400e2a18:	ab6192        	s32i	a9, a1, 0x2ac
400e2a1b:	002a46        	j	400e2ac8 <_vfprintf_r+0xb8c>
400e2a1e:	920000        	lsi	f0, a0, 0x248
400e2a21:	1b10c1        	l32r	a12, 400a9664 <_iram_end+0x1bb10>
400e2a24:	229047        	bne	a0, a4, 400e2a4a <_vfprintf_r+0xb0e>
400e2a27:	a737b0        	lsi	f11, a7, 0x29c
400e2a2a:	234602        	s8i	a0, a6, 35
400e2a2d:	f21c00        	rems	a1, a12, a0
400e2a30:	542237        	blt	a2, a3, 400e2a88 <_vfprintf_r+0xb4c>
400e2a33:	231b      	addi.n	a2, a3, 1
400e2a35:	10c192        	addi	a9, a1, 16
400e2a38:	976122        	s32i	a2, a1, 0x25c
400e2a3b:	02d922        	addmi	a2, a9, 0x200
400e2a3e:	1a2252        	l32i	a5, a2, 104
400e2a41:	657b      	addi.n	a6, a5, 7
400e2a43:	857c      	movi.n	a5, -8
400e2a45:	105650        	and	a5, a6, a5
400e2a48:	758b      	addi.n	a7, a5, 8
400e2a4a:	1a6272        	s32i	a7, a2, 104
400e2a4d:	861c      	movi.n	a6, 24
400e2a4f:	052677        	blt	a6, a7, 400e2a58 <_vfprintf_r+0xb1c>
400e2a52:	192252        	l32i	a5, a2, 100
400e2a55:	000286        	j	400e2a63 <_vfprintf_r+0xb27>
400e2a58:	042657        	blt	a6, a5, 400e2a60 <_vfprintf_r+0xb24>
400e2a5b:	852c      	movi.n	a5, 40
400e2a5d:	1a6252        	s32i	a5, a2, 104
400e2a60:	9c2152        	l32i	a5, a1, 0x270
400e2a63:	9e2122        	l32i	a2, a1, 0x278
400e2a66:	252a      	add.n	a2, a5, a2
400e2a68:	f8c222        	addi	a2, a2, -8
400e2a6b:	0288      	l32i.n	a8, a2, 0
400e2a6d:	1298      	l32i.n	a9, a2, 4
400e2a6f:	aa6182        	s32i	a8, a1, 0x2a8
400e2a72:	ab6192        	s32i	a9, a1, 0x2ac
400e2a75:	10c192        	addi	a9, a1, 16
400e2a78:	b02390        	addx8	a2, a3, a9
400e2a7b:	aa2182        	l32i	a8, a1, 0x2a8
400e2a7e:	ab2192        	l32i	a9, a1, 0x2ac
400e2a81:	0289      	s32i.n	a8, a2, 0
400e2a83:	1299      	s32i.n	a9, a2, 4
400e2a85:	000f46        	j	400e2ac6 <_vfprintf_r+0xb8a>
400e2a88:	10c192        	addi	a9, a1, 16
400e2a8b:	02d922        	addmi	a2, a9, 0x200
400e2a8e:	1a2232        	l32i	a3, a2, 104
400e2a91:	537b      	addi.n	a5, a3, 7
400e2a93:	837c      	movi.n	a3, -8
400e2a95:	103530        	and	a3, a5, a3
400e2a98:	638b      	addi.n	a6, a3, 8
400e2a9a:	1a6262        	s32i	a6, a2, 104
400e2a9d:	851c      	movi.n	a5, 24
400e2a9f:	052567        	blt	a5, a6, 400e2aa8 <_vfprintf_r+0xb6c>
400e2aa2:	192232        	l32i	a3, a2, 100
400e2aa5:	0002c6        	j	400e2ab4 <_vfprintf_r+0xb78>
400e2aa8:	052537        	blt	a5, a3, 400e2ab1 <_vfprintf_r+0xb75>
400e2aab:	28a032        	movi	a3, 40
400e2aae:	1a6232        	s32i	a3, a2, 104
400e2ab1:	9c2132        	l32i	a3, a1, 0x270
400e2ab4:	9e2122        	l32i	a2, a1, 0x278
400e2ab7:	232a      	add.n	a2, a3, a2
400e2ab9:	f8c222        	addi	a2, a2, -8
400e2abc:	0288      	l32i.n	a8, a2, 0
400e2abe:	1298      	l32i.n	a9, a2, 4
400e2ac0:	aa6182        	s32i	a8, a1, 0x2a8
400e2ac3:	ab6192        	s32i	a9, a1, 0x2ac
400e2ac6:	047d      	mov.n	a7, a4
400e2ac8:	aa21a2        	l32i	a10, a1, 0x2a8
400e2acb:	ab21b2        	l32i	a11, a1, 0x2ac
400e2ace:	f7fb25        	call8	400daa80 <__fpclassifyd>
400e2ad1:	341a66        	bnei	a10, 1, 400e2b09 <_vfprintf_r+0xbcd>
400e2ad4:	b562c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2ad7:	b561d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e2ada:	aa21a2        	l32i	a10, a1, 0x2a8
400e2add:	ab21b2        	l32i	a11, a1, 0x2ac
400e2ae0:	b72a81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e2ae3:	0008e0        	callx8	a8
400e2ae6:	00aad6        	bgez	a10, 400e2af4 <_vfprintf_r+0xbb8>
400e2ae9:	10c192        	addi	a9, a1, 16
400e2aec:	d32c      	movi.n	a3, 45
400e2aee:	02d922        	addmi	a2, a9, 0x200
400e2af1:	524232        	s8i	a3, a2, 82
400e2af4:	b73e21        	l32r	a2, 400d07ec <_flash_cache_start+0x7d4>
400e2af7:	a62132        	l32i	a3, a1, 0x298
400e2afa:	a16122        	s32i	a2, a1, 0x284
400e2afd:	724c      	movi.n	a2, 71
400e2aff:	b73a41        	l32r	a4, 400d07e8 <_flash_cache_start+0x7d0>
400e2b02:	1fa237        	bge	a2, a3, 400e2b25 <_vfprintf_r+0xbe9>
400e2b05:	0007c6        	j	400e2b28 <_vfprintf_r+0xbec>
400e2b08:	21a200        	srai	a10, a0, 2
400e2b0b:	b2aa      	add.n	a11, a2, a10
400e2b0d:	25ab21        	l32r	a2, 400ac1bc <_iram_end+0x1e668>
400e2b10:	ecf7f7        	bbsi	a7, 31, 400e2b00 <_vfprintf_r+0xbc4>
400e2b13:	91ba      	add.n	a9, a1, a11
400e2b15:	b738      	l32i.n	a3, a7, 44
400e2b17:	a62132        	l32i	a3, a1, 0x298
400e2b1a:	a16192        	s32i	a9, a1, 0x284
400e2b1d:	724c      	movi.n	a2, 71
400e2b1f:	052237        	blt	a2, a3, 400e2b28 <_vfprintf_r+0xbec>
400e2b22:	b73341        	l32r	a4, 400d07f0 <_flash_cache_start+0x7d8>
400e2b25:	a16142        	s32i	a4, a1, 0x284
400e2b28:	a02152        	l32i	a5, a1, 0x280
400e2b2b:	7faf22        	movi	a2, -129
400e2b2e:	105520        	and	a5, a5, a2
400e2b31:	060c      	movi.n	a6, 0
400e2b33:	380c      	movi.n	a8, 3
400e2b35:	a06152        	s32i	a5, a1, 0x280
400e2b38:	a46162        	s32i	a6, a1, 0x290
400e2b3b:	a56182        	s32i	a8, a1, 0x294
400e2b3e:	064806        	j	400e4462 <_vfprintf_r+0x2526>
400e2b41:	a62192        	l32i	a9, a1, 0x298
400e2b44:	dfaf22        	movi	a2, -33
400e2b47:	102920        	and	a2, a9, a2
400e2b4a:	a96122        	s32i	a2, a1, 0x2a4
400e2b4d:	a92132        	l32i	a3, a1, 0x2a4
400e2b50:	41a022        	movi	a2, 65
400e2b53:	4d9327        	bne	a3, a2, 400e2ba4 <_vfprintf_r+0xc68>
400e2b56:	10c142        	addi	a4, a1, 16
400e2b59:	02d422        	addmi	a2, a4, 0x200
400e2b5c:	30a032        	movi	a3, 48
400e2b5f:	504232        	s8i	a3, a2, 80
400e2b62:	58a052        	movi	a5, 88
400e2b65:	9fc942        	addi	a4, a9, -97
400e2b68:	78a032        	movi	a3, 120
400e2b6b:	933540        	movnez	a3, a5, a4
400e2b6e:	a02152        	l32i	a5, a1, 0x280
400e2b71:	514232        	s8i	a3, a2, 81
400e2b74:	220c      	movi.n	a2, 2
400e2b76:	205520        	or	a5, a5, a2
400e2b79:	a52162        	l32i	a6, a1, 0x294
400e2b7c:	a06152        	s32i	a5, a1, 0x280
400e2b7f:	63a022        	movi	a2, 99
400e2b82:	3aa267        	bge	a2, a6, 400e2bc0 <_vfprintf_r+0xc84>
400e2b85:	a321a2        	l32i	a10, a1, 0x28c
400e2b88:	b61b      	addi.n	a11, a6, 1
400e2b8a:	a1cfe5        	call8	40084888 <_malloc_r>
400e2b8d:	a161a2        	s32i	a10, a1, 0x284
400e2b90:	040a56        	bnez	a10, 400e2bd4 <_vfprintf_r+0xc98>
400e2b93:	a22182        	l32i	a8, a1, 0x288
400e2b96:	024c      	movi.n	a2, 64
400e2b98:	061832        	l16ui	a3, a8, 12
400e2b9b:	202320        	or	a2, a3, a2
400e2b9e:	065822        	s16i	a2, a8, 12
400e2ba1:	095506        	j	400e50f9 <_vfprintf_r+0x31bd>
400e2ba4:	a52192        	l32i	a9, a1, 0x294
400e2ba7:	0a0c      	movi.n	a10, 0
400e2ba9:	300926        	beqi	a9, -1, 400e2bdd <_vfprintf_r+0xca1>
400e2bac:	0899a7        	bne	a9, a10, 400e2bb8 <_vfprintf_r+0xc7c>
400e2baf:	a92132        	l32i	a3, a1, 0x2a4
400e2bb2:	b9c322        	addi	a2, a3, -71
400e2bb5:	2f12a7        	beq	a2, a10, 400e2be8 <_vfprintf_r+0xcac>
400e2bb8:	040c      	movi.n	a4, 0
400e2bba:	a46142        	s32i	a4, a1, 0x290
400e2bbd:	000bc6        	j	400e2bf0 <_vfprintf_r+0xcb4>
400e2bc0:	80a142        	movi	a4, 0x180
400e2bc3:	10c182        	addi	a8, a1, 16
400e2bc6:	050c      	movi.n	a5, 0
400e2bc8:	884a      	add.n	a8, a8, a4
400e2bca:	a46152        	s32i	a5, a1, 0x290
400e2bcd:	a16182        	s32i	a8, a1, 0x284
400e2bd0:	000706        	j	400e2bf0 <_vfprintf_r+0xcb4>
400e2bd3:	219200        	srai	a9, a0, 2
400e2bd6:	6192a1        	l32r	a10, 400bb220 <_iram_end+0x2d6cc>
400e2bd9:	0486a4        	lsi	f10, a6, 16
400e2bdc:	620c00        	lsi	f0, a12, 0x188
400e2bdf:	a461a2        	s32i	a10, a1, 0x290
400e2be2:	a56122        	s32i	a2, a1, 0x294
400e2be5:	0001c6        	j	400e2bf0 <_vfprintf_r+0xcb4>
400e2be8:	130c      	movi.n	a3, 1
400e2bea:	a461a2        	s32i	a10, a1, 0x290
400e2bed:	a56132        	s32i	a3, a1, 0x294
400e2bf0:	a02142        	l32i	a4, a1, 0x280
400e2bf3:	00a122        	movi	a2, 0x100
400e2bf6:	202420        	or	a2, a4, a2
400e2bf9:	b26122        	s32i	a2, a1, 0x2c8
400e2bfc:	ab2122        	l32i	a2, a1, 0x2ac
400e2bff:	aa2132        	l32i	a3, a1, 0x2a8
400e2c02:	0102d6        	bgez	a2, 400e2c16 <_vfprintf_r+0xcda>
400e2c05:	b51d21        	l32r	a2, 400d007c <_flash_cache_start+0x64>
400e2c08:	ab2152        	l32i	a5, a1, 0x2ac
400e2c0b:	d62c      	movi.n	a6, 45
400e2c0d:	302520        	xor	a2, a5, a2
400e2c10:	b66162        	s32i	a6, a1, 0x2d8
400e2c13:	000106        	j	400e2c1b <_vfprintf_r+0xcdf>
400e2c16:	080c      	movi.n	a8, 0
400e2c18:	b66182        	s32i	a8, a1, 0x2d8
400e2c1b:	a92192        	l32i	a9, a1, 0x2a4
400e2c1e:	144c      	movi.n	a4, 65
400e2c20:	021947        	beq	a9, a4, 400e2c26 <_vfprintf_r+0xcea>
400e2c23:	005246        	j	400e2d70 <_vfprintf_r+0xe34>
400e2c26:	10c1a2        	addi	a10, a1, 16
400e2c29:	44a2c2        	movi	a12, 0x244
400e2c2c:	caca      	add.n	a12, a10, a12
400e2c2e:	02bd      	mov.n	a11, a2
400e2c30:	03ad      	mov.n	a10, a3
400e2c32:	033fe5        	call8	400e6030 <frexp>
400e2c35:	b509c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2c38:	b6cbd1        	l32r	a13, 400d0764 <_flash_cache_start+0x74c>
400e2c3b:	b50781        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e2c3e:	0008e0        	callx8	a8
400e2c41:	b506c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2c44:	b506d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e2c47:	0a4d      	mov.n	a4, a10
400e2c49:	205bb0        	or	a5, a11, a11
400e2c4c:	b6d081        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e2c4f:	0008e0        	callx8	a8
400e2c52:	3acc      	bnez.n	a10, 400e2c59 <_vfprintf_r+0xd1d>
400e2c54:	120c      	movi.n	a2, 1
400e2c56:	956122        	s32i	a2, a1, 0x254
400e2c59:	a62132        	l32i	a3, a1, 0x298
400e2c5c:	b6e861        	l32r	a6, 400d07fc <_flash_cache_start+0x7e4>
400e2c5f:	9fc322        	addi	a2, a3, -97
400e2c62:	b6e581        	l32r	a8, 400d07f8 <_flash_cache_start+0x7e0>
400e2c65:	023d      	mov.n	a3, a2
400e2c67:	062d      	mov.n	a2, a6
400e2c69:	a52162        	l32i	a6, a1, 0x294
400e2c6c:	832830        	moveqz	a2, a8, a3
400e2c6f:	a12182        	l32i	a8, a1, 0x284
400e2c72:	960b      	addi.n	a9, a6, -1
400e2c74:	b4fac1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2c77:	b6bcd1        	l32r	a13, 400d0768 <_flash_cache_start+0x750>
400e2c7a:	20a440        	or	a10, a4, a4
400e2c7d:	20b550        	or	a11, a5, a5
400e2c80:	b86182        	s32i	a8, a1, 0x2e0
400e2c83:	b76192        	s32i	a9, a1, 0x2dc
400e2c86:	b4f481        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e2c89:	0008e0        	callx8	a8
400e2c8c:	0b5d      	mov.n	a5, a11
400e2c8e:	0a4d      	mov.n	a4, a10
400e2c90:	b6c081        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e2c93:	0008e0        	callx8	a8
400e2c96:	0a3d      	mov.n	a3, a10
400e2c98:	b6bf81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e2c9b:	0008e0        	callx8	a8
400e2c9e:	0acd      	mov.n	a12, a10
400e2ca0:	0bdd      	mov.n	a13, a11
400e2ca2:	04ad      	mov.n	a10, a4
400e2ca4:	05bd      	mov.n	a11, a5
400e2ca6:	b6bc81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e2ca9:	0008e0        	callx8	a8
400e2cac:	b82182        	l32i	a8, a1, 0x2e0
400e2caf:	0a4d      	mov.n	a4, a10
400e2cb1:	a23a      	add.n	a10, a2, a3
400e2cb3:	881b      	addi.n	a8, a8, 1
400e2cb5:	000aa2        	l8ui	a10, a10, 0
400e2cb8:	680b      	addi.n	a6, a8, -1
400e2cba:	0046a2        	s8i	a10, a6, 0
400e2cbd:	b72192        	l32i	a9, a1, 0x2dc
400e2cc0:	0b5d      	mov.n	a5, a11
400e2cc2:	096d      	mov.n	a6, a9
400e2cc4:	1e0926        	beqi	a9, -1, 400e2ce6 <_vfprintf_r+0xdaa>
400e2cc7:	b4e5c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2cca:	b4e4d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e2ccd:	990b      	addi.n	a9, a9, -1
400e2ccf:	04ad      	mov.n	a10, a4
400e2cd1:	b86182        	s32i	a8, a1, 0x2e0
400e2cd4:	b76192        	s32i	a9, a1, 0x2dc
400e2cd7:	b6b181        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e2cda:	0008e0        	callx8	a8
400e2cdd:	b82182        	l32i	a8, a1, 0x2e0
400e2ce0:	b72192        	l32i	a9, a1, 0x2dc
400e2ce3:	f8da56        	bnez	a10, 400e2c74 <_vfprintf_r+0xd38>
400e2ce6:	b4ddc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2ce9:	b6a0d1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400e2cec:	04ad      	mov.n	a10, a4
400e2cee:	05bd      	mov.n	a11, a5
400e2cf0:	b86182        	s32i	a8, a1, 0x2e0
400e2cf3:	b6ab81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e2cf6:	0008e0        	callx8	a8
400e2cf9:	b82182        	l32i	a8, a1, 0x2e0
400e2cfc:	201ae6        	bgei	a10, 1, 400e2d20 <_vfprintf_r+0xde4>
400e2cff:	b4d7c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2d02:	b69ad1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400e2d05:	04ad      	mov.n	a10, a4
400e2d07:	20b550        	or	a11, a5, a5
400e2d0a:	b6a081        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e2d0d:	0008e0        	callx8	a8
400e2d10:	b82182        	l32i	a8, a1, 0x2e0
400e2d13:	1acc      	bnez.n	a10, 400e2d18 <_vfprintf_r+0xddc>
400e2d15:	07e307        	bbsi	a3, 0, 400e2d20 <_vfprintf_r+0xde4>
400e2d18:	082d      	mov.n	a2, a8
400e2d1a:	053c      	movi.n	a5, 48
400e2d1c:	000e46        	j	400e2d59 <_vfprintf_r+0xe1d>
400e2d1f:	618200        	lsi	f0, a2, 0x184
400e2d22:	024290        	andb	b4, b2, b9
400e2d25:	0f          	.byte 0xf
400e2d26:	063c      	movi.n	a6, 48
400e2d28:	0000c6        	j	400e2d2f <_vfprintf_r+0xdf3>
400e2d2b:	436200        	min	a6, a2, a0
400e2d2e:	213200        	srai	a3, a0, 2
400e2d31:	330b90        	clamps	a0, a11, 16
400e2d34:	906132        	s32i	a3, a1, 0x240
400e2d37:	000352        	l8ui	a5, a3, 0
400e2d3a:	ee1547        	beq	a5, a4, 400e2d2c <_vfprintf_r+0xdf0>
400e2d3d:	01c542        	addi	a4, a5, 1
400e2d40:	39a062        	movi	a6, 57
400e2d43:	744040        	extui	a4, a4, 0, 8
400e2d46:	029567        	bne	a5, a6, 400e2d4c <_vfprintf_r+0xe10>
400e2d49:	0a0242        	l8ui	a4, a2, 10
400e2d4c:	004342        	s8i	a4, a3, 0
400e2d4f:	084d      	mov.n	a4, a8
400e2d51:	000386        	j	400e2d63 <_vfprintf_r+0xe27>
400e2d54:	004252        	s8i	a5, a2, 0
400e2d57:	221b      	addi.n	a2, a2, 1
400e2d59:	c03620        	sub	a3, a6, a2
400e2d5c:	383a      	add.n	a3, a8, a3
400e2d5e:	024d      	mov.n	a4, a2
400e2d60:	ff03d6        	bgez	a3, 400e2d54 <_vfprintf_r+0xe18>
400e2d63:	a12182        	l32i	a8, a1, 0x284
400e2d66:	c04480        	sub	a4, a4, a8
400e2d69:	a76142        	s32i	a4, a1, 0x29c
400e2d6c:	002dc6        	j	400e2e27 <_vfprintf_r+0xeeb>
400e2d6f:	219200        	srai	a9, a0, 2
400e2d72:	4ca9      	s32i.n	a10, a12, 16
400e2d74:	214265        	call8	4010419c <_etext+0x17ccb>
400e2d77:	3e0ca5        	call8	40120e40 <_etext+0x3496f>
400e2d7a:	0a1957        	beq	a9, a5, 400e2d88 <_vfprintf_r+0xe4c>
400e2d7d:	45a052        	movi	a5, 69
400e2d80:	2e0c      	movi.n	a14, 2
400e2d82:	029957        	bne	a9, a5, 400e2d88 <_vfprintf_r+0xe4c>
400e2d85:	01c442        	addi	a4, a4, 1
400e2d88:	40a2a2        	movi	a10, 0x240
400e2d8b:	8051a0        	add	a5, a1, a10
400e2d8e:	50a262        	movi	a6, 0x250
400e2d91:	026152        	s32i	a5, a1, 8
400e2d94:	54a282        	movi	a8, 0x254
400e2d97:	805160        	add	a5, a1, a6
400e2d9a:	1159      	s32i.n	a5, a1, 4
400e2d9c:	a321a2        	l32i	a10, a1, 0x28c
400e2d9f:	518a      	add.n	a5, a1, a8
400e2da1:	0159      	s32i.n	a5, a1, 0
400e2da3:	04fd      	mov.n	a15, a4
400e2da5:	03cd      	mov.n	a12, a3
400e2da7:	02dd      	mov.n	a13, a2
400e2da9:	026365        	call8	400e53e0 <_dtoa_r>
400e2dac:	a92192        	l32i	a9, a1, 0x2a4
400e2daf:	a161a2        	s32i	a10, a1, 0x284
400e2db2:	754c      	movi.n	a5, 71
400e2db4:	059957        	bne	a9, a5, 400e2dbd <_vfprintf_r+0xe81>
400e2db7:	a02152        	l32i	a5, a1, 0x280
400e2dba:	5d6507        	bbci	a5, 0, 400e2e1b <_vfprintf_r+0xedf>
400e2dbd:	a12182        	l32i	a8, a1, 0x284
400e2dc0:	a92192        	l32i	a9, a1, 0x2a4
400e2dc3:	664c      	movi.n	a6, 70
400e2dc5:	584a      	add.n	a5, a8, a4
400e2dc7:	269967        	bne	a9, a6, 400e2df1 <_vfprintf_r+0xeb5>
400e2dca:	000862        	l8ui	a6, a8, 0
400e2dcd:	d0c662        	addi	a6, a6, -48
400e2dd0:	86dc      	bnez.n	a6, 400e2dec <_vfprintf_r+0xeb0>
400e2dd2:	b4a2c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2dd5:	b4a1d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e2dd8:	03ad      	mov.n	a10, a3
400e2dda:	02bd      	mov.n	a11, a2
400e2ddc:	b67081        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e2ddf:	0008e0        	callx8	a8
400e2de2:	6a8c      	beqz.n	a10, 400e2dec <_vfprintf_r+0xeb0>
400e2de4:	160c      	movi.n	a6, 1
400e2de6:	c04640        	sub	a4, a6, a4
400e2de9:	956142        	s32i	a4, a1, 0x254
400e2dec:	952142        	l32i	a4, a1, 0x254
400e2def:	554a      	add.n	a5, a5, a4
400e2df1:	b49ac1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e2df4:	b49ad1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e2df7:	03ad      	mov.n	a10, a3
400e2df9:	02bd      	mov.n	a11, a2
400e2dfb:	b66481        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e2dfe:	0008e0        	callx8	a8
400e2e01:	033c      	movi.n	a3, 48
400e2e03:	eacc      	bnez.n	a10, 400e2e15 <_vfprintf_r+0xed9>
400e2e05:	906152        	s32i	a5, a1, 0x240
400e2e08:	0003c6        	j	400e2e1b <_vfprintf_r+0xedf>
400e2e0b:	1b0000        	un.s	b0, f0, f0
400e2e0e:	614242        	s8i	a4, a2, 97
400e2e11:	423290        	xorb	b3, b2, b9
400e2e14:	212200        	srai	a2, a0, 2
400e2e17:	325790        	orbc	b5, b7, b9
400e2e1a:	2122f1        	l32r	a15, 400ab2a4 <_iram_end+0x1d750>
400e2e1d:	213290        	srai	a3, a9, 2
400e2e20:	2230a1        	l32r	a10, 400ab6e0 <_iram_end+0x1db8c>
400e2e23:	6122c0        	xsr.m2	a12
400e2e26:	2142a7        	ball	a2, a10, 400e2e4b <_vfprintf_r+0xf0f>
400e2e29:	4ca9      	s32i.n	a10, a12, 16
400e2e2b:	942772        	l32i	a7, a7, 0x250
400e2e2e:	221c      	movi.n	a2, 18
400e2e30:	7c9521        	l32r	a2, 400c2084 <_rtc_text_end+0x2084>
400e2e33:	2237d3        	lsi	f13, a7, 136
400e2e36:	5208      	l32i.n	a0, a2, 20
400e2e38:	27a521        	l32r	a2, 400acccc <_iram_end+0x1f178>
400e2e3b:	c60225        	call8	400a8e5c <_iram_end+0x1b308>
400e2e3e:	5e          	.byte 0x5e
400e2e3f:	216200        	srai	a6, a0, 2
400e2e42:	c662a6        	blti	a2, 6, 400e2e0c <_vfprintf_r+0xed0>
400e2e45:	fe          	.byte 0xfe
400e2e46:	a66162        	s32i	a6, a1, 0x298
400e2e49:	0004c6        	j	400e2e60 <_vfprintf_r+0xf24>
400e2e4c:	a62182        	l32i	a8, a1, 0x298
400e2e4f:	624c      	movi.n	a2, 70
400e2e51:	029827        	bne	a8, a2, 400e2e57 <_vfprintf_r+0xf1b>
400e2e54:	004646        	j	400e2f71 <_vfprintf_r+0x1035>
400e2e57:	65a022        	movi	a2, 101
400e2e5a:	02a287        	bge	a2, a8, 400e2e60 <_vfprintf_r+0xf24>
400e2e5d:	0041c6        	j	400e2f68 <_vfprintf_r+0x102c>
400e2e60:	952122        	l32i	a2, a1, 0x254
400e2e63:	a62192        	l32i	a9, a1, 0x298
400e2e66:	220b      	addi.n	a2, a2, -1
400e2e68:	dfaf42        	movi	a4, -33
400e2e6b:	956122        	s32i	a2, a1, 0x254
400e2e6e:	104940        	and	a4, a9, a4
400e2e71:	41a052        	movi	a5, 65
400e2e74:	743090        	extui	a3, a9, 0, 8
400e2e77:	059457        	bne	a4, a5, 400e2e80 <_vfprintf_r+0xf44>
400e2e7a:	0fc932        	addi	a3, a9, 15
400e2e7d:	743030        	extui	a3, a3, 0, 8
400e2e80:	10c1a2        	addi	a10, a1, 16
400e2e83:	02da52        	addmi	a5, a10, 0x200
400e2e86:	374532        	s8i	a3, a5, 55
400e2e89:	b32c      	movi.n	a3, 43
400e2e8b:	00a2d6        	bgez	a2, 400e2e99 <_vfprintf_r+0xf5d>
400e2e8e:	602020        	neg	a2, a2
400e2e91:	d32c      	movi.n	a3, 45
400e2e93:	000086        	j	400e2e99 <_vfprintf_r+0xf5d>
400e2e96:	000000        	ill
400e2e99:	384532        	s8i	a3, a5, 56
400e2e9c:	950c      	movi.n	a5, 9
400e2e9e:	5ea527        	bge	a5, a2, 400e2f00 <_vfprintf_r+0xfc4>
400e2ea1:	37a232        	movi	a3, 0x237
400e2ea4:	10c1e2        	addi	a14, a1, 16
400e2ea7:	b63261        	l32r	a6, 400d0770 <_flash_cache_start+0x758>
400e2eaa:	3e3a      	add.n	a3, a14, a3
400e2eac:	b24260        	mulsh	a4, a2, a6
400e2eaf:	318f20        	srai	a8, a2, 31
400e2eb2:	214240        	srai	a4, a4, 2
400e2eb5:	c04480        	sub	a4, a4, a8
400e2eb8:	a08440        	addx4	a8, a4, a4
400e2ebb:	1188f0        	slli	a8, a8, 1
400e2ebe:	c02280        	sub	a2, a2, a8
400e2ec1:	30c222        	addi	a2, a2, 48
400e2ec4:	330b      	addi.n	a3, a3, -1
400e2ec6:	004322        	s8i	a2, a3, 0
400e2ec9:	042d      	mov.n	a2, a4
400e2ecb:	dd2547        	blt	a5, a4, 400e2eac <_vfprintf_r+0xf70>
400e2ece:	330b      	addi.n	a3, a3, -1
400e2ed0:	30c422        	addi	a2, a4, 48
400e2ed3:	004322        	s8i	a2, a3, 0
400e2ed6:	39a242        	movi	a4, 0x239
400e2ed9:	10c122        	addi	a2, a1, 16
400e2edc:	424a      	add.n	a4, a2, a4
400e2ede:	10c152        	addi	a5, a1, 16
400e2ee1:	032d      	mov.n	a2, a3
400e2ee3:	37a232        	movi	a3, 0x237
400e2ee6:	353a      	add.n	a3, a5, a3
400e2ee8:	000286        	j	400e2ef6 <_vfprintf_r+0xfba>
400e2eeb:	025200        	andb	b5, b2, b0
400e2eee:	221b00        	orb	b1, b11, b0
400e2ef1:	004452        	s8i	a5, a4, 0
400e2ef4:	441b      	addi.n	a4, a4, 1
400e2ef6:	045d      	mov.n	a5, a4
400e2ef8:	f03237        	bltu	a2, a3, 400e2eec <_vfprintf_r+0xfb0>
400e2efb:	000986        	j	400e2f25 <_vfprintf_r+0xfe9>
400e2efe:	320000        	orbc	b0, b0, b0
400e2f01:	6239a2        	lsi	f10, a9, 0x188
400e2f04:	4c10c1        	l32r	a12, 400b5f44 <_iram_end+0x283f0>
400e2f07:	363015        	call4	40119208 <_etext+0x2cd37>
400e2f0a:	145780        	extui	a5, a8, 7, 2
400e2f0d:	0e          	.byte 0xe
400e2f0e:	02d632        	addmi	a3, a6, 0x200
400e2f11:	30a042        	movi	a4, 48
400e2f14:	394342        	s8i	a4, a3, 57
400e2f17:	3aa232        	movi	a3, 0x23a
400e2f1a:	803630        	add	a3, a6, a3
400e2f1d:	30c222        	addi	a2, a2, 48
400e2f20:	531b      	addi.n	a5, a3, 1
400e2f22:	004322        	s8i	a2, a3, 0
400e2f25:	47a282        	movi	a8, 0x247
400e2f28:	218a      	add.n	a2, a1, a8
400e2f2a:	a72192        	l32i	a9, a1, 0x29c
400e2f2d:	c02520        	sub	a2, a5, a2
400e2f30:	992a      	add.n	a9, a9, a2
400e2f32:	b46122        	s32i	a2, a1, 0x2d0
400e2f35:	a72122        	l32i	a2, a1, 0x29c
400e2f38:	a56192        	s32i	a9, a1, 0x294
400e2f3b:	0522e6        	bgei	a2, 2, 400e2f44 <_vfprintf_r+0x1008>
400e2f3e:	a02132        	l32i	a3, a1, 0x280
400e2f41:	076307        	bbci	a3, 0, 400e2f4c <_vfprintf_r+0x1010>
400e2f44:	a52142        	l32i	a4, a1, 0x294
400e2f47:	441b      	addi.n	a4, a4, 1
400e2f49:	a56142        	s32i	a4, a1, 0x294
400e2f4c:	a02152        	l32i	a5, a1, 0x280
400e2f4f:	ffab22        	movi	a2, 0xfffffbff
400e2f52:	102520        	and	a2, a5, a2
400e2f55:	00a132        	movi	a3, 0x100
400e2f58:	203230        	or	a3, a2, a3
400e2f5b:	a06132        	s32i	a3, a1, 0x280
400e2f5e:	030c      	movi.n	a3, 0
400e2f60:	035d      	mov.n	a5, a3
400e2f62:	032d      	mov.n	a2, a3
400e2f64:	003946        	j	400e304d <_vfprintf_r+0x1111>
400e2f67:	216200        	srai	a6, a0, 2
400e2f6a:	a022a6        	blti	a2, 2, 400e2f0e <_vfprintf_r+0xfd2>
400e2f6d:	962766        	bnei	a7, 2, 400e2f07 <_vfprintf_r+0xfcb>
400e2f70:	424a      	add.n	a4, a2, a4
400e2f72:	a69521        	l32r	a2, 400cc9c8 <_rtc_text_end+0xc9c8>
400e2f75:	822114        	lsi	f1, a1, 0x208
400e2f78:	cca521        	l32r	a2, 400d620c <esp_int_wdt_init+0xe8>
400e2f7b:	92a8      	l32i.n	a10, a2, 36
400e2f7d:	2266a0        	orb	b6, b6, b10
400e2f80:	92a021        	l32r	a2, 400c7a00 <_rtc_text_end+0x7a00>
400e2f83:	07a661        	l32r	a6, 400a4e1c <_iram_end+0x172c8>
400e2f86:	326362        	s32i	a6, a3, 200
400e2f89:	52a521        	l32r	a2, 400b7a20 <_iram_end+0x29ecc>
400e2f8c:	1b66a0        	un.s	b6, f6, f10
400e2f8f:	446a63        	lsi	f6, a10, 0x110
400e2f92:	a66152        	s32i	a5, a1, 0x298
400e2f95:	0014c6        	j	400e2fec <_vfprintf_r+0x10b0>
400e2f98:	216200        	srai	a6, a0, 2
400e2f9b:	c6cca5        	call8	400a9c64 <_iram_end+0x1c110>
400e2f9e:	66a082        	movi	a8, 102
400e2fa1:	a02192        	l32i	a9, a1, 0x280
400e2fa4:	a66182        	s32i	a8, a1, 0x298
400e2fa7:	140c      	movi.n	a4, 1
400e2fa9:	3f6907        	bbci	a9, 0, 400e2fec <_vfprintf_r+0x10b0>
400e2fac:	a52122        	l32i	a2, a1, 0x294
400e2faf:	66a032        	movi	a3, 102
400e2fb2:	422b      	addi.n	a4, a2, 2
400e2fb4:	a66132        	s32i	a3, a1, 0x298
400e2fb7:	000c46        	j	400e2fec <_vfprintf_r+0x10b0>
400e2fba:	420000        	xorb	b0, b0, b0
400e2fbd:	529521        	l32r	a2, 400b7a14 <_iram_end+0x29ec0>
400e2fc0:	57a721        	l32r	a2, 400b8e5c <_iram_end+0x2b308>
400e2fc3:	621024        	lsi	f2, a0, 0x188
400e2fc6:	8267a0        	mull	a6, a7, a10
400e2fc9:	62a021        	l32r	a2, 400bba4c <_iram_end+0x2def8>
400e2fcc:	07a661        	l32r	a6, 400a4e64 <_iram_end+0x17310>
400e2fcf:	1a68      	l32i.n	a6, a10, 4
400e2fd1:	441b      	addi.n	a4, a4, 1
400e2fd3:	000546        	j	400e2fec <_vfprintf_r+0x10b0>
400e2fd6:	120c      	movi.n	a2, 1
400e2fd8:	05a427        	bge	a4, a2, 400e2fe1 <_vfprintf_r+0x10a5>
400e2fdb:	02a022        	movi	a2, 2
400e2fde:	c02240        	sub	a2, a2, a4
400e2fe1:	a72192        	l32i	a9, a1, 0x29c
400e2fe4:	429a      	add.n	a4, a2, a9
400e2fe6:	67a022        	movi	a2, 103
400e2fe9:	a66122        	s32i	a2, a1, 0x298
400e2fec:	a02152        	l32i	a5, a1, 0x280
400e2fef:	952132        	l32i	a3, a1, 0x254
400e2ff2:	4865a7        	bbci	a5, 10, 400e303e <_vfprintf_r+0x1102>
400e2ff5:	032d      	mov.n	a2, a3
400e2ff7:	4313a6        	blti	a3, 1, 400e303e <_vfprintf_r+0x1102>
400e2ffa:	030c      	movi.n	a3, 0
400e2ffc:	035d      	mov.n	a5, a3
400e2ffe:	ffa082        	movi	a8, 255
400e3001:	000686        	j	400e301f <_vfprintf_r+0x10e3>
400e3004:	20a627        	bge	a6, a2, 400e3028 <_vfprintf_r+0x10ec>
400e3007:	ad2192        	l32i	a9, a1, 0x2b4
400e300a:	c02260        	sub	a2, a2, a6
400e300d:	010962        	l8ui	a6, a9, 1
400e3010:	968c      	beqz.n	a6, 400e301d <_vfprintf_r+0x10e1>
400e3012:	991b      	addi.n	a9, a9, 1
400e3014:	551b      	addi.n	a5, a5, 1
400e3016:	ad6192        	s32i	a9, a1, 0x2b4
400e3019:	000086        	j	400e301f <_vfprintf_r+0x10e3>
400e301c:	331b00        	clamps	a1, a11, 7
400e301f:	ad2192        	l32i	a9, a1, 0x2b4
400e3022:	000962        	l8ui	a6, a9, 0
400e3025:	db9687        	bne	a6, a8, 400e3004 <_vfprintf_r+0x10c8>
400e3028:	b02182        	l32i	a8, a1, 0x2c0
400e302b:	653a      	add.n	a6, a5, a3
400e302d:	826680        	mull	a6, a6, a8
400e3030:	b22192        	l32i	a9, a1, 0x2c8
400e3033:	664a      	add.n	a6, a6, a4
400e3035:	a56162        	s32i	a6, a1, 0x294
400e3038:	a06192        	s32i	a9, a1, 0x280
400e303b:	000386        	j	400e304d <_vfprintf_r+0x1111>
400e303e:	032d      	mov.n	a2, a3
400e3040:	b22132        	l32i	a3, a1, 0x2c8
400e3043:	a56142        	s32i	a4, a1, 0x294
400e3046:	a06132        	s32i	a3, a1, 0x280
400e3049:	030c      	movi.n	a3, 0
400e304b:	035d      	mov.n	a5, a3
400e304d:	b62142        	l32i	a4, a1, 0x2d8
400e3050:	060c      	movi.n	a6, 0
400e3052:	029467        	bne	a4, a6, 400e3058 <_vfprintf_r+0x111c>
400e3055:	0503c6        	j	400e4468 <_vfprintf_r+0x252c>
400e3058:	10c192        	addi	a9, a1, 16
400e305b:	d82c      	movi.n	a8, 45
400e305d:	02d942        	addmi	a4, a9, 0x200
400e3060:	524482        	s8i	a8, a4, 82
400e3063:	050046        	j	400e4468 <_vfprintf_r+0x252c>
400e3066:	320000        	orbc	b0, b0, b0
400e3069:	57a021        	l32r	a2, 400b8eec <_iram_end+0x2b398>
400e306c:	8602e3        	lsi	f14, a2, 0x218
400e306f:	320031        	l32r	a3, 400af870 <_iram_end+0x21d1c>
400e3072:	bc9721        	l32r	a2, 400d22d0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)+0x10>
400e3075:	a23744        	lsi	f4, a7, 0x288
400e3078:	420a      	add.n	a4, a2, a0
400e307a:	4010c1        	l32r	a12, 400b30bc <_iram_end+0x25568>
400e307d:	28b022        	l32ai	a2, a0, 160
400e3080:	084602        	s8i	a0, a6, 8
400e3083:	c16200        	mul16u	a6, a2, a0
400e3086:	a23210        	muluh	a3, a2, a1
400e3089:	3a48      	l32i.n	a4, a10, 12
400e308b:	a2d236        	entry	a2, 0x5168
400e308e:	c24c      	movi.n	a2, 76
400e3090:	ad60a2        	s32i	a10, a0, 0x2b4
400e3093:	013902        	lsi	f0, a9, 4
400e3096:	01d6f2        	addmi	a15, a6, 0x100
400e3099:	06ed      	mov.n	a14, a6
400e309b:	d6da      	add.n	a13, a6, a13
400e309d:	c6ca      	add.n	a12, a6, a12
400e309f:	05bd      	mov.n	a11, a5
400e30a1:	fea1a5        	call8	400e1abc <get_arg$isra$0>
400e30a4:	0a28      	l32i.n	a2, a10, 0
400e30a6:	074d      	mov.n	a4, a7
400e30a8:	001f86        	j	400e312a <_vfprintf_r+0x11ee>
400e30ab:	c18200        	mul16u	a8, a2, a0
400e30ae:	471b10        	lsi	f1, a11, 0x11c
400e30b1:	b02280        	addx8	a2, a2, a8
400e30b4:	702737        	blt	a7, a3, 400e3128 <_vfprintf_r+0x11ec>
400e30b7:	f21c      	movi.n	a2, 31
400e30b9:	3f2237        	blt	a2, a3, 400e30fc <_vfprintf_r+0x11c0>
400e30bc:	231b      	addi.n	a2, a3, 1
400e30be:	10c192        	addi	a9, a1, 16
400e30c1:	976122        	s32i	a2, a1, 0x25c
400e30c4:	02d922        	addmi	a2, a9, 0x200
400e30c7:	1a2252        	l32i	a5, a2, 104
400e30ca:	861c      	movi.n	a6, 24
400e30cc:	754b      	addi.n	a7, a5, 4
400e30ce:	1a6272        	s32i	a7, a2, 104
400e30d1:	072677        	blt	a6, a7, 400e30dc <_vfprintf_r+0x11a0>
400e30d4:	192252        	l32i	a5, a2, 100
400e30d7:	000306        	j	400e30e7 <_vfprintf_r+0x11ab>
400e30da:	570000        	lsi	f0, a0, 0x15c
400e30dd:	2c0426        	beqi	a4, -1, 400e310d <_vfprintf_r+0x11d1>
400e30e0:	625245        	call0	40145608 <_etext+0x59137>
400e30e3:	521a      	add.n	a5, a2, a1
400e30e5:	229c21        	l32r	a2, 400abb58 <_iram_end+0x1e004>
400e30e8:	a29e21        	l32r	a2, 400cbb60 <_rtc_text_end+0xbb60>
400e30eb:	2a10c1        	l32r	a12, 400ad92c <_iram_end+0x1fdd8>
400e30ee:	c22225        	call8	400a5310 <_iram_end+0x177bc>
400e30f1:	28fc      	bnez.n	a8, 400e3127 <_vfprintf_r+0x11eb>
400e30f3:	33a002        	movi	a0, 51
400e30f6:	0329b0        	lsi	f11, a9, 12
400e30f9:	000b46        	j	400e312a <_vfprintf_r+0x11ee>
400e30fc:	10c1e2        	addi	a14, a1, 16
400e30ff:	02de22        	addmi	a2, a14, 0x200
400e3102:	1a2232        	l32i	a3, a2, 104
400e3105:	851c      	movi.n	a5, 24
400e3107:	634b      	addi.n	a6, a3, 4
400e3109:	1a6262        	s32i	a6, a2, 104
400e310c:	052567        	blt	a5, a6, 400e3115 <_vfprintf_r+0x11d9>
400e310f:	192232        	l32i	a3, a2, 100
400e3112:	000286        	j	400e3120 <_vfprintf_r+0x11e4>
400e3115:	042537        	blt	a5, a3, 400e311d <_vfprintf_r+0x11e1>
400e3118:	432c      	movi.n	a3, 36
400e311a:	1a6232        	s32i	a3, a2, 104
400e311d:	9c2132        	l32i	a3, a1, 0x270
400e3120:	9e2122        	l32i	a2, a1, 0x278
400e3123:	232a      	add.n	a2, a3, a2
400e3125:	fcc222        	addi	a2, a2, -4
400e3128:	0228      	l32i.n	a2, a2, 0
400e312a:	ae2132        	l32i	a3, a1, 0x2b8
400e312d:	0239      	s32i.n	a3, a2, 0
400e312f:	313f30        	srai	a3, a3, 31
400e3132:	1239      	s32i.n	a3, a2, 4
400e3134:	0031c6        	j	400e31ff <_vfprintf_r+0x12c3>
400e3137:	216200        	srai	a6, a0, 2
400e313a:	e647a0        	lsi	f10, a7, 0x398
400e313d:	308602        	lsi	f0, a6, 192
400e3140:	216200        	srai	a6, a0, 2
400e3143:	34bc97        	bgeu	a12, a9, 400e317b <_vfprintf_r+0x123f>
400e3146:	0aa267        	bge	a2, a6, 400e3154 <_vfprintf_r+0x1218>
400e3149:	10c182        	addi	a8, a1, 16
400e314c:	b02280        	addx8	a2, a2, a8
400e314f:	0238      	l32i.n	a3, a2, 0
400e3151:	000846        	j	400e3176 <_vfprintf_r+0x123a>
400e3154:	10c192        	addi	a9, a1, 16
400e3157:	48a232        	movi	a3, 0x248
400e315a:	393a      	add.n	a3, a9, a3
400e315c:	4ca2d2        	movi	a13, 0x24c
400e315f:	60a2c2        	movi	a12, 0x260
400e3162:	0139      	s32i.n	a3, a1, 0
400e3164:	01d9f2        	addmi	a15, a9, 0x100
400e3167:	09ed      	mov.n	a14, a9
400e3169:	d9da      	add.n	a13, a9, a13
400e316b:	c9ca      	add.n	a12, a9, a12
400e316d:	05bd      	mov.n	a11, a5
400e316f:	02ad      	mov.n	a10, a2
400e3171:	fe94a5        	call8	400e1abc <get_arg$isra$0>
400e3174:	0a38      	l32i.n	a3, a10, 0
400e3176:	074d      	mov.n	a4, a7
400e3178:	001f86        	j	400e31fa <_vfprintf_r+0x12be>
400e317b:	10c1a2        	addi	a10, a1, 16
400e317e:	471b      	addi.n	a4, a7, 1
400e3180:	b022a0        	addx8	a2, a2, a10
400e3183:	712767        	blt	a7, a6, 400e31f8 <_vfprintf_r+0x12bc>
400e3186:	f21c      	movi.n	a2, 31
400e3188:	3d2267        	blt	a2, a6, 400e31c9 <_vfprintf_r+0x128d>
400e318b:	261b      	addi.n	a2, a6, 1
400e318d:	10c1e2        	addi	a14, a1, 16
400e3190:	976122        	s32i	a2, a1, 0x25c
400e3193:	02de22        	addmi	a2, a14, 0x200
400e3196:	1a2232        	l32i	a3, a2, 104
400e3199:	851c      	movi.n	a5, 24
400e319b:	734b      	addi.n	a7, a3, 4
400e319d:	1a6272        	s32i	a7, a2, 104
400e31a0:	052577        	blt	a5, a7, 400e31a9 <_vfprintf_r+0x126d>
400e31a3:	192222        	l32i	a2, a2, 100
400e31a6:	000286        	j	400e31b4 <_vfprintf_r+0x1278>
400e31a9:	042537        	blt	a5, a3, 400e31b1 <_vfprintf_r+0x1275>
400e31ac:	432c      	movi.n	a3, 36
400e31ae:	1a6232        	s32i	a3, a2, 104
400e31b1:	9c2122        	l32i	a2, a1, 0x270
400e31b4:	9e2132        	l32i	a3, a1, 0x278
400e31b7:	10c152        	addi	a5, a1, 16
400e31ba:	323a      	add.n	a3, a2, a3
400e31bc:	fcc332        	addi	a3, a3, -4
400e31bf:	0338      	l32i.n	a3, a3, 0
400e31c1:	b02650        	addx8	a2, a6, a5
400e31c4:	0239      	s32i.n	a3, a2, 0
400e31c6:	000c06        	j	400e31fa <_vfprintf_r+0x12be>
400e31c9:	10c162        	addi	a6, a1, 16
400e31cc:	02d622        	addmi	a2, a6, 0x200
400e31cf:	1a2232        	l32i	a3, a2, 104
400e31d2:	851c      	movi.n	a5, 24
400e31d4:	634b      	addi.n	a6, a3, 4
400e31d6:	1a6262        	s32i	a6, a2, 104
400e31d9:	082567        	blt	a5, a6, 400e31e5 <_vfprintf_r+0x12a9>
400e31dc:	192232        	l32i	a3, a2, 100
400e31df:	000346        	j	400e31f0 <_vfprintf_r+0x12b4>
400e31e2:	000000        	ill
400e31e5:	042537        	blt	a5, a3, 400e31ed <_vfprintf_r+0x12b1>
400e31e8:	432c      	movi.n	a3, 36
400e31ea:	1a6232        	s32i	a3, a2, 104
400e31ed:	9c2132        	l32i	a3, a1, 0x270
400e31f0:	9e2122        	l32i	a2, a1, 0x278
400e31f3:	232a      	add.n	a2, a3, a2
400e31f5:	fcc222        	addi	a2, a2, -4
400e31f8:	0238      	l32i.n	a3, a2, 0
400e31fa:	ae2182        	l32i	a8, a1, 0x2b8
400e31fd:	0389      	s32i.n	a8, a3, 0
400e31ff:	047d      	mov.n	a7, a4
400e3201:	fbab86        	j	400e20b3 <_vfprintf_r+0x177>
400e3204:	a02192        	l32i	a9, a1, 0x280
400e3207:	02e967        	bbsi	a9, 6, 400e320d <_vfprintf_r+0x12d1>
400e320a:	002f86        	j	400e32cc <_vfprintf_r+0x1390>
400e320d:	972162        	l32i	a6, a1, 0x25c
400e3210:	14bc      	beqz.n	a4, 400e3245 <_vfprintf_r+0x1309>
400e3212:	0aa267        	bge	a2, a6, 400e3220 <_vfprintf_r+0x12e4>
400e3215:	10c1a2        	addi	a10, a1, 16
400e3218:	b022a0        	addx8	a2, a2, a10
400e321b:	0238      	l32i.n	a3, a2, 0
400e321d:	0007c6        	j	400e3240 <_vfprintf_r+0x1304>
400e3220:	10c1e2        	addi	a14, a1, 16
400e3223:	48a232        	movi	a3, 0x248
400e3226:	3e3a      	add.n	a3, a14, a3
400e3228:	4ca2d2        	movi	a13, 0x24c
400e322b:	60a2c2        	movi	a12, 0x260
400e322e:	0139      	s32i.n	a3, a1, 0
400e3230:	01def2        	addmi	a15, a14, 0x100
400e3233:	deda      	add.n	a13, a14, a13
400e3235:	ceca      	add.n	a12, a14, a12
400e3237:	05bd      	mov.n	a11, a5
400e3239:	02ad      	mov.n	a10, a2
400e323b:	fe8825        	call8	400e1abc <get_arg$isra$0>
400e323e:	0a38      	l32i.n	a3, a10, 0
400e3240:	074d      	mov.n	a4, a7
400e3242:	001f06        	j	400e32c2 <_vfprintf_r+0x1386>
400e3245:	10c132        	addi	a3, a1, 16
400e3248:	471b      	addi.n	a4, a7, 1
400e324a:	b02230        	addx8	a2, a2, a3
400e324d:	6f2767        	blt	a7, a6, 400e32c0 <_vfprintf_r+0x1384>
400e3250:	f21c      	movi.n	a2, 31
400e3252:	3e2267        	blt	a2, a6, 400e3294 <_vfprintf_r+0x1358>
400e3255:	261b      	addi.n	a2, a6, 1
400e3257:	10c152        	addi	a5, a1, 16
400e325a:	976122        	s32i	a2, a1, 0x25c
400e325d:	02d522        	addmi	a2, a5, 0x200
400e3260:	1a2232        	l32i	a3, a2, 104
400e3263:	851c      	movi.n	a5, 24
400e3265:	734b      	addi.n	a7, a3, 4
400e3267:	1a6272        	s32i	a7, a2, 104
400e326a:	062577        	blt	a5, a7, 400e3274 <_vfprintf_r+0x1338>
400e326d:	192222        	l32i	a2, a2, 100
400e3270:	0002c6        	j	400e327f <_vfprintf_r+0x1343>
400e3273:	253700        	extui	a3, a0, 23, 3
400e3276:	432c04        	lsi	f0, a12, 0x10c
400e3279:	1a6232        	s32i	a3, a2, 104
400e327c:	9c2122        	l32i	a2, a1, 0x270
400e327f:	9e2132        	l32i	a3, a1, 0x278
400e3282:	10c182        	addi	a8, a1, 16
400e3285:	323a      	add.n	a3, a2, a3
400e3287:	fcc332        	addi	a3, a3, -4
400e328a:	0338      	l32i.n	a3, a3, 0
400e328c:	b02680        	addx8	a2, a6, a8
400e328f:	0239      	s32i.n	a3, a2, 0
400e3291:	000b46        	j	400e32c2 <_vfprintf_r+0x1386>
400e3294:	10c192        	addi	a9, a1, 16
400e3297:	02d922        	addmi	a2, a9, 0x200
400e329a:	1a2232        	l32i	a3, a2, 104
400e329d:	851c      	movi.n	a5, 24
400e329f:	634b      	addi.n	a6, a3, 4
400e32a1:	1a6262        	s32i	a6, a2, 104
400e32a4:	052567        	blt	a5, a6, 400e32ad <_vfprintf_r+0x1371>
400e32a7:	192232        	l32i	a3, a2, 100
400e32aa:	000286        	j	400e32b8 <_vfprintf_r+0x137c>
400e32ad:	042537        	blt	a5, a3, 400e32b5 <_vfprintf_r+0x1379>
400e32b0:	432c      	movi.n	a3, 36
400e32b2:	1a6232        	s32i	a3, a2, 104
400e32b5:	9c2132        	l32i	a3, a1, 0x270
400e32b8:	9e2122        	l32i	a2, a1, 0x278
400e32bb:	232a      	add.n	a2, a3, a2
400e32bd:	fcc222        	addi	a2, a2, -4
400e32c0:	0238      	l32i.n	a3, a2, 0
400e32c2:	ae2122        	l32i	a2, a1, 0x2b8
400e32c5:	005322        	s16i	a2, a3, 0
400e32c8:	ffccc6        	j	400e31ff <_vfprintf_r+0x12c3>
400e32cb:	216200        	srai	a6, a0, 2
400e32ce:	2132a0        	srai	a3, a10, 2
400e32d1:	e69797        	bne	a7, a9, 400e32bb <_vfprintf_r+0x137f>
400e32d4:	2fc602        	addi	a0, a6, 47
400e32d7:	44bc00        	extui	a11, a0, 12, 5
400e32da:	0aa237        	bge	a2, a3, 400e32e8 <_vfprintf_r+0x13ac>
400e32dd:	10c182        	addi	a8, a1, 16
400e32e0:	b02280        	addx8	a2, a2, a8
400e32e3:	0248      	l32i.n	a4, a2, 0
400e32e5:	000846        	j	400e330a <_vfprintf_r+0x13ce>
400e32e8:	10c192        	addi	a9, a1, 16
400e32eb:	48a232        	movi	a3, 0x248
400e32ee:	393a      	add.n	a3, a9, a3
400e32f0:	4ca2d2        	movi	a13, 0x24c
400e32f3:	60a2c2        	movi	a12, 0x260
400e32f6:	0139      	s32i.n	a3, a1, 0
400e32f8:	01d9f2        	addmi	a15, a9, 0x100
400e32fb:	09ed      	mov.n	a14, a9
400e32fd:	d9da      	add.n	a13, a9, a13
400e32ff:	c9ca      	add.n	a12, a9, a12
400e3301:	05bd      	mov.n	a11, a5
400e3303:	02ad      	mov.n	a10, a2
400e3305:	fe7b65        	call8	400e1abc <get_arg$isra$0>
400e3308:	0a48      	l32i.n	a4, a10, 0
400e330a:	075d      	mov.n	a5, a7
400e330c:	001f86        	j	400e338e <_vfprintf_r+0x1452>
400e330f:	c1a200        	mul16u	a10, a2, a0
400e3312:	571b10        	lsi	f1, a11, 0x15c
400e3315:	b022a0        	addx8	a2, a2, a10
400e3318:	702737        	blt	a7, a3, 400e338c <_vfprintf_r+0x1450>
400e331b:	f21c      	movi.n	a2, 31
400e331d:	3f2237        	blt	a2, a3, 400e3360 <_vfprintf_r+0x1424>
400e3320:	231b      	addi.n	a2, a3, 1
400e3322:	10c1e2        	addi	a14, a1, 16
400e3325:	976122        	s32i	a2, a1, 0x25c
400e3328:	02de22        	addmi	a2, a14, 0x200
400e332b:	1a2242        	l32i	a4, a2, 104
400e332e:	861c      	movi.n	a6, 24
400e3330:	744b      	addi.n	a7, a4, 4
400e3332:	1a6272        	s32i	a7, a2, 104
400e3335:	072677        	blt	a6, a7, 400e3340 <_vfprintf_r+0x1404>
400e3338:	192242        	l32i	a4, a2, 100
400e333b:	000306        	j	400e334b <_vfprintf_r+0x140f>
400e333e:	470000        	lsi	f0, a0, 0x11c
400e3341:	2c0426        	beqi	a4, -1, 400e3371 <_vfprintf_r+0x1435>
400e3344:	624244        	lsi	f4, a2, 0x188
400e3347:	421a      	add.n	a4, a2, a1
400e3349:	229c21        	l32r	a2, 400abdbc <_iram_end+0x1e268>
400e334c:	629e21        	l32r	a2, 400bbdc4 <_iram_end+0x2e270>
400e334f:	2a10c1        	l32r	a12, 400adb90 <_iram_end+0x2003c>
400e3352:	c22224        	lsi	f2, a2, 0x308
400e3355:	48fc      	bnez.n	a8, 400e338d <_vfprintf_r+0x1451>
400e3357:	236002        	s32i	a0, a0, 140
400e335a:	0249b0        	andb	b4, b9, b11
400e335d:	000b46        	j	400e338e <_vfprintf_r+0x1452>
400e3360:	10c182        	addi	a8, a1, 16
400e3363:	02d822        	addmi	a2, a8, 0x200
400e3366:	1a2232        	l32i	a3, a2, 104
400e3369:	841c      	movi.n	a4, 24
400e336b:	634b      	addi.n	a6, a3, 4
400e336d:	1a6262        	s32i	a6, a2, 104
400e3370:	052467        	blt	a4, a6, 400e3379 <_vfprintf_r+0x143d>
400e3373:	192232        	l32i	a3, a2, 100
400e3376:	000286        	j	400e3384 <_vfprintf_r+0x1448>
400e3379:	042437        	blt	a4, a3, 400e3381 <_vfprintf_r+0x1445>
400e337c:	432c      	movi.n	a3, 36
400e337e:	1a6232        	s32i	a3, a2, 104
400e3381:	9c2132        	l32i	a3, a1, 0x270
400e3384:	9e2122        	l32i	a2, a1, 0x278
400e3387:	232a      	add.n	a2, a3, a2
400e3389:	fcc222        	addi	a2, a2, -4
400e338c:	0248      	l32i.n	a4, a2, 0
400e338e:	ae2192        	l32i	a9, a1, 0x2b8
400e3391:	004492        	s8i	a9, a4, 0
400e3394:	002ec6        	j	400e3453 <_vfprintf_r+0x1517>
400e3397:	14bc00        	extui	a11, a0, 12, 2
400e339a:	0aa237        	bge	a2, a3, 400e33a8 <_vfprintf_r+0x146c>
400e339d:	10c1a2        	addi	a10, a1, 16
400e33a0:	b022a0        	addx8	a2, a2, a10
400e33a3:	0248      	l32i.n	a4, a2, 0
400e33a5:	0007c6        	j	400e33c8 <_vfprintf_r+0x148c>
400e33a8:	10c1e2        	addi	a14, a1, 16
400e33ab:	48a232        	movi	a3, 0x248
400e33ae:	3e3a      	add.n	a3, a14, a3
400e33b0:	4ca2d2        	movi	a13, 0x24c
400e33b3:	60a2c2        	movi	a12, 0x260
400e33b6:	0139      	s32i.n	a3, a1, 0
400e33b8:	01def2        	addmi	a15, a14, 0x100
400e33bb:	deda      	add.n	a13, a14, a13
400e33bd:	ceca      	add.n	a12, a14, a12
400e33bf:	05bd      	mov.n	a11, a5
400e33c1:	02ad      	mov.n	a10, a2
400e33c3:	fe6fa5        	call8	400e1abc <get_arg$isra$0>
400e33c6:	0a48      	l32i.n	a4, a10, 0
400e33c8:	075d      	mov.n	a5, a7
400e33ca:	002006        	j	400e344e <_vfprintf_r+0x1512>
400e33cd:	571b      	addi.n	a5, a7, 1
400e33cf:	09a737        	bge	a7, a3, 400e33dc <_vfprintf_r+0x14a0>
400e33d2:	10c132        	addi	a3, a1, 16
400e33d5:	b02230        	addx8	a2, a2, a3
400e33d8:	001c06        	j	400e344c <_vfprintf_r+0x1510>
400e33db:	f21c00        	rems	a1, a12, a0
400e33de:	3e2237        	blt	a2, a3, 400e3420 <_vfprintf_r+0x14e4>
400e33e1:	231b      	addi.n	a2, a3, 1
400e33e3:	10c142        	addi	a4, a1, 16
400e33e6:	976122        	s32i	a2, a1, 0x25c
400e33e9:	02d422        	addmi	a2, a4, 0x200
400e33ec:	1a2242        	l32i	a4, a2, 104
400e33ef:	861c      	movi.n	a6, 24
400e33f1:	744b      	addi.n	a7, a4, 4
400e33f3:	1a6272        	s32i	a7, a2, 104
400e33f6:	062677        	blt	a6, a7, 400e3400 <_vfprintf_r+0x14c4>
400e33f9:	192242        	l32i	a4, a2, 100
400e33fc:	0002c6        	j	400e340b <_vfprintf_r+0x14cf>
400e33ff:	264700        	lsi	f0, a7, 152
400e3402:	442c04        	lsi	f0, a12, 0x110
400e3405:	1a6242        	s32i	a4, a2, 104
400e3408:	9c2142        	l32i	a4, a1, 0x270
400e340b:	9e2122        	l32i	a2, a1, 0x278
400e340e:	10c162        	addi	a6, a1, 16
400e3411:	242a      	add.n	a2, a4, a2
400e3413:	fcc222        	addi	a2, a2, -4
400e3416:	0248      	l32i.n	a4, a2, 0
400e3418:	b02360        	addx8	a2, a3, a6
400e341b:	0249      	s32i.n	a4, a2, 0
400e341d:	000b46        	j	400e344e <_vfprintf_r+0x1512>
400e3420:	10c182        	addi	a8, a1, 16
400e3423:	02d822        	addmi	a2, a8, 0x200
400e3426:	1a2232        	l32i	a3, a2, 104
400e3429:	841c      	movi.n	a4, 24
400e342b:	634b      	addi.n	a6, a3, 4
400e342d:	1a6262        	s32i	a6, a2, 104
400e3430:	052467        	blt	a4, a6, 400e3439 <_vfprintf_r+0x14fd>
400e3433:	192232        	l32i	a3, a2, 100
400e3436:	000286        	j	400e3444 <_vfprintf_r+0x1508>
400e3439:	042437        	blt	a4, a3, 400e3441 <_vfprintf_r+0x1505>
400e343c:	432c      	movi.n	a3, 36
400e343e:	1a6232        	s32i	a3, a2, 104
400e3441:	9c2132        	l32i	a3, a1, 0x270
400e3444:	9e2122        	l32i	a2, a1, 0x278
400e3447:	232a      	add.n	a2, a3, a2
400e3449:	fcc222        	addi	a2, a2, -4
400e344c:	0248      	l32i.n	a4, a2, 0
400e344e:	ae2192        	l32i	a9, a1, 0x2b8
400e3451:	0499      	s32i.n	a9, a4, 0
400e3453:	057d      	mov.n	a7, a5
400e3455:	fb1686        	j	400e20b3 <_vfprintf_r+0x177>
400e3458:	a02162        	l32i	a6, a1, 0x280
400e345b:	031c      	movi.n	a3, 16
400e345d:	206630        	or	a6, a6, a3
400e3460:	a06162        	s32i	a6, a1, 0x280
400e3463:	a02182        	l32i	a8, a1, 0x280
400e3466:	02e857        	bbsi	a8, 5, 400e346c <_vfprintf_r+0x1530>
400e3469:	0034c6        	j	400e3540 <_vfprintf_r+0x1604>
400e346c:	972162        	l32i	a6, a1, 0x25c
400e346f:	54bc      	beqz.n	a4, 400e34a8 <_vfprintf_r+0x156c>
400e3471:	0ca267        	bge	a2, a6, 400e3481 <_vfprintf_r+0x1545>
400e3474:	10c192        	addi	a9, a1, 16
400e3477:	b02290        	addx8	a2, a2, a9
400e347a:	0258      	l32i.n	a5, a2, 0
400e347c:	1238      	l32i.n	a3, a2, 4
400e347e:	00ed06        	j	400e3836 <_vfprintf_r+0x18fa>
400e3481:	10c1a2        	addi	a10, a1, 16
400e3484:	48a232        	movi	a3, 0x248
400e3487:	3a3a      	add.n	a3, a10, a3
400e3489:	4ca2d2        	movi	a13, 0x24c
400e348c:	60a2c2        	movi	a12, 0x260
400e348f:	0139      	s32i.n	a3, a1, 0
400e3491:	01daf2        	addmi	a15, a10, 0x100
400e3494:	0aed      	mov.n	a14, a10
400e3496:	dada      	add.n	a13, a10, a13
400e3498:	caca      	add.n	a12, a10, a12
400e349a:	05bd      	mov.n	a11, a5
400e349c:	02ad      	mov.n	a10, a2
400e349e:	fe61e5        	call8	400e1abc <get_arg$isra$0>
400e34a1:	0a58      	l32i.n	a5, a10, 0
400e34a3:	1a38      	l32i.n	a3, a10, 4
400e34a5:	00e346        	j	400e3836 <_vfprintf_r+0x18fa>
400e34a8:	10c1e2        	addi	a14, a1, 16
400e34ab:	471b      	addi.n	a4, a7, 1
400e34ad:	b022e0        	addx8	a2, a2, a14
400e34b0:	02a767        	bge	a7, a6, 400e34b6 <_vfprintf_r+0x157a>
400e34b3:	002046        	j	400e3538 <_vfprintf_r+0x15fc>
400e34b6:	f21c      	movi.n	a2, 31
400e34b8:	482267        	blt	a2, a6, 400e3504 <_vfprintf_r+0x15c8>
400e34bb:	261b      	addi.n	a2, a6, 1
400e34bd:	10c132        	addi	a3, a1, 16
400e34c0:	976122        	s32i	a2, a1, 0x25c
400e34c3:	02d322        	addmi	a2, a3, 0x200
400e34c6:	1a2232        	l32i	a3, a2, 104
400e34c9:	537b      	addi.n	a5, a3, 7
400e34cb:	837c      	movi.n	a3, -8
400e34cd:	103530        	and	a3, a5, a3
400e34d0:	738b      	addi.n	a7, a3, 8
400e34d2:	1a6272        	s32i	a7, a2, 104
400e34d5:	851c      	movi.n	a5, 24
400e34d7:	052577        	blt	a5, a7, 400e34e0 <_vfprintf_r+0x15a4>
400e34da:	192232        	l32i	a3, a2, 100
400e34dd:	000286        	j	400e34eb <_vfprintf_r+0x15af>
400e34e0:	042537        	blt	a5, a3, 400e34e8 <_vfprintf_r+0x15ac>
400e34e3:	832c      	movi.n	a3, 40
400e34e5:	1a6232        	s32i	a3, a2, 104
400e34e8:	9c2132        	l32i	a3, a1, 0x270
400e34eb:	9e2122        	l32i	a2, a1, 0x278
400e34ee:	10c182        	addi	a8, a1, 16
400e34f1:	232a      	add.n	a2, a3, a2
400e34f3:	f8c222        	addi	a2, a2, -8
400e34f6:	0258      	l32i.n	a5, a2, 0
400e34f8:	1238      	l32i.n	a3, a2, 4
400e34fa:	b02680        	addx8	a2, a6, a8
400e34fd:	0259      	s32i.n	a5, a2, 0
400e34ff:	1239      	s32i.n	a3, a2, 4
400e3501:	00cbc6        	j	400e3834 <_vfprintf_r+0x18f8>
400e3504:	10c192        	addi	a9, a1, 16
400e3507:	02d922        	addmi	a2, a9, 0x200
400e350a:	1a2232        	l32i	a3, a2, 104
400e350d:	537b      	addi.n	a5, a3, 7
400e350f:	837c      	movi.n	a3, -8
400e3511:	103530        	and	a3, a5, a3
400e3514:	638b      	addi.n	a6, a3, 8
400e3516:	1a6262        	s32i	a6, a2, 104
400e3519:	851c      	movi.n	a5, 24
400e351b:	062567        	blt	a5, a6, 400e3525 <_vfprintf_r+0x15e9>
400e351e:	192232        	l32i	a3, a2, 100
400e3521:	0002c6        	j	400e3530 <_vfprintf_r+0x15f4>
400e3524:	253700        	extui	a3, a0, 23, 3
400e3527:	832c04        	lsi	f0, a12, 0x20c
400e352a:	1a6232        	s32i	a3, a2, 104
400e352d:	9c2132        	l32i	a3, a1, 0x270
400e3530:	9e2122        	l32i	a2, a1, 0x278
400e3533:	232a      	add.n	a2, a3, a2
400e3535:	f8c222        	addi	a2, a2, -8
400e3538:	0258      	l32i.n	a5, a2, 0
400e353a:	1238      	l32i.n	a3, a2, 4
400e353c:	00bd06        	j	400e3834 <_vfprintf_r+0x18f8>
400e353f:	213200        	srai	a3, a0, 2
400e3542:	061ca0        	lsi	f10, a12, 24
400e3545:	106360        	and	a6, a3, a6
400e3548:	07c616        	beqz	a6, 400e35c8 <_vfprintf_r+0x168c>
400e354b:	972162        	l32i	a6, a1, 0x25c
400e354e:	e49c      	beqz.n	a4, 400e3570 <_vfprintf_r+0x1634>
400e3550:	08a267        	bge	a2, a6, 400e355c <_vfprintf_r+0x1620>
400e3553:	10c142        	addi	a4, a1, 16
400e3556:	b02240        	addx8	a2, a2, a4
400e3559:	008a06        	j	400e3785 <_vfprintf_r+0x1849>
400e355c:	10c162        	addi	a6, a1, 16
400e355f:	48a232        	movi	a3, 0x248
400e3562:	363a      	add.n	a3, a6, a3
400e3564:	0139      	s32i.n	a3, a1, 0
400e3566:	01d6f2        	addmi	a15, a6, 0x100
400e3569:	06ed      	mov.n	a14, a6
400e356b:	008b06        	j	400e379b <_vfprintf_r+0x185f>
400e356e:	820000        	mull	a0, a0, a0
400e3571:	1b10c1        	l32r	a12, 400aa1b4 <_iram_end+0x1c660>
400e3574:	228047        	bany	a0, a4, 400e359a <_vfprintf_r+0x165e>
400e3577:	a767b0        	lsi	f11, a7, 0x29c
400e357a:	ac4602        	s8i	a0, a6, 172
400e357d:	f21c00        	rems	a1, a12, a0
400e3580:	3b2267        	blt	a2, a6, 400e35bf <_vfprintf_r+0x1683>
400e3583:	261b      	addi.n	a2, a6, 1
400e3585:	10c192        	addi	a9, a1, 16
400e3588:	976122        	s32i	a2, a1, 0x25c
400e358b:	02d922        	addmi	a2, a9, 0x200
400e358e:	1a2232        	l32i	a3, a2, 104
400e3591:	851c      	movi.n	a5, 24
400e3593:	734b      	addi.n	a7, a3, 4
400e3595:	1a6272        	s32i	a7, a2, 104
400e3598:	052577        	blt	a5, a7, 400e35a1 <_vfprintf_r+0x1665>
400e359b:	192222        	l32i	a2, a2, 100
400e359e:	000286        	j	400e35ac <_vfprintf_r+0x1670>
400e35a1:	042537        	blt	a5, a3, 400e35a9 <_vfprintf_r+0x166d>
400e35a4:	432c      	movi.n	a3, 36
400e35a6:	1a6232        	s32i	a3, a2, 104
400e35a9:	9c2122        	l32i	a2, a1, 0x270
400e35ac:	9e2132        	l32i	a3, a1, 0x278
400e35af:	10c1a2        	addi	a10, a1, 16
400e35b2:	323a      	add.n	a3, a2, a3
400e35b4:	fcc332        	addi	a3, a3, -4
400e35b7:	0358      	l32i.n	a5, a3, 0
400e35b9:	b026a0        	addx8	a2, a6, a10
400e35bc:	008fc6        	j	400e37ff <_vfprintf_r+0x18c3>
400e35bf:	10c1e2        	addi	a14, a1, 16
400e35c2:	02de22        	addmi	a2, a14, 0x200
400e35c5:	009046        	j	400e380a <_vfprintf_r+0x18ce>
400e35c8:	a02182        	l32i	a8, a1, 0x280
400e35cb:	034c      	movi.n	a3, 64
400e35cd:	103830        	and	a3, a8, a3
400e35d0:	0d0316        	beqz	a3, 400e36a4 <_vfprintf_r+0x1768>
400e35d3:	972182        	l32i	a8, a1, 0x25c
400e35d6:	64bc      	beqz.n	a4, 400e3610 <_vfprintf_r+0x16d4>
400e35d8:	0ca287        	bge	a2, a8, 400e35e8 <_vfprintf_r+0x16ac>
400e35db:	10c192        	addi	a9, a1, 16
400e35de:	b02290        	addx8	a2, a2, a9
400e35e1:	001252        	l16ui	a5, a2, 0
400e35e4:	0008c6        	j	400e360b <_vfprintf_r+0x16cf>
400e35e7:	c1a200        	mul16u	a10, a2, a0
400e35ea:	a23210        	muluh	a3, a2, a1
400e35ed:	3a48      	l32i.n	a4, a10, 12
400e35ef:	d23a      	add.n	a13, a2, a3
400e35f1:	c24ca2        	s8i	a10, a12, 194
400e35f4:	f260a2        	s32i	a10, a0, 0x3c8
400e35f7:	01da      	add.n	a0, a1, a13
400e35f9:	0aed      	mov.n	a14, a10
400e35fb:	dada      	add.n	a13, a10, a13
400e35fd:	caca      	add.n	a12, a10, a12
400e35ff:	05bd      	mov.n	a11, a5
400e3601:	0139      	s32i.n	a3, a1, 0
400e3603:	02ad      	mov.n	a10, a2
400e3605:	fe4b65        	call8	400e1abc <get_arg$isra$0>
400e3608:	001a52        	l16ui	a5, a10, 0
400e360b:	063d      	mov.n	a3, a6
400e360d:	008946        	j	400e3836 <_vfprintf_r+0x18fa>
400e3610:	671b      	addi.n	a6, a7, 1
400e3612:	0ea787        	bge	a7, a8, 400e3624 <_vfprintf_r+0x16e8>
400e3615:	10c1e2        	addi	a14, a1, 16
400e3618:	b022e0        	addx8	a2, a2, a14
400e361b:	001252        	l16ui	a5, a2, 0
400e361e:	043d      	mov.n	a3, a4
400e3620:	001e46        	j	400e369d <_vfprintf_r+0x1761>
400e3623:	f21c00        	rems	a1, a12, a0
400e3626:	422287        	blt	a2, a8, 400e366c <_vfprintf_r+0x1730>
400e3629:	281b      	addi.n	a2, a8, 1
400e362b:	10c132        	addi	a3, a1, 16
400e362e:	976122        	s32i	a2, a1, 0x25c
400e3631:	02d322        	addmi	a2, a3, 0x200
400e3634:	1a2232        	l32i	a3, a2, 104
400e3637:	841c      	movi.n	a4, 24
400e3639:	534b      	addi.n	a5, a3, 4
400e363b:	1a6252        	s32i	a5, a2, 104
400e363e:	062457        	blt	a4, a5, 400e3648 <_vfprintf_r+0x170c>
400e3641:	192222        	l32i	a2, a2, 100
400e3644:	0002c6        	j	400e3653 <_vfprintf_r+0x1717>
400e3647:	243700        	extui	a3, a0, 7, 3
400e364a:	432c04        	lsi	f0, a12, 0x10c
400e364d:	1a6232        	s32i	a3, a2, 104
400e3650:	9c2122        	l32i	a2, a1, 0x270
400e3653:	9e2132        	l32i	a3, a1, 0x278
400e3656:	10c142        	addi	a4, a1, 16
400e3659:	323a      	add.n	a3, a2, a3
400e365b:	fcc332        	addi	a3, a3, -4
400e365e:	0358      	l32i.n	a5, a3, 0
400e3660:	b02840        	addx8	a2, a8, a4
400e3663:	0259      	s32i.n	a5, a2, 0
400e3665:	f45050        	extui	a5, a5, 0, 16
400e3668:	000bc6        	j	400e369b <_vfprintf_r+0x175f>
400e366b:	c15200        	mul16u	a5, a2, a0
400e366e:	d52210        	extui	a2, a1, 18, 14
400e3671:	223202        	lsi	f0, a2, 136
400e3674:	1c1a      	add.n	a1, a12, a1
400e3676:	534b84        	lsi	f8, a11, 0x14c
400e3679:	1a6252        	s32i	a5, a2, 104
400e367c:	052457        	blt	a4, a5, 400e3685 <_vfprintf_r+0x1749>
400e367f:	192232        	l32i	a3, a2, 100
400e3682:	000286        	j	400e3690 <_vfprintf_r+0x1754>
400e3685:	042437        	blt	a4, a3, 400e368d <_vfprintf_r+0x1751>
400e3688:	432c      	movi.n	a3, 36
400e368a:	1a6232        	s32i	a3, a2, 104
400e368d:	9c2132        	l32i	a3, a1, 0x270
400e3690:	9e2122        	l32i	a2, a1, 0x278
400e3693:	232a      	add.n	a2, a3, a2
400e3695:	fcc222        	addi	a2, a2, -4
400e3698:	001252        	l16ui	a5, a2, 0
400e369b:	030c      	movi.n	a3, 0
400e369d:	067d      	mov.n	a7, a6
400e369f:	0064c6        	j	400e3836 <_vfprintf_r+0x18fa>
400e36a2:	820000        	mull	a0, a0, a0
400e36a5:	62a021        	l32r	a2, 400bc128 <_iram_end+0x2e5d4>
400e36a8:	979721        	l32r	a2, 400c9504 <_rtc_text_end+0x9504>
400e36ab:	02e8      	l32i.n	a14, a2, 0
400e36ad:	003246        	j	400e377a <_vfprintf_r+0x183e>
400e36b0:	44bc      	beqz.n	a4, 400e36e8 <_vfprintf_r+0x17ac>
400e36b2:	0ba267        	bge	a2, a6, 400e36c1 <_vfprintf_r+0x1785>
400e36b5:	10c192        	addi	a9, a1, 16
400e36b8:	b02290        	addx8	a2, a2, a9
400e36bb:	000252        	l8ui	a5, a2, 0
400e36be:	005d06        	j	400e3836 <_vfprintf_r+0x18fa>
400e36c1:	10c1a2        	addi	a10, a1, 16
400e36c4:	48a242        	movi	a4, 0x248
400e36c7:	4a4a      	add.n	a4, a10, a4
400e36c9:	4ca2d2        	movi	a13, 0x24c
400e36cc:	60a2c2        	movi	a12, 0x260
400e36cf:	01daf2        	addmi	a15, a10, 0x100
400e36d2:	0aed      	mov.n	a14, a10
400e36d4:	dada      	add.n	a13, a10, a13
400e36d6:	caca      	add.n	a12, a10, a12
400e36d8:	05bd      	mov.n	a11, a5
400e36da:	0149      	s32i.n	a4, a1, 0
400e36dc:	02ad      	mov.n	a10, a2
400e36de:	fe3de5        	call8	400e1abc <get_arg$isra$0>
400e36e1:	000a52        	l8ui	a5, a10, 0
400e36e4:	005386        	j	400e3836 <_vfprintf_r+0x18fa>
400e36e7:	871b00        	lsi	f0, a11, 0x21c
400e36ea:	0da767        	bge	a7, a6, 400e36fb <_vfprintf_r+0x17bf>
400e36ed:	10c1e2        	addi	a14, a1, 16
400e36f0:	b022e0        	addx8	a2, a2, a14
400e36f3:	000252        	l8ui	a5, a2, 0
400e36f6:	043d      	mov.n	a3, a4
400e36f8:	001e46        	j	400e3775 <_vfprintf_r+0x1839>
400e36fb:	f21c      	movi.n	a2, 31
400e36fd:	432267        	blt	a2, a6, 400e3744 <_vfprintf_r+0x1808>
400e3700:	261b      	addi.n	a2, a6, 1
400e3702:	10c132        	addi	a3, a1, 16
400e3705:	976122        	s32i	a2, a1, 0x25c
400e3708:	02d322        	addmi	a2, a3, 0x200
400e370b:	1a2232        	l32i	a3, a2, 104
400e370e:	841c      	movi.n	a4, 24
400e3710:	534b      	addi.n	a5, a3, 4
400e3712:	1a6252        	s32i	a5, a2, 104
400e3715:	072457        	blt	a4, a5, 400e3720 <_vfprintf_r+0x17e4>
400e3718:	192232        	l32i	a3, a2, 100
400e371b:	000306        	j	400e372b <_vfprintf_r+0x17ef>
400e371e:	370000        	lsi	f0, a0, 220
400e3721:	2c0424        	lsi	f2, a4, 176
400e3724:	623243        	lsi	f4, a2, 0x188
400e3727:	321a      	add.n	a3, a2, a1
400e3729:	229c21        	l32r	a2, 400ac19c <_iram_end+0x1e648>
400e372c:	429e21        	l32r	a2, 400b41a4 <_iram_end+0x26650>
400e372f:	2a10c1        	l32r	a12, 400adf70 <_iram_end+0x2041c>
400e3732:	c22223        	lsi	f2, a2, 0x308
400e3735:	58fc      	bnez.n	a8, 400e376e <_vfprintf_r+0x1832>
400e3737:	264002        	s8i	a0, a0, 38
400e373a:	0259b0        	andb	b5, b9, b11
400e373d:	745050        	extui	a5, a5, 0, 8
400e3740:	000bc6        	j	400e3773 <_vfprintf_r+0x1837>
400e3743:	c15200        	mul16u	a5, a2, a0
400e3746:	d52210        	extui	a2, a1, 18, 14
400e3749:	223202        	lsi	f0, a2, 136
400e374c:	1c1a      	add.n	a1, a12, a1
400e374e:	534b84        	lsi	f8, a11, 0x14c
400e3751:	1a6252        	s32i	a5, a2, 104
400e3754:	052457        	blt	a4, a5, 400e375d <_vfprintf_r+0x1821>
400e3757:	192232        	l32i	a3, a2, 100
400e375a:	000286        	j	400e3768 <_vfprintf_r+0x182c>
400e375d:	042437        	blt	a4, a3, 400e3765 <_vfprintf_r+0x1829>
400e3760:	432c      	movi.n	a3, 36
400e3762:	1a6232        	s32i	a3, a2, 104
400e3765:	9c2132        	l32i	a3, a1, 0x270
400e3768:	9e2122        	l32i	a2, a1, 0x278
400e376b:	232a      	add.n	a2, a3, a2
400e376d:	fcc222        	addi	a2, a2, -4
400e3770:	000252        	l8ui	a5, a2, 0
400e3773:	030c      	movi.n	a3, 0
400e3775:	087d      	mov.n	a7, a8
400e3777:	002ec6        	j	400e3836 <_vfprintf_r+0x18fa>
400e377a:	64bc      	beqz.n	a4, 400e37b4 <_vfprintf_r+0x1878>
400e377c:	0ca267        	bge	a2, a6, 400e378c <_vfprintf_r+0x1850>
400e377f:	10c162        	addi	a6, a1, 16
400e3782:	b02260        	addx8	a2, a2, a6
400e3785:	0258      	l32i.n	a5, a2, 0
400e3787:	0008c6        	j	400e37ae <_vfprintf_r+0x1872>
400e378a:	820000        	mull	a0, a0, a0
400e378d:	3210c1        	l32r	a12, 400affd0 <_iram_end+0x2247c>
400e3790:	3a48a2        	s8i	a10, a8, 58
400e3793:	3938      	l32i.n	a3, a9, 12
400e3795:	d8f201        	l32r	a0, 400d9b60 <uart_fcntl+0x7c>
400e3798:	08ed01        	l32r	a0, 400a5b4c <_iram_end+0x17ff8>
400e379b:	4ca2d2        	movi	a13, 0x24c
400e379e:	60a2c2        	movi	a12, 0x260
400e37a1:	05bd      	mov.n	a11, a5
400e37a3:	deda      	add.n	a13, a14, a13
400e37a5:	ceca      	add.n	a12, a14, a12
400e37a7:	02ad      	mov.n	a10, a2
400e37a9:	fe3125        	call8	400e1abc <get_arg$isra$0>
400e37ac:	0a58      	l32i.n	a5, a10, 0
400e37ae:	074d      	mov.n	a4, a7
400e37b0:	001f86        	j	400e3832 <_vfprintf_r+0x18f6>
400e37b3:	c19200        	mul16u	a9, a2, a0
400e37b6:	471b10        	lsi	f1, a11, 0x11c
400e37b9:	b02290        	addx8	a2, a2, a9
400e37bc:	702767        	blt	a7, a6, 400e3830 <_vfprintf_r+0x18f4>
400e37bf:	f21c      	movi.n	a2, 31
400e37c1:	3f2267        	blt	a2, a6, 400e3804 <_vfprintf_r+0x18c8>
400e37c4:	261b      	addi.n	a2, a6, 1
400e37c6:	10c1a2        	addi	a10, a1, 16
400e37c9:	976122        	s32i	a2, a1, 0x25c
400e37cc:	02da22        	addmi	a2, a10, 0x200
400e37cf:	1a2232        	l32i	a3, a2, 104
400e37d2:	851c      	movi.n	a5, 24
400e37d4:	734b      	addi.n	a7, a3, 4
400e37d6:	1a6272        	s32i	a7, a2, 104
400e37d9:	072577        	blt	a5, a7, 400e37e4 <_vfprintf_r+0x18a8>
400e37dc:	192232        	l32i	a3, a2, 100
400e37df:	000306        	j	400e37ef <_vfprintf_r+0x18b3>
400e37e2:	370000        	lsi	f0, a0, 220
400e37e5:	2c0425        	call8	4010f828 <_etext+0x23357>
400e37e8:	623243        	lsi	f4, a2, 0x188
400e37eb:	321a      	add.n	a3, a2, a1
400e37ed:	229c21        	l32r	a2, 400ac260 <_iram_end+0x1e70c>
400e37f0:	e29e21        	l32r	a2, 400dc268 <get_arg$isra$0+0x3d0>
400e37f3:	2a10c1        	l32r	a12, 400ae034 <_iram_end+0x204e0>
400e37f6:	c22223        	lsi	f2, a2, 0x308
400e37f9:	58fc      	bnez.n	a8, 400e3832 <_vfprintf_r+0x18f6>
400e37fb:	26e002        	s32c1i	a0, a0, 152
400e37fe:	0259b0        	andb	b5, b9, b11
400e3801:	000b46        	j	400e3832 <_vfprintf_r+0x18f6>
400e3804:	10c132        	addi	a3, a1, 16
400e3807:	02d322        	addmi	a2, a3, 0x200
400e380a:	1a2232        	l32i	a3, a2, 104
400e380d:	851c      	movi.n	a5, 24
400e380f:	634b      	addi.n	a6, a3, 4
400e3811:	1a6262        	s32i	a6, a2, 104
400e3814:	052567        	blt	a5, a6, 400e381d <_vfprintf_r+0x18e1>
400e3817:	192232        	l32i	a3, a2, 100
400e381a:	000286        	j	400e3828 <_vfprintf_r+0x18ec>
400e381d:	042537        	blt	a5, a3, 400e3825 <_vfprintf_r+0x18e9>
400e3820:	432c      	movi.n	a3, 36
400e3822:	1a6232        	s32i	a3, a2, 104
400e3825:	9c2132        	l32i	a3, a1, 0x270
400e3828:	9e2122        	l32i	a2, a1, 0x278
400e382b:	232a      	add.n	a2, a3, a2
400e382d:	fcc222        	addi	a2, a2, -4
400e3830:	0258      	l32i.n	a5, a2, 0
400e3832:	030c      	movi.n	a3, 0
400e3834:	047d      	mov.n	a7, a4
400e3836:	a02142        	l32i	a4, a1, 0x280
400e3839:	ffab22        	movi	a2, 0xfffffbff
400e383c:	104420        	and	a4, a4, a2
400e383f:	a06142        	s32i	a4, a1, 0x280
400e3842:	020c      	movi.n	a2, 0
400e3844:	027b06        	j	400e4234 <_vfprintf_r+0x22f8>
400e3847:	972162        	l32i	a6, a1, 0x25c
400e384a:	34bc      	beqz.n	a4, 400e3881 <_vfprintf_r+0x1945>
400e384c:	0aa267        	bge	a2, a6, 400e385a <_vfprintf_r+0x191e>
400e384f:	10c152        	addi	a5, a1, 16
400e3852:	b02250        	addx8	a2, a2, a5
400e3855:	0258      	l32i.n	a5, a2, 0
400e3857:	000846        	j	400e387c <_vfprintf_r+0x1940>
400e385a:	10c162        	addi	a6, a1, 16
400e385d:	48a232        	movi	a3, 0x248
400e3860:	363a      	add.n	a3, a6, a3
400e3862:	4ca2d2        	movi	a13, 0x24c
400e3865:	60a2c2        	movi	a12, 0x260
400e3868:	05bd      	mov.n	a11, a5
400e386a:	0139      	s32i.n	a3, a1, 0
400e386c:	01d6f2        	addmi	a15, a6, 0x100
400e386f:	06ed      	mov.n	a14, a6
400e3871:	d6da      	add.n	a13, a6, a13
400e3873:	c6ca      	add.n	a12, a6, a12
400e3875:	02ad      	mov.n	a10, a2
400e3877:	fe2465        	call8	400e1abc <get_arg$isra$0>
400e387a:	0a58      	l32i.n	a5, a10, 0
400e387c:	074d      	mov.n	a4, a7
400e387e:	001f06        	j	400e38fe <_vfprintf_r+0x19c2>
400e3881:	10c182        	addi	a8, a1, 16
400e3884:	471b      	addi.n	a4, a7, 1
400e3886:	b02280        	addx8	a2, a2, a8
400e3889:	6f2767        	blt	a7, a6, 400e38fc <_vfprintf_r+0x19c0>
400e388c:	f21c      	movi.n	a2, 31
400e388e:	3e2267        	blt	a2, a6, 400e38d0 <_vfprintf_r+0x1994>
400e3891:	261b      	addi.n	a2, a6, 1
400e3893:	10c192        	addi	a9, a1, 16
400e3896:	976122        	s32i	a2, a1, 0x25c
400e3899:	02d922        	addmi	a2, a9, 0x200
400e389c:	1a2232        	l32i	a3, a2, 104
400e389f:	851c      	movi.n	a5, 24
400e38a1:	734b      	addi.n	a7, a3, 4
400e38a3:	1a6272        	s32i	a7, a2, 104
400e38a6:	062577        	blt	a5, a7, 400e38b0 <_vfprintf_r+0x1974>
400e38a9:	192222        	l32i	a2, a2, 100
400e38ac:	0002c6        	j	400e38bb <_vfprintf_r+0x197f>
400e38af:	253700        	extui	a3, a0, 23, 3
400e38b2:	432c04        	lsi	f0, a12, 0x10c
400e38b5:	1a6232        	s32i	a3, a2, 104
400e38b8:	9c2122        	l32i	a2, a1, 0x270
400e38bb:	9e2132        	l32i	a3, a1, 0x278
400e38be:	10c1a2        	addi	a10, a1, 16
400e38c1:	323a      	add.n	a3, a2, a3
400e38c3:	fcc332        	addi	a3, a3, -4
400e38c6:	0358      	l32i.n	a5, a3, 0
400e38c8:	b026a0        	addx8	a2, a6, a10
400e38cb:	0259      	s32i.n	a5, a2, 0
400e38cd:	000b46        	j	400e38fe <_vfprintf_r+0x19c2>
400e38d0:	10c1e2        	addi	a14, a1, 16
400e38d3:	02de22        	addmi	a2, a14, 0x200
400e38d6:	1a2232        	l32i	a3, a2, 104
400e38d9:	851c      	movi.n	a5, 24
400e38db:	634b      	addi.n	a6, a3, 4
400e38dd:	1a6262        	s32i	a6, a2, 104
400e38e0:	052567        	blt	a5, a6, 400e38e9 <_vfprintf_r+0x19ad>
400e38e3:	192232        	l32i	a3, a2, 100
400e38e6:	000286        	j	400e38f4 <_vfprintf_r+0x19b8>
400e38e9:	042537        	blt	a5, a3, 400e38f1 <_vfprintf_r+0x19b5>
400e38ec:	432c      	movi.n	a3, 36
400e38ee:	1a6232        	s32i	a3, a2, 104
400e38f1:	9c2132        	l32i	a3, a1, 0x270
400e38f4:	9e2122        	l32i	a2, a1, 0x278
400e38f7:	232a      	add.n	a2, a3, a2
400e38f9:	fcc222        	addi	a2, a2, -4
400e38fc:	0258      	l32i.n	a5, a2, 0
400e38fe:	a02162        	l32i	a6, a1, 0x280
400e3901:	220c      	movi.n	a2, 2
400e3903:	206620        	or	a6, a6, a2
400e3906:	10c182        	addi	a8, a1, 16
400e3909:	073c      	movi.n	a7, 48
400e390b:	a06162        	s32i	a6, a1, 0x280
400e390e:	02d862        	addmi	a6, a8, 0x200
400e3911:	504672        	s8i	a7, a6, 80
400e3914:	b3b991        	l32r	a9, 400d07f8 <_flash_cache_start+0x7e0>
400e3917:	78a072        	movi	a7, 120
400e391a:	514672        	s8i	a7, a6, 81
400e391d:	047d      	mov.n	a7, a4
400e391f:	78a042        	movi	a4, 120
400e3922:	030c      	movi.n	a3, 0
400e3924:	b56192        	s32i	a9, a1, 0x2d4
400e3927:	a66142        	s32i	a4, a1, 0x298
400e392a:	024186        	j	400e4234 <_vfprintf_r+0x22f8>
400e392d:	216200        	srai	a6, a0, 2
400e3930:	74bc97        	bgeu	a12, a9, 400e39a8 <_vfprintf_r+0x1a6c>
400e3933:	0da267        	bge	a2, a6, 400e3944 <_vfprintf_r+0x1a08>
400e3936:	10c152        	addi	a5, a1, 16
400e3939:	b02250        	addx8	a2, a2, a5
400e393c:	0228      	l32i.n	a2, a2, 0
400e393e:	a16122        	s32i	a2, a1, 0x284
400e3941:	002b86        	j	400e39f3 <_vfprintf_r+0x1ab7>
400e3944:	10c162        	addi	a6, a1, 16
400e3947:	48a232        	movi	a3, 0x248
400e394a:	363a      	add.n	a3, a6, a3
400e394c:	4ca2d2        	movi	a13, 0x24c
400e394f:	60a2c2        	movi	a12, 0x260
400e3952:	0139      	s32i.n	a3, a1, 0
400e3954:	01d6f2        	addmi	a15, a6, 0x100
400e3957:	06ed      	mov.n	a14, a6
400e3959:	d6da      	add.n	a13, a6, a13
400e395b:	c6ca      	add.n	a12, a6, a12
400e395d:	05bd      	mov.n	a11, a5
400e395f:	02ad      	mov.n	a10, a2
400e3961:	fe15a5        	call8	400e1abc <get_arg$isra$0>
400e3964:	0aa8      	l32i.n	a10, a10, 0
400e3966:	a161a2        	s32i	a10, a1, 0x284
400e3969:	002186        	j	400e39f3 <_vfprintf_r+0x1ab7>
400e396c:	10c182        	addi	a8, a1, 16
400e396f:	471b      	addi.n	a4, a7, 1
400e3971:	b02280        	addx8	a2, a2, a8
400e3974:	742767        	blt	a7, a6, 400e39ec <_vfprintf_r+0x1ab0>
400e3977:	f21c      	movi.n	a2, 31
400e3979:	432267        	blt	a2, a6, 400e39c0 <_vfprintf_r+0x1a84>
400e397c:	261b      	addi.n	a2, a6, 1
400e397e:	10c192        	addi	a9, a1, 16
400e3981:	976122        	s32i	a2, a1, 0x25c
400e3984:	02d922        	addmi	a2, a9, 0x200
400e3987:	1a2232        	l32i	a3, a2, 104
400e398a:	851c      	movi.n	a5, 24
400e398c:	734b      	addi.n	a7, a3, 4
400e398e:	1a6272        	s32i	a7, a2, 104
400e3991:	072577        	blt	a5, a7, 400e399c <_vfprintf_r+0x1a60>
400e3994:	192222        	l32i	a2, a2, 100
400e3997:	000306        	j	400e39a7 <_vfprintf_r+0x1a6b>
400e399a:	370000        	lsi	f0, a0, 220
400e399d:	2c0425        	call8	4010f9e0 <_etext+0x2350f>
400e39a0:	623243        	lsi	f4, a2, 0x188
400e39a3:	221a      	add.n	a2, a2, a1
400e39a5:	329c21        	l32r	a2, 400b0418 <_iram_end+0x228c4>
400e39a8:	a29e21        	l32r	a2, 400cc420 <_rtc_text_end+0xc420>
400e39ab:	3a10c1        	l32r	a12, 400b21ec <_iram_end+0x24698>
400e39ae:	c33232        	lsi	f3, a2, 0x30c
400e39b1:	38fc      	bnez.n	a8, 400e39e8 <_vfprintf_r+0x1aac>
400e39b3:	26a003        	lsi	f0, a0, 152
400e39b6:	6132b0        	lsi	f11, a2, 0x184
400e39b9:	0239a1        	l32r	a10, 400a42a0 <_iram_end+0x1674c>
400e39bc:	000c46        	j	400e39f1 <_vfprintf_r+0x1ab5>
400e39bf:	c1e200        	mul16u	a14, a2, a0
400e39c2:	de2210        	f64iter	a2, a2, a1, 1, 1
400e39c5:	223202        	lsi	f0, a2, 136
400e39c8:	1c1a      	add.n	a1, a12, a1
400e39ca:	634b85        	call0	40146e84 <_etext+0x5a9b3>
400e39cd:	1a6262        	s32i	a6, a2, 104
400e39d0:	052567        	blt	a5, a6, 400e39d9 <_vfprintf_r+0x1a9d>
400e39d3:	192232        	l32i	a3, a2, 100
400e39d6:	000286        	j	400e39e4 <_vfprintf_r+0x1aa8>
400e39d9:	042537        	blt	a5, a3, 400e39e1 <_vfprintf_r+0x1aa5>
400e39dc:	432c      	movi.n	a3, 36
400e39de:	1a6232        	s32i	a3, a2, 104
400e39e1:	9c2132        	l32i	a3, a1, 0x270
400e39e4:	9e2122        	l32i	a2, a1, 0x278
400e39e7:	232a      	add.n	a2, a3, a2
400e39e9:	fcc222        	addi	a2, a2, -4
400e39ec:	0228      	l32i.n	a2, a2, 0
400e39ee:	a16122        	s32i	a2, a1, 0x284
400e39f1:	047d      	mov.n	a7, a4
400e39f3:	10c142        	addi	a4, a1, 16
400e39f6:	030c      	movi.n	a3, 0
400e39f8:	02d422        	addmi	a2, a4, 0x200
400e39fb:	a52152        	l32i	a5, a1, 0x294
400e39fe:	524232        	s8i	a3, a2, 82
400e3a01:	024596        	bltz	a5, 400e3a29 <_vfprintf_r+0x1aed>
400e3a04:	a121a2        	l32i	a10, a1, 0x284
400e3a07:	05cd      	mov.n	a12, a5
400e3a09:	0b0c      	movi.n	a11, 0
400e3a0b:	b36681        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e3a0e:	0008e0        	callx8	a8
400e3a11:	1acc      	bnez.n	a10, 400e3a16 <_vfprintf_r+0x1ada>
400e3a13:	029186        	j	400e445d <_vfprintf_r+0x2521>
400e3a16:	a12182        	l32i	a8, a1, 0x284
400e3a19:	090c      	movi.n	a9, 0
400e3a1b:	c0aa80        	sub	a10, a10, a8
400e3a1e:	a561a2        	s32i	a10, a1, 0x294
400e3a21:	a46192        	s32i	a9, a1, 0x290
400e3a24:	096d      	mov.n	a6, a9
400e3a26:	028e06        	j	400e4462 <_vfprintf_r+0x2526>
400e3a29:	a121a2        	l32i	a10, a1, 0x284
400e3a2c:	020c      	movi.n	a2, 0
400e3a2e:	b19481        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e3a31:	0008e0        	callx8	a8
400e3a34:	a561a2        	s32i	a10, a1, 0x294
400e3a37:	a46122        	s32i	a2, a1, 0x290
400e3a3a:	026d      	mov.n	a6, a2
400e3a3c:	023d      	mov.n	a3, a2
400e3a3e:	025d      	mov.n	a5, a2
400e3a40:	028906        	j	400e4468 <_vfprintf_r+0x252c>
400e3a43:	a02162        	l32i	a6, a1, 0x280
400e3a46:	031c      	movi.n	a3, 16
400e3a48:	206630        	or	a6, a6, a3
400e3a4b:	a06162        	s32i	a6, a1, 0x280
400e3a4e:	a02182        	l32i	a8, a1, 0x280
400e3a51:	02e857        	bbsi	a8, 5, 400e3a57 <_vfprintf_r+0x1b1b>
400e3a54:	003506        	j	400e3b2c <_vfprintf_r+0x1bf0>
400e3a57:	972162        	l32i	a6, a1, 0x25c
400e3a5a:	64bc      	beqz.n	a4, 400e3a94 <_vfprintf_r+0x1b58>
400e3a5c:	0ca267        	bge	a2, a6, 400e3a6c <_vfprintf_r+0x1b30>
400e3a5f:	10c192        	addi	a9, a1, 16
400e3a62:	b02290        	addx8	a2, a2, a9
400e3a65:	0258      	l32i.n	a5, a2, 0
400e3a67:	1238      	l32i.n	a3, a2, 4
400e3a69:	00ed46        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3a6c:	10c1a2        	addi	a10, a1, 16
400e3a6f:	48a232        	movi	a3, 0x248
400e3a72:	3a3a      	add.n	a3, a10, a3
400e3a74:	4ca2d2        	movi	a13, 0x24c
400e3a77:	60a2c2        	movi	a12, 0x260
400e3a7a:	0139      	s32i.n	a3, a1, 0
400e3a7c:	01daf2        	addmi	a15, a10, 0x100
400e3a7f:	0aed      	mov.n	a14, a10
400e3a81:	dada      	add.n	a13, a10, a13
400e3a83:	caca      	add.n	a12, a10, a12
400e3a85:	05bd      	mov.n	a11, a5
400e3a87:	02ad      	mov.n	a10, a2
400e3a89:	fe0325        	call8	400e1abc <get_arg$isra$0>
400e3a8c:	0a58      	l32i.n	a5, a10, 0
400e3a8e:	1a38      	l32i.n	a3, a10, 4
400e3a90:	00e386        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3a93:	c1e200        	mul16u	a14, a2, a0
400e3a96:	471b10        	lsi	f1, a11, 0x11c
400e3a99:	b022e0        	addx8	a2, a2, a14
400e3a9c:	02a767        	bge	a7, a6, 400e3aa2 <_vfprintf_r+0x1b66>
400e3a9f:	002046        	j	400e3b24 <_vfprintf_r+0x1be8>
400e3aa2:	f21c      	movi.n	a2, 31
400e3aa4:	482267        	blt	a2, a6, 400e3af0 <_vfprintf_r+0x1bb4>
400e3aa7:	261b      	addi.n	a2, a6, 1
400e3aa9:	10c132        	addi	a3, a1, 16
400e3aac:	976122        	s32i	a2, a1, 0x25c
400e3aaf:	02d322        	addmi	a2, a3, 0x200
400e3ab2:	1a2232        	l32i	a3, a2, 104
400e3ab5:	537b      	addi.n	a5, a3, 7
400e3ab7:	837c      	movi.n	a3, -8
400e3ab9:	103530        	and	a3, a5, a3
400e3abc:	738b      	addi.n	a7, a3, 8
400e3abe:	1a6272        	s32i	a7, a2, 104
400e3ac1:	851c      	movi.n	a5, 24
400e3ac3:	052577        	blt	a5, a7, 400e3acc <_vfprintf_r+0x1b90>
400e3ac6:	192232        	l32i	a3, a2, 100
400e3ac9:	000286        	j	400e3ad7 <_vfprintf_r+0x1b9b>
400e3acc:	042537        	blt	a5, a3, 400e3ad4 <_vfprintf_r+0x1b98>
400e3acf:	832c      	movi.n	a3, 40
400e3ad1:	1a6232        	s32i	a3, a2, 104
400e3ad4:	9c2132        	l32i	a3, a1, 0x270
400e3ad7:	9e2122        	l32i	a2, a1, 0x278
400e3ada:	10c182        	addi	a8, a1, 16
400e3add:	232a      	add.n	a2, a3, a2
400e3adf:	f8c222        	addi	a2, a2, -8
400e3ae2:	0258      	l32i.n	a5, a2, 0
400e3ae4:	1238      	l32i.n	a3, a2, 4
400e3ae6:	b02680        	addx8	a2, a6, a8
400e3ae9:	0259      	s32i.n	a5, a2, 0
400e3aeb:	1239      	s32i.n	a3, a2, 4
400e3aed:	00cbc6        	j	400e3e20 <_vfprintf_r+0x1ee4>
400e3af0:	10c192        	addi	a9, a1, 16
400e3af3:	02d922        	addmi	a2, a9, 0x200
400e3af6:	1a2232        	l32i	a3, a2, 104
400e3af9:	537b      	addi.n	a5, a3, 7
400e3afb:	837c      	movi.n	a3, -8
400e3afd:	103530        	and	a3, a5, a3
400e3b00:	638b      	addi.n	a6, a3, 8
400e3b02:	1a6262        	s32i	a6, a2, 104
400e3b05:	851c      	movi.n	a5, 24
400e3b07:	062567        	blt	a5, a6, 400e3b11 <_vfprintf_r+0x1bd5>
400e3b0a:	192232        	l32i	a3, a2, 100
400e3b0d:	0002c6        	j	400e3b1c <_vfprintf_r+0x1be0>
400e3b10:	253700        	extui	a3, a0, 23, 3
400e3b13:	832c04        	lsi	f0, a12, 0x20c
400e3b16:	1a6232        	s32i	a3, a2, 104
400e3b19:	9c2132        	l32i	a3, a1, 0x270
400e3b1c:	9e2122        	l32i	a2, a1, 0x278
400e3b1f:	232a      	add.n	a2, a3, a2
400e3b21:	f8c222        	addi	a2, a2, -8
400e3b24:	0258      	l32i.n	a5, a2, 0
400e3b26:	1238      	l32i.n	a3, a2, 4
400e3b28:	00bd06        	j	400e3e20 <_vfprintf_r+0x1ee4>
400e3b2b:	218200        	srai	a8, a0, 2
400e3b2e:	031ca0        	lsi	f10, a12, 12
400e3b31:	106830        	and	a6, a8, a3
400e3b34:	07c616        	beqz	a6, 400e3bb4 <_vfprintf_r+0x1c78>
400e3b37:	972162        	l32i	a6, a1, 0x25c
400e3b3a:	e49c      	beqz.n	a4, 400e3b5c <_vfprintf_r+0x1c20>
400e3b3c:	08a267        	bge	a2, a6, 400e3b48 <_vfprintf_r+0x1c0c>
400e3b3f:	913a      	add.n	a9, a1, a3
400e3b41:	b02290        	addx8	a2, a2, a9
400e3b44:	008a46        	j	400e3d71 <_vfprintf_r+0x1e35>
400e3b47:	c1a200        	mul16u	a10, a2, a0
400e3b4a:	a23210        	muluh	a3, a2, a1
400e3b4d:	3a48      	l32i.n	a4, a10, 12
400e3b4f:	393a      	add.n	a3, a9, a3
400e3b51:	daf201        	l32r	a0, 400da71c <heap_caps_init+0x54>
400e3b54:	0aed01        	l32r	a0, 400a6708 <_iram_end+0x18bb4>
400e3b57:	008b06        	j	400e3d87 <_vfprintf_r+0x1e4b>
400e3b5a:	e20000        	remu	a0, a0, a0
400e3b5d:	1b10c1        	l32r	a12, 400aa7a0 <_iram_end+0x1cc4c>
400e3b60:	22e047        	bbsi	a0, 4, 400e3b86 <_vfprintf_r+0x1c4a>
400e3b63:	a767b0        	lsi	f11, a7, 0x29c
400e3b66:	ac4602        	s8i	a0, a6, 172
400e3b69:	f21c00        	rems	a1, a12, a0
400e3b6c:	3b2267        	blt	a2, a6, 400e3bab <_vfprintf_r+0x1c6f>
400e3b6f:	261b      	addi.n	a2, a6, 1
400e3b71:	10c132        	addi	a3, a1, 16
400e3b74:	976122        	s32i	a2, a1, 0x25c
400e3b77:	02d322        	addmi	a2, a3, 0x200
400e3b7a:	1a2232        	l32i	a3, a2, 104
400e3b7d:	851c      	movi.n	a5, 24
400e3b7f:	734b      	addi.n	a7, a3, 4
400e3b81:	1a6272        	s32i	a7, a2, 104
400e3b84:	052577        	blt	a5, a7, 400e3b8d <_vfprintf_r+0x1c51>
400e3b87:	192222        	l32i	a2, a2, 100
400e3b8a:	000286        	j	400e3b98 <_vfprintf_r+0x1c5c>
400e3b8d:	042537        	blt	a5, a3, 400e3b95 <_vfprintf_r+0x1c59>
400e3b90:	432c      	movi.n	a3, 36
400e3b92:	1a6232        	s32i	a3, a2, 104
400e3b95:	9c2122        	l32i	a2, a1, 0x270
400e3b98:	9e2132        	l32i	a3, a1, 0x278
400e3b9b:	10c182        	addi	a8, a1, 16
400e3b9e:	323a      	add.n	a3, a2, a3
400e3ba0:	fcc332        	addi	a3, a3, -4
400e3ba3:	0358      	l32i.n	a5, a3, 0
400e3ba5:	b02680        	addx8	a2, a6, a8
400e3ba8:	008fc6        	j	400e3deb <_vfprintf_r+0x1eaf>
400e3bab:	10c192        	addi	a9, a1, 16
400e3bae:	02d922        	addmi	a2, a9, 0x200
400e3bb1:	009046        	j	400e3df6 <_vfprintf_r+0x1eba>
400e3bb4:	a02182        	l32i	a8, a1, 0x280
400e3bb7:	034c      	movi.n	a3, 64
400e3bb9:	103830        	and	a3, a8, a3
400e3bbc:	0d0316        	beqz	a3, 400e3c90 <_vfprintf_r+0x1d54>
400e3bbf:	972182        	l32i	a8, a1, 0x25c
400e3bc2:	64bc      	beqz.n	a4, 400e3bfc <_vfprintf_r+0x1cc0>
400e3bc4:	0ca287        	bge	a2, a8, 400e3bd4 <_vfprintf_r+0x1c98>
400e3bc7:	10c192        	addi	a9, a1, 16
400e3bca:	b02290        	addx8	a2, a2, a9
400e3bcd:	001252        	l16ui	a5, a2, 0
400e3bd0:	0008c6        	j	400e3bf7 <_vfprintf_r+0x1cbb>
400e3bd3:	c1a200        	mul16u	a10, a2, a0
400e3bd6:	a23210        	muluh	a3, a2, a1
400e3bd9:	3a48      	l32i.n	a4, a10, 12
400e3bdb:	d23a      	add.n	a13, a2, a3
400e3bdd:	c24ca2        	s8i	a10, a12, 194
400e3be0:	f260a2        	s32i	a10, a0, 0x3c8
400e3be3:	01da      	add.n	a0, a1, a13
400e3be5:	0aed      	mov.n	a14, a10
400e3be7:	dada      	add.n	a13, a10, a13
400e3be9:	caca      	add.n	a12, a10, a12
400e3beb:	05bd      	mov.n	a11, a5
400e3bed:	0139      	s32i.n	a3, a1, 0
400e3bef:	02ad      	mov.n	a10, a2
400e3bf1:	fdeca5        	call8	400e1abc <get_arg$isra$0>
400e3bf4:	001a52        	l16ui	a5, a10, 0
400e3bf7:	063d      	mov.n	a3, a6
400e3bf9:	008946        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3bfc:	671b      	addi.n	a6, a7, 1
400e3bfe:	0ea787        	bge	a7, a8, 400e3c10 <_vfprintf_r+0x1cd4>
400e3c01:	10c1e2        	addi	a14, a1, 16
400e3c04:	b022e0        	addx8	a2, a2, a14
400e3c07:	001252        	l16ui	a5, a2, 0
400e3c0a:	043d      	mov.n	a3, a4
400e3c0c:	001e46        	j	400e3c89 <_vfprintf_r+0x1d4d>
400e3c0f:	f21c00        	rems	a1, a12, a0
400e3c12:	422287        	blt	a2, a8, 400e3c58 <_vfprintf_r+0x1d1c>
400e3c15:	281b      	addi.n	a2, a8, 1
400e3c17:	10c132        	addi	a3, a1, 16
400e3c1a:	976122        	s32i	a2, a1, 0x25c
400e3c1d:	02d322        	addmi	a2, a3, 0x200
400e3c20:	1a2232        	l32i	a3, a2, 104
400e3c23:	841c      	movi.n	a4, 24
400e3c25:	534b      	addi.n	a5, a3, 4
400e3c27:	1a6252        	s32i	a5, a2, 104
400e3c2a:	062457        	blt	a4, a5, 400e3c34 <_vfprintf_r+0x1cf8>
400e3c2d:	192222        	l32i	a2, a2, 100
400e3c30:	0002c6        	j	400e3c3f <_vfprintf_r+0x1d03>
400e3c33:	243700        	extui	a3, a0, 7, 3
400e3c36:	432c04        	lsi	f0, a12, 0x10c
400e3c39:	1a6232        	s32i	a3, a2, 104
400e3c3c:	9c2122        	l32i	a2, a1, 0x270
400e3c3f:	9e2132        	l32i	a3, a1, 0x278
400e3c42:	10c142        	addi	a4, a1, 16
400e3c45:	323a      	add.n	a3, a2, a3
400e3c47:	fcc332        	addi	a3, a3, -4
400e3c4a:	0358      	l32i.n	a5, a3, 0
400e3c4c:	b02840        	addx8	a2, a8, a4
400e3c4f:	0259      	s32i.n	a5, a2, 0
400e3c51:	f45050        	extui	a5, a5, 0, 16
400e3c54:	000bc6        	j	400e3c87 <_vfprintf_r+0x1d4b>
400e3c57:	c15200        	mul16u	a5, a2, a0
400e3c5a:	d52210        	extui	a2, a1, 18, 14
400e3c5d:	223202        	lsi	f0, a2, 136
400e3c60:	1c1a      	add.n	a1, a12, a1
400e3c62:	534b84        	lsi	f8, a11, 0x14c
400e3c65:	1a6252        	s32i	a5, a2, 104
400e3c68:	052457        	blt	a4, a5, 400e3c71 <_vfprintf_r+0x1d35>
400e3c6b:	192232        	l32i	a3, a2, 100
400e3c6e:	000286        	j	400e3c7c <_vfprintf_r+0x1d40>
400e3c71:	042437        	blt	a4, a3, 400e3c79 <_vfprintf_r+0x1d3d>
400e3c74:	432c      	movi.n	a3, 36
400e3c76:	1a6232        	s32i	a3, a2, 104
400e3c79:	9c2132        	l32i	a3, a1, 0x270
400e3c7c:	9e2122        	l32i	a2, a1, 0x278
400e3c7f:	232a      	add.n	a2, a3, a2
400e3c81:	fcc222        	addi	a2, a2, -4
400e3c84:	001252        	l16ui	a5, a2, 0
400e3c87:	030c      	movi.n	a3, 0
400e3c89:	067d      	mov.n	a7, a6
400e3c8b:	0064c6        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3c8e:	820000        	mull	a0, a0, a0
400e3c91:	62a021        	l32r	a2, 400bc714 <_iram_end+0x2ebc0>
400e3c94:	979721        	l32r	a2, 400c9af0 <_rtc_text_end+0x9af0>
400e3c97:	02e8      	l32i.n	a14, a2, 0
400e3c99:	003246        	j	400e3d66 <_vfprintf_r+0x1e2a>
400e3c9c:	44bc      	beqz.n	a4, 400e3cd4 <_vfprintf_r+0x1d98>
400e3c9e:	0ba267        	bge	a2, a6, 400e3cad <_vfprintf_r+0x1d71>
400e3ca1:	10c192        	addi	a9, a1, 16
400e3ca4:	b02290        	addx8	a2, a2, a9
400e3ca7:	000252        	l8ui	a5, a2, 0
400e3caa:	005d06        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3cad:	10c1a2        	addi	a10, a1, 16
400e3cb0:	48a242        	movi	a4, 0x248
400e3cb3:	4a4a      	add.n	a4, a10, a4
400e3cb5:	4ca2d2        	movi	a13, 0x24c
400e3cb8:	60a2c2        	movi	a12, 0x260
400e3cbb:	01daf2        	addmi	a15, a10, 0x100
400e3cbe:	0aed      	mov.n	a14, a10
400e3cc0:	dada      	add.n	a13, a10, a13
400e3cc2:	caca      	add.n	a12, a10, a12
400e3cc4:	05bd      	mov.n	a11, a5
400e3cc6:	0149      	s32i.n	a4, a1, 0
400e3cc8:	02ad      	mov.n	a10, a2
400e3cca:	fddf25        	call8	400e1abc <get_arg$isra$0>
400e3ccd:	000a52        	l8ui	a5, a10, 0
400e3cd0:	005386        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3cd3:	871b00        	lsi	f0, a11, 0x21c
400e3cd6:	0da767        	bge	a7, a6, 400e3ce7 <_vfprintf_r+0x1dab>
400e3cd9:	10c1e2        	addi	a14, a1, 16
400e3cdc:	b022e0        	addx8	a2, a2, a14
400e3cdf:	000252        	l8ui	a5, a2, 0
400e3ce2:	043d      	mov.n	a3, a4
400e3ce4:	001e46        	j	400e3d61 <_vfprintf_r+0x1e25>
400e3ce7:	f21c      	movi.n	a2, 31
400e3ce9:	432267        	blt	a2, a6, 400e3d30 <_vfprintf_r+0x1df4>
400e3cec:	261b      	addi.n	a2, a6, 1
400e3cee:	10c132        	addi	a3, a1, 16
400e3cf1:	976122        	s32i	a2, a1, 0x25c
400e3cf4:	02d322        	addmi	a2, a3, 0x200
400e3cf7:	1a2232        	l32i	a3, a2, 104
400e3cfa:	841c      	movi.n	a4, 24
400e3cfc:	534b      	addi.n	a5, a3, 4
400e3cfe:	1a6252        	s32i	a5, a2, 104
400e3d01:	072457        	blt	a4, a5, 400e3d0c <_vfprintf_r+0x1dd0>
400e3d04:	192232        	l32i	a3, a2, 100
400e3d07:	000306        	j	400e3d17 <_vfprintf_r+0x1ddb>
400e3d0a:	370000        	lsi	f0, a0, 220
400e3d0d:	2c0424        	lsi	f2, a4, 176
400e3d10:	623243        	lsi	f4, a2, 0x188
400e3d13:	321a      	add.n	a3, a2, a1
400e3d15:	229c21        	l32r	a2, 400ac788 <_iram_end+0x1ec34>
400e3d18:	429e21        	l32r	a2, 400b4790 <_iram_end+0x26c3c>
400e3d1b:	2a10c1        	l32r	a12, 400ae55c <_iram_end+0x20a08>
400e3d1e:	c22223        	lsi	f2, a2, 0x308
400e3d21:	58fc      	bnez.n	a8, 400e3d5a <_vfprintf_r+0x1e1e>
400e3d23:	264002        	s8i	a0, a0, 38
400e3d26:	0259b0        	andb	b5, b9, b11
400e3d29:	745050        	extui	a5, a5, 0, 8
400e3d2c:	000bc6        	j	400e3d5f <_vfprintf_r+0x1e23>
400e3d2f:	c15200        	mul16u	a5, a2, a0
400e3d32:	d52210        	extui	a2, a1, 18, 14
400e3d35:	223202        	lsi	f0, a2, 136
400e3d38:	1c1a      	add.n	a1, a12, a1
400e3d3a:	534b84        	lsi	f8, a11, 0x14c
400e3d3d:	1a6252        	s32i	a5, a2, 104
400e3d40:	052457        	blt	a4, a5, 400e3d49 <_vfprintf_r+0x1e0d>
400e3d43:	192232        	l32i	a3, a2, 100
400e3d46:	000286        	j	400e3d54 <_vfprintf_r+0x1e18>
400e3d49:	042437        	blt	a4, a3, 400e3d51 <_vfprintf_r+0x1e15>
400e3d4c:	432c      	movi.n	a3, 36
400e3d4e:	1a6232        	s32i	a3, a2, 104
400e3d51:	9c2132        	l32i	a3, a1, 0x270
400e3d54:	9e2122        	l32i	a2, a1, 0x278
400e3d57:	232a      	add.n	a2, a3, a2
400e3d59:	fcc222        	addi	a2, a2, -4
400e3d5c:	000252        	l8ui	a5, a2, 0
400e3d5f:	030c      	movi.n	a3, 0
400e3d61:	087d      	mov.n	a7, a8
400e3d63:	002ec6        	j	400e3e22 <_vfprintf_r+0x1ee6>
400e3d66:	64bc      	beqz.n	a4, 400e3da0 <_vfprintf_r+0x1e64>
400e3d68:	0ca267        	bge	a2, a6, 400e3d78 <_vfprintf_r+0x1e3c>
400e3d6b:	10c162        	addi	a6, a1, 16
400e3d6e:	b02260        	addx8	a2, a2, a6
400e3d71:	0258      	l32i.n	a5, a2, 0
400e3d73:	0008c6        	j	400e3d9a <_vfprintf_r+0x1e5e>
400e3d76:	820000        	mull	a0, a0, a0
400e3d79:	3210c1        	l32r	a12, 400b05bc <_iram_end+0x22a68>
400e3d7c:	3a48a2        	s8i	a10, a8, 58
400e3d7f:	3938      	l32i.n	a3, a9, 12
400e3d81:	d8f201        	l32r	a0, 400da14c <esp_vfs_lseek+0x28>
400e3d84:	08ed01        	l32r	a0, 400a6138 <_iram_end+0x185e4>
400e3d87:	4ca2d2        	movi	a13, 0x24c
400e3d8a:	60a2c2        	movi	a12, 0x260
400e3d8d:	05bd      	mov.n	a11, a5
400e3d8f:	deda      	add.n	a13, a14, a13
400e3d91:	ceca      	add.n	a12, a14, a12
400e3d93:	02ad      	mov.n	a10, a2
400e3d95:	fdd265        	call8	400e1abc <get_arg$isra$0>
400e3d98:	0a58      	l32i.n	a5, a10, 0
400e3d9a:	074d      	mov.n	a4, a7
400e3d9c:	001f86        	j	400e3e1e <_vfprintf_r+0x1ee2>
400e3d9f:	c19200        	mul16u	a9, a2, a0
400e3da2:	471b10        	lsi	f1, a11, 0x11c
400e3da5:	b02290        	addx8	a2, a2, a9
400e3da8:	702767        	blt	a7, a6, 400e3e1c <_vfprintf_r+0x1ee0>
400e3dab:	f21c      	movi.n	a2, 31
400e3dad:	3f2267        	blt	a2, a6, 400e3df0 <_vfprintf_r+0x1eb4>
400e3db0:	261b      	addi.n	a2, a6, 1
400e3db2:	10c1a2        	addi	a10, a1, 16
400e3db5:	976122        	s32i	a2, a1, 0x25c
400e3db8:	02da22        	addmi	a2, a10, 0x200
400e3dbb:	1a2232        	l32i	a3, a2, 104
400e3dbe:	851c      	movi.n	a5, 24
400e3dc0:	734b      	addi.n	a7, a3, 4
400e3dc2:	1a6272        	s32i	a7, a2, 104
400e3dc5:	072577        	blt	a5, a7, 400e3dd0 <_vfprintf_r+0x1e94>
400e3dc8:	192232        	l32i	a3, a2, 100
400e3dcb:	000306        	j	400e3ddb <_vfprintf_r+0x1e9f>
400e3dce:	370000        	lsi	f0, a0, 220
400e3dd1:	2c0425        	call8	4010fe14 <_etext+0x23943>
400e3dd4:	623243        	lsi	f4, a2, 0x188
400e3dd7:	321a      	add.n	a3, a2, a1
400e3dd9:	229c21        	l32r	a2, 400ac84c <_iram_end+0x1ecf8>
400e3ddc:	e29e21        	l32r	a2, 400dc854 <_svfprintf_r+0x53c>
400e3ddf:	2a10c1        	l32r	a12, 400ae620 <_iram_end+0x20acc>
400e3de2:	c22223        	lsi	f2, a2, 0x308
400e3de5:	58fc      	bnez.n	a8, 400e3e1e <_vfprintf_r+0x1ee2>
400e3de7:	26e002        	s32c1i	a0, a0, 152
400e3dea:	0259b0        	andb	b5, b9, b11
400e3ded:	000b46        	j	400e3e1e <_vfprintf_r+0x1ee2>
400e3df0:	10c132        	addi	a3, a1, 16
400e3df3:	02d322        	addmi	a2, a3, 0x200
400e3df6:	1a2232        	l32i	a3, a2, 104
400e3df9:	851c      	movi.n	a5, 24
400e3dfb:	634b      	addi.n	a6, a3, 4
400e3dfd:	1a6262        	s32i	a6, a2, 104
400e3e00:	052567        	blt	a5, a6, 400e3e09 <_vfprintf_r+0x1ecd>
400e3e03:	192232        	l32i	a3, a2, 100
400e3e06:	000286        	j	400e3e14 <_vfprintf_r+0x1ed8>
400e3e09:	042537        	blt	a5, a3, 400e3e11 <_vfprintf_r+0x1ed5>
400e3e0c:	432c      	movi.n	a3, 36
400e3e0e:	1a6232        	s32i	a3, a2, 104
400e3e11:	9c2132        	l32i	a3, a1, 0x270
400e3e14:	9e2122        	l32i	a2, a1, 0x278
400e3e17:	232a      	add.n	a2, a3, a2
400e3e19:	fcc222        	addi	a2, a2, -4
400e3e1c:	0258      	l32i.n	a5, a2, 0
400e3e1e:	030c      	movi.n	a3, 0
400e3e20:	047d      	mov.n	a7, a4
400e3e22:	120c      	movi.n	a2, 1
400e3e24:	010306        	j	400e4234 <_vfprintf_r+0x22f8>
400e3e27:	b27461        	l32r	a6, 400d07f8 <_flash_cache_start+0x7e0>
400e3e2a:	b56162        	s32i	a6, a1, 0x2d4
400e3e2d:	a02182        	l32i	a8, a1, 0x280
400e3e30:	02e857        	bbsi	a8, 5, 400e3e36 <_vfprintf_r+0x1efa>
400e3e33:	003546        	j	400e3f0c <_vfprintf_r+0x1fd0>
400e3e36:	972162        	l32i	a6, a1, 0x25c
400e3e39:	74bc      	beqz.n	a4, 400e3e74 <_vfprintf_r+0x1f38>
400e3e3b:	0ca267        	bge	a2, a6, 400e3e4b <_vfprintf_r+0x1f0f>
400e3e3e:	10c192        	addi	a9, a1, 16
400e3e41:	b02290        	addx8	a2, a2, a9
400e3e44:	0258      	l32i.n	a5, a2, 0
400e3e46:	1238      	l32i.n	a3, a2, 4
400e3e48:	00ec86        	j	400e41fe <_vfprintf_r+0x22c2>
400e3e4b:	10c1a2        	addi	a10, a1, 16
400e3e4e:	48a232        	movi	a3, 0x248
400e3e51:	3a3a      	add.n	a3, a10, a3
400e3e53:	4ca2d2        	movi	a13, 0x24c
400e3e56:	60a2c2        	movi	a12, 0x260
400e3e59:	0139      	s32i.n	a3, a1, 0
400e3e5b:	01daf2        	addmi	a15, a10, 0x100
400e3e5e:	0aed      	mov.n	a14, a10
400e3e60:	dada      	add.n	a13, a10, a13
400e3e62:	caca      	add.n	a12, a10, a12
400e3e64:	05bd      	mov.n	a11, a5
400e3e66:	20a220        	or	a10, a2, a2
400e3e69:	fdc525        	call8	400e1abc <get_arg$isra$0>
400e3e6c:	0a58      	l32i.n	a5, a10, 0
400e3e6e:	1a38      	l32i.n	a3, a10, 4
400e3e70:	00e286        	j	400e41fe <_vfprintf_r+0x22c2>
400e3e73:	c1e200        	mul16u	a14, a2, a0
400e3e76:	471b10        	lsi	f1, a11, 0x11c
400e3e79:	b022e0        	addx8	a2, a2, a14
400e3e7c:	02a767        	bge	a7, a6, 400e3e82 <_vfprintf_r+0x1f46>
400e3e7f:	002046        	j	400e3f04 <_vfprintf_r+0x1fc8>
400e3e82:	f21c      	movi.n	a2, 31
400e3e84:	482267        	blt	a2, a6, 400e3ed0 <_vfprintf_r+0x1f94>
400e3e87:	261b      	addi.n	a2, a6, 1
400e3e89:	10c132        	addi	a3, a1, 16
400e3e8c:	976122        	s32i	a2, a1, 0x25c
400e3e8f:	02d322        	addmi	a2, a3, 0x200
400e3e92:	1a2232        	l32i	a3, a2, 104
400e3e95:	537b      	addi.n	a5, a3, 7
400e3e97:	837c      	movi.n	a3, -8
400e3e99:	103530        	and	a3, a5, a3
400e3e9c:	738b      	addi.n	a7, a3, 8
400e3e9e:	1a6272        	s32i	a7, a2, 104
400e3ea1:	851c      	movi.n	a5, 24
400e3ea3:	052577        	blt	a5, a7, 400e3eac <_vfprintf_r+0x1f70>
400e3ea6:	192232        	l32i	a3, a2, 100
400e3ea9:	000286        	j	400e3eb7 <_vfprintf_r+0x1f7b>
400e3eac:	042537        	blt	a5, a3, 400e3eb4 <_vfprintf_r+0x1f78>
400e3eaf:	832c      	movi.n	a3, 40
400e3eb1:	1a6232        	s32i	a3, a2, 104
400e3eb4:	9c2132        	l32i	a3, a1, 0x270
400e3eb7:	9e2122        	l32i	a2, a1, 0x278
400e3eba:	10c182        	addi	a8, a1, 16
400e3ebd:	232a      	add.n	a2, a3, a2
400e3ebf:	f8c222        	addi	a2, a2, -8
400e3ec2:	0258      	l32i.n	a5, a2, 0
400e3ec4:	1238      	l32i.n	a3, a2, 4
400e3ec6:	b02680        	addx8	a2, a6, a8
400e3ec9:	0259      	s32i.n	a5, a2, 0
400e3ecb:	1239      	s32i.n	a3, a2, 4
400e3ecd:	00cac6        	j	400e41fc <_vfprintf_r+0x22c0>
400e3ed0:	10c192        	addi	a9, a1, 16
400e3ed3:	02d922        	addmi	a2, a9, 0x200
400e3ed6:	1a2232        	l32i	a3, a2, 104
400e3ed9:	537b      	addi.n	a5, a3, 7
400e3edb:	837c      	movi.n	a3, -8
400e3edd:	103530        	and	a3, a5, a3
400e3ee0:	638b      	addi.n	a6, a3, 8
400e3ee2:	1a6262        	s32i	a6, a2, 104
400e3ee5:	851c      	movi.n	a5, 24
400e3ee7:	062567        	blt	a5, a6, 400e3ef1 <_vfprintf_r+0x1fb5>
400e3eea:	192232        	l32i	a3, a2, 100
400e3eed:	0002c6        	j	400e3efc <_vfprintf_r+0x1fc0>
400e3ef0:	253700        	extui	a3, a0, 23, 3
400e3ef3:	832c04        	lsi	f0, a12, 0x20c
400e3ef6:	1a6232        	s32i	a3, a2, 104
400e3ef9:	9c2132        	l32i	a3, a1, 0x270
400e3efc:	9e2122        	l32i	a2, a1, 0x278
400e3eff:	232a      	add.n	a2, a3, a2
400e3f01:	f8c222        	addi	a2, a2, -8
400e3f04:	0258      	l32i.n	a5, a2, 0
400e3f06:	1238      	l32i.n	a3, a2, 4
400e3f08:	00bc06        	j	400e41fc <_vfprintf_r+0x22c0>
400e3f0b:	218200        	srai	a8, a0, 2
400e3f0e:	031ca0        	lsi	f10, a12, 12
400e3f11:	106830        	and	a6, a8, a3
400e3f14:	07d616        	beqz	a6, 400e3f95 <_vfprintf_r+0x2059>
400e3f17:	972162        	l32i	a6, a1, 0x25c
400e3f1a:	e49c      	beqz.n	a4, 400e3f3c <_vfprintf_r+0x2000>
400e3f1c:	08a267        	bge	a2, a6, 400e3f28 <_vfprintf_r+0x1fec>
400e3f1f:	913a      	add.n	a9, a1, a3
400e3f21:	b02290        	addx8	a2, a2, a9
400e3f24:	008a06        	j	400e4150 <_vfprintf_r+0x2214>
400e3f27:	c1a200        	mul16u	a10, a2, a0
400e3f2a:	a23210        	muluh	a3, a2, a1
400e3f2d:	3a48      	l32i.n	a4, a10, 12
400e3f2f:	393a      	add.n	a3, a9, a3
400e3f31:	daf201        	l32r	a0, 400daafc <__assert+0x8>
400e3f34:	0aed01        	l32r	a0, 400a6ae8 <_iram_end+0x18f94>
400e3f37:	008a46        	j	400e4164 <_vfprintf_r+0x2228>
400e3f3a:	e20000        	remu	a0, a0, a0
400e3f3d:	1b10c1        	l32r	a12, 400aab80 <_iram_end+0x1d02c>
400e3f40:	22e047        	bbsi	a0, 4, 400e3f66 <_vfprintf_r+0x202a>
400e3f43:	a767b0        	lsi	f11, a7, 0x29c
400e3f46:	ab4602        	s8i	a0, a6, 171
400e3f49:	f21c00        	rems	a1, a12, a0
400e3f4c:	3c2267        	blt	a2, a6, 400e3f8c <_vfprintf_r+0x2050>
400e3f4f:	261b      	addi.n	a2, a6, 1
400e3f51:	10c132        	addi	a3, a1, 16
400e3f54:	976122        	s32i	a2, a1, 0x25c
400e3f57:	02d322        	addmi	a2, a3, 0x200
400e3f5a:	1a2232        	l32i	a3, a2, 104
400e3f5d:	851c      	movi.n	a5, 24
400e3f5f:	734b      	addi.n	a7, a3, 4
400e3f61:	1a6272        	s32i	a7, a2, 104
400e3f64:	052577        	blt	a5, a7, 400e3f6d <_vfprintf_r+0x2031>
400e3f67:	192222        	l32i	a2, a2, 100
400e3f6a:	000286        	j	400e3f78 <_vfprintf_r+0x203c>
400e3f6d:	042537        	blt	a5, a3, 400e3f75 <_vfprintf_r+0x2039>
400e3f70:	432c      	movi.n	a3, 36
400e3f72:	1a6232        	s32i	a3, a2, 104
400e3f75:	9c2122        	l32i	a2, a1, 0x270
400e3f78:	9e2132        	l32i	a3, a1, 0x278
400e3f7b:	10c182        	addi	a8, a1, 16
400e3f7e:	323a      	add.n	a3, a2, a3
400e3f80:	fcc332        	addi	a3, a3, -4
400e3f83:	0358      	l32i.n	a5, a3, 0
400e3f85:	b02680        	addx8	a2, a6, a8
400e3f88:	008ec6        	j	400e41c7 <_vfprintf_r+0x228b>
400e3f8b:	c19200        	mul16u	a9, a2, a0
400e3f8e:	d92210        	lsi	f1, a2, 0x364
400e3f91:	8f0602        	l8ui	a0, a6, 143
400e3f94:	218200        	srai	a8, a0, 2
400e3f97:	034ca0        	lsi	f10, a12, 12
400e3f9a:	103830        	and	a3, a8, a3
400e3f9d:	0cf316        	beqz	a3, 400e4070 <_vfprintf_r+0x2134>
400e3fa0:	972182        	l32i	a8, a1, 0x25c
400e3fa3:	54bc      	beqz.n	a4, 400e3fdc <_vfprintf_r+0x20a0>
400e3fa5:	0ba287        	bge	a2, a8, 400e3fb4 <_vfprintf_r+0x2078>
400e3fa8:	10c192        	addi	a9, a1, 16
400e3fab:	b02290        	addx8	a2, a2, a9
400e3fae:	001252        	l16ui	a5, a2, 0
400e3fb1:	000886        	j	400e3fd7 <_vfprintf_r+0x209b>
400e3fb4:	10c1a2        	addi	a10, a1, 16
400e3fb7:	48a232        	movi	a3, 0x248
400e3fba:	3a3a      	add.n	a3, a10, a3
400e3fbc:	4ca2d2        	movi	a13, 0x24c
400e3fbf:	60a2c2        	movi	a12, 0x260
400e3fc2:	01daf2        	addmi	a15, a10, 0x100
400e3fc5:	0aed      	mov.n	a14, a10
400e3fc7:	dada      	add.n	a13, a10, a13
400e3fc9:	caca      	add.n	a12, a10, a12
400e3fcb:	05bd      	mov.n	a11, a5
400e3fcd:	0139      	s32i.n	a3, a1, 0
400e3fcf:	02ad      	mov.n	a10, a2
400e3fd1:	fdaea5        	call8	400e1abc <get_arg$isra$0>
400e3fd4:	001a52        	l16ui	a5, a10, 0
400e3fd7:	063d      	mov.n	a3, a6
400e3fd9:	008846        	j	400e41fe <_vfprintf_r+0x22c2>
400e3fdc:	671b      	addi.n	a6, a7, 1
400e3fde:	0ea787        	bge	a7, a8, 400e3ff0 <_vfprintf_r+0x20b4>
400e3fe1:	10c1e2        	addi	a14, a1, 16
400e3fe4:	b022e0        	addx8	a2, a2, a14
400e3fe7:	001252        	l16ui	a5, a2, 0
400e3fea:	043d      	mov.n	a3, a4
400e3fec:	001e46        	j	400e4069 <_vfprintf_r+0x212d>
400e3fef:	f21c00        	rems	a1, a12, a0
400e3ff2:	422287        	blt	a2, a8, 400e4038 <_vfprintf_r+0x20fc>
400e3ff5:	281b      	addi.n	a2, a8, 1
400e3ff7:	10c132        	addi	a3, a1, 16
400e3ffa:	976122        	s32i	a2, a1, 0x25c
400e3ffd:	02d322        	addmi	a2, a3, 0x200
400e4000:	1a2232        	l32i	a3, a2, 104
400e4003:	841c      	movi.n	a4, 24
400e4005:	534b      	addi.n	a5, a3, 4
400e4007:	1a6252        	s32i	a5, a2, 104
400e400a:	062457        	blt	a4, a5, 400e4014 <_vfprintf_r+0x20d8>
400e400d:	192222        	l32i	a2, a2, 100
400e4010:	0002c6        	j	400e401f <_vfprintf_r+0x20e3>
400e4013:	243700        	extui	a3, a0, 7, 3
400e4016:	432c04        	lsi	f0, a12, 0x10c
400e4019:	1a6232        	s32i	a3, a2, 104
400e401c:	9c2122        	l32i	a2, a1, 0x270
400e401f:	9e2132        	l32i	a3, a1, 0x278
400e4022:	10c142        	addi	a4, a1, 16
400e4025:	323a      	add.n	a3, a2, a3
400e4027:	fcc332        	addi	a3, a3, -4
400e402a:	0358      	l32i.n	a5, a3, 0
400e402c:	b02840        	addx8	a2, a8, a4
400e402f:	0259      	s32i.n	a5, a2, 0
400e4031:	f45050        	extui	a5, a5, 0, 16
400e4034:	000bc6        	j	400e4067 <_vfprintf_r+0x212b>
400e4037:	c15200        	mul16u	a5, a2, a0
400e403a:	d52210        	extui	a2, a1, 18, 14
400e403d:	223202        	lsi	f0, a2, 136
400e4040:	1c1a      	add.n	a1, a12, a1
400e4042:	534b84        	lsi	f8, a11, 0x14c
400e4045:	1a6252        	s32i	a5, a2, 104
400e4048:	052457        	blt	a4, a5, 400e4051 <_vfprintf_r+0x2115>
400e404b:	192232        	l32i	a3, a2, 100
400e404e:	000286        	j	400e405c <_vfprintf_r+0x2120>
400e4051:	042437        	blt	a4, a3, 400e4059 <_vfprintf_r+0x211d>
400e4054:	432c      	movi.n	a3, 36
400e4056:	1a6232        	s32i	a3, a2, 104
400e4059:	9c2132        	l32i	a3, a1, 0x270
400e405c:	9e2122        	l32i	a2, a1, 0x278
400e405f:	232a      	add.n	a2, a3, a2
400e4061:	fcc222        	addi	a2, a2, -4
400e4064:	001252        	l16ui	a5, a2, 0
400e4067:	030c      	movi.n	a3, 0
400e4069:	067d      	mov.n	a7, a6
400e406b:	0063c6        	j	400e41fe <_vfprintf_r+0x22c2>
400e406e:	820000        	mull	a0, a0, a0
400e4071:	62a021        	l32r	a2, 400bcaf4 <_iram_end+0x2efa0>
400e4074:	979721        	l32r	a2, 400c9ed0 <_rtc_text_end+0x9ed0>
400e4077:	02e8      	l32i.n	a14, a2, 0
400e4079:	003206        	j	400e4145 <_vfprintf_r+0x2209>
400e407c:	44bc      	beqz.n	a4, 400e40b4 <_vfprintf_r+0x2178>
400e407e:	0ba267        	bge	a2, a6, 400e408d <_vfprintf_r+0x2151>
400e4081:	10c192        	addi	a9, a1, 16
400e4084:	b02290        	addx8	a2, a2, a9
400e4087:	000252        	l8ui	a5, a2, 0
400e408a:	005c06        	j	400e41fe <_vfprintf_r+0x22c2>
400e408d:	10c1a2        	addi	a10, a1, 16
400e4090:	48a242        	movi	a4, 0x248
400e4093:	4a4a      	add.n	a4, a10, a4
400e4095:	4ca2d2        	movi	a13, 0x24c
400e4098:	60a2c2        	movi	a12, 0x260
400e409b:	01daf2        	addmi	a15, a10, 0x100
400e409e:	0aed      	mov.n	a14, a10
400e40a0:	dada      	add.n	a13, a10, a13
400e40a2:	caca      	add.n	a12, a10, a12
400e40a4:	05bd      	mov.n	a11, a5
400e40a6:	0149      	s32i.n	a4, a1, 0
400e40a8:	02ad      	mov.n	a10, a2
400e40aa:	fda125        	call8	400e1abc <get_arg$isra$0>
400e40ad:	000a52        	l8ui	a5, a10, 0
400e40b0:	005286        	j	400e41fe <_vfprintf_r+0x22c2>
400e40b3:	871b00        	lsi	f0, a11, 0x21c
400e40b6:	0ea767        	bge	a7, a6, 400e40c8 <_vfprintf_r+0x218c>
400e40b9:	10c1e2        	addi	a14, a1, 16
400e40bc:	b022e0        	addx8	a2, a2, a14
400e40bf:	000252        	l8ui	a5, a2, 0
400e40c2:	043d      	mov.n	a3, a4
400e40c4:	001e06        	j	400e4140 <_vfprintf_r+0x2204>
400e40c7:	f21c00        	rems	a1, a12, a0
400e40ca:	412267        	blt	a2, a6, 400e410f <_vfprintf_r+0x21d3>
400e40cd:	261b      	addi.n	a2, a6, 1
400e40cf:	10c132        	addi	a3, a1, 16
400e40d2:	976122        	s32i	a2, a1, 0x25c
400e40d5:	02d322        	addmi	a2, a3, 0x200
400e40d8:	1a2232        	l32i	a3, a2, 104
400e40db:	841c      	movi.n	a4, 24
400e40dd:	534b      	addi.n	a5, a3, 4
400e40df:	1a6252        	s32i	a5, a2, 104
400e40e2:	062457        	blt	a4, a5, 400e40ec <_vfprintf_r+0x21b0>
400e40e5:	192232        	l32i	a3, a2, 100
400e40e8:	0002c6        	j	400e40f7 <_vfprintf_r+0x21bb>
400e40eb:	243700        	extui	a3, a0, 7, 3
400e40ee:	432c04        	lsi	f0, a12, 0x10c
400e40f1:	1a6232        	s32i	a3, a2, 104
400e40f4:	9c2132        	l32i	a3, a1, 0x270
400e40f7:	9e2122        	l32i	a2, a1, 0x278
400e40fa:	10c142        	addi	a4, a1, 16
400e40fd:	232a      	add.n	a2, a3, a2
400e40ff:	fcc222        	addi	a2, a2, -4
400e4102:	0258      	l32i.n	a5, a2, 0
400e4104:	b02640        	addx8	a2, a6, a4
400e4107:	0259      	s32i.n	a5, a2, 0
400e4109:	745050        	extui	a5, a5, 0, 8
400e410c:	000b86        	j	400e413e <_vfprintf_r+0x2202>
400e410f:	10c152        	addi	a5, a1, 16
400e4112:	02d522        	addmi	a2, a5, 0x200
400e4115:	1a2232        	l32i	a3, a2, 104
400e4118:	841c      	movi.n	a4, 24
400e411a:	534b      	addi.n	a5, a3, 4
400e411c:	1a6252        	s32i	a5, a2, 104
400e411f:	052457        	blt	a4, a5, 400e4128 <_vfprintf_r+0x21ec>
400e4122:	192232        	l32i	a3, a2, 100
400e4125:	000286        	j	400e4133 <_vfprintf_r+0x21f7>
400e4128:	042437        	blt	a4, a3, 400e4130 <_vfprintf_r+0x21f4>
400e412b:	432c      	movi.n	a3, 36
400e412d:	1a6232        	s32i	a3, a2, 104
400e4130:	9c2132        	l32i	a3, a1, 0x270
400e4133:	9e2122        	l32i	a2, a1, 0x278
400e4136:	232a      	add.n	a2, a3, a2
400e4138:	fcc222        	addi	a2, a2, -4
400e413b:	000252        	l8ui	a5, a2, 0
400e413e:	030c      	movi.n	a3, 0
400e4140:	087d      	mov.n	a7, a8
400e4142:	002e06        	j	400e41fe <_vfprintf_r+0x22c2>
400e4145:	34bc      	beqz.n	a4, 400e417c <_vfprintf_r+0x2240>
400e4147:	0aa267        	bge	a2, a6, 400e4155 <_vfprintf_r+0x2219>
400e414a:	10c162        	addi	a6, a1, 16
400e414d:	b02260        	addx8	a2, a2, a6
400e4150:	0258      	l32i.n	a5, a2, 0
400e4152:	000846        	j	400e4177 <_vfprintf_r+0x223b>
400e4155:	10c182        	addi	a8, a1, 16
400e4158:	48a232        	movi	a3, 0x248
400e415b:	383a      	add.n	a3, a8, a3
400e415d:	0139      	s32i.n	a3, a1, 0
400e415f:	01d8f2        	addmi	a15, a8, 0x100
400e4162:	08ed      	mov.n	a14, a8
400e4164:	4ca2d2        	movi	a13, 0x24c
400e4167:	60a2c2        	movi	a12, 0x260
400e416a:	05bd      	mov.n	a11, a5
400e416c:	deda      	add.n	a13, a14, a13
400e416e:	ceca      	add.n	a12, a14, a12
400e4170:	02ad      	mov.n	a10, a2
400e4172:	fd94a5        	call8	400e1abc <get_arg$isra$0>
400e4175:	0a58      	l32i.n	a5, a10, 0
400e4177:	074d      	mov.n	a4, a7
400e4179:	001f46        	j	400e41fa <_vfprintf_r+0x22be>
400e417c:	10c192        	addi	a9, a1, 16
400e417f:	471b      	addi.n	a4, a7, 1
400e4181:	b02290        	addx8	a2, a2, a9
400e4184:	702767        	blt	a7, a6, 400e41f8 <_vfprintf_r+0x22bc>
400e4187:	f21c      	movi.n	a2, 31
400e4189:	3f2267        	blt	a2, a6, 400e41cc <_vfprintf_r+0x2290>
400e418c:	261b      	addi.n	a2, a6, 1
400e418e:	10c1a2        	addi	a10, a1, 16
400e4191:	976122        	s32i	a2, a1, 0x25c
400e4194:	02da22        	addmi	a2, a10, 0x200
400e4197:	1a2232        	l32i	a3, a2, 104
400e419a:	851c      	movi.n	a5, 24
400e419c:	734b      	addi.n	a7, a3, 4
400e419e:	1a6272        	s32i	a7, a2, 104
400e41a1:	072577        	blt	a5, a7, 400e41ac <_vfprintf_r+0x2270>
400e41a4:	192232        	l32i	a3, a2, 100
400e41a7:	000306        	j	400e41b7 <_vfprintf_r+0x227b>
400e41aa:	370000        	lsi	f0, a0, 220
400e41ad:	2c0425        	call8	401101f0 <_etext+0x23d1f>
400e41b0:	623243        	lsi	f4, a2, 0x188
400e41b3:	321a      	add.n	a3, a2, a1
400e41b5:	229c21        	l32r	a2, 400acc28 <_iram_end+0x1f0d4>
400e41b8:	e29e21        	l32r	a2, 400dcc30 <_svfprintf_r+0x918>
400e41bb:	2a10c1        	l32r	a12, 400ae9fc <_iram_end+0x20ea8>
400e41be:	c22223        	lsi	f2, a2, 0x308
400e41c1:	58fc      	bnez.n	a8, 400e41fa <_vfprintf_r+0x22be>
400e41c3:	26e002        	s32c1i	a0, a0, 152
400e41c6:	0259b0        	andb	b5, b9, b11
400e41c9:	000b46        	j	400e41fa <_vfprintf_r+0x22be>
400e41cc:	10c132        	addi	a3, a1, 16
400e41cf:	02d322        	addmi	a2, a3, 0x200
400e41d2:	1a2232        	l32i	a3, a2, 104
400e41d5:	851c      	movi.n	a5, 24
400e41d7:	634b      	addi.n	a6, a3, 4
400e41d9:	1a6262        	s32i	a6, a2, 104
400e41dc:	052567        	blt	a5, a6, 400e41e5 <_vfprintf_r+0x22a9>
400e41df:	192232        	l32i	a3, a2, 100
400e41e2:	000286        	j	400e41f0 <_vfprintf_r+0x22b4>
400e41e5:	042537        	blt	a5, a3, 400e41ed <_vfprintf_r+0x22b1>
400e41e8:	432c      	movi.n	a3, 36
400e41ea:	1a6232        	s32i	a3, a2, 104
400e41ed:	9c2132        	l32i	a3, a1, 0x270
400e41f0:	9e2122        	l32i	a2, a1, 0x278
400e41f3:	232a      	add.n	a2, a3, a2
400e41f5:	fcc222        	addi	a2, a2, -4
400e41f8:	0258      	l32i.n	a5, a2, 0
400e41fa:	030c      	movi.n	a3, 0
400e41fc:	047d      	mov.n	a7, a4
400e41fe:	202530        	or	a2, a5, a3
400e4201:	02ac      	beqz.n	a2, 400e4225 <_vfprintf_r+0x22e9>
400e4203:	a02142        	l32i	a4, a1, 0x280
400e4206:	1b6407        	bbci	a4, 0, 400e4225 <_vfprintf_r+0x22e9>
400e4209:	10c162        	addi	a6, a1, 16
400e420c:	a62182        	l32i	a8, a1, 0x298
400e420f:	02d622        	addmi	a2, a6, 0x200
400e4212:	a02192        	l32i	a9, a1, 0x280
400e4215:	043c      	movi.n	a4, 48
400e4217:	504242        	s8i	a4, a2, 80
400e421a:	514282        	s8i	a8, a2, 81
400e421d:	220c      	movi.n	a2, 2
400e421f:	209920        	or	a9, a9, a2
400e4222:	a06192        	s32i	a9, a1, 0x280
400e4225:	a02142        	l32i	a4, a1, 0x280
400e4228:	ffab22        	movi	a2, 0xfffffbff
400e422b:	104420        	and	a4, a4, a2
400e422e:	a06142        	s32i	a4, a1, 0x280
400e4231:	02a022        	movi	a2, 2
400e4234:	10c182        	addi	a8, a1, 16
400e4237:	00a062        	movi	a6, 0
400e423a:	02d842        	addmi	a4, a8, 0x200
400e423d:	524462        	s8i	a6, a4, 82
400e4240:	a52192        	l32i	a9, a1, 0x294
400e4243:	00b996        	bltz	a9, 400e4252 <_vfprintf_r+0x2316>
400e4246:	a02162        	l32i	a6, a1, 0x280
400e4249:	7faf42        	movi	a4, -129
400e424c:	106640        	and	a6, a6, a4
400e424f:	a06162        	s32i	a6, a1, 0x280
400e4252:	204530        	or	a4, a5, a3
400e4255:	01a062        	movi	a6, 1
400e4258:	00a082        	movi	a8, 0
400e425b:	938640        	movnez	a8, a6, a4
400e425e:	744080        	extui	a4, a8, 0, 8
400e4261:	008456        	bnez	a4, 400e426d <_vfprintf_r+0x2331>
400e4264:	a52182        	l32i	a8, a1, 0x294
400e4267:	934680        	movnez	a4, a6, a8
400e426a:	16e416        	beqz	a4, 400e43dc <_vfprintf_r+0x24a0>
400e426d:	80a142        	movi	a4, 0x180
400e4270:	5a1226        	beqi	a2, 1, 400e42ce <_vfprintf_r+0x2392>
400e4273:	022266        	bnei	a2, 2, 400e4279 <_vfprintf_r+0x233d>
400e4276:	004a06        	j	400e43a2 <_vfprintf_r+0x2466>
400e4279:	10c192        	addi	a9, a1, 16
400e427c:	494a      	add.n	a4, a9, a4
400e427e:	64c442        	addi	a4, a4, 100
400e4281:	a16142        	s32i	a4, a1, 0x284
400e4284:	a12122        	l32i	a2, a1, 0x284
400e4287:	220b      	addi.n	a2, a2, -1
400e4289:	a16122        	s32i	a2, a1, 0x284
400e428c:	a12142        	l32i	a4, a1, 0x284
400e428f:	242050        	extui	a2, a5, 0, 3
400e4292:	30c222        	addi	a2, a2, 48
400e4295:	004422        	s8i	a2, a4, 0
400e4298:	415350        	srli	a5, a5, 3
400e429b:	014330        	slli	a4, a3, 29
400e429e:	205450        	or	a5, a4, a5
400e42a1:	413330        	srli	a3, a3, 3
400e42a4:	204530        	or	a4, a5, a3
400e42a7:	fd9456        	bnez	a4, 400e4284 <_vfprintf_r+0x2348>
400e42aa:	d0c232        	addi	a3, a2, -48
400e42ad:	120c      	movi.n	a2, 1
400e42af:	832430        	moveqz	a2, a4, a3
400e42b2:	742020        	extui	a2, a2, 0, 8
400e42b5:	14b216        	beqz	a2, 400e4404 <_vfprintf_r+0x24c8>
400e42b8:	a02152        	l32i	a5, a1, 0x280
400e42bb:	02e507        	bbsi	a5, 0, 400e42c1 <_vfprintf_r+0x2385>
400e42be:	005086        	j	400e4404 <_vfprintf_r+0x24c8>
400e42c1:	a12182        	l32i	a8, a1, 0x284
400e42c4:	023c      	movi.n	a2, 48
400e42c6:	480b      	addi.n	a4, a8, -1
400e42c8:	004422        	s8i	a2, a4, 0
400e42cb:	0005c6        	j	400e42e6 <_vfprintf_r+0x23aa>
400e42ce:	a3dc      	bnez.n	a3, 400e42ec <_vfprintf_r+0x23b0>
400e42d0:	920c      	movi.n	a2, 9
400e42d2:	163257        	bltu	a2, a5, 400e42ec <_vfprintf_r+0x23b0>
400e42d5:	10c192        	addi	a9, a1, 16
400e42d8:	30c552        	addi	a5, a5, 48
400e42db:	01d922        	addmi	a2, a9, 0x100
400e42de:	494a      	add.n	a4, a9, a4
400e42e0:	e34252        	s8i	a5, a2, 227
400e42e3:	63c442        	addi	a4, a4, 99
400e42e6:	a16142        	s32i	a4, a1, 0x284
400e42e9:	0045c6        	j	400e4404 <_vfprintf_r+0x24c8>
400e42ec:	020c      	movi.n	a2, 0
400e42ee:	90a162        	movi	a6, 0x190
400e42f1:	a02182        	l32i	a8, a1, 0x280
400e42f4:	a76122        	s32i	a2, a1, 0x29c
400e42f7:	661a      	add.n	a6, a6, a1
400e42f9:	00a422        	movi	a2, 0x400
400e42fc:	64c642        	addi	a4, a6, 100
400e42ff:	102820        	and	a2, a8, a2
400e4302:	000086        	j	400e4308 <_vfprintf_r+0x23cc>
400e4305:	a12142        	l32i	a4, a1, 0x284
400e4308:	b11bc1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e430b:	af54d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e430e:	440b      	addi.n	a4, a4, -1
400e4310:	05ad      	mov.n	a10, a5
400e4312:	03bd      	mov.n	a11, a3
400e4314:	a16142        	s32i	a4, a1, 0x284
400e4317:	b12481        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e431a:	0008e0        	callx8	a8
400e431d:	a72192        	l32i	a9, a1, 0x29c
400e4320:	30caa2        	addi	a10, a10, 48
400e4323:	991b      	addi.n	a9, a9, 1
400e4325:	0044a2        	s8i	a10, a4, 0
400e4328:	a76192        	s32i	a9, a1, 0x29c
400e432b:	056216        	beqz	a2, 400e4385 <_vfprintf_r+0x2449>
400e432e:	ad2142        	l32i	a4, a1, 0x2b4
400e4331:	190c      	movi.n	a9, 1
400e4333:	000482        	l8ui	a8, a4, 0
400e4336:	63cc      	bnez.n	a3, 400e4340 <_vfprintf_r+0x2404>
400e4338:	09a042        	movi	a4, 9
400e433b:	013457        	bltu	a4, a5, 400e4340 <_vfprintf_r+0x2404>
400e433e:	039d      	mov.n	a9, a3
400e4340:	01af42        	movi	a4, -255
400e4343:	484a      	add.n	a4, a8, a4
400e4345:	060c      	movi.n	a6, 0
400e4347:	01a0a2        	movi	a10, 1
400e434a:	83a640        	moveqz	a10, a6, a4
400e434d:	340a97        	bnone	a10, a9, 400e4385 <_vfprintf_r+0x2449>
400e4350:	a72192        	l32i	a9, a1, 0x29c
400e4353:	2e9897        	bne	a8, a9, 400e4385 <_vfprintf_r+0x2449>
400e4356:	b02182        	l32i	a8, a1, 0x2c0
400e4359:	a12142        	l32i	a4, a1, 0x284
400e435c:	b321b2        	l32i	a11, a1, 0x2cc
400e435f:	c04480        	sub	a4, a4, a8
400e4362:	08cd      	mov.n	a12, a8
400e4364:	20a440        	or	a10, a4, a4
400e4367:	a16142        	s32i	a4, a1, 0x284
400e436a:	b01c81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400e436d:	0008e0        	callx8	a8
400e4370:	ad2192        	l32i	a9, a1, 0x2b4
400e4373:	064d      	mov.n	a4, a6
400e4375:	010982        	l8ui	a8, a9, 1
400e4378:	a76162        	s32i	a6, a1, 0x29c
400e437b:	160c      	movi.n	a6, 1
400e437d:	934680        	movnez	a4, a6, a8
400e4380:	994a      	add.n	a9, a9, a4
400e4382:	ad6192        	s32i	a9, a1, 0x2b4
400e4385:	b0fbc1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e4388:	af35d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e438b:	05ad      	mov.n	a10, a5
400e438d:	03bd      	mov.n	a11, a3
400e438f:	af2d81        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400e4392:	0008e0        	callx8	a8
400e4395:	0a5d      	mov.n	a5, a10
400e4397:	20aba0        	or	a10, a11, a10
400e439a:	0b3d      	mov.n	a3, a11
400e439c:	f65a56        	bnez	a10, 400e4305 <_vfprintf_r+0x23c9>
400e439f:	001846        	j	400e4404 <_vfprintf_r+0x24c8>
400e43a2:	10c1a2        	addi	a10, a1, 16
400e43a5:	4a4a      	add.n	a4, a10, a4
400e43a7:	64c442        	addi	a4, a4, 100
400e43aa:	a16142        	s32i	a4, a1, 0x284
400e43ad:	a12122        	l32i	a2, a1, 0x284
400e43b0:	b52142        	l32i	a4, a1, 0x2d4
400e43b3:	220b      	addi.n	a2, a2, -1
400e43b5:	a16122        	s32i	a2, a1, 0x284
400e43b8:	342050        	extui	a2, a5, 0, 4
400e43bb:	242a      	add.n	a2, a4, a2
400e43bd:	000222        	l8ui	a2, a2, 0
400e43c0:	a12182        	l32i	a8, a1, 0x284
400e43c3:	415450        	srli	a5, a5, 4
400e43c6:	004822        	s8i	a2, a8, 0
400e43c9:	012340        	slli	a2, a3, 28
400e43cc:	205250        	or	a5, a2, a5
400e43cf:	413430        	srli	a3, a3, 4
400e43d2:	202530        	or	a2, a5, a3
400e43d5:	fd4256        	bnez	a2, 400e43ad <_vfprintf_r+0x2471>
400e43d8:	000a06        	j	400e4404 <_vfprintf_r+0x24c8>
400e43db:	a13200        	sll	a3, a2
400e43de:	c19280        	mul16u	a9, a2, a8
400e43e1:	493a10        	s32e	a1, a10, -52
400e43e4:	64c442        	addi	a4, a4, 100
400e43e7:	a16142        	s32i	a4, a1, 0x284
400e43ea:	62dc      	bnez.n	a2, 400e4404 <_vfprintf_r+0x24c8>
400e43ec:	a02122        	l32i	a2, a1, 0x280
400e43ef:	116207        	bbci	a2, 0, 400e4404 <_vfprintf_r+0x24c8>
400e43f2:	803930        	add	a3, a9, a3
400e43f5:	30a042        	movi	a4, 48
400e43f8:	01d922        	addmi	a2, a9, 0x100
400e43fb:	63c332        	addi	a3, a3, 99
400e43fe:	e34242        	s8i	a4, a2, 227
400e4401:	a16132        	s32i	a3, a1, 0x284
400e4404:	10c132        	addi	a3, a1, 16
400e4407:	e4a122        	movi	a2, 0x1e4
400e440a:	a12142        	l32i	a4, a1, 0x284
400e440d:	232a      	add.n	a2, a3, a2
400e440f:	050c      	movi.n	a5, 0
400e4411:	c02240        	sub	a2, a2, a4
400e4414:	a52162        	l32i	a6, a1, 0x294
400e4417:	a46152        	s32i	a5, a1, 0x290
400e441a:	a56122        	s32i	a2, a1, 0x294
400e441d:	053d      	mov.n	a3, a5
400e441f:	0010c6        	j	400e4466 <_vfprintf_r+0x252a>
400e4422:	620000        	lsi	f0, a0, 0x188
400e4425:	cca621        	l32r	a2, 400d76c0 <nvs::Storage::init(unsigned int, unsigned int)+0x54>
400e4428:	24c616        	beqz	a6, 400e4678 <_vfprintf_r+0x273c>
400e442b:	c18203        	lsip	f0, a2, 0x304
400e442e:	d82210        	lsi	f1, a2, 0x360
400e4431:	426201        	l32r	a0, 400b4dbc <_iram_end+0x27268>
400e4434:	030c80        	rsr.scompare1	a8
400e4437:	02d822        	addmi	a2, a8, 0x200
400e443a:	090c      	movi.n	a9, 0
400e443c:	524232        	s8i	a3, a2, 82
400e443f:	120c      	movi.n	a2, 1
400e4441:	a56122        	s32i	a2, a1, 0x294
400e4444:	a46192        	s32i	a9, a1, 0x290
400e4447:	096d      	mov.n	a6, a9
400e4449:	093d      	mov.n	a3, a9
400e444b:	095d      	mov.n	a5, a9
400e444d:	092d      	mov.n	a2, a9
400e444f:	90a182        	movi	a8, 0x190
400e4452:	818a      	add.n	a8, a1, a8
400e4454:	a16182        	s32i	a8, a1, 0x284
400e4457:	000346        	j	400e4468 <_vfprintf_r+0x252c>
400e445a:	000000        	ill
400e445d:	a461a2        	s32i	a10, a1, 0x290
400e4460:	0a6d      	mov.n	a6, a10
400e4462:	063d      	mov.n	a3, a6
400e4464:	065d      	mov.n	a5, a6
400e4466:	052d      	mov.n	a2, a5
400e4468:	a52192        	l32i	a9, a1, 0x294
400e446b:	10c1a2        	addi	a10, a1, 16
400e446e:	539690        	max	a9, a6, a9
400e4471:	02da42        	addmi	a4, a10, 0x200
400e4474:	a96192        	s32i	a9, a1, 0x2a4
400e4477:	520482        	l8ui	a8, a4, 82
400e447a:	190c      	movi.n	a9, 1
400e447c:	a921e2        	l32i	a14, a1, 0x2a4
400e447f:	040c      	movi.n	a4, 0
400e4481:	934980        	movnez	a4, a9, a8
400e4484:	a02182        	l32i	a8, a1, 0x280
400e4487:	ee4a      	add.n	a14, a14, a4
400e4489:	a02192        	l32i	a9, a1, 0x280
400e448c:	240c      	movi.n	a4, 2
400e448e:	104840        	and	a4, a8, a4
400e4491:	84a082        	movi	a8, 132
400e4494:	ee4a      	add.n	a14, a14, a4
400e4496:	108980        	and	a8, a9, a8
400e4499:	a961e2        	s32i	a14, a1, 0x2a4
400e449c:	b26182        	s32i	a8, a1, 0x2c8
400e449f:	0b5856        	bnez	a8, 400e4558 <_vfprintf_r+0x261c>
400e44a2:	ac2192        	l32i	a9, a1, 0x2b0
400e44a5:	0d1c      	movi.n	a13, 16
400e44a7:	c089e0        	sub	a8, a9, a14
400e44aa:	5b18e6        	bgei	a8, 1, 400e4509 <_vfprintf_r+0x25cd>
400e44ad:	0029c6        	j	400e4558 <_vfprintf_r+0x261c>
400e44b0:	9f21a2        	l32i	a10, a1, 0x27c
400e44b3:	0a99      	s32i.n	a9, a10, 0
400e44b5:	8f2192        	l32i	a9, a1, 0x23c
400e44b8:	1ad9      	s32i.n	a13, a10, 4
400e44ba:	10c992        	addi	a9, a9, 16
400e44bd:	8f6192        	s32i	a9, a1, 0x23c
400e44c0:	8e2192        	l32i	a9, a1, 0x238
400e44c3:	991b      	addi.n	a9, a9, 1
400e44c5:	8e6192        	s32i	a9, a1, 0x238
400e44c8:	0d89e6        	bgei	a9, 8, 400e44d9 <_vfprintf_r+0x259d>
400e44cb:	9f2192        	l32i	a9, a1, 0x27c
400e44ce:	998b      	addi.n	a9, a9, 8
400e44d0:	9f6192        	s32i	a9, a1, 0x27c
400e44d3:	000bc6        	j	400e4506 <_vfprintf_r+0x25ca>
400e44d6:	000000        	ill
400e44d9:	34a2c2        	movi	a12, 0x234
400e44dc:	a221b2        	l32i	a11, a1, 0x288
400e44df:	a321a2        	l32i	a10, a1, 0x28c
400e44e2:	80cc10        	add	a12, a12, a1
400e44e5:	b86182        	s32i	a8, a1, 0x2e0
400e44e8:	b761d2        	s32i	a13, a1, 0x2dc
400e44eb:	fb3ae5        	call8	400df898 <__sprint_r>
400e44ee:	b82182        	l32i	a8, a1, 0x2e0
400e44f1:	b721d2        	l32i	a13, a1, 0x2dc
400e44f4:	002a16        	beqz	a10, 400e44fa <_vfprintf_r+0x25be>
400e44f7:	02fb86        	j	400e50e9 <_vfprintf_r+0x31ad>
400e44fa:	e4a192        	movi	a9, 0x1e4
400e44fd:	10c1a2        	addi	a10, a1, 16
400e4500:	80aa90        	add	a10, a10, a9
400e4503:	9f61a2        	s32i	a10, a1, 0x27c
400e4506:	f0c882        	addi	a8, a8, -16
400e4509:	b0be91        	l32r	a9, 400d0804 <_flash_cache_start+0x7ec>
400e450c:	a02d87        	blt	a13, a8, 400e44b0 <_vfprintf_r+0x2574>
400e450f:	9f21e2        	l32i	a14, a1, 0x27c
400e4512:	10c1a2        	addi	a10, a1, 16
400e4515:	0e99      	s32i.n	a9, a14, 0
400e4517:	02da92        	addmi	a9, a10, 0x200
400e451a:	8f21a2        	l32i	a10, a1, 0x23c
400e451d:	1e89      	s32i.n	a8, a14, 4
400e451f:	8a8a      	add.n	a8, a10, a8
400e4521:	b989      	s32i.n	a8, a9, 44
400e4523:	a988      	l32i.n	a8, a9, 40
400e4525:	881b      	addi.n	a8, a8, 1
400e4527:	a989      	s32i.n	a8, a9, 40
400e4529:	0788e6        	bgei	a8, 8, 400e4534 <_vfprintf_r+0x25f8>
400e452c:	ee8b      	addi.n	a14, a14, 8
400e452e:	9f61e2        	s32i	a14, a1, 0x27c
400e4531:	0008c6        	j	400e4558 <_vfprintf_r+0x261c>
400e4534:	10c1e2        	addi	a14, a1, 16
400e4537:	24a282        	movi	a8, 0x224
400e453a:	a221b2        	l32i	a11, a1, 0x288
400e453d:	a321a2        	l32i	a10, a1, 0x28c
400e4540:	80ce80        	add	a12, a14, a8
400e4543:	fb3565        	call8	400df898 <__sprint_r>
400e4546:	002a16        	beqz	a10, 400e454c <_vfprintf_r+0x2610>
400e4549:	02e706        	j	400e50e9 <_vfprintf_r+0x31ad>
400e454c:	e4a182        	movi	a8, 0x1e4
400e454f:	10c192        	addi	a9, a1, 16
400e4552:	809980        	add	a9, a9, a8
400e4555:	9f6192        	s32i	a9, a1, 0x27c
400e4558:	10c1a2        	addi	a10, a1, 16
400e455b:	02da92        	addmi	a9, a10, 0x200
400e455e:	520982        	l8ui	a8, a9, 82
400e4561:	049816        	beqz	a8, 400e45ae <_vfprintf_r+0x2672>
400e4564:	9f21e2        	l32i	a14, a1, 0x27c
400e4567:	52a282        	movi	a8, 0x252
400e456a:	8a8a      	add.n	a8, a10, a8
400e456c:	0e89      	s32i.n	a8, a14, 0
400e456e:	180c      	movi.n	a8, 1
400e4570:	1e89      	s32i.n	a8, a14, 4
400e4572:	8f2182        	l32i	a8, a1, 0x23c
400e4575:	881b      	addi.n	a8, a8, 1
400e4577:	8f6182        	s32i	a8, a1, 0x23c
400e457a:	8e2182        	l32i	a8, a1, 0x238
400e457d:	881b      	addi.n	a8, a8, 1
400e457f:	8e6182        	s32i	a8, a1, 0x238
400e4582:	0788e6        	bgei	a8, 8, 400e458d <_vfprintf_r+0x2651>
400e4585:	ee8b      	addi.n	a14, a14, 8
400e4587:	9f61e2        	s32i	a14, a1, 0x27c
400e458a:	000806        	j	400e45ae <_vfprintf_r+0x2672>
400e458d:	34a2c2        	movi	a12, 0x234
400e4590:	a221b2        	l32i	a11, a1, 0x288
400e4593:	a321a2        	l32i	a10, a1, 0x28c
400e4596:	80cc10        	add	a12, a12, a1
400e4599:	fb2fe5        	call8	400df898 <__sprint_r>
400e459c:	002a16        	beqz	a10, 400e45a2 <_vfprintf_r+0x2666>
400e459f:	02d186        	j	400e50e9 <_vfprintf_r+0x31ad>
400e45a2:	e4a182        	movi	a8, 0x1e4
400e45a5:	10c192        	addi	a9, a1, 16
400e45a8:	809980        	add	a9, a9, a8
400e45ab:	9f6192        	s32i	a9, a1, 0x27c
400e45ae:	04c416        	beqz	a4, 400e45fe <_vfprintf_r+0x26c2>
400e45b1:	9f2182        	l32i	a8, a1, 0x27c
400e45b4:	60a2a2        	movi	a10, 0x260
400e45b7:	41aa      	add.n	a4, a1, a10
400e45b9:	0849      	s32i.n	a4, a8, 0
400e45bb:	240c      	movi.n	a4, 2
400e45bd:	1849      	s32i.n	a4, a8, 4
400e45bf:	8f2142        	l32i	a4, a1, 0x23c
400e45c2:	442b      	addi.n	a4, a4, 2
400e45c4:	8f6142        	s32i	a4, a1, 0x23c
400e45c7:	8e2142        	l32i	a4, a1, 0x238
400e45ca:	441b      	addi.n	a4, a4, 1
400e45cc:	8e6142        	s32i	a4, a1, 0x238
400e45cf:	0a84e6        	bgei	a4, 8, 400e45dd <_vfprintf_r+0x26a1>
400e45d2:	9f2142        	l32i	a4, a1, 0x27c
400e45d5:	448b      	addi.n	a4, a4, 8
400e45d7:	9f6142        	s32i	a4, a1, 0x27c
400e45da:	000806        	j	400e45fe <_vfprintf_r+0x26c2>
400e45dd:	34a2c2        	movi	a12, 0x234
400e45e0:	a221b2        	l32i	a11, a1, 0x288
400e45e3:	a321a2        	l32i	a10, a1, 0x28c
400e45e6:	80cc10        	add	a12, a12, a1
400e45e9:	fb2ae5        	call8	400df898 <__sprint_r>
400e45ec:	002a16        	beqz	a10, 400e45f2 <_vfprintf_r+0x26b6>
400e45ef:	02bd86        	j	400e50e9 <_vfprintf_r+0x31ad>
400e45f2:	e4a142        	movi	a4, 0x1e4
400e45f5:	10c182        	addi	a8, a1, 16
400e45f8:	808840        	add	a8, a8, a4
400e45fb:	9f6182        	s32i	a8, a1, 0x27c
400e45fe:	b22192        	l32i	a9, a1, 0x2c8
400e4601:	02e926        	beqi	a9, 128, 400e4607 <_vfprintf_r+0x26cb>
400e4604:	002c46        	j	400e46b9 <_vfprintf_r+0x277d>
400e4607:	a92192        	l32i	a9, a1, 0x2a4
400e460a:	ac2182        	l32i	a8, a1, 0x2b0
400e460d:	c04890        	sub	a4, a8, a9
400e4610:	091c      	movi.n	a9, 16
400e4612:	5414e6        	bgei	a4, 1, 400e466a <_vfprintf_r+0x272e>
400e4615:	002806        	j	400e46b9 <_vfprintf_r+0x277d>
400e4618:	9f21a2        	l32i	a10, a1, 0x27c
400e461b:	0a89      	s32i.n	a8, a10, 0
400e461d:	8f2182        	l32i	a8, a1, 0x23c
400e4620:	1a99      	s32i.n	a9, a10, 4
400e4622:	10c882        	addi	a8, a8, 16
400e4625:	8f6182        	s32i	a8, a1, 0x23c
400e4628:	8e2182        	l32i	a8, a1, 0x238
400e462b:	881b      	addi.n	a8, a8, 1
400e462d:	8e6182        	s32i	a8, a1, 0x238
400e4630:	0c88e6        	bgei	a8, 8, 400e4640 <_vfprintf_r+0x2704>
400e4633:	9f2182        	l32i	a8, a1, 0x27c
400e4636:	888b      	addi.n	a8, a8, 8
400e4638:	9f6182        	s32i	a8, a1, 0x27c
400e463b:	000a06        	j	400e4667 <_vfprintf_r+0x272b>
400e463e:	c20000        	quou	a0, a0, a0
400e4641:	b234a2        	lsi	f10, a4, 0x2c8
400e4644:	a2a221        	l32r	a2, 400cd0cc <_rtc_text_end+0xd0cc>
400e4647:	10a321        	l32r	a2, 400a88d4 <_iram_end+0x1ad80>
400e464a:	80cc      	bnez.n	a0, 400e4656 <_vfprintf_r+0x271a>
400e464c:	b76192        	s32i	a9, a1, 0x2dc
400e464f:	fb24a5        	call8	400df898 <__sprint_r>
400e4652:	b72192        	l32i	a9, a1, 0x2dc
400e4655:	002a16        	beqz	a10, 400e465b <_vfprintf_r+0x271f>
400e4658:	02a346        	j	400e50e9 <_vfprintf_r+0x31ad>
400e465b:	e4a182        	movi	a8, 0x1e4
400e465e:	10c1a2        	addi	a10, a1, 16
400e4661:	80aa80        	add	a10, a10, a8
400e4664:	9f61a2        	s32i	a10, a1, 0x27c
400e4667:	f0c442        	addi	a4, a4, -16
400e466a:	b06781        	l32r	a8, 400d0808 <_flash_cache_start+0x7f0>
400e466d:	a72947        	blt	a9, a4, 400e4618 <_vfprintf_r+0x26dc>
400e4670:	9f2192        	l32i	a9, a1, 0x27c
400e4673:	1949      	s32i.n	a4, a9, 4
400e4675:	0989      	s32i.n	a8, a9, 0
400e4677:	8f2192        	l32i	a9, a1, 0x23c
400e467a:	494a      	add.n	a4, a9, a4
400e467c:	8f6142        	s32i	a4, a1, 0x23c
400e467f:	8e2142        	l32i	a4, a1, 0x238
400e4682:	441b      	addi.n	a4, a4, 1
400e4684:	8e6142        	s32i	a4, a1, 0x238
400e4687:	0a84e6        	bgei	a4, 8, 400e4695 <_vfprintf_r+0x2759>
400e468a:	9f2142        	l32i	a4, a1, 0x27c
400e468d:	448b      	addi.n	a4, a4, 8
400e468f:	9f6142        	s32i	a4, a1, 0x27c
400e4692:	0008c6        	j	400e46b9 <_vfprintf_r+0x277d>
400e4695:	10c182        	addi	a8, a1, 16
400e4698:	24a292        	movi	a9, 0x224
400e469b:	a221b2        	l32i	a11, a1, 0x288
400e469e:	a321a2        	l32i	a10, a1, 0x28c
400e46a1:	80c890        	add	a12, a8, a9
400e46a4:	fb1f25        	call8	400df898 <__sprint_r>
400e46a7:	002a16        	beqz	a10, 400e46ad <_vfprintf_r+0x2771>
400e46aa:	028ec6        	j	400e50e9 <_vfprintf_r+0x31ad>
400e46ad:	e4a142        	movi	a4, 0x1e4
400e46b0:	10c182        	addi	a8, a1, 16
400e46b3:	808840        	add	a8, a8, a4
400e46b6:	9f6182        	s32i	a8, a1, 0x27c
400e46b9:	a52192        	l32i	a9, a1, 0x294
400e46bc:	081c      	movi.n	a8, 16
400e46be:	c06690        	sub	a6, a6, a9
400e46c1:	5516e6        	bgei	a6, 1, 400e471a <_vfprintf_r+0x27de>
400e46c4:	002846        	j	400e4769 <_vfprintf_r+0x282d>
400e46c7:	219200        	srai	a9, a0, 2
400e46ca:	9f          	.byte 0x9f
400e46cb:	0949      	s32i.n	a4, a9, 0
400e46cd:	8f2142        	l32i	a4, a1, 0x23c
400e46d0:	1989      	s32i.n	a8, a9, 4
400e46d2:	10c442        	addi	a4, a4, 16
400e46d5:	8f6142        	s32i	a4, a1, 0x23c
400e46d8:	8e2142        	l32i	a4, a1, 0x238
400e46db:	441b      	addi.n	a4, a4, 1
400e46dd:	8e6142        	s32i	a4, a1, 0x238
400e46e0:	0c84e6        	bgei	a4, 8, 400e46f0 <_vfprintf_r+0x27b4>
400e46e3:	9f2142        	l32i	a4, a1, 0x27c
400e46e6:	448b      	addi.n	a4, a4, 8
400e46e8:	9f6142        	s32i	a4, a1, 0x27c
400e46eb:	000a06        	j	400e4717 <_vfprintf_r+0x27db>
400e46ee:	c20000        	quou	a0, a0, a0
400e46f1:	b234a2        	lsi	f10, a4, 0x2c8
400e46f4:	a2a221        	l32r	a2, 400cd17c <_rtc_text_end+0xd17c>
400e46f7:	10a321        	l32r	a2, 400a8984 <_iram_end+0x1ae30>
400e46fa:	80cc      	bnez.n	a0, 400e4706 <_vfprintf_r+0x27ca>
400e46fc:	b86182        	s32i	a8, a1, 0x2e0
400e46ff:	fb19a5        	call8	400df898 <__sprint_r>
400e4702:	b82182        	l32i	a8, a1, 0x2e0
400e4705:	002a16        	beqz	a10, 400e470b <_vfprintf_r+0x27cf>
400e4708:	027746        	j	400e50e9 <_vfprintf_r+0x31ad>
400e470b:	e4a142        	movi	a4, 0x1e4
400e470e:	10c192        	addi	a9, a1, 16
400e4711:	809940        	add	a9, a9, a4
400e4714:	9f6192        	s32i	a9, a1, 0x27c
400e4717:	f0c662        	addi	a6, a6, -16
400e471a:	b03b41        	l32r	a4, 400d0808 <_flash_cache_start+0x7f0>
400e471d:	a72867        	blt	a8, a6, 400e46c8 <_vfprintf_r+0x278c>
400e4720:	9f2182        	l32i	a8, a1, 0x27c
400e4723:	0849      	s32i.n	a4, a8, 0
400e4725:	8f2142        	l32i	a4, a1, 0x23c
400e4728:	1869      	s32i.n	a6, a8, 4
400e472a:	646a      	add.n	a6, a4, a6
400e472c:	8e2142        	l32i	a4, a1, 0x238
400e472f:	8f6162        	s32i	a6, a1, 0x23c
400e4732:	441b      	addi.n	a4, a4, 1
400e4734:	8e6142        	s32i	a4, a1, 0x238
400e4737:	0a84e6        	bgei	a4, 8, 400e4745 <_vfprintf_r+0x2809>
400e473a:	9f2142        	l32i	a4, a1, 0x27c
400e473d:	448b      	addi.n	a4, a4, 8
400e473f:	9f6142        	s32i	a4, a1, 0x27c
400e4742:	0008c6        	j	400e4769 <_vfprintf_r+0x282d>
400e4745:	10c162        	addi	a6, a1, 16
400e4748:	24a282        	movi	a8, 0x224
400e474b:	a221b2        	l32i	a11, a1, 0x288
400e474e:	a321a2        	l32i	a10, a1, 0x28c
400e4751:	80c680        	add	a12, a6, a8
400e4754:	fb1425        	call8	400df898 <__sprint_r>
400e4757:	002a16        	beqz	a10, 400e475d <_vfprintf_r+0x2821>
400e475a:	0262c6        	j	400e50e9 <_vfprintf_r+0x31ad>
400e475d:	e4a142        	movi	a4, 0x1e4
400e4760:	10c192        	addi	a9, a1, 16
400e4763:	809940        	add	a9, a9, a4
400e4766:	9f6192        	s32i	a9, a1, 0x27c
400e4769:	a02142        	l32i	a4, a1, 0x280
400e476c:	2ce487        	bbsi	a4, 8, 400e479c <_vfprintf_r+0x2860>
400e476f:	a52192        	l32i	a9, a1, 0x294
400e4772:	8f2162        	l32i	a6, a1, 0x23c
400e4775:	8e2122        	l32i	a2, a1, 0x238
400e4778:	9f2152        	l32i	a5, a1, 0x27c
400e477b:	a12182        	l32i	a8, a1, 0x284
400e477e:	669a      	add.n	a6, a6, a9
400e4780:	221b      	addi.n	a2, a2, 1
400e4782:	0589      	s32i.n	a8, a5, 0
400e4784:	1599      	s32i.n	a9, a5, 4
400e4786:	8f6162        	s32i	a6, a1, 0x23c
400e4789:	8e6122        	s32i	a2, a1, 0x238
400e478c:	0282a6        	blti	a2, 8, 400e4792 <_vfprintf_r+0x2856>
400e478f:	020586        	j	400e4fa9 <_vfprintf_r+0x306d>
400e4792:	558b      	addi.n	a5, a5, 8
400e4794:	9f6152        	s32i	a5, a1, 0x27c
400e4797:	020a86        	j	400e4fc5 <_vfprintf_r+0x3089>
400e479a:	620000        	lsi	f0, a0, 0x188
400e479d:	42a621        	l32r	a2, 400b5238 <_iram_end+0x276e4>
400e47a0:	6765a0        	lsi	f10, a5, 0x19c
400e47a3:	c60224        	lsi	f2, a2, 0x318
400e47a6:	c10191        	l32r	a9, 400d4bac <read_encoded_value_with_base+0xa0>
400e47a9:	ae2d      	lsi	f2, a14, 56
400e47ab:	ae2cd1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e47ae:	aa21a2        	l32i	a10, a1, 0x2a8
400e47b1:	ab21b2        	l32i	a11, a1, 0x2ac
400e47b4:	aff681        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e47b7:	0008e0        	callx8	a8
400e47ba:	107a56        	bnez	a10, 400e48c5 <_vfprintf_r+0x2989>
400e47bd:	b01321        	l32r	a2, 400d080c <_flash_cache_start+0x7f4>
400e47c0:	9f2182        	l32i	a8, a1, 0x27c
400e47c3:	0829      	s32i.n	a2, a8, 0
400e47c5:	120c      	movi.n	a2, 1
400e47c7:	1829      	s32i.n	a2, a8, 4
400e47c9:	8f2122        	l32i	a2, a1, 0x23c
400e47cc:	221b      	addi.n	a2, a2, 1
400e47ce:	8f6122        	s32i	a2, a1, 0x23c
400e47d1:	8e2122        	l32i	a2, a1, 0x238
400e47d4:	221b      	addi.n	a2, a2, 1
400e47d6:	8e6122        	s32i	a2, a1, 0x238
400e47d9:	0782e6        	bgei	a2, 8, 400e47e4 <_vfprintf_r+0x28a8>
400e47dc:	888b      	addi.n	a8, a8, 8
400e47de:	9f6182        	s32i	a8, a1, 0x27c
400e47e1:	000746        	j	400e4802 <_vfprintf_r+0x28c6>
400e47e4:	34a2c2        	movi	a12, 0x234
400e47e7:	a221b2        	l32i	a11, a1, 0x288
400e47ea:	a321a2        	l32i	a10, a1, 0x28c
400e47ed:	cc1a      	add.n	a12, a12, a1
400e47ef:	fb0aa5        	call8	400df898 <__sprint_r>
400e47f2:	1a8c      	beqz.n	a10, 400e47f7 <_vfprintf_r+0x28bb>
400e47f4:	023c46        	j	400e50e9 <_vfprintf_r+0x31ad>
400e47f7:	e4a122        	movi	a2, 0x1e4
400e47fa:	10c132        	addi	a3, a1, 16
400e47fd:	332a      	add.n	a3, a3, a2
400e47ff:	9f6132        	s32i	a3, a1, 0x27c
400e4802:	952122        	l32i	a2, a1, 0x254
400e4805:	a72142        	l32i	a4, a1, 0x29c
400e4808:	082247        	blt	a2, a4, 400e4814 <_vfprintf_r+0x28d8>
400e480b:	a02152        	l32i	a5, a1, 0x280
400e480e:	02e507        	bbsi	a5, 0, 400e4814 <_vfprintf_r+0x28d8>
400e4811:	01ec06        	j	400e4fc5 <_vfprintf_r+0x3089>
400e4814:	af2192        	l32i	a9, a1, 0x2bc
400e4817:	8f2122        	l32i	a2, a1, 0x23c
400e481a:	9f2162        	l32i	a6, a1, 0x27c
400e481d:	229a      	add.n	a2, a2, a9
400e481f:	8f6122        	s32i	a2, a1, 0x23c
400e4822:	8e2122        	l32i	a2, a1, 0x238
400e4825:	b12182        	l32i	a8, a1, 0x2c4
400e4828:	221b      	addi.n	a2, a2, 1
400e482a:	0689      	s32i.n	a8, a6, 0
400e482c:	1699      	s32i.n	a9, a6, 4
400e482e:	8e6122        	s32i	a2, a1, 0x238
400e4831:	0782e6        	bgei	a2, 8, 400e483c <_vfprintf_r+0x2900>
400e4834:	668b      	addi.n	a6, a6, 8
400e4836:	9f6162        	s32i	a6, a1, 0x27c
400e4839:	000806        	j	400e485d <_vfprintf_r+0x2921>
400e483c:	34a2c2        	movi	a12, 0x234
400e483f:	a221b2        	l32i	a11, a1, 0x288
400e4842:	a321a2        	l32i	a10, a1, 0x28c
400e4845:	80cc10        	add	a12, a12, a1
400e4848:	fb04e5        	call8	400df898 <__sprint_r>
400e484b:	002a16        	beqz	a10, 400e4851 <_vfprintf_r+0x2915>
400e484e:	0225c6        	j	400e50e9 <_vfprintf_r+0x31ad>
400e4851:	e4a122        	movi	a2, 0x1e4
400e4854:	10c132        	addi	a3, a1, 16
400e4857:	803320        	add	a3, a3, a2
400e485a:	9f6132        	s32i	a3, a1, 0x27c
400e485d:	a72142        	l32i	a4, a1, 0x29c
400e4860:	240b      	addi.n	a2, a4, -1
400e4862:	041c      	movi.n	a4, 16
400e4864:	5412e6        	bgei	a2, 1, 400e48bc <_vfprintf_r+0x2980>
400e4867:	01d686        	j	400e4fc5 <_vfprintf_r+0x3089>
400e486a:	520000        	lsi	f0, a0, 0x148
400e486d:	629f21        	l32r	a2, 400bd2ec <_iram_end+0x2f798>
400e4870:	3910c1        	l32r	a12, 400b2cb0 <_iram_end+0x2515c>
400e4873:	213205        	call0	40105b94 <_etext+0x196c3>
400e4876:	8f          	.byte 0x8f
400e4877:	1549      	s32i.n	a4, a5, 4
400e4879:	10c332        	addi	a3, a3, 16
400e487c:	8f6132        	s32i	a3, a1, 0x23c
400e487f:	8e2132        	l32i	a3, a1, 0x238
400e4882:	02d652        	addmi	a5, a6, 0x200
400e4885:	331b      	addi.n	a3, a3, 1
400e4887:	8e6132        	s32i	a3, a1, 0x238
400e488a:	0a83e6        	bgei	a3, 8, 400e4898 <_vfprintf_r+0x295c>
400e488d:	9f2182        	l32i	a8, a1, 0x27c
400e4890:	888b      	addi.n	a8, a8, 8
400e4892:	9f6182        	s32i	a8, a1, 0x27c
400e4895:	000806        	j	400e48b9 <_vfprintf_r+0x297d>
400e4898:	34a2c2        	movi	a12, 0x234
400e489b:	a221b2        	l32i	a11, a1, 0x288
400e489e:	a321a2        	l32i	a10, a1, 0x28c
400e48a1:	80cc10        	add	a12, a12, a1
400e48a4:	faff25        	call8	400df898 <__sprint_r>
400e48a7:	002a16        	beqz	a10, 400e48ad <_vfprintf_r+0x2971>
400e48aa:	020ec6        	j	400e50e9 <_vfprintf_r+0x31ad>
400e48ad:	e4a132        	movi	a3, 0x1e4
400e48b0:	10c192        	addi	a9, a1, 16
400e48b3:	809930        	add	a9, a9, a3
400e48b6:	9f6192        	s32i	a9, a1, 0x27c
400e48b9:	f0c222        	addi	a2, a2, -16
400e48bc:	afd331        	l32r	a3, 400d0808 <_flash_cache_start+0x7f0>
400e48bf:	a92427        	blt	a4, a2, 400e486c <_vfprintf_r+0x2930>
400e48c2:	013d06        	j	400e4dba <_vfprintf_r+0x2e7e>
400e48c5:	952142        	l32i	a4, a1, 0x254
400e48c8:	0214a6        	blti	a4, 1, 400e48ce <_vfprintf_r+0x2992>
400e48cb:	005046        	j	400e4a10 <_vfprintf_r+0x2ad4>
400e48ce:	afcf21        	l32r	a2, 400d080c <_flash_cache_start+0x7f4>
400e48d1:	9f2142        	l32i	a4, a1, 0x27c
400e48d4:	10c152        	addi	a5, a1, 16
400e48d7:	0429      	s32i.n	a2, a4, 0
400e48d9:	120c      	movi.n	a2, 1
400e48db:	1429      	s32i.n	a2, a4, 4
400e48dd:	8f2122        	l32i	a2, a1, 0x23c
400e48e0:	221b      	addi.n	a2, a2, 1
400e48e2:	8f6122        	s32i	a2, a1, 0x23c
400e48e5:	8e2122        	l32i	a2, a1, 0x238
400e48e8:	221b      	addi.n	a2, a2, 1
400e48ea:	8e6122        	s32i	a2, a1, 0x238
400e48ed:	0782e6        	bgei	a2, 8, 400e48f8 <_vfprintf_r+0x29bc>
400e48f0:	448b      	addi.n	a4, a4, 8
400e48f2:	9f6142        	s32i	a4, a1, 0x27c
400e48f5:	000806        	j	400e4919 <_vfprintf_r+0x29dd>
400e48f8:	34a2c2        	movi	a12, 0x234
400e48fb:	a221b2        	l32i	a11, a1, 0x288
400e48fe:	a321a2        	l32i	a10, a1, 0x28c
400e4901:	80cc10        	add	a12, a12, a1
400e4904:	faf925        	call8	400df898 <__sprint_r>
400e4907:	002a16        	beqz	a10, 400e490d <_vfprintf_r+0x29d1>
400e490a:	01f6c6        	j	400e50e9 <_vfprintf_r+0x31ad>
400e490d:	e4a122        	movi	a2, 0x1e4
400e4910:	10c162        	addi	a6, a1, 16
400e4913:	806620        	add	a6, a6, a2
400e4916:	9f6162        	s32i	a6, a1, 0x27c
400e4919:	952122        	l32i	a2, a1, 0x254
400e491c:	a72182        	l32i	a8, a1, 0x29c
400e491f:	202820        	or	a2, a8, a2
400e4922:	72cc      	bnez.n	a2, 400e492d <_vfprintf_r+0x29f1>
400e4924:	a02192        	l32i	a9, a1, 0x280
400e4927:	02e907        	bbsi	a9, 0, 400e492d <_vfprintf_r+0x29f1>
400e492a:	01a5c6        	j	400e4fc5 <_vfprintf_r+0x3089>
400e492d:	9f2122        	l32i	a2, a1, 0x27c
400e4930:	af2142        	l32i	a4, a1, 0x2bc
400e4933:	b12132        	l32i	a3, a1, 0x2c4
400e4936:	1249      	s32i.n	a4, a2, 4
400e4938:	0239      	s32i.n	a3, a2, 0
400e493a:	8f2122        	l32i	a2, a1, 0x23c
400e493d:	10c152        	addi	a5, a1, 16
400e4940:	224a      	add.n	a2, a2, a4
400e4942:	8f6122        	s32i	a2, a1, 0x23c
400e4945:	8e2122        	l32i	a2, a1, 0x238
400e4948:	221b      	addi.n	a2, a2, 1
400e494a:	8e6122        	s32i	a2, a1, 0x238
400e494d:	0782e6        	bgei	a2, 8, 400e4958 <_vfprintf_r+0x2a1c>
400e4950:	9f2162        	l32i	a6, a1, 0x27c
400e4953:	268b      	addi.n	a2, a6, 8
400e4955:	000686        	j	400e4973 <_vfprintf_r+0x2a37>
400e4958:	34a2c2        	movi	a12, 0x234
400e495b:	a221b2        	l32i	a11, a1, 0x288
400e495e:	a321a2        	l32i	a10, a1, 0x28c
400e4961:	80cc10        	add	a12, a12, a1
400e4964:	faf325        	call8	400df898 <__sprint_r>
400e4967:	77ea56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e496a:	e4a122        	movi	a2, 0x1e4
400e496d:	10c182        	addi	a8, a1, 16
400e4970:	802820        	add	a2, a8, a2
400e4973:	952132        	l32i	a3, a1, 0x254
400e4976:	10a042        	movi	a4, 16
400e4979:	603030        	neg	a3, a3
400e497c:	4013e6        	bgei	a3, 1, 400e49c0 <_vfprintf_r+0x2a84>
400e497f:	002046        	j	400e4a04 <_vfprintf_r+0x2ac8>
400e4982:	000000        	ill
400e4985:	8f2152        	l32i	a5, a1, 0x23c
400e4988:	1249      	s32i.n	a4, a2, 4
400e498a:	10c552        	addi	a5, a5, 16
400e498d:	8f6152        	s32i	a5, a1, 0x23c
400e4990:	8e2152        	l32i	a5, a1, 0x238
400e4993:	10c192        	addi	a9, a1, 16
400e4996:	551b      	addi.n	a5, a5, 1
400e4998:	8e6152        	s32i	a5, a1, 0x238
400e499b:	02d962        	addmi	a6, a9, 0x200
400e499e:	228b      	addi.n	a2, a2, 8
400e49a0:	1985a6        	blti	a5, 8, 400e49bd <_vfprintf_r+0x2a81>
400e49a3:	34a2c2        	movi	a12, 0x234
400e49a6:	a221b2        	l32i	a11, a1, 0x288
400e49a9:	a321a2        	l32i	a10, a1, 0x28c
400e49ac:	cc1a      	add.n	a12, a12, a1
400e49ae:	faeea5        	call8	400df898 <__sprint_r>
400e49b1:	734a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e49b4:	e4a122        	movi	a2, 0x1e4
400e49b7:	10c1a2        	addi	a10, a1, 16
400e49ba:	802a20        	add	a2, a10, a2
400e49bd:	f0c332        	addi	a3, a3, -16
400e49c0:	af9251        	l32r	a5, 400d0808 <_flash_cache_start+0x7f0>
400e49c3:	006252        	s32i	a5, a2, 0
400e49c6:	bb2437        	blt	a4, a3, 400e4985 <_vfprintf_r+0x2a49>
400e49c9:	8f2152        	l32i	a5, a1, 0x23c
400e49cc:	016232        	s32i	a3, a2, 4
400e49cf:	803530        	add	a3, a5, a3
400e49d2:	8f6132        	s32i	a3, a1, 0x23c
400e49d5:	8e2132        	l32i	a3, a1, 0x238
400e49d8:	10c1e2        	addi	a14, a1, 16
400e49db:	331b      	addi.n	a3, a3, 1
400e49dd:	8e6132        	s32i	a3, a1, 0x238
400e49e0:	02de42        	addmi	a4, a14, 0x200
400e49e3:	228b      	addi.n	a2, a2, 8
400e49e5:	1b83a6        	blti	a3, 8, 400e4a04 <_vfprintf_r+0x2ac8>
400e49e8:	10c122        	addi	a2, a1, 16
400e49eb:	24a232        	movi	a3, 0x224
400e49ee:	a221b2        	l32i	a11, a1, 0x288
400e49f1:	a321a2        	l32i	a10, a1, 0x28c
400e49f4:	c23a      	add.n	a12, a2, a3
400e49f6:	faea25        	call8	400df898 <__sprint_r>
400e49f9:	6eca56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e49fc:	e4a122        	movi	a2, 0x1e4
400e49ff:	10c142        	addi	a4, a1, 16
400e4a02:	242a      	add.n	a2, a4, a2
400e4a04:	a12182        	l32i	a8, a1, 0x284
400e4a07:	a72192        	l32i	a9, a1, 0x29c
400e4a0a:	0289      	s32i.n	a8, a2, 0
400e4a0c:	015d86        	j	400e4f86 <_vfprintf_r+0x304a>
400e4a0f:	216200        	srai	a6, a0, 2
400e4a12:	4260a7        	bbci	a0, 10, 400e4a58 <_vfprintf_r+0x2b1c>
400e4a15:	14a643        	lsi	f4, a6, 80
400e4a18:	216243        	lsi	f4, a2, 132
400e4a1b:	8f          	.byte 0x8f
400e4a1c:	9f2182        	l32i	a8, a1, 0x27c
400e4a1f:	664a      	add.n	a6, a6, a4
400e4a21:	8f6162        	s32i	a6, a1, 0x23c
400e4a24:	8e2162        	l32i	a6, a1, 0x238
400e4a27:	a12192        	l32i	a9, a1, 0x284
400e4a2a:	661b      	addi.n	a6, a6, 1
400e4a2c:	0899      	s32i.n	a9, a8, 0
400e4a2e:	1849      	s32i.n	a4, a8, 4
400e4a30:	8e6162        	s32i	a6, a1, 0x238
400e4a33:	0a86e6        	bgei	a6, 8, 400e4a41 <_vfprintf_r+0x2b05>
400e4a36:	9f2162        	l32i	a6, a1, 0x27c
400e4a39:	668b      	addi.n	a6, a6, 8
400e4a3b:	9f6162        	s32i	a6, a1, 0x27c
400e4a3e:	0006c6        	j	400e4a5d <_vfprintf_r+0x2b21>
400e4a41:	34a2c2        	movi	a12, 0x234
400e4a44:	a221b2        	l32i	a11, a1, 0x288
400e4a47:	a321a2        	l32i	a10, a1, 0x28c
400e4a4a:	cc1a      	add.n	a12, a12, a1
400e4a4c:	fae4a5        	call8	400df898 <__sprint_r>
400e4a4f:	696a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4a52:	e4a162        	movi	a6, 0x1e4
400e4a55:	10c182        	addi	a8, a1, 16
400e4a58:	886a      	add.n	a8, a8, a6
400e4a5a:	9f6182        	s32i	a8, a1, 0x27c
400e4a5d:	060c      	movi.n	a6, 0
400e4a5f:	534460        	max	a4, a4, a6
400e4a62:	c04240        	sub	a4, a2, a4
400e4a65:	081c      	movi.n	a8, 16
400e4a67:	5214e6        	bgei	a4, 1, 400e4abd <_vfprintf_r+0x2b81>
400e4a6a:	0026c6        	j	400e4b09 <_vfprintf_r+0x2bcd>
400e4a6d:	000000        	ill
400e4a70:	9f2192        	l32i	a9, a1, 0x27c
400e4a73:	0969      	s32i.n	a6, a9, 0
400e4a75:	8f2162        	l32i	a6, a1, 0x23c
400e4a78:	1989      	s32i.n	a8, a9, 4
400e4a7a:	10c662        	addi	a6, a6, 16
400e4a7d:	8f6162        	s32i	a6, a1, 0x23c
400e4a80:	8e2162        	l32i	a6, a1, 0x238
400e4a83:	661b      	addi.n	a6, a6, 1
400e4a85:	8e6162        	s32i	a6, a1, 0x238
400e4a88:	0c86e6        	bgei	a6, 8, 400e4a98 <_vfprintf_r+0x2b5c>
400e4a8b:	9f2162        	l32i	a6, a1, 0x27c
400e4a8e:	668b      	addi.n	a6, a6, 8
400e4a90:	9f6162        	s32i	a6, a1, 0x27c
400e4a93:	0008c6        	j	400e4aba <_vfprintf_r+0x2b7e>
400e4a96:	c20000        	quou	a0, a0, a0
400e4a99:	b234a2        	lsi	f10, a4, 0x2c8
400e4a9c:	a2a221        	l32r	a2, 400cd524 <_rtc_text_end+0xd524>
400e4a9f:	1aa321        	l32r	a2, 400ab52c <_iram_end+0x1d9d8>
400e4aa2:	82cc      	bnez.n	a2, 400e4aae <_vfprintf_r+0x2b72>
400e4aa4:	25b861        	l32r	a6, 400ae184 <_iram_end+0x20630>
400e4aa7:	df          	.byte 0xdf
400e4aa8:	82fa      	add.n	a8, a2, a15
400e4aaa:	56b821        	l32r	a2, 400ba58c <_iram_end+0x2ca38>
400e4aad:	639a      	add.n	a6, a3, a9
400e4aaf:	e4a162        	movi	a6, 0x1e4
400e4ab2:	10c192        	addi	a9, a1, 16
400e4ab5:	996a      	add.n	a9, a9, a6
400e4ab7:	9f6192        	s32i	a9, a1, 0x27c
400e4aba:	f0c442        	addi	a4, a4, -16
400e4abd:	af5261        	l32r	a6, 400d0808 <_flash_cache_start+0x7f0>
400e4ac0:	ac2847        	blt	a8, a4, 400e4a70 <_vfprintf_r+0x2b34>
400e4ac3:	9f2182        	l32i	a8, a1, 0x27c
400e4ac6:	1849      	s32i.n	a4, a8, 4
400e4ac8:	0869      	s32i.n	a6, a8, 0
400e4aca:	8f2182        	l32i	a8, a1, 0x23c
400e4acd:	484a      	add.n	a4, a8, a4
400e4acf:	8f6142        	s32i	a4, a1, 0x23c
400e4ad2:	8e2142        	l32i	a4, a1, 0x238
400e4ad5:	441b      	addi.n	a4, a4, 1
400e4ad7:	8e6142        	s32i	a4, a1, 0x238
400e4ada:	0a84e6        	bgei	a4, 8, 400e4ae8 <_vfprintf_r+0x2bac>
400e4add:	9f2142        	l32i	a4, a1, 0x27c
400e4ae0:	448b      	addi.n	a4, a4, 8
400e4ae2:	9f6142        	s32i	a4, a1, 0x27c
400e4ae5:	000806        	j	400e4b09 <_vfprintf_r+0x2bcd>
400e4ae8:	10c162        	addi	a6, a1, 16
400e4aeb:	24a282        	movi	a8, 0x224
400e4aee:	a221b2        	l32i	a11, a1, 0x288
400e4af1:	a321a2        	l32i	a10, a1, 0x28c
400e4af4:	80c680        	add	a12, a6, a8
400e4af7:	fada25        	call8	400df898 <__sprint_r>
400e4afa:	5eba56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4afd:	e4a142        	movi	a4, 0x1e4
400e4b00:	10c192        	addi	a9, a1, 16
400e4b03:	809940        	add	a9, a9, a4
400e4b06:	9f6192        	s32i	a9, a1, 0x27c
400e4b09:	a12142        	l32i	a4, a1, 0x284
400e4b0c:	a02162        	l32i	a6, a1, 0x280
400e4b0f:	802420        	add	a2, a4, a2
400e4b12:	e4a142        	movi	a4, 0x1e4
400e4b15:	0266a7        	bbci	a6, 10, 400e4b1b <_vfprintf_r+0x2bdf>
400e4b18:	005a06        	j	400e4c84 <_vfprintf_r+0x2d48>
400e4b1b:	006086        	j	400e4ca1 <_vfprintf_r+0x2d65>
400e4b1e:	338c      	beqz.n	a3, 400e4b25 <_vfprintf_r+0x2be9>
400e4b20:	330b      	addi.n	a3, a3, -1
400e4b22:	000246        	j	400e4b2f <_vfprintf_r+0x2bf3>
400e4b25:	ad2182        	l32i	a8, a1, 0x2b4
400e4b28:	550b      	addi.n	a5, a5, -1
400e4b2a:	880b      	addi.n	a8, a8, -1
400e4b2c:	ad6182        	s32i	a8, a1, 0x2b4
400e4b2f:	b02182        	l32i	a8, a1, 0x2c0
400e4b32:	9f2192        	l32i	a9, a1, 0x27c
400e4b35:	b32162        	l32i	a6, a1, 0x2cc
400e4b38:	1989      	s32i.n	a8, a9, 4
400e4b3a:	0969      	s32i.n	a6, a9, 0
400e4b3c:	10c192        	addi	a9, a1, 16
400e4b3f:	02d982        	addmi	a8, a9, 0x200
400e4b42:	8f2162        	l32i	a6, a1, 0x23c
400e4b45:	b02192        	l32i	a9, a1, 0x2c0
400e4b48:	669a      	add.n	a6, a6, a9
400e4b4a:	b869      	s32i.n	a6, a8, 44
400e4b4c:	a868      	l32i.n	a6, a8, 40
400e4b4e:	661b      	addi.n	a6, a6, 1
400e4b50:	a869      	s32i.n	a6, a8, 40
400e4b52:	0a86e6        	bgei	a6, 8, 400e4b60 <_vfprintf_r+0x2c24>
400e4b55:	9f2162        	l32i	a6, a1, 0x27c
400e4b58:	668b      	addi.n	a6, a6, 8
400e4b5a:	9f6162        	s32i	a6, a1, 0x27c
400e4b5d:	000686        	j	400e4b7b <_vfprintf_r+0x2c3f>
400e4b60:	34a2c2        	movi	a12, 0x234
400e4b63:	a221b2        	l32i	a11, a1, 0x288
400e4b66:	a321a2        	l32i	a10, a1, 0x28c
400e4b69:	80cc10        	add	a12, a12, a1
400e4b6c:	fad2a5        	call8	400df898 <__sprint_r>
400e4b6f:	576a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4b72:	10c182        	addi	a8, a1, 16
400e4b75:	808840        	add	a8, a8, a4
400e4b78:	9f6182        	s32i	a8, a1, 0x27c
400e4b7b:	a12192        	l32i	a9, a1, 0x284
400e4b7e:	a72182        	l32i	a8, a1, 0x29c
400e4b81:	806980        	add	a6, a9, a8
400e4b84:	ad2192        	l32i	a9, a1, 0x2b4
400e4b87:	c06620        	sub	a6, a6, a2
400e4b8a:	000982        	l8ui	a8, a9, 0
400e4b8d:	436680        	min	a6, a6, a8
400e4b90:	3d16a6        	blti	a6, 1, 400e4bd1 <_vfprintf_r+0x2c95>
400e4b93:	9f2182        	l32i	a8, a1, 0x27c
400e4b96:	0829      	s32i.n	a2, a8, 0
400e4b98:	1869      	s32i.n	a6, a8, 4
400e4b9a:	8f2182        	l32i	a8, a1, 0x23c
400e4b9d:	886a      	add.n	a8, a8, a6
400e4b9f:	8f6182        	s32i	a8, a1, 0x23c
400e4ba2:	8e2182        	l32i	a8, a1, 0x238
400e4ba5:	881b      	addi.n	a8, a8, 1
400e4ba7:	8e6182        	s32i	a8, a1, 0x238
400e4baa:	0a88e6        	bgei	a8, 8, 400e4bb8 <_vfprintf_r+0x2c7c>
400e4bad:	9f2182        	l32i	a8, a1, 0x27c
400e4bb0:	888b      	addi.n	a8, a8, 8
400e4bb2:	9f6182        	s32i	a8, a1, 0x27c
400e4bb5:	000606        	j	400e4bd1 <_vfprintf_r+0x2c95>
400e4bb8:	34a2c2        	movi	a12, 0x234
400e4bbb:	a221b2        	l32i	a11, a1, 0x288
400e4bbe:	a321a2        	l32i	a10, a1, 0x28c
400e4bc1:	cc1a      	add.n	a12, a12, a1
400e4bc3:	facd65        	call8	400df898 <__sprint_r>
400e4bc6:	51fa56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4bc9:	10c192        	addi	a9, a1, 16
400e4bcc:	994a      	add.n	a9, a9, a4
400e4bce:	9f6192        	s32i	a9, a1, 0x27c
400e4bd1:	ad2192        	l32i	a9, a1, 0x2b4
400e4bd4:	080c      	movi.n	a8, 0
400e4bd6:	536680        	max	a6, a6, a8
400e4bd9:	000982        	l8ui	a8, a9, 0
400e4bdc:	091c      	movi.n	a9, 16
400e4bde:	c06860        	sub	a6, a8, a6
400e4be1:	4c16e6        	bgei	a6, 1, 400e4c31 <_vfprintf_r+0x2cf5>
400e4be4:	0024c6        	j	400e4c7b <_vfprintf_r+0x2d3f>
400e4be7:	000000        	ill
400e4bea:	9f21a2        	l32i	a10, a1, 0x27c
400e4bed:	0a89      	s32i.n	a8, a10, 0
400e4bef:	8f2182        	l32i	a8, a1, 0x23c
400e4bf2:	1a99      	s32i.n	a9, a10, 4
400e4bf4:	10c882        	addi	a8, a8, 16
400e4bf7:	8f6182        	s32i	a8, a1, 0x23c
400e4bfa:	8e2182        	l32i	a8, a1, 0x238
400e4bfd:	881b      	addi.n	a8, a8, 1
400e4bff:	8e6182        	s32i	a8, a1, 0x238
400e4c02:	0788e6        	bgei	a8, 8, 400e4c0d <_vfprintf_r+0x2cd1>
400e4c05:	9f2182        	l32i	a8, a1, 0x27c
400e4c08:	888b      	addi.n	a8, a8, 8
400e4c0a:	000746        	j	400e4c2b <_vfprintf_r+0x2cef>
400e4c0d:	34a2c2        	movi	a12, 0x234
400e4c10:	a221b2        	l32i	a11, a1, 0x288
400e4c13:	a321a2        	l32i	a10, a1, 0x28c
400e4c16:	80cc10        	add	a12, a12, a1
400e4c19:	b76192        	s32i	a9, a1, 0x2dc
400e4c1c:	fac7a5        	call8	400df898 <__sprint_r>
400e4c1f:	b72192        	l32i	a9, a1, 0x2dc
400e4c22:	4c3a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4c25:	10c182        	addi	a8, a1, 16
400e4c28:	808840        	add	a8, a8, a4
400e4c2b:	9f6182        	s32i	a8, a1, 0x27c
400e4c2e:	f0c662        	addi	a6, a6, -16
400e4c31:	aef581        	l32r	a8, 400d0808 <_flash_cache_start+0x7f0>
400e4c34:	b22967        	blt	a9, a6, 400e4bea <_vfprintf_r+0x2cae>
400e4c37:	9f2192        	l32i	a9, a1, 0x27c
400e4c3a:	016962        	s32i	a6, a9, 4
400e4c3d:	0989      	s32i.n	a8, a9, 0
400e4c3f:	8f2192        	l32i	a9, a1, 0x23c
400e4c42:	696a      	add.n	a6, a9, a6
400e4c44:	8f6162        	s32i	a6, a1, 0x23c
400e4c47:	8e2162        	l32i	a6, a1, 0x238
400e4c4a:	661b      	addi.n	a6, a6, 1
400e4c4c:	8e6162        	s32i	a6, a1, 0x238
400e4c4f:	0a86e6        	bgei	a6, 8, 400e4c5d <_vfprintf_r+0x2d21>
400e4c52:	9f2162        	l32i	a6, a1, 0x27c
400e4c55:	668b      	addi.n	a6, a6, 8
400e4c57:	000746        	j	400e4c78 <_vfprintf_r+0x2d3c>
400e4c5a:	000000        	ill
400e4c5d:	10c182        	addi	a8, a1, 16
400e4c60:	24a292        	movi	a9, 0x224
400e4c63:	a221b2        	l32i	a11, a1, 0x288
400e4c66:	a321a2        	l32i	a10, a1, 0x28c
400e4c69:	80c890        	add	a12, a8, a9
400e4c6c:	fac2a5        	call8	400df898 <__sprint_r>
400e4c6f:	476a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4c72:	10c162        	addi	a6, a1, 16
400e4c75:	806640        	add	a6, a6, a4
400e4c78:	9f6162        	s32i	a6, a1, 0x27c
400e4c7b:	ad2182        	l32i	a8, a1, 0x2b4
400e4c7e:	000862        	l8ui	a6, a8, 0
400e4c81:	802260        	add	a2, a2, a6
400e4c84:	316f50        	srai	a6, a5, 31
400e4c87:	c06650        	sub	a6, a6, a5
400e4c8a:	e90696        	bltz	a6, 400e4b1e <_vfprintf_r+0x2be2>
400e4c8d:	316f30        	srai	a6, a3, 31
400e4c90:	c06630        	sub	a6, a6, a3
400e4c93:	e87696        	bltz	a6, 400e4b1e <_vfprintf_r+0x2be2>
400e4c96:	a12192        	l32i	a9, a1, 0x284
400e4c99:	a72142        	l32i	a4, a1, 0x29c
400e4c9c:	394a      	add.n	a3, a9, a4
400e4c9e:	632230        	minu	a2, a2, a3
400e4ca1:	952132        	l32i	a3, a1, 0x254
400e4ca4:	a72152        	l32i	a5, a1, 0x29c
400e4ca7:	052357        	blt	a3, a5, 400e4cb0 <_vfprintf_r+0x2d74>
400e4caa:	a02162        	l32i	a6, a1, 0x280
400e4cad:	476607        	bbci	a6, 0, 400e4cf8 <_vfprintf_r+0x2dbc>
400e4cb0:	9f2182        	l32i	a8, a1, 0x27c
400e4cb3:	af2132        	l32i	a3, a1, 0x2bc
400e4cb6:	af2162        	l32i	a6, a1, 0x2bc
400e4cb9:	1839      	s32i.n	a3, a8, 4
400e4cbb:	8f2132        	l32i	a3, a1, 0x23c
400e4cbe:	b12192        	l32i	a9, a1, 0x2c4
400e4cc1:	336a      	add.n	a3, a3, a6
400e4cc3:	8f6132        	s32i	a3, a1, 0x23c
400e4cc6:	8e2132        	l32i	a3, a1, 0x238
400e4cc9:	0899      	s32i.n	a9, a8, 0
400e4ccb:	331b      	addi.n	a3, a3, 1
400e4ccd:	10c152        	addi	a5, a1, 16
400e4cd0:	8e6132        	s32i	a3, a1, 0x238
400e4cd3:	02d542        	addmi	a4, a5, 0x200
400e4cd6:	888b      	addi.n	a8, a8, 8
400e4cd8:	1983a6        	blti	a3, 8, 400e4cf5 <_vfprintf_r+0x2db9>
400e4cdb:	34a2c2        	movi	a12, 0x234
400e4cde:	a221b2        	l32i	a11, a1, 0x288
400e4ce1:	a321a2        	l32i	a10, a1, 0x28c
400e4ce4:	cc1a      	add.n	a12, a12, a1
400e4ce6:	fabb25        	call8	400df898 <__sprint_r>
400e4ce9:	3fca56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4cec:	e4a132        	movi	a3, 0x1e4
400e4cef:	10c182        	addi	a8, a1, 16
400e4cf2:	808830        	add	a8, a8, a3
400e4cf5:	9f6182        	s32i	a8, a1, 0x27c
400e4cf8:	a72132        	l32i	a3, a1, 0x29c
400e4cfb:	a12192        	l32i	a9, a1, 0x284
400e4cfe:	a72152        	l32i	a5, a1, 0x29c
400e4d01:	493a      	add.n	a4, a9, a3
400e4d03:	952132        	l32i	a3, a1, 0x254
400e4d06:	c04420        	sub	a4, a4, a2
400e4d09:	c03530        	sub	a3, a5, a3
400e4d0c:	434430        	min	a4, a4, a3
400e4d0f:	3d14a6        	blti	a4, 1, 400e4d50 <_vfprintf_r+0x2e14>
400e4d12:	9f2162        	l32i	a6, a1, 0x27c
400e4d15:	0629      	s32i.n	a2, a6, 0
400e4d17:	8f2122        	l32i	a2, a1, 0x23c
400e4d1a:	1649      	s32i.n	a4, a6, 4
400e4d1c:	224a      	add.n	a2, a2, a4
400e4d1e:	8f6122        	s32i	a2, a1, 0x23c
400e4d21:	8e2122        	l32i	a2, a1, 0x238
400e4d24:	221b      	addi.n	a2, a2, 1
400e4d26:	8e6122        	s32i	a2, a1, 0x238
400e4d29:	0782e6        	bgei	a2, 8, 400e4d34 <_vfprintf_r+0x2df8>
400e4d2c:	668b      	addi.n	a6, a6, 8
400e4d2e:	9f6162        	s32i	a6, a1, 0x27c
400e4d31:	0006c6        	j	400e4d50 <_vfprintf_r+0x2e14>
400e4d34:	34a2c2        	movi	a12, 0x234
400e4d37:	a221b2        	l32i	a11, a1, 0x288
400e4d3a:	a321a2        	l32i	a10, a1, 0x28c
400e4d3d:	cc1a      	add.n	a12, a12, a1
400e4d3f:	fab5a5        	call8	400df898 <__sprint_r>
400e4d42:	3a3a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4d45:	e4a122        	movi	a2, 0x1e4
400e4d48:	10c192        	addi	a9, a1, 16
400e4d4b:	992a      	add.n	a9, a9, a2
400e4d4d:	9f6192        	s32i	a9, a1, 0x27c
400e4d50:	020c      	movi.n	a2, 0
400e4d52:	534420        	max	a4, a4, a2
400e4d55:	a72132        	l32i	a3, a1, 0x29c
400e4d58:	952122        	l32i	a2, a1, 0x254
400e4d5b:	c02320        	sub	a2, a3, a2
400e4d5e:	c02240        	sub	a2, a2, a4
400e4d61:	041c      	movi.n	a4, 16
400e4d63:	4d12e6        	bgei	a2, 1, 400e4db4 <_vfprintf_r+0x2e78>
400e4d66:	0096c6        	j	400e4fc5 <_vfprintf_r+0x3089>
400e4d69:	9f2152        	l32i	a5, a1, 0x27c
400e4d6c:	10c162        	addi	a6, a1, 16
400e4d6f:	0539      	s32i.n	a3, a5, 0
400e4d71:	8f2132        	l32i	a3, a1, 0x23c
400e4d74:	1549      	s32i.n	a4, a5, 4
400e4d76:	10c332        	addi	a3, a3, 16
400e4d79:	8f6132        	s32i	a3, a1, 0x23c
400e4d7c:	8e2132        	l32i	a3, a1, 0x238
400e4d7f:	02d652        	addmi	a5, a6, 0x200
400e4d82:	331b      	addi.n	a3, a3, 1
400e4d84:	8e6132        	s32i	a3, a1, 0x238
400e4d87:	0a83e6        	bgei	a3, 8, 400e4d95 <_vfprintf_r+0x2e59>
400e4d8a:	9f2182        	l32i	a8, a1, 0x27c
400e4d8d:	888b      	addi.n	a8, a8, 8
400e4d8f:	9f6182        	s32i	a8, a1, 0x27c
400e4d92:	0006c6        	j	400e4db1 <_vfprintf_r+0x2e75>
400e4d95:	34a2c2        	movi	a12, 0x234
400e4d98:	a221b2        	l32i	a11, a1, 0x288
400e4d9b:	a321a2        	l32i	a10, a1, 0x28c
400e4d9e:	cc1a      	add.n	a12, a12, a1
400e4da0:	faaf65        	call8	400df898 <__sprint_r>
400e4da3:	342a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4da6:	e4a132        	movi	a3, 0x1e4
400e4da9:	10c192        	addi	a9, a1, 16
400e4dac:	993a      	add.n	a9, a9, a3
400e4dae:	9f6192        	s32i	a9, a1, 0x27c
400e4db1:	f0c222        	addi	a2, a2, -16
400e4db4:	ae9531        	l32r	a3, 400d0808 <_flash_cache_start+0x7f0>
400e4db7:	ae2427        	blt	a4, a2, 400e4d69 <_vfprintf_r+0x2e2d>
400e4dba:	9f2142        	l32i	a4, a1, 0x27c
400e4dbd:	10c152        	addi	a5, a1, 16
400e4dc0:	1429      	s32i.n	a2, a4, 4
400e4dc2:	0439      	s32i.n	a3, a4, 0
400e4dc4:	8f2142        	l32i	a4, a1, 0x23c
400e4dc7:	242a      	add.n	a2, a4, a2
400e4dc9:	8f6122        	s32i	a2, a1, 0x23c
400e4dcc:	8e2122        	l32i	a2, a1, 0x238
400e4dcf:	221b      	addi.n	a2, a2, 1
400e4dd1:	8e6122        	s32i	a2, a1, 0x238
400e4dd4:	0c82e6        	bgei	a2, 8, 400e4de4 <_vfprintf_r+0x2ea8>
400e4dd7:	9f2162        	l32i	a6, a1, 0x27c
400e4dda:	668b      	addi.n	a6, a6, 8
400e4ddc:	9f6162        	s32i	a6, a1, 0x27c
400e4ddf:	007886        	j	400e4fc5 <_vfprintf_r+0x3089>
400e4de2:	820000        	mull	a0, a0, a0
400e4de5:	9210c1        	l32r	a12, 400c9628 <_rtc_text_end+0x9628>
400e4de8:	9a24a2        	l32i	a10, a4, 0x268
400e4deb:	86c8      	l32i.n	a12, a6, 32
400e4ded:	6f          	.byte 0x6f
400e4dee:	420000        	xorb	b0, b0, b0
400e4df1:	0ca721        	l32r	a2, 400a8090 <_iram_end+0x1a53c>
400e4df4:	24e612        	s32c1i	a1, a6, 144
400e4df7:	5208      	l32i.n	a0, a2, 20
400e4df9:	07a021        	l32r	a2, 400a6c7c <_iram_end+0x19128>
400e4dfc:	8602e5        	call8	4006ae2c <__udivmoddi4+0x6238>
400e4dff:	620054        	lsi	f5, a0, 0x188
400e4e02:	829f21        	l32r	a2, 400c5880 <_rtc_text_end+0x5880>
400e4e05:	29a121        	l32r	a2, 400af48c <_iram_end+0x21938>
400e4e08:	212216        	beqz	a2, 400e501e <_vfprintf_r+0x30e2>
400e4e0b:	8f          	.byte 0x8f
400e4e0c:	0689      	s32i.n	a8, a6, 0
400e4e0e:	221b      	addi.n	a2, a2, 1
400e4e10:	8f6122        	s32i	a2, a1, 0x23c
400e4e13:	8e2122        	l32i	a2, a1, 0x238
400e4e16:	221b      	addi.n	a2, a2, 1
400e4e18:	8e6122        	s32i	a2, a1, 0x238
400e4e1b:	0582e6        	bgei	a2, 8, 400e4e24 <_vfprintf_r+0x2ee8>
400e4e1e:	268b      	addi.n	a2, a6, 8
400e4e20:	000646        	j	400e4e3d <_vfprintf_r+0x2f01>
400e4e23:	a2c200        	muluh	a12, a2, a0
400e4e26:	21b234        	lsi	f3, a2, 132
400e4e29:	21a2a2        	movi	a10, 0x221
400e4e2c:	cc1aa3        	lsi	f10, a10, 0x330
400e4e2f:	faa6a5        	call8	400df898 <__sprint_r>
400e4e32:	2b3a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4e35:	e4a122        	movi	a2, 0x1e4
400e4e38:	10c1a2        	addi	a10, a1, 16
400e4e3b:	2a2a      	add.n	a2, a10, a2
400e4e3d:	b12132        	l32i	a3, a1, 0x2c4
400e4e40:	af2162        	l32i	a6, a1, 0x2bc
400e4e43:	0239      	s32i.n	a3, a2, 0
400e4e45:	8f2132        	l32i	a3, a1, 0x23c
400e4e48:	af2142        	l32i	a4, a1, 0x2bc
400e4e4b:	336a      	add.n	a3, a3, a6
400e4e4d:	8f6132        	s32i	a3, a1, 0x23c
400e4e50:	8e2132        	l32i	a3, a1, 0x238
400e4e53:	1249      	s32i.n	a4, a2, 4
400e4e55:	331b      	addi.n	a3, a3, 1
400e4e57:	10c152        	addi	a5, a1, 16
400e4e5a:	8e6132        	s32i	a3, a1, 0x238
400e4e5d:	02d542        	addmi	a4, a5, 0x200
400e4e60:	228b      	addi.n	a2, a2, 8
400e4e62:	1883a6        	blti	a3, 8, 400e4e7e <_vfprintf_r+0x2f42>
400e4e65:	34a2c2        	movi	a12, 0x234
400e4e68:	a221b2        	l32i	a11, a1, 0x288
400e4e6b:	a321a2        	l32i	a10, a1, 0x28c
400e4e6e:	cc1a      	add.n	a12, a12, a1
400e4e70:	faa265        	call8	400df898 <__sprint_r>
400e4e73:	272a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4e76:	e4a122        	movi	a2, 0x1e4
400e4e79:	10c182        	addi	a8, a1, 16
400e4e7c:	282a      	add.n	a2, a8, a2
400e4e7e:	ac77c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e4e81:	ac76d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e4e84:	aa21a2        	l32i	a10, a1, 0x2a8
400e4e87:	ab21b2        	l32i	a11, a1, 0x2ac
400e4e8a:	ae4481        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e4e8d:	0008e0        	callx8	a8
400e4e90:	a72192        	l32i	a9, a1, 0x29c
400e4e93:	390b      	addi.n	a3, a9, -1
400e4e95:	047a16        	beqz	a10, 400e4ee0 <_vfprintf_r+0x2fa4>
400e4e98:	1239      	s32i.n	a3, a2, 4
400e4e9a:	8f2132        	l32i	a3, a1, 0x23c
400e4e9d:	a72152        	l32i	a5, a1, 0x29c
400e4ea0:	330b      	addi.n	a3, a3, -1
400e4ea2:	335a      	add.n	a3, a3, a5
400e4ea4:	a12182        	l32i	a8, a1, 0x284
400e4ea7:	8f6132        	s32i	a3, a1, 0x23c
400e4eaa:	8e2132        	l32i	a3, a1, 0x238
400e4ead:	481b      	addi.n	a4, a8, 1
400e4eaf:	331b      	addi.n	a3, a3, 1
400e4eb1:	0249      	s32i.n	a4, a2, 0
400e4eb3:	10c192        	addi	a9, a1, 16
400e4eb6:	8e6132        	s32i	a3, a1, 0x238
400e4eb9:	02d942        	addmi	a4, a9, 0x200
400e4ebc:	228b      	addi.n	a2, a2, 8
400e4ebe:	0283e6        	bgei	a3, 8, 400e4ec4 <_vfprintf_r+0x2f88>
400e4ec1:	002dc6        	j	400e4f7c <_vfprintf_r+0x3040>
400e4ec4:	34a2c2        	movi	a12, 0x234
400e4ec7:	cc1a      	add.n	a12, a12, a1
400e4ec9:	a221b2        	l32i	a11, a1, 0x288
400e4ecc:	a321a2        	l32i	a10, a1, 0x28c
400e4ecf:	fa9ca5        	call8	400df898 <__sprint_r>
400e4ed2:	213a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4ed5:	f4a162        	movi	a6, 0x1f4
400e4ed8:	216a      	add.n	a2, a1, a6
400e4eda:	002786        	j	400e4f7c <_vfprintf_r+0x3040>
400e4edd:	000000        	ill
400e4ee0:	041c      	movi.n	a4, 16
400e4ee2:	3e13e6        	bgei	a3, 1, 400e4f24 <_vfprintf_r+0x2fe8>
400e4ee5:	0024c6        	j	400e4f7c <_vfprintf_r+0x3040>
400e4ee8:	215200        	srai	a5, a0, 2
400e4eeb:	8f          	.byte 0x8f
400e4eec:	1249      	s32i.n	a4, a2, 4
400e4eee:	10c552        	addi	a5, a5, 16
400e4ef1:	8f6152        	s32i	a5, a1, 0x23c
400e4ef4:	8e2152        	l32i	a5, a1, 0x238
400e4ef7:	10c182        	addi	a8, a1, 16
400e4efa:	551b      	addi.n	a5, a5, 1
400e4efc:	8e6152        	s32i	a5, a1, 0x238
400e4eff:	02d862        	addmi	a6, a8, 0x200
400e4f02:	228b      	addi.n	a2, a2, 8
400e4f04:	1985a6        	blti	a5, 8, 400e4f21 <_vfprintf_r+0x2fe5>
400e4f07:	34a2c2        	movi	a12, 0x234
400e4f0a:	a221b2        	l32i	a11, a1, 0x288
400e4f0d:	a321a2        	l32i	a10, a1, 0x28c
400e4f10:	cc1a      	add.n	a12, a12, a1
400e4f12:	fa9865        	call8	400df898 <__sprint_r>
400e4f15:	1d0a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4f18:	e4a122        	movi	a2, 0x1e4
400e4f1b:	10c192        	addi	a9, a1, 16
400e4f1e:	802920        	add	a2, a9, a2
400e4f21:	f0c332        	addi	a3, a3, -16
400e4f24:	ae3951        	l32r	a5, 400d0808 <_flash_cache_start+0x7f0>
400e4f27:	0259      	s32i.n	a5, a2, 0
400e4f29:	bc2437        	blt	a4, a3, 400e4ee9 <_vfprintf_r+0x2fad>
400e4f2c:	8f2152        	l32i	a5, a1, 0x23c
400e4f2f:	1239      	s32i.n	a3, a2, 4
400e4f31:	353a      	add.n	a3, a5, a3
400e4f33:	8f6132        	s32i	a3, a1, 0x23c
400e4f36:	8e2132        	l32i	a3, a1, 0x238
400e4f39:	10c1a2        	addi	a10, a1, 16
400e4f3c:	331b      	addi.n	a3, a3, 1
400e4f3e:	8e6132        	s32i	a3, a1, 0x238
400e4f41:	02da42        	addmi	a4, a10, 0x200
400e4f44:	228b      	addi.n	a2, a2, 8
400e4f46:	3283a6        	blti	a3, 8, 400e4f7c <_vfprintf_r+0x3040>
400e4f49:	10c1e2        	addi	a14, a1, 16
400e4f4c:	24a222        	movi	a2, 0x224
400e4f4f:	ce2a      	add.n	a12, a14, a2
400e4f51:	ffdd06        	j	400e4ec9 <_vfprintf_r+0x2f8d>
400e4f54:	9f2132        	l32i	a3, a1, 0x27c
400e4f57:	a12142        	l32i	a4, a1, 0x284
400e4f5a:	1329      	s32i.n	a2, a3, 4
400e4f5c:	8f2122        	l32i	a2, a1, 0x23c
400e4f5f:	0349      	s32i.n	a4, a3, 0
400e4f61:	221b      	addi.n	a2, a2, 1
400e4f63:	8f6122        	s32i	a2, a1, 0x23c
400e4f66:	8e2122        	l32i	a2, a1, 0x238
400e4f69:	10c152        	addi	a5, a1, 16
400e4f6c:	221b      	addi.n	a2, a2, 1
400e4f6e:	8e6122        	s32i	a2, a1, 0x238
400e4f71:	0282a6        	blti	a2, 8, 400e4f77 <_vfprintf_r+0x303b>
400e4f74:	ffd306        	j	400e4ec4 <_vfprintf_r+0x2f88>
400e4f77:	9f2162        	l32i	a6, a1, 0x27c
400e4f7a:	268b      	addi.n	a2, a6, 8
400e4f7c:	47a282        	movi	a8, 0x247
400e4f7f:	318a      	add.n	a3, a1, a8
400e4f81:	b42192        	l32i	a9, a1, 0x2d0
400e4f84:	0239      	s32i.n	a3, a2, 0
400e4f86:	1299      	s32i.n	a9, a2, 4
400e4f88:	8f2132        	l32i	a3, a1, 0x23c
400e4f8b:	10c1a2        	addi	a10, a1, 16
400e4f8e:	339a      	add.n	a3, a3, a9
400e4f90:	8f6132        	s32i	a3, a1, 0x23c
400e4f93:	8e2132        	l32i	a3, a1, 0x238
400e4f96:	02da42        	addmi	a4, a10, 0x200
400e4f99:	331b      	addi.n	a3, a3, 1
400e4f9b:	8e6132        	s32i	a3, a1, 0x238
400e4f9e:	0783e6        	bgei	a3, 8, 400e4fa9 <_vfprintf_r+0x306d>
400e4fa1:	228b      	addi.n	a2, a2, 8
400e4fa3:	9f6122        	s32i	a2, a1, 0x27c
400e4fa6:	0006c6        	j	400e4fc5 <_vfprintf_r+0x3089>
400e4fa9:	34a2c2        	movi	a12, 0x234
400e4fac:	cc1a      	add.n	a12, a12, a1
400e4fae:	a221b2        	l32i	a11, a1, 0x288
400e4fb1:	a321a2        	l32i	a10, a1, 0x28c
400e4fb4:	fa8e25        	call8	400df898 <__sprint_r>
400e4fb7:	12ea56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e4fba:	e4a122        	movi	a2, 0x1e4
400e4fbd:	10c132        	addi	a3, a1, 16
400e4fc0:	332a      	add.n	a3, a3, a2
400e4fc2:	9f6132        	s32i	a3, a1, 0x27c
400e4fc5:	a02142        	l32i	a4, a1, 0x280
400e4fc8:	1ce427        	bbsi	a4, 2, 400e4fe8 <_vfprintf_r+0x30ac>
400e4fcb:	ac2152        	l32i	a5, a1, 0x2b0
400e4fce:	a92162        	l32i	a6, a1, 0x2a4
400e4fd1:	ae2182        	l32i	a8, a1, 0x2b8
400e4fd4:	532560        	max	a2, a5, a6
400e4fd7:	882a      	add.n	a8, a8, a2
400e4fd9:	8f2122        	l32i	a2, a1, 0x23c
400e4fdc:	ae6182        	s32i	a8, a1, 0x2b8
400e4fdf:	09b216        	beqz	a2, 400e507e <_vfprintf_r+0x3142>
400e4fe2:	002c46        	j	400e5097 <_vfprintf_r+0x315b>
400e4fe5:	000000        	ill
400e4fe8:	ac2192        	l32i	a9, a1, 0x2b0
400e4feb:	a921e2        	l32i	a14, a1, 0x2a4
400e4fee:	c029e0        	sub	a2, a9, a14
400e4ff1:	d612a6        	blti	a2, 1, 400e4fcb <_vfprintf_r+0x308f>
400e4ff4:	041c      	movi.n	a4, 16
400e4ff6:	001286        	j	400e5044 <_vfprintf_r+0x3108>
400e4ff9:	9f2152        	l32i	a5, a1, 0x27c
400e4ffc:	10c162        	addi	a6, a1, 16
400e4fff:	0539      	s32i.n	a3, a5, 0
400e5001:	8f2132        	l32i	a3, a1, 0x23c
400e5004:	1549      	s32i.n	a4, a5, 4
400e5006:	10c332        	addi	a3, a3, 16
400e5009:	8f6132        	s32i	a3, a1, 0x23c
400e500c:	8e2132        	l32i	a3, a1, 0x238
400e500f:	02d652        	addmi	a5, a6, 0x200
400e5012:	331b      	addi.n	a3, a3, 1
400e5014:	8e6132        	s32i	a3, a1, 0x238
400e5017:	0a83e6        	bgei	a3, 8, 400e5025 <_vfprintf_r+0x30e9>
400e501a:	9f2182        	l32i	a8, a1, 0x27c
400e501d:	888b      	addi.n	a8, a8, 8
400e501f:	9f6182        	s32i	a8, a1, 0x27c
400e5022:	0006c6        	j	400e5041 <_vfprintf_r+0x3105>
400e5025:	34a2c2        	movi	a12, 0x234
400e5028:	a221b2        	l32i	a11, a1, 0x288
400e502b:	a321a2        	l32i	a10, a1, 0x28c
400e502e:	cc1a      	add.n	a12, a12, a1
400e5030:	fa8665        	call8	400df898 <__sprint_r>
400e5033:	0b2a56        	bnez	a10, 400e50e9 <_vfprintf_r+0x31ad>
400e5036:	e4a132        	movi	a3, 0x1e4
400e5039:	10c192        	addi	a9, a1, 16
400e503c:	993a      	add.n	a9, a9, a3
400e503e:	9f6192        	s32i	a9, a1, 0x27c
400e5041:	f0c222        	addi	a2, a2, -16
400e5044:	adf031        	l32r	a3, 400d0804 <_flash_cache_start+0x7ec>
400e5047:	ae2427        	blt	a4, a2, 400e4ff9 <_vfprintf_r+0x30bd>
400e504a:	9f2142        	l32i	a4, a1, 0x27c
400e504d:	10c152        	addi	a5, a1, 16
400e5050:	1429      	s32i.n	a2, a4, 4
400e5052:	0439      	s32i.n	a3, a4, 0
400e5054:	8f2142        	l32i	a4, a1, 0x23c
400e5057:	242a      	add.n	a2, a4, a2
400e5059:	8f6122        	s32i	a2, a1, 0x23c
400e505c:	8e2122        	l32i	a2, a1, 0x238
400e505f:	221b      	addi.n	a2, a2, 1
400e5061:	8e6122        	s32i	a2, a1, 0x238
400e5064:	0282e6        	bgei	a2, 8, 400e506a <_vfprintf_r+0x312e>
400e5067:	ffd806        	j	400e4fcb <_vfprintf_r+0x308f>
400e506a:	24a262        	movi	a6, 0x224
400e506d:	a221b2        	l32i	a11, a1, 0x288
400e5070:	a321a2        	l32i	a10, a1, 0x28c
400e5073:	c56a      	add.n	a12, a5, a6
400e5075:	fa8225        	call8	400df898 <__sprint_r>
400e5078:	f4fa16        	beqz	a10, 400e4fcb <_vfprintf_r+0x308f>
400e507b:	001a86        	j	400e50e9 <_vfprintf_r+0x31ad>
400e507e:	030c      	movi.n	a3, 0
400e5080:	a42192        	l32i	a9, a1, 0x290
400e5083:	8e6132        	s32i	a3, a1, 0x238
400e5086:	10c182        	addi	a8, a1, 16
400e5089:	e4a122        	movi	a2, 0x1e4
400e508c:	1c9937        	bne	a9, a3, 400e50ac <_vfprintf_r+0x3170>
400e508f:	382a      	add.n	a3, a8, a2
400e5091:	9f6132        	s32i	a3, a1, 0x27c
400e5094:	f406c6        	j	400e20b3 <_vfprintf_r+0x177>
400e5097:	34a2c2        	movi	a12, 0x234
400e509a:	a221b2        	l32i	a11, a1, 0x288
400e509d:	a321a2        	l32i	a10, a1, 0x28c
400e50a0:	cc1a      	add.n	a12, a12, a1
400e50a2:	fa7f65        	call8	400df898 <__sprint_r>
400e50a5:	fd5a16        	beqz	a10, 400e507e <_vfprintf_r+0x3142>
400e50a8:	000f46        	j	400e50e9 <_vfprintf_r+0x31ad>
400e50ab:	21b200        	srai	a11, a0, 2
400e50ae:	21a2a4        	lsi	f10, a2, 132
400e50b1:	c142a3        	ssi	f10, a2, 0x304
400e50b4:	442a10        	extui	a2, a1, 10, 5
400e50b7:	9f7de5        	call8	40084894 <_free_r>
400e50ba:	9f6142        	s32i	a4, a1, 0x27c
400e50bd:	f3fc86        	j	400e20b3 <_vfprintf_r+0x177>
400e50c0:	8f2122        	l32i	a2, a1, 0x23c
400e50c3:	92cc      	bnez.n	a2, 400e50d0 <_vfprintf_r+0x3194>
400e50c5:	030c      	movi.n	a3, 0
400e50c7:	10c152        	addi	a5, a1, 16
400e50ca:	8e6132        	s32i	a3, a1, 0x238
400e50cd:	000a06        	j	400e50f9 <_vfprintf_r+0x31bd>
400e50d0:	24a2c2        	movi	a12, 0x224
400e50d3:	10c162        	addi	a6, a1, 16
400e50d6:	a221b2        	l32i	a11, a1, 0x288
400e50d9:	a321a2        	l32i	a10, a1, 0x28c
400e50dc:	c6ca      	add.n	a12, a6, a12
400e50de:	fa7ba5        	call8	400df898 <__sprint_r>
400e50e1:	4adc      	bnez.n	a10, 400e50f9 <_vfprintf_r+0x31bd>
400e50e3:	fff786        	j	400e50c5 <_vfprintf_r+0x3189>
400e50e6:	000000        	ill
400e50e9:	a42182        	l32i	a8, a1, 0x290
400e50ec:	988c      	beqz.n	a8, 400e50f9 <_vfprintf_r+0x31bd>
400e50ee:	a321a2        	l32i	a10, a1, 0x28c
400e50f1:	08bd      	mov.n	a11, a8
400e50f3:	201110        	or	a1, a1, a1
400e50f6:	9f79e5        	call8	40084894 <_free_r>
400e50f9:	a22192        	l32i	a9, a1, 0x288
400e50fc:	192922        	l32i	a2, a9, 100
400e50ff:	0ee207        	bbsi	a2, 0, 400e5111 <_vfprintf_r+0x31d5>
400e5102:	061922        	l16ui	a2, a9, 12
400e5105:	08e297        	bbsi	a2, 9, 400e5111 <_vfprintf_r+0x31d5>
400e5108:	58c9a2        	addi	a10, a9, 88
400e510b:	201110        	or	a1, a1, a1
400e510e:	9fa065        	call8	40084b14 <_lock_release_recursive>
400e5111:	a22132        	l32i	a3, a1, 0x288
400e5114:	061322        	l16ui	a2, a3, 12
400e5117:	026267        	bbci	a2, 6, 400e511d <_vfprintf_r+0x31e1>
400e511a:	f3c306        	j	400e202a <_vfprintf_r+0xee>
400e511d:	ae2122        	l32i	a2, a1, 0x2b8
400e5120:	f01d      	retw.n
400e5122:	972182        	l32i	a8, a1, 0x25c
400e5125:	671b      	addi.n	a6, a7, 1
400e5127:	02a787        	bge	a7, a8, 400e512d <_vfprintf_r+0x31f1>
400e512a:	f44fc6        	j	400e226d <_vfprintf_r+0x331>
400e512d:	f45146        	j	400e2276 <_vfprintf_r+0x33a>
400e5130:	972162        	l32i	a6, a1, 0x25c
400e5133:	871b      	addi.n	a8, a7, 1
400e5135:	02a767        	bge	a7, a6, 400e513b <_vfprintf_r+0x31ff>
400e5138:	f49846        	j	400e239d <_vfprintf_r+0x461>
400e513b:	f499c6        	j	400e23a6 <_vfprintf_r+0x46a>
	...

400e5140 <vfprintf>:
400e5140:	006136        	entry	a1, 48
400e5143:	0149      	s32i.n	a4, a1, 0
400e5145:	1159      	s32i.n	a5, a1, 4
400e5147:	2169      	s32i.n	a6, a1, 8
400e5149:	a387e5        	call8	400889c8 <__getreent>
400e514c:	01d8      	l32i.n	a13, a1, 0
400e514e:	11e8      	l32i.n	a14, a1, 4
400e5150:	21f8      	l32i.n	a15, a1, 8
400e5152:	02bd      	mov.n	a11, a2
400e5154:	03cd      	mov.n	a12, a3
400e5156:	fcde65        	call8	400e1f3c <_vfprintf_r>
400e5159:	0a2d      	mov.n	a2, a10
400e515b:	f01d      	retw.n
400e515d:	000000        	ill

400e5160 <__sbprintf>:
400e5160:	024136        	entry	a1, 0x120
400e5163:	061392        	l16ui	a9, a3, 12
400e5166:	d87c      	movi.n	a8, -3
400e5168:	108980        	and	a8, a9, a8
400e516b:	465182        	s16i	a8, a1, 140
400e516e:	192382        	l32i	a8, a3, 100
400e5171:	3c6152        	s32i	a5, a1, 240
400e5174:	396182        	s32i	a8, a1, 228
400e5177:	071382        	l16ui	a8, a3, 14
400e517a:	090c      	movi.n	a9, 0
400e517c:	475182        	s16i	a8, a1, 142
400e517f:	8388      	l32i.n	a8, a3, 32
400e5181:	266192        	s32i	a9, a1, 152
400e5184:	286182        	s32i	a8, a1, 160
400e5187:	a388      	l32i.n	a8, a3, 40
400e5189:	3d6162        	s32i	a6, a1, 244
400e518c:	2a6182        	s32i	a8, a1, 168
400e518f:	80a082        	movi	a8, 128
400e5192:	581a      	add.n	a5, a8, a1
400e5194:	58c5a2        	addi	a10, a5, 88
400e5197:	226182        	s32i	a8, a1, 136
400e519a:	256182        	s32i	a8, a1, 148
400e519d:	3e6172        	s32i	a7, a1, 248
400e51a0:	206112        	s32i	a1, a1, 128
400e51a3:	246112        	s32i	a1, a1, 144
400e51a6:	9f8ca5        	call8	40084a70 <_lock_init_recursive>
400e51a9:	3c21d2        	l32i	a13, a1, 240
400e51ac:	3d21e2        	l32i	a14, a1, 244
400e51af:	3e21f2        	l32i	a15, a1, 248
400e51b2:	80a0b2        	movi	a11, 128
400e51b5:	04cd      	mov.n	a12, a4
400e51b7:	bb1a      	add.n	a11, a11, a1
400e51b9:	02ad      	mov.n	a10, a2
400e51bb:	fcd825        	call8	400e1f3c <_vfprintf_r>
400e51be:	0a4d      	mov.n	a4, a10
400e51c0:	011a96        	bltz	a10, 400e51d5 <__sbprintf+0x75>
400e51c3:	80a0b2        	movi	a11, 128
400e51c6:	02ad      	mov.n	a10, a2
400e51c8:	bb1a      	add.n	a11, a11, a1
400e51ca:	ad3081        	l32r	a8, 400d068c <_flash_cache_start+0x674>
400e51cd:	0008e0        	callx8	a8
400e51d0:	f27c      	movi.n	a2, -1
400e51d2:	9342a0        	movnez	a4, a2, a10
400e51d5:	461182        	l16ui	a8, a1, 140
400e51d8:	40a022        	movi	a2, 64
400e51db:	080827        	bnone	a8, a2, 400e51e7 <__sbprintf+0x87>
400e51de:	061382        	l16ui	a8, a3, 12
400e51e1:	202820        	or	a2, a8, a2
400e51e4:	065322        	s16i	a2, a3, 12
400e51e7:	d8a0a2        	movi	a10, 216
400e51ea:	80a1a0        	add	a10, a1, a10
400e51ed:	9f8925        	call8	40084a80 <_lock_close>
400e51f0:	202440        	or	a2, a4, a4
400e51f3:	f01d      	retw.n
400e51f5:	000000        	ill

400e51f8 <vprintf>:
400e51f8:	006136        	entry	a1, 48
400e51fb:	0139      	s32i.n	a3, a1, 0
400e51fd:	1149      	s32i.n	a4, a1, 4
400e51ff:	2159      	s32i.n	a5, a1, 8
400e5201:	a37c65        	call8	400889c8 <__getreent>
400e5204:	0a3d      	mov.n	a3, a10
400e5206:	8a8c      	beqz.n	a10, 400e5212 <vprintf+0x1a>
400e5208:	6a88      	l32i.n	a8, a10, 24
400e520a:	48cc      	bnez.n	a8, 400e5212 <vprintf+0x1a>
400e520c:	ad1f81        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400e520f:	0008e0        	callx8	a8
400e5212:	0021d2        	l32i	a13, a1, 0
400e5215:	0121e2        	l32i	a14, a1, 4
400e5218:	0221f2        	l32i	a15, a1, 8
400e521b:	23b8      	l32i.n	a11, a3, 8
400e521d:	02cd      	mov.n	a12, a2
400e521f:	03ad      	mov.n	a10, a3
400e5221:	fcd1a5        	call8	400e1f3c <_vfprintf_r>
400e5224:	0a2d      	mov.n	a2, a10
400e5226:	f01d      	retw.n

400e5228 <_vprintf_r>:
400e5228:	006136        	entry	a1, 48
400e522b:	0149      	s32i.n	a4, a1, 0
400e522d:	1159      	s32i.n	a5, a1, 4
400e522f:	2169      	s32i.n	a6, a1, 8
400e5231:	b28c      	beqz.n	a2, 400e5240 <_vprintf_r+0x18>
400e5233:	6288      	l32i.n	a8, a2, 24
400e5235:	007856        	bnez	a8, 400e5240 <_vprintf_r+0x18>
400e5238:	02ad      	mov.n	a10, a2
400e523a:	ad1381        	l32r	a8, 400d0688 <_flash_cache_start+0x670>
400e523d:	0008e0        	callx8	a8
400e5240:	0222b2        	l32i	a11, a2, 8
400e5243:	0021d2        	l32i	a13, a1, 0
400e5246:	0121e2        	l32i	a14, a1, 4
400e5249:	21f8      	l32i.n	a15, a1, 8
400e524b:	03cd      	mov.n	a12, a3
400e524d:	02ad      	mov.n	a10, a2
400e524f:	fccee5        	call8	400e1f3c <_vfprintf_r>
400e5252:	0a2d      	mov.n	a2, a10
400e5254:	f01d      	retw.n
	...

400e5258 <_vsnprintf_r>:
400e5258:	012136        	entry	a1, 144
400e525b:	05cd      	mov.n	a12, a5
400e525d:	0084d6        	bgez	a4, 400e5269 <_vsnprintf_r+0x11>
400e5260:	8ba032        	movi	a3, 139
400e5263:	0239      	s32i.n	a3, a2, 0
400e5265:	f27c      	movi.n	a2, -1
400e5267:	f01d      	retw.n
400e5269:	08a282        	movi	a8, 0x208
400e526c:	065182        	s16i	a8, a1, 12
400e526f:	0139      	s32i.n	a3, a1, 0
400e5271:	4139      	s32i.n	a3, a1, 16
400e5273:	840b      	addi.n	a8, a4, -1
400e5275:	030c      	movi.n	a3, 0
400e5277:	2421d2        	l32i	a13, a1, 144
400e527a:	2521e2        	l32i	a14, a1, 148
400e527d:	2621f2        	l32i	a15, a1, 152
400e5280:	838340        	moveqz	a8, a3, a4
400e5283:	01bd      	mov.n	a11, a1
400e5285:	f37c      	movi.n	a3, -1
400e5287:	02ad      	mov.n	a10, a2
400e5289:	026182        	s32i	a8, a1, 8
400e528c:	056182        	s32i	a8, a1, 20
400e528f:	075132        	s16i	a3, a1, 14
400e5292:	f70865        	call8	400dc318 <_svfprintf_r>
400e5295:	040ae6        	bgei	a10, -1, 400e529d <_vsnprintf_r+0x45>
400e5298:	8ba032        	movi	a3, 139
400e529b:	0239      	s32i.n	a3, a2, 0
400e529d:	0a2d      	mov.n	a2, a10
400e529f:	548c      	beqz.n	a4, 400e52a8 <_vsnprintf_r+0x50>
400e52a1:	0138      	l32i.n	a3, a1, 0
400e52a3:	040c      	movi.n	a4, 0
400e52a5:	004342        	s8i	a4, a3, 0
400e52a8:	f01d      	retw.n
	...

400e52ac <vsnprintf>:
400e52ac:	008136        	entry	a1, 64
400e52af:	4159      	s32i.n	a5, a1, 16
400e52b1:	5169      	s32i.n	a6, a1, 20
400e52b3:	6179      	s32i.n	a7, a1, 24
400e52b5:	a37125        	call8	400889c8 <__getreent>
400e52b8:	4188      	l32i.n	a8, a1, 16
400e52ba:	02bd      	mov.n	a11, a2
400e52bc:	0189      	s32i.n	a8, a1, 0
400e52be:	5188      	l32i.n	a8, a1, 20
400e52c0:	04dd      	mov.n	a13, a4
400e52c2:	1189      	s32i.n	a8, a1, 4
400e52c4:	6188      	l32i.n	a8, a1, 24
400e52c6:	03cd      	mov.n	a12, a3
400e52c8:	2189      	s32i.n	a8, a1, 8
400e52ca:	fff8e5        	call8	400e5258 <_vsnprintf_r>
400e52cd:	0a2d      	mov.n	a2, a10
400e52cf:	f01d      	retw.n
400e52d1:	000000        	ill

400e52d4 <quorem>:
400e52d4:	006136        	entry	a1, 48
400e52d7:	03bd      	mov.n	a11, a3
400e52d9:	4348      	l32i.n	a4, a3, 16
400e52db:	4238      	l32i.n	a3, a2, 16
400e52dd:	0a0c      	movi.n	a10, 0
400e52df:	02a347        	bge	a3, a4, 400e52e5 <quorem+0x11>
400e52e2:	003d06        	j	400e53da <quorem+0x106>
400e52e5:	440b      	addi.n	a4, a4, -1
400e52e7:	1194e0        	slli	a9, a4, 2
400e52ea:	14cb62        	addi	a6, a11, 20
400e52ed:	369a      	add.n	a3, a6, a9
400e52ef:	14c272        	addi	a7, a2, 20
400e52f2:	979a      	add.n	a9, a7, a9
400e52f4:	0358      	l32i.n	a5, a3, 0
400e52f6:	0988      	l32i.n	a8, a9, 0
400e52f8:	551b      	addi.n	a5, a5, 1
400e52fa:	c25850        	quou	a5, a8, a5
400e52fd:	7415a7        	beq	a5, a10, 400e5375 <quorem+0xa1>
400e5300:	07dd      	mov.n	a13, a7
400e5302:	06cd      	mov.n	a12, a6
400e5304:	0aed      	mov.n	a14, a10
400e5306:	0cf8      	l32i.n	a15, a12, 0
400e5308:	cc4b      	addi.n	a12, a12, 4
400e530a:	f480f0        	extui	a8, a15, 0, 16
400e530d:	828850        	mull	a8, a8, a5
400e5310:	f5f0f0        	extui	a15, a15, 16, 16
400e5313:	88aa      	add.n	a8, a8, a10
400e5315:	82ff50        	mull	a15, a15, a5
400e5318:	f5a080        	extui	a10, a8, 16, 16
400e531b:	afaa      	add.n	a10, a15, a10
400e531d:	0df8      	l32i.n	a15, a13, 0
400e531f:	f48080        	extui	a8, a8, 0, 16
400e5322:	f4f0f0        	extui	a15, a15, 0, 16
400e5325:	efea      	add.n	a14, a15, a14
400e5327:	c08e80        	sub	a8, a14, a8
400e532a:	0de8      	l32i.n	a14, a13, 0
400e532c:	11a9      	s32i.n	a10, a1, 4
400e532e:	f5e0e0        	extui	a14, a14, 16, 16
400e5331:	01e9      	s32i.n	a14, a1, 0
400e5333:	11e8      	l32i.n	a14, a1, 4
400e5335:	f5a0a0        	extui	a10, a10, 16, 16
400e5338:	f4f0e0        	extui	a15, a14, 0, 16
400e533b:	01e8      	l32i.n	a14, a1, 0
400e533d:	c0fef0        	sub	a15, a14, a15
400e5340:	31e080        	srai	a14, a8, 16
400e5343:	ffea      	add.n	a15, a15, a14
400e5345:	31e0f0        	srai	a14, a15, 16
400e5348:	f48080        	extui	a8, a8, 0, 16
400e534b:	11ff00        	slli	a15, a15, 16
400e534e:	208f80        	or	a8, a15, a8
400e5351:	0d89      	s32i.n	a8, a13, 0
400e5353:	dd4b      	addi.n	a13, a13, 4
400e5355:	adb3c7        	bgeu	a3, a12, 400e5306 <quorem+0x32>
400e5358:	0988      	l32i.n	a8, a9, 0
400e535a:	78dc      	bnez.n	a8, 400e5375 <quorem+0xa1>
400e535c:	000086        	j	400e5362 <quorem+0x8e>
400e535f:	440b00        	extui	a0, a0, 11, 5
400e5362:	fcc992        	addi	a9, a9, -4
400e5365:	043797        	bltu	a7, a9, 400e536d <quorem+0x99>
400e5368:	4249      	s32i.n	a4, a2, 16
400e536a:	0001c6        	j	400e5375 <quorem+0xa1>
400e536d:	0988      	l32i.n	a8, a9, 0
400e536f:	fed816        	beqz	a8, 400e5360 <quorem+0x8c>
400e5372:	fffc86        	j	400e5368 <quorem+0x94>
400e5375:	20a220        	or	a10, a2, a2
400e5378:	f62aa5        	call8	400db624 <__mcmp>
400e537b:	059a96        	bltz	a10, 400e53d8 <quorem+0x104>
400e537e:	01c552        	addi	a5, a5, 1
400e5381:	20a770        	or	a10, a7, a7
400e5384:	0c0c      	movi.n	a12, 0
400e5386:	0a98      	l32i.n	a9, a10, 0
400e5388:	06b8      	l32i.n	a11, a6, 0
400e538a:	f48090        	extui	a8, a9, 0, 16
400e538d:	c8ca      	add.n	a12, a8, a12
400e538f:	f480b0        	extui	a8, a11, 0, 16
400e5392:	c08c80        	sub	a8, a12, a8
400e5395:	f59090        	extui	a9, a9, 16, 16
400e5398:	f5b0b0        	extui	a11, a11, 16, 16
400e539b:	c0b9b0        	sub	a11, a9, a11
400e539e:	319080        	srai	a9, a8, 16
400e53a1:	9b9a      	add.n	a9, a11, a9
400e53a3:	31c090        	srai	a12, a9, 16
400e53a6:	f48080        	extui	a8, a8, 0, 16
400e53a9:	119900        	slli	a9, a9, 16
400e53ac:	208980        	or	a8, a9, a8
400e53af:	0a89      	s32i.n	a8, a10, 0
400e53b1:	664b      	addi.n	a6, a6, 4
400e53b3:	aa4b      	addi.n	a10, a10, 4
400e53b5:	cdb367        	bgeu	a3, a6, 400e5386 <quorem+0xb2>
400e53b8:	a03470        	addx4	a3, a4, a7
400e53bb:	0368      	l32i.n	a6, a3, 0
400e53bd:	76dc      	bnez.n	a6, 400e53d8 <quorem+0x104>
400e53bf:	000046        	j	400e53c4 <quorem+0xf0>
400e53c2:	440b      	addi.n	a4, a4, -1
400e53c4:	fcc332        	addi	a3, a3, -4
400e53c7:	053737        	bltu	a7, a3, 400e53d0 <quorem+0xfc>
400e53ca:	4249      	s32i.n	a4, a2, 16
400e53cc:	000206        	j	400e53d8 <quorem+0x104>
400e53cf:	036800        	rsr.ddr	a0
400e53d2:	fec616        	beqz	a6, 400e53c2 <quorem+0xee>
400e53d5:	fffc46        	j	400e53ca <quorem+0xf6>
400e53d8:	05ad      	mov.n	a10, a5
400e53da:	0a2d      	mov.n	a2, a10
400e53dc:	f01d      	retw.n
	...

400e53e0 <_dtoa_r>:
400e53e0:	012136        	entry	a1, 144
400e53e3:	0c6162        	s32i	a6, a1, 48
400e53e6:	092262        	l32i	a6, a2, 36
400e53e9:	116172        	s32i	a7, a1, 68
400e53ec:	046142        	s32i	a4, a1, 16
400e53ef:	5159      	s32i.n	a5, a1, 20
400e53f1:	252132        	l32i	a3, a1, 148
400e53f4:	011656        	bnez	a6, 400e5409 <_dtoa_r+0x29>
400e53f7:	0a1c      	movi.n	a10, 16
400e53f9:	ab3a81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e53fc:	0008e0        	callx8	a8
400e53ff:	92a9      	s32i.n	a10, a2, 36
400e5401:	1a69      	s32i.n	a6, a10, 4
400e5403:	2a69      	s32i.n	a6, a10, 8
400e5405:	0a69      	s32i.n	a6, a10, 0
400e5407:	3a69      	s32i.n	a6, a10, 12
400e5409:	9268      	l32i.n	a6, a2, 36
400e540b:	06b8      	l32i.n	a11, a6, 0
400e540d:	7b9c      	beqz.n	a11, 400e5428 <_dtoa_r+0x48>
400e540f:	1688      	l32i.n	a8, a6, 4
400e5411:	160c      	movi.n	a6, 1
400e5413:	401800        	ssl	a8
400e5416:	a16600        	sll	a6, a6
400e5419:	1b89      	s32i.n	a8, a11, 4
400e541b:	2b69      	s32i.n	a6, a11, 8
400e541d:	02ad      	mov.n	a10, a2
400e541f:	f5de65        	call8	400db204 <_Bfree>
400e5422:	9268      	l32i.n	a6, a2, 36
400e5424:	080c      	movi.n	a8, 0
400e5426:	0689      	s32i.n	a8, a6, 0
400e5428:	5168      	l32i.n	a6, a1, 20
400e542a:	0106d6        	bgez	a6, 400e543e <_dtoa_r+0x5e>
400e542d:	140c      	movi.n	a4, 1
400e542f:	0349      	s32i.n	a4, a3, 0
400e5431:	ab0b31        	l32r	a3, 400d0060 <_flash_cache_start+0x48>
400e5434:	103350        	and	a3, a3, a5
400e5437:	5139      	s32i.n	a3, a1, 20
400e5439:	000146        	j	400e5442 <_dtoa_r+0x62>
400e543c:	0c0000        	lsi	f0, a0, 48
400e543f:	034904        	lsi	f0, a9, 12
400e5442:	5168      	l32i.n	a6, a1, 20
400e5444:	ac9f31        	l32r	a3, 400d06c0 <_flash_cache_start+0x6a8>
400e5447:	104360        	and	a4, a3, a6
400e544a:	369437        	bne	a4, a3, 400e5484 <_dtoa_r+0xa4>
400e544d:	acf321        	l32r	a2, 400d081c <_flash_cache_start+0x804>
400e5450:	242182        	l32i	a8, a1, 144
400e5453:	4198      	l32i.n	a9, a1, 16
400e5455:	0829      	s32i.n	a2, a8, 0
400e5457:	acef31        	l32r	a3, 400d0814 <_flash_cache_start+0x7fc>
400e545a:	a9cc      	bnez.n	a9, 400e5468 <_dtoa_r+0x88>
400e545c:	ac75a1        	l32r	a10, 400d0630 <_flash_cache_start+0x618>
400e545f:	acec21        	l32r	a2, 400d0810 <_flash_cache_start+0x7f8>
400e5462:	1066a0        	and	a6, a6, a10
400e5465:	833260        	moveqz	a3, a2, a6
400e5468:	262142        	l32i	a4, a1, 152
400e546b:	032d      	mov.n	a2, a3
400e546d:	14cc      	bnez.n	a4, 400e5472 <_dtoa_r+0x92>
400e546f:	02ee46        	j	400e602c <_dtoa_r+0xc4c>
400e5472:	030342        	l8ui	a4, a3, 3
400e5475:	533b      	addi.n	a5, a3, 3
400e5477:	238b      	addi.n	a2, a3, 8
400e5479:	832540        	moveqz	a2, a5, a4
400e547c:	262152        	l32i	a5, a1, 152
400e547f:	0529      	s32i.n	a2, a5, 0
400e5481:	000b86        	j	400e54b3 <_dtoa_r+0xd3>
400e5484:	4148      	l32i.n	a4, a1, 16
400e5486:	5158      	l32i.n	a5, a1, 20
400e5488:	aaf5c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e548b:	aaf4d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e548e:	04ad      	mov.n	a10, a4
400e5490:	05bd      	mov.n	a11, a5
400e5492:	acbe81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e5495:	0008e0        	callx8	a8
400e5498:	cadc      	bnez.n	a10, 400e54b8 <_dtoa_r+0xd8>
400e549a:	242162        	l32i	a6, a1, 144
400e549d:	120c      	movi.n	a2, 1
400e549f:	acde31        	l32r	a3, 400d0818 <_flash_cache_start+0x800>
400e54a2:	262182        	l32i	a8, a1, 152
400e54a5:	0629      	s32i.n	a2, a6, 0
400e54a7:	032d      	mov.n	a2, a3
400e54a9:	18cc      	bnez.n	a8, 400e54ae <_dtoa_r+0xce>
400e54ab:	02df46        	j	400e602c <_dtoa_r+0xc4c>
400e54ae:	acdc21        	l32r	a2, 400d0820 <_flash_cache_start+0x808>
400e54b1:	0829      	s32i.n	a2, a8, 0
400e54b3:	032d      	mov.n	a2, a3
400e54b5:	f01d      	retw.n
400e54b7:	c1f200        	mul16u	a15, a2, a0
400e54ba:	e11004        	lsi	f0, a0, 0x384
400e54bd:	c44020        	extui	a4, a2, 0, 13
400e54c0:	05dd20        	extui	a13, a2, 29, 1
400e54c3:	02ad      	mov.n	a10, a2
400e54c5:	f634a5        	call8	400db810 <__d2b>
400e54c8:	71a9      	s32i.n	a10, a1, 28
400e54ca:	a53460        	extui	a3, a6, 20, 11
400e54cd:	639c      	beqz.n	a3, 400e54e7 <_dtoa_r+0x107>
400e54cf:	048d      	mov.n	a8, a4
400e54d1:	ac5741        	l32r	a4, 400d0630 <_flash_cache_start+0x618>
400e54d4:	104450        	and	a4, a4, a5
400e54d7:	ac7e51        	l32r	a5, 400d06d0 <_flash_cache_start+0x6b8>
400e54da:	209450        	or	a9, a4, a5
400e54dd:	01ac42        	movi	a4, 0xfffffc01
400e54e0:	334a      	add.n	a3, a3, a4
400e54e2:	040c      	movi.n	a4, 0
400e54e4:	001046        	j	400e5529 <_dtoa_r+0x149>
400e54e7:	1148      	l32i.n	a4, a1, 4
400e54e9:	0138      	l32i.n	a3, a1, 0
400e54eb:	32a452        	movi	a5, 0x432
400e54ee:	343a      	add.n	a3, a4, a3
400e54f0:	535a      	add.n	a5, a3, a5
400e54f2:	20a042        	movi	a4, 32
400e54f5:	4188      	l32i.n	a8, a1, 16
400e54f7:	c0a450        	sub	a10, a4, a5
400e54fa:	401a00        	ssl	a10
400e54fd:	a1a800        	sll	a10, a8
400e5500:	14a457        	bge	a4, a5, 400e5518 <_dtoa_r+0x138>
400e5503:	12c3a2        	addi	a10, a3, 18
400e5506:	400a00        	ssr	a10
400e5509:	914080        	srl	a4, a8
400e550c:	60a050        	neg	a10, a5
400e550f:	401a00        	ssl	a10
400e5512:	a1a600        	sll	a10, a6
400e5515:	20a4a0        	or	a10, a4, a10
400e5518:	aacd81        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400e551b:	0008e0        	callx8	a8
400e551e:	acc141        	l32r	a4, 400d0824 <_flash_cache_start+0x80c>
400e5521:	0a8d      	mov.n	a8, a10
400e5523:	94ba      	add.n	a9, a4, a11
400e5525:	330b      	addi.n	a3, a3, -1
400e5527:	140c      	movi.n	a4, 1
400e5529:	aaccc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e552c:	acbfd1        	l32r	a13, 400d0828 <_flash_cache_start+0x810>
400e552f:	08ad      	mov.n	a10, a8
400e5531:	09bd      	mov.n	a11, a9
400e5533:	156142        	s32i	a4, a1, 84
400e5536:	ac9881        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5539:	0008e0        	callx8	a8
400e553c:	acbcc1        	l32r	a12, 400d082c <_flash_cache_start+0x814>
400e553f:	acbcd1        	l32r	a13, 400d0830 <_flash_cache_start+0x818>
400e5542:	aac581        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5545:	0008e0        	callx8	a8
400e5548:	acbbc1        	l32r	a12, 400d0834 <_flash_cache_start+0x81c>
400e554b:	acbbd1        	l32r	a13, 400d0838 <_flash_cache_start+0x820>
400e554e:	acc081        	l32r	a8, 400d0850 <_flash_cache_start+0x838>
400e5551:	0008e0        	callx8	a8
400e5554:	0a4d      	mov.n	a4, a10
400e5556:	03ad      	mov.n	a10, a3
400e5558:	0b5d      	mov.n	a5, a11
400e555a:	ac8e81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e555d:	0008e0        	callx8	a8
400e5560:	acb7c1        	l32r	a12, 400d083c <_flash_cache_start+0x824>
400e5563:	acb7d1        	l32r	a13, 400d0840 <_flash_cache_start+0x828>
400e5566:	aabc81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5569:	0008e0        	callx8	a8
400e556c:	0acd      	mov.n	a12, a10
400e556e:	0bdd      	mov.n	a13, a11
400e5570:	04ad      	mov.n	a10, a4
400e5572:	05bd      	mov.n	a11, a5
400e5574:	acb781        	l32r	a8, 400d0850 <_flash_cache_start+0x838>
400e5577:	0008e0        	callx8	a8
400e557a:	0a4d      	mov.n	a4, a10
400e557c:	0b5d      	mov.n	a5, a11
400e557e:	ac8481        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5581:	0008e0        	callx8	a8
400e5584:	aab6c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5587:	aab5d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e558a:	0661a2        	s32i	a10, a1, 24
400e558d:	20b550        	or	a11, a5, a5
400e5590:	20a440        	or	a10, a4, a4
400e5593:	ac7d81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e5596:	0008e0        	callx8	a8
400e5599:	023ad6        	bgez	a10, 400e55c0 <_dtoa_r+0x1e0>
400e559c:	61a8      	l32i.n	a10, a1, 24
400e559e:	ac7d81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e55a1:	0008e0        	callx8	a8
400e55a4:	0acd      	mov.n	a12, a10
400e55a6:	0bdd      	mov.n	a13, a11
400e55a8:	04ad      	mov.n	a10, a4
400e55aa:	05bd      	mov.n	a11, a5
400e55ac:	ac7c81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e55af:	0008e0        	callx8	a8
400e55b2:	150c      	movi.n	a5, 1
400e55b4:	040c      	movi.n	a4, 0
400e55b6:	9345a0        	movnez	a4, a5, a10
400e55b9:	6158      	l32i.n	a5, a1, 24
400e55bb:	c05540        	sub	a5, a5, a4
400e55be:	6159      	s32i.n	a5, a1, 24
400e55c0:	160c      	movi.n	a6, 1
400e55c2:	6188      	l32i.n	a8, a1, 24
400e55c4:	146162        	s32i	a6, a1, 80
400e55c7:	641c      	movi.n	a4, 22
400e55c9:	293487        	bltu	a4, a8, 400e55f6 <_dtoa_r+0x216>
400e55cc:	ac4341        	l32r	a4, 400d06d8 <_flash_cache_start+0x6c0>
400e55cf:	41c8      	l32i.n	a12, a1, 16
400e55d1:	b04840        	addx8	a4, a8, a4
400e55d4:	51d8      	l32i.n	a13, a1, 20
400e55d6:	04a8      	l32i.n	a10, a4, 0
400e55d8:	14b8      	l32i.n	a11, a4, 4
400e55da:	ac7181        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e55dd:	0008e0        	callx8	a8
400e55e0:	0d2a67        	blt	a10, a6, 400e55f1 <_dtoa_r+0x211>
400e55e3:	6198      	l32i.n	a9, a1, 24
400e55e5:	040c      	movi.n	a4, 0
400e55e7:	990b      	addi.n	a9, a9, -1
400e55e9:	6199      	s32i.n	a9, a1, 24
400e55eb:	146142        	s32i	a4, a1, 80
400e55ee:	000106        	j	400e55f6 <_dtoa_r+0x216>
400e55f1:	050c      	movi.n	a5, 0
400e55f3:	146152        	s32i	a5, a1, 80
400e55f6:	1148      	l32i.n	a4, a1, 4
400e55f8:	060c      	movi.n	a6, 0
400e55fa:	c03430        	sub	a3, a4, a3
400e55fd:	330b      	addi.n	a3, a3, -1
400e55ff:	8139      	s32i.n	a3, a1, 32
400e5601:	a169      	s32i.n	a6, a1, 40
400e5603:	06a367        	bge	a3, a6, 400e560d <_dtoa_r+0x22d>
400e5606:	608030        	neg	a8, a3
400e5609:	a189      	s32i.n	a8, a1, 40
400e560b:	8169      	s32i.n	a6, a1, 32
400e560d:	6138      	l32i.n	a3, a1, 24
400e560f:	00f396        	bltz	a3, 400e5622 <_dtoa_r+0x242>
400e5612:	8148      	l32i.n	a4, a1, 32
400e5614:	050c      	movi.n	a5, 0
400e5616:	443a      	add.n	a4, a4, a3
400e5618:	8149      	s32i.n	a4, a1, 32
400e561a:	106132        	s32i	a3, a1, 64
400e561d:	d159      	s32i.n	a5, a1, 52
400e561f:	000486        	j	400e5635 <_dtoa_r+0x255>
400e5622:	a168      	l32i.n	a6, a1, 40
400e5624:	6188      	l32i.n	a8, a1, 24
400e5626:	030c      	movi.n	a3, 0
400e5628:	c06680        	sub	a6, a6, a8
400e562b:	609080        	neg	a9, a8
400e562e:	a169      	s32i.n	a6, a1, 40
400e5630:	d199      	s32i.n	a9, a1, 52
400e5632:	106132        	s32i	a3, a1, 64
400e5635:	c148      	l32i.n	a4, a1, 48
400e5637:	930c      	movi.n	a3, 9
400e5639:	4f3347        	bltu	a3, a4, 400e568c <_dtoa_r+0x2ac>
400e563c:	130c      	movi.n	a3, 1
400e563e:	0664a6        	blti	a4, 6, 400e5648 <_dtoa_r+0x268>
400e5641:	fcc442        	addi	a4, a4, -4
400e5644:	c149      	s32i.n	a4, a1, 48
400e5646:	030c      	movi.n	a3, 0
400e5648:	c158      	l32i.n	a5, a1, 48
400e564a:	2a3526        	beqi	a5, 3, 400e5678 <_dtoa_r+0x298>
400e564d:	0945e6        	bgei	a5, 4, 400e565a <_dtoa_r+0x27a>
400e5650:	060c      	movi.n	a6, 0
400e5652:	f169      	s32i.n	a6, a1, 60
400e5654:	152526        	beqi	a5, 2, 400e566d <_dtoa_r+0x28d>
400e5657:	001106        	j	400e569f <_dtoa_r+0x2bf>
400e565a:	c188      	l32i.n	a8, a1, 48
400e565c:	094826        	beqi	a8, 4, 400e5669 <_dtoa_r+0x289>
400e565f:	190c      	movi.n	a9, 1
400e5661:	f199      	s32i.n	a9, a1, 60
400e5663:	155826        	beqi	a8, 5, 400e567c <_dtoa_r+0x29c>
400e5666:	000d46        	j	400e569f <_dtoa_r+0x2bf>
400e5669:	140c      	movi.n	a4, 1
400e566b:	f149      	s32i.n	a4, a1, 60
400e566d:	4317a6        	blti	a7, 1, 400e56b4 <_dtoa_r+0x2d4>
400e5670:	e179      	s32i.n	a7, a1, 56
400e5672:	074d      	mov.n	a4, a7
400e5674:	0011c6        	j	400e56bf <_dtoa_r+0x2df>
400e5677:	050c00        	extui	a0, a0, 28, 1
400e567a:	f159      	s32i.n	a5, a1, 60
400e567c:	6168      	l32i.n	a6, a1, 24
400e567e:	140c      	movi.n	a4, 1
400e5680:	667a      	add.n	a6, a6, a7
400e5682:	761b      	addi.n	a7, a6, 1
400e5684:	e169      	s32i.n	a6, a1, 56
400e5686:	534740        	max	a4, a7, a4
400e5689:	000c86        	j	400e56bf <_dtoa_r+0x2df>
400e568c:	f97c      	movi.n	a9, -1
400e568e:	130c      	movi.n	a3, 1
400e5690:	080c      	movi.n	a8, 0
400e5692:	c189      	s32i.n	a8, a1, 48
400e5694:	f139      	s32i.n	a3, a1, 60
400e5696:	e199      	s32i.n	a9, a1, 56
400e5698:	097d      	mov.n	a7, a9
400e569a:	241c      	movi.n	a4, 18
400e569c:	000706        	j	400e56bc <_dtoa_r+0x2dc>
400e569f:	140c      	movi.n	a4, 1
400e56a1:	f57c      	movi.n	a5, -1
400e56a3:	060c      	movi.n	a6, 0
400e56a5:	f149      	s32i.n	a4, a1, 60
400e56a7:	e159      	s32i.n	a5, a1, 56
400e56a9:	057d      	mov.n	a7, a5
400e56ab:	241c      	movi.n	a4, 18
400e56ad:	116162        	s32i	a6, a1, 68
400e56b0:	0002c6        	j	400e56bf <_dtoa_r+0x2df>
400e56b3:	180c00        	lsxp	f0, a12, a0
400e56b6:	e189      	s32i.n	a8, a1, 56
400e56b8:	087d      	mov.n	a7, a8
400e56ba:	084d      	mov.n	a4, a8
400e56bc:	116182        	s32i	a8, a1, 68
400e56bf:	9258      	l32i.n	a5, a2, 36
400e56c1:	060c      	movi.n	a6, 0
400e56c3:	1569      	s32i.n	a6, a5, 4
400e56c5:	460c      	movi.n	a6, 4
400e56c7:	000206        	j	400e56d3 <_dtoa_r+0x2f3>
400e56ca:	1588      	l32i.n	a8, a5, 4
400e56cc:	1166f0        	slli	a6, a6, 1
400e56cf:	881b      	addi.n	a8, a8, 1
400e56d1:	1589      	s32i.n	a8, a5, 4
400e56d3:	14c682        	addi	a8, a6, 20
400e56d6:	f0b487        	bgeu	a4, a8, 400e56ca <_dtoa_r+0x2ea>
400e56d9:	15b8      	l32i.n	a11, a5, 4
400e56db:	02ad      	mov.n	a10, a2
400e56dd:	f5ab25        	call8	400db190 <_Balloc>
400e56e0:	9248      	l32i.n	a4, a2, 36
400e56e2:	05a9      	s32i.n	a10, a5, 0
400e56e4:	0448      	l32i.n	a4, a4, 0
400e56e6:	e50c      	movi.n	a5, 14
400e56e8:	b149      	s32i.n	a4, a1, 44
400e56ea:	140c      	movi.n	a4, 1
400e56ec:	01b577        	bgeu	a5, a7, 400e56f1 <_dtoa_r+0x311>
400e56ef:	040c      	movi.n	a4, 0
400e56f1:	103340        	and	a3, a3, a4
400e56f4:	34e316        	beqz	a3, 400e5a46 <_dtoa_r+0x666>
400e56f7:	5158      	l32i.n	a5, a1, 20
400e56f9:	4148      	l32i.n	a4, a1, 16
400e56fb:	176152        	s32i	a5, a1, 92
400e56fe:	6158      	l32i.n	a5, a1, 24
400e5700:	166142        	s32i	a4, a1, 88
400e5703:	7815a6        	blti	a5, 1, 400e577f <_dtoa_r+0x39f>
400e5706:	abf441        	l32r	a4, 400d06d8 <_flash_cache_start+0x6c0>
400e5709:	343050        	extui	a3, a5, 0, 4
400e570c:	b03340        	addx8	a3, a3, a4
400e570f:	0388      	l32i.n	a8, a3, 0
400e5711:	1398      	l32i.n	a9, a3, 4
400e5713:	213450        	srai	a3, a5, 4
400e5716:	240c      	movi.n	a4, 2
400e5718:	286347        	bbci	a3, 4, 400e5744 <_dtoa_r+0x364>
400e571b:	ac4a41        	l32r	a4, 400d0844 <_flash_cache_start+0x82c>
400e571e:	1621a2        	l32i	a10, a1, 88
400e5721:	84c8      	l32i.n	a12, a4, 32
400e5723:	0924d2        	l32i	a13, a4, 36
400e5726:	1721b2        	l32i	a11, a1, 92
400e5729:	1b6182        	s32i	a8, a1, 108
400e572c:	1a6192        	s32i	a9, a1, 104
400e572f:	aa4881        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e5732:	0008e0        	callx8	a8
400e5735:	1a2192        	l32i	a9, a1, 104
400e5738:	1b2182        	l32i	a8, a1, 108
400e573b:	343030        	extui	a3, a3, 0, 4
400e573e:	41a9      	s32i.n	a10, a1, 16
400e5740:	51b9      	s32i.n	a11, a1, 20
400e5742:	340c      	movi.n	a4, 3
400e5744:	ac4051        	l32r	a5, 400d0844 <_flash_cache_start+0x82c>
400e5747:	000786        	j	400e5769 <_dtoa_r+0x389>
400e574a:	070000        	lsi	f0, a0, 28
400e574d:	c81463        	lsi	f6, a4, 0x320
400e5750:	15d805        	call0	400fb4d4 <_etext+0xf003>
400e5753:	08ad      	mov.n	a10, a8
400e5755:	20b990        	or	a11, a9, a9
400e5758:	aa4081        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e575b:	0008e0        	callx8	a8
400e575e:	441b      	addi.n	a4, a4, 1
400e5760:	0a8d      	mov.n	a8, a10
400e5762:	0b9d      	mov.n	a9, a11
400e5764:	213130        	srai	a3, a3, 1
400e5767:	558b      	addi.n	a5, a5, 8
400e5769:	fdf356        	bnez	a3, 400e574c <_dtoa_r+0x36c>
400e576c:	41a8      	l32i.n	a10, a1, 16
400e576e:	51b8      	l32i.n	a11, a1, 20
400e5770:	20c880        	or	a12, a8, a8
400e5773:	20d990        	or	a13, a9, a9
400e5776:	aa3681        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e5779:	0008e0        	callx8	a8
400e577c:	0013c6        	j	400e57cf <_dtoa_r+0x3ef>
400e577f:	6168      	l32i.n	a6, a1, 24
400e5781:	240c      	movi.n	a4, 2
400e5783:	605060        	neg	a5, a6
400e5786:	04a516        	beqz	a5, 400e57d4 <_dtoa_r+0x3f4>
400e5789:	abd381        	l32r	a8, 400d06d8 <_flash_cache_start+0x6c0>
400e578c:	346050        	extui	a6, a5, 0, 4
400e578f:	b06680        	addx8	a6, a6, a8
400e5792:	06c8      	l32i.n	a12, a6, 0
400e5794:	16d8      	l32i.n	a13, a6, 4
400e5796:	1621a2        	l32i	a10, a1, 88
400e5799:	1721b2        	l32i	a11, a1, 92
400e579c:	215450        	srai	a5, a5, 4
400e579f:	aa2e81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e57a2:	0008e0        	callx8	a8
400e57a5:	41a9      	s32i.n	a10, a1, 16
400e57a7:	51b9      	s32i.n	a11, a1, 20
400e57a9:	ac2661        	l32r	a6, 400d0844 <_flash_cache_start+0x82c>
400e57ac:	080c      	movi.n	a8, 0
400e57ae:	000606        	j	400e57ca <_dtoa_r+0x3ea>
400e57b1:	106507        	bbci	a5, 0, 400e57c5 <_dtoa_r+0x3e5>
400e57b4:	06c8      	l32i.n	a12, a6, 0
400e57b6:	0126d2        	l32i	a13, a6, 4
400e57b9:	01c442        	addi	a4, a4, 1
400e57bc:	aa2781        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e57bf:	0008e0        	callx8	a8
400e57c2:	208330        	or	a8, a3, a3
400e57c5:	215150        	srai	a5, a5, 1
400e57c8:	668b      	addi.n	a6, a6, 8
400e57ca:	fe3556        	bnez	a5, 400e57b1 <_dtoa_r+0x3d1>
400e57cd:	388c      	beqz.n	a8, 400e57d4 <_dtoa_r+0x3f4>
400e57cf:	41a9      	s32i.n	a10, a1, 16
400e57d1:	0561b2        	s32i	a11, a1, 20
400e57d4:	142182        	l32i	a8, a1, 80
400e57d7:	04b816        	beqz	a8, 400e5826 <_dtoa_r+0x446>
400e57da:	4188      	l32i.n	a8, a1, 16
400e57dc:	5198      	l32i.n	a9, a1, 20
400e57de:	aa1fc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e57e1:	abbbd1        	l32r	a13, 400d06d0 <_flash_cache_start+0x6b8>
400e57e4:	08ad      	mov.n	a10, a8
400e57e6:	09bd      	mov.n	a11, a9
400e57e8:	1b6182        	s32i	a8, a1, 108
400e57eb:	1a6192        	s32i	a9, a1, 104
400e57ee:	abe681        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e57f1:	0008e0        	callx8	a8
400e57f4:	1b2182        	l32i	a8, a1, 108
400e57f7:	1a2192        	l32i	a9, a1, 104
400e57fa:	028ad6        	bgez	a10, 400e5826 <_dtoa_r+0x446>
400e57fd:	57ac      	beqz.n	a7, 400e5826 <_dtoa_r+0x446>
400e57ff:	e138      	l32i.n	a3, a1, 56
400e5801:	0213e6        	bgei	a3, 1, 400e5807 <_dtoa_r+0x427>
400e5804:	008d06        	j	400e5a3c <_dtoa_r+0x65c>
400e5807:	aa15c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e580a:	abb4d1        	l32r	a13, 400d06dc <_flash_cache_start+0x6c4>
400e580d:	6158      	l32i.n	a5, a1, 24
400e580f:	08ad      	mov.n	a10, a8
400e5811:	09bd      	mov.n	a11, a9
400e5813:	aa1181        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5816:	0008e0        	callx8	a8
400e5819:	650b      	addi.n	a6, a5, -1
400e581b:	41a9      	s32i.n	a10, a1, 16
400e581d:	51b9      	s32i.n	a11, a1, 20
400e581f:	441b      	addi.n	a4, a4, 1
400e5821:	e138      	l32i.n	a3, a1, 56
400e5823:	0000c6        	j	400e582a <_dtoa_r+0x44a>
400e5826:	6168      	l32i.n	a6, a1, 24
400e5828:	073d      	mov.n	a3, a7
400e582a:	04ad      	mov.n	a10, a4
400e582c:	abda81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e582f:	0008e0        	callx8	a8
400e5832:	41c8      	l32i.n	a12, a1, 16
400e5834:	0521d2        	l32i	a13, a1, 20
400e5837:	aa0881        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e583a:	0008e0        	callx8	a8
400e583d:	aa07c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5840:	ac02d1        	l32r	a13, 400d0848 <_flash_cache_start+0x830>
400e5843:	ac0381        	l32r	a8, 400d0850 <_flash_cache_start+0x838>
400e5846:	0008e0        	callx8	a8
400e5849:	ab9e41        	l32r	a4, 400d06c4 <_flash_cache_start+0x6ac>
400e584c:	0aed      	mov.n	a14, a10
400e584e:	44ba      	add.n	a4, a4, a11
400e5850:	04fd      	mov.n	a15, a4
400e5852:	053356        	bnez	a3, 400e58a9 <_dtoa_r+0x4c9>
400e5855:	aa01c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5858:	abfdd1        	l32r	a13, 400d084c <_flash_cache_start+0x834>
400e585b:	41a8      	l32i.n	a10, a1, 16
400e585d:	0521b2        	l32i	a11, a1, 20
400e5860:	1861e2        	s32i	a14, a1, 96
400e5863:	196142        	s32i	a4, a1, 100
400e5866:	abcc81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5869:	0008e0        	callx8	a8
400e586c:	1821e2        	l32i	a14, a1, 96
400e586f:	04dd      	mov.n	a13, a4
400e5871:	20cee0        	or	a12, a14, a14
400e5874:	1b61a2        	s32i	a10, a1, 108
400e5877:	1a61b2        	s32i	a11, a1, 104
400e587a:	abc981        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e587d:	0008e0        	callx8	a8
400e5880:	1b2182        	l32i	a8, a1, 108
400e5883:	1a2192        	l32i	a9, a1, 104
400e5886:	1821e2        	l32i	a14, a1, 96
400e5889:	021aa6        	blti	a10, 1, 400e588f <_dtoa_r+0x4af>
400e588c:	0145c6        	j	400e5da7 <_dtoa_r+0x9c7>
400e588f:	a9fb51        	l32r	a5, 400d007c <_flash_cache_start+0x64>
400e5892:	0ecd      	mov.n	a12, a14
400e5894:	30d450        	xor	a13, a4, a5
400e5897:	08ad      	mov.n	a10, a8
400e5899:	09bd      	mov.n	a11, a9
400e589b:	abbb81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e589e:	0008e0        	callx8	a8
400e58a1:	4f1a96        	bltz	a10, 400e5d96 <_dtoa_r+0x9b6>
400e58a4:	006506        	j	400e5a3c <_dtoa_r+0x65c>
400e58a7:	510000        	lsi	f0, a0, 0x144
400e58aa:	ab8b      	addi.n	a10, a11, 8
400e58ac:	f198      	l32i.n	a9, a1, 60
400e58ae:	430b      	addi.n	a4, a3, -1
400e58b0:	b04450        	addx8	a4, a4, a5
400e58b3:	0c7916        	beqz	a9, 400e597e <_dtoa_r+0x59e>
400e58b6:	04c8      	l32i.n	a12, a4, 0
400e58b8:	0124d2        	l32i	a13, a4, 4
400e58bb:	a9e8a1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e58be:	ababb1        	l32r	a11, 400d076c <_flash_cache_start+0x754>
400e58c1:	1861e2        	s32i	a14, a1, 96
400e58c4:	1961f2        	s32i	a15, a1, 100
400e58c7:	a9e281        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e58ca:	0008e0        	callx8	a8
400e58cd:	1821e2        	l32i	a14, a1, 96
400e58d0:	1921f2        	l32i	a15, a1, 100
400e58d3:	0ecd      	mov.n	a12, a14
400e58d5:	0fdd      	mov.n	a13, a15
400e58d7:	abb081        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e58da:	0008e0        	callx8	a8
400e58dd:	b158      	l32i.n	a5, a1, 44
400e58df:	1261a2        	s32i	a10, a1, 72
400e58e2:	1361b2        	s32i	a11, a1, 76
400e58e5:	51b8      	l32i.n	a11, a1, 20
400e58e7:	41a8      	l32i.n	a10, a1, 16
400e58e9:	551b      	addi.n	a5, a5, 1
400e58eb:	aba981        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e58ee:	0008e0        	callx8	a8
400e58f1:	0a4d      	mov.n	a4, a10
400e58f3:	aba881        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e58f6:	0008e0        	callx8	a8
400e58f9:	0acd      	mov.n	a12, a10
400e58fb:	0bdd      	mov.n	a13, a11
400e58fd:	41a8      	l32i.n	a10, a1, 16
400e58ff:	51b8      	l32i.n	a11, a1, 20
400e5901:	30c442        	addi	a4, a4, 48
400e5904:	aba581        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5907:	0008e0        	callx8	a8
400e590a:	850b      	addi.n	a8, a5, -1
400e590c:	1221c2        	l32i	a12, a1, 72
400e590f:	1321d2        	l32i	a13, a1, 76
400e5912:	004842        	s8i	a4, a8, 0
400e5915:	41a9      	s32i.n	a10, a1, 16
400e5917:	0561b2        	s32i	a11, a1, 20
400e591a:	ab9b81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e591d:	0008e0        	callx8	a8
400e5920:	6d0a96        	bltz	a10, 400e5ff4 <_dtoa_r+0xc14>
400e5923:	41c8      	l32i.n	a12, a1, 16
400e5925:	0521d2        	l32i	a13, a1, 20
400e5928:	a9cda1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e592b:	ab69b1        	l32r	a11, 400d06d0 <_flash_cache_start+0x6b8>
400e592e:	ab9a81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5931:	0008e0        	callx8	a8
400e5934:	1221c2        	l32i	a12, a1, 72
400e5937:	1321d2        	l32i	a13, a1, 76
400e593a:	ab9381        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e593d:	0008e0        	callx8	a8
400e5940:	20ca96        	bltz	a10, 400e5b50 <_dtoa_r+0x770>
400e5943:	b188      	l32i.n	a8, a1, 44
400e5945:	c04580        	sub	a4, a5, a8
400e5948:	022437        	blt	a4, a3, 400e594e <_dtoa_r+0x56e>
400e594b:	003b46        	j	400e5a3c <_dtoa_r+0x65c>
400e594e:	a9c3c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5951:	ab62d1        	l32r	a13, 400d06dc <_flash_cache_start+0x6c4>
400e5954:	1221a2        	l32i	a10, a1, 72
400e5957:	1321b2        	l32i	a11, a1, 76
400e595a:	a9bf81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e595d:	0008e0        	callx8	a8
400e5960:	1261a2        	s32i	a10, a1, 72
400e5963:	1361b2        	s32i	a11, a1, 76
400e5966:	41a8      	l32i.n	a10, a1, 16
400e5968:	51b8      	l32i.n	a11, a1, 20
400e596a:	a9bcc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e596d:	ab5bd1        	l32r	a13, 400d06dc <_flash_cache_start+0x6c4>
400e5970:	a9ba81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5973:	0008e0        	callx8	a8
400e5976:	41a9      	s32i.n	a10, a1, 16
400e5978:	51b9      	s32i.n	a11, a1, 20
400e597a:	ffd9c6        	j	400e58e5 <_dtoa_r+0x505>
400e597d:	0acd00        	add.s	f12, f13, f0
400e5980:	14b8      	l32i.n	a11, a4, 4
400e5982:	04a8      	l32i.n	a10, a4, 0
400e5984:	0fdd      	mov.n	a13, a15
400e5986:	a9b481        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5989:	0008e0        	callx8	a8
400e598c:	b148      	l32i.n	a4, a1, 44
400e598e:	1261a2        	s32i	a10, a1, 72
400e5991:	1361b2        	s32i	a11, a1, 76
400e5994:	543a      	add.n	a5, a4, a3
400e5996:	51b8      	l32i.n	a11, a1, 20
400e5998:	41a8      	l32i.n	a10, a1, 16
400e599a:	ab7d81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e599d:	0008e0        	callx8	a8
400e59a0:	0a3d      	mov.n	a3, a10
400e59a2:	ab7c81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e59a5:	0008e0        	callx8	a8
400e59a8:	0acd      	mov.n	a12, a10
400e59aa:	0bdd      	mov.n	a13, a11
400e59ac:	41a8      	l32i.n	a10, a1, 16
400e59ae:	0521b2        	l32i	a11, a1, 20
400e59b1:	30c332        	addi	a3, a3, 48
400e59b4:	ab7981        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e59b7:	0008e0        	callx8	a8
400e59ba:	41a9      	s32i.n	a10, a1, 16
400e59bc:	004432        	s8i	a3, a4, 0
400e59bf:	0561b2        	s32i	a11, a1, 20
400e59c2:	01c442        	addi	a4, a4, 1
400e59c5:	5b9547        	bne	a5, a4, 400e5a24 <_dtoa_r+0x644>
400e59c8:	a9a5c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e59cb:	ab68d1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400e59ce:	1221a2        	l32i	a10, a1, 72
400e59d1:	1321b2        	l32i	a11, a1, 76
400e59d4:	ab9f81        	l32r	a8, 400d0850 <_flash_cache_start+0x838>
400e59d7:	0008e0        	callx8	a8
400e59da:	0acd      	mov.n	a12, a10
400e59dc:	0bdd      	mov.n	a13, a11
400e59de:	41a8      	l32i.n	a10, a1, 16
400e59e0:	51b8      	l32i.n	a11, a1, 20
400e59e2:	ab6f81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e59e5:	0008e0        	callx8	a8
400e59e8:	021aa6        	blti	a10, 1, 400e59ee <_dtoa_r+0x60e>
400e59eb:	005846        	j	400e5b50 <_dtoa_r+0x770>
400e59ee:	1221c2        	l32i	a12, a1, 72
400e59f1:	1321d2        	l32i	a13, a1, 76
400e59f4:	a99aa1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e59f7:	ab5db1        	l32r	a11, 400d076c <_flash_cache_start+0x754>
400e59fa:	043c      	movi.n	a4, 48
400e59fc:	ab6781        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e59ff:	0008e0        	callx8	a8
400e5a02:	0acd      	mov.n	a12, a10
400e5a04:	0bdd      	mov.n	a13, a11
400e5a06:	41a8      	l32i.n	a10, a1, 16
400e5a08:	51b8      	l32i.n	a11, a1, 20
400e5a0a:	ab5f81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e5a0d:	0008e0        	callx8	a8
400e5a10:	004a96        	bltz	a10, 400e5a18 <_dtoa_r+0x638>
400e5a13:	000946        	j	400e5a3c <_dtoa_r+0x65c>
400e5a16:	035d      	mov.n	a5, a3
400e5a18:	350b      	addi.n	a3, a5, -1
400e5a1a:	000372        	l8ui	a7, a3, 0
400e5a1d:	f51747        	beq	a7, a4, 400e5a16 <_dtoa_r+0x636>
400e5a20:	017406        	j	400e5ff4 <_dtoa_r+0xc14>
400e5a23:	41a800        	srli	a10, a0, 8
400e5a26:	51b8      	l32i.n	a11, a1, 20
400e5a28:	a98dc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5a2b:	ab2cd1        	l32r	a13, 400d06dc <_flash_cache_start+0x6c4>
400e5a2e:	a98a81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5a31:	0008e0        	callx8	a8
400e5a34:	41a9      	s32i.n	a10, a1, 16
400e5a36:	51b9      	s32i.n	a11, a1, 20
400e5a38:	ffd686        	j	400e5996 <_dtoa_r+0x5b6>
400e5a3b:	214200        	srai	a4, a0, 2
400e5a3e:	215216        	beqz	a2, 400e5c57 <_dtoa_r+0x877>
400e5a41:	414917        	ball	a9, a1, 400e5a86 <_dtoa_r+0x6a6>
400e5a44:	5159      	s32i.n	a5, a1, 20
400e5a46:	0148      	l32i.n	a4, a1, 0
400e5a48:	14d496        	bltz	a4, 400e5b99 <_dtoa_r+0x7b9>
400e5a4b:	6158      	l32i.n	a5, a1, 24
400e5a4d:	e30c      	movi.n	a3, 14
400e5a4f:	02a357        	bge	a3, a5, 400e5a55 <_dtoa_r+0x675>
400e5a52:	0050c6        	j	400e5b99 <_dtoa_r+0x7b9>
400e5a55:	ab2031        	l32r	a3, 400d06d8 <_flash_cache_start+0x6c0>
400e5a58:	b03530        	addx8	a3, a5, a3
400e5a5b:	1398      	l32i.n	a9, a3, 4
400e5a5d:	0388      	l32i.n	a8, a3, 0
400e5a5f:	9199      	s32i.n	a9, a1, 36
400e5a61:	112192        	l32i	a9, a1, 68
400e5a64:	8189      	s32i.n	a8, a1, 32
400e5a66:	0079d6        	bgez	a9, 400e5a71 <_dtoa_r+0x691>
400e5a69:	370b      	addi.n	a3, a7, -1
400e5a6b:	203730        	or	a3, a7, a3
400e5a6e:	00a396        	bltz	a3, 400e5a7c <_dtoa_r+0x69c>
400e5a71:	4188      	l32i.n	a8, a1, 16
400e5a73:	5198      	l32i.n	a9, a1, 20
400e5a75:	b158      	l32i.n	a5, a1, 44
400e5a77:	000a46        	j	400e5aa4 <_dtoa_r+0x6c4>
400e5a7a:	560000        	lsi	f0, a0, 0x158
400e5a7d:	c13147        	bltu	a1, a4, 400e5a42 <_dtoa_r+0x662>
400e5a80:	d1a977        	bge	a9, a7, 400e5a55 <_dtoa_r+0x675>
400e5a83:	a8ab72        	movi	a7, 0xfffffba8
400e5a86:	91b881        	l32r	a8, 400ca168 <_rtc_text_end+0xa168>
400e5a89:	073d      	mov.n	a3, a7
400e5a8b:	a97381        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5a8e:	0008e0        	callx8	a8
400e5a91:	41c8      	l32i.n	a12, a1, 16
400e5a93:	51d8      	l32i.n	a13, a1, 20
400e5a95:	074d      	mov.n	a4, a7
400e5a97:	ab6f81        	l32r	a8, 400d0854 <_flash_cache_start+0x83c>
400e5a9a:	0008e0        	callx8	a8
400e5a9d:	2f7ad6        	bgez	a10, 400e5d98 <_dtoa_r+0x9b8>
400e5aa0:	00c206        	j	400e5dac <_dtoa_r+0x9cc>
400e5aa3:	81c800        	src	a12, a8, a0
400e5aa6:	91d8      	l32i.n	a13, a1, 36
400e5aa8:	08ad      	mov.n	a10, a8
400e5aaa:	09bd      	mov.n	a11, a9
400e5aac:	1b6182        	s32i	a8, a1, 108
400e5aaf:	1a6192        	s32i	a9, a1, 104
400e5ab2:	a96781        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e5ab5:	0008e0        	callx8	a8
400e5ab8:	ab3681        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5abb:	0008e0        	callx8	a8
400e5abe:	0a3d      	mov.n	a3, a10
400e5ac0:	ab3581        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e5ac3:	0008e0        	callx8	a8
400e5ac6:	0821c2        	l32i	a12, a1, 32
400e5ac9:	0921d2        	l32i	a13, a1, 36
400e5acc:	551b      	addi.n	a5, a5, 1
400e5ace:	a96281        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5ad1:	0008e0        	callx8	a8
400e5ad4:	1b2182        	l32i	a8, a1, 108
400e5ad7:	1a2192        	l32i	a9, a1, 104
400e5ada:	0acd      	mov.n	a12, a10
400e5adc:	0bdd      	mov.n	a13, a11
400e5ade:	450b      	addi.n	a4, a5, -1
400e5ae0:	30c362        	addi	a6, a3, 48
400e5ae3:	08ad      	mov.n	a10, a8
400e5ae5:	09bd      	mov.n	a11, a9
400e5ae7:	ab2c81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5aea:	0008e0        	callx8	a8
400e5aed:	004462        	s8i	a6, a4, 0
400e5af0:	b168      	l32i.n	a6, a1, 44
400e5af2:	c04560        	sub	a4, a5, a6
400e5af5:	749747        	bne	a7, a4, 400e5b6d <_dtoa_r+0x78d>
400e5af8:	0acd      	mov.n	a12, a10
400e5afa:	0bdd      	mov.n	a13, a11
400e5afc:	ab5581        	l32r	a8, 400d0850 <_flash_cache_start+0x838>
400e5aff:	0008e0        	callx8	a8
400e5b02:	0a8d      	mov.n	a8, a10
400e5b04:	0b9d      	mov.n	a9, a11
400e5b06:	0acd      	mov.n	a12, a10
400e5b08:	0bdd      	mov.n	a13, a11
400e5b0a:	0821a2        	l32i	a10, a1, 32
400e5b0d:	0921b2        	l32i	a11, a1, 36
400e5b10:	1b6182        	s32i	a8, a1, 108
400e5b13:	1a6192        	s32i	a9, a1, 104
400e5b16:	ab1c81        	l32r	a8, 400d0788 <_flash_cache_start+0x770>
400e5b19:	0008e0        	callx8	a8
400e5b1c:	1b2182        	l32i	a8, a1, 108
400e5b1f:	1a2192        	l32i	a9, a1, 104
400e5b22:	02ca96        	bltz	a10, 400e5b52 <_dtoa_r+0x772>
400e5b25:	81a8      	l32i.n	a10, a1, 32
400e5b27:	91b8      	l32i.n	a11, a1, 36
400e5b29:	08cd      	mov.n	a12, a8
400e5b2b:	20d990        	or	a13, a9, a9
400e5b2e:	ab1781        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e5b31:	0008e0        	callx8	a8
400e5b34:	4bea56        	bnez	a10, 400e5ff6 <_dtoa_r+0xc16>
400e5b37:	17e307        	bbsi	a3, 0, 400e5b52 <_dtoa_r+0x772>
400e5b3a:	012e06        	j	400e5ff6 <_dtoa_r+0xc16>
400e5b3d:	b188      	l32i.n	a8, a1, 44
400e5b3f:	159837        	bne	a8, a3, 400e5b58 <_dtoa_r+0x778>
400e5b42:	6198      	l32i.n	a9, a1, 24
400e5b44:	043c      	movi.n	a4, 48
400e5b46:	991b      	addi.n	a9, a9, 1
400e5b48:	6199      	s32i.n	a9, a1, 24
400e5b4a:	004842        	s8i	a4, a8, 0
400e5b4d:	000446        	j	400e5b62 <_dtoa_r+0x782>
400e5b50:	6169      	s32i.n	a6, a1, 24
400e5b52:	943c      	movi.n	a4, 57
400e5b54:	000086        	j	400e5b5a <_dtoa_r+0x77a>
400e5b57:	035d00        	lsi	f0, a13, 12
400e5b5a:	350b      	addi.n	a3, a5, -1
400e5b5c:	000362        	l8ui	a6, a3, 0
400e5b5f:	da1647        	beq	a6, a4, 400e5b3d <_dtoa_r+0x75d>
400e5b62:	000342        	l8ui	a4, a3, 0
400e5b65:	441b      	addi.n	a4, a4, 1
400e5b67:	004342        	s8i	a4, a3, 0
400e5b6a:	012206        	j	400e5ff6 <_dtoa_r+0xc16>
400e5b6d:	a93bc1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5b70:	aadbd1        	l32r	a13, 400d06dc <_flash_cache_start+0x6c4>
400e5b73:	a93981        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5b76:	0008e0        	callx8	a8
400e5b79:	a938c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e5b7c:	a938d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e5b7f:	1b61a2        	s32i	a10, a1, 108
400e5b82:	1a61b2        	s32i	a11, a1, 104
400e5b85:	ab0181        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e5b88:	0008e0        	callx8	a8
400e5b8b:	1b2182        	l32i	a8, a1, 108
400e5b8e:	1a2192        	l32i	a9, a1, 104
400e5b91:	f0fa56        	bnez	a10, 400e5aa4 <_dtoa_r+0x6c4>
400e5b94:	011786        	j	400e5ff6 <_dtoa_r+0xc16>
400e5b97:	380000        	lsi	f0, a0, 224
400e5b9a:	2316f1        	l32r	a15, 400ae7f4 <_iram_end+0x20ca0>
400e5b9d:	c15806        	j	400d6101 <esp_intr_alloc_intrstatus+0x315>
400e5ba0:	1825e6        	bgei	a5, 2, 400e5bbc <_dtoa_r+0x7dc>
400e5ba3:	152162        	l32i	a6, a1, 84
400e5ba6:	33a432        	movi	a3, 0x433
400e5ba9:	443a      	add.n	a4, a4, a3
400e5bab:	56cc      	bnez.n	a6, 400e5bb4 <_dtoa_r+0x7d4>
400e5bad:	1148      	l32i.n	a4, a1, 4
400e5baf:	633c      	movi.n	a3, 54
400e5bb1:	c04340        	sub	a4, a3, a4
400e5bb4:	d138      	l32i.n	a3, a1, 52
400e5bb6:	a168      	l32i.n	a6, a1, 40
400e5bb8:	000a86        	j	400e5be6 <_dtoa_r+0x806>
400e5bbb:	d18800        	mul16s	a8, a8, a0
400e5bbe:	370b      	addi.n	a3, a7, -1
400e5bc0:	052837        	blt	a8, a3, 400e5bc9 <_dtoa_r+0x7e9>
400e5bc3:	c03830        	sub	a3, a8, a3
400e5bc6:	000406        	j	400e5bda <_dtoa_r+0x7fa>
400e5bc9:	d198      	l32i.n	a9, a1, 52
400e5bcb:	102142        	l32i	a4, a1, 64
400e5bce:	c0c390        	sub	a12, a3, a9
400e5bd1:	44ca      	add.n	a4, a4, a12
400e5bd3:	d139      	s32i.n	a3, a1, 52
400e5bd5:	106142        	s32i	a4, a1, 64
400e5bd8:	030c      	movi.n	a3, 0
400e5bda:	a168      	l32i.n	a6, a1, 40
400e5bdc:	074d      	mov.n	a4, a7
400e5bde:	0047d6        	bgez	a7, 400e5be6 <_dtoa_r+0x806>
400e5be1:	c06670        	sub	a6, a6, a7
400e5be4:	040c      	movi.n	a4, 0
400e5be6:	0a2152        	l32i	a5, a1, 40
400e5be9:	082182        	l32i	a8, a1, 32
400e5bec:	805540        	add	a5, a5, a4
400e5bef:	884a      	add.n	a8, a8, a4
400e5bf1:	1b0c      	movi.n	a11, 1
400e5bf3:	02ad      	mov.n	a10, a2
400e5bf5:	a159      	s32i.n	a5, a1, 40
400e5bf7:	8189      	s32i.n	a8, a1, 32
400e5bf9:	f57e65        	call8	400db3e0 <__i2b>
400e5bfc:	0a4d      	mov.n	a4, a10
400e5bfe:	000146        	j	400e5c07 <_dtoa_r+0x827>
400e5c01:	d138      	l32i.n	a3, a1, 52
400e5c03:	a168      	l32i.n	a6, a1, 40
400e5c05:	f148      	l32i.n	a4, a1, 60
400e5c07:	315f60        	srai	a5, a6, 31
400e5c0a:	c05560        	sub	a5, a5, a6
400e5c0d:	01c5d6        	bgez	a5, 400e5c2d <_dtoa_r+0x84d>
400e5c10:	8198      	l32i.n	a9, a1, 32
400e5c12:	315f90        	srai	a5, a9, 31
400e5c15:	c05590        	sub	a5, a5, a9
400e5c18:	0115d6        	bgez	a5, 400e5c2d <_dtoa_r+0x84d>
400e5c1b:	a188      	l32i.n	a8, a1, 40
400e5c1d:	435690        	min	a5, a6, a9
400e5c20:	c08850        	sub	a8, a8, a5
400e5c23:	c09950        	sub	a9, a9, a5
400e5c26:	a189      	s32i.n	a8, a1, 40
400e5c28:	c06650        	sub	a6, a6, a5
400e5c2b:	8199      	s32i.n	a9, a1, 32
400e5c2d:	0d2192        	l32i	a9, a1, 52
400e5c30:	3c19a6        	blti	a9, 1, 400e5c70 <_dtoa_r+0x890>
400e5c33:	f158      	l32i.n	a5, a1, 60
400e5c35:	95ac      	beqz.n	a5, 400e5c62 <_dtoa_r+0x882>
400e5c37:	d39c      	beqz.n	a3, 400e5c58 <_dtoa_r+0x878>
400e5c39:	04bd      	mov.n	a11, a4
400e5c3b:	03cd      	mov.n	a12, a3
400e5c3d:	02ad      	mov.n	a10, a2
400e5c3f:	f58ba5        	call8	400db4f8 <__pow5mult>
400e5c42:	71c8      	l32i.n	a12, a1, 28
400e5c44:	0abd      	mov.n	a11, a10
400e5c46:	0a4d      	mov.n	a4, a10
400e5c48:	02ad      	mov.n	a10, a2
400e5c4a:	f57aa5        	call8	400db3f4 <__multiply>
400e5c4d:	71b8      	l32i.n	a11, a1, 28
400e5c4f:	0a5d      	mov.n	a5, a10
400e5c51:	02ad      	mov.n	a10, a2
400e5c53:	f55b25        	call8	400db204 <_Bfree>
400e5c56:	7159      	s32i.n	a5, a1, 28
400e5c58:	d188      	l32i.n	a8, a1, 52
400e5c5a:	c0c830        	sub	a12, a8, a3
400e5c5d:	fc8c      	beqz.n	a12, 400e5c70 <_dtoa_r+0x890>
400e5c5f:	000086        	j	400e5c65 <_dtoa_r+0x885>
400e5c62:	0d21c2        	l32i	a12, a1, 52
400e5c65:	0721b2        	l32i	a11, a1, 28
400e5c68:	20a220        	or	a10, a2, a2
400e5c6b:	f588e5        	call8	400db4f8 <__pow5mult>
400e5c6e:	71a9      	s32i.n	a10, a1, 28
400e5c70:	01a0b2        	movi	a11, 1
400e5c73:	20a220        	or	a10, a2, a2
400e5c76:	f576a5        	call8	400db3e0 <__i2b>
400e5c79:	102192        	l32i	a9, a1, 64
400e5c7c:	0a3d      	mov.n	a3, a10
400e5c7e:	397916        	beqz	a9, 400e6019 <_dtoa_r+0xc39>
400e5c81:	0abd      	mov.n	a11, a10
400e5c83:	09cd      	mov.n	a12, a9
400e5c85:	02ad      	mov.n	a10, a2
400e5c87:	f58725        	call8	400db4f8 <__pow5mult>
400e5c8a:	c158      	l32i.n	a5, a1, 48
400e5c8c:	0a3d      	mov.n	a3, a10
400e5c8e:	3025e6        	bgei	a5, 2, 400e5cc2 <_dtoa_r+0x8e2>
400e5c91:	080c      	movi.n	a8, 0
400e5c93:	4198      	l32i.n	a9, a1, 16
400e5c95:	d189      	s32i.n	a8, a1, 52
400e5c97:	1d9987        	bne	a9, a8, 400e5cb8 <_dtoa_r+0x8d8>
400e5c9a:	aa6551        	l32r	a5, 400d0630 <_flash_cache_start+0x618>
400e5c9d:	51a8      	l32i.n	a10, a1, 20
400e5c9f:	1585a7        	bany	a5, a10, 400e5cb8 <_dtoa_r+0x8d8>
400e5ca2:	aa8751        	l32r	a5, 400d06c0 <_flash_cache_start+0x6a8>
400e5ca5:	0f05a7        	bnone	a5, a10, 400e5cb8 <_dtoa_r+0x8d8>
400e5ca8:	a158      	l32i.n	a5, a1, 40
400e5caa:	8188      	l32i.n	a8, a1, 32
400e5cac:	551b      	addi.n	a5, a5, 1
400e5cae:	881b      	addi.n	a8, a8, 1
400e5cb0:	190c      	movi.n	a9, 1
400e5cb2:	a159      	s32i.n	a5, a1, 40
400e5cb4:	8189      	s32i.n	a8, a1, 32
400e5cb6:	d199      	s32i.n	a9, a1, 52
400e5cb8:	102152        	l32i	a5, a1, 64
400e5cbb:	1a0c      	movi.n	a10, 1
400e5cbd:	759c      	beqz.n	a5, 400e5cd8 <_dtoa_r+0x8f8>
400e5cbf:	000146        	j	400e5cc8 <_dtoa_r+0x8e8>
400e5cc2:	00a082        	movi	a8, 0
400e5cc5:	0d6182        	s32i	a8, a1, 52
400e5cc8:	042352        	l32i	a5, a3, 16
400e5ccb:	a05530        	addx4	a5, a5, a3
400e5cce:	45a8      	l32i.n	a10, a5, 16
400e5cd0:	052c      	movi.n	a5, 32
400e5cd2:	f56565        	call8	400db328 <__hi0bits>
400e5cd5:	c0a5a0        	sub	a10, a5, a10
400e5cd8:	8198      	l32i.n	a9, a1, 32
400e5cda:	aa9a      	add.n	a10, a10, a9
400e5cdc:	44a0a0        	extui	a10, a10, 0, 5
400e5cdf:	ba9c      	beqz.n	a10, 400e5cfe <_dtoa_r+0x91e>
400e5ce1:	052c      	movi.n	a5, 32
400e5ce3:	c055a0        	sub	a5, a5, a10
400e5ce6:	0f55a6        	blti	a5, 5, 400e5cf9 <_dtoa_r+0x919>
400e5ce9:	c51c      	movi.n	a5, 28
400e5ceb:	c0a5a0        	sub	a10, a5, a10
400e5cee:	a158      	l32i.n	a5, a1, 40
400e5cf0:	66aa      	add.n	a6, a6, a10
400e5cf2:	55aa      	add.n	a5, a5, a10
400e5cf4:	a159      	s32i.n	a5, a1, 40
400e5cf6:	000486        	j	400e5d0c <_dtoa_r+0x92c>
400e5cf9:	134526        	beqi	a5, 4, 400e5d10 <_dtoa_r+0x930>
400e5cfc:	05ad      	mov.n	a10, a5
400e5cfe:	a188      	l32i.n	a8, a1, 40
400e5d00:	1ccaa2        	addi	a10, a10, 28
400e5d03:	88aa      	add.n	a8, a8, a10
400e5d05:	8198      	l32i.n	a9, a1, 32
400e5d07:	a189      	s32i.n	a8, a1, 40
400e5d09:	8066a0        	add	a6, a6, a10
400e5d0c:	99aa      	add.n	a9, a9, a10
400e5d0e:	8199      	s32i.n	a9, a1, 32
400e5d10:	a158      	l32i.n	a5, a1, 40
400e5d12:	0b15a6        	blti	a5, 1, 400e5d21 <_dtoa_r+0x941>
400e5d15:	71b8      	l32i.n	a11, a1, 28
400e5d17:	05cd      	mov.n	a12, a5
400e5d19:	02ad      	mov.n	a10, a2
400e5d1b:	f586e5        	call8	400db588 <__lshift>
400e5d1e:	0761a2        	s32i	a10, a1, 28
400e5d21:	8188      	l32i.n	a8, a1, 32
400e5d23:	0c18a6        	blti	a8, 1, 400e5d33 <_dtoa_r+0x953>
400e5d26:	03bd      	mov.n	a11, a3
400e5d28:	20c880        	or	a12, a8, a8
400e5d2b:	20a220        	or	a10, a2, a2
400e5d2e:	f585a5        	call8	400db588 <__lshift>
400e5d31:	0a3d      	mov.n	a3, a10
400e5d33:	142192        	l32i	a9, a1, 80
400e5d36:	e9ac      	beqz.n	a9, 400e5d68 <_dtoa_r+0x988>
400e5d38:	71a8      	l32i.n	a10, a1, 28
400e5d3a:	03bd      	mov.n	a11, a3
400e5d3c:	f58e65        	call8	400db624 <__mcmp>
400e5d3f:	025ad6        	bgez	a10, 400e5d68 <_dtoa_r+0x988>
400e5d42:	6158      	l32i.n	a5, a1, 24
400e5d44:	71b8      	l32i.n	a11, a1, 28
400e5d46:	550b      	addi.n	a5, a5, -1
400e5d48:	0d0c      	movi.n	a13, 0
400e5d4a:	ac0c      	movi.n	a12, 10
400e5d4c:	02ad      	mov.n	a10, a2
400e5d4e:	6159      	s32i.n	a5, a1, 24
400e5d50:	f54e25        	call8	400db234 <__multadd>
400e5d53:	f188      	l32i.n	a8, a1, 60
400e5d55:	71a9      	s32i.n	a10, a1, 28
400e5d57:	e178      	l32i.n	a7, a1, 56
400e5d59:	b88c      	beqz.n	a8, 400e5d68 <_dtoa_r+0x988>
400e5d5b:	04bd      	mov.n	a11, a4
400e5d5d:	0d0c      	movi.n	a13, 0
400e5d5f:	ac0c      	movi.n	a12, 10
400e5d61:	02ad      	mov.n	a10, a2
400e5d63:	f54d25        	call8	400db234 <__multadd>
400e5d66:	0a4d      	mov.n	a4, a10
400e5d68:	ffc752        	addi	a5, a7, -1
400e5d6b:	208750        	or	a8, a7, a5
400e5d6e:	0508d6        	bgez	a8, 400e5dc2 <_dtoa_r+0x9e2>
400e5d71:	0c2192        	l32i	a9, a1, 48
400e5d74:	4a39a6        	blti	a9, 3, 400e5dc2 <_dtoa_r+0x9e2>
400e5d77:	d7dc      	bnez.n	a7, 400e5d98 <_dtoa_r+0x9b8>
400e5d79:	03bd      	mov.n	a11, a3
400e5d7b:	07dd      	mov.n	a13, a7
400e5d7d:	5c0c      	movi.n	a12, 5
400e5d7f:	02ad      	mov.n	a10, a2
400e5d81:	f54b25        	call8	400db234 <__multadd>
400e5d84:	0a3d      	mov.n	a3, a10
400e5d86:	0abd      	mov.n	a11, a10
400e5d88:	71a8      	l32i.n	a10, a1, 28
400e5d8a:	f589a5        	call8	400db624 <__mcmp>
400e5d8d:	1b1ae6        	bgei	a10, 1, 400e5dac <_dtoa_r+0x9cc>
400e5d90:	000106        	j	400e5d98 <_dtoa_r+0x9b8>
400e5d93:	030c00        	rsr.scompare1	a0
400e5d96:	034d      	mov.n	a4, a3
400e5d98:	112162        	l32i	a6, a1, 68
400e5d9b:	f57c      	movi.n	a5, -1
400e5d9d:	305560        	xor	a5, a5, a6
400e5da0:	6159      	s32i.n	a5, a1, 24
400e5da2:	b158      	l32i.n	a5, a1, 44
400e5da4:	0004c6        	j	400e5dbb <_dtoa_r+0x9db>
400e5da7:	6169      	s32i.n	a6, a1, 24
400e5da9:	204330        	or	a4, a3, a3
400e5dac:	6198      	l32i.n	a9, a1, 24
400e5dae:	b188      	l32i.n	a8, a1, 44
400e5db0:	163c      	movi.n	a6, 49
400e5db2:	991b      	addi.n	a9, a9, 1
400e5db4:	581b      	addi.n	a5, a8, 1
400e5db6:	004862        	s8i	a6, a8, 0
400e5db9:	6199      	s32i.n	a9, a1, 24
400e5dbb:	046d      	mov.n	a6, a4
400e5dbd:	040c      	movi.n	a4, 0
400e5dbf:	008486        	j	400e5fd5 <_dtoa_r+0xbf5>
400e5dc2:	f188      	l32i.n	a8, a1, 60
400e5dc4:	58cc      	bnez.n	a8, 400e5dcd <_dtoa_r+0x9ed>
400e5dc6:	b158      	l32i.n	a5, a1, 44
400e5dc8:	005d46        	j	400e5f41 <_dtoa_r+0xb61>
400e5dcb:	a60000        	lsi	f0, a0, 0x298
400e5dce:	400d16        	beqz	a13, 400e61d2 <get_arg$isra$0+0x13e>
400e5dd1:	6020b4        	lsi	f11, a0, 0x180
400e5dd4:	2020c6        	j	400ede5b <_etext+0x198a>
400e5dd7:	e520a2        	l32i	a10, a0, 0x394
400e5dda:	f57a      	add.n	a15, a5, a7
400e5ddc:	0a4d      	mov.n	a4, a10
400e5dde:	0d2192        	l32i	a9, a1, 52
400e5de1:	206440        	or	a6, a4, a4
400e5de4:	49ac      	beqz.n	a9, 400e5e0c <_dtoa_r+0xa2c>
400e5de6:	14b8      	l32i.n	a11, a4, 4
400e5de8:	02ad      	mov.n	a10, a2
400e5dea:	f53a65        	call8	400db190 <_Balloc>
400e5ded:	44c8      	l32i.n	a12, a4, 16
400e5def:	0a6d      	mov.n	a6, a10
400e5df1:	cc2b      	addi.n	a12, a12, 2
400e5df3:	11cce0        	slli	a12, a12, 2
400e5df6:	b4cb      	addi.n	a11, a4, 12
400e5df8:	0ccaa2        	addi	a10, a10, 12
400e5dfb:	a8a581        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400e5dfe:	0008e0        	callx8	a8
400e5e01:	06bd      	mov.n	a11, a6
400e5e03:	1c0c      	movi.n	a12, 1
400e5e05:	02ad      	mov.n	a10, a2
400e5e07:	f57825        	call8	400db588 <__lshift>
400e5e0a:	0a6d      	mov.n	a6, a10
400e5e0c:	b198      	l32i.n	a9, a1, 44
400e5e0e:	595a      	add.n	a5, a9, a5
400e5e10:	8159      	s32i.n	a5, a1, 32
400e5e12:	71a8      	l32i.n	a10, a1, 28
400e5e14:	03bd      	mov.n	a11, a3
400e5e16:	1a6192        	s32i	a9, a1, 104
400e5e19:	ff4ba5        	call8	400e52d4 <quorem>
400e5e1c:	30ca82        	addi	a8, a10, 48
400e5e1f:	0a7d      	mov.n	a7, a10
400e5e21:	71a8      	l32i.n	a10, a1, 28
400e5e23:	04bd      	mov.n	a11, a4
400e5e25:	1b6182        	s32i	a8, a1, 108
400e5e28:	f57fa5        	call8	400db624 <__mcmp>
400e5e2b:	06cd      	mov.n	a12, a6
400e5e2d:	0a5d      	mov.n	a5, a10
400e5e2f:	03bd      	mov.n	a11, a3
400e5e31:	20a220        	or	a10, a2, a2
400e5e34:	f582a5        	call8	400db660 <__mdiff>
400e5e37:	0add      	mov.n	a13, a10
400e5e39:	3aa8      	l32i.n	a10, a10, 12
400e5e3b:	1c0c      	movi.n	a12, 1
400e5e3d:	1b2182        	l32i	a8, a1, 108
400e5e40:	1a2192        	l32i	a9, a1, 104
400e5e43:	5adc      	bnez.n	a10, 400e5e5c <_dtoa_r+0xa7c>
400e5e45:	71a8      	l32i.n	a10, a1, 28
400e5e47:	20bdd0        	or	a11, a13, a13
400e5e4a:	1861d2        	s32i	a13, a1, 96
400e5e4d:	f57d65        	call8	400db624 <__mcmp>
400e5e50:	1821d2        	l32i	a13, a1, 96
400e5e53:	1a2192        	l32i	a9, a1, 104
400e5e56:	1b2182        	l32i	a8, a1, 108
400e5e59:	20caa0        	or	a12, a10, a10
400e5e5c:	0dbd      	mov.n	a11, a13
400e5e5e:	02ad      	mov.n	a10, a2
400e5e60:	1b6182        	s32i	a8, a1, 108
400e5e63:	1a6192        	s32i	a9, a1, 104
400e5e66:	1861c2        	s32i	a12, a1, 96
400e5e69:	f539a5        	call8	400db204 <_Bfree>
400e5e6c:	1821c2        	l32i	a12, a1, 96
400e5e6f:	c1b8      	l32i.n	a11, a1, 48
400e5e71:	1b2182        	l32i	a8, a1, 108
400e5e74:	20acb0        	or	a10, a12, a11
400e5e77:	1a2192        	l32i	a9, a1, 104
400e5e7a:	3adc      	bnez.n	a10, 400e5e91 <_dtoa_r+0xab1>
400e5e7c:	41b8      	l32i.n	a11, a1, 16
400e5e7e:	04a0b0        	extui	a10, a11, 0, 1
400e5e81:	cacc      	bnez.n	a10, 400e5e91 <_dtoa_r+0xab1>
400e5e83:	9a3c      	movi.n	a10, 57
400e5e85:	5d18a7        	beq	a8, a10, 400e5ee6 <_dtoa_r+0xb06>
400e5e88:	4a15a6        	blti	a5, 1, 400e5ed6 <_dtoa_r+0xaf6>
400e5e8b:	001106        	j	400e5ed3 <_dtoa_r+0xaf3>
400e5e8e:	000000        	ill
400e5e91:	00f596        	bltz	a5, 400e5ea4 <_dtoa_r+0xac4>
400e5e94:	c1a8      	l32i.n	a10, a1, 48
400e5e96:	2055a0        	or	a5, a5, a10
400e5e99:	03f556        	bnez	a5, 400e5edc <_dtoa_r+0xafc>
400e5e9c:	0421b2        	l32i	a11, a1, 16
400e5e9f:	0450b0        	extui	a5, a11, 0, 1
400e5ea2:	65fc      	bnez.n	a5, 400e5edc <_dtoa_r+0xafc>
400e5ea4:	2e1ca6        	blti	a12, 1, 400e5ed6 <_dtoa_r+0xaf6>
400e5ea7:	0721b2        	l32i	a11, a1, 28
400e5eaa:	01a0c2        	movi	a12, 1
400e5ead:	20a220        	or	a10, a2, a2
400e5eb0:	1b6182        	s32i	a8, a1, 108
400e5eb3:	1a6192        	s32i	a9, a1, 104
400e5eb6:	f56d25        	call8	400db588 <__lshift>
400e5eb9:	03bd      	mov.n	a11, a3
400e5ebb:	71a9      	s32i.n	a10, a1, 28
400e5ebd:	f57665        	call8	400db624 <__mcmp>
400e5ec0:	1b2182        	l32i	a8, a1, 108
400e5ec3:	1a2192        	l32i	a9, a1, 104
400e5ec6:	041ae6        	bgei	a10, 1, 400e5ece <_dtoa_r+0xaee>
400e5ec9:	9acc      	bnez.n	a10, 400e5ed6 <_dtoa_r+0xaf6>
400e5ecb:	076807        	bbci	a8, 0, 400e5ed6 <_dtoa_r+0xaf6>
400e5ece:	953c      	movi.n	a5, 57
400e5ed0:	121857        	beq	a8, a5, 400e5ee6 <_dtoa_r+0xb06>
400e5ed3:	31c782        	addi	a8, a7, 49
400e5ed6:	591b      	addi.n	a5, a9, 1
400e5ed8:	000606        	j	400e5ef4 <_dtoa_r+0xb14>
400e5edb:	791b00        	lsi	f0, a11, 0x1e4
400e5ede:	181ca6        	blti	a12, 1, 400e5efa <_dtoa_r+0xb1a>
400e5ee1:	953c      	movi.n	a5, 57
400e5ee3:	099857        	bne	a8, a5, 400e5ef0 <_dtoa_r+0xb10>
400e5ee6:	973c      	movi.n	a7, 57
400e5ee8:	591b      	addi.n	a5, a9, 1
400e5eea:	004972        	s8i	a7, a9, 0
400e5eed:	002f06        	j	400e5fad <_dtoa_r+0xbcd>
400e5ef0:	075d      	mov.n	a5, a7
400e5ef2:	881b      	addi.n	a8, a8, 1
400e5ef4:	004982        	s8i	a8, a9, 0
400e5ef7:	003686        	j	400e5fd5 <_dtoa_r+0xbf5>
400e5efa:	0821a2        	l32i	a10, a1, 32
400e5efd:	004982        	s8i	a8, a9, 0
400e5f00:	205770        	or	a5, a7, a7
400e5f03:	7219a7        	beq	a9, a10, 400e5f79 <_dtoa_r+0xb99>
400e5f06:	71b8      	l32i.n	a11, a1, 28
400e5f08:	0d0c      	movi.n	a13, 0
400e5f0a:	ac0c      	movi.n	a12, 10
400e5f0c:	02ad      	mov.n	a10, a2
400e5f0e:	f53265        	call8	400db234 <__multadd>
400e5f11:	71a9      	s32i.n	a10, a1, 28
400e5f13:	0d0c      	movi.n	a13, 0
400e5f15:	ac0c      	movi.n	a12, 10
400e5f17:	04bd      	mov.n	a11, a4
400e5f19:	02ad      	mov.n	a10, a2
400e5f1b:	099467        	bne	a4, a6, 400e5f28 <_dtoa_r+0xb48>
400e5f1e:	f53165        	call8	400db234 <__multadd>
400e5f21:	0a4d      	mov.n	a4, a10
400e5f23:	0a6d      	mov.n	a6, a10
400e5f25:	0004c6        	j	400e5f3c <_dtoa_r+0xb5c>
400e5f28:	f530a5        	call8	400db234 <__multadd>
400e5f2b:	20b660        	or	a11, a6, a6
400e5f2e:	204aa0        	or	a4, a10, a10
400e5f31:	0d0c      	movi.n	a13, 0
400e5f33:	ac0c      	movi.n	a12, 10
400e5f35:	02ad      	mov.n	a10, a2
400e5f37:	f52fe5        	call8	400db234 <__multadd>
400e5f3a:	0a6d      	mov.n	a6, a10
400e5f3c:	079d      	mov.n	a9, a7
400e5f3e:	ffb406        	j	400e5e12 <_dtoa_r+0xa32>
400e5f41:	71a8      	l32i.n	a10, a1, 28
400e5f43:	03bd      	mov.n	a11, a3
400e5f45:	ff38e5        	call8	400e52d4 <quorem>
400e5f48:	30ca82        	addi	a8, a10, 48
400e5f4b:	b198      	l32i.n	a9, a1, 44
400e5f4d:	004582        	s8i	a8, a5, 0
400e5f50:	551b      	addi.n	a5, a5, 1
400e5f52:	c06590        	sub	a6, a5, a9
400e5f55:	0d2677        	blt	a6, a7, 400e5f66 <_dtoa_r+0xb86>
400e5f58:	150c      	movi.n	a5, 1
400e5f5a:	535750        	max	a5, a7, a5
400e5f5d:	046d      	mov.n	a6, a4
400e5f5f:	595a      	add.n	a5, a9, a5
400e5f61:	040c      	movi.n	a4, 0
400e5f63:	000486        	j	400e5f79 <_dtoa_r+0xb99>
400e5f66:	0721b2        	l32i	a11, a1, 28
400e5f69:	00a0d2        	movi	a13, 0
400e5f6c:	0aa0c2        	movi	a12, 10
400e5f6f:	02ad      	mov.n	a10, a2
400e5f71:	f52c25        	call8	400db234 <__multadd>
400e5f74:	71a9      	s32i.n	a10, a1, 28
400e5f76:	fff1c6        	j	400e5f41 <_dtoa_r+0xb61>
400e5f79:	71b8      	l32i.n	a11, a1, 28
400e5f7b:	1c0c      	movi.n	a12, 1
400e5f7d:	02ad      	mov.n	a10, a2
400e5f7f:	1b6182        	s32i	a8, a1, 108
400e5f82:	f56065        	call8	400db588 <__lshift>
400e5f85:	03bd      	mov.n	a11, a3
400e5f87:	71a9      	s32i.n	a10, a1, 28
400e5f89:	f569a5        	call8	400db624 <__mcmp>
400e5f8c:	1b2182        	l32i	a8, a1, 108
400e5f8f:	1a1ae6        	bgei	a10, 1, 400e5fad <_dtoa_r+0xbcd>
400e5f92:	eaec      	bnez.n	a10, 400e5fc4 <_dtoa_r+0xbe4>
400e5f94:	15e807        	bbsi	a8, 0, 400e5fad <_dtoa_r+0xbcd>
400e5f97:	000a46        	j	400e5fc4 <_dtoa_r+0xbe4>
400e5f9a:	b188      	l32i.n	a8, a1, 44
400e5f9c:	129877        	bne	a8, a7, 400e5fb2 <_dtoa_r+0xbd2>
400e5f9f:	6198      	l32i.n	a9, a1, 24
400e5fa1:	173c      	movi.n	a7, 49
400e5fa3:	991b      	addi.n	a9, a9, 1
400e5fa5:	6199      	s32i.n	a9, a1, 24
400e5fa7:	004872        	s8i	a7, a8, 0
400e5faa:	0009c6        	j	400e5fd5 <_dtoa_r+0xbf5>
400e5fad:	993c      	movi.n	a9, 57
400e5faf:	000046        	j	400e5fb4 <_dtoa_r+0xbd4>
400e5fb2:	075d      	mov.n	a5, a7
400e5fb4:	750b      	addi.n	a7, a5, -1
400e5fb6:	000782        	l8ui	a8, a7, 0
400e5fb9:	dd1897        	beq	a8, a9, 400e5f9a <_dtoa_r+0xbba>
400e5fbc:	881b      	addi.n	a8, a8, 1
400e5fbe:	004782        	s8i	a8, a7, 0
400e5fc1:	000406        	j	400e5fd5 <_dtoa_r+0xbf5>
400e5fc4:	083c      	movi.n	a8, 48
400e5fc6:	000086        	j	400e5fcc <_dtoa_r+0xbec>
400e5fc9:	205770        	or	a5, a7, a7
400e5fcc:	ffc572        	addi	a7, a5, -1
400e5fcf:	000792        	l8ui	a9, a7, 0
400e5fd2:	f31987        	beq	a9, a8, 400e5fc9 <_dtoa_r+0xbe9>
400e5fd5:	03bd      	mov.n	a11, a3
400e5fd7:	02ad      	mov.n	a10, a2
400e5fd9:	f522a5        	call8	400db204 <_Bfree>
400e5fdc:	669c      	beqz.n	a6, 400e5ff6 <_dtoa_r+0xc16>
400e5fde:	848c      	beqz.n	a4, 400e5fea <_dtoa_r+0xc0a>
400e5fe0:	061467        	beq	a4, a6, 400e5fea <_dtoa_r+0xc0a>
400e5fe3:	04bd      	mov.n	a11, a4
400e5fe5:	02ad      	mov.n	a10, a2
400e5fe7:	f521e5        	call8	400db204 <_Bfree>
400e5fea:	06bd      	mov.n	a11, a6
400e5fec:	02ad      	mov.n	a10, a2
400e5fee:	f52165        	call8	400db204 <_Bfree>
400e5ff1:	000046        	j	400e5ff6 <_dtoa_r+0xc16>
400e5ff4:	6169      	s32i.n	a6, a1, 24
400e5ff6:	0721b2        	l32i	a11, a1, 28
400e5ff9:	20a220        	or	a10, a2, a2
400e5ffc:	f52065        	call8	400db204 <_Bfree>
400e5fff:	062132        	l32i	a3, a1, 24
400e6002:	020c      	movi.n	a2, 0
400e6004:	242142        	l32i	a4, a1, 144
400e6007:	004522        	s8i	a2, a5, 0
400e600a:	262162        	l32i	a6, a1, 152
400e600d:	231b      	addi.n	a2, a3, 1
400e600f:	0429      	s32i.n	a2, a4, 0
400e6011:	b128      	l32i.n	a2, a1, 44
400e6013:	569c      	beqz.n	a6, 400e602c <_dtoa_r+0xc4c>
400e6015:	0659      	s32i.n	a5, a6, 0
400e6017:	f01d      	retw.n
400e6019:	c188      	l32i.n	a8, a1, 48
400e601b:	0228e6        	bgei	a8, 2, 400e6021 <_dtoa_r+0xc41>
400e601e:	ff1bc6        	j	400e5c91 <_dtoa_r+0x8b1>
400e6021:	102192        	l32i	a9, a1, 64
400e6024:	1a0c      	movi.n	a10, 1
400e6026:	d199      	s32i.n	a9, a1, 52
400e6028:	ff2b06        	j	400e5cd8 <_dtoa_r+0x8f8>
400e602b:	f01d00        	subx8	a1, a13, a0
	...

400e6030 <frexp>:
400e6030:	004136        	entry	a1, 32
400e6033:	03bd      	mov.n	a11, a3
400e6035:	090c      	movi.n	a9, 0
400e6037:	03ed      	mov.n	a14, a3
400e6039:	a80931        	l32r	a3, 400d0060 <_flash_cache_start+0x48>
400e603c:	0499      	s32i.n	a9, a4, 0
400e603e:	aa0691        	l32r	a9, 400d0858 <_flash_cache_start+0x840>
400e6041:	1083b0        	and	a8, a3, a11
400e6044:	02ad      	mov.n	a10, a2
400e6046:	02cd      	mov.n	a12, a2
400e6048:	0bdd      	mov.n	a13, a11
400e604a:	3e2987        	blt	a9, a8, 400e608c <frexp+0x5c>
400e604d:	209820        	or	a9, a8, a2
400e6050:	89bc      	beqz.n	a9, 400e608c <frexp+0x5c>
400e6052:	a97791        	l32r	a9, 400d0630 <_flash_cache_start+0x618>
400e6055:	152987        	blt	a9, a8, 400e606e <frexp+0x3e>
400e6058:	a801c1        	l32r	a12, 400d005c <_flash_cache_start+0x44>
400e605b:	aa00d1        	l32r	a13, 400d085c <_flash_cache_start+0x844>
400e605e:	a7fe81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e6061:	0008e0        	callx8	a8
400e6064:	1083b0        	and	a8, a3, a11
400e6067:	caaf32        	movi	a3, -54
400e606a:	0bed      	mov.n	a14, a11
400e606c:	0439      	s32i.n	a3, a4, 0
400e606e:	0438      	l32i.n	a3, a4, 0
400e6070:	318480        	srai	a8, a8, 20
400e6073:	02ac92        	movi	a9, 0xfffffc02
400e6076:	889a      	add.n	a8, a8, a9
400e6078:	838a      	add.n	a8, a3, a8
400e607a:	a9f931        	l32r	a3, 400d0860 <_flash_cache_start+0x848>
400e607d:	0489      	s32i.n	a8, a4, 0
400e607f:	a9bb41        	l32r	a4, 400d076c <_flash_cache_start+0x754>
400e6082:	103e30        	and	a3, a14, a3
400e6085:	20b340        	or	a11, a3, a4
400e6088:	0acd      	mov.n	a12, a10
400e608a:	0bdd      	mov.n	a13, a11
400e608c:	0c2d      	mov.n	a2, a12
400e608e:	0d3d      	mov.n	a3, a13
400e6090:	f01d      	retw.n
	...

400e6094 <get_arg$isra$0>:
400e6094:	008136        	entry	a1, 64
400e6097:	102182        	l32i	a8, a1, 64
400e609a:	2129      	s32i.n	a2, a1, 8
400e609c:	3159      	s32i.n	a5, a1, 12
400e609e:	0528      	l32i.n	a2, a5, 0
400e60a0:	2198      	l32i.n	a9, a1, 8
400e60a2:	0858      	l32i.n	a5, a8, 0
400e60a4:	933550        	movnez	a3, a5, a5
400e60a7:	0199      	s32i.n	a9, a1, 0
400e60a9:	00d3c6        	j	400e63fc <get_arg$isra$0+0x368>
400e60ac:	1b0000        	un.s	b0, f0, f0
400e60af:	035233        	lsi	f3, a2, 12
400e60b2:	551600        	extui	a1, a0, 22, 6
400e60b5:	c58200        	extui	a8, a0, 18, 13
400e60b8:	56db      	addi.n	a5, a6, 13
400e60ba:	ff18      	l32i.n	a1, a15, 60
400e60bc:	349516        	beqz	a5, 400e6409 <get_arg$isra$0+0x375>
400e60bf:	050c      	movi.n	a5, 0
400e60c1:	05ed      	mov.n	a14, a5
400e60c3:	f97c      	movi.n	a9, -1
400e60c5:	05dd      	mov.n	a13, a5
400e60c7:	1159      	s32i.n	a5, a1, 4
400e60c9:	03ad      	mov.n	a10, a3
400e60cb:	a998c1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400e60ce:	000a82        	l8ui	a8, a10, 0
400e60d1:	331b      	addi.n	a3, a3, 1
400e60d3:	bc8a      	add.n	a11, a12, a8
400e60d5:	000bc2        	l8ui	a12, a11, 0
400e60d8:	11b8      	l32i.n	a11, a1, 4
400e60da:	b0fbb0        	addx8	a15, a11, a11
400e60dd:	a994b1        	l32r	a11, 400d0730 <_flash_cache_start+0x718>
400e60e0:	bbfa      	add.n	a11, a11, a15
400e60e2:	bbca      	add.n	a11, a11, a12
400e60e4:	000bb2        	l8ui	a11, a11, 0
400e60e7:	11b9      	s32i.n	a11, a1, 4
400e60e9:	a992b1        	l32r	a11, 400d0734 <_flash_cache_start+0x71c>
400e60ec:	fbfa      	add.n	a15, a11, a15
400e60ee:	ffca      	add.n	a15, a15, a12
400e60f0:	000fb2        	l8ui	a11, a15, 0
400e60f3:	bb0b      	addi.n	a11, a11, -1
400e60f5:	74b0b0        	extui	a11, a11, 0, 8
400e60f8:	028bb6        	bltui	a11, 8, 400e60fe <get_arg$isra$0+0x6a>
400e60fb:	00bcc6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e60fe:	a9d9c1        	l32r	a12, 400d0864 <_flash_cache_start+0x84c>
400e6101:	a0bbc0        	addx4	a11, a11, a12
400e6104:	0bb8      	l32i.n	a11, a11, 0
400e6106:	000ba0        	jx	a11
400e6109:	9a0c      	movi.n	a10, 9
400e610b:	00b5c6        	j	400e63e6 <get_arg$isra$0+0x352>
400e610e:	6aa0b2        	movi	a11, 106
400e6111:	3018b7        	beq	a8, a11, 400e6145 <get_arg$isra$0+0xb1>
400e6114:	0d3b87        	bltu	a11, a8, 400e6125 <get_arg$isra$0+0x91>
400e6117:	cb4c      	movi.n	a11, 76
400e6119:	2318b7        	beq	a8, a11, 400e6140 <get_arg$isra$0+0xac>
400e611c:	68a0b2        	movi	a11, 104
400e611f:	2a98b7        	bne	a8, a11, 400e614d <get_arg$isra$0+0xb9>
400e6122:	00b306        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6125:	74a0b2        	movi	a11, 116
400e6128:	0298b7        	bne	a8, a11, 400e612e <get_arg$isra$0+0x9a>
400e612b:	00b0c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e612e:	7aa0b2        	movi	a11, 122
400e6131:	0298b7        	bne	a8, a11, 400e6137 <get_arg$isra$0+0xa3>
400e6134:	00ae86        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6137:	71a0b2        	movi	a11, 113
400e613a:	0718b7        	beq	a8, a11, 400e6145 <get_arg$isra$0+0xb1>
400e613d:	000306        	j	400e614d <get_arg$isra$0+0xb9>
400e6140:	880c      	movi.n	a8, 8
400e6142:	000046        	j	400e6147 <get_arg$isra$0+0xb3>
400e6145:	082c      	movi.n	a8, 32
400e6147:	20dd80        	or	a13, a13, a8
400e614a:	00a906        	j	400e63f2 <get_arg$isra$0+0x35e>
400e614d:	010ab2        	l8ui	a11, a10, 1
400e6150:	6ca082        	movi	a8, 108
400e6153:	099b87        	bne	a11, a8, 400e6160 <get_arg$isra$0+0xcc>
400e6156:	032c      	movi.n	a3, 32
400e6158:	20dd30        	or	a13, a13, a3
400e615b:	3a2b      	addi.n	a3, a10, 2
400e615d:	00a446        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6160:	081c      	movi.n	a8, 16
400e6162:	fff846        	j	400e6147 <get_arg$isra$0+0xb3>
400e6165:	bfc882        	addi	a8, a8, -65
400e6168:	748080        	extui	a8, a8, 0, 8
400e616b:	7a3c      	movi.n	a10, 55
400e616d:	442020        	extui	a2, a2, 0, 5
400e6170:	253a87        	bltu	a10, a8, 400e6199 <get_arg$isra$0+0x105>
400e6173:	a9bda1        	l32r	a10, 400d0868 <_flash_cache_start+0x850>
400e6176:	a088a0        	addx4	a8, a8, a10
400e6179:	0888      	l32i.n	a8, a8, 0
400e617b:	0008a0        	jx	a8
400e617e:	026d47        	bbci	a13, 4, 400e6184 <get_arg$isra$0+0xf0>
400e6181:	00d806        	j	400e64e5 <get_arg$isra$0+0x451>
400e6184:	026d57        	bbci	a13, 5, 400e618a <get_arg$isra$0+0xf6>
400e6187:	00dec6        	j	400e6506 <get_arg$isra$0+0x472>
400e618a:	00db46        	j	400e64fb <get_arg$isra$0+0x467>
400e618d:	026d47        	bbci	a13, 4, 400e6193 <get_arg$isra$0+0xff>
400e6190:	00d186        	j	400e64da <get_arg$isra$0+0x446>
400e6193:	00d906        	j	400e64fb <get_arg$isra$0+0x467>
400e6196:	000000        	ill
400e6199:	070926        	beqi	a9, -1, 400e61a4 <get_arg$isra$0+0x110>
400e619c:	a08970        	addx4	a8, a9, a7
400e619f:	0859      	s32i.n	a5, a8, 0
400e61a1:	009346        	j	400e63f2 <get_arg$isra$0+0x35e>
400e61a4:	0275b6        	bltui	a5, 7, 400e61aa <get_arg$isra$0+0x116>
400e61a7:	0091c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e61aa:	a9b081        	l32r	a8, 400d086c <_flash_cache_start+0x854>
400e61ad:	a08580        	addx4	a8, a5, a8
400e61b0:	0888      	l32i.n	a8, a8, 0
400e61b2:	0008a0        	jx	a8
400e61b5:	2458      	l32i.n	a5, a4, 8
400e61b7:	881c      	movi.n	a8, 24
400e61b9:	954b      	addi.n	a9, a5, 4
400e61bb:	2499      	s32i.n	a9, a4, 8
400e61bd:	a21b      	addi.n	a10, a2, 1
400e61bf:	b02260        	addx8	a2, a2, a6
400e61c2:	072897        	blt	a8, a9, 400e61cd <get_arg$isra$0+0x139>
400e61c5:	1488      	l32i.n	a8, a4, 4
400e61c7:	0002c6        	j	400e61d6 <get_arg$isra$0+0x142>
400e61ca:	000000        	ill
400e61cd:	032857        	blt	a8, a5, 400e61d4 <get_arg$isra$0+0x140>
400e61d0:	452c      	movi.n	a5, 36
400e61d2:	2459      	s32i.n	a5, a4, 8
400e61d4:	0488      	l32i.n	a8, a4, 0
400e61d6:	2458      	l32i.n	a5, a4, 8
400e61d8:	f97c      	movi.n	a9, -1
400e61da:	585a      	add.n	a5, a8, a5
400e61dc:	fcc552        	addi	a5, a5, -4
400e61df:	0558      	l32i.n	a5, a5, 0
400e61e1:	0259      	s32i.n	a5, a2, 0
400e61e3:	0a2d      	mov.n	a2, a10
400e61e5:	150c      	movi.n	a5, 1
400e61e7:	0081c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e61ea:	2458      	l32i.n	a5, a4, 8
400e61ec:	887c      	movi.n	a8, -8
400e61ee:	557b      	addi.n	a5, a5, 7
400e61f0:	105580        	and	a5, a5, a8
400e61f3:	958b      	addi.n	a9, a5, 8
400e61f5:	2499      	s32i.n	a9, a4, 8
400e61f7:	881c      	movi.n	a8, 24
400e61f9:	a21b      	addi.n	a10, a2, 1
400e61fb:	b02260        	addx8	a2, a2, a6
400e61fe:	072897        	blt	a8, a9, 400e6209 <get_arg$isra$0+0x175>
400e6201:	1488      	l32i.n	a8, a4, 4
400e6203:	0002c6        	j	400e6212 <get_arg$isra$0+0x17e>
400e6206:	000000        	ill
400e6209:	032857        	blt	a8, a5, 400e6210 <get_arg$isra$0+0x17c>
400e620c:	852c      	movi.n	a5, 40
400e620e:	2459      	s32i.n	a5, a4, 8
400e6210:	0488      	l32i.n	a8, a4, 0
400e6212:	2458      	l32i.n	a5, a4, 8
400e6214:	585a      	add.n	a5, a8, a5
400e6216:	f8c552        	addi	a5, a5, -8
400e6219:	1598      	l32i.n	a9, a5, 4
400e621b:	0588      	l32i.n	a8, a5, 0
400e621d:	1299      	s32i.n	a9, a2, 4
400e621f:	0289      	s32i.n	a8, a2, 0
400e6221:	f97c      	movi.n	a9, -1
400e6223:	0a2d      	mov.n	a2, a10
400e6225:	250c      	movi.n	a5, 2
400e6227:	0071c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e622a:	2458      	l32i.n	a5, a4, 8
400e622c:	881c      	movi.n	a8, 24
400e622e:	954b      	addi.n	a9, a5, 4
400e6230:	2499      	s32i.n	a9, a4, 8
400e6232:	a21b      	addi.n	a10, a2, 1
400e6234:	b02260        	addx8	a2, a2, a6
400e6237:	062897        	blt	a8, a9, 400e6241 <get_arg$isra$0+0x1ad>
400e623a:	1488      	l32i.n	a8, a4, 4
400e623c:	000286        	j	400e624a <get_arg$isra$0+0x1b6>
400e623f:	570000        	lsi	f0, a0, 0x15c
400e6242:	0328      	l32i.n	a2, a3, 0
400e6244:	452c      	movi.n	a5, 36
400e6246:	2459      	s32i.n	a5, a4, 8
400e6248:	0488      	l32i.n	a8, a4, 0
400e624a:	2458      	l32i.n	a5, a4, 8
400e624c:	f97c      	movi.n	a9, -1
400e624e:	585a      	add.n	a5, a8, a5
400e6250:	fcc552        	addi	a5, a5, -4
400e6253:	0558      	l32i.n	a5, a5, 0
400e6255:	0259      	s32i.n	a5, a2, 0
400e6257:	0a2d      	mov.n	a2, a10
400e6259:	650c      	movi.n	a5, 6
400e625b:	0064c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e625e:	2458      	l32i.n	a5, a4, 8
400e6260:	881c      	movi.n	a8, 24
400e6262:	954b      	addi.n	a9, a5, 4
400e6264:	2499      	s32i.n	a9, a4, 8
400e6266:	a21b      	addi.n	a10, a2, 1
400e6268:	b02260        	addx8	a2, a2, a6
400e626b:	062897        	blt	a8, a9, 400e6275 <get_arg$isra$0+0x1e1>
400e626e:	1488      	l32i.n	a8, a4, 4
400e6270:	000286        	j	400e627e <get_arg$isra$0+0x1ea>
400e6273:	570000        	lsi	f0, a0, 0x15c
400e6276:	0328      	l32i.n	a2, a3, 0
400e6278:	452c      	movi.n	a5, 36
400e627a:	2459      	s32i.n	a5, a4, 8
400e627c:	0488      	l32i.n	a8, a4, 0
400e627e:	2458      	l32i.n	a5, a4, 8
400e6280:	f97c      	movi.n	a9, -1
400e6282:	585a      	add.n	a5, a8, a5
400e6284:	fcc552        	addi	a5, a5, -4
400e6287:	0558      	l32i.n	a5, a5, 0
400e6289:	0259      	s32i.n	a5, a2, 0
400e628b:	0a2d      	mov.n	a2, a10
400e628d:	050c      	movi.n	a5, 0
400e628f:	0057c6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6292:	2458      	l32i.n	a5, a4, 8
400e6294:	881c      	movi.n	a8, 24
400e6296:	954b      	addi.n	a9, a5, 4
400e6298:	2499      	s32i.n	a9, a4, 8
400e629a:	a21b      	addi.n	a10, a2, 1
400e629c:	b02260        	addx8	a2, a2, a6
400e629f:	062897        	blt	a8, a9, 400e62a9 <get_arg$isra$0+0x215>
400e62a2:	1488      	l32i.n	a8, a4, 4
400e62a4:	000286        	j	400e62b2 <get_arg$isra$0+0x21e>
400e62a7:	570000        	lsi	f0, a0, 0x15c
400e62aa:	0328      	l32i.n	a2, a3, 0
400e62ac:	452c      	movi.n	a5, 36
400e62ae:	2459      	s32i.n	a5, a4, 8
400e62b0:	0488      	l32i.n	a8, a4, 0
400e62b2:	2458      	l32i.n	a5, a4, 8
400e62b4:	f97c      	movi.n	a9, -1
400e62b6:	585a      	add.n	a5, a8, a5
400e62b8:	fcc552        	addi	a5, a5, -4
400e62bb:	0558      	l32i.n	a5, a5, 0
400e62bd:	0259      	s32i.n	a5, a2, 0
400e62bf:	0a2d      	mov.n	a2, a10
400e62c1:	350c      	movi.n	a5, 3
400e62c3:	004ac6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e62c6:	2458      	l32i.n	a5, a4, 8
400e62c8:	887c      	movi.n	a8, -8
400e62ca:	557b      	addi.n	a5, a5, 7
400e62cc:	105580        	and	a5, a5, a8
400e62cf:	958b      	addi.n	a9, a5, 8
400e62d1:	2499      	s32i.n	a9, a4, 8
400e62d3:	881c      	movi.n	a8, 24
400e62d5:	a21b      	addi.n	a10, a2, 1
400e62d7:	b02260        	addx8	a2, a2, a6
400e62da:	072897        	blt	a8, a9, 400e62e5 <get_arg$isra$0+0x251>
400e62dd:	1488      	l32i.n	a8, a4, 4
400e62df:	0002c6        	j	400e62ee <get_arg$isra$0+0x25a>
400e62e2:	000000        	ill
400e62e5:	032857        	blt	a8, a5, 400e62ec <get_arg$isra$0+0x258>
400e62e8:	852c      	movi.n	a5, 40
400e62ea:	2459      	s32i.n	a5, a4, 8
400e62ec:	0488      	l32i.n	a8, a4, 0
400e62ee:	2458      	l32i.n	a5, a4, 8
400e62f0:	585a      	add.n	a5, a8, a5
400e62f2:	f8c552        	addi	a5, a5, -8
400e62f5:	1598      	l32i.n	a9, a5, 4
400e62f7:	0588      	l32i.n	a8, a5, 0
400e62f9:	1299      	s32i.n	a9, a2, 4
400e62fb:	0289      	s32i.n	a8, a2, 0
400e62fd:	f97c      	movi.n	a9, -1
400e62ff:	0a2d      	mov.n	a2, a10
400e6301:	450c      	movi.n	a5, 4
400e6303:	003ac6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6306:	2488      	l32i.n	a8, a4, 8
400e6308:	8a7c      	movi.n	a10, -8
400e630a:	887b      	addi.n	a8, a8, 7
400e630c:	1088a0        	and	a8, a8, a10
400e630f:	b88b      	addi.n	a11, a8, 8
400e6311:	24b9      	s32i.n	a11, a4, 8
400e6313:	8a1c      	movi.n	a10, 24
400e6315:	c21b      	addi.n	a12, a2, 1
400e6317:	b02260        	addx8	a2, a2, a6
400e631a:	072ab7        	blt	a10, a11, 400e6325 <get_arg$isra$0+0x291>
400e631d:	14a8      	l32i.n	a10, a4, 4
400e631f:	0002c6        	j	400e632e <get_arg$isra$0+0x29a>
400e6322:	000000        	ill
400e6325:	032a87        	blt	a10, a8, 400e632c <get_arg$isra$0+0x298>
400e6328:	882c      	movi.n	a8, 40
400e632a:	2489      	s32i.n	a8, a4, 8
400e632c:	04a8      	l32i.n	a10, a4, 0
400e632e:	2488      	l32i.n	a8, a4, 8
400e6330:	8a8a      	add.n	a8, a10, a8
400e6332:	f8c882        	addi	a8, a8, -8
400e6335:	08a8      	l32i.n	a10, a8, 0
400e6337:	18b8      	l32i.n	a11, a8, 4
400e6339:	02a9      	s32i.n	a10, a2, 0
400e633b:	12b9      	s32i.n	a11, a2, 4
400e633d:	002006        	j	400e63c1 <get_arg$isra$0+0x32d>
400e6340:	0788      	l32i.n	a8, a7, 0
400e6342:	140866        	bnei	a8, -1, 400e635a <get_arg$isra$0+0x2c6>
400e6345:	80a0c2        	movi	a12, 128
400e6348:	0b0c      	movi.n	a11, 0
400e634a:	07ad      	mov.n	a10, a7
400e634c:	51d9      	s32i.n	a13, a1, 20
400e634e:	61e9      	s32i.n	a14, a1, 24
400e6350:	a74781        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400e6353:	0008e0        	callx8	a8
400e6356:	61e8      	l32i.n	a14, a1, 24
400e6358:	51d8      	l32i.n	a13, a1, 20
400e635a:	0188      	l32i.n	a8, a1, 0
400e635c:	9e0b      	addi.n	a9, a14, -1
400e635e:	538890        	max	a8, a8, a9
400e6361:	000ac6        	j	400e6390 <get_arg$isra$0+0x2fc>
400e6364:	0788      	l32i.n	a8, a7, 0
400e6366:	180866        	bnei	a8, -1, 400e6382 <get_arg$isra$0+0x2ee>
400e6369:	80a0c2        	movi	a12, 128
400e636c:	0b0c      	movi.n	a11, 0
400e636e:	07ad      	mov.n	a10, a7
400e6370:	4199      	s32i.n	a9, a1, 16
400e6372:	51d9      	s32i.n	a13, a1, 20
400e6374:	61e9      	s32i.n	a14, a1, 24
400e6376:	a73d81        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400e6379:	0008e0        	callx8	a8
400e637c:	61e8      	l32i.n	a14, a1, 24
400e637e:	51d8      	l32i.n	a13, a1, 20
400e6380:	4198      	l32i.n	a9, a1, 16
400e6382:	ee0b      	addi.n	a14, a14, -1
400e6384:	a08e70        	addx4	a8, a14, a7
400e6387:	0a0c      	movi.n	a10, 0
400e6389:	08a9      	s32i.n	a10, a8, 0
400e638b:	0188      	l32i.n	a8, a1, 0
400e638d:	5388e0        	max	a8, a8, a14
400e6390:	0189      	s32i.n	a8, a1, 0
400e6392:	001706        	j	400e63f2 <get_arg$isra$0+0x35e>
400e6395:	0a3d      	mov.n	a3, a10
400e6397:	2488      	l32i.n	a8, a4, 8
400e6399:	8a1c      	movi.n	a10, 24
400e639b:	b84b      	addi.n	a11, a8, 4
400e639d:	24b9      	s32i.n	a11, a4, 8
400e639f:	c21b      	addi.n	a12, a2, 1
400e63a1:	b02260        	addx8	a2, a2, a6
400e63a4:	052ab7        	blt	a10, a11, 400e63ad <get_arg$isra$0+0x319>
400e63a7:	14a8      	l32i.n	a10, a4, 4
400e63a9:	000246        	j	400e63b6 <get_arg$isra$0+0x322>
400e63ac:	2a8700        	mul.s	f8, f7, f0
400e63af:	482c03        	lsi	f0, a12, 0x120
400e63b2:	2489      	s32i.n	a8, a4, 8
400e63b4:	04a8      	l32i.n	a10, a4, 0
400e63b6:	2488      	l32i.n	a8, a4, 8
400e63b8:	8a8a      	add.n	a8, a10, a8
400e63ba:	fcc882        	addi	a8, a8, -4
400e63bd:	0888      	l32i.n	a8, a8, 0
400e63bf:	0289      	s32i.n	a8, a2, 0
400e63c1:	0c2d      	mov.n	a2, a12
400e63c3:	000ac6        	j	400e63f2 <get_arg$isra$0+0x35e>
400e63c6:	d0c8e2        	addi	a14, a8, -48
400e63c9:	9a0c      	movi.n	a10, 9
400e63cb:	0001c6        	j	400e63d6 <get_arg$isra$0+0x342>
400e63ce:	a0eee0        	addx4	a14, a14, a14
400e63d1:	90ee80        	addx2	a14, a14, a8
400e63d4:	331b      	addi.n	a3, a3, 1
400e63d6:	000382        	l8ui	a8, a3, 0
400e63d9:	589c      	beqz.n	a8, 400e63f2 <get_arg$isra$0+0x35e>
400e63db:	d0c882        	addi	a8, a8, -48
400e63de:	ecba87        	bgeu	a10, a8, 400e63ce <get_arg$isra$0+0x33a>
400e63e1:	000346        	j	400e63f2 <get_arg$isra$0+0x35e>
400e63e4:	331b      	addi.n	a3, a3, 1
400e63e6:	000382        	l8ui	a8, a3, 0
400e63e9:	d0c882        	addi	a8, a8, -48
400e63ec:	748080        	extui	a8, a8, 0, 8
400e63ef:	f1ba87        	bgeu	a10, a8, 400e63e4 <get_arg$isra$0+0x350>
400e63f2:	11a8      	l32i.n	a10, a1, 4
400e63f4:	b80c      	movi.n	a8, 11
400e63f6:	021a87        	beq	a10, a8, 400e63fc <get_arg$isra$0+0x368>
400e63f9:	ff3306        	j	400e60c9 <get_arg$isra$0+0x35>
400e63fc:	000352        	l8ui	a5, a3, 0
400e63ff:	658c      	beqz.n	a5, 400e6409 <get_arg$isra$0+0x375>
400e6401:	2188      	l32i.n	a8, a1, 8
400e6403:	022827        	blt	a8, a2, 400e6409 <get_arg$isra$0+0x375>
400e6406:	ff2986        	j	400e60b0 <get_arg$isra$0+0x1c>
400e6409:	0188      	l32i.n	a8, a1, 0
400e640b:	000352        	l8ui	a5, a3, 0
400e640e:	2198      	l32i.n	a9, a1, 8
400e6410:	f21b      	addi.n	a15, a2, 1
400e6412:	839850        	moveqz	a9, a8, a5
400e6415:	0199      	s32i.n	a9, a1, 0
400e6417:	b0b260        	addx8	a11, a2, a6
400e641a:	a07270        	addx4	a7, a2, a7
400e641d:	8a1c      	movi.n	a10, 24
400e641f:	4c2c      	movi.n	a12, 36
400e6421:	8d7c      	movi.n	a13, -8
400e6423:	8e2c      	movi.n	a14, 40
400e6425:	002306        	j	400e64b5 <get_arg$isra$0+0x421>
400e6428:	0758      	l32i.n	a5, a7, 0
400e642a:	2428      	l32i.n	a2, a4, 8
400e642c:	550b      	addi.n	a5, a5, -1
400e642e:	5f65f6        	bgeui	a5, 6, 400e6491 <get_arg$isra$0+0x3fd>
400e6431:	a90f91        	l32r	a9, 400d0870 <_flash_cache_start+0x858>
400e6434:	a05590        	addx4	a5, a5, a9
400e6437:	0558      	l32i.n	a5, a5, 0
400e6439:	0005a0        	jx	a5
400e643c:	227b      	addi.n	a2, a2, 7
400e643e:	1022d0        	and	a2, a2, a13
400e6441:	528b      	addi.n	a5, a2, 8
400e6443:	2459      	s32i.n	a5, a4, 8
400e6445:	042a57        	blt	a10, a5, 400e644d <get_arg$isra$0+0x3b9>
400e6448:	1458      	l32i.n	a5, a4, 4
400e644a:	000186        	j	400e6454 <get_arg$isra$0+0x3c0>
400e644d:	012a27        	blt	a10, a2, 400e6452 <get_arg$isra$0+0x3be>
400e6450:	24e9      	s32i.n	a14, a4, 8
400e6452:	0458      	l32i.n	a5, a4, 0
400e6454:	2428      	l32i.n	a2, a4, 8
400e6456:	252a      	add.n	a2, a5, a2
400e6458:	f8c222        	addi	a2, a2, -8
400e645b:	0288      	l32i.n	a8, a2, 0
400e645d:	1298      	l32i.n	a9, a2, 4
400e645f:	0b89      	s32i.n	a8, a11, 0
400e6461:	1b99      	s32i.n	a9, a11, 4
400e6463:	001206        	j	400e64af <get_arg$isra$0+0x41b>
400e6466:	227b      	addi.n	a2, a2, 7
400e6468:	1022d0        	and	a2, a2, a13
400e646b:	528b      	addi.n	a5, a2, 8
400e646d:	2459      	s32i.n	a5, a4, 8
400e646f:	052a57        	blt	a10, a5, 400e6478 <get_arg$isra$0+0x3e4>
400e6472:	1458      	l32i.n	a5, a4, 4
400e6474:	0001c6        	j	400e647f <get_arg$isra$0+0x3eb>
400e6477:	2a2700        	mul.s	f2, f7, f0
400e647a:	24e901        	l32r	a0, 400af820 <_iram_end+0x21ccc>
400e647d:	0458      	l32i.n	a5, a4, 0
400e647f:	2428      	l32i.n	a2, a4, 8
400e6481:	252a      	add.n	a2, a5, a2
400e6483:	f8c222        	addi	a2, a2, -8
400e6486:	0288      	l32i.n	a8, a2, 0
400e6488:	1298      	l32i.n	a9, a2, 4
400e648a:	0b89      	s32i.n	a8, a11, 0
400e648c:	1b99      	s32i.n	a9, a11, 4
400e648e:	000746        	j	400e64af <get_arg$isra$0+0x41b>
400e6491:	524b      	addi.n	a5, a2, 4
400e6493:	2459      	s32i.n	a5, a4, 8
400e6495:	042a57        	blt	a10, a5, 400e649d <get_arg$isra$0+0x409>
400e6498:	1458      	l32i.n	a5, a4, 4
400e649a:	000186        	j	400e64a4 <get_arg$isra$0+0x410>
400e649d:	012a27        	blt	a10, a2, 400e64a2 <get_arg$isra$0+0x40e>
400e64a0:	24c9      	s32i.n	a12, a4, 8
400e64a2:	0458      	l32i.n	a5, a4, 0
400e64a4:	2428      	l32i.n	a2, a4, 8
400e64a6:	252a      	add.n	a2, a5, a2
400e64a8:	fcc222        	addi	a2, a2, -4
400e64ab:	0228      	l32i.n	a2, a2, 0
400e64ad:	0b29      	s32i.n	a2, a11, 0
400e64af:	ff1b      	addi.n	a15, a15, 1
400e64b1:	bb8b      	addi.n	a11, a11, 8
400e64b3:	774b      	addi.n	a7, a7, 4
400e64b5:	0158      	l32i.n	a5, a1, 0
400e64b7:	2f0b      	addi.n	a2, a15, -1
400e64b9:	022527        	blt	a5, a2, 400e64bf <get_arg$isra$0+0x42b>
400e64bc:	ffda06        	j	400e6428 <get_arg$isra$0+0x394>
400e64bf:	3188      	l32i.n	a8, a1, 12
400e64c1:	102192        	l32i	a9, a1, 64
400e64c4:	0829      	s32i.n	a2, a8, 0
400e64c6:	2188      	l32i.n	a8, a1, 8
400e64c8:	0939      	s32i.n	a3, a9, 0
400e64ca:	b02860        	addx8	a2, a8, a6
400e64cd:	f01d      	retw.n
400e64cf:	350c      	movi.n	a5, 3
400e64d1:	020926        	beqi	a9, -1, 400e64d7 <get_arg$isra$0+0x443>
400e64d4:	ff3106        	j	400e619c <get_arg$isra$0+0x108>
400e64d7:	ff6dc6        	j	400e6292 <get_arg$isra$0+0x1fe>
400e64da:	650c      	movi.n	a5, 6
400e64dc:	020926        	beqi	a9, -1, 400e64e2 <get_arg$isra$0+0x44e>
400e64df:	ff2e46        	j	400e619c <get_arg$isra$0+0x108>
400e64e2:	ff5106        	j	400e622a <get_arg$isra$0+0x196>
400e64e5:	150c      	movi.n	a5, 1
400e64e7:	020926        	beqi	a9, -1, 400e64ed <get_arg$isra$0+0x459>
400e64ea:	ff2b86        	j	400e619c <get_arg$isra$0+0x108>
400e64ed:	ff3106        	j	400e61b5 <get_arg$isra$0+0x121>
400e64f0:	450c      	movi.n	a5, 4
400e64f2:	020926        	beqi	a9, -1, 400e64f8 <get_arg$isra$0+0x464>
400e64f5:	ff28c6        	j	400e619c <get_arg$isra$0+0x108>
400e64f8:	ff7286        	j	400e62c6 <get_arg$isra$0+0x232>
400e64fb:	050c      	movi.n	a5, 0
400e64fd:	020926        	beqi	a9, -1, 400e6503 <get_arg$isra$0+0x46f>
400e6500:	ff2606        	j	400e619c <get_arg$isra$0+0x108>
400e6503:	ff55c6        	j	400e625e <get_arg$isra$0+0x1ca>
400e6506:	250c      	movi.n	a5, 2
400e6508:	020926        	beqi	a9, -1, 400e650e <get_arg$isra$0+0x47a>
400e650b:	ff2346        	j	400e619c <get_arg$isra$0+0x108>
400e650e:	ff3606        	j	400e61ea <get_arg$isra$0+0x156>
400e6511:	000000        	ill

400e6514 <__ssprint_r>:
400e6514:	006136        	entry	a1, 48
400e6517:	047d      	mov.n	a7, a4
400e6519:	2448      	l32i.n	a4, a4, 8
400e651b:	b48c      	beqz.n	a4, 400e652a <__ssprint_r+0x16>
400e651d:	0748      	l32i.n	a4, a7, 0
400e651f:	0149      	s32i.n	a4, a1, 0
400e6521:	040c      	movi.n	a4, 0
400e6523:	1149      	s32i.n	a4, a1, 4
400e6525:	046d      	mov.n	a6, a4
400e6527:	000586        	j	400e6541 <__ssprint_r+0x2d>
400e652a:	020c      	movi.n	a2, 0
400e652c:	1729      	s32i.n	a2, a7, 4
400e652e:	f01d      	retw.n
400e6530:	002142        	l32i	a4, a1, 0
400e6533:	002442        	l32i	a4, a4, 0
400e6536:	016142        	s32i	a4, a1, 4
400e6539:	0148      	l32i.n	a4, a1, 0
400e653b:	1468      	l32i.n	a6, a4, 4
400e653d:	448b      	addi.n	a4, a4, 8
400e653f:	0149      	s32i.n	a4, a1, 0
400e6541:	feb616        	beqz	a6, 400e6530 <__ssprint_r+0x1c>
400e6544:	2398      	l32i.n	a9, a3, 8
400e6546:	02b697        	bgeu	a6, a9, 400e654c <__ssprint_r+0x38>
400e6549:	0022c6        	j	400e65d8 <__ssprint_r+0xc4>
400e654c:	0613a2        	l16ui	a10, a3, 12
400e654f:	80a442        	movi	a4, 0x480
400e6552:	028a47        	bany	a10, a4, 400e6558 <__ssprint_r+0x44>
400e6555:	001f06        	j	400e65d5 <__ssprint_r+0xc1>
400e6558:	0358      	l32i.n	a5, a3, 0
400e655a:	43b8      	l32i.n	a11, a3, 16
400e655c:	c045b0        	sub	a4, a5, a11
400e655f:	5358      	l32i.n	a5, a3, 20
400e6561:	905550        	addx2	a5, a5, a5
400e6564:	059f50        	extui	a9, a5, 31, 1
400e6567:	595a      	add.n	a5, a9, a5
400e6569:	941b      	addi.n	a9, a4, 1
400e656b:	215150        	srai	a5, a5, 1
400e656e:	996a      	add.n	a9, a9, a6
400e6570:	735590        	maxu	a5, a5, a9
400e6573:	316aa7        	bbci	a10, 10, 400e65a8 <__ssprint_r+0x94>
400e6576:	05bd      	mov.n	a11, a5
400e6578:	02ad      	mov.n	a10, a2
400e657a:	9e30e5        	call8	40084888 <_malloc_r>
400e657d:	1acc      	bnez.n	a10, 400e6582 <__ssprint_r+0x6e>
400e657f:	000e46        	j	400e65bc <__ssprint_r+0xa8>
400e6582:	43b8      	l32i.n	a11, a3, 16
400e6584:	20c440        	or	a12, a4, a4
400e6587:	0261a2        	s32i	a10, a1, 8
400e658a:	a6c181        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400e658d:	0008e0        	callx8	a8
400e6590:	0613b2        	l16ui	a11, a3, 12
400e6593:	7faba2        	movi	a10, 0xfffffb7f
400e6596:	10bba0        	and	a11, a11, a10
400e6599:	80a0a2        	movi	a10, 128
400e659c:	20aba0        	or	a10, a11, a10
400e659f:	0653a2        	s16i	a10, a3, 12
400e65a2:	2198      	l32i.n	a9, a1, 8
400e65a4:	000786        	j	400e65c6 <__ssprint_r+0xb2>
400e65a7:	c55000        	extui	a5, a0, 16, 13
400e65aa:	a22020        	muluh	a2, a0, a2
400e65ad:	2f2520        	f64cmph	a2, a5, a2, 2
400e65b0:	9e          	.byte 0x9e
400e65b1:	0a9d      	mov.n	a9, a10
400e65b3:	facc      	bnez.n	a10, 400e65c6 <__ssprint_r+0xb2>
400e65b5:	43b8      	l32i.n	a11, a3, 16
400e65b7:	02ad      	mov.n	a10, a2
400e65b9:	9e2da5        	call8	40084894 <_free_r>
400e65bc:	c40c      	movi.n	a4, 12
400e65be:	0249      	s32i.n	a4, a2, 0
400e65c0:	001006        	j	400e6604 <__ssprint_r+0xf0>
400e65c3:	000000        	ill
400e65c6:	4399      	s32i.n	a9, a3, 16
400e65c8:	5359      	s32i.n	a5, a3, 20
400e65ca:	994a      	add.n	a9, a9, a4
400e65cc:	c05540        	sub	a5, a5, a4
400e65cf:	0399      	s32i.n	a9, a3, 0
400e65d1:	2359      	s32i.n	a5, a3, 8
400e65d3:	069d      	mov.n	a9, a6
400e65d5:	01b697        	bgeu	a6, a9, 400e65da <__ssprint_r+0xc6>
400e65d8:	069d      	mov.n	a9, a6
400e65da:	11b8      	l32i.n	a11, a1, 4
400e65dc:	03a8      	l32i.n	a10, a3, 0
400e65de:	09cd      	mov.n	a12, a9
400e65e0:	2199      	s32i.n	a9, a1, 8
400e65e2:	a6ad81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400e65e5:	0008e0        	callx8	a8
400e65e8:	2198      	l32i.n	a9, a1, 8
400e65ea:	2348      	l32i.n	a4, a3, 8
400e65ec:	03c8      	l32i.n	a12, a3, 0
400e65ee:	c04490        	sub	a4, a4, a9
400e65f1:	2349      	s32i.n	a4, a3, 8
400e65f3:	2748      	l32i.n	a4, a7, 8
400e65f5:	cc9a      	add.n	a12, a12, a9
400e65f7:	03c9      	s32i.n	a12, a3, 0
400e65f9:	c08460        	sub	a8, a4, a6
400e65fc:	2789      	s32i.n	a8, a7, 8
400e65fe:	f2e856        	bnez	a8, 400e6530 <__ssprint_r+0x1c>
400e6601:	ffc946        	j	400e652a <__ssprint_r+0x16>
400e6604:	061342        	l16ui	a4, a3, 12
400e6607:	024c      	movi.n	a2, 64
400e6609:	202420        	or	a2, a4, a2
400e660c:	065322        	s16i	a2, a3, 12
400e660f:	020c      	movi.n	a2, 0
400e6611:	2729      	s32i.n	a2, a7, 8
400e6613:	1729      	s32i.n	a2, a7, 4
400e6615:	f27c      	movi.n	a2, -1
400e6617:	f01d      	retw.n
400e6619:	000000        	ill

400e661c <_svfiprintf_r>:
400e661c:	058136        	entry	a1, 0x2c0
400e661f:	9b6132        	s32i	a3, a1, 0x26c
400e6622:	9b2182        	l32i	a8, a1, 0x26c
400e6625:	9c6122        	s32i	a2, a1, 0x270
400e6628:	061822        	l16ui	a2, a8, 12
400e662b:	996142        	s32i	a4, a1, 0x264
400e662e:	946152        	s32i	a5, a1, 0x250
400e6631:	956162        	s32i	a6, a1, 0x254
400e6634:	966172        	s32i	a7, a1, 0x258
400e6637:	10c132        	addi	a3, a1, 16
400e663a:	2a6277        	bbci	a2, 7, 400e6668 <_svfiprintf_r+0x4c>
400e663d:	042822        	l32i	a2, a8, 16
400e6640:	024256        	bnez	a2, 400e6668 <_svfiprintf_r+0x4c>
400e6643:	9c21a2        	l32i	a10, a1, 0x270
400e6646:	40a0b2        	movi	a11, 64
400e6649:	9e23e5        	call8	40084888 <_malloc_r>
400e664c:	9b2192        	l32i	a9, a1, 0x26c
400e664f:	09a9      	s32i.n	a10, a9, 0
400e6651:	49a9      	s32i.n	a10, a9, 16
400e6653:	aacc      	bnez.n	a10, 400e6661 <_svfiprintf_r+0x45>
400e6655:	9c2182        	l32i	a8, a1, 0x270
400e6658:	c20c      	movi.n	a2, 12
400e665a:	0829      	s32i.n	a2, a8, 0
400e665c:	f27c      	movi.n	a2, -1
400e665e:	f01d      	retw.n
400e6660:	219200        	srai	a9, a0, 2
400e6663:	4c9b      	addi.n	a4, a12, 9
400e6665:	592902        	l32i	a0, a9, 0x164
400e6668:	10c1a2        	addi	a10, a1, 16
400e666b:	e4a132        	movi	a3, 0x1e4
400e666e:	3a3a      	add.n	a3, a10, a3
400e6670:	8d6132        	s32i	a3, a1, 0x234
400e6673:	976132        	s32i	a3, a1, 0x25c
400e6676:	90a132        	movi	a3, 0x190
400e6679:	331a      	add.n	a3, a3, a1
400e667b:	020c      	movi.n	a2, 0
400e667d:	f47c      	movi.n	a4, -1
400e667f:	64c332        	addi	a3, a3, 100
400e6682:	8f6122        	s32i	a2, a1, 0x23c
400e6685:	8e6122        	s32i	a2, a1, 0x238
400e6688:	906122        	s32i	a2, a1, 0x240
400e668b:	446142        	s32i	a4, a1, 0x110
400e668e:	916122        	s32i	a2, a1, 0x244
400e6691:	9f6122        	s32i	a2, a1, 0x27c
400e6694:	a06122        	s32i	a2, a1, 0x280
400e6697:	a16122        	s32i	a2, a1, 0x284
400e669a:	a26122        	s32i	a2, a1, 0x288
400e669d:	9e6122        	s32i	a2, a1, 0x278
400e66a0:	a36132        	s32i	a3, a1, 0x28c
400e66a3:	992172        	l32i	a7, a1, 0x264
400e66a6:	000046        	j	400e66ab <_svfiprintf_r+0x8f>
400e66a9:	771b      	addi.n	a7, a7, 1
400e66ab:	000732        	l8ui	a3, a7, 0
400e66ae:	438c      	beqz.n	a3, 400e66b6 <_svfiprintf_r+0x9a>
400e66b0:	dbc332        	addi	a3, a3, -37
400e66b3:	ff2356        	bnez	a3, 400e66a9 <_svfiprintf_r+0x8d>
400e66b6:	992142        	l32i	a4, a1, 0x264
400e66b9:	c03740        	sub	a3, a7, a4
400e66bc:	055316        	beqz	a3, 400e6715 <_svfiprintf_r+0xf9>
400e66bf:	972152        	l32i	a5, a1, 0x25c
400e66c2:	10c162        	addi	a6, a1, 16
400e66c5:	0549      	s32i.n	a4, a5, 0
400e66c7:	8f2142        	l32i	a4, a1, 0x23c
400e66ca:	1539      	s32i.n	a3, a5, 4
400e66cc:	443a      	add.n	a4, a4, a3
400e66ce:	8f6142        	s32i	a4, a1, 0x23c
400e66d1:	8e2142        	l32i	a4, a1, 0x238
400e66d4:	02d652        	addmi	a5, a6, 0x200
400e66d7:	441b      	addi.n	a4, a4, 1
400e66d9:	8e6142        	s32i	a4, a1, 0x238
400e66dc:	0c84e6        	bgei	a4, 8, 400e66ec <_svfiprintf_r+0xd0>
400e66df:	972182        	l32i	a8, a1, 0x25c
400e66e2:	888b      	addi.n	a8, a8, 8
400e66e4:	976182        	s32i	a8, a1, 0x25c
400e66e7:	000886        	j	400e670d <_svfiprintf_r+0xf1>
400e66ea:	c20000        	quou	a0, a0, a0
400e66ed:	9224a2        	l32i	a10, a4, 0x248
400e66f0:	b210c1        	l32r	a12, 400d2f30 <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)+0x1c>
400e66f3:	a29b21        	l32r	a2, 400cf160 <_rtc_text_end+0xf160>
400e66f6:	ca9c21        	l32r	a2, 400d9168 <uart_start_select+0x80>
400e66f9:	a5c9      	s32i.n	a12, a5, 40
400e66fb:	8cffe1        	l32r	a14, 400c9af8 <_rtc_text_end+0x9af8>
400e66fe:	461a      	add.n	a4, a6, a1
400e6700:	07b8      	l32i.n	a11, a7, 0
400e6702:	e4a142        	movi	a4, 0x1e4
400e6705:	10c152        	addi	a5, a1, 16
400e6708:	554a      	add.n	a5, a5, a4
400e670a:	976152        	s32i	a5, a1, 0x25c
400e670d:	9e2162        	l32i	a6, a1, 0x278
400e6710:	663a      	add.n	a6, a6, a3
400e6712:	9e6162        	s32i	a6, a1, 0x278
400e6715:	000732        	l8ui	a3, a7, 0
400e6718:	13cc      	bnez.n	a3, 400e671d <_svfiprintf_r+0x101>
400e671a:	07ac06        	j	400e85ce <_svfiprintf_r+0x1fb2>
400e671d:	10c182        	addi	a8, a1, 16
400e6720:	f97c      	movi.n	a9, -1
400e6722:	02d832        	addmi	a3, a8, 0x200
400e6725:	050c      	movi.n	a5, 0
400e6727:	9a6192        	s32i	a9, a1, 0x268
400e672a:	34a282        	movi	a8, 0x234
400e672d:	10c192        	addi	a9, a1, 16
400e6730:	3a4352        	s8i	a5, a3, 58
400e6733:	998a      	add.n	a9, a9, a8
400e6735:	050c      	movi.n	a5, 0
400e6737:	471b      	addi.n	a4, a7, 1
400e6739:	023d      	mov.n	a3, a2
400e673b:	9d6152        	s32i	a5, a1, 0x274
400e673e:	056d      	mov.n	a6, a5
400e6740:	986192        	s32i	a9, a1, 0x260
400e6743:	000286        	j	400e6751 <_svfiprintf_r+0x135>
400e6746:	000000        	ill
400e6749:	996142        	s32i	a4, a1, 0x264
400e674c:	060c      	movi.n	a6, 0
400e674e:	992142        	l32i	a4, a1, 0x264
400e6751:	841b      	addi.n	a8, a4, 1
400e6753:	996182        	s32i	a8, a1, 0x264
400e6756:	a849f1        	l32r	a15, 400d087c <_flash_cache_start+0x864>
400e6759:	000482        	l8ui	a8, a4, 0
400e675c:	9a0c      	movi.n	a10, 9
400e675e:	4c2c      	movi.n	a12, 36
400e6760:	ad2c      	movi.n	a13, 42
400e6762:	fe7c      	movi.n	a14, -1
400e6764:	0000c6        	j	400e676b <_svfiprintf_r+0x14f>
400e6767:	614200        	lsi	f0, a2, 0x184
400e676a:	429d      	lsi	f9, a2, 8
400e676c:	e0c8      	l32i.n	a12, a0, 56
400e676e:	a95c      	movi.n	a9, 90
400e6770:	02b947        	bgeu	a9, a4, 400e6776 <_svfiprintf_r+0x15a>
400e6773:	069a86        	j	400e81e1 <_svfiprintf_r+0x1bc5>
400e6776:	a044f0        	addx4	a4, a4, a15
400e6779:	0448      	l32i.n	a4, a4, 0
400e677b:	0004a0        	jx	a4
400e677e:	a83d41        	l32r	a4, 400d0874 <_flash_cache_start+0x85c>
400e6781:	052e86        	j	400e7c3f <_svfiprintf_r+0x1623>
400e6784:	9c21a2        	l32i	a10, a1, 0x270
400e6787:	a7ff81        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400e678a:	0008e0        	callx8	a8
400e678d:	1aa8      	l32i.n	a10, a10, 4
400e678f:	a261a2        	s32i	a10, a1, 0x288
400e6792:	a63b81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e6795:	0008e0        	callx8	a8
400e6798:	a161a2        	s32i	a10, a1, 0x284
400e679b:	9c21a2        	l32i	a10, a1, 0x270
400e679e:	a7f981        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400e67a1:	0008e0        	callx8	a8
400e67a4:	2aa8      	l32i.n	a10, a10, 8
400e67a6:	a12182        	l32i	a8, a1, 0x284
400e67a9:	a061a2        	s32i	a10, a1, 0x280
400e67ac:	f9e816        	beqz	a8, 400e674e <_svfiprintf_r+0x132>
400e67af:	f9ba16        	beqz	a10, 400e674e <_svfiprintf_r+0x132>
400e67b2:	000a42        	l8ui	a4, a10, 0
400e67b5:	f95416        	beqz	a4, 400e674e <_svfiprintf_r+0x132>
400e67b8:	00a442        	movi	a4, 0x400
400e67bb:	00b1c6        	j	400e6a86 <_svfiprintf_r+0x46a>
400e67be:	10c192        	addi	a9, a1, 16
400e67c1:	02d942        	addmi	a4, a9, 0x200
400e67c4:	3a0482        	l8ui	a8, a4, 58
400e67c7:	f83856        	bnez	a8, 400e674e <_svfiprintf_r+0x132>
400e67ca:	082c      	movi.n	a8, 32
400e67cc:	0047c6        	j	400e68ef <_svfiprintf_r+0x2d3>
400e67cf:	140c      	movi.n	a4, 1
400e67d1:	00ac46        	j	400e6a86 <_svfiprintf_r+0x46a>
400e67d4:	992142        	l32i	a4, a1, 0x264
400e67d7:	990c      	movi.n	a9, 9
400e67d9:	000482        	l8ui	a8, a4, 0
400e67dc:	d0c842        	addi	a4, a8, -48
400e67df:	02b947        	bgeu	a9, a4, 400e67e5 <_svfiprintf_r+0x1c9>
400e67e2:	0784c6        	j	400e85f9 <_svfiprintf_r+0x1fdd>
400e67e5:	9921a2        	l32i	a10, a1, 0x264
400e67e8:	4a1b      	addi.n	a4, a10, 1
400e67ea:	0a0c      	movi.n	a10, 0
400e67ec:	d0c882        	addi	a8, a8, -48
400e67ef:	a0aaa0        	addx4	a10, a10, a10
400e67f2:	441b      	addi.n	a4, a4, 1
400e67f4:	90aa80        	addx2	a10, a10, a8
400e67f7:	840b      	addi.n	a8, a4, -1
400e67f9:	000882        	l8ui	a8, a8, 0
400e67fc:	d0c8b2        	addi	a11, a8, -48
400e67ff:	e9b9b7        	bgeu	a9, a11, 400e67ec <_svfiprintf_r+0x1d0>
400e6802:	492c      	movi.n	a9, 36
400e6804:	021897        	beq	a8, a9, 400e680a <_svfiprintf_r+0x1ee>
400e6807:	ffd046        	j	400e674c <_svfiprintf_r+0x130>
400e680a:	082c      	movi.n	a8, 32
400e680c:	02a8a7        	bge	a8, a10, 400e6812 <_svfiprintf_r+0x1f6>
400e680f:	077446        	j	400e85e4 <_svfiprintf_r+0x1fc8>
400e6812:	912182        	l32i	a8, a1, 0x244
400e6815:	aa0b      	addi.n	a10, a10, -1
400e6817:	08aa87        	bge	a10, a8, 400e6823 <_svfiprintf_r+0x207>
400e681a:	10c1b2        	addi	a11, a1, 16
400e681d:	b0aab0        	addx8	a10, a10, a11
400e6820:	000706        	j	400e6840 <_svfiprintf_r+0x224>
400e6823:	10c192        	addi	a9, a1, 16
400e6826:	30a282        	movi	a8, 0x230
400e6829:	898a      	add.n	a8, a9, a8
400e682b:	40a2c2        	movi	a12, 0x240
400e682e:	9821d2        	l32i	a13, a1, 0x260
400e6831:	0189      	s32i.n	a8, a1, 0
400e6833:	01d9f2        	addmi	a15, a9, 0x100
400e6836:	09ed      	mov.n	a14, a9
400e6838:	c9ca      	add.n	a12, a9, a12
400e683a:	20b770        	or	a11, a7, a7
400e683d:	ff8565        	call8	400e6094 <get_arg$isra$0>
400e6840:	0aa8      	l32i.n	a10, a10, 0
400e6842:	038d      	mov.n	a8, a3
400e6844:	9d61a2        	s32i	a10, a1, 0x274
400e6847:	996142        	s32i	a4, a1, 0x264
400e684a:	0020c6        	j	400e68d1 <_svfiprintf_r+0x2b5>
400e684d:	10c1a2        	addi	a10, a1, 16
400e6850:	b032a0        	addx8	a3, a2, a10
400e6853:	001d46        	j	400e68cc <_svfiprintf_r+0x2b0>
400e6856:	f31c      	movi.n	a3, 31
400e6858:	442347        	blt	a3, a4, 400e68a0 <_svfiprintf_r+0x284>
400e685b:	341b      	addi.n	a3, a4, 1
400e685d:	10c1b2        	addi	a11, a1, 16
400e6860:	916132        	s32i	a3, a1, 0x244
400e6863:	02db32        	addmi	a3, a11, 0x200
400e6866:	122392        	l32i	a9, a3, 72
400e6869:	8a1c      	movi.n	a10, 24
400e686b:	b94b      	addi.n	a11, a9, 4
400e686d:	1263b2        	s32i	a11, a3, 72
400e6870:	052ab7        	blt	a10, a11, 400e6879 <_svfiprintf_r+0x25d>
400e6873:	112392        	l32i	a9, a3, 68
400e6876:	000286        	j	400e6884 <_svfiprintf_r+0x268>
400e6879:	042a97        	blt	a10, a9, 400e6881 <_svfiprintf_r+0x265>
400e687c:	492c      	movi.n	a9, 36
400e687e:	126392        	s32i	a9, a3, 72
400e6881:	942192        	l32i	a9, a1, 0x250
400e6884:	962132        	l32i	a3, a1, 0x258
400e6887:	393a      	add.n	a3, a9, a3
400e6889:	fcc332        	addi	a3, a3, -4
400e688c:	0338      	l32i.n	a3, a3, 0
400e688e:	9d6132        	s32i	a3, a1, 0x274
400e6891:	9d2192        	l32i	a9, a1, 0x274
400e6894:	10c132        	addi	a3, a1, 16
400e6897:	b04430        	addx8	a4, a4, a3
400e689a:	0499      	s32i.n	a9, a4, 0
400e689c:	000c46        	j	400e68d1 <_svfiprintf_r+0x2b5>
400e689f:	c1a200        	mul16u	a10, a2, a0
400e68a2:	da3210        	ufloat.s	f3, a2, 1
400e68a5:	234202        	s8i	a0, a2, 35
400e68a8:	891c12        	l16ui	a1, a12, 0x112
400e68ab:	a44b      	addi.n	a10, a4, 4
400e68ad:	1263a2        	s32i	a10, a3, 72
400e68b0:	0529a7        	blt	a9, a10, 400e68b9 <_svfiprintf_r+0x29d>
400e68b3:	112342        	l32i	a4, a3, 68
400e68b6:	000286        	j	400e68c4 <_svfiprintf_r+0x2a8>
400e68b9:	042947        	blt	a9, a4, 400e68c1 <_svfiprintf_r+0x2a5>
400e68bc:	442c      	movi.n	a4, 36
400e68be:	126342        	s32i	a4, a3, 72
400e68c1:	942142        	l32i	a4, a1, 0x250
400e68c4:	962132        	l32i	a3, a1, 0x258
400e68c7:	343a      	add.n	a3, a4, a3
400e68c9:	fcc332        	addi	a3, a3, -4
400e68cc:	0338      	l32i.n	a3, a3, 0
400e68ce:	9d6132        	s32i	a3, a1, 0x274
400e68d1:	9d2142        	l32i	a4, a1, 0x274
400e68d4:	083d      	mov.n	a3, a8
400e68d6:	e744d6        	bgez	a4, 400e674e <_svfiprintf_r+0x132>
400e68d9:	604040        	neg	a4, a4
400e68dc:	9d6142        	s32i	a4, a1, 0x274
400e68df:	440c      	movi.n	a4, 4
400e68e1:	006846        	j	400e6a86 <_svfiprintf_r+0x46a>
400e68e4:	000000        	ill
400e68e7:	10c192        	addi	a9, a1, 16
400e68ea:	b82c      	movi.n	a8, 43
400e68ec:	02d942        	addmi	a4, a9, 0x200
400e68ef:	3a4482        	s8i	a8, a4, 58
400e68f2:	ff9606        	j	400e674e <_svfiprintf_r+0x132>
400e68f5:	992182        	l32i	a8, a1, 0x264
400e68f8:	481b      	addi.n	a4, a8, 1
400e68fa:	000882        	l8ui	a8, a8, 0
400e68fd:	0418d7        	beq	a8, a13, 400e6905 <_svfiprintf_r+0x2e9>
400e6900:	090c      	movi.n	a9, 0
400e6902:	004646        	j	400e6a1f <_svfiprintf_r+0x403>
400e6905:	992192        	l32i	a9, a1, 0x264
400e6908:	010982        	l8ui	a8, a9, 1
400e690b:	990c      	movi.n	a9, 9
400e690d:	d0c8a2        	addi	a10, a8, -48
400e6910:	02b9a7        	bgeu	a9, a10, 400e6916 <_svfiprintf_r+0x2fa>
400e6913:	073c46        	j	400e8608 <_svfiprintf_r+0x1fec>
400e6916:	9921a2        	l32i	a10, a1, 0x264
400e6919:	aa2b      	addi.n	a10, a10, 2
400e691b:	9961a2        	s32i	a10, a1, 0x264
400e691e:	0a0c      	movi.n	a10, 0
400e6920:	d0c882        	addi	a8, a8, -48
400e6923:	a0aaa0        	addx4	a10, a10, a10
400e6926:	90aa80        	addx2	a10, a10, a8
400e6929:	992182        	l32i	a8, a1, 0x264
400e692c:	881b      	addi.n	a8, a8, 1
400e692e:	996182        	s32i	a8, a1, 0x264
400e6931:	880b      	addi.n	a8, a8, -1
400e6933:	000882        	l8ui	a8, a8, 0
400e6936:	d0c8b2        	addi	a11, a8, -48
400e6939:	e3b9b7        	bgeu	a9, a11, 400e6920 <_svfiprintf_r+0x304>
400e693c:	492c      	movi.n	a9, 36
400e693e:	021897        	beq	a8, a9, 400e6944 <_svfiprintf_r+0x328>
400e6941:	ff8106        	j	400e6749 <_svfiprintf_r+0x12d>
400e6944:	042c      	movi.n	a4, 32
400e6946:	02a4a7        	bge	a4, a10, 400e694c <_svfiprintf_r+0x330>
400e6949:	0725c6        	j	400e85e4 <_svfiprintf_r+0x1fc8>
400e694c:	912142        	l32i	a4, a1, 0x244
400e694f:	aa0b      	addi.n	a10, a10, -1
400e6951:	08aa47        	bge	a10, a4, 400e695d <_svfiprintf_r+0x341>
400e6954:	10c192        	addi	a9, a1, 16
400e6957:	b0aa90        	addx8	a10, a10, a9
400e695a:	0006c6        	j	400e6979 <_svfiprintf_r+0x35d>
400e695d:	10c1b2        	addi	a11, a1, 16
400e6960:	30a242        	movi	a4, 0x230
400e6963:	4b4a      	add.n	a4, a11, a4
400e6965:	40a2c2        	movi	a12, 0x240
400e6968:	9821d2        	l32i	a13, a1, 0x260
400e696b:	01dbf2        	addmi	a15, a11, 0x100
400e696e:	0bed      	mov.n	a14, a11
400e6970:	cbca      	add.n	a12, a11, a12
400e6972:	0149      	s32i.n	a4, a1, 0
400e6974:	07bd      	mov.n	a11, a7
400e6976:	ff71e5        	call8	400e6094 <get_arg$isra$0>
400e6979:	0aa8      	l32i.n	a10, a10, 0
400e697b:	9a61a2        	s32i	a10, a1, 0x268
400e697e:	002106        	j	400e6a06 <_svfiprintf_r+0x3ea>
400e6981:	10c182        	addi	a8, a1, 16
400e6984:	b03280        	addx8	a3, a2, a8
400e6987:	001c46        	j	400e69fc <_svfiprintf_r+0x3e0>
400e698a:	f31c      	movi.n	a3, 31
400e698c:	402387        	blt	a3, a8, 400e69d0 <_svfiprintf_r+0x3b4>
400e698f:	381b      	addi.n	a3, a8, 1
400e6991:	10c1a2        	addi	a10, a1, 16
400e6994:	916132        	s32i	a3, a1, 0x244
400e6997:	02da32        	addmi	a3, a10, 0x200
400e699a:	1223a2        	l32i	a10, a3, 72
400e699d:	8b1c      	movi.n	a11, 24
400e699f:	ca4b      	addi.n	a12, a10, 4
400e69a1:	1263c2        	s32i	a12, a3, 72
400e69a4:	052bc7        	blt	a11, a12, 400e69ad <_svfiprintf_r+0x391>
400e69a7:	1123a2        	l32i	a10, a3, 68
400e69aa:	000286        	j	400e69b8 <_svfiprintf_r+0x39c>
400e69ad:	042ba7        	blt	a11, a10, 400e69b5 <_svfiprintf_r+0x399>
400e69b0:	4a2c      	movi.n	a10, 36
400e69b2:	1263a2        	s32i	a10, a3, 72
400e69b5:	9421a2        	l32i	a10, a1, 0x250
400e69b8:	962132        	l32i	a3, a1, 0x258
400e69bb:	10c1b2        	addi	a11, a1, 16
400e69be:	3a3a      	add.n	a3, a10, a3
400e69c0:	fcc332        	addi	a3, a3, -4
400e69c3:	0338      	l32i.n	a3, a3, 0
400e69c5:	b088b0        	addx8	a8, a8, a11
400e69c8:	9a6132        	s32i	a3, a1, 0x268
400e69cb:	0839      	s32i.n	a3, a8, 0
400e69cd:	000c06        	j	400e6a01 <_svfiprintf_r+0x3e5>
400e69d0:	10c182        	addi	a8, a1, 16
400e69d3:	02d832        	addmi	a3, a8, 0x200
400e69d6:	122382        	l32i	a8, a3, 72
400e69d9:	8a1c      	movi.n	a10, 24
400e69db:	b84b      	addi.n	a11, a8, 4
400e69dd:	1263b2        	s32i	a11, a3, 72
400e69e0:	052ab7        	blt	a10, a11, 400e69e9 <_svfiprintf_r+0x3cd>
400e69e3:	112382        	l32i	a8, a3, 68
400e69e6:	000286        	j	400e69f4 <_svfiprintf_r+0x3d8>
400e69e9:	042a87        	blt	a10, a8, 400e69f1 <_svfiprintf_r+0x3d5>
400e69ec:	482c      	movi.n	a8, 36
400e69ee:	126382        	s32i	a8, a3, 72
400e69f1:	942182        	l32i	a8, a1, 0x250
400e69f4:	962132        	l32i	a3, a1, 0x258
400e69f7:	383a      	add.n	a3, a8, a3
400e69f9:	fcc332        	addi	a3, a3, -4
400e69fc:	0338      	l32i.n	a3, a3, 0
400e69fe:	9a6132        	s32i	a3, a1, 0x268
400e6a01:	996142        	s32i	a4, a1, 0x264
400e6a04:	093d      	mov.n	a3, a9
400e6a06:	9a2192        	l32i	a9, a1, 0x268
400e6a09:	f47c      	movi.n	a4, -1
400e6a0b:	539940        	max	a9, a9, a4
400e6a0e:	9a6192        	s32i	a9, a1, 0x268
400e6a11:	ff4e46        	j	400e674e <_svfiprintf_r+0x132>
400e6a14:	a09990        	addx4	a9, a9, a9
400e6a17:	000482        	l8ui	a8, a4, 0
400e6a1a:	9099b0        	addx2	a9, a9, a11
400e6a1d:	441b      	addi.n	a4, a4, 1
400e6a1f:	996142        	s32i	a4, a1, 0x264
400e6a22:	d0c8b2        	addi	a11, a8, -48
400e6a25:	ebbab7        	bgeu	a10, a11, 400e6a14 <_svfiprintf_r+0x3f8>
400e6a28:	5399e0        	max	a9, a9, a14
400e6a2b:	9a6192        	s32i	a9, a1, 0x268
400e6a2e:	9d2142        	l32i	a4, a1, 0x274
400e6a31:	ff4cc6        	j	400e6768 <_svfiprintf_r+0x14c>
400e6a34:	80a042        	movi	a4, 128
400e6a37:	0012c6        	j	400e6a86 <_svfiprintf_r+0x46a>
400e6a3a:	040c      	movi.n	a4, 0
400e6a3c:	d0c882        	addi	a8, a8, -48
400e6a3f:	a04440        	addx4	a4, a4, a4
400e6a42:	904480        	addx2	a4, a4, a8
400e6a45:	992182        	l32i	a8, a1, 0x264
400e6a48:	881b      	addi.n	a8, a8, 1
400e6a4a:	996182        	s32i	a8, a1, 0x264
400e6a4d:	880b      	addi.n	a8, a8, -1
400e6a4f:	000882        	l8ui	a8, a8, 0
400e6a52:	d0c892        	addi	a9, a8, -48
400e6a55:	e3ba97        	bgeu	a10, a9, 400e6a3c <_svfiprintf_r+0x420>
400e6a58:	0218c7        	beq	a8, a12, 400e6a5e <_svfiprintf_r+0x442>
400e6a5b:	ff4246        	j	400e6768 <_svfiprintf_r+0x14c>
400e6a5e:	022c      	movi.n	a2, 32
400e6a60:	02a247        	bge	a2, a4, 400e6a66 <_svfiprintf_r+0x44a>
400e6a63:	06df46        	j	400e85e4 <_svfiprintf_r+0x1fc8>
400e6a66:	240b      	addi.n	a2, a4, -1
400e6a68:	160c      	movi.n	a6, 1
400e6a6a:	ff3806        	j	400e674e <_svfiprintf_r+0x132>
400e6a6d:	992192        	l32i	a9, a1, 0x264
400e6a70:	68a042        	movi	a4, 104
400e6a73:	000982        	l8ui	a8, a9, 0
400e6a76:	0a9847        	bne	a8, a4, 400e6a84 <_svfiprintf_r+0x468>
400e6a79:	991b      	addi.n	a9, a9, 1
400e6a7b:	996192        	s32i	a9, a1, 0x264
400e6a7e:	00a242        	movi	a4, 0x200
400e6a81:	000046        	j	400e6a86 <_svfiprintf_r+0x46a>
400e6a84:	044c      	movi.n	a4, 64
400e6a86:	205540        	or	a5, a5, a4
400e6a89:	ff3046        	j	400e674e <_svfiprintf_r+0x132>
400e6a8c:	214200        	srai	a4, a0, 2
400e6a8f:	8299      	s32i.n	a9, a2, 32
400e6a91:	420004        	lsi	f0, a0, 0x108
400e6a94:	476ca0        	lsi	f10, a12, 0x11c
400e6a97:	0a98      	l32i.n	a9, a10, 0
400e6a99:	992182        	l32i	a8, a1, 0x264
400e6a9c:	881b      	addi.n	a8, a8, 1
400e6a9e:	996182        	s32i	a8, a1, 0x264
400e6aa1:	000106        	j	400e6aa9 <_svfiprintf_r+0x48d>
400e6aa4:	041c      	movi.n	a4, 16
400e6aa6:	fff706        	j	400e6a86 <_svfiprintf_r+0x46a>
400e6aa9:	042c      	movi.n	a4, 32
400e6aab:	fff5c6        	j	400e6a86 <_svfiprintf_r+0x46a>
400e6aae:	420000        	xorb	b0, b0, b0
400e6ab1:	bc9121        	l32r	a2, 400d5cf8 <get_available_int+0x74>
400e6ab4:	a24766        	bnei	a7, 4, 400e6a5a <_svfiprintf_r+0x43e>
400e6ab7:	920b      	addi.n	a9, a2, -1
400e6ab9:	9010c1        	l32r	a12, 400caafc <_rtc_text_end+0xaafc>
400e6abc:	22b022        	l32ai	a2, a0, 136
400e6abf:	860002        	l8ui	a0, a0, 134
400e6ac2:	0008      	l32i.n	a0, a0, 0
400e6ac4:	10c1a2        	addi	a10, a1, 16
400e6ac7:	30a242        	movi	a4, 0x230
400e6aca:	4a4a      	add.n	a4, a10, a4
400e6acc:	34a2d2        	movi	a13, 0x234
400e6acf:	40a2c2        	movi	a12, 0x240
400e6ad2:	01daf2        	addmi	a15, a10, 0x100
400e6ad5:	0aed      	mov.n	a14, a10
400e6ad7:	dada      	add.n	a13, a10, a13
400e6ad9:	caca      	add.n	a12, a10, a12
400e6adb:	0149      	s32i.n	a4, a1, 0
400e6add:	02ad      	mov.n	a10, a2
400e6adf:	07bd      	mov.n	a11, a7
400e6ae1:	ff5b25        	call8	400e6094 <get_arg$isra$0>
400e6ae4:	000a22        	l8ui	a2, a10, 0
400e6ae7:	986132        	s32i	a3, a1, 0x260
400e6aea:	002146        	j	400e6b73 <_svfiprintf_r+0x557>
400e6aed:	631b      	addi.n	a6, a3, 1
400e6aef:	10c182        	addi	a8, a1, 16
400e6af2:	986162        	s32i	a6, a1, 0x260
400e6af5:	b02280        	addx8	a2, a2, a8
400e6af8:	742347        	blt	a3, a4, 400e6b70 <_svfiprintf_r+0x554>
400e6afb:	f21c      	movi.n	a2, 31
400e6afd:	432247        	blt	a2, a4, 400e6b44 <_svfiprintf_r+0x528>
400e6b00:	241b      	addi.n	a2, a4, 1
400e6b02:	10c192        	addi	a9, a1, 16
400e6b05:	916122        	s32i	a2, a1, 0x244
400e6b08:	02d922        	addmi	a2, a9, 0x200
400e6b0b:	122232        	l32i	a3, a2, 72
400e6b0e:	861c      	movi.n	a6, 24
400e6b10:	834b      	addi.n	a8, a3, 4
400e6b12:	126282        	s32i	a8, a2, 72
400e6b15:	072687        	blt	a6, a8, 400e6b20 <_svfiprintf_r+0x504>
400e6b18:	112232        	l32i	a3, a2, 68
400e6b1b:	000306        	j	400e6b2b <_svfiprintf_r+0x50f>
400e6b1e:	370000        	lsi	f0, a0, 220
400e6b21:	2c0426        	beqi	a4, -1, 400e6b51 <_svfiprintf_r+0x535>
400e6b24:	623243        	lsi	f4, a2, 0x188
400e6b27:	213212        	lsi	f1, a2, 132
400e6b2a:	212294        	lsi	f9, a2, 132
400e6b2d:	c1a296        	bltz	a2, 400e674b <_svfiprintf_r+0x12f>
400e6b30:	232a10        	sext	a2, a10, 8
400e6b33:	fcc222        	addi	a2, a2, -4
400e6b36:	0228      	l32i.n	a2, a2, 0
400e6b38:	b044a0        	addx8	a4, a4, a10
400e6b3b:	0429      	s32i.n	a2, a4, 0
400e6b3d:	742020        	extui	a2, a2, 0, 8
400e6b40:	000bc6        	j	400e6b73 <_svfiprintf_r+0x557>
400e6b43:	c1b200        	mul16u	a11, a2, a0
400e6b46:	db2210        	movt.s	f2, f2, b1
400e6b49:	223202        	lsi	f0, a2, 136
400e6b4c:	841c12        	l16ui	a1, a12, 0x108
400e6b4f:	634b      	addi.n	a6, a3, 4
400e6b51:	126262        	s32i	a6, a2, 72
400e6b54:	052467        	blt	a4, a6, 400e6b5d <_svfiprintf_r+0x541>
400e6b57:	112232        	l32i	a3, a2, 68
400e6b5a:	000286        	j	400e6b68 <_svfiprintf_r+0x54c>
400e6b5d:	042437        	blt	a4, a3, 400e6b65 <_svfiprintf_r+0x549>
400e6b60:	432c      	movi.n	a3, 36
400e6b62:	126232        	s32i	a3, a2, 72
400e6b65:	942132        	l32i	a3, a1, 0x250
400e6b68:	962122        	l32i	a2, a1, 0x258
400e6b6b:	232a      	add.n	a2, a3, a2
400e6b6d:	fcc222        	addi	a2, a2, -4
400e6b70:	000222        	l8ui	a2, a2, 0
400e6b73:	10c142        	addi	a4, a1, 16
400e6b76:	01d432        	addmi	a3, a4, 0x100
400e6b79:	804322        	s8i	a2, a3, 128
400e6b7c:	160c      	movi.n	a6, 1
400e6b7e:	02d422        	addmi	a2, a4, 0x200
400e6b81:	030c      	movi.n	a3, 0
400e6b83:	90a182        	movi	a8, 0x190
400e6b86:	3a4232        	s8i	a3, a2, 58
400e6b89:	9a6162        	s32i	a6, a1, 0x268
400e6b8c:	020c      	movi.n	a2, 0
400e6b8e:	718a      	add.n	a7, a1, a8
400e6b90:	059c06        	j	400e8204 <_svfiprintf_r+0x1be8>
400e6b93:	041c00        	extui	a1, a0, 12, 1
400e6b96:	205540        	or	a5, a5, a4
400e6b99:	02e557        	bbsi	a5, 5, 400e6b9f <_svfiprintf_r+0x583>
400e6b9c:	003606        	j	400e6c78 <_svfiprintf_r+0x65c>
400e6b9f:	912182        	l32i	a8, a1, 0x244
400e6ba2:	86bc      	beqz.n	a6, 400e6bde <_svfiprintf_r+0x5c2>
400e6ba4:	0ca287        	bge	a2, a8, 400e6bb4 <_svfiprintf_r+0x598>
400e6ba7:	10c192        	addi	a9, a1, 16
400e6baa:	b02290        	addx8	a2, a2, a9
400e6bad:	02e8      	l32i.n	a14, a2, 0
400e6baf:	1248      	l32i.n	a4, a2, 4
400e6bb1:	0008c6        	j	400e6bd8 <_svfiprintf_r+0x5bc>
400e6bb4:	10c1a2        	addi	a10, a1, 16
400e6bb7:	30a242        	movi	a4, 0x230
400e6bba:	4a4a      	add.n	a4, a10, a4
400e6bbc:	34a2d2        	movi	a13, 0x234
400e6bbf:	40a2c2        	movi	a12, 0x240
400e6bc2:	0aed      	mov.n	a14, a10
400e6bc4:	0149      	s32i.n	a4, a1, 0
400e6bc6:	01daf2        	addmi	a15, a10, 0x100
400e6bc9:	dada      	add.n	a13, a10, a13
400e6bcb:	caca      	add.n	a12, a10, a12
400e6bcd:	07bd      	mov.n	a11, a7
400e6bcf:	02ad      	mov.n	a10, a2
400e6bd1:	ff4c25        	call8	400e6094 <get_arg$isra$0>
400e6bd4:	0ae8      	l32i.n	a14, a10, 0
400e6bd6:	1a48      	l32i.n	a4, a10, 4
400e6bd8:	986132        	s32i	a3, a1, 0x260
400e6bdb:	00bc86        	j	400e6ed1 <_svfiprintf_r+0x8b5>
400e6bde:	431b      	addi.n	a4, a3, 1
400e6be0:	10c162        	addi	a6, a1, 16
400e6be3:	986142        	s32i	a4, a1, 0x260
400e6be6:	b02260        	addx8	a2, a2, a6
400e6be9:	02a387        	bge	a3, a8, 400e6bef <_svfiprintf_r+0x5d3>
400e6bec:	002006        	j	400e6c70 <_svfiprintf_r+0x654>
400e6bef:	f21c      	movi.n	a2, 31
400e6bf1:	482287        	blt	a2, a8, 400e6c3d <_svfiprintf_r+0x621>
400e6bf4:	281b      	addi.n	a2, a8, 1
400e6bf6:	10c192        	addi	a9, a1, 16
400e6bf9:	916122        	s32i	a2, a1, 0x244
400e6bfc:	02d922        	addmi	a2, a9, 0x200
400e6bff:	122232        	l32i	a3, a2, 72
400e6c02:	437b      	addi.n	a4, a3, 7
400e6c04:	837c      	movi.n	a3, -8
400e6c06:	103430        	and	a3, a4, a3
400e6c09:	638b      	addi.n	a6, a3, 8
400e6c0b:	126262        	s32i	a6, a2, 72
400e6c0e:	841c      	movi.n	a4, 24
400e6c10:	052467        	blt	a4, a6, 400e6c19 <_svfiprintf_r+0x5fd>
400e6c13:	112232        	l32i	a3, a2, 68
400e6c16:	000286        	j	400e6c24 <_svfiprintf_r+0x608>
400e6c19:	042437        	blt	a4, a3, 400e6c21 <_svfiprintf_r+0x605>
400e6c1c:	832c      	movi.n	a3, 40
400e6c1e:	126232        	s32i	a3, a2, 72
400e6c21:	942132        	l32i	a3, a1, 0x250
400e6c24:	962122        	l32i	a2, a1, 0x258
400e6c27:	10c1a2        	addi	a10, a1, 16
400e6c2a:	232a      	add.n	a2, a3, a2
400e6c2c:	f8c222        	addi	a2, a2, -8
400e6c2f:	02e8      	l32i.n	a14, a2, 0
400e6c31:	1248      	l32i.n	a4, a2, 4
400e6c33:	b028a0        	addx8	a2, a8, a10
400e6c36:	02e9      	s32i.n	a14, a2, 0
400e6c38:	1249      	s32i.n	a4, a2, 4
400e6c3a:	00a4c6        	j	400e6ed1 <_svfiprintf_r+0x8b5>
400e6c3d:	10c1b2        	addi	a11, a1, 16
400e6c40:	02db22        	addmi	a2, a11, 0x200
400e6c43:	122232        	l32i	a3, a2, 72
400e6c46:	437b      	addi.n	a4, a3, 7
400e6c48:	837c      	movi.n	a3, -8
400e6c4a:	103430        	and	a3, a4, a3
400e6c4d:	638b      	addi.n	a6, a3, 8
400e6c4f:	126262        	s32i	a6, a2, 72
400e6c52:	841c      	movi.n	a4, 24
400e6c54:	052467        	blt	a4, a6, 400e6c5d <_svfiprintf_r+0x641>
400e6c57:	112232        	l32i	a3, a2, 68
400e6c5a:	000286        	j	400e6c68 <_svfiprintf_r+0x64c>
400e6c5d:	042437        	blt	a4, a3, 400e6c65 <_svfiprintf_r+0x649>
400e6c60:	832c      	movi.n	a3, 40
400e6c62:	126232        	s32i	a3, a2, 72
400e6c65:	942132        	l32i	a3, a1, 0x250
400e6c68:	962122        	l32i	a2, a1, 0x258
400e6c6b:	232a      	add.n	a2, a3, a2
400e6c6d:	f8c222        	addi	a2, a2, -8
400e6c70:	02e8      	l32i.n	a14, a2, 0
400e6c72:	1248      	l32i.n	a4, a2, 4
400e6c74:	009646        	j	400e6ed1 <_svfiprintf_r+0x8b5>
400e6c77:	214200        	srai	a4, a0, 2
400e6c7a:	654791        	l32r	a9, 400c0198 <_rtc_text_end+0x198>
400e6c7d:	64c602        	addi	a0, a6, 100
400e6c80:	e56700        	extui	a6, a0, 23, 15
400e6c83:	300602        	l8ui	a0, a6, 48
400e6c86:	36bc00        	lsi	f0, a12, 216
400e6c89:	0ba247        	bge	a2, a4, 400e6c98 <_svfiprintf_r+0x67c>
400e6c8c:	10c142        	addi	a4, a1, 16
400e6c8f:	b02240        	addx8	a2, a2, a4
400e6c92:	0092e2        	l16si	a14, a2, 0
400e6c95:	006b86        	j	400e6e47 <_svfiprintf_r+0x82b>
400e6c98:	10c162        	addi	a6, a1, 16
400e6c9b:	30a242        	movi	a4, 0x230
400e6c9e:	464a      	add.n	a4, a6, a4
400e6ca0:	34a2d2        	movi	a13, 0x234
400e6ca3:	40a2c2        	movi	a12, 0x240
400e6ca6:	06ed      	mov.n	a14, a6
400e6ca8:	0149      	s32i.n	a4, a1, 0
400e6caa:	01d6f2        	addmi	a15, a6, 0x100
400e6cad:	d6da      	add.n	a13, a6, a13
400e6caf:	c6ca      	add.n	a12, a6, a12
400e6cb1:	07bd      	mov.n	a11, a7
400e6cb3:	02ad      	mov.n	a10, a2
400e6cb5:	ff3de5        	call8	400e6094 <get_arg$isra$0>
400e6cb8:	009ae2        	l16si	a14, a10, 0
400e6cbb:	006206        	j	400e6e47 <_svfiprintf_r+0x82b>
400e6cbe:	831b      	addi.n	a8, a3, 1
400e6cc0:	10c192        	addi	a9, a1, 16
400e6cc3:	986182        	s32i	a8, a1, 0x260
400e6cc6:	b02290        	addx8	a2, a2, a9
400e6cc9:	732347        	blt	a3, a4, 400e6d40 <_svfiprintf_r+0x724>
400e6ccc:	f21c      	movi.n	a2, 31
400e6cce:	422247        	blt	a2, a4, 400e6d14 <_svfiprintf_r+0x6f8>
400e6cd1:	241b      	addi.n	a2, a4, 1
400e6cd3:	10c1a2        	addi	a10, a1, 16
400e6cd6:	916122        	s32i	a2, a1, 0x244
400e6cd9:	02da22        	addmi	a2, a10, 0x200
400e6cdc:	122232        	l32i	a3, a2, 72
400e6cdf:	861c      	movi.n	a6, 24
400e6ce1:	834b      	addi.n	a8, a3, 4
400e6ce3:	126282        	s32i	a8, a2, 72
400e6ce6:	062687        	blt	a6, a8, 400e6cf0 <_svfiprintf_r+0x6d4>
400e6ce9:	112232        	l32i	a3, a2, 68
400e6cec:	0002c6        	j	400e6cfb <_svfiprintf_r+0x6df>
400e6cef:	263700        	lsi	f0, a7, 152
400e6cf2:	432c04        	lsi	f0, a12, 0x10c
400e6cf5:	126232        	s32i	a3, a2, 72
400e6cf8:	942132        	l32i	a3, a1, 0x250
400e6cfb:	962122        	l32i	a2, a1, 0x258
400e6cfe:	10c1b2        	addi	a11, a1, 16
400e6d01:	232a      	add.n	a2, a3, a2
400e6d03:	fcc222        	addi	a2, a2, -4
400e6d06:	02e8      	l32i.n	a14, a2, 0
400e6d08:	b044b0        	addx8	a4, a4, a11
400e6d0b:	04e9      	s32i.n	a14, a4, 0
400e6d0d:	23ee80        	sext	a14, a14, 15
400e6d10:	006e86        	j	400e6ece <_svfiprintf_r+0x8b2>
400e6d13:	c13200        	mul16u	a3, a2, a0
400e6d16:	d32210        	movt	a2, a2, b1
400e6d19:	223202        	lsi	f0, a2, 136
400e6d1c:	841c12        	l16ui	a1, a12, 0x108
400e6d1f:	634b      	addi.n	a6, a3, 4
400e6d21:	126262        	s32i	a6, a2, 72
400e6d24:	052467        	blt	a4, a6, 400e6d2d <_svfiprintf_r+0x711>
400e6d27:	112232        	l32i	a3, a2, 68
400e6d2a:	000286        	j	400e6d38 <_svfiprintf_r+0x71c>
400e6d2d:	042437        	blt	a4, a3, 400e6d35 <_svfiprintf_r+0x719>
400e6d30:	432c      	movi.n	a3, 36
400e6d32:	126232        	s32i	a3, a2, 72
400e6d35:	942132        	l32i	a3, a1, 0x250
400e6d38:	962122        	l32i	a2, a1, 0x258
400e6d3b:	232a      	add.n	a2, a3, a2
400e6d3d:	fcc222        	addi	a2, a2, -4
400e6d40:	0092e2        	l16si	a14, a2, 0
400e6d43:	0061c6        	j	400e6ece <_svfiprintf_r+0x8b2>
400e6d46:	970000        	lsi	f0, a0, 0x25c
400e6d49:	8602e5        	call8	4006cd78 <__udivmoddi4+0x8184>
400e6d4c:	bc0031        	l32r	a3, 400d5d4c <get_available_int+0xc8>
400e6d4f:	a24776        	lsi	f7, a7, 0x288
400e6d52:	420c      	movi.n	a2, 4
400e6d54:	4010c1        	l32r	a12, 400b6d94 <_iram_end+0x29240>
400e6d57:	e2b022        	l32ai	a2, a0, 0x388
400e6d5a:	c60002        	l8ui	a0, a0, 198
400e6d5d:	0008      	l32i.n	a0, a0, 0
400e6d5f:	c16200        	mul16u	a6, a2, a0
400e6d62:	a24210        	muluh	a4, a2, a1
400e6d65:	464a30        	lsi	f3, a10, 0x118
400e6d68:	34a2d2        	movi	a13, 0x234
400e6d6b:	40a2c2        	movi	a12, 0x240
400e6d6e:	06ed      	mov.n	a14, a6
400e6d70:	0149      	s32i.n	a4, a1, 0
400e6d72:	01d6f2        	addmi	a15, a6, 0x100
400e6d75:	d6da      	add.n	a13, a6, a13
400e6d77:	c6ca      	add.n	a12, a6, a12
400e6d79:	07bd      	mov.n	a11, a7
400e6d7b:	02ad      	mov.n	a10, a2
400e6d7d:	ff3165        	call8	400e6094 <get_arg$isra$0>
400e6d80:	000ae2        	l8ui	a14, a10, 0
400e6d83:	986132        	s32i	a3, a1, 0x260
400e6d86:	002146        	j	400e6e0f <_svfiprintf_r+0x7f3>
400e6d89:	831b      	addi.n	a8, a3, 1
400e6d8b:	10c192        	addi	a9, a1, 16
400e6d8e:	986182        	s32i	a8, a1, 0x260
400e6d91:	b02290        	addx8	a2, a2, a9
400e6d94:	742347        	blt	a3, a4, 400e6e0c <_svfiprintf_r+0x7f0>
400e6d97:	f21c      	movi.n	a2, 31
400e6d99:	432247        	blt	a2, a4, 400e6de0 <_svfiprintf_r+0x7c4>
400e6d9c:	241b      	addi.n	a2, a4, 1
400e6d9e:	10c1a2        	addi	a10, a1, 16
400e6da1:	916122        	s32i	a2, a1, 0x244
400e6da4:	02da22        	addmi	a2, a10, 0x200
400e6da7:	122232        	l32i	a3, a2, 72
400e6daa:	861c      	movi.n	a6, 24
400e6dac:	834b      	addi.n	a8, a3, 4
400e6dae:	126282        	s32i	a8, a2, 72
400e6db1:	072687        	blt	a6, a8, 400e6dbc <_svfiprintf_r+0x7a0>
400e6db4:	112232        	l32i	a3, a2, 68
400e6db7:	000306        	j	400e6dc7 <_svfiprintf_r+0x7ab>
400e6dba:	370000        	lsi	f0, a0, 220
400e6dbd:	2c0426        	beqi	a4, -1, 400e6ded <_svfiprintf_r+0x7d1>
400e6dc0:	623243        	lsi	f4, a2, 0x188
400e6dc3:	213212        	lsi	f1, a2, 132
400e6dc6:	212294        	lsi	f9, a2, 132
400e6dc9:	c1b296        	bltz	a2, 400e69e8 <_svfiprintf_r+0x3cc>
400e6dcc:	232a10        	sext	a2, a10, 8
400e6dcf:	fcc222        	addi	a2, a2, -4
400e6dd2:	02e8      	l32i.n	a14, a2, 0
400e6dd4:	b044b0        	addx8	a4, a4, a11
400e6dd7:	04e9      	s32i.n	a14, a4, 0
400e6dd9:	74e0e0        	extui	a14, a14, 0, 8
400e6ddc:	000bc6        	j	400e6e0f <_svfiprintf_r+0x7f3>
400e6ddf:	c13200        	mul16u	a3, a2, a0
400e6de2:	d32210        	movt	a2, a2, b1
400e6de5:	223202        	lsi	f0, a2, 136
400e6de8:	841c12        	l16ui	a1, a12, 0x108
400e6deb:	634b      	addi.n	a6, a3, 4
400e6ded:	126262        	s32i	a6, a2, 72
400e6df0:	052467        	blt	a4, a6, 400e6df9 <_svfiprintf_r+0x7dd>
400e6df3:	112232        	l32i	a3, a2, 68
400e6df6:	000286        	j	400e6e04 <_svfiprintf_r+0x7e8>
400e6df9:	042437        	blt	a4, a3, 400e6e01 <_svfiprintf_r+0x7e5>
400e6dfc:	432c      	movi.n	a3, 36
400e6dfe:	126232        	s32i	a3, a2, 72
400e6e01:	942132        	l32i	a3, a1, 0x250
400e6e04:	962122        	l32i	a2, a1, 0x258
400e6e07:	232a      	add.n	a2, a3, a2
400e6e09:	fcc222        	addi	a2, a2, -4
400e6e0c:	0002e2        	l8ui	a14, a2, 0
400e6e0f:	23ee00        	sext	a14, a14, 7
400e6e12:	002e06        	j	400e6ece <_svfiprintf_r+0x8b2>
400e6e15:	46bc      	beqz.n	a6, 400e6e4d <_svfiprintf_r+0x831>
400e6e17:	0aa247        	bge	a2, a4, 400e6e25 <_svfiprintf_r+0x809>
400e6e1a:	10c142        	addi	a4, a1, 16
400e6e1d:	b02240        	addx8	a2, a2, a4
400e6e20:	02e8      	l32i.n	a14, a2, 0
400e6e22:	000846        	j	400e6e47 <_svfiprintf_r+0x82b>
400e6e25:	10c162        	addi	a6, a1, 16
400e6e28:	30a242        	movi	a4, 0x230
400e6e2b:	464a      	add.n	a4, a6, a4
400e6e2d:	34a2d2        	movi	a13, 0x234
400e6e30:	40a2c2        	movi	a12, 0x240
400e6e33:	06ed      	mov.n	a14, a6
400e6e35:	0149      	s32i.n	a4, a1, 0
400e6e37:	01d6f2        	addmi	a15, a6, 0x100
400e6e3a:	d6da      	add.n	a13, a6, a13
400e6e3c:	c6ca      	add.n	a12, a6, a12
400e6e3e:	07bd      	mov.n	a11, a7
400e6e40:	02ad      	mov.n	a10, a2
400e6e42:	ff2525        	call8	400e6094 <get_arg$isra$0>
400e6e45:	0ae8      	l32i.n	a14, a10, 0
400e6e47:	986132        	s32i	a3, a1, 0x260
400e6e4a:	002006        	j	400e6ece <_svfiprintf_r+0x8b2>
400e6e4d:	831b      	addi.n	a8, a3, 1
400e6e4f:	10c192        	addi	a9, a1, 16
400e6e52:	986182        	s32i	a8, a1, 0x260
400e6e55:	b02290        	addx8	a2, a2, a9
400e6e58:	702347        	blt	a3, a4, 400e6ecc <_svfiprintf_r+0x8b0>
400e6e5b:	f21c      	movi.n	a2, 31
400e6e5d:	3f2247        	blt	a2, a4, 400e6ea0 <_svfiprintf_r+0x884>
400e6e60:	241b      	addi.n	a2, a4, 1
400e6e62:	10c1a2        	addi	a10, a1, 16
400e6e65:	916122        	s32i	a2, a1, 0x244
400e6e68:	02da22        	addmi	a2, a10, 0x200
400e6e6b:	122232        	l32i	a3, a2, 72
400e6e6e:	861c      	movi.n	a6, 24
400e6e70:	834b      	addi.n	a8, a3, 4
400e6e72:	126282        	s32i	a8, a2, 72
400e6e75:	072687        	blt	a6, a8, 400e6e80 <_svfiprintf_r+0x864>
400e6e78:	112232        	l32i	a3, a2, 68
400e6e7b:	000306        	j	400e6e8b <_svfiprintf_r+0x86f>
400e6e7e:	370000        	lsi	f0, a0, 220
400e6e81:	2c0426        	beqi	a4, -1, 400e6eb1 <_svfiprintf_r+0x895>
400e6e84:	623243        	lsi	f4, a2, 0x188
400e6e87:	213212        	lsi	f1, a2, 132
400e6e8a:	212294        	lsi	f9, a2, 132
400e6e8d:	c1b296        	bltz	a2, 400e6aac <_svfiprintf_r+0x490>
400e6e90:	232a10        	sext	a2, a10, 8
400e6e93:	fcc222        	addi	a2, a2, -4
400e6e96:	02e8      	l32i.n	a14, a2, 0
400e6e98:	b044b0        	addx8	a4, a4, a11
400e6e9b:	04e9      	s32i.n	a14, a4, 0
400e6e9d:	000b46        	j	400e6ece <_svfiprintf_r+0x8b2>
400e6ea0:	10c132        	addi	a3, a1, 16
400e6ea3:	02d322        	addmi	a2, a3, 0x200
400e6ea6:	122232        	l32i	a3, a2, 72
400e6ea9:	841c      	movi.n	a4, 24
400e6eab:	634b      	addi.n	a6, a3, 4
400e6ead:	126262        	s32i	a6, a2, 72
400e6eb0:	052467        	blt	a4, a6, 400e6eb9 <_svfiprintf_r+0x89d>
400e6eb3:	112232        	l32i	a3, a2, 68
400e6eb6:	000286        	j	400e6ec4 <_svfiprintf_r+0x8a8>
400e6eb9:	042437        	blt	a4, a3, 400e6ec1 <_svfiprintf_r+0x8a5>
400e6ebc:	432c      	movi.n	a3, 36
400e6ebe:	126232        	s32i	a3, a2, 72
400e6ec1:	942132        	l32i	a3, a1, 0x250
400e6ec4:	962122        	l32i	a2, a1, 0x258
400e6ec7:	232a      	add.n	a2, a3, a2
400e6ec9:	fcc222        	addi	a2, a2, -4
400e6ecc:	02e8      	l32i.n	a14, a2, 0
400e6ece:	314fe0        	srai	a4, a14, 31
400e6ed1:	120c      	movi.n	a2, 1
400e6ed3:	002496        	bltz	a4, 400e6ed9 <_svfiprintf_r+0x8bd>
400e6ed6:	045e86        	j	400e8054 <_svfiprintf_r+0x1a38>
400e6ed9:	60e0e0        	neg	a14, a14
400e6edc:	030c      	movi.n	a3, 0
400e6ede:	9332e0        	movnez	a3, a2, a14
400e6ee1:	604040        	neg	a4, a4
400e6ee4:	10c182        	addi	a8, a1, 16
400e6ee7:	c04430        	sub	a4, a4, a3
400e6eea:	d62c      	movi.n	a6, 45
400e6eec:	02d832        	addmi	a3, a8, 0x200
400e6eef:	3a4362        	s8i	a6, a3, 58
400e6ef2:	045786        	j	400e8054 <_svfiprintf_r+0x1a38>
400e6ef5:	912142        	l32i	a4, a1, 0x244
400e6ef8:	02e557        	bbsi	a5, 5, 400e6efe <_svfiprintf_r+0x8e2>
400e6efb:	003046        	j	400e6fc0 <_svfiprintf_r+0x9a4>
400e6efe:	36bc      	beqz.n	a6, 400e6f35 <_svfiprintf_r+0x919>
400e6f00:	0aa247        	bge	a2, a4, 400e6f0e <_svfiprintf_r+0x8f2>
400e6f03:	10c192        	addi	a9, a1, 16
400e6f06:	b02290        	addx8	a2, a2, a9
400e6f09:	0228      	l32i.n	a2, a2, 0
400e6f0b:	000846        	j	400e6f30 <_svfiprintf_r+0x914>
400e6f0e:	10c1a2        	addi	a10, a1, 16
400e6f11:	30a242        	movi	a4, 0x230
400e6f14:	4a4a      	add.n	a4, a10, a4
400e6f16:	34a2d2        	movi	a13, 0x234
400e6f19:	40a2c2        	movi	a12, 0x240
400e6f1c:	01daf2        	addmi	a15, a10, 0x100
400e6f1f:	0aed      	mov.n	a14, a10
400e6f21:	dada      	add.n	a13, a10, a13
400e6f23:	caca      	add.n	a12, a10, a12
400e6f25:	0149      	s32i.n	a4, a1, 0
400e6f27:	02ad      	mov.n	a10, a2
400e6f29:	07bd      	mov.n	a11, a7
400e6f2b:	ff16a5        	call8	400e6094 <get_arg$isra$0>
400e6f2e:	0a28      	l32i.n	a2, a10, 0
400e6f30:	035d      	mov.n	a5, a3
400e6f32:	001f06        	j	400e6fb2 <_svfiprintf_r+0x996>
400e6f35:	10c1b2        	addi	a11, a1, 16
400e6f38:	531b      	addi.n	a5, a3, 1
400e6f3a:	b022b0        	addx8	a2, a2, a11
400e6f3d:	6f2347        	blt	a3, a4, 400e6fb0 <_svfiprintf_r+0x994>
400e6f40:	f21c      	movi.n	a2, 31
400e6f42:	3e2247        	blt	a2, a4, 400e6f84 <_svfiprintf_r+0x968>
400e6f45:	241b      	addi.n	a2, a4, 1
400e6f47:	10c132        	addi	a3, a1, 16
400e6f4a:	916122        	s32i	a2, a1, 0x244
400e6f4d:	02d322        	addmi	a2, a3, 0x200
400e6f50:	122232        	l32i	a3, a2, 72
400e6f53:	861c      	movi.n	a6, 24
400e6f55:	734b      	addi.n	a7, a3, 4
400e6f57:	126272        	s32i	a7, a2, 72
400e6f5a:	062677        	blt	a6, a7, 400e6f64 <_svfiprintf_r+0x948>
400e6f5d:	112232        	l32i	a3, a2, 68
400e6f60:	0002c6        	j	400e6f6f <_svfiprintf_r+0x953>
400e6f63:	263700        	lsi	f0, a7, 152
400e6f66:	432c04        	lsi	f0, a12, 0x10c
400e6f69:	126232        	s32i	a3, a2, 72
400e6f6c:	942132        	l32i	a3, a1, 0x250
400e6f6f:	962122        	l32i	a2, a1, 0x258
400e6f72:	10c162        	addi	a6, a1, 16
400e6f75:	232a      	add.n	a2, a3, a2
400e6f77:	fcc222        	addi	a2, a2, -4
400e6f7a:	0228      	l32i.n	a2, a2, 0
400e6f7c:	b03460        	addx8	a3, a4, a6
400e6f7f:	0329      	s32i.n	a2, a3, 0
400e6f81:	000b46        	j	400e6fb2 <_svfiprintf_r+0x996>
400e6f84:	10c182        	addi	a8, a1, 16
400e6f87:	02d822        	addmi	a2, a8, 0x200
400e6f8a:	122232        	l32i	a3, a2, 72
400e6f8d:	841c      	movi.n	a4, 24
400e6f8f:	634b      	addi.n	a6, a3, 4
400e6f91:	126262        	s32i	a6, a2, 72
400e6f94:	052467        	blt	a4, a6, 400e6f9d <_svfiprintf_r+0x981>
400e6f97:	112232        	l32i	a3, a2, 68
400e6f9a:	000286        	j	400e6fa8 <_svfiprintf_r+0x98c>
400e6f9d:	042437        	blt	a4, a3, 400e6fa5 <_svfiprintf_r+0x989>
400e6fa0:	432c      	movi.n	a3, 36
400e6fa2:	126232        	s32i	a3, a2, 72
400e6fa5:	942132        	l32i	a3, a1, 0x250
400e6fa8:	962122        	l32i	a2, a1, 0x258
400e6fab:	232a      	add.n	a2, a3, a2
400e6fad:	fcc222        	addi	a2, a2, -4
400e6fb0:	0228      	l32i.n	a2, a2, 0
400e6fb2:	9e2192        	l32i	a9, a1, 0x278
400e6fb5:	313f90        	srai	a3, a9, 31
400e6fb8:	0299      	s32i.n	a9, a2, 0
400e6fba:	1239      	s32i.n	a3, a2, 4
400e6fbc:	00c4c6        	j	400e72d3 <_svfiprintf_r+0xcb7>
400e6fbf:	e54700        	extui	a4, a0, 23, 15
400e6fc2:	304602        	s8i	a0, a6, 48
400e6fc5:	66bc00        	lsi	f0, a12, 0x198
400e6fc8:	0ca247        	bge	a2, a4, 400e6fd8 <_svfiprintf_r+0x9bc>
400e6fcb:	10c1a2        	addi	a10, a1, 16
400e6fce:	b022a0        	addx8	a2, a2, a10
400e6fd1:	0258      	l32i.n	a5, a2, 0
400e6fd3:	0008c6        	j	400e6ffa <_svfiprintf_r+0x9de>
400e6fd6:	b20000        	mulsh	a0, a0, a0
400e6fd9:	4210c1        	l32r	a12, 400b781c <_iram_end+0x29cc8>
400e6fdc:	4a30a2        	lsi	f10, a0, 0x128
400e6fdf:	d24b      	addi.n	a13, a2, 4
400e6fe1:	c234a2        	lsi	f10, a4, 0x308
400e6fe4:	f240a2        	s8i	a10, a0, 242
400e6fe7:	01db      	addi.n	a0, a1, 13
400e6fe9:	0bed      	mov.n	a14, a11
400e6feb:	dbda      	add.n	a13, a11, a13
400e6fed:	cbca      	add.n	a12, a11, a12
400e6fef:	0149      	s32i.n	a4, a1, 0
400e6ff1:	07bd      	mov.n	a11, a7
400e6ff3:	02ad      	mov.n	a10, a2
400e6ff5:	ff09e5        	call8	400e6094 <get_arg$isra$0>
400e6ff8:	0a58      	l32i.n	a5, a10, 0
400e6ffa:	036d      	mov.n	a6, a3
400e6ffc:	001fc6        	j	400e707f <_svfiprintf_r+0xa63>
400e6fff:	631b00        	minu	a1, a11, a0
400e7002:	08a347        	bge	a3, a4, 400e700e <_svfiprintf_r+0x9f2>
400e7005:	10c132        	addi	a3, a1, 16
400e7008:	b02230        	addx8	a2, a2, a3
400e700b:	001b86        	j	400e707d <_svfiprintf_r+0xa61>
400e700e:	f21c      	movi.n	a2, 31
400e7010:	3d2247        	blt	a2, a4, 400e7051 <_svfiprintf_r+0xa35>
400e7013:	241b      	addi.n	a2, a4, 1
400e7015:	10c152        	addi	a5, a1, 16
400e7018:	916122        	s32i	a2, a1, 0x244
400e701b:	02d522        	addmi	a2, a5, 0x200
400e701e:	122232        	l32i	a3, a2, 72
400e7021:	851c      	movi.n	a5, 24
400e7023:	734b      	addi.n	a7, a3, 4
400e7025:	126272        	s32i	a7, a2, 72
400e7028:	052577        	blt	a5, a7, 400e7031 <_svfiprintf_r+0xa15>
400e702b:	112232        	l32i	a3, a2, 68
400e702e:	000286        	j	400e703c <_svfiprintf_r+0xa20>
400e7031:	042537        	blt	a5, a3, 400e7039 <_svfiprintf_r+0xa1d>
400e7034:	432c      	movi.n	a3, 36
400e7036:	126232        	s32i	a3, a2, 72
400e7039:	942132        	l32i	a3, a1, 0x250
400e703c:	962122        	l32i	a2, a1, 0x258
400e703f:	10c182        	addi	a8, a1, 16
400e7042:	232a      	add.n	a2, a3, a2
400e7044:	fcc222        	addi	a2, a2, -4
400e7047:	0258      	l32i.n	a5, a2, 0
400e7049:	b02480        	addx8	a2, a4, a8
400e704c:	0259      	s32i.n	a5, a2, 0
400e704e:	000b46        	j	400e707f <_svfiprintf_r+0xa63>
400e7051:	10c192        	addi	a9, a1, 16
400e7054:	02d922        	addmi	a2, a9, 0x200
400e7057:	122232        	l32i	a3, a2, 72
400e705a:	841c      	movi.n	a4, 24
400e705c:	534b      	addi.n	a5, a3, 4
400e705e:	126252        	s32i	a5, a2, 72
400e7061:	052457        	blt	a4, a5, 400e706a <_svfiprintf_r+0xa4e>
400e7064:	112232        	l32i	a3, a2, 68
400e7067:	000286        	j	400e7075 <_svfiprintf_r+0xa59>
400e706a:	042437        	blt	a4, a3, 400e7072 <_svfiprintf_r+0xa56>
400e706d:	432c      	movi.n	a3, 36
400e706f:	126232        	s32i	a3, a2, 72
400e7072:	942132        	l32i	a3, a1, 0x250
400e7075:	962122        	l32i	a2, a1, 0x258
400e7078:	232a      	add.n	a2, a3, a2
400e707a:	fcc222        	addi	a2, a2, -4
400e707d:	0258      	l32i.n	a5, a2, 0
400e707f:	9e2122        	l32i	a2, a1, 0x278
400e7082:	0529      	s32i.n	a2, a5, 0
400e7084:	003106        	j	400e714c <_svfiprintf_r+0xb30>
400e7087:	e56700        	extui	a6, a0, 23, 15
400e708a:	308602        	lsi	f0, a6, 192
400e708d:	66bc00        	lsi	f0, a12, 0x198
400e7090:	0ca247        	bge	a2, a4, 400e70a0 <_svfiprintf_r+0xa84>
400e7093:	10c142        	addi	a4, a1, 16
400e7096:	b02240        	addx8	a2, a2, a4
400e7099:	0258      	l32i.n	a5, a2, 0
400e709b:	0008c6        	j	400e70c2 <_svfiprintf_r+0xaa6>
400e709e:	520000        	lsi	f0, a0, 0x148
400e70a1:	4210c1        	l32r	a12, 400b78e4 <_iram_end+0x29d90>
400e70a4:	4a30a2        	lsi	f10, a0, 0x128
400e70a7:	a2d245        	call0	40089dcc <prvProcessExpiredTimer+0x3c>
400e70aa:	a2c234        	lsi	f3, a2, 0x288
400e70ad:	d5f240        	extui	a15, a4, 18, 14
400e70b0:	05ed01        	l32r	a0, 400a8864 <_iram_end+0x1ad10>
400e70b3:	d5da      	add.n	a13, a5, a13
400e70b5:	c5ca      	add.n	a12, a5, a12
400e70b7:	0149      	s32i.n	a4, a1, 0
400e70b9:	07bd      	mov.n	a11, a7
400e70bb:	02ad      	mov.n	a10, a2
400e70bd:	fefd65        	call8	400e6094 <get_arg$isra$0>
400e70c0:	0a58      	l32i.n	a5, a10, 0
400e70c2:	036d      	mov.n	a6, a3
400e70c4:	001f86        	j	400e7146 <_svfiprintf_r+0xb2a>
400e70c7:	c18200        	mul16u	a8, a2, a0
400e70ca:	631b10        	minu	a1, a11, a1
400e70cd:	b02280        	addx8	a2, a2, a8
400e70d0:	702347        	blt	a3, a4, 400e7144 <_svfiprintf_r+0xb28>
400e70d3:	f21c      	movi.n	a2, 31
400e70d5:	3f2247        	blt	a2, a4, 400e7118 <_svfiprintf_r+0xafc>
400e70d8:	241b      	addi.n	a2, a4, 1
400e70da:	10c192        	addi	a9, a1, 16
400e70dd:	916122        	s32i	a2, a1, 0x244
400e70e0:	02d922        	addmi	a2, a9, 0x200
400e70e3:	122232        	l32i	a3, a2, 72
400e70e6:	851c      	movi.n	a5, 24
400e70e8:	734b      	addi.n	a7, a3, 4
400e70ea:	126272        	s32i	a7, a2, 72
400e70ed:	072577        	blt	a5, a7, 400e70f8 <_svfiprintf_r+0xadc>
400e70f0:	112232        	l32i	a3, a2, 68
400e70f3:	000306        	j	400e7103 <_svfiprintf_r+0xae7>
400e70f6:	370000        	lsi	f0, a0, 220
400e70f9:	2c0425        	call8	4011313c <_etext+0x26c6b>
400e70fc:	623243        	lsi	f4, a2, 0x188
400e70ff:	213212        	lsi	f1, a2, 132
400e7102:	212294        	lsi	f9, a2, 132
400e7105:	c1a296        	bltz	a2, 400e6d23 <_svfiprintf_r+0x707>
400e7108:	232a10        	sext	a2, a10, 8
400e710b:	fcc222        	addi	a2, a2, -4
400e710e:	0258      	l32i.n	a5, a2, 0
400e7110:	b024a0        	addx8	a2, a4, a10
400e7113:	0259      	s32i.n	a5, a2, 0
400e7115:	000b46        	j	400e7146 <_svfiprintf_r+0xb2a>
400e7118:	10c1b2        	addi	a11, a1, 16
400e711b:	02db22        	addmi	a2, a11, 0x200
400e711e:	122232        	l32i	a3, a2, 72
400e7121:	841c      	movi.n	a4, 24
400e7123:	534b      	addi.n	a5, a3, 4
400e7125:	126252        	s32i	a5, a2, 72
400e7128:	052457        	blt	a4, a5, 400e7131 <_svfiprintf_r+0xb15>
400e712b:	112232        	l32i	a3, a2, 68
400e712e:	000286        	j	400e713c <_svfiprintf_r+0xb20>
400e7131:	042437        	blt	a4, a3, 400e7139 <_svfiprintf_r+0xb1d>
400e7134:	432c      	movi.n	a3, 36
400e7136:	126232        	s32i	a3, a2, 72
400e7139:	942132        	l32i	a3, a1, 0x250
400e713c:	962122        	l32i	a2, a1, 0x258
400e713f:	232a      	add.n	a2, a3, a2
400e7141:	fcc222        	addi	a2, a2, -4
400e7144:	0258      	l32i.n	a5, a2, 0
400e7146:	9e2122        	l32i	a2, a1, 0x278
400e7149:	005522        	s16i	a2, a5, 0
400e714c:	062d      	mov.n	a2, a6
400e714e:	fd5446        	j	400e66a3 <_svfiprintf_r+0x87>
400e7151:	02e597        	bbsi	a5, 9, 400e7157 <_svfiprintf_r+0xb3b>
400e7154:	003006        	j	400e7218 <_svfiprintf_r+0xbfc>
400e7157:	56bc      	beqz.n	a6, 400e7190 <_svfiprintf_r+0xb74>
400e7159:	0ba247        	bge	a2, a4, 400e7168 <_svfiprintf_r+0xb4c>
400e715c:	10c142        	addi	a4, a1, 16
400e715f:	b02240        	addx8	a2, a2, a4
400e7162:	0228      	l32i.n	a2, a2, 0
400e7164:	000886        	j	400e718a <_svfiprintf_r+0xb6e>
400e7167:	c15200        	mul16u	a5, a2, a0
400e716a:	a24210        	muluh	a4, a2, a1
400e716d:	454a30        	extui	a4, a3, 26, 5
400e7170:	34a2d2        	movi	a13, 0x234
400e7173:	40a2c2        	movi	a12, 0x240
400e7176:	02ad      	mov.n	a10, a2
400e7178:	0149      	s32i.n	a4, a1, 0
400e717a:	01d5f2        	addmi	a15, a5, 0x100
400e717d:	05ed      	mov.n	a14, a5
400e717f:	d5da      	add.n	a13, a5, a13
400e7181:	c5ca      	add.n	a12, a5, a12
400e7183:	07bd      	mov.n	a11, a7
400e7185:	fef0e5        	call8	400e6094 <get_arg$isra$0>
400e7188:	0a28      	l32i.n	a2, a10, 0
400e718a:	035d      	mov.n	a5, a3
400e718c:	001f86        	j	400e720e <_svfiprintf_r+0xbf2>
400e718f:	c16200        	mul16u	a6, a2, a0
400e7192:	531b10        	max	a1, a11, a1
400e7195:	b02260        	addx8	a2, a2, a6
400e7198:	702347        	blt	a3, a4, 400e720c <_svfiprintf_r+0xbf0>
400e719b:	f21c      	movi.n	a2, 31
400e719d:	3f2247        	blt	a2, a4, 400e71e0 <_svfiprintf_r+0xbc4>
400e71a0:	241b      	addi.n	a2, a4, 1
400e71a2:	10c182        	addi	a8, a1, 16
400e71a5:	916122        	s32i	a2, a1, 0x244
400e71a8:	02d822        	addmi	a2, a8, 0x200
400e71ab:	122232        	l32i	a3, a2, 72
400e71ae:	861c      	movi.n	a6, 24
400e71b0:	734b      	addi.n	a7, a3, 4
400e71b2:	126272        	s32i	a7, a2, 72
400e71b5:	072677        	blt	a6, a7, 400e71c0 <_svfiprintf_r+0xba4>
400e71b8:	112232        	l32i	a3, a2, 68
400e71bb:	000306        	j	400e71cb <_svfiprintf_r+0xbaf>
400e71be:	370000        	lsi	f0, a0, 220
400e71c1:	2c0426        	beqi	a4, -1, 400e71f1 <_svfiprintf_r+0xbd5>
400e71c4:	623243        	lsi	f4, a2, 0x188
400e71c7:	213212        	lsi	f1, a2, 132
400e71ca:	212294        	lsi	f9, a2, 132
400e71cd:	c19296        	bltz	a2, 400e6dea <_svfiprintf_r+0x7ce>
400e71d0:	232a10        	sext	a2, a10, 8
400e71d3:	fcc222        	addi	a2, a2, -4
400e71d6:	0228      	l32i.n	a2, a2, 0
400e71d8:	b04490        	addx8	a4, a4, a9
400e71db:	0429      	s32i.n	a2, a4, 0
400e71dd:	000b46        	j	400e720e <_svfiprintf_r+0xbf2>
400e71e0:	10c1a2        	addi	a10, a1, 16
400e71e3:	02da22        	addmi	a2, a10, 0x200
400e71e6:	122232        	l32i	a3, a2, 72
400e71e9:	841c      	movi.n	a4, 24
400e71eb:	634b      	addi.n	a6, a3, 4
400e71ed:	126262        	s32i	a6, a2, 72
400e71f0:	052467        	blt	a4, a6, 400e71f9 <_svfiprintf_r+0xbdd>
400e71f3:	112232        	l32i	a3, a2, 68
400e71f6:	000286        	j	400e7204 <_svfiprintf_r+0xbe8>
400e71f9:	042437        	blt	a4, a3, 400e7201 <_svfiprintf_r+0xbe5>
400e71fc:	432c      	movi.n	a3, 36
400e71fe:	126232        	s32i	a3, a2, 72
400e7201:	942132        	l32i	a3, a1, 0x250
400e7204:	962122        	l32i	a2, a1, 0x258
400e7207:	232a      	add.n	a2, a3, a2
400e7209:	fcc222        	addi	a2, a2, -4
400e720c:	0228      	l32i.n	a2, a2, 0
400e720e:	9e2132        	l32i	a3, a1, 0x278
400e7211:	004232        	s8i	a3, a2, 0
400e7214:	002ec6        	j	400e72d3 <_svfiprintf_r+0xcb7>
400e7217:	46bc00        	lsi	f0, a12, 0x118
400e721a:	0aa247        	bge	a2, a4, 400e7228 <_svfiprintf_r+0xc0c>
400e721d:	10c142        	addi	a4, a1, 16
400e7220:	b02240        	addx8	a2, a2, a4
400e7223:	0228      	l32i.n	a2, a2, 0
400e7225:	000846        	j	400e724a <_svfiprintf_r+0xc2e>
400e7228:	10c152        	addi	a5, a1, 16
400e722b:	30a242        	movi	a4, 0x230
400e722e:	454a      	add.n	a4, a5, a4
400e7230:	34a2d2        	movi	a13, 0x234
400e7233:	40a2c2        	movi	a12, 0x240
400e7236:	02ad      	mov.n	a10, a2
400e7238:	0149      	s32i.n	a4, a1, 0
400e723a:	01d5f2        	addmi	a15, a5, 0x100
400e723d:	05ed      	mov.n	a14, a5
400e723f:	d5da      	add.n	a13, a5, a13
400e7241:	c5ca      	add.n	a12, a5, a12
400e7243:	07bd      	mov.n	a11, a7
400e7245:	fee4e5        	call8	400e6094 <get_arg$isra$0>
400e7248:	0a28      	l32i.n	a2, a10, 0
400e724a:	035d      	mov.n	a5, a3
400e724c:	001f86        	j	400e72ce <_svfiprintf_r+0xcb2>
400e724f:	c16200        	mul16u	a6, a2, a0
400e7252:	531b10        	max	a1, a11, a1
400e7255:	b02260        	addx8	a2, a2, a6
400e7258:	702347        	blt	a3, a4, 400e72cc <_svfiprintf_r+0xcb0>
400e725b:	f21c      	movi.n	a2, 31
400e725d:	3f2247        	blt	a2, a4, 400e72a0 <_svfiprintf_r+0xc84>
400e7260:	241b      	addi.n	a2, a4, 1
400e7262:	10c182        	addi	a8, a1, 16
400e7265:	916122        	s32i	a2, a1, 0x244
400e7268:	02d822        	addmi	a2, a8, 0x200
400e726b:	122232        	l32i	a3, a2, 72
400e726e:	861c      	movi.n	a6, 24
400e7270:	734b      	addi.n	a7, a3, 4
400e7272:	126272        	s32i	a7, a2, 72
400e7275:	072677        	blt	a6, a7, 400e7280 <_svfiprintf_r+0xc64>
400e7278:	112232        	l32i	a3, a2, 68
400e727b:	000306        	j	400e728b <_svfiprintf_r+0xc6f>
400e727e:	370000        	lsi	f0, a0, 220
400e7281:	2c0426        	beqi	a4, -1, 400e72b1 <_svfiprintf_r+0xc95>
400e7284:	623243        	lsi	f4, a2, 0x188
400e7287:	213212        	lsi	f1, a2, 132
400e728a:	212294        	lsi	f9, a2, 132
400e728d:	c19296        	bltz	a2, 400e6eaa <_svfiprintf_r+0x88e>
400e7290:	232a10        	sext	a2, a10, 8
400e7293:	fcc222        	addi	a2, a2, -4
400e7296:	0228      	l32i.n	a2, a2, 0
400e7298:	b04490        	addx8	a4, a4, a9
400e729b:	0429      	s32i.n	a2, a4, 0
400e729d:	000b46        	j	400e72ce <_svfiprintf_r+0xcb2>
400e72a0:	10c1a2        	addi	a10, a1, 16
400e72a3:	02da22        	addmi	a2, a10, 0x200
400e72a6:	122232        	l32i	a3, a2, 72
400e72a9:	841c      	movi.n	a4, 24
400e72ab:	634b      	addi.n	a6, a3, 4
400e72ad:	126262        	s32i	a6, a2, 72
400e72b0:	052467        	blt	a4, a6, 400e72b9 <_svfiprintf_r+0xc9d>
400e72b3:	112232        	l32i	a3, a2, 68
400e72b6:	000286        	j	400e72c4 <_svfiprintf_r+0xca8>
400e72b9:	042437        	blt	a4, a3, 400e72c1 <_svfiprintf_r+0xca5>
400e72bc:	432c      	movi.n	a3, 36
400e72be:	126232        	s32i	a3, a2, 72
400e72c1:	942132        	l32i	a3, a1, 0x250
400e72c4:	962122        	l32i	a2, a1, 0x258
400e72c7:	232a      	add.n	a2, a3, a2
400e72c9:	fcc222        	addi	a2, a2, -4
400e72cc:	0228      	l32i.n	a2, a2, 0
400e72ce:	9e2132        	l32i	a3, a1, 0x278
400e72d1:	0239      	s32i.n	a3, a2, 0
400e72d3:	052d      	mov.n	a2, a5
400e72d5:	fcf286        	j	400e66a3 <_svfiprintf_r+0x87>
400e72d8:	041c      	movi.n	a4, 16
400e72da:	205540        	or	a5, a5, a4
400e72dd:	02e557        	bbsi	a5, 5, 400e72e3 <_svfiprintf_r+0xcc7>
400e72e0:	003486        	j	400e73b6 <_svfiprintf_r+0xd9a>
400e72e3:	912182        	l32i	a8, a1, 0x244
400e72e6:	66bc      	beqz.n	a6, 400e7320 <_svfiprintf_r+0xd04>
400e72e8:	0ca287        	bge	a2, a8, 400e72f8 <_svfiprintf_r+0xcdc>
400e72eb:	10c142        	addi	a4, a1, 16
400e72ee:	b02240        	addx8	a2, a2, a4
400e72f1:	02e8      	l32i.n	a14, a2, 0
400e72f3:	1248      	l32i.n	a4, a2, 4
400e72f5:	00e306        	j	400e7685 <_svfiprintf_r+0x1069>
400e72f8:	10c162        	addi	a6, a1, 16
400e72fb:	30a242        	movi	a4, 0x230
400e72fe:	464a      	add.n	a4, a6, a4
400e7300:	34a2d2        	movi	a13, 0x234
400e7303:	40a2c2        	movi	a12, 0x240
400e7306:	0149      	s32i.n	a4, a1, 0
400e7308:	06ed      	mov.n	a14, a6
400e730a:	01d6f2        	addmi	a15, a6, 0x100
400e730d:	d6da      	add.n	a13, a6, a13
400e730f:	c6ca      	add.n	a12, a6, a12
400e7311:	07bd      	mov.n	a11, a7
400e7313:	02ad      	mov.n	a10, a2
400e7315:	fed7e5        	call8	400e6094 <get_arg$isra$0>
400e7318:	0ae8      	l32i.n	a14, a10, 0
400e731a:	1a48      	l32i.n	a4, a10, 4
400e731c:	00d946        	j	400e7685 <_svfiprintf_r+0x1069>
400e731f:	631b00        	minu	a1, a11, a0
400e7322:	08a387        	bge	a3, a8, 400e732e <_svfiprintf_r+0xd12>
400e7325:	10c182        	addi	a8, a1, 16
400e7328:	b02280        	addx8	a2, a2, a8
400e732b:	002006        	j	400e73af <_svfiprintf_r+0xd93>
400e732e:	f21c      	movi.n	a2, 31
400e7330:	482287        	blt	a2, a8, 400e737c <_svfiprintf_r+0xd60>
400e7333:	10c192        	addi	a9, a1, 16
400e7336:	281b      	addi.n	a2, a8, 1
400e7338:	02d932        	addmi	a3, a9, 0x200
400e733b:	916122        	s32i	a2, a1, 0x244
400e733e:	122322        	l32i	a2, a3, 72
400e7341:	427b      	addi.n	a4, a2, 7
400e7343:	827c      	movi.n	a2, -8
400e7345:	102420        	and	a2, a4, a2
400e7348:	728b      	addi.n	a7, a2, 8
400e734a:	126372        	s32i	a7, a3, 72
400e734d:	841c      	movi.n	a4, 24
400e734f:	052477        	blt	a4, a7, 400e7358 <_svfiprintf_r+0xd3c>
400e7352:	112332        	l32i	a3, a3, 68
400e7355:	000286        	j	400e7363 <_svfiprintf_r+0xd47>
400e7358:	042427        	blt	a4, a2, 400e7360 <_svfiprintf_r+0xd44>
400e735b:	822c      	movi.n	a2, 40
400e735d:	126322        	s32i	a2, a3, 72
400e7360:	942132        	l32i	a3, a1, 0x250
400e7363:	962122        	l32i	a2, a1, 0x258
400e7366:	10c1a2        	addi	a10, a1, 16
400e7369:	232a      	add.n	a2, a3, a2
400e736b:	f8c222        	addi	a2, a2, -8
400e736e:	02e8      	l32i.n	a14, a2, 0
400e7370:	1248      	l32i.n	a4, a2, 4
400e7372:	b028a0        	addx8	a2, a8, a10
400e7375:	02e9      	s32i.n	a14, a2, 0
400e7377:	1249      	s32i.n	a4, a2, 4
400e7379:	00c186        	j	400e7683 <_svfiprintf_r+0x1067>
400e737c:	10c1b2        	addi	a11, a1, 16
400e737f:	02db22        	addmi	a2, a11, 0x200
400e7382:	122232        	l32i	a3, a2, 72
400e7385:	437b      	addi.n	a4, a3, 7
400e7387:	837c      	movi.n	a3, -8
400e7389:	103430        	and	a3, a4, a3
400e738c:	738b      	addi.n	a7, a3, 8
400e738e:	126272        	s32i	a7, a2, 72
400e7391:	841c      	movi.n	a4, 24
400e7393:	052477        	blt	a4, a7, 400e739c <_svfiprintf_r+0xd80>
400e7396:	112232        	l32i	a3, a2, 68
400e7399:	000286        	j	400e73a7 <_svfiprintf_r+0xd8b>
400e739c:	042437        	blt	a4, a3, 400e73a4 <_svfiprintf_r+0xd88>
400e739f:	832c      	movi.n	a3, 40
400e73a1:	126232        	s32i	a3, a2, 72
400e73a4:	942132        	l32i	a3, a1, 0x250
400e73a7:	962122        	l32i	a2, a1, 0x258
400e73aa:	232a      	add.n	a2, a3, a2
400e73ac:	f8c222        	addi	a2, a2, -8
400e73af:	02e8      	l32i.n	a14, a2, 0
400e73b1:	1248      	l32i.n	a4, a2, 4
400e73b3:	00b306        	j	400e7683 <_svfiprintf_r+0x1067>
400e73b6:	091c      	movi.n	a9, 16
400e73b8:	109590        	and	a9, a5, a9
400e73bb:	05d916        	beqz	a9, 400e741c <_svfiprintf_r+0xe00>
400e73be:	912142        	l32i	a4, a1, 0x244
400e73c1:	768c      	beqz.n	a6, 400e73cc <_svfiprintf_r+0xdb0>
400e73c3:	022247        	blt	a2, a4, 400e73c9 <_svfiprintf_r+0xdad>
400e73c6:	008386        	j	400e75d8 <_svfiprintf_r+0xfbc>
400e73c9:	007f86        	j	400e75cb <_svfiprintf_r+0xfaf>
400e73cc:	631b      	addi.n	a6, a3, 1
400e73ce:	02a347        	bge	a3, a4, 400e73d4 <_svfiprintf_r+0xdb8>
400e73d1:	008c06        	j	400e7605 <_svfiprintf_r+0xfe9>
400e73d4:	f21c      	movi.n	a2, 31
400e73d6:	02a247        	bge	a2, a4, 400e73dc <_svfiprintf_r+0xdc0>
400e73d9:	009d06        	j	400e7651 <_svfiprintf_r+0x1035>
400e73dc:	241b      	addi.n	a2, a4, 1
400e73de:	10c192        	addi	a9, a1, 16
400e73e1:	916122        	s32i	a2, a1, 0x244
400e73e4:	02d922        	addmi	a2, a9, 0x200
400e73e7:	122232        	l32i	a3, a2, 72
400e73ea:	871c      	movi.n	a7, 24
400e73ec:	834b      	addi.n	a8, a3, 4
400e73ee:	126282        	s32i	a8, a2, 72
400e73f1:	072787        	blt	a7, a8, 400e73fc <_svfiprintf_r+0xde0>
400e73f4:	112232        	l32i	a3, a2, 68
400e73f7:	000306        	j	400e7407 <_svfiprintf_r+0xdeb>
400e73fa:	370000        	lsi	f0, a0, 220
400e73fd:	2c0427        	bnone	a4, a2, 400e742d <_svfiprintf_r+0xe11>
400e7400:	623243        	lsi	f4, a2, 0x188
400e7403:	213212        	lsi	f1, a2, 132
400e7406:	212294        	lsi	f9, a2, 132
400e7409:	c1a296        	bltz	a2, 400e7027 <_svfiprintf_r+0xa0b>
400e740c:	232a10        	sext	a2, a10, 8
400e740f:	fcc222        	addi	a2, a2, -4
400e7412:	02e8      	l32i.n	a14, a2, 0
400e7414:	b024a0        	addx8	a2, a4, a10
400e7417:	02e9      	s32i.n	a14, a2, 0
400e7419:	009906        	j	400e7681 <_svfiprintf_r+0x1065>
400e741c:	044c      	movi.n	a4, 64
400e741e:	104540        	and	a4, a5, a4
400e7421:	0cf416        	beqz	a4, 400e74f4 <_svfiprintf_r+0xed8>
400e7424:	912142        	l32i	a4, a1, 0x244
400e7427:	d6bc      	beqz.n	a6, 400e7468 <_svfiprintf_r+0xe4c>
400e7429:	0ca247        	bge	a2, a4, 400e7439 <_svfiprintf_r+0xe1d>
400e742c:	10c142        	addi	a4, a1, 16
400e742f:	b02240        	addx8	a2, a2, a4
400e7432:	0012e2        	l16ui	a14, a2, 0
400e7435:	000a46        	j	400e7462 <_svfiprintf_r+0xe46>
400e7438:	c16200        	mul16u	a6, a2, a0
400e743b:	a24210        	muluh	a4, a2, a1
400e743e:	464a30        	lsi	f3, a10, 0x118
400e7441:	34a2d2        	movi	a13, 0x234
400e7444:	40a2c2        	movi	a12, 0x240
400e7447:	06ed      	mov.n	a14, a6
400e7449:	0149      	s32i.n	a4, a1, 0
400e744b:	01d6f2        	addmi	a15, a6, 0x100
400e744e:	d6da      	add.n	a13, a6, a13
400e7450:	c6ca      	add.n	a12, a6, a12
400e7452:	07bd      	mov.n	a11, a7
400e7454:	02ad      	mov.n	a10, a2
400e7456:	a66192        	s32i	a9, a1, 0x298
400e7459:	fec3a5        	call8	400e6094 <get_arg$isra$0>
400e745c:	001ae2        	l16ui	a14, a10, 0
400e745f:	a62192        	l32i	a9, a1, 0x298
400e7462:	094d      	mov.n	a4, a9
400e7464:	008746        	j	400e7685 <_svfiprintf_r+0x1069>
400e7467:	731b00        	maxu	a1, a11, a0
400e746a:	0ba347        	bge	a3, a4, 400e7479 <_svfiprintf_r+0xe5d>
400e746d:	10c182        	addi	a8, a1, 16
400e7470:	b02280        	addx8	a2, a2, a8
400e7473:	0012e2        	l16ui	a14, a2, 0
400e7476:	003286        	j	400e7544 <_svfiprintf_r+0xf28>
400e7479:	f21c      	movi.n	a2, 31
400e747b:	412247        	blt	a2, a4, 400e74c0 <_svfiprintf_r+0xea4>
400e747e:	241b      	addi.n	a2, a4, 1
400e7480:	10c192        	addi	a9, a1, 16
400e7483:	916122        	s32i	a2, a1, 0x244
400e7486:	02d922        	addmi	a2, a9, 0x200
400e7489:	122232        	l32i	a3, a2, 72
400e748c:	861c      	movi.n	a6, 24
400e748e:	834b      	addi.n	a8, a3, 4
400e7490:	126282        	s32i	a8, a2, 72
400e7493:	052687        	blt	a6, a8, 400e749c <_svfiprintf_r+0xe80>
400e7496:	112232        	l32i	a3, a2, 68
400e7499:	000286        	j	400e74a7 <_svfiprintf_r+0xe8b>
400e749c:	042637        	blt	a6, a3, 400e74a4 <_svfiprintf_r+0xe88>
400e749f:	432c      	movi.n	a3, 36
400e74a1:	126232        	s32i	a3, a2, 72
400e74a4:	942132        	l32i	a3, a1, 0x250
400e74a7:	962122        	l32i	a2, a1, 0x258
400e74aa:	10c1a2        	addi	a10, a1, 16
400e74ad:	232a      	add.n	a2, a3, a2
400e74af:	fcc222        	addi	a2, a2, -4
400e74b2:	02e8      	l32i.n	a14, a2, 0
400e74b4:	b044a0        	addx8	a4, a4, a10
400e74b7:	04e9      	s32i.n	a14, a4, 0
400e74b9:	f4e0e0        	extui	a14, a14, 0, 16
400e74bc:	003fc6        	j	400e75bf <_svfiprintf_r+0xfa3>
400e74bf:	c1b200        	mul16u	a11, a2, a0
400e74c2:	db2210        	movt.s	f2, f2, b1
400e74c5:	223202        	lsi	f0, a2, 136
400e74c8:	841c12        	l16ui	a1, a12, 0x108
400e74cb:	634b      	addi.n	a6, a3, 4
400e74cd:	126262        	s32i	a6, a2, 72
400e74d0:	052467        	blt	a4, a6, 400e74d9 <_svfiprintf_r+0xebd>
400e74d3:	112232        	l32i	a3, a2, 68
400e74d6:	000286        	j	400e74e4 <_svfiprintf_r+0xec8>
400e74d9:	042437        	blt	a4, a3, 400e74e1 <_svfiprintf_r+0xec5>
400e74dc:	432c      	movi.n	a3, 36
400e74de:	126232        	s32i	a3, a2, 72
400e74e1:	942132        	l32i	a3, a1, 0x250
400e74e4:	962122        	l32i	a2, a1, 0x258
400e74e7:	232a      	add.n	a2, a3, a2
400e74e9:	fcc222        	addi	a2, a2, -4
400e74ec:	0012e2        	l16ui	a14, a2, 0
400e74ef:	003306        	j	400e75bf <_svfiprintf_r+0xfa3>
400e74f2:	820000        	mull	a0, a0, a0
400e74f5:	979121        	l32r	a2, 400cd33c <_rtc_text_end+0xd33c>
400e74f8:	0602e5        	call8	400ed528 <_etext+0x1057>
400e74fb:	bc0032        	l8ui	a3, a0, 188
400e74fe:	a28756        	bnez	a7, 400e6f2a <_svfiprintf_r+0x90e>
400e7501:	620d      	lsi	f0, a2, 8
400e7503:	6010c1        	l32r	a12, 400bf544 <_iram_end+0x319f0>
400e7506:	e2b022        	l32ai	a2, a0, 0x388
400e7509:	860002        	l8ui	a0, a0, 134
400e750c:	005d      	mov.n	a5, a0
400e750e:	820000        	mull	a0, a0, a0
400e7511:	6210c1        	l32r	a12, 400bfd54 <_iram_end+0x32200>
400e7514:	6a30a2        	lsi	f10, a0, 0x1a8
400e7517:	d268      	l32i.n	a6, a2, 52
400e7519:	c234a2        	lsi	f10, a4, 0x308
400e751c:	ed40a2        	s8i	a10, a0, 237
400e751f:	6908      	l32i.n	a0, a9, 24
400e7521:	d8f201        	l32r	a0, 400dd8ec <_svfprintf_r+0x15d4>
400e7524:	d8da01        	l32r	a0, 400dd88c <_svfprintf_r+0x1574>
400e7527:	c8ca      	add.n	a12, a8, a12
400e7529:	07bd      	mov.n	a11, a7
400e752b:	02ad      	mov.n	a10, a2
400e752d:	feb665        	call8	400e6094 <get_arg$isra$0>
400e7530:	000ae2        	l8ui	a14, a10, 0
400e7533:	005386        	j	400e7685 <_svfiprintf_r+0x1069>
400e7536:	731b      	addi.n	a7, a3, 1
400e7538:	0da387        	bge	a3, a8, 400e7549 <_svfiprintf_r+0xf2d>
400e753b:	10c192        	addi	a9, a1, 16
400e753e:	b02290        	addx8	a2, a2, a9
400e7541:	0002e2        	l8ui	a14, a2, 0
400e7544:	064d      	mov.n	a4, a6
400e7546:	001dc6        	j	400e75c1 <_svfiprintf_r+0xfa5>
400e7549:	f21c      	movi.n	a2, 31
400e754b:	412287        	blt	a2, a8, 400e7590 <_svfiprintf_r+0xf74>
400e754e:	281b      	addi.n	a2, a8, 1
400e7550:	10c1a2        	addi	a10, a1, 16
400e7553:	916122        	s32i	a2, a1, 0x244
400e7556:	02da22        	addmi	a2, a10, 0x200
400e7559:	122232        	l32i	a3, a2, 72
400e755c:	841c      	movi.n	a4, 24
400e755e:	634b      	addi.n	a6, a3, 4
400e7560:	126262        	s32i	a6, a2, 72
400e7563:	052467        	blt	a4, a6, 400e756c <_svfiprintf_r+0xf50>
400e7566:	112232        	l32i	a3, a2, 68
400e7569:	000286        	j	400e7577 <_svfiprintf_r+0xf5b>
400e756c:	042437        	blt	a4, a3, 400e7574 <_svfiprintf_r+0xf58>
400e756f:	432c      	movi.n	a3, 36
400e7571:	126232        	s32i	a3, a2, 72
400e7574:	942132        	l32i	a3, a1, 0x250
400e7577:	962122        	l32i	a2, a1, 0x258
400e757a:	10c1b2        	addi	a11, a1, 16
400e757d:	232a      	add.n	a2, a3, a2
400e757f:	fcc222        	addi	a2, a2, -4
400e7582:	02e8      	l32i.n	a14, a2, 0
400e7584:	b088b0        	addx8	a8, a8, a11
400e7587:	08e9      	s32i.n	a14, a8, 0
400e7589:	74e0e0        	extui	a14, a14, 0, 8
400e758c:	000bc6        	j	400e75bf <_svfiprintf_r+0xfa3>
400e758f:	c13200        	mul16u	a3, a2, a0
400e7592:	d32210        	movt	a2, a2, b1
400e7595:	223202        	lsi	f0, a2, 136
400e7598:	841c12        	l16ui	a1, a12, 0x108
400e759b:	634b      	addi.n	a6, a3, 4
400e759d:	126262        	s32i	a6, a2, 72
400e75a0:	052467        	blt	a4, a6, 400e75a9 <_svfiprintf_r+0xf8d>
400e75a3:	112232        	l32i	a3, a2, 68
400e75a6:	000286        	j	400e75b4 <_svfiprintf_r+0xf98>
400e75a9:	042437        	blt	a4, a3, 400e75b1 <_svfiprintf_r+0xf95>
400e75ac:	432c      	movi.n	a3, 36
400e75ae:	126232        	s32i	a3, a2, 72
400e75b1:	942132        	l32i	a3, a1, 0x250
400e75b4:	962122        	l32i	a2, a1, 0x258
400e75b7:	232a      	add.n	a2, a3, a2
400e75b9:	fcc222        	addi	a2, a2, -4
400e75bc:	0002e2        	l8ui	a14, a2, 0
400e75bf:	040c      	movi.n	a4, 0
400e75c1:	073d      	mov.n	a3, a7
400e75c3:	002f86        	j	400e7685 <_svfiprintf_r+0x1069>
400e75c6:	66bc      	beqz.n	a6, 400e7600 <_svfiprintf_r+0xfe4>
400e75c8:	0ca287        	bge	a2, a8, 400e75d8 <_svfiprintf_r+0xfbc>
400e75cb:	10c142        	addi	a4, a1, 16
400e75ce:	b02240        	addx8	a2, a2, a4
400e75d1:	02e8      	l32i.n	a14, a2, 0
400e75d3:	0008c6        	j	400e75fa <_svfiprintf_r+0xfde>
400e75d6:	620000        	lsi	f0, a0, 0x188
400e75d9:	4210c1        	l32r	a12, 400b7e1c <_iram_end+0x2a2c8>
400e75dc:	4a30a2        	lsi	f10, a0, 0x128
400e75df:	a2d246        	j	400d012c <_flash_cache_start+0x114>
400e75e2:	a2c234        	lsi	f3, a2, 0x288
400e75e5:	06ed40        	lsi	f4, a13, 24
400e75e8:	0149      	s32i.n	a4, a1, 0
400e75ea:	01d6f2        	addmi	a15, a6, 0x100
400e75ed:	d6da      	add.n	a13, a6, a13
400e75ef:	c6ca      	add.n	a12, a6, a12
400e75f1:	07bd      	mov.n	a11, a7
400e75f3:	02ad      	mov.n	a10, a2
400e75f5:	fea9e5        	call8	400e6094 <get_arg$isra$0>
400e75f8:	0ae8      	l32i.n	a14, a10, 0
400e75fa:	036d      	mov.n	a6, a3
400e75fc:	002046        	j	400e7681 <_svfiprintf_r+0x1065>
400e75ff:	631b00        	minu	a1, a11, a0
400e7602:	08a387        	bge	a3, a8, 400e760e <_svfiprintf_r+0xff2>
400e7605:	10c182        	addi	a8, a1, 16
400e7608:	b02280        	addx8	a2, a2, a8
400e760b:	001c06        	j	400e767f <_svfiprintf_r+0x1063>
400e760e:	f21c      	movi.n	a2, 31
400e7610:	3d2287        	blt	a2, a8, 400e7651 <_svfiprintf_r+0x1035>
400e7613:	281b      	addi.n	a2, a8, 1
400e7615:	10c192        	addi	a9, a1, 16
400e7618:	916122        	s32i	a2, a1, 0x244
400e761b:	02d922        	addmi	a2, a9, 0x200
400e761e:	122232        	l32i	a3, a2, 72
400e7621:	841c      	movi.n	a4, 24
400e7623:	734b      	addi.n	a7, a3, 4
400e7625:	126272        	s32i	a7, a2, 72
400e7628:	052477        	blt	a4, a7, 400e7631 <_svfiprintf_r+0x1015>
400e762b:	112232        	l32i	a3, a2, 68
400e762e:	000286        	j	400e763c <_svfiprintf_r+0x1020>
400e7631:	042437        	blt	a4, a3, 400e7639 <_svfiprintf_r+0x101d>
400e7634:	432c      	movi.n	a3, 36
400e7636:	126232        	s32i	a3, a2, 72
400e7639:	942132        	l32i	a3, a1, 0x250
400e763c:	962122        	l32i	a2, a1, 0x258
400e763f:	10c1a2        	addi	a10, a1, 16
400e7642:	232a      	add.n	a2, a3, a2
400e7644:	fcc222        	addi	a2, a2, -4
400e7647:	02e8      	l32i.n	a14, a2, 0
400e7649:	b088a0        	addx8	a8, a8, a10
400e764c:	08e9      	s32i.n	a14, a8, 0
400e764e:	000bc6        	j	400e7681 <_svfiprintf_r+0x1065>
400e7651:	10c1b2        	addi	a11, a1, 16
400e7654:	02db22        	addmi	a2, a11, 0x200
400e7657:	122232        	l32i	a3, a2, 72
400e765a:	841c      	movi.n	a4, 24
400e765c:	734b      	addi.n	a7, a3, 4
400e765e:	126272        	s32i	a7, a2, 72
400e7661:	072477        	blt	a4, a7, 400e766c <_svfiprintf_r+0x1050>
400e7664:	112232        	l32i	a3, a2, 68
400e7667:	000306        	j	400e7677 <_svfiprintf_r+0x105b>
400e766a:	370000        	lsi	f0, a0, 220
400e766d:	2c0424        	lsi	f2, a4, 176
400e7670:	623243        	lsi	f4, a2, 0x188
400e7673:	213212        	lsi	f1, a2, 132
400e7676:	212294        	lsi	f9, a2, 132
400e7679:	232a96        	bltz	a10, 400e78af <_svfiprintf_r+0x1293>
400e767c:	fcc222        	addi	a2, a2, -4
400e767f:	02e8      	l32i.n	a14, a2, 0
400e7681:	040c      	movi.n	a4, 0
400e7683:	063d      	mov.n	a3, a6
400e7685:	ffab22        	movi	a2, 0xfffffbff
400e7688:	105520        	and	a5, a5, a2
400e768b:	020c      	movi.n	a2, 0
400e768d:	026d06        	j	400e8045 <_svfiprintf_r+0x1a29>
400e7690:	214200        	srai	a4, a0, 2
400e7693:	46bc91        	l32r	a9, 400b9184 <_iram_end+0x2b630>
400e7696:	0aa247        	bge	a2, a4, 400e76a4 <_svfiprintf_r+0x1088>
400e7699:	10c142        	addi	a4, a1, 16
400e769c:	b02240        	addx8	a2, a2, a4
400e769f:	02e8      	l32i.n	a14, a2, 0
400e76a1:	000846        	j	400e76c6 <_svfiprintf_r+0x10aa>
400e76a4:	10c162        	addi	a6, a1, 16
400e76a7:	30a242        	movi	a4, 0x230
400e76aa:	464a      	add.n	a4, a6, a4
400e76ac:	34a2d2        	movi	a13, 0x234
400e76af:	40a2c2        	movi	a12, 0x240
400e76b2:	06ed      	mov.n	a14, a6
400e76b4:	0149      	s32i.n	a4, a1, 0
400e76b6:	01d6f2        	addmi	a15, a6, 0x100
400e76b9:	d6da      	add.n	a13, a6, a13
400e76bb:	c6ca      	add.n	a12, a6, a12
400e76bd:	07bd      	mov.n	a11, a7
400e76bf:	02ad      	mov.n	a10, a2
400e76c1:	fe9d25        	call8	400e6094 <get_arg$isra$0>
400e76c4:	0ae8      	l32i.n	a14, a10, 0
400e76c6:	036d      	mov.n	a6, a3
400e76c8:	001f86        	j	400e774a <_svfiprintf_r+0x112e>
400e76cb:	c18200        	mul16u	a8, a2, a0
400e76ce:	631b10        	minu	a1, a11, a1
400e76d1:	b02280        	addx8	a2, a2, a8
400e76d4:	702347        	blt	a3, a4, 400e7748 <_svfiprintf_r+0x112c>
400e76d7:	f21c      	movi.n	a2, 31
400e76d9:	3f2247        	blt	a2, a4, 400e771c <_svfiprintf_r+0x1100>
400e76dc:	241b      	addi.n	a2, a4, 1
400e76de:	10c192        	addi	a9, a1, 16
400e76e1:	916122        	s32i	a2, a1, 0x244
400e76e4:	02d922        	addmi	a2, a9, 0x200
400e76e7:	122232        	l32i	a3, a2, 72
400e76ea:	871c      	movi.n	a7, 24
400e76ec:	834b      	addi.n	a8, a3, 4
400e76ee:	126282        	s32i	a8, a2, 72
400e76f1:	072787        	blt	a7, a8, 400e76fc <_svfiprintf_r+0x10e0>
400e76f4:	112232        	l32i	a3, a2, 68
400e76f7:	000306        	j	400e7707 <_svfiprintf_r+0x10eb>
400e76fa:	370000        	lsi	f0, a0, 220
400e76fd:	2c0427        	bnone	a4, a2, 400e772d <_svfiprintf_r+0x1111>
400e7700:	623243        	lsi	f4, a2, 0x188
400e7703:	213212        	lsi	f1, a2, 132
400e7706:	212294        	lsi	f9, a2, 132
400e7709:	c1a296        	bltz	a2, 400e7327 <_svfiprintf_r+0xd0b>
400e770c:	232a10        	sext	a2, a10, 8
400e770f:	fcc222        	addi	a2, a2, -4
400e7712:	02e8      	l32i.n	a14, a2, 0
400e7714:	b024a0        	addx8	a2, a4, a10
400e7717:	02e9      	s32i.n	a14, a2, 0
400e7719:	000b46        	j	400e774a <_svfiprintf_r+0x112e>
400e771c:	10c1b2        	addi	a11, a1, 16
400e771f:	02db22        	addmi	a2, a11, 0x200
400e7722:	122232        	l32i	a3, a2, 72
400e7725:	841c      	movi.n	a4, 24
400e7727:	734b      	addi.n	a7, a3, 4
400e7729:	126272        	s32i	a7, a2, 72
400e772c:	052477        	blt	a4, a7, 400e7735 <_svfiprintf_r+0x1119>
400e772f:	112232        	l32i	a3, a2, 68
400e7732:	000286        	j	400e7740 <_svfiprintf_r+0x1124>
400e7735:	042437        	blt	a4, a3, 400e773d <_svfiprintf_r+0x1121>
400e7738:	432c      	movi.n	a3, 36
400e773a:	126232        	s32i	a3, a2, 72
400e773d:	942132        	l32i	a3, a1, 0x250
400e7740:	962122        	l32i	a2, a1, 0x258
400e7743:	232a      	add.n	a2, a3, a2
400e7745:	fcc222        	addi	a2, a2, -4
400e7748:	02e8      	l32i.n	a14, a2, 0
400e774a:	10c182        	addi	a8, a1, 16
400e774d:	02d832        	addmi	a3, a8, 0x200
400e7750:	073c      	movi.n	a7, 48
400e7752:	a44991        	l32r	a9, 400d0878 <_flash_cache_start+0x860>
400e7755:	384372        	s8i	a7, a3, 56
400e7758:	220c      	movi.n	a2, 2
400e775a:	78a072        	movi	a7, 120
400e775d:	394372        	s8i	a7, a3, 57
400e7760:	040c      	movi.n	a4, 0
400e7762:	205520        	or	a5, a5, a2
400e7765:	063d      	mov.n	a3, a6
400e7767:	9f6192        	s32i	a9, a1, 0x27c
400e776a:	0235c6        	j	400e8045 <_svfiprintf_r+0x1a29>
400e776d:	912142        	l32i	a4, a1, 0x244
400e7770:	46bc      	beqz.n	a6, 400e77a8 <_svfiprintf_r+0x118c>
400e7772:	0aa247        	bge	a2, a4, 400e7780 <_svfiprintf_r+0x1164>
400e7775:	10c1a2        	addi	a10, a1, 16
400e7778:	b022a0        	addx8	a2, a2, a10
400e777b:	0278      	l32i.n	a7, a2, 0
400e777d:	000846        	j	400e77a2 <_svfiprintf_r+0x1186>
400e7780:	10c1b2        	addi	a11, a1, 16
400e7783:	30a242        	movi	a4, 0x230
400e7786:	4b4a      	add.n	a4, a11, a4
400e7788:	34a2d2        	movi	a13, 0x234
400e778b:	40a2c2        	movi	a12, 0x240
400e778e:	01dbf2        	addmi	a15, a11, 0x100
400e7791:	0bed      	mov.n	a14, a11
400e7793:	dbda      	add.n	a13, a11, a13
400e7795:	cbca      	add.n	a12, a11, a12
400e7797:	0149      	s32i.n	a4, a1, 0
400e7799:	07bd      	mov.n	a11, a7
400e779b:	02ad      	mov.n	a10, a2
400e779d:	fe8f65        	call8	400e6094 <get_arg$isra$0>
400e77a0:	0a78      	l32i.n	a7, a10, 0
400e77a2:	986132        	s32i	a3, a1, 0x260
400e77a5:	002086        	j	400e782b <_svfiprintf_r+0x120f>
400e77a8:	631b      	addi.n	a6, a3, 1
400e77aa:	10c182        	addi	a8, a1, 16
400e77ad:	986162        	s32i	a6, a1, 0x260
400e77b0:	b02280        	addx8	a2, a2, a8
400e77b3:	722347        	blt	a3, a4, 400e7829 <_svfiprintf_r+0x120d>
400e77b6:	f21c      	movi.n	a2, 31
400e77b8:	3d2247        	blt	a2, a4, 400e77f9 <_svfiprintf_r+0x11dd>
400e77bb:	241b      	addi.n	a2, a4, 1
400e77bd:	10c192        	addi	a9, a1, 16
400e77c0:	916122        	s32i	a2, a1, 0x244
400e77c3:	02d922        	addmi	a2, a9, 0x200
400e77c6:	122232        	l32i	a3, a2, 72
400e77c9:	861c      	movi.n	a6, 24
400e77cb:	834b      	addi.n	a8, a3, 4
400e77cd:	126282        	s32i	a8, a2, 72
400e77d0:	052687        	blt	a6, a8, 400e77d9 <_svfiprintf_r+0x11bd>
400e77d3:	112232        	l32i	a3, a2, 68
400e77d6:	000286        	j	400e77e4 <_svfiprintf_r+0x11c8>
400e77d9:	042637        	blt	a6, a3, 400e77e1 <_svfiprintf_r+0x11c5>
400e77dc:	432c      	movi.n	a3, 36
400e77de:	126232        	s32i	a3, a2, 72
400e77e1:	942132        	l32i	a3, a1, 0x250
400e77e4:	962122        	l32i	a2, a1, 0x258
400e77e7:	10c1a2        	addi	a10, a1, 16
400e77ea:	232a      	add.n	a2, a3, a2
400e77ec:	fcc222        	addi	a2, a2, -4
400e77ef:	0278      	l32i.n	a7, a2, 0
400e77f1:	b044a0        	addx8	a4, a4, a10
400e77f4:	0479      	s32i.n	a7, a4, 0
400e77f6:	000c46        	j	400e782b <_svfiprintf_r+0x120f>
400e77f9:	10c1b2        	addi	a11, a1, 16
400e77fc:	02db22        	addmi	a2, a11, 0x200
400e77ff:	122232        	l32i	a3, a2, 72
400e7802:	841c      	movi.n	a4, 24
400e7804:	634b      	addi.n	a6, a3, 4
400e7806:	126262        	s32i	a6, a2, 72
400e7809:	082467        	blt	a4, a6, 400e7815 <_svfiprintf_r+0x11f9>
400e780c:	112232        	l32i	a3, a2, 68
400e780f:	000346        	j	400e7820 <_svfiprintf_r+0x1204>
400e7812:	000000        	ill
400e7815:	042437        	blt	a4, a3, 400e781d <_svfiprintf_r+0x1201>
400e7818:	432c      	movi.n	a3, 36
400e781a:	126232        	s32i	a3, a2, 72
400e781d:	942132        	l32i	a3, a1, 0x250
400e7820:	962122        	l32i	a2, a1, 0x258
400e7823:	802320        	add	a2, a3, a2
400e7826:	fcc222        	addi	a2, a2, -4
400e7829:	0278      	l32i.n	a7, a2, 0
400e782b:	10c142        	addi	a4, a1, 16
400e782e:	030c      	movi.n	a3, 0
400e7830:	02d422        	addmi	a2, a4, 0x200
400e7833:	9a2162        	l32i	a6, a1, 0x268
400e7836:	3a4232        	s8i	a3, a2, 58
400e7839:	018696        	bltz	a6, 400e7855 <_svfiprintf_r+0x1239>
400e783c:	06cd      	mov.n	a12, a6
400e783e:	0b0c      	movi.n	a11, 0
400e7840:	07ad      	mov.n	a10, a7
400e7842:	a3d881        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e7845:	0008e0        	callx8	a8
400e7848:	0a2d      	mov.n	a2, a10
400e784a:	1acc      	bnez.n	a10, 400e784f <_svfiprintf_r+0x1233>
400e784c:	026d06        	j	400e8204 <_svfiprintf_r+0x1be8>
400e784f:	c0aa70        	sub	a10, a10, a7
400e7852:	0001c6        	j	400e785d <_svfiprintf_r+0x1241>
400e7855:	07ad      	mov.n	a10, a7
400e7857:	a20a81        	l32r	a8, 400d0080 <_flash_cache_start+0x68>
400e785a:	0008e0        	callx8	a8
400e785d:	9a61a2        	s32i	a10, a1, 0x268
400e7860:	020c      	movi.n	a2, 0
400e7862:	026786        	j	400e8204 <_svfiprintf_r+0x1be8>
400e7865:	041c      	movi.n	a4, 16
400e7867:	205540        	or	a5, a5, a4
400e786a:	02e557        	bbsi	a5, 5, 400e7870 <_svfiprintf_r+0x1254>
400e786d:	0034c6        	j	400e7944 <_svfiprintf_r+0x1328>
400e7870:	912182        	l32i	a8, a1, 0x244
400e7873:	56bc      	beqz.n	a6, 400e78ac <_svfiprintf_r+0x1290>
400e7875:	0ca287        	bge	a2, a8, 400e7885 <_svfiprintf_r+0x1269>
400e7878:	10c182        	addi	a8, a1, 16
400e787b:	b02280        	addx8	a2, a2, a8
400e787e:	02e8      	l32i.n	a14, a2, 0
400e7880:	1248      	l32i.n	a4, a2, 4
400e7882:	00ec06        	j	400e7c36 <_svfiprintf_r+0x161a>
400e7885:	10c192        	addi	a9, a1, 16
400e7888:	30a242        	movi	a4, 0x230
400e788b:	494a      	add.n	a4, a9, a4
400e788d:	34a2d2        	movi	a13, 0x234
400e7890:	40a2c2        	movi	a12, 0x240
400e7893:	0149      	s32i.n	a4, a1, 0
400e7895:	09ed      	mov.n	a14, a9
400e7897:	01d9f2        	addmi	a15, a9, 0x100
400e789a:	d9da      	add.n	a13, a9, a13
400e789c:	c9ca      	add.n	a12, a9, a12
400e789e:	07bd      	mov.n	a11, a7
400e78a0:	02ad      	mov.n	a10, a2
400e78a2:	fe7f25        	call8	400e6094 <get_arg$isra$0>
400e78a5:	0ae8      	l32i.n	a14, a10, 0
400e78a7:	1a48      	l32i.n	a4, a10, 4
400e78a9:	00e246        	j	400e7c36 <_svfiprintf_r+0x161a>
400e78ac:	10c1a2        	addi	a10, a1, 16
400e78af:	631b      	addi.n	a6, a3, 1
400e78b1:	b022a0        	addx8	a2, a2, a10
400e78b4:	02a387        	bge	a3, a8, 400e78ba <_svfiprintf_r+0x129e>
400e78b7:	002046        	j	400e793c <_svfiprintf_r+0x1320>
400e78ba:	f21c      	movi.n	a2, 31
400e78bc:	482287        	blt	a2, a8, 400e7908 <_svfiprintf_r+0x12ec>
400e78bf:	10c1b2        	addi	a11, a1, 16
400e78c2:	281b      	addi.n	a2, a8, 1
400e78c4:	02db32        	addmi	a3, a11, 0x200
400e78c7:	916122        	s32i	a2, a1, 0x244
400e78ca:	122322        	l32i	a2, a3, 72
400e78cd:	427b      	addi.n	a4, a2, 7
400e78cf:	827c      	movi.n	a2, -8
400e78d1:	102420        	and	a2, a4, a2
400e78d4:	728b      	addi.n	a7, a2, 8
400e78d6:	126372        	s32i	a7, a3, 72
400e78d9:	841c      	movi.n	a4, 24
400e78db:	052477        	blt	a4, a7, 400e78e4 <_svfiprintf_r+0x12c8>
400e78de:	112332        	l32i	a3, a3, 68
400e78e1:	000286        	j	400e78ef <_svfiprintf_r+0x12d3>
400e78e4:	042427        	blt	a4, a2, 400e78ec <_svfiprintf_r+0x12d0>
400e78e7:	822c      	movi.n	a2, 40
400e78e9:	126322        	s32i	a2, a3, 72
400e78ec:	942132        	l32i	a3, a1, 0x250
400e78ef:	962122        	l32i	a2, a1, 0x258
400e78f2:	232a      	add.n	a2, a3, a2
400e78f4:	f8c222        	addi	a2, a2, -8
400e78f7:	02e8      	l32i.n	a14, a2, 0
400e78f9:	1248      	l32i.n	a4, a2, 4
400e78fb:	10c132        	addi	a3, a1, 16
400e78fe:	b02830        	addx8	a2, a8, a3
400e7901:	02e9      	s32i.n	a14, a2, 0
400e7903:	1249      	s32i.n	a4, a2, 4
400e7905:	00cac6        	j	400e7c34 <_svfiprintf_r+0x1618>
400e7908:	10c142        	addi	a4, a1, 16
400e790b:	02d422        	addmi	a2, a4, 0x200
400e790e:	122232        	l32i	a3, a2, 72
400e7911:	437b      	addi.n	a4, a3, 7
400e7913:	837c      	movi.n	a3, -8
400e7915:	103430        	and	a3, a4, a3
400e7918:	738b      	addi.n	a7, a3, 8
400e791a:	126272        	s32i	a7, a2, 72
400e791d:	841c      	movi.n	a4, 24
400e791f:	062477        	blt	a4, a7, 400e7929 <_svfiprintf_r+0x130d>
400e7922:	112232        	l32i	a3, a2, 68
400e7925:	0002c6        	j	400e7934 <_svfiprintf_r+0x1318>
400e7928:	243700        	extui	a3, a0, 7, 3
400e792b:	832c04        	lsi	f0, a12, 0x20c
400e792e:	126232        	s32i	a3, a2, 72
400e7931:	942132        	l32i	a3, a1, 0x250
400e7934:	962122        	l32i	a2, a1, 0x258
400e7937:	232a      	add.n	a2, a3, a2
400e7939:	f8c222        	addi	a2, a2, -8
400e793c:	02e8      	l32i.n	a14, a2, 0
400e793e:	1248      	l32i.n	a4, a2, 4
400e7940:	00bc06        	j	400e7c34 <_svfiprintf_r+0x1618>
400e7943:	041c00        	extui	a1, a0, 12, 1
400e7946:	109540        	and	a9, a5, a4
400e7949:	07d916        	beqz	a9, 400e79ca <_svfiprintf_r+0x13ae>
400e794c:	912142        	l32i	a4, a1, 0x244
400e794f:	d69c      	beqz.n	a6, 400e7970 <_svfiprintf_r+0x1354>
400e7951:	08a247        	bge	a2, a4, 400e795d <_svfiprintf_r+0x1341>
400e7954:	10c162        	addi	a6, a1, 16
400e7957:	b02260        	addx8	a2, a2, a6
400e795a:	0088c6        	j	400e7b81 <_svfiprintf_r+0x1565>
400e795d:	10c182        	addi	a8, a1, 16
400e7960:	30a242        	movi	a4, 0x230
400e7963:	484a      	add.n	a4, a8, a4
400e7965:	0149      	s32i.n	a4, a1, 0
400e7967:	01d8f2        	addmi	a15, a8, 0x100
400e796a:	08ed      	mov.n	a14, a8
400e796c:	0089c6        	j	400e7b97 <_svfiprintf_r+0x157b>
400e796f:	c19200        	mul16u	a9, a2, a0
400e7972:	631b10        	minu	a1, a11, a1
400e7975:	b02290        	addx8	a2, a2, a9
400e7978:	02a347        	bge	a3, a4, 400e797e <_svfiprintf_r+0x1362>
400e797b:	00ac46        	j	400e7c30 <_svfiprintf_r+0x1614>
400e797e:	f21c      	movi.n	a2, 31
400e7980:	3d2247        	blt	a2, a4, 400e79c1 <_svfiprintf_r+0x13a5>
400e7983:	241b      	addi.n	a2, a4, 1
400e7985:	10c1a2        	addi	a10, a1, 16
400e7988:	916122        	s32i	a2, a1, 0x244
400e798b:	02da22        	addmi	a2, a10, 0x200
400e798e:	122232        	l32i	a3, a2, 72
400e7991:	871c      	movi.n	a7, 24
400e7993:	834b      	addi.n	a8, a3, 4
400e7995:	126282        	s32i	a8, a2, 72
400e7998:	052787        	blt	a7, a8, 400e79a1 <_svfiprintf_r+0x1385>
400e799b:	112232        	l32i	a3, a2, 68
400e799e:	000286        	j	400e79ac <_svfiprintf_r+0x1390>
400e79a1:	042737        	blt	a7, a3, 400e79a9 <_svfiprintf_r+0x138d>
400e79a4:	432c      	movi.n	a3, 36
400e79a6:	126232        	s32i	a3, a2, 72
400e79a9:	942132        	l32i	a3, a1, 0x250
400e79ac:	962122        	l32i	a2, a1, 0x258
400e79af:	10c1b2        	addi	a11, a1, 16
400e79b2:	232a      	add.n	a2, a3, a2
400e79b4:	fcc222        	addi	a2, a2, -4
400e79b7:	02e8      	l32i.n	a14, a2, 0
400e79b9:	b024b0        	addx8	a2, a4, a11
400e79bc:	02e9      	s32i.n	a14, a2, 0
400e79be:	009c06        	j	400e7c32 <_svfiprintf_r+0x1616>
400e79c1:	10c132        	addi	a3, a1, 16
400e79c4:	02d322        	addmi	a2, a3, 0x200
400e79c7:	008f06        	j	400e7c07 <_svfiprintf_r+0x15eb>
400e79ca:	044c      	movi.n	a4, 64
400e79cc:	104540        	and	a4, a5, a4
400e79cf:	0d1416        	beqz	a4, 400e7aa4 <_svfiprintf_r+0x1488>
400e79d2:	912142        	l32i	a4, a1, 0x244
400e79d5:	e6bc      	beqz.n	a6, 400e7a17 <_svfiprintf_r+0x13fb>
400e79d7:	0ea247        	bge	a2, a4, 400e79e9 <_svfiprintf_r+0x13cd>
400e79da:	10c142        	addi	a4, a1, 16
400e79dd:	b02240        	addx8	a2, a2, a4
400e79e0:	0012e2        	l16ui	a14, a2, 0
400e79e3:	000ac6        	j	400e7a12 <_svfiprintf_r+0x13f6>
400e79e6:	000000        	ill
400e79e9:	10c162        	addi	a6, a1, 16
400e79ec:	30a242        	movi	a4, 0x230
400e79ef:	464a      	add.n	a4, a6, a4
400e79f1:	34a2d2        	movi	a13, 0x234
400e79f4:	40a2c2        	movi	a12, 0x240
400e79f7:	06ed      	mov.n	a14, a6
400e79f9:	0149      	s32i.n	a4, a1, 0
400e79fb:	01d6f2        	addmi	a15, a6, 0x100
400e79fe:	d6da      	add.n	a13, a6, a13
400e7a00:	c6ca      	add.n	a12, a6, a12
400e7a02:	07bd      	mov.n	a11, a7
400e7a04:	02ad      	mov.n	a10, a2
400e7a06:	a66192        	s32i	a9, a1, 0x298
400e7a09:	fe68a5        	call8	400e6094 <get_arg$isra$0>
400e7a0c:	001ae2        	l16ui	a14, a10, 0
400e7a0f:	a62192        	l32i	a9, a1, 0x298
400e7a12:	094d      	mov.n	a4, a9
400e7a14:	008786        	j	400e7c36 <_svfiprintf_r+0x161a>
400e7a17:	731b      	addi.n	a7, a3, 1
400e7a19:	0ba347        	bge	a3, a4, 400e7a28 <_svfiprintf_r+0x140c>
400e7a1c:	10c182        	addi	a8, a1, 16
400e7a1f:	b02280        	addx8	a2, a2, a8
400e7a22:	0012e2        	l16ui	a14, a2, 0
400e7a25:	0032c6        	j	400e7af4 <_svfiprintf_r+0x14d8>
400e7a28:	f21c      	movi.n	a2, 31
400e7a2a:	422247        	blt	a2, a4, 400e7a70 <_svfiprintf_r+0x1454>
400e7a2d:	241b      	addi.n	a2, a4, 1
400e7a2f:	10c192        	addi	a9, a1, 16
400e7a32:	916122        	s32i	a2, a1, 0x244
400e7a35:	02d922        	addmi	a2, a9, 0x200
400e7a38:	122232        	l32i	a3, a2, 72
400e7a3b:	861c      	movi.n	a6, 24
400e7a3d:	834b      	addi.n	a8, a3, 4
400e7a3f:	126282        	s32i	a8, a2, 72
400e7a42:	062687        	blt	a6, a8, 400e7a4c <_svfiprintf_r+0x1430>
400e7a45:	112232        	l32i	a3, a2, 68
400e7a48:	0002c6        	j	400e7a57 <_svfiprintf_r+0x143b>
400e7a4b:	263700        	lsi	f0, a7, 152
400e7a4e:	432c04        	lsi	f0, a12, 0x10c
400e7a51:	126232        	s32i	a3, a2, 72
400e7a54:	942132        	l32i	a3, a1, 0x250
400e7a57:	962122        	l32i	a2, a1, 0x258
400e7a5a:	10c1a2        	addi	a10, a1, 16
400e7a5d:	232a      	add.n	a2, a3, a2
400e7a5f:	fcc222        	addi	a2, a2, -4
400e7a62:	02e8      	l32i.n	a14, a2, 0
400e7a64:	b044a0        	addx8	a4, a4, a10
400e7a67:	04e9      	s32i.n	a14, a4, 0
400e7a69:	f4e0e0        	extui	a14, a14, 0, 16
400e7a6c:	003fc6        	j	400e7b6f <_svfiprintf_r+0x1553>
400e7a6f:	c1b200        	mul16u	a11, a2, a0
400e7a72:	db2210        	movt.s	f2, f2, b1
400e7a75:	223202        	lsi	f0, a2, 136
400e7a78:	841c12        	l16ui	a1, a12, 0x108
400e7a7b:	634b      	addi.n	a6, a3, 4
400e7a7d:	126262        	s32i	a6, a2, 72
400e7a80:	052467        	blt	a4, a6, 400e7a89 <_svfiprintf_r+0x146d>
400e7a83:	112232        	l32i	a3, a2, 68
400e7a86:	000286        	j	400e7a94 <_svfiprintf_r+0x1478>
400e7a89:	042437        	blt	a4, a3, 400e7a91 <_svfiprintf_r+0x1475>
400e7a8c:	432c      	movi.n	a3, 36
400e7a8e:	126232        	s32i	a3, a2, 72
400e7a91:	942132        	l32i	a3, a1, 0x250
400e7a94:	962122        	l32i	a2, a1, 0x258
400e7a97:	232a      	add.n	a2, a3, a2
400e7a99:	fcc222        	addi	a2, a2, -4
400e7a9c:	0012e2        	l16ui	a14, a2, 0
400e7a9f:	003306        	j	400e7b6f <_svfiprintf_r+0x1553>
400e7aa2:	820000        	mull	a0, a0, a0
400e7aa5:	979121        	l32r	a2, 400cd8ec <_rtc_text_end+0xd8ec>
400e7aa8:	0602e5        	call8	400edad8 <_etext+0x1607>
400e7aab:	bc0032        	l8ui	a3, a0, 188
400e7aae:	a28756        	bnez	a7, 400e74da <_svfiprintf_r+0xebe>
400e7ab1:	620d      	lsi	f0, a2, 8
400e7ab3:	6010c1        	l32r	a12, 400bfaf4 <_iram_end+0x31fa0>
400e7ab6:	e2b022        	l32ai	a2, a0, 0x388
400e7ab9:	c60002        	l8ui	a0, a0, 198
400e7abc:	005d      	mov.n	a5, a0
400e7abe:	820000        	mull	a0, a0, a0
400e7ac1:	6210c1        	l32r	a12, 400c0304 <_rtc_text_end+0x304>
400e7ac4:	6a30a2        	lsi	f10, a0, 0x1a8
400e7ac7:	d268      	l32i.n	a6, a2, 52
400e7ac9:	c234a2        	lsi	f10, a4, 0x308
400e7acc:	ed40a2        	s8i	a10, a0, 237
400e7acf:	6908      	l32i.n	a0, a9, 24
400e7ad1:	d8f201        	l32r	a0, 400dde9c <_svfprintf_r+0x1b84>
400e7ad4:	d8da01        	l32r	a0, 400dde3c <_svfprintf_r+0x1b24>
400e7ad7:	c8ca      	add.n	a12, a8, a12
400e7ad9:	07bd      	mov.n	a11, a7
400e7adb:	02ad      	mov.n	a10, a2
400e7add:	fe5b65        	call8	400e6094 <get_arg$isra$0>
400e7ae0:	000ae2        	l8ui	a14, a10, 0
400e7ae3:	0053c6        	j	400e7c36 <_svfiprintf_r+0x161a>
400e7ae6:	731b      	addi.n	a7, a3, 1
400e7ae8:	0da387        	bge	a3, a8, 400e7af9 <_svfiprintf_r+0x14dd>
400e7aeb:	10c192        	addi	a9, a1, 16
400e7aee:	b02290        	addx8	a2, a2, a9
400e7af1:	0002e2        	l8ui	a14, a2, 0
400e7af4:	064d      	mov.n	a4, a6
400e7af6:	001dc6        	j	400e7b71 <_svfiprintf_r+0x1555>
400e7af9:	f21c      	movi.n	a2, 31
400e7afb:	412287        	blt	a2, a8, 400e7b40 <_svfiprintf_r+0x1524>
400e7afe:	281b      	addi.n	a2, a8, 1
400e7b00:	10c1a2        	addi	a10, a1, 16
400e7b03:	916122        	s32i	a2, a1, 0x244
400e7b06:	02da22        	addmi	a2, a10, 0x200
400e7b09:	122232        	l32i	a3, a2, 72
400e7b0c:	841c      	movi.n	a4, 24
400e7b0e:	634b      	addi.n	a6, a3, 4
400e7b10:	126262        	s32i	a6, a2, 72
400e7b13:	052467        	blt	a4, a6, 400e7b1c <_svfiprintf_r+0x1500>
400e7b16:	112232        	l32i	a3, a2, 68
400e7b19:	000286        	j	400e7b27 <_svfiprintf_r+0x150b>
400e7b1c:	042437        	blt	a4, a3, 400e7b24 <_svfiprintf_r+0x1508>
400e7b1f:	432c      	movi.n	a3, 36
400e7b21:	126232        	s32i	a3, a2, 72
400e7b24:	942132        	l32i	a3, a1, 0x250
400e7b27:	962122        	l32i	a2, a1, 0x258
400e7b2a:	10c1b2        	addi	a11, a1, 16
400e7b2d:	232a      	add.n	a2, a3, a2
400e7b2f:	fcc222        	addi	a2, a2, -4
400e7b32:	02e8      	l32i.n	a14, a2, 0
400e7b34:	b088b0        	addx8	a8, a8, a11
400e7b37:	08e9      	s32i.n	a14, a8, 0
400e7b39:	74e0e0        	extui	a14, a14, 0, 8
400e7b3c:	000bc6        	j	400e7b6f <_svfiprintf_r+0x1553>
400e7b3f:	c13200        	mul16u	a3, a2, a0
400e7b42:	d32210        	movt	a2, a2, b1
400e7b45:	223202        	lsi	f0, a2, 136
400e7b48:	841c12        	l16ui	a1, a12, 0x108
400e7b4b:	634b      	addi.n	a6, a3, 4
400e7b4d:	126262        	s32i	a6, a2, 72
400e7b50:	052467        	blt	a4, a6, 400e7b59 <_svfiprintf_r+0x153d>
400e7b53:	112232        	l32i	a3, a2, 68
400e7b56:	000286        	j	400e7b64 <_svfiprintf_r+0x1548>
400e7b59:	042437        	blt	a4, a3, 400e7b61 <_svfiprintf_r+0x1545>
400e7b5c:	432c      	movi.n	a3, 36
400e7b5e:	126232        	s32i	a3, a2, 72
400e7b61:	942132        	l32i	a3, a1, 0x250
400e7b64:	962122        	l32i	a2, a1, 0x258
400e7b67:	232a      	add.n	a2, a3, a2
400e7b69:	fcc222        	addi	a2, a2, -4
400e7b6c:	0002e2        	l8ui	a14, a2, 0
400e7b6f:	040c      	movi.n	a4, 0
400e7b71:	073d      	mov.n	a3, a7
400e7b73:	002fc6        	j	400e7c36 <_svfiprintf_r+0x161a>
400e7b76:	66bc      	beqz.n	a6, 400e7bb0 <_svfiprintf_r+0x1594>
400e7b78:	0ca287        	bge	a2, a8, 400e7b88 <_svfiprintf_r+0x156c>
400e7b7b:	10c142        	addi	a4, a1, 16
400e7b7e:	b02240        	addx8	a2, a2, a4
400e7b81:	02e8      	l32i.n	a14, a2, 0
400e7b83:	0008c6        	j	400e7baa <_svfiprintf_r+0x158e>
400e7b86:	620000        	lsi	f0, a0, 0x188
400e7b89:	4210c1        	l32r	a12, 400b83cc <_iram_end+0x2a878>
400e7b8c:	4a30a2        	lsi	f10, a0, 0x128
400e7b8f:	014946        	j	400e80b8 <_svfiprintf_r+0x1a9c>
400e7b92:	01d6f2        	addmi	a15, a6, 0x100
400e7b95:	06ed      	mov.n	a14, a6
400e7b97:	34a2d2        	movi	a13, 0x234
400e7b9a:	40a2c2        	movi	a12, 0x240
400e7b9d:	deda      	add.n	a13, a14, a13
400e7b9f:	ceca      	add.n	a12, a14, a12
400e7ba1:	07bd      	mov.n	a11, a7
400e7ba3:	02ad      	mov.n	a10, a2
400e7ba5:	fe4ee5        	call8	400e6094 <get_arg$isra$0>
400e7ba8:	0ae8      	l32i.n	a14, a10, 0
400e7baa:	036d      	mov.n	a6, a3
400e7bac:	002086        	j	400e7c32 <_svfiprintf_r+0x1616>
400e7baf:	631b00        	minu	a1, a11, a0
400e7bb2:	08a387        	bge	a3, a8, 400e7bbe <_svfiprintf_r+0x15a2>
400e7bb5:	10c182        	addi	a8, a1, 16
400e7bb8:	b02280        	addx8	a2, a2, a8
400e7bbb:	001c46        	j	400e7c30 <_svfiprintf_r+0x1614>
400e7bbe:	f21c      	movi.n	a2, 31
400e7bc0:	3d2287        	blt	a2, a8, 400e7c01 <_svfiprintf_r+0x15e5>
400e7bc3:	281b      	addi.n	a2, a8, 1
400e7bc5:	10c192        	addi	a9, a1, 16
400e7bc8:	916122        	s32i	a2, a1, 0x244
400e7bcb:	02d922        	addmi	a2, a9, 0x200
400e7bce:	122232        	l32i	a3, a2, 72
400e7bd1:	841c      	movi.n	a4, 24
400e7bd3:	734b      	addi.n	a7, a3, 4
400e7bd5:	126272        	s32i	a7, a2, 72
400e7bd8:	052477        	blt	a4, a7, 400e7be1 <_svfiprintf_r+0x15c5>
400e7bdb:	112232        	l32i	a3, a2, 68
400e7bde:	000286        	j	400e7bec <_svfiprintf_r+0x15d0>
400e7be1:	042437        	blt	a4, a3, 400e7be9 <_svfiprintf_r+0x15cd>
400e7be4:	432c      	movi.n	a3, 36
400e7be6:	126232        	s32i	a3, a2, 72
400e7be9:	942132        	l32i	a3, a1, 0x250
400e7bec:	962122        	l32i	a2, a1, 0x258
400e7bef:	10c1a2        	addi	a10, a1, 16
400e7bf2:	232a      	add.n	a2, a3, a2
400e7bf4:	fcc222        	addi	a2, a2, -4
400e7bf7:	02e8      	l32i.n	a14, a2, 0
400e7bf9:	b088a0        	addx8	a8, a8, a10
400e7bfc:	08e9      	s32i.n	a14, a8, 0
400e7bfe:	000c06        	j	400e7c32 <_svfiprintf_r+0x1616>
400e7c01:	10c1b2        	addi	a11, a1, 16
400e7c04:	02db22        	addmi	a2, a11, 0x200
400e7c07:	122232        	l32i	a3, a2, 72
400e7c0a:	841c      	movi.n	a4, 24
400e7c0c:	734b      	addi.n	a7, a3, 4
400e7c0e:	126272        	s32i	a7, a2, 72
400e7c11:	082477        	blt	a4, a7, 400e7c1d <_svfiprintf_r+0x1601>
400e7c14:	112232        	l32i	a3, a2, 68
400e7c17:	000346        	j	400e7c28 <_svfiprintf_r+0x160c>
400e7c1a:	000000        	ill
400e7c1d:	042437        	blt	a4, a3, 400e7c25 <_svfiprintf_r+0x1609>
400e7c20:	432c      	movi.n	a3, 36
400e7c22:	126232        	s32i	a3, a2, 72
400e7c25:	942132        	l32i	a3, a1, 0x250
400e7c28:	962122        	l32i	a2, a1, 0x258
400e7c2b:	232a      	add.n	a2, a3, a2
400e7c2d:	fcc222        	addi	a2, a2, -4
400e7c30:	02e8      	l32i.n	a14, a2, 0
400e7c32:	040c      	movi.n	a4, 0
400e7c34:	063d      	mov.n	a3, a6
400e7c36:	120c      	movi.n	a2, 1
400e7c38:	010246        	j	400e8045 <_svfiprintf_r+0x1a29>
400e7c3b:	0f4100        	f64cmph	a4, a1, a0, 0
400e7c3e:	6142a3        	ssi	f10, a2, 0x184
400e7c41:	9f          	.byte 0x9f
400e7c42:	02e557        	bbsi	a5, 5, 400e7c48 <_svfiprintf_r+0x162c>
400e7c45:	0035c6        	j	400e7d20 <_svfiprintf_r+0x1704>
400e7c48:	912192        	l32i	a9, a1, 0x244
400e7c4b:	96bc      	beqz.n	a6, 400e7c88 <_svfiprintf_r+0x166c>
400e7c4d:	0ca297        	bge	a2, a9, 400e7c5d <_svfiprintf_r+0x1641>
400e7c50:	10c162        	addi	a6, a1, 16
400e7c53:	b02260        	addx8	a2, a2, a6
400e7c56:	02e8      	l32i.n	a14, a2, 0
400e7c58:	1248      	l32i.n	a4, a2, 4
400e7c5a:	00f106        	j	400e8022 <_svfiprintf_r+0x1a06>
400e7c5d:	10c192        	addi	a9, a1, 16
400e7c60:	30a242        	movi	a4, 0x230
400e7c63:	494a      	add.n	a4, a9, a4
400e7c65:	34a2d2        	movi	a13, 0x234
400e7c68:	40a2c2        	movi	a12, 0x240
400e7c6b:	0149      	s32i.n	a4, a1, 0
400e7c6d:	09ed      	mov.n	a14, a9
400e7c6f:	01d9f2        	addmi	a15, a9, 0x100
400e7c72:	d9da      	add.n	a13, a9, a13
400e7c74:	c9ca      	add.n	a12, a9, a12
400e7c76:	07bd      	mov.n	a11, a7
400e7c78:	02ad      	mov.n	a10, a2
400e7c7a:	a46182        	s32i	a8, a1, 0x290
400e7c7d:	fe4165        	call8	400e6094 <get_arg$isra$0>
400e7c80:	0ae8      	l32i.n	a14, a10, 0
400e7c82:	1a48      	l32i.n	a4, a10, 4
400e7c84:	008fc6        	j	400e7ec7 <_svfiprintf_r+0x18ab>
400e7c87:	c1a200        	mul16u	a10, a2, a0
400e7c8a:	631b10        	minu	a1, a11, a1
400e7c8d:	b022a0        	addx8	a2, a2, a10
400e7c90:	02a397        	bge	a3, a9, 400e7c96 <_svfiprintf_r+0x167a>
400e7c93:	002046        	j	400e7d18 <_svfiprintf_r+0x16fc>
400e7c96:	f21c      	movi.n	a2, 31
400e7c98:	482297        	blt	a2, a9, 400e7ce4 <_svfiprintf_r+0x16c8>
400e7c9b:	10c1b2        	addi	a11, a1, 16
400e7c9e:	291b      	addi.n	a2, a9, 1
400e7ca0:	02db32        	addmi	a3, a11, 0x200
400e7ca3:	916122        	s32i	a2, a1, 0x244
400e7ca6:	122322        	l32i	a2, a3, 72
400e7ca9:	427b      	addi.n	a4, a2, 7
400e7cab:	827c      	movi.n	a2, -8
400e7cad:	102420        	and	a2, a4, a2
400e7cb0:	728b      	addi.n	a7, a2, 8
400e7cb2:	126372        	s32i	a7, a3, 72
400e7cb5:	841c      	movi.n	a4, 24
400e7cb7:	052477        	blt	a4, a7, 400e7cc0 <_svfiprintf_r+0x16a4>
400e7cba:	112332        	l32i	a3, a3, 68
400e7cbd:	000286        	j	400e7ccb <_svfiprintf_r+0x16af>
400e7cc0:	042427        	blt	a4, a2, 400e7cc8 <_svfiprintf_r+0x16ac>
400e7cc3:	822c      	movi.n	a2, 40
400e7cc5:	126322        	s32i	a2, a3, 72
400e7cc8:	942132        	l32i	a3, a1, 0x250
400e7ccb:	962122        	l32i	a2, a1, 0x258
400e7cce:	232a      	add.n	a2, a3, a2
400e7cd0:	f8c222        	addi	a2, a2, -8
400e7cd3:	02e8      	l32i.n	a14, a2, 0
400e7cd5:	1248      	l32i.n	a4, a2, 4
400e7cd7:	10c132        	addi	a3, a1, 16
400e7cda:	b02930        	addx8	a2, a9, a3
400e7cdd:	02e9      	s32i.n	a14, a2, 0
400e7cdf:	1249      	s32i.n	a4, a2, 4
400e7ce1:	00cec6        	j	400e8020 <_svfiprintf_r+0x1a04>
400e7ce4:	10c142        	addi	a4, a1, 16
400e7ce7:	02d432        	addmi	a3, a4, 0x200
400e7cea:	122322        	l32i	a2, a3, 72
400e7ced:	427b      	addi.n	a4, a2, 7
400e7cef:	827c      	movi.n	a2, -8
400e7cf1:	102420        	and	a2, a4, a2
400e7cf4:	728b      	addi.n	a7, a2, 8
400e7cf6:	126372        	s32i	a7, a3, 72
400e7cf9:	841c      	movi.n	a4, 24
400e7cfb:	062477        	blt	a4, a7, 400e7d05 <_svfiprintf_r+0x16e9>
400e7cfe:	112332        	l32i	a3, a3, 68
400e7d01:	0002c6        	j	400e7d10 <_svfiprintf_r+0x16f4>
400e7d04:	242700        	extui	a2, a0, 7, 3
400e7d07:	822c04        	lsi	f0, a12, 0x208
400e7d0a:	126322        	s32i	a2, a3, 72
400e7d0d:	942132        	l32i	a3, a1, 0x250
400e7d10:	962122        	l32i	a2, a1, 0x258
400e7d13:	232a      	add.n	a2, a3, a2
400e7d15:	f8c222        	addi	a2, a2, -8
400e7d18:	02e8      	l32i.n	a14, a2, 0
400e7d1a:	1248      	l32i.n	a4, a2, 4
400e7d1c:	00c006        	j	400e8020 <_svfiprintf_r+0x1a04>
400e7d1f:	091c00        	l32e	a0, a12, -60
400e7d22:	109590        	and	a9, a5, a9
400e7d25:	07d916        	beqz	a9, 400e7da6 <_svfiprintf_r+0x178a>
400e7d28:	912142        	l32i	a4, a1, 0x244
400e7d2b:	d69c      	beqz.n	a6, 400e7d4c <_svfiprintf_r+0x1730>
400e7d2d:	08a247        	bge	a2, a4, 400e7d39 <_svfiprintf_r+0x171d>
400e7d30:	10c162        	addi	a6, a1, 16
400e7d33:	b02260        	addx8	a2, a2, a6
400e7d36:	008bc6        	j	400e7f69 <_svfiprintf_r+0x194d>
400e7d39:	10c192        	addi	a9, a1, 16
400e7d3c:	30a242        	movi	a4, 0x230
400e7d3f:	494a      	add.n	a4, a9, a4
400e7d41:	0149      	s32i.n	a4, a1, 0
400e7d43:	01d9f2        	addmi	a15, a9, 0x100
400e7d46:	09ed      	mov.n	a14, a9
400e7d48:	008d06        	j	400e7f80 <_svfiprintf_r+0x1964>
400e7d4b:	c1a200        	mul16u	a10, a2, a0
400e7d4e:	631b10        	minu	a1, a11, a1
400e7d51:	b022a0        	addx8	a2, a2, a10
400e7d54:	02a347        	bge	a3, a4, 400e7d5a <_svfiprintf_r+0x173e>
400e7d57:	00b046        	j	400e801c <_svfiprintf_r+0x1a00>
400e7d5a:	f21c      	movi.n	a2, 31
400e7d5c:	3d2247        	blt	a2, a4, 400e7d9d <_svfiprintf_r+0x1781>
400e7d5f:	241b      	addi.n	a2, a4, 1
400e7d61:	10c1b2        	addi	a11, a1, 16
400e7d64:	916122        	s32i	a2, a1, 0x244
400e7d67:	02db22        	addmi	a2, a11, 0x200
400e7d6a:	122232        	l32i	a3, a2, 72
400e7d6d:	871c      	movi.n	a7, 24
400e7d6f:	934b      	addi.n	a9, a3, 4
400e7d71:	126292        	s32i	a9, a2, 72
400e7d74:	052797        	blt	a7, a9, 400e7d7d <_svfiprintf_r+0x1761>
400e7d77:	112232        	l32i	a3, a2, 68
400e7d7a:	000286        	j	400e7d88 <_svfiprintf_r+0x176c>
400e7d7d:	042737        	blt	a7, a3, 400e7d85 <_svfiprintf_r+0x1769>
400e7d80:	432c      	movi.n	a3, 36
400e7d82:	126232        	s32i	a3, a2, 72
400e7d85:	942132        	l32i	a3, a1, 0x250
400e7d88:	962122        	l32i	a2, a1, 0x258
400e7d8b:	232a      	add.n	a2, a3, a2
400e7d8d:	fcc222        	addi	a2, a2, -4
400e7d90:	02e8      	l32i.n	a14, a2, 0
400e7d92:	10c132        	addi	a3, a1, 16
400e7d95:	b02430        	addx8	a2, a4, a3
400e7d98:	02e9      	s32i.n	a14, a2, 0
400e7d9a:	00a006        	j	400e801e <_svfiprintf_r+0x1a02>
400e7d9d:	10c142        	addi	a4, a1, 16
400e7da0:	02d422        	addmi	a2, a4, 0x200
400e7da3:	0093c6        	j	400e7ff6 <_svfiprintf_r+0x19da>
400e7da6:	044c      	movi.n	a4, 64
400e7da8:	104540        	and	a4, a5, a4
400e7dab:	0d5416        	beqz	a4, 400e7e84 <_svfiprintf_r+0x1868>
400e7dae:	912142        	l32i	a4, a1, 0x244
400e7db1:	043616        	beqz	a6, 400e7df8 <_svfiprintf_r+0x17dc>
400e7db4:	0da247        	bge	a2, a4, 400e7dc5 <_svfiprintf_r+0x17a9>
400e7db7:	10c162        	addi	a6, a1, 16
400e7dba:	b02260        	addx8	a2, a2, a6
400e7dbd:	0012e2        	l16ui	a14, a2, 0
400e7dc0:	094d      	mov.n	a4, a9
400e7dc2:	009706        	j	400e8022 <_svfiprintf_r+0x1a06>
400e7dc5:	10c1a2        	addi	a10, a1, 16
400e7dc8:	30a242        	movi	a4, 0x230
400e7dcb:	4a4a      	add.n	a4, a10, a4
400e7dcd:	34a2d2        	movi	a13, 0x234
400e7dd0:	40a2c2        	movi	a12, 0x240
400e7dd3:	0aed      	mov.n	a14, a10
400e7dd5:	0149      	s32i.n	a4, a1, 0
400e7dd7:	01daf2        	addmi	a15, a10, 0x100
400e7dda:	dada      	add.n	a13, a10, a13
400e7ddc:	caca      	add.n	a12, a10, a12
400e7dde:	07bd      	mov.n	a11, a7
400e7de0:	20a220        	or	a10, a2, a2
400e7de3:	a66192        	s32i	a9, a1, 0x298
400e7de6:	a46182        	s32i	a8, a1, 0x290
400e7de9:	fe2aa5        	call8	400e6094 <get_arg$isra$0>
400e7dec:	a62192        	l32i	a9, a1, 0x298
400e7def:	001ae2        	l16ui	a14, a10, 0
400e7df2:	094d      	mov.n	a4, a9
400e7df4:	0033c6        	j	400e7ec7 <_svfiprintf_r+0x18ab>
400e7df7:	731b00        	maxu	a1, a11, a0
400e7dfa:	0ba347        	bge	a3, a4, 400e7e09 <_svfiprintf_r+0x17ed>
400e7dfd:	10c1b2        	addi	a11, a1, 16
400e7e00:	b022b0        	addx8	a2, a2, a11
400e7e03:	0012e2        	l16ui	a14, a2, 0
400e7e06:	003446        	j	400e7edb <_svfiprintf_r+0x18bf>
400e7e09:	f21c      	movi.n	a2, 31
400e7e0b:	412247        	blt	a2, a4, 400e7e50 <_svfiprintf_r+0x1834>
400e7e0e:	241b      	addi.n	a2, a4, 1
400e7e10:	10c132        	addi	a3, a1, 16
400e7e13:	916122        	s32i	a2, a1, 0x244
400e7e16:	02d322        	addmi	a2, a3, 0x200
400e7e19:	122232        	l32i	a3, a2, 72
400e7e1c:	861c      	movi.n	a6, 24
400e7e1e:	934b      	addi.n	a9, a3, 4
400e7e20:	126292        	s32i	a9, a2, 72
400e7e23:	052697        	blt	a6, a9, 400e7e2c <_svfiprintf_r+0x1810>
400e7e26:	112232        	l32i	a3, a2, 68
400e7e29:	000286        	j	400e7e37 <_svfiprintf_r+0x181b>
400e7e2c:	042637        	blt	a6, a3, 400e7e34 <_svfiprintf_r+0x1818>
400e7e2f:	432c      	movi.n	a3, 36
400e7e31:	126232        	s32i	a3, a2, 72
400e7e34:	942132        	l32i	a3, a1, 0x250
400e7e37:	962122        	l32i	a2, a1, 0x258
400e7e3a:	10c162        	addi	a6, a1, 16
400e7e3d:	232a      	add.n	a2, a3, a2
400e7e3f:	fcc222        	addi	a2, a2, -4
400e7e42:	02e8      	l32i.n	a14, a2, 0
400e7e44:	b04460        	addx8	a4, a4, a6
400e7e47:	04e9      	s32i.n	a14, a4, 0
400e7e49:	f4e0e0        	extui	a14, a14, 0, 16
400e7e4c:	0041c6        	j	400e7f57 <_svfiprintf_r+0x193b>
400e7e4f:	c19200        	mul16u	a9, a2, a0
400e7e52:	d92210        	lsi	f1, a2, 0x364
400e7e55:	223202        	lsi	f0, a2, 136
400e7e58:	841c12        	l16ui	a1, a12, 0x108
400e7e5b:	634b      	addi.n	a6, a3, 4
400e7e5d:	126262        	s32i	a6, a2, 72
400e7e60:	052467        	blt	a4, a6, 400e7e69 <_svfiprintf_r+0x184d>
400e7e63:	112232        	l32i	a3, a2, 68
400e7e66:	000286        	j	400e7e74 <_svfiprintf_r+0x1858>
400e7e69:	042437        	blt	a4, a3, 400e7e71 <_svfiprintf_r+0x1855>
400e7e6c:	432c      	movi.n	a3, 36
400e7e6e:	126232        	s32i	a3, a2, 72
400e7e71:	942132        	l32i	a3, a1, 0x250
400e7e74:	962122        	l32i	a2, a1, 0x258
400e7e77:	232a      	add.n	a2, a3, a2
400e7e79:	fcc222        	addi	a2, a2, -4
400e7e7c:	0012e2        	l16ui	a14, a2, 0
400e7e7f:	003506        	j	400e7f57 <_svfiprintf_r+0x193b>
400e7e82:	920000        	lsi	f0, a0, 0x248
400e7e85:	979121        	l32r	a2, 400cdccc <_rtc_text_end+0xdccc>
400e7e88:	0602e5        	call8	400edeb8 <_etext+0x19e7>
400e7e8b:	bc0034        	lsi	f3, a0, 0x2f0
400e7e8e:	a297c6        	j	400d08f1 <_flash_cache_start+0x8d9>
400e7e91:	0e          	.byte 0xe
400e7e92:	10c1a2        	addi	a10, a1, 16
400e7e95:	b022a0        	addx8	a2, a2, a10
400e7e98:	0002e2        	l8ui	a14, a2, 0
400e7e9b:	0060c6        	j	400e8022 <_svfiprintf_r+0x1a06>
400e7e9e:	000000        	ill
400e7ea1:	10c1b2        	addi	a11, a1, 16
400e7ea4:	30a262        	movi	a6, 0x230
400e7ea7:	6b6a      	add.n	a6, a11, a6
400e7ea9:	34a2d2        	movi	a13, 0x234
400e7eac:	40a2c2        	movi	a12, 0x240
400e7eaf:	0bed      	mov.n	a14, a11
400e7eb1:	01dbf2        	addmi	a15, a11, 0x100
400e7eb4:	dbda      	add.n	a13, a11, a13
400e7eb6:	cbca      	add.n	a12, a11, a12
400e7eb8:	0169      	s32i.n	a6, a1, 0
400e7eba:	07bd      	mov.n	a11, a7
400e7ebc:	02ad      	mov.n	a10, a2
400e7ebe:	a46182        	s32i	a8, a1, 0x290
400e7ec1:	fe1d25        	call8	400e6094 <get_arg$isra$0>
400e7ec4:	000ae2        	l8ui	a14, a10, 0
400e7ec7:	a42182        	l32i	a8, a1, 0x290
400e7eca:	005506        	j	400e8022 <_svfiprintf_r+0x1a06>
400e7ecd:	731b      	addi.n	a7, a3, 1
400e7ecf:	0da397        	bge	a3, a9, 400e7ee0 <_svfiprintf_r+0x18c4>
400e7ed2:	10c132        	addi	a3, a1, 16
400e7ed5:	b02230        	addx8	a2, a2, a3
400e7ed8:	0002e2        	l8ui	a14, a2, 0
400e7edb:	064d      	mov.n	a4, a6
400e7edd:	001e06        	j	400e7f59 <_svfiprintf_r+0x193d>
400e7ee0:	f21c      	movi.n	a2, 31
400e7ee2:	422297        	blt	a2, a9, 400e7f28 <_svfiprintf_r+0x190c>
400e7ee5:	291b      	addi.n	a2, a9, 1
400e7ee7:	10c142        	addi	a4, a1, 16
400e7eea:	916122        	s32i	a2, a1, 0x244
400e7eed:	02d422        	addmi	a2, a4, 0x200
400e7ef0:	122232        	l32i	a3, a2, 72
400e7ef3:	841c      	movi.n	a4, 24
400e7ef5:	634b      	addi.n	a6, a3, 4
400e7ef7:	126262        	s32i	a6, a2, 72
400e7efa:	062467        	blt	a4, a6, 400e7f04 <_svfiprintf_r+0x18e8>
400e7efd:	112232        	l32i	a3, a2, 68
400e7f00:	0002c6        	j	400e7f0f <_svfiprintf_r+0x18f3>
400e7f03:	243700        	extui	a3, a0, 7, 3
400e7f06:	432c04        	lsi	f0, a12, 0x10c
400e7f09:	126232        	s32i	a3, a2, 72
400e7f0c:	942132        	l32i	a3, a1, 0x250
400e7f0f:	962122        	l32i	a2, a1, 0x258
400e7f12:	10c162        	addi	a6, a1, 16
400e7f15:	232a      	add.n	a2, a3, a2
400e7f17:	fcc222        	addi	a2, a2, -4
400e7f1a:	02e8      	l32i.n	a14, a2, 0
400e7f1c:	b09960        	addx8	a9, a9, a6
400e7f1f:	09e9      	s32i.n	a14, a9, 0
400e7f21:	74e0e0        	extui	a14, a14, 0, 8
400e7f24:	000bc6        	j	400e7f57 <_svfiprintf_r+0x193b>
400e7f27:	c19200        	mul16u	a9, a2, a0
400e7f2a:	d92210        	lsi	f1, a2, 0x364
400e7f2d:	223202        	lsi	f0, a2, 136
400e7f30:	841c12        	l16ui	a1, a12, 0x108
400e7f33:	634b      	addi.n	a6, a3, 4
400e7f35:	126262        	s32i	a6, a2, 72
400e7f38:	052467        	blt	a4, a6, 400e7f41 <_svfiprintf_r+0x1925>
400e7f3b:	112232        	l32i	a3, a2, 68
400e7f3e:	000286        	j	400e7f4c <_svfiprintf_r+0x1930>
400e7f41:	042437        	blt	a4, a3, 400e7f49 <_svfiprintf_r+0x192d>
400e7f44:	432c      	movi.n	a3, 36
400e7f46:	126232        	s32i	a3, a2, 72
400e7f49:	942132        	l32i	a3, a1, 0x250
400e7f4c:	962122        	l32i	a2, a1, 0x258
400e7f4f:	232a      	add.n	a2, a3, a2
400e7f51:	fcc222        	addi	a2, a2, -4
400e7f54:	0002e2        	l8ui	a14, a2, 0
400e7f57:	040c      	movi.n	a4, 0
400e7f59:	073d      	mov.n	a3, a7
400e7f5b:	0030c6        	j	400e8022 <_svfiprintf_r+0x1a06>
400e7f5e:	c6bc      	beqz.n	a6, 400e7f9e <_svfiprintf_r+0x1982>
400e7f60:	0da297        	bge	a2, a9, 400e7f71 <_svfiprintf_r+0x1955>
400e7f63:	10c1a2        	addi	a10, a1, 16
400e7f66:	b022a0        	addx8	a2, a2, a10
400e7f69:	02e8      	l32i.n	a14, a2, 0
400e7f6b:	036d      	mov.n	a6, a3
400e7f6d:	002b46        	j	400e801e <_svfiprintf_r+0x1a02>
400e7f70:	c1b200        	mul16u	a11, a2, a0
400e7f73:	a24210        	muluh	a4, a2, a1
400e7f76:	4b4a30        	olt.s	b4, f10, f3
400e7f79:	0149      	s32i.n	a4, a1, 0
400e7f7b:	01dbf2        	addmi	a15, a11, 0x100
400e7f7e:	0bed      	mov.n	a14, a11
400e7f80:	34a2d2        	movi	a13, 0x234
400e7f83:	40a2c2        	movi	a12, 0x240
400e7f86:	deda      	add.n	a13, a14, a13
400e7f88:	ceca      	add.n	a12, a14, a12
400e7f8a:	07bd      	mov.n	a11, a7
400e7f8c:	02ad      	mov.n	a10, a2
400e7f8e:	a46182        	s32i	a8, a1, 0x290
400e7f91:	fe1025        	call8	400e6094 <get_arg$isra$0>
400e7f94:	0ae8      	l32i.n	a14, a10, 0
400e7f96:	036d      	mov.n	a6, a3
400e7f98:	a42182        	l32i	a8, a1, 0x290
400e7f9b:	001fc6        	j	400e801e <_svfiprintf_r+0x1a02>
400e7f9e:	631b      	addi.n	a6, a3, 1
400e7fa0:	08a397        	bge	a3, a9, 400e7fac <_svfiprintf_r+0x1990>
400e7fa3:	10c132        	addi	a3, a1, 16
400e7fa6:	b02230        	addx8	a2, a2, a3
400e7fa9:	001bc6        	j	400e801c <_svfiprintf_r+0x1a00>
400e7fac:	f21c      	movi.n	a2, 31
400e7fae:	3e2297        	blt	a2, a9, 400e7ff0 <_svfiprintf_r+0x19d4>
400e7fb1:	291b      	addi.n	a2, a9, 1
400e7fb3:	10c142        	addi	a4, a1, 16
400e7fb6:	916122        	s32i	a2, a1, 0x244
400e7fb9:	02d422        	addmi	a2, a4, 0x200
400e7fbc:	122232        	l32i	a3, a2, 72
400e7fbf:	841c      	movi.n	a4, 24
400e7fc1:	734b      	addi.n	a7, a3, 4
400e7fc3:	126272        	s32i	a7, a2, 72
400e7fc6:	062477        	blt	a4, a7, 400e7fd0 <_svfiprintf_r+0x19b4>
400e7fc9:	112232        	l32i	a3, a2, 68
400e7fcc:	0002c6        	j	400e7fdb <_svfiprintf_r+0x19bf>
400e7fcf:	243700        	extui	a3, a0, 7, 3
400e7fd2:	432c04        	lsi	f0, a12, 0x10c
400e7fd5:	126232        	s32i	a3, a2, 72
400e7fd8:	942132        	l32i	a3, a1, 0x250
400e7fdb:	962122        	l32i	a2, a1, 0x258
400e7fde:	10c1a2        	addi	a10, a1, 16
400e7fe1:	232a      	add.n	a2, a3, a2
400e7fe3:	fcc222        	addi	a2, a2, -4
400e7fe6:	02e8      	l32i.n	a14, a2, 0
400e7fe8:	b099a0        	addx8	a9, a9, a10
400e7feb:	09e9      	s32i.n	a14, a9, 0
400e7fed:	000b46        	j	400e801e <_svfiprintf_r+0x1a02>
400e7ff0:	10c1b2        	addi	a11, a1, 16
400e7ff3:	02db22        	addmi	a2, a11, 0x200
400e7ff6:	122232        	l32i	a3, a2, 72
400e7ff9:	841c      	movi.n	a4, 24
400e7ffb:	734b      	addi.n	a7, a3, 4
400e7ffd:	126272        	s32i	a7, a2, 72
400e8000:	052477        	blt	a4, a7, 400e8009 <_svfiprintf_r+0x19ed>
400e8003:	112232        	l32i	a3, a2, 68
400e8006:	000286        	j	400e8014 <_svfiprintf_r+0x19f8>
400e8009:	042437        	blt	a4, a3, 400e8011 <_svfiprintf_r+0x19f5>
400e800c:	432c      	movi.n	a3, 36
400e800e:	126232        	s32i	a3, a2, 72
400e8011:	942132        	l32i	a3, a1, 0x250
400e8014:	962122        	l32i	a2, a1, 0x258
400e8017:	232a      	add.n	a2, a3, a2
400e8019:	fcc222        	addi	a2, a2, -4
400e801c:	02e8      	l32i.n	a14, a2, 0
400e801e:	040c      	movi.n	a4, 0
400e8020:	063d      	mov.n	a3, a6
400e8022:	202e40        	or	a2, a14, a4
400e8025:	429c      	beqz.n	a2, 400e803d <_svfiprintf_r+0x1a21>
400e8027:	126507        	bbci	a5, 0, 400e803d <_svfiprintf_r+0x1a21>
400e802a:	10c192        	addi	a9, a1, 16
400e802d:	02d922        	addmi	a2, a9, 0x200
400e8030:	063c      	movi.n	a6, 48
400e8032:	384262        	s8i	a6, a2, 56
400e8035:	394282        	s8i	a8, a2, 57
400e8038:	220c      	movi.n	a2, 2
400e803a:	205520        	or	a5, a5, a2
400e803d:	ffab22        	movi	a2, 0xfffffbff
400e8040:	105520        	and	a5, a5, a2
400e8043:	220c      	movi.n	a2, 2
400e8045:	10c1a2        	addi	a10, a1, 16
400e8048:	00a072        	movi	a7, 0
400e804b:	02da62        	addmi	a6, a10, 0x200
400e804e:	3a4672        	s8i	a7, a6, 58
400e8051:	986132        	s32i	a3, a1, 0x260
400e8054:	9a2132        	l32i	a3, a1, 0x268
400e8057:	005396        	bltz	a3, 400e8060 <_svfiprintf_r+0x1a44>
400e805a:	7faf32        	movi	a3, -129
400e805d:	105530        	and	a5, a5, a3
400e8060:	206e40        	or	a6, a14, a4
400e8063:	180c      	movi.n	a8, 1
400e8065:	030c      	movi.n	a3, 0
400e8067:	933860        	movnez	a3, a8, a6
400e806a:	743030        	extui	a3, a3, 0, 8
400e806d:	73cc      	bnez.n	a3, 400e8078 <_svfiprintf_r+0x1a5c>
400e806f:	9a2162        	l32i	a6, a1, 0x268
400e8072:	933860        	movnez	a3, a8, a6
400e8075:	13d316        	beqz	a3, 400e81b6 <_svfiprintf_r+0x1b9a>
400e8078:	4a1226        	beqi	a2, 1, 400e80c6 <_svfiprintf_r+0x1aaa>
400e807b:	022266        	bnei	a2, 2, 400e8081 <_svfiprintf_r+0x1a65>
400e807e:	0041c6        	j	400e8189 <_svfiprintf_r+0x1b6d>
400e8081:	90a182        	movi	a8, 0x190
400e8084:	881a      	add.n	a8, a8, a1
400e8086:	64c872        	addi	a7, a8, 100
400e8089:	2420e0        	extui	a2, a14, 0, 3
400e808c:	013430        	slli	a3, a4, 29
400e808f:	41e3e0        	srli	a14, a14, 3
400e8092:	770b      	addi.n	a7, a7, -1
400e8094:	30c222        	addi	a2, a2, 48
400e8097:	20e3e0        	or	a14, a3, a14
400e809a:	414340        	srli	a4, a4, 3
400e809d:	004722        	s8i	a2, a7, 0
400e80a0:	206e40        	or	a6, a14, a4
400e80a3:	fe2656        	bnez	a6, 400e8089 <_svfiprintf_r+0x1a6d>
400e80a6:	d0c232        	addi	a3, a2, -48
400e80a9:	120c      	movi.n	a2, 1
400e80ab:	832630        	moveqz	a2, a6, a3
400e80ae:	742020        	extui	a2, a2, 0, 8
400e80b1:	11c216        	beqz	a2, 400e81d1 <_svfiprintf_r+0x1bb5>
400e80b4:	02e507        	bbsi	a5, 0, 400e80ba <_svfiprintf_r+0x1a9e>
400e80b7:	004586        	j	400e81d1 <_svfiprintf_r+0x1bb5>
400e80ba:	870b      	addi.n	a8, a7, -1
400e80bc:	023c      	movi.n	a2, 48
400e80be:	004822        	s8i	a2, a8, 0
400e80c1:	087d      	mov.n	a7, a8
400e80c3:	004286        	j	400e81d1 <_svfiprintf_r+0x1bb5>
400e80c6:	a4dc      	bnez.n	a4, 400e80e4 <_svfiprintf_r+0x1ac8>
400e80c8:	920c      	movi.n	a2, 9
400e80ca:	1632e7        	bltu	a2, a14, 400e80e4 <_svfiprintf_r+0x1ac8>
400e80cd:	10c192        	addi	a9, a1, 16
400e80d0:	90a1a2        	movi	a10, 0x190
400e80d3:	30cee2        	addi	a14, a14, 48
400e80d6:	01d922        	addmi	a2, a9, 0x100
400e80d9:	aa1a      	add.n	a10, a10, a1
400e80db:	e342e2        	s8i	a14, a2, 227
400e80de:	63ca72        	addi	a7, a10, 99
400e80e1:	003b06        	j	400e81d1 <_svfiprintf_r+0x1bb5>
400e80e4:	00a422        	movi	a2, 0x400
400e80e7:	030c      	movi.n	a3, 0
400e80e9:	a32182        	l32i	a8, a1, 0x28c
400e80ec:	102520        	and	a2, a5, a2
400e80ef:	000046        	j	400e80f4 <_svfiprintf_r+0x1ad8>
400e80f2:	078d      	mov.n	a8, a7
400e80f4:	a1a0c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e80f7:	9fd9d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e80fa:	0ead      	mov.n	a10, a14
400e80fc:	04bd      	mov.n	a11, a4
400e80fe:	780b      	addi.n	a7, a8, -1
400e8100:	a561e2        	s32i	a14, a1, 0x294
400e8103:	a1a981        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e8106:	0008e0        	callx8	a8
400e8109:	30caa2        	addi	a10, a10, 48
400e810c:	0047a2        	s8i	a10, a7, 0
400e810f:	331b      	addi.n	a3, a3, 1
400e8111:	a521e2        	l32i	a14, a1, 0x294
400e8114:	054216        	beqz	a2, 400e816c <_svfiprintf_r+0x1b50>
400e8117:	a02162        	l32i	a6, a1, 0x280
400e811a:	01af92        	movi	a9, -255
400e811d:	0006a2        	l8ui	a10, a6, 0
400e8120:	0b0c      	movi.n	a11, 0
400e8122:	9a9a      	add.n	a9, a10, a9
400e8124:	160c      	movi.n	a6, 1
400e8126:	93b690        	movnez	a11, a6, a9
400e8129:	0b9d      	mov.n	a9, a11
400e812b:	54cc      	bnez.n	a4, 400e8134 <_svfiprintf_r+0x1b18>
400e812d:	9b0c      	movi.n	a11, 9
400e812f:	013be7        	bltu	a11, a14, 400e8134 <_svfiprintf_r+0x1b18>
400e8132:	046d      	mov.n	a6, a4
400e8134:	340967        	bnone	a9, a6, 400e816c <_svfiprintf_r+0x1b50>
400e8137:	319a37        	bne	a10, a3, 400e816c <_svfiprintf_r+0x1b50>
400e813a:	a12182        	l32i	a8, a1, 0x284
400e813d:	a221b2        	l32i	a11, a1, 0x288
400e8140:	c07780        	sub	a7, a7, a8
400e8143:	08cd      	mov.n	a12, a8
400e8145:	07ad      	mov.n	a10, a7
400e8147:	a561e2        	s32i	a14, a1, 0x294
400e814a:	a0a481        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400e814d:	0008e0        	callx8	a8
400e8150:	a02132        	l32i	a3, a1, 0x280
400e8153:	a02182        	l32i	a8, a1, 0x280
400e8156:	010392        	l8ui	a9, a3, 1
400e8159:	030c      	movi.n	a3, 0
400e815b:	036d      	mov.n	a6, a3
400e815d:	01a0a2        	movi	a10, 1
400e8160:	936a90        	movnez	a6, a10, a9
400e8163:	808860        	add	a8, a8, a6
400e8166:	a521e2        	l32i	a14, a1, 0x294
400e8169:	a06182        	s32i	a8, a1, 0x280
400e816c:	a182c1        	l32r	a12, 400d0774 <_flash_cache_start+0x75c>
400e816f:	9fbbd1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e8172:	0ead      	mov.n	a10, a14
400e8174:	04bd      	mov.n	a11, a4
400e8176:	9fb381        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400e8179:	0008e0        	callx8	a8
400e817c:	0aed      	mov.n	a14, a10
400e817e:	20aba0        	or	a10, a11, a10
400e8181:	0b4d      	mov.n	a4, a11
400e8183:	f6ba56        	bnez	a10, 400e80f2 <_svfiprintf_r+0x1ad6>
400e8186:	0011c6        	j	400e81d1 <_svfiprintf_r+0x1bb5>
400e8189:	90a192        	movi	a9, 0x190
400e818c:	991a      	add.n	a9, a9, a1
400e818e:	64c972        	addi	a7, a9, 100
400e8191:	9f2132        	l32i	a3, a1, 0x27c
400e8194:	3420e0        	extui	a2, a14, 0, 4
400e8197:	232a      	add.n	a2, a3, a2
400e8199:	000222        	l8ui	a2, a2, 0
400e819c:	770b      	addi.n	a7, a7, -1
400e819e:	004722        	s8i	a2, a7, 0
400e81a1:	41e4e0        	srli	a14, a14, 4
400e81a4:	012440        	slli	a2, a4, 28
400e81a7:	20e2e0        	or	a14, a2, a14
400e81aa:	414440        	srli	a4, a4, 4
400e81ad:	202e40        	or	a2, a14, a4
400e81b0:	fdd256        	bnez	a2, 400e8191 <_svfiprintf_r+0x1b75>
400e81b3:	000686        	j	400e81d1 <_svfiprintf_r+0x1bb5>
400e81b6:	90a142        	movi	a4, 0x190
400e81b9:	441a      	add.n	a4, a4, a1
400e81bb:	64c472        	addi	a7, a4, 100
400e81be:	f2cc      	bnez.n	a2, 400e81d1 <_svfiprintf_r+0x1bb5>
400e81c0:	0d6507        	bbci	a5, 0, 400e81d1 <_svfiprintf_r+0x1bb5>
400e81c3:	10c162        	addi	a6, a1, 16
400e81c6:	033c      	movi.n	a3, 48
400e81c8:	01d622        	addmi	a2, a6, 0x100
400e81cb:	e34232        	s8i	a3, a2, 227
400e81ce:	63c472        	addi	a7, a4, 99
400e81d1:	a32182        	l32i	a8, a1, 0x28c
400e81d4:	9a2122        	l32i	a2, a1, 0x268
400e81d7:	c08870        	sub	a8, a8, a7
400e81da:	9a6182        	s32i	a8, a1, 0x268
400e81dd:	0008c6        	j	400e8204 <_svfiprintf_r+0x1be8>
400e81e0:	981600        	lsi	f0, a6, 0x260
400e81e3:	3e          	.byte 0x3e
400e81e4:	10c192        	addi	a9, a1, 16
400e81e7:	01d922        	addmi	a2, a9, 0x100
400e81ea:	804282        	s8i	a8, a2, 128
400e81ed:	040c      	movi.n	a4, 0
400e81ef:	02d922        	addmi	a2, a9, 0x200
400e81f2:	3a4242        	s8i	a4, a2, 58
400e81f5:	986132        	s32i	a3, a1, 0x260
400e81f8:	120c      	movi.n	a2, 1
400e81fa:	90a132        	movi	a3, 0x190
400e81fd:	9a6122        	s32i	a2, a1, 0x268
400e8200:	713a      	add.n	a7, a1, a3
400e8202:	020c      	movi.n	a2, 0
400e8204:	9a2142        	l32i	a4, a1, 0x268
400e8207:	10c162        	addi	a6, a1, 16
400e820a:	533240        	max	a3, a2, a4
400e820d:	02d642        	addmi	a4, a6, 0x200
400e8210:	3a0462        	l8ui	a6, a4, 58
400e8213:	190c      	movi.n	a9, 1
400e8215:	040c      	movi.n	a4, 0
400e8217:	934960        	movnez	a4, a9, a6
400e821a:	334a      	add.n	a3, a3, a4
400e821c:	260c      	movi.n	a6, 2
400e821e:	84a042        	movi	a4, 132
400e8221:	106560        	and	a6, a5, a6
400e8224:	104540        	and	a4, a5, a4
400e8227:	336a      	add.n	a3, a3, a6
400e8229:	0a7456        	bnez	a4, 400e82d4 <_svfiprintf_r+0x1cb8>
400e822c:	9d2182        	l32i	a8, a1, 0x274
400e822f:	c09830        	sub	a9, a8, a3
400e8232:	0219e6        	bgei	a9, 1, 400e8238 <_svfiprintf_r+0x1c1c>
400e8235:	0026c6        	j	400e82d4 <_svfiprintf_r+0x1cb8>
400e8238:	0e1c      	movi.n	a14, 16
400e823a:	24a2d2        	movi	a13, 0x224
400e823d:	a1ea      	add.n	a10, a1, a14
400e823f:	dada      	add.n	a13, a10, a13
400e8241:	001286        	j	400e828f <_svfiprintf_r+0x1c73>
400e8244:	c1a200        	mul16u	a10, a2, a0
400e8247:	dab210        	ufloat.s	f11, a2, 1
400e824a:	21a202        	movi	a0, 0x221
400e824d:	8f          	.byte 0x8f
400e824e:	18e9      	s32i.n	a14, a8, 4
400e8250:	10caa2        	addi	a10, a10, 16
400e8253:	bba9      	s32i.n	a10, a11, 44
400e8255:	aba8      	l32i.n	a10, a11, 40
400e8257:	888b      	addi.n	a8, a8, 8
400e8259:	aa1b      	addi.n	a10, a10, 1
400e825b:	aba9      	s32i.n	a10, a11, 40
400e825d:	288aa6        	blti	a10, 8, 400e8289 <_svfiprintf_r+0x1c6d>
400e8260:	9b21b2        	l32i	a11, a1, 0x26c
400e8263:	9c21a2        	l32i	a10, a1, 0x270
400e8266:	20cdd0        	or	a12, a13, a13
400e8269:	a66192        	s32i	a9, a1, 0x298
400e826c:	a461d2        	s32i	a13, a1, 0x290
400e826f:	a561e2        	s32i	a14, a1, 0x294
400e8272:	fe2a25        	call8	400e6514 <__ssprint_r>
400e8275:	a62192        	l32i	a9, a1, 0x298
400e8278:	a421d2        	l32i	a13, a1, 0x290
400e827b:	a521e2        	l32i	a14, a1, 0x294
400e827e:	362a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e8281:	e4a1a2        	movi	a10, 0x1e4
400e8284:	10c182        	addi	a8, a1, 16
400e8287:	88aa      	add.n	a8, a8, a10
400e8289:	976182        	s32i	a8, a1, 0x25c
400e828c:	f0c992        	addi	a9, a9, -16
400e828f:	a17ca1        	l32r	a10, 400d0880 <_flash_cache_start+0x868>
400e8292:	972182        	l32i	a8, a1, 0x25c
400e8295:	08a9      	s32i.n	a10, a8, 0
400e8297:	aa2e97        	blt	a14, a9, 400e8245 <_svfiprintf_r+0x1c29>
400e829a:	10c1b2        	addi	a11, a1, 16
400e829d:	02dba2        	addmi	a10, a11, 0x200
400e82a0:	8f21b2        	l32i	a11, a1, 0x23c
400e82a3:	1899      	s32i.n	a9, a8, 4
400e82a5:	9b9a      	add.n	a9, a11, a9
400e82a7:	ba99      	s32i.n	a9, a10, 44
400e82a9:	aa98      	l32i.n	a9, a10, 40
400e82ab:	888b      	addi.n	a8, a8, 8
400e82ad:	991b      	addi.n	a9, a9, 1
400e82af:	aa99      	s32i.n	a9, a10, 40
400e82b1:	1c89a6        	blti	a9, 8, 400e82d1 <_svfiprintf_r+0x1cb5>
400e82b4:	24a2c2        	movi	a12, 0x224
400e82b7:	10c182        	addi	a8, a1, 16
400e82ba:	9b21b2        	l32i	a11, a1, 0x26c
400e82bd:	9c21a2        	l32i	a10, a1, 0x270
400e82c0:	c8ca      	add.n	a12, a8, a12
400e82c2:	fe2525        	call8	400e6514 <__ssprint_r>
400e82c5:	31ba56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e82c8:	e4a192        	movi	a9, 0x1e4
400e82cb:	10c182        	addi	a8, a1, 16
400e82ce:	808890        	add	a8, a8, a9
400e82d1:	976182        	s32i	a8, a1, 0x25c
400e82d4:	10c1a2        	addi	a10, a1, 16
400e82d7:	02da92        	addmi	a9, a10, 0x200
400e82da:	3a09a2        	l8ui	a10, a9, 58
400e82dd:	043a16        	beqz	a10, 400e8324 <_svfiprintf_r+0x1d08>
400e82e0:	972182        	l32i	a8, a1, 0x25c
400e82e3:	3aa2a2        	movi	a10, 0x23a
400e82e6:	10c1b2        	addi	a11, a1, 16
400e82e9:	abaa      	add.n	a10, a11, a10
400e82eb:	08a9      	s32i.n	a10, a8, 0
400e82ed:	1a0c      	movi.n	a10, 1
400e82ef:	18a9      	s32i.n	a10, a8, 4
400e82f1:	b9a8      	l32i.n	a10, a9, 44
400e82f3:	888b      	addi.n	a8, a8, 8
400e82f5:	aa1b      	addi.n	a10, a10, 1
400e82f7:	b9a9      	s32i.n	a10, a9, 44
400e82f9:	a9a8      	l32i.n	a10, a9, 40
400e82fb:	aa1b      	addi.n	a10, a10, 1
400e82fd:	0a69a2        	s32i	a10, a9, 40
400e8300:	1d8aa6        	blti	a10, 8, 400e8321 <_svfiprintf_r+0x1d05>
400e8303:	24a2c2        	movi	a12, 0x224
400e8306:	10c192        	addi	a9, a1, 16
400e8309:	9b21b2        	l32i	a11, a1, 0x26c
400e830c:	9c21a2        	l32i	a10, a1, 0x270
400e830f:	80c9c0        	add	a12, a9, a12
400e8312:	fe2025        	call8	400e6514 <__ssprint_r>
400e8315:	2cba56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e8318:	e4a192        	movi	a9, 0x1e4
400e831b:	10c182        	addi	a8, a1, 16
400e831e:	808890        	add	a8, a8, a9
400e8321:	976182        	s32i	a8, a1, 0x25c
400e8324:	043616        	beqz	a6, 400e836b <_svfiprintf_r+0x1d4f>
400e8327:	972182        	l32i	a8, a1, 0x25c
400e832a:	48a292        	movi	a9, 0x248
400e832d:	619a      	add.n	a6, a1, a9
400e832f:	0869      	s32i.n	a6, a8, 0
400e8331:	260c      	movi.n	a6, 2
400e8333:	1869      	s32i.n	a6, a8, 4
400e8335:	8f2162        	l32i	a6, a1, 0x23c
400e8338:	888b      	addi.n	a8, a8, 8
400e833a:	662b      	addi.n	a6, a6, 2
400e833c:	8f6162        	s32i	a6, a1, 0x23c
400e833f:	8e2162        	l32i	a6, a1, 0x238
400e8342:	661b      	addi.n	a6, a6, 1
400e8344:	8e6162        	s32i	a6, a1, 0x238
400e8347:	1d86a6        	blti	a6, 8, 400e8368 <_svfiprintf_r+0x1d4c>
400e834a:	10c1b2        	addi	a11, a1, 16
400e834d:	24a2c2        	movi	a12, 0x224
400e8350:	80cbc0        	add	a12, a11, a12
400e8353:	9c21a2        	l32i	a10, a1, 0x270
400e8356:	9b21b2        	l32i	a11, a1, 0x26c
400e8359:	fe1ba5        	call8	400e6514 <__ssprint_r>
400e835c:	284a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e835f:	e4a162        	movi	a6, 0x1e4
400e8362:	10c182        	addi	a8, a1, 16
400e8365:	808860        	add	a8, a8, a6
400e8368:	976182        	s32i	a8, a1, 0x25c
400e836b:	02e426        	beqi	a4, 128, 400e8371 <_svfiprintf_r+0x1d55>
400e836e:	002a86        	j	400e841c <_svfiprintf_r+0x1e00>
400e8371:	9d2192        	l32i	a9, a1, 0x274
400e8374:	c04930        	sub	a4, a9, a3
400e8377:	0214e6        	bgei	a4, 1, 400e837d <_svfiprintf_r+0x1d61>
400e837a:	002786        	j	400e841c <_svfiprintf_r+0x1e00>
400e837d:	0d1c      	movi.n	a13, 16
400e837f:	24a292        	movi	a9, 0x224
400e8382:	a1da      	add.n	a10, a1, a13
400e8384:	9a9a      	add.n	a9, a10, a9
400e8386:	001146        	j	400e83cf <_svfiprintf_r+0x1db3>
400e8389:	972182        	l32i	a8, a1, 0x25c
400e838c:	0869      	s32i.n	a6, a8, 0
400e838e:	8f2162        	l32i	a6, a1, 0x23c
400e8391:	18d9      	s32i.n	a13, a8, 4
400e8393:	10c662        	addi	a6, a6, 16
400e8396:	8f6162        	s32i	a6, a1, 0x23c
400e8399:	8e2162        	l32i	a6, a1, 0x238
400e839c:	888b      	addi.n	a8, a8, 8
400e839e:	661b      	addi.n	a6, a6, 1
400e83a0:	8e6162        	s32i	a6, a1, 0x238
400e83a3:	2286a6        	blti	a6, 8, 400e83c9 <_svfiprintf_r+0x1dad>
400e83a6:	9b21b2        	l32i	a11, a1, 0x26c
400e83a9:	9c21a2        	l32i	a10, a1, 0x270
400e83ac:	20c990        	or	a12, a9, a9
400e83af:	a66192        	s32i	a9, a1, 0x298
400e83b2:	a461d2        	s32i	a13, a1, 0x290
400e83b5:	fe15e5        	call8	400e6514 <__ssprint_r>
400e83b8:	a62192        	l32i	a9, a1, 0x298
400e83bb:	a421d2        	l32i	a13, a1, 0x290
400e83be:	222a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e83c1:	e4a162        	movi	a6, 0x1e4
400e83c4:	10c182        	addi	a8, a1, 16
400e83c7:	886a      	add.n	a8, a8, a6
400e83c9:	976182        	s32i	a8, a1, 0x25c
400e83cc:	f0c442        	addi	a4, a4, -16
400e83cf:	a12d61        	l32r	a6, 400d0884 <_flash_cache_start+0x86c>
400e83d2:	b32d47        	blt	a13, a4, 400e8389 <_svfiprintf_r+0x1d6d>
400e83d5:	972192        	l32i	a9, a1, 0x25c
400e83d8:	1949      	s32i.n	a4, a9, 4
400e83da:	0969      	s32i.n	a6, a9, 0
400e83dc:	8f2192        	l32i	a9, a1, 0x23c
400e83df:	494a      	add.n	a4, a9, a4
400e83e1:	8f6142        	s32i	a4, a1, 0x23c
400e83e4:	8e2142        	l32i	a4, a1, 0x238
400e83e7:	441b      	addi.n	a4, a4, 1
400e83e9:	8e6142        	s32i	a4, a1, 0x238
400e83ec:	0c84e6        	bgei	a4, 8, 400e83fc <_svfiprintf_r+0x1de0>
400e83ef:	972142        	l32i	a4, a1, 0x25c
400e83f2:	448b      	addi.n	a4, a4, 8
400e83f4:	976142        	s32i	a4, a1, 0x25c
400e83f7:	000846        	j	400e841c <_svfiprintf_r+0x1e00>
400e83fa:	c20000        	quou	a0, a0, a0
400e83fd:	6224a2        	l32i	a10, a4, 0x188
400e8400:	b210c1        	l32r	a12, 400d4c40 <fde_single_encoding_compare+0x18>
400e8403:	a29b21        	l32r	a2, 400d0e70 <void testDiv<unsigned char>(char const*)+0x120>
400e8406:	ca9c21        	l32r	a2, 400dae78 <_fseeko_r+0x278>
400e8409:	10a5c6        	j	400ec6a4 <_etext+0x1d3>
400e840c:	fe          	.byte 0xfe
400e840d:	1d3a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e8410:	e4a142        	movi	a4, 0x1e4
400e8413:	10c182        	addi	a8, a1, 16
400e8416:	808840        	add	a8, a8, a4
400e8419:	976182        	s32i	a8, a1, 0x25c
400e841c:	9a2192        	l32i	a9, a1, 0x268
400e841f:	c02290        	sub	a2, a2, a9
400e8422:	0212e6        	bgei	a2, 1, 400e8428 <_svfiprintf_r+0x1e0c>
400e8425:	0024c6        	j	400e84bc <_svfiprintf_r+0x1ea0>
400e8428:	091c      	movi.n	a9, 16
400e842a:	24a262        	movi	a6, 0x224
400e842d:	a19a      	add.n	a10, a1, a9
400e842f:	6a6a      	add.n	a6, a10, a6
400e8431:	000fc6        	j	400e8474 <_svfiprintf_r+0x1e58>
400e8434:	218200        	srai	a8, a0, 2
400e8437:	084997        	ball	a9, a9, 400e8443 <_svfiprintf_r+0x1e27>
400e843a:	8f2142        	l32i	a4, a1, 0x23c
400e843d:	1899      	s32i.n	a9, a8, 4
400e843f:	10c442        	addi	a4, a4, 16
400e8442:	8f6142        	s32i	a4, a1, 0x23c
400e8445:	8e2142        	l32i	a4, a1, 0x238
400e8448:	888b      	addi.n	a8, a8, 8
400e844a:	441b      	addi.n	a4, a4, 1
400e844c:	8e6142        	s32i	a4, a1, 0x238
400e844f:	1b84a6        	blti	a4, 8, 400e846e <_svfiprintf_r+0x1e52>
400e8452:	9b21b2        	l32i	a11, a1, 0x26c
400e8455:	9c21a2        	l32i	a10, a1, 0x270
400e8458:	06cd      	mov.n	a12, a6
400e845a:	a66192        	s32i	a9, a1, 0x298
400e845d:	fe0b65        	call8	400e6514 <__ssprint_r>
400e8460:	a62192        	l32i	a9, a1, 0x298
400e8463:	17da56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e8466:	e4a142        	movi	a4, 0x1e4
400e8469:	10c182        	addi	a8, a1, 16
400e846c:	884a      	add.n	a8, a8, a4
400e846e:	976182        	s32i	a8, a1, 0x25c
400e8471:	f0c222        	addi	a2, a2, -16
400e8474:	a10441        	l32r	a4, 400d0884 <_flash_cache_start+0x86c>
400e8477:	ba2927        	blt	a9, a2, 400e8435 <_svfiprintf_r+0x1e19>
400e847a:	972192        	l32i	a9, a1, 0x25c
400e847d:	8f2162        	l32i	a6, a1, 0x23c
400e8480:	1929      	s32i.n	a2, a9, 4
400e8482:	262a      	add.n	a2, a6, a2
400e8484:	8f6122        	s32i	a2, a1, 0x23c
400e8487:	8e2122        	l32i	a2, a1, 0x238
400e848a:	0949      	s32i.n	a4, a9, 0
400e848c:	221b      	addi.n	a2, a2, 1
400e848e:	8e6122        	s32i	a2, a1, 0x238
400e8491:	0782e6        	bgei	a2, 8, 400e849c <_svfiprintf_r+0x1e80>
400e8494:	998b      	addi.n	a9, a9, 8
400e8496:	976192        	s32i	a9, a1, 0x25c
400e8499:	0007c6        	j	400e84bc <_svfiprintf_r+0x1ea0>
400e849c:	10c1b2        	addi	a11, a1, 16
400e849f:	24a2c2        	movi	a12, 0x224
400e84a2:	cbca      	add.n	a12, a11, a12
400e84a4:	9c21a2        	l32i	a10, a1, 0x270
400e84a7:	9b21b2        	l32i	a11, a1, 0x26c
400e84aa:	fe06a5        	call8	400e6514 <__ssprint_r>
400e84ad:	133a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e84b0:	e4a122        	movi	a2, 0x1e4
400e84b3:	10c142        	addi	a4, a1, 16
400e84b6:	804420        	add	a4, a4, a2
400e84b9:	976142        	s32i	a4, a1, 0x25c
400e84bc:	10c192        	addi	a9, a1, 16
400e84bf:	02d942        	addmi	a4, a9, 0x200
400e84c2:	a428      	l32i.n	a2, a4, 40
400e84c4:	9a2182        	l32i	a8, a1, 0x268
400e84c7:	8f2192        	l32i	a9, a1, 0x23c
400e84ca:	972162        	l32i	a6, a1, 0x25c
400e84cd:	998a      	add.n	a9, a9, a8
400e84cf:	221b      	addi.n	a2, a2, 1
400e84d1:	b499      	s32i.n	a9, a4, 44
400e84d3:	a429      	s32i.n	a2, a4, 40
400e84d5:	0679      	s32i.n	a7, a6, 0
400e84d7:	1689      	s32i.n	a8, a6, 4
400e84d9:	08c642        	addi	a4, a6, 8
400e84dc:	1d82a6        	blti	a2, 8, 400e84fd <_svfiprintf_r+0x1ee1>
400e84df:	10c1a2        	addi	a10, a1, 16
400e84e2:	24a2c2        	movi	a12, 0x224
400e84e5:	80cac0        	add	a12, a10, a12
400e84e8:	9b21b2        	l32i	a11, a1, 0x26c
400e84eb:	9c21a2        	l32i	a10, a1, 0x270
400e84ee:	fe0265        	call8	400e6514 <__ssprint_r>
400e84f1:	0efa56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e84f4:	e4a142        	movi	a4, 0x1e4
400e84f7:	10c1b2        	addi	a11, a1, 16
400e84fa:	804b40        	add	a4, a11, a4
400e84fd:	17e527        	bbsi	a5, 2, 400e8518 <_svfiprintf_r+0x1efc>
400e8500:	9d2122        	l32i	a2, a1, 0x274
400e8503:	9e2142        	l32i	a4, a1, 0x278
400e8506:	533230        	max	a3, a2, a3
400e8509:	443a      	add.n	a4, a4, a3
400e850b:	8f2122        	l32i	a2, a1, 0x23c
400e850e:	9e6142        	s32i	a4, a1, 0x278
400e8511:	08b216        	beqz	a2, 400e85a0 <_svfiprintf_r+0x1f84>
400e8514:	0027c6        	j	400e85b7 <_svfiprintf_r+0x1f9b>
400e8517:	215200        	srai	a5, a0, 2
400e851a:	309d      	lsi	f9, a0, 0
400e851c:	a6c025        	call8	4008f120 <_iram_end+0x15cc>
400e851f:	1cde12        	addmi	a1, a14, 0x1c00
400e8522:	6208      	l32i.n	a0, a2, 24
400e8524:	8a24a2        	l32i	a10, a4, 0x228
400e8527:	696a91        	l32r	a9, 400c2ad0 <_rtc_text_end+0x2ad0>
400e852a:	000dc6        	j	400e8565 <_svfiprintf_r+0x1f49>
400e852d:	8f2152        	l32i	a5, a1, 0x23c
400e8530:	1489      	s32i.n	a8, a4, 4
400e8532:	10c552        	addi	a5, a5, 16
400e8535:	8f6152        	s32i	a5, a1, 0x23c
400e8538:	8e2152        	l32i	a5, a1, 0x238
400e853b:	448b      	addi.n	a4, a4, 8
400e853d:	01c552        	addi	a5, a5, 1
400e8540:	8e6152        	s32i	a5, a1, 0x238
400e8543:	1b85a6        	blti	a5, 8, 400e8562 <_svfiprintf_r+0x1f46>
400e8546:	9b21b2        	l32i	a11, a1, 0x26c
400e8549:	9c21a2        	l32i	a10, a1, 0x270
400e854c:	06cd      	mov.n	a12, a6
400e854e:	a46182        	s32i	a8, a1, 0x290
400e8551:	fdfc25        	call8	400e6514 <__ssprint_r>
400e8554:	a42182        	l32i	a8, a1, 0x290
400e8557:	089a56        	bnez	a10, 400e85e4 <_svfiprintf_r+0x1fc8>
400e855a:	e4a142        	movi	a4, 0x1e4
400e855d:	10c1b2        	addi	a11, a1, 16
400e8560:	4b4a      	add.n	a4, a11, a4
400e8562:	f0c222        	addi	a2, a2, -16
400e8565:	a0c651        	l32r	a5, 400d0880 <_flash_cache_start+0x868>
400e8568:	0459      	s32i.n	a5, a4, 0
400e856a:	bf2827        	blt	a8, a2, 400e852d <_svfiprintf_r+0x1f11>
400e856d:	10c152        	addi	a5, a1, 16
400e8570:	1429      	s32i.n	a2, a4, 4
400e8572:	02d542        	addmi	a4, a5, 0x200
400e8575:	8f2152        	l32i	a5, a1, 0x23c
400e8578:	252a      	add.n	a2, a5, a2
400e857a:	b429      	s32i.n	a2, a4, 44
400e857c:	a428      	l32i.n	a2, a4, 40
400e857e:	221b      	addi.n	a2, a2, 1
400e8580:	a429      	s32i.n	a2, a4, 40
400e8582:	0282e6        	bgei	a2, 8, 400e8588 <_svfiprintf_r+0x1f6c>
400e8585:	ffddc6        	j	400e8500 <_svfiprintf_r+0x1ee4>
400e8588:	24a2c2        	movi	a12, 0x224
400e858b:	10c162        	addi	a6, a1, 16
400e858e:	9b21b2        	l32i	a11, a1, 0x26c
400e8591:	9c21a2        	l32i	a10, a1, 0x270
400e8594:	c6ca      	add.n	a12, a6, a12
400e8596:	fdf7e5        	call8	400e6514 <__ssprint_r>
400e8599:	f63a16        	beqz	a10, 400e8500 <_svfiprintf_r+0x1ee4>
400e859c:	001106        	j	400e85e4 <_svfiprintf_r+0x1fc8>
400e859f:	030c00        	rsr.scompare1	a0
400e85a2:	10c182        	addi	a8, a1, 16
400e85a5:	8e6132        	s32i	a3, a1, 0x238
400e85a8:	e4a132        	movi	a3, 0x1e4
400e85ab:	983a      	add.n	a9, a8, a3
400e85ad:	982122        	l32i	a2, a1, 0x260
400e85b0:	976192        	s32i	a9, a1, 0x25c
400e85b3:	f83b06        	j	400e66a3 <_svfiprintf_r+0x87>
400e85b6:	c1a200        	mul16u	a10, a2, a0
400e85b9:	a2c210        	muluh	a12, a2, a1
400e85bc:	caca24        	lsi	f2, a10, 0x328
400e85bf:	9b21b2        	l32i	a11, a1, 0x26c
400e85c2:	9c21a2        	l32i	a10, a1, 0x270
400e85c5:	fdf4e5        	call8	400e6514 <__ssprint_r>
400e85c8:	fd4a16        	beqz	a10, 400e85a0 <_svfiprintf_r+0x1f84>
400e85cb:	000546        	j	400e85e4 <_svfiprintf_r+0x1fc8>
400e85ce:	8f2122        	l32i	a2, a1, 0x23c
400e85d1:	f28c      	beqz.n	a2, 400e85e4 <_svfiprintf_r+0x1fc8>
400e85d3:	10c1b2        	addi	a11, a1, 16
400e85d6:	24a2c2        	movi	a12, 0x224
400e85d9:	cbca      	add.n	a12, a11, a12
400e85db:	9c21a2        	l32i	a10, a1, 0x270
400e85de:	9b21b2        	l32i	a11, a1, 0x26c
400e85e1:	fdf325        	call8	400e6514 <__ssprint_r>
400e85e4:	9b2132        	l32i	a3, a1, 0x26c
400e85e7:	9e2142        	l32i	a4, a1, 0x278
400e85ea:	061322        	l16ui	a2, a3, 12
400e85ed:	f37c      	movi.n	a3, -1
400e85ef:	042620        	extui	a2, a2, 6, 1
400e85f2:	934320        	movnez	a4, a3, a2
400e85f5:	042d      	mov.n	a2, a4
400e85f7:	f01d      	retw.n
400e85f9:	912142        	l32i	a4, a1, 0x244
400e85fc:	831b      	addi.n	a8, a3, 1
400e85fe:	02a347        	bge	a3, a4, 400e8604 <_svfiprintf_r+0x1fe8>
400e8601:	f89206        	j	400e684d <_svfiprintf_r+0x231>
400e8604:	f89386        	j	400e6856 <_svfiprintf_r+0x23a>
400e8607:	218200        	srai	a8, a0, 2
400e860a:	931b91        	l32r	a9, 400cd278 <_rtc_text_end+0xd278>
400e860d:	02a387        	bge	a3, a8, 400e8613 <_svfiprintf_r+0x1ff7>
400e8610:	f8db46        	j	400e6981 <_svfiprintf_r+0x365>
400e8613:	f8dcc6        	j	400e698a <_svfiprintf_r+0x36e>
	...

400e8618 <uart_pattern_queue_update>:
400e8618:	006136        	entry	a1, 48
400e861b:	a09b41        	l32r	a4, 400d0888 <_flash_cache_start+0x870>
400e861e:	a04240        	addx4	a4, a2, a4
400e8621:	0448      	l32i.n	a4, a4, 0
400e8623:	94ec      	bnez.n	a4, 400e8650 <uart_pattern_queue_update+0x38>
400e8625:	9b70a5        	call8	40083d30 <esp_log_timestamp>
400e8628:	a09ab1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e862b:	a09b21        	l32r	a2, 400d0898 <_flash_cache_start+0x880>
400e862e:	1129      	s32i.n	a2, a1, 4
400e8630:	8da122        	movi	a2, 0x18d
400e8633:	0129      	s32i.n	a2, a1, 0
400e8635:	f03d      	nop.n
400e8637:	f03d      	nop.n
400e8639:	f03d      	nop.n
400e863b:	f03d      	nop.n
400e863d:	a093f1        	l32r	a15, 400d088c <_flash_cache_start+0x874>
400e8640:	0bed      	mov.n	a14, a11
400e8642:	0add      	mov.n	a13, a10
400e8644:	a094c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8647:	1a0c      	movi.n	a10, 1
400e8649:	9b56e5        	call8	40083bb8 <esp_log_write>
400e864c:	f27c      	movi.n	a2, -1
400e864e:	f01d      	retw.n
400e8650:	a09341        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e8653:	b04240        	addx8	a4, a2, a4
400e8656:	04ad      	mov.n	a10, a4
400e8658:	a04365        	call8	40088a90 <vTaskEnterCritical>
400e865b:	a08b81        	l32r	a8, 400d0888 <_flash_cache_start+0x870>
400e865e:	a02280        	addx4	a2, a2, a8
400e8661:	02b8      	l32i.n	a11, a2, 0
400e8663:	302b82        	l32i	a8, a11, 192
400e8666:	000b86        	j	400e8698 <uart_pattern_queue_update+0x80>
400e8669:	322ba2        	l32i	a10, a11, 200
400e866c:	1198e0        	slli	a9, a8, 2
400e866f:	aa9a      	add.n	a10, a10, a9
400e8671:	0ac8      	l32i.n	a12, a10, 0
400e8673:	c0cc30        	sub	a12, a12, a3
400e8676:	0ac9      	s32i.n	a12, a10, 0
400e8678:	881b      	addi.n	a8, a8, 1
400e867a:	f03d      	nop.n
400e867c:	f03d      	nop.n
400e867e:	f03d      	nop.n
400e8680:	312ba2        	l32i	a10, a11, 196
400e8683:	0228a7        	blt	a8, a10, 400e8689 <uart_pattern_queue_update+0x71>
400e8686:	00a082        	movi	a8, 0
400e8689:	322ba2        	l32i	a10, a11, 200
400e868c:	809a90        	add	a9, a10, a9
400e868f:	002992        	l32i	a9, a9, 0
400e8692:	0029d6        	bgez	a9, 400e8698 <uart_pattern_queue_update+0x80>
400e8695:	306b82        	s32i	a8, a11, 192
400e8698:	f03d      	nop.n
400e869a:	f03d      	nop.n
400e869c:	f03d      	nop.n
400e869e:	f03d      	nop.n
400e86a0:	2f2b92        	l32i	a9, a11, 188
400e86a3:	c29897        	bne	a8, a9, 400e8669 <uart_pattern_queue_update+0x51>
400e86a6:	20a440        	or	a10, a4, a4
400e86a9:	a05265        	call8	40088bd0 <vTaskExitCritical>
400e86ac:	020c      	movi.n	a2, 0
400e86ae:	f01d      	retw.n

400e86b0 <uart_reset_rx_fifo>:
400e86b0:	006136        	entry	a1, 48
400e86b3:	7132b6        	bltui	a2, 3, 400e8728 <uart_reset_rx_fifo+0x78>
400e86b6:	9b67a5        	call8	40083d30 <esp_log_timestamp>
400e86b9:	a075b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e86bc:	a07b21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e86bf:	016122        	s32i	a2, a1, 4
400e86c2:	2aa122        	movi	a2, 0x12a
400e86c5:	006122        	s32i	a2, a1, 0
400e86c8:	f03d      	nop.n
400e86ca:	f03d      	nop.n
400e86cc:	f03d      	nop.n
400e86ce:	f03d      	nop.n
400e86d0:	a075f1        	l32r	a15, 400d08a4 <_flash_cache_start+0x88c>
400e86d3:	0bed      	mov.n	a14, a11
400e86d5:	0add      	mov.n	a13, a10
400e86d7:	a06fc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e86da:	01a0a2        	movi	a10, 1
400e86dd:	9b4da5        	call8	40083bb8 <esp_log_write>
400e86e0:	f27c      	movi.n	a2, -1
400e86e2:	f01d      	retw.n
400e86e4:	a07281        	l32r	a8, 400d08ac <_flash_cache_start+0x894>
400e86e7:	828a      	add.n	a8, a2, a8
400e86e9:	118800        	slli	a8, a8, 16
400e86ec:	0522b6        	bltui	a2, 2, 400e86f5 <uart_reset_rx_fifo+0x45>
400e86ef:	a06c91        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e86f2:	000046        	j	400e86f7 <uart_reset_rx_fifo+0x47>
400e86f5:	090c      	movi.n	a9, 0
400e86f7:	a98a      	add.n	a10, a9, a8
400e86f9:	a06d91        	l32r	a9, 400d08b0 <_flash_cache_start+0x898>
400e86fc:	809a90        	add	a9, a10, a9
400e86ff:	a06da1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8702:	0e3a97        	bltu	a10, a9, 400e8714 <uart_reset_rx_fifo+0x64>
400e8705:	a06cd1        	l32r	a13, 400d08b8 <_flash_cache_start+0x8a0>
400e8708:	a06dc1        	l32r	a12, 400d08bc <_flash_cache_start+0x8a4>
400e870b:	30a1b2        	movi	a11, 0x130
400e870e:	a06ca1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8711:	f23ba5        	call8	400daacc <__assert_func>
400e8714:	0522b6        	bltui	a2, 2, 400e871d <uart_reset_rx_fifo+0x6d>
400e8717:	a06291        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e871a:	000046        	j	400e871f <uart_reset_rx_fifo+0x6f>
400e871d:	090c      	movi.n	a9, 0
400e871f:	808980        	add	a8, a9, a8
400e8722:	0020c0        	memw
400e8725:	002882        	l32i	a8, a8, 0
400e8728:	a06781        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e872b:	a08280        	addx4	a8, a2, a8
400e872e:	0898      	l32i.n	a9, a8, 0
400e8730:	0020c0        	memw
400e8733:	7988      	l32i.n	a8, a9, 28
400e8735:	748080        	extui	a8, a8, 0, 8
400e8738:	fa8856        	bnez	a8, 400e86e4 <uart_reset_rx_fifo+0x34>
400e873b:	0020c0        	memw
400e873e:	1829a2        	l32i	a10, a9, 96
400e8741:	a4ada0        	extui	a10, a10, 13, 11
400e8744:	0020c0        	memw
400e8747:	182982        	l32i	a8, a9, 96
400e874a:	a48280        	extui	a8, a8, 2, 11
400e874d:	939a87        	bne	a10, a8, 400e86e4 <uart_reset_rx_fifo+0x34>
400e8750:	020c      	movi.n	a2, 0
400e8752:	f01d      	retw.n

400e8754 <uart_set_word_length>:
400e8754:	006136        	entry	a1, 48
400e8757:	2d32b6        	bltui	a2, 3, 400e8788 <uart_set_word_length+0x34>
400e875a:	9b5d65        	call8	40083d30 <esp_log_timestamp>
400e875d:	a04cb1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8760:	a05221        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8763:	016122        	s32i	a2, a1, 4
400e8766:	7ca022        	movi	a2, 124
400e8769:	006122        	s32i	a2, a1, 0
400e876c:	f03d      	nop.n
400e876e:	f03d      	nop.n
400e8770:	f03d      	nop.n
400e8772:	f03d      	nop.n
400e8774:	a055f1        	l32r	a15, 400d08c8 <_flash_cache_start+0x8b0>
400e8777:	0bed      	mov.n	a14, a11
400e8779:	0add      	mov.n	a13, a10
400e877b:	a046c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e877e:	01a0a2        	movi	a10, 1
400e8781:	9b4365        	call8	40083bb8 <esp_log_write>
400e8784:	f27c      	movi.n	a2, -1
400e8786:	f01d      	retw.n
400e8788:	2c43b6        	bltui	a3, 4, 400e87b8 <uart_set_word_length+0x64>
400e878b:	9b5a65        	call8	40083d30 <esp_log_timestamp>
400e878e:	a040b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8791:	a04e21        	l32r	a2, 400d08cc <_flash_cache_start+0x8b4>
400e8794:	016122        	s32i	a2, a1, 4
400e8797:	7da022        	movi	a2, 125
400e879a:	006122        	s32i	a2, a1, 0
400e879d:	f03d      	nop.n
400e879f:	f03d      	nop.n
400e87a1:	f03d      	nop.n
400e87a3:	f03d      	nop.n
400e87a5:	a048f1        	l32r	a15, 400d08c8 <_flash_cache_start+0x8b0>
400e87a8:	0bed      	mov.n	a14, a11
400e87aa:	0add      	mov.n	a13, a10
400e87ac:	a03ac1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e87af:	1a0c      	movi.n	a10, 1
400e87b1:	9b4065        	call8	40083bb8 <esp_log_write>
400e87b4:	f27c      	movi.n	a2, -1
400e87b6:	f01d      	retw.n
400e87b8:	a03941        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e87bb:	b04240        	addx8	a4, a2, a4
400e87be:	20a440        	or	a10, a4, a4
400e87c1:	a02ce5        	call8	40088a90 <vTaskEnterCritical>
400e87c4:	a04081        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e87c7:	a02280        	addx4	a2, a2, a8
400e87ca:	002292        	l32i	a9, a2, 0
400e87cd:	0020c0        	memw
400e87d0:	89a8      	l32i.n	a10, a9, 32
400e87d2:	143030        	extui	a3, a3, 0, 2
400e87d5:	1183e0        	slli	a8, a3, 2
400e87d8:	327c      	movi.n	a2, -13
400e87da:	103a20        	and	a3, a10, a2
400e87dd:	203380        	or	a3, a3, a8
400e87e0:	0020c0        	memw
400e87e3:	8939      	s32i.n	a3, a9, 32
400e87e5:	04ad      	mov.n	a10, a4
400e87e7:	a03ea5        	call8	40088bd0 <vTaskExitCritical>
400e87ea:	020c      	movi.n	a2, 0
400e87ec:	f01d      	retw.n
	...

400e87f0 <uart_get_word_length>:
400e87f0:	006136        	entry	a1, 48
400e87f3:	2d32b6        	bltui	a2, 3, 400e8824 <uart_get_word_length+0x34>
400e87f6:	9b53a5        	call8	40083d30 <esp_log_timestamp>
400e87f9:	a025b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e87fc:	a02b21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e87ff:	016122        	s32i	a2, a1, 4
400e8802:	86a022        	movi	a2, 134
400e8805:	006122        	s32i	a2, a1, 0
400e8808:	f03d      	nop.n
400e880a:	f03d      	nop.n
400e880c:	f03d      	nop.n
400e880e:	f03d      	nop.n
400e8810:	a030f1        	l32r	a15, 400d08d0 <_flash_cache_start+0x8b8>
400e8813:	0bed      	mov.n	a14, a11
400e8815:	0add      	mov.n	a13, a10
400e8817:	a01fc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e881a:	01a0a2        	movi	a10, 1
400e881d:	9b39a5        	call8	40083bb8 <esp_log_write>
400e8820:	f27c      	movi.n	a2, -1
400e8822:	f01d      	retw.n
400e8824:	a02881        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e8827:	a02280        	addx4	a2, a2, a8
400e882a:	0228      	l32i.n	a2, a2, 0
400e882c:	0020c0        	memw
400e882f:	8228      	l32i.n	a2, a2, 32
400e8831:	142220        	extui	a2, a2, 2, 2
400e8834:	0329      	s32i.n	a2, a3, 0
400e8836:	020c      	movi.n	a2, 0
400e8838:	f01d      	retw.n
	...

400e883c <uart_set_stop_bits>:
400e883c:	006136        	entry	a1, 48
400e883f:	2d32b6        	bltui	a2, 3, 400e8870 <uart_set_stop_bits+0x34>
400e8842:	9b4ee5        	call8	40083d30 <esp_log_timestamp>
400e8845:	a012b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8848:	a01821        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e884b:	016122        	s32i	a2, a1, 4
400e884e:	8da022        	movi	a2, 141
400e8851:	006122        	s32i	a2, a1, 0
400e8854:	f03d      	nop.n
400e8856:	f03d      	nop.n
400e8858:	f03d      	nop.n
400e885a:	f03d      	nop.n
400e885c:	a01ef1        	l32r	a15, 400d08d4 <_flash_cache_start+0x8bc>
400e885f:	0bed      	mov.n	a14, a11
400e8861:	0add      	mov.n	a13, a10
400e8863:	a00cc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8866:	01a0a2        	movi	a10, 1
400e8869:	9b34e5        	call8	40083bb8 <esp_log_write>
400e886c:	f27c      	movi.n	a2, -1
400e886e:	f01d      	retw.n
400e8870:	2c43b6        	bltui	a3, 4, 400e88a0 <uart_set_stop_bits+0x64>
400e8873:	9b4be5        	call8	40083d30 <esp_log_timestamp>
400e8876:	a006b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8879:	a01721        	l32r	a2, 400d08d8 <_flash_cache_start+0x8c0>
400e887c:	016122        	s32i	a2, a1, 4
400e887f:	8ea022        	movi	a2, 142
400e8882:	006122        	s32i	a2, a1, 0
400e8885:	f03d      	nop.n
400e8887:	f03d      	nop.n
400e8889:	f03d      	nop.n
400e888b:	f03d      	nop.n
400e888d:	a011f1        	l32r	a15, 400d08d4 <_flash_cache_start+0x8bc>
400e8890:	0bed      	mov.n	a14, a11
400e8892:	0add      	mov.n	a13, a10
400e8894:	a000c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8897:	1a0c      	movi.n	a10, 1
400e8899:	9b31e5        	call8	40083bb8 <esp_log_write>
400e889c:	f27c      	movi.n	a2, -1
400e889e:	f01d      	retw.n
400e88a0:	9fff41        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e88a3:	b04240        	addx8	a4, a2, a4
400e88a6:	20a440        	or	a10, a4, a4
400e88a9:	a01e65        	call8	40088a90 <vTaskEnterCritical>
400e88ac:	1f3366        	bnei	a3, 3, 400e88cf <uart_set_stop_bits+0x93>
400e88af:	a00531        	l32r	a3, 400d08c4 <_flash_cache_start+0x8ac>
400e88b2:	a03230        	addx4	a3, a2, a3
400e88b5:	002382        	l32i	a8, a3, 0
400e88b8:	0020c0        	memw
400e88bb:	112892        	l32i	a9, a8, 68
400e88be:	04a032        	movi	a3, 4
400e88c1:	203930        	or	a3, a9, a3
400e88c4:	0020c0        	memw
400e88c7:	116832        	s32i	a3, a8, 68
400e88ca:	130c      	movi.n	a3, 1
400e88cc:	000686        	j	400e88ea <uart_set_stop_bits+0xae>
400e88cf:	9ffd81        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e88d2:	a08280        	addx4	a8, a2, a8
400e88d5:	002892        	l32i	a9, a8, 0
400e88d8:	0020c0        	memw
400e88db:	1129a2        	l32i	a10, a9, 68
400e88de:	fbaf82        	movi	a8, -5
400e88e1:	108a80        	and	a8, a10, a8
400e88e4:	0020c0        	memw
400e88e7:	116982        	s32i	a8, a9, 68
400e88ea:	f03d      	nop.n
400e88ec:	f03d      	nop.n
400e88ee:	f03d      	nop.n
400e88f0:	f03d      	nop.n
400e88f2:	9ff481        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e88f5:	a02280        	addx4	a2, a2, a8
400e88f8:	002292        	l32i	a9, a2, 0
400e88fb:	0020c0        	memw
400e88fe:	89a8      	l32i.n	a10, a9, 32
400e8900:	143030        	extui	a3, a3, 0, 2
400e8903:	1183c0        	slli	a8, a3, 4
400e8906:	cfaf22        	movi	a2, -49
400e8909:	103a20        	and	a3, a10, a2
400e890c:	203380        	or	a3, a3, a8
400e890f:	0020c0        	memw
400e8912:	8939      	s32i.n	a3, a9, 32
400e8914:	04ad      	mov.n	a10, a4
400e8916:	a02ba5        	call8	40088bd0 <vTaskExitCritical>
400e8919:	020c      	movi.n	a2, 0
400e891b:	f01d      	retw.n
400e891d:	000000        	ill

400e8920 <uart_get_stop_bits>:
400e8920:	006136        	entry	a1, 48
400e8923:	2d32b6        	bltui	a2, 3, 400e8954 <uart_get_stop_bits+0x34>
400e8926:	9b40a5        	call8	40083d30 <esp_log_timestamp>
400e8929:	9fd9b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e892c:	9fdf21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e892f:	016122        	s32i	a2, a1, 4
400e8932:	9fa022        	movi	a2, 159
400e8935:	006122        	s32i	a2, a1, 0
400e8938:	f03d      	nop.n
400e893a:	f03d      	nop.n
400e893c:	f03d      	nop.n
400e893e:	f03d      	nop.n
400e8940:	9fe7f1        	l32r	a15, 400d08dc <_flash_cache_start+0x8c4>
400e8943:	0bed      	mov.n	a14, a11
400e8945:	0add      	mov.n	a13, a10
400e8947:	9fd3c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e894a:	01a0a2        	movi	a10, 1
400e894d:	9b26a5        	call8	40083bb8 <esp_log_write>
400e8950:	f27c      	movi.n	a2, -1
400e8952:	f01d      	retw.n
400e8954:	9fdc81        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e8957:	a02280        	addx4	a2, a2, a8
400e895a:	0228      	l32i.n	a2, a2, 0
400e895c:	0020c0        	memw
400e895f:	112282        	l32i	a8, a2, 68
400e8962:	126827        	bbci	a8, 2, 400e8978 <uart_get_stop_bits+0x58>
400e8965:	0020c0        	memw
400e8968:	8288      	l32i.n	a8, a2, 32
400e896a:	148480        	extui	a8, a8, 4, 2
400e896d:	071866        	bnei	a8, 1, 400e8978 <uart_get_stop_bits+0x58>
400e8970:	320c      	movi.n	a2, 3
400e8972:	0329      	s32i.n	a2, a3, 0
400e8974:	020c      	movi.n	a2, 0
400e8976:	f01d      	retw.n
400e8978:	0020c0        	memw
400e897b:	8228      	l32i.n	a2, a2, 32
400e897d:	142420        	extui	a2, a2, 4, 2
400e8980:	0329      	s32i.n	a2, a3, 0
400e8982:	020c      	movi.n	a2, 0
400e8984:	f01d      	retw.n
	...

400e8988 <uart_set_parity>:
400e8988:	006136        	entry	a1, 48
400e898b:	2e32b6        	bltui	a2, 3, 400e89bd <uart_set_parity+0x35>
400e898e:	9b3a25        	call8	40083d30 <esp_log_timestamp>
400e8991:	9fbfb1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8994:	9fc521        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8997:	016122        	s32i	a2, a1, 4
400e899a:	aba022        	movi	a2, 171
400e899d:	006122        	s32i	a2, a1, 0
400e89a0:	f03d      	nop.n
400e89a2:	f03d      	nop.n
400e89a4:	f03d      	nop.n
400e89a6:	f03d      	nop.n
400e89a8:	9fcef1        	l32r	a15, 400d08e0 <_flash_cache_start+0x8c8>
400e89ab:	0bed      	mov.n	a14, a11
400e89ad:	0add      	mov.n	a13, a10
400e89af:	9fb9c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e89b2:	01a0a2        	movi	a10, 1
400e89b5:	9b2025        	call8	40083bb8 <esp_log_write>
400e89b8:	f27c      	movi.n	a2, -1
400e89ba:	f01d      	retw.n
400e89bc:	b74100        	lsi	f0, a1, 0x2dc
400e89bf:	9f          	.byte 0x9f
400e89c0:	b04240        	addx8	a4, a2, a4
400e89c3:	20a440        	or	a10, a4, a4
400e89c6:	a00ca5        	call8	40088a90 <vTaskEnterCritical>
400e89c9:	9fbe81        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e89cc:	a02280        	addx4	a2, a2, a8
400e89cf:	002222        	l32i	a2, a2, 0
400e89d2:	0020c0        	memw
400e89d5:	0822a2        	l32i	a10, a2, 32
400e89d8:	049030        	extui	a9, a3, 0, 1
400e89db:	e87c      	movi.n	a8, -2
400e89dd:	108a80        	and	a8, a10, a8
400e89e0:	208890        	or	a8, a8, a9
400e89e3:	0020c0        	memw
400e89e6:	8289      	s32i.n	a8, a2, 32
400e89e8:	f03d      	nop.n
400e89ea:	f03d      	nop.n
400e89ec:	f03d      	nop.n
400e89ee:	f03d      	nop.n
400e89f0:	0020c0        	memw
400e89f3:	8298      	l32i.n	a9, a2, 32
400e89f5:	043130        	extui	a3, a3, 1, 1
400e89f8:	1183f0        	slli	a8, a3, 1
400e89fb:	d37c      	movi.n	a3, -3
400e89fd:	103930        	and	a3, a9, a3
400e8a00:	203380        	or	a3, a3, a8
400e8a03:	0020c0        	memw
400e8a06:	8239      	s32i.n	a3, a2, 32
400e8a08:	04ad      	mov.n	a10, a4
400e8a0a:	a01c65        	call8	40088bd0 <vTaskExitCritical>
400e8a0d:	020c      	movi.n	a2, 0
400e8a0f:	f01d      	retw.n
400e8a11:	000000        	ill

400e8a14 <uart_get_parity>:
400e8a14:	006136        	entry	a1, 48
400e8a17:	2d32b6        	bltui	a2, 3, 400e8a48 <uart_get_parity+0x34>
400e8a1a:	9b3165        	call8	40083d30 <esp_log_timestamp>
400e8a1d:	9f9cb1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8a20:	9fa221        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8a23:	016122        	s32i	a2, a1, 4
400e8a26:	b5a022        	movi	a2, 181
400e8a29:	006122        	s32i	a2, a1, 0
400e8a2c:	f03d      	nop.n
400e8a2e:	f03d      	nop.n
400e8a30:	f03d      	nop.n
400e8a32:	f03d      	nop.n
400e8a34:	9facf1        	l32r	a15, 400d08e4 <_flash_cache_start+0x8cc>
400e8a37:	0bed      	mov.n	a14, a11
400e8a39:	0add      	mov.n	a13, a10
400e8a3b:	9f96c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8a3e:	01a0a2        	movi	a10, 1
400e8a41:	9b1765        	call8	40083bb8 <esp_log_write>
400e8a44:	f27c      	movi.n	a2, -1
400e8a46:	f01d      	retw.n
400e8a48:	9f9f81        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e8a4b:	a02280        	addx4	a2, a2, a8
400e8a4e:	0228      	l32i.n	a2, a2, 0
400e8a50:	0020c0        	memw
400e8a53:	8228      	l32i.n	a2, a2, 32
400e8a55:	136217        	bbci	a2, 1, 400e8a6c <uart_get_parity+0x58>
400e8a58:	086207        	bbci	a2, 0, 400e8a64 <uart_get_parity+0x50>
400e8a5b:	320c      	movi.n	a2, 3
400e8a5d:	0329      	s32i.n	a2, a3, 0
400e8a5f:	020c      	movi.n	a2, 0
400e8a61:	f01d      	retw.n
400e8a63:	220c00        	orb	b0, b12, b0
400e8a66:	0329      	s32i.n	a2, a3, 0
400e8a68:	020c      	movi.n	a2, 0
400e8a6a:	f01d      	retw.n
400e8a6c:	020c      	movi.n	a2, 0
400e8a6e:	0329      	s32i.n	a2, a3, 0
400e8a70:	f01d      	retw.n
	...

400e8a74 <uart_set_baudrate>:
400e8a74:	006136        	entry	a1, 48
400e8a77:	2d32b6        	bltui	a2, 3, 400e8aa8 <uart_set_baudrate+0x34>
400e8a7a:	9b2b65        	call8	40083d30 <esp_log_timestamp>
400e8a7d:	9f84b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8a80:	9f8a21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8a83:	016122        	s32i	a2, a1, 4
400e8a86:	c5a022        	movi	a2, 197
400e8a89:	006122        	s32i	a2, a1, 0
400e8a8c:	f03d      	nop.n
400e8a8e:	f03d      	nop.n
400e8a90:	f03d      	nop.n
400e8a92:	f03d      	nop.n
400e8a94:	9f95f1        	l32r	a15, 400d08e8 <_flash_cache_start+0x8d0>
400e8a97:	0bed      	mov.n	a14, a11
400e8a99:	0add      	mov.n	a13, a10
400e8a9b:	9f7ec1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8a9e:	01a0a2        	movi	a10, 1
400e8aa1:	9b1165        	call8	40083bb8 <esp_log_write>
400e8aa4:	f27c      	movi.n	a2, -1
400e8aa6:	f01d      	retw.n
400e8aa8:	9f7d41        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e8aab:	b04240        	addx8	a4, a2, a4
400e8aae:	20a440        	or	a10, a4, a4
400e8ab1:	9ffde5        	call8	40088a90 <vTaskEnterCritical>
400e8ab4:	9f8481        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e8ab7:	a02280        	addx4	a2, a2, a8
400e8aba:	002222        	l32i	a2, a2, 0
400e8abd:	0020c0        	memw
400e8ac0:	8288      	l32i.n	a8, a2, 32
400e8ac2:	0678b7        	bbci	a8, 27, 400e8acc <uart_set_baudrate+0x58>
400e8ac5:	986225        	call8	400810e8 <esp_clk_apb_freq>
400e8ac8:	0000c6        	j	400e8acf <uart_set_baudrate+0x5b>
400e8acb:	84a100        	extui	a10, a0, 1, 9
400e8ace:	9e          	.byte 0x9e
400e8acf:	11aac0        	slli	a10, a10, 4
400e8ad2:	c23a30        	quou	a3, a10, a3
400e8ad5:	f80c      	movi.n	a8, 15
400e8ad7:	42b837        	bgeu	a8, a3, 400e8b1d <uart_set_baudrate+0xa9>
400e8ada:	418430        	srli	a8, a3, 4
400e8add:	0020c0        	memw
400e8ae0:	52a8      	l32i.n	a10, a2, 20
400e8ae2:	9ed391        	l32r	a9, 400d0630 <_flash_cache_start+0x618>
400e8ae5:	109890        	and	a9, a8, a9
400e8ae8:	9ed081        	l32r	a8, 400d0628 <_flash_cache_start+0x610>
400e8aeb:	108a80        	and	a8, a10, a8
400e8aee:	208890        	or	a8, a8, a9
400e8af1:	0020c0        	memw
400e8af4:	5289      	s32i.n	a8, a2, 20
400e8af6:	f03d      	nop.n
400e8af8:	f03d      	nop.n
400e8afa:	f03d      	nop.n
400e8afc:	f03d      	nop.n
400e8afe:	0020c0        	memw
400e8b01:	5288      	l32i.n	a8, a2, 20
400e8b03:	343030        	extui	a3, a3, 0, 4
400e8b06:	01a3c0        	slli	a10, a3, 20
400e8b09:	9f7831        	l32r	a3, 400d08ec <_flash_cache_start+0x8d4>
400e8b0c:	103830        	and	a3, a8, a3
400e8b0f:	2033a0        	or	a3, a3, a10
400e8b12:	0020c0        	memw
400e8b15:	5239      	s32i.n	a3, a2, 20
400e8b17:	020c      	movi.n	a2, 0
400e8b19:	0000c6        	j	400e8b20 <uart_set_baudrate+0xac>
400e8b1c:	a12200        	sll	a2, a2
400e8b1f:	04ad02        	movi	a0, 0xfffffd04
400e8b22:	a00ae5        	call8	40088bd0 <vTaskExitCritical>
400e8b25:	f01d      	retw.n
	...

400e8b28 <uart_get_baudrate>:
400e8b28:	006136        	entry	a1, 48
400e8b2b:	2e32b6        	bltui	a2, 3, 400e8b5d <uart_get_baudrate+0x35>
400e8b2e:	9b2025        	call8	40083d30 <esp_log_timestamp>
400e8b31:	9f57b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8b34:	9f5d21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8b37:	016122        	s32i	a2, a1, 4
400e8b3a:	dda022        	movi	a2, 221
400e8b3d:	006122        	s32i	a2, a1, 0
400e8b40:	f03d      	nop.n
400e8b42:	f03d      	nop.n
400e8b44:	f03d      	nop.n
400e8b46:	f03d      	nop.n
400e8b48:	9f6af1        	l32r	a15, 400d08f0 <_flash_cache_start+0x8d8>
400e8b4b:	0bed      	mov.n	a14, a11
400e8b4d:	0add      	mov.n	a13, a10
400e8b4f:	9f51c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8b52:	01a0a2        	movi	a10, 1
400e8b55:	9b0625        	call8	40083bb8 <esp_log_write>
400e8b58:	f27c      	movi.n	a2, -1
400e8b5a:	f01d      	retw.n
400e8b5c:	4f4100        	f64cmph	a4, a1, a0, 4
400e8b5f:	9f          	.byte 0x9f
400e8b60:	b04240        	addx8	a4, a2, a4
400e8b63:	20a440        	or	a10, a4, a4
400e8b66:	9ff2a5        	call8	40088a90 <vTaskEnterCritical>
400e8b69:	9f5651        	l32r	a5, 400d08c4 <_flash_cache_start+0x8ac>
400e8b6c:	a02250        	addx4	a2, a2, a5
400e8b6f:	002252        	l32i	a5, a2, 0
400e8b72:	0020c0        	memw
400e8b75:	5588      	l32i.n	a8, a5, 20
400e8b77:	9eae21        	l32r	a2, 400d0630 <_flash_cache_start+0x618>
400e8b7a:	102820        	and	a2, a8, a2
400e8b7d:	1182c0        	slli	a8, a2, 4
400e8b80:	0020c0        	memw
400e8b83:	5528      	l32i.n	a2, a5, 20
400e8b85:	352420        	extui	a2, a2, 20, 4
400e8b88:	202280        	or	a2, a2, a8
400e8b8b:	04ad      	mov.n	a10, a4
400e8b8d:	a00425        	call8	40088bd0 <vTaskExitCritical>
400e8b90:	985565        	call8	400810e8 <esp_clk_apb_freq>
400e8b93:	0020c0        	memw
400e8b96:	8548      	l32i.n	a4, a5, 32
400e8b98:	02f4b7        	bbsi	a4, 27, 400e8b9e <uart_get_baudrate+0x76>
400e8b9b:	9e50a1        	l32r	a10, 400d04dc <_flash_cache_start+0x4c4>
400e8b9e:	11aac0        	slli	a10, a10, 4
400e8ba1:	c22a20        	quou	a2, a10, a2
400e8ba4:	0329      	s32i.n	a2, a3, 0
400e8ba6:	020c      	movi.n	a2, 0
400e8ba8:	f01d      	retw.n
	...

400e8bac <uart_enable_intr_mask>:
400e8bac:	006136        	entry	a1, 48
400e8baf:	2d32b6        	bltui	a2, 3, 400e8be0 <uart_enable_intr_mask+0x34>
400e8bb2:	9b17e5        	call8	40083d30 <esp_log_timestamp>
400e8bb5:	9f36b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8bb8:	9f3c21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8bbb:	016122        	s32i	a2, a1, 4
400e8bbe:	3fa122        	movi	a2, 0x13f
400e8bc1:	006122        	s32i	a2, a1, 0
400e8bc4:	f03d      	nop.n
400e8bc6:	f03d      	nop.n
400e8bc8:	f03d      	nop.n
400e8bca:	f03d      	nop.n
400e8bcc:	9f4af1        	l32r	a15, 400d08f4 <_flash_cache_start+0x8dc>
400e8bcf:	0bed      	mov.n	a14, a11
400e8bd1:	0add      	mov.n	a13, a10
400e8bd3:	9f30c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8bd6:	01a0a2        	movi	a10, 1
400e8bd9:	9afde5        	call8	40083bb8 <esp_log_write>
400e8bdc:	f27c      	movi.n	a2, -1
400e8bde:	f01d      	retw.n
400e8be0:	9f2f41        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e8be3:	b04240        	addx8	a4, a2, a4
400e8be6:	04ad      	mov.n	a10, a4
400e8be8:	9fea65        	call8	40088a90 <vTaskEnterCritical>
400e8beb:	9f3081        	l32r	a8, 400d08ac <_flash_cache_start+0x894>
400e8bee:	828a      	add.n	a8, a2, a8
400e8bf0:	118800        	slli	a8, a8, 16
400e8bf3:	0522b6        	bltui	a2, 2, 400e8bfc <uart_enable_intr_mask+0x50>
400e8bf6:	9f2a91        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8bf9:	000086        	j	400e8bff <uart_enable_intr_mask+0x53>
400e8bfc:	00a092        	movi	a9, 0
400e8bff:	80a980        	add	a10, a9, a8
400e8c02:	9f3d91        	l32r	a9, 400d08f8 <_flash_cache_start+0x8e0>
400e8c05:	809a90        	add	a9, a10, a9
400e8c08:	9f2ba1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8c0b:	0e3a97        	bltu	a10, a9, 400e8c1d <uart_enable_intr_mask+0x71>
400e8c0e:	9f3bd1        	l32r	a13, 400d08fc <_flash_cache_start+0x8e4>
400e8c11:	9f3bc1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8c14:	41a1b2        	movi	a11, 0x141
400e8c17:	9f2aa1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8c1a:	f1eb25        	call8	400daacc <__assert_func>
400e8c1d:	0522b6        	bltui	a2, 2, 400e8c26 <uart_enable_intr_mask+0x7a>
400e8c20:	9f2091        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8c23:	000046        	j	400e8c28 <uart_enable_intr_mask+0x7c>
400e8c26:	090c      	movi.n	a9, 0
400e8c28:	a98a      	add.n	a10, a9, a8
400e8c2a:	9f3391        	l32r	a9, 400d08f8 <_flash_cache_start+0x8e0>
400e8c2d:	9a9a      	add.n	a9, a10, a9
400e8c2f:	9f21a1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8c32:	0e3a97        	bltu	a10, a9, 400e8c44 <uart_enable_intr_mask+0x98>
400e8c35:	9f33d1        	l32r	a13, 400d0904 <_flash_cache_start+0x8ec>
400e8c38:	9f32c1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8c3b:	41a1b2        	movi	a11, 0x141
400e8c3e:	9f20a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8c41:	f1e8a5        	call8	400daacc <__assert_func>
400e8c44:	0522b6        	bltui	a2, 2, 400e8c4d <uart_enable_intr_mask+0xa1>
400e8c47:	9f1691        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8c4a:	000046        	j	400e8c4f <uart_enable_intr_mask+0xa3>
400e8c4d:	090c      	movi.n	a9, 0
400e8c4f:	b98a      	add.n	a11, a9, a8
400e8c51:	0522b6        	bltui	a2, 2, 400e8c5a <uart_enable_intr_mask+0xae>
400e8c54:	9f1391        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8c57:	000046        	j	400e8c5c <uart_enable_intr_mask+0xb0>
400e8c5a:	090c      	movi.n	a9, 0
400e8c5c:	a98a      	add.n	a10, a9, a8
400e8c5e:	9f2691        	l32r	a9, 400d08f8 <_flash_cache_start+0x8e0>
400e8c61:	9a9a      	add.n	a9, a10, a9
400e8c63:	9f14a1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8c66:	0e3a97        	bltu	a10, a9, 400e8c78 <uart_enable_intr_mask+0xcc>
400e8c69:	9f27d1        	l32r	a13, 400d0908 <_flash_cache_start+0x8f0>
400e8c6c:	9f25c1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8c6f:	41a1b2        	movi	a11, 0x141
400e8c72:	9f13a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8c75:	f1e565        	call8	400daacc <__assert_func>
400e8c78:	0522b6        	bltui	a2, 2, 400e8c81 <uart_enable_intr_mask+0xd5>
400e8c7b:	9f0991        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8c7e:	000046        	j	400e8c83 <uart_enable_intr_mask+0xd7>
400e8c81:	090c      	movi.n	a9, 0
400e8c83:	998a      	add.n	a9, a9, a8
400e8c85:	0020c0        	memw
400e8c88:	4998      	l32i.n	a9, a9, 16
400e8c8a:	209930        	or	a9, a9, a3
400e8c8d:	0020c0        	memw
400e8c90:	4b99      	s32i.n	a9, a11, 16
400e8c92:	0e22b6        	bltui	a2, 2, 400e8ca4 <uart_enable_intr_mask+0xf8>
400e8c95:	f03d      	nop.n
400e8c97:	f03d      	nop.n
400e8c99:	f03d      	nop.n
400e8c9b:	f03d      	nop.n
400e8c9d:	9f0091        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8ca0:	0000c6        	j	400e8ca7 <uart_enable_intr_mask+0xfb>
400e8ca3:	a09200        	addx4	a9, a2, a0
400e8ca6:	a98000        	lsi	f0, a0, 0x2a4
400e8ca9:	189180        	lsxp	f9, a1, a8
400e8cac:	9f          	.byte 0x9f
400e8cad:	809a90        	add	a9, a10, a9
400e8cb0:	9f01a1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8cb3:	0e3a97        	bltu	a10, a9, 400e8cc5 <uart_enable_intr_mask+0x119>
400e8cb6:	9f16d1        	l32r	a13, 400d0910 <_flash_cache_start+0x8f8>
400e8cb9:	9f11c1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8cbc:	42a1b2        	movi	a11, 0x142
400e8cbf:	9f00a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8cc2:	f1e0a5        	call8	400daacc <__assert_func>
400e8cc5:	0522b6        	bltui	a2, 2, 400e8cce <uart_enable_intr_mask+0x122>
400e8cc8:	9ef691        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8ccb:	000046        	j	400e8cd0 <uart_enable_intr_mask+0x124>
400e8cce:	090c      	movi.n	a9, 0
400e8cd0:	a98a      	add.n	a10, a9, a8
400e8cd2:	9f0e91        	l32r	a9, 400d090c <_flash_cache_start+0x8f4>
400e8cd5:	9a9a      	add.n	a9, a10, a9
400e8cd7:	9ef7a1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8cda:	0e3a97        	bltu	a10, a9, 400e8cec <uart_enable_intr_mask+0x140>
400e8cdd:	9f0dd1        	l32r	a13, 400d0914 <_flash_cache_start+0x8fc>
400e8ce0:	9f08c1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8ce3:	42a1b2        	movi	a11, 0x142
400e8ce6:	9ef6a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8ce9:	f1de25        	call8	400daacc <__assert_func>
400e8cec:	0522b6        	bltui	a2, 2, 400e8cf5 <uart_enable_intr_mask+0x149>
400e8cef:	9eecb1        	l32r	a11, 400d08a0 <_flash_cache_start+0x888>
400e8cf2:	000046        	j	400e8cf7 <uart_enable_intr_mask+0x14b>
400e8cf5:	0b0c      	movi.n	a11, 0
400e8cf7:	bb8a      	add.n	a11, a11, a8
400e8cf9:	0522b6        	bltui	a2, 2, 400e8d02 <uart_enable_intr_mask+0x156>
400e8cfc:	9ee991        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8cff:	000046        	j	400e8d04 <uart_enable_intr_mask+0x158>
400e8d02:	090c      	movi.n	a9, 0
400e8d04:	a98a      	add.n	a10, a9, a8
400e8d06:	9f0191        	l32r	a9, 400d090c <_flash_cache_start+0x8f4>
400e8d09:	9a9a      	add.n	a9, a10, a9
400e8d0b:	9eeaa1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8d0e:	0e3a97        	bltu	a10, a9, 400e8d20 <uart_enable_intr_mask+0x174>
400e8d11:	9f01d1        	l32r	a13, 400d0918 <_flash_cache_start+0x900>
400e8d14:	9efbc1        	l32r	a12, 400d0900 <_flash_cache_start+0x8e8>
400e8d17:	42a1b2        	movi	a11, 0x142
400e8d1a:	9ee9a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8d1d:	f1dae5        	call8	400daacc <__assert_func>
400e8d20:	0522b6        	bltui	a2, 2, 400e8d29 <uart_enable_intr_mask+0x17d>
400e8d23:	9edf21        	l32r	a2, 400d08a0 <_flash_cache_start+0x888>
400e8d26:	000086        	j	400e8d2c <uart_enable_intr_mask+0x180>
400e8d29:	00a022        	movi	a2, 0
400e8d2c:	808280        	add	a8, a2, a8
400e8d2f:	0020c0        	memw
400e8d32:	032822        	l32i	a2, a8, 12
400e8d35:	203320        	or	a3, a3, a2
400e8d38:	0020c0        	memw
400e8d3b:	3b39      	s32i.n	a3, a11, 12
400e8d3d:	04ad      	mov.n	a10, a4
400e8d3f:	9fe925        	call8	40088bd0 <vTaskExitCritical>
400e8d42:	020c      	movi.n	a2, 0
400e8d44:	f01d      	retw.n
	...

400e8d48 <uart_disable_intr_mask>:
400e8d48:	006136        	entry	a1, 48
400e8d4b:	2d32b6        	bltui	a2, 3, 400e8d7c <uart_disable_intr_mask+0x34>
400e8d4e:	9afe25        	call8	40083d30 <esp_log_timestamp>
400e8d51:	9ecfb1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8d54:	9ed521        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8d57:	016122        	s32i	a2, a1, 4
400e8d5a:	49a122        	movi	a2, 0x149
400e8d5d:	006122        	s32i	a2, a1, 0
400e8d60:	f03d      	nop.n
400e8d62:	f03d      	nop.n
400e8d64:	f03d      	nop.n
400e8d66:	f03d      	nop.n
400e8d68:	9eedf1        	l32r	a15, 400d091c <_flash_cache_start+0x904>
400e8d6b:	0bed      	mov.n	a14, a11
400e8d6d:	0add      	mov.n	a13, a10
400e8d6f:	9ec9c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8d72:	01a0a2        	movi	a10, 1
400e8d75:	9ae425        	call8	40083bb8 <esp_log_write>
400e8d78:	f27c      	movi.n	a2, -1
400e8d7a:	f01d      	retw.n
400e8d7c:	9ec841        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e8d7f:	b04240        	addx8	a4, a2, a4
400e8d82:	04ad      	mov.n	a10, a4
400e8d84:	9fd0a5        	call8	40088a90 <vTaskEnterCritical>
400e8d87:	9ec981        	l32r	a8, 400d08ac <_flash_cache_start+0x894>
400e8d8a:	828a      	add.n	a8, a2, a8
400e8d8c:	118800        	slli	a8, a8, 16
400e8d8f:	0522b6        	bltui	a2, 2, 400e8d98 <uart_disable_intr_mask+0x50>
400e8d92:	9ec391        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8d95:	000086        	j	400e8d9b <uart_disable_intr_mask+0x53>
400e8d98:	00a092        	movi	a9, 0
400e8d9b:	80a980        	add	a10, a9, a8
400e8d9e:	9edb91        	l32r	a9, 400d090c <_flash_cache_start+0x8f4>
400e8da1:	809a90        	add	a9, a10, a9
400e8da4:	9ec4a1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8da7:	0e3a97        	bltu	a10, a9, 400e8db9 <uart_disable_intr_mask+0x71>
400e8daa:	9eddd1        	l32r	a13, 400d0920 <_flash_cache_start+0x908>
400e8dad:	9eddc1        	l32r	a12, 400d0924 <_flash_cache_start+0x90c>
400e8db0:	4ba1b2        	movi	a11, 0x14b
400e8db3:	9ec3a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8db6:	f1d165        	call8	400daacc <__assert_func>
400e8db9:	0522b6        	bltui	a2, 2, 400e8dc2 <uart_disable_intr_mask+0x7a>
400e8dbc:	9eb991        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8dbf:	000046        	j	400e8dc4 <uart_disable_intr_mask+0x7c>
400e8dc2:	090c      	movi.n	a9, 0
400e8dc4:	a98a      	add.n	a10, a9, a8
400e8dc6:	9ed191        	l32r	a9, 400d090c <_flash_cache_start+0x8f4>
400e8dc9:	9a9a      	add.n	a9, a10, a9
400e8dcb:	9ebaa1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8dce:	0e3a97        	bltu	a10, a9, 400e8de0 <uart_disable_intr_mask+0x98>
400e8dd1:	9ed0d1        	l32r	a13, 400d0914 <_flash_cache_start+0x8fc>
400e8dd4:	9ed4c1        	l32r	a12, 400d0924 <_flash_cache_start+0x90c>
400e8dd7:	4ba1b2        	movi	a11, 0x14b
400e8dda:	9eb9a1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8ddd:	f1cee5        	call8	400daacc <__assert_func>
400e8de0:	0522b6        	bltui	a2, 2, 400e8de9 <uart_disable_intr_mask+0xa1>
400e8de3:	9eaf91        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8de6:	000046        	j	400e8deb <uart_disable_intr_mask+0xa3>
400e8de9:	090c      	movi.n	a9, 0
400e8deb:	b98a      	add.n	a11, a9, a8
400e8ded:	0522b6        	bltui	a2, 2, 400e8df6 <uart_disable_intr_mask+0xae>
400e8df0:	9eac91        	l32r	a9, 400d08a0 <_flash_cache_start+0x888>
400e8df3:	000046        	j	400e8df8 <uart_disable_intr_mask+0xb0>
400e8df6:	090c      	movi.n	a9, 0
400e8df8:	a98a      	add.n	a10, a9, a8
400e8dfa:	9ec491        	l32r	a9, 400d090c <_flash_cache_start+0x8f4>
400e8dfd:	9a9a      	add.n	a9, a10, a9
400e8dff:	9eada1        	l32r	a10, 400d08b4 <_flash_cache_start+0x89c>
400e8e02:	0e3a97        	bltu	a10, a9, 400e8e14 <uart_disable_intr_mask+0xcc>
400e8e05:	9ec4d1        	l32r	a13, 400d0918 <_flash_cache_start+0x900>
400e8e08:	9ec7c1        	l32r	a12, 400d0924 <_flash_cache_start+0x90c>
400e8e0b:	4ba1b2        	movi	a11, 0x14b
400e8e0e:	9eaca1        	l32r	a10, 400d08c0 <_flash_cache_start+0x8a8>
400e8e11:	f1cba5        	call8	400daacc <__assert_func>
400e8e14:	0622b6        	bltui	a2, 2, 400e8e1e <uart_disable_intr_mask+0xd6>
400e8e17:	9ea221        	l32r	a2, 400d08a0 <_flash_cache_start+0x888>
400e8e1a:	0000c6        	j	400e8e21 <uart_disable_intr_mask+0xd9>
400e8e1d:	a02200        	addx4	a2, a2, a0
400e8e20:	828000        	mull	a8, a0, a0
400e8e23:	20c080        	or	a12, a0, a8
400e8e26:	282200        	lsi	f0, a2, 160
400e8e29:	f87c03        	lsi	f0, a12, 0x3e0
400e8e2c:	303830        	xor	a3, a8, a3
400e8e2f:	103230        	and	a3, a2, a3
400e8e32:	0020c0        	memw
400e8e35:	3b39      	s32i.n	a3, a11, 12
400e8e37:	04ad      	mov.n	a10, a4
400e8e39:	9fd965        	call8	40088bd0 <vTaskExitCritical>
400e8e3c:	020c      	movi.n	a2, 0
400e8e3e:	f01d      	retw.n

400e8e40 <uart_enable_rx_intr>:
400e8e40:	004136        	entry	a1, 32
400e8e43:	01a1b2        	movi	a11, 0x101
400e8e46:	20a220        	or	a10, a2, a2
400e8e49:	ffd625        	call8	400e8bac <uart_enable_intr_mask>
400e8e4c:	202aa0        	or	a2, a10, a10
400e8e4f:	000090        	retw
	...

400e8e54 <uart_disable_rx_intr>:
400e8e54:	004136        	entry	a1, 32
400e8e57:	01a1b2        	movi	a11, 0x101
400e8e5a:	20a220        	or	a10, a2, a2
400e8e5d:	ffeea5        	call8	400e8d48 <uart_disable_intr_mask>
400e8e60:	202aa0        	or	a2, a10, a10
400e8e63:	000090        	retw
	...

400e8e68 <uart_wait_tx_done>:
400e8e68:	008136        	entry	a1, 64
400e8e6b:	2e32b6        	bltui	a2, 3, 400e8e9d <uart_wait_tx_done+0x35>
400e8e6e:	9aec25        	call8	40083d30 <esp_log_timestamp>
400e8e71:	9e87b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8e74:	9e8d21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8e77:	016122        	s32i	a2, a1, 4
400e8e7a:	f3a322        	movi	a2, 0x3f3
400e8e7d:	006122        	s32i	a2, a1, 0
400e8e80:	f03d      	nop.n
400e8e82:	f03d      	nop.n
400e8e84:	f03d      	nop.n
400e8e86:	f03d      	nop.n
400e8e88:	9ea8f1        	l32r	a15, 400d0928 <_flash_cache_start+0x910>
400e8e8b:	0bed      	mov.n	a14, a11
400e8e8d:	0add      	mov.n	a13, a10
400e8e8f:	9e81c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8e92:	01a0a2        	movi	a10, 1
400e8e95:	9ad225        	call8	40083bb8 <esp_log_write>
400e8e98:	f27c      	movi.n	a2, -1
400e8e9a:	f01d      	retw.n
400e8e9c:	7a8100        	divn.s	f8, f1, f0
400e8e9f:	9e          	.byte 0x9e
400e8ea0:	a08280        	addx4	a8, a2, a8
400e8ea3:	002882        	l32i	a8, a8, 0
400e8ea6:	02a856        	bnez	a8, 400e8ed4 <uart_wait_tx_done+0x6c>
400e8ea9:	9ae865        	call8	40083d30 <esp_log_timestamp>
400e8eac:	9e79b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8eaf:	9e7a21        	l32r	a2, 400d0898 <_flash_cache_start+0x880>
400e8eb2:	1129      	s32i.n	a2, a1, 4
400e8eb4:	f4a322        	movi	a2, 0x3f4
400e8eb7:	0129      	s32i.n	a2, a1, 0
400e8eb9:	f03d      	nop.n
400e8ebb:	f03d      	nop.n
400e8ebd:	f03d      	nop.n
400e8ebf:	f03d      	nop.n
400e8ec1:	9e99f1        	l32r	a15, 400d0928 <_flash_cache_start+0x910>
400e8ec4:	0bed      	mov.n	a14, a11
400e8ec6:	0add      	mov.n	a13, a10
400e8ec8:	9e73c1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8ecb:	1a0c      	movi.n	a10, 1
400e8ecd:	9acea5        	call8	40083bb8 <esp_log_write>
400e8ed0:	f27c      	movi.n	a2, -1
400e8ed2:	f01d      	retw.n
400e8ed4:	9f7665        	call8	4008863c <xTaskGetTickCount>
400e8ed7:	0a4d      	mov.n	a4, a10
400e8ed9:	9e6b81        	l32r	a8, 400d0888 <_flash_cache_start+0x870>
400e8edc:	a08280        	addx4	a8, a2, a8
400e8edf:	0888      	l32i.n	a8, a8, 0
400e8ee1:	0d0c      	movi.n	a13, 0
400e8ee3:	03cd      	mov.n	a12, a3
400e8ee5:	20bdd0        	or	a11, a13, a13
400e8ee8:	3428a2        	l32i	a10, a8, 208
400e8eeb:	9ec7a5        	call8	40087b64 <xQueueGenericReceive>
400e8eee:	0caa16        	beqz	a10, 400e8fbc <uart_wait_tx_done+0x154>
400e8ef1:	1152e0        	slli	a5, a2, 2
400e8ef4:	9e6581        	l32r	a8, 400d0888 <_flash_cache_start+0x870>
400e8ef7:	885a      	add.n	a8, a8, a5
400e8ef9:	0888      	l32i.n	a8, a8, 0
400e8efb:	0d0c      	movi.n	a13, 0
400e8efd:	0dcd      	mov.n	a12, a13
400e8eff:	0dbd      	mov.n	a11, a13
400e8f01:	3528a2        	l32i	a10, a8, 212
400e8f04:	9ec5e5        	call8	40087b64 <xQueueGenericReceive>
400e8f07:	9e6f81        	l32r	a8, 400d08c4 <_flash_cache_start+0x8ac>
400e8f0a:	585a      	add.n	a5, a8, a5
400e8f0c:	0558      	l32i.n	a5, a5, 0
400e8f0e:	0020c0        	memw
400e8f11:	7558      	l32i.n	a5, a5, 28
400e8f13:	0020c0        	memw
400e8f16:	7159      	s32i.n	a5, a1, 28
400e8f18:	f03d      	nop.n
400e8f1a:	f03d      	nop.n
400e8f1c:	f03d      	nop.n
400e8f1e:	f03d      	nop.n
400e8f20:	0020c0        	memw
400e8f23:	7158      	l32i.n	a5, a1, 28
400e8f25:	755050        	extui	a5, a5, 16, 8
400e8f28:	15ec      	bnez.n	a5, 400e8f4d <uart_wait_tx_done+0xe5>
400e8f2a:	0020c0        	memw
400e8f2d:	7158      	l32i.n	a5, a1, 28
400e8f2f:	355850        	extui	a5, a5, 24, 4
400e8f32:	75dc      	bnez.n	a5, 400e8f4d <uart_wait_tx_done+0xe5>
400e8f34:	9e5531        	l32r	a3, 400d0888 <_flash_cache_start+0x870>
400e8f37:	a02230        	addx4	a2, a2, a3
400e8f3a:	0228      	l32i.n	a2, a2, 0
400e8f3c:	0d0c      	movi.n	a13, 0
400e8f3e:	0dcd      	mov.n	a12, a13
400e8f40:	0dbd      	mov.n	a11, a13
400e8f42:	3422a2        	l32i	a10, a2, 208
400e8f45:	9e89e5        	call8	400877e4 <xQueueGenericSend>
400e8f48:	020c      	movi.n	a2, 0
400e8f4a:	f01d      	retw.n
400e8f4c:	76b100        	lsi	f0, a1, 0x1d8
400e8f4f:	209d      	lsi	f9, a0, 0
400e8f51:	a520a2        	l32i	a10, a0, 0x294
400e8f54:	65ffc5        	call0	4014ef54 <_etext+0x62a83>
400e8f57:	6e          	.byte 0x6e
400e8f58:	9f          	.byte 0x9f
400e8f59:	c05a40        	sub	a5, a10, a4
400e8f5c:	093357        	bltu	a3, a5, 400e8f69 <uart_wait_tx_done+0x101>
400e8f5f:	c0c4a0        	sub	a12, a4, a10
400e8f62:	80c3c0        	add	a12, a3, a12
400e8f65:	0000c6        	j	400e8f6c <uart_wait_tx_done+0x104>
400e8f68:	a0c200        	addx4	a12, a2, a0
400e8f6b:	473100        	lsi	f0, a1, 0x11c
400e8f6e:	9e          	.byte 0x9e
400e8f6f:	a03230        	addx4	a3, a2, a3
400e8f72:	0338      	l32i.n	a3, a3, 0
400e8f74:	0d0c      	movi.n	a13, 0
400e8f76:	0dbd      	mov.n	a11, a13
400e8f78:	3523a2        	l32i	a10, a3, 212
400e8f7b:	9ebea5        	call8	40087b64 <xQueueGenericReceive>
400e8f7e:	fadc      	bnez.n	a10, 400e8fa1 <uart_wait_tx_done+0x139>
400e8f80:	9d6ab1        	l32r	a11, 400d0528 <_flash_cache_start+0x510>
400e8f83:	02ad      	mov.n	a10, a2
400e8f85:	ffdc25        	call8	400e8d48 <uart_disable_intr_mask>
400e8f88:	9e4031        	l32r	a3, 400d0888 <_flash_cache_start+0x870>
400e8f8b:	a02230        	addx4	a2, a2, a3
400e8f8e:	0228      	l32i.n	a2, a2, 0
400e8f90:	0d0c      	movi.n	a13, 0
400e8f92:	0dcd      	mov.n	a12, a13
400e8f94:	0dbd      	mov.n	a11, a13
400e8f96:	3422a2        	l32i	a10, a2, 208
400e8f99:	9e84a5        	call8	400877e4 <xQueueGenericSend>
400e8f9c:	07a122        	movi	a2, 0x107
400e8f9f:	f01d      	retw.n
400e8fa1:	9e3931        	l32r	a3, 400d0888 <_flash_cache_start+0x870>
400e8fa4:	a02230        	addx4	a2, a2, a3
400e8fa7:	002222        	l32i	a2, a2, 0
400e8faa:	00a0d2        	movi	a13, 0
400e8fad:	20cdd0        	or	a12, a13, a13
400e8fb0:	0dbd      	mov.n	a11, a13
400e8fb2:	3422a2        	l32i	a10, a2, 208
400e8fb5:	9e82e5        	call8	400877e4 <xQueueGenericSend>
400e8fb8:	020c      	movi.n	a2, 0
400e8fba:	f01d      	retw.n
400e8fbc:	07a122        	movi	a2, 0x107
400e8fbf:	f01d      	retw.n
400e8fc1:	000000        	ill

400e8fc4 <uart_get_buffered_data_len>:
400e8fc4:	006136        	entry	a1, 48
400e8fc7:	2e32b6        	bltui	a2, 3, 400e8ff9 <uart_get_buffered_data_len+0x35>
400e8fca:	9ad665        	call8	40083d30 <esp_log_timestamp>
400e8fcd:	9e30b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e8fd0:	9e3621        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e8fd3:	016122        	s32i	a2, a1, 4
400e8fd6:	d5a422        	movi	a2, 0x4d5
400e8fd9:	006122        	s32i	a2, a1, 0
400e8fdc:	f03d      	nop.n
400e8fde:	f03d      	nop.n
400e8fe0:	f03d      	nop.n
400e8fe2:	f03d      	nop.n
400e8fe4:	9e52f1        	l32r	a15, 400d092c <_flash_cache_start+0x914>
400e8fe7:	0bed      	mov.n	a14, a11
400e8fe9:	0add      	mov.n	a13, a10
400e8feb:	9e2ac1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e8fee:	01a0a2        	movi	a10, 1
400e8ff1:	9abc65        	call8	40083bb8 <esp_log_write>
400e8ff4:	f27c      	movi.n	a2, -1
400e8ff6:	f01d      	retw.n
400e8ff8:	238100        	sext	a8, a1, 7
400e8ffb:	9e          	.byte 0x9e
400e8ffc:	a02280        	addx4	a2, a2, a8
400e8fff:	002222        	l32i	a2, a2, 0
400e9002:	02a256        	bnez	a2, 400e9030 <uart_get_buffered_data_len+0x6c>
400e9005:	9ad2a5        	call8	40083d30 <esp_log_timestamp>
400e9008:	9e22b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e900b:	9e2321        	l32r	a2, 400d0898 <_flash_cache_start+0x880>
400e900e:	1129      	s32i.n	a2, a1, 4
400e9010:	d6a422        	movi	a2, 0x4d6
400e9013:	0129      	s32i.n	a2, a1, 0
400e9015:	f03d      	nop.n
400e9017:	f03d      	nop.n
400e9019:	f03d      	nop.n
400e901b:	f03d      	nop.n
400e901d:	9e43f1        	l32r	a15, 400d092c <_flash_cache_start+0x914>
400e9020:	0bed      	mov.n	a14, a11
400e9022:	0add      	mov.n	a13, a10
400e9024:	9e1cc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e9027:	1a0c      	movi.n	a10, 1
400e9029:	9ab8e5        	call8	40083bb8 <esp_log_write>
400e902c:	f27c      	movi.n	a2, -1
400e902e:	f01d      	retw.n
400e9030:	6228      	l32i.n	a2, a2, 24
400e9032:	0329      	s32i.n	a2, a3, 0
400e9034:	020c      	movi.n	a2, 0
400e9036:	f01d      	retw.n

400e9038 <uart_flush>:
400e9038:	008136        	entry	a1, 64
400e903b:	2e32b6        	bltui	a2, 3, 400e906d <uart_flush+0x35>
400e903e:	9acf25        	call8	40083d30 <esp_log_timestamp>
400e9041:	9e13b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e9044:	9e1921        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e9047:	016122        	s32i	a2, a1, 4
400e904a:	dfa422        	movi	a2, 0x4df
400e904d:	006122        	s32i	a2, a1, 0
400e9050:	f03d      	nop.n
400e9052:	f03d      	nop.n
400e9054:	f03d      	nop.n
400e9056:	f03d      	nop.n
400e9058:	9e36f1        	l32r	a15, 400d0930 <_flash_cache_start+0x918>
400e905b:	0bed      	mov.n	a14, a11
400e905d:	0add      	mov.n	a13, a10
400e905f:	9e0dc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e9062:	01a0a2        	movi	a10, 1
400e9065:	9ab525        	call8	40083bb8 <esp_log_write>
400e9068:	f27c      	movi.n	a2, -1
400e906a:	f01d      	retw.n
400e906c:	063100        	lsi	f0, a1, 24
400e906f:	9e          	.byte 0x9e
400e9070:	a03230        	addx4	a3, a2, a3
400e9073:	002332        	l32i	a3, a3, 0
400e9076:	02c356        	bnez	a3, 400e90a6 <uart_flush+0x6e>
400e9079:	9acb65        	call8	40083d30 <esp_log_timestamp>
400e907c:	9e05b1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e907f:	9e0621        	l32r	a2, 400d0898 <_flash_cache_start+0x880>
400e9082:	1129      	s32i.n	a2, a1, 4
400e9084:	e0a422        	movi	a2, 0x4e0
400e9087:	0129      	s32i.n	a2, a1, 0
400e9089:	f03d      	nop.n
400e908b:	f03d      	nop.n
400e908d:	f03d      	nop.n
400e908f:	f03d      	nop.n
400e9091:	9e27f1        	l32r	a15, 400d0930 <_flash_cache_start+0x918>
400e9094:	0bed      	mov.n	a14, a11
400e9096:	0add      	mov.n	a13, a10
400e9098:	9dffc1        	l32r	a12, 400d0894 <_flash_cache_start+0x87c>
400e909b:	1a0c      	movi.n	a10, 1
400e909d:	9ab1a5        	call8	40083bb8 <esp_log_write>
400e90a0:	f27c      	movi.n	a2, -1
400e90a2:	f01d      	retw.n
400e90a4:	d20000        	quos	a0, a0, a0
400e90a7:	c200a0        	quou	a0, a0, a10
400e90aa:	af          	.byte 0xaf
400e90ab:	ff          	.byte 0xff
400e90ac:	0dbd      	mov.n	a11, a13
400e90ae:	73a8      	l32i.n	a10, a3, 28
400e90b0:	9eab25        	call8	40087b64 <xQueueGenericReceive>
400e90b3:	9df541        	l32r	a4, 400d0888 <_flash_cache_start+0x870>
400e90b6:	a04240        	addx4	a4, a2, a4
400e90b9:	0448      	l32i.n	a4, a4, 0
400e90bb:	04a8      	l32i.n	a10, a4, 0
400e90bd:	ffd965        	call8	400e8e54 <uart_disable_rx_intr>
400e90c0:	d3b8      	l32i.n	a11, a3, 52
400e90c2:	03eb16        	beqz	a11, 400e9104 <uart_flush+0xcc>
400e90c5:	93a8      	l32i.n	a10, a3, 36
400e90c7:	9e2fa5        	call8	400873c0 <vRingbufferReturnItem>
400e90ca:	9df441        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e90cd:	b04240        	addx8	a4, a2, a4
400e90d0:	20a440        	or	a10, a4, a4
400e90d3:	9f9be5        	call8	40088a90 <vTaskEnterCritical>
400e90d6:	9dec51        	l32r	a5, 400d0888 <_flash_cache_start+0x870>
400e90d9:	a05250        	addx4	a5, a2, a5
400e90dc:	0568      	l32i.n	a6, a5, 0
400e90de:	b388      	l32i.n	a8, a3, 44
400e90e0:	6658      	l32i.n	a5, a6, 24
400e90e2:	c05580        	sub	a5, a5, a8
400e90e5:	6659      	s32i.n	a5, a6, 24
400e90e7:	f03d      	nop.n
400e90e9:	f03d      	nop.n
400e90eb:	f03d      	nop.n
400e90ed:	f03d      	nop.n
400e90ef:	b3b8      	l32i.n	a11, a3, 44
400e90f1:	20a220        	or	a10, a2, a2
400e90f4:	ff5225        	call8	400e8618 <uart_pattern_queue_update>
400e90f7:	04ad      	mov.n	a10, a4
400e90f9:	9fad65        	call8	40088bd0 <vTaskExitCritical>
400e90fc:	040c      	movi.n	a4, 0
400e90fe:	c349      	s32i.n	a4, a3, 48
400e9100:	b349      	s32i.n	a4, a3, 44
400e9102:	d349      	s32i.n	a4, a3, 52
400e9104:	0c0c      	movi.n	a12, 0
400e9106:	1cc1b2        	addi	a11, a1, 28
400e9109:	f03d      	nop.n
400e910b:	f03d      	nop.n
400e910d:	93a8      	l32i.n	a10, a3, 36
400e910f:	9e2625        	call8	40087370 <xRingbufferReceive>
400e9112:	0a6d      	mov.n	a6, a10
400e9114:	079a56        	bnez	a10, 400e9191 <uart_flush+0x159>
400e9117:	9ddc41        	l32r	a4, 400d0888 <_flash_cache_start+0x870>
400e911a:	a04240        	addx4	a4, a2, a4
400e911d:	0448      	l32i.n	a4, a4, 0
400e911f:	6448      	l32i.n	a4, a4, 24
400e9121:	d49c      	beqz.n	a4, 400e9142 <uart_flush+0x10a>
400e9123:	9ac0e5        	call8	40083d30 <esp_log_timestamp>
400e9126:	9ddab1        	l32r	a11, 400d0890 <_flash_cache_start+0x878>
400e9129:	0bed      	mov.n	a14, a11
400e912b:	0add      	mov.n	a13, a10
400e912d:	9e01c1        	l32r	a12, 400d0934 <_flash_cache_start+0x91c>
400e9130:	1a0c      	movi.n	a10, 1
400e9132:	9aa865        	call8	40083bb8 <esp_log_write>
400e9135:	9dd441        	l32r	a4, 400d0888 <_flash_cache_start+0x870>
400e9138:	a04240        	addx4	a4, a2, a4
400e913b:	0448      	l32i.n	a4, a4, 0
400e913d:	050c      	movi.n	a5, 0
400e913f:	066452        	s32i	a5, a4, 24
400e9142:	f03d      	nop.n
400e9144:	f03d      	nop.n
400e9146:	f03d      	nop.n
400e9148:	f03d      	nop.n
400e914a:	9dd441        	l32r	a4, 400d089c <_flash_cache_start+0x884>
400e914d:	b04240        	addx8	a4, a2, a4
400e9150:	20a440        	or	a10, a4, a4
400e9153:	9f93e5        	call8	40088a90 <vTaskEnterCritical>
400e9156:	9dcc51        	l32r	a5, 400d0888 <_flash_cache_start+0x870>
400e9159:	a05250        	addx4	a5, a2, a5
400e915c:	002562        	l32i	a6, a5, 0
400e915f:	00a082        	movi	a8, 0
400e9162:	284682        	s8i	a8, a6, 40
400e9165:	0020c0        	memw
400e9168:	04ad      	mov.n	a10, a4
400e916a:	9fa665        	call8	40088bd0 <vTaskExitCritical>
400e916d:	040c      	movi.n	a4, 0
400e916f:	c349      	s32i.n	a4, a3, 48
400e9171:	b349      	s32i.n	a4, a3, 44
400e9173:	d349      	s32i.n	a4, a3, 52
400e9175:	02ad      	mov.n	a10, a2
400e9177:	ff53a5        	call8	400e86b0 <uart_reset_rx_fifo>
400e917a:	0528      	l32i.n	a2, a5, 0
400e917c:	02a8      	l32i.n	a10, a2, 0
400e917e:	ffcc25        	call8	400e8e40 <uart_enable_rx_intr>
400e9181:	04dd      	mov.n	a13, a4
400e9183:	04cd      	mov.n	a12, a4
400e9185:	04bd      	mov.n	a11, a4
400e9187:	73a8      	l32i.n	a10, a3, 28
400e9189:	9e65a5        	call8	400877e4 <xQueueGenericSend>
400e918c:	042d      	mov.n	a2, a4
400e918e:	f01d      	retw.n
400e9190:	c24100        	quou	a4, a1, a0
400e9193:	409d      	lsi	f9, a0, 0
400e9195:	adb042        	l32ai	a4, a0, 0x2b4
400e9198:	8f6504        	lsi	f0, a5, 0x23c
400e919b:	9f          	.byte 0x9f
400e919c:	9dbb51        	l32r	a5, 400d0888 <_flash_cache_start+0x870>
400e919f:	a05250        	addx4	a5, a2, a5
400e91a2:	0598      	l32i.n	a9, a5, 0
400e91a4:	71b8      	l32i.n	a11, a1, 28
400e91a6:	6988      	l32i.n	a8, a9, 24
400e91a8:	c088b0        	sub	a8, a8, a11
400e91ab:	6989      	s32i.n	a8, a9, 24
400e91ad:	02ad      	mov.n	a10, a2
400e91af:	ff46a5        	call8	400e8618 <uart_pattern_queue_update>
400e91b2:	04ad      	mov.n	a10, a4
400e91b4:	9fa1a5        	call8	40088bd0 <vTaskExitCritical>
400e91b7:	06bd      	mov.n	a11, a6
400e91b9:	93a8      	l32i.n	a10, a3, 36
400e91bb:	9e2065        	call8	400873c0 <vRingbufferReturnItem>
400e91be:	0558      	l32i.n	a5, a5, 0
400e91c0:	280562        	l8ui	a6, a5, 40
400e91c3:	ef9616        	beqz	a6, 400e90c0 <uart_flush+0x88>
400e91c6:	1d0c      	movi.n	a13, 1
400e91c8:	b805c2        	l8ui	a12, a5, 184
400e91cb:	38c5b2        	addi	a11, a5, 56
400e91ce:	95a8      	l32i.n	a10, a5, 36
400e91d0:	9e09e5        	call8	40087270 <xRingbufferSend>
400e91d3:	021a26        	beqi	a10, 1, 400e91d9 <uart_flush+0x1a1>
400e91d6:	ffb986        	j	400e90c0 <uart_flush+0x88>
400e91d9:	20a440        	or	a10, a4, a4
400e91dc:	9f8b25        	call8	40088a90 <vTaskEnterCritical>
400e91df:	9daa51        	l32r	a5, 400d0888 <_flash_cache_start+0x870>
400e91e2:	a05250        	addx4	a5, a2, a5
400e91e5:	0558      	l32i.n	a5, a5, 0
400e91e7:	b80562        	l8ui	a6, a5, 184
400e91ea:	6588      	l32i.n	a8, a5, 24
400e91ec:	686a      	add.n	a6, a8, a6
400e91ee:	6569      	s32i.n	a6, a5, 24
400e91f0:	060c      	movi.n	a6, 0
400e91f2:	284562        	s8i	a6, a5, 40
400e91f5:	0020c0        	memw
400e91f8:	04ad      	mov.n	a10, a4
400e91fa:	9f9d65        	call8	40088bd0 <vTaskExitCritical>
400e91fd:	ffafc6        	j	400e90c0 <uart_flush+0x88>

400e9200 <uart_set_select_notif_callback>:
400e9200:	004136        	entry	a1, 32
400e9203:	0d32f6        	bgeui	a2, 3, 400e9214 <uart_set_select_notif_callback+0x14>
400e9206:	9da081        	l32r	a8, 400d0888 <_flash_cache_start+0x870>
400e9209:	a02280        	addx4	a2, a2, a8
400e920c:	0228      	l32i.n	a2, a2, 0
400e920e:	002216        	beqz	a2, 400e9214 <uart_set_select_notif_callback+0x14>
400e9211:	3f6232        	s32i	a3, a2, 252
400e9214:	f01d      	retw.n
	...

400e9218 <uart_get_selectlock>:
400e9218:	004136        	entry	a1, 32
400e921b:	9dc721        	l32r	a2, 400d0938 <_flash_cache_start+0x920>
400e921e:	f01d      	retw.n

400e9220 <get_clk_en_mask>:
400e9220:	004136        	entry	a1, 32
400e9223:	282c      	movi.n	a8, 34
400e9225:	02b827        	bgeu	a8, a2, 400e922b <get_clk_en_mask+0xb>
400e9228:	002986        	j	400e92d2 <get_clk_en_mask+0xb2>
400e922b:	9dcb81        	l32r	a8, 400d0958 <_flash_cache_start+0x940>
400e922e:	a02280        	addx4	a2, a2, a8
400e9231:	0228      	l32i.n	a2, a2, 0
400e9233:	0002a0        	jx	a2
400e9236:	00a222        	movi	a2, 0x200
400e9239:	f01d      	retw.n
400e923b:	420c      	movi.n	a2, 4
400e923d:	f01d      	retw.n
400e923f:	022c      	movi.n	a2, 32
400e9241:	f01d      	retw.n
400e9243:	9dbe21        	l32r	a2, 400d093c <_flash_cache_start+0x924>
400e9246:	f01d      	retw.n
400e9248:	80a022        	movi	a2, 128
400e924b:	f01d      	retw.n
400e924d:	9dbc21        	l32r	a2, 400d0940 <_flash_cache_start+0x928>
400e9250:	f01d      	retw.n
400e9252:	021c      	movi.n	a2, 16
400e9254:	f01d      	retw.n
400e9256:	9bc521        	l32r	a2, 400d016c <_flash_cache_start+0x154>
400e9259:	f01d      	retw.n
400e925b:	9cb921        	l32r	a2, 400d0540 <_flash_cache_start+0x528>
400e925e:	f01d      	retw.n
400e9260:	9d0821        	l32r	a2, 400d0680 <_flash_cache_start+0x668>
400e9263:	f01d      	retw.n
400e9265:	9db721        	l32r	a2, 400d0944 <_flash_cache_start+0x92c>
400e9268:	f01d      	retw.n
400e926a:	9d1a21        	l32r	a2, 400d06d4 <_flash_cache_start+0x6bc>
400e926d:	f01d      	retw.n
400e926f:	9c2621        	l32r	a2, 400d0308 <_flash_cache_start+0x2f0>
400e9272:	f01d      	retw.n
400e9274:	9db521        	l32r	a2, 400d0948 <_flash_cache_start+0x930>
400e9277:	f01d      	retw.n
400e9279:	00a122        	movi	a2, 0x100
400e927c:	f01d      	retw.n
400e927e:	9cfc21        	l32r	a2, 400d0670 <_flash_cache_start+0x658>
400e9281:	f01d      	retw.n
400e9283:	00a422        	movi	a2, 0x400
400e9286:	f01d      	retw.n
400e9288:	220c      	movi.n	a2, 2
400e928a:	f01d      	retw.n
400e928c:	024c      	movi.n	a2, 64
400e928e:	f01d      	retw.n
400e9290:	9daf21        	l32r	a2, 400d094c <_flash_cache_start+0x934>
400e9293:	f01d      	retw.n
400e9295:	9cd621        	l32r	a2, 400d05f0 <_flash_cache_start+0x5d8>
400e9298:	f01d      	retw.n
400e929a:	9ca921        	l32r	a2, 400d0540 <_flash_cache_start+0x528>
400e929d:	f01d      	retw.n
400e929f:	021c      	movi.n	a2, 16
400e92a1:	f01d      	retw.n
400e92a3:	9d0921        	l32r	a2, 400d06c8 <_flash_cache_start+0x6b0>
400e92a6:	f01d      	retw.n
400e92a8:	9ca021        	l32r	a2, 400d0528 <_flash_cache_start+0x510>
400e92ab:	f01d      	retw.n
400e92ad:	9cf421        	l32r	a2, 400d0680 <_flash_cache_start+0x668>
400e92b0:	f01d      	retw.n
400e92b2:	06a422        	movi	a2, 0x406
400e92b5:	f01d      	retw.n
400e92b7:	9da621        	l32r	a2, 400d0950 <_flash_cache_start+0x938>
400e92ba:	f01d      	retw.n
400e92bc:	c9a322        	movi	a2, 0x3c9
400e92bf:	f01d      	retw.n
400e92c1:	9da421        	l32r	a2, 400d0954 <_flash_cache_start+0x93c>
400e92c4:	f01d      	retw.n
400e92c6:	120c      	movi.n	a2, 1
400e92c8:	f01d      	retw.n
400e92ca:	220c      	movi.n	a2, 2
400e92cc:	f01d      	retw.n
400e92ce:	420c      	movi.n	a2, 4
400e92d0:	f01d      	retw.n
400e92d2:	020c      	movi.n	a2, 0
400e92d4:	f01d      	retw.n
400e92d6:	9ce821        	l32r	a2, 400d0678 <_flash_cache_start+0x660>
400e92d9:	f01d      	retw.n
	...

400e92dc <get_rst_en_mask>:
400e92dc:	004136        	entry	a1, 32
400e92df:	282c      	movi.n	a8, 34
400e92e1:	02b827        	bgeu	a8, a2, 400e92e7 <get_rst_en_mask+0xb>
400e92e4:	002586        	j	400e937e <get_rst_en_mask+0xa2>
400e92e7:	9d9d81        	l32r	a8, 400d095c <_flash_cache_start+0x944>
400e92ea:	a02280        	addx4	a2, a2, a8
400e92ed:	0228      	l32i.n	a2, a2, 0
400e92ef:	0002a0        	jx	a2
400e92f2:	00a222        	movi	a2, 0x200
400e92f5:	f01d      	retw.n
400e92f7:	420c      	movi.n	a2, 4
400e92f9:	f01d      	retw.n
400e92fb:	022c      	movi.n	a2, 32
400e92fd:	f01d      	retw.n
400e92ff:	9d8f21        	l32r	a2, 400d093c <_flash_cache_start+0x924>
400e9302:	f01d      	retw.n
400e9304:	80a022        	movi	a2, 128
400e9307:	f01d      	retw.n
400e9309:	9d8d21        	l32r	a2, 400d0940 <_flash_cache_start+0x928>
400e930c:	f01d      	retw.n
400e930e:	021c      	movi.n	a2, 16
400e9310:	f01d      	retw.n
400e9312:	9b9621        	l32r	a2, 400d016c <_flash_cache_start+0x154>
400e9315:	f01d      	retw.n
400e9317:	9c8a21        	l32r	a2, 400d0540 <_flash_cache_start+0x528>
400e931a:	f01d      	retw.n
400e931c:	9cd921        	l32r	a2, 400d0680 <_flash_cache_start+0x668>
400e931f:	f01d      	retw.n
400e9321:	9d8821        	l32r	a2, 400d0944 <_flash_cache_start+0x92c>
400e9324:	f01d      	retw.n
400e9326:	9ceb21        	l32r	a2, 400d06d4 <_flash_cache_start+0x6bc>
400e9329:	f01d      	retw.n
400e932b:	9bf721        	l32r	a2, 400d0308 <_flash_cache_start+0x2f0>
400e932e:	f01d      	retw.n
400e9330:	9d8621        	l32r	a2, 400d0948 <_flash_cache_start+0x930>
400e9333:	f01d      	retw.n
400e9335:	00a122        	movi	a2, 0x100
400e9338:	f01d      	retw.n
400e933a:	9ccd21        	l32r	a2, 400d0670 <_flash_cache_start+0x658>
400e933d:	f01d      	retw.n
400e933f:	00a422        	movi	a2, 0x400
400e9342:	f01d      	retw.n
400e9344:	220c      	movi.n	a2, 2
400e9346:	f01d      	retw.n
400e9348:	024c      	movi.n	a2, 64
400e934a:	f01d      	retw.n
400e934c:	9d8021        	l32r	a2, 400d094c <_flash_cache_start+0x934>
400e934f:	f01d      	retw.n
400e9351:	9ca721        	l32r	a2, 400d05f0 <_flash_cache_start+0x5d8>
400e9354:	f01d      	retw.n
400e9356:	024c      	movi.n	a2, 64
400e9358:	f01d      	retw.n
400e935a:	022c      	movi.n	a2, 32
400e935c:	f01d      	retw.n
400e935e:	9cda21        	l32r	a2, 400d06c8 <_flash_cache_start+0x6b0>
400e9361:	f01d      	retw.n
400e9363:	80a022        	movi	a2, 128
400e9366:	f01d      	retw.n
400e9368:	c39c      	beqz.n	a3, 400e9388 <get_rst_en_mask+0xac>
400e936a:	921c      	movi.n	a2, 25
400e936c:	f01d      	retw.n
400e936e:	a39c      	beqz.n	a3, 400e938c <get_rst_en_mask+0xb0>
400e9370:	a20c      	movi.n	a2, 10
400e9372:	f01d      	retw.n
400e9374:	839c      	beqz.n	a3, 400e9390 <get_rst_en_mask+0xb4>
400e9376:	421c      	movi.n	a2, 20
400e9378:	f01d      	retw.n
400e937a:	020c      	movi.n	a2, 0
400e937c:	f01d      	retw.n
400e937e:	020c      	movi.n	a2, 0
400e9380:	f01d      	retw.n
400e9382:	bd2100        	lsi	f0, a1, 0x2f4
400e9385:	1d9c      	beqz.n	a13, 400e939a <get_clk_en_reg+0x6>
400e9387:	120cf0        	andbc	b0, b12, b15
400e938a:	f01d      	retw.n
400e938c:	220c      	movi.n	a2, 2
400e938e:	f01d      	retw.n
400e9390:	420c      	movi.n	a2, 4
400e9392:	f01d      	retw.n

400e9394 <get_clk_en_reg>:
400e9394:	004136        	entry	a1, 32
400e9397:	e0c282        	addi	a8, a2, -32
400e939a:	0e38b6        	bltui	a8, 3, 400e93ac <get_clk_en_reg+0x18>
400e939d:	20a220        	or	a10, a2, a2
400e93a0:	02faa5        	call8	400ec34c <is_wifi_clk_peripheral>
400e93a3:	00aa16        	beqz	a10, 400e93b1 <get_clk_en_reg+0x1d>
400e93a6:	9b6e21        	l32r	a2, 400d0160 <_flash_cache_start+0x148>
400e93a9:	000090        	retw
400e93ac:	9b6c21        	l32r	a2, 400d015c <_flash_cache_start+0x144>
400e93af:	f01d      	retw.n
400e93b1:	9b6921        	l32r	a2, 400d0158 <_flash_cache_start+0x140>
400e93b4:	f01d      	retw.n
	...

400e93b8 <get_rst_en_reg>:
400e93b8:	004136        	entry	a1, 32
400e93bb:	e0c282        	addi	a8, a2, -32
400e93be:	0e38b6        	bltui	a8, 3, 400e93d0 <get_rst_en_reg+0x18>
400e93c1:	20a220        	or	a10, a2, a2
400e93c4:	02f865        	call8	400ec34c <is_wifi_clk_peripheral>
400e93c7:	00aa16        	beqz	a10, 400e93d5 <get_rst_en_reg+0x1d>
400e93ca:	9d6521        	l32r	a2, 400d0960 <_flash_cache_start+0x948>
400e93cd:	000090        	retw
400e93d0:	9b6a21        	l32r	a2, 400d0178 <_flash_cache_start+0x160>
400e93d3:	f01d      	retw.n
400e93d5:	9b6721        	l32r	a2, 400d0174 <_flash_cache_start+0x15c>
400e93d8:	f01d      	retw.n
	...

400e93dc <periph_module_enable>:
400e93dc:	004136        	entry	a1, 32
400e93df:	9d6141        	l32r	a4, 400d0964 <_flash_cache_start+0x94c>
400e93e2:	04ad      	mov.n	a10, a4
400e93e4:	9f6aa5        	call8	40088a90 <vTaskEnterCritical>
400e93e7:	02ad      	mov.n	a10, a2
400e93e9:	fffaa5        	call8	400e9394 <get_clk_en_reg>
400e93ec:	0a5d      	mov.n	a5, a10
400e93ee:	9855a5        	call8	40081948 <esp_dport_access_reg_read>
400e93f1:	0a3d      	mov.n	a3, a10
400e93f3:	02ad      	mov.n	a10, a2
400e93f5:	ffe2a5        	call8	400e9220 <get_clk_en_mask>
400e93f8:	20aa30        	or	a10, a10, a3
400e93fb:	0020c0        	memw
400e93fe:	05a9      	s32i.n	a10, a5, 0
400e9400:	02ad      	mov.n	a10, a2
400e9402:	fffb65        	call8	400e93b8 <get_rst_en_reg>
400e9405:	0a3d      	mov.n	a3, a10
400e9407:	985425        	call8	40081948 <esp_dport_access_reg_read>
400e940a:	0a5d      	mov.n	a5, a10
400e940c:	1b0c      	movi.n	a11, 1
400e940e:	02ad      	mov.n	a10, a2
400e9410:	ffeca5        	call8	400e92dc <get_rst_en_mask>
400e9413:	f87c      	movi.n	a8, -1
400e9415:	30a8a0        	xor	a10, a8, a10
400e9418:	10a5a0        	and	a10, a5, a10
400e941b:	0020c0        	memw
400e941e:	03a9      	s32i.n	a10, a3, 0
400e9420:	04ad      	mov.n	a10, a4
400e9422:	9f7ae5        	call8	40088bd0 <vTaskExitCritical>
400e9425:	f01d      	retw.n
	...

400e9428 <timer_group_intr_enable>:
400e9428:	006136        	entry	a1, 48
400e942b:	2e22b6        	bltui	a2, 2, 400e945d <timer_group_intr_enable+0x35>
400e942e:	9a9025        	call8	40083d30 <esp_log_timestamp>
400e9431:	9d4eb1        	l32r	a11, 400d096c <_flash_cache_start+0x954>
400e9434:	9d5021        	l32r	a2, 400d0974 <_flash_cache_start+0x95c>
400e9437:	016122        	s32i	a2, a1, 4
400e943a:	fea022        	movi	a2, 254
400e943d:	006122        	s32i	a2, a1, 0
400e9440:	f03d      	nop.n
400e9442:	f03d      	nop.n
400e9444:	f03d      	nop.n
400e9446:	f03d      	nop.n
400e9448:	9d48f1        	l32r	a15, 400d0968 <_flash_cache_start+0x950>
400e944b:	0bed      	mov.n	a14, a11
400e944d:	0add      	mov.n	a13, a10
400e944f:	9d48c1        	l32r	a12, 400d0970 <_flash_cache_start+0x958>
400e9452:	01a0a2        	movi	a10, 1
400e9455:	9a7625        	call8	40083bb8 <esp_log_write>
400e9458:	02a122        	movi	a2, 0x102
400e945b:	f01d      	retw.n
400e945d:	9d4641        	l32r	a4, 400d0978 <_flash_cache_start+0x960>
400e9460:	b04240        	addx8	a4, a2, a4
400e9463:	04ad      	mov.n	a10, a4
400e9465:	9f62a5        	call8	40088a90 <vTaskEnterCritical>
400e9468:	9d4581        	l32r	a8, 400d097c <_flash_cache_start+0x964>
400e946b:	a02280        	addx4	a2, a2, a8
400e946e:	0228      	l32i.n	a2, a2, 0
400e9470:	0020c0        	memw
400e9473:	262282        	l32i	a8, a2, 152
400e9476:	203830        	or	a3, a8, a3
400e9479:	0020c0        	memw
400e947c:	266232        	s32i	a3, a2, 152
400e947f:	04ad      	mov.n	a10, a4
400e9481:	9f74e5        	call8	40088bd0 <vTaskExitCritical>
400e9484:	020c      	movi.n	a2, 0
400e9486:	f01d      	retw.n

400e9488 <rtc_isr>:
400e9488:	004136        	entry	a1, 32
400e948b:	9d3d21        	l32r	a2, 400d0980 <_flash_cache_start+0x968>
400e948e:	0020c0        	memw
400e9491:	0238      	l32i.n	a3, a2, 0
400e9493:	9d3ca1        	l32r	a10, 400d0984 <_flash_cache_start+0x96c>
400e9496:	9f5fa5        	call8	40088a90 <vTaskEnterCritical>
400e9499:	9d3b21        	l32r	a2, 400d0988 <_flash_cache_start+0x970>
400e949c:	0228      	l32i.n	a2, a2, 0
400e949e:	0006c6        	j	400e94bd <rtc_isr+0x35>
400e94a1:	0288      	l32i.n	a8, a2, 0
400e94a3:	130387        	bnone	a3, a8, 400e94ba <rtc_isr+0x32>
400e94a6:	9d3741        	l32r	a4, 400d0984 <_flash_cache_start+0x96c>
400e94a9:	04ad      	mov.n	a10, a4
400e94ab:	9f7265        	call8	40088bd0 <vTaskExitCritical>
400e94ae:	1288      	l32i.n	a8, a2, 4
400e94b0:	22a8      	l32i.n	a10, a2, 8
400e94b2:	0008e0        	callx8	a8
400e94b5:	04ad      	mov.n	a10, a4
400e94b7:	9f5da5        	call8	40088a90 <vTaskEnterCritical>
400e94ba:	032222        	l32i	a2, a2, 12
400e94bd:	fe0256        	bnez	a2, 400e94a1 <rtc_isr+0x19>
400e94c0:	9d31a1        	l32r	a10, 400d0984 <_flash_cache_start+0x96c>
400e94c3:	9f70e5        	call8	40088bd0 <vTaskExitCritical>
400e94c6:	9b6b21        	l32r	a2, 400d0274 <_flash_cache_start+0x25c>
400e94c9:	0020c0        	memw
400e94cc:	006232        	s32i	a3, a2, 0
400e94cf:	000090        	retw
	...

400e94d4 <rtc_isr_ensure_installed>:
400e94d4:	004136        	entry	a1, 32
400e94d7:	9d2ba1        	l32r	a10, 400d0984 <_flash_cache_start+0x96c>
400e94da:	9f5b65        	call8	40088a90 <vTaskEnterCritical>
400e94dd:	9d2b81        	l32r	a8, 400d098c <_flash_cache_start+0x974>
400e94e0:	002882        	l32i	a8, a8, 0
400e94e3:	033856        	bnez	a8, 400e951a <rtc_isr_ensure_installed+0x46>
400e94e6:	0b0c      	movi.n	a11, 0
400e94e8:	9b6b21        	l32r	a2, 400d0294 <_flash_cache_start+0x27c>
400e94eb:	0020c0        	memw
400e94ee:	02b9      	s32i.n	a11, a2, 0
400e94f0:	f87c      	movi.n	a8, -1
400e94f2:	f03d      	nop.n
400e94f4:	f03d      	nop.n
400e94f6:	f03d      	nop.n
400e94f8:	9b5f21        	l32r	a2, 400d0274 <_flash_cache_start+0x25c>
400e94fb:	0020c0        	memw
400e94fe:	0289      	s32i.n	a8, a2, 0
400e9500:	f03d      	nop.n
400e9502:	f03d      	nop.n
400e9504:	f03d      	nop.n
400e9506:	f03d      	nop.n
400e9508:	9d21e1        	l32r	a14, 400d098c <_flash_cache_start+0x974>
400e950b:	0bdd      	mov.n	a13, a11
400e950d:	9d20c1        	l32r	a12, 400d0990 <_flash_cache_start+0x978>
400e9510:	ea2c      	movi.n	a10, 46
400e9512:	ecbfa5        	call8	400d610c <esp_intr_alloc>
400e9515:	0a2d      	mov.n	a2, a10
400e9517:	000046        	j	400e951c <rtc_isr_ensure_installed+0x48>
400e951a:	020c      	movi.n	a2, 0
400e951c:	9d1aa1        	l32r	a10, 400d0984 <_flash_cache_start+0x96c>
400e951f:	9f6b25        	call8	40088bd0 <vTaskExitCritical>
400e9522:	f01d      	retw.n

400e9524 <rtc_gpio_force_hold_dis_all>:
400e9524:	004136        	entry	a1, 32
400e9527:	080c      	movi.n	a8, 0
400e9529:	000a46        	j	400e9556 <rtc_gpio_force_hold_dis_all+0x32>
400e952c:	a88000        	lsi	f0, a0, 0x2a0
400e952f:	aa8090        	floor.s	a8, f0, 9
400e9532:	9ae0a0        	trunc.s	a14, f0, 10
400e9535:	17a111        	l32r	a1, 400af3bc <_iram_end+0x21868>
400e9538:	9a9d      	lsi	f9, a10, 40
400e953a:	989a      	add.n	a9, a8, a9
400e953c:	9c99      	s32i.n	a9, a12, 36
400e953e:	a139      	s32i.n	a3, a1, 40
400e9540:	c09d16        	beqz	a13, 400e914d <uart_flush+0x115>
400e9543:	b80020        	lsi	f2, a0, 0x2e0
400e9546:	7c0a      	add.n	a7, a12, a0
400e9548:	90fc      	bnez.n	a0, 400e9585 <rtc_isr_register+0x25>
400e954a:	309c      	beqz.n	a0, 400e9561 <rtc_isr_register+0x1>
400e954c:	109b90        	and	a9, a11, a9
400e954f:	0020c0        	memw
400e9552:	0a99      	s32i.n	a9, a10, 0
400e9554:	881b      	addi.n	a8, a8, 1
400e9556:	792c      	movi.n	a9, 39
400e9558:	d1a987        	bge	a9, a8, 400e952d <rtc_gpio_force_hold_dis_all+0x9>
400e955b:	f01d      	retw.n
400e955d:	000000        	ill

400e9560 <rtc_isr_register>:
400e9560:	004136        	entry	a1, 32
400e9563:	fff725        	call8	400e94d4 <rtc_isr_ensure_installed>
400e9566:	034a56        	bnez	a10, 400e959e <rtc_isr_register+0x3e>
400e9569:	10a0a2        	movi	a10, 16
400e956c:	9ade81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e956f:	0008e0        	callx8	a8
400e9572:	0a5d      	mov.n	a5, a10
400e9574:	caac      	beqz.n	a10, 400e95a4 <rtc_isr_register+0x44>
400e9576:	1a29      	s32i.n	a2, a10, 4
400e9578:	2a39      	s32i.n	a3, a10, 8
400e957a:	0a49      	s32i.n	a4, a10, 0
400e957c:	f03d      	nop.n
400e957e:	f03d      	nop.n
400e9580:	f03d      	nop.n
400e9582:	f03d      	nop.n
400e9584:	9d0021        	l32r	a2, 400d0984 <_flash_cache_start+0x96c>
400e9587:	02ad      	mov.n	a10, a2
400e9589:	9f5065        	call8	40088a90 <vTaskEnterCritical>
400e958c:	9cff31        	l32r	a3, 400d0988 <_flash_cache_start+0x970>
400e958f:	0348      	l32i.n	a4, a3, 0
400e9591:	3549      	s32i.n	a4, a5, 12
400e9593:	0359      	s32i.n	a5, a3, 0
400e9595:	02ad      	mov.n	a10, a2
400e9597:	9f63a5        	call8	40088bd0 <vTaskExitCritical>
400e959a:	020c      	movi.n	a2, 0
400e959c:	f01d      	retw.n
400e959e:	0a2d      	mov.n	a2, a10
400e95a0:	f01d      	retw.n
400e95a2:	220000        	orb	b0, b0, b0
400e95a5:	1d01a1        	l32r	a10, 400b09ac <_iram_end+0x22e58>
400e95a8:	0000f0        	callx12	a0
	...

400e95ac <get_boot_time>:
400e95ac:	004136        	entry	a1, 32
400e95af:	9cfba1        	l32r	a10, 400d099c <_flash_cache_start+0x984>
400e95b2:	9b5165        	call8	40084ac8 <_lock_acquire>
400e95b5:	9cfa21        	l32r	a2, 400d09a0 <_flash_cache_start+0x988>
400e95b8:	0020c0        	memw
400e95bb:	002222        	l32i	a2, a2, 0
400e95be:	9cf931        	l32r	a3, 400d09a4 <_flash_cache_start+0x98c>
400e95c1:	0020c0        	memw
400e95c4:	002332        	l32i	a3, a3, 0
400e95c7:	9cf5a1        	l32r	a10, 400d099c <_flash_cache_start+0x984>
400e95ca:	9b53e5        	call8	40084b08 <_lock_release>
400e95cd:	f01d      	retw.n
	...

400e95d0 <set_boot_time>:
400e95d0:	004136        	entry	a1, 32
400e95d3:	9cf241        	l32r	a4, 400d099c <_flash_cache_start+0x984>
400e95d6:	20a440        	or	a10, a4, a4
400e95d9:	9b4ee5        	call8	40084ac8 <_lock_acquire>
400e95dc:	9cf181        	l32r	a8, 400d09a0 <_flash_cache_start+0x988>
400e95df:	0020c0        	memw
400e95e2:	006822        	s32i	a2, a8, 0
400e95e5:	f03d      	nop.n
400e95e7:	f03d      	nop.n
400e95e9:	f03d      	nop.n
400e95eb:	f03d      	nop.n
400e95ed:	9ced81        	l32r	a8, 400d09a4 <_flash_cache_start+0x98c>
400e95f0:	0020c0        	memw
400e95f3:	0839      	s32i.n	a3, a8, 0
400e95f5:	04ad      	mov.n	a10, a4
400e95f7:	9b5125        	call8	40084b08 <_lock_release>
400e95fa:	f01d      	retw.n

400e95fc <get_time_since_boot>:
400e95fc:	004136        	entry	a1, 32
400e95ff:	980d25        	call8	400816d0 <esp_timer_get_time>
400e9602:	9ce931        	l32r	a3, 400d09a8 <_flash_cache_start+0x990>
400e9605:	002322        	l32i	a2, a3, 0
400e9608:	012382        	l32i	a8, a3, 4
400e960b:	8022a0        	add	a2, a2, a10
400e960e:	130c      	movi.n	a3, 1
400e9610:	0132a7        	bltu	a2, a10, 400e9615 <get_time_since_boot+0x19>
400e9613:	030c      	movi.n	a3, 0
400e9615:	b8ba      	add.n	a11, a8, a11
400e9617:	33ba      	add.n	a3, a3, a11
400e9619:	f01d      	retw.n
	...

400e961c <adjust_boot_time>:
400e961c:	004136        	entry	a1, 32
400e961f:	fff8e5        	call8	400e95ac <get_boot_time>
400e9622:	202aa0        	or	a2, a10, a10
400e9625:	203bb0        	or	a3, a11, a11
400e9628:	208ab0        	or	a8, a10, a11
400e962b:	189c      	beqz.n	a8, 400e9640 <adjust_boot_time+0x24>
400e962d:	fffce5        	call8	400e95fc <get_time_since_boot>
400e9630:	9cdf81        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e9633:	0898      	l32i.n	a9, a8, 0
400e9635:	1888      	l32i.n	a8, a8, 4
400e9637:	053b87        	bltu	a11, a8, 400e9640 <adjust_boot_time+0x24>
400e963a:	0f98b7        	bne	a8, a11, 400e964d <adjust_boot_time+0x31>
400e963d:	0cba97        	bgeu	a10, a9, 400e964d <adjust_boot_time+0x31>
400e9640:	9a87a1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e9643:	9a86b1        	l32r	a11, 400d005c <_flash_cache_start+0x44>
400e9646:	9cd981        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e9649:	08a9      	s32i.n	a10, a8, 0
400e964b:	18b9      	s32i.n	a11, a8, 4
400e964d:	f03d      	nop.n
400e964f:	f03d      	nop.n
400e9651:	f03d      	nop.n
400e9653:	f03d      	nop.n
400e9655:	9cd581        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e9658:	002892        	l32i	a9, a8, 0
400e965b:	0128a2        	l32i	a10, a8, 4
400e965e:	2089a0        	or	a8, a9, a10
400e9661:	0fb816        	beqz	a8, 400e9760 <adjust_boot_time+0x144>
400e9664:	fff965        	call8	400e95fc <get_time_since_boot>
400e9667:	018b60        	slli	a8, a11, 26
400e966a:	41e6a0        	srli	a14, a10, 6
400e966d:	20e8e0        	or	a14, a8, a14
400e9670:	41d6b0        	srli	a13, a11, 6
400e9673:	9cce81        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e9676:	0128c2        	l32i	a12, a8, 4
400e9679:	019c60        	slli	a9, a12, 26
400e967c:	0888      	l32i.n	a8, a8, 0
400e967e:	418680        	srli	a8, a8, 6
400e9681:	208980        	or	a8, a9, a8
400e9684:	41c6c0        	srli	a12, a12, 6
400e9687:	c08e80        	sub	a8, a14, a8
400e968a:	190c      	movi.n	a9, 1
400e968c:	013e87        	bltu	a14, a8, 400e9691 <adjust_boot_time+0x75>
400e968f:	090c      	movi.n	a9, 0
400e9691:	c0cdc0        	sub	a12, a13, a12
400e9694:	c09c90        	sub	a9, a12, a9
400e9697:	08dd      	mov.n	a13, a8
400e9699:	0519e6        	bgei	a9, 1, 400e96a2 <adjust_boot_time+0x86>
400e969c:	0c0956        	bnez	a9, 400e9760 <adjust_boot_time+0x144>
400e969f:	0bd816        	beqz	a8, 400e9760 <adjust_boot_time+0x144>
400e96a2:	9cc2c1        	l32r	a12, 400d09ac <_flash_cache_start+0x994>
400e96a5:	0ca9      	s32i.n	a10, a12, 0
400e96a7:	1cb9      	s32i.n	a11, a12, 4
400e96a9:	f03d      	nop.n
400e96ab:	f03d      	nop.n
400e96ad:	f03d      	nop.n
400e96af:	f03d      	nop.n
400e96b1:	9cbfb1        	l32r	a11, 400d09b0 <_flash_cache_start+0x998>
400e96b4:	0ba8      	l32i.n	a10, a11, 0
400e96b6:	1bb8      	l32i.n	a11, a11, 4
400e96b8:	04dbd6        	bgez	a11, 400e9709 <adjust_boot_time+0xed>
400e96bb:	e8aa      	add.n	a14, a8, a10
400e96bd:	1c0c      	movi.n	a12, 1
400e96bf:	013ed7        	bltu	a14, a13, 400e96c4 <adjust_boot_time+0xa8>
400e96c2:	0c0c      	movi.n	a12, 0
400e96c4:	d9ba      	add.n	a13, a9, a11
400e96c6:	ccda      	add.n	a12, a12, a13
400e96c8:	020c96        	bltz	a12, 400e96ec <adjust_boot_time+0xd0>
400e96cb:	a2aa      	add.n	a10, a2, a10
400e96cd:	180c      	movi.n	a8, 1
400e96cf:	013a27        	bltu	a10, a2, 400e96d4 <adjust_boot_time+0xb8>
400e96d2:	080c      	movi.n	a8, 0
400e96d4:	b3ba      	add.n	a11, a3, a11
400e96d6:	38ba      	add.n	a3, a8, a11
400e96d8:	0a2d      	mov.n	a2, a10
400e96da:	9a60a1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e96dd:	9a5fb1        	l32r	a11, 400d005c <_flash_cache_start+0x44>
400e96e0:	9cb381        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e96e3:	08a9      	s32i.n	a10, a8, 0
400e96e5:	18b9      	s32i.n	a11, a8, 4
400e96e7:	001b86        	j	400e9759 <adjust_boot_time+0x13d>
400e96ea:	a10000        	sll	a0, a0
400e96ed:	e99cb1        	l32r	a11, 400e3d60 <_vfprintf_r+0x1e24>
400e96f0:	c90a      	add.n	a12, a9, a0
400e96f2:	801a      	add.n	a8, a0, a1
400e96f4:	0cc082        	addi	a8, a0, 12
400e96f7:	871a      	add.n	a8, a7, a1
400e96f9:	0c0132        	l8ui	a3, a1, 12
400e96fc:	900a      	add.n	a9, a0, a0
400e96fe:	a0c093        	ssip	f9, a0, 0x280
400e9701:	c039      	s32i.n	a3, a0, 48
400e9703:	082d      	mov.n	a2, a8
400e9705:	001406        	j	400e9759 <adjust_boot_time+0x13d>
400e9708:	da8000        	ufloat.s	f8, a0, 0
400e970b:	1c0cc0        	lsi	f12, a12, 112
400e970e:	023ad7        	bltu	a10, a13, 400e9714 <adjust_boot_time+0xf8>
400e9711:	00a0c2        	movi	a12, 0
400e9714:	c0eb90        	sub	a14, a11, a9
400e9717:	c0cec0        	sub	a12, a14, a12
400e971a:	221ce6        	bgei	a12, 1, 400e9740 <adjust_boot_time+0x124>
400e971d:	0ccc      	bnez.n	a12, 400e9721 <adjust_boot_time+0x105>
400e971f:	dddc      	bnez.n	a13, 400e9740 <adjust_boot_time+0x124>
400e9721:	a2aa      	add.n	a10, a2, a10
400e9723:	180c      	movi.n	a8, 1
400e9725:	013a27        	bltu	a10, a2, 400e972a <adjust_boot_time+0x10e>
400e9728:	080c      	movi.n	a8, 0
400e972a:	b3ba      	add.n	a11, a3, a11
400e972c:	38ba      	add.n	a3, a8, a11
400e972e:	0a2d      	mov.n	a2, a10
400e9730:	9a4ba1        	l32r	a10, 400d005c <_flash_cache_start+0x44>
400e9733:	9a4ab1        	l32r	a11, 400d005c <_flash_cache_start+0x44>
400e9736:	9c9d81        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e9739:	08a9      	s32i.n	a10, a8, 0
400e973b:	18b9      	s32i.n	a11, a8, 4
400e973d:	000606        	j	400e9759 <adjust_boot_time+0x13d>
400e9740:	9c9ca1        	l32r	a10, 400d09b0 <_flash_cache_start+0x998>
400e9743:	0ad9      	s32i.n	a13, a10, 0
400e9745:	1ac9      	s32i.n	a12, a10, 4
400e9747:	828a      	add.n	a8, a2, a8
400e9749:	1a0c      	movi.n	a10, 1
400e974b:	013827        	bltu	a8, a2, 400e9750 <adjust_boot_time+0x134>
400e974e:	0a0c      	movi.n	a10, 0
400e9750:	809390        	add	a9, a3, a9
400e9753:	803a90        	add	a3, a10, a9
400e9756:	202880        	or	a2, a8, a8
400e9759:	02ad      	mov.n	a10, a2
400e975b:	03bd      	mov.n	a11, a3
400e975d:	ffe725        	call8	400e95d0 <set_boot_time>
400e9760:	f01d      	retw.n
	...

400e9764 <get_adjusted_boot_time>:
400e9764:	004136        	entry	a1, 32
400e9767:	9c9331        	l32r	a3, 400d09b4 <_flash_cache_start+0x99c>
400e976a:	20a330        	or	a10, a3, a3
400e976d:	9b35a5        	call8	40084ac8 <_lock_acquire>
400e9770:	ffeaa5        	call8	400e961c <adjust_boot_time>
400e9773:	0a4d      	mov.n	a4, a10
400e9775:	0b5d      	mov.n	a5, a11
400e9777:	03ad      	mov.n	a10, a3
400e9779:	9b38e5        	call8	40084b08 <_lock_release>
400e977c:	042d      	mov.n	a2, a4
400e977e:	053d      	mov.n	a3, a5
400e9780:	f01d      	retw.n
	...

400e9784 <esp_clk_slowclk_cal_set>:
400e9784:	004136        	entry	a1, 32
400e9787:	a2d925        	call8	4008c518 <rtc_time_get>
400e978a:	9c8b31        	l32r	a3, 400d09b8 <_flash_cache_start+0x9a0>
400e978d:	0020c0        	memw
400e9790:	002382        	l32i	a8, a3, 0
400e9793:	c08820        	sub	a8, a8, a2
400e9796:	313f80        	srai	a3, a8, 31
400e9799:	8233a0        	mull	a3, a3, a10
400e979c:	82b8b0        	mull	a11, a8, a11
400e979f:	80b3b0        	add	a11, a3, a11
400e97a2:	8238a0        	mull	a3, a8, a10
400e97a5:	a288a0        	muluh	a8, a8, a10
400e97a8:	808b80        	add	a8, a11, a8
400e97ab:	319f80        	srai	a9, a8, 31
400e97ae:	9c8341        	l32r	a4, 400d09bc <_flash_cache_start+0x9a4>
400e97b1:	104940        	and	a4, a9, a4
400e97b4:	343a      	add.n	a3, a4, a3
400e97b6:	1a0c      	movi.n	a10, 1
400e97b8:	013347        	bltu	a3, a4, 400e97bd <esp_clk_slowclk_cal_set+0x39>
400e97bb:	0a0c      	movi.n	a10, 0
400e97bd:	808a80        	add	a8, a10, a8
400e97c0:	114830        	slli	a4, a8, 13
400e97c3:	c53330        	extui	a3, a3, 19, 13
400e97c6:	203430        	or	a3, a4, a3
400e97c9:	314380        	srai	a4, a8, 19
400e97cc:	ffdde5        	call8	400e95ac <get_boot_time>
400e97cf:	803a30        	add	a3, a10, a3
400e97d2:	01a092        	movi	a9, 1
400e97d5:	0133a7        	bltu	a3, a10, 400e97da <esp_clk_slowclk_cal_set+0x56>
400e97d8:	090c      	movi.n	a9, 0
400e97da:	8b4a      	add.n	a8, a11, a4
400e97dc:	b98a      	add.n	a11, a9, a8
400e97de:	20a330        	or	a10, a3, a3
400e97e1:	ffdee5        	call8	400e95d0 <set_boot_time>
400e97e4:	9c7531        	l32r	a3, 400d09b8 <_flash_cache_start+0x9a0>
400e97e7:	0020c0        	memw
400e97ea:	0329      	s32i.n	a2, a3, 0
400e97ec:	f01d      	retw.n
	...

400e97f0 <esp_clk_slowclk_cal_get>:
400e97f0:	004136        	entry	a1, 32
400e97f3:	9c7121        	l32r	a2, 400d09b8 <_flash_cache_start+0x9a0>
400e97f6:	0020c0        	memw
400e97f9:	0228      	l32i.n	a2, a2, 0
400e97fb:	f01d      	retw.n
400e97fd:	000000        	ill

400e9800 <get_rtc_time_us>:
400e9800:	004136        	entry	a1, 32
400e9803:	a2d165        	call8	4008c518 <rtc_time_get>
400e9806:	202aa0        	or	a2, a10, a10
400e9809:	203bb0        	or	a3, a11, a11
400e980c:	fffe25        	call8	400e97f0 <esp_clk_slowclk_cal_get>
400e980f:	8292a0        	mull	a9, a2, a10
400e9812:	a222a0        	muluh	a2, a2, a10
400e9815:	118230        	slli	a8, a2, 13
400e9818:	c59390        	extui	a9, a9, 19, 13
400e981b:	209890        	or	a9, a8, a9
400e981e:	c58320        	extui	a8, a2, 19, 13
400e9821:	8223a0        	mull	a2, a3, a10
400e9824:	a2b3a0        	muluh	a11, a3, a10
400e9827:	c53320        	extui	a3, a2, 19, 13
400e982a:	11ab30        	slli	a10, a11, 13
400e982d:	20a3a0        	or	a10, a3, a10
400e9830:	112230        	slli	a2, a2, 13
400e9833:	802920        	add	a2, a9, a2
400e9836:	130c      	movi.n	a3, 1
400e9838:	013297        	bltu	a2, a9, 400e983d <get_rtc_time_us+0x3d>
400e983b:	030c      	movi.n	a3, 0
400e983d:	a8aa      	add.n	a10, a8, a10
400e983f:	33aa      	add.n	a3, a3, a10
400e9841:	f01d      	retw.n
	...

400e9844 <esp_set_time_from_rtc>:
400e9844:	004136        	entry	a1, 32
400e9847:	fffba5        	call8	400e9800 <get_rtc_time_us>
400e984a:	0a3d      	mov.n	a3, a10
400e984c:	0b2d      	mov.n	a2, a11
400e984e:	97e825        	call8	400816d0 <esp_timer_get_time>
400e9851:	c0a3a0        	sub	a10, a3, a10
400e9854:	180c      	movi.n	a8, 1
400e9856:	0233a7        	bltu	a3, a10, 400e985c <esp_set_time_from_rtc+0x18>
400e9859:	00a082        	movi	a8, 0
400e985c:	c0b2b0        	sub	a11, a2, a11
400e985f:	c08b80        	sub	a8, a11, a8
400e9862:	9c5121        	l32r	a2, 400d09a8 <_flash_cache_start+0x990>
400e9865:	02a9      	s32i.n	a10, a2, 0
400e9867:	1289      	s32i.n	a8, a2, 4
400e9869:	f01d      	retw.n
	...

400e986c <clock_gettime>:
400e986c:	006136        	entry	a1, 48
400e986f:	00d356        	bnez	a3, 400e9880 <clock_gettime+0x14>
400e9872:	f12925        	call8	400dab04 <__errno>
400e9875:	16a022        	movi	a2, 22
400e9878:	006a22        	s32i	a2, a10, 0
400e987b:	ffaf22        	movi	a2, -1
400e987e:	f01d      	retw.n
400e9880:	051226        	beqi	a2, 1, 400e9889 <clock_gettime+0x1d>
400e9883:	2e4226        	beqi	a2, 4, 400e98b5 <clock_gettime+0x49>
400e9886:	001b06        	j	400e98f6 <clock_gettime+0x8a>
400e9889:	00a0c2        	movi	a12, 0
400e988c:	08c1b2        	addi	a11, a1, 8
400e988f:	20acc0        	or	a10, a12, a12
400e9892:	9af825        	call8	40084814 <_gettimeofday_r>
400e9895:	2128      	l32i.n	a2, a1, 8
400e9897:	0329      	s32i.n	a2, a3, 0
400e9899:	f03d      	nop.n
400e989b:	f03d      	nop.n
400e989d:	f03d      	nop.n
400e989f:	f03d      	nop.n
400e98a1:	3188      	l32i.n	a8, a1, 12
400e98a3:	1128b0        	slli	a2, a8, 5
400e98a6:	c02280        	sub	a2, a2, a8
400e98a9:	a02280        	addx4	a2, a2, a8
400e98ac:	1142d0        	slli	a4, a2, 3
400e98af:	1349      	s32i.n	a4, a3, 4
400e98b1:	020c      	movi.n	a2, 0
400e98b3:	f01d      	retw.n
400e98b5:	97e1a5        	call8	400816d0 <esp_timer_get_time>
400e98b8:	0a4d      	mov.n	a4, a10
400e98ba:	0b5d      	mov.n	a5, a11
400e98bc:	9b08c1        	l32r	a12, 400d04dc <_flash_cache_start+0x4c4>
400e98bf:	99e7d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e98c2:	99e081        	l32r	a8, 400d0044 <_flash_cache_start+0x2c>
400e98c5:	0008e0        	callx8	a8
400e98c8:	03a9      	s32i.n	a10, a3, 0
400e98ca:	f03d      	nop.n
400e98cc:	f03d      	nop.n
400e98ce:	f03d      	nop.n
400e98d0:	f03d      	nop.n
400e98d2:	9b02c1        	l32r	a12, 400d04dc <_flash_cache_start+0x4c4>
400e98d5:	99e1d1        	l32r	a13, 400d005c <_flash_cache_start+0x44>
400e98d8:	20a440        	or	a10, a4, a4
400e98db:	20b550        	or	a11, a5, a5
400e98de:	9bb281        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e98e1:	0008e0        	callx8	a8
400e98e4:	112ab0        	slli	a2, a10, 5
400e98e7:	c022a0        	sub	a2, a2, a10
400e98ea:	a0a2a0        	addx4	a10, a2, a10
400e98ed:	112ad0        	slli	a2, a10, 3
400e98f0:	1329      	s32i.n	a2, a3, 4
400e98f2:	020c      	movi.n	a2, 0
400e98f4:	f01d      	retw.n
400e98f6:	f120e5        	call8	400dab04 <__errno>
400e98f9:	16a022        	movi	a2, 22
400e98fc:	006a22        	s32i	a2, a10, 0
400e98ff:	ffaf22        	movi	a2, -1
400e9902:	f01d      	retw.n

400e9904 <_raise_r>:
400e9904:	004136        	entry	a1, 32
400e9907:	a1a665        	call8	4008b36c <abort>
	...

400e990c <_sbrk_r>:
400e990c:	004136        	entry	a1, 32
400e990f:	a1a5e5        	call8	4008b36c <abort>
	...

400e9914 <raise_r_stub>:
400e9914:	004136        	entry	a1, 32
400e9917:	00a0b2        	movi	a11, 0
400e991a:	20a220        	or	a10, a2, a2
400e991d:	fffe65        	call8	400e9904 <_raise_r>
400e9920:	000090        	retw
	...

400e9924 <esp_setup_syscall_table>:
400e9924:	004136        	entry	a1, 32
400e9927:	9c2781        	l32r	a8, 400d09c4 <_flash_cache_start+0x9ac>
400e992a:	9c2591        	l32r	a9, 400d09c0 <_flash_cache_start+0x9a8>
400e992d:	0989      	s32i.n	a8, a9, 0
400e992f:	f03d      	nop.n
400e9931:	f03d      	nop.n
400e9933:	f03d      	nop.n
400e9935:	f03d      	nop.n
400e9937:	9c2491        	l32r	a9, 400d09c8 <_flash_cache_start+0x9b0>
400e993a:	0989      	s32i.n	a8, a9, 0
400e993c:	f03d      	nop.n
400e993e:	f03d      	nop.n
400e9940:	f03d      	nop.n
400e9942:	f03d      	nop.n
400e9944:	9c2391        	l32r	a9, 400d09d0 <_flash_cache_start+0x9b8>
400e9947:	9c2181        	l32r	a8, 400d09cc <_flash_cache_start+0x9b4>
400e994a:	0899      	s32i.n	a9, a8, 0
400e994c:	4a0c      	movi.n	a10, 4
400e994e:	99e581        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e9951:	0008e0        	callx8	a8
400e9954:	9c2081        	l32r	a8, 400d09d4 <_flash_cache_start+0x9bc>
400e9957:	08a9      	s32i.n	a10, a8, 0
400e9959:	080c      	movi.n	a8, 0
400e995b:	0a89      	s32i.n	a8, a10, 0
400e995d:	f01d      	retw.n
	...

400e9960 <find_key>:
400e9960:	004136        	entry	a1, 32
400e9963:	023d      	mov.n	a3, a2
400e9965:	9c1ca1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e9968:	9f1265        	call8	40088a90 <vTaskEnterCritical>
400e996b:	9c1c21        	l32r	a2, 400d09dc <_flash_cache_start+0x9c4>
400e996e:	0228      	l32i.n	a2, a2, 0
400e9970:	000246        	j	400e997d <find_key+0x1d>
400e9973:	000000        	ill
400e9976:	0288      	l32i.n	a8, a2, 0
400e9978:	041837        	beq	a8, a3, 400e9980 <find_key+0x20>
400e997b:	2228      	l32i.n	a2, a2, 8
400e997d:	ff5256        	bnez	a2, 400e9976 <find_key+0x16>
400e9980:	9c16a1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e9983:	9f24e5        	call8	40088bd0 <vTaskExitCritical>
400e9986:	f01d      	retw.n

400e9988 <pthread_local_storage_thread_deleted_callback>:
400e9988:	004136        	entry	a1, 32
400e998b:	00e356        	bnez	a3, 400e999d <pthread_local_storage_thread_deleted_callback+0x15>
400e998e:	9c14d1        	l32r	a13, 400d09e0 <_flash_cache_start+0x9c8>
400e9991:	9c14c1        	l32r	a12, 400d09e4 <_flash_cache_start+0x9cc>
400e9994:	7ea0b2        	movi	a11, 126
400e9997:	9c14a1        	l32r	a10, 400d09e8 <_flash_cache_start+0x9d0>
400e999a:	f11325        	call8	400daacc <__assert_func>
400e999d:	0328      	l32i.n	a2, a3, 0
400e999f:	000846        	j	400e99c4 <pthread_local_storage_thread_deleted_callback+0x3c>
400e99a2:	000000        	ill
400e99a5:	0022a2        	l32i	a10, a2, 0
400e99a8:	fffb65        	call8	400e9960 <find_key>
400e99ab:	009a16        	beqz	a10, 400e99b8 <pthread_local_storage_thread_deleted_callback+0x30>
400e99ae:	012a82        	l32i	a8, a10, 4
400e99b1:	388c      	beqz.n	a8, 400e99b8 <pthread_local_storage_thread_deleted_callback+0x30>
400e99b3:	12a8      	l32i.n	a10, a2, 4
400e99b5:	0008e0        	callx8	a8
400e99b8:	2248      	l32i.n	a4, a2, 8
400e99ba:	02ad      	mov.n	a10, a2
400e99bc:	99b481        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e99bf:	0008e0        	callx8	a8
400e99c2:	042d      	mov.n	a2, a4
400e99c4:	fdd256        	bnez	a2, 400e99a5 <pthread_local_storage_thread_deleted_callback+0x1d>
400e99c7:	20a330        	or	a10, a3, a3
400e99ca:	99b081        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e99cd:	0008e0        	callx8	a8
400e99d0:	f01d      	retw.n
	...

400e99d4 <pthread_key_create>:
400e99d4:	004136        	entry	a1, 32
400e99d7:	ca0c      	movi.n	a10, 12
400e99d9:	99c281        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e99dc:	0008e0        	callx8	a8
400e99df:	0a4d      	mov.n	a4, a10
400e99e1:	041a16        	beqz	a10, 400e9a26 <pthread_key_create+0x52>
400e99e4:	9bfda1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e99e7:	9f0aa5        	call8	40088a90 <vTaskEnterCritical>
400e99ea:	9bfc81        	l32r	a8, 400d09dc <_flash_cache_start+0x9c4>
400e99ed:	0888      	l32i.n	a8, a8, 0
400e99ef:	588c      	beqz.n	a8, 400e99f8 <pthread_key_create+0x24>
400e99f1:	0888      	l32i.n	a8, a8, 0
400e99f3:	881b      	addi.n	a8, a8, 1
400e99f5:	000086        	j	400e99fb <pthread_key_create+0x27>
400e99f8:	01a082        	movi	a8, 1
400e99fb:	006482        	s32i	a8, a4, 0
400e99fe:	016432        	s32i	a3, a4, 4
400e9a01:	0289      	s32i.n	a8, a2, 0
400e9a03:	f03d      	nop.n
400e9a05:	f03d      	nop.n
400e9a07:	f03d      	nop.n
400e9a09:	f03d      	nop.n
400e9a0b:	9bf421        	l32r	a2, 400d09dc <_flash_cache_start+0x9c4>
400e9a0e:	0238      	l32i.n	a3, a2, 0
400e9a10:	2439      	s32i.n	a3, a4, 8
400e9a12:	0249      	s32i.n	a4, a2, 0
400e9a14:	f03d      	nop.n
400e9a16:	f03d      	nop.n
400e9a18:	f03d      	nop.n
400e9a1a:	f03d      	nop.n
400e9a1c:	9befa1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e9a1f:	9f1b25        	call8	40088bd0 <vTaskExitCritical>
400e9a22:	020c      	movi.n	a2, 0
400e9a24:	f01d      	retw.n
400e9a26:	c20c      	movi.n	a2, 12
400e9a28:	f01d      	retw.n
	...

400e9a2c <pthread_key_delete>:
400e9a2c:	004136        	entry	a1, 32
400e9a2f:	9beaa1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e9a32:	9f05e5        	call8	40088a90 <vTaskEnterCritical>
400e9a35:	20a220        	or	a10, a2, a2
400e9a38:	fff265        	call8	400e9960 <find_key>
400e9a3b:	021a16        	beqz	a10, 400e9a60 <pthread_key_delete+0x34>
400e9a3e:	9be721        	l32r	a2, 400d09dc <_flash_cache_start+0x9c4>
400e9a41:	0298      	l32i.n	a9, a2, 0
400e9a43:	099a97        	bne	a10, a9, 400e9a50 <pthread_key_delete+0x24>
400e9a46:	2988      	l32i.n	a8, a9, 8
400e9a48:	0289      	s32i.n	a8, a2, 0
400e9a4a:	000306        	j	400e9a5a <pthread_key_delete+0x2e>
400e9a4d:	089d00        	lsx	f9, a13, a0
400e9a50:	2988      	l32i.n	a8, a9, 8
400e9a52:	f89a87        	bne	a10, a8, 400e9a4e <pthread_key_delete+0x22>
400e9a55:	2828      	l32i.n	a2, a8, 8
400e9a57:	026922        	s32i	a2, a9, 8
400e9a5a:	998c81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9a5d:	0008e0        	callx8	a8
400e9a60:	9bdea1        	l32r	a10, 400d09d8 <_flash_cache_start+0x9c0>
400e9a63:	9f16e5        	call8	40088bd0 <vTaskExitCritical>
400e9a66:	020c      	movi.n	a2, 0
400e9a68:	f01d      	retw.n
	...

400e9a6c <pthread_getspecific>:
400e9a6c:	004136        	entry	a1, 32
400e9a6f:	00a0b2        	movi	a11, 0
400e9a72:	20abb0        	or	a10, a11, a11
400e9a75:	9ef9a5        	call8	40088a10 <pvTaskGetThreadLocalStoragePointer>
400e9a78:	00aa16        	beqz	a10, 400e9a86 <pthread_getspecific+0x1a>
400e9a7b:	02bd      	mov.n	a11, a2
400e9a7d:	0290e5        	call8	400ec38c <find_value>
400e9a80:	6a8c      	beqz.n	a10, 400e9a8a <pthread_getspecific+0x1e>
400e9a82:	1a28      	l32i.n	a2, a10, 4
400e9a84:	f01d      	retw.n
400e9a86:	020c      	movi.n	a2, 0
400e9a88:	f01d      	retw.n
400e9a8a:	020c      	movi.n	a2, 0
400e9a8c:	f01d      	retw.n
	...

400e9a90 <pthread_setspecific>:
400e9a90:	004136        	entry	a1, 32
400e9a93:	20a220        	or	a10, a2, a2
400e9a96:	ffeca5        	call8	400e9960 <find_key>
400e9a99:	07fa16        	beqz	a10, 400e9b1c <pthread_setspecific+0x8c>
400e9a9c:	00a0b2        	movi	a11, 0
400e9a9f:	20abb0        	or	a10, a11, a11
400e9aa2:	9ef6e5        	call8	40088a10 <pvTaskGetThreadLocalStoragePointer>
400e9aa5:	0a4d      	mov.n	a4, a10
400e9aa7:	9adc      	bnez.n	a10, 400e9ac4 <pthread_setspecific+0x34>
400e9aa9:	4b0c      	movi.n	a11, 4
400e9aab:	1a0c      	movi.n	a10, 1
400e9aad:	99e181        	l32r	a8, 400d0234 <_flash_cache_start+0x21c>
400e9ab0:	0008e0        	callx8	a8
400e9ab3:	0a4d      	mov.n	a4, a10
400e9ab5:	067a16        	beqz	a10, 400e9b20 <pthread_setspecific+0x90>
400e9ab8:	9bcdd1        	l32r	a13, 400d09ec <_flash_cache_start+0x9d4>
400e9abb:	0acd      	mov.n	a12, a10
400e9abd:	0b0c      	movi.n	a11, 0
400e9abf:	0bad      	mov.n	a10, a11
400e9ac1:	9fe665        	call8	40089928 <vTaskSetThreadLocalStoragePointerAndDelCallback>
400e9ac4:	20b220        	or	a11, a2, a2
400e9ac7:	20a440        	or	a10, a4, a4
400e9aca:	028c25        	call8	400ec38c <find_value>
400e9acd:	029a16        	beqz	a10, 400e9afa <pthread_setspecific+0x6a>
400e9ad0:	438c      	beqz.n	a3, 400e9ad8 <pthread_setspecific+0x48>
400e9ad2:	1a39      	s32i.n	a3, a10, 4
400e9ad4:	020c      	movi.n	a2, 0
400e9ad6:	f01d      	retw.n
400e9ad8:	0428      	l32i.n	a2, a4, 0
400e9ada:	089a27        	bne	a10, a2, 400e9ae6 <pthread_setspecific+0x56>
400e9add:	2228      	l32i.n	a2, a2, 8
400e9adf:	0429      	s32i.n	a2, a4, 0
400e9ae1:	000286        	j	400e9aef <pthread_setspecific+0x5f>
400e9ae4:	082d      	mov.n	a2, a8
400e9ae6:	2288      	l32i.n	a8, a2, 8
400e9ae8:	f89a87        	bne	a10, a8, 400e9ae4 <pthread_setspecific+0x54>
400e9aeb:	2838      	l32i.n	a3, a8, 8
400e9aed:	2239      	s32i.n	a3, a2, 8
400e9aef:	996781        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9af2:	0008e0        	callx8	a8
400e9af5:	020c      	movi.n	a2, 0
400e9af7:	f01d      	retw.n
400e9af9:	63ac00        	minu	a10, a12, a0
400e9afc:	ca0c      	movi.n	a10, 12
400e9afe:	997981        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e9b01:	0008e0        	callx8	a8
400e9b04:	0aac      	beqz.n	a10, 400e9b28 <pthread_setspecific+0x98>
400e9b06:	0a29      	s32i.n	a2, a10, 0
400e9b08:	1a39      	s32i.n	a3, a10, 4
400e9b0a:	f03d      	nop.n
400e9b0c:	f03d      	nop.n
400e9b0e:	f03d      	nop.n
400e9b10:	f03d      	nop.n
400e9b12:	0428      	l32i.n	a2, a4, 0
400e9b14:	2a29      	s32i.n	a2, a10, 8
400e9b16:	04a9      	s32i.n	a10, a4, 0
400e9b18:	020c      	movi.n	a2, 0
400e9b1a:	f01d      	retw.n
400e9b1c:	220c      	movi.n	a2, 2
400e9b1e:	f01d      	retw.n
400e9b20:	c20c      	movi.n	a2, 12
400e9b22:	f01d      	retw.n
400e9b24:	020c      	movi.n	a2, 0
400e9b26:	f01d      	retw.n
400e9b28:	c20c      	movi.n	a2, 12
400e9b2a:	f01d      	retw.n

400e9b2c <esp_pthread_cfg_key_destructor>:
400e9b2c:	004136        	entry	a1, 32
400e9b2f:	20a220        	or	a10, a2, a2
400e9b32:	995681        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9b35:	0008e0        	callx8	a8
400e9b38:	f01d      	retw.n
	...

400e9b3c <esp_pthread_init>:
400e9b3c:	004136        	entry	a1, 32
400e9b3f:	9bacb1        	l32r	a11, 400d09f0 <_flash_cache_start+0x9d8>
400e9b42:	9baca1        	l32r	a10, 400d09f4 <_flash_cache_start+0x9dc>
400e9b45:	ffe8e5        	call8	400e99d4 <pthread_key_create>
400e9b48:	202aa0        	or	a2, a10, a10
400e9b4b:	022a56        	bnez	a10, 400e9b71 <esp_pthread_init+0x35>
400e9b4e:	1a0c      	movi.n	a10, 1
400e9b50:	9de1a5        	call8	4008796c <xQueueCreateMutex>
400e9b53:	9ba981        	l32r	a8, 400d09f8 <_flash_cache_start+0x9e0>
400e9b56:	08a9      	s32i.n	a10, a8, 0
400e9b58:	8adc      	bnez.n	a10, 400e9b74 <esp_pthread_init+0x38>
400e9b5a:	f03d      	nop.n
400e9b5c:	f03d      	nop.n
400e9b5e:	f03d      	nop.n
400e9b60:	0020f0        	nop
400e9b63:	9ba421        	l32r	a2, 400d09f4 <_flash_cache_start+0x9dc>
400e9b66:	0022a2        	l32i	a10, a2, 0
400e9b69:	ffec25        	call8	400e9a2c <pthread_key_delete>
400e9b6c:	01a122        	movi	a2, 0x101
400e9b6f:	f01d      	retw.n
400e9b71:	01a122        	movi	a2, 0x101
400e9b74:	f01d      	retw.n
	...

400e9b78 <pthread_cancel>:
400e9b78:	004136        	entry	a1, 32
400e9b7b:	9a1b65        	call8	40083d30 <esp_log_timestamp>
400e9b7e:	9ba0b1        	l32r	a11, 400d0a00 <_flash_cache_start+0x9e8>
400e9b81:	9b9ef1        	l32r	a15, 400d09fc <_flash_cache_start+0x9e4>
400e9b84:	20ebb0        	or	a14, a11, a11
400e9b87:	20daa0        	or	a13, a10, a10
400e9b8a:	9b9ec1        	l32r	a12, 400d0a04 <_flash_cache_start+0x9ec>
400e9b8d:	1a0c      	movi.n	a10, 1
400e9b8f:	9a02a5        	call8	40083bb8 <esp_log_write>
400e9b92:	825c      	movi.n	a2, 88
400e9b94:	f01d      	retw.n
	...

400e9b98 <pthread_mutex_init>:
400e9b98:	004136        	entry	a1, 32
400e9b9b:	05d216        	beqz	a2, 400e9bfc <pthread_mutex_init+0x64>
400e9b9e:	013316        	beqz	a3, 400e9bb5 <pthread_mutex_init+0x1d>
400e9ba1:	002382        	l32i	a8, a3, 0
400e9ba4:	058816        	beqz	a8, 400e9c00 <pthread_mutex_init+0x68>
400e9ba7:	20a330        	or	a10, a3, a3
400e9baa:	027f65        	call8	400ec3a0 <mutexattr_check>
400e9bad:	053a56        	bnez	a10, 400e9c04 <pthread_mutex_init+0x6c>
400e9bb0:	1348      	l32i.n	a4, a3, 4
400e9bb2:	000046        	j	400e9bb7 <pthread_mutex_init+0x1f>
400e9bb5:	040c      	movi.n	a4, 0
400e9bb7:	8a0c      	movi.n	a10, 8
400e9bb9:	994a81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e9bbc:	0008e0        	callx8	a8
400e9bbf:	0a3d      	mov.n	a3, a10
400e9bc1:	043a16        	beqz	a10, 400e9c08 <pthread_mutex_init+0x70>
400e9bc4:	1a49      	s32i.n	a4, a10, 4
400e9bc6:	0a1466        	bnei	a4, 1, 400e9bd4 <pthread_mutex_init+0x3c>
400e9bc9:	4a0c      	movi.n	a10, 4
400e9bcb:	9dda25        	call8	4008796c <xQueueCreateMutex>
400e9bce:	03a9      	s32i.n	a10, a3, 0
400e9bd0:	000246        	j	400e9bdd <pthread_mutex_init+0x45>
400e9bd3:	a0a200        	addx4	a10, a2, a0
400e9bd6:	d96501        	l32r	a0, 400e016c <_vfiprintf_r+0x868>
400e9bd9:	a29d      	lsi	f9, a2, 8
400e9bdb:	3d0063        	lsi	f6, a0, 244
400e9bde:	f03df0        	subx8	a3, a13, a15
400e9be1:	f03d      	nop.n
400e9be3:	f03d      	nop.n
400e9be5:	002342        	l32i	a4, a3, 0
400e9be8:	a4cc      	bnez.n	a4, 400e9bf6 <pthread_mutex_init+0x5e>
400e9bea:	03ad      	mov.n	a10, a3
400e9bec:	992881        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9bef:	0008e0        	callx8	a8
400e9bf2:	b20c      	movi.n	a2, 11
400e9bf4:	f01d      	retw.n
400e9bf6:	0239      	s32i.n	a3, a2, 0
400e9bf8:	020c      	movi.n	a2, 0
400e9bfa:	f01d      	retw.n
400e9bfc:	621c      	movi.n	a2, 22
400e9bfe:	f01d      	retw.n
400e9c00:	621c      	movi.n	a2, 22
400e9c02:	f01d      	retw.n
400e9c04:	0a2d      	mov.n	a2, a10
400e9c06:	f01d      	retw.n
400e9c08:	c20c      	movi.n	a2, 12
400e9c0a:	f01d      	retw.n

400e9c0c <pthread_mutex_init_if_static>:
400e9c0c:	004136        	entry	a1, 32
400e9c0f:	002282        	l32i	a8, a2, 0
400e9c12:	240866        	bnei	a8, -1, 400e9c3a <pthread_mutex_init_if_static+0x2e>
400e9c15:	9b7ca1        	l32r	a10, 400d0a08 <_flash_cache_start+0x9f0>
400e9c18:	9ee765        	call8	40088a90 <vTaskEnterCritical>
400e9c1b:	002282        	l32i	a8, a2, 0
400e9c1e:	0b0866        	bnei	a8, -1, 400e9c2d <pthread_mutex_init_if_static+0x21>
400e9c21:	0b0c      	movi.n	a11, 0
400e9c23:	02ad      	mov.n	a10, a2
400e9c25:	fff725        	call8	400e9b98 <pthread_mutex_init>
400e9c28:	0a2d      	mov.n	a2, a10
400e9c2a:	000046        	j	400e9c2f <pthread_mutex_init_if_static+0x23>
400e9c2d:	020c      	movi.n	a2, 0
400e9c2f:	9b76a1        	l32r	a10, 400d0a08 <_flash_cache_start+0x9f0>
400e9c32:	9ef9e5        	call8	40088bd0 <vTaskExitCritical>
400e9c35:	f01d      	retw.n
400e9c37:	000000        	ill
400e9c3a:	020c      	movi.n	a2, 0
400e9c3c:	f01d      	retw.n
	...

400e9c40 <pthread_mutex_destroy>:
400e9c40:	004136        	entry	a1, 32
400e9c43:	d29c      	beqz.n	a2, 400e9c64 <pthread_mutex_destroy+0x24>
400e9c45:	0228      	l32i.n	a2, a2, 0
400e9c47:	d29c      	beqz.n	a2, 400e9c68 <pthread_mutex_destroy+0x28>
400e9c49:	0b0c      	movi.n	a11, 0
400e9c4b:	02ad      	mov.n	a10, a2
400e9c4d:	9aed25        	call8	40084b20 <pthread_mutex_lock_internal>
400e9c50:	18ba26        	beqi	a10, 16, 400e9c6c <pthread_mutex_destroy+0x2c>
400e9c53:	02a8      	l32i.n	a10, a2, 0
400e9c55:	9e1665        	call8	40087dbc <vQueueDelete>
400e9c58:	02ad      	mov.n	a10, a2
400e9c5a:	990c81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9c5d:	0008e0        	callx8	a8
400e9c60:	020c      	movi.n	a2, 0
400e9c62:	f01d      	retw.n
400e9c64:	621c      	movi.n	a2, 22
400e9c66:	f01d      	retw.n
400e9c68:	621c      	movi.n	a2, 22
400e9c6a:	f01d      	retw.n
400e9c6c:	021c      	movi.n	a2, 16
400e9c6e:	f01d      	retw.n
400e9c70:	ef08      	l32i.n	a0, a15, 56
400e9c72:	3ffb      	addi.n	a3, a15, 15
400e9c74:	7b7c      	movi.n	a11, -9
400e9c76:	a03f40        	addx4	a3, a15, a4
400e9c79:	407b      	addi.n	a4, a0, 7
400e9c7b:	3f          	.byte 0x3f
400e9c7c:	af          	.byte 0xaf
400e9c7d:	be          	.byte 0xbe
400e9c7e:	dead      	lsi	f10, a14, 56
400e9c80:	407bf0        	wer	a15, a11
400e9c83:	3f          	.byte 0x3f

400e9c84 <esp_coex_adapter_register>:
400e9c84:	004136        	entry	a1, 32
400e9c87:	fffa91        	l32r	a9, 400e9c70 <pthread_mutex_destroy+0x30>
400e9c8a:	080c      	movi.n	a8, 0
400e9c8c:	09a8      	l32i.n	a10, a9, 0
400e9c8e:	3c9a87        	bne	a10, a8, 400e9cce <esp_coex_adapter_register+0x4a>
400e9c91:	0b9287        	bne	a2, a8, 400e9ca0 <esp_coex_adapter_register+0x1c>
400e9c94:	fff8a1        	l32r	a10, 400e9c74 <pthread_mutex_destroy+0x34>
400e9c97:	f137e5        	call8	400db014 <puts>
400e9c9a:	02a182        	movi	a8, 0x102
400e9c9d:	000b46        	j	400e9cce <esp_coex_adapter_register+0x4a>
400e9ca0:	02c8      	l32i.n	a12, a2, 0
400e9ca2:	0e1c26        	beqi	a12, 1, 400e9cb4 <esp_coex_adapter_register+0x30>
400e9ca5:	1b0c      	movi.n	a11, 1
400e9ca7:	fff4a1        	l32r	a10, 400e9c78 <pthread_mutex_destroy+0x38>
400e9caa:	01e2a5        	call8	400ebad4 <coexist_printf>
400e9cad:	02a182        	movi	a8, 0x102
400e9cb0:	000686        	j	400e9cce <esp_coex_adapter_register+0x4a>
400e9cb3:	22c200        	orb	b12, b2, b0
400e9cb6:	f1b114        	lsi	f1, a1, 0x3c4
400e9cb9:	ff          	.byte 0xff
400e9cba:	0e1cb7        	beq	a12, a11, 400e9ccc <esp_coex_adapter_register+0x48>
400e9cbd:	fff0a1        	l32r	a10, 400e9c80 <pthread_mutex_destroy+0x40>
400e9cc0:	01e125        	call8	400ebad4 <coexist_printf>
400e9cc3:	02a182        	movi	a8, 0x102
400e9cc6:	000106        	j	400e9cce <esp_coex_adapter_register+0x4a>
400e9cc9:	000000        	ill
400e9ccc:	0929      	s32i.n	a2, a9, 0
400e9cce:	082d      	mov.n	a2, a8
400e9cd0:	f01d      	retw.n
	...

400e9cd4 <spi_flash_cache2phys>:
400e9cd4:	004136        	entry	a1, 32
400e9cd7:	98f581        	l32r	a8, 400d00ac <_flash_cache_start+0x94>
400e9cda:	828a      	add.n	a8, a2, a8
400e9cdc:	9b4c91        	l32r	a9, 400d0a0c <_flash_cache_start+0x9f4>
400e9cdf:	47b987        	bgeu	a9, a8, 400e9d2a <spi_flash_cache2phys+0x56>
400e9ce2:	9b4b81        	l32r	a8, 400d0a10 <_flash_cache_start+0x9f8>
400e9ce5:	142827        	blt	a8, a2, 400e9cfd <spi_flash_cache2phys+0x29>
400e9ce8:	9b4b81        	l32r	a8, 400d0a14 <_flash_cache_start+0x9fc>
400e9ceb:	828a      	add.n	a8, a2, a8
400e9ced:	98e0a1        	l32r	a10, 400d0070 <_flash_cache_start+0x58>
400e9cf0:	a8aa      	add.n	a10, a8, a10
400e9cf2:	b3a880        	movgez	a10, a8, a8
400e9cf5:	31a0a0        	srai	a10, a10, 16
400e9cf8:	000586        	j	400e9d12 <spi_flash_cache2phys+0x3e>
400e9cfb:	810000        	src	a0, a0, a0
400e9cfe:	98eb      	addi.n	a9, a8, 14
400e9d00:	808280        	add	a8, a2, a8
400e9d03:	98dba1        	l32r	a10, 400d0070 <_flash_cache_start+0x58>
400e9d06:	80a8a0        	add	a10, a8, a10
400e9d09:	b3a880        	movgez	a10, a8, a8
400e9d0c:	31a0a0        	srai	a10, a10, 16
400e9d0f:	40caa2        	addi	a10, a10, 64
400e9d12:	ffa082        	movi	a8, 255
400e9d15:	1538a7        	bltu	a8, a10, 400e9d2e <spi_flash_cache2phys+0x5a>
400e9d18:	9be4a5        	call8	40085b64 <spi_flash_protected_read_mmu_entry>
400e9d1b:	13fa26        	beqi	a10, 0x100, 400e9d32 <spi_flash_cache2phys+0x5e>
400e9d1e:	11aa00        	slli	a10, a10, 16
400e9d21:	f42020        	extui	a2, a2, 0, 16
400e9d24:	202a20        	or	a2, a10, a2
400e9d27:	000090        	retw
400e9d2a:	f27c      	movi.n	a2, -1
400e9d2c:	f01d      	retw.n
400e9d2e:	f27c      	movi.n	a2, -1
400e9d30:	f01d      	retw.n
400e9d32:	f27c      	movi.n	a2, -1
400e9d34:	f01d      	retw.n
	...

400e9d38 <iterator_create>:
400e9d38:	004136        	entry	a1, 32
400e9d3b:	14a0a2        	movi	a10, 20
400e9d3e:	98e981        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e9d41:	0008e0        	callx8	a8
400e9d44:	0a29      	s32i.n	a2, a10, 0
400e9d46:	1a39      	s32i.n	a3, a10, 4
400e9d48:	2a49      	s32i.n	a4, a10, 8
400e9d4a:	f03d      	nop.n
400e9d4c:	f03d      	nop.n
400e9d4e:	f03d      	nop.n
400e9d50:	f03d      	nop.n
400e9d52:	9b3181        	l32r	a8, 400d0a18 <_flash_cache_start+0xa00>
400e9d55:	0888      	l32i.n	a8, a8, 0
400e9d57:	3a89      	s32i.n	a8, a10, 12
400e9d59:	080c      	movi.n	a8, 0
400e9d5b:	4a89      	s32i.n	a8, a10, 16
400e9d5d:	0a2d      	mov.n	a2, a10
400e9d5f:	f01d      	retw.n
400e9d61:	000000        	ill

400e9d64 <load_partitions>:
400e9d64:	006136        	entry	a1, 48
400e9d67:	0cc1e2        	addi	a14, a1, 12
400e9d6a:	08c1d2        	addi	a13, a1, 8
400e9d6d:	00a0c2        	movi	a12, 0
400e9d70:	9a40b1        	l32r	a11, 400d0670 <_flash_cache_start+0x658>
400e9d73:	0cad      	mov.n	a10, a12
400e9d75:	9c1265        	call8	40085e9c <spi_flash_mmap>
400e9d78:	0fda56        	bnez	a10, 400e9e79 <load_partitions+0x115>
400e9d7b:	2128      	l32i.n	a2, a1, 8
400e9d7d:	9a4031        	l32r	a3, 400d0680 <_flash_cache_start+0x668>
400e9d80:	323a      	add.n	a3, a2, a3
400e9d82:	9b2651        	l32r	a5, 400d0a1c <_flash_cache_start+0xa04>
400e9d85:	525a      	add.n	a5, a2, a5
400e9d87:	040c      	movi.n	a4, 0
400e9d89:	003586        	j	400e9e63 <load_partitions+0xff>
400e9d8c:	001382        	l16ui	a8, a3, 0
400e9d8f:	9b2421        	l32r	a2, 400d0a20 <_flash_cache_start+0xa08>
400e9d92:	021827        	beq	a8, a2, 400e9d98 <load_partitions+0x34>
400e9d95:	003406        	j	400e9e69 <load_partitions+0x105>
400e9d98:	8a2c      	movi.n	a10, 40
400e9d9a:	98d281        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400e9d9d:	0008e0        	callx8	a8
400e9da0:	0a2d      	mov.n	a2, a10
400e9da2:	1388      	l32i.n	a8, a3, 4
400e9da4:	2a89      	s32i.n	a8, a10, 8
400e9da6:	f03d      	nop.n
400e9da8:	f03d      	nop.n
400e9daa:	f03d      	nop.n
400e9dac:	f03d      	nop.n
400e9dae:	2388      	l32i.n	a8, a3, 8
400e9db0:	3a89      	s32i.n	a8, a10, 12
400e9db2:	f03d      	nop.n
400e9db4:	f03d      	nop.n
400e9db6:	f03d      	nop.n
400e9db8:	f03d      	nop.n
400e9dba:	020382        	l8ui	a8, a3, 2
400e9dbd:	0a89      	s32i.n	a8, a10, 0
400e9dbf:	f03d      	nop.n
400e9dc1:	f03d      	nop.n
400e9dc3:	f03d      	nop.n
400e9dc5:	f03d      	nop.n
400e9dc7:	030382        	l8ui	a8, a3, 3
400e9dca:	1a89      	s32i.n	a8, a10, 4
400e9dcc:	f03d      	nop.n
400e9dce:	f03d      	nop.n
400e9dd0:	f03d      	nop.n
400e9dd2:	f03d      	nop.n
400e9dd4:	7388      	l32i.n	a8, a3, 28
400e9dd6:	048080        	extui	a8, a8, 0, 1
400e9dd9:	214a82        	s8i	a8, a10, 33
400e9ddc:	0020c0        	memw
400e9ddf:	f03d      	nop.n
400e9de1:	f03d      	nop.n
400e9de3:	f03d      	nop.n
400e9de5:	f03d      	nop.n
400e9de7:	9b0f81        	l32r	a8, 400d0a24 <_flash_cache_start+0xa0c>
400e9dea:	0020c0        	memw
400e9ded:	0888      	l32i.n	a8, a8, 0
400e9def:	658480        	extui	a8, a8, 20, 7
400e9df2:	090c      	movi.n	a9, 0
400e9df4:	0003c6        	j	400e9e07 <load_partitions+0xa3>
400e9df7:	070000        	lsi	f0, a0, 28
400e9dfa:	0768      	l32i.n	a6, a7, 0
400e9dfc:	1a0c      	movi.n	a10, 1
400e9dfe:	3099a0        	xor	a9, a9, a10
400e9e01:	749090        	extui	a9, a9, 0, 8
400e9e04:	418180        	srli	a8, a8, 1
400e9e07:	fee856        	bnez	a8, 400e9df9 <load_partitions+0x95>
400e9e0a:	f99c      	beqz.n	a9, 400e9e2d <load_partitions+0xc9>
400e9e0c:	020382        	l8ui	a8, a3, 2
400e9e0f:	289c      	beqz.n	a8, 400e9e25 <load_partitions+0xc1>
400e9e11:	0398      	l32i.n	a9, a3, 0
400e9e13:	9a2681        	l32r	a8, 400d06ac <_flash_cache_start+0x694>
400e9e16:	108980        	and	a8, a9, a8
400e9e19:	9acc91        	l32r	a9, 400d094c <_flash_cache_start+0x934>
400e9e1c:	051897        	beq	a8, a9, 400e9e25 <load_partitions+0xc1>
400e9e1f:	9b0291        	l32r	a9, 400d0a28 <_flash_cache_start+0xa10>
400e9e22:	079897        	bne	a8, a9, 400e9e2d <load_partitions+0xc9>
400e9e25:	180c      	movi.n	a8, 1
400e9e27:	214282        	s8i	a8, a2, 33
400e9e2a:	0020c0        	memw
400e9e2d:	0c1c      	movi.n	a12, 16
400e9e2f:	b3cb      	addi.n	a11, a3, 12
400e9e31:	a2ca      	add.n	a10, a2, a12
400e9e33:	996a81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400e9e36:	0008e0        	callx8	a8
400e9e39:	080c      	movi.n	a8, 0
400e9e3b:	204282        	s8i	a8, a2, 32
400e9e3e:	0020c0        	memw
400e9e41:	34dc      	bnez.n	a4, 400e9e58 <load_partitions+0xf4>
400e9e43:	f03d      	nop.n
400e9e45:	f03d      	nop.n
400e9e47:	f03d      	nop.n
400e9e49:	f03d      	nop.n
400e9e4b:	9af341        	l32r	a4, 400d0a18 <_flash_cache_start+0xa00>
400e9e4e:	0488      	l32i.n	a8, a4, 0
400e9e50:	9289      	s32i.n	a8, a2, 36
400e9e52:	0429      	s32i.n	a2, a4, 0
400e9e54:	000186        	j	400e9e5e <load_partitions+0xfa>
400e9e57:	948800        	extui	a8, a0, 8, 10
400e9e5a:	9289      	s32i.n	a8, a2, 36
400e9e5c:	9429      	s32i.n	a2, a4, 36
400e9e5e:	20c332        	addi	a3, a3, 32
400e9e61:	024d      	mov.n	a4, a2
400e9e63:	021357        	beq	a3, a5, 400e9e69 <load_partitions+0x105>
400e9e66:	ffc886        	j	400e9d8c <load_partitions+0x28>
400e9e69:	f03d      	nop.n
400e9e6b:	f03d      	nop.n
400e9e6d:	0321a2        	l32i	a10, a1, 12
400e9e70:	9c0a25        	call8	40085f14 <spi_flash_munmap>
400e9e73:	00a022        	movi	a2, 0
400e9e76:	000090        	retw
400e9e79:	0a2d      	mov.n	a2, a10
400e9e7b:	f01d      	retw.n
400e9e7d:	000000        	ill

400e9e80 <esp_partition_iterator_release>:
400e9e80:	004136        	entry	a1, 32
400e9e83:	20a220        	or	a10, a2, a2
400e9e86:	988181        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400e9e89:	0008e0        	callx8	a8
400e9e8c:	f01d      	retw.n
	...

400e9e90 <esp_partition_next>:
400e9e90:	004136        	entry	a1, 32
400e9e93:	f2cc      	bnez.n	a2, 400e9ea6 <esp_partition_next+0x16>
400e9e95:	9ae5d1        	l32r	a13, 400d0a2c <_flash_cache_start+0xa14>
400e9e98:	9ae6c1        	l32r	a12, 400d0a30 <_flash_cache_start+0xa18>
400e9e9b:	7b5c      	movi.n	a11, 87
400e9e9d:	9ae5a1        	l32r	a10, 400d0a34 <_flash_cache_start+0xa1c>
400e9ea0:	201110        	or	a1, a1, a1
400e9ea3:	f0c2a5        	call8	400daacc <__assert_func>
400e9ea6:	032232        	l32i	a3, a2, 12
400e9ea9:	00b356        	bnez	a3, 400e9eb8 <esp_partition_next+0x28>
400e9eac:	20a220        	or	a10, a2, a2
400e9eaf:	fffd25        	call8	400e9e80 <esp_partition_iterator_release>
400e9eb2:	020c      	movi.n	a2, 0
400e9eb4:	f01d      	retw.n
400e9eb6:	a10000        	sll	a0, a0
400e9eb9:	e59ae0        	extui	a9, a14, 26, 15
400e9ebc:	869ac0        	lsi	f12, a10, 0x218
400e9ebf:	0009      	s32i.n	a0, a0, 0
400e9ec1:	0298      	l32i.n	a9, a2, 0
400e9ec3:	0388      	l32i.n	a8, a3, 0
400e9ec5:	1b9987        	bne	a9, a8, 400e9ee4 <esp_partition_next+0x54>
400e9ec8:	1288      	l32i.n	a8, a2, 4
400e9eca:	ffa092        	movi	a9, 255
400e9ecd:	041897        	beq	a8, a9, 400e9ed5 <esp_partition_next+0x45>
400e9ed0:	1398      	l32i.n	a9, a3, 4
400e9ed2:	0e9897        	bne	a8, a9, 400e9ee4 <esp_partition_next+0x54>
400e9ed5:	22a8      	l32i.n	a10, a2, 8
400e9ed7:	aa9c      	beqz.n	a10, 400e9ef5 <esp_partition_next+0x65>
400e9ed9:	10c3b2        	addi	a11, a3, 16
400e9edc:	993d81        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400e9edf:	0008e0        	callx8	a8
400e9ee2:	fa8c      	beqz.n	a10, 400e9ef5 <esp_partition_next+0x65>
400e9ee4:	9338      	l32i.n	a3, a3, 36
400e9ee6:	3239      	s32i.n	a3, a2, 12
400e9ee8:	f03d      	nop.n
400e9eea:	f03d      	nop.n
400e9eec:	f03d      	nop.n
400e9eee:	f03d      	nop.n
400e9ef0:	3238      	l32i.n	a3, a2, 12
400e9ef2:	fcb356        	bnez	a3, 400e9ec1 <esp_partition_next+0x31>
400e9ef5:	9ad0a1        	l32r	a10, 400d0a38 <_flash_cache_start+0xa20>
400e9ef8:	9ac0e5        	call8	40084b08 <_lock_release>
400e9efb:	032232        	l32i	a3, a2, 12
400e9efe:	008356        	bnez	a3, 400e9f0a <esp_partition_next+0x7a>
400e9f01:	02ad      	mov.n	a10, a2
400e9f03:	fff7e5        	call8	400e9e80 <esp_partition_iterator_release>
400e9f06:	020c      	movi.n	a2, 0
400e9f08:	f01d      	retw.n
400e9f0a:	4239      	s32i.n	a3, a2, 16
400e9f0c:	f03d      	nop.n
400e9f0e:	f03d      	nop.n
400e9f10:	f03d      	nop.n
400e9f12:	f03d      	nop.n
400e9f14:	9338      	l32i.n	a3, a3, 36
400e9f16:	3239      	s32i.n	a3, a2, 12
400e9f18:	f01d      	retw.n
	...

400e9f1c <esp_partition_find>:
400e9f1c:	004136        	entry	a1, 32
400e9f1f:	9abe81        	l32r	a8, 400d0a18 <_flash_cache_start+0xa00>
400e9f22:	002882        	l32i	a8, a8, 0
400e9f25:	021856        	bnez	a8, 400e9f4a <esp_partition_find+0x2e>
400e9f28:	9ac4a1        	l32r	a10, 400d0a38 <_flash_cache_start+0xa20>
400e9f2b:	9ab9e5        	call8	40084ac8 <_lock_acquire>
400e9f2e:	9aba81        	l32r	a8, 400d0a18 <_flash_cache_start+0xa00>
400e9f31:	002882        	l32i	a8, a8, 0
400e9f34:	68cc      	bnez.n	a8, 400e9f3e <esp_partition_find+0x22>
400e9f36:	ffe2e5        	call8	400e9d64 <load_partitions>
400e9f39:	0a5d      	mov.n	a5, a10
400e9f3b:	000086        	j	400e9f41 <esp_partition_find+0x25>
400e9f3e:	00a052        	movi	a5, 0
400e9f41:	9abda1        	l32r	a10, 400d0a38 <_flash_cache_start+0xa20>
400e9f44:	9abc25        	call8	40084b08 <_lock_release>
400e9f47:	00f556        	bnez	a5, 400e9f5a <esp_partition_find+0x3e>
400e9f4a:	04cd      	mov.n	a12, a4
400e9f4c:	03bd      	mov.n	a11, a3
400e9f4e:	02ad      	mov.n	a10, a2
400e9f50:	ffde65        	call8	400e9d38 <iterator_create>
400e9f53:	fff3e5        	call8	400e9e90 <esp_partition_next>
400e9f56:	0a2d      	mov.n	a2, a10
400e9f58:	f01d      	retw.n
400e9f5a:	020c      	movi.n	a2, 0
400e9f5c:	f01d      	retw.n
	...

400e9f60 <esp_partition_get>:
400e9f60:	004136        	entry	a1, 32
400e9f63:	00e256        	bnez	a2, 400e9f75 <esp_partition_get+0x15>
400e9f66:	9ab5d1        	l32r	a13, 400d0a3c <_flash_cache_start+0xa24>
400e9f69:	9ab5c1        	l32r	a12, 400d0a40 <_flash_cache_start+0xa28>
400e9f6c:	cca0b2        	movi	a11, 204
400e9f6f:	9ab1a1        	l32r	a10, 400d0a34 <_flash_cache_start+0xa1c>
400e9f72:	f0b5a5        	call8	400daacc <__assert_func>
400e9f75:	4228      	l32i.n	a2, a2, 16
400e9f77:	f01d      	retw.n
400e9f79:	000000        	ill

400e9f7c <esp_partition_find_first>:
400e9f7c:	004136        	entry	a1, 32
400e9f7f:	20c440        	or	a12, a4, a4
400e9f82:	20b330        	or	a11, a3, a3
400e9f85:	02ad      	mov.n	a10, a2
400e9f87:	fff965        	call8	400e9f1c <esp_partition_find>
400e9f8a:	0a3d      	mov.n	a3, a10
400e9f8c:	aa8c      	beqz.n	a10, 400e9f9a <esp_partition_find_first+0x1e>
400e9f8e:	fffd25        	call8	400e9f60 <esp_partition_get>
400e9f91:	0a2d      	mov.n	a2, a10
400e9f93:	03ad      	mov.n	a10, a3
400e9f95:	ffeea5        	call8	400e9e80 <esp_partition_iterator_release>
400e9f98:	f01d      	retw.n
400e9f9a:	020c      	movi.n	a2, 0
400e9f9c:	f01d      	retw.n
	...

400e9fa0 <esp_partition_erase_range>:
400e9fa0:	004136        	entry	a1, 32
400e9fa3:	00e256        	bnez	a2, 400e9fb5 <esp_partition_erase_range+0x15>
400e9fa6:	9aa7d1        	l32r	a13, 400d0a44 <_flash_cache_start+0xa2c>
400e9fa9:	9aa7c1        	l32r	a12, 400d0a48 <_flash_cache_start+0xa30>
400e9fac:	19a1b2        	movi	a11, 0x119
400e9faf:	9aa1a1        	l32r	a10, 400d0a34 <_flash_cache_start+0xa1c>
400e9fb2:	f0b1a5        	call8	400daacc <__assert_func>
400e9fb5:	3288      	l32i.n	a8, a2, 12
400e9fb7:	1d3837        	bltu	a8, a3, 400e9fd8 <esp_partition_erase_range+0x38>
400e9fba:	809340        	add	a9, a3, a4
400e9fbd:	1c3897        	bltu	a8, a9, 400e9fdd <esp_partition_erase_range+0x3d>
400e9fc0:	b48040        	extui	a8, a4, 0, 12
400e9fc3:	01d856        	bnez	a8, 400e9fe4 <esp_partition_erase_range+0x44>
400e9fc6:	b48030        	extui	a8, a3, 0, 12
400e9fc9:	c8dc      	bnez.n	a8, 400e9fe9 <esp_partition_erase_range+0x49>
400e9fcb:	22a8      	l32i.n	a10, a2, 8
400e9fcd:	04bd      	mov.n	a11, a4
400e9fcf:	a3aa      	add.n	a10, a3, a10
400e9fd1:	9c4ea5        	call8	400864bc <spi_flash_erase_range>
400e9fd4:	0a2d      	mov.n	a2, a10
400e9fd6:	f01d      	retw.n
400e9fd8:	02a122        	movi	a2, 0x102
400e9fdb:	f01d      	retw.n
400e9fdd:	04a122        	movi	a2, 0x104
400e9fe0:	f01d      	retw.n
400e9fe2:	220000        	orb	b0, b0, b0
400e9fe5:	1d04a1        	l32r	a10, 400b13f8 <_iram_end+0x238a4>
400e9fe8:	a122f0        	lsi	f15, a2, 0x284
400e9feb:	f01d02        	l16ui	a0, a13, 0x1e0
	...

400e9ff0 <spi_flash_init_lock>:
400e9ff0:	004136        	entry	a1, 32
400e9ff3:	04a0a2        	movi	a10, 4
400e9ff6:	9d9765        	call8	4008796c <xQueueCreateMutex>
400e9ff9:	9a9481        	l32r	a8, 400d0a4c <_flash_cache_start+0xa34>
400e9ffc:	0068a2        	s32i	a10, a8, 0
400e9fff:	015a56        	bnez	a10, 400ea018 <spi_flash_init_lock+0x28>
400ea002:	f03d      	nop.n
400ea004:	f03d      	nop.n
400ea006:	f03d      	nop.n
400ea008:	f03d      	nop.n
400ea00a:	9a91d1        	l32r	a13, 400d0a50 <_flash_cache_start+0xa38>
400ea00d:	9a91c1        	l32r	a12, 400d0a54 <_flash_cache_start+0xa3c>
400ea010:	3b3c      	movi.n	a11, 51
400ea012:	9a91a1        	l32r	a10, 400d0a58 <_flash_cache_start+0xa40>
400ea015:	f0ab65        	call8	400daacc <__assert_func>
400ea018:	f01d      	retw.n
	...

400ea01c <spi_flash_op_lock>:
400ea01c:	004136        	entry	a1, 32
400ea01f:	ffafb2        	movi	a11, -1
400ea022:	9a8a81        	l32r	a8, 400d0a4c <_flash_cache_start+0xa34>
400ea025:	0028a2        	l32i	a10, a8, 0
400ea028:	9dc9e5        	call8	40087cc8 <xQueueTakeMutexRecursive>
400ea02b:	000090        	retw
	...

400ea030 <spi_flash_op_unlock>:
400ea030:	004136        	entry	a1, 32
400ea033:	9a8681        	l32r	a8, 400d0a4c <_flash_cache_start+0xa34>
400ea036:	08a8      	l32i.n	a10, a8, 0
400ea038:	9d94a5        	call8	40087984 <xQueueGiveMutexRecursive>
400ea03b:	f01d      	retw.n
400ea03d:	000000        	ill

400ea040 <is_safe_write_address>:
400ea040:	004136        	entry	a1, 32
400ea043:	9a8681        	l32r	a8, 400d0a5c <_flash_cache_start+0xa44>
400ea046:	023827        	bltu	a8, a2, 400ea04c <is_safe_write_address+0xc>
400ea049:	a13225        	call8	4008b36c <abort>
400ea04c:	01ab65        	call8	400ebb04 <esp_ota_get_running_partition>
400ea04f:	022a82        	l32i	a8, a10, 8
400ea052:	0a3287        	bltu	a2, a8, 400ea060 <is_safe_write_address+0x20>
400ea055:	032a92        	l32i	a9, a10, 12
400ea058:	989a      	add.n	a9, a8, a9
400ea05a:	02b297        	bgeu	a2, a9, 400ea060 <is_safe_write_address+0x20>
400ea05d:	a130e5        	call8	4008b36c <abort>
400ea060:	0ab287        	bgeu	a2, a8, 400ea06e <is_safe_write_address+0x2e>
400ea063:	223a      	add.n	a2, a2, a3
400ea065:	05b827        	bgeu	a8, a2, 400ea06e <is_safe_write_address+0x2e>
400ea068:	201110        	or	a1, a1, a1
400ea06b:	a13025        	call8	4008b36c <abort>
400ea06e:	120c      	movi.n	a2, 1
400ea070:	f01d      	retw.n
	...

400ea074 <spi_flash_init>:
400ea074:	004136        	entry	a1, 32
400ea077:	fff7a5        	call8	400e9ff0 <spi_flash_init_lock>
400ea07a:	f01d      	retw.n

400ea07c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
400ea07c:	006136        	entry	a1, 48
400ea07f:	085c      	movi.n	a8, 80
400ea081:	0f9287        	bne	a2, a8, 400ea094 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x18>
400ea084:	a43b      	addi.n	a10, a4, 3
400ea086:	c27c      	movi.n	a2, -4
400ea088:	10aa20        	and	a10, a10, a2
400ea08b:	0a88      	l32i.n	a8, a10, 0
400ea08d:	aa4b      	addi.n	a10, a10, 4
400ea08f:	002ec6        	j	400ea14e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea092:	200000        	or	a0, a0, a0
400ea095:	0c3480        	lsi	f8, a4, 48
400ea098:	87c9      	s32i.n	a12, a7, 32
400ea09a:	02b9      	s32i.n	a11, a2, 0
400ea09c:	002406        	j	400ea130 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb4>
400ea09f:	9a7091        	l32r	a9, 400d0a60 <_flash_cache_start+0xa48>
400ea0a2:	a08890        	addx4	a8, a8, a9
400ea0a5:	0888      	l32i.n	a8, a8, 0
400ea0a7:	0008a0        	jx	a8
400ea0aa:	01bd      	mov.n	a11, a1
400ea0ac:	04ad      	mov.n	a10, a4
400ea0ae:	023025        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea0b1:	0002c6        	j	400ea0c0 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x44>
400ea0b4:	000000        	ill
400ea0b7:	20b110        	or	a11, a1, a1
400ea0ba:	20a440        	or	a10, a4, a4
400ea0bd:	023225        	call8	400ec3e0 <read_sleb128(unsigned char const*, long*)>
400ea0c0:	002182        	l32i	a8, a1, 0
400ea0c3:	001b06        	j	400ea133 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea0c6:	048200        	extui	a8, a0, 2, 1
400ea0c9:	049201        	l32r	a0, 400ab314 <_iram_end+0x1d7c0>
400ea0cc:	888000        	lsi	f0, a0, 0x220
400ea0cf:	889011        	l32r	a1, 400cc310 <_rtc_text_end+0xc310>
400ea0d2:	038620        	lsi	f2, a6, 12
400ea0d5:	048200        	extui	a8, a0, 2, 1
400ea0d8:	049201        	l32r	a0, 400ab320 <_iram_end+0x1d7cc>
400ea0db:	888000        	lsi	f0, a0, 0x220
400ea0de:	889011        	l32r	a1, 400cc320 <_rtc_text_end+0xc320>
400ea0e1:	888020        	lsi	f2, a0, 0x220
400ea0e4:	a42b23        	lsi	f2, a11, 0x290
400ea0e7:	001206        	j	400ea133 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea0ea:	010492        	l8ui	a9, a4, 1
400ea0ed:	0004b2        	l8ui	a11, a4, 0
400ea0f0:	020482        	l8ui	a8, a4, 2
400ea0f3:	119980        	slli	a9, a9, 8
400ea0f6:	20a9b0        	or	a10, a9, a11
400ea0f9:	118800        	slli	a8, a8, 16
400ea0fc:	2098a0        	or	a9, a8, a10
400ea0ff:	030482        	l8ui	a8, a4, 3
400ea102:	a44b      	addi.n	a10, a4, 4
400ea104:	018880        	slli	a8, a8, 24
400ea107:	208890        	or	a8, a8, a9
400ea10a:	000946        	j	400ea133 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea10d:	010492        	l8ui	a9, a4, 1
400ea110:	0004b2        	l8ui	a11, a4, 0
400ea113:	020482        	l8ui	a8, a4, 2
400ea116:	119980        	slli	a9, a9, 8
400ea119:	20a9b0        	or	a10, a9, a11
400ea11c:	118800        	slli	a8, a8, 16
400ea11f:	2098a0        	or	a9, a8, a10
400ea122:	030482        	l8ui	a8, a4, 3
400ea125:	a48b      	addi.n	a10, a4, 8
400ea127:	018880        	slli	a8, a8, 24
400ea12a:	208890        	or	a8, a8, a9
400ea12d:	000086        	j	400ea133 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea130:	a123a5        	call8	4008b36c <abort>
400ea133:	017816        	beqz	a8, 400ea14e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea136:	70a092        	movi	a9, 112
400ea139:	109290        	and	a9, a2, a9
400ea13c:	f0c992        	addi	a9, a9, -16
400ea13f:	833490        	moveqz	a3, a4, a9
400ea142:	232200        	sext	a2, a2, 7
400ea145:	808830        	add	a8, a8, a3
400ea148:	0022d6        	bgez	a2, 400ea14e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea14b:	002882        	l32i	a8, a8, 0
400ea14e:	0589      	s32i.n	a8, a5, 0
400ea150:	0a2d      	mov.n	a2, a10
400ea152:	f01d      	retw.n

400ea154 <get_ttype_entry(lsda_header_info*, unsigned long)>:
400ea154:	006136        	entry	a1, 48
400ea157:	1402a2        	l8ui	a10, a2, 20
400ea15a:	ffa082        	movi	a8, 255
400ea15d:	241a87        	beq	a10, a8, 400ea185 <get_ttype_entry(lsda_header_info*, unsigned long)+0x31>
400ea160:	2490a0        	extui	a9, a10, 0, 3
400ea163:	152926        	beqi	a9, 2, 400ea17c <get_ttype_entry(lsda_header_info*, unsigned long)+0x28>
400ea166:	0639f6        	bgeui	a9, 3, 400ea170 <get_ttype_entry(lsda_header_info*, unsigned long)+0x1c>
400ea169:	d99c      	beqz.n	a9, 400ea18a <get_ttype_entry(lsda_header_info*, unsigned long)+0x36>
400ea16b:	0004c6        	j	400ea182 <get_ttype_entry(lsda_header_info*, unsigned long)+0x2e>
400ea16e:	260000        	lsi	f0, a0, 152
400ea171:	1639      	s32i.n	a3, a6, 4
400ea173:	880c      	movi.n	a8, 8
400ea175:	144926        	beqi	a9, 4, 400ea18d <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea178:	000186        	j	400ea182 <get_ttype_entry(lsda_header_info*, unsigned long)+0x2e>
400ea17b:	098d00        	l32e	a0, a13, -32
400ea17e:	0002c6        	j	400ea18d <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea181:	1ea500        	f64sexp	a10, a5, a0
400ea184:	080ca1        	l32r	a10, 400ac1b4 <_iram_end+0x1e660>
400ea187:	000086        	j	400ea18d <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea18a:	04a082        	movi	a8, 4
400ea18d:	828380        	mull	a8, a3, a8
400ea190:	0322c2        	l32i	a12, a2, 12
400ea193:	0222b2        	l32i	a11, a2, 8
400ea196:	01dd      	mov.n	a13, a1
400ea198:	c0cc80        	sub	a12, a12, a8
400ea19b:	ffee25        	call8	400ea07c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
400ea19e:	0128      	l32i.n	a2, a1, 0
400ea1a0:	f01d      	retw.n
	...

400ea1a4 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
400ea1a4:	004136        	entry	a1, 32
400ea1a7:	ffa082        	movi	a8, 255
400ea1aa:	03ad      	mov.n	a10, a3
400ea1ac:	421287        	beq	a2, a8, 400ea1f2 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea1af:	70a082        	movi	a8, 112
400ea1b2:	102280        	and	a2, a2, a8
400ea1b5:	1cc226        	beqi	a2, 32, 400ea1d5 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x31>
400ea1b8:	082c      	movi.n	a8, 32
400ea1ba:	073827        	bltu	a8, a2, 400ea1c5 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x21>
400ea1bd:	12bc      	beqz.n	a2, 400ea1f2 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea1bf:	29b266        	bnei	a2, 16, 400ea1ec <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x48>
400ea1c2:	000b06        	j	400ea1f2 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea1c5:	1cd226        	beqi	a2, 64, 400ea1e5 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x41>
400ea1c8:	085c      	movi.n	a8, 80
400ea1ca:	241287        	beq	a2, a8, 400ea1f2 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea1cd:	083c      	movi.n	a8, 48
400ea1cf:	091287        	beq	a2, a8, 400ea1dc <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
400ea1d2:	000586        	j	400ea1ec <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x48>
400ea1d5:	ea5ce5        	call8	400d47a4 <_Unwind_GetTextRelBase>
400ea1d8:	000606        	j	400ea1f4 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x50>
400ea1db:	5be500        	ult.s	b14, f5, f0
400ea1de:	46ea      	add.n	a4, a6, a14
400ea1e0:	000004        	lsi	f0, a0, 0
400ea1e3:	650000        	extui	a0, a0, 16, 7
400ea1e6:	ea59      	s32i.n	a5, a10, 56
400ea1e8:	000206        	j	400ea1f4 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x50>
400ea1eb:	111000        	slli	a1, a0, 16
400ea1ee:	17e520        	lsi	f2, a5, 92
400ea1f1:	0a0ca1        	l32r	a10, 400aca24 <_iram_end+0x1eed0>
400ea1f4:	0a2d      	mov.n	a2, a10
400ea1f6:	f01d      	retw.n

400ea1f8 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>:
400ea1f8:	004136        	entry	a1, 32
400ea1fb:	20b220        	or	a11, a2, a2
400ea1fe:	20a330        	or	a10, a3, a3
400ea201:	fffa25        	call8	400ea1a4 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea204:	20baa0        	or	a11, a10, a10
400ea207:	05dd      	mov.n	a13, a5
400ea209:	04cd      	mov.n	a12, a4
400ea20b:	03ad      	mov.n	a10, a3
400ea20d:	ffe6e5        	call8	400ea07c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
400ea210:	0a2d      	mov.n	a2, a10
400ea212:	f01d      	retw.n

400ea214 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
400ea214:	006136        	entry	a1, 48
400ea217:	0a0c      	movi.n	a10, 0
400ea219:	0412a7        	beq	a2, a10, 400ea221 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xd>
400ea21c:	02ad      	mov.n	a10, a2
400ea21e:	ea55e5        	call8	400d477c <_Unwind_GetRegionStart>
400ea221:	0064a2        	s32i	a10, a4, 0
400ea224:	0003b2        	l8ui	a11, a3, 0
400ea227:	01c3c2        	addi	a12, a3, 1
400ea22a:	ffa032        	movi	a3, 255
400ea22d:	0c1b37        	beq	a11, a3, 400ea23d <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x29>
400ea230:	04c4d2        	addi	a13, a4, 4
400ea233:	02ad      	mov.n	a10, a2
400ea235:	fffc25        	call8	400ea1f8 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea238:	0acd      	mov.n	a12, a10
400ea23a:	000086        	j	400ea240 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2c>
400ea23d:	0164a2        	s32i	a10, a4, 4
400ea240:	000c22        	l8ui	a2, a12, 0
400ea243:	ffa032        	movi	a3, 255
400ea246:	144422        	s8i	a2, a4, 20
400ea249:	01cca2        	addi	a10, a12, 1
400ea24c:	0e1237        	beq	a2, a3, 400ea25e <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x4a>
400ea24f:	20b110        	or	a11, a1, a1
400ea252:	0215e5        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea255:	0188      	l32i.n	a8, a1, 0
400ea257:	8a8a      	add.n	a8, a10, a8
400ea259:	3489      	s32i.n	a8, a4, 12
400ea25b:	000146        	j	400ea264 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x50>
400ea25e:	00a022        	movi	a2, 0
400ea261:	036422        	s32i	a2, a4, 12
400ea264:	000a22        	l8ui	a2, a10, 0
400ea267:	20b110        	or	a11, a1, a1
400ea26a:	154422        	s8i	a2, a4, 21
400ea26d:	aa1b      	addi.n	a10, a10, 1
400ea26f:	021425        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea272:	0188      	l32i.n	a8, a1, 0
400ea274:	0a2d      	mov.n	a2, a10
400ea276:	8a8a      	add.n	a8, a10, a8
400ea278:	4489      	s32i.n	a8, a4, 16
400ea27a:	f01d      	retw.n

400ea27c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>:
400ea27c:	008136        	entry	a1, 64
400ea27f:	f87c      	movi.n	a8, -1
400ea281:	305850        	xor	a5, a8, a5
400ea284:	3288      	l32i.n	a8, a2, 12
400ea286:	4149      	s32i.n	a4, a1, 16
400ea288:	585a      	add.n	a5, a8, a5
400ea28a:	20b110        	or	a11, a1, a1
400ea28d:	05ad      	mov.n	a10, a5
400ea28f:	021225        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea292:	01b8      	l32i.n	a11, a1, 0
400ea294:	205aa0        	or	a5, a10, a10
400ea297:	013b16        	beqz	a11, 400ea2ae <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0x32>
400ea29a:	20a220        	or	a10, a2, a2
400ea29d:	ffeb65        	call8	400ea154 <get_ttype_entry(lsda_header_info*, unsigned long)>
400ea2a0:	10c1c2        	addi	a12, a1, 16
400ea2a3:	03bd      	mov.n	a11, a3
400ea2a5:	021765        	call8	400ec41c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>
400ea2a8:	fdea16        	beqz	a10, 400ea28a <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0xe>
400ea2ab:	000046        	j	400ea2b0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0x34>
400ea2ae:	0bad      	mov.n	a10, a11
400ea2b0:	0a2d      	mov.n	a2, a10
400ea2b2:	f01d      	retw.n

400ea2b4 <__gxx_personality_v0>:
400ea2b4:	00e136        	entry	a1, 112
400ea2b7:	0a0c      	movi.n	a10, 0
400ea2b9:	b1a9      	s32i.n	a10, a1, 44
400ea2bb:	a1a9      	s32i.n	a10, a1, 40
400ea2bd:	380c      	movi.n	a8, 3
400ea2bf:	021226        	beqi	a2, 1, 400ea2c5 <__gxx_personality_v0+0x11>
400ea2c2:	00aa06        	j	400ea56e <__gxx_personality_v0+0x2ba>
400ea2c5:	99e781        	l32r	a8, 400d0a64 <_flash_cache_start+0xa4c>
400ea2c8:	99e891        	l32r	a9, 400d0a68 <_flash_cache_start+0xa50>
400ea2cb:	b48a      	add.n	a11, a4, a8
400ea2cd:	d1b9      	s32i.n	a11, a1, 52
400ea2cf:	023b47        	bltu	a11, a4, 400ea2d5 <__gxx_personality_v0+0x21>
400ea2d2:	202aa0        	or	a2, a10, a10
400ea2d5:	559a      	add.n	a5, a5, a9
400ea2d7:	525a      	add.n	a5, a2, a5
400ea2d9:	e159      	s32i.n	a5, a1, 56
400ea2db:	120c      	movi.n	a2, 1
400ea2dd:	005556        	bnez	a5, 400ea2e6 <__gxx_personality_v0+0x32>
400ea2e0:	0d2142        	l32i	a4, a1, 52
400ea2e3:	0124b6        	bltui	a4, 2, 400ea2e8 <__gxx_personality_v0+0x34>
400ea2e6:	020c      	movi.n	a2, 0
400ea2e8:	742020        	extui	a2, a2, 0, 8
400ea2eb:	106122        	s32i	a2, a1, 64
400ea2ee:	146366        	bnei	a3, 6, 400ea306 <__gxx_personality_v0+0x52>
400ea2f1:	129c      	beqz.n	a2, 400ea306 <__gxx_personality_v0+0x52>
400ea2f3:	d0c622        	addi	a2, a6, -48
400ea2f6:	6288      	l32i.n	a8, a2, 24
400ea2f8:	8258      	l32i.n	a5, a2, 32
400ea2fa:	9228      	l32i.n	a2, a2, 36
400ea2fc:	390c      	movi.n	a9, 3
400ea2fe:	140c      	movi.n	a4, 1
400ea300:	839420        	moveqz	a9, a4, a2
400ea303:	006c46        	j	400ea4b8 <__gxx_personality_v0+0x204>
400ea306:	07ad      	mov.n	a10, a7
400ea308:	201110        	or	a1, a1, a1
400ea30b:	ea46a5        	call8	400d4774 <_Unwind_GetLanguageSpecificData>
400ea30e:	0a5d      	mov.n	a5, a10
400ea310:	5acc      	bnez.n	a10, 400ea319 <__gxx_personality_v0+0x65>
400ea312:	880c      	movi.n	a8, 8
400ea314:	009586        	j	400ea56e <__gxx_personality_v0+0x2ba>
400ea317:	bd0000        	lsi	f0, a0, 0x2f4
400ea31a:	cd0a      	add.n	a12, a13, a0
400ea31c:	07ad01        	l32r	a0, 400ac1d0 <_iram_end+0x1e67c>
400ea31f:	201110        	or	a1, a1, a1
400ea322:	ffef25        	call8	400ea214 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea325:	0acd      	mov.n	a12, a10
400ea327:	1401a2        	l8ui	a10, a1, 20
400ea32a:	07bd      	mov.n	a11, a7
400ea32c:	1361c2        	s32i	a12, a1, 76
400ea32f:	201110        	or	a1, a1, a1
400ea332:	ffe725        	call8	400ea1a4 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea335:	21a9      	s32i.n	a10, a1, 8
400ea337:	28c1b2        	addi	a11, a1, 40
400ea33a:	07ad      	mov.n	a10, a7
400ea33c:	201110        	or	a1, a1, a1
400ea33f:	ea41e5        	call8	400d475c <_Unwind_GetIPInfo>
400ea342:	a128      	l32i.n	a2, a1, 40
400ea344:	040c      	movi.n	a4, 0
400ea346:	01a082        	movi	a8, 1
400ea349:	834820        	moveqz	a4, a8, a2
400ea34c:	1321c2        	l32i	a12, a1, 76
400ea34f:	c04a40        	sub	a4, a10, a4
400ea352:	4128      	l32i.n	a2, a1, 16
400ea354:	023c27        	bltu	a12, a2, 400ea35a <__gxx_personality_v0+0xa6>
400ea357:	0080c6        	j	400ea55e <__gxx_personality_v0+0x2aa>
400ea35a:	1501b2        	l8ui	a11, a1, 21
400ea35d:	24c1d2        	addi	a13, a1, 36
400ea360:	0a0c      	movi.n	a10, 0
400ea362:	201110        	or	a1, a1, a1
400ea365:	ffe925        	call8	400ea1f8 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea368:	1501b2        	l8ui	a11, a1, 21
400ea36b:	0acd      	mov.n	a12, a10
400ea36d:	20c1d2        	addi	a13, a1, 32
400ea370:	0a0c      	movi.n	a10, 0
400ea372:	201110        	or	a1, a1, a1
400ea375:	ffe825        	call8	400ea1f8 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea378:	1501b2        	l8ui	a11, a1, 21
400ea37b:	0acd      	mov.n	a12, a10
400ea37d:	1cc1d2        	addi	a13, a1, 28
400ea380:	0a0c      	movi.n	a10, 0
400ea382:	201110        	or	a1, a1, a1
400ea385:	ffe725        	call8	400ea1f8 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea388:	18c1b2        	addi	a11, a1, 24
400ea38b:	201110        	or	a1, a1, a1
400ea38e:	020225        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea391:	0188      	l32i.n	a8, a1, 0
400ea393:	9128      	l32i.n	a2, a1, 36
400ea395:	0acd      	mov.n	a12, a10
400ea397:	282a      	add.n	a2, a8, a2
400ea399:	05b427        	bgeu	a4, a2, 400ea3a2 <__gxx_personality_v0+0xee>
400ea39c:	41c8      	l32i.n	a12, a1, 16
400ea39e:	ffec06        	j	400ea352 <__gxx_personality_v0+0x9e>
400ea3a1:	818800        	src	a8, a8, a0
400ea3a4:	228a      	add.n	a2, a2, a8
400ea3a6:	a8b427        	bgeu	a4, a2, 400ea352 <__gxx_personality_v0+0x9e>
400ea3a9:	7148      	l32i.n	a4, a1, 28
400ea3ab:	020c      	movi.n	a2, 0
400ea3ad:	051427        	beq	a4, a2, 400ea3b6 <__gxx_personality_v0+0x102>
400ea3b0:	012122        	l32i	a2, a1, 4
400ea3b3:	802420        	add	a2, a4, a2
400ea3b6:	6188      	l32i.n	a8, a1, 24
400ea3b8:	040c      	movi.n	a4, 0
400ea3ba:	071847        	beq	a8, a4, 400ea3c5 <__gxx_personality_v0+0x111>
400ea3bd:	4148      	l32i.n	a4, a1, 16
400ea3bf:	ffc882        	addi	a8, a8, -1
400ea3c2:	804480        	add	a4, a4, a8
400ea3c5:	f49216        	beqz	a2, 400ea312 <__gxx_personality_v0+0x5e>
400ea3c8:	199416        	beqz	a4, 400ea565 <__gxx_personality_v0+0x2b1>
400ea3cb:	0698      	l32i.n	a9, a6, 0
400ea3cd:	20c682        	addi	a8, a6, 32
400ea3d0:	056907        	bbci	a9, 0, 400ea3d9 <__gxx_personality_v0+0x125>
400ea3d3:	d0c682        	addi	a8, a6, -48
400ea3d6:	002882        	l32i	a8, a8, 0
400ea3d9:	b189      	s32i.n	a8, a1, 44
400ea3db:	b0c882        	addi	a8, a8, -80
400ea3de:	0888      	l32i.n	a8, a8, 0
400ea3e0:	190c      	movi.n	a9, 1
400ea3e2:	c189      	s32i.n	a8, a1, 48
400ea3e4:	080c      	movi.n	a8, 0
400ea3e6:	f189      	s32i.n	a8, a1, 60
400ea3e8:	048330        	extui	a8, a3, 3, 1
400ea3eb:	308890        	xor	a8, a8, a9
400ea3ee:	126182        	s32i	a8, a1, 72
400ea3f1:	20c1b2        	addi	a11, a1, 32
400ea3f4:	20a440        	or	a10, a4, a4
400ea3f7:	201110        	or	a1, a1, a1
400ea3fa:	01fe65        	call8	400ec3e0 <read_sleb128(unsigned char const*, long*)>
400ea3fd:	1cc1b2        	addi	a11, a1, 28
400ea400:	1161a2        	s32i	a10, a1, 68
400ea403:	201110        	or	a1, a1, a1
400ea406:	01fda5        	call8	400ec3e0 <read_sleb128(unsigned char const*, long*)>
400ea409:	81d8      	l32i.n	a13, a1, 32
400ea40b:	06ad16        	beqz	a13, 400ea479 <__gxx_personality_v0+0x1c5>
400ea40e:	211da6        	blti	a13, 1, 400ea433 <__gxx_personality_v0+0x17f>
400ea411:	0dbd      	mov.n	a11, a13
400ea413:	20a110        	or	a10, a1, a1
400ea416:	201110        	or	a1, a1, a1
400ea419:	ffd3a5        	call8	400ea154 <get_ttype_entry(lsda_header_info*, unsigned long)>
400ea41c:	136a16        	beqz	a10, 400ea556 <__gxx_personality_v0+0x2a2>
400ea41f:	c188      	l32i.n	a8, a1, 48
400ea421:	058816        	beqz	a8, 400ea47d <__gxx_personality_v0+0x1c9>
400ea424:	2cc1c2        	addi	a12, a1, 44
400ea427:	20b880        	or	a11, a8, a8
400ea42a:	201110        	or	a1, a1, a1
400ea42d:	01fee5        	call8	400ec41c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>
400ea430:	001006        	j	400ea474 <__gxx_personality_v0+0x1c0>
400ea433:	c198      	l32i.n	a9, a1, 48
400ea435:	d99c      	beqz.n	a9, 400ea456 <__gxx_personality_v0+0x1a2>
400ea437:	122182        	l32i	a8, a1, 72
400ea43a:	889c      	beqz.n	a8, 400ea456 <__gxx_personality_v0+0x1a2>
400ea43c:	102192        	l32i	a9, a1, 64
400ea43f:	399c      	beqz.n	a9, 400ea456 <__gxx_personality_v0+0x1a2>
400ea441:	c1b8      	l32i.n	a11, a1, 48
400ea443:	b1c8      	l32i.n	a12, a1, 44
400ea445:	01ad      	mov.n	a10, a1
400ea447:	201110        	or	a1, a1, a1
400ea44a:	ffe325        	call8	400ea27c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>
400ea44d:	1b0c      	movi.n	a11, 1
400ea44f:	30aab0        	xor	a10, a10, a11
400ea452:	0006c6        	j	400ea471 <__gxx_personality_v0+0x1bd>
400ea455:	fa7c00        	mov.s	f7, f12
400ea458:	30dad0        	xor	a13, a10, a13
400ea45b:	31a8      	l32i.n	a10, a1, 12
400ea45d:	18c1b2        	addi	a11, a1, 24
400ea460:	aada      	add.n	a10, a10, a13
400ea462:	201110        	or	a1, a1, a1
400ea465:	01f4a5        	call8	400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>
400ea468:	6188      	l32i.n	a8, a1, 24
400ea46a:	0a0c      	movi.n	a10, 0
400ea46c:	190c      	movi.n	a9, 1
400ea46e:	83a980        	moveqz	a10, a9, a8
400ea471:	74a0a0        	extui	a10, a10, 0, 8
400ea474:	5a8c      	beqz.n	a10, 400ea47d <__gxx_personality_v0+0x1c9>
400ea476:	003706        	j	400ea556 <__gxx_personality_v0+0x2a2>
400ea479:	180c      	movi.n	a8, 1
400ea47b:	f189      	s32i.n	a8, a1, 60
400ea47d:	7188      	l32i.n	a8, a1, 28
400ea47f:	688c      	beqz.n	a8, 400ea489 <__gxx_personality_v0+0x1d5>
400ea481:	112192        	l32i	a9, a1, 68
400ea484:	498a      	add.n	a4, a9, a8
400ea486:	ffd9c6        	j	400ea3f1 <__gxx_personality_v0+0x13d>
400ea489:	f198      	l32i.n	a9, a1, 60
400ea48b:	e83916        	beqz	a9, 400ea312 <__gxx_personality_v0+0x5e>
400ea48e:	290c      	movi.n	a9, 2
400ea490:	246307        	bbci	a3, 0, 400ea4b8 <__gxx_personality_v0+0x204>
400ea493:	022966        	bnei	a9, 2, 400ea499 <__gxx_personality_v0+0x1e5>
400ea496:	ff9e06        	j	400ea312 <__gxx_personality_v0+0x5e>
400ea499:	e138      	l32i.n	a3, a1, 56
400ea49b:	0a9356        	bnez	a3, 400ea548 <__gxx_personality_v0+0x294>
400ea49e:	d198      	l32i.n	a9, a1, 52
400ea4a0:	0229b6        	bltui	a9, 2, 400ea4a6 <__gxx_personality_v0+0x1f2>
400ea4a3:	002846        	j	400ea548 <__gxx_personality_v0+0x294>
400ea4a6:	b138      	l32i.n	a3, a1, 44
400ea4a8:	d0c662        	addi	a6, a6, -48
400ea4ab:	6689      	s32i.n	a8, a6, 24
400ea4ad:	7649      	s32i.n	a4, a6, 28
400ea4af:	8659      	s32i.n	a5, a6, 32
400ea4b1:	a639      	s32i.n	a3, a6, 40
400ea4b3:	9629      	s32i.n	a2, a6, 36
400ea4b5:	0023c6        	j	400ea548 <__gxx_personality_v0+0x294>
400ea4b8:	10e337        	bbsi	a3, 3, 400ea4cc <__gxx_personality_v0+0x218>
400ea4bb:	e138      	l32i.n	a3, a1, 56
400ea4bd:	b3cc      	bnez.n	a3, 400ea4cc <__gxx_personality_v0+0x218>
400ea4bf:	d148      	l32i.n	a4, a1, 52
400ea4c1:	0724f6        	bgeui	a4, 2, 400ea4cc <__gxx_personality_v0+0x218>
400ea4c4:	1d1966        	bnei	a9, 1, 400ea4e5 <__gxx_personality_v0+0x231>
400ea4c7:	000486        	j	400ea4dd <__gxx_personality_v0+0x229>
400ea4ca:	660000        	lsi	f0, a0, 0x198
400ea4cd:	0419      	s32i.n	a1, a4, 0
400ea4cf:	002006        	j	400ea553 <__gxx_personality_v0+0x29f>
400ea4d2:	d60000        	lsi	f0, a0, 0x358
400ea4d5:	0428      	l32i.n	a2, a4, 0
400ea4d7:	201110        	or	a1, a1, a1
400ea4da:	007625        	call8	400eac3c <std::unexpected()>
400ea4dd:	06ad      	mov.n	a10, a6
400ea4df:	201110        	or	a1, a1, a1
400ea4e2:	002d65        	call8	400ea7b8 <__cxa_call_terminate>
400ea4e5:	0318d6        	bgez	a8, 400ea51a <__gxx_personality_v0+0x266>
400ea4e8:	01cd      	mov.n	a12, a1
400ea4ea:	05bd      	mov.n	a11, a5
400ea4ec:	20a770        	or	a10, a7, a7
400ea4ef:	136182        	s32i	a8, a1, 76
400ea4f2:	201110        	or	a1, a1, a1
400ea4f5:	ffd1e5        	call8	400ea214 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea4f8:	1401a2        	l8ui	a10, a1, 20
400ea4fb:	20b770        	or	a11, a7, a7
400ea4fe:	201110        	or	a1, a1, a1
400ea501:	ffca25        	call8	400ea1a4 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea504:	21a9      	s32i.n	a10, a1, 8
400ea506:	1401a2        	l8ui	a10, a1, 20
400ea509:	07bd      	mov.n	a11, a7
400ea50b:	201110        	or	a1, a1, a1
400ea50e:	ffc965        	call8	400ea1a4 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea511:	d0c632        	addi	a3, a6, -48
400ea514:	132182        	l32i	a8, a1, 76
400ea517:	0963a2        	s32i	a10, a3, 36
400ea51a:	06cd      	mov.n	a12, a6
400ea51c:	2b0c      	movi.n	a11, 2
400ea51e:	07ad      	mov.n	a10, a7
400ea520:	136182        	s32i	a8, a1, 76
400ea523:	201110        	or	a1, a1, a1
400ea526:	ea2165        	call8	400d473c <_Unwind_SetGR>
400ea529:	132182        	l32i	a8, a1, 76
400ea52c:	3b0c      	movi.n	a11, 3
400ea52e:	08cd      	mov.n	a12, a8
400ea530:	07ad      	mov.n	a10, a7
400ea532:	201110        	or	a1, a1, a1
400ea535:	ea2065        	call8	400d473c <_Unwind_SetGR>
400ea538:	02bd      	mov.n	a11, a2
400ea53a:	07ad      	mov.n	a10, a7
400ea53c:	201110        	or	a1, a1, a1
400ea53f:	ea22e5        	call8	400d476c <_Unwind_SetIP>
400ea542:	780c      	movi.n	a8, 7
400ea544:	000986        	j	400ea56e <__gxx_personality_v0+0x2ba>
400ea547:	680c00        	lsi	f0, a12, 0x1a0
400ea54a:	000806        	j	400ea56e <__gxx_personality_v0+0x2ba>
400ea54d:	20a220        	or	a10, a2, a2
400ea550:	006f65        	call8	400eac48 <__cxa_begin_catch>
400ea553:	006c25        	call8	400eac14 <std::terminate()>
400ea556:	082182        	l32i	a8, a1, 32
400ea559:	390c      	movi.n	a9, 3
400ea55b:	ffcc46        	j	400ea490 <__gxx_personality_v0+0x1dc>
400ea55e:	020c      	movi.n	a2, 0
400ea560:	190c      	movi.n	a9, 1
400ea562:	000046        	j	400ea567 <__gxx_personality_v0+0x2b3>
400ea565:	290c      	movi.n	a9, 2
400ea567:	080c      	movi.n	a8, 0
400ea569:	084d      	mov.n	a4, a8
400ea56b:	ffc846        	j	400ea490 <__gxx_personality_v0+0x1dc>
400ea56e:	082d      	mov.n	a2, a8
400ea570:	f01d      	retw.n
	...

400ea574 <__cxa_call_unexpected>:
400ea574:	008136        	entry	a1, 64
400ea577:	20a220        	or	a10, a2, a2
400ea57a:	201110        	or	a1, a1, a1
400ea57d:	006ca5        	call8	400eac48 <__cxa_begin_catch>
400ea580:	d0c222        	addi	a2, a2, -48
400ea583:	9288      	l32i.n	a8, a2, 36
400ea585:	22a8      	l32i.n	a10, a2, 8
400ea587:	8268      	l32i.n	a6, a2, 32
400ea589:	6258      	l32i.n	a5, a2, 24
400ea58b:	3248      	l32i.n	a4, a2, 12
400ea58d:	2189      	s32i.n	a8, a1, 8
400ea58f:	201110        	or	a1, a1, a1
400ea592:	0068e5        	call8	400eac20 <__cxxabiv1::__unexpected(void (*)())>
400ea595:	02ad      	mov.n	a10, a2
400ea597:	201110        	or	a1, a1, a1
400ea59a:	006ae5        	call8	400eac48 <__cxa_begin_catch>
400ea59d:	201110        	or	a1, a1, a1
400ea5a0:	0007e5        	call8	400ea620 <__cxa_get_globals_fast>
400ea5a3:	0a88      	l32i.n	a8, a10, 0
400ea5a5:	c898      	l32i.n	a9, a8, 48
400ea5a7:	50c822        	addi	a2, a8, 80
400ea5aa:	026907        	bbci	a9, 0, 400ea5b0 <__cxa_call_unexpected+0x3c>
400ea5ad:	002822        	l32i	a2, a8, 0
400ea5b0:	01cd      	mov.n	a12, a1
400ea5b2:	06bd      	mov.n	a11, a6
400ea5b4:	0a0c      	movi.n	a10, 0
400ea5b6:	201110        	or	a1, a1, a1
400ea5b9:	ffc5a5        	call8	400ea214 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea5bc:	b0c262        	addi	a6, a2, -80
400ea5bf:	06b8      	l32i.n	a11, a6, 0
400ea5c1:	05dd      	mov.n	a13, a5
400ea5c3:	02cd      	mov.n	a12, a2
400ea5c5:	01ad      	mov.n	a10, a1
400ea5c7:	201110        	or	a1, a1, a1
400ea5ca:	ffcb25        	call8	400ea27c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>
400ea5cd:	4a8c      	beqz.n	a10, 400ea5d5 <__cxa_call_unexpected+0x61>
400ea5cf:	201110        	or	a1, a1, a1
400ea5d2:	001965        	call8	400ea768 <__cxa_rethrow>
400ea5d5:	04ad      	mov.n	a10, a4
400ea5d7:	201110        	or	a1, a1, a1
400ea5da:	005f65        	call8	400eabd0 <__cxxabiv1::__terminate(void (*)())>
400ea5dd:	201110        	or	a1, a1, a1
400ea5e0:	006be5        	call8	400eaca0 <__cxa_end_catch>
400ea5e3:	201110        	or	a1, a1, a1
400ea5e6:	006ba5        	call8	400eaca0 <__cxa_end_catch>
400ea5e9:	02ad      	mov.n	a10, a2
400ea5eb:	201110        	or	a1, a1, a1
400ea5ee:	ea2c65        	call8	400d48b4 <_Unwind_Resume>
400ea5f1:	000000        	ill

400ea5f4 <__cxa_pure_virtual>:
400ea5f4:	004136        	entry	a1, 32
400ea5f7:	0061e5        	call8	400eac14 <std::terminate()>
	...

400ea5fc <eh_globals_dtor(void*)>:
400ea5fc:	004136        	entry	a1, 32
400ea5ff:	01a216        	beqz	a2, 400ea61d <eh_globals_dtor(void*)+0x21>
400ea602:	0022a2        	l32i	a10, a2, 0
400ea605:	00ca16        	beqz	a10, 400ea615 <eh_globals_dtor(void*)+0x19>
400ea608:	4a38      	l32i.n	a3, a10, 16
400ea60a:	30caa2        	addi	a10, a10, 48
400ea60d:	ea3725        	call8	400d4980 <_Unwind_DeleteException>
400ea610:	03ad      	mov.n	a10, a3
400ea612:	fffbc6        	j	400ea605 <eh_globals_dtor(void*)+0x9>
400ea615:	02ad      	mov.n	a10, a2
400ea617:	969d81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400ea61a:	0008e0        	callx8	a8
400ea61d:	f01d      	retw.n
	...

400ea620 <__cxa_get_globals_fast>:
400ea620:	004136        	entry	a1, 32
400ea623:	991381        	l32r	a8, 400d0a70 <_flash_cache_start+0xa58>
400ea626:	9911a1        	l32r	a10, 400d0a6c <_flash_cache_start+0xa54>
400ea629:	040892        	l8ui	a9, a8, 4
400ea62c:	01e916        	beqz	a9, 400ea64e <__cxa_get_globals_fast+0x2e>
400ea62f:	0028a2        	l32i	a10, a8, 0
400ea632:	201110        	or	a1, a1, a1
400ea635:	ff4365        	call8	400e9a6c <pthread_getspecific>
400ea638:	000486        	j	400ea64e <__cxa_get_globals_fast+0x2e>
400ea63b:	ad0000        	lsi	f0, a0, 0x2b4
400ea63e:	032602        	l32i	a0, a6, 12
400ea641:	111005        	call0	400fb744 <_etext+0xf273>
400ea644:	26e520        	lsi	f2, a5, 152
400ea647:	10ea      	add.n	a1, a0, a14
400ea649:	a52011        	l32r	a1, 400d3acc <Print::printNumber(unsigned long, unsigned char)+0x24>
400ea64c:	2dfff2        	s32ri	a15, a15, 180
400ea64f:	1d0a      	add.n	a1, a13, a0
400ea651:	0000f0        	callx12	a0

400ea654 <__cxa_get_globals>:
400ea654:	004136        	entry	a1, 32
400ea657:	990631        	l32r	a3, 400d0a70 <_flash_cache_start+0xa58>
400ea65a:	990421        	l32r	a2, 400d0a6c <_flash_cache_start+0xa54>
400ea65d:	040382        	l8ui	a8, a3, 4
400ea660:	043816        	beqz	a8, 400ea6a7 <__cxa_get_globals+0x53>
400ea663:	0023a2        	l32i	a10, a3, 0
400ea666:	201110        	or	a1, a1, a1
400ea669:	ff4025        	call8	400e9a6c <pthread_getspecific>
400ea66c:	0a2d      	mov.n	a2, a10
400ea66e:	5afc      	bnez.n	a10, 400ea6a7 <__cxa_get_globals+0x53>
400ea670:	8a0c      	movi.n	a10, 8
400ea672:	969c81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400ea675:	0008e0        	callx8	a8
400ea678:	0a2d      	mov.n	a2, a10
400ea67a:	0aac      	beqz.n	a10, 400ea69e <__cxa_get_globals+0x4a>
400ea67c:	0abd      	mov.n	a11, a10
400ea67e:	03a8      	l32i.n	a10, a3, 0
400ea680:	201110        	or	a1, a1, a1
400ea683:	ff40e5        	call8	400e9a90 <pthread_setspecific>
400ea686:	4adc      	bnez.n	a10, 400ea69e <__cxa_get_globals+0x4a>
400ea688:	000546        	j	400ea6a1 <__cxa_get_globals+0x4d>
400ea68b:	ad0000        	lsi	f0, a0, 0x2b4
400ea68e:	032602        	l32i	a0, a6, 12
400ea691:	111005        	call0	400fb794 <_etext+0xf2c3>
400ea694:	21e520        	srai	a14, a2, 5
400ea697:	10ea      	add.n	a1, a0, a14
400ea699:	a52011        	l32r	a1, 400d3b1c <Print::printNumber(unsigned long, unsigned char)+0x74>
400ea69c:	ffed      	lsi	f14, a15, 60
400ea69e:	005765        	call8	400eac14 <std::terminate()>
400ea6a1:	0062a2        	s32i	a10, a2, 0
400ea6a4:	0162a2        	s32i	a10, a2, 4
400ea6a7:	000090        	retw
	...

400ea6ac <_GLOBAL__sub_I___cxa_get_globals_fast>:
400ea6ac:	004136        	entry	a1, 32
400ea6af:	98f021        	l32r	a2, 400d0a70 <_flash_cache_start+0xa58>
400ea6b2:	98f0b1        	l32r	a11, 400d0a74 <_flash_cache_start+0xa5c>
400ea6b5:	00a082        	movi	a8, 0
400ea6b8:	20a220        	or	a10, a2, a2
400ea6bb:	044282        	s8i	a8, a2, 4
400ea6be:	ff3165        	call8	400e99d4 <pthread_key_create>
400ea6c1:	00a082        	movi	a8, 0
400ea6c4:	190c      	movi.n	a9, 1
400ea6c6:	8389a0        	moveqz	a8, a9, a10
400ea6c9:	044282        	s8i	a8, a2, 4
400ea6cc:	f01d      	retw.n
	...

400ea6d0 <_GLOBAL__sub_D___cxa_get_globals_fast>:
400ea6d0:	004136        	entry	a1, 32
400ea6d3:	98e781        	l32r	a8, 400d0a70 <_flash_cache_start+0xa58>
400ea6d6:	040892        	l8ui	a9, a8, 4
400ea6d9:	398c      	beqz.n	a9, 400ea6e0 <_GLOBAL__sub_D___cxa_get_globals_fast+0x10>
400ea6db:	08a8      	l32i.n	a10, a8, 0
400ea6dd:	ff34e5        	call8	400e9a2c <pthread_key_delete>
400ea6e0:	f01d      	retw.n
	...

400ea6e4 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)>:
400ea6e4:	004136        	entry	a1, 32
400ea6e7:	c0c382        	addi	a8, a3, -64
400ea6ea:	0722b6        	bltui	a2, 2, 400ea6f5 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x11>
400ea6ed:	78a8      	l32i.n	a10, a8, 28
400ea6ef:	201110        	or	a1, a1, a1
400ea6f2:	004de5        	call8	400eabd0 <__cxxabiv1::__terminate(void (*)())>
400ea6f5:	0020c0        	memw
400ea6f8:	0898      	l32i.n	a9, a8, 0
400ea6fa:	a90b      	addi.n	a10, a9, -1
400ea6fc:	09bd      	mov.n	a11, a9
400ea6fe:	0a2d      	mov.n	a2, a10
400ea700:	130c90        	wsr.scompare1	a9
400ea703:	00e822        	s32c1i	a2, a8, 0
400ea706:	029d      	mov.n	a9, a2
400ea708:	ee92b7        	bne	a2, a11, 400ea6fa <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x16>
400ea70b:	facc      	bnez.n	a10, 400ea71e <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x3a>
400ea70d:	5888      	l32i.n	a8, a8, 20
400ea70f:	20c332        	addi	a3, a3, 32
400ea712:	388c      	beqz.n	a8, 400ea719 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x35>
400ea714:	03ad      	mov.n	a10, a3
400ea716:	0008e0        	callx8	a8
400ea719:	03ad      	mov.n	a10, a3
400ea71b:	003ce5        	call8	400eaae8 <__cxa_free_exception>
400ea71e:	f01d      	retw.n

400ea720 <__cxa_throw>:
400ea720:	004136        	entry	a1, 32
400ea723:	fff325        	call8	400ea654 <__cxa_get_globals>
400ea726:	012a52        	l32i	a5, a10, 4
400ea729:	01a082        	movi	a8, 1
400ea72c:	551b      	addi.n	a5, a5, 1
400ea72e:	1a59      	s32i.n	a5, a10, 4
400ea730:	a0c252        	addi	a5, a2, -96
400ea733:	0589      	s32i.n	a8, a5, 0
400ea735:	4539      	s32i.n	a3, a5, 16
400ea737:	056542        	s32i	a4, a5, 20
400ea73a:	004f25        	call8	400eac2c <std::get_unexpected()>
400ea73d:	65a9      	s32i.n	a10, a5, 24
400ea73f:	004c65        	call8	400eac04 <std::get_terminate()>
400ea742:	98cd81        	l32r	a8, 400d0a78 <_flash_cache_start+0xa60>
400ea745:	98cd91        	l32r	a9, 400d0a7c <_flash_cache_start+0xa64>
400ea748:	106582        	s32i	a8, a5, 64
400ea74b:	98cd81        	l32r	a8, 400d0a80 <_flash_cache_start+0xa68>
400ea74e:	e0c222        	addi	a2, a2, -32
400ea751:	75a9      	s32i.n	a10, a5, 28
400ea753:	116592        	s32i	a9, a5, 68
400ea756:	126582        	s32i	a8, a5, 72
400ea759:	02ad      	mov.n	a10, a2
400ea75b:	ea0525        	call8	400d47ac <_Unwind_RaiseException>
400ea75e:	02ad      	mov.n	a10, a2
400ea760:	004e65        	call8	400eac48 <__cxa_begin_catch>
400ea763:	004b25        	call8	400eac14 <std::terminate()>
	...

400ea768 <__cxa_rethrow>:
400ea768:	004136        	entry	a1, 32
400ea76b:	ffeea5        	call8	400ea654 <__cxa_get_globals>
400ea76e:	012a22        	l32i	a2, a10, 4
400ea771:	002a82        	l32i	a8, a10, 0
400ea774:	01c222        	addi	a2, a2, 1
400ea777:	1a29      	s32i.n	a2, a10, 4
400ea779:	88bc      	beqz.n	a8, 400ea7b5 <__cxa_rethrow+0x4d>
400ea77b:	c8e8      	l32i.n	a14, a8, 48
400ea77d:	98b9c1        	l32r	a12, 400d0a64 <_flash_cache_start+0xa4c>
400ea780:	d828      	l32i.n	a2, a8, 52
400ea782:	9eca      	add.n	a9, a14, a12
400ea784:	98b9d1        	l32r	a13, 400d0a68 <_flash_cache_start+0xa50>
400ea787:	1b0c      	movi.n	a11, 1
400ea789:	0139e7        	bltu	a9, a14, 400ea78e <__cxa_rethrow+0x26>
400ea78c:	0b0c      	movi.n	a11, 0
400ea78e:	22da      	add.n	a2, a2, a13
400ea790:	2b2a      	add.n	a2, a11, a2
400ea792:	002256        	bnez	a2, 400ea798 <__cxa_rethrow+0x30>
400ea795:	0729b6        	bltui	a9, 2, 400ea7a0 <__cxa_rethrow+0x38>
400ea798:	020c      	movi.n	a2, 0
400ea79a:	0a29      	s32i.n	a2, a10, 0
400ea79c:	000206        	j	400ea7a8 <__cxa_rethrow+0x40>
400ea79f:	282200        	lsi	f0, a2, 160
400ea7a2:	202005        	call0	4010a9a4 <_etext+0x1e4d3>
400ea7a5:	582960        	ssxp	f2, a9, a6
400ea7a8:	30c822        	addi	a2, a8, 48
400ea7ab:	02ad      	mov.n	a10, a2
400ea7ad:	ea16a5        	call8	400d4918 <_Unwind_Resume_or_Rethrow>
400ea7b0:	02ad      	mov.n	a10, a2
400ea7b2:	004965        	call8	400eac48 <__cxa_begin_catch>
400ea7b5:	0045e5        	call8	400eac14 <std::terminate()>

400ea7b8 <__cxa_call_terminate>:
400ea7b8:	004136        	entry	a1, 32
400ea7bb:	02c216        	beqz	a2, 400ea7eb <__cxa_call_terminate+0x33>
400ea7be:	20a220        	or	a10, a2, a2
400ea7c1:	004865        	call8	400eac48 <__cxa_begin_catch>
400ea7c4:	0022b2        	l32i	a11, a2, 0
400ea7c7:	98a7c1        	l32r	a12, 400d0a64 <_flash_cache_start+0xa4c>
400ea7ca:	1288      	l32i.n	a8, a2, 4
400ea7cc:	9bca      	add.n	a9, a11, a12
400ea7ce:	98a6d1        	l32r	a13, 400d0a68 <_flash_cache_start+0xa50>
400ea7d1:	1a0c      	movi.n	a10, 1
400ea7d3:	0139b7        	bltu	a9, a11, 400ea7d8 <__cxa_call_terminate+0x20>
400ea7d6:	0a0c      	movi.n	a10, 0
400ea7d8:	8088d0        	add	a8, a8, a13
400ea7db:	808a80        	add	a8, a10, a8
400ea7de:	98cc      	bnez.n	a8, 400ea7eb <__cxa_call_terminate+0x33>
400ea7e0:	0729f6        	bgeui	a9, 2, 400ea7eb <__cxa_call_terminate+0x33>
400ea7e3:	d0c222        	addi	a2, a2, -48
400ea7e6:	32a8      	l32i.n	a10, a2, 12
400ea7e8:	003e65        	call8	400eabd0 <__cxxabiv1::__terminate(void (*)())>
400ea7eb:	0042a5        	call8	400eac14 <std::terminate()>
	...

400ea7f0 <operator delete(void*)>:
400ea7f0:	004136        	entry	a1, 32
400ea7f3:	20a220        	or	a10, a2, a2
400ea7f6:	962581        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400ea7f9:	0008e0        	callx8	a8
400ea7fc:	f01d      	retw.n
	...

400ea800 <operator new[](unsigned int)>:
400ea800:	004136        	entry	a1, 32
400ea803:	20a220        	or	a10, a2, a2
400ea806:	201110        	or	a1, a1, a1
400ea809:	0001e5        	call8	400ea828 <operator new(unsigned int)>
400ea80c:	000486        	j	400ea822 <operator new[](unsigned int)+0x22>
400ea80f:	ad0000        	lsi	f0, a0, 0x2b4
400ea812:	032602        	l32i	a0, a6, 12
400ea815:	111005        	call0	400fb918 <_etext+0xf447>
400ea818:	09a520        	l32e	a2, a5, -24
400ea81b:	10ea      	add.n	a1, a0, a14
400ea81d:	652011        	l32r	a1, 400c3ca0 <_rtc_text_end+0x3ca0>
400ea820:	2dffd5        	call4	40118820 <_etext+0x2c34f>
400ea823:	1d0a      	add.n	a1, a13, a0
400ea825:	0000f0        	callx12	a0

400ea828 <operator new(unsigned int)>:
400ea828:	004136        	entry	a1, 32
400ea82b:	01a032        	movi	a3, 1
400ea82e:	832320        	moveqz	a2, a3, a2
400ea831:	20a220        	or	a10, a2, a2
400ea834:	962c81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400ea837:	0008e0        	callx8	a8
400ea83a:	01ea56        	bnez	a10, 400ea85c <operator new(unsigned int)+0x34>
400ea83d:	004c65        	call8	400ead04 <std::get_new_handler()>
400ea840:	1adc      	bnez.n	a10, 400ea855 <operator new(unsigned int)+0x2d>
400ea842:	4a0c      	movi.n	a10, 4
400ea844:	0025a5        	call8	400eaaa0 <__cxa_allocate_exception>
400ea847:	988f31        	l32r	a3, 400d0a84 <_flash_cache_start+0xa6c>
400ea84a:	988fc1        	l32r	a12, 400d0a88 <_flash_cache_start+0xa70>
400ea84d:	988fb1        	l32r	a11, 400d0a8c <_flash_cache_start+0xa74>
400ea850:	0a39      	s32i.n	a3, a10, 0
400ea852:	ffece5        	call8	400ea720 <__cxa_throw>
400ea855:	000ae0        	callx8	a10
400ea858:	fff546        	j	400ea831 <operator new(unsigned int)+0x9>
400ea85b:	0a2d00        	add.s	f2, f13, f0
400ea85e:	f01d      	retw.n

400ea860 <__cxxabiv1::__class_type_info::~__class_type_info()>:
400ea860:	004136        	entry	a1, 32
400ea863:	988b81        	l32r	a8, 400d0a90 <_flash_cache_start+0xa78>
400ea866:	20a220        	or	a10, a2, a2
400ea869:	006282        	s32i	a8, a2, 0
400ea86c:	01c2a5        	call8	400ec498 <std::type_info::~type_info()>
400ea86f:	000090        	retw
	...

400ea874 <__cxxabiv1::__class_type_info::~__class_type_info()>:
400ea874:	004136        	entry	a1, 32
400ea877:	20a220        	or	a10, a2, a2
400ea87a:	fffe65        	call8	400ea860 <__cxxabiv1::__class_type_info::~__class_type_info()>
400ea87d:	20a220        	or	a10, a2, a2
400ea880:	fff6e5        	call8	400ea7f0 <operator delete(void*)>
400ea883:	000090        	retw
	...

400ea888 <_ZNKSt9type_infoeqERKS_$isra$0>:
400ea888:	004136        	entry	a1, 32
400ea88b:	02ad      	mov.n	a10, a2
400ea88d:	03bd      	mov.n	a11, a3
400ea88f:	120c      	movi.n	a2, 1
400ea891:	191a37        	beq	a10, a3, 400ea8ae <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400ea894:	000a92        	l8ui	a9, a10, 0
400ea897:	a82c      	movi.n	a8, 42
400ea899:	020c      	movi.n	a2, 0
400ea89b:	0f1987        	beq	a9, a8, 400ea8ae <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400ea89e:	96cc81        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400ea8a1:	0008e0        	callx8	a8
400ea8a4:	024d      	mov.n	a4, a2
400ea8a6:	180c      	movi.n	a8, 1
400ea8a8:	8348a0        	moveqz	a4, a8, a10
400ea8ab:	742040        	extui	a2, a4, 0, 8
400ea8ae:	f01d      	retw.n

400ea8b0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
400ea8b0:	004136        	entry	a1, 32
400ea8b3:	0123b2        	l32i	a11, a3, 4
400ea8b6:	0122a2        	l32i	a10, a2, 4
400ea8b9:	fffce5        	call8	400ea888 <_ZNKSt9type_infoeqERKS_$isra$0>
400ea8bc:	009a16        	beqz	a10, 400ea8c9 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x19>
400ea8bf:	880c      	movi.n	a8, 8
400ea8c1:	3589      	s32i.n	a8, a5, 12
400ea8c3:	680c      	movi.n	a8, 6
400ea8c5:	0549      	s32i.n	a4, a5, 0
400ea8c7:	1589      	s32i.n	a8, a5, 4
400ea8c9:	0a2d      	mov.n	a2, a10
400ea8cb:	f01d      	retw.n
400ea8cd:	000000        	ill

400ea8d0 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
400ea8d0:	004136        	entry	a1, 32
400ea8d3:	082182        	l32i	a8, a1, 32
400ea8d6:	092132        	l32i	a3, a1, 36
400ea8d9:	199687        	bne	a6, a8, 400ea8f6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
400ea8dc:	0127b2        	l32i	a11, a7, 4
400ea8df:	12a8      	l32i.n	a10, a2, 4
400ea8e1:	fffa65        	call8	400ea888 <_ZNKSt9type_infoeqERKS_$isra$0>
400ea8e4:	eadc      	bnez.n	a10, 400ea906 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
400ea8e6:	000306        	j	400ea8f6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
400ea8e9:	120c      	movi.n	a2, 1
400ea8eb:	0369      	s32i.n	a6, a3, 0
400ea8ed:	1349      	s32i.n	a4, a3, 4
400ea8ef:	3329      	s32i.n	a2, a3, 12
400ea8f1:	0004c6        	j	400ea908 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x38>
400ea8f4:	b80000        	lsi	f0, a0, 0x2e0
400ea8f7:	12a815        	call4	400fd378 <_etext+0x10ea7>
400ea8fa:	fff8e5        	call8	400ea888 <_ZNKSt9type_infoeqERKS_$isra$0>
400ea8fd:	fe8a56        	bnez	a10, 400ea8e9 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19>
400ea900:	000106        	j	400ea908 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x38>
400ea903:	000000        	ill
400ea906:	2349      	s32i.n	a4, a3, 8
400ea908:	020c      	movi.n	a2, 0
400ea90a:	f01d      	retw.n

400ea90c <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
400ea90c:	004136        	entry	a1, 32
400ea90f:	13b8      	l32i.n	a11, a3, 4
400ea911:	12a8      	l32i.n	a10, a2, 4
400ea913:	fff765        	call8	400ea888 <_ZNKSt9type_infoeqERKS_$isra$0>
400ea916:	eacc      	bnez.n	a10, 400ea928 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x1c>
400ea918:	0c45f6        	bgeui	a5, 4, 400ea928 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x1c>
400ea91b:	0388      	l32i.n	a8, a3, 0
400ea91d:	04cd      	mov.n	a12, a4
400ea91f:	5888      	l32i.n	a8, a8, 20
400ea921:	02bd      	mov.n	a11, a2
400ea923:	03ad      	mov.n	a10, a3
400ea925:	0008e0        	callx8	a8
400ea928:	0a2d      	mov.n	a2, a10
400ea92a:	f01d      	retw.n

400ea92c <__gnu_cxx::__concurrence_lock_error::what() const>:
400ea92c:	004136        	entry	a1, 32
400ea92f:	985921        	l32r	a2, 400d0a94 <_flash_cache_start+0xa7c>
400ea932:	f01d      	retw.n

400ea934 <__gnu_cxx::__concurrence_unlock_error::what() const>:
400ea934:	004136        	entry	a1, 32
400ea937:	985821        	l32r	a2, 400d0a98 <_flash_cache_start+0xa80>
400ea93a:	f01d      	retw.n

400ea93c <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>:
400ea93c:	004136        	entry	a1, 32
400ea93f:	985781        	l32r	a8, 400d0a9c <_flash_cache_start+0xa84>
400ea942:	20a220        	or	a10, a2, a2
400ea945:	006282        	s32i	a8, a2, 0
400ea948:	01b5e5        	call8	400ec4a8 <std::exception::~exception()>
400ea94b:	000090        	retw
	...

400ea950 <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>:
400ea950:	004136        	entry	a1, 32
400ea953:	985381        	l32r	a8, 400d0aa0 <_flash_cache_start+0xa88>
400ea956:	20a220        	or	a10, a2, a2
400ea959:	006282        	s32i	a8, a2, 0
400ea95c:	01b4a5        	call8	400ec4a8 <std::exception::~exception()>
400ea95f:	000090        	retw
	...

400ea964 <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>:
400ea964:	004136        	entry	a1, 32
400ea967:	20a220        	or	a10, a2, a2
400ea96a:	fffd25        	call8	400ea93c <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>
400ea96d:	20a220        	or	a10, a2, a2
400ea970:	ffe7e5        	call8	400ea7f0 <operator delete(void*)>
400ea973:	000090        	retw
	...

400ea978 <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>:
400ea978:	004136        	entry	a1, 32
400ea97b:	20a220        	or	a10, a2, a2
400ea97e:	fffd25        	call8	400ea950 <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>
400ea981:	20a220        	or	a10, a2, a2
400ea984:	ffe6a5        	call8	400ea7f0 <operator delete(void*)>
400ea987:	000090        	retw
	...

400ea98c <__gnu_cxx::__mutex::lock()>:
400ea98c:	004136        	entry	a1, 32
400ea98f:	20a220        	or	a10, a2, a2
400ea992:	9a1e25        	call8	40084b74 <pthread_mutex_lock>
400ea995:	014a16        	beqz	a10, 400ea9ad <__gnu_cxx::__mutex::lock()+0x21>
400ea998:	04a0a2        	movi	a10, 4
400ea99b:	001065        	call8	400eaaa0 <__cxa_allocate_exception>
400ea99e:	983f81        	l32r	a8, 400d0a9c <_flash_cache_start+0xa84>
400ea9a1:	9840c1        	l32r	a12, 400d0aa4 <_flash_cache_start+0xa8c>
400ea9a4:	9841b1        	l32r	a11, 400d0aa8 <_flash_cache_start+0xa90>
400ea9a7:	006a82        	s32i	a8, a10, 0
400ea9aa:	ffd765        	call8	400ea720 <__cxa_throw>
400ea9ad:	f01d      	retw.n
	...

400ea9b0 <__gnu_cxx::__scoped_lock::~__scoped_lock()>:
400ea9b0:	004136        	entry	a1, 32
400ea9b3:	0022a2        	l32i	a10, a2, 0
400ea9b6:	201110        	or	a1, a1, a1
400ea9b9:	9a25e5        	call8	40084c18 <pthread_mutex_unlock>
400ea9bc:	aaac      	beqz.n	a10, 400ea9ea <__gnu_cxx::__scoped_lock::~__scoped_lock()+0x3a>
400ea9be:	4a0c      	movi.n	a10, 4
400ea9c0:	201110        	or	a1, a1, a1
400ea9c3:	000de5        	call8	400eaaa0 <__cxa_allocate_exception>
400ea9c6:	983681        	l32r	a8, 400d0aa0 <_flash_cache_start+0xa88>
400ea9c9:	9838c1        	l32r	a12, 400d0aac <_flash_cache_start+0xa94>
400ea9cc:	9839b1        	l32r	a11, 400d0ab0 <_flash_cache_start+0xa98>
400ea9cf:	006a82        	s32i	a8, a10, 0
400ea9d2:	201110        	or	a1, a1, a1
400ea9d5:	ffd4a5        	call8	400ea720 <__cxa_throw>
400ea9d8:	20a220        	or	a10, a2, a2
400ea9db:	050326        	beqi	a3, -1, 400ea9e4 <__gnu_cxx::__scoped_lock::~__scoped_lock()+0x34>
400ea9de:	201110        	or	a1, a1, a1
400ea9e1:	e9ed25        	call8	400d48b4 <_Unwind_Resume>
400ea9e4:	201110        	or	a1, a1, a1
400ea9e7:	ffb8e5        	call8	400ea574 <__cxa_call_unexpected>
400ea9ea:	f01d      	retw.n

400ea9ec <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4>:
400ea9ec:	006136        	entry	a1, 48
400ea9ef:	983231        	l32r	a3, 400d0ab8 <_flash_cache_start+0xaa0>
400ea9f2:	f0c222        	addi	a2, a2, -16
400ea9f5:	03ad      	mov.n	a10, a3
400ea9f7:	0139      	s32i.n	a3, a1, 0
400ea9f9:	fff925        	call8	400ea98c <__gnu_cxx::__mutex::lock()>
400ea9fc:	1388      	l32i.n	a8, a3, 4
400ea9fe:	0298      	l32i.n	a9, a2, 0
400eaa00:	18cc      	bnez.n	a8, 400eaa05 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x19>
400eaa02:	0003c6        	j	400eaa15 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x29>
400eaa05:	c29a      	add.n	a12, a2, a9
400eaa07:	982ba1        	l32r	a10, 400d0ab4 <_flash_cache_start+0xa9c>
400eaa0a:	0c98c7        	bne	a8, a12, 400eaa1a <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x2e>
400eaa0d:	08a8      	l32i.n	a10, a8, 0
400eaa0f:	1888      	l32i.n	a8, a8, 4
400eaa11:	9a9a      	add.n	a9, a10, a9
400eaa13:	0299      	s32i.n	a9, a2, 0
400eaa15:	1289      	s32i.n	a8, a2, 4
400eaa17:	000846        	j	400eaa3c <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x50>
400eaa1a:	0a88      	l32i.n	a8, a10, 0
400eaa1c:	18b8      	l32i.n	a11, a8, 4
400eaa1e:	6b8c      	beqz.n	a11, 400eaa28 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x3c>
400eaa20:	04bcb7        	bgeu	a12, a11, 400eaa28 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x3c>
400eaa23:	a84b      	addi.n	a10, a8, 4
400eaa25:	fffc46        	j	400eaa1a <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x2e>
400eaa28:	0838      	l32i.n	a3, a8, 0
400eaa2a:	c83a      	add.n	a12, a8, a3
400eaa2c:	0692c7        	bne	a2, a12, 400eaa36 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x4a>
400eaa2f:	993a      	add.n	a9, a9, a3
400eaa31:	0899      	s32i.n	a9, a8, 0
400eaa33:	000206        	j	400eaa3f <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x53>
400eaa36:	0162b2        	s32i	a11, a2, 4
400eaa39:	002a32        	l32i	a3, a10, 0
400eaa3c:	016322        	s32i	a2, a3, 4
400eaa3f:	01ad      	mov.n	a10, a1
400eaa41:	fff6e5        	call8	400ea9b0 <__gnu_cxx::__scoped_lock::~__scoped_lock()>
400eaa44:	f01d      	retw.n
	...

400eaa48 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5>:
400eaa48:	006136        	entry	a1, 48
400eaa4b:	981b31        	l32r	a3, 400d0ab8 <_flash_cache_start+0xaa0>
400eaa4e:	10c222        	addi	a2, a2, 16
400eaa51:	03ad      	mov.n	a10, a3
400eaa53:	0139      	s32i.n	a3, a1, 0
400eaa55:	fff365        	call8	400ea98c <__gnu_cxx::__mutex::lock()>
400eaa58:	880c      	movi.n	a8, 8
400eaa5a:	732280        	maxu	a2, a2, a8
400eaa5d:	22fb      	addi.n	a2, a2, 15
400eaa5f:	087c      	movi.n	a8, -16
400eaa61:	108280        	and	a8, a2, a8
400eaa64:	9814a1        	l32r	a10, 400d0ab4 <_flash_cache_start+0xa9c>
400eaa67:	1328      	l32i.n	a2, a3, 4
400eaa69:	f29c      	beqz.n	a2, 400eaa8c <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x44>
400eaa6b:	0298      	l32i.n	a9, a2, 0
400eaa6d:	23b987        	bgeu	a9, a8, 400eaa94 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x4c>
400eaa70:	a24b      	addi.n	a10, a2, 4
400eaa72:	1228      	l32i.n	a2, a2, 4
400eaa74:	fffc46        	j	400eaa69 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x21>
400eaa77:	b28a00        	mulsh	a8, a10, a0
400eaa7a:	1b39      	s32i.n	a3, a11, 4
400eaa7c:	0a28      	l32i.n	a2, a10, 0
400eaa7e:	0b99      	s32i.n	a9, a11, 0
400eaa80:	0289      	s32i.n	a8, a2, 0
400eaa82:	0ab9      	s32i.n	a11, a10, 0
400eaa84:	000046        	j	400eaa89 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x41>
400eaa87:	0a39      	s32i.n	a3, a10, 0
400eaa89:	10c222        	addi	a2, a2, 16
400eaa8c:	01ad      	mov.n	a10, a1
400eaa8e:	fff225        	call8	400ea9b0 <__gnu_cxx::__scoped_lock::~__scoped_lock()>
400eaa91:	f01d      	retw.n
400eaa93:	998000        	lsi	f0, a0, 0x264
400eaa96:	1238c0        	andbc	b3, b8, b12
400eaa99:	db89f6        	bgeui	a9, 8, 400eaa78 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x30>
400eaa9c:	fff9c6        	j	400eaa87 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x3f>
	...

400eaaa0 <__cxa_allocate_exception>:
400eaaa0:	004136        	entry	a1, 32
400eaaa3:	60c222        	addi	a2, a2, 96
400eaaa6:	02ad      	mov.n	a10, a2
400eaaa8:	958f81        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400eaaab:	0008e0        	callx8	a8
400eaaae:	0a3d      	mov.n	a3, a10
400eaab0:	0adc      	bnez.n	a10, 400eaac4 <__cxa_allocate_exception+0x24>
400eaab2:	02ad      	mov.n	a10, a2
400eaab4:	201110        	or	a1, a1, a1
400eaab7:	fff925        	call8	400eaa48 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5>
400eaaba:	0a3d      	mov.n	a3, a10
400eaabc:	4acc      	bnez.n	a10, 400eaac4 <__cxa_allocate_exception+0x24>
400eaabe:	201110        	or	a1, a1, a1
400eaac1:	001525        	call8	400eac14 <std::terminate()>
400eaac4:	60a0c2        	movi	a12, 96
400eaac7:	0b0c      	movi.n	a11, 0
400eaac9:	03ad      	mov.n	a10, a3
400eaacb:	956881        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400eaace:	0008e0        	callx8	a8
400eaad1:	60c322        	addi	a2, a3, 96
400eaad4:	f01d      	retw.n
400eaad6:	02ad      	mov.n	a10, a2
400eaad8:	050326        	beqi	a3, -1, 400eaae1 <__cxa_allocate_exception+0x41>
400eaadb:	201110        	or	a1, a1, a1
400eaade:	e9dd65        	call8	400d48b4 <_Unwind_Resume>
400eaae1:	201110        	or	a1, a1, a1
400eaae4:	ffa8e5        	call8	400ea574 <__cxa_call_unexpected>
	...

400eaae8 <__cxa_free_exception>:
400eaae8:	004136        	entry	a1, 32
400eaaeb:	97f381        	l32r	a8, 400d0ab8 <_flash_cache_start+0xaa0>
400eaaee:	a0c2a2        	addi	a10, a2, -96
400eaaf1:	2898      	l32i.n	a9, a8, 8
400eaaf3:	1bb9a7        	bgeu	a9, a10, 400eab12 <__cxa_free_exception+0x2a>
400eaaf6:	3888      	l32i.n	a8, a8, 12
400eaaf8:	898a      	add.n	a8, a9, a8
400eaafa:	14ba87        	bgeu	a10, a8, 400eab12 <__cxa_free_exception+0x2a>
400eaafd:	000646        	j	400eab1a <__cxa_free_exception+0x32>
400eab00:	02ad00        	andb	b10, b13, b0
400eab03:	050326        	beqi	a3, -1, 400eab0c <__cxa_free_exception+0x24>
400eab06:	201110        	or	a1, a1, a1
400eab09:	e9daa5        	call8	400d48b4 <_Unwind_Resume>
400eab0c:	201110        	or	a1, a1, a1
400eab0f:	ffa665        	call8	400ea574 <__cxa_call_unexpected>
400eab12:	955e81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400eab15:	0008e0        	callx8	a8
400eab18:	f01d      	retw.n
400eab1a:	201110        	or	a1, a1, a1
400eab1d:	ffece5        	call8	400ea9ec <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4>
400eab20:	f01d      	retw.n
	...

400eab24 <_GLOBAL__sub_I___cxa_allocate_exception>:
400eab24:	004136        	entry	a1, 32
400eab27:	97e441        	l32r	a4, 400d0ab8 <_flash_cache_start+0xaa0>
400eab2a:	0b0c      	movi.n	a11, 0
400eab2c:	04ad      	mov.n	a10, a4
400eab2e:	201110        	or	a1, a1, a1
400eab31:	ff0665        	call8	400e9b98 <pthread_mutex_init>
400eab34:	020c      	movi.n	a2, 0
400eab36:	2429      	s32i.n	a2, a4, 8
400eab38:	201110        	or	a1, a1, a1
400eab3b:	017125        	call8	400ec24c <__cxx_eh_arena_size_get>
400eab3e:	34a9      	s32i.n	a10, a4, 12
400eab40:	0a2d      	mov.n	a2, a10
400eab42:	6a8c      	beqz.n	a10, 400eab4c <_GLOBAL__sub_I___cxa_allocate_exception+0x28>
400eab44:	956881        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400eab47:	0008e0        	callx8	a8
400eab4a:	24a9      	s32i.n	a10, a4, 8
400eab4c:	2488      	l32i.n	a8, a4, 8
400eab4e:	48cc      	bnez.n	a8, 400eab56 <_GLOBAL__sub_I___cxa_allocate_exception+0x32>
400eab50:	3489      	s32i.n	a8, a4, 12
400eab52:	1489      	s32i.n	a8, a4, 4
400eab54:	f01d      	retw.n
400eab56:	1489      	s32i.n	a8, a4, 4
400eab58:	0829      	s32i.n	a2, a8, 0
400eab5a:	020c      	movi.n	a2, 0
400eab5c:	1829      	s32i.n	a2, a8, 4
400eab5e:	f01d      	retw.n
400eab60:	04ad      	mov.n	a10, a4
400eab62:	201110        	or	a1, a1, a1
400eab65:	ff0da5        	call8	400e9c40 <pthread_mutex_destroy>
400eab68:	02ad      	mov.n	a10, a2
400eab6a:	201110        	or	a1, a1, a1
400eab6d:	e9d465        	call8	400d48b4 <_Unwind_Resume>

400eab70 <_GLOBAL__sub_D___cxa_allocate_exception>:
400eab70:	004136        	entry	a1, 32
400eab73:	97d1a1        	l32r	a10, 400d0ab8 <_flash_cache_start+0xaa0>
400eab76:	ff0ca5        	call8	400e9c40 <pthread_mutex_destroy>
400eab79:	f01d      	retw.n
	...

400eab7c <operator delete[](void*)>:
400eab7c:	004136        	entry	a1, 32
400eab7f:	02ad      	mov.n	a10, a2
400eab81:	ffc6e5        	call8	400ea7f0 <operator delete(void*)>
400eab84:	f01d      	retw.n
	...

400eab88 <std::bad_alloc::what() const>:
400eab88:	004136        	entry	a1, 32
400eab8b:	97cc21        	l32r	a2, 400d0abc <_flash_cache_start+0xaa4>
400eab8e:	f01d      	retw.n

400eab90 <std::bad_alloc::~bad_alloc()>:
400eab90:	004136        	entry	a1, 32
400eab93:	97bc81        	l32r	a8, 400d0a84 <_flash_cache_start+0xa6c>
400eab96:	20a220        	or	a10, a2, a2
400eab99:	006282        	s32i	a8, a2, 0
400eab9c:	0190a5        	call8	400ec4a8 <std::exception::~exception()>
400eab9f:	000090        	retw
	...

400eaba4 <std::bad_alloc::~bad_alloc()>:
400eaba4:	004136        	entry	a1, 32
400eaba7:	20a220        	or	a10, a2, a2
400eabaa:	fffe65        	call8	400eab90 <std::bad_alloc::~bad_alloc()>
400eabad:	20a220        	or	a10, a2, a2
400eabb0:	ffc3e5        	call8	400ea7f0 <operator delete(void*)>
400eabb3:	000090        	retw
	...

400eabb8 <std::__throw_bad_alloc()>:
400eabb8:	004136        	entry	a1, 32
400eabbb:	4a0c      	movi.n	a10, 4
400eabbd:	ffee25        	call8	400eaaa0 <__cxa_allocate_exception>
400eabc0:	97b181        	l32r	a8, 400d0a84 <_flash_cache_start+0xa6c>
400eabc3:	97b1c1        	l32r	a12, 400d0a88 <_flash_cache_start+0xa70>
400eabc6:	97b1b1        	l32r	a11, 400d0a8c <_flash_cache_start+0xa74>
400eabc9:	0a89      	s32i.n	a8, a10, 0
400eabcb:	ffb565        	call8	400ea720 <__cxa_throw>
	...

400eabd0 <__cxxabiv1::__terminate(void (*)())>:
400eabd0:	004136        	entry	a1, 32
400eabd3:	0002e0        	callx8	a2
400eabd6:	201110        	or	a1, a1, a1
400eabd9:	a07925        	call8	4008b36c <abort>
400eabdc:	20a220        	or	a10, a2, a2
400eabdf:	201110        	or	a1, a1, a1
400eabe2:	000665        	call8	400eac48 <__cxa_begin_catch>
400eabe5:	201110        	or	a1, a1, a1
400eabe8:	a07825        	call8	4008b36c <abort>
400eabeb:	201110        	or	a1, a1, a1
400eabee:	000b25        	call8	400eaca0 <__cxa_end_catch>
400eabf1:	02ad      	mov.n	a10, a2
400eabf3:	050326        	beqi	a3, -1, 400eabfc <__cxxabiv1::__terminate(void (*)())+0x2c>
400eabf6:	201110        	or	a1, a1, a1
400eabf9:	e9cba5        	call8	400d48b4 <_Unwind_Resume>
400eabfc:	201110        	or	a1, a1, a1
400eabff:	ff9765        	call8	400ea574 <__cxa_call_unexpected>
	...

400eac04 <std::get_terminate()>:
400eac04:	004136        	entry	a1, 32
400eac07:	97ae21        	l32r	a2, 400d0ac0 <_flash_cache_start+0xaa8>
400eac0a:	0020c0        	memw
400eac0d:	0228      	l32i.n	a2, a2, 0
400eac0f:	0020c0        	memw
400eac12:	f01d      	retw.n

400eac14 <std::terminate()>:
400eac14:	004136        	entry	a1, 32
400eac17:	fffee5        	call8	400eac04 <std::get_terminate()>
400eac1a:	fffb65        	call8	400eabd0 <__cxxabiv1::__terminate(void (*)())>
400eac1d:	000000        	ill

400eac20 <__cxxabiv1::__unexpected(void (*)())>:
400eac20:	004136        	entry	a1, 32
400eac23:	0002e0        	callx8	a2
400eac26:	fffee5        	call8	400eac14 <std::terminate()>
400eac29:	000000        	ill

400eac2c <std::get_unexpected()>:
400eac2c:	004136        	entry	a1, 32
400eac2f:	97a521        	l32r	a2, 400d0ac4 <_flash_cache_start+0xaac>
400eac32:	0020c0        	memw
400eac35:	0228      	l32i.n	a2, a2, 0
400eac37:	0020c0        	memw
400eac3a:	f01d      	retw.n

400eac3c <std::unexpected()>:
400eac3c:	004136        	entry	a1, 32
400eac3f:	fffee5        	call8	400eac2c <std::get_unexpected()>
400eac42:	fffde5        	call8	400eac20 <__cxxabiv1::__unexpected(void (*)())>
400eac45:	000000        	ill

400eac48 <__cxa_begin_catch>:
400eac48:	004136        	entry	a1, 32
400eac4b:	ffa0a5        	call8	400ea654 <__cxa_get_globals>
400eac4e:	d0c282        	addi	a8, a2, -48
400eac51:	0c28f2        	l32i	a15, a8, 48
400eac54:	9784c1        	l32r	a12, 400d0a64 <_flash_cache_start+0xa4c>
400eac57:	002a92        	l32i	a9, a10, 0
400eac5a:	80bfc0        	add	a11, a15, a12
400eac5d:	d828      	l32i.n	a2, a8, 52
400eac5f:	9782d1        	l32r	a13, 400d0a68 <_flash_cache_start+0xa50>
400eac62:	1e0c      	movi.n	a14, 1
400eac64:	013bf7        	bltu	a11, a15, 400eac69 <__cxa_begin_catch+0x21>
400eac67:	0e0c      	movi.n	a14, 0
400eac69:	22da      	add.n	a2, a2, a13
400eac6b:	2e2a      	add.n	a2, a14, a2
400eac6d:	12cc      	bnez.n	a2, 400eac72 <__cxa_begin_catch+0x2a>
400eac6f:	0e2bb6        	bltui	a11, 2, 400eac81 <__cxa_begin_catch+0x39>
400eac72:	498c      	beqz.n	a9, 400eac7a <__cxa_begin_catch+0x32>
400eac74:	201110        	or	a1, a1, a1
400eac77:	fff9e5        	call8	400eac14 <std::terminate()>
400eac7a:	0a89      	s32i.n	a8, a10, 0
400eac7c:	092d      	mov.n	a2, a9
400eac7e:	f01d      	retw.n
400eac80:	58b800        	ssxp	f11, a8, a0
400eac83:	2b1b      	addi.n	a2, a11, 1
400eac85:	004bd6        	bgez	a11, 400eac8d <__cxa_begin_catch+0x45>
400eac88:	120c      	movi.n	a2, 1
400eac8a:	c022b0        	sub	a2, a2, a11
400eac8d:	5829      	s32i.n	a2, a8, 20
400eac8f:	1a28      	l32i.n	a2, a10, 4
400eac91:	220b      	addi.n	a2, a2, -1
400eac93:	1a29      	s32i.n	a2, a10, 4
400eac95:	031987        	beq	a9, a8, 400eac9c <__cxa_begin_catch+0x54>
400eac98:	4899      	s32i.n	a9, a8, 16
400eac9a:	0a89      	s32i.n	a8, a10, 0
400eac9c:	a828      	l32i.n	a2, a8, 40
400eac9e:	f01d      	retw.n

400eaca0 <__cxa_end_catch>:
400eaca0:	004136        	entry	a1, 32
400eaca3:	ff97e5        	call8	400ea620 <__cxa_get_globals_fast>
400eaca6:	002a82        	l32i	a8, a10, 0
400eaca9:	053816        	beqz	a8, 400ead00 <__cxa_end_catch+0x60>
400eacac:	0c28d2        	l32i	a13, a8, 48
400eacaf:	976de1        	l32r	a14, 400d0a64 <_flash_cache_start+0xa4c>
400eacb2:	0d2892        	l32i	a9, a8, 52
400eacb5:	bdea      	add.n	a11, a13, a14
400eacb7:	976cf1        	l32r	a15, 400d0a68 <_flash_cache_start+0xa50>
400eacba:	1c0c      	movi.n	a12, 1
400eacbc:	013bd7        	bltu	a11, a13, 400eacc1 <__cxa_end_catch+0x21>
400eacbf:	0c0c      	movi.n	a12, 0
400eacc1:	99fa      	add.n	a9, a9, a15
400eacc3:	9c9a      	add.n	a9, a12, a9
400eacc5:	19cc      	bnez.n	a9, 400eacca <__cxa_end_catch+0x2a>
400eacc7:	052bb6        	bltui	a11, 2, 400eacd0 <__cxa_end_catch+0x30>
400eacca:	090c      	movi.n	a9, 0
400eaccc:	000646        	j	400eace9 <__cxa_end_catch+0x49>
400eaccf:	589800        	ssxp	f9, a8, a0
400eacd2:	00a9d6        	bgez	a9, 400eace0 <__cxa_end_catch+0x40>
400eacd5:	991b      	addi.n	a9, a9, 1
400eacd7:	39ec      	bnez.n	a9, 400eacfe <__cxa_end_catch+0x5e>
400eacd9:	48b8      	l32i.n	a11, a8, 16
400eacdb:	0ab9      	s32i.n	a11, a10, 0
400eacdd:	000746        	j	400eacfe <__cxa_end_catch+0x5e>
400eace0:	ffc992        	addi	a9, a9, -1
400eace3:	00e956        	bnez	a9, 400eacf5 <__cxa_end_catch+0x55>
400eace6:	042892        	l32i	a9, a8, 16
400eace9:	0a99      	s32i.n	a9, a10, 0
400eaceb:	30c8a2        	addi	a10, a8, 48
400eacee:	e9c925        	call8	400d4980 <_Unwind_DeleteException>
400eacf1:	f01d      	retw.n
400eacf3:	660000        	lsi	f0, a0, 0x198
400eacf6:	0509      	s32i.n	a0, a5, 0
400eacf8:	201110        	or	a1, a1, a1
400eacfb:	fff1a5        	call8	400eac14 <std::terminate()>
400eacfe:	5899      	s32i.n	a9, a8, 20
400ead00:	f01d      	retw.n
	...

400ead04 <std::get_new_handler()>:
400ead04:	004136        	entry	a1, 32
400ead07:	977021        	l32r	a2, 400d0ac8 <_flash_cache_start+0xab0>
400ead0a:	0020c0        	memw
400ead0d:	0228      	l32i.n	a2, a2, 0
400ead0f:	0020c0        	memw
400ead12:	f01d      	retw.n

400ead14 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
400ead14:	004136        	entry	a1, 32
400ead17:	976d81        	l32r	a8, 400d0acc <_flash_cache_start+0xab4>
400ead1a:	20a220        	or	a10, a2, a2
400ead1d:	006282        	s32i	a8, a2, 0
400ead20:	ffb3e5        	call8	400ea860 <__cxxabiv1::__class_type_info::~__class_type_info()>
400ead23:	000090        	retw
	...

400ead28 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
400ead28:	004136        	entry	a1, 32
400ead2b:	20a220        	or	a10, a2, a2
400ead2e:	fffe65        	call8	400ead14 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
400ead31:	20a220        	or	a10, a2, a2
400ead34:	ffaba5        	call8	400ea7f0 <operator delete(void*)>
400ead37:	000090        	retw
	...

400ead3c <_ZNKSt9type_infoeqERKS_$isra$0>:
400ead3c:	004136        	entry	a1, 32
400ead3f:	02ad      	mov.n	a10, a2
400ead41:	03bd      	mov.n	a11, a3
400ead43:	120c      	movi.n	a2, 1
400ead45:	191a37        	beq	a10, a3, 400ead62 <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400ead48:	000a92        	l8ui	a9, a10, 0
400ead4b:	a82c      	movi.n	a8, 42
400ead4d:	020c      	movi.n	a2, 0
400ead4f:	0f1987        	beq	a9, a8, 400ead62 <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400ead52:	959f81        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400ead55:	0008e0        	callx8	a8
400ead58:	024d      	mov.n	a4, a2
400ead5a:	180c      	movi.n	a8, 1
400ead5c:	8348a0        	moveqz	a4, a8, a10
400ead5f:	742040        	extui	a2, a4, 0, 8
400ead62:	f01d      	retw.n

400ead64 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
400ead64:	008136        	entry	a1, 64
400ead67:	0122c2        	l32i	a12, a2, 4
400ead6a:	112192        	l32i	a9, a1, 68
400ead6d:	0125b2        	l32i	a11, a5, 4
400ead70:	20acc0        	or	a10, a12, a12
400ead73:	5199      	s32i.n	a9, a1, 20
400ead75:	41c9      	s32i.n	a12, a1, 16
400ead77:	fffc65        	call8	400ead3c <_ZNKSt9type_infoeqERKS_$isra$0>
400ead7a:	0a8d      	mov.n	a8, a10
400ead7c:	5198      	l32i.n	a9, a1, 20
400ead7e:	41c8      	l32i.n	a12, a1, 16
400ead80:	caac      	beqz.n	a10, 400eadb0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x4c>
400ead82:	0969      	s32i.n	a6, a9, 0
400ead84:	1949      	s32i.n	a4, a9, 4
400ead86:	016396        	bltz	a3, 400eada0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
400ead89:	102122        	l32i	a2, a1, 64
400ead8c:	663a      	add.n	a6, a6, a3
400ead8e:	c06260        	sub	a6, a2, a6
400ead91:	670c      	movi.n	a7, 6
400ead93:	120c      	movi.n	a2, 1
400ead95:	937260        	movnez	a7, a2, a6
400ead98:	3979      	s32i.n	a7, a9, 12
400ead9a:	080c      	movi.n	a8, 0
400ead9c:	001306        	j	400eadec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400ead9f:	e27c00        	remu	a7, a12, a0
400eada2:	080c      	movi.n	a8, 0
400eada4:	449327        	bne	a3, a2, 400eadec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eada7:	120c      	movi.n	a2, 1
400eada9:	3929      	s32i.n	a2, a9, 12
400eadab:	000f46        	j	400eadec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eadae:	a20000        	muluh	a0, a0, a0
400eadb1:	a71021        	l32r	a2, 400d49f4 <frame_downheap+0x14>
400eadb4:	b21396        	bltz	a3, 400ea8d9 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x9>
400eadb7:	c00127        	bnone	a1, a2, 400ead7b <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17>
400eadba:	20ac      	beqz.n	a0, 400eade0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x7c>
400eadbc:	046182        	s32i	a8, a1, 16
400eadbf:	5199      	s32i.n	a9, a1, 20
400eadc1:	fff7a5        	call8	400ead3c <_ZNKSt9type_infoeqERKS_$isra$0>
400eadc4:	4188      	l32i.n	a8, a1, 16
400eadc6:	5198      	l32i.n	a9, a1, 20
400eadc8:	eadc      	bnez.n	a10, 400eadea <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x86>
400eadca:	22a8      	l32i.n	a10, a2, 8
400eadcc:	102182        	l32i	a8, a1, 64
400eadcf:	0a28      	l32i.n	a2, a10, 0
400eadd1:	0189      	s32i.n	a8, a1, 0
400eadd3:	1199      	s32i.n	a9, a1, 4
400eadd5:	7228      	l32i.n	a2, a2, 28
400eadd7:	07fd      	mov.n	a15, a7
400eadd9:	06ed      	mov.n	a14, a6
400eaddb:	05dd      	mov.n	a13, a5
400eaddd:	04cd      	mov.n	a12, a4
400eaddf:	03bd      	mov.n	a11, a3
400eade1:	0002e0        	callx8	a2
400eade4:	0a8d      	mov.n	a8, a10
400eade6:	000086        	j	400eadec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eade9:	294900        	lsi	f0, a9, 164
400eadec:	082d      	mov.n	a2, a8
400eadee:	f01d      	retw.n

400eadf0 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
400eadf0:	004136        	entry	a1, 32
400eadf3:	119647        	bne	a6, a4, 400eae08 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x18>
400eadf6:	0125b2        	l32i	a11, a5, 4
400eadf9:	0122a2        	l32i	a10, a2, 4
400eadfc:	fff3e5        	call8	400ead3c <_ZNKSt9type_infoeqERKS_$isra$0>
400eadff:	005a16        	beqz	a10, 400eae08 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x18>
400eae02:	6a0c      	movi.n	a10, 6
400eae04:	000446        	j	400eae19 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x29>
400eae07:	22a800        	orb	b10, b8, b0
400eae0a:	06ed      	mov.n	a14, a6
400eae0c:	0a28      	l32i.n	a2, a10, 0
400eae0e:	05dd      	mov.n	a13, a5
400eae10:	8228      	l32i.n	a2, a2, 32
400eae12:	04cd      	mov.n	a12, a4
400eae14:	03bd      	mov.n	a11, a3
400eae16:	0002e0        	callx8	a2
400eae19:	0a2d      	mov.n	a2, a10
400eae1b:	f01d      	retw.n
400eae1d:	000000        	ill

400eae20 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
400eae20:	004136        	entry	a1, 32
400eae23:	20d550        	or	a13, a5, a5
400eae26:	20c440        	or	a12, a4, a4
400eae29:	20b330        	or	a11, a3, a3
400eae2c:	02ad      	mov.n	a10, a2
400eae2e:	ffa825        	call8	400ea8b0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
400eae31:	dacc      	bnez.n	a10, 400eae42 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x22>
400eae33:	22a8      	l32i.n	a10, a2, 8
400eae35:	05dd      	mov.n	a13, a5
400eae37:	0a28      	l32i.n	a2, a10, 0
400eae39:	04cd      	mov.n	a12, a4
400eae3b:	6228      	l32i.n	a2, a2, 24
400eae3d:	03bd      	mov.n	a11, a3
400eae3f:	0002e0        	callx8	a2
400eae42:	0a2d      	mov.n	a2, a10
400eae44:	f01d      	retw.n
	...

400eae48 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
400eae48:	004136        	entry	a1, 32
400eae4b:	972181        	l32r	a8, 400d0ad0 <_flash_cache_start+0xab8>
400eae4e:	1b0c      	movi.n	a11, 1
400eae50:	08c8      	l32i.n	a12, a8, 0
400eae52:	1898      	l32i.n	a9, a8, 4
400eae54:	01cca2        	addi	a10, a12, 1
400eae57:	013ac7        	bltu	a10, a12, 400eae5c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x14>
400eae5a:	0b0c      	movi.n	a11, 0
400eae5c:	9b9a      	add.n	a9, a11, a9
400eae5e:	08a9      	s32i.n	a10, a8, 0
400eae60:	1899      	s32i.n	a9, a8, 4
400eae62:	971c81        	l32r	a8, 400d0ad4 <_flash_cache_start+0xabc>
400eae65:	1b0c      	movi.n	a11, 1
400eae67:	08c8      	l32i.n	a12, a8, 0
400eae69:	1898      	l32i.n	a9, a8, 4
400eae6b:	ac1b      	addi.n	a10, a12, 1
400eae6d:	013ac7        	bltu	a10, a12, 400eae72 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x2a>
400eae70:	0b0c      	movi.n	a11, 0
400eae72:	9b9a      	add.n	a9, a11, a9
400eae74:	08a9      	s32i.n	a10, a8, 0
400eae76:	1899      	s32i.n	a9, a8, 4
400eae78:	971881        	l32r	a8, 400d0ad8 <_flash_cache_start+0xac0>
400eae7b:	1b0c      	movi.n	a11, 1
400eae7d:	08c8      	l32i.n	a12, a8, 0
400eae7f:	1898      	l32i.n	a9, a8, 4
400eae81:	ac1b      	addi.n	a10, a12, 1
400eae83:	013ac7        	bltu	a10, a12, 400eae88 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x40>
400eae86:	0b0c      	movi.n	a11, 0
400eae88:	9b9a      	add.n	a9, a11, a9
400eae8a:	08a9      	s32i.n	a10, a8, 0
400eae8c:	1899      	s32i.n	a9, a8, 4
400eae8e:	971381        	l32r	a8, 400d0adc <_flash_cache_start+0xac4>
400eae91:	1b0c      	movi.n	a11, 1
400eae93:	08c8      	l32i.n	a12, a8, 0
400eae95:	1898      	l32i.n	a9, a8, 4
400eae97:	ac1b      	addi.n	a10, a12, 1
400eae99:	013ac7        	bltu	a10, a12, 400eae9e <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x56>
400eae9c:	0b0c      	movi.n	a11, 0
400eae9e:	9b9a      	add.n	a9, a11, a9
400eaea0:	08a9      	s32i.n	a10, a8, 0
400eaea2:	1899      	s32i.n	a9, a8, 4
400eaea4:	970f81        	l32r	a8, 400d0ae0 <_flash_cache_start+0xac8>
400eaea7:	1b0c      	movi.n	a11, 1
400eaea9:	08c8      	l32i.n	a12, a8, 0
400eaeab:	1898      	l32i.n	a9, a8, 4
400eaead:	ac1b      	addi.n	a10, a12, 1
400eaeaf:	013ac7        	bltu	a10, a12, 400eaeb4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x6c>
400eaeb2:	0b0c      	movi.n	a11, 0
400eaeb4:	9b9a      	add.n	a9, a11, a9
400eaeb6:	08a9      	s32i.n	a10, a8, 0
400eaeb8:	1899      	s32i.n	a9, a8, 4
400eaeba:	970a81        	l32r	a8, 400d0ae4 <_flash_cache_start+0xacc>
400eaebd:	1b0c      	movi.n	a11, 1
400eaebf:	08c8      	l32i.n	a12, a8, 0
400eaec1:	1898      	l32i.n	a9, a8, 4
400eaec3:	ac1b      	addi.n	a10, a12, 1
400eaec5:	013ac7        	bltu	a10, a12, 400eaeca <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x82>
400eaec8:	0b0c      	movi.n	a11, 0
400eaeca:	9b9a      	add.n	a9, a11, a9
400eaecc:	08a9      	s32i.n	a10, a8, 0
400eaece:	1899      	s32i.n	a9, a8, 4
400eaed0:	970681        	l32r	a8, 400d0ae8 <_flash_cache_start+0xad0>
400eaed3:	1b0c      	movi.n	a11, 1
400eaed5:	08c8      	l32i.n	a12, a8, 0
400eaed7:	1898      	l32i.n	a9, a8, 4
400eaed9:	ac1b      	addi.n	a10, a12, 1
400eaedb:	013ac7        	bltu	a10, a12, 400eaee0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>
400eaede:	0b0c      	movi.n	a11, 0
400eaee0:	9b9a      	add.n	a9, a11, a9
400eaee2:	08a9      	s32i.n	a10, a8, 0
400eaee4:	1899      	s32i.n	a9, a8, 4
400eaee6:	970181        	l32r	a8, 400d0aec <_flash_cache_start+0xad4>
400eaee9:	1b0c      	movi.n	a11, 1
400eaeeb:	08c8      	l32i.n	a12, a8, 0
400eaeed:	1898      	l32i.n	a9, a8, 4
400eaeef:	ac1b      	addi.n	a10, a12, 1
400eaef1:	013ac7        	bltu	a10, a12, 400eaef6 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xae>
400eaef4:	0b0c      	movi.n	a11, 0
400eaef6:	9b9a      	add.n	a9, a11, a9
400eaef8:	08a9      	s32i.n	a10, a8, 0
400eaefa:	1899      	s32i.n	a9, a8, 4
400eaefc:	96fd81        	l32r	a8, 400d0af0 <_flash_cache_start+0xad8>
400eaeff:	1b0c      	movi.n	a11, 1
400eaf01:	08c8      	l32i.n	a12, a8, 0
400eaf03:	1898      	l32i.n	a9, a8, 4
400eaf05:	ac1b      	addi.n	a10, a12, 1
400eaf07:	013ac7        	bltu	a10, a12, 400eaf0c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc4>
400eaf0a:	0b0c      	movi.n	a11, 0
400eaf0c:	9b9a      	add.n	a9, a11, a9
400eaf0e:	08a9      	s32i.n	a10, a8, 0
400eaf10:	1899      	s32i.n	a9, a8, 4
400eaf12:	96f881        	l32r	a8, 400d0af4 <_flash_cache_start+0xadc>
400eaf15:	1b0c      	movi.n	a11, 1
400eaf17:	08c8      	l32i.n	a12, a8, 0
400eaf19:	1898      	l32i.n	a9, a8, 4
400eaf1b:	ac1b      	addi.n	a10, a12, 1
400eaf1d:	013ac7        	bltu	a10, a12, 400eaf22 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xda>
400eaf20:	0b0c      	movi.n	a11, 0
400eaf22:	9b9a      	add.n	a9, a11, a9
400eaf24:	08a9      	s32i.n	a10, a8, 0
400eaf26:	1899      	s32i.n	a9, a8, 4
400eaf28:	96f481        	l32r	a8, 400d0af8 <_flash_cache_start+0xae0>
400eaf2b:	1b0c      	movi.n	a11, 1
400eaf2d:	08c8      	l32i.n	a12, a8, 0
400eaf2f:	1898      	l32i.n	a9, a8, 4
400eaf31:	ac1b      	addi.n	a10, a12, 1
400eaf33:	013ac7        	bltu	a10, a12, 400eaf38 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xf0>
400eaf36:	0b0c      	movi.n	a11, 0
400eaf38:	9b9a      	add.n	a9, a11, a9
400eaf3a:	08a9      	s32i.n	a10, a8, 0
400eaf3c:	1899      	s32i.n	a9, a8, 4
400eaf3e:	96ef81        	l32r	a8, 400d0afc <_flash_cache_start+0xae4>
400eaf41:	1b0c      	movi.n	a11, 1
400eaf43:	08c8      	l32i.n	a12, a8, 0
400eaf45:	1898      	l32i.n	a9, a8, 4
400eaf47:	ac1b      	addi.n	a10, a12, 1
400eaf49:	013ac7        	bltu	a10, a12, 400eaf4e <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x106>
400eaf4c:	0b0c      	movi.n	a11, 0
400eaf4e:	9b9a      	add.n	a9, a11, a9
400eaf50:	08a9      	s32i.n	a10, a8, 0
400eaf52:	1899      	s32i.n	a9, a8, 4
400eaf54:	f01d      	retw.n
	...

400eaf58 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
400eaf58:	004136        	entry	a1, 32
400eaf5b:	96e981        	l32r	a8, 400d0b00 <_flash_cache_start+0xae8>
400eaf5e:	1b0c      	movi.n	a11, 1
400eaf60:	08c8      	l32i.n	a12, a8, 0
400eaf62:	1898      	l32i.n	a9, a8, 4
400eaf64:	01cca2        	addi	a10, a12, 1
400eaf67:	013ac7        	bltu	a10, a12, 400eaf6c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x14>
400eaf6a:	0b0c      	movi.n	a11, 0
400eaf6c:	9b9a      	add.n	a9, a11, a9
400eaf6e:	08a9      	s32i.n	a10, a8, 0
400eaf70:	1899      	s32i.n	a9, a8, 4
400eaf72:	96e481        	l32r	a8, 400d0b04 <_flash_cache_start+0xaec>
400eaf75:	1b0c      	movi.n	a11, 1
400eaf77:	08c8      	l32i.n	a12, a8, 0
400eaf79:	1898      	l32i.n	a9, a8, 4
400eaf7b:	ac1b      	addi.n	a10, a12, 1
400eaf7d:	013ac7        	bltu	a10, a12, 400eaf82 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x2a>
400eaf80:	0b0c      	movi.n	a11, 0
400eaf82:	9b9a      	add.n	a9, a11, a9
400eaf84:	08a9      	s32i.n	a10, a8, 0
400eaf86:	1899      	s32i.n	a9, a8, 4
400eaf88:	96e081        	l32r	a8, 400d0b08 <_flash_cache_start+0xaf0>
400eaf8b:	1b0c      	movi.n	a11, 1
400eaf8d:	08c8      	l32i.n	a12, a8, 0
400eaf8f:	1898      	l32i.n	a9, a8, 4
400eaf91:	ac1b      	addi.n	a10, a12, 1
400eaf93:	013ac7        	bltu	a10, a12, 400eaf98 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x40>
400eaf96:	0b0c      	movi.n	a11, 0
400eaf98:	9b9a      	add.n	a9, a11, a9
400eaf9a:	08a9      	s32i.n	a10, a8, 0
400eaf9c:	1899      	s32i.n	a9, a8, 4
400eaf9e:	96db81        	l32r	a8, 400d0b0c <_flash_cache_start+0xaf4>
400eafa1:	1b0c      	movi.n	a11, 1
400eafa3:	08c8      	l32i.n	a12, a8, 0
400eafa5:	1898      	l32i.n	a9, a8, 4
400eafa7:	ac1b      	addi.n	a10, a12, 1
400eafa9:	013ac7        	bltu	a10, a12, 400eafae <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x56>
400eafac:	0b0c      	movi.n	a11, 0
400eafae:	9b9a      	add.n	a9, a11, a9
400eafb0:	08a9      	s32i.n	a10, a8, 0
400eafb2:	1899      	s32i.n	a9, a8, 4
400eafb4:	96d781        	l32r	a8, 400d0b10 <_flash_cache_start+0xaf8>
400eafb7:	1b0c      	movi.n	a11, 1
400eafb9:	08c8      	l32i.n	a12, a8, 0
400eafbb:	1898      	l32i.n	a9, a8, 4
400eafbd:	ac1b      	addi.n	a10, a12, 1
400eafbf:	013ac7        	bltu	a10, a12, 400eafc4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x6c>
400eafc2:	0b0c      	movi.n	a11, 0
400eafc4:	9b9a      	add.n	a9, a11, a9
400eafc6:	08a9      	s32i.n	a10, a8, 0
400eafc8:	1899      	s32i.n	a9, a8, 4
400eafca:	96d281        	l32r	a8, 400d0b14 <_flash_cache_start+0xafc>
400eafcd:	1b0c      	movi.n	a11, 1
400eafcf:	08c8      	l32i.n	a12, a8, 0
400eafd1:	1898      	l32i.n	a9, a8, 4
400eafd3:	ac1b      	addi.n	a10, a12, 1
400eafd5:	013ac7        	bltu	a10, a12, 400eafda <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x82>
400eafd8:	0b0c      	movi.n	a11, 0
400eafda:	9b9a      	add.n	a9, a11, a9
400eafdc:	08a9      	s32i.n	a10, a8, 0
400eafde:	1899      	s32i.n	a9, a8, 4
400eafe0:	96ce81        	l32r	a8, 400d0b18 <_flash_cache_start+0xb00>
400eafe3:	1b0c      	movi.n	a11, 1
400eafe5:	08c8      	l32i.n	a12, a8, 0
400eafe7:	1898      	l32i.n	a9, a8, 4
400eafe9:	ac1b      	addi.n	a10, a12, 1
400eafeb:	013ac7        	bltu	a10, a12, 400eaff0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>
400eafee:	0b0c      	movi.n	a11, 0
400eaff0:	9b9a      	add.n	a9, a11, a9
400eaff2:	08a9      	s32i.n	a10, a8, 0
400eaff4:	1899      	s32i.n	a9, a8, 4
400eaff6:	96c981        	l32r	a8, 400d0b1c <_flash_cache_start+0xb04>
400eaff9:	1b0c      	movi.n	a11, 1
400eaffb:	08c8      	l32i.n	a12, a8, 0
400eaffd:	1898      	l32i.n	a9, a8, 4
400eafff:	ac1b      	addi.n	a10, a12, 1
400eb001:	013ac7        	bltu	a10, a12, 400eb006 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xae>
400eb004:	0b0c      	movi.n	a11, 0
400eb006:	9b9a      	add.n	a9, a11, a9
400eb008:	08a9      	s32i.n	a10, a8, 0
400eb00a:	1899      	s32i.n	a9, a8, 4
400eb00c:	96c581        	l32r	a8, 400d0b20 <_flash_cache_start+0xb08>
400eb00f:	1b0c      	movi.n	a11, 1
400eb011:	08c8      	l32i.n	a12, a8, 0
400eb013:	1898      	l32i.n	a9, a8, 4
400eb015:	ac1b      	addi.n	a10, a12, 1
400eb017:	013ac7        	bltu	a10, a12, 400eb01c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc4>
400eb01a:	0b0c      	movi.n	a11, 0
400eb01c:	9b9a      	add.n	a9, a11, a9
400eb01e:	08a9      	s32i.n	a10, a8, 0
400eb020:	1899      	s32i.n	a9, a8, 4
400eb022:	96c081        	l32r	a8, 400d0b24 <_flash_cache_start+0xb0c>
400eb025:	1b0c      	movi.n	a11, 1
400eb027:	08c8      	l32i.n	a12, a8, 0
400eb029:	1898      	l32i.n	a9, a8, 4
400eb02b:	ac1b      	addi.n	a10, a12, 1
400eb02d:	013ac7        	bltu	a10, a12, 400eb032 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xda>
400eb030:	0b0c      	movi.n	a11, 0
400eb032:	9b9a      	add.n	a9, a11, a9
400eb034:	08a9      	s32i.n	a10, a8, 0
400eb036:	1899      	s32i.n	a9, a8, 4
400eb038:	96bc81        	l32r	a8, 400d0b28 <_flash_cache_start+0xb10>
400eb03b:	1b0c      	movi.n	a11, 1
400eb03d:	08c8      	l32i.n	a12, a8, 0
400eb03f:	1898      	l32i.n	a9, a8, 4
400eb041:	ac1b      	addi.n	a10, a12, 1
400eb043:	013ac7        	bltu	a10, a12, 400eb048 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xf0>
400eb046:	0b0c      	movi.n	a11, 0
400eb048:	9b9a      	add.n	a9, a11, a9
400eb04a:	08a9      	s32i.n	a10, a8, 0
400eb04c:	1899      	s32i.n	a9, a8, 4
400eb04e:	96b781        	l32r	a8, 400d0b2c <_flash_cache_start+0xb14>
400eb051:	1b0c      	movi.n	a11, 1
400eb053:	08c8      	l32i.n	a12, a8, 0
400eb055:	1898      	l32i.n	a9, a8, 4
400eb057:	ac1b      	addi.n	a10, a12, 1
400eb059:	013ac7        	bltu	a10, a12, 400eb05e <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x106>
400eb05c:	0b0c      	movi.n	a11, 0
400eb05e:	9b9a      	add.n	a9, a11, a9
400eb060:	08a9      	s32i.n	a10, a8, 0
400eb062:	1899      	s32i.n	a9, a8, 4
400eb064:	f01d      	retw.n
	...

400eb068 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
400eb068:	004136        	entry	a1, 32
400eb06b:	96b181        	l32r	a8, 400d0b30 <_flash_cache_start+0xb18>
400eb06e:	1b0c      	movi.n	a11, 1
400eb070:	08c8      	l32i.n	a12, a8, 0
400eb072:	1898      	l32i.n	a9, a8, 4
400eb074:	01cca2        	addi	a10, a12, 1
400eb077:	013ac7        	bltu	a10, a12, 400eb07c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x14>
400eb07a:	0b0c      	movi.n	a11, 0
400eb07c:	9b9a      	add.n	a9, a11, a9
400eb07e:	08a9      	s32i.n	a10, a8, 0
400eb080:	1899      	s32i.n	a9, a8, 4
400eb082:	96ac81        	l32r	a8, 400d0b34 <_flash_cache_start+0xb1c>
400eb085:	1b0c      	movi.n	a11, 1
400eb087:	08c8      	l32i.n	a12, a8, 0
400eb089:	1898      	l32i.n	a9, a8, 4
400eb08b:	ac1b      	addi.n	a10, a12, 1
400eb08d:	013ac7        	bltu	a10, a12, 400eb092 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x2a>
400eb090:	0b0c      	movi.n	a11, 0
400eb092:	9b9a      	add.n	a9, a11, a9
400eb094:	08a9      	s32i.n	a10, a8, 0
400eb096:	1899      	s32i.n	a9, a8, 4
400eb098:	96a881        	l32r	a8, 400d0b38 <_flash_cache_start+0xb20>
400eb09b:	1b0c      	movi.n	a11, 1
400eb09d:	08c8      	l32i.n	a12, a8, 0
400eb09f:	1898      	l32i.n	a9, a8, 4
400eb0a1:	ac1b      	addi.n	a10, a12, 1
400eb0a3:	013ac7        	bltu	a10, a12, 400eb0a8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x40>
400eb0a6:	0b0c      	movi.n	a11, 0
400eb0a8:	9b9a      	add.n	a9, a11, a9
400eb0aa:	08a9      	s32i.n	a10, a8, 0
400eb0ac:	1899      	s32i.n	a9, a8, 4
400eb0ae:	96a381        	l32r	a8, 400d0b3c <_flash_cache_start+0xb24>
400eb0b1:	1b0c      	movi.n	a11, 1
400eb0b3:	08c8      	l32i.n	a12, a8, 0
400eb0b5:	1898      	l32i.n	a9, a8, 4
400eb0b7:	ac1b      	addi.n	a10, a12, 1
400eb0b9:	013ac7        	bltu	a10, a12, 400eb0be <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x56>
400eb0bc:	0b0c      	movi.n	a11, 0
400eb0be:	9b9a      	add.n	a9, a11, a9
400eb0c0:	08a9      	s32i.n	a10, a8, 0
400eb0c2:	1899      	s32i.n	a9, a8, 4
400eb0c4:	969f81        	l32r	a8, 400d0b40 <_flash_cache_start+0xb28>
400eb0c7:	1b0c      	movi.n	a11, 1
400eb0c9:	08c8      	l32i.n	a12, a8, 0
400eb0cb:	1898      	l32i.n	a9, a8, 4
400eb0cd:	ac1b      	addi.n	a10, a12, 1
400eb0cf:	013ac7        	bltu	a10, a12, 400eb0d4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>
400eb0d2:	0b0c      	movi.n	a11, 0
400eb0d4:	9b9a      	add.n	a9, a11, a9
400eb0d6:	08a9      	s32i.n	a10, a8, 0
400eb0d8:	1899      	s32i.n	a9, a8, 4
400eb0da:	969a81        	l32r	a8, 400d0b44 <_flash_cache_start+0xb2c>
400eb0dd:	1b0c      	movi.n	a11, 1
400eb0df:	08c8      	l32i.n	a12, a8, 0
400eb0e1:	1898      	l32i.n	a9, a8, 4
400eb0e3:	ac1b      	addi.n	a10, a12, 1
400eb0e5:	013ac7        	bltu	a10, a12, 400eb0ea <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x82>
400eb0e8:	0b0c      	movi.n	a11, 0
400eb0ea:	9b9a      	add.n	a9, a11, a9
400eb0ec:	08a9      	s32i.n	a10, a8, 0
400eb0ee:	1899      	s32i.n	a9, a8, 4
400eb0f0:	969681        	l32r	a8, 400d0b48 <_flash_cache_start+0xb30>
400eb0f3:	1b0c      	movi.n	a11, 1
400eb0f5:	08c8      	l32i.n	a12, a8, 0
400eb0f7:	1898      	l32i.n	a9, a8, 4
400eb0f9:	ac1b      	addi.n	a10, a12, 1
400eb0fb:	013ac7        	bltu	a10, a12, 400eb100 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x98>
400eb0fe:	0b0c      	movi.n	a11, 0
400eb100:	9b9a      	add.n	a9, a11, a9
400eb102:	08a9      	s32i.n	a10, a8, 0
400eb104:	1899      	s32i.n	a9, a8, 4
400eb106:	969181        	l32r	a8, 400d0b4c <_flash_cache_start+0xb34>
400eb109:	1b0c      	movi.n	a11, 1
400eb10b:	08c8      	l32i.n	a12, a8, 0
400eb10d:	1898      	l32i.n	a9, a8, 4
400eb10f:	ac1b      	addi.n	a10, a12, 1
400eb111:	013ac7        	bltu	a10, a12, 400eb116 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0xae>
400eb114:	0b0c      	movi.n	a11, 0
400eb116:	9b9a      	add.n	a9, a11, a9
400eb118:	08a9      	s32i.n	a10, a8, 0
400eb11a:	1899      	s32i.n	a9, a8, 4
400eb11c:	f01d      	retw.n
	...

400eb120 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
400eb120:	004136        	entry	a1, 32
400eb123:	968b81        	l32r	a8, 400d0b50 <_flash_cache_start+0xb38>
400eb126:	1b0c      	movi.n	a11, 1
400eb128:	08c8      	l32i.n	a12, a8, 0
400eb12a:	1898      	l32i.n	a9, a8, 4
400eb12c:	01cca2        	addi	a10, a12, 1
400eb12f:	013ac7        	bltu	a10, a12, 400eb134 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x14>
400eb132:	0b0c      	movi.n	a11, 0
400eb134:	9b9a      	add.n	a9, a11, a9
400eb136:	08a9      	s32i.n	a10, a8, 0
400eb138:	1899      	s32i.n	a9, a8, 4
400eb13a:	968681        	l32r	a8, 400d0b54 <_flash_cache_start+0xb3c>
400eb13d:	1b0c      	movi.n	a11, 1
400eb13f:	08c8      	l32i.n	a12, a8, 0
400eb141:	1898      	l32i.n	a9, a8, 4
400eb143:	ac1b      	addi.n	a10, a12, 1
400eb145:	013ac7        	bltu	a10, a12, 400eb14a <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x2a>
400eb148:	0b0c      	movi.n	a11, 0
400eb14a:	9b9a      	add.n	a9, a11, a9
400eb14c:	08a9      	s32i.n	a10, a8, 0
400eb14e:	1899      	s32i.n	a9, a8, 4
400eb150:	968281        	l32r	a8, 400d0b58 <_flash_cache_start+0xb40>
400eb153:	1b0c      	movi.n	a11, 1
400eb155:	08c8      	l32i.n	a12, a8, 0
400eb157:	1898      	l32i.n	a9, a8, 4
400eb159:	ac1b      	addi.n	a10, a12, 1
400eb15b:	013ac7        	bltu	a10, a12, 400eb160 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x40>
400eb15e:	0b0c      	movi.n	a11, 0
400eb160:	9b9a      	add.n	a9, a11, a9
400eb162:	08a9      	s32i.n	a10, a8, 0
400eb164:	1899      	s32i.n	a9, a8, 4
400eb166:	967d81        	l32r	a8, 400d0b5c <_flash_cache_start+0xb44>
400eb169:	1b0c      	movi.n	a11, 1
400eb16b:	08c8      	l32i.n	a12, a8, 0
400eb16d:	1898      	l32i.n	a9, a8, 4
400eb16f:	ac1b      	addi.n	a10, a12, 1
400eb171:	013ac7        	bltu	a10, a12, 400eb176 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x56>
400eb174:	0b0c      	movi.n	a11, 0
400eb176:	9b9a      	add.n	a9, a11, a9
400eb178:	08a9      	s32i.n	a10, a8, 0
400eb17a:	1899      	s32i.n	a9, a8, 4
400eb17c:	967981        	l32r	a8, 400d0b60 <_flash_cache_start+0xb48>
400eb17f:	1b0c      	movi.n	a11, 1
400eb181:	08c8      	l32i.n	a12, a8, 0
400eb183:	1898      	l32i.n	a9, a8, 4
400eb185:	ac1b      	addi.n	a10, a12, 1
400eb187:	013ac7        	bltu	a10, a12, 400eb18c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>
400eb18a:	0b0c      	movi.n	a11, 0
400eb18c:	9b9a      	add.n	a9, a11, a9
400eb18e:	08a9      	s32i.n	a10, a8, 0
400eb190:	1899      	s32i.n	a9, a8, 4
400eb192:	967481        	l32r	a8, 400d0b64 <_flash_cache_start+0xb4c>
400eb195:	1b0c      	movi.n	a11, 1
400eb197:	08c8      	l32i.n	a12, a8, 0
400eb199:	1898      	l32i.n	a9, a8, 4
400eb19b:	ac1b      	addi.n	a10, a12, 1
400eb19d:	013ac7        	bltu	a10, a12, 400eb1a2 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x82>
400eb1a0:	0b0c      	movi.n	a11, 0
400eb1a2:	9b9a      	add.n	a9, a11, a9
400eb1a4:	08a9      	s32i.n	a10, a8, 0
400eb1a6:	1899      	s32i.n	a9, a8, 4
400eb1a8:	967081        	l32r	a8, 400d0b68 <_flash_cache_start+0xb50>
400eb1ab:	1b0c      	movi.n	a11, 1
400eb1ad:	08c8      	l32i.n	a12, a8, 0
400eb1af:	1898      	l32i.n	a9, a8, 4
400eb1b1:	ac1b      	addi.n	a10, a12, 1
400eb1b3:	013ac7        	bltu	a10, a12, 400eb1b8 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x98>
400eb1b6:	0b0c      	movi.n	a11, 0
400eb1b8:	9b9a      	add.n	a9, a11, a9
400eb1ba:	08a9      	s32i.n	a10, a8, 0
400eb1bc:	1899      	s32i.n	a9, a8, 4
400eb1be:	966b81        	l32r	a8, 400d0b6c <_flash_cache_start+0xb54>
400eb1c1:	1b0c      	movi.n	a11, 1
400eb1c3:	08c8      	l32i.n	a12, a8, 0
400eb1c5:	1898      	l32i.n	a9, a8, 4
400eb1c7:	ac1b      	addi.n	a10, a12, 1
400eb1c9:	013ac7        	bltu	a10, a12, 400eb1ce <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0xae>
400eb1cc:	0b0c      	movi.n	a11, 0
400eb1ce:	9b9a      	add.n	a9, a11, a9
400eb1d0:	08a9      	s32i.n	a10, a8, 0
400eb1d2:	1899      	s32i.n	a9, a8, 4
400eb1d4:	f01d      	retw.n
	...

400eb1d8 <loopTask(void*)>:
#if CONFIG_AUTOSTART_ARDUINO

bool loopTaskWDTEnabled;

void loopTask(void *pvParameters)
{
400eb1d8:	006136        	entry	a1, 48
400eb1db:	207110        	or	a7, a1, a1
400eb1de:	0cc732        	addi	a3, a7, 12
400eb1e1:	0329      	s32i.n	a2, a3, 0
    setup();
400eb1e3:	e5ac65        	call8	400d0ca8 <setup()>
    for(;;) {
        if(loopTaskWDTEnabled){
400eb1e6:	966221        	l32r	a2, 400d0b70 <_flash_cache_start+0xb58>
400eb1e9:	000222        	l8ui	a2, a2, 0
400eb1ec:	128c      	beqz.n	a2, 400eb1f1 <loopTask(void*)+0x19>
            esp_task_wdt_reset();
400eb1ee:	eb8be5        	call8	400d6aac <esp_task_wdt_reset>
        }
        loop();
400eb1f1:	00ae65        	call8	400ebcd8 <loop()>
    for(;;) {
400eb1f4:	fffb86        	j	400eb1e6 <loopTask(void*)+0xe>
	...

400eb1f8 <app_main>:
    }
}

extern "C" void app_main()
{
400eb1f8:	006136        	entry	a1, 48
400eb1fb:	207110        	or	a7, a1, a1
    loopTaskWDTEnabled = false;
400eb1fe:	965c21        	l32r	a2, 400d0b70 <_flash_cache_start+0xb58>
400eb201:	00a032        	movi	a3, 0
400eb204:	004232        	s8i	a3, a2, 0
    initArduino();
400eb207:	0012a5        	call8	400eb330 <initArduino>
    xTaskCreateUniversal(loopTask, "loopTask", 8192, NULL, 1, &loopTaskHandle, CONFIG_ARDUINO_RUNNING_CORE);
400eb20a:	965a51        	l32r	a5, 400d0b74 <_flash_cache_start+0xb5c>
400eb20d:	94cc41        	l32r	a4, 400d0540 <_flash_cache_start+0x528>
400eb210:	965a31        	l32r	a3, 400d0b78 <_flash_cache_start+0xb60>
400eb213:	965a21        	l32r	a2, 400d0b7c <_flash_cache_start+0xb64>
400eb216:	01a062        	movi	a6, 1
400eb219:	0169      	s32i.n	a6, a1, 0
400eb21b:	05fd      	mov.n	a15, a5
400eb21d:	1e0c      	movi.n	a14, 1
400eb21f:	0d0c      	movi.n	a13, 0
400eb221:	04cd      	mov.n	a12, a4
400eb223:	03bd      	mov.n	a11, a3
400eb225:	02ad      	mov.n	a10, a2
400eb227:	000825        	call8	400eb2a8 <xTaskCreateUniversal>
}
400eb22a:	f03d      	nop.n
400eb22c:	f01d      	retw.n
	...

400eb230 <__static_initialization_and_destruction_0(int, int)>:
400eb230:	006136        	entry	a1, 48
400eb233:	207110        	or	a7, a1, a1
400eb236:	0cc742        	addi	a4, a7, 12
400eb239:	006422        	s32i	a2, a4, 0
400eb23c:	278b      	addi.n	a2, a7, 8
400eb23e:	0239      	s32i.n	a3, a2, 0
400eb240:	27cb      	addi.n	a2, a7, 12
400eb242:	0228      	l32i.n	a2, a2, 0
400eb244:	191266        	bnei	a2, 1, 400eb261 <__static_initialization_and_destruction_0(int, int)+0x31>
400eb247:	278b      	addi.n	a2, a7, 8
400eb249:	0238      	l32i.n	a3, a2, 0
400eb24b:	938921        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb24e:	0f9327        	bne	a3, a2, 400eb261 <__static_initialization_and_destruction_0(int, int)+0x31>
400eb251:	964b21        	l32r	a2, 400d0b80 <_flash_cache_start+0xb68>
400eb254:	0e0c      	movi.n	a14, 0
400eb256:	0d0c      	movi.n	a13, 0
400eb258:	0c0c      	movi.n	a12, 0
400eb25a:	0b0c      	movi.n	a11, 0
400eb25c:	02ad      	mov.n	a10, a2
400eb25e:	e857a5        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400eb261:	0cc722        	addi	a2, a7, 12
400eb264:	002222        	l32i	a2, a2, 0
400eb267:	011256        	bnez	a2, 400eb27c <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb26a:	278b      	addi.n	a2, a7, 8
400eb26c:	0238      	l32i.n	a3, a2, 0
400eb26e:	938021        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb271:	079327        	bne	a3, a2, 400eb27c <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb274:	964321        	l32r	a2, 400d0b80 <_flash_cache_start+0xb68>
400eb277:	02ad      	mov.n	a10, a2
400eb279:	e59e65        	call8	400d0c60 <IPAddress::~IPAddress()>
400eb27c:	f03d      	nop.n
400eb27e:	f01d      	retw.n

400eb280 <_GLOBAL__sub_I_loopTaskHandle>:
400eb280:	004136        	entry	a1, 32
400eb283:	207110        	or	a7, a1, a1
400eb286:	937a21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb289:	20b220        	or	a11, a2, a2
400eb28c:	01a0a2        	movi	a10, 1
400eb28f:	fffa25        	call8	400eb230 <__static_initialization_and_destruction_0(int, int)>
400eb292:	f01d      	retw.n

400eb294 <_GLOBAL__sub_D_loopTaskHandle>:
400eb294:	004136        	entry	a1, 32
400eb297:	207110        	or	a7, a1, a1
400eb29a:	937521        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb29d:	20b220        	or	a11, a2, a2
400eb2a0:	00a0a2        	movi	a10, 0
400eb2a3:	fff8e5        	call8	400eb230 <__static_initialization_and_destruction_0(int, int)>
400eb2a6:	f01d      	retw.n

400eb2a8 <xTaskCreateUniversal>:
                        const BaseType_t xCoreID ){
400eb2a8:	00a136        	entry	a1, 80
400eb2ab:	208770        	or	a8, a7, a7
400eb2ae:	207110        	or	a7, a1, a1
400eb2b1:	2cc792        	addi	a9, a7, 44
400eb2b4:	006922        	s32i	a2, a9, 0
400eb2b7:	28c722        	addi	a2, a7, 40
400eb2ba:	0239      	s32i.n	a3, a2, 0
400eb2bc:	24c722        	addi	a2, a7, 36
400eb2bf:	0249      	s32i.n	a4, a2, 0
400eb2c1:	20c722        	addi	a2, a7, 32
400eb2c4:	0259      	s32i.n	a5, a2, 0
400eb2c6:	1cc722        	addi	a2, a7, 28
400eb2c9:	0269      	s32i.n	a6, a2, 0
400eb2cb:	18c722        	addi	a2, a7, 24
400eb2ce:	0289      	s32i.n	a8, a2, 0
    if(xCoreID >= 0 && xCoreID < 2) {
400eb2d0:	142722        	l32i	a2, a7, 80
400eb2d3:	031296        	bltz	a2, 400eb308 <xTaskCreateUniversal+0x60>
400eb2d6:	142722        	l32i	a2, a7, 80
400eb2d9:	2b22e6        	bgei	a2, 2, 400eb308 <xTaskCreateUniversal+0x60>
        return xTaskCreatePinnedToCore(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, xCoreID);
400eb2dc:	18c782        	addi	a8, a7, 24
400eb2df:	1cc762        	addi	a6, a7, 28
400eb2e2:	20c752        	addi	a5, a7, 32
400eb2e5:	24c742        	addi	a4, a7, 36
400eb2e8:	28c732        	addi	a3, a7, 40
400eb2eb:	2cc722        	addi	a2, a7, 44
400eb2ee:	142792        	l32i	a9, a7, 80
400eb2f1:	0199      	s32i.n	a9, a1, 0
400eb2f3:	08f8      	l32i.n	a15, a8, 0
400eb2f5:	06e8      	l32i.n	a14, a6, 0
400eb2f7:	05d8      	l32i.n	a13, a5, 0
400eb2f9:	04c8      	l32i.n	a12, a4, 0
400eb2fb:	03b8      	l32i.n	a11, a3, 0
400eb2fd:	02a8      	l32i.n	a10, a2, 0
400eb2ff:	9db365        	call8	40088e34 <xTaskCreatePinnedToCore>
400eb302:	0a2d      	mov.n	a2, a10
400eb304:	000986        	j	400eb32e <xTaskCreateUniversal+0x86>
400eb307:	c78200        	lsi	f0, a2, 0x31c
    return xTaskCreate(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask);
400eb30a:	6218      	l32i.n	a1, a2, 24
400eb30c:	521cc7        	beq	a12, a12, 400eb362 <initArduino+0x32>
400eb30f:	4220c7        	blt	a0, a12, 400eb355 <initArduino+0x25>
400eb312:	3224c7        	blt	a4, a12, 400eb348 <initArduino+0x18>
400eb315:	2228c7        	blt	a8, a12, 400eb33b <initArduino+0xb>
400eb318:	f22cc7        	blt	a12, a12, 400eb30e <xTaskCreateUniversal+0x66>
400eb31b:	0028      	l32i.n	a2, a0, 0
400eb31d:	0026e2        	l32i	a14, a6, 0
400eb320:	0025d2        	l32i	a13, a5, 0
400eb323:	04c8      	l32i.n	a12, a4, 0
400eb325:	03b8      	l32i.n	a11, a3, 0
400eb327:	02a8      	l32i.n	a10, a2, 0
400eb329:	9b91a5        	call8	40086c44 <xTaskCreate>
400eb32c:	0a2d      	mov.n	a2, a10
}
400eb32e:	f01d      	retw.n

400eb330 <initArduino>:
{
400eb330:	006136        	entry	a1, 48
400eb333:	017d      	mov.n	a7, a1
    setCpuFrequencyMhz(F_CPU/1000000);
400eb335:	f0a0a2        	movi	a10, 240
400eb338:	003265        	call8	400eb660 <setCpuFrequencyMhz>
    esp_log_level_set("*", CONFIG_LOG_DEFAULT_LEVEL);
400eb33b:	961221        	l32r	a2, 400d0b84 <_flash_cache_start+0xb6c>
400eb33e:	1b0c      	movi.n	a11, 1
400eb340:	02ad      	mov.n	a10, a2
400eb342:	ef1fa5        	call8	400da53c <esp_log_level_set>
    esp_err_t err = nvs_flash_init();
400eb345:	ec04e5        	call8	400d7394 <nvs_flash_init>
400eb348:	0a3d      	mov.n	a3, a10
400eb34a:	278b      	addi.n	a2, a7, 8
400eb34c:	0239      	s32i.n	a3, a2, 0
    if(err == ESP_ERR_NVS_NO_FREE_PAGES){
400eb34e:	278b      	addi.n	a2, a7, 8
400eb350:	0238      	l32i.n	a3, a2, 0
400eb352:	944a21        	l32r	a2, 400d047c <_flash_cache_start+0x464>
400eb355:	5d9327        	bne	a3, a2, 400eb3b6 <initArduino+0x86>
        const esp_partition_t* partition = esp_partition_find_first(ESP_PARTITION_TYPE_DATA, ESP_PARTITION_SUBTYPE_DATA_NVS, NULL);
400eb358:	0c0c      	movi.n	a12, 0
400eb35a:	2b0c      	movi.n	a11, 2
400eb35c:	1a0c      	movi.n	a10, 1
400eb35e:	fec1e5        	call8	400e9f7c <esp_partition_find_first>
400eb361:	0a3d      	mov.n	a3, a10
400eb363:	27cb      	addi.n	a2, a7, 12
400eb365:	0239      	s32i.n	a3, a2, 0
        if (partition != NULL) {
400eb367:	27cb      	addi.n	a2, a7, 12
400eb369:	0228      	l32i.n	a2, a2, 0
400eb36b:	047216        	beqz	a2, 400eb3b6 <initArduino+0x86>
            err = esp_partition_erase_range(partition, 0, partition->size);
400eb36e:	27cb      	addi.n	a2, a7, 12
400eb370:	0228      	l32i.n	a2, a2, 0
400eb372:	3238      	l32i.n	a3, a2, 12
400eb374:	27cb      	addi.n	a2, a7, 12
400eb376:	03cd      	mov.n	a12, a3
400eb378:	0b0c      	movi.n	a11, 0
400eb37a:	02a8      	l32i.n	a10, a2, 0
400eb37c:	fec225        	call8	400e9fa0 <esp_partition_erase_range>
400eb37f:	0a3d      	mov.n	a3, a10
400eb381:	278b      	addi.n	a2, a7, 8
400eb383:	0239      	s32i.n	a3, a2, 0
            if(!err){
400eb385:	278b      	addi.n	a2, a7, 8
400eb387:	0228      	l32i.n	a2, a2, 0
400eb389:	c2cc      	bnez.n	a2, 400eb399 <initArduino+0x69>
                err = nvs_flash_init();
400eb38b:	ec00a5        	call8	400d7394 <nvs_flash_init>
400eb38e:	0a3d      	mov.n	a3, a10
400eb390:	278b      	addi.n	a2, a7, 8
400eb392:	0239      	s32i.n	a3, a2, 0
400eb394:	000786        	j	400eb3b6 <initArduino+0x86>
400eb397:	210000        	srai	a0, a0, 0
                log_e("Failed to format the broken NVS partition!");
400eb39a:	95fb      	addi.n	a9, a5, 15
400eb39c:	20a220        	or	a10, a2, a2
400eb39f:	9b9925        	call8	40086d30 <pathToFileName>
400eb3a2:	0a3d      	mov.n	a3, a10
400eb3a4:	95fa41        	l32r	a4, 400d0b8c <_flash_cache_start+0xb74>
400eb3a7:	95fa21        	l32r	a2, 400d0b90 <_flash_cache_start+0xb78>
400eb3aa:	04dd      	mov.n	a13, a4
400eb3ac:	d3a0c2        	movi	a12, 211
400eb3af:	03bd      	mov.n	a11, a3
400eb3b1:	02ad      	mov.n	a10, a2
400eb3b3:	0004e5        	call8	400eb400 <log_printf>
    if(err) {
400eb3b6:	278b      	addi.n	a2, a7, 8
400eb3b8:	0228      	l32i.n	a2, a2, 0
400eb3ba:	e29c      	beqz.n	a2, 400eb3dc <initArduino+0xac>
        log_e("Failed to initialize NVS! Error: %u", err);
400eb3bc:	95f321        	l32r	a2, 400d0b88 <_flash_cache_start+0xb70>
400eb3bf:	02ad      	mov.n	a10, a2
400eb3c1:	9b96e5        	call8	40086d30 <pathToFileName>
400eb3c4:	0a3d      	mov.n	a3, a10
400eb3c6:	578b      	addi.n	a5, a7, 8
400eb3c8:	95f141        	l32r	a4, 400d0b8c <_flash_cache_start+0xb74>
400eb3cb:	95f221        	l32r	a2, 400d0b94 <_flash_cache_start+0xb7c>
400eb3ce:	05e8      	l32i.n	a14, a5, 0
400eb3d0:	04dd      	mov.n	a13, a4
400eb3d2:	d8a0c2        	movi	a12, 216
400eb3d5:	03bd      	mov.n	a11, a3
400eb3d7:	02ad      	mov.n	a10, a2
400eb3d9:	000265        	call8	400eb400 <log_printf>
    if(!btInUse()){
400eb3dc:	010ea5        	call8	400ec4c8 <btInUse>
400eb3df:	202aa0        	or	a2, a10, a10
400eb3e2:	203220        	or	a3, a2, a2
400eb3e5:	120c      	movi.n	a2, 1
400eb3e7:	302320        	xor	a2, a3, a2
400eb3ea:	742020        	extui	a2, a2, 0, 8
400eb3ed:	328c      	beqz.n	a2, 400eb3f4 <initArduino+0xc4>
        esp_bt_controller_mem_release(ESP_BT_MODE_BTDM);
400eb3ef:	3a0c      	movi.n	a10, 3
400eb3f1:	007a65        	call8	400ebb98 <esp_bt_controller_mem_release>
    init();
400eb3f4:	010c65        	call8	400ec4bc <init>
    initVariant();
400eb3f7:	010ba5        	call8	400ec4b0 <initVariant>
}
400eb3fa:	f03d      	nop.n
400eb3fc:	f01d      	retw.n
	...

400eb400 <log_printf>:
{
    return s_uart_debug_nr;
}

int log_printf(const char *format, ...)
{
400eb400:	00e136        	entry	a1, 112
    static char loc_buf[64];
    char * temp = loc_buf;
    int len;
    va_list arg;
    va_list copy;
    va_start(arg, format);
400eb403:	079d      	mov.n	a9, a7
400eb405:	017d      	mov.n	a7, a1
400eb407:	874b      	addi.n	a8, a7, 4
400eb409:	0839      	s32i.n	a3, a8, 0
400eb40b:	1849      	s32i.n	a4, a8, 4
400eb40d:	2859      	s32i.n	a5, a8, 8
400eb40f:	3869      	s32i.n	a6, a8, 12
400eb411:	4899      	s32i.n	a9, a8, 16
{
400eb413:	2cc732        	addi	a3, a7, 44
400eb416:	0329      	s32i.n	a2, a3, 0
    if(s_uart_debug_nr < 0){
400eb418:	95e021        	l32r	a2, 400d0b98 <_flash_cache_start+0xb80>
400eb41b:	0228      	l32i.n	a2, a2, 0
400eb41d:	0042d6        	bgez	a2, 400eb425 <log_printf+0x25>
        return 0;
400eb420:	020c      	movi.n	a2, 0
400eb422:	004ec6        	j	400eb561 <log_printf+0x161>
    char * temp = loc_buf;
400eb425:	30c722        	addi	a2, a7, 48
400eb428:	95dd31        	l32r	a3, 400d0b9c <_flash_cache_start+0xb84>
400eb42b:	0239      	s32i.n	a3, a2, 0
    va_start(arg, format);
400eb42d:	38c722        	addi	a2, a7, 56
400eb430:	073d      	mov.n	a3, a7
400eb432:	1239      	s32i.n	a3, a2, 4
400eb434:	38c722        	addi	a2, a7, 56
400eb437:	50c732        	addi	a3, a7, 80
400eb43a:	0239      	s32i.n	a3, a2, 0
400eb43c:	38c722        	addi	a2, a7, 56
400eb43f:	430c      	movi.n	a3, 4
400eb441:	2239      	s32i.n	a3, a2, 8
    va_copy(copy, arg);
400eb443:	44c722        	addi	a2, a7, 68
400eb446:	38c732        	addi	a3, a7, 56
400eb449:	c40c      	movi.n	a4, 12
400eb44b:	04cd      	mov.n	a12, a4
400eb44d:	03bd      	mov.n	a11, a3
400eb44f:	20a220        	or	a10, a2, a2
400eb452:	930f81        	l32r	a8, 400d0090 <_flash_cache_start+0x78>
400eb455:	0008e0        	callx8	a8
    len = vsnprintf(NULL, 0, format, arg);
400eb458:	34c732        	addi	a3, a7, 52
400eb45b:	38c722        	addi	a2, a7, 56
400eb45e:	2cc742        	addi	a4, a7, 44
400eb461:	02d8      	l32i.n	a13, a2, 0
400eb463:	12e8      	l32i.n	a14, a2, 4
400eb465:	22f8      	l32i.n	a15, a2, 8
400eb467:	04c8      	l32i.n	a12, a4, 0
400eb469:	0b0c      	movi.n	a11, 0
400eb46b:	0a0c      	movi.n	a10, 0
400eb46d:	f9e3e5        	call8	400e52ac <vsnprintf>
400eb470:	03a9      	s32i.n	a10, a3, 0
    va_end(copy);
    if(len >= sizeof(loc_buf)){
400eb472:	34c722        	addi	a2, a7, 52
400eb475:	0228      	l32i.n	a2, a2, 0
400eb477:	25d2b6        	bltui	a2, 64, 400eb4a0 <log_printf+0xa0>
        temp = (char*)malloc(len+1);
400eb47a:	34c722        	addi	a2, a7, 52
400eb47d:	0228      	l32i.n	a2, a2, 0
400eb47f:	221b      	addi.n	a2, a2, 1
400eb481:	023d      	mov.n	a3, a2
400eb483:	30c722        	addi	a2, a7, 48
400eb486:	03ad      	mov.n	a10, a3
400eb488:	931781        	l32r	a8, 400d00e4 <_flash_cache_start+0xcc>
400eb48b:	0008e0        	callx8	a8
400eb48e:	0a3d      	mov.n	a3, a10
400eb490:	0239      	s32i.n	a3, a2, 0
        if(temp == NULL) {
400eb492:	30c722        	addi	a2, a7, 48
400eb495:	0228      	l32i.n	a2, a2, 0
400eb497:	52cc      	bnez.n	a2, 400eb4a0 <log_printf+0xa0>
            return 0;
400eb499:	020c      	movi.n	a2, 0
400eb49b:	003086        	j	400eb561 <log_printf+0x161>
400eb49e:	220000        	orb	b0, b0, b0
        }
    }
    vsnprintf(temp, len+1, format, arg);
400eb4a1:	2234c7        	bltu	a4, a12, 400eb4c7 <log_printf+0xc7>
400eb4a4:	1b0022        	l8ui	a2, a0, 27
400eb4a7:	024d22        	s8i	a2, a13, 2
400eb4aa:	38c722        	addi	a2, a7, 56
400eb4ad:	2cc752        	addi	a5, a7, 44
400eb4b0:	30c732        	addi	a3, a7, 48
400eb4b3:	02d8      	l32i.n	a13, a2, 0
400eb4b5:	12e8      	l32i.n	a14, a2, 4
400eb4b7:	22f8      	l32i.n	a15, a2, 8
400eb4b9:	05c8      	l32i.n	a12, a5, 0
400eb4bb:	04bd      	mov.n	a11, a4
400eb4bd:	03a8      	l32i.n	a10, a3, 0
400eb4bf:	f9dee5        	call8	400e52ac <vsnprintf>
#if !CONFIG_DISABLE_HAL_LOCKS
    if(_uart_bus_array[s_uart_debug_nr].lock){
400eb4c2:	95b521        	l32r	a2, 400d0b98 <_flash_cache_start+0xb80>
400eb4c5:	0238      	l32i.n	a3, a2, 0
400eb4c7:	95b641        	l32r	a4, 400d0ba0 <_flash_cache_start+0xb88>
400eb4ca:	032d      	mov.n	a2, a3
400eb4cc:	1122e0        	slli	a2, a2, 2
400eb4cf:	223a      	add.n	a2, a2, a3
400eb4d1:	1122e0        	slli	a2, a2, 2
400eb4d4:	242a      	add.n	a2, a4, a2
400eb4d6:	224b      	addi.n	a2, a2, 4
400eb4d8:	0228      	l32i.n	a2, a2, 0
400eb4da:	05b216        	beqz	a2, 400eb539 <log_printf+0x139>
        xSemaphoreTake(_uart_bus_array[s_uart_debug_nr].lock, portMAX_DELAY);
400eb4dd:	95ae21        	l32r	a2, 400d0b98 <_flash_cache_start+0xb80>
400eb4e0:	0238      	l32i.n	a3, a2, 0
400eb4e2:	95af41        	l32r	a4, 400d0ba0 <_flash_cache_start+0xb88>
400eb4e5:	032d      	mov.n	a2, a3
400eb4e7:	1122e0        	slli	a2, a2, 2
400eb4ea:	223a      	add.n	a2, a2, a3
400eb4ec:	1122e0        	slli	a2, a2, 2
400eb4ef:	242a      	add.n	a2, a4, a2
400eb4f1:	224b      	addi.n	a2, a2, 4
400eb4f3:	0228      	l32i.n	a2, a2, 0
400eb4f5:	0d0c      	movi.n	a13, 0
400eb4f7:	fc7c      	movi.n	a12, -1
400eb4f9:	0b0c      	movi.n	a11, 0
400eb4fb:	02ad      	mov.n	a10, a2
400eb4fd:	9c6665        	call8	40087b64 <xQueueGenericReceive>
        ets_printf("%s", temp);
400eb500:	30c732        	addi	a3, a7, 48
400eb503:	95a821        	l32r	a2, 400d0ba4 <_flash_cache_start+0xb8c>
400eb506:	03b8      	l32i.n	a11, a3, 0
400eb508:	02ad      	mov.n	a10, a2
400eb50a:	934381        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400eb50d:	0008e0        	callx8	a8
        xSemaphoreGive(_uart_bus_array[s_uart_debug_nr].lock);
400eb510:	95a221        	l32r	a2, 400d0b98 <_flash_cache_start+0xb80>
400eb513:	0238      	l32i.n	a3, a2, 0
400eb515:	95a241        	l32r	a4, 400d0ba0 <_flash_cache_start+0xb88>
400eb518:	032d      	mov.n	a2, a3
400eb51a:	1122e0        	slli	a2, a2, 2
400eb51d:	223a      	add.n	a2, a2, a3
400eb51f:	1122e0        	slli	a2, a2, 2
400eb522:	242a      	add.n	a2, a4, a2
400eb524:	224b      	addi.n	a2, a2, 4
400eb526:	0228      	l32i.n	a2, a2, 0
400eb528:	0d0c      	movi.n	a13, 0
400eb52a:	0c0c      	movi.n	a12, 0
400eb52c:	0b0c      	movi.n	a11, 0
400eb52e:	20a220        	or	a10, a2, a2
400eb531:	9c2b25        	call8	400877e4 <xQueueGenericSend>
400eb534:	000446        	j	400eb549 <log_printf+0x149>
400eb537:	320000        	orbc	b0, b0, b0
    } else {
        ets_printf("%s", temp);
400eb53a:	2130c7        	bltu	a0, a12, 400eb55f <log_printf+0x15f>
400eb53d:	959a      	add.n	a9, a5, a9
400eb53f:	03b8      	l32i.n	a11, a3, 0
400eb541:	02ad      	mov.n	a10, a2
400eb543:	933581        	l32r	a8, 400d0218 <_flash_cache_start+0x200>
400eb546:	0008e0        	callx8	a8
    }
#else
    ets_printf("%s", temp);
#endif
    va_end(arg);
    if(len >= sizeof(loc_buf)){
400eb549:	34c722        	addi	a2, a7, 52
400eb54c:	0228      	l32i.n	a2, a2, 0
400eb54e:	0ad2b6        	bltui	a2, 64, 400eb55c <log_printf+0x15c>
        free(temp);
400eb551:	30c722        	addi	a2, a7, 48
400eb554:	02a8      	l32i.n	a10, a2, 0
400eb556:	92cd81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400eb559:	0008e0        	callx8	a8
    }
    return len;
400eb55c:	34c722        	addi	a2, a7, 52
400eb55f:	0228      	l32i.n	a2, a2, 0
}
400eb561:	f01d      	retw.n
	...

400eb564 <initApbChangeCallback>:
const uint32_t MHZ = 1000000;

static apb_change_t * apb_change_callbacks = NULL;
static xSemaphoreHandle apb_change_lock = NULL;

static void initApbChangeCallback(){
400eb564:	004136        	entry	a1, 32
400eb567:	017d      	mov.n	a7, a1
    static volatile bool initialized = false;
    if(!initialized){
400eb569:	958f21        	l32r	a2, 400d0ba8 <_flash_cache_start+0xb90>
400eb56c:	0020c0        	memw
400eb56f:	000222        	l8ui	a2, a2, 0
400eb572:	743020        	extui	a3, a2, 0, 8
400eb575:	120c      	movi.n	a2, 1
400eb577:	302320        	xor	a2, a3, a2
400eb57a:	742020        	extui	a2, a2, 0, 8
400eb57d:	72ac      	beqz.n	a2, 400eb5a8 <initApbChangeCallback+0x44>
        initialized = true;
400eb57f:	958a21        	l32r	a2, 400d0ba8 <_flash_cache_start+0xb90>
400eb582:	130c      	movi.n	a3, 1
400eb584:	0020c0        	memw
400eb587:	004232        	s8i	a3, a2, 0
        apb_change_lock = xSemaphoreCreateMutex();
400eb58a:	1a0c      	movi.n	a10, 1
400eb58c:	9c3de5        	call8	4008796c <xQueueCreateMutex>
400eb58f:	0a3d      	mov.n	a3, a10
400eb591:	958621        	l32r	a2, 400d0bac <_flash_cache_start+0xb94>
400eb594:	0239      	s32i.n	a3, a2, 0
        if(!apb_change_lock){
400eb596:	958521        	l32r	a2, 400d0bac <_flash_cache_start+0xb94>
400eb599:	0228      	l32i.n	a2, a2, 0
400eb59b:	92cc      	bnez.n	a2, 400eb5a8 <initApbChangeCallback+0x44>
            initialized = false;
400eb59d:	958221        	l32r	a2, 400d0ba8 <_flash_cache_start+0xb90>
400eb5a0:	030c      	movi.n	a3, 0
400eb5a2:	0020c0        	memw
400eb5a5:	004232        	s8i	a3, a2, 0
        }
    }
}
400eb5a8:	f03d      	nop.n
400eb5aa:	f01d      	retw.n

400eb5ac <triggerApbChangeCallback>:

static void triggerApbChangeCallback(apb_change_ev_t ev_type, uint32_t old_apb, uint32_t new_apb){
400eb5ac:	008136        	entry	a1, 64
400eb5af:	017d      	mov.n	a7, a1
400eb5b1:	57cb      	addi.n	a5, a7, 12
400eb5b3:	0529      	s32i.n	a2, a5, 0
400eb5b5:	278b      	addi.n	a2, a7, 8
400eb5b7:	0239      	s32i.n	a3, a2, 0
400eb5b9:	274b      	addi.n	a2, a7, 4
400eb5bb:	0249      	s32i.n	a4, a2, 0
    initApbChangeCallback();
400eb5bd:	fffa65        	call8	400eb564 <initApbChangeCallback>
    xSemaphoreTake(apb_change_lock, portMAX_DELAY);
400eb5c0:	957b21        	l32r	a2, 400d0bac <_flash_cache_start+0xb94>
400eb5c3:	0228      	l32i.n	a2, a2, 0
400eb5c5:	0d0c      	movi.n	a13, 0
400eb5c7:	fc7c      	movi.n	a12, -1
400eb5c9:	0b0c      	movi.n	a11, 0
400eb5cb:	02ad      	mov.n	a10, a2
400eb5cd:	9c5965        	call8	40087b64 <xQueueGenericReceive>
    apb_change_t * r = apb_change_callbacks;
400eb5d0:	1cc722        	addi	a2, a7, 28
400eb5d3:	957731        	l32r	a3, 400d0bb0 <_flash_cache_start+0xb98>
400eb5d6:	0338      	l32i.n	a3, a3, 0
400eb5d8:	0239      	s32i.n	a3, a2, 0
    while(r != NULL){
400eb5da:	000a86        	j	400eb608 <triggerApbChangeCallback+0x5c>
        r->cb(r->arg, ev_type, old_apb, new_apb);
400eb5dd:	1cc722        	addi	a2, a7, 28
400eb5e0:	0228      	l32i.n	a2, a2, 0
400eb5e2:	2228      	l32i.n	a2, a2, 8
400eb5e4:	1cc732        	addi	a3, a7, 28
400eb5e7:	0338      	l32i.n	a3, a3, 0
400eb5e9:	1338      	l32i.n	a3, a3, 4
400eb5eb:	674b      	addi.n	a6, a7, 4
400eb5ed:	578b      	addi.n	a5, a7, 8
400eb5ef:	47cb      	addi.n	a4, a7, 12
400eb5f1:	06d8      	l32i.n	a13, a6, 0
400eb5f3:	05c8      	l32i.n	a12, a5, 0
400eb5f5:	04b8      	l32i.n	a11, a4, 0
400eb5f7:	03ad      	mov.n	a10, a3
400eb5f9:	0002e0        	callx8	a2
        r=r->next;
400eb5fc:	1cc722        	addi	a2, a7, 28
400eb5ff:	1cc732        	addi	a3, a7, 28
400eb602:	0338      	l32i.n	a3, a3, 0
400eb604:	0338      	l32i.n	a3, a3, 0
400eb606:	0239      	s32i.n	a3, a2, 0
    while(r != NULL){
400eb608:	1cc722        	addi	a2, a7, 28
400eb60b:	0228      	l32i.n	a2, a2, 0
400eb60d:	fcc256        	bnez	a2, 400eb5dd <triggerApbChangeCallback+0x31>
    }
    xSemaphoreGive(apb_change_lock);
400eb610:	956721        	l32r	a2, 400d0bac <_flash_cache_start+0xb94>
400eb613:	0228      	l32i.n	a2, a2, 0
400eb615:	0d0c      	movi.n	a13, 0
400eb617:	0c0c      	movi.n	a12, 0
400eb619:	0b0c      	movi.n	a11, 0
400eb61b:	02ad      	mov.n	a10, a2
400eb61d:	9c1c65        	call8	400877e4 <xQueueGenericSend>
}
400eb620:	f03d      	nop.n
400eb622:	f01d      	retw.n

400eb624 <calculateApb>:
    }
    xSemaphoreGive(apb_change_lock);
    return true;
}

static uint32_t calculateApb(rtc_cpu_freq_config_t * conf){
400eb624:	006136        	entry	a1, 48
400eb627:	017d      	mov.n	a7, a1
400eb629:	37cb      	addi.n	a3, a7, 12
400eb62b:	0329      	s32i.n	a2, a3, 0
    if(conf->freq_mhz >= 80){
400eb62d:	27cb      	addi.n	a2, a7, 12
400eb62f:	0228      	l32i.n	a2, a2, 0
400eb631:	3228      	l32i.n	a2, a2, 12
400eb633:	f34c      	movi.n	a3, 79
400eb635:	0fb327        	bgeu	a3, a2, 400eb648 <calculateApb+0x24>
        return 80 * MHZ;
400eb638:	93a931        	l32r	a3, 400d04dc <_flash_cache_start+0x4c4>
400eb63b:	032d      	mov.n	a2, a3
400eb63d:	1122e0        	slli	a2, a2, 2
400eb640:	223a      	add.n	a2, a2, a3
400eb642:	1122c0        	slli	a2, a2, 4
400eb645:	000506        	j	400eb65d <calculateApb+0x39>
    }
    return (conf->source_freq_mhz * MHZ) / conf->div;
400eb648:	27cb      	addi.n	a2, a7, 12
400eb64a:	0228      	l32i.n	a2, a2, 0
400eb64c:	1238      	l32i.n	a3, a2, 4
400eb64e:	93a321        	l32r	a2, 400d04dc <_flash_cache_start+0x4c4>
400eb651:	823320        	mull	a3, a3, a2
400eb654:	27cb      	addi.n	a2, a7, 12
400eb656:	0228      	l32i.n	a2, a2, 0
400eb658:	2228      	l32i.n	a2, a2, 8
400eb65a:	c22320        	quou	a2, a3, a2
}
400eb65d:	f01d      	retw.n
	...

400eb660 <setCpuFrequencyMhz>:

void esp_timer_impl_update_apb_freq(uint32_t apb_ticks_per_us); //private in IDF

bool setCpuFrequencyMhz(uint32_t cpu_freq_mhz){
400eb660:	00e136        	entry	a1, 112
400eb663:	207110        	or	a7, a1, a1
400eb666:	1cc732        	addi	a3, a7, 28
400eb669:	006322        	s32i	a2, a3, 0
    rtc_cpu_freq_config_t conf, cconf;
    uint32_t capb, apb;
    //Get XTAL Frequency and calculate min CPU MHz
    rtc_xtal_freq_t xtal = rtc_clk_xtal_freq_get();
400eb66c:	a144e5        	call8	4008cabc <rtc_clk_xtal_freq_get>
400eb66f:	0a3d      	mov.n	a3, a10
400eb671:	20c722        	addi	a2, a7, 32
400eb674:	0239      	s32i.n	a3, a2, 0
    if(xtal > RTC_XTAL_FREQ_AUTO){
400eb676:	20c722        	addi	a2, a7, 32
400eb679:	0228      	l32i.n	a2, a2, 0
400eb67b:	0ee216        	beqz	a2, 400eb76d <setCpuFrequencyMhz+0x10d>
        if(xtal < RTC_XTAL_FREQ_40M) {
400eb67e:	20c722        	addi	a2, a7, 32
400eb681:	0228      	l32i.n	a2, a2, 0
400eb683:	732c      	movi.n	a3, 39
400eb685:	683327        	bltu	a3, a2, 400eb6f1 <setCpuFrequencyMhz+0x91>
            if(cpu_freq_mhz <= xtal && cpu_freq_mhz != xtal && cpu_freq_mhz != (xtal/2)){
400eb688:	1cc722        	addi	a2, a7, 28
400eb68b:	20c732        	addi	a3, a7, 32
400eb68e:	0228      	l32i.n	a2, a2, 0
400eb690:	0338      	l32i.n	a3, a3, 0
400eb692:	02b327        	bgeu	a3, a2, 400eb698 <setCpuFrequencyMhz+0x38>
400eb695:	003506        	j	400eb76d <setCpuFrequencyMhz+0x10d>
400eb698:	1cc732        	addi	a3, a7, 28
400eb69b:	20c722        	addi	a2, a7, 32
400eb69e:	0338      	l32i.n	a3, a3, 0
400eb6a0:	0228      	l32i.n	a2, a2, 0
400eb6a2:	029327        	bne	a3, a2, 400eb6a8 <setCpuFrequencyMhz+0x48>
400eb6a5:	003106        	j	400eb76d <setCpuFrequencyMhz+0x10d>
400eb6a8:	20c722        	addi	a2, a7, 32
400eb6ab:	0228      	l32i.n	a2, a2, 0
400eb6ad:	413120        	srli	a3, a2, 1
400eb6b0:	1cc722        	addi	a2, a7, 28
400eb6b3:	0228      	l32i.n	a2, a2, 0
400eb6b5:	029327        	bne	a3, a2, 400eb6bb <setCpuFrequencyMhz+0x5b>
400eb6b8:	002c46        	j	400eb76d <setCpuFrequencyMhz+0x10d>
                log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2);
400eb6bb:	953e21        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb6be:	20a220        	or	a10, a2, a2
400eb6c1:	9b66e5        	call8	40086d30 <pathToFileName>
400eb6c4:	0a3d      	mov.n	a3, a10
400eb6c6:	20c722        	addi	a2, a7, 32
400eb6c9:	0228      	l32i.n	a2, a2, 0
400eb6cb:	418120        	srli	a8, a2, 1
400eb6ce:	20c762        	addi	a6, a7, 32
400eb6d1:	1cc752        	addi	a5, a7, 28
400eb6d4:	953941        	l32r	a4, 400d0bb8 <_flash_cache_start+0xba0>
400eb6d7:	953921        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400eb6da:	0189      	s32i.n	a8, a1, 0
400eb6dc:	06f8      	l32i.n	a15, a6, 0
400eb6de:	05e8      	l32i.n	a14, a5, 0
400eb6e0:	04dd      	mov.n	a13, a4
400eb6e2:	8aa0c2        	movi	a12, 138
400eb6e5:	03bd      	mov.n	a11, a3
400eb6e7:	02ad      	mov.n	a10, a2
400eb6e9:	ffd165        	call8	400eb400 <log_printf>
                return false;
400eb6ec:	020c      	movi.n	a2, 0
400eb6ee:	00aa06        	j	400eb99a <setCpuFrequencyMhz+0x33a>
            }
        } else if(cpu_freq_mhz <= xtal && cpu_freq_mhz != xtal && cpu_freq_mhz != (xtal/2) && cpu_freq_mhz != (xtal/4)){
400eb6f1:	1cc722        	addi	a2, a7, 28
400eb6f4:	20c732        	addi	a3, a7, 32
400eb6f7:	002222        	l32i	a2, a2, 0
400eb6fa:	002332        	l32i	a3, a3, 0
400eb6fd:	6c3327        	bltu	a3, a2, 400eb76d <setCpuFrequencyMhz+0x10d>
400eb700:	1cc732        	addi	a3, a7, 28
400eb703:	20c722        	addi	a2, a7, 32
400eb706:	0338      	l32i.n	a3, a3, 0
400eb708:	0228      	l32i.n	a2, a2, 0
400eb70a:	5f1327        	beq	a3, a2, 400eb76d <setCpuFrequencyMhz+0x10d>
400eb70d:	20c722        	addi	a2, a7, 32
400eb710:	0228      	l32i.n	a2, a2, 0
400eb712:	413120        	srli	a3, a2, 1
400eb715:	1cc722        	addi	a2, a7, 28
400eb718:	0228      	l32i.n	a2, a2, 0
400eb71a:	4f1327        	beq	a3, a2, 400eb76d <setCpuFrequencyMhz+0x10d>
400eb71d:	20c722        	addi	a2, a7, 32
400eb720:	0228      	l32i.n	a2, a2, 0
400eb722:	413220        	srli	a3, a2, 2
400eb725:	1cc722        	addi	a2, a7, 28
400eb728:	0228      	l32i.n	a2, a2, 0
400eb72a:	3f1327        	beq	a3, a2, 400eb76d <setCpuFrequencyMhz+0x10d>
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2, xtal/4);
400eb72d:	952121        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb730:	02ad      	mov.n	a10, a2
400eb732:	9b5fe5        	call8	40086d30 <pathToFileName>
400eb735:	0a3d      	mov.n	a3, a10
400eb737:	20c722        	addi	a2, a7, 32
400eb73a:	0228      	l32i.n	a2, a2, 0
400eb73c:	418120        	srli	a8, a2, 1
400eb73f:	20c722        	addi	a2, a7, 32
400eb742:	0228      	l32i.n	a2, a2, 0
400eb744:	419220        	srli	a9, a2, 2
400eb747:	20c762        	addi	a6, a7, 32
400eb74a:	1cc752        	addi	a5, a7, 28
400eb74d:	951a41        	l32r	a4, 400d0bb8 <_flash_cache_start+0xba0>
400eb750:	951c21        	l32r	a2, 400d0bc0 <_flash_cache_start+0xba8>
400eb753:	1199      	s32i.n	a9, a1, 4
400eb755:	0189      	s32i.n	a8, a1, 0
400eb757:	06f8      	l32i.n	a15, a6, 0
400eb759:	05e8      	l32i.n	a14, a5, 0
400eb75b:	04dd      	mov.n	a13, a4
400eb75d:	8ea0c2        	movi	a12, 142
400eb760:	03bd      	mov.n	a11, a3
400eb762:	20a220        	or	a10, a2, a2
400eb765:	ffc9a5        	call8	400eb400 <log_printf>
            return false;
400eb768:	020c      	movi.n	a2, 0
400eb76a:	008b06        	j	400eb99a <setCpuFrequencyMhz+0x33a>
        }
    }
    if(cpu_freq_mhz > xtal && cpu_freq_mhz != 240 && cpu_freq_mhz != 160 && cpu_freq_mhz != 80){
400eb76d:	1cc722        	addi	a2, a7, 28
400eb770:	20c732        	addi	a3, a7, 32
400eb773:	0228      	l32i.n	a2, a2, 0
400eb775:	0338      	l32i.n	a3, a3, 0
400eb777:	023327        	bltu	a3, a2, 400eb77d <setCpuFrequencyMhz+0x11d>
400eb77a:	002ac6        	j	400eb829 <setCpuFrequencyMhz+0x1c9>
400eb77d:	1cc722        	addi	a2, a7, 28
400eb780:	0238      	l32i.n	a3, a2, 0
400eb782:	f0a022        	movi	a2, 240
400eb785:	029327        	bne	a3, a2, 400eb78b <setCpuFrequencyMhz+0x12b>
400eb788:	002746        	j	400eb829 <setCpuFrequencyMhz+0x1c9>
400eb78b:	1cc722        	addi	a2, a7, 28
400eb78e:	0238      	l32i.n	a3, a2, 0
400eb790:	a0a022        	movi	a2, 160
400eb793:	029327        	bne	a3, a2, 400eb799 <setCpuFrequencyMhz+0x139>
400eb796:	0023c6        	j	400eb829 <setCpuFrequencyMhz+0x1c9>
400eb799:	1cc722        	addi	a2, a7, 28
400eb79c:	0238      	l32i.n	a3, a2, 0
400eb79e:	025c      	movi.n	a2, 80
400eb7a0:	029327        	bne	a3, a2, 400eb7a6 <setCpuFrequencyMhz+0x146>
400eb7a3:	002086        	j	400eb829 <setCpuFrequencyMhz+0x1c9>
        if(xtal >= RTC_XTAL_FREQ_40M){
400eb7a6:	20c722        	addi	a2, a7, 32
400eb7a9:	0228      	l32i.n	a2, a2, 0
400eb7ab:	732c      	movi.n	a3, 39
400eb7ad:	40b327        	bgeu	a3, a2, 400eb7f1 <setCpuFrequencyMhz+0x191>
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2, xtal/4);
400eb7b0:	950121        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb7b3:	02ad      	mov.n	a10, a2
400eb7b5:	9b57a5        	call8	40086d30 <pathToFileName>
400eb7b8:	0a3d      	mov.n	a3, a10
400eb7ba:	20c722        	addi	a2, a7, 32
400eb7bd:	0228      	l32i.n	a2, a2, 0
400eb7bf:	418120        	srli	a8, a2, 1
400eb7c2:	20c722        	addi	a2, a7, 32
400eb7c5:	0228      	l32i.n	a2, a2, 0
400eb7c7:	419220        	srli	a9, a2, 2
400eb7ca:	20c762        	addi	a6, a7, 32
400eb7cd:	1cc752        	addi	a5, a7, 28
400eb7d0:	94fa41        	l32r	a4, 400d0bb8 <_flash_cache_start+0xba0>
400eb7d3:	94fb21        	l32r	a2, 400d0bc0 <_flash_cache_start+0xba8>
400eb7d6:	1199      	s32i.n	a9, a1, 4
400eb7d8:	0189      	s32i.n	a8, a1, 0
400eb7da:	06f8      	l32i.n	a15, a6, 0
400eb7dc:	05e8      	l32i.n	a14, a5, 0
400eb7de:	04dd      	mov.n	a13, a4
400eb7e0:	94a0c2        	movi	a12, 148
400eb7e3:	20b330        	or	a11, a3, a3
400eb7e6:	20a220        	or	a10, a2, a2
400eb7e9:	ffc165        	call8	400eb400 <log_printf>
400eb7ec:	000d06        	j	400eb824 <setCpuFrequencyMhz+0x1c4>
400eb7ef:	210000        	srai	a0, a0, 0
        } else {
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2);
400eb7f2:	2094f0        	or	a9, a4, a15
400eb7f5:	a520a2        	l32i	a10, a0, 0x294
400eb7f8:	a09b53        	lsi	f5, a11, 0x280
400eb7fb:	203a      	add.n	a2, a0, a3
400eb7fd:	20c722        	addi	a2, a7, 32
400eb800:	002222        	l32i	a2, a2, 0
400eb803:	418120        	srli	a8, a2, 1
400eb806:	20c762        	addi	a6, a7, 32
400eb809:	1cc752        	addi	a5, a7, 28
400eb80c:	94eb41        	l32r	a4, 400d0bb8 <_flash_cache_start+0xba0>
400eb80f:	94eb21        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400eb812:	0189      	s32i.n	a8, a1, 0
400eb814:	06f8      	l32i.n	a15, a6, 0
400eb816:	05e8      	l32i.n	a14, a5, 0
400eb818:	04dd      	mov.n	a13, a4
400eb81a:	96a0c2        	movi	a12, 150
400eb81d:	03bd      	mov.n	a11, a3
400eb81f:	02ad      	mov.n	a10, a2
400eb821:	ffbde5        	call8	400eb400 <log_printf>
        }
        return false;
400eb824:	020c      	movi.n	a2, 0
400eb826:	005c06        	j	400eb99a <setCpuFrequencyMhz+0x33a>
    }
    //check if cpu supports the frequency
    if(cpu_freq_mhz == 240){
400eb829:	1cc722        	addi	a2, a7, 28
400eb82c:	0238      	l32i.n	a3, a2, 0
400eb82e:	f0a022        	movi	a2, 240
400eb831:	449327        	bne	a3, a2, 400eb879 <setCpuFrequencyMhz+0x219>
        //Check if ESP32 is rated for a CPU frequency of 160MHz only
        if (REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_RATED) &&
400eb834:	94e421        	l32r	a2, 400d0bc4 <_flash_cache_start+0xbac>
400eb837:	0020c0        	memw
400eb83a:	0238      	l32i.n	a3, a2, 0
400eb83c:	934121        	l32r	a2, 400d0540 <_flash_cache_start+0x528>
400eb83f:	102320        	and	a2, a3, a2
400eb842:	32bc      	beqz.n	a2, 400eb879 <setCpuFrequencyMhz+0x219>
            REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_LOW)) {
400eb844:	94e021        	l32r	a2, 400d0bc4 <_flash_cache_start+0xbac>
400eb847:	0020c0        	memw
400eb84a:	0238      	l32i.n	a3, a2, 0
400eb84c:	938921        	l32r	a2, 400d0670 <_flash_cache_start+0x658>
400eb84f:	102320        	and	a2, a3, a2
        if (REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_RATED) &&
400eb852:	32ac      	beqz.n	a2, 400eb879 <setCpuFrequencyMhz+0x219>
            log_e("Can not switch to 240 MHz! Chip CPU frequency rated for 160MHz.");
400eb854:	94d821        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb857:	02ad      	mov.n	a10, a2
400eb859:	9b4d65        	call8	40086d30 <pathToFileName>
400eb85c:	0a3d      	mov.n	a3, a10
400eb85e:	94d661        	l32r	a6, 400d0bb8 <_flash_cache_start+0xba0>
400eb861:	94d921        	l32r	a2, 400d0bc8 <_flash_cache_start+0xbb0>
400eb864:	06dd      	mov.n	a13, a6
400eb866:	9fa0c2        	movi	a12, 159
400eb869:	03bd      	mov.n	a11, a3
400eb86b:	02ad      	mov.n	a10, a2
400eb86d:	ffb925        	call8	400eb400 <log_printf>
            cpu_freq_mhz = 160;
400eb870:	1cc722        	addi	a2, a7, 28
400eb873:	a0a032        	movi	a3, 160
400eb876:	006232        	s32i	a3, a2, 0
        }
    }
    //Get current CPU clock configuration
    rtc_clk_cpu_freq_get_config(&cconf);
400eb879:	40c722        	addi	a2, a7, 64
400eb87c:	20a220        	or	a10, a2, a2
400eb87f:	a12da5        	call8	4008cb58 <rtc_clk_cpu_freq_get_config>
    //return if frequency has not changed
    if(cconf.freq_mhz == cpu_freq_mhz){
400eb882:	40c722        	addi	a2, a7, 64
400eb885:	032232        	l32i	a3, a2, 12
400eb888:	1cc722        	addi	a2, a7, 28
400eb88b:	002222        	l32i	a2, a2, 0
400eb88e:	069327        	bne	a3, a2, 400eb898 <setCpuFrequencyMhz+0x238>
        return true;
400eb891:	120c      	movi.n	a2, 1
400eb893:	0040c6        	j	400eb99a <setCpuFrequencyMhz+0x33a>
400eb896:	320000        	orbc	b0, b0, b0
    }
    //Get configuration for the new CPU frequency
    if(!rtc_clk_cpu_freq_mhz_to_config(cpu_freq_mhz, &conf)){
400eb899:	2230c7        	bltu	a0, a12, 400eb8bf <setCpuFrequencyMhz+0x25f>
400eb89c:	301cc7        	beq	a12, a12, 400eb8d0 <setCpuFrequencyMhz+0x270>
400eb89f:	a820b3        	lsi	f11, a0, 0x2a0
400eb8a2:	252502        	l32i	a0, a5, 148
400eb8a5:	0a2da1        	l32r	a10, 400ae15c <_iram_end+0x20608>
400eb8a8:	023d      	mov.n	a3, a2
400eb8aa:	120c      	movi.n	a2, 1
400eb8ac:	302320        	xor	a2, a3, a2
400eb8af:	742020        	extui	a2, a2, 0, 8
400eb8b2:	72ac      	beqz.n	a2, 400eb8dd <setCpuFrequencyMhz+0x27d>
        log_e("CPU clock could not be set to %u MHz", cpu_freq_mhz);
400eb8b4:	94c021        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb8b7:	02ad      	mov.n	a10, a2
400eb8b9:	9b4765        	call8	40086d30 <pathToFileName>
400eb8bc:	0a3d      	mov.n	a3, a10
400eb8be:	1cc752        	addi	a5, a7, 28
400eb8c1:	94bd41        	l32r	a4, 400d0bb8 <_flash_cache_start+0xba0>
400eb8c4:	94c221        	l32r	a2, 400d0bcc <_flash_cache_start+0xbb4>
400eb8c7:	05e8      	l32i.n	a14, a5, 0
400eb8c9:	04dd      	mov.n	a13, a4
400eb8cb:	aba0c2        	movi	a12, 171
400eb8ce:	03bd      	mov.n	a11, a3
400eb8d0:	02ad      	mov.n	a10, a2
400eb8d2:	ffb2e5        	call8	400eb400 <log_printf>
        return false;
400eb8d5:	020c      	movi.n	a2, 0
400eb8d7:	002fc6        	j	400eb99a <setCpuFrequencyMhz+0x33a>
400eb8da:	000000        	ill
    }
    //Current APB
    capb = calculateApb(&cconf);
400eb8dd:	40c722        	addi	a2, a7, 64
400eb8e0:	20a220        	or	a10, a2, a2
400eb8e3:	ffd425        	call8	400eb624 <calculateApb>
400eb8e6:	0a3d      	mov.n	a3, a10
400eb8e8:	24c722        	addi	a2, a7, 36
400eb8eb:	0239      	s32i.n	a3, a2, 0
    //New APB
    apb = calculateApb(&conf);
400eb8ed:	30c722        	addi	a2, a7, 48
400eb8f0:	02ad      	mov.n	a10, a2
400eb8f2:	ffd325        	call8	400eb624 <calculateApb>
400eb8f5:	0a3d      	mov.n	a3, a10
400eb8f7:	28c722        	addi	a2, a7, 40
400eb8fa:	0239      	s32i.n	a3, a2, 0
    log_d("%s: %u / %u = %u Mhz, APB: %u Hz", (conf.source == RTC_CPU_FREQ_SRC_PLL)?"PLL":((conf.source == RTC_CPU_FREQ_SRC_APLL)?"APLL":((conf.source == RTC_CPU_FREQ_SRC_XTAL)?"XTAL":"8M")), conf.source_freq_mhz, conf.div, conf.freq_mhz, apb);
    //Call peripheral functions before the APB change
    if(apb_change_callbacks){
400eb8fc:	94ad21        	l32r	a2, 400d0bb0 <_flash_cache_start+0xb98>
400eb8ff:	0228      	l32i.n	a2, a2, 0
400eb901:	f28c      	beqz.n	a2, 400eb914 <setCpuFrequencyMhz+0x2b4>
        triggerApbChangeCallback(APB_BEFORE_CHANGE, capb, apb);
400eb903:	28c732        	addi	a3, a7, 40
400eb906:	24c722        	addi	a2, a7, 36
400eb909:	03c8      	l32i.n	a12, a3, 0
400eb90b:	0022b2        	l32i	a11, a2, 0
400eb90e:	00a0a2        	movi	a10, 0
400eb911:	ffc9a5        	call8	400eb5ac <triggerApbChangeCallback>
    }
    //Make the frequency change
    rtc_clk_cpu_freq_set_config_fast(&conf);
400eb914:	30c722        	addi	a2, a7, 48
400eb917:	20a220        	or	a10, a2, a2
400eb91a:	a15265        	call8	4008ce40 <rtc_clk_cpu_freq_set_config_fast>
    if(capb != apb){
400eb91d:	24c732        	addi	a3, a7, 36
400eb920:	28c722        	addi	a2, a7, 40
400eb923:	002332        	l32i	a3, a3, 0
400eb926:	0228      	l32i.n	a2, a2, 0
400eb928:	181327        	beq	a3, a2, 400eb944 <setCpuFrequencyMhz+0x2e4>
        //Update REF_TICK (uncomment if REF_TICK is different than 1MHz)
        //if(conf.freq_mhz < 80){
        //    ESP_REG(APB_CTRL_XTAL_TICK_CONF_REG) = conf.freq_mhz / (REF_CLK_FREQ / MHZ) - 1;
        //}
        //Update APB Freq REG
        rtc_clk_apb_freq_update(apb);
400eb92b:	28c722        	addi	a2, a7, 40
400eb92e:	0022a2        	l32i	a10, a2, 0
400eb931:	a12ce5        	call8	4008cc00 <rtc_clk_apb_freq_update>
        //Update esp_timer divisor
        esp_timer_impl_update_apb_freq(apb / MHZ);
400eb934:	92ea21        	l32r	a2, 400d04dc <_flash_cache_start+0x4c4>
400eb937:	28c732        	addi	a3, a7, 40
400eb93a:	0338      	l32i.n	a3, a3, 0
400eb93c:	c22320        	quou	a2, a3, a2
400eb93f:	02ad      	mov.n	a10, a2
400eb941:	9694e5        	call8	40082290 <esp_timer_impl_update_apb_freq>
    }
    //Update FreeRTOS Tick Divisor
    uint32_t fcpu = (conf.freq_mhz >= 80)?(conf.freq_mhz * MHZ):(apb);
400eb944:	30c722        	addi	a2, a7, 48
400eb947:	3228      	l32i.n	a2, a2, 12
400eb949:	f34c      	movi.n	a3, 79
400eb94b:	0eb327        	bgeu	a3, a2, 400eb95d <setCpuFrequencyMhz+0x2fd>
400eb94e:	30c722        	addi	a2, a7, 48
400eb951:	3238      	l32i.n	a3, a2, 12
400eb953:	92e221        	l32r	a2, 400d04dc <_flash_cache_start+0x4c4>
400eb956:	822320        	mull	a2, a3, a2
400eb959:	000186        	j	400eb963 <setCpuFrequencyMhz+0x303>
400eb95c:	c72200        	lsi	f0, a2, 0x31c
400eb95f:	2228      	l32i.n	a2, a2, 8
400eb961:	320022        	l8ui	a2, a0, 50
400eb964:	222cc7        	blt	a12, a12, 400eb98a <setCpuFrequencyMhz+0x32a>
400eb967:	220063        	lsi	f6, a0, 136
    _xt_tick_divisor = fcpu / XT_TICK_PER_SEC;
400eb96a:	322cc7        	blt	a12, a12, 400eb9a0 <__static_initialization_and_destruction_0(int, int)+0x4>
400eb96d:	210022        	l8ui	a2, a0, 33
400eb970:	9498      	l32i.n	a9, a4, 36
400eb972:	826320        	mull	a6, a3, a2
400eb975:	a25320        	muluh	a5, a3, a2
400eb978:	064d      	mov.n	a4, a6
400eb97a:	413650        	srli	a3, a5, 6
400eb97d:	949521        	l32r	a2, 400d0bd4 <_flash_cache_start+0xbbc>
400eb980:	0239      	s32i.n	a3, a2, 0
    //Call peripheral functions after the APB change
    if(apb_change_callbacks){
400eb982:	948b21        	l32r	a2, 400d0bb0 <_flash_cache_start+0xb98>
400eb985:	0228      	l32i.n	a2, a2, 0
400eb987:	d28c      	beqz.n	a2, 400eb998 <setCpuFrequencyMhz+0x338>
        triggerApbChangeCallback(APB_AFTER_CHANGE, capb, apb);
400eb989:	28c732        	addi	a3, a7, 40
400eb98c:	24c722        	addi	a2, a7, 36
400eb98f:	03c8      	l32i.n	a12, a3, 0
400eb991:	02b8      	l32i.n	a11, a2, 0
400eb993:	1a0c      	movi.n	a10, 1
400eb995:	ffc165        	call8	400eb5ac <triggerApbChangeCallback>
    }
    return true;
400eb998:	120c      	movi.n	a2, 1
}
400eb99a:	f01d      	retw.n

400eb99c <__static_initialization_and_destruction_0(int, int)>:
{
   void cleanupFunctional(void* arg)
   {
	 delete (InterruptArgStructure*)arg;
   }
}
400eb99c:	006136        	entry	a1, 48
400eb99f:	207110        	or	a7, a1, a1
400eb9a2:	0cc742        	addi	a4, a7, 12
400eb9a5:	006422        	s32i	a2, a4, 0
400eb9a8:	278b      	addi.n	a2, a7, 8
400eb9aa:	0239      	s32i.n	a3, a2, 0
400eb9ac:	27cb      	addi.n	a2, a7, 12
400eb9ae:	0228      	l32i.n	a2, a2, 0
400eb9b0:	191266        	bnei	a2, 1, 400eb9cd <__static_initialization_and_destruction_0(int, int)+0x31>
400eb9b3:	278b      	addi.n	a2, a7, 8
400eb9b5:	0238      	l32i.n	a3, a2, 0
400eb9b7:	91ae21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb9ba:	0f9327        	bne	a3, a2, 400eb9cd <__static_initialization_and_destruction_0(int, int)+0x31>
400eb9bd:	948621        	l32r	a2, 400d0bd8 <_flash_cache_start+0xbc0>
400eb9c0:	0e0c      	movi.n	a14, 0
400eb9c2:	0d0c      	movi.n	a13, 0
400eb9c4:	0c0c      	movi.n	a12, 0
400eb9c6:	0b0c      	movi.n	a11, 0
400eb9c8:	02ad      	mov.n	a10, a2
400eb9ca:	e7e0e5        	call8	400d37d8 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400eb9cd:	0cc722        	addi	a2, a7, 12
400eb9d0:	002222        	l32i	a2, a2, 0
400eb9d3:	011256        	bnez	a2, 400eb9e8 <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb9d6:	278b      	addi.n	a2, a7, 8
400eb9d8:	0238      	l32i.n	a3, a2, 0
400eb9da:	91a521        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb9dd:	079327        	bne	a3, a2, 400eb9e8 <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb9e0:	947e21        	l32r	a2, 400d0bd8 <_flash_cache_start+0xbc0>
400eb9e3:	02ad      	mov.n	a10, a2
400eb9e5:	e527a5        	call8	400d0c60 <IPAddress::~IPAddress()>
400eb9e8:	f03d      	nop.n
400eb9ea:	f01d      	retw.n

400eb9ec <_GLOBAL__sub_I__Z19interruptFunctionalPv>:
400eb9ec:	004136        	entry	a1, 32
400eb9ef:	207110        	or	a7, a1, a1
400eb9f2:	919f21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eb9f5:	20b220        	or	a11, a2, a2
400eb9f8:	01a0a2        	movi	a10, 1
400eb9fb:	fffa25        	call8	400eb99c <__static_initialization_and_destruction_0(int, int)>
400eb9fe:	f01d      	retw.n

400eba00 <_GLOBAL__sub_D__Z19interruptFunctionalPv>:
400eba00:	004136        	entry	a1, 32
400eba03:	207110        	or	a7, a1, a1
400eba06:	919a21        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400eba09:	20b220        	or	a11, a2, a2
400eba0c:	00a0a2        	movi	a10, 0
400eba0f:	fff8e5        	call8	400eb99c <__static_initialization_and_destruction_0(int, int)>
400eba12:	f01d      	retw.n

400eba14 <lib_printf>:
400eba14:	012136        	entry	a1, 144
400eba17:	016142        	s32i	a4, a1, 4
400eba1a:	026152        	s32i	a5, a1, 8
400eba1d:	036162        	s32i	a6, a1, 12
400eba20:	f03d      	nop.n
400eba22:	f03d      	nop.n
400eba24:	f03d      	nop.n
400eba26:	f03d      	nop.n
400eba28:	919781        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400eba2b:	0020c0        	memw
400eba2e:	0888      	l32i.n	a8, a8, 0
400eba30:	0020c0        	memw
400eba33:	1b6182        	s32i	a8, a1, 108
400eba36:	04dd      	mov.n	a13, a4
400eba38:	05ed      	mov.n	a14, a5
400eba3a:	06fd      	mov.n	a15, a6
400eba3c:	03cd      	mov.n	a12, a3
400eba3e:	fb4c      	movi.n	a11, 79
400eba40:	1cc1a2        	addi	a10, a1, 28
400eba43:	f986a5        	call8	400e52ac <vsnprintf>
400eba46:	080c      	movi.n	a8, 0
400eba48:	6b4182        	s8i	a8, a1, 107
400eba4b:	0020c0        	memw
400eba4e:	8a0b      	addi.n	a8, a10, -1
400eba50:	000bc6        	j	400eba83 <lib_printf+0x6f>
400eba53:	c12200        	mul16u	a2, a2, a0
400eba56:	8a1c      	movi.n	a10, 24
400eba58:	09d292        	addmi	a9, a2, 0x900
400eba5b:	cdc200        	lsi	f0, a2, 0x334
400eba5e:	1e0cf6        	bgeui	a12, 0x8000, 400eba80 <lib_printf+0x6c>
400eba61:	090c      	movi.n	a9, 0
400eba63:	092d      	mov.n	a2, a9
400eba65:	932ec0        	movnez	a2, a14, a12
400eba68:	f3cdb2        	addi	a11, a13, -13
400eba6b:	939eb0        	movnez	a9, a14, a11
400eba6e:	020297        	bnone	a2, a9, 400eba74 <lib_printf+0x60>
400eba71:	11cd66        	bnei	a13, 32, 400eba86 <lib_printf+0x72>
400eba74:	1cc122        	addi	a2, a1, 28
400eba77:	928a      	add.n	a9, a2, a8
400eba79:	0b0c      	movi.n	a11, 0
400eba7b:	0049b2        	s8i	a11, a9, 0
400eba7e:	0020c0        	memw
400eba81:	880b      	addi.n	a8, a8, -1
400eba83:	fcd8d6        	bgez	a8, 400eba54 <lib_printf+0x40>
400eba86:	0a2d      	mov.n	a2, a10
400eba88:	f03d      	nop.n
400eba8a:	f03d      	nop.n
400eba8c:	0020c0        	memw
400eba8f:	1b2192        	l32i	a9, a1, 108
400eba92:	917c81        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400eba95:	0020c0        	memw
400eba98:	0888      	l32i.n	a8, a8, 0
400eba9a:	021987        	beq	a9, a8, 400ebaa0 <lib_printf+0x8c>
400eba9d:	ea80e5        	call8	400d62ac <__stack_chk_fail>
400ebaa0:	f01d      	retw.n
	...

400ebaa4 <phy_printf>:
400ebaa4:	00a136        	entry	a1, 80
400ebaa7:	016132        	s32i	a3, a1, 4
400ebaaa:	026142        	s32i	a4, a1, 8
400ebaad:	036152        	s32i	a5, a1, 12
400ebab0:	4169      	s32i.n	a6, a1, 16
400ebab2:	5179      	s32i.n	a7, a1, 20
400ebab4:	013d      	mov.n	a3, a1
400ebab6:	a139      	s32i.n	a3, a1, 40
400ebab8:	30c1c2        	addi	a12, a1, 48
400ebabb:	91c9      	s32i.n	a12, a1, 36
400ebabd:	4e0c      	movi.n	a14, 4
400ebabf:	b1e9      	s32i.n	a14, a1, 44
400ebac1:	01dd      	mov.n	a13, a1
400ebac3:	02bd      	mov.n	a11, a2
400ebac5:	f03d      	nop.n
400ebac7:	0020f0        	nop
400ebaca:	9444a1        	l32r	a10, 400d0bdc <_flash_cache_start+0xbc4>
400ebacd:	fff465        	call8	400eba14 <lib_printf>
400ebad0:	0a2d      	mov.n	a2, a10
400ebad2:	f01d      	retw.n

400ebad4 <coexist_printf>:
400ebad4:	00a136        	entry	a1, 80
400ebad7:	016132        	s32i	a3, a1, 4
400ebada:	026142        	s32i	a4, a1, 8
400ebadd:	036152        	s32i	a5, a1, 12
400ebae0:	4169      	s32i.n	a6, a1, 16
400ebae2:	5179      	s32i.n	a7, a1, 20
400ebae4:	013d      	mov.n	a3, a1
400ebae6:	a139      	s32i.n	a3, a1, 40
400ebae8:	30c1c2        	addi	a12, a1, 48
400ebaeb:	91c9      	s32i.n	a12, a1, 36
400ebaed:	4e0c      	movi.n	a14, 4
400ebaef:	b1e9      	s32i.n	a14, a1, 44
400ebaf1:	01dd      	mov.n	a13, a1
400ebaf3:	02bd      	mov.n	a11, a2
400ebaf5:	f03d      	nop.n
400ebaf7:	0020f0        	nop
400ebafa:	9439a1        	l32r	a10, 400d0be0 <_flash_cache_start+0xbc8>
400ebafd:	fff165        	call8	400eba14 <lib_printf>
400ebb00:	0a2d      	mov.n	a2, a10
400ebb02:	f01d      	retw.n

400ebb04 <esp_ota_get_running_partition>:
400ebb04:	004136        	entry	a1, 32
400ebb07:	943721        	l32r	a2, 400d0be4 <_flash_cache_start+0xbcc>
400ebb0a:	0228      	l32i.n	a2, a2, 0
400ebb0c:	06a256        	bnez	a2, 400ebb7a <esp_ota_get_running_partition+0x76>
400ebb0f:	9436a1        	l32r	a10, 400d0be8 <_flash_cache_start+0xbd0>
400ebb12:	fe1c25        	call8	400e9cd4 <spi_flash_cache2phys>
400ebb15:	0a4d      	mov.n	a4, a10
400ebb17:	0e0a66        	bnei	a10, -1, 400ebb29 <esp_ota_get_running_partition+0x25>
400ebb1a:	9434d1        	l32r	a13, 400d0bec <_flash_cache_start+0xbd4>
400ebb1d:	9434c1        	l32r	a12, 400d0bf0 <_flash_cache_start+0xbd8>
400ebb20:	fea1b2        	movi	a11, 0x1fe
400ebb23:	9434a1        	l32r	a10, 400d0bf4 <_flash_cache_start+0xbdc>
400ebb26:	eefa65        	call8	400daacc <__assert_func>
400ebb29:	00a0c2        	movi	a12, 0
400ebb2c:	ffa0b2        	movi	a11, 255
400ebb2f:	20acc0        	or	a10, a12, a12
400ebb32:	fe3ea5        	call8	400e9f1c <esp_partition_find>
400ebb35:	203aa0        	or	a3, a10, a10
400ebb38:	038a56        	bnez	a10, 400ebb74 <esp_ota_get_running_partition+0x70>
400ebb3b:	942fd1        	l32r	a13, 400d0bf8 <_flash_cache_start+0xbe0>
400ebb3e:	942cc1        	l32r	a12, 400d0bf0 <_flash_cache_start+0xbd8>
400ebb41:	03a2b2        	movi	a11, 0x203
400ebb44:	942ca1        	l32r	a10, 400d0bf4 <_flash_cache_start+0xbdc>
400ebb47:	eef865        	call8	400daacc <__assert_func>
400ebb4a:	20a330        	or	a10, a3, a3
400ebb4d:	fe4125        	call8	400e9f60 <esp_partition_get>
400ebb50:	202aa0        	or	a2, a10, a10
400ebb53:	2a98      	l32i.n	a9, a10, 8
400ebb55:	123497        	bltu	a4, a9, 400ebb6b <esp_ota_get_running_partition+0x67>
400ebb58:	3a88      	l32i.n	a8, a10, 12
400ebb5a:	898a      	add.n	a8, a9, a8
400ebb5c:	0bb487        	bgeu	a4, a8, 400ebb6b <esp_ota_get_running_partition+0x67>
400ebb5f:	03ad      	mov.n	a10, a3
400ebb61:	fe31e5        	call8	400e9e80 <esp_partition_iterator_release>
400ebb64:	942031        	l32r	a3, 400d0be4 <_flash_cache_start+0xbcc>
400ebb67:	0329      	s32i.n	a2, a3, 0
400ebb69:	f01d      	retw.n
400ebb6b:	20a330        	or	a10, a3, a3
400ebb6e:	fe3225        	call8	400e9e90 <esp_partition_next>
400ebb71:	203aa0        	or	a3, a10, a10
400ebb74:	fd2356        	bnez	a3, 400ebb4a <esp_ota_get_running_partition+0x46>
400ebb77:	9f7f65        	call8	4008b36c <abort>
400ebb7a:	f01d      	retw.n

400ebb7c <try_heap_caps_add_region>:
400ebb7c:	004136        	entry	a1, 32
400ebb7f:	20b330        	or	a11, a3, a3
400ebb82:	20a220        	or	a10, a2, a2
400ebb85:	eee9a5        	call8	400daa20 <heap_caps_add_region>
400ebb88:	04a122        	movi	a2, 0x104
400ebb8b:	059a27        	bne	a10, a2, 400ebb94 <try_heap_caps_add_region+0x18>
400ebb8e:	00a022        	movi	a2, 0
400ebb91:	f01d      	retw.n
400ebb93:	0a2d00        	add.s	f2, f13, f0
400ebb96:	f01d      	retw.n

400ebb98 <esp_bt_controller_mem_release>:
400ebb98:	004136        	entry	a1, 32
400ebb9b:	941831        	l32r	a3, 400d0bfc <_flash_cache_start+0xbe4>
400ebb9e:	0338      	l32i.n	a3, a3, 0
400ebba0:	119356        	bnez	a3, 400ebcbd <esp_bt_controller_mem_release+0x125>
400ebba3:	941731        	l32r	a3, 400d0c00 <_flash_cache_start+0xbe8>
400ebba6:	0338      	l32i.n	a3, a3, 0
400ebba8:	028327        	bany	a3, a2, 400ebbae <esp_bt_controller_mem_release+0x16>
400ebbab:	004546        	j	400ebcc4 <esp_bt_controller_mem_release+0x12c>
400ebbae:	030c      	movi.n	a3, 0
400ebbb0:	1c0c      	movi.n	a12, 1
400ebbb2:	003086        	j	400ebc78 <esp_bt_controller_mem_release+0xe0>
400ebbb5:	909330        	addx2	a9, a3, a3
400ebbb8:	1189e0        	slli	a8, a9, 2
400ebbbb:	941191        	l32r	a9, 400d0c00 <_flash_cache_start+0xbe8>
400ebbbe:	898a      	add.n	a8, a9, a8
400ebbc0:	08a8      	l32i.n	a10, a8, 0
400ebbc2:	4a8c      	beqz.n	a10, 400ebbca <esp_bt_controller_mem_release+0x32>
400ebbc4:	1082a0        	and	a8, a2, a10
400ebbc7:	171a87        	beq	a10, a8, 400ebbe2 <esp_bt_controller_mem_release+0x4a>
400ebbca:	f87c      	movi.n	a8, -1
400ebbcc:	308820        	xor	a8, a8, a2
400ebbcf:	90b330        	addx2	a11, a3, a3
400ebbd2:	119be0        	slli	a9, a11, 2
400ebbd5:	940ab1        	l32r	a11, 400d0c00 <_flash_cache_start+0xbe8>
400ebbd8:	9b9a      	add.n	a9, a11, a9
400ebbda:	108a80        	and	a8, a10, a8
400ebbdd:	0989      	s32i.n	a8, a9, 0
400ebbdf:	0024c6        	j	400ebc76 <esp_bt_controller_mem_release+0xde>
400ebbe2:	f87c      	movi.n	a8, -1
400ebbe4:	308820        	xor	a8, a8, a2
400ebbe7:	90d330        	addx2	a13, a3, a3
400ebbea:	119de0        	slli	a9, a13, 2
400ebbed:	9404d1        	l32r	a13, 400d0c00 <_flash_cache_start+0xbe8>
400ebbf0:	9d9a      	add.n	a9, a13, a9
400ebbf2:	108a80        	and	a8, a10, a8
400ebbf5:	0989      	s32i.n	a8, a9, 0
400ebbf7:	ac8c      	beqz.n	a12, 400ebc05 <esp_bt_controller_mem_release+0x6d>
400ebbf9:	f03d      	nop.n
400ebbfb:	f03d      	nop.n
400ebbfd:	f03d      	nop.n
400ebbff:	f03d      	nop.n
400ebc01:	1948      	l32i.n	a4, a9, 4
400ebc03:	0c0c      	movi.n	a12, 0
400ebc05:	426bf6        	bgeui	a11, 6, 400ebc4b <esp_bt_controller_mem_release+0xb3>
400ebc08:	93fea1        	l32r	a10, 400d0c00 <_flash_cache_start+0xbe8>
400ebc0b:	908330        	addx2	a8, a3, a3
400ebc0e:	1198e0        	slli	a9, a8, 2
400ebc11:	9a9a      	add.n	a9, a10, a9
400ebc13:	29b8      	l32i.n	a11, a9, 8
400ebc15:	931b      	addi.n	a9, a3, 1
400ebc17:	90d990        	addx2	a13, a9, a9
400ebc1a:	118de0        	slli	a8, a13, 2
400ebc1d:	08dd      	mov.n	a13, a8
400ebc1f:	8a8a      	add.n	a8, a10, a8
400ebc21:	0888      	l32i.n	a8, a8, 0
400ebc23:	e88c      	beqz.n	a8, 400ebc35 <esp_bt_controller_mem_release+0x9d>
400ebc25:	10a280        	and	a10, a2, a8
400ebc28:	0998a7        	bne	a8, a10, 400ebc35 <esp_bt_controller_mem_release+0x9d>
400ebc2b:	93f591        	l32r	a9, 400d0c00 <_flash_cache_start+0xbe8>
400ebc2e:	89da      	add.n	a8, a9, a13
400ebc30:	1888      	l32i.n	a8, a8, 4
400ebc32:	401b87        	beq	a11, a8, 400ebc76 <esp_bt_controller_mem_release+0xde>
400ebc35:	04ad      	mov.n	a10, a4
400ebc37:	fff465        	call8	400ebb7c <try_heap_caps_add_region>
400ebc3a:	0abc      	beqz.n	a10, 400ebc6e <esp_bt_controller_mem_release+0xd6>
400ebc3c:	93f2e1        	l32r	a14, 400d0c04 <_flash_cache_start+0xbec>
400ebc3f:	93f2d1        	l32r	a13, 400d0c08 <_flash_cache_start+0xbf0>
400ebc42:	dfa3c2        	movi	a12, 0x3df
400ebc45:	93f1b1        	l32r	a11, 400d0c0c <_flash_cache_start+0xbf4>
400ebc48:	9f9fa5        	call8	4008b644 <_esp_error_check_failed>
400ebc4b:	909330        	addx2	a9, a3, a3
400ebc4e:	1189e0        	slli	a8, a9, 2
400ebc51:	93eb91        	l32r	a9, 400d0c00 <_flash_cache_start+0xbe8>
400ebc54:	898a      	add.n	a8, a9, a8
400ebc56:	28b8      	l32i.n	a11, a8, 8
400ebc58:	04ad      	mov.n	a10, a4
400ebc5a:	fff225        	call8	400ebb7c <try_heap_caps_add_region>
400ebc5d:	3a9c      	beqz.n	a10, 400ebc74 <esp_bt_controller_mem_release+0xdc>
400ebc5f:	93e9e1        	l32r	a14, 400d0c04 <_flash_cache_start+0xbec>
400ebc62:	93e9d1        	l32r	a13, 400d0c08 <_flash_cache_start+0xbf0>
400ebc65:	e5a3c2        	movi	a12, 0x3e5
400ebc68:	93e9b1        	l32r	a11, 400d0c0c <_flash_cache_start+0xbf4>
400ebc6b:	9f9da5        	call8	4008b644 <_esp_error_check_failed>
400ebc6e:	1c0c      	movi.n	a12, 1
400ebc70:	000086        	j	400ebc76 <esp_bt_controller_mem_release+0xde>
400ebc73:	1c0c00        	lsi	f0, a12, 112
400ebc76:	331b      	addi.n	a3, a3, 1
400ebc78:	03bd      	mov.n	a11, a3
400ebc7a:	0273f6        	bgeui	a3, 7, 400ebc80 <esp_bt_controller_mem_release+0xe8>
400ebc7d:	ffcd06        	j	400ebbb5 <esp_bt_controller_mem_release+0x1d>
400ebc80:	453266        	bnei	a2, 3, 400ebcc9 <esp_bt_controller_mem_release+0x131>
400ebc83:	93e3a1        	l32r	a10, 400d0c10 <_flash_cache_start+0xbf8>
400ebc86:	93e3b1        	l32r	a11, 400d0c14 <_flash_cache_start+0xbfc>
400ebc89:	131ab7        	beq	a10, a11, 400ebca0 <esp_bt_controller_mem_release+0x108>
400ebc8c:	ffeee5        	call8	400ebb7c <try_heap_caps_add_region>
400ebc8f:	da8c      	beqz.n	a10, 400ebca0 <esp_bt_controller_mem_release+0x108>
400ebc91:	93dce1        	l32r	a14, 400d0c04 <_flash_cache_start+0xbec>
400ebc94:	93ddd1        	l32r	a13, 400d0c08 <_flash_cache_start+0xbf0>
400ebc97:	efa3c2        	movi	a12, 0x3ef
400ebc9a:	93dcb1        	l32r	a11, 400d0c0c <_flash_cache_start+0xbf4>
400ebc9d:	9f9a65        	call8	4008b644 <_esp_error_check_failed>
400ebca0:	93dea1        	l32r	a10, 400d0c18 <_flash_cache_start+0xc00>
400ebca3:	93deb1        	l32r	a11, 400d0c1c <_flash_cache_start+0xc04>
400ebca6:	231ab7        	beq	a10, a11, 400ebccd <esp_bt_controller_mem_release+0x135>
400ebca9:	ffed25        	call8	400ebb7c <try_heap_caps_add_region>
400ebcac:	1aac      	beqz.n	a10, 400ebcd1 <esp_bt_controller_mem_release+0x139>
400ebcae:	93d5e1        	l32r	a14, 400d0c04 <_flash_cache_start+0xbec>
400ebcb1:	93d5d1        	l32r	a13, 400d0c08 <_flash_cache_start+0xbf0>
400ebcb4:	f5a3c2        	movi	a12, 0x3f5
400ebcb7:	93d5b1        	l32r	a11, 400d0c0c <_flash_cache_start+0xbf4>
400ebcba:	9f98a5        	call8	4008b644 <_esp_error_check_failed>
400ebcbd:	03a122        	movi	a2, 0x103
400ebcc0:	f01d      	retw.n
400ebcc2:	220000        	orb	b0, b0, b0
400ebcc5:	1d03a1        	l32r	a10, 400b30d4 <_iram_end+0x25580>
400ebcc8:	020cf0        	andb	b0, b12, b15
400ebccb:	f01d      	retw.n
400ebccd:	020c      	movi.n	a2, 0
400ebccf:	f01d      	retw.n
400ebcd1:	020c      	movi.n	a2, 0
400ebcd3:	f01d      	retw.n
400ebcd5:	000000        	ill

400ebcd8 <loop()>:
{
400ebcd8:	004136        	entry	a1, 32
400ebcdb:	017d      	mov.n	a7, a1
}
400ebcdd:	f03d      	nop.n
400ebcdf:	f01d      	retw.n
400ebce1:	000000        	ill

400ebce4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebce4:	006136        	entry	a1, 48
400ebce7:	017d      	mov.n	a7, a1
400ebce9:	37cb      	addi.n	a3, a7, 12
400ebceb:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebced:	27cb      	addi.n	a2, a7, 12
400ebcef:	0228      	l32i.n	a2, a2, 0
400ebcf1:	f01d      	retw.n
	...

400ebcf4 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebcf4:	006136        	entry	a1, 48
400ebcf7:	017d      	mov.n	a7, a1
400ebcf9:	47cb      	addi.n	a4, a7, 12
400ebcfb:	0429      	s32i.n	a2, a4, 0
400ebcfd:	278b      	addi.n	a2, a7, 8
400ebcff:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd01:	27cb      	addi.n	a2, a7, 12
400ebd03:	0228      	l32i.n	a2, a2, 0
400ebd05:	0238      	l32i.n	a3, a2, 0
400ebd07:	278b      	addi.n	a2, a7, 8
400ebd09:	0228      	l32i.n	a2, a2, 0
400ebd0b:	232a      	add.n	a2, a3, a2
400ebd0d:	f01d      	retw.n
	...

400ebd10 <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebd10:	006136        	entry	a1, 48
400ebd13:	017d      	mov.n	a7, a1
400ebd15:	47cb      	addi.n	a4, a7, 12
400ebd17:	0429      	s32i.n	a2, a4, 0
400ebd19:	278b      	addi.n	a2, a7, 8
400ebd1b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd1d:	27cb      	addi.n	a2, a7, 12
400ebd1f:	0228      	l32i.n	a2, a2, 0
400ebd21:	0238      	l32i.n	a3, a2, 0
400ebd23:	278b      	addi.n	a2, a7, 8
400ebd25:	0228      	l32i.n	a2, a2, 0
400ebd27:	1122f0        	slli	a2, a2, 1
400ebd2a:	232a      	add.n	a2, a3, a2
400ebd2c:	f01d      	retw.n
	...

400ebd30 <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebd30:	006136        	entry	a1, 48
400ebd33:	017d      	mov.n	a7, a1
400ebd35:	47cb      	addi.n	a4, a7, 12
400ebd37:	0429      	s32i.n	a2, a4, 0
400ebd39:	278b      	addi.n	a2, a7, 8
400ebd3b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd3d:	27cb      	addi.n	a2, a7, 12
400ebd3f:	0228      	l32i.n	a2, a2, 0
400ebd41:	0238      	l32i.n	a3, a2, 0
400ebd43:	278b      	addi.n	a2, a7, 8
400ebd45:	0228      	l32i.n	a2, a2, 0
400ebd47:	1122e0        	slli	a2, a2, 2
400ebd4a:	232a      	add.n	a2, a3, a2
400ebd4c:	f01d      	retw.n
	...

400ebd50 <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebd50:	006136        	entry	a1, 48
400ebd53:	017d      	mov.n	a7, a1
400ebd55:	47cb      	addi.n	a4, a7, 12
400ebd57:	0429      	s32i.n	a2, a4, 0
400ebd59:	278b      	addi.n	a2, a7, 8
400ebd5b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd5d:	27cb      	addi.n	a2, a7, 12
400ebd5f:	0228      	l32i.n	a2, a2, 0
400ebd61:	0238      	l32i.n	a3, a2, 0
400ebd63:	278b      	addi.n	a2, a7, 8
400ebd65:	0228      	l32i.n	a2, a2, 0
400ebd67:	1122d0        	slli	a2, a2, 3
400ebd6a:	232a      	add.n	a2, a3, a2
400ebd6c:	f01d      	retw.n
	...

400ebd70 <std::vector<float, std::allocator<float> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebd70:	006136        	entry	a1, 48
400ebd73:	017d      	mov.n	a7, a1
400ebd75:	47cb      	addi.n	a4, a7, 12
400ebd77:	0429      	s32i.n	a2, a4, 0
400ebd79:	278b      	addi.n	a2, a7, 8
400ebd7b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd7d:	27cb      	addi.n	a2, a7, 12
400ebd7f:	0228      	l32i.n	a2, a2, 0
400ebd81:	0238      	l32i.n	a3, a2, 0
400ebd83:	278b      	addi.n	a2, a7, 8
400ebd85:	0228      	l32i.n	a2, a2, 0
400ebd87:	1122e0        	slli	a2, a2, 2
400ebd8a:	232a      	add.n	a2, a3, a2
400ebd8c:	f01d      	retw.n
	...

400ebd90 <std::vector<double, std::allocator<double> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ebd90:	006136        	entry	a1, 48
400ebd93:	017d      	mov.n	a7, a1
400ebd95:	47cb      	addi.n	a4, a7, 12
400ebd97:	0429      	s32i.n	a2, a4, 0
400ebd99:	278b      	addi.n	a2, a7, 8
400ebd9b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ebd9d:	27cb      	addi.n	a2, a7, 12
400ebd9f:	0228      	l32i.n	a2, a2, 0
400ebda1:	0238      	l32i.n	a3, a2, 0
400ebda3:	278b      	addi.n	a2, a7, 8
400ebda5:	0228      	l32i.n	a2, a2, 0
400ebda7:	1122d0        	slli	a2, a2, 3
400ebdaa:	232a      	add.n	a2, a3, a2
400ebdac:	f01d      	retw.n
	...

400ebdb0 <__gnu_cxx::new_allocator<unsigned char>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebdb0:	006136        	entry	a1, 48
400ebdb3:	017d      	mov.n	a7, a1
400ebdb5:	37cb      	addi.n	a3, a7, 12
400ebdb7:	0329      	s32i.n	a2, a3, 0
400ebdb9:	f03d      	nop.n
400ebdbb:	f01d      	retw.n
400ebdbd:	000000        	ill

400ebdc0 <__gnu_cxx::new_allocator<unsigned char>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebdc0:	006136        	entry	a1, 48
400ebdc3:	017d      	mov.n	a7, a1
400ebdc5:	37cb      	addi.n	a3, a7, 12
400ebdc7:	0329      	s32i.n	a2, a3, 0
400ebdc9:	f03d      	nop.n
400ebdcb:	f01d      	retw.n
400ebdcd:	000000        	ill

400ebdd0 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebdd0:	006136        	entry	a1, 48
400ebdd3:	017d      	mov.n	a7, a1
400ebdd5:	37cb      	addi.n	a3, a7, 12
400ebdd7:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebdd9:	27cb      	addi.n	a2, a7, 12
400ebddb:	0228      	l32i.n	a2, a2, 0
400ebddd:	f01d      	retw.n
	...

400ebde0 <__gnu_cxx::new_allocator<unsigned short>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebde0:	006136        	entry	a1, 48
400ebde3:	017d      	mov.n	a7, a1
400ebde5:	37cb      	addi.n	a3, a7, 12
400ebde7:	0329      	s32i.n	a2, a3, 0
400ebde9:	f03d      	nop.n
400ebdeb:	f01d      	retw.n
400ebded:	000000        	ill

400ebdf0 <__gnu_cxx::new_allocator<unsigned short>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebdf0:	006136        	entry	a1, 48
400ebdf3:	017d      	mov.n	a7, a1
400ebdf5:	37cb      	addi.n	a3, a7, 12
400ebdf7:	0329      	s32i.n	a2, a3, 0
400ebdf9:	f03d      	nop.n
400ebdfb:	f01d      	retw.n
400ebdfd:	000000        	ill

400ebe00 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebe00:	006136        	entry	a1, 48
400ebe03:	017d      	mov.n	a7, a1
400ebe05:	37cb      	addi.n	a3, a7, 12
400ebe07:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebe09:	27cb      	addi.n	a2, a7, 12
400ebe0b:	0228      	l32i.n	a2, a2, 0
400ebe0d:	f01d      	retw.n
	...

400ebe10 <__gnu_cxx::new_allocator<unsigned int>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe10:	006136        	entry	a1, 48
400ebe13:	017d      	mov.n	a7, a1
400ebe15:	37cb      	addi.n	a3, a7, 12
400ebe17:	0329      	s32i.n	a2, a3, 0
400ebe19:	f03d      	nop.n
400ebe1b:	f01d      	retw.n
400ebe1d:	000000        	ill

400ebe20 <__gnu_cxx::new_allocator<unsigned int>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe20:	006136        	entry	a1, 48
400ebe23:	017d      	mov.n	a7, a1
400ebe25:	37cb      	addi.n	a3, a7, 12
400ebe27:	0329      	s32i.n	a2, a3, 0
400ebe29:	f03d      	nop.n
400ebe2b:	f01d      	retw.n
400ebe2d:	000000        	ill

400ebe30 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe30:	006136        	entry	a1, 48
400ebe33:	017d      	mov.n	a7, a1
400ebe35:	37cb      	addi.n	a3, a7, 12
400ebe37:	0329      	s32i.n	a2, a3, 0
400ebe39:	f03d      	nop.n
400ebe3b:	f01d      	retw.n
400ebe3d:	000000        	ill

400ebe40 <__gnu_cxx::new_allocator<unsigned long long>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe40:	006136        	entry	a1, 48
400ebe43:	017d      	mov.n	a7, a1
400ebe45:	37cb      	addi.n	a3, a7, 12
400ebe47:	0329      	s32i.n	a2, a3, 0
400ebe49:	f03d      	nop.n
400ebe4b:	f01d      	retw.n
400ebe4d:	000000        	ill

400ebe50 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebe50:	006136        	entry	a1, 48
400ebe53:	017d      	mov.n	a7, a1
400ebe55:	37cb      	addi.n	a3, a7, 12
400ebe57:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebe59:	27cb      	addi.n	a2, a7, 12
400ebe5b:	0228      	l32i.n	a2, a2, 0
400ebe5d:	f01d      	retw.n
	...

400ebe60 <__gnu_cxx::new_allocator<float>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe60:	006136        	entry	a1, 48
400ebe63:	017d      	mov.n	a7, a1
400ebe65:	37cb      	addi.n	a3, a7, 12
400ebe67:	0329      	s32i.n	a2, a3, 0
400ebe69:	f03d      	nop.n
400ebe6b:	f01d      	retw.n
400ebe6d:	000000        	ill

400ebe70 <__gnu_cxx::new_allocator<float>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe70:	006136        	entry	a1, 48
400ebe73:	017d      	mov.n	a7, a1
400ebe75:	37cb      	addi.n	a3, a7, 12
400ebe77:	0329      	s32i.n	a2, a3, 0
400ebe79:	f03d      	nop.n
400ebe7b:	f01d      	retw.n
400ebe7d:	000000        	ill

400ebe80 <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebe80:	006136        	entry	a1, 48
400ebe83:	017d      	mov.n	a7, a1
400ebe85:	37cb      	addi.n	a3, a7, 12
400ebe87:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebe89:	27cb      	addi.n	a2, a7, 12
400ebe8b:	0228      	l32i.n	a2, a2, 0
400ebe8d:	f01d      	retw.n
	...

400ebe90 <__gnu_cxx::new_allocator<double>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebe90:	006136        	entry	a1, 48
400ebe93:	017d      	mov.n	a7, a1
400ebe95:	37cb      	addi.n	a3, a7, 12
400ebe97:	0329      	s32i.n	a2, a3, 0
400ebe99:	f03d      	nop.n
400ebe9b:	f01d      	retw.n
400ebe9d:	000000        	ill

400ebea0 <__gnu_cxx::new_allocator<double>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ebea0:	006136        	entry	a1, 48
400ebea3:	017d      	mov.n	a7, a1
400ebea5:	37cb      	addi.n	a3, a7, 12
400ebea7:	0329      	s32i.n	a2, a3, 0
400ebea9:	f03d      	nop.n
400ebeab:	f01d      	retw.n
400ebead:	000000        	ill

400ebeb0 <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ebeb0:	006136        	entry	a1, 48
400ebeb3:	017d      	mov.n	a7, a1
400ebeb5:	37cb      	addi.n	a3, a7, 12
400ebeb7:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ebeb9:	27cb      	addi.n	a2, a7, 12
400ebebb:	0228      	l32i.n	a2, a2, 0
400ebebd:	f01d      	retw.n
	...

400ebec0 <void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*)>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
400ebec0:	006136        	entry	a1, 48
400ebec3:	017d      	mov.n	a7, a1
400ebec5:	47cb      	addi.n	a4, a7, 12
400ebec7:	0429      	s32i.n	a2, a4, 0
400ebec9:	278b      	addi.n	a2, a7, 8
400ebecb:	0239      	s32i.n	a3, a2, 0
400ebecd:	f03d      	nop.n
400ebecf:	f01d      	retw.n
400ebed1:	000000        	ill

400ebed4 <void std::_Destroy_aux<true>::__destroy<unsigned char*>(unsigned char*, unsigned char*)>:
400ebed4:	006136        	entry	a1, 48
400ebed7:	017d      	mov.n	a7, a1
400ebed9:	47cb      	addi.n	a4, a7, 12
400ebedb:	0429      	s32i.n	a2, a4, 0
400ebedd:	278b      	addi.n	a2, a7, 8
400ebedf:	0239      	s32i.n	a3, a2, 0
400ebee1:	f03d      	nop.n
400ebee3:	f01d      	retw.n
400ebee5:	000000        	ill

400ebee8 <void std::_Destroy_aux<true>::__destroy<unsigned short*>(unsigned short*, unsigned short*)>:
400ebee8:	006136        	entry	a1, 48
400ebeeb:	017d      	mov.n	a7, a1
400ebeed:	47cb      	addi.n	a4, a7, 12
400ebeef:	0429      	s32i.n	a2, a4, 0
400ebef1:	278b      	addi.n	a2, a7, 8
400ebef3:	0239      	s32i.n	a3, a2, 0
400ebef5:	f03d      	nop.n
400ebef7:	f01d      	retw.n
400ebef9:	000000        	ill

400ebefc <void std::_Destroy_aux<true>::__destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>:
400ebefc:	006136        	entry	a1, 48
400ebeff:	017d      	mov.n	a7, a1
400ebf01:	47cb      	addi.n	a4, a7, 12
400ebf03:	0429      	s32i.n	a2, a4, 0
400ebf05:	278b      	addi.n	a2, a7, 8
400ebf07:	0239      	s32i.n	a3, a2, 0
400ebf09:	f03d      	nop.n
400ebf0b:	f01d      	retw.n
400ebf0d:	000000        	ill

400ebf10 <void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)>:
400ebf10:	006136        	entry	a1, 48
400ebf13:	017d      	mov.n	a7, a1
400ebf15:	47cb      	addi.n	a4, a7, 12
400ebf17:	0429      	s32i.n	a2, a4, 0
400ebf19:	278b      	addi.n	a2, a7, 8
400ebf1b:	0239      	s32i.n	a3, a2, 0
400ebf1d:	f03d      	nop.n
400ebf1f:	f01d      	retw.n
400ebf21:	000000        	ill

400ebf24 <void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)>:
400ebf24:	006136        	entry	a1, 48
400ebf27:	017d      	mov.n	a7, a1
400ebf29:	47cb      	addi.n	a4, a7, 12
400ebf2b:	0429      	s32i.n	a2, a4, 0
400ebf2d:	278b      	addi.n	a2, a7, 8
400ebf2f:	0239      	s32i.n	a3, a2, 0
400ebf31:	f03d      	nop.n
400ebf33:	f01d      	retw.n
400ebf35:	000000        	ill

400ebf38 <__gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&)>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
400ebf38:	006136        	entry	a1, 48
400ebf3b:	017d      	mov.n	a7, a1
400ebf3d:	47cb      	addi.n	a4, a7, 12
400ebf3f:	0429      	s32i.n	a2, a4, 0
400ebf41:	278b      	addi.n	a2, a7, 8
400ebf43:	0239      	s32i.n	a3, a2, 0
400ebf45:	f03d      	nop.n
400ebf47:	f01d      	retw.n
400ebf49:	000000        	ill

400ebf4c <__gnu_cxx::new_allocator<unsigned short>::new_allocator(__gnu_cxx::new_allocator<unsigned short> const&)>:
400ebf4c:	006136        	entry	a1, 48
400ebf4f:	017d      	mov.n	a7, a1
400ebf51:	47cb      	addi.n	a4, a7, 12
400ebf53:	0429      	s32i.n	a2, a4, 0
400ebf55:	278b      	addi.n	a2, a7, 8
400ebf57:	0239      	s32i.n	a3, a2, 0
400ebf59:	f03d      	nop.n
400ebf5b:	f01d      	retw.n
400ebf5d:	000000        	ill

400ebf60 <__gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&)>:
400ebf60:	006136        	entry	a1, 48
400ebf63:	017d      	mov.n	a7, a1
400ebf65:	47cb      	addi.n	a4, a7, 12
400ebf67:	0429      	s32i.n	a2, a4, 0
400ebf69:	278b      	addi.n	a2, a7, 8
400ebf6b:	0239      	s32i.n	a3, a2, 0
400ebf6d:	f03d      	nop.n
400ebf6f:	f01d      	retw.n
400ebf71:	000000        	ill

400ebf74 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator(__gnu_cxx::new_allocator<unsigned long long> const&)>:
400ebf74:	006136        	entry	a1, 48
400ebf77:	017d      	mov.n	a7, a1
400ebf79:	47cb      	addi.n	a4, a7, 12
400ebf7b:	0429      	s32i.n	a2, a4, 0
400ebf7d:	278b      	addi.n	a2, a7, 8
400ebf7f:	0239      	s32i.n	a3, a2, 0
400ebf81:	f03d      	nop.n
400ebf83:	f01d      	retw.n
400ebf85:	000000        	ill

400ebf88 <__gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)>:
400ebf88:	006136        	entry	a1, 48
400ebf8b:	017d      	mov.n	a7, a1
400ebf8d:	47cb      	addi.n	a4, a7, 12
400ebf8f:	0429      	s32i.n	a2, a4, 0
400ebf91:	278b      	addi.n	a2, a7, 8
400ebf93:	0239      	s32i.n	a3, a2, 0
400ebf95:	f03d      	nop.n
400ebf97:	f01d      	retw.n
400ebf99:	000000        	ill

400ebf9c <__gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)>:
400ebf9c:	006136        	entry	a1, 48
400ebf9f:	017d      	mov.n	a7, a1
400ebfa1:	47cb      	addi.n	a4, a7, 12
400ebfa3:	0429      	s32i.n	a2, a4, 0
400ebfa5:	278b      	addi.n	a2, a7, 8
400ebfa7:	0239      	s32i.n	a3, a2, 0
400ebfa9:	f03d      	nop.n
400ebfab:	f01d      	retw.n
400ebfad:	000000        	ill

400ebfb0 <__gnu_cxx::new_allocator<unsigned char>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400ebfb0:	006136        	entry	a1, 48
400ebfb3:	017d      	mov.n	a7, a1
400ebfb5:	37cb      	addi.n	a3, a7, 12
400ebfb7:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400ebfb9:	f27c      	movi.n	a2, -1
400ebfbb:	f01d      	retw.n
400ebfbd:	000000        	ill

400ebfc0 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ebfc0:	008136        	entry	a1, 64
400ebfc3:	017d      	mov.n	a7, a1
400ebfc5:	57cb      	addi.n	a5, a7, 12
400ebfc7:	0529      	s32i.n	a2, a5, 0
400ebfc9:	278b      	addi.n	a2, a7, 8
400ebfcb:	0239      	s32i.n	a3, a2, 0
400ebfcd:	274b      	addi.n	a2, a7, 4
400ebfcf:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ebfd1:	1ac722        	addi	a2, a7, 26
400ebfd4:	374b      	addi.n	a3, a7, 4
400ebfd6:	0338      	l32i.n	a3, a3, 0
400ebfd8:	001332        	l16ui	a3, a3, 0
400ebfdb:	005232        	s16i	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ebfde:	1cc722        	addi	a2, a7, 28
400ebfe1:	378b      	addi.n	a3, a7, 8
400ebfe3:	0338      	l32i.n	a3, a3, 0
400ebfe5:	0239      	s32i.n	a3, a2, 0
400ebfe7:	1cc722        	addi	a2, a7, 28
400ebfea:	0228      	l32i.n	a2, a2, 0
400ebfec:	42ac      	beqz.n	a2, 400ec014 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)+0x54>
	*__first = __tmp;
400ebfee:	27cb      	addi.n	a2, a7, 12
400ebff0:	0228      	l32i.n	a2, a2, 0
400ebff2:	1ac732        	addi	a3, a7, 26
400ebff5:	001332        	l16ui	a3, a3, 0
400ebff8:	005232        	s16i	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ebffb:	1cc722        	addi	a2, a7, 28
400ebffe:	1cc732        	addi	a3, a7, 28
400ec001:	0338      	l32i.n	a3, a3, 0
400ec003:	330b      	addi.n	a3, a3, -1
400ec005:	0239      	s32i.n	a3, a2, 0
400ec007:	27cb      	addi.n	a2, a7, 12
400ec009:	37cb      	addi.n	a3, a7, 12
400ec00b:	0338      	l32i.n	a3, a3, 0
400ec00d:	332b      	addi.n	a3, a3, 2
400ec00f:	0239      	s32i.n	a3, a2, 0
400ec011:	fff486        	j	400ebfe7 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)+0x27>
      return __first;
400ec014:	27cb      	addi.n	a2, a7, 12
400ec016:	0228      	l32i.n	a2, a2, 0
    }
400ec018:	f01d      	retw.n
	...

400ec01c <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec01c:	008136        	entry	a1, 64
400ec01f:	017d      	mov.n	a7, a1
400ec021:	57cb      	addi.n	a5, a7, 12
400ec023:	0529      	s32i.n	a2, a5, 0
400ec025:	278b      	addi.n	a2, a7, 8
400ec027:	0239      	s32i.n	a3, a2, 0
400ec029:	274b      	addi.n	a2, a7, 4
400ec02b:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec02d:	1cc722        	addi	a2, a7, 28
400ec030:	374b      	addi.n	a3, a7, 4
400ec032:	0338      	l32i.n	a3, a3, 0
400ec034:	0338      	l32i.n	a3, a3, 0
400ec036:	0239      	s32i.n	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec038:	18c722        	addi	a2, a7, 24
400ec03b:	378b      	addi.n	a3, a7, 8
400ec03d:	0338      	l32i.n	a3, a3, 0
400ec03f:	0239      	s32i.n	a3, a2, 0
400ec041:	18c722        	addi	a2, a7, 24
400ec044:	0228      	l32i.n	a2, a2, 0
400ec046:	22ac      	beqz.n	a2, 400ec06c <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)+0x50>
	*__first = __tmp;
400ec048:	27cb      	addi.n	a2, a7, 12
400ec04a:	0228      	l32i.n	a2, a2, 0
400ec04c:	1cc732        	addi	a3, a7, 28
400ec04f:	0338      	l32i.n	a3, a3, 0
400ec051:	0239      	s32i.n	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec053:	18c722        	addi	a2, a7, 24
400ec056:	18c732        	addi	a3, a7, 24
400ec059:	0338      	l32i.n	a3, a3, 0
400ec05b:	330b      	addi.n	a3, a3, -1
400ec05d:	0239      	s32i.n	a3, a2, 0
400ec05f:	27cb      	addi.n	a2, a7, 12
400ec061:	37cb      	addi.n	a3, a7, 12
400ec063:	0338      	l32i.n	a3, a3, 0
400ec065:	334b      	addi.n	a3, a3, 4
400ec067:	0239      	s32i.n	a3, a2, 0
400ec069:	fff506        	j	400ec041 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)+0x25>
      return __first;
400ec06c:	27cb      	addi.n	a2, a7, 12
400ec06e:	0228      	l32i.n	a2, a2, 0
    }
400ec070:	f01d      	retw.n
	...

400ec074 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec074:	008136        	entry	a1, 64
400ec077:	017d      	mov.n	a7, a1
400ec079:	57cb      	addi.n	a5, a7, 12
400ec07b:	0529      	s32i.n	a2, a5, 0
400ec07d:	278b      	addi.n	a2, a7, 8
400ec07f:	0239      	s32i.n	a3, a2, 0
400ec081:	274b      	addi.n	a2, a7, 4
400ec083:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec085:	18c742        	addi	a4, a7, 24
400ec088:	274b      	addi.n	a2, a7, 4
400ec08a:	0228      	l32i.n	a2, a2, 0
400ec08c:	1238      	l32i.n	a3, a2, 4
400ec08e:	0228      	l32i.n	a2, a2, 0
400ec090:	0429      	s32i.n	a2, a4, 0
400ec092:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec094:	14c722        	addi	a2, a7, 20
400ec097:	378b      	addi.n	a3, a7, 8
400ec099:	0338      	l32i.n	a3, a3, 0
400ec09b:	0239      	s32i.n	a3, a2, 0
400ec09d:	14c722        	addi	a2, a7, 20
400ec0a0:	0228      	l32i.n	a2, a2, 0
400ec0a2:	62ac      	beqz.n	a2, 400ec0cc <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)+0x58>
	*__first = __tmp;
400ec0a4:	27cb      	addi.n	a2, a7, 12
400ec0a6:	0248      	l32i.n	a4, a2, 0
400ec0a8:	18c722        	addi	a2, a7, 24
400ec0ab:	1238      	l32i.n	a3, a2, 4
400ec0ad:	0228      	l32i.n	a2, a2, 0
400ec0af:	0429      	s32i.n	a2, a4, 0
400ec0b1:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec0b3:	14c722        	addi	a2, a7, 20
400ec0b6:	14c732        	addi	a3, a7, 20
400ec0b9:	0338      	l32i.n	a3, a3, 0
400ec0bb:	330b      	addi.n	a3, a3, -1
400ec0bd:	0239      	s32i.n	a3, a2, 0
400ec0bf:	27cb      	addi.n	a2, a7, 12
400ec0c1:	37cb      	addi.n	a3, a7, 12
400ec0c3:	0338      	l32i.n	a3, a3, 0
400ec0c5:	338b      	addi.n	a3, a3, 8
400ec0c7:	0239      	s32i.n	a3, a2, 0
400ec0c9:	fff406        	j	400ec09d <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)+0x29>
      return __first;
400ec0cc:	27cb      	addi.n	a2, a7, 12
400ec0ce:	0228      	l32i.n	a2, a2, 0
    }
400ec0d0:	f01d      	retw.n
	...

400ec0d4 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec0d4:	008136        	entry	a1, 64
400ec0d7:	017d      	mov.n	a7, a1
400ec0d9:	57cb      	addi.n	a5, a7, 12
400ec0db:	0529      	s32i.n	a2, a5, 0
400ec0dd:	278b      	addi.n	a2, a7, 8
400ec0df:	0239      	s32i.n	a3, a2, 0
400ec0e1:	274b      	addi.n	a2, a7, 4
400ec0e3:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec0e5:	1cc722        	addi	a2, a7, 28
400ec0e8:	374b      	addi.n	a3, a7, 4
400ec0ea:	0338      	l32i.n	a3, a3, 0
400ec0ec:	000303        	lsi	f0, a3, 0
400ec0ef:	004203        	ssi	f0, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec0f2:	18c722        	addi	a2, a7, 24
400ec0f5:	378b      	addi.n	a3, a7, 8
400ec0f7:	0338      	l32i.n	a3, a3, 0
400ec0f9:	0239      	s32i.n	a3, a2, 0
400ec0fb:	18c722        	addi	a2, a7, 24
400ec0fe:	0228      	l32i.n	a2, a2, 0
400ec100:	42ac      	beqz.n	a2, 400ec128 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)+0x54>
	*__first = __tmp;
400ec102:	27cb      	addi.n	a2, a7, 12
400ec104:	0228      	l32i.n	a2, a2, 0
400ec106:	1cc732        	addi	a3, a7, 28
400ec109:	000303        	lsi	f0, a3, 0
400ec10c:	004203        	ssi	f0, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec10f:	18c722        	addi	a2, a7, 24
400ec112:	18c732        	addi	a3, a7, 24
400ec115:	0338      	l32i.n	a3, a3, 0
400ec117:	330b      	addi.n	a3, a3, -1
400ec119:	0239      	s32i.n	a3, a2, 0
400ec11b:	27cb      	addi.n	a2, a7, 12
400ec11d:	37cb      	addi.n	a3, a7, 12
400ec11f:	0338      	l32i.n	a3, a3, 0
400ec121:	334b      	addi.n	a3, a3, 4
400ec123:	0239      	s32i.n	a3, a2, 0
400ec125:	fff486        	j	400ec0fb <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)+0x27>
      return __first;
400ec128:	27cb      	addi.n	a2, a7, 12
400ec12a:	0228      	l32i.n	a2, a2, 0
    }
400ec12c:	f01d      	retw.n
	...

400ec130 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec130:	008136        	entry	a1, 64
400ec133:	017d      	mov.n	a7, a1
400ec135:	57cb      	addi.n	a5, a7, 12
400ec137:	0529      	s32i.n	a2, a5, 0
400ec139:	278b      	addi.n	a2, a7, 8
400ec13b:	0239      	s32i.n	a3, a2, 0
400ec13d:	274b      	addi.n	a2, a7, 4
400ec13f:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec141:	18c742        	addi	a4, a7, 24
400ec144:	274b      	addi.n	a2, a7, 4
400ec146:	0228      	l32i.n	a2, a2, 0
400ec148:	1238      	l32i.n	a3, a2, 4
400ec14a:	0228      	l32i.n	a2, a2, 0
400ec14c:	0429      	s32i.n	a2, a4, 0
400ec14e:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec150:	14c722        	addi	a2, a7, 20
400ec153:	378b      	addi.n	a3, a7, 8
400ec155:	0338      	l32i.n	a3, a3, 0
400ec157:	0239      	s32i.n	a3, a2, 0
400ec159:	14c722        	addi	a2, a7, 20
400ec15c:	0228      	l32i.n	a2, a2, 0
400ec15e:	62ac      	beqz.n	a2, 400ec188 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)+0x58>
	*__first = __tmp;
400ec160:	27cb      	addi.n	a2, a7, 12
400ec162:	0248      	l32i.n	a4, a2, 0
400ec164:	18c722        	addi	a2, a7, 24
400ec167:	1238      	l32i.n	a3, a2, 4
400ec169:	0228      	l32i.n	a2, a2, 0
400ec16b:	0429      	s32i.n	a2, a4, 0
400ec16d:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec16f:	14c722        	addi	a2, a7, 20
400ec172:	14c732        	addi	a3, a7, 20
400ec175:	0338      	l32i.n	a3, a3, 0
400ec177:	330b      	addi.n	a3, a3, -1
400ec179:	0239      	s32i.n	a3, a2, 0
400ec17b:	27cb      	addi.n	a2, a7, 12
400ec17d:	37cb      	addi.n	a3, a7, 12
400ec17f:	0338      	l32i.n	a3, a3, 0
400ec181:	338b      	addi.n	a3, a3, 8
400ec183:	0239      	s32i.n	a3, a2, 0
400ec185:	fff406        	j	400ec159 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)+0x29>
      return __first;
400ec188:	27cb      	addi.n	a2, a7, 12
400ec18a:	0228      	l32i.n	a2, a2, 0
    }
400ec18c:	f01d      	retw.n
	...

400ec190 <std::_Iter_base<unsigned char*, false>::_S_base(unsigned char*)>:
  // untouched
  template<typename _Iterator, bool _HasBase>
    struct _Iter_base
    {
      typedef _Iterator iterator_type;
      static iterator_type _S_base(_Iterator __it)
400ec190:	006136        	entry	a1, 48
400ec193:	017d      	mov.n	a7, a1
400ec195:	37cb      	addi.n	a3, a7, 12
400ec197:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec199:	27cb      	addi.n	a2, a7, 12
400ec19b:	0228      	l32i.n	a2, a2, 0
400ec19d:	f01d      	retw.n
	...

400ec1a0 <std::_Iter_base<unsigned short*, false>::_S_base(unsigned short*)>:
      static iterator_type _S_base(_Iterator __it)
400ec1a0:	006136        	entry	a1, 48
400ec1a3:	017d      	mov.n	a7, a1
400ec1a5:	37cb      	addi.n	a3, a7, 12
400ec1a7:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec1a9:	27cb      	addi.n	a2, a7, 12
400ec1ab:	0228      	l32i.n	a2, a2, 0
400ec1ad:	f01d      	retw.n
	...

400ec1b0 <std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*)>:
      static iterator_type _S_base(_Iterator __it)
400ec1b0:	006136        	entry	a1, 48
400ec1b3:	017d      	mov.n	a7, a1
400ec1b5:	37cb      	addi.n	a3, a7, 12
400ec1b7:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec1b9:	27cb      	addi.n	a2, a7, 12
400ec1bb:	0228      	l32i.n	a2, a2, 0
400ec1bd:	f01d      	retw.n
	...

400ec1c0 <std::_Iter_base<unsigned long long*, false>::_S_base(unsigned long long*)>:
      static iterator_type _S_base(_Iterator __it)
400ec1c0:	006136        	entry	a1, 48
400ec1c3:	017d      	mov.n	a7, a1
400ec1c5:	37cb      	addi.n	a3, a7, 12
400ec1c7:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec1c9:	27cb      	addi.n	a2, a7, 12
400ec1cb:	0228      	l32i.n	a2, a2, 0
400ec1cd:	f01d      	retw.n
	...

400ec1d0 <std::_Iter_base<float*, false>::_S_base(float*)>:
      static iterator_type _S_base(_Iterator __it)
400ec1d0:	006136        	entry	a1, 48
400ec1d3:	017d      	mov.n	a7, a1
400ec1d5:	37cb      	addi.n	a3, a7, 12
400ec1d7:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec1d9:	27cb      	addi.n	a2, a7, 12
400ec1db:	0228      	l32i.n	a2, a2, 0
400ec1dd:	f01d      	retw.n
	...

400ec1e0 <std::_Iter_base<double*, false>::_S_base(double*)>:
      static iterator_type _S_base(_Iterator __it)
400ec1e0:	006136        	entry	a1, 48
400ec1e3:	017d      	mov.n	a7, a1
400ec1e5:	37cb      	addi.n	a3, a7, 12
400ec1e7:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec1e9:	27cb      	addi.n	a2, a7, 12
400ec1eb:	0228      	l32i.n	a2, a2, 0
400ec1ed:	f01d      	retw.n
	...

400ec1f0 <Print::print(char)>:
{
400ec1f0:	006136        	entry	a1, 48
400ec1f3:	017d      	mov.n	a7, a1
400ec1f5:	47cb      	addi.n	a4, a7, 12
400ec1f7:	0429      	s32i.n	a2, a4, 0
400ec1f9:	278b      	addi.n	a2, a7, 8
400ec1fb:	004232        	s8i	a3, a2, 0
    return write(c);
400ec1fe:	27cb      	addi.n	a2, a7, 12
400ec200:	0228      	l32i.n	a2, a2, 0
400ec202:	0228      	l32i.n	a2, a2, 0
400ec204:	228b      	addi.n	a2, a2, 8
400ec206:	0228      	l32i.n	a2, a2, 0
400ec208:	378b      	addi.n	a3, a7, 8
400ec20a:	000342        	l8ui	a4, a3, 0
400ec20d:	37cb      	addi.n	a3, a7, 12
400ec20f:	04bd      	mov.n	a11, a4
400ec211:	03a8      	l32i.n	a10, a3, 0
400ec213:	0002e0        	callx8	a2
400ec216:	0a2d      	mov.n	a2, a10
}
400ec218:	f01d      	retw.n
	...

400ec21c <String::setSSO(bool)>:
        inline void setSSO(bool set) { sso.isSSO = set; }
400ec21c:	006136        	entry	a1, 48
400ec21f:	017d      	mov.n	a7, a1
400ec221:	47cb      	addi.n	a4, a7, 12
400ec223:	0429      	s32i.n	a2, a4, 0
400ec225:	278b      	addi.n	a2, a7, 8
400ec227:	004232        	s8i	a3, a2, 0
400ec22a:	278b      	addi.n	a2, a7, 8
400ec22c:	000222        	l8ui	a2, a2, 0
400ec22f:	042020        	extui	a2, a2, 0, 1
400ec232:	743020        	extui	a3, a2, 0, 8
400ec235:	27cb      	addi.n	a2, a7, 12
400ec237:	0228      	l32i.n	a2, a2, 0
400ec239:	113390        	slli	a3, a3, 7
400ec23c:	0b0242        	l8ui	a4, a2, 11
400ec23f:	644040        	extui	a4, a4, 0, 7
400ec242:	203430        	or	a3, a4, a3
400ec245:	0b4232        	s8i	a3, a2, 11
400ec248:	f03d      	nop.n
400ec24a:	f01d      	retw.n

400ec24c <__cxx_eh_arena_size_get>:
400ec24c:	004136        	entry	a1, 32
400ec24f:	020c      	movi.n	a2, 0
400ec251:	f01d      	retw.n
	...

400ec254 <esp_task_wdt_isr_user_handler>:
400ec254:	004136        	entry	a1, 32
400ec257:	f01d      	retw.n
400ec259:	000000        	ill

400ec25c <esp_pm_impl_waiti>:
400ec25c:	004136        	entry	a1, 32
400ec25f:	007000        	waiti	0
400ec262:	f01d      	retw.n

400ec264 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)>:
400ec264:	004136        	entry	a1, 32
400ec267:	c08320        	sub	a8, a3, a2
400ec26a:	218480        	srai	a8, a8, 4
400ec26d:	2318a6        	blti	a8, 1, 400ec294 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x30>
400ec270:	02a8      	l32i.n	a10, a2, 0
400ec272:	580a66        	bnei	a10, -1, 400ec2ce <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec275:	924b      	addi.n	a9, a2, 4
400ec277:	12a8      	l32i.n	a10, a2, 4
400ec279:	3f0a66        	bnei	a10, -1, 400ec2bc <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x58>
400ec27c:	928b      	addi.n	a9, a2, 8
400ec27e:	22a8      	l32i.n	a10, a2, 8
400ec280:	3c0a66        	bnei	a10, -1, 400ec2c0 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x5c>
400ec283:	92cb      	addi.n	a9, a2, 12
400ec285:	32a8      	l32i.n	a10, a2, 12
400ec287:	390a66        	bnei	a10, -1, 400ec2c4 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x60>
400ec28a:	10c222        	addi	a2, a2, 16
400ec28d:	880b      	addi.n	a8, a8, -1
400ec28f:	fff686        	j	400ec26d <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x9>
400ec292:	200000        	or	a0, a0, a0
400ec295:	80c083        	ssip	f8, a0, 0x200
400ec298:	262182        	l32i	a8, a1, 152
400ec29b:	0f28      	l32i.n	a2, a15, 0
400ec29d:	053826        	beqi	a8, 3, 400ec2a6 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x42>
400ec2a0:	241866        	bnei	a8, 1, 400ec2c8 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x64>
400ec2a3:	000346        	j	400ec2b4 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x50>
400ec2a6:	0288      	l32i.n	a8, a2, 0
400ec2a8:	220866        	bnei	a8, -1, 400ec2ce <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec2ab:	224b      	addi.n	a2, a2, 4
400ec2ad:	0288      	l32i.n	a8, a2, 0
400ec2af:	1b0866        	bnei	a8, -1, 400ec2ce <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec2b2:	224b      	addi.n	a2, a2, 4
400ec2b4:	0288      	l32i.n	a8, a2, 0
400ec2b6:	120826        	beqi	a8, -1, 400ec2cc <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x68>
400ec2b9:	f01d      	retw.n
400ec2bb:	092d00        	l32e	a0, a13, -56
400ec2be:	f01d      	retw.n
400ec2c0:	092d      	mov.n	a2, a9
400ec2c2:	f01d      	retw.n
400ec2c4:	092d      	mov.n	a2, a9
400ec2c6:	f01d      	retw.n
400ec2c8:	032d      	mov.n	a2, a3
400ec2ca:	f01d      	retw.n
400ec2cc:	032d      	mov.n	a2, a3
400ec2ce:	f01d      	retw.n

400ec2d0 <nvs::HashList::HashList()>:
400ec2d0:	004136        	entry	a1, 32
400ec2d3:	080c      	movi.n	a8, 0
400ec2d5:	0289      	s32i.n	a8, a2, 0
400ec2d7:	1289      	s32i.n	a8, a2, 4
400ec2d9:	2289      	s32i.n	a8, a2, 8
400ec2db:	f01d      	retw.n
400ec2dd:	000000        	ill

400ec2e0 <nvs::HashList::HashListBlock::HashListBlock()>:
400ec2e0:	004136        	entry	a1, 32
400ec2e3:	080c      	movi.n	a8, 0
400ec2e5:	0289      	s32i.n	a8, a2, 0
400ec2e7:	1289      	s32i.n	a8, a2, 4
400ec2e9:	2289      	s32i.n	a8, a2, 8
400ec2eb:	82cb      	addi.n	a8, a2, 12
400ec2ed:	c21c      	movi.n	a2, 28
400ec2ef:	0d0226        	beqi	a2, -1, 400ec300 <nvs::HashList::HashListBlock::HashListBlock()+0x20>
400ec2f2:	f97c      	movi.n	a9, -1
400ec2f4:	749090        	extui	a9, a9, 0, 8
400ec2f7:	0899      	s32i.n	a9, a8, 0
400ec2f9:	884b      	addi.n	a8, a8, 4
400ec2fb:	220b      	addi.n	a2, a2, -1
400ec2fd:	fffb86        	j	400ec2ef <nvs::HashList::HashListBlock::HashListBlock()+0xf>
400ec300:	f01d      	retw.n
	...

400ec304 <__cxa_guard_dummy>:
400ec304:	004136        	entry	a1, 32
400ec307:	f01d      	retw.n
400ec309:	000000        	ill

400ec30c <heap_caps_match>:
400ec30c:	004136        	entry	a1, 32
400ec30f:	7288      	l32i.n	a8, a2, 28
400ec311:	38ac      	beqz.n	a8, 400ec338 <heap_caps_match+0x2c>
400ec313:	589c      	beqz.n	a8, 400ec32c <heap_caps_match+0x20>
400ec315:	080c      	movi.n	a8, 0
400ec317:	089d      	mov.n	a9, a8
400ec319:	000246        	j	400ec326 <heap_caps_match+0x1a>
400ec31c:	a0a820        	addx4	a10, a8, a2
400ec31f:	0aa8      	l32i.n	a10, a10, 0
400ec321:	2099a0        	or	a9, a9, a10
400ec324:	881b      	addi.n	a8, a8, 1
400ec326:	f238a6        	blti	a8, 3, 400ec31c <heap_caps_match+0x10>
400ec329:	000046        	j	400ec32e <heap_caps_match+0x22>
400ec32c:	090c      	movi.n	a9, 0
400ec32e:	109390        	and	a9, a3, a9
400ec331:	079397        	bne	a3, a9, 400ec33c <heap_caps_match+0x30>
400ec334:	120c      	movi.n	a2, 1
400ec336:	f01d      	retw.n
400ec338:	020c      	movi.n	a2, 0
400ec33a:	f01d      	retw.n
400ec33c:	020c      	movi.n	a2, 0
400ec33e:	f01d      	retw.n

400ec340 <s_compare_reserved_regions>:
400ec340:	004136        	entry	a1, 32
400ec343:	0228      	l32i.n	a2, a2, 0
400ec345:	0388      	l32i.n	a8, a3, 0
400ec347:	c02280        	sub	a2, a2, a8
400ec34a:	f01d      	retw.n

400ec34c <is_wifi_clk_peripheral>:
400ec34c:	004136        	entry	a1, 32
400ec34f:	681c      	movi.n	a8, 22
400ec351:	0f3287        	bltu	a2, a8, 400ec364 <is_wifi_clk_peripheral+0x18>
400ec354:	17a082        	movi	a8, 23
400ec357:	05b827        	bgeu	a8, a2, 400ec360 <is_wifi_clk_peripheral+0x14>
400ec35a:	e7c222        	addi	a2, a2, -25
400ec35d:	0372f6        	bgeui	a2, 7, 400ec364 <is_wifi_clk_peripheral+0x18>
400ec360:	120c      	movi.n	a2, 1
400ec362:	f01d      	retw.n
400ec364:	020c      	movi.n	a2, 0
400ec366:	f01d      	retw.n

400ec368 <_system_r>:
400ec368:	004136        	entry	a1, 32
400ec36b:	885c      	movi.n	a8, 88
400ec36d:	0289      	s32i.n	a8, a2, 0
400ec36f:	f27c      	movi.n	a2, -1
400ec371:	f01d      	retw.n
	...

400ec374 <_getpid_r>:
400ec374:	004136        	entry	a1, 32
400ec377:	885c      	movi.n	a8, 88
400ec379:	0289      	s32i.n	a8, a2, 0
400ec37b:	f27c      	movi.n	a2, -1
400ec37d:	f01d      	retw.n
	...

400ec380 <_kill_r>:
400ec380:	004136        	entry	a1, 32
400ec383:	885c      	movi.n	a8, 88
400ec385:	0289      	s32i.n	a8, a2, 0
400ec387:	f27c      	movi.n	a2, -1
400ec389:	f01d      	retw.n
	...

400ec38c <find_value>:
400ec38c:	004136        	entry	a1, 32
400ec38f:	0228      	l32i.n	a2, a2, 0
400ec391:	000186        	j	400ec39b <find_value+0xf>
400ec394:	0288      	l32i.n	a8, a2, 0
400ec396:	041837        	beq	a8, a3, 400ec39e <find_value+0x12>
400ec399:	2228      	l32i.n	a2, a2, 8
400ec39b:	ff5256        	bnez	a2, 400ec394 <find_value+0x8>
400ec39e:	f01d      	retw.n

400ec3a0 <mutexattr_check>:
400ec3a0:	004136        	entry	a1, 32
400ec3a3:	1228      	l32i.n	a2, a2, 4
400ec3a5:	0332b6        	bltui	a2, 3, 400ec3ac <mutexattr_check+0xc>
400ec3a8:	621c      	movi.n	a2, 22
400ec3aa:	f01d      	retw.n
400ec3ac:	020c      	movi.n	a2, 0
400ec3ae:	f01d      	retw.n

400ec3b0 <read_uleb128(unsigned char const*, unsigned long*)>:
400ec3b0:	004136        	entry	a1, 32
400ec3b3:	11c2d0        	slli	a12, a2, 3
400ec3b6:	c0c2c0        	sub	a12, a2, a12
400ec3b9:	00a092        	movi	a9, 0
400ec3bc:	f0a220        	subx8	a10, a2, a2
400ec3bf:	221b      	addi.n	a2, a2, 1
400ec3c1:	820b      	addi.n	a8, a2, -1
400ec3c3:	000882        	l8ui	a8, a8, 0
400ec3c6:	baca      	add.n	a11, a10, a12
400ec3c8:	64a080        	extui	a10, a8, 0, 7
400ec3cb:	401b00        	ssl	a11
400ec3ce:	a1aa00        	sll	a10, a10
400ec3d1:	238800        	sext	a8, a8, 7
400ec3d4:	2099a0        	or	a9, a9, a10
400ec3d7:	fe1896        	bltz	a8, 400ec3bc <read_uleb128(unsigned char const*, unsigned long*)+0xc>
400ec3da:	0399      	s32i.n	a9, a3, 0
400ec3dc:	f01d      	retw.n
	...

400ec3e0 <read_sleb128(unsigned char const*, long*)>:
400ec3e0:	004136        	entry	a1, 32
400ec3e3:	00a082        	movi	a8, 0
400ec3e6:	089d      	mov.n	a9, a8
400ec3e8:	221b      	addi.n	a2, a2, 1
400ec3ea:	a20b      	addi.n	a10, a2, -1
400ec3ec:	000aa2        	l8ui	a10, a10, 0
400ec3ef:	64b0a0        	extui	a11, a10, 0, 7
400ec3f2:	401900        	ssl	a9
400ec3f5:	a1bb00        	sll	a11, a11
400ec3f8:	2088b0        	or	a8, a8, a11
400ec3fb:	23ba00        	sext	a11, a10, 7
400ec3fe:	997b      	addi.n	a9, a9, 7
400ec400:	fe4b96        	bltz	a11, 400ec3e8 <read_sleb128(unsigned char const*, long*)+0x8>
400ec403:	fb1c      	movi.n	a11, 31
400ec405:	0d3b97        	bltu	a11, a9, 400ec416 <read_sleb128(unsigned char const*, long*)+0x36>
400ec408:	0a6a67        	bbci	a10, 6, 400ec416 <read_sleb128(unsigned char const*, long*)+0x36>
400ec40b:	fa7c      	movi.n	a10, -1
400ec40d:	401900        	ssl	a9
400ec410:	a19a00        	sll	a9, a10
400ec413:	208890        	or	a8, a8, a9
400ec416:	0389      	s32i.n	a8, a3, 0
400ec418:	f01d      	retw.n
	...

400ec41c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>:
400ec41c:	006136        	entry	a1, 48
400ec41f:	0488      	l32i.n	a8, a4, 0
400ec421:	03ad      	mov.n	a10, a3
400ec423:	0189      	s32i.n	a8, a1, 0
400ec425:	002382        	l32i	a8, a3, 0
400ec428:	022882        	l32i	a8, a8, 8
400ec42b:	0008e0        	callx8	a8
400ec42e:	4a8c      	beqz.n	a10, 400ec436 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4+0x1a>
400ec430:	0188      	l32i.n	a8, a1, 0
400ec432:	0888      	l32i.n	a8, a8, 0
400ec434:	0189      	s32i.n	a8, a1, 0
400ec436:	0288      	l32i.n	a8, a2, 0
400ec438:	1d0c      	movi.n	a13, 1
400ec43a:	4888      	l32i.n	a8, a8, 16
400ec43c:	01cd      	mov.n	a12, a1
400ec43e:	03bd      	mov.n	a11, a3
400ec440:	20a220        	or	a10, a2, a2
400ec443:	0008e0        	callx8	a8
400ec446:	2a8c      	beqz.n	a10, 400ec44c <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4+0x30>
400ec448:	0128      	l32i.n	a2, a1, 0
400ec44a:	0429      	s32i.n	a2, a4, 0
400ec44c:	0a2d      	mov.n	a2, a10
400ec44e:	f01d      	retw.n

400ec450 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
400ec450:	006136        	entry	a1, 48
400ec453:	081c      	movi.n	a8, 16
400ec455:	2189      	s32i.n	a8, a1, 8
400ec457:	0288      	l32i.n	a8, a2, 0
400ec459:	050c      	movi.n	a5, 0
400ec45b:	6888      	l32i.n	a8, a8, 24
400ec45d:	04c8      	l32i.n	a12, a4, 0
400ec45f:	02ad      	mov.n	a10, a2
400ec461:	0159      	s32i.n	a5, a1, 0
400ec463:	1159      	s32i.n	a5, a1, 4
400ec465:	3159      	s32i.n	a5, a1, 12
400ec467:	01dd      	mov.n	a13, a1
400ec469:	03bd      	mov.n	a11, a3
400ec46b:	0008e0        	callx8	a8
400ec46e:	1128      	l32i.n	a2, a1, 4
400ec470:	680c      	movi.n	a8, 6
400ec472:	108820        	and	a8, a8, a2
400ec475:	052d      	mov.n	a2, a5
400ec477:	056866        	bnei	a8, 6, 400ec480 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const+0x30>
400ec47a:	0128      	l32i.n	a2, a1, 0
400ec47c:	0429      	s32i.n	a2, a4, 0
400ec47e:	120c      	movi.n	a2, 1
400ec480:	f01d      	retw.n
	...

400ec484 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
400ec484:	004136        	entry	a1, 32
400ec487:	c02640        	sub	a2, a6, a4
400ec48a:	690c      	movi.n	a9, 6
400ec48c:	180c      	movi.n	a8, 1
400ec48e:	838920        	moveqz	a8, a9, a2
400ec491:	082d      	mov.n	a2, a8
400ec493:	f01d      	retw.n
400ec495:	000000        	ill

400ec498 <std::type_info::~type_info()>:
400ec498:	004136        	entry	a1, 32
400ec49b:	f01d      	retw.n
400ec49d:	000000        	ill

400ec4a0 <std::type_info::__is_pointer_p() const>:
400ec4a0:	004136        	entry	a1, 32
400ec4a3:	020c      	movi.n	a2, 0
400ec4a5:	f01d      	retw.n
	...

400ec4a8 <std::exception::~exception()>:
400ec4a8:	004136        	entry	a1, 32
400ec4ab:	f01d      	retw.n
400ec4ad:	000000        	ill

400ec4b0 <initVariant>:
void initVariant() {}
400ec4b0:	004136        	entry	a1, 32
400ec4b3:	017d      	mov.n	a7, a1
400ec4b5:	f03d      	nop.n
400ec4b7:	f01d      	retw.n
400ec4b9:	000000        	ill

400ec4bc <init>:
void init() {}
400ec4bc:	004136        	entry	a1, 32
400ec4bf:	017d      	mov.n	a7, a1
400ec4c1:	f03d      	nop.n
400ec4c3:	f01d      	retw.n
400ec4c5:	000000        	ill

400ec4c8 <btInUse>:
bool btInUse(){ return false; }
400ec4c8:	004136        	entry	a1, 32
400ec4cb:	017d      	mov.n	a7, a1
400ec4cd:	020c      	movi.n	a2, 0
400ec4cf:	f01d      	retw.n
