   uint8 (1) divide took   94ms - 1.00x
  uint16 (2) divide took   96ms - 1.02x
  uint32 (4) divide took   98ms - 1.04x
  uint64 (8) divide took  214ms - 2.28x
   float (4) divide took  181ms - 1.93x
  double (8) divide took  859ms - 9.14x

   uint8 (1) multiply took   94ms - 1.00x
  uint16 (2) multiply took   96ms - 1.02x
  uint32 (4) multiply took   96ms - 1.02x
  uint64 (8) multiply took  123ms - 1.31x
   float (4) multiply took   98ms - 1.04x
  double (8) multiply took  226ms - 2.40x


.pio/build/esp32dev/firmware.elf:     file format elf32-xtensa-le


Disassembly of section .iram0.vectors:

40080000 <_WindowOverflow4>:
40080000:	49c500        	s32e	a0, a5, -16
40080003:	49d510        	s32e	a1, a5, -12
40080006:	49e520        	s32e	a2, a5, -8
40080009:	49f530        	s32e	a3, a5, -4
4008000c:	003400        	rfwo
	...

40080040 <_WindowUnderflow4>:
40080040:	09c500        	l32e	a0, a5, -16
40080043:	09d510        	l32e	a1, a5, -12
40080046:	09e520        	l32e	a2, a5, -8
40080049:	09f530        	l32e	a3, a5, -4
4008004c:	003500        	rfwu
	...

40080050 <_xt_alloca_exc>:
40080050:	034800        	rsr.windowbase	a0
40080053:	4080f0        	rotw	-1
40080056:	03e620        	rsr.ps	a2
40080059:	343820        	extui	a3, a2, 8, 4
4008005c:	303340        	xor	a3, a3, a4
4008005f:	03d140        	rsr.excsave1	a4
40080062:	113380        	slli	a3, a3, 8
40080065:	302230        	xor	a2, a2, a3
40080068:	13e620        	wsr.ps	a2
4008006b:	002010        	rsync
4008006e:	ce74f7        	bbci	a4, 31, 40080040 <_WindowUnderflow4>
40080071:	4080f0        	rotw	-1
40080074:	4878e7        	bbci	a8, 30, 400800c0 <_WindowUnderflow8>
40080077:	4080f0        	rotw	-1
4008007a:	003086        	j	40080140 <_WindowUnderflow12>
4008007d:	000000        	ill

40080080 <_WindowOverflow8>:
40080080:	49c900        	s32e	a0, a9, -16
40080083:	09d100        	l32e	a0, a1, -12
40080086:	49d910        	s32e	a1, a9, -12
40080089:	49e920        	s32e	a2, a9, -8
4008008c:	49f930        	s32e	a3, a9, -4
4008008f:	498040        	s32e	a4, a0, -32
40080092:	499050        	s32e	a5, a0, -28
40080095:	49a060        	s32e	a6, a0, -24
40080098:	49b070        	s32e	a7, a0, -20
4008009b:	003400        	rfwo
	...

400800c0 <_WindowUnderflow8>:
400800c0:	09c900        	l32e	a0, a9, -16
400800c3:	09d910        	l32e	a1, a9, -12
400800c6:	09e920        	l32e	a2, a9, -8
400800c9:	09d170        	l32e	a7, a1, -12
400800cc:	09f930        	l32e	a3, a9, -4
400800cf:	098740        	l32e	a4, a7, -32
400800d2:	099750        	l32e	a5, a7, -28
400800d5:	09a760        	l32e	a6, a7, -24
400800d8:	09b770        	l32e	a7, a7, -20
400800db:	003500        	rfwu
	...

40080100 <_WindowOverflow12>:
40080100:	49cd00        	s32e	a0, a13, -16
40080103:	09d100        	l32e	a0, a1, -12
40080106:	49dd10        	s32e	a1, a13, -12
40080109:	49ed20        	s32e	a2, a13, -8
4008010c:	49fd30        	s32e	a3, a13, -4
4008010f:	494040        	s32e	a4, a0, -48
40080112:	495050        	s32e	a5, a0, -44
40080115:	496060        	s32e	a6, a0, -40
40080118:	497070        	s32e	a7, a0, -36
4008011b:	498080        	s32e	a8, a0, -32
4008011e:	499090        	s32e	a9, a0, -28
40080121:	49a0a0        	s32e	a10, a0, -24
40080124:	49b0b0        	s32e	a11, a0, -20
40080127:	003400        	rfwo
	...

40080140 <_WindowUnderflow12>:
40080140:	09cd00        	l32e	a0, a13, -16
40080143:	09dd10        	l32e	a1, a13, -12
40080146:	09ed20        	l32e	a2, a13, -8
40080149:	09d1b0        	l32e	a11, a1, -12
4008014c:	09fd30        	l32e	a3, a13, -4
4008014f:	094b40        	l32e	a4, a11, -48
40080152:	095b50        	l32e	a5, a11, -44
40080155:	096b60        	l32e	a6, a11, -40
40080158:	097b70        	l32e	a7, a11, -36
4008015b:	098b80        	l32e	a8, a11, -32
4008015e:	099b90        	l32e	a9, a11, -28
40080161:	09aba0        	l32e	a10, a11, -24
40080164:	09bbb0        	l32e	a11, a11, -20
40080167:	003500        	rfwu
	...

40080180 <_Level2Vector>:
40080180:	13d200        	wsr.excsave2	a0
40080183:	03f985        	call0	4008411c <_xt_medint2>
	...

400801c0 <_Level3Vector>:
400801c0:	13d300        	wsr.excsave3	a0
400801c3:	040085        	call0	400841cc <_xt_medint3>
	...

40080200 <_Level4Vector>:
40080200:	13d400        	wsr.excsave4	a0
40080203:	017905        	call0	40081994 <xt_highint4>
	...

40080240 <_Level5Vector>:
40080240:	13d500        	wsr.excsave5	a0
40080243:	06e885        	call0	400870cc <xt_highint5>
	...

40080280 <_DebugExceptionVector>:
40080280:	13d600        	wsr.excsave6	a0
40080283:	06e285        	call0	400870ac <xt_debugexception>
	...

400802c0 <_NMIExceptionVector>:
400802c0:	13d700        	wsr.excsave7	a0
400802c3:	06e105        	call0	400870d4 <_xt_nmi>
	...

40080300 <_KernelExceptionVector>:
40080300:	13d100        	wsr.excsave1	a0
40080303:	03aec5        	call0	40083df0 <_xt_kernel_exc>
	...

40080340 <_UserExceptionVector>:
40080340:	13d100        	wsr.excsave1	a0
40080343:	03ac85        	call0	40083e0c <_xt_user_exc>
	...

400803c0 <_DoubleExceptionVector>:
400803c0:	004140        	break	1, 4
400803c3:	02a002        	movi	a0, 2
400803c6:	13e800        	wsr.exccause	a0
400803c9:	039b85        	call0	40083d84 <_xt_panic>
400803cc:	003200        	rfde
	...

Disassembly of section .iram0.text:

40080400 <esp_random-0xa2c>:
40080400:	035144        	lsi	f4, a1, 12
40080403:	004060        	break	0, 6
40080406:	3ffc      	bnez.n	a15, 4008043d <_init_end+0x3d>
40080408:	002b67        	blt	a11, a6, 4008040c <_init_end+0xc>
4008040b:	e0b000        	subx4	a11, a0, a0
4008040e:	3ffa      	add.n	a3, a15, a15
40080410:	2e5c      	movi.n	a14, 82
40080412:	283f40        	lsi	f4, a15, 160
40080415:	3f4016        	beqz	a0, 4008080d <_init_end+0x40d>
40080418:	401634        	lsi	f3, a6, 0x100
4008041b:	3f          	.byte 0x3f
4008041c:	1638      	l32i.n	a3, a6, 4
4008041e:	403f40        	lsi	f4, a15, 0x100
40080421:	3f4017        	ball	a0, a1, 40080464 <_init_end+0x64>
40080424:	4015a0        	lsi	f10, a5, 0x100
40080427:	3f          	.byte 0x3f
40080428:	fbf054        	lsi	f5, a0, 0x3ec
4008042b:	3f          	.byte 0x3f
4008042c:	fbec10        	f64subc	a1, a12, 3, 0
4008042f:	3f          	.byte 0x3f
40080430:	001200        	movsp	a0, a2
40080433:	166c00        	lsi	f0, a12, 88
40080436:	f43f40        	extui	a3, a4, 15, 16
40080439:	0d5a      	add.n	a0, a13, a5
4008043b:	167440        	lsi	f4, a4, 88
4008043e:	cc3f40        	lsi	f4, a15, 0x330
40080441:	400090        	lsi	f9, a0, 0x100
40080444:	0b5c      	movi.n	a11, 80
40080446:	3ffc      	bnez.n	a15, 4008047d <_init_end+0x7d>
40080448:	080000        	lsx	f0, a0, a0
4008044b:	006c40        	rsil	a4, 12
4008044e:	3ffc      	bnez.n	a15, 40080485 <_init_end+0x85>
40080450:	689c      	beqz.n	a8, 4008046a <_init_end+0x6a>
40080452:	d04000        	subx2	a4, a0, a0
40080455:	8f          	.byte 0x8f
40080456:	284000        	lsi	f0, a0, 160
40080459:	007d      	mov.n	a7, a0
4008045b:	902840        	addx2	a2, a8, a4
4008045e:	204000        	or	a4, a0, a0
40080461:	3ffc16        	beqz	a12, 40080864 <_init_end+0x464>
40080464:	fc0000        	lsi	f0, a0, 0x3f0
40080467:	3f          	.byte 0x3f
40080468:	000200        	lsi	f0, a2, 0
4008046b:	020050        	andb	b0, b0, b5
4008046e:	0c5000        	lsi	f0, a0, 48
40080471:	3ff5a0        	f64cmph	a15, a5, a10, 3
40080474:	401684        	lsi	f8, a6, 0x100
40080477:	3f          	.byte 0x3f
40080478:	401690        	lsi	f9, a6, 0x100
4008047b:	3f          	.byte 0x3f
4008047c:	16ec      	bnez.n	a6, 400804a1 <_init_end+0xa1>
4008047e:	303f40        	xor	a3, a15, a4
40080481:	3ff000        	f64cmph	a15, a0, a0, 3
40080484:	f00034        	lsi	f3, a0, 0x3c0
40080487:	3f          	.byte 0x3f
40080488:	002c      	movi.n	a0, 32
4008048a:	743ff0        	extui	a3, a15, 15, 8
4008048d:	0f          	.byte 0xf
4008048e:	4008      	l32i.n	a0, a0, 16
40080490:	0081d4        	lsi	f13, a1, 0
40080493:	c44c40        	extui	a4, a4, 12, 13
40080496:	544000        	extui	a4, a0, 0, 6
40080499:	007d      	mov.n	a7, a0
4008049b:	9a1440        	trunc.s	a1, f4, 4
4008049e:	844000        	extui	a4, a0, 0, 9
400804a1:	009a      	add.n	a0, a0, a9
400804a3:	853440        	extui	a3, a4, 20, 9
400804a6:	e04000        	subx4	a4, a0, a0
400804a9:	3ffe01        	l32r	a0, 400504a4 <r_lm_init+0x1770>
400804ac:	0f4240        	f64cmph	a4, a2, a4, 0
400804af:	40f000        	nsau	a0, a0
400804b2:	fe          	.byte 0xfe
400804b3:	3f          	.byte 0x3f
400804b4:	401800        	ssl	a8
400804b7:	3f          	.byte 0x3f
400804b8:	189c      	beqz.n	a8, 400804cd <_init_end+0xcd>
400804ba:	1c3f40        	lsi	f4, a15, 112
400804bd:	4018      	l32i.n	a1, a0, 16
400804bf:	3f          	.byte 0x3f
400804c0:	ebe8      	l32i.n	a14, a11, 56
400804c2:	3ffb      	addi.n	a3, a15, 15
400804c4:	0078      	l32i.n	a7, a0, 0
400804c6:	3ffc      	bnez.n	a15, 400804fd <_init_end+0xfd>
400804c8:	00dc      	bnez.n	a0, 400804dc <_init_end+0xdc>
400804ca:	e03ff0        	subx4	a3, a15, a15
400804cd:	3ff000        	f64cmph	a15, a0, a0, 3
400804d0:	fbebf0        	f64subc	a15, a11, 3, 0
400804d3:	3f          	.byte 0x3f
400804d4:	008c      	beqz.n	a0, 400804d8 <_init_end+0xd8>
400804d6:	3ffc      	bnez.n	a15, 4008050d <_init_end+0x10d>
400804d8:	681c      	movi.n	a8, 22
400804da:	cc4000        	lsi	f0, a0, 0x330
400804dd:	4018      	l32i.n	a1, a0, 16
400804df:	3f          	.byte 0x3f
400804e0:	198c      	beqz.n	a9, 400804e5 <_init_end+0xe5>
400804e2:	d83f40        	lsi	f4, a15, 0x360
400804e5:	4018      	l32i.n	a1, a0, 16
400804e7:	3f          	.byte 0x3f
400804e8:	fc0080        	lsi	f8, a0, 0x3f0
400804eb:	3f          	.byte 0x3f
400804ec:	fc0084        	lsi	f8, a0, 0x3f0
400804ef:	3f          	.byte 0x3f
400804f0:	0098      	l32i.n	a9, a0, 0
400804f2:	3ffc      	bnez.n	a15, 40080529 <_init_end+0x129>
400804f4:	f60000        	lsi	f0, a0, 0x3d8
400804f7:	3f          	.byte 0x3f
400804f8:	d83aa1        	l32r	a10, 400765e0 <__udivmoddi4+0x119ec>
400804fb:	00a850        	any8	b5, b8:b9:b10:b11:b12:b13:b14:b15
400804fe:	3ffc      	bnez.n	a15, 40080535 <_init_end+0x135>
40080500:	ebf8      	l32i.n	a15, a11, 56
40080502:	3ffb      	addi.n	a3, a15, 15
40080504:	00ac      	beqz.n	a0, 40080528 <_init_end+0x128>
40080506:	3ffc      	bnez.n	a15, 4008053d <_init_end+0x13d>
40080508:	402dc4        	lsi	f12, a13, 0x100
4008050b:	3f          	.byte 0x3f
4008050c:	2e6c      	movi.n	a14, -30
4008050e:	cc3f40        	lsi	f4, a15, 0x330
40080511:	402d      	lsi	f2, a0, 0
40080513:	3f          	.byte 0x3f
40080514:	000000        	ill
40080517:	00a400        	any8	b0, b0:b1:b2:b3:b4:b5:b6:b7
4008051a:	3ffc      	bnez.n	a15, 40080551 <_init_end+0x151>
4008051c:	ff          	.byte 0xff
4008051d:	ff          	.byte 0xff
4008051e:	ff          	.byte 0xff
4008051f:	ff          	.byte 0xff
40080520:	ff          	.byte 0xff
40080521:	ff          	.byte 0xff
40080522:	ff          	.byte 0xff
40080523:	7f          	.byte 0x7f
40080524:	fc00c0        	lsi	f12, a0, 0x3f0
40080527:	3f          	.byte 0x3f
40080528:	00b8      	l32i.n	a11, a0, 0
4008052a:	3ffc      	bnez.n	a15, 40080561 <_init_end+0x161>
4008052c:	fbec00        	f64subc	a0, a12, 3, 0
4008052f:	3f          	.byte 0x3f
40080530:	fc00b0        	lsi	f11, a0, 0x3f0
40080533:	3f          	.byte 0x3f
40080534:	fc12b0        	lsi	f11, a2, 0x3f0
40080537:	3f          	.byte 0x3f
40080538:	12a8      	l32i.n	a10, a2, 4
4008053a:	3ffc      	bnez.n	a15, 40080571 <_init_end+0x171>
4008053c:	00e8      	l32i.n	a14, a0, 0
4008053e:	e43ff0        	extui	a3, a15, 15, 15
40080541:	3ff000        	f64cmph	a15, a0, a0, 3
40080544:	53fc      	bnez.n	a3, 4008057d <_init_end+0x17d>
40080546:	dc3ff6        	bgeui	a15, 3, 40080526 <_init_end+0x126>
40080549:	bf          	.byte 0xbf
4008054a:	344000        	extui	a4, a0, 0, 4
4008054d:	3f4050        	f64cmph	a4, a0, a5, 3
40080550:	402f10        	lsi	f1, a15, 0x100
40080553:	3f          	.byte 0x3f
40080554:	2e7c      	movi.n	a14, -14
40080556:	783f40        	lsi	f4, a15, 0x1e0
40080559:	3ff400        	f64cmph	a15, a4, a0, 3
4008055c:	ff          	.byte 0xff
4008055d:	ff          	.byte 0xff
4008055e:	ff          	.byte 0xff
4008055f:	25fd      	lsi	f15, a5, 20
40080561:	000400        	lsi	f0, a4, 0
40080564:	000000        	ill
40080567:	dbb810        	movt.s	f11, f8, b1
4008056a:	3ffb      	addi.n	a3, a15, 15
4008056c:	f5f000        	extui	a15, a0, 16, 16
4008056f:	3f          	.byte 0x3f
40080570:	001c      	movi.n	a0, 16
40080572:	003ff4        	lsi	f15, a15, 0
40080575:	0fff00        	f64cmph	a15, a15, a0, 0
40080578:	001c      	movi.n	a0, 16
4008057a:	1c3ff5        	call12	4009c978 <_iram_end+0xee24>
4008057d:	3ff6e0        	f64cmph	a15, a6, a14, 3
40080580:	f44130        	extui	a4, a3, 1, 16
40080583:	3f          	.byte 0x3f
40080584:	f44134        	lsi	f3, a1, 0x3d0
40080587:	3f          	.byte 0x3f
40080588:	4138      	l32i.n	a3, a1, 16
4008058a:	3c3ff4        	lsi	f15, a15, 240
4008058d:	3ff441        	l32r	a4, 40050560 <r_lm_init+0x182c>
40080590:	f44140        	extui	a4, a4, 1, 16
40080593:	3f          	.byte 0x3f
40080594:	f44144        	lsi	f4, a1, 0x3d0
40080597:	3f          	.byte 0x3f
40080598:	f000d0        	subx8	a0, a0, a13
4008059b:	3f          	.byte 0x3f
4008059c:	f000c4        	lsi	f12, a0, 0x3c0
4008059f:	3f          	.byte 0x3f
400805a0:	800027        	bnone	a0, a2, 40080524 <_init_end+0x124>
400805a3:	003800        	lsi	f0, a8, 0
400805a6:	b83ff0        	lsi	f15, a15, 0x2e0
400805a9:	009a      	add.n	a0, a0, a9
400805ab:	00c840        	lsi	f4, a8, 0
400805ae:	3ffc      	bnez.n	a15, 400805e5 <_init_end+0x1e5>
400805b0:	00bea0        	all8	b10, b8:b9:b10:b11:b12:b13:b14:b15
400805b3:	becc40        	f64iter	a12, a12, a4, 3, 0
400805b6:	e44000        	extui	a4, a0, 0, 15
400805b9:	be          	.byte 0xbe
400805ba:	004000        	break	0, 0
400805bd:	0018      	l32i.n	a1, a0, 0
400805bf:	03fc00        	lsi	f0, a12, 12
400805c2:	003ff0        	lsi	f15, a15, 0
400805c5:	7e          	.byte 0x7e
400805c6:	240000        	extui	a0, a0, 0, 3
400805c9:	3ff004        	lsi	f0, a0, 252
400805cc:	fbec64        	lsi	f6, a12, 0x3ec
400805cf:	3f          	.byte 0x3f
400805d0:	08ec      	bnez.n	a8, 400805f4 <_init_end+0x1f4>
400805d2:	3ffc      	bnez.n	a15, 40080609 <_init_end+0x209>
400805d4:	7028      	l32i.n	a2, a0, 28
400805d6:	303ff4        	lsi	f15, a15, 192
400805d9:	3ff470        	f64cmph	a15, a4, a7, 3
400805dc:	ff          	.byte 0xff
400805dd:	ff          	.byte 0xff
400805de:	ff          	.byte 0xff
400805df:	ef          	.byte 0xef
400805e0:	f47024        	lsi	f2, a0, 0x3d0
400805e3:	3f          	.byte 0x3f
400805e4:	08ed      	mov.n	a14, a8
400805e6:	3ffc      	bnez.n	a15, 4008061d <_init_end+0x21d>
400805e8:	000001        	l32r	a0, 400405e8 <r_ld_sched_sniff_add+0xc24>
400805eb:	702010        	lsi	f1, a0, 0x1c0
400805ee:	f83ff4        	lsi	f15, a15, 0x3e0
400805f1:	fc08      	l32i.n	a0, a12, 60
400805f3:	3f          	.byte 0x3f
400805f4:	fc08f0        	lsi	f15, a8, 0x3f0
400805f7:	3f          	.byte 0x3f
400805f8:	3258      	l32i.n	a5, a2, 12
400805fa:	543f40        	extui	a3, a4, 15, 6
400805fd:	3f4034        	lsi	f3, a0, 252
40080600:	403294        	lsi	f9, a2, 0x100
40080603:	3f          	.byte 0x3f
40080604:	702c      	movi.n	a0, 39
40080606:	003ff4        	lsi	f15, a15, 0
40080609:	fc09      	s32i.n	a0, a12, 60
4008060b:	3f          	.byte 0x3f
4008060c:	fc08f4        	lsi	f15, a8, 0x3f0
4008060f:	3f          	.byte 0x3f
40080610:	000000        	ill
40080613:	330800        	clamps	a0, a8, 7
40080616:	7c3f40        	lsi	f4, a15, 0x1f0
40080619:	3f4034        	lsi	f3, a0, 252
4008061c:	fe          	.byte 0xfe
4008061d:	ff          	.byte 0xff
4008061e:	ff          	.byte 0xff
4008061f:	ef          	.byte 0xef
40080620:	fc0904        	lsi	f0, a9, 0x3f0
40080623:	3f          	.byte 0x3f
40080624:	cff8      	l32i.n	a15, a15, 48
40080626:	324000        	orbc	b4, b0, b0
40080629:	000000        	ill
4008062c:	0908      	l32i.n	a0, a9, 0
4008062e:	3ffc      	bnez.n	a15, 40080665 <_init_end+0x265>
40080630:	ee          	.byte 0xee
40080631:	eded      	lsi	f14, a13, 52
40080633:	64ed      	lsi	f14, a4, 16
40080635:	3f4035        	call12	400bfa38 <_iram_end+0x31ee4>
40080638:	35fc      	bnez.n	a5, 4008066f <_init_end+0x26f>
4008063a:	f03f40        	subx8	a3, a15, a4
4008063d:	3f4034        	lsi	f3, a0, 252
40080640:	403580        	lsi	f8, a5, 0x100
40080643:	3f          	.byte 0x3f
40080644:	4035b4        	lsi	f11, a5, 0x100
40080647:	3f          	.byte 0x3f
40080648:	35ec      	bnez.n	a5, 4008066f <_init_end+0x26f>
4008064a:	203f40        	or	a3, a15, a4
4008064d:	3f4036        	entry	a0, 0x1fa0
40080650:	36ac      	beqz.n	a6, 40080677 <_init_end+0x277>
40080652:	3c3f40        	lsi	f4, a15, 240
40080655:	3f4036        	entry	a0, 0x1fa0
40080658:	0998      	l32i.n	a9, a9, 0
4008065a:	3ffc      	bnez.n	a15, 40080691 <_init_end+0x291>
4008065c:	fc0990        	lsi	f9, a9, 0x3f0
4008065f:	3f          	.byte 0x3f
40080660:	098c      	beqz.n	a9, 40080664 <_init_end+0x264>
40080662:	3ffc      	bnez.n	a15, 40080699 <_init_end+0x299>
40080664:	0988      	l32i.n	a8, a9, 0
40080666:	3ffc      	bnez.n	a15, 4008069d <_init_end+0x29d>
40080668:	fc0994        	lsi	f9, a9, 0x3f0
4008066b:	3f          	.byte 0x3f
4008066c:	ff8000        	f64cmph	a8, a0, a0, 15
4008066f:	ff          	.byte 0xff
40080670:	370c      	movi.n	a7, 3
40080672:	a03f40        	addx4	a3, a15, a4
40080675:	3f4037        	ball	a0, a3, 400806b8 <_init_end+0x2b8>
40080678:	403730        	lsi	f3, a7, 0x100
4008067b:	3f          	.byte 0x3f
4008067c:	000000        	ill
4008067f:	80b880        	add	a11, a8, a8
40080682:	483ff4        	mula.da.ll.ldinc	m3, a15, m0, a15
40080685:	fc0a      	add.n	a15, a12, a0
40080687:	3f          	.byte 0x3f
40080688:	fc0a54        	lsi	f5, a10, 0x3f0
4008068b:	3f          	.byte 0x3f
4008068c:	0a4c      	movi.n	a10, 64
4008068e:	3ffc      	bnez.n	a15, 400806c5 <_init_end+0x2c5>
40080690:	fc0a50        	lsi	f5, a10, 0x3f0
40080693:	3f          	.byte 0x3f
40080694:	0b4c      	movi.n	a11, 64
40080696:	3ffc      	bnez.n	a15, 400806cd <_init_end+0x2cd>
40080698:	fbed70        	f64subc	a7, a13, 3, 0
4008069b:	3f          	.byte 0x3f
4008069c:	ed6c      	movi.n	a13, -18
4008069e:	3ffb      	addi.n	a3, a15, 15
400806a0:	001274        	lsi	f7, a2, 0
400806a3:	0a4440        	add.s	f4, f4, f4
400806a6:	3ffc      	bnez.n	a15, 400806dd <_init_end+0x2dd>
400806a8:	fc0b54        	lsi	f5, a11, 0x3f0
400806ab:	3f          	.byte 0x3f
400806ac:	000000        	ill
400806af:	002360        	lsi	f6, a3, 0
400806b2:	000004        	lsi	f0, a0, 0
400806b5:	c00000        	sub	a0, a0, a0
400806b8:	e9e8      	l32i.n	a14, a9, 56
400806ba:	3ffb      	addi.n	a3, a15, 15
400806bc:	083ea4        	lsi	f10, a14, 32
400806bf:	015040        	slli	a5, a0, 28
400806c2:	183f40        	lsxp	f3, a15, a4
400806c5:	0e          	.byte 0xe
400806c6:	3ffc      	bnez.n	a15, 400806fd <_init_end+0x2fd>
400806c8:	fbe7e0        	f64subc	a14, a7, 3, 0
400806cb:	3f          	.byte 0x3f
400806cc:	400130        	lsi	f3, a1, 0x100
400806cf:	3f          	.byte 0x3f
400806d0:	040021        	l32r	a2, 400416d0 <r_ld_sched_sniff_add+0x1d0c>
400806d3:	37ff00        	lsi	f0, a15, 220
400806d6:	e80006        	j	4007a6da <__udivmoddi4+0x15ae6>
400806d9:	3ffbe7        	bbsi	a11, 30, 4008071c <_init_end+0x31c>
400806dc:	41b8      	l32i.n	a11, a1, 16
400806de:	4008      	l32i.n	a0, a0, 16
400806e0:	040022        	l8ui	a2, a0, 4
400806e3:	000000        	ill
400806e6:	0038      	l32i.n	a3, a0, 0
400806e8:	4268      	l32i.n	a6, a2, 16
400806ea:	4008      	l32i.n	a0, a0, 16
400806ec:	c08800        	sub	a8, a8, a0
400806ef:	1028      	l32i.n	a2, a0, 4
400806f1:	3ffc16        	beqz	a12, 40080af4 <_init_end+0x6f4>
400806f4:	020000        	andb	b0, b0, b0
400806f7:	fffbc0        	f64cmph	a15, a11, a12, 15
400806fa:	6c0001        	l32r	a0, 4005b6fc <strftime+0x1c48>
400806fd:	4f          	.byte 0x4f
400806fe:	ec3f40        	lsi	f4, a15, 0x3b0
40080701:	3f4051        	l32r	a5, 40050404 <r_lm_init+0x16d0>
40080704:	404f94        	lsi	f9, a15, 0x100
40080707:	3f          	.byte 0x3f
40080708:	fffc      	bnez.n	a15, 4008074b <_init_end+0x34b>
4008070a:	00c001        	l32r	a0, 40040a0c <r_ld_sched_sniff_add+0x1048>
4008070d:	3f4050        	f64cmph	a4, a0, a5, 3
40080710:	405024        	lsi	f2, a0, 0x100
40080713:	3f          	.byte 0x3f
40080714:	5038      	l32i.n	a3, a0, 20
40080716:	fc3f40        	lsi	f4, a15, 0x3f0
40080719:	ff          	.byte 0xff
4008071a:	8009      	s32i.n	a0, a0, 32
4008071c:	400000        	ssr	a0
4008071f:	ed9000        	lsi	f0, a0, 0x3b4
40080722:	3ffb      	addi.n	a3, a15, 15
40080724:	001400        	movsp	a0, a4
40080727:	100000        	and	a0, a0, a0
4008072a:	000000        	ill
4008072d:	bff600        	f64cmph	a15, a6, a0, 11
40080730:	5048      	l32i.n	a4, a0, 20
40080732:	dc3f40        	lsi	f4, a15, 0x370
40080735:	3f4051        	l32r	a5, 40050438 <r_lm_init+0x1704>
40080738:	5088      	l32i.n	a8, a0, 20
4008073a:	c83f40        	lsi	f4, a15, 0x320
4008073d:	3f4051        	l32r	a5, 40050440 <r_lm_init+0x170c>
40080740:	4050c4        	lsi	f12, a0, 0x100
40080743:	3f          	.byte 0x3f
40080744:	c2c8      	l32i.n	a12, a2, 48
40080746:	ac4000        	lsi	f0, a0, 0x2b0
40080749:	3ff480        	f64cmph	a15, a4, a8, 3
4008074c:	ff          	.byte 0xff
4008074d:	ff          	.byte 0xff
4008074e:	0f          	.byte 0xf
4008074f:	00fc      	bnez.n	a0, 40080783 <_init_end+0x383>
40080751:	021000        	andb	b1, b0, b0
40080754:	f48000        	extui	a8, a0, 0, 16
40080757:	3f          	.byte 0x3f
40080758:	ff          	.byte 0xff
40080759:	ff          	.byte 0xff
4008075a:	ff          	.byte 0xff
4008075b:	000003        	lsi	f0, a0, 0
4008075e:	0c8400        	lsi	f0, a4, 48
40080761:	001020        	movsp	a2, a0
40080764:	00d280        	lsi	f8, a2, 0
40080767:	1d4840        	lsi	f4, a8, 116
4008076a:	f04000        	subx8	a4, a0, a0
4008076d:	3f4077        	ball	a0, a7, 400807b0 <_init_end+0x3b0>
40080770:	fbee64        	lsi	f6, a14, 0x3ec
40080773:	3f          	.byte 0x3f
40080774:	785c      	movi.n	a8, 87
40080776:	f43f40        	extui	a3, a4, 15, 16
40080779:	3f4077        	ball	a0, a7, 400807bc <_init_end+0x3bc>
4008077c:	4046f0        	lsi	f15, a6, 0x100
4008077f:	3f          	.byte 0x3f
40080780:	407874        	lsi	f7, a8, 0x100
40080783:	3f          	.byte 0x3f
40080784:	1bde83        	lsi	f8, a14, 108
40080787:	7af843        	lsi	f4, a8, 0x1e8
4008078a:	1c3f40        	lsi	f4, a15, 112
4008078d:	407b      	addi.n	a4, a0, 7
4008078f:	3f          	.byte 0x3f
40080790:	79e8      	l32i.n	a14, a9, 28
40080792:	003f40        	lsi	f4, a15, 0
40080795:	3f4000        	f64cmph	a4, a0, a0, 3
40080798:	0d0000        	lsi	f0, a0, 52
4008079b:	0fb040        	f64cmph	a11, a0, a4, 0
4008079e:	3ffc      	bnez.n	a15, 400807d5 <_init_end+0x3d5>
400807a0:	f10000        	lsi	f0, a0, 0x3c4
400807a3:	3f          	.byte 0x3f
400807a4:	f12000        	lsi	f0, a0, 0x3c4
400807a7:	3f          	.byte 0x3f
400807a8:	ff0000        	f64cmph	a0, a0, a0, 15
400807ab:	ff          	.byte 0xff
400807ac:	ff          	.byte 0xff
400807ad:	ff          	.byte 0xff
400807ae:	8c0000        	lsi	f0, a0, 0x230
400807b1:	0f          	.byte 0xf
400807b2:	3ffc      	bnez.n	a15, 400807e9 <_init_end+0x3e9>
400807b4:	010000        	slli	a0, a0, 32
400807b7:	000000        	ill
400807ba:	ffc007        	bnall	a0, a0, 400807bd <_init_end+0x3bd>
400807bd:	1f          	.byte 0x1f
400807be:	000013        	lsi	f1, a0, 0
400807c1:	b00000        	addx8	a0, a0, a0
400807c4:	ff          	.byte 0xff
400807c5:	1f          	.byte 0x1f
400807c6:	700000        	lsi	f0, a0, 0x1c0
400807c9:	3ffae2        	s32ri	a14, a10, 252
400807cc:	000804        	lsi	f0, a8, 0
400807cf:	7c7400        	lsi	f0, a4, 0x1f0
400807d2:	e03f40        	subx4	a3, a15, a4
400807d5:	407d      	lsi	f7, a0, 0
400807d7:	3f          	.byte 0x3f
400807d8:	407cd0        	wer	a13, a12
400807db:	3f          	.byte 0x3f
400807dc:	fc10b0        	lsi	f11, a0, 0x3f0
400807df:	3f          	.byte 0x3f
400807e0:	0fac      	beqz.n	a15, 40080804 <_init_end+0x404>
400807e2:	3ffc      	bnez.n	a15, 40080819 <_init_end+0x419>
400807e4:	beb8      	l32i.n	a11, a14, 44
400807e6:	004000        	break	0, 0
400807e9:	0008      	l32i.n	a0, a0, 0
400807eb:	7d4000        	lsi	f0, a0, 0x1f4
400807ee:	cc3f40        	lsi	f4, a15, 0x330
400807f1:	407d      	lsi	f7, a0, 0
400807f3:	3f          	.byte 0x3f
400807f4:	7d5c      	movi.n	a13, 87
400807f6:	003f40        	lsi	f4, a15, 0
400807f9:	400000        	ssr	a0
400807fc:	f00040        	subx8	a0, a0, a4
400807ff:	3f          	.byte 0x3f
40080800:	f00044        	lsi	f4, a0, 0x3c0
40080803:	3f          	.byte 0x3f
40080804:	0058      	l32i.n	a5, a0, 0
40080806:	5c3ff0        	lsi	f15, a15, 0x170
40080809:	3ff000        	f64cmph	a15, a0, a0, 3
4008080c:	10bc      	beqz.n	a0, 40080841 <_init_end+0x441>
4008080e:	3ffc      	bnez.n	a15, 40080845 <_init_end+0x445>
40080810:	10bd      	lsi	f11, a0, 0
40080812:	3ffc      	bnez.n	a15, 40080849 <_init_end+0x449>
40080814:	fc10c4        	lsi	f12, a0, 0x3f0
40080817:	3f          	.byte 0x3f
40080818:	f003f0        	subx8	a0, a3, a15
4008081b:	3f          	.byte 0x3f
4008081c:	0418      	l32i.n	a1, a4, 0
4008081e:	7c3ff0        	lsi	f15, a15, 0x1f0
40080821:	ee          	.byte 0xee
40080822:	3ffb      	addi.n	a3, a15, 15
40080824:	7f68      	l32i.n	a6, a15, 28
40080826:	543f40        	extui	a3, a4, 15, 6
40080829:	3f4080        	f64cmph	a4, a0, a8, 3
4008082c:	407ef4        	lsi	f15, a14, 0x100
4008082f:	3f          	.byte 0x3f
40080830:	407f80        	wer	a8, a15
40080833:	3f          	.byte 0x3f
40080834:	616c      	movi.n	a1, -26
40080836:	4008      	l32i.n	a0, a0, 16
40080838:	407f94        	lsi	f9, a15, 0x100
4008083b:	3f          	.byte 0x3f
4008083c:	407fa4        	lsi	f10, a15, 0x100
4008083f:	3f          	.byte 0x3f
40080840:	407fc0        	wer	a12, a15
40080843:	3f          	.byte 0x3f
40080844:	408020        	rotw	2
40080847:	3f          	.byte 0x3f
40080848:	7fd8      	l32i.n	a13, a15, 28
4008084a:	123f40        	andbc	b3, b15, b4
4008084d:	000100        	lsi	f0, a1, 0
40080850:	010011        	l32r	a1, 40040c50 <r_ld_sched_sniff_add+0x128c>
40080853:	10cc00        	and	a12, a12, a0
40080856:	3ffc      	bnez.n	a15, 4008088d <_init_end+0x48d>
40080858:	fc10d0        	lsi	f13, a0, 0x3f0
4008085b:	3f          	.byte 0x3f
4008085c:	ff          	.byte 0xff
4008085d:	ff          	.byte 0xff
4008085e:	000006        	j	40080862 <_init_end+0x462>
40080861:	c08000        	sub	a8, a0, a0
40080864:	ff          	.byte 0xff
40080865:	ff          	.byte 0xff
40080866:	3f          	.byte 0x3f
40080867:	200000        	or	a0, a0, a0
4008086a:	000000        	ill
4008086d:	000040        	lsi	f4, a0, 0
40080870:	00c3c0        	lsi	f12, a3, 0
40080873:	009c40        	all4	b4, b12:b13:b14:b15
40080876:	3ffc      	bnez.n	a15, 400808ad <_init_end+0x4ad>
40080878:	03e8      	l32i.n	a14, a3, 0
4008087a:	000000        	ill
4008087d:	3f8000        	f64cmph	a8, a0, a0, 3
40080880:	fc12a0        	lsi	f10, a2, 0x3f0
40080883:	3f          	.byte 0x3f
40080884:	200000        	or	a0, a0, a0
40080887:	ffff00        	f64cmph	a15, a15, a0, 15
4008088a:	7f          	.byte 0x7f
4008088b:	3f          	.byte 0x3f
4008088c:	0097f4        	lsi	f15, a7, 0
4008088f:	84b840        	extui	a11, a4, 8, 9
40080892:	d43f40        	extui	a3, a4, 15, 14
40080895:	3f4083        	ssi	f8, a0, 252
40080898:	4046f0        	lsi	f15, a6, 0x100
4008089b:	3f          	.byte 0x3f
4008089c:	408490        	lsi	f9, a4, 0x100
4008089f:	3f          	.byte 0x3f
400808a0:	84c8      	l32i.n	a12, a4, 32
400808a2:	a43f40        	extui	a3, a4, 15, 11
400808a5:	3f4084        	lsi	f8, a0, 252
400808a8:	8478      	l32i.n	a7, a4, 32
400808aa:	603f40        	lsi	f4, a15, 0x180
400808ad:	3f4046        	j	400905b2 <_iram_end+0x2a5e>
400808b0:	0f58      	l32i.n	a5, a15, 0
400808b2:	503f40        	ritlb0	a4, a15
400808b5:	400874        	lsi	f7, a8, 0x100
400808b8:	477c      	movi.n	a7, -12
400808ba:	033f40        	lsi	f4, a15, 12
400808bd:	000a      	add.n	a0, a0, a0
400808bf:	468400        	lsi	f0, a4, 0x118
400808c2:	f03f40        	subx8	a3, a15, a4
400808c5:	3f4046        	j	400905ca <_iram_end+0x2a76>
400808c8:	000a07        	bnone	a10, a0, 400808cc <_init_end+0x4cc>
400808cb:	481800        	ssx	f1, a8, a0
400808ce:	043f40        	extui	a3, a4, 15, 1
400808d1:	4048      	l32i.n	a4, a0, 16
400808d3:	3f          	.byte 0x3f
400808d4:	47ac      	beqz.n	a7, 400808fc <_init_end+0x4fc>
400808d6:	983f40        	lsi	f4, a15, 0x260
400808d9:	3f4047        	ball	a0, a4, 4008091c <_init_end+0x51c>
400808dc:	47e8      	l32i.n	a14, a7, 16
400808de:	603f40        	lsi	f4, a15, 0x180
400808e1:	3f4047        	ball	a0, a4, 40080924 <_init_end+0x524>
400808e4:	474c      	movi.n	a7, 68
400808e6:	343f40        	extui	a3, a4, 15, 4
400808e9:	3f4047        	ball	a0, a4, 4008092c <_init_end+0x52c>
400808ec:	47cc      	bnez.n	a7, 400808f4 <_init_end+0x4f4>
400808ee:	1c3f40        	lsi	f4, a15, 112
400808f1:	3f4047        	ball	a0, a4, 40080934 <_init_end+0x534>
400808f4:	470c      	movi.n	a7, 4
400808f6:	d33f40        	movt	a3, a15, b4
400808f9:	624d      	lsi	f4, a2, 8
400808fb:	0b5010        	lsi	f1, a0, 44
400808fe:	3ffc      	bnez.n	a15, 40080935 <_init_end+0x535>
40080900:	482c      	movi.n	a8, 36
40080902:	383f40        	lsi	f4, a15, 224
40080905:	4048      	l32i.n	a4, a0, 16
40080907:	3f          	.byte 0x3f
40080908:	8708      	l32i.n	a0, a7, 32
4008090a:	083f41        	l32r	a4, 40042a08 <llc_hci_cmd_handler_tab_p_get+0x6b0>
4008090d:	3f4187        	ball	a1, a8, 40080950 <_init_end+0x550>
40080910:	087e24        	lsi	f2, a14, 32
40080913:	003040        	lsi	f4, a0, 0
40080916:	200005        	call0	400a0918 <_iram_end+0x12dc4>
40080919:	3f4000        	f64cmph	a4, a0, a0, 3
4008091c:	ff          	.byte 0xff
4008091d:	ff          	.byte 0xff
4008091e:	3f          	.byte 0x3f
4008091f:	48e4b3        	lsi	f11, a4, 0x120
40080922:	243f40        	extui	a3, a4, 15, 3
40080925:	404a      	add.n	a4, a0, a4
40080927:	3f          	.byte 0x3f
40080928:	48fc      	bnez.n	a8, 40080960 <_init_end+0x560>
4008092a:	743f40        	extui	a3, a4, 15, 8
4008092d:	4049      	s32i.n	a4, a0, 16
4008092f:	3f          	.byte 0x3f
40080930:	49f8      	l32i.n	a15, a9, 16
40080932:	743f40        	extui	a3, a4, 15, 8
40080935:	fbed      	lsi	f14, a11, 44
40080937:	3f          	.byte 0x3f
40080938:	006666        	bnei	a6, 6, 4008093c <_init_end+0x53c>
4008093b:	498800        	s32e	a0, a8, -32
4008093e:	783f40        	lsi	f4, a15, 0x1e0
40080941:	404a      	add.n	a4, a0, a4
40080943:	3f          	.byte 0x3f
40080944:	c00001        	l32r	a0, 40070944 <__udivmoddi4+0xbd50>
40080947:	b44c      	movi.n	a4, 75
40080949:	4049      	s32i.n	a4, a0, 16
4008094b:	3f          	.byte 0x3f
4008094c:	4049e4        	lsi	f14, a9, 0x100
4008094f:	3f          	.byte 0x3f
40080950:	4a4c      	movi.n	a10, 68
40080952:	743f40        	extui	a3, a4, 15, 8
40080955:	7bed      	lsi	f14, a11, 44
40080957:	0bf800        	wf64r	a8, a0, 1
4008095a:	3ffc      	bnez.n	a15, 40080991 <_init_end+0x591>
4008095c:	fbed84        	lsi	f8, a13, 0x3ec
4008095f:	3f          	.byte 0x3f
40080960:	4d08      	l32i.n	a0, a13, 16
40080962:	523f40        	lsi	f4, a15, 0x148
40080965:	0f          	.byte 0xf
40080966:	a00000        	addx4	a0, a0, a0
40080969:	404a      	add.n	a4, a0, a4
4008096b:	3f          	.byte 0x3f
4008096c:	4046f0        	lsi	f15, a6, 0x100
4008096f:	3f          	.byte 0x3f
40080970:	fc0c24        	lsi	f2, a12, 0x3f0
40080973:	3f          	.byte 0x3f
40080974:	fc0c10        	lsi	f1, a12, 0x3f0
40080977:	3f          	.byte 0x3f
40080978:	0bfc      	bnez.n	a11, 400809ac <_init_end+0x5ac>
4008097a:	3ffc      	bnez.n	a15, 400809b1 <_init_end+0x5b1>
4008097c:	0bcc      	bnez.n	a11, 40080980 <_init_end+0x580>
4008097e:	3ffc      	bnez.n	a15, 400809b5 <_init_end+0x5b5>
40080980:	fc0be0        	lsi	f14, a11, 0x3f0
40080983:	3f          	.byte 0x3f
40080984:	0bb8      	l32i.n	a11, a11, 0
40080986:	3ffc      	bnez.n	a15, 400809bd <_init_end+0x5bd>
40080988:	fc0ba0        	lsi	f10, a11, 0x3f0
4008098b:	3f          	.byte 0x3f
4008098c:	fc0bf4        	lsi	f15, a11, 0x3f0
4008098f:	3f          	.byte 0x3f
40080990:	4cf8      	l32i.n	a15, a12, 16
40080992:	443f40        	extui	a3, a4, 15, 5
40080995:	0f          	.byte 0xf
40080996:	900000        	addx2	a0, a0, a0
40080999:	fc0b      	addi.n	a15, a12, -1
4008099b:	3f          	.byte 0x3f
4008099c:	0b6c      	movi.n	a11, -32
4008099e:	3ffc      	bnez.n	a15, 400809d5 <_init_end+0x5d5>
400809a0:	0b98      	l32i.n	a9, a11, 0
400809a2:	3ffc      	bnez.n	a15, 400809d9 <_init_end+0x5d9>
400809a4:	404c80        	lsi	f8, a12, 0x100
400809a7:	3f          	.byte 0x3f
400809a8:	097b      	addi.n	a0, a9, 7
400809aa:	7c0000        	lsi	f0, a0, 0x1f0
400809ad:	fc0b      	addi.n	a15, a12, -1
400809af:	3f          	.byte 0x3f
400809b0:	fc0b64        	lsi	f6, a11, 0x3f0
400809b3:	3f          	.byte 0x3f
400809b4:	4c58      	l32i.n	a5, a12, 16
400809b6:	7c3f40        	lsi	f4, a15, 0x1f0
400809b9:	fbed      	lsi	f14, a11, 44
400809bb:	3f          	.byte 0x3f
400809bc:	0b8c      	beqz.n	a11, 400809c0 <_init_end+0x5c0>
400809be:	3ffc      	bnez.n	a15, 400809f5 <_init_end+0x5f5>
400809c0:	00c260        	lsi	f6, a2, 0
400809c3:	4bec40        	olt.s	b14, f12, f4
400809c6:	953f40        	extui	a3, a4, 31, 10
400809c9:	000c      	movi.n	a0, 0
400809cb:	0b7800        	lsi	f0, a8, 44
400809ce:	3ffc      	bnez.n	a15, 40080a05 <_init_end+0x605>
400809d0:	404ca0        	lsi	f10, a12, 0x100
400809d3:	3f          	.byte 0x3f
400809d4:	091b      	addi.n	a0, a9, 1
400809d6:	880000        	lsi	f0, a0, 0x220
400809d9:	fc0b      	addi.n	a15, a12, -1
400809db:	3f          	.byte 0x3f
400809dc:	4988      	l32i.n	a8, a9, 16
400809de:	943f40        	extui	a3, a4, 15, 10
400809e1:	404b      	addi.n	a4, a0, 4
400809e3:	3f          	.byte 0x3f
400809e4:	48fc      	bnez.n	a8, 40080a1c <_init_end+0x61c>
400809e6:	b43f40        	extui	a3, a4, 15, 12
400809e9:	4049      	s32i.n	a4, a0, 16
400809eb:	3f          	.byte 0x3f
400809ec:	4049e4        	lsi	f14, a9, 0x100
400809ef:	3f          	.byte 0x3f
400809f0:	4b68      	l32i.n	a6, a11, 16
400809f2:	e43f40        	extui	a3, a4, 15, 15
400809f5:	4048      	l32i.n	a4, a0, 16
400809f7:	3f          	.byte 0x3f
400809f8:	404b40        	lsi	f4, a11, 0x100
400809fb:	3f          	.byte 0x3f
400809fc:	404974        	lsi	f7, a9, 0x100
400809ff:	3f          	.byte 0x3f
40080a00:	404b14        	lsi	f1, a11, 0x100
40080a03:	3f          	.byte 0x3f
40080a04:	fffc      	bnez.n	a15, 40080a47 <_init_end+0x647>
40080a06:	ff          	.byte 0xff
40080a07:	7f          	.byte 0x7f
40080a08:	404d24        	lsi	f2, a13, 0x100
40080a0b:	3f          	.byte 0x3f
40080a0c:	fc0b94        	lsi	f9, a11, 0x3f0
40080a0f:	3f          	.byte 0x3f
40080a10:	fc0b74        	lsi	f7, a11, 0x3f0
40080a13:	3f          	.byte 0x3f
40080a14:	4b0c      	movi.n	a11, 4
40080a16:	143f40        	extui	a3, a4, 15, 2
40080a19:	400893        	lsi	f9, a8, 0x100
40080a1c:	404cc4        	lsi	f12, a12, 0x100
40080a1f:	3f          	.byte 0x3f
40080a20:	000835        	call12	40080aa4 <_init_end+0x6a4>
40080a23:	0bb400        	lsi	f0, a4, 44
40080a26:	3ffc      	bnez.n	a15, 40080a5d <_init_end+0x65d>
40080a28:	4d18      	l32i.n	a1, a13, 16
40080a2a:	ec3f40        	lsi	f4, a15, 0x3b0
40080a2d:	404c      	movi.n	a0, 68
40080a2f:	3f          	.byte 0x3f
40080a30:	4cd8      	l32i.n	a13, a12, 16
40080a32:	013f40        	slli	a3, a15, 28
40080a35:	800000        	add	a0, a0, a0
40080a38:	fc0bc0        	lsi	f12, a11, 0x3f0
40080a3b:	3f          	.byte 0x3f
40080a3c:	4c6c      	movi.n	a12, -28
40080a3e:	c53f40        	extui	a3, a4, 31, 13
40080a41:	0009      	s32i.n	a0, a0, 0
40080a43:	0b8400        	lsi	f0, a4, 44
40080a46:	3ffc      	bnez.n	a15, 40080a7d <_init_end+0x67d>
40080a48:	404cb4        	lsi	f11, a12, 0x100
40080a4b:	3f          	.byte 0x3f
40080a4c:	08a9      	s32i.n	a10, a8, 0
40080a4e:	400000        	ssr	a0
40080a51:	404c      	movi.n	a0, 68
40080a53:	3f          	.byte 0x3f
40080a54:	0b4d      	mov.n	a4, a11
40080a56:	200000        	or	a0, a0, a0
40080a59:	404c      	movi.n	a0, 68
40080a5b:	3f          	.byte 0x3f
40080a5c:	000bd4        	lsi	f13, a11, 0
40080a5f:	4c0400        	lsi	f0, a4, 0x130
40080a62:	133f40        	lsi	f4, a15, 76
40080a65:	000c      	movi.n	a0, 0
40080a67:	4bd400        	olt.s	b13, f4, f0
40080a6a:	9f3f40        	f64cmph	a3, a15, a4, 9
40080a6d:	000c      	movi.n	a0, 0
40080a6f:	0ca000        	lsi	f0, a0, 48
40080a72:	bc0000        	lsi	f0, a0, 0x2f0
40080a75:	404b      	addi.n	a4, a0, 4
40080a77:	3f          	.byte 0x3f
40080a78:	001005        	call0	40080b7c <_init_end+0x77c>
40080a7b:	0e2c00        	wrmsk_expstate	a0, a12
40080a7e:	3ffc      	bnez.n	a15, 40080ab5 <_init_end+0x6b5>
40080a80:	0e28      	l32i.n	a2, a14, 0
40080a82:	3ffc      	bnez.n	a15, 40080ab9 <_init_end+0x6b9>
40080a84:	fc0e24        	lsi	f2, a14, 0x3f0
40080a87:	3f          	.byte 0x3f
40080a88:	ed88      	l32i.n	a8, a13, 56
40080a8a:	3ffb      	addi.n	a3, a15, 15
40080a8c:	fc0e44        	lsi	f4, a14, 0x3f0
40080a8f:	3f          	.byte 0x3f
40080a90:	fc0e30        	lsi	f3, a14, 0x3f0
40080a93:	3f          	.byte 0x3f
40080a94:	4ddc      	bnez.n	a13, 40080aac <_init_end+0x6ac>
40080a96:	403f40        	lsi	f4, a15, 0x100
40080a99:	404d      	lsi	f4, a0, 0
40080a9b:	3f          	.byte 0x3f
40080a9c:	4046f0        	lsi	f15, a6, 0x100
40080a9f:	3f          	.byte 0x3f
40080aa0:	4dac      	beqz.n	a13, 40080ac8 <_init_end+0x6c8>
40080aa2:	203f40        	or	a3, a15, a4
40080aa5:	9f          	.byte 0x9f
40080aa6:	4008      	l32i.n	a0, a0, 16
40080aa8:	404e44        	lsi	f4, a14, 0x100
40080aab:	3f          	.byte 0x3f
40080aac:	404e30        	lsi	f3, a14, 0x100
40080aaf:	3f          	.byte 0x3f
40080ab0:	fc0e20        	lsi	f2, a14, 0x3f0
40080ab3:	3f          	.byte 0x3f
40080ab4:	4e18      	l32i.n	a1, a14, 16
40080ab6:	b43f40        	extui	a3, a4, 15, 12
40080ab9:	404d      	lsi	f4, a0, 0
40080abb:	3f          	.byte 0x3f
40080abc:	4dfc      	bnez.n	a13, 40080af4 <_init_end+0x6f4>
40080abe:	d43f40        	extui	a3, a4, 15, 14
40080ac1:	3ffbe7        	bbsi	a11, 30, 40080b04 <_init_end+0x704>
40080ac4:	fbe1d0        	f64subc	a13, a1, 3, 0
40080ac7:	3f          	.byte 0x3f
40080ac8:	fbfff0        	f64subc	a15, a15, 3, 1
40080acb:	ff          	.byte 0xff
40080acc:	fae8      	l32i.n	a14, a10, 60
40080ace:	3ffb      	addi.n	a3, a15, 15
40080ad0:	fe48      	l32i.n	a4, a14, 60
40080ad2:	3ffb      	addi.n	a3, a15, 15
40080ad4:	fb08      	l32i.n	a0, a11, 60
40080ad6:	3ffb      	addi.n	a3, a15, 15
40080ad8:	fbfb74        	lsi	f7, a11, 0x3ec
40080adb:	3f          	.byte 0x3f
40080adc:	fe5c      	movi.n	a14, 95
40080ade:	3ffb      	addi.n	a3, a15, 15
40080ae0:	fba8      	l32i.n	a10, a11, 60
40080ae2:	3ffb      	addi.n	a3, a15, 15
40080ae4:	fbfbc0        	f64subc	a12, a11, 3, 1
40080ae7:	3f          	.byte 0x3f
40080ae8:	fbfe70        	f64subc	a7, a14, 3, 1
40080aeb:	3f          	.byte 0x3f
40080aec:	fbd8      	l32i.n	a13, a11, 60
40080aee:	3ffb      	addi.n	a3, a15, 15
40080af0:	fe38      	l32i.n	a3, a14, 60
40080af2:	3ffb      	addi.n	a3, a15, 15
40080af4:	fbfbe0        	f64subc	a14, a11, 3, 1
40080af7:	3f          	.byte 0x3f
40080af8:	fbfe20        	f64subc	a2, a14, 3, 1
40080afb:	3f          	.byte 0x3f
40080afc:	ba1234        	lsi	f3, a2, 0x2e8
40080aff:	78ab      	addi.n	a7, a8, 10
40080b01:	baad56        	bnez	a13, 400806af <_init_end+0x2af>
40080b04:	fbfe80        	f64subc	a8, a14, 3, 1
40080b07:	3f          	.byte 0x3f
40080b08:	febc      	beqz.n	a14, 40080b4b <_init_end+0x74b>
40080b0a:	3ffb      	addi.n	a3, a15, 15
40080b0c:	fef8      	l32i.n	a15, a14, 60
40080b0e:	3ffb      	addi.n	a3, a15, 15
40080b10:	ffec      	bnez.n	a15, 40080b43 <_init_end+0x743>
40080b12:	3ffb      	addi.n	a3, a15, 15
40080b14:	ff08      	l32i.n	a0, a15, 60
40080b16:	3ffb      	addi.n	a3, a15, 15
40080b18:	ffd8      	l32i.n	a13, a15, 60
40080b1a:	3ffb      	addi.n	a3, a15, 15
40080b1c:	ffb8      	l32i.n	a11, a15, 60
40080b1e:	3ffb      	addi.n	a3, a15, 15
40080b20:	f40000        	extui	a0, a0, 0, 16
40080b23:	3f          	.byte 0x3f
40080b24:	666667        	bbci	a6, 6, 40080b8e <_init_end+0x78e>
40080b27:	fffc66        	bnei	a12, 0x100, 40080b2a <_init_end+0x72a>
40080b2a:	ff          	.byte 0xff
40080b2b:	bf          	.byte 0xbf
40080b2c:	f08c      	beqz.n	a0, 40080b3f <_init_end+0x73f>
40080b2e:	3ffb      	addi.n	a3, a15, 15
40080b30:	fbf0a0        	f64subc	a10, a0, 3, 1
40080b33:	3f          	.byte 0x3f
40080b34:	f9e8      	l32i.n	a14, a9, 60
40080b36:	3ffb      	addi.n	a3, a15, 15
40080b38:	fbf270        	f64subc	a7, a2, 3, 1
40080b3b:	3f          	.byte 0x3f
40080b3c:	038000        	rsr.ibreaka0	a0
40080b3f:	000000        	ill
40080b42:	001c      	movi.n	a0, 16
40080b44:	400000        	ssr	a0
40080b47:	ff9c      	beqz.n	a15, 40080b6a <_init_end+0x76a>
40080b49:	ff          	.byte 0xff
40080b4a:	ff          	.byte 0xff
40080b4b:	3f          	.byte 0x3f
40080b4c:	fbf0a4        	lsi	f10, a0, 0x3ec
40080b4f:	3f          	.byte 0x3f
40080b50:	f0a8      	l32i.n	a10, a0, 60
40080b52:	3ffb      	addi.n	a3, a15, 15
40080b54:	f0ac      	beqz.n	a0, 40080b87 <_init_end+0x787>
40080b56:	3ffb      	addi.n	a3, a15, 15
40080b58:	051ff0        	extui	a1, a15, 31, 1
40080b5b:	1fe0c0        	f64cmph	a14, a0, a12, 1
40080b5e:	bc0005        	call0	4003cb60 <ld_inq_frm_cbk+0x1d14>
40080b61:	3ffbf0        	f64cmph	a15, a11, a15, 3
40080b64:	fc0074        	lsi	f7, a0, 0x3f0
40080b67:	3f          	.byte 0x3f
40080b68:	f758      	l32i.n	a5, a7, 60
40080b6a:	3ffb      	addi.n	a3, a15, 15
40080b6c:	fbf0c4        	lsi	f12, a0, 0x3ec
40080b6f:	3f          	.byte 0x3f
40080b70:	f0cc      	bnez.n	a0, 40080b83 <_init_end+0x783>
40080b72:	3ffb      	addi.n	a3, a15, 15
40080b74:	f10c      	movi.n	a1, 15
40080b76:	3ffb      	addi.n	a3, a15, 15
40080b78:	fbf0e0        	f64subc	a14, a0, 3, 1
40080b7b:	3f          	.byte 0x3f
40080b7c:	fc0070        	lsi	f7, a0, 0x3f0
40080b7f:	3f          	.byte 0x3f
40080b80:	fbf0e4        	lsi	f14, a0, 0x3ec
40080b83:	3f          	.byte 0x3f
40080b84:	fbf104        	lsi	f0, a1, 0x3ec
40080b87:	3f          	.byte 0x3f
40080b88:	fbf114        	lsi	f1, a1, 0x3ec
40080b8b:	3f          	.byte 0x3f
40080b8c:	fbf124        	lsi	f2, a1, 0x3ec
40080b8f:	3f          	.byte 0x3f
40080b90:	fbf134        	lsi	f3, a1, 0x3ec
40080b93:	3f          	.byte 0x3f
40080b94:	1b58      	l32i.n	a5, a11, 4
40080b96:	640000        	extui	a0, a0, 0, 7
40080b99:	3ffbf2        	s32ri	a15, a11, 252
40080b9c:	fbf274        	lsi	f7, a2, 0x3ec
40080b9f:	3f          	.byte 0x3f
40080ba0:	fbf290        	f64subc	a9, a2, 3, 1
40080ba3:	3f          	.byte 0x3f
40080ba4:	08b334        	lsi	f3, a3, 32
40080ba7:	f29840        	rems	a9, a8, a4
40080baa:	3ffb      	addi.n	a3, a15, 15
40080bac:	fbf2a4        	lsi	f10, a2, 0x3ec
40080baf:	3f          	.byte 0x3f
40080bb0:	6f          	.byte 0x6f
40080bb1:	4008b3        	lsi	f11, a8, 0x100
40080bb4:	fbf2d0        	f64subc	a13, a2, 3, 1
40080bb7:	3f          	.byte 0x3f
40080bb8:	fbf300        	f64subc	a0, a3, 3, 1
40080bbb:	3f          	.byte 0x3f
40080bbc:	f328      	l32i.n	a2, a3, 60
40080bbe:	3ffb      	addi.n	a3, a15, 15
40080bc0:	fbf340        	f64subc	a4, a3, 3, 1
40080bc3:	3f          	.byte 0x3f
40080bc4:	f7b8      	l32i.n	a11, a7, 60
40080bc6:	3ffb      	addi.n	a3, a15, 15
40080bc8:	fbf350        	f64subc	a5, a3, 3, 1
40080bcb:	3f          	.byte 0x3f
40080bcc:	fbf370        	f64subc	a7, a3, 3, 1
40080bcf:	3f          	.byte 0x3f
40080bd0:	f37c      	movi.n	a3, -1
40080bd2:	3ffb      	addi.n	a3, a15, 15
40080bd4:	fbf380        	f64subc	a8, a3, 3, 1
40080bd7:	3f          	.byte 0x3f
40080bd8:	f39c      	beqz.n	a3, 40080bfb <_init_end+0x7fb>
40080bda:	3ffb      	addi.n	a3, a15, 15
40080bdc:	f3a8      	l32i.n	a10, a3, 60
40080bde:	3ffb      	addi.n	a3, a15, 15
40080be0:	f3b8      	l32i.n	a11, a3, 60
40080be2:	3ffb      	addi.n	a3, a15, 15
40080be4:	f3dc      	bnez.n	a3, 40080c07 <_init_end+0x807>
40080be6:	3ffb      	addi.n	a3, a15, 15
40080be8:	fbf3e0        	f64subc	a14, a3, 3, 1
40080beb:	3f          	.byte 0x3f
40080bec:	f3f8      	l32i.n	a15, a3, 60
40080bee:	3ffb      	addi.n	a3, a15, 15
40080bf0:	f408      	l32i.n	a0, a4, 60
40080bf2:	3ffb      	addi.n	a3, a15, 15
40080bf4:	f418      	l32i.n	a1, a4, 60
40080bf6:	3ffb      	addi.n	a3, a15, 15
40080bf8:	f7d8      	l32i.n	a13, a7, 60
40080bfa:	3ffb      	addi.n	a3, a15, 15
40080bfc:	f4fc      	bnez.n	a4, 40080c3f <_init_end+0x83f>
40080bfe:	3ffb      	addi.n	a3, a15, 15
40080c00:	fbbc      	beqz.n	a11, 40080c43 <_init_end+0x843>
40080c02:	3ffb      	addi.n	a3, a15, 15
40080c04:	fbf504        	lsi	f0, a5, 0x3ec
40080c07:	3f          	.byte 0x3f
40080c08:	f50c      	movi.n	a5, 15
40080c0a:	3ffb      	addi.n	a3, a15, 15
40080c0c:	f52c      	movi.n	a5, 47
40080c0e:	3ffb      	addi.n	a3, a15, 15
40080c10:	f56c      	movi.n	a5, -17
40080c12:	3ffb      	addi.n	a3, a15, 15
40080c14:	f480a4        	lsi	f10, a0, 0x3d0
40080c17:	3f          	.byte 0x3f
40080c18:	5f          	.byte 0x5f
40080c19:	af27c5        	call0	4002fe98 <ld_acl_rx_no_sync+0x20>
40080c1c:	f480a0        	extui	a8, a10, 0, 16
40080c1f:	3f          	.byte 0x3f
40080c20:	808c      	beqz.n	a0, 40080c2c <_init_end+0x82c>
40080c22:	803ff4        	lsi	f15, a15, 0x200
40080c25:	800000        	add	a0, a0, a0
40080c28:	f48090        	extui	a8, a9, 0, 16
40080c2b:	3f          	.byte 0x3f
40080c2c:	f48094        	lsi	f9, a0, 0x3d0
40080c2f:	3f          	.byte 0x3f
40080c30:	8098      	l32i.n	a9, a0, 32
40080c32:	9c3ff4        	lsi	f15, a15, 0x270
40080c35:	3ff480        	f64cmph	a15, a4, a8, 3
40080c38:	ff          	.byte 0xff
40080c39:	ff          	.byte 0xff
40080c3a:	ff          	.byte 0xff
40080c3b:	8f          	.byte 0x8f
40080c3c:	ff          	.byte 0xff
40080c3d:	ff          	.byte 0xff
40080c3e:	ff          	.byte 0xff
40080c3f:	fffff1        	l32r	a15, 40080c3c <_init_end+0x83c>
40080c42:	3f          	.byte 0x3f
40080c43:	fe          	.byte 0xfe
40080c44:	ff          	.byte 0xff
40080c45:	ff          	.byte 0xff
40080c46:	ffffc7        	bbsi	a15, 28, 40080c49 <_init_end+0x849>
40080c49:	ffffc7        	bbsi	a15, 28, 40080c4c <_init_end+0x84c>
40080c4c:	ff          	.byte 0xff
40080c4d:	3f          	.byte 0x3f
40080c4e:	fe          	.byte 0xfe
40080c4f:	ff          	.byte 0xff
40080c50:	f48030        	extui	a8, a3, 0, 16
40080c53:	3f          	.byte 0x3f
40080c54:	ff          	.byte 0xff
40080c55:	ff          	.byte 0xff
40080c56:	ff          	.byte 0xff
40080c57:	1cfb      	addi.n	a1, a12, 15
40080c59:	3ff480        	f64cmph	a15, a4, a8, 3
40080c5c:	ff          	.byte 0xff
40080c5d:	ff          	.byte 0xff
40080c5e:	ff          	.byte 0xff
40080c5f:	3fff00        	f64cmph	a15, a15, a0, 3
40080c62:	3fff00        	f64cmph	a15, a15, a0, 3
40080c65:	ffffc0        	f64cmph	a15, a15, a12, 15
40080c68:	8078      	l32i.n	a7, a0, 32
40080c6a:	003ff4        	lsi	f15, a15, 0
40080c6d:	030000        	rsr.lbeg	a0
40080c70:	807c      	movi.n	a0, -8
40080c72:	003ff4        	lsi	f15, a15, 0
40080c75:	080000        	lsx	f0, a0, a0
40080c78:	000000        	ill
40080c7b:	f7ff01        	l32r	a0, 4007ec78 <__udivmoddi4+0x1a084>
40080c7e:	ff          	.byte 0xff
40080c7f:	ff          	.byte 0xff
40080c80:	f00094        	lsi	f9, a0, 0x3c0
40080c83:	3f          	.byte 0x3f
40080c84:	f000a0        	subx8	a0, a0, a10
40080c87:	3f          	.byte 0x3f
40080c88:	f000a4        	lsi	f10, a0, 0x3c0
40080c8b:	3f          	.byte 0x3f
40080c8c:	00ac      	beqz.n	a0, 40080cb0 <_init_end+0x8b0>
40080c8e:	703ff0        	lsi	f15, a15, 0x1c0
40080c91:	3ff480        	f64cmph	a15, a4, a8, 3
40080c94:	ff          	.byte 0xff
40080c95:	df          	.byte 0xdf
40080c96:	ff          	.byte 0xff
40080c97:	ff          	.byte 0xff
40080c98:	ff          	.byte 0xff
40080c99:	ff          	.byte 0xff
40080c9a:	bf          	.byte 0xbf
40080c9b:	ff          	.byte 0xff
40080c9c:	ff          	.byte 0xff
40080c9d:	ff          	.byte 0xff
40080c9e:	fffff7        	bbsi	a15, 31, 40080ca1 <_init_end+0x8a1>
40080ca1:	ff          	.byte 0xff
40080ca2:	fe          	.byte 0xfe
40080ca3:	ff          	.byte 0xff
40080ca4:	100000        	and	a0, a0, a0
40080ca7:	000000        	ill
40080caa:	ff0002        	l8ui	a0, a0, 255
40080cad:	ff          	.byte 0xff
40080cae:	ff          	.byte 0xff
40080caf:	fe          	.byte 0xfe
40080cb0:	800000        	add	a0, a0, a0
40080cb3:	ffff00        	f64cmph	a15, a15, a0, 15
40080cb6:	ff          	.byte 0xff
40080cb7:	df          	.byte 0xdf
40080cb8:	f48084        	lsi	f8, a0, 0x3d0
40080cbb:	3f          	.byte 0x3f
40080cbc:	ff          	.byte 0xff
40080cbd:	ff          	.byte 0xff
40080cbe:	ef          	.byte 0xef
40080cbf:	ff          	.byte 0xff
40080cc0:	ff          	.byte 0xff
40080cc1:	ff          	.byte 0xff
40080cc2:	fffb      	addi.n	a15, a15, 15
40080cc4:	bf          	.byte 0xbf
40080cc5:	feaa      	add.n	a15, a14, a10
40080cc7:	ff          	.byte 0xff
40080cc8:	f48080        	extui	a8, a8, 0, 16
40080ccb:	3f          	.byte 0x3f
40080ccc:	ff          	.byte 0xff
40080ccd:	df          	.byte 0xdf
40080cce:	fe          	.byte 0xfe
40080ccf:	ff          	.byte 0xff
40080cd0:	8088      	l32i.n	a8, a0, 32
40080cd2:	ff3ff4        	lsi	f15, a15, 0x3fc
40080cd5:	ff          	.byte 0xff
40080cd6:	fff555        	call4	40080c2c <_init_end+0x82c>
40080cd9:	bf          	.byte 0xbf
40080cda:	ff          	.byte 0xff
40080cdb:	ff          	.byte 0xff
40080cdc:	ff          	.byte 0xff
40080cdd:	ef          	.byte 0xef
40080cde:	ff          	.byte 0xff
40080cdf:	ff          	.byte 0xff
40080ce0:	008000        	any4	b0, b0:b1:b2:b3
40080ce3:	81b300        	src	a11, a3, a0
40080ce6:	f00000        	subx8	a0, a0, a0
40080ce9:	0249      	s32i.n	a4, a2, 0
40080ceb:	7ffe00        	f64cmph	a15, a14, a0, 7
40080cee:	e40000        	extui	a0, a0, 0, 15
40080cf1:	3f4056        	bnez	a0, 400810e9 <esp_clk_apb_freq+0x1>
40080cf4:	57b8      	l32i.n	a11, a7, 20
40080cf6:	fc3f40        	lsi	f4, a15, 0x3f0
40080cf9:	3f4056        	bnez	a0, 400810f1 <esp_clk_apb_freq+0x9>
40080cfc:	f068      	l32i.n	a6, a0, 60
40080cfe:	ff3ff5        	call12	400800fc <_WindowUnderflow8+0x3c>
40080d01:	9f          	.byte 0x9f
40080d02:	ff          	.byte 0xff
40080d03:	ff          	.byte 0xff
40080d04:	ff          	.byte 0xff
40080d05:	ff          	.byte 0xff
40080d06:	ff8000        	f64cmph	a8, a0, a0, 15
40080d09:	ff          	.byte 0xff
40080d0a:	ff          	.byte 0xff
40080d0b:	576c01        	l32r	a0, 40056abc <strtoul+0x190>
40080d0e:	783f40        	lsi	f4, a15, 0x1e0
40080d11:	3f4057        	ball	a0, a5, 40080d54 <_init_end+0x954>
40080d14:	f06c      	movi.n	a0, -17
40080d16:	0c3ff5        	call12	4008d114 <esp_rom_spiflash_read_status+0x8>
40080d19:	3ff480        	f64cmph	a15, a4, a8, 3
40080d1c:	8048      	l32i.n	a4, a0, 32
40080d1e:	103ff4        	lsi	f15, a15, 64
40080d21:	3ff480        	f64cmph	a15, a4, a8, 3
40080d24:	f48014        	lsi	f1, a0, 0x3d0
40080d27:	3f          	.byte 0x3f
40080d28:	ff          	.byte 0xff
40080d29:	ef          	.byte 0xef
40080d2a:	ff          	.byte 0xff
40080d2b:	7f          	.byte 0x7f
40080d2c:	ff          	.byte 0xff
40080d2d:	7f          	.byte 0x7f
40080d2e:	ff          	.byte 0xff
40080d2f:	ff          	.byte 0xff
40080d30:	848c      	beqz.n	a4, 40080d3c <_init_end+0x93c>
40080d32:	df3ff4        	lsi	f15, a15, 0x37c
40080d35:	e73ff7        	bltu	a15, a15, 40080d20 <_init_end+0x920>
40080d38:	060000        	lsi	f0, a0, 24
40080d3b:	ffff00        	f64cmph	a15, a15, a0, 15
40080d3e:	cf          	.byte 0xcf
40080d3f:	ff          	.byte 0xff
40080d40:	080000        	lsx	f0, a0, a0
40080d43:	0e5c00        	lsi	f0, a12, 56
40080d46:	3ffc      	bnez.n	a15, 40080d7d <_init_end+0x97d>
40080d48:	040000        	extui	a0, a0, 0, 1
40080d4b:	fabf00        	mov.s	f11, f15
40080d4e:	fffb      	addi.n	a15, a15, 15
40080d50:	0041a4        	lsi	f10, a1, 0
40080d53:	ffff40        	f64cmph	a15, a15, a4, 15
40080d56:	fff9      	s32i.n	a15, a15, 60
40080d58:	003800        	lsi	f0, a8, 0
40080d5b:	80b000        	add	a11, a0, a0
40080d5e:	fe3ff4        	lsi	f15, a15, 0x3f8
40080d61:	ff          	.byte 0xff
40080d62:	000000        	ill
40080d65:	3ff660        	f64cmph	a15, a6, a6, 3
40080d68:	003c      	movi.n	a0, 48
40080d6a:	643ff0        	extui	a3, a15, 15, 7
40080d6d:	fbfa      	add.n	a15, a11, a15
40080d6f:	3f          	.byte 0x3f
40080d70:	fa98      	l32i.n	a9, a10, 60
40080d72:	3ffb      	addi.n	a3, a15, 15
40080d74:	f480b4        	lsi	f11, a0, 0x3d0
40080d77:	3f          	.byte 0x3f
40080d78:	f66004        	lsi	f0, a0, 0x3d8
40080d7b:	3f          	.byte 0x3f
40080d7c:	ff          	.byte 0xff
40080d7d:	ff          	.byte 0xff
40080d7e:	ff          	.byte 0xff
40080d7f:	fac8e7        	bnall	a8, a14, 40080d7d <_init_end+0x97d>
40080d82:	3ffb      	addi.n	a3, a15, 15
40080d84:	c4b400        	extui	a11, a0, 4, 13
40080d87:	b32004        	lsi	f0, a0, 0x2cc
40080d8a:	200081        	l32r	a8, 40048d8c <lld_evt_get_next_free_slot+0x2460>
40080d8d:	0007a1        	l32r	a10, 40040dac <r_ld_sched_sniff_add+0x13e8>
40080d90:	fae290        	sqrt0.s	f14, f2
40080d93:	3f          	.byte 0x3f
40080d94:	f42010        	extui	a2, a1, 0, 16
40080d97:	3f          	.byte 0x3f
40080d98:	f42000        	extui	a2, a0, 0, 16
40080d9b:	3f          	.byte 0x3f
40080d9c:	0621b0        	lsi	f11, a1, 24
40080d9f:	20f840        	or	a15, a8, a4
40080da2:	f83ff4        	lsi	f15, a15, 0x3e0
40080da5:	3ff430        	f64cmph	a15, a4, a3, 3
40080da8:	f42004        	lsi	f0, a0, 0x3d0
40080dab:	3f          	.byte 0x3f
40080dac:	202c      	movi.n	a0, 34
40080dae:	203ff4        	lsi	f15, a15, 128
40080db1:	fd08      	l32i.n	a0, a13, 60
40080db3:	0f          	.byte 0xf
40080db4:	100000        	and	a0, a0, a0
40080db7:	3ffcc0        	f64cmph	a15, a12, a12, 3
40080dba:	9c0001        	l32r	a0, 40067dbc <__udivmoddi4+0x31c8>
40080dbd:	3f4080        	f64cmph	a4, a0, a8, 3
40080dc0:	408390        	lsi	f9, a3, 0x100
40080dc3:	3f          	.byte 0x3f
40080dc4:	81d8      	l32i.n	a13, a1, 32
40080dc6:	003f40        	lsi	f4, a15, 0
40080dc9:	200000        	or	a0, a0, a0
40080dcc:	408254        	lsi	f5, a2, 0x100
40080dcf:	3f          	.byte 0x3f
40080dd0:	83ac      	beqz.n	a3, 40080dfc <_init_end+0x9fc>
40080dd2:	003f40        	lsi	f4, a15, 0
40080dd5:	020000        	andb	b0, b0, b0
40080dd8:	fae270        	div0.s	f14, f2
40080ddb:	3f          	.byte 0x3f
40080ddc:	000000        	ill
40080ddf:	200804        	lsi	f0, a8, 128
40080de2:	1c3ff4        	lsi	f15, a15, 112
40080de5:	3ff420        	f64cmph	a15, a4, a2, 3
40080de8:	f42020        	extui	a2, a2, 0, 16
40080deb:	3f          	.byte 0x3f
40080dec:	000000        	ill
40080def:	f45c      	movi.n	a4, 95
40080df1:	062d      	mov.n	a2, a6
40080df3:	2e1c40        	f64norm	a1, a12, a4, 0
40080df6:	604006        	j	40098efa <_iram_end+0xb3a6>
40080df9:	2e          	.byte 0x2e
40080dfa:	004006        	j	40080efe <start_cpu0_default+0x86>
40080dfd:	010020        	slli	a0, a0, 30
40080e00:	ff          	.byte 0xff
40080e01:	ff          	.byte 0xff
40080e02:	ff          	.byte 0xff
40080e03:	0000f7        	bnone	a0, a15, 40080e07 <_init_end+0xa07>
40080e06:	007000        	waiti	0
40080e09:	7c0000        	lsi	f0, a0, 0x1f0
40080e0c:	f42024        	lsi	f2, a0, 0x3d0
40080e0f:	3f          	.byte 0x3f
40080e10:	00eb      	addi.n	a0, a0, 14
40080e12:	007000        	waiti	0
40080e15:	500000        	lsi	f0, a0, 0x140
40080e18:	00bb      	addi.n	a0, a0, 11
40080e1a:	6b7000        	ole.s	b7, f0, f0
40080e1d:	700000        	lsi	f0, a0, 0x1c0
40080e20:	003b      	addi.n	a0, a0, 3
40080e22:	0b7000        	lsi	f0, a0, 44
40080e25:	700000        	lsi	f0, a0, 0x1c0
40080e28:	000003        	lsi	f0, a0, 0
40080e2b:	70          	.byte 0x70

40080e2c <esp_random>:
40080e2c:	004136        	entry	a1, 32
40080e2f:	002aa5        	call8	400810d8 <esp_clk_cpu_freq>
40080e32:	202aa0        	or	a2, a10, a10
40080e35:	002b25        	call8	400810e8 <esp_clk_apb_freq>
40080e38:	d2a2a0        	quos	a10, a2, a10
40080e3b:	00a092        	movi	a9, 0
40080e3e:	03ea80        	rsr.ccount	a8
40080e41:	082d      	mov.n	a2, a8
40080e43:	fd6fb1        	l32r	a11, 40080400 <_init_end>
40080e46:	0020c0        	memw
40080e49:	0bb8      	l32i.n	a11, a11, 0
40080e4b:	3099b0        	xor	a9, a9, a11
40080e4e:	fd6db1        	l32r	a11, 40080404 <_init_end+0x4>
40080e51:	0bb8      	l32i.n	a11, a11, 0
40080e53:	c088b0        	sub	a8, a8, a11
40080e56:	11bac0        	slli	a11, a10, 4
40080e59:	e138b7        	bltu	a8, a11, 40080e3e <esp_random+0x12>
40080e5c:	fd6a81        	l32r	a8, 40080404 <_init_end+0x4>
40080e5f:	0829      	s32i.n	a2, a8, 0
40080e61:	f03d      	nop.n
40080e63:	f03d      	nop.n
40080e65:	f03d      	nop.n
40080e67:	f03d      	nop.n
40080e69:	fd6521        	l32r	a2, 40080400 <_init_end>
40080e6c:	0020c0        	memw
40080e6f:	0228      	l32i.n	a2, a2, 0
40080e71:	302920        	xor	a2, a9, a2
40080e74:	f01d      	retw.n
	...

40080e78 <start_cpu0_default>:
40080e78:	006136        	entry	a1, 48
40080e7b:	68eb65        	call8	400e9d30 <esp_setup_syscall_table>
40080e7e:	54da65        	call8	400d5c24 <esp_clk_init>
40080e81:	54e3e5        	call8	400d5cc0 <esp_perip_clk_init>
40080e84:	54cc25        	call8	400d5b48 <intr_matrix_clear>
40080e87:	fd60b1        	l32r	a11, 40080408 <_init_end+0x8>
40080e8a:	0a0c      	movi.n	a10, 0
40080e8c:	fd6d81        	l32r	a8, 40080440 <_init_end+0x40>
40080e8f:	0008e0        	callx8	a8
40080e92:	55b2a5        	call8	400d69bc <esp_brownout_init>
40080e95:	68a9a5        	call8	400e9930 <rtc_gpio_force_hold_dis_all>
40080e98:	592665        	call8	400da100 <esp_vfs_dev_uart_register>
40080e9b:	fd5c21        	l32r	a2, 4008040c <_init_end+0xc>
40080e9e:	02a8      	l32i.n	a10, a2, 0
40080ea0:	03a425        	call8	400848e4 <esp_reent_init>
40080ea3:	0248      	l32i.n	a4, a2, 0
40080ea5:	fd5b31        	l32r	a3, 40080414 <_init_end+0x14>
40080ea8:	fd5ab1        	l32r	a11, 40080410 <_init_end+0x10>
40080eab:	20a330        	or	a10, a3, a3
40080eae:	5a11a5        	call8	400dafc8 <fopen>
40080eb1:	14a9      	s32i.n	a10, a4, 4
40080eb3:	f03d      	nop.n
40080eb5:	f03d      	nop.n
40080eb7:	f03d      	nop.n
40080eb9:	f03d      	nop.n
40080ebb:	0258      	l32i.n	a5, a2, 0
40080ebd:	fd5641        	l32r	a4, 40080418 <_init_end+0x18>
40080ec0:	04bd      	mov.n	a11, a4
40080ec2:	03ad      	mov.n	a10, a3
40080ec4:	5a1025        	call8	400dafc8 <fopen>
40080ec7:	25a9      	s32i.n	a10, a5, 8
40080ec9:	f03d      	nop.n
40080ecb:	f03d      	nop.n
40080ecd:	f03d      	nop.n
40080ecf:	f03d      	nop.n
40080ed1:	0228      	l32i.n	a2, a2, 0
40080ed3:	04bd      	mov.n	a11, a4
40080ed5:	03ad      	mov.n	a10, a3
40080ed7:	5a0f25        	call8	400dafc8 <fopen>
40080eda:	32a9      	s32i.n	a10, a2, 12
40080edc:	5594a5        	call8	400d6828 <esp_timer_init>
40080edf:	68d725        	call8	400e9c50 <esp_set_time_from_rtc>
40080ee2:	5605a5        	call8	400d6f3c <esp_dbg_stubs_init>
40080ee5:	690625        	call8	400e9f48 <esp_pthread_init>
40080ee8:	da8c      	beqz.n	a10, 40080ef9 <start_cpu0_default+0x81>
40080eea:	fd4cd1        	l32r	a13, 4008041c <_init_end+0x1c>
40080eed:	fd4cc1        	l32r	a12, 40080420 <_init_end+0x20>
40080ef0:	6da1b2        	movi	a11, 0x16d
40080ef3:	fd4ca1        	l32r	a10, 40080424 <_init_end+0x24>
40080ef6:	59fe25        	call8	400daed8 <__assert_func>
40080ef9:	54c7a5        	call8	400d5b74 <do_global_ctors>
40080efc:	556325        	call8	400d6530 <esp_int_wdt_init>
40080eff:	5574e5        	call8	400d664c <esp_int_wdt_cpu_init>
40080f02:	561365        	call8	400d7038 <esp_cache_err_int_init>
40080f05:	54ec25        	call8	400d5dc8 <esp_crosscore_int_init>
40080f08:	55a4e5        	call8	400d6958 <esp_dport_access_int_init>
40080f0b:	695765        	call8	400ea480 <spi_flash_init>
40080f0e:	fd46a1        	l32r	a10, 40080428 <_init_end+0x28>
40080f11:	055865        	call8	40086498 <spi_flash_guard_set>
40080f14:	fd46a1        	l32r	a10, 4008042c <_init_end+0x2c>
40080f17:	6917a5        	call8	400ea090 <esp_coex_adapter_register>
40080f1a:	0d0c      	movi.n	a13, 0
40080f1c:	01d9      	s32i.n	a13, a1, 0
40080f1e:	0dfd      	mov.n	a15, a13
40080f20:	1e0c      	movi.n	a14, 1
40080f22:	f03d      	nop.n
40080f24:	f03d      	nop.n
40080f26:	fd42c1        	l32r	a12, 40080430 <_init_end+0x30>
40080f29:	fd42b1        	l32r	a11, 40080434 <_init_end+0x34>
40080f2c:	fd43a1        	l32r	a10, 40080438 <_init_end+0x38>
40080f2f:	07f065        	call8	40088e34 <xTaskCreatePinnedToCore>
40080f32:	0e1a26        	beqi	a10, 1, 40080f44 <start_cpu0_default+0xcc>
40080f35:	fd41d1        	l32r	a13, 4008043c <_init_end+0x3c>
40080f38:	fd3ac1        	l32r	a12, 40080420 <_init_end+0x20>
40080f3b:	94a1b2        	movi	a11, 0x194
40080f3e:	fd39a1        	l32r	a10, 40080424 <_init_end+0x24>
40080f41:	59f965        	call8	400daed8 <__assert_func>
40080f44:	07f7a5        	call8	40088ec0 <vTaskStartScheduler>
40080f47:	0a4265        	call8	4008b36c <abort>
	...

40080f4c <start_cpu1_default>:
40080f4c:	004136        	entry	a1, 32
40080f4f:	fd3d81        	l32r	a8, 40080444 <_init_end+0x44>
40080f52:	0020c0        	memw
40080f55:	0888      	l32i.n	a8, a8, 0
40080f57:	ff4816        	beqz	a8, 40080f4f <start_cpu1_default+0x3>
40080f5a:	556f25        	call8	400d664c <esp_int_wdt_cpu_init>
40080f5d:	560da5        	call8	400d7038 <esp_cache_err_int_init>
40080f60:	54e665        	call8	400d5dc8 <esp_crosscore_int_init>
40080f63:	559f65        	call8	400d6958 <esp_dport_access_int_init>
40080f66:	201110        	or	a1, a1, a1
40080f69:	06f865        	call8	40087ef0 <xPortStartScheduler>
40080f6c:	201110        	or	a1, a1, a1
40080f6f:	0a3fe5        	call8	4008b36c <abort>
	...

40080f74 <call_start_cpu1>:
40080f74:	004136        	entry	a1, 32
40080f77:	fd3421        	l32r	a2, 40080448 <_init_end+0x48>
40080f7a:	13e720        	wsr.vecbase	a2
40080f7d:	00a0a2        	movi	a10, 0
40080f80:	fd3481        	l32r	a8, 40080450 <_init_end+0x50>
40080f83:	0008e0        	callx8	a8
40080f86:	54b2e5        	call8	400d5ab4 <cpu_configure_region_protection>
40080f89:	020c      	movi.n	a2, 0
40080f8b:	136120        	wsr.memctl	a2
40080f8e:	fd3181        	l32r	a8, 40080454 <_init_end+0x54>
40080f91:	0008e0        	callx8	a8
40080f94:	fd3181        	l32r	a8, 40080458 <_init_end+0x58>
40080f97:	0008e0        	callx8	a8
40080f9a:	20a220        	or	a10, a2, a2
40080f9d:	fd2f81        	l32r	a8, 4008045c <_init_end+0x5c>
40080fa0:	0008e0        	callx8	a8
40080fa3:	54bfa5        	call8	400d5b9c <wdt_reset_cpu1_info_enable>
40080fa6:	180c      	movi.n	a8, 1
40080fa8:	fd2921        	l32r	a2, 4008044c <_init_end+0x4c>
40080fab:	004282        	s8i	a8, a2, 0
40080fae:	0020c0        	memw
40080fb1:	fff9a5        	call8	40080f4c <start_cpu1_default>

40080fb4 <call_start_cpu0>:
40080fb4:	004136        	entry	a1, 32
40080fb7:	54afe5        	call8	400d5ab4 <cpu_configure_region_protection>
40080fba:	020c      	movi.n	a2, 0
40080fbc:	136120        	wsr.memctl	a2
40080fbf:	fd2231        	l32r	a3, 40080448 <_init_end+0x48>
40080fc2:	13e730        	wsr.vecbase	a3
40080fc5:	20a220        	or	a10, a2, a2
40080fc8:	fd3281        	l32r	a8, 40080490 <_init_end+0x90>
40080fcb:	0008e0        	callx8	a8
40080fce:	0a3d      	mov.n	a3, a10
40080fd0:	1a0c      	movi.n	a10, 1
40080fd2:	fd2f81        	l32r	a8, 40080490 <_init_end+0x90>
40080fd5:	0008e0        	callx8	a8
40080fd8:	fd23a1        	l32r	a10, 40080464 <_init_end+0x64>
40080fdb:	fd21c1        	l32r	a12, 40080460 <_init_end+0x60>
40080fde:	c0cca0        	sub	a12, a12, a10
40080fe1:	02bd      	mov.n	a11, a2
40080fe3:	fd2c81        	l32r	a8, 40080494 <_init_end+0x94>
40080fe6:	0008e0        	callx8	a8
40080fe9:	105326        	beqi	a3, 5, 40080ffd <call_start_cpu0+0x49>
40080fec:	fd20a1        	l32r	a10, 4008046c <_init_end+0x6c>
40080fef:	fd1ec1        	l32r	a12, 40080468 <_init_end+0x68>
40080ff2:	c0cca0        	sub	a12, a12, a10
40080ff5:	02bd      	mov.n	a11, a2
40080ff7:	fd2781        	l32r	a8, 40080494 <_init_end+0x94>
40080ffa:	0008e0        	callx8	a8
40080ffd:	565965        	call8	400d7594 <bootloader_common_set_flash_cs_timing>
40081000:	fd1c21        	l32r	a2, 40080470 <_init_end+0x70>
40081003:	0020c0        	memw
40081006:	0228      	l32i.n	a2, a2, 0
40081008:	256207        	bbci	a2, 0, 40081031 <call_start_cpu0+0x7d>
4008100b:	02d265        	call8	40083d30 <esp_log_timestamp>
4008100e:	fd1921        	l32r	a2, 40080474 <_init_end+0x74>
40081011:	02cd      	mov.n	a12, a2
40081013:	0abd      	mov.n	a11, a10
40081015:	fd18a1        	l32r	a10, 40080478 <_init_end+0x78>
40081018:	fd2081        	l32r	a8, 40080498 <_init_end+0x98>
4008101b:	0008e0        	callx8	a8
4008101e:	02d125        	call8	40083d30 <esp_log_timestamp>
40081021:	02cd      	mov.n	a12, a2
40081023:	0abd      	mov.n	a11, a10
40081025:	fd15a1        	l32r	a10, 4008047c <_init_end+0x7c>
40081028:	fd1c81        	l32r	a8, 40080498 <_init_end+0x98>
4008102b:	0008e0        	callx8	a8
4008102e:	0a33e5        	call8	4008b36c <abort>
40081031:	0074a5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081034:	1a0c      	movi.n	a10, 1
40081036:	fd1981        	l32r	a8, 4008049c <_init_end+0x9c>
40081039:	0008e0        	callx8	a8
4008103c:	008125        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
4008103f:	0073e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081042:	1a0c      	movi.n	a10, 1
40081044:	fd1781        	l32r	a8, 400804a0 <_init_end+0xa0>
40081047:	0008e0        	callx8	a8
4008104a:	008065        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
4008104d:	1a0c      	movi.n	a10, 1
4008104f:	0372e5        	call8	4008477c <esp_cpu_unstall>
40081052:	fd0ba1        	l32r	a10, 40080480 <_init_end+0x80>
40081055:	008f25        	call8	40081948 <esp_dport_access_reg_read>
40081058:	50ea07        	bbsi	a10, 0, 400810ac <call_start_cpu0+0xf8>
4008105b:	fd0921        	l32r	a2, 40080480 <_init_end+0x80>
4008105e:	02ad      	mov.n	a10, a2
40081060:	008e65        	call8	40081948 <esp_dport_access_reg_read>
40081063:	140c      	movi.n	a4, 1
40081065:	20aa40        	or	a10, a10, a4
40081068:	0020c0        	memw
4008106b:	02a9      	s32i.n	a10, a2, 0
4008106d:	f03d      	nop.n
4008106f:	f03d      	nop.n
40081071:	f03d      	nop.n
40081073:	f03d      	nop.n
40081075:	fd0321        	l32r	a2, 40080484 <_init_end+0x84>
40081078:	02ad      	mov.n	a10, a2
4008107a:	008ce5        	call8	40081948 <esp_dport_access_reg_read>
4008107d:	e37c      	movi.n	a3, -2
4008107f:	10aa30        	and	a10, a10, a3
40081082:	0020c0        	memw
40081085:	02a9      	s32i.n	a10, a2, 0
40081087:	f03d      	nop.n
40081089:	f03d      	nop.n
4008108b:	f03d      	nop.n
4008108d:	f03d      	nop.n
4008108f:	fcfe21        	l32r	a2, 40080488 <_init_end+0x88>
40081092:	02ad      	mov.n	a10, a2
40081094:	008b25        	call8	40081948 <esp_dport_access_reg_read>
40081097:	20aa40        	or	a10, a10, a4
4008109a:	0020c0        	memw
4008109d:	02a9      	s32i.n	a10, a2, 0
4008109f:	02ad      	mov.n	a10, a2
400810a1:	008a65        	call8	40081948 <esp_dport_access_reg_read>
400810a4:	10aa30        	and	a10, a10, a3
400810a7:	0020c0        	memw
400810aa:	02a9      	s32i.n	a10, a2, 0
400810ac:	f03d      	nop.n
400810ae:	f03d      	nop.n
400810b0:	f03d      	nop.n
400810b2:	f03d      	nop.n
400810b4:	fcf6a1        	l32r	a10, 4008048c <_init_end+0x8c>
400810b7:	fce681        	l32r	a8, 40080450 <_init_end+0x50>
400810ba:	0008e0        	callx8	a8
400810bd:	000206        	j	400810c9 <call_start_cpu0+0x115>
400810c0:	64a0a2        	movi	a10, 100
400810c3:	fcf881        	l32r	a8, 400804a4 <_init_end+0xa4>
400810c6:	0008e0        	callx8	a8
400810c9:	fce081        	l32r	a8, 4008044c <_init_end+0x4c>
400810cc:	000882        	l8ui	a8, a8, 0
400810cf:	fed816        	beqz	a8, 400810c0 <call_start_cpu0+0x10c>
400810d2:	59a025        	call8	400daad4 <heap_caps_init>
400810d5:	ffda25        	call8	40080e78 <start_cpu0_default>

400810d8 <esp_clk_cpu_freq>:
400810d8:	004136        	entry	a1, 32
400810db:	fcf321        	l32r	a2, 400804a8 <_init_end+0xa8>
400810de:	0228      	l32i.n	a2, a2, 0
400810e0:	fcf381        	l32r	a8, 400804ac <_init_end+0xac>
400810e3:	822280        	mull	a2, a2, a8
400810e6:	f01d      	retw.n

400810e8 <esp_clk_apb_freq>:
400810e8:	004136        	entry	a1, 32
400810eb:	fcef21        	l32r	a2, 400804a8 <_init_end+0xa8>
400810ee:	0288      	l32i.n	a8, a2, 0
400810f0:	025c      	movi.n	a2, 80
400810f2:	638280        	minu	a8, a2, a8
400810f5:	fced21        	l32r	a2, 400804ac <_init_end+0xac>
400810f8:	822820        	mull	a2, a8, a2
400810fb:	f01d      	retw.n
400810fd:	000000        	ill

40081100 <esp_clk_xtal_freq>:
40081100:	004136        	entry	a1, 32
40081103:	0b9ba5        	call8	4008cabc <rtc_clk_xtal_freq_get>
40081106:	fce921        	l32r	a2, 400804ac <_init_end+0xac>
40081109:	822a20        	mull	a2, a10, a2
4008110c:	f01d      	retw.n
	...

40081110 <ets_update_cpu_frequency>:
40081110:	004136        	entry	a1, 32
40081113:	fce581        	l32r	a8, 400804a8 <_init_end+0xa8>
40081116:	0829      	s32i.n	a2, a8, 0
40081118:	f03d      	nop.n
4008111a:	f03d      	nop.n
4008111c:	f03d      	nop.n
4008111e:	f03d      	nop.n
40081120:	fce481        	l32r	a8, 400804b0 <_init_end+0xb0>
40081123:	0829      	s32i.n	a2, a8, 0
40081125:	f01d      	retw.n
	...

40081128 <esp_crosscore_int_send>:
40081128:	004136        	entry	a1, 32
4008112b:	0e22a6        	blti	a2, 2, 4008113d <esp_crosscore_int_send+0x15>
4008112e:	fce1d1        	l32r	a13, 400804b4 <_init_end+0xb4>
40081131:	fce1c1        	l32r	a12, 400804b8 <_init_end+0xb8>
40081134:	61a0b2        	movi	a11, 97
40081137:	fce1a1        	l32r	a10, 400804bc <_init_end+0xbc>
4008113a:	59d9e5        	call8	400daed8 <__assert_func>
4008113d:	fce041        	l32r	a4, 400804c0 <_init_end+0xc0>
40081140:	04ad      	mov.n	a10, a4
40081142:	0794e5        	call8	40088a90 <vTaskEnterCritical>
40081145:	fcdf81        	l32r	a8, 400804c4 <_init_end+0xc4>
40081148:	a08280        	addx4	a8, a2, a8
4008114b:	0020c0        	memw
4008114e:	0898      	l32i.n	a9, a8, 0
40081150:	203930        	or	a3, a9, a3
40081153:	0020c0        	memw
40081156:	0839      	s32i.n	a3, a8, 0
40081158:	04ad      	mov.n	a10, a4
4008115a:	07a765        	call8	40088bd0 <vTaskExitCritical>
4008115d:	d2cc      	bnez.n	a2, 4008116e <esp_crosscore_int_send+0x46>
4008115f:	130c      	movi.n	a3, 1
40081161:	fcd921        	l32r	a2, 400804c8 <_init_end+0xc8>
40081164:	0020c0        	memw
40081167:	0239      	s32i.n	a3, a2, 0
40081169:	f01d      	retw.n
4008116b:	000000        	ill
4008116e:	130c      	movi.n	a3, 1
40081170:	fcd721        	l32r	a2, 400804cc <_init_end+0xcc>
40081173:	0020c0        	memw
40081176:	0239      	s32i.n	a3, a2, 0
40081178:	f01d      	retw.n
	...

4008117c <esp_crosscore_isr>:
4008117c:	004136        	entry	a1, 32
4008117f:	03eb30        	rsr.prid	a3
40081182:	043d30        	extui	a3, a3, 13, 1
40081185:	b3cc      	bnez.n	a3, 40081194 <esp_crosscore_isr+0x18>
40081187:	040c      	movi.n	a4, 0
40081189:	fccf31        	l32r	a3, 400804c8 <_init_end+0xc8>
4008118c:	0020c0        	memw
4008118f:	0349      	s32i.n	a4, a3, 0
40081191:	000286        	j	4008119f <esp_crosscore_isr+0x23>
40081194:	00a042        	movi	a4, 0
40081197:	fccd31        	l32r	a3, 400804cc <_init_end+0xcc>
4008119a:	0020c0        	memw
4008119d:	0349      	s32i.n	a4, a3, 0
4008119f:	f03d      	nop.n
400811a1:	f03d      	nop.n
400811a3:	f03d      	nop.n
400811a5:	f03d      	nop.n
400811a7:	fcc631        	l32r	a3, 400804c0 <_init_end+0xc0>
400811aa:	03ad      	mov.n	a10, a3
400811ac:	078e25        	call8	40088a90 <vTaskEnterCritical>
400811af:	0020c0        	memw
400811b2:	0248      	l32i.n	a4, a2, 0
400811b4:	080c      	movi.n	a8, 0
400811b6:	0020c0        	memw
400811b9:	0289      	s32i.n	a8, a2, 0
400811bb:	03ad      	mov.n	a10, a3
400811bd:	07a125        	call8	40088bd0 <vTaskExitCritical>
400811c0:	026407        	bbci	a4, 0, 400811c6 <esp_crosscore_isr+0x4a>
400811c3:	08ea25        	call8	4008a064 <_frxt_setup_switch>
400811c6:	f01d      	retw.n

400811c8 <esp_crosscore_int_send_yield>:
400811c8:	004136        	entry	a1, 32
400811cb:	1b0c      	movi.n	a11, 1
400811cd:	02ad      	mov.n	a10, a2
400811cf:	fff5a5        	call8	40081128 <esp_crosscore_int_send>
400811d2:	f01d      	retw.n

400811d4 <esp_crosscore_int_send_freq_switch>:
400811d4:	004136        	entry	a1, 32
400811d7:	2b0c      	movi.n	a11, 2
400811d9:	02ad      	mov.n	a10, a2
400811db:	fff4e5        	call8	40081128 <esp_crosscore_int_send>
400811de:	f01d      	retw.n

400811e0 <shared_intr_isr>:
400811e0:	004136        	entry	a1, 32
400811e3:	1228      	l32i.n	a2, a2, 4
400811e5:	fcbaa1        	l32r	a10, 400804d0 <_init_end+0xd0>
400811e8:	078a65        	call8	40088a90 <vTaskEnterCritical>
400811eb:	0007c6        	j	4008120e <shared_intr_isr+0x2e>
400811ee:	000000        	ill
400811f1:	0288      	l32i.n	a8, a2, 0
400811f3:	15e807        	bbsi	a8, 0, 4008120c <shared_intr_isr+0x2c>
400811f6:	1288      	l32i.n	a8, a2, 4
400811f8:	988c      	beqz.n	a8, 40081205 <shared_intr_isr+0x25>
400811fa:	0020c0        	memw
400811fd:	0898      	l32i.n	a9, a8, 0
400811ff:	022282        	l32i	a8, a2, 8
40081202:	060987        	bnone	a9, a8, 4008120c <shared_intr_isr+0x2c>
40081205:	3288      	l32i.n	a8, a2, 12
40081207:	42a8      	l32i.n	a10, a2, 16
40081209:	0008e0        	callx8	a8
4008120c:	5228      	l32i.n	a2, a2, 20
4008120e:	fdf256        	bnez	a2, 400811f1 <shared_intr_isr+0x11>
40081211:	fcafa1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081214:	079ba5        	call8	40088bd0 <vTaskExitCritical>
40081217:	f01d      	retw.n
40081219:	000000        	ill

4008121c <esp_intr_set_in_iram>:
4008121c:	004136        	entry	a1, 32
4008121f:	743030        	extui	a3, a3, 0, 8
40081222:	08f216        	beqz	a2, 400812b5 <esp_intr_set_in_iram+0x99>
40081225:	002222        	l32i	a2, a2, 0
40081228:	001282        	l16ui	a8, a2, 0
4008122b:	026827        	bbci	a8, 2, 40081231 <esp_intr_set_in_iram+0x15>
4008122e:	002286        	j	400812bc <esp_intr_set_in_iram+0xa0>
40081231:	fca7a1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081234:	0785a5        	call8	40088a90 <vTaskEnterCritical>
40081237:	002282        	l32i	a8, a2, 0
4008123a:	458180        	extui	a8, a8, 17, 5
4008123d:	01a092        	movi	a9, 1
40081240:	401800        	ssl	a8
40081243:	a18900        	sll	a8, a9
40081246:	e3ac      	beqz.n	a3, 40081278 <esp_intr_set_in_iram+0x5c>
40081248:	001292        	l16ui	a9, a2, 0
4008124b:	230c      	movi.n	a3, 2
4008124d:	203930        	or	a3, a9, a3
40081250:	005232        	s16i	a3, a2, 0
40081253:	0020c0        	memw
40081256:	f03d      	nop.n
40081258:	f03d      	nop.n
4008125a:	f03d      	nop.n
4008125c:	f03d      	nop.n
4008125e:	0228      	l32i.n	a2, a2, 0
40081260:	052020        	extui	a2, a2, 16, 1
40081263:	f37c      	movi.n	a3, -1
40081265:	308380        	xor	a8, a3, a8
40081268:	fc9b31        	l32r	a3, 400804d4 <_init_end+0xd4>
4008126b:	a02230        	addx4	a2, a2, a3
4008126e:	0238      	l32i.n	a3, a2, 0
40081270:	103380        	and	a3, a3, a8
40081273:	0239      	s32i.n	a3, a2, 0
40081275:	000a86        	j	400812a3 <esp_intr_set_in_iram+0x87>
40081278:	001292        	l16ui	a9, a2, 0
4008127b:	fdaf32        	movi	a3, -3
4008127e:	103930        	and	a3, a9, a3
40081281:	005232        	s16i	a3, a2, 0
40081284:	0020c0        	memw
40081287:	f03d      	nop.n
40081289:	f03d      	nop.n
4008128b:	f03d      	nop.n
4008128d:	f03d      	nop.n
4008128f:	002222        	l32i	a2, a2, 0
40081292:	052020        	extui	a2, a2, 16, 1
40081295:	fc8f31        	l32r	a3, 400804d4 <_init_end+0xd4>
40081298:	a02230        	addx4	a2, a2, a3
4008129b:	002232        	l32i	a3, a2, 0
4008129e:	208380        	or	a8, a3, a8
400812a1:	0289      	s32i.n	a8, a2, 0
400812a3:	f03d      	nop.n
400812a5:	f03d      	nop.n
400812a7:	f03d      	nop.n
400812a9:	f03d      	nop.n
400812ab:	fc89a1        	l32r	a10, 400804d0 <_init_end+0xd0>
400812ae:	079225        	call8	40088bd0 <vTaskExitCritical>
400812b1:	020c      	movi.n	a2, 0
400812b3:	f01d      	retw.n
400812b5:	02a122        	movi	a2, 0x102
400812b8:	f01d      	retw.n
400812ba:	220000        	orb	b0, b0, b0
400812bd:	1d02a1        	l32r	a10, 400486c8 <lld_evt_get_next_free_slot+0x1d9c>
400812c0:	0000f0        	callx12	a0
	...

400812c4 <esp_intr_enable>:
400812c4:	004136        	entry	a1, 32
400812c7:	07e216        	beqz	a2, 40081349 <esp_intr_enable+0x85>
400812ca:	fc81a1        	l32r	a10, 400804d0 <_init_end+0xd0>
400812cd:	077c25        	call8	40088a90 <vTaskEnterCritical>
400812d0:	012282        	l32i	a8, a2, 4
400812d3:	023816        	beqz	a8, 400812fa <esp_intr_enable+0x36>
400812d6:	0018a2        	l16ui	a10, a8, 0
400812d9:	feaf92        	movi	a9, -2
400812dc:	109a90        	and	a9, a10, a9
400812df:	005892        	s16i	a9, a8, 0
400812e2:	0020c0        	memw
400812e5:	f03d      	nop.n
400812e7:	f03d      	nop.n
400812e9:	f03d      	nop.n
400812eb:	f03d      	nop.n
400812ed:	1288      	l32i.n	a8, a2, 4
400812ef:	08b8      	l32i.n	a11, a8, 0
400812f1:	74b1b0        	extui	a11, a11, 1, 8
400812f4:	23bb00        	sext	a11, a11, 7
400812f7:	000246        	j	40081304 <esp_intr_enable+0x40>
400812fa:	0288      	l32i.n	a8, a2, 0
400812fc:	08b8      	l32i.n	a11, a8, 0
400812fe:	75b6b0        	extui	a11, a11, 22, 8
40081301:	23bb00        	sext	a11, a11, 7
40081304:	015b96        	bltz	a11, 4008131d <esp_intr_enable+0x59>
40081307:	0228      	l32i.n	a2, a2, 0
40081309:	0022a2        	l32i	a10, a2, 0
4008130c:	45c1a0        	extui	a12, a10, 17, 5
4008130f:	05a0a0        	extui	a10, a10, 16, 1
40081312:	fc7181        	l32r	a8, 400804d8 <_init_end+0xd8>
40081315:	0008e0        	callx8	a8
40081318:	0008c6        	j	4008133f <esp_intr_enable+0x7b>
4008131b:	820000        	mull	a0, a0, a0
4008131e:	220022        	l8ui	a2, a0, 34
40081321:	0028      	l32i.n	a2, a0, 0
40081323:	052020        	extui	a2, a2, 16, 1
40081326:	03eb90        	rsr.prid	a9
40081329:	049d90        	extui	a9, a9, 13, 1
4008132c:	209297        	bne	a2, a9, 40081350 <esp_intr_enable+0x8c>
4008132f:	0828      	l32i.n	a2, a8, 0
40081331:	452120        	extui	a2, a2, 17, 5
40081334:	1a0c      	movi.n	a10, 1
40081336:	401200        	ssl	a2
40081339:	a1aa00        	sll	a10, a10
4008133c:	08fee5        	call8	4008a32c <xt_ints_on>
4008133f:	fc64a1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081342:	0788e5        	call8	40088bd0 <vTaskExitCritical>
40081345:	020c      	movi.n	a2, 0
40081347:	f01d      	retw.n
40081349:	02a122        	movi	a2, 0x102
4008134c:	f01d      	retw.n
4008134e:	220000        	orb	b0, b0, b0
40081351:	1d02a1        	l32r	a10, 4004875c <lld_evt_get_next_free_slot+0x1e30>
40081354:	0000f0        	callx12	a0
	...

40081358 <esp_intr_disable>:
40081358:	004136        	entry	a1, 32
4008135b:	0c5216        	beqz	a2, 40081424 <esp_intr_disable+0xcc>
4008135e:	fc5ca1        	l32r	a10, 400804d0 <_init_end+0xd0>
40081361:	0772e5        	call8	40088a90 <vTaskEnterCritical>
40081364:	012282        	l32i	a8, a2, 4
40081367:	051816        	beqz	a8, 400813bc <esp_intr_disable+0x64>
4008136a:	0018a2        	l16ui	a10, a8, 0
4008136d:	01a092        	movi	a9, 1
40081370:	209a90        	or	a9, a10, a9
40081373:	005892        	s16i	a9, a8, 0
40081376:	0020c0        	memw
40081379:	f03d      	nop.n
4008137b:	f03d      	nop.n
4008137d:	f03d      	nop.n
4008137f:	f03d      	nop.n
40081381:	1288      	l32i.n	a8, a2, 4
40081383:	08b8      	l32i.n	a11, a8, 0
40081385:	74b1b0        	extui	a11, a11, 1, 8
40081388:	23bb00        	sext	a11, a11, 7
4008138b:	0288      	l32i.n	a8, a2, 0
4008138d:	012892        	l32i	a9, a8, 4
40081390:	020956        	bnez	a9, 400813b4 <esp_intr_disable+0x5c>
40081393:	fc52d1        	l32r	a13, 400804dc <_init_end+0xdc>
40081396:	fc52c1        	l32r	a12, 400804e0 <_init_end+0xe0>
40081399:	3ca3b2        	movi	a11, 0x33c
4008139c:	fc52a1        	l32r	a10, 400804e4 <_init_end+0xe4>
4008139f:	59b3a5        	call8	400daed8 <__assert_func>
400813a2:	0988      	l32i.n	a8, a9, 0
400813a4:	748180        	extui	a8, a8, 1, 8
400813a7:	238800        	sext	a8, a8, 7
400813aa:	049b87        	bne	a11, a8, 400813b2 <esp_intr_disable+0x5a>
400813ad:	0988      	l32i.n	a8, a9, 0
400813af:	1a6807        	bbci	a8, 0, 400813cd <esp_intr_disable+0x75>
400813b2:	5998      	l32i.n	a9, a9, 20
400813b4:	fea956        	bnez	a9, 400813a2 <esp_intr_disable+0x4a>
400813b7:	180c      	movi.n	a8, 1
400813b9:	000486        	j	400813cf <esp_intr_disable+0x77>
400813bc:	0288      	l32i.n	a8, a2, 0
400813be:	08b8      	l32i.n	a11, a8, 0
400813c0:	75b6b0        	extui	a11, a11, 22, 8
400813c3:	23bb00        	sext	a11, a11, 7
400813c6:	180c      	movi.n	a8, 1
400813c8:	0000c6        	j	400813cf <esp_intr_disable+0x77>
400813cb:	0c0000        	lsi	f0, a0, 48
400813ce:	9608      	l32i.n	a0, a6, 36
400813d0:	015b      	addi.n	a0, a1, 5
400813d2:	043816        	beqz	a8, 40081419 <esp_intr_disable+0xc1>
400813d5:	0228      	l32i.n	a2, a2, 0
400813d7:	02a8      	l32i.n	a10, a2, 0
400813d9:	6c0c      	movi.n	a12, 6
400813db:	05a0a0        	extui	a10, a10, 16, 1
400813de:	fc3e81        	l32r	a8, 400804d8 <_init_end+0xd8>
400813e1:	0008e0        	callx8	a8
400813e4:	000c46        	j	40081419 <esp_intr_disable+0xc1>
400813e7:	228200        	orb	b8, b2, b0
400813ea:	282200        	lsi	f0, a2, 160
400813ed:	202000        	or	a2, a0, a0
400813f0:	eb9005        	call0	4006ccf4 <__udivmoddi4+0x8100>
400813f3:	9d9003        	lsi	f0, a0, 0x274
400813f6:	129704        	lsi	f0, a7, 72
400813f9:	a10b      	addi.n	a10, a1, -1
400813fb:	25fc35        	call12	400a73bc <_iram_end+0x19868>
400813fe:	077d      	mov.n	a7, a7
40081400:	02a122        	movi	a2, 0x102
40081403:	000090        	retw
40081406:	0828      	l32i.n	a2, a8, 0
40081408:	452120        	extui	a2, a2, 17, 5
4008140b:	1a0c      	movi.n	a10, 1
4008140d:	401200        	ssl	a2
40081410:	a1aa00        	sll	a10, a10
40081413:	201110        	or	a1, a1, a1
40081416:	08f2e5        	call8	4008a344 <xt_ints_off>
40081419:	fc2da1        	l32r	a10, 400804d0 <_init_end+0xd0>
4008141c:	077b25        	call8	40088bd0 <vTaskExitCritical>
4008141f:	020c      	movi.n	a2, 0
40081421:	f01d      	retw.n
40081423:	a12200        	sll	a2, a2
40081426:	f01d02        	l16ui	a0, a13, 0x1e0
40081429:	000000        	ill

4008142c <esp_intr_noniram_disable>:
4008142c:	004136        	entry	a1, 32
4008142f:	03eb80        	rsr.prid	a8
40081432:	048d80        	extui	a8, a8, 13, 1
40081435:	fc2791        	l32r	a9, 400804d4 <_init_end+0xd4>
40081438:	a09890        	addx4	a9, a8, a9
4008143b:	0998      	l32i.n	a9, a9, 0
4008143d:	fa7c      	movi.n	a10, -1
4008143f:	30ba90        	xor	a11, a10, a9
40081442:	fc29a1        	l32r	a10, 400804e8 <_init_end+0xe8>
40081445:	aa8a      	add.n	a10, a10, a8
40081447:	000aa2        	l8ui	a10, a10, 0
4008144a:	002a16        	beqz	a10, 40081450 <esp_intr_noniram_disable+0x24>
4008144d:	09f1e5        	call8	4008b36c <abort>
40081450:	fc26a1        	l32r	a10, 400804e8 <_init_end+0xe8>
40081453:	aa8a      	add.n	a10, a10, a8
40081455:	1c0c      	movi.n	a12, 1
40081457:	004ac2        	s8i	a12, a10, 0
4008145a:	0020c0        	memw
4008145d:	0a0c      	movi.n	a10, 0
4008145f:	61e4a0        	xsr.intenable	a10
40081462:	002010        	rsync
40081465:	103ab0        	and	a3, a10, a11
40081468:	13e430        	wsr.intenable	a3
4008146b:	002010        	rsync
4008146e:	109a90        	and	a9, a10, a9
40081471:	f03d      	nop.n
40081473:	f03d      	nop.n
40081475:	fc1da1        	l32r	a10, 400804ec <_init_end+0xec>
40081478:	a088a0        	addx4	a8, a8, a10
4008147b:	0899      	s32i.n	a9, a8, 0
4008147d:	f01d      	retw.n
	...

40081480 <esp_intr_noniram_enable>:
40081480:	004136        	entry	a1, 32
40081483:	03eb80        	rsr.prid	a8
40081486:	048d80        	extui	a8, a8, 13, 1
40081489:	fc1891        	l32r	a9, 400804ec <_init_end+0xec>
4008148c:	a09890        	addx4	a9, a8, a9
4008148f:	0029a2        	l32i	a10, a9, 0
40081492:	fc1591        	l32r	a9, 400804e8 <_init_end+0xe8>
40081495:	809980        	add	a9, a9, a8
40081498:	000992        	l8ui	a9, a9, 0
4008149b:	002956        	bnez	a9, 400814a1 <esp_intr_noniram_enable+0x21>
4008149e:	09ece5        	call8	4008b36c <abort>
400814a1:	fc1191        	l32r	a9, 400804e8 <_init_end+0xe8>
400814a4:	898a      	add.n	a8, a9, a8
400814a6:	090c      	movi.n	a9, 0
400814a8:	004892        	s8i	a9, a8, 0
400814ab:	0020c0        	memw
400814ae:	030c      	movi.n	a3, 0
400814b0:	61e430        	xsr.intenable	a3
400814b3:	002010        	rsync
400814b6:	2033a0        	or	a3, a3, a10
400814b9:	13e430        	wsr.intenable	a3
400814bc:	002010        	rsync
400814bf:	f01d      	retw.n
400814c1:	000000        	ill

400814c4 <ets_isr_unmask>:
400814c4:	004136        	entry	a1, 32
400814c7:	02ad      	mov.n	a10, a2
400814c9:	08e625        	call8	4008a32c <xt_ints_on>
400814cc:	f01d      	retw.n
	...

400814d0 <ets_isr_mask>:
400814d0:	004136        	entry	a1, 32
400814d3:	02ad      	mov.n	a10, a2
400814d5:	08e6e5        	call8	4008a344 <xt_ints_off>
400814d8:	f01d      	retw.n
	...

400814dc <tick_hook>:
400814dc:	004136        	entry	a1, 32
400814df:	03eb80        	rsr.prid	a8
400814e2:	048d80        	extui	a8, a8, 13, 1
400814e5:	c88c      	beqz.n	a8, 400814f5 <tick_hook+0x19>
400814e7:	190c      	movi.n	a9, 1
400814e9:	fc0181        	l32r	a8, 400804f0 <_init_end+0xf0>
400814ec:	004892        	s8i	a9, a8, 0
400814ef:	0020c0        	memw
400814f2:	f01d      	retw.n
400814f4:	fe8100        	f64iter	a8, a1, a0, 3, 1
400814f7:	82fb      	addi.n	a8, a2, 15
400814f9:	0008      	l32i.n	a0, a0, 0
400814fb:	d8bc      	beqz.n	a8, 4008153c <tick_hook+0x60>
400814fd:	fbfd81        	l32r	a8, 400804f4 <_init_end+0xf4>
40081500:	fbfe91        	l32r	a9, 400804f8 <_init_end+0xf8>
40081503:	0020c0        	memw
40081506:	196892        	s32i	a9, a8, 100
40081509:	58a292        	movi	a9, 0x258
4008150c:	0020c0        	memw
4008150f:	146892        	s32i	a9, a8, 80
40081512:	b0a492        	movi	a9, 0x4b0
40081515:	0020c0        	memw
40081518:	156892        	s32i	a9, a8, 84
4008151b:	190c      	movi.n	a9, 1
4008151d:	0020c0        	memw
40081520:	186892        	s32i	a9, a8, 96
40081523:	090c      	movi.n	a9, 0
40081525:	0020c0        	memw
40081528:	196892        	s32i	a9, a8, 100
4008152b:	f03d      	nop.n
4008152d:	f03d      	nop.n
4008152f:	f03d      	nop.n
40081531:	f03d      	nop.n
40081533:	fbef81        	l32r	a8, 400804f0 <_init_end+0xf0>
40081536:	004892        	s8i	a9, a8, 0
40081539:	0020c0        	memw
4008153c:	f01d      	retw.n
	...

40081540 <timer_armed>:
40081540:	004136        	entry	a1, 32
40081543:	0288      	l32i.n	a8, a2, 0
40081545:	1228      	l32i.n	a2, a2, 4
40081547:	208820        	or	a8, a8, a2
4008154a:	020c      	movi.n	a2, 0
4008154c:	190c      	movi.n	a9, 1
4008154e:	932980        	movnez	a2, a9, a8
40081551:	f01d      	retw.n
	...

40081554 <is_initialized>:
40081554:	004136        	entry	a1, 32
40081557:	fbe921        	l32r	a2, 400804fc <_init_end+0xfc>
4008155a:	0288      	l32i.n	a8, a2, 0
4008155c:	020c      	movi.n	a2, 0
4008155e:	190c      	movi.n	a9, 1
40081560:	932980        	movnez	a2, a9, a8
40081563:	f01d      	retw.n
40081565:	000000        	ill

40081568 <timer_list_lock>:
40081568:	004136        	entry	a1, 32
4008156b:	fbe5a1        	l32r	a10, 40080500 <_init_end+0x100>
4008156e:	075225        	call8	40088a90 <vTaskEnterCritical>
40081571:	f01d      	retw.n
	...

40081574 <timer_list_unlock>:
40081574:	004136        	entry	a1, 32
40081577:	fbe2a1        	l32r	a10, 40080500 <_init_end+0x100>
4008157a:	076565        	call8	40088bd0 <vTaskExitCritical>
4008157d:	f01d      	retw.n
	...

40081580 <timer_insert>:
40081580:	004136        	entry	a1, 32
40081583:	fffe65        	call8	40081568 <timer_list_lock>
40081586:	fbdf81        	l32r	a8, 40080504 <_init_end+0x104>
40081589:	0888      	l32i.n	a8, a8, 0
4008158b:	04e856        	bnez	a8, 400815dd <timer_insert+0x5d>
4008158e:	6289      	s32i.n	a8, a2, 24
40081590:	488c      	beqz.n	a8, 40081598 <timer_insert+0x18>
40081592:	18c292        	addi	a9, a2, 24
40081595:	076892        	s32i	a9, a8, 28
40081598:	f03d      	nop.n
4008159a:	f03d      	nop.n
4008159c:	f03d      	nop.n
4008159e:	f03d      	nop.n
400815a0:	fbd981        	l32r	a8, 40080504 <_init_end+0x104>
400815a3:	0829      	s32i.n	a2, a8, 0
400815a5:	7289      	s32i.n	a8, a2, 28
400815a7:	001a46        	j	40081614 <timer_insert+0x94>
400815aa:	02d8      	l32i.n	a13, a2, 0
400815ac:	1298      	l32i.n	a9, a2, 4
400815ae:	08c8      	l32i.n	a12, a8, 0
400815b0:	0128a2        	l32i	a10, a8, 4
400815b3:	0539a7        	bltu	a9, a10, 400815bc <timer_insert+0x3c>
400815b6:	1c9a97        	bne	a10, a9, 400815d6 <timer_insert+0x56>
400815b9:	19bdc7        	bgeu	a13, a12, 400815d6 <timer_insert+0x56>
400815bc:	7898      	l32i.n	a9, a8, 28
400815be:	7299      	s32i.n	a9, a2, 28
400815c0:	6289      	s32i.n	a8, a2, 24
400815c2:	f03d      	nop.n
400815c4:	f03d      	nop.n
400815c6:	f03d      	nop.n
400815c8:	f03d      	nop.n
400815ca:	7898      	l32i.n	a9, a8, 28
400815cc:	0929      	s32i.n	a2, a9, 0
400815ce:	18c292        	addi	a9, a2, 24
400815d1:	7899      	s32i.n	a9, a8, 28
400815d3:	000306        	j	400815e3 <timer_insert+0x63>
400815d6:	08bd      	mov.n	a11, a8
400815d8:	6888      	l32i.n	a8, a8, 24
400815da:	000086        	j	400815e0 <timer_insert+0x60>
400815dd:	00a0b2        	movi	a11, 0
400815e0:	fc6856        	bnez	a8, 400815aa <timer_insert+0x2a>
400815e3:	02d856        	bnez	a8, 40081614 <timer_insert+0x94>
400815e6:	00eb56        	bnez	a11, 400815f8 <timer_insert+0x78>
400815e9:	fbc7d1        	l32r	a13, 40080508 <_init_end+0x108>
400815ec:	fbc8c1        	l32r	a12, 4008050c <_init_end+0x10c>
400815ef:	c4a0b2        	movi	a11, 196
400815f2:	fbc7a1        	l32r	a10, 40080510 <_init_end+0x110>
400815f5:	598e25        	call8	400daed8 <__assert_func>
400815f8:	6b88      	l32i.n	a8, a11, 24
400815fa:	6289      	s32i.n	a8, a2, 24
400815fc:	d88c      	beqz.n	a8, 4008160d <timer_insert+0x8d>
400815fe:	f03d      	nop.n
40081600:	f03d      	nop.n
40081602:	f03d      	nop.n
40081604:	f03d      	nop.n
40081606:	6b88      	l32i.n	a8, a11, 24
40081608:	18c292        	addi	a9, a2, 24
4008160b:	7899      	s32i.n	a9, a8, 28
4008160d:	6b29      	s32i.n	a2, a11, 24
4008160f:	18cbb2        	addi	a11, a11, 24
40081612:	72b9      	s32i.n	a11, a2, 28
40081614:	f03d      	nop.n
40081616:	f03d      	nop.n
40081618:	f03d      	nop.n
4008161a:	f03d      	nop.n
4008161c:	fbba81        	l32r	a8, 40080504 <_init_end+0x104>
4008161f:	0888      	l32i.n	a8, a8, 0
40081621:	089287        	bne	a2, a8, 4008162d <timer_insert+0xad>
40081624:	0022a2        	l32i	a10, a2, 0
40081627:	0122b2        	l32i	a11, a2, 4
4008162a:	00b0a5        	call8	40082134 <esp_timer_impl_set_alarm>
4008162d:	fff465        	call8	40081574 <timer_list_unlock>
40081630:	020c      	movi.n	a2, 0
40081632:	f01d      	retw.n

40081634 <timer_remove>:
40081634:	004136        	entry	a1, 32
40081637:	fff325        	call8	40081568 <timer_list_lock>
4008163a:	6288      	l32i.n	a8, a2, 24
4008163c:	288c      	beqz.n	a8, 40081642 <timer_remove+0xe>
4008163e:	7298      	l32i.n	a9, a2, 28
40081640:	7899      	s32i.n	a9, a8, 28
40081642:	f03d      	nop.n
40081644:	f03d      	nop.n
40081646:	f03d      	nop.n
40081648:	f03d      	nop.n
4008164a:	7288      	l32i.n	a8, a2, 28
4008164c:	6298      	l32i.n	a9, a2, 24
4008164e:	0899      	s32i.n	a9, a8, 0
40081650:	f03d      	nop.n
40081652:	f03d      	nop.n
40081654:	f03d      	nop.n
40081656:	f03d      	nop.n
40081658:	fbaf81        	l32r	a8, 40080514 <_init_end+0x114>
4008165b:	fbae91        	l32r	a9, 40080514 <_init_end+0x114>
4008165e:	0289      	s32i.n	a8, a2, 0
40081660:	1299      	s32i.n	a9, a2, 4
40081662:	2289      	s32i.n	a8, a2, 8
40081664:	3299      	s32i.n	a9, a2, 12
40081666:	fff0e5        	call8	40081574 <timer_list_unlock>
40081669:	020c      	movi.n	a2, 0
4008166b:	f01d      	retw.n
4008166d:	000000        	ill

40081670 <timer_alarm_handler>:
40081670:	006136        	entry	a1, 48
40081673:	0cc1b2        	addi	a11, a1, 12
40081676:	fba881        	l32r	a8, 40080518 <_init_end+0x118>
40081679:	0028a2        	l32i	a10, a8, 0
4008167c:	064265        	call8	40087aa4 <xQueueGiveFromISR>
4008167f:	071a66        	bnei	a10, 1, 4008168a <timer_alarm_handler+0x1a>
40081682:	3188      	l32i.n	a8, a1, 12
40081684:	021866        	bnei	a8, 1, 4008168a <timer_alarm_handler+0x1a>
40081687:	089de5        	call8	4008a064 <_frxt_setup_switch>
4008168a:	f01d      	retw.n

4008168c <esp_timer_stop>:
4008168c:	004136        	entry	a1, 32
4008168f:	ffec65        	call8	40081554 <is_initialized>
40081692:	ea8c      	beqz.n	a10, 400816a4 <esp_timer_stop+0x18>
40081694:	02ad      	mov.n	a10, a2
40081696:	ffeaa5        	call8	40081540 <timer_armed>
40081699:	ca8c      	beqz.n	a10, 400816a9 <esp_timer_stop+0x1d>
4008169b:	02ad      	mov.n	a10, a2
4008169d:	fff965        	call8	40081634 <timer_remove>
400816a0:	0a2d      	mov.n	a2, a10
400816a2:	f01d      	retw.n
400816a4:	03a122        	movi	a2, 0x103
400816a7:	f01d      	retw.n
400816a9:	03a122        	movi	a2, 0x103
400816ac:	f01d      	retw.n
	...

400816b0 <esp_timer_get_next_alarm>:
400816b0:	004136        	entry	a1, 32
400816b3:	ffeb65        	call8	40081568 <timer_list_lock>
400816b6:	fb9381        	l32r	a8, 40080504 <_init_end+0x104>
400816b9:	0888      	l32i.n	a8, a8, 0
400816bb:	588c      	beqz.n	a8, 400816c4 <esp_timer_get_next_alarm+0x14>
400816bd:	0828      	l32i.n	a2, a8, 0
400816bf:	1838      	l32i.n	a3, a8, 4
400816c1:	000146        	j	400816ca <esp_timer_get_next_alarm+0x1a>
400816c4:	fb9621        	l32r	a2, 4008051c <_init_end+0x11c>
400816c7:	fb9631        	l32r	a3, 40080520 <_init_end+0x120>
400816ca:	ffeaa5        	call8	40081574 <timer_list_unlock>
400816cd:	f01d      	retw.n
	...

400816d0 <esp_timer_get_time>:
400816d0:	004136        	entry	a1, 32
400816d3:	008f25        	call8	40081fc4 <esp_timer_impl_get_time>
400816d6:	202aa0        	or	a2, a10, a10
400816d9:	203bb0        	or	a3, a11, a11
400816dc:	000090        	retw
	...

400816e0 <esp_timer_start_once>:
400816e0:	004136        	entry	a1, 32
400816e3:	ffe725        	call8	40081554 <is_initialized>
400816e6:	6abc      	beqz.n	a10, 40081720 <esp_timer_start_once+0x40>
400816e8:	02ad      	mov.n	a10, a2
400816ea:	ffe565        	call8	40081540 <timer_armed>
400816ed:	4afc      	bnez.n	a10, 40081725 <esp_timer_start_once+0x45>
400816ef:	fffe25        	call8	400816d0 <esp_timer_get_time>
400816f2:	4a4a      	add.n	a4, a10, a4
400816f4:	180c      	movi.n	a8, 1
400816f6:	0234a7        	bltu	a4, a10, 400816fc <esp_timer_start_once+0x1c>
400816f9:	00a082        	movi	a8, 0
400816fc:	5b5a      	add.n	a5, a11, a5
400816fe:	885a      	add.n	a8, a8, a5
40081700:	0249      	s32i.n	a4, a2, 0
40081702:	1289      	s32i.n	a8, a2, 4
40081704:	f03d      	nop.n
40081706:	f03d      	nop.n
40081708:	f03d      	nop.n
4008170a:	f03d      	nop.n
4008170c:	fb8241        	l32r	a4, 40080514 <_init_end+0x114>
4008170f:	fb8151        	l32r	a5, 40080514 <_init_end+0x114>
40081712:	2249      	s32i.n	a4, a2, 8
40081714:	3259      	s32i.n	a5, a2, 12
40081716:	20a220        	or	a10, a2, a2
40081719:	ffe665        	call8	40081580 <timer_insert>
4008171c:	0a2d      	mov.n	a2, a10
4008171e:	f01d      	retw.n
40081720:	03a122        	movi	a2, 0x103
40081723:	f01d      	retw.n
40081725:	03a122        	movi	a2, 0x103
40081728:	f01d      	retw.n
	...

4008172c <esp_timer_start_periodic>:
4008172c:	004136        	entry	a1, 32
4008172f:	ffe265        	call8	40081554 <is_initialized>
40081732:	03ba16        	beqz	a10, 40081771 <esp_timer_start_periodic+0x45>
40081735:	02ad      	mov.n	a10, a2
40081737:	ffe0a5        	call8	40081540 <timer_armed>
4008173a:	038a56        	bnez	a10, 40081776 <esp_timer_start_periodic+0x4a>
4008173d:	00c4e5        	call8	4008238c <esp_timer_impl_get_min_period_us>
40081740:	0c3b57        	bltu	a11, a5, 40081750 <esp_timer_start_periodic+0x24>
40081743:	0295b7        	bne	a5, a11, 40081749 <esp_timer_start_periodic+0x1d>
40081746:	063a47        	bltu	a10, a4, 40081750 <esp_timer_start_periodic+0x24>
40081749:	00c425        	call8	4008238c <esp_timer_impl_get_min_period_us>
4008174c:	0a4d      	mov.n	a4, a10
4008174e:	0b5d      	mov.n	a5, a11
40081750:	fff7e5        	call8	400816d0 <esp_timer_get_time>
40081753:	9a4a      	add.n	a9, a10, a4
40081755:	180c      	movi.n	a8, 1
40081757:	0139a7        	bltu	a9, a10, 4008175c <esp_timer_start_periodic+0x30>
4008175a:	080c      	movi.n	a8, 0
4008175c:	bb5a      	add.n	a11, a11, a5
4008175e:	88ba      	add.n	a8, a8, a11
40081760:	0299      	s32i.n	a9, a2, 0
40081762:	1289      	s32i.n	a8, a2, 4
40081764:	2249      	s32i.n	a4, a2, 8
40081766:	3259      	s32i.n	a5, a2, 12
40081768:	02ad      	mov.n	a10, a2
4008176a:	ffe165        	call8	40081580 <timer_insert>
4008176d:	0a2d      	mov.n	a2, a10
4008176f:	f01d      	retw.n
40081771:	03a122        	movi	a2, 0x103
40081774:	f01d      	retw.n
40081776:	03a122        	movi	a2, 0x103
40081779:	f01d      	retw.n
	...

4008177c <esp_dport_access_stall_other_cpu_start>:
4008177c:	004136        	entry	a1, 32
4008177f:	fb6921        	l32r	a2, 40080524 <_init_end+0x124>
40081782:	0020c0        	memw
40081785:	002222        	l32i	a2, a2, 0
40081788:	0c2216        	beqz	a2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
4008178b:	fb6621        	l32r	a2, 40080524 <_init_end+0x124>
4008178e:	0020c0        	memw
40081791:	012222        	l32i	a2, a2, 4
40081794:	0b6216        	beqz	a2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
40081797:	006330        	rsil	a3, 3
4008179a:	03eb20        	rsr.prid	a2
4008179d:	042d20        	extui	a2, a2, 13, 1
400817a0:	fb6281        	l32r	a8, 40080528 <_init_end+0x128>
400817a3:	a08280        	addx4	a8, a2, a8
400817a6:	0020c0        	memw
400817a9:	002882        	l32i	a8, a8, 0
400817ac:	074856        	bnez	a8, 40081824 <esp_dport_access_stall_other_cpu_start+0xa8>
400817af:	fb5fa1        	l32r	a10, 4008052c <_init_end+0x12c>
400817b2:	072de5        	call8	40088a90 <vTaskEnterCritical>
400817b5:	1182e0        	slli	a8, a2, 2
400817b8:	fb5e91        	l32r	a9, 40080530 <_init_end+0x130>
400817bb:	998a      	add.n	a9, a9, a8
400817bd:	0939      	s32i.n	a3, a9, 0
400817bf:	f03d      	nop.n
400817c1:	f03d      	nop.n
400817c3:	f03d      	nop.n
400817c5:	f03d      	nop.n
400817c7:	fb5b91        	l32r	a9, 40080534 <_init_end+0x134>
400817ca:	998a      	add.n	a9, a9, a8
400817cc:	0a0c      	movi.n	a10, 0
400817ce:	0020c0        	memw
400817d1:	09a9      	s32i.n	a10, a9, 0
400817d3:	f03d      	nop.n
400817d5:	f03d      	nop.n
400817d7:	f03d      	nop.n
400817d9:	f03d      	nop.n
400817db:	fb5791        	l32r	a9, 40080538 <_init_end+0x138>
400817de:	898a      	add.n	a8, a9, a8
400817e0:	0020c0        	memw
400817e3:	08a9      	s32i.n	a10, a8, 0
400817e5:	1392a7        	bne	a2, a10, 400817fc <esp_dport_access_stall_other_cpu_start+0x80>
400817e8:	190c      	movi.n	a9, 1
400817ea:	f03d      	nop.n
400817ec:	f03d      	nop.n
400817ee:	f03d      	nop.n
400817f0:	fb5381        	l32r	a8, 4008053c <_init_end+0x13c>
400817f3:	0020c0        	memw
400817f6:	0899      	s32i.n	a9, a8, 0
400817f8:	000286        	j	40081806 <esp_dport_access_stall_other_cpu_start+0x8a>
400817fb:	190c00        	lsi	f0, a12, 100
400817fe:	fb5081        	l32r	a8, 40080540 <_init_end+0x140>
40081801:	0020c0        	memw
40081804:	0899      	s32i.n	a9, a8, 0
40081806:	f03d      	nop.n
40081808:	f03d      	nop.n
4008180a:	f03d      	nop.n
4008180c:	f03d      	nop.n
4008180e:	fb4981        	l32r	a8, 40080534 <_init_end+0x134>
40081811:	a08280        	addx4	a8, a2, a8
40081814:	0020c0        	memw
40081817:	0888      	l32i.n	a8, a8, 0
40081819:	fe9816        	beqz	a8, 40081806 <esp_dport_access_stall_other_cpu_start+0x8a>
4008181c:	fb4a81        	l32r	a8, 40080544 <_init_end+0x144>
4008181f:	0020c0        	memw
40081822:	0888      	l32i.n	a8, a8, 0
40081824:	fb4181        	l32r	a8, 40080528 <_init_end+0x128>
40081827:	a02280        	addx4	a2, a2, a8
4008182a:	0020c0        	memw
4008182d:	0288      	l32i.n	a8, a2, 0
4008182f:	881b      	addi.n	a8, a8, 1
40081831:	0020c0        	memw
40081834:	0289      	s32i.n	a8, a2, 0
40081836:	f03d      	nop.n
40081838:	f03d      	nop.n
4008183a:	f03d      	nop.n
4008183c:	f03d      	nop.n
4008183e:	0020c0        	memw
40081841:	0228      	l32i.n	a2, a2, 0
40081843:	0722b6        	bltui	a2, 2, 4008184e <esp_dport_access_stall_other_cpu_start+0xd2>
40081846:	03ad      	mov.n	a10, a3
40081848:	fb4081        	l32r	a8, 40080548 <_init_end+0x148>
4008184b:	0008e0        	callx8	a8
4008184e:	f01d      	retw.n

40081850 <esp_dport_access_stall_other_cpu_end>:
40081850:	004136        	entry	a1, 32
40081853:	03eb80        	rsr.prid	a8
40081856:	048d80        	extui	a8, a8, 13, 1
40081859:	fb3221        	l32r	a2, 40080524 <_init_end+0x124>
4008185c:	0020c0        	memw
4008185f:	0228      	l32i.n	a2, a2, 0
40081861:	075216        	beqz	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
40081864:	fb3021        	l32r	a2, 40080524 <_init_end+0x124>
40081867:	0020c0        	memw
4008186a:	1228      	l32i.n	a2, a2, 4
4008186c:	06a216        	beqz	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
4008186f:	fb2e21        	l32r	a2, 40080528 <_init_end+0x128>
40081872:	a02820        	addx4	a2, a8, a2
40081875:	0020c0        	memw
40081878:	002222        	l32i	a2, a2, 0
4008187b:	d2cc      	bnez.n	a2, 4008188c <esp_dport_access_stall_other_cpu_end+0x3c>
4008187d:	fb33d1        	l32r	a13, 4008054c <_init_end+0x14c>
40081880:	fb34c1        	l32r	a12, 40080550 <_init_end+0x150>
40081883:	7ea0b2        	movi	a11, 126
40081886:	fb33a1        	l32r	a10, 40080554 <_init_end+0x154>
40081889:	5964e5        	call8	400daed8 <__assert_func>
4008188c:	fb2721        	l32r	a2, 40080528 <_init_end+0x128>
4008188f:	a02820        	addx4	a2, a8, a2
40081892:	0020c0        	memw
40081895:	002292        	l32i	a9, a2, 0
40081898:	ffc992        	addi	a9, a9, -1
4008189b:	0020c0        	memw
4008189e:	006292        	s32i	a9, a2, 0
400818a1:	f03d      	nop.n
400818a3:	f03d      	nop.n
400818a5:	f03d      	nop.n
400818a7:	f03d      	nop.n
400818a9:	0020c0        	memw
400818ac:	0228      	l32i.n	a2, a2, 0
400818ae:	82ec      	bnez.n	a2, 400818da <esp_dport_access_stall_other_cpu_end+0x8a>
400818b0:	1128e0        	slli	a2, a8, 2
400818b3:	fb2181        	l32r	a8, 40080538 <_init_end+0x138>
400818b6:	882a      	add.n	a8, a8, a2
400818b8:	190c      	movi.n	a9, 1
400818ba:	0020c0        	memw
400818bd:	0899      	s32i.n	a9, a8, 0
400818bf:	f03d      	nop.n
400818c1:	f03d      	nop.n
400818c3:	f03d      	nop.n
400818c5:	f03d      	nop.n
400818c7:	fb19a1        	l32r	a10, 4008052c <_init_end+0x12c>
400818ca:	073065        	call8	40088bd0 <vTaskExitCritical>
400818cd:	fb1881        	l32r	a8, 40080530 <_init_end+0x130>
400818d0:	882a      	add.n	a8, a8, a2
400818d2:	08a8      	l32i.n	a10, a8, 0
400818d4:	fb1d81        	l32r	a8, 40080548 <_init_end+0x148>
400818d7:	0008e0        	callx8	a8
400818da:	f01d      	retw.n

400818dc <esp_dport_access_stall_other_cpu_start_wrap>:
400818dc:	004136        	entry	a1, 32
400818df:	ffe9e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
400818e2:	f01d      	retw.n

400818e4 <esp_dport_access_stall_other_cpu_end_wrap>:
400818e4:	004136        	entry	a1, 32
400818e7:	fff6a5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
400818ea:	f01d      	retw.n

400818ec <esp_dport_access_int_pause>:
400818ec:	004136        	entry	a1, 32
400818ef:	fb0f21        	l32r	a2, 4008052c <_init_end+0x12c>
400818f2:	20a220        	or	a10, a2, a2
400818f5:	0719a5        	call8	40088a90 <vTaskEnterCritical>
400818f8:	fb0b81        	l32r	a8, 40080524 <_init_end+0x124>
400818fb:	00a092        	movi	a9, 0
400818fe:	0020c0        	memw
40081901:	0899      	s32i.n	a9, a8, 0
40081903:	0020c0        	memw
40081906:	1899      	s32i.n	a9, a8, 4
40081908:	02ad      	mov.n	a10, a2
4008190a:	072c65        	call8	40088bd0 <vTaskExitCritical>
4008190d:	f01d      	retw.n
	...

40081910 <esp_dport_access_int_abort>:
40081910:	004136        	entry	a1, 32
40081913:	fb0481        	l32r	a8, 40080524 <_init_end+0x124>
40081916:	090c      	movi.n	a9, 0
40081918:	0020c0        	memw
4008191b:	0899      	s32i.n	a9, a8, 0
4008191d:	0020c0        	memw
40081920:	1899      	s32i.n	a9, a8, 4
40081922:	f01d      	retw.n

40081924 <esp_dport_access_int_resume>:
40081924:	004136        	entry	a1, 32
40081927:	fb0121        	l32r	a2, 4008052c <_init_end+0x12c>
4008192a:	20a220        	or	a10, a2, a2
4008192d:	071625        	call8	40088a90 <vTaskEnterCritical>
40081930:	fafd81        	l32r	a8, 40080524 <_init_end+0x124>
40081933:	01a092        	movi	a9, 1
40081936:	0020c0        	memw
40081939:	0899      	s32i.n	a9, a8, 0
4008193b:	0020c0        	memw
4008193e:	1899      	s32i.n	a9, a8, 4
40081940:	02ad      	mov.n	a10, a2
40081942:	0728e5        	call8	40088bd0 <vTaskExitCritical>
40081945:	f01d      	retw.n
	...

40081948 <esp_dport_access_reg_read>:
40081948:	004136        	entry	a1, 32
4008194b:	fb0381        	l32r	a8, 40080558 <_init_end+0x158>
4008194e:	006590        	rsil	a9, 5
40081951:	0888      	l32i.n	a8, a8, 0
40081953:	0228      	l32i.n	a2, a2, 0
40081955:	13e690        	wsr.ps	a9
40081958:	002010        	rsync
4008195b:	f01d      	retw.n
4008195d:	000000        	ill

40081960 <esp_dport_access_sequence_reg_read>:
40081960:	004136        	entry	a1, 32
40081963:	fafd81        	l32r	a8, 40080558 <_init_end+0x158>
40081966:	0888      	l32i.n	a8, a8, 0
40081968:	0228      	l32i.n	a2, a2, 0
4008196a:	f01d      	retw.n

4008196c <esp_dport_access_read_buffer>:
4008196c:	004136        	entry	a1, 32
4008196f:	006570        	rsil	a7, 5
40081972:	050c      	movi.n	a5, 0
40081974:	000386        	j	40081986 <esp_dport_access_read_buffer+0x1a>
40081977:	a5e000        	extui	a14, a0, 16, 11
4008197a:	62aa11        	l32r	a1, 4005a424 <strftime+0x970>
4008197d:	aa3a      	add.n	a10, a10, a3
4008197f:	fffe25        	call8	40081960 <esp_dport_access_sequence_reg_read>
40081982:	06a9      	s32i.n	a10, a6, 0
40081984:	551b      	addi.n	a5, a5, 1
40081986:	ee3547        	bltu	a5, a4, 40081978 <esp_dport_access_read_buffer+0xc>
40081989:	07ad      	mov.n	a10, a7
4008198b:	faef81        	l32r	a8, 40080548 <_init_end+0x148>
4008198e:	0008e0        	callx8	a8
40081991:	f01d      	retw.n
	...

40081994 <xt_highint4>:
40081994:	03e200        	rsr.interrupt	a0
40081997:	050c00        	extui	a0, a0, 28, 1
4008199a:	07e056        	bnez	a0, 40081a1c <.handle_dport_access_int>
4008199d:	010d      	mov.n	a0, a1
4008199f:	ffd112        	addmi	a1, a1, 0xffffff00
400819a2:	40c112        	addi	a1, a1, 64
400819a5:	4109      	s32i.n	a0, a1, 16
400819a7:	49d100        	s32e	a0, a1, -12
400819aa:	03e600        	rsr.ps	a0
400819ad:	2109      	s32i.n	a0, a1, 8
400819af:	03b400        	rsr.epc4	a0
400819b2:	1109      	s32i.n	a0, a1, 4
400819b4:	49c100        	s32e	a0, a1, -16
400819b7:	0f61c2        	s32i	a12, a1, 60
400819ba:	1061d2        	s32i	a13, a1, 64
400819bd:	085785        	call0	40089f38 <_xt_context_save>
400819c0:	03ee00        	rsr.excvaddr	a0
400819c3:	156102        	s32i	a0, a1, 84
400819c6:	03e200        	rsr.interrupt	a0
400819c9:	050900        	extui	a0, a0, 25, 1
400819cc:	009c      	beqz.n	a0, 400819e0 <xt_highint4+0x4c>
400819ce:	03e400        	rsr.intenable	a0
400819d1:	fae241        	l32r	a4, 4008055c <_init_end+0x15c>
400819d4:	100400        	and	a0, a4, a0
400819d7:	13e400        	wsr.intenable	a0
400819da:	700c      	movi.n	a0, 7
400819dc:	000386        	j	400819ee <xt_highint4+0x5a>
400819df:	c40100        	extui	a0, a0, 1, 13
400819e2:	08fa      	add.n	a0, a8, a15
400819e4:	30cc00        	xor	a12, a12, a0
400819e7:	600c      	movi.n	a0, 6
400819e9:	000046        	j	400819ee <xt_highint4+0x5a>
400819ec:	500c      	movi.n	a0, 5
400819ee:	146102        	s32i	a0, a1, 80
400819f1:	03d400        	rsr.excsave4	a0
400819f4:	3109      	s32i.n	a0, a1, 12
400819f6:	fada01        	l32r	a0, 40080560 <_init_end+0x160>
400819f9:	13e600        	wsr.ps	a0
400819fc:	016d      	mov.n	a6, a1
400819fe:	099bd5        	call4	4008b3bc <panicHandler>
40081a01:	0859c5        	call0	40089fa0 <_xt_context_restore>
40081a04:	2108      	l32i.n	a0, a1, 8
40081a06:	13e600        	wsr.ps	a0
40081a09:	1108      	l32i.n	a0, a1, 4
40081a0b:	13b400        	wsr.epc4	a0
40081a0e:	3108      	l32i.n	a0, a1, 12
40081a10:	4118      	l32i.n	a1, a1, 16
40081a12:	002010        	rsync
40081a15:	03d400        	rsr.excsave4	a0
40081a18:	003410        	rfi	4
	...

40081a1c <.handle_dport_access_int>:
40081a1c:	fad201        	l32r	a0, 40080564 <_init_end+0x164>
40081a1f:	13e300        	wsr.intclear	a0
40081a22:	fad101        	l32r	a0, 40080568 <_init_end+0x168>
40081a25:	0029      	s32i.n	a2, a0, 0
40081a27:	1039      	s32i.n	a3, a0, 4
40081a29:	2049      	s32i.n	a4, a0, 8
40081a2b:	03eb00        	rsr.prid	a0
40081a2e:	040d00        	extui	a0, a0, 13, 1
40081a31:	c08c      	beqz.n	a0, 40081a41 <.handle_dport_access_int+0x25>
40081a33:	fac201        	l32r	a0, 4008053c <_init_end+0x13c>
40081a36:	020c      	movi.n	a2, 0
40081a38:	0029      	s32i.n	a2, a0, 0
40081a3a:	000c      	movi.n	a0, 0
40081a3c:	000286        	j	40081a4a <.handle_dport_access_int+0x2e>
40081a3f:	010000        	slli	a0, a0, 32
40081a42:	bf          	.byte 0xbf
40081a43:	0cfa      	add.n	a0, a12, a15
40081a45:	002902        	l32i	a0, a9, 0
40081a48:	100c      	movi.n	a0, 1
40081a4a:	006540        	rsil	a4, 5
40081a4d:	fab921        	l32r	a2, 40080534 <_init_end+0x134>
40081a50:	a02020        	addx4	a2, a0, a2
40081a53:	130c      	movi.n	a3, 1
40081a55:	0239      	s32i.n	a3, a2, 0
40081a57:	0020c0        	memw
40081a5a:	fab721        	l32r	a2, 40080538 <_init_end+0x138>
40081a5d:	a02020        	addx4	a2, a0, a2

40081a60 <.check_dport_access_end>:
40081a60:	0238      	l32i.n	a3, a2, 0
40081a62:	ffa316        	beqz	a3, 40081a60 <.check_dport_access_end>
40081a65:	13e640        	wsr.ps	a4
40081a68:	fac001        	l32r	a0, 40080568 <_init_end+0x168>
40081a6b:	0028      	l32i.n	a2, a0, 0
40081a6d:	1038      	l32i.n	a3, a0, 4
40081a6f:	2048      	l32i.n	a4, a0, 8
40081a71:	002010        	rsync
40081a74:	03d400        	rsr.excsave4	a0
40081a77:	003410        	rfi	4

40081a7a <ld_include_panic_highint_hdl>:
	...

40081a7c <esp_restart_noos>:
40081a7c:	004136        	entry	a1, 32
40081a7f:	ffafa2        	movi	a10, -1
40081a82:	088c25        	call8	4008a344 <xt_ints_off>
40081a85:	0a0fe5        	call8	4008bb84 <rtc_wdt_protect_off>
40081a88:	0a2a65        	call8	4008bd30 <rtc_wdt_disable>
40081a8b:	4b0c      	movi.n	a11, 4
40081a8d:	0a0c      	movi.n	a10, 0
40081a8f:	0a1ee5        	call8	4008bc7c <rtc_wdt_set_stage>
40081a92:	3b0c      	movi.n	a11, 3
40081a94:	1a0c      	movi.n	a10, 1
40081a96:	0a1e65        	call8	4008bc7c <rtc_wdt_set_stage>
40081a99:	1b0c      	movi.n	a11, 1
40081a9b:	0a0c      	movi.n	a10, 0
40081a9d:	0a3065        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
40081aa0:	1b0c      	movi.n	a11, 1
40081aa2:	20abb0        	or	a10, a11, a11
40081aa5:	0a2fe5        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
40081aa8:	e8a3b2        	movi	a11, 0x3e8
40081aab:	0a0c      	movi.n	a10, 0
40081aad:	0a16e5        	call8	4008bc1c <rtc_wdt_set_time>
40081ab0:	0a1265        	call8	4008bbd8 <rtc_wdt_flashboot_mode_enable>
40081ab3:	03eb20        	rsr.prid	a2
40081ab6:	042d20        	extui	a2, a2, 13, 1
40081ab9:	023d      	mov.n	a3, a2
40081abb:	040c      	movi.n	a4, 0
40081abd:	180c      	movi.n	a8, 1
40081abf:	938420        	movnez	a8, a4, a2
40081ac2:	742080        	extui	a2, a8, 0, 8
40081ac5:	02ad      	mov.n	a10, a2
40081ac7:	02d1a5        	call8	400847e0 <esp_cpu_reset>
40081aca:	02ad      	mov.n	a10, a2
40081acc:	02bea5        	call8	400846b8 <esp_cpu_stall>
40081acf:	ffe425        	call8	40081910 <esp_dport_access_int_abort>
40081ad2:	faa681        	l32r	a8, 4008056c <_init_end+0x16c>
40081ad5:	fa8891        	l32r	a9, 400804f8 <_init_end+0xf8>
40081ad8:	0020c0        	memw
40081adb:	196892        	s32i	a9, a8, 100
40081ade:	f03d      	nop.n
40081ae0:	f03d      	nop.n
40081ae2:	f03d      	nop.n
40081ae4:	f03d      	nop.n
40081ae6:	0020c0        	memw
40081ae9:	1228b2        	l32i	a11, a8, 72
40081aec:	fa8d21        	l32r	a2, 40080520 <_init_end+0x120>
40081aef:	10ab20        	and	a10, a11, a2
40081af2:	0020c0        	memw
40081af5:	1268a2        	s32i	a10, a8, 72
40081af8:	0020c0        	memw
40081afb:	196842        	s32i	a4, a8, 100
40081afe:	f03d      	nop.n
40081b00:	f03d      	nop.n
40081b02:	f03d      	nop.n
40081b04:	f03d      	nop.n
40081b06:	fa7b81        	l32r	a8, 400804f4 <_init_end+0xf4>
40081b09:	0020c0        	memw
40081b0c:	196892        	s32i	a9, a8, 100
40081b0f:	f03d      	nop.n
40081b11:	f03d      	nop.n
40081b13:	0020f0        	nop
40081b16:	0020f0        	nop
40081b19:	0020c0        	memw
40081b1c:	122892        	l32i	a9, a8, 72
40081b1f:	102920        	and	a2, a9, a2
40081b22:	0020c0        	memw
40081b25:	126822        	s32i	a2, a8, 72
40081b28:	0020c0        	memw
40081b2b:	196842        	s32i	a4, a8, 100
40081b2e:	f03d      	nop.n
40081b30:	f03d      	nop.n
40081b32:	f03d      	nop.n
40081b34:	f03d      	nop.n
40081b36:	fa8e21        	l32r	a2, 40080570 <_init_end+0x170>
40081b39:	0020c0        	memw
40081b3c:	0248      	l32i.n	a4, a2, 0
40081b3e:	fa8d21        	l32r	a2, 40080574 <_init_end+0x174>
40081b41:	e98427        	bany	a4, a2, 40081b2e <esp_restart_noos+0xb2>
40081b44:	fa8d21        	l32r	a2, 40080578 <_init_end+0x178>
40081b47:	0020c0        	memw
40081b4a:	0248      	l32i.n	a4, a2, 0
40081b4c:	fa8a21        	l32r	a2, 40080574 <_init_end+0x174>
40081b4f:	f18427        	bany	a4, a2, 40081b44 <esp_restart_noos+0xc8>
40081b52:	fa8a21        	l32r	a2, 4008057c <_init_end+0x17c>
40081b55:	0020c0        	memw
40081b58:	0248      	l32i.n	a4, a2, 0
40081b5a:	fa8621        	l32r	a2, 40080574 <_init_end+0x174>
40081b5d:	f18427        	bany	a4, a2, 40081b52 <esp_restart_noos+0xd6>
40081b60:	ffc1a5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081b63:	0a0c      	movi.n	a10, 0
40081b65:	fa9081        	l32r	a8, 400805a8 <_init_end+0x1a8>
40081b68:	0008e0        	callx8	a8
40081b6b:	ffce65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40081b6e:	ffc0e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40081b71:	1a0c      	movi.n	a10, 1
40081b73:	fa8d81        	l32r	a8, 400805a8 <_init_end+0x1a8>
40081b76:	0008e0        	callx8	a8
40081b79:	ffcd65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40081b7c:	023c      	movi.n	a2, 48
40081b7e:	fa8041        	l32r	a4, 40080580 <_init_end+0x180>
40081b81:	0020c0        	memw
40081b84:	0429      	s32i.n	a2, a4, 0
40081b86:	f03d      	nop.n
40081b88:	f03d      	nop.n
40081b8a:	f03d      	nop.n
40081b8c:	f03d      	nop.n
40081b8e:	fa7d41        	l32r	a4, 40080584 <_init_end+0x184>
40081b91:	0020c0        	memw
40081b94:	0429      	s32i.n	a2, a4, 0
40081b96:	f03d      	nop.n
40081b98:	f03d      	nop.n
40081b9a:	f03d      	nop.n
40081b9c:	f03d      	nop.n
40081b9e:	fa7a41        	l32r	a4, 40080588 <_init_end+0x188>
40081ba1:	0020c0        	memw
40081ba4:	0429      	s32i.n	a2, a4, 0
40081ba6:	f03d      	nop.n
40081ba8:	f03d      	nop.n
40081baa:	f03d      	nop.n
40081bac:	f03d      	nop.n
40081bae:	fa7741        	l32r	a4, 4008058c <_init_end+0x18c>
40081bb1:	0020c0        	memw
40081bb4:	0429      	s32i.n	a2, a4, 0
40081bb6:	f03d      	nop.n
40081bb8:	f03d      	nop.n
40081bba:	f03d      	nop.n
40081bbc:	f03d      	nop.n
40081bbe:	fa7441        	l32r	a4, 40080590 <_init_end+0x190>
40081bc1:	0020c0        	memw
40081bc4:	0429      	s32i.n	a2, a4, 0
40081bc6:	f03d      	nop.n
40081bc8:	f03d      	nop.n
40081bca:	f03d      	nop.n
40081bcc:	f03d      	nop.n
40081bce:	fa7141        	l32r	a4, 40080594 <_init_end+0x194>
40081bd1:	0020c0        	memw
40081bd4:	0429      	s32i.n	a2, a4, 0
40081bd6:	f03d      	nop.n
40081bd8:	f03d      	nop.n
40081bda:	f03d      	nop.n
40081bdc:	f03d      	nop.n
40081bde:	fa6e41        	l32r	a4, 40080598 <_init_end+0x198>
40081be1:	04ad      	mov.n	a10, a4
40081be3:	ffd665        	call8	40081948 <esp_dport_access_reg_read>
40081be6:	ffa722        	movi	a2, 0x7ff
40081be9:	20aa20        	or	a10, a10, a2
40081bec:	0020c0        	memw
40081bef:	04a9      	s32i.n	a10, a4, 0
40081bf1:	020c      	movi.n	a2, 0
40081bf3:	0020c0        	memw
40081bf6:	0429      	s32i.n	a2, a4, 0
40081bf8:	f03d      	nop.n
40081bfa:	f03d      	nop.n
40081bfc:	f03d      	nop.n
40081bfe:	0020f0        	nop
40081c01:	fa6641        	l32r	a4, 4008059c <_init_end+0x19c>
40081c04:	04ad      	mov.n	a10, a4
40081c06:	ffd425        	call8	40081948 <esp_dport_access_reg_read>
40081c09:	fa6581        	l32r	a8, 400805a0 <_init_end+0x1a0>
40081c0c:	20aa80        	or	a10, a10, a8
40081c0f:	0020c0        	memw
40081c12:	0064a2        	s32i	a10, a4, 0
40081c15:	0020c0        	memw
40081c18:	006422        	s32i	a2, a4, 0
40081c1b:	0b0a65        	call8	4008ccc0 <rtc_clk_cpu_freq_set_xtal>
40081c1e:	fa6141        	l32r	a4, 400805a4 <_init_end+0x1a4>
40081c21:	0020c0        	memw
40081c24:	0429      	s32i.n	a2, a4, 0
40081c26:	0e9327        	bne	a3, a2, 40081c38 <esp_restart_noos+0x1bc>
40081c29:	01a0a2        	movi	a10, 1
40081c2c:	02bb25        	call8	400847e0 <esp_cpu_reset>
40081c2f:	02ad      	mov.n	a10, a2
40081c31:	02bae5        	call8	400847e0 <esp_cpu_reset>
40081c34:	000406        	j	40081c48 <esp_restart_noos+0x1cc>
40081c37:	a0a200        	addx4	a10, a2, a0
40081c3a:	ba6500        	ceil.s	a6, f5, 0
40081c3d:	0a0c02        	l8ui	a0, a12, 10
40081c40:	02b3a5        	call8	4008477c <esp_cpu_unstall>
40081c43:	1a0c      	movi.n	a10, 1
40081c45:	02b9a5        	call8	400847e0 <esp_cpu_reset>
40081c48:	ffff06        	j	40081c48 <esp_restart_noos+0x1cc>
	...

40081c4c <esp_restart>:
40081c4c:	004136        	entry	a1, 32
40081c4f:	020c      	movi.n	a2, 0
40081c51:	0003c6        	j	40081c64 <esp_restart+0x18>
40081c54:	558100        	extui	a8, a0, 17, 6
40081c57:	80fa      	add.n	a8, a0, a15
40081c59:	88a082        	movi	a8, 136
40081c5c:	8c08      	l32i.n	a0, a12, 32
40081c5e:	e018      	l32i.n	a1, a0, 56
40081c60:	0008      	l32i.n	a0, a0, 0
40081c62:	221b      	addi.n	a2, a2, 1
40081c64:	ed22a6        	blti	a2, 2, 40081c55 <esp_restart+0x9>
40081c67:	069ae5        	call8	40088614 <vTaskSuspendAll>
40081c6a:	ffe125        	call8	40081a7c <esp_restart_noos>
40081c6d:	000000        	ill

40081c70 <task_ms_to_tick_wrapper>:
40081c70:	004136        	entry	a1, 32
40081c73:	f01d      	retw.n
40081c75:	000000        	ill

40081c78 <wifi_malloc>:
40081c78:	004136        	entry	a1, 32
40081c7b:	20a220        	or	a10, a2, a2
40081c7e:	fa4c81        	l32r	a8, 400805b0 <_init_end+0x1b0>
40081c81:	0008e0        	callx8	a8
40081c84:	0a2d      	mov.n	a2, a10
40081c86:	f01d      	retw.n

40081c88 <wifi_realloc>:
40081c88:	004136        	entry	a1, 32
40081c8b:	03bd      	mov.n	a11, a3
40081c8d:	02ad      	mov.n	a10, a2
40081c8f:	fa4981        	l32r	a8, 400805b4 <_init_end+0x1b4>
40081c92:	0008e0        	callx8	a8
40081c95:	0a2d      	mov.n	a2, a10
40081c97:	f01d      	retw.n
40081c99:	000000        	ill

40081c9c <wifi_calloc>:
40081c9c:	004136        	entry	a1, 32
40081c9f:	03bd      	mov.n	a11, a3
40081ca1:	02ad      	mov.n	a10, a2
40081ca3:	fa4581        	l32r	a8, 400805b8 <_init_end+0x1b8>
40081ca6:	0008e0        	callx8	a8
40081ca9:	0a2d      	mov.n	a2, a10
40081cab:	f01d      	retw.n
40081cad:	000000        	ill

40081cb0 <malloc_internal_wrapper>:
40081cb0:	004136        	entry	a1, 32
40081cb3:	fa42b1        	l32r	a11, 400805bc <_init_end+0x1bc>
40081cb6:	20a220        	or	a10, a2, a2
40081cb9:	0265a5        	call8	40084314 <heap_caps_malloc>
40081cbc:	202aa0        	or	a2, a10, a10
40081cbf:	000090        	retw
	...

40081cc4 <wifi_zalloc_wrapper>:
40081cc4:	004136        	entry	a1, 32
40081cc7:	023d      	mov.n	a3, a2
40081cc9:	02bd      	mov.n	a11, a2
40081ccb:	1a0c      	movi.n	a10, 1
40081ccd:	fffce5        	call8	40081c9c <wifi_calloc>
40081cd0:	0a2d      	mov.n	a2, a10
40081cd2:	8a8c      	beqz.n	a10, 40081cde <wifi_zalloc_wrapper+0x1a>
40081cd4:	03cd      	mov.n	a12, a3
40081cd6:	0b0c      	movi.n	a11, 0
40081cd8:	f9ef81        	l32r	a8, 40080494 <_init_end+0x94>
40081cdb:	0008e0        	callx8	a8
40081cde:	f01d      	retw.n

40081ce0 <zalloc_internal_wrapper>:
40081ce0:	004136        	entry	a1, 32
40081ce3:	203220        	or	a3, a2, a2
40081ce6:	fa35c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081ce9:	20b220        	or	a11, a2, a2
40081cec:	01a0a2        	movi	a10, 1
40081cef:	029365        	call8	40084624 <heap_caps_calloc>
40081cf2:	0a2d      	mov.n	a2, a10
40081cf4:	8a8c      	beqz.n	a10, 40081d00 <zalloc_internal_wrapper+0x20>
40081cf6:	03cd      	mov.n	a12, a3
40081cf8:	0b0c      	movi.n	a11, 0
40081cfa:	f9e681        	l32r	a8, 40080494 <_init_end+0x94>
40081cfd:	0008e0        	callx8	a8
40081d00:	f01d      	retw.n
	...

40081d04 <calloc_internal_wrapper>:
40081d04:	004136        	entry	a1, 32
40081d07:	fa2dc1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081d0a:	20b330        	or	a11, a3, a3
40081d0d:	20a220        	or	a10, a2, a2
40081d10:	029125        	call8	40084624 <heap_caps_calloc>
40081d13:	202aa0        	or	a2, a10, a10
40081d16:	f01d      	retw.n

40081d18 <realloc_internal_wrapper>:
40081d18:	004136        	entry	a1, 32
40081d1b:	fa28c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40081d1e:	20b330        	or	a11, a3, a3
40081d21:	20a220        	or	a10, a2, a2
40081d24:	0277e5        	call8	400844a4 <heap_caps_realloc>
40081d27:	202aa0        	or	a2, a10, a10
40081d2a:	f01d      	retw.n

40081d2c <timer_arm_us_wrapper>:
40081d2c:	004136        	entry	a1, 32
40081d2f:	74c040        	extui	a12, a4, 0, 8
40081d32:	20b330        	or	a11, a3, a3
40081d35:	20a220        	or	a10, a2, a2
40081d38:	0069a5        	call8	400823d4 <ets_timer_arm_us>
40081d3b:	000090        	retw
	...

40081d40 <timer_disarm_wrapper>:
40081d40:	004136        	entry	a1, 32
40081d43:	02ad      	mov.n	a10, a2
40081d45:	0074e5        	call8	40082494 <ets_timer_disarm>
40081d48:	f01d      	retw.n
	...

40081d4c <timer_arm_wrapper>:
40081d4c:	004136        	entry	a1, 32
40081d4f:	74c040        	extui	a12, a4, 0, 8
40081d52:	20b330        	or	a11, a3, a3
40081d55:	20a220        	or	a10, a2, a2
40081d58:	006d65        	call8	40082430 <ets_timer_arm>
40081d5b:	000090        	retw
	...

40081d60 <queue_send_from_isr_wrapper>:
40081d60:	004136        	entry	a1, 32
40081d63:	00a0d2        	movi	a13, 0
40081d66:	20c440        	or	a12, a4, a4
40081d69:	20b330        	or	a11, a3, a3
40081d6c:	02ad      	mov.n	a10, a2
40081d6e:	05c5e5        	call8	400879cc <xQueueGenericSendFromISR>
40081d71:	0a2d      	mov.n	a2, a10
40081d73:	f01d      	retw.n
40081d75:	000000        	ill

40081d78 <mutex_unlock_wrapper>:
40081d78:	004136        	entry	a1, 32
40081d7b:	02ad      	mov.n	a10, a2
40081d7d:	05c065        	call8	40087984 <xQueueGiveMutexRecursive>
40081d80:	0a2d      	mov.n	a2, a10
40081d82:	f01d      	retw.n

40081d84 <mutex_lock_wrapper>:
40081d84:	004136        	entry	a1, 32
40081d87:	ffafb2        	movi	a11, -1
40081d8a:	20a220        	or	a10, a2, a2
40081d8d:	05f3a5        	call8	40087cc8 <xQueueTakeMutexRecursive>
40081d90:	202aa0        	or	a2, a10, a10
40081d93:	f01d      	retw.n
40081d95:	000000        	ill

40081d98 <task_yield_from_isr_wrapper>:
40081d98:	004136        	entry	a1, 32
40081d9b:	082ca5        	call8	4008a064 <_frxt_setup_switch>
40081d9e:	f01d      	retw.n

40081da0 <wifi_int_restore_wrapper>:
40081da0:	004136        	entry	a1, 32
40081da3:	0619a5        	call8	40087f3c <xPortInIsrContext>
40081da6:	008a16        	beqz	a10, 40081db2 <wifi_int_restore_wrapper+0x12>
40081da9:	20a220        	or	a10, a2, a2
40081dac:	06e225        	call8	40088bd0 <vTaskExitCritical>
40081daf:	000090        	retw
40081db2:	02ad      	mov.n	a10, a2
40081db4:	06e1a5        	call8	40088bd0 <vTaskExitCritical>
40081db7:	f01d      	retw.n
40081db9:	000000        	ill

40081dbc <wifi_int_disable_wrapper>:
40081dbc:	004136        	entry	a1, 32
40081dbf:	0617e5        	call8	40087f3c <xPortInIsrContext>
40081dc2:	6a8c      	beqz.n	a10, 40081dcc <wifi_int_disable_wrapper+0x10>
40081dc4:	02ad      	mov.n	a10, a2
40081dc6:	06cca5        	call8	40088a90 <vTaskEnterCritical>
40081dc9:	000146        	j	40081dd2 <wifi_int_disable_wrapper+0x16>
40081dcc:	20a220        	or	a10, a2, a2
40081dcf:	06cc25        	call8	40088a90 <vTaskEnterCritical>
40081dd2:	00a022        	movi	a2, 0
40081dd5:	000090        	retw

40081dd8 <semphr_give_from_isr_wrapper>:
40081dd8:	004136        	entry	a1, 32
40081ddb:	20b330        	or	a11, a3, a3
40081dde:	20a220        	or	a10, a2, a2
40081de1:	05cc25        	call8	40087aa4 <xQueueGiveFromISR>
40081de4:	202aa0        	or	a2, a10, a10
40081de7:	f01d      	retw.n
40081de9:	000000        	ill

40081dec <semphr_take_from_isr_wrapper>:
40081dec:	004136        	entry	a1, 32
40081def:	03cd      	mov.n	a12, a3
40081df1:	0b0c      	movi.n	a11, 0
40081df3:	02ad      	mov.n	a10, a2
40081df5:	05f265        	call8	40087d1c <xQueueReceiveFromISR>
40081df8:	0a2d      	mov.n	a2, a10
40081dfa:	f01d      	retw.n

40081dfc <coex_bt_request_wrapper>:
40081dfc:	004136        	entry	a1, 32
40081dff:	04cd      	mov.n	a12, a4
40081e01:	03bd      	mov.n	a11, a3
40081e03:	02ad      	mov.n	a10, a2
40081e05:	02e725        	call8	40084c78 <coex_bt_request>
40081e08:	0a2d      	mov.n	a2, a10
40081e0a:	f01d      	retw.n

40081e0c <coex_bt_release_wrapper>:
40081e0c:	004136        	entry	a1, 32
40081e0f:	02ad      	mov.n	a10, a2
40081e11:	02e7e5        	call8	40084c90 <coex_bt_release>
40081e14:	0a2d      	mov.n	a2, a10
40081e16:	f01d      	retw.n

40081e18 <coex_bb_reset_lock_wrapper>:
40081e18:	004136        	entry	a1, 32
40081e1b:	02e8a5        	call8	40084ca4 <coex_bb_reset_lock>
40081e1e:	0a2d      	mov.n	a2, a10
40081e20:	f01d      	retw.n
	...

40081e24 <coex_bb_reset_unlock_wrapper>:
40081e24:	004136        	entry	a1, 32
40081e27:	02ad      	mov.n	a10, a2
40081e29:	02e865        	call8	40084cb0 <coex_bb_reset_unlock>
40081e2c:	f01d      	retw.n
	...

40081e30 <phy_enter_critical>:
40081e30:	004136        	entry	a1, 32
40081e33:	006320        	rsil	a2, 3
40081e36:	f01d      	retw.n

40081e38 <phy_exit_critical>:
40081e38:	004136        	entry	a1, 32
40081e3b:	20a220        	or	a10, a2, a2
40081e3e:	f9c281        	l32r	a8, 40080548 <_init_end+0x148>
40081e41:	0008e0        	callx8	a8
40081e44:	f01d      	retw.n
	...

40081e48 <esp_cache_err_get_cpuid>:
40081e48:	004136        	entry	a1, 32
40081e4b:	ffaa25        	call8	400818ec <esp_dport_access_int_pause>
40081e4e:	f9dca1        	l32r	a10, 400805c0 <_init_end+0x1c0>
40081e51:	ffaf65        	call8	40081948 <esp_dport_access_reg_read>
40081e54:	f9dc81        	l32r	a8, 400805c4 <_init_end+0x1c4>
40081e57:	118a87        	bany	a10, a8, 40081e6c <esp_cache_err_get_cpuid+0x24>
40081e5a:	f9dba1        	l32r	a10, 400805c8 <_init_end+0x1c8>
40081e5d:	ffaea5        	call8	40081948 <esp_dport_access_reg_read>
40081e60:	f9d921        	l32r	a2, 400805c4 <_init_end+0x1c4>
40081e63:	090a27        	bnone	a10, a2, 40081e70 <esp_cache_err_get_cpuid+0x28>
40081e66:	01a022        	movi	a2, 1
40081e69:	f01d      	retw.n
40081e6b:	020c00        	andb	b0, b12, b0
40081e6e:	f01d      	retw.n
40081e70:	f27c      	movi.n	a2, -1
40081e72:	f01d      	retw.n

40081e74 <timer_alarm_isr>:
40081e74:	004136        	entry	a1, 32
40081e77:	f9d5a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40081e7a:	06c165        	call8	40088a90 <vTaskEnterCritical>
40081e7d:	f9d481        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081e80:	000882        	l8ui	a8, a8, 0
40081e83:	07d856        	bnez	a8, 40081f04 <timer_alarm_isr+0x90>
40081e86:	f9d381        	l32r	a8, 400805d4 <_init_end+0x1d4>
40081e89:	0020c0        	memw
40081e8c:	002882        	l32i	a8, a8, 0
40081e8f:	656887        	bbci	a8, 8, 40081ef8 <timer_alarm_isr+0x84>
40081e92:	f9d181        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081e95:	0020c0        	memw
40081e98:	002892        	l32i	a9, a8, 0
40081e9b:	f9d081        	l32r	a8, 400805dc <_init_end+0x1dc>
40081e9e:	1e9987        	bne	a9, a8, 40081ec0 <timer_alarm_isr+0x4c>
40081ea1:	f9cf81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081ea4:	0020c0        	memw
40081ea7:	002882        	l32i	a8, a8, 0
40081eaa:	f9cc91        	l32r	a9, 400805dc <_init_end+0x1dc>
40081ead:	0fb987        	bgeu	a9, a8, 40081ec0 <timer_alarm_isr+0x4c>
40081eb0:	f9cc81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081eb3:	0020c0        	memw
40081eb6:	0888      	l32i.n	a8, a8, 0
40081eb8:	f9cb81        	l32r	a8, 400805e4 <_init_end+0x1e4>
40081ebb:	000882        	l8ui	a8, a8, 0
40081ebe:	b8bc      	beqz.n	a8, 40081efd <timer_alarm_isr+0x89>
40081ec0:	f9c681        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081ec3:	0020c0        	memw
40081ec6:	0888      	l32i.n	a8, a8, 0
40081ec8:	f9c591        	l32r	a9, 400805dc <_init_end+0x1dc>
40081ecb:	0db987        	bgeu	a9, a8, 40081edc <timer_alarm_isr+0x68>
40081ece:	f9c281        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081ed1:	0020c0        	memw
40081ed4:	0888      	l32i.n	a8, a8, 0
40081ed6:	080c      	movi.n	a8, 0
40081ed8:	000a06        	j	40081f04 <timer_alarm_isr+0x90>
40081edb:	c18100        	mul16u	a8, a1, a0
40081ede:	c0f9      	s32i.n	a15, a0, 48
40081ee0:	880020        	lsi	f2, a0, 0x220
40081ee3:	9108      	l32i.n	a0, a1, 36
40081ee5:	be          	.byte 0xbe
40081ee6:	87f9      	s32i.n	a15, a7, 32
40081ee8:	17b9      	s32i.n	a11, a7, 4
40081eea:	f9bd81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081eed:	0020c0        	memw
40081ef0:	0888      	l32i.n	a8, a8, 0
40081ef2:	180c      	movi.n	a8, 1
40081ef4:	000306        	j	40081f04 <timer_alarm_isr+0x90>
40081ef7:	080c00        	lsx	f0, a12, a0
40081efa:	000186        	j	40081f04 <timer_alarm_isr+0x90>
40081efd:	180c      	movi.n	a8, 1
40081eff:	000046        	j	40081f04 <timer_alarm_isr+0x90>
40081f02:	080c      	movi.n	a8, 0
40081f04:	06f816        	beqz	a8, 40081f77 <timer_alarm_isr+0x103>
40081f07:	f9b681        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081f0a:	0020c0        	memw
40081f0d:	0888      	l32i.n	a8, a8, 0
40081f0f:	f9b391        	l32r	a9, 400805dc <_init_end+0x1dc>
40081f12:	52b987        	bgeu	a9, a8, 40081f68 <timer_alarm_isr+0xf4>
40081f15:	f9b281        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081f18:	0020c0        	memw
40081f1b:	0898      	l32i.n	a9, a8, 0
40081f1d:	0020c0        	memw
40081f20:	0898      	l32i.n	a9, a8, 0
40081f22:	f9b181        	l32r	a8, 400805e8 <_init_end+0x1e8>
40081f25:	898a      	add.n	a8, a9, a8
40081f27:	f9b191        	l32r	a9, 400805ec <_init_end+0x1ec>
40081f2a:	0020c0        	memw
40081f2d:	0989      	s32i.n	a8, a9, 0
40081f2f:	f03d      	nop.n
40081f31:	f03d      	nop.n
40081f33:	f03d      	nop.n
40081f35:	f03d      	nop.n
40081f37:	f9ae81        	l32r	a8, 400805f0 <_init_end+0x1f0>
40081f3a:	f9ae91        	l32r	a9, 400805f4 <_init_end+0x1f4>
40081f3d:	0998      	l32i.n	a9, a9, 0
40081f3f:	08b8      	l32i.n	a11, a8, 0
40081f41:	18a8      	l32i.n	a10, a8, 4
40081f43:	9b9a      	add.n	a9, a11, a9
40081f45:	1c0c      	movi.n	a12, 1
40081f47:	0139b7        	bltu	a9, a11, 40081f4c <timer_alarm_isr+0xd8>
40081f4a:	0c0c      	movi.n	a12, 0
40081f4c:	acaa      	add.n	a10, a12, a10
40081f4e:	0899      	s32i.n	a9, a8, 0
40081f50:	18a9      	s32i.n	a10, a8, 4
40081f52:	090c      	movi.n	a9, 0
40081f54:	f03d      	nop.n
40081f56:	f03d      	nop.n
40081f58:	f03d      	nop.n
40081f5a:	f99d81        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081f5d:	004892        	s8i	a9, a8, 0
40081f60:	0020c0        	memw
40081f63:	000406        	j	40081f77 <timer_alarm_isr+0x103>
40081f66:	d10000        	mul16s	a0, a0, a0
40081f69:	c1f9a4        	lsi	f10, a9, 0x304
40081f6c:	b2f9a4        	lsi	f10, a9, 0x2c8
40081f6f:	a1a7a0        	lsi	f10, a7, 0x284
40081f72:	25f9a3        	lsi	f10, a9, 148
40081f75:	9258f6        	bgeui	a8, 5, 40081f0b <timer_alarm_isr+0x97>
40081f78:	8100a0        	src	a0, a0, a10
40081f7b:	f99a      	add.n	a15, a9, a9
40081f7d:	004892        	s8i	a9, a8, 0
40081f80:	0020c0        	memw
40081f83:	01a092        	movi	a9, 1
40081f86:	f03d      	nop.n
40081f88:	f03d      	nop.n
40081f8a:	f03d      	nop.n
40081f8c:	f99e81        	l32r	a8, 40080604 <_init_end+0x204>
40081f8f:	0020c0        	memw
40081f92:	0899      	s32i.n	a9, a8, 0
40081f94:	f03d      	nop.n
40081f96:	f03d      	nop.n
40081f98:	f03d      	nop.n
40081f9a:	f03d      	nop.n
40081f9c:	f99091        	l32r	a9, 400805dc <_init_end+0x1dc>
40081f9f:	f98e81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081fa2:	0020c0        	memw
40081fa5:	0899      	s32i.n	a9, a8, 0
40081fa7:	f03d      	nop.n
40081fa9:	f03d      	nop.n
40081fab:	f03d      	nop.n
40081fad:	f03d      	nop.n
40081faf:	f987a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40081fb2:	06c1e5        	call8	40088bd0 <vTaskExitCritical>
40081fb5:	f99481        	l32r	a8, 40080608 <_init_end+0x208>
40081fb8:	0888      	l32i.n	a8, a8, 0
40081fba:	20a220        	or	a10, a2, a2
40081fbd:	0008e0        	callx8	a8
40081fc0:	f01d      	retw.n
	...

40081fc4 <esp_timer_impl_get_time>:
40081fc4:	004136        	entry	a1, 32
40081fc7:	f98621        	l32r	a2, 400805e0 <_init_end+0x1e0>
40081fca:	0020c0        	memw
40081fcd:	0228      	l32i.n	a2, a2, 0
40081fcf:	f98881        	l32r	a8, 400805f0 <_init_end+0x1f0>
40081fd2:	08a8      	l32i.n	a10, a8, 0
40081fd4:	1838      	l32i.n	a3, a8, 4
40081fd6:	f97e81        	l32r	a8, 400805d0 <_init_end+0x1d0>
40081fd9:	000882        	l8ui	a8, a8, 0
40081fdc:	07c856        	bnez	a8, 4008205c <esp_timer_impl_get_time+0x98>
40081fdf:	f97d81        	l32r	a8, 400805d4 <_init_end+0x1d4>
40081fe2:	0020c0        	memw
40081fe5:	0888      	l32i.n	a8, a8, 0
40081fe7:	656887        	bbci	a8, 8, 40082050 <esp_timer_impl_get_time+0x8c>
40081fea:	f97b81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40081fed:	0020c0        	memw
40081ff0:	0898      	l32i.n	a9, a8, 0
40081ff2:	f97a81        	l32r	a8, 400805dc <_init_end+0x1dc>
40081ff5:	1f9987        	bne	a9, a8, 40082018 <esp_timer_impl_get_time+0x54>
40081ff8:	f97a81        	l32r	a8, 400805e0 <_init_end+0x1e0>
40081ffb:	0020c0        	memw
40081ffe:	002882        	l32i	a8, a8, 0
40082001:	f97691        	l32r	a9, 400805dc <_init_end+0x1dc>
40082004:	10b987        	bgeu	a9, a8, 40082018 <esp_timer_impl_get_time+0x54>
40082007:	f97681        	l32r	a8, 400805e0 <_init_end+0x1e0>
4008200a:	0020c0        	memw
4008200d:	002882        	l32i	a8, a8, 0
40082010:	f97581        	l32r	a8, 400805e4 <_init_end+0x1e4>
40082013:	000882        	l8ui	a8, a8, 0
40082016:	b8bc      	beqz.n	a8, 40082055 <esp_timer_impl_get_time+0x91>
40082018:	f97081        	l32r	a8, 400805d8 <_init_end+0x1d8>
4008201b:	0020c0        	memw
4008201e:	0888      	l32i.n	a8, a8, 0
40082020:	f96f91        	l32r	a9, 400805dc <_init_end+0x1dc>
40082023:	0db987        	bgeu	a9, a8, 40082034 <esp_timer_impl_get_time+0x70>
40082026:	f96c81        	l32r	a8, 400805d8 <_init_end+0x1d8>
40082029:	0020c0        	memw
4008202c:	0888      	l32i.n	a8, a8, 0
4008202e:	080c      	movi.n	a8, 0
40082030:	000a06        	j	4008205c <esp_timer_impl_get_time+0x98>
40082033:	6b8100        	ole.s	b8, f1, f0
40082036:	c0f9      	s32i.n	a15, a0, 48
40082038:	880020        	lsi	f2, a0, 0x220
4008203b:	9108      	l32i.n	a0, a1, 36
4008203d:	f968      	l32i.n	a6, a9, 60
4008203f:	17b987        	bgeu	a9, a8, 4008205a <esp_timer_impl_get_time+0x96>
40082042:	f96781        	l32r	a8, 400805e0 <_init_end+0x1e0>
40082045:	0020c0        	memw
40082048:	0888      	l32i.n	a8, a8, 0
4008204a:	180c      	movi.n	a8, 1
4008204c:	000306        	j	4008205c <esp_timer_impl_get_time+0x98>
4008204f:	080c00        	lsx	f0, a12, a0
40082052:	000186        	j	4008205c <esp_timer_impl_get_time+0x98>
40082055:	180c      	movi.n	a8, 1
40082057:	000046        	j	4008205c <esp_timer_impl_get_time+0x98>
4008205a:	080c      	movi.n	a8, 0
4008205c:	f96c91        	l32r	a9, 4008060c <_init_end+0x20c>
4008205f:	09c8      	l32i.n	a12, a9, 0
40082061:	f95f91        	l32r	a9, 400805e0 <_init_end+0x1e0>
40082064:	0020c0        	memw
40082067:	0998      	l32i.n	a9, a9, 0
40082069:	023297        	bltu	a2, a9, 4008206f <esp_timer_impl_get_time+0xab>
4008206c:	ffd5c6        	j	40081fc7 <esp_timer_impl_get_time+0x3>
4008206f:	f96091        	l32r	a9, 400805f0 <_init_end+0x1f0>
40082072:	0020c0        	memw
40082075:	09e8      	l32i.n	a14, a9, 0
40082077:	0020c0        	memw
4008207a:	19f8      	l32i.n	a15, a9, 4
4008207c:	021ae7        	beq	a10, a14, 40082082 <esp_timer_impl_get_time+0xbe>
4008207f:	ffd106        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082082:	0213f7        	beq	a3, a15, 40082088 <esp_timer_impl_get_time+0xc4>
40082085:	ffcf86        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082088:	f96191        	l32r	a9, 4008060c <_init_end+0x20c>
4008208b:	0020c0        	memw
4008208e:	0998      	l32i.n	a9, a9, 0
40082090:	021c97        	beq	a12, a9, 40082096 <esp_timer_impl_get_time+0xd2>
40082093:	ffcc06        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082096:	f94e91        	l32r	a9, 400805d0 <_init_end+0x1d0>
40082099:	000992        	l8ui	a9, a9, 0
4008209c:	07c956        	bnez	a9, 4008211c <esp_timer_impl_get_time+0x158>
4008209f:	f94d91        	l32r	a9, 400805d4 <_init_end+0x1d4>
400820a2:	0020c0        	memw
400820a5:	0998      	l32i.n	a9, a9, 0
400820a7:	656987        	bbci	a9, 8, 40082110 <esp_timer_impl_get_time+0x14c>
400820aa:	f94b91        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820ad:	0020c0        	memw
400820b0:	09d8      	l32i.n	a13, a9, 0
400820b2:	f94a91        	l32r	a9, 400805dc <_init_end+0x1dc>
400820b5:	1f9d97        	bne	a13, a9, 400820d8 <esp_timer_impl_get_time+0x114>
400820b8:	f94a91        	l32r	a9, 400805e0 <_init_end+0x1e0>
400820bb:	0020c0        	memw
400820be:	002992        	l32i	a9, a9, 0
400820c1:	f946d1        	l32r	a13, 400805dc <_init_end+0x1dc>
400820c4:	10bd97        	bgeu	a13, a9, 400820d8 <esp_timer_impl_get_time+0x114>
400820c7:	f94691        	l32r	a9, 400805e0 <_init_end+0x1e0>
400820ca:	0020c0        	memw
400820cd:	002992        	l32i	a9, a9, 0
400820d0:	f94591        	l32r	a9, 400805e4 <_init_end+0x1e4>
400820d3:	000992        	l8ui	a9, a9, 0
400820d6:	b9bc      	beqz.n	a9, 40082115 <esp_timer_impl_get_time+0x151>
400820d8:	f94091        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820db:	0020c0        	memw
400820de:	0998      	l32i.n	a9, a9, 0
400820e0:	f93fd1        	l32r	a13, 400805dc <_init_end+0x1dc>
400820e3:	0dbd97        	bgeu	a13, a9, 400820f4 <esp_timer_impl_get_time+0x130>
400820e6:	f93c91        	l32r	a9, 400805d8 <_init_end+0x1d8>
400820e9:	0020c0        	memw
400820ec:	0998      	l32i.n	a9, a9, 0
400820ee:	090c      	movi.n	a9, 0
400820f0:	000a06        	j	4008211c <esp_timer_impl_get_time+0x158>
400820f3:	3b9100        	ueq.s	b9, f1, f0
400820f6:	c0f9      	s32i.n	a15, a0, 48
400820f8:	980020        	lsi	f2, a0, 0x260
400820fb:	d109      	s32i.n	a0, a1, 52
400820fd:	f938      	l32i.n	a3, a9, 60
400820ff:	17bd97        	bgeu	a13, a9, 4008211a <esp_timer_impl_get_time+0x156>
40082102:	f93791        	l32r	a9, 400805e0 <_init_end+0x1e0>
40082105:	0020c0        	memw
40082108:	0998      	l32i.n	a9, a9, 0
4008210a:	190c      	movi.n	a9, 1
4008210c:	000306        	j	4008211c <esp_timer_impl_get_time+0x158>
4008210f:	090c00        	l32e	a0, a12, -64
40082112:	000186        	j	4008211c <esp_timer_impl_get_time+0x158>
40082115:	190c      	movi.n	a9, 1
40082117:	000046        	j	4008211c <esp_timer_impl_get_time+0x158>
4008211a:	090c      	movi.n	a9, 0
4008211c:	021897        	beq	a8, a9, 40082122 <esp_timer_impl_get_time+0x15e>
4008211f:	ffa906        	j	40081fc7 <esp_timer_impl_get_time+0x3>
40082122:	c222c0        	quou	a2, a2, a12
40082125:	2a2a      	add.n	a2, a10, a2
40082127:	180c      	movi.n	a8, 1
40082129:	0132a7        	bltu	a2, a10, 4008212e <esp_timer_impl_get_time+0x16a>
4008212c:	080c      	movi.n	a8, 0
4008212e:	383a      	add.n	a3, a8, a3
40082130:	f01d      	retw.n
	...

40082134 <esp_timer_impl_set_alarm>:
40082134:	004136        	entry	a1, 32
40082137:	f925a1        	l32r	a10, 400805cc <_init_end+0x1cc>
4008213a:	069565        	call8	40088a90 <vTaskEnterCritical>
4008213d:	f92c91        	l32r	a9, 400805f0 <_init_end+0x1f0>
40082140:	002982        	l32i	a8, a9, 0
40082143:	0129a2        	l32i	a10, a9, 4
40082146:	c08280        	sub	a8, a2, a8
40082149:	01a092        	movi	a9, 1
4008214c:	013287        	bltu	a2, a8, 40082151 <esp_timer_impl_set_alarm+0x1d>
4008214f:	090c      	movi.n	a9, 0
40082151:	c033a0        	sub	a3, a3, a10
40082154:	c03390        	sub	a3, a3, a9
40082157:	08cd      	mov.n	a12, a8
40082159:	039d      	mov.n	a9, a3
4008215b:	f91d21        	l32r	a2, 400805d0 <_init_end+0x1d0>
4008215e:	0002a2        	l8ui	a10, a2, 0
40082161:	07ba56        	bnez	a10, 400821e0 <esp_timer_impl_set_alarm+0xac>
40082164:	f91c21        	l32r	a2, 400805d4 <_init_end+0x1d4>
40082167:	0020c0        	memw
4008216a:	0228      	l32i.n	a2, a2, 0
4008216c:	646287        	bbci	a2, 8, 400821d4 <esp_timer_impl_set_alarm+0xa0>
4008216f:	f91a21        	l32r	a2, 400805d8 <_init_end+0x1d8>
40082172:	0020c0        	memw
40082175:	02a8      	l32i.n	a10, a2, 0
40082177:	f91921        	l32r	a2, 400805dc <_init_end+0x1dc>
4008217a:	1e9a27        	bne	a10, a2, 4008219c <esp_timer_impl_set_alarm+0x68>
4008217d:	f91821        	l32r	a2, 400805e0 <_init_end+0x1e0>
40082180:	0020c0        	memw
40082183:	0228      	l32i.n	a2, a2, 0
40082185:	f915a1        	l32r	a10, 400805dc <_init_end+0x1dc>
40082188:	10ba27        	bgeu	a10, a2, 4008219c <esp_timer_impl_set_alarm+0x68>
4008218b:	f91521        	l32r	a2, 400805e0 <_init_end+0x1e0>
4008218e:	0020c0        	memw
40082191:	002222        	l32i	a2, a2, 0
40082194:	f91421        	l32r	a2, 400805e4 <_init_end+0x1e4>
40082197:	000222        	l8ui	a2, a2, 0
4008219a:	b2bc      	beqz.n	a2, 400821d9 <esp_timer_impl_set_alarm+0xa5>
4008219c:	f90f21        	l32r	a2, 400805d8 <_init_end+0x1d8>
4008219f:	0020c0        	memw
400821a2:	0228      	l32i.n	a2, a2, 0
400821a4:	f90ea1        	l32r	a10, 400805dc <_init_end+0x1dc>
400821a7:	0dba27        	bgeu	a10, a2, 400821b8 <esp_timer_impl_set_alarm+0x84>
400821aa:	f90b21        	l32r	a2, 400805d8 <_init_end+0x1d8>
400821ad:	0020c0        	memw
400821b0:	0228      	l32i.n	a2, a2, 0
400821b2:	0a0c      	movi.n	a10, 0
400821b4:	000a06        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821b7:	0a2100        	add.s	f2, f1, f0
400821ba:	c0f9      	s32i.n	a15, a0, 48
400821bc:	280020        	lsi	f2, a0, 160
400821bf:	07a102        	movi	a0, 0x107
400821c2:	27f9      	s32i.n	a15, a7, 8
400821c4:	17ba      	add.n	a1, a7, a11
400821c6:	f90621        	l32r	a2, 400805e0 <_init_end+0x1e0>
400821c9:	0020c0        	memw
400821cc:	0228      	l32i.n	a2, a2, 0
400821ce:	1a0c      	movi.n	a10, 1
400821d0:	000306        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821d3:	0a0c00        	add.s	f0, f12, f0
400821d6:	000186        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821d9:	1a0c      	movi.n	a10, 1
400821db:	000046        	j	400821e0 <esp_timer_impl_set_alarm+0xac>
400821de:	0a0c      	movi.n	a10, 0
400821e0:	f90021        	l32r	a2, 400805e0 <_init_end+0x1e0>
400821e3:	0020c0        	memw
400821e6:	02b8      	l32i.n	a11, a2, 0
400821e8:	8abc      	beqz.n	a10, 40082224 <esp_timer_impl_set_alarm+0xf0>
400821ea:	f90221        	l32r	a2, 400805f4 <_init_end+0x1f4>
400821ed:	0228      	l32i.n	a2, a2, 0
400821ef:	017956        	bnez	a9, 4008220a <esp_timer_impl_set_alarm+0xd6>
400821f2:	002956        	bnez	a9, 400821f8 <esp_timer_impl_set_alarm+0xc4>
400821f5:	1132c7        	bltu	a2, a12, 4008220a <esp_timer_impl_set_alarm+0xd6>
400821f8:	f907d1        	l32r	a13, 40080614 <_init_end+0x214>
400821fb:	f907c1        	l32r	a12, 40080618 <_init_end+0x218>
400821fe:	e8a0b2        	movi	a11, 232
40082201:	f8ffa1        	l32r	a10, 40080600 <_init_end+0x200>
40082204:	201110        	or	a1, a1, a1
40082207:	58cd25        	call8	400daed8 <__assert_func>
4008220a:	c08820        	sub	a8, a8, a2
4008220d:	190c      	movi.n	a9, 1
4008220f:	013c87        	bltu	a12, a8, 40082214 <esp_timer_impl_set_alarm+0xe0>
40082212:	090c      	movi.n	a9, 0
40082214:	08cd      	mov.n	a12, a8
40082216:	c09390        	sub	a9, a3, a9
40082219:	130c      	movi.n	a3, 1
4008221b:	f8ed21        	l32r	a2, 400805d0 <_init_end+0x1d0>
4008221e:	004232        	s8i	a3, a2, 0
40082221:	0020c0        	memw
40082224:	f03d      	nop.n
40082226:	f03d      	nop.n
40082228:	f03d      	nop.n
4008222a:	f03d      	nop.n
4008222c:	f8f821        	l32r	a2, 4008060c <_init_end+0x20c>
4008222f:	02a8      	l32i.n	a10, a2, 0
40082231:	8239a0        	mull	a3, a9, a10
40082234:	a29ca0        	muluh	a9, a12, a10
40082237:	828ca0        	mull	a8, a12, a10
4008223a:	939a      	add.n	a9, a3, a9
4008223c:	11aaf0        	slli	a10, a10, 1
4008223f:	29fc      	bnez.n	a9, 40082275 <esp_timer_impl_set_alarm+0x141>
40082241:	49cc      	bnez.n	a9, 40082249 <esp_timer_impl_set_alarm+0x115>
40082243:	f8f621        	l32r	a2, 4008061c <_init_end+0x21c>
40082246:	2b3287        	bltu	a2, a8, 40082275 <esp_timer_impl_set_alarm+0x141>
40082249:	baba      	add.n	a11, a10, a11
4008224b:	130c      	movi.n	a3, 1
4008224d:	013ba7        	bltu	a11, a10, 40082252 <esp_timer_impl_set_alarm+0x11e>
40082250:	030c      	movi.n	a3, 0
40082252:	0b2d      	mov.n	a2, a11
40082254:	053937        	bltu	a9, a3, 4008225d <esp_timer_impl_set_alarm+0x129>
40082257:	1d9397        	bne	a3, a9, 40082278 <esp_timer_impl_set_alarm+0x144>
4008225a:	1ab8b7        	bgeu	a8, a11, 40082278 <esp_timer_impl_set_alarm+0x144>
4008225d:	c3cc      	bnez.n	a3, 4008226d <esp_timer_impl_set_alarm+0x139>
4008225f:	005356        	bnez	a3, 40082268 <esp_timer_impl_set_alarm+0x134>
40082262:	f8de31        	l32r	a3, 400805dc <_init_end+0x1dc>
40082265:	043327        	bltu	a3, a2, 4008226d <esp_timer_impl_set_alarm+0x139>
40082268:	0b8d      	mov.n	a8, a11
4008226a:	000286        	j	40082278 <esp_timer_impl_set_alarm+0x144>
4008226d:	f8db81        	l32r	a8, 400805dc <_init_end+0x1dc>
40082270:	000106        	j	40082278 <esp_timer_impl_set_alarm+0x144>
40082273:	810000        	src	a0, a0, a0
40082276:	f8d9      	s32i.n	a13, a8, 60
40082278:	f8d821        	l32r	a2, 400805d8 <_init_end+0x1d8>
4008227b:	0020c0        	memw
4008227e:	0289      	s32i.n	a8, a2, 0
40082280:	f03d      	nop.n
40082282:	f03d      	nop.n
40082284:	f03d      	nop.n
40082286:	f03d      	nop.n
40082288:	f8d1a1        	l32r	a10, 400805cc <_init_end+0x1cc>
4008228b:	069465        	call8	40088bd0 <vTaskExitCritical>
4008228e:	f01d      	retw.n

40082290 <esp_timer_impl_update_apb_freq>:
40082290:	004136        	entry	a1, 32
40082293:	f8cea1        	l32r	a10, 400805cc <_init_end+0x1cc>
40082296:	067fa5        	call8	40088a90 <vTaskEnterCritical>
40082299:	f8e131        	l32r	a3, 40080620 <_init_end+0x220>
4008229c:	002332        	l32i	a3, a3, 0
4008229f:	009356        	bnez	a3, 400822ac <esp_timer_impl_update_apb_freq+0x1c>
400822a2:	f8caa1        	l32r	a10, 400805cc <_init_end+0x1cc>
400822a5:	0692a5        	call8	40088bd0 <vTaskExitCritical>
400822a8:	f01d      	retw.n
400822aa:	310000        	srai	a0, a0, 16
400822ad:	f8cb      	addi.n	a15, a8, 12
400822af:	0020c0        	memw
400822b2:	0348      	l32i.n	a4, a3, 0
400822b4:	f8cb31        	l32r	a3, 400805e0 <_init_end+0x1e0>
400822b7:	0020c0        	memw
400822ba:	0338      	l32i.n	a3, a3, 0
400822bc:	c0a430        	sub	a10, a4, a3
400822bf:	a2b2a0        	muluh	a11, a2, a10
400822c2:	f8d281        	l32r	a8, 4008060c <_init_end+0x20c>
400822c5:	08c8      	l32i.n	a12, a8, 0
400822c7:	0d0c      	movi.n	a13, 0
400822c9:	82a2a0        	mull	a10, a2, a10
400822cc:	f8d681        	l32r	a8, 40080624 <_init_end+0x224>
400822cf:	0008e0        	callx8	a8
400822d2:	0acd      	mov.n	a12, a10
400822d4:	01a082        	movi	a8, 1
400822d7:	023347        	bltu	a3, a4, 400822dd <esp_timer_impl_update_apb_freq+0x4d>
400822da:	00a082        	movi	a8, 0
400822dd:	748080        	extui	a8, a8, 0, 8
400822e0:	190c      	movi.n	a9, 1
400822e2:	008b56        	bnez	a11, 400822ee <esp_timer_impl_update_apb_freq+0x5e>
400822e5:	007b56        	bnez	a11, 400822f0 <esp_timer_impl_update_apb_freq+0x60>
400822e8:	f8bdb1        	l32r	a11, 400805dc <_init_end+0x1dc>
400822eb:	01bbc7        	bgeu	a11, a12, 400822f0 <esp_timer_impl_update_apb_freq+0x60>
400822ee:	090c      	movi.n	a9, 0
400822f0:	248897        	bany	a8, a9, 40082318 <esp_timer_impl_update_apb_freq+0x88>
400822f3:	f8ba81        	l32r	a8, 400805dc <_init_end+0x1dc>
400822f6:	1b1487        	beq	a4, a8, 40082315 <esp_timer_impl_update_apb_freq+0x85>
400822f9:	180c      	movi.n	a8, 1
400822fb:	f8ba41        	l32r	a4, 400805e4 <_init_end+0x1e4>
400822fe:	004482        	s8i	a8, a4, 0
40082301:	0020c0        	memw
40082304:	f03d      	nop.n
40082306:	f03d      	nop.n
40082308:	f03d      	nop.n
4008230a:	f03d      	nop.n
4008230c:	f8b4a1        	l32r	a10, 400805dc <_init_end+0x1dc>
4008230f:	000146        	j	40082318 <esp_timer_impl_update_apb_freq+0x88>
40082312:	000000        	ill
40082315:	f8b1a1        	l32r	a10, 400805dc <_init_end+0x1dc>
40082318:	f8b041        	l32r	a4, 400805d8 <_init_end+0x1d8>
4008231b:	0020c0        	memw
4008231e:	04a9      	s32i.n	a10, a4, 0
40082320:	080c      	movi.n	a8, 0
40082322:	f03d      	nop.n
40082324:	f03d      	nop.n
40082326:	f03d      	nop.n
40082328:	f8b141        	l32r	a4, 400805ec <_init_end+0x1ec>
4008232b:	0020c0        	memw
4008232e:	0489      	s32i.n	a8, a4, 0
40082330:	f03d      	nop.n
40082332:	f03d      	nop.n
40082334:	f03d      	nop.n
40082336:	f03d      	nop.n
40082338:	f8b541        	l32r	a4, 4008060c <_init_end+0x20c>
4008233b:	0448      	l32i.n	a4, a4, 0
4008233d:	c23340        	quou	a3, a3, a4
40082340:	f8ac81        	l32r	a8, 400805f0 <_init_end+0x1f0>
40082343:	0898      	l32i.n	a9, a8, 0
40082345:	1848      	l32i.n	a4, a8, 4
40082347:	393a      	add.n	a3, a9, a3
40082349:	1a0c      	movi.n	a10, 1
4008234b:	023397        	bltu	a3, a9, 40082351 <esp_timer_impl_update_apb_freq+0xc1>
4008234e:	00a0a2        	movi	a10, 0
40082351:	804a40        	add	a4, a10, a4
40082354:	006832        	s32i	a3, a8, 0
40082357:	016842        	s32i	a4, a8, 4
4008235a:	f03d      	nop.n
4008235c:	f03d      	nop.n
4008235e:	f03d      	nop.n
40082360:	f03d      	nop.n
40082362:	f8aa31        	l32r	a3, 4008060c <_init_end+0x20c>
40082365:	0329      	s32i.n	a2, a3, 0
40082367:	f03d      	nop.n
40082369:	f03d      	nop.n
4008236b:	f03d      	nop.n
4008236d:	f03d      	nop.n
4008236f:	f89b31        	l32r	a3, 400805dc <_init_end+0x1dc>
40082372:	c22320        	quou	a2, a3, a2
40082375:	f89f31        	l32r	a3, 400805f4 <_init_end+0x1f4>
40082378:	0329      	s32i.n	a2, a3, 0
4008237a:	f03d      	nop.n
4008237c:	f03d      	nop.n
4008237e:	f03d      	nop.n
40082380:	f03d      	nop.n
40082382:	f892a1        	l32r	a10, 400805cc <_init_end+0x1cc>
40082385:	0684a5        	call8	40088bd0 <vTaskExitCritical>
40082388:	f01d      	retw.n
	...

4008238c <esp_timer_impl_get_min_period_us>:
4008238c:	004136        	entry	a1, 32
4008238f:	f8a621        	l32r	a2, 40080628 <_init_end+0x228>
40082392:	f86031        	l32r	a3, 40080514 <_init_end+0x114>
40082395:	f01d      	retw.n
	...

40082398 <esp_vApplicationTickHook>:
40082398:	004136        	entry	a1, 32
4008239b:	03eb30        	rsr.prid	a3
4008239e:	043d30        	extui	a3, a3, 13, 1
400823a1:	020c      	movi.n	a2, 0
400823a3:	0004c6        	j	400823ba <esp_vApplicationTickHook+0x22>
400823a6:	200000        	or	a0, a0, a0
400823a9:	91b083        	lsi	f8, a0, 0x244
400823ac:	90f8a0        	addx2	a15, a8, a10
400823af:	a088      	l32i.n	a8, a0, 40
400823b1:	0888      	l32i.n	a8, a8, 0
400823b3:	188c      	beqz.n	a8, 400823b8 <esp_vApplicationTickHook+0x20>
400823b5:	0008e0        	callx8	a8
400823b8:	221b      	addi.n	a2, a2, 1
400823ba:	ea82a6        	blti	a2, 8, 400823a8 <esp_vApplicationTickHook+0x10>
400823bd:	f01d      	retw.n
	...

400823c0 <timer_initialized>:
400823c0:	004136        	entry	a1, 32
400823c3:	1288      	l32i.n	a8, a2, 4
400823c5:	f89a21        	l32r	a2, 40080630 <_init_end+0x230>
400823c8:	882a      	add.n	a8, a8, a2
400823ca:	020c      	movi.n	a2, 0
400823cc:	190c      	movi.n	a9, 1
400823ce:	832980        	moveqz	a2, a9, a8
400823d1:	f01d      	retw.n
	...

400823d4 <ets_timer_arm_us>:
400823d4:	004136        	entry	a1, 32
400823d7:	744040        	extui	a4, a4, 0, 8
400823da:	02ad      	mov.n	a10, a2
400823dc:	fffe25        	call8	400823c0 <timer_initialized>
400823df:	00da56        	bnez	a10, 400823f0 <ets_timer_arm_us+0x1c>
400823e2:	f894d1        	l32r	a13, 40080634 <_init_end+0x234>
400823e5:	f894c1        	l32r	a12, 40080638 <_init_end+0x238>
400823e8:	9b4c      	movi.n	a11, 73
400823ea:	f894a1        	l32r	a10, 4008063c <_init_end+0x23c>
400823ed:	58aea5        	call8	400daed8 <__assert_func>
400823f0:	0422a2        	l32i	a10, a2, 16
400823f3:	ff29a5        	call8	4008168c <esp_timer_stop>
400823f6:	019456        	bnez	a4, 40082413 <ets_timer_arm_us+0x3f>
400823f9:	20c330        	or	a12, a3, a3
400823fc:	0d0c      	movi.n	a13, 0
400823fe:	42a8      	l32i.n	a10, a2, 16
40082400:	ff2de5        	call8	400816e0 <esp_timer_start_once>
40082403:	5aac      	beqz.n	a10, 4008242c <ets_timer_arm_us+0x58>
40082405:	f88ee1        	l32r	a14, 40080640 <_init_end+0x240>
40082408:	f88cd1        	l32r	a13, 40080638 <_init_end+0x238>
4008240b:	cc4c      	movi.n	a12, 76
4008240d:	f88bb1        	l32r	a11, 4008063c <_init_end+0x23c>
40082410:	092325        	call8	4008b644 <_esp_error_check_failed>
40082413:	03cd      	mov.n	a12, a3
40082415:	0d0c      	movi.n	a13, 0
40082417:	42a8      	l32i.n	a10, a2, 16
40082419:	ff3125        	call8	4008172c <esp_timer_start_periodic>
4008241c:	ca8c      	beqz.n	a10, 4008242c <ets_timer_arm_us+0x58>
4008241e:	f889e1        	l32r	a14, 40080644 <_init_end+0x244>
40082421:	f885d1        	l32r	a13, 40080638 <_init_end+0x238>
40082424:	ec4c      	movi.n	a12, 78
40082426:	f885b1        	l32r	a11, 4008063c <_init_end+0x23c>
40082429:	0921a5        	call8	4008b644 <_esp_error_check_failed>
4008242c:	f01d      	retw.n
	...

40082430 <ets_timer_arm>:
40082430:	004136        	entry	a1, 32
40082433:	744040        	extui	a4, a4, 0, 8
40082436:	e8a382        	movi	a8, 0x3e8
40082439:	825830        	mull	a5, a8, a3
4008243c:	a23830        	muluh	a3, a8, a3
4008243f:	02ad      	mov.n	a10, a2
40082441:	fff7e5        	call8	400823c0 <timer_initialized>
40082444:	cacc      	bnez.n	a10, 40082454 <ets_timer_arm+0x24>
40082446:	f87bd1        	l32r	a13, 40080634 <_init_end+0x234>
40082449:	f87fc1        	l32r	a12, 40080648 <_init_end+0x248>
4008244c:	5b5c      	movi.n	a11, 85
4008244e:	f87ba1        	l32r	a10, 4008063c <_init_end+0x23c>
40082451:	58a865        	call8	400daed8 <__assert_func>
40082454:	0422a2        	l32i	a10, a2, 16
40082457:	ff2365        	call8	4008168c <esp_timer_stop>
4008245a:	019456        	bnez	a4, 40082477 <ets_timer_arm+0x47>
4008245d:	20c550        	or	a12, a5, a5
40082460:	03dd      	mov.n	a13, a3
40082462:	42a8      	l32i.n	a10, a2, 16
40082464:	ff27a5        	call8	400816e0 <esp_timer_start_once>
40082467:	5aac      	beqz.n	a10, 40082490 <ets_timer_arm+0x60>
40082469:	f875e1        	l32r	a14, 40080640 <_init_end+0x240>
4008246c:	f877d1        	l32r	a13, 40080648 <_init_end+0x248>
4008246f:	8c5c      	movi.n	a12, 88
40082471:	f872b1        	l32r	a11, 4008063c <_init_end+0x23c>
40082474:	091ce5        	call8	4008b644 <_esp_error_check_failed>
40082477:	05cd      	mov.n	a12, a5
40082479:	03dd      	mov.n	a13, a3
4008247b:	42a8      	l32i.n	a10, a2, 16
4008247d:	ff2ae5        	call8	4008172c <esp_timer_start_periodic>
40082480:	ca8c      	beqz.n	a10, 40082490 <ets_timer_arm+0x60>
40082482:	f870e1        	l32r	a14, 40080644 <_init_end+0x244>
40082485:	f870d1        	l32r	a13, 40080648 <_init_end+0x248>
40082488:	ac5c      	movi.n	a12, 90
4008248a:	f86cb1        	l32r	a11, 4008063c <_init_end+0x23c>
4008248d:	091b65        	call8	4008b644 <_esp_error_check_failed>
40082490:	f01d      	retw.n
	...

40082494 <ets_timer_disarm>:
40082494:	004136        	entry	a1, 32
40082497:	20a220        	or	a10, a2, a2
4008249a:	fff265        	call8	400823c0 <timer_initialized>
4008249d:	005a16        	beqz	a10, 400824a6 <ets_timer_disarm+0x12>
400824a0:	0422a2        	l32i	a10, a2, 16
400824a3:	ff1ea5        	call8	4008168c <esp_timer_stop>
400824a6:	f01d      	retw.n

400824a8 <ipc_task>:
400824a8:	004136        	entry	a1, 32
400824ab:	03eb30        	rsr.prid	a3
400824ae:	043d30        	extui	a3, a3, 13, 1
400824b1:	101237        	beq	a2, a3, 400824c5 <ipc_task+0x1d>
400824b4:	f866d1        	l32r	a13, 4008064c <_init_end+0x24c>
400824b7:	f866c1        	l32r	a12, 40080650 <_init_end+0x250>
400824ba:	eb2c      	movi.n	a11, 46
400824bc:	f866a1        	l32r	a10, 40080654 <_init_end+0x254>
400824bf:	201110        	or	a1, a1, a1
400824c2:	58a165        	call8	400daed8 <__assert_func>
400824c5:	f86481        	l32r	a8, 40080658 <_init_end+0x258>
400824c8:	a08280        	addx4	a8, a2, a8
400824cb:	00a0d2        	movi	a13, 0
400824ce:	fc7c      	movi.n	a12, -1
400824d0:	0dbd      	mov.n	a11, a13
400824d2:	08a8      	l32i.n	a10, a8, 0
400824d4:	0568e5        	call8	40087b64 <xQueueGenericReceive>
400824d7:	021a26        	beqi	a10, 1, 400824dd <ipc_task+0x35>
400824da:	08e925        	call8	4008b36c <abort>
400824dd:	f85f31        	l32r	a3, 4008065c <_init_end+0x25c>
400824e0:	0020c0        	memw
400824e3:	0338      	l32i.n	a3, a3, 0
400824e5:	f85e41        	l32r	a4, 40080660 <_init_end+0x260>
400824e8:	0020c0        	memw
400824eb:	0448      	l32i.n	a4, a4, 0
400824ed:	f85d81        	l32r	a8, 40080664 <_init_end+0x264>
400824f0:	0020c0        	memw
400824f3:	0888      	l32i.n	a8, a8, 0
400824f5:	c8cc      	bnez.n	a8, 40082505 <ipc_task+0x5d>
400824f7:	0d0c      	movi.n	a13, 0
400824f9:	0dcd      	mov.n	a12, a13
400824fb:	0dbd      	mov.n	a11, a13
400824fd:	f85a81        	l32r	a8, 40080668 <_init_end+0x268>
40082500:	08a8      	l32i.n	a10, a8, 0
40082502:	052e25        	call8	400877e4 <xQueueGenericSend>
40082505:	04ad      	mov.n	a10, a4
40082507:	0003e0        	callx8	a3
4008250a:	f85681        	l32r	a8, 40080664 <_init_end+0x264>
4008250d:	0020c0        	memw
40082510:	0888      	l32i.n	a8, a8, 0
40082512:	af1866        	bnei	a8, 1, 400824c5 <ipc_task+0x1d>
40082515:	0d0c      	movi.n	a13, 0
40082517:	0dcd      	mov.n	a12, a13
40082519:	0dbd      	mov.n	a11, a13
4008251b:	f85331        	l32r	a3, 40080668 <_init_end+0x268>
4008251e:	0023a2        	l32i	a10, a3, 0
40082521:	052c25        	call8	400877e4 <xQueueGenericSend>
40082524:	ffe746        	j	400824c5 <ipc_task+0x1d>
	...

40082528 <esp_reset_reason_set_hint>:
40082528:	004136        	entry	a1, 32
4008252b:	f85081        	l32r	a8, 4008066c <_init_end+0x26c>
4008252e:	0e0287        	bnone	a2, a8, 40082540 <esp_reset_reason_set_hint+0x18>
40082531:	f84fd1        	l32r	a13, 40080670 <_init_end+0x270>
40082534:	f850c1        	l32r	a12, 40080674 <_init_end+0x274>
40082537:	6aa0b2        	movi	a11, 106
4008253a:	f84fa1        	l32r	a10, 40080678 <_init_end+0x278>
4008253d:	5899a5        	call8	400daed8 <__assert_func>
40082540:	118200        	slli	a8, a2, 16
40082543:	202280        	or	a2, a2, a8
40082546:	f84d81        	l32r	a8, 4008067c <_init_end+0x27c>
40082549:	202280        	or	a2, a2, a8
4008254c:	f84d81        	l32r	a8, 40080680 <_init_end+0x280>
4008254f:	0020c0        	memw
40082552:	0829      	s32i.n	a2, a8, 0
40082554:	f01d      	retw.n
	...

40082558 <esp_reset_reason_get_hint>:
40082558:	004136        	entry	a1, 32
4008255b:	f84921        	l32r	a2, 40080680 <_init_end+0x280>
4008255e:	0020c0        	memw
40082561:	0288      	l32i.n	a8, a2, 0
40082563:	e5a080        	extui	a10, a8, 16, 15
40082566:	e42080        	extui	a2, a8, 0, 15
40082569:	f97c      	movi.n	a9, -1
4008256b:	308980        	xor	a8, a9, a8
4008256e:	059f80        	extui	a9, a8, 31, 1
40082571:	c0aa20        	sub	a10, a10, a2
40082574:	080c      	movi.n	a8, 0
40082576:	1b0c      	movi.n	a11, 1
40082578:	938ba0        	movnez	a8, a11, a10
4008257b:	208890        	or	a8, a8, a9
4008257e:	088c      	beqz.n	a8, 40082582 <esp_reset_reason_get_hint+0x2a>
40082580:	020c      	movi.n	a2, 0
40082582:	f01d      	retw.n
40082584:	00e0c4        	lsi	f12, a0, 0
40082587:	60          	.byte 0x60

40082588 <phy_en_hw_set_freq$part$0>:
40082588:	004136        	entry	a1, 32
4008258b:	fffe91        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
4008258e:	f7f381        	l32r	a8, 4008055c <_init_end+0x15c>
40082591:	0020c0        	memw
40082594:	09a8      	l32i.n	a10, a9, 0
40082596:	108a80        	and	a8, a10, a8
40082599:	0020c0        	memw
4008259c:	0989      	s32i.n	a8, a9, 0
4008259e:	f01d      	retw.n
400825a0:	09b8      	l32i.n	a11, a9, 0
400825a2:	3ffc      	bnez.n	a15, 400825d9 <pll_correct_dcap+0x21>
400825a4:	00e130        	lsi	f3, a1, 0
400825a7:	00ff60        	lsi	f6, a15, 0
400825aa:	ff          	.byte 0xff
400825ab:	ff          	.byte 0xff
400825ac:	00e0c0        	lsi	f12, a0, 0
400825af:	ff0060        	f64cmph	a0, a0, a6, 15
400825b2:	ff          	.byte 0xff
400825b3:	e14800        	lsi	f0, a8, 0x384
400825b6:	00          	.byte 00
400825b7:	60          	.byte 0x60

400825b8 <pll_correct_dcap>:
400825b8:	004136        	entry	a1, 32
400825bb:	fff981        	l32r	a8, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400825be:	0e0c      	movi.n	a14, 0
400825c0:	0888      	l32i.n	a8, a8, 0
400825c2:	7d0c      	movi.n	a13, 7
400825c4:	292882        	l32i	a8, a8, 164
400825c7:	5c0c      	movi.n	a12, 5
400825c9:	1b0c      	movi.n	a11, 1
400825cb:	62a0a2        	movi	a10, 98
400825ce:	0008e0        	callx8	a8
400825d1:	748020        	extui	a8, a2, 0, 8
400825d4:	744040        	extui	a4, a4, 0, 8
400825d7:	21ea17        	bbsi	a10, 1, 400825fc <pll_correct_dcap+0x44>
400825da:	0420a0        	extui	a2, a10, 0, 1
400825dd:	32ec      	bnez.n	a2, 40082604 <pll_correct_dcap+0x4c>
400825df:	f01d      	retw.n
400825e1:	fff041        	l32r	a4, 400825a4 <phy_en_hw_set_freq$part$0+0x1c>
400825e4:	fff131        	l32r	a3, 400825a8 <phy_en_hw_set_freq$part$0+0x20>
400825e7:	0020c0        	memw
400825ea:	0498      	l32i.n	a9, a4, 0
400825ec:	118880        	slli	a8, a8, 8
400825ef:	103930        	and	a3, a9, a3
400825f2:	208380        	or	a8, a3, a8
400825f5:	0020c0        	memw
400825f8:	0489      	s32i.n	a8, a4, 0
400825fa:	f01d      	retw.n
400825fc:	ffa0c2        	movi	a12, 255
400825ff:	0c2d      	mov.n	a2, a12
40082601:	0000c6        	j	40082608 <pll_correct_dcap+0x50>
40082604:	1c0c      	movi.n	a12, 1
40082606:	0c2d      	mov.n	a2, a12
40082608:	ffdfb1        	l32r	a11, 40082584 <esp_reset_reason_get_hint+0x2c>
4008260b:	908880        	addx2	a8, a8, a8
4008260e:	0020c0        	memw
40082611:	0b98      	l32i.n	a9, a11, 0
40082613:	00afd2        	movi	a13, 0xffffff00
40082616:	10d9d0        	and	a13, a9, a13
40082619:	748080        	extui	a8, a8, 0, 8
4008261c:	208d80        	or	a8, a13, a8
4008261f:	0020c0        	memw
40082622:	0b89      	s32i.n	a8, a11, 0
40082624:	ffe281        	l32r	a8, 400825ac <phy_en_hw_set_freq$part$0+0x24>
40082627:	0020c0        	memw
4008262a:	0898      	l32i.n	a9, a8, 0
4008262c:	75a890        	extui	a10, a9, 24, 8
4008262f:	89ca      	add.n	a8, a9, a12
40082631:	ccaa      	add.n	a12, a12, a10
40082633:	ffdfa1        	l32r	a10, 400825b0 <phy_en_hw_set_freq$part$0+0x28>
40082636:	748080        	extui	a8, a8, 0, 8
40082639:	1099a0        	and	a9, a9, a10
4008263c:	209980        	or	a9, a9, a8
4008263f:	01ac80        	slli	a10, a12, 24
40082642:	209a90        	or	a9, a10, a9
40082645:	ffdba1        	l32r	a10, 400825b4 <phy_en_hw_set_freq$part$0+0x2c>
40082648:	0020c0        	memw
4008264b:	0a99      	s32i.n	a9, a10, 0
4008264d:	0020c0        	memw
40082650:	0ba8      	l32i.n	a10, a11, 0
40082652:	00a292        	movi	a9, 0x200
40082655:	209a90        	or	a9, a10, a9
40082658:	0020c0        	memw
4008265b:	0b99      	s32i.n	a9, a11, 0
4008265d:	0020c0        	memw
40082660:	0ba8      	l32i.n	a10, a11, 0
40082662:	ffad92        	movi	a9, 0xfffffdff
40082665:	109a90        	and	a9, a10, a9
40082668:	0020c0        	memw
4008266b:	0b99      	s32i.n	a9, a11, 0
4008266d:	004382        	s8i	a8, a3, 0
40082670:	f6d456        	bnez	a4, 400825e1 <pll_correct_dcap+0x29>
40082673:	f01d      	retw.n
40082675:	000000        	ill
40082678:	fc09b4        	lsi	f11, a9, 0x3f0
4008267b:	3f          	.byte 0x3f
4008267c:	fc09b3        	lsi	f11, a9, 0x3f0
4008267f:	3f          	.byte 0x3f
40082680:	e168      	l32i.n	a6, a1, 56
40082682:	bc6000        	lsi	f0, a0, 0x2f0
40082685:	fc09      	s32i.n	a0, a12, 60
40082687:	3f          	.byte 0x3f
40082688:	011040        	slli	a1, a0, 28
4008268b:	60          	.byte 0x60

4008268c <phy_unforce_wifi_chan>:
4008268c:	006136        	entry	a1, 48
4008268f:	201110        	or	a1, a1, a1
40082692:	ff79e5        	call8	40081e30 <phy_enter_critical>
40082695:	fff981        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082698:	fff891        	l32r	a9, 40082678 <pll_correct_dcap+0xc0>
4008269b:	0b0c      	movi.n	a11, 0
4008269d:	000882        	l8ui	a8, a8, 0
400826a0:	0049b2        	s8i	a11, a9, 0
400826a3:	c8fc      	bnez.n	a8, 400826e3 <phy_unforce_wifi_chan+0x57>
400826a5:	fff6c1        	l32r	a12, 40082680 <pll_correct_dcap+0xc8>
400826a8:	f7f5b1        	l32r	a11, 4008067c <_init_end+0x27c>
400826ab:	ffb691        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
400826ae:	00a1d2        	movi	a13, 0x100
400826b1:	0020c0        	memw
400826b4:	002c82        	l32i	a8, a12, 0
400826b7:	0808b7        	bnone	a8, a11, 400826c3 <phy_unforce_wifi_chan+0x37>
400826ba:	0020c0        	memw
400826bd:	002982        	l32i	a8, a9, 0
400826c0:	ed08d7        	bnone	a8, a13, 400826b1 <phy_unforce_wifi_chan+0x25>
400826c3:	0020c0        	memw
400826c6:	0029b2        	l32i	a11, a9, 0
400826c9:	f9ac81        	l32r	a8, 40080d7c <_init_end+0x97c>
400826cc:	108b80        	and	a8, a11, a8
400826cf:	0020c0        	memw
400826d2:	0989      	s32i.n	a8, a9, 0
400826d4:	ffec81        	l32r	a8, 40082684 <pll_correct_dcap+0xcc>
400826d7:	000882        	l8ui	a8, a8, 0
400826da:	58cc      	bnez.n	a8, 400826e3 <phy_unforce_wifi_chan+0x57>
400826dc:	01a9      	s32i.n	a10, a1, 0
400826de:	ffeaa5        	call8	40082588 <phy_en_hw_set_freq$part$0>
400826e1:	01a8      	l32i.n	a10, a1, 0
400826e3:	ffe991        	l32r	a9, 40082688 <pll_correct_dcap+0xd0>
400826e6:	180c      	movi.n	a8, 1
400826e8:	0020c0        	memw
400826eb:	09b8      	l32i.n	a11, a9, 0
400826ed:	208b80        	or	a8, a11, a8
400826f0:	0020c0        	memw
400826f3:	0989      	s32i.n	a8, a9, 0
400826f5:	ff7425        	call8	40081e38 <phy_exit_critical>
400826f8:	f01d      	retw.n
	...

400826fc <phy_dis_hw_set_freq>:
400826fc:	004136        	entry	a1, 32
400826ff:	ffe0b1        	l32r	a11, 40082680 <pll_correct_dcap+0xc8>
40082702:	f7dea1        	l32r	a10, 4008067c <_init_end+0x27c>
40082705:	ff9f91        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
40082708:	00a1c2        	movi	a12, 0x100
4008270b:	0020c0        	memw
4008270e:	0b88      	l32i.n	a8, a11, 0
40082710:	0808a7        	bnone	a8, a10, 4008271c <phy_dis_hw_set_freq+0x20>
40082713:	0020c0        	memw
40082716:	002982        	l32i	a8, a9, 0
40082719:	ee08c7        	bnone	a8, a12, 4008270b <phy_dis_hw_set_freq+0xf>
4008271c:	0020c0        	memw
4008271f:	09b8      	l32i.n	a11, a9, 0
40082721:	f9ac81        	l32r	a8, 40080dd4 <_init_end+0x9d4>
40082724:	2a0c      	movi.n	a10, 2
40082726:	208b80        	or	a8, a11, a8
40082729:	0020c0        	memw
4008272c:	0989      	s32i.n	a8, a9, 0
4008272e:	f75d81        	l32r	a8, 400804a4 <_init_end+0xa4>
40082731:	0008e0        	callx8	a8
40082734:	f01d      	retw.n
	...

40082738 <phy_force_wifi_chan>:
40082738:	006136        	entry	a1, 48
4008273b:	ff6f65        	call8	40081e30 <phy_enter_critical>
4008273e:	ffce81        	l32r	a8, 40082678 <pll_correct_dcap+0xc0>
40082741:	190c      	movi.n	a9, 1
40082743:	004892        	s8i	a9, a8, 0
40082746:	0061a2        	s32i	a10, a1, 0
40082749:	fffb25        	call8	400826fc <phy_dis_hw_set_freq>
4008274c:	ffcf91        	l32r	a9, 40082688 <pll_correct_dcap+0xd0>
4008274f:	e87c      	movi.n	a8, -2
40082751:	0020c0        	memw
40082754:	09b8      	l32i.n	a11, a9, 0
40082756:	01a8      	l32i.n	a10, a1, 0
40082758:	108b80        	and	a8, a11, a8
4008275b:	0020c0        	memw
4008275e:	0989      	s32i.n	a8, a9, 0
40082760:	ffc781        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082763:	000882        	l8ui	a8, a8, 0
40082766:	05d856        	bnez	a8, 400827c7 <phy_force_wifi_chan+0x8f>
40082769:	ff8681        	l32r	a8, 40082584 <esp_reset_reason_get_hint+0x2c>
4008276c:	ffae92        	movi	a9, 0xfffffeff
4008276f:	0020c0        	memw
40082772:	08b8      	l32i.n	a11, a8, 0
40082774:	109b90        	and	a9, a11, a9
40082777:	0020c0        	memw
4008277a:	0899      	s32i.n	a9, a8, 0
4008277c:	0020c0        	memw
4008277f:	08b8      	l32i.n	a11, a8, 0
40082781:	f97e91        	l32r	a9, 40080d7c <_init_end+0x97c>
40082784:	10bb90        	and	a11, a11, a9
40082787:	f77791        	l32r	a9, 40080564 <_init_end+0x164>
4008278a:	209b90        	or	a9, a11, a9
4008278d:	0020c0        	memw
40082790:	0899      	s32i.n	a9, a8, 0
40082792:	0020c0        	memw
40082795:	002892        	l32i	a9, a8, 0
40082798:	00a1b2        	movi	a11, 0x100
4008279b:	2099b0        	or	a9, a9, a11
4008279e:	0020c0        	memw
400827a1:	006892        	s32i	a9, a8, 0
400827a4:	0020c0        	memw
400827a7:	002892        	l32i	a9, a8, 0
400827aa:	008996        	bltz	a9, 400827b6 <phy_force_wifi_chan+0x7e>
400827ad:	0020c0        	memw
400827b0:	002892        	l32i	a9, a8, 0
400827b3:	ed89b7        	bany	a9, a11, 400827a4 <phy_force_wifi_chan+0x6c>
400827b6:	0020c0        	memw
400827b9:	0028b2        	l32i	a11, a8, 0
400827bc:	ffae92        	movi	a9, 0xfffffeff
400827bf:	109b90        	and	a9, a11, a9
400827c2:	0020c0        	memw
400827c5:	0899      	s32i.n	a9, a8, 0
400827c7:	ff6725        	call8	40081e38 <phy_exit_critical>
400827ca:	f01d      	retw.n
400827cc:	003800        	lsi	f0, a8, 0
400827cf:	18          	.byte 0x18

400827d0 <ram_chip_i2c_writeReg>:
400827d0:	006136        	entry	a1, 48
400827d3:	ff65e5        	call8	40081e30 <phy_enter_critical>
400827d6:	ffab61        	l32r	a6, 40082684 <pll_correct_dcap+0xcc>
400827d9:	090c      	movi.n	a9, 0
400827db:	000682        	l8ui	a8, a6, 0
400827de:	1c0c      	movi.n	a12, 1
400827e0:	09bd      	mov.n	a11, a9
400827e2:	83bc80        	moveqz	a11, a12, a8
400827e5:	743030        	extui	a3, a3, 0, 8
400827e8:	742020        	extui	a2, a2, 0, 8
400827eb:	744040        	extui	a4, a4, 0, 8
400827ee:	745050        	extui	a5, a5, 0, 8
400827f1:	0b8d      	mov.n	a8, a11
400827f3:	0123b6        	bltui	a3, 2, 400827f8 <ram_chip_i2c_writeReg+0x28>
400827f6:	09cd      	mov.n	a12, a9
400827f8:	10c8c0        	and	a12, a8, a12
400827fb:	02ac16        	beqz	a12, 40082829 <ram_chip_i2c_writeReg+0x59>
400827fe:	0061a2        	s32i	a10, a1, 0
40082801:	ffefa5        	call8	400826fc <phy_dis_hw_set_freq>
40082804:	ff6091        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
40082807:	ffae82        	movi	a8, 0xfffffeff
4008280a:	0020c0        	memw
4008280d:	09b8      	l32i.n	a11, a9, 0
4008280f:	1c0c      	movi.n	a12, 1
40082811:	108b80        	and	a8, a11, a8
40082814:	0020c0        	memw
40082817:	006982        	s32i	a8, a9, 0
4008281a:	000662        	l8ui	a6, a6, 0
4008281d:	00a082        	movi	a8, 0
40082820:	93c860        	movnez	a12, a8, a6
40082823:	0021a2        	l32i	a10, a1, 0
40082826:	74c0c0        	extui	a12, a12, 0, 8
40082829:	ffe861        	l32r	a6, 400827cc <phy_force_wifi_chan+0x94>
4008282c:	f96a91        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008282f:	808360        	add	a8, a3, a6
40082832:	1188e0        	slli	a8, a8, 2
40082835:	0020c0        	memw
40082838:	08b8      	l32i.n	a11, a8, 0
4008283a:	f78b97        	bany	a11, a9, 40082835 <ram_chip_i2c_writeReg+0x65>
4008283d:	f90ed1        	l32r	a13, 40080c78 <_init_end+0x878>
40082840:	114480        	slli	a4, a4, 8
40082843:	2062d0        	or	a6, a2, a13
40082846:	206460        	or	a6, a4, a6
40082849:	11b500        	slli	a11, a5, 16
4008284c:	20b6b0        	or	a11, a6, a11
4008284f:	0020c0        	memw
40082852:	0068b2        	s32i	a11, a8, 0
40082855:	0020c0        	memw
40082858:	08b8      	l32i.n	a11, a8, 0
4008285a:	f78b97        	bany	a11, a9, 40082855 <ram_chip_i2c_writeReg+0x85>
4008285d:	006c16        	beqz	a12, 40082867 <ram_chip_i2c_writeReg+0x97>
40082860:	01a9      	s32i.n	a10, a1, 0
40082862:	ffd265        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082865:	01a8      	l32i.n	a10, a1, 0
40082867:	ff5d25        	call8	40081e38 <phy_exit_critical>
4008286a:	f01d      	retw.n
4008286c:	f878      	l32i.n	a7, a8, 60
4008286e:	3ffb      	addi.n	a3, a15, 15
40082870:	00e044        	lsi	f4, a0, 0
40082873:	00ff60        	lsi	f6, a15, 0
40082876:	fffc      	bnez.n	a15, 400828b9 <ram_chip_i2c_readReg+0x3d>
40082878:	03f000        	rsr.ccompare0	a0
	...

4008287c <ram_chip_i2c_readReg>:
4008287c:	006136        	entry	a1, 48
4008287f:	ff5b25        	call8	40081e30 <phy_enter_critical>
40082882:	ff8051        	l32r	a5, 40082684 <pll_correct_dcap+0xcc>
40082885:	00a092        	movi	a9, 0
40082888:	000582        	l8ui	a8, a5, 0
4008288b:	01a0c2        	movi	a12, 1
4008288e:	206990        	or	a6, a9, a9
40082891:	836c80        	moveqz	a6, a12, a8
40082894:	743030        	extui	a3, a3, 0, 8
40082897:	742020        	extui	a2, a2, 0, 8
4008289a:	744040        	extui	a4, a4, 0, 8
4008289d:	068d      	mov.n	a8, a6
4008289f:	0123b6        	bltui	a3, 2, 400828a4 <ram_chip_i2c_readReg+0x28>
400828a2:	09cd      	mov.n	a12, a9
400828a4:	10c8c0        	and	a12, a8, a12
400828a7:	029c16        	beqz	a12, 400828d4 <ram_chip_i2c_readReg+0x58>
400828aa:	0061a2        	s32i	a10, a1, 0
400828ad:	ffe4e5        	call8	400826fc <phy_dis_hw_set_freq>
400828b0:	ff3591        	l32r	a9, 40082584 <esp_reset_reason_get_hint+0x2c>
400828b3:	ffae82        	movi	a8, 0xfffffeff
400828b6:	0020c0        	memw
400828b9:	09b8      	l32i.n	a11, a9, 0
400828bb:	1c0c      	movi.n	a12, 1
400828bd:	108b80        	and	a8, a11, a8
400828c0:	0020c0        	memw
400828c3:	006982        	s32i	a8, a9, 0
400828c6:	000552        	l8ui	a5, a5, 0
400828c9:	080c      	movi.n	a8, 0
400828cb:	93c850        	movnez	a12, a8, a5
400828ce:	0021a2        	l32i	a10, a1, 0
400828d1:	74c0c0        	extui	a12, a12, 0, 8
400828d4:	9ec292        	addi	a9, a2, -98
400828d7:	749090        	extui	a9, a9, 0, 8
400828da:	b50c      	movi.n	a5, 11
400828dc:	f87c      	movi.n	a8, -1
400828de:	0a3597        	bltu	a5, a9, 400828ec <ram_chip_i2c_readReg+0x70>
400828e1:	ffe251        	l32r	a5, 4008286c <ram_chip_i2c_writeReg+0x9c>
400828e4:	a09950        	addx4	a9, a9, a5
400828e7:	0958      	l32i.n	a5, a9, 0
400828e9:	308850        	xor	a8, a8, a5
400828ec:	ffe151        	l32r	a5, 40082870 <ram_chip_i2c_writeReg+0xa0>
400828ef:	ffe191        	l32r	a9, 40082874 <ram_chip_i2c_writeReg+0xa4>
400828f2:	0020c0        	memw
400828f5:	05b8      	l32i.n	a11, a5, 0
400828f7:	10bb90        	and	a11, a11, a9
400828fa:	ffdf91        	l32r	a9, 40082878 <ram_chip_i2c_writeReg+0xa8>
400828fd:	209b90        	or	a9, a11, a9
40082900:	0020c0        	memw
40082903:	0599      	s32i.n	a9, a5, 0
40082905:	0020c0        	memw
40082908:	05b8      	l32i.n	a11, a5, 0
4008290a:	f93291        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008290d:	10bb80        	and	a11, a11, a8
40082910:	ffaf81        	l32r	a8, 400827cc <phy_force_wifi_chan+0x94>
40082913:	0020c0        	memw
40082916:	05b9      	s32i.n	a11, a5, 0
40082918:	838a      	add.n	a8, a3, a8
4008291a:	1188e0        	slli	a8, a8, 2
4008291d:	0020c0        	memw
40082920:	08b8      	l32i.n	a11, a8, 0
40082922:	f78b97        	bany	a11, a9, 4008291d <ram_chip_i2c_readReg+0xa1>
40082925:	114480        	slli	a4, a4, 8
40082928:	202420        	or	a2, a4, a2
4008292b:	0020c0        	memw
4008292e:	006822        	s32i	a2, a8, 0
40082931:	0020c0        	memw
40082934:	08b8      	l32i.n	a11, a8, 0
40082936:	f78b97        	bany	a11, a9, 40082931 <ram_chip_i2c_readReg+0xb5>
40082939:	0020c0        	memw
4008293c:	0828      	l32i.n	a2, a8, 0
4008293e:	752020        	extui	a2, a2, 16, 8
40082941:	006c16        	beqz	a12, 4008294b <ram_chip_i2c_readReg+0xcf>
40082944:	01a9      	s32i.n	a10, a1, 0
40082946:	ffc425        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082949:	01a8      	l32i.n	a10, a1, 0
4008294b:	ff4ee5        	call8	40081e38 <phy_exit_critical>
4008294e:	f01d      	retw.n

40082950 <phy_en_hw_set_freq>:
40082950:	004136        	entry	a1, 32
40082953:	ff4c81        	l32r	a8, 40082684 <pll_correct_dcap+0xcc>
40082956:	000882        	l8ui	a8, a8, 0
40082959:	18cc      	bnez.n	a8, 4008295e <phy_en_hw_set_freq+0xe>
4008295b:	ffc2e5        	call8	40082588 <phy_en_hw_set_freq$part$0>
4008295e:	f01d      	retw.n
40082960:	fbec74        	lsi	f7, a12, 0x3ec
40082963:	3f          	.byte 0x3f
40082964:	d008      	l32i.n	a0, a0, 52
40082966:	586001        	l32r	a0, 40058ae8 <__sfvwrite_r+0x1ac>
40082969:	3ffc13        	lsi	f1, a12, 252

4008296c <wifi_track_pll_cap>:
4008296c:	006136        	entry	a1, 48
4008296f:	ff4c25        	call8	40081e30 <phy_enter_critical>
40082972:	fffb81        	l32r	a8, 40082960 <phy_en_hw_set_freq+0x10>
40082975:	00a092        	movi	a9, 0
40082978:	000882        	l8ui	a8, a8, 0
4008297b:	004192        	s8i	a9, a1, 0
4008297e:	202aa0        	or	a2, a10, a10
40082981:	069816        	beqz	a8, 400829ee <wifi_track_pll_cap+0x82>
40082984:	fff881        	l32r	a8, 40082964 <phy_en_hw_set_freq+0x14>
40082987:	0020c0        	memw
4008298a:	002882        	l32i	a8, a8, 0
4008298d:	5df8d7        	bbsi	a8, 29, 400829ee <wifi_track_pll_cap+0x82>
40082990:	ff3b81        	l32r	a8, 4008267c <pll_correct_dcap+0xc4>
40082993:	000882        	l8ui	a8, a8, 0
40082996:	054856        	bnez	a8, 400829ee <wifi_track_pll_cap+0x82>
40082999:	fff331        	l32r	a3, 40082968 <phy_en_hw_set_freq+0x18>
4008299c:	d90c      	movi.n	a9, 13
4008299e:	510382        	l8ui	a8, a3, 81
400829a1:	435c      	movi.n	a3, 84
400829a3:	238800        	sext	a8, a8, 7
400829a6:	072987        	blt	a9, a8, 400829b1 <wifi_track_pll_cap+0x45>
400829a9:	a08880        	addx4	a8, a8, a8
400829ac:	a87b      	addi.n	a10, a8, 7
400829ae:	7430a0        	extui	a3, a10, 0, 8
400829b1:	ffd4a5        	call8	400826fc <phy_dis_hw_set_freq>
400829b4:	1c0c      	movi.n	a12, 1
400829b6:	01bd      	mov.n	a11, a1
400829b8:	03ad      	mov.n	a10, a3
400829ba:	ffbfe5        	call8	400825b8 <pll_correct_dcap>
400829bd:	74a0a0        	extui	a10, a10, 0, 8
400829c0:	5a9c      	beqz.n	a10, 400829d9 <wifi_track_pll_cap+0x6d>
400829c2:	0001d2        	l8ui	a13, a1, 0
400829c5:	0d9c      	beqz.n	a13, 400829d9 <wifi_track_pll_cap+0x6d>
400829c7:	fef631        	l32r	a3, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400829ca:	1c0c      	movi.n	a12, 1
400829cc:	0338      	l32i.n	a3, a3, 0
400829ce:	0cbd      	mov.n	a11, a12
400829d0:	282332        	l32i	a3, a3, 160
400829d3:	62a0a2        	movi	a10, 98
400829d6:	0003e0        	callx8	a3
400829d9:	ff2731        	l32r	a3, 40082678 <pll_correct_dcap+0xc0>
400829dc:	000332        	l8ui	a3, a3, 0
400829df:	00b356        	bnez	a3, 400829ee <wifi_track_pll_cap+0x82>
400829e2:	ff2831        	l32r	a3, 40082684 <pll_correct_dcap+0xcc>
400829e5:	000332        	l8ui	a3, a3, 0
400829e8:	002356        	bnez	a3, 400829ee <wifi_track_pll_cap+0x82>
400829eb:	ffb9e5        	call8	40082588 <phy_en_hw_set_freq$part$0>
400829ee:	20a220        	or	a10, a2, a2
400829f1:	ff4465        	call8	40081e38 <phy_exit_critical>
400829f4:	f01d      	retw.n
400829f6:	d00000        	subx2	a0, a0, a0
400829f9:	600050        	neg	a0, a5
400829fc:	0050f0        	lsi	f15, a0, 0
400829ff:	60          	.byte 0x60

40082a00 <phy_get_fetx_delay>:
40082a00:	004136        	entry	a1, 32
40082a03:	fffd21        	l32r	a2, 400829f8 <wifi_track_pll_cap+0x8c>
40082a06:	0020c0        	memw
40082a09:	0288      	l32i.n	a8, a2, 0
40082a0b:	fffc21        	l32r	a2, 400829fc <wifi_track_pll_cap+0x90>
40082a0e:	0020c0        	memw
40082a11:	0298      	l32i.n	a9, a2, 0
40082a13:	00a022        	movi	a2, 0
40082a16:	02f8e7        	bbsi	a8, 30, 40082a1c <phy_get_fetx_delay+0x1c>
40082a19:	842090        	extui	a2, a9, 0, 9
40082a1c:	f01d      	retw.n
40082a1e:	4c0000        	lsi	f0, a0, 0x130
40082a21:	0088      	l32i.n	a8, a0, 0
40082a23:	884460        	lsi	f6, a4, 0x220
40082a26:	b16000        	sra	a6, a0
40082a29:	fc09      	s32i.n	a0, a12, 60
40082a2b:	3f          	.byte 0x3f
40082a2c:	fc09b0        	lsi	f11, a9, 0x3f0
40082a2f:	3f          	.byte 0x3f
40082a30:	ae          	.byte 0xae
40082a31:	fc09      	s32i.n	a0, a12, 60
40082a33:	3f          	.byte 0x3f
40082a34:	af          	.byte 0xaf
40082a35:	fc09      	s32i.n	a0, a12, 60
40082a37:	3f          	.byte 0x3f
40082a38:	8e39      	s32i.n	a3, a14, 32
40082a3a:	e3          	.byte 0xe3
40082a3b:	38          	.byte 0x38

40082a3c <btpwr_tsens_track>:
40082a3c:	004136        	entry	a1, 32
40082a3f:	fff821        	l32r	a2, 40082a20 <phy_get_fetx_delay+0x20>
40082a42:	f8e681        	l32r	a8, 40080ddc <_init_end+0x9dc>
40082a45:	0020c0        	memw
40082a48:	0298      	l32i.n	a9, a2, 0
40082a4a:	01a0a2        	movi	a10, 1
40082a4d:	208980        	or	a8, a9, a8
40082a50:	0020c0        	memw
40082a53:	006282        	s32i	a8, a2, 0
40082a56:	f69381        	l32r	a8, 400804a4 <_init_end+0xa4>
40082a59:	0008e0        	callx8	a8
40082a5c:	fff281        	l32r	a8, 40082a24 <phy_get_fetx_delay+0x24>
40082a5f:	fff2b1        	l32r	a11, 40082a28 <phy_get_fetx_delay+0x28>
40082a62:	0020c0        	memw
40082a65:	08d8      	l32i.n	a13, a8, 0
40082a67:	0020c0        	memw
40082a6a:	0298      	l32i.n	a9, a2, 0
40082a6c:	f87a81        	l32r	a8, 40080c54 <_init_end+0x854>
40082a6f:	75d6d0        	extui	a13, a13, 22, 8
40082a72:	108980        	and	a8, a9, a8
40082a75:	0020c0        	memw
40082a78:	0289      	s32i.n	a8, a2, 0
40082a7a:	0020c0        	memw
40082a7d:	0298      	l32i.n	a9, a2, 0
40082a7f:	f88b81        	l32r	a8, 40080cac <_init_end+0x8ac>
40082a82:	ffeaa1        	l32r	a10, 40082a2c <phy_get_fetx_delay+0x2c>
40082a85:	108980        	and	a8, a9, a8
40082a88:	0020c0        	memw
40082a8b:	0289      	s32i.n	a8, a2, 0
40082a8d:	0020c0        	memw
40082a90:	0298      	l32i.n	a9, a2, 0
40082a92:	f87981        	l32r	a8, 40080c78 <_init_end+0x878>
40082a95:	208980        	or	a8, a9, a8
40082a98:	0020c0        	memw
40082a9b:	0289      	s32i.n	a8, a2, 0
40082a9d:	000b82        	l8ui	a8, a11, 0
40082aa0:	7490d0        	extui	a9, a13, 0, 8
40082aa3:	588c      	beqz.n	a8, 40082aac <btpwr_tsens_track+0x70>
40082aa5:	000af2        	l8ui	a15, a10, 0
40082aa8:	000206        	j	40082ab4 <btpwr_tsens_track+0x78>
40082aab:	4b9200        	olt.s	b9, f2, f0
40082aae:	4a9200        	madd.s	f9, f2, f0
40082ab1:	09fd00        	l32e	a0, a13, -4
40082ab4:	ffdf21        	l32r	a2, 40082a30 <phy_get_fetx_delay+0x30>
40082ab7:	ffdfe1        	l32r	a14, 40082a34 <phy_get_fetx_delay+0x34>
40082aba:	1c0c      	movi.n	a12, 1
40082abc:	000222        	l8ui	a2, a2, 0
40082abf:	f6c982        	addi	a8, a9, -10
40082ac2:	004ec2        	s8i	a12, a14, 0
40082ac5:	748080        	extui	a8, a8, 0, 8
40082ac8:	eba0c2        	movi	a12, 235
40082acb:	232200        	sext	a2, a2, 7
40082ace:	07bc87        	bgeu	a12, a8, 40082ad9 <btpwr_tsens_track+0x9d>
40082ad1:	080c      	movi.n	a8, 0
40082ad3:	004e82        	s8i	a8, a14, 0
40082ad6:	000a86        	j	40082b04 <btpwr_tsens_track+0xc8>
40082ad9:	8d5b      	addi.n	a8, a13, 5
40082adb:	c088f0        	sub	a8, a8, a15
40082ade:	f48080        	extui	a8, a8, 0, 16
40082ae1:	ac0c      	movi.n	a12, 10
40082ae3:	1dbc87        	bgeu	a12, a8, 40082b04 <btpwr_tsens_track+0xc8>
40082ae6:	000b82        	l8ui	a8, a11, 0
40082ae9:	004a92        	s8i	a9, a10, 0
40082aec:	c028d0        	sub	a2, a8, a13
40082aef:	ffd281        	l32r	a8, 40082a38 <phy_get_fetx_delay+0x38>
40082af2:	1122e0        	slli	a2, a2, 2
40082af5:	b28280        	mulsh	a8, a2, a8
40082af8:	312f20        	srai	a2, a2, 31
40082afb:	218280        	srai	a8, a8, 2
40082afe:	c02820        	sub	a2, a8, a2
40082b01:	232280        	sext	a2, a2, 15
40082b04:	886c      	movi.n	a8, -24
40082b06:	532280        	max	a2, a2, a8
40082b09:	881c      	movi.n	a8, 24
40082b0b:	432280        	min	a2, a2, a8
40082b0e:	f01d      	retw.n
40082b10:	09a9      	s32i.n	a10, a9, 0
40082b12:	3ffc      	bnez.n	a15, 40082b49 <btpwr_pll_track+0x29>
40082b14:	09a8      	l32i.n	a10, a9, 0
40082b16:	3ffc      	bnez.n	a15, 40082b4d <btpwr_pll_track+0x2d>
40082b18:	09ac      	beqz.n	a9, 40082b3c <btpwr_pll_track+0x1c>
40082b1a:	3ffc      	bnez.n	a15, 40082b51 <btpwr_pll_track+0x31>
40082b1c:	09aa      	add.n	a0, a9, a10
40082b1e:	3ffc      	bnez.n	a15, 40082b55 <btpwr_pll_track+0x35>

40082b20 <btpwr_pll_track>:
40082b20:	004136        	entry	a1, 32
40082b23:	fffbc1        	l32r	a12, 40082b10 <btpwr_tsens_track+0xd4>
40082b26:	742020        	extui	a2, a2, 0, 8
40082b29:	000c82        	l8ui	a8, a12, 0
40082b2c:	089827        	bne	a8, a2, 40082b38 <btpwr_pll_track+0x18>
40082b2f:	fff991        	l32r	a9, 40082b14 <btpwr_tsens_track+0xd8>
40082b32:	000982        	l8ui	a8, a9, 0
40082b35:	001086        	j	40082b7b <btpwr_pll_track+0x5b>
40082b38:	fe93b1        	l32r	a11, 40082584 <esp_reset_reason_get_hint+0x2c>
40082b3b:	00af92        	movi	a9, 0xffffff00
40082b3e:	0020c0        	memw
40082b41:	0ba8      	l32i.n	a10, a11, 0
40082b43:	908220        	addx2	a8, a2, a2
40082b46:	10aa90        	and	a10, a10, a9
40082b49:	748080        	extui	a8, a8, 0, 8
40082b4c:	208a80        	or	a8, a10, a8
40082b4f:	0020c0        	memw
40082b52:	0b89      	s32i.n	a8, a11, 0
40082b54:	fff091        	l32r	a9, 40082b14 <btpwr_tsens_track+0xd8>
40082b57:	fe9581        	l32r	a8, 400825ac <phy_en_hw_set_freq$part$0+0x24>
40082b5a:	ffefd1        	l32r	a13, 40082b18 <btpwr_tsens_track+0xdc>
40082b5d:	0020c0        	memw
40082b60:	08a8      	l32i.n	a10, a8, 0
40082b62:	000982        	l8ui	a8, a9, 0
40082b65:	001db2        	l16ui	a11, a13, 0
40082b68:	31a8a0        	srai	a10, a10, 24
40082b6b:	881b      	addi.n	a8, a8, 1
40082b6d:	aaba      	add.n	a10, a10, a11
40082b6f:	748080        	extui	a8, a8, 0, 8
40082b72:	005da2        	s16i	a10, a13, 0
40082b75:	004c22        	s8i	a2, a12, 0
40082b78:	004982        	s8i	a8, a9, 0
40082b7b:	ffad21        	l32r	a2, 40082a30 <phy_get_fetx_delay+0x30>
40082b7e:	fa0c      	movi.n	a10, 15
40082b80:	000222        	l8ui	a2, a2, 0
40082b83:	51ba87        	bgeu	a10, a8, 40082bd8 <btpwr_pll_track+0xb8>
40082b86:	ffe4b1        	l32r	a11, 40082b18 <btpwr_tsens_track+0xdc>
40082b89:	ffe4c1        	l32r	a12, 40082b1c <btpwr_tsens_track+0xe0>
40082b8c:	009b82        	l16si	a8, a11, 0
40082b8f:	000ca2        	l8ui	a10, a12, 0
40082b92:	888b      	addi.n	a8, a8, 8
40082b94:	218480        	srai	a8, a8, 4
40082b97:	23d880        	sext	a13, a8, 15
40082b9a:	23aa00        	sext	a10, a10, 7
40082b9d:	2f1ad7        	beq	a10, a13, 40082bd0 <btpwr_pll_track+0xb0>
40082ba0:	0a2da6        	blti	a13, 2, 40082bae <btpwr_pll_track+0x8e>
40082ba3:	1128d0        	slli	a2, a8, 3
40082ba6:	742020        	extui	a2, a2, 0, 8
40082ba9:	0003c6        	j	40082bbc <btpwr_pll_track+0x9c>
40082bac:	0c0000        	lsi	f0, a0, 48
40082baf:	0de602        	s32c1i	a0, a6, 52
40082bb2:	8019      	s32i.n	a1, a0, 32
40082bb4:	9028      	l32i.n	a2, a0, 36
40082bb6:	1122f0        	slli	a2, a2, 1
40082bb9:	742020        	extui	a2, a2, 0, 8
40082bbc:	23a200        	sext	a10, a2, 7
40082bbf:	821c      	movi.n	a2, 24
40082bc1:	0822a7        	blt	a2, a10, 40082bcd <btpwr_pll_track+0xad>
40082bc4:	eeaf22        	movi	a2, -18
40082bc7:	532a20        	max	a2, a10, a2
40082bca:	742020        	extui	a2, a2, 0, 8
40082bcd:	004c82        	s8i	a8, a12, 0
40082bd0:	080c      	movi.n	a8, 0
40082bd2:	005b82        	s16i	a8, a11, 0
40082bd5:	004982        	s8i	a8, a9, 0
40082bd8:	f01d      	retw.n
	...

40082bdc <bt_track_tx_power>:
40082bdc:	006136        	entry	a1, 48
40082bdf:	ffe5e5        	call8	40082a3c <btpwr_tsens_track>
40082be2:	743030        	extui	a3, a3, 0, 8
40082be5:	742020        	extui	a2, a2, 0, 8
40082be8:	74a0a0        	extui	a10, a10, 0, 8
40082beb:	139c      	beqz.n	a3, 40082c00 <bt_track_tx_power+0x24>
40082bed:	ff9181        	l32r	a8, 40082a34 <phy_get_fetx_delay+0x34>
40082bf0:	000882        	l8ui	a8, a8, 0
40082bf3:	98cc      	bnez.n	a8, 40082c00 <bt_track_tx_power+0x24>
40082bf5:	23b300        	sext	a11, a3, 7
40082bf8:	02ad      	mov.n	a10, a2
40082bfa:	fff265        	call8	40082b20 <btpwr_pll_track>
40082bfd:	74a0a0        	extui	a10, a10, 0, 8
40082c00:	ff8c81        	l32r	a8, 40082a30 <phy_get_fetx_delay+0x30>
40082c03:	74d0a0        	extui	a13, a10, 0, 8
40082c06:	000832        	l8ui	a3, a8, 0
40082c09:	3b13d7        	beq	a3, a13, 40082c48 <bt_track_tx_power+0x6c>
40082c0c:	ff57b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
40082c0f:	0048a2        	s8i	a10, a8, 0
40082c12:	0e4c      	movi.n	a14, 64
40082c14:	01ad      	mov.n	a10, a1
40082c16:	0f0c      	movi.n	a15, 0
40082c18:	890c      	movi.n	a9, 8
40082c1a:	258976        	loop	a9, 40082c43 <bt_track_tx_power+0x67>
40082c1d:	810b82        	l8ui	a8, a11, 129
40082c20:	8d8a      	add.n	a8, a13, a8
40082c22:	748080        	extui	a8, a8, 0, 8
40082c25:	23c800        	sext	a12, a8, 7
40082c28:	005cd6        	bgez	a12, 40082c31 <bt_track_tx_power+0x55>
40082c2b:	004af2        	s8i	a15, a10, 0
40082c2e:	000346        	j	40082c3f <bt_track_tx_power+0x63>
40082c31:	072ec7        	blt	a14, a12, 40082c3c <bt_track_tx_power+0x60>
40082c34:	004a82        	s8i	a8, a10, 0
40082c37:	000106        	j	40082c3f <bt_track_tx_power+0x63>
40082c3a:	e20000        	remu	a0, a0, a0
40082c3d:	004a      	add.n	a0, a0, a4
40082c3f:	bb1b      	addi.n	a11, a11, 1
40082c41:	aa1b      	addi.n	a10, a10, 1
40082c43:	01ad      	mov.n	a10, a1
40082c45:	001265        	call8	40082d6c <wr_bt_tx_atten>
40082c48:	f01d      	retw.n
40082c4a:	750000        	extui	a0, a0, 16, 8
40082c4d:	fbec      	bnez.n	a11, 40082c80 <bt_track_pll_cap+0x2c>
40082c4f:	3f          	.byte 0x3f
40082c50:	fc09b2        	l8ui	a11, a9, 252
40082c53:	3f          	.byte 0x3f

40082c54 <bt_track_pll_cap>:
40082c54:	006136        	entry	a1, 48
40082c57:	ff1da5        	call8	40081e30 <phy_enter_critical>
40082c5a:	fffc81        	l32r	a8, 40082c4c <bt_track_tx_power+0x70>
40082c5d:	0a2d      	mov.n	a2, a10
40082c5f:	000882        	l8ui	a8, a8, 0
40082c62:	051816        	beqz	a8, 40082cb7 <bt_track_pll_cap+0x63>
40082c65:	ff3f81        	l32r	a8, 40082964 <phy_en_hw_set_freq+0x14>
40082c68:	0020c0        	memw
40082c6b:	0888      	l32i.n	a8, a8, 0
40082c6d:	4678d7        	bbci	a8, 29, 40082cb7 <bt_track_pll_cap+0x63>
40082c70:	fe8281        	l32r	a8, 40082678 <pll_correct_dcap+0xc0>
40082c73:	000882        	l8ui	a8, a8, 0
40082c76:	d8fc      	bnez.n	a8, 40082cb7 <bt_track_pll_cap+0x63>
40082c78:	fe8131        	l32r	a3, 4008267c <pll_correct_dcap+0xc4>
40082c7b:	000332        	l8ui	a3, a3, 0
40082c7e:	53fc      	bnez.n	a3, 40082cb7 <bt_track_pll_cap+0x63>
40082c80:	fe8041        	l32r	a4, 40082680 <pll_correct_dcap+0xc8>
40082c83:	0020c0        	memw
40082c86:	002442        	l32i	a4, a4, 0
40082c89:	ffa725        	call8	400826fc <phy_dis_hw_set_freq>
40082c8c:	654840        	extui	a4, a4, 24, 7
40082c8f:	03cd      	mov.n	a12, a3
40082c91:	01bd      	mov.n	a11, a1
40082c93:	04ad      	mov.n	a10, a4
40082c95:	ff9225        	call8	400825b8 <pll_correct_dcap>
40082c98:	ffee31        	l32r	a3, 40082c50 <bt_track_tx_power+0x74>
40082c9b:	74a0a0        	extui	a10, a10, 0, 8
40082c9e:	000332        	l8ui	a3, a3, 0
40082ca1:	738c      	beqz.n	a3, 40082cac <bt_track_pll_cap+0x58>
40082ca3:	23ba00        	sext	a11, a10, 7
40082ca6:	20a440        	or	a10, a4, a4
40082ca9:	fff325        	call8	40082bdc <bt_track_tx_power>
40082cac:	fe7631        	l32r	a3, 40082684 <pll_correct_dcap+0xcc>
40082caf:	000332        	l8ui	a3, a3, 0
40082cb2:	13cc      	bnez.n	a3, 40082cb7 <bt_track_pll_cap+0x63>
40082cb4:	ff8d25        	call8	40082588 <phy_en_hw_set_freq$part$0>
40082cb7:	02ad      	mov.n	a10, a2
40082cb9:	ff17e5        	call8	40081e38 <phy_exit_critical>
40082cbc:	f01d      	retw.n
40082cbe:	300000        	xor	a0, a0, a0
40082cc1:	6001c0        	abs	a0, a12

40082cc4 <ram_disable_agc>:
40082cc4:	004136        	entry	a1, 32
40082cc7:	fffe91        	l32r	a9, 40082cc0 <bt_track_pll_cap+0x6c>
40082cca:	00a182        	movi	a8, 0x100
40082ccd:	0020c0        	memw
40082cd0:	09a8      	l32i.n	a10, a9, 0
40082cd2:	208a80        	or	a8, a10, a8
40082cd5:	0020c0        	memw
40082cd8:	0989      	s32i.n	a8, a9, 0
40082cda:	f01d      	retw.n

40082cdc <ram_enable_agc>:
40082cdc:	004136        	entry	a1, 32
40082cdf:	fff891        	l32r	a9, 40082cc0 <bt_track_pll_cap+0x6c>
40082ce2:	ffae82        	movi	a8, 0xfffffeff
40082ce5:	0020c0        	memw
40082ce8:	09a8      	l32i.n	a10, a9, 0
40082cea:	108a80        	and	a8, a10, a8
40082ced:	0020c0        	memw
40082cf0:	0989      	s32i.n	a8, a9, 0
40082cf2:	f01d      	retw.n
40082cf4:	5038      	l32i.n	a3, a0, 20
40082cf6:	346000        	extui	a6, a0, 0, 4
40082cf9:	600050        	neg	a0, a5
40082cfc:	fc0000        	lsi	f0, a0, 0x3f0
40082cff:	ff          	.byte 0xff
40082d00:	0100f0        	slli	a0, a0, 17
40082d03:	000f00        	lsi	f0, a15, 0
40082d06:	ff0001        	l32r	a0, 40082908 <ram_chip_i2c_readReg+0x8c>
40082d09:	ff          	.byte 0xff
40082d0a:	fffc      	bnez.n	a15, 40082d4d <ram_write_gain_mem+0x41>

40082d0c <ram_write_gain_mem>:
40082d0c:	004136        	entry	a1, 32
40082d0f:	fff9c1        	l32r	a12, 40082cf4 <ram_enable_agc+0x18>
40082d12:	fff981        	l32r	a8, 40082cf8 <ram_enable_agc+0x1c>
40082d15:	0020c0        	memw
40082d18:	0c39      	s32i.n	a3, a12, 0
40082d1a:	0020c0        	memw
40082d1d:	08a8      	l32i.n	a10, a8, 0
40082d1f:	fff7b1        	l32r	a11, 40082cfc <ram_enable_agc+0x20>
40082d22:	744040        	extui	a4, a4, 0, 8
40082d25:	109ab0        	and	a9, a10, a11
40082d28:	fff6a1        	l32r	a10, 40082d00 <ram_enable_agc+0x24>
40082d2b:	114480        	slli	a4, a4, 8
40082d2e:	a4aa      	add.n	a10, a4, a10
40082d30:	20a9a0        	or	a10, a9, a10
40082d33:	0020c0        	memw
40082d36:	08a9      	s32i.n	a10, a8, 0
40082d38:	0020c0        	memw
40082d3b:	0c29      	s32i.n	a2, a12, 0
40082d3d:	0020c0        	memw
40082d40:	0898      	l32i.n	a9, a8, 0
40082d42:	fff0a1        	l32r	a10, 40082d04 <ram_enable_agc+0x28>
40082d45:	10b9b0        	and	a11, a9, a11
40082d48:	44aa      	add.n	a4, a4, a10
40082d4a:	209b40        	or	a9, a11, a4
40082d4d:	0020c0        	memw
40082d50:	0899      	s32i.n	a9, a8, 0
40082d52:	0020c0        	memw
40082d55:	0898      	l32i.n	a9, a8, 0
40082d57:	ffec41        	l32r	a4, 40082d08 <ram_enable_agc+0x2c>
40082d5a:	104940        	and	a4, a9, a4
40082d5d:	0020c0        	memw
40082d60:	0849      	s32i.n	a4, a8, 0
40082d62:	f01d      	retw.n
40082d64:	600c      	movi.n	a0, 6
40082d66:	106000        	and	a6, a0, a0
40082d69:	600060        	neg	a0, a6

40082d6c <wr_bt_tx_atten>:
40082d6c:	006136        	entry	a1, 48
40082d6f:	20a110        	or	a10, a1, a1
40082d72:	08a092        	movi	a9, 8
40082d75:	0c8976        	loop	a9, 40082d85 <wr_bt_tx_atten+0x19>
40082d78:	000282        	l8ui	a8, a2, 0
40082d7b:	221b      	addi.n	a2, a2, 1
40082d7d:	608080        	neg	a8, a8
40082d80:	004a82        	s8i	a8, a10, 0
40082d83:	aa1b      	addi.n	a10, a10, 1
40082d85:	0188      	l32i.n	a8, a1, 0
40082d87:	fff721        	l32r	a2, 40082d64 <ram_write_gain_mem+0x58>
40082d8a:	0020c0        	memw
40082d8d:	0289      	s32i.n	a8, a2, 0
40082d8f:	1188      	l32i.n	a8, a1, 4
40082d91:	fff521        	l32r	a2, 40082d68 <ram_write_gain_mem+0x5c>
40082d94:	0020c0        	memw
40082d97:	0289      	s32i.n	a8, a2, 0
40082d99:	f01d      	retw.n
40082d9b:	600000        	neg	a0, a0
40082d9e:	ff6000        	f64cmph	a6, a0, a0, 15
40082da1:	ff          	.byte 0xff
40082da2:	00fc03        	lsi	f0, a12, 0
40082da5:	01b800        	slli	a11, a8, 32

40082da8 <set_tx_gain_table>:
40082da8:	006136        	entry	a1, 48
40082dab:	fffc61        	l32r	a6, 40082d9c <wr_bt_tx_atten+0x30>
40082dae:	fffc41        	l32r	a4, 40082da0 <wr_bt_tx_atten+0x34>
40082db1:	0020c0        	memw
40082db4:	0658      	l32i.n	a5, a6, 0
40082db6:	f43030        	extui	a3, a3, 0, 16
40082db9:	105540        	and	a5, a5, a4
40082dbc:	fffa41        	l32r	a4, 40082da4 <wr_bt_tx_atten+0x38>
40082dbf:	03ad      	mov.n	a10, a3
40082dc1:	205540        	or	a5, a5, a4
40082dc4:	fdf741        	l32r	a4, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40082dc7:	0020c0        	memw
40082dca:	0659      	s32i.n	a5, a6, 0
40082dcc:	0458      	l32i.n	a5, a4, 0
40082dce:	f42020        	extui	a2, a2, 0, 16
40082dd1:	432552        	l32i	a5, a5, 0x10c
40082dd4:	016d      	mov.n	a6, a1
40082dd6:	0005e0        	callx8	a5
40082dd9:	f480a0        	extui	a8, a10, 0, 16
40082ddc:	1188d0        	slli	a8, a8, 3
40082ddf:	fee2b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
40082de2:	88cb      	addi.n	a8, a8, 12
40082de4:	8b8a      	add.n	a8, a11, a8
40082de6:	04a052        	movi	a5, 4
40082de9:	098576        	loop	a5, 40082df6 <set_tx_gain_table+0x4e>
40082dec:	001892        	l16ui	a9, a8, 0
40082def:	882b      	addi.n	a8, a8, 2
40082df1:	005692        	s16i	a9, a6, 0
40082df4:	662b      	addi.n	a6, a6, 2
40082df6:	021162        	l16ui	a6, a1, 4
40082df9:	031182        	l16ui	a8, a1, 6
40082dfc:	01c660        	slli	a12, a6, 26
40082dff:	0188f0        	slli	a8, a8, 17
40082e02:	001192        	l16ui	a9, a1, 0
40082e05:	011152        	l16ui	a5, a1, 2
40082e08:	2088c0        	or	a8, a8, a12
40082e0b:	112260        	slli	a2, a2, 10
40082e0e:	202820        	or	a2, a8, a2
40082e11:	119940        	slli	a9, a9, 12
40082e14:	748630        	extui	a8, a3, 6, 8
40082e17:	1155d0        	slli	a5, a5, 3
40082e1a:	543030        	extui	a3, a3, 0, 6
40082e1d:	202280        	or	a2, a2, a8
40082e20:	1133d0        	slli	a3, a3, 3
40082e23:	205950        	or	a5, a9, a5
40082e26:	416660        	srli	a6, a6, 6
40082e29:	203230        	or	a3, a2, a3
40082e2c:	206560        	or	a6, a5, a6
40082e2f:	01a022        	movi	a2, 1
40082e32:	024af6        	bgeui	a10, 4, 40082e38 <set_tx_gain_table+0x90>
40082e35:	00a022        	movi	a2, 0
40082e38:	18c222        	addi	a2, a2, 24
40082e3b:	90b2b0        	addx2	a11, a2, a11
40082e3e:	021b52        	l16ui	a5, a11, 4
40082e41:	6ea022        	movi	a2, 110
40082e44:	0155b0        	slli	a5, a5, 21
40082e47:	205650        	or	a5, a6, a5
40082e4a:	76a062        	movi	a6, 118
40082e4d:	0488      	l32i.n	a8, a4, 0
40082e4f:	02cd      	mov.n	a12, a2
40082e51:	d888      	l32i.n	a8, a8, 52
40082e53:	221b      	addi.n	a2, a2, 1
40082e55:	03bd      	mov.n	a11, a3
40082e57:	05ad      	mov.n	a10, a5
40082e59:	0008e0        	callx8	a8
40082e5c:	ed9267        	bne	a2, a6, 40082e4d <set_tx_gain_table+0xa5>
40082e5f:	f01d      	retw.n
40082e61:	000000        	ill
40082e64:	fc09c4        	lsi	f12, a9, 0x3f0
40082e67:	3f          	.byte 0x3f
40082e68:	fbec76        	lsi	f7, a12, 0x3ec
40082e6b:	3f          	.byte 0x3f
40082e6c:	bf          	.byte 0xbf
40082e6d:	fc09      	s32i.n	a0, a12, 60
40082e6f:	3f          	.byte 0x3f
40082e70:	141c      	movi.n	a4, 17
40082e72:	3ffc      	bnez.n	a15, 40082ea9 <set_most_pwr_reg+0x31>
40082e74:	ec78      	l32i.n	a7, a12, 56
40082e76:	3ffb      	addi.n	a3, a15, 15

40082e78 <set_most_pwr_reg>:
40082e78:	006136        	entry	a1, 48
40082e7b:	fffa81        	l32r	a8, 40082e64 <set_tx_gain_table+0xbc>
40082e7e:	20a110        	or	a10, a1, a1
40082e81:	0008b2        	l8ui	a11, a8, 0
40082e84:	23bb00        	sext	a11, a11, 7
40082e87:	003ba5        	call8	40083240 <get_phy_target_power>
40082e8a:	fff781        	l32r	a8, 40082e68 <set_tx_gain_table+0xc0>
40082e8d:	050192        	l8ui	a9, a1, 5
40082e90:	000882        	l8ui	a8, a8, 0
40082e93:	23a800        	sext	a10, a8, 7
40082e96:	022a97        	blt	a10, a9, 40082e9c <set_most_pwr_reg+0x24>
40082e99:	0029c6        	j	40082f44 <set_most_pwr_reg+0xcc>
40082e9c:	fff421        	l32r	a2, 40082e6c <set_tx_gain_table+0xc4>
40082e9f:	c08980        	sub	a8, a9, a8
40082ea2:	01a0a2        	movi	a10, 1
40082ea5:	0042a2        	s8i	a10, a2, 0
40082ea8:	748080        	extui	a8, a8, 0, 8
40082eab:	08a022        	movi	a2, 8
40082eae:	0e3287        	bltu	a2, a8, 40082ec0 <set_most_pwr_reg+0x48>
40082eb1:	ffef21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082eb4:	f8c992        	addi	a9, a9, -8
40082eb7:	004292        	s8i	a9, a2, 0
40082eba:	e20c      	movi.n	a2, 14
40082ebc:	004446        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ebf:	221c00        	orb	b1, b12, b0
40082ec2:	0e3287        	bltu	a2, a8, 40082ed4 <set_most_pwr_reg+0x5c>
40082ec5:	ffea21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082ec8:	eec992        	addi	a9, a9, -18
40082ecb:	004292        	s8i	a9, a2, 0
40082ece:	a20c      	movi.n	a2, 10
40082ed0:	003f46        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ed3:	821c00        	mull	a1, a12, a0
40082ed6:	0d3287        	bltu	a2, a8, 40082ee7 <set_most_pwr_reg+0x6f>
40082ed9:	ffe521        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082edc:	e8c992        	addi	a9, a9, -24
40082edf:	004292        	s8i	a9, a2, 0
40082ee2:	720c      	movi.n	a2, 7
40082ee4:	003a46        	j	40082fd1 <set_most_pwr_reg+0x159>
40082ee7:	022c      	movi.n	a2, 32
40082ee9:	0d3287        	bltu	a2, a8, 40082efa <set_most_pwr_reg+0x82>
40082eec:	ffe121        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082eef:	e0c992        	addi	a9, a9, -32
40082ef2:	004292        	s8i	a9, a2, 0
40082ef5:	620c      	movi.n	a2, 6
40082ef7:	003586        	j	40082fd1 <set_most_pwr_reg+0x159>
40082efa:	c22c      	movi.n	a2, 44
40082efc:	0d3287        	bltu	a2, a8, 40082f0d <set_most_pwr_reg+0x95>
40082eff:	ffdc21        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f02:	d4c992        	addi	a9, a9, -44
40082f05:	004292        	s8i	a9, a2, 0
40082f08:	520c      	movi.n	a2, 5
40082f0a:	0030c6        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f0d:	823c      	movi.n	a2, 56
40082f0f:	0d3287        	bltu	a2, a8, 40082f20 <set_most_pwr_reg+0xa8>
40082f12:	ffd721        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f15:	c8c992        	addi	a9, a9, -56
40082f18:	004292        	s8i	a9, a2, 0
40082f1b:	220c      	movi.n	a2, 2
40082f1d:	002c06        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f20:	424c      	movi.n	a2, 68
40082f22:	0e3287        	bltu	a2, a8, 40082f34 <set_most_pwr_reg+0xbc>
40082f25:	ffd221        	l32r	a2, 40082e70 <set_tx_gain_table+0xc8>
40082f28:	bcc992        	addi	a9, a9, -68
40082f2b:	004292        	s8i	a9, a2, 0
40082f2e:	120c      	movi.n	a2, 1
40082f30:	002746        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f33:	cf2100        	f64cmph	a2, a1, a0, 12
40082f36:	ff          	.byte 0xff
40082f37:	a4c992        	addi	a9, a9, -92
40082f3a:	004292        	s8i	a9, a2, 0
40082f3d:	020c      	movi.n	a2, 0
40082f3f:	002386        	j	40082fd1 <set_most_pwr_reg+0x159>
40082f42:	210000        	srai	a0, a0, 0
40082f45:	ffca      	add.n	a15, a15, a12
40082f47:	0b0c      	movi.n	a11, 0
40082f49:	040182        	l8ui	a8, a1, 4
40082f4c:	0042b2        	s8i	a11, a2, 0
40082f4f:	0aaa87        	bge	a10, a8, 40082f5d <set_most_pwr_reg+0xe5>
40082f52:	ffc781        	l32r	a8, 40082e70 <set_tx_gain_table+0xc8>
40082f55:	520c      	movi.n	a2, 5
40082f57:	004892        	s8i	a9, a8, 0
40082f5a:	0017c6        	j	40082fbd <set_most_pwr_reg+0x145>
40082f5d:	030192        	l8ui	a9, a1, 3
40082f60:	44aa97        	bge	a10, a9, 40082fa8 <set_most_pwr_reg+0x130>
40082f63:	ffc391        	l32r	a9, 40082e70 <set_tx_gain_table+0xc8>
40082f66:	420c      	movi.n	a2, 4
40082f68:	004982        	s8i	a8, a9, 0
40082f6b:	001386        	j	40082fbd <set_most_pwr_reg+0x145>
40082f6e:	810000        	src	a0, a0, a0
40082f71:	0cffc0        	lsi	f12, a15, 48
40082f74:	489232        	l16si	a3, a2, 144
40082f77:	104600        	and	a4, a6, a0
40082f7a:	910000        	srl	a0, a0
40082f7d:	ffbd      	lsi	f11, a15, 60
40082f7f:	220c      	movi.n	a2, 2
40082f81:	004982        	s8i	a8, a9, 0
40082f84:	000d46        	j	40082fbd <set_most_pwr_reg+0x145>
40082f87:	ba8100        	ceil.s	a8, f1, 0
40082f8a:	ff          	.byte 0xff
40082f8b:	120c      	movi.n	a2, 1
40082f8d:	004892        	s8i	a9, a8, 0
40082f90:	000a46        	j	40082fbd <set_most_pwr_reg+0x145>
40082f93:	ffb791        	l32r	a9, 40082e70 <set_tx_gain_table+0xc8>
40082f96:	020c      	movi.n	a2, 0
40082f98:	004982        	s8i	a8, a9, 0
40082f9b:	000786        	j	40082fbd <set_most_pwr_reg+0x145>
40082f9e:	0119b2        	l16ui	a11, a9, 2
40082fa1:	ffe065        	call8	40082da8 <set_tx_gain_table>
40082fa4:	f01d      	retw.n
40082fa6:	820000        	mull	a0, a0, a0
40082fa9:	870201        	l32r	a0, 40064bb4 <__clrsbdi2+0x38>
40082fac:	c12a      	add.n	a12, a1, a2
40082fae:	010192        	l8ui	a9, a1, 1
40082fb1:	c72a97        	blt	a10, a9, 40082f7c <set_most_pwr_reg+0x104>
40082fb4:	000182        	l8ui	a8, a1, 0
40082fb7:	cd2a87        	blt	a10, a8, 40082f88 <set_most_pwr_reg+0x110>
40082fba:	fff546        	j	40082f93 <set_most_pwr_reg+0x11b>
40082fbd:	fe6a81        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40082fc0:	ffad91        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40082fc3:	bc08a2        	l8ui	a10, a8, 188
40082fc6:	f80c      	movi.n	a8, 15
40082fc8:	20aa80        	or	a10, a10, a8
40082fcb:	0059a2        	s16i	a10, a9, 0
40082fce:	fff306        	j	40082f9e <set_most_pwr_reg+0x126>
40082fd1:	fe6581        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40082fd4:	ffa891        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40082fd7:	5e18a2        	l16ui	a10, a8, 188
40082fda:	f0a082        	movi	a8, 240
40082fdd:	10aa80        	and	a10, a10, a8
40082fe0:	20a2a0        	or	a10, a2, a10
40082fe3:	f4a0a0        	extui	a10, a10, 0, 16
40082fe6:	0059a2        	s16i	a10, a9, 0
40082fe9:	520c      	movi.n	a2, 5
40082feb:	ffebc6        	j	40082f9e <set_most_pwr_reg+0x126>
40082fee:	200000        	or	a0, a0, a0
40082ff1:	3ffc14        	lsi	f1, a12, 252
40082ff4:	fa5c      	movi.n	a10, 95
40082ff6:	3ffb      	addi.n	a3, a15, 15

40082ff8 <get_target_power_offset>:
40082ff8:	004136        	entry	a1, 32
40082ffb:	748020        	extui	a8, a2, 0, 8
40082ffe:	0f88f6        	bgeui	a8, 8, 40083011 <get_target_power_offset+0x19>
40083001:	fffb31        	l32r	a3, 40082ff0 <set_most_pwr_reg+0x178>
40083004:	020c      	movi.n	a2, 0
40083006:	3a0382        	l8ui	a8, a3, 58
40083009:	2f1827        	beq	a8, a2, 4008303c <get_target_power_offset+0x44>
4008300c:	3b0322        	l8ui	a2, a3, 59
4008300f:	f01d      	retw.n
40083011:	f20c      	movi.n	a2, 15
40083013:	163287        	bltu	a2, a8, 4008302d <get_target_power_offset+0x35>
40083016:	fff791        	l32r	a9, 40082ff4 <set_most_pwr_reg+0x17c>
40083019:	f8c882        	addi	a8, a8, -8
4008301c:	748080        	extui	a8, a8, 0, 8
4008301f:	998a      	add.n	a9, a9, a8
40083021:	000982        	l8ui	a8, a9, 0
40083024:	838a      	add.n	a8, a3, a8
40083026:	000822        	l8ui	a2, a8, 0
40083029:	f01d      	retw.n
4008302b:	1c0000        	lsi	f0, a0, 112
4008302e:	0c79      	s32i.n	a7, a12, 0
40083030:	398702        	lsi	f0, a7, 228
40083033:	838a07        	bany	a10, a0, 40082fba <set_most_pwr_reg+0x142>
40083036:	f0c882        	addi	a8, a8, -16
40083039:	000822        	l8ui	a2, a8, 0
4008303c:	f01d      	retw.n
	...

40083040 <ram_txbbgain_to_index>:
40083040:	004136        	entry	a1, 32
40083043:	f48020        	extui	a8, a2, 0, 16
40083046:	093c      	movi.n	a9, 48
40083048:	201897        	beq	a8, a9, 4008306c <ram_txbbgain_to_index+0x2c>
4008304b:	093987        	bltu	a9, a8, 40083058 <ram_txbbgain_to_index+0x18>
4008304e:	120c      	movi.n	a2, 1
40083050:	1ec826        	beqi	a8, 32, 40083072 <ram_txbbgain_to_index+0x32>
40083053:	000646        	j	40083070 <ram_txbbgain_to_index+0x30>
40083056:	920000        	lsi	f0, a0, 0x248
40083059:	0ca0a0        	lsi	f10, a0, 48
4008305c:	189722        	l16si	a2, a7, 48
4008305f:	a19211        	l32r	a1, 4006b6a8 <__udivmoddi4+0x6ab4>
40083062:	320c20        	orbc	b0, b12, b2
40083065:	091897        	beq	a8, a9, 40083072 <ram_txbbgain_to_index+0x32>
40083068:	000106        	j	40083070 <ram_txbbgain_to_index+0x30>
4008306b:	420c00        	xorb	b0, b12, b0
4008306e:	f01d      	retw.n
40083070:	020c      	movi.n	a2, 0
40083072:	f01d      	retw.n
40083074:	a2e9      	s32i.n	a14, a2, 40
40083076:	2e8b      	addi.n	a2, a14, 8

40083078 <ram_set_chan_cal_interp>:
40083078:	004136        	entry	a1, 32
4008307b:	330b      	addi.n	a3, a3, -1
4008307d:	743030        	extui	a3, a3, 0, 8
40083080:	2863f6        	bgeui	a3, 6, 400830ac <ram_set_chan_cal_interp+0x34>
40083083:	000282        	l8ui	a8, a2, 0
40083086:	010222        	l8ui	a2, a2, 1
40083089:	239800        	sext	a9, a8, 7
4008308c:	232200        	sext	a2, a2, 7
4008308f:	c02290        	sub	a2, a2, a9
40083092:	823230        	mull	a3, a2, a3
40083095:	f6a391        	l32r	a9, 40080b24 <_init_end+0x724>
40083098:	312f30        	srai	a2, a3, 31
4008309b:	b23390        	mulsh	a3, a3, a9
4008309e:	213130        	srai	a3, a3, 1
400830a1:	c02320        	sub	a2, a3, a2
400830a4:	228a      	add.n	a2, a2, a8
400830a6:	742020        	extui	a2, a2, 0, 8
400830a9:	f01d      	retw.n
400830ab:	a80c00        	lsi	f0, a12, 0x2a0
400830ae:	2a3837        	bltu	a8, a3, 400830dc <ram_set_chan_cal_interp+0x64>
400830b1:	010282        	l8ui	a8, a2, 1
400830b4:	020222        	l8ui	a2, a2, 2
400830b7:	239800        	sext	a9, a8, 7
400830ba:	232200        	sext	a2, a2, 7
400830bd:	c02290        	sub	a2, a2, a9
400830c0:	fbc332        	addi	a3, a3, -5
400830c3:	822230        	mull	a2, a2, a3
400830c6:	f69791        	l32r	a9, 40080b24 <_init_end+0x724>
400830c9:	313f20        	srai	a3, a2, 31
400830cc:	b22290        	mulsh	a2, a2, a9
400830cf:	212120        	srai	a2, a2, 1
400830d2:	c02230        	sub	a2, a2, a3
400830d5:	228a      	add.n	a2, a2, a8
400830d7:	742020        	extui	a2, a2, 0, 8
400830da:	f01d      	retw.n
400830dc:	c80c      	movi.n	a8, 12
400830de:	2e3837        	bltu	a8, a3, 40083110 <ram_set_chan_cal_interp+0x98>
400830e1:	020282        	l8ui	a8, a2, 2
400830e4:	030222        	l8ui	a2, a2, 3
400830e7:	239800        	sext	a9, a8, 7
400830ea:	232200        	sext	a2, a2, 7
400830ed:	c02290        	sub	a2, a2, a9
400830f0:	f6c332        	addi	a3, a3, -10
400830f3:	823230        	mull	a3, a2, a3
400830f6:	ffdf21        	l32r	a2, 40083074 <ram_txbbgain_to_index+0x34>
400830f9:	a03330        	addx4	a3, a3, a3
400830fc:	b22320        	mulsh	a2, a3, a2
400830ff:	313f30        	srai	a3, a3, 31
40083102:	212220        	srai	a2, a2, 2
40083105:	c02230        	sub	a2, a2, a3
40083108:	228a      	add.n	a2, a2, a8
4008310a:	742020        	extui	a2, a2, 0, 8
4008310d:	f01d      	retw.n
4008310f:	022200        	andb	b2, b2, b0
40083112:	f01d03        	lsi	f0, a13, 0x3c0
40083115:	000000        	ill
40083118:	504c      	movi.n	a0, 69
4008311a:	6c6000        	lsi	f0, a0, 0x1b0
4008311d:	600050        	neg	a0, a5
40083120:	ba98      	l32i.n	a9, a10, 44
40083122:	fedc      	bnez.n	a14, 40083145 <ram_set_chan_cal_interp+0xcd>
40083124:	005070        	lsi	f7, a0, 0
40083127:	507460        	ritlb1	a6, a4
4008312a:	786000        	lsi	f0, a0, 0x1e0
4008312d:	600050        	neg	a0, a5
40083130:	503c      	movi.n	a0, 53
40083132:	776000        	lsi	f0, a0, 0x1dc
40083135:	777777        	bbci	a7, 23, 400831b0 <write_txrate_power_offset+0x64>
40083138:	005040        	lsi	f4, a0, 0
4008313b:	504460        	lsi	f6, a4, 0x140
4008313e:	486000        	ssx	f6, a0, a0
40083141:	600050        	neg	a0, a5
40083144:	15e8      	l32i.n	a14, a5, 4
40083146:	3ffc      	bnez.n	a15, 4008317d <write_txrate_power_offset+0x31>
40083148:	505c      	movi.n	a0, 85
4008314a:	00          	.byte 00
4008314b:	60          	.byte 0x60

4008314c <write_txrate_power_offset>:
4008314c:	004136        	entry	a1, 32
4008314f:	742020        	extui	a2, a2, 0, 8
40083152:	07b256        	bnez	a2, 400831d1 <write_txrate_power_offset+0x85>
40083155:	fff231        	l32r	a3, 40083120 <ram_set_chan_cal_interp+0xa8>
40083158:	fff121        	l32r	a2, 4008311c <ram_set_chan_cal_interp+0xa4>
4008315b:	fff441        	l32r	a4, 4008312c <ram_set_chan_cal_interp+0xb4>
4008315e:	0020c0        	memw
40083161:	0239      	s32i.n	a3, a2, 0
40083163:	fff021        	l32r	a2, 40083124 <ram_set_chan_cal_interp+0xac>
40083166:	f37c      	movi.n	a3, -1
40083168:	0020c0        	memw
4008316b:	0239      	s32i.n	a3, a2, 0
4008316d:	ffee21        	l32r	a2, 40083128 <ram_set_chan_cal_interp+0xb0>
40083170:	0020c0        	memw
40083173:	0239      	s32i.n	a3, a2, 0
40083175:	0020c0        	memw
40083178:	0439      	s32i.n	a3, a4, 0
4008317a:	ffee21        	l32r	a2, 40083134 <ram_set_chan_cal_interp+0xbc>
4008317d:	ffec31        	l32r	a3, 40083130 <ram_set_chan_cal_interp+0xb8>
40083180:	0020c0        	memw
40083183:	0329      	s32i.n	a2, a3, 0
40083185:	ffec31        	l32r	a3, 40083138 <ram_set_chan_cal_interp+0xc0>
40083188:	0020c0        	memw
4008318b:	0329      	s32i.n	a2, a3, 0
4008318d:	ffeb31        	l32r	a3, 4008313c <ram_set_chan_cal_interp+0xc4>
40083190:	0020c0        	memw
40083193:	0329      	s32i.n	a2, a3, 0
40083195:	ffea31        	l32r	a3, 40083140 <ram_set_chan_cal_interp+0xc8>
40083198:	0020c0        	memw
4008319b:	0329      	s32i.n	a2, a3, 0
4008319d:	f01d      	retw.n
4008319f:	a22000        	muluh	a2, a0, a0
400831a2:	a3aa54        	lsi	f5, a10, 0x28c
400831a5:	04bd      	mov.n	a11, a4
400831a7:	74a0a0        	extui	a10, a10, 0, 8
400831aa:	ffe4e5        	call8	40082ff8 <get_target_power_offset>
400831ad:	1182e0        	slli	a8, a2, 2
400831b0:	401800        	ssl	a8
400831b3:	a1aa00        	sll	a10, a10
400831b6:	221b      	addi.n	a2, a2, 1
400831b8:	77aa      	add.n	a7, a7, a10
400831ba:	e28266        	bnei	a2, 8, 400831a0 <write_txrate_power_offset+0x54>
400831bd:	0020c0        	memw
400831c0:	0579      	s32i.n	a7, a5, 0
400831c2:	332b      	addi.n	a3, a3, 2
400831c4:	554b      	addi.n	a5, a5, 4
400831c6:	743030        	extui	a3, a3, 0, 8
400831c9:	0f9567        	bne	a5, a6, 400831dc <write_txrate_power_offset+0x90>
400831cc:	0b0c      	movi.n	a11, 0
400831ce:	001546        	j	40083227 <write_txrate_power_offset+0xdb>
400831d1:	ffd151        	l32r	a5, 40083118 <ram_set_chan_cal_interp+0xa0>
400831d4:	ffdc41        	l32r	a4, 40083144 <ram_set_chan_cal_interp+0xcc>
400831d7:	ffdc61        	l32r	a6, 40083148 <ram_set_chan_cal_interp+0xd0>
400831da:	830c      	movi.n	a3, 8
400831dc:	020c      	movi.n	a2, 0
400831de:	027d      	mov.n	a7, a2
400831e0:	ffef06        	j	400831a0 <write_txrate_power_offset+0x54>
400831e3:	228000        	orb	b8, b0, b0
400831e6:	908041        	l32r	a4, 400673e8 <__udivmoddi4+0x27f4>
400831e9:	2a2a14        	lsi	f1, a10, 168
400831ec:	143966        	bnei	a9, 3, 40083204 <write_txrate_power_offset+0xb8>
400831ef:	412280        	srli	a2, a8, 2
400831f2:	2a2a      	add.n	a2, a10, a2
400831f4:	080222        	l8ui	a2, a2, 8
400831f7:	401300        	ssl	a3
400831fa:	a12200        	sll	a2, a2
400831fd:	772a      	add.n	a7, a7, a2
400831ff:	000306        	j	4008320f <write_txrate_power_offset+0xc3>
40083202:	220000        	orb	b0, b0, b0
40083205:	000002        	l8ui	a0, a0, 0
40083208:	004013        	ssi	f1, a0, 0
4008320b:	2aa122        	movi	a2, 0x12a
4008320e:	881b77        	beq	a11, a7, 4008319a <write_txrate_power_offset+0x4e>
40083211:	748080        	extui	a8, a8, 0, 8
40083214:	334b      	addi.n	a3, a3, 4
40083216:	660b      	addi.n	a6, a6, -1
40083218:	fc8656        	bnez	a6, 400831e4 <write_txrate_power_offset+0x98>
4008321b:	0020c0        	memw
4008321e:	0579      	s32i.n	a7, a5, 0
40083220:	bb2b      	addi.n	a11, a11, 2
40083222:	554b      	addi.n	a5, a5, 4
40083224:	0c8b26        	beqi	a11, 8, 40083234 <write_txrate_power_offset+0xe8>
40083227:	030c      	movi.n	a3, 0
40083229:	037d      	mov.n	a7, a3
4008322b:	038d      	mov.n	a8, a3
4008322d:	a4ba      	add.n	a10, a4, a11
4008322f:	860c      	movi.n	a6, 8
40083231:	ffebc6        	j	400831e4 <write_txrate_power_offset+0x98>
40083234:	f01d      	retw.n
40083236:	b20000        	mulsh	a0, a0, a0
40083239:	3ffc13        	lsi	f1, a12, 252
4008323c:	be          	.byte 0xbe
4008323d:	fc09      	s32i.n	a0, a12, 60
4008323f:	3f          	.byte 0x3f

40083240 <get_phy_target_power>:
40083240:	006136        	entry	a1, 48
40083243:	fcd741        	l32r	a4, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083246:	fdc881        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
40083249:	002492        	l32i	a9, a4, 0
4008324c:	0418c2        	l16ui	a12, a8, 8
4008324f:	0518a2        	l16ui	a10, a8, 10
40083252:	0218e2        	l16ui	a14, a8, 4
40083255:	0318d2        	l16ui	a13, a8, 6
40083258:	5108b2        	l8ui	a11, a8, 81
4008325b:	5a2992        	l32i	a9, a9, 0x168
4008325e:	0041e2        	s8i	a14, a1, 0
40083261:	0141d2        	s8i	a13, a1, 1
40083264:	0241c2        	s8i	a12, a1, 2
40083267:	0341a2        	s8i	a10, a1, 3
4008326a:	20a110        	or	a10, a1, a1
4008326d:	0009e0        	callx8	a9
40083270:	0448      	l32i.n	a4, a4, 0
40083272:	fff1b1        	l32r	a11, 40083238 <write_txrate_power_offset+0xec>
40083275:	632442        	l32i	a4, a4, 0x18c
40083278:	23ca00        	sext	a12, a10, 7
4008327b:	02ad      	mov.n	a10, a2
4008327d:	0004e0        	callx8	a4
40083280:	233380        	sext	a3, a3, 15
40083283:	ffeeb1        	l32r	a11, 4008323c <write_txrate_power_offset+0xf0>
40083286:	743030        	extui	a3, a3, 0, 8
40083289:	6a0c      	movi.n	a10, 6
4008328b:	f03d      	nop.n
4008328d:	0f8a76        	loop	a10, 400832a0 <get_phy_target_power+0x60>
40083290:	000b82        	l8ui	a8, a11, 0
40083293:	000292        	l8ui	a9, a2, 0
40083296:	c08380        	sub	a8, a3, a8
40083299:	889a      	add.n	a8, a8, a9
4008329b:	004282        	s8i	a8, a2, 0
4008329e:	221b      	addi.n	a2, a2, 1
400832a0:	f01d      	retw.n
400832a2:	800000        	add	a0, a0, a0
400832a5:	6000e0        	neg	a0, a14

400832a8 <ram_read_sar_dout>:
400832a8:	004136        	entry	a1, 32
400832ab:	fffec1        	l32r	a12, 400832a4 <get_phy_target_power+0x64>
400832ae:	0a0c      	movi.n	a10, 0
400832b0:	fb7c      	movi.n	a11, -1
400832b2:	08a092        	movi	a9, 8
400832b5:	148976        	loop	a9, 400832cd <ram_read_sar_dout+0x25>
400832b8:	a08ac0        	addx4	a8, a10, a12
400832bb:	0020c0        	memw
400832be:	0888      	l32i.n	a8, a8, 0
400832c0:	aa1b      	addi.n	a10, a10, 1
400832c2:	308b80        	xor	a8, a11, a8
400832c5:	b48080        	extui	a8, a8, 0, 12
400832c8:	005282        	s16i	a8, a2, 0
400832cb:	222b      	addi.n	a2, a2, 2
400832cd:	f01d      	retw.n
400832cf:	f8a800        	lsi	f0, a8, 0x3e0
400832d2:	3ffb      	addi.n	a3, a15, 15

400832d4 <get_rate_fcc_index>:
400832d4:	004136        	entry	a1, 32
400832d7:	ff4681        	l32r	a8, 40082ff0 <set_most_pwr_reg+0x178>
400832da:	742020        	extui	a2, a2, 0, 8
400832dd:	3d0892        	l8ui	a9, a8, 61
400832e0:	022926        	beqi	a9, 2, 400832e6 <get_rate_fcc_index+0x12>
400832e3:	002cc6        	j	4008339a <get_rate_fcc_index+0xc6>
400832e6:	982a      	add.n	a9, a8, a2
400832e8:	3d09a2        	l8ui	a10, a9, 61
400832eb:	fdc222        	addi	a2, a2, -3
400832ee:	742020        	extui	a2, a2, 0, 8
400832f1:	8b0c      	movi.n	a11, 8
400832f3:	4194a0        	srli	a9, a10, 4
400832f6:	34a0a0        	extui	a10, a10, 0, 4
400832f9:	02bb27        	bgeu	a11, a2, 400832ff <get_rate_fcc_index+0x2b>
400832fc:	002206        	j	40083388 <get_rate_fcc_index+0xb4>
400832ff:	fff4b1        	l32r	a11, 400832d0 <ram_read_sar_dout+0x28>
40083302:	a022b0        	addx4	a2, a2, a11
40083305:	0228      	l32i.n	a2, a2, 0
40083307:	0002a0        	jx	a2
4008330a:	4c0822        	l8ui	a2, a8, 76
4008330d:	348020        	extui	a8, a2, 0, 4
40083310:	a20c      	movi.n	a2, 10
40083312:	632820        	minu	a2, a8, a2
40083315:	001c46        	j	4008338a <get_rate_fcc_index+0xb6>
40083318:	4c0822        	l8ui	a2, a8, 76
4008331b:	418420        	srli	a8, a2, 4
4008331e:	a20c      	movi.n	a2, 10
40083320:	632820        	minu	a2, a8, a2
40083323:	0018c6        	j	4008338a <get_rate_fcc_index+0xb6>
40083326:	4d0822        	l8ui	a2, a8, 77
40083329:	348020        	extui	a8, a2, 0, 4
4008332c:	a20c      	movi.n	a2, 10
4008332e:	632820        	minu	a2, a8, a2
40083331:	001546        	j	4008338a <get_rate_fcc_index+0xb6>
40083334:	4d0822        	l8ui	a2, a8, 77
40083337:	418420        	srli	a8, a2, 4
4008333a:	a20c      	movi.n	a2, 10
4008333c:	632820        	minu	a2, a8, a2
4008333f:	0011c6        	j	4008338a <get_rate_fcc_index+0xb6>
40083342:	4e0822        	l8ui	a2, a8, 78
40083345:	348020        	extui	a8, a2, 0, 4
40083348:	a20c      	movi.n	a2, 10
4008334a:	632820        	minu	a2, a8, a2
4008334d:	000e46        	j	4008338a <get_rate_fcc_index+0xb6>
40083350:	4e0822        	l8ui	a2, a8, 78
40083353:	418420        	srli	a8, a2, 4
40083356:	a20c      	movi.n	a2, 10
40083358:	632820        	minu	a2, a8, a2
4008335b:	000ac6        	j	4008338a <get_rate_fcc_index+0xb6>
4008335e:	4f0822        	l8ui	a2, a8, 79
40083361:	348020        	extui	a8, a2, 0, 4
40083364:	a20c      	movi.n	a2, 10
40083366:	632820        	minu	a2, a8, a2
40083369:	000746        	j	4008338a <get_rate_fcc_index+0xb6>
4008336c:	4f0822        	l8ui	a2, a8, 79
4008336f:	418420        	srli	a8, a2, 4
40083372:	a20c      	movi.n	a2, 10
40083374:	632820        	minu	a2, a8, a2
40083377:	0003c6        	j	4008338a <get_rate_fcc_index+0xb6>
4008337a:	500822        	l8ui	a2, a8, 80
4008337d:	348020        	extui	a8, a2, 0, 4
40083380:	a20c      	movi.n	a2, 10
40083382:	632820        	minu	a2, a8, a2
40083385:	000046        	j	4008338a <get_rate_fcc_index+0xb6>
40083388:	020c      	movi.n	a2, 0
4008338a:	ab0c      	movi.n	a11, 10
4008338c:	638ab0        	minu	a8, a10, a11
4008338f:	0dbb97        	bgeu	a11, a9, 400833a0 <get_rate_fcc_index+0xcc>
40083392:	0b9d      	mov.n	a9, a11
40083394:	000206        	j	400833a0 <get_rate_fcc_index+0xcc>
40083397:	000000        	ill
4008339a:	080c      	movi.n	a8, 0
4008339c:	082d      	mov.n	a2, a8
4008339e:	089d      	mov.n	a9, a8
400833a0:	004382        	s8i	a8, a3, 0
400833a3:	014392        	s8i	a9, a3, 1
400833a6:	024322        	s8i	a2, a3, 2
400833a9:	f01d      	retw.n
400833ab:	15fc00        	extui	a15, a0, 28, 2
400833ae:	3ffc      	bnez.n	a15, 400833e5 <get_rate_target_power+0x35>

400833b0 <get_rate_target_power>:
400833b0:	004136        	entry	a1, 32
400833b3:	742020        	extui	a2, a2, 0, 8
400833b6:	419220        	srli	a9, a2, 2
400833b9:	081c      	movi.n	a8, 16
400833bb:	2e89b6        	bltui	a9, 8, 400833ed <get_rate_target_power+0x3d>
400833be:	f80c      	movi.n	a8, 15
400833c0:	103897        	bltu	a8, a9, 400833d4 <get_rate_target_power+0x24>
400833c3:	f8c992        	addi	a9, a9, -8
400833c6:	ff0b21        	l32r	a2, 40082ff4 <set_most_pwr_reg+0x17c>
400833c9:	749090        	extui	a9, a9, 0, 8
400833cc:	929a      	add.n	a9, a2, a9
400833ce:	000982        	l8ui	a8, a9, 0
400833d1:	000606        	j	400833ed <get_rate_target_power+0x3d>
400833d4:	7a1c      	movi.n	a10, 23
400833d6:	080c      	movi.n	a8, 0
400833d8:	113a97        	bltu	a10, a9, 400833ed <get_rate_target_power+0x3d>
400833db:	f0c982        	addi	a8, a9, -16
400833de:	142020        	extui	a2, a2, 0, 2
400833e1:	748080        	extui	a8, a8, 0, 8
400833e4:	053266        	bnei	a2, 3, 400833ed <get_rate_target_power+0x3d>
400833e7:	f8c982        	addi	a8, a9, -8
400833ea:	748080        	extui	a8, a8, 0, 8
400833ed:	ffef21        	l32r	a2, 400833ac <get_rate_fcc_index+0xd8>
400833f0:	828a      	add.n	a8, a2, a8
400833f2:	000822        	l8ui	a2, a8, 0
400833f5:	f01d      	retw.n
400833f7:	09bd00        	l32e	a0, a13, -20
400833fa:	3ffc      	bnez.n	a15, 40083431 <get_chan_pwr_index+0x35>

400833fc <get_chan_pwr_index>:
400833fc:	004136        	entry	a1, 32
400833ff:	fefc21        	l32r	a2, 40082ff0 <set_most_pwr_reg+0x178>
40083402:	080c      	movi.n	a8, 0
40083404:	02ad      	mov.n	a10, a2
40083406:	3a0a92        	l8ui	a9, a10, 58
40083409:	3b0222        	l8ui	a2, a2, 59
4008340c:	ff4ef1        	l32r	a15, 40083144 <ram_set_chan_cal_interp+0xcc>
4008340f:	832890        	moveqz	a2, a8, a9
40083412:	029d      	mov.n	a9, a2
40083414:	fff921        	l32r	a2, 400833f8 <get_rate_target_power+0x48>
40083417:	0fbd      	mov.n	a11, a15
40083419:	0002e2        	l8ui	a14, a2, 0
4008341c:	1c1c      	movi.n	a12, 17
4008341e:	742090        	extui	a2, a9, 0, 8
40083421:	388c76        	loop	a12, 4008345d <get_chan_pwr_index+0x61>
40083424:	749080        	extui	a9, a8, 0, 8
40083427:	0a88f6        	bgeui	a8, 8, 40083435 <get_chan_pwr_index+0x39>
4008342a:	320ad2        	l8ui	a13, a10, 50
4008342d:	089d      	mov.n	a9, a8
4008342f:	004bd2        	s8i	a13, a11, 0
40083432:	000646        	j	4008344f <get_chan_pwr_index+0x53>
40083435:	0bb926        	beqi	a9, 16, 40083444 <get_chan_pwr_index+0x48>
40083438:	2a0ad2        	l8ui	a13, a10, 42
4008343b:	089d      	mov.n	a9, a8
4008343d:	004bd2        	s8i	a13, a11, 0
40083440:	0002c6        	j	4008344f <get_chan_pwr_index+0x53>
40083443:	4f2200        	f64cmph	a2, a2, a0, 4
40083446:	0bd210        	lsi	f1, a2, 44
40083449:	3de700        	lsi	f0, a7, 244
4008344c:	f01d04        	lsi	f0, a13, 0x3c0
4008344f:	04bde7        	bgeu	a13, a14, 40083457 <get_chan_pwr_index+0x5b>
40083452:	9f9a      	add.n	a9, a15, a9
40083454:	0049e2        	s8i	a14, a9, 0
40083457:	881b      	addi.n	a8, a8, 1
40083459:	bb1b      	addi.n	a11, a11, 1
4008345b:	aa1b      	addi.n	a10, a10, 1
4008345d:	f01d      	retw.n
4008345f:	15e000        	extui	a14, a0, 16, 2
40083462:	3ffc      	bnez.n	a15, 40083499 <write_wifi_dig_gain+0x2d>
40083464:	006004        	lsi	f0, a0, 0
40083467:	600860        	lsi	f6, a8, 0x180
4008346a:	00          	.byte 00
4008346b:	60          	.byte 0x60

4008346c <write_wifi_dig_gain>:
4008346c:	006136        	entry	a1, 48
4008346f:	fffcb1        	l32r	a11, 40083460 <get_chan_pwr_index+0x64>
40083472:	742020        	extui	a2, a2, 0, 8
40083475:	01ad      	mov.n	a10, a1
40083477:	890c      	movi.n	a9, 8
40083479:	0c8976        	loop	a9, 40083489 <write_wifi_dig_gain+0x1d>
4008347c:	000b82        	l8ui	a8, a11, 0
4008347f:	bb1b      	addi.n	a11, a11, 1
40083481:	c08820        	sub	a8, a8, a2
40083484:	004a82        	s8i	a8, a10, 0
40083487:	aa1b      	addi.n	a10, a10, 1
40083489:	0188      	l32i.n	a8, a1, 0
4008348b:	fff621        	l32r	a2, 40083464 <get_chan_pwr_index+0x68>
4008348e:	0020c0        	memw
40083491:	0289      	s32i.n	a8, a2, 0
40083493:	1188      	l32i.n	a8, a1, 4
40083495:	fff421        	l32r	a2, 40083468 <get_chan_pwr_index+0x6c>
40083498:	0020c0        	memw
4008349b:	0289      	s32i.n	a8, a2, 0
4008349d:	f01d      	retw.n
	...

400834a0 <set_chan_dig_gain>:
400834a0:	00a136        	entry	a1, 80
400834a3:	fe7031        	l32r	a3, 40082e64 <set_tx_gain_table+0xbc>
400834a6:	a16b      	addi.n	a10, a1, 6
400834a8:	0003b2        	l8ui	a11, a3, 0
400834ab:	742020        	extui	a2, a2, 0, 8
400834ae:	23bb00        	sext	a11, a11, 7
400834b1:	ffd8e5        	call8	40083240 <get_phy_target_power>
400834b4:	040c      	movi.n	a4, 0
400834b6:	fc3a61        	l32r	a6, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
400834b9:	ffe931        	l32r	a3, 40083460 <get_chan_pwr_index+0x64>
400834bc:	000c46        	j	400834f1 <set_chan_dig_gain+0x51>
400834bf:	920000        	lsi	f0, a0, 0x248
400834c2:	6b0005        	call0	400ee4c4 <_text_end+0x1be7>
400834c5:	489255        	call4	400cbdec <_rtc_text_end+0xbdec>
400834c8:	881b00        	lsi	f0, a11, 0x220
400834cb:	770b      	addi.n	a7, a7, -1
400834cd:	ff0756        	bnez	a7, 400834c1 <set_chan_dig_gain+0x21>
400834d0:	0658      	l32i.n	a5, a6, 0
400834d2:	02bd      	mov.n	a11, a2
400834d4:	5a2552        	l32i	a5, a5, 0x168
400834d7:	a1cb      	addi.n	a10, a1, 12
400834d9:	0005e0        	callx8	a5
400834dc:	60a0a0        	neg	a10, a10
400834df:	74a0a0        	extui	a10, a10, 0, 8
400834e2:	714a      	add.n	a7, a1, a4
400834e4:	534a      	add.n	a5, a3, a4
400834e6:	0047a2        	s8i	a10, a7, 0
400834e9:	0045a2        	s8i	a10, a5, 0
400834ec:	441b      	addi.n	a4, a4, 1
400834ee:	0f6426        	beqi	a4, 6, 40083501 <set_chan_dig_gain+0x61>
400834f1:	fd1d81        	l32r	a8, 40082968 <phy_en_hw_set_freq+0x18>
400834f4:	60c452        	addi	a5, a4, 96
400834f7:	585a      	add.n	a5, a8, a5
400834f9:	470c      	movi.n	a7, 4
400834fb:	81cb      	addi.n	a8, a1, 12
400834fd:	fff006        	j	400834c1 <set_chan_dig_gain+0x21>
40083500:	efa500        	f64cmph	a10, a5, a0, 14
40083503:	ff          	.byte 0xff
40083504:	ff1061        	l32r	a6, 40083144 <ram_set_chan_cal_interp+0xcc>
40083507:	050372        	l8ui	a7, a3, 5
4008350a:	100652        	l8ui	a5, a6, 16
4008350d:	064372        	s8i	a7, a3, 6
40083510:	535a      	add.n	a5, a3, a5
40083512:	000552        	l8ui	a5, a5, 0
40083515:	ffa571        	l32r	a7, 400833ac <get_rate_fcc_index+0xd8>
40083518:	556b      	addi.n	a5, a5, 6
4008351a:	074352        	s8i	a5, a3, 7
4008351d:	07bd      	mov.n	a11, a7
4008351f:	065d      	mov.n	a5, a6
40083521:	06ad      	mov.n	a10, a6
40083523:	191c      	movi.n	a9, 17
40083525:	108976        	loop	a9, 40083539 <set_chan_dig_gain+0x99>
40083528:	000a42        	l8ui	a4, a10, 0
4008352b:	816b      	addi.n	a8, a1, 6
4008352d:	484a      	add.n	a4, a8, a4
4008352f:	000442        	l8ui	a4, a4, 0
40083532:	aa1b      	addi.n	a10, a10, 1
40083534:	004b42        	s8i	a4, a11, 0
40083537:	bb1b      	addi.n	a11, a11, 1
40083539:	fead81        	l32r	a8, 40082ff0 <set_most_pwr_reg+0x178>
4008353c:	3d0882        	l8ui	a8, a8, 61
4008353f:	022826        	beqi	a8, 2, 40083545 <set_chan_dig_gain+0xa5>
40083542:	003f86        	j	40083644 <set_chan_dig_gain+0x1a4>
40083545:	02ad      	mov.n	a10, a2
40083547:	10c1b2        	addi	a11, a1, 16
4008354a:	ffd8a5        	call8	400832d4 <get_rate_fcc_index>
4008354d:	110192        	l8ui	a9, a1, 17
40083550:	1001d2        	l8ui	a13, a1, 16
40083553:	1201c2        	l8ui	a12, a1, 18
40083556:	0b0142        	l8ui	a4, a1, 11
40083559:	0501e2        	l8ui	a14, a1, 5
4008355c:	8199      	s32i.n	a9, a1, 32
4008355e:	080c      	movi.n	a8, 0
40083560:	1a1c      	movi.n	a10, 17
40083562:	9b8a76        	loop	a10, 40083601 <set_chan_dig_gain+0x161>
40083565:	74f080        	extui	a15, a8, 0, 8
40083568:	1088b6        	bltui	a8, 8, 4008357c <set_chan_dig_gain+0xdc>
4008356b:	12bf66        	bnei	a15, 16, 40083581 <set_chan_dig_gain+0xe1>
4008356e:	000522        	l8ui	a2, a5, 0
40083571:	81b8      	l32i.n	a11, a1, 32
40083573:	0232b7        	bltu	a2, a11, 40083579 <set_chan_dig_gain+0xd9>
40083576:	003286        	j	40083644 <set_chan_dig_gain+0x1a4>
40083579:	002ec6        	j	40083638 <set_chan_dig_gain+0x198>
4008357c:	0d9d      	mov.n	a9, a13
4008357e:	000046        	j	40083583 <set_chan_dig_gain+0xe3>
40083581:	0c9d      	mov.n	a9, a12
40083583:	0005b2        	l8ui	a11, a5, 0
40083586:	082d      	mov.n	a2, a8
40083588:	71bb97        	bgeu	a11, a9, 400835fd <set_chan_dig_gain+0x15d>
4008358b:	2169f6        	bgeui	a9, 6, 400835b0 <set_chan_dig_gain+0x110>
4008358e:	b16b      	addi.n	a11, a1, 6
40083590:	2b9a      	add.n	a2, a11, a9
40083592:	0002f2        	l8ui	a15, a2, 0
40083595:	b78a      	add.n	a11, a7, a8
40083597:	268a      	add.n	a2, a6, a8
40083599:	004bf2        	s8i	a15, a11, 0
4008359c:	004292        	s8i	a9, a2, 0
4008359f:	5ab866        	bnei	a8, 16, 400835fd <set_chan_dig_gain+0x15d>
400835a2:	919a      	add.n	a9, a1, a9
400835a4:	000922        	l8ui	a2, a9, 0
400835a7:	226b      	addi.n	a2, a2, 6
400835a9:	074322        	s8i	a2, a3, 7
400835ac:	002506        	j	40083644 <set_chan_dig_gain+0x1a4>
400835af:	88f600        	lsi	f0, a6, 0x220
400835b2:	c92220        	lsi	f2, a2, 0x324
400835b5:	8afb      	addi.n	a8, a10, 15
400835b7:	919997        	bne	a9, a9, 4008354c <set_chan_dig_gain+0xac>
400835ba:	1122e0        	slli	a2, a2, 2
400835bd:	590c      	movi.n	a9, 5
400835bf:	f68a      	add.n	a15, a6, a8
400835c1:	742020        	extui	a2, a2, 0, 8
400835c4:	004f92        	s8i	a9, a15, 0
400835c7:	9198      	l32i.n	a9, a1, 36
400835c9:	c0b420        	sub	a11, a4, a2
400835cc:	0049b2        	s8i	a11, a9, 0
400835cf:	590c      	movi.n	a9, 5
400835d1:	000806        	j	400835f5 <set_chan_dig_gain+0x155>
400835d4:	2cbf26        	beqi	a15, 16, 40083604 <set_chan_dig_gain+0x164>
400835d7:	fbc922        	addi	a2, a9, -5
400835da:	b78a      	add.n	a11, a7, a8
400835dc:	91b9      	s32i.n	a11, a1, 36
400835de:	690c      	movi.n	a9, 6
400835e0:	1122e0        	slli	a2, a2, 2
400835e3:	f68a      	add.n	a15, a6, a8
400835e5:	742020        	extui	a2, a2, 0, 8
400835e8:	004f92        	s8i	a9, a15, 0
400835eb:	9198      	l32i.n	a9, a1, 36
400835ed:	c0b420        	sub	a11, a4, a2
400835f0:	0049b2        	s8i	a11, a9, 0
400835f3:	690c      	movi.n	a9, 6
400835f5:	939a      	add.n	a9, a3, a9
400835f7:	c02e20        	sub	a2, a14, a2
400835fa:	004922        	s8i	a2, a9, 0
400835fd:	881b      	addi.n	a8, a8, 1
400835ff:	551b      	addi.n	a5, a5, 1
40083601:	000fc6        	j	40083644 <set_chan_dig_gain+0x1a4>
40083604:	fbc952        	addi	a5, a9, -5
40083607:	050162        	l8ui	a6, a1, 5
4008360a:	1155e0        	slli	a5, a5, 2
4008360d:	0b0182        	l8ui	a8, a1, 11
40083610:	745050        	extui	a5, a5, 0, 8
40083613:	666b      	addi.n	a6, a6, 6
40083615:	c08850        	sub	a8, a8, a5
40083618:	272a      	add.n	a2, a7, a2
4008361a:	c05650        	sub	a5, a6, a5
4008361d:	004282        	s8i	a8, a2, 0
40083620:	074352        	s8i	a5, a3, 7
40083623:	000746        	j	40083644 <set_chan_dig_gain+0x1a4>
40083626:	8198      	l32i.n	a9, a1, 32
40083628:	416b      	addi.n	a4, a1, 6
4008362a:	249a      	add.n	a2, a4, a9
4008362c:	000222        	l8ui	a2, a2, 0
4008362f:	104692        	s8i	a9, a6, 16
40083632:	104722        	s8i	a2, a7, 16
40083635:	ffda46        	j	400835a2 <set_chan_dig_gain+0x102>
40083638:	8188      	l32i.n	a8, a1, 32
4008363a:	e868b6        	bltui	a8, 6, 40083626 <set_chan_dig_gain+0x186>
4008363d:	089d      	mov.n	a9, a8
4008363f:	0f2d      	mov.n	a2, a15
40083641:	ffefc6        	j	40083604 <set_chan_dig_gain+0x164>
40083644:	1a0c      	movi.n	a10, 1
40083646:	ffb065        	call8	4008314c <write_txrate_power_offset>
40083649:	fcc7b1        	l32r	a11, 40082968 <phy_en_hw_set_freq+0x18>
4008364c:	00a022        	movi	a2, 0
4008364f:	b60ba2        	l8ui	a10, a11, 182
40083652:	23aa00        	sext	a10, a10, 7
40083655:	ffe165        	call8	4008346c <write_wifi_dig_gain>
40083658:	f01d      	retw.n
4008365a:	600000        	neg	a0, a0
4008365d:	6000e0        	neg	a0, a14
40083660:	12b8      	l32i.n	a11, a2, 4
40083662:	3ffc      	bnez.n	a15, 40083699 <tx_pwctrl_cal+0x1d>
40083664:	fc09c6        	j	4008268f <phy_unforce_wifi_chan+0x3>
40083667:	3f          	.byte 0x3f
40083668:	fc09c2        	l8ui	a12, a9, 252
4008366b:	3f          	.byte 0x3f
4008366c:	fc09c5        	call0	4007f70c <__udivmoddi4+0x1ab18>
4008366f:	3f          	.byte 0x3f
40083670:	f8cc      	bnez.n	a8, 40083683 <tx_pwctrl_cal+0x7>
40083672:	3ffb      	addi.n	a3, a15, 15
40083674:	ec7a      	add.n	a14, a12, a7
40083676:	3ffb      	addi.n	a3, a15, 15
40083678:	f958      	l32i.n	a5, a9, 60
4008367a:	3ffb      	addi.n	a3, a15, 15

4008367c <tx_pwctrl_cal>:
4008367c:	010136        	entry	a1, 128
4008367f:	fbc871        	l32r	a7, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083682:	fff631        	l32r	a3, 4008365c <set_chan_dig_gain+0x1bc>
40083685:	fff681        	l32r	a8, 40083660 <set_chan_dig_gain+0x1c0>
40083688:	0728      	l32i.n	a2, a7, 0
4008368a:	0020c0        	memw
4008368d:	0338      	l32i.n	a3, a3, 0
4008368f:	672222        	l32i	a2, a2, 0x19c
40083692:	0018a2        	l16ui	a10, a8, 0
40083695:	653830        	extui	a3, a3, 24, 7
40083698:	c139      	s32i.n	a3, a1, 48
4008369a:	0002e0        	callx8	a2
4008369d:	c138      	l32i.n	a3, a1, 48
4008369f:	fff121        	l32r	a2, 40083664 <set_chan_dig_gain+0x1c4>
400836a2:	743030        	extui	a3, a3, 0, 8
400836a5:	0052a2        	s16i	a10, a2, 0
400836a8:	418230        	srli	a8, a3, 2
400836ab:	749050        	extui	a9, a5, 0, 8
400836ae:	746060        	extui	a6, a6, 0, 8
400836b1:	021c      	movi.n	a2, 16
400836b3:	2e88b6        	bltui	a8, 8, 400836e5 <tx_pwctrl_cal+0x69>
400836b6:	f20c      	movi.n	a2, 15
400836b8:	103287        	bltu	a2, a8, 400836cc <tx_pwctrl_cal+0x50>
400836bb:	f8c822        	addi	a2, a8, -8
400836be:	fe4d31        	l32r	a3, 40082ff4 <set_most_pwr_reg+0x17c>
400836c1:	742020        	extui	a2, a2, 0, 8
400836c4:	232a      	add.n	a2, a3, a2
400836c6:	000222        	l8ui	a2, a2, 0
400836c9:	000606        	j	400836e5 <tx_pwctrl_cal+0x69>
400836cc:	751c      	movi.n	a5, 23
400836ce:	020c      	movi.n	a2, 0
400836d0:	113587        	bltu	a5, a8, 400836e5 <tx_pwctrl_cal+0x69>
400836d3:	f0c822        	addi	a2, a8, -16
400836d6:	143030        	extui	a3, a3, 0, 2
400836d9:	742020        	extui	a2, a2, 0, 8
400836dc:	053366        	bnei	a3, 3, 400836e5 <tx_pwctrl_cal+0x69>
400836df:	f8c822        	addi	a2, a8, -8
400836e2:	742020        	extui	a2, a2, 0, 8
400836e5:	ff3131        	l32r	a3, 400833ac <get_rate_fcc_index+0xd8>
400836e8:	0c2c      	movi.n	a12, 32
400836ea:	232a      	add.n	a2, a3, a2
400836ec:	000232        	l8ui	a3, a2, 0
400836ef:	233300        	sext	a3, a3, 7
400836f2:	11b3e0        	slli	a11, a3, 2
400836f5:	c0aab0        	sub	a10, a10, a11
400836f8:	23ba80        	sext	a11, a10, 15
400836fb:	ffdba1        	l32r	a10, 40083668 <set_chan_dig_gain+0x1c8>
400836fe:	005ab2        	s16i	a11, a10, 0
40083701:	02acb7        	bge	a12, a11, 40083707 <tx_pwctrl_cal+0x8b>
40083704:	00a806        	j	400839a8 <tx_pwctrl_cal+0x32c>
40083707:	0a6c      	movi.n	a10, -32
40083709:	02aba7        	bge	a11, a10, 4008370f <tx_pwctrl_cal+0x93>
4008370c:	00ac06        	j	400839c0 <tx_pwctrl_cal+0x344>
4008370f:	ffd721        	l32r	a2, 4008366c <set_chan_dig_gain+0x1cc>
40083712:	000222        	l8ui	a2, a2, 0
40083715:	4742f6        	bgeui	a2, 4, 40083760 <tx_pwctrl_cal+0xe4>
40083718:	281ba6        	blti	a11, 1, 40083744 <tx_pwctrl_cal+0xc8>
4008371b:	2122b0        	srai	a2, a11, 2
4008371e:	22ba      	add.n	a2, a2, a11
40083720:	212220        	srai	a2, a2, 2
40083723:	602020        	neg	a2, a2
40083726:	742020        	extui	a2, a2, 0, 8
40083729:	1b0c      	movi.n	a11, 1
4008372b:	23a200        	sext	a10, a2, 7
4008372e:	050c      	movi.n	a5, 0
40083730:	935ba0        	movnez	a5, a11, a10
40083733:	74b050        	extui	a11, a5, 0, 8
40083736:	050c      	movi.n	a5, 0
40083738:	1a0c      	movi.n	a10, 1
4008373a:	935a90        	movnez	a5, a10, a9
4008373d:	105b50        	and	a5, a11, a5
40083740:	001d86        	j	400837ba <tx_pwctrl_cal+0x13e>
40083743:	020c00        	andb	b0, b12, b0
40083746:	0a7c      	movi.n	a10, -16
40083748:	025d      	mov.n	a5, a2
4008374a:	6caba7        	bge	a11, a10, 400837ba <tx_pwctrl_cal+0x13e>
4008374d:	2122b0        	srai	a2, a11, 2
40083750:	c02b20        	sub	a2, a11, a2
40083753:	212220        	srai	a2, a2, 2
40083756:	602020        	neg	a2, a2
40083759:	742020        	extui	a2, a2, 0, 8
4008375c:	000e46        	j	40083799 <tx_pwctrl_cal+0x11d>
4008375f:	0bad00        	lsi	f0, a13, 44
40083762:	0728      	l32i.n	a2, a7, 0
40083764:	2d0c      	movi.n	a13, 2
40083766:	682222        	l32i	a2, a2, 0x1a0
40083769:	04a0c2        	movi	a12, 4
4008376c:	176182        	s32i	a8, a1, 92
4008376f:	156192        	s32i	a9, a1, 84
40083772:	20b440        	or	a11, a4, a4
40083775:	0002e0        	callx8	a2
40083778:	7420a0        	extui	a2, a10, 0, 8
4008377b:	235200        	sext	a5, a2, 7
4008377e:	172182        	l32i	a8, a1, 92
40083781:	152192        	l32i	a9, a1, 84
40083784:	1115e6        	bgei	a5, 1, 40083799 <tx_pwctrl_cal+0x11d>
40083787:	0b0c      	movi.n	a11, 0
40083789:	1a0c      	movi.n	a10, 1
4008378b:	0bcd      	mov.n	a12, a11
4008378d:	93ca50        	movnez	a12, a10, a5
40083790:	93ba90        	movnez	a11, a10, a9
40083793:	105cb0        	and	a5, a12, a11
40083796:	000806        	j	400837ba <tx_pwctrl_cal+0x13e>
40083799:	fc7351        	l32r	a5, 40082968 <phy_en_hw_set_freq+0x18>
4008379c:	3a1c      	movi.n	a10, 19
4008379e:	b70552        	l8ui	a5, a5, 183
400837a1:	235500        	sext	a5, a5, 7
400837a4:	0c2a57        	blt	a10, a5, 400837b4 <tx_pwctrl_cal+0x138>
400837a7:	0a0c      	movi.n	a10, 0
400837a9:	150c      	movi.n	a5, 1
400837ab:	835a90        	moveqz	a5, a10, a9
400837ae:	745050        	extui	a5, a5, 0, 8
400837b1:	000146        	j	400837ba <tx_pwctrl_cal+0x13e>
400837b4:	00a022        	movi	a2, 0
400837b7:	205220        	or	a5, a2, a2
400837ba:	06a616        	beqz	a6, 40083828 <tx_pwctrl_cal+0x1ac>
400837bd:	fc6aa1        	l32r	a10, 40082968 <phy_en_hw_set_freq+0x18>
400837c0:	ff2a91        	l32r	a9, 40083468 <get_chan_pwr_index+0x6c>
400837c3:	510ae2        	l8ui	a14, a10, 81
400837c6:	b60ab2        	l8ui	a11, a10, 182
400837c9:	b70aa2        	l8ui	a10, a10, 183
400837cc:	0020c0        	memw
400837cf:	002992        	l32i	a9, a9, 0
400837d2:	4041a2        	s8i	a10, a1, 64
400837d5:	ffa4a1        	l32r	a10, 40083668 <set_chan_dig_gain+0x1c8>
400837d8:	0094f2        	l16si	a15, a4, 0
400837db:	009ad2        	l16si	a13, a10, 0
400837de:	ffa1a1        	l32r	a10, 40083664 <set_chan_dig_gain+0x1c4>
400837e1:	23bb00        	sext	a11, a11, 7
400837e4:	009ac2        	l16si	a12, a10, 0
400837e7:	fda3a1        	l32r	a10, 40082e74 <set_tx_gain_table+0xcc>
400837ea:	419890        	srli	a9, a9, 8
400837ed:	011aa2        	l16ui	a10, a10, 2
400837f0:	239900        	sext	a9, a9, 7
400837f3:	31a9      	s32i.n	a10, a1, 12
400837f5:	fd9fa1        	l32r	a10, 40082e74 <set_tx_gain_table+0xcc>
400837f8:	609090        	neg	a9, a9
400837fb:	001aa2        	l16ui	a10, a10, 0
400837fe:	11b9      	s32i.n	a11, a1, 4
40083800:	4001b2        	l8ui	a11, a1, 64
40083803:	21a9      	s32i.n	a10, a1, 8
40083805:	23ab00        	sext	a10, a11, 7
40083808:	23ee00        	sext	a14, a14, 7
4008380b:	7199      	s32i.n	a9, a1, 28
4008380d:	01a9      	s32i.n	a10, a1, 0
4008380f:	c198      	l32i.n	a9, a1, 48
40083811:	ff97a1        	l32r	a10, 40083670 <set_chan_dig_gain+0x1d0>
40083814:	61e9      	s32i.n	a14, a1, 24
40083816:	03bd      	mov.n	a11, a3
40083818:	23e200        	sext	a14, a2, 7
4008381b:	5189      	s32i.n	a8, a1, 20
4008381d:	176182        	s32i	a8, a1, 92
40083820:	4199      	s32i.n	a9, a1, 16
40083822:	6868e5        	call8	400ebeb0 <phy_printf>
40083825:	172182        	l32i	a8, a1, 92
40083828:	1b0516        	beqz	a5, 400839dc <tx_pwctrl_cal+0x360>
4008382b:	ff0d51        	l32r	a5, 40083460 <get_chan_pwr_index+0x64>
4008382e:	fc4ed1        	l32r	a13, 40082968 <phy_en_hw_set_freq+0x18>
40083831:	0505a2        	l8ui	a10, a5, 5
40083834:	b60d92        	l8ui	a9, a13, 182
40083837:	cc1c      	movi.n	a12, 28
40083839:	235900        	sext	a5, a9, 7
4008383c:	239a00        	sext	a9, a10, 7
4008383f:	c09590        	sub	a9, a5, a9
40083842:	f49090        	extui	a9, a9, 0, 16
40083845:	235200        	sext	a5, a2, 7
40083848:	c0a950        	sub	a10, a9, a5
4008384b:	f4a0a0        	extui	a10, a10, 0, 16
4008384e:	23ba80        	sext	a11, a10, 15
40083851:	0dacb7        	bge	a12, a11, 40083862 <tx_pwctrl_cal+0x1e6>
40083854:	fd88e1        	l32r	a14, 40082e74 <set_tx_gain_table+0xcc>
40083857:	ff1c      	movi.n	a15, 31
40083859:	001ec2        	l16ui	a12, a14, 0
4008385c:	193fc7        	bltu	a15, a12, 40083879 <tx_pwctrl_cal+0x1fd>
4008385f:	002686        	j	400838fd <tx_pwctrl_cal+0x281>
40083862:	bc0c      	movi.n	a12, 11
40083864:	02acb7        	bge	a12, a11, 4008386a <tx_pwctrl_cal+0x1ee>
40083867:	002486        	j	400838fd <tx_pwctrl_cal+0x281>
4008386a:	fd82e1        	l32r	a14, 40082e74 <set_tx_gain_table+0xcc>
4008386d:	afa0f2        	movi	a15, 175
40083870:	001ec2        	l16ui	a12, a14, 0
40083873:	02bfc7        	bgeu	a15, a12, 40083879 <tx_pwctrl_cal+0x1fd>
40083876:	0055c6        	j	400839d1 <tx_pwctrl_cal+0x355>
40083879:	07b8      	l32i.n	a11, a7, 0
4008387b:	471c      	movi.n	a7, 20
4008387d:	c0a7a0        	sub	a10, a7, a10
40083880:	652bf2        	l32i	a15, a11, 0x194
40083883:	7470a0        	extui	a7, a10, 0, 8
40083886:	ff7bc1        	l32r	a12, 40083674 <set_chan_dig_gain+0x1d4>
40083889:	0ebd      	mov.n	a11, a14
4008388b:	176182        	s32i	a8, a1, 92
4008388e:	156192        	s32i	a9, a1, 84
40083891:	204172        	s8i	a7, a1, 32
40083894:	20c1a2        	addi	a10, a1, 32
40083897:	1661d2        	s32i	a13, a1, 88
4008389a:	1461e2        	s32i	a14, a1, 80
4008389d:	000fe0        	callx8	a15
400838a0:	1621d2        	l32i	a13, a1, 88
400838a3:	2001f2        	l8ui	a15, a1, 32
400838a6:	b80da2        	l8ui	a10, a13, 184
400838a9:	b70dc2        	l8ui	a12, a13, 183
400838ac:	2f2a      	add.n	a2, a15, a2
400838ae:	c0f7f0        	sub	a15, a7, a15
400838b1:	4041a2        	s8i	a10, a1, 64
400838b4:	74f0f0        	extui	a15, a15, 0, 8
400838b7:	1421e2        	l32i	a14, a1, 80
400838ba:	c02270        	sub	a2, a2, a7
400838bd:	7fca      	add.n	a7, a15, a12
400838bf:	4001c2        	l8ui	a12, a1, 64
400838c2:	011eb2        	l16ui	a11, a14, 2
400838c5:	001ea2        	l16ui	a10, a14, 0
400838c8:	ffca      	add.n	a15, a15, a12
400838ca:	b74d72        	s8i	a7, a13, 183
400838cd:	b84df2        	s8i	a15, a13, 184
400838d0:	1661d2        	s32i	a13, a1, 88
400838d3:	1461e2        	s32i	a14, a1, 80
400838d6:	ff4d25        	call8	40082da8 <set_tx_gain_table>
400838d9:	1421e2        	l32i	a14, a1, 80
400838dc:	152192        	l32i	a9, a1, 84
400838df:	742020        	extui	a2, a2, 0, 8
400838e2:	1621d2        	l32i	a13, a1, 88
400838e5:	001ea2        	l16ui	a10, a14, 0
400838e8:	011e72        	l16ui	a7, a14, 2
400838eb:	23b200        	sext	a11, a2, 7
400838ee:	c0b9b0        	sub	a11, a9, a11
400838f1:	172182        	l32i	a8, a1, 92
400838f4:	5e5da2        	s16i	a10, a13, 188
400838f7:	5f5d72        	s16i	a7, a13, 190
400838fa:	23bb80        	sext	a11, a11, 15
400838fd:	747720        	extui	a7, a2, 7, 8
40083900:	478c      	beqz.n	a7, 40083908 <tx_pwctrl_cal+0x28c>
40083902:	46a072        	movi	a7, 70
40083905:	17a7b7        	bge	a7, a11, 40083920 <tx_pwctrl_cal+0x2a4>
40083908:	237200        	sext	a7, a2, 7
4008390b:	217770        	srai	a7, a7, 7
4008390e:	c07720        	sub	a7, a7, a2
40083911:	02e777        	bbsi	a7, 7, 40083917 <tx_pwctrl_cal+0x29b>
40083914:	003106        	j	400839dc <tx_pwctrl_cal+0x360>
40083917:	0ba072        	movi	a7, 11
4008391a:	0227b7        	blt	a7, a11, 40083920 <tx_pwctrl_cal+0x2a4>
4008391d:	002ec6        	j	400839dc <tx_pwctrl_cal+0x360>
40083920:	b60d92        	l8ui	a9, a13, 182
40083923:	b70dc2        	l8ui	a12, a13, 183
40083926:	b80db2        	l8ui	a11, a13, 184
40083929:	742020        	extui	a2, a2, 0, 8
4008392c:	c09920        	sub	a9, a9, a2
4008392f:	749090        	extui	a9, a9, 0, 8
40083932:	c2ca      	add.n	a12, a2, a12
40083934:	22ba      	add.n	a2, a2, a11
40083936:	b64d92        	s8i	a9, a13, 182
40083939:	b74dc2        	s8i	a12, a13, 183
4008393c:	b84d22        	s8i	a2, a13, 184
4008393f:	23a900        	sext	a10, a9, 7
40083942:	176182        	s32i	a8, a1, 92
40083945:	1661d2        	s32i	a13, a1, 88
40083948:	ffb225        	call8	4008346c <write_wifi_dig_gain>
4008394b:	172182        	l32i	a8, a1, 92
4008394e:	1621d2        	l32i	a13, a1, 88
40083951:	087616        	beqz	a6, 400839dc <tx_pwctrl_cal+0x360>
40083954:	fec521        	l32r	a2, 40083468 <get_chan_pwr_index+0x6c>
40083957:	0094e2        	l16si	a14, a4, 0
4008395a:	0020c0        	memw
4008395d:	0228      	l32i.n	a2, a2, 0
4008395f:	fd4591        	l32r	a9, 40082e74 <set_tx_gain_table+0xcc>
40083962:	412820        	srli	a2, a2, 8
40083965:	ff4041        	l32r	a4, 40083668 <set_chan_dig_gain+0x1c8>
40083968:	232200        	sext	a2, a2, 7
4008396b:	510d72        	l8ui	a7, a13, 81
4008396e:	b60d62        	l8ui	a6, a13, 182
40083971:	602020        	neg	a2, a2
40083974:	b70df2        	l8ui	a15, a13, 183
40083977:	0094c2        	l16si	a12, a4, 0
4008397a:	011942        	l16ui	a4, a9, 2
4008397d:	001992        	l16ui	a9, a9, 0
40083980:	6129      	s32i.n	a2, a1, 24
40083982:	c128      	l32i.n	a2, a1, 48
40083984:	237700        	sext	a7, a7, 7
40083987:	236600        	sext	a6, a6, 7
4008398a:	ff3ba1        	l32r	a10, 40083678 <set_chan_dig_gain+0x1d8>
4008398d:	5179      	s32i.n	a7, a1, 20
4008398f:	4189      	s32i.n	a8, a1, 16
40083991:	3129      	s32i.n	a2, a1, 12
40083993:	2149      	s32i.n	a4, a1, 8
40083995:	1199      	s32i.n	a9, a1, 4
40083997:	0169      	s32i.n	a6, a1, 0
40083999:	23ff00        	sext	a15, a15, 7
4008399c:	05dd      	mov.n	a13, a5
4008399e:	20b330        	or	a11, a3, a3
400839a1:	6850e5        	call8	400ebeb0 <phy_printf>
400839a4:	f01d      	retw.n
400839a6:	210000        	srai	a0, a0, 0
400839a9:	0cff31        	l32r	a3, 40046da8 <lld_evt_get_next_free_slot+0x47c>
400839ac:	521b      	addi.n	a5, a2, 1
400839ae:	ad0002        	l8ui	a0, a0, 173
400839b1:	220c      	movi.n	a2, 2
400839b3:	b6f6a0        	lsi	f10, a6, 0x2d8
400839b6:	860245        	call0	400099dc <cache_sram_mmu_set_rom+0x1e8>
400839b9:	ff69      	s32i.n	a6, a15, 60
400839bb:	ff5dc6        	j	40083736 <tx_pwctrl_cal+0xba>
400839be:	510000        	lsi	f0, a0, 0x144
400839c1:	ff2b      	addi.n	a15, a15, 2
400839c3:	620c      	movi.n	a2, 6
400839c5:	000552        	l8ui	a5, a5, 0
400839c8:	0245f6        	bgeui	a5, 4, 400839ce <tx_pwctrl_cal+0x352>
400839cb:	ff7286        	j	40083799 <tx_pwctrl_cal+0x11d>
400839ce:	ff6406        	j	40083762 <tx_pwctrl_cal+0xe6>
400839d1:	674c      	movi.n	a7, 70
400839d3:	0527b7        	blt	a7, a11, 400839dc <tx_pwctrl_cal+0x360>
400839d6:	417720        	srli	a7, a2, 7
400839d9:	f43756        	bnez	a7, 40083920 <tx_pwctrl_cal+0x2a4>
400839dc:	f01d      	retw.n
	...

400839e0 <wifi_11g_rate_chg>:
400839e0:	004136        	entry	a1, 32
400839e3:	f8c222        	addi	a2, a2, -8
400839e6:	748020        	extui	a8, a2, 0, 8
400839e9:	020c      	movi.n	a2, 0
400839eb:	0788f6        	bgeui	a8, 8, 400839f6 <wifi_11g_rate_chg+0x16>
400839ee:	fd8121        	l32r	a2, 40082ff4 <set_most_pwr_reg+0x17c>
400839f1:	828a      	add.n	a8, a2, a8
400839f3:	000822        	l8ui	a2, a8, 0
400839f6:	f01d      	retw.n

400839f8 <ram_set_txcap_reg>:
400839f8:	006136        	entry	a1, 48
400839fb:	743030        	extui	a3, a3, 0, 8
400839fe:	514b      	addi.n	a5, a1, 4
40083a00:	417b      	addi.n	a4, a1, 7
40083a02:	fae761        	l32r	a6, 400825a0 <phy_en_hw_set_freq$part$0+0x18>
40083a05:	000946        	j	40083a2e <ram_set_txcap_reg+0x36>
40083a08:	09b200        	l32e	a0, a2, -20
40083a0b:	993b00        	lsi	f0, a11, 0x264
40083a0e:	004ab2        	s8i	a11, a10, 0
40083a11:	aa1b      	addi.n	a10, a10, 1
40083a13:	880b      	addi.n	a8, a8, -1
40083a15:	ff0856        	bnez	a8, 40083a09 <ram_set_txcap_reg+0x11>
40083a18:	0688      	l32i.n	a8, a6, 0
40083a1a:	03bd      	mov.n	a11, a3
40083a1c:	5a2882        	l32i	a8, a8, 0x168
40083a1f:	01ad      	mov.n	a10, a1
40083a21:	0008e0        	callx8	a8
40083a24:	0045a2        	s8i	a10, a5, 0
40083a27:	551b      	addi.n	a5, a5, 1
40083a29:	221b      	addi.n	a2, a2, 1
40083a2b:	0a1547        	beq	a5, a4, 40083a39 <ram_set_txcap_reg+0x41>
40083a2e:	01ad      	mov.n	a10, a1
40083a30:	029d      	mov.n	a9, a2
40083a32:	480c      	movi.n	a8, 4
40083a34:	fff446        	j	40083a09 <ram_set_txcap_reg+0x11>
40083a37:	380000        	lsi	f0, a0, 224
40083a3a:	01d206        	j	40084186 <_xt_medint2+0x6a>
40083a3d:	a02204        	lsi	f0, a2, 0x280
40083a40:	dd2060        	lsi	f6, a0, 0x374
40083a43:	232220        	sext	a2, a2, 9
40083a46:	d028      	l32i.n	a2, a0, 52
40083a48:	0c74d0        	lsi	f13, a4, 48
40083a4b:	0c1c      	movi.n	a12, 16
40083a4d:	a22b      	addi.n	a10, a2, 2
40083a4f:	e06ba0        	subx4	a6, a11, a10
40083a52:	220002        	l8ui	a0, a0, 34
40083a55:	380601        	l32r	a0, 40051a70 <lm_cmd_cmp_send+0x238>
40083a58:	01d206        	j	400841a4 <_xt_medint2+0x88>
40083a5b:	220005        	call0	400a5a5c <_iram_end+0x17f08>
40083a5e:	22c023        	ssip	f2, a0, 136
40083a61:	d2d011        	l32r	a1, 400785a4 <__udivmoddi4+0x139b0>
40083a64:	2c0c20        	lsi	f2, a12, 176
40083a67:	282322        	l32i	a2, a3, 160
40083a6a:	74d0d0        	extui	a13, a13, 0, 8
40083a6d:	0cbd      	mov.n	a11, a12
40083a6f:	6ba0a2        	movi	a10, 107
40083a72:	0002e0        	callx8	a2
40083a75:	f01d      	retw.n
40083a77:	09c000        	l32e	a0, a0, -16
40083a7a:	3ffc      	bnez.n	a15, 40083ab1 <phy_pwdet_onetime_en+0x35>

40083a7c <phy_pwdet_onetime_en>:
40083a7c:	004136        	entry	a1, 32
40083a7f:	53a5a5        	call8	400d74d8 <pwdet_sar2_init>
40083a82:	fef681        	l32r	a8, 4008365c <set_chan_dig_gain+0x1bc>
40083a85:	feaf92        	movi	a9, -2
40083a88:	0020c0        	memw
40083a8b:	0028b2        	l32i	a11, a8, 0
40083a8e:	01a0a2        	movi	a10, 1
40083a91:	109b90        	and	a9, a11, a9
40083a94:	0020c0        	memw
40083a97:	0899      	s32i.n	a9, a8, 0
40083a99:	0020c0        	memw
40083a9c:	0898      	l32i.n	a9, a8, 0
40083a9e:	2099a0        	or	a9, a9, a10
40083aa1:	0020c0        	memw
40083aa4:	0899      	s32i.n	a9, a8, 0
40083aa6:	fff481        	l32r	a8, 40083a78 <ram_set_txcap_reg+0x80>
40083aa9:	0048a2        	s8i	a10, a8, 0
40083aac:	f01d      	retw.n
40083aae:	c10000        	mul16u	a0, a0, a0
40083ab1:	fc09      	s32i.n	a0, a12, 60
40083ab3:	3f          	.byte 0x3f
40083ab4:	00e050        	lsi	f5, a0, 0
40083ab7:	140c60        	extui	a0, a6, 12, 2
40083aba:	3ffc      	bnez.n	a15, 40083af1 <tx_pwctrl_background+0x31>
40083abc:	fc1452        	l16ui	a5, a4, 0x1f8
40083abf:	3f          	.byte 0x3f

40083ac0 <tx_pwctrl_background>:
40083ac0:	006136        	entry	a1, 48
40083ac3:	fe36e5        	call8	40081e30 <phy_enter_critical>
40083ac6:	fce941        	l32r	a4, 40082e6c <set_tx_gain_table+0xc4>
40083ac9:	0a7d      	mov.n	a7, a10
40083acb:	000442        	l8ui	a4, a4, 0
40083ace:	742020        	extui	a2, a2, 0, 8
40083ad1:	743030        	extui	a3, a3, 0, 8
40083ad4:	d48c      	beqz.n	a4, 40083ae5 <tx_pwctrl_background+0x25>
40083ad6:	fff641        	l32r	a4, 40083ab0 <phy_pwdet_onetime_en+0x34>
40083ad9:	fff651        	l32r	a5, 40083ab4 <phy_pwdet_onetime_en+0x38>
40083adc:	ffe761        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083adf:	001f46        	j	40083b60 <tx_pwctrl_background+0xa0>
40083ae2:	000000        	ill
40083ae5:	fff241        	l32r	a4, 40083ab0 <phy_pwdet_onetime_en+0x34>
40083ae8:	000452        	l8ui	a5, a4, 0
40083aeb:	958c      	beqz.n	a5, 40083af8 <tx_pwctrl_background+0x38>
40083aed:	fff151        	l32r	a5, 40083ab4 <phy_pwdet_onetime_en+0x38>
40083af0:	ffe261        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083af3:	001a46        	j	40083b60 <tx_pwctrl_background+0xa0>
40083af6:	510000        	lsi	f0, a0, 0x144
40083af9:	ef          	.byte 0xef
40083afa:	ff          	.byte 0xff
40083afb:	0020c0        	memw
40083afe:	0568      	l32i.n	a6, a5, 0
40083b00:	0056d6        	bgez	a6, 40083b09 <tx_pwctrl_background+0x49>
40083b03:	ffdd61        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083b06:	000206        	j	40083b12 <tx_pwctrl_background+0x52>
40083b09:	ffdb61        	l32r	a6, 40083a78 <ram_set_txcap_reg+0x80>
40083b0c:	000682        	l8ui	a8, a6, 0
40083b0f:	071826        	beqi	a8, 1, 40083b1a <tx_pwctrl_background+0x5a>
40083b12:	0020c0        	memw
40083b15:	0588      	l32i.n	a8, a5, 0
40083b17:	3d6807        	bbci	a8, 0, 40083b58 <tx_pwctrl_background+0x98>
40083b1a:	0020c0        	memw
40083b1d:	002582        	l32i	a8, a5, 0
40083b20:	258880        	extui	a8, a8, 24, 3
40083b23:	18fc      	bnez.n	a8, 40083b58 <tx_pwctrl_background+0x98>
40083b25:	fccf81        	l32r	a8, 40082e64 <set_tx_gain_table+0xbc>
40083b28:	20a110        	or	a10, a1, a1
40083b2b:	0008b2        	l8ui	a11, a8, 0
40083b2e:	23bb00        	sext	a11, a11, 7
40083b31:	ff70e5        	call8	40083240 <get_phy_target_power>
40083b34:	ffe1c1        	l32r	a12, 40083ab8 <phy_pwdet_onetime_en+0x3c>
40083b37:	ffe1b1        	l32r	a11, 40083abc <phy_pwdet_onetime_en+0x40>
40083b3a:	03ed      	mov.n	a14, a3
40083b3c:	02dd      	mov.n	a13, a2
40083b3e:	20a110        	or	a10, a1, a1
40083b41:	ffb3a5        	call8	4008367c <tx_pwctrl_cal>
40083b44:	feca31        	l32r	a3, 4008366c <set_chan_dig_gain+0x1cc>
40083b47:	381c      	movi.n	a8, 19
40083b49:	000322        	l8ui	a2, a3, 0
40083b4c:	103827        	bltu	a8, a2, 40083b60 <tx_pwctrl_background+0xa0>
40083b4f:	221b      	addi.n	a2, a2, 1
40083b51:	004322        	s8i	a2, a3, 0
40083b54:	000206        	j	40083b60 <tx_pwctrl_background+0xa0>
40083b57:	c32100        	movf	a2, a1, b0
40083b5a:	fe          	.byte 0xfe
40083b5b:	030c      	movi.n	a3, 0
40083b5d:	005232        	s16i	a3, a2, 0
40083b60:	000682        	l8ui	a8, a6, 0
40083b63:	0020c0        	memw
40083b66:	0558      	l32i.n	a5, a5, 0
40083b68:	0a1866        	bnei	a8, 1, 40083b76 <tx_pwctrl_background+0xb6>
40083b6b:	055f50        	extui	a5, a5, 31, 1
40083b6e:	e5ec      	bnez.n	a5, 40083ba0 <tx_pwctrl_background+0xe0>
40083b70:	004652        	s8i	a5, a6, 0
40083b73:	000a46        	j	40083ba0 <tx_pwctrl_background+0xe0>
40083b76:	26e507        	bbsi	a5, 0, 40083ba0 <tx_pwctrl_background+0xe0>
40083b79:	5395e5        	call8	400d74d8 <pwdet_sar2_init>
40083b7c:	feb851        	l32r	a5, 4008365c <set_chan_dig_gain+0x1bc>
40083b7f:	e27c      	movi.n	a2, -2
40083b81:	0020c0        	memw
40083b84:	0588      	l32i.n	a8, a5, 0
40083b86:	130c      	movi.n	a3, 1
40083b88:	102820        	and	a2, a8, a2
40083b8b:	0020c0        	memw
40083b8e:	0529      	s32i.n	a2, a5, 0
40083b90:	0020c0        	memw
40083b93:	0528      	l32i.n	a2, a5, 0
40083b95:	202230        	or	a2, a2, a3
40083b98:	0020c0        	memw
40083b9b:	0529      	s32i.n	a2, a5, 0
40083b9d:	004632        	s8i	a3, a6, 0
40083ba0:	000452        	l8ui	a5, a4, 0
40083ba3:	005516        	beqz	a5, 40083bac <tx_pwctrl_background+0xec>
40083ba6:	00a052        	movi	a5, 0
40083ba9:	004452        	s8i	a5, a4, 0
40083bac:	fedbe5        	call8	4008296c <wifi_track_pll_cap>
40083baf:	20a770        	or	a10, a7, a7
40083bb2:	fe2865        	call8	40081e38 <phy_exit_critical>
40083bb5:	000090        	retw

40083bb8 <esp_log_write>:
40083bb8:	00a136        	entry	a1, 80
40083bbb:	036152        	s32i	a5, a1, 12
40083bbe:	046162        	s32i	a6, a1, 16
40083bc1:	056172        	s32i	a7, a1, 20
40083bc4:	f03d      	nop.n
40083bc6:	f03d      	nop.n
40083bc8:	f03d      	nop.n
40083bca:	f03d      	nop.n
40083bcc:	f2ae51        	l32r	a5, 40080684 <_init_end+0x284>
40083bcf:	0558      	l32i.n	a5, a5, 0
40083bd1:	85cc      	bnez.n	a5, 40083bdd <esp_log_write+0x25>
40083bd3:	1a0c      	movi.n	a10, 1
40083bd5:	03d965        	call8	4008796c <xQueueCreateMutex>
40083bd8:	f2ab51        	l32r	a5, 40080684 <_init_end+0x284>
40083bdb:	05a9      	s32i.n	a10, a5, 0
40083bdd:	00a0d2        	movi	a13, 0
40083be0:	0aa0c2        	movi	a12, 10
40083be3:	20bdd0        	or	a11, a13, a13
40083be6:	f03d      	nop.n
40083be8:	f2a751        	l32r	a5, 40080684 <_init_end+0x284>
40083beb:	05a8      	l32i.n	a10, a5, 0
40083bed:	03f765        	call8	40087b64 <xQueueGenericReceive>
40083bf0:	11da16        	beqz	a10, 40083d11 <esp_log_write+0x159>
40083bf3:	0a0c      	movi.n	a10, 0
40083bf5:	000346        	j	40083c06 <esp_log_write+0x4e>
40083bf8:	a38100        	movltz	a8, a1, a0
40083bfb:	8a80f2        	lsi	f15, a0, 0x228
40083bfe:	0888b0        	lsx	f8, a8, a11
40083c01:	0b1387        	beq	a3, a8, 40083c10 <esp_log_write+0x58>
40083c04:	aa1b      	addi.n	a10, a10, 1
40083c06:	0a5d      	mov.n	a5, a10
40083c08:	f2a181        	l32r	a8, 4008068c <_init_end+0x28c>
40083c0b:	0898      	l32i.n	a9, a8, 0
40083c0d:	e83a97        	bltu	a10, a9, 40083bf9 <esp_log_write+0x41>
40083c10:	3e1597        	beq	a5, a9, 40083c52 <esp_log_write+0x9a>
40083c13:	f29d51        	l32r	a5, 40080688 <_init_end+0x288>
40083c16:	b05a50        	addx8	a5, a10, a5
40083c19:	012572        	l32i	a7, a5, 4
40083c1c:	247070        	extui	a7, a7, 0, 3
40083c1f:	1fa052        	movi	a5, 31
40083c22:	329957        	bne	a9, a5, 40083c58 <esp_log_write+0xa0>
40083c25:	f29a61        	l32r	a6, 40080690 <_init_end+0x290>
40083c28:	002652        	l32i	a5, a6, 0
40083c2b:	851b      	addi.n	a8, a5, 1
40083c2d:	0689      	s32i.n	a8, a6, 0
40083c2f:	f03d      	nop.n
40083c31:	f03d      	nop.n
40083c33:	f03d      	nop.n
40083c35:	f03d      	nop.n
40083c37:	f29461        	l32r	a6, 40080688 <_init_end+0x288>
40083c3a:	b06a60        	addx8	a6, a10, a6
40083c3d:	1155d0        	slli	a5, a5, 3
40083c40:	1688      	l32i.n	a8, a6, 4
40083c42:	248080        	extui	a8, a8, 0, 3
40083c45:	205850        	or	a5, a8, a5
40083c48:	1659      	s32i.n	a5, a6, 4
40083c4a:	56caa5        	call8	400da8f4 <heap_bubble_down>
40083c4d:	160c      	movi.n	a6, 1
40083c4f:	0001c6        	j	40083c5a <esp_log_write+0xa2>
40083c52:	060c      	movi.n	a6, 0
40083c54:	000086        	j	40083c5a <esp_log_write+0xa2>
40083c57:	160c00        	lsi	f0, a12, 88
40083c5a:	081656        	bnez	a6, 40083cdf <esp_log_write+0x127>
40083c5d:	f28d51        	l32r	a5, 40080694 <_init_end+0x294>
40083c60:	0558      	l32i.n	a5, a5, 0
40083c62:	000586        	j	40083c7c <esp_log_write+0xc4>
40083c65:	b55b00        	extui	a5, a0, 27, 12
40083c68:	03ad      	mov.n	a10, a3
40083c6a:	f28d81        	l32r	a8, 400806a0 <_init_end+0x2a0>
40083c6d:	0008e0        	callx8	a8
40083c70:	6acc      	bnez.n	a10, 40083c7a <esp_log_write+0xc2>
40083c72:	040572        	l8ui	a7, a5, 4
40083c75:	160c      	movi.n	a6, 1
40083c77:	000106        	j	40083c7f <esp_log_write+0xc7>
40083c7a:	0558      	l32i.n	a5, a5, 0
40083c7c:	fe6556        	bnez	a5, 40083c66 <esp_log_write+0xae>
40083c7f:	005656        	bnez	a6, 40083c88 <esp_log_write+0xd0>
40083c82:	f28551        	l32r	a5, 40080698 <_init_end+0x298>
40083c85:	002572        	l32i	a7, a5, 0
40083c88:	f28261        	l32r	a6, 40080690 <_init_end+0x290>
40083c8b:	0658      	l32i.n	a5, a6, 0
40083c8d:	851b      	addi.n	a8, a5, 1
40083c8f:	0689      	s32i.n	a8, a6, 0
40083c91:	f03d      	nop.n
40083c93:	f03d      	nop.n
40083c95:	f03d      	nop.n
40083c97:	f03d      	nop.n
40083c99:	f27c61        	l32r	a6, 4008068c <_init_end+0x28c>
40083c9c:	0668      	l32i.n	a6, a6, 0
40083c9e:	e81c      	movi.n	a8, 30
40083ca0:	243867        	bltu	a8, a6, 40083cc8 <esp_log_write+0x110>
40083ca3:	f27981        	l32r	a8, 40080688 <_init_end+0x288>
40083ca6:	b08680        	addx8	a8, a6, a8
40083ca9:	0839      	s32i.n	a3, a8, 0
40083cab:	1155d0        	slli	a5, a5, 3
40083cae:	243070        	extui	a3, a7, 0, 3
40083cb1:	203350        	or	a3, a3, a5
40083cb4:	1839      	s32i.n	a3, a8, 4
40083cb6:	661b      	addi.n	a6, a6, 1
40083cb8:	f03d      	nop.n
40083cba:	f03d      	nop.n
40083cbc:	f03d      	nop.n
40083cbe:	f27331        	l32r	a3, 4008068c <_init_end+0x28c>
40083cc1:	0369      	s32i.n	a6, a3, 0
40083cc3:	000606        	j	40083cdf <esp_log_write+0x127>
40083cc6:	610000        	xsr.lbeg	a0
40083cc9:	32f270        	orbc	b15, b2, b7
40083ccc:	d00066        	bnei	a0, -1, 40083ca0 <esp_log_write+0xe8>
40083ccf:	701155        	call4	400f3de4 <_text_end+0x7507>
40083cd2:	502430        	lsi	f3, a4, 0x140
40083cd5:	322033        	lsi	f3, a0, 200
40083cd8:	0c0166        	bnei	a1, -1, 40083ce8 <esp_log_write+0x130>
40083cdb:	650a      	add.n	a6, a5, a0
40083cdd:	0c56c1        	l32r	a12, 40046e38 <lld_evt_get_next_free_slot+0x50c>
40083ce0:	cd0d      	lsi	f0, a13, 52
40083ce2:	bd0d      	lsi	f0, a13, 52
40083ce4:	310d      	lsi	f0, a1, 4
40083ce6:	a8f267        	bbsi	a2, 22, 40083c92 <esp_log_write+0xda>
40083ce9:	afa503        	lsi	f0, a5, 0x2bc
40083cec:	372703        	lsi	f0, a7, 220
40083cef:	012d20        	slli	a2, a13, 30
40083cf2:	a129      	s32i.n	a2, a1, 40
40083cf4:	30c1b2        	addi	a11, a1, 48
40083cf7:	91b9      	s32i.n	a11, a1, 36
40083cf9:	cd0c      	movi.n	a13, 12
40083cfb:	b1d9      	s32i.n	a13, a1, 44
40083cfd:	f03d      	nop.n
40083cff:	f03d      	nop.n
40083d01:	f03d      	nop.n
40083d03:	f03d      	nop.n
40083d05:	f26521        	l32r	a2, 4008069c <_init_end+0x29c>
40083d08:	0228      	l32i.n	a2, a2, 0
40083d0a:	01cd      	mov.n	a12, a1
40083d0c:	04ad      	mov.n	a10, a4
40083d0e:	0002e0        	callx8	a2
40083d11:	f01d      	retw.n
	...

40083d14 <esp_log_early_timestamp>:
40083d14:	004136        	entry	a1, 32
40083d17:	092be5        	call8	4008cfd4 <xthal_get_ccount>
40083d1a:	f1e321        	l32r	a2, 400804a8 <_init_end+0xa8>
40083d1d:	0298      	l32i.n	a9, a2, 0
40083d1f:	1189b0        	slli	a8, a9, 5
40083d22:	c08890        	sub	a8, a8, a9
40083d25:	a08890        	addx4	a8, a8, a9
40083d28:	1128d0        	slli	a2, a8, 3
40083d2b:	c22a20        	quou	a2, a10, a2
40083d2e:	f01d      	retw.n

40083d30 <esp_log_timestamp>:
40083d30:	004136        	entry	a1, 32
40083d33:	04d265        	call8	40088a58 <xTaskGetSchedulerState>
40083d36:	071a66        	bnei	a10, 1, 40083d41 <esp_log_timestamp+0x11>
40083d39:	fffda5        	call8	40083d14 <esp_log_early_timestamp>
40083d3c:	0a2d      	mov.n	a2, a10
40083d3e:	f01d      	retw.n
40083d40:	582100        	ssxp	f2, a1, a0
40083d43:	0228f2        	l32i	a15, a8, 8
40083d46:	f2cc      	bnez.n	a2, 40083d59 <esp_log_timestamp+0x29>
40083d48:	03eb20        	rsr.prid	a2
40083d4b:	042d20        	extui	a2, a2, 13, 1
40083d4e:	007256        	bnez	a2, 40083d59 <esp_log_timestamp+0x29>
40083d51:	fffc25        	call8	40083d14 <esp_log_early_timestamp>
40083d54:	f25421        	l32r	a2, 400806a4 <_init_end+0x2a4>
40083d57:	02a9      	s32i.n	a10, a2, 0
40083d59:	048e25        	call8	4008863c <xTaskGetTickCount>
40083d5c:	f25221        	l32r	a2, 400806a4 <_init_end+0x2a4>
40083d5f:	002222        	l32i	a2, a2, 0
40083d62:	802a20        	add	a2, a10, a2
40083d65:	000090        	retw

40083d68 <xPortInterruptedFromISRContext>:
40083d68:	004136        	entry	a1, 32
40083d6b:	03eb80        	rsr.prid	a8
40083d6e:	048d80        	extui	a8, a8, 13, 1
40083d71:	f24d21        	l32r	a2, 400806a8 <_init_end+0x2a8>
40083d74:	a08820        	addx4	a8, a8, a2
40083d77:	0888      	l32i.n	a8, a8, 0
40083d79:	020c      	movi.n	a2, 0
40083d7b:	190c      	movi.n	a9, 1
40083d7d:	932980        	movnez	a2, a9, a8
40083d80:	f01d      	retw.n
	...

40083d84 <_xt_panic>:
40083d84:	010d      	mov.n	a0, a1
40083d86:	ffd112        	addmi	a1, a1, 0xffffff00
40083d89:	40c112        	addi	a1, a1, 64
40083d8c:	4109      	s32i.n	a0, a1, 16
40083d8e:	49d100        	s32e	a0, a1, -12
40083d91:	03e600        	rsr.ps	a0
40083d94:	2109      	s32i.n	a0, a1, 8
40083d96:	03b100        	rsr.epc1	a0
40083d99:	016102        	s32i	a0, a1, 4
40083d9c:	49c100        	s32e	a0, a1, -16
40083d9f:	0f61c2        	s32i	a12, a1, 60
40083da2:	1061d2        	s32i	a13, a1, 64
40083da5:	061905        	call0	40089f38 <_xt_context_save>
40083da8:	03e800        	rsr.exccause	a0
40083dab:	146102        	s32i	a0, a1, 80
40083dae:	03ee00        	rsr.excvaddr	a0
40083db1:	156102        	s32i	a0, a1, 84
40083db4:	03d100        	rsr.excsave1	a0
40083db7:	3109      	s32i.n	a0, a1, 12
40083db9:	f1e901        	l32r	a0, 40080560 <_init_end+0x160>
40083dbc:	13e600        	wsr.ps	a0
40083dbf:	016d      	mov.n	a6, a1
40083dc1:	075f95        	call4	4008b3bc <panicHandler>

40083dc4 <panic_print_hex>:
40083dc4:	f23a31        	l32r	a3, 400806ac <_init_end+0x2ac>
40083dc7:	840c      	movi.n	a4, 8

40083dc9 <panic_print_hex_loop>:
40083dc9:	7358      	l32i.n	a5, a3, 28
40083dcb:	755050        	extui	a5, a5, 16, 8
40083dce:	f7d5e6        	bgei	a5, 64, 40083dc9 <panic_print_hex_loop>
40083dd1:	355c20        	extui	a5, a2, 28, 4
40083dd4:	0595e6        	bgei	a5, 10, 40083ddd <panic_print_hex_a>
40083dd7:	30c552        	addi	a5, a5, 48
40083dda:	000086        	j	40083de0 <panic_print_hex_ok>

40083ddd <panic_print_hex_a>:
40083ddd:	37c552        	addi	a5, a5, 55

40083de0 <panic_print_hex_ok>:
40083de0:	0359      	s32i.n	a5, a3, 0
40083de2:	1122c0        	slli	a2, a2, 4
40083de5:	440b      	addi.n	a4, a4, -1
40083de7:	fde456        	bnez	a4, 40083dc9 <panic_print_hex_loop>
40083dea:	052c      	movi.n	a5, 32
40083dec:	0359      	s32i.n	a5, a3, 0
40083dee:	f00d      	ret.n

40083df0 <_xt_kernel_exc>:
40083df0:	004100        	break	1, 0
40083df3:	03a002        	movi	a0, 3
40083df6:	13e800        	wsr.exccause	a0
40083df9:	fff885        	call0	40083d84 <_xt_panic>
40083dfc:	003000        	rfe
	...

40083e00 <_xt_to_alloca_exc>:
40083e00:	fc24c5        	call0	40080050 <_xt_alloca_exc>
	...

40083e04 <_xt_to_syscall_exc>:
40083e04:	000b05        	call0	40083eb8 <_xt_syscall_exc>
	...

40083e08 <_xt_to_coproc_exc>:
40083e08:	000f45        	call0	40083f00 <_xt_coproc_exc>
	...

40083e0c <_xt_user_exc>:
40083e0c:	03e800        	rsr.exccause	a0
40083e0f:	024066        	bnei	a0, 4, 40083e15 <_xt_user_exc+0x9>
40083e12:	009986        	j	4008407c <_xt_lowint1>
40083e15:	efc0f6        	bgeui	a0, 32, 40083e08 <_xt_to_coproc_exc>
40083e18:	e45026        	beqi	a0, 5, 40083e00 <_xt_to_alloca_exc>
40083e1b:	e51026        	beqi	a0, 1, 40083e04 <_xt_to_syscall_exc>
40083e1e:	010d      	mov.n	a0, a1
40083e20:	ffd112        	addmi	a1, a1, 0xffffff00
40083e23:	40c112        	addi	a1, a1, 64
40083e26:	4109      	s32i.n	a0, a1, 16
40083e28:	49d100        	s32e	a0, a1, -12
40083e2b:	03e600        	rsr.ps	a0
40083e2e:	2109      	s32i.n	a0, a1, 8
40083e30:	03b100        	rsr.epc1	a0
40083e33:	1109      	s32i.n	a0, a1, 4
40083e35:	49c100        	s32e	a0, a1, -16
40083e38:	f1c9      	s32i.n	a12, a1, 60
40083e3a:	1061d2        	s32i	a13, a1, 64
40083e3d:	060f85        	call0	40089f38 <_xt_context_save>
40083e40:	03e800        	rsr.exccause	a0
40083e43:	146102        	s32i	a0, a1, 80
40083e46:	03ee00        	rsr.excvaddr	a0
40083e49:	156102        	s32i	a0, a1, 84
40083e4c:	03d100        	rsr.excsave1	a0
40083e4f:	3109      	s32i.n	a0, a1, 12
40083e51:	f21701        	l32r	a0, 400806b0 <_init_end+0x2b0>
40083e54:	13e600        	wsr.ps	a0
40083e57:	3138      	l32i.n	a3, a1, 12
40083e59:	49c130        	s32e	a3, a1, -16
40083e5c:	4138      	l32i.n	a3, a1, 16
40083e5e:	49d130        	s32e	a3, a1, -12
40083e61:	03b100        	rsr.epc1	a0
40083e64:	f21451        	l32r	a5, 400806b4 <_init_end+0x2b4>
40083e67:	002010        	rsync
40083e6a:	200050        	or	a0, a0, a5
40083e6d:	900500        	addx2	a0, a5, a0
40083e70:	03e820        	rsr.exccause	a2
40083e73:	03e820        	rsr.exccause	a2
40083e76:	f21031        	l32r	a3, 400806b8 <_init_end+0x2b8>
40083e79:	03eb40        	rsr.prid	a4
40083e7c:	044d40        	extui	a4, a4, 13, 1
40083e7f:	902240        	addx2	a2, a2, a4
40083e82:	a04230        	addx4	a4, a2, a3
40083e85:	0448      	l32i.n	a4, a4, 0
40083e87:	206110        	or	a6, a1, a1
40083e8a:	0004d0        	callx4	a4
40083e8d:	061105        	call0	40089fa0 <_xt_context_restore>
40083e90:	2108      	l32i.n	a0, a1, 8
40083e92:	13e600        	wsr.ps	a0
40083e95:	1108      	l32i.n	a0, a1, 4
40083e97:	13b100        	wsr.epc1	a0
40083e9a:	3108      	l32i.n	a0, a1, 12
40083e9c:	4118      	l32i.n	a1, a1, 16
40083e9e:	002010        	rsync
40083ea1:	003000        	rfe

40083ea4 <_xt_user_exit>:
40083ea4:	2108      	l32i.n	a0, a1, 8
40083ea6:	13e600        	wsr.ps	a0
40083ea9:	1108      	l32i.n	a0, a1, 4
40083eab:	13b100        	wsr.epc1	a0
40083eae:	3108      	l32i.n	a0, a1, 12
40083eb0:	4118      	l32i.n	a1, a1, 16
40083eb2:	002010        	rsync
40083eb5:	003000        	rfe

40083eb8 <_xt_syscall_exc>:
40083eb8:	ffd112        	addmi	a1, a1, 0xffffff00
40083ebb:	40c112        	addi	a1, a1, 64
40083ebe:	f1c9      	s32i.n	a12, a1, 60
40083ec0:	1061d2        	s32i	a13, a1, 64
40083ec3:	060745        	call0	40089f38 <_xt_context_save>
40083ec6:	03b120        	rsr.epc1	a2
40083ec9:	323b      	addi.n	a3, a2, 3
40083ecb:	030100        	rsr.lend	a0
40083ece:	0e9307        	bne	a3, a0, 40083ee0 <_xt_syscall_exc+0x28>
40083ed1:	030200        	rsr.lcount	a0
40083ed4:	008016        	beqz	a0, 40083ee0 <_xt_syscall_exc+0x28>
40083ed7:	ffc002        	addi	a0, a0, -1
40083eda:	030030        	rsr.lbeg	a3
40083edd:	130200        	wsr.lcount	a0
40083ee0:	13b130        	wsr.epc1	a3
40083ee3:	060bc5        	call0	40089fa0 <_xt_context_restore>
40083ee6:	01d112        	addmi	a1, a1, 0x100
40083ee9:	c0c112        	addi	a1, a1, -64
40083eec:	f07c      	movi.n	a0, -1
40083eee:	932020        	movnez	a2, a0, a2
40083ef1:	03d100        	rsr.excsave1	a0
40083ef4:	003000        	rfe
40083ef7:	5d8600        	lsi	f0, a6, 0x174
40083efa:	860000        	lsi	f0, a0, 0x218
40083efd:	4f          	.byte 0x4f
	...

40083f00 <_xt_coproc_exc>:
40083f00:	010d      	mov.n	a0, a1
40083f02:	ffd112        	addmi	a1, a1, 0xffffff00
40083f05:	40c112        	addi	a1, a1, 64
40083f08:	4109      	s32i.n	a0, a1, 16
40083f0a:	49d100        	s32e	a0, a1, -12
40083f0d:	03e600        	rsr.ps	a0
40083f10:	2109      	s32i.n	a0, a1, 8
40083f12:	03b100        	rsr.epc1	a0
40083f15:	1109      	s32i.n	a0, a1, 4
40083f17:	03d100        	rsr.excsave1	a0
40083f1a:	3109      	s32i.n	a0, a1, 12
40083f1c:	49c100        	s32e	a0, a1, -16
40083f1f:	f1e701        	l32r	a0, 400806bc <_init_end+0x2bc>
40083f22:	0109      	s32i.n	a0, a1, 0
40083f24:	03e800        	rsr.exccause	a0
40083f27:	8159      	s32i.n	a5, a1, 32
40083f29:	e0c052        	addi	a5, a0, -32
40083f2c:	5129      	s32i.n	a2, a1, 20
40083f2e:	6139      	s32i.n	a3, a1, 24
40083f30:	7149      	s32i.n	a4, a1, 28
40083f32:	1261f2        	s32i	a15, a1, 72
40083f35:	062d05        	call0	4008a208 <_frxt_task_coproc_state>
40083f38:	fbcf16        	beqz	a15, 40083ef8 <_xt_syscall_exc+0x40>
40083f3b:	f1e101        	l32r	a0, 400806c0 <_init_end+0x2c0>
40083f3e:	03e040        	rsr.cpenable	a4
40083f41:	a00500        	addx4	a0, a5, a0
40083f44:	0008      	l32i.n	a0, a0, 0
40083f46:	f1df21        	l32r	a2, 400806c4 <_init_end+0x2c4>
40083f49:	03eb30        	rsr.prid	a3
40083f4c:	043d30        	extui	a3, a3, 13, 1
40083f4f:	a02320        	addx4	a2, a3, a2
40083f52:	0228      	l32i.n	a2, a2, 0
40083f54:	48c222        	addi	a2, a2, 72
40083f57:	0239      	s32i.n	a3, a2, 0
40083f59:	420c      	movi.n	a2, 4
40083f5b:	822230        	mull	a2, a2, a3
40083f5e:	f1da31        	l32r	a3, 400806c8 <_init_end+0x2c8>
40083f61:	332a      	add.n	a3, a3, a2
40083f63:	f42000        	extui	a2, a0, 0, 16
40083f66:	204420        	or	a4, a4, a2
40083f69:	13e040        	wsr.cpenable	a4
40083f6c:	a03530        	addx4	a3, a5, a3
40083f6f:	0328      	l32i.n	a2, a3, 0
40083f71:	03f9      	s32i.n	a15, a3, 0
40083f73:	002010        	rsync
40083f76:	821f27        	beq	a15, a2, 40083efc <_xt_syscall_exc+0x44>
40083f79:	067216        	beqz	a2, 40083fe4 <_xt_coproc_exc+0xe4>
40083f7c:	001242        	l16ui	a4, a2, 0
40083f7f:	610407        	bnone	a4, a0, 40083fe4 <_xt_coproc_exc+0xe4>
40083f82:	f1d251        	l32r	a5, 400806cc <_init_end+0x2cc>
40083f85:	304400        	xor	a4, a4, a0
40083f88:	005242        	s16i	a4, a2, 0
40083f8b:	454000        	extui	a4, a0, 16, 5
40083f8e:	a05450        	addx4	a5, a4, a5
40083f91:	011242        	l16ui	a4, a2, 2
40083f94:	0558      	l32i.n	a5, a5, 0
40083f96:	204400        	or	a4, a4, a0
40083f99:	015242        	s16i	a4, a2, 2
40083f9c:	2228      	l32i.n	a2, a2, 8
40083f9e:	453000        	extui	a3, a0, 16, 5
40083fa1:	225a      	add.n	a2, a2, a5
40083fa3:	d3fc      	bnez.n	a3, 40083fe4 <_xt_coproc_exc+0xe4>
40083fa5:	e33e80        	rur.fcr	a3
40083fa8:	0239      	s32i.n	a3, a2, 0
40083faa:	e33e90        	rur.fsr	a3
40083fad:	1239      	s32i.n	a3, a2, 4
40083faf:	024203        	ssi	f0, a2, 8
40083fb2:	034213        	ssi	f1, a2, 12
40083fb5:	044223        	ssi	f2, a2, 16
40083fb8:	054233        	ssi	f3, a2, 20
40083fbb:	064243        	ssi	f4, a2, 24
40083fbe:	074253        	ssi	f5, a2, 28
40083fc1:	084263        	ssi	f6, a2, 32
40083fc4:	094273        	ssi	f7, a2, 36
40083fc7:	0a4283        	ssi	f8, a2, 40
40083fca:	0b4293        	ssi	f9, a2, 44
40083fcd:	0c42a3        	ssi	f10, a2, 48
40083fd0:	0d42b3        	ssi	f11, a2, 52
40083fd3:	0e42c3        	ssi	f12, a2, 56
40083fd6:	0f42d3        	ssi	f13, a2, 60
40083fd9:	1042e3        	ssi	f14, a2, 64
40083fdc:	1142f3        	ssi	f15, a2, 68
40083fdf:	000046        	j	40083fe4 <_xt_coproc_exc+0xe4>
40083fe2:	320000        	orbc	b0, b0, b0
40083fe5:	1f          	.byte 0x1f
40083fe6:	b94101        	l32r	a0, 400724ec <__udivmoddi4+0xd8f8>
40083fe9:	0307f1        	l32r	a15, 40044c08 <llcp_pdu_handler_tab_p_get+0xca4>
40083fec:	5e          	.byte 0x5e
40083fed:	303300        	xor	a3, a3, a0
40083ff0:	015f32        	s16i	a3, a15, 2
40083ff3:	453000        	extui	a3, a0, 16, 5
40083ff6:	a04340        	addx4	a4, a3, a4
40083ff9:	0448      	l32i.n	a4, a4, 0
40083ffb:	2f58      	l32i.n	a5, a15, 8
40083ffd:	245a      	add.n	a2, a4, a5
40083fff:	b3fc      	bnez.n	a3, 4008403e <_xt_coproc_exc+0x13e>
40084001:	0238      	l32i.n	a3, a2, 0
40084003:	f3e830        	wur.fcr	a3
40084006:	1238      	l32i.n	a3, a2, 4
40084008:	f3e930        	wur.fsr	a3
4008400b:	020203        	lsi	f0, a2, 8
4008400e:	030213        	lsi	f1, a2, 12
40084011:	040223        	lsi	f2, a2, 16
40084014:	050233        	lsi	f3, a2, 20
40084017:	060243        	lsi	f4, a2, 24
4008401a:	070253        	lsi	f5, a2, 28
4008401d:	080263        	lsi	f6, a2, 32
40084020:	090273        	lsi	f7, a2, 36
40084023:	0a0283        	lsi	f8, a2, 40
40084026:	0b0293        	lsi	f9, a2, 44
40084029:	0c02a3        	lsi	f10, a2, 48
4008402c:	0d02b3        	lsi	f11, a2, 52
4008402f:	0e02c3        	lsi	f12, a2, 56
40084032:	0f02d3        	lsi	f13, a2, 60
40084035:	1002e3        	lsi	f14, a2, 64
40084038:	1102f3        	lsi	f15, a2, 68
4008403b:	ffffc6        	j	4008403e <_xt_coproc_exc+0x13e>
4008403e:	1221f2        	l32i	a15, a1, 72
40084041:	8158      	l32i.n	a5, a1, 32
40084043:	7148      	l32i.n	a4, a1, 28
40084045:	6138      	l32i.n	a3, a1, 24
40084047:	5128      	l32i.n	a2, a1, 20
40084049:	ffe585        	call0	40083ea4 <_xt_user_exit>
4008404c:	021f22        	l16ui	a2, a15, 4
4008404f:	eb0207        	bnone	a2, a0, 4008403e <_xt_coproc_exc+0x13e>
40084052:	102200        	and	a2, a2, a0
40084055:	742020        	extui	a2, a2, 0, 8
40084058:	9169      	s32i.n	a6, a1, 36
4008405a:	a179      	s32i.n	a7, a1, 40
4008405c:	1061d2        	s32i	a13, a1, 64
4008405f:	1161e2        	s32i	a14, a1, 68
40084062:	05fe05        	call0	4008a044 <_xt_coproc_restorecs>
40084065:	9168      	l32i.n	a6, a1, 36
40084067:	a178      	l32i.n	a7, a1, 40
40084069:	1021d2        	l32i	a13, a1, 64
4008406c:	1121e2        	l32i	a14, a1, 68
4008406f:	fff2c6        	j	4008403e <_xt_coproc_exc+0x13e>
40084072:	400c      	movi.n	a0, 4
40084074:	13e800        	wsr.exccause	a0
40084077:	ffd0c5        	call0	40083d84 <_xt_panic>
	...

4008407c <_xt_lowint1>:
4008407c:	010d      	mov.n	a0, a1
4008407e:	ffd112        	addmi	a1, a1, 0xffffff00
40084081:	40c112        	addi	a1, a1, 64
40084084:	4109      	s32i.n	a0, a1, 16
40084086:	03e600        	rsr.ps	a0
40084089:	2109      	s32i.n	a0, a1, 8
4008408b:	03b100        	rsr.epc1	a0
4008408e:	1109      	s32i.n	a0, a1, 4
40084090:	03d100        	rsr.excsave1	a0
40084093:	3109      	s32i.n	a0, a1, 12
40084095:	f18901        	l32r	a0, 400806bc <_init_end+0x2bc>
40084098:	006102        	s32i	a0, a1, 0
4008409b:	200110        	or	a0, a1, a1
4008409e:	13d100        	wsr.excsave1	a0
400840a1:	05fd85        	call0	4008a07c <_frxt_int_enter>
400840a4:	f18b01        	l32r	a0, 400806d0 <_init_end+0x2d0>
400840a7:	13e600        	wsr.ps	a0
400840aa:	002010        	rsync
400840ad:	03e420        	rsr.intenable	a2
400840b0:	03e230        	rsr.interrupt	a3
400840b3:	f18841        	l32r	a4, 400806d4 <_init_end+0x2d4>
400840b6:	102230        	and	a2, a2, a3
400840b9:	102240        	and	a2, a2, a4
400840bc:	059216        	beqz	a2, 40084119 <_xt_lowint1+0x9d>
400840bf:	03d100        	rsr.excsave1	a0
400840c2:	032032        	l32i	a3, a0, 12
400840c5:	49c130        	s32e	a3, a1, -16
400840c8:	042032        	l32i	a3, a0, 16
400840cb:	49d130        	s32e	a3, a1, -12
400840ce:	03b100        	rsr.epc1	a0
400840d1:	f17841        	l32r	a4, 400806b4 <_init_end+0x2b4>
400840d4:	200040        	or	a0, a0, a4
400840d7:	900400        	addx2	a0, a4, a0
400840da:	420b      	addi.n	a4, a2, -1
400840dc:	102240        	and	a2, a2, a4
400840df:	ff7256        	bnez	a2, 400840da <_xt_lowint1+0x5e>
400840e2:	441b      	addi.n	a4, a4, 1
400840e4:	034c      	movi.n	a3, 64
400840e6:	13e340        	wsr.intclear	a4
400840e9:	231347        	beq	a3, a4, 40084110 <_xt_lowint1+0x94>
400840ec:	f31c      	movi.n	a3, 31
400840ee:	40f440        	nsau	a4, a4
400840f1:	c03340        	sub	a3, a3, a4
400840f4:	03ebc0        	rsr.prid	a12
400840f7:	04cdc0        	extui	a12, a12, 13, 1
400840fa:	9033c0        	addx2	a3, a3, a12
400840fd:	f17641        	l32r	a4, 400806d8 <_init_end+0x2d8>
40084100:	b03340        	addx8	a3, a3, a4
40084103:	0348      	l32i.n	a4, a3, 0
40084105:	062d      	mov.n	a2, a6
40084107:	1368      	l32i.n	a6, a3, 4
40084109:	0004d0        	callx4	a4
4008410c:	ffe746        	j	400840ad <_xt_lowint1+0x31>
4008410f:	062d00        	lsi	f0, a13, 24
40084112:	060015        	call4	4008a114 <_frxt_timer_int>
40084115:	ffe506        	j	400840ad <_xt_lowint1+0x31>
40084118:	fa8500        	mov.s	f8, f5
4008411b:	05          	.byte 0x5

4008411c <_xt_medint2>:
4008411c:	010d      	mov.n	a0, a1
4008411e:	ffd112        	addmi	a1, a1, 0xffffff00
40084121:	40c112        	addi	a1, a1, 64
40084124:	4109      	s32i.n	a0, a1, 16
40084126:	03c200        	rsr.eps2	a0
40084129:	2109      	s32i.n	a0, a1, 8
4008412b:	03b200        	rsr.epc2	a0
4008412e:	1109      	s32i.n	a0, a1, 4
40084130:	03d200        	rsr.excsave2	a0
40084133:	3109      	s32i.n	a0, a1, 12
40084135:	f16901        	l32r	a0, 400806dc <_init_end+0x2dc>
40084138:	006102        	s32i	a0, a1, 0
4008413b:	200110        	or	a0, a1, a1
4008413e:	13d200        	wsr.excsave2	a0
40084141:	05f385        	call0	4008a07c <_frxt_int_enter>
40084144:	f16701        	l32r	a0, 400806e0 <_init_end+0x2e0>
40084147:	13e600        	wsr.ps	a0
4008414a:	002010        	rsync
4008414d:	03e420        	rsr.intenable	a2
40084150:	03e230        	rsr.interrupt	a3
40084153:	f16441        	l32r	a4, 400806e4 <_init_end+0x2e4>
40084156:	102230        	and	a2, a2, a3
40084159:	102240        	and	a2, a2, a4
4008415c:	055216        	beqz	a2, 400841b5 <_xt_medint2+0x99>
4008415f:	03d200        	rsr.excsave2	a0
40084162:	032032        	l32i	a3, a0, 12
40084165:	49c130        	s32e	a3, a1, -16
40084168:	042032        	l32i	a3, a0, 16
4008416b:	49d130        	s32e	a3, a1, -12
4008416e:	03b200        	rsr.epc2	a0
40084171:	f15041        	l32r	a4, 400806b4 <_init_end+0x2b4>
40084174:	200040        	or	a0, a0, a4
40084177:	900400        	addx2	a0, a4, a0
4008417a:	420b      	addi.n	a4, a2, -1
4008417c:	102240        	and	a2, a2, a4
4008417f:	ff7256        	bnez	a2, 4008417a <_xt_medint2+0x5e>
40084182:	441b      	addi.n	a4, a4, 1
40084184:	034c      	movi.n	a3, 64
40084186:	13e340        	wsr.intclear	a4
40084189:	231347        	beq	a3, a4, 400841b0 <_xt_medint2+0x94>
4008418c:	f31c      	movi.n	a3, 31
4008418e:	40f440        	nsau	a4, a4
40084191:	c03340        	sub	a3, a3, a4
40084194:	03ebc0        	rsr.prid	a12
40084197:	04cdc0        	extui	a12, a12, 13, 1
4008419a:	9033c0        	addx2	a3, a3, a12
4008419d:	f14e41        	l32r	a4, 400806d8 <_init_end+0x2d8>
400841a0:	b03340        	addx8	a3, a3, a4
400841a3:	0348      	l32i.n	a4, a3, 0
400841a5:	062d      	mov.n	a2, a6
400841a7:	1368      	l32i.n	a6, a3, 4
400841a9:	0004d0        	callx4	a4
400841ac:	ffe746        	j	4008414d <_xt_medint2+0x31>
400841af:	e64600        	lsi	f0, a6, 0x398
400841b2:	ff          	.byte 0xff
400841b3:	c50000        	extui	a0, a0, 16, 13
400841b6:	f0          	.byte 0xf0
400841b7:	05          	.byte 0x5

400841b8 <_xt_medint2_exit>:
400841b8:	2108      	l32i.n	a0, a1, 8
400841ba:	13c200        	wsr.eps2	a0
400841bd:	1108      	l32i.n	a0, a1, 4
400841bf:	13b200        	wsr.epc2	a0
400841c2:	3108      	l32i.n	a0, a1, 12
400841c4:	4118      	l32i.n	a1, a1, 16
400841c6:	002010        	rsync
400841c9:	003210        	rfi	2

400841cc <_xt_medint3>:
400841cc:	010d      	mov.n	a0, a1
400841ce:	ffd112        	addmi	a1, a1, 0xffffff00
400841d1:	40c112        	addi	a1, a1, 64
400841d4:	4109      	s32i.n	a0, a1, 16
400841d6:	03c300        	rsr.eps3	a0
400841d9:	2109      	s32i.n	a0, a1, 8
400841db:	03b300        	rsr.epc3	a0
400841de:	1109      	s32i.n	a0, a1, 4
400841e0:	03d300        	rsr.excsave3	a0
400841e3:	3109      	s32i.n	a0, a1, 12
400841e5:	f14001        	l32r	a0, 400806e8 <_init_end+0x2e8>
400841e8:	006102        	s32i	a0, a1, 0
400841eb:	200110        	or	a0, a1, a1
400841ee:	13d300        	wsr.excsave3	a0
400841f1:	05e885        	call0	4008a07c <_frxt_int_enter>
400841f4:	f12f01        	l32r	a0, 400806b0 <_init_end+0x2b0>
400841f7:	13e600        	wsr.ps	a0
400841fa:	002010        	rsync
400841fd:	03e420        	rsr.intenable	a2
40084200:	03e230        	rsr.interrupt	a3
40084203:	f13a41        	l32r	a4, 400806ec <_init_end+0x2ec>
40084206:	102230        	and	a2, a2, a3
40084209:	102240        	and	a2, a2, a4
4008420c:	055216        	beqz	a2, 40084265 <_xt_medint3+0x99>
4008420f:	03d300        	rsr.excsave3	a0
40084212:	032032        	l32i	a3, a0, 12
40084215:	49c130        	s32e	a3, a1, -16
40084218:	042032        	l32i	a3, a0, 16
4008421b:	49d130        	s32e	a3, a1, -12
4008421e:	03b300        	rsr.epc3	a0
40084221:	f12441        	l32r	a4, 400806b4 <_init_end+0x2b4>
40084224:	200040        	or	a0, a0, a4
40084227:	900400        	addx2	a0, a4, a0
4008422a:	420b      	addi.n	a4, a2, -1
4008422c:	102240        	and	a2, a2, a4
4008422f:	ff7256        	bnez	a2, 4008422a <_xt_medint3+0x5e>
40084232:	441b      	addi.n	a4, a4, 1
40084234:	034c      	movi.n	a3, 64
40084236:	13e340        	wsr.intclear	a4
40084239:	231347        	beq	a3, a4, 40084260 <_xt_medint3+0x94>
4008423c:	f31c      	movi.n	a3, 31
4008423e:	40f440        	nsau	a4, a4
40084241:	c03340        	sub	a3, a3, a4
40084244:	03ebc0        	rsr.prid	a12
40084247:	04cdc0        	extui	a12, a12, 13, 1
4008424a:	9033c0        	addx2	a3, a3, a12
4008424d:	f12241        	l32r	a4, 400806d8 <_init_end+0x2d8>
40084250:	b03340        	addx8	a3, a3, a4
40084253:	0348      	l32i.n	a4, a3, 0
40084255:	062d      	mov.n	a2, a6
40084257:	1368      	l32i.n	a6, a3, 4
40084259:	0004d0        	callx4	a4
4008425c:	ffe746        	j	400841fd <_xt_medint3+0x31>
4008425f:	e64600        	lsi	f0, a6, 0x398
40084262:	ff          	.byte 0xff
40084263:	c50000        	extui	a0, a0, 16, 13
40084266:	e5          	.byte 0xe5
40084267:	05          	.byte 0x5

40084268 <_xt_medint3_exit>:
40084268:	2108      	l32i.n	a0, a1, 8
4008426a:	13c300        	wsr.eps3	a0
4008426d:	1108      	l32i.n	a0, a1, 4
4008426f:	13b300        	wsr.epc3	a0
40084272:	3108      	l32i.n	a0, a1, 12
40084274:	4118      	l32i.n	a1, a1, 16
40084276:	002010        	rsync
40084279:	003310        	rfi	3

4008427c <find_containing_heap>:
4008427c:	004136        	entry	a1, 32
4008427f:	f11c81        	l32r	a8, 400806f0 <_init_end+0x2f0>
40084282:	0888      	l32i.n	a8, a8, 0
40084284:	000406        	j	40084298 <find_containing_heap+0x1c>
40084287:	789800        	lsi	f0, a8, 0x1e0
4008428a:	898c      	beqz.n	a9, 40084296 <find_containing_heap+0x1a>
4008428c:	3898      	l32i.n	a9, a8, 12
4008428e:	042297        	blt	a2, a9, 40084296 <find_containing_heap+0x1a>
40084291:	4898      	l32i.n	a9, a8, 16
40084293:	092297        	blt	a2, a9, 400842a0 <find_containing_heap+0x24>
40084296:	8888      	l32i.n	a8, a8, 32
40084298:	fec856        	bnez	a8, 40084288 <find_containing_heap+0xc>
4008429b:	020c      	movi.n	a2, 0
4008429d:	f01d      	retw.n
4008429f:	082d00        	lsx	f2, a13, a0
400842a2:	f01d      	retw.n

400842a4 <dram_alloc_to_iram_addr>:
400842a4:	004136        	entry	a1, 32
400842a7:	803230        	add	a3, a2, a3
400842aa:	fcc3a2        	addi	a10, a3, -4
400842ad:	f11191        	l32r	a9, 400806f4 <_init_end+0x2f4>
400842b0:	809290        	add	a9, a2, a9
400842b3:	f11181        	l32r	a8, 400806f8 <_init_end+0x2f8>
400842b6:	0db897        	bgeu	a8, a9, 400842c7 <dram_alloc_to_iram_addr+0x23>
400842b9:	f110d1        	l32r	a13, 400806fc <_init_end+0x2fc>
400842bc:	f111c1        	l32r	a12, 40080700 <_init_end+0x300>
400842bf:	bb2c      	movi.n	a11, 43
400842c1:	f110a1        	l32r	a10, 40080704 <_init_end+0x304>
400842c4:	56c125        	call8	400daed8 <__assert_func>
400842c7:	f11091        	l32r	a9, 40080708 <_init_end+0x308>
400842ca:	339a      	add.n	a3, a3, a9
400842cc:	f10b81        	l32r	a8, 400806f8 <_init_end+0x2f8>
400842cf:	0db837        	bgeu	a8, a3, 400842e0 <dram_alloc_to_iram_addr+0x3c>
400842d2:	f10ed1        	l32r	a13, 4008070c <_init_end+0x30c>
400842d5:	f10ac1        	l32r	a12, 40080700 <_init_end+0x300>
400842d8:	cb2c      	movi.n	a11, 44
400842da:	f10aa1        	l32r	a10, 40080704 <_init_end+0x304>
400842dd:	56bfa5        	call8	400daed8 <__assert_func>
400842e0:	143020        	extui	a3, a2, 0, 2
400842e3:	00d316        	beqz	a3, 400842f4 <dram_alloc_to_iram_addr+0x50>
400842e6:	f10ad1        	l32r	a13, 40080710 <_init_end+0x310>
400842e9:	f105c1        	l32r	a12, 40080700 <_init_end+0x300>
400842ec:	db2c      	movi.n	a11, 45
400842ee:	f105a1        	l32r	a10, 40080704 <_init_end+0x304>
400842f1:	56be65        	call8	400daed8 <__assert_func>
400842f4:	1430a0        	extui	a3, a10, 0, 2
400842f7:	00d316        	beqz	a3, 40084308 <dram_alloc_to_iram_addr+0x64>
400842fa:	f106d1        	l32r	a13, 40080714 <_init_end+0x314>
400842fd:	f100c1        	l32r	a12, 40080700 <_init_end+0x300>
40084300:	eb2c      	movi.n	a11, 46
40084302:	f100a1        	l32r	a10, 40080704 <_init_end+0x304>
40084305:	56bd25        	call8	400daed8 <__assert_func>
40084308:	f10481        	l32r	a8, 40080718 <_init_end+0x318>
4008430b:	c088a0        	sub	a8, a8, a10
4008430e:	0829      	s32i.n	a2, a8, 0
40084310:	284b      	addi.n	a2, a8, 4
40084312:	f01d      	retw.n

40084314 <heap_caps_malloc>:
40084314:	004136        	entry	a1, 32
40084317:	f10141        	l32r	a4, 4008071c <_init_end+0x31c>
4008431a:	02b427        	bgeu	a4, a2, 40084320 <heap_caps_malloc+0xc>
4008431d:	002546        	j	400843b6 <heap_caps_malloc+0xa2>
40084320:	0c6307        	bbci	a3, 0, 40084330 <heap_caps_malloc+0x1c>
40084323:	c40c      	movi.n	a4, 12
40084325:	020347        	bnone	a3, a4, 4008432b <heap_caps_malloc+0x17>
40084328:	002386        	j	400843ba <heap_caps_malloc+0xa6>
4008432b:	240c      	movi.n	a4, 2
4008432d:	203340        	or	a3, a3, a4
40084330:	066317        	bbci	a3, 1, 4008433a <heap_caps_malloc+0x26>
40084333:	223b      	addi.n	a2, a2, 3
40084335:	c47c      	movi.n	a4, -4
40084337:	102240        	and	a2, a2, a4
4008433a:	050c      	movi.n	a5, 0
4008433c:	001b06        	j	400843ac <heap_caps_malloc+0x98>
4008433f:	ec4100        	lsi	f0, a1, 0x3b0
40084342:	0448f0        	extui	a4, a15, 8, 1
40084345:	001786        	j	400843a7 <heap_caps_malloc+0x93>
40084348:	74a8      	l32i.n	a10, a4, 28
4008434a:	057a16        	beqz	a10, 400843a5 <heap_caps_malloc+0x91>
4008434d:	a08540        	addx4	a8, a5, a4
40084350:	0888      	l32i.n	a8, a8, 0
40084352:	4f0387        	bnone	a3, a8, 400843a5 <heap_caps_malloc+0x91>
40084355:	7a9c      	beqz.n	a10, 40084370 <heap_caps_malloc+0x5c>
40084357:	080c      	movi.n	a8, 0
40084359:	089d      	mov.n	a9, a8
4008435b:	0002c6        	j	4008436a <heap_caps_malloc+0x56>
4008435e:	400000        	ssr	a0
40084361:	a0b8      	l32i.n	a11, a0, 40
40084363:	0bb8      	l32i.n	a11, a11, 0
40084365:	2099b0        	or	a9, a9, a11
40084368:	881b      	addi.n	a8, a8, 1
4008436a:	f238a6        	blti	a8, 3, 40084360 <heap_caps_malloc+0x4c>
4008436d:	000086        	j	40084373 <heap_caps_malloc+0x5f>
40084370:	00a092        	movi	a9, 0
40084373:	109390        	and	a9, a3, a9
40084376:	2b9397        	bne	a3, a9, 400843a5 <heap_caps_malloc+0x91>
40084379:	216307        	bbci	a3, 0, 4008439e <heap_caps_malloc+0x8a>
4008437c:	032492        	l32i	a9, a4, 12
4008437f:	f0dd81        	l32r	a8, 400806f4 <_init_end+0x2f4>
40084382:	808980        	add	a8, a9, a8
40084385:	f0dc91        	l32r	a9, 400806f8 <_init_end+0x2f8>
40084388:	123987        	bltu	a9, a8, 4008439e <heap_caps_malloc+0x8a>
4008438b:	624b      	addi.n	a6, a2, 4
4008438d:	06bd      	mov.n	a11, a6
4008438f:	06a225        	call8	4008adb0 <multi_heap_malloc>
40084392:	fa8c      	beqz.n	a10, 400843a5 <heap_caps_malloc+0x91>
40084394:	06bd      	mov.n	a11, a6
40084396:	fff0e5        	call8	400842a4 <dram_alloc_to_iram_addr>
40084399:	0a2d      	mov.n	a2, a10
4008439b:	f01d      	retw.n
4008439d:	02bd00        	andb	b11, b13, b0
400843a0:	06a0e5        	call8	4008adb0 <multi_heap_malloc>
400843a3:	7adc      	bnez.n	a10, 400843be <heap_caps_malloc+0xaa>
400843a5:	8448      	l32i.n	a4, a4, 32
400843a7:	f9d456        	bnez	a4, 40084348 <heap_caps_malloc+0x34>
400843aa:	551b      	addi.n	a5, a5, 1
400843ac:	9035a6        	blti	a5, 3, 40084340 <heap_caps_malloc+0x2c>
400843af:	020c      	movi.n	a2, 0
400843b1:	f01d      	retw.n
400843b3:	000000        	ill
400843b6:	020c      	movi.n	a2, 0
400843b8:	f01d      	retw.n
400843ba:	020c      	movi.n	a2, 0
400843bc:	f01d      	retw.n
400843be:	0a2d      	mov.n	a2, a10
400843c0:	f01d      	retw.n
	...

400843c4 <heap_caps_malloc_default>:
400843c4:	004136        	entry	a1, 32
400843c7:	f0d681        	l32r	a8, 40080720 <_init_end+0x320>
400843ca:	0888      	l32i.n	a8, a8, 0
400843cc:	0d0866        	bnei	a8, -1, 400843dd <heap_caps_malloc_default+0x19>
400843cf:	f07bb1        	l32r	a11, 400805bc <_init_end+0x1bc>
400843d2:	20a220        	or	a10, a2, a2
400843d5:	fff3e5        	call8	40084314 <heap_caps_malloc>
400843d8:	0a2d      	mov.n	a2, a10
400843da:	f01d      	retw.n
400843dc:	382700        	lsi	f0, a7, 224
400843df:	b10b      	addi.n	a11, a1, -1
400843e1:	adf077        	bbsi	a0, 23, 40084392 <heap_caps_malloc+0x7e>
400843e4:	f2e502        	s32c1i	a0, a5, 0x3c8
400843e7:	ff          	.byte 0xff
400843e8:	000206        	j	400843f4 <heap_caps_malloc_default+0x30>
400843eb:	ceb100        	f64iter	a11, a1, a0, 0, 1
400843ee:	02adf0        	andb	b10, b13, b15
400843f1:	fff225        	call8	40084314 <heap_caps_malloc>
400843f4:	aacc      	bnez.n	a10, 40084402 <heap_caps_malloc_default+0x3e>
400843f6:	f0ccb1        	l32r	a11, 40080728 <_init_end+0x328>
400843f9:	02ad      	mov.n	a10, a2
400843fb:	fff1a5        	call8	40084314 <heap_caps_malloc>
400843fe:	0a2d      	mov.n	a2, a10
40084400:	f01d      	retw.n
40084402:	0a2d      	mov.n	a2, a10
40084404:	f01d      	retw.n
	...

40084408 <heap_caps_malloc_prefer>:
40084408:	00a136        	entry	a1, 80
4008440b:	2149      	s32i.n	a4, a1, 8
4008440d:	3159      	s32i.n	a5, a1, 12
4008440f:	4169      	s32i.n	a6, a1, 16
40084411:	5179      	s32i.n	a7, a1, 20
40084413:	014d      	mov.n	a4, a1
40084415:	a149      	s32i.n	a4, a1, 40
40084417:	30c142        	addi	a4, a1, 48
4008441a:	9149      	s32i.n	a4, a1, 36
4008441c:	840c      	movi.n	a4, 8
4008441e:	b149      	s32i.n	a4, a1, 44
40084420:	0a0c      	movi.n	a10, 0
40084422:	000ec6        	j	40084461 <heap_caps_malloc_prefer+0x59>
40084425:	b188      	l32i.n	a8, a1, 44
40084427:	384b      	addi.n	a3, a8, 4
40084429:	b139      	s32i.n	a3, a1, 44
4008442b:	891c      	movi.n	a9, 24
4008442d:	0b2937        	blt	a9, a3, 4008443c <heap_caps_malloc_prefer+0x34>
40084430:	f03d      	nop.n
40084432:	f03d      	nop.n
40084434:	f03d      	nop.n
40084436:	a138      	l32i.n	a3, a1, 40
40084438:	0004c6        	j	4008444f <heap_caps_malloc_prefer+0x47>
4008443b:	831c00        	moveqz	a1, a12, a0
4008443e:	032387        	blt	a3, a8, 40084445 <heap_caps_malloc_prefer+0x3d>
40084441:	432c      	movi.n	a3, 36
40084443:	b139      	s32i.n	a3, a1, 44
40084445:	f03d      	nop.n
40084447:	f03d      	nop.n
40084449:	f03d      	nop.n
4008444b:	f03d      	nop.n
4008444d:	9138      	l32i.n	a3, a1, 36
4008444f:	b188      	l32i.n	a8, a1, 44
40084451:	fcc882        	addi	a8, a8, -4
40084454:	838a      	add.n	a8, a3, a8
40084456:	08b8      	l32i.n	a11, a8, 0
40084458:	02ad      	mov.n	a10, a2
4008445a:	ffeba5        	call8	40084314 <heap_caps_malloc>
4008445d:	043d      	mov.n	a3, a4
4008445f:	3acc      	bnez.n	a10, 40084466 <heap_caps_malloc_prefer+0x5e>
40084461:	430b      	addi.n	a4, a3, -1
40084463:	fbe356        	bnez	a3, 40084425 <heap_caps_malloc_prefer+0x1d>
40084466:	0a2d      	mov.n	a2, a10
40084468:	f01d      	retw.n
	...

4008446c <heap_caps_free>:
4008446c:	004136        	entry	a1, 32
4008446f:	02e216        	beqz	a2, 400844a1 <heap_caps_free+0x35>
40084472:	f0ae81        	l32r	a8, 4008072c <_init_end+0x32c>
40084475:	808280        	add	a8, a2, a8
40084478:	f0a091        	l32r	a9, 400806f8 <_init_end+0x2f8>
4008447b:	053987        	bltu	a9, a8, 40084484 <heap_caps_free+0x18>
4008447e:	fcc222        	addi	a2, a2, -4
40084481:	002222        	l32i	a2, a2, 0
40084484:	02ad      	mov.n	a10, a2
40084486:	ffdf65        	call8	4008427c <find_containing_heap>
40084489:	dacc      	bnez.n	a10, 4008449a <heap_caps_free+0x2e>
4008448b:	f0a9d1        	l32r	a13, 40080730 <_init_end+0x330>
4008448e:	f0a9c1        	l32r	a12, 40080734 <_init_end+0x334>
40084491:	0ba1b2        	movi	a11, 0x10b
40084494:	f09ca1        	l32r	a10, 40080704 <_init_end+0x304>
40084497:	56a425        	call8	400daed8 <__assert_func>
4008449a:	02bd      	mov.n	a11, a2
4008449c:	7aa8      	l32i.n	a10, a10, 28
4008449e:	069465        	call8	4008ade4 <multi_heap_free>
400844a1:	f01d      	retw.n
	...

400844a4 <heap_caps_realloc>:
400844a4:	004136        	entry	a1, 32
400844a7:	a2cc      	bnez.n	a2, 400844b5 <heap_caps_realloc+0x11>
400844a9:	04bd      	mov.n	a11, a4
400844ab:	03ad      	mov.n	a10, a3
400844ad:	ffe665        	call8	40084314 <heap_caps_malloc>
400844b0:	0a2d      	mov.n	a2, a10
400844b2:	f01d      	retw.n
400844b4:	83cc00        	moveqz	a12, a12, a0
400844b7:	02ad      	mov.n	a10, a2
400844b9:	fffb25        	call8	4008446c <heap_caps_free>
400844bc:	020c      	movi.n	a2, 0
400844be:	f01d      	retw.n
400844c0:	965100        	lsi	f0, a1, 0x258
400844c3:	b537f0        	extui	a3, a15, 23, 12
400844c6:	1f8602        	lsi	f0, a6, 124
400844c9:	02ad00        	andb	b10, b13, b0
400844cc:	ffdae5        	call8	4008427c <find_containing_heap>
400844cf:	0a5d      	mov.n	a5, a10
400844d1:	dacc      	bnez.n	a10, 400844e2 <heap_caps_realloc+0x3e>
400844d3:	f099d1        	l32r	a13, 40080738 <_init_end+0x338>
400844d6:	f099c1        	l32r	a12, 4008073c <_init_end+0x33c>
400844d9:	20a1b2        	movi	a11, 0x120
400844dc:	f08aa1        	l32r	a10, 40080704 <_init_end+0x304>
400844df:	569fa5        	call8	400daed8 <__assert_func>
400844e2:	7aa8      	l32i.n	a10, a10, 28
400844e4:	6a9c      	beqz.n	a10, 400844fe <heap_caps_realloc+0x5a>
400844e6:	080c      	movi.n	a8, 0
400844e8:	089d      	mov.n	a9, a8
400844ea:	000246        	j	400844f7 <heap_caps_realloc+0x53>
400844ed:	a0b850        	addx4	a11, a8, a5
400844f0:	0bb8      	l32i.n	a11, a11, 0
400844f2:	2099b0        	or	a9, a9, a11
400844f5:	881b      	addi.n	a8, a8, 1
400844f7:	f238a6        	blti	a8, 3, 400844ed <heap_caps_realloc+0x49>
400844fa:	000086        	j	40084500 <heap_caps_realloc+0x5c>
400844fd:	090c00        	l32e	a0, a12, -64
40084500:	109490        	and	a9, a4, a9
40084503:	099497        	bne	a4, a9, 40084510 <heap_caps_realloc+0x6c>
40084506:	03cd      	mov.n	a12, a3
40084508:	02bd      	mov.n	a11, a2
4008450a:	0690e5        	call8	4008ae18 <multi_heap_realloc>
4008450d:	03ca56        	bnez	a10, 4008454d <heap_caps_realloc+0xa9>
40084510:	04bd      	mov.n	a11, a4
40084512:	03ad      	mov.n	a10, a3
40084514:	ffdfe5        	call8	40084314 <heap_caps_malloc>
40084517:	0a4d      	mov.n	a4, a10
40084519:	4abc      	beqz.n	a10, 40084551 <heap_caps_realloc+0xad>
4008451b:	02bd      	mov.n	a11, a2
4008451d:	75a8      	l32i.n	a10, a5, 28
4008451f:	0696e5        	call8	4008ae8c <multi_heap_get_allocated_size>
40084522:	dacc      	bnez.n	a10, 40084533 <heap_caps_realloc+0x8f>
40084524:	f087d1        	l32r	a13, 40080740 <_init_end+0x340>
40084527:	f085c1        	l32r	a12, 4008073c <_init_end+0x33c>
4008452a:	34a1b2        	movi	a11, 0x134
4008452d:	f075a1        	l32r	a10, 40080704 <_init_end+0x304>
40084530:	569a65        	call8	400daed8 <__assert_func>
40084533:	63c3a0        	minu	a12, a3, a10
40084536:	02bd      	mov.n	a11, a2
40084538:	04ad      	mov.n	a10, a4
4008453a:	f08281        	l32r	a8, 40080744 <_init_end+0x344>
4008453d:	0008e0        	callx8	a8
40084540:	02ad      	mov.n	a10, a2
40084542:	fff2a5        	call8	4008446c <heap_caps_free>
40084545:	042d      	mov.n	a2, a4
40084547:	f01d      	retw.n
40084549:	020c      	movi.n	a2, 0
4008454b:	f01d      	retw.n
4008454d:	0a2d      	mov.n	a2, a10
4008454f:	f01d      	retw.n
40084551:	020c      	movi.n	a2, 0
40084553:	f01d      	retw.n
40084555:	000000        	ill

40084558 <heap_caps_realloc_default>:
40084558:	004136        	entry	a1, 32
4008455b:	f07181        	l32r	a8, 40080720 <_init_end+0x320>
4008455e:	0888      	l32i.n	a8, a8, 0
40084560:	0d0866        	bnei	a8, -1, 40084571 <heap_caps_realloc_default+0x19>
40084563:	f016c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40084566:	03bd      	mov.n	a11, a3
40084568:	02ad      	mov.n	a10, a2
4008456a:	fff3a5        	call8	400844a4 <heap_caps_realloc>
4008456d:	0a2d      	mov.n	a2, a10
4008456f:	f01d      	retw.n
40084571:	0f3837        	bltu	a8, a3, 40084584 <heap_caps_realloc_default+0x2c>
40084574:	f012c1        	l32r	a12, 400805bc <_init_end+0x1bc>
40084577:	20b330        	or	a11, a3, a3
4008457a:	20a220        	or	a10, a2, a2
4008457d:	fff265        	call8	400844a4 <heap_caps_realloc>
40084580:	000286        	j	4008458e <heap_caps_realloc_default+0x36>
40084583:	68c100        	lsi	f0, a1, 0x1a0
40084586:	03bdf0        	lsi	f15, a13, 12
40084589:	02ad      	mov.n	a10, a2
4008458b:	fff1a5        	call8	400844a4 <heap_caps_realloc>
4008458e:	180c      	movi.n	a8, 1
40084590:	090c      	movi.n	a9, 0
40084592:	09bd      	mov.n	a11, a9
40084594:	83b8a0        	moveqz	a11, a8, a10
40084597:	838930        	moveqz	a8, a9, a3
4008459a:	0e08b7        	bnone	a8, a11, 400845ac <heap_caps_realloc_default+0x54>
4008459d:	f062c1        	l32r	a12, 40080728 <_init_end+0x328>
400845a0:	03bd      	mov.n	a11, a3
400845a2:	20a220        	or	a10, a2, a2
400845a5:	ffefe5        	call8	400844a4 <heap_caps_realloc>
400845a8:	0a2d      	mov.n	a2, a10
400845aa:	f01d      	retw.n
400845ac:	0a2d      	mov.n	a2, a10
400845ae:	f01d      	retw.n

400845b0 <heap_caps_realloc_prefer>:
400845b0:	00a136        	entry	a1, 80
400845b3:	3159      	s32i.n	a5, a1, 12
400845b5:	4169      	s32i.n	a6, a1, 16
400845b7:	5179      	s32i.n	a7, a1, 20
400845b9:	015d      	mov.n	a5, a1
400845bb:	a159      	s32i.n	a5, a1, 40
400845bd:	30c152        	addi	a5, a1, 48
400845c0:	9159      	s32i.n	a5, a1, 36
400845c2:	c50c      	movi.n	a5, 12
400845c4:	b159      	s32i.n	a5, a1, 44
400845c6:	0a0c      	movi.n	a10, 0
400845c8:	001346        	j	40084619 <heap_caps_realloc_prefer+0x69>
400845cb:	b18800        	lsi	f0, a8, 0x2c4
400845ce:	484b      	addi.n	a4, a8, 4
400845d0:	b149      	s32i.n	a4, a1, 44
400845d2:	891c      	movi.n	a9, 24
400845d4:	0a2947        	blt	a9, a4, 400845e2 <heap_caps_realloc_prefer+0x32>
400845d7:	f03d      	nop.n
400845d9:	f03d      	nop.n
400845db:	f03d      	nop.n
400845dd:	a148      	l32i.n	a4, a1, 40
400845df:	0004c6        	j	400845f6 <heap_caps_realloc_prefer+0x46>
400845e2:	841c      	movi.n	a4, 24
400845e4:	042487        	blt	a4, a8, 400845ec <heap_caps_realloc_prefer+0x3c>
400845e7:	24a042        	movi	a4, 36
400845ea:	b149      	s32i.n	a4, a1, 44
400845ec:	f03d      	nop.n
400845ee:	f03d      	nop.n
400845f0:	f03d      	nop.n
400845f2:	f03d      	nop.n
400845f4:	9148      	l32i.n	a4, a1, 36
400845f6:	b188      	l32i.n	a8, a1, 44
400845f8:	fcc882        	addi	a8, a8, -4
400845fb:	848a      	add.n	a8, a4, a8
400845fd:	08c8      	l32i.n	a12, a8, 0
400845ff:	03bd      	mov.n	a11, a3
40084601:	02ad      	mov.n	a10, a2
40084603:	ffea25        	call8	400844a4 <heap_caps_realloc>
40084606:	180c      	movi.n	a8, 1
40084608:	040c      	movi.n	a4, 0
4008460a:	049d      	mov.n	a9, a4
4008460c:	9398a0        	movnez	a9, a8, a10
4008460f:	938430        	movnez	a8, a4, a3
40084612:	208890        	or	a8, a8, a9
40084615:	054d      	mov.n	a4, a5
40084617:	38cc      	bnez.n	a8, 4008461e <heap_caps_realloc_prefer+0x6e>
40084619:	540b      	addi.n	a5, a4, -1
4008461b:	fad456        	bnez	a4, 400845cc <heap_caps_realloc_prefer+0x1c>
4008461e:	0a2d      	mov.n	a2, a10
40084620:	f01d      	retw.n
	...

40084624 <heap_caps_calloc>:
40084624:	004136        	entry	a1, 32
40084627:	080c      	movi.n	a8, 0
40084629:	825230        	mull	a5, a2, a3
4008462c:	a23230        	muluh	a3, a2, a3
4008462f:	021387        	beq	a3, a8, 40084635 <heap_caps_calloc+0x11>
40084632:	01a082        	movi	a8, 1
40084635:	58dc      	bnez.n	a8, 4008464e <heap_caps_calloc+0x2a>
40084637:	04bd      	mov.n	a11, a4
40084639:	05ad      	mov.n	a10, a5
4008463b:	ffcda5        	call8	40084314 <heap_caps_malloc>
4008463e:	0a2d      	mov.n	a2, a10
40084640:	ca8c      	beqz.n	a10, 40084650 <heap_caps_calloc+0x2c>
40084642:	05cd      	mov.n	a12, a5
40084644:	0b0c      	movi.n	a11, 0
40084646:	ef9381        	l32r	a8, 40080494 <_init_end+0x94>
40084649:	0008e0        	callx8	a8
4008464c:	f01d      	retw.n
4008464e:	020c      	movi.n	a2, 0
40084650:	f01d      	retw.n
	...

40084654 <heap_caps_calloc_prefer>:
40084654:	00a136        	entry	a1, 80
40084657:	3159      	s32i.n	a5, a1, 12
40084659:	4169      	s32i.n	a6, a1, 16
4008465b:	5179      	s32i.n	a7, a1, 20
4008465d:	015d      	mov.n	a5, a1
4008465f:	a159      	s32i.n	a5, a1, 40
40084661:	30c152        	addi	a5, a1, 48
40084664:	9159      	s32i.n	a5, a1, 36
40084666:	c50c      	movi.n	a5, 12
40084668:	b159      	s32i.n	a5, a1, 44
4008466a:	0a0c      	movi.n	a10, 0
4008466c:	000f86        	j	400846ae <heap_caps_calloc_prefer+0x5a>
4008466f:	b18800        	lsi	f0, a8, 0x2c4
40084672:	484b      	addi.n	a4, a8, 4
40084674:	b149      	s32i.n	a4, a1, 44
40084676:	891c      	movi.n	a9, 24
40084678:	0a2947        	blt	a9, a4, 40084686 <heap_caps_calloc_prefer+0x32>
4008467b:	f03d      	nop.n
4008467d:	f03d      	nop.n
4008467f:	f03d      	nop.n
40084681:	a148      	l32i.n	a4, a1, 40
40084683:	0004c6        	j	4008469a <heap_caps_calloc_prefer+0x46>
40084686:	841c      	movi.n	a4, 24
40084688:	042487        	blt	a4, a8, 40084690 <heap_caps_calloc_prefer+0x3c>
4008468b:	24a042        	movi	a4, 36
4008468e:	b149      	s32i.n	a4, a1, 44
40084690:	f03d      	nop.n
40084692:	f03d      	nop.n
40084694:	f03d      	nop.n
40084696:	f03d      	nop.n
40084698:	9148      	l32i.n	a4, a1, 36
4008469a:	b188      	l32i.n	a8, a1, 44
4008469c:	fcc882        	addi	a8, a8, -4
4008469f:	848a      	add.n	a8, a4, a8
400846a1:	08c8      	l32i.n	a12, a8, 0
400846a3:	03bd      	mov.n	a11, a3
400846a5:	02ad      	mov.n	a10, a2
400846a7:	fff7e5        	call8	40084624 <heap_caps_calloc>
400846aa:	054d      	mov.n	a4, a5
400846ac:	4acc      	bnez.n	a10, 400846b4 <heap_caps_calloc_prefer+0x60>
400846ae:	ffc452        	addi	a5, a4, -1
400846b1:	fbb456        	bnez	a4, 40084670 <heap_caps_calloc_prefer+0x1c>
400846b4:	0a2d      	mov.n	a2, a10
400846b6:	f01d      	retw.n

400846b8 <esp_cpu_stall>:
400846b8:	004136        	entry	a1, 32
400846bb:	5d1266        	bnei	a2, 1, 4008471c <esp_cpu_stall+0x64>
400846be:	f02281        	l32r	a8, 40080748 <_init_end+0x348>
400846c1:	0020c0        	memw
400846c4:	08a8      	l32i.n	a10, a8, 0
400846c6:	f02191        	l32r	a9, 4008074c <_init_end+0x34c>
400846c9:	109a90        	and	a9, a10, a9
400846cc:	0020c0        	memw
400846cf:	0899      	s32i.n	a9, a8, 0
400846d1:	f03d      	nop.n
400846d3:	f03d      	nop.n
400846d5:	f03d      	nop.n
400846d7:	f03d      	nop.n
400846d9:	0020c0        	memw
400846dc:	08a8      	l32i.n	a10, a8, 0
400846de:	f01c91        	l32r	a9, 40080750 <_init_end+0x350>
400846e1:	209a90        	or	a9, a10, a9
400846e4:	0020c0        	memw
400846e7:	0899      	s32i.n	a9, a8, 0
400846e9:	f03d      	nop.n
400846eb:	f03d      	nop.n
400846ed:	f03d      	nop.n
400846ef:	f03d      	nop.n
400846f1:	f01881        	l32r	a8, 40080754 <_init_end+0x354>
400846f4:	0020c0        	memw
400846f7:	08a8      	l32i.n	a10, a8, 0
400846f9:	c97c      	movi.n	a9, -4
400846fb:	109a90        	and	a9, a10, a9
400846fe:	0020c0        	memw
40084701:	0899      	s32i.n	a9, a8, 0
40084703:	f03d      	nop.n
40084705:	f03d      	nop.n
40084707:	f03d      	nop.n
40084709:	f03d      	nop.n
4008470b:	0020c0        	memw
4008470e:	08a8      	l32i.n	a10, a8, 0
40084710:	290c      	movi.n	a9, 2
40084712:	209a90        	or	a9, a10, a9
40084715:	0020c0        	memw
40084718:	0899      	s32i.n	a9, a8, 0
4008471a:	f01d      	retw.n
4008471c:	f00b81        	l32r	a8, 40080748 <_init_end+0x348>
4008471f:	0020c0        	memw
40084722:	08a8      	l32i.n	a10, a8, 0
40084724:	f00d91        	l32r	a9, 40080758 <_init_end+0x358>
40084727:	109a90        	and	a9, a10, a9
4008472a:	0020c0        	memw
4008472d:	0899      	s32i.n	a9, a8, 0
4008472f:	f03d      	nop.n
40084731:	f03d      	nop.n
40084733:	f03d      	nop.n
40084735:	f03d      	nop.n
40084737:	0020c0        	memw
4008473a:	08a8      	l32i.n	a10, a8, 0
4008473c:	f00891        	l32r	a9, 4008075c <_init_end+0x35c>
4008473f:	209a90        	or	a9, a10, a9
40084742:	0020c0        	memw
40084745:	0899      	s32i.n	a9, a8, 0
40084747:	f03d      	nop.n
40084749:	f03d      	nop.n
4008474b:	f03d      	nop.n
4008474d:	f03d      	nop.n
4008474f:	f00181        	l32r	a8, 40080754 <_init_end+0x354>
40084752:	0020c0        	memw
40084755:	08a8      	l32i.n	a10, a8, 0
40084757:	397c      	movi.n	a9, -13
40084759:	109a90        	and	a9, a10, a9
4008475c:	0020c0        	memw
4008475f:	0899      	s32i.n	a9, a8, 0
40084761:	f03d      	nop.n
40084763:	f03d      	nop.n
40084765:	f03d      	nop.n
40084767:	f03d      	nop.n
40084769:	0020c0        	memw
4008476c:	08a8      	l32i.n	a10, a8, 0
4008476e:	890c      	movi.n	a9, 8
40084770:	209a90        	or	a9, a10, a9
40084773:	0020c0        	memw
40084776:	0899      	s32i.n	a9, a8, 0
40084778:	f01d      	retw.n
	...

4008477c <esp_cpu_unstall>:
4008477c:	004136        	entry	a1, 32
4008477f:	2e1266        	bnei	a2, 1, 400847b1 <esp_cpu_unstall+0x35>
40084782:	eff191        	l32r	a9, 40080748 <_init_end+0x348>
40084785:	0020c0        	memw
40084788:	09a8      	l32i.n	a10, a9, 0
4008478a:	eff081        	l32r	a8, 4008074c <_init_end+0x34c>
4008478d:	108a80        	and	a8, a10, a8
40084790:	0020c0        	memw
40084793:	0989      	s32i.n	a8, a9, 0
40084795:	f03d      	nop.n
40084797:	f03d      	nop.n
40084799:	f03d      	nop.n
4008479b:	f03d      	nop.n
4008479d:	efed91        	l32r	a9, 40080754 <_init_end+0x354>
400847a0:	0020c0        	memw
400847a3:	09a8      	l32i.n	a10, a9, 0
400847a5:	c87c      	movi.n	a8, -4
400847a7:	108a80        	and	a8, a10, a8
400847aa:	0020c0        	memw
400847ad:	0989      	s32i.n	a8, a9, 0
400847af:	f01d      	retw.n
400847b1:	efe591        	l32r	a9, 40080748 <_init_end+0x348>
400847b4:	0020c0        	memw
400847b7:	09a8      	l32i.n	a10, a9, 0
400847b9:	efe781        	l32r	a8, 40080758 <_init_end+0x358>
400847bc:	108a80        	and	a8, a10, a8
400847bf:	0020c0        	memw
400847c2:	0989      	s32i.n	a8, a9, 0
400847c4:	f03d      	nop.n
400847c6:	f03d      	nop.n
400847c8:	f03d      	nop.n
400847ca:	f03d      	nop.n
400847cc:	efe291        	l32r	a9, 40080754 <_init_end+0x354>
400847cf:	0020c0        	memw
400847d2:	09a8      	l32i.n	a10, a9, 0
400847d4:	387c      	movi.n	a8, -13
400847d6:	108a80        	and	a8, a10, a8
400847d9:	0020c0        	memw
400847dc:	0989      	s32i.n	a8, a9, 0
400847de:	f01d      	retw.n

400847e0 <esp_cpu_reset>:
400847e0:	004136        	entry	a1, 32
400847e3:	efdc81        	l32r	a8, 40080754 <_init_end+0x354>
400847e6:	0020c0        	memw
400847e9:	0888      	l32i.n	a8, a8, 0
400847eb:	32cc      	bnez.n	a2, 400847f2 <esp_cpu_reset+0x12>
400847ed:	092c      	movi.n	a9, 32
400847ef:	000046        	j	400847f4 <esp_cpu_reset+0x14>
400847f2:	091c      	movi.n	a9, 16
400847f4:	208980        	or	a8, a9, a8
400847f7:	efd791        	l32r	a9, 40080754 <_init_end+0x354>
400847fa:	0020c0        	memw
400847fd:	0989      	s32i.n	a8, a9, 0
400847ff:	f01d      	retw.n
40084801:	000000        	ill

40084804 <esp_cpu_in_ocd_debug_mode>:
40084804:	004136        	entry	a1, 32
40084807:	efd621        	l32r	a2, 40080760 <_init_end+0x360>
4008480a:	406220        	rer	a2, a2
4008480d:	042020        	extui	a2, a2, 0, 1
40084810:	f01d      	retw.n
	...

40084814 <_gettimeofday_r>:
40084814:	004136        	entry	a1, 32
40084817:	045316        	beqz	a3, 40084860 <_gettimeofday_r+0x4c>
4008481a:	653565        	call8	400e9b70 <get_adjusted_boot_time>
4008481d:	205aa0        	or	a5, a10, a10
40084820:	206bb0        	or	a6, a11, a11
40084823:	651e65        	call8	400e9a08 <get_time_since_boot>
40084826:	45aa      	add.n	a4, a5, a10
40084828:	01a022        	movi	a2, 1
4008482b:	013457        	bltu	a4, a5, 40084830 <_gettimeofday_r+0x1c>
4008482e:	020c      	movi.n	a2, 0
40084830:	b6ba      	add.n	a11, a6, a11
40084832:	22ba      	add.n	a2, a2, a11
40084834:	02bd      	mov.n	a11, a2
40084836:	ef1dc1        	l32r	a12, 400804ac <_init_end+0xac>
40084839:	ef36d1        	l32r	a13, 40080514 <_init_end+0x114>
4008483c:	04ad      	mov.n	a10, a4
4008483e:	ef7981        	l32r	a8, 40080624 <_init_end+0x224>
40084841:	0008e0        	callx8	a8
40084844:	03a9      	s32i.n	a10, a3, 0
40084846:	f03d      	nop.n
40084848:	f03d      	nop.n
4008484a:	f03d      	nop.n
4008484c:	f03d      	nop.n
4008484e:	ef17c1        	l32r	a12, 400804ac <_init_end+0xac>
40084851:	ef30d1        	l32r	a13, 40080514 <_init_end+0x114>
40084854:	04ad      	mov.n	a10, a4
40084856:	02bd      	mov.n	a11, a2
40084858:	efc381        	l32r	a8, 40080764 <_init_end+0x364>
4008485b:	0008e0        	callx8	a8
4008485e:	13a9      	s32i.n	a10, a3, 4
40084860:	020c      	movi.n	a2, 0
40084862:	f01d      	retw.n

40084864 <_times_r>:
40084864:	006136        	entry	a1, 48
40084867:	03dd65        	call8	4008863c <xTaskGetTickCount>
4008486a:	00a0c2        	movi	a12, 0
4008486d:	0363c2        	s32i	a12, a3, 12
40084870:	0263c2        	s32i	a12, a3, 8
40084873:	13a9      	s32i.n	a10, a3, 4
40084875:	03c9      	s32i.n	a12, a3, 0
40084877:	21c9      	s32i.n	a12, a1, 8
40084879:	31c9      	s32i.n	a12, a1, 12
4008487b:	b18b      	addi.n	a11, a1, 8
4008487d:	02ad      	mov.n	a10, a2
4008487f:	fff965        	call8	40084814 <_gettimeofday_r>
40084882:	2128      	l32i.n	a2, a1, 8
40084884:	f01d      	retw.n
	...

40084888 <_malloc_r>:
40084888:	004136        	entry	a1, 32
4008488b:	03ad      	mov.n	a10, a3
4008488d:	ffb365        	call8	400843c4 <heap_caps_malloc_default>
40084890:	0a2d      	mov.n	a2, a10
40084892:	f01d      	retw.n

40084894 <_free_r>:
40084894:	004136        	entry	a1, 32
40084897:	03ad      	mov.n	a10, a3
40084899:	ffbd25        	call8	4008446c <heap_caps_free>
4008489c:	f01d      	retw.n
	...

400848a0 <_realloc_r>:
400848a0:	004136        	entry	a1, 32
400848a3:	20b440        	or	a11, a4, a4
400848a6:	20a330        	or	a10, a3, a3
400848a9:	ffcae5        	call8	40084558 <heap_caps_realloc_default>
400848ac:	202aa0        	or	a2, a10, a10
400848af:	f01d      	retw.n
400848b1:	000000        	ill

400848b4 <_calloc_r>:
400848b4:	004136        	entry	a1, 32
400848b7:	020c      	movi.n	a2, 0
400848b9:	825340        	mull	a5, a3, a4
400848bc:	a24340        	muluh	a4, a3, a4
400848bf:	011427        	beq	a4, a2, 400848c4 <_calloc_r+0x10>
400848c2:	120c      	movi.n	a2, 1
400848c4:	62dc      	bnez.n	a2, 400848de <_calloc_r+0x2a>
400848c6:	05ad      	mov.n	a10, a5
400848c8:	ef3a81        	l32r	a8, 400805b0 <_init_end+0x1b0>
400848cb:	0008e0        	callx8	a8
400848ce:	0a2d      	mov.n	a2, a10
400848d0:	ca8c      	beqz.n	a10, 400848e0 <_calloc_r+0x2c>
400848d2:	05cd      	mov.n	a12, a5
400848d4:	0b0c      	movi.n	a11, 0
400848d6:	eeef81        	l32r	a8, 40080494 <_init_end+0x94>
400848d9:	0008e0        	callx8	a8
400848dc:	f01d      	retw.n
400848de:	020c      	movi.n	a2, 0
400848e0:	f01d      	retw.n
	...

400848e4 <esp_reent_init>:
400848e4:	004136        	entry	a1, 32
400848e7:	f0a0c2        	movi	a12, 240
400848ea:	0b0c      	movi.n	a11, 0
400848ec:	02ad      	mov.n	a10, a2
400848ee:	eee981        	l32r	a8, 40080494 <_init_end+0x94>
400848f1:	0008e0        	callx8	a8
400848f4:	eec681        	l32r	a8, 4008040c <_init_end+0xc>
400848f7:	0888      	l32i.n	a8, a8, 0
400848f9:	2898      	l32i.n	a9, a8, 8
400848fb:	2299      	s32i.n	a9, a2, 8
400848fd:	f03d      	nop.n
400848ff:	f03d      	nop.n
40084901:	f03d      	nop.n
40084903:	f03d      	nop.n
40084905:	3898      	l32i.n	a9, a8, 12
40084907:	3299      	s32i.n	a9, a2, 12
40084909:	f03d      	nop.n
4008490b:	f03d      	nop.n
4008490d:	f03d      	nop.n
4008490f:	f03d      	nop.n
40084911:	1888      	l32i.n	a8, a8, 4
40084913:	1289      	s32i.n	a8, a2, 4
40084915:	f03d      	nop.n
40084917:	f03d      	nop.n
40084919:	f03d      	nop.n
4008491b:	f03d      	nop.n
4008491d:	ef9281        	l32r	a8, 40080768 <_init_end+0x368>
40084920:	a289      	s32i.n	a8, a2, 40
40084922:	180c      	movi.n	a8, 1
40084924:	6289      	s32i.n	a8, a2, 24
40084926:	080c      	movi.n	a8, 0
40084928:	366282        	s32i	a8, a2, 216
4008492b:	376282        	s32i	a8, a2, 220
4008492e:	386282        	s32i	a8, a2, 224
40084931:	f03d      	nop.n
40084933:	f03d      	nop.n
40084935:	f03d      	nop.n
40084937:	f03d      	nop.n
40084939:	ef8c81        	l32r	a8, 4008076c <_init_end+0x36c>
4008493c:	8289      	s32i.n	a8, a2, 32
4008493e:	f01d      	retw.n

40084940 <lock_init_generic>:
40084940:	004136        	entry	a1, 32
40084943:	ef8ba1        	l32r	a10, 40080770 <_init_end+0x370>
40084946:	0414a5        	call8	40088a90 <vTaskEnterCritical>
40084949:	0410e5        	call8	40088a58 <xTaskGetSchedulerState>
4008494c:	081a66        	bnei	a10, 1, 40084958 <lock_init_generic+0x18>
4008494f:	ef88a1        	l32r	a10, 40080770 <_init_end+0x370>
40084952:	0427e5        	call8	40088bd0 <vTaskExitCritical>
40084955:	000090        	retw
40084958:	002282        	l32i	a8, a2, 0
4008495b:	00b856        	bnez	a8, 4008496a <lock_init_generic+0x2a>
4008495e:	03ad      	mov.n	a10, a3
40084960:	0300a5        	call8	4008796c <xQueueCreateMutex>
40084963:	1acc      	bnez.n	a10, 40084968 <lock_init_generic+0x28>
40084965:	06a065        	call8	4008b36c <abort>
40084968:	02a9      	s32i.n	a10, a2, 0
4008496a:	f03d      	nop.n
4008496c:	f03d      	nop.n
4008496e:	f03d      	nop.n
40084970:	0020f0        	nop
40084973:	ef7fa1        	l32r	a10, 40080770 <_init_end+0x370>
40084976:	0425a5        	call8	40088bd0 <vTaskExitCritical>
40084979:	f01d      	retw.n
	...

4008497c <lock_acquire_generic>:
4008497c:	006136        	entry	a1, 48
4008497f:	0258      	l32i.n	a5, a2, 0
40084981:	85ec      	bnez.n	a5, 400849ad <lock_acquire_generic+0x31>
40084983:	040d65        	call8	40088a58 <xTaskGetSchedulerState>
40084986:	021a66        	bnei	a10, 1, 4008498c <lock_acquire_generic+0x10>
40084989:	001fc6        	j	40084a0c <lock_acquire_generic+0x90>
4008498c:	04bd      	mov.n	a11, a4
4008498e:	02ad      	mov.n	a10, a2
40084990:	fffae5        	call8	40084940 <lock_init_generic>
40084993:	0258      	l32i.n	a5, a2, 0
40084995:	014556        	bnez	a5, 400849ad <lock_acquire_generic+0x31>
40084998:	ef77d1        	l32r	a13, 40080774 <_init_end+0x374>
4008499b:	88a0c2        	movi	a12, 136
4008499e:	ef76b1        	l32r	a11, 40080778 <_init_end+0x378>
400849a1:	ef76a1        	l32r	a10, 4008077c <_init_end+0x37c>
400849a4:	eebd81        	l32r	a8, 40080498 <_init_end+0x98>
400849a7:	0008e0        	callx8	a8
400849aa:	069c25        	call8	4008b36c <abort>
400849ad:	0358e5        	call8	40087f3c <xPortInIsrContext>
400849b0:	0abc      	beqz.n	a10, 400849e4 <lock_acquire_generic+0x68>
400849b2:	024466        	bnei	a4, 4, 400849b8 <lock_acquire_generic+0x3c>
400849b5:	069b65        	call8	4008b36c <abort>
400849b8:	00a022        	movi	a2, 0
400849bb:	036122        	s32i	a2, a1, 12
400849be:	c1cb      	addi.n	a12, a1, 12
400849c0:	02bd      	mov.n	a11, a2
400849c2:	20a550        	or	a10, a5, a5
400849c5:	033565        	call8	40087d1c <xQueueReceiveFromISR>
400849c8:	0a5d      	mov.n	a5, a10
400849ca:	180c      	movi.n	a8, 1
400849cc:	024d      	mov.n	a4, a2
400849ce:	8348a0        	moveqz	a4, a8, a10
400849d1:	838230        	moveqz	a8, a2, a3
400849d4:	020847        	bnone	a8, a4, 400849da <lock_acquire_generic+0x5e>
400849d7:	069965        	call8	4008b36c <abort>
400849da:	3128      	l32i.n	a2, a1, 12
400849dc:	42ac      	beqz.n	a2, 40084a04 <lock_acquire_generic+0x88>
400849de:	056865        	call8	4008a064 <_frxt_setup_switch>
400849e1:	0007c6        	j	40084a04 <lock_acquire_generic+0x88>
400849e4:	0e4466        	bnei	a4, 4, 400849f6 <lock_acquire_generic+0x7a>
400849e7:	20b330        	or	a11, a3, a3
400849ea:	20a550        	or	a10, a5, a5
400849ed:	032da5        	call8	40087cc8 <xQueueTakeMutexRecursive>
400849f0:	205aa0        	or	a5, a10, a10
400849f3:	000346        	j	40084a04 <lock_acquire_generic+0x88>
400849f6:	0d0c      	movi.n	a13, 0
400849f8:	03cd      	mov.n	a12, a3
400849fa:	0dbd      	mov.n	a11, a13
400849fc:	20a550        	or	a10, a5, a5
400849ff:	031665        	call8	40087b64 <xQueueGenericReceive>
40084a02:	0a5d      	mov.n	a5, a10
40084a04:	081566        	bnei	a5, 1, 40084a10 <lock_acquire_generic+0x94>
40084a07:	020c      	movi.n	a2, 0
40084a09:	f01d      	retw.n
40084a0b:	020c00        	andb	b0, b12, b0
40084a0e:	f01d      	retw.n
40084a10:	f27c      	movi.n	a2, -1
40084a12:	f01d      	retw.n

40084a14 <lock_release_generic>:
40084a14:	006136        	entry	a1, 48
40084a17:	002222        	l32i	a2, a2, 0
40084a1a:	03e216        	beqz	a2, 40084a5c <lock_release_generic+0x48>
40084a1d:	0351e5        	call8	40087f3c <xPortInIsrContext>
40084a20:	01da16        	beqz	a10, 40084a41 <lock_release_generic+0x2d>
40084a23:	024366        	bnei	a3, 4, 40084a29 <lock_release_generic+0x15>
40084a26:	069465        	call8	4008b36c <abort>
40084a29:	030c      	movi.n	a3, 0
40084a2b:	3139      	s32i.n	a3, a1, 12
40084a2d:	b1cb      	addi.n	a11, a1, 12
40084a2f:	02ad      	mov.n	a10, a2
40084a31:	030725        	call8	40087aa4 <xQueueGiveFromISR>
40084a34:	3128      	l32i.n	a2, a1, 12
40084a36:	221237        	beq	a2, a3, 40084a5c <lock_release_generic+0x48>
40084a39:	0562a5        	call8	4008a064 <_frxt_setup_switch>
40084a3c:	f01d      	retw.n
40084a3e:	000000        	ill
40084a41:	094366        	bnei	a3, 4, 40084a4e <lock_release_generic+0x3a>
40084a44:	02ad      	mov.n	a10, a2
40084a46:	02f3e5        	call8	40087984 <xQueueGiveMutexRecursive>
40084a49:	f01d      	retw.n
40084a4b:	000000        	ill
40084a4e:	00a0d2        	movi	a13, 0
40084a51:	20cdd0        	or	a12, a13, a13
40084a54:	20bdd0        	or	a11, a13, a13
40084a57:	02ad      	mov.n	a10, a2
40084a59:	02d8a5        	call8	400877e4 <xQueueGenericSend>
40084a5c:	f01d      	retw.n
	...

40084a60 <_lock_init>:
40084a60:	004136        	entry	a1, 32
40084a63:	02ad      	mov.n	a10, a2
40084a65:	080c      	movi.n	a8, 0
40084a67:	0289      	s32i.n	a8, a2, 0
40084a69:	1b0c      	movi.n	a11, 1
40084a6b:	ffed65        	call8	40084940 <lock_init_generic>
40084a6e:	f01d      	retw.n

40084a70 <_lock_init_recursive>:
40084a70:	004136        	entry	a1, 32
40084a73:	02ad      	mov.n	a10, a2
40084a75:	080c      	movi.n	a8, 0
40084a77:	0289      	s32i.n	a8, a2, 0
40084a79:	4b0c      	movi.n	a11, 4
40084a7b:	ffec65        	call8	40084940 <lock_init_generic>
40084a7e:	f01d      	retw.n

40084a80 <_lock_close>:
40084a80:	004136        	entry	a1, 32
40084a83:	ef3ba1        	l32r	a10, 40080770 <_init_end+0x370>
40084a86:	0400a5        	call8	40088a90 <vTaskEnterCritical>
40084a89:	002232        	l32i	a3, a2, 0
40084a8c:	53ac      	beqz.n	a3, 40084ab5 <_lock_close+0x35>
40084a8e:	03ad      	mov.n	a10, a3
40084a90:	02cbe5        	call8	40087750 <xQueueGetMutexHolder>
40084a93:	3a9c      	beqz.n	a10, 40084aaa <_lock_close+0x2a>
40084a95:	ef3ad1        	l32r	a13, 40080780 <_init_end+0x380>
40084a98:	71a0c2        	movi	a12, 113
40084a9b:	ef37b1        	l32r	a11, 40080778 <_init_end+0x378>
40084a9e:	ef37a1        	l32r	a10, 4008077c <_init_end+0x37c>
40084aa1:	ee7d81        	l32r	a8, 40080498 <_init_end+0x98>
40084aa4:	0008e0        	callx8	a8
40084aa7:	068c65        	call8	4008b36c <abort>
40084aaa:	20a330        	or	a10, a3, a3
40084aad:	0330e5        	call8	40087dbc <vQueueDelete>
40084ab0:	00a032        	movi	a3, 0
40084ab3:	0239      	s32i.n	a3, a2, 0
40084ab5:	f03d      	nop.n
40084ab7:	f03d      	nop.n
40084ab9:	f03d      	nop.n
40084abb:	0020f0        	nop
40084abe:	ef2ca1        	l32r	a10, 40080770 <_init_end+0x370>
40084ac1:	0410e5        	call8	40088bd0 <vTaskExitCritical>
40084ac4:	f01d      	retw.n
	...

40084ac8 <_lock_acquire>:
40084ac8:	004136        	entry	a1, 32
40084acb:	1c0c      	movi.n	a12, 1
40084acd:	fb7c      	movi.n	a11, -1
40084acf:	02ad      	mov.n	a10, a2
40084ad1:	ffeaa5        	call8	4008497c <lock_acquire_generic>
40084ad4:	f01d      	retw.n
	...

40084ad8 <_lock_acquire_recursive>:
40084ad8:	004136        	entry	a1, 32
40084adb:	4c0c      	movi.n	a12, 4
40084add:	fb7c      	movi.n	a11, -1
40084adf:	02ad      	mov.n	a10, a2
40084ae1:	ffe9a5        	call8	4008497c <lock_acquire_generic>
40084ae4:	f01d      	retw.n
	...

40084ae8 <_lock_try_acquire>:
40084ae8:	004136        	entry	a1, 32
40084aeb:	1c0c      	movi.n	a12, 1
40084aed:	0b0c      	movi.n	a11, 0
40084aef:	02ad      	mov.n	a10, a2
40084af1:	ffe8a5        	call8	4008497c <lock_acquire_generic>
40084af4:	0a2d      	mov.n	a2, a10
40084af6:	f01d      	retw.n

40084af8 <_lock_try_acquire_recursive>:
40084af8:	004136        	entry	a1, 32
40084afb:	4c0c      	movi.n	a12, 4
40084afd:	0b0c      	movi.n	a11, 0
40084aff:	02ad      	mov.n	a10, a2
40084b01:	ffe7a5        	call8	4008497c <lock_acquire_generic>
40084b04:	0a2d      	mov.n	a2, a10
40084b06:	f01d      	retw.n

40084b08 <_lock_release>:
40084b08:	004136        	entry	a1, 32
40084b0b:	1b0c      	movi.n	a11, 1
40084b0d:	02ad      	mov.n	a10, a2
40084b0f:	fff065        	call8	40084a14 <lock_release_generic>
40084b12:	f01d      	retw.n

40084b14 <_lock_release_recursive>:
40084b14:	004136        	entry	a1, 32
40084b17:	4b0c      	movi.n	a11, 4
40084b19:	02ad      	mov.n	a10, a2
40084b1b:	ffefa5        	call8	40084a14 <lock_release_generic>
40084b1e:	f01d      	retw.n

40084b20 <pthread_mutex_lock_internal>:
40084b20:	004136        	entry	a1, 32
40084b23:	03d216        	beqz	a2, 40084b64 <pthread_mutex_lock_internal+0x44>
40084b26:	1288      	l32i.n	a8, a2, 4
40084b28:	0c2866        	bnei	a8, 2, 40084b38 <pthread_mutex_lock_internal+0x18>
40084b2b:	02a8      	l32i.n	a10, a2, 0
40084b2d:	02c225        	call8	40087750 <xQueueGetMutexHolder>
40084b30:	0a4d      	mov.n	a4, a10
40084b32:	03e765        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40084b35:	2f14a7        	beq	a4, a10, 40084b68 <pthread_mutex_lock_internal+0x48>
40084b38:	1288      	l32i.n	a8, a2, 4
40084b3a:	101866        	bnei	a8, 1, 40084b4e <pthread_mutex_lock_internal+0x2e>
40084b3d:	03bd      	mov.n	a11, a3
40084b3f:	02a8      	l32i.n	a10, a2, 0
40084b41:	031865        	call8	40087cc8 <xQueueTakeMutexRecursive>
40084b44:	241a26        	beqi	a10, 1, 40084b6c <pthread_mutex_lock_internal+0x4c>
40084b47:	021c      	movi.n	a2, 16
40084b49:	f01d      	retw.n
40084b4b:	000000        	ill
40084b4e:	00a0d2        	movi	a13, 0
40084b51:	20c330        	or	a12, a3, a3
40084b54:	20bdd0        	or	a11, a13, a13
40084b57:	02a8      	l32i.n	a10, a2, 0
40084b59:	0300a5        	call8	40087b64 <xQueueGenericReceive>
40084b5c:	101a26        	beqi	a10, 1, 40084b70 <pthread_mutex_lock_internal+0x50>
40084b5f:	021c      	movi.n	a2, 16
40084b61:	f01d      	retw.n
40084b63:	621c00        	lsi	f0, a12, 0x188
40084b66:	f01d      	retw.n
40084b68:	d22c      	movi.n	a2, 45
40084b6a:	f01d      	retw.n
40084b6c:	020c      	movi.n	a2, 0
40084b6e:	f01d      	retw.n
40084b70:	020c      	movi.n	a2, 0
40084b72:	f01d      	retw.n

40084b74 <pthread_mutex_lock>:
40084b74:	004136        	entry	a1, 32
40084b77:	013216        	beqz	a2, 40084b8e <pthread_mutex_lock+0x1a>
40084b7a:	20a220        	or	a10, a2, a2
40084b7d:	6549a5        	call8	400ea018 <pthread_mutex_init_if_static>
40084b80:	00ea56        	bnez	a10, 40084b92 <pthread_mutex_lock+0x1e>
40084b83:	fb7c      	movi.n	a11, -1
40084b85:	02a8      	l32i.n	a10, a2, 0
40084b87:	fff9a5        	call8	40084b20 <pthread_mutex_lock_internal>
40084b8a:	0a2d      	mov.n	a2, a10
40084b8c:	f01d      	retw.n
40084b8e:	621c      	movi.n	a2, 22
40084b90:	f01d      	retw.n
40084b92:	0a2d      	mov.n	a2, a10
40084b94:	f01d      	retw.n
	...

40084b98 <pthread_mutex_timedlock>:
40084b98:	006136        	entry	a1, 48
40084b9b:	049216        	beqz	a2, 40084be8 <pthread_mutex_timedlock+0x50>
40084b9e:	20a220        	or	a10, a2, a2
40084ba1:	654765        	call8	400ea018 <pthread_mutex_init_if_static>
40084ba4:	044a56        	bnez	a10, 40084bec <pthread_mutex_timedlock+0x54>
40084ba7:	08c1b2        	addi	a11, a1, 8
40084baa:	01a0a2        	movi	a10, 1
40084bad:	650ca5        	call8	400e9c78 <clock_gettime>
40084bb0:	0388      	l32i.n	a8, a3, 0
40084bb2:	2198      	l32i.n	a9, a1, 8
40084bb4:	c09890        	sub	a9, a8, a9
40084bb7:	1189b0        	slli	a8, a9, 5
40084bba:	c08890        	sub	a8, a8, a9
40084bbd:	a08890        	addx4	a8, a8, a9
40084bc0:	11b8d0        	slli	a11, a8, 3
40084bc3:	1388      	l32i.n	a8, a3, 4
40084bc5:	31a8      	l32i.n	a10, a1, 12
40084bc7:	c0a8a0        	sub	a10, a8, a10
40084bca:	eeee81        	l32r	a8, 40080784 <_init_end+0x384>
40084bcd:	b28a80        	mulsh	a8, a10, a8
40084bd0:	319280        	srai	a9, a8, 18
40084bd3:	318fa0        	srai	a8, a10, 31
40084bd6:	c08980        	sub	a8, a9, a8
40084bd9:	bb8a      	add.n	a11, a11, a8
40084bdb:	02a8      	l32i.n	a10, a2, 0
40084bdd:	fff425        	call8	40084b20 <pthread_mutex_lock_internal>
40084be0:	0cba66        	bnei	a10, 16, 40084bf0 <pthread_mutex_timedlock+0x58>
40084be3:	74a022        	movi	a2, 116
40084be6:	f01d      	retw.n
40084be8:	621c      	movi.n	a2, 22
40084bea:	f01d      	retw.n
40084bec:	0a2d      	mov.n	a2, a10
40084bee:	f01d      	retw.n
40084bf0:	0a2d      	mov.n	a2, a10
40084bf2:	f01d      	retw.n

40084bf4 <pthread_mutex_trylock>:
40084bf4:	004136        	entry	a1, 32
40084bf7:	013216        	beqz	a2, 40084c0e <pthread_mutex_trylock+0x1a>
40084bfa:	20a220        	or	a10, a2, a2
40084bfd:	6541a5        	call8	400ea018 <pthread_mutex_init_if_static>
40084c00:	00ea56        	bnez	a10, 40084c12 <pthread_mutex_trylock+0x1e>
40084c03:	0b0c      	movi.n	a11, 0
40084c05:	02a8      	l32i.n	a10, a2, 0
40084c07:	fff1a5        	call8	40084b20 <pthread_mutex_lock_internal>
40084c0a:	0a2d      	mov.n	a2, a10
40084c0c:	f01d      	retw.n
40084c0e:	621c      	movi.n	a2, 22
40084c10:	f01d      	retw.n
40084c12:	0a2d      	mov.n	a2, a10
40084c14:	f01d      	retw.n
	...

40084c18 <pthread_mutex_unlock>:
40084c18:	004136        	entry	a1, 32
40084c1b:	046216        	beqz	a2, 40084c65 <pthread_mutex_unlock+0x4d>
40084c1e:	002222        	l32i	a2, a2, 0
40084c21:	044216        	beqz	a2, 40084c69 <pthread_mutex_unlock+0x51>
40084c24:	012282        	l32i	a8, a2, 4
40084c27:	880b      	addi.n	a8, a8, -1
40084c29:	0c28f6        	bgeui	a8, 2, 40084c39 <pthread_mutex_unlock+0x21>
40084c2c:	02a8      	l32i.n	a10, a2, 0
40084c2e:	02b225        	call8	40087750 <xQueueGetMutexHolder>
40084c31:	0a3d      	mov.n	a3, a10
40084c33:	03d765        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40084c36:	3393a7        	bne	a3, a10, 40084c6d <pthread_mutex_unlock+0x55>
40084c39:	1288      	l32i.n	a8, a2, 4
40084c3b:	071866        	bnei	a8, 1, 40084c46 <pthread_mutex_unlock+0x2e>
40084c3e:	02a8      	l32i.n	a10, a2, 0
40084c40:	02d425        	call8	40087984 <xQueueGiveMutexRecursive>
40084c43:	000306        	j	40084c53 <pthread_mutex_unlock+0x3b>
40084c46:	00a0d2        	movi	a13, 0
40084c49:	20cdd0        	or	a12, a13, a13
40084c4c:	0dbd      	mov.n	a11, a13
40084c4e:	02a8      	l32i.n	a10, a2, 0
40084c50:	02b925        	call8	400877e4 <xQueueGenericSend>
40084c53:	1a1a26        	beqi	a10, 1, 40084c71 <pthread_mutex_unlock+0x59>
40084c56:	eeccd1        	l32r	a13, 40080788 <_init_end+0x388>
40084c59:	eeccc1        	l32r	a12, 4008078c <_init_end+0x38c>
40084c5c:	84a2b2        	movi	a11, 0x284
40084c5f:	eecca1        	l32r	a10, 40080790 <_init_end+0x390>
40084c62:	562765        	call8	400daed8 <__assert_func>
40084c65:	621c      	movi.n	a2, 22
40084c67:	f01d      	retw.n
40084c69:	621c      	movi.n	a2, 22
40084c6b:	f01d      	retw.n
40084c6d:	120c      	movi.n	a2, 1
40084c6f:	f01d      	retw.n
40084c71:	020c      	movi.n	a2, 0
40084c73:	f01d      	retw.n
40084c75:	000000        	ill

40084c78 <coex_bt_request>:
40084c78:	004136        	entry	a1, 32
40084c7b:	20b220        	or	a11, a2, a2
40084c7e:	20d440        	or	a13, a4, a4
40084c81:	20c330        	or	a12, a3, a3
40084c84:	0a0c      	movi.n	a10, 0
40084c86:	002165        	call8	40084e9c <coex_core_request>
40084c89:	0a2d      	mov.n	a2, a10
40084c8b:	f01d      	retw.n
40084c8d:	000000        	ill

40084c90 <coex_bt_release>:
40084c90:	004136        	entry	a1, 32
40084c93:	20b220        	or	a11, a2, a2
40084c96:	00a0a2        	movi	a10, 0
40084c99:	002aa5        	call8	40084f44 <coex_core_release>
40084c9c:	202aa0        	or	a2, a10, a10
40084c9f:	f01d      	retw.n
40084ca1:	000000        	ill

40084ca4 <coex_bb_reset_lock>:
40084ca4:	004136        	entry	a1, 32
40084ca7:	0037a5        	call8	40085020 <coex_core_bb_reset_lock>
40084caa:	0a2d      	mov.n	a2, a10
40084cac:	f01d      	retw.n
	...

40084cb0 <coex_bb_reset_unlock>:
40084cb0:	004136        	entry	a1, 32
40084cb3:	02ad      	mov.n	a10, a2
40084cb5:	003be5        	call8	40085074 <coex_core_bb_reset_unlock>
40084cb8:	f01d      	retw.n
40084cba:	940000        	extui	a0, a0, 0, 10
40084cbd:	ef          	.byte 0xef
40084cbe:	3ffb      	addi.n	a3, a15, 15
40084cc0:	ef08      	l32i.n	a0, a15, 56
40084cc2:	3ffb      	addi.n	a3, a15, 15
40084cc4:	008136        	entry	a1, 64
40084cc7:	fffd31        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084cca:	090c      	movi.n	a9, 0
40084ccc:	03a122        	movi	a2, 0x103
40084ccf:	2388      	l32i.n	a8, a3, 8
40084cd1:	0199      	s32i.n	a9, a1, 0
40084cd3:	491897        	beq	a8, a9, 40084d20 <coex_bb_reset_unlock+0x70>
40084cd6:	f03d      	nop.n
40084cd8:	f03d      	nop.n
40084cda:	f03d      	nop.n
40084cdc:	f03d      	nop.n
40084cde:	fff821        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
40084ce1:	0288      	l32i.n	a8, a2, 0
40084ce3:	c8a8      	l32i.n	a10, a8, 48
40084ce5:	000ae0        	callx8	a10
40084ce8:	da9c      	beqz.n	a10, 40084d09 <coex_bb_reset_unlock+0x59>
40084cea:	01bd      	mov.n	a11, a1
40084cec:	0288      	l32i.n	a8, a2, 0
40084cee:	23a8      	l32i.n	a10, a3, 8
40084cf0:	8838      	l32i.n	a3, a8, 32
40084cf2:	0003e0        	callx8	a3
40084cf5:	0138      	l32i.n	a3, a1, 0
40084cf7:	939c      	beqz.n	a3, 40084d14 <coex_bb_reset_unlock+0x64>
40084cf9:	0228      	l32i.n	a2, a2, 0
40084cfb:	5228      	l32i.n	a2, a2, 20
40084cfd:	41a9      	s32i.n	a10, a1, 16
40084cff:	0002e0        	callx8	a2
40084d02:	41a8      	l32i.n	a10, a1, 16
40084d04:	000306        	j	40084d14 <coex_bb_reset_unlock+0x64>
40084d07:	280000        	lsi	f0, a0, 160
40084d0a:	fb7c02        	lsi	f0, a12, 0x3ec
40084d0d:	a228      	l32i.n	a2, a2, 40
40084d0f:	23a8      	l32i.n	a10, a3, 8
40084d11:	0002e0        	callx8	a2
40084d14:	aa0b      	addi.n	a10, a10, -1
40084d16:	020c      	movi.n	a2, 0
40084d18:	130c      	movi.n	a3, 1
40084d1a:	9323a0        	movnez	a2, a3, a10
40084d1d:	602020        	neg	a2, a2
40084d20:	f01d      	retw.n
40084d22:	540000        	extui	a0, a0, 0, 6
40084d25:	407c      	movi.n	a0, -12
40084d27:	3f          	.byte 0x3f
40084d28:	ef0c      	movi.n	a15, 14
40084d2a:	3ffb      	addi.n	a3, a15, 15

40084d2c <coex_core_ts_start>:
40084d2c:	004136        	entry	a1, 32
40084d2f:	ffe331        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084d32:	742020        	extui	a2, a2, 0, 8
40084d35:	c8a042        	movi	a4, 200
40084d38:	050c      	movi.n	a5, 0
40084d3a:	13a8      	l32i.n	a10, a3, 4
40084d3c:	000346        	j	40084d4d <coex_core_ts_start+0x21>
40084d3f:	13a800        	lsi	f0, a8, 76
40084d42:	020c      	movi.n	a2, 0
40084d44:	000146        	j	40084d4d <coex_core_ts_start+0x21>
40084d47:	000000        	ill
40084d4a:	01a022        	movi	a2, 1
40084d4d:	014a56        	bnez	a10, 40084d65 <coex_core_ts_start+0x39>
40084d50:	0089a5        	call8	400855ec <coex_time_now>
40084d53:	0abd      	mov.n	a11, a10
40084d55:	fff3c1        	l32r	a12, 40084d24 <coex_bb_reset_unlock+0x74>
40084d58:	d4a0d2        	movi	a13, 212
40084d5b:	fff3a1        	l32r	a10, 40084d28 <coex_bb_reset_unlock+0x78>
40084d5e:	671825        	call8	400ebee0 <coexist_printf>
40084d61:	ffff06        	j	40084d61 <coex_core_ts_start+0x35>
40084d64:	b2cc00        	mulsh	a12, a12, a0
40084d67:	0328      	l32i.n	a2, a3, 0
40084d69:	728c      	beqz.n	a2, 40084d74 <coex_core_ts_start+0x48>
40084d6b:	010a82        	l8ui	a8, a10, 1
40084d6e:	010222        	l8ui	a2, a2, 1
40084d71:	5bb287        	bgeu	a2, a8, 40084dd0 <coex_core_ts_start+0xa4>
40084d74:	008fa5        	call8	40085670 <coex_timer_ts_end_disalarm>
40084d77:	0123a2        	l32i	a10, a3, 4
40084d7a:	000a22        	l8ui	a2, a10, 0
40084d7d:	201266        	bnei	a2, 1, 40084da1 <coex_core_ts_start+0x75>
40084d80:	002322        	l32i	a2, a3, 0
40084d83:	005216        	beqz	a2, 40084d8c <coex_core_ts_start+0x60>
40084d86:	000222        	l8ui	a2, a2, 0
40084d89:	0b1226        	beqi	a2, 1, 40084d98 <coex_core_ts_start+0x6c>
40084d8c:	3328      	l32i.n	a2, a3, 12
40084d8e:	061266        	bnei	a2, 1, 40084d98 <coex_core_ts_start+0x6c>
40084d91:	02ad      	mov.n	a10, a2
40084d93:	0042a5        	call8	400851bc <coex_force_wifi_mode>
40084d96:	13a8      	l32i.n	a10, a3, 4
40084d98:	5328      	l32i.n	a2, a3, 20
40084d9a:	a2dc      	bnez.n	a2, 40084db8 <coex_core_ts_start+0x8c>
40084d9c:	000906        	j	40084dc4 <coex_core_ts_start+0x98>
40084d9f:	dc0000        	lsi	f0, a0, 0x370
40084da2:	0328f2        	l32i	a15, a8, 12
40084da5:	00a216        	beqz	a2, 40084db3 <coex_core_ts_start+0x87>
40084da8:	000222        	l8ui	a2, a2, 0
40084dab:	004216        	beqz	a2, 40084db3 <coex_core_ts_start+0x87>
40084dae:	007065        	call8	400854b4 <coex_unforce_wifi_mode>
40084db1:	13a8      	l32i.n	a10, a3, 4
40084db3:	4328      	l32i.n	a2, a3, 16
40084db5:	00b216        	beqz	a2, 40084dc4 <coex_core_ts_start+0x98>
40084db8:	061ab2        	l16ui	a11, a10, 12
40084dbb:	020aa2        	l8ui	a10, a10, 2
40084dbe:	0002e0        	callx8	a2
40084dc1:	0123a2        	l32i	a10, a3, 4
40084dc4:	061a82        	l16ui	a8, a10, 12
40084dc7:	01c882        	addi	a8, a8, 1
40084dca:	065a82        	s16i	a8, a10, 12
40084dcd:	0063a2        	s32i	a10, a3, 0
40084dd0:	00c4a5        	call8	40085a1c <coex_arbit_next>
40084dd3:	13a9      	s32i.n	a10, a3, 4
40084dd5:	048a16        	beqz	a10, 40084e21 <coex_core_ts_start+0xf5>
40084dd8:	008125        	call8	400855ec <coex_time_now>
40084ddb:	1328      	l32i.n	a2, a3, 4
40084ddd:	12b8      	l32i.n	a11, a2, 4
40084ddf:	022fe5        	call8	400870dc <coex_time_diff>
40084de2:	0a2d      	mov.n	a2, a10
40084de4:	0224a7        	blt	a4, a10, 40084dea <coex_core_ts_start+0xbe>
40084de7:	ffd546        	j	40084d40 <coex_core_ts_start+0x14>
40084dea:	008025        	call8	400855ec <coex_time_now>
40084ded:	002382        	l32i	a8, a3, 0
40084df0:	0228b2        	l32i	a11, a8, 8
40084df3:	022ea5        	call8	400870dc <coex_time_diff>
40084df6:	0aa4a7        	bge	a4, a10, 40084e04 <coex_core_ts_start+0xd8>
40084df9:	008525        	call8	4008564c <coex_timer_ts_end_alarm>
40084dfc:	02ad      	mov.n	a10, a2
40084dfe:	0089a5        	call8	40085698 <coex_timer_ts_start_alarm>
40084e01:	f01d      	retw.n
40084e03:	232200        	sext	a2, a2, 7
40084e06:	022200        	andb	b2, b2, b0
40084e09:	126600        	andbc	b6, b6, b0
40084e0c:	6a6502        	s32i	a0, a5, 0x1a8
40084e0f:	13a800        	lsi	f0, a8, 76
40084e12:	0359      	s32i.n	a5, a3, 0
40084e14:	00c365        	call8	40085a4c <coex_arbit_clean_overtime_until>
40084e17:	00bda5        	call8	400859f0 <coex_arbit_first>
40084e1a:	13a9      	s32i.n	a10, a3, 4
40084e1c:	f2aa56        	bnez	a10, 40084d4a <coex_core_ts_start+0x1e>
40084e1f:	f01d      	retw.n
40084e21:	007ca5        	call8	400855ec <coex_time_now>
40084e24:	002322        	l32i	a2, a3, 0
40084e27:	22b8      	l32i.n	a11, a2, 8
40084e29:	022b25        	call8	400870dc <coex_time_diff>
40084e2c:	04a4a7        	bge	a4, a10, 40084e34 <coex_core_ts_start+0x108>
40084e2f:	0081e5        	call8	4008564c <coex_timer_ts_end_alarm>
40084e32:	f01d      	retw.n
40084e34:	002322        	l32i	a2, a3, 0
40084e37:	000222        	l8ui	a2, a2, 0
40084e3a:	021266        	bnei	a2, 1, 40084e40 <coex_core_ts_start+0x114>
40084e3d:	006765        	call8	400854b4 <coex_unforce_wifi_mode>
40084e40:	13a8      	l32i.n	a10, a3, 4
40084e42:	0359      	s32i.n	a5, a3, 0
40084e44:	00c065        	call8	40085a4c <coex_arbit_clean_overtime_until>
40084e47:	00baa5        	call8	400859f0 <coex_arbit_first>
40084e4a:	13a9      	s32i.n	a10, a3, 4
40084e4c:	efaa56        	bnez	a10, 40084d4a <coex_core_ts_start+0x1e>
40084e4f:	f01d      	retw.n
40084e51:	000000        	ill
40084e54:	004136        	entry	a1, 32
40084e57:	008665        	call8	400856bc <coex_timer_ts_start_disalarm>
40084e5a:	008165        	call8	40085670 <coex_timer_ts_end_disalarm>
40084e5d:	00b925        	call8	400859f0 <coex_arbit_first>
40084e60:	0a3d      	mov.n	a3, a10
40084e62:	03a122        	movi	a2, 0x103
40084e65:	baac      	beqz.n	a10, 40084e94 <coex_core_ts_start+0x168>
40084e67:	1aa8      	l32i.n	a10, a10, 4
40084e69:	f4a1b2        	movi	a11, 0x1f4
40084e6c:	007ae5        	call8	4008561c <coex_time_is_in_time>
40084e6f:	0a2d      	mov.n	a2, a10
40084e71:	ca8c      	beqz.n	a10, 40084e81 <coex_core_ts_start+0x155>
40084e73:	ff9221        	l32r	a2, 40084cbc <coex_bb_reset_unlock+0xc>
40084e76:	1a0c      	movi.n	a10, 1
40084e78:	1239      	s32i.n	a3, a2, 4
40084e7a:	ffeb25        	call8	40084d2c <coex_core_ts_start>
40084e7d:	020c      	movi.n	a2, 0
40084e7f:	f01d      	retw.n
40084e81:	ff8e81        	l32r	a8, 40084cbc <coex_bb_reset_unlock+0xc>
40084e84:	0068a2        	s32i	a10, a8, 0
40084e87:	1839      	s32i.n	a3, a8, 4
40084e89:	007625        	call8	400855ec <coex_time_now>
40084e8c:	13b8      	l32i.n	a11, a3, 4
40084e8e:	0224e5        	call8	400870dc <coex_time_diff>
40084e91:	008065        	call8	40085698 <coex_timer_ts_start_alarm>
40084e94:	f01d      	retw.n
40084e96:	180000        	lsxp	f0, a0, a0
40084e99:	ef          	.byte 0xef
40084e9a:	3ffb      	addi.n	a3, a15, 15

40084e9c <coex_core_request>:
40084e9c:	008136        	entry	a1, 64
40084e9f:	004122        	s8i	a2, a1, 0
40084ea2:	0020c0        	memw
40084ea5:	482c      	movi.n	a8, 36
40084ea7:	ffa022        	movi	a2, 255
40084eaa:	0c3837        	bltu	a8, a3, 40084eba <coex_core_request+0x1e>
40084ead:	902330        	addx2	a2, a3, a3
40084eb0:	f03d      	nop.n
40084eb2:	fff981        	l32r	a8, 40084e98 <coex_core_ts_start+0x16c>
40084eb5:	282a      	add.n	a2, a8, a2
40084eb7:	010222        	l8ui	a2, a2, 1
40084eba:	545a      	add.n	a5, a4, a5
40084ebc:	014122        	s8i	a2, a1, 1
40084ebf:	020c      	movi.n	a2, 0
40084ec1:	024132        	s8i	a3, a1, 2
40084ec4:	0020c0        	memw
40084ec7:	007265        	call8	400855ec <coex_time_now>
40084eca:	aa4a      	add.n	a10, a10, a4
40084ecc:	0161a2        	s32i	a10, a1, 4
40084ecf:	0071e5        	call8	400855ec <coex_time_now>
40084ed2:	a5aa      	add.n	a10, a5, a10
40084ed4:	21a9      	s32i.n	a10, a1, 8
40084ed6:	065122        	s16i	a2, a1, 12
40084ed9:	0020c0        	memw
40084edc:	ffde65        	call8	40084cc4 <coex_bb_reset_unlock+0x14>
40084edf:	05ba56        	bnez	a10, 40084f3e <coex_core_request+0xa2>
40084ee2:	03a122        	movi	a2, 0x103
40084ee5:	ff7531        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084ee8:	3348      	l32i.n	a4, a3, 12
40084eea:	c48c      	beqz.n	a4, 40084efa <coex_core_request+0x5e>
40084eec:	01ad      	mov.n	a10, a1
40084eee:	008f25        	call8	400857e0 <coex_arbit_insert>
40084ef1:	0a2d      	mov.n	a2, a10
40084ef3:	3acc      	bnez.n	a10, 40084efa <coex_core_request+0x5e>
40084ef5:	fff5e5        	call8	40084e54 <coex_core_ts_start+0x128>
40084ef8:	0a2d      	mov.n	a2, a10
40084efa:	050c      	movi.n	a5, 0
40084efc:	2348      	l32i.n	a4, a3, 8
40084efe:	4159      	s32i.n	a5, a1, 16
40084f00:	3c1457        	beq	a4, a5, 40084f40 <coex_core_request+0xa4>
40084f03:	f03d      	nop.n
40084f05:	f03d      	nop.n
40084f07:	f03d      	nop.n
40084f09:	f03d      	nop.n
40084f0b:	ff6d41        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40084f0e:	0458      	l32i.n	a5, a4, 0
40084f10:	0c25a2        	l32i	a10, a5, 48
40084f13:	000ae0        	callx8	a10
40084f16:	8a9c      	beqz.n	a10, 40084f32 <coex_core_request+0x96>
40084f18:	10c1b2        	addi	a11, a1, 16
40084f1b:	0458      	l32i.n	a5, a4, 0
40084f1d:	23a8      	l32i.n	a10, a3, 8
40084f1f:	092532        	l32i	a3, a5, 36
40084f22:	0003e0        	callx8	a3
40084f25:	4138      	l32i.n	a3, a1, 16
40084f27:	539c      	beqz.n	a3, 40084f40 <coex_core_request+0xa4>
40084f29:	0438      	l32i.n	a3, a4, 0
40084f2b:	5338      	l32i.n	a3, a3, 20
40084f2d:	0003e0        	callx8	a3
40084f30:	f01d      	retw.n
40084f32:	0448      	l32i.n	a4, a4, 0
40084f34:	23a8      	l32i.n	a10, a3, 8
40084f36:	0b2432        	l32i	a3, a4, 44
40084f39:	0003e0        	callx8	a3
40084f3c:	f01d      	retw.n
40084f3e:	f27c      	movi.n	a2, -1
40084f40:	f01d      	retw.n
	...

40084f44 <coex_core_release>:
40084f44:	008136        	entry	a1, 64
40084f47:	004122        	s8i	a2, a1, 0
40084f4a:	0020c0        	memw
40084f4d:	24a082        	movi	a8, 36
40084f50:	ffa022        	movi	a2, 255
40084f53:	0e3837        	bltu	a8, a3, 40084f65 <coex_core_release+0x21>
40084f56:	902330        	addx2	a2, a3, a3
40084f59:	0020f0        	nop
40084f5c:	ffcf41        	l32r	a4, 40084e98 <coex_core_ts_start+0x16c>
40084f5f:	802420        	add	a2, a4, a2
40084f62:	010222        	l8ui	a2, a2, 1
40084f65:	014122        	s8i	a2, a1, 1
40084f68:	024132        	s8i	a3, a1, 2
40084f6b:	0020c0        	memw
40084f6e:	ffd565        	call8	40084cc4 <coex_bb_reset_unlock+0x14>
40084f71:	099a56        	bnez	a10, 4008500e <coex_core_release+0xca>
40084f74:	03a122        	movi	a2, 0x103
40084f77:	ff5131        	l32r	a3, 40084cbc <coex_bb_reset_unlock+0xc>
40084f7a:	3388      	l32i.n	a8, a3, 12
40084f7c:	049816        	beqz	a8, 40084fc9 <coex_core_release+0x85>
40084f7f:	01ad      	mov.n	a10, a1
40084f81:	00a065        	call8	40085988 <coex_arbit_delete>
40084f84:	0a2d      	mov.n	a2, a10
40084f86:	03fa56        	bnez	a10, 40084fc9 <coex_core_release+0x85>
40084f89:	0328      	l32i.n	a2, a3, 0
40084f8b:	729c      	beqz.n	a2, 40084fa6 <coex_core_release+0x62>
40084f8d:	020142        	l8ui	a4, a1, 2
40084f90:	020222        	l8ui	a2, a2, 2
40084f93:	0f9427        	bne	a4, a2, 40084fa6 <coex_core_release+0x62>
40084f96:	000122        	l8ui	a2, a1, 0
40084f99:	021266        	bnei	a2, 1, 40084f9f <coex_core_release+0x5b>
40084f9c:	005165        	call8	400854b4 <coex_unforce_wifi_mode>
40084f9f:	020c      	movi.n	a2, 0
40084fa1:	006ce5        	call8	40085670 <coex_timer_ts_end_disalarm>
40084fa4:	0329      	s32i.n	a2, a3, 0
40084fa6:	f03d      	nop.n
40084fa8:	f03d      	nop.n
40084faa:	f03d      	nop.n
40084fac:	f03d      	nop.n
40084fae:	1328      	l32i.n	a2, a3, 4
40084fb0:	010216        	beqz	a2, 40084fc4 <coex_core_release+0x80>
40084fb3:	020142        	l8ui	a4, a1, 2
40084fb6:	020222        	l8ui	a2, a2, 2
40084fb9:	079427        	bne	a4, a2, 40084fc4 <coex_core_release+0x80>
40084fbc:	00a022        	movi	a2, 0
40084fbf:	006fe5        	call8	400856bc <coex_timer_ts_start_disalarm>
40084fc2:	1329      	s32i.n	a2, a3, 4
40084fc4:	ffe8e5        	call8	40084e54 <coex_core_ts_start+0x128>
40084fc7:	0a2d      	mov.n	a2, a10
40084fc9:	090c      	movi.n	a9, 0
40084fcb:	2388      	l32i.n	a8, a3, 8
40084fcd:	4199      	s32i.n	a9, a1, 16
40084fcf:	3d1897        	beq	a8, a9, 40085010 <coex_core_release+0xcc>
40084fd2:	f03d      	nop.n
40084fd4:	f03d      	nop.n
40084fd6:	f03d      	nop.n
40084fd8:	f03d      	nop.n
40084fda:	ff3941        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40084fdd:	002482        	l32i	a8, a4, 0
40084fe0:	0c28a2        	l32i	a10, a8, 48
40084fe3:	000ae0        	callx8	a10
40084fe6:	8a9c      	beqz.n	a10, 40085002 <coex_core_release+0xbe>
40084fe8:	10c1b2        	addi	a11, a1, 16
40084feb:	0488      	l32i.n	a8, a4, 0
40084fed:	23a8      	l32i.n	a10, a3, 8
40084fef:	092832        	l32i	a3, a8, 36
40084ff2:	0003e0        	callx8	a3
40084ff5:	4138      	l32i.n	a3, a1, 16
40084ff7:	539c      	beqz.n	a3, 40085010 <coex_core_release+0xcc>
40084ff9:	0438      	l32i.n	a3, a4, 0
40084ffb:	5338      	l32i.n	a3, a3, 20
40084ffd:	0003e0        	callx8	a3
40085000:	f01d      	retw.n
40085002:	0448      	l32i.n	a4, a4, 0
40085004:	23a8      	l32i.n	a10, a3, 8
40085006:	0b2432        	l32i	a3, a4, 44
40085009:	0003e0        	callx8	a3
4008500c:	f01d      	retw.n
4008500e:	f27c      	movi.n	a2, -1
40085010:	f01d      	retw.n
40085012:	870000        	lsi	f0, a0, 0x21c
40085015:	ef          	.byte 0xef
40085016:	3ffb      	addi.n	a3, a15, 15
40085018:	ef88      	l32i.n	a8, a15, 56
4008501a:	3ffb      	addi.n	a3, a15, 15
4008501c:	ef8c      	beqz.n	a15, 4008502e <coex_core_bb_reset_lock+0xe>
4008501e:	3ffb      	addi.n	a3, a15, 15

40085020 <coex_core_bb_reset_lock>:
40085020:	004136        	entry	a1, 32
40085023:	fffd81        	l32r	a8, 40085018 <coex_core_release+0xd4>
40085026:	fffb21        	l32r	a2, 40085014 <coex_core_release+0xd0>
40085029:	08a8      	l32i.n	a10, a8, 0
4008502b:	080c      	movi.n	a8, 0
4008502d:	004282        	s8i	a8, a2, 0
40085030:	0020c0        	memw
40085033:	1adc      	bnez.n	a10, 40085048 <coex_core_bb_reset_lock+0x28>
40085035:	f03d      	nop.n
40085037:	f03d      	nop.n
40085039:	f03d      	nop.n
4008503b:	f03d      	nop.n
4008503d:	fff781        	l32r	a8, 4008501c <coex_core_release+0xd8>
40085040:	08a8      	l32i.n	a10, a8, 0
40085042:	5adc      	bnez.n	a10, 4008505b <coex_core_bb_reset_lock+0x3b>
40085044:	0003c6        	j	40085057 <coex_core_bb_reset_lock+0x37>
40085047:	1e8100        	f64sexp	a8, a1, a0
4008504a:	ff          	.byte 0xff
4008504b:	0b0c      	movi.n	a11, 0
4008504d:	0888      	l32i.n	a8, a8, 0
4008504f:	8888      	l32i.n	a8, a8, 32
40085051:	0008e0        	callx8	a8
40085054:	dd1a26        	beqi	a10, 1, 40085035 <coex_core_bb_reset_lock+0x15>
40085057:	020c      	movi.n	a2, 0
40085059:	f01d      	retw.n
4008505b:	ff1981        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
4008505e:	190c      	movi.n	a9, 1
40085060:	0888      	l32i.n	a8, a8, 0
40085062:	3888      	l32i.n	a8, a8, 12
40085064:	004292        	s8i	a9, a2, 0
40085067:	0020c0        	memw
4008506a:	0008e0        	callx8	a8
4008506d:	0a2d      	mov.n	a2, a10
4008506f:	f01d      	retw.n
40085071:	000000        	ill

40085074 <coex_core_bb_reset_unlock>:
40085074:	004136        	entry	a1, 32
40085077:	ffe981        	l32r	a8, 4008501c <coex_core_release+0xd8>
4008507a:	08a8      	l32i.n	a10, a8, 0
4008507c:	4a9c      	beqz.n	a10, 40085094 <coex_core_bb_reset_unlock+0x20>
4008507e:	ffe581        	l32r	a8, 40085014 <coex_core_release+0xd0>
40085081:	000882        	l8ui	a8, a8, 0
40085084:	c88c      	beqz.n	a8, 40085094 <coex_core_bb_reset_unlock+0x20>
40085086:	02bd      	mov.n	a11, a2
40085088:	ff0e21        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
4008508b:	002222        	l32i	a2, a2, 0
4008508e:	042222        	l32i	a2, a2, 16
40085091:	0002e0        	callx8	a2
40085094:	ffe181        	l32r	a8, 40085018 <coex_core_release+0xd4>
40085097:	08a8      	l32i.n	a10, a8, 0
40085099:	ba8c      	beqz.n	a10, 400850a8 <coex_core_bb_reset_unlock+0x34>
4008509b:	0b0c      	movi.n	a11, 0
4008509d:	ff0881        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400850a0:	0888      	l32i.n	a8, a8, 0
400850a2:	092882        	l32i	a8, a8, 36
400850a5:	0008e0        	callx8	a8
400850a8:	f01d      	retw.n
400850aa:	500000        	lsi	f0, a0, 0x140
400850ad:	3ff712        	s32ri	a1, a7, 252
400850b0:	f71254        	lsi	f5, a2, 0x3dc
400850b3:	3f          	.byte 0x3f
400850b4:	00cc      	bnez.n	a0, 400850b8 <coex_core_bb_reset_unlock+0x44>
400850b6:	a03ff0        	addx4	a3, a15, a15
400850b9:	3ff510        	f64cmph	a15, a5, a1, 3
400850bc:	fb0000        	f64addc	a0, a0, 0, 0
400850bf:	3f          	.byte 0x3f
400850c0:	030000        	rsr.lbeg	a0
400850c3:	413600        	srli	a3, a0, 6
400850c6:	fe3100        	f64iter	a3, a1, a0, 3, 1
400850c9:	fe          	.byte 0xfe
400850ca:	ffd421        	l32r	a2, 4008501c <coex_core_release+0xd8>
400850cd:	002382        	l32i	a8, a3, 0
400850d0:	02a8      	l32i.n	a10, a2, 0
400850d2:	032882        	l32i	a8, a8, 12
400850d5:	0008e0        	callx8	a8
400850d8:	8da0b2        	movi	a11, 141
400850db:	80a0c2        	movi	a12, 128
400850de:	fff381        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
400850e1:	fff391        	l32r	a9, 400850b0 <coex_core_bb_reset_unlock+0x3c>
400850e4:	0020c0        	memw
400850e7:	08b9      	s32i.n	a11, a8, 0
400850e9:	f03d      	nop.n
400850eb:	f03d      	nop.n
400850ed:	f03d      	nop.n
400850ef:	f03d      	nop.n
400850f1:	0020c0        	memw
400850f4:	0988      	l32i.n	a8, a9, 0
400850f6:	ef88c7        	bany	a8, a12, 400850e9 <coex_core_bb_reset_unlock+0x75>
400850f9:	ffee91        	l32r	a9, 400850b4 <coex_core_bb_reset_unlock+0x40>
400850fc:	098d      	mov.n	a8, a9
400850fe:	ed16b1        	l32r	a11, 40080558 <_init_end+0x158>
40085101:	0063c0        	rsil	a12, 3
40085104:	0bb8      	l32i.n	a11, a11, 0
40085106:	0888      	l32i.n	a8, a8, 0
40085108:	13e6c0        	wsr.ps	a12
4008510b:	002010        	rsync
4008510e:	f6feb1        	l32r	a11, 40082d08 <ram_enable_agc+0x2c>
40085111:	10b8b0        	and	a11, a8, a11
40085114:	ed21c1        	l32r	a12, 40080598 <_init_end+0x198>
40085117:	0c8d      	mov.n	a8, a12
40085119:	0020c0        	memw
4008511c:	09b9      	s32i.n	a11, a9, 0
4008511e:	ed0eb1        	l32r	a11, 40080558 <_init_end+0x158>
40085121:	0063d0        	rsil	a13, 3
40085124:	0bb8      	l32i.n	a11, a11, 0
40085126:	0888      	l32i.n	a8, a8, 0
40085128:	13e6d0        	wsr.ps	a13
4008512b:	002010        	rsync
4008512e:	8b0c      	movi.n	a11, 8
40085130:	20b8b0        	or	a11, a8, a11
40085133:	0c8d      	mov.n	a8, a12
40085135:	0020c0        	memw
40085138:	0cb9      	s32i.n	a11, a12, 0
4008513a:	ed07b1        	l32r	a11, 40080558 <_init_end+0x158>
4008513d:	0063d0        	rsil	a13, 3
40085140:	0bb8      	l32i.n	a11, a11, 0
40085142:	0888      	l32i.n	a8, a8, 0
40085144:	13e6d0        	wsr.ps	a13
40085147:	002010        	rsync
4008514a:	7b7c      	movi.n	a11, -9
4008514c:	10b8b0        	and	a11, a8, a11
4008514f:	098d      	mov.n	a8, a9
40085151:	ffd9d1        	l32r	a13, 400850b8 <coex_core_bb_reset_unlock+0x44>
40085154:	0020c0        	memw
40085157:	0cb9      	s32i.n	a11, a12, 0
40085159:	f03d      	nop.n
4008515b:	f03d      	nop.n
4008515d:	f03d      	nop.n
4008515f:	f03d      	nop.n
40085161:	0020c0        	memw
40085164:	0dc8      	l32i.n	a12, a13, 0
40085166:	e4b0c0        	extui	a11, a12, 0, 15
40085169:	ffd4c1        	l32r	a12, 400850bc <coex_core_bb_reset_unlock+0x48>
4008516c:	20cbc0        	or	a12, a11, a12
4008516f:	0020c0        	memw
40085172:	0dc9      	s32i.n	a12, a13, 0
40085174:	ecf9b1        	l32r	a11, 40080558 <_init_end+0x158>
40085177:	0063c0        	rsil	a12, 3
4008517a:	0bb8      	l32i.n	a11, a11, 0
4008517c:	0888      	l32i.n	a8, a8, 0
4008517e:	13e6c0        	wsr.ps	a12
40085181:	002010        	rsync
40085184:	0abd      	mov.n	a11, a10
40085186:	f03d      	nop.n
40085188:	f03d      	nop.n
4008518a:	0338      	l32i.n	a3, a3, 0
4008518c:	ffcda1        	l32r	a10, 400850c0 <coex_core_bb_reset_unlock+0x4c>
4008518f:	2088a0        	or	a8, a8, a10
40085192:	02a8      	l32i.n	a10, a2, 0
40085194:	4328      	l32i.n	a2, a3, 16
40085196:	0020c0        	memw
40085199:	0989      	s32i.n	a8, a9, 0
4008519b:	0002e0        	callx8	a2
4008519e:	f01d      	retw.n
400851a0:	61a8      	l32i.n	a10, a1, 24
400851a2:	ac0000        	lsi	f0, a0, 0x2b0
400851a5:	ef          	.byte 0xef
400851a6:	3ffb      	addi.n	a3, a15, 15
400851a8:	f51110        	extui	a1, a1, 17, 16
400851ab:	3f          	.byte 0x3f
400851ac:	c00000        	sub	a0, a0, a0
400851af:	110c07        	bnone	a12, a0, 400851c4 <coex_force_wifi_mode+0x8>
400851b2:	903ff5        	call12	400155b0 <ea_prog_timer+0x628>
400851b5:	ef          	.byte 0xef
400851b6:	3ffb      	addi.n	a3, a15, 15
400851b8:	000000        	ill
400851bb:	f8          	.byte 0xf8

400851bc <coex_force_wifi_mode>:
400851bc:	006136        	entry	a1, 48
400851bf:	2129      	s32i.n	a2, a1, 8
400851c1:	0042a5        	call8	400855ec <coex_time_now>
400851c4:	81a042        	movi	a4, 129
400851c7:	01a9      	s32i.n	a10, a1, 0
400851c9:	f03d      	nop.n
400851cb:	f03d      	nop.n
400851cd:	f03d      	nop.n
400851cf:	f03d      	nop.n
400851d1:	febb21        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
400851d4:	ff9231        	l32r	a3, 4008501c <coex_core_release+0xd8>
400851d7:	fff461        	l32r	a6, 400851a8 <coex_core_bb_reset_unlock+0x134>
400851da:	fff451        	l32r	a5, 400851ac <coex_core_bb_reset_unlock+0x138>
400851dd:	000dc6        	j	40085218 <coex_force_wifi_mode+0x5c>
400851e0:	0040a5        	call8	400855ec <coex_time_now>
400851e3:	002182        	l32i	a8, a1, 0
400851e6:	c0aa80        	sub	a10, a10, a8
400851e9:	ffed91        	l32r	a9, 400851a0 <coex_core_bb_reset_unlock+0x12c>
400851ec:	28b9a7        	bgeu	a9, a10, 40085218 <coex_force_wifi_mode+0x5c>
400851ef:	ffed41        	l32r	a4, 400851a4 <coex_core_bb_reset_unlock+0x130>
400851f2:	016142        	s32i	a4, a1, 4
400851f5:	81af42        	movi	a4, -127
400851f8:	f03d      	nop.n
400851fa:	f03d      	nop.n
400851fc:	f03d      	nop.n
400851fe:	012152        	l32i	a5, a1, 4
40085201:	004542        	s8i	a4, a5, 0
40085204:	0020c0        	memw
40085207:	f03d      	nop.n
40085209:	f03d      	nop.n
4008520b:	f03d      	nop.n
4008520d:	f03d      	nop.n
4008520f:	ffe861        	l32r	a6, 400851b0 <coex_core_bb_reset_unlock+0x13c>
40085212:	ffe571        	l32r	a7, 400851a8 <coex_core_bb_reset_unlock+0x134>
40085215:	001a46        	j	40085282 <coex_force_wifi_mode+0xc6>
40085218:	0288      	l32i.n	a8, a2, 0
4008521a:	03a8      	l32i.n	a10, a3, 0
4008521c:	3888      	l32i.n	a8, a8, 12
4008521e:	0008e0        	callx8	a8
40085221:	0abd      	mov.n	a11, a10
40085223:	ffa281        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
40085226:	0298      	l32i.n	a9, a2, 0
40085228:	0020c0        	memw
4008522b:	0849      	s32i.n	a4, a8, 0
4008522d:	f03d      	nop.n
4008522f:	f03d      	nop.n
40085231:	f03d      	nop.n
40085233:	f03d      	nop.n
40085235:	ff9e81        	l32r	a8, 400850b0 <coex_core_bb_reset_unlock+0x3c>
40085238:	4998      	l32i.n	a9, a9, 16
4008523a:	03a8      	l32i.n	a10, a3, 0
4008523c:	0020c0        	memw
4008523f:	0878      	l32i.n	a7, a8, 0
40085241:	0009e0        	callx8	a9
40085244:	248570        	extui	a8, a7, 5, 3
40085247:	097866        	bnei	a8, 7, 40085254 <coex_force_wifi_mode+0x98>
4008524a:	ffd691        	l32r	a9, 400851a4 <coex_core_bb_reset_unlock+0x130>
4008524d:	1199      	s32i.n	a9, a1, 4
4008524f:	ffed06        	j	40085207 <coex_force_wifi_mode+0x4b>
40085252:	c00000        	sub	a0, a0, a0
40085255:	880020        	lsi	f2, a0, 0x220
40085258:	885706        	j	400673b8 <__udivmoddi4+0x27c4>
4008525b:	d24183        	ssi	f8, a1, 0x348
4008525e:	ff          	.byte 0xff
4008525f:	1149      	s32i.n	a4, a1, 4
40085261:	ffe886        	j	40085207 <coex_force_wifi_mode+0x4b>
40085264:	003865        	call8	400855ec <coex_time_now>
40085267:	002182        	l32i	a8, a1, 0
4008526a:	c0aa80        	sub	a10, a10, a8
4008526d:	1ea082        	movi	a8, 30
40085270:	0eb8a7        	bgeu	a8, a10, 40085282 <coex_force_wifi_mode+0xc6>
40085273:	012192        	l32i	a9, a1, 4
40085276:	85af32        	movi	a3, -123
40085279:	004932        	s8i	a3, a9, 0
4008527c:	0020c0        	memw
4008527f:	001806        	j	400852e3 <coex_force_wifi_mode+0x127>
40085282:	0248      	l32i.n	a4, a2, 0
40085284:	81a052        	movi	a5, 129
40085287:	3448      	l32i.n	a4, a4, 12
40085289:	03a8      	l32i.n	a10, a3, 0
4008528b:	0004e0        	callx8	a4
4008528e:	0abd      	mov.n	a11, a10
40085290:	ff8741        	l32r	a4, 400850ac <coex_core_bb_reset_unlock+0x38>
40085293:	ff8781        	l32r	a8, 400850b0 <coex_core_bb_reset_unlock+0x3c>
40085296:	0020c0        	memw
40085299:	0459      	s32i.n	a5, a4, 0
4008529b:	f03d      	nop.n
4008529d:	f03d      	nop.n
4008529f:	f03d      	nop.n
400852a1:	f03d      	nop.n
400852a3:	0258      	l32i.n	a5, a2, 0
400852a5:	0020c0        	memw
400852a8:	0848      	l32i.n	a4, a8, 0
400852aa:	244540        	extui	a4, a4, 5, 3
400852ad:	4558      	l32i.n	a5, a5, 16
400852af:	0023a2        	l32i	a10, a3, 0
400852b2:	0005e0        	callx8	a5
400852b5:	197466        	bnei	a4, 7, 400852d2 <coex_force_wifi_mode+0x116>
400852b8:	065d      	mov.n	a5, a6
400852ba:	0020c0        	memw
400852bd:	0648      	l32i.n	a4, a6, 0
400852bf:	eea091        	l32r	a9, 40080d40 <_init_end+0x940>
400852c2:	0c8497        	bany	a4, a9, 400852d2 <coex_force_wifi_mode+0x116>
400852c5:	074d      	mov.n	a4, a7
400852c7:	0020c0        	memw
400852ca:	0798      	l32i.n	a9, a7, 0
400852cc:	ffb881        	l32r	a8, 400851ac <coex_core_bb_reset_unlock+0x138>
400852cf:	918987        	bany	a9, a8, 40085264 <coex_force_wifi_mode+0xa8>
400852d2:	1158      	l32i.n	a5, a1, 4
400852d4:	000542        	l8ui	a4, a5, 0
400852d7:	644040        	extui	a4, a4, 0, 7
400852da:	09a416        	beqz	a4, 40085378 <coex_force_wifi_mode+0x1bc>
400852dd:	ffb241        	l32r	a4, 400851a8 <coex_core_bb_reset_unlock+0x134>
400852e0:	ffb451        	l32r	a5, 400851b0 <coex_core_bb_reset_unlock+0x13c>
400852e3:	ffde25        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
400852e6:	1168      	l32i.n	a6, a1, 4
400852e8:	ffb331        	l32r	a3, 400851b4 <coex_core_bb_reset_unlock+0x140>
400852eb:	000682        	l8ui	a8, a6, 0
400852ee:	80af62        	movi	a6, -128
400852f1:	106860        	and	a6, a8, a6
400852f4:	0278      	l32i.n	a7, a2, 0
400852f6:	1188      	l32i.n	a8, a1, 4
400852f8:	03a8      	l32i.n	a10, a3, 0
400852fa:	3778      	l32i.n	a7, a7, 12
400852fc:	004862        	s8i	a6, a8, 0
400852ff:	0020c0        	memw
40085302:	0007e0        	callx8	a7
40085305:	206aa0        	or	a6, a10, a10
40085308:	0221a2        	l32i	a10, a1, 8
4008530b:	067565        	call8	4008ba60 <force_wifi_mode>
4008530e:	06bd      	mov.n	a11, a6
40085310:	0228      	l32i.n	a2, a2, 0
40085312:	03a8      	l32i.n	a10, a3, 0
40085314:	4228      	l32i.n	a2, a2, 16
40085316:	0002e0        	callx8	a2
40085319:	ee6231        	l32r	a3, 40080ca4 <_init_end+0x8a4>
4008531c:	0020c0        	memw
4008531f:	002522        	l32i	a2, a5, 0
40085322:	f68237        	bany	a2, a3, 4008531c <coex_force_wifi_mode+0x160>
40085325:	002c65        	call8	400855ec <coex_time_now>
40085328:	206aa0        	or	a6, a10, a10
4008532b:	ffa331        	l32r	a3, 400851b8 <coex_core_bb_reset_unlock+0x144>
4008532e:	1ea052        	movi	a5, 30
40085331:	0005c6        	j	4008534c <coex_force_wifi_mode+0x190>
40085334:	002b65        	call8	400855ec <coex_time_now>
40085337:	c0aa60        	sub	a10, a10, a6
4008533a:	0eb5a7        	bgeu	a5, a10, 4008534c <coex_force_wifi_mode+0x190>
4008533d:	1198      	l32i.n	a9, a1, 4
4008533f:	82af22        	movi	a2, -126
40085342:	004922        	s8i	a2, a9, 0
40085345:	0020c0        	memw
40085348:	000546        	j	40085361 <coex_force_wifi_mode+0x1a5>
4008534b:	20c000        	or	a12, a0, a0
4008534e:	242200        	extui	a2, a0, 2, 3
40085351:	823700        	mull	a3, a7, a0
40085354:	de          	.byte 0xde
40085355:	012132        	l32i	a3, a1, 4
40085358:	000322        	l8ui	a2, a3, 0
4008535b:	642020        	extui	a2, a2, 0, 7
4008535e:	123216        	beqz	a2, 40085485 <coex_force_wifi_mode+0x2c9>
40085361:	ffd625        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085364:	012142        	l32i	a4, a1, 4
40085367:	80af22        	movi	a2, -128
4008536a:	000432        	l8ui	a3, a4, 0
4008536d:	102320        	and	a2, a3, a2
40085370:	004422        	s8i	a2, a4, 0
40085373:	0020c0        	memw
40085376:	f01d      	retw.n
40085378:	ff8f41        	l32r	a4, 400851b4 <coex_core_bb_reset_unlock+0x140>
4008537b:	002252        	l32i	a5, a2, 0
4008537e:	0024a2        	l32i	a10, a4, 0
40085381:	3558      	l32i.n	a5, a5, 12
40085383:	0005e0        	callx8	a5
40085386:	0a6d      	mov.n	a6, a10
40085388:	21a8      	l32i.n	a10, a1, 8
4008538a:	066d65        	call8	4008ba60 <force_wifi_mode>
4008538d:	06bd      	mov.n	a11, a6
4008538f:	0258      	l32i.n	a5, a2, 0
40085391:	04a8      	l32i.n	a10, a4, 0
40085393:	81a042        	movi	a4, 129
40085396:	4558      	l32i.n	a5, a5, 16
40085398:	0005e0        	callx8	a5
4008539b:	002525        	call8	400855ec <coex_time_now>
4008539e:	0a7d      	mov.n	a7, a10
400853a0:	ff8261        	l32r	a6, 400851a8 <coex_core_bb_reset_unlock+0x134>
400853a3:	000786        	j	400853c5 <coex_force_wifi_mode+0x209>
400853a6:	250000        	extui	a0, a0, 16, 3
400853a9:	510024        	lsi	f2, a0, 0x144
400853ac:	ff7d      	lsi	f7, a15, 60
400853ae:	c0aa70        	sub	a10, a10, a7
400853b1:	10b5a7        	bgeu	a5, a10, 400853c5 <coex_force_wifi_mode+0x209>
400853b4:	1168      	l32i.n	a6, a1, 4
400853b6:	83af22        	movi	a2, -125
400853b9:	004622        	s8i	a2, a6, 0
400853bc:	0020c0        	memw
400853bf:	001446        	j	40085414 <coex_force_wifi_mode+0x258>
400853c2:	000000        	ill
400853c5:	0258      	l32i.n	a5, a2, 0
400853c7:	03a8      	l32i.n	a10, a3, 0
400853c9:	3558      	l32i.n	a5, a5, 12
400853cb:	0005e0        	callx8	a5
400853ce:	0abd      	mov.n	a11, a10
400853d0:	ff3781        	l32r	a8, 400850ac <coex_core_bb_reset_unlock+0x38>
400853d3:	ff3791        	l32r	a9, 400850b0 <coex_core_bb_reset_unlock+0x3c>
400853d6:	0020c0        	memw
400853d9:	0849      	s32i.n	a4, a8, 0
400853db:	f03d      	nop.n
400853dd:	f03d      	nop.n
400853df:	f03d      	nop.n
400853e1:	f03d      	nop.n
400853e3:	0288      	l32i.n	a8, a2, 0
400853e5:	0020c0        	memw
400853e8:	0958      	l32i.n	a5, a9, 0
400853ea:	245550        	extui	a5, a5, 5, 3
400853ed:	4888      	l32i.n	a8, a8, 16
400853ef:	03a8      	l32i.n	a10, a3, 0
400853f1:	0008e0        	callx8	a8
400853f4:	0a7526        	beqi	a5, 7, 40085402 <coex_force_wifi_mode+0x246>
400853f7:	0020c0        	memw
400853fa:	0658      	l32i.n	a5, a6, 0
400853fc:	ff6c81        	l32r	a8, 400851ac <coex_core_bb_reset_unlock+0x138>
400853ff:	a58587        	bany	a5, a8, 400853a8 <coex_force_wifi_mode+0x1ec>
40085402:	012192        	l32i	a9, a1, 4
40085405:	000922        	l8ui	a2, a9, 0
40085408:	642020        	extui	a2, a2, 0, 7
4008540b:	ff6951        	l32r	a5, 400851b0 <coex_core_bb_reset_unlock+0x13c>
4008540e:	ee2531        	l32r	a3, 40080ca4 <_init_end+0x8a4>
40085411:	018216        	beqz	a2, 4008542d <coex_force_wifi_mode+0x271>
40085414:	ffcae5        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085417:	012122        	l32i	a2, a1, 4
4008541a:	000232        	l8ui	a3, a2, 0
4008541d:	80af22        	movi	a2, -128
40085420:	102320        	and	a2, a3, a2
40085423:	1138      	l32i.n	a3, a1, 4
40085425:	004322        	s8i	a2, a3, 0
40085428:	0020c0        	memw
4008542b:	f01d      	retw.n
4008542d:	0020c0        	memw
40085430:	0528      	l32i.n	a2, a5, 0
40085432:	f78237        	bany	a2, a3, 4008542d <coex_force_wifi_mode+0x271>
40085435:	001b65        	call8	400855ec <coex_time_now>
40085438:	0a6d      	mov.n	a6, a10
4008543a:	ff5b41        	l32r	a4, 400851a8 <coex_core_bb_reset_unlock+0x134>
4008543d:	e51c      	movi.n	a5, 30
4008543f:	ff5e31        	l32r	a3, 400851b8 <coex_core_bb_reset_unlock+0x144>
40085442:	000586        	j	4008545c <coex_force_wifi_mode+0x2a0>
40085445:	001a65        	call8	400855ec <coex_time_now>
40085448:	c0aa60        	sub	a10, a10, a6
4008544b:	0db5a7        	bgeu	a5, a10, 4008545c <coex_force_wifi_mode+0x2a0>
4008544e:	1148      	l32i.n	a4, a1, 4
40085450:	84af22        	movi	a2, -124
40085453:	004422        	s8i	a2, a4, 0
40085456:	0020c0        	memw
40085459:	000506        	j	40085471 <coex_force_wifi_mode+0x2b5>
4008545c:	0020c0        	memw
4008545f:	002422        	l32i	a2, a4, 0
40085462:	df8237        	bany	a2, a3, 40085445 <coex_force_wifi_mode+0x289>
40085465:	012152        	l32i	a5, a1, 4
40085468:	000522        	l8ui	a2, a5, 0
4008546b:	642020        	extui	a2, a2, 0, 7
4008546e:	013216        	beqz	a2, 40085485 <coex_force_wifi_mode+0x2c9>
40085471:	ffc525        	call8	400850c4 <coex_core_bb_reset_unlock+0x50>
40085474:	1168      	l32i.n	a6, a1, 4
40085476:	80af22        	movi	a2, -128
40085479:	000632        	l8ui	a3, a6, 0
4008547c:	102320        	and	a2, a3, a2
4008547f:	004622        	s8i	a2, a6, 0
40085482:	0020c0        	memw
40085485:	f01d      	retw.n
40085487:	109c00        	and	a9, a12, a0
4008548a:	ff3ff5        	call12	40084888 <_malloc_r>
4008548d:	ff          	.byte 0xff
4008548e:	00ff00        	lsi	f0, a15, 0
40085491:	006200        	rsil	a0, 2
40085494:	005000        	syscall
40085497:	109800        	and	a9, a8, a0
4008549a:	ff3ff5        	call12	40084898 <_free_r+0x4>
4008549d:	fffe01        	l32r	a0, 40085498 <coex_force_wifi_mode+0x2dc>
400854a0:	ff          	.byte 0xff
400854a1:	ff          	.byte 0xff
400854a2:	00e001        	l32r	a0, 40045824 <llcp_pdu_handler_tab_p_get+0x18c0>
400854a5:	00ac00        	any8	b0, b8:b9:b10:b11:b12:b13:b14:b15
400854a8:	106c      	movi.n	a0, -31
400854aa:	f83ff5        	call12	4007d8a8 <__udivmoddi4+0x18cb4>
400854ad:	3ff510        	f64cmph	a15, a5, a1, 3
400854b0:	0009      	s32i.n	a0, a0, 0
400854b2:	04          	.byte 0x4
	...

400854b4 <coex_unforce_wifi_mode>:
400854b4:	004136        	entry	a1, 32
400854b7:	ff3b31        	l32r	a3, 400851a4 <coex_core_bb_reset_unlock+0x130>
400854ba:	000322        	l8ui	a2, a3, 0
400854bd:	232200        	sext	a2, a2, 7
400854c0:	0e62d6        	bgez	a2, 400855aa <coex_unforce_wifi_mode+0xf6>
400854c3:	064fe5        	call8	4008b9c0 <bt_bb_init_cmplx_reg>
400854c6:	fff041        	l32r	a4, 40085488 <coex_force_wifi_mode+0x2cc>
400854c9:	fff021        	l32r	a2, 4008548c <coex_force_wifi_mode+0x2d0>
400854cc:	0020c0        	memw
400854cf:	0458      	l32i.n	a5, a4, 0
400854d1:	105520        	and	a5, a5, a2
400854d4:	ffef21        	l32r	a2, 40085490 <coex_force_wifi_mode+0x2d4>
400854d7:	202520        	or	a2, a5, a2
400854da:	0020c0        	memw
400854dd:	0429      	s32i.n	a2, a4, 0
400854df:	f03d      	nop.n
400854e1:	f03d      	nop.n
400854e3:	f03d      	nop.n
400854e5:	f03d      	nop.n
400854e7:	0020c0        	memw
400854ea:	0458      	l32i.n	a5, a4, 0
400854ec:	f42f21        	l32r	a2, 400825a8 <phy_en_hw_set_freq$part$0+0x20>
400854ef:	105520        	and	a5, a5, a2
400854f2:	ffe821        	l32r	a2, 40085494 <coex_force_wifi_mode+0x2d8>
400854f5:	202520        	or	a2, a5, a2
400854f8:	0020c0        	memw
400854fb:	0429      	s32i.n	a2, a4, 0
400854fd:	00af22        	movi	a2, 0xffffff00
40085500:	f03d      	nop.n
40085502:	f03d      	nop.n
40085504:	f03d      	nop.n
40085506:	0020c0        	memw
40085509:	0458      	l32i.n	a5, a4, 0
4008550b:	105520        	and	a5, a5, a2
4008550e:	422c      	movi.n	a2, 36
40085510:	205520        	or	a5, a5, a2
40085513:	ffe121        	l32r	a2, 40085498 <coex_force_wifi_mode+0x2dc>
40085516:	0020c0        	memw
40085519:	0459      	s32i.n	a5, a4, 0
4008551b:	f03d      	nop.n
4008551d:	f03d      	nop.n
4008551f:	f03d      	nop.n
40085521:	f03d      	nop.n
40085523:	0020c0        	memw
40085526:	0258      	l32i.n	a5, a2, 0
40085528:	ffdd41        	l32r	a4, 4008549c <coex_force_wifi_mode+0x2e0>
4008552b:	105540        	and	a5, a5, a4
4008552e:	eca141        	l32r	a4, 400807b4 <_init_end+0x3b4>
40085531:	204540        	or	a4, a5, a4
40085534:	0020c0        	memw
40085537:	0249      	s32i.n	a4, a2, 0
40085539:	01ae42        	movi	a4, 0xfffffe01
4008553c:	f03d      	nop.n
4008553e:	f03d      	nop.n
40085540:	f03d      	nop.n
40085542:	0020c0        	memw
40085545:	0258      	l32i.n	a5, a2, 0
40085547:	105540        	and	a5, a5, a4
4008554a:	dca042        	movi	a4, 220
4008554d:	204540        	or	a4, a5, a4
40085550:	0020c0        	memw
40085553:	0249      	s32i.n	a4, a2, 0
40085555:	f03d      	nop.n
40085557:	f03d      	nop.n
40085559:	f03d      	nop.n
4008555b:	f03d      	nop.n
4008555d:	0020c0        	memw
40085560:	0258      	l32i.n	a5, a2, 0
40085562:	ffcf41        	l32r	a4, 400854a0 <coex_force_wifi_mode+0x2e4>
40085565:	105540        	and	a5, a5, a4
40085568:	ffcf41        	l32r	a4, 400854a4 <coex_force_wifi_mode+0x2e8>
4008556b:	204540        	or	a4, a5, a4
4008556e:	ffce51        	l32r	a5, 400854a8 <coex_force_wifi_mode+0x2ec>
40085571:	0020c0        	memw
40085574:	0249      	s32i.n	a4, a2, 0
40085576:	f03d      	nop.n
40085578:	f03d      	nop.n
4008557a:	f03d      	nop.n
4008557c:	f03d      	nop.n
4008557e:	0020c0        	memw
40085581:	0548      	l32i.n	a4, a5, 0
40085583:	edd521        	l32r	a2, 40080cd8 <_init_end+0x8d8>
40085586:	102420        	and	a2, a4, a2
40085589:	0020c0        	memw
4008558c:	0529      	s32i.n	a2, a5, 0
4008558e:	f03d      	nop.n
40085590:	f03d      	nop.n
40085592:	f03d      	nop.n
40085594:	f03d      	nop.n
40085596:	ffc641        	l32r	a4, 400854b0 <coex_force_wifi_mode+0x2f4>
40085599:	ffc421        	l32r	a2, 400854ac <coex_force_wifi_mode+0x2f0>
4008559c:	0020c0        	memw
4008559f:	0249      	s32i.n	a4, a2, 0
400855a1:	00a022        	movi	a2, 0
400855a4:	004322        	s8i	a2, a3, 0
400855a7:	0020c0        	memw
400855aa:	f03d      	nop.n
400855ac:	f03d      	nop.n
400855ae:	f03d      	nop.n
400855b0:	0020f0        	nop
400855b3:	feff21        	l32r	a2, 400851b0 <coex_core_bb_reset_unlock+0x13c>
400855b6:	edbb31        	l32r	a3, 40080ca4 <_init_end+0x8a4>
400855b9:	0020c0        	memw
400855bc:	0288      	l32i.n	a8, a2, 0
400855be:	f78837        	bany	a8, a3, 400855b9 <coex_unforce_wifi_mode+0x105>
400855c1:	fdbf51        	l32r	a5, 40084cc0 <coex_bb_reset_unlock+0x10>
400855c4:	fefc41        	l32r	a4, 400851b4 <coex_core_bb_reset_unlock+0x140>
400855c7:	0568      	l32i.n	a6, a5, 0
400855c9:	04a8      	l32i.n	a10, a4, 0
400855cb:	3668      	l32i.n	a6, a6, 12
400855cd:	0006e0        	callx8	a6
400855d0:	0a6d      	mov.n	a6, a10
400855d2:	0651e5        	call8	4008baf0 <unforce_wifi_mode>
400855d5:	0558      	l32i.n	a5, a5, 0
400855d7:	06bd      	mov.n	a11, a6
400855d9:	4558      	l32i.n	a5, a5, 16
400855db:	04a8      	l32i.n	a10, a4, 0
400855dd:	0005e0        	callx8	a5
400855e0:	0020c0        	memw
400855e3:	0288      	l32i.n	a8, a2, 0
400855e5:	f78837        	bany	a8, a3, 400855e0 <coex_unforce_wifi_mode+0x12c>
400855e8:	f01d      	retw.n
	...

400855ec <coex_time_now>:
400855ec:	004136        	entry	a1, 32
400855ef:	fdb481        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400855f2:	0888      	l32i.n	a8, a8, 0
400855f4:	1328a2        	l32i	a10, a8, 76
400855f7:	000ae0        	callx8	a10
400855fa:	0a2d      	mov.n	a2, a10
400855fc:	f01d      	retw.n
	...

40085600 <coex_time_is_past>:
40085600:	004136        	entry	a1, 32
40085603:	fdaf81        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085606:	0888      	l32i.n	a8, a8, 0
40085608:	1328a2        	l32i	a10, a8, 76
4008560b:	000ae0        	callx8	a10
4008560e:	c02a20        	sub	a2, a10, a2
40085611:	fa7c      	movi.n	a10, -1
40085613:	302a20        	xor	a2, a10, a2
40085616:	052f20        	extui	a2, a2, 31, 1
40085619:	f01d      	retw.n
	...

4008561c <coex_time_is_in_time>:
4008561c:	004136        	entry	a1, 32
4008561f:	fda881        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085622:	0888      	l32i.n	a8, a8, 0
40085624:	1328a2        	l32i	a10, a8, 76
40085627:	000ae0        	callx8	a10
4008562a:	c09a20        	sub	a9, a10, a2
4008562d:	01a082        	movi	a8, 1
40085630:	00b9d6        	bgez	a9, 4008563f <coex_time_is_in_time+0x23>
40085633:	c022a0        	sub	a2, a2, a10
40085636:	02b327        	bgeu	a3, a2, 4008563c <coex_time_is_in_time+0x20>
40085639:	00a082        	movi	a8, 0
4008563c:	748080        	extui	a8, a8, 0, 8
4008563f:	082d      	mov.n	a2, a8
40085641:	f01d      	retw.n
40085643:	efae00        	f64cmph	a10, a14, a0, 14
40085646:	3ffb      	addi.n	a3, a15, 15
40085648:	fbefc4        	lsi	f12, a15, 0x3ec
4008564b:	3f          	.byte 0x3f

4008564c <coex_timer_ts_end_alarm>:
4008564c:	004136        	entry	a1, 32
4008564f:	fd9c81        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085652:	0d0c      	movi.n	a13, 0
40085654:	0c0c      	movi.n	a12, 0
40085656:	02bd      	mov.n	a11, a2
40085658:	0888      	l32i.n	a8, a8, 0
4008565a:	fffa91        	l32r	a9, 40085644 <coex_time_is_in_time+0x28>
4008565d:	122882        	l32i	a8, a8, 72
40085660:	fffaa1        	l32r	a10, 40085648 <coex_time_is_in_time+0x2c>
40085663:	0049d2        	s8i	a13, a9, 0
40085666:	0020c0        	memw
40085669:	0008e0        	callx8	a8
4008566c:	f01d      	retw.n
	...

40085670 <coex_timer_ts_end_disalarm>:
40085670:	004136        	entry	a1, 32
40085673:	fd9381        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
40085676:	1b0c      	movi.n	a11, 1
40085678:	0888      	l32i.n	a8, a8, 0
4008567a:	fff291        	l32r	a9, 40085644 <coex_time_is_in_time+0x28>
4008567d:	0f2882        	l32i	a8, a8, 60
40085680:	fff2a1        	l32r	a10, 40085648 <coex_time_is_in_time+0x2c>
40085683:	0049b2        	s8i	a11, a9, 0
40085686:	0020c0        	memw
40085689:	0008e0        	callx8	a8
4008568c:	f01d      	retw.n
4008568e:	ad0000        	lsi	f0, a0, 0x2b4
40085691:	ef          	.byte 0xef
40085692:	3ffb      	addi.n	a3, a15, 15
40085694:	fbefb0        	f64subc	a11, a15, 3, 0
40085697:	3f          	.byte 0x3f

40085698 <coex_timer_ts_start_alarm>:
40085698:	004136        	entry	a1, 32
4008569b:	fd8981        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
4008569e:	0d0c      	movi.n	a13, 0
400856a0:	0c0c      	movi.n	a12, 0
400856a2:	02bd      	mov.n	a11, a2
400856a4:	0888      	l32i.n	a8, a8, 0
400856a6:	fffa91        	l32r	a9, 40085690 <coex_timer_ts_end_disalarm+0x20>
400856a9:	122882        	l32i	a8, a8, 72
400856ac:	fffaa1        	l32r	a10, 40085694 <coex_timer_ts_end_disalarm+0x24>
400856af:	0049d2        	s8i	a13, a9, 0
400856b2:	0020c0        	memw
400856b5:	0008e0        	callx8	a8
400856b8:	f01d      	retw.n
	...

400856bc <coex_timer_ts_start_disalarm>:
400856bc:	004136        	entry	a1, 32
400856bf:	fd8081        	l32r	a8, 40084cc0 <coex_bb_reset_unlock+0x10>
400856c2:	1b0c      	movi.n	a11, 1
400856c4:	0888      	l32i.n	a8, a8, 0
400856c6:	fff291        	l32r	a9, 40085690 <coex_timer_ts_end_disalarm+0x20>
400856c9:	0f2882        	l32i	a8, a8, 60
400856cc:	fff2a1        	l32r	a10, 40085694 <coex_timer_ts_end_disalarm+0x24>
400856cf:	0049b2        	s8i	a11, a9, 0
400856d2:	0020c0        	memw
400856d5:	0008e0        	callx8	a8
400856d8:	f01d      	retw.n
400856da:	280000        	lsi	f0, a0, 160
400856dd:	3ffbf0        	f64cmph	a15, a11, a15, 3
400856e0:	aaab      	addi.n	a10, a10, 10
400856e2:	aaaa      	add.n	a10, a10, a10
400856e4:	fbf000        	f64subc	a0, a0, 3, 1
400856e7:	3f          	.byte 0x3f
400856e8:	f01c      	movi.n	a0, 31
400856ea:	3ffb      	addi.n	a3, a15, 15
400856ec:	fbf020        	f64subc	a2, a0, 3, 1
400856ef:	3f          	.byte 0x3f
400856f0:	fbefe4        	lsi	f14, a15, 0x3ec
400856f3:	3f          	.byte 0x3f
400856f4:	004136        	entry	a1, 32
400856f7:	fff931        	l32r	a3, 400856dc <coex_timer_ts_start_disalarm+0x20>
400856fa:	0023c2        	l32i	a12, a3, 0
400856fd:	24a032        	movi	a3, 36
40085700:	c022c0        	sub	a2, a2, a12
40085703:	212320        	srai	a2, a2, 3
40085706:	fff6c1        	l32r	a12, 400856e0 <coex_timer_ts_start_disalarm+0x24>
40085709:	8222c0        	mull	a2, a2, a12
4008570c:	11b327        	bgeu	a3, a2, 40085721 <coex_timer_ts_start_disalarm+0x65>
4008570f:	ffede5        	call8	400855ec <coex_time_now>
40085712:	20baa0        	or	a11, a10, a10
40085715:	fff3a1        	l32r	a10, 400856e4 <coex_timer_ts_start_disalarm+0x28>
40085718:	02cd      	mov.n	a12, a2
4008571a:	667c65        	call8	400ebee0 <coexist_printf>
4008571d:	f01d      	retw.n
4008571f:	410000        	srli	a0, a0, 0
40085722:	31fd67        	bbsi	a13, 22, 40085757 <coex_timer_ts_start_disalarm+0x9b>
40085725:	52fff1        	l32r	a15, 4005a324 <strftime+0x870>
40085728:	a20024        	lsi	f2, a0, 0x288
4008572b:	580023        	lsi	f2, a0, 0x160
4008572e:	05e035        	call12	4008b530 <panicHandler+0x174>
40085731:	852000        	extui	a2, a0, 16, 9
40085734:	0a5d21        	l32r	a2, 400480a8 <lld_evt_get_next_free_slot+0x177c>
40085737:	ffed91        	l32r	a9, 400856ec <coex_timer_ts_start_disalarm+0x30>
4008573a:	a08890        	addx4	a8, a8, a9
4008573d:	190c      	movi.n	a9, 1
4008573f:	401200        	ssl	a2
40085742:	a19900        	sll	a9, a9
40085745:	08a8      	l32i.n	a10, a8, 0
40085747:	110a97        	bnone	a10, a9, 4008575c <coex_timer_ts_start_disalarm+0xa0>
4008574a:	ffea25        	call8	400855ec <coex_time_now>
4008574d:	0abd      	mov.n	a11, a10
4008574f:	ffe8a1        	l32r	a10, 400856f0 <coex_timer_ts_start_disalarm+0x34>
40085752:	20c220        	or	a12, a2, a2
40085755:	6678a5        	call8	400ebee0 <coexist_printf>
40085758:	000146        	j	40085761 <coex_timer_ts_start_disalarm+0xa5>
4008575b:	9a9000        	trunc.s	a9, f0, 0
4008575e:	089920        	lsx	f9, a9, a2
40085761:	05bd      	mov.n	a11, a5
40085763:	f03d      	nop.n
40085765:	f03d      	nop.n
40085767:	f03d      	nop.n
40085769:	0428      	l32i.n	a2, a4, 0
4008576b:	03a8      	l32i.n	a10, a3, 0
4008576d:	4228      	l32i.n	a2, a2, 16
4008576f:	0002e0        	callx8	a2
40085772:	f01d      	retw.n
40085774:	f02c      	movi.n	a0, 47
40085776:	3ffb      	addi.n	a3, a15, 15
40085778:	004136        	entry	a1, 32
4008577b:	fffe31        	l32r	a3, 40085774 <coex_timer_ts_start_disalarm+0xb8>
4008577e:	0348      	l32i.n	a4, a3, 0
40085780:	04c416        	beqz	a4, 400857d0 <coex_timer_ts_start_disalarm+0x114>
40085783:	0288      	l32i.n	a8, a2, 0
40085785:	1248      	l32i.n	a4, a2, 4
40085787:	d88c      	beqz.n	a8, 40085798 <coex_timer_ts_start_disalarm+0xdc>
40085789:	1849      	s32i.n	a4, a8, 4
4008578b:	f03d      	nop.n
4008578d:	f03d      	nop.n
4008578f:	f03d      	nop.n
40085791:	f03d      	nop.n
40085793:	1248      	l32i.n	a4, a2, 4
40085795:	000046        	j	4008579a <coex_timer_ts_start_disalarm+0xde>
40085798:	0349      	s32i.n	a4, a3, 0
4008579a:	448c      	beqz.n	a4, 400857a2 <coex_timer_ts_start_disalarm+0xe6>
4008579c:	0489      	s32i.n	a8, a4, 0
4008579e:	0000c6        	j	400857a5 <coex_timer_ts_start_disalarm+0xe9>
400857a1:	638200        	minu	a8, a2, a0
400857a4:	a22001        	l32r	a0, 4006e024 <__udivmoddi4+0x9430>
400857a7:	f03d20        	subx8	a3, a13, a2
400857aa:	f03d      	nop.n
400857ac:	f03d      	nop.n
400857ae:	0a0242        	l8ui	a4, a2, 10
400857b1:	fff425        	call8	400856f4 <coex_timer_ts_start_disalarm+0x38>
400857b4:	412540        	srli	a2, a4, 5
400857b7:	a02230        	addx4	a2, a2, a3
400857ba:	feaf92        	movi	a9, -2
400857bd:	3288      	l32i.n	a8, a2, 12
400857bf:	401400        	ssl	a4
400857c2:	819990        	src	a9, a9, a9
400857c5:	109980        	and	a9, a9, a8
400857c8:	2388      	l32i.n	a8, a3, 8
400857ca:	880b      	addi.n	a8, a8, -1
400857cc:	3299      	s32i.n	a9, a2, 12
400857ce:	2389      	s32i.n	a8, a3, 8
400857d0:	020c      	movi.n	a2, 0
400857d2:	f01d      	retw.n
400857d4:	f018      	l32i.n	a1, a0, 60
400857d6:	3ffb      	addi.n	a3, a15, 15
400857d8:	407c64        	lsi	f6, a12, 0x100
400857db:	3f          	.byte 0x3f
400857dc:	efd8      	l32i.n	a13, a15, 56
400857de:	3ffb      	addi.n	a3, a15, 15

400857e0 <coex_arbit_insert>:
400857e0:	006136        	entry	a1, 48
400857e3:	176216        	beqz	a2, 4008595d <coex_arbit_insert+0x17d>
400857e6:	fd3641        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
400857e9:	fffa51        	l32r	a5, 400857d4 <coex_timer_ts_start_disalarm+0x118>
400857ec:	0438      	l32i.n	a3, a4, 0
400857ee:	05a8      	l32i.n	a10, a5, 0
400857f0:	032332        	l32i	a3, a3, 12
400857f3:	0003e0        	callx8	a3
400857f6:	0a6d      	mov.n	a6, a10
400857f8:	020282        	l8ui	a8, a2, 2
400857fb:	413580        	srli	a3, a8, 5
400857fe:	ffdd71        	l32r	a7, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085801:	a03370        	addx4	a3, a3, a7
40085804:	3338      	l32i.n	a3, a3, 12
40085806:	0f5387        	bbc	a3, a8, 40085819 <coex_arbit_insert+0x39>
40085809:	0abd      	mov.n	a11, a10
4008580b:	0428      	l32i.n	a2, a4, 0
4008580d:	05a8      	l32i.n	a10, a5, 0
4008580f:	4228      	l32i.n	a2, a2, 16
40085811:	0002e0        	callx8	a2
40085814:	03a122        	movi	a2, 0x103
40085817:	f01d      	retw.n
40085819:	0738      	l32i.n	a3, a7, 0
4008581b:	33cc      	bnez.n	a3, 40085822 <coex_arbit_insert+0x42>
4008581d:	030c      	movi.n	a3, 0
4008581f:	000546        	j	40085838 <coex_arbit_insert+0x58>
40085822:	0323a2        	l32i	a10, a3, 12
40085825:	0122b2        	l32i	a11, a2, 4
40085828:	018b25        	call8	400870dc <coex_time_diff>
4008582b:	091aa6        	blti	a10, 1, 40085838 <coex_arbit_insert+0x58>
4008582e:	012332        	l32i	a3, a3, 4
40085831:	fed356        	bnez	a3, 40085822 <coex_arbit_insert+0x42>
40085834:	fff946        	j	4008581d <coex_arbit_insert+0x3d>
40085837:	ace100        	lsi	f0, a1, 0x2b0
4008583a:	ff          	.byte 0xff
4008583b:	0488      	l32i.n	a8, a4, 0
4008583d:	0ea8      	l32i.n	a10, a14, 0
4008583f:	3888      	l32i.n	a8, a8, 12
40085841:	01e9      	s32i.n	a14, a1, 0
40085843:	0008e0        	callx8	a8
40085846:	0abd      	mov.n	a11, a10
40085848:	ffa9d1        	l32r	a13, 400856ec <coex_timer_ts_start_disalarm+0x30>
4008584b:	0dc8      	l32i.n	a12, a13, 0
4008584d:	01e8      	l32i.n	a14, a1, 0
4008584f:	bccc      	bnez.n	a12, 4008585e <coex_arbit_insert+0x7e>
40085851:	1dc8      	l32i.n	a12, a13, 4
40085853:	10bc16        	beqz	a12, 40085962 <coex_arbit_insert+0x182>
40085856:	082c      	movi.n	a8, 32
40085858:	1f0c      	movi.n	a15, 1
4008585a:	000106        	j	40085862 <coex_arbit_insert+0x82>
4008585d:	080c00        	lsx	f0, a12, a0
40085860:	08fd      	mov.n	a15, a8
40085862:	6090c0        	neg	a9, a12
40085865:	1099c0        	and	a9, a9, a12
40085868:	40f990        	nsau	a9, a9
4008586b:	609090        	neg	a9, a9
4008586e:	1fc992        	addi	a9, a9, 31
40085871:	0458      	l32i.n	a5, a4, 0
40085873:	ea7c      	movi.n	a10, -2
40085875:	401900        	ssl	a9
40085878:	81aaa0        	src	a10, a10, a10
4008587b:	a0dfd0        	addx4	a13, a15, a13
4008587e:	10cac0        	and	a12, a10, a12
40085881:	45f8      	l32i.n	a15, a5, 16
40085883:	598a      	add.n	a5, a9, a8
40085885:	0ea8      	l32i.n	a10, a14, 0
40085887:	0dc9      	s32i.n	a12, a13, 0
40085889:	000fe0        	callx8	a15
4008588c:	908550        	addx2	a8, a5, a5
4008588f:	ff9391        	l32r	a9, 400856dc <coex_timer_ts_start_disalarm+0x20>
40085892:	0998      	l32i.n	a9, a9, 0
40085894:	b05890        	addx8	a5, a8, a9
40085897:	0d1516        	beqz	a5, 4008596c <coex_arbit_insert+0x18c>
4008589a:	8c1c      	movi.n	a12, 24
4008589c:	0b0c      	movi.n	a11, 0
4008589e:	05ad      	mov.n	a10, a5
400858a0:	eafd81        	l32r	a8, 40080494 <_init_end+0x94>
400858a3:	0008e0        	callx8	a8
400858a6:	0c1c      	movi.n	a12, 16
400858a8:	02bd      	mov.n	a11, a2
400858aa:	a58b      	addi.n	a10, a5, 8
400858ac:	eba681        	l32r	a8, 40080744 <_init_end+0x344>
400858af:	0008e0        	callx8	a8
400858b2:	03ac      	beqz.n	a3, 400858d6 <coex_arbit_insert+0xf6>
400858b4:	0328      	l32i.n	a2, a3, 0
400858b6:	0529      	s32i.n	a2, a5, 0
400858b8:	129c      	beqz.n	a2, 400858cd <coex_arbit_insert+0xed>
400858ba:	f03d      	nop.n
400858bc:	f03d      	nop.n
400858be:	f03d      	nop.n
400858c0:	f03d      	nop.n
400858c2:	0328      	l32i.n	a2, a3, 0
400858c4:	1539      	s32i.n	a3, a5, 4
400858c6:	1259      	s32i.n	a5, a2, 4
400858c8:	0359      	s32i.n	a5, a3, 0
400858ca:	0014c6        	j	40085921 <coex_arbit_insert+0x141>
400858cd:	1539      	s32i.n	a3, a5, 4
400858cf:	0359      	s32i.n	a5, a3, 0
400858d1:	0759      	s32i.n	a5, a7, 0
400858d3:	001286        	j	40085921 <coex_arbit_insert+0x141>
400858d6:	012722        	l32i	a2, a7, 4
400858d9:	023256        	bnez	a2, 40085900 <coex_arbit_insert+0x120>
400858dc:	0728      	l32i.n	a2, a7, 0
400858de:	229c      	beqz.n	a2, 400858f4 <coex_arbit_insert+0x114>
400858e0:	ffd0a5        	call8	400855ec <coex_time_now>
400858e3:	0abd      	mov.n	a11, a10
400858e5:	ffbcc1        	l32r	a12, 400857d8 <coex_timer_ts_start_disalarm+0x11c>
400858e8:	96a0d2        	movi	a13, 150
400858eb:	ffbca1        	l32r	a10, 400857dc <coex_timer_ts_start_disalarm+0x120>
400858ee:	665f25        	call8	400ebee0 <coexist_printf>
400858f1:	ffff06        	j	400858f1 <coex_arbit_insert+0x111>
400858f4:	1759      	s32i.n	a5, a7, 4
400858f6:	0759      	s32i.n	a5, a7, 0
400858f8:	1539      	s32i.n	a3, a5, 4
400858fa:	0539      	s32i.n	a3, a5, 0
400858fc:	000846        	j	40085921 <coex_arbit_insert+0x141>
400858ff:	129800        	andbc	b9, b8, b0
40085902:	399c      	beqz.n	a9, 40085919 <coex_arbit_insert+0x139>
40085904:	1599      	s32i.n	a9, a5, 4
40085906:	f03d      	nop.n
40085908:	f03d      	nop.n
4008590a:	f03d      	nop.n
4008590c:	f03d      	nop.n
4008590e:	1238      	l32i.n	a3, a2, 4
40085910:	0529      	s32i.n	a2, a5, 0
40085912:	0359      	s32i.n	a5, a3, 0
40085914:	1259      	s32i.n	a5, a2, 4
40085916:	0001c6        	j	40085921 <coex_arbit_insert+0x141>
40085919:	1539      	s32i.n	a3, a5, 4
4008591b:	0529      	s32i.n	a2, a5, 0
4008591d:	1259      	s32i.n	a5, a2, 4
4008591f:	1759      	s32i.n	a5, a7, 4
40085921:	130c      	movi.n	a3, 1
40085923:	06bd      	mov.n	a11, a6
40085925:	f03d      	nop.n
40085927:	f03d      	nop.n
40085929:	0a0592        	l8ui	a9, a5, 10
4008592c:	412590        	srli	a2, a9, 5
4008592f:	a02270        	addx4	a2, a2, a7
40085932:	401900        	ssl	a9
40085935:	a19300        	sll	a9, a3
40085938:	2788      	l32i.n	a8, a7, 8
4008593a:	883a      	add.n	a8, a8, a3
4008593c:	3238      	l32i.n	a3, a2, 12
4008593e:	203930        	or	a3, a9, a3
40085941:	3239      	s32i.n	a3, a2, 12
40085943:	f03d      	nop.n
40085945:	f03d      	nop.n
40085947:	f03d      	nop.n
40085949:	f03d      	nop.n
4008594b:	0428      	l32i.n	a2, a4, 0
4008594d:	ffa131        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085950:	4228      	l32i.n	a2, a2, 16
40085952:	03a8      	l32i.n	a10, a3, 0
40085954:	2789      	s32i.n	a8, a7, 8
40085956:	0002e0        	callx8	a2
40085959:	020c      	movi.n	a2, 0
4008595b:	f01d      	retw.n
4008595d:	02a122        	movi	a2, 0x102
40085960:	f01d      	retw.n
40085962:	0428      	l32i.n	a2, a4, 0
40085964:	002ea2        	l32i	a10, a14, 0
40085967:	4228      	l32i.n	a2, a2, 16
40085969:	0002e0        	callx8	a2
4008596c:	06bd      	mov.n	a11, a6
4008596e:	0428      	l32i.n	a2, a4, 0
40085970:	ff9951        	l32r	a5, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085973:	042222        	l32i	a2, a2, 16
40085976:	0025a2        	l32i	a10, a5, 0
40085979:	0002e0        	callx8	a2
4008597c:	01a122        	movi	a2, 0x101
4008597f:	f01d      	retw.n
40085981:	000000        	ill
40085984:	ff          	.byte 0xff
40085985:	00ff00        	lsi	f0, a15, 0

40085988 <coex_arbit_delete>:
40085988:	004136        	entry	a1, 32
4008598b:	02a132        	movi	a3, 0x102
4008598e:	05a216        	beqz	a2, 400859ec <coex_arbit_delete+0x64>
40085991:	fccb41        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40085994:	ff9031        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085997:	0458      	l32i.n	a5, a4, 0
40085999:	03a8      	l32i.n	a10, a3, 0
4008599b:	3558      	l32i.n	a5, a5, 12
4008599d:	0005e0        	callx8	a5
400859a0:	0a5d      	mov.n	a5, a10
400859a2:	ff7481        	l32r	a8, 40085774 <coex_timer_ts_start_disalarm+0xb8>
400859a5:	08a8      	l32i.n	a10, a8, 0
400859a7:	fa9c      	beqz.n	a10, 400859ca <coex_arbit_delete+0x42>
400859a9:	fff6c1        	l32r	a12, 40085984 <coex_arbit_insert+0x1a4>
400859ac:	0298      	l32i.n	a9, a2, 0
400859ae:	1099c0        	and	a9, a9, a12
400859b1:	2a28      	l32i.n	a2, a10, 8
400859b3:	1022c0        	and	a2, a2, a12
400859b6:	0b9927        	bne	a9, a2, 400859c5 <coex_arbit_delete+0x3d>
400859b9:	0007c6        	j	400859dc <coex_arbit_delete+0x54>
400859bc:	2a8800        	mul.s	f8, f8, f0
400859bf:	1088c0        	and	a8, a8, a12
400859c2:	161987        	beq	a9, a8, 400859dc <coex_arbit_delete+0x54>
400859c5:	1aa8      	l32i.n	a10, a10, 4
400859c7:	ff2a56        	bnez	a10, 400859bd <coex_arbit_delete+0x35>
400859ca:	0428      	l32i.n	a2, a4, 0
400859cc:	05bd      	mov.n	a11, a5
400859ce:	03a8      	l32i.n	a10, a3, 0
400859d0:	02a132        	movi	a3, 0x102
400859d3:	4228      	l32i.n	a2, a2, 16
400859d5:	0002e0        	callx8	a2
400859d8:	000406        	j	400859ec <coex_arbit_delete+0x64>
400859db:	d9a500        	lsi	f0, a5, 0x364
400859de:	ff          	.byte 0xff
400859df:	0428      	l32i.n	a2, a4, 0
400859e1:	05bd      	mov.n	a11, a5
400859e3:	03a8      	l32i.n	a10, a3, 0
400859e5:	030c      	movi.n	a3, 0
400859e7:	4228      	l32i.n	a2, a2, 16
400859e9:	0002e0        	callx8	a2
400859ec:	032d      	mov.n	a2, a3
400859ee:	f01d      	retw.n

400859f0 <coex_arbit_first>:
400859f0:	004136        	entry	a1, 32
400859f3:	fcb321        	l32r	a2, 40084cc0 <coex_bb_reset_unlock+0x10>
400859f6:	ff7731        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
400859f9:	0288      	l32i.n	a8, a2, 0
400859fb:	03a8      	l32i.n	a10, a3, 0
400859fd:	3888      	l32i.n	a8, a8, 12
400859ff:	0008e0        	callx8	a8
40085a02:	0abd      	mov.n	a11, a10
40085a04:	0298      	l32i.n	a9, a2, 0
40085a06:	ff5b21        	l32r	a2, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085a09:	0288      	l32i.n	a8, a2, 0
40085a0b:	020c      	movi.n	a2, 0
40085a0d:	a88b      	addi.n	a10, a8, 8
40085a0f:	932a80        	movnez	a2, a10, a8
40085a12:	4988      	l32i.n	a8, a9, 16
40085a14:	03a8      	l32i.n	a10, a3, 0
40085a16:	0008e0        	callx8	a8
40085a19:	f01d      	retw.n
	...

40085a1c <coex_arbit_next>:
40085a1c:	004136        	entry	a1, 32
40085a1f:	fca841        	l32r	a4, 40084cc0 <coex_bb_reset_unlock+0x10>
40085a22:	ff6c31        	l32r	a3, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085a25:	0488      	l32i.n	a8, a4, 0
40085a27:	03a8      	l32i.n	a10, a3, 0
40085a29:	3888      	l32i.n	a8, a8, 12
40085a2b:	0008e0        	callx8	a8
40085a2e:	b28c      	beqz.n	a2, 40085a3d <coex_arbit_next+0x21>
40085a30:	f8c222        	addi	a2, a2, -8
40085a33:	1288      	l32i.n	a8, a2, 4
40085a35:	020c      	movi.n	a2, 0
40085a37:	08c892        	addi	a9, a8, 8
40085a3a:	932980        	movnez	a2, a9, a8
40085a3d:	0abd      	mov.n	a11, a10
40085a3f:	0448      	l32i.n	a4, a4, 0
40085a41:	03a8      	l32i.n	a10, a3, 0
40085a43:	4448      	l32i.n	a4, a4, 16
40085a45:	0004e0        	callx8	a4
40085a48:	f01d      	retw.n
	...

40085a4c <coex_arbit_clean_overtime_until>:
40085a4c:	004136        	entry	a1, 32
40085a4f:	fc9c51        	l32r	a5, 40084cc0 <coex_bb_reset_unlock+0x10>
40085a52:	ff6061        	l32r	a6, 400857d4 <coex_timer_ts_start_disalarm+0x118>
40085a55:	0538      	l32i.n	a3, a5, 0
40085a57:	06a8      	l32i.n	a10, a6, 0
40085a59:	3338      	l32i.n	a3, a3, 12
40085a5b:	0003e0        	callx8	a3
40085a5e:	0a7d      	mov.n	a7, a10
40085a60:	ff4531        	l32r	a3, 40085774 <coex_timer_ts_start_disalarm+0xb8>
40085a63:	002332        	l32i	a3, a3, 0
40085a66:	00c356        	bnez	a3, 40085a76 <coex_arbit_clean_overtime_until+0x2a>
40085a69:	0528      	l32i.n	a2, a5, 0
40085a6b:	07bd      	mov.n	a11, a7
40085a6d:	4228      	l32i.n	a2, a2, 16
40085a6f:	06a8      	l32i.n	a10, a6, 0
40085a71:	0002e0        	callx8	a2
40085a74:	f01d      	retw.n
40085a76:	08c342        	addi	a4, a3, 8
40085a79:	ec1247        	beq	a2, a4, 40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a7c:	0423a2        	l32i	a10, a3, 16
40085a7f:	012342        	l32i	a4, a3, 4
40085a82:	ffb7e5        	call8	40085600 <coex_time_is_past>
40085a85:	3a8c      	beqz.n	a10, 40085a8c <coex_arbit_clean_overtime_until+0x40>
40085a87:	03ad      	mov.n	a10, a3
40085a89:	ffcee5        	call8	40085778 <coex_timer_ts_start_disalarm+0xbc>
40085a8c:	043d      	mov.n	a3, a4
40085a8e:	848b      	addi.n	a8, a4, 8
40085a90:	fd5416        	beqz	a4, 40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a93:	e59287        	bne	a2, a8, 40085a7c <coex_arbit_clean_overtime_until+0x30>
40085a96:	fff3c6        	j	40085a69 <coex_arbit_clean_overtime_until+0x1d>
40085a99:	000000        	ill

40085a9c <get_mmu_region>:
40085a9c:	004136        	entry	a1, 32
40085a9f:	52dc      	bnez.n	a2, 40085ab8 <get_mmu_region+0x1c>
40085aa1:	080c      	movi.n	a8, 0
40085aa3:	0389      	s32i.n	a8, a3, 0
40085aa5:	034c      	movi.n	a3, 64
40085aa7:	0439      	s32i.n	a3, a4, 0
40085aa9:	f03d      	nop.n
40085aab:	f03d      	nop.n
40085aad:	f03d      	nop.n
40085aaf:	f03d      	nop.n
40085ab1:	eb3831        	l32r	a3, 40080794 <_init_end+0x394>
40085ab4:	0539      	s32i.n	a3, a5, 0
40085ab6:	f01d      	retw.n
40085ab8:	d84c      	movi.n	a8, 77
40085aba:	0389      	s32i.n	a8, a3, 0
40085abc:	73a032        	movi	a3, 115
40085abf:	0439      	s32i.n	a3, a4, 0
40085ac1:	f03d      	nop.n
40085ac3:	f03d      	nop.n
40085ac5:	f03d      	nop.n
40085ac7:	f03d      	nop.n
40085ac9:	eb3331        	l32r	a3, 40080798 <_init_end+0x398>
40085acc:	0539      	s32i.n	a3, a5, 0
40085ace:	f01d      	retw.n

40085ad0 <spi_flash_mmap_init>:
40085ad0:	004136        	entry	a1, 32
40085ad3:	eb3221        	l32r	a2, 4008079c <_init_end+0x39c>
40085ad6:	000222        	l8ui	a2, a2, 0
40085ad9:	075256        	bnez	a2, 40085b52 <spi_flash_mmap_init+0x82>
40085adc:	006560        	rsil	a6, 5
40085adf:	030c      	movi.n	a3, 0
40085ae1:	0017c6        	j	40085b44 <spi_flash_mmap_init+0x74>
40085ae4:	53e000        	max	a14, a0, a0
40085ae7:	2e4111        	l32r	a1, 400513ec <r_lm_init+0x26b8>
40085aea:	40eb      	addi.n	a4, a0, 14
40085aec:	408045        	call0	400c62f4 <_rtc_text_end+0x62f4>
40085aef:	e520a4        	lsi	f10, a0, 0x394
40085af2:	a0fbe6        	bgei	a11, 0x100, 40085a96 <coex_arbit_clean_overtime_until+0x4a>
40085af5:	202a      	add.n	a2, a0, a2
40085af7:	eb2b81        	l32r	a8, 400807a4 <_init_end+0x3a4>
40085afa:	558a      	add.n	a5, a5, a8
40085afc:	05ad      	mov.n	a10, a5
40085afe:	fbe625        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085b01:	0712a7        	beq	a2, a10, 40085b0c <spi_flash_mmap_init+0x3c>
40085b04:	00a122        	movi	a2, 0x100
40085b07:	0020c0        	memw
40085b0a:	0429      	s32i.n	a2, a4, 0
40085b0c:	25e287        	bbsi	a2, 8, 40085b35 <spi_flash_mmap_init+0x65>
40085b0f:	1b0c      	movi.n	a11, 1
40085b11:	080c      	movi.n	a8, 0
40085b13:	089d      	mov.n	a9, a8
40085b15:	839b30        	moveqz	a9, a11, a3
40085b18:	b3c3a2        	addi	a10, a3, -77
40085b1b:	838ba0        	moveqz	a8, a11, a10
40085b1e:	208890        	or	a8, a8, a9
40085b21:	08cc      	bnez.n	a8, 40085b25 <spi_flash_mmap_init+0x55>
40085b23:	e28c      	beqz.n	a2, 40085b35 <spi_flash_mmap_init+0x65>
40085b25:	eb1d21        	l32r	a2, 4008079c <_init_end+0x39c>
40085b28:	223a      	add.n	a2, a2, a3
40085b2a:	140c      	movi.n	a4, 1
40085b2c:	004242        	s8i	a4, a2, 0
40085b2f:	0020c0        	memw
40085b32:	000306        	j	40085b42 <spi_flash_mmap_init+0x72>
40085b35:	00a122        	movi	a2, 0x100
40085b38:	0020c0        	memw
40085b3b:	0429      	s32i.n	a2, a4, 0
40085b3d:	0020c0        	memw
40085b40:	0529      	s32i.n	a2, a5, 0
40085b42:	331b      	addi.n	a3, a3, 1
40085b44:	ffa022        	movi	a2, 255
40085b47:	9aa237        	bge	a2, a3, 40085ae5 <spi_flash_mmap_init+0x15>
40085b4a:	06ad      	mov.n	a10, a6
40085b4c:	ea7f81        	l32r	a8, 40080548 <_init_end+0x148>
40085b4f:	0008e0        	callx8	a8
40085b52:	f01d      	retw.n

40085b54 <spi_flash_protected_mmap_init>:
40085b54:	004136        	entry	a1, 32
40085b57:	006d65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085b5a:	fff765        	call8	40085ad0 <spi_flash_mmap_init>
40085b5d:	007b65        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085b60:	f01d      	retw.n
	...

40085b64 <spi_flash_protected_read_mmu_entry>:
40085b64:	004136        	entry	a1, 32
40085b67:	006c65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085b6a:	eb0da1        	l32r	a10, 400807a0 <_init_end+0x3a0>
40085b6d:	a0a2a0        	addx4	a10, a2, a10
40085b70:	fbdd65        	call8	40081948 <esp_dport_access_reg_read>
40085b73:	202aa0        	or	a2, a10, a10
40085b76:	0079e5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085b79:	f01d      	retw.n
	...

40085b7c <spi_flash_ensure_unmodified_region>:
40085b7c:	004136        	entry	a1, 32
40085b7f:	eb0a81        	l32r	a8, 400807a8 <_init_end+0x3a8>
40085b82:	10d280        	and	a13, a2, a8
40085b85:	c022d0        	sub	a2, a2, a13
40085b88:	332a      	add.n	a3, a3, a2
40085b8a:	eb08c1        	l32r	a12, 400807ac <_init_end+0x3ac>
40085b8d:	23ca      	add.n	a2, a3, a12
40085b8f:	10c280        	and	a12, a2, a8
40085b92:	0d8d      	mov.n	a8, a13
40085b94:	001746        	j	40085bf5 <spi_flash_ensure_unmodified_region+0x79>
40085b97:	908000        	addx2	a8, a0, a0
40085b9a:	a0a2f5        	call12	400265c8 <lmp_pref_rate_handler+0x4c>
40085b9d:	ff          	.byte 0xff
40085b9e:	5c2a97        	blt	a10, a9, 40085bfe <spi_flash_ensure_unmodified_region+0x82>
40085ba1:	41b590        	srli	a11, a9, 5
40085ba4:	1a0c      	movi.n	a10, 1
40085ba6:	401900        	ssl	a9
40085ba9:	a19a00        	sll	a9, a10
40085bac:	eb01a1        	l32r	a10, 400807b0 <_init_end+0x3b0>
40085baf:	a0aba0        	addx4	a10, a11, a10
40085bb2:	0aa8      	l32i.n	a10, a10, 0
40085bb4:	3809a7        	bnone	a9, a10, 40085bf0 <spi_flash_ensure_unmodified_region+0x74>
40085bb7:	012325        	call8	40086de8 <esp_spiram_writeback_cache>
40085bba:	fbbc25        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085bbd:	0a0c      	movi.n	a10, 0
40085bbf:	ea3781        	l32r	a8, 4008049c <_init_end+0x9c>
40085bc2:	0008e0        	callx8	a8
40085bc5:	fbc8a5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085bc8:	fbbb25        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085bcb:	1a0c      	movi.n	a10, 1
40085bcd:	ea3381        	l32r	a8, 4008049c <_init_end+0x9c>
40085bd0:	0008e0        	callx8	a8
40085bd3:	fbc7e5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085bd6:	eaf621        	l32r	a2, 400807b0 <_init_end+0x3b0>
40085bd9:	080c      	movi.n	a8, 0
40085bdb:	0289      	s32i.n	a8, a2, 0
40085bdd:	1289      	s32i.n	a8, a2, 4
40085bdf:	2289      	s32i.n	a8, a2, 8
40085be1:	3289      	s32i.n	a8, a2, 12
40085be3:	4289      	s32i.n	a8, a2, 16
40085be5:	5289      	s32i.n	a8, a2, 20
40085be7:	6289      	s32i.n	a8, a2, 24
40085be9:	7289      	s32i.n	a8, a2, 28
40085beb:	120c      	movi.n	a2, 1
40085bed:	f01d      	retw.n
40085bef:	f19100        	lsi	f0, a1, 0x3c4
40085bf2:	9aea      	add.n	a9, a10, a14
40085bf4:	ca88      	l32i.n	a8, a10, 48
40085bf6:	979d      	lsi	f9, a7, 28
40085bf8:	9d38      	l32i.n	a3, a13, 36
40085bfa:	020c      	movi.n	a2, 0
40085bfc:	f01d      	retw.n
40085bfe:	020c      	movi.n	a2, 0
40085c00:	f01d      	retw.n
	...

40085c04 <spi_flash_mmap_pages>:
40085c04:	00a136        	entry	a1, 80
40085c07:	0159      	s32i.n	a5, a1, 0
40085c09:	1169      	s32i.n	a6, a1, 4
40085c0b:	26d316        	beqz	a3, 40085e7c <spi_flash_mmap_pages+0x278>
40085c0e:	f03d      	nop.n
40085c10:	f03d      	nop.n
40085c12:	f03d      	nop.n
40085c14:	f03d      	nop.n
40085c16:	eae861        	l32r	a6, 400807b8 <_init_end+0x3b8>
40085c19:	626a      	add.n	a6, a2, a6
40085c1b:	150c      	movi.n	a5, 1
40085c1d:	eae771        	l32r	a7, 400807bc <_init_end+0x3bc>
40085c20:	01b767        	bgeu	a7, a6, 40085c25 <spi_flash_mmap_pages+0x21>
40085c23:	050c      	movi.n	a5, 0
40085c25:	745050        	extui	a5, a5, 0, 8
40085c28:	eae671        	l32r	a7, 400807c0 <_init_end+0x3c0>
40085c2b:	727a      	add.n	a7, a2, a7
40085c2d:	160c      	movi.n	a6, 1
40085c2f:	eae581        	l32r	a8, 400807c4 <_init_end+0x3c4>
40085c32:	02b877        	bgeu	a8, a7, 40085c38 <spi_flash_mmap_pages+0x34>
40085c35:	00a062        	movi	a6, 0
40085c38:	746060        	extui	a6, a6, 0, 8
40085c3b:	25ec      	bnez.n	a5, 40085c61 <spi_flash_mmap_pages+0x5d>
40085c3d:	06ec      	bnez.n	a6, 40085c61 <spi_flash_mmap_pages+0x5d>
40085c3f:	02a122        	movi	a2, 0x102
40085c42:	f01d      	retw.n
40085c44:	a05620        	addx4	a5, a6, a2
40085c47:	0558      	l32i.n	a5, a5, 0
40085c49:	234596        	bltz	a5, 40085e81 <spi_flash_mmap_pages+0x27d>
40085c4c:	115500        	slli	a5, a5, 16
40085c4f:	eade71        	l32r	a7, 400807c8 <_init_end+0x3c8>
40085c52:	1778      	l32i.n	a7, a7, 4
40085c54:	023577        	bltu	a5, a7, 40085c5a <spi_flash_mmap_pages+0x56>
40085c57:	008b46        	j	40085e88 <spi_flash_mmap_pages+0x284>
40085c5a:	661b      	addi.n	a6, a6, 1
40085c5c:	000106        	j	40085c64 <spi_flash_mmap_pages+0x60>
40085c5f:	620000        	lsi	f0, a0, 0x188
40085c62:	3700a0        	lsi	f10, a0, 220
40085c65:	b1dc36        	entry	a12, 0x58e8
40085c68:	ead9      	s32i.n	a13, a10, 56
40085c6a:	14a0a2        	movi	a10, 20
40085c6d:	fe6a65        	call8	40084314 <heap_caps_malloc>
40085c70:	41a9      	s32i.n	a10, a1, 16
40085c72:	217a16        	beqz	a10, 40085e8d <spi_flash_mmap_pages+0x289>
40085c75:	005b65        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085c78:	050c      	movi.n	a5, 0
40085c7a:	6159      	s32i.n	a5, a1, 24
40085c7c:	056d      	mov.n	a6, a5
40085c7e:	000586        	j	40085c98 <spi_flash_mmap_pages+0x94>
40085c81:	a07520        	addx4	a7, a5, a2
40085c84:	0027a2        	l32i	a10, a7, 0
40085c87:	eacbb1        	l32r	a11, 400807b4 <_init_end+0x3b4>
40085c8a:	11aa00        	slli	a10, a10, 16
40085c8d:	ffeee5        	call8	40085b7c <spi_flash_ensure_unmodified_region>
40085c90:	002a16        	beqz	a10, 40085c96 <spi_flash_mmap_pages+0x92>
40085c93:	01a062        	movi	a6, 1
40085c96:	551b      	addi.n	a5, a5, 1
40085c98:	e53537        	bltu	a5, a3, 40085c81 <spi_flash_mmap_pages+0x7d>
40085c9b:	6169      	s32i.n	a6, a1, 24
40085c9d:	ffe325        	call8	40085ad0 <spi_flash_mmap_init>
40085ca0:	2cc1d2        	addi	a13, a1, 44
40085ca3:	28c1c2        	addi	a12, a1, 40
40085ca6:	24c1b2        	addi	a11, a1, 36
40085ca9:	04ad      	mov.n	a10, a4
40085cab:	ffdf25        	call8	40085a9c <get_mmu_region>
40085cae:	a148      	l32i.n	a4, a1, 40
40085cb0:	02b437        	bgeu	a4, a3, 40085cb6 <spi_flash_mmap_pages+0xb2>
40085cb3:	007786        	j	40085e95 <spi_flash_mmap_pages+0x291>
40085cb6:	9168      	l32i.n	a6, a1, 36
40085cb8:	446a      	add.n	a4, a4, a6
40085cba:	c04430        	sub	a4, a4, a3
40085cbd:	441b      	addi.n	a4, a4, 1
40085cbf:	2149      	s32i.n	a4, a1, 8
40085cc1:	000fc6        	j	40085d04 <spi_flash_mmap_pages+0x100>
40085cc4:	006570        	rsil	a7, 5
40085cc7:	064d      	mov.n	a4, a6
40085cc9:	050c      	movi.n	a5, 0
40085ccb:	000806        	j	40085cef <spi_flash_mmap_pages+0xeb>
40085cce:	a10000        	sll	a0, a0
40085cd1:	a0eab4        	lsi	f11, a10, 0x280
40085cd4:	a5a0a4        	lsi	f10, a0, 0x294
40085cd7:	fbc8      	l32i.n	a12, a11, 60
40085cd9:	eab081        	l32r	a8, 4008079c <_init_end+0x39c>
40085cdc:	884a      	add.n	a8, a8, a4
40085cde:	000882        	l8ui	a8, a8, 0
40085ce1:	688c      	beqz.n	a8, 40085ceb <spi_flash_mmap_pages+0xe7>
40085ce3:	a08520        	addx4	a8, a5, a2
40085ce6:	0888      	l32i.n	a8, a8, 0
40085ce8:	089a87        	bne	a10, a8, 40085cf4 <spi_flash_mmap_pages+0xf0>
40085ceb:	441b      	addi.n	a4, a4, 1
40085ced:	551b      	addi.n	a5, a5, 1
40085cef:	863a      	add.n	a8, a6, a3
40085cf1:	db3487        	bltu	a4, a8, 40085cd0 <spi_flash_mmap_pages+0xcc>
40085cf4:	07ad      	mov.n	a10, a7
40085cf6:	ea1481        	l32r	a8, 40080548 <_init_end+0x148>
40085cf9:	0008e0        	callx8	a8
40085cfc:	c04460        	sub	a4, a4, a6
40085cff:	061347        	beq	a3, a4, 40085d09 <spi_flash_mmap_pages+0x105>
40085d02:	661b      	addi.n	a6, a6, 1
40085d04:	2148      	l32i.n	a4, a1, 8
40085d06:	ba2647        	blt	a6, a4, 40085cc4 <spi_flash_mmap_pages+0xc0>
40085d09:	2158      	l32i.n	a5, a1, 8
40085d0b:	199657        	bne	a6, a5, 40085d28 <spi_flash_mmap_pages+0x124>
40085d0e:	020c      	movi.n	a2, 0
40085d10:	1138      	l32i.n	a3, a1, 4
40085d12:	0329      	s32i.n	a2, a3, 0
40085d14:	f03d      	nop.n
40085d16:	f03d      	nop.n
40085d18:	f03d      	nop.n
40085d1a:	f03d      	nop.n
40085d1c:	0148      	l32i.n	a4, a1, 0
40085d1e:	0429      	s32i.n	a2, a4, 0
40085d20:	5129      	s32i.n	a2, a1, 20
40085d22:	01a122        	movi	a2, 0x101
40085d25:	0044c6        	j	40085e3c <spi_flash_mmap_pages+0x238>
40085d28:	006550        	rsil	a5, 5
40085d2b:	7159      	s32i.n	a5, a1, 28
40085d2d:	067d      	mov.n	a7, a6
40085d2f:	050c      	movi.n	a5, 0
40085d31:	5159      	s32i.n	a5, a1, 20
40085d33:	2169      	s32i.n	a6, a1, 8
40085d35:	3129      	s32i.n	a2, a1, 12
40085d37:	002286        	j	40085dc5 <spi_flash_mmap_pages+0x1c1>
40085d3a:	000000        	ill
40085d3d:	1127e0        	slli	a2, a7, 2
40085d40:	ea9841        	l32r	a4, 400807a0 <_init_end+0x3a0>
40085d43:	804240        	add	a4, a2, a4
40085d46:	20a440        	or	a10, a4, a4
40085d49:	fbc165        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085d4c:	206aa0        	or	a6, a10, a10
40085d4f:	ea9581        	l32r	a8, 400807a4 <_init_end+0x3a4>
40085d52:	228a      	add.n	a2, a2, a8
40085d54:	02ad      	mov.n	a10, a2
40085d56:	fbc0a5        	call8	40081960 <esp_dport_access_sequence_reg_read>
40085d59:	ea9081        	l32r	a8, 4008079c <_init_end+0x39c>
40085d5c:	887a      	add.n	a8, a8, a7
40085d5e:	000882        	l8ui	a8, a8, 0
40085d61:	d89c      	beqz.n	a8, 40085d82 <spi_flash_mmap_pages+0x17e>
40085d63:	31b8      	l32i.n	a11, a1, 12
40085d65:	a095b0        	addx4	a9, a5, a11
40085d68:	0998      	l32i.n	a9, a9, 0
40085d6a:	029697        	bne	a6, a9, 40085d70 <spi_flash_mmap_pages+0x16c>
40085d6d:	111a97        	beq	a10, a9, 40085d82 <spi_flash_mmap_pages+0x17e>
40085d70:	ea98d1        	l32r	a13, 400807d0 <_init_end+0x3d0>
40085d73:	ea98c1        	l32r	a12, 400807d4 <_init_end+0x3d4>
40085d76:	dca0b2        	movi	a11, 220
40085d79:	ea97a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085d7c:	201110        	or	a1, a1, a1
40085d7f:	5515a5        	call8	400daed8 <__assert_func>
40085d82:	38ec      	bnez.n	a8, 40085da9 <spi_flash_mmap_pages+0x1a5>
40085d84:	3188      	l32i.n	a8, a1, 12
40085d86:	a09580        	addx4	a9, a5, a8
40085d89:	0988      	l32i.n	a8, a9, 0
40085d8b:	029687        	bne	a6, a8, 40085d91 <spi_flash_mmap_pages+0x18d>
40085d8e:	171a87        	beq	a10, a8, 40085da9 <spi_flash_mmap_pages+0x1a5>
40085d91:	0020c0        	memw
40085d94:	0489      	s32i.n	a8, a4, 0
40085d96:	f03d      	nop.n
40085d98:	f03d      	nop.n
40085d9a:	f03d      	nop.n
40085d9c:	f03d      	nop.n
40085d9e:	0948      	l32i.n	a4, a9, 0
40085da0:	0020c0        	memw
40085da3:	0249      	s32i.n	a4, a2, 0
40085da5:	120c      	movi.n	a2, 1
40085da7:	5129      	s32i.n	a2, a1, 20
40085da9:	f03d      	nop.n
40085dab:	f03d      	nop.n
40085dad:	f03d      	nop.n
40085daf:	f03d      	nop.n
40085db1:	ea7a21        	l32r	a2, 4008079c <_init_end+0x39c>
40085db4:	227a      	add.n	a2, a2, a7
40085db6:	000242        	l8ui	a4, a2, 0
40085db9:	441b      	addi.n	a4, a4, 1
40085dbb:	004242        	s8i	a4, a2, 0
40085dbe:	0020c0        	memw
40085dc1:	771b      	addi.n	a7, a7, 1
40085dc3:	551b      	addi.n	a5, a5, 1
40085dc5:	f03d      	nop.n
40085dc7:	f03d      	nop.n
40085dc9:	2148      	l32i.n	a4, a1, 8
40085dcb:	243a      	add.n	a2, a4, a3
40085dcd:	021277        	beq	a2, a7, 40085dd3 <spi_flash_mmap_pages+0x1cf>
40085dd0:	ffda46        	j	40085d3d <spi_flash_mmap_pages+0x139>
40085dd3:	046d      	mov.n	a6, a4
40085dd5:	71a8      	l32i.n	a10, a1, 28
40085dd7:	e9dc81        	l32r	a8, 40080548 <_init_end+0x148>
40085dda:	0008e0        	callx8	a8
40085ddd:	ea7f21        	l32r	a2, 400807dc <_init_end+0x3dc>
40085de0:	0228      	l32i.n	a2, a2, 0
40085de2:	4158      	l32i.n	a5, a1, 16
40085de4:	3529      	s32i.n	a2, a5, 12
40085de6:	228c      	beqz.n	a2, 40085dec <spi_flash_mmap_pages+0x1e8>
40085de8:	45cb      	addi.n	a4, a5, 12
40085dea:	4249      	s32i.n	a4, a2, 16
40085dec:	f03d      	nop.n
40085dee:	f03d      	nop.n
40085df0:	f03d      	nop.n
40085df2:	f03d      	nop.n
40085df4:	ea7a21        	l32r	a2, 400807dc <_init_end+0x3dc>
40085df7:	042142        	l32i	a4, a1, 16
40085dfa:	006242        	s32i	a4, a2, 0
40085dfd:	4429      	s32i.n	a2, a4, 16
40085dff:	1469      	s32i.n	a6, a4, 4
40085e01:	2439      	s32i.n	a3, a4, 8
40085e03:	f03d      	nop.n
40085e05:	f03d      	nop.n
40085e07:	f03d      	nop.n
40085e09:	f03d      	nop.n
40085e0b:	ea7531        	l32r	a3, 400807e0 <_init_end+0x3e0>
40085e0e:	0328      	l32i.n	a2, a3, 0
40085e10:	221b      	addi.n	a2, a2, 1
40085e12:	0329      	s32i.n	a2, a3, 0
40085e14:	0429      	s32i.n	a2, a4, 0
40085e16:	f03d      	nop.n
40085e18:	f03d      	nop.n
40085e1a:	f03d      	nop.n
40085e1c:	f03d      	nop.n
40085e1e:	1158      	l32i.n	a5, a1, 4
40085e20:	0529      	s32i.n	a2, a5, 0
40085e22:	f03d      	nop.n
40085e24:	f03d      	nop.n
40085e26:	f03d      	nop.n
40085e28:	f03d      	nop.n
40085e2a:	9128      	l32i.n	a2, a1, 36
40085e2c:	c02620        	sub	a2, a6, a2
40085e2f:	112200        	slli	a2, a2, 16
40085e32:	b138      	l32i.n	a3, a1, 44
40085e34:	223a      	add.n	a2, a2, a3
40085e36:	0138      	l32i.n	a3, a1, 0
40085e38:	0329      	s32i.n	a2, a3, 0
40085e3a:	020c      	movi.n	a2, 0
40085e3c:	f03d      	nop.n
40085e3e:	f03d      	nop.n
40085e40:	f03d      	nop.n
40085e42:	6148      	l32i.n	a4, a1, 24
40085e44:	5158      	l32i.n	a5, a1, 20
40085e46:	1fb457        	bgeu	a4, a5, 40085e69 <spi_flash_mmap_pages+0x265>
40085e49:	00f9e5        	call8	40086de8 <esp_spiram_writeback_cache>
40085e4c:	fb92e5        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085e4f:	00a0a2        	movi	a10, 0
40085e52:	e99281        	l32r	a8, 4008049c <_init_end+0x9c>
40085e55:	0008e0        	callx8	a8
40085e58:	fb9f65        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085e5b:	fb9225        	call8	4008177c <esp_dport_access_stall_other_cpu_start>
40085e5e:	1a0c      	movi.n	a10, 1
40085e60:	e98f81        	l32r	a8, 4008049c <_init_end+0x9c>
40085e63:	0008e0        	callx8	a8
40085e66:	fb9ea5        	call8	40081850 <esp_dport_access_stall_other_cpu_end>
40085e69:	004aa5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085e6c:	0148      	l32i.n	a4, a1, 0
40085e6e:	0438      	l32i.n	a3, a4, 0
40085e70:	43ec      	bnez.n	a3, 40085e98 <spi_flash_mmap_pages+0x294>
40085e72:	41a8      	l32i.n	a10, a1, 16
40085e74:	ea5c81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085e77:	0008e0        	callx8	a8
40085e7a:	f01d      	retw.n
40085e7c:	02a122        	movi	a2, 0x102
40085e7f:	f01d      	retw.n
40085e81:	02a122        	movi	a2, 0x102
40085e84:	f01d      	retw.n
40085e86:	220000        	orb	b0, b0, b0
40085e89:	1d02a1        	l32r	a10, 4004d294 <r_llm_init+0x89c>
40085e8c:	a122f0        	lsi	f15, a2, 0x284
40085e8f:	f01d01        	l32r	a0, 40081f04 <timer_alarm_isr+0x90>
40085e92:	000000        	ill
40085e95:	01a122        	movi	a2, 0x101
40085e98:	f01d      	retw.n
	...

40085e9c <spi_flash_mmap>:
40085e9c:	006136        	entry	a1, 48
40085e9f:	f47020        	extui	a7, a2, 0, 16
40085ea2:	05a756        	bnez	a7, 40085f00 <spi_flash_mmap+0x64>
40085ea5:	807230        	add	a7, a2, a3
40085ea8:	ea4881        	l32r	a8, 400807c8 <_init_end+0x3c8>
40085eab:	012882        	l32i	a8, a8, 4
40085eae:	533877        	bltu	a8, a7, 40085f05 <spi_flash_mmap+0x69>
40085eb1:	f52020        	extui	a2, a2, 16, 16
40085eb4:	ea3e71        	l32r	a7, 400807ac <_init_end+0x3ac>
40085eb7:	803370        	add	a3, a3, a7
40085eba:	f53030        	extui	a3, a3, 16, 16
40085ebd:	3139      	s32i.n	a3, a1, 12
40085ebf:	037d      	mov.n	a7, a3
40085ec1:	f03d      	nop.n
40085ec3:	f03d      	nop.n
40085ec5:	f03d      	nop.n
40085ec7:	ea48b1        	l32r	a11, 400807e8 <_init_end+0x3e8>
40085eca:	11a3e0        	slli	a10, a3, 2
40085ecd:	fe4465        	call8	40084314 <heap_caps_malloc>
40085ed0:	0a3d      	mov.n	a3, a10
40085ed2:	6abc      	beqz.n	a10, 40085f0c <spi_flash_mmap+0x70>
40085ed4:	080c      	movi.n	a8, 0
40085ed6:	000206        	j	40085ee2 <spi_flash_mmap+0x46>
40085ed9:	a09830        	addx4	a9, a8, a3
40085edc:	a82a      	add.n	a10, a8, a2
40085ede:	09a9      	s32i.n	a10, a9, 0
40085ee0:	881b      	addi.n	a8, a8, 1
40085ee2:	f32877        	blt	a8, a7, 40085ed9 <spi_flash_mmap+0x3d>
40085ee5:	06ed      	mov.n	a14, a6
40085ee7:	05dd      	mov.n	a13, a5
40085ee9:	04cd      	mov.n	a12, a4
40085eeb:	31b8      	l32i.n	a11, a1, 12
40085eed:	03ad      	mov.n	a10, a3
40085eef:	ffd165        	call8	40085c04 <spi_flash_mmap_pages>
40085ef2:	0a2d      	mov.n	a2, a10
40085ef4:	03ad      	mov.n	a10, a3
40085ef6:	ea3b81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085ef9:	0008e0        	callx8	a8
40085efc:	f01d      	retw.n
40085efe:	220000        	orb	b0, b0, b0
40085f01:	1d02a1        	l32r	a10, 4004d30c <r_llm_init+0x914>
40085f04:	a122f0        	lsi	f15, a2, 0x284
40085f07:	f01d02        	l16ui	a0, a13, 0x1e0
40085f0a:	220000        	orb	b0, b0, b0
40085f0d:	1d01a1        	l32r	a10, 4004d314 <r_llm_init+0x91c>
40085f10:	0000f0        	callx12	a0
	...

40085f14 <spi_flash_munmap>:
40085f14:	004136        	entry	a1, 32
40085f17:	003165        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085f1a:	ea3031        	l32r	a3, 400807dc <_init_end+0x3dc>
40085f1d:	0338      	l32i.n	a3, a3, 0
40085f1f:	002546        	j	40085fb8 <spi_flash_munmap+0xa4>
40085f22:	000000        	ill
40085f25:	0388      	l32i.n	a8, a3, 0
40085f27:	021827        	beq	a8, a2, 40085f2d <spi_flash_munmap+0x19>
40085f2a:	0021c6        	j	40085fb5 <spi_flash_munmap+0xa1>
40085f2d:	1398      	l32i.n	a9, a3, 4
40085f2f:	001646        	j	40085f8c <spi_flash_munmap+0x78>
40085f32:	810000        	src	a0, a0, a0
40085f35:	ea1a      	add.n	a14, a10, a1
40085f37:	889a      	add.n	a8, a8, a9
40085f39:	000882        	l8ui	a8, a8, 0
40085f3c:	08dc      	bnez.n	a8, 40085f50 <spi_flash_munmap+0x3c>
40085f3e:	ea2bd1        	l32r	a13, 400807ec <_init_end+0x3ec>
40085f41:	ea2bc1        	l32r	a12, 400807f0 <_init_end+0x3f0>
40085f44:	10a1b2        	movi	a11, 0x110
40085f47:	ea24a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085f4a:	201110        	or	a1, a1, a1
40085f4d:	54f8a5        	call8	400daed8 <__assert_func>
40085f50:	880b      	addi.n	a8, a8, -1
40085f52:	748080        	extui	a8, a8, 0, 8
40085f55:	ea11a1        	l32r	a10, 4008079c <_init_end+0x39c>
40085f58:	aa9a      	add.n	a10, a10, a9
40085f5a:	004a82        	s8i	a8, a10, 0
40085f5d:	0020c0        	memw
40085f60:	68ec      	bnez.n	a8, 40085f8a <spi_flash_munmap+0x76>
40085f62:	1189e0        	slli	a8, a9, 2
40085f65:	f03d      	nop.n
40085f67:	f03d      	nop.n
40085f69:	f03d      	nop.n
40085f6b:	ea0da1        	l32r	a10, 400807a0 <_init_end+0x3a0>
40085f6e:	a8aa      	add.n	a10, a8, a10
40085f70:	00a1b2        	movi	a11, 0x100
40085f73:	0020c0        	memw
40085f76:	0ab9      	s32i.n	a11, a10, 0
40085f78:	f03d      	nop.n
40085f7a:	f03d      	nop.n
40085f7c:	f03d      	nop.n
40085f7e:	f03d      	nop.n
40085f80:	ea09a1        	l32r	a10, 400807a4 <_init_end+0x3a4>
40085f83:	88aa      	add.n	a8, a8, a10
40085f85:	0020c0        	memw
40085f88:	08b9      	s32i.n	a11, a8, 0
40085f8a:	991b      	addi.n	a9, a9, 1
40085f8c:	f03d      	nop.n
40085f8e:	f03d      	nop.n
40085f90:	f03d      	nop.n
40085f92:	13a8      	l32i.n	a10, a3, 4
40085f94:	2388      	l32i.n	a8, a3, 8
40085f96:	8a8a      	add.n	a8, a10, a8
40085f98:	982987        	blt	a9, a8, 40085f34 <spi_flash_munmap+0x20>
40085f9b:	3328      	l32i.n	a2, a3, 12
40085f9d:	328c      	beqz.n	a2, 40085fa4 <spi_flash_munmap+0x90>
40085f9f:	4388      	l32i.n	a8, a3, 16
40085fa1:	046282        	s32i	a8, a2, 16
40085fa4:	f03d      	nop.n
40085fa6:	f03d      	nop.n
40085fa8:	f03d      	nop.n
40085faa:	f03d      	nop.n
40085fac:	4328      	l32i.n	a2, a3, 16
40085fae:	3388      	l32i.n	a8, a3, 12
40085fb0:	0289      	s32i.n	a8, a2, 0
40085fb2:	000146        	j	40085fbb <spi_flash_munmap+0xa7>
40085fb5:	032332        	l32i	a3, a3, 12
40085fb8:	f69356        	bnez	a3, 40085f25 <spi_flash_munmap+0x11>
40085fbb:	0035a5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
40085fbe:	00e356        	bnez	a3, 40085fd0 <spi_flash_munmap+0xbc>
40085fc1:	ea0cd1        	l32r	a13, 400807f4 <_init_end+0x3f4>
40085fc4:	ea0bc1        	l32r	a12, 400807f0 <_init_end+0x3f0>
40085fc7:	1ca1b2        	movi	a11, 0x11c
40085fca:	ea03a1        	l32r	a10, 400807d8 <_init_end+0x3d8>
40085fcd:	54f0a5        	call8	400daed8 <__assert_func>
40085fd0:	03ad      	mov.n	a10, a3
40085fd2:	ea0481        	l32r	a8, 400807e4 <_init_end+0x3e4>
40085fd5:	0008e0        	callx8	a8
40085fd8:	f01d      	retw.n
	...

40085fdc <spi_flash_mmap_get_free_pages>:
40085fdc:	006136        	entry	a1, 48
40085fdf:	0024e5        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
40085fe2:	ffaee5        	call8	40085ad0 <spi_flash_mmap_init>
40085fe5:	d1cb      	addi.n	a13, a1, 12
40085fe7:	c18b      	addi.n	a12, a1, 8
40085fe9:	b14b      	addi.n	a11, a1, 4
40085feb:	02ad      	mov.n	a10, a2
40085fed:	ffaae5        	call8	40085a9c <get_mmu_region>
40085ff0:	006540        	rsil	a4, 5
40085ff3:	1138      	l32i.n	a3, a1, 4
40085ff5:	020c      	movi.n	a2, 0
40085ff7:	000746        	j	40086018 <spi_flash_mmap_get_free_pages+0x3c>
40085ffa:	000000        	ill
40085ffd:	e9e781        	l32r	a8, 4008079c <_init_end+0x39c>
40086000:	883a      	add.n	a8, a8, a3
40086002:	000882        	l8ui	a8, a8, 0
40086005:	00d856        	bnez	a8, 40086016 <spi_flash_mmap_get_free_pages+0x3a>
40086008:	e9e6a1        	l32r	a10, 400807a0 <_init_end+0x3a0>
4008600b:	a0a3a0        	addx4	a10, a3, a10
4008600e:	fb9525        	call8	40081960 <esp_dport_access_sequence_reg_read>
40086011:	01fa66        	bnei	a10, 0x100, 40086016 <spi_flash_mmap_get_free_pages+0x3a>
40086014:	221b      	addi.n	a2, a2, 1
40086016:	331b      	addi.n	a3, a3, 1
40086018:	012192        	l32i	a9, a1, 4
4008601b:	022182        	l32i	a8, a1, 8
4008601e:	898a      	add.n	a8, a9, a8
40086020:	d92387        	blt	a3, a8, 40085ffd <spi_flash_mmap_get_free_pages+0x21>
40086023:	04ad      	mov.n	a10, a4
40086025:	e94881        	l32r	a8, 40080548 <_init_end+0x148>
40086028:	0008e0        	callx8	a8
4008602b:	002ea5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
4008602e:	f01d      	retw.n

40086030 <spi_flash_mark_modified_region>:
40086030:	004136        	entry	a1, 32
40086033:	e9dd81        	l32r	a8, 400807a8 <_init_end+0x3a8>
40086036:	10c280        	and	a12, a2, a8
40086039:	c022c0        	sub	a2, a2, a12
4008603c:	332a      	add.n	a3, a3, a2
4008603e:	e9dbd1        	l32r	a13, 400807ac <_init_end+0x3ac>
40086041:	23da      	add.n	a2, a3, a13
40086043:	10d280        	and	a13, a2, a8
40086046:	0cad      	mov.n	a10, a12
40086048:	000bc6        	j	4008607b <spi_flash_mark_modified_region+0x4b>
4008604b:	a00000        	addx4	a0, a0, a0
4008604e:	82f5b0        	mull	a15, a5, a11
40086051:	b7ffa0        	lsi	f10, a15, 0x2dc
40086054:	2928      	l32i.n	a2, a9, 8
40086056:	4195b0        	srli	a9, a11, 5
40086059:	180c      	movi.n	a8, 1
4008605b:	401b00        	ssl	a11
4008605e:	a18800        	sll	a8, a8
40086061:	e9d3b1        	l32r	a11, 400807b0 <_init_end+0x3b0>
40086064:	a099b0        	addx4	a9, a9, a11
40086067:	09b8      	l32i.n	a11, a9, 0
40086069:	208b80        	or	a8, a11, a8
4008606c:	0989      	s32i.n	a8, a9, 0
4008606e:	f03d      	nop.n
40086070:	f03d      	nop.n
40086072:	f03d      	nop.n
40086074:	f03d      	nop.n
40086076:	e9cf81        	l32r	a8, 400807b4 <_init_end+0x3b4>
40086079:	aa8a      	add.n	a10, a10, a8
4008607b:	8cda      	add.n	a8, a12, a13
4008607d:	cc3a87        	bltu	a10, a8, 4008604d <spi_flash_mark_modified_region+0x1d>
40086080:	f01d      	retw.n
	...

40086084 <spi_flash_phys2cache>:
40086084:	006136        	entry	a1, 48
40086087:	f55020        	extui	a5, a2, 16, 16
4008608a:	e3cc      	bnez.n	a3, 4008609c <spi_flash_phys2cache+0x18>
4008608c:	e9c231        	l32r	a3, 40080794 <_init_end+0x394>
4008608f:	3139      	s32i.n	a3, a1, 12
40086091:	070c      	movi.n	a7, 0
40086093:	044c      	movi.n	a4, 64
40086095:	073d      	mov.n	a3, a7
40086097:	000386        	j	400860a9 <spi_flash_phys2cache+0x25>
4008609a:	410000        	srli	a0, a0, 0
4008609d:	49e9d7        	bbsi	a9, 13, 400860ea <spi_flash_phys2cache+0x66>
400860a0:	074c31        	l32r	a3, 40047dd0 <lld_evt_get_next_free_slot+0x14a4>
400860a3:	00a142        	movi	a4, 0x100
400860a6:	4da032        	movi	a3, 77
400860a9:	001825        	call8	4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>
400860ac:	006560        	rsil	a6, 5
400860af:	000c06        	j	400860e3 <spi_flash_phys2cache+0x5f>
400860b2:	a10000        	sll	a0, a0
400860b5:	e9bb      	addi.n	a14, a9, 11
400860b7:	a0a3a0        	addx4	a10, a3, a10
400860ba:	fb8a65        	call8	40081960 <esp_dport_access_sequence_reg_read>
400860bd:	1f95a7        	bne	a5, a10, 400860e0 <spi_flash_phys2cache+0x5c>
400860c0:	c03370        	sub	a3, a3, a7
400860c3:	113300        	slli	a3, a3, 16
400860c6:	032142        	l32i	a4, a1, 12
400860c9:	803430        	add	a3, a4, a3
400860cc:	06ad      	mov.n	a10, a6
400860ce:	e91e81        	l32r	a8, 40080548 <_init_end+0x148>
400860d1:	0008e0        	callx8	a8
400860d4:	0023e5        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
400860d7:	f42020        	extui	a2, a2, 0, 16
400860da:	202320        	or	a2, a3, a2
400860dd:	f01d      	retw.n
400860df:	c33200        	movf	a3, a2, b0
400860e2:	234701        	l32r	a0, 4004ee00 <r_lm_init+0xcc>
400860e5:	60cd      	lsi	f12, a0, 0
400860e7:	8120a6        	blti	a0, 2, 4008606c <spi_flash_mark_modified_region+0x3c>
400860ea:	e0e917        	bbsi	a9, 1, 400860ce <spi_flash_phys2cache+0x4a>
400860ed:	0008      	l32i.n	a0, a0, 0
400860ef:	002265        	call8	40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>
400860f2:	00a022        	movi	a2, 0
400860f5:	f01d      	retw.n
	...

400860f8 <spi_flash_restore_cache>:
400860f8:	004136        	entry	a1, 32
400860fb:	036256        	bnez	a2, 40086135 <spi_flash_restore_cache+0x3d>
400860fe:	e9bf41        	l32r	a4, 400807fc <_init_end+0x3fc>
40086101:	20a440        	or	a10, a4, a4
40086104:	fb8425        	call8	40081948 <esp_dport_access_reg_read>
40086107:	820c      	movi.n	a2, 8
40086109:	20aa20        	or	a10, a10, a2
4008610c:	0020c0        	memw
4008610f:	04a9      	s32i.n	a10, a4, 0
40086111:	f03d      	nop.n
40086113:	f03d      	nop.n
40086115:	f03d      	nop.n
40086117:	f03d      	nop.n
40086119:	e9b941        	l32r	a4, 40080800 <_init_end+0x400>
4008611c:	04ad      	mov.n	a10, a4
4008611e:	fb82a5        	call8	40081948 <esp_dport_access_reg_read>
40086121:	c0af22        	movi	a2, -64
40086124:	10aa20        	and	a10, a10, a2
40086127:	543030        	extui	a3, a3, 0, 6
4008612a:	203a30        	or	a3, a10, a3
4008612d:	0020c0        	memw
40086130:	0439      	s32i.n	a3, a4, 0
40086132:	f01d      	retw.n
40086134:	b32100        	movgez	a2, a1, a0
40086137:	20e9      	s32i.n	a14, a0, 8
40086139:	e520a2        	l32i	a10, a0, 0x394
4008613c:	82fb80        	mull	a15, a11, a8
4008613f:	8008a0        	add	a0, a8, a10
40086142:	20aa      	add.n	a2, a0, a10
40086144:	0020c0        	memw
40086147:	02a9      	s32i.n	a10, a2, 0
40086149:	f03d      	nop.n
4008614b:	f03d      	nop.n
4008614d:	f03d      	nop.n
4008614f:	f03d      	nop.n
40086151:	e9ad21        	l32r	a2, 40080808 <_init_end+0x408>
40086154:	02ad      	mov.n	a10, a2
40086156:	fb7f25        	call8	40081948 <esp_dport_access_reg_read>
40086159:	c0af82        	movi	a8, -64
4008615c:	10aa80        	and	a10, a10, a8
4008615f:	543030        	extui	a3, a3, 0, 6
40086162:	203a30        	or	a3, a10, a3
40086165:	0020c0        	memw
40086168:	0239      	s32i.n	a3, a2, 0
4008616a:	f01d      	retw.n

4008616c <spi_flash_op_block_func>:
4008616c:	004136        	entry	a1, 32
4008616f:	024a65        	call8	40088614 <vTaskSuspendAll>
40086172:	fb2ba5        	call8	4008142c <esp_intr_noniram_disable>
40086175:	00a092        	movi	a9, 0
40086178:	e9a581        	l32r	a8, 4008080c <_init_end+0x40c>
4008617b:	0020c0        	memw
4008617e:	004892        	s8i	a9, a8, 0
40086181:	0020c0        	memw
40086184:	01a092        	movi	a9, 1
40086187:	f03d      	nop.n
40086189:	f03d      	nop.n
4008618b:	f03d      	nop.n
4008618d:	e9a081        	l32r	a8, 40080810 <_init_end+0x410>
40086190:	0020c0        	memw
40086193:	004892        	s8i	a9, a8, 0
40086196:	0020c0        	memw
40086199:	f03d      	nop.n
4008619b:	f03d      	nop.n
4008619d:	f03d      	nop.n
4008619f:	f03d      	nop.n
400861a1:	e99a81        	l32r	a8, 4008080c <_init_end+0x40c>
400861a4:	000882        	l8ui	a8, a8, 0
400861a7:	748080        	extui	a8, a8, 0, 8
400861aa:	feb816        	beqz	a8, 40086199 <spi_flash_op_block_func+0x2d>
400861ad:	e99981        	l32r	a8, 40080814 <_init_end+0x414>
400861b0:	a08280        	addx4	a8, a2, a8
400861b3:	08b8      	l32i.n	a11, a8, 0
400861b5:	02ad      	mov.n	a10, a2
400861b7:	fff425        	call8	400860f8 <spi_flash_restore_cache>
400861ba:	fb2c65        	call8	40081480 <esp_intr_noniram_enable>
400861bd:	033165        	call8	400894d4 <xTaskResumeAll>
400861c0:	f01d      	retw.n
	...

400861c4 <spi_flash_disable_cache>:
400861c4:	004136        	entry	a1, 32
400861c7:	e2ec      	bnez.n	a2, 400861f9 <spi_flash_disable_cache+0x35>
400861c9:	e98da1        	l32r	a10, 40080800 <_init_end+0x400>
400861cc:	201110        	or	a1, a1, a1
400861cf:	fb77a5        	call8	40081948 <esp_dport_access_reg_read>
400861d2:	5420a0        	extui	a2, a10, 0, 6
400861d5:	e990a1        	l32r	a10, 40080818 <_init_end+0x418>
400861d8:	fb76e5        	call8	40081948 <esp_dport_access_reg_read>
400861db:	b4a7a0        	extui	a10, a10, 7, 12
400861de:	f31a66        	bnei	a10, 1, 400861d5 <spi_flash_disable_cache+0x11>
400861e1:	e98641        	l32r	a4, 400807fc <_init_end+0x3fc>
400861e4:	20a440        	or	a10, a4, a4
400861e7:	fb7625        	call8	40081948 <esp_dport_access_reg_read>
400861ea:	f7af82        	movi	a8, -9
400861ed:	10aa80        	and	a10, a10, a8
400861f0:	0020c0        	memw
400861f3:	0064a2        	s32i	a10, a4, 0
400861f6:	000b06        	j	40086226 <spi_flash_disable_cache+0x62>
400861f9:	e983a1        	l32r	a10, 40080808 <_init_end+0x408>
400861fc:	201110        	or	a1, a1, a1
400861ff:	fb74a5        	call8	40081948 <esp_dport_access_reg_read>
40086202:	5420a0        	extui	a2, a10, 0, 6
40086205:	e985a1        	l32r	a10, 4008081c <_init_end+0x41c>
40086208:	fb73e5        	call8	40081948 <esp_dport_access_reg_read>
4008620b:	b4a7a0        	extui	a10, a10, 7, 12
4008620e:	f31a66        	bnei	a10, 1, 40086205 <spi_flash_disable_cache+0x41>
40086211:	e97c41        	l32r	a4, 40080804 <_init_end+0x404>
40086214:	20a440        	or	a10, a4, a4
40086217:	fb7325        	call8	40081948 <esp_dport_access_reg_read>
4008621a:	f7af82        	movi	a8, -9
4008621d:	10aa80        	and	a10, a10, a8
40086220:	0020c0        	memw
40086223:	0064a2        	s32i	a10, a4, 0
40086226:	0329      	s32i.n	a2, a3, 0
40086228:	f01d      	retw.n
	...

4008622c <spi_flash_disable_interrupts_caches_and_other_cpu>:
4008622c:	004136        	entry	a1, 32
4008622f:	641fa5        	call8	400ea428 <spi_flash_op_lock>
40086232:	03eb30        	rsr.prid	a3
40086235:	043d30        	extui	a3, a3, 13, 1
40086238:	204330        	or	a4, a3, a3
4008623b:	00a052        	movi	a5, 0
4008623e:	120c      	movi.n	a2, 1
40086240:	932530        	movnez	a2, a5, a3
40086243:	742020        	extui	a2, a2, 0, 8
40086246:	e97651        	l32r	a5, 40080820 <_init_end+0x420>
40086249:	0020c0        	memw
4008624c:	0558      	l32i.n	a5, a5, 0
4008624e:	0e0526        	beqi	a5, -1, 40086260 <spi_flash_disable_interrupts_caches_and_other_cpu+0x34>
40086251:	e974d1        	l32r	a13, 40080824 <_init_end+0x424>
40086254:	e975c1        	l32r	a12, 40080828 <_init_end+0x428>
40086257:	65a0b2        	movi	a11, 101
4008625a:	e974a1        	l32r	a10, 4008082c <_init_end+0x42c>
4008625d:	54c7a5        	call8	400daed8 <__assert_func>
40086260:	e97051        	l32r	a5, 40080820 <_init_end+0x420>
40086263:	0020c0        	memw
40086266:	006532        	s32i	a3, a5, 0
40086269:	027ee5        	call8	40088a58 <xTaskGetSchedulerState>
4008626c:	201a66        	bnei	a10, 1, 40086290 <spi_flash_disable_interrupts_caches_and_other_cpu+0x64>
4008626f:	00e316        	beqz	a3, 40086281 <spi_flash_disable_interrupts_caches_and_other_cpu+0x55>
40086272:	e96fd1        	l32r	a13, 40080830 <_init_end+0x430>
40086275:	e96cc1        	l32r	a12, 40080828 <_init_end+0x428>
40086278:	6ea0b2        	movi	a11, 110
4008627b:	e96ca1        	l32r	a10, 4008082c <_init_end+0x42c>
4008627e:	54c5a5        	call8	400daed8 <__assert_func>
40086281:	e964b1        	l32r	a11, 40080814 <_init_end+0x414>
40086284:	a0b2b0        	addx4	a11, a2, a11
40086287:	02ad      	mov.n	a10, a2
40086289:	fff3a5        	call8	400861c4 <spi_flash_disable_cache>
4008628c:	001ac6        	j	400862fb <spi_flash_disable_interrupts_caches_and_other_cpu+0xcf>
4008628f:	0a0c00        	add.s	f0, f12, f0
40086292:	02e5e5        	call8	400890f0 <uxTaskPriorityGet>
40086295:	0a5d      	mov.n	a5, a10
40086297:	8b1c      	movi.n	a11, 24
40086299:	0a0c      	movi.n	a10, 0
4008629b:	02e725        	call8	4008910c <vTaskPrioritySet>
4008629e:	090c      	movi.n	a9, 0
400862a0:	e95c81        	l32r	a8, 40080810 <_init_end+0x410>
400862a3:	0020c0        	memw
400862a6:	004892        	s8i	a9, a8, 0
400862a9:	0020c0        	memw
400862ac:	02cd      	mov.n	a12, a2
400862ae:	f03d      	nop.n
400862b0:	f03d      	nop.n
400862b2:	f03d      	nop.n
400862b4:	e960b1        	l32r	a11, 40080834 <_init_end+0x434>
400862b7:	02ad      	mov.n	a10, a2
400862b9:	511525        	call8	400d740c <esp_ipc_call>
400862bc:	da8c      	beqz.n	a10, 400862cd <spi_flash_disable_interrupts_caches_and_other_cpu+0xa1>
400862be:	e95ed1        	l32r	a13, 40080838 <_init_end+0x438>
400862c1:	e959c1        	l32r	a12, 40080828 <_init_end+0x428>
400862c4:	79a0b2        	movi	a11, 121
400862c7:	e959a1        	l32r	a10, 4008082c <_init_end+0x42c>
400862ca:	54c0e5        	call8	400daed8 <__assert_func>
400862cd:	e95081        	l32r	a8, 40080810 <_init_end+0x410>
400862d0:	000882        	l8ui	a8, a8, 0
400862d3:	748080        	extui	a8, a8, 0, 8
400862d6:	ff3816        	beqz	a8, 400862cd <spi_flash_disable_interrupts_caches_and_other_cpu+0xa1>
400862d9:	0233a5        	call8	40088614 <vTaskSuspendAll>
400862dc:	05bd      	mov.n	a11, a5
400862de:	0a0c      	movi.n	a10, 0
400862e0:	02e2a5        	call8	4008910c <vTaskPrioritySet>
400862e3:	03eb50        	rsr.prid	a5
400862e6:	045d50        	extui	a5, a5, 13, 1
400862e9:	0e1457        	beq	a4, a5, 400862fb <spi_flash_disable_interrupts_caches_and_other_cpu+0xcf>
400862ec:	e954d1        	l32r	a13, 4008083c <_init_end+0x43c>
400862ef:	e94ec1        	l32r	a12, 40080828 <_init_end+0x428>
400862f2:	84a0b2        	movi	a11, 132
400862f5:	e94da1        	l32r	a10, 4008082c <_init_end+0x42c>
400862f8:	54bde5        	call8	400daed8 <__assert_func>
400862fb:	fb1325        	call8	4008142c <esp_intr_noniram_disable>
400862fe:	e94541        	l32r	a4, 40080814 <_init_end+0x414>
40086301:	a0b340        	addx4	a11, a3, a4
40086304:	03ad      	mov.n	a10, a3
40086306:	ffebe5        	call8	400861c4 <spi_flash_disable_cache>
40086309:	a0b240        	addx4	a11, a2, a4
4008630c:	02ad      	mov.n	a10, a2
4008630e:	ffeb65        	call8	400861c4 <spi_flash_disable_cache>
40086311:	f01d      	retw.n
	...

40086314 <spi_flash_enable_interrupts_caches_and_other_cpu>:
40086314:	004136        	entry	a1, 32
40086317:	03eb40        	rsr.prid	a4
4008631a:	044d40        	extui	a4, a4, 13, 1
4008631d:	080c      	movi.n	a8, 0
4008631f:	120c      	movi.n	a2, 1
40086321:	932840        	movnez	a2, a8, a4
40086324:	742020        	extui	a2, a2, 0, 8
40086327:	e93e81        	l32r	a8, 40080820 <_init_end+0x420>
4008632a:	0020c0        	memw
4008632d:	0888      	l32i.n	a8, a8, 0
4008632f:	0e1847        	beq	a8, a4, 40086341 <spi_flash_enable_interrupts_caches_and_other_cpu+0x2d>
40086332:	e943d1        	l32r	a13, 40080840 <_init_end+0x440>
40086335:	e943c1        	l32r	a12, 40080844 <_init_end+0x444>
40086338:	96a0b2        	movi	a11, 150
4008633b:	e93ca1        	l32r	a10, 4008082c <_init_end+0x42c>
4008633e:	54b9a5        	call8	400daed8 <__assert_func>
40086341:	201110        	or	a1, a1, a1
40086344:	027125        	call8	40088a58 <xTaskGetSchedulerState>
40086347:	131a66        	bnei	a10, 1, 4008635e <spi_flash_enable_interrupts_caches_and_other_cpu+0x4a>
4008634a:	049c      	beqz.n	a4, 4008635e <spi_flash_enable_interrupts_caches_and_other_cpu+0x4a>
4008634c:	e93fd1        	l32r	a13, 40080848 <_init_end+0x448>
4008634f:	e93dc1        	l32r	a12, 40080844 <_init_end+0x444>
40086352:	98a0b2        	movi	a11, 152
40086355:	e935a1        	l32r	a10, 4008082c <_init_end+0x42c>
40086358:	201110        	or	a1, a1, a1
4008635b:	54b7e5        	call8	400daed8 <__assert_func>
4008635e:	f87c      	movi.n	a8, -1
40086360:	e93031        	l32r	a3, 40080820 <_init_end+0x420>
40086363:	0020c0        	memw
40086366:	0389      	s32i.n	a8, a3, 0
40086368:	f03d      	nop.n
4008636a:	f03d      	nop.n
4008636c:	f03d      	nop.n
4008636e:	f03d      	nop.n
40086370:	e92931        	l32r	a3, 40080814 <_init_end+0x414>
40086373:	a08430        	addx4	a8, a4, a3
40086376:	08b8      	l32i.n	a11, a8, 0
40086378:	04ad      	mov.n	a10, a4
4008637a:	ffd7e5        	call8	400860f8 <spi_flash_restore_cache>
4008637d:	a03230        	addx4	a3, a2, a3
40086380:	03b8      	l32i.n	a11, a3, 0
40086382:	20a220        	or	a10, a2, a2
40086385:	ffd725        	call8	400860f8 <spi_flash_restore_cache>
40086388:	026ce5        	call8	40088a58 <xTaskGetSchedulerState>
4008638b:	0d1a26        	beqi	a10, 1, 4008639c <spi_flash_enable_interrupts_caches_and_other_cpu+0x88>
4008638e:	130c      	movi.n	a3, 1
40086390:	e91f21        	l32r	a2, 4008080c <_init_end+0x40c>
40086393:	0020c0        	memw
40086396:	004232        	s8i	a3, a2, 0
40086399:	0020c0        	memw
4008639c:	201110        	or	a1, a1, a1
4008639f:	fb0e25        	call8	40081480 <esp_intr_noniram_enable>
400863a2:	201110        	or	a1, a1, a1
400863a5:	026b25        	call8	40088a58 <xTaskGetSchedulerState>
400863a8:	051a26        	beqi	a10, 1, 400863b1 <spi_flash_enable_interrupts_caches_and_other_cpu+0x9d>
400863ab:	201110        	or	a1, a1, a1
400863ae:	031265        	call8	400894d4 <xTaskResumeAll>
400863b1:	6408a5        	call8	400ea43c <spi_flash_op_unlock>
400863b4:	f01d      	retw.n
	...

400863b8 <spi_flash_disable_interrupts_caches_and_other_cpu_no_os>:
400863b8:	004136        	entry	a1, 32
400863bb:	03eb20        	rsr.prid	a2
400863be:	042d20        	extui	a2, a2, 13, 1
400863c1:	00a0a2        	movi	a10, 0
400863c4:	01a082        	movi	a8, 1
400863c7:	83a820        	moveqz	a10, a8, a2
400863ca:	74a0a0        	extui	a10, a10, 0, 8
400863cd:	e91131        	l32r	a3, 40080814 <_init_end+0x414>
400863d0:	a0ba30        	addx4	a11, a10, a3
400863d3:	ffdf25        	call8	400861c4 <spi_flash_disable_cache>
400863d6:	fb0565        	call8	4008142c <esp_intr_noniram_disable>
400863d9:	a0b230        	addx4	a11, a2, a3
400863dc:	20a220        	or	a10, a2, a2
400863df:	ffde65        	call8	400861c4 <spi_flash_disable_cache>
400863e2:	f01d      	retw.n

400863e4 <spi_flash_enable_interrupts_caches_no_os>:
400863e4:	004136        	entry	a1, 32
400863e7:	03eba0        	rsr.prid	a10
400863ea:	04ada0        	extui	a10, a10, 13, 1
400863ed:	e90981        	l32r	a8, 40080814 <_init_end+0x414>
400863f0:	a08a80        	addx4	a8, a10, a8
400863f3:	08b8      	l32i.n	a11, a8, 0
400863f5:	ffd025        	call8	400860f8 <spi_flash_restore_cache>
400863f8:	fb0865        	call8	40081480 <esp_intr_noniram_enable>
400863fb:	f01d      	retw.n
400863fd:	000000        	ill

40086400 <spi_flash_cache_enabled>:
40086400:	004136        	entry	a1, 32
40086403:	e8fea1        	l32r	a10, 400807fc <_init_end+0x3fc>
40086406:	fb5425        	call8	40081948 <esp_dport_access_reg_read>
40086409:	0f6a37        	bbci	a10, 3, 4008641c <spi_flash_cache_enabled+0x1c>
4008640c:	e8fea1        	l32r	a10, 40080804 <_init_end+0x404>
4008640f:	fb53a5        	call8	40081948 <esp_dport_access_reg_read>
40086412:	0a6a37        	bbci	a10, 3, 40086420 <spi_flash_cache_enabled+0x20>
40086415:	01a022        	movi	a2, 1
40086418:	000090        	retw
4008641b:	020c00        	andb	b0, b12, b0
4008641e:	f01d      	retw.n
40086420:	020c      	movi.n	a2, 0
40086422:	f01d      	retw.n

40086424 <spi_flash_translate_rc>:
40086424:	004136        	entry	a1, 32
40086427:	528c      	beqz.n	a2, 40086430 <spi_flash_translate_rc+0xc>
40086429:	0c2226        	beqi	a2, 2, 40086439 <spi_flash_translate_rc+0x15>
4008642c:	000106        	j	40086434 <spi_flash_translate_rc+0x10>
4008642f:	020c00        	andb	b0, b12, b0
40086432:	f01d      	retw.n
40086434:	e90721        	l32r	a2, 40080850 <_init_end+0x450>
40086437:	f01d      	retw.n
40086439:	e90421        	l32r	a2, 4008084c <_init_end+0x44c>
4008643c:	f01d      	retw.n
	...

40086440 <spi_flash_unlock>:
40086440:	004136        	entry	a1, 32
40086443:	e90421        	l32r	a2, 40080854 <_init_end+0x454>
40086446:	000222        	l8ui	a2, a2, 0
40086449:	035256        	bnez	a2, 40086482 <spi_flash_unlock+0x42>
4008644c:	e90321        	l32r	a2, 40080858 <_init_end+0x458>
4008644f:	002222        	l32i	a2, a2, 0
40086452:	006216        	beqz	a2, 4008645c <spi_flash_unlock+0x1c>
40086455:	0228      	l32i.n	a2, a2, 0
40086457:	128c      	beqz.n	a2, 4008645c <spi_flash_unlock+0x1c>
40086459:	0002e0        	callx8	a2
4008645c:	0712e5        	call8	4008d58c <esp_rom_spiflash_unlock>
4008645f:	0a2d      	mov.n	a2, a10
40086461:	e8fd81        	l32r	a8, 40080858 <_init_end+0x458>
40086464:	0888      	l32i.n	a8, a8, 0
40086466:	688c      	beqz.n	a8, 40086470 <spi_flash_unlock+0x30>
40086468:	1888      	l32i.n	a8, a8, 4
4008646a:	002816        	beqz	a8, 40086470 <spi_flash_unlock+0x30>
4008646d:	0008e0        	callx8	a8
40086470:	02dc      	bnez.n	a2, 40086484 <spi_flash_unlock+0x44>
40086472:	180c      	movi.n	a8, 1
40086474:	e8f821        	l32r	a2, 40080854 <_init_end+0x454>
40086477:	004282        	s8i	a8, a2, 0
4008647a:	0020c0        	memw
4008647d:	020c      	movi.n	a2, 0
4008647f:	f01d      	retw.n
40086481:	020c00        	andb	b0, b12, b0
40086484:	f01d      	retw.n
	...

40086488 <spi_flash_write_inner>:
40086488:	004136        	entry	a1, 32
4008648b:	04cd      	mov.n	a12, a4
4008648d:	03bd      	mov.n	a11, a3
4008648f:	02ad      	mov.n	a10, a2
40086491:	0726e5        	call8	4008d700 <esp_rom_spiflash_write>
40086494:	0a2d      	mov.n	a2, a10
40086496:	f01d      	retw.n

40086498 <spi_flash_guard_set>:
40086498:	004136        	entry	a1, 32
4008649b:	e8ef81        	l32r	a8, 40080858 <_init_end+0x458>
4008649e:	0829      	s32i.n	a2, a8, 0
400864a0:	f01d      	retw.n
	...

400864a4 <spi_flash_guard_get>:
400864a4:	004136        	entry	a1, 32
400864a7:	e8ec81        	l32r	a8, 40080858 <_init_end+0x458>
400864aa:	0828      	l32i.n	a2, a8, 0
400864ac:	f01d      	retw.n
	...

400864b0 <spi_flash_get_chip_size>:
400864b0:	004136        	entry	a1, 32
400864b3:	e8c581        	l32r	a8, 400807c8 <_init_end+0x3c8>
400864b6:	1828      	l32i.n	a2, a8, 4
400864b8:	f01d      	retw.n
	...

400864bc <spi_flash_erase_range>:
400864bc:	004136        	entry	a1, 32
400864bf:	e8e681        	l32r	a8, 40080858 <_init_end+0x458>
400864c2:	0888      	l32i.n	a8, a8, 0
400864c4:	c88c      	beqz.n	a8, 400864d4 <spi_flash_erase_range+0x18>
400864c6:	4888      	l32i.n	a8, a8, 16
400864c8:	888c      	beqz.n	a8, 400864d4 <spi_flash_erase_range+0x18>
400864ca:	03bd      	mov.n	a11, a3
400864cc:	02ad      	mov.n	a10, a2
400864ce:	0008e0        	callx8	a8
400864d1:	08ca16        	beqz	a10, 40086561 <spi_flash_erase_range+0xa5>
400864d4:	b48020        	extui	a8, a2, 0, 12
400864d7:	08d856        	bnez	a8, 40086568 <spi_flash_erase_range+0xac>
400864da:	b48030        	extui	a8, a3, 0, 12
400864dd:	08c856        	bnez	a8, 4008656d <spi_flash_erase_range+0xb1>
400864e0:	423a      	add.n	a4, a2, a3
400864e2:	fffce5        	call8	400864b0 <spi_flash_get_chip_size>
400864e5:	02ba47        	bgeu	a10, a4, 400864eb <spi_flash_erase_range+0x2f>
400864e8:	002206        	j	40086574 <spi_flash_erase_range+0xb8>
400864eb:	412c20        	srli	a2, a2, 12
400864ee:	413c30        	srli	a3, a3, 12
400864f1:	323a      	add.n	a3, a2, a3
400864f3:	fff4e5        	call8	40086440 <spi_flash_unlock>
400864f6:	0a5d      	mov.n	a5, a10
400864f8:	048a16        	beqz	a10, 40086544 <spi_flash_erase_range+0x88>
400864fb:	001646        	j	40086558 <spi_flash_erase_range+0x9c>
400864fe:	410000        	srli	a0, a0, 0
40086501:	48e8d6        	bgez	a8, 40086993 <spi_flash_read+0x1d3>
40086504:	648c04        	lsi	f0, a12, 0x190
40086507:	0448      	l32i.n	a4, a4, 0
40086509:	002416        	beqz	a4, 4008650f <spi_flash_erase_range+0x53>
4008650c:	0004e0        	callx8	a4
4008650f:	344020        	extui	a4, a2, 0, 4
40086512:	44dc      	bnez.n	a4, 4008652a <spi_flash_erase_range+0x6e>
40086514:	c04320        	sub	a4, a3, a2
40086517:	f50c      	movi.n	a5, 15
40086519:	0db547        	bgeu	a5, a4, 4008652a <spi_flash_erase_range+0x6e>
4008651c:	41a420        	srli	a10, a2, 4
4008651f:	070fa5        	call8	4008d618 <esp_rom_spiflash_erase_block>
40086522:	0a5d      	mov.n	a5, a10
40086524:	10c222        	addi	a2, a2, 16
40086527:	0002c6        	j	40086536 <spi_flash_erase_range+0x7a>
4008652a:	20a220        	or	a10, a2, a2
4008652d:	0715e5        	call8	4008d68c <esp_rom_spiflash_erase_sector>
40086530:	205aa0        	or	a5, a10, a10
40086533:	01c222        	addi	a2, a2, 1
40086536:	e8c841        	l32r	a4, 40080858 <_init_end+0x458>
40086539:	0448      	l32i.n	a4, a4, 0
4008653b:	548c      	beqz.n	a4, 40086544 <spi_flash_erase_range+0x88>
4008653d:	1448      	l32i.n	a4, a4, 4
4008653f:	148c      	beqz.n	a4, 40086544 <spi_flash_erase_range+0x88>
40086541:	0004e0        	callx8	a4
40086544:	c04230        	sub	a4, a2, a3
40086547:	180c      	movi.n	a8, 1
40086549:	090c      	movi.n	a9, 0
4008654b:	096d      	mov.n	a6, a9
4008654d:	936840        	movnez	a6, a8, a4
40086550:	064d      	mov.n	a4, a6
40086552:	938950        	movnez	a8, a9, a5
40086555:	a78867        	bany	a8, a6, 40086500 <spi_flash_erase_range+0x44>
40086558:	05ad      	mov.n	a10, a5
4008655a:	ffeca5        	call8	40086424 <spi_flash_translate_rc>
4008655d:	0a2d      	mov.n	a2, a10
4008655f:	f01d      	retw.n
40086561:	02a122        	movi	a2, 0x102
40086564:	f01d      	retw.n
40086566:	220000        	orb	b0, b0, b0
40086569:	1d02a1        	l32r	a10, 4004d974 <r_llm_init+0xf7c>
4008656c:	a122f0        	lsi	f15, a2, 0x284
4008656f:	f01d04        	lsi	f0, a13, 0x3c0
40086572:	220000        	orb	b0, b0, b0
40086575:	1d04a1        	l32r	a10, 4004d988 <r_llm_init+0xf90>
40086578:	0000f0        	callx12	a0
	...

4008657c <spi_flash_erase_sector>:
4008657c:	004136        	entry	a1, 32
4008657f:	e8b681        	l32r	a8, 40080858 <_init_end+0x458>
40086582:	0888      	l32i.n	a8, a8, 0
40086584:	010816        	beqz	a8, 40086598 <spi_flash_erase_sector+0x1c>
40086587:	042882        	l32i	a8, a8, 16
4008658a:	00a816        	beqz	a8, 40086598 <spi_flash_erase_sector+0x1c>
4008658d:	e866b1        	l32r	a11, 40080728 <_init_end+0x328>
40086590:	11a240        	slli	a10, a2, 12
40086593:	0008e0        	callx8	a8
40086596:	ba8c      	beqz.n	a10, 400865a5 <spi_flash_erase_sector+0x29>
40086598:	e864b1        	l32r	a11, 40080728 <_init_end+0x328>
4008659b:	11a240        	slli	a10, a2, 12
4008659e:	fff1e5        	call8	400864bc <spi_flash_erase_range>
400865a1:	0a2d      	mov.n	a2, a10
400865a3:	f01d      	retw.n
400865a5:	02a122        	movi	a2, 0x102
400865a8:	f01d      	retw.n
	...

400865ac <spi_flash_write>:
400865ac:	00a136        	entry	a1, 80
400865af:	e8aa51        	l32r	a5, 40080858 <_init_end+0x458>
400865b2:	0558      	l32i.n	a5, a5, 0
400865b4:	c58c      	beqz.n	a5, 400865c4 <spi_flash_write+0x18>
400865b6:	4558      	l32i.n	a5, a5, 16
400865b8:	858c      	beqz.n	a5, 400865c4 <spi_flash_write+0x18>
400865ba:	04bd      	mov.n	a11, a4
400865bc:	02ad      	mov.n	a10, a2
400865be:	0005e0        	callx8	a5
400865c1:	1e8a16        	beqz	a10, 400867ad <spi_flash_write+0x201>
400865c4:	524a      	add.n	a5, a2, a4
400865c6:	e88061        	l32r	a6, 400807c8 <_init_end+0x3c8>
400865c9:	1668      	l32i.n	a6, a6, 4
400865cb:	02b657        	bgeu	a6, a5, 400865d1 <spi_flash_write+0x25>
400865ce:	007886        	j	400867b4 <spi_flash_write+0x208>
400865d1:	1e4416        	beqz	a4, 400867b9 <spi_flash_write+0x20d>
400865d4:	c67c      	movi.n	a6, -4
400865d6:	105260        	and	a5, a2, a6
400865d9:	0159      	s32i.n	a5, a1, 0
400865db:	523b      	addi.n	a5, a2, 3
400865dd:	105560        	and	a5, a5, a6
400865e0:	c05520        	sub	a5, a5, a2
400865e3:	635450        	minu	a5, a4, a5
400865e6:	c07450        	sub	a7, a4, a5
400865e9:	106760        	and	a6, a7, a6
400865ec:	856a      	add.n	a8, a5, a6
400865ee:	3189      	s32i.n	a8, a1, 12
400865f0:	c07460        	sub	a7, a4, a6
400865f3:	c09750        	sub	a9, a7, a5
400865f6:	026192        	s32i	a9, a1, 8
400865f9:	ffe465        	call8	40086440 <spi_flash_unlock>
400865fc:	0a7d      	mov.n	a7, a10
400865fe:	17da56        	bnez	a10, 4008677f <spi_flash_write+0x1d3>
40086601:	04b516        	beqz	a5, 40086650 <spi_flash_write+0xa4>
40086604:	f77c      	movi.n	a7, -1
40086606:	4179      	s32i.n	a7, a1, 16
40086608:	f03d      	nop.n
4008660a:	f03d      	nop.n
4008660c:	f03d      	nop.n
4008660e:	f03d      	nop.n
40086610:	0188      	l32i.n	a8, a1, 0
40086612:	c0a280        	sub	a10, a2, a8
40086615:	05cd      	mov.n	a12, a5
40086617:	03bd      	mov.n	a11, a3
40086619:	10c192        	addi	a9, a1, 16
4008661c:	a9aa      	add.n	a10, a9, a10
4008661e:	e84981        	l32r	a8, 40080744 <_init_end+0x344>
40086621:	0008e0        	callx8	a8
40086624:	e88d71        	l32r	a7, 40080858 <_init_end+0x458>
40086627:	0778      	l32i.n	a7, a7, 0
40086629:	578c      	beqz.n	a7, 40086632 <spi_flash_write+0x86>
4008662b:	0778      	l32i.n	a7, a7, 0
4008662d:	178c      	beqz.n	a7, 40086632 <spi_flash_write+0x86>
4008662f:	0007e0        	callx8	a7
40086632:	4c0c      	movi.n	a12, 4
40086634:	10c1b2        	addi	a11, a1, 16
40086637:	01a8      	l32i.n	a10, a1, 0
40086639:	ffe4e5        	call8	40086488 <spi_flash_write_inner>
4008663c:	0a7d      	mov.n	a7, a10
4008663e:	e88681        	l32r	a8, 40080858 <_init_end+0x458>
40086641:	0888      	l32i.n	a8, a8, 0
40086643:	688c      	beqz.n	a8, 4008664d <spi_flash_write+0xa1>
40086645:	1888      	l32i.n	a8, a8, 4
40086647:	002816        	beqz	a8, 4008664d <spi_flash_write+0xa1>
4008664a:	0008e0        	callx8	a8
4008664d:	12e756        	bnez	a7, 4008677f <spi_flash_write+0x1d3>
40086650:	0e0616        	beqz	a6, 40086734 <spi_flash_write+0x188>
40086653:	e85981        	l32r	a8, 400807b8 <_init_end+0x3b8>
40086656:	808380        	add	a8, a3, a8
40086659:	01a092        	movi	a9, 1
4008665c:	e858a1        	l32r	a10, 400807bc <_init_end+0x3bc>
4008665f:	02ba87        	bgeu	a10, a8, 40086665 <spi_flash_write+0xb9>
40086662:	00a092        	movi	a9, 0
40086665:	749090        	extui	a9, a9, 0, 8
40086668:	e856b1        	l32r	a11, 400807c0 <_init_end+0x3c0>
4008666b:	b3ba      	add.n	a11, a3, a11
4008666d:	01a0a2        	movi	a10, 1
40086670:	e855c1        	l32r	a12, 400807c4 <_init_end+0x3c4>
40086673:	02bcb7        	bgeu	a12, a11, 40086679 <spi_flash_write+0xcd>
40086676:	00a0a2        	movi	a10, 0
40086679:	74a0a0        	extui	a10, a10, 0, 8
4008667c:	09cc      	bnez.n	a9, 40086680 <spi_flash_write+0xd4>
4008667e:	2abc      	beqz.n	a10, 400866b4 <spi_flash_write+0x108>
40086680:	01a092        	movi	a9, 1
40086683:	e876a1        	l32r	a10, 4008085c <_init_end+0x45c>
40086686:	02ba87        	bgeu	a10, a8, 4008668c <spi_flash_write+0xe0>
40086689:	00a092        	movi	a9, 0
4008668c:	749090        	extui	a9, a9, 0, 8
4008668f:	e874a1        	l32r	a10, 40080860 <_init_end+0x460>
40086692:	80a3a0        	add	a10, a3, a10
40086695:	01a082        	movi	a8, 1
40086698:	e873b1        	l32r	a11, 40080864 <_init_end+0x464>
4008669b:	02bba7        	bgeu	a11, a10, 400866a1 <spi_flash_write+0xf5>
4008669e:	00a082        	movi	a8, 0
400866a1:	748080        	extui	a8, a8, 0, 8
400866a4:	09cc      	bnez.n	a9, 400866a8 <spi_flash_write+0xfc>
400866a6:	f88c      	beqz.n	a8, 400866b9 <spi_flash_write+0x10d>
400866a8:	835a      	add.n	a8, a3, a5
400866aa:	148080        	extui	a8, a8, 0, 2
400866ad:	d8cc      	bnez.n	a8, 400866be <spi_flash_write+0x112>
400866af:	180c      	movi.n	a8, 1
400866b1:	0002c6        	j	400866c0 <spi_flash_write+0x114>
400866b4:	080c      	movi.n	a8, 0
400866b6:	000186        	j	400866c0 <spi_flash_write+0x114>
400866b9:	080c      	movi.n	a8, 0
400866bb:	000046        	j	400866c0 <spi_flash_write+0x114>
400866be:	080c      	movi.n	a8, 0
400866c0:	1189      	s32i.n	a8, a1, 4
400866c2:	001706        	j	40086722 <spi_flash_write+0x176>
400866c5:	e86871        	l32r	a7, 40080868 <_init_end+0x468>
400866c8:	638670        	minu	a8, a6, a7
400866cb:	0189      	s32i.n	a8, a1, 0
400866cd:	735a      	add.n	a7, a3, a5
400866cf:	f03d      	nop.n
400866d1:	f03d      	nop.n
400866d3:	f03d      	nop.n
400866d5:	1198      	l32i.n	a9, a1, 4
400866d7:	89dc      	bnez.n	a9, 400866f3 <spi_flash_write+0x147>
400866d9:	082c      	movi.n	a8, 32
400866db:	0198      	l32i.n	a9, a1, 0
400866dd:	639980        	minu	a9, a9, a8
400866e0:	0199      	s32i.n	a9, a1, 0
400866e2:	09cd      	mov.n	a12, a9
400866e4:	20b770        	or	a11, a7, a7
400866e7:	10c1a2        	addi	a10, a1, 16
400866ea:	e81681        	l32r	a8, 40080744 <_init_end+0x344>
400866ed:	0008e0        	callx8	a8
400866f0:	10c172        	addi	a7, a1, 16
400866f3:	e85981        	l32r	a8, 40080858 <_init_end+0x458>
400866f6:	0888      	l32i.n	a8, a8, 0
400866f8:	588c      	beqz.n	a8, 40086701 <spi_flash_write+0x155>
400866fa:	0888      	l32i.n	a8, a8, 0
400866fc:	188c      	beqz.n	a8, 40086701 <spi_flash_write+0x155>
400866fe:	0008e0        	callx8	a8
40086701:	01c8      	l32i.n	a12, a1, 0
40086703:	07bd      	mov.n	a11, a7
40086705:	80a520        	add	a10, a5, a2
40086708:	ffd7e5        	call8	40086488 <spi_flash_write_inner>
4008670b:	0a7d      	mov.n	a7, a10
4008670d:	e85281        	l32r	a8, 40080858 <_init_end+0x458>
40086710:	0888      	l32i.n	a8, a8, 0
40086712:	588c      	beqz.n	a8, 4008671b <spi_flash_write+0x16f>
40086714:	1888      	l32i.n	a8, a8, 4
40086716:	188c      	beqz.n	a8, 4008671b <spi_flash_write+0x16f>
40086718:	0008e0        	callx8	a8
4008671b:	0188      	l32i.n	a8, a1, 0
4008671d:	c06680        	sub	a6, a6, a8
40086720:	558a      	add.n	a5, a5, a8
40086722:	180c      	movi.n	a8, 1
40086724:	090c      	movi.n	a9, 0
40086726:	09ad      	mov.n	a10, a9
40086728:	93a860        	movnez	a10, a8, a6
4008672b:	938970        	movnez	a8, a9, a7
4008672e:	9388a7        	bany	a8, a10, 400866c5 <spi_flash_write+0x119>
40086731:	4a9797        	bne	a7, a9, 4008677f <spi_flash_write+0x1d3>
40086734:	2158      	l32i.n	a5, a1, 8
40086736:	045516        	beqz	a5, 4008677f <spi_flash_write+0x1d3>
40086739:	f57c      	movi.n	a5, -1
4008673b:	4159      	s32i.n	a5, a1, 16
4008673d:	f03d      	nop.n
4008673f:	f03d      	nop.n
40086741:	f03d      	nop.n
40086743:	f03d      	nop.n
40086745:	21c8      	l32i.n	a12, a1, 8
40086747:	3158      	l32i.n	a5, a1, 12
40086749:	b35a      	add.n	a11, a3, a5
4008674b:	10c1a2        	addi	a10, a1, 16
4008674e:	e7fd81        	l32r	a8, 40080744 <_init_end+0x344>
40086751:	0008e0        	callx8	a8
40086754:	e84131        	l32r	a3, 40080858 <_init_end+0x458>
40086757:	0338      	l32i.n	a3, a3, 0
40086759:	638c      	beqz.n	a3, 40086763 <spi_flash_write+0x1b7>
4008675b:	0338      	l32i.n	a3, a3, 0
4008675d:	002316        	beqz	a3, 40086763 <spi_flash_write+0x1b7>
40086760:	0003e0        	callx8	a3
40086763:	4c0c      	movi.n	a12, 4
40086765:	10c1b2        	addi	a11, a1, 16
40086768:	3138      	l32i.n	a3, a1, 12
4008676a:	a23a      	add.n	a10, a2, a3
4008676c:	ffd1a5        	call8	40086488 <spi_flash_write_inner>
4008676f:	0a7d      	mov.n	a7, a10
40086771:	e83931        	l32r	a3, 40080858 <_init_end+0x458>
40086774:	0338      	l32i.n	a3, a3, 0
40086776:	538c      	beqz.n	a3, 4008677f <spi_flash_write+0x1d3>
40086778:	1338      	l32i.n	a3, a3, 4
4008677a:	138c      	beqz.n	a3, 4008677f <spi_flash_write+0x1d3>
4008677c:	0003e0        	callx8	a3
4008677f:	e83631        	l32r	a3, 40080858 <_init_end+0x458>
40086782:	0338      	l32i.n	a3, a3, 0
40086784:	538c      	beqz.n	a3, 4008678d <spi_flash_write+0x1e1>
40086786:	2338      	l32i.n	a3, a3, 8
40086788:	138c      	beqz.n	a3, 4008678d <spi_flash_write+0x1e1>
4008678a:	0003e0        	callx8	a3
4008678d:	04bd      	mov.n	a11, a4
4008678f:	20a220        	or	a10, a2, a2
40086792:	ff89e5        	call8	40086030 <spi_flash_mark_modified_region>
40086795:	e83021        	l32r	a2, 40080858 <_init_end+0x458>
40086798:	0228      	l32i.n	a2, a2, 0
4008679a:	628c      	beqz.n	a2, 400867a4 <spi_flash_write+0x1f8>
4008679c:	3228      	l32i.n	a2, a2, 12
4008679e:	002216        	beqz	a2, 400867a4 <spi_flash_write+0x1f8>
400867a1:	0002e0        	callx8	a2
400867a4:	07ad      	mov.n	a10, a7
400867a6:	ffc7e5        	call8	40086424 <spi_flash_translate_rc>
400867a9:	0a2d      	mov.n	a2, a10
400867ab:	f01d      	retw.n
400867ad:	02a122        	movi	a2, 0x102
400867b0:	f01d      	retw.n
400867b2:	220000        	orb	b0, b0, b0
400867b5:	1d04a1        	l32r	a10, 4004dbc8 <r_llm_init+0x11d0>
400867b8:	020cf0        	andb	b0, b12, b15
400867bb:	f01d      	retw.n
400867bd:	000000        	ill

400867c0 <spi_flash_read>:
400867c0:	00e136        	entry	a1, 112
400867c3:	524a      	add.n	a5, a2, a4
400867c5:	e80061        	l32r	a6, 400807c8 <_init_end+0x3c8>
400867c8:	1668      	l32i.n	a6, a6, 4
400867ca:	02b657        	bgeu	a6, a5, 400867d0 <spi_flash_read+0x10>
400867cd:	00b506        	j	40086aa5 <spi_flash_read+0x2e5>
400867d0:	2d6416        	beqz	a4, 40086aaa <spi_flash_read+0x2ea>
400867d3:	e82151        	l32r	a5, 40080858 <_init_end+0x458>
400867d6:	0558      	l32i.n	a5, a5, 0
400867d8:	558c      	beqz.n	a5, 400867e1 <spi_flash_read+0x21>
400867da:	0558      	l32i.n	a5, a5, 0
400867dc:	158c      	beqz.n	a5, 400867e1 <spi_flash_read+0x21>
400867de:	0005e0        	callx8	a5
400867e1:	f50c      	movi.n	a5, 15
400867e3:	2d3547        	bltu	a5, a4, 40086814 <spi_flash_read+0x54>
400867e6:	ca7c      	movi.n	a10, -4
400867e8:	145020        	extui	a5, a2, 0, 2
400867eb:	c45a      	add.n	a12, a4, a5
400867ed:	cc3b      	addi.n	a12, a12, 3
400867ef:	10cca0        	and	a12, a12, a10
400867f2:	30c1b2        	addi	a11, a1, 48
400867f5:	10a2a0        	and	a10, a2, a10
400867f8:	070365        	call8	4008d830 <esp_rom_spiflash_read>
400867fb:	0a7d      	mov.n	a7, a10
400867fd:	28ca56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
40086800:	04cd      	mov.n	a12, a4
40086802:	30c122        	addi	a2, a1, 48
40086805:	b25a      	add.n	a11, a2, a5
40086807:	20a330        	or	a10, a3, a3
4008680a:	e7ce81        	l32r	a8, 40080744 <_init_end+0x344>
4008680d:	0008e0        	callx8	a8
40086810:	009e46        	j	40086a8d <spi_flash_read+0x2cd>
40086813:	502000        	lsi	f0, a0, 0x140
40086816:	958c14        	lsi	f1, a12, 0x254
40086819:	460c      	movi.n	a6, 4
4008681b:	c06650        	sub	a6, a6, a5
4008681e:	6169      	s32i.n	a6, a1, 24
40086820:	000106        	j	40086828 <spi_flash_read+0x68>
40086823:	050c00        	extui	a0, a0, 28, 1
40086826:	6159      	s32i.n	a5, a1, 24
40086828:	145030        	extui	a5, a3, 0, 2
4008682b:	759c      	beqz.n	a5, 40086846 <spi_flash_read+0x86>
4008682d:	315f30        	srai	a5, a3, 31
40086830:	156e50        	extui	a6, a5, 30, 2
40086833:	536a      	add.n	a5, a3, a6
40086835:	145050        	extui	a5, a5, 0, 2
40086838:	c05560        	sub	a5, a5, a6
4008683b:	460c      	movi.n	a6, 4
4008683d:	c06650        	sub	a6, a6, a5
40086840:	4169      	s32i.n	a6, a1, 16
40086842:	000106        	j	4008684a <spi_flash_read+0x8a>
40086845:	060c00        	lsi	f0, a12, 24
40086848:	4169      	s32i.n	a6, a1, 16
4008684a:	f03d      	nop.n
4008684c:	f03d      	nop.n
4008684e:	f03d      	nop.n
40086850:	f03d      	nop.n
40086852:	6158      	l32i.n	a5, a1, 24
40086854:	4188      	l32i.n	a8, a1, 16
40086856:	736580        	maxu	a6, a5, a8
40086859:	c06460        	sub	a6, a4, a6
4008685c:	c57c      	movi.n	a5, -4
4008685e:	106650        	and	a6, a6, a5
40086861:	7169      	s32i.n	a6, a1, 28
40086863:	106250        	and	a6, a2, a5
40086866:	b169      	s32i.n	a6, a1, 44
40086868:	f03d      	nop.n
4008686a:	f03d      	nop.n
4008686c:	f03d      	nop.n
4008686e:	f03d      	nop.n
40086870:	6168      	l32i.n	a6, a1, 24
40086872:	662a      	add.n	a6, a6, a2
40086874:	5169      	s32i.n	a6, a1, 20
40086876:	f03d      	nop.n
40086878:	f03d      	nop.n
4008687a:	f03d      	nop.n
4008687c:	f03d      	nop.n
4008687e:	7188      	l32i.n	a8, a1, 28
40086880:	686a      	add.n	a6, a8, a6
40086882:	105650        	and	a5, a6, a5
40086885:	8159      	s32i.n	a5, a1, 32
40086887:	c02520        	sub	a2, a5, a2
4008688a:	9129      	s32i.n	a2, a1, 36
4008688c:	c04420        	sub	a4, a4, a2
4008688f:	a149      	s32i.n	a4, a1, 40
40086891:	f03d      	nop.n
40086893:	f03d      	nop.n
40086895:	f03d      	nop.n
40086897:	f03d      	nop.n
40086899:	e7c741        	l32r	a4, 400807b8 <_init_end+0x3b8>
4008689c:	434a      	add.n	a4, a3, a4
4008689e:	120c      	movi.n	a2, 1
400868a0:	e7c751        	l32r	a5, 400807bc <_init_end+0x3bc>
400868a3:	02b547        	bgeu	a5, a4, 400868a9 <spi_flash_read+0xe9>
400868a6:	00a022        	movi	a2, 0
400868a9:	742020        	extui	a2, a2, 0, 8
400868ac:	e7c561        	l32r	a6, 400807c0 <_init_end+0x3c0>
400868af:	636a      	add.n	a6, a3, a6
400868b1:	01a052        	movi	a5, 1
400868b4:	e7c471        	l32r	a7, 400807c4 <_init_end+0x3c4>
400868b7:	02b767        	bgeu	a7, a6, 400868bd <spi_flash_read+0xfd>
400868ba:	00a052        	movi	a5, 0
400868bd:	745050        	extui	a5, a5, 0, 8
400868c0:	001256        	bnez	a2, 400868c5 <spi_flash_read+0x105>
400868c3:	35bc      	beqz.n	a5, 400868fa <spi_flash_read+0x13a>
400868c5:	01a022        	movi	a2, 1
400868c8:	e7e551        	l32r	a5, 4008085c <_init_end+0x45c>
400868cb:	02b547        	bgeu	a5, a4, 400868d1 <spi_flash_read+0x111>
400868ce:	00a022        	movi	a2, 0
400868d1:	742020        	extui	a2, a2, 0, 8
400868d4:	e7e351        	l32r	a5, 40080860 <_init_end+0x460>
400868d7:	535a      	add.n	a5, a3, a5
400868d9:	140c      	movi.n	a4, 1
400868db:	e7e261        	l32r	a6, 40080864 <_init_end+0x464>
400868de:	02b657        	bgeu	a6, a5, 400868e4 <spi_flash_read+0x124>
400868e1:	00a042        	movi	a4, 0
400868e4:	744040        	extui	a4, a4, 0, 8
400868e7:	001256        	bnez	a2, 400868ec <spi_flash_read+0x12c>
400868ea:	249c      	beqz.n	a4, 40086900 <spi_flash_read+0x140>
400868ec:	4148      	l32i.n	a4, a1, 16
400868ee:	234a      	add.n	a2, a3, a4
400868f0:	142020        	extui	a2, a2, 0, 2
400868f3:	e2cc      	bnez.n	a2, 40086905 <spi_flash_read+0x145>
400868f5:	120c      	movi.n	a2, 1
400868f7:	000306        	j	40086907 <spi_flash_read+0x147>
400868fa:	020c      	movi.n	a2, 0
400868fc:	0001c6        	j	40086907 <spi_flash_read+0x147>
400868ff:	020c00        	andb	b0, b12, b0
40086902:	000046        	j	40086907 <spi_flash_read+0x147>
40086905:	020c      	movi.n	a2, 0
40086907:	3129      	s32i.n	a2, a1, 12
40086909:	f03d      	nop.n
4008690b:	f03d      	nop.n
4008690d:	f03d      	nop.n
4008690f:	f03d      	nop.n
40086911:	7158      	l32i.n	a5, a1, 28
40086913:	08f556        	bnez	a5, 400869a6 <spi_flash_read+0x1e6>
40086916:	070c      	movi.n	a7, 0
40086918:	003386        	j	400869ea <spi_flash_read+0x22a>
4008691b:	d42100        	extui	a2, a0, 1, 14
4008691e:	2420e7        	blt	a0, a14, 40086946 <spi_flash_read+0x186>
40086921:	418863        	lsip	f6, a8, 0x104
40086924:	658a      	add.n	a6, a5, a8
40086926:	636a      	add.n	a6, a3, a6
40086928:	3198      	l32i.n	a9, a1, 12
4008692a:	a9cc      	bnez.n	a9, 40086938 <spi_flash_read+0x178>
4008692c:	072c      	movi.n	a7, 32
4008692e:	632270        	minu	a2, a2, a7
40086931:	30c1b2        	addi	a11, a1, 48
40086934:	000086        	j	4008693a <spi_flash_read+0x17a>
40086937:	06bd00        	lsi	f0, a13, 24
4008693a:	02cd      	mov.n	a12, a2
4008693c:	5188      	l32i.n	a8, a1, 20
4008693e:	a58a      	add.n	a10, a5, a8
40086940:	06eee5        	call8	4008d830 <esp_rom_spiflash_read>
40086943:	0a7d      	mov.n	a7, a10
40086945:	144a56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
40086948:	c04420        	sub	a4, a4, a2
4008694b:	552a      	add.n	a5, a5, a2
4008694d:	3198      	l32i.n	a9, a1, 12
4008694f:	d9ec      	bnez.n	a9, 40086980 <spi_flash_read+0x1c0>
40086951:	e7c181        	l32r	a8, 40080858 <_init_end+0x458>
40086954:	0888      	l32i.n	a8, a8, 0
40086956:	688c      	beqz.n	a8, 40086960 <spi_flash_read+0x1a0>
40086958:	1888      	l32i.n	a8, a8, 4
4008695a:	002816        	beqz	a8, 40086960 <spi_flash_read+0x1a0>
4008695d:	0008e0        	callx8	a8
40086960:	02cd      	mov.n	a12, a2
40086962:	30c1b2        	addi	a11, a1, 48
40086965:	06ad      	mov.n	a10, a6
40086967:	e77781        	l32r	a8, 40080744 <_init_end+0x344>
4008696a:	0008e0        	callx8	a8
4008696d:	e7ba21        	l32r	a2, 40080858 <_init_end+0x458>
40086970:	0228      	l32i.n	a2, a2, 0
40086972:	62bc      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086974:	002222        	l32i	a2, a2, 0
40086977:	12bc      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086979:	0002e0        	callx8	a2
4008697c:	000b06        	j	400869ac <spi_flash_read+0x1ec>
4008697f:	84ac00        	extui	a10, a0, 12, 9
40086982:	e7b521        	l32r	a2, 40080858 <_init_end+0x458>
40086985:	0228      	l32i.n	a2, a2, 0
40086987:	528c      	beqz.n	a2, 40086990 <spi_flash_read+0x1d0>
40086989:	1228      	l32i.n	a2, a2, 4
4008698b:	128c      	beqz.n	a2, 40086990 <spi_flash_read+0x1d0>
4008698d:	0002e0        	callx8	a2
40086990:	e7b221        	l32r	a2, 40080858 <_init_end+0x458>
40086993:	0228      	l32i.n	a2, a2, 0
40086995:	329c      	beqz.n	a2, 400869ac <spi_flash_read+0x1ec>
40086997:	002222        	l32i	a2, a2, 0
4008699a:	00e216        	beqz	a2, 400869ac <spi_flash_read+0x1ec>
4008699d:	0002e0        	callx8	a2
400869a0:	000206        	j	400869ac <spi_flash_read+0x1ec>
400869a3:	000000        	ill
400869a6:	7148      	l32i.n	a4, a1, 28
400869a8:	050c      	movi.n	a5, 0
400869aa:	057d      	mov.n	a7, a5
400869ac:	f6c456        	bnez	a4, 4008691c <spi_flash_read+0x15c>
400869af:	6128      	l32i.n	a2, a1, 24
400869b1:	4148      	l32i.n	a4, a1, 16
400869b3:	331247        	beq	a2, a4, 400869ea <spi_flash_read+0x22a>
400869b6:	3158      	l32i.n	a5, a1, 12
400869b8:	c5cc      	bnez.n	a5, 400869c8 <spi_flash_read+0x208>
400869ba:	e7a721        	l32r	a2, 40080858 <_init_end+0x458>
400869bd:	0228      	l32i.n	a2, a2, 0
400869bf:	528c      	beqz.n	a2, 400869c8 <spi_flash_read+0x208>
400869c1:	1228      	l32i.n	a2, a2, 4
400869c3:	128c      	beqz.n	a2, 400869c8 <spi_flash_read+0x208>
400869c5:	0002e0        	callx8	a2
400869c8:	71c8      	l32i.n	a12, a1, 28
400869ca:	4168      	l32i.n	a6, a1, 16
400869cc:	b36a      	add.n	a11, a3, a6
400869ce:	6128      	l32i.n	a2, a1, 24
400869d0:	a32a      	add.n	a10, a3, a2
400869d2:	e7a781        	l32r	a8, 40080870 <_init_end+0x470>
400869d5:	0008e0        	callx8	a8
400869d8:	3148      	l32i.n	a4, a1, 12
400869da:	c4cc      	bnez.n	a4, 400869ea <spi_flash_read+0x22a>
400869dc:	e79f21        	l32r	a2, 40080858 <_init_end+0x458>
400869df:	0228      	l32i.n	a2, a2, 0
400869e1:	528c      	beqz.n	a2, 400869ea <spi_flash_read+0x22a>
400869e3:	0228      	l32i.n	a2, a2, 0
400869e5:	128c      	beqz.n	a2, 400869ea <spi_flash_read+0x22a>
400869e7:	0002e0        	callx8	a2
400869ea:	6158      	l32i.n	a5, a1, 24
400869ec:	04a516        	beqz	a5, 40086a3a <spi_flash_read+0x27a>
400869ef:	4c0c      	movi.n	a12, 4
400869f1:	30c1b2        	addi	a11, a1, 48
400869f4:	0b21a2        	l32i	a10, a1, 44
400869f7:	06e3a5        	call8	4008d830 <esp_rom_spiflash_read>
400869fa:	0a7d      	mov.n	a7, a10
400869fc:	08da56        	bnez	a10, 40086a8d <spi_flash_read+0x2cd>
400869ff:	3168      	l32i.n	a6, a1, 12
40086a01:	d6cc      	bnez.n	a6, 40086a12 <spi_flash_read+0x252>
40086a03:	e79521        	l32r	a2, 40080858 <_init_end+0x458>
40086a06:	0228      	l32i.n	a2, a2, 0
40086a08:	628c      	beqz.n	a2, 40086a12 <spi_flash_read+0x252>
40086a0a:	1228      	l32i.n	a2, a2, 4
40086a0c:	002216        	beqz	a2, 40086a12 <spi_flash_read+0x252>
40086a0f:	0002e0        	callx8	a2
40086a12:	4b0c      	movi.n	a11, 4
40086a14:	6128      	l32i.n	a2, a1, 24
40086a16:	c0bb20        	sub	a11, a11, a2
40086a19:	02cd      	mov.n	a12, a2
40086a1b:	30c142        	addi	a4, a1, 48
40086a1e:	b4ba      	add.n	a11, a4, a11
40086a20:	03ad      	mov.n	a10, a3
40086a22:	e74881        	l32r	a8, 40080744 <_init_end+0x344>
40086a25:	0008e0        	callx8	a8
40086a28:	3158      	l32i.n	a5, a1, 12
40086a2a:	c5cc      	bnez.n	a5, 40086a3a <spi_flash_read+0x27a>
40086a2c:	e78b21        	l32r	a2, 40080858 <_init_end+0x458>
40086a2f:	0228      	l32i.n	a2, a2, 0
40086a31:	528c      	beqz.n	a2, 40086a3a <spi_flash_read+0x27a>
40086a33:	0228      	l32i.n	a2, a2, 0
40086a35:	128c      	beqz.n	a2, 40086a3a <spi_flash_read+0x27a>
40086a37:	0002e0        	callx8	a2
40086a3a:	a168      	l32i.n	a6, a1, 40
40086a3c:	04d616        	beqz	a6, 40086a8d <spi_flash_read+0x2cd>
40086a3f:	0656f6        	bgeui	a6, 5, 40086a49 <spi_flash_read+0x289>
40086a42:	4c0c      	movi.n	a12, 4
40086a44:	0000c6        	j	40086a4b <spi_flash_read+0x28b>
40086a47:	0c0000        	lsi	f0, a0, 48
40086a4a:	b28c      	beqz.n	a2, 40086a59 <spi_flash_read+0x299>
40086a4c:	a830c1        	l32r	a12, 40070b0c <__udivmoddi4+0xbf18>
40086a4f:	dde581        	l32r	a8, 4007e1e4 <__udivmoddi4+0x195f0>
40086a52:	0a7d06        	j	4008944a <xTaskIncrementTick+0x12a>
40086a55:	4afc      	bnez.n	a10, 40086a8d <spi_flash_read+0x2cd>
40086a57:	3128      	l32i.n	a2, a1, 12
40086a59:	d2cc      	bnez.n	a2, 40086a6a <spi_flash_read+0x2aa>
40086a5b:	e77f21        	l32r	a2, 40080858 <_init_end+0x458>
40086a5e:	0228      	l32i.n	a2, a2, 0
40086a60:	628c      	beqz.n	a2, 40086a6a <spi_flash_read+0x2aa>
40086a62:	1228      	l32i.n	a2, a2, 4
40086a64:	002216        	beqz	a2, 40086a6a <spi_flash_read+0x2aa>
40086a67:	0002e0        	callx8	a2
40086a6a:	a1c8      	l32i.n	a12, a1, 40
40086a6c:	30c1b2        	addi	a11, a1, 48
40086a6f:	9148      	l32i.n	a4, a1, 36
40086a71:	80a340        	add	a10, a3, a4
40086a74:	e73481        	l32r	a8, 40080744 <_init_end+0x344>
40086a77:	0008e0        	callx8	a8
40086a7a:	3158      	l32i.n	a5, a1, 12
40086a7c:	d5cc      	bnez.n	a5, 40086a8d <spi_flash_read+0x2cd>
40086a7e:	e77621        	l32r	a2, 40080858 <_init_end+0x458>
40086a81:	0228      	l32i.n	a2, a2, 0
40086a83:	628c      	beqz.n	a2, 40086a8d <spi_flash_read+0x2cd>
40086a85:	0228      	l32i.n	a2, a2, 0
40086a87:	002216        	beqz	a2, 40086a8d <spi_flash_read+0x2cd>
40086a8a:	0002e0        	callx8	a2
40086a8d:	e77221        	l32r	a2, 40080858 <_init_end+0x458>
40086a90:	0228      	l32i.n	a2, a2, 0
40086a92:	628c      	beqz.n	a2, 40086a9c <spi_flash_read+0x2dc>
40086a94:	1228      	l32i.n	a2, a2, 4
40086a96:	002216        	beqz	a2, 40086a9c <spi_flash_read+0x2dc>
40086a99:	0002e0        	callx8	a2
40086a9c:	07ad      	mov.n	a10, a7
40086a9e:	ff9865        	call8	40086424 <spi_flash_translate_rc>
40086aa1:	0a2d      	mov.n	a2, a10
40086aa3:	f01d      	retw.n
40086aa5:	04a122        	movi	a2, 0x104
40086aa8:	f01d      	retw.n
40086aaa:	020c      	movi.n	a2, 0
40086aac:	f01d      	retw.n
	...

40086ab0 <spi_flash_read_encrypted>:
40086ab0:	006136        	entry	a1, 48
40086ab3:	805240        	add	a5, a2, a4
40086ab6:	e74481        	l32r	a8, 400807c8 <_init_end+0x3c8>
40086ab9:	012882        	l32i	a8, a8, 4
40086abc:	2e3857        	bltu	a8, a5, 40086aee <spi_flash_read_encrypted+0x3e>
40086abf:	14bc      	beqz.n	a4, 40086af4 <spi_flash_read_encrypted+0x44>
40086ac1:	e739a1        	l32r	a10, 400807a8 <_init_end+0x3a8>
40086ac4:	10a2a0        	and	a10, a2, a10
40086ac7:	c052a0        	sub	a5, a2, a10
40086aca:	e1cb      	addi.n	a14, a1, 12
40086acc:	d18b      	addi.n	a13, a1, 8
40086ace:	0c0c      	movi.n	a12, 0
40086ad0:	b45a      	add.n	a11, a4, a5
40086ad2:	ff3ca5        	call8	40085e9c <spi_flash_mmap>
40086ad5:	0a2d      	mov.n	a2, a10
40086ad7:	badc      	bnez.n	a10, 40086af6 <spi_flash_read_encrypted+0x46>
40086ad9:	21b8      	l32i.n	a11, a1, 8
40086adb:	04cd      	mov.n	a12, a4
40086add:	bb5a      	add.n	a11, a11, a5
40086adf:	03ad      	mov.n	a10, a3
40086ae1:	e71881        	l32r	a8, 40080744 <_init_end+0x344>
40086ae4:	0008e0        	callx8	a8
40086ae7:	31a8      	l32i.n	a10, a1, 12
40086ae9:	ff42a5        	call8	40085f14 <spi_flash_munmap>
40086aec:	f01d      	retw.n
40086aee:	04a122        	movi	a2, 0x104
40086af1:	f01d      	retw.n
40086af3:	020c00        	andb	b0, b12, b0
40086af6:	f01d      	retw.n

40086af8 <spi_flash_write_encrypted>:
40086af8:	00a136        	entry	a1, 80
40086afb:	e75e81        	l32r	a8, 40080874 <_init_end+0x474>
40086afe:	0020c0        	memw
40086b01:	0888      	l32i.n	a8, a8, 0
40086b03:	0020c0        	memw
40086b06:	b189      	s32i.n	a8, a1, 44
40086b08:	f03d      	nop.n
40086b0a:	f03d      	nop.n
40086b0c:	f03d      	nop.n
40086b0e:	f03d      	nop.n
40086b10:	e75281        	l32r	a8, 40080858 <_init_end+0x458>
40086b13:	0888      	l32i.n	a8, a8, 0
40086b15:	e88c      	beqz.n	a8, 40086b27 <spi_flash_write_encrypted+0x2f>
40086b17:	4888      	l32i.n	a8, a8, 16
40086b19:	a88c      	beqz.n	a8, 40086b27 <spi_flash_write_encrypted+0x2f>
40086b1b:	20b440        	or	a11, a4, a4
40086b1e:	20a220        	or	a10, a2, a2
40086b21:	0008e0        	callx8	a8
40086b24:	0f4a16        	beqz	a10, 40086c1c <spi_flash_write_encrypted+0x124>
40086b27:	345020        	extui	a5, a2, 0, 4
40086b2a:	0f6556        	bnez	a5, 40086c24 <spi_flash_write_encrypted+0x12c>
40086b2d:	345040        	extui	a5, a4, 0, 4
40086b30:	0f8556        	bnez	a5, 40086c2c <spi_flash_write_encrypted+0x134>
40086b33:	ff90e5        	call8	40086440 <spi_flash_unlock>
40086b36:	0a7d      	mov.n	a7, a10
40086b38:	08da16        	beqz	a10, 40086bc9 <spi_flash_write_encrypted+0xd1>
40086b3b:	002906        	j	40086be3 <spi_flash_write_encrypted+0xeb>
40086b3e:	752a      	add.n	a7, a5, a2
40086b40:	45ec      	bnez.n	a5, 40086b68 <spi_flash_write_encrypted+0x70>
40086b42:	446070        	extui	a6, a7, 0, 5
40086b45:	f69c      	beqz.n	a6, 40086b68 <spi_flash_write_encrypted+0x70>
40086b47:	f0c772        	addi	a7, a7, -16
40086b4a:	061c      	movi.n	a6, 16
40086b4c:	06cd      	mov.n	a12, a6
40086b4e:	b35a      	add.n	a11, a3, a5
40086b50:	1cc1a2        	addi	a10, a1, 28
40086b53:	e6fc81        	l32r	a8, 40080744 <_init_end+0x344>
40086b56:	0008e0        	callx8	a8
40086b59:	06cd      	mov.n	a12, a6
40086b5b:	0cc1b2        	addi	a11, a1, 12
40086b5e:	20a770        	or	a10, a7, a7
40086b61:	fff4e5        	call8	40086ab0 <spi_flash_read_encrypted>
40086b64:	000cc6        	j	40086b9b <spi_flash_write_encrypted+0xa3>
40086b67:	645000        	extui	a5, a0, 0, 7
40086b6a:	b666c0        	lsi	f12, a6, 0x2d8
40086b6d:	cd1b      	addi.n	a12, a13, 1
40086b6f:	b35a06        	j	400738db <__udivmoddi4+0xece7>
40086b72:	a1cb      	addi.n	a10, a1, 12
40086b74:	e6f481        	l32r	a8, 40080744 <_init_end+0x344>
40086b77:	0008e0        	callx8	a8
40086b7a:	06cd      	mov.n	a12, a6
40086b7c:	1cc1b2        	addi	a11, a1, 28
40086b7f:	a76a      	add.n	a10, a7, a6
40086b81:	fff2e5        	call8	40086ab0 <spi_flash_read_encrypted>
40086b84:	0004c6        	j	40086b9b <spi_flash_write_encrypted+0xa3>
40086b87:	000000        	ill
40086b8a:	20a062        	movi	a6, 32
40086b8d:	20c660        	or	a12, a6, a6
40086b90:	80b350        	add	a11, a3, a5
40086b93:	a1cb      	addi.n	a10, a1, 12
40086b95:	e6eb81        	l32r	a8, 40080744 <_init_end+0x344>
40086b98:	0008e0        	callx8	a8
40086b9b:	e72f81        	l32r	a8, 40080858 <_init_end+0x458>
40086b9e:	0888      	l32i.n	a8, a8, 0
40086ba0:	588c      	beqz.n	a8, 40086ba9 <spi_flash_write_encrypted+0xb1>
40086ba2:	0888      	l32i.n	a8, a8, 0
40086ba4:	188c      	beqz.n	a8, 40086ba9 <spi_flash_write_encrypted+0xb1>
40086ba6:	0008e0        	callx8	a8
40086ba9:	0c2c      	movi.n	a12, 32
40086bab:	b1cb      	addi.n	a11, a1, 12
40086bad:	07ad      	mov.n	a10, a7
40086baf:	06c265        	call8	4008d7d4 <esp_rom_spiflash_write_encrypted>
40086bb2:	0a7d      	mov.n	a7, a10
40086bb4:	e72981        	l32r	a8, 40080858 <_init_end+0x458>
40086bb7:	0888      	l32i.n	a8, a8, 0
40086bb9:	588c      	beqz.n	a8, 40086bc2 <spi_flash_write_encrypted+0xca>
40086bbb:	1888      	l32i.n	a8, a8, 4
40086bbd:	188c      	beqz.n	a8, 40086bc2 <spi_flash_write_encrypted+0xca>
40086bbf:	0008e0        	callx8	a8
40086bc2:	b7cc      	bnez.n	a7, 40086bd1 <spi_flash_write_encrypted+0xd9>
40086bc4:	556a      	add.n	a5, a5, a6
40086bc6:	000046        	j	40086bcb <spi_flash_write_encrypted+0xd3>
40086bc9:	050c      	movi.n	a5, 0
40086bcb:	02b547        	bgeu	a5, a4, 40086bd1 <spi_flash_write_encrypted+0xd9>
40086bce:	ffdb06        	j	40086b3e <spi_flash_write_encrypted+0x46>
40086bd1:	030c      	movi.n	a3, 0
40086bd3:	3139      	s32i.n	a3, a1, 12
40086bd5:	4139      	s32i.n	a3, a1, 16
40086bd7:	5139      	s32i.n	a3, a1, 20
40086bd9:	6139      	s32i.n	a3, a1, 24
40086bdb:	7139      	s32i.n	a3, a1, 28
40086bdd:	8139      	s32i.n	a3, a1, 32
40086bdf:	9139      	s32i.n	a3, a1, 36
40086be1:	a139      	s32i.n	a3, a1, 40
40086be3:	f03d      	nop.n
40086be5:	f03d      	nop.n
40086be7:	f03d      	nop.n
40086be9:	f03d      	nop.n
40086beb:	e71b31        	l32r	a3, 40080858 <_init_end+0x458>
40086bee:	0338      	l32i.n	a3, a3, 0
40086bf0:	638c      	beqz.n	a3, 40086bfa <spi_flash_write_encrypted+0x102>
40086bf2:	2338      	l32i.n	a3, a3, 8
40086bf4:	002316        	beqz	a3, 40086bfa <spi_flash_write_encrypted+0x102>
40086bf7:	0003e0        	callx8	a3
40086bfa:	04bd      	mov.n	a11, a4
40086bfc:	02ad      	mov.n	a10, a2
40086bfe:	ff4325        	call8	40086030 <spi_flash_mark_modified_region>
40086c01:	e71521        	l32r	a2, 40080858 <_init_end+0x458>
40086c04:	0228      	l32i.n	a2, a2, 0
40086c06:	628c      	beqz.n	a2, 40086c10 <spi_flash_write_encrypted+0x118>
40086c08:	3228      	l32i.n	a2, a2, 12
40086c0a:	002216        	beqz	a2, 40086c10 <spi_flash_write_encrypted+0x118>
40086c0d:	0002e0        	callx8	a2
40086c10:	07ad      	mov.n	a10, a7
40086c12:	ff8125        	call8	40086424 <spi_flash_translate_rc>
40086c15:	0a2d      	mov.n	a2, a10
40086c17:	000506        	j	40086c2f <spi_flash_write_encrypted+0x137>
40086c1a:	220000        	orb	b0, b0, b0
40086c1d:	0602a1        	l32r	a10, 40048428 <lld_evt_get_next_free_slot+0x1afc>
40086c20:	000003        	lsi	f0, a0, 0
40086c23:	a12200        	sll	a2, a2
40086c26:	010602        	l8ui	a0, a6, 1
40086c29:	000000        	ill
40086c2c:	04a122        	movi	a2, 0x104
40086c2f:	0020c0        	memw
40086c32:	b188      	l32i.n	a8, a1, 44
40086c34:	e71041        	l32r	a4, 40080874 <_init_end+0x474>
40086c37:	0020c0        	memw
40086c3a:	0448      	l32i.n	a4, a4, 0
40086c3c:	021847        	beq	a8, a4, 40086c42 <spi_flash_write_encrypted+0x14a>
40086c3f:	4fa7a5        	call8	400d66b8 <__stack_chk_fail>
40086c42:	f01d      	retw.n

40086c44 <xTaskCreate>:
			const char * const pcName,
			const uint32_t usStackDepth,
			void * const pvParameters,
			UBaseType_t uxPriority,
			TaskHandle_t * const pvCreatedTask)
	{
40086c44:	00a136        	entry	a1, 80
40086c47:	208770        	or	a8, a7, a7
40086c4a:	207110        	or	a7, a1, a1
40086c4d:	2cc792        	addi	a9, a7, 44
40086c50:	006922        	s32i	a2, a9, 0
40086c53:	28c722        	addi	a2, a7, 40
40086c56:	0239      	s32i.n	a3, a2, 0
40086c58:	24c722        	addi	a2, a7, 36
40086c5b:	0249      	s32i.n	a4, a2, 0
40086c5d:	20c722        	addi	a2, a7, 32
40086c60:	0259      	s32i.n	a5, a2, 0
40086c62:	1cc722        	addi	a2, a7, 28
40086c65:	0269      	s32i.n	a6, a2, 0
40086c67:	18c722        	addi	a2, a7, 24
40086c6a:	0289      	s32i.n	a8, a2, 0
		return xTaskCreatePinnedToCore( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pvCreatedTask, tskNO_AFFINITY );
40086c6c:	18c782        	addi	a8, a7, 24
40086c6f:	1cc762        	addi	a6, a7, 28
40086c72:	20c752        	addi	a5, a7, 32
40086c75:	24c742        	addi	a4, a7, 36
40086c78:	28c732        	addi	a3, a7, 40
40086c7b:	2cc722        	addi	a2, a7, 44
40086c7e:	e62891        	l32r	a9, 40080520 <_init_end+0x120>
40086c81:	0199      	s32i.n	a9, a1, 0
40086c83:	08f8      	l32i.n	a15, a8, 0
40086c85:	06e8      	l32i.n	a14, a6, 0
40086c87:	05d8      	l32i.n	a13, a5, 0
40086c89:	04c8      	l32i.n	a12, a4, 0
40086c8b:	03b8      	l32i.n	a11, a3, 0
40086c8d:	02a8      	l32i.n	a10, a2, 0
40086c8f:	021a65        	call8	40088e34 <xTaskCreatePinnedToCore>
40086c92:	0a2d      	mov.n	a2, a10
	}
40086c94:	f01d      	retw.n
	...

40086c98 <micros>:
    }
#endif
}

unsigned long IRAM_ATTR micros()
{
40086c98:	004136        	entry	a1, 32
40086c9b:	017d      	mov.n	a7, a1
    return (unsigned long) (esp_timer_get_time());
40086c9d:	faa325        	call8	400816d0 <esp_timer_get_time>
40086ca0:	0a2d      	mov.n	a2, a10
40086ca2:	0b3d      	mov.n	a3, a11
}
40086ca4:	f01d      	retw.n
	...

40086ca8 <millis>:

unsigned long IRAM_ATTR millis()
{
40086ca8:	004136        	entry	a1, 32
40086cab:	017d      	mov.n	a7, a1
    return (unsigned long) (esp_timer_get_time() / 1000ULL);
40086cad:	faa225        	call8	400816d0 <esp_timer_get_time>
40086cb0:	0a2d      	mov.n	a2, a10
40086cb2:	0b3d      	mov.n	a3, a11
40086cb4:	e6f1c1        	l32r	a12, 40080878 <_init_end+0x478>
40086cb7:	e617d1        	l32r	a13, 40080514 <_init_end+0x114>
40086cba:	02ad      	mov.n	a10, a2
40086cbc:	03bd      	mov.n	a11, a3
40086cbe:	e65981        	l32r	a8, 40080624 <_init_end+0x224>
40086cc1:	0008e0        	callx8	a8
40086cc4:	0a2d      	mov.n	a2, a10
40086cc6:	0b3d      	mov.n	a3, a11
}
40086cc8:	f01d      	retw.n
	...

40086ccc <delayMicroseconds>:
{
    vTaskDelay(ms / portTICK_PERIOD_MS);
}

void IRAM_ATTR delayMicroseconds(uint32_t us)
{
40086ccc:	008136        	entry	a1, 64
40086ccf:	017d      	mov.n	a7, a1
40086cd1:	37cb      	addi.n	a3, a7, 12
40086cd3:	0329      	s32i.n	a2, a3, 0
    uint32_t m = micros();
40086cd5:	fffc25        	call8	40086c98 <micros>
40086cd8:	0a3d      	mov.n	a3, a10
40086cda:	18c722        	addi	a2, a7, 24
40086cdd:	0239      	s32i.n	a3, a2, 0
    if(us){
40086cdf:	27cb      	addi.n	a2, a7, 12
40086ce1:	0228      	l32i.n	a2, a2, 0
40086ce3:	042216        	beqz	a2, 40086d29 <delayMicroseconds+0x5d>
        uint32_t e = (m + us);
40086ce6:	1cc722        	addi	a2, a7, 28
40086ce9:	18c742        	addi	a4, a7, 24
40086cec:	37cb      	addi.n	a3, a7, 12
40086cee:	0448      	l32i.n	a4, a4, 0
40086cf0:	0338      	l32i.n	a3, a3, 0
40086cf2:	343a      	add.n	a3, a4, a3
40086cf4:	0239      	s32i.n	a3, a2, 0
        if(m > e){ //overflow
40086cf6:	18c722        	addi	a2, a7, 24
40086cf9:	1cc732        	addi	a3, a7, 28
40086cfc:	0228      	l32i.n	a2, a2, 0
40086cfe:	0338      	l32i.n	a3, a3, 0
40086d00:	18b327        	bgeu	a3, a2, 40086d1c <delayMicroseconds+0x50>
            while(micros() > e){
40086d03:	000046        	j	40086d08 <delayMicroseconds+0x3c>
                NOP();
40086d06:	f03d      	nop.n
            while(micros() > e){
40086d08:	fff8e5        	call8	40086c98 <micros>
40086d0b:	0a2d      	mov.n	a2, a10
40086d0d:	1cc732        	addi	a3, a7, 28
40086d10:	0338      	l32i.n	a3, a3, 0
40086d12:	f03327        	bltu	a3, a2, 40086d06 <delayMicroseconds+0x3a>
            }
        }
        while(micros() < e){
40086d15:	0000c6        	j	40086d1c <delayMicroseconds+0x50>
40086d18:	3d0000        	lsi	f0, a0, 244
            NOP();
40086d1b:	f7a5f0        	lsi	f15, a5, 0x3dc
        while(micros() < e){
40086d1e:	ff          	.byte 0xff
40086d1f:	0a3d      	mov.n	a3, a10
40086d21:	1cc722        	addi	a2, a7, 28
40086d24:	0228      	l32i.n	a2, a2, 0
40086d26:	f03327        	bltu	a3, a2, 40086d1a <delayMicroseconds+0x4e>
        }
    }
}
40086d29:	f03d      	nop.n
40086d2b:	f01d      	retw.n
40086d2d:	000000        	ill

40086d30 <pathToFileName>:
    initVariant();
}

//used by hal log
const char * IRAM_ATTR pathToFileName(const char * path)
{
40086d30:	008136        	entry	a1, 64
40086d33:	017d      	mov.n	a7, a1
40086d35:	37cb      	addi.n	a3, a7, 12
40086d37:	0329      	s32i.n	a2, a3, 0
    size_t i = 0;
40086d39:	14c722        	addi	a2, a7, 20
40086d3c:	030c      	movi.n	a3, 0
40086d3e:	0239      	s32i.n	a3, a2, 0
    size_t pos = 0;
40086d40:	18c722        	addi	a2, a7, 24
40086d43:	030c      	movi.n	a3, 0
40086d45:	0239      	s32i.n	a3, a2, 0
    char * p = (char *)path;
40086d47:	1cc722        	addi	a2, a7, 28
40086d4a:	37cb      	addi.n	a3, a7, 12
40086d4c:	0338      	l32i.n	a3, a3, 0
40086d4e:	0239      	s32i.n	a3, a2, 0
    while(*p){
40086d50:	001006        	j	40086d94 <pathToFileName+0x64>
40086d53:	c72200        	lsi	f0, a2, 0x31c
        i++;
40086d56:	c73214        	lsi	f1, a2, 0x31c
40086d59:	033814        	lsi	f1, a8, 12
40086d5c:	331b      	addi.n	a3, a3, 1
40086d5e:	0239      	s32i.n	a3, a2, 0
        if(*p == '/' || *p == '\\'){
40086d60:	1cc722        	addi	a2, a7, 28
40086d63:	0228      	l32i.n	a2, a2, 0
40086d65:	000232        	l8ui	a3, a2, 0
40086d68:	f22c      	movi.n	a2, 47
40086d6a:	0e1327        	beq	a3, a2, 40086d7c <pathToFileName+0x4c>
40086d6d:	1cc722        	addi	a2, a7, 28
40086d70:	002222        	l32i	a2, a2, 0
40086d73:	000232        	l8ui	a3, a2, 0
40086d76:	5ca022        	movi	a2, 92
40086d79:	0b9327        	bne	a3, a2, 40086d88 <pathToFileName+0x58>
            pos = i;
40086d7c:	18c722        	addi	a2, a7, 24
40086d7f:	14c732        	addi	a3, a7, 20
40086d82:	002332        	l32i	a3, a3, 0
40086d85:	006232        	s32i	a3, a2, 0
        }
        p++;
40086d88:	1cc722        	addi	a2, a7, 28
40086d8b:	1cc732        	addi	a3, a7, 28
40086d8e:	0338      	l32i.n	a3, a3, 0
40086d90:	331b      	addi.n	a3, a3, 1
40086d92:	0239      	s32i.n	a3, a2, 0
    while(*p){
40086d94:	1cc722        	addi	a2, a7, 28
40086d97:	0228      	l32i.n	a2, a2, 0
40086d99:	000222        	l8ui	a2, a2, 0
40086d9c:	fb4256        	bnez	a2, 40086d54 <pathToFileName+0x24>
    }
    return path+pos;
40086d9f:	37cb      	addi.n	a3, a7, 12
40086da1:	18c722        	addi	a2, a7, 24
40086da4:	0338      	l32i.n	a3, a3, 0
40086da6:	0228      	l32i.n	a2, a2, 0
40086da8:	232a      	add.n	a2, a3, a2
}
40086daa:	f01d      	retw.n

40086dac <esp_spiram_init_cache>:
40086dac:	004136        	entry	a1, 32
40086daf:	e6b321        	l32r	a2, 4008087c <_init_end+0x47c>
40086db2:	80a0f2        	movi	a15, 128
40086db5:	20a0e2        	movi	a14, 32
40086db8:	0d0c      	movi.n	a13, 0
40086dba:	02cd      	mov.n	a12, a2
40086dbc:	0dbd      	mov.n	a11, a13
40086dbe:	0dad      	mov.n	a10, a13
40086dc0:	0012a5        	call8	40086eec <cache_sram_mmu_set>
40086dc3:	e69131        	l32r	a3, 40080808 <_init_end+0x408>
40086dc6:	03ad      	mov.n	a10, a3
40086dc8:	fab7e5        	call8	40081948 <esp_dport_access_reg_read>
40086dcb:	787c      	movi.n	a8, -9
40086dcd:	10aa80        	and	a10, a10, a8
40086dd0:	0020c0        	memw
40086dd3:	03a9      	s32i.n	a10, a3, 0
40086dd5:	80a0f2        	movi	a15, 128
40086dd8:	0e2c      	movi.n	a14, 32
40086dda:	0d0c      	movi.n	a13, 0
40086ddc:	02cd      	mov.n	a12, a2
40086dde:	0dbd      	mov.n	a11, a13
40086de0:	1a0c      	movi.n	a10, 1
40086de2:	0010a5        	call8	40086eec <cache_sram_mmu_set>
40086de5:	f01d      	retw.n
	...

40086de8 <esp_spiram_writeback_cache>:
40086de8:	006136        	entry	a1, 48
40086deb:	00a022        	movi	a2, 0
40086dee:	0020c0        	memw
40086df1:	036122        	s32i	a2, a1, 12
40086df4:	f03d      	nop.n
40086df6:	f03d      	nop.n
40086df8:	f03d      	nop.n
40086dfa:	f03d      	nop.n
40086dfc:	e6a121        	l32r	a2, 40080880 <_init_end+0x480>
40086dff:	000222        	l8ui	a2, a2, 0
40086e02:	0e2216        	beqz	a2, 40086ee8 <esp_spiram_writeback_cache+0x100>
40086e05:	e67da1        	l32r	a10, 400807fc <_init_end+0x3fc>
40086e08:	fab3e5        	call8	40081948 <esp_dport_access_reg_read>
40086e0b:	17ea37        	bbsi	a10, 3, 40086e26 <esp_spiram_writeback_cache+0x3e>
40086e0e:	e67b31        	l32r	a3, 400807fc <_init_end+0x3fc>
40086e11:	03ad      	mov.n	a10, a3
40086e13:	fab365        	call8	40081948 <esp_dport_access_reg_read>
40086e16:	820c      	movi.n	a2, 8
40086e18:	20aa20        	or	a10, a10, a2
40086e1b:	0020c0        	memw
40086e1e:	03a9      	s32i.n	a10, a3, 0
40086e20:	120c      	movi.n	a2, 1
40086e22:	0000c6        	j	40086e29 <esp_spiram_writeback_cache+0x41>
40086e25:	a02200        	addx4	a2, a2, a0
40086e28:	76a100        	lsi	f0, a1, 0x1d8
40086e2b:	b1a5e6        	bgei	a5, 12, 40086de0 <esp_spiram_init_cache+0x34>
40086e2e:	37fa      	add.n	a3, a7, a15
40086e30:	17ea      	add.n	a1, a7, a14
40086e32:	02a032        	movi	a3, 2
40086e35:	202230        	or	a2, a2, a3
40086e38:	e67341        	l32r	a4, 40080804 <_init_end+0x404>
40086e3b:	04ad      	mov.n	a10, a4
40086e3d:	fab0a5        	call8	40081948 <esp_dport_access_reg_read>
40086e40:	830c      	movi.n	a3, 8
40086e42:	20aa30        	or	a10, a10, a3
40086e45:	0020c0        	memw
40086e48:	04a9      	s32i.n	a10, a4, 0
40086e4a:	080c      	movi.n	a8, 0
40086e4c:	000ec6        	j	40086e8b <esp_spiram_writeback_cache+0xa3>
40086e4f:	8b9100        	moveqz.s	f9, f1, a0
40086e52:	a89ae6        	bgei	a10, 10, 40086dfe <esp_spiram_writeback_cache+0x16>
40086e55:	000aa2        	l8ui	a10, a10, 0
40086e58:	74b0a0        	extui	a11, a10, 0, 8
40086e5b:	0020c0        	memw
40086e5e:	31a8      	l32i.n	a10, a1, 12
40086e60:	abaa      	add.n	a10, a11, a10
40086e62:	0020c0        	memw
40086e65:	31a9      	s32i.n	a10, a1, 12
40086e67:	f03d      	nop.n
40086e69:	f03d      	nop.n
40086e6b:	f03d      	nop.n
40086e6d:	f03d      	nop.n
40086e6f:	e685a1        	l32r	a10, 40080884 <_init_end+0x484>
40086e72:	a8aa      	add.n	a10, a8, a10
40086e74:	9a9a      	add.n	a9, a10, a9
40086e76:	000992        	l8ui	a9, a9, 0
40086e79:	74a090        	extui	a10, a9, 0, 8
40086e7c:	0020c0        	memw
40086e7f:	3198      	l32i.n	a9, a1, 12
40086e81:	9a9a      	add.n	a9, a10, a9
40086e83:	0020c0        	memw
40086e86:	3199      	s32i.n	a9, a1, 12
40086e88:	20c882        	addi	a8, a8, 32
40086e8b:	0020f0        	nop
40086e8e:	0020f0        	nop
40086e91:	f03d      	nop.n
40086e93:	e64691        	l32r	a9, 400807ac <_init_end+0x3ac>
40086e96:	b6a987        	bge	a9, a8, 40086e50 <esp_spiram_writeback_cache+0x68>
40086e99:	206207        	bbci	a2, 0, 40086ebd <esp_spiram_writeback_cache+0xd5>
40086e9c:	e65fa1        	l32r	a10, 40080818 <_init_end+0x418>
40086e9f:	faaaa5        	call8	40081948 <esp_dport_access_reg_read>
40086ea2:	b4a7a0        	extui	a10, a10, 7, 12
40086ea5:	f31a66        	bnei	a10, 1, 40086e9c <esp_spiram_writeback_cache+0xb4>
40086ea8:	e65531        	l32r	a3, 400807fc <_init_end+0x3fc>
40086eab:	20a330        	or	a10, a3, a3
40086eae:	faa9a5        	call8	40081948 <esp_dport_access_reg_read>
40086eb1:	f7af82        	movi	a8, -9
40086eb4:	10aa80        	and	a10, a10, a8
40086eb7:	0020c0        	memw
40086eba:	0063a2        	s32i	a10, a3, 0
40086ebd:	276217        	bbci	a2, 1, 40086ee8 <esp_spiram_writeback_cache+0x100>
40086ec0:	f03d      	nop.n
40086ec2:	f03d      	nop.n
40086ec4:	f03d      	nop.n
40086ec6:	f03d      	nop.n
40086ec8:	e655a1        	l32r	a10, 4008081c <_init_end+0x41c>
40086ecb:	faa7e5        	call8	40081948 <esp_dport_access_reg_read>
40086ece:	b4a7a0        	extui	a10, a10, 7, 12
40086ed1:	eb1a66        	bnei	a10, 1, 40086ec0 <esp_spiram_writeback_cache+0xd8>
40086ed4:	e64c31        	l32r	a3, 40080804 <_init_end+0x404>
40086ed7:	20a330        	or	a10, a3, a3
40086eda:	faa6e5        	call8	40081948 <esp_dport_access_reg_read>
40086edd:	f7af22        	movi	a2, -9
40086ee0:	10aa20        	and	a10, a10, a2
40086ee3:	0020c0        	memw
40086ee6:	03a9      	s32i.n	a10, a3, 0
40086ee8:	f01d      	retw.n
	...

40086eec <cache_sram_mmu_set>:
40086eec:	006136        	entry	a1, 48
40086eef:	2179      	s32i.n	a7, a1, 8
40086ef1:	ff5b25        	call8	400864a4 <spi_flash_guard_get>
40086ef4:	11a9      	s32i.n	a10, a1, 4
40086ef6:	6adc      	bnez.n	a10, 40086f10 <cache_sram_mmu_set+0x24>
40086ef8:	07fd      	mov.n	a15, a7
40086efa:	06ed      	mov.n	a14, a6
40086efc:	05dd      	mov.n	a13, a5
40086efe:	04cd      	mov.n	a12, a4
40086f00:	03bd      	mov.n	a11, a3
40086f02:	02ad      	mov.n	a10, a2
40086f04:	e66281        	l32r	a8, 4008088c <_init_end+0x48c>
40086f07:	0008e0        	callx8	a8
40086f0a:	0a7d      	mov.n	a7, a10
40086f0c:	005d86        	j	40087086 <cache_sram_mmu_set+0x19a>
40086f0f:	074c00        	lsi	f0, a12, 28
40086f12:	d27760        	quos	a7, a7, a6
40086f15:	770b      	addi.n	a7, a7, -1
40086f17:	e62581        	l32r	a8, 400807ac <_init_end+0x3ac>
40086f1a:	400700        	ssr	a7
40086f1d:	b17080        	sra	a7, a8
40086f20:	020477        	bnone	a4, a7, 40086f26 <cache_sram_mmu_set+0x3a>
40086f23:	004f46        	j	40087064 <cache_sram_mmu_set+0x178>
40086f26:	107570        	and	a7, a5, a7
40086f29:	13c756        	bnez	a7, 40087069 <cache_sram_mmu_set+0x17d>
40086f2c:	18c626        	beqi	a6, 32, 40086f48 <cache_sram_mmu_set+0x5c>
40086f2f:	1eb626        	beqi	a6, 16, 40086f51 <cache_sram_mmu_set+0x65>
40086f32:	248626        	beqi	a6, 8, 40086f5a <cache_sram_mmu_set+0x6e>
40086f35:	2b4626        	beqi	a6, 4, 40086f64 <cache_sram_mmu_set+0x78>
40086f38:	022626        	beqi	a6, 2, 40086f3e <cache_sram_mmu_set+0x52>
40086f3b:	004bc6        	j	4008706e <cache_sram_mmu_set+0x182>
40086f3e:	480c      	movi.n	a8, 4
40086f40:	3189      	s32i.n	a8, a1, 12
40086f42:	b90c      	movi.n	a9, 11
40086f44:	000886        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f47:	080c00        	lsx	f0, a12, a0
40086f4a:	3189      	s32i.n	a8, a1, 12
40086f4c:	f90c      	movi.n	a9, 15
40086f4e:	000606        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f51:	180c      	movi.n	a8, 1
40086f53:	3189      	s32i.n	a8, a1, 12
40086f55:	e90c      	movi.n	a9, 14
40086f57:	0003c6        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f5a:	280c      	movi.n	a8, 2
40086f5c:	3189      	s32i.n	a8, a1, 12
40086f5e:	d90c      	movi.n	a9, 13
40086f60:	000186        	j	40086f6a <cache_sram_mmu_set+0x7e>
40086f63:	380c00        	lsi	f0, a12, 224
40086f66:	3189      	s32i.n	a8, a1, 12
40086f68:	c90c      	movi.n	a9, 12
40086f6a:	400900        	ssr	a9
40086f6d:	915050        	srl	a5, a5
40086f70:	3823f6        	bgeui	a3, 2, 40086fac <cache_sram_mmu_set+0xc0>
40086f73:	f03d      	nop.n
40086f75:	f03d      	nop.n
40086f77:	e64481        	l32r	a8, 40080888 <_init_end+0x488>
40086f7a:	023847        	bltu	a8, a4, 40086f80 <cache_sram_mmu_set+0x94>
40086f7d:	003cc6        	j	40087074 <cache_sram_mmu_set+0x188>
40086f80:	0166f0        	slli	a6, a6, 17
40086f83:	e63e81        	l32r	a8, 4008087c <_init_end+0x47c>
40086f86:	668a      	add.n	a6, a6, a8
40086f88:	023467        	bltu	a4, a6, 40086f8e <cache_sram_mmu_set+0xa2>
40086f8b:	003a86        	j	40087079 <cache_sram_mmu_set+0x18d>
40086f8e:	e63561        	l32r	a6, 40080864 <_init_end+0x464>
40086f91:	3138      	l32i.n	a3, a1, 12
40086f93:	400300        	ssr	a3
40086f96:	b16060        	sra	a6, a6
40086f99:	104640        	and	a4, a6, a4
40086f9c:	400900        	ssr	a9
40086f9f:	914040        	srl	a4, a4
40086fa2:	80a462        	movi	a6, 0x480
40086fa5:	446a      	add.n	a4, a4, a6
40086fa7:	000d06        	j	40086fdf <cache_sram_mmu_set+0xf3>
40086faa:	810000        	src	a0, a0, a0
40086fad:	47e637        	bbsi	a6, 3, 40086ff8 <cache_sram_mmu_set+0x10c>
40086fb0:	0238      	l32i.n	a3, a2, 0
40086fb2:	003206        	j	4008707e <cache_sram_mmu_set+0x192>
40086fb5:	0166f0        	slli	a6, a6, 17
40086fb8:	e63181        	l32r	a8, 4008087c <_init_end+0x47c>
40086fbb:	668a      	add.n	a6, a6, a8
40086fbd:	023467        	bltu	a4, a6, 40086fc3 <cache_sram_mmu_set+0xd7>
40086fc0:	003006        	j	40087084 <cache_sram_mmu_set+0x198>
40086fc3:	118390        	slli	a8, a3, 7
40086fc6:	e62761        	l32r	a6, 40080864 <_init_end+0x464>
40086fc9:	3138      	l32i.n	a3, a1, 12
40086fcb:	400300        	ssr	a3
40086fce:	b16060        	sra	a6, a6
40086fd1:	106640        	and	a6, a6, a4
40086fd4:	400900        	ssr	a9
40086fd7:	914060        	srl	a4, a6
40086fda:	484a      	add.n	a4, a8, a4
40086fdc:	04d442        	addmi	a4, a4, 0x400
40086fdf:	1138      	l32i.n	a3, a1, 4
40086fe1:	0368      	l32i.n	a6, a3, 0
40086fe3:	0006e0        	callx8	a6
40086fe6:	060c      	movi.n	a6, 0
40086fe8:	000746        	j	40087009 <cache_sram_mmu_set+0x11d>
40086feb:	528c00        	lsi	f0, a12, 0x148
40086fee:	e5ed81        	l32r	a8, 400807a4 <_init_end+0x3a4>
40086ff1:	0000c6        	j	40086ff8 <cache_sram_mmu_set+0x10c>
40086ff4:	ea8100        	utrunc.s	a8, f1, 0
40086ff7:	8480e5        	call8	4000b804 <roundup2+0xc88>
40086ffa:	9650a0        	lsi	f10, a0, 0x258
40086ffd:	20c080        	or	a12, a0, a8
40087000:	689200        	lsi	f0, a2, 0x1a0
40087003:	c44200        	extui	a4, a0, 2, 13
40087006:	661b01        	l32r	a0, 40060874 <esp_crc8+0x3730>
40087009:	f03d      	nop.n
4008700b:	f03d      	nop.n
4008700d:	2138      	l32i.n	a3, a1, 8
4008700f:	d93637        	bltu	a6, a3, 40086fec <cache_sram_mmu_set+0x100>
40087012:	f2dc      	bnez.n	a2, 40087035 <cache_sram_mmu_set+0x149>
40087014:	e5fb41        	l32r	a4, 40080800 <_init_end+0x400>
40087017:	04ad      	mov.n	a10, a4
40087019:	fa92e5        	call8	40081948 <esp_dport_access_reg_read>
4008701c:	3fae22        	movi	a2, 0xfffffe3f
4008701f:	10aa20        	and	a10, a10, a2
40087022:	3138      	l32i.n	a3, a1, 12
40087024:	1123a0        	slli	a2, a3, 6
40087027:	202a20        	or	a2, a10, a2
4008702a:	0020c0        	memw
4008702d:	0429      	s32i.n	a2, a4, 0
4008702f:	000746        	j	40087050 <cache_sram_mmu_set+0x164>
40087032:	000000        	ill
40087035:	e5f441        	l32r	a4, 40080808 <_init_end+0x408>
40087038:	04ad      	mov.n	a10, a4
4008703a:	fa90e5        	call8	40081948 <esp_dport_access_reg_read>
4008703d:	3fae22        	movi	a2, 0xfffffe3f
40087040:	10aa20        	and	a10, a10, a2
40087043:	3138      	l32i.n	a3, a1, 12
40087045:	1123a0        	slli	a2, a3, 6
40087048:	202a20        	or	a2, a10, a2
4008704b:	0020c0        	memw
4008704e:	0429      	s32i.n	a2, a4, 0
40087050:	f03d      	nop.n
40087052:	f03d      	nop.n
40087054:	f03d      	nop.n
40087056:	f03d      	nop.n
40087058:	1138      	l32i.n	a3, a1, 4
4008705a:	012322        	l32i	a2, a3, 4
4008705d:	0002e0        	callx8	a2
40087060:	000886        	j	40087086 <cache_sram_mmu_set+0x19a>
40087063:	170c00        	lsi	f0, a12, 92
40087066:	000706        	j	40087086 <cache_sram_mmu_set+0x19a>
40087069:	170c      	movi.n	a7, 1
4008706b:	0005c6        	j	40087086 <cache_sram_mmu_set+0x19a>
4008706e:	370c      	movi.n	a7, 3
40087070:	000486        	j	40087086 <cache_sram_mmu_set+0x19a>
40087073:	570c00        	lsi	f0, a12, 0x15c
40087076:	000306        	j	40087086 <cache_sram_mmu_set+0x19a>
40087079:	570c      	movi.n	a7, 5
4008707b:	0001c6        	j	40087086 <cache_sram_mmu_set+0x19a>
4008707e:	570c      	movi.n	a7, 5
40087080:	000086        	j	40087086 <cache_sram_mmu_set+0x19a>
40087083:	570c00        	lsi	f0, a12, 0x15c
40087086:	072d      	mov.n	a2, a7
40087088:	f01d      	retw.n
	...

4008708c <s_stub_code_buf>:
	...

400870ac <xt_debugexception>:
400870ac:	100c      	movi.n	a0, 1
400870ae:	13e800        	wsr.exccause	a0
400870b1:	03b600        	rsr.epc6	a0
400870b4:	13b100        	wsr.epc1	a0
400870b7:	03d600        	rsr.excsave6	a0
400870ba:	13d100        	wsr.excsave1	a0
400870bd:	fccc45        	call0	40083d84 <_xt_panic>
400870c0:	003610        	rfi	6
	...

400870c4 <_xt_highint4>:
400870c4:	03d400        	rsr.excsave4	a0
400870c7:	003410        	rfi	4
	...

400870cc <xt_highint5>:
400870cc:	03d500        	rsr.excsave5	a0
400870cf:	003510        	rfi	5
	...

400870d4 <_xt_nmi>:
400870d4:	03d700        	rsr.excsave7	a0
400870d7:	003710        	rfi	7
	...

400870dc <coex_time_diff>:
400870dc:	004136        	entry	a1, 32
400870df:	c02320        	sub	a2, a3, a2
400870e2:	f01d      	retw.n

400870e4 <prvGetFreeSize>:
400870e4:	004136        	entry	a1, 32
400870e7:	029d      	mov.n	a9, a2
400870e9:	1228      	l32i.n	a2, a2, 4
400870eb:	12e227        	bbsi	a2, 2, 40087101 <prvGetFreeSize+0x1d>
400870ee:	a988      	l32i.n	a8, a9, 40
400870f0:	8928      	l32i.n	a2, a9, 32
400870f2:	c08820        	sub	a8, a8, a2
400870f5:	0318e6        	bgei	a8, 1, 400870fc <prvGetFreeSize+0x18>
400870f8:	0928      	l32i.n	a2, a9, 0
400870fa:	882a      	add.n	a8, a8, a2
400870fc:	082d      	mov.n	a2, a8
400870fe:	000046        	j	40087103 <prvGetFreeSize+0x1f>
40087101:	020c      	movi.n	a2, 0
40087103:	002982        	l32i	a8, a9, 0
40087106:	14b827        	bgeu	a8, a2, 4008711e <prvGetFreeSize+0x3a>
40087109:	e5e1d1        	l32r	a13, 40080890 <_init_end+0x490>
4008710c:	9ca0c2        	movi	a12, 156
4008710f:	e5e1b1        	l32r	a11, 40080894 <_init_end+0x494>
40087112:	e5e1a1        	l32r	a10, 40080898 <_init_end+0x498>
40087115:	e4e081        	l32r	a8, 40080498 <_init_end+0x98>
40087118:	0008e0        	callx8	a8
4008711b:	042525        	call8	4008b36c <abort>
4008711e:	f01d      	retw.n

40087120 <prvReceiveGeneric>:
40087120:	008136        	entry	a1, 64
40087123:	036172        	s32i	a7, a1, 12
40087126:	016142        	s32i	a4, a1, 4
40087129:	006152        	s32i	a5, a1, 0
4008712c:	2169      	s32i.n	a6, a1, 8
4008712e:	f03d      	nop.n
40087130:	f03d      	nop.n
40087132:	f03d      	nop.n
40087134:	f03d      	nop.n
40087136:	102162        	l32i	a6, a1, 64
40087139:	015025        	call8	4008863c <xTaskGetTickCount>
4008713c:	7a6a      	add.n	a7, a10, a6
4008713e:	065d      	mov.n	a5, a6
40087140:	004086        	j	40087246 <prvReceiveGeneric+0x126>
40087143:	000000        	ill
40087146:	00a0d2        	movi	a13, 0
40087149:	05cd      	mov.n	a12, a5
4008714b:	0dbd      	mov.n	a11, a13
4008714d:	f2a8      	l32i.n	a10, a2, 60
4008714f:	00a165        	call8	40087b64 <xQueueGenericReceive>
40087152:	021a26        	beqi	a10, 1, 40087158 <prvReceiveGeneric+0x38>
40087155:	003ec6        	j	40087254 <prvReceiveGeneric+0x134>
40087158:	40c242        	addi	a4, a2, 64
4008715b:	04ad      	mov.n	a10, a4
4008715d:	019325        	call8	40088a90 <vTaskEnterCritical>
40087160:	02ad      	mov.n	a10, a2
40087162:	002ba5        	call8	4008741c <prvCheckItemAvail>
40087165:	021a26        	beqi	a10, 1, 4008716b <prvReceiveGeneric+0x4b>
40087168:	0032c6        	j	40087237 <prvReceiveGeneric+0x117>
4008716b:	1258      	l32i.n	a5, a2, 4
4008716d:	116517        	bbci	a5, 1, 40087182 <prvReceiveGeneric+0x62>
40087170:	5258      	l32i.n	a5, a2, 20
40087172:	01d8      	l32i.n	a13, a1, 0
40087174:	31c8      	l32i.n	a12, a1, 12
40087176:	0b0c      	movi.n	a11, 0
40087178:	02ad      	mov.n	a10, a2
4008717a:	0005e0        	callx8	a5
4008717d:	03a9      	s32i.n	a10, a3, 0
4008717f:	000446        	j	40087194 <prvReceiveGeneric+0x74>
40087182:	052252        	l32i	a5, a2, 20
40087185:	0021d2        	l32i	a13, a1, 0
40087188:	0c0c      	movi.n	a12, 0
4008718a:	1cc1b2        	addi	a11, a1, 28
4008718d:	02ad      	mov.n	a10, a2
4008718f:	0005e0        	callx8	a5
40087192:	03a9      	s32i.n	a10, a3, 0
40087194:	f03d      	nop.n
40087196:	f03d      	nop.n
40087198:	f03d      	nop.n
4008719a:	f03d      	nop.n
4008719c:	1258      	l32i.n	a5, a2, 4
4008719e:	736507        	bbci	a5, 0, 40087215 <prvReceiveGeneric+0xf5>
400871a1:	150c      	movi.n	a5, 1
400871a3:	070c      	movi.n	a7, 0
400871a5:	076d      	mov.n	a6, a7
400871a7:	1188      	l32i.n	a8, a1, 4
400871a9:	936580        	movnez	a6, a5, a8
400871ac:	746060        	extui	a6, a6, 0, 8
400871af:	2188      	l32i.n	a8, a1, 8
400871b1:	835780        	moveqz	a5, a7, a8
400871b4:	745050        	extui	a5, a5, 0, 8
400871b7:	5a1677        	beq	a6, a7, 40087215 <prvReceiveGeneric+0xf5>
400871ba:	571577        	beq	a5, a7, 40087215 <prvReceiveGeneric+0xf5>
400871bd:	7158      	l32i.n	a5, a1, 28
400871bf:	4c1566        	bnei	a5, 1, 4008720f <prvReceiveGeneric+0xef>
400871c2:	5258      	l32i.n	a5, a2, 20
400871c4:	08dd      	mov.n	a13, a8
400871c6:	07cd      	mov.n	a12, a7
400871c8:	1cc1b2        	addi	a11, a1, 28
400871cb:	02ad      	mov.n	a10, a2
400871cd:	0005e0        	callx8	a5
400871d0:	1158      	l32i.n	a5, a1, 4
400871d2:	05a9      	s32i.n	a10, a5, 0
400871d4:	f03d      	nop.n
400871d6:	f03d      	nop.n
400871d8:	f03d      	nop.n
400871da:	f03d      	nop.n
400871dc:	0338      	l32i.n	a3, a3, 0
400871de:	143a37        	bltu	a10, a3, 400871f6 <prvReceiveGeneric+0xd6>
400871e1:	e5aed1        	l32r	a13, 4008089c <_init_end+0x49c>
400871e4:	48a2c2        	movi	a12, 0x248
400871e7:	e5abb1        	l32r	a11, 40080894 <_init_end+0x494>
400871ea:	e5aba1        	l32r	a10, 40080898 <_init_end+0x498>
400871ed:	e4aa81        	l32r	a8, 40080498 <_init_end+0x98>
400871f0:	0008e0        	callx8	a8
400871f3:	0417a5        	call8	4008b36c <abort>
400871f6:	7138      	l32i.n	a3, a1, 28
400871f8:	939c      	beqz.n	a3, 40087215 <prvReceiveGeneric+0xf5>
400871fa:	e5a8d1        	l32r	a13, 4008089c <_init_end+0x49c>
400871fd:	49a2c2        	movi	a12, 0x249
40087200:	e5a5b1        	l32r	a11, 40080894 <_init_end+0x494>
40087203:	e5a5a1        	l32r	a10, 40080898 <_init_end+0x498>
40087206:	e4a481        	l32r	a8, 40080498 <_init_end+0x98>
40087209:	0008e0        	callx8	a8
4008720c:	0415e5        	call8	4008b36c <abort>
4008720f:	030c      	movi.n	a3, 0
40087211:	1188      	l32i.n	a8, a1, 4
40087213:	0839      	s32i.n	a3, a8, 0
40087215:	f03d      	nop.n
40087217:	f03d      	nop.n
40087219:	f03d      	nop.n
4008721b:	f03d      	nop.n
4008721d:	d238      	l32i.n	a3, a2, 52
4008721f:	0513e6        	bgei	a3, 1, 40087228 <prvReceiveGeneric+0x108>
40087222:	030c      	movi.n	a3, 0
40087224:	0000c6        	j	4008722b <prvReceiveGeneric+0x10b>
40087227:	a03200        	addx4	a3, a2, a0
4008722a:	a44001        	l32r	a0, 4007032c <__udivmoddi4+0xb738>
4008722d:	9a2520        	trunc.s	a2, f5, 2
40087230:	a04201        	l32r	a0, 4006f338 <__udivmoddi4+0xa744>
40087233:	088601        	l32r	a0, 4004944c <r_lld_scan_stop+0x2bc>
40087236:	062600        	lsi	f0, a6, 24
40087239:	402505        	call0	400c748c <_rtc_text_end+0x748c>
4008723c:	57a001        	l32r	a0, 4005d0bc <crc32_le+0xd0>
4008723f:	a440c0        	extui	a4, a12, 0, 11
40087242:	98e520        	lsi	f2, a5, 0x260
40087245:	365701        	l32r	a0, 40054ba4 <nvds_init_memory+0x84c>
40087248:	be4602        	s8i	a0, a6, 190
4008724b:	ff          	.byte 0xff
4008724c:	00a032        	movi	a3, 0
4008724f:	034d      	mov.n	a4, a3
40087251:	000146        	j	4008725a <prvReceiveGeneric+0x13a>
40087254:	00a032        	movi	a3, 0
40087257:	204330        	or	a4, a3, a3
4008725a:	0b1366        	bnei	a3, 1, 40087269 <prvReceiveGeneric+0x149>
4008725d:	00a0d2        	movi	a13, 0
40087260:	0dcd      	mov.n	a12, a13
40087262:	0dbd      	mov.n	a11, a13
40087264:	f2a8      	l32i.n	a10, a2, 60
40087266:	0057e5        	call8	400877e4 <xQueueGenericSend>
40087269:	042d      	mov.n	a2, a4
4008726b:	f01d      	retw.n
4008726d:	000000        	ill

40087270 <xRingbufferSend>:
40087270:	006136        	entry	a1, 48
40087273:	017256        	bnez	a2, 4008728e <xRingbufferSend+0x1e>
40087276:	e58ad1        	l32r	a13, 400808a0 <_init_end+0x4a0>
40087279:	eca2c2        	movi	a12, 0x2ec
4008727c:	e586b1        	l32r	a11, 40080894 <_init_end+0x494>
4008727f:	e586a1        	l32r	a10, 40080898 <_init_end+0x498>
40087282:	e48581        	l32r	a8, 40080498 <_init_end+0x98>
40087285:	0008e0        	callx8	a8
40087288:	201110        	or	a1, a1, a1
4008728b:	040e25        	call8	4008b36c <abort>
4008728e:	160c      	movi.n	a6, 1
40087290:	070c      	movi.n	a7, 0
40087292:	078d      	mov.n	a8, a7
40087294:	838630        	moveqz	a8, a6, a3
40087297:	836740        	moveqz	a6, a7, a4
4008729a:	140687        	bnone	a6, a8, 400872b2 <xRingbufferSend+0x42>
4008729d:	e580d1        	l32r	a13, 400808a0 <_init_end+0x4a0>
400872a0:	eda2c2        	movi	a12, 0x2ed
400872a3:	e57cb1        	l32r	a11, 40080894 <_init_end+0x494>
400872a6:	e57ca1        	l32r	a10, 40080898 <_init_end+0x498>
400872a9:	e47b81        	l32r	a8, 40080498 <_init_end+0x98>
400872ac:	0008e0        	callx8	a8
400872af:	040be5        	call8	4008b36c <abort>
400872b2:	022262        	l32i	a6, a2, 8
400872b5:	02b647        	bgeu	a6, a4, 400872bb <xRingbufferSend+0x4b>
400872b8:	002946        	j	40087361 <xRingbufferSend+0xf1>
400872bb:	012262        	l32i	a6, a2, 4
400872be:	026617        	bbci	a6, 1, 400872c4 <xRingbufferSend+0x54>
400872c1:	0a0416        	beqz	a4, 40087365 <xRingbufferSend+0xf5>
400872c4:	013765        	call8	4008863c <xTaskGetTickCount>
400872c7:	80aa50        	add	a10, a10, a5
400872ca:	31a9      	s32i.n	a10, a1, 12
400872cc:	057d      	mov.n	a7, a5
400872ce:	001706        	j	4008732e <xRingbufferSend+0xbe>
400872d1:	a0d200        	addx4	a13, a2, a0
400872d4:	07cd00        	lsi	f0, a13, 28
400872d7:	0dbd      	mov.n	a11, a13
400872d9:	e2a8      	l32i.n	a10, a2, 56
400872db:	0088a5        	call8	40087b64 <xQueueGenericReceive>
400872de:	581a66        	bnei	a10, 1, 4008733a <xRingbufferSend+0xca>
400872e1:	40c262        	addi	a6, a2, 64
400872e4:	06ad      	mov.n	a10, a6
400872e6:	017aa5        	call8	40088a90 <vTaskEnterCritical>
400872e9:	3288      	l32i.n	a8, a2, 12
400872eb:	20b440        	or	a11, a4, a4
400872ee:	02ad      	mov.n	a10, a2
400872f0:	0008e0        	callx8	a8
400872f3:	261a66        	bnei	a10, 1, 4008731d <xRingbufferSend+0xad>
400872f6:	4258      	l32i.n	a5, a2, 16
400872f8:	04cd      	mov.n	a12, a4
400872fa:	03bd      	mov.n	a11, a3
400872fc:	02ad      	mov.n	a10, a2
400872fe:	0005e0        	callx8	a5
40087301:	02ad      	mov.n	a10, a2
40087303:	ffde25        	call8	400870e4 <prvGetFreeSize>
40087306:	4acc      	bnez.n	a10, 4008730e <xRingbufferSend+0x9e>
40087308:	040c      	movi.n	a4, 0
4008730a:	0000c6        	j	40087311 <xRingbufferSend+0xa1>
4008730d:	a04200        	addx4	a4, a2, a0
40087310:	a66001        	l32r	a0, 40070c90 <__udivmoddi4+0xc09c>
40087313:	8ba520        	moveqz.s	f10, f5, a2
40087316:	a03201        	l32r	a0, 4006f3e0 <__udivmoddi4+0xa7ec>
40087319:	080601        	l32r	a0, 40049334 <r_lld_scan_stop+0x1a4>
4008731c:	052600        	extui	a2, a0, 22, 1
4008731f:	31a507        	bge	a5, a0, 40087354 <xRingbufferSend+0xe4>
40087322:	318801        	l32r	a0, 40053944 <lm_cmd_cmp_send+0x210c>
40087325:	c078a0        	sub	a7, a8, a10
40087328:	20a660        	or	a10, a6, a6
4008732b:	018a65        	call8	40088bd0 <vTaskExitCritical>
4008732e:	a0b577        	bgeu	a5, a7, 400872d2 <xRingbufferSend+0x62>
40087331:	00a042        	movi	a4, 0
40087334:	203440        	or	a3, a4, a4
40087337:	0000c6        	j	4008733e <xRingbufferSend+0xce>
4008733a:	040c      	movi.n	a4, 0
4008733c:	043d      	mov.n	a3, a4
4008733e:	0a1366        	bnei	a3, 1, 4008734c <xRingbufferSend+0xdc>
40087341:	0d0c      	movi.n	a13, 0
40087343:	0dcd      	mov.n	a12, a13
40087345:	0dbd      	mov.n	a11, a13
40087347:	f2a8      	l32i.n	a10, a2, 60
40087349:	0049a5        	call8	400877e4 <xQueueGenericSend>
4008734c:	191466        	bnei	a4, 1, 40087369 <xRingbufferSend+0xf9>
4008734f:	00a0d2        	movi	a13, 0
40087352:	20cdd0        	or	a12, a13, a13
40087355:	20bdd0        	or	a11, a13, a13
40087358:	e2a8      	l32i.n	a10, a2, 56
4008735a:	0048a5        	call8	400877e4 <xQueueGenericSend>
4008735d:	032d      	mov.n	a2, a3
4008735f:	f01d      	retw.n
40087361:	020c      	movi.n	a2, 0
40087363:	f01d      	retw.n
40087365:	120c      	movi.n	a2, 1
40087367:	f01d      	retw.n
40087369:	032d      	mov.n	a2, a3
4008736b:	f01d      	retw.n
4008736d:	000000        	ill

40087370 <xRingbufferReceive>:
40087370:	008136        	entry	a1, 64
40087373:	017256        	bnez	a2, 4008738e <xRingbufferReceive+0x1e>
40087376:	e54bd1        	l32r	a13, 400808a4 <_init_end+0x4a4>
40087379:	4da3c2        	movi	a12, 0x34d
4008737c:	e546b1        	l32r	a11, 40080894 <_init_end+0x494>
4008737f:	e546a1        	l32r	a10, 40080898 <_init_end+0x498>
40087382:	e44581        	l32r	a8, 40080498 <_init_end+0x98>
40087385:	0008e0        	callx8	a8
40087388:	201110        	or	a1, a1, a1
4008738b:	03fe25        	call8	4008b36c <abort>
4008738e:	006142        	s32i	a4, a1, 0
40087391:	00a0f2        	movi	a15, 0
40087394:	20eff0        	or	a14, a15, a15
40087397:	1cc1d2        	addi	a13, a1, 28
4008739a:	0fcd      	mov.n	a12, a15
4008739c:	18c1b2        	addi	a11, a1, 24
4008739f:	02ad      	mov.n	a10, a2
400873a1:	ffd7e5        	call8	40087120 <prvReceiveGeneric>
400873a4:	111a66        	bnei	a10, 1, 400873b9 <xRingbufferReceive+0x49>
400873a7:	238c      	beqz.n	a3, 400873ad <xRingbufferReceive+0x3d>
400873a9:	7128      	l32i.n	a2, a1, 28
400873ab:	0329      	s32i.n	a2, a3, 0
400873ad:	f03d      	nop.n
400873af:	f03d      	nop.n
400873b1:	f03d      	nop.n
400873b3:	f03d      	nop.n
400873b5:	6128      	l32i.n	a2, a1, 24
400873b7:	f01d      	retw.n
400873b9:	020c      	movi.n	a2, 0
400873bb:	f01d      	retw.n
400873bd:	000000        	ill

400873c0 <vRingbufferReturnItem>:
400873c0:	004136        	entry	a1, 32
400873c3:	017256        	bnez	a2, 400873de <vRingbufferReturnItem+0x1e>
400873c6:	e538d1        	l32r	a13, 400808a8 <_init_end+0x4a8>
400873c9:	e5a3c2        	movi	a12, 0x3e5
400873cc:	e532b1        	l32r	a11, 40080894 <_init_end+0x494>
400873cf:	e532a1        	l32r	a10, 40080898 <_init_end+0x498>
400873d2:	e43181        	l32r	a8, 40080498 <_init_end+0x98>
400873d5:	0008e0        	callx8	a8
400873d8:	201110        	or	a1, a1, a1
400873db:	03f925        	call8	4008b36c <abort>
400873de:	33dc      	bnez.n	a3, 400873f5 <vRingbufferReturnItem+0x35>
400873e0:	e532d1        	l32r	a13, 400808a8 <_init_end+0x4a8>
400873e3:	e6a3c2        	movi	a12, 0x3e6
400873e6:	e52bb1        	l32r	a11, 40080894 <_init_end+0x494>
400873e9:	e52ba1        	l32r	a10, 40080898 <_init_end+0x498>
400873ec:	e42b81        	l32r	a8, 40080498 <_init_end+0x98>
400873ef:	0008e0        	callx8	a8
400873f2:	03f7a5        	call8	4008b36c <abort>
400873f5:	40c242        	addi	a4, a2, 64
400873f8:	04ad      	mov.n	a10, a4
400873fa:	016965        	call8	40088a90 <vTaskEnterCritical>
400873fd:	062282        	l32i	a8, a2, 24
40087400:	03bd      	mov.n	a11, a3
40087402:	20a220        	or	a10, a2, a2
40087405:	0008e0        	callx8	a8
40087408:	04ad      	mov.n	a10, a4
4008740a:	017c65        	call8	40088bd0 <vTaskExitCritical>
4008740d:	0d0c      	movi.n	a13, 0
4008740f:	0dcd      	mov.n	a12, a13
40087411:	0dbd      	mov.n	a11, a13
40087413:	e2a8      	l32i.n	a10, a2, 56
40087415:	003ce5        	call8	400877e4 <xQueueGenericSend>
40087418:	f01d      	retw.n
	...

4008741c <prvCheckItemAvail>:
4008741c:	004136        	entry	a1, 32
4008741f:	1288      	l32i.n	a8, a2, 4
40087421:	076817        	bbci	a8, 1, 4008742c <prvCheckItemAvail+0x10>
40087424:	92a8      	l32i.n	a10, a2, 36
40087426:	0a2292        	l32i	a9, a2, 40
40087429:	139a97        	bne	a10, a9, 40087440 <prvCheckItemAvail+0x24>
4008742c:	d298      	l32i.n	a9, a2, 52
4008742e:	1219a6        	blti	a9, 1, 40087444 <prvCheckItemAvail+0x28>
40087431:	9298      	l32i.n	a9, a2, 36
40087433:	8228      	l32i.n	a2, a2, 32
40087435:	0f9927        	bne	a9, a2, 40087448 <prvCheckItemAvail+0x2c>
40087438:	10e827        	bbsi	a8, 2, 4008744c <prvCheckItemAvail+0x30>
4008743b:	020c      	movi.n	a2, 0
4008743d:	f01d      	retw.n
4008743f:	020c00        	andb	b0, b12, b0
40087442:	f01d      	retw.n
40087444:	020c      	movi.n	a2, 0
40087446:	f01d      	retw.n
40087448:	120c      	movi.n	a2, 1
4008744a:	f01d      	retw.n
4008744c:	120c      	movi.n	a2, 1
4008744e:	f01d      	retw.n

40087450 <xt_unhandled_interrupt>:
40087450:	004136        	entry	a1, 32
40087453:	02bd      	mov.n	a11, a2
40087455:	03ebc0        	rsr.prid	a12
40087458:	04cdc0        	extui	a12, a12, 13, 1
4008745b:	e514a1        	l32r	a10, 400808ac <_init_end+0x4ac>
4008745e:	e40e81        	l32r	a8, 40080498 <_init_end+0x98>
40087461:	0008e0        	callx8	a8
40087464:	f01d      	retw.n
	...

40087468 <xt_set_interrupt_handler>:
40087468:	004136        	entry	a1, 32
4008746b:	f81c      	movi.n	a8, 31
4008746d:	403827        	bltu	a8, a2, 400874b1 <xt_set_interrupt_handler+0x49>
40087470:	e51081        	l32r	a8, 400808b0 <_init_end+0x4b0>
40087473:	882a      	add.n	a8, a8, a2
40087475:	000882        	l8ui	a8, a8, 0
40087478:	3a48f6        	bgeui	a8, 4, 400874b6 <xt_set_interrupt_handler+0x4e>
4008747b:	1122f0        	slli	a2, a2, 1
4008747e:	03eb90        	rsr.prid	a9
40087481:	049d90        	extui	a9, a9, 13, 1
40087484:	929a      	add.n	a9, a2, a9
40087486:	e49481        	l32r	a8, 400806d8 <_init_end+0x2d8>
40087489:	b08980        	addx8	a8, a9, a8
4008748c:	0828      	l32i.n	a2, a8, 0
4008748e:	638c      	beqz.n	a3, 40087498 <xt_set_interrupt_handler+0x30>
40087490:	0839      	s32i.n	a3, a8, 0
40087492:	1849      	s32i.n	a4, a8, 4
40087494:	0001c6        	j	4008749f <xt_set_interrupt_handler+0x37>
40087497:	073100        	lsi	f0, a1, 28
4008749a:	0839e5        	call8	4008f838 <_iram_end+0x1ce4>
4008749d:	1899      	s32i.n	a9, a8, 4
4008749f:	f03d      	nop.n
400874a1:	f03d      	nop.n
400874a3:	f03d      	nop.n
400874a5:	f03d      	nop.n
400874a7:	e50331        	l32r	a3, 400808b4 <_init_end+0x4b4>
400874aa:	0a9237        	bne	a2, a3, 400874b8 <xt_set_interrupt_handler+0x50>
400874ad:	020c      	movi.n	a2, 0
400874af:	f01d      	retw.n
400874b1:	020c      	movi.n	a2, 0
400874b3:	f01d      	retw.n
400874b5:	020c00        	andb	b0, b12, b0
400874b8:	f01d      	retw.n
	...

400874bc <prvIsQueueFull>:
400874bc:	004136        	entry	a1, 32
400874bf:	48c232        	addi	a3, a2, 72
400874c2:	20a330        	or	a10, a3, a3
400874c5:	015ca5        	call8	40088a90 <vTaskEnterCritical>
400874c8:	0020c0        	memw
400874cb:	0e2282        	l32i	a8, a2, 56
400874ce:	0f2222        	l32i	a2, a2, 60
400874d1:	059827        	bne	a8, a2, 400874da <prvIsQueueFull+0x1e>
400874d4:	120c      	movi.n	a2, 1
400874d6:	0000c6        	j	400874dd <prvIsQueueFull+0x21>
400874d9:	a02200        	addx4	a2, a2, a0
400874dc:	a33000        	movltz	a3, a0, a0
400874df:	6ee520        	f64rnd	a14, a5, a2, 2
400874e2:	009001        	l32r	a0, 40047724 <lld_evt_get_next_free_slot+0xdf8>
400874e5:	000000        	ill

400874e8 <prvCopyDataToQueue>:
400874e8:	004136        	entry	a1, 32
400874eb:	1022c2        	l32i	a12, a2, 64
400874ee:	010c56        	bnez	a12, 40087502 <prvCopyDataToQueue+0x1a>
400874f1:	002232        	l32i	a3, a2, 0
400874f4:	084356        	bnez	a3, 4008757c <prvCopyDataToQueue+0x94>
400874f7:	0122a2        	l32i	a10, a2, 4
400874fa:	025465        	call8	40089a40 <xTaskPriorityDisinherit>
400874fd:	1239      	s32i.n	a3, a2, 4
400874ff:	0022c6        	j	4008758e <prvCopyDataToQueue+0xa6>
40087502:	84ec      	bnez.n	a4, 4008752e <prvCopyDataToQueue+0x46>
40087504:	03bd      	mov.n	a11, a3
40087506:	22a8      	l32i.n	a10, a2, 8
40087508:	e48f81        	l32r	a8, 40080744 <_init_end+0x344>
4008750b:	0008e0        	callx8	a8
4008750e:	2248      	l32i.n	a4, a2, 8
40087510:	102232        	l32i	a3, a2, 64
40087513:	343a      	add.n	a3, a4, a3
40087515:	2239      	s32i.n	a3, a2, 8
40087517:	f03d      	nop.n
40087519:	f03d      	nop.n
4008751b:	f03d      	nop.n
4008751d:	f03d      	nop.n
4008751f:	1248      	l32i.n	a4, a2, 4
40087521:	5c3347        	bltu	a3, a4, 40087581 <prvCopyDataToQueue+0x99>
40087524:	0238      	l32i.n	a3, a2, 0
40087526:	2239      	s32i.n	a3, a2, 8
40087528:	0a0c      	movi.n	a10, 0
4008752a:	001806        	j	4008758e <prvCopyDataToQueue+0xa6>
4008752d:	03bd00        	lsi	f0, a13, 12
40087530:	0322a2        	l32i	a10, a2, 12
40087533:	e48481        	l32r	a8, 40080744 <_init_end+0x344>
40087536:	0008e0        	callx8	a8
40087539:	102232        	l32i	a3, a2, 64
4008753c:	603030        	neg	a3, a3
4008753f:	3288      	l32i.n	a8, a2, 12
40087541:	883a      	add.n	a8, a8, a3
40087543:	3289      	s32i.n	a8, a2, 12
40087545:	f03d      	nop.n
40087547:	f03d      	nop.n
40087549:	f03d      	nop.n
4008754b:	f03d      	nop.n
4008754d:	0298      	l32i.n	a9, a2, 0
4008754f:	05b897        	bgeu	a8, a9, 40087558 <prvCopyDataToQueue+0x70>
40087552:	1288      	l32i.n	a8, a2, 4
40087554:	383a      	add.n	a3, a8, a3
40087556:	3239      	s32i.n	a3, a2, 12
40087558:	2a2466        	bnei	a4, 2, 40087586 <prvCopyDataToQueue+0x9e>
4008755b:	f03d      	nop.n
4008755d:	f03d      	nop.n
4008755f:	f03d      	nop.n
40087561:	f03d      	nop.n
40087563:	0020c0        	memw
40087566:	e238      	l32i.n	a3, a2, 56
40087568:	03ac      	beqz.n	a3, 4008758c <prvCopyDataToQueue+0xa4>
4008756a:	0020c0        	memw
4008756d:	e238      	l32i.n	a3, a2, 56
4008756f:	330b      	addi.n	a3, a3, -1
40087571:	0020c0        	memw
40087574:	e239      	s32i.n	a3, a2, 56
40087576:	0a0c      	movi.n	a10, 0
40087578:	000486        	j	4008758e <prvCopyDataToQueue+0xa6>
4008757b:	0a0c00        	add.s	f0, f12, f0
4008757e:	000306        	j	4008758e <prvCopyDataToQueue+0xa6>
40087581:	0a0c      	movi.n	a10, 0
40087583:	0001c6        	j	4008758e <prvCopyDataToQueue+0xa6>
40087586:	0a0c      	movi.n	a10, 0
40087588:	000086        	j	4008758e <prvCopyDataToQueue+0xa6>
4008758b:	0a0c00        	add.s	f0, f12, f0
4008758e:	0020c0        	memw
40087591:	e288      	l32i.n	a8, a2, 56
40087593:	881b      	addi.n	a8, a8, 1
40087595:	0020c0        	memw
40087598:	e289      	s32i.n	a8, a2, 56
4008759a:	0a2d      	mov.n	a2, a10
4008759c:	f01d      	retw.n
	...

400875a0 <prvNotifyQueueSetContainer>:
400875a0:	006136        	entry	a1, 48
400875a3:	3129      	s32i.n	a2, a1, 12
400875a5:	f03d      	nop.n
400875a7:	f03d      	nop.n
400875a9:	f03d      	nop.n
400875ab:	f03d      	nop.n
400875ad:	112242        	l32i	a4, a2, 68
400875b0:	34dc      	bnez.n	a4, 400875c7 <prvNotifyQueueSetContainer+0x27>
400875b2:	e4c1d1        	l32r	a13, 400808b8 <_init_end+0x4b8>
400875b5:	e4c1c1        	l32r	a12, 400808bc <_init_end+0x4bc>
400875b8:	e4c2b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400875bb:	e4c2a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400875be:	e3b681        	l32r	a8, 40080498 <_init_end+0x98>
400875c1:	0008e0        	callx8	a8
400875c4:	03da65        	call8	4008b36c <abort>
400875c7:	48c452        	addi	a5, a4, 72
400875ca:	05ad      	mov.n	a10, a5
400875cc:	014c25        	call8	40088a90 <vTaskEnterCritical>
400875cf:	0020c0        	memw
400875d2:	e428      	l32i.n	a2, a4, 56
400875d4:	f488      	l32i.n	a8, a4, 60
400875d6:	143287        	bltu	a2, a8, 400875ee <prvNotifyQueueSetContainer+0x4e>
400875d9:	e4b7d1        	l32r	a13, 400808b8 <_init_end+0x4b8>
400875dc:	e4bbc1        	l32r	a12, 400808c8 <_init_end+0x4c8>
400875df:	e4b8b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400875e2:	e4b8a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400875e5:	e3ac81        	l32r	a8, 40080498 <_init_end+0x98>
400875e8:	0008e0        	callx8	a8
400875eb:	03d825        	call8	4008b36c <abort>
400875ee:	0020c0        	memw
400875f1:	e428      	l32i.n	a2, a4, 56
400875f3:	1ab287        	bgeu	a2, a8, 40087611 <prvNotifyQueueSetContainer+0x71>
400875f6:	03cd      	mov.n	a12, a3
400875f8:	b1cb      	addi.n	a11, a1, 12
400875fa:	20a440        	or	a10, a4, a4
400875fd:	ffeea5        	call8	400874e8 <prvCopyDataToQueue>
40087600:	0a2d      	mov.n	a2, a10
40087602:	9438      	l32i.n	a3, a4, 36
40087604:	039c      	beqz.n	a3, 40087618 <prvNotifyQueueSetContainer+0x78>
40087606:	24c4a2        	addi	a10, a4, 36
40087609:	0215a5        	call8	40089764 <xTaskRemoveFromEventList>
4008760c:	6acc      	bnez.n	a10, 40087616 <prvNotifyQueueSetContainer+0x76>
4008760e:	000186        	j	40087618 <prvNotifyQueueSetContainer+0x78>
40087611:	020c      	movi.n	a2, 0
40087613:	000046        	j	40087618 <prvNotifyQueueSetContainer+0x78>
40087616:	120c      	movi.n	a2, 1
40087618:	05ad      	mov.n	a10, a5
4008761a:	015b65        	call8	40088bd0 <vTaskExitCritical>
4008761d:	f01d      	retw.n
	...

40087620 <prvCopyDataFromQueue>:
40087620:	004136        	entry	a1, 32
40087623:	1022c2        	l32i	a12, a2, 64
40087626:	8cac      	beqz.n	a12, 40087652 <prvCopyDataFromQueue+0x32>
40087628:	3288      	l32i.n	a8, a2, 12
4008762a:	88ca      	add.n	a8, a8, a12
4008762c:	3289      	s32i.n	a8, a2, 12
4008762e:	f03d      	nop.n
40087630:	f03d      	nop.n
40087632:	f03d      	nop.n
40087634:	f03d      	nop.n
40087636:	1298      	l32i.n	a9, a2, 4
40087638:	043897        	bltu	a8, a9, 40087640 <prvCopyDataFromQueue+0x20>
4008763b:	002282        	l32i	a8, a2, 0
4008763e:	3289      	s32i.n	a8, a2, 12
40087640:	f03d      	nop.n
40087642:	f03d      	nop.n
40087644:	f03d      	nop.n
40087646:	f03d      	nop.n
40087648:	32b8      	l32i.n	a11, a2, 12
4008764a:	03ad      	mov.n	a10, a3
4008764c:	e43e81        	l32r	a8, 40080744 <_init_end+0x344>
4008764f:	0008e0        	callx8	a8
40087652:	f01d      	retw.n

40087654 <xQueueGenericReset>:
40087654:	004136        	entry	a1, 32
40087657:	014256        	bnez	a2, 4008766f <xQueueGenericReset+0x1b>
4008765a:	e49cd1        	l32r	a13, 400808cc <_init_end+0x4cc>
4008765d:	0aa1c2        	movi	a12, 0x10a
40087660:	e498b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087663:	e498a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087666:	e38c81        	l32r	a8, 40080498 <_init_end+0x98>
40087669:	0008e0        	callx8	a8
4008766c:	03cfe5        	call8	4008b36c <abort>
4008766f:	051366        	bnei	a3, 1, 40087678 <xQueueGenericReset+0x24>
40087672:	48c2a2        	addi	a10, a2, 72
40087675:	008ee5        	call8	40087f64 <vPortCPUInitializeMutex>
40087678:	48c242        	addi	a4, a2, 72
4008767b:	04ad      	mov.n	a10, a4
4008767d:	014125        	call8	40088a90 <vTaskEnterCritical>
40087680:	02a8      	l32i.n	a10, a2, 0
40087682:	f288      	l32i.n	a8, a2, 60
40087684:	1022b2        	l32i	a11, a2, 64
40087687:	8298b0        	mull	a9, a8, a11
4008768a:	9a9a      	add.n	a9, a10, a9
4008768c:	1299      	s32i.n	a9, a2, 4
4008768e:	090c      	movi.n	a9, 0
40087690:	0020c0        	memw
40087693:	e299      	s32i.n	a9, a2, 56
40087695:	22a9      	s32i.n	a10, a2, 8
40087697:	980b      	addi.n	a9, a8, -1
40087699:	828b90        	mull	a8, a11, a9
4008769c:	8a8a      	add.n	a8, a10, a8
4008769e:	3289      	s32i.n	a8, a2, 12
400876a0:	03ec      	bnez.n	a3, 400876c4 <xQueueGenericReset+0x70>
400876a2:	f03d      	nop.n
400876a4:	f03d      	nop.n
400876a6:	f03d      	nop.n
400876a8:	f03d      	nop.n
400876aa:	4238      	l32i.n	a3, a2, 16
400876ac:	63ac      	beqz.n	a3, 400876d6 <xQueueGenericReset+0x82>
400876ae:	10c2a2        	addi	a10, a2, 16
400876b1:	020b25        	call8	40089764 <xTaskRemoveFromEventList>
400876b4:	1e1a66        	bnei	a10, 1, 400876d6 <xQueueGenericReset+0x82>
400876b7:	03eba0        	rsr.prid	a10
400876ba:	04ada0        	extui	a10, a10, 13, 1
400876bd:	f9b0a5        	call8	400811c8 <esp_crosscore_int_send_yield>
400876c0:	000486        	j	400876d6 <xQueueGenericReset+0x82>
400876c3:	c2a200        	quou	a10, a2, a0
400876c6:	111010        	slli	a1, a0, 15
400876c9:	b7e520        	lsi	f2, a5, 0x2dc
400876cc:	c2a202        	movi	a0, 0x2c2
400876cf:	111024        	lsi	f2, a0, 68
400876d2:	b76520        	lsi	f2, a5, 0x2dc
400876d5:	a44002        	s8i	a0, a0, 164
400876d8:	4f6520        	f64cmph	a6, a5, a2, 4
400876db:	a02201        	l32r	a0, 4006f764 <__udivmoddi4+0xab70>
400876de:	009001        	l32r	a0, 40047920 <lld_evt_get_next_free_slot+0xff4>
400876e1:	000000        	ill

400876e4 <prvInitialiseNewQueue>:
400876e4:	004136        	entry	a1, 32
400876e7:	33cc      	bnez.n	a3, 400876ee <prvInitialiseNewQueue+0xa>
400876e9:	0669      	s32i.n	a6, a6, 0
400876eb:	000046        	j	400876f0 <prvInitialiseNewQueue+0xc>
400876ee:	0649      	s32i.n	a4, a6, 0
400876f0:	f629      	s32i.n	a2, a6, 60
400876f2:	106632        	s32i	a3, a6, 64
400876f5:	1b0c      	movi.n	a11, 1
400876f7:	06ad      	mov.n	a10, a6
400876f9:	fff5a5        	call8	40087654 <xQueueGenericReset>
400876fc:	030c      	movi.n	a3, 0
400876fe:	116632        	s32i	a3, a6, 68
40087701:	f01d      	retw.n
	...

40087704 <xQueueGenericCreate>:
40087704:	004136        	entry	a1, 32
40087707:	744040        	extui	a4, a4, 0, 8
4008770a:	32dc      	bnez.n	a2, 40087721 <xQueueGenericCreate+0x1d>
4008770c:	e471d1        	l32r	a13, 400808d0 <_init_end+0x4d0>
4008770f:	7aa1c2        	movi	a12, 0x17a
40087712:	e46bb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087715:	e46ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087718:	e36081        	l32r	a8, 40080498 <_init_end+0x98>
4008771b:	0008e0        	callx8	a8
4008771e:	03c4e5        	call8	4008b36c <abort>
40087721:	438c      	beqz.n	a3, 40087729 <xQueueGenericCreate+0x25>
40087723:	82a230        	mull	a10, a2, a3
40087726:	000086        	j	4008772c <xQueueGenericCreate+0x28>
40087729:	00a0a2        	movi	a10, 0
4008772c:	50caa2        	addi	a10, a10, 80
4008772f:	e3a081        	l32r	a8, 400805b0 <_init_end+0x1b0>
40087732:	0008e0        	callx8	a8
40087735:	205aa0        	or	a5, a10, a10
40087738:	00da16        	beqz	a10, 40087749 <xQueueGenericCreate+0x45>
4008773b:	0aed      	mov.n	a14, a10
4008773d:	04dd      	mov.n	a13, a4
4008773f:	50cac2        	addi	a12, a10, 80
40087742:	03bd      	mov.n	a11, a3
40087744:	02ad      	mov.n	a10, a2
40087746:	fff9e5        	call8	400876e4 <prvInitialiseNewQueue>
40087749:	052d      	mov.n	a2, a5
4008774b:	f01d      	retw.n
4008774d:	000000        	ill

40087750 <xQueueGetMutexHolder>:
40087750:	004136        	entry	a1, 32
40087753:	48c232        	addi	a3, a2, 72
40087756:	20a330        	or	a10, a3, a3
40087759:	013365        	call8	40088a90 <vTaskEnterCritical>
4008775c:	002282        	l32i	a8, a2, 0
4008775f:	004856        	bnez	a8, 40087767 <xQueueGetMutexHolder+0x17>
40087762:	1228      	l32i.n	a2, a2, 4
40087764:	000086        	j	4008776a <xQueueGetMutexHolder+0x1a>
40087767:	00a022        	movi	a2, 0
4008776a:	20a330        	or	a10, a3, a3
4008776d:	014625        	call8	40088bd0 <vTaskExitCritical>
40087770:	000090        	retw
	...

40087774 <xQueueCreateCountingSemaphore>:
40087774:	004136        	entry	a1, 32
40087777:	014256        	bnez	a2, 4008778f <xQueueCreateCountingSemaphore+0x1b>
4008777a:	e456d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
4008777d:	b2a2c2        	movi	a12, 0x2b2
40087780:	e450b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087783:	e450a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087786:	e34481        	l32r	a8, 40080498 <_init_end+0x98>
40087789:	0008e0        	callx8	a8
4008778c:	03bde5        	call8	4008b36c <abort>
4008778f:	17b237        	bgeu	a2, a3, 400877aa <xQueueCreateCountingSemaphore+0x36>
40087792:	e450d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
40087795:	b3a2c2        	movi	a12, 0x2b3
40087798:	e44ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
4008779b:	e44aa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008779e:	e33e81        	l32r	a8, 40080498 <_init_end+0x98>
400877a1:	0008e0        	callx8	a8
400877a4:	201110        	or	a1, a1, a1
400877a7:	03bc65        	call8	4008b36c <abort>
400877aa:	2c0c      	movi.n	a12, 2
400877ac:	00a0b2        	movi	a11, 0
400877af:	20a220        	or	a10, a2, a2
400877b2:	fff525        	call8	40087704 <xQueueGenericCreate>
400877b5:	3a8c      	beqz.n	a10, 400877bc <xQueueCreateCountingSemaphore+0x48>
400877b7:	0020c0        	memw
400877ba:	ea39      	s32i.n	a3, a10, 56
400877bc:	eadc      	bnez.n	a10, 400877de <xQueueCreateCountingSemaphore+0x6a>
400877be:	f03d      	nop.n
400877c0:	f03d      	nop.n
400877c2:	f03d      	nop.n
400877c4:	f03d      	nop.n
400877c6:	e443d1        	l32r	a13, 400808d4 <_init_end+0x4d4>
400877c9:	c2a2c2        	movi	a12, 0x2c2
400877cc:	e43db1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400877cf:	e43da1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400877d2:	e33181        	l32r	a8, 40080498 <_init_end+0x98>
400877d5:	0008e0        	callx8	a8
400877d8:	201110        	or	a1, a1, a1
400877db:	03b925        	call8	4008b36c <abort>
400877de:	0a2d      	mov.n	a2, a10
400877e0:	f01d      	retw.n
	...

400877e4 <xQueueGenericSend>:
400877e4:	008136        	entry	a1, 64
400877e7:	036142        	s32i	a4, a1, 12
400877ea:	01c256        	bnez	a2, 4008780a <xQueueGenericSend+0x26>
400877ed:	f03d      	nop.n
400877ef:	f03d      	nop.n
400877f1:	f03d      	nop.n
400877f3:	f03d      	nop.n
400877f5:	e438d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
400877f8:	cfa2c2        	movi	a12, 0x2cf
400877fb:	e431b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400877fe:	e431a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087801:	e32581        	l32r	a8, 40080498 <_init_end+0x98>
40087804:	0008e0        	callx8	a8
40087807:	03b665        	call8	4008b36c <abort>
4008780a:	019356        	bnez	a3, 40087827 <xQueueGenericSend+0x43>
4008780d:	102242        	l32i	a4, a2, 64
40087810:	349c      	beqz.n	a4, 40087827 <xQueueGenericSend+0x43>
40087812:	e431d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087815:	d0a2c2        	movi	a12, 0x2d0
40087818:	e42ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
4008781b:	e42aa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008781e:	e31e81        	l32r	a8, 40080498 <_init_end+0x98>
40087821:	0008e0        	callx8	a8
40087824:	03b465        	call8	4008b36c <abort>
40087827:	192566        	bnei	a5, 2, 40087844 <xQueueGenericSend+0x60>
4008782a:	f248      	l32i.n	a4, a2, 60
4008782c:	141426        	beqi	a4, 1, 40087844 <xQueueGenericSend+0x60>
4008782f:	e42ad1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087832:	d1a2c2        	movi	a12, 0x2d1
40087835:	e422b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087838:	e423a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
4008783b:	e31781        	l32r	a8, 40080498 <_init_end+0x98>
4008783e:	0008e0        	callx8	a8
40087841:	03b2a5        	call8	4008b36c <abort>
40087844:	012125        	call8	40088a58 <xTaskGetSchedulerState>
40087847:	7adc      	bnez.n	a10, 40087862 <xQueueGenericSend+0x7e>
40087849:	3148      	l32i.n	a4, a1, 12
4008784b:	949c      	beqz.n	a4, 40087868 <xQueueGenericSend+0x84>
4008784d:	e422d1        	l32r	a13, 400808d8 <_init_end+0x4d8>
40087850:	d4a2c2        	movi	a12, 0x2d4
40087853:	e41bb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087856:	e41ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087859:	e30f81        	l32r	a8, 40080498 <_init_end+0x98>
4008785c:	0008e0        	callx8	a8
4008785f:	03b0e5        	call8	4008b36c <abort>
40087862:	060c      	movi.n	a6, 0
40087864:	0000c6        	j	4008786b <xQueueGenericSend+0x87>
40087867:	a06200        	addx4	a6, a2, a0
4008786a:	c24200        	quou	a4, a2, a0
4008786d:	4048      	l32i.n	a4, a0, 16
4008786f:	e520a4        	lsi	f10, a0, 0x394
40087872:	c00121        	l32r	a2, 40077878 <__udivmoddi4+0x12c84>
40087875:	920020        	lsi	f2, a0, 0x248
40087878:	880e22        	l8ui	a2, a14, 136
4008787b:	3987f2        	lsi	f15, a7, 228
4008787e:	256602        	s32i	a0, a6, 148
40087881:	cd5b      	addi.n	a12, a13, 5
40087883:	03bd05        	call0	4008b454 <panicHandler+0x98>
40087886:	02ad      	mov.n	a10, a2
40087888:	ffc5e5        	call8	400874e8 <prvCopyDataToQueue>
4008788b:	112232        	l32i	a3, a2, 68
4008788e:	639c      	beqz.n	a3, 400878a8 <xQueueGenericSend+0xc4>
40087890:	05bd      	mov.n	a11, a5
40087892:	20a220        	or	a10, a2, a2
40087895:	ffd0a5        	call8	400875a0 <prvNotifyQueueSetContainer>
40087898:	361a66        	bnei	a10, 1, 400878d2 <xQueueGenericSend+0xee>
4008789b:	03eba0        	rsr.prid	a10
4008789e:	04ada0        	extui	a10, a10, 13, 1
400878a1:	f99265        	call8	400811c8 <esp_crosscore_int_send_yield>
400878a4:	000a86        	j	400878d2 <xQueueGenericSend+0xee>
400878a7:	223200        	orb	b3, b2, b0
400878aa:	1609      	s32i.n	a0, a6, 4
400878ac:	a20153        	lsi	f5, a1, 0x288
400878af:	2524c2        	l32i	a12, a4, 148
400878b2:	01eb      	addi.n	a0, a1, 14
400878b4:	1a1a66        	bnei	a10, 1, 400878d2 <xQueueGenericSend+0xee>
400878b7:	03eba0        	rsr.prid	a10
400878ba:	04ada0        	extui	a10, a10, 13, 1
400878bd:	f990a5        	call8	400811c8 <esp_crosscore_int_send_yield>
400878c0:	000386        	j	400878d2 <xQueueGenericSend+0xee>
400878c3:	aa8c00        	floor.s	a8, f12, 0
400878c6:	03eba0        	rsr.prid	a10
400878c9:	04ada0        	extui	a10, a10, 13, 1
400878cc:	201110        	or	a1, a1, a1
400878cf:	f98fa5        	call8	400811c8 <esp_crosscore_int_send_yield>
400878d2:	20a440        	or	a10, a4, a4
400878d5:	012fa5        	call8	40088bd0 <vTaskExitCritical>
400878d8:	01a022        	movi	a2, 1
400878db:	000090        	retw
400878de:	032182        	l32i	a8, a1, 12
400878e1:	00c856        	bnez	a8, 400878f1 <xQueueGenericSend+0x10d>
400878e4:	20a440        	or	a10, a4, a4
400878e7:	012ea5        	call8	40088bd0 <vTaskExitCritical>
400878ea:	020c      	movi.n	a2, 0
400878ec:	f01d      	retw.n
400878ee:	000000        	ill
400878f1:	96cc      	bnez.n	a6, 400878fe <xQueueGenericSend+0x11a>
400878f3:	18c1a2        	addi	a10, a1, 24
400878f6:	201110        	or	a1, a1, a1
400878f9:	010725        	call8	4008896c <vTaskSetTimeOutState>
400878fc:	160c      	movi.n	a6, 1
400878fe:	20a440        	or	a10, a4, a4
40087901:	012ce5        	call8	40088bd0 <vTaskExitCritical>
40087904:	04ad      	mov.n	a10, a4
40087906:	0118a5        	call8	40088a90 <vTaskEnterCritical>
40087909:	0cc1b2        	addi	a11, a1, 12
4008790c:	18c1a2        	addi	a10, a1, 24
4008790f:	01f8e5        	call8	4008989c <xTaskCheckForTimeOut>
40087912:	6aec      	bnez.n	a10, 4008793c <xQueueGenericSend+0x158>
40087914:	02ad      	mov.n	a10, a2
40087916:	ffba65        	call8	400874bc <prvIsQueueFull>
40087919:	7a9c      	beqz.n	a10, 40087934 <xQueueGenericSend+0x150>
4008791b:	31b8      	l32i.n	a11, a1, 12
4008791d:	10c2a2        	addi	a10, a2, 16
40087920:	01d465        	call8	40089668 <vTaskPlaceOnEventList>
40087923:	04ad      	mov.n	a10, a4
40087925:	012aa5        	call8	40088bd0 <vTaskExitCritical>
40087928:	03eba0        	rsr.prid	a10
4008792b:	04ada0        	extui	a10, a10, 13, 1
4008792e:	f989a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087931:	ffcd86        	j	4008786b <xQueueGenericSend+0x87>
40087934:	04ad      	mov.n	a10, a4
40087936:	0129a5        	call8	40088bd0 <vTaskExitCritical>
40087939:	ffcb86        	j	4008786b <xQueueGenericSend+0x87>
4008793c:	20a440        	or	a10, a4, a4
4008793f:	012925        	call8	40088bd0 <vTaskExitCritical>
40087942:	00a022        	movi	a2, 0
40087945:	000090        	retw

40087948 <prvInitialiseMutex>:
40087948:	004136        	entry	a1, 32
4008794b:	019216        	beqz	a2, 40087968 <prvInitialiseMutex+0x20>
4008794e:	00a032        	movi	a3, 0
40087951:	1239      	s32i.n	a3, a2, 4
40087953:	0239      	s32i.n	a3, a2, 0
40087955:	3239      	s32i.n	a3, a2, 12
40087957:	48c2a2        	addi	a10, a2, 72
4008795a:	0060a5        	call8	40087f64 <vPortCPUInitializeMutex>
4008795d:	03dd      	mov.n	a13, a3
4008795f:	03cd      	mov.n	a12, a3
40087961:	03bd      	mov.n	a11, a3
40087963:	02ad      	mov.n	a10, a2
40087965:	ffe7e5        	call8	400877e4 <xQueueGenericSend>
40087968:	f01d      	retw.n
	...

4008796c <xQueueCreateMutex>:
4008796c:	004136        	entry	a1, 32
4008796f:	74c020        	extui	a12, a2, 0, 8
40087972:	00a0b2        	movi	a11, 0
40087975:	01a0a2        	movi	a10, 1
40087978:	ffd8a5        	call8	40087704 <xQueueGenericCreate>
4008797b:	0a2d      	mov.n	a2, a10
4008797d:	fffca5        	call8	40087948 <prvInitialiseMutex>
40087980:	f01d      	retw.n
	...

40087984 <xQueueGiveMutexRecursive>:
40087984:	004136        	entry	a1, 32
40087987:	017256        	bnez	a2, 400879a2 <xQueueGiveMutexRecursive+0x1e>
4008798a:	e3d4d1        	l32r	a13, 400808dc <_init_end+0x4dc>
4008798d:	36a2c2        	movi	a12, 0x236
40087990:	e3ccb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087993:	e3cca1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087996:	e2c081        	l32r	a8, 40080498 <_init_end+0x98>
40087999:	0008e0        	callx8	a8
4008799c:	201110        	or	a1, a1, a1
4008799f:	039ce5        	call8	4008b36c <abort>
400879a2:	012232        	l32i	a3, a2, 4
400879a5:	010025        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400879a8:	1893a7        	bne	a3, a10, 400879c4 <xQueueGiveMutexRecursive+0x40>
400879ab:	032232        	l32i	a3, a2, 12
400879ae:	330b      	addi.n	a3, a3, -1
400879b0:	3239      	s32i.n	a3, a2, 12
400879b2:	23dc      	bnez.n	a3, 400879c8 <xQueueGiveMutexRecursive+0x44>
400879b4:	0d0c      	movi.n	a13, 0
400879b6:	0dcd      	mov.n	a12, a13
400879b8:	0dbd      	mov.n	a11, a13
400879ba:	20a220        	or	a10, a2, a2
400879bd:	ffe265        	call8	400877e4 <xQueueGenericSend>
400879c0:	120c      	movi.n	a2, 1
400879c2:	f01d      	retw.n
400879c4:	020c      	movi.n	a2, 0
400879c6:	f01d      	retw.n
400879c8:	120c      	movi.n	a2, 1
400879ca:	f01d      	retw.n

400879cc <xQueueGenericSendFromISR>:
400879cc:	004136        	entry	a1, 32
400879cf:	014256        	bnez	a2, 400879e7 <xQueueGenericSendFromISR+0x1b>
400879d2:	e3c3d1        	l32r	a13, 400808e0 <_init_end+0x4e0>
400879d5:	85a4c2        	movi	a12, 0x485
400879d8:	e3bab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400879db:	e3baa1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400879de:	e2ae81        	l32r	a8, 40080498 <_init_end+0x98>
400879e1:	0008e0        	callx8	a8
400879e4:	039865        	call8	4008b36c <abort>
400879e7:	019356        	bnez	a3, 40087a04 <xQueueGenericSendFromISR+0x38>
400879ea:	102262        	l32i	a6, a2, 64
400879ed:	369c      	beqz.n	a6, 40087a04 <xQueueGenericSendFromISR+0x38>
400879ef:	e3bcd1        	l32r	a13, 400808e0 <_init_end+0x4e0>
400879f2:	86a4c2        	movi	a12, 0x486
400879f5:	e3b2b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
400879f8:	e3b3a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
400879fb:	e2a781        	l32r	a8, 40080498 <_init_end+0x98>
400879fe:	0008e0        	callx8	a8
40087a01:	0396a5        	call8	4008b36c <abort>
40087a04:	192566        	bnei	a5, 2, 40087a21 <xQueueGenericSendFromISR+0x55>
40087a07:	f268      	l32i.n	a6, a2, 60
40087a09:	141626        	beqi	a6, 1, 40087a21 <xQueueGenericSendFromISR+0x55>
40087a0c:	e3b5d1        	l32r	a13, 400808e0 <_init_end+0x4e0>
40087a0f:	87a4c2        	movi	a12, 0x487
40087a12:	e3abb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087a15:	e3aba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087a18:	e2a081        	l32r	a8, 40080498 <_init_end+0x98>
40087a1b:	0008e0        	callx8	a8
40087a1e:	0394e5        	call8	4008b36c <abort>
40087a21:	006370        	rsil	a7, 3
40087a24:	48c262        	addi	a6, a2, 72
40087a27:	06ad      	mov.n	a10, a6
40087a29:	010665        	call8	40088a90 <vTaskEnterCritical>
40087a2c:	0020c0        	memw
40087a2f:	e298      	l32i.n	a9, a2, 56
40087a31:	f288      	l32i.n	a8, a2, 60
40087a33:	023987        	bltu	a9, a8, 40087a39 <xQueueGenericSendFromISR+0x6d>
40087a36:	3a2566        	bnei	a5, 2, 40087a74 <xQueueGenericSendFromISR+0xa8>
40087a39:	20c550        	or	a12, a5, a5
40087a3c:	20b330        	or	a11, a3, a3
40087a3f:	02ad      	mov.n	a10, a2
40087a41:	ffaa65        	call8	400874e8 <prvCopyDataToQueue>
40087a44:	112232        	l32i	a3, a2, 68
40087a47:	139c      	beqz.n	a3, 40087a5c <xQueueGenericSendFromISR+0x90>
40087a49:	05bd      	mov.n	a11, a5
40087a4b:	02ad      	mov.n	a10, a2
40087a4d:	ffb525        	call8	400875a0 <prvNotifyQueueSetContainer>
40087a50:	251a66        	bnei	a10, 1, 40087a79 <xQueueGenericSendFromISR+0xad>
40087a53:	74ac      	beqz.n	a4, 40087a7e <xQueueGenericSendFromISR+0xb2>
40087a55:	120c      	movi.n	a2, 1
40087a57:	0429      	s32i.n	a2, a4, 0
40087a59:	000d06        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a5c:	092232        	l32i	a3, a2, 36
40087a5f:	021316        	beqz	a3, 40087a84 <xQueueGenericSendFromISR+0xb8>
40087a62:	24c2a2        	addi	a10, a2, 36
40087a65:	01cfe5        	call8	40089764 <xTaskRemoveFromEventList>
40087a68:	01da16        	beqz	a10, 40087a89 <xQueueGenericSendFromISR+0xbd>
40087a6b:	f49c      	beqz.n	a4, 40087a8e <xQueueGenericSendFromISR+0xc2>
40087a6d:	120c      	movi.n	a2, 1
40087a6f:	0429      	s32i.n	a2, a4, 0
40087a71:	000706        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a74:	020c      	movi.n	a2, 0
40087a76:	0005c6        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a79:	120c      	movi.n	a2, 1
40087a7b:	000486        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a7e:	120c      	movi.n	a2, 1
40087a80:	000346        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a83:	120c00        	andbc	b0, b12, b0
40087a86:	0001c6        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a89:	120c      	movi.n	a2, 1
40087a8b:	000086        	j	40087a91 <xQueueGenericSendFromISR+0xc5>
40087a8e:	01a022        	movi	a2, 1
40087a91:	20a660        	or	a10, a6, a6
40087a94:	0113a5        	call8	40088bd0 <vTaskExitCritical>
40087a97:	20a770        	or	a10, a7, a7
40087a9a:	e2ab81        	l32r	a8, 40080548 <_init_end+0x148>
40087a9d:	0008e0        	callx8	a8
40087aa0:	f01d      	retw.n
	...

40087aa4 <xQueueGiveFromISR>:
40087aa4:	004136        	entry	a1, 32
40087aa7:	014256        	bnez	a2, 40087abf <xQueueGiveFromISR+0x1b>
40087aaa:	e38ed1        	l32r	a13, 400808e4 <_init_end+0x4e4>
40087aad:	10a5c2        	movi	a12, 0x510
40087ab0:	e384b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087ab3:	e384a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087ab6:	e27881        	l32r	a8, 40080498 <_init_end+0x98>
40087ab9:	0008e0        	callx8	a8
40087abc:	038ae5        	call8	4008b36c <abort>
40087abf:	102242        	l32i	a4, a2, 64
40087ac2:	349c      	beqz.n	a4, 40087ad9 <xQueueGiveFromISR+0x35>
40087ac4:	e388d1        	l32r	a13, 400808e4 <_init_end+0x4e4>
40087ac7:	13a5c2        	movi	a12, 0x513
40087aca:	e37db1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087acd:	e37da1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087ad0:	e27281        	l32r	a8, 40080498 <_init_end+0x98>
40087ad3:	0008e0        	callx8	a8
40087ad6:	038965        	call8	4008b36c <abort>
40087ad9:	006350        	rsil	a5, 3
40087adc:	48c242        	addi	a4, a2, 72
40087adf:	04ad      	mov.n	a10, a4
40087ae1:	00fae5        	call8	40088a90 <vTaskEnterCritical>
40087ae4:	0020c0        	memw
40087ae7:	e298      	l32i.n	a9, a2, 56
40087ae9:	f288      	l32i.n	a8, a2, 60
40087aeb:	45b987        	bgeu	a9, a8, 40087b34 <xQueueGiveFromISR+0x90>
40087aee:	0020c0        	memw
40087af1:	e288      	l32i.n	a8, a2, 56
40087af3:	881b      	addi.n	a8, a8, 1
40087af5:	0020c0        	memw
40087af8:	e289      	s32i.n	a8, a2, 56
40087afa:	f03d      	nop.n
40087afc:	f03d      	nop.n
40087afe:	f03d      	nop.n
40087b00:	f03d      	nop.n
40087b02:	112282        	l32i	a8, a2, 68
40087b05:	389c      	beqz.n	a8, 40087b1c <xQueueGiveFromISR+0x78>
40087b07:	00a0b2        	movi	a11, 0
40087b0a:	20a220        	or	a10, a2, a2
40087b0d:	ffa925        	call8	400875a0 <prvNotifyQueueSetContainer>
40087b10:	251a66        	bnei	a10, 1, 40087b39 <xQueueGiveFromISR+0x95>
40087b13:	73ac      	beqz.n	a3, 40087b3e <xQueueGiveFromISR+0x9a>
40087b15:	120c      	movi.n	a2, 1
40087b17:	0329      	s32i.n	a2, a3, 0
40087b19:	000d06        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b1c:	092282        	l32i	a8, a2, 36
40087b1f:	021816        	beqz	a8, 40087b44 <xQueueGiveFromISR+0xa0>
40087b22:	24c2a2        	addi	a10, a2, 36
40087b25:	01c3e5        	call8	40089764 <xTaskRemoveFromEventList>
40087b28:	01da16        	beqz	a10, 40087b49 <xQueueGiveFromISR+0xa5>
40087b2b:	f39c      	beqz.n	a3, 40087b4e <xQueueGiveFromISR+0xaa>
40087b2d:	120c      	movi.n	a2, 1
40087b2f:	0329      	s32i.n	a2, a3, 0
40087b31:	000706        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b34:	020c      	movi.n	a2, 0
40087b36:	0005c6        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b39:	120c      	movi.n	a2, 1
40087b3b:	000486        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b3e:	120c      	movi.n	a2, 1
40087b40:	000346        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b43:	120c00        	andbc	b0, b12, b0
40087b46:	0001c6        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b49:	120c      	movi.n	a2, 1
40087b4b:	000086        	j	40087b51 <xQueueGiveFromISR+0xad>
40087b4e:	01a022        	movi	a2, 1
40087b51:	20a440        	or	a10, a4, a4
40087b54:	0107a5        	call8	40088bd0 <vTaskExitCritical>
40087b57:	20a550        	or	a10, a5, a5
40087b5a:	e27b81        	l32r	a8, 40080548 <_init_end+0x148>
40087b5d:	0008e0        	callx8	a8
40087b60:	f01d      	retw.n
	...

40087b64 <xQueueGenericReceive>:
40087b64:	008136        	entry	a1, 64
40087b67:	3149      	s32i.n	a4, a1, 12
40087b69:	b2dc      	bnez.n	a2, 40087b88 <xQueueGenericReceive+0x24>
40087b6b:	f03d      	nop.n
40087b6d:	f03d      	nop.n
40087b6f:	f03d      	nop.n
40087b71:	f03d      	nop.n
40087b73:	e35dd1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087b76:	a2a5c2        	movi	a12, 0x5a2
40087b79:	e351b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087b7c:	e352a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087b7f:	e24681        	l32r	a8, 40080498 <_init_end+0x98>
40087b82:	0008e0        	callx8	a8
40087b85:	037e65        	call8	4008b36c <abort>
40087b88:	83dc      	bnez.n	a3, 40087ba4 <xQueueGenericReceive+0x40>
40087b8a:	102242        	l32i	a4, a2, 64
40087b8d:	349c      	beqz.n	a4, 40087ba4 <xQueueGenericReceive+0x40>
40087b8f:	e356d1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087b92:	a3a5c2        	movi	a12, 0x5a3
40087b95:	e34ab1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087b98:	e34ba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087b9b:	e23f81        	l32r	a8, 40080498 <_init_end+0x98>
40087b9e:	0008e0        	callx8	a8
40087ba1:	037ca5        	call8	4008b36c <abort>
40087ba4:	00eb25        	call8	40088a58 <xTaskGetSchedulerState>
40087ba7:	7adc      	bnez.n	a10, 40087bc2 <xQueueGenericReceive+0x5e>
40087ba9:	3148      	l32i.n	a4, a1, 12
40087bab:	949c      	beqz.n	a4, 40087bc8 <xQueueGenericReceive+0x64>
40087bad:	e34ed1        	l32r	a13, 400808e8 <_init_end+0x4e8>
40087bb0:	a6a5c2        	movi	a12, 0x5a6
40087bb3:	e343b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087bb6:	e343a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087bb9:	e23781        	l32r	a8, 40080498 <_init_end+0x98>
40087bbc:	0008e0        	callx8	a8
40087bbf:	037ae5        	call8	4008b36c <abort>
40087bc2:	060c      	movi.n	a6, 0
40087bc4:	0000c6        	j	40087bcb <xQueueGenericReceive+0x67>
40087bc7:	a06200        	addx4	a6, a2, a0
40087bca:	c24200        	quou	a4, a2, a0
40087bcd:	ad48      	l32i.n	a4, a13, 40
40087bcf:	ebe504        	lsi	f0, a5, 0x3ac
40087bd2:	20c000        	or	a12, a0, a0
40087bd5:	e28800        	remu	a8, a8, a0
40087bd8:	078816        	beqz	a8, 40087c54 <xQueueGenericReceive+0xf0>
40087bdb:	3268      	l32i.n	a6, a2, 12
40087bdd:	03bd      	mov.n	a11, a3
40087bdf:	02ad      	mov.n	a10, a2
40087be1:	ffa3e5        	call8	40087620 <prvCopyDataFromQueue>
40087be4:	03f556        	bnez	a5, 40087c27 <xQueueGenericReceive+0xc3>
40087be7:	0020c0        	memw
40087bea:	e238      	l32i.n	a3, a2, 56
40087bec:	330b      	addi.n	a3, a3, -1
40087bee:	0020c0        	memw
40087bf1:	e239      	s32i.n	a3, a2, 56
40087bf3:	f03d      	nop.n
40087bf5:	f03d      	nop.n
40087bf7:	f03d      	nop.n
40087bf9:	f03d      	nop.n
40087bfb:	0238      	l32i.n	a3, a2, 0
40087bfd:	33cc      	bnez.n	a3, 40087c04 <xQueueGenericReceive+0xa0>
40087bff:	01eea5        	call8	40089ae8 <pvTaskIncrementMutexHeldCount>
40087c02:	12a9      	s32i.n	a10, a2, 4
40087c04:	f03d      	nop.n
40087c06:	f03d      	nop.n
40087c08:	f03d      	nop.n
40087c0a:	f03d      	nop.n
40087c0c:	042232        	l32i	a3, a2, 16
40087c0f:	035316        	beqz	a3, 40087c48 <xQueueGenericReceive+0xe4>
40087c12:	10c2a2        	addi	a10, a2, 16
40087c15:	01b4e5        	call8	40089764 <xTaskRemoveFromEventList>
40087c18:	2c1a66        	bnei	a10, 1, 40087c48 <xQueueGenericReceive+0xe4>
40087c1b:	03eba0        	rsr.prid	a10
40087c1e:	04ada0        	extui	a10, a10, 13, 1
40087c21:	f95a65        	call8	400811c8 <esp_crosscore_int_send_yield>
40087c24:	000806        	j	40087c48 <xQueueGenericReceive+0xe4>
40087c27:	036262        	s32i	a6, a2, 12
40087c2a:	f03d      	nop.n
40087c2c:	f03d      	nop.n
40087c2e:	f03d      	nop.n
40087c30:	f03d      	nop.n
40087c32:	092232        	l32i	a3, a2, 36
40087c35:	f38c      	beqz.n	a3, 40087c48 <xQueueGenericReceive+0xe4>
40087c37:	24c2a2        	addi	a10, a2, 36
40087c3a:	01b2a5        	call8	40089764 <xTaskRemoveFromEventList>
40087c3d:	7a8c      	beqz.n	a10, 40087c48 <xQueueGenericReceive+0xe4>
40087c3f:	03eba0        	rsr.prid	a10
40087c42:	04ada0        	extui	a10, a10, 13, 1
40087c45:	f95825        	call8	400811c8 <esp_crosscore_int_send_yield>
40087c48:	20a440        	or	a10, a4, a4
40087c4b:	00f865        	call8	40088bd0 <vTaskExitCritical>
40087c4e:	01a022        	movi	a2, 1
40087c51:	000090        	retw
40087c54:	032182        	l32i	a8, a1, 12
40087c57:	00a856        	bnez	a8, 40087c65 <xQueueGenericReceive+0x101>
40087c5a:	20a440        	or	a10, a4, a4
40087c5d:	00f725        	call8	40088bd0 <vTaskExitCritical>
40087c60:	020c      	movi.n	a2, 0
40087c62:	f01d      	retw.n
40087c64:	96cc00        	lsi	f0, a12, 0x258
40087c67:	18c1a2        	addi	a10, a1, 24
40087c6a:	201110        	or	a1, a1, a1
40087c6d:	00cfe5        	call8	4008896c <vTaskSetTimeOutState>
40087c70:	160c      	movi.n	a6, 1
40087c72:	04ad      	mov.n	a10, a4
40087c74:	00f5a5        	call8	40088bd0 <vTaskExitCritical>
40087c77:	04ad      	mov.n	a10, a4
40087c79:	00e165        	call8	40088a90 <vTaskEnterCritical>
40087c7c:	b1cb      	addi.n	a11, a1, 12
40087c7e:	18c1a2        	addi	a10, a1, 24
40087c81:	01c1a5        	call8	4008989c <xTaskCheckForTimeOut>
40087c84:	034a56        	bnez	a10, 40087cbc <xQueueGenericReceive+0x158>
40087c87:	20a220        	or	a10, a2, a2
40087c8a:	025aa5        	call8	4008a234 <prvIsQueueEmpty>
40087c8d:	3aac      	beqz.n	a10, 40087cb4 <xQueueGenericReceive+0x150>
40087c8f:	0288      	l32i.n	a8, a2, 0
40087c91:	48cc      	bnez.n	a8, 40087c99 <xQueueGenericReceive+0x135>
40087c93:	0122a2        	l32i	a10, a2, 4
40087c96:	01cc25        	call8	40089958 <vTaskPriorityInherit>
40087c99:	0321b2        	l32i	a11, a1, 12
40087c9c:	24c2a2        	addi	a10, a2, 36
40087c9f:	019ca5        	call8	40089668 <vTaskPlaceOnEventList>
40087ca2:	04ad      	mov.n	a10, a4
40087ca4:	00f2a5        	call8	40088bd0 <vTaskExitCritical>
40087ca7:	03eba0        	rsr.prid	a10
40087caa:	04ada0        	extui	a10, a10, 13, 1
40087cad:	f951a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087cb0:	ffc5c6        	j	40087bcb <xQueueGenericReceive+0x67>
40087cb3:	04ad00        	extui	a10, a0, 13, 1
40087cb6:	00f1a5        	call8	40088bd0 <vTaskExitCritical>
40087cb9:	ffc386        	j	40087bcb <xQueueGenericReceive+0x67>
40087cbc:	20a440        	or	a10, a4, a4
40087cbf:	00f125        	call8	40088bd0 <vTaskExitCritical>
40087cc2:	00a022        	movi	a2, 0
40087cc5:	000090        	retw

40087cc8 <xQueueTakeMutexRecursive>:
40087cc8:	004136        	entry	a1, 32
40087ccb:	017256        	bnez	a2, 40087ce6 <xQueueTakeMutexRecursive+0x1e>
40087cce:	e307d1        	l32r	a13, 400808ec <_init_end+0x4ec>
40087cd1:	6da2c2        	movi	a12, 0x26d
40087cd4:	e2fbb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087cd7:	e2fba1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087cda:	e1ef81        	l32r	a8, 40080498 <_init_end+0x98>
40087cdd:	0008e0        	callx8	a8
40087ce0:	201110        	or	a1, a1, a1
40087ce3:	0368a5        	call8	4008b36c <abort>
40087ce6:	012242        	l32i	a4, a2, 4
40087ce9:	00cbe5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40087cec:	0e94a7        	bne	a4, a10, 40087cfe <xQueueTakeMutexRecursive+0x36>
40087cef:	032232        	l32i	a3, a2, 12
40087cf2:	01c332        	addi	a3, a3, 1
40087cf5:	3239      	s32i.n	a3, a2, 12
40087cf7:	1a0c      	movi.n	a10, 1
40087cf9:	000606        	j	40087d15 <xQueueTakeMutexRecursive+0x4d>
40087cfc:	d20000        	quos	a0, a0, a0
40087cff:	3000a0        	xor	a0, a0, a10
40087d02:	d020c3        	lsi	f12, a0, 0x340
40087d05:	20bd      	lsi	f11, a0, 0
40087d07:	02ad      	mov.n	a10, a2
40087d09:	ffe5a5        	call8	40087b64 <xQueueGenericReceive>
40087d0c:	051a66        	bnei	a10, 1, 40087d15 <xQueueTakeMutexRecursive+0x4d>
40087d0f:	3238      	l32i.n	a3, a2, 12
40087d11:	331b      	addi.n	a3, a3, 1
40087d13:	3239      	s32i.n	a3, a2, 12
40087d15:	0a2d      	mov.n	a2, a10
40087d17:	f01d      	retw.n
40087d19:	000000        	ill

40087d1c <xQueueReceiveFromISR>:
40087d1c:	004136        	entry	a1, 32
40087d1f:	014256        	bnez	a2, 40087d37 <xQueueReceiveFromISR+0x1b>
40087d22:	e2f3d1        	l32r	a13, 400808f0 <_init_end+0x4f0>
40087d25:	50a6c2        	movi	a12, 0x650
40087d28:	e2e6b1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087d2b:	e2e6a1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087d2e:	e1da81        	l32r	a8, 40080498 <_init_end+0x98>
40087d31:	0008e0        	callx8	a8
40087d34:	036365        	call8	4008b36c <abort>
40087d37:	01a356        	bnez	a3, 40087d55 <xQueueReceiveFromISR+0x39>
40087d3a:	102252        	l32i	a5, a2, 64
40087d3d:	014516        	beqz	a5, 40087d55 <xQueueReceiveFromISR+0x39>
40087d40:	e2ecd1        	l32r	a13, 400808f0 <_init_end+0x4f0>
40087d43:	51a6c2        	movi	a12, 0x651
40087d46:	e2deb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087d49:	e2dea1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087d4c:	e1d381        	l32r	a8, 40080498 <_init_end+0x98>
40087d4f:	0008e0        	callx8	a8
40087d52:	0361a5        	call8	4008b36c <abort>
40087d55:	006360        	rsil	a6, 3
40087d58:	48c252        	addi	a5, a2, 72
40087d5b:	20a550        	or	a10, a5, a5
40087d5e:	00d325        	call8	40088a90 <vTaskEnterCritical>
40087d61:	0020c0        	memw
40087d64:	0e2282        	l32i	a8, a2, 56
40087d67:	e8ac      	beqz.n	a8, 40087d99 <xQueueReceiveFromISR+0x7d>
40087d69:	03bd      	mov.n	a11, a3
40087d6b:	02ad      	mov.n	a10, a2
40087d6d:	ff8b25        	call8	40087620 <prvCopyDataFromQueue>
40087d70:	0020c0        	memw
40087d73:	e238      	l32i.n	a3, a2, 56
40087d75:	330b      	addi.n	a3, a3, -1
40087d77:	0020c0        	memw
40087d7a:	e239      	s32i.n	a3, a2, 56
40087d7c:	f03d      	nop.n
40087d7e:	f03d      	nop.n
40087d80:	f03d      	nop.n
40087d82:	f03d      	nop.n
40087d84:	4238      	l32i.n	a3, a2, 16
40087d86:	439c      	beqz.n	a3, 40087d9e <xQueueReceiveFromISR+0x82>
40087d88:	10c2a2        	addi	a10, a2, 16
40087d8b:	019da5        	call8	40089764 <xTaskRemoveFromEventList>
40087d8e:	2a9c      	beqz.n	a10, 40087da4 <xQueueReceiveFromISR+0x88>
40087d90:	549c      	beqz.n	a4, 40087da9 <xQueueReceiveFromISR+0x8d>
40087d92:	120c      	movi.n	a2, 1
40087d94:	0429      	s32i.n	a2, a4, 0
40087d96:	000446        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087d99:	020c      	movi.n	a2, 0
40087d9b:	000306        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087d9e:	120c      	movi.n	a2, 1
40087da0:	0001c6        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087da3:	120c00        	andbc	b0, b12, b0
40087da6:	000046        	j	40087dab <xQueueReceiveFromISR+0x8f>
40087da9:	120c      	movi.n	a2, 1
40087dab:	05ad      	mov.n	a10, a5
40087dad:	00e225        	call8	40088bd0 <vTaskExitCritical>
40087db0:	06ad      	mov.n	a10, a6
40087db2:	e1e581        	l32r	a8, 40080548 <_init_end+0x148>
40087db5:	0008e0        	callx8	a8
40087db8:	f01d      	retw.n
	...

40087dbc <vQueueDelete>:
40087dbc:	004136        	entry	a1, 32
40087dbf:	017256        	bnez	a2, 40087dda <vQueueDelete+0x1e>
40087dc2:	e2ccd1        	l32r	a13, 400808f4 <_init_end+0x4f4>
40087dc5:	04a7c2        	movi	a12, 0x704
40087dc8:	e2beb1        	l32r	a11, 400808c0 <_init_end+0x4c0>
40087dcb:	e2bea1        	l32r	a10, 400808c4 <_init_end+0x4c4>
40087dce:	e1b281        	l32r	a8, 40080498 <_init_end+0x98>
40087dd1:	0008e0        	callx8	a8
40087dd4:	201110        	or	a1, a1, a1
40087dd7:	035965        	call8	4008b36c <abort>
40087dda:	02ad      	mov.n	a10, a2
40087ddc:	e28281        	l32r	a8, 400807e4 <_init_end+0x3e4>
40087ddf:	0008e0        	callx8	a8
40087de2:	f01d      	retw.n

40087de4 <vQueueWaitForMessageRestricted>:
40087de4:	004136        	entry	a1, 32
40087de7:	48c242        	addi	a4, a2, 72
40087dea:	20a440        	or	a10, a4, a4
40087ded:	00ca25        	call8	40088a90 <vTaskEnterCritical>
40087df0:	0020c0        	memw
40087df3:	0e2282        	l32i	a8, a2, 56
40087df6:	68cc      	bnez.n	a8, 40087e00 <vQueueWaitForMessageRestricted+0x1c>
40087df8:	03bd      	mov.n	a11, a3
40087dfa:	24c2a2        	addi	a10, a2, 36
40087dfd:	018fa5        	call8	400896f8 <vTaskPlaceOnEventListRestricted>
40087e00:	04ad      	mov.n	a10, a4
40087e02:	00dce5        	call8	40088bd0 <vTaskExitCritical>
40087e05:	f01d      	retw.n
	...

40087e08 <_xt_tick_divisor_init>:
40087e08:	004136        	entry	a1, 32
40087e0b:	f92ce5        	call8	400810d8 <esp_clk_cpu_freq>
40087e0e:	e2ba81        	l32r	a8, 400808f8 <_init_end+0x4f8>
40087e11:	b28a80        	mulsh	a8, a10, a8
40087e14:	218680        	srai	a8, a8, 6
40087e17:	31afa0        	srai	a10, a10, 31
40087e1a:	c0a8a0        	sub	a10, a8, a10
40087e1d:	e2b781        	l32r	a8, 400808fc <_init_end+0x4fc>
40087e20:	08a9      	s32i.n	a10, a8, 0
40087e22:	f01d      	retw.n

40087e24 <vPortTaskWrapper>:
40087e24:	004136        	entry	a1, 32
40087e27:	03ad      	mov.n	a10, a3
40087e29:	0002e0        	callx8	a2
40087e2c:	0a0c      	movi.n	a10, 0
40087e2e:	00bb65        	call8	400889e4 <pcTaskGetTaskName>
40087e31:	0a2d      	mov.n	a2, a10
40087e33:	fbefe5        	call8	40083d30 <esp_log_timestamp>
40087e36:	e2b2b1        	l32r	a11, 40080900 <_init_end+0x500>
40087e39:	02fd      	mov.n	a15, a2
40087e3b:	0bed      	mov.n	a14, a11
40087e3d:	0add      	mov.n	a13, a10
40087e3f:	e2b1c1        	l32r	a12, 40080904 <_init_end+0x504>
40087e42:	1a0c      	movi.n	a10, 1
40087e44:	fbd725        	call8	40083bb8 <esp_log_write>
40087e47:	035265        	call8	4008b36c <abort>
	...

40087e4c <pxPortInitialiseStack>:
40087e4c:	004136        	entry	a1, 32
40087e4f:	025d      	mov.n	a5, a2
40087e51:	e2aec1        	l32r	a12, 4008090c <_init_end+0x50c>
40087e54:	e2ad21        	l32r	a2, 40080908 <_init_end+0x508>
40087e57:	c0c2c0        	sub	a12, a2, a12
40087e5a:	ccfb      	addi.n	a12, a12, 15
40087e5c:	077c      	movi.n	a7, -16
40087e5e:	10cc70        	and	a12, a12, a7
40087e61:	251b      	addi.n	a2, a5, 1
40087e63:	c022c0        	sub	a2, a2, a12
40087e66:	e0ae62        	movi	a6, 0xfffffee0
40087e69:	226a      	add.n	a2, a2, a6
40087e6b:	102270        	and	a2, a2, a7
40087e6e:	028d      	mov.n	a8, a2
40087e70:	000286        	j	40087e7e <pxPortInitialiseStack+0x32>
40087e73:	090c00        	l32e	a0, a12, -64
40087e76:	004892        	s8i	a9, a8, 0
40087e79:	0020c0        	memw
40087e7c:	881b      	addi.n	a8, a8, 1
40087e7e:	f2b587        	bgeu	a5, a8, 40087e74 <pxPortInitialiseStack+0x28>
40087e81:	f03d      	nop.n
40087e83:	f03d      	nop.n
40087e85:	f03d      	nop.n
40087e87:	e2a261        	l32r	a6, 40080910 <_init_end+0x510>
40087e8a:	1269      	s32i.n	a6, a2, 4
40087e8c:	060c      	movi.n	a6, 0
40087e8e:	3269      	s32i.n	a6, a2, 12
40087e90:	c0a072        	movi	a7, 192
40087e93:	727a      	add.n	a7, a2, a7
40087e95:	4279      	s32i.n	a7, a2, 16
40087e97:	f03d      	nop.n
40087e99:	f03d      	nop.n
40087e9b:	f03d      	nop.n
40087e9d:	f03d      	nop.n
40087e9f:	e20771        	l32r	a7, 400806bc <_init_end+0x2bc>
40087ea2:	0279      	s32i.n	a7, a2, 0
40087ea4:	9239      	s32i.n	a3, a2, 36
40087ea6:	a249      	s32i.n	a4, a2, 40
40087ea8:	f03d      	nop.n
40087eaa:	f03d      	nop.n
40087eac:	f03d      	nop.n
40087eae:	f03d      	nop.n
40087eb0:	e29931        	l32r	a3, 40080914 <_init_end+0x514>
40087eb3:	2239      	s32i.n	a3, a2, 8
40087eb5:	c035c0        	sub	a3, a5, a12
40087eb8:	a0c332        	addi	a3, a3, -96
40087ebb:	047c      	movi.n	a4, -16
40087ebd:	103340        	and	a3, a3, a4
40087ec0:	e29371        	l32r	a7, 4008090c <_init_end+0x50c>
40087ec3:	07bd      	mov.n	a11, a7
40087ec5:	03ad      	mov.n	a10, a3
40087ec7:	e21f81        	l32r	a8, 40080744 <_init_end+0x344>
40087eca:	0008e0        	callx8	a8
40087ecd:	c03370        	sub	a3, a3, a7
40087ed0:	e29271        	l32r	a7, 40080918 <_init_end+0x518>
40087ed3:	774a      	add.n	a7, a7, a4
40087ed5:	373a      	add.n	a3, a7, a3
40087ed7:	1c6232        	s32i	a3, a2, 112
40087eda:	a0c552        	addi	a5, a5, -96
40087edd:	105540        	and	a5, a5, a4
40087ee0:	0569      	s32i.n	a6, a5, 0
40087ee2:	1569      	s32i.n	a6, a5, 4
40087ee4:	45fb      	addi.n	a4, a5, 15
40087ee6:	c37c      	movi.n	a3, -4
40087ee8:	103430        	and	a3, a4, a3
40087eeb:	2539      	s32i.n	a3, a5, 8
40087eed:	f01d      	retw.n
	...

40087ef0 <xPortStartScheduler>:
40087ef0:	004136        	entry	a1, 32
40087ef3:	020f25        	call8	40089fe4 <_xt_coproc_init>
40087ef6:	fff125        	call8	40087e08 <_xt_tick_divisor_init>
40087ef9:	022425        	call8	4008a13c <_frxt_tick_timer_init>
40087efc:	03eb80        	rsr.prid	a8
40087eff:	048d80        	extui	a8, a8, 13, 1
40087f02:	e15021        	l32r	a2, 40080444 <_init_end+0x44>
40087f05:	a08820        	addx4	a8, a8, a2
40087f08:	120c      	movi.n	a2, 1
40087f0a:	006822        	s32i	a2, a8, 0
40087f0d:	022445        	call0	4008a154 <_frxt_dispatch>
40087f10:	f01d      	retw.n
	...

40087f14 <xPortSysTickHandler>:
40087f14:	004136        	entry	a1, 32
40087f17:	0140a5        	call8	40089320 <xTaskIncrementTick>
40087f1a:	0a2d      	mov.n	a2, a10
40087f1c:	002a16        	beqz	a10, 40087f22 <xPortSysTickHandler+0xe>
40087f1f:	021465        	call8	4008a064 <_frxt_setup_switch>
40087f22:	f01d      	retw.n

40087f24 <vPortYieldOtherCore>:
40087f24:	004136        	entry	a1, 32
40087f27:	02ad      	mov.n	a10, a2
40087f29:	f929e5        	call8	400811c8 <esp_crosscore_int_send_yield>
40087f2c:	f01d      	retw.n
	...

40087f30 <vPortReleaseTaskMPUSettings>:
40087f30:	004136        	entry	a1, 32
40087f33:	02a8      	l32i.n	a10, a2, 0
40087f35:	020c25        	call8	40089ff8 <_xt_coproc_release>
40087f38:	f01d      	retw.n
	...

40087f3c <xPortInIsrContext>:
40087f3c:	004136        	entry	a1, 32
40087f3f:	0063a0        	rsil	a10, 3
40087f42:	03eb20        	rsr.prid	a2
40087f45:	042d20        	extui	a2, a2, 13, 1
40087f48:	e1d881        	l32r	a8, 400806a8 <_init_end+0x2a8>
40087f4b:	a02280        	addx4	a2, a2, a8
40087f4e:	0288      	l32i.n	a8, a2, 0
40087f50:	020c      	movi.n	a2, 0
40087f52:	190c      	movi.n	a9, 1
40087f54:	932980        	movnez	a2, a9, a8
40087f57:	742020        	extui	a2, a2, 0, 8
40087f5a:	e17b81        	l32r	a8, 40080548 <_init_end+0x148>
40087f5d:	0008e0        	callx8	a8
40087f60:	f01d      	retw.n
	...

40087f64 <vPortCPUInitializeMutex>:
40087f64:	004136        	entry	a1, 32
40087f67:	e26d81        	l32r	a8, 4008091c <_init_end+0x51c>
40087f6a:	0289      	s32i.n	a8, a2, 0
40087f6c:	080c      	movi.n	a8, 0
40087f6e:	1289      	s32i.n	a8, a2, 4
40087f70:	f01d      	retw.n
	...

40087f74 <vPortCPUReleaseMutex>:
40087f74:	004136        	entry	a1, 32
40087f77:	0063a0        	rsil	a10, 3
40087f7a:	e23981        	l32r	a8, 40080860 <_init_end+0x460>
40087f7d:	828a      	add.n	a8, a2, a8
40087f7f:	e23991        	l32r	a9, 40080864 <_init_end+0x464>
40087f82:	463987        	bltu	a9, a8, 40087fcc <vPortCPUReleaseMutex+0x58>
40087f85:	03eb80        	rsr.prid	a8
40087f88:	0298      	l32i.n	a9, a2, 0
40087f8a:	0e1987        	beq	a9, a8, 40087f9c <vPortCPUReleaseMutex+0x28>
40087f8d:	e264d1        	l32r	a13, 40080920 <_init_end+0x520>
40087f90:	e265c1        	l32r	a12, 40080924 <_init_end+0x524>
40087f93:	9da0b2        	movi	a11, 157
40087f96:	e264a1        	l32r	a10, 40080928 <_init_end+0x528>
40087f99:	52f3e5        	call8	400daed8 <__assert_func>
40087f9c:	1288      	l32i.n	a8, a2, 4
40087f9e:	880b      	addi.n	a8, a8, -1
40087fa0:	1289      	s32i.n	a8, a2, 4
40087fa2:	e8cc      	bnez.n	a8, 40087fb4 <vPortCPUReleaseMutex+0x40>
40087fa4:	f03d      	nop.n
40087fa6:	f03d      	nop.n
40087fa8:	f03d      	nop.n
40087faa:	f03d      	nop.n
40087fac:	e25c81        	l32r	a8, 4008091c <_init_end+0x51c>
40087faf:	0289      	s32i.n	a8, a2, 0
40087fb1:	001806        	j	40088015 <vPortCPUReleaseMutex+0xa1>
40087fb4:	ffa022        	movi	a2, 255
40087fb7:	5ab287        	bgeu	a2, a8, 40088015 <vPortCPUReleaseMutex+0xa1>
40087fba:	e25cd1        	l32r	a13, 4008092c <_init_end+0x52c>
40087fbd:	e259c1        	l32r	a12, 40080924 <_init_end+0x524>
40087fc0:	a3a0b2        	movi	a11, 163
40087fc3:	e259a1        	l32r	a10, 40080928 <_init_end+0x528>
40087fc6:	201110        	or	a1, a1, a1
40087fc9:	52f0e5        	call8	400daed8 <__assert_func>
40087fcc:	03eb80        	rsr.prid	a8
40087fcf:	0298      	l32i.n	a9, a2, 0
40087fd1:	111987        	beq	a9, a8, 40087fe6 <vPortCPUReleaseMutex+0x72>
40087fd4:	e253d1        	l32r	a13, 40080920 <_init_end+0x520>
40087fd7:	e256c1        	l32r	a12, 40080930 <_init_end+0x530>
40087fda:	9da0b2        	movi	a11, 157
40087fdd:	e252a1        	l32r	a10, 40080928 <_init_end+0x528>
40087fe0:	201110        	or	a1, a1, a1
40087fe3:	52ef65        	call8	400daed8 <__assert_func>
40087fe6:	1288      	l32i.n	a8, a2, 4
40087fe8:	880b      	addi.n	a8, a8, -1
40087fea:	1289      	s32i.n	a8, a2, 4
40087fec:	08dc      	bnez.n	a8, 40088000 <vPortCPUReleaseMutex+0x8c>
40087fee:	f03d      	nop.n
40087ff0:	f03d      	nop.n
40087ff2:	f03d      	nop.n
40087ff4:	f03d      	nop.n
40087ff6:	e24981        	l32r	a8, 4008091c <_init_end+0x51c>
40087ff9:	0289      	s32i.n	a8, a2, 0
40087ffb:	000586        	j	40088015 <vPortCPUReleaseMutex+0xa1>
40087ffe:	220000        	orb	b0, b0, b0
40088001:	87ffa0        	lsi	f10, a15, 0x21c
40088004:	d10eb2        	l8ui	a11, a14, 209
40088007:	e249      	s32i.n	a4, a2, 56
40088009:	e249c1        	l32r	a12, 40080930 <_init_end+0x530>
4008800c:	a3a0b2        	movi	a11, 163
4008800f:	e246a1        	l32r	a10, 40080928 <_init_end+0x528>
40088012:	52ec65        	call8	400daed8 <__assert_func>
40088015:	e14c81        	l32r	a8, 40080548 <_init_end+0x148>
40088018:	0008e0        	callx8	a8
4008801b:	f01d      	retw.n
4008801d:	000000        	ill

40088020 <vPortSetStackWatchpoint>:
40088020:	004136        	entry	a1, 32
40088023:	1fc2b2        	addi	a11, a2, 31
40088026:	e195d1        	l32r	a13, 4008067c <_init_end+0x27c>
40088029:	20a0c2        	movi	a12, 32
4008802c:	e0af82        	movi	a8, -32
4008802f:	10bb80        	and	a11, a11, a8
40088032:	01a0a2        	movi	a10, 1
40088035:	035b25        	call8	4008b5e8 <esp_set_watchpoint>
40088038:	f01d      	retw.n
	...

4008803c <uxPortCompareSetExtram>:
4008803c:	006136        	entry	a1, 48
4008803f:	e20951        	l32r	a5, 40080864 <_init_end+0x464>
40088042:	e24461        	l32r	a6, 40080954 <_init_end+0x554>
40088045:	02b567        	bgeu	a5, a6, 4008804b <uxPortCompareSetExtram+0xf>
40088048:	002346        	j	400880d9 <uxPortCompareSetExtram+0x9d>
4008804b:	03eb50        	rsr.prid	a5
4008804e:	e23a61        	l32r	a6, 40080938 <_init_end+0x538>
40088051:	306560        	xor	a6, a5, a6
40088054:	036152        	s32i	a5, a1, 12
40088057:	0cc1c2        	addi	a12, a1, 12
4008805a:	f03d      	nop.n
4008805c:	f03d      	nop.n
4008805e:	0020f0        	nop
40088061:	e22eb1        	l32r	a11, 4008091c <_init_end+0x51c>
40088064:	e234a1        	l32r	a10, 40080934 <_init_end+0x534>
40088067:	fffd65        	call8	4008803c <uxPortCompareSetExtram>
4008806a:	032182        	l32i	a8, a1, 12
4008806d:	e31867        	beq	a8, a6, 40088054 <uxPortCompareSetExtram+0x18>
40088070:	141587        	beq	a5, a8, 40088088 <uxPortCompareSetExtram+0x4c>
40088073:	e22a51        	l32r	a5, 4008091c <_init_end+0x51c>
40088076:	0e1857        	beq	a8, a5, 40088088 <uxPortCompareSetExtram+0x4c>
40088079:	e230d1        	l32r	a13, 4008093c <_init_end+0x53c>
4008807c:	e231c1        	l32r	a12, 40080940 <_init_end+0x540>
4008807f:	69a0b2        	movi	a11, 105
40088082:	e229a1        	l32r	a10, 40080928 <_init_end+0x528>
40088085:	52e525        	call8	400daed8 <__assert_func>
40088088:	e22f51        	l32r	a5, 40080944 <_init_end+0x544>
4008808b:	808850        	add	a8, a8, a5
4008808e:	01a052        	movi	a5, 1
40088091:	00a072        	movi	a7, 0
40088094:	079d      	mov.n	a9, a7
40088096:	939580        	movnez	a9, a5, a8
40088099:	748090        	extui	a8, a9, 0, 8
4008809c:	e22661        	l32r	a6, 40080934 <_init_end+0x534>
4008809f:	1668      	l32i.n	a6, a6, 4
400880a1:	935760        	movnez	a5, a7, a6
400880a4:	745050        	extui	a5, a5, 0, 8
400880a7:	0e9857        	bne	a8, a5, 400880b9 <uxPortCompareSetExtram+0x7d>
400880aa:	e227d1        	l32r	a13, 40080948 <_init_end+0x548>
400880ad:	e224c1        	l32r	a12, 40080940 <_init_end+0x540>
400880b0:	6aa0b2        	movi	a11, 106
400880b3:	e21da1        	l32r	a10, 40080928 <_init_end+0x528>
400880b6:	52e225        	call8	400daed8 <__assert_func>
400880b9:	fea052        	movi	a5, 254
400880bc:	0eb567        	bgeu	a5, a6, 400880ce <uxPortCompareSetExtram+0x92>
400880bf:	e223d1        	l32r	a13, 4008094c <_init_end+0x54c>
400880c2:	e21fc1        	l32r	a12, 40080940 <_init_end+0x540>
400880c5:	6ba0b2        	movi	a11, 107
400880c8:	e218a1        	l32r	a10, 40080928 <_init_end+0x528>
400880cb:	52e0e5        	call8	400daed8 <__assert_func>
400880ce:	661b      	addi.n	a6, a6, 1
400880d0:	e21951        	l32r	a5, 40080934 <_init_end+0x534>
400880d3:	1569      	s32i.n	a6, a5, 4
400880d5:	001f86        	j	40088157 <uxPortCompareSetExtram+0x11b>
400880d8:	eb6000        	f64cmpl	a6, a0, a0
400880db:	179103        	lsi	f0, a1, 92
400880de:	9690e2        	l16si	a14, a0, 0x12c
400880e1:	566030        	lsi	f3, a0, 0x158
400880e4:	0d8120        	lsi	f2, a1, 52
400880e7:	1371e2        	lsi	f14, a1, 76
400880ea:	0c80e2        	lsi	f14, a0, 48
400880ed:	e75213        	lsi	f1, a2, 0x39c
400880f0:	195700        	lsi	f0, a7, 100
400880f3:	57ed      	lsi	f14, a7, 28
400880f5:	871116        	beqz	a1, 4008796a <prvInitialiseMutex+0x22>
400880f8:	d10e15        	call4	400591dc <__smakebuf_r+0xd4>
400880fb:	c1e210        	mul16u	a14, a2, a1
400880fe:	b2e214        	lsi	f1, a2, 0x2c8
40088101:	a169a0        	lsi	f10, a9, 0x284
40088104:	e209      	s32i.n	a0, a2, 56
40088106:	52dd25        	call8	400daed8 <__assert_func>
40088109:	e20e61        	l32r	a6, 40080944 <_init_end+0x544>
4008810c:	805560        	add	a5, a5, a6
4008810f:	160c      	movi.n	a6, 1
40088111:	080c      	movi.n	a8, 0
40088113:	089d      	mov.n	a9, a8
40088115:	939650        	movnez	a9, a6, a5
40088118:	745090        	extui	a5, a9, 0, 8
4008811b:	e20671        	l32r	a7, 40080934 <_init_end+0x534>
4008811e:	1778      	l32i.n	a7, a7, 4
40088120:	936870        	movnez	a6, a8, a7
40088123:	746060        	extui	a6, a6, 0, 8
40088126:	0e9567        	bne	a5, a6, 40088138 <uxPortCompareSetExtram+0xfc>
40088129:	e207d1        	l32r	a13, 40080948 <_init_end+0x548>
4008812c:	e209c1        	l32r	a12, 40080950 <_init_end+0x550>
4008812f:	6aa0b2        	movi	a11, 106
40088132:	e1fda1        	l32r	a10, 40080928 <_init_end+0x528>
40088135:	52da25        	call8	400daed8 <__assert_func>
40088138:	fea052        	movi	a5, 254
4008813b:	11b577        	bgeu	a5, a7, 40088150 <uxPortCompareSetExtram+0x114>
4008813e:	e203d1        	l32r	a13, 4008094c <_init_end+0x54c>
40088141:	e203c1        	l32r	a12, 40080950 <_init_end+0x550>
40088144:	6ba0b2        	movi	a11, 107
40088147:	e1f8a1        	l32r	a10, 40080928 <_init_end+0x528>
4008814a:	201110        	or	a1, a1, a1
4008814d:	52d8a5        	call8	400daed8 <__assert_func>
40088150:	771b      	addi.n	a7, a7, 1
40088152:	e1f851        	l32r	a5, 40080934 <_init_end+0x534>
40088155:	1579      	s32i.n	a7, a5, 4
40088157:	f03d      	nop.n
40088159:	f03d      	nop.n
4008815b:	f03d      	nop.n
4008815d:	f03d      	nop.n
4008815f:	0020c0        	memw
40088162:	0258      	l32i.n	a5, a2, 0
40088164:	069537        	bne	a5, a3, 4008816e <uxPortCompareSetExtram+0x132>
40088167:	0438      	l32i.n	a3, a4, 0
40088169:	0020c0        	memw
4008816c:	0239      	s32i.n	a3, a2, 0
4008816e:	0459      	s32i.n	a5, a4, 0
40088170:	f03d      	nop.n
40088172:	f03d      	nop.n
40088174:	f03d      	nop.n
40088176:	0020f0        	nop
40088179:	e1ba21        	l32r	a2, 40080864 <_init_end+0x464>
4008817c:	e1f631        	l32r	a3, 40080954 <_init_end+0x554>
4008817f:	4b3237        	bltu	a2, a3, 400881ce <uxPortCompareSetExtram+0x192>
40088182:	03eb20        	rsr.prid	a2
40088185:	e1eb31        	l32r	a3, 40080934 <_init_end+0x534>
40088188:	0338      	l32i.n	a3, a3, 0
4008818a:	0e1327        	beq	a3, a2, 4008819c <uxPortCompareSetExtram+0x160>
4008818d:	e1e4d1        	l32r	a13, 40080920 <_init_end+0x520>
40088190:	e1e5c1        	l32r	a12, 40080924 <_init_end+0x524>
40088193:	9da0b2        	movi	a11, 157
40088196:	e1e4a1        	l32r	a10, 40080928 <_init_end+0x528>
40088199:	52d3e5        	call8	400daed8 <__assert_func>
4008819c:	e1e631        	l32r	a3, 40080934 <_init_end+0x534>
4008819f:	1328      	l32i.n	a2, a3, 4
400881a1:	220b      	addi.n	a2, a2, -1
400881a3:	1329      	s32i.n	a2, a3, 4
400881a5:	02dc      	bnez.n	a2, 400881b9 <uxPortCompareSetExtram+0x17d>
400881a7:	f03d      	nop.n
400881a9:	f03d      	nop.n
400881ab:	f03d      	nop.n
400881ad:	f03d      	nop.n
400881af:	e1db31        	l32r	a3, 4008091c <_init_end+0x51c>
400881b2:	e1e021        	l32r	a2, 40080934 <_init_end+0x534>
400881b5:	0239      	s32i.n	a3, a2, 0
400881b7:	f01d      	retw.n
400881b9:	ffa032        	movi	a3, 255
400881bc:	5db327        	bgeu	a3, a2, 4008821d <uxPortCompareSetExtram+0x1e1>
400881bf:	e1dbd1        	l32r	a13, 4008092c <_init_end+0x52c>
400881c2:	e1d8c1        	l32r	a12, 40080924 <_init_end+0x524>
400881c5:	a3a0b2        	movi	a11, 163
400881c8:	e1d8a1        	l32r	a10, 40080928 <_init_end+0x528>
400881cb:	52d0e5        	call8	400daed8 <__assert_func>
400881ce:	03eb20        	rsr.prid	a2
400881d1:	e1d831        	l32r	a3, 40080934 <_init_end+0x534>
400881d4:	002332        	l32i	a3, a3, 0
400881d7:	0e1327        	beq	a3, a2, 400881e9 <uxPortCompareSetExtram+0x1ad>
400881da:	e1d1d1        	l32r	a13, 40080920 <_init_end+0x520>
400881dd:	e1d4c1        	l32r	a12, 40080930 <_init_end+0x530>
400881e0:	9da0b2        	movi	a11, 157
400881e3:	e1d1a1        	l32r	a10, 40080928 <_init_end+0x528>
400881e6:	52cf25        	call8	400daed8 <__assert_func>
400881e9:	e1d231        	l32r	a3, 40080934 <_init_end+0x534>
400881ec:	012322        	l32i	a2, a3, 4
400881ef:	220b      	addi.n	a2, a2, -1
400881f1:	1329      	s32i.n	a2, a3, 4
400881f3:	12dc      	bnez.n	a2, 40088208 <uxPortCompareSetExtram+0x1cc>
400881f5:	f03d      	nop.n
400881f7:	f03d      	nop.n
400881f9:	f03d      	nop.n
400881fb:	f03d      	nop.n
400881fd:	e1c731        	l32r	a3, 4008091c <_init_end+0x51c>
40088200:	e1cd21        	l32r	a2, 40080934 <_init_end+0x534>
40088203:	0239      	s32i.n	a3, a2, 0
40088205:	f01d      	retw.n
40088207:	a03200        	addx4	a3, a2, a0
4008820a:	ff          	.byte 0xff
4008820b:	0eb327        	bgeu	a3, a2, 4008821d <uxPortCompareSetExtram+0x1e1>
4008820e:	e1c7d1        	l32r	a13, 4008092c <_init_end+0x52c>
40088211:	e1c7c1        	l32r	a12, 40080930 <_init_end+0x530>
40088214:	a3a0b2        	movi	a11, 163
40088217:	e1c4a1        	l32r	a10, 40080928 <_init_end+0x528>
4008821a:	52cbe5        	call8	400daed8 <__assert_func>
4008821d:	f01d      	retw.n
	...

40088220 <vPortCPUAcquireMutex>:
40088220:	006136        	entry	a1, 48
40088223:	006340        	rsil	a4, 3
40088226:	e18e31        	l32r	a3, 40080860 <_init_end+0x460>
40088229:	323a      	add.n	a3, a2, a3
4008822b:	e18e51        	l32r	a5, 40080864 <_init_end+0x464>
4008822e:	02b537        	bgeu	a5, a3, 40088234 <vPortCPUAcquireMutex+0x14>
40088231:	002006        	j	400882b5 <vPortCPUAcquireMutex+0x95>
40088234:	03eb30        	rsr.prid	a3
40088237:	e1c051        	l32r	a5, 40080938 <_init_end+0x538>
4008823a:	305350        	xor	a5, a3, a5
4008823d:	036132        	s32i	a3, a1, 12
40088240:	c1cb      	addi.n	a12, a1, 12
40088242:	f03d      	nop.n
40088244:	f03d      	nop.n
40088246:	f03d      	nop.n
40088248:	e1b5b1        	l32r	a11, 4008091c <_init_end+0x51c>
4008824b:	02ad      	mov.n	a10, a2
4008824d:	ffdee5        	call8	4008803c <uxPortCompareSetExtram>
40088250:	3188      	l32i.n	a8, a1, 12
40088252:	e71857        	beq	a8, a5, 4008823d <vPortCPUAcquireMutex+0x1d>
40088255:	141387        	beq	a3, a8, 4008826d <vPortCPUAcquireMutex+0x4d>
40088258:	e1b131        	l32r	a3, 4008091c <_init_end+0x51c>
4008825b:	0e1837        	beq	a8, a3, 4008826d <vPortCPUAcquireMutex+0x4d>
4008825e:	e1b7d1        	l32r	a13, 4008093c <_init_end+0x53c>
40088261:	e1b7c1        	l32r	a12, 40080940 <_init_end+0x540>
40088264:	69a0b2        	movi	a11, 105
40088267:	e1b0a1        	l32r	a10, 40080928 <_init_end+0x528>
4008826a:	52c6e5        	call8	400daed8 <__assert_func>
4008826d:	e1b531        	l32r	a3, 40080944 <_init_end+0x544>
40088270:	883a      	add.n	a8, a8, a3
40088272:	130c      	movi.n	a3, 1
40088274:	060c      	movi.n	a6, 0
40088276:	065d      	mov.n	a5, a6
40088278:	935380        	movnez	a5, a3, a8
4008827b:	748050        	extui	a8, a5, 0, 8
4008827e:	1258      	l32i.n	a5, a2, 4
40088280:	933650        	movnez	a3, a6, a5
40088283:	743030        	extui	a3, a3, 0, 8
40088286:	0e9837        	bne	a8, a3, 40088298 <vPortCPUAcquireMutex+0x78>
40088289:	e1afd1        	l32r	a13, 40080948 <_init_end+0x548>
4008828c:	e1adc1        	l32r	a12, 40080940 <_init_end+0x540>
4008828f:	6aa0b2        	movi	a11, 106
40088292:	e1a5a1        	l32r	a10, 40080928 <_init_end+0x528>
40088295:	52c425        	call8	400daed8 <__assert_func>
40088298:	fea032        	movi	a3, 254
4008829b:	0eb357        	bgeu	a3, a5, 400882ad <vPortCPUAcquireMutex+0x8d>
4008829e:	e1abd1        	l32r	a13, 4008094c <_init_end+0x54c>
400882a1:	e1a7c1        	l32r	a12, 40080940 <_init_end+0x540>
400882a4:	6ba0b2        	movi	a11, 107
400882a7:	e1a0a1        	l32r	a10, 40080928 <_init_end+0x528>
400882aa:	52c2e5        	call8	400daed8 <__assert_func>
400882ad:	551b      	addi.n	a5, a5, 1
400882af:	1259      	s32i.n	a5, a2, 4
400882b1:	001c06        	j	40088325 <vPortCPUAcquireMutex+0x105>
400882b4:	eb9000        	f64cmpl	a9, a0, a0
400882b7:	a0a103        	lsi	f0, a1, 0x280
400882ba:	a9a0e1        	l32r	a14, 4007293c <__udivmoddi4+0xdd48>
400882bd:	098d30        	l32e	a3, a13, -32
400882c0:	e19731        	l32r	a3, 4008091c <_init_end+0x51c>
400882c3:	130c30        	wsr.scompare1	a3
400882c6:	00e282        	s32c1i	a8, a2, 0
400882c9:	f11a87        	beq	a10, a8, 400882be <vPortCPUAcquireMutex+0x9e>
400882cc:	111987        	beq	a9, a8, 400882e1 <vPortCPUAcquireMutex+0xc1>
400882cf:	0e1837        	beq	a8, a3, 400882e1 <vPortCPUAcquireMutex+0xc1>
400882d2:	e19ad1        	l32r	a13, 4008093c <_init_end+0x53c>
400882d5:	e19ec1        	l32r	a12, 40080950 <_init_end+0x550>
400882d8:	69a0b2        	movi	a11, 105
400882db:	e193a1        	l32r	a10, 40080928 <_init_end+0x528>
400882de:	52bfa5        	call8	400daed8 <__assert_func>
400882e1:	e19831        	l32r	a3, 40080944 <_init_end+0x544>
400882e4:	883a      	add.n	a8, a8, a3
400882e6:	130c      	movi.n	a3, 1
400882e8:	060c      	movi.n	a6, 0
400882ea:	065d      	mov.n	a5, a6
400882ec:	935380        	movnez	a5, a3, a8
400882ef:	748050        	extui	a8, a5, 0, 8
400882f2:	1258      	l32i.n	a5, a2, 4
400882f4:	933650        	movnez	a3, a6, a5
400882f7:	743030        	extui	a3, a3, 0, 8
400882fa:	0e9837        	bne	a8, a3, 4008830c <vPortCPUAcquireMutex+0xec>
400882fd:	e192d1        	l32r	a13, 40080948 <_init_end+0x548>
40088300:	e194c1        	l32r	a12, 40080950 <_init_end+0x550>
40088303:	6aa0b2        	movi	a11, 106
40088306:	e188a1        	l32r	a10, 40080928 <_init_end+0x528>
40088309:	52bce5        	call8	400daed8 <__assert_func>
4008830c:	fea032        	movi	a3, 254
4008830f:	0eb357        	bgeu	a3, a5, 40088321 <vPortCPUAcquireMutex+0x101>
40088312:	e18ed1        	l32r	a13, 4008094c <_init_end+0x54c>
40088315:	e18ec1        	l32r	a12, 40080950 <_init_end+0x550>
40088318:	6ba0b2        	movi	a11, 107
4008831b:	e183a1        	l32r	a10, 40080928 <_init_end+0x528>
4008831e:	52bba5        	call8	400daed8 <__assert_func>
40088321:	551b      	addi.n	a5, a5, 1
40088323:	1259      	s32i.n	a5, a2, 4
40088325:	04ad      	mov.n	a10, a4
40088327:	e08881        	l32r	a8, 40080548 <_init_end+0x148>
4008832a:	0008e0        	callx8	a8
4008832d:	f01d      	retw.n
	...

40088330 <prvResetNextTaskUnblockTime>:
40088330:	004136        	entry	a1, 32
40088333:	e18981        	l32r	a8, 40080958 <_init_end+0x558>
40088336:	0020c0        	memw
40088339:	0888      	l32i.n	a8, a8, 0
4008833b:	0888      	l32i.n	a8, a8, 0
4008833d:	b8cc      	bnez.n	a8, 4008834c <prvResetNextTaskUnblockTime+0x1c>
4008833f:	f97c      	movi.n	a9, -1
40088341:	e18681        	l32r	a8, 4008095c <_init_end+0x55c>
40088344:	0020c0        	memw
40088347:	0899      	s32i.n	a9, a8, 0
40088349:	f01d      	retw.n
4008834b:	838100        	moveqz	a8, a1, a0
4008834e:	20c0e1        	l32r	a14, 40050650 <r_lm_init+0x191c>
40088351:	088800        	lsx	f8, a8, a0
40088354:	3888      	l32i.n	a8, a8, 12
40088356:	3888      	l32i.n	a8, a8, 12
40088358:	2898      	l32i.n	a9, a8, 8
4008835a:	e18081        	l32r	a8, 4008095c <_init_end+0x55c>
4008835d:	0020c0        	memw
40088360:	0899      	s32i.n	a9, a8, 0
40088362:	f01d      	retw.n

40088364 <prvDeleteTLS>:
40088364:	004136        	entry	a1, 32
40088367:	22fc      	bnez.n	a2, 4008839d <prvDeleteTLS+0x39>
40088369:	e17dd1        	l32r	a13, 40080960 <_init_end+0x560>
4008836c:	e17ec1        	l32r	a12, 40080964 <_init_end+0x564>
4008836f:	e17eb1        	l32r	a11, 40080968 <_init_end+0x568>
40088372:	e17ea1        	l32r	a10, 4008096c <_init_end+0x56c>
40088375:	e04881        	l32r	a8, 40080498 <_init_end+0x98>
40088378:	0008e0        	callx8	a8
4008837b:	201110        	or	a1, a1, a1
4008837e:	02fee5        	call8	4008b36c <abort>
40088381:	18c382        	addi	a8, a3, 24
40088384:	a08820        	addx4	a8, a8, a2
40088387:	1898      	l32i.n	a9, a8, 4
40088389:	b98c      	beqz.n	a9, 40088398 <prvDeleteTLS+0x34>
4008838b:	18c382        	addi	a8, a3, 24
4008838e:	a08820        	addx4	a8, a8, a2
40088391:	08b8      	l32i.n	a11, a8, 0
40088393:	03ad      	mov.n	a10, a3
40088395:	0009e0        	callx8	a9
40088398:	331b      	addi.n	a3, a3, 1
4008839a:	000046        	j	4008839f <prvDeleteTLS+0x3b>
4008839d:	030c      	movi.n	a3, 0
4008839f:	fde316        	beqz	a3, 40088381 <prvDeleteTLS+0x1d>
400883a2:	f01d      	retw.n

400883a4 <prvInitialiseNewTask>:
400883a4:	006136        	entry	a1, 48
400883a7:	1129      	s32i.n	a2, a1, 4
400883a9:	2159      	s32i.n	a5, a1, 8
400883ab:	3179      	s32i.n	a7, a1, 12
400883ad:	f03d      	nop.n
400883af:	f03d      	nop.n
400883b1:	f03d      	nop.n
400883b3:	f03d      	nop.n
400883b5:	c128      	l32i.n	a2, a1, 48
400883b7:	04cd      	mov.n	a12, a4
400883b9:	a5a0b2        	movi	a11, 165
400883bc:	d2a8      	l32i.n	a10, a2, 52
400883be:	e03581        	l32r	a8, 40080494 <_init_end+0x94>
400883c1:	0008e0        	callx8	a8
400883c4:	d288      	l32i.n	a8, a2, 52
400883c6:	540b      	addi.n	a5, a4, -1
400883c8:	585a      	add.n	a5, a8, a5
400883ca:	c87c      	movi.n	a8, -4
400883cc:	105580        	and	a5, a5, a8
400883cf:	136252        	s32i	a5, a2, 76
400883d2:	080c      	movi.n	a8, 0
400883d4:	000746        	j	400883f5 <prvInitialiseNewTask+0x51>
400883d7:	8a0000        	round.s	a0, f0, 0
400883da:	09b293        	lsi	f9, a2, 36
400883dd:	a28a00        	muluh	a8, a10, a0
400883e0:	384ab2        	s8i	a11, a10, 56
400883e3:	0020c0        	memw
400883e6:	f03d      	nop.n
400883e8:	f03d      	nop.n
400883ea:	f03d      	nop.n
400883ec:	f03d      	nop.n
400883ee:	000992        	l8ui	a9, a9, 0
400883f1:	598c      	beqz.n	a9, 400883fa <prvInitialiseNewTask+0x56>
400883f3:	881b      	addi.n	a8, a8, 1
400883f5:	f90c      	movi.n	a9, 15
400883f7:	deb987        	bgeu	a9, a8, 400883d9 <prvInitialiseNewTask+0x35>
400883fa:	030c      	movi.n	a3, 0
400883fc:	474232        	s8i	a3, a2, 71
400883ff:	0020c0        	memw
40088402:	831c      	movi.n	a3, 24
40088404:	01b367        	bgeu	a3, a6, 40088409 <prvInitialiseNewTask+0x65>
40088407:	036d      	mov.n	a6, a3
40088409:	0c6262        	s32i	a6, a2, 48
4008840c:	f03d      	nop.n
4008840e:	f03d      	nop.n
40088410:	f03d      	nop.n
40088412:	f03d      	nop.n
40088414:	e138      	l32i.n	a3, a1, 56
40088416:	126232        	s32i	a3, a2, 72
40088419:	166262        	s32i	a6, a2, 88
4008841c:	030c      	movi.n	a3, 0
4008841e:	176232        	s32i	a3, a2, 92
40088421:	08c2a2        	addi	a10, a2, 8
40088424:	01e3a5        	call8	4008a260 <vListInitialiseItem>
40088427:	1cc2a2        	addi	a10, a2, 28
4008842a:	01e365        	call8	4008a260 <vListInitialiseItem>
4008842d:	5229      	s32i.n	a2, a2, 20
4008842f:	981c      	movi.n	a8, 25
40088431:	c06860        	sub	a6, a8, a6
40088434:	7269      	s32i.n	a6, a2, 28
40088436:	a229      	s32i.n	a2, a2, 40
40088438:	146232        	s32i	a3, a2, 80
4008843b:	04dd      	mov.n	a13, a4
4008843d:	f03d      	nop.n
4008843f:	f03d      	nop.n
40088441:	f03d      	nop.n
40088443:	d2c8      	l32i.n	a12, a2, 52
40088445:	d1b8      	l32i.n	a11, a1, 52
40088447:	a24b      	addi.n	a10, a2, 4
40088449:	01ece5        	call8	4008a318 <vPortStoreTaskMPUSettings>
4008844c:	000406        	j	40088460 <prvInitialiseNewTask+0xbc>
4008844f:	c34200        	movf	a4, a2, b0
40088452:	2018      	l32i.n	a1, a0, 8
40088454:	62a044        	lsi	f4, a0, 0x188
40088457:	6200a0        	lsi	f10, a0, 0x188
4008845a:	690064        	mula.da.hl	m0, a6
4008845d:	331b14        	lsi	f1, a11, 204
40088460:	fec316        	beqz	a3, 40088450 <prvInitialiseNewTask+0xac>
40088463:	030c      	movi.n	a3, 0
40088465:	0020c0        	memw
40088468:	566232        	s32i	a3, a2, 0x158
4008846b:	0020c0        	memw
4008846e:	576232        	s32i	a3, a2, 0x15c
40088471:	68c2a2        	addi	a10, a2, 104
40088474:	fc46e5        	call8	400848e4 <esp_reent_init>
40088477:	03dd      	mov.n	a13, a3
40088479:	21c8      	l32i.n	a12, a1, 8
4008847b:	11b8      	l32i.n	a11, a1, 4
4008847d:	05ad      	mov.n	a10, a5
4008847f:	ff9ce5        	call8	40087e4c <pxPortInitialiseStack>
40088482:	02a9      	s32i.n	a10, a2, 0
40088484:	f03d      	nop.n
40088486:	f03d      	nop.n
40088488:	f03d      	nop.n
4008848a:	f03d      	nop.n
4008848c:	3138      	l32i.n	a3, a1, 12
4008848e:	038c      	beqz.n	a3, 40088492 <prvInitialiseNewTask+0xee>
40088490:	0729      	s32i.n	a2, a7, 0
40088492:	f01d      	retw.n

40088494 <prvInitialiseTaskLists>:
40088494:	004136        	entry	a1, 32
40088497:	020c      	movi.n	a2, 0
40088499:	000446        	j	400884ae <prvInitialiseTaskLists+0x1a>
4008849c:	922000        	lsi	f0, a0, 0x248
4008849f:	89e0a0        	lsi	f10, a0, 0x224
400884a2:	33a111        	l32r	a1, 40055328 <nvds_init_memory+0xfd0>
400884a5:	aa80e1        	l32r	a14, 40072ea8 <__udivmoddi4+0xe2b4>
400884a8:	d9e580        	lsi	f8, a5, 0x364
400884ab:	221b01        	l32r	a0, 40050d18 <r_lm_init+0x1fe4>
400884ae:	881c      	movi.n	a8, 24
400884b0:	e9b827        	bgeu	a8, a2, 4008849d <prvInitialiseTaskLists+0x9>
400884b3:	e13031        	l32r	a3, 40080974 <_init_end+0x574>
400884b6:	20a330        	or	a10, a3, a3
400884b9:	01d8e5        	call8	4008a248 <vListInitialise>
400884bc:	e12f21        	l32r	a2, 40080978 <_init_end+0x578>
400884bf:	02ad      	mov.n	a10, a2
400884c1:	01d865        	call8	4008a248 <vListInitialise>
400884c4:	e12ea1        	l32r	a10, 4008097c <_init_end+0x57c>
400884c7:	01d825        	call8	4008a248 <vListInitialise>
400884ca:	e12da1        	l32r	a10, 40080980 <_init_end+0x580>
400884cd:	01d7a5        	call8	4008a248 <vListInitialise>
400884d0:	e12da1        	l32r	a10, 40080984 <_init_end+0x584>
400884d3:	01d765        	call8	4008a248 <vListInitialise>
400884d6:	e12ca1        	l32r	a10, 40080988 <_init_end+0x588>
400884d9:	01d6e5        	call8	4008a248 <vListInitialise>
400884dc:	e11f81        	l32r	a8, 40080958 <_init_end+0x558>
400884df:	0020c0        	memw
400884e2:	0839      	s32i.n	a3, a8, 0
400884e4:	f03d      	nop.n
400884e6:	f03d      	nop.n
400884e8:	f03d      	nop.n
400884ea:	f03d      	nop.n
400884ec:	e12831        	l32r	a3, 4008098c <_init_end+0x58c>
400884ef:	0020c0        	memw
400884f2:	0329      	s32i.n	a2, a3, 0
400884f4:	f01d      	retw.n
	...

400884f8 <prvDeleteTCB>:
400884f8:	004136        	entry	a1, 32
400884fb:	68c2a2        	addi	a10, a2, 104
400884fe:	52f4e5        	call8	400db44c <_reclaim_reent>
40088501:	04c2a2        	addi	a10, a2, 4
40088504:	ffa2a5        	call8	40087f30 <vPortReleaseTaskMPUSettings>
40088507:	01d282        	addmi	a8, a2, 0x100
4008850a:	600882        	l8ui	a8, a8, 96
4008850d:	014856        	bnez	a8, 40088525 <prvDeleteTCB+0x2d>
40088510:	d2a8      	l32i.n	a10, a2, 52
40088512:	e0b481        	l32r	a8, 400807e4 <_init_end+0x3e4>
40088515:	0008e0        	callx8	a8
40088518:	02ad      	mov.n	a10, a2
4008851a:	e0b281        	l32r	a8, 400807e4 <_init_end+0x3e4>
4008851d:	0008e0        	callx8	a8
40088520:	f01d      	retw.n
40088522:	000000        	ill
40088525:	0b1866        	bnei	a8, 1, 40088534 <prvDeleteTCB+0x3c>
40088528:	02ad      	mov.n	a10, a2
4008852a:	e0ae81        	l32r	a8, 400807e4 <_init_end+0x3e4>
4008852d:	0008e0        	callx8	a8
40088530:	f01d      	retw.n
40088532:	260000        	lsi	f0, a0, 152
40088535:	1428      	l32i.n	a2, a4, 4
40088537:	e116d1        	l32r	a13, 40080990 <_init_end+0x590>
4008853a:	e116c1        	l32r	a12, 40080994 <_init_end+0x594>
4008853d:	e10ab1        	l32r	a11, 40080968 <_init_end+0x568>
40088540:	e10ba1        	l32r	a10, 4008096c <_init_end+0x56c>
40088543:	dfd581        	l32r	a8, 40080498 <_init_end+0x98>
40088546:	0008e0        	callx8	a8
40088549:	02e225        	call8	4008b36c <abort>
4008854c:	f01d      	retw.n
	...

40088550 <prvAddCurrentTaskToDelayedList>:
40088550:	004136        	entry	a1, 32
40088553:	e05c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088556:	a08280        	addx4	a8, a2, a8
40088559:	0020c0        	memw
4008855c:	002882        	l32i	a8, a8, 0
4008855f:	026832        	s32i	a3, a8, 8
40088562:	f03d      	nop.n
40088564:	f03d      	nop.n
40088566:	f03d      	nop.n
40088568:	f03d      	nop.n
4008856a:	e10b81        	l32r	a8, 40080998 <_init_end+0x598>
4008856d:	0020c0        	memw
40088570:	002882        	l32i	a8, a8, 0
40088573:	1ab387        	bgeu	a3, a8, 40088591 <prvAddCurrentTaskToDelayedList+0x41>
40088576:	e10531        	l32r	a3, 4008098c <_init_end+0x58c>
40088579:	0020c0        	memw
4008857c:	03a8      	l32i.n	a10, a3, 0
4008857e:	e05131        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088581:	a02230        	addx4	a2, a2, a3
40088584:	0020c0        	memw
40088587:	02b8      	l32i.n	a11, a2, 0
40088589:	bb8b      	addi.n	a11, a11, 8
4008858b:	01d165        	call8	4008a2a0 <vListInsert>
4008858e:	f01d      	retw.n
40088590:	f18100        	lsi	f0, a1, 0x3c4
40088593:	20c0e0        	or	a12, a0, a14
40088596:	08a800        	lsx	f10, a8, a0
40088599:	e04a81        	l32r	a8, 400806c4 <_init_end+0x2c4>
4008859c:	a02280        	addx4	a2, a2, a8
4008859f:	0020c0        	memw
400885a2:	02b8      	l32i.n	a11, a2, 0
400885a4:	bb8b      	addi.n	a11, a11, 8
400885a6:	01cfa5        	call8	4008a2a0 <vListInsert>
400885a9:	e0ec21        	l32r	a2, 4008095c <_init_end+0x55c>
400885ac:	0020c0        	memw
400885af:	0228      	l32i.n	a2, a2, 0
400885b1:	07b327        	bgeu	a3, a2, 400885bc <prvAddCurrentTaskToDelayedList+0x6c>
400885b4:	e0ea21        	l32r	a2, 4008095c <_init_end+0x55c>
400885b7:	0020c0        	memw
400885ba:	0239      	s32i.n	a3, a2, 0
400885bc:	f01d      	retw.n
	...

400885c0 <taskYIELD_OTHER_CORE>:
400885c0:	004136        	entry	a1, 32
400885c3:	e04081        	l32r	a8, 400806c4 <_init_end+0x2c4>
400885c6:	a08280        	addx4	a8, a2, a8
400885c9:	0020c0        	memw
400885cc:	002892        	l32i	a9, a8, 0
400885cf:	dfd481        	l32r	a8, 40080520 <_init_end+0x120>
400885d2:	361287        	beq	a2, a8, 4008860c <taskYIELD_OTHER_CORE+0x4c>
400885d5:	0c2982        	l32i	a8, a9, 48
400885d8:	35b837        	bgeu	a8, a3, 40088611 <taskYIELD_OTHER_CORE+0x51>
400885db:	20a220        	or	a10, a2, a2
400885de:	ff9465        	call8	40087f24 <vPortYieldOtherCore>
400885e1:	f01d      	retw.n
400885e3:	200000        	or	a0, a0, a0
400885e6:	03eb      	addi.n	a0, a3, 14
400885e8:	042d20        	extui	a2, a2, 13, 1
400885eb:	171a27        	beq	a10, a2, 40088606 <taskYIELD_OTHER_CORE+0x46>
400885ee:	e03521        	l32r	a2, 400806c4 <_init_end+0x2c4>
400885f1:	a02a20        	addx4	a2, a10, a2
400885f4:	0020c0        	memw
400885f7:	002222        	l32i	a2, a2, 0
400885fa:	0c2222        	l32i	a2, a2, 48
400885fd:	05b237        	bgeu	a2, a3, 40088606 <taskYIELD_OTHER_CORE+0x46>
40088600:	ff9225        	call8	40087f24 <vPortYieldOtherCore>
40088603:	000090        	retw
40088606:	aa1b      	addi.n	a10, a10, 1
40088608:	000086        	j	4008860e <taskYIELD_OTHER_CORE+0x4e>
4008860b:	0a0c00        	add.s	f0, f12, f0
4008860e:	d32aa6        	blti	a10, 2, 400885e5 <taskYIELD_OTHER_CORE+0x25>
40088611:	f01d      	retw.n
	...

40088614 <vTaskSuspendAll>:
40088614:	004136        	entry	a1, 32
40088617:	0063a0        	rsil	a10, 3
4008861a:	03eb80        	rsr.prid	a8
4008861d:	048d80        	extui	a8, a8, 13, 1
40088620:	e0df91        	l32r	a9, 4008099c <_init_end+0x59c>
40088623:	a08890        	addx4	a8, a8, a9
40088626:	0020c0        	memw
40088629:	0898      	l32i.n	a9, a8, 0
4008862b:	991b      	addi.n	a9, a9, 1
4008862d:	0020c0        	memw
40088630:	0899      	s32i.n	a9, a8, 0
40088632:	dfc581        	l32r	a8, 40080548 <_init_end+0x148>
40088635:	0008e0        	callx8	a8
40088638:	f01d      	retw.n
	...

4008863c <xTaskGetTickCount>:
4008863c:	004136        	entry	a1, 32
4008863f:	e0d621        	l32r	a2, 40080998 <_init_end+0x598>
40088642:	0020c0        	memw
40088645:	0228      	l32i.n	a2, a2, 0
40088647:	f01d      	retw.n
40088649:	000000        	ill

4008864c <xTaskGetIdleTaskHandleForCPU>:
4008864c:	004136        	entry	a1, 32
4008864f:	1f22f6        	bgeui	a2, 2, 40088672 <xTaskGetIdleTaskHandleForCPU+0x26>
40088652:	e0d381        	l32r	a8, 400809a0 <_init_end+0x5a0>
40088655:	a02280        	addx4	a2, a2, a8
40088658:	0228      	l32i.n	a2, a2, 0
4008865a:	016256        	bnez	a2, 40088674 <xTaskGetIdleTaskHandleForCPU+0x28>
4008865d:	e0d1d1        	l32r	a13, 400809a4 <_init_end+0x5a4>
40088660:	e0d2c1        	l32r	a12, 400809a8 <_init_end+0x5a8>
40088663:	e0c1b1        	l32r	a11, 40080968 <_init_end+0x568>
40088666:	e0c1a1        	l32r	a10, 4008096c <_init_end+0x56c>
40088669:	df8b81        	l32r	a8, 40080498 <_init_end+0x98>
4008866c:	0008e0        	callx8	a8
4008866f:	02cfe5        	call8	4008b36c <abort>
40088672:	020c      	movi.n	a2, 0
40088674:	f01d      	retw.n
	...

40088678 <vTaskSwitchContext>:
40088678:	004136        	entry	a1, 32
4008867b:	006320        	rsil	a2, 3
4008867e:	03eb30        	rsr.prid	a3
40088681:	043d30        	extui	a3, a3, 13, 1
40088684:	e0c641        	l32r	a4, 4008099c <_init_end+0x59c>
40088687:	a03340        	addx4	a3, a3, a4
4008868a:	0020c0        	memw
4008868d:	0338      	l32i.n	a3, a3, 0
4008868f:	539c      	beqz.n	a3, 400886a8 <vTaskSwitchContext+0x30>
40088691:	03eb30        	rsr.prid	a3
40088694:	043d30        	extui	a3, a3, 13, 1
40088697:	e0c541        	l32r	a4, 400809ac <_init_end+0x5ac>
4008869a:	a03340        	addx4	a3, a3, a4
4008869d:	140c      	movi.n	a4, 1
4008869f:	0020c0        	memw
400886a2:	0349      	s32i.n	a4, a3, 0
400886a4:	00ae46        	j	40088961 <vTaskSwitchContext+0x2e9>
400886a7:	eb3000        	f64cmpl	a3, a0, a0
400886aa:	3d3003        	lsi	f0, a0, 244
400886ad:	bf4104        	lsi	f0, a1, 0x2fc
400886b0:	3340e0        	clamps	a4, a0, 21
400886b3:	a042a0        	addx4	a4, a2, a10
400886b6:	20c000        	or	a12, a0, a0
400886b9:	034900        	rsr.windowstart	a0
400886bc:	03eb30        	rsr.prid	a3
400886bf:	043d30        	extui	a3, a3, 13, 1
400886c2:	f03d      	nop.n
400886c4:	f03d      	nop.n
400886c6:	f03d      	nop.n
400886c8:	e0ba41        	l32r	a4, 400809b0 <_init_end+0x5b0>
400886cb:	a03340        	addx4	a3, a3, a4
400886ce:	140c      	movi.n	a4, 1
400886d0:	0020c0        	memw
400886d3:	0349      	s32i.n	a4, a3, 0
400886d5:	03eb30        	rsr.prid	a3
400886d8:	043d30        	extui	a3, a3, 13, 1
400886db:	f03d      	nop.n
400886dd:	f03d      	nop.n
400886df:	f03d      	nop.n
400886e1:	dff841        	l32r	a4, 400806c4 <_init_end+0x2c4>
400886e4:	a03340        	addx4	a3, a3, a4
400886e7:	0020c0        	memw
400886ea:	0338      	l32i.n	a3, a3, 0
400886ec:	0358      	l32i.n	a5, a3, 0
400886ee:	03eb30        	rsr.prid	a3
400886f1:	043d30        	extui	a3, a3, 13, 1
400886f4:	a03340        	addx4	a3, a3, a4
400886f7:	0020c0        	memw
400886fa:	0338      	l32i.n	a3, a3, 0
400886fc:	d338      	l32i.n	a3, a3, 52
400886fe:	213357        	bltu	a3, a5, 40088723 <vTaskSwitchContext+0xab>
40088701:	03eb30        	rsr.prid	a3
40088704:	043d30        	extui	a3, a3, 13, 1
40088707:	a03340        	addx4	a3, a3, a4
4008870a:	0020c0        	memw
4008870d:	03a8      	l32i.n	a10, a3, 0
4008870f:	03eb30        	rsr.prid	a3
40088712:	043d30        	extui	a3, a3, 13, 1
40088715:	a03340        	addx4	a3, a3, a4
40088718:	0020c0        	memw
4008871b:	03b8      	l32i.n	a11, a3, 0
4008871d:	38cbb2        	addi	a11, a11, 56
40088720:	02c825        	call8	4008b3a4 <vApplicationStackOverflowHook>
40088723:	03eb30        	rsr.prid	a3
40088726:	043d30        	extui	a3, a3, 13, 1
40088729:	dfe641        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008872c:	a03340        	addx4	a3, a3, a4
4008872f:	0020c0        	memw
40088732:	0338      	l32i.n	a3, a3, 0
40088734:	14a0c2        	movi	a12, 20
40088737:	e09fb1        	l32r	a11, 400809b4 <_init_end+0x5b4>
4008873a:	0d23a2        	l32i	a10, a3, 52
4008873d:	e0a081        	l32r	a8, 400809c0 <_init_end+0x5c0>
40088740:	0008e0        	callx8	a8
40088743:	0aac      	beqz.n	a10, 40088767 <vTaskSwitchContext+0xef>
40088745:	03eb30        	rsr.prid	a3
40088748:	043d30        	extui	a3, a3, 13, 1
4008874b:	a03340        	addx4	a3, a3, a4
4008874e:	0020c0        	memw
40088751:	03a8      	l32i.n	a10, a3, 0
40088753:	03eb30        	rsr.prid	a3
40088756:	043d30        	extui	a3, a3, 13, 1
40088759:	a03340        	addx4	a3, a3, a4
4008875c:	0020c0        	memw
4008875f:	03b8      	l32i.n	a11, a3, 0
40088761:	38cbb2        	addi	a11, a11, 56
40088764:	02c3e5        	call8	4008b3a4 <vApplicationStackOverflowHook>
40088767:	e094a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008876a:	ffab65        	call8	40088220 <vPortCPUAcquireMutex>
4008876d:	e09331        	l32r	a3, 400809bc <_init_end+0x5bc>
40088770:	0020c0        	memw
40088773:	0388      	l32i.n	a8, a3, 0
40088775:	0f0c      	movi.n	a15, 0
40088777:	0f3d      	mov.n	a3, a15
40088779:	006586        	j	40088913 <vTaskSwitchContext+0x29b>
4008877c:	588000        	ssxp	f8, a0, a0
4008877f:	45e0a0        	extui	a14, a10, 16, 5
40088782:	7b5111        	l32r	a1, 400674c8 <__udivmoddi4+0x28d4>
40088785:	454ae0        	extui	a4, a14, 26, 5
40088788:	0448      	l32i.n	a4, a4, 0
4008878a:	170416        	beqz	a4, 400888fe <vTaskSwitchContext+0x286>
4008878d:	1148e0        	slli	a4, a8, 2
40088790:	448a      	add.n	a4, a4, a8
40088792:	1134e0        	slli	a3, a4, 2
40088795:	c53a      	add.n	a12, a5, a3
40088797:	1c38      	l32i.n	a3, a12, 4
40088799:	33d8      	l32i.n	a13, a3, 12
4008879b:	cc8b      	addi.n	a12, a12, 8
4008879d:	3d93c7        	bne	a3, a12, 400887de <vTaskSwitchContext+0x166>
400887a0:	1348      	l32i.n	a4, a3, 4
400887a2:	a05880        	addx4	a5, a8, a8
400887a5:	1135e0        	slli	a3, a5, 2
400887a8:	e07251        	l32r	a5, 40080970 <_init_end+0x570>
400887ab:	353a      	add.n	a3, a5, a3
400887ad:	1349      	s32i.n	a4, a3, 4
400887af:	169c47        	bne	a12, a4, 400887c9 <vTaskSwitchContext+0x151>
400887b2:	f03d      	nop.n
400887b4:	f03d      	nop.n
400887b6:	f03d      	nop.n
400887b8:	f03d      	nop.n
400887ba:	1458      	l32i.n	a5, a4, 4
400887bc:	a04880        	addx4	a4, a8, a8
400887bf:	1134e0        	slli	a3, a4, 2
400887c2:	e06b41        	l32r	a4, 40080970 <_init_end+0x570>
400887c5:	343a      	add.n	a3, a4, a3
400887c7:	1359      	s32i.n	a5, a3, 4
400887c9:	a04880        	addx4	a4, a8, a8
400887cc:	1134e0        	slli	a3, a4, 2
400887cf:	f03d      	nop.n
400887d1:	f03d      	nop.n
400887d3:	e06741        	l32r	a4, 40080970 <_init_end+0x570>
400887d6:	343a      	add.n	a3, a4, a3
400887d8:	012332        	l32i	a3, a3, 4
400887db:	0323d2        	l32i	a13, a3, 12
400887de:	0e0c      	movi.n	a14, 0
400887e0:	1198e0        	slli	a9, a8, 2
400887e3:	998a      	add.n	a9, a9, a8
400887e5:	1139e0        	slli	a3, a9, 2
400887e8:	e06241        	l32r	a4, 40080970 <_init_end+0x570>
400887eb:	343a      	add.n	a3, a4, a3
400887ed:	1348      	l32i.n	a4, a3, 4
400887ef:	1498      	l32i.n	a9, a4, 4
400887f1:	1399      	s32i.n	a9, a3, 4
400887f3:	169c97        	bne	a12, a9, 4008880d <vTaskSwitchContext+0x195>
400887f6:	f03d      	nop.n
400887f8:	f03d      	nop.n
400887fa:	f03d      	nop.n
400887fc:	f03d      	nop.n
400887fe:	1958      	l32i.n	a5, a9, 4
40088800:	a04880        	addx4	a4, a8, a8
40088803:	1134e0        	slli	a3, a4, 2
40088806:	e05a41        	l32r	a4, 40080970 <_init_end+0x570>
40088809:	343a      	add.n	a3, a4, a3
4008880b:	1359      	s32i.n	a5, a3, 4
4008880d:	a04880        	addx4	a4, a8, a8
40088810:	1134e0        	slli	a3, a4, 2
40088813:	f03d      	nop.n
40088815:	f03d      	nop.n
40088817:	e05641        	l32r	a4, 40080970 <_init_end+0x570>
4008881a:	343a      	add.n	a3, a4, a3
4008881c:	1338      	l32i.n	a3, a3, 4
4008881e:	33b8      	l32i.n	a11, a3, 12
40088820:	090c      	movi.n	a9, 0
40088822:	000606        	j	4008883e <vTaskSwitchContext+0x1c6>
40088825:	03eb30        	rsr.prid	a3
40088828:	043d30        	extui	a3, a3, 13, 1
4008882b:	0d1937        	beq	a9, a3, 4008883c <vTaskSwitchContext+0x1c4>
4008882e:	dfa531        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088831:	a03930        	addx4	a3, a9, a3
40088834:	0020c0        	memw
40088837:	0338      	l32i.n	a3, a3, 0
40088839:	091b37        	beq	a11, a3, 40088846 <vTaskSwitchContext+0x1ce>
4008883c:	991b      	addi.n	a9, a9, 1
4008883e:	e329a6        	blti	a9, 2, 40088825 <vTaskSwitchContext+0x1ad>
40088841:	130c      	movi.n	a3, 1
40088843:	0000c6        	j	4008884a <vTaskSwitchContext+0x1d2>
40088846:	1f0c      	movi.n	a15, 1
40088848:	030c      	movi.n	a3, 0
4008884a:	3e1366        	bnei	a3, 1, 4008888c <vTaskSwitchContext+0x214>
4008884d:	122b32        	l32i	a3, a11, 72
40088850:	df3441        	l32r	a4, 40080520 <_init_end+0x120>
40088853:	159347        	bne	a3, a4, 4008886c <vTaskSwitchContext+0x1f4>
40088856:	03eb30        	rsr.prid	a3
40088859:	043d30        	extui	a3, a3, 13, 1
4008885c:	df9a41        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008885f:	a03340        	addx4	a3, a3, a4
40088862:	0020c0        	memw
40088865:	03b9      	s32i.n	a11, a3, 0
40088867:	130c      	movi.n	a3, 1
40088869:	000a46        	j	40088896 <vTaskSwitchContext+0x21e>
4008886c:	03eb40        	rsr.prid	a4
4008886f:	044d40        	extui	a4, a4, 13, 1
40088872:	1c9347        	bne	a3, a4, 40088892 <vTaskSwitchContext+0x21a>
40088875:	03eb30        	rsr.prid	a3
40088878:	043d30        	extui	a3, a3, 13, 1
4008887b:	df9241        	l32r	a4, 400806c4 <_init_end+0x2c4>
4008887e:	a03340        	addx4	a3, a3, a4
40088881:	0020c0        	memw
40088884:	03b9      	s32i.n	a11, a3, 0
40088886:	130c      	movi.n	a3, 1
40088888:	000286        	j	40088896 <vTaskSwitchContext+0x21e>
4008888b:	030c00        	rsr.scompare1	a0
4008888e:	000106        	j	40088896 <vTaskSwitchContext+0x21e>
40088891:	1f0c00        	f64cmph	a0, a12, a0, 1
40088894:	030c      	movi.n	a3, 0
40088896:	048316        	beqz	a3, 400888e2 <vTaskSwitchContext+0x26a>
40088899:	4703e7        	bnone	a3, a14, 400888e4 <vTaskSwitchContext+0x26c>
4008889c:	11a8e0        	slli	a10, a8, 2
4008889f:	aa8a      	add.n	a10, a10, a8
400888a1:	119ae0        	slli	a9, a10, 2
400888a4:	e033a1        	l32r	a10, 40080970 <_init_end+0x570>
400888a7:	9a9a      	add.n	a9, a10, a9
400888a9:	19a8      	l32i.n	a10, a9, 4
400888ab:	1aa8      	l32i.n	a10, a10, 4
400888ad:	19a9      	s32i.n	a10, a9, 4
400888af:	169ca7        	bne	a12, a10, 400888c9 <vTaskSwitchContext+0x251>
400888b2:	f03d      	nop.n
400888b4:	f03d      	nop.n
400888b6:	f03d      	nop.n
400888b8:	f03d      	nop.n
400888ba:	1a98      	l32i.n	a9, a10, 4
400888bc:	a05880        	addx4	a5, a8, a8
400888bf:	1145e0        	slli	a4, a5, 2
400888c2:	e02b51        	l32r	a5, 40080970 <_init_end+0x570>
400888c5:	454a      	add.n	a4, a5, a4
400888c7:	1499      	s32i.n	a9, a4, 4
400888c9:	a0a880        	addx4	a10, a8, a8
400888cc:	119ae0        	slli	a9, a10, 2
400888cf:	f03d      	nop.n
400888d1:	f03d      	nop.n
400888d3:	e027a1        	l32r	a10, 40080970 <_init_end+0x570>
400888d6:	9a9a      	add.n	a9, a10, a9
400888d8:	1998      	l32i.n	a9, a9, 4
400888da:	3998      	l32i.n	a9, a9, 12
400888dc:	bc99d7        	bne	a9, a13, 4008889c <vTaskSwitchContext+0x224>
400888df:	000046        	j	400888e4 <vTaskSwitchContext+0x26c>
400888e2:	1e0c      	movi.n	a14, 1
400888e4:	140c      	movi.n	a4, 1
400888e6:	0a0c      	movi.n	a10, 0
400888e8:	0a5d      	mov.n	a5, a10
400888ea:	835430        	moveqz	a5, a4, a3
400888ed:	c09bd0        	sub	a9, a11, a13
400888f0:	0abd      	mov.n	a11, a10
400888f2:	93b490        	movnez	a11, a4, a9
400888f5:	020b57        	bnone	a11, a5, 400888fb <vTaskSwitchContext+0x283>
400888f8:	ffb906        	j	400887e0 <vTaskSwitchContext+0x168>
400888fb:	000446        	j	40088910 <vTaskSwitchContext+0x298>
400888fe:	efcc      	bnez.n	a15, 40088910 <vTaskSwitchContext+0x298>
40088900:	e02f51        	l32r	a5, 400809bc <_init_end+0x5bc>
40088903:	0020c0        	memw
40088906:	0548      	l32i.n	a4, a5, 0
40088908:	440b      	addi.n	a4, a4, -1
4008890a:	0020c0        	memw
4008890d:	006542        	s32i	a4, a5, 0
40088910:	ffc882        	addi	a8, a8, -1
40088913:	00a052        	movi	a5, 0
40088916:	140c      	movi.n	a4, 1
40088918:	835430        	moveqz	a5, a4, a3
4008891b:	f47c      	movi.n	a4, -1
4008891d:	304480        	xor	a4, a4, a8
40088920:	054f40        	extui	a4, a4, 31, 1
40088923:	020547        	bnone	a5, a4, 40088929 <vTaskSwitchContext+0x2b1>
40088926:	ff94c6        	j	4008877d <vTaskSwitchContext+0x105>
40088929:	03eb30        	rsr.prid	a3
4008892c:	043d30        	extui	a3, a3, 13, 1
4008892f:	e02041        	l32r	a4, 400809b0 <_init_end+0x5b0>
40088932:	a03340        	addx4	a3, a3, a4
40088935:	040c      	movi.n	a4, 0
40088937:	0020c0        	memw
4008893a:	0349      	s32i.n	a4, a3, 0
4008893c:	f03d      	nop.n
4008893e:	f03d      	nop.n
40088940:	f03d      	nop.n
40088942:	0020f0        	nop
40088945:	e01ca1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088948:	ff62a5        	call8	40087f74 <vPortCPUReleaseMutex>
4008894b:	03eb30        	rsr.prid	a3
4008894e:	043d30        	extui	a3, a3, 13, 1
40088951:	df5c41        	l32r	a4, 400806c4 <_init_end+0x2c4>
40088954:	a03340        	addx4	a3, a3, a4
40088957:	0020c0        	memw
4008895a:	0338      	l32i.n	a3, a3, 0
4008895c:	d3a8      	l32i.n	a10, a3, 52
4008895e:	ff6c25        	call8	40088020 <vPortSetStackWatchpoint>
40088961:	02ad      	mov.n	a10, a2
40088963:	def981        	l32r	a8, 40080548 <_init_end+0x148>
40088966:	0008e0        	callx8	a8
40088969:	f01d      	retw.n
	...

4008896c <vTaskSetTimeOutState>:
4008896c:	004136        	entry	a1, 32
4008896f:	014256        	bnez	a2, 40088987 <vTaskSetTimeOutState+0x1b>
40088972:	e014d1        	l32r	a13, 400809c4 <_init_end+0x5c4>
40088975:	e014c1        	l32r	a12, 400809c8 <_init_end+0x5c8>
40088978:	dffcb1        	l32r	a11, 40080968 <_init_end+0x568>
4008897b:	dffca1        	l32r	a10, 4008096c <_init_end+0x56c>
4008897e:	dec681        	l32r	a8, 40080498 <_init_end+0x98>
40088981:	0008e0        	callx8	a8
40088984:	029e65        	call8	4008b36c <abort>
40088987:	e01181        	l32r	a8, 400809cc <_init_end+0x5cc>
4008898a:	0020c0        	memw
4008898d:	002882        	l32i	a8, a8, 0
40088990:	006282        	s32i	a8, a2, 0
40088993:	f03d      	nop.n
40088995:	f03d      	nop.n
40088997:	f03d      	nop.n
40088999:	f03d      	nop.n
4008899b:	dfff81        	l32r	a8, 40080998 <_init_end+0x598>
4008899e:	0020c0        	memw
400889a1:	002882        	l32i	a8, a8, 0
400889a4:	1289      	s32i.n	a8, a2, 4
400889a6:	f01d      	retw.n

400889a8 <xTaskGetCurrentTaskHandle>:
400889a8:	004136        	entry	a1, 32
400889ab:	0063a0        	rsil	a10, 3
400889ae:	03eb80        	rsr.prid	a8
400889b1:	048d80        	extui	a8, a8, 13, 1
400889b4:	df4421        	l32r	a2, 400806c4 <_init_end+0x2c4>
400889b7:	a08820        	addx4	a8, a8, a2
400889ba:	0020c0        	memw
400889bd:	0828      	l32i.n	a2, a8, 0
400889bf:	dee281        	l32r	a8, 40080548 <_init_end+0x148>
400889c2:	0008e0        	callx8	a8
400889c5:	f01d      	retw.n
	...

400889c8 <__getreent>:
400889c8:	004136        	entry	a1, 32
400889cb:	fffde5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400889ce:	00aa56        	bnez	a10, 400889dc <__getreent+0x14>
400889d1:	de8e21        	l32r	a2, 4008040c <_init_end+0xc>
400889d4:	002222        	l32i	a2, a2, 0
400889d7:	000090        	retw
400889da:	220000        	orb	b0, b0, b0
400889dd:	68ca      	add.n	a6, a8, a12
400889df:	f01d      	retw.n
400889e1:	000000        	ill

400889e4 <pcTaskGetTaskName>:
400889e4:	004136        	entry	a1, 32
400889e7:	007256        	bnez	a2, 400889f2 <pcTaskGetTaskName+0xe>
400889ea:	201110        	or	a1, a1, a1
400889ed:	fffba5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400889f0:	0a2d      	mov.n	a2, a10
400889f2:	32dc      	bnez.n	a2, 40088a09 <pcTaskGetTaskName+0x25>
400889f4:	dff7d1        	l32r	a13, 400809d0 <_init_end+0x5d0>
400889f7:	dff7c1        	l32r	a12, 400809d4 <_init_end+0x5d4>
400889fa:	dfdbb1        	l32r	a11, 40080968 <_init_end+0x568>
400889fd:	dfdba1        	l32r	a10, 4008096c <_init_end+0x56c>
40088a00:	dea681        	l32r	a8, 40080498 <_init_end+0x98>
40088a03:	0008e0        	callx8	a8
40088a06:	029665        	call8	4008b36c <abort>
40088a09:	38c222        	addi	a2, a2, 56
40088a0c:	f01d      	retw.n
	...

40088a10 <pvTaskGetThreadLocalStoragePointer>:
40088a10:	004136        	entry	a1, 32
40088a13:	1313e6        	bgei	a3, 1, 40088a2a <pvTaskGetThreadLocalStoragePointer+0x1a>
40088a16:	32cc      	bnez.n	a2, 40088a1d <pvTaskGetThreadLocalStoragePointer+0xd>
40088a18:	fff8e5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088a1b:	0a2d      	mov.n	a2, a10
40088a1d:	18c332        	addi	a3, a3, 24
40088a20:	a02320        	addx4	a2, a3, a2
40088a23:	0228      	l32i.n	a2, a2, 0
40088a25:	f01d      	retw.n
40088a27:	000000        	ill
40088a2a:	020c      	movi.n	a2, 0
40088a2c:	f01d      	retw.n
	...

40088a30 <xTaskGetAffinity>:
40088a30:	004136        	entry	a1, 32
40088a33:	004256        	bnez	a2, 40088a3b <xTaskGetAffinity+0xb>
40088a36:	fff725        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088a39:	0a2d      	mov.n	a2, a10
40088a3b:	122222        	l32i	a2, a2, 72
40088a3e:	f01d      	retw.n

40088a40 <xTaskGetCurrentTaskHandleForCPU>:
40088a40:	004136        	entry	a1, 32
40088a43:	0d22e6        	bgei	a2, 2, 40088a54 <xTaskGetCurrentTaskHandleForCPU+0x14>
40088a46:	df1f81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088a49:	a02280        	addx4	a2, a2, a8
40088a4c:	0020c0        	memw
40088a4f:	0228      	l32i.n	a2, a2, 0
40088a51:	f01d      	retw.n
40088a53:	020c00        	andb	b0, b12, b0
40088a56:	f01d      	retw.n

40088a58 <xTaskGetSchedulerState>:
40088a58:	004136        	entry	a1, 32
40088a5b:	0063a0        	rsil	a10, 3
40088a5e:	dfde81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088a61:	0020c0        	memw
40088a64:	0888      	l32i.n	a8, a8, 0
40088a66:	689c      	beqz.n	a8, 40088a80 <xTaskGetSchedulerState+0x28>
40088a68:	03eb80        	rsr.prid	a8
40088a6b:	048d80        	extui	a8, a8, 13, 1
40088a6e:	dfcb21        	l32r	a2, 4008099c <_init_end+0x59c>
40088a71:	a08820        	addx4	a8, a8, a2
40088a74:	0020c0        	memw
40088a77:	0828      	l32i.n	a2, a8, 0
40088a79:	82cc      	bnez.n	a2, 40088a85 <xTaskGetSchedulerState+0x2d>
40088a7b:	220c      	movi.n	a2, 2
40088a7d:	000186        	j	40088a87 <xTaskGetSchedulerState+0x2f>
40088a80:	120c      	movi.n	a2, 1
40088a82:	000046        	j	40088a87 <xTaskGetSchedulerState+0x2f>
40088a85:	020c      	movi.n	a2, 0
40088a87:	deb081        	l32r	a8, 40080548 <_init_end+0x148>
40088a8a:	0008e0        	callx8	a8
40088a8d:	f01d      	retw.n
	...

40088a90 <vTaskEnterCritical>:
40088a90:	006136        	entry	a1, 48
40088a93:	dfd131        	l32r	a3, 400809d8 <_init_end+0x5d8>
40088a96:	0020c0        	memw
40088a99:	0358      	l32i.n	a5, a3, 0
40088a9b:	558c      	beqz.n	a5, 40088aa4 <vTaskEnterCritical+0x14>
40088a9d:	006360        	rsil	a6, 3
40088aa0:	000086        	j	40088aa6 <vTaskEnterCritical+0x16>
40088aa3:	060c00        	lsi	f0, a12, 24
40088aa6:	df6e31        	l32r	a3, 40080860 <_init_end+0x460>
40088aa9:	323a      	add.n	a3, a2, a3
40088aab:	df6e41        	l32r	a4, 40080864 <_init_end+0x464>
40088aae:	02b437        	bgeu	a4, a3, 40088ab4 <vTaskEnterCritical+0x24>
40088ab1:	002006        	j	40088b35 <vTaskEnterCritical+0xa5>
40088ab4:	03eb30        	rsr.prid	a3
40088ab7:	dfa041        	l32r	a4, 40080938 <_init_end+0x538>
40088aba:	304340        	xor	a4, a3, a4
40088abd:	036132        	s32i	a3, a1, 12
40088ac0:	c1cb      	addi.n	a12, a1, 12
40088ac2:	f03d      	nop.n
40088ac4:	f03d      	nop.n
40088ac6:	f03d      	nop.n
40088ac8:	df95b1        	l32r	a11, 4008091c <_init_end+0x51c>
40088acb:	02ad      	mov.n	a10, a2
40088acd:	ff56e5        	call8	4008803c <uxPortCompareSetExtram>
40088ad0:	3188      	l32i.n	a8, a1, 12
40088ad2:	e71847        	beq	a8, a4, 40088abd <vTaskEnterCritical+0x2d>
40088ad5:	141387        	beq	a3, a8, 40088aed <vTaskEnterCritical+0x5d>
40088ad8:	df9131        	l32r	a3, 4008091c <_init_end+0x51c>
40088adb:	0e1837        	beq	a8, a3, 40088aed <vTaskEnterCritical+0x5d>
40088ade:	dfbfd1        	l32r	a13, 400809dc <_init_end+0x5dc>
40088ae1:	dfbfc1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088ae4:	69a0b2        	movi	a11, 105
40088ae7:	dfbfa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088aea:	523ee5        	call8	400daed8 <__assert_func>
40088aed:	df9531        	l32r	a3, 40080944 <_init_end+0x544>
40088af0:	883a      	add.n	a8, a8, a3
40088af2:	130c      	movi.n	a3, 1
40088af4:	070c      	movi.n	a7, 0
40088af6:	074d      	mov.n	a4, a7
40088af8:	934380        	movnez	a4, a3, a8
40088afb:	748040        	extui	a8, a4, 0, 8
40088afe:	1248      	l32i.n	a4, a2, 4
40088b00:	933740        	movnez	a3, a7, a4
40088b03:	743030        	extui	a3, a3, 0, 8
40088b06:	0e9837        	bne	a8, a3, 40088b18 <vTaskEnterCritical+0x88>
40088b09:	dfb7d1        	l32r	a13, 400809e8 <_init_end+0x5e8>
40088b0c:	dfb5c1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088b0f:	6aa0b2        	movi	a11, 106
40088b12:	dfb4a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b15:	523c25        	call8	400daed8 <__assert_func>
40088b18:	fea032        	movi	a3, 254
40088b1b:	0eb347        	bgeu	a3, a4, 40088b2d <vTaskEnterCritical+0x9d>
40088b1e:	dfb3d1        	l32r	a13, 400809ec <_init_end+0x5ec>
40088b21:	dfafc1        	l32r	a12, 400809e0 <_init_end+0x5e0>
40088b24:	6ba0b2        	movi	a11, 107
40088b27:	dfafa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b2a:	523ae5        	call8	400daed8 <__assert_func>
40088b2d:	441b      	addi.n	a4, a4, 1
40088b2f:	1249      	s32i.n	a4, a2, 4
40088b31:	001c06        	j	40088ba5 <vTaskEnterCritical+0x115>
40088b34:	eb3000        	f64cmpl	a3, a0, a0
40088b37:	807103        	lsi	f0, a1, 0x200
40088b3a:	df          	.byte 0xdf
40088b3b:	307370        	xor	a7, a3, a7
40088b3e:	038d      	mov.n	a8, a3
40088b40:	df7741        	l32r	a4, 4008091c <_init_end+0x51c>
40088b43:	130c40        	wsr.scompare1	a4
40088b46:	00e282        	s32c1i	a8, a2, 0
40088b49:	f11787        	beq	a7, a8, 40088b3e <vTaskEnterCritical+0xae>
40088b4c:	111387        	beq	a3, a8, 40088b61 <vTaskEnterCritical+0xd1>
40088b4f:	0e1847        	beq	a8, a4, 40088b61 <vTaskEnterCritical+0xd1>
40088b52:	dfa2d1        	l32r	a13, 400809dc <_init_end+0x5dc>
40088b55:	dfa6c1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b58:	69a0b2        	movi	a11, 105
40088b5b:	dfa2a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b5e:	5237a5        	call8	400daed8 <__assert_func>
40088b61:	df7831        	l32r	a3, 40080944 <_init_end+0x544>
40088b64:	883a      	add.n	a8, a8, a3
40088b66:	130c      	movi.n	a3, 1
40088b68:	070c      	movi.n	a7, 0
40088b6a:	074d      	mov.n	a4, a7
40088b6c:	934380        	movnez	a4, a3, a8
40088b6f:	748040        	extui	a8, a4, 0, 8
40088b72:	1248      	l32i.n	a4, a2, 4
40088b74:	933740        	movnez	a3, a7, a4
40088b77:	743030        	extui	a3, a3, 0, 8
40088b7a:	0e9837        	bne	a8, a3, 40088b8c <vTaskEnterCritical+0xfc>
40088b7d:	df9ad1        	l32r	a13, 400809e8 <_init_end+0x5e8>
40088b80:	df9cc1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b83:	6aa0b2        	movi	a11, 106
40088b86:	df97a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b89:	5234e5        	call8	400daed8 <__assert_func>
40088b8c:	fea032        	movi	a3, 254
40088b8f:	0eb347        	bgeu	a3, a4, 40088ba1 <vTaskEnterCritical+0x111>
40088b92:	df96d1        	l32r	a13, 400809ec <_init_end+0x5ec>
40088b95:	df96c1        	l32r	a12, 400809f0 <_init_end+0x5f0>
40088b98:	6ba0b2        	movi	a11, 107
40088b9b:	df92a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088b9e:	5233a5        	call8	400daed8 <__assert_func>
40088ba1:	441b      	addi.n	a4, a4, 1
40088ba3:	1249      	s32i.n	a4, a2, 4
40088ba5:	35ac      	beqz.n	a5, 40088bcc <vTaskEnterCritical+0x13c>
40088ba7:	03eb20        	rsr.prid	a2
40088baa:	042d20        	extui	a2, a2, 13, 1
40088bad:	f03d      	nop.n
40088baf:	f03d      	nop.n
40088bb1:	f03d      	nop.n
40088bb3:	dec431        	l32r	a3, 400806c4 <_init_end+0x2c4>
40088bb6:	a02230        	addx4	a2, a2, a3
40088bb9:	0020c0        	memw
40088bbc:	0238      	l32i.n	a3, a2, 0
40088bbe:	142322        	l32i	a2, a3, 80
40088bc1:	221b      	addi.n	a2, a2, 1
40088bc3:	146322        	s32i	a2, a3, 80
40088bc6:	021266        	bnei	a2, 1, 40088bcc <vTaskEnterCritical+0x13c>
40088bc9:	156362        	s32i	a6, a3, 84
40088bcc:	f01d      	retw.n
	...

40088bd0 <vTaskExitCritical>:
40088bd0:	004136        	entry	a1, 32
40088bd3:	df2381        	l32r	a8, 40080860 <_init_end+0x460>
40088bd6:	828a      	add.n	a8, a2, a8
40088bd8:	df2391        	l32r	a9, 40080864 <_init_end+0x464>
40088bdb:	493987        	bltu	a9, a8, 40088c28 <vTaskExitCritical+0x58>
40088bde:	03eb80        	rsr.prid	a8
40088be1:	0298      	l32i.n	a9, a2, 0
40088be3:	0e1987        	beq	a9, a8, 40088bf5 <vTaskExitCritical+0x25>
40088be6:	df83d1        	l32r	a13, 400809f4 <_init_end+0x5f4>
40088be9:	df83c1        	l32r	a12, 400809f8 <_init_end+0x5f8>
40088bec:	9da0b2        	movi	a11, 157
40088bef:	df7da1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088bf2:	522e65        	call8	400daed8 <__assert_func>
40088bf5:	1288      	l32i.n	a8, a2, 4
40088bf7:	880b      	addi.n	a8, a8, -1
40088bf9:	1289      	s32i.n	a8, a2, 4
40088bfb:	18dc      	bnez.n	a8, 40088c10 <vTaskExitCritical+0x40>
40088bfd:	f03d      	nop.n
40088bff:	f03d      	nop.n
40088c01:	f03d      	nop.n
40088c03:	f03d      	nop.n
40088c05:	df4581        	l32r	a8, 4008091c <_init_end+0x51c>
40088c08:	0289      	s32i.n	a8, a2, 0
40088c0a:	0018c6        	j	40088c71 <vTaskExitCritical+0xa1>
40088c0d:	000000        	ill
40088c10:	ffa022        	movi	a2, 255
40088c13:	5ab287        	bgeu	a2, a8, 40088c71 <vTaskExitCritical+0xa1>
40088c16:	df79d1        	l32r	a13, 400809fc <_init_end+0x5fc>
40088c19:	df77c1        	l32r	a12, 400809f8 <_init_end+0x5f8>
40088c1c:	a3a0b2        	movi	a11, 163
40088c1f:	df71a1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088c22:	201110        	or	a1, a1, a1
40088c25:	522b25        	call8	400daed8 <__assert_func>
40088c28:	03eb80        	rsr.prid	a8
40088c2b:	0298      	l32i.n	a9, a2, 0
40088c2d:	111987        	beq	a9, a8, 40088c42 <vTaskExitCritical+0x72>
40088c30:	df71d1        	l32r	a13, 400809f4 <_init_end+0x5f4>
40088c33:	df73c1        	l32r	a12, 40080a00 <_init_end+0x600>
40088c36:	9da0b2        	movi	a11, 157
40088c39:	df6aa1        	l32r	a10, 400809e4 <_init_end+0x5e4>
40088c3c:	201110        	or	a1, a1, a1
40088c3f:	5229a5        	call8	400daed8 <__assert_func>
40088c42:	1288      	l32i.n	a8, a2, 4
40088c44:	880b      	addi.n	a8, a8, -1
40088c46:	1289      	s32i.n	a8, a2, 4
40088c48:	08dc      	bnez.n	a8, 40088c5c <vTaskExitCritical+0x8c>
40088c4a:	f03d      	nop.n
40088c4c:	f03d      	nop.n
40088c4e:	f03d      	nop.n
40088c50:	f03d      	nop.n
40088c52:	df3281        	l32r	a8, 4008091c <_init_end+0x51c>
40088c55:	0289      	s32i.n	a8, a2, 0
40088c57:	000586        	j	40088c71 <vTaskExitCritical+0xa1>
40088c5a:	220000        	orb	b0, b0, b0
40088c5d:	87ffa0        	lsi	f10, a15, 0x21c
40088c60:	d10eb2        	l8ui	a11, a14, 209
40088c63:	c1df66        	bnei	a15, 64, 40088c28 <vTaskExitCritical+0x58>
40088c66:	b2df66        	bnei	a15, 64, 40088c1c <vTaskExitCritical+0x4c>
40088c69:	a1a3a0        	lsi	f10, a3, 0x284
40088c6c:	5e          	.byte 0x5e
40088c6d:	df          	.byte 0xdf
40088c6e:	5226a5        	call8	400daed8 <__assert_func>
40088c71:	df5921        	l32r	a2, 400809d8 <_init_end+0x5d8>
40088c74:	0020c0        	memw
40088c77:	002222        	l32i	a2, a2, 0
40088c7a:	02e216        	beqz	a2, 40088cac <vTaskExitCritical+0xdc>
40088c7d:	03eb20        	rsr.prid	a2
40088c80:	042d20        	extui	a2, a2, 13, 1
40088c83:	de9081        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088c86:	a02280        	addx4	a2, a2, a8
40088c89:	0020c0        	memw
40088c8c:	002282        	l32i	a8, a2, 0
40088c8f:	142822        	l32i	a2, a8, 80
40088c92:	629c      	beqz.n	a2, 40088cac <vTaskExitCritical+0xdc>
40088c94:	220b      	addi.n	a2, a2, -1
40088c96:	146822        	s32i	a2, a8, 80
40088c99:	f2cc      	bnez.n	a2, 40088cac <vTaskExitCritical+0xdc>
40088c9b:	f03d      	nop.n
40088c9d:	f03d      	nop.n
40088c9f:	f03d      	nop.n
40088ca1:	f03d      	nop.n
40088ca3:	1528a2        	l32i	a10, a8, 84
40088ca6:	de2881        	l32r	a8, 40080548 <_init_end+0x148>
40088ca9:	0008e0        	callx8	a8
40088cac:	f01d      	retw.n
	...

40088cb0 <prvAddNewTaskToReadyList>:
40088cb0:	004136        	entry	a1, 32
40088cb3:	fec482        	addi	a8, a4, -2
40088cb6:	df5391        	l32r	a9, 40080a04 <_init_end+0x604>
40088cb9:	143987        	bltu	a9, a8, 40088cd1 <prvAddNewTaskToReadyList+0x21>
40088cbc:	df53d1        	l32r	a13, 40080a08 <_init_end+0x608>
40088cbf:	2da4c2        	movi	a12, 0x42d
40088cc2:	df29b1        	l32r	a11, 40080968 <_init_end+0x568>
40088cc5:	df29a1        	l32r	a10, 4008096c <_init_end+0x56c>
40088cc8:	ddf481        	l32r	a8, 40080498 <_init_end+0x98>
40088ccb:	0008e0        	callx8	a8
40088cce:	0269e5        	call8	4008b36c <abort>
40088cd1:	df39a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088cd4:	ffdba5        	call8	40088a90 <vTaskEnterCritical>
40088cd7:	df4d91        	l32r	a9, 40080a0c <_init_end+0x60c>
40088cda:	0020c0        	memw
40088cdd:	0988      	l32i.n	a8, a9, 0
40088cdf:	881b      	addi.n	a8, a8, 1
40088ce1:	0020c0        	memw
40088ce4:	0989      	s32i.n	a8, a9, 0
40088ce6:	f03d      	nop.n
40088ce8:	f03d      	nop.n
40088cea:	f03d      	nop.n
40088cec:	f03d      	nop.n
40088cee:	de0c81        	l32r	a8, 40080520 <_init_end+0x120>
40088cf1:	3f9487        	bne	a4, a8, 40088d34 <prvAddNewTaskToReadyList+0x84>
40088cf4:	de7441        	l32r	a4, 400806c4 <_init_end+0x2c4>
40088cf7:	0020c0        	memw
40088cfa:	0488      	l32i.n	a8, a4, 0
40088cfc:	0020c0        	memw
40088cff:	1448      	l32i.n	a4, a4, 4
40088d01:	d89c      	beqz.n	a8, 40088d22 <prvAddNewTaskToReadyList+0x72>
40088d03:	14ac      	beqz.n	a4, 40088d28 <prvAddNewTaskToReadyList+0x78>
40088d05:	c898      	l32i.n	a9, a8, 48
40088d07:	c288      	l32i.n	a8, a2, 48
40088d09:	04b987        	bgeu	a9, a8, 40088d11 <prvAddNewTaskToReadyList+0x61>
40088d0c:	c4a8      	l32i.n	a10, a4, 48
40088d0e:	1b39a7        	bltu	a9, a10, 40088d2d <prvAddNewTaskToReadyList+0x7d>
40088d11:	c448      	l32i.n	a4, a4, 48
40088d13:	1b3487        	bltu	a4, a8, 40088d32 <prvAddNewTaskToReadyList+0x82>
40088d16:	03eb40        	rsr.prid	a4
40088d19:	044d40        	extui	a4, a4, 13, 1
40088d1c:	000506        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d1f:	000000        	ill
40088d22:	040c      	movi.n	a4, 0
40088d24:	000306        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d27:	140c00        	extui	a0, a0, 12, 2
40088d2a:	000186        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d2d:	040c      	movi.n	a4, 0
40088d2f:	000046        	j	40088d34 <prvAddNewTaskToReadyList+0x84>
40088d32:	140c      	movi.n	a4, 1
40088d34:	de6481        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d37:	a08480        	addx4	a8, a4, a8
40088d3a:	0020c0        	memw
40088d3d:	002882        	l32i	a8, a8, 0
40088d40:	024856        	bnez	a8, 40088d68 <prvAddNewTaskToReadyList+0xb8>
40088d43:	de6081        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d46:	a08480        	addx4	a8, a4, a8
40088d49:	0020c0        	memw
40088d4c:	006822        	s32i	a2, a8, 0
40088d4f:	f03d      	nop.n
40088d51:	f03d      	nop.n
40088d53:	f03d      	nop.n
40088d55:	f03d      	nop.n
40088d57:	df2d81        	l32r	a8, 40080a0c <_init_end+0x60c>
40088d5a:	0020c0        	memw
40088d5d:	0888      	l32i.n	a8, a8, 0
40088d5f:	391866        	bnei	a8, 1, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d62:	ff7325        	call8	40088494 <prvInitialiseTaskLists>
40088d65:	000cc6        	j	40088d9c <prvAddNewTaskToReadyList+0xec>
40088d68:	df1c81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088d6b:	0020c0        	memw
40088d6e:	0888      	l32i.n	a8, a8, 0
40088d70:	88ec      	bnez.n	a8, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d72:	de5481        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d75:	a08480        	addx4	a8, a4, a8
40088d78:	0020c0        	memw
40088d7b:	0888      	l32i.n	a8, a8, 0
40088d7d:	089c      	beqz.n	a8, 40088d91 <prvAddNewTaskToReadyList+0xe1>
40088d7f:	de5181        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d82:	a08480        	addx4	a8, a4, a8
40088d85:	0020c0        	memw
40088d88:	0888      	l32i.n	a8, a8, 0
40088d8a:	c888      	l32i.n	a8, a8, 48
40088d8c:	c298      	l32i.n	a9, a2, 48
40088d8e:	0a3987        	bltu	a9, a8, 40088d9c <prvAddNewTaskToReadyList+0xec>
40088d91:	de4c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088d94:	a08480        	addx4	a8, a4, a8
40088d97:	0020c0        	memw
40088d9a:	0829      	s32i.n	a2, a8, 0
40088d9c:	f03d      	nop.n
40088d9e:	f03d      	nop.n
40088da0:	f03d      	nop.n
40088da2:	f03d      	nop.n
40088da4:	df1b91        	l32r	a9, 40080a10 <_init_end+0x610>
40088da7:	0988      	l32i.n	a8, a9, 0
40088da9:	881b      	addi.n	a8, a8, 1
40088dab:	0989      	s32i.n	a8, a9, 0
40088dad:	f03d      	nop.n
40088daf:	f03d      	nop.n
40088db1:	f03d      	nop.n
40088db3:	f03d      	nop.n
40088db5:	0c2282        	l32i	a8, a2, 48
40088db8:	df0191        	l32r	a9, 400809bc <_init_end+0x5bc>
40088dbb:	0020c0        	memw
40088dbe:	002992        	l32i	a9, a9, 0
40088dc1:	07b987        	bgeu	a9, a8, 40088dcc <prvAddNewTaskToReadyList+0x11c>
40088dc4:	defe91        	l32r	a9, 400809bc <_init_end+0x5bc>
40088dc7:	0020c0        	memw
40088dca:	0989      	s32i.n	a8, a9, 0
40088dcc:	a08880        	addx4	a8, a8, a8
40088dcf:	1198e0        	slli	a9, a8, 2
40088dd2:	b28b      	addi.n	a11, a2, 8
40088dd4:	f03d      	nop.n
40088dd6:	dee6a1        	l32r	a10, 40080970 <_init_end+0x570>
40088dd9:	aa9a      	add.n	a10, a10, a9
40088ddb:	014925        	call8	4008a26c <vListInsertEnd>
40088dde:	def6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088de1:	ffdee5        	call8	40088bd0 <vTaskExitCritical>
40088de4:	defd81        	l32r	a8, 400809d8 <_init_end+0x5d8>
40088de7:	0020c0        	memw
40088dea:	0888      	l32i.n	a8, a8, 0
40088dec:	042816        	beqz	a8, 40088e32 <prvAddNewTaskToReadyList+0x182>
40088def:	def2a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088df2:	ffc9e5        	call8	40088a90 <vTaskEnterCritical>
40088df5:	de3381        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088df8:	a08480        	addx4	a8, a4, a8
40088dfb:	0020c0        	memw
40088dfe:	0888      	l32i.n	a8, a8, 0
40088e00:	007816        	beqz	a8, 40088e0b <prvAddNewTaskToReadyList+0x15b>
40088e03:	c898      	l32i.n	a9, a8, 48
40088e05:	0c2282        	l32i	a8, a2, 48
40088e08:	1db987        	bgeu	a9, a8, 40088e29 <prvAddNewTaskToReadyList+0x179>
40088e0b:	03eb80        	rsr.prid	a8
40088e0e:	048d80        	extui	a8, a8, 13, 1
40088e11:	0d9487        	bne	a4, a8, 40088e22 <prvAddNewTaskToReadyList+0x172>
40088e14:	03eba0        	rsr.prid	a10
40088e17:	04ada0        	extui	a10, a10, 13, 1
40088e1a:	f83ae5        	call8	400811c8 <esp_crosscore_int_send_yield>
40088e1d:	000206        	j	40088e29 <prvAddNewTaskToReadyList+0x179>
40088e20:	b80000        	lsi	f0, a0, 0x2e0
40088e23:	04adc2        	movi	a12, 0xfffffd04
40088e26:	ff79a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
40088e29:	dee3a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088e2c:	201110        	or	a1, a1, a1
40088e2f:	ffda25        	call8	40088bd0 <vTaskExitCritical>
40088e32:	f01d      	retw.n

40088e34 <xTaskCreatePinnedToCore>:
40088e34:	008136        	entry	a1, 64
40088e37:	076172        	s32i	a7, a1, 28
40088e3a:	066132        	s32i	a3, a1, 24
40088e3d:	f03d      	nop.n
40088e3f:	f03d      	nop.n
40088e41:	f03d      	nop.n
40088e43:	f03d      	nop.n
40088e45:	de61b1        	l32r	a11, 400807cc <_init_end+0x3cc>
40088e48:	04ad      	mov.n	a10, a4
40088e4a:	fb4ca5        	call8	40084314 <heap_caps_malloc>
40088e4d:	0a7d      	mov.n	a7, a10
40088e4f:	ba9c      	beqz.n	a10, 40088e6e <xTaskCreatePinnedToCore+0x3a>
40088e51:	de5eb1        	l32r	a11, 400807cc <_init_end+0x3cc>
40088e54:	64a1a2        	movi	a10, 0x164
40088e57:	fb4be5        	call8	40084314 <heap_caps_malloc>
40088e5a:	0a3d      	mov.n	a3, a10
40088e5c:	3a8c      	beqz.n	a10, 40088e63 <xTaskCreatePinnedToCore+0x2f>
40088e5e:	da79      	s32i.n	a7, a10, 52
40088e60:	000346        	j	40088e71 <xTaskCreatePinnedToCore+0x3d>
40088e63:	07ad      	mov.n	a10, a7
40088e65:	de5f81        	l32r	a8, 400807e4 <_init_end+0x3e4>
40088e68:	0008e0        	callx8	a8
40088e6b:	000086        	j	40088e71 <xTaskCreatePinnedToCore+0x3d>
40088e6e:	00a032        	movi	a3, 0
40088e71:	044316        	beqz	a3, 40088eb9 <xTaskCreatePinnedToCore+0x85>
40088e74:	01d372        	addmi	a7, a3, 0x100
40088e77:	00a082        	movi	a8, 0
40088e7a:	604782        	s8i	a8, a7, 96
40088e7d:	0020c0        	memw
40088e80:	f03d      	nop.n
40088e82:	f03d      	nop.n
40088e84:	f03d      	nop.n
40088e86:	f03d      	nop.n
40088e88:	102182        	l32i	a8, a1, 64
40088e8b:	2189      	s32i.n	a8, a1, 8
40088e8d:	070c      	movi.n	a7, 0
40088e8f:	1179      	s32i.n	a7, a1, 4
40088e91:	0139      	s32i.n	a3, a1, 0
40088e93:	f03d      	nop.n
40088e95:	f03d      	nop.n
40088e97:	f03d      	nop.n
40088e99:	f03d      	nop.n
40088e9b:	71f8      	l32i.n	a15, a1, 28
40088e9d:	06ed      	mov.n	a14, a6
40088e9f:	05dd      	mov.n	a13, a5
40088ea1:	04cd      	mov.n	a12, a4
40088ea3:	61b8      	l32i.n	a11, a1, 24
40088ea5:	20a220        	or	a10, a2, a2
40088ea8:	ff4fa5        	call8	400883a4 <prvInitialiseNewTask>
40088eab:	1021c2        	l32i	a12, a1, 64
40088eae:	02bd      	mov.n	a11, a2
40088eb0:	03ad      	mov.n	a10, a3
40088eb2:	ffdfe5        	call8	40088cb0 <prvAddNewTaskToReadyList>
40088eb5:	120c      	movi.n	a2, 1
40088eb7:	f01d      	retw.n
40088eb9:	f27c      	movi.n	a2, -1
40088ebb:	f01d      	retw.n
40088ebd:	000000        	ill

40088ec0 <vTaskStartScheduler>:
40088ec0:	00a136        	entry	a1, 80
40088ec3:	de6c21        	l32r	a2, 40080874 <_init_end+0x474>
40088ec6:	0020c0        	memw
40088ec9:	0228      	l32i.n	a2, a2, 0
40088ecb:	0020c0        	memw
40088ece:	b129      	s32i.n	a2, a1, 44
40088ed0:	020c      	movi.n	a2, 0
40088ed2:	000c46        	j	40088f07 <vTaskStartScheduler+0x47>
40088ed5:	20d220        	or	a13, a2, a2
40088ed8:	decfc1        	l32r	a12, 40080a14 <_init_end+0x614>
40088edb:	0b1c      	movi.n	a11, 16
40088edd:	1cc1a2        	addi	a10, a1, 28
40088ee0:	533525        	call8	400dc234 <snprintf>
40088ee3:	0129      	s32i.n	a2, a1, 0
40088ee5:	f03d      	nop.n
40088ee7:	f03d      	nop.n
40088ee9:	f03d      	nop.n
40088eeb:	f03d      	nop.n
40088eed:	deacf1        	l32r	a15, 400809a0 <_init_end+0x5a0>
40088ef0:	a0f2f0        	addx4	a15, a2, a15
40088ef3:	00a0e2        	movi	a14, 0
40088ef6:	20dee0        	or	a13, a14, a14
40088ef9:	00a4c2        	movi	a12, 0x400
40088efc:	1cc1b2        	addi	a11, a1, 28
40088eff:	dec6a1        	l32r	a10, 40080a18 <_init_end+0x618>
40088f02:	fff325        	call8	40088e34 <xTaskCreatePinnedToCore>
40088f05:	221b      	addi.n	a2, a2, 1
40088f07:	ca22a6        	blti	a2, 2, 40088ed5 <vTaskStartScheduler+0x15>
40088f0a:	021a66        	bnei	a10, 1, 40088f10 <vTaskStartScheduler+0x50>
40088f0d:	00d2a5        	call8	40089c38 <xTimerCreateTimerTask>
40088f10:	241a66        	bnei	a10, 1, 40088f38 <vTaskStartScheduler+0x78>
40088f13:	006320        	rsil	a2, 3
40088f16:	080c      	movi.n	a8, 0
40088f18:	dea021        	l32r	a2, 40080998 <_init_end+0x598>
40088f1b:	0020c0        	memw
40088f1e:	0289      	s32i.n	a8, a2, 0
40088f20:	180c      	movi.n	a8, 1
40088f22:	f03d      	nop.n
40088f24:	f03d      	nop.n
40088f26:	0020f0        	nop
40088f29:	deab21        	l32r	a2, 400809d8 <_init_end+0x5d8>
40088f2c:	0020c0        	memw
40088f2f:	0289      	s32i.n	a8, a2, 0
40088f31:	fefbe5        	call8	40087ef0 <xPortStartScheduler>
40088f34:	000606        	j	40088f50 <vTaskStartScheduler+0x90>
40088f37:	4a5600        	madd.s	f5, f6, f0
40088f3a:	b8d101        	l32r	a0, 40077280 <__udivmoddi4+0x1268c>
40088f3d:	de          	.byte 0xde
40088f3e:	deb8c1        	l32r	a12, 40080a20 <_init_end+0x620>
40088f41:	de89b1        	l32r	a11, 40080968 <_init_end+0x568>
40088f44:	de8aa1        	l32r	a10, 4008096c <_init_end+0x56c>
40088f47:	dd5481        	l32r	a8, 40080498 <_init_end+0x98>
40088f4a:	0008e0        	callx8	a8
40088f4d:	0241e5        	call8	4008b36c <abort>
40088f50:	0020c0        	memw
40088f53:	0b2182        	l32i	a8, a1, 44
40088f56:	de4721        	l32r	a2, 40080874 <_init_end+0x474>
40088f59:	0020c0        	memw
40088f5c:	0228      	l32i.n	a2, a2, 0
40088f5e:	021827        	beq	a8, a2, 40088f64 <vTaskStartScheduler+0xa4>
40088f61:	4d7565        	call8	400d66b8 <__stack_chk_fail>
40088f64:	f01d      	retw.n
	...

40088f68 <vTaskDelete>:
40088f68:	004136        	entry	a1, 32
40088f6b:	03eb30        	rsr.prid	a3
40088f6e:	043d30        	extui	a3, a3, 13, 1
40088f71:	de91a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40088f74:	ffb1a5        	call8	40088a90 <vTaskEnterCritical>
40088f77:	005256        	bnez	a2, 40088f80 <vTaskDelete+0x18>
40088f7a:	ffa2e5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
40088f7d:	202aa0        	or	a2, a10, a10
40088f80:	08c242        	addi	a4, a2, 8
40088f83:	20a440        	or	a10, a4, a4
40088f86:	013525        	call8	4008a2d8 <uxListRemove>
40088f89:	0b2282        	l32i	a8, a2, 44
40088f8c:	488c      	beqz.n	a8, 40088f94 <vTaskDelete+0x2c>
40088f8e:	1cc2a2        	addi	a10, a2, 28
40088f91:	013465        	call8	4008a2d8 <uxListRemove>
40088f94:	de9f91        	l32r	a9, 40080a10 <_init_end+0x610>
40088f97:	0988      	l32i.n	a8, a9, 0
40088f99:	881b      	addi.n	a8, a8, 1
40088f9b:	0989      	s32i.n	a8, a9, 0
40088f9d:	f03d      	nop.n
40088f9f:	f03d      	nop.n
40088fa1:	f03d      	nop.n
40088fa3:	f03d      	nop.n
40088fa5:	ddc781        	l32r	a8, 400806c4 <_init_end+0x2c4>
40088fa8:	a08380        	addx4	a8, a3, a8
40088fab:	0020c0        	memw
40088fae:	0888      	l32i.n	a8, a8, 0
40088fb0:	1a1287        	beq	a2, a8, 40088fce <vTaskDelete+0x66>
40088fb3:	090c      	movi.n	a9, 0
40088fb5:	180c      	movi.n	a8, 1
40088fb7:	938930        	movnez	a8, a9, a3
40088fba:	ddc291        	l32r	a9, 400806c4 <_init_end+0x2c4>
40088fbd:	a09890        	addx4	a9, a8, a9
40088fc0:	0020c0        	memw
40088fc3:	0998      	l32i.n	a9, a9, 0
40088fc5:	051297        	beq	a2, a9, 40088fce <vTaskDelete+0x66>
40088fc8:	122292        	l32i	a9, a2, 72
40088fcb:	1e9897        	bne	a8, a9, 40088fed <vTaskDelete+0x85>
40088fce:	20b440        	or	a11, a4, a4
40088fd1:	de6ca1        	l32r	a10, 40080984 <_init_end+0x584>
40088fd4:	012965        	call8	4008a26c <vListInsertEnd>
40088fd7:	de9381        	l32r	a8, 40080a24 <_init_end+0x624>
40088fda:	0020c0        	memw
40088fdd:	002842        	l32i	a4, a8, 0
40088fe0:	01c442        	addi	a4, a4, 1
40088fe3:	0020c0        	memw
40088fe6:	0849      	s32i.n	a4, a8, 0
40088fe8:	040c      	movi.n	a4, 0
40088fea:	0004c6        	j	40089001 <vTaskDelete+0x99>
40088fed:	de8781        	l32r	a8, 40080a0c <_init_end+0x60c>
40088ff0:	0020c0        	memw
40088ff3:	0848      	l32i.n	a4, a8, 0
40088ff5:	440b      	addi.n	a4, a4, -1
40088ff7:	0020c0        	memw
40088ffa:	0849      	s32i.n	a4, a8, 0
40088ffc:	ff3325        	call8	40088330 <prvResetNextTaskUnblockTime>
40088fff:	140c      	movi.n	a4, 1
40089001:	de6da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089004:	ffbca5        	call8	40088bd0 <vTaskExitCritical>
40089007:	091466        	bnei	a4, 1, 40089014 <vTaskDelete+0xac>
4008900a:	02ad      	mov.n	a10, a2
4008900c:	ff3565        	call8	40088364 <prvDeleteTLS>
4008900f:	02ad      	mov.n	a10, a2
40089011:	ff4e65        	call8	400884f8 <prvDeleteTCB>
40089014:	de7141        	l32r	a4, 400809d8 <_init_end+0x5d8>
40089017:	0020c0        	memw
4008901a:	002442        	l32i	a4, a4, 0
4008901d:	057416        	beqz	a4, 40089078 <vTaskDelete+0x110>
40089020:	dda941        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089023:	a04340        	addx4	a4, a3, a4
40089026:	0020c0        	memw
40089029:	002442        	l32i	a4, a4, 0
4008902c:	2d9247        	bne	a2, a4, 4008905d <vTaskDelete+0xf5>
4008902f:	de5ba1        	l32r	a10, 4008099c <_init_end+0x59c>
40089032:	a033a0        	addx4	a3, a3, a10
40089035:	0020c0        	memw
40089038:	0328      	l32i.n	a2, a3, 0
4008903a:	329c      	beqz.n	a2, 40089051 <vTaskDelete+0xe9>
4008903c:	de7bd1        	l32r	a13, 40080a28 <_init_end+0x628>
4008903f:	19a5c2        	movi	a12, 0x519
40089042:	de49b1        	l32r	a11, 40080968 <_init_end+0x568>
40089045:	de49a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089048:	dd1481        	l32r	a8, 40080498 <_init_end+0x98>
4008904b:	0008e0        	callx8	a8
4008904e:	0231e5        	call8	4008b36c <abort>
40089051:	03eba0        	rsr.prid	a10
40089054:	04ada0        	extui	a10, a10, 13, 1
40089057:	f81725        	call8	400811c8 <esp_crosscore_int_send_yield>
4008905a:	f01d      	retw.n
4008905c:	a04200        	addx4	a4, a2, a0
4008905f:	a0a200        	addx4	a10, a2, a0
40089062:	a43001        	l32r	a0, 40072124 <__udivmoddi4+0xd530>
40089065:	973193        	lsi	f9, a1, 0x25c
40089068:	30dd      	lsi	f13, a0, 0
4008906a:	a03a      	add.n	a10, a0, a3
4008906c:	0020c0        	memw
4008906f:	002332        	l32i	a3, a3, 0
40089072:	029237        	bne	a2, a3, 40089078 <vTaskDelete+0x110>
40089075:	feeae5        	call8	40087f24 <vPortYieldOtherCore>
40089078:	f01d      	retw.n
	...

4008907c <vTaskDelay>:
4008907c:	004136        	entry	a1, 32
4008907f:	062216        	beqz	a2, 400890e5 <vTaskDelay+0x69>
40089082:	03eb80        	rsr.prid	a8
40089085:	048d80        	extui	a8, a8, 13, 1
40089088:	de4531        	l32r	a3, 4008099c <_init_end+0x59c>
4008908b:	a08830        	addx4	a8, a8, a3
4008908e:	0020c0        	memw
40089091:	002832        	l32i	a3, a8, 0
40089094:	014316        	beqz	a3, 400890ac <vTaskDelay+0x30>
40089097:	de65d1        	l32r	a13, 40080a2c <_init_end+0x62c>
4008909a:	9ea5c2        	movi	a12, 0x59e
4008909d:	de32b1        	l32r	a11, 40080968 <_init_end+0x568>
400890a0:	de33a1        	l32r	a10, 4008096c <_init_end+0x56c>
400890a3:	dcfd81        	l32r	a8, 40080498 <_init_end+0x98>
400890a6:	0008e0        	callx8	a8
400890a9:	022c25        	call8	4008b36c <abort>
400890ac:	de4331        	l32r	a3, 400809b8 <_init_end+0x5b8>
400890af:	20a330        	or	a10, a3, a3
400890b2:	ff9de5        	call8	40088a90 <vTaskEnterCritical>
400890b5:	de3881        	l32r	a8, 40080998 <_init_end+0x598>
400890b8:	0020c0        	memw
400890bb:	0888      	l32i.n	a8, a8, 0
400890bd:	228a      	add.n	a2, a2, a8
400890bf:	03eb80        	rsr.prid	a8
400890c2:	048d80        	extui	a8, a8, 13, 1
400890c5:	dd7f91        	l32r	a9, 400806c4 <_init_end+0x2c4>
400890c8:	a08890        	addx4	a8, a8, a9
400890cb:	0020c0        	memw
400890ce:	08a8      	l32i.n	a10, a8, 0
400890d0:	aa8b      	addi.n	a10, a10, 8
400890d2:	012065        	call8	4008a2d8 <uxListRemove>
400890d5:	03eba0        	rsr.prid	a10
400890d8:	04ada0        	extui	a10, a10, 13, 1
400890db:	02bd      	mov.n	a11, a2
400890dd:	ff4725        	call8	40088550 <prvAddCurrentTaskToDelayedList>
400890e0:	03ad      	mov.n	a10, a3
400890e2:	ffaee5        	call8	40088bd0 <vTaskExitCritical>
400890e5:	03eba0        	rsr.prid	a10
400890e8:	04ada0        	extui	a10, a10, 13, 1
400890eb:	f80de5        	call8	400811c8 <esp_crosscore_int_send_yield>
400890ee:	f01d      	retw.n

400890f0 <uxTaskPriorityGet>:
400890f0:	004136        	entry	a1, 32
400890f3:	de31a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400890f6:	ff99a5        	call8	40088a90 <vTaskEnterCritical>
400890f9:	005256        	bnez	a2, 40089102 <uxTaskPriorityGet+0x12>
400890fc:	ff8aa5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400890ff:	202aa0        	or	a2, a10, a10
40089102:	c228      	l32i.n	a2, a2, 48
40089104:	de2da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089107:	ffaca5        	call8	40088bd0 <vTaskExitCritical>
4008910a:	f01d      	retw.n

4008910c <vTaskPrioritySet>:
4008910c:	004136        	entry	a1, 32
4008910f:	841c      	movi.n	a4, 24
40089111:	14b437        	bgeu	a4, a3, 40089129 <vTaskPrioritySet+0x1d>
40089114:	de47d1        	l32r	a13, 40080a30 <_init_end+0x630>
40089117:	50a6c2        	movi	a12, 0x650
4008911a:	de13b1        	l32r	a11, 40080968 <_init_end+0x568>
4008911d:	de13a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089120:	dcde81        	l32r	a8, 40080498 <_init_end+0x98>
40089123:	0008e0        	callx8	a8
40089126:	022465        	call8	4008b36c <abort>
40089129:	841c      	movi.n	a4, 24
4008912b:	01b437        	bgeu	a4, a3, 40089130 <vTaskPrioritySet+0x24>
4008912e:	043d      	mov.n	a3, a4
40089130:	de22a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089133:	ff95e5        	call8	40088a90 <vTaskEnterCritical>
40089136:	007256        	bnez	a2, 40089141 <vTaskPrioritySet+0x35>
40089139:	201110        	or	a1, a1, a1
4008913c:	ff86a5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
4008913f:	0a2d      	mov.n	a2, a10
40089141:	162242        	l32i	a4, a2, 88
40089144:	029347        	bne	a3, a4, 4008914a <vTaskPrioritySet+0x3e>
40089147:	003d86        	j	40089241 <vTaskPrioritySet+0x135>
4008914a:	52b437        	bgeu	a4, a3, 400891a0 <vTaskPrioritySet+0x94>
4008914d:	03eb40        	rsr.prid	a4
40089150:	044d40        	extui	a4, a4, 13, 1
40089153:	dd5c81        	l32r	a8, 400806c4 <_init_end+0x2c4>
40089156:	a04480        	addx4	a4, a4, a8
40089159:	0020c0        	memw
4008915c:	0448      	l32i.n	a4, a4, 0
4008915e:	571247        	beq	a2, a4, 400891b9 <vTaskPrioritySet+0xad>
40089161:	1222a2        	l32i	a10, a2, 72
40089164:	0a8d      	mov.n	a8, a10
40089166:	03eb40        	rsr.prid	a4
40089169:	044d40        	extui	a4, a4, 13, 1
4008916c:	051a47        	beq	a10, a4, 40089175 <vTaskPrioritySet+0x69>
4008916f:	dcec41        	l32r	a4, 40080520 <_init_end+0x120>
40089172:	159a47        	bne	a10, a4, 4008918b <vTaskPrioritySet+0x7f>
40089175:	03eb40        	rsr.prid	a4
40089178:	044d40        	extui	a4, a4, 13, 1
4008917b:	dd5291        	l32r	a9, 400806c4 <_init_end+0x2c4>
4008917e:	a04490        	addx4	a4, a4, a9
40089181:	0020c0        	memw
40089184:	0448      	l32i.n	a4, a4, 0
40089186:	c448      	l32i.n	a4, a4, 48
40089188:	32b347        	bgeu	a3, a4, 400891be <vTaskPrioritySet+0xb2>
4008918b:	03eb40        	rsr.prid	a4
4008918e:	044d40        	extui	a4, a4, 13, 1
40089191:	2f1847        	beq	a8, a4, 400891c4 <vTaskPrioritySet+0xb8>
40089194:	03bd      	mov.n	a11, a3
40089196:	ff42a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
40089199:	040c      	movi.n	a4, 0
4008919b:	000b06        	j	400891cb <vTaskPrioritySet+0xbf>
4008919e:	400000        	ssr	a0
400891a1:	03eb      	addi.n	a0, a3, 14
400891a3:	044d40        	extui	a4, a4, 13, 1
400891a6:	dd4781        	l32r	a8, 400806c4 <_init_end+0x2c4>
400891a9:	a04480        	addx4	a4, a4, a8
400891ac:	0020c0        	memw
400891af:	0448      	l32i.n	a4, a4, 0
400891b1:	141247        	beq	a2, a4, 400891c9 <vTaskPrioritySet+0xbd>
400891b4:	040c      	movi.n	a4, 0
400891b6:	000446        	j	400891cb <vTaskPrioritySet+0xbf>
400891b9:	040c      	movi.n	a4, 0
400891bb:	000306        	j	400891cb <vTaskPrioritySet+0xbf>
400891be:	140c      	movi.n	a4, 1
400891c0:	0001c6        	j	400891cb <vTaskPrioritySet+0xbf>
400891c3:	040c00        	extui	a0, a0, 12, 1
400891c6:	000046        	j	400891cb <vTaskPrioritySet+0xbf>
400891c9:	140c      	movi.n	a4, 1
400891cb:	c288      	l32i.n	a8, a2, 48
400891cd:	162292        	l32i	a9, a2, 88
400891d0:	019897        	bne	a8, a9, 400891d5 <vTaskPrioritySet+0xc9>
400891d3:	c239      	s32i.n	a3, a2, 48
400891d5:	166232        	s32i	a3, a2, 88
400891d8:	f03d      	nop.n
400891da:	f03d      	nop.n
400891dc:	f03d      	nop.n
400891de:	f03d      	nop.n
400891e0:	7298      	l32i.n	a9, a2, 28
400891e2:	006996        	bltz	a9, 400891ec <vTaskPrioritySet+0xe0>
400891e5:	991c      	movi.n	a9, 25
400891e7:	c03930        	sub	a3, a9, a3
400891ea:	7239      	s32i.n	a3, a2, 28
400891ec:	f03d      	nop.n
400891ee:	f03d      	nop.n
400891f0:	f03d      	nop.n
400891f2:	f03d      	nop.n
400891f4:	62a8      	l32i.n	a10, a2, 24
400891f6:	a08880        	addx4	a8, a8, a8
400891f9:	1198e0        	slli	a9, a8, 2
400891fc:	dddd31        	l32r	a3, 40080970 <_init_end+0x570>
400891ff:	393a      	add.n	a3, a9, a3
40089201:	309a37        	bne	a10, a3, 40089235 <vTaskPrioritySet+0x129>
40089204:	528b      	addi.n	a5, a2, 8
40089206:	05ad      	mov.n	a10, a5
40089208:	010ce5        	call8	4008a2d8 <uxListRemove>
4008920b:	c228      	l32i.n	a2, a2, 48
4008920d:	ddeb31        	l32r	a3, 400809bc <_init_end+0x5bc>
40089210:	0020c0        	memw
40089213:	0338      	l32i.n	a3, a3, 0
40089215:	07b327        	bgeu	a3, a2, 40089220 <vTaskPrioritySet+0x114>
40089218:	dde931        	l32r	a3, 400809bc <_init_end+0x5bc>
4008921b:	0020c0        	memw
4008921e:	0329      	s32i.n	a2, a3, 0
40089220:	a02220        	addx4	a2, a2, a2
40089223:	1132e0        	slli	a3, a2, 2
40089226:	202330        	or	a2, a3, a3
40089229:	20b550        	or	a11, a5, a5
4008922c:	ddd1a1        	l32r	a10, 40080970 <_init_end+0x570>
4008922f:	80aa30        	add	a10, a10, a3
40089232:	0103a5        	call8	4008a26c <vListInsertEnd>
40089235:	081466        	bnei	a4, 1, 40089241 <vTaskPrioritySet+0x135>
40089238:	03eba0        	rsr.prid	a10
4008923b:	04ada0        	extui	a10, a10, 13, 1
4008923e:	f7f8a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40089241:	dddda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089244:	ff98a5        	call8	40088bd0 <vTaskExitCritical>
40089247:	f01d      	retw.n
40089249:	000000        	ill

4008924c <prvCheckTasksWaitingTermination>:
4008924c:	004136        	entry	a1, 32
4008924f:	03eb30        	rsr.prid	a3
40089252:	043d30        	extui	a3, a3, 13, 1
40089255:	002b06        	j	40089305 <prvCheckTasksWaitingTermination+0xb9>
40089258:	ddd8a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008925b:	ff8365        	call8	40088a90 <vTaskEnterCritical>
4008925e:	ddc921        	l32r	a2, 40080984 <_init_end+0x584>
40089261:	0228      	l32i.n	a2, a2, 0
40089263:	087216        	beqz	a2, 400892ee <prvCheckTasksWaitingTermination+0xa2>
40089266:	ddc721        	l32r	a2, 40080984 <_init_end+0x584>
40089269:	32a8      	l32i.n	a10, a2, 12
4008926b:	001206        	j	400892b7 <prvCheckTasksWaitingTermination+0x6b>
4008926e:	000000        	ill
40089271:	032a22        	l32i	a2, a10, 12
40089274:	1222c2        	l32i	a12, a2, 72
40089277:	dd1391        	l32r	a9, 400806c4 <_init_end+0x2c4>
4008927a:	a09390        	addx4	a9, a3, a9
4008927d:	0020c0        	memw
40089280:	002982        	l32i	a8, a9, 0
40089283:	2e1287        	beq	a2, a8, 400892b5 <prvCheckTasksWaitingTermination+0x69>
40089286:	00a092        	movi	a9, 0
40089289:	180c      	movi.n	a8, 1
4008928b:	938930        	movnez	a8, a9, a3
4008928e:	dd0d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089291:	a08890        	addx4	a8, a8, a9
40089294:	0020c0        	memw
40089297:	0888      	l32i.n	a8, a8, 0
40089299:	181287        	beq	a2, a8, 400892b5 <prvCheckTasksWaitingTermination+0x69>
4008929c:	c09c30        	sub	a9, a12, a3
4008929f:	1d0c      	movi.n	a13, 1
400892a1:	080c      	movi.n	a8, 0
400892a3:	084d      	mov.n	a4, a8
400892a5:	834d90        	moveqz	a4, a13, a9
400892a8:	dde3b1        	l32r	a11, 40080a34 <_init_end+0x634>
400892ab:	bcba      	add.n	a11, a12, a11
400892ad:	838db0        	moveqz	a8, a13, a11
400892b0:	208840        	or	a8, a8, a4
400892b3:	88cc      	bnez.n	a8, 400892bf <prvCheckTasksWaitingTermination+0x73>
400892b5:	1aa8      	l32i.n	a10, a10, 4
400892b7:	dde021        	l32r	a2, 40080a38 <_init_end+0x638>
400892ba:	b39a27        	bne	a10, a2, 40089271 <prvCheckTasksWaitingTermination+0x25>
400892bd:	020c      	movi.n	a2, 0
400892bf:	e2ac      	beqz.n	a2, 400892f1 <prvCheckTasksWaitingTermination+0xa5>
400892c1:	010165        	call8	4008a2d8 <uxListRemove>
400892c4:	ddd291        	l32r	a9, 40080a0c <_init_end+0x60c>
400892c7:	0020c0        	memw
400892ca:	0988      	l32i.n	a8, a9, 0
400892cc:	880b      	addi.n	a8, a8, -1
400892ce:	0020c0        	memw
400892d1:	0989      	s32i.n	a8, a9, 0
400892d3:	f03d      	nop.n
400892d5:	f03d      	nop.n
400892d7:	f03d      	nop.n
400892d9:	f03d      	nop.n
400892db:	ddd291        	l32r	a9, 40080a24 <_init_end+0x624>
400892de:	0020c0        	memw
400892e1:	0988      	l32i.n	a8, a9, 0
400892e3:	880b      	addi.n	a8, a8, -1
400892e5:	0020c0        	memw
400892e8:	0989      	s32i.n	a8, a9, 0
400892ea:	0000c6        	j	400892f1 <prvCheckTasksWaitingTermination+0xa5>
400892ed:	a02200        	addx4	a2, a2, a0
400892f0:	b1a100        	lsi	f0, a1, 0x2c4
400892f3:	a5dd      	lsi	f13, a5, 20
400892f5:	ff8d      	lsi	f8, a15, 60
400892f7:	015216        	beqz	a2, 40089310 <prvCheckTasksWaitingTermination+0xc4>
400892fa:	20a220        	or	a10, a2, a2
400892fd:	ff0665        	call8	40088364 <prvDeleteTLS>
40089300:	02ad      	mov.n	a10, a2
40089302:	ff1f65        	call8	400884f8 <prvDeleteTCB>
40089305:	ddc721        	l32r	a2, 40080a24 <_init_end+0x624>
40089308:	0020c0        	memw
4008930b:	0228      	l32i.n	a2, a2, 0
4008930d:	f47256        	bnez	a2, 40089258 <prvCheckTasksWaitingTermination+0xc>
40089310:	f01d      	retw.n
	...

40089314 <prvIdleTask>:
40089314:	004136        	entry	a1, 32
40089317:	fff365        	call8	4008924c <prvCheckTasksWaitingTermination>
4008931a:	4de7e5        	call8	400d7198 <esp_vApplicationIdleHook>
4008931d:	fffd86        	j	40089317 <prvIdleTask+0x3>

40089320 <xTaskIncrementTick>:
40089320:	004136        	entry	a1, 32
40089323:	fec1a5        	call8	40087f3c <xPortInIsrContext>
40089326:	da8c      	beqz.n	a10, 40089337 <xTaskIncrementTick+0x17>
40089328:	f906e5        	call8	40082398 <esp_vApplicationTickHook>
4008932b:	03eb20        	rsr.prid	a2
4008932e:	042d20        	extui	a2, a2, 13, 1
40089331:	021266        	bnei	a2, 1, 40089337 <xTaskIncrementTick+0x17>
40089334:	006486        	j	400894ca <xTaskIncrementTick+0x1aa>
40089337:	03eb20        	rsr.prid	a2
4008933a:	042d20        	extui	a2, a2, 13, 1
4008933d:	dd9731        	l32r	a3, 4008099c <_init_end+0x59c>
40089340:	a02230        	addx4	a2, a2, a3
40089343:	0020c0        	memw
40089346:	0228      	l32i.n	a2, a2, 0
40089348:	154256        	bnez	a2, 400894a0 <xTaskIncrementTick+0x180>
4008934b:	dd9ba1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008934e:	ff7425        	call8	40088a90 <vTaskEnterCritical>
40089351:	dd9121        	l32r	a2, 40080998 <_init_end+0x598>
40089354:	0020c0        	memw
40089357:	0238      	l32i.n	a3, a2, 0
40089359:	331b      	addi.n	a3, a3, 1
4008935b:	0020c0        	memw
4008935e:	0239      	s32i.n	a3, a2, 0
40089360:	f03d      	nop.n
40089362:	f03d      	nop.n
40089364:	f03d      	nop.n
40089366:	f03d      	nop.n
40089368:	0020c0        	memw
4008936b:	0248      	l32i.n	a4, a2, 0
4008936d:	054456        	bnez	a4, 400893c5 <xTaskIncrementTick+0xa5>
40089370:	dd7a21        	l32r	a2, 40080958 <_init_end+0x558>
40089373:	0020c0        	memw
40089376:	0228      	l32i.n	a2, a2, 0
40089378:	0228      	l32i.n	a2, a2, 0
4008937a:	329c      	beqz.n	a2, 40089391 <xTaskIncrementTick+0x71>
4008937c:	ddb0d1        	l32r	a13, 40080a3c <_init_end+0x63c>
4008937f:	ddb0c1        	l32r	a12, 40080a40 <_init_end+0x640>
40089382:	dd79b1        	l32r	a11, 40080968 <_init_end+0x568>
40089385:	dd79a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089388:	dc4481        	l32r	a8, 40080498 <_init_end+0x98>
4008938b:	0008e0        	callx8	a8
4008938e:	01fde5        	call8	4008b36c <abort>
40089391:	dd7131        	l32r	a3, 40080958 <_init_end+0x558>
40089394:	0020c0        	memw
40089397:	0358      	l32i.n	a5, a3, 0
40089399:	dd7c21        	l32r	a2, 4008098c <_init_end+0x58c>
4008939c:	0020c0        	memw
4008939f:	0288      	l32i.n	a8, a2, 0
400893a1:	0020c0        	memw
400893a4:	0389      	s32i.n	a8, a3, 0
400893a6:	0020c0        	memw
400893a9:	0259      	s32i.n	a5, a2, 0
400893ab:	f03d      	nop.n
400893ad:	f03d      	nop.n
400893af:	f03d      	nop.n
400893b1:	f03d      	nop.n
400893b3:	dd8631        	l32r	a3, 400809cc <_init_end+0x5cc>
400893b6:	0020c0        	memw
400893b9:	0328      	l32i.n	a2, a3, 0
400893bb:	221b      	addi.n	a2, a2, 1
400893bd:	0020c0        	memw
400893c0:	0329      	s32i.n	a2, a3, 0
400893c2:	fef6e5        	call8	40088330 <prvResetNextTaskUnblockTime>
400893c5:	dd6521        	l32r	a2, 4008095c <_init_end+0x55c>
400893c8:	0020c0        	memw
400893cb:	0228      	l32i.n	a2, a2, 0
400893cd:	09b427        	bgeu	a4, a2, 400893da <xTaskIncrementTick+0xba>
400893d0:	020c      	movi.n	a2, 0
400893d2:	002646        	j	4008946f <xTaskIncrementTick+0x14f>
400893d5:	120c      	movi.n	a2, 1
400893d7:	000046        	j	400893dc <xTaskIncrementTick+0xbc>
400893da:	020c      	movi.n	a2, 0
400893dc:	dd5f31        	l32r	a3, 40080958 <_init_end+0x558>
400893df:	0020c0        	memw
400893e2:	0338      	l32i.n	a3, a3, 0
400893e4:	0338      	l32i.n	a3, a3, 0
400893e6:	b3cc      	bnez.n	a3, 400893f5 <xTaskIncrementTick+0xd5>
400893e8:	f47c      	movi.n	a4, -1
400893ea:	dd5c31        	l32r	a3, 4008095c <_init_end+0x55c>
400893ed:	0020c0        	memw
400893f0:	0349      	s32i.n	a4, a3, 0
400893f2:	001e46        	j	4008946f <xTaskIncrementTick+0x14f>
400893f5:	dd5831        	l32r	a3, 40080958 <_init_end+0x558>
400893f8:	0020c0        	memw
400893fb:	0338      	l32i.n	a3, a3, 0
400893fd:	3338      	l32i.n	a3, a3, 12
400893ff:	3338      	l32i.n	a3, a3, 12
40089401:	2358      	l32i.n	a5, a3, 8
40089403:	0bb457        	bgeu	a4, a5, 40089412 <xTaskIncrementTick+0xf2>
40089406:	dd5531        	l32r	a3, 4008095c <_init_end+0x55c>
40089409:	0020c0        	memw
4008940c:	0359      	s32i.n	a5, a3, 0
4008940e:	001746        	j	4008946f <xTaskIncrementTick+0x14f>
40089411:	c35200        	movf	a5, a2, b0
40089414:	5008      	l32i.n	a0, a0, 20
40089416:	e520a5        	call8	4006e620 <__udivmoddi4+0x9a2c>
40089419:	00eb      	addi.n	a0, a0, 14
4008941b:	0b2382        	l32i	a8, a3, 44
4008941e:	488c      	beqz.n	a8, 40089426 <xTaskIncrementTick+0x106>
40089420:	1cc3a2        	addi	a10, a3, 28
40089423:	00eb65        	call8	4008a2d8 <uxListRemove>
40089426:	c388      	l32i.n	a8, a3, 48
40089428:	dd6591        	l32r	a9, 400809bc <_init_end+0x5bc>
4008942b:	0020c0        	memw
4008942e:	0998      	l32i.n	a9, a9, 0
40089430:	08b987        	bgeu	a9, a8, 4008943c <xTaskIncrementTick+0x11c>
40089433:	dd6291        	l32r	a9, 400809bc <_init_end+0x5bc>
40089436:	0020c0        	memw
40089439:	006982        	s32i	a8, a9, 0
4008943c:	a08880        	addx4	a8, a8, a8
4008943f:	1198e0        	slli	a9, a8, 2
40089442:	20b550        	or	a11, a5, a5
40089445:	f03d      	nop.n
40089447:	dd4aa1        	l32r	a10, 40080970 <_init_end+0x570>
4008944a:	80aa90        	add	a10, a10, a9
4008944d:	00e1e5        	call8	4008a26c <vListInsertEnd>
40089450:	0c2352        	l32i	a5, a3, 48
40089453:	03eb30        	rsr.prid	a3
40089456:	043d30        	extui	a3, a3, 13, 1
40089459:	dc9a81        	l32r	a8, 400806c4 <_init_end+0x2c4>
4008945c:	a03380        	addx4	a3, a3, a8
4008945f:	0020c0        	memw
40089462:	0338      	l32i.n	a3, a3, 0
40089464:	c338      	l32i.n	a3, a3, 48
40089466:	023537        	bltu	a5, a3, 4008946c <xTaskIncrementTick+0x14c>
40089469:	ffda06        	j	400893d5 <xTaskIncrementTick+0xb5>
4008946c:	ffdb06        	j	400893dc <xTaskIncrementTick+0xbc>
4008946f:	03eb30        	rsr.prid	a3
40089472:	043d30        	extui	a3, a3, 13, 1
40089475:	dc9341        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089478:	a03340        	addx4	a3, a3, a4
4008947b:	0020c0        	memw
4008947e:	0338      	l32i.n	a3, a3, 0
40089480:	c338      	l32i.n	a3, a3, 48
40089482:	a03330        	addx4	a3, a3, a3
40089485:	1143e0        	slli	a4, a3, 2
40089488:	dd3a31        	l32r	a3, 40080970 <_init_end+0x570>
4008948b:	434a      	add.n	a4, a3, a4
4008948d:	0438      	l32i.n	a3, a4, 0
4008948f:	0123b6        	bltui	a3, 2, 40089494 <xTaskIncrementTick+0x174>
40089492:	120c      	movi.n	a2, 1
40089494:	dd49a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089497:	ff73a5        	call8	40088bd0 <vTaskExitCritical>
4008949a:	0004c6        	j	400894b1 <xTaskIncrementTick+0x191>
4008949d:	000000        	ill
400894a0:	dd6931        	l32r	a3, 40080a44 <_init_end+0x644>
400894a3:	0020c0        	memw
400894a6:	0328      	l32i.n	a2, a3, 0
400894a8:	221b      	addi.n	a2, a2, 1
400894aa:	0020c0        	memw
400894ad:	0329      	s32i.n	a2, a3, 0
400894af:	020c      	movi.n	a2, 0
400894b1:	03eb30        	rsr.prid	a3
400894b4:	043d30        	extui	a3, a3, 13, 1
400894b7:	f03d      	nop.n
400894b9:	f03d      	nop.n
400894bb:	dd3c41        	l32r	a4, 400809ac <_init_end+0x5ac>
400894be:	a03340        	addx4	a3, a3, a4
400894c1:	0020c0        	memw
400894c4:	0338      	l32i.n	a3, a3, 0
400894c6:	43cc      	bnez.n	a3, 400894ce <xTaskIncrementTick+0x1ae>
400894c8:	f01d      	retw.n
400894ca:	120c      	movi.n	a2, 1
400894cc:	f01d      	retw.n
400894ce:	120c      	movi.n	a2, 1
400894d0:	f01d      	retw.n
	...

400894d4 <xTaskResumeAll>:
400894d4:	004136        	entry	a1, 32
400894d7:	03eb20        	rsr.prid	a2
400894da:	042d20        	extui	a2, a2, 13, 1
400894dd:	dd2f31        	l32r	a3, 4008099c <_init_end+0x59c>
400894e0:	a02230        	addx4	a2, a2, a3
400894e3:	0020c0        	memw
400894e6:	002222        	l32i	a2, a2, 0
400894e9:	014256        	bnez	a2, 40089501 <xTaskResumeAll+0x2d>
400894ec:	dd57d1        	l32r	a13, 40080a48 <_init_end+0x648>
400894ef:	dd57c1        	l32r	a12, 40080a4c <_init_end+0x64c>
400894f2:	dd1db1        	l32r	a11, 40080968 <_init_end+0x568>
400894f5:	dd1da1        	l32r	a10, 4008096c <_init_end+0x56c>
400894f8:	dbe881        	l32r	a8, 40080498 <_init_end+0x98>
400894fb:	0008e0        	callx8	a8
400894fe:	01e6e5        	call8	4008b36c <abort>
40089501:	dd2da1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089504:	ff58a5        	call8	40088a90 <vTaskEnterCritical>
40089507:	03eb20        	rsr.prid	a2
4008950a:	042d20        	extui	a2, a2, 13, 1
4008950d:	dd2381        	l32r	a8, 4008099c <_init_end+0x59c>
40089510:	a02280        	addx4	a2, a2, a8
40089513:	0020c0        	memw
40089516:	002232        	l32i	a3, a2, 0
40089519:	330b      	addi.n	a3, a3, -1
4008951b:	0020c0        	memw
4008951e:	0239      	s32i.n	a3, a2, 0
40089520:	03eb20        	rsr.prid	a2
40089523:	042d20        	extui	a2, a2, 13, 1
40089526:	a02280        	addx4	a2, a2, a8
40089529:	f03d      	nop.n
4008952b:	f03d      	nop.n
4008952d:	0020c0        	memw
40089530:	0228      	l32i.n	a2, a2, 0
40089532:	122256        	bnez	a2, 40089658 <xTaskResumeAll+0x184>
40089535:	dd3521        	l32r	a2, 40080a0c <_init_end+0x60c>
40089538:	0020c0        	memw
4008953b:	0228      	l32i.n	a2, a2, 0
4008953d:	08c256        	bnez	a2, 400895cd <xTaskResumeAll+0xf9>
40089540:	0046c6        	j	4008965f <xTaskResumeAll+0x18b>
40089543:	eb8000        	f64cmpl	a8, a0, a0
40089546:	8d8003        	lsip	f0, a0, 0x234
40089549:	888004        	lsi	f0, a0, 0x220
4008954c:	28e0a0        	lsi	f10, a0, 160
4008954f:	0b3111        	l32r	a1, 4004c214 <lld_pdu_pack+0x1700>
40089552:	20dd      	lsi	f13, a0, 0
40089554:	228023        	lsip	f2, a0, 136
40089557:	280322        	l8ui	a2, a3, 40
4008955a:	c2a232        	movi	a3, 0x2c2
4008955d:	a51c      	movi.n	a5, 26
4008955f:	8b00d7        	bnone	a0, a13, 400894ee <xTaskResumeAll+0x1a>
40089562:	03ad32        	movi	a3, 0xfffffd03
40089565:	00d725        	call8	4008a2d8 <uxListRemove>
40089568:	c288      	l32i.n	a8, a2, 48
4008956a:	dd1491        	l32r	a9, 400809bc <_init_end+0x5bc>
4008956d:	0020c0        	memw
40089570:	0998      	l32i.n	a9, a9, 0
40089572:	07b987        	bgeu	a9, a8, 4008957d <xTaskResumeAll+0xa9>
40089575:	dd1191        	l32r	a9, 400809bc <_init_end+0x5bc>
40089578:	0020c0        	memw
4008957b:	0989      	s32i.n	a8, a9, 0
4008957d:	a08880        	addx4	a8, a8, a8
40089580:	1198e0        	slli	a9, a8, 2
40089583:	03bd      	mov.n	a11, a3
40089585:	0020f0        	nop
40089588:	dcfaa1        	l32r	a10, 40080970 <_init_end+0x570>
4008958b:	aa9a      	add.n	a10, a10, a9
4008958d:	00cde5        	call8	4008a26c <vListInsertEnd>
40089590:	122232        	l32i	a3, a2, 72
40089593:	03eb80        	rsr.prid	a8
40089596:	048d80        	extui	a8, a8, 13, 1
40089599:	051387        	beq	a3, a8, 400895a2 <xTaskResumeAll+0xce>
4008959c:	dbe181        	l32r	a8, 40080520 <_init_end+0x120>
4008959f:	2a9387        	bne	a3, a8, 400895cd <xTaskResumeAll+0xf9>
400895a2:	c238      	l32i.n	a3, a2, 48
400895a4:	03eb20        	rsr.prid	a2
400895a7:	042d20        	extui	a2, a2, 13, 1
400895aa:	dc4681        	l32r	a8, 400806c4 <_init_end+0x2c4>
400895ad:	a02280        	addx4	a2, a2, a8
400895b0:	0020c0        	memw
400895b3:	0228      	l32i.n	a2, a2, 0
400895b5:	c228      	l32i.n	a2, a2, 48
400895b7:	123327        	bltu	a3, a2, 400895cd <xTaskResumeAll+0xf9>
400895ba:	03eb20        	rsr.prid	a2
400895bd:	042d20        	extui	a2, a2, 13, 1
400895c0:	dcfb31        	l32r	a3, 400809ac <_init_end+0x5ac>
400895c3:	a02230        	addx4	a2, a2, a3
400895c6:	130c      	movi.n	a3, 1
400895c8:	0020c0        	memw
400895cb:	0239      	s32i.n	a3, a2, 0
400895cd:	03eb80        	rsr.prid	a8
400895d0:	048d80        	extui	a8, a8, 13, 1
400895d3:	a08880        	addx4	a8, a8, a8
400895d6:	1198e0        	slli	a9, a8, 2
400895d9:	f03d      	nop.n
400895db:	dce821        	l32r	a2, 4008097c <_init_end+0x57c>
400895de:	929a      	add.n	a9, a2, a9
400895e0:	0928      	l32i.n	a2, a9, 0
400895e2:	f5e256        	bnez	a2, 40089544 <xTaskResumeAll+0x70>
400895e5:	dd1721        	l32r	a2, 40080a44 <_init_end+0x644>
400895e8:	0020c0        	memw
400895eb:	0228      	l32i.n	a2, a2, 0
400895ed:	32fc      	bnez.n	a2, 40089624 <xTaskResumeAll+0x150>
400895ef:	001106        	j	40089637 <xTaskResumeAll+0x163>
400895f2:	a50000        	extui	a0, a0, 16, 11
400895f5:	9cffd2        	s32ri	a13, a15, 0x270
400895f8:	201a      	add.n	a2, a0, a1
400895fa:	03eb      	addi.n	a0, a3, 14
400895fc:	042d20        	extui	a2, a2, 13, 1
400895ff:	dceb31        	l32r	a3, 400809ac <_init_end+0x5ac>
40089602:	a02230        	addx4	a2, a2, a3
40089605:	130c      	movi.n	a3, 1
40089607:	0020c0        	memw
4008960a:	0239      	s32i.n	a3, a2, 0
4008960c:	f03d      	nop.n
4008960e:	f03d      	nop.n
40089610:	f03d      	nop.n
40089612:	f03d      	nop.n
40089614:	dd0c31        	l32r	a3, 40080a44 <_init_end+0x644>
40089617:	0020c0        	memw
4008961a:	0328      	l32i.n	a2, a3, 0
4008961c:	220b      	addi.n	a2, a2, -1
4008961e:	0020c0        	memw
40089621:	006322        	s32i	a2, a3, 0
40089624:	f03d      	nop.n
40089626:	f03d      	nop.n
40089628:	f03d      	nop.n
4008962a:	f03d      	nop.n
4008962c:	dd0621        	l32r	a2, 40080a44 <_init_end+0x644>
4008962f:	0020c0        	memw
40089632:	0228      	l32i.n	a2, a2, 0
40089634:	fbc256        	bnez	a2, 400895f4 <xTaskResumeAll+0x120>
40089637:	03eb20        	rsr.prid	a2
4008963a:	042d20        	extui	a2, a2, 13, 1
4008963d:	dcdb31        	l32r	a3, 400809ac <_init_end+0x5ac>
40089640:	a02230        	addx4	a2, a2, a3
40089643:	0020c0        	memw
40089646:	0228      	l32i.n	a2, a2, 0
40089648:	111266        	bnei	a2, 1, 4008965d <xTaskResumeAll+0x189>
4008964b:	03eba0        	rsr.prid	a10
4008964e:	04ada0        	extui	a10, a10, 13, 1
40089651:	f7b765        	call8	400811c8 <esp_crosscore_int_send_yield>
40089654:	0001c6        	j	4008965f <xTaskResumeAll+0x18b>
40089657:	020c00        	andb	b0, b12, b0
4008965a:	000046        	j	4008965f <xTaskResumeAll+0x18b>
4008965d:	020c      	movi.n	a2, 0
4008965f:	dcd6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089662:	ff56e5        	call8	40088bd0 <vTaskExitCritical>
40089665:	f01d      	retw.n
	...

40089668 <vTaskPlaceOnEventList>:
40089668:	004136        	entry	a1, 32
4008966b:	014256        	bnez	a2, 40089683 <vTaskPlaceOnEventList+0x1b>
4008966e:	dcf8d1        	l32r	a13, 40080a50 <_init_end+0x650>
40089671:	dcf8c1        	l32r	a12, 40080a54 <_init_end+0x654>
40089674:	dcbdb1        	l32r	a11, 40080968 <_init_end+0x568>
40089677:	dcbda1        	l32r	a10, 4008096c <_init_end+0x56c>
4008967a:	db8781        	l32r	a8, 40080498 <_init_end+0x98>
4008967d:	0008e0        	callx8	a8
40089680:	01cea5        	call8	4008b36c <abort>
40089683:	dccda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089686:	ff40a5        	call8	40088a90 <vTaskEnterCritical>
40089689:	03eb80        	rsr.prid	a8
4008968c:	048d80        	extui	a8, a8, 13, 1
4008968f:	dc0d41        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089692:	a08840        	addx4	a8, a8, a4
40089695:	0020c0        	memw
40089698:	08b8      	l32i.n	a11, a8, 0
4008969a:	1ccbb2        	addi	a11, a11, 28
4008969d:	20a220        	or	a10, a2, a2
400896a0:	00bfe5        	call8	4008a2a0 <vListInsert>
400896a3:	03eb80        	rsr.prid	a8
400896a6:	048d80        	extui	a8, a8, 13, 1
400896a9:	a08840        	addx4	a8, a8, a4
400896ac:	0020c0        	memw
400896af:	08a8      	l32i.n	a10, a8, 0
400896b1:	08caa2        	addi	a10, a10, 8
400896b4:	00c225        	call8	4008a2d8 <uxListRemove>
400896b7:	1e0366        	bnei	a3, -1, 400896d9 <vTaskPlaceOnEventList+0x71>
400896ba:	03eb20        	rsr.prid	a2
400896bd:	042d20        	extui	a2, a2, 13, 1
400896c0:	dc0131        	l32r	a3, 400806c4 <_init_end+0x2c4>
400896c3:	a02230        	addx4	a2, a2, a3
400896c6:	0020c0        	memw
400896c9:	02b8      	l32i.n	a11, a2, 0
400896cb:	08cbb2        	addi	a11, a11, 8
400896ce:	dcaea1        	l32r	a10, 40080988 <_init_end+0x588>
400896d1:	00b9a5        	call8	4008a26c <vListInsertEnd>
400896d4:	000586        	j	400896ee <vTaskPlaceOnEventList+0x86>
400896d7:	210000        	srai	a0, a0, 0
400896da:	af          	.byte 0xaf
400896db:	c0dc      	bnez.n	a0, 400896fb <vTaskPlaceOnEventListRestricted+0x3>
400896dd:	b20020        	mulsh	a0, a0, a2
400896e0:	b00022        	l8ui	a2, a0, 176
400896e3:	a080b3        	lsip	f11, a0, 0x280
400896e6:	03eb      	addi.n	a0, a3, 14
400896e8:	04ada0        	extui	a10, a10, 13, 1
400896eb:	fee665        	call8	40088550 <prvAddCurrentTaskToDelayedList>
400896ee:	dcb2a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400896f1:	ff4de5        	call8	40088bd0 <vTaskExitCritical>
400896f4:	000090        	retw
	...

400896f8 <vTaskPlaceOnEventListRestricted>:
400896f8:	004136        	entry	a1, 32
400896fb:	dcafa1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400896fe:	ff3925        	call8	40088a90 <vTaskEnterCritical>
40089701:	014256        	bnez	a2, 40089719 <vTaskPlaceOnEventListRestricted+0x21>
40089704:	dcd5d1        	l32r	a13, 40080a58 <_init_end+0x658>
40089707:	dcd5c1        	l32r	a12, 40080a5c <_init_end+0x65c>
4008970a:	dc97b1        	l32r	a11, 40080968 <_init_end+0x568>
4008970d:	dc97a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089710:	db6281        	l32r	a8, 40080498 <_init_end+0x98>
40089713:	0008e0        	callx8	a8
40089716:	01c565        	call8	4008b36c <abort>
40089719:	03eb80        	rsr.prid	a8
4008971c:	048d80        	extui	a8, a8, 13, 1
4008971f:	dbe941        	l32r	a4, 400806c4 <_init_end+0x2c4>
40089722:	a08840        	addx4	a8, a8, a4
40089725:	0020c0        	memw
40089728:	08b8      	l32i.n	a11, a8, 0
4008972a:	1ccbb2        	addi	a11, a11, 28
4008972d:	02ad      	mov.n	a10, a2
4008972f:	00b3e5        	call8	4008a26c <vListInsertEnd>
40089732:	03eb80        	rsr.prid	a8
40089735:	048d80        	extui	a8, a8, 13, 1
40089738:	a08840        	addx4	a8, a8, a4
4008973b:	0020c0        	memw
4008973e:	08a8      	l32i.n	a10, a8, 0
40089740:	08caa2        	addi	a10, a10, 8
40089743:	00b965        	call8	4008a2d8 <uxListRemove>
40089746:	dc9421        	l32r	a2, 40080998 <_init_end+0x598>
40089749:	0020c0        	memw
4008974c:	0022b2        	l32i	a11, a2, 0
4008974f:	80bb30        	add	a11, a11, a3
40089752:	03eba0        	rsr.prid	a10
40089755:	04ada0        	extui	a10, a10, 13, 1
40089758:	fedf65        	call8	40088550 <prvAddCurrentTaskToDelayedList>
4008975b:	dc97a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008975e:	ff4725        	call8	40088bd0 <vTaskExitCritical>
40089761:	f01d      	retw.n
	...

40089764 <xTaskRemoveFromEventList>:
40089764:	004136        	entry	a1, 32
40089767:	dc94a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008976a:	ff3265        	call8	40088a90 <vTaskEnterCritical>
4008976d:	002232        	l32i	a3, a2, 0
40089770:	d3ac      	beqz.n	a3, 400897a1 <xTaskRemoveFromEventList+0x3d>
40089772:	3228      	l32i.n	a2, a2, 12
40089774:	3228      	l32i.n	a2, a2, 12
40089776:	32dc      	bnez.n	a2, 4008978d <xTaskRemoveFromEventList+0x29>
40089778:	dcbad1        	l32r	a13, 40080a60 <_init_end+0x660>
4008977b:	dcbac1        	l32r	a12, 40080a64 <_init_end+0x664>
4008977e:	dc7ab1        	l32r	a11, 40080968 <_init_end+0x568>
40089781:	dc7aa1        	l32r	a10, 4008096c <_init_end+0x56c>
40089784:	db4581        	l32r	a8, 40080498 <_init_end+0x98>
40089787:	0008e0        	callx8	a8
4008978a:	01be25        	call8	4008b36c <abort>
4008978d:	1cc232        	addi	a3, a2, 28
40089790:	03ad      	mov.n	a10, a3
40089792:	00b465        	call8	4008a2d8 <uxListRemove>
40089795:	122282        	l32i	a8, a2, 72
40089798:	db6291        	l32r	a9, 40080520 <_init_end+0x120>
4008979b:	319897        	bne	a8, a9, 400897d0 <xTaskRemoveFromEventList+0x6c>
4008979e:	000306        	j	400897ae <xTaskRemoveFromEventList+0x4a>
400897a1:	dc85a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400897a4:	ff42a5        	call8	40088bd0 <vTaskExitCritical>
400897a7:	020c      	movi.n	a2, 0
400897a9:	f01d      	retw.n
400897ab:	000000        	ill
400897ae:	03eba0        	rsr.prid	a10
400897b1:	04ada0        	extui	a10, a10, 13, 1
400897b4:	080c      	movi.n	a8, 0
400897b6:	000386        	j	400897c8 <xTaskRemoveFromEventList+0x64>
400897b9:	dc7891        	l32r	a9, 4008099c <_init_end+0x59c>
400897bc:	a09890        	addx4	a9, a8, a9
400897bf:	0020c0        	memw
400897c2:	0948      	l32i.n	a4, a9, 0
400897c4:	24ac      	beqz.n	a4, 400897ea <xTaskRemoveFromEventList+0x86>
400897c6:	881b      	addi.n	a8, a8, 1
400897c8:	ed28b6        	bltui	a8, 2, 400897b9 <xTaskRemoveFromEventList+0x55>
400897cb:	080c      	movi.n	a8, 0
400897cd:	000706        	j	400897ed <xTaskRemoveFromEventList+0x89>
400897d0:	08ad      	mov.n	a10, a8
400897d2:	dc7241        	l32r	a4, 4008099c <_init_end+0x59c>
400897d5:	a08840        	addx4	a8, a8, a4
400897d8:	0020c0        	memw
400897db:	0898      	l32i.n	a9, a8, 0
400897dd:	040c      	movi.n	a4, 0
400897df:	180c      	movi.n	a8, 1
400897e1:	938490        	movnez	a8, a4, a9
400897e4:	748080        	extui	a8, a8, 0, 8
400897e7:	000086        	j	400897ed <xTaskRemoveFromEventList+0x89>
400897ea:	01a082        	movi	a8, 1
400897ed:	034816        	beqz	a8, 40089825 <xTaskRemoveFromEventList+0xc1>
400897f0:	08c242        	addi	a4, a2, 8
400897f3:	04ad      	mov.n	a10, a4
400897f5:	00ae25        	call8	4008a2d8 <uxListRemove>
400897f8:	c238      	l32i.n	a3, a2, 48
400897fa:	dc7081        	l32r	a8, 400809bc <_init_end+0x5bc>
400897fd:	0020c0        	memw
40089800:	0888      	l32i.n	a8, a8, 0
40089802:	07b837        	bgeu	a8, a3, 4008980d <xTaskRemoveFromEventList+0xa9>
40089805:	dc6d81        	l32r	a8, 400809bc <_init_end+0x5bc>
40089808:	0020c0        	memw
4008980b:	0839      	s32i.n	a3, a8, 0
4008980d:	a03330        	addx4	a3, a3, a3
40089810:	1183e0        	slli	a8, a3, 2
40089813:	04bd      	mov.n	a11, a4
40089815:	0020f0        	nop
40089818:	dc56a1        	l32r	a10, 40080970 <_init_end+0x570>
4008981b:	aa8a      	add.n	a10, a10, a8
4008981d:	00a4e5        	call8	4008a26c <vListInsertEnd>
40089820:	0004c6        	j	40089837 <xTaskRemoveFromEventList+0xd3>
40089823:	a00000        	addx4	a0, a0, a0
40089826:	a0aa      	add.n	a10, a0, a10
40089828:	118ae0        	slli	a8, a10, 2
4008982b:	20b330        	or	a11, a3, a3
4008982e:	dc53a1        	l32r	a10, 4008097c <_init_end+0x57c>
40089831:	80aa80        	add	a10, a10, a8
40089834:	00a365        	call8	4008a26c <vListInsertEnd>
40089837:	1222a2        	l32i	a10, a2, 72
4008983a:	208aa0        	or	a8, a10, a10
4008983d:	03eb30        	rsr.prid	a3
40089840:	043d30        	extui	a3, a3, 13, 1
40089843:	051a37        	beq	a10, a3, 4008984c <xTaskRemoveFromEventList+0xe8>
40089846:	db3631        	l32r	a3, 40080520 <_init_end+0x120>
40089849:	2f9a37        	bne	a10, a3, 4008987c <xTaskRemoveFromEventList+0x118>
4008984c:	c248      	l32i.n	a4, a2, 48
4008984e:	03eb30        	rsr.prid	a3
40089851:	043d30        	extui	a3, a3, 13, 1
40089854:	db9c91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089857:	a03390        	addx4	a3, a3, a9
4008985a:	0020c0        	memw
4008985d:	0338      	l32i.n	a3, a3, 0
4008985f:	c338      	l32i.n	a3, a3, 48
40089861:	173437        	bltu	a4, a3, 4008987c <xTaskRemoveFromEventList+0x118>
40089864:	03eb30        	rsr.prid	a3
40089867:	043d30        	extui	a3, a3, 13, 1
4008986a:	dc5021        	l32r	a2, 400809ac <_init_end+0x5ac>
4008986d:	a03320        	addx4	a3, a3, a2
40089870:	120c      	movi.n	a2, 1
40089872:	0020c0        	memw
40089875:	0329      	s32i.n	a2, a3, 0
40089877:	000646        	j	40089894 <xTaskRemoveFromEventList+0x130>
4008987a:	300000        	xor	a0, a0, a0
4008987d:	03eb      	addi.n	a0, a3, 14
4008987f:	043d30        	extui	a3, a3, 13, 1
40089882:	0c1837        	beq	a8, a3, 40089892 <xTaskRemoveFromEventList+0x12e>
40089885:	c2b8      	l32i.n	a11, a2, 48
40089887:	fed3a5        	call8	400885c0 <taskYIELD_OTHER_CORE>
4008988a:	020c      	movi.n	a2, 0
4008988c:	000106        	j	40089894 <xTaskRemoveFromEventList+0x130>
4008988f:	000000        	ill
40089892:	020c      	movi.n	a2, 0
40089894:	dc49a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089897:	ff33a5        	call8	40088bd0 <vTaskExitCritical>
4008989a:	f01d      	retw.n

4008989c <xTaskCheckForTimeOut>:
4008989c:	004136        	entry	a1, 32
4008989f:	017256        	bnez	a2, 400898ba <xTaskCheckForTimeOut+0x1e>
400898a2:	dc71d1        	l32r	a13, 40080a68 <_init_end+0x668>
400898a5:	dc71c1        	l32r	a12, 40080a6c <_init_end+0x66c>
400898a8:	dc30b1        	l32r	a11, 40080968 <_init_end+0x568>
400898ab:	dc30a1        	l32r	a10, 4008096c <_init_end+0x56c>
400898ae:	dafa81        	l32r	a8, 40080498 <_init_end+0x98>
400898b1:	0008e0        	callx8	a8
400898b4:	201110        	or	a1, a1, a1
400898b7:	01ab65        	call8	4008b36c <abort>
400898ba:	33dc      	bnez.n	a3, 400898d1 <xTaskCheckForTimeOut+0x35>
400898bc:	dc6bd1        	l32r	a13, 40080a68 <_init_end+0x668>
400898bf:	dc6cc1        	l32r	a12, 40080a70 <_init_end+0x670>
400898c2:	dc29b1        	l32r	a11, 40080968 <_init_end+0x568>
400898c5:	dc29a1        	l32r	a10, 4008096c <_init_end+0x56c>
400898c8:	daf481        	l32r	a8, 40080498 <_init_end+0x98>
400898cb:	0008e0        	callx8	a8
400898ce:	01a9e5        	call8	4008b36c <abort>
400898d1:	dc39a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
400898d4:	ff1ba5        	call8	40088a90 <vTaskEnterCritical>
400898d7:	dc3081        	l32r	a8, 40080998 <_init_end+0x598>
400898da:	0020c0        	memw
400898dd:	0898      	l32i.n	a9, a8, 0
400898df:	0388      	l32i.n	a8, a3, 0
400898e1:	2c0826        	beqi	a8, -1, 40089911 <xTaskCheckForTimeOut+0x75>
400898e4:	02b8      	l32i.n	a11, a2, 0
400898e6:	dc39a1        	l32r	a10, 400809cc <_init_end+0x5cc>
400898e9:	0020c0        	memw
400898ec:	0aa8      	l32i.n	a10, a10, 0
400898ee:	041ba7        	beq	a11, a10, 400898f6 <xTaskCheckForTimeOut+0x5a>
400898f1:	12a8      	l32i.n	a10, a2, 4
400898f3:	1fb9a7        	bgeu	a9, a10, 40089916 <xTaskCheckForTimeOut+0x7a>
400898f6:	12a8      	l32i.n	a10, a2, 4
400898f8:	c0b9a0        	sub	a11, a9, a10
400898fb:	1ebb87        	bgeu	a11, a8, 4008991d <xTaskCheckForTimeOut+0x81>
400898fe:	c09a90        	sub	a9, a10, a9
40089901:	808890        	add	a8, a8, a9
40089904:	006382        	s32i	a8, a3, 0
40089907:	02ad      	mov.n	a10, a2
40089909:	ff0625        	call8	4008896c <vTaskSetTimeOutState>
4008990c:	020c      	movi.n	a2, 0
4008990e:	000346        	j	4008991f <xTaskCheckForTimeOut+0x83>
40089911:	020c      	movi.n	a2, 0
40089913:	000206        	j	4008991f <xTaskCheckForTimeOut+0x83>
40089916:	120c      	movi.n	a2, 1
40089918:	0000c6        	j	4008991f <xTaskCheckForTimeOut+0x83>
4008991b:	0c0000        	lsi	f0, a0, 48
4008991e:	26a112        	movi	a1, 0x126
40089921:	e5dc      	bnez.n	a5, 40089943 <vTaskSetThreadLocalStoragePointerAndDelCallback+0x1b>
40089923:	ff2a      	add.n	a15, a15, a2
40089925:	f01d      	retw.n
	...

40089928 <vTaskSetThreadLocalStoragePointerAndDelCallback>:
40089928:	004136        	entry	a1, 32
4008992b:	2613e6        	bgei	a3, 1, 40089955 <vTaskSetThreadLocalStoragePointerAndDelCallback+0x2d>
4008992e:	dc22a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089931:	ff15e5        	call8	40088a90 <vTaskEnterCritical>
40089934:	005256        	bnez	a2, 4008993d <vTaskSetThreadLocalStoragePointerAndDelCallback+0x15>
40089937:	ff0725        	call8	400889a8 <xTaskGetCurrentTaskHandle>
4008993a:	202aa0        	or	a2, a10, a10
4008993d:	18c332        	addi	a3, a3, 24
40089940:	a02320        	addx4	a2, a3, a2
40089943:	0249      	s32i.n	a4, a2, 0
40089945:	1259      	s32i.n	a5, a2, 4
40089947:	f03d      	nop.n
40089949:	f03d      	nop.n
4008994b:	f03d      	nop.n
4008994d:	f03d      	nop.n
4008994f:	dc1aa1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089952:	ff27e5        	call8	40088bd0 <vTaskExitCritical>
40089955:	f01d      	retw.n
	...

40089958 <vTaskPriorityInherit>:
40089958:	004136        	entry	a1, 32
4008995b:	dc17a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
4008995e:	ff1325        	call8	40088a90 <vTaskEnterCritical>
40089961:	0d3216        	beqz	a2, 40089a38 <vTaskPriorityInherit+0xe0>
40089964:	c298      	l32i.n	a9, a2, 48
40089966:	03eb80        	rsr.prid	a8
40089969:	048d80        	extui	a8, a8, 13, 1
4008996c:	db56a1        	l32r	a10, 400806c4 <_init_end+0x2c4>
4008996f:	a088a0        	addx4	a8, a8, a10
40089972:	0020c0        	memw
40089975:	0888      	l32i.n	a8, a8, 0
40089977:	c888      	l32i.n	a8, a8, 48
40089979:	023987        	bltu	a9, a8, 4008997f <vTaskPriorityInherit+0x27>
4008997c:	002e06        	j	40089a38 <vTaskPriorityInherit+0xe0>
4008997f:	dc0ea1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089982:	ff10e5        	call8	40088a90 <vTaskEnterCritical>
40089985:	7288      	l32i.n	a8, a2, 28
40089987:	019896        	bltz	a8, 400899a4 <vTaskPriorityInherit+0x4c>
4008998a:	03eb80        	rsr.prid	a8
4008998d:	048d80        	extui	a8, a8, 13, 1
40089990:	db4d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089993:	a08890        	addx4	a8, a8, a9
40089996:	0020c0        	memw
40089999:	0888      	l32i.n	a8, a8, 0
4008999b:	c898      	l32i.n	a9, a8, 48
4008999d:	981c      	movi.n	a8, 25
4008999f:	c08890        	sub	a8, a8, a9
400899a2:	7289      	s32i.n	a8, a2, 28
400899a4:	f03d      	nop.n
400899a6:	f03d      	nop.n
400899a8:	f03d      	nop.n
400899aa:	f03d      	nop.n
400899ac:	0622a2        	l32i	a10, a2, 24
400899af:	0c2282        	l32i	a8, a2, 48
400899b2:	a08880        	addx4	a8, a8, a8
400899b5:	1198e0        	slli	a9, a8, 2
400899b8:	dbee81        	l32r	a8, 40080970 <_init_end+0x570>
400899bb:	808980        	add	a8, a9, a8
400899be:	4e9a87        	bne	a10, a8, 40089a10 <vTaskPriorityInherit+0xb8>
400899c1:	328b      	addi.n	a3, a2, 8
400899c3:	03ad      	mov.n	a10, a3
400899c5:	009125        	call8	4008a2d8 <uxListRemove>
400899c8:	03eb80        	rsr.prid	a8
400899cb:	048d80        	extui	a8, a8, 13, 1
400899ce:	db3d91        	l32r	a9, 400806c4 <_init_end+0x2c4>
400899d1:	a08890        	addx4	a8, a8, a9
400899d4:	0020c0        	memw
400899d7:	0888      	l32i.n	a8, a8, 0
400899d9:	c888      	l32i.n	a8, a8, 48
400899db:	c289      	s32i.n	a8, a2, 48
400899dd:	f03d      	nop.n
400899df:	f03d      	nop.n
400899e1:	f03d      	nop.n
400899e3:	f03d      	nop.n
400899e5:	dbf521        	l32r	a2, 400809bc <_init_end+0x5bc>
400899e8:	0020c0        	memw
400899eb:	0228      	l32i.n	a2, a2, 0
400899ed:	07b287        	bgeu	a2, a8, 400899f8 <vTaskPriorityInherit+0xa0>
400899f0:	dbf321        	l32r	a2, 400809bc <_init_end+0x5bc>
400899f3:	0020c0        	memw
400899f6:	0289      	s32i.n	a8, a2, 0
400899f8:	a08880        	addx4	a8, a8, a8
400899fb:	1128e0        	slli	a2, a8, 2
400899fe:	03bd      	mov.n	a11, a3
40089a00:	f03d      	nop.n
40089a02:	dbdba1        	l32r	a10, 40080970 <_init_end+0x570>
40089a05:	aa2a      	add.n	a10, a10, a2
40089a07:	008665        	call8	4008a26c <vListInsertEnd>
40089a0a:	000686        	j	40089a28 <vTaskPriorityInherit+0xd0>
40089a0d:	000000        	ill
40089a10:	03eb80        	rsr.prid	a8
40089a13:	048d80        	extui	a8, a8, 13, 1
40089a16:	db2b91        	l32r	a9, 400806c4 <_init_end+0x2c4>
40089a19:	a08890        	addx4	a8, a8, a9
40089a1c:	0020c0        	memw
40089a1f:	002882        	l32i	a8, a8, 0
40089a22:	0c2882        	l32i	a8, a8, 48
40089a25:	0c6282        	s32i	a8, a2, 48
40089a28:	f03d      	nop.n
40089a2a:	0020f0        	nop
40089a2d:	f03d      	nop.n
40089a2f:	0020f0        	nop
40089a32:	dbe1a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a35:	ff19a5        	call8	40088bd0 <vTaskExitCritical>
40089a38:	dbe0a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a3b:	ff1965        	call8	40088bd0 <vTaskExitCritical>
40089a3e:	f01d      	retw.n

40089a40 <xTaskPriorityDisinherit>:
40089a40:	004136        	entry	a1, 32
40089a43:	dbdda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a46:	ff04a5        	call8	40088a90 <vTaskEnterCritical>
40089a49:	087216        	beqz	a2, 40089ad4 <xTaskPriorityDisinherit+0x94>
40089a4c:	172282        	l32i	a8, a2, 92
40089a4f:	68dc      	bnez.n	a8, 40089a69 <xTaskPriorityDisinherit+0x29>
40089a51:	dc08d1        	l32r	a13, 40080a74 <_init_end+0x674>
40089a54:	dc09c1        	l32r	a12, 40080a78 <_init_end+0x678>
40089a57:	dbc4b1        	l32r	a11, 40080968 <_init_end+0x568>
40089a5a:	dbc4a1        	l32r	a10, 4008096c <_init_end+0x56c>
40089a5d:	da8e81        	l32r	a8, 40080498 <_init_end+0x98>
40089a60:	0008e0        	callx8	a8
40089a63:	201110        	or	a1, a1, a1
40089a66:	019065        	call8	4008b36c <abort>
40089a69:	880b      	addi.n	a8, a8, -1
40089a6b:	176282        	s32i	a8, a2, 92
40089a6e:	f03d      	nop.n
40089a70:	f03d      	nop.n
40089a72:	f03d      	nop.n
40089a74:	f03d      	nop.n
40089a76:	c2a8      	l32i.n	a10, a2, 48
40089a78:	162292        	l32i	a9, a2, 88
40089a7b:	5a1a97        	beq	a10, a9, 40089ad9 <xTaskPriorityDisinherit+0x99>
40089a7e:	05c856        	bnez	a8, 40089ade <xTaskPriorityDisinherit+0x9e>
40089a81:	dbcda1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089a84:	ff00a5        	call8	40088a90 <vTaskEnterCritical>
40089a87:	328b      	addi.n	a3, a2, 8
40089a89:	03ad      	mov.n	a10, a3
40089a8b:	0084e5        	call8	4008a2d8 <uxListRemove>
40089a8e:	162282        	l32i	a8, a2, 88
40089a91:	c289      	s32i.n	a8, a2, 48
40089a93:	991c      	movi.n	a9, 25
40089a95:	c09980        	sub	a9, a9, a8
40089a98:	7299      	s32i.n	a9, a2, 28
40089a9a:	f03d      	nop.n
40089a9c:	f03d      	nop.n
40089a9e:	f03d      	nop.n
40089aa0:	f03d      	nop.n
40089aa2:	dbc621        	l32r	a2, 400809bc <_init_end+0x5bc>
40089aa5:	0020c0        	memw
40089aa8:	0228      	l32i.n	a2, a2, 0
40089aaa:	07b287        	bgeu	a2, a8, 40089ab5 <xTaskPriorityDisinherit+0x75>
40089aad:	dbc321        	l32r	a2, 400809bc <_init_end+0x5bc>
40089ab0:	0020c0        	memw
40089ab3:	0289      	s32i.n	a8, a2, 0
40089ab5:	a08880        	addx4	a8, a8, a8
40089ab8:	1128e0        	slli	a2, a8, 2
40089abb:	03bd      	mov.n	a11, a3
40089abd:	f03d      	nop.n
40089abf:	dbaca1        	l32r	a10, 40080970 <_init_end+0x570>
40089ac2:	80aa20        	add	a10, a10, a2
40089ac5:	007a65        	call8	4008a26c <vListInsertEnd>
40089ac8:	dbbca1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089acb:	ff1065        	call8	40088bd0 <vTaskExitCritical>
40089ace:	120c      	movi.n	a2, 1
40089ad0:	000306        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ad3:	020c00        	andb	b0, b12, b0
40089ad6:	000186        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ad9:	020c      	movi.n	a2, 0
40089adb:	000046        	j	40089ae0 <xTaskPriorityDisinherit+0xa0>
40089ade:	020c      	movi.n	a2, 0
40089ae0:	dbb6a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089ae3:	ff0ee5        	call8	40088bd0 <vTaskExitCritical>
40089ae6:	f01d      	retw.n

40089ae8 <pvTaskIncrementMutexHeldCount>:
40089ae8:	004136        	entry	a1, 32
40089aeb:	dbb3a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089aee:	fefa25        	call8	40088a90 <vTaskEnterCritical>
40089af1:	03eb80        	rsr.prid	a8
40089af4:	048d80        	extui	a8, a8, 13, 1
40089af7:	daf321        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089afa:	a08820        	addx4	a8, a8, a2
40089afd:	0020c0        	memw
40089b00:	002822        	l32i	a2, a8, 0
40089b03:	018216        	beqz	a2, 40089b1f <pvTaskIncrementMutexHeldCount+0x37>
40089b06:	03eb80        	rsr.prid	a8
40089b09:	048d80        	extui	a8, a8, 13, 1
40089b0c:	daee21        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089b0f:	a08820        	addx4	a8, a8, a2
40089b12:	0020c0        	memw
40089b15:	0898      	l32i.n	a9, a8, 0
40089b17:	172982        	l32i	a8, a9, 92
40089b1a:	881b      	addi.n	a8, a8, 1
40089b1c:	176982        	s32i	a8, a9, 92
40089b1f:	03eb80        	rsr.prid	a8
40089b22:	048d80        	extui	a8, a8, 13, 1
40089b25:	f03d      	nop.n
40089b27:	f03d      	nop.n
40089b29:	f03d      	nop.n
40089b2b:	dae621        	l32r	a2, 400806c4 <_init_end+0x2c4>
40089b2e:	a08820        	addx4	a8, a8, a2
40089b31:	0020c0        	memw
40089b34:	0828      	l32i.n	a2, a8, 0
40089b36:	dba0a1        	l32r	a10, 400809b8 <_init_end+0x5b8>
40089b39:	ff0965        	call8	40088bd0 <vTaskExitCritical>
40089b3c:	f01d      	retw.n
	...

40089b40 <prvGetNextExpireTime>:
40089b40:	004136        	entry	a1, 32
40089b43:	dbce81        	l32r	a8, 40080a7c <_init_end+0x67c>
40089b46:	08a8      	l32i.n	a10, a8, 0
40089b48:	0a98      	l32i.n	a9, a10, 0
40089b4a:	080c      	movi.n	a8, 0
40089b4c:	1b0c      	movi.n	a11, 1
40089b4e:	838b90        	moveqz	a8, a11, a9
40089b51:	0289      	s32i.n	a8, a2, 0
40089b53:	d8cc      	bnez.n	a8, 40089b64 <prvGetNextExpireTime+0x24>
40089b55:	f03d      	nop.n
40089b57:	f03d      	nop.n
40089b59:	f03d      	nop.n
40089b5b:	f03d      	nop.n
40089b5d:	3a28      	l32i.n	a2, a10, 12
40089b5f:	0228      	l32i.n	a2, a2, 0
40089b61:	f01d      	retw.n
40089b63:	020c00        	andb	b0, b12, b0
40089b66:	f01d      	retw.n

40089b68 <prvInsertTimerInActiveList>:
40089b68:	004136        	entry	a1, 32
40089b6b:	016232        	s32i	a3, a2, 4
40089b6e:	046222        	s32i	a2, a2, 16
40089b71:	1c3437        	bltu	a4, a3, 40089b91 <prvInsertTimerInActiveList+0x29>
40089b74:	c04450        	sub	a4, a4, a5
40089b77:	f03d      	nop.n
40089b79:	f03d      	nop.n
40089b7b:	f03d      	nop.n
40089b7d:	062232        	l32i	a3, a2, 24
40089b80:	34b437        	bgeu	a4, a3, 40089bb8 <prvInsertTimerInActiveList+0x50>
40089b83:	b24b      	addi.n	a11, a2, 4
40089b85:	dbbe21        	l32r	a2, 40080a80 <_init_end+0x680>
40089b88:	02a8      	l32i.n	a10, a2, 0
40089b8a:	007165        	call8	4008a2a0 <vListInsert>
40089b8d:	020c      	movi.n	a2, 0
40089b8f:	f01d      	retw.n
40089b91:	180c      	movi.n	a8, 1
40089b93:	013457        	bltu	a4, a5, 40089b98 <prvInsertTimerInActiveList+0x30>
40089b96:	080c      	movi.n	a8, 0
40089b98:	748080        	extui	a8, a8, 0, 8
40089b9b:	01a042        	movi	a4, 1
40089b9e:	02b357        	bgeu	a3, a5, 40089ba4 <prvInsertTimerInActiveList+0x3c>
40089ba1:	00a042        	movi	a4, 0
40089ba4:	148847        	bany	a8, a4, 40089bbc <prvInsertTimerInActiveList+0x54>
40089ba7:	04c2b2        	addi	a11, a2, 4
40089baa:	dbb421        	l32r	a2, 40080a7c <_init_end+0x67c>
40089bad:	0022a2        	l32i	a10, a2, 0
40089bb0:	006ee5        	call8	4008a2a0 <vListInsert>
40089bb3:	00a022        	movi	a2, 0
40089bb6:	f01d      	retw.n
40089bb8:	120c      	movi.n	a2, 1
40089bba:	f01d      	retw.n
40089bbc:	120c      	movi.n	a2, 1
40089bbe:	f01d      	retw.n

40089bc0 <prvCheckForValidListAndQueue>:
40089bc0:	004136        	entry	a1, 32
40089bc3:	dbb081        	l32r	a8, 40080a84 <_init_end+0x684>
40089bc6:	0888      	l32i.n	a8, a8, 0
40089bc8:	005856        	bnez	a8, 40089bd1 <prvCheckForValidListAndQueue+0x11>
40089bcb:	dbafa1        	l32r	a10, 40080a88 <_init_end+0x688>
40089bce:	fe3965        	call8	40087f64 <vPortCPUInitializeMutex>
40089bd1:	dbada1        	l32r	a10, 40080a88 <_init_end+0x688>
40089bd4:	feeba5        	call8	40088a90 <vTaskEnterCritical>
40089bd7:	dbab81        	l32r	a8, 40080a84 <_init_end+0x684>
40089bda:	0888      	l32i.n	a8, a8, 0
40089bdc:	04e856        	bnez	a8, 40089c2e <prvCheckForValidListAndQueue+0x6e>
40089bdf:	dbab31        	l32r	a3, 40080a8c <_init_end+0x68c>
40089be2:	03ad      	mov.n	a10, a3
40089be4:	006625        	call8	4008a248 <vListInitialise>
40089be7:	dbaa21        	l32r	a2, 40080a90 <_init_end+0x690>
40089bea:	02ad      	mov.n	a10, a2
40089bec:	0065a5        	call8	4008a248 <vListInitialise>
40089bef:	dba381        	l32r	a8, 40080a7c <_init_end+0x67c>
40089bf2:	0839      	s32i.n	a3, a8, 0
40089bf4:	f03d      	nop.n
40089bf6:	f03d      	nop.n
40089bf8:	f03d      	nop.n
40089bfa:	f03d      	nop.n
40089bfc:	dba131        	l32r	a3, 40080a80 <_init_end+0x680>
40089bff:	0329      	s32i.n	a2, a3, 0
40089c01:	0c0c      	movi.n	a12, 0
40089c03:	0b1c      	movi.n	a11, 16
40089c05:	aa0c      	movi.n	a10, 10
40089c07:	fdafe5        	call8	40087704 <xQueueGenericCreate>
40089c0a:	db9e21        	l32r	a2, 40080a84 <_init_end+0x684>
40089c0d:	02a9      	s32i.n	a10, a2, 0
40089c0f:	badc      	bnez.n	a10, 40089c2e <prvCheckForValidListAndQueue+0x6e>
40089c11:	f03d      	nop.n
40089c13:	f03d      	nop.n
40089c15:	f03d      	nop.n
40089c17:	f03d      	nop.n
40089c19:	db9ed1        	l32r	a13, 40080a94 <_init_end+0x694>
40089c1c:	9aa3c2        	movi	a12, 0x39a
40089c1f:	db9eb1        	l32r	a11, 40080a98 <_init_end+0x698>
40089c22:	db9ea1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089c25:	da1c81        	l32r	a8, 40080498 <_init_end+0x98>
40089c28:	0008e0        	callx8	a8
40089c2b:	017425        	call8	4008b36c <abort>
40089c2e:	db96a1        	l32r	a10, 40080a88 <_init_end+0x688>
40089c31:	fef9e5        	call8	40088bd0 <vTaskExitCritical>
40089c34:	f01d      	retw.n
	...

40089c38 <xTimerCreateTimerTask>:
40089c38:	006136        	entry	a1, 48
40089c3b:	fff865        	call8	40089bc0 <prvCheckForValidListAndQueue>
40089c3e:	db9121        	l32r	a2, 40080a84 <_init_end+0x684>
40089c41:	002222        	l32i	a2, a2, 0
40089c44:	01e216        	beqz	a2, 40089c66 <xTimerCreateTimerTask+0x2e>
40089c47:	0d0c      	movi.n	a13, 0
40089c49:	01d9      	s32i.n	a13, a1, 0
40089c4b:	0dfd      	mov.n	a15, a13
40089c4d:	1e0c      	movi.n	a14, 1
40089c4f:	f03d      	nop.n
40089c51:	0020f0        	nop
40089c54:	dae5c1        	l32r	a12, 400807e8 <_init_end+0x3e8>
40089c57:	db92b1        	l32r	a11, 40080aa0 <_init_end+0x6a0>
40089c5a:	db92a1        	l32r	a10, 40080aa4 <_init_end+0x6a4>
40089c5d:	ff1d65        	call8	40088e34 <xTaskCreatePinnedToCore>
40089c60:	0a2d      	mov.n	a2, a10
40089c62:	000086        	j	40089c68 <xTimerCreateTimerTask+0x30>
40089c65:	020c00        	andb	b0, b12, b0
40089c68:	62dc      	bnez.n	a2, 40089c82 <xTimerCreateTimerTask+0x4a>
40089c6a:	db8fd1        	l32r	a13, 40080aa8 <_init_end+0x6a8>
40089c6d:	27a1c2        	movi	a12, 0x127
40089c70:	db8ab1        	l32r	a11, 40080a98 <_init_end+0x698>
40089c73:	db8aa1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089c76:	da0881        	l32r	a8, 40080498 <_init_end+0x98>
40089c79:	0008e0        	callx8	a8
40089c7c:	201110        	or	a1, a1, a1
40089c7f:	016ee5        	call8	4008b36c <abort>
40089c82:	f01d      	retw.n

40089c84 <xTimerGenericCommand>:
40089c84:	006136        	entry	a1, 48
40089c87:	db7f81        	l32r	a8, 40080a84 <_init_end+0x684>
40089c8a:	08a8      	l32i.n	a10, a8, 0
40089c8c:	045a16        	beqz	a10, 40089cd5 <xTimerGenericCommand+0x51>
40089c8f:	0139      	s32i.n	a3, a1, 0
40089c91:	1149      	s32i.n	a4, a1, 4
40089c93:	2129      	s32i.n	a2, a1, 8
40089c95:	2c63e6        	bgei	a3, 6, 40089cc5 <xTimerGenericCommand+0x41>
40089c98:	fedbe5        	call8	40088a58 <xTaskGetSchedulerState>
40089c9b:	112a66        	bnei	a10, 2, 40089cb0 <xTimerGenericCommand+0x2c>
40089c9e:	0d0c      	movi.n	a13, 0
40089ca0:	06cd      	mov.n	a12, a6
40089ca2:	01bd      	mov.n	a11, a1
40089ca4:	db7821        	l32r	a2, 40080a84 <_init_end+0x684>
40089ca7:	02a8      	l32i.n	a10, a2, 0
40089ca9:	fdb3a5        	call8	400877e4 <xQueueGenericSend>
40089cac:	0a2d      	mov.n	a2, a10
40089cae:	f01d      	retw.n
40089cb0:	00a0d2        	movi	a13, 0
40089cb3:	20cdd0        	or	a12, a13, a13
40089cb6:	20b110        	or	a11, a1, a1
40089cb9:	db7221        	l32r	a2, 40080a84 <_init_end+0x684>
40089cbc:	02a8      	l32i.n	a10, a2, 0
40089cbe:	fdb265        	call8	400877e4 <xQueueGenericSend>
40089cc1:	0a2d      	mov.n	a2, a10
40089cc3:	f01d      	retw.n
40089cc5:	00a0d2        	movi	a13, 0
40089cc8:	20c550        	or	a12, a5, a5
40089ccb:	20b110        	or	a11, a1, a1
40089cce:	fdcfe5        	call8	400879cc <xQueueGenericSendFromISR>
40089cd1:	0a2d      	mov.n	a2, a10
40089cd3:	f01d      	retw.n
40089cd5:	020c      	movi.n	a2, 0
40089cd7:	f01d      	retw.n
40089cd9:	000000        	ill

40089cdc <prvSwitchTimerLists>:
40089cdc:	004136        	entry	a1, 32
40089cdf:	0017c6        	j	40089d42 <prvSwitchTimerLists+0x66>
40089ce2:	032222        	l32i	a2, a2, 12
40089ce5:	002242        	l32i	a4, a2, 0
40089ce8:	3228      	l32i.n	a2, a2, 12
40089cea:	324b      	addi.n	a3, a2, 4
40089cec:	03ad      	mov.n	a10, a3
40089cee:	005ea5        	call8	4008a2d8 <uxListRemove>
40089cf1:	9288      	l32i.n	a8, a2, 36
40089cf3:	02ad      	mov.n	a10, a2
40089cf5:	0008e0        	callx8	a8
40089cf8:	7288      	l32i.n	a8, a2, 28
40089cfa:	441866        	bnei	a8, 1, 40089d42 <prvSwitchTimerLists+0x66>
40089cfd:	6288      	l32i.n	a8, a2, 24
40089cff:	848a      	add.n	a8, a4, a8
40089d01:	17b487        	bgeu	a4, a8, 40089d1c <prvSwitchTimerLists+0x40>
40089d04:	1289      	s32i.n	a8, a2, 4
40089d06:	4229      	s32i.n	a2, a2, 16
40089d08:	03bd      	mov.n	a11, a3
40089d0a:	f03d      	nop.n
40089d0c:	f03d      	nop.n
40089d0e:	f03d      	nop.n
40089d10:	db5b21        	l32r	a2, 40080a7c <_init_end+0x67c>
40089d13:	02a8      	l32i.n	a10, a2, 0
40089d15:	0058a5        	call8	4008a2a0 <vListInsert>
40089d18:	000986        	j	40089d42 <prvSwitchTimerLists+0x66>
40089d1b:	a0e200        	addx4	a14, a2, a0
40089d1e:	dee000        	f64iter	a14, a0, a0, 1, 1
40089d21:	04cd20        	extui	a12, a2, 13, 1
40089d24:	0ebd      	mov.n	a11, a14
40089d26:	02ad      	mov.n	a10, a2
40089d28:	fff5a5        	call8	40089c84 <xTimerGenericCommand>
40089d2b:	3adc      	bnez.n	a10, 40089d42 <prvSwitchTimerLists+0x66>
40089d2d:	db5fd1        	l32r	a13, 40080aac <_init_end+0x6ac>
40089d30:	75a3c2        	movi	a12, 0x375
40089d33:	db59b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089d36:	db59a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089d39:	d9d781        	l32r	a8, 40080498 <_init_end+0x98>
40089d3c:	0008e0        	callx8	a8
40089d3f:	0162e5        	call8	4008b36c <abort>
40089d42:	db4e21        	l32r	a2, 40080a7c <_init_end+0x67c>
40089d45:	0228      	l32i.n	a2, a2, 0
40089d47:	0288      	l32i.n	a8, a2, 0
40089d49:	f95856        	bnez	a8, 40089ce2 <prvSwitchTimerLists+0x6>
40089d4c:	db4d31        	l32r	a3, 40080a80 <_init_end+0x680>
40089d4f:	0388      	l32i.n	a8, a3, 0
40089d51:	db4a41        	l32r	a4, 40080a7c <_init_end+0x67c>
40089d54:	0489      	s32i.n	a8, a4, 0
40089d56:	0329      	s32i.n	a2, a3, 0
40089d58:	f01d      	retw.n
	...

40089d5c <prvSampleTimeNow>:
40089d5c:	004136        	entry	a1, 32
40089d5f:	203220        	or	a3, a2, a2
40089d62:	fe8da5        	call8	4008863c <xTaskGetTickCount>
40089d65:	202aa0        	or	a2, a10, a10
40089d68:	db5281        	l32r	a8, 40080ab0 <_init_end+0x6b0>
40089d6b:	002882        	l32i	a8, a8, 0
40089d6e:	0aba87        	bgeu	a10, a8, 40089d7c <prvSampleTimeNow+0x20>
40089d71:	fff6a5        	call8	40089cdc <prvSwitchTimerLists>
40089d74:	180c      	movi.n	a8, 1
40089d76:	0389      	s32i.n	a8, a3, 0
40089d78:	000106        	j	40089d80 <prvSampleTimeNow+0x24>
40089d7b:	080c00        	lsx	f0, a12, a0
40089d7e:	0389      	s32i.n	a8, a3, 0
40089d80:	f03d      	nop.n
40089d82:	f03d      	nop.n
40089d84:	f03d      	nop.n
40089d86:	f03d      	nop.n
40089d88:	db4a81        	l32r	a8, 40080ab0 <_init_end+0x6b0>
40089d8b:	0829      	s32i.n	a2, a8, 0
40089d8d:	f01d      	retw.n
	...

40089d90 <prvProcessExpiredTimer>:
40089d90:	004136        	entry	a1, 32
40089d93:	db3a41        	l32r	a4, 40080a7c <_init_end+0x67c>
40089d96:	0448      	l32i.n	a4, a4, 0
40089d98:	3448      	l32i.n	a4, a4, 12
40089d9a:	3448      	l32i.n	a4, a4, 12
40089d9c:	a44b      	addi.n	a10, a4, 4
40089d9e:	0053a5        	call8	4008a2d8 <uxListRemove>
40089da1:	7488      	l32i.n	a8, a4, 28
40089da3:	331866        	bnei	a8, 1, 40089dda <prvProcessExpiredTimer+0x4a>
40089da6:	64b8      	l32i.n	a11, a4, 24
40089da8:	02dd      	mov.n	a13, a2
40089daa:	03cd      	mov.n	a12, a3
40089dac:	bb2a      	add.n	a11, a11, a2
40089dae:	04ad      	mov.n	a10, a4
40089db0:	ffdb65        	call8	40089b68 <prvInsertTimerInActiveList>
40089db3:	231a66        	bnei	a10, 1, 40089dda <prvProcessExpiredTimer+0x4a>
40089db6:	0e0c      	movi.n	a14, 0
40089db8:	0edd      	mov.n	a13, a14
40089dba:	02cd      	mov.n	a12, a2
40089dbc:	0ebd      	mov.n	a11, a14
40089dbe:	04ad      	mov.n	a10, a4
40089dc0:	ffec25        	call8	40089c84 <xTimerGenericCommand>
40089dc3:	3adc      	bnez.n	a10, 40089dda <prvProcessExpiredTimer+0x4a>
40089dc5:	db3bd1        	l32r	a13, 40080ab4 <_init_end+0x6b4>
40089dc8:	fea1c2        	movi	a12, 0x1fe
40089dcb:	db33b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089dce:	db33a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089dd1:	d9b181        	l32r	a8, 40080498 <_init_end+0x98>
40089dd4:	0008e0        	callx8	a8
40089dd7:	015965        	call8	4008b36c <abort>
40089dda:	9488      	l32i.n	a8, a4, 36
40089ddc:	04ad      	mov.n	a10, a4
40089dde:	0008e0        	callx8	a8
40089de1:	f01d      	retw.n
	...

40089de4 <prvProcessTimerOrBlockTask>:
40089de4:	006136        	entry	a1, 48
40089de7:	fe82e5        	call8	40088614 <vTaskSuspendAll>
40089dea:	a1cb      	addi.n	a10, a1, 12
40089dec:	fff6e5        	call8	40089d5c <prvSampleTimeNow>
40089def:	0a4d      	mov.n	a4, a10
40089df1:	3188      	l32i.n	a8, a1, 12
40089df3:	03d856        	bnez	a8, 40089e34 <prvProcessTimerOrBlockTask+0x50>
40089df6:	180c      	movi.n	a8, 1
40089df8:	090c      	movi.n	a9, 0
40089dfa:	839830        	moveqz	a9, a8, a3
40089dfd:	743090        	extui	a3, a9, 0, 8
40089e00:	01ba27        	bgeu	a10, a2, 40089e05 <prvProcessTimerOrBlockTask+0x21>
40089e03:	080c      	movi.n	a8, 0
40089e05:	0d0387        	bnone	a3, a8, 40089e16 <prvProcessTimerOrBlockTask+0x32>
40089e08:	ff6ca5        	call8	400894d4 <xTaskResumeAll>
40089e0b:	20b440        	or	a11, a4, a4
40089e0e:	20a220        	or	a10, a2, a2
40089e11:	fff7e5        	call8	40089d90 <prvProcessExpiredTimer>
40089e14:	f01d      	retw.n
40089e16:	c0b240        	sub	a11, a2, a4
40089e19:	db1a21        	l32r	a2, 40080a84 <_init_end+0x684>
40089e1c:	0022a2        	l32i	a10, a2, 0
40089e1f:	fdfc65        	call8	40087de4 <vQueueWaitForMessageRestricted>
40089e22:	ff6b25        	call8	400894d4 <xTaskResumeAll>
40089e25:	1adc      	bnez.n	a10, 40089e3a <prvProcessTimerOrBlockTask+0x56>
40089e27:	03eba0        	rsr.prid	a10
40089e2a:	04ada0        	extui	a10, a10, 13, 1
40089e2d:	f739a5        	call8	400811c8 <esp_crosscore_int_send_yield>
40089e30:	f01d      	retw.n
40089e32:	100000        	and	a0, a0, a0
40089e35:	e52011        	l32r	a1, 400832b8 <ram_read_sar_dout+0x10>
40089e38:	ff69      	s32i.n	a6, a15, 60
40089e3a:	f01d      	retw.n

40089e3c <prvProcessReceivedCommands>:
40089e3c:	008136        	entry	a1, 64
40089e3f:	0030c6        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089e42:	4188      	l32i.n	a8, a1, 16
40089e44:	0098d6        	bgez	a8, 40089e51 <prvProcessReceivedCommands+0x15>
40089e47:	5188      	l32i.n	a8, a1, 20
40089e49:	71b8      	l32i.n	a11, a1, 28
40089e4b:	0621a2        	l32i	a10, a1, 24
40089e4e:	0008e0        	callx8	a8
40089e51:	4188      	l32i.n	a8, a1, 16
40089e53:	0af896        	bltz	a8, 40089f06 <prvProcessReceivedCommands+0xca>
40089e56:	6128      	l32i.n	a2, a1, 24
40089e58:	5288      	l32i.n	a8, a2, 20
40089e5a:	488c      	beqz.n	a8, 40089e62 <prvProcessReceivedCommands+0x26>
40089e5c:	04c2a2        	addi	a10, a2, 4
40089e5f:	0047a5        	call8	4008a2d8 <uxListRemove>
40089e62:	0cc1a2        	addi	a10, a1, 12
40089e65:	ffef65        	call8	40089d5c <prvSampleTimeNow>
40089e68:	042182        	l32i	a8, a1, 16
40089e6b:	09a092        	movi	a9, 9
40089e6e:	02b987        	bgeu	a9, a8, 40089e74 <prvProcessReceivedCommands+0x38>
40089e71:	002446        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089e74:	db1191        	l32r	a9, 40080ab8 <_init_end+0x6b8>
40089e77:	a08890        	addx4	a8, a8, a9
40089e7a:	0888      	l32i.n	a8, a8, 0
40089e7c:	0008a0        	jx	a8
40089e7f:	5188      	l32i.n	a8, a1, 20
40089e81:	62b8      	l32i.n	a11, a2, 24
40089e83:	08dd      	mov.n	a13, a8
40089e85:	0acd      	mov.n	a12, a10
40089e87:	b8ba      	add.n	a11, a8, a11
40089e89:	02ad      	mov.n	a10, a2
40089e8b:	ffcde5        	call8	40089b68 <prvInsertTimerInActiveList>
40089e8e:	741a66        	bnei	a10, 1, 40089f06 <prvProcessReceivedCommands+0xca>
40089e91:	9288      	l32i.n	a8, a2, 36
40089e93:	20a220        	or	a10, a2, a2
40089e96:	0008e0        	callx8	a8
40089e99:	7288      	l32i.n	a8, a2, 28
40089e9b:	671866        	bnei	a8, 1, 40089f06 <prvProcessReceivedCommands+0xca>
40089e9e:	51c8      	l32i.n	a12, a1, 20
40089ea0:	6288      	l32i.n	a8, a2, 24
40089ea2:	0e0c      	movi.n	a14, 0
40089ea4:	0edd      	mov.n	a13, a14
40089ea6:	cc8a      	add.n	a12, a12, a8
40089ea8:	0ebd      	mov.n	a11, a14
40089eaa:	02ad      	mov.n	a10, a2
40089eac:	ffdd65        	call8	40089c84 <xTimerGenericCommand>
40089eaf:	053a56        	bnez	a10, 40089f06 <prvProcessReceivedCommands+0xca>
40089eb2:	db02d1        	l32r	a13, 40080abc <_init_end+0x6bc>
40089eb5:	04a3c2        	movi	a12, 0x304
40089eb8:	daf8b1        	l32r	a11, 40080a98 <_init_end+0x698>
40089ebb:	daf8a1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089ebe:	d97681        	l32r	a8, 40080498 <_init_end+0x98>
40089ec1:	0008e0        	callx8	a8
40089ec4:	014a65        	call8	4008b36c <abort>
40089ec7:	51b8      	l32i.n	a11, a1, 20
40089ec9:	62b9      	s32i.n	a11, a2, 24
40089ecb:	bbdc      	bnez.n	a11, 40089eea <prvProcessReceivedCommands+0xae>
40089ecd:	f03d      	nop.n
40089ecf:	f03d      	nop.n
40089ed1:	f03d      	nop.n
40089ed3:	f03d      	nop.n
40089ed5:	daf9d1        	l32r	a13, 40080abc <_init_end+0x6bc>
40089ed8:	1ba3c2        	movi	a12, 0x31b
40089edb:	daefb1        	l32r	a11, 40080a98 <_init_end+0x698>
40089ede:	daefa1        	l32r	a10, 40080a9c <_init_end+0x69c>
40089ee1:	d96d81        	l32r	a8, 40080498 <_init_end+0x98>
40089ee4:	0008e0        	callx8	a8
40089ee7:	014865        	call8	4008b36c <abort>
40089eea:	20daa0        	or	a13, a10, a10
40089eed:	20caa0        	or	a12, a10, a10
40089ef0:	80bab0        	add	a11, a10, a11
40089ef3:	02ad      	mov.n	a10, a2
40089ef5:	ffc725        	call8	40089b68 <prvInsertTimerInActiveList>
40089ef8:	000286        	j	40089f06 <prvProcessReceivedCommands+0xca>
40089efb:	000000        	ill
40089efe:	02ad      	mov.n	a10, a2
40089f00:	da3981        	l32r	a8, 400807e4 <_init_end+0x3e4>
40089f03:	0008e0        	callx8	a8
40089f06:	00a0d2        	movi	a13, 0
40089f09:	20cdd0        	or	a12, a13, a13
40089f0c:	10c1b2        	addi	a11, a1, 16
40089f0f:	dadd81        	l32r	a8, 40080a84 <_init_end+0x684>
40089f12:	0028a2        	l32i	a10, a8, 0
40089f15:	fdc4e5        	call8	40087b64 <xQueueGenericReceive>
40089f18:	f26a56        	bnez	a10, 40089e42 <prvProcessReceivedCommands+0x6>
40089f1b:	f01d      	retw.n
40089f1d:	000000        	ill

40089f20 <prvTimerTask>:
40089f20:	006136        	entry	a1, 48
40089f23:	0cc1a2        	addi	a10, a1, 12
40089f26:	ffc1a5        	call8	40089b40 <prvGetNextExpireTime>
40089f29:	0321b2        	l32i	a11, a1, 12
40089f2c:	ffeb65        	call8	40089de4 <prvProcessTimerOrBlockTask>
40089f2f:	fff0e5        	call8	40089e3c <prvProcessReceivedCommands>
40089f32:	fffb46        	j	40089f23 <prvTimerTask+0x3>
40089f35:	000000        	ill

40089f38 <_xt_context_save>:
40089f38:	5129      	s32i.n	a2, a1, 20
40089f3a:	6139      	s32i.n	a3, a1, 24
40089f3c:	7149      	s32i.n	a4, a1, 28
40089f3e:	8159      	s32i.n	a5, a1, 32
40089f40:	9169      	s32i.n	a6, a1, 36
40089f42:	a179      	s32i.n	a7, a1, 40
40089f44:	b189      	s32i.n	a8, a1, 44
40089f46:	c199      	s32i.n	a9, a1, 48
40089f48:	d1a9      	s32i.n	a10, a1, 52
40089f4a:	e1b9      	s32i.n	a11, a1, 56
40089f4c:	1161e2        	s32i	a14, a1, 68
40089f4f:	1261f2        	s32i	a15, a1, 72
40089f52:	030330        	rsr.sar	a3
40089f55:	136132        	s32i	a3, a1, 76
40089f58:	030030        	rsr.lbeg	a3
40089f5b:	166132        	s32i	a3, a1, 88
40089f5e:	030130        	rsr.lend	a3
40089f61:	176132        	s32i	a3, a1, 92
40089f64:	030230        	rsr.lcount	a3
40089f67:	186132        	s32i	a3, a1, 96
40089f6a:	009d      	mov.n	a9, a0
40089f6c:	1961c2        	s32i	a12, a1, 100
40089f6f:	1a61d2        	s32i	a13, a1, 104
40089f72:	1b6192        	s32i	a9, a1, 108
40089f75:	f1c8      	l32i.n	a12, a1, 60
40089f77:	1021d2        	l32i	a13, a1, 64
40089f7a:	c198      	l32i.n	a9, a1, 48
40089f7c:	01d112        	addmi	a1, a1, 0x100
40089f7f:	c0c112        	addi	a1, a1, -64
40089f82:	02f185        	call0	4008ce9c <xthal_window_spill_nw>
40089f85:	ffd112        	addmi	a1, a1, 0xffffff00
40089f88:	40c112        	addi	a1, a1, 64
40089f8b:	1921c2        	l32i	a12, a1, 100
40089f8e:	1a21d2        	l32i	a13, a1, 104
40089f91:	1b2192        	l32i	a9, a1, 108
40089f94:	70c122        	addi	a2, a1, 112
40089f97:	030cc5        	call0	4008d064 <xthal_save_extra_nw>
40089f9a:	090d      	mov.n	a0, a9
40089f9c:	f00d      	ret.n
	...

40089fa0 <_xt_context_restore>:
40089fa0:	00dd      	mov.n	a13, a0
40089fa2:	70c122        	addi	a2, a1, 112
40089fa5:	0307c5        	call0	4008d024 <xthal_restore_extra_nw>
40089fa8:	0d0d      	mov.n	a0, a13
40089faa:	162122        	l32i	a2, a1, 88
40089fad:	172132        	l32i	a3, a1, 92
40089fb0:	130020        	wsr.lbeg	a2
40089fb3:	182122        	l32i	a2, a1, 96
40089fb6:	130130        	wsr.lend	a3
40089fb9:	130220        	wsr.lcount	a2
40089fbc:	132132        	l32i	a3, a1, 76
40089fbf:	5128      	l32i.n	a2, a1, 20
40089fc1:	130330        	wsr.sar	a3
40089fc4:	6138      	l32i.n	a3, a1, 24
40089fc6:	7148      	l32i.n	a4, a1, 28
40089fc8:	8158      	l32i.n	a5, a1, 32
40089fca:	9168      	l32i.n	a6, a1, 36
40089fcc:	a178      	l32i.n	a7, a1, 40
40089fce:	b188      	l32i.n	a8, a1, 44
40089fd0:	c198      	l32i.n	a9, a1, 48
40089fd2:	d1a8      	l32i.n	a10, a1, 52
40089fd4:	e1b8      	l32i.n	a11, a1, 56
40089fd6:	f1c8      	l32i.n	a12, a1, 60
40089fd8:	1021d2        	l32i	a13, a1, 64
40089fdb:	1121e2        	l32i	a14, a1, 68
40089fde:	1221f2        	l32i	a15, a1, 72
40089fe1:	f00d      	ret.n
	...

40089fe4 <_xt_coproc_init>:
40089fe4:	002136        	entry	a1, 16
40089fe7:	d9b821        	l32r	a2, 400806c8 <_init_end+0x2c8>
40089fea:	328b      	addi.n	a3, a2, 8
40089fec:	040c      	movi.n	a4, 0
40089fee:	0249      	s32i.n	a4, a2, 0
40089ff0:	224b      	addi.n	a2, a2, 4
40089ff2:	f83237        	bltu	a2, a3, 40089fee <_xt_coproc_init+0xa>
40089ff5:	f01d      	retw.n
	...

40089ff8 <_xt_coproc_release>:
40089ff8:	002136        	entry	a1, 16
40089ffb:	03eb50        	rsr.prid	a5
40089ffe:	045d50        	extui	a5, a5, 13, 1
4008a001:	430c      	movi.n	a3, 4
4008a003:	825530        	mull	a5, a5, a3
4008a006:	d9b031        	l32r	a3, 400806c8 <_init_end+0x2c8>
4008a009:	335a      	add.n	a3, a3, a5
4008a00b:	434b      	addi.n	a4, a3, 4
4008a00d:	050c      	movi.n	a5, 0
4008a00f:	006360        	rsil	a6, 3
4008a012:	0378      	l32i.n	a7, a3, 0
4008a014:	019277        	bne	a2, a7, 4008a019 <_xt_coproc_release+0x21>
4008a017:	0359      	s32i.n	a5, a3, 0
4008a019:	334b      	addi.n	a3, a3, 4
4008a01b:	f33347        	bltu	a3, a4, 4008a012 <_xt_coproc_release+0x1a>
4008a01e:	13e660        	wsr.ps	a6
4008a021:	f01d      	retw.n
	...

4008a024 <_xt_coproc_savecs>:
4008a024:	03e020        	rsr.cpenable	a2
4008a027:	629c      	beqz.n	a2, 4008a041 <_xt_coproc_savecs+0x1d>
4008a029:	00ed      	mov.n	a14, a0
4008a02b:	001dc5        	call0	4008a208 <_frxt_task_coproc_state>
4008a02e:	0e0d      	mov.n	a0, a14
4008a030:	df8c      	beqz.n	a15, 4008a041 <_xt_coproc_savecs+0x1d>
4008a032:	025f22        	s16i	a2, a15, 4
4008a035:	d9a5d1        	l32r	a13, 400806cc <_init_end+0x2cc>
4008a038:	2ff8      	l32i.n	a15, a15, 8
4008a03a:	036207        	bbci	a2, 0, 4008a041 <_xt_coproc_savecs+0x1d>
4008a03d:	0de8      	l32i.n	a14, a13, 0
4008a03f:	3efa      	add.n	a3, a14, a15
4008a041:	f00d      	ret.n
	...

4008a044 <_xt_coproc_restorecs>:
4008a044:	00ed      	mov.n	a14, a0
4008a046:	001c05        	call0	4008a208 <_frxt_task_coproc_state>
4008a049:	0e0d      	mov.n	a0, a14
4008a04b:	2f9c      	beqz.n	a15, 4008a061 <_xt_coproc_restorecs+0x1d>
4008a04d:	021f32        	l16ui	a3, a15, 4
4008a050:	303320        	xor	a3, a3, a2
4008a053:	1f39      	s32i.n	a3, a15, 4
4008a055:	d99dd1        	l32r	a13, 400806cc <_init_end+0x2cc>
4008a058:	2ff8      	l32i.n	a15, a15, 8
4008a05a:	036207        	bbci	a2, 0, 4008a061 <_xt_coproc_restorecs+0x1d>
4008a05d:	0de8      	l32i.n	a14, a13, 0
4008a05f:	3efa      	add.n	a3, a14, a15
4008a061:	f00d      	ret.n
	...

4008a064 <_frxt_setup_switch>:
4008a064:	002136        	entry	a1, 16
4008a067:	03eb30        	rsr.prid	a3
4008a06a:	043d30        	extui	a3, a3, 13, 1
4008a06d:	da9421        	l32r	a2, 40080ac0 <_init_end+0x6c0>
4008a070:	a02320        	addx4	a2, a3, a2
4008a073:	130c      	movi.n	a3, 1
4008a075:	0239      	s32i.n	a3, a2, 0
4008a077:	f01d      	retw.n
4008a079:	000000        	ill

4008a07c <_frxt_int_enter>:
4008a07c:	0f61c2        	s32i	a12, a1, 60
4008a07f:	1061d2        	s32i	a13, a1, 64
4008a082:	20c000        	or	a12, a0, a0
4008a085:	ffeb05        	call0	40089f38 <_xt_context_save>
4008a088:	03eb40        	rsr.prid	a4
4008a08b:	044d40        	extui	a4, a4, 13, 1
4008a08e:	d8ed21        	l32r	a2, 40080444 <_init_end+0x44>
4008a091:	a02420        	addx4	a2, a4, a2
4008a094:	d98531        	l32r	a3, 400806a8 <_init_end+0x2a8>
4008a097:	a03430        	addx4	a3, a4, a3
4008a09a:	0228      	l32i.n	a2, a2, 0
4008a09c:	e29c      	beqz.n	a2, 4008a0be <_frxt_int_enter+0x42>
4008a09e:	0328      	l32i.n	a2, a3, 0
4008a0a0:	221b      	addi.n	a2, a2, 1
4008a0a2:	0329      	s32i.n	a2, a3, 0
4008a0a4:	161266        	bnei	a2, 1, 4008a0be <_frxt_int_enter+0x42>
4008a0a7:	d98721        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a0aa:	a02420        	addx4	a2, a4, a2
4008a0ad:	0228      	l32i.n	a2, a2, 0
4008a0af:	b28c      	beqz.n	a2, 4008a0be <_frxt_int_enter+0x42>
4008a0b1:	0219      	s32i.n	a1, a2, 0
4008a0b3:	da8411        	l32r	a1, 40080ac4 <_init_end+0x6c4>
4008a0b6:	00a622        	movi	a2, 0x600
4008a0b9:	822420        	mull	a2, a4, a2
4008a0bc:	112a      	add.n	a1, a1, a2
4008a0be:	0c0d      	mov.n	a0, a12
4008a0c0:	f00d      	ret.n
	...

4008a0c4 <_frxt_int_exit>:
4008a0c4:	03eb40        	rsr.prid	a4
4008a0c7:	044d40        	extui	a4, a4, 13, 1
4008a0ca:	d8de21        	l32r	a2, 40080444 <_init_end+0x44>
4008a0cd:	a02420        	addx4	a2, a4, a2
4008a0d0:	d97631        	l32r	a3, 400806a8 <_init_end+0x2a8>
4008a0d3:	a03430        	addx4	a3, a4, a3
4008a0d6:	006300        	rsil	a0, 3
4008a0d9:	0228      	l32i.n	a2, a2, 0
4008a0db:	e2ac      	beqz.n	a2, 4008a10d <_frxt_int_exit+0x49>
4008a0dd:	0328      	l32i.n	a2, a3, 0
4008a0df:	220b      	addi.n	a2, a2, -1
4008a0e1:	0329      	s32i.n	a2, a3, 0
4008a0e3:	62ec      	bnez.n	a2, 4008a10d <_frxt_int_exit+0x49>
4008a0e5:	d97721        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a0e8:	a02420        	addx4	a2, a4, a2
4008a0eb:	0228      	l32i.n	a2, a2, 0
4008a0ed:	029c      	beqz.n	a2, 4008a101 <_frxt_int_exit+0x3d>
4008a0ef:	0218      	l32i.n	a1, a2, 0
4008a0f1:	da7321        	l32r	a2, 40080ac0 <_init_end+0x6c0>
4008a0f4:	a02420        	addx4	a2, a4, a2
4008a0f7:	0238      	l32i.n	a3, a2, 0
4008a0f9:	039c      	beqz.n	a3, 4008a10d <_frxt_int_exit+0x49>
4008a0fb:	00a032        	movi	a3, 0
4008a0fe:	006232        	s32i	a3, a2, 0
4008a101:	201110        	or	a1, a1, a1
4008a104:	000e15        	call4	4008a1e8 <vPortYieldFromInt>
4008a107:	201110        	or	a1, a1, a1
4008a10a:	000485        	call0	4008a154 <_frxt_dispatch>
4008a10d:	ffe905        	call0	40089fa0 <_xt_context_restore>
4008a110:	0108      	l32i.n	a0, a1, 0
4008a112:	f00d      	ret.n

4008a114 <_frxt_timer_int>:
4008a114:	002136        	entry	a1, 16
4008a117:	d9f931        	l32r	a3, 400808fc <_init_end+0x4fc>
4008a11a:	002322        	l32i	a2, a3, 0
4008a11d:	03f030        	rsr.ccompare0	a3
4008a120:	804320        	add	a4, a3, a2
4008a123:	13f040        	wsr.ccompare0	a4
4008a126:	002020        	esync
4008a129:	fdde95        	call4	40087f14 <xPortSysTickHandler>
4008a12c:	002020        	esync
4008a12f:	03ea40        	rsr.ccount	a4
4008a132:	c04430        	sub	a4, a4, a3
4008a135:	de2247        	blt	a2, a4, 4008a117 <_frxt_timer_int+0x3>
4008a138:	f01d      	retw.n
	...

4008a13c <_frxt_tick_timer_init>:
4008a13c:	002136        	entry	a1, 16
4008a13f:	d9ef21        	l32r	a2, 400808fc <_init_end+0x4fc>
4008a142:	0238      	l32i.n	a3, a2, 0
4008a144:	03ea20        	rsr.ccount	a2
4008a147:	223a      	add.n	a2, a2, a3
4008a149:	13f020        	wsr.ccompare0	a2
4008a14c:	064c      	movi.n	a6, 64
4008a14e:	001dd5        	call4	4008a32c <xt_ints_on>
4008a151:	f01d      	retw.n
	...

4008a154 <_frxt_dispatch>:
4008a154:	fe5215        	call4	40088678 <vTaskSwitchContext>
4008a157:	d95b21        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a15a:	03eb30        	rsr.prid	a3
4008a15d:	043d30        	extui	a3, a3, 13, 1
4008a160:	a02320        	addx4	a2, a3, a2
4008a163:	0238      	l32i.n	a3, a2, 0
4008a165:	0318      	l32i.n	a1, a3, 0
4008a167:	0239      	s32i.n	a3, a2, 0
4008a169:	0128      	l32i.n	a2, a1, 0
4008a16b:	a2cc      	bnez.n	a2, 4008a179 <_frxt_dispatch+0x25>
4008a16d:	2138      	l32i.n	a3, a1, 8
4008a16f:	1108      	l32i.n	a0, a1, 4
4008a171:	002010        	rsync
4008a174:	13e630        	wsr.ps	a3
4008a177:	f01d      	retw.n
4008a179:	d95231        	l32r	a3, 400806c4 <_init_end+0x2c4>
4008a17c:	03eb20        	rsr.prid	a2
4008a17f:	042d20        	extui	a2, a2, 13, 1
4008a182:	a03230        	addx4	a3, a2, a3
4008a185:	002332        	l32i	a3, a3, 0
4008a188:	012322        	l32i	a2, a3, 4
4008a18b:	001232        	l16ui	a3, a2, 0
4008a18e:	13e030        	wsr.cpenable	a3
4008a191:	ffe0c5        	call0	40089fa0 <_xt_context_restore>
4008a194:	002010        	rsync
4008a197:	0108      	l32i.n	a0, a1, 0
4008a199:	f00d      	ret.n
	...

4008a19c <vPortYield>:
4008a19c:	004136        	entry	a1, 32
4008a19f:	03e620        	rsr.ps	a2
4008a1a2:	1109      	s32i.n	a0, a1, 4
4008a1a4:	026122        	s32i	a2, a1, 8
4008a1a7:	da4861        	l32r	a6, 40080ac8 <_init_end+0x6c8>
4008a1aa:	102260        	and	a2, a2, a6
4008a1ad:	03c222        	addi	a2, a2, 3
4008a1b0:	13e620        	wsr.ps	a2
4008a1b3:	002010        	rsync
4008a1b6:	02ce45        	call0	4008ce9c <xthal_window_spill_nw>
4008a1b9:	2128      	l32i.n	a2, a1, 8
4008a1bb:	13e620        	wsr.ps	a2
4008a1be:	006320        	rsil	a2, 3
4008a1c1:	ffe605        	call0	4008a024 <_xt_coproc_savecs>
4008a1c4:	d94021        	l32r	a2, 400806c4 <_init_end+0x2c4>
4008a1c7:	03eb30        	rsr.prid	a3
4008a1ca:	043d30        	extui	a3, a3, 13, 1
4008a1cd:	a02320        	addx4	a2, a3, a2
4008a1d0:	0228      	l32i.n	a2, a2, 0
4008a1d2:	030c      	movi.n	a3, 0
4008a1d4:	0139      	s32i.n	a3, a1, 0
4008a1d6:	0219      	s32i.n	a1, a2, 0
4008a1d8:	1228      	l32i.n	a2, a2, 4
4008a1da:	030c      	movi.n	a3, 0
4008a1dc:	13e030        	wsr.cpenable	a3
4008a1df:	002216        	beqz	a2, 4008a1e5 <vPortYield+0x49>
4008a1e2:	005232        	s16i	a3, a2, 0
4008a1e5:	fff6c5        	call0	4008a154 <_frxt_dispatch>

4008a1e8 <vPortYieldFromInt>:
4008a1e8:	002136        	entry	a1, 16
4008a1eb:	d93631        	l32r	a3, 400806c4 <_init_end+0x2c4>
4008a1ee:	03eb20        	rsr.prid	a2
4008a1f1:	042d20        	extui	a2, a2, 13, 1
4008a1f4:	a03230        	addx4	a3, a2, a3
4008a1f7:	0338      	l32i.n	a3, a3, 0
4008a1f9:	1328      	l32i.n	a2, a3, 4
4008a1fb:	03e030        	rsr.cpenable	a3
4008a1fe:	005232        	s16i	a3, a2, 0
4008a201:	030c      	movi.n	a3, 0
4008a203:	13e030        	wsr.cpenable	a3
4008a206:	f01d      	retw.n

4008a208 <_frxt_task_coproc_state>:
4008a208:	03eb30        	rsr.prid	a3
4008a20b:	043d30        	extui	a3, a3, 13, 1
4008a20e:	d88df1        	l32r	a15, 40080444 <_init_end+0x44>
4008a211:	a0f3f0        	addx4	a15, a3, a15
4008a214:	0ff8      	l32i.n	a15, a15, 0
4008a216:	6f9c      	beqz.n	a15, 4008a230 <_frxt_task_coproc_state+0x28>
4008a218:	d924f1        	l32r	a15, 400806a8 <_init_end+0x2a8>
4008a21b:	a0f3f0        	addx4	a15, a3, a15
4008a21e:	0ff8      	l32i.n	a15, a15, 0
4008a220:	cfcc      	bnez.n	a15, 4008a230 <_frxt_task_coproc_state+0x28>
4008a222:	d928f1        	l32r	a15, 400806c4 <_init_end+0x2c4>
4008a225:	a0f3f0        	addx4	a15, a3, a15
4008a228:	0ff8      	l32i.n	a15, a15, 0
4008a22a:	4f8c      	beqz.n	a15, 4008a232 <_frxt_task_coproc_state+0x2a>
4008a22c:	1ff8      	l32i.n	a15, a15, 4
4008a22e:	f00d      	ret.n
4008a230:	0f0c      	movi.n	a15, 0
4008a232:	f00d      	ret.n

4008a234 <prvIsQueueEmpty>:
4008a234:	004136        	entry	a1, 32
4008a237:	0020c0        	memw
4008a23a:	e228      	l32i.n	a2, a2, 56
4008a23c:	22cc      	bnez.n	a2, 4008a242 <prvIsQueueEmpty+0xe>
4008a23e:	120c      	movi.n	a2, 1
4008a240:	f01d      	retw.n
4008a242:	020c      	movi.n	a2, 0
4008a244:	f01d      	retw.n
	...

4008a248 <vListInitialise>:
4008a248:	004136        	entry	a1, 32
4008a24b:	828b      	addi.n	a8, a2, 8
4008a24d:	1289      	s32i.n	a8, a2, 4
4008a24f:	f97c      	movi.n	a9, -1
4008a251:	2299      	s32i.n	a9, a2, 8
4008a253:	3289      	s32i.n	a8, a2, 12
4008a255:	4289      	s32i.n	a8, a2, 16
4008a257:	080c      	movi.n	a8, 0
4008a259:	0289      	s32i.n	a8, a2, 0
4008a25b:	f01d      	retw.n
4008a25d:	000000        	ill

4008a260 <vListInitialiseItem>:
4008a260:	004136        	entry	a1, 32
4008a263:	080c      	movi.n	a8, 0
4008a265:	4289      	s32i.n	a8, a2, 16
4008a267:	f01d      	retw.n
4008a269:	000000        	ill

4008a26c <vListInsertEnd>:
4008a26c:	004136        	entry	a1, 32
4008a26f:	1288      	l32i.n	a8, a2, 4
4008a271:	1389      	s32i.n	a8, a3, 4
4008a273:	f03d      	nop.n
4008a275:	f03d      	nop.n
4008a277:	f03d      	nop.n
4008a279:	f03d      	nop.n
4008a27b:	2898      	l32i.n	a9, a8, 8
4008a27d:	2399      	s32i.n	a9, a3, 8
4008a27f:	f03d      	nop.n
4008a281:	f03d      	nop.n
4008a283:	f03d      	nop.n
4008a285:	f03d      	nop.n
4008a287:	2898      	l32i.n	a9, a8, 8
4008a289:	1939      	s32i.n	a3, a9, 4
4008a28b:	2839      	s32i.n	a3, a8, 8
4008a28d:	4329      	s32i.n	a2, a3, 16
4008a28f:	f03d      	nop.n
4008a291:	f03d      	nop.n
4008a293:	f03d      	nop.n
4008a295:	f03d      	nop.n
4008a297:	0238      	l32i.n	a3, a2, 0
4008a299:	331b      	addi.n	a3, a3, 1
4008a29b:	0239      	s32i.n	a3, a2, 0
4008a29d:	f01d      	retw.n
	...

4008a2a0 <vListInsert>:
4008a2a0:	004136        	entry	a1, 32
4008a2a3:	03b8      	l32i.n	a11, a3, 0
4008a2a5:	040b66        	bnei	a11, -1, 4008a2ad <vListInsert+0xd>
4008a2a8:	4298      	l32i.n	a9, a2, 16
4008a2aa:	000346        	j	4008a2bb <vListInsert+0x1b>
4008a2ad:	928b      	addi.n	a9, a2, 8
4008a2af:	000046        	j	4008a2b4 <vListInsert+0x14>
4008a2b2:	089d      	mov.n	a9, a8
4008a2b4:	1988      	l32i.n	a8, a9, 4
4008a2b6:	08a8      	l32i.n	a10, a8, 0
4008a2b8:	f6bba7        	bgeu	a11, a10, 4008a2b2 <vListInsert+0x12>
4008a2bb:	1988      	l32i.n	a8, a9, 4
4008a2bd:	1389      	s32i.n	a8, a3, 4
4008a2bf:	2839      	s32i.n	a3, a8, 8
4008a2c1:	2399      	s32i.n	a9, a3, 8
4008a2c3:	1939      	s32i.n	a3, a9, 4
4008a2c5:	4329      	s32i.n	a2, a3, 16
4008a2c7:	f03d      	nop.n
4008a2c9:	f03d      	nop.n
4008a2cb:	f03d      	nop.n
4008a2cd:	f03d      	nop.n
4008a2cf:	0238      	l32i.n	a3, a2, 0
4008a2d1:	331b      	addi.n	a3, a3, 1
4008a2d3:	0239      	s32i.n	a3, a2, 0
4008a2d5:	f01d      	retw.n
	...

4008a2d8 <uxListRemove>:
4008a2d8:	004136        	entry	a1, 32
4008a2db:	4288      	l32i.n	a8, a2, 16
4008a2dd:	1298      	l32i.n	a9, a2, 4
4008a2df:	22a8      	l32i.n	a10, a2, 8
4008a2e1:	29a9      	s32i.n	a10, a9, 8
4008a2e3:	f03d      	nop.n
4008a2e5:	f03d      	nop.n
4008a2e7:	f03d      	nop.n
4008a2e9:	f03d      	nop.n
4008a2eb:	2298      	l32i.n	a9, a2, 8
4008a2ed:	12a8      	l32i.n	a10, a2, 4
4008a2ef:	19a9      	s32i.n	a10, a9, 4
4008a2f1:	f03d      	nop.n
4008a2f3:	f03d      	nop.n
4008a2f5:	f03d      	nop.n
4008a2f7:	f03d      	nop.n
4008a2f9:	1898      	l32i.n	a9, a8, 4
4008a2fb:	039297        	bne	a2, a9, 4008a302 <uxListRemove+0x2a>
4008a2fe:	2298      	l32i.n	a9, a2, 8
4008a300:	1899      	s32i.n	a9, a8, 4
4008a302:	090c      	movi.n	a9, 0
4008a304:	4299      	s32i.n	a9, a2, 16
4008a306:	f03d      	nop.n
4008a308:	f03d      	nop.n
4008a30a:	f03d      	nop.n
4008a30c:	f03d      	nop.n
4008a30e:	0828      	l32i.n	a2, a8, 0
4008a310:	220b      	addi.n	a2, a2, -1
4008a312:	0829      	s32i.n	a2, a8, 0
4008a314:	f01d      	retw.n
	...

4008a318 <vPortStoreTaskMPUSettings>:
4008a318:	004136        	entry	a1, 32
4008a31b:	550b      	addi.n	a5, a5, -1
4008a31d:	445a      	add.n	a4, a4, a5
4008a31f:	a0c452        	addi	a5, a4, -96
4008a322:	047c      	movi.n	a4, -16
4008a324:	105540        	and	a5, a5, a4
4008a327:	0259      	s32i.n	a5, a2, 0
4008a329:	f01d      	retw.n
	...

4008a32c <xt_ints_on>:
4008a32c:	002136        	entry	a1, 16
4008a32f:	030c      	movi.n	a3, 0
4008a331:	61e430        	xsr.intenable	a3
4008a334:	002010        	rsync
4008a337:	202320        	or	a2, a3, a2
4008a33a:	13e420        	wsr.intenable	a2
4008a33d:	002010        	rsync
4008a340:	032d      	mov.n	a2, a3
4008a342:	f01d      	retw.n

4008a344 <xt_ints_off>:
4008a344:	002136        	entry	a1, 16
4008a347:	040c      	movi.n	a4, 0
4008a349:	61e440        	xsr.intenable	a4
4008a34c:	002010        	rsync
4008a34f:	203420        	or	a3, a4, a2
4008a352:	303320        	xor	a3, a3, a2
4008a355:	13e430        	wsr.intenable	a3
4008a358:	002010        	rsync
4008a35b:	042d      	mov.n	a2, a4
4008a35d:	f01d      	retw.n
	...

4008a360 <get_prev_free_block>:
4008a360:	004136        	entry	a1, 32
4008a363:	10c222        	addi	a2, a2, 16
4008a366:	479327        	bne	a3, a2, 4008a3b1 <get_prev_free_block+0x51>
4008a369:	d9d8d1        	l32r	a13, 40080acc <_init_end+0x6cc>
4008a36c:	d9d9c1        	l32r	a12, 40080ad0 <_init_end+0x6d0>
4008a36f:	b8a0b2        	movi	a11, 184
4008a372:	d9d8a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a375:	50b625        	call8	400daed8 <__assert_func>
4008a378:	0288      	l32i.n	a8, a2, 0
4008a37a:	02cd      	mov.n	a12, a2
4008a37c:	0ee807        	bbsi	a8, 0, 4008a38e <get_prev_free_block+0x2e>
4008a37f:	bba0b2        	movi	a11, 187
4008a382:	d9d5a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a385:	d84481        	l32r	a8, 40080498 <_init_end+0x98>
4008a388:	0008e0        	callx8	a8
4008a38b:	00fe25        	call8	4008b36c <abort>
4008a38e:	1288      	l32i.n	a8, a2, 4
4008a390:	188c      	beqz.n	a8, 4008a395 <get_prev_free_block+0x35>
4008a392:	183837        	bltu	a8, a3, 4008a3ae <get_prev_free_block+0x4e>
4008a395:	0398      	l32i.n	a9, a3, 0
4008a397:	2b6907        	bbci	a9, 0, 4008a3c6 <get_prev_free_block+0x66>
4008a39a:	c24b      	addi.n	a12, a2, 4
4008a39c:	261387        	beq	a3, a8, 4008a3c6 <get_prev_free_block+0x66>
4008a39f:	bfa0b2        	movi	a11, 191
4008a3a2:	d9cda1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a3a5:	d83c81        	l32r	a8, 40080498 <_init_end+0x98>
4008a3a8:	0008e0        	callx8	a8
4008a3ab:	00fc25        	call8	4008b36c <abort>
4008a3ae:	202880        	or	a2, a8, a8
4008a3b1:	190c      	movi.n	a9, 1
4008a3b3:	080c      	movi.n	a8, 0
4008a3b5:	938920        	movnez	a8, a9, a2
4008a3b8:	748080        	extui	a8, a8, 0, 8
4008a3bb:	013237        	bltu	a2, a3, 4008a3c0 <get_prev_free_block+0x60>
4008a3be:	090c      	movi.n	a9, 0
4008a3c0:	b48897        	bany	a8, a9, 4008a378 <get_prev_free_block+0x18>
4008a3c3:	00faa5        	call8	4008b36c <abort>
4008a3c6:	f01d      	retw.n

4008a3c8 <split_if_necessary>:
4008a3c8:	004136        	entry	a1, 32
4008a3cb:	05ad      	mov.n	a10, a5
4008a3cd:	0368      	l32i.n	a6, a3, 0
4008a3cf:	c87c      	movi.n	a8, -4
4008a3d1:	108680        	and	a8, a6, a8
4008a3d4:	a88c      	beqz.n	a8, 4008a3e2 <split_if_necessary+0x1a>
4008a3d6:	c05830        	sub	a5, a8, a3
4008a3d9:	fcc552        	addi	a5, a5, -4
4008a3dc:	000146        	j	4008a3e5 <split_if_necessary+0x1d>
4008a3df:	000000        	ill
4008a3e2:	00a052        	movi	a5, 0
4008a3e5:	106607        	bbci	a6, 0, 4008a3f9 <split_if_necessary+0x31>
4008a3e8:	03cd      	mov.n	a12, a3
4008a3ea:	0ca1b2        	movi	a11, 0x10c
4008a3ed:	d9baa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a3f0:	d82a81        	l32r	a8, 40080498 <_init_end+0x98>
4008a3f3:	0008e0        	callx8	a8
4008a3f6:	00f765        	call8	4008b36c <abort>
4008a3f9:	10b547        	bgeu	a5, a4, 4008a40d <split_if_necessary+0x45>
4008a3fc:	03cd      	mov.n	a12, a3
4008a3fe:	0da1b2        	movi	a11, 0x10d
4008a401:	d9b5a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a404:	d82581        	l32r	a8, 40080498 <_init_end+0x98>
4008a407:	0008e0        	callx8	a8
4008a40a:	00f625        	call8	4008b36c <abort>
4008a40d:	443b      	addi.n	a4, a4, 3
4008a40f:	fcaf62        	movi	a6, -4
4008a412:	104460        	and	a4, a4, a6
4008a415:	10c262        	addi	a6, a2, 16
4008a418:	0e9367        	bne	a3, a6, 4008a42a <split_if_necessary+0x62>
4008a41b:	d9acd1        	l32r	a13, 40080acc <_init_end+0x6cc>
4008a41e:	d9afc1        	l32r	a12, 40080adc <_init_end+0x6dc>
4008a421:	11a1b2        	movi	a11, 0x111
4008a424:	d9aca1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a427:	50ab25        	call8	400daed8 <__assert_func>
4008a42a:	08dc      	bnez.n	a8, 4008a43e <split_if_necessary+0x76>
4008a42c:	d9add1        	l32r	a13, 40080ae0 <_init_end+0x6e0>
4008a42f:	d9abc1        	l32r	a12, 40080adc <_init_end+0x6dc>
4008a432:	12a1b2        	movi	a11, 0x112
4008a435:	d9a7a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a438:	201110        	or	a1, a1, a1
4008a43b:	50a9e5        	call8	400daed8 <__assert_func>
4008a43e:	734b      	addi.n	a7, a3, 4
4008a440:	774a      	add.n	a7, a7, a4
4008a442:	0398      	l32i.n	a9, a3, 0
4008a444:	c67c      	movi.n	a6, -4
4008a446:	106960        	and	a6, a9, a6
4008a449:	011616        	beqz	a6, 4008a45e <split_if_necessary+0x96>
4008a44c:	102367        	blt	a3, a6, 4008a460 <split_if_necessary+0x98>
4008a44f:	d9a5d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a452:	d9a5c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a455:	7ca0b2        	movi	a11, 124
4008a458:	d99fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a45b:	50a7e5        	call8	400daed8 <__assert_func>
4008a45e:	060c      	movi.n	a6, 0
4008a460:	0698      	l32i.n	a9, a6, 0
4008a462:	406907        	bbci	a9, 0, 4008a4a6 <split_if_necessary+0xde>
4008a465:	cb7c      	movi.n	a11, -4
4008a467:	3b09b7        	bnone	a9, a11, 4008a4a6 <split_if_necessary+0xde>
4008a46a:	0799      	s32i.n	a9, a7, 0
4008a46c:	f03d      	nop.n
4008a46e:	f03d      	nop.n
4008a470:	f03d      	nop.n
4008a472:	f03d      	nop.n
4008a474:	1688      	l32i.n	a8, a6, 4
4008a476:	1789      	s32i.n	a8, a7, 4
4008a478:	5acc      	bnez.n	a10, 4008a481 <split_if_necessary+0xb9>
4008a47a:	03bd      	mov.n	a11, a3
4008a47c:	02ad      	mov.n	a10, a2
4008a47e:	ffee25        	call8	4008a360 <get_prev_free_block>
4008a481:	012a82        	l32i	a8, a10, 4
4008a484:	04cac2        	addi	a12, a10, 4
4008a487:	0e1867        	beq	a8, a6, 4008a499 <split_if_necessary+0xd1>
4008a48a:	20a1b2        	movi	a11, 0x120
4008a48d:	d992a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a490:	d80281        	l32r	a8, 40080498 <_init_end+0x98>
4008a493:	0008e0        	callx8	a8
4008a496:	00ed65        	call8	4008b36c <abort>
4008a499:	c04540        	sub	a4, a5, a4
4008a49c:	012252        	l32i	a5, a2, 4
4008a49f:	454a      	add.n	a4, a5, a4
4008a4a1:	1249      	s32i.n	a4, a2, 4
4008a4a3:	001ac6        	j	4008a512 <split_if_necessary+0x14a>
4008a4a6:	788c      	beqz.n	a8, 4008a4b1 <split_if_necessary+0xe9>
4008a4a8:	c08830        	sub	a8, a8, a3
4008a4ab:	fcc882        	addi	a8, a8, -4
4008a4ae:	000086        	j	4008a4b4 <split_if_necessary+0xec>
4008a4b1:	00a082        	movi	a8, 0
4008a4b4:	08c442        	addi	a4, a4, 8
4008a4b7:	5b3847        	bltu	a8, a4, 4008a516 <split_if_necessary+0x14e>
4008a4ba:	006a56        	bnez	a10, 4008a4c4 <split_if_necessary+0xfc>
4008a4bd:	03bd      	mov.n	a11, a3
4008a4bf:	02ad      	mov.n	a10, a2
4008a4c1:	ffe9e5        	call8	4008a360 <get_prev_free_block>
4008a4c4:	002352        	l32i	a5, a3, 0
4008a4c7:	01a042        	movi	a4, 1
4008a4ca:	205540        	or	a5, a5, a4
4008a4cd:	006752        	s32i	a5, a7, 0
4008a4d0:	f03d      	nop.n
4008a4d2:	f03d      	nop.n
4008a4d4:	f03d      	nop.n
4008a4d6:	f03d      	nop.n
4008a4d8:	1a48      	l32i.n	a4, a10, 4
4008a4da:	1749      	s32i.n	a4, a7, 4
4008a4dc:	f03d      	nop.n
4008a4de:	f03d      	nop.n
4008a4e0:	f03d      	nop.n
4008a4e2:	f03d      	nop.n
4008a4e4:	1a48      	l32i.n	a4, a10, 4
4008a4e6:	ca4b      	addi.n	a12, a10, 4
4008a4e8:	0e3747        	bltu	a7, a4, 4008a4fa <split_if_necessary+0x132>
4008a4eb:	34a1b2        	movi	a11, 0x134
4008a4ee:	d97aa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a4f1:	d7e981        	l32r	a8, 40080498 <_init_end+0x98>
4008a4f4:	0008e0        	callx8	a8
4008a4f7:	00e765        	call8	4008b36c <abort>
4008a4fa:	c47c      	movi.n	a4, -4
4008a4fc:	104540        	and	a4, a5, a4
4008a4ff:	748c      	beqz.n	a4, 4008a50a <split_if_necessary+0x142>
4008a501:	c04470        	sub	a4, a4, a7
4008a504:	fcc442        	addi	a4, a4, -4
4008a507:	000046        	j	4008a50c <split_if_necessary+0x144>
4008a50a:	040c      	movi.n	a4, 0
4008a50c:	1258      	l32i.n	a5, a2, 4
4008a50e:	454a      	add.n	a4, a5, a4
4008a510:	1249      	s32i.n	a4, a2, 4
4008a512:	0379      	s32i.n	a7, a3, 0
4008a514:	1a79      	s32i.n	a7, a10, 4
4008a516:	f01d      	retw.n

4008a518 <assert_valid_block>:
4008a518:	004136        	entry	a1, 32
4008a51b:	10c282        	addi	a8, a2, 16
4008a51e:	0a3387        	bltu	a3, a8, 4008a52c <assert_valid_block+0x14>
4008a521:	3298      	l32i.n	a9, a2, 12
4008a523:	0bb937        	bgeu	a9, a3, 4008a532 <assert_valid_block+0x1a>
4008a526:	090c      	movi.n	a9, 0
4008a528:	000246        	j	4008a535 <assert_valid_block+0x1d>
4008a52b:	090c00        	l32e	a0, a12, -64
4008a52e:	0000c6        	j	4008a535 <assert_valid_block+0x1d>
4008a531:	a09200        	addx4	a9, a2, a0
4008a534:	095601        	l32r	a0, 4004ca8c <r_llm_init+0x94>
4008a537:	03cd01        	l32r	a0, 4004b46c <lld_pdu_pack+0x958>
4008a53a:	a2a0b2        	movi	a11, 162
4008a53d:	d966a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a540:	d7d681        	l32r	a8, 40080498 <_init_end+0x98>
4008a543:	0008e0        	callx8	a8
4008a546:	00e265        	call8	4008b36c <abort>
4008a549:	3298      	l32i.n	a9, a2, 12
4008a54b:	77b297        	bgeu	a2, a9, 4008a5c6 <assert_valid_block+0xae>
4008a54e:	03a8      	l32i.n	a10, a3, 0
4008a550:	c27c      	movi.n	a2, -4
4008a552:	102a20        	and	a2, a10, a2
4008a555:	011216        	beqz	a2, 4008a56a <assert_valid_block+0x52>
4008a558:	102327        	blt	a3, a2, 4008a56c <assert_valid_block+0x54>
4008a55b:	d962d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a55e:	d962c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a561:	7ca0b2        	movi	a11, 124
4008a564:	d95ca1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a567:	509725        	call8	400daed8 <__assert_func>
4008a56a:	020c      	movi.n	a2, 0
4008a56c:	083287        	bltu	a2, a8, 4008a578 <assert_valid_block+0x60>
4008a56f:	0bb927        	bgeu	a9, a2, 4008a57e <assert_valid_block+0x66>
4008a572:	020c      	movi.n	a2, 0
4008a574:	000246        	j	4008a581 <assert_valid_block+0x69>
4008a577:	020c00        	andb	b0, b12, b0
4008a57a:	0000c6        	j	4008a581 <assert_valid_block+0x69>
4008a57d:	a02200        	addx4	a2, a2, a0
4008a580:	125601        	l32r	a0, 4004eed8 <r_lm_init+0x1a4>
4008a583:	c33001        	l32r	a0, 4007b244 <__udivmoddi4+0x16650>
4008a586:	a0b220        	addx4	a11, a2, a2
4008a589:	53a1a5        	call8	400ddfa4 <_svfprintf_r+0x1880>
4008a58c:	81d9      	s32i.n	a13, a1, 32
4008a58e:	e0d7c2        	addmi	a12, a7, 0xffffe000
4008a591:	0008      	l32i.n	a0, a0, 0
4008a593:	00dda5        	call8	4008b36c <abort>
4008a596:	0328      	l32i.n	a2, a3, 0
4008a598:	2a6207        	bbci	a2, 0, 4008a5c6 <assert_valid_block+0xae>
4008a59b:	1328      	l32i.n	a2, a3, 4
4008a59d:	073287        	bltu	a2, a8, 4008a5a8 <assert_valid_block+0x90>
4008a5a0:	0ab927        	bgeu	a9, a2, 4008a5ae <assert_valid_block+0x96>
4008a5a3:	020c      	movi.n	a2, 0
4008a5a5:	000206        	j	4008a5b1 <assert_valid_block+0x99>
4008a5a8:	020c      	movi.n	a2, 0
4008a5aa:	0000c6        	j	4008a5b1 <assert_valid_block+0x99>
4008a5ad:	a02200        	addx4	a2, a2, a0
4008a5b0:	c3c201        	l32r	a0, 4007b4b8 <__udivmoddi4+0x168c4>
4008a5b3:	e25604        	lsi	f0, a6, 0x388
4008a5b6:	a0b200        	addx4	a11, a2, a0
4008a5b9:	a1a8      	l32i.n	a10, a1, 40
4008a5bb:	81d947        	bbs	a9, a4, 4008a540 <assert_valid_block+0x28>
4008a5be:	e0d7b6        	bltui	a7, 64, 4008a5a2 <assert_valid_block+0x8a>
4008a5c1:	0008      	l32i.n	a0, a0, 0
4008a5c3:	00daa5        	call8	4008b36c <abort>
4008a5c6:	f01d      	retw.n

4008a5c8 <merge_adjacent>:
4008a5c8:	004136        	entry	a1, 32
4008a5cb:	0e3347        	bltu	a3, a4, 4008a5dd <merge_adjacent+0x15>
4008a5ce:	d947d1        	l32r	a13, 40080aec <_init_end+0x6ec>
4008a5d1:	d947c1        	l32r	a12, 40080af0 <_init_end+0x6f0>
4008a5d4:	d1a0b2        	movi	a11, 209
4008a5d7:	d93fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a5da:	508fe5        	call8	400daed8 <__assert_func>
4008a5dd:	002492        	l32i	a9, a4, 0
4008a5e0:	fcaf52        	movi	a5, -4
4008a5e3:	028957        	bany	a9, a5, 4008a5e9 <merge_adjacent+0x21>
4008a5e6:	004986        	j	4008a710 <merge_adjacent+0x148>
4008a5e9:	10c252        	addi	a5, a2, 16
4008a5ec:	029357        	bne	a3, a5, 4008a5f2 <merge_adjacent+0x2a>
4008a5ef:	004846        	j	4008a714 <merge_adjacent+0x14c>
4008a5f2:	0358      	l32i.n	a5, a3, 0
4008a5f4:	c87c      	movi.n	a8, -4
4008a5f6:	108580        	and	a8, a5, a8
4008a5f9:	011816        	beqz	a8, 4008a60e <merge_adjacent+0x46>
4008a5fc:	112387        	blt	a3, a8, 4008a611 <merge_adjacent+0x49>
4008a5ff:	d939d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a602:	d939c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a605:	7ca0b2        	movi	a11, 124
4008a608:	d933a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a60b:	508ce5        	call8	400daed8 <__assert_func>
4008a60e:	00a082        	movi	a8, 0
4008a611:	111487        	beq	a4, a8, 4008a626 <merge_adjacent+0x5e>
4008a614:	20c330        	or	a12, a3, a3
4008a617:	dba0b2        	movi	a11, 219
4008a61a:	d92fa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a61d:	d79e81        	l32r	a8, 40080498 <_init_end+0x98>
4008a620:	0008e0        	callx8	a8
4008a623:	00d4a5        	call8	4008b36c <abort>
4008a626:	002382        	l32i	a8, a3, 0
4008a629:	048080        	extui	a8, a8, 0, 1
4008a62c:	a88c      	beqz.n	a8, 4008a63a <merge_adjacent+0x72>
4008a62e:	045090        	extui	a5, a9, 0, 1
4008a631:	758c      	beqz.n	a5, 4008a63c <merge_adjacent+0x74>
4008a633:	150c      	movi.n	a5, 1
4008a635:	0000c6        	j	4008a63c <merge_adjacent+0x74>
4008a638:	5d0000        	lsi	f0, a0, 0x174
4008a63b:	5608      	l32i.n	a0, a6, 20
4008a63d:	cc0555        	call4	40056694 <qsort+0x270>
4008a640:	0718      	l32i.n	a1, a7, 0
4008a642:	5069      	s32i.n	a6, a0, 20
4008a644:	588c      	beqz.n	a8, 4008a64d <merge_adjacent+0x85>
4008a646:	036d      	mov.n	a6, a3
4008a648:	000106        	j	4008a650 <merge_adjacent+0x88>
4008a64b:	400000        	ssr	a0
4008a64e:	602064        	lsi	f6, a0, 0x180
4008a651:	ad20b6        	bltui	a0, 2, 4008a602 <merge_adjacent+0x3a>
4008a654:	d0a502        	movi	a0, 0x5d0
4008a657:	ff          	.byte 0xff
4008a658:	1688      	l32i.n	a8, a6, 4
4008a65a:	c64b      	addi.n	a12, a6, 4
4008a65c:	0e3a87        	bltu	a10, a8, 4008a66e <merge_adjacent+0xa6>
4008a65f:	e4a0b2        	movi	a11, 228
4008a662:	d91da1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a665:	d78c81        	l32r	a8, 40080498 <_init_end+0x98>
4008a668:	0008e0        	callx8	a8
4008a66b:	00d025        	call8	4008b36c <abort>
4008a66e:	1a89      	s32i.n	a8, a10, 4
4008a670:	f03d      	nop.n
4008a672:	f03d      	nop.n
4008a674:	f03d      	nop.n
4008a676:	f03d      	nop.n
4008a678:	0698      	l32i.n	a9, a6, 0
4008a67a:	c87c      	movi.n	a8, -4
4008a67c:	108980        	and	a8, a9, a8
4008a67f:	788c      	beqz.n	a8, 4008a68a <merge_adjacent+0xc2>
4008a681:	c08860        	sub	a8, a8, a6
4008a684:	fcc882        	addi	a8, a8, -4
4008a687:	000086        	j	4008a68d <merge_adjacent+0xc5>
4008a68a:	00a082        	movi	a8, 0
4008a68d:	1268      	l32i.n	a6, a2, 4
4008a68f:	c08680        	sub	a8, a6, a8
4008a692:	016282        	s32i	a8, a2, 4
4008a695:	f03d      	nop.n
4008a697:	f03d      	nop.n
4008a699:	f03d      	nop.n
4008a69b:	f03d      	nop.n
4008a69d:	0468      	l32i.n	a6, a4, 0
4008a69f:	c87c      	movi.n	a8, -4
4008a6a1:	108680        	and	a8, a6, a8
4008a6a4:	0389      	s32i.n	a8, a3, 0
4008a6a6:	38dc      	bnez.n	a8, 4008a6bd <merge_adjacent+0xf5>
4008a6a8:	03cd      	mov.n	a12, a3
4008a6aa:	eba0b2        	movi	a11, 235
4008a6ad:	f03d      	nop.n
4008a6af:	f03d      	nop.n
4008a6b1:	d909a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6b4:	d77981        	l32r	a8, 40080498 <_init_end+0x98>
4008a6b7:	0008e0        	callx8	a8
4008a6ba:	00cb25        	call8	4008b36c <abort>
4008a6bd:	057516        	beqz	a5, 4008a718 <merge_adjacent+0x150>
4008a6c0:	150c      	movi.n	a5, 1
4008a6c2:	208850        	or	a8, a8, a5
4008a6c5:	0389      	s32i.n	a8, a3, 0
4008a6c7:	f03d      	nop.n
4008a6c9:	f03d      	nop.n
4008a6cb:	f03d      	nop.n
4008a6cd:	0020f0        	nop
4008a6d0:	012452        	l32i	a5, a4, 4
4008a6d3:	45ac      	beqz.n	a5, 4008a6fb <merge_adjacent+0x133>
4008a6d5:	c44b      	addi.n	a12, a4, 4
4008a6d7:	0e3357        	bltu	a3, a5, 4008a6e9 <merge_adjacent+0x121>
4008a6da:	efa0b2        	movi	a11, 239
4008a6dd:	d8fea1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6e0:	d76e81        	l32r	a8, 40080498 <_init_end+0x98>
4008a6e3:	0008e0        	callx8	a8
4008a6e6:	00c865        	call8	4008b36c <abort>
4008a6e9:	0e3457        	bltu	a4, a5, 4008a6fb <merge_adjacent+0x133>
4008a6ec:	f0a0b2        	movi	a11, 240
4008a6ef:	d8faa1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a6f2:	d76981        	l32r	a8, 40080498 <_init_end+0x98>
4008a6f5:	0008e0        	callx8	a8
4008a6f8:	00c725        	call8	4008b36c <abort>
4008a6fb:	1359      	s32i.n	a5, a3, 4
4008a6fd:	f03d      	nop.n
4008a6ff:	f03d      	nop.n
4008a701:	f03d      	nop.n
4008a703:	f03d      	nop.n
4008a705:	1248      	l32i.n	a4, a2, 4
4008a707:	444b      	addi.n	a4, a4, 4
4008a709:	1249      	s32i.n	a4, a2, 4
4008a70b:	032d      	mov.n	a2, a3
4008a70d:	f01d      	retw.n
4008a70f:	032d00        	lsi	f0, a13, 12
4008a712:	f01d      	retw.n
4008a714:	042d      	mov.n	a2, a4
4008a716:	f01d      	retw.n
4008a718:	032d      	mov.n	a2, a3
4008a71a:	f01d      	retw.n

4008a71c <multi_heap_get_allocated_size_impl>:
4008a71c:	004136        	entry	a1, 32
4008a71f:	fcc332        	addi	a3, a3, -4
4008a722:	20b330        	or	a11, a3, a3
4008a725:	20a220        	or	a10, a2, a2
4008a728:	ffdee5        	call8	4008a518 <assert_valid_block>
4008a72b:	002322        	l32i	a2, a3, 0
4008a72e:	106207        	bbci	a2, 0, 4008a742 <multi_heap_get_allocated_size_impl+0x26>
4008a731:	03cd      	mov.n	a12, a3
4008a733:	45a1b2        	movi	a11, 0x145
4008a736:	d8e8a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a739:	d75781        	l32r	a8, 40080498 <_init_end+0x98>
4008a73c:	0008e0        	callx8	a8
4008a73f:	00c2e5        	call8	4008b36c <abort>
4008a742:	c87c      	movi.n	a8, -4
4008a744:	102280        	and	a2, a2, a8
4008a747:	528c      	beqz.n	a2, 4008a750 <multi_heap_get_allocated_size_impl+0x34>
4008a749:	c02230        	sub	a2, a2, a3
4008a74c:	228a      	add.n	a2, a2, a8
4008a74e:	f01d      	retw.n
4008a750:	020c      	movi.n	a2, 0
4008a752:	f01d      	retw.n

4008a754 <multi_heap_internal_lock>:
4008a754:	004136        	entry	a1, 32
4008a757:	02a8      	l32i.n	a10, a2, 0
4008a759:	1a8c      	beqz.n	a10, 4008a75e <multi_heap_internal_lock+0xa>
4008a75b:	fe3365        	call8	40088a90 <vTaskEnterCritical>
4008a75e:	f01d      	retw.n

4008a760 <multi_heap_internal_unlock>:
4008a760:	004136        	entry	a1, 32
4008a763:	02a8      	l32i.n	a10, a2, 0
4008a765:	1a8c      	beqz.n	a10, 4008a76a <multi_heap_internal_unlock+0xa>
4008a767:	fe46a5        	call8	40088bd0 <vTaskExitCritical>
4008a76a:	f01d      	retw.n

4008a76c <multi_heap_malloc_impl>:
4008a76c:	004136        	entry	a1, 32
4008a76f:	03c332        	addi	a3, a3, 3
4008a772:	fcaf42        	movi	a4, -4
4008a775:	103340        	and	a3, a3, a4
4008a778:	140c      	movi.n	a4, 1
4008a77a:	090c      	movi.n	a9, 0
4008a77c:	098d      	mov.n	a8, a9
4008a77e:	838430        	moveqz	a8, a4, a3
4008a781:	934920        	movnez	a4, a9, a2
4008a784:	204480        	or	a4, a4, a8
4008a787:	021497        	beq	a4, a9, 4008a78d <multi_heap_malloc_impl+0x21>
4008a78a:	003e86        	j	4008a888 <multi_heap_malloc_impl+0x11c>
4008a78d:	02a8      	l32i.n	a10, a2, 0
4008a78f:	021a97        	beq	a10, a9, 4008a795 <multi_heap_malloc_impl+0x29>
4008a792:	fe2fe5        	call8	40088a90 <vTaskEnterCritical>
4008a795:	1248      	l32i.n	a4, a2, 4
4008a797:	0db437        	bgeu	a4, a3, 4008a7a8 <multi_heap_malloc_impl+0x3c>
4008a79a:	0228      	l32i.n	a2, a2, 0
4008a79c:	0ea216        	beqz	a2, 4008a88a <multi_heap_malloc_impl+0x11e>
4008a79f:	02ad      	mov.n	a10, a2
4008a7a1:	fe42e5        	call8	40088bd0 <vTaskExitCritical>
4008a7a4:	020c      	movi.n	a2, 0
4008a7a6:	f01d      	retw.n
4008a7a8:	10c2a2        	addi	a10, a2, 16
4008a7ab:	5298      	l32i.n	a9, a2, 20
4008a7ad:	fe7c      	movi.n	a14, -1
4008a7af:	0d0c      	movi.n	a13, 0
4008a7b1:	0d4d      	mov.n	a4, a13
4008a7b3:	001846        	j	4008a818 <multi_heap_malloc_impl+0xac>
4008a7b6:	04cac2        	addi	a12, a10, 4
4008a7b9:	0e3a97        	bltu	a10, a9, 4008a7cb <multi_heap_malloc_impl+0x5f>
4008a7bc:	afa1b2        	movi	a11, 0x1af
4008a7bf:	d8c6a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a7c2:	d73581        	l32r	a8, 40080498 <_init_end+0x98>
4008a7c5:	0008e0        	callx8	a8
4008a7c8:	00ba25        	call8	4008b36c <abort>
4008a7cb:	0029b2        	l32i	a11, a9, 0
4008a7ce:	10eb07        	bbsi	a11, 0, 4008a7e2 <multi_heap_malloc_impl+0x76>
4008a7d1:	09cd      	mov.n	a12, a9
4008a7d3:	b0a1b2        	movi	a11, 0x1b0
4008a7d6:	d8c0a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a7d9:	d72f81        	l32r	a8, 40080498 <_init_end+0x98>
4008a7dc:	0008e0        	callx8	a8
4008a7df:	00b8e5        	call8	4008b36c <abort>
4008a7e2:	c87c      	movi.n	a8, -4
4008a7e4:	10cb80        	and	a12, a11, a8
4008a7e7:	6c8c      	beqz.n	a12, 4008a7f1 <multi_heap_malloc_impl+0x85>
4008a7e9:	c0cc90        	sub	a12, a12, a9
4008a7ec:	cc8a      	add.n	a12, a12, a8
4008a7ee:	000046        	j	4008a7f3 <multi_heap_malloc_impl+0x87>
4008a7f1:	0c0c      	movi.n	a12, 0
4008a7f3:	01a082        	movi	a8, 1
4008a7f6:	02bc37        	bgeu	a12, a3, 4008a7fc <multi_heap_malloc_impl+0x90>
4008a7f9:	00a082        	movi	a8, 0
4008a7fc:	748080        	extui	a8, a8, 0, 8
4008a7ff:	01a0b2        	movi	a11, 1
4008a802:	023ce7        	bltu	a12, a14, 4008a808 <multi_heap_malloc_impl+0x9c>
4008a805:	00a0b2        	movi	a11, 0
4008a808:	0808b7        	bnone	a8, a11, 4008a814 <multi_heap_malloc_impl+0xa8>
4008a80b:	0f13c7        	beq	a3, a12, 4008a81e <multi_heap_malloc_impl+0xb2>
4008a80e:	0ced      	mov.n	a14, a12
4008a810:	0add      	mov.n	a13, a10
4008a812:	094d      	mov.n	a4, a9
4008a814:	09ad      	mov.n	a10, a9
4008a816:	1998      	l32i.n	a9, a9, 4
4008a818:	f9a956        	bnez	a9, 4008a7b6 <multi_heap_malloc_impl+0x4a>
4008a81b:	000146        	j	4008a824 <multi_heap_malloc_impl+0xb8>
4008a81e:	20daa0        	or	a13, a10, a10
4008a821:	204990        	or	a4, a9, a9
4008a824:	00d456        	bnez	a4, 4008a835 <multi_heap_malloc_impl+0xc9>
4008a827:	0228      	l32i.n	a2, a2, 0
4008a829:	05d216        	beqz	a2, 4008a88a <multi_heap_malloc_impl+0x11e>
4008a82c:	02ad      	mov.n	a10, a2
4008a82e:	fe3a25        	call8	40088bd0 <vTaskExitCritical>
4008a831:	020c      	movi.n	a2, 0
4008a833:	f01d      	retw.n
4008a835:	1488      	l32i.n	a8, a4, 4
4008a837:	1d89      	s32i.n	a8, a13, 4
4008a839:	f03d      	nop.n
4008a83b:	f03d      	nop.n
4008a83d:	f03d      	nop.n
4008a83f:	f03d      	nop.n
4008a841:	0488      	l32i.n	a8, a4, 0
4008a843:	e97c      	movi.n	a9, -2
4008a845:	109980        	and	a9, a9, a8
4008a848:	0499      	s32i.n	a9, a4, 0
4008a84a:	c87c      	movi.n	a8, -4
4008a84c:	108980        	and	a8, a9, a8
4008a84f:	788c      	beqz.n	a8, 4008a85a <multi_heap_malloc_impl+0xee>
4008a851:	c08840        	sub	a8, a8, a4
4008a854:	fcc882        	addi	a8, a8, -4
4008a857:	000046        	j	4008a85c <multi_heap_malloc_impl+0xf0>
4008a85a:	080c      	movi.n	a8, 0
4008a85c:	1298      	l32i.n	a9, a2, 4
4008a85e:	c08980        	sub	a8, a9, a8
4008a861:	1289      	s32i.n	a8, a2, 4
4008a863:	03cd      	mov.n	a12, a3
4008a865:	04bd      	mov.n	a11, a4
4008a867:	02ad      	mov.n	a10, a2
4008a869:	ffb5e5        	call8	4008a3c8 <split_if_necessary>
4008a86c:	1238      	l32i.n	a3, a2, 4
4008a86e:	2288      	l32i.n	a8, a2, 8
4008a870:	01b387        	bgeu	a3, a8, 4008a875 <multi_heap_malloc_impl+0x109>
4008a873:	2239      	s32i.n	a3, a2, 8
4008a875:	f03d      	nop.n
4008a877:	f03d      	nop.n
4008a879:	f03d      	nop.n
4008a87b:	f03d      	nop.n
4008a87d:	02a8      	l32i.n	a10, a2, 0
4008a87f:	1a8c      	beqz.n	a10, 4008a884 <multi_heap_malloc_impl+0x118>
4008a881:	fe34e5        	call8	40088bd0 <vTaskExitCritical>
4008a884:	244b      	addi.n	a2, a4, 4
4008a886:	f01d      	retw.n
4008a888:	020c      	movi.n	a2, 0
4008a88a:	f01d      	retw.n

4008a88c <multi_heap_free_impl>:
4008a88c:	004136        	entry	a1, 32
4008a88f:	fcc342        	addi	a4, a3, -4
4008a892:	150c      	movi.n	a5, 1
4008a894:	070c      	movi.n	a7, 0
4008a896:	076d      	mov.n	a6, a7
4008a898:	836520        	moveqz	a6, a5, a2
4008a89b:	935730        	movnez	a5, a7, a3
4008a89e:	205560        	or	a5, a5, a6
4008a8a1:	021577        	beq	a5, a7, 4008a8a7 <multi_heap_free_impl+0x1b>
4008a8a4:	004886        	j	4008a9ca <multi_heap_free_impl+0x13e>
4008a8a7:	02a8      	l32i.n	a10, a2, 0
4008a8a9:	021a77        	beq	a10, a7, 4008a8af <multi_heap_free_impl+0x23>
4008a8ac:	fe1e25        	call8	40088a90 <vTaskEnterCritical>
4008a8af:	04bd      	mov.n	a11, a4
4008a8b1:	02ad      	mov.n	a10, a2
4008a8b3:	ffc665        	call8	4008a518 <assert_valid_block>
4008a8b6:	fcc352        	addi	a5, a3, -4
4008a8b9:	0558      	l32i.n	a5, a5, 0
4008a8bb:	047050        	extui	a7, a5, 0, 1
4008a8be:	046d      	mov.n	a6, a4
4008a8c0:	010716        	beqz	a7, 4008a8d4 <multi_heap_free_impl+0x48>
4008a8c3:	04cd      	mov.n	a12, a4
4008a8c5:	dda1b2        	movi	a11, 0x1dd
4008a8c8:	d884a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8cb:	d6f381        	l32r	a8, 40080498 <_init_end+0x98>
4008a8ce:	0008e0        	callx8	a8
4008a8d1:	00a9a5        	call8	4008b36c <abort>
4008a8d4:	c87c      	movi.n	a8, -4
4008a8d6:	108587        	bany	a5, a8, 4008a8ea <multi_heap_free_impl+0x5e>
4008a8d9:	04cd      	mov.n	a12, a4
4008a8db:	dea1b2        	movi	a11, 0x1de
4008a8de:	d87ea1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8e1:	d6ed81        	l32r	a8, 40080498 <_init_end+0x98>
4008a8e4:	0008e0        	callx8	a8
4008a8e7:	00a865        	call8	4008b36c <abort>
4008a8ea:	10c252        	addi	a5, a2, 16
4008a8ed:	109547        	bne	a5, a4, 4008a901 <multi_heap_free_impl+0x75>
4008a8f0:	04cd      	mov.n	a12, a4
4008a8f2:	dfa1b2        	movi	a11, 0x1df
4008a8f5:	d878a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a8f8:	d6e881        	l32r	a8, 40080498 <_init_end+0x98>
4008a8fb:	0008e0        	callx8	a8
4008a8fe:	00a6e5        	call8	4008b36c <abort>
4008a901:	0488      	l32i.n	a8, a4, 0
4008a903:	c57c      	movi.n	a5, -4
4008a905:	105850        	and	a5, a8, a5
4008a908:	059c      	beqz.n	a5, 4008a91c <multi_heap_free_impl+0x90>
4008a90a:	112457        	blt	a4, a5, 4008a91f <multi_heap_free_impl+0x93>
4008a90d:	d875d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a910:	d876c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a913:	7ca0b2        	movi	a11, 124
4008a916:	d86fa1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a919:	505be5        	call8	400daed8 <__assert_func>
4008a91c:	00a052        	movi	a5, 0
4008a91f:	20b440        	or	a11, a4, a4
4008a922:	20a220        	or	a10, a2, a2
4008a925:	ffa3a5        	call8	4008a360 <get_prev_free_block>
4008a928:	1a88      	l32i.n	a8, a10, 4
4008a92a:	688c      	beqz.n	a8, 4008a934 <multi_heap_free_impl+0xa8>
4008a92c:	06b487        	bgeu	a4, a8, 4008a936 <multi_heap_free_impl+0xaa>
4008a92f:	170c      	movi.n	a7, 1
4008a931:	000046        	j	4008a936 <multi_heap_free_impl+0xaa>
4008a934:	170c      	movi.n	a7, 1
4008a936:	04cac2        	addi	a12, a10, 4
4008a939:	00e756        	bnez	a7, 4008a94b <multi_heap_free_impl+0xbf>
4008a93c:	e6a1b2        	movi	a11, 0x1e6
4008a93f:	d866a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008a942:	d6d581        	l32r	a8, 40080498 <_init_end+0x98>
4008a945:	0008e0        	callx8	a8
4008a948:	00a225        	call8	4008b36c <abort>
4008a94b:	006382        	s32i	a8, a3, 0
4008a94e:	fcc332        	addi	a3, a3, -4
4008a951:	1a49      	s32i.n	a4, a10, 4
4008a953:	f03d      	nop.n
4008a955:	f03d      	nop.n
4008a957:	f03d      	nop.n
4008a959:	f03d      	nop.n
4008a95b:	0378      	l32i.n	a7, a3, 0
4008a95d:	180c      	movi.n	a8, 1
4008a95f:	207870        	or	a7, a8, a7
4008a962:	0379      	s32i.n	a7, a3, 0
4008a964:	c37c      	movi.n	a3, -4
4008a966:	103730        	and	a3, a7, a3
4008a969:	738c      	beqz.n	a3, 4008a974 <multi_heap_free_impl+0xe8>
4008a96b:	c06360        	sub	a6, a3, a6
4008a96e:	fcc662        	addi	a6, a6, -4
4008a971:	000086        	j	4008a977 <multi_heap_free_impl+0xeb>
4008a974:	00a062        	movi	a6, 0
4008a977:	012232        	l32i	a3, a2, 4
4008a97a:	806360        	add	a6, a3, a6
4008a97d:	1269      	s32i.n	a6, a2, 4
4008a97f:	f03d      	nop.n
4008a981:	f03d      	nop.n
4008a983:	f03d      	nop.n
4008a985:	f03d      	nop.n
4008a987:	0a68      	l32i.n	a6, a10, 0
4008a989:	c37c      	movi.n	a3, -4
4008a98b:	103630        	and	a3, a6, a3
4008a98e:	039c      	beqz.n	a3, 4008a9a2 <multi_heap_free_impl+0x116>
4008a990:	112a37        	blt	a10, a3, 4008a9a5 <multi_heap_free_impl+0x119>
4008a993:	d854d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008a996:	d854c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008a999:	7ca0b2        	movi	a11, 124
4008a99c:	d84ea1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a99f:	5053a5        	call8	400daed8 <__assert_func>
4008a9a2:	00a032        	movi	a3, 0
4008a9a5:	0b9437        	bne	a4, a3, 4008a9b4 <multi_heap_free_impl+0x128>
4008a9a8:	04cd      	mov.n	a12, a4
4008a9aa:	20baa0        	or	a11, a10, a10
4008a9ad:	02ad      	mov.n	a10, a2
4008a9af:	ffc1a5        	call8	4008a5c8 <merge_adjacent>
4008a9b2:	0a4d      	mov.n	a4, a10
4008a9b4:	0538      	l32i.n	a3, a5, 0
4008a9b6:	096307        	bbci	a3, 0, 4008a9c3 <multi_heap_free_impl+0x137>
4008a9b9:	05cd      	mov.n	a12, a5
4008a9bb:	20b440        	or	a11, a4, a4
4008a9be:	02ad      	mov.n	a10, a2
4008a9c0:	ffc065        	call8	4008a5c8 <merge_adjacent>
4008a9c3:	02a8      	l32i.n	a10, a2, 0
4008a9c5:	1a8c      	beqz.n	a10, 4008a9ca <multi_heap_free_impl+0x13e>
4008a9c7:	fe20a5        	call8	40088bd0 <vTaskExitCritical>
4008a9ca:	f01d      	retw.n

4008a9cc <multi_heap_realloc_impl>:
4008a9cc:	006136        	entry	a1, 48
4008a9cf:	fcc362        	addi	a6, a3, -4
4008a9d2:	03c442        	addi	a4, a4, 3
4008a9d5:	fcaf52        	movi	a5, -4
4008a9d8:	104450        	and	a4, a4, a5
4008a9db:	00e256        	bnez	a2, 4008a9ed <multi_heap_realloc_impl+0x21>
4008a9de:	d845d1        	l32r	a13, 40080af4 <_init_end+0x6f4>
4008a9e1:	d845c1        	l32r	a12, 40080af8 <_init_end+0x6f8>
4008a9e4:	03a2b2        	movi	a11, 0x203
4008a9e7:	d83ba1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008a9ea:	504ee5        	call8	400daed8 <__assert_func>
4008a9ed:	00d356        	bnez	a3, 4008a9fe <multi_heap_realloc_impl+0x32>
4008a9f0:	20b440        	or	a11, a4, a4
4008a9f3:	20a220        	or	a10, a2, a2
4008a9f6:	ffd765        	call8	4008a76c <multi_heap_malloc_impl>
4008a9f9:	0a2d      	mov.n	a2, a10
4008a9fb:	f01d      	retw.n
4008a9fd:	b66000        	lsi	f0, a0, 0x2d8
4008aa00:	02ad20        	andb	b10, b13, b2
4008aa03:	ffb165        	call8	4008a518 <assert_valid_block>
4008aa06:	fcc352        	addi	a5, a3, -4
4008aa09:	0558      	l32i.n	a5, a5, 0
4008aa0b:	067d      	mov.n	a7, a6
4008aa0d:	106507        	bbci	a5, 0, 4008aa21 <multi_heap_realloc_impl+0x55>
4008aa10:	06cd      	mov.n	a12, a6
4008aa12:	0ba2b2        	movi	a11, 0x20b
4008aa15:	d830a1        	l32r	a10, 40080ad8 <_init_end+0x6d8>
4008aa18:	d6a081        	l32r	a8, 40080498 <_init_end+0x98>
4008aa1b:	0008e0        	callx8	a8
4008aa1e:	0094e5        	call8	4008b36c <abort>
4008aa21:	b4cc      	bnez.n	a4, 4008aa30 <multi_heap_realloc_impl+0x64>
4008aa23:	03bd      	mov.n	a11, a3
4008aa25:	02ad      	mov.n	a10, a2
4008aa27:	ffe665        	call8	4008a88c <multi_heap_free_impl>
4008aa2a:	020c      	movi.n	a2, 0
4008aa2c:	f01d      	retw.n
4008aa2e:	160000        	lsi	f0, a0, 88
4008aa31:	a22082        	l32i	a8, a0, 0x288
4008aa34:	160022        	l8ui	a2, a0, 22
4008aa37:	002a      	add.n	a0, a0, a2
4008aa39:	fe0565        	call8	40088a90 <vTaskEnterCritical>
4008aa3c:	fcc352        	addi	a5, a3, -4
4008aa3f:	002582        	l32i	a8, a5, 0
4008aa42:	c57c      	movi.n	a5, -4
4008aa44:	105850        	and	a5, a8, a5
4008aa47:	758c      	beqz.n	a5, 4008aa52 <multi_heap_realloc_impl+0x86>
4008aa49:	c08570        	sub	a8, a5, a7
4008aa4c:	fcc882        	addi	a8, a8, -4
4008aa4f:	000086        	j	4008aa55 <multi_heap_realloc_impl+0x89>
4008aa52:	00a082        	movi	a8, 0
4008aa55:	113847        	bltu	a8, a4, 4008aa6a <multi_heap_realloc_impl+0x9e>
4008aa58:	00a0d2        	movi	a13, 0
4008aa5b:	20c440        	or	a12, a4, a4
4008aa5e:	06bd      	mov.n	a11, a6
4008aa60:	02ad      	mov.n	a10, a2
4008aa62:	ff9665        	call8	4008a3c8 <split_if_necessary>
4008aa65:	035d      	mov.n	a5, a3
4008aa67:	000a06        	j	4008aa93 <multi_heap_realloc_impl+0xc7>
4008aa6a:	1288      	l32i.n	a8, a2, 4
4008aa6c:	858c      	beqz.n	a5, 4008aa78 <multi_heap_realloc_impl+0xac>
4008aa6e:	c05570        	sub	a5, a5, a7
4008aa71:	fcc552        	addi	a5, a5, -4
4008aa74:	0000c6        	j	4008aa7b <multi_heap_realloc_impl+0xaf>
4008aa77:	a05200        	addx4	a5, a2, a0
4008aa7a:	545000        	extui	a5, a0, 0, 6
4008aa7d:	b857c0        	lsi	f12, a7, 0x2e0
4008aa80:	0f          	.byte 0xf
4008aa81:	002222        	l32i	a2, a2, 0
4008aa84:	1ba216        	beqz	a2, 4008ac42 <multi_heap_realloc_impl+0x276>
4008aa87:	20a220        	or	a10, a2, a2
4008aa8a:	fe1465        	call8	40088bd0 <vTaskExitCritical>
4008aa8d:	020c      	movi.n	a2, 0
4008aa8f:	f01d      	retw.n
4008aa91:	050c      	movi.n	a5, 0
4008aa93:	152556        	bnez	a5, 4008abe9 <multi_heap_realloc_impl+0x21d>
4008aa96:	fcc382        	addi	a8, a3, -4
4008aa99:	0898      	l32i.n	a9, a8, 0
4008aa9b:	c87c      	movi.n	a8, -4
4008aa9d:	108980        	and	a8, a9, a8
4008aaa0:	a88c      	beqz.n	a8, 4008aaae <multi_heap_realloc_impl+0xe2>
4008aaa2:	c08870        	sub	a8, a8, a7
4008aaa5:	fcc882        	addi	a8, a8, -4
4008aaa8:	3189      	s32i.n	a8, a1, 12
4008aaaa:	000186        	j	4008aab4 <multi_heap_realloc_impl+0xe8>
4008aaad:	a08200        	addx4	a8, a2, a0
4008aab0:	618200        	lsi	f0, a2, 0x184
4008aab3:	f03d03        	lsi	f0, a13, 0x3c0
4008aab6:	f03d      	nop.n
4008aab8:	f03d      	nop.n
4008aaba:	f03d      	nop.n
4008aabc:	002692        	l32i	a9, a6, 0
4008aabf:	c87c      	movi.n	a8, -4
4008aac1:	108980        	and	a8, a9, a8
4008aac4:	689c      	beqz.n	a8, 4008aade <multi_heap_realloc_impl+0x112>
4008aac6:	0e2687        	blt	a6, a8, 4008aad8 <multi_heap_realloc_impl+0x10c>
4008aac9:	d806d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008aacc:	d807c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008aacf:	7ca0b2        	movi	a11, 124
4008aad2:	d800a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008aad5:	504025        	call8	400daed8 <__assert_func>
4008aad8:	2189      	s32i.n	a8, a1, 8
4008aada:	000186        	j	4008aae4 <multi_heap_realloc_impl+0x118>
4008aadd:	a09200        	addx4	a9, a2, a0
4008aae0:	619200        	lsi	f0, a2, 0x184
4008aae3:	06bd02        	l32ai	a0, a13, 24
4008aae6:	02ad      	mov.n	a10, a2
4008aae8:	ff8765        	call8	4008a360 <get_prev_free_block>
4008aaeb:	01a9      	s32i.n	a10, a1, 0
4008aaed:	f03d      	nop.n
4008aaef:	f03d      	nop.n
4008aaf1:	f03d      	nop.n
4008aaf3:	f03d      	nop.n
4008aaf5:	0a98      	l32i.n	a9, a10, 0
4008aaf7:	fcaf82        	movi	a8, -4
4008aafa:	108980        	and	a8, a9, a8
4008aafd:	011816        	beqz	a8, 4008ab12 <multi_heap_realloc_impl+0x146>
4008ab00:	102a87        	blt	a10, a8, 4008ab14 <multi_heap_realloc_impl+0x148>
4008ab03:	d7f8d1        	l32r	a13, 40080ae4 <_init_end+0x6e4>
4008ab06:	d7f8c1        	l32r	a12, 40080ae8 <_init_end+0x6e8>
4008ab09:	7ca0b2        	movi	a11, 124
4008ab0c:	d7f2a1        	l32r	a10, 40080ad4 <_init_end+0x6d4>
4008ab0f:	503ca5        	call8	400daed8 <__assert_func>
4008ab12:	080c      	movi.n	a8, 0
4008ab14:	209687        	bne	a6, a8, 4008ab38 <multi_heap_realloc_impl+0x16c>
4008ab17:	0188      	l32i.n	a8, a1, 0
4008ab19:	0898      	l32i.n	a9, a8, 0
4008ab1b:	c87c      	movi.n	a8, -4
4008ab1d:	108980        	and	a8, a9, a8
4008ab20:	c88c      	beqz.n	a8, 4008ab30 <multi_heap_realloc_impl+0x164>
4008ab22:	0198      	l32i.n	a9, a1, 0
4008ab24:	c08890        	sub	a8, a8, a9
4008ab27:	fcc882        	addi	a8, a8, -4
4008ab2a:	1189      	s32i.n	a8, a1, 4
4008ab2c:	000306        	j	4008ab3c <multi_heap_realloc_impl+0x170>
4008ab2f:	080c00        	lsx	f0, a12, a0
4008ab32:	1189      	s32i.n	a8, a1, 4
4008ab34:	000106        	j	4008ab3c <multi_heap_realloc_impl+0x170>
4008ab37:	090c00        	l32e	a0, a12, -64
4008ab3a:	1199      	s32i.n	a9, a1, 4
4008ab3c:	f03d      	nop.n
4008ab3e:	f03d      	nop.n
4008ab40:	f03d      	nop.n
4008ab42:	f03d      	nop.n
4008ab44:	2188      	l32i.n	a8, a1, 8
4008ab46:	0898      	l32i.n	a9, a8, 0
4008ab48:	406907        	bbci	a9, 0, 4008ab8c <multi_heap_realloc_impl+0x1c0>
4008ab4b:	fcc382        	addi	a8, a3, -4
4008ab4e:	08a8      	l32i.n	a10, a8, 0
4008ab50:	c87c      	movi.n	a8, -4
4008ab52:	108a80        	and	a8, a10, a8
4008ab55:	788c      	beqz.n	a8, 4008ab60 <multi_heap_realloc_impl+0x194>
4008ab57:	c07870        	sub	a7, a8, a7
4008ab5a:	fcc782        	addi	a8, a7, -4
4008ab5d:	000046        	j	4008ab62 <multi_heap_realloc_impl+0x196>
4008ab60:	080c      	movi.n	a8, 0
4008ab62:	c77c      	movi.n	a7, -4
4008ab64:	107970        	and	a7, a9, a7
4008ab67:	b78c      	beqz.n	a7, 4008ab76 <multi_heap_realloc_impl+0x1aa>
4008ab69:	2198      	l32i.n	a9, a1, 8
4008ab6b:	c07790        	sub	a7, a7, a9
4008ab6e:	fcc772        	addi	a7, a7, -4
4008ab71:	0000c6        	j	4008ab78 <multi_heap_realloc_impl+0x1ac>
4008ab74:	0c0000        	lsi	f0, a0, 48
4008ab77:	778a07        	bany	a10, a0, 4008abf2 <multi_heap_realloc_impl+0x226>
4008ab7a:	1188      	l32i.n	a8, a1, 4
4008ab7c:	787a      	add.n	a7, a8, a7
4008ab7e:	0a3747        	bltu	a7, a4, 4008ab8c <multi_heap_realloc_impl+0x1c0>
4008ab81:	21c8      	l32i.n	a12, a1, 8
4008ab83:	06bd      	mov.n	a11, a6
4008ab85:	02ad      	mov.n	a10, a2
4008ab87:	ffa425        	call8	4008a5c8 <merge_adjacent>
4008ab8a:	0a6d      	mov.n	a6, a10
4008ab8c:	1198      	l32i.n	a9, a1, 4
4008ab8e:	49ac      	beqz.n	a9, 4008abb6 <multi_heap_realloc_impl+0x1ea>
4008ab90:	0688      	l32i.n	a8, a6, 0
4008ab92:	c77c      	movi.n	a7, -4
4008ab94:	107870        	and	a7, a8, a7
4008ab97:	778c      	beqz.n	a7, 4008aba2 <multi_heap_realloc_impl+0x1d6>
4008ab99:	c07760        	sub	a7, a7, a6
4008ab9c:	fcc772        	addi	a7, a7, -4
4008ab9f:	000046        	j	4008aba4 <multi_heap_realloc_impl+0x1d8>
4008aba2:	070c      	movi.n	a7, 0
4008aba4:	1188      	l32i.n	a8, a1, 4
4008aba6:	787a      	add.n	a7, a8, a7
4008aba8:	0a3747        	bltu	a7, a4, 4008abb6 <multi_heap_realloc_impl+0x1ea>
4008abab:	06cd      	mov.n	a12, a6
4008abad:	01b8      	l32i.n	a11, a1, 0
4008abaf:	02ad      	mov.n	a10, a2
4008abb1:	ffa165        	call8	4008a5c8 <merge_adjacent>
4008abb4:	0a6d      	mov.n	a6, a10
4008abb6:	0688      	l32i.n	a8, a6, 0
4008abb8:	c77c      	movi.n	a7, -4
4008abba:	107870        	and	a7, a8, a7
4008abbd:	878c      	beqz.n	a7, 4008abc9 <multi_heap_realloc_impl+0x1fd>
4008abbf:	c07760        	sub	a7, a7, a6
4008abc2:	fcc772        	addi	a7, a7, -4
4008abc5:	0000c6        	j	4008abcc <multi_heap_realloc_impl+0x200>
4008abc8:	a07200        	addx4	a7, a2, a0
4008abcb:	374700        	lsi	f0, a7, 220
4008abce:	5219      	s32i.n	a1, a2, 20
4008abd0:	c804c6        	j	4007cbe7 <__udivmoddi4+0x17ff3>
4008abd3:	03bd31        	l32r	a3, 4004bac8 <lld_pdu_pack+0xfb4>
4008abd6:	05ad      	mov.n	a10, a5
4008abd8:	d72681        	l32r	a8, 40080870 <_init_end+0x470>
4008abdb:	0008e0        	callx8	a8
4008abde:	0d0c      	movi.n	a13, 0
4008abe0:	04cd      	mov.n	a12, a4
4008abe2:	06bd      	mov.n	a11, a6
4008abe4:	02ad      	mov.n	a10, a2
4008abe6:	ff7e25        	call8	4008a3c8 <split_if_necessary>
4008abe9:	35fc      	bnez.n	a5, 4008ac20 <multi_heap_realloc_impl+0x254>
4008abeb:	04bd      	mov.n	a11, a4
4008abed:	02ad      	mov.n	a10, a2
4008abef:	ffb7e5        	call8	4008a76c <multi_heap_malloc_impl>
4008abf2:	0a5d      	mov.n	a5, a10
4008abf4:	8aac      	beqz.n	a10, 4008ac20 <multi_heap_realloc_impl+0x254>
4008abf6:	464b      	addi.n	a4, a6, 4
4008abf8:	0678      	l32i.n	a7, a6, 0
4008abfa:	c37c      	movi.n	a3, -4
4008abfc:	103730        	and	a3, a7, a3
4008abff:	738c      	beqz.n	a3, 4008ac0a <multi_heap_realloc_impl+0x23e>
4008ac01:	c03360        	sub	a3, a3, a6
4008ac04:	fcc3c2        	addi	a12, a3, -4
4008ac07:	000086        	j	4008ac0d <multi_heap_realloc_impl+0x241>
4008ac0a:	00a0c2        	movi	a12, 0
4008ac0d:	20b440        	or	a11, a4, a4
4008ac10:	20a550        	or	a10, a5, a5
4008ac13:	d6cc81        	l32r	a8, 40080744 <_init_end+0x344>
4008ac16:	0008e0        	callx8	a8
4008ac19:	04bd      	mov.n	a11, a4
4008ac1b:	02ad      	mov.n	a10, a2
4008ac1d:	ffc6e5        	call8	4008a88c <multi_heap_free_impl>
4008ac20:	1238      	l32i.n	a3, a2, 4
4008ac22:	2248      	l32i.n	a4, a2, 8
4008ac24:	01b347        	bgeu	a3, a4, 4008ac29 <multi_heap_realloc_impl+0x25d>
4008ac27:	2239      	s32i.n	a3, a2, 8
4008ac29:	f03d      	nop.n
4008ac2b:	f03d      	nop.n
4008ac2d:	f03d      	nop.n
4008ac2f:	f03d      	nop.n
4008ac31:	02a8      	l32i.n	a10, a2, 0
4008ac33:	9a8c      	beqz.n	a10, 4008ac40 <multi_heap_realloc_impl+0x274>
4008ac35:	fdf9a5        	call8	40088bd0 <vTaskExitCritical>
4008ac38:	052d      	mov.n	a2, a5
4008ac3a:	f01d      	retw.n
4008ac3c:	020c      	movi.n	a2, 0
4008ac3e:	f01d      	retw.n
4008ac40:	052d      	mov.n	a2, a5
4008ac42:	f01d      	retw.n

4008ac44 <multi_heap_register_impl>:
4008ac44:	004136        	entry	a1, 32
4008ac47:	823b      	addi.n	a8, a2, 3
4008ac49:	c97c      	movi.n	a9, -4
4008ac4b:	108890        	and	a8, a8, a9
4008ac4e:	323a      	add.n	a3, a2, a3
4008ac50:	103390        	and	a3, a3, a9
4008ac53:	c09380        	sub	a9, a3, a8
4008ac56:	120c      	movi.n	a2, 1
4008ac58:	013387        	bltu	a3, a8, 4008ac5d <multi_heap_register_impl+0x19>
4008ac5b:	020c      	movi.n	a2, 0
4008ac5d:	74a020        	extui	a10, a2, 0, 8
4008ac60:	120c      	movi.n	a2, 1
4008ac62:	7b2c      	movi.n	a11, 39
4008ac64:	01bb97        	bgeu	a11, a9, 4008ac69 <multi_heap_register_impl+0x25>
4008ac67:	020c      	movi.n	a2, 0
4008ac69:	742020        	extui	a2, a2, 0, 8
4008ac6c:	202a20        	or	a2, a10, a2
4008ac6f:	32fc      	bnez.n	a2, 4008aca6 <multi_heap_register_impl+0x62>
4008ac71:	0b0c      	movi.n	a11, 0
4008ac73:	08b9      	s32i.n	a11, a8, 0
4008ac75:	f8c332        	addi	a3, a3, -8
4008ac78:	3839      	s32i.n	a3, a8, 12
4008ac7a:	18c8a2        	addi	a10, a8, 24
4008ac7d:	120c      	movi.n	a2, 1
4008ac7f:	20c320        	or	a12, a3, a2
4008ac82:	68c9      	s32i.n	a12, a8, 24
4008ac84:	7839      	s32i.n	a3, a8, 28
4008ac86:	0329      	s32i.n	a2, a3, 0
4008ac88:	f03d      	nop.n
4008ac8a:	f03d      	nop.n
4008ac8c:	f03d      	nop.n
4008ac8e:	f03d      	nop.n
4008ac90:	3838      	l32i.n	a3, a8, 12
4008ac92:	13b9      	s32i.n	a11, a3, 4
4008ac94:	202a20        	or	a2, a10, a2
4008ac97:	4829      	s32i.n	a2, a8, 16
4008ac99:	58a9      	s32i.n	a10, a8, 20
4008ac9b:	dcc992        	addi	a9, a9, -36
4008ac9e:	1899      	s32i.n	a9, a8, 4
4008aca0:	2899      	s32i.n	a9, a8, 8
4008aca2:	082d      	mov.n	a2, a8
4008aca4:	f01d      	retw.n
4008aca6:	020c      	movi.n	a2, 0
4008aca8:	f01d      	retw.n
	...

4008acac <multi_heap_set_lock>:
4008acac:	004136        	entry	a1, 32
4008acaf:	0239      	s32i.n	a3, a2, 0
4008acb1:	f01d      	retw.n
	...

4008acb4 <poison_allocated_region>:
4008acb4:	006136        	entry	a1, 48
4008acb7:	029d      	mov.n	a9, a2
4008acb9:	228b      	addi.n	a2, a2, 8
4008acbb:	823a      	add.n	a8, a2, a3
4008acbd:	1939      	s32i.n	a3, a9, 4
4008acbf:	f03d      	nop.n
4008acc1:	f03d      	nop.n
4008acc3:	f03d      	nop.n
4008acc5:	f03d      	nop.n
4008acc7:	d78d31        	l32r	a3, 40080afc <_init_end+0x6fc>
4008acca:	0939      	s32i.n	a3, a9, 0
4008accc:	f03d      	nop.n
4008acce:	f03d      	nop.n
4008acd0:	f03d      	nop.n
4008acd2:	f03d      	nop.n
4008acd4:	d78b31        	l32r	a3, 40080b00 <_init_end+0x700>
4008acd7:	3139      	s32i.n	a3, a1, 12
4008acd9:	143080        	extui	a3, a8, 0, 2
4008acdc:	c3cc      	bnez.n	a3, 4008acec <poison_allocated_region+0x38>
4008acde:	f03d      	nop.n
4008ace0:	f03d      	nop.n
4008ace2:	f03d      	nop.n
4008ace4:	d78731        	l32r	a3, 40080b00 <_init_end+0x700>
4008ace7:	0839      	s32i.n	a3, a8, 0
4008ace9:	f01d      	retw.n
4008aceb:	019200        	slli	a9, a2, 32
4008acee:	320c      	movi.n	a2, 3
4008acf0:	920d01        	l32r	a0, 4006f524 <__udivmoddi4+0xa930>
4008acf3:	0048      	l32i.n	a4, a0, 0
4008acf5:	0020c0        	memw
4008acf8:	f03d      	nop.n
4008acfa:	f03d      	nop.n
4008acfc:	f03d      	nop.n
4008acfe:	f03d      	nop.n
4008ad00:	0e0192        	l8ui	a9, a1, 14
4008ad03:	014832        	s8i	a3, a8, 1
4008ad06:	0020c0        	memw
4008ad09:	f03d      	nop.n
4008ad0b:	f03d      	nop.n
4008ad0d:	f03d      	nop.n
4008ad0f:	f03d      	nop.n
4008ad11:	0f0132        	l8ui	a3, a1, 15
4008ad14:	024892        	s8i	a9, a8, 2
4008ad17:	034832        	s8i	a3, a8, 3
4008ad1a:	0020c0        	memw
4008ad1d:	f01d      	retw.n
	...

4008ad20 <verify_allocated_region>:
4008ad20:	006136        	entry	a1, 48
4008ad23:	f8c2b2        	addi	a11, a2, -8
4008ad26:	1b88      	l32i.n	a8, a11, 4
4008ad28:	228a      	add.n	a2, a2, a8
4008ad2a:	0bd8      	l32i.n	a13, a11, 0
4008ad2c:	d77481        	l32r	a8, 40080afc <_init_end+0x6fc>
4008ad2f:	111d87        	beq	a13, a8, 4008ad44 <verify_allocated_region+0x24>
4008ad32:	06e316        	beqz	a3, 4008ada4 <verify_allocated_region+0x84>
4008ad35:	08cd      	mov.n	a12, a8
4008ad37:	d773a1        	l32r	a10, 40080b04 <_init_end+0x704>
4008ad3a:	d5d781        	l32r	a8, 40080498 <_init_end+0x98>
4008ad3d:	0008e0        	callx8	a8
4008ad40:	020c      	movi.n	a2, 0
4008ad42:	f01d      	retw.n
4008ad44:	148020        	extui	a8, a2, 0, 2
4008ad47:	58cc      	bnez.n	a8, 4008ad50 <verify_allocated_region+0x30>
4008ad49:	0288      	l32i.n	a8, a2, 0
4008ad4b:	3189      	s32i.n	a8, a1, 12
4008ad4d:	000c06        	j	4008ad81 <verify_allocated_region+0x61>
4008ad50:	000292        	l8ui	a9, a2, 0
4008ad53:	010282        	l8ui	a8, a2, 1
4008ad56:	0c4192        	s8i	a9, a1, 12
4008ad59:	0020c0        	memw
4008ad5c:	f03d      	nop.n
4008ad5e:	f03d      	nop.n
4008ad60:	f03d      	nop.n
4008ad62:	f03d      	nop.n
4008ad64:	020292        	l8ui	a9, a2, 2
4008ad67:	0d4182        	s8i	a8, a1, 13
4008ad6a:	0020c0        	memw
4008ad6d:	f03d      	nop.n
4008ad6f:	f03d      	nop.n
4008ad71:	f03d      	nop.n
4008ad73:	f03d      	nop.n
4008ad75:	030282        	l8ui	a8, a2, 3
4008ad78:	0e4192        	s8i	a9, a1, 14
4008ad7b:	0f4182        	s8i	a8, a1, 15
4008ad7e:	0020c0        	memw
4008ad81:	f03d      	nop.n
4008ad83:	f03d      	nop.n
4008ad85:	f03d      	nop.n
4008ad87:	f03d      	nop.n
4008ad89:	0321d2        	l32i	a13, a1, 12
4008ad8c:	d75d81        	l32r	a8, 40080b00 <_init_end+0x700>
4008ad8f:	151d87        	beq	a13, a8, 4008ada8 <verify_allocated_region+0x88>
4008ad92:	016316        	beqz	a3, 4008adac <verify_allocated_region+0x8c>
4008ad95:	20c880        	or	a12, a8, a8
4008ad98:	02bd      	mov.n	a11, a2
4008ad9a:	d75ba1        	l32r	a10, 40080b08 <_init_end+0x708>
4008ad9d:	513f25        	call8	400dc190 <printf>
4008ada0:	020c      	movi.n	a2, 0
4008ada2:	f01d      	retw.n
4008ada4:	020c      	movi.n	a2, 0
4008ada6:	f01d      	retw.n
4008ada8:	0b2d      	mov.n	a2, a11
4008adaa:	f01d      	retw.n
4008adac:	020c      	movi.n	a2, 0
4008adae:	f01d      	retw.n

4008adb0 <multi_heap_malloc>:
4008adb0:	004136        	entry	a1, 32
4008adb3:	f3af82        	movi	a8, -13
4008adb6:	263837        	bltu	a8, a3, 4008ade0 <multi_heap_malloc+0x30>
4008adb9:	02ad      	mov.n	a10, a2
4008adbb:	ff99a5        	call8	4008a754 <multi_heap_internal_lock>
4008adbe:	b3cb      	addi.n	a11, a3, 12
4008adc0:	02ad      	mov.n	a10, a2
4008adc2:	ff9aa5        	call8	4008a76c <multi_heap_malloc_impl>
4008adc5:	9a8c      	beqz.n	a10, 4008add2 <multi_heap_malloc+0x22>
4008adc7:	03bd      	mov.n	a11, a3
4008adc9:	ffeea5        	call8	4008acb4 <poison_allocated_region>
4008adcc:	0a3d      	mov.n	a3, a10
4008adce:	0000c6        	j	4008add5 <multi_heap_malloc+0x25>
4008add1:	a03200        	addx4	a3, a2, a0
4008add4:	a22000        	muluh	a2, a0, a0
4008add7:	986520        	lsi	f2, a5, 0x260
4008adda:	ff          	.byte 0xff
4008addb:	202330        	or	a2, a3, a3
4008adde:	f01d      	retw.n
4008ade0:	020c      	movi.n	a2, 0
4008ade2:	f01d      	retw.n

4008ade4 <multi_heap_free>:
4008ade4:	004136        	entry	a1, 32
4008ade7:	02b316        	beqz	a3, 4008ae16 <multi_heap_free+0x32>
4008adea:	20a220        	or	a10, a2, a2
4008aded:	ff9665        	call8	4008a754 <multi_heap_internal_lock>
4008adf0:	1b0c      	movi.n	a11, 1
4008adf2:	03ad      	mov.n	a10, a3
4008adf4:	fff2a5        	call8	4008ad20 <verify_allocated_region>
4008adf7:	dacc      	bnez.n	a10, 4008ae08 <multi_heap_free+0x24>
4008adf9:	d744d1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008adfc:	d745c1        	l32r	a12, 40080b10 <_init_end+0x710>
4008adff:	d6a0b2        	movi	a11, 214
4008ae02:	d744a1        	l32r	a10, 40080b14 <_init_end+0x714>
4008ae05:	500d25        	call8	400daed8 <__assert_func>
4008ae08:	20baa0        	or	a11, a10, a10
4008ae0b:	20a220        	or	a10, a2, a2
4008ae0e:	ffa7e5        	call8	4008a88c <multi_heap_free_impl>
4008ae11:	02ad      	mov.n	a10, a2
4008ae13:	ff94e5        	call8	4008a760 <multi_heap_internal_unlock>
4008ae16:	f01d      	retw.n

4008ae18 <multi_heap_realloc>:
4008ae18:	004136        	entry	a1, 32
4008ae1b:	f3af82        	movi	a8, -13
4008ae1e:	643847        	bltu	a8, a4, 4008ae86 <multi_heap_realloc+0x6e>
4008ae21:	00b356        	bnez	a3, 4008ae30 <multi_heap_realloc+0x18>
4008ae24:	20b440        	or	a11, a4, a4
4008ae27:	02ad      	mov.n	a10, a2
4008ae29:	fff865        	call8	4008adb0 <multi_heap_malloc>
4008ae2c:	0a2d      	mov.n	a2, a10
4008ae2e:	f01d      	retw.n
4008ae30:	00c456        	bnez	a4, 4008ae40 <multi_heap_realloc+0x28>
4008ae33:	20b330        	or	a11, a3, a3
4008ae36:	20a220        	or	a10, a2, a2
4008ae39:	fffaa5        	call8	4008ade4 <multi_heap_free>
4008ae3c:	020c      	movi.n	a2, 0
4008ae3e:	f01d      	retw.n
4008ae40:	01a0b2        	movi	a11, 1
4008ae43:	20a330        	or	a10, a3, a3
4008ae46:	ffeda5        	call8	4008ad20 <verify_allocated_region>
4008ae49:	0a3d      	mov.n	a3, a10
4008ae4b:	dacc      	bnez.n	a10, 4008ae5c <multi_heap_realloc+0x44>
4008ae4d:	d72fd1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008ae50:	d732c1        	l32r	a12, 40080b18 <_init_end+0x718>
4008ae53:	f5a0b2        	movi	a11, 245
4008ae56:	d72fa1        	l32r	a10, 40080b14 <_init_end+0x714>
4008ae59:	5007e5        	call8	400daed8 <__assert_func>
4008ae5c:	20a220        	or	a10, a2, a2
4008ae5f:	ff8f65        	call8	4008a754 <multi_heap_internal_lock>
4008ae62:	c4cb      	addi.n	a12, a4, 12
4008ae64:	03bd      	mov.n	a11, a3
4008ae66:	02ad      	mov.n	a10, a2
4008ae68:	ffb625        	call8	4008a9cc <multi_heap_realloc_impl>
4008ae6b:	9a8c      	beqz.n	a10, 4008ae78 <multi_heap_realloc+0x60>
4008ae6d:	04bd      	mov.n	a11, a4
4008ae6f:	ffe465        	call8	4008acb4 <poison_allocated_region>
4008ae72:	0a4d      	mov.n	a4, a10
4008ae74:	0000c6        	j	4008ae7b <multi_heap_realloc+0x63>
4008ae77:	a04200        	addx4	a4, a2, a0
4008ae7a:	a22000        	muluh	a2, a0, a0
4008ae7d:	8e2520        	f64iter	a2, a5, a2, 0, 0
4008ae80:	ff          	.byte 0xff
4008ae81:	202440        	or	a2, a4, a4
4008ae84:	f01d      	retw.n
4008ae86:	020c      	movi.n	a2, 0
4008ae88:	f01d      	retw.n
	...

4008ae8c <multi_heap_get_allocated_size>:
4008ae8c:	004136        	entry	a1, 32
4008ae8f:	01a0b2        	movi	a11, 1
4008ae92:	20a330        	or	a10, a3, a3
4008ae95:	ffe8a5        	call8	4008ad20 <verify_allocated_region>
4008ae98:	00ea56        	bnez	a10, 4008aeaa <multi_heap_get_allocated_size+0x1e>
4008ae9b:	d71cd1        	l32r	a13, 40080b0c <_init_end+0x70c>
4008ae9e:	d71fc1        	l32r	a12, 40080b1c <_init_end+0x71c>
4008aea1:	22a1b2        	movi	a11, 0x122
4008aea4:	d71ca1        	l32r	a10, 40080b14 <_init_end+0x714>
4008aea7:	500325        	call8	400daed8 <__assert_func>
4008aeaa:	20baa0        	or	a11, a10, a10
4008aead:	20a220        	or	a10, a2, a2
4008aeb0:	ff86a5        	call8	4008a71c <multi_heap_get_allocated_size_impl>
4008aeb3:	005a16        	beqz	a10, 4008aebc <multi_heap_get_allocated_size+0x30>
4008aeb6:	f4ca22        	addi	a2, a10, -12
4008aeb9:	f01d      	retw.n
4008aebb:	020c00        	andb	b0, b12, b0
4008aebe:	f01d      	retw.n

4008aec0 <multi_heap_register>:
4008aec0:	004136        	entry	a1, 32
4008aec3:	b28c      	beqz.n	a2, 4008aed2 <multi_heap_register+0x12>
4008aec5:	03cd      	mov.n	a12, a3
4008aec7:	fea0b2        	movi	a11, 254
4008aeca:	02ad      	mov.n	a10, a2
4008aecc:	d57281        	l32r	a8, 40080494 <_init_end+0x94>
4008aecf:	0008e0        	callx8	a8
4008aed2:	20b330        	or	a11, a3, a3
4008aed5:	20a220        	or	a10, a2, a2
4008aed8:	ffd6a5        	call8	4008ac44 <multi_heap_register_impl>
4008aedb:	202aa0        	or	a2, a10, a10
4008aede:	f01d      	retw.n

4008aee0 <panicPutChar>:
4008aee0:	004136        	entry	a1, 32
4008aee3:	d5a381        	l32r	a8, 40080570 <_init_end+0x170>
4008aee6:	0020c0        	memw
4008aee9:	0888      	l32i.n	a8, a8, 0
4008aeeb:	758080        	extui	a8, a8, 16, 8
4008aeee:	7da092        	movi	a9, 125
4008aef1:	ee3987        	bltu	a9, a8, 4008aee3 <panicPutChar+0x3>
4008aef4:	d70b81        	l32r	a8, 40080b20 <_init_end+0x720>
4008aef7:	0020c0        	memw
4008aefa:	0829      	s32i.n	a2, a8, 0
4008aefc:	f01d      	retw.n
	...

4008af00 <panicPutStr>:
4008af00:	004136        	entry	a1, 32
4008af03:	030c      	movi.n	a3, 0
4008af05:	000146        	j	4008af0e <panicPutStr+0xe>
4008af08:	fffd65        	call8	4008aee0 <panicPutChar>
4008af0b:	01c332        	addi	a3, a3, 1
4008af0e:	808230        	add	a8, a2, a3
4008af11:	0008a2        	l8ui	a10, a8, 0
4008af14:	ff0a56        	bnez	a10, 4008af08 <panicPutStr+0x8>
4008af17:	000090        	retw
	...

4008af1c <panicPutHex>:
4008af1c:	004136        	entry	a1, 32
4008af1f:	030c      	movi.n	a3, 0
4008af21:	000786        	j	4008af43 <panicPutHex+0x27>
4008af24:	35ac20        	extui	a10, a2, 28, 4
4008af27:	980c      	movi.n	a8, 9
4008af29:	0b28a7        	blt	a8, a10, 4008af38 <panicPutHex+0x1c>
4008af2c:	30caa2        	addi	a10, a10, 48
4008af2f:	fffb25        	call8	4008aee0 <panicPutChar>
4008af32:	000206        	j	4008af3e <panicPutHex+0x22>
4008af35:	000000        	ill
4008af38:	57caa2        	addi	a10, a10, 87
4008af3b:	fffa65        	call8	4008aee0 <panicPutChar>
4008af3e:	1122c0        	slli	a2, a2, 4
4008af41:	331b      	addi.n	a3, a3, 1
4008af43:	dd83a6        	blti	a3, 8, 4008af24 <panicPutHex+0x8>
4008af46:	f01d      	retw.n

4008af48 <panicPutDec>:
4008af48:	004136        	entry	a1, 32
4008af4b:	d6f631        	l32r	a3, 40080b24 <_init_end+0x724>
4008af4e:	b23230        	mulsh	a3, a2, a3
4008af51:	213230        	srai	a3, a3, 2
4008af54:	31af20        	srai	a10, a2, 31
4008af57:	c033a0        	sub	a3, a3, a10
4008af5a:	038d      	mov.n	a8, a3
4008af5c:	a03330        	addx4	a3, a3, a3
4008af5f:	11a3f0        	slli	a10, a3, 1
4008af62:	c032a0        	sub	a3, a2, a10
4008af65:	78cc      	bnez.n	a8, 4008af70 <panicPutDec+0x28>
4008af67:	0a2c      	movi.n	a10, 32
4008af69:	fff765        	call8	4008aee0 <panicPutChar>
4008af6c:	000246        	j	4008af79 <panicPutDec+0x31>
4008af6f:	c8a200        	lsi	f0, a2, 0x320
4008af72:	a0a030        	addx4	a10, a0, a3
4008af75:	f6a574        	lsi	f7, a5, 0x3d8
4008af78:	ff          	.byte 0xff
4008af79:	30c3a2        	addi	a10, a3, 48
4008af7c:	74a0a0        	extui	a10, a10, 0, 8
4008af7f:	fff625        	call8	4008aee0 <panicPutChar>
4008af82:	f01d      	retw.n

4008af84 <illegal_instruction_helper>:
4008af84:	004136        	entry	a1, 32
4008af87:	1288      	l32i.n	a8, a2, 4
4008af89:	c27c      	movi.n	a2, -4
4008af8b:	108820        	and	a8, a8, a2
4008af8e:	282a      	add.n	a2, a8, a2
4008af90:	d6e691        	l32r	a9, 40080b28 <_init_end+0x728>
4008af93:	889a      	add.n	a8, a8, a9
4008af95:	d63331        	l32r	a3, 40080864 <_init_end+0x464>
4008af98:	3d3387        	bltu	a3, a8, 4008afd9 <illegal_instruction_helper+0x55>
4008af9b:	d6e4a1        	l32r	a10, 40080b2c <_init_end+0x72c>
4008af9e:	fff625        	call8	4008af00 <panicPutStr>
4008afa1:	02ad      	mov.n	a10, a2
4008afa3:	fff7a5        	call8	4008af1c <panicPutHex>
4008afa6:	d6e2a1        	l32r	a10, 40080b30 <_init_end+0x730>
4008afa9:	fff565        	call8	4008af00 <panicPutStr>
4008afac:	0020c0        	memw
4008afaf:	02a8      	l32i.n	a10, a2, 0
4008afb1:	fff6a5        	call8	4008af1c <panicPutHex>
4008afb4:	d6e031        	l32r	a3, 40080b34 <_init_end+0x734>
4008afb7:	20a330        	or	a10, a3, a3
4008afba:	fff465        	call8	4008af00 <panicPutStr>
4008afbd:	0020c0        	memw
4008afc0:	0122a2        	l32i	a10, a2, 4
4008afc3:	fff5a5        	call8	4008af1c <panicPutHex>
4008afc6:	03ad      	mov.n	a10, a3
4008afc8:	fff365        	call8	4008af00 <panicPutStr>
4008afcb:	0020c0        	memw
4008afce:	22a8      	l32i.n	a10, a2, 8
4008afd0:	fff4a5        	call8	4008af1c <panicPutHex>
4008afd3:	d6d9a1        	l32r	a10, 40080b38 <_init_end+0x738>
4008afd6:	fff2a5        	call8	4008af00 <panicPutStr>
4008afd9:	f01d      	retw.n
	...

4008afdc <reconfigureAllWdts>:
4008afdc:	004136        	entry	a1, 32
4008afdf:	d56381        	l32r	a8, 4008056c <_init_end+0x16c>
4008afe2:	d545b1        	l32r	a11, 400804f8 <_init_end+0xf8>
4008afe5:	0020c0        	memw
4008afe8:	1968b2        	s32i	a11, a8, 100
4008afeb:	190c      	movi.n	a9, 1
4008afed:	0020c0        	memw
4008aff0:	186892        	s32i	a9, a8, 96
4008aff3:	f03d      	nop.n
4008aff5:	f03d      	nop.n
4008aff7:	f03d      	nop.n
4008aff9:	f03d      	nop.n
4008affb:	0020c0        	memw
4008affe:	1228a2        	l32i	a10, a8, 72
4008b001:	d6ce91        	l32r	a9, 40080b3c <_init_end+0x73c>
4008b004:	209a90        	or	a9, a10, a9
4008b007:	0020c0        	memw
4008b00a:	126892        	s32i	a9, a8, 72
4008b00d:	f03d      	nop.n
4008b00f:	f03d      	nop.n
4008b011:	f03d      	nop.n
4008b013:	f03d      	nop.n
4008b015:	0020c0        	memw
4008b018:	1228a2        	l32i	a10, a8, 72
4008b01b:	d6c991        	l32r	a9, 40080b40 <_init_end+0x740>
4008b01e:	209a90        	or	a9, a10, a9
4008b021:	0020c0        	memw
4008b024:	126892        	s32i	a9, a8, 72
4008b027:	f03d      	nop.n
4008b029:	f03d      	nop.n
4008b02b:	f03d      	nop.n
4008b02d:	f03d      	nop.n
4008b02f:	0020c0        	memw
4008b032:	1228a2        	l32i	a10, a8, 72
4008b035:	d59d91        	l32r	a9, 400806ac <_init_end+0x2ac>
4008b038:	209a90        	or	a9, a10, a9
4008b03b:	0020c0        	memw
4008b03e:	126892        	s32i	a9, a8, 72
4008b041:	f03d      	nop.n
4008b043:	f03d      	nop.n
4008b045:	f03d      	nop.n
4008b047:	f03d      	nop.n
4008b049:	0020c0        	memw
4008b04c:	1328a2        	l32i	a10, a8, 76
4008b04f:	f4a0a0        	extui	a10, a10, 0, 16
4008b052:	d6bc91        	l32r	a9, 40080b44 <_init_end+0x744>
4008b055:	209a90        	or	a9, a10, a9
4008b058:	0020c0        	memw
4008b05b:	136892        	s32i	a9, a8, 76
4008b05e:	d0a792        	movi	a9, 0x7d0
4008b061:	0020c0        	memw
4008b064:	146892        	s32i	a9, a8, 80
4008b067:	f03d      	nop.n
4008b069:	f03d      	nop.n
4008b06b:	f03d      	nop.n
4008b06d:	f03d      	nop.n
4008b06f:	0020c0        	memw
4008b072:	1228a2        	l32i	a10, a8, 72
4008b075:	d58191        	l32r	a9, 4008067c <_init_end+0x27c>
4008b078:	209a90        	or	a9, a10, a9
4008b07b:	0020c0        	memw
4008b07e:	126892        	s32i	a9, a8, 72
4008b081:	0a0c      	movi.n	a10, 0
4008b083:	0020c0        	memw
4008b086:	1968a2        	s32i	a10, a8, 100
4008b089:	f03d      	nop.n
4008b08b:	f03d      	nop.n
4008b08d:	f03d      	nop.n
4008b08f:	f03d      	nop.n
4008b091:	d51881        	l32r	a8, 400804f4 <_init_end+0xf4>
4008b094:	0020c0        	memw
4008b097:	1968b2        	s32i	a11, a8, 100
4008b09a:	f03d      	nop.n
4008b09c:	f03d      	nop.n
4008b09e:	f03d      	nop.n
4008b0a0:	f03d      	nop.n
4008b0a2:	0020c0        	memw
4008b0a5:	1228b2        	l32i	a11, a8, 72
4008b0a8:	d51e91        	l32r	a9, 40080520 <_init_end+0x120>
4008b0ab:	109b90        	and	a9, a11, a9
4008b0ae:	0020c0        	memw
4008b0b1:	126892        	s32i	a9, a8, 72
4008b0b4:	0020c0        	memw
4008b0b7:	1968a2        	s32i	a10, a8, 100
4008b0ba:	f01d      	retw.n

4008b0bc <putEntry>:
4008b0bc:	004136        	entry	a1, 32
4008b0bf:	00b2d6        	bgez	a2, 4008b0ce <putEntry+0x12>
4008b0c2:	d6a181        	l32r	a8, 40080b48 <_init_end+0x748>
4008b0c5:	102280        	and	a2, a2, a8
4008b0c8:	d5cc81        	l32r	a8, 400807f8 <_init_end+0x3f8>
4008b0cb:	202280        	or	a2, a2, a8
4008b0ce:	d69fa1        	l32r	a10, 40080b4c <_init_end+0x74c>
4008b0d1:	ffe2e5        	call8	4008af00 <panicPutStr>
4008b0d4:	20a220        	or	a10, a2, a2
4008b0d7:	ffe465        	call8	4008af1c <panicPutHex>
4008b0da:	d69da1        	l32r	a10, 40080b50 <_init_end+0x750>
4008b0dd:	ffe225        	call8	4008af00 <panicPutStr>
4008b0e0:	03ad      	mov.n	a10, a3
4008b0e2:	ffe3a5        	call8	4008af1c <panicPutHex>
4008b0e5:	f01d      	retw.n
	...

4008b0e8 <doBacktrace>:
4008b0e8:	004136        	entry	a1, 32
4008b0eb:	012242        	l32i	a4, a2, 4
4008b0ee:	042232        	l32i	a3, a2, 16
4008b0f1:	d698a1        	l32r	a10, 40080b54 <_init_end+0x754>
4008b0f4:	ffe0a5        	call8	4008af00 <panicPutStr>
4008b0f7:	03bd      	mov.n	a11, a3
4008b0f9:	04ad      	mov.n	a10, a4
4008b0fb:	fffc25        	call8	4008b0bc <putEntry>
4008b0fe:	32a8      	l32i.n	a10, a2, 12
4008b100:	020c      	movi.n	a2, 0
4008b102:	0010c6        	j	4008b149 <doBacktrace+0x61>
4008b105:	d69481        	l32r	a8, 40080b58 <_init_end+0x758>
4008b108:	838a      	add.n	a8, a3, a8
4008b10a:	d69441        	l32r	a4, 40080b5c <_init_end+0x75c>
4008b10d:	093487        	bltu	a4, a8, 4008b11a <doBacktrace+0x32>
4008b110:	344030        	extui	a4, a3, 0, 4
4008b113:	948c      	beqz.n	a4, 4008b120 <doBacktrace+0x38>
4008b115:	080c      	movi.n	a8, 0
4008b117:	000206        	j	4008b123 <doBacktrace+0x3b>
4008b11a:	080c      	movi.n	a8, 0
4008b11c:	0000c6        	j	4008b123 <doBacktrace+0x3b>
4008b11f:	a08200        	addx4	a8, a2, a0
4008b122:	a81601        	l32r	a0, 4007517c <__udivmoddi4+0x10588>
4008b125:	c22202        	l32i	a0, a2, 0x308
4008b128:	a04202        	s8i	a0, a2, 160
4008b12b:	349764        	lsi	f6, a7, 208
4008b12e:	c34221        	l32r	a2, 4007be38 <__udivmoddi4+0x17244>
4008b131:	0448f4        	lsi	f15, a8, 16
4008b134:	04bd      	mov.n	a11, a4
4008b136:	fdcaa2        	addi	a10, a10, -3
4008b139:	fff825        	call8	4008b0bc <putEntry>
4008b13c:	f0c332        	addi	a3, a3, -16
4008b13f:	03a8      	l32i.n	a10, a3, 0
4008b141:	d68131        	l32r	a3, 40080b48 <_init_end+0x748>
4008b144:	09b3a7        	bgeu	a3, a10, 4008b151 <doBacktrace+0x69>
4008b147:	043d      	mov.n	a3, a4
4008b149:	921b      	addi.n	a9, a2, 1
4008b14b:	63a042        	movi	a4, 99
4008b14e:	b3b427        	bgeu	a4, a2, 4008b105 <doBacktrace+0x1d>
4008b151:	d683a1        	l32r	a10, 40080b60 <_init_end+0x760>
4008b154:	ffdaa5        	call8	4008af00 <panicPutStr>
4008b157:	f01d      	retw.n
4008b159:	000000        	ill

4008b15c <invoke_abort>:
4008b15c:	004136        	entry	a1, 32
4008b15f:	190c      	movi.n	a9, 1
4008b161:	d68081        	l32r	a8, 40080b64 <_init_end+0x764>
4008b164:	004892        	s8i	a9, a8, 0
4008b167:	0020c0        	memw
4008b16a:	f969a5        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b16d:	1a8c      	beqz.n	a10, 4008b172 <invoke_abort+0x16>
4008b16f:	004000        	break	0, 0
4008b172:	080c      	movi.n	a8, 0
4008b174:	0889      	s32i.n	a8, a8, 0
4008b176:	fffc06        	j	4008b16a <invoke_abort+0xe>
4008b179:	000000        	ill

4008b17c <haltOtherCore>:
4008b17c:	004136        	entry	a1, 32
4008b17f:	03eb80        	rsr.prid	a8
4008b182:	048d80        	extui	a8, a8, 13, 1
4008b185:	00a092        	movi	a9, 0
4008b188:	01a0a2        	movi	a10, 1
4008b18b:	93a980        	movnez	a10, a9, a8
4008b18e:	f952a5        	call8	400846b8 <esp_cpu_stall>
4008b191:	000090        	retw

4008b194 <commonErrorHandler_dump>:
4008b194:	010136        	entry	a1, 128
4008b197:	60a0c2        	movi	a12, 96
4008b19a:	d673b1        	l32r	a11, 40080b68 <_init_end+0x768>
4008b19d:	20a110        	or	a10, a1, a1
4008b1a0:	d56981        	l32r	a8, 40080744 <_init_end+0x344>
4008b1a3:	0008e0        	callx8	a8
4008b1a6:	d66f41        	l32r	a4, 40080b64 <_init_end+0x764>
4008b1a9:	000442        	l8ui	a4, a4, 0
4008b1ac:	0b6456        	bnez	a4, 4008b266 <commonErrorHandler_dump+0xd2>
4008b1af:	d66fa1        	l32r	a10, 40080b6c <_init_end+0x76c>
4008b1b2:	ffd4e5        	call8	4008af00 <panicPutStr>
4008b1b5:	20a330        	or	a10, a3, a3
4008b1b8:	ffd8e5        	call8	4008af48 <panicPutDec>
4008b1bb:	d66da1        	l32r	a10, 40080b70 <_init_end+0x770>
4008b1be:	ffd425        	call8	4008af00 <panicPutStr>
4008b1c1:	050c      	movi.n	a5, 0
4008b1c3:	000f46        	j	4008b204 <commonErrorHandler_dump+0x70>
4008b1c6:	456a      	add.n	a4, a5, a6
4008b1c8:	209110        	or	a9, a1, a1
4008b1cb:	a08490        	addx4	a8, a4, a9
4008b1ce:	0028a2        	l32i	a10, a8, 0
4008b1d1:	000a82        	l8ui	a8, a10, 0
4008b1d4:	019816        	beqz	a8, 4008b1f1 <commonErrorHandler_dump+0x5d>
4008b1d7:	ffd2a5        	call8	4008af00 <panicPutStr>
4008b1da:	d666a1        	l32r	a10, 40080b74 <_init_end+0x774>
4008b1dd:	ffd225        	call8	4008af00 <panicPutStr>
4008b1e0:	441b      	addi.n	a4, a4, 1
4008b1e2:	a04420        	addx4	a4, a4, a2
4008b1e5:	0024a2        	l32i	a10, a4, 0
4008b1e8:	ffd325        	call8	4008af1c <panicPutHex>
4008b1eb:	d663a1        	l32r	a10, 40080b78 <_init_end+0x778>
4008b1ee:	ffd125        	call8	4008af00 <panicPutStr>
4008b1f1:	661b      	addi.n	a6, a6, 1
4008b1f3:	000086        	j	4008b1f9 <commonErrorHandler_dump+0x65>
4008b1f6:	00a062        	movi	a6, 0
4008b1f9:	c946a6        	blti	a6, 4, 4008b1c6 <commonErrorHandler_dump+0x32>
4008b1fc:	d64fa1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b1ff:	ffd025        	call8	4008af00 <panicPutStr>
4008b202:	554b      	addi.n	a5, a5, 4
4008b204:	741c      	movi.n	a4, 23
4008b206:	eca457        	bge	a4, a5, 4008b1f6 <commonErrorHandler_dump+0x62>
4008b209:	f8b5e5        	call8	40083d68 <xPortInterruptedFromISRContext>
4008b20c:	056a16        	beqz	a10, 4008b266 <commonErrorHandler_dump+0xd2>
4008b20f:	d65b41        	l32r	a4, 40080b7c <_init_end+0x77c>
4008b212:	0448      	l32i.n	a4, a4, 0
4008b214:	4e1247        	beq	a2, a4, 4008b266 <commonErrorHandler_dump+0xd2>
4008b217:	d655a1        	l32r	a10, 40080b6c <_init_end+0x76c>
4008b21a:	ffce65        	call8	4008af00 <panicPutStr>
4008b21d:	03ad      	mov.n	a10, a3
4008b21f:	ffd2a5        	call8	4008af48 <panicPutDec>
4008b222:	d657a1        	l32r	a10, 40080b80 <_init_end+0x780>
4008b225:	ffcda5        	call8	4008af00 <panicPutStr>
4008b228:	03b130        	rsr.epc1	a3
4008b22b:	d656a1        	l32r	a10, 40080b84 <_init_end+0x784>
4008b22e:	ffcd25        	call8	4008af00 <panicPutStr>
4008b231:	03ad      	mov.n	a10, a3
4008b233:	ffcea5        	call8	4008af1c <panicPutHex>
4008b236:	03b230        	rsr.epc2	a3
4008b239:	d653a1        	l32r	a10, 40080b88 <_init_end+0x788>
4008b23c:	ffcc25        	call8	4008af00 <panicPutStr>
4008b23f:	03ad      	mov.n	a10, a3
4008b241:	ffcda5        	call8	4008af1c <panicPutHex>
4008b244:	03b330        	rsr.epc3	a3
4008b247:	d651a1        	l32r	a10, 40080b8c <_init_end+0x78c>
4008b24a:	ffcb65        	call8	4008af00 <panicPutStr>
4008b24d:	03ad      	mov.n	a10, a3
4008b24f:	ffcce5        	call8	4008af1c <panicPutHex>
4008b252:	03b430        	rsr.epc4	a3
4008b255:	d64ea1        	l32r	a10, 40080b90 <_init_end+0x790>
4008b258:	ffca65        	call8	4008af00 <panicPutStr>
4008b25b:	03ad      	mov.n	a10, a3
4008b25d:	ffcbe5        	call8	4008af1c <panicPutHex>
4008b260:	d636a1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b263:	ffc9e5        	call8	4008af00 <panicPutStr>
4008b266:	20a220        	or	a10, a2, a2
4008b269:	ffe7e5        	call8	4008b0e8 <doBacktrace>
4008b26c:	f01d      	retw.n
	...

4008b270 <esp_panic_dig_reset>:
4008b270:	004136        	entry	a1, 32
4008b273:	d4bf81        	l32r	a8, 40080570 <_init_end+0x170>
4008b276:	0020c0        	memw
4008b279:	002892        	l32i	a9, a8, 0
4008b27c:	d4be81        	l32r	a8, 40080574 <_init_end+0x174>
4008b27f:	f08987        	bany	a9, a8, 4008b273 <esp_panic_dig_reset+0x3>
4008b282:	01a3e5        	call8	4008ccc0 <rtc_clk_cpu_freq_set_xtal>
4008b285:	00a0a2        	movi	a10, 0
4008b288:	f94f25        	call8	4008477c <esp_cpu_unstall>
4008b28b:	d53291        	l32r	a9, 40080754 <_init_end+0x354>
4008b28e:	0020c0        	memw
4008b291:	0029a2        	l32i	a10, a9, 0
4008b294:	d4fa81        	l32r	a8, 4008067c <_init_end+0x27c>
4008b297:	208a80        	or	a8, a10, a8
4008b29a:	0020c0        	memw
4008b29d:	0989      	s32i.n	a8, a9, 0
4008b29f:	ffff06        	j	4008b29f <esp_panic_dig_reset+0x2f>
	...

4008b2a4 <commonErrorHandler>:
4008b2a4:	004136        	entry	a1, 32
4008b2a7:	03eb30        	rsr.prid	a3
4008b2aa:	043d30        	extui	a3, a3, 13, 1
4008b2ad:	00b625        	call8	4008be10 <rtc_wdt_is_on>
4008b2b0:	028a56        	bnez	a10, 4008b2dc <commonErrorHandler+0x38>
4008b2b3:	008d25        	call8	4008bb84 <rtc_wdt_protect_off>
4008b2b6:	00a7a5        	call8	4008bd30 <rtc_wdt_disable>
4008b2b9:	7b0c      	movi.n	a11, 7
4008b2bb:	0a0c      	movi.n	a10, 0
4008b2bd:	00ae65        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
4008b2c0:	7b0c      	movi.n	a11, 7
4008b2c2:	1a0c      	movi.n	a10, 1
4008b2c4:	00ade5        	call8	4008bda4 <rtc_wdt_set_length_of_reset_signal>
4008b2c7:	3b0c      	movi.n	a11, 3
4008b2c9:	0a0c      	movi.n	a10, 0
4008b2cb:	009b25        	call8	4008bc7c <rtc_wdt_set_stage>
4008b2ce:	d631b1        	l32r	a11, 40080b94 <_init_end+0x794>
4008b2d1:	0a0c      	movi.n	a10, 0
4008b2d3:	0094a5        	call8	4008bc1c <rtc_wdt_set_time>
4008b2d6:	008ce5        	call8	4008bba4 <rtc_wdt_enable>
4008b2d9:	008ba5        	call8	4008bb94 <rtc_wdt_protect_on>
4008b2dc:	ffcfe5        	call8	4008afdc <reconfigureAllWdts>
4008b2df:	20b330        	or	a11, a3, a3
4008b2e2:	20a220        	or	a10, a2, a2
4008b2e5:	ffeae5        	call8	4008b194 <commonErrorHandler_dump>
4008b2e8:	d62581        	l32r	a8, 40080b7c <_init_end+0x77c>
4008b2eb:	08a8      	l32i.n	a10, a8, 0
4008b2ed:	8a8c      	beqz.n	a10, 4008b2f9 <commonErrorHandler+0x55>
4008b2ef:	080c      	movi.n	a8, 0
4008b2f1:	1b0c      	movi.n	a11, 1
4008b2f3:	93b830        	movnez	a11, a8, a3
4008b2f6:	ffe9e5        	call8	4008b194 <commonErrorHandler_dump>
4008b2f9:	00a365        	call8	4008bd30 <rtc_wdt_disable>
4008b2fc:	d627a1        	l32r	a10, 40080b98 <_init_end+0x798>
4008b2ff:	201110        	or	a1, a1, a1
4008b302:	ffbfe5        	call8	4008af00 <panicPutStr>
4008b305:	142222        	l32i	a2, a2, 80
4008b308:	057226        	beqi	a2, 7, 4008b311 <commonErrorHandler+0x6d>
4008b30b:	201110        	or	a1, a1, a1
4008b30e:	f676e5        	call8	40081a7c <esp_restart_noos>
4008b311:	fff5e5        	call8	4008b270 <esp_panic_dig_reset>

4008b314 <esp_error_check_failed_print>:
4008b314:	004136        	entry	a1, 32
4008b317:	03cd      	mov.n	a12, a3
4008b319:	02bd      	mov.n	a11, a2
4008b31b:	d620a1        	l32r	a10, 40080b9c <_init_end+0x79c>
4008b31e:	d45e81        	l32r	a8, 40080498 <_init_end+0x98>
4008b321:	0008e0        	callx8	a8
4008b324:	03ad      	mov.n	a10, a3
4008b326:	4b3565        	call8	400d667c <esp_err_to_name>
4008b329:	0abd      	mov.n	a11, a10
4008b32b:	d61da1        	l32r	a10, 40080ba0 <_init_end+0x7a0>
4008b32e:	d45a81        	l32r	a8, 40080498 <_init_end+0x98>
4008b331:	0008e0        	callx8	a8
4008b334:	d61c31        	l32r	a3, 40080ba4 <_init_end+0x7a4>
4008b337:	153e30        	extui	a3, a3, 30, 2
4008b33a:	013320        	slli	a3, a3, 30
4008b33d:	11b0e0        	slli	a11, a0, 2
4008b340:	41b2b0        	srli	a11, a11, 2
4008b343:	20bb30        	or	a11, a11, a3
4008b346:	fdcbb2        	addi	a11, a11, -3
4008b349:	d617a1        	l32r	a10, 40080ba8 <_init_end+0x7a8>
4008b34c:	d45381        	l32r	a8, 40080498 <_init_end+0x98>
4008b34f:	0008e0        	callx8	a8
4008b352:	fb0ae5        	call8	40086400 <spi_flash_cache_enabled>
4008b355:	fa8c      	beqz.n	a10, 4008b368 <esp_error_check_failed_print+0x54>
4008b357:	07ed      	mov.n	a14, a7
4008b359:	06dd      	mov.n	a13, a6
4008b35b:	05cd      	mov.n	a12, a5
4008b35d:	04bd      	mov.n	a11, a4
4008b35f:	d613a1        	l32r	a10, 40080bac <_init_end+0x7ac>
4008b362:	d44d81        	l32r	a8, 40080498 <_init_end+0x98>
4008b365:	0008e0        	callx8	a8
4008b368:	f01d      	retw.n
	...

4008b36c <abort>:
4008b36c:	004136        	entry	a1, 32
4008b36f:	d61081        	l32r	a8, 40080bb0 <_init_end+0x7b0>
4008b372:	158e80        	extui	a8, a8, 30, 2
4008b375:	018820        	slli	a8, a8, 30
4008b378:	11b0e0        	slli	a11, a0, 2
4008b37b:	41b2b0        	srli	a11, a11, 2
4008b37e:	20bb80        	or	a11, a11, a8
4008b381:	03ebc0        	rsr.prid	a12
4008b384:	04cdc0        	extui	a12, a12, 13, 1
4008b387:	fdcbb2        	addi	a11, a11, -3
4008b38a:	d60aa1        	l32r	a10, 40080bb4 <_init_end+0x7b4>
4008b38d:	d44281        	l32r	a8, 40080498 <_init_end+0x98>
4008b390:	0008e0        	callx8	a8
4008b393:	f71c65        	call8	40082558 <esp_reset_reason_get_hint>
4008b396:	007a56        	bnez	a10, 4008b3a1 <abort+0x35>
4008b399:	4a0c      	movi.n	a10, 4
4008b39b:	201110        	or	a1, a1, a1
4008b39e:	f718a5        	call8	40082528 <esp_reset_reason_set_hint>
4008b3a1:	ffdba5        	call8	4008b15c <invoke_abort>

4008b3a4 <vApplicationStackOverflowHook>:
4008b3a4:	004136        	entry	a1, 32
4008b3a7:	d604a1        	l32r	a10, 40080bb8 <_init_end+0x7b8>
4008b3aa:	ffb565        	call8	4008af00 <panicPutStr>
4008b3ad:	03ad      	mov.n	a10, a3
4008b3af:	ffb525        	call8	4008af00 <panicPutStr>
4008b3b2:	d602a1        	l32r	a10, 40080bbc <_init_end+0x7bc>
4008b3b5:	ffb4a5        	call8	4008af00 <panicPutStr>
4008b3b8:	fffb25        	call8	4008b36c <abort>
	...

4008b3bc <panicHandler>:
4008b3bc:	008136        	entry	a1, 64
4008b3bf:	03eb40        	rsr.prid	a4
4008b3c2:	044d40        	extui	a4, a4, 13, 1
4008b3c5:	20a0c2        	movi	a12, 32
4008b3c8:	d5ffb1        	l32r	a11, 40080bc4 <_init_end+0x7c4>
4008b3cb:	20a110        	or	a10, a1, a1
4008b3ce:	d4dd81        	l32r	a8, 40080744 <_init_end+0x344>
4008b3d1:	0008e0        	callx8	a8
4008b3d4:	142232        	l32i	a3, a2, 80
4008b3d7:	0983e6        	bgei	a3, 8, 4008b3e4 <panicHandler+0x28>
4008b3da:	016d      	mov.n	a6, a1
4008b3dc:	a05360        	addx4	a5, a3, a6
4008b3df:	0558      	l32i.n	a5, a5, 0
4008b3e1:	000086        	j	4008b3e7 <panicHandler+0x2b>
4008b3e4:	d5f751        	l32r	a5, 40080bc0 <_init_end+0x7c0>
4008b3e7:	025366        	bnei	a3, 5, 4008b3ed <panicHandler+0x31>
4008b3ea:	041426        	beqi	a4, 1, 4008b3f2 <panicHandler+0x36>
4008b3ed:	0b6366        	bnei	a3, 6, 4008b3fc <panicHandler+0x40>
4008b3f0:	84cc      	bnez.n	a4, 4008b3fc <panicHandler+0x40>
4008b3f2:	d5e231        	l32r	a3, 40080b7c <_init_end+0x77c>
4008b3f5:	0329      	s32i.n	a2, a3, 0
4008b3f7:	ffff06        	j	4008b3f7 <panicHandler+0x3b>
4008b3fa:	320000        	orbc	b0, b0, b0
4008b3fd:	f6fbc3        	lsi	f12, a11, 0x3d8
4008b400:	0c0723        	lsi	f2, a7, 48
4008b403:	811a      	add.n	a8, a1, a1
4008b405:	d428      	l32i.n	a2, a4, 52
4008b407:	0008e0        	callx8	a8
4008b40a:	142232        	l32i	a3, a2, 80
4008b40d:	0b7366        	bnei	a3, 7, 4008b41c <panicHandler+0x60>
4008b410:	f6a365        	call8	40081e48 <esp_cache_err_get_cpuid>
4008b413:	051a47        	beq	a10, a4, 4008b41c <panicHandler+0x60>
4008b416:	ffff06        	j	4008b416 <panicHandler+0x5a>
4008b419:	000000        	ill
4008b41c:	142232        	l32i	a3, a2, 80
4008b41f:	fbc332        	addi	a3, a3, -5
4008b422:	0723f6        	bgeui	a3, 2, 4008b42d <panicHandler+0x71>
4008b425:	5a0c      	movi.n	a10, 5
4008b427:	201110        	or	a1, a1, a1
4008b42a:	f70fe5        	call8	40082528 <esp_reset_reason_set_hint>
4008b42d:	ffd4e5        	call8	4008b17c <haltOtherCore>
4008b430:	f64de5        	call8	40081910 <esp_dport_access_int_abort>
4008b433:	d5e5a1        	l32r	a10, 40080bc8 <_init_end+0x7c8>
4008b436:	ffaca5        	call8	4008af00 <panicPutStr>
4008b439:	20a440        	or	a10, a4, a4
4008b43c:	ffb0a5        	call8	4008af48 <panicPutDec>
4008b43f:	d5e3a1        	l32r	a10, 40080bcc <_init_end+0x7cc>
4008b442:	ffabe5        	call8	4008af00 <panicPutStr>
4008b445:	20a550        	or	a10, a5, a5
4008b448:	ffab65        	call8	4008af00 <panicPutStr>
4008b44b:	d5e1a1        	l32r	a10, 40080bd0 <_init_end+0x7d0>
4008b44e:	ffab25        	call8	4008af00 <panicPutStr>
4008b451:	142232        	l32i	a3, a2, 80
4008b454:	021326        	beqi	a3, 1, 4008b45a <panicHandler+0x9e>
4008b457:	001946        	j	4008b4c0 <panicHandler+0x104>
4008b45a:	03e930        	rsr.debugcause	a3
4008b45d:	d5dda1        	l32r	a10, 40080bd4 <_init_end+0x7d4>
4008b460:	ffa9e5        	call8	4008af00 <panicPutStr>
4008b463:	056307        	bbci	a3, 0, 4008b46c <panicHandler+0xb0>
4008b466:	d5dca1        	l32r	a10, 40080bd8 <_init_end+0x7d8>
4008b469:	ffa965        	call8	4008af00 <panicPutStr>
4008b46c:	056317        	bbci	a3, 1, 4008b475 <panicHandler+0xb9>
4008b46f:	d5dba1        	l32r	a10, 40080bdc <_init_end+0x7dc>
4008b472:	ffa8e5        	call8	4008af00 <panicPutStr>
4008b475:	266327        	bbci	a3, 2, 4008b49f <panicHandler+0xe3>
4008b478:	1d6387        	bbci	a3, 8, 4008b499 <panicHandler+0xdd>
4008b47b:	04ad      	mov.n	a10, a4
4008b47d:	fd5c25        	call8	40088a40 <xTaskGetCurrentTaskHandleForCPU>
4008b480:	fd5625        	call8	400889e4 <pcTaskGetTaskName>
4008b483:	0a4d      	mov.n	a4, a10
4008b485:	d5d6a1        	l32r	a10, 40080be0 <_init_end+0x7e0>
4008b488:	ffa765        	call8	4008af00 <panicPutStr>
4008b48b:	04ad      	mov.n	a10, a4
4008b48d:	ffa725        	call8	4008af00 <panicPutStr>
4008b490:	d5d5a1        	l32r	a10, 40080be4 <_init_end+0x7e4>
4008b493:	ffa6e5        	call8	4008af00 <panicPutStr>
4008b496:	000146        	j	4008b49f <panicHandler+0xe3>
4008b499:	d5d3a1        	l32r	a10, 40080be8 <_init_end+0x7e8>
4008b49c:	ffa625        	call8	4008af00 <panicPutStr>
4008b49f:	056337        	bbci	a3, 3, 4008b4a8 <panicHandler+0xec>
4008b4a2:	d5d2a1        	l32r	a10, 40080bec <_init_end+0x7ec>
4008b4a5:	ffa5a5        	call8	4008af00 <panicPutStr>
4008b4a8:	056347        	bbci	a3, 4, 4008b4b1 <panicHandler+0xf5>
4008b4ab:	d5d1a1        	l32r	a10, 40080bf0 <_init_end+0x7f0>
4008b4ae:	ffa525        	call8	4008af00 <panicPutStr>
4008b4b1:	056357        	bbci	a3, 5, 4008b4ba <panicHandler+0xfe>
4008b4b4:	d5d0a1        	l32r	a10, 40080bf4 <_init_end+0x7f4>
4008b4b7:	ffa4a5        	call8	4008af00 <panicPutStr>
4008b4ba:	d59fa1        	l32r	a10, 40080b38 <_init_end+0x738>
4008b4bd:	ffa425        	call8	4008af00 <panicPutStr>
4008b4c0:	f93425        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b4c3:	093a16        	beqz	a10, 4008b55a <panicHandler+0x19e>
4008b4c6:	d42941        	l32r	a4, 4008056c <_init_end+0x16c>
4008b4c9:	d40b81        	l32r	a8, 400804f8 <_init_end+0xf8>
4008b4cc:	0020c0        	memw
4008b4cf:	196482        	s32i	a8, a4, 100
4008b4d2:	f03d      	nop.n
4008b4d4:	f03d      	nop.n
4008b4d6:	f03d      	nop.n
4008b4d8:	f03d      	nop.n
4008b4da:	0020c0        	memw
4008b4dd:	122492        	l32i	a9, a4, 72
4008b4e0:	d41031        	l32r	a3, 40080520 <_init_end+0x120>
4008b4e3:	105930        	and	a5, a9, a3
4008b4e6:	0020c0        	memw
4008b4e9:	126452        	s32i	a5, a4, 72
4008b4ec:	00a052        	movi	a5, 0
4008b4ef:	0020c0        	memw
4008b4f2:	196452        	s32i	a5, a4, 100
4008b4f5:	f03d      	nop.n
4008b4f7:	f03d      	nop.n
4008b4f9:	f03d      	nop.n
4008b4fb:	f03d      	nop.n
4008b4fd:	d3fd41        	l32r	a4, 400804f4 <_init_end+0xf4>
4008b500:	0020c0        	memw
4008b503:	196482        	s32i	a8, a4, 100
4008b506:	f03d      	nop.n
4008b508:	f03d      	nop.n
4008b50a:	f03d      	nop.n
4008b50c:	f03d      	nop.n
4008b50e:	0020c0        	memw
4008b511:	122482        	l32i	a8, a4, 72
4008b514:	103830        	and	a3, a8, a3
4008b517:	0020c0        	memw
4008b51a:	126432        	s32i	a3, a4, 72
4008b51d:	0020c0        	memw
4008b520:	196452        	s32i	a5, a4, 100
4008b523:	f03d      	nop.n
4008b525:	f03d      	nop.n
4008b527:	f03d      	nop.n
4008b529:	f03d      	nop.n
4008b52b:	142232        	l32i	a3, a2, 80
4008b52e:	fbc332        	addi	a3, a3, -5
4008b531:	1323f6        	bgeui	a3, 2, 4008b548 <panicHandler+0x18c>
4008b534:	0020c0        	memw
4008b537:	292452        	l32i	a5, a4, 164
4008b53a:	04a032        	movi	a3, 4
4008b53d:	203530        	or	a3, a5, a3
4008b540:	035d      	mov.n	a5, a3
4008b542:	0020c0        	memw
4008b545:	296432        	s32i	a3, a4, 164
4008b548:	f03d      	nop.n
4008b54a:	f03d      	nop.n
4008b54c:	f03d      	nop.n
4008b54e:	f03d      	nop.n
4008b550:	12a8      	l32i.n	a10, a2, 4
4008b552:	0010a5        	call8	4008b65c <setFirstBreakpoint>
4008b555:	f01d      	retw.n
4008b557:	000000        	ill
4008b55a:	02ad      	mov.n	a10, a2
4008b55c:	ffd465        	call8	4008b2a4 <commonErrorHandler>
	...

4008b560 <xt_unhandled_exception>:
4008b560:	004136        	entry	a1, 32
4008b563:	ffc1a5        	call8	4008b17c <haltOtherCore>
4008b566:	f63aa5        	call8	40081910 <esp_dport_access_int_abort>
4008b569:	d57e31        	l32r	a3, 40080b64 <_init_end+0x764>
4008b56c:	000332        	l8ui	a3, a3, 0
4008b56f:	06f356        	bnez	a3, 4008b5e2 <xt_unhandled_exception+0x82>
4008b572:	d595a1        	l32r	a10, 40080bc8 <_init_end+0x7c8>
4008b575:	ff98a5        	call8	4008af00 <panicPutStr>
4008b578:	03eba0        	rsr.prid	a10
4008b57b:	04ada0        	extui	a10, a10, 13, 1
4008b57e:	ff9ca5        	call8	4008af48 <panicPutDec>
4008b581:	d592a1        	l32r	a10, 40080bcc <_init_end+0x7cc>
4008b584:	ff97a5        	call8	4008af00 <panicPutStr>
4008b587:	142232        	l32i	a3, a2, 80
4008b58a:	27a082        	movi	a8, 39
4008b58d:	0f3837        	bltu	a8, a3, 4008b5a0 <xt_unhandled_exception+0x40>
4008b590:	d59a81        	l32r	a8, 40080bf8 <_init_end+0x7f8>
4008b593:	a08380        	addx4	a8, a3, a8
4008b596:	0028a2        	l32i	a10, a8, 0
4008b599:	ff9665        	call8	4008af00 <panicPutStr>
4008b59c:	000186        	j	4008b5a6 <xt_unhandled_exception+0x46>
4008b59f:	97a100        	lsi	f0, a1, 0x25c
4008b5a2:	95e5d5        	call4	40021400 <btdm_r_ip_func_p_get+0x7910>
4008b5a5:	ff          	.byte 0xff
4008b5a6:	d596a1        	l32r	a10, 40080c00 <_init_end+0x800>
4008b5a9:	ff9565        	call8	4008af00 <panicPutStr>
4008b5ac:	f92565        	call8	40084804 <esp_cpu_in_ocd_debug_mode>
4008b5af:	01aa16        	beqz	a10, 4008b5cd <xt_unhandled_exception+0x6d>
4008b5b2:	d594a1        	l32r	a10, 40080c04 <_init_end+0x804>
4008b5b5:	ff94a5        	call8	4008af00 <panicPutStr>
4008b5b8:	0122a2        	l32i	a10, a2, 4
4008b5bb:	ff9625        	call8	4008af1c <panicPutHex>
4008b5be:	d592a1        	l32r	a10, 40080c08 <_init_end+0x808>
4008b5c1:	ff93e5        	call8	4008af00 <panicPutStr>
4008b5c4:	12a8      	l32i.n	a10, a2, 4
4008b5c6:	000965        	call8	4008b65c <setFirstBreakpoint>
4008b5c9:	f01d      	retw.n
4008b5cb:	a10000        	sll	a0, a0
4008b5ce:	8f          	.byte 0x8f
4008b5cf:	92e5d5        	call4	4001e42c <btdm_r_ip_func_p_get+0x493c>
4008b5d2:	ff          	.byte 0xff
4008b5d3:	005356        	bnez	a3, 4008b5dc <xt_unhandled_exception+0x7c>
4008b5d6:	20a220        	or	a10, a2, a2
4008b5d9:	ff9aa5        	call8	4008af84 <illegal_instruction_helper>
4008b5dc:	04a0a2        	movi	a10, 4
4008b5df:	f6f4a5        	call8	40082528 <esp_reset_reason_set_hint>
4008b5e2:	20a220        	or	a10, a2, a2
4008b5e5:	ffcbe5        	call8	4008b2a4 <commonErrorHandler>

4008b5e8 <esp_set_watchpoint>:
4008b5e8:	004136        	entry	a1, 32
4008b5eb:	4122f6        	bgeui	a2, 2, 4008b630 <esp_set_watchpoint+0x48>
4008b5ee:	d55681        	l32r	a8, 40080b48 <_init_end+0x748>
4008b5f1:	408587        	bany	a5, a8, 4008b635 <esp_set_watchpoint+0x4d>
4008b5f4:	fa3c      	movi.n	a10, 63
4008b5f6:	080c      	movi.n	a8, 0
4008b5f8:	000446        	j	4008b60d <esp_set_watchpoint+0x25>
4008b5fb:	0c0000        	lsi	f0, a0, 48
4008b5fe:	0019      	s32i.n	a1, a0, 0
4008b600:	4018      	l32i.n	a1, a0, 16
4008b602:	a19900        	sll	a9, a9
4008b605:	071947        	beq	a9, a4, 4008b610 <esp_set_watchpoint+0x28>
4008b608:	11aaf0        	slli	a10, a10, 1
4008b60b:	881b      	addi.n	a8, a8, 1
4008b60d:	ec78a6        	blti	a8, 7, 4008b5fd <esp_set_watchpoint+0x15>
4008b610:	287826        	beqi	a8, 7, 4008b63c <esp_set_watchpoint+0x54>
4008b613:	54a0a0        	extui	a10, a10, 0, 6
4008b616:	2055a0        	or	a5, a5, a10
4008b619:	72cc      	bnez.n	a2, 4008b624 <esp_set_watchpoint+0x3c>
4008b61b:	139030        	wsr.dbreaka0	a3
4008b61e:	13a050        	wsr.dbreakc0	a5
4008b621:	f01d      	retw.n
4008b623:	913000        	srl	a3, a0
4008b626:	a15013        	lsi	f1, a0, 0x284
4008b629:	020c13        	lsi	f1, a12, 8
4008b62c:	f01d      	retw.n
4008b62e:	220000        	orb	b0, b0, b0
4008b631:	1d02a1        	l32r	a10, 40052a3c <lm_cmd_cmp_send+0x1204>
4008b634:	a122f0        	lsi	f15, a2, 0x284
4008b637:	f01d02        	l16ui	a0, a13, 0x1e0
4008b63a:	220000        	orb	b0, b0, b0
4008b63d:	1d02a1        	l32r	a10, 40052a48 <lm_cmd_cmp_send+0x1210>
4008b640:	0000f0        	callx12	a0
	...

4008b644 <_esp_error_check_failed>:
4008b644:	004136        	entry	a1, 32
4008b647:	06fd      	mov.n	a15, a6
4008b649:	05ed      	mov.n	a14, a5
4008b64b:	04dd      	mov.n	a13, a4
4008b64d:	03cd      	mov.n	a12, a3
4008b64f:	02bd      	mov.n	a11, a2
4008b651:	d56fa1        	l32r	a10, 40080c10 <_init_end+0x810>
4008b654:	ffcbe5        	call8	4008b314 <esp_error_check_failed_print>
4008b657:	ffb065        	call8	4008b15c <invoke_abort>
	...

4008b65c <setFirstBreakpoint>:
4008b65c:	004136        	entry	a1, 32
4008b65f:	138020        	wsr.ibreaka0	a2
4008b662:	036030        	rsr.ibreakenable	a3
4008b665:	140c      	movi.n	a4, 1
4008b667:	204430        	or	a4, a4, a3
4008b66a:	136040        	wsr.ibreakenable	a4
4008b66d:	f01d      	retw.n
	...

4008b670 <eri_write>:
4008b670:	004136        	entry	a1, 32
4008b673:	407230        	wer	a3, a2
4008b676:	f01d      	retw.n
4008b678:	103c      	movi.n	a0, 49
4008b67a:	ff3ff5        	call12	4008aa78 <multi_heap_realloc_impl+0xac>
4008b67d:	ff          	.byte 0xff
4008b67e:	1f          	.byte 0x1f
4008b67f:	07ff80        	lsi	f8, a15, 28
4008b682:	e0          	.byte 0xe0
4008b683:	ff          	.byte 0xff

4008b684 <BT_tx_if_init>:
4008b684:	004136        	entry	a1, 32
4008b687:	fffc31        	l32r	a3, 4008b678 <eri_write+0x8>
4008b68a:	fffc81        	l32r	a8, 4008b67c <eri_write+0xc>
4008b68d:	0020c0        	memw
4008b690:	002392        	l32i	a9, a3, 0
4008b693:	942020        	extui	a2, a2, 0, 10
4008b696:	108980        	and	a8, a9, a8
4008b699:	0122b0        	slli	a2, a2, 21
4008b69c:	202280        	or	a2, a2, a8
4008b69f:	0020c0        	memw
4008b6a2:	006322        	s32i	a2, a3, 0
4008b6a5:	f735a5        	call8	40082a00 <phy_get_fetx_delay>
4008b6a8:	e8a382        	movi	a8, 0x3e8
4008b6ab:	0020c0        	memw
4008b6ae:	002322        	l32i	a2, a3, 0
4008b6b1:	c0a8a0        	sub	a10, a8, a10
4008b6b4:	fff381        	l32r	a8, 4008b680 <eri_write+0x10>
4008b6b7:	94a0a0        	extui	a10, a10, 0, 10
4008b6ba:	108280        	and	a8, a2, a8
4008b6bd:	11aa50        	slli	a10, a10, 11
4008b6c0:	20aa80        	or	a10, a10, a8
4008b6c3:	0020c0        	memw
4008b6c6:	03a9      	s32i.n	a10, a3, 0
4008b6c8:	0020c0        	memw
4008b6cb:	0388      	l32i.n	a8, a3, 0
4008b6cd:	944040        	extui	a4, a4, 0, 10
4008b6d0:	01a892        	movi	a9, 0xfffff801
4008b6d3:	1144f0        	slli	a4, a4, 1
4008b6d6:	108890        	and	a8, a8, a9
4008b6d9:	208480        	or	a8, a4, a8
4008b6dc:	0020c0        	memw
4008b6df:	0389      	s32i.n	a8, a3, 0
4008b6e1:	0020c0        	memw
4008b6e4:	0348      	l32i.n	a4, a3, 0
4008b6e6:	d3e521        	l32r	a2, 4008067c <_init_end+0x27c>
4008b6e9:	202420        	or	a2, a4, a2
4008b6ec:	0020c0        	memw
4008b6ef:	0329      	s32i.n	a2, a3, 0
4008b6f1:	d58c      	beqz.n	a5, 4008b702 <BT_tx_if_init+0x7e>
4008b6f3:	0020c0        	memw
4008b6f6:	0348      	l32i.n	a4, a3, 0
4008b6f8:	120c      	movi.n	a2, 1
4008b6fa:	202420        	or	a2, a4, a2
4008b6fd:	0020c0        	memw
4008b700:	0329      	s32i.n	a2, a3, 0
4008b702:	f01d      	retw.n
4008b704:	1028      	l32i.n	a2, a0, 4
4008b706:	5c3ff5        	call12	400e7b04 <_svfiprintf_r+0x10dc>
4008b709:	3ff510        	f64cmph	a15, a5, a1, 3
4008b70c:	ff          	.byte 0xff
4008b70d:	ff          	.byte 0xff
4008b70e:	1f          	.byte 0x1f
4008b70f:	00fc      	bnez.n	a0, 4008b743 <BT_tx_if_init+0xbf>
4008b711:	034000        	lsi	f0, a0, 12
4008b714:	ff          	.byte 0xff
4008b715:	ffff07        	bbsi	a15, 16, 4008b718 <BT_tx_if_init+0x94>
4008b718:	009800        	all4	b0, b8:b9:b10:b11
4008b71b:	105800        	and	a5, a8, a0
4008b71e:	ff3ff5        	call12	4008ab1c <multi_heap_realloc_impl+0x150>
4008b721:	ffff03        	lsi	f0, a15, 0x3fc
4008b724:	f51020        	extui	a1, a2, 16, 16
4008b727:	3f          	.byte 0x3f
4008b728:	c07c      	movi.n	a0, -4
4008b72a:	003ff5        	call12	4008bb28 <unforce_wifi_mode+0x38>
4008b72d:	00a100        	any8	b0, b0:b1:b2:b3:b4:b5:b6:b7
4008b730:	f5c090        	extui	a12, a9, 16, 16
4008b733:	3f          	.byte 0x3f
4008b734:	ff          	.byte 0xff
4008b735:	ff          	.byte 0xff
4008b736:	ff          	.byte 0xff
4008b737:	0000c1        	l32r	a12, 4004b738 <lld_pdu_pack+0xc24>
4008b73a:	ff3200        	f64cmph	a3, a2, a0, 15
4008b73d:	ff          	.byte 0xff
4008b73e:	0f          	.byte 0xf
4008b73f:	fe          	.byte 0xfe
4008b740:	700000        	lsi	f0, a0, 0x1c0
4008b743:	c08000        	sub	a8, a0, a0
4008b746:	ff3ff5        	call12	4008ab44 <multi_heap_realloc_impl+0x178>
4008b749:	fffe00        	f64cmph	a15, a14, a0, 15
4008b74c:	01d400        	slli	a13, a4, 32
4008b74f:	c0d000        	sub	a13, a0, a0
4008b752:	ff3ff5        	call12	4008ab50 <multi_heap_realloc_impl+0x184>
4008b755:	ff          	.byte 0xff
4008b756:	00ff81        	l32r	a8, 4004bb54 <lld_pdu_pack+0x1040>
4008b759:	001800        	movsp	a0, a8
4008b75c:	104c      	movi.n	a0, 65
4008b75e:	ff3ff5        	call12	4008ab5c <multi_heap_realloc_impl+0x190>
4008b761:	ffff83        	lsi	f8, a15, 0x3fc
4008b764:	007800        	waiti	8
4008b767:	ffff00        	f64cmph	a15, a15, a0, 15
4008b76a:	ff          	.byte 0xff
4008b76b:	fffff0        	f64cmph	a15, a15, a15, 15
4008b76e:	ff          	.byte 0xff
4008b76f:	cf          	.byte 0xcf
4008b770:	ff          	.byte 0xff
4008b771:	ff          	.byte 0xff
4008b772:	ff          	.byte 0xff
4008b773:	1f          	.byte 0x1f
4008b774:	f5c084        	lsi	f8, a0, 0x3d4
4008b777:	3f          	.byte 0x3f
4008b778:	ff          	.byte 0xff
4008b779:	7f          	.byte 0x7f
4008b77a:	00ffe0        	lsi	f14, a15, 0
4008b77d:	001880        	movsp	a8, a8
4008b780:	ff          	.byte 0xff
4008b781:	ffff81        	l32r	a8, 4008b780 <BT_tx_if_init+0xfc>
4008b784:	001e00        	movsp	a0, a14
4008b787:	ffff00        	f64cmph	a15, a15, a0, 15
4008b78a:	3f          	.byte 0x3f
4008b78b:	fff8      	l32i.n	a15, a15, 60
4008b78d:	ff          	.byte 0xff
4008b78e:	24fff0        	extui	a15, a15, 15, 3
4008b791:	600321        	l32r	a2, 400637a0 <__ltdf2+0x10>
4008b794:	f51084        	lsi	f8, a0, 0x3d4
4008b797:	3f          	.byte 0x3f
4008b798:	fb0000        	f64addc	a0, a0, 0, 0
	...

4008b79c <BT_init_rx_filters>:
4008b79c:	004136        	entry	a1, 32
4008b79f:	ffd991        	l32r	a9, 4008b704 <BT_tx_if_init+0x80>
4008b7a2:	ffd981        	l32r	a8, 4008b708 <BT_tx_if_init+0x84>
4008b7a5:	7a1c      	movi.n	a10, 23
4008b7a7:	0020c0        	memw
4008b7aa:	09a9      	s32i.n	a10, a9, 0
4008b7ac:	0020c0        	memw
4008b7af:	08a8      	l32i.n	a10, a8, 0
4008b7b1:	ffd691        	l32r	a9, 4008b70c <BT_tx_if_init+0x88>
4008b7b4:	ffdab1        	l32r	a11, 4008b71c <BT_tx_if_init+0x98>
4008b7b7:	10aa90        	and	a10, a10, a9
4008b7ba:	ffd591        	l32r	a9, 4008b710 <BT_tx_if_init+0x8c>
4008b7bd:	602020        	neg	a2, a2
4008b7c0:	209a90        	or	a9, a10, a9
4008b7c3:	0020c0        	memw
4008b7c6:	0899      	s32i.n	a9, a8, 0
4008b7c8:	0020c0        	memw
4008b7cb:	08a8      	l32i.n	a10, a8, 0
4008b7cd:	ffd191        	l32r	a9, 4008b714 <BT_tx_if_init+0x90>
4008b7d0:	542020        	extui	a2, a2, 0, 6
4008b7d3:	10aa90        	and	a10, a10, a9
4008b7d6:	ffd091        	l32r	a9, 4008b718 <BT_tx_if_init+0x94>
4008b7d9:	209a90        	or	a9, a10, a9
4008b7dc:	0020c0        	memw
4008b7df:	0899      	s32i.n	a9, a8, 0
4008b7e1:	0020c0        	memw
4008b7e4:	0b98      	l32i.n	a9, a11, 0
4008b7e6:	ffce81        	l32r	a8, 4008b720 <BT_tx_if_init+0x9c>
4008b7e9:	ffcea1        	l32r	a10, 4008b724 <BT_tx_if_init+0xa0>
4008b7ec:	109980        	and	a9, a9, a8
4008b7ef:	e72981        	l32r	a8, 40085494 <coex_force_wifi_mode+0x2d8>
4008b7f2:	208980        	or	a8, a9, a8
4008b7f5:	0020c0        	memw
4008b7f8:	0b89      	s32i.n	a8, a11, 0
4008b7fa:	0020c0        	memw
4008b7fd:	0a98      	l32i.n	a9, a10, 0
4008b7ff:	c0af82        	movi	a8, -64
4008b802:	109980        	and	a9, a9, a8
4008b805:	202290        	or	a2, a2, a9
4008b808:	ffc881        	l32r	a8, 4008b728 <BT_tx_if_init+0xa4>
4008b80b:	0020c0        	memw
4008b80e:	0a29      	s32i.n	a2, a10, 0
4008b810:	0020c0        	memw
4008b813:	08a8      	l32i.n	a10, a8, 0
4008b815:	e71d21        	l32r	a2, 4008548c <coex_force_wifi_mode+0x2d0>
4008b818:	ffc691        	l32r	a9, 4008b730 <BT_tx_if_init+0xac>
4008b81b:	10ba20        	and	a11, a10, a2
4008b81e:	ffc3a1        	l32r	a10, 4008b72c <BT_tx_if_init+0xa8>
4008b821:	20aba0        	or	a10, a11, a10
4008b824:	0020c0        	memw
4008b827:	08a9      	s32i.n	a10, a8, 0
4008b829:	0020c0        	memw
4008b82c:	09b8      	l32i.n	a11, a9, 0
4008b82e:	ffc1a1        	l32r	a10, 4008b734 <BT_tx_if_init+0xb0>
4008b831:	10bba0        	and	a11, a11, a10
4008b834:	ffc1a1        	l32r	a10, 4008b738 <BT_tx_if_init+0xb4>
4008b837:	20aba0        	or	a10, a11, a10
4008b83a:	0020c0        	memw
4008b83d:	09a9      	s32i.n	a10, a9, 0
4008b83f:	0020c0        	memw
4008b842:	09b8      	l32i.n	a11, a9, 0
4008b844:	ffbea1        	l32r	a10, 4008b73c <BT_tx_if_init+0xb8>
4008b847:	10bba0        	and	a11, a11, a10
4008b84a:	ffbda1        	l32r	a10, 4008b740 <BT_tx_if_init+0xbc>
4008b84d:	20aba0        	or	a10, a11, a10
4008b850:	0020c0        	memw
4008b853:	09a9      	s32i.n	a10, a9, 0
4008b855:	ffbb91        	l32r	a9, 4008b744 <BT_tx_if_init+0xc0>
4008b858:	ffbca1        	l32r	a10, 4008b748 <BT_tx_if_init+0xc4>
4008b85b:	0020c0        	memw
4008b85e:	09b8      	l32i.n	a11, a9, 0
4008b860:	ffbcc1        	l32r	a12, 4008b750 <BT_tx_if_init+0xcc>
4008b863:	10bba0        	and	a11, a11, a10
4008b866:	ffb9a1        	l32r	a10, 4008b74c <BT_tx_if_init+0xc8>
4008b869:	20aba0        	or	a10, a11, a10
4008b86c:	0020c0        	memw
4008b86f:	09a9      	s32i.n	a10, a9, 0
4008b871:	0020c0        	memw
4008b874:	0cb8      	l32i.n	a11, a12, 0
4008b876:	00aea2        	movi	a10, 0xfffffe00
4008b879:	10bba0        	and	a11, a11, a10
4008b87c:	d4a1a2        	movi	a10, 0x1d4
4008b87f:	20aba0        	or	a10, a11, a10
4008b882:	0020c0        	memw
4008b885:	0ca9      	s32i.n	a10, a12, 0
4008b887:	0020c0        	memw
4008b88a:	09b8      	l32i.n	a11, a9, 0
4008b88c:	ffb2a1        	l32r	a10, 4008b754 <BT_tx_if_init+0xd0>
4008b88f:	ffb3c1        	l32r	a12, 4008b75c <BT_tx_if_init+0xd8>
4008b892:	10bba0        	and	a11, a11, a10
4008b895:	ffb0a1        	l32r	a10, 4008b758 <BT_tx_if_init+0xd4>
4008b898:	20aba0        	or	a10, a11, a10
4008b89b:	0020c0        	memw
4008b89e:	09a9      	s32i.n	a10, a9, 0
4008b8a0:	0020c0        	memw
4008b8a3:	0cb8      	l32i.n	a11, a12, 0
4008b8a5:	ffaea1        	l32r	a10, 4008b760 <BT_tx_if_init+0xdc>
4008b8a8:	10bba0        	and	a11, a11, a10
4008b8ab:	ffaea1        	l32r	a10, 4008b764 <BT_tx_if_init+0xe0>
4008b8ae:	20aba0        	or	a10, a11, a10
4008b8b1:	0020c0        	memw
4008b8b4:	0ca9      	s32i.n	a10, a12, 0
4008b8b6:	0020c0        	memw
4008b8b9:	08b8      	l32i.n	a11, a8, 0
4008b8bb:	ffaba1        	l32r	a10, 4008b768 <BT_tx_if_init+0xe4>
4008b8be:	10bba0        	and	a11, a11, a10
4008b8c1:	d4eaa1        	l32r	a10, 40080c6c <_init_end+0x86c>
4008b8c4:	20aba0        	or	a10, a11, a10
4008b8c7:	0020c0        	memw
4008b8ca:	08a9      	s32i.n	a10, a8, 0
4008b8cc:	0020c0        	memw
4008b8cf:	09b8      	l32i.n	a11, a9, 0
4008b8d1:	c1afa2        	movi	a10, -63
4008b8d4:	10bba0        	and	a11, a11, a10
4008b8d7:	8a0c      	movi.n	a10, 8
4008b8d9:	20aba0        	or	a10, a11, a10
4008b8dc:	0020c0        	memw
4008b8df:	09a9      	s32i.n	a10, a9, 0
4008b8e1:	0020c0        	memw
4008b8e4:	08b8      	l32i.n	a11, a8, 0
4008b8e6:	ffa1a1        	l32r	a10, 4008b76c <BT_tx_if_init+0xe8>
4008b8e9:	10aba0        	and	a10, a11, a10
4008b8ec:	0020c0        	memw
4008b8ef:	08a9      	s32i.n	a10, a8, 0
4008b8f1:	0020c0        	memw
4008b8f4:	09a8      	l32i.n	a10, a9, 0
4008b8f6:	ff9e81        	l32r	a8, 4008b770 <BT_tx_if_init+0xec>
4008b8f9:	10ba80        	and	a11, a10, a8
4008b8fc:	d36ca1        	l32r	a10, 400806ac <_init_end+0x2ac>
4008b8ff:	ff9d81        	l32r	a8, 4008b774 <BT_tx_if_init+0xf0>
4008b902:	20aba0        	or	a10, a11, a10
4008b905:	0020c0        	memw
4008b908:	09a9      	s32i.n	a10, a9, 0
4008b90a:	0020c0        	memw
4008b90d:	08a8      	l32i.n	a10, a8, 0
4008b90f:	ff9a91        	l32r	a9, 4008b778 <BT_tx_if_init+0xf4>
4008b912:	e6e5b1        	l32r	a11, 400854a8 <coex_force_wifi_mode+0x2ec>
4008b915:	10aa90        	and	a10, a10, a9
4008b918:	ff9991        	l32r	a9, 4008b77c <BT_tx_if_init+0xf8>
4008b91b:	209a90        	or	a9, a10, a9
4008b91e:	0020c0        	memw
4008b921:	0899      	s32i.n	a9, a8, 0
4008b923:	0020c0        	memw
4008b926:	08a8      	l32i.n	a10, a8, 0
4008b928:	ff9691        	l32r	a9, 4008b780 <BT_tx_if_init+0xfc>
4008b92b:	10aa90        	and	a10, a10, a9
4008b92e:	ff9591        	l32r	a9, 4008b784 <BT_tx_if_init+0x100>
4008b931:	209a90        	or	a9, a10, a9
4008b934:	0020c0        	memw
4008b937:	0899      	s32i.n	a9, a8, 0
4008b939:	0020c0        	memw
4008b93c:	08a8      	l32i.n	a10, a8, 0
4008b93e:	d50f91        	l32r	a9, 40080d7c <_init_end+0x97c>
4008b941:	109a90        	and	a9, a10, a9
4008b944:	0020c0        	memw
4008b947:	0899      	s32i.n	a9, a8, 0
4008b949:	0020c0        	memw
4008b94c:	08a8      	l32i.n	a10, a8, 0
4008b94e:	ff8e91        	l32r	a9, 4008b788 <BT_tx_if_init+0x104>
4008b951:	10aa90        	and	a10, a10, a9
4008b954:	d4d791        	l32r	a9, 40080cb0 <_init_end+0x8b0>
4008b957:	209a90        	or	a9, a10, a9
4008b95a:	0020c0        	memw
4008b95d:	0899      	s32i.n	a9, a8, 0
4008b95f:	0020c0        	memw
4008b962:	0b98      	l32i.n	a9, a11, 0
4008b964:	ff8a81        	l32r	a8, 4008b78c <BT_tx_if_init+0x108>
4008b967:	ff8aa1        	l32r	a10, 4008b790 <BT_tx_if_init+0x10c>
4008b96a:	109980        	and	a9, a9, a8
4008b96d:	d4f281        	l32r	a8, 40080d38 <_init_end+0x938>
4008b970:	208980        	or	a8, a9, a8
4008b973:	0020c0        	memw
4008b976:	0b89      	s32i.n	a8, a11, 0
4008b978:	0020c0        	memw
4008b97b:	0ab8      	l32i.n	a11, a10, 0
4008b97d:	00a282        	movi	a8, 0x200
4008b980:	ff8591        	l32r	a9, 4008b794 <BT_tx_if_init+0x110>
4008b983:	208b80        	or	a8, a11, a8
4008b986:	0020c0        	memw
4008b989:	0a89      	s32i.n	a8, a10, 0
4008b98b:	0020c0        	memw
4008b98e:	0988      	l32i.n	a8, a9, 0
4008b990:	102820        	and	a2, a8, a2
4008b993:	ff8181        	l32r	a8, 4008b798 <BT_tx_if_init+0x114>
4008b996:	202280        	or	a2, a2, a8
4008b999:	0020c0        	memw
4008b99c:	0929      	s32i.n	a2, a9, 0
4008b99e:	f01d      	retw.n
4008b9a0:	f51000        	extui	a1, a0, 16, 16
4008b9a3:	3f          	.byte 0x3f
4008b9a4:	f51014        	lsi	f1, a0, 0x3d4
4008b9a7:	3f          	.byte 0x3f
4008b9a8:	018021        	l32r	a2, 4004bfa8 <lld_pdu_pack+0x1494>
4008b9ab:	104400        	and	a4, a4, a0
4008b9ae:	403ff5        	call12	400cbdac <_rtc_text_end+0xbdac>
4008b9b1:	3ff510        	f64cmph	a15, a5, a1, 3
4008b9b4:	ff          	.byte 0xff
4008b9b5:	ff          	.byte 0xff
4008b9b6:	1f          	.byte 0x1f
4008b9b7:	01f8      	l32i.n	a15, a1, 0
4008b9b9:	ffe000        	f64cmph	a14, a0, a0, 15
4008b9bc:	199a      	add.n	a1, a9, a9
	...

4008b9c0 <bt_bb_init_cmplx_reg>:
4008b9c0:	004136        	entry	a1, 32
4008b9c3:	fff781        	l32r	a8, 4008b9a0 <BT_init_rx_filters+0x204>
4008b9c6:	c3af22        	movi	a2, -61
4008b9c9:	0020c0        	memw
4008b9cc:	002892        	l32i	a9, a8, 0
4008b9cf:	fff7a1        	l32r	a10, 4008b9ac <BT_init_rx_filters+0x210>
4008b9d2:	102920        	and	a2, a9, a2
4008b9d5:	0020c0        	memw
4008b9d8:	006822        	s32i	a2, a8, 0
4008b9db:	fff381        	l32r	a8, 4008b9a8 <BT_init_rx_filters+0x20c>
4008b9de:	fff121        	l32r	a2, 4008b9a4 <BT_init_rx_filters+0x208>
4008b9e1:	c8a0c2        	movi	a12, 200
4008b9e4:	0020c0        	memw
4008b9e7:	0289      	s32i.n	a8, a2, 0
4008b9e9:	0020c0        	memw
4008b9ec:	0a88      	l32i.n	a8, a10, 0
4008b9ee:	00af22        	movi	a2, 0xffffff00
4008b9f1:	109820        	and	a9, a8, a2
4008b9f4:	a0a082        	movi	a8, 160
4008b9f7:	ffee21        	l32r	a2, 4008b9b0 <BT_init_rx_filters+0x214>
4008b9fa:	208980        	or	a8, a9, a8
4008b9fd:	0020c0        	memw
4008ba00:	0a89      	s32i.n	a8, a10, 0
4008ba02:	0020c0        	memw
4008ba05:	02a8      	l32i.n	a10, a2, 0
4008ba07:	ffeb91        	l32r	a9, 4008b9b4 <BT_init_rx_filters+0x218>
4008ba0a:	180c      	movi.n	a8, 1
4008ba0c:	109a90        	and	a9, a10, a9
4008ba0f:	0020c0        	memw
4008ba12:	0299      	s32i.n	a9, a2, 0
4008ba14:	0020c0        	memw
4008ba17:	0298      	l32i.n	a9, a2, 0
4008ba19:	08dd      	mov.n	a13, a8
4008ba1b:	208980        	or	a8, a9, a8
4008ba1e:	0020c0        	memw
4008ba21:	0289      	s32i.n	a8, a2, 0
4008ba23:	e8a3b2        	movi	a11, 0x3e8
4008ba26:	22a1a2        	movi	a10, 0x122
4008ba29:	ffc5a5        	call8	4008b684 <BT_tx_if_init>
4008ba2c:	8a3c      	movi.n	a10, 56
4008ba2e:	ffd6e5        	call8	4008b79c <BT_init_rx_filters>
4008ba31:	0020c0        	memw
4008ba34:	0298      	l32i.n	a9, a2, 0
4008ba36:	ffe081        	l32r	a8, 4008b9b8 <BT_init_rx_filters+0x21c>
4008ba39:	109980        	and	a9, a9, a8
4008ba3c:	ffe081        	l32r	a8, 4008b9bc <BT_init_rx_filters+0x220>
4008ba3f:	208980        	or	a8, a9, a8
4008ba42:	0020c0        	memw
4008ba45:	0289      	s32i.n	a8, a2, 0
4008ba47:	f01d      	retw.n
4008ba49:	000000        	ill
4008ba4c:	09c8      	l32i.n	a12, a9, 0
4008ba4e:	3ffc      	bnez.n	a15, 4008ba85 <force_wifi_mode+0x25>
4008ba50:	0310d0        	rsr.acclo	a13
4008ba53:	130060        	wsr.lbeg	a6
4008ba56:	c46003        	lsi	f0, a0, 0x310
4008ba59:	600041        	l32r	a4, 40063a5c <__mulsc3+0x118>
4008ba5c:	f5d040        	extui	a13, a4, 16, 16
4008ba5f:	3f          	.byte 0x3f

4008ba60 <force_wifi_mode>:
4008ba60:	004136        	entry	a1, 32
4008ba63:	fffa31        	l32r	a3, 4008ba4c <bt_bb_init_cmplx_reg+0x8c>
4008ba66:	0388      	l32i.n	a8, a3, 0
4008ba68:	080856        	bnez	a8, 4008baec <force_wifi_mode+0x8c>
4008ba6b:	129c      	beqz.n	a2, 4008ba80 <force_wifi_mode+0x20>
4008ba6d:	e68a81        	l32r	a8, 40085498 <coex_force_wifi_mode+0x2dc>
4008ba70:	e27c      	movi.n	a2, -2
4008ba72:	0020c0        	memw
4008ba75:	0898      	l32i.n	a9, a8, 0
4008ba77:	102920        	and	a2, a9, a2
4008ba7a:	0020c0        	memw
4008ba7d:	006822        	s32i	a2, a8, 0
4008ba80:	fff4b1        	l32r	a11, 4008ba50 <bt_bb_init_cmplx_reg+0x90>
4008ba83:	0faf82        	movi	a8, -241
4008ba86:	0020c0        	memw
4008ba89:	002b92        	l32i	a9, a11, 0
4008ba8c:	fff2a1        	l32r	a10, 4008ba54 <bt_bb_init_cmplx_reg+0x94>
4008ba8f:	109980        	and	a9, a9, a8
4008ba92:	0020c0        	memw
4008ba95:	006b92        	s32i	a9, a11, 0
4008ba98:	0020c0        	memw
4008ba9b:	002a22        	l32i	a2, a10, 0
4008ba9e:	ff29b1        	l32r	a11, 4008b744 <BT_tx_if_init+0xc0>
4008baa1:	108280        	and	a8, a2, a8
4008baa4:	0020c0        	memw
4008baa7:	0a89      	s32i.n	a8, a10, 0
4008baa9:	0020c0        	memw
4008baac:	0b98      	l32i.n	a9, a11, 0
4008baae:	3faf82        	movi	a8, -193
4008bab1:	109980        	and	a9, a9, a8
4008bab4:	80a082        	movi	a8, 128
4008bab7:	208980        	or	a8, a9, a8
4008baba:	ffe7a1        	l32r	a10, 4008ba58 <bt_bb_init_cmplx_reg+0x98>
4008babd:	0020c0        	memw
4008bac0:	0b89      	s32i.n	a8, a11, 0
4008bac2:	0020c0        	memw
4008bac5:	0a28      	l32i.n	a2, a10, 0
4008bac7:	bfaf82        	movi	a8, -65
4008baca:	108280        	and	a8, a2, a8
4008bacd:	0020c0        	memw
4008bad0:	0a89      	s32i.n	a8, a10, 0
4008bad2:	f6c665        	call8	40082738 <phy_force_wifi_chan>
4008bad5:	ffe191        	l32r	a9, 4008ba5c <bt_bb_init_cmplx_reg+0x9c>
4008bad8:	d2e981        	l32r	a8, 4008067c <_init_end+0x27c>
4008badb:	0020c0        	memw
4008bade:	0928      	l32i.n	a2, a9, 0
4008bae0:	208280        	or	a8, a2, a8
4008bae3:	0020c0        	memw
4008bae6:	0989      	s32i.n	a8, a9, 0
4008bae8:	120c      	movi.n	a2, 1
4008baea:	0329      	s32i.n	a2, a3, 0
4008baec:	f01d      	retw.n
	...

4008baf0 <unforce_wifi_mode>:
4008baf0:	004136        	entry	a1, 32
4008baf3:	ffd621        	l32r	a2, 4008ba4c <bt_bb_init_cmplx_reg+0x8c>
4008baf6:	0288      	l32i.n	a8, a2, 0
4008baf8:	681866        	bnei	a8, 1, 4008bb64 <unforce_wifi_mode+0x74>
4008bafb:	e5ad81        	l32r	a8, 400851b0 <coex_core_bb_reset_unlock+0x13c>
4008bafe:	0020c0        	memw
4008bb01:	002892        	l32i	a9, a8, 0
4008bb04:	0879e7        	bbci	a9, 30, 4008bb10 <unforce_wifi_mode+0x20>
4008bb07:	0020c0        	memw
4008bb0a:	002882        	l32i	a8, a8, 0
4008bb0d:	53f847        	bbsi	a8, 20, 4008bb64 <unforce_wifi_mode+0x74>
4008bb10:	f6b7a5        	call8	4008268c <phy_unforce_wifi_chan>
4008bb13:	ff0ca1        	l32r	a10, 4008b744 <BT_tx_if_init+0xc0>
4008bb16:	3faf82        	movi	a8, -193
4008bb19:	0020c0        	memw
4008bb1c:	002ab2        	l32i	a11, a10, 0
4008bb1f:	ffce91        	l32r	a9, 4008ba58 <bt_bb_init_cmplx_reg+0x98>
4008bb22:	108b80        	and	a8, a11, a8
4008bb25:	0020c0        	memw
4008bb28:	006a82        	s32i	a8, a10, 0
4008bb2b:	0020c0        	memw
4008bb2e:	0029b2        	l32i	a11, a9, 0
4008bb31:	084c      	movi.n	a8, 64
4008bb33:	ffcaa1        	l32r	a10, 4008ba5c <bt_bb_init_cmplx_reg+0x9c>
4008bb36:	208b80        	or	a8, a11, a8
4008bb39:	0020c0        	memw
4008bb3c:	0989      	s32i.n	a8, a9, 0
4008bb3e:	0020c0        	memw
4008bb41:	0ab8      	l32i.n	a11, a10, 0
4008bb43:	d27781        	l32r	a8, 40080520 <_init_end+0x120>
4008bb46:	e65491        	l32r	a9, 40085498 <coex_force_wifi_mode+0x2dc>
4008bb49:	108b80        	and	a8, a11, a8
4008bb4c:	0020c0        	memw
4008bb4f:	0a89      	s32i.n	a8, a10, 0
4008bb51:	0020c0        	memw
4008bb54:	09a8      	l32i.n	a10, a9, 0
4008bb56:	180c      	movi.n	a8, 1
4008bb58:	208a80        	or	a8, a10, a8
4008bb5b:	0020c0        	memw
4008bb5e:	0989      	s32i.n	a8, a9, 0
4008bb60:	080c      	movi.n	a8, 0
4008bb62:	0289      	s32i.n	a8, a2, 0
4008bb64:	f01d      	retw.n
	...

4008bb68 <rtc_wdt_get_protect_status>:
4008bb68:	004136        	entry	a1, 32
4008bb6b:	d42a21        	l32r	a2, 40080c14 <_init_end+0x814>
4008bb6e:	0020c0        	memw
4008bb71:	0288      	l32i.n	a8, a2, 0
4008bb73:	d42921        	l32r	a2, 40080c18 <_init_end+0x818>
4008bb76:	882a      	add.n	a8, a8, a2
4008bb78:	020c      	movi.n	a2, 0
4008bb7a:	190c      	movi.n	a9, 1
4008bb7c:	932980        	movnez	a2, a9, a8
4008bb7f:	f01d      	retw.n
4008bb81:	000000        	ill

4008bb84 <rtc_wdt_protect_off>:
4008bb84:	004136        	entry	a1, 32
4008bb87:	d25c91        	l32r	a9, 400804f8 <_init_end+0xf8>
4008bb8a:	d42281        	l32r	a8, 40080c14 <_init_end+0x814>
4008bb8d:	0020c0        	memw
4008bb90:	0899      	s32i.n	a9, a8, 0
4008bb92:	f01d      	retw.n

4008bb94 <rtc_wdt_protect_on>:
4008bb94:	004136        	entry	a1, 32
4008bb97:	090c      	movi.n	a9, 0
4008bb99:	d41e81        	l32r	a8, 40080c14 <_init_end+0x814>
4008bb9c:	0020c0        	memw
4008bb9f:	0899      	s32i.n	a9, a8, 0
4008bba1:	f01d      	retw.n
	...

4008bba4 <rtc_wdt_enable>:
4008bba4:	004136        	entry	a1, 32
4008bba7:	d41d91        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bbaa:	0020c0        	memw
4008bbad:	09a8      	l32i.n	a10, a9, 0
4008bbaf:	d2b381        	l32r	a8, 4008067c <_init_end+0x27c>
4008bbb2:	208a80        	or	a8, a10, a8
4008bbb5:	0020c0        	memw
4008bbb8:	0989      	s32i.n	a8, a9, 0
4008bbba:	f03d      	nop.n
4008bbbc:	f03d      	nop.n
4008bbbe:	f03d      	nop.n
4008bbc0:	f03d      	nop.n
4008bbc2:	d41791        	l32r	a9, 40080c20 <_init_end+0x820>
4008bbc5:	0020c0        	memw
4008bbc8:	09a8      	l32i.n	a10, a9, 0
4008bbca:	d41681        	l32r	a8, 40080c24 <_init_end+0x824>
4008bbcd:	208a80        	or	a8, a10, a8
4008bbd0:	0020c0        	memw
4008bbd3:	0989      	s32i.n	a8, a9, 0
4008bbd5:	f01d      	retw.n
	...

4008bbd8 <rtc_wdt_flashboot_mode_enable>:
4008bbd8:	004136        	entry	a1, 32
4008bbdb:	d41191        	l32r	a9, 40080c20 <_init_end+0x820>
4008bbde:	0020c0        	memw
4008bbe1:	09a8      	l32i.n	a10, a9, 0
4008bbe3:	00a482        	movi	a8, 0x400
4008bbe6:	208a80        	or	a8, a10, a8
4008bbe9:	0020c0        	memw
4008bbec:	0989      	s32i.n	a8, a9, 0
4008bbee:	f01d      	retw.n

4008bbf0 <rtc_wdt_feed>:
4008bbf0:	004136        	entry	a1, 32
4008bbf3:	fff765        	call8	4008bb68 <rtc_wdt_get_protect_status>
4008bbf6:	202aa0        	or	a2, a10, a10
4008bbf9:	002a16        	beqz	a10, 4008bbff <rtc_wdt_feed+0xf>
4008bbfc:	fff865        	call8	4008bb84 <rtc_wdt_protect_off>
4008bbff:	d40791        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bc02:	0020c0        	memw
4008bc05:	0029a2        	l32i	a10, a9, 0
4008bc08:	d29d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008bc0b:	208a80        	or	a8, a10, a8
4008bc0e:	0020c0        	memw
4008bc11:	0989      	s32i.n	a8, a9, 0
4008bc13:	128c      	beqz.n	a2, 4008bc18 <rtc_wdt_feed+0x28>
4008bc15:	fff7e5        	call8	4008bb94 <rtc_wdt_protect_on>
4008bc18:	f01d      	retw.n
	...

4008bc1c <rtc_wdt_set_time>:
4008bc1c:	004136        	entry	a1, 32
4008bc1f:	5142f6        	bgeui	a2, 4, 4008bc74 <rtc_wdt_set_time+0x58>
4008bc22:	00cb65        	call8	4008c8d8 <rtc_clk_slow_freq_get_hz>
4008bc25:	a2b3a0        	muluh	a11, a3, a10
4008bc28:	d314c1        	l32r	a12, 40080878 <_init_end+0x478>
4008bc2b:	d23ad1        	l32r	a13, 40080514 <_init_end+0x114>
4008bc2e:	82a3a0        	mull	a10, a3, a10
4008bc31:	d27c81        	l32r	a8, 40080624 <_init_end+0x224>
4008bc34:	0008e0        	callx8	a8
4008bc37:	00d256        	bnez	a2, 4008bc48 <rtc_wdt_set_time+0x2c>
4008bc3a:	d3fb21        	l32r	a2, 40080c28 <_init_end+0x828>
4008bc3d:	0020c0        	memw
4008bc40:	0062a2        	s32i	a10, a2, 0
4008bc43:	00a022        	movi	a2, 0
4008bc46:	f01d      	retw.n
4008bc48:	0c1266        	bnei	a2, 1, 4008bc58 <rtc_wdt_set_time+0x3c>
4008bc4b:	d3f821        	l32r	a2, 40080c2c <_init_end+0x82c>
4008bc4e:	0020c0        	memw
4008bc51:	02a9      	s32i.n	a10, a2, 0
4008bc53:	020c      	movi.n	a2, 0
4008bc55:	f01d      	retw.n
4008bc57:	226600        	orb	b6, b6, b0
4008bc5a:	210c      	movi.n	a1, 2
4008bc5c:	c0d3f5        	call12	4004c99c <llm_hci_cmd_handler_tab_p_get+0x7c>
4008bc5f:	a90020        	lsi	f2, a0, 0x2a4
4008bc62:	020c02        	l8ui	a0, a12, 2
4008bc65:	f01d      	retw.n
4008bc67:	f32100        	lsi	f0, a1, 0x3cc
4008bc6a:	20c0d3        	ssip	f13, a0, 128
4008bc6d:	02a900        	andb	b10, b9, b0
4008bc70:	020c      	movi.n	a2, 0
4008bc72:	f01d      	retw.n
4008bc74:	02a122        	movi	a2, 0x102
4008bc77:	f01d      	retw.n
4008bc79:	000000        	ill

4008bc7c <rtc_wdt_set_stage>:
4008bc7c:	004136        	entry	a1, 32
4008bc7f:	01a082        	movi	a8, 1
4008bc82:	0242f6        	bgeui	a2, 4, 4008bc88 <rtc_wdt_set_stage+0xc>
4008bc85:	00a082        	movi	a8, 0
4008bc88:	749080        	extui	a9, a8, 0, 8
4008bc8b:	01a082        	movi	a8, 1
4008bc8e:	0253f6        	bgeui	a3, 5, 4008bc94 <rtc_wdt_set_stage+0x18>
4008bc91:	00a082        	movi	a8, 0
4008bc94:	748080        	extui	a8, a8, 0, 8
4008bc97:	208980        	or	a8, a9, a8
4008bc9a:	08a856        	bnez	a8, 4008bd28 <rtc_wdt_set_stage+0xac>
4008bc9d:	f2dc      	bnez.n	a2, 4008bcc0 <rtc_wdt_set_stage+0x44>
4008bc9f:	d3e081        	l32r	a8, 40080c20 <_init_end+0x820>
4008bca2:	0020c0        	memw
4008bca5:	0898      	l32i.n	a9, a8, 0
4008bca7:	d3e421        	l32r	a2, 40080c38 <_init_end+0x838>
4008bcaa:	102920        	and	a2, a9, a2
4008bcad:	243030        	extui	a3, a3, 0, 3
4008bcb0:	013340        	slli	a3, a3, 28
4008bcb3:	203230        	or	a3, a2, a3
4008bcb6:	0020c0        	memw
4008bcb9:	0839      	s32i.n	a3, a8, 0
4008bcbb:	020c      	movi.n	a2, 0
4008bcbd:	f01d      	retw.n
4008bcbf:	126600        	andbc	b6, b6, b0
4008bcc2:	d78120        	lsi	f2, a1, 0x35c
4008bcc5:	20c0d3        	ssip	f13, a0, 128
4008bcc8:	089800        	lsx	f9, a8, a0
4008bccb:	d3dc21        	l32r	a2, 40080c3c <_init_end+0x83c>
4008bcce:	102920        	and	a2, a9, a2
4008bcd1:	243030        	extui	a3, a3, 0, 3
4008bcd4:	013370        	slli	a3, a3, 25
4008bcd7:	202230        	or	a2, a2, a3
4008bcda:	0020c0        	memw
4008bcdd:	0829      	s32i.n	a2, a8, 0
4008bcdf:	020c      	movi.n	a2, 0
4008bce1:	f01d      	retw.n
4008bce3:	226600        	orb	b6, b6, b0
4008bce6:	ce8120        	f64iter	a8, a1, a2, 0, 1
4008bce9:	20c0d3        	ssip	f13, a0, 128
4008bcec:	089800        	lsx	f9, a8, a0
4008bcef:	d3d421        	l32r	a2, 40080c40 <_init_end+0x840>
4008bcf2:	102920        	and	a2, a9, a2
4008bcf5:	243030        	extui	a3, a3, 0, 3
4008bcf8:	0133a0        	slli	a3, a3, 22
4008bcfb:	202230        	or	a2, a2, a3
4008bcfe:	0020c0        	memw
4008bd01:	0829      	s32i.n	a2, a8, 0
4008bd03:	020c      	movi.n	a2, 0
4008bd05:	f01d      	retw.n
4008bd07:	c68100        	lsi	f0, a1, 0x318
4008bd0a:	20c0d3        	ssip	f13, a0, 128
4008bd0d:	089800        	lsx	f9, a8, a0
4008bd10:	d3cd21        	l32r	a2, 40080c44 <_init_end+0x844>
4008bd13:	102920        	and	a2, a9, a2
4008bd16:	243030        	extui	a3, a3, 0, 3
4008bd19:	0133d0        	slli	a3, a3, 19
4008bd1c:	203230        	or	a3, a2, a3
4008bd1f:	0020c0        	memw
4008bd22:	0839      	s32i.n	a3, a8, 0
4008bd24:	020c      	movi.n	a2, 0
4008bd26:	f01d      	retw.n
4008bd28:	02a122        	movi	a2, 0x102
4008bd2b:	f01d      	retw.n
4008bd2d:	000000        	ill

4008bd30 <rtc_wdt_disable>:
4008bd30:	004136        	entry	a1, 32
4008bd33:	ffe365        	call8	4008bb68 <rtc_wdt_get_protect_status>
4008bd36:	202aa0        	or	a2, a10, a10
4008bd39:	002a16        	beqz	a10, 4008bd3f <rtc_wdt_disable+0xf>
4008bd3c:	ffe465        	call8	4008bb84 <rtc_wdt_protect_off>
4008bd3f:	d3b791        	l32r	a9, 40080c1c <_init_end+0x81c>
4008bd42:	0020c0        	memw
4008bd45:	09a8      	l32i.n	a10, a9, 0
4008bd47:	d24d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008bd4a:	208a80        	or	a8, a10, a8
4008bd4d:	0020c0        	memw
4008bd50:	0989      	s32i.n	a8, a9, 0
4008bd52:	0b0c      	movi.n	a11, 0
4008bd54:	20abb0        	or	a10, a11, a11
4008bd57:	fff265        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd5a:	0b0c      	movi.n	a11, 0
4008bd5c:	1a0c      	movi.n	a10, 1
4008bd5e:	fff1e5        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd61:	0b0c      	movi.n	a11, 0
4008bd63:	2a0c      	movi.n	a10, 2
4008bd65:	fff165        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd68:	0b0c      	movi.n	a11, 0
4008bd6a:	03a0a2        	movi	a10, 3
4008bd6d:	fff0e5        	call8	4008bc7c <rtc_wdt_set_stage>
4008bd70:	d3ac81        	l32r	a8, 40080c20 <_init_end+0x820>
4008bd73:	0020c0        	memw
4008bd76:	08a8      	l32i.n	a10, a8, 0
4008bd78:	ffab92        	movi	a9, 0xfffffbff
4008bd7b:	109a90        	and	a9, a10, a9
4008bd7e:	0020c0        	memw
4008bd81:	0899      	s32i.n	a9, a8, 0
4008bd83:	f03d      	nop.n
4008bd85:	f03d      	nop.n
4008bd87:	f03d      	nop.n
4008bd89:	f03d      	nop.n
4008bd8b:	0020c0        	memw
4008bd8e:	08a8      	l32i.n	a10, a8, 0
4008bd90:	d1e491        	l32r	a9, 40080520 <_init_end+0x120>
4008bd93:	109a90        	and	a9, a10, a9
4008bd96:	0020c0        	memw
4008bd99:	0899      	s32i.n	a9, a8, 0
4008bd9b:	128c      	beqz.n	a2, 4008bda0 <rtc_wdt_disable+0x70>
4008bd9d:	ffdf65        	call8	4008bb94 <rtc_wdt_protect_on>
4008bda0:	f01d      	retw.n
	...

4008bda4 <rtc_wdt_set_length_of_reset_signal>:
4008bda4:	004136        	entry	a1, 32
4008bda7:	01a082        	movi	a8, 1
4008bdaa:	0222f6        	bgeui	a2, 2, 4008bdb0 <rtc_wdt_set_length_of_reset_signal+0xc>
4008bdad:	00a082        	movi	a8, 0
4008bdb0:	749080        	extui	a9, a8, 0, 8
4008bdb3:	01a082        	movi	a8, 1
4008bdb6:	0283f6        	bgeui	a3, 8, 4008bdbc <rtc_wdt_set_length_of_reset_signal+0x18>
4008bdb9:	00a082        	movi	a8, 0
4008bdbc:	748080        	extui	a8, a8, 0, 8
4008bdbf:	208980        	or	a8, a9, a8
4008bdc2:	042856        	bnez	a8, 4008be08 <rtc_wdt_set_length_of_reset_signal+0x64>
4008bdc5:	f2dc      	bnez.n	a2, 4008bde8 <rtc_wdt_set_length_of_reset_signal+0x44>
4008bdc7:	d39681        	l32r	a8, 40080c20 <_init_end+0x820>
4008bdca:	0020c0        	memw
4008bdcd:	0898      	l32i.n	a9, a8, 0
4008bdcf:	d39e21        	l32r	a2, 40080c48 <_init_end+0x848>
4008bdd2:	102920        	and	a2, a9, a2
4008bdd5:	243030        	extui	a3, a3, 0, 3
4008bdd8:	113350        	slli	a3, a3, 11
4008bddb:	203230        	or	a3, a2, a3
4008bdde:	0020c0        	memw
4008bde1:	0839      	s32i.n	a3, a8, 0
4008bde3:	020c      	movi.n	a2, 0
4008bde5:	f01d      	retw.n
4008bde7:	8e8100        	f64iter	a8, a1, a0, 0, 0
4008bdea:	20c0d3        	ssip	f13, a0, 128
4008bded:	089800        	lsx	f9, a8, a0
4008bdf0:	d39721        	l32r	a2, 40080c4c <_init_end+0x84c>
4008bdf3:	102920        	and	a2, a9, a2
4008bdf6:	243030        	extui	a3, a3, 0, 3
4008bdf9:	113320        	slli	a3, a3, 14
4008bdfc:	203230        	or	a3, a2, a3
4008bdff:	0020c0        	memw
4008be02:	0839      	s32i.n	a3, a8, 0
4008be04:	020c      	movi.n	a2, 0
4008be06:	f01d      	retw.n
4008be08:	02a122        	movi	a2, 0x102
4008be0b:	f01d      	retw.n
4008be0d:	000000        	ill

4008be10 <rtc_wdt_is_on>:
4008be10:	004136        	entry	a1, 32
4008be13:	d38381        	l32r	a8, 40080c20 <_init_end+0x820>
4008be16:	0020c0        	memw
4008be19:	0888      	l32i.n	a8, a8, 0
4008be1b:	00e896        	bltz	a8, 4008be2d <rtc_wdt_is_on+0x1d>
4008be1e:	d38021        	l32r	a2, 40080c20 <_init_end+0x820>
4008be21:	0020c0        	memw
4008be24:	0228      	l32i.n	a2, a2, 0
4008be26:	0762a7        	bbci	a2, 10, 4008be31 <rtc_wdt_is_on+0x21>
4008be29:	120c      	movi.n	a2, 1
4008be2b:	f01d      	retw.n
4008be2d:	120c      	movi.n	a2, 1
4008be2f:	f01d      	retw.n
4008be31:	020c      	movi.n	a2, 0
4008be33:	f01d      	retw.n
4008be35:	000000        	ill

4008be38 <rtc_init>:
4008be38:	004136        	entry	a1, 32
4008be3b:	d38591        	l32r	a9, 40080c50 <_init_end+0x850>
4008be3e:	0020c0        	memw
4008be41:	0938      	l32i.n	a3, a9, 0
4008be43:	d38481        	l32r	a8, 40080c54 <_init_end+0x854>
4008be46:	108380        	and	a8, a3, a8
4008be49:	0020c0        	memw
4008be4c:	0989      	s32i.n	a8, a9, 0
4008be4e:	f03d      	nop.n
4008be50:	f03d      	nop.n
4008be52:	f03d      	nop.n
4008be54:	f03d      	nop.n
4008be56:	d38081        	l32r	a8, 40080c58 <_init_end+0x858>
4008be59:	0020c0        	memw
4008be5c:	08a8      	l32i.n	a10, a8, 0
4008be5e:	d37f91        	l32r	a9, 40080c5c <_init_end+0x85c>
4008be61:	10aa90        	and	a10, a10, a9
4008be64:	759020        	extui	a9, a2, 16, 8
4008be67:	019980        	slli	a9, a9, 24
4008be6a:	2099a0        	or	a9, a9, a10
4008be6d:	0020c0        	memw
4008be70:	0899      	s32i.n	a9, a8, 0
4008be72:	f03d      	nop.n
4008be74:	f03d      	nop.n
4008be76:	f03d      	nop.n
4008be78:	f03d      	nop.n
4008be7a:	0020c0        	memw
4008be7d:	08a8      	l32i.n	a10, a8, 0
4008be7f:	d37891        	l32r	a9, 40080c60 <_init_end+0x860>
4008be82:	10aa90        	and	a10, a10, a9
4008be85:	749820        	extui	a9, a2, 8, 8
4008be88:	119920        	slli	a9, a9, 14
4008be8b:	2099a0        	or	a9, a9, a10
4008be8e:	0020c0        	memw
4008be91:	0899      	s32i.n	a9, a8, 0
4008be93:	f03d      	nop.n
4008be95:	f03d      	nop.n
4008be97:	f03d      	nop.n
4008be99:	f03d      	nop.n
4008be9b:	0020c0        	memw
4008be9e:	08a8      	l32i.n	a10, a8, 0
4008bea0:	d37191        	l32r	a9, 40080c64 <_init_end+0x864>
4008bea3:	10aa90        	and	a10, a10, a9
4008bea6:	749020        	extui	a9, a2, 0, 8
4008bea9:	1199a0        	slli	a9, a9, 6
4008beac:	2099a0        	or	a9, a9, a10
4008beaf:	0020c0        	memw
4008beb2:	0899      	s32i.n	a9, a8, 0
4008beb4:	f03d      	nop.n
4008beb6:	f03d      	nop.n
4008beb8:	f03d      	nop.n
4008beba:	f03d      	nop.n
4008bebc:	d36b81        	l32r	a8, 40080c68 <_init_end+0x868>
4008bebf:	0020c0        	memw
4008bec2:	0838      	l32i.n	a3, a8, 0
4008bec4:	d36a91        	l32r	a9, 40080c6c <_init_end+0x86c>
4008bec7:	209390        	or	a9, a3, a9
4008beca:	0020c0        	memw
4008becd:	0899      	s32i.n	a9, a8, 0
4008becf:	f03d      	nop.n
4008bed1:	f03d      	nop.n
4008bed3:	f03d      	nop.n
4008bed5:	f03d      	nop.n
4008bed7:	0020c0        	memw
4008beda:	0838      	l32i.n	a3, a8, 0
4008bedc:	d1f491        	l32r	a9, 400806ac <_init_end+0x2ac>
4008bedf:	209390        	or	a9, a3, a9
4008bee2:	0020c0        	memw
4008bee5:	0899      	s32i.n	a9, a8, 0
4008bee7:	f03d      	nop.n
4008bee9:	f03d      	nop.n
4008beeb:	f03d      	nop.n
4008beed:	f03d      	nop.n
4008beef:	d36091        	l32r	a9, 40080c70 <_init_end+0x870>
4008bef2:	0020c0        	memw
4008bef5:	09a8      	l32i.n	a10, a9, 0
4008bef7:	d35181        	l32r	a8, 40080c3c <_init_end+0x83c>
4008befa:	10aa80        	and	a10, a10, a8
4008befd:	d35d81        	l32r	a8, 40080c74 <_init_end+0x874>
4008bf00:	208a80        	or	a8, a10, a8
4008bf03:	0020c0        	memw
4008bf06:	0989      	s32i.n	a8, a9, 0
4008bf08:	f03d      	nop.n
4008bf0a:	f03d      	nop.n
4008bf0c:	f03d      	nop.n
4008bf0e:	f03d      	nop.n
4008bf10:	0020c0        	memw
4008bf13:	0938      	l32i.n	a3, a9, 0
4008bf15:	d34a81        	l32r	a8, 40080c40 <_init_end+0x840>
4008bf18:	108380        	and	a8, a3, a8
4008bf1b:	d357a1        	l32r	a10, 40080c78 <_init_end+0x878>
4008bf1e:	2088a0        	or	a8, a8, a10
4008bf21:	0020c0        	memw
4008bf24:	0989      	s32i.n	a8, a9, 0
4008bf26:	0282a7        	bany	a2, a10, 4008bf2c <rtc_init+0xf4>
4008bf29:	0031c6        	j	4008bff4 <rtc_init+0x1bc>
4008bf2c:	f03d      	nop.n
4008bf2e:	f03d      	nop.n
4008bf30:	f03d      	nop.n
4008bf32:	0020f0        	nop
4008bf35:	d23241        	l32r	a4, 40080800 <_init_end+0x400>
4008bf38:	04ad      	mov.n	a10, a4
4008bf3a:	f5a0e5        	call8	40081948 <esp_dport_access_reg_read>
4008bf3d:	d34f31        	l32r	a3, 40080c7c <_init_end+0x87c>
4008bf40:	10aa30        	and	a10, a10, a3
4008bf43:	0020c0        	memw
4008bf46:	04a9      	s32i.n	a10, a4, 0
4008bf48:	f03d      	nop.n
4008bf4a:	f03d      	nop.n
4008bf4c:	f03d      	nop.n
4008bf4e:	0020f0        	nop
4008bf51:	d22d41        	l32r	a4, 40080808 <_init_end+0x408>
4008bf54:	04ad      	mov.n	a10, a4
4008bf56:	f59f25        	call8	40081948 <esp_dport_access_reg_read>
4008bf59:	10aa30        	and	a10, a10, a3
4008bf5c:	0020c0        	memw
4008bf5f:	04a9      	s32i.n	a10, a4, 0
4008bf61:	f03d      	nop.n
4008bf63:	f03d      	nop.n
4008bf65:	f03d      	nop.n
4008bf67:	f03d      	nop.n
4008bf69:	d34531        	l32r	a3, 40080c80 <_init_end+0x880>
4008bf6c:	03ad      	mov.n	a10, a3
4008bf6e:	f59da5        	call8	40081948 <esp_dport_access_reg_read>
4008bf71:	03af42        	movi	a4, -253
4008bf74:	10aa40        	and	a10, a10, a4
4008bf77:	0020c0        	memw
4008bf7a:	03a9      	s32i.n	a10, a3, 0
4008bf7c:	03ad      	mov.n	a10, a3
4008bf7e:	f59ca5        	call8	40081948 <esp_dport_access_reg_read>
4008bf81:	d47c      	movi.n	a4, -3
4008bf83:	10aa40        	and	a10, a10, a4
4008bf86:	0020c0        	memw
4008bf89:	03a9      	s32i.n	a10, a3, 0
4008bf8b:	03ad      	mov.n	a10, a3
4008bf8d:	f59ba5        	call8	40081948 <esp_dport_access_reg_read>
4008bf90:	e47c      	movi.n	a4, -2
4008bf92:	10aa40        	and	a10, a10, a4
4008bf95:	0020c0        	memw
4008bf98:	03a9      	s32i.n	a10, a3, 0
4008bf9a:	f03d      	nop.n
4008bf9c:	f03d      	nop.n
4008bf9e:	f03d      	nop.n
4008bfa0:	0020f0        	nop
4008bfa3:	d33831        	l32r	a3, 40080c84 <_init_end+0x884>
4008bfa6:	03ad      	mov.n	a10, a3
4008bfa8:	f599e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfab:	080c      	movi.n	a8, 0
4008bfad:	0020c0        	memw
4008bfb0:	0389      	s32i.n	a8, a3, 0
4008bfb2:	f03d      	nop.n
4008bfb4:	f03d      	nop.n
4008bfb6:	f03d      	nop.n
4008bfb8:	0020f0        	nop
4008bfbb:	d33331        	l32r	a3, 40080c88 <_init_end+0x888>
4008bfbe:	03ad      	mov.n	a10, a3
4008bfc0:	f59865        	call8	40081948 <esp_dport_access_reg_read>
4008bfc3:	10aa40        	and	a10, a10, a4
4008bfc6:	0020c0        	memw
4008bfc9:	03a9      	s32i.n	a10, a3, 0
4008bfcb:	f03d      	nop.n
4008bfcd:	f03d      	nop.n
4008bfcf:	f03d      	nop.n
4008bfd1:	0020f0        	nop
4008bfd4:	d32e31        	l32r	a3, 40080c8c <_init_end+0x88c>
4008bfd7:	03ad      	mov.n	a10, a3
4008bfd9:	f596e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfdc:	ffae82        	movi	a8, 0xfffffeff
4008bfdf:	10aa80        	and	a10, a10, a8
4008bfe2:	0020c0        	memw
4008bfe5:	03a9      	s32i.n	a10, a3, 0
4008bfe7:	03ad      	mov.n	a10, a3
4008bfe9:	f595e5        	call8	40081948 <esp_dport_access_reg_read>
4008bfec:	10aa40        	and	a10, a10, a4
4008bfef:	0020c0        	memw
4008bff2:	03a9      	s32i.n	a10, a3, 0
4008bff4:	02f297        	bbsi	a2, 25, 4008bffa <rtc_init+0x1c2>
4008bff7:	00b2c6        	j	4008c2c6 <rtc_init+0x48e>
4008bffa:	f03d      	nop.n
4008bffc:	f03d      	nop.n
4008bffe:	f03d      	nop.n
4008c000:	f03d      	nop.n
4008c002:	d32331        	l32r	a3, 40080c90 <_init_end+0x890>
4008c005:	0020c0        	memw
4008c008:	0348      	l32i.n	a4, a3, 0
4008c00a:	d31281        	l32r	a8, 40080c54 <_init_end+0x854>
4008c00d:	108480        	and	a8, a4, a8
4008c010:	0020c0        	memw
4008c013:	0389      	s32i.n	a8, a3, 0
4008c015:	f03d      	nop.n
4008c017:	f03d      	nop.n
4008c019:	f03d      	nop.n
4008c01b:	f03d      	nop.n
4008c01d:	d1cd81        	l32r	a8, 40080754 <_init_end+0x354>
4008c020:	0020c0        	memw
4008c023:	0838      	l32i.n	a3, a8, 0
4008c025:	d31b91        	l32r	a9, 40080c94 <_init_end+0x894>
4008c028:	109390        	and	a9, a3, a9
4008c02b:	0020c0        	memw
4008c02e:	0899      	s32i.n	a9, a8, 0
4008c030:	f03d      	nop.n
4008c032:	f03d      	nop.n
4008c034:	f03d      	nop.n
4008c036:	f03d      	nop.n
4008c038:	0020c0        	memw
4008c03b:	0838      	l32i.n	a3, a8, 0
4008c03d:	d31691        	l32r	a9, 40080c98 <_init_end+0x898>
4008c040:	109390        	and	a9, a3, a9
4008c043:	0020c0        	memw
4008c046:	0899      	s32i.n	a9, a8, 0
4008c048:	f03d      	nop.n
4008c04a:	f03d      	nop.n
4008c04c:	f03d      	nop.n
4008c04e:	f03d      	nop.n
4008c050:	0020c0        	memw
4008c053:	0838      	l32i.n	a3, a8, 0
4008c055:	d31191        	l32r	a9, 40080c9c <_init_end+0x89c>
4008c058:	109390        	and	a9, a3, a9
4008c05b:	0020c0        	memw
4008c05e:	0899      	s32i.n	a9, a8, 0
4008c060:	f03d      	nop.n
4008c062:	f03d      	nop.n
4008c064:	f03d      	nop.n
4008c066:	f03d      	nop.n
4008c068:	0020c0        	memw
4008c06b:	0838      	l32i.n	a3, a8, 0
4008c06d:	d30c91        	l32r	a9, 40080ca0 <_init_end+0x8a0>
4008c070:	109390        	and	a9, a3, a9
4008c073:	0020c0        	memw
4008c076:	0899      	s32i.n	a9, a8, 0
4008c078:	f03d      	nop.n
4008c07a:	f03d      	nop.n
4008c07c:	f03d      	nop.n
4008c07e:	f03d      	nop.n
4008c080:	0020c0        	memw
4008c083:	0838      	l32i.n	a3, a8, 0
4008c085:	d30791        	l32r	a9, 40080ca4 <_init_end+0x8a4>
4008c088:	209390        	or	a9, a3, a9
4008c08b:	0020c0        	memw
4008c08e:	0899      	s32i.n	a9, a8, 0
4008c090:	f03d      	nop.n
4008c092:	f03d      	nop.n
4008c094:	f03d      	nop.n
4008c096:	f03d      	nop.n
4008c098:	0020c0        	memw
4008c09b:	0838      	l32i.n	a3, a8, 0
4008c09d:	d30291        	l32r	a9, 40080ca8 <_init_end+0x8a8>
4008c0a0:	209390        	or	a9, a3, a9
4008c0a3:	0020c0        	memw
4008c0a6:	0899      	s32i.n	a9, a8, 0
4008c0a8:	f03d      	nop.n
4008c0aa:	f03d      	nop.n
4008c0ac:	f03d      	nop.n
4008c0ae:	f03d      	nop.n
4008c0b0:	0020c0        	memw
4008c0b3:	0838      	l32i.n	a3, a8, 0
4008c0b5:	d1ed91        	l32r	a9, 4008086c <_init_end+0x46c>
4008c0b8:	209390        	or	a9, a3, a9
4008c0bb:	0020c0        	memw
4008c0be:	0899      	s32i.n	a9, a8, 0
4008c0c0:	f03d      	nop.n
4008c0c2:	f03d      	nop.n
4008c0c4:	f03d      	nop.n
4008c0c6:	f03d      	nop.n
4008c0c8:	d2e291        	l32r	a9, 40080c50 <_init_end+0x850>
4008c0cb:	0020c0        	memw
4008c0ce:	0938      	l32i.n	a3, a9, 0
4008c0d0:	d2f7a1        	l32r	a10, 40080cac <_init_end+0x8ac>
4008c0d3:	10a3a0        	and	a10, a3, a10
4008c0d6:	0020c0        	memw
4008c0d9:	09a9      	s32i.n	a10, a9, 0
4008c0db:	f03d      	nop.n
4008c0dd:	f03d      	nop.n
4008c0df:	f03d      	nop.n
4008c0e1:	f03d      	nop.n
4008c0e3:	0020c0        	memw
4008c0e6:	0938      	l32i.n	a3, a9, 0
4008c0e8:	d2f2a1        	l32r	a10, 40080cb0 <_init_end+0x8b0>
4008c0eb:	20a3a0        	or	a10, a3, a10
4008c0ee:	0020c0        	memw
4008c0f1:	09a9      	s32i.n	a10, a9, 0
4008c0f3:	f03d      	nop.n
4008c0f5:	f03d      	nop.n
4008c0f7:	f03d      	nop.n
4008c0f9:	f03d      	nop.n
4008c0fb:	0020c0        	memw
4008c0fe:	0838      	l32i.n	a3, a8, 0
4008c100:	d2df91        	l32r	a9, 40080c7c <_init_end+0x87c>
4008c103:	109390        	and	a9, a3, a9
4008c106:	0020c0        	memw
4008c109:	0899      	s32i.n	a9, a8, 0
4008c10b:	f03d      	nop.n
4008c10d:	f03d      	nop.n
4008c10f:	f03d      	nop.n
4008c111:	f03d      	nop.n
4008c113:	0020c0        	memw
4008c116:	0838      	l32i.n	a3, a8, 0
4008c118:	ffad92        	movi	a9, 0xfffffdff
4008c11b:	109390        	and	a9, a3, a9
4008c11e:	0020c0        	memw
4008c121:	0899      	s32i.n	a9, a8, 0
4008c123:	f03d      	nop.n
4008c125:	f03d      	nop.n
4008c127:	f03d      	nop.n
4008c129:	f03d      	nop.n
4008c12b:	d2d181        	l32r	a8, 40080c70 <_init_end+0x870>
4008c12e:	0020c0        	memw
4008c131:	0838      	l32i.n	a3, a8, 0
4008c133:	d0fb91        	l32r	a9, 40080520 <_init_end+0x120>
4008c136:	109390        	and	a9, a3, a9
4008c139:	0020c0        	memw
4008c13c:	0899      	s32i.n	a9, a8, 0
4008c13e:	f03d      	nop.n
4008c140:	f03d      	nop.n
4008c142:	f03d      	nop.n
4008c144:	f03d      	nop.n
4008c146:	0020c0        	memw
4008c149:	0838      	l32i.n	a3, a8, 0
4008c14b:	d2da91        	l32r	a9, 40080cb4 <_init_end+0x8b4>
4008c14e:	109390        	and	a9, a3, a9
4008c151:	0020c0        	memw
4008c154:	0899      	s32i.n	a9, a8, 0
4008c156:	1a72a7        	bbci	a2, 26, 4008c174 <rtc_init+0x33c>
4008c159:	f03d      	nop.n
4008c15b:	f03d      	nop.n
4008c15d:	f03d      	nop.n
4008c15f:	f03d      	nop.n
4008c161:	0020c0        	memw
4008c164:	0848      	l32i.n	a4, a8, 0
4008c166:	d0ff21        	l32r	a2, 40080564 <_init_end+0x164>
4008c169:	202420        	or	a2, a4, a2
4008c16c:	0020c0        	memw
4008c16f:	0829      	s32i.n	a2, a8, 0
4008c171:	000486        	j	4008c187 <rtc_init+0x34f>
4008c174:	d2bf31        	l32r	a3, 40080c70 <_init_end+0x870>
4008c177:	0020c0        	memw
4008c17a:	0348      	l32i.n	a4, a3, 0
4008c17c:	d11821        	l32r	a2, 400805dc <_init_end+0x1dc>
4008c17f:	102420        	and	a2, a4, a2
4008c182:	0020c0        	memw
4008c185:	0329      	s32i.n	a2, a3, 0
4008c187:	f03d      	nop.n
4008c189:	f03d      	nop.n
4008c18b:	f03d      	nop.n
4008c18d:	f03d      	nop.n
4008c18f:	d2ca21        	l32r	a2, 40080cb8 <_init_end+0x8b8>
4008c192:	0020c0        	memw
4008c195:	0238      	l32i.n	a3, a2, 0
4008c197:	f86c      	movi.n	a8, -17
4008c199:	108380        	and	a8, a3, a8
4008c19c:	0020c0        	memw
4008c19f:	0289      	s32i.n	a8, a2, 0
4008c1a1:	f03d      	nop.n
4008c1a3:	f03d      	nop.n
4008c1a5:	f03d      	nop.n
4008c1a7:	f03d      	nop.n
4008c1a9:	0020c0        	memw
4008c1ac:	0238      	l32i.n	a3, a2, 0
4008c1ae:	d2c381        	l32r	a8, 40080cbc <_init_end+0x8bc>
4008c1b1:	108380        	and	a8, a3, a8
4008c1b4:	0020c0        	memw
4008c1b7:	0289      	s32i.n	a8, a2, 0
4008c1b9:	f03d      	nop.n
4008c1bb:	f03d      	nop.n
4008c1bd:	f03d      	nop.n
4008c1bf:	f03d      	nop.n
4008c1c1:	0020c0        	memw
4008c1c4:	0238      	l32i.n	a3, a2, 0
4008c1c6:	d2be81        	l32r	a8, 40080cc0 <_init_end+0x8c0>
4008c1c9:	108380        	and	a8, a3, a8
4008c1cc:	0020c0        	memw
4008c1cf:	0289      	s32i.n	a8, a2, 0
4008c1d1:	f03d      	nop.n
4008c1d3:	f03d      	nop.n
4008c1d5:	f03d      	nop.n
4008c1d7:	f03d      	nop.n
4008c1d9:	0020c0        	memw
4008c1dc:	0238      	l32i.n	a3, a2, 0
4008c1de:	d2b981        	l32r	a8, 40080cc4 <_init_end+0x8c4>
4008c1e1:	108380        	and	a8, a3, a8
4008c1e4:	0020c0        	memw
4008c1e7:	0289      	s32i.n	a8, a2, 0
4008c1e9:	f03d      	nop.n
4008c1eb:	f03d      	nop.n
4008c1ed:	f03d      	nop.n
4008c1ef:	f03d      	nop.n
4008c1f1:	d2b521        	l32r	a2, 40080cc8 <_init_end+0x8c8>
4008c1f4:	0020c0        	memw
4008c1f7:	0238      	l32i.n	a3, a2, 0
4008c1f9:	d2b481        	l32r	a8, 40080ccc <_init_end+0x8cc>
4008c1fc:	108380        	and	a8, a3, a8
4008c1ff:	0020c0        	memw
4008c202:	0289      	s32i.n	a8, a2, 0
4008c204:	f03d      	nop.n
4008c206:	f03d      	nop.n
4008c208:	f03d      	nop.n
4008c20a:	f03d      	nop.n
4008c20c:	0020c0        	memw
4008c20f:	0238      	l32i.n	a3, a2, 0
4008c211:	d2a281        	l32r	a8, 40080c9c <_init_end+0x89c>
4008c214:	108380        	and	a8, a3, a8
4008c217:	0020c0        	memw
4008c21a:	0289      	s32i.n	a8, a2, 0
4008c21c:	f03d      	nop.n
4008c21e:	f03d      	nop.n
4008c220:	f03d      	nop.n
4008c222:	f03d      	nop.n
4008c224:	d2ab81        	l32r	a8, 40080cd0 <_init_end+0x8d0>
4008c227:	0020c0        	memw
4008c22a:	0838      	l32i.n	a3, a8, 0
4008c22c:	d0bd91        	l32r	a9, 40080520 <_init_end+0x120>
4008c22f:	109390        	and	a9, a3, a9
4008c232:	0020c0        	memw
4008c235:	0899      	s32i.n	a9, a8, 0
4008c237:	f03d      	nop.n
4008c239:	f03d      	nop.n
4008c23b:	f03d      	nop.n
4008c23d:	f03d      	nop.n
4008c23f:	0020c0        	memw
4008c242:	0838      	l32i.n	a3, a8, 0
4008c244:	d29c91        	l32r	a9, 40080cb4 <_init_end+0x8b4>
4008c247:	109390        	and	a9, a3, a9
4008c24a:	0020c0        	memw
4008c24d:	0899      	s32i.n	a9, a8, 0
4008c24f:	f03d      	nop.n
4008c251:	f03d      	nop.n
4008c253:	f03d      	nop.n
4008c255:	f03d      	nop.n
4008c257:	0020c0        	memw
4008c25a:	0838      	l32i.n	a3, a8, 0
4008c25c:	d29e91        	l32r	a9, 40080cd4 <_init_end+0x8d4>
4008c25f:	109390        	and	a9, a3, a9
4008c262:	0020c0        	memw
4008c265:	0899      	s32i.n	a9, a8, 0
4008c267:	f03d      	nop.n
4008c269:	f03d      	nop.n
4008c26b:	f03d      	nop.n
4008c26d:	f03d      	nop.n
4008c26f:	0020c0        	memw
4008c272:	0238      	l32i.n	a3, a2, 0
4008c274:	a97c      	movi.n	a9, -6
4008c276:	109390        	and	a9, a3, a9
4008c279:	0020c0        	memw
4008c27c:	0299      	s32i.n	a9, a2, 0
4008c27e:	f03d      	nop.n
4008c280:	f03d      	nop.n
4008c282:	f03d      	nop.n
4008c284:	f03d      	nop.n
4008c286:	0020c0        	memw
4008c289:	0238      	l32i.n	a3, a2, 0
4008c28b:	dfaf92        	movi	a9, -33
4008c28e:	109390        	and	a9, a3, a9
4008c291:	0020c0        	memw
4008c294:	0299      	s32i.n	a9, a2, 0
4008c296:	f03d      	nop.n
4008c298:	f03d      	nop.n
4008c29a:	f03d      	nop.n
4008c29c:	f03d      	nop.n
4008c29e:	0020c0        	memw
4008c2a1:	0838      	l32i.n	a3, a8, 0
4008c2a3:	d28d21        	l32r	a2, 40080cd8 <_init_end+0x8d8>
4008c2a6:	102320        	and	a2, a3, a2
4008c2a9:	0020c0        	memw
4008c2ac:	0829      	s32i.n	a2, a8, 0
4008c2ae:	f03d      	nop.n
4008c2b0:	f03d      	nop.n
4008c2b2:	f03d      	nop.n
4008c2b4:	f03d      	nop.n
4008c2b6:	0020c0        	memw
4008c2b9:	0838      	l32i.n	a3, a8, 0
4008c2bb:	d28821        	l32r	a2, 40080cdc <_init_end+0x8dc>
4008c2be:	102320        	and	a2, a3, a2
4008c2c1:	0020c0        	memw
4008c2c4:	0829      	s32i.n	a2, a8, 0
4008c2c6:	f01d      	retw.n

4008c2c8 <rtc_clk_cal_internal>:
4008c2c8:	004136        	entry	a1, 32
4008c2cb:	d28841        	l32r	a4, 40080cec <_init_end+0x8ec>
4008c2ce:	0db437        	bgeu	a4, a3, 4008c2df <rtc_clk_cal_internal+0x17>
4008c2d1:	d287d1        	l32r	a13, 40080cf0 <_init_end+0x8f0>
4008c2d4:	d288c1        	l32r	a12, 40080cf4 <_init_end+0x8f4>
4008c2d7:	eb2c      	movi.n	a11, 46
4008c2d9:	d287a1        	l32r	a10, 40080cf8 <_init_end+0x8f8>
4008c2dc:	4ebfa5        	call8	400daed8 <__assert_func>
4008c2df:	d26c41        	l32r	a4, 40080c90 <_init_end+0x890>
4008c2e2:	0020c0        	memw
4008c2e5:	0448      	l32i.n	a4, a4, 0
4008c2e7:	044840        	extui	a4, a4, 8, 1
4008c2ea:	fec292        	addi	a9, a2, -2
4008c2ed:	180c      	movi.n	a8, 1
4008c2ef:	050c      	movi.n	a5, 0
4008c2f1:	056d      	mov.n	a6, a5
4008c2f3:	836890        	moveqz	a6, a8, a9
4008c2f6:	938540        	movnez	a8, a5, a4
4008c2f9:	130867        	bnone	a8, a6, 4008c310 <rtc_clk_cal_internal+0x48>
4008c2fc:	d26581        	l32r	a8, 40080c90 <_init_end+0x890>
4008c2ff:	0020c0        	memw
4008c302:	0898      	l32i.n	a9, a8, 0
4008c304:	00a152        	movi	a5, 0x100
4008c307:	205950        	or	a5, a9, a5
4008c30a:	0020c0        	memw
4008c30d:	006852        	s32i	a5, a8, 0
4008c310:	1a1266        	bnei	a2, 1, 4008c32e <rtc_clk_cal_internal+0x66>
4008c313:	f03d      	nop.n
4008c315:	f03d      	nop.n
4008c317:	f03d      	nop.n
4008c319:	f03d      	nop.n
4008c31b:	d25d81        	l32r	a8, 40080c90 <_init_end+0x890>
4008c31e:	0020c0        	memw
4008c321:	0898      	l32i.n	a9, a8, 0
4008c323:	00a252        	movi	a5, 0x200
4008c326:	205950        	or	a5, a9, a5
4008c329:	0020c0        	memw
4008c32c:	0859      	s32i.n	a5, a8, 0
4008c32e:	f03d      	nop.n
4008c330:	f03d      	nop.n
4008c332:	f03d      	nop.n
4008c334:	f03d      	nop.n
4008c336:	d27181        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c339:	0020c0        	memw
4008c33c:	08a8      	l32i.n	a10, a8, 0
4008c33e:	d27091        	l32r	a9, 40080d00 <_init_end+0x900>
4008c341:	10aa90        	and	a10, a10, a9
4008c344:	149020        	extui	a9, a2, 0, 2
4008c347:	119930        	slli	a9, a9, 13
4008c34a:	209a90        	or	a9, a10, a9
4008c34d:	0020c0        	memw
4008c350:	0899      	s32i.n	a9, a8, 0
4008c352:	f03d      	nop.n
4008c354:	f03d      	nop.n
4008c356:	f03d      	nop.n
4008c358:	f03d      	nop.n
4008c35a:	0020c0        	memw
4008c35d:	0858      	l32i.n	a5, a8, 0
4008c35f:	d25f91        	l32r	a9, 40080cdc <_init_end+0x8dc>
4008c362:	109590        	and	a9, a5, a9
4008c365:	0020c0        	memw
4008c368:	0899      	s32i.n	a9, a8, 0
4008c36a:	f03d      	nop.n
4008c36c:	f03d      	nop.n
4008c36e:	f03d      	nop.n
4008c370:	f03d      	nop.n
4008c372:	0020c0        	memw
4008c375:	08a8      	l32i.n	a10, a8, 0
4008c377:	d26391        	l32r	a9, 40080d04 <_init_end+0x904>
4008c37a:	10aa90        	and	a10, a10, a9
4008c37d:	e49030        	extui	a9, a3, 0, 15
4008c380:	119900        	slli	a9, a9, 16
4008c383:	209a90        	or	a9, a10, a9
4008c386:	0020c0        	memw
4008c389:	0899      	s32i.n	a9, a8, 0
4008c38b:	f03d      	nop.n
4008c38d:	f03d      	nop.n
4008c38f:	f03d      	nop.n
4008c391:	f03d      	nop.n
4008c393:	d23f51        	l32r	a5, 40080c90 <_init_end+0x890>
4008c396:	0020c0        	memw
4008c399:	0588      	l32i.n	a8, a5, 0
4008c39b:	158e80        	extui	a8, a8, 30, 2
4008c39e:	272226        	beqi	a2, 2, 4008c3c9 <rtc_clk_cal_internal+0x101>
4008c3a1:	1b0c      	movi.n	a11, 1
4008c3a3:	090c      	movi.n	a9, 0
4008c3a5:	095d      	mov.n	a5, a9
4008c3a7:	835b20        	moveqz	a5, a11, a2
4008c3aa:	745050        	extui	a5, a5, 0, 8
4008c3ad:	a80b      	addi.n	a10, a8, -1
4008c3af:	839ba0        	moveqz	a9, a11, a10
4008c3b2:	1a8957        	bany	a9, a5, 4008c3d0 <rtc_clk_cal_internal+0x108>
4008c3b5:	1f12b7        	beq	a2, a11, 4008c3d8 <rtc_clk_cal_internal+0x110>
4008c3b8:	fec882        	addi	a8, a8, -2
4008c3bb:	090c      	movi.n	a9, 0
4008c3bd:	839b80        	moveqz	a9, a11, a8
4008c3c0:	1d0957        	bnone	a9, a5, 4008c3e1 <rtc_clk_cal_internal+0x119>
4008c3c3:	d248c1        	l32r	a12, 40080ce4 <_init_end+0x8e4>
4008c3c6:	000686        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3c9:	d245c1        	l32r	a12, 40080ce0 <_init_end+0x8e0>
4008c3cc:	000506        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3cf:	44c100        	extui	a12, a0, 1, 5
4008c3d2:	0346d2        	s8i	a13, a6, 3
4008c3d5:	000000        	ill
4008c3d8:	d243c1        	l32r	a12, 40080ce4 <_init_end+0x8e4>
4008c3db:	000146        	j	4008c3e4 <rtc_clk_cal_internal+0x11c>
4008c3de:	000000        	ill
4008c3e1:	d241c1        	l32r	a12, 40080ce8 <_init_end+0x8e8>
4008c3e4:	d032a1        	l32r	a10, 400804ac <_init_end+0xac>
4008c3e7:	a2b3a0        	muluh	a11, a3, a10
4008c3ea:	0d0c      	movi.n	a13, 0
4008c3ec:	82a3a0        	mull	a10, a3, a10
4008c3ef:	d08d81        	l32r	a8, 40080624 <_init_end+0x224>
4008c3f2:	0008e0        	callx8	a8
4008c3f5:	0a3d      	mov.n	a3, a10
4008c3f7:	0a5d      	mov.n	a5, a10
4008c3f9:	006c25        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008c3fc:	1acc      	bnez.n	a10, 4008c401 <rtc_clk_cal_internal+0x139>
4008c3fe:	28a0a2        	movi	a10, 40
4008c401:	d24181        	l32r	a8, 40080d08 <_init_end+0x908>
4008c404:	c2a8a0        	quou	a10, a8, a10
4008c407:	1a35a7        	bltu	a5, a10, 4008c425 <rtc_clk_cal_internal+0x15d>
4008c40a:	f79265        	call8	40083d30 <esp_log_timestamp>
4008c40d:	d23fc1        	l32r	a12, 40080d0c <_init_end+0x90c>
4008c410:	20baa0        	or	a11, a10, a10
4008c413:	d23fa1        	l32r	a10, 40080d10 <_init_end+0x910>
4008c416:	d02081        	l32r	a8, 40080498 <_init_end+0x98>
4008c419:	0008e0        	callx8	a8
4008c41c:	00a022        	movi	a2, 0
4008c41f:	000090        	retw
4008c422:	000000        	ill
4008c425:	d23551        	l32r	a5, 40080cfc <_init_end+0x8fc>
4008c428:	0020c0        	memw
4008c42b:	0598      	l32i.n	a9, a5, 0
4008c42d:	d03c81        	l32r	a8, 40080520 <_init_end+0x120>
4008c430:	108980        	and	a8, a9, a8
4008c433:	0020c0        	memw
4008c436:	0589      	s32i.n	a8, a5, 0
4008c438:	f03d      	nop.n
4008c43a:	f03d      	nop.n
4008c43c:	f03d      	nop.n
4008c43e:	f03d      	nop.n
4008c440:	0020c0        	memw
4008c443:	0598      	l32i.n	a9, a5, 0
4008c445:	d08d81        	l32r	a8, 4008067c <_init_end+0x27c>
4008c448:	208980        	or	a8, a9, a8
4008c44b:	0020c0        	memw
4008c44e:	0589      	s32i.n	a8, a5, 0
4008c450:	03ad      	mov.n	a10, a3
4008c452:	d01481        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c455:	0008e0        	callx8	a8
4008c458:	000306        	j	4008c468 <rtc_clk_cal_internal+0x1a0>
4008c45b:	000000        	ill
4008c45e:	330b      	addi.n	a3, a3, -1
4008c460:	1a0c      	movi.n	a10, 1
4008c462:	d01081        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c465:	0008e0        	callx8	a8
4008c468:	d22581        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c46b:	0020c0        	memw
4008c46e:	0888      	l32i.n	a8, a8, 0
4008c470:	02e8f7        	bbsi	a8, 15, 4008c476 <rtc_clk_cal_internal+0x1ae>
4008c473:	e713e6        	bgei	a3, 1, 4008c45e <rtc_clk_cal_internal+0x196>
4008c476:	d20651        	l32r	a5, 40080c90 <_init_end+0x890>
4008c479:	0020c0        	memw
4008c47c:	0598      	l32i.n	a9, a5, 0
4008c47e:	ffae82        	movi	a8, 0xfffffeff
4008c481:	108980        	and	a8, a9, a8
4008c484:	044040        	extui	a4, a4, 0, 1
4008c487:	114480        	slli	a4, a4, 8
4008c48a:	204480        	or	a4, a4, a8
4008c48d:	0020c0        	memw
4008c490:	0549      	s32i.n	a4, a5, 0
4008c492:	171266        	bnei	a2, 1, 4008c4ad <rtc_clk_cal_internal+0x1e5>
4008c495:	054d      	mov.n	a4, a5
4008c497:	f03d      	nop.n
4008c499:	f03d      	nop.n
4008c49b:	f03d      	nop.n
4008c49d:	0020c0        	memw
4008c4a0:	0558      	l32i.n	a5, a5, 0
4008c4a2:	ffad22        	movi	a2, 0xfffffdff
4008c4a5:	102520        	and	a2, a5, a2
4008c4a8:	0020c0        	memw
4008c4ab:	0429      	s32i.n	a2, a4, 0
4008c4ad:	339c      	beqz.n	a3, 4008c4c4 <rtc_clk_cal_internal+0x1fc>
4008c4af:	f03d      	nop.n
4008c4b1:	f03d      	nop.n
4008c4b3:	f03d      	nop.n
4008c4b5:	f03d      	nop.n
4008c4b7:	d21721        	l32r	a2, 40080d14 <_init_end+0x914>
4008c4ba:	0020c0        	memw
4008c4bd:	0228      	l32i.n	a2, a2, 0
4008c4bf:	412720        	srli	a2, a2, 7
4008c4c2:	f01d      	retw.n
4008c4c4:	020c      	movi.n	a2, 0
4008c4c6:	f01d      	retw.n

4008c4c8 <rtc_clk_cal>:
4008c4c8:	004136        	entry	a1, 32
4008c4cb:	005f25        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008c4ce:	204aa0        	or	a4, a10, a10
4008c4d1:	20b330        	or	a11, a3, a3
4008c4d4:	02ad      	mov.n	a10, a2
4008c4d6:	ffdf25        	call8	4008c2c8 <rtc_clk_cal_internal>
4008c4d9:	82c430        	mull	a12, a4, a3
4008c4dc:	a2d430        	muluh	a13, a4, a3
4008c4df:	413da0        	srli	a3, a10, 13
4008c4e2:	01aad0        	slli	a10, a10, 19
4008c4e5:	014d10        	slli	a4, a13, 31
4008c4e8:	4191c0        	srli	a9, a12, 1
4008c4eb:	209490        	or	a9, a4, a9
4008c4ee:	41e1d0        	srli	a14, a13, 1
4008c4f1:	9a9a      	add.n	a9, a10, a9
4008c4f3:	180c      	movi.n	a8, 1
4008c4f5:	0139a7        	bltu	a9, a10, 4008c4fa <rtc_clk_cal+0x32>
4008c4f8:	080c      	movi.n	a8, 0
4008c4fa:	e3ea      	add.n	a14, a3, a14
4008c4fc:	88ea      	add.n	a8, a8, a14
4008c4fe:	a90b      	addi.n	a10, a9, -1
4008c500:	01a0b2        	movi	a11, 1
4008c503:	013a97        	bltu	a10, a9, 4008c508 <rtc_clk_cal+0x40>
4008c506:	0b0c      	movi.n	a11, 0
4008c508:	880b      	addi.n	a8, a8, -1
4008c50a:	bb8a      	add.n	a11, a11, a8
4008c50c:	d04681        	l32r	a8, 40080624 <_init_end+0x224>
4008c50f:	0008e0        	callx8	a8
4008c512:	0a2d      	mov.n	a2, a10
4008c514:	f01d      	retw.n
	...

4008c518 <rtc_time_get>:
4008c518:	004136        	entry	a1, 32
4008c51b:	d1ff91        	l32r	a9, 40080d18 <_init_end+0x918>
4008c51e:	0020c0        	memw
4008c521:	0928      	l32i.n	a2, a9, 0
4008c523:	d05681        	l32r	a8, 4008067c <_init_end+0x27c>
4008c526:	208280        	or	a8, a2, a8
4008c529:	0020c0        	memw
4008c52c:	0989      	s32i.n	a8, a9, 0
4008c52e:	0001c6        	j	4008c539 <rtc_time_get+0x21>
4008c531:	1a0c      	movi.n	a10, 1
4008c533:	cfdc81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c536:	0008e0        	callx8	a8
4008c539:	d1f781        	l32r	a8, 40080d18 <_init_end+0x918>
4008c53c:	0020c0        	memw
4008c53f:	0888      	l32i.n	a8, a8, 0
4008c541:	ec78e7        	bbci	a8, 30, 4008c531 <rtc_time_get+0x19>
4008c544:	d1f691        	l32r	a9, 40080d1c <_init_end+0x91c>
4008c547:	0020c0        	memw
4008c54a:	0928      	l32i.n	a2, a9, 0
4008c54c:	081c      	movi.n	a8, 16
4008c54e:	208280        	or	a8, a2, a8
4008c551:	0020c0        	memw
4008c554:	0989      	s32i.n	a8, a9, 0
4008c556:	f03d      	nop.n
4008c558:	f03d      	nop.n
4008c55a:	f03d      	nop.n
4008c55c:	f03d      	nop.n
4008c55e:	d1f021        	l32r	a2, 40080d20 <_init_end+0x920>
4008c561:	0020c0        	memw
4008c564:	0228      	l32i.n	a2, a2, 0
4008c566:	d1ef31        	l32r	a3, 40080d24 <_init_end+0x924>
4008c569:	0020c0        	memw
4008c56c:	0338      	l32i.n	a3, a3, 0
4008c56e:	f01d      	retw.n

4008c570 <rtc_clk_wait_for_slow_cycle>:
4008c570:	004136        	entry	a1, 32
4008c573:	d1e281        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c576:	0020c0        	memw
4008c579:	08a8      	l32i.n	a10, a8, 0
4008c57b:	d1eb91        	l32r	a9, 40080d28 <_init_end+0x928>
4008c57e:	109a90        	and	a9, a10, a9
4008c581:	0020c0        	memw
4008c584:	0899      	s32i.n	a9, a8, 0
4008c586:	f03d      	nop.n
4008c588:	f03d      	nop.n
4008c58a:	f03d      	nop.n
4008c58c:	f03d      	nop.n
4008c58e:	0020c0        	memw
4008c591:	08a8      	l32i.n	a10, a8, 0
4008c593:	d1e691        	l32r	a9, 40080d2c <_init_end+0x92c>
4008c596:	109a90        	and	a9, a10, a9
4008c599:	0020c0        	memw
4008c59c:	0899      	s32i.n	a9, a8, 0
4008c59e:	f03d      	nop.n
4008c5a0:	f03d      	nop.n
4008c5a2:	f03d      	nop.n
4008c5a4:	f03d      	nop.n
4008c5a6:	0020c0        	memw
4008c5a9:	08a8      	l32i.n	a10, a8, 0
4008c5ab:	d1d591        	l32r	a9, 40080d00 <_init_end+0x900>
4008c5ae:	109a90        	and	a9, a10, a9
4008c5b1:	0020c0        	memw
4008c5b4:	0899      	s32i.n	a9, a8, 0
4008c5b6:	f03d      	nop.n
4008c5b8:	f03d      	nop.n
4008c5ba:	f03d      	nop.n
4008c5bc:	f03d      	nop.n
4008c5be:	0020c0        	memw
4008c5c1:	08a8      	l32i.n	a10, a8, 0
4008c5c3:	d1d091        	l32r	a9, 40080d04 <_init_end+0x904>
4008c5c6:	109a90        	and	a9, a10, a9
4008c5c9:	0020c0        	memw
4008c5cc:	0899      	s32i.n	a9, a8, 0
4008c5ce:	f03d      	nop.n
4008c5d0:	f03d      	nop.n
4008c5d2:	f03d      	nop.n
4008c5d4:	f03d      	nop.n
4008c5d6:	0020c0        	memw
4008c5d9:	08a8      	l32i.n	a10, a8, 0
4008c5db:	d02891        	l32r	a9, 4008067c <_init_end+0x27c>
4008c5de:	209a90        	or	a9, a10, a9
4008c5e1:	0020c0        	memw
4008c5e4:	006892        	s32i	a9, a8, 0
4008c5e7:	01a0a2        	movi	a10, 1
4008c5ea:	cfae81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c5ed:	0008e0        	callx8	a8
4008c5f0:	000206        	j	4008c5fc <rtc_clk_wait_for_slow_cycle+0x8c>
4008c5f3:	1a0c00        	sub.s	f0, f12, f0
4008c5f6:	cfab81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c5f9:	0008e0        	callx8	a8
4008c5fc:	d1c081        	l32r	a8, 40080cfc <_init_end+0x8fc>
4008c5ff:	0020c0        	memw
4008c602:	0888      	l32i.n	a8, a8, 0
4008c604:	ec68f7        	bbci	a8, 15, 4008c5f4 <rtc_clk_wait_for_slow_cycle+0x84>
4008c607:	f01d      	retw.n
4008c609:	000000        	ill

4008c60c <rtc_clk_32k_enable_common>:
4008c60c:	004136        	entry	a1, 32
4008c60f:	d1c881        	l32r	a8, 40080d30 <_init_end+0x930>
4008c612:	0020c0        	memw
4008c615:	08a8      	l32i.n	a10, a8, 0
4008c617:	d1c791        	l32r	a9, 40080d34 <_init_end+0x934>
4008c61a:	109a90        	and	a9, a10, a9
4008c61d:	0020c0        	memw
4008c620:	0899      	s32i.n	a9, a8, 0
4008c622:	f03d      	nop.n
4008c624:	f03d      	nop.n
4008c626:	f03d      	nop.n
4008c628:	f03d      	nop.n
4008c62a:	0020c0        	memw
4008c62d:	08a8      	l32i.n	a10, a8, 0
4008c62f:	d1c291        	l32r	a9, 40080d38 <_init_end+0x938>
4008c632:	209a90        	or	a9, a10, a9
4008c635:	0020c0        	memw
4008c638:	0899      	s32i.n	a9, a8, 0
4008c63a:	f03d      	nop.n
4008c63c:	f03d      	nop.n
4008c63e:	f03d      	nop.n
4008c640:	f03d      	nop.n
4008c642:	0020c0        	memw
4008c645:	08a8      	l32i.n	a10, a8, 0
4008c647:	d1bd91        	l32r	a9, 40080d3c <_init_end+0x93c>
4008c64a:	109a90        	and	a9, a10, a9
4008c64d:	142020        	extui	a2, a2, 0, 2
4008c650:	0122c0        	slli	a2, a2, 20
4008c653:	209290        	or	a9, a2, a9
4008c656:	0020c0        	memw
4008c659:	0899      	s32i.n	a9, a8, 0
4008c65b:	f03d      	nop.n
4008c65d:	f03d      	nop.n
4008c65f:	f03d      	nop.n
4008c661:	f03d      	nop.n
4008c663:	0020c0        	memw
4008c666:	0828      	l32i.n	a2, a8, 0
4008c668:	796c      	movi.n	a9, -25
4008c66a:	109290        	and	a9, a2, a9
4008c66d:	143030        	extui	a3, a3, 0, 2
4008c670:	1133d0        	slli	a3, a3, 3
4008c673:	209390        	or	a9, a3, a9
4008c676:	0020c0        	memw
4008c679:	0899      	s32i.n	a9, a8, 0
4008c67b:	f03d      	nop.n
4008c67d:	f03d      	nop.n
4008c67f:	f03d      	nop.n
4008c681:	f03d      	nop.n
4008c683:	0020c0        	memw
4008c686:	0828      	l32i.n	a2, a8, 0
4008c688:	997c      	movi.n	a9, -7
4008c68a:	109290        	and	a9, a2, a9
4008c68d:	144040        	extui	a4, a4, 0, 2
4008c690:	1144f0        	slli	a4, a4, 1
4008c693:	209490        	or	a9, a4, a9
4008c696:	0020c0        	memw
4008c699:	0899      	s32i.n	a9, a8, 0
4008c69b:	f03d      	nop.n
4008c69d:	f03d      	nop.n
4008c69f:	f03d      	nop.n
4008c6a1:	f03d      	nop.n
4008c6a3:	0020c0        	memw
4008c6a6:	0828      	l32i.n	a2, a8, 0
4008c6a8:	d1a691        	l32r	a9, 40080d40 <_init_end+0x940>
4008c6ab:	209290        	or	a9, a2, a9
4008c6ae:	0020c0        	memw
4008c6b1:	0899      	s32i.n	a9, a8, 0
4008c6b3:	f01d      	retw.n
4008c6b5:	000000        	ill

4008c6b8 <rtc_clk_bbpll_disable>:
4008c6b8:	004136        	entry	a1, 32
4008c6bb:	d02691        	l32r	a9, 40080754 <_init_end+0x354>
4008c6be:	0020c0        	memw
4008c6c1:	09a8      	l32i.n	a10, a9, 0
4008c6c3:	40a582        	movi	a8, 0x540
4008c6c6:	208a80        	or	a8, a10, a8
4008c6c9:	0020c0        	memw
4008c6cc:	0989      	s32i.n	a8, a9, 0
4008c6ce:	090c      	movi.n	a9, 0
4008c6d0:	f03d      	nop.n
4008c6d2:	f03d      	nop.n
4008c6d4:	f03d      	nop.n
4008c6d6:	d19b81        	l32r	a8, 40080d44 <_init_end+0x944>
4008c6d9:	0899      	s32i.n	a9, a8, 0
4008c6db:	f03d      	nop.n
4008c6dd:	f03d      	nop.n
4008c6df:	f03d      	nop.n
4008c6e1:	f03d      	nop.n
4008c6e3:	d15b81        	l32r	a8, 40080c50 <_init_end+0x850>
4008c6e6:	0020c0        	memw
4008c6e9:	0888      	l32i.n	a8, a8, 0
4008c6eb:	127877        	bbci	a8, 23, 4008c701 <rtc_clk_bbpll_disable+0x49>
4008c6ee:	d01991        	l32r	a9, 40080754 <_init_end+0x354>
4008c6f1:	0020c0        	memw
4008c6f4:	09a8      	l32i.n	a10, a9, 0
4008c6f6:	d19481        	l32r	a8, 40080d48 <_init_end+0x948>
4008c6f9:	208a80        	or	a8, a10, a8
4008c6fc:	0020c0        	memw
4008c6ff:	0989      	s32i.n	a8, a9, 0
4008c701:	f01d      	retw.n
	...

4008c704 <rtc_clk_bbpll_enable>:
4008c704:	004136        	entry	a1, 32
4008c707:	d01391        	l32r	a9, 40080754 <_init_end+0x354>
4008c70a:	0020c0        	memw
4008c70d:	09a8      	l32i.n	a10, a9, 0
4008c70f:	d18f81        	l32r	a8, 40080d4c <_init_end+0x94c>
4008c712:	108a80        	and	a8, a10, a8
4008c715:	0020c0        	memw
4008c718:	0989      	s32i.n	a8, a9, 0
4008c71a:	8d1c      	movi.n	a13, 24
4008c71c:	0c0c      	movi.n	a12, 0
4008c71e:	04a0b2        	movi	a11, 4
4008c721:	66a0a2        	movi	a10, 102
4008c724:	d18b81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c727:	0008e0        	callx8	a8
4008c72a:	0d2c      	movi.n	a13, 32
4008c72c:	1c0c      	movi.n	a12, 1
4008c72e:	4b0c      	movi.n	a11, 4
4008c730:	66a0a2        	movi	a10, 102
4008c733:	d18781        	l32r	a8, 40080d50 <_init_end+0x950>
4008c736:	0008e0        	callx8	a8
4008c739:	9aa0d2        	movi	a13, 154
4008c73c:	4c0c      	movi.n	a12, 4
4008c73e:	20bcc0        	or	a11, a12, a12
4008c741:	66a0a2        	movi	a10, 102
4008c744:	d18381        	l32r	a8, 40080d50 <_init_end+0x950>
4008c747:	0008e0        	callx8	a8
4008c74a:	0d0c      	movi.n	a13, 0
4008c74c:	ac0c      	movi.n	a12, 10
4008c74e:	4b0c      	movi.n	a11, 4
4008c750:	66a0a2        	movi	a10, 102
4008c753:	d17f81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c756:	0008e0        	callx8	a8
4008c759:	0d0c      	movi.n	a13, 0
4008c75b:	cc0c      	movi.n	a12, 12
4008c75d:	4b0c      	movi.n	a11, 4
4008c75f:	66a0a2        	movi	a10, 102
4008c762:	d17b81        	l32r	a8, 40080d50 <_init_end+0x950>
4008c765:	0008e0        	callx8	a8
4008c768:	f01d      	retw.n
	...

4008c76c <rtc_clk_32k_enable>:
4008c76c:	004136        	entry	a1, 32
4008c76f:	742020        	extui	a2, a2, 0, 8
4008c772:	00e216        	beqz	a2, 4008c784 <rtc_clk_32k_enable+0x18>
4008c775:	00a0c2        	movi	a12, 0
4008c778:	03a0b2        	movi	a11, 3
4008c77b:	0bad      	mov.n	a10, a11
4008c77d:	ffe8e5        	call8	4008c60c <rtc_clk_32k_enable_common>
4008c780:	f01d      	retw.n
4008c782:	810000        	src	a0, a0, a0
4008c785:	d16b      	addi.n	a13, a1, 6
4008c787:	0020c0        	memw
4008c78a:	0828      	l32i.n	a2, a8, 0
4008c78c:	d14491        	l32r	a9, 40080c9c <_init_end+0x89c>
4008c78f:	109290        	and	a9, a2, a9
4008c792:	0020c0        	memw
4008c795:	0899      	s32i.n	a9, a8, 0
4008c797:	f03d      	nop.n
4008c799:	f03d      	nop.n
4008c79b:	f03d      	nop.n
4008c79d:	f03d      	nop.n
4008c79f:	0020c0        	memw
4008c7a2:	0828      	l32i.n	a2, a8, 0
4008c7a4:	d16c91        	l32r	a9, 40080d54 <_init_end+0x954>
4008c7a7:	109290        	and	a9, a2, a9
4008c7aa:	0020c0        	memw
4008c7ad:	0899      	s32i.n	a9, a8, 0
4008c7af:	f01d      	retw.n
4008c7b1:	000000        	ill

4008c7b4 <rtc_clk_32k_enable_external>:
4008c7b4:	004136        	entry	a1, 32
4008c7b7:	1c0c      	movi.n	a12, 1
4008c7b9:	3b0c      	movi.n	a11, 3
4008c7bb:	2a0c      	movi.n	a10, 2
4008c7bd:	ffe4e5        	call8	4008c60c <rtc_clk_32k_enable_common>
4008c7c0:	f01d      	retw.n
	...

4008c7c4 <rtc_clk_8m_enable>:
4008c7c4:	004136        	entry	a1, 32
4008c7c7:	742020        	extui	a2, a2, 0, 8
4008c7ca:	743030        	extui	a3, a3, 0, 8
4008c7cd:	071216        	beqz	a2, 4008c842 <rtc_clk_8m_enable+0x7e>
4008c7d0:	d13021        	l32r	a2, 40080c90 <_init_end+0x890>
4008c7d3:	0020c0        	memw
4008c7d6:	0298      	l32i.n	a9, a2, 0
4008c7d8:	bfaf82        	movi	a8, -65
4008c7db:	108980        	and	a8, a9, a8
4008c7de:	0020c0        	memw
4008c7e1:	0289      	s32i.n	a8, a2, 0
4008c7e3:	f03d      	nop.n
4008c7e5:	f03d      	nop.n
4008c7e7:	f03d      	nop.n
4008c7e9:	f03d      	nop.n
4008c7eb:	d11b21        	l32r	a2, 40080c58 <_init_end+0x858>
4008c7ee:	0020c0        	memw
4008c7f1:	0298      	l32i.n	a9, a2, 0
4008c7f3:	d11c81        	l32r	a8, 40080c64 <_init_end+0x864>
4008c7f6:	109980        	and	a9, a9, a8
4008c7f9:	084c      	movi.n	a8, 64
4008c7fb:	208980        	or	a8, a9, a8
4008c7fe:	0020c0        	memw
4008c801:	0289      	s32i.n	a8, a2, 0
4008c803:	e39c      	beqz.n	a3, 4008c825 <rtc_clk_8m_enable+0x61>
4008c805:	f03d      	nop.n
4008c807:	f03d      	nop.n
4008c809:	f03d      	nop.n
4008c80b:	f03d      	nop.n
4008c80d:	d12031        	l32r	a3, 40080c90 <_init_end+0x890>
4008c810:	0020c0        	memw
4008c813:	0388      	l32i.n	a8, a3, 0
4008c815:	7faf22        	movi	a2, -129
4008c818:	102820        	and	a2, a8, a2
4008c81b:	0020c0        	memw
4008c81e:	0329      	s32i.n	a2, a3, 0
4008c820:	000506        	j	4008c838 <rtc_clk_8m_enable+0x74>
4008c823:	310000        	srai	a0, a0, 16
4008c826:	d11a      	add.n	a13, a1, a1
4008c828:	0020c0        	memw
4008c82b:	0388      	l32i.n	a8, a3, 0
4008c82d:	80a022        	movi	a2, 128
4008c830:	202820        	or	a2, a8, a2
4008c833:	0020c0        	memw
4008c836:	0329      	s32i.n	a2, a3, 0
4008c838:	2a3c      	movi.n	a10, 50
4008c83a:	cf1a81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c83d:	0008e0        	callx8	a8
4008c840:	f01d      	retw.n
4008c842:	d11321        	l32r	a2, 40080c90 <_init_end+0x890>
4008c845:	0020c0        	memw
4008c848:	0238      	l32i.n	a3, a2, 0
4008c84a:	084c      	movi.n	a8, 64
4008c84c:	208380        	or	a8, a3, a8
4008c84f:	0020c0        	memw
4008c852:	0289      	s32i.n	a8, a2, 0
4008c854:	f03d      	nop.n
4008c856:	f03d      	nop.n
4008c858:	f03d      	nop.n
4008c85a:	f03d      	nop.n
4008c85c:	d0ff21        	l32r	a2, 40080c58 <_init_end+0x858>
4008c85f:	0020c0        	memw
4008c862:	0298      	l32i.n	a9, a2, 0
4008c864:	d10081        	l32r	a8, 40080c64 <_init_end+0x864>
4008c867:	109980        	and	a9, a9, a8
4008c86a:	00a582        	movi	a8, 0x500
4008c86d:	208980        	or	a8, a9, a8
4008c870:	0020c0        	memw
4008c873:	0289      	s32i.n	a8, a2, 0
4008c875:	f01d      	retw.n
	...

4008c878 <rtc_clk_slow_freq_set>:
4008c878:	004136        	entry	a1, 32
4008c87b:	d10581        	l32r	a8, 40080c90 <_init_end+0x890>
4008c87e:	0020c0        	memw
4008c881:	08a8      	l32i.n	a10, a8, 0
4008c883:	d0b191        	l32r	a9, 40080b48 <_init_end+0x748>
4008c886:	10aa90        	and	a10, a10, a9
4008c889:	019220        	slli	a9, a2, 30
4008c88c:	209a90        	or	a9, a10, a9
4008c88f:	0020c0        	memw
4008c892:	0899      	s32i.n	a9, a8, 0
4008c894:	f03d      	nop.n
4008c896:	f03d      	nop.n
4008c898:	f03d      	nop.n
4008c89a:	f03d      	nop.n
4008c89c:	0020c0        	memw
4008c89f:	0898      	l32i.n	a9, a8, 0
4008c8a1:	ffae82        	movi	a8, 0xfffffeff
4008c8a4:	108980        	and	a8, a9, a8
4008c8a7:	051266        	bnei	a2, 1, 4008c8b0 <rtc_clk_slow_freq_set+0x38>
4008c8aa:	00a122        	movi	a2, 0x100
4008c8ad:	000046        	j	4008c8b2 <rtc_clk_slow_freq_set+0x3a>
4008c8b0:	020c      	movi.n	a2, 0
4008c8b2:	208280        	or	a8, a2, a8
4008c8b5:	d0f621        	l32r	a2, 40080c90 <_init_end+0x890>
4008c8b8:	0020c0        	memw
4008c8bb:	0289      	s32i.n	a8, a2, 0
4008c8bd:	2ca1a2        	movi	a10, 0x12c
4008c8c0:	cef981        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c8c3:	0008e0        	callx8	a8
4008c8c6:	f01d      	retw.n

4008c8c8 <rtc_clk_slow_freq_get>:
4008c8c8:	004136        	entry	a1, 32
4008c8cb:	d0f121        	l32r	a2, 40080c90 <_init_end+0x890>
4008c8ce:	0020c0        	memw
4008c8d1:	0228      	l32i.n	a2, a2, 0
4008c8d3:	152e20        	extui	a2, a2, 30, 2
4008c8d6:	f01d      	retw.n

4008c8d8 <rtc_clk_slow_freq_get_hz>:
4008c8d8:	004136        	entry	a1, 32
4008c8db:	fffee5        	call8	4008c8c8 <rtc_clk_slow_freq_get>
4008c8de:	1a1a26        	beqi	a10, 1, 4008c8fc <rtc_clk_slow_freq_get_hz+0x24>
4008c8e1:	7a8c      	beqz.n	a10, 4008c8ec <rtc_clk_slow_freq_get_hz+0x14>
4008c8e3:	0a2a26        	beqi	a10, 2, 4008c8f1 <rtc_clk_slow_freq_get_hz+0x19>
4008c8e6:	000386        	j	4008c8f8 <rtc_clk_slow_freq_get_hz+0x20>
4008c8e9:	000000        	ill
4008c8ec:	d0ff21        	l32r	a2, 40080ce8 <_init_end+0x8e8>
4008c8ef:	f01d      	retw.n
4008c8f1:	d0fc21        	l32r	a2, 40080ce4 <_init_end+0x8e4>
4008c8f4:	f01d      	retw.n
4008c8f6:	0c0000        	lsi	f0, a0, 48
4008c8f9:	f01d02        	l16ui	a0, a13, 0x1e0
4008c8fc:	d0f921        	l32r	a2, 40080ce0 <_init_end+0x8e0>
4008c8ff:	f01d      	retw.n
4008c901:	000000        	ill

4008c904 <rtc_clk_fast_freq_set>:
4008c904:	004136        	entry	a1, 32
4008c907:	d0e291        	l32r	a9, 40080c90 <_init_end+0x890>
4008c90a:	0020c0        	memw
4008c90d:	09a8      	l32i.n	a10, a9, 0
4008c90f:	d0e981        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008c912:	108a80        	and	a8, a10, a8
4008c915:	042020        	extui	a2, a2, 0, 1
4008c918:	012230        	slli	a2, a2, 29
4008c91b:	202820        	or	a2, a8, a2
4008c91e:	0020c0        	memw
4008c921:	0929      	s32i.n	a2, a9, 0
4008c923:	03a0a2        	movi	a10, 3
4008c926:	cedf81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c929:	0008e0        	callx8	a8
4008c92c:	f01d      	retw.n
	...

4008c930 <rtc_clk_bbpll_configure>:
4008c930:	006136        	entry	a1, 48
4008c933:	40a142        	movi	a4, 0x140
4008c936:	021347        	beq	a3, a4, 4008c93c <rtc_clk_bbpll_configure+0xc>
4008c939:	002506        	j	4008c9d1 <rtc_clk_bbpll_configure+0xa1>
4008c93c:	d0cd61        	l32r	a6, 40080c70 <_init_end+0x870>
4008c93f:	0020c0        	memw
4008c942:	0658      	l32i.n	a5, a6, 0
4008c944:	d0c141        	l32r	a4, 40080c48 <_init_end+0x848>
4008c947:	105540        	and	a5, a5, a4
4008c94a:	cfc741        	l32r	a4, 40080868 <_init_end+0x468>
4008c94d:	204540        	or	a4, a5, a4
4008c950:	0020c0        	memw
4008c953:	0649      	s32i.n	a4, a6, 0
4008c955:	a41c      	movi.n	a4, 26
4008c957:	411247        	beq	a2, a4, 4008c99c <rtc_clk_bbpll_configure+0x6c>
4008c95a:	842c      	movi.n	a4, 40
4008c95c:	081247        	beq	a2, a4, 4008c968 <rtc_clk_bbpll_configure+0x38>
4008c95f:	841c      	movi.n	a4, 24
4008c961:	279247        	bne	a2, a4, 4008c98c <rtc_clk_bbpll_configure+0x5c>
4008c964:	000446        	j	4008c979 <rtc_clk_bbpll_configure+0x49>
4008c967:	340c00        	extui	a0, a0, 12, 4
4008c96a:	620c      	movi.n	a2, 6
4008c96c:	3129      	s32i.n	a2, a1, 12
4008c96e:	050c      	movi.n	a5, 0
4008c970:	052d      	mov.n	a2, a5
4008c972:	062c      	movi.n	a6, 32
4008c974:	057d      	mov.n	a7, a5
4008c976:	000c46        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c979:	140c      	movi.n	a4, 1
4008c97b:	020c      	movi.n	a2, 0
4008c97d:	3129      	s32i.n	a2, a1, 12
4008c97f:	045d      	mov.n	a5, a4
4008c981:	420c      	movi.n	a2, 4
4008c983:	e0a062        	movi	a6, 224
4008c986:	b70c      	movi.n	a7, 11
4008c988:	0007c6        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c98b:	040c00        	extui	a0, a0, 12, 1
4008c98e:	3149      	s32i.n	a4, a1, 12
4008c990:	045d      	mov.n	a5, a4
4008c992:	420c      	movi.n	a2, 4
4008c994:	e0a062        	movi	a6, 224
4008c997:	c70c      	movi.n	a7, 12
4008c999:	000386        	j	4008c9ab <rtc_clk_bbpll_configure+0x7b>
4008c99c:	140c      	movi.n	a4, 1
4008c99e:	020c      	movi.n	a2, 0
4008c9a0:	3129      	s32i.n	a2, a1, 12
4008c9a2:	045d      	mov.n	a5, a4
4008c9a4:	420c      	movi.n	a2, 4
4008c9a6:	e0a062        	movi	a6, 224
4008c9a9:	c70c      	movi.n	a7, 12
4008c9ab:	3d4c      	movi.n	a13, 67
4008c9ad:	0ba0c2        	movi	a12, 11
4008c9b0:	04a0b2        	movi	a11, 4
4008c9b3:	66a0a2        	movi	a10, 102
4008c9b6:	d0e681        	l32r	a8, 40080d50 <_init_end+0x950>
4008c9b9:	0008e0        	callx8	a8
4008c9bc:	84a0d2        	movi	a13, 132
4008c9bf:	9c0c      	movi.n	a12, 9
4008c9c1:	4b0c      	movi.n	a11, 4
4008c9c3:	66a0a2        	movi	a10, 102
4008c9c6:	d0e281        	l32r	a8, 40080d50 <_init_end+0x950>
4008c9c9:	0008e0        	callx8	a8
4008c9cc:	002406        	j	4008ca60 <rtc_clk_bbpll_configure+0x130>
4008c9cf:	510000        	lsi	f0, a0, 0x144
4008c9d2:	c0d0a7        	bbs	a0, a10, 4008c996 <rtc_clk_bbpll_configure+0x66>
4008c9d5:	680020        	lsi	f2, a0, 0x1a0
4008c9d8:	df4105        	call0	4006bdec <__udivmoddi4+0x71f8>
4008c9db:	4640d0        	lsi	f13, a0, 0x118
4008c9de:	20c020        	or	a12, a0, a2
4008c9e1:	054900        	extui	a4, a0, 25, 1
4008c9e4:	3a0c      	movi.n	a10, 3
4008c9e6:	ceaf81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008c9e9:	0008e0        	callx8	a8
4008c9ec:	a41c      	movi.n	a4, 26
4008c9ee:	3f1247        	beq	a2, a4, 4008ca31 <rtc_clk_bbpll_configure+0x101>
4008c9f1:	842c      	movi.n	a4, 40
4008c9f3:	071247        	beq	a2, a4, 4008c9fe <rtc_clk_bbpll_configure+0xce>
4008c9f6:	841c      	movi.n	a4, 24
4008c9f8:	259247        	bne	a2, a4, 4008ca21 <rtc_clk_bbpll_configure+0xf1>
4008c9fb:	000406        	j	4008ca0f <rtc_clk_bbpll_configure+0xdf>
4008c9fe:	340c      	movi.n	a4, 3
4008ca00:	620c      	movi.n	a2, 6
4008ca02:	3129      	s32i.n	a2, a1, 12
4008ca04:	050c      	movi.n	a5, 0
4008ca06:	052d      	mov.n	a2, a5
4008ca08:	c61c      	movi.n	a6, 28
4008ca0a:	057d      	mov.n	a7, a5
4008ca0c:	000c06        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca0f:	140c      	movi.n	a4, 1
4008ca11:	020c      	movi.n	a2, 0
4008ca13:	3129      	s32i.n	a2, a1, 12
4008ca15:	045d      	mov.n	a5, a4
4008ca17:	420c      	movi.n	a2, 4
4008ca19:	90a062        	movi	a6, 144
4008ca1c:	b70c      	movi.n	a7, 11
4008ca1e:	000786        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca21:	040c      	movi.n	a4, 0
4008ca23:	3149      	s32i.n	a4, a1, 12
4008ca25:	045d      	mov.n	a5, a4
4008ca27:	420c      	movi.n	a2, 4
4008ca29:	e0a062        	movi	a6, 224
4008ca2c:	c70c      	movi.n	a7, 12
4008ca2e:	000386        	j	4008ca40 <rtc_clk_bbpll_configure+0x110>
4008ca31:	140c      	movi.n	a4, 1
4008ca33:	020c      	movi.n	a2, 0
4008ca35:	3129      	s32i.n	a2, a1, 12
4008ca37:	045d      	mov.n	a5, a4
4008ca39:	420c      	movi.n	a2, 4
4008ca3b:	90a062        	movi	a6, 144
4008ca3e:	c70c      	movi.n	a7, 12
4008ca40:	c3a0d2        	movi	a13, 195
4008ca43:	bc0c      	movi.n	a12, 11
4008ca45:	4b0c      	movi.n	a11, 4
4008ca47:	66a0a2        	movi	a10, 102
4008ca4a:	d0c181        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca4d:	0008e0        	callx8	a8
4008ca50:	74a0d2        	movi	a13, 116
4008ca53:	9c0c      	movi.n	a12, 9
4008ca55:	4b0c      	movi.n	a11, 4
4008ca57:	66a0a2        	movi	a10, 102
4008ca5a:	d0bd81        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca5d:	0008e0        	callx8	a8
4008ca60:	11d590        	slli	a13, a5, 7
4008ca63:	1122c0        	slli	a2, a2, 4
4008ca66:	20dd20        	or	a13, a13, a2
4008ca69:	1144a0        	slli	a4, a4, 6
4008ca6c:	3128      	l32i.n	a2, a1, 12
4008ca6e:	204420        	or	a4, a4, a2
4008ca71:	20dd70        	or	a13, a13, a7
4008ca74:	2c0c      	movi.n	a12, 2
4008ca76:	4b0c      	movi.n	a11, 4
4008ca78:	66a0a2        	movi	a10, 102
4008ca7b:	d0b581        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca7e:	0008e0        	callx8	a8
4008ca81:	06dd      	mov.n	a13, a6
4008ca83:	3c0c      	movi.n	a12, 3
4008ca85:	4b0c      	movi.n	a11, 4
4008ca87:	66a0a2        	movi	a10, 102
4008ca8a:	d0b181        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca8d:	0008e0        	callx8	a8
4008ca90:	04dd      	mov.n	a13, a4
4008ca92:	5c0c      	movi.n	a12, 5
4008ca94:	4b0c      	movi.n	a11, 4
4008ca96:	66a0a2        	movi	a10, 102
4008ca99:	d0ad81        	l32r	a8, 40080d50 <_init_end+0x950>
4008ca9c:	0008e0        	callx8	a8
4008ca9f:	ffe2a5        	call8	4008c8c8 <rtc_clk_slow_freq_get>
4008caa2:	3acc      	bnez.n	a10, 4008caa9 <rtc_clk_bbpll_configure+0x179>
4008caa4:	0a5c      	movi.n	a10, 80
4008caa6:	000086        	j	4008caac <rtc_clk_bbpll_configure+0x17c>
4008caa9:	a0a0a2        	movi	a10, 160
4008caac:	ce7e81        	l32r	a8, 400804a4 <_init_end+0xa4>
4008caaf:	0008e0        	callx8	a8
4008cab2:	d0a421        	l32r	a2, 40080d44 <_init_end+0x944>
4008cab5:	0239      	s32i.n	a3, a2, 0
4008cab7:	f01d      	retw.n
4008cab9:	000000        	ill

4008cabc <rtc_clk_xtal_freq_get>:
4008cabc:	004136        	entry	a1, 32
4008cabf:	d0a721        	l32r	a2, 40080d5c <_init_end+0x95c>
4008cac2:	0020c0        	memw
4008cac5:	0288      	l32i.n	a8, a2, 0
4008cac7:	f42080        	extui	a2, a8, 0, 16
4008caca:	f59080        	extui	a9, a8, 16, 16
4008cacd:	0b9927        	bne	a9, a2, 4008cadc <rtc_clk_xtal_freq_get+0x20>
4008cad0:	280b      	addi.n	a2, a8, -1
4008cad2:	d97c      	movi.n	a9, -3
4008cad4:	09b927        	bgeu	a9, a2, 4008cae1 <rtc_clk_xtal_freq_get+0x25>
4008cad7:	020c      	movi.n	a2, 0
4008cad9:	000186        	j	4008cae3 <rtc_clk_xtal_freq_get+0x27>
4008cadc:	020c      	movi.n	a2, 0
4008cade:	000046        	j	4008cae3 <rtc_clk_xtal_freq_get+0x27>
4008cae1:	120c      	movi.n	a2, 1
4008cae3:	628c      	beqz.n	a2, 4008caed <rtc_clk_xtal_freq_get+0x31>
4008cae5:	d09e21        	l32r	a2, 40080d60 <_init_end+0x960>
4008cae8:	102820        	and	a2, a8, a2
4008caeb:	f01d      	retw.n
4008caed:	020c      	movi.n	a2, 0
4008caef:	f01d      	retw.n
4008caf1:	000000        	ill

4008caf4 <rtc_clk_cpu_freq_mhz_to_config>:
4008caf4:	004136        	entry	a1, 32
4008caf7:	fffc65        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cafa:	173a27        	bltu	a10, a2, 4008cb15 <rtc_clk_cpu_freq_mhz_to_config+0x21>
4008cafd:	c29a20        	quou	a9, a10, a2
4008cb00:	418190        	srli	a8, a9, 1
4008cb03:	808a80        	add	a8, a10, a8
4008cb06:	c28890        	quou	a8, a8, a9
4008cb09:	409287        	bne	a2, a8, 4008cb4d <rtc_clk_cpu_freq_mhz_to_config+0x59>
4008cb0c:	202880        	or	a2, a8, a8
4008cb0f:	00a082        	movi	a8, 0
4008cb12:	000ac6        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb15:	085c      	movi.n	a8, 80
4008cb17:	151287        	beq	a2, a8, 4008cb30 <rtc_clk_cpu_freq_mhz_to_config+0x3c>
4008cb1a:	a0a082        	movi	a8, 160
4008cb1d:	191287        	beq	a2, a8, 4008cb3a <rtc_clk_cpu_freq_mhz_to_config+0x46>
4008cb20:	f0a082        	movi	a8, 240
4008cb23:	2a9287        	bne	a2, a8, 4008cb51 <rtc_clk_cpu_freq_mhz_to_config+0x5d>
4008cb26:	290c      	movi.n	a9, 2
4008cb28:	180c      	movi.n	a8, 1
4008cb2a:	e0a1a2        	movi	a10, 0x1e0
4008cb2d:	000406        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb30:	490c      	movi.n	a9, 4
4008cb32:	180c      	movi.n	a8, 1
4008cb34:	40a1a2        	movi	a10, 0x140
4008cb37:	000186        	j	4008cb41 <rtc_clk_cpu_freq_mhz_to_config+0x4d>
4008cb3a:	290c      	movi.n	a9, 2
4008cb3c:	180c      	movi.n	a8, 1
4008cb3e:	40a1a2        	movi	a10, 0x140
4008cb41:	0389      	s32i.n	a8, a3, 0
4008cb43:	13a9      	s32i.n	a10, a3, 4
4008cb45:	2399      	s32i.n	a9, a3, 8
4008cb47:	3329      	s32i.n	a2, a3, 12
4008cb49:	120c      	movi.n	a2, 1
4008cb4b:	f01d      	retw.n
4008cb4d:	020c      	movi.n	a2, 0
4008cb4f:	f01d      	retw.n
4008cb51:	020c      	movi.n	a2, 0
4008cb53:	f01d      	retw.n
4008cb55:	000000        	ill

4008cb58 <rtc_clk_cpu_freq_get_config>:
4008cb58:	004136        	entry	a1, 32
4008cb5b:	d04d31        	l32r	a3, 40080c90 <_init_end+0x890>
4008cb5e:	0020c0        	memw
4008cb61:	0388      	l32i.n	a8, a3, 0
4008cb63:	158b80        	extui	a8, a8, 27, 2
4008cb66:	221826        	beqi	a8, 1, 4008cb8c <rtc_clk_cpu_freq_get_config+0x34>
4008cb69:	488c      	beqz.n	a8, 4008cb71 <rtc_clk_cpu_freq_get_config+0x19>
4008cb6b:	572826        	beqi	a8, 2, 4008cbc6 <rtc_clk_cpu_freq_get_config+0x6e>
4008cb6e:	001006        	j	4008cbb2 <rtc_clk_cpu_freq_get_config+0x5a>
4008cb71:	d07c31        	l32r	a3, 40080d64 <_init_end+0x964>
4008cb74:	0020c0        	memw
4008cb77:	002332        	l32i	a3, a3, 0
4008cb7a:	943030        	extui	a3, a3, 0, 10
4008cb7d:	01c332        	addi	a3, a3, 1
4008cb80:	fff3a5        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cb83:	c28a30        	quou	a8, a10, a3
4008cb86:	00a092        	movi	a9, 0
4008cb89:	001a46        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cb8c:	d077a1        	l32r	a10, 40080d68 <_init_end+0x968>
4008cb8f:	f4dba5        	call8	40081948 <esp_dport_access_reg_read>
4008cb92:	14a0a0        	extui	a10, a10, 0, 2
4008cb95:	038a16        	beqz	a10, 4008cbd1 <rtc_clk_cpu_freq_get_config+0x79>
4008cb98:	411a26        	beqi	a10, 1, 4008cbdd <rtc_clk_cpu_freq_get_config+0x85>
4008cb9b:	4d2a26        	beqi	a10, 2, 4008cbec <rtc_clk_cpu_freq_get_config+0x94>
4008cb9e:	f71925        	call8	40083d30 <esp_log_timestamp>
4008cba1:	d072c1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008cba4:	0abd      	mov.n	a11, a10
4008cba6:	d072a1        	l32r	a10, 40080d70 <_init_end+0x970>
4008cba9:	ce3b81        	l32r	a8, 40080498 <_init_end+0x98>
4008cbac:	0008e0        	callx8	a8
4008cbaf:	fe7be5        	call8	4008b36c <abort>
4008cbb2:	f717e5        	call8	40083d30 <esp_log_timestamp>
4008cbb5:	d06dc1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008cbb8:	0abd      	mov.n	a11, a10
4008cbba:	d06da1        	l32r	a10, 40080d70 <_init_end+0x970>
4008cbbd:	ce3681        	l32r	a8, 40080498 <_init_end+0x98>
4008cbc0:	0008e0        	callx8	a8
4008cbc3:	fe7aa5        	call8	4008b36c <abort>
4008cbc6:	880c      	movi.n	a8, 8
4008cbc8:	130c      	movi.n	a3, 1
4008cbca:	08ad      	mov.n	a10, a8
4008cbcc:	290c      	movi.n	a9, 2
4008cbce:	000906        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbd1:	085c      	movi.n	a8, 80
4008cbd3:	430c      	movi.n	a3, 4
4008cbd5:	40a1a2        	movi	a10, 0x140
4008cbd8:	190c      	movi.n	a9, 1
4008cbda:	000606        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbdd:	a0a082        	movi	a8, 160
4008cbe0:	230c      	movi.n	a3, 2
4008cbe2:	40a1a2        	movi	a10, 0x140
4008cbe5:	190c      	movi.n	a9, 1
4008cbe7:	0002c6        	j	4008cbf6 <rtc_clk_cpu_freq_get_config+0x9e>
4008cbea:	820000        	mull	a0, a0, a0
4008cbed:	0cf0a0        	lsi	f10, a0, 48
4008cbf0:	a1a223        	lsi	f2, a2, 0x284
4008cbf3:	190ce0        	lsi	f14, a12, 100
4008cbf6:	0299      	s32i.n	a9, a2, 0
4008cbf8:	12a9      	s32i.n	a10, a2, 4
4008cbfa:	2239      	s32i.n	a3, a2, 8
4008cbfc:	3289      	s32i.n	a8, a2, 12
4008cbfe:	f01d      	retw.n

4008cc00 <rtc_clk_apb_freq_update>:
4008cc00:	004136        	entry	a1, 32
4008cc03:	412c20        	srli	a2, a2, 12
4008cc06:	f48020        	extui	a8, a2, 0, 16
4008cc09:	112200        	slli	a2, a2, 16
4008cc0c:	202820        	or	a2, a8, a2
4008cc0f:	d05981        	l32r	a8, 40080d74 <_init_end+0x974>
4008cc12:	0020c0        	memw
4008cc15:	0829      	s32i.n	a2, a8, 0
4008cc17:	f01d      	retw.n
4008cc19:	000000        	ill

4008cc1c <rtc_clk_cpu_freq_to_xtal>:
4008cc1c:	004136        	entry	a1, 32
4008cc1f:	02ad      	mov.n	a10, a2
4008cc21:	f44ee5        	call8	40081110 <ets_update_cpu_frequency>
4008cc24:	d050a1        	l32r	a10, 40080d64 <_init_end+0x964>
4008cc27:	0020c0        	memw
4008cc2a:	0a98      	l32i.n	a9, a10, 0
4008cc2c:	00ac82        	movi	a8, 0xfffffc00
4008cc2f:	109980        	and	a9, a9, a8
4008cc32:	830b      	addi.n	a8, a3, -1
4008cc34:	948080        	extui	a8, a8, 0, 10
4008cc37:	208890        	or	a8, a8, a9
4008cc3a:	0020c0        	memw
4008cc3d:	0a89      	s32i.n	a8, a10, 0
4008cc3f:	f03d      	nop.n
4008cc41:	f03d      	nop.n
4008cc43:	f03d      	nop.n
4008cc45:	f03d      	nop.n
4008cc47:	ce19a1        	l32r	a10, 400804ac <_init_end+0xac>
4008cc4a:	82a2a0        	mull	a10, a2, a10
4008cc4d:	cecd81        	l32r	a8, 40080784 <_init_end+0x384>
4008cc50:	b28a80        	mulsh	a8, a10, a8
4008cc53:	318280        	srai	a8, a8, 18
4008cc56:	313fa0        	srai	a3, a10, 31
4008cc59:	c08830        	sub	a8, a8, a3
4008cc5c:	880b      	addi.n	a8, a8, -1
4008cc5e:	d04631        	l32r	a3, 40080d78 <_init_end+0x978>
4008cc61:	0020c0        	memw
4008cc64:	0389      	s32i.n	a8, a3, 0
4008cc66:	f03d      	nop.n
4008cc68:	f03d      	nop.n
4008cc6a:	f03d      	nop.n
4008cc6c:	f03d      	nop.n
4008cc6e:	d00881        	l32r	a8, 40080c90 <_init_end+0x890>
4008cc71:	0020c0        	memw
4008cc74:	0898      	l32i.n	a9, a8, 0
4008cc76:	d04131        	l32r	a3, 40080d7c <_init_end+0x97c>
4008cc79:	103930        	and	a3, a9, a3
4008cc7c:	0020c0        	memw
4008cc7f:	0839      	s32i.n	a3, a8, 0
4008cc81:	fff7e5        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cc84:	1c32e6        	bgei	a2, 3, 4008cca4 <rtc_clk_cpu_freq_to_xtal+0x88>
4008cc87:	cffa81        	l32r	a8, 40080c70 <_init_end+0x870>
4008cc8a:	0020c0        	memw
4008cc8d:	0838      	l32i.n	a3, a8, 0
4008cc8f:	cfee21        	l32r	a2, 40080c48 <_init_end+0x848>
4008cc92:	103320        	and	a3, a3, a2
4008cc95:	cea421        	l32r	a2, 40080728 <_init_end+0x328>
4008cc98:	202320        	or	a2, a3, a2
4008cc9b:	0020c0        	memw
4008cc9e:	0829      	s32i.n	a2, a8, 0
4008cca0:	f01d      	retw.n
4008cca2:	810000        	src	a0, a0, a0
4008cca5:	c0cff3        	ssip	f15, a15, 0x300
4008cca8:	380020        	lsi	f2, a0, 224
4008ccab:	2108      	l32i.n	a0, a1, 8
4008ccad:	20cfe7        	bnall	a15, a14, 4008ccd1 <rtc_clk_cpu_freq_set_xtal+0x11>
4008ccb0:	211033        	lsi	f3, a0, 132
4008ccb3:	ceed      	lsi	f14, a14, 56
4008ccb5:	202320        	or	a2, a3, a2
4008ccb8:	0020c0        	memw
4008ccbb:	0829      	s32i.n	a2, a8, 0
4008ccbd:	f01d      	retw.n
	...

4008ccc0 <rtc_clk_cpu_freq_set_xtal>:
4008ccc0:	004136        	entry	a1, 32
4008ccc3:	ffdfa5        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008ccc6:	1b0c      	movi.n	a11, 1
4008ccc8:	fff525        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008cccb:	ff8a65        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ccce:	ff9ea5        	call8	4008c6b8 <rtc_clk_bbpll_disable>
4008ccd1:	f01d      	retw.n
	...

4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>:
4008ccd4:	004136        	entry	a1, 32
4008ccd7:	50a082        	movi	a8, 80
4008ccda:	201287        	beq	a2, a8, 4008ccfe <rtc_clk_cpu_freq_to_pll_mhz+0x2a>
4008ccdd:	a0a082        	movi	a8, 160
4008cce0:	211287        	beq	a2, a8, 4008cd05 <rtc_clk_cpu_freq_to_pll_mhz+0x31>
4008cce3:	f0a082        	movi	a8, 240
4008cce6:	231287        	beq	a2, a8, 4008cd0d <rtc_clk_cpu_freq_to_pll_mhz+0x39>
4008cce9:	f70465        	call8	40083d30 <esp_log_timestamp>
4008ccec:	d020c1        	l32r	a12, 40080d6c <_init_end+0x96c>
4008ccef:	20baa0        	or	a11, a10, a10
4008ccf2:	d023a1        	l32r	a10, 40080d80 <_init_end+0x980>
4008ccf5:	cde881        	l32r	a8, 40080498 <_init_end+0x98>
4008ccf8:	0008e0        	callx8	a8
4008ccfb:	fe6725        	call8	4008b36c <abort>
4008ccfe:	0a0c      	movi.n	a10, 0
4008cd00:	480c      	movi.n	a8, 4
4008cd02:	000306        	j	4008cd12 <rtc_clk_cpu_freq_to_pll_mhz+0x3e>
4008cd05:	1a0c      	movi.n	a10, 1
4008cd07:	480c      	movi.n	a8, 4
4008cd09:	000146        	j	4008cd12 <rtc_clk_cpu_freq_to_pll_mhz+0x3e>
4008cd0c:	a0a200        	addx4	a10, a2, a0
4008cd0f:	780c02        	l8ui	a0, a12, 120
4008cd12:	d01591        	l32r	a9, 40080d68 <_init_end+0x968>
4008cd15:	0020c0        	memw
4008cd18:	09a9      	s32i.n	a10, a9, 0
4008cd1a:	f03d      	nop.n
4008cd1c:	f03d      	nop.n
4008cd1e:	f03d      	nop.n
4008cd20:	f03d      	nop.n
4008cd22:	cfd3a1        	l32r	a10, 40080c70 <_init_end+0x870>
4008cd25:	0020c0        	memw
4008cd28:	0ab8      	l32i.n	a11, a10, 0
4008cd2a:	cfc791        	l32r	a9, 40080c48 <_init_end+0x848>
4008cd2d:	109b90        	and	a9, a11, a9
4008cd30:	118850        	slli	a8, a8, 11
4008cd33:	208890        	or	a8, a8, a9
4008cd36:	0020c0        	memw
4008cd39:	0a89      	s32i.n	a8, a10, 0
4008cd3b:	f03d      	nop.n
4008cd3d:	f03d      	nop.n
4008cd3f:	f03d      	nop.n
4008cd41:	f03d      	nop.n
4008cd43:	cfd3a1        	l32r	a10, 40080c90 <_init_end+0x890>
4008cd46:	0020c0        	memw
4008cd49:	0a98      	l32i.n	a9, a10, 0
4008cd4b:	d00c81        	l32r	a8, 40080d7c <_init_end+0x97c>
4008cd4e:	109980        	and	a9, a9, a8
4008cd51:	cfc881        	l32r	a8, 40080c74 <_init_end+0x874>
4008cd54:	208980        	or	a8, a9, a8
4008cd57:	0020c0        	memw
4008cd5a:	0a89      	s32i.n	a8, a10, 0
4008cd5c:	f03d      	nop.n
4008cd5e:	f03d      	nop.n
4008cd60:	f03d      	nop.n
4008cd62:	f03d      	nop.n
4008cd64:	d008a1        	l32r	a10, 40080d84 <_init_end+0x984>
4008cd67:	ffe9a5        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cd6a:	02ad      	mov.n	a10, a2
4008cd6c:	f43a25        	call8	40081110 <ets_update_cpu_frequency>
4008cd6f:	ff8025        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008cd72:	f01d      	retw.n

4008cd74 <rtc_clk_cpu_freq_to_8m>:
4008cd74:	004136        	entry	a1, 32
4008cd77:	08a0a2        	movi	a10, 8
4008cd7a:	f43965        	call8	40081110 <ets_update_cpu_frequency>
4008cd7d:	cfbca1        	l32r	a10, 40080c70 <_init_end+0x870>
4008cd80:	0020c0        	memw
4008cd83:	002a92        	l32i	a9, a10, 0
4008cd86:	cfb081        	l32r	a8, 40080c48 <_init_end+0x848>
4008cd89:	109980        	and	a9, a9, a8
4008cd8c:	ceb781        	l32r	a8, 40080868 <_init_end+0x468>
4008cd8f:	208980        	or	a8, a9, a8
4008cd92:	0020c0        	memw
4008cd95:	006a82        	s32i	a8, a10, 0
4008cd98:	f03d      	nop.n
4008cd9a:	f03d      	nop.n
4008cd9c:	f03d      	nop.n
4008cd9e:	f03d      	nop.n
4008cda0:	cff191        	l32r	a9, 40080d64 <_init_end+0x964>
4008cda3:	0020c0        	memw
4008cda6:	09a8      	l32i.n	a10, a9, 0
4008cda8:	00ac82        	movi	a8, 0xfffffc00
4008cdab:	108a80        	and	a8, a10, a8
4008cdae:	0020c0        	memw
4008cdb1:	0989      	s32i.n	a8, a9, 0
4008cdb3:	f03d      	nop.n
4008cdb5:	f03d      	nop.n
4008cdb7:	f03d      	nop.n
4008cdb9:	f03d      	nop.n
4008cdbb:	cfb5a1        	l32r	a10, 40080c90 <_init_end+0x890>
4008cdbe:	0020c0        	memw
4008cdc1:	0a98      	l32i.n	a9, a10, 0
4008cdc3:	cfee81        	l32r	a8, 40080d7c <_init_end+0x97c>
4008cdc6:	109980        	and	a9, a9, a8
4008cdc9:	cde681        	l32r	a8, 40080564 <_init_end+0x164>
4008cdcc:	208980        	or	a8, a9, a8
4008cdcf:	0020c0        	memw
4008cdd2:	0a89      	s32i.n	a8, a10, 0
4008cdd4:	f03d      	nop.n
4008cdd6:	f03d      	nop.n
4008cdd8:	f03d      	nop.n
4008cdda:	f03d      	nop.n
4008cddc:	cfeba1        	l32r	a10, 40080d88 <_init_end+0x988>
4008cddf:	ffe225        	call8	4008cc00 <rtc_clk_apb_freq_update>
4008cde2:	f01d      	retw.n

4008cde4 <rtc_clk_cpu_freq_set_config>:
4008cde4:	004136        	entry	a1, 32
4008cde7:	ffcd65        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008cdea:	cfa931        	l32r	a3, 40080c90 <_init_end+0x890>
4008cded:	0020c0        	memw
4008cdf0:	002332        	l32i	a3, a3, 0
4008cdf3:	153b30        	extui	a3, a3, 27, 2
4008cdf6:	008316        	beqz	a3, 4008ce02 <rtc_clk_cpu_freq_set_config+0x1e>
4008cdf9:	01a0b2        	movi	a11, 1
4008cdfc:	ffe1e5        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008cdff:	ff7725        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ce02:	021366        	bnei	a3, 1, 4008ce08 <rtc_clk_cpu_freq_set_config+0x24>
4008ce05:	ff8b25        	call8	4008c6b8 <rtc_clk_bbpll_disable>
4008ce08:	002232        	l32i	a3, a2, 0
4008ce0b:	00d356        	bnez	a3, 4008ce1c <rtc_clk_cpu_freq_set_config+0x38>
4008ce0e:	0222b2        	l32i	a11, a2, 8
4008ce11:	282bb6        	bltui	a11, 2, 4008ce3d <rtc_clk_cpu_freq_set_config+0x59>
4008ce14:	32a8      	l32i.n	a10, a2, 12
4008ce16:	ffe065        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008ce19:	f01d      	retw.n
4008ce1b:	136600        	lsi	f0, a6, 76
4008ce1e:	8e6517        	bbci	a5, 1, 4008cdb0 <rtc_clk_cpu_freq_to_8m+0x3c>
4008ce21:	ff          	.byte 0xff
4008ce22:	ff74e5        	call8	4008c570 <rtc_clk_wait_for_slow_cycle>
4008ce25:	ffc965        	call8	4008cabc <rtc_clk_xtal_freq_get>
4008ce28:	0122b2        	l32i	a11, a2, 4
4008ce2b:	ffb065        	call8	4008c930 <rtc_clk_bbpll_configure>
4008ce2e:	0322a2        	l32i	a10, a2, 12
4008ce31:	ffea25        	call8	4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>
4008ce34:	000090        	retw
4008ce37:	022366        	bnei	a3, 2, 4008ce3d <rtc_clk_cpu_freq_set_config+0x59>
4008ce3a:	fff3a5        	call8	4008cd74 <rtc_clk_cpu_freq_to_8m>
4008ce3d:	f01d      	retw.n
	...

4008ce40 <rtc_clk_cpu_freq_set_config_fast>:
4008ce40:	004136        	entry	a1, 32
4008ce43:	002282        	l32i	a8, a2, 0
4008ce46:	00a856        	bnez	a8, 4008ce54 <rtc_clk_cpu_freq_set_config_fast+0x14>
4008ce49:	0222b2        	l32i	a11, a2, 8
4008ce4c:	32a8      	l32i.n	a10, a2, 12
4008ce4e:	ffdce5        	call8	4008cc1c <rtc_clk_cpu_freq_to_xtal>
4008ce51:	f01d      	retw.n
4008ce53:	186600        	lsxp	f6, a6, a0
4008ce56:	229214        	lsi	f1, a2, 136
4008ce59:	ba8101        	l32r	a0, 4007b860 <__udivmoddi4+0x16c6c>
4008ce5c:	cf          	.byte 0xcf
4008ce5d:	002882        	l32i	a8, a8, 0
4008ce60:	089987        	bne	a9, a8, 4008ce6c <rtc_clk_cpu_freq_set_config_fast+0x2c>
4008ce63:	0322a2        	l32i	a10, a2, 12
4008ce66:	ffe6e5        	call8	4008ccd4 <rtc_clk_cpu_freq_to_pll_mhz>
4008ce69:	f01d      	retw.n
4008ce6b:	02ad00        	andb	b10, b13, b0
4008ce6e:	fff765        	call8	4008cde4 <rtc_clk_cpu_freq_set_config>
4008ce71:	f01d      	retw.n
	...

4008ce74 <rtc_clk_apb_freq_get>:
4008ce74:	004136        	entry	a1, 32
4008ce77:	cfbf21        	l32r	a2, 40080d74 <_init_end+0x974>
4008ce7a:	0020c0        	memw
4008ce7d:	0288      	l32i.n	a8, a2, 0
4008ce7f:	f48080        	extui	a8, a8, 0, 16
4008ce82:	118840        	slli	a8, a8, 12
4008ce85:	cfc121        	l32r	a2, 40080d8c <_init_end+0x98c>
4008ce88:	882a      	add.n	a8, a8, a2
4008ce8a:	ce3e91        	l32r	a9, 40080784 <_init_end+0x384>
4008ce8d:	a28890        	muluh	a8, a8, a9
4008ce90:	d58280        	extui	a8, a8, 18, 14
4008ce93:	cd8621        	l32r	a2, 400804ac <_init_end+0xac>
4008ce96:	822820        	mull	a2, a8, a2
4008ce99:	f01d      	retw.n
	...

4008ce9c <xthal_window_spill_nw>:
4008ce9c:	034820        	rsr.windowbase	a2
4008ce9f:	221b      	addi.n	a2, a2, 1
4008cea1:	400200        	ssr	a2
4008cea4:	034930        	rsr.windowstart	a3
4008cea7:	912030        	srl	a2, a3
4008ceaa:	a13300        	sll	a3, a3
4008cead:	0bf3d6        	bgez	a3, 4008cf70 <xthal_window_spill_nw+0xd4>
4008ceb0:	f53030        	extui	a3, a3, 16, 16
4008ceb3:	202230        	or	a2, a2, a3
4008ceb6:	603020        	neg	a3, a2
4008ceb9:	103320        	and	a3, a3, a2
4008cebc:	40f330        	nsau	a3, a3
4008cebf:	401300        	ssl	a3
4008cec2:	912020        	srl	a2, a2
4008cec5:	134920        	wsr.windowstart	a2
4008cec8:	034820        	rsr.windowbase	a2
4008cecb:	1fc222        	addi	a2, a2, 31
4008cece:	c03230        	sub	a3, a2, a3
4008ced1:	134830        	wsr.windowbase	a3
4008ced4:	002010        	rsync
4008ced7:	034920        	rsr.windowstart	a2
4008ceda:	07a216        	beqz	a2, 4008cf58 <xthal_window_spill_nw+0xbc>
4008cedd:	08e207        	bbsi	a2, 0, 4008cee9 <xthal_window_spill_nw+0x4d>
4008cee0:	19e217        	bbsi	a2, 1, 4008cefd <xthal_window_spill_nw+0x61>
4008cee3:	3ae227        	bbsi	a2, 2, 4008cf21 <xthal_window_spill_nw+0x85>
4008cee6:	002306        	j	4008cf76 <xthal_window_spill_nw+0xda>
4008cee9:	f0c932        	addi	a3, a9, -16
4008ceec:	0349      	s32i.n	a4, a3, 0
4008ceee:	1359      	s32i.n	a5, a3, 4
4008cef0:	2369      	s32i.n	a6, a3, 8
4008cef2:	3379      	s32i.n	a7, a3, 12
4008cef4:	416120        	srli	a6, a2, 1
4008cef7:	408010        	rotw	1
4008cefa:	fff706        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cefd:	f0cd32        	addi	a3, a13, -16
4008cf00:	0349      	s32i.n	a4, a3, 0
4008cf02:	1359      	s32i.n	a5, a3, 4
4008cf04:	2369      	s32i.n	a6, a3, 8
4008cf06:	3379      	s32i.n	a7, a3, 12
4008cf08:	f4c532        	addi	a3, a5, -12
4008cf0b:	0338      	l32i.n	a3, a3, 0
4008cf0d:	e0c332        	addi	a3, a3, -32
4008cf10:	0389      	s32i.n	a8, a3, 0
4008cf12:	1399      	s32i.n	a9, a3, 4
4008cf14:	23a9      	s32i.n	a10, a3, 8
4008cf16:	33b9      	s32i.n	a11, a3, 12
4008cf18:	41a220        	srli	a10, a2, 2
4008cf1b:	408020        	rotw	2
4008cf1e:	ffee06        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cf21:	408010        	rotw	1
4008cf24:	f0cdd2        	addi	a13, a13, -16
4008cf27:	0d09      	s32i.n	a0, a13, 0
4008cf29:	1d19      	s32i.n	a1, a13, 4
4008cf2b:	2d29      	s32i.n	a2, a13, 8
4008cf2d:	3d39      	s32i.n	a3, a13, 12
4008cf2f:	f4c132        	addi	a3, a1, -12
4008cf32:	0338      	l32i.n	a3, a3, 0
4008cf34:	10cdd2        	addi	a13, a13, 16
4008cf37:	d0c332        	addi	a3, a3, -48
4008cf3a:	0349      	s32i.n	a4, a3, 0
4008cf3c:	1359      	s32i.n	a5, a3, 4
4008cf3e:	2369      	s32i.n	a6, a3, 8
4008cf40:	3379      	s32i.n	a7, a3, 12
4008cf42:	4389      	s32i.n	a8, a3, 16
4008cf44:	5399      	s32i.n	a9, a3, 20
4008cf46:	63a9      	s32i.n	a10, a3, 24
4008cf48:	73b9      	s32i.n	a11, a3, 28
4008cf4a:	4080f0        	rotw	-1
4008cf4d:	41e320        	srli	a14, a2, 3
4008cf50:	408030        	rotw	3
4008cf53:	ffe0c6        	j	4008ceda <xthal_window_spill_nw+0x3e>
4008cf56:	100000        	and	a0, a0, a0
4008cf59:	204080        	or	a4, a0, a8
4008cf5c:	0348      	l32i.n	a4, a3, 0
4008cf5e:	401200        	ssl	a2
4008cf61:	120c      	movi.n	a2, 1
4008cf63:	a12200        	sll	a2, a2
4008cf66:	134920        	wsr.windowstart	a2
4008cf69:	002010        	rsync
4008cf6c:	020c      	movi.n	a2, 0
4008cf6e:	f00d      	ret.n
4008cf70:	120c      	movi.n	a2, 1
4008cf72:	f00d      	ret.n
4008cf74:	f00000        	subx8	a0, a0, a0
4008cf77:	1b1122        	l16ui	a2, a1, 54
4008cf7a:	483022        	lsi	f2, a0, 0x120
4008cf7d:	e2f703        	lsi	f0, a7, 0x388
4008cf80:	0b0a      	add.n	a0, a11, a0
4008cf82:	22f033        	lsi	f3, a0, 136
4008cf85:	62f711        	l32r	a1, 40065b64 <__udivmoddi4+0xf70>
4008cf88:	3030f7        	bltu	a0, a15, 4008cfbc <xthal_window_spill+0xc>
4008cf8b:	130034        	lsi	f3, a0, 76
4008cf8e:	320040        	orbc	b0, b0, b4
4008cf91:	223011        	l32r	a1, 40055854 <nvds_init_memory+0x14fc>
4008cf94:	202081        	l32r	a8, 40055014 <nvds_init_memory+0xcbc>
4008cf97:	4920f4        	mula.da.hl.ldinc	m2, a0, m0, a15
4008cf9a:	033013        	lsi	f1, a0, 12
4008cf9d:	022c03        	lsi	f0, a12, 8
4008cfa0:	c03230        	sub	a3, a2, a3
4008cfa3:	134830        	wsr.windowbase	a3
4008cfa6:	002010        	rsync
4008cfa9:	220c      	movi.n	a2, 2
4008cfab:	f00d      	ret.n
4008cfad:	000000        	ill

4008cfb0 <xthal_window_spill>:
4008cfb0:	002136        	entry	a1, 16
4008cfb3:	cec561        	l32r	a6, 40080ac8 <_init_end+0x6c8>
4008cfb6:	03e650        	rsr.ps	a5
4008cfb9:	004d      	mov.n	a4, a0
4008cfbb:	102560        	and	a2, a5, a6
4008cfbe:	223b      	addi.n	a2, a2, 3
4008cfc0:	13e620        	wsr.ps	a2
4008cfc3:	002010        	rsync
4008cfc6:	ffed45        	call0	4008ce9c <xthal_window_spill_nw>
4008cfc9:	040d      	mov.n	a0, a4
4008cfcb:	13e650        	wsr.ps	a5
4008cfce:	002010        	rsync
4008cfd1:	f01d      	retw.n
	...

4008cfd4 <xthal_get_ccount>:
4008cfd4:	002136        	entry	a1, 16
4008cfd7:	03ea20        	rsr.ccount	a2
4008cfda:	f01d      	retw.n

4008cfdc <xthal_set_ccompare>:
4008cfdc:	002136        	entry	a1, 16
4008cfdf:	52cc      	bnez.n	a2, 4008cfe8 <xthal_set_ccompare+0xc>
4008cfe1:	13f030        	wsr.ccompare0	a3
4008cfe4:	0003c6        	j	4008cff7 <xthal_set_ccompare+0x1b>
4008cfe7:	22f600        	orb	b15, b6, b0
4008cfea:	f13005        	call0	4007e2ec <__udivmoddi4+0x196f8>
4008cfed:	014613        	ssi	f1, a6, 4
4008cff0:	32f600        	orbc	b15, b6, b0
4008cff3:	f23005        	call0	4007f2f4 <__udivmoddi4+0x1a700>
4008cff6:	200013        	lsi	f1, a0, 128
4008cff9:	f01d00        	subx8	a1, a13, a0

4008cffc <xthal_get_ccompare>:
4008cffc:	002136        	entry	a1, 16
4008cfff:	52cc      	bnez.n	a2, 4008d008 <xthal_get_ccompare+0xc>
4008d001:	03f020        	rsr.ccompare0	a2
4008d004:	f01d      	retw.n
4008d006:	f60000        	lsi	f0, a0, 0x3d8
4008d009:	200422        	l8ui	a2, a4, 32
4008d00c:	1d03f1        	l32r	a15, 40054418 <nvds_init_memory+0xc0>
4008d00f:	32f6f0        	orbc	b15, b6, b15
4008d012:	f22004        	lsi	f0, a0, 0x3c8
4008d015:	f01d03        	lsi	f0, a13, 0x3c0
4008d018:	020c      	movi.n	a2, 0
4008d01a:	f01d      	retw.n

4008d01c <xthal_set_intclear>:
4008d01c:	002136        	entry	a1, 16
4008d01f:	13e320        	wsr.intclear	a2
4008d022:	f01d      	retw.n

4008d024 <xthal_restore_extra_nw>:
4008d024:	0238      	l32i.n	a3, a2, 0
4008d026:	f3e730        	wur.threadptr	a3
4008d029:	1238      	l32i.n	a3, a2, 4
4008d02b:	131030        	wsr.acclo	a3
4008d02e:	2238      	l32i.n	a3, a2, 8
4008d030:	131130        	wsr.acchi	a3
4008d033:	3238      	l32i.n	a3, a2, 12
4008d035:	130430        	wsr.br	a3
4008d038:	4238      	l32i.n	a3, a2, 16
4008d03a:	130c30        	wsr.scompare1	a3
4008d03d:	5238      	l32i.n	a3, a2, 20
4008d03f:	132030        	wsr.m0	a3
4008d042:	6238      	l32i.n	a3, a2, 24
4008d044:	132130        	wsr.m1	a3
4008d047:	7238      	l32i.n	a3, a2, 28
4008d049:	132230        	wsr.m2	a3
4008d04c:	8238      	l32i.n	a3, a2, 32
4008d04e:	132330        	wsr.m3	a3
4008d051:	9238      	l32i.n	a3, a2, 36
4008d053:	f3ea30        	wur.f64r_lo	a3
4008d056:	a238      	l32i.n	a3, a2, 40
4008d058:	f3eb30        	wur.f64r_hi	a3
4008d05b:	b238      	l32i.n	a3, a2, 44
4008d05d:	f3ec30        	wur.f64s	a3
4008d060:	f00d      	ret.n
	...

4008d064 <xthal_save_extra_nw>:
4008d064:	e33e70        	rur.threadptr	a3
4008d067:	0239      	s32i.n	a3, a2, 0
4008d069:	031030        	rsr.acclo	a3
4008d06c:	1239      	s32i.n	a3, a2, 4
4008d06e:	031130        	rsr.acchi	a3
4008d071:	2239      	s32i.n	a3, a2, 8
4008d073:	030430        	rsr.br	a3
4008d076:	3239      	s32i.n	a3, a2, 12
4008d078:	030c30        	rsr.scompare1	a3
4008d07b:	4239      	s32i.n	a3, a2, 16
4008d07d:	032030        	rsr.m0	a3
4008d080:	5239      	s32i.n	a3, a2, 20
4008d082:	032130        	rsr.m1	a3
4008d085:	6239      	s32i.n	a3, a2, 24
4008d087:	032230        	rsr.m2	a3
4008d08a:	7239      	s32i.n	a3, a2, 28
4008d08c:	032330        	rsr.m3	a3
4008d08f:	8239      	s32i.n	a3, a2, 32
4008d091:	e33ea0        	rur.f64r_lo	a3
4008d094:	9239      	s32i.n	a3, a2, 36
4008d096:	e33eb0        	rur.f64r_hi	a3
4008d099:	a239      	s32i.n	a3, a2, 40
4008d09b:	e33ec0        	rur.f64s	a3
4008d09e:	b239      	s32i.n	a3, a2, 44
4008d0a0:	f00d      	ret.n
	...

4008d0a4 <__xtensa_libgcc_window_spill>:
4008d0a4:	006136        	entry	a1, 48
4008d0a7:	000075        	call12	4008d0ac <__xtensa_libgcc_window_spill+0x8>
4008d0aa:	f01d      	retw.n
4008d0ac:	006136        	entry	a1, 48
4008d0af:	00cd      	mov.n	a12, a0
4008d0b1:	006136        	entry	a1, 48
4008d0b4:	00cd      	mov.n	a12, a0
4008d0b6:	006136        	entry	a1, 48
4008d0b9:	00cd      	mov.n	a12, a0
4008d0bb:	002136        	entry	a1, 16
4008d0be:	088d      	mov.n	a8, a8
4008d0c0:	f01d      	retw.n
	...

4008d0c4 <__xtensa_nonlocal_goto>:
4008d0c4:	004136        	entry	a1, 32
4008d0c7:	fffde5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
4008d0ca:	f0c152        	addi	a5, a1, -16
4008d0cd:	1568      	l32i.n	a6, a5, 4
4008d0cf:	f0c662        	addi	a6, a6, -16
4008d0d2:	008d      	mov.n	a8, a0
4008d0d4:	000186        	j	4008d0de <__xtensa_nonlocal_goto+0x1a>
4008d0d7:	0588      	l32i.n	a8, a5, 0
4008d0d9:	065d      	mov.n	a5, a6
4008d0db:	f0c762        	addi	a6, a7, -16
4008d0de:	1678      	l32i.n	a7, a6, 4
4008d0e0:	f3b277        	bgeu	a2, a7, 4008d0d7 <__xtensa_nonlocal_goto+0x13>
4008d0e3:	f0c142        	addi	a4, a1, -16
4008d0e6:	0568      	l32i.n	a6, a5, 0
4008d0e8:	1578      	l32i.n	a7, a5, 4
4008d0ea:	0469      	s32i.n	a6, a4, 0
4008d0ec:	1479      	s32i.n	a7, a4, 4
4008d0ee:	2568      	l32i.n	a6, a5, 8
4008d0f0:	3578      	l32i.n	a7, a5, 12
4008d0f2:	2469      	s32i.n	a6, a4, 8
4008d0f4:	3479      	s32i.n	a7, a4, 12
4008d0f6:	158e80        	extui	a8, a8, 30, 2
4008d0f9:	1133e0        	slli	a3, a3, 2
4008d0fc:	404200        	ssai	2
4008d0ff:	810830        	src	a0, a8, a3
4008d102:	f01d      	retw.n

4008d104 <__xtensa_sync_caches>:
4008d104:	004136        	entry	a1, 32
4008d107:	002000        	isync
4008d10a:	f01d      	retw.n

4008d10c <esp_rom_spiflash_read_status>:
4008d10c:	006136        	entry	a1, 48
4008d10f:	180c      	movi.n	a8, 1
4008d111:	3189      	s32i.n	a8, a1, 12
4008d113:	f03d      	nop.n
4008d115:	f03d      	nop.n
4008d117:	f03d      	nop.n
4008d119:	f03d      	nop.n
4008d11b:	cf1d81        	l32r	a8, 40080d90 <_init_end+0x990>
4008d11e:	010882        	l8ui	a8, a8, 1
4008d121:	043816        	beqz	a8, 4008d168 <esp_rom_spiflash_read_status+0x5c>
4008d124:	001686        	j	4008d182 <esp_rom_spiflash_read_status+0x76>
4008d127:	0c0000        	lsi	f0, a0, 48
4008d12a:	8109      	s32i.n	a0, a1, 32
4008d12c:	cf1a      	add.n	a12, a15, a1
4008d12e:	0020c0        	memw
4008d131:	0899      	s32i.n	a9, a8, 0
4008d133:	f03d      	nop.n
4008d135:	f03d      	nop.n
4008d137:	f03d      	nop.n
4008d139:	f03d      	nop.n
4008d13b:	cece91        	l32r	a9, 40080c74 <_init_end+0x874>
4008d13e:	cf1681        	l32r	a8, 40080d98 <_init_end+0x998>
4008d141:	0020c0        	memw
4008d144:	0899      	s32i.n	a9, a8, 0
4008d146:	f03d      	nop.n
4008d148:	f03d      	nop.n
4008d14a:	f03d      	nop.n
4008d14c:	f03d      	nop.n
4008d14e:	cf1281        	l32r	a8, 40080d98 <_init_end+0x998>
4008d151:	0020c0        	memw
4008d154:	0888      	l32i.n	a8, a8, 0
4008d156:	fec856        	bnez	a8, 4008d146 <esp_rom_spiflash_read_status+0x3a>
4008d159:	cf0e81        	l32r	a8, 40080d94 <_init_end+0x994>
4008d15c:	0020c0        	memw
4008d15f:	0898      	l32i.n	a9, a8, 0
4008d161:	5288      	l32i.n	a8, a2, 20
4008d163:	108980        	and	a8, a9, a8
4008d166:	3189      	s32i.n	a8, a1, 12
4008d168:	f03d      	nop.n
4008d16a:	f03d      	nop.n
4008d16c:	f03d      	nop.n
4008d16e:	f03d      	nop.n
4008d170:	3188      	l32i.n	a8, a1, 12
4008d172:	b3e807        	bbsi	a8, 0, 4008d129 <esp_rom_spiflash_read_status+0x1d>
4008d175:	000386        	j	4008d187 <esp_rom_spiflash_read_status+0x7b>
4008d178:	5b0c      	movi.n	a11, 5
4008d17a:	a1cb      	addi.n	a10, a1, 12
4008d17c:	cf0881        	l32r	a8, 40080d9c <_init_end+0x99c>
4008d17f:	0008e0        	callx8	a8
4008d182:	3188      	l32i.n	a8, a1, 12
4008d184:	f0e807        	bbsi	a8, 0, 4008d178 <esp_rom_spiflash_read_status+0x6c>
4008d187:	3128      	l32i.n	a2, a1, 12
4008d189:	0329      	s32i.n	a2, a3, 0
4008d18b:	020c      	movi.n	a2, 0
4008d18d:	f01d      	retw.n
	...

4008d190 <esp_rom_spiflash_wait_idle>:
4008d190:	006136        	entry	a1, 48
4008d193:	02ad      	mov.n	a10, a2
4008d195:	cf0281        	l32r	a8, 40080da0 <_init_end+0x9a0>
4008d198:	0020c0        	memw
4008d19b:	002882        	l32i	a8, a8, 0
4008d19e:	248080        	extui	a8, a8, 0, 3
4008d1a1:	ff0856        	bnez	a8, 4008d195 <esp_rom_spiflash_wait_idle+0x5>
4008d1a4:	cf0081        	l32r	a8, 40080da4 <_init_end+0x9a4>
4008d1a7:	0020c0        	memw
4008d1aa:	002882        	l32i	a8, a8, 0
4008d1ad:	248080        	extui	a8, a8, 0, 3
4008d1b0:	ff0856        	bnez	a8, 4008d1a4 <esp_rom_spiflash_wait_idle+0x14>
4008d1b3:	0cc1b2        	addi	a11, a1, 12
4008d1b6:	fff565        	call8	4008d10c <esp_rom_spiflash_read_status>
4008d1b9:	001a16        	beqz	a10, 4008d1be <esp_rom_spiflash_wait_idle+0x2e>
4008d1bc:	1a0c      	movi.n	a10, 1
4008d1be:	0a2d      	mov.n	a2, a10
4008d1c0:	f01d      	retw.n
	...

4008d1c4 <esp_rom_spiflash_erase_block_internal>:
4008d1c4:	004136        	entry	a1, 32
4008d1c7:	02ad      	mov.n	a10, a2
4008d1c9:	fffc65        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d1cc:	cea481        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d1cf:	103380        	and	a3, a3, a8
4008d1d2:	cef581        	l32r	a8, 40080da8 <_init_end+0x9a8>
4008d1d5:	0020c0        	memw
4008d1d8:	0839      	s32i.n	a3, a8, 0
4008d1da:	f03d      	nop.n
4008d1dc:	f03d      	nop.n
4008d1de:	f03d      	nop.n
4008d1e0:	f03d      	nop.n
4008d1e2:	ceb381        	l32r	a8, 40080cb0 <_init_end+0x8b0>
4008d1e5:	ceec31        	l32r	a3, 40080d98 <_init_end+0x998>
4008d1e8:	0020c0        	memw
4008d1eb:	0389      	s32i.n	a8, a3, 0
4008d1ed:	f03d      	nop.n
4008d1ef:	f03d      	nop.n
4008d1f1:	f03d      	nop.n
4008d1f3:	f03d      	nop.n
4008d1f5:	cee881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d1f8:	0020c0        	memw
4008d1fb:	002882        	l32i	a8, a8, 0
4008d1fe:	feb856        	bnez	a8, 4008d1ed <esp_rom_spiflash_erase_block_internal+0x29>
4008d201:	20a220        	or	a10, a2, a2
4008d204:	fff8a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d207:	00a022        	movi	a2, 0
4008d20a:	f01d      	retw.n

4008d20c <esp_rom_spiflash_erase_sector_internal>:
4008d20c:	004136        	entry	a1, 32
4008d20f:	b48030        	extui	a8, a3, 0, 12
4008d212:	047856        	bnez	a8, 4008d25d <esp_rom_spiflash_erase_sector_internal+0x51>
4008d215:	20a220        	or	a10, a2, a2
4008d218:	fff765        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d21b:	ce9081        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d21e:	103380        	and	a3, a3, a8
4008d221:	cee181        	l32r	a8, 40080da8 <_init_end+0x9a8>
4008d224:	0020c0        	memw
4008d227:	006832        	s32i	a3, a8, 0
4008d22a:	f03d      	nop.n
4008d22c:	f03d      	nop.n
4008d22e:	f03d      	nop.n
4008d230:	f03d      	nop.n
4008d232:	ce9181        	l32r	a8, 40080c78 <_init_end+0x878>
4008d235:	ced831        	l32r	a3, 40080d98 <_init_end+0x998>
4008d238:	0020c0        	memw
4008d23b:	006382        	s32i	a8, a3, 0
4008d23e:	f03d      	nop.n
4008d240:	f03d      	nop.n
4008d242:	f03d      	nop.n
4008d244:	f03d      	nop.n
4008d246:	ced481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d249:	0020c0        	memw
4008d24c:	002882        	l32i	a8, a8, 0
4008d24f:	feb856        	bnez	a8, 4008d23e <esp_rom_spiflash_erase_sector_internal+0x32>
4008d252:	20a220        	or	a10, a2, a2
4008d255:	fff3a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d258:	00a022        	movi	a2, 0
4008d25b:	f01d      	retw.n
4008d25d:	120c      	movi.n	a2, 1
4008d25f:	f01d      	retw.n
4008d261:	000000        	ill

4008d264 <esp_rom_spiflash_read_data>:
4008d264:	004136        	entry	a1, 32
4008d267:	808530        	add	a8, a5, a3
4008d26a:	012292        	l32i	a9, a2, 4
4008d26d:	02b987        	bgeu	a9, a8, 4008d273 <esp_rom_spiflash_read_data+0xf>
4008d270:	004f46        	j	4008d3b1 <esp_rom_spiflash_read_data+0x14d>
4008d273:	20a220        	or	a10, a2, a2
4008d276:	fff1a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d279:	004a86        	j	4008d3a7 <esp_rom_spiflash_read_data+0x143>
4008d27c:	f83c00        	lsi	f0, a12, 0x3e0
4008d27f:	022857        	blt	a8, a5, 4008d285 <esp_rom_spiflash_read_data+0x21>
4008d282:	0022c6        	j	4008d311 <esp_rom_spiflash_read_data+0xad>
4008d285:	ffa192        	movi	a9, 0x1ff
4008d288:	cec981        	l32r	a8, 40080dac <_init_end+0x9ac>
4008d28b:	0020c0        	memw
4008d28e:	0899      	s32i.n	a9, a8, 0
4008d290:	118380        	slli	a8, a3, 8
4008d293:	f03d      	nop.n
4008d295:	f03d      	nop.n
4008d297:	f03d      	nop.n
4008d299:	cec391        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d29c:	0020c0        	memw
4008d29f:	0989      	s32i.n	a8, a9, 0
4008d2a1:	f03d      	nop.n
4008d2a3:	f03d      	nop.n
4008d2a5:	f03d      	nop.n
4008d2a7:	f03d      	nop.n
4008d2a9:	cea791        	l32r	a9, 40080d48 <_init_end+0x948>
4008d2ac:	cebb81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d2af:	0020c0        	memw
4008d2b2:	0899      	s32i.n	a9, a8, 0
4008d2b4:	f03d      	nop.n
4008d2b6:	f03d      	nop.n
4008d2b8:	f03d      	nop.n
4008d2ba:	f03d      	nop.n
4008d2bc:	ceb781        	l32r	a8, 40080d98 <_init_end+0x998>
4008d2bf:	0020c0        	memw
4008d2c2:	0888      	l32i.n	a8, a8, 0
4008d2c4:	fec856        	bnez	a8, 4008d2b4 <esp_rom_spiflash_read_data+0x50>
4008d2c7:	090c      	movi.n	a9, 0
4008d2c9:	000d46        	j	4008d302 <esp_rom_spiflash_read_data+0x9e>
4008d2cc:	c4b200        	extui	a11, a0, 2, 13
4008d2cf:	b88104        	lsi	f0, a1, 0x2e0
4008d2d2:	ce          	.byte 0xce
4008d2d3:	808980        	add	a8, a9, a8
4008d2d6:	1188e0        	slli	a8, a8, 2
4008d2d9:	ceb6a1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d2dc:	80a8a0        	add	a10, a8, a10
4008d2df:	ceb6c1        	l32r	a12, 40080db8 <_init_end+0x9b8>
4008d2e2:	0e3ca7        	bltu	a12, a10, 4008d2f4 <esp_rom_spiflash_read_data+0x90>
4008d2e5:	ceb5d1        	l32r	a13, 40080dbc <_init_end+0x9bc>
4008d2e8:	ceb6c1        	l32r	a12, 40080dc0 <_init_end+0x9c0>
4008d2eb:	e1a0b2        	movi	a11, 225
4008d2ee:	ceb5a1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d2f1:	4dbe65        	call8	400daed8 <__assert_func>
4008d2f4:	0020c0        	memw
4008d2f7:	0888      	l32i.n	a8, a8, 0
4008d2f9:	0489      	s32i.n	a8, a4, 0
4008d2fb:	991b      	addi.n	a9, a9, 1
4008d2fd:	749090        	extui	a9, a9, 0, 8
4008d300:	0b4d      	mov.n	a4, a11
4008d302:	f80c      	movi.n	a8, 15
4008d304:	c5b897        	bgeu	a8, a9, 4008d2cd <esp_rom_spiflash_read_data+0x69>
4008d307:	c0c552        	addi	a5, a5, -64
4008d30a:	40c332        	addi	a3, a3, 64
4008d30d:	002586        	j	4008d3a7 <esp_rom_spiflash_read_data+0x143>
4008d310:	838000        	moveqz	a8, a0, a0
4008d313:	a59111        	l32r	a1, 40076958 <__udivmoddi4+0x11d64>
4008d316:	ce          	.byte 0xce
4008d317:	0020c0        	memw
4008d31a:	0989      	s32i.n	a8, a9, 0
4008d31c:	ffa192        	movi	a9, 0x1ff
4008d31f:	f03d      	nop.n
4008d321:	f03d      	nop.n
4008d323:	f03d      	nop.n
4008d325:	cea181        	l32r	a8, 40080dac <_init_end+0x9ac>
4008d328:	0020c0        	memw
4008d32b:	0899      	s32i.n	a9, a8, 0
4008d32d:	f03d      	nop.n
4008d32f:	f03d      	nop.n
4008d331:	f03d      	nop.n
4008d333:	f03d      	nop.n
4008d335:	ce8491        	l32r	a9, 40080d48 <_init_end+0x948>
4008d338:	ce9881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d33b:	0020c0        	memw
4008d33e:	0899      	s32i.n	a9, a8, 0
4008d340:	f03d      	nop.n
4008d342:	f03d      	nop.n
4008d344:	f03d      	nop.n
4008d346:	f03d      	nop.n
4008d348:	ce9481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d34b:	0020c0        	memw
4008d34e:	0888      	l32i.n	a8, a8, 0
4008d350:	fec856        	bnez	a8, 4008d340 <esp_rom_spiflash_read_data+0xdc>
4008d353:	148050        	extui	a8, a5, 0, 2
4008d356:	68cc      	bnez.n	a8, 4008d360 <esp_rom_spiflash_read_data+0xfc>
4008d358:	745250        	extui	a5, a5, 2, 8
4008d35b:	000246        	j	4008d368 <esp_rom_spiflash_read_data+0x104>
4008d35e:	500000        	lsi	f0, a0, 0x140
4008d361:	1b2152        	l32i	a5, a1, 108
4008d364:	505055        	call4	400dd86c <_svfprintf_r+0x1148>
4008d367:	090c74        	lsi	f7, a12, 36
4008d36a:	000d06        	j	4008d3a2 <esp_rom_spiflash_read_data+0x13e>
4008d36d:	04c4c2        	addi	a12, a4, 4
4008d370:	ce9081        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d373:	808980        	add	a8, a9, a8
4008d376:	1188e0        	slli	a8, a8, 2
4008d379:	ce8ea1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d37c:	80a8a0        	add	a10, a8, a10
4008d37f:	ce8eb1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d382:	0e3ba7        	bltu	a11, a10, 4008d394 <esp_rom_spiflash_read_data+0x130>
4008d385:	ce8dd1        	l32r	a13, 40080dbc <_init_end+0x9bc>
4008d388:	ce8ec1        	l32r	a12, 40080dc0 <_init_end+0x9c0>
4008d38b:	eea0b2        	movi	a11, 238
4008d38e:	ce8da1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d391:	4db465        	call8	400daed8 <__assert_func>
4008d394:	0020c0        	memw
4008d397:	0888      	l32i.n	a8, a8, 0
4008d399:	0489      	s32i.n	a8, a4, 0
4008d39b:	991b      	addi.n	a9, a9, 1
4008d39d:	749090        	extui	a9, a9, 0, 8
4008d3a0:	0c4d      	mov.n	a4, a12
4008d3a2:	c73957        	bltu	a9, a5, 4008d36d <esp_rom_spiflash_read_data+0x109>
4008d3a5:	050c      	movi.n	a5, 0
4008d3a7:	0215a6        	blti	a5, 1, 4008d3ad <esp_rom_spiflash_read_data+0x149>
4008d3aa:	ffb3c6        	j	4008d27d <esp_rom_spiflash_read_data+0x19>
4008d3ad:	020c      	movi.n	a2, 0
4008d3af:	f01d      	retw.n
4008d3b1:	120c      	movi.n	a2, 1
4008d3b3:	f01d      	retw.n
4008d3b5:	000000        	ill

4008d3b8 <esp_rom_spiflash_enable_write>:
4008d3b8:	006136        	entry	a1, 48
4008d3bb:	080c      	movi.n	a8, 0
4008d3bd:	3189      	s32i.n	a8, a1, 12
4008d3bf:	20a220        	or	a10, a2, a2
4008d3c2:	ffdce5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d3c5:	cd0c91        	l32r	a9, 400807f8 <_init_end+0x3f8>
4008d3c8:	ce7481        	l32r	a8, 40080d98 <_init_end+0x998>
4008d3cb:	0020c0        	memw
4008d3ce:	0899      	s32i.n	a9, a8, 0
4008d3d0:	f03d      	nop.n
4008d3d2:	f03d      	nop.n
4008d3d4:	f03d      	nop.n
4008d3d6:	f03d      	nop.n
4008d3d8:	ce7081        	l32r	a8, 40080d98 <_init_end+0x998>
4008d3db:	0020c0        	memw
4008d3de:	0888      	l32i.n	a8, a8, 0
4008d3e0:	fec856        	bnez	a8, 4008d3d0 <esp_rom_spiflash_enable_write+0x18>
4008d3e3:	000206        	j	4008d3ef <esp_rom_spiflash_enable_write+0x37>
4008d3e6:	0cc1b2        	addi	a11, a1, 12
4008d3e9:	20a220        	or	a10, a2, a2
4008d3ec:	ffd1e5        	call8	4008d10c <esp_rom_spiflash_read_status>
4008d3ef:	032182        	l32i	a8, a1, 12
4008d3f2:	f06817        	bbci	a8, 1, 4008d3e6 <esp_rom_spiflash_enable_write+0x2e>
4008d3f5:	020c      	movi.n	a2, 0
4008d3f7:	f01d      	retw.n
4008d3f9:	000000        	ill

4008d3fc <esp_rom_spiflash_program_page_internal>:
4008d3fc:	004136        	entry	a1, 32
4008d3ff:	148050        	extui	a8, a5, 0, 2
4008d402:	114856        	bnez	a8, 4008d51a <esp_rom_spiflash_program_page_internal+0x11e>
4008d405:	4298      	l32i.n	a9, a2, 16
4008d407:	e28390        	remu	a8, a3, a9
4008d40a:	858a      	add.n	a8, a5, a8
4008d40c:	02b987        	bgeu	a9, a8, 4008d412 <esp_rom_spiflash_program_page_internal+0x16>
4008d40f:	0042c6        	j	4008d51e <esp_rom_spiflash_program_page_internal+0x122>
4008d412:	20a220        	or	a10, a2, a2
4008d415:	ffd7a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d418:	003cc6        	j	4008d50f <esp_rom_spiflash_program_page_internal+0x113>
4008d41b:	a22000        	muluh	a2, a0, a0
4008d41e:	f9a520        	lsi	f2, a5, 0x3e4
4008d421:	ff          	.byte 0xff
4008d422:	0fca56        	bnez	a10, 4008d522 <esp_rom_spiflash_program_page_internal+0x126>
4008d425:	1fa082        	movi	a8, 31
4008d428:	58a857        	bge	a8, a5, 4008d484 <esp_rom_spiflash_program_page_internal+0x88>
4008d42b:	ce0c81        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d42e:	109380        	and	a9, a3, a8
4008d431:	ce6581        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008d434:	208980        	or	a8, a9, a8
4008d437:	ce5c91        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d43a:	0020c0        	memw
4008d43d:	006982        	s32i	a8, a9, 0
4008d440:	090c      	movi.n	a9, 0
4008d442:	000c86        	j	4008d478 <esp_rom_spiflash_program_page_internal+0x7c>
4008d445:	ce5a81        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d448:	898a      	add.n	a8, a9, a8
4008d44a:	1188e0        	slli	a8, a8, 2
4008d44d:	ce59a1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d450:	a8aa      	add.n	a10, a8, a10
4008d452:	ce59b1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d455:	113ba7        	bltu	a11, a10, 4008d46a <esp_rom_spiflash_program_page_internal+0x6e>
4008d458:	ce5dd1        	l32r	a13, 40080dcc <_init_end+0x9cc>
4008d45b:	ce5dc1        	l32r	a12, 40080dd0 <_init_end+0x9d0>
4008d45e:	ada0b2        	movi	a11, 173
4008d461:	ce58a1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d464:	201110        	or	a1, a1, a1
4008d467:	4da725        	call8	400daed8 <__assert_func>
4008d46a:	04a8      	l32i.n	a10, a4, 0
4008d46c:	0020c0        	memw
4008d46f:	08a9      	s32i.n	a10, a8, 0
4008d471:	991b      	addi.n	a9, a9, 1
4008d473:	749090        	extui	a9, a9, 0, 8
4008d476:	444b      	addi.n	a4, a4, 4
4008d478:	c989b6        	bltui	a9, 8, 4008d445 <esp_rom_spiflash_program_page_internal+0x49>
4008d47b:	e0c552        	addi	a5, a5, -32
4008d47e:	20c332        	addi	a3, a3, 32
4008d481:	001906        	j	4008d4e9 <esp_rom_spiflash_program_page_internal+0xed>
4008d484:	cdf681        	l32r	a8, 40080c5c <_init_end+0x85c>
4008d487:	109380        	and	a9, a3, a8
4008d48a:	018580        	slli	a8, a5, 24
4008d48d:	208980        	or	a8, a9, a8
4008d490:	ce4691        	l32r	a9, 40080da8 <_init_end+0x9a8>
4008d493:	0020c0        	memw
4008d496:	0989      	s32i.n	a8, a9, 0
4008d498:	148050        	extui	a8, a5, 0, 2
4008d49b:	58cc      	bnez.n	a8, 4008d4a4 <esp_rom_spiflash_program_page_internal+0xa8>
4008d49d:	745250        	extui	a5, a5, 2, 8
4008d4a0:	000206        	j	4008d4ac <esp_rom_spiflash_program_page_internal+0xb0>
4008d4a3:	525000        	lsi	f0, a0, 0x148
4008d4a6:	551b21        	l32r	a2, 40062914 <esp_rom_spiflash_read_user_cmd+0x764>
4008d4a9:	745050        	extui	a5, a5, 0, 8
4008d4ac:	090c      	movi.n	a9, 0
4008d4ae:	000c86        	j	4008d4e4 <esp_rom_spiflash_program_page_internal+0xe8>
4008d4b1:	ce3f81        	l32r	a8, 40080db0 <_init_end+0x9b0>
4008d4b4:	898a      	add.n	a8, a9, a8
4008d4b6:	1188e0        	slli	a8, a8, 2
4008d4b9:	ce3ea1        	l32r	a10, 40080db4 <_init_end+0x9b4>
4008d4bc:	a8aa      	add.n	a10, a8, a10
4008d4be:	ce3eb1        	l32r	a11, 40080db8 <_init_end+0x9b8>
4008d4c1:	113ba7        	bltu	a11, a10, 4008d4d6 <esp_rom_spiflash_program_page_internal+0xda>
4008d4c4:	ce42d1        	l32r	a13, 40080dcc <_init_end+0x9cc>
4008d4c7:	ce42c1        	l32r	a12, 40080dd0 <_init_end+0x9d0>
4008d4ca:	b6a0b2        	movi	a11, 182
4008d4cd:	ce3da1        	l32r	a10, 40080dc4 <_init_end+0x9c4>
4008d4d0:	201110        	or	a1, a1, a1
4008d4d3:	4da065        	call8	400daed8 <__assert_func>
4008d4d6:	04a8      	l32i.n	a10, a4, 0
4008d4d8:	0020c0        	memw
4008d4db:	08a9      	s32i.n	a10, a8, 0
4008d4dd:	991b      	addi.n	a9, a9, 1
4008d4df:	749090        	extui	a9, a9, 0, 8
4008d4e2:	444b      	addi.n	a4, a4, 4
4008d4e4:	c93957        	bltu	a9, a5, 4008d4b1 <esp_rom_spiflash_program_page_internal+0xb5>
4008d4e7:	050c      	movi.n	a5, 0
4008d4e9:	ce3a91        	l32r	a9, 40080dd4 <_init_end+0x9d4>
4008d4ec:	ce2b81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d4ef:	0020c0        	memw
4008d4f2:	006892        	s32i	a9, a8, 0
4008d4f5:	f03d      	nop.n
4008d4f7:	f03d      	nop.n
4008d4f9:	f03d      	nop.n
4008d4fb:	f03d      	nop.n
4008d4fd:	ce2681        	l32r	a8, 40080d98 <_init_end+0x998>
4008d500:	0020c0        	memw
4008d503:	002882        	l32i	a8, a8, 0
4008d506:	feb856        	bnez	a8, 4008d4f5 <esp_rom_spiflash_program_page_internal+0xf9>
4008d509:	20a220        	or	a10, a2, a2
4008d50c:	ffc825        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d50f:	0215a6        	blti	a5, 1, 4008d515 <esp_rom_spiflash_program_page_internal+0x119>
4008d512:	ffc186        	j	4008d41c <esp_rom_spiflash_program_page_internal+0x20>
4008d515:	00a022        	movi	a2, 0
4008d518:	f01d      	retw.n
4008d51a:	120c      	movi.n	a2, 1
4008d51c:	f01d      	retw.n
4008d51e:	120c      	movi.n	a2, 1
4008d520:	f01d      	retw.n
4008d522:	120c      	movi.n	a2, 1
4008d524:	f01d      	retw.n
	...

4008d528 <esp_rom_spiflash_read_statushigh>:
4008d528:	004136        	entry	a1, 32
4008d52b:	ce2ba1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d52e:	ffc625        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d531:	35a0b2        	movi	a11, 53
4008d534:	20a330        	or	a10, a3, a3
4008d537:	ce1981        	l32r	a8, 40080d9c <_init_end+0x99c>
4008d53a:	0008e0        	callx8	a8
4008d53d:	002382        	l32i	a8, a3, 0
4008d540:	118880        	slli	a8, a8, 8
4008d543:	0389      	s32i.n	a8, a3, 0
4008d545:	0a2d      	mov.n	a2, a10
4008d547:	f01d      	retw.n
4008d549:	000000        	ill

4008d54c <esp_rom_spiflash_write_status>:
4008d54c:	004136        	entry	a1, 32
4008d54f:	02ad      	mov.n	a10, a2
4008d551:	ffc3e5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d554:	ce1081        	l32r	a8, 40080d94 <_init_end+0x994>
4008d557:	0020c0        	memw
4008d55a:	0839      	s32i.n	a3, a8, 0
4008d55c:	f03d      	nop.n
4008d55e:	f03d      	nop.n
4008d560:	f03d      	nop.n
4008d562:	f03d      	nop.n
4008d564:	ce1e91        	l32r	a9, 40080ddc <_init_end+0x9dc>
4008d567:	ce0c81        	l32r	a8, 40080d98 <_init_end+0x998>
4008d56a:	0020c0        	memw
4008d56d:	006892        	s32i	a9, a8, 0
4008d570:	f03d      	nop.n
4008d572:	f03d      	nop.n
4008d574:	f03d      	nop.n
4008d576:	f03d      	nop.n
4008d578:	ce0881        	l32r	a8, 40080d98 <_init_end+0x998>
4008d57b:	0020c0        	memw
4008d57e:	0888      	l32i.n	a8, a8, 0
4008d580:	fec856        	bnez	a8, 4008d570 <esp_rom_spiflash_write_status+0x24>
4008d583:	02ad      	mov.n	a10, a2
4008d585:	ffc0a5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d588:	020c      	movi.n	a2, 0
4008d58a:	f01d      	retw.n

4008d58c <esp_rom_spiflash_unlock>:
4008d58c:	006136        	entry	a1, 48
4008d58f:	ce1221        	l32r	a2, 40080dd8 <_init_end+0x9d8>
4008d592:	20a220        	or	a10, a2, a2
4008d595:	ffbfa5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d598:	b1cb      	addi.n	a11, a1, 12
4008d59a:	02ad      	mov.n	a10, a2
4008d59c:	fff8a5        	call8	4008d528 <esp_rom_spiflash_read_statushigh>
4008d59f:	06fa56        	bnez	a10, 4008d612 <esp_rom_spiflash_unlock+0x86>
4008d5a2:	3138      	l32i.n	a3, a1, 12
4008d5a4:	00a222        	movi	a2, 0x200
4008d5a7:	102320        	and	a2, a3, a2
4008d5aa:	3129      	s32i.n	a2, a1, 12
4008d5ac:	f03d      	nop.n
4008d5ae:	0020f0        	nop
4008d5b1:	0020f0        	nop
4008d5b4:	0020f0        	nop
4008d5b7:	ce08a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d5ba:	ffbd65        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d5bd:	cc8e31        	l32r	a3, 400807f8 <_init_end+0x3f8>
4008d5c0:	cdf621        	l32r	a2, 40080d98 <_init_end+0x998>
4008d5c3:	0020c0        	memw
4008d5c6:	0239      	s32i.n	a3, a2, 0
4008d5c8:	f03d      	nop.n
4008d5ca:	f03d      	nop.n
4008d5cc:	f03d      	nop.n
4008d5ce:	0020f0        	nop
4008d5d1:	cdf181        	l32r	a8, 40080d98 <_init_end+0x998>
4008d5d4:	0020c0        	memw
4008d5d7:	002882        	l32i	a8, a8, 0
4008d5da:	fea856        	bnez	a8, 4008d5c8 <esp_rom_spiflash_unlock+0x3c>
4008d5dd:	cdfe31        	l32r	a3, 40080dd8 <_init_end+0x9d8>
4008d5e0:	20a330        	or	a10, a3, a3
4008d5e3:	ffbae5        	call8	4008d190 <esp_rom_spiflash_wait_idle>
4008d5e6:	cdfe81        	l32r	a8, 40080de0 <_init_end+0x9e0>
4008d5e9:	0020c0        	memw
4008d5ec:	002892        	l32i	a9, a8, 0
4008d5ef:	cc4b21        	l32r	a2, 4008071c <_init_end+0x31c>
4008d5f2:	202920        	or	a2, a9, a2
4008d5f5:	0020c0        	memw
4008d5f8:	0829      	s32i.n	a2, a8, 0
4008d5fa:	f03d      	nop.n
4008d5fc:	f03d      	nop.n
4008d5fe:	f03d      	nop.n
4008d600:	f03d      	nop.n
4008d602:	31b8      	l32i.n	a11, a1, 12
4008d604:	03ad      	mov.n	a10, a3
4008d606:	fff465        	call8	4008d54c <esp_rom_spiflash_write_status>
4008d609:	0a2d      	mov.n	a2, a10
4008d60b:	5a8c      	beqz.n	a10, 4008d614 <esp_rom_spiflash_unlock+0x88>
4008d60d:	120c      	movi.n	a2, 1
4008d60f:	f01d      	retw.n
4008d611:	120c00        	andbc	b0, b12, b0
4008d614:	f01d      	retw.n
	...

4008d618 <esp_rom_spiflash_erase_block>:
4008d618:	004136        	entry	a1, 32
4008d61b:	cdf291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d61e:	0020c0        	memw
4008d621:	0029a2        	l32i	a10, a9, 0
4008d624:	cda481        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d627:	108a80        	and	a8, a10, a8
4008d62a:	0020c0        	memw
4008d62d:	006982        	s32i	a8, a9, 0
4008d630:	f03d      	nop.n
4008d632:	f03d      	nop.n
4008d634:	f03d      	nop.n
4008d636:	f03d      	nop.n
4008d638:	cdeca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d63b:	0020c0        	memw
4008d63e:	0a98      	l32i.n	a9, a10, 0
4008d640:	cc4681        	l32r	a8, 40080758 <_init_end+0x358>
4008d643:	109980        	and	a9, a9, a8
4008d646:	cde981        	l32r	a8, 40080dec <_init_end+0x9ec>
4008d649:	208980        	or	a8, a9, a8
4008d64c:	0020c0        	memw
4008d64f:	0a89      	s32i.n	a8, a10, 0
4008d651:	f03d      	nop.n
4008d653:	f03d      	nop.n
4008d655:	f03d      	nop.n
4008d657:	f03d      	nop.n
4008d659:	cddf91        	l32r	a9, 40080dd8 <_init_end+0x9d8>
4008d65c:	1988      	l32i.n	a8, a9, 4
4008d65e:	2998      	l32i.n	a9, a9, 8
4008d660:	c28890        	quou	a8, a8, a9
4008d663:	1ab287        	bgeu	a2, a8, 4008d681 <esp_rom_spiflash_erase_block+0x69>
4008d666:	cddca1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d669:	ffd4e5        	call8	4008d3b8 <esp_rom_spiflash_enable_write>
4008d66c:	6adc      	bnez.n	a10, 4008d686 <esp_rom_spiflash_erase_block+0x6e>
4008d66e:	cddaa1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d671:	2ab8      	l32i.n	a11, a10, 8
4008d673:	82b2b0        	mull	a11, a2, a11
4008d676:	ffb4e5        	call8	4008d1c4 <esp_rom_spiflash_erase_block_internal>
4008d679:	0a2d      	mov.n	a2, a10
4008d67b:	9a8c      	beqz.n	a10, 4008d688 <esp_rom_spiflash_erase_block+0x70>
4008d67d:	120c      	movi.n	a2, 1
4008d67f:	f01d      	retw.n
4008d681:	120c      	movi.n	a2, 1
4008d683:	f01d      	retw.n
4008d685:	120c00        	andbc	b0, b12, b0
4008d688:	f01d      	retw.n
	...

4008d68c <esp_rom_spiflash_erase_sector>:
4008d68c:	004136        	entry	a1, 32
4008d68f:	cdd591        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d692:	0020c0        	memw
4008d695:	0029a2        	l32i	a10, a9, 0
4008d698:	cd8781        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d69b:	108a80        	and	a8, a10, a8
4008d69e:	0020c0        	memw
4008d6a1:	006982        	s32i	a8, a9, 0
4008d6a4:	f03d      	nop.n
4008d6a6:	f03d      	nop.n
4008d6a8:	f03d      	nop.n
4008d6aa:	f03d      	nop.n
4008d6ac:	cdcfa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d6af:	0020c0        	memw
4008d6b2:	0a98      	l32i.n	a9, a10, 0
4008d6b4:	cc2981        	l32r	a8, 40080758 <_init_end+0x358>
4008d6b7:	109980        	and	a9, a9, a8
4008d6ba:	cdcc81        	l32r	a8, 40080dec <_init_end+0x9ec>
4008d6bd:	208980        	or	a8, a9, a8
4008d6c0:	0020c0        	memw
4008d6c3:	0a89      	s32i.n	a8, a10, 0
4008d6c5:	f03d      	nop.n
4008d6c7:	f03d      	nop.n
4008d6c9:	f03d      	nop.n
4008d6cb:	f03d      	nop.n
4008d6cd:	cdc291        	l32r	a9, 40080dd8 <_init_end+0x9d8>
4008d6d0:	1988      	l32i.n	a8, a9, 4
4008d6d2:	3998      	l32i.n	a9, a9, 12
4008d6d4:	c28890        	quou	a8, a8, a9
4008d6d7:	1ab287        	bgeu	a2, a8, 4008d6f5 <esp_rom_spiflash_erase_sector+0x69>
4008d6da:	cdbfa1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d6dd:	ffcda5        	call8	4008d3b8 <esp_rom_spiflash_enable_write>
4008d6e0:	5adc      	bnez.n	a10, 4008d6f9 <esp_rom_spiflash_erase_sector+0x6d>
4008d6e2:	cdbda1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d6e5:	3ab8      	l32i.n	a11, a10, 12
4008d6e7:	82b2b0        	mull	a11, a2, a11
4008d6ea:	ffb225        	call8	4008d20c <esp_rom_spiflash_erase_sector_internal>
4008d6ed:	0a2d      	mov.n	a2, a10
4008d6ef:	8a8c      	beqz.n	a10, 4008d6fb <esp_rom_spiflash_erase_sector+0x6f>
4008d6f1:	120c      	movi.n	a2, 1
4008d6f3:	f01d      	retw.n
4008d6f5:	120c      	movi.n	a2, 1
4008d6f7:	f01d      	retw.n
4008d6f9:	120c      	movi.n	a2, 1
4008d6fb:	f01d      	retw.n
4008d6fd:	000000        	ill

4008d700 <esp_rom_spiflash_write>:
4008d700:	006136        	entry	a1, 48
4008d703:	cdb861        	l32r	a6, 40080de4 <_init_end+0x9e4>
4008d706:	0020c0        	memw
4008d709:	0678      	l32i.n	a7, a6, 0
4008d70b:	cd6a51        	l32r	a5, 40080cb4 <_init_end+0x8b4>
4008d70e:	105750        	and	a5, a7, a5
4008d711:	0020c0        	memw
4008d714:	0659      	s32i.n	a5, a6, 0
4008d716:	f03d      	nop.n
4008d718:	f03d      	nop.n
4008d71a:	f03d      	nop.n
4008d71c:	f03d      	nop.n
4008d71e:	cdb271        	l32r	a7, 40080de8 <_init_end+0x9e8>
4008d721:	0020c0        	memw
4008d724:	0768      	l32i.n	a6, a7, 0
4008d726:	cc0c51        	l32r	a5, 40080758 <_init_end+0x358>
4008d729:	106650        	and	a6, a6, a5
4008d72c:	cdb051        	l32r	a5, 40080dec <_init_end+0x9ec>
4008d72f:	205650        	or	a5, a6, a5
4008d732:	0020c0        	memw
4008d735:	0759      	s32i.n	a5, a7, 0
4008d737:	542a      	add.n	a5, a4, a2
4008d739:	f03d      	nop.n
4008d73b:	f03d      	nop.n
4008d73d:	f03d      	nop.n
4008d73f:	cda661        	l32r	a6, 40080dd8 <_init_end+0x9d8>
4008d742:	1668      	l32i.n	a6, a6, 4
4008d744:	02b657        	bgeu	a6, a5, 4008d74a <esp_rom_spiflash_write+0x4a>
4008d747:	001ec6        	j	4008d7c6 <esp_rom_spiflash_write+0xc6>
4008d74a:	cda351        	l32r	a5, 40080dd8 <_init_end+0x9d8>
4008d74d:	4578      	l32i.n	a7, a5, 16
4008d74f:	e25270        	remu	a5, a2, a7
4008d752:	c05750        	sub	a5, a7, a5
4008d755:	14b457        	bgeu	a4, a5, 4008d76d <esp_rom_spiflash_write+0x6d>
4008d758:	04dd      	mov.n	a13, a4
4008d75a:	03cd      	mov.n	a12, a3
4008d75c:	02bd      	mov.n	a11, a2
4008d75e:	cd9ea1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d761:	ffc9a5        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d764:	0a2d      	mov.n	a2, a10
4008d766:	066a16        	beqz	a10, 4008d7d0 <esp_rom_spiflash_write+0xd0>
4008d769:	120c      	movi.n	a2, 1
4008d76b:	f01d      	retw.n
4008d76d:	20d550        	or	a13, a5, a5
4008d770:	20c330        	or	a12, a3, a3
4008d773:	20b220        	or	a11, a2, a2
4008d776:	cd98a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d779:	ffc825        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d77c:	04aa56        	bnez	a10, 4008d7ca <esp_rom_spiflash_write+0xca>
4008d77f:	c06450        	sub	a6, a4, a5
4008d782:	c26670        	quou	a6, a6, a7
4008d785:	3169      	s32i.n	a6, a1, 12
4008d787:	060c      	movi.n	a6, 0
4008d789:	0006c6        	j	4008d7a8 <esp_rom_spiflash_write+0xa8>
4008d78c:	c25000        	quou	a5, a0, a0
4008d78f:	d77041        	l32r	a4, 40083550 <set_chan_dig_gain+0xb0>
4008d792:	cc3020        	lsi	f2, a0, 0x330
4008d795:	b520a0        	extui	a2, a10, 16, 12
4008d798:	8fa180        	f64cmph	a10, a1, a8, 8
4008d79b:	e5cd      	lsi	f12, a5, 20
4008d79d:	ecffc5        	call0	4007a79c <__udivmoddi4+0x15ba8>
4008d7a0:	7aba      	add.n	a7, a10, a11
4008d7a2:	661b55        	call4	400f3958 <_text_end+0x707b>
4008d7a5:	746060        	extui	a6, a6, 0, 8
4008d7a8:	3188      	l32i.n	a8, a1, 12
4008d7aa:	df3687        	bltu	a6, a8, 4008d78d <esp_rom_spiflash_write+0x8d>
4008d7ad:	41c250        	srli	a12, a5, 2
4008d7b0:	c0d450        	sub	a13, a4, a5
4008d7b3:	a0cc30        	addx4	a12, a12, a3
4008d7b6:	b52a      	add.n	a11, a5, a2
4008d7b8:	cd88a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008d7bb:	ffc425        	call8	4008d3fc <esp_rom_spiflash_program_page_internal>
4008d7be:	0a2d      	mov.n	a2, a10
4008d7c0:	ca8c      	beqz.n	a10, 4008d7d0 <esp_rom_spiflash_write+0xd0>
4008d7c2:	120c      	movi.n	a2, 1
4008d7c4:	f01d      	retw.n
4008d7c6:	120c      	movi.n	a2, 1
4008d7c8:	f01d      	retw.n
4008d7ca:	120c      	movi.n	a2, 1
4008d7cc:	f01d      	retw.n
4008d7ce:	120c      	movi.n	a2, 1
4008d7d0:	f01d      	retw.n
	...

4008d7d4 <esp_rom_spiflash_write_encrypted>:
4008d7d4:	004136        	entry	a1, 32
4008d7d7:	445020        	extui	a5, a2, 0, 5
4008d7da:	048556        	bnez	a5, 4008d826 <esp_rom_spiflash_write_encrypted+0x52>
4008d7dd:	445040        	extui	a5, a4, 0, 5
4008d7e0:	046556        	bnez	a5, 4008d82a <esp_rom_spiflash_write_encrypted+0x56>
4008d7e3:	cd8381        	l32r	a8, 40080df0 <_init_end+0x9f0>
4008d7e6:	0008e0        	callx8	a8
4008d7e9:	060c      	movi.n	a6, 0
4008d7eb:	065d      	mov.n	a5, a6
4008d7ed:	000946        	j	4008d816 <esp_rom_spiflash_write_encrypted+0x42>
4008d7f0:	b6b000        	lsi	f0, a0, 0x2d8
4008d7f3:	72b011        	l32r	a1, 4006a2b4 <__udivmoddi4+0x56c0>
4008d7f6:	b3b080        	movgez	a11, a0, a8
4008d7f9:	a77080        	lsi	f8, a0, 0x29c
4008d7fc:	7d8120        	lsi	f2, a1, 0x1f4
4008d7ff:	e0cd      	lsi	f12, a0, 0
4008d801:	0008      	l32i.n	a0, a0, 0
4008d803:	0a5d      	mov.n	a5, a10
4008d805:	3adc      	bnez.n	a10, 4008d81c <esp_rom_spiflash_write_encrypted+0x48>
4008d807:	0c2c      	movi.n	a12, 32
4008d809:	03bd      	mov.n	a11, a3
4008d80b:	07ad      	mov.n	a10, a7
4008d80d:	ffef25        	call8	4008d700 <esp_rom_spiflash_write>
4008d810:	0a5d      	mov.n	a5, a10
4008d812:	6acc      	bnez.n	a10, 4008d81c <esp_rom_spiflash_write_encrypted+0x48>
4008d814:	661b      	addi.n	a6, a6, 1
4008d816:	417540        	srli	a7, a4, 5
4008d819:	d43677        	bltu	a6, a7, 4008d7f1 <esp_rom_spiflash_write_encrypted+0x1d>
4008d81c:	cd7781        	l32r	a8, 40080df8 <_init_end+0x9f8>
4008d81f:	0008e0        	callx8	a8
4008d822:	052d      	mov.n	a2, a5
4008d824:	f01d      	retw.n
4008d826:	120c      	movi.n	a2, 1
4008d828:	f01d      	retw.n
4008d82a:	120c      	movi.n	a2, 1
4008d82c:	f01d      	retw.n
	...

4008d830 <esp_rom_spiflash_read>:
4008d830:	004136        	entry	a1, 32
4008d833:	02bd      	mov.n	a11, a2
4008d835:	03cd      	mov.n	a12, a3
4008d837:	04dd      	mov.n	a13, a4
4008d839:	cd6981        	l32r	a8, 40080de0 <_init_end+0x9e0>
4008d83c:	0020c0        	memw
4008d83f:	0888      	l32i.n	a8, a8, 0
4008d841:	cd6e91        	l32r	a9, 40080dfc <_init_end+0x9fc>
4008d844:	10a890        	and	a10, a8, a9
4008d847:	021a97        	beq	a10, a9, 4008d84d <esp_rom_spiflash_read+0x1d>
4008d84a:	0021c6        	j	4008d8d5 <esp_rom_spiflash_read+0xa5>
4008d84d:	cd6581        	l32r	a8, 40080de4 <_init_end+0x9e4>
4008d850:	0020c0        	memw
4008d853:	08a8      	l32i.n	a10, a8, 0
4008d855:	cd6a91        	l32r	a9, 40080e00 <_init_end+0xa00>
4008d858:	109a90        	and	a9, a10, a9
4008d85b:	0020c0        	memw
4008d85e:	0899      	s32i.n	a9, a8, 0
4008d860:	f03d      	nop.n
4008d862:	f03d      	nop.n
4008d864:	f03d      	nop.n
4008d866:	f03d      	nop.n
4008d868:	0020c0        	memw
4008d86b:	08a8      	l32i.n	a10, a8, 0
4008d86d:	cd6591        	l32r	a9, 40080e04 <_init_end+0xa04>
4008d870:	209a90        	or	a9, a10, a9
4008d873:	0020c0        	memw
4008d876:	0899      	s32i.n	a9, a8, 0
4008d878:	f03d      	nop.n
4008d87a:	f03d      	nop.n
4008d87c:	f03d      	nop.n
4008d87e:	f03d      	nop.n
4008d880:	cd5aa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d883:	0020c0        	memw
4008d886:	0a98      	l32i.n	a9, a10, 0
4008d888:	cbb481        	l32r	a8, 40080758 <_init_end+0x358>
4008d88b:	109980        	and	a9, a9, a8
4008d88e:	cd5e81        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d891:	208980        	or	a8, a9, a8
4008d894:	0020c0        	memw
4008d897:	0a89      	s32i.n	a8, a10, 0
4008d899:	f03d      	nop.n
4008d89b:	f03d      	nop.n
4008d89d:	f03d      	nop.n
4008d89f:	f03d      	nop.n
4008d8a1:	0020c0        	memw
4008d8a4:	0a98      	l32i.n	a9, a10, 0
4008d8a6:	00af82        	movi	a8, 0xffffff00
4008d8a9:	109980        	and	a9, a9, a8
4008d8ac:	cd3981        	l32r	a8, 40080d90 <_init_end+0x990>
4008d8af:	010882        	l8ui	a8, a8, 1
4008d8b2:	883b      	addi.n	a8, a8, 3
4008d8b4:	748080        	extui	a8, a8, 0, 8
4008d8b7:	208890        	or	a8, a8, a9
4008d8ba:	0020c0        	memw
4008d8bd:	0a89      	s32i.n	a8, a10, 0
4008d8bf:	f03d      	nop.n
4008d8c1:	f03d      	nop.n
4008d8c3:	f03d      	nop.n
4008d8c5:	f03d      	nop.n
4008d8c7:	cd5291        	l32r	a9, 40080e10 <_init_end+0xa10>
4008d8ca:	cd5081        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d8cd:	0020c0        	memw
4008d8d0:	0899      	s32i.n	a9, a8, 0
4008d8d2:	009a06        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d8d5:	02e8d7        	bbsi	a8, 13, 4008d8db <esp_rom_spiflash_read+0xab>
4008d8d8:	006706        	j	4008da78 <esp_rom_spiflash_read+0x248>
4008d8db:	cd4291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d8de:	0020c0        	memw
4008d8e1:	09e8      	l32i.n	a14, a9, 0
4008d8e3:	cd47a1        	l32r	a10, 40080e00 <_init_end+0xa00>
4008d8e6:	10aea0        	and	a10, a14, a10
4008d8e9:	0020c0        	memw
4008d8ec:	09a9      	s32i.n	a10, a9, 0
4008d8ee:	f03d      	nop.n
4008d8f0:	f03d      	nop.n
4008d8f2:	f03d      	nop.n
4008d8f4:	f03d      	nop.n
4008d8f6:	0020c0        	memw
4008d8f9:	09e8      	l32i.n	a14, a9, 0
4008d8fb:	cd46a1        	l32r	a10, 40080e14 <_init_end+0xa14>
4008d8fe:	20aea0        	or	a10, a14, a10
4008d901:	0020c0        	memw
4008d904:	09a9      	s32i.n	a10, a9, 0
4008d906:	02f877        	bbsi	a8, 23, 4008d90c <esp_rom_spiflash_read+0xdc>
4008d909:	0035c6        	j	4008d9e4 <esp_rom_spiflash_read+0x1b4>
4008d90c:	f03d      	nop.n
4008d90e:	f03d      	nop.n
4008d910:	f03d      	nop.n
4008d912:	f03d      	nop.n
4008d914:	cd1f81        	l32r	a8, 40080d90 <_init_end+0x990>
4008d917:	010882        	l8ui	a8, a8, 1
4008d91a:	046856        	bnez	a8, 4008d964 <esp_rom_spiflash_read+0x134>
4008d91d:	0020c0        	memw
4008d920:	09a8      	l32i.n	a10, a9, 0
4008d922:	cce481        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008d925:	108a80        	and	a8, a10, a8
4008d928:	0020c0        	memw
4008d92b:	0989      	s32i.n	a8, a9, 0
4008d92d:	f03d      	nop.n
4008d92f:	f03d      	nop.n
4008d931:	f03d      	nop.n
4008d933:	f03d      	nop.n
4008d935:	cd2ca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d938:	0020c0        	memw
4008d93b:	0a98      	l32i.n	a9, a10, 0
4008d93d:	cb8681        	l32r	a8, 40080758 <_init_end+0x358>
4008d940:	109980        	and	a9, a9, a8
4008d943:	cd3181        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d946:	208980        	or	a8, a9, a8
4008d949:	0020c0        	memw
4008d94c:	0a89      	s32i.n	a8, a10, 0
4008d94e:	f03d      	nop.n
4008d950:	f03d      	nop.n
4008d952:	f03d      	nop.n
4008d954:	f03d      	nop.n
4008d956:	cd3091        	l32r	a9, 40080e18 <_init_end+0xa18>
4008d959:	cd2c81        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d95c:	0020c0        	memw
4008d95f:	0899      	s32i.n	a9, a8, 0
4008d961:	007646        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d964:	cd2091        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008d967:	0020c0        	memw
4008d96a:	09a8      	l32i.n	a10, a9, 0
4008d96c:	cd1781        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008d96f:	208a80        	or	a8, a10, a8
4008d972:	0020c0        	memw
4008d975:	0989      	s32i.n	a8, a9, 0
4008d977:	f03d      	nop.n
4008d979:	f03d      	nop.n
4008d97b:	f03d      	nop.n
4008d97d:	f03d      	nop.n
4008d97f:	cd1aa1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008d982:	0020c0        	memw
4008d985:	0a98      	l32i.n	a9, a10, 0
4008d987:	cb7481        	l32r	a8, 40080758 <_init_end+0x358>
4008d98a:	109980        	and	a9, a9, a8
4008d98d:	cd1e81        	l32r	a8, 40080e08 <_init_end+0xa08>
4008d990:	208980        	or	a8, a9, a8
4008d993:	0020c0        	memw
4008d996:	0a89      	s32i.n	a8, a10, 0
4008d998:	f03d      	nop.n
4008d99a:	f03d      	nop.n
4008d99c:	f03d      	nop.n
4008d99e:	f03d      	nop.n
4008d9a0:	0020c0        	memw
4008d9a3:	0a98      	l32i.n	a9, a10, 0
4008d9a5:	00af82        	movi	a8, 0xffffff00
4008d9a8:	109980        	and	a9, a9, a8
4008d9ab:	ccf981        	l32r	a8, 40080d90 <_init_end+0x990>
4008d9ae:	010882        	l8ui	a8, a8, 1
4008d9b1:	880b      	addi.n	a8, a8, -1
4008d9b3:	748080        	extui	a8, a8, 0, 8
4008d9b6:	208890        	or	a8, a8, a9
4008d9b9:	0020c0        	memw
4008d9bc:	0a89      	s32i.n	a8, a10, 0
4008d9be:	f03d      	nop.n
4008d9c0:	f03d      	nop.n
4008d9c2:	f03d      	nop.n
4008d9c4:	f03d      	nop.n
4008d9c6:	cd11a1        	l32r	a10, 40080e0c <_init_end+0xa0c>
4008d9c9:	0020c0        	memw
4008d9cc:	0a98      	l32i.n	a9, a10, 0
4008d9ce:	cb7681        	l32r	a8, 400807a8 <_init_end+0x3a8>
4008d9d1:	109980        	and	a9, a9, a8
4008d9d4:	bba082        	movi	a8, 187
4008d9d7:	208980        	or	a8, a9, a8
4008d9da:	0020c0        	memw
4008d9dd:	0a89      	s32i.n	a8, a10, 0
4008d9df:	0056c6        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008d9e2:	470000        	lsi	f0, a0, 0x11c
4008d9e5:	0d78      	l32i.n	a7, a13, 0
4008d9e7:	cd0d91        	l32r	a9, 40080e1c <_init_end+0xa1c>
4008d9ea:	cd0881        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d9ed:	0020c0        	memw
4008d9f0:	0899      	s32i.n	a9, a8, 0
4008d9f2:	000746        	j	4008da13 <esp_rom_spiflash_read+0x1e3>
4008d9f5:	0f68e7        	bbci	a8, 14, 4008da08 <esp_rom_spiflash_read+0x1d8>
4008d9f8:	cd0a91        	l32r	a9, 40080e20 <_init_end+0xa20>
4008d9fb:	cd0481        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008d9fe:	0020c0        	memw
4008da01:	0899      	s32i.n	a9, a8, 0
4008da03:	000306        	j	4008da13 <esp_rom_spiflash_read+0x1e3>
4008da06:	910000        	srl	a0, a0
4008da09:	81cd07        	bnall	a13, a0, 4008d98e <esp_rom_spiflash_read+0x15e>
4008da0c:	c0cd00        	sub	a12, a13, a0
4008da0f:	990020        	lsi	f2, a0, 0x264
4008da12:	3d08      	l32i.n	a0, a13, 12
4008da14:	f03df0        	subx8	a3, a13, a15
4008da17:	f03d      	nop.n
4008da19:	f03d      	nop.n
4008da1b:	ccf291        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008da1e:	0020c0        	memw
4008da21:	09a8      	l32i.n	a10, a9, 0
4008da23:	cce981        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008da26:	208a80        	or	a8, a10, a8
4008da29:	0020c0        	memw
4008da2c:	0989      	s32i.n	a8, a9, 0
4008da2e:	f03d      	nop.n
4008da30:	f03d      	nop.n
4008da32:	f03d      	nop.n
4008da34:	f03d      	nop.n
4008da36:	cceca1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008da39:	0020c0        	memw
4008da3c:	0a98      	l32i.n	a9, a10, 0
4008da3e:	cb4681        	l32r	a8, 40080758 <_init_end+0x358>
4008da41:	109980        	and	a9, a9, a8
4008da44:	ccea81        	l32r	a8, 40080dec <_init_end+0x9ec>
4008da47:	208980        	or	a8, a9, a8
4008da4a:	0020c0        	memw
4008da4d:	0a89      	s32i.n	a8, a10, 0
4008da4f:	f03d      	nop.n
4008da51:	f03d      	nop.n
4008da53:	f03d      	nop.n
4008da55:	f03d      	nop.n
4008da57:	0020c0        	memw
4008da5a:	0a98      	l32i.n	a9, a10, 0
4008da5c:	00af82        	movi	a8, 0xffffff00
4008da5f:	109980        	and	a9, a9, a8
4008da62:	cccb81        	l32r	a8, 40080d90 <_init_end+0x990>
4008da65:	010882        	l8ui	a8, a8, 1
4008da68:	887b      	addi.n	a8, a8, 7
4008da6a:	748080        	extui	a8, a8, 0, 8
4008da6d:	208890        	or	a8, a8, a9
4008da70:	0020c0        	memw
4008da73:	0a89      	s32i.n	a8, a10, 0
4008da75:	003146        	j	4008db3e <esp_rom_spiflash_read+0x30e>
4008da78:	ccdb91        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008da7b:	0020c0        	memw
4008da7e:	09a8      	l32i.n	a10, a9, 0
4008da80:	cce081        	l32r	a8, 40080e00 <_init_end+0xa00>
4008da83:	108a80        	and	a8, a10, a8
4008da86:	0020c0        	memw
4008da89:	0989      	s32i.n	a8, a9, 0
4008da8b:	f03d      	nop.n
4008da8d:	f03d      	nop.n
4008da8f:	f03d      	nop.n
4008da91:	f03d      	nop.n
4008da93:	ccbf81        	l32r	a8, 40080d90 <_init_end+0x990>
4008da96:	010882        	l8ui	a8, a8, 1
4008da99:	38dc      	bnez.n	a8, 4008dab0 <esp_rom_spiflash_read+0x280>
4008da9b:	0020c0        	memw
4008da9e:	09a8      	l32i.n	a10, a9, 0
4008daa0:	cc8581        	l32r	a8, 40080cb4 <_init_end+0x8b4>
4008daa3:	108a80        	and	a8, a10, a8
4008daa6:	0020c0        	memw
4008daa9:	0989      	s32i.n	a8, a9, 0
4008daab:	001006        	j	4008daef <esp_rom_spiflash_read+0x2bf>
4008daae:	910000        	srl	a0, a0
4008dab1:	cccd      	lsi	f12, a12, 48
4008dab3:	0020c0        	memw
4008dab6:	0029a2        	l32i	a10, a9, 0
4008dab9:	ccc381        	l32r	a8, 40080dc8 <_init_end+0x9c8>
4008dabc:	208a80        	or	a8, a10, a8
4008dabf:	0020c0        	memw
4008dac2:	006982        	s32i	a8, a9, 0
4008dac5:	f03d      	nop.n
4008dac7:	f03d      	nop.n
4008dac9:	f03d      	nop.n
4008dacb:	f03d      	nop.n
4008dacd:	ccc6a1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008dad0:	0020c0        	memw
4008dad3:	002a92        	l32i	a9, a10, 0
4008dad6:	00af82        	movi	a8, 0xffffff00
4008dad9:	109980        	and	a9, a9, a8
4008dadc:	ccad81        	l32r	a8, 40080d90 <_init_end+0x990>
4008dadf:	010882        	l8ui	a8, a8, 1
4008dae2:	880b      	addi.n	a8, a8, -1
4008dae4:	748080        	extui	a8, a8, 0, 8
4008dae7:	208890        	or	a8, a8, a9
4008daea:	0020c0        	memw
4008daed:	0a89      	s32i.n	a8, a10, 0
4008daef:	f03d      	nop.n
4008daf1:	f03d      	nop.n
4008daf3:	f03d      	nop.n
4008daf5:	f03d      	nop.n
4008daf7:	ccbb91        	l32r	a9, 40080de4 <_init_end+0x9e4>
4008dafa:	0020c0        	memw
4008dafd:	09a8      	l32i.n	a10, a9, 0
4008daff:	ccc581        	l32r	a8, 40080e14 <_init_end+0xa14>
4008db02:	208a80        	or	a8, a10, a8
4008db05:	0020c0        	memw
4008db08:	0989      	s32i.n	a8, a9, 0
4008db0a:	f03d      	nop.n
4008db0c:	f03d      	nop.n
4008db0e:	f03d      	nop.n
4008db10:	f03d      	nop.n
4008db12:	ccb5a1        	l32r	a10, 40080de8 <_init_end+0x9e8>
4008db15:	0020c0        	memw
4008db18:	0a98      	l32i.n	a9, a10, 0
4008db1a:	cb0f81        	l32r	a8, 40080758 <_init_end+0x358>
4008db1d:	109980        	and	a9, a9, a8
4008db20:	ccb381        	l32r	a8, 40080dec <_init_end+0x9ec>
4008db23:	208980        	or	a8, a9, a8
4008db26:	0020c0        	memw
4008db29:	0a89      	s32i.n	a8, a10, 0
4008db2b:	f03d      	nop.n
4008db2d:	f03d      	nop.n
4008db2f:	f03d      	nop.n
4008db31:	f03d      	nop.n
4008db33:	ccbd91        	l32r	a9, 40080e28 <_init_end+0xa28>
4008db36:	ccb581        	l32r	a8, 40080e0c <_init_end+0xa0c>
4008db39:	0020c0        	memw
4008db3c:	0899      	s32i.n	a9, a8, 0
4008db3e:	f03d      	nop.n
4008db40:	f03d      	nop.n
4008db42:	f03d      	nop.n
4008db44:	f03d      	nop.n
4008db46:	cca4a1        	l32r	a10, 40080dd8 <_init_end+0x9d8>
4008db49:	ff71a5        	call8	4008d264 <esp_rom_spiflash_read_data>
4008db4c:	0a8c      	beqz.n	a10, 4008db50 <esp_rom_spiflash_read+0x320>
4008db4e:	1a0c      	movi.n	a10, 1
4008db50:	0a2d      	mov.n	a2, a10
4008db52:	f01d      	retw.n

Disassembly of section .flash.text:

400d0018 <_flash_cache_start>:
400d0018:	154c      	movi.n	a5, 65
400d001a:	603f40        	lsi	f4, a15, 0x180
400d001d:	3f4015        	call4	4010f420 <_etext+0x22b43>
400d0020:	400020        	lsi	f2, a0, 0x100
400d0023:	3f          	.byte 0x3f
400d0024:	400024        	lsi	f2, a0, 0x100
400d0027:	3f          	.byte 0x3f
400d0028:	002c      	movi.n	a0, 32
400d002a:	343f40        	extui	a3, a4, 15, 4
400d002d:	3f4000        	f64cmph	a4, a0, a0, 3
400d0030:	003c      	movi.n	a0, 48
400d0032:	443f40        	extui	a3, a4, 15, 5
400d0035:	3f4000        	f64cmph	a4, a0, a0, 3
400d0038:	004c      	movi.n	a0, 64
400d003a:	403f40        	lsi	f4, a15, 0x100
400d003d:	1f          	.byte 0x1f
400d003e:	3f0000        	f64cmph	a0, a0, a0, 3
400d0041:	1f          	.byte 0x1f
400d0042:	540000        	extui	a0, a0, 0, 6
400d0045:	3f4000        	f64cmph	a4, a0, a0, 3
400d0048:	234c      	movi.n	a3, 66
400d004a:	344000        	extui	a4, a0, 0, 4
400d004d:	002c      	movi.n	a0, 32
400d004f:	cff840        	f64cmph	a15, a8, a4, 12
400d0052:	384000        	lsi	f0, a0, 224
400d0055:	00c9      	s32i.n	a12, a0, 0
400d0057:	295440        	lsi	f4, a4, 164
400d005a:	784000        	lsi	f0, a0, 0x1e0
400d005d:	3f4000        	f64cmph	a4, a0, a0, 3
400d0060:	358c      	beqz.n	a5, 400d0067 <_flash_cache_start+0x4f>
400d0062:	004006        	j	400d0166 <_flash_cache_start+0x14e>
400d0065:	000000        	ill
400d0068:	ff          	.byte 0xff
400d0069:	ff          	.byte 0xff
400d006a:	ff          	.byte 0xff
400d006b:	7f          	.byte 0x7f
400d006c:	ff          	.byte 0xff
400d006d:	ff          	.byte 0xff
400d006e:	ff          	.byte 0xff
400d006f:	3f          	.byte 0x3f
400d0070:	ff          	.byte 0xff
400d0071:	ff          	.byte 0xff
400d0072:	ff          	.byte 0xff
400d0073:	1f          	.byte 0x1f
400d0074:	c44c      	movi.n	a4, 76
400d0076:	ff4000        	f64cmph	a4, a0, a0, 15
400d0079:	ff          	.byte 0xff
400d007a:	140000        	extui	a0, a0, 0, 2
400d007d:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0080:	001c      	movi.n	a0, 16
400d0082:	3ffc      	bnez.n	a15, 400d00b9 <_flash_cache_start+0xa1>
400d0084:	000000        	ill
400d0087:	14c080        	extui	a12, a8, 0, 2
400d008a:	9c4000        	lsi	f0, a0, 0x270
400d008d:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0090:	fc0024        	lsi	f2, a0, 0x3f0
400d0093:	3f          	.byte 0x3f
400d0094:	beb8      	l32i.n	a11, a14, 44
400d0096:	c84000        	lsi	f0, a0, 0x320
400d0099:	4000c2        	l8ui	a12, a0, 64
400d009c:	becc      	bnez.n	a14, 400d00ab <_flash_cache_start+0x93>
400d009e:	c04000        	sub	a4, a0, a0
400d00a1:	4000c3        	lsi	f12, a0, 0x100
400d00a4:	002c      	movi.n	a0, 32
400d00a6:	3ffc      	bnez.n	a15, 400d00dd <_flash_cache_start+0xc5>
400d00a8:	00a8      	l32i.n	a10, a0, 0
400d00aa:	343f40        	extui	a3, a4, 15, 4
400d00ad:	3ffc00        	f64cmph	a15, a12, a0, 3
400d00b0:	0d4630        	lsi	f3, a6, 52
400d00b3:	000040        	lsi	f4, a0, 0
400d00b6:	acc000        	lsi	f0, a0, 0x2b0
400d00b9:	3f4000        	f64cmph	a4, a0, a0, 3
400d00bc:	4bb8      	l32i.n	a11, a11, 16
400d00be:	400d      	lsi	f0, a0, 0
400d00c0:	0d4c64        	lsi	f6, a12, 52
400d00c3:	4cc040        	lsi	f4, a0, 0x130
400d00c6:	400d      	lsi	f0, a0, 0
400d00c8:	4d39      	s32i.n	a3, a13, 16
400d00ca:	400d      	lsi	f0, a0, 0
400d00cc:	4d9c      	beqz.n	a13, 400d00e4 <_flash_cache_start+0xcc>
400d00ce:	400d      	lsi	f0, a0, 0
400d00d0:	4000e0        	lsi	f14, a0, 0x100
400d00d3:	3f          	.byte 0x3f
400d00d4:	0d52a0        	lsi	f10, a2, 52
400d00d7:	53b840        	max	a11, a8, a4
400d00da:	400d      	lsi	f0, a0, 0
400d00dc:	0d5034        	lsi	f3, a0, 52
400d00df:	000040        	lsi	f4, a0, 0
400d00e2:	3ffc      	bnez.n	a15, 400d0119 <_flash_cache_start+0x101>
400d00e4:	fc0004        	lsi	f0, a0, 0x3f0
400d00e7:	3f          	.byte 0x3f
400d00e8:	ff          	.byte 0xff
400d00e9:	ff          	.byte 0xff
400d00ea:	1f          	.byte 0x1f
400d00eb:	bea000        	f64iter	a10, a0, a0, 3, 0
400d00ee:	844000        	extui	a4, a0, 0, 9
400d00f1:	9f          	.byte 0x9f
400d00f2:	0e          	.byte 0xe
400d00f3:	dbb440        	movt.s	f11, f4, b4
400d00f6:	3ffb      	addi.n	a3, a15, 15
400d00f8:	fc0010        	lsi	f1, a0, 0x3f0
400d00fb:	3f          	.byte 0x3f
400d00fc:	000c      	movi.n	a0, 0
400d00fe:	3ffc      	bnez.n	a15, 400d0135 <_flash_cache_start+0x11d>
400d0100:	400114        	lsi	f1, a1, 0x100
400d0103:	3f          	.byte 0x3f
400d0104:	000000        	ill
400d0107:	0b5c20        	lsi	f2, a12, 44
400d010a:	3ffc      	bnez.n	a15, 400d0141 <_flash_cache_start+0x129>
400d010c:	156c      	movi.n	a5, -31
400d010e:	343f40        	extui	a3, a4, 15, 4
400d0111:	3f4017        	ball	a0, a1, 400d0154 <_flash_cache_start+0x13c>
400d0114:	4015a0        	lsi	f10, a5, 0x100
400d0117:	3f          	.byte 0x3f
400d0118:	160c      	movi.n	a6, 1
400d011a:	1c3f40        	lsi	f4, a15, 112
400d011d:	0068      	l32i.n	a6, a0, 0
400d011f:	869440        	lsi	f4, a4, 0x218
400d0122:	443f41        	l32r	a4, 400a1220 <_iram_end+0x136cc>
400d0125:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0128:	409580        	lsi	f8, a5, 0x100
400d012b:	3f          	.byte 0x3f
400d012c:	8658      	l32i.n	a5, a6, 32
400d012e:	683f41        	l32r	a4, 400aa22c <_iram_end+0x1c6d8>
400d0131:	3ff004        	lsi	f0, a0, 252
400d0134:	bf          	.byte 0xbf
400d0135:	00e4e1        	l32r	a14, 400904c8 <_iram_end+0x2974>
400d0138:	0128      	l32i.n	a2, a1, 0
400d013a:	543f40        	extui	a3, a4, 15, 6
400d013d:	3f4017        	ball	a0, a1, 400d0180 <_flash_cache_start+0x168>
400d0140:	4017f0        	lsi	f15, a7, 0x100
400d0143:	3f          	.byte 0x3f
400d0144:	401784        	lsi	f8, a7, 0x100
400d0147:	3f          	.byte 0x3f
400d0148:	2328      	l32i.n	a2, a3, 8
400d014a:	ec0000        	lsi	f0, a0, 0x3b0
400d014d:	3f4017        	ball	a0, a1, 400d0190 <_flash_cache_start+0x178>
400d0150:	001c      	movi.n	a0, 16
400d0152:	003ff4        	lsi	f15, a15, 0
400d0155:	0fff00        	f64cmph	a15, a15, a0, 0
400d0158:	037c36        	entry	a12, 0x1b8
400d015b:	8c0800        	lsi	f0, a8, 0x230
400d015e:	061a      	add.n	a0, a6, a1
400d0160:	f000c0        	subx8	a0, a0, a12
400d0163:	3f          	.byte 0x3f
400d0164:	001c      	movi.n	a0, 16
400d0166:	cc3ff0        	lsi	f15, a15, 0x330
400d0169:	3ff000        	f64cmph	a15, a0, a0, 3
400d016c:	e513f0        	extui	a1, a15, 19, 15
400d016f:	f0ac00        	subx8	a10, a12, a0
400d0172:	003ff4        	lsi	f15, a15, 0
400d0175:	002000        	isync
400d0178:	d0ac      	beqz.n	a0, 400d01a9 <_flash_cache_start+0x191>
400d017a:	c43ff6        	bgeui	a15, 3, 400d0142 <_flash_cache_start+0x12a>
400d017d:	3ff000        	f64cmph	a15, a0, a0, 3
400d0180:	f00020        	subx8	a0, a0, a2
400d0183:	3f          	.byte 0x3f
400d0184:	0081d4        	lsi	f13, a1, 0
400d0187:	ebe840        	f64cmpl	a14, a8, a4
400d018a:	3ffb      	addi.n	a3, a15, 15
400d018c:	0078      	l32i.n	a7, a0, 0
400d018e:	3ffc      	bnez.n	a15, 400d01c5 <_flash_cache_start+0x1ad>
400d0190:	117c      	movi.n	a1, -15
400d0192:	4008      	l32i.n	a0, a0, 16
400d0194:	007c      	movi.n	a0, -16
400d0196:	3ffc      	bnez.n	a15, 400d01cd <_flash_cache_start+0x1b5>
400d0198:	188c      	beqz.n	a8, 400d019d <_flash_cache_start+0x185>
400d019a:	b43f40        	extui	a3, a4, 15, 12
400d019d:	4018      	l32i.n	a1, a0, 16
400d019f:	3f          	.byte 0x3f
400d01a0:	181c      	movi.n	a8, 17
400d01a2:	943f40        	extui	a3, a4, 15, 10
400d01a5:	3ffc00        	f64cmph	a15, a12, a0, 3
400d01a8:	e7e8      	l32i.n	a14, a7, 56
400d01aa:	3ffb      	addi.n	a3, a15, 15
400d01ac:	087450        	lsx	f7, a4, a5
400d01af:	080440        	lsx	f0, a4, a4
400d01b2:	ff0000        	f64cmph	a0, a0, a0, 15
400d01b5:	ff          	.byte 0xff
400d01b6:	ffffc1        	l32r	a12, 400d01b4 <_flash_cache_start+0x19c>
400d01b9:	ff          	.byte 0xff
400d01ba:	fe          	.byte 0xfe
400d01bb:	ff          	.byte 0xff
400d01bc:	18cc      	bnez.n	a8, 400d01c1 <_flash_cache_start+0x1a9>
400d01be:	b43f40        	extui	a3, a4, 15, 12
400d01c1:	4019      	s32i.n	a1, a0, 16
400d01c3:	3f          	.byte 0x3f
400d01c4:	18d8      	l32i.n	a13, a8, 4
400d01c6:	cc3f40        	lsi	f4, a15, 0x330
400d01c9:	4019      	s32i.n	a1, a0, 16
400d01cb:	3f          	.byte 0x3f
400d01cc:	401944        	lsi	f4, a9, 0x100
400d01cf:	3f          	.byte 0x3f
400d01d0:	4019a0        	lsi	f10, a9, 0x100
400d01d3:	3f          	.byte 0x3f
400d01d4:	f40000        	extui	a0, a0, 0, 16
400d01d7:	bf          	.byte 0xbf
400d01d8:	ff          	.byte 0xff
400d01d9:	ff          	.byte 0xff
400d01da:	f00ff3        	lsi	f15, a15, 0x3c0
400d01dd:	fbeb      	addi.n	a15, a11, 14
400d01df:	3f          	.byte 0x3f
400d01e0:	0811e0        	lsx	f1, a1, a14
400d01e3:	ffff40        	f64cmph	a15, a15, a4, 15
400d01e6:	3f          	.byte 0x3f
400d01e7:	008cc0        	any4	b12, b12:b13:b14:b15
400d01ea:	3ffc      	bnez.n	a15, 400d0221 <_flash_cache_start+0x209>
400d01ec:	f60000        	lsi	f0, a0, 0x3d8
400d01ef:	3f          	.byte 0x3f
400d01f0:	d83aa1        	l32r	a10, 400c62d8 <_rtc_text_end+0x62d8>
400d01f3:	800050        	add	a0, a0, a5
400d01f6:	000003        	lsi	f0, a0, 0
400d01f9:	001c00        	movsp	a0, a12
400d01fc:	ff          	.byte 0xff
400d01fd:	ff          	.byte 0xff
400d01fe:	ff          	.byte 0xff
400d01ff:	9f          	.byte 0x9f
400d0200:	000000        	ill
400d0203:	0018      	l32i.n	a1, a0, 0
400d0205:	9c4000        	lsi	f0, a0, 0x270
400d0208:	002710        	lsi	f1, a7, 0
400d020b:	14dc00        	extui	a13, a0, 12, 2
400d020e:	4008      	l32i.n	a0, a0, 16
400d0210:	000000        	ill
400d0213:	295c01        	l32r	a0, 4009a784 <_iram_end+0xcc30>
400d0216:	643f40        	extui	a3, a4, 15, 7
400d0219:	4029      	s32i.n	a2, a0, 16
400d021b:	3f          	.byte 0x3f
400d021c:	2d9c      	beqz.n	a13, 400d0232 <_flash_cache_start+0x21a>
400d021e:	543f40        	extui	a3, a4, 15, 6
400d0221:	007d      	mov.n	a7, a0
400d0223:	00a040        	any8	b4, b0:b1:b2:b3:b4:b5:b6:b7
400d0226:	3ffc      	bnez.n	a15, 400d025d <_flash_cache_start+0x245>
400d0228:	00ac      	beqz.n	a0, 400d024c <_flash_cache_start+0x234>
400d022a:	3ffc      	bnez.n	a15, 400d0261 <_flash_cache_start+0x249>
400d022c:	fc00a4        	lsi	f10, a0, 0x3f0
400d022f:	3f          	.byte 0x3f
400d0230:	401674        	lsi	f7, a6, 0x100
400d0233:	3f          	.byte 0x3f
400d0234:	402e60        	lsi	f6, a14, 0x100
400d0237:	3f          	.byte 0x3f
400d0238:	2dcc      	bnez.n	a13, 400d023e <_flash_cache_start+0x226>
400d023a:	e43f40        	extui	a3, a4, 15, 15
400d023d:	be          	.byte 0xbe
400d023e:	a84000        	lsi	f0, a0, 0x2a0
400d0241:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0244:	001200        	movsp	a0, a2
400d0247:	2e5400        	f64norm	a5, a4, a0, 0
400d024a:	803f40        	add	a3, a15, a4
400d024d:	400d67        	bnone	a13, a6, 400d0291 <_flash_cache_start+0x279>
400d0250:	081670        	lsx	f1, a6, a7
400d0253:	000040        	lsi	f4, a0, 0
400d0256:	b81000        	lsi	f0, a0, 0x2e0
400d0259:	3ffc00        	f64cmph	a15, a12, a0, 3
400d025c:	fc12b0        	lsi	f11, a2, 0x3f0
400d025f:	3f          	.byte 0x3f
400d0260:	12a8      	l32i.n	a10, a2, 4
400d0262:	3ffc      	bnez.n	a15, 400d0299 <_flash_cache_start+0x281>
400d0264:	fc00c0        	lsi	f12, a0, 0x3f0
400d0267:	3f          	.byte 0x3f
400d0268:	2eec      	bnez.n	a14, 400d028e <_flash_cache_start+0x276>
400d026a:	dc3f40        	lsi	f4, a15, 0x370
400d026d:	0d68      	l32i.n	a6, a13, 0
400d026f:	167440        	lsi	f4, a4, 88
400d0272:	f43f40        	extui	a3, a4, 15, 16
400d0275:	2e          	.byte 0x2e
400d0276:	7c3f40        	lsi	f4, a15, 0x1f0
400d0279:	2e          	.byte 0x2e
400d027a:	483f40        	ssx	f3, a15, a4
400d027d:	3ff480        	f64cmph	a15, a4, a8, 3
400d0280:	2f38      	l32i.n	a3, a15, 8
400d0282:	d43f40        	extui	a3, a4, 15, 14
400d0285:	3ff480        	f64cmph	a15, a4, a8, 3
400d0288:	028000        	andb	b8, b0, b0
400d028b:	698c40        	lsi	f4, a12, 0x1a4
400d028e:	400d      	lsi	f0, a0, 0
400d0290:	402f60        	lsi	f6, a15, 0x100
400d0293:	3f          	.byte 0x3f
400d0294:	301c      	movi.n	a0, 19
400d0296:	b03f40        	addx8	a3, a15, a4
400d0299:	2f          	.byte 0x2f
400d029a:	3c3f40        	lsi	f4, a15, 240
400d029d:	3ff480        	f64cmph	a15, a4, a8, 3
400d02a0:	fc00d0        	lsi	f13, a0, 0x3f0
400d02a3:	3f          	.byte 0x3f
400d02a4:	f5f000        	extui	a15, a0, 16, 16
400d02a7:	3f          	.byte 0x3f
400d02a8:	fbeef0        	f64subc	a15, a14, 3, 0
400d02ab:	3f          	.byte 0x3f
400d02ac:	eee8      	l32i.n	a14, a14, 56
400d02ae:	3ffb      	addi.n	a3, a15, 15
400d02b0:	fbeee0        	f64subc	a14, a14, 3, 0
400d02b3:	3f          	.byte 0x3f
400d02b4:	ec08      	l32i.n	a0, a12, 56
400d02b6:	3ffb      	addi.n	a3, a15, 15
400d02b8:	403030        	lsi	f3, a0, 0x100
400d02bb:	3f          	.byte 0x3f
400d02bc:	303c      	movi.n	a0, 51
400d02be:	a03f40        	addx4	a3, a15, a4
400d02c1:	3f4030        	f64cmph	a4, a0, a3, 3
400d02c4:	fbeec4        	lsi	f12, a14, 0x3ec
400d02c7:	3f          	.byte 0x3f
400d02c8:	30b8      	l32i.n	a11, a0, 12
400d02ca:	c83f40        	lsi	f4, a15, 0x320
400d02cd:	3f4030        	f64cmph	a4, a0, a3, 3
400d02d0:	4030e0        	lsi	f14, a0, 0x100
400d02d3:	3f          	.byte 0x3f
400d02d4:	6a8c      	beqz.n	a10, 400d02de <_flash_cache_start+0x2c6>
400d02d6:	400d      	lsi	f0, a0, 0
400d02d8:	30f8      	l32i.n	a15, a0, 12
400d02da:	3c3f40        	lsi	f4, a15, 240
400d02dd:	3f4032        	s8i	a3, a0, 63
400d02e0:	3158      	l32i.n	a5, a1, 12
400d02e2:	103f40        	and	a3, a15, a4
400d02e5:	6f          	.byte 0x6f
400d02e6:	400d      	lsi	f0, a0, 0
400d02e8:	31ec      	bnez.n	a1, 400d030f <_flash_cache_start+0x2f7>
400d02ea:	283f40        	lsi	f4, a15, 160
400d02ed:	3f4032        	s8i	a3, a0, 63
400d02f0:	708c      	beqz.n	a0, 400d02fb <_flash_cache_start+0x2e3>
400d02f2:	4008      	l32i.n	a0, a0, 16
400d02f4:	08dc      	bnez.n	a8, 400d0308 <_flash_cache_start+0x2f0>
400d02f6:	3ffc      	bnez.n	a15, 400d032d <_flash_cache_start+0x315>
400d02f8:	fc00d4        	lsi	f13, a0, 0x3f0
400d02fb:	3f          	.byte 0x3f
400d02fc:	6f2c      	movi.n	a15, 38
400d02fe:	400d      	lsi	f0, a0, 0
400d0300:	6f1c      	movi.n	a15, 22
400d0302:	400d      	lsi	f0, a0, 0
400d0304:	fc08d4        	lsi	f13, a8, 0x3f0
400d0307:	3f          	.byte 0x3f
400d0308:	100014        	lsi	f1, a0, 64
400d030b:	ffff00        	f64cmph	a15, a15, a0, 15
400d030e:	3f          	.byte 0x3f
400d030f:	0000b3        	lsi	f11, a0, 0
400d0312:	a00200        	addx4	a0, a2, a0
400d0315:	3ff005        	call0	40110218 <_etext+0x2393b>
400d0318:	0fc000        	f64cmph	a12, a0, a0, 0
400d031b:	325000        	orbc	b5, b0, b0
400d031e:	003f40        	lsi	f4, a15, 0
400d0321:	fc09      	s32i.n	a0, a12, 60
400d0323:	3f          	.byte 0x3f
400d0324:	fc0904        	lsi	f0, a9, 0x3f0
400d0327:	3f          	.byte 0x3f
400d0328:	081e74        	lsi	f7, a14, 32
400d032b:	0c0040        	lsi	f4, a0, 48
400d032e:	740000        	extui	a0, a0, 0, 8
400d0331:	3f4033        	ssi	f3, a0, 252
400d0334:	403384        	lsi	f8, a3, 0x100
400d0337:	3f          	.byte 0x3f
400d0338:	1bde83        	lsi	f8, a14, 108
400d033b:	08f443        	lsi	f4, a4, 32
400d033e:	3ffc      	bnez.n	a15, 400d0375 <_flash_cache_start+0x35d>
400d0340:	4033b0        	lsi	f11, a3, 0x100
400d0343:	3f          	.byte 0x3f
400d0344:	3468      	l32i.n	a6, a4, 12
400d0346:	943f40        	extui	a3, a4, 15, 10
400d0349:	3f4032        	s8i	a3, a0, 63
400d034c:	ff          	.byte 0xff
400d034d:	ff          	.byte 0xff
400d034e:	ff          	.byte 0xff
400d034f:	ef          	.byte 0xef
400d0350:	fc08f0        	lsi	f15, a8, 0x3f0
400d0353:	3f          	.byte 0x3f
400d0354:	08f8      	l32i.n	a15, a8, 0
400d0356:	3ffc      	bnez.n	a15, 400d038d <_flash_cache_start+0x375>
400d0358:	f47030        	extui	a7, a3, 0, 16
400d035b:	3f          	.byte 0x3f
400d035c:	f47020        	extui	a7, a2, 0, 16
400d035f:	3f          	.byte 0x3f
400d0360:	7028      	l32i.n	a2, a0, 28
400d0362:	2c3ff4        	lsi	f15, a15, 176
400d0365:	3ff470        	f64cmph	a15, a4, a7, 3
400d0368:	3428      	l32i.n	a2, a4, 12
400d036a:	483f40        	ssx	f3, a15, a4
400d036d:	fc09      	s32i.n	a0, a12, 60
400d036f:	3f          	.byte 0x3f
400d0370:	ec6c      	movi.n	a12, -18
400d0372:	3ffb      	addi.n	a3, a15, 15
400d0374:	0908      	l32i.n	a0, a9, 0
400d0376:	3ffc      	bnez.n	a15, 400d03ad <_flash_cache_start+0x395>
400d0378:	121212        	l16ui	a1, a2, 36
400d037b:	349812        	l16si	a1, a8, 104
400d037e:	a43f40        	extui	a3, a4, 15, 11
400d0381:	3f4034        	lsi	f3, a0, 252
400d0384:	403610        	lsi	f1, a6, 0x100
400d0387:	3f          	.byte 0x3f
400d0388:	4034f0        	lsi	f15, a4, 0x100
400d038b:	3f          	.byte 0x3f
400d038c:	fc09a0        	lsi	f10, a9, 0x3f0
400d038f:	3f          	.byte 0x3f
400d0390:	fc0990        	lsi	f9, a9, 0x3f0
400d0393:	3f          	.byte 0x3f
400d0394:	098c      	beqz.n	a9, 400d0398 <_flash_cache_start+0x380>
400d0396:	3ffc      	bnez.n	a15, 400d03cd <_flash_cache_start+0x3b5>
400d0398:	0988      	l32i.n	a8, a9, 0
400d039a:	3ffc      	bnez.n	a15, 400d03d1 <_flash_cache_start+0x3b9>
400d039c:	0998      	l32i.n	a9, a9, 0
400d039e:	3ffc      	bnez.n	a15, 400d03d5 <_flash_cache_start+0x3bd>
400d03a0:	fc0994        	lsi	f9, a9, 0x3f0
400d03a3:	3f          	.byte 0x3f
400d03a4:	4036a4        	lsi	f10, a6, 0x100
400d03a7:	3f          	.byte 0x3f
400d03a8:	24a8      	l32i.n	a10, a4, 8
400d03aa:	4008      	l32i.n	a0, a0, 16
400d03ac:	401674        	lsi	f7, a6, 0x100
400d03af:	3f          	.byte 0x3f
400d03b0:	36b8      	l32i.n	a11, a6, 12
400d03b2:	3c3f40        	lsi	f4, a15, 240
400d03b5:	3f4036        	entry	a0, 0x1fa0
400d03b8:	36c8      	l32i.n	a12, a6, 12
400d03ba:	b83f40        	lsi	f4, a15, 0x2e0
400d03bd:	3ff480        	f64cmph	a15, a4, a8, 3
400d03c0:	fc09a4        	lsi	f10, a9, 0x3f0
400d03c3:	3f          	.byte 0x3f
400d03c4:	301c      	movi.n	a0, 19
400d03c6:	143ff4        	lsi	f15, a15, 80
400d03c9:	3ff430        	f64cmph	a15, a4, a3, 3
400d03cc:	201c      	movi.n	a0, 18
400d03ce:	143ff4        	lsi	f15, a15, 80
400d03d1:	3ff420        	f64cmph	a15, a4, a2, 3
400d03d4:	09cc      	bnez.n	a9, 400d03d8 <_flash_cache_start+0x3c0>
400d03d6:	3ffc      	bnez.n	a15, 400d040d <_flash_cache_start+0x3f5>
400d03d8:	001274        	lsi	f7, a2, 0
400d03db:	09d840        	l32e	a4, a8, -12
400d03de:	3ffc      	bnez.n	a15, 400d0415 <_flash_cache_start+0x3fd>
400d03e0:	37bc      	beqz.n	a7, 400d0417 <_flash_cache_start+0x3ff>
400d03e2:	d43f40        	extui	a3, a4, 15, 14
400d03e5:	400015        	call4	401103e8 <_etext+0x23b0b>
400d03e8:	00c5f4        	lsi	f15, a5, 0
400d03eb:	37c040        	lsi	f4, a0, 220
400d03ee:	b43f40        	extui	a3, a4, 15, 12
400d03f1:	403a      	add.n	a4, a0, a3
400d03f3:	3f          	.byte 0x3f
400d03f4:	37dc      	bnez.n	a7, 400d040b <_flash_cache_start+0x3f3>
400d03f6:	ec3f40        	lsi	f4, a15, 0x3b0
400d03f9:	cf          	.byte 0xcf
400d03fa:	ec4005        	call0	400bc7fc <_iram_end+0x2eca8>
400d03fd:	403a      	add.n	a4, a0, a3
400d03ff:	3f          	.byte 0x3f
400d0400:	4038      	l32i.n	a3, a0, 16
400d0402:	083f40        	lsx	f3, a15, a4
400d0405:	403b      	addi.n	a4, a0, 3
400d0407:	3f          	.byte 0x3f
400d0408:	403854        	lsi	f5, a8, 0x100
400d040b:	3f          	.byte 0x3f
400d040c:	404070        	lsi	f7, a0, 0x100
400d040f:	3f          	.byte 0x3f
400d0410:	403874        	lsi	f7, a8, 0x100
400d0413:	3f          	.byte 0x3f
400d0414:	3b7c      	movi.n	a11, -13
400d0416:	c03f40        	sub	a3, a15, a4
400d0419:	3f          	.byte 0x3f
400d041a:	a03f40        	addx4	a3, a15, a4
400d041d:	403b      	addi.n	a4, a0, 3
400d041f:	3f          	.byte 0x3f
400d0420:	3f7c      	movi.n	a15, -13
400d0422:	c83f40        	lsi	f4, a15, 0x320
400d0425:	3e          	.byte 0x3e
400d0426:	b43f40        	extui	a3, a4, 15, 12
400d0429:	403b      	addi.n	a4, a0, 3
400d042b:	3f          	.byte 0x3f
400d042c:	404154        	lsi	f5, a1, 0x100
400d042f:	3f          	.byte 0x3f
400d0430:	3bc8      	l32i.n	a12, a11, 12
400d0432:	3c3f40        	lsi	f4, a15, 240
400d0435:	403c      	movi.n	a0, 52
400d0437:	3f          	.byte 0x3f
400d0438:	403e74        	lsi	f7, a14, 0x100
400d043b:	3f          	.byte 0x3f
400d043c:	403c50        	lsi	f5, a12, 0x100
400d043f:	3f          	.byte 0x3f
400d0440:	403cf4        	lsi	f15, a12, 0x100
400d0443:	3f          	.byte 0x3f
400d0444:	404124        	lsi	f2, a1, 0x100
400d0447:	3f          	.byte 0x3f
400d0448:	001102        	l16ui	a0, a1, 0
400d044b:	3d3000        	lsi	f0, a0, 244
400d044e:	0c3f40        	lsi	f4, a15, 48
400d0451:	3f4040        	f64cmph	a4, a0, a4, 3
400d0454:	001103        	lsi	f0, a1, 0
400d0457:	3d5400        	lsi	f0, a4, 244
400d045a:	e43f40        	extui	a3, a4, 15, 15
400d045d:	3f          	.byte 0x3f
400d045e:	103f40        	and	a3, a15, a4
400d0461:	000011        	l32r	a1, 40090464 <_iram_end+0x2910>
400d0464:	ff          	.byte 0xff
400d0465:	0f          	.byte 0xf
400d0466:	010000        	slli	a0, a0, 32
400d0469:	000011        	l32r	a1, 4009046c <_iram_end+0x2918>
400d046c:	110b      	addi.n	a1, a1, -1
400d046e:	880000        	lsi	f0, a0, 0x220
400d0471:	3f4041        	l32r	a4, 400a0174 <_iram_end+0x12620>
400d0474:	423c      	movi.n	a2, 52
400d0476:	bc3f40        	lsi	f4, a15, 0x2f0
400d0479:	3f4041        	l32r	a4, 400a017c <_iram_end+0x12628>
400d047c:	ff          	.byte 0xff
400d047d:	ff          	.byte 0xff
400d047e:	ff          	.byte 0xff
400d047f:	110500        	slli	a0, a5, 16
400d0482:	0d0000        	lsi	f0, a0, 52
400d0485:	000011        	l32r	a1, 40090488 <_iram_end+0x2934>
400d0488:	980000        	lsi	f0, a0, 0x260
400d048b:	430c01        	l32r	a0, 400a10bc <_iram_end+0x13568>
400d048e:	383f40        	lsi	f4, a15, 224
400d0491:	3f4043        	ssi	f4, a0, 252
400d0494:	404290        	lsi	f9, a2, 0x100
400d0497:	3f          	.byte 0x3f
400d0498:	fe          	.byte 0xfe
400d0499:	ee          	.byte 0xee
400d049a:	ff          	.byte 0xff
400d049b:	ff          	.byte 0xff
400d049c:	404530        	lsi	f3, a5, 0x100
400d049f:	3f          	.byte 0x3f
400d04a0:	fbeca0        	f64subc	a10, a12, 3, 0
400d04a3:	3f          	.byte 0x3f
400d04a4:	ec7c      	movi.n	a12, -2
400d04a6:	3ffb      	addi.n	a3, a15, 15
400d04a8:	09f8      	l32i.n	a15, a9, 0
400d04aa:	3ffc      	bnez.n	a15, 400d04e1 <_flash_cache_start+0x4c9>
400d04ac:	fc09f4        	lsi	f15, a9, 0x3f0
400d04af:	3f          	.byte 0x3f
400d04b0:	fc09f0        	lsi	f15, a9, 0x3f0
400d04b3:	3f          	.byte 0x3f
400d04b4:	09ec      	bnez.n	a9, 400d04d8 <_flash_cache_start+0x4c0>
400d04b6:	3ffc      	bnez.n	a15, 400d04ed <_flash_cache_start+0x4d5>
400d04b8:	09e8      	l32i.n	a14, a9, 0
400d04ba:	3ffc      	bnez.n	a15, 400d04f1 <_flash_cache_start+0x4d9>
400d04bc:	fc09e4        	lsi	f14, a9, 0x3f0
400d04bf:	3f          	.byte 0x3f
400d04c0:	fc09e0        	lsi	f14, a9, 0x3f0
400d04c3:	3f          	.byte 0x3f
400d04c4:	09fc      	bnez.n	a9, 400d04f8 <_flash_cache_start+0x4e0>
400d04c6:	3ffc      	bnez.n	a15, 400d04fd <_flash_cache_start+0x4e5>
400d04c8:	0d9700        	lsi	f0, a7, 52
400d04cb:	ec9440        	lsi	f4, a4, 0x3b0
400d04ce:	3ffb      	addi.n	a3, a15, 15
400d04d0:	009600        	all4	b0, b4:b5:b6:b7
400d04d3:	096000        	l32e	a0, a0, -40
400d04d6:	800000        	add	a0, a0, a0
400d04d9:	000025        	call8	400d04dc <_flash_cache_start+0x4c4>
400d04dc:	004b00        	break	11, 0
400d04df:	12c000        	andbc	b12, b0, b0
400d04e2:	400000        	ssr	a0
400d04e5:	000f42        	l8ui	a4, a15, 0
400d04e8:	070800        	lsi	f0, a8, 28
400d04eb:	c20000        	quou	a0, a0, a0
400d04ee:	000001        	l32r	a0, 400904f0 <_iram_end+0x299c>
400d04f1:	000384        	lsi	f8, a3, 0
400d04f4:	00e100        	lsi	f0, a1, 0
400d04f7:	ca0000        	float.s	f0, a0, 0
400d04fa:	0008      	l32i.n	a0, a0, 0
400d04fc:	0e1000        	setb_expstate	0
400d04ff:	a12000        	sll	a2, a0
400d0502:	a00007        	bnone	a0, a0, 400d04a6 <_flash_cache_start+0x48e>
400d0505:	002625        	call8	400d0768 <_flash_cache_start+0x750>
400d0508:	16e360        	lsi	f6, a3, 88
400d050b:	848000        	extui	a8, a0, 0, 9
400d050e:	1e          	.byte 0x1e
400d050f:	940000        	extui	a0, a0, 0, 10
400d0512:	e00011        	l32r	a1, 400c8514 <_rtc_text_end+0x8514>
400d0515:	003567        	bltu	a5, a6, 400d0519 <_flash_cache_start+0x501>
400d0518:	3d0900        	lsi	f0, a9, 244
400d051b:	c6c000        	lsi	f0, a0, 0x318
400d051e:	002d      	mov.n	a2, a0
400d0520:	404370        	lsi	f7, a3, 0x100
400d0523:	3f          	.byte 0x3f
400d0524:	43ec      	bnez.n	a3, 400d054c <_flash_cache_start+0x534>
400d0526:	f03f40        	subx8	a3, a15, a4
400d0529:	3f4043        	ssi	f4, a0, 252
400d052c:	4043f4        	lsi	f15, a3, 0x100
400d052f:	3f          	.byte 0x3f
400d0530:	004000        	break	0, 0
400d0533:	0a0000        	add.s	f0, f0, f0
400d0536:	3ffc      	bnez.n	a15, 400d056d <_flash_cache_start+0x555>
400d0538:	43f8      	l32i.n	a15, a3, 16
400d053a:	083f40        	lsx	f3, a15, a4
400d053d:	3f4045        	call0	4010f944 <_etext+0x23067>
400d0540:	440c      	movi.n	a4, 4
400d0542:	fc3f40        	lsi	f4, a15, 0x3f0
400d0545:	3f4044        	lsi	f4, a0, 252
400d0548:	002000        	isync
400d054b:	44f000        	extui	a15, a0, 0, 5
400d054e:	743f40        	extui	a3, a4, 15, 8
400d0551:	3f4044        	lsi	f4, a0, 252
400d0554:	4044d0        	lsi	f13, a4, 0x100
400d0557:	3f          	.byte 0x3f
400d0558:	4044e4        	lsi	f14, a4, 0x100
400d055b:	3f          	.byte 0x3f
400d055c:	fc0a10        	lsi	f1, a10, 0x3f0
400d055f:	3f          	.byte 0x3f
400d0560:	4044c4        	lsi	f12, a4, 0x100
400d0563:	3f          	.byte 0x3f
400d0564:	fc0a04        	lsi	f0, a10, 0x3f0
400d0567:	3f          	.byte 0x3f
400d0568:	09dc      	bnez.n	a9, 400d057c <_flash_cache_start+0x564>
400d056a:	3ffc      	bnez.n	a15, 400d05a1 <_flash_cache_start+0x589>
400d056c:	ec88      	l32i.n	a8, a12, 56
400d056e:	3ffb      	addi.n	a3, a15, 15
400d0570:	0da090        	lsi	f9, a0, 52
400d0573:	9ff040        	f64cmph	a15, a0, a4, 9
400d0576:	400d      	lsi	f0, a0, 0
400d0578:	0d9e94        	lsi	f9, a14, 52
400d057b:	9fac40        	f64cmph	a10, a12, a4, 9
400d057e:	400d      	lsi	f0, a0, 0
400d0580:	9f8c      	beqz.n	a15, 400d058d <_flash_cache_start+0x575>
400d0582:	400d      	lsi	f0, a0, 0
400d0584:	0d9ef0        	lsi	f15, a14, 52
400d0587:	9e3840        	f64iter	a3, a8, a4, 1, 0
400d058a:	400d      	lsi	f0, a0, 0
400d058c:	9be8      	l32i.n	a14, a11, 36
400d058e:	400d      	lsi	f0, a0, 0
400d0590:	983c      	movi.n	a8, 57
400d0592:	400d      	lsi	f0, a0, 0
400d0594:	0d9810        	lsi	f1, a8, 52
400d0597:	97d440        	lsi	f4, a4, 0x25c
400d059a:	400d      	lsi	f0, a0, 0
400d059c:	0d94f4        	lsi	f15, a4, 52
400d059f:	944440        	extui	a4, a4, 4, 10
400d05a2:	400d      	lsi	f0, a0, 0
400d05a4:	448c      	beqz.n	a4, 400d05ac <_flash_cache_start+0x594>
400d05a6:	983f40        	lsi	f4, a15, 0x260
400d05a9:	3f4044        	lsi	f4, a0, 252
400d05ac:	404514        	lsi	f1, a5, 0x100
400d05af:	3f          	.byte 0x3f
400d05b0:	ecac      	beqz.n	a12, 400d05e2 <_flash_cache_start+0x5ca>
400d05b2:	3ffb      	addi.n	a3, a15, 15
400d05b4:	fc0a20        	lsi	f2, a10, 0x3f0
400d05b7:	3f          	.byte 0x3f
400d05b8:	fc0a24        	lsi	f2, a10, 0x3f0
400d05bb:	3f          	.byte 0x3f
400d05bc:	13ac      	beqz.n	a3, 400d05e1 <_flash_cache_start+0x5c9>
400d05be:	604000        	neg	a4, a0
400d05c1:	4000c2        	l8ui	a12, a0, 64
400d05c4:	453c      	movi.n	a5, 52
400d05c6:	403f40        	lsi	f4, a15, 0x100
400d05c9:	3f4045        	call0	4010f9d0 <_etext+0x230f3>
400d05cc:	4045e4        	lsi	f14, a5, 0x100
400d05cf:	3f          	.byte 0x3f
400d05d0:	404580        	lsi	f8, a5, 0x100
400d05d3:	3f          	.byte 0x3f
400d05d4:	0a1c      	movi.n	a10, 16
400d05d6:	3ffc      	bnez.n	a15, 400d060d <_flash_cache_start+0x5f5>
400d05d8:	012c      	movi.n	a1, 32
400d05da:	543f40        	extui	a3, a4, 15, 6
400d05dd:	fc0a      	add.n	a15, a12, a0
400d05df:	3f          	.byte 0x3f
400d05e0:	0a48      	l32i.n	a4, a10, 0
400d05e2:	3ffc      	bnez.n	a15, 400d0619 <_flash_cache_start+0x601>
400d05e4:	4045f4        	lsi	f15, a5, 0x100
400d05e7:	3f          	.byte 0x3f
400d05e8:	fbed70        	f64subc	a7, a13, 3, 0
400d05eb:	3f          	.byte 0x3f
400d05ec:	0b4c      	movi.n	a11, 64
400d05ee:	3ffc      	bnez.n	a15, 400d0625 <_flash_cache_start+0x60d>
400d05f0:	0a4c      	movi.n	a10, 64
400d05f2:	3ffc      	bnez.n	a15, 400d0629 <_flash_cache_start+0x611>
400d05f4:	fc0a50        	lsi	f5, a10, 0x3f0
400d05f7:	3f          	.byte 0x3f
400d05f8:	400000        	ssr	a0
400d05fb:	4e5c00        	f64rnd	a5, a12, a0, 0
400d05fe:	5c3f40        	lsi	f4, a15, 0x170
400d0601:	4f          	.byte 0x4f
400d0602:	783f40        	lsi	f4, a15, 0x1e0
400d0605:	4e          	.byte 0x4e
400d0606:	103f40        	and	a3, a15, a4
400d0609:	3ffc16        	beqz	a12, 400d0a0c <_flash_cache_start+0x9f4>
400d060c:	4ee8      	l32i.n	a14, a14, 16
400d060e:	4c3f40        	lsi	f4, a15, 0x130
400d0611:	4f          	.byte 0x4f
400d0612:	a43f40        	extui	a3, a4, 15, 11
400d0615:	3f4055        	call4	4010fa1c <_etext+0x2313f>
400d0618:	404f00        	ssai	15
400d061b:	3f          	.byte 0x3f
400d061c:	4f18      	l32i.n	a1, a15, 16
400d061e:	383f40        	lsi	f4, a15, 224
400d0621:	4f          	.byte 0x4f
400d0622:	583f40        	ssxp	f3, a15, a4
400d0625:	0e          	.byte 0xe
400d0626:	3ffc      	bnez.n	a15, 400d065d <_flash_cache_start+0x645>
400d0628:	405244        	lsi	f4, a2, 0x100
400d062b:	3f          	.byte 0x3f
400d062c:	405240        	lsi	f4, a2, 0x100
400d062f:	3f          	.byte 0x3f
400d0630:	f00000        	subx8	a0, a0, a0
400d0633:	ff          	.byte 0xff
400d0634:	ff          	.byte 0xff
400d0635:	ff          	.byte 0xff
400d0636:	df          	.byte 0xdf
400d0637:	7f          	.byte 0x7f
400d0638:	ff          	.byte 0xff
400d0639:	ff          	.byte 0xff
400d063a:	0f          	.byte 0xf
400d063b:	000000        	ill
400d063e:	048010        	extui	a8, a1, 0, 1
400d0641:	3f4052        	s8i	a5, a0, 63
400d0644:	3f          	.byte 0x3f
400d0645:	3f4052        	s8i	a5, a0, 63
400d0648:	405211        	l32r	a1, 400a0790 <_iram_end+0x12c3c>
400d064b:	3f          	.byte 0x3f
400d064c:	1118      	l32i.n	a1, a1, 4
400d064e:	504000        	iitlb	a0
400d0651:	400011        	l32r	a1, 400a0654 <_iram_end+0x12b00>
400d0654:	001184        	lsi	f8, a1, 0
400d0657:	11b840        	slli	a11, a8, 12
400d065a:	904000        	addx2	a4, a0, a0
400d065d:	1e          	.byte 0x1e
400d065e:	544000        	extui	a4, a0, 0, 6
400d0661:	00bd      	mov.n	a11, a0
400d0663:	1e0840        	f64sexp	a0, a8, a4
400d0666:	144000        	extui	a4, a0, 0, 2
400d0669:	1e          	.byte 0x1e
400d066a:	984000        	lsi	f0, a0, 0x260
400d066d:	3ff964        	lsi	f6, a9, 252
400d0670:	6478      	l32i.n	a7, a4, 24
400d0672:	3ff9      	s32i.n	a15, a15, 12
400d0674:	6458      	l32i.n	a5, a4, 24
400d0676:	3ff9      	s32i.n	a15, a15, 12
400d0678:	001000        	movsp	a0, a0
400d067b:	081a00        	lsx	f1, a10, a0
400d067e:	000000        	ill
400d0681:	0008      	l32i.n	a0, a0, 0
400d0683:	f00000        	subx8	a0, a0, a0
400d0686:	000000        	ill
400d0689:	000080        	ret
400d068c:	df          	.byte 0xdf
400d068d:	fffff7        	bbsi	a15, 31, 400d0690 <_flash_cache_start+0x678>
400d0690:	1e38      	l32i.n	a3, a14, 4
400d0692:	204000        	or	a4, a0, a0
400d0695:	400593        	lsi	f9, a5, 0x100
400d0698:	9108      	l32i.n	a0, a1, 36
400d069a:	cc4005        	call0	4009ca9c <_iram_end+0xef48>
400d069d:	00bc      	beqz.n	a0, 400d06d1 <_flash_cache_start+0x6b9>
400d069f:	93d440        	movnez	a13, a4, a4
400d06a2:	3e4005        	call0	4010eaa4 <_etext+0x221c7>
400d06a5:	3f4052        	s8i	a5, a0, 63
400d06a8:	ff          	.byte 0xff
400d06a9:	df          	.byte 0xdf
400d06aa:	ff          	.byte 0xff
400d06ab:	ff          	.byte 0xff
400d06ac:	893c      	movi.n	a9, 56
400d06ae:	394005        	call0	40109ab0 <_etext+0x1d1d3>
400d06b1:	8e          	.byte 0x8e
400d06b2:	0038e3        	lsi	f14, a8, 0
400d06b5:	ffff00        	f64cmph	a15, a15, a0, 15
400d06b8:	000000        	ill
400d06bb:	ff          	.byte 0xff
400d06bc:	000000        	ill
400d06bf:	0000f0        	callx12	a0
400d06c2:	584000        	ssxp	f4, a0, a0
400d06c5:	3f4001        	l32r	a0, 400a03c8 <_iram_end+0x12874>
400d06c8:	f00000        	subx8	a0, a0, a0
400d06cb:	7f          	.byte 0x7f
400d06cc:	c00000        	sub	a0, a0, a0
400d06cf:	00fc      	bnez.n	a0, 400d0703 <_flash_cache_start+0x6eb>
400d06d1:	000800        	lsi	f0, a8, 0
400d06d4:	000000        	ill
400d06d7:	000000        	ill
400d06da:	003ff0        	lsi	f15, a15, 0
400d06dd:	001000        	movsp	a0, a0
400d06e0:	01b8      	l32i.n	a11, a1, 0
400d06e2:	003f40        	lsi	f4, a15, 0
400d06e5:	402400        	ssa8l	a4
400d06e8:	8bec      	bnez.n	a11, 400d0714 <_flash_cache_start+0x6fc>
400d06ea:	084005        	call0	400d8aec <nvs::Page::load(unsigned int)+0xe4>
400d06ed:	3f4187        	ball	a1, a8, 400d0730 <_flash_cache_start+0x718>
400d06f0:	86b8      	l32i.n	a11, a6, 32
400d06f2:	fe3f41        	l32r	a4, 400cfff0 <_rtc_text_end+0xfff0>
400d06f5:	ff          	.byte 0xff
400d06f6:	ff          	.byte 0xff
400d06f7:	1f          	.byte 0x1f
400d06f8:	fbdb60        	f64subc	a6, a11, 2, 1
400d06fb:	3f          	.byte 0x3f
400d06fc:	fc1620        	lsi	f2, a6, 0x3f0
400d06ff:	3f          	.byte 0x3f
400d0700:	080000        	lsx	f0, a0, a0
400d0703:	db5440        	movt.s	f5, f4, b4
400d0706:	4008      	l32i.n	a0, a0, 16
400d0708:	c74c      	movi.n	a7, 76
400d070a:	0e          	.byte 0xe
400d070b:	57d040        	lsi	f4, a0, 0x15c
400d070e:	443f40        	extui	a3, a4, 15, 5
400d0711:	4059      	s32i.n	a5, a0, 16
400d0713:	3f          	.byte 0x3f
400d0714:	4057f4        	lsi	f15, a7, 0x100
400d0717:	3f          	.byte 0x3f
400d0718:	586c      	movi.n	a8, -27
400d071a:	943f40        	extui	a3, a4, 15, 10
400d071d:	4058      	l32i.n	a5, a0, 16
400d071f:	3f          	.byte 0x3f
400d0720:	4058a4        	lsi	f10, a8, 0x100
400d0723:	3f          	.byte 0x3f
400d0724:	056424        	lsi	f2, a4, 20
400d0727:	590840        	s32nb	a4, a8, 0
400d072a:	603f40        	lsi	f4, a15, 0x180
400d072d:	4059      	s32i.n	a5, a0, 16
400d072f:	3f          	.byte 0x3f
400d0730:	5928      	l32i.n	a2, a9, 20
400d0732:	583f40        	ssxp	f3, a15, a4
400d0735:	0e          	.byte 0xe
400d0736:	ec3f40        	lsi	f4, a15, 0x3b0
400d0739:	400d      	lsi	f0, a0, 0
400d073b:	3f          	.byte 0x3f
400d073c:	400d80        	lsi	f8, a13, 0x100
400d073f:	3f          	.byte 0x3f
400d0740:	400280        	lsi	f8, a2, 0x100
400d0743:	3f          	.byte 0x3f
400d0744:	4002a0        	lsi	f10, a2, 0x100
400d0747:	3f          	.byte 0x3f
400d0748:	400380        	lsi	f8, a3, 0x100
400d074b:	3f          	.byte 0x3f
400d074c:	039c      	beqz.n	a3, 400d0760 <_flash_cache_start+0x748>
400d074e:	813f40        	src	a3, a15, a4
400d0751:	4059      	s32i.n	a5, a0, 16
400d0753:	3f          	.byte 0x3f
400d0754:	405985        	call0	40110cf0 <_etext+0x24413>
400d0757:	3f          	.byte 0x3f
400d0758:	5989      	s32i.n	a8, a9, 20
400d075a:	8d3f40        	lsi	f4, a15, 0x234
400d075d:	4059      	s32i.n	a5, a0, 16
400d075f:	3f          	.byte 0x3f
400d0760:	405991        	l32r	a9, 400a08c4 <_iram_end+0x12d70>
400d0763:	3f          	.byte 0x3f
400d0764:	4059a2        	s16i	a10, a9, 128
400d0767:	3f          	.byte 0x3f
400d0768:	4003b4        	lsi	f11, a3, 0x100
400d076b:	3f          	.byte 0x3f
400d076c:	c00000        	sub	a0, a0, a0
400d076f:	3f          	.byte 0x3f
400d0770:	300000        	xor	a0, a0, a0
400d0773:	000040        	lsi	f4, a0, 0
400d0776:	673fe0        	lsi	f14, a15, 0x19c
400d0779:	666666        	bnei	a6, 6, 400d07e3 <_flash_cache_start+0x7cb>
400d077c:	000a      	add.n	a0, a0, a0
400d077e:	300000        	xor	a0, a0, a0
400d0781:	3f4005        	call0	4010fb84 <_etext+0x232a7>
400d0784:	400520        	lsi	f2, a5, 0x100
400d0787:	3f          	.byte 0x3f
400d0788:	4059b3        	lsi	f11, a9, 0x100
400d078b:	3f          	.byte 0x3f
400d078c:	059560        	extui	a9, a6, 21, 1
400d078f:	379040        	lsi	f4, a0, 220
400d0792:	a84006        	j	400ba896 <_iram_end+0x2cd42>
400d0795:	400636        	entry	a6, 0x2000
400d0798:	2a78      	l32i.n	a7, a10, 8
400d079a:	444000        	extui	a4, a0, 0, 5
400d079d:	00c9      	s32i.n	a12, a0, 0
400d079f:	26e440        	lsi	f4, a4, 152
400d07a2:	a84000        	lsi	f0, a0, 0x2a0
400d07a5:	400636        	entry	a6, 0x2000
400d07a8:	36dc      	bnez.n	a6, 400d07bf <_flash_cache_start+0x7a7>
400d07aa:	444006        	j	400e18ae <_vfiprintf_r+0x1b9e>
400d07ad:	4000c2        	l8ui	a12, a0, 64
400d07b0:	00d280        	lsi	f8, a2, 0
400d07b3:	054040        	extui	a4, a4, 16, 1
400d07b6:	603f40        	lsi	f4, a15, 0x180
400d07b9:	3f4005        	call0	4010fbbc <_etext+0x232df>
400d07bc:	400640        	lsi	f4, a6, 0x100
400d07bf:	3f          	.byte 0x3f
400d07c0:	065c      	movi.n	a6, 80
400d07c2:	4c3f40        	lsi	f4, a15, 0x130
400d07c5:	8e          	.byte 0x8e
400d07c6:	a24005        	call0	40072bc8 <__udivmoddi4+0xdfd4>
400d07c9:	4059      	s32i.n	a5, a0, 16
400d07cb:	3f          	.byte 0x3f
400d07cc:	405991        	l32r	a9, 400a0930 <_iram_end+0x12ddc>
400d07cf:	3f          	.byte 0x3f
400d07d0:	400674        	lsi	f7, a6, 0x100
400d07d3:	3f          	.byte 0x3f
400d07d4:	4007f0        	lsi	f15, a7, 0x100
400d07d7:	3f          	.byte 0x3f
400d07d8:	4007e0        	lsi	f14, a7, 0x100
400d07db:	3f          	.byte 0x3f
400d07dc:	8cc8      	l32i.n	a12, a12, 32
400d07de:	004005        	call0	400d0be0 <_flash_cache_start+0xbc8>
400d07e1:	4008      	l32i.n	a0, a0, 16
400d07e3:	3f          	.byte 0x3f
400d07e4:	400820        	lsi	f2, a8, 0x100
400d07e7:	3f          	.byte 0x3f
400d07e8:	400900        	ssr	a9
400d07eb:	3f          	.byte 0x3f
400d07ec:	091c      	movi.n	a9, 16
400d07ee:	813f40        	src	a3, a15, a4
400d07f1:	4059      	s32i.n	a5, a0, 16
400d07f3:	3f          	.byte 0x3f
400d07f4:	405985        	call0	40110d90 <_etext+0x244b3>
400d07f7:	3f          	.byte 0x3f
400d07f8:	5989      	s32i.n	a8, a9, 20
400d07fa:	8d3f40        	lsi	f4, a15, 0x234
400d07fd:	4059      	s32i.n	a5, a0, 16
400d07ff:	3f          	.byte 0x3f
400d0800:	405991        	l32r	a9, 400a0964 <_iram_end+0x12e10>
400d0803:	3f          	.byte 0x3f
400d0804:	4059a2        	s16i	a10, a9, 128
400d0807:	3f          	.byte 0x3f
400d0808:	400934        	lsi	f3, a9, 0x100
400d080b:	3f          	.byte 0x3f
400d080c:	400ab0        	lsi	f11, a10, 0x100
400d080f:	3f          	.byte 0x3f
400d0810:	400aa0        	lsi	f10, a10, 0x100
400d0813:	3f          	.byte 0x3f
400d0814:	4059b3        	lsi	f11, a9, 0x100
400d0817:	3f          	.byte 0x3f
400d0818:	4059b5        	call12	40110db4 <_etext+0x244d7>
400d081b:	3f          	.byte 0x3f
400d081c:	be          	.byte 0xbe
400d081d:	4059      	s32i.n	a5, a0, 16
400d081f:	3f          	.byte 0x3f
400d0820:	4059b3        	lsi	f11, a9, 0x100
400d0823:	3f          	.byte 0x3f
400d0824:	0f          	.byte 0xf
400d0825:	000027        	bnone	a0, a2, 400d0829 <_flash_cache_start+0x811>
400d0828:	4059b4        	lsi	f11, a9, 0x100
400d082b:	3f          	.byte 0x3f
400d082c:	100000        	and	a0, a0, a0
400d082f:	fe          	.byte 0xfe
400d0830:	f80000        	lsi	f0, a0, 0x3e0
400d0833:	3f          	.byte 0x3f
400d0834:	6f4361        	l32r	a6, 400ac540 <_iram_end+0x1e9ec>
400d0837:	87a763        	lsi	f6, a7, 0x21c
400d083a:	b33fd2        	lsi	f13, a15, 0x2cc
400d083d:	60c8      	l32i.n	a12, a0, 24
400d083f:	288b      	addi.n	a2, a8, 8
400d0841:	c68a      	add.n	a12, a6, a8
400d0843:	3f          	.byte 0x3f
400d0844:	79fb      	addi.n	a7, a9, 15
400d0846:	9f          	.byte 0x9f
400d0847:	441350        	extui	a1, a5, 3, 5
400d084a:	903fd3        	lsi	f13, a15, 0x240
400d084d:	3f4001        	l32r	a0, 400a0550 <_iram_end+0x129fc>
400d0850:	1c0000        	lsi	f0, a0, 112
400d0853:	000040        	lsi	f4, a0, 0
400d0856:	904014        	lsi	f1, a0, 0x240
400d0859:	400025        	call8	4011085c <_etext+0x23f7f>
400d085c:	3768      	l32i.n	a6, a7, 12
400d085e:	ff4006        	j	400d0562 <_flash_cache_start+0x54a>
400d0861:	ff          	.byte 0xff
400d0862:	ef          	.byte 0xef
400d0863:	7f          	.byte 0x7f
400d0864:	500000        	lsi	f0, a0, 0x140
400d0867:	ffff43        	lsi	f4, a15, 0x3fc
400d086a:	0f          	.byte 0xf
400d086b:	0ac080        	add.s	f12, f0, f8
400d086e:	e03f40        	subx4	a3, a15, a4
400d0871:	400a      	add.n	a4, a0, a0
400d0873:	3f          	.byte 0x3f
400d0874:	400bc0        	lsi	f12, a11, 0x100
400d0877:	3f          	.byte 0x3f
400d0878:	0bdc      	bnez.n	a11, 400d088c <_flash_cache_start+0x874>
400d087a:	a23f40        	muluh	a3, a15, a4
400d087d:	4059      	s32i.n	a5, a0, 16
400d087f:	3f          	.byte 0x3f
400d0880:	405991        	l32r	a9, 400a09e4 <_iram_end+0x12e90>
400d0883:	3f          	.byte 0x3f
400d0884:	400bf4        	lsi	f15, a11, 0x100
400d0887:	3f          	.byte 0x3f
400d0888:	400d70        	lsi	f7, a13, 0x100
400d088b:	3f          	.byte 0x3f
400d088c:	400d60        	lsi	f6, a13, 0x100
400d088f:	3f          	.byte 0x3f
400d0890:	fc0e60        	lsi	f6, a14, 0x3f0
400d0893:	3f          	.byte 0x3f
400d0894:	7488      	l32i.n	a8, a4, 28
400d0896:	c43f40        	extui	a3, a4, 15, 13
400d0899:	4059      	s32i.n	a5, a0, 16
400d089b:	3f          	.byte 0x3f
400d089c:	59cc      	bnez.n	a9, 400d08a5 <_flash_cache_start+0x88d>
400d089e:	e43f40        	extui	a3, a4, 15, 15
400d08a1:	4059      	s32i.n	a5, a0, 16
400d08a3:	3f          	.byte 0x3f
400d08a4:	ed9c      	beqz.n	a13, 400d08c6 <_flash_cache_start+0x8ae>
400d08a6:	3ffb      	addi.n	a3, a15, 15
400d08a8:	00e000        	lsi	f0, a0, 0
400d08ab:	74cc00        	extui	a12, a0, 12, 8
400d08ae:	f83f40        	lsi	f4, a15, 0x3e0
400d08b1:	4059      	s32i.n	a5, a0, 16
400d08b3:	3f          	.byte 0x3f
400d08b4:	003ff4        	lsi	f15, a15, 0
400d08b7:	000000        	ill
400d08ba:	fcc010        	lsi	f1, a0, 0x3f0
400d08bd:	3f          	.byte 0x3f
400d08be:	080001        	l32r	a0, 400928c0 <_iram_end+0x4d6c>
400d08c1:	405a      	add.n	a4, a0, a5
400d08c3:	3f          	.byte 0x3f
400d08c4:	74b8      	l32i.n	a11, a4, 28
400d08c6:	203f40        	or	a3, a15, a4
400d08c9:	405b      	addi.n	a4, a0, 5
400d08cb:	3f          	.byte 0x3f
400d08cc:	eefc      	bnez.n	a14, 400d090e <_flash_cache_start+0x8f6>
400d08ce:	3ffb      	addi.n	a3, a15, 15
400d08d0:	75c8      	l32i.n	a12, a5, 28
400d08d2:	a43f40        	extui	a3, a4, 15, 11
400d08d5:	405c      	movi.n	a0, 84
400d08d7:	3f          	.byte 0x3f
400d08d8:	4075b0        	wer	a11, a5
400d08db:	3f          	.byte 0x3f
400d08dc:	759c      	beqz.n	a5, 400d08f7 <_flash_cache_start+0x8df>
400d08de:	b43f40        	extui	a3, a4, 15, 12
400d08e1:	405c      	movi.n	a0, 84
400d08e3:	3f          	.byte 0x3f
400d08e4:	7588      	l32i.n	a8, a5, 28
400d08e6:	783f40        	lsi	f4, a15, 0x1e0
400d08e9:	3f4075        	call12	4010fcf0 <_etext+0x23413>
400d08ec:	7568      	l32i.n	a6, a5, 28
400d08ee:	543f40        	extui	a3, a4, 15, 6
400d08f1:	3f4075        	call12	4010fcf8 <_etext+0x2341b>
400d08f4:	ff          	.byte 0xff
400d08f5:	ff          	.byte 0xff
400d08f6:	0f          	.byte 0xf
400d08f7:	ff          	.byte 0xff
400d08f8:	407540        	wer	a4, a5
400d08fb:	3f          	.byte 0x3f
400d08fc:	7528      	l32i.n	a2, a5, 28
400d08fe:	103f40        	and	a3, a15, a4
400d0901:	c01000        	sub	a1, a0, a0
400d0904:	61ac      	beqz.n	a1, 400d092e <_flash_cache_start+0x916>
400d0906:	103f40        	and	a3, a15, a4
400d0909:	3f4075        	call12	4010fd10 <_etext+0x23433>
400d090c:	4062d0        	rer	a13, a2
400d090f:	3f          	.byte 0x3f
400d0910:	4063f0        	rer	a15, a3
400d0913:	3f          	.byte 0x3f
400d0914:	000c      	movi.n	a0, 0
400d0916:	0cc010        	lsi	f1, a0, 48
400d0919:	3f4065        	call8	4010fd20 <_etext+0x23443>
400d091c:	662c      	movi.n	a6, 38
400d091e:	4c3f40        	lsi	f4, a15, 0x130
400d0921:	3f4067        	ball	a0, a6, 400d0964 <_flash_cache_start+0x94c>
400d0924:	74f8      	l32i.n	a15, a4, 28
400d0926:	643f40        	extui	a3, a4, 15, 7
400d0929:	4068      	l32i.n	a6, a0, 16
400d092b:	3f          	.byte 0x3f
400d092c:	4074e0        	wer	a14, a4
400d092f:	3f          	.byte 0x3f
400d0930:	4074a4        	lsi	f10, a4, 0x100
400d0933:	3f          	.byte 0x3f
400d0934:	746c      	movi.n	a4, -25
400d0936:	583f40        	ssxp	f3, a15, a4
400d0939:	3f4074        	lsi	f7, a0, 252
400d093c:	4072c4        	lsi	f12, a2, 0x100
400d093f:	3f          	.byte 0x3f
400d0940:	fbed94        	lsi	f9, a13, 0x3ec
400d0943:	3f          	.byte 0x3f
400d0944:	800000        	add	a0, a0, a0
400d0947:	000000        	ill
400d094a:	000004        	lsi	f0, a0, 0
400d094d:	000200        	lsi	f0, a2, 0
400d0950:	000000        	ill
400d0953:	000004        	lsi	f0, a0, 0
400d0956:	000001        	l32r	a0, 40090958 <_iram_end+0x2e04>
400d0959:	0308      	l32i.n	a0, a3, 0
400d095b:	000000        	ill
400d095e:	e00003        	lsi	f0, a0, 0x380
400d0961:	3f4075        	call12	4010fd68 <_etext+0x2348b>
400d0964:	766c      	movi.n	a6, -25
400d0966:	d03f40        	subx2	a3, a15, a4
400d0969:	3ff000        	f64cmph	a15, a0, a0, 3
400d096c:	fbedb4        	lsi	f11, a13, 0x3ec
400d096f:	3f          	.byte 0x3f
400d0970:	4077d0        	wer	a13, a7
400d0973:	3f          	.byte 0x3f
400d0974:	76f8      	l32i.n	a15, a6, 28
400d0976:	cc3f40        	lsi	f4, a15, 0x330
400d0979:	4059      	s32i.n	a5, a0, 16
400d097b:	3f          	.byte 0x3f
400d097c:	407704        	lsi	f0, a7, 0x100
400d097f:	3f          	.byte 0x3f
400d0980:	edbc      	beqz.n	a13, 400d09c2 <_flash_cache_start+0x9aa>
400d0982:	3ffb      	addi.n	a3, a15, 15
400d0984:	77e8      	l32i.n	a14, a7, 28
400d0986:	443f40        	extui	a3, a4, 15, 5
400d0989:	3ff480        	f64cmph	a15, a4, a8, 3
400d098c:	edcc      	bnez.n	a13, 400d099e <_flash_cache_start+0x986>
400d098e:	3ffb      	addi.n	a3, a15, 15
400d0990:	fc0e70        	lsi	f7, a14, 0x3f0
400d0993:	3f          	.byte 0x3f
400d0994:	0e6c      	movi.n	a14, -32
400d0996:	3ffc      	bnez.n	a15, 400d09cd <_flash_cache_start+0x9b5>
400d0998:	0e9894        	lsi	f9, a8, 56
400d099b:	86f840        	lsi	f4, a8, 0x218
400d099e:	c83f40        	lsi	f4, a15, 0x320
400d09a1:	3ff480        	f64cmph	a15, a4, a8, 3
400d09a4:	0e8c      	beqz.n	a14, 400d09a8 <_flash_cache_start+0x990>
400d09a6:	3ffc      	bnez.n	a15, 400d09dd <_flash_cache_start+0x9c5>
400d09a8:	f48054        	lsi	f5, a0, 0x3d0
400d09ab:	3f          	.byte 0x3f
400d09ac:	8058      	l32i.n	a5, a0, 32
400d09ae:	183ff4        	lsi	f15, a15, 96
400d09b1:	3ffc16        	beqz	a12, 400d0db4 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x18>
400d09b4:	fc0e80        	lsi	f8, a14, 0x3f0
400d09b7:	3f          	.byte 0x3f
400d09b8:	0e78      	l32i.n	a7, a14, 0
400d09ba:	3ffc      	bnez.n	a15, 400d09f1 <_flash_cache_start+0x9d9>
400d09bc:	0e88      	l32i.n	a8, a14, 0
400d09be:	3ffc      	bnez.n	a15, 400d09f5 <_flash_cache_start+0x9dd>
400d09c0:	f48050        	extui	a8, a5, 0, 16
400d09c3:	3f          	.byte 0x3f
400d09c4:	ff          	.byte 0xff
400d09c5:	ff          	.byte 0xff
400d09c6:	240007        	bnone	a0, a0, 400d09ee <_flash_cache_start+0x9d6>
400d09c9:	3ffae0        	f64cmph	a15, a10, a14, 3
400d09cc:	fbedd4        	lsi	f13, a13, 0x3ec
400d09cf:	3f          	.byte 0x3f
400d09d0:	fae020        	lsi	f2, a0, 0x3e8
400d09d3:	3f          	.byte 0x3f
400d09d4:	fae0b0        	nexp01.s	f14, f0
400d09d7:	3f          	.byte 0x3f
400d09d8:	fc0e90        	lsi	f9, a14, 0x3f0
400d09db:	3f          	.byte 0x3f
400d09dc:	fae0b4        	lsi	f11, a0, 0x3e8
400d09df:	3f          	.byte 0x3f
400d09e0:	ee6c      	movi.n	a14, -18
400d09e2:	3ffb      	addi.n	a3, a15, 15
400d09e4:	fc0f80        	lsi	f8, a15, 0x3f0
400d09e7:	3f          	.byte 0x3f
400d09e8:	407880        	wer	a8, a8
400d09eb:	3f          	.byte 0x3f
400d09ec:	7908      	l32i.n	a0, a9, 28
400d09ee:	8c3f40        	lsi	f4, a15, 0x230
400d09f1:	4078      	l32i.n	a7, a0, 16
400d09f3:	3f          	.byte 0x3f
400d09f4:	0e9d94        	lsi	f9, a13, 56
400d09f7:	9f3840        	f64cmph	a3, a8, a4, 9
400d09fa:	0e          	.byte 0xe
400d09fb:	0f8440        	f64cmph	a8, a4, a4, 0
400d09fe:	3ffc      	bnez.n	a15, 400d0a35 <_flash_cache_start+0xa1d>
400d0a00:	0f88      	l32i.n	a8, a15, 0
400d0a02:	3ffc      	bnez.n	a15, 400d0a39 <_flash_cache_start+0xa21>
400d0a04:	407b34        	lsi	f3, a11, 0x100
400d0a07:	3f          	.byte 0x3f
400d0a08:	7938      	l32i.n	a3, a9, 28
400d0a0a:	883f40        	lsi	f4, a15, 0x220
400d0a0d:	407a      	add.n	a4, a0, a7
400d0a0f:	3f          	.byte 0x3f
400d0a10:	fbee74        	lsi	f7, a14, 0x3ec
400d0a13:	3f          	.byte 0x3f
400d0a14:	ff          	.byte 0xff
400d0a15:	ff          	.byte 0xff
400d0a16:	000c      	movi.n	a0, 0
400d0a18:	ff          	.byte 0xff
400d0a19:	ff          	.byte 0xff
400d0a1a:	400c      	movi.n	a0, 4
400d0a1c:	c00000        	sub	a0, a0, a0
400d0a1f:	10b8c0        	and	a11, a8, a12
400d0a22:	3ffc      	bnez.n	a15, 400d0a59 <_flash_cache_start+0xa41>
400d0a24:	009000        	all4	b0, b0:b1:b2:b3
400d0a27:	50aa00        	lsi	f0, a10, 0x140
400d0a2a:	000000        	ill
400d0a2d:	3ff5a0        	f64cmph	a15, a5, a10, 3
400d0a30:	010000        	slli	a0, a0, 32
400d0a33:	7df804        	lsi	f0, a8, 0x1f4
400d0a36:	c43f40        	extui	a3, a4, 15, 13
400d0a39:	7e          	.byte 0x7e
400d0a3a:	fc3f40        	lsi	f4, a15, 0x3f0
400d0a3d:	407d      	lsi	f7, a0, 0
400d0a3f:	3f          	.byte 0x3f
400d0a40:	fc10b4        	lsi	f11, a0, 0x3f0
400d0a43:	3f          	.byte 0x3f
400d0a44:	7e6c      	movi.n	a14, -25
400d0a46:	b03f40        	addx8	a3, a15, a4
400d0a49:	7e          	.byte 0x7e
400d0a4a:	803f40        	add	a3, a15, a4
400d0a4d:	7e          	.byte 0x7e
400d0a4e:	943f40        	extui	a3, a4, 15, 10
400d0a51:	7e          	.byte 0x7e
400d0a52:	c03f40        	sub	a3, a15, a4
400d0a55:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0a58:	7ed8      	l32i.n	a13, a14, 28
400d0a5a:	883f40        	lsi	f4, a15, 0x220
400d0a5d:	3f4080        	f64cmph	a4, a0, a8, 3
400d0a60:	407ef4        	lsi	f15, a14, 0x100
400d0a63:	3f          	.byte 0x3f
400d0a64:	008c00        	any4	b0, b12:b13:b14:b15
400d0a67:	84d800        	extui	a13, a0, 8, 9
400d0a6a:	003f40        	lsi	f4, a15, 0
400d0a6d:	bcd4d5        	call4	4008d7bc <esp_rom_spiflash_write+0xbc>
400d0a70:	aabc      	beqz.n	a10, 400d0aae <_flash_cache_start+0xa96>
400d0a72:	dcb8b1        	l32r	a11, 400c7d54 <_rtc_text_end+0x7d54>
400d0a75:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0a78:	fc10d4        	lsi	f13, a0, 0x3f0
400d0a7b:	3f          	.byte 0x3f
400d0a7c:	aa08      	l32i.n	a0, a10, 40
400d0a7e:	0e          	.byte 0xe
400d0a7f:	2b0040        	oeq.s	b0, f0, f4
400d0a82:	432b      	addi.n	a4, a3, 2
400d0a84:	4e5543        	lsi	f4, a5, 0x138
400d0a87:	aaf047        	bbsi	a0, 20, 400d0a35 <_flash_cache_start+0xa1d>
400d0a8a:	0e          	.byte 0xe
400d0a8b:	866440        	lsi	f4, a4, 0x218
400d0a8e:	9c3f40        	lsi	f4, a15, 0x270
400d0a91:	af          	.byte 0xaf
400d0a92:	0e          	.byte 0xe
400d0a93:	853440        	extui	a3, a4, 20, 9
400d0a96:	483f40        	ssx	f3, a15, a4
400d0a99:	3f4085        	call0	4010fea4 <_etext+0x235c7>
400d0a9c:	856c      	movi.n	a5, -24
400d0a9e:	903f40        	addx2	a3, a15, a4
400d0aa1:	3f4085        	call0	4010feac <_etext+0x235cf>
400d0aa4:	862c      	movi.n	a6, 40
400d0aa6:	403f40        	lsi	f4, a15, 0x100
400d0aa9:	3f4086        	j	400e07af <_vfiprintf_r+0xa9f>
400d0aac:	ad48      	l32i.n	a4, a13, 40
400d0aae:	0e          	.byte 0xe
400d0aaf:	85e040        	extui	a14, a4, 16, 9
400d0ab2:	5c3f40        	lsi	f4, a15, 0x170
400d0ab5:	0ead      	mov.n	a10, a14
400d0ab7:	861840        	lsi	f4, a8, 0x218
400d0aba:	e83f40        	lsi	f4, a15, 0x3a0
400d0abd:	3ffc10        	f64cmph	a15, a12, a1, 3
400d0ac0:	fc10e4        	lsi	f14, a0, 0x3f0
400d0ac3:	3f          	.byte 0x3f
400d0ac4:	864c      	movi.n	a6, 72
400d0ac6:	803f40        	add	a3, a15, a4
400d0ac9:	ee          	.byte 0xee
400d0aca:	3ffb      	addi.n	a3, a15, 15
400d0acc:	fbee84        	lsi	f8, a14, 0x3ec
400d0acf:	3f          	.byte 0x3f
400d0ad0:	fc10f4        	lsi	f15, a0, 0x3f0
400d0ad3:	3f          	.byte 0x3f
400d0ad4:	8678      	l32i.n	a7, a6, 32
400d0ad6:	503f40        	ritlb0	a4, a15
400d0ad9:	3ffc11        	l32r	a1, 400a0acc <_iram_end+0x12f78>
400d0adc:	1148      	l32i.n	a4, a1, 4
400d0ade:	3ffc      	bnez.n	a15, 400d0b15 <_flash_cache_start+0xafd>
400d0ae0:	fc1140        	lsi	f4, a1, 0x3f0
400d0ae3:	3f          	.byte 0x3f
400d0ae4:	1138      	l32i.n	a3, a1, 4
400d0ae6:	3ffc      	bnez.n	a15, 400d0b1d <_flash_cache_start+0xb05>
400d0ae8:	fc1130        	lsi	f3, a1, 0x3f0
400d0aeb:	3f          	.byte 0x3f
400d0aec:	1128      	l32i.n	a2, a1, 4
400d0aee:	3ffc      	bnez.n	a15, 400d0b25 <_flash_cache_start+0xb0d>
400d0af0:	fc1120        	lsi	f2, a1, 0x3f0
400d0af3:	3f          	.byte 0x3f
400d0af4:	1118      	l32i.n	a1, a1, 4
400d0af6:	3ffc      	bnez.n	a15, 400d0b2d <_flash_cache_start+0xb15>
400d0af8:	fc1110        	lsi	f1, a1, 0x3f0
400d0afb:	3f          	.byte 0x3f
400d0afc:	1108      	l32i.n	a0, a1, 4
400d0afe:	3ffc      	bnez.n	a15, 400d0b35 <_flash_cache_start+0xb1d>
400d0b00:	fc1100        	lsi	f0, a1, 0x3f0
400d0b03:	3f          	.byte 0x3f
400d0b04:	10f8      	l32i.n	a15, a0, 4
400d0b06:	3ffc      	bnez.n	a15, 400d0b3d <_flash_cache_start+0xb25>
400d0b08:	fc11b0        	lsi	f11, a1, 0x3f0
400d0b0b:	3f          	.byte 0x3f
400d0b0c:	11a8      	l32i.n	a10, a1, 4
400d0b0e:	3ffc      	bnez.n	a15, 400d0b45 <_flash_cache_start+0xb2d>
400d0b10:	fc11a0        	lsi	f10, a1, 0x3f0
400d0b13:	3f          	.byte 0x3f
400d0b14:	1198      	l32i.n	a9, a1, 4
400d0b16:	3ffc      	bnez.n	a15, 400d0b4d <_flash_cache_start+0xb35>
400d0b18:	fc1190        	lsi	f9, a1, 0x3f0
400d0b1b:	3f          	.byte 0x3f
400d0b1c:	1188      	l32i.n	a8, a1, 4
400d0b1e:	3ffc      	bnez.n	a15, 400d0b55 <_flash_cache_start+0xb3d>
400d0b20:	fc1180        	lsi	f8, a1, 0x3f0
400d0b23:	3f          	.byte 0x3f
400d0b24:	1178      	l32i.n	a7, a1, 4
400d0b26:	3ffc      	bnez.n	a15, 400d0b5d <_flash_cache_start+0xb45>
400d0b28:	fc1170        	lsi	f7, a1, 0x3f0
400d0b2b:	3f          	.byte 0x3f
400d0b2c:	1168      	l32i.n	a6, a1, 4
400d0b2e:	3ffc      	bnez.n	a15, 400d0b65 <_flash_cache_start+0xb4d>
400d0b30:	fc1160        	lsi	f6, a1, 0x3f0
400d0b33:	3f          	.byte 0x3f
400d0b34:	1158      	l32i.n	a5, a1, 4
400d0b36:	3ffc      	bnez.n	a15, 400d0b6d <_flash_cache_start+0xb55>
400d0b38:	fc11f0        	lsi	f15, a1, 0x3f0
400d0b3b:	3f          	.byte 0x3f
400d0b3c:	11e8      	l32i.n	a14, a1, 4
400d0b3e:	3ffc      	bnez.n	a15, 400d0b75 <_flash_cache_start+0xb5d>
400d0b40:	fc11e0        	lsi	f14, a1, 0x3f0
400d0b43:	3f          	.byte 0x3f
400d0b44:	11d8      	l32i.n	a13, a1, 4
400d0b46:	3ffc      	bnez.n	a15, 400d0b7d <_flash_cache_start+0xb65>
400d0b48:	fc11d0        	lsi	f13, a1, 0x3f0
400d0b4b:	3f          	.byte 0x3f
400d0b4c:	11c8      	l32i.n	a12, a1, 4
400d0b4e:	3ffc      	bnez.n	a15, 400d0b85 <_flash_cache_start+0xb6d>
400d0b50:	fc11c0        	lsi	f12, a1, 0x3f0
400d0b53:	3f          	.byte 0x3f
400d0b54:	11b8      	l32i.n	a11, a1, 4
400d0b56:	3ffc      	bnez.n	a15, 400d0b8d <_flash_cache_start+0xb75>
400d0b58:	fc1230        	lsi	f3, a2, 0x3f0
400d0b5b:	3f          	.byte 0x3f
400d0b5c:	1228      	l32i.n	a2, a2, 4
400d0b5e:	3ffc      	bnez.n	a15, 400d0b95 <_flash_cache_start+0xb7d>
400d0b60:	fc1220        	lsi	f2, a2, 0x3f0
400d0b63:	3f          	.byte 0x3f
400d0b64:	1218      	l32i.n	a1, a2, 4
400d0b66:	3ffc      	bnez.n	a15, 400d0b9d <_flash_cache_start+0xb85>
400d0b68:	fc1210        	lsi	f1, a2, 0x3f0
400d0b6b:	3f          	.byte 0x3f
400d0b6c:	1208      	l32i.n	a0, a2, 4
400d0b6e:	3ffc      	bnez.n	a15, 400d0ba5 <_flash_cache_start+0xb8d>
400d0b70:	fc1200        	lsi	f0, a2, 0x3f0
400d0b73:	3f          	.byte 0x3f
400d0b74:	11f8      	l32i.n	a15, a1, 4
400d0b76:	3ffc      	bnez.n	a15, 400d0bad <_flash_cache_start+0xb95>
400d0b78:	fc1244        	lsi	f4, a2, 0x3f0
400d0b7b:	3f          	.byte 0x3f
400d0b7c:	fc1240        	lsi	f4, a2, 0x3f0
400d0b7f:	3f          	.byte 0x3f
400d0b80:	0f78      	l32i.n	a7, a15, 0
400d0b82:	e43f40        	extui	a3, a4, 15, 15
400d0b85:	400eb5        	call12	40110c70 <_etext+0x24393>
400d0b88:	1238      	l32i.n	a3, a2, 4
400d0b8a:	3ffc      	bnez.n	a15, 400d0bc1 <_flash_cache_start+0xba9>
400d0b8c:	117c      	movi.n	a1, -15
400d0b8e:	843f40        	extui	a3, a4, 15, 9
400d0b91:	0f          	.byte 0xf
400d0b92:	9c3f40        	lsi	f4, a15, 0x270
400d0b95:	3f4086        	j	400e089b <_vfiprintf_r+0xb8b>
400d0b98:	401180        	lsi	f8, a1, 0x100
400d0b9b:	3f          	.byte 0x3f
400d0b9c:	4011c0        	lsi	f12, a1, 0x100
400d0b9f:	3f          	.byte 0x3f
400d0ba0:	1248      	l32i.n	a4, a2, 4
400d0ba2:	3ffc      	bnez.n	a15, 400d0bd9 <_flash_cache_start+0xbc1>
400d0ba4:	124c      	movi.n	a2, 65
400d0ba6:	3ffc      	bnez.n	a15, 400d0bdd <_flash_cache_start+0xbc5>
400d0ba8:	ee88      	l32i.n	a8, a14, 56
400d0baa:	3ffb      	addi.n	a3, a15, 15
400d0bac:	401374        	lsi	f7, a3, 0x100
400d0baf:	3f          	.byte 0x3f
400d0bb0:	fc1294        	lsi	f9, a2, 0x3f0
400d0bb3:	3f          	.byte 0x3f
400d0bb4:	fc1290        	lsi	f9, a2, 0x3f0
400d0bb7:	3f          	.byte 0x3f
400d0bb8:	128c      	beqz.n	a2, 400d0bbd <_flash_cache_start+0xba5>
400d0bba:	3ffc      	bnez.n	a15, 400d0bf1 <_flash_cache_start+0xbd9>
400d0bbc:	1378      	l32i.n	a7, a3, 4
400d0bbe:	a83f40        	lsi	f4, a15, 0x2a0
400d0bc1:	3f4086        	j	400e08c7 <_vfiprintf_r+0xbb7>
400d0bc4:	140c      	movi.n	a4, 1
400d0bc6:	603f40        	lsi	f4, a15, 0x180
400d0bc9:	3f4014        	lsi	f1, a0, 252
400d0bcc:	a00c      	movi.n	a0, 10
400d0bce:	b83ff5        	call12	40088fcc <vTaskDelete+0x64>
400d0bd1:	3f4014        	lsi	f1, a0, 252
400d0bd4:	150c      	movi.n	a5, 1
400d0bd6:	d33f40        	movt	a3, a15, b4
400d0bd9:	624d      	lsi	f4, a2, 8
400d0bdb:	0b5010        	lsi	f1, a0, 44
400d0bde:	3ffc      	bnez.n	a15, 400d0c15 <_flash_cache_start+0xbfd>
400d0be0:	1298      	l32i.n	a9, a2, 4
400d0be2:	3ffc      	bnez.n	a15, 400d0c19 <_flash_cache_start+0xc01>
400d0be4:	86bc      	beqz.n	a6, 400d0c20 <_flash_cache_start+0xc08>
400d0be6:	f03f40        	subx8	a3, a15, a4
400d0be9:	3f4086        	j	400e08ef <_vfiprintf_r+0xbdf>
400d0bec:	fc12a4        	lsi	f10, a2, 0x3f0
400d0bef:	3f          	.byte 0x3f
400d0bf0:	0ebf10        	lsi	f1, a15, 56
400d0bf3:	901840        	addx2	a1, a8, a4
400d0bf6:	bc3f40        	lsi	f4, a15, 0x2f0
400d0bf9:	3f4091        	l32r	a9, 400a08fc <_iram_end+0x12da8>
400d0bfc:	408f60        	lsi	f6, a15, 0x100
400d0bff:	3f          	.byte 0x3f
400d0c00:	409040        	lsi	f4, a0, 0x100
400d0c03:	3f          	.byte 0x3f
400d0c04:	f078      	l32i.n	a7, a0, 60
400d0c06:	3ffb      	addi.n	a3, a15, 15
400d0c08:	fbdb60        	f64subc	a6, a11, 2, 1
400d0c0b:	3f          	.byte 0x3f
400d0c0c:	91dc      	bnez.n	a1, 400d0c29 <Printable::~Printable()+0x1>
400d0c0e:	903f40        	addx2	a3, a15, a4
400d0c11:	3f4092        	s8i	a9, a0, 63
400d0c14:	920c      	movi.n	a2, 9
400d0c16:	003f40        	lsi	f4, a15, 0
400d0c19:	3ffc00        	f64cmph	a15, a12, a0, 3
400d0c1c:	fc0000        	lsi	f0, a0, 0x3f0
400d0c1f:	3f          	.byte 0x3f
400d0c20:	fbdbb4        	lsi	f11, a11, 0x3ec
400d0c23:	3f          	.byte 0x3f
400d0c24:	fbdbb4        	lsi	f11, a11, 0x3ec
400d0c27:	3f          	.byte 0x3f

400d0c28 <Printable::~Printable()>:
 */

class Printable
{
public:
    virtual ~Printable() {}
400d0c28:	006136        	entry	a1, 48
400d0c2b:	207110        	or	a7, a1, a1
400d0c2e:	0cc732        	addi	a3, a7, 12
400d0c31:	006322        	s32i	a2, a3, 0
400d0c34:	fcf931        	l32r	a3, 400d0018 <_flash_cache_start>
400d0c37:	27cb      	addi.n	a2, a7, 12
400d0c39:	0228      	l32i.n	a2, a2, 0
400d0c3b:	0239      	s32i.n	a3, a2, 0
400d0c3d:	020c      	movi.n	a2, 0
400d0c3f:	528c      	beqz.n	a2, 400d0c48 <Printable::~Printable()+0x20>
400d0c41:	27cb      	addi.n	a2, a7, 12
400d0c43:	02a8      	l32i.n	a10, a2, 0
400d0c45:	19fb65        	call8	400eabfc <operator delete(void*)>
400d0c48:	f01d      	retw.n
	...

400d0c4c <Printable::~Printable()>:
400d0c4c:	006136        	entry	a1, 48
400d0c4f:	207110        	or	a7, a1, a1
400d0c52:	0cc732        	addi	a3, a7, 12
400d0c55:	0329      	s32i.n	a2, a3, 0
400d0c57:	0cc722        	addi	a2, a7, 12
400d0c5a:	02a8      	l32i.n	a10, a2, 0
400d0c5c:	fffca5        	call8	400d0c28 <Printable::~Printable()>
400d0c5f:	27cb      	addi.n	a2, a7, 12
400d0c61:	02a8      	l32i.n	a10, a2, 0
400d0c63:	19f9a5        	call8	400eabfc <operator delete(void*)>
400d0c66:	f01d      	retw.n

400d0c68 <IPAddress::~IPAddress()>:
    // Constructors
    IPAddress();
    IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet);
    IPAddress(uint32_t address);
    IPAddress(const uint8_t *address);
    virtual ~IPAddress() {}
400d0c68:	006136        	entry	a1, 48
400d0c6b:	207110        	or	a7, a1, a1
400d0c6e:	0cc732        	addi	a3, a7, 12
400d0c71:	0329      	s32i.n	a2, a3, 0
400d0c73:	fcea31        	l32r	a3, 400d001c <_flash_cache_start+0x4>
400d0c76:	27cb      	addi.n	a2, a7, 12
400d0c78:	0228      	l32i.n	a2, a2, 0
400d0c7a:	0239      	s32i.n	a3, a2, 0
400d0c7c:	27cb      	addi.n	a2, a7, 12
400d0c7e:	0228      	l32i.n	a2, a2, 0
400d0c80:	02ad      	mov.n	a10, a2
400d0c82:	fffa65        	call8	400d0c28 <Printable::~Printable()>
400d0c85:	020c      	movi.n	a2, 0
400d0c87:	528c      	beqz.n	a2, 400d0c90 <IPAddress::~IPAddress()+0x28>
400d0c89:	27cb      	addi.n	a2, a7, 12
400d0c8b:	02a8      	l32i.n	a10, a2, 0
400d0c8d:	19f6e5        	call8	400eabfc <operator delete(void*)>
400d0c90:	f01d      	retw.n
	...

400d0c94 <IPAddress::~IPAddress()>:
400d0c94:	006136        	entry	a1, 48
400d0c97:	207110        	or	a7, a1, a1
400d0c9a:	0cc732        	addi	a3, a7, 12
400d0c9d:	0329      	s32i.n	a2, a3, 0
400d0c9f:	0cc722        	addi	a2, a7, 12
400d0ca2:	02a8      	l32i.n	a10, a2, 0
400d0ca4:	fffc25        	call8	400d0c68 <IPAddress::~IPAddress()>
400d0ca7:	27cb      	addi.n	a2, a7, 12
400d0ca9:	02a8      	l32i.n	a10, a2, 0
400d0cab:	19f525        	call8	400eabfc <operator delete(void*)>
400d0cae:	f01d      	retw.n

400d0cb0 <setup()>:

    return duration;
}

void setup()
{
400d0cb0:	006136        	entry	a1, 48
400d0cb3:	017d      	mov.n	a7, a1
    vTaskDelay(500);
400d0cb5:	f4a1a2        	movi	a10, 0x1f4
400d0cb8:	b83c25        	call8	4008907c <vTaskDelay>

    printf("\n\n");
400d0cbb:	fcd921        	l32r	a2, 400d0020 <_flash_cache_start+0x8>
400d0cbe:	02ad      	mov.n	a10, a2
400d0cc0:	0a75e5        	call8	400db420 <puts>

    auto base = testDiv<uint8_t>("uint8", 0);
400d0cc3:	fcd821        	l32r	a2, 400d0024 <_flash_cache_start+0xc>
400d0cc6:	0b0c      	movi.n	a11, 0
400d0cc8:	02ad      	mov.n	a10, a2
400d0cca:	000d25        	call8	400d0d9c <unsigned int testDiv<unsigned char>(char const*, unsigned int)>
400d0ccd:	0a3d      	mov.n	a3, a10
400d0ccf:	27cb      	addi.n	a2, a7, 12
400d0cd1:	0239      	s32i.n	a3, a2, 0
    testDiv<uint16_t>("uint16", base);
400d0cd3:	37cb      	addi.n	a3, a7, 12
400d0cd5:	fcd421        	l32r	a2, 400d0028 <_flash_cache_start+0x10>
400d0cd8:	03b8      	l32i.n	a11, a3, 0
400d0cda:	02ad      	mov.n	a10, a2
400d0cdc:	002725        	call8	400d0f50 <unsigned int testDiv<unsigned short>(char const*, unsigned int)>
    testDiv<uint32_t>("uint32", base);
400d0cdf:	37cb      	addi.n	a3, a7, 12
400d0ce1:	fcd221        	l32r	a2, 400d002c <_flash_cache_start+0x14>
400d0ce4:	03b8      	l32i.n	a11, a3, 0
400d0ce6:	02ad      	mov.n	a10, a2
400d0ce8:	0041a5        	call8	400d1104 <unsigned int testDiv<unsigned int>(char const*, unsigned int)>
    testDiv<uint64_t>("uint64", base);
400d0ceb:	37cb      	addi.n	a3, a7, 12
400d0ced:	fcd021        	l32r	a2, 400d0030 <_flash_cache_start+0x18>
400d0cf0:	03b8      	l32i.n	a11, a3, 0
400d0cf2:	02ad      	mov.n	a10, a2
400d0cf4:	005b65        	call8	400d12ac <unsigned int testDiv<unsigned long long>(char const*, unsigned int)>
    testDiv<float>("float", base);
400d0cf7:	37cb      	addi.n	a3, a7, 12
400d0cf9:	fcce21        	l32r	a2, 400d0034 <_flash_cache_start+0x1c>
400d0cfc:	03b8      	l32i.n	a11, a3, 0
400d0cfe:	02ad      	mov.n	a10, a2
400d0d00:	007725        	call8	400d1474 <unsigned int testDiv<float>(char const*, unsigned int)>
    testDiv<double>("double", base);
400d0d03:	37cb      	addi.n	a3, a7, 12
400d0d05:	fccc21        	l32r	a2, 400d0038 <_flash_cache_start+0x20>
400d0d08:	03b8      	l32i.n	a11, a3, 0
400d0d0a:	02ad      	mov.n	a10, a2
400d0d0c:	009225        	call8	400d1630 <unsigned int testDiv<double>(char const*, unsigned int)>

    printf("\n");
400d0d0f:	aa0c      	movi.n	a10, 10
400d0d11:	0a64e5        	call8	400db360 <putchar>

    base = testMult<uint8_t>("uint8", 0);
400d0d14:	fcc421        	l32r	a2, 400d0024 <_flash_cache_start+0xc>
400d0d17:	0b0c      	movi.n	a11, 0
400d0d19:	02ad      	mov.n	a10, a2
400d0d1b:	00aea5        	call8	400d1804 <unsigned int testMult<unsigned char>(char const*, unsigned int)>
400d0d1e:	0a3d      	mov.n	a3, a10
400d0d20:	27cb      	addi.n	a2, a7, 12
400d0d22:	0239      	s32i.n	a3, a2, 0
    testMult<uint16_t>("uint16", base);
400d0d24:	37cb      	addi.n	a3, a7, 12
400d0d26:	fcc021        	l32r	a2, 400d0028 <_flash_cache_start+0x10>
400d0d29:	03b8      	l32i.n	a11, a3, 0
400d0d2b:	02ad      	mov.n	a10, a2
400d0d2d:	00c8a5        	call8	400d19b8 <unsigned int testMult<unsigned short>(char const*, unsigned int)>
    testMult<uint32_t>("uint32", base);
400d0d30:	37cb      	addi.n	a3, a7, 12
400d0d32:	fcbe21        	l32r	a2, 400d002c <_flash_cache_start+0x14>
400d0d35:	03b8      	l32i.n	a11, a3, 0
400d0d37:	02ad      	mov.n	a10, a2
400d0d39:	00e325        	call8	400d1b6c <unsigned int testMult<unsigned int>(char const*, unsigned int)>
    testMult<uint64_t>("uint64", base);
400d0d3c:	37cb      	addi.n	a3, a7, 12
400d0d3e:	fcbc21        	l32r	a2, 400d0030 <_flash_cache_start+0x18>
400d0d41:	03b8      	l32i.n	a11, a3, 0
400d0d43:	02ad      	mov.n	a10, a2
400d0d45:	00fce5        	call8	400d1d14 <unsigned int testMult<unsigned long long>(char const*, unsigned int)>
    testMult<float>("float", base);
400d0d48:	37cb      	addi.n	a3, a7, 12
400d0d4a:	fcba21        	l32r	a2, 400d0034 <_flash_cache_start+0x1c>
400d0d4d:	03b8      	l32i.n	a11, a3, 0
400d0d4f:	02ad      	mov.n	a10, a2
400d0d51:	011925        	call8	400d1ee4 <unsigned int testMult<float>(char const*, unsigned int)>
    testMult<double>("double", base);
400d0d54:	37cb      	addi.n	a3, a7, 12
400d0d56:	fcb821        	l32r	a2, 400d0038 <_flash_cache_start+0x20>
400d0d59:	03b8      	l32i.n	a11, a3, 0
400d0d5b:	02ad      	mov.n	a10, a2
400d0d5d:	0133a5        	call8	400d2098 <unsigned int testMult<double>(char const*, unsigned int)>
}
400d0d60:	f03d      	nop.n
400d0d62:	f01d      	retw.n

400d0d64 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
400d0d64:	006136        	entry	a1, 48
400d0d67:	207110        	or	a7, a1, a1
400d0d6a:	37cb      	addi.n	a3, a7, 12
400d0d6c:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d0d6e:	27cb      	addi.n	a2, a7, 12
400d0d70:	0228      	l32i.n	a2, a2, 0
400d0d72:	0228      	l32i.n	a2, a2, 0
400d0d74:	37cb      	addi.n	a3, a7, 12
400d0d76:	0338      	l32i.n	a3, a3, 0
400d0d78:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d0d7a:	47cb      	addi.n	a4, a7, 12
400d0d7c:	0448      	l32i.n	a4, a4, 0
400d0d7e:	20a440        	or	a10, a4, a4
400d0d81:	1b36e5        	call8	400ec0f0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>
400d0d84:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d0d86:	04cd      	mov.n	a12, a4
400d0d88:	03bd      	mov.n	a11, a3
400d0d8a:	02ad      	mov.n	a10, a2
400d0d8c:	015365        	call8	400d22c4 <void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)>
		      _M_get_Tp_allocator()); }
400d0d8f:	27cb      	addi.n	a2, a7, 12
400d0d91:	0228      	l32i.n	a2, a2, 0
400d0d93:	02ad      	mov.n	a10, a2
400d0d95:	014ee5        	call8	400d2284 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>
400d0d98:	f03d      	nop.n
400d0d9a:	f01d      	retw.n

400d0d9c <unsigned int testDiv<unsigned char>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d0d9c:	00c136        	entry	a1, 96
400d0d9f:	017d      	mov.n	a7, a1
400d0da1:	47cb      	addi.n	a4, a7, 12
400d0da3:	0429      	s32i.n	a2, a4, 0
400d0da5:	278b      	addi.n	a2, a7, 8
400d0da7:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d0da9:	28c722        	addi	a2, a7, 40
400d0dac:	fca431        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0daf:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d0db1:	1ac722        	addi	a2, a7, 26
400d0db4:	02ad      	mov.n	a10, a2
400d0db6:	201110        	or	a1, a1, a1
400d0db9:	0152a5        	call8	400d22e4 <std::allocator<unsigned char>::allocator()>
400d0dbc:	1ac742        	addi	a4, a7, 26
400d0dbf:	fc9f31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0dc2:	34c722        	addi	a2, a7, 52
400d0dc5:	04cd      	mov.n	a12, a4
400d0dc7:	03bd      	mov.n	a11, a3
400d0dc9:	02ad      	mov.n	a10, a2
400d0dcb:	201110        	or	a1, a1, a1
400d0dce:	0153e5        	call8	400d230c <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>
400d0dd1:	1ac722        	addi	a2, a7, 26
400d0dd4:	02ad      	mov.n	a10, a2
400d0dd6:	201110        	or	a1, a1, a1
400d0dd9:	0151e5        	call8	400d22f8 <std::allocator<unsigned char>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d0ddc:	1cc722        	addi	a2, a7, 28
400d0ddf:	030c      	movi.n	a3, 0
400d0de1:	0239      	s32i.n	a3, a2, 0
400d0de3:	1cc722        	addi	a2, a7, 28
400d0de6:	0228      	l32i.n	a2, a2, 0
400d0de8:	fc9631        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d0deb:	2e3327        	bltu	a3, a2, 400d0e1d <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d0dee:	1cc732        	addi	a3, a7, 28
400d0df1:	34c722        	addi	a2, a7, 52
400d0df4:	03b8      	l32i.n	a11, a3, 0
400d0df6:	02ad      	mov.n	a10, a2
400d0df8:	201110        	or	a1, a1, a1
400d0dfb:	1b3065        	call8	400ec100 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d0dfe:	0a2d      	mov.n	a2, a10
400d0e00:	201110        	or	a1, a1, a1
400d0e03:	b002a5        	call8	40080e2c <esp_random>
400d0e06:	0a3d      	mov.n	a3, a10
400d0e08:	743030        	extui	a3, a3, 0, 8
400d0e0b:	004232        	s8i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d0e0e:	1cc722        	addi	a2, a7, 28
400d0e11:	1cc732        	addi	a3, a7, 28
400d0e14:	0338      	l32i.n	a3, a3, 0
400d0e16:	331b      	addi.n	a3, a3, 1
400d0e18:	0239      	s32i.n	a3, a2, 0
400d0e1a:	fff146        	j	400d0de3 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d0e1d:	201110        	or	a1, a1, a1
400d0e20:	b000a5        	call8	40080e2c <esp_random>
400d0e23:	203aa0        	or	a3, a10, a10
400d0e26:	1bc722        	addi	a2, a7, 27
400d0e29:	004232        	s8i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d0e2c:	201110        	or	a1, a1, a1
400d0e2f:	b780e5        	call8	4008863c <xTaskGetTickCount>
400d0e32:	0a3d      	mov.n	a3, a10
400d0e34:	2cc722        	addi	a2, a7, 44
400d0e37:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d0e39:	20c722        	addi	a2, a7, 32
400d0e3c:	030c      	movi.n	a3, 0
400d0e3e:	0239      	s32i.n	a3, a2, 0
400d0e40:	20c722        	addi	a2, a7, 32
400d0e43:	0228      	l32i.n	a2, a2, 0
400d0e45:	133c      	movi.n	a3, 49
400d0e47:	552327        	blt	a3, a2, 400d0ea0 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x104>
        for (size_t i = 0; i < size; ++i)
400d0e4a:	24c722        	addi	a2, a7, 36
400d0e4d:	030c      	movi.n	a3, 0
400d0e4f:	0239      	s32i.n	a3, a2, 0
400d0e51:	24c722        	addi	a2, a7, 36
400d0e54:	0228      	l32i.n	a2, a2, 0
400d0e56:	fc7a31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d0e59:	333327        	bltu	a3, a2, 400d0e90 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0xf4>
            data[i] /= div;
400d0e5c:	24c732        	addi	a3, a7, 36
400d0e5f:	34c722        	addi	a2, a7, 52
400d0e62:	03b8      	l32i.n	a11, a3, 0
400d0e64:	02ad      	mov.n	a10, a2
400d0e66:	201110        	or	a1, a1, a1
400d0e69:	1b2965        	call8	400ec100 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d0e6c:	0a2d      	mov.n	a2, a10
400d0e6e:	000242        	l8ui	a4, a2, 0
400d0e71:	1bc732        	addi	a3, a7, 27
400d0e74:	000332        	l8ui	a3, a3, 0
400d0e77:	c23430        	quou	a3, a4, a3
400d0e7a:	743030        	extui	a3, a3, 0, 8
400d0e7d:	004232        	s8i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d0e80:	24c722        	addi	a2, a7, 36
400d0e83:	24c732        	addi	a3, a7, 36
400d0e86:	0338      	l32i.n	a3, a3, 0
400d0e88:	331b      	addi.n	a3, a3, 1
400d0e8a:	0239      	s32i.n	a3, a2, 0
400d0e8c:	fff046        	j	400d0e51 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0xb5>
400d0e8f:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d0e92:	c73220        	lsi	f2, a2, 0x31c
400d0e95:	033820        	lsi	f2, a8, 12
400d0e98:	331b      	addi.n	a3, a3, 1
400d0e9a:	0239      	s32i.n	a3, a2, 0
400d0e9c:	ffe806        	j	400d0e40 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0xa4>
400d0e9f:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d0ea2:	79a520        	lsi	f2, a5, 0x1e4
400d0ea5:	0a4db7        	ball	a13, a11, 400d0eb3 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x117>
400d0ea8:	30c722        	addi	a2, a7, 48
400d0eab:	2cc732        	addi	a3, a7, 44
400d0eae:	0338      	l32i.n	a3, a3, 0
400d0eb0:	c03430        	sub	a3, a4, a3
400d0eb3:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d0eb5:	278b      	addi.n	a2, a7, 8
400d0eb7:	0228      	l32i.n	a2, a2, 0
400d0eb9:	82cc      	bnez.n	a2, 400d0ec5 <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x129>
        base = duration;
400d0ebb:	278b      	addi.n	a2, a7, 8
400d0ebd:	30c732        	addi	a3, a7, 48
400d0ec0:	0338      	l32i.n	a3, a3, 0
400d0ec2:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d0ec5:	30c722        	addi	a2, a7, 48
400d0ec8:	0228      	l32i.n	a2, a2, 0
400d0eca:	da0200        	ufloat.s	f0, a2, 0
400d0ecd:	278b      	addi.n	a2, a7, 8
400d0ecf:	0228      	l32i.n	a2, a2, 0
400d0ed1:	da1200        	ufloat.s	f1, a2, 0
400d0ed4:	fab140        	rfr	a11, f1
400d0ed7:	faa040        	rfr	a10, f0
400d0eda:	fc5b81        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d0edd:	0008e0        	callx8	a8
400d0ee0:	fa0a50        	wfr	f0, a10
400d0ee3:	faa040        	rfr	a10, f0
400d0ee6:	fc5981        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d0ee9:	0008e0        	callx8	a8
400d0eec:	0a2d      	mov.n	a2, a10
400d0eee:	0b3d      	mov.n	a3, a11
400d0ef0:	30c762        	addi	a6, a7, 48
400d0ef3:	57cb      	addi.n	a5, a7, 12
400d0ef5:	fc5341        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d0ef8:	02ed      	mov.n	a14, a2
400d0efa:	03fd      	mov.n	a15, a3
400d0efc:	06d8      	l32i.n	a13, a6, 0
400d0efe:	1c0c      	movi.n	a12, 1
400d0f00:	05b8      	l32i.n	a11, a5, 0
400d0f02:	04ad      	mov.n	a10, a4
400d0f04:	201110        	or	a1, a1, a1
400d0f07:	0b28a5        	call8	400dc190 <printf>
    vTaskDelay(10);
400d0f0a:	aa0c      	movi.n	a10, 10
400d0f0c:	201110        	or	a1, a1, a1
400d0f0f:	b816e5        	call8	4008907c <vTaskDelay>
    return duration;
400d0f12:	30c722        	addi	a2, a7, 48
400d0f15:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d0f18:	34c732        	addi	a3, a7, 52
400d0f1b:	20a330        	or	a10, a3, a3
400d0f1e:	201110        	or	a1, a1, a1
400d0f21:	0143a5        	call8	400d235c <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
    return duration;
400d0f24:	000946        	j	400d0f4d <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x1b1>
400d0f27:	1ac732        	addi	a3, a7, 26
400d0f2a:	03ad      	mov.n	a10, a3
400d0f2c:	201110        	or	a1, a1, a1
400d0f2f:	013ca5        	call8	400d22f8 <std::allocator<unsigned char>::~allocator()>
400d0f32:	02ad      	mov.n	a10, a2
400d0f34:	201110        	or	a1, a1, a1
400d0f37:	03d8a5        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d0f3a:	34c732        	addi	a3, a7, 52
400d0f3d:	03ad      	mov.n	a10, a3
400d0f3f:	201110        	or	a1, a1, a1
400d0f42:	0141a5        	call8	400d235c <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
400d0f45:	02ad      	mov.n	a10, a2
400d0f47:	201110        	or	a1, a1, a1
400d0f4a:	03d765        	call8	400d4cc0 <_Unwind_Resume>
}
400d0f4d:	f01d      	retw.n
	...

400d0f50 <unsigned int testDiv<unsigned short>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d0f50:	00c136        	entry	a1, 96
400d0f53:	017d      	mov.n	a7, a1
400d0f55:	47cb      	addi.n	a4, a7, 12
400d0f57:	0429      	s32i.n	a2, a4, 0
400d0f59:	278b      	addi.n	a2, a7, 8
400d0f5b:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d0f5d:	28c722        	addi	a2, a7, 40
400d0f60:	fc3731        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0f63:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d0f65:	19c722        	addi	a2, a7, 25
400d0f68:	02ad      	mov.n	a10, a2
400d0f6a:	201110        	or	a1, a1, a1
400d0f6d:	014265        	call8	400d2394 <std::allocator<unsigned short>::allocator()>
400d0f70:	19c742        	addi	a4, a7, 25
400d0f73:	fc3231        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d0f76:	34c722        	addi	a2, a7, 52
400d0f79:	04cd      	mov.n	a12, a4
400d0f7b:	03bd      	mov.n	a11, a3
400d0f7d:	02ad      	mov.n	a10, a2
400d0f7f:	201110        	or	a1, a1, a1
400d0f82:	0143a5        	call8	400d23bc <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>
400d0f85:	19c722        	addi	a2, a7, 25
400d0f88:	02ad      	mov.n	a10, a2
400d0f8a:	201110        	or	a1, a1, a1
400d0f8d:	0141a5        	call8	400d23a8 <std::allocator<unsigned short>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d0f90:	1cc722        	addi	a2, a7, 28
400d0f93:	030c      	movi.n	a3, 0
400d0f95:	0239      	s32i.n	a3, a2, 0
400d0f97:	1cc722        	addi	a2, a7, 28
400d0f9a:	0228      	l32i.n	a2, a2, 0
400d0f9c:	fc2931        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d0f9f:	2e3327        	bltu	a3, a2, 400d0fd1 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d0fa2:	1cc732        	addi	a3, a7, 28
400d0fa5:	34c722        	addi	a2, a7, 52
400d0fa8:	03b8      	l32i.n	a11, a3, 0
400d0faa:	02ad      	mov.n	a10, a2
400d0fac:	201110        	or	a1, a1, a1
400d0faf:	1b16e5        	call8	400ec11c <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d0fb2:	0a2d      	mov.n	a2, a10
400d0fb4:	201110        	or	a1, a1, a1
400d0fb7:	afe765        	call8	40080e2c <esp_random>
400d0fba:	0a3d      	mov.n	a3, a10
400d0fbc:	f43030        	extui	a3, a3, 0, 16
400d0fbf:	005232        	s16i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d0fc2:	1cc722        	addi	a2, a7, 28
400d0fc5:	1cc732        	addi	a3, a7, 28
400d0fc8:	0338      	l32i.n	a3, a3, 0
400d0fca:	331b      	addi.n	a3, a3, 1
400d0fcc:	0239      	s32i.n	a3, a2, 0
400d0fce:	fff146        	j	400d0f97 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d0fd1:	201110        	or	a1, a1, a1
400d0fd4:	afe565        	call8	40080e2c <esp_random>
400d0fd7:	203aa0        	or	a3, a10, a10
400d0fda:	1ac722        	addi	a2, a7, 26
400d0fdd:	005232        	s16i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d0fe0:	201110        	or	a1, a1, a1
400d0fe3:	b765a5        	call8	4008863c <xTaskGetTickCount>
400d0fe6:	0a3d      	mov.n	a3, a10
400d0fe8:	2cc722        	addi	a2, a7, 44
400d0feb:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d0fed:	20c722        	addi	a2, a7, 32
400d0ff0:	030c      	movi.n	a3, 0
400d0ff2:	0239      	s32i.n	a3, a2, 0
400d0ff4:	20c722        	addi	a2, a7, 32
400d0ff7:	0228      	l32i.n	a2, a2, 0
400d0ff9:	133c      	movi.n	a3, 49
400d0ffb:	552327        	blt	a3, a2, 400d1054 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x104>
        for (size_t i = 0; i < size; ++i)
400d0ffe:	24c722        	addi	a2, a7, 36
400d1001:	030c      	movi.n	a3, 0
400d1003:	0239      	s32i.n	a3, a2, 0
400d1005:	24c722        	addi	a2, a7, 36
400d1008:	0228      	l32i.n	a2, a2, 0
400d100a:	fc0d31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d100d:	333327        	bltu	a3, a2, 400d1044 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0xf4>
            data[i] /= div;
400d1010:	24c732        	addi	a3, a7, 36
400d1013:	34c722        	addi	a2, a7, 52
400d1016:	03b8      	l32i.n	a11, a3, 0
400d1018:	02ad      	mov.n	a10, a2
400d101a:	201110        	or	a1, a1, a1
400d101d:	1b0fe5        	call8	400ec11c <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d1020:	0a2d      	mov.n	a2, a10
400d1022:	001242        	l16ui	a4, a2, 0
400d1025:	1ac732        	addi	a3, a7, 26
400d1028:	001332        	l16ui	a3, a3, 0
400d102b:	c23430        	quou	a3, a4, a3
400d102e:	f43030        	extui	a3, a3, 0, 16
400d1031:	005232        	s16i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1034:	24c722        	addi	a2, a7, 36
400d1037:	24c732        	addi	a3, a7, 36
400d103a:	0338      	l32i.n	a3, a3, 0
400d103c:	331b      	addi.n	a3, a3, 1
400d103e:	0239      	s32i.n	a3, a2, 0
400d1040:	fff046        	j	400d1005 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0xb5>
400d1043:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d1046:	c73220        	lsi	f2, a2, 0x31c
400d1049:	033820        	lsi	f2, a8, 12
400d104c:	331b      	addi.n	a3, a3, 1
400d104e:	0239      	s32i.n	a3, a2, 0
400d1050:	ffe806        	j	400d0ff4 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0xa4>
400d1053:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d1056:	5e6520        	f64rnd	a6, a5, a2, 1
400d1059:	0a4db7        	ball	a13, a11, 400d1067 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x117>
400d105c:	30c722        	addi	a2, a7, 48
400d105f:	2cc732        	addi	a3, a7, 44
400d1062:	0338      	l32i.n	a3, a3, 0
400d1064:	c03430        	sub	a3, a4, a3
400d1067:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1069:	278b      	addi.n	a2, a7, 8
400d106b:	0228      	l32i.n	a2, a2, 0
400d106d:	82cc      	bnez.n	a2, 400d1079 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x129>
        base = duration;
400d106f:	278b      	addi.n	a2, a7, 8
400d1071:	30c732        	addi	a3, a7, 48
400d1074:	0338      	l32i.n	a3, a3, 0
400d1076:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1079:	30c722        	addi	a2, a7, 48
400d107c:	0228      	l32i.n	a2, a2, 0
400d107e:	da0200        	ufloat.s	f0, a2, 0
400d1081:	278b      	addi.n	a2, a7, 8
400d1083:	0228      	l32i.n	a2, a2, 0
400d1085:	da1200        	ufloat.s	f1, a2, 0
400d1088:	fab140        	rfr	a11, f1
400d108b:	faa040        	rfr	a10, f0
400d108e:	fbee81        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1091:	0008e0        	callx8	a8
400d1094:	fa0a50        	wfr	f0, a10
400d1097:	faa040        	rfr	a10, f0
400d109a:	fbec81        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d109d:	0008e0        	callx8	a8
400d10a0:	0a2d      	mov.n	a2, a10
400d10a2:	0b3d      	mov.n	a3, a11
400d10a4:	30c762        	addi	a6, a7, 48
400d10a7:	57cb      	addi.n	a5, a7, 12
400d10a9:	fbe641        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d10ac:	02ed      	mov.n	a14, a2
400d10ae:	03fd      	mov.n	a15, a3
400d10b0:	06d8      	l32i.n	a13, a6, 0
400d10b2:	2c0c      	movi.n	a12, 2
400d10b4:	05b8      	l32i.n	a11, a5, 0
400d10b6:	04ad      	mov.n	a10, a4
400d10b8:	201110        	or	a1, a1, a1
400d10bb:	0b0d65        	call8	400dc190 <printf>
    vTaskDelay(10);
400d10be:	aa0c      	movi.n	a10, 10
400d10c0:	201110        	or	a1, a1, a1
400d10c3:	b7fba5        	call8	4008907c <vTaskDelay>
    return duration;
400d10c6:	30c722        	addi	a2, a7, 48
400d10c9:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d10cc:	34c732        	addi	a3, a7, 52
400d10cf:	20a330        	or	a10, a3, a3
400d10d2:	201110        	or	a1, a1, a1
400d10d5:	013365        	call8	400d240c <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
    return duration;
400d10d8:	000946        	j	400d1101 <unsigned int testDiv<unsigned short>(char const*, unsigned int)+0x1b1>
400d10db:	19c732        	addi	a3, a7, 25
400d10de:	03ad      	mov.n	a10, a3
400d10e0:	201110        	or	a1, a1, a1
400d10e3:	012c65        	call8	400d23a8 <std::allocator<unsigned short>::~allocator()>
400d10e6:	02ad      	mov.n	a10, a2
400d10e8:	201110        	or	a1, a1, a1
400d10eb:	03bd65        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d10ee:	34c732        	addi	a3, a7, 52
400d10f1:	03ad      	mov.n	a10, a3
400d10f3:	201110        	or	a1, a1, a1
400d10f6:	013165        	call8	400d240c <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
400d10f9:	02ad      	mov.n	a10, a2
400d10fb:	201110        	or	a1, a1, a1
400d10fe:	03bc25        	call8	400d4cc0 <_Unwind_Resume>
}
400d1101:	f01d      	retw.n
	...

400d1104 <unsigned int testDiv<unsigned int>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d1104:	00c136        	entry	a1, 96
400d1107:	017d      	mov.n	a7, a1
400d1109:	47cb      	addi.n	a4, a7, 12
400d110b:	0429      	s32i.n	a2, a4, 0
400d110d:	278b      	addi.n	a2, a7, 8
400d110f:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1111:	24c722        	addi	a2, a7, 36
400d1114:	fbca31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1117:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1119:	17c722        	addi	a2, a7, 23
400d111c:	02ad      	mov.n	a10, a2
400d111e:	201110        	or	a1, a1, a1
400d1121:	013225        	call8	400d2444 <std::allocator<unsigned int>::allocator()>
400d1124:	17c742        	addi	a4, a7, 23
400d1127:	fbc531        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d112a:	34c722        	addi	a2, a7, 52
400d112d:	04cd      	mov.n	a12, a4
400d112f:	03bd      	mov.n	a11, a3
400d1131:	02ad      	mov.n	a10, a2
400d1133:	201110        	or	a1, a1, a1
400d1136:	013365        	call8	400d246c <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>
400d1139:	17c722        	addi	a2, a7, 23
400d113c:	02ad      	mov.n	a10, a2
400d113e:	201110        	or	a1, a1, a1
400d1141:	013165        	call8	400d2458 <std::allocator<unsigned int>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1144:	18c722        	addi	a2, a7, 24
400d1147:	030c      	movi.n	a3, 0
400d1149:	0239      	s32i.n	a3, a2, 0
400d114b:	18c722        	addi	a2, a7, 24
400d114e:	0228      	l32i.n	a2, a2, 0
400d1150:	fbbc31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1153:	2a3327        	bltu	a3, a2, 400d1181 <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x7d>
        data[i] = esp_random();
400d1156:	18c732        	addi	a3, a7, 24
400d1159:	34c722        	addi	a2, a7, 52
400d115c:	03b8      	l32i.n	a11, a3, 0
400d115e:	02ad      	mov.n	a10, a2
400d1160:	201110        	or	a1, a1, a1
400d1163:	1afda5        	call8	400ec13c <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d1166:	0a2d      	mov.n	a2, a10
400d1168:	201110        	or	a1, a1, a1
400d116b:	afcc25        	call8	40080e2c <esp_random>
400d116e:	0a3d      	mov.n	a3, a10
400d1170:	0239      	s32i.n	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1172:	18c722        	addi	a2, a7, 24
400d1175:	18c732        	addi	a3, a7, 24
400d1178:	0338      	l32i.n	a3, a3, 0
400d117a:	331b      	addi.n	a3, a3, 1
400d117c:	0239      	s32i.n	a3, a2, 0
400d117e:	fff246        	j	400d114b <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1181:	201110        	or	a1, a1, a1
400d1184:	afca65        	call8	40080e2c <esp_random>
400d1187:	0a3d      	mov.n	a3, a10
400d1189:	28c722        	addi	a2, a7, 40
400d118c:	0239      	s32i.n	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d118e:	201110        	or	a1, a1, a1
400d1191:	b74aa5        	call8	4008863c <xTaskGetTickCount>
400d1194:	0a3d      	mov.n	a3, a10
400d1196:	2cc722        	addi	a2, a7, 44
400d1199:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d119b:	1cc722        	addi	a2, a7, 28
400d119e:	030c      	movi.n	a3, 0
400d11a0:	0239      	s32i.n	a3, a2, 0
400d11a2:	1cc722        	addi	a2, a7, 28
400d11a5:	0228      	l32i.n	a2, a2, 0
400d11a7:	133c      	movi.n	a3, 49
400d11a9:	4f2327        	blt	a3, a2, 400d11fc <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0xf8>
        for (size_t i = 0; i < size; ++i)
400d11ac:	20c722        	addi	a2, a7, 32
400d11af:	030c      	movi.n	a3, 0
400d11b1:	0239      	s32i.n	a3, a2, 0
400d11b3:	20c722        	addi	a2, a7, 32
400d11b6:	0228      	l32i.n	a2, a2, 0
400d11b8:	fba231        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d11bb:	2d3327        	bltu	a3, a2, 400d11ec <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0xe8>
            data[i] /= div;
400d11be:	20c732        	addi	a3, a7, 32
400d11c1:	34c722        	addi	a2, a7, 52
400d11c4:	03b8      	l32i.n	a11, a3, 0
400d11c6:	02ad      	mov.n	a10, a2
400d11c8:	201110        	or	a1, a1, a1
400d11cb:	1af725        	call8	400ec13c <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d11ce:	0a2d      	mov.n	a2, a10
400d11d0:	0248      	l32i.n	a4, a2, 0
400d11d2:	28c732        	addi	a3, a7, 40
400d11d5:	0338      	l32i.n	a3, a3, 0
400d11d7:	c23430        	quou	a3, a4, a3
400d11da:	0239      	s32i.n	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d11dc:	20c722        	addi	a2, a7, 32
400d11df:	20c732        	addi	a3, a7, 32
400d11e2:	0338      	l32i.n	a3, a3, 0
400d11e4:	331b      	addi.n	a3, a3, 1
400d11e6:	0239      	s32i.n	a3, a2, 0
400d11e8:	fff1c6        	j	400d11b3 <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0xaf>
400d11eb:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d11ee:	321c      	movi.n	a2, 19
400d11f0:	381cc7        	beq	a12, a12, 400d122c <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x128>
400d11f3:	331b03        	lsi	f0, a11, 204
400d11f6:	0239      	s32i.n	a3, a2, 0
400d11f8:	ffe986        	j	400d11a2 <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x9e>
400d11fb:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d11fe:	43e520        	min	a14, a5, a2
400d1201:	0a4db7        	ball	a13, a11, 400d120f <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x10b>
400d1204:	30c722        	addi	a2, a7, 48
400d1207:	2cc732        	addi	a3, a7, 44
400d120a:	0338      	l32i.n	a3, a3, 0
400d120c:	c03430        	sub	a3, a4, a3
400d120f:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1211:	278b      	addi.n	a2, a7, 8
400d1213:	0228      	l32i.n	a2, a2, 0
400d1215:	82cc      	bnez.n	a2, 400d1221 <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x11d>
        base = duration;
400d1217:	278b      	addi.n	a2, a7, 8
400d1219:	30c732        	addi	a3, a7, 48
400d121c:	0338      	l32i.n	a3, a3, 0
400d121e:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1221:	30c722        	addi	a2, a7, 48
400d1224:	0228      	l32i.n	a2, a2, 0
400d1226:	da0200        	ufloat.s	f0, a2, 0
400d1229:	278b      	addi.n	a2, a7, 8
400d122b:	0228      	l32i.n	a2, a2, 0
400d122d:	da1200        	ufloat.s	f1, a2, 0
400d1230:	fab140        	rfr	a11, f1
400d1233:	faa040        	rfr	a10, f0
400d1236:	fb8481        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1239:	0008e0        	callx8	a8
400d123c:	fa0a50        	wfr	f0, a10
400d123f:	faa040        	rfr	a10, f0
400d1242:	fb8281        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1245:	0008e0        	callx8	a8
400d1248:	0a2d      	mov.n	a2, a10
400d124a:	0b3d      	mov.n	a3, a11
400d124c:	30c762        	addi	a6, a7, 48
400d124f:	57cb      	addi.n	a5, a7, 12
400d1251:	fb7c41        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d1254:	02ed      	mov.n	a14, a2
400d1256:	03fd      	mov.n	a15, a3
400d1258:	06d8      	l32i.n	a13, a6, 0
400d125a:	4c0c      	movi.n	a12, 4
400d125c:	05b8      	l32i.n	a11, a5, 0
400d125e:	04ad      	mov.n	a10, a4
400d1260:	201110        	or	a1, a1, a1
400d1263:	0af2e5        	call8	400dc190 <printf>
    vTaskDelay(10);
400d1266:	aa0c      	movi.n	a10, 10
400d1268:	201110        	or	a1, a1, a1
400d126b:	b7e125        	call8	4008907c <vTaskDelay>
    return duration;
400d126e:	30c722        	addi	a2, a7, 48
400d1271:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d1274:	34c732        	addi	a3, a7, 52
400d1277:	20a330        	or	a10, a3, a3
400d127a:	201110        	or	a1, a1, a1
400d127d:	ffae65        	call8	400d0d64 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
    return duration;
400d1280:	000946        	j	400d12a9 <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x1a5>
400d1283:	17c732        	addi	a3, a7, 23
400d1286:	03ad      	mov.n	a10, a3
400d1288:	201110        	or	a1, a1, a1
400d128b:	011ce5        	call8	400d2458 <std::allocator<unsigned int>::~allocator()>
400d128e:	02ad      	mov.n	a10, a2
400d1290:	201110        	or	a1, a1, a1
400d1293:	03a2e5        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d1296:	34c732        	addi	a3, a7, 52
400d1299:	03ad      	mov.n	a10, a3
400d129b:	201110        	or	a1, a1, a1
400d129e:	ffac65        	call8	400d0d64 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
400d12a1:	02ad      	mov.n	a10, a2
400d12a3:	201110        	or	a1, a1, a1
400d12a6:	03a1a5        	call8	400d4cc0 <_Unwind_Resume>
}
400d12a9:	f01d      	retw.n
	...

400d12ac <unsigned int testDiv<unsigned long long>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d12ac:	00e136        	entry	a1, 112
400d12af:	017d      	mov.n	a7, a1
400d12b1:	67cb      	addi.n	a6, a7, 12
400d12b3:	0629      	s32i.n	a2, a6, 0
400d12b5:	278b      	addi.n	a2, a7, 8
400d12b7:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d12b9:	2cc722        	addi	a2, a7, 44
400d12bc:	fb6031        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d12bf:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d12c1:	1fc722        	addi	a2, a7, 31
400d12c4:	02ad      	mov.n	a10, a2
400d12c6:	201110        	or	a1, a1, a1
400d12c9:	011f25        	call8	400d24bc <std::allocator<unsigned long long>::allocator()>
400d12cc:	1fc762        	addi	a6, a7, 31
400d12cf:	fb5b31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d12d2:	44c722        	addi	a2, a7, 68
400d12d5:	06cd      	mov.n	a12, a6
400d12d7:	03bd      	mov.n	a11, a3
400d12d9:	02ad      	mov.n	a10, a2
400d12db:	201110        	or	a1, a1, a1
400d12de:	012065        	call8	400d24e4 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>
400d12e1:	1fc722        	addi	a2, a7, 31
400d12e4:	02ad      	mov.n	a10, a2
400d12e6:	201110        	or	a1, a1, a1
400d12e9:	011e65        	call8	400d24d0 <std::allocator<unsigned long long>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d12ec:	20c722        	addi	a2, a7, 32
400d12ef:	030c      	movi.n	a3, 0
400d12f1:	0239      	s32i.n	a3, a2, 0
400d12f3:	20c722        	addi	a2, a7, 32
400d12f6:	0228      	l32i.n	a2, a2, 0
400d12f8:	fb5231        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d12fb:	313327        	bltu	a3, a2, 400d1330 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x84>
        data[i] = esp_random();
400d12fe:	20c732        	addi	a3, a7, 32
400d1301:	44c722        	addi	a2, a7, 68
400d1304:	03b8      	l32i.n	a11, a3, 0
400d1306:	02ad      	mov.n	a10, a2
400d1308:	201110        	or	a1, a1, a1
400d130b:	1ae525        	call8	400ec15c <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d130e:	0a2d      	mov.n	a2, a10
400d1310:	201110        	or	a1, a1, a1
400d1313:	afb1a5        	call8	40080e2c <esp_random>
400d1316:	0a3d      	mov.n	a3, a10
400d1318:	034d      	mov.n	a4, a3
400d131a:	050c      	movi.n	a5, 0
400d131c:	0249      	s32i.n	a4, a2, 0
400d131e:	1259      	s32i.n	a5, a2, 4
    for (size_t i = 0; i < size; ++i)
400d1320:	20c722        	addi	a2, a7, 32
400d1323:	20c732        	addi	a3, a7, 32
400d1326:	0338      	l32i.n	a3, a3, 0
400d1328:	331b      	addi.n	a3, a3, 1
400d132a:	0239      	s32i.n	a3, a2, 0
400d132c:	fff0c6        	j	400d12f3 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x47>
400d132f:	111000        	slli	a1, a0, 16
    const T div = esp_random();
400d1332:	afa520        	f64cmph	a10, a5, a2, 10
400d1335:	af          	.byte 0xaf
400d1336:	0a3d      	mov.n	a3, a10
400d1338:	38c722        	addi	a2, a7, 56
400d133b:	006232        	s32i	a3, a2, 0
400d133e:	00a032        	movi	a3, 0
400d1341:	016232        	s32i	a3, a2, 4
    const auto start = xTaskGetTickCount();
400d1344:	201110        	or	a1, a1, a1
400d1347:	b72f65        	call8	4008863c <xTaskGetTickCount>
400d134a:	0a3d      	mov.n	a3, a10
400d134c:	30c722        	addi	a2, a7, 48
400d134f:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1351:	24c722        	addi	a2, a7, 36
400d1354:	030c      	movi.n	a3, 0
400d1356:	0239      	s32i.n	a3, a2, 0
400d1358:	24c722        	addi	a2, a7, 36
400d135b:	0228      	l32i.n	a2, a2, 0
400d135d:	133c      	movi.n	a3, 49
400d135f:	612327        	blt	a3, a2, 400d13c4 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x118>
        for (size_t i = 0; i < size; ++i)
400d1362:	28c722        	addi	a2, a7, 40
400d1365:	030c      	movi.n	a3, 0
400d1367:	0239      	s32i.n	a3, a2, 0
400d1369:	28c722        	addi	a2, a7, 40
400d136c:	0228      	l32i.n	a2, a2, 0
400d136e:	fb3431        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1371:	3f3327        	bltu	a3, a2, 400d13b4 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x108>
            data[i] /= div;
400d1374:	28c732        	addi	a3, a7, 40
400d1377:	44c722        	addi	a2, a7, 68
400d137a:	03b8      	l32i.n	a11, a3, 0
400d137c:	20a220        	or	a10, a2, a2
400d137f:	201110        	or	a1, a1, a1
400d1382:	1adda5        	call8	400ec15c <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1385:	0a4d      	mov.n	a4, a10
400d1387:	0428      	l32i.n	a2, a4, 0
400d1389:	1438      	l32i.n	a3, a4, 4
400d138b:	38c752        	addi	a5, a7, 56
400d138e:	05c8      	l32i.n	a12, a5, 0
400d1390:	15d8      	l32i.n	a13, a5, 4
400d1392:	02ad      	mov.n	a10, a2
400d1394:	03bd      	mov.n	a11, a3
400d1396:	fb2e81        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400d1399:	0008e0        	callx8	a8
400d139c:	0a2d      	mov.n	a2, a10
400d139e:	0b3d      	mov.n	a3, a11
400d13a0:	0429      	s32i.n	a2, a4, 0
400d13a2:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d13a4:	28c722        	addi	a2, a7, 40
400d13a7:	28c732        	addi	a3, a7, 40
400d13aa:	0338      	l32i.n	a3, a3, 0
400d13ac:	331b      	addi.n	a3, a3, 1
400d13ae:	0239      	s32i.n	a3, a2, 0
400d13b0:	ffed46        	j	400d1369 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0xbd>
400d13b3:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d13b6:	c73224        	lsi	f2, a2, 0x31c
400d13b9:	033824        	lsi	f2, a8, 12
400d13bc:	331b      	addi.n	a3, a3, 1
400d13be:	0239      	s32i.n	a3, a2, 0
400d13c0:	ffe506        	j	400d1358 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0xac>
400d13c3:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d13c6:	276520        	lsi	f2, a5, 156
400d13c9:	0a4db7        	ball	a13, a11, 400d13d7 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x12b>
400d13cc:	34c722        	addi	a2, a7, 52
400d13cf:	30c732        	addi	a3, a7, 48
400d13d2:	0338      	l32i.n	a3, a3, 0
400d13d4:	c03430        	sub	a3, a4, a3
400d13d7:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d13d9:	278b      	addi.n	a2, a7, 8
400d13db:	0228      	l32i.n	a2, a2, 0
400d13dd:	82cc      	bnez.n	a2, 400d13e9 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x13d>
        base = duration;
400d13df:	278b      	addi.n	a2, a7, 8
400d13e1:	34c732        	addi	a3, a7, 52
400d13e4:	0338      	l32i.n	a3, a3, 0
400d13e6:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d13e9:	34c722        	addi	a2, a7, 52
400d13ec:	0228      	l32i.n	a2, a2, 0
400d13ee:	da0200        	ufloat.s	f0, a2, 0
400d13f1:	278b      	addi.n	a2, a7, 8
400d13f3:	0228      	l32i.n	a2, a2, 0
400d13f5:	da1200        	ufloat.s	f1, a2, 0
400d13f8:	fab140        	rfr	a11, f1
400d13fb:	faa040        	rfr	a10, f0
400d13fe:	fb1281        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1401:	0008e0        	callx8	a8
400d1404:	fa0a50        	wfr	f0, a10
400d1407:	faa040        	rfr	a10, f0
400d140a:	fb1081        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d140d:	0008e0        	callx8	a8
400d1410:	0a2d      	mov.n	a2, a10
400d1412:	0b3d      	mov.n	a3, a11
400d1414:	34c762        	addi	a6, a7, 52
400d1417:	57cb      	addi.n	a5, a7, 12
400d1419:	fb0a41        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d141c:	02ed      	mov.n	a14, a2
400d141e:	03fd      	mov.n	a15, a3
400d1420:	06d8      	l32i.n	a13, a6, 0
400d1422:	8c0c      	movi.n	a12, 8
400d1424:	05b8      	l32i.n	a11, a5, 0
400d1426:	04ad      	mov.n	a10, a4
400d1428:	201110        	or	a1, a1, a1
400d142b:	0ad665        	call8	400dc190 <printf>
    vTaskDelay(10);
400d142e:	aa0c      	movi.n	a10, 10
400d1430:	201110        	or	a1, a1, a1
400d1433:	b7c4a5        	call8	4008907c <vTaskDelay>
    return duration;
400d1436:	34c722        	addi	a2, a7, 52
400d1439:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d143c:	44c732        	addi	a3, a7, 68
400d143f:	20a330        	or	a10, a3, a3
400d1442:	201110        	or	a1, a1, a1
400d1445:	010ee5        	call8	400d2534 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
    return duration;
400d1448:	000946        	j	400d1471 <unsigned int testDiv<unsigned long long>(char const*, unsigned int)+0x1c5>
400d144b:	1fc732        	addi	a3, a7, 31
400d144e:	03ad      	mov.n	a10, a3
400d1450:	201110        	or	a1, a1, a1
400d1453:	0107e5        	call8	400d24d0 <std::allocator<unsigned long long>::~allocator()>
400d1456:	02ad      	mov.n	a10, a2
400d1458:	201110        	or	a1, a1, a1
400d145b:	038665        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d145e:	44c732        	addi	a3, a7, 68
400d1461:	03ad      	mov.n	a10, a3
400d1463:	201110        	or	a1, a1, a1
400d1466:	010ce5        	call8	400d2534 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
400d1469:	02ad      	mov.n	a10, a2
400d146b:	201110        	or	a1, a1, a1
400d146e:	038525        	call8	400d4cc0 <_Unwind_Resume>
}
400d1471:	f01d      	retw.n
	...

400d1474 <unsigned int testDiv<float>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d1474:	00c136        	entry	a1, 96
400d1477:	017d      	mov.n	a7, a1
400d1479:	47cb      	addi.n	a4, a7, 12
400d147b:	0429      	s32i.n	a2, a4, 0
400d147d:	278b      	addi.n	a2, a7, 8
400d147f:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1481:	24c722        	addi	a2, a7, 36
400d1484:	faee31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1487:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1489:	17c722        	addi	a2, a7, 23
400d148c:	02ad      	mov.n	a10, a2
400d148e:	201110        	or	a1, a1, a1
400d1491:	010da5        	call8	400d256c <std::allocator<float>::allocator()>
400d1494:	17c742        	addi	a4, a7, 23
400d1497:	fae931        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d149a:	34c722        	addi	a2, a7, 52
400d149d:	04cd      	mov.n	a12, a4
400d149f:	03bd      	mov.n	a11, a3
400d14a1:	02ad      	mov.n	a10, a2
400d14a3:	201110        	or	a1, a1, a1
400d14a6:	010ee5        	call8	400d2594 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>
400d14a9:	17c722        	addi	a2, a7, 23
400d14ac:	02ad      	mov.n	a10, a2
400d14ae:	201110        	or	a1, a1, a1
400d14b1:	010ce5        	call8	400d2580 <std::allocator<float>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d14b4:	18c722        	addi	a2, a7, 24
400d14b7:	030c      	movi.n	a3, 0
400d14b9:	0239      	s32i.n	a3, a2, 0
400d14bb:	18c722        	addi	a2, a7, 24
400d14be:	0228      	l32i.n	a2, a2, 0
400d14c0:	fae031        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d14c3:	2e3327        	bltu	a3, a2, 400d14f5 <unsigned int testDiv<float>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d14c6:	18c732        	addi	a3, a7, 24
400d14c9:	34c722        	addi	a2, a7, 52
400d14cc:	03b8      	l32i.n	a11, a3, 0
400d14ce:	02ad      	mov.n	a10, a2
400d14d0:	201110        	or	a1, a1, a1
400d14d3:	1acaa5        	call8	400ec17c <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d14d6:	0a2d      	mov.n	a2, a10
400d14d8:	201110        	or	a1, a1, a1
400d14db:	af9525        	call8	40080e2c <esp_random>
400d14de:	0a3d      	mov.n	a3, a10
400d14e0:	da0300        	ufloat.s	f0, a3, 0
400d14e3:	004203        	ssi	f0, a2, 0
    for (size_t i = 0; i < size; ++i)
400d14e6:	18c722        	addi	a2, a7, 24
400d14e9:	18c732        	addi	a3, a7, 24
400d14ec:	0338      	l32i.n	a3, a3, 0
400d14ee:	331b      	addi.n	a3, a3, 1
400d14f0:	0239      	s32i.n	a3, a2, 0
400d14f2:	fff146        	j	400d14bb <unsigned int testDiv<float>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d14f5:	201110        	or	a1, a1, a1
400d14f8:	af9325        	call8	40080e2c <esp_random>
400d14fb:	0a3d      	mov.n	a3, a10
400d14fd:	28c722        	addi	a2, a7, 40
400d1500:	da0300        	ufloat.s	f0, a3, 0
400d1503:	004203        	ssi	f0, a2, 0
    const auto start = xTaskGetTickCount();
400d1506:	201110        	or	a1, a1, a1
400d1509:	b71325        	call8	4008863c <xTaskGetTickCount>
400d150c:	0a3d      	mov.n	a3, a10
400d150e:	2cc722        	addi	a2, a7, 44
400d1511:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1513:	1cc722        	addi	a2, a7, 28
400d1516:	030c      	movi.n	a3, 0
400d1518:	0239      	s32i.n	a3, a2, 0
400d151a:	1cc722        	addi	a2, a7, 28
400d151d:	0228      	l32i.n	a2, a2, 0
400d151f:	133c      	movi.n	a3, 49
400d1521:	5b2327        	blt	a3, a2, 400d1580 <unsigned int testDiv<float>(char const*, unsigned int)+0x10c>
        for (size_t i = 0; i < size; ++i)
400d1524:	20c722        	addi	a2, a7, 32
400d1527:	030c      	movi.n	a3, 0
400d1529:	0239      	s32i.n	a3, a2, 0
400d152b:	20c722        	addi	a2, a7, 32
400d152e:	0228      	l32i.n	a2, a2, 0
400d1530:	fac431        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1533:	393327        	bltu	a3, a2, 400d1570 <unsigned int testDiv<float>(char const*, unsigned int)+0xfc>
            data[i] /= div;
400d1536:	20c732        	addi	a3, a7, 32
400d1539:	34c722        	addi	a2, a7, 52
400d153c:	03b8      	l32i.n	a11, a3, 0
400d153e:	02ad      	mov.n	a10, a2
400d1540:	201110        	or	a1, a1, a1
400d1543:	1ac3a5        	call8	400ec17c <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1546:	0a2d      	mov.n	a2, a10
400d1548:	000203        	lsi	f0, a2, 0
400d154b:	28c732        	addi	a3, a7, 40
400d154e:	03b8      	l32i.n	a11, a3, 0
400d1550:	faa040        	rfr	a10, f0
400d1553:	fabd81        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1556:	0008e0        	callx8	a8
400d1559:	fa0a50        	wfr	f0, a10
400d155c:	004203        	ssi	f0, a2, 0
        for (size_t i = 0; i < size; ++i)
400d155f:	20c722        	addi	a2, a7, 32
400d1562:	20c732        	addi	a3, a7, 32
400d1565:	0338      	l32i.n	a3, a3, 0
400d1567:	331b      	addi.n	a3, a3, 1
400d1569:	0239      	s32i.n	a3, a2, 0
400d156b:	ffef06        	j	400d152b <unsigned int testDiv<float>(char const*, unsigned int)+0xb7>
400d156e:	220000        	orb	b0, b0, b0
    for (int x = 0; x < 50; ++x)
400d1571:	321cc7        	beq	a12, a12, 400d15a7 <unsigned int testDiv<float>(char const*, unsigned int)+0x133>
400d1574:	381cc7        	beq	a12, a12, 400d15b0 <unsigned int testDiv<float>(char const*, unsigned int)+0x13c>
400d1577:	331b03        	lsi	f0, a11, 204
400d157a:	0239      	s32i.n	a3, a2, 0
400d157c:	ffe686        	j	400d151a <unsigned int testDiv<float>(char const*, unsigned int)+0xa6>
400d157f:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d1582:	0ba520        	lsi	f2, a5, 44
400d1585:	0a4db7        	ball	a13, a11, 400d1593 <unsigned int testDiv<float>(char const*, unsigned int)+0x11f>
400d1588:	30c722        	addi	a2, a7, 48
400d158b:	2cc732        	addi	a3, a7, 44
400d158e:	0338      	l32i.n	a3, a3, 0
400d1590:	c03430        	sub	a3, a4, a3
400d1593:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1595:	278b      	addi.n	a2, a7, 8
400d1597:	0228      	l32i.n	a2, a2, 0
400d1599:	82cc      	bnez.n	a2, 400d15a5 <unsigned int testDiv<float>(char const*, unsigned int)+0x131>
        base = duration;
400d159b:	278b      	addi.n	a2, a7, 8
400d159d:	30c732        	addi	a3, a7, 48
400d15a0:	0338      	l32i.n	a3, a3, 0
400d15a2:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d15a5:	30c722        	addi	a2, a7, 48
400d15a8:	0228      	l32i.n	a2, a2, 0
400d15aa:	da0200        	ufloat.s	f0, a2, 0
400d15ad:	278b      	addi.n	a2, a7, 8
400d15af:	0228      	l32i.n	a2, a2, 0
400d15b1:	da1200        	ufloat.s	f1, a2, 0
400d15b4:	fab140        	rfr	a11, f1
400d15b7:	faa040        	rfr	a10, f0
400d15ba:	faa381        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d15bd:	0008e0        	callx8	a8
400d15c0:	fa0a50        	wfr	f0, a10
400d15c3:	faa040        	rfr	a10, f0
400d15c6:	faa181        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d15c9:	0008e0        	callx8	a8
400d15cc:	0a2d      	mov.n	a2, a10
400d15ce:	0b3d      	mov.n	a3, a11
400d15d0:	30c762        	addi	a6, a7, 48
400d15d3:	57cb      	addi.n	a5, a7, 12
400d15d5:	fa9b41        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d15d8:	02ed      	mov.n	a14, a2
400d15da:	03fd      	mov.n	a15, a3
400d15dc:	06d8      	l32i.n	a13, a6, 0
400d15de:	4c0c      	movi.n	a12, 4
400d15e0:	05b8      	l32i.n	a11, a5, 0
400d15e2:	04ad      	mov.n	a10, a4
400d15e4:	201110        	or	a1, a1, a1
400d15e7:	0abaa5        	call8	400dc190 <printf>
    vTaskDelay(10);
400d15ea:	aa0c      	movi.n	a10, 10
400d15ec:	201110        	or	a1, a1, a1
400d15ef:	b7a8e5        	call8	4008907c <vTaskDelay>
    return duration;
400d15f2:	30c722        	addi	a2, a7, 48
400d15f5:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d15f8:	34c732        	addi	a3, a7, 52
400d15fb:	20a330        	or	a10, a3, a3
400d15fe:	201110        	or	a1, a1, a1
400d1601:	00fe25        	call8	400d25e4 <std::vector<float, std::allocator<float> >::~vector()>
    return duration;
400d1604:	000946        	j	400d162d <unsigned int testDiv<float>(char const*, unsigned int)+0x1b9>
400d1607:	17c732        	addi	a3, a7, 23
400d160a:	03ad      	mov.n	a10, a3
400d160c:	201110        	or	a1, a1, a1
400d160f:	00f725        	call8	400d2580 <std::allocator<float>::~allocator()>
400d1612:	02ad      	mov.n	a10, a2
400d1614:	201110        	or	a1, a1, a1
400d1617:	036aa5        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d161a:	34c732        	addi	a3, a7, 52
400d161d:	03ad      	mov.n	a10, a3
400d161f:	201110        	or	a1, a1, a1
400d1622:	00fc25        	call8	400d25e4 <std::vector<float, std::allocator<float> >::~vector()>
400d1625:	02ad      	mov.n	a10, a2
400d1627:	201110        	or	a1, a1, a1
400d162a:	036965        	call8	400d4cc0 <_Unwind_Resume>
}
400d162d:	f01d      	retw.n
	...

400d1630 <unsigned int testDiv<double>(char const*, unsigned int)>:
static TickType_t testDiv(const char *name, TickType_t base)
400d1630:	00e136        	entry	a1, 112
400d1633:	017d      	mov.n	a7, a1
400d1635:	47cb      	addi.n	a4, a7, 12
400d1637:	0429      	s32i.n	a2, a4, 0
400d1639:	278b      	addi.n	a2, a7, 8
400d163b:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d163d:	2cc722        	addi	a2, a7, 44
400d1640:	fa7f31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1643:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1645:	1fc722        	addi	a2, a7, 31
400d1648:	02ad      	mov.n	a10, a2
400d164a:	201110        	or	a1, a1, a1
400d164d:	00fce5        	call8	400d261c <std::allocator<double>::allocator()>
400d1650:	1fc742        	addi	a4, a7, 31
400d1653:	fa7a31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1656:	44c722        	addi	a2, a7, 68
400d1659:	04cd      	mov.n	a12, a4
400d165b:	03bd      	mov.n	a11, a3
400d165d:	02ad      	mov.n	a10, a2
400d165f:	201110        	or	a1, a1, a1
400d1662:	00fe25        	call8	400d2644 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>
400d1665:	1fc722        	addi	a2, a7, 31
400d1668:	02ad      	mov.n	a10, a2
400d166a:	201110        	or	a1, a1, a1
400d166d:	00fc25        	call8	400d2630 <std::allocator<double>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1670:	20c722        	addi	a2, a7, 32
400d1673:	030c      	movi.n	a3, 0
400d1675:	0239      	s32i.n	a3, a2, 0
400d1677:	20c722        	addi	a2, a7, 32
400d167a:	0228      	l32i.n	a2, a2, 0
400d167c:	fa7131        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d167f:	383327        	bltu	a3, a2, 400d16bb <unsigned int testDiv<double>(char const*, unsigned int)+0x8b>
        data[i] = esp_random();
400d1682:	20c732        	addi	a3, a7, 32
400d1685:	44c722        	addi	a2, a7, 68
400d1688:	03b8      	l32i.n	a11, a3, 0
400d168a:	02ad      	mov.n	a10, a2
400d168c:	201110        	or	a1, a1, a1
400d168f:	1ab0e5        	call8	400ec19c <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d1692:	0a4d      	mov.n	a4, a10
400d1694:	201110        	or	a1, a1, a1
400d1697:	af7965        	call8	40080e2c <esp_random>
400d169a:	0a2d      	mov.n	a2, a10
400d169c:	02ad      	mov.n	a10, a2
400d169e:	fa6d81        	l32r	a8, 400d0054 <_flash_cache_start+0x3c>
400d16a1:	0008e0        	callx8	a8
400d16a4:	0a2d      	mov.n	a2, a10
400d16a6:	0b3d      	mov.n	a3, a11
400d16a8:	0429      	s32i.n	a2, a4, 0
400d16aa:	1439      	s32i.n	a3, a4, 4
    for (size_t i = 0; i < size; ++i)
400d16ac:	20c722        	addi	a2, a7, 32
400d16af:	20c732        	addi	a3, a7, 32
400d16b2:	0338      	l32i.n	a3, a3, 0
400d16b4:	331b      	addi.n	a3, a3, 1
400d16b6:	0239      	s32i.n	a3, a2, 0
400d16b8:	ffeec6        	j	400d1677 <unsigned int testDiv<double>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d16bb:	201110        	or	a1, a1, a1
400d16be:	af76e5        	call8	40080e2c <esp_random>
400d16c1:	0a2d      	mov.n	a2, a10
400d16c3:	38c742        	addi	a4, a7, 56
400d16c6:	02ad      	mov.n	a10, a2
400d16c8:	fa6381        	l32r	a8, 400d0054 <_flash_cache_start+0x3c>
400d16cb:	0008e0        	callx8	a8
400d16ce:	0a2d      	mov.n	a2, a10
400d16d0:	0b3d      	mov.n	a3, a11
400d16d2:	0429      	s32i.n	a2, a4, 0
400d16d4:	1439      	s32i.n	a3, a4, 4
    const auto start = xTaskGetTickCount();
400d16d6:	201110        	or	a1, a1, a1
400d16d9:	b6f625        	call8	4008863c <xTaskGetTickCount>
400d16dc:	0a3d      	mov.n	a3, a10
400d16de:	30c722        	addi	a2, a7, 48
400d16e1:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d16e3:	24c722        	addi	a2, a7, 36
400d16e6:	030c      	movi.n	a3, 0
400d16e8:	0239      	s32i.n	a3, a2, 0
400d16ea:	24c722        	addi	a2, a7, 36
400d16ed:	0228      	l32i.n	a2, a2, 0
400d16ef:	133c      	movi.n	a3, 49
400d16f1:	5f2327        	blt	a3, a2, 400d1754 <unsigned int testDiv<double>(char const*, unsigned int)+0x124>
        for (size_t i = 0; i < size; ++i)
400d16f4:	28c722        	addi	a2, a7, 40
400d16f7:	030c      	movi.n	a3, 0
400d16f9:	0239      	s32i.n	a3, a2, 0
400d16fb:	28c722        	addi	a2, a7, 40
400d16fe:	0228      	l32i.n	a2, a2, 0
400d1700:	fa5031        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1703:	3d3327        	bltu	a3, a2, 400d1744 <unsigned int testDiv<double>(char const*, unsigned int)+0x114>
            data[i] /= div;
400d1706:	28c732        	addi	a3, a7, 40
400d1709:	44c722        	addi	a2, a7, 68
400d170c:	03b8      	l32i.n	a11, a3, 0
400d170e:	02ad      	mov.n	a10, a2
400d1710:	201110        	or	a1, a1, a1
400d1713:	1aa8a5        	call8	400ec19c <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d1716:	0a4d      	mov.n	a4, a10
400d1718:	0428      	l32i.n	a2, a4, 0
400d171a:	1438      	l32i.n	a3, a4, 4
400d171c:	38c752        	addi	a5, a7, 56
400d171f:	05c8      	l32i.n	a12, a5, 0
400d1721:	15d8      	l32i.n	a13, a5, 4
400d1723:	02ad      	mov.n	a10, a2
400d1725:	03bd      	mov.n	a11, a3
400d1727:	fa4c81        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400d172a:	0008e0        	callx8	a8
400d172d:	0a2d      	mov.n	a2, a10
400d172f:	0b3d      	mov.n	a3, a11
400d1731:	0429      	s32i.n	a2, a4, 0
400d1733:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d1735:	28c722        	addi	a2, a7, 40
400d1738:	28c732        	addi	a3, a7, 40
400d173b:	0338      	l32i.n	a3, a3, 0
400d173d:	331b      	addi.n	a3, a3, 1
400d173f:	0239      	s32i.n	a3, a2, 0
400d1741:	ffed86        	j	400d16fb <unsigned int testDiv<double>(char const*, unsigned int)+0xcb>
    for (int x = 0; x < 50; ++x)
400d1744:	24c722        	addi	a2, a7, 36
400d1747:	24c732        	addi	a3, a7, 36
400d174a:	0338      	l32i.n	a3, a3, 0
400d174c:	331b      	addi.n	a3, a3, 1
400d174e:	0239      	s32i.n	a3, a2, 0
400d1750:	ffe586        	j	400d16ea <unsigned int testDiv<double>(char const*, unsigned int)+0xba>
400d1753:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d1756:	ee6520        	f64iter	a6, a5, a2, 2, 1
400d1759:	0a4db6        	bltui	a13, 4, 400d1767 <unsigned int testDiv<double>(char const*, unsigned int)+0x137>
400d175c:	34c722        	addi	a2, a7, 52
400d175f:	30c732        	addi	a3, a7, 48
400d1762:	0338      	l32i.n	a3, a3, 0
400d1764:	c03430        	sub	a3, a4, a3
400d1767:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1769:	278b      	addi.n	a2, a7, 8
400d176b:	0228      	l32i.n	a2, a2, 0
400d176d:	82cc      	bnez.n	a2, 400d1779 <unsigned int testDiv<double>(char const*, unsigned int)+0x149>
        base = duration;
400d176f:	278b      	addi.n	a2, a7, 8
400d1771:	34c732        	addi	a3, a7, 52
400d1774:	0338      	l32i.n	a3, a3, 0
400d1776:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) divide took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1779:	34c722        	addi	a2, a7, 52
400d177c:	0228      	l32i.n	a2, a2, 0
400d177e:	da0200        	ufloat.s	f0, a2, 0
400d1781:	278b      	addi.n	a2, a7, 8
400d1783:	0228      	l32i.n	a2, a2, 0
400d1785:	da1200        	ufloat.s	f1, a2, 0
400d1788:	fab140        	rfr	a11, f1
400d178b:	faa040        	rfr	a10, f0
400d178e:	fa2e81        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1791:	0008e0        	callx8	a8
400d1794:	fa0a50        	wfr	f0, a10
400d1797:	faa040        	rfr	a10, f0
400d179a:	fa2c81        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d179d:	0008e0        	callx8	a8
400d17a0:	0a2d      	mov.n	a2, a10
400d17a2:	0b3d      	mov.n	a3, a11
400d17a4:	34c762        	addi	a6, a7, 52
400d17a7:	57cb      	addi.n	a5, a7, 12
400d17a9:	fa2641        	l32r	a4, 400d0044 <_flash_cache_start+0x2c>
400d17ac:	02ed      	mov.n	a14, a2
400d17ae:	03fd      	mov.n	a15, a3
400d17b0:	06d8      	l32i.n	a13, a6, 0
400d17b2:	8c0c      	movi.n	a12, 8
400d17b4:	05b8      	l32i.n	a11, a5, 0
400d17b6:	04ad      	mov.n	a10, a4
400d17b8:	201110        	or	a1, a1, a1
400d17bb:	0a9d65        	call8	400dc190 <printf>
    vTaskDelay(10);
400d17be:	aa0c      	movi.n	a10, 10
400d17c0:	201110        	or	a1, a1, a1
400d17c3:	b78ba5        	call8	4008907c <vTaskDelay>
    return duration;
400d17c6:	34c722        	addi	a2, a7, 52
400d17c9:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d17cc:	44c732        	addi	a3, a7, 68
400d17cf:	20a330        	or	a10, a3, a3
400d17d2:	201110        	or	a1, a1, a1
400d17d5:	00ebe5        	call8	400d2694 <std::vector<double, std::allocator<double> >::~vector()>
    return duration;
400d17d8:	000946        	j	400d1801 <unsigned int testDiv<double>(char const*, unsigned int)+0x1d1>
400d17db:	1fc732        	addi	a3, a7, 31
400d17de:	03ad      	mov.n	a10, a3
400d17e0:	201110        	or	a1, a1, a1
400d17e3:	00e4e5        	call8	400d2630 <std::allocator<double>::~allocator()>
400d17e6:	02ad      	mov.n	a10, a2
400d17e8:	201110        	or	a1, a1, a1
400d17eb:	034d65        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d17ee:	44c732        	addi	a3, a7, 68
400d17f1:	03ad      	mov.n	a10, a3
400d17f3:	201110        	or	a1, a1, a1
400d17f6:	00e9e5        	call8	400d2694 <std::vector<double, std::allocator<double> >::~vector()>
400d17f9:	02ad      	mov.n	a10, a2
400d17fb:	201110        	or	a1, a1, a1
400d17fe:	034c25        	call8	400d4cc0 <_Unwind_Resume>
}
400d1801:	f01d      	retw.n
	...

400d1804 <unsigned int testMult<unsigned char>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d1804:	00c136        	entry	a1, 96
400d1807:	017d      	mov.n	a7, a1
400d1809:	47cb      	addi.n	a4, a7, 12
400d180b:	0429      	s32i.n	a2, a4, 0
400d180d:	278b      	addi.n	a2, a7, 8
400d180f:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1811:	28c722        	addi	a2, a7, 40
400d1814:	fa0a31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1817:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1819:	1ac722        	addi	a2, a7, 26
400d181c:	02ad      	mov.n	a10, a2
400d181e:	201110        	or	a1, a1, a1
400d1821:	00ac25        	call8	400d22e4 <std::allocator<unsigned char>::allocator()>
400d1824:	1ac742        	addi	a4, a7, 26
400d1827:	fa0531        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d182a:	34c722        	addi	a2, a7, 52
400d182d:	04cd      	mov.n	a12, a4
400d182f:	03bd      	mov.n	a11, a3
400d1831:	02ad      	mov.n	a10, a2
400d1833:	201110        	or	a1, a1, a1
400d1836:	00ad65        	call8	400d230c <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>
400d1839:	1ac722        	addi	a2, a7, 26
400d183c:	02ad      	mov.n	a10, a2
400d183e:	201110        	or	a1, a1, a1
400d1841:	00ab65        	call8	400d22f8 <std::allocator<unsigned char>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1844:	1cc722        	addi	a2, a7, 28
400d1847:	030c      	movi.n	a3, 0
400d1849:	0239      	s32i.n	a3, a2, 0
400d184b:	1cc722        	addi	a2, a7, 28
400d184e:	0228      	l32i.n	a2, a2, 0
400d1850:	f9fc31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1853:	2e3327        	bltu	a3, a2, 400d1885 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d1856:	1cc732        	addi	a3, a7, 28
400d1859:	34c722        	addi	a2, a7, 52
400d185c:	03b8      	l32i.n	a11, a3, 0
400d185e:	02ad      	mov.n	a10, a2
400d1860:	201110        	or	a1, a1, a1
400d1863:	1a89e5        	call8	400ec100 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d1866:	0a2d      	mov.n	a2, a10
400d1868:	201110        	or	a1, a1, a1
400d186b:	af5c25        	call8	40080e2c <esp_random>
400d186e:	0a3d      	mov.n	a3, a10
400d1870:	743030        	extui	a3, a3, 0, 8
400d1873:	004232        	s8i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1876:	1cc722        	addi	a2, a7, 28
400d1879:	1cc732        	addi	a3, a7, 28
400d187c:	0338      	l32i.n	a3, a3, 0
400d187e:	331b      	addi.n	a3, a3, 1
400d1880:	0239      	s32i.n	a3, a2, 0
400d1882:	fff146        	j	400d184b <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1885:	201110        	or	a1, a1, a1
400d1888:	af5a25        	call8	40080e2c <esp_random>
400d188b:	203aa0        	or	a3, a10, a10
400d188e:	1bc722        	addi	a2, a7, 27
400d1891:	004232        	s8i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d1894:	201110        	or	a1, a1, a1
400d1897:	b6da65        	call8	4008863c <xTaskGetTickCount>
400d189a:	0a3d      	mov.n	a3, a10
400d189c:	2cc722        	addi	a2, a7, 44
400d189f:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d18a1:	20c722        	addi	a2, a7, 32
400d18a4:	030c      	movi.n	a3, 0
400d18a6:	0239      	s32i.n	a3, a2, 0
400d18a8:	20c722        	addi	a2, a7, 32
400d18ab:	0228      	l32i.n	a2, a2, 0
400d18ad:	133c      	movi.n	a3, 49
400d18af:	552327        	blt	a3, a2, 400d1908 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x104>
        for (size_t i = 0; i < size; ++i)
400d18b2:	24c722        	addi	a2, a7, 36
400d18b5:	030c      	movi.n	a3, 0
400d18b7:	0239      	s32i.n	a3, a2, 0
400d18b9:	24c722        	addi	a2, a7, 36
400d18bc:	0228      	l32i.n	a2, a2, 0
400d18be:	f9e031        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d18c1:	333327        	bltu	a3, a2, 400d18f8 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0xf4>
            data[i] *= div;
400d18c4:	24c732        	addi	a3, a7, 36
400d18c7:	34c722        	addi	a2, a7, 52
400d18ca:	03b8      	l32i.n	a11, a3, 0
400d18cc:	02ad      	mov.n	a10, a2
400d18ce:	201110        	or	a1, a1, a1
400d18d1:	1a82e5        	call8	400ec100 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>
400d18d4:	0a2d      	mov.n	a2, a10
400d18d6:	000242        	l8ui	a4, a2, 0
400d18d9:	1bc732        	addi	a3, a7, 27
400d18dc:	000332        	l8ui	a3, a3, 0
400d18df:	c13430        	mul16u	a3, a4, a3
400d18e2:	743030        	extui	a3, a3, 0, 8
400d18e5:	004232        	s8i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d18e8:	24c722        	addi	a2, a7, 36
400d18eb:	24c732        	addi	a3, a7, 36
400d18ee:	0338      	l32i.n	a3, a3, 0
400d18f0:	331b      	addi.n	a3, a3, 1
400d18f2:	0239      	s32i.n	a3, a2, 0
400d18f4:	fff046        	j	400d18b9 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0xb5>
400d18f7:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d18fa:	c73220        	lsi	f2, a2, 0x31c
400d18fd:	033820        	lsi	f2, a8, 12
400d1900:	331b      	addi.n	a3, a3, 1
400d1902:	0239      	s32i.n	a3, a2, 0
400d1904:	ffe806        	j	400d18a8 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0xa4>
400d1907:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d190a:	d32520        	movt	a2, a5, b2
400d190d:	0a4db6        	bltui	a13, 4, 400d191b <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x117>
400d1910:	30c722        	addi	a2, a7, 48
400d1913:	2cc732        	addi	a3, a7, 44
400d1916:	0338      	l32i.n	a3, a3, 0
400d1918:	c03430        	sub	a3, a4, a3
400d191b:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d191d:	278b      	addi.n	a2, a7, 8
400d191f:	0228      	l32i.n	a2, a2, 0
400d1921:	82cc      	bnez.n	a2, 400d192d <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x129>
        base = duration;
400d1923:	278b      	addi.n	a2, a7, 8
400d1925:	30c732        	addi	a3, a7, 48
400d1928:	0338      	l32i.n	a3, a3, 0
400d192a:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d192d:	30c722        	addi	a2, a7, 48
400d1930:	0228      	l32i.n	a2, a2, 0
400d1932:	da0200        	ufloat.s	f0, a2, 0
400d1935:	278b      	addi.n	a2, a7, 8
400d1937:	0228      	l32i.n	a2, a2, 0
400d1939:	da1200        	ufloat.s	f1, a2, 0
400d193c:	fab140        	rfr	a11, f1
400d193f:	faa040        	rfr	a10, f0
400d1942:	f9c181        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1945:	0008e0        	callx8	a8
400d1948:	fa0a50        	wfr	f0, a10
400d194b:	faa040        	rfr	a10, f0
400d194e:	f9bf81        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1951:	0008e0        	callx8	a8
400d1954:	0a2d      	mov.n	a2, a10
400d1956:	0b3d      	mov.n	a3, a11
400d1958:	30c762        	addi	a6, a7, 48
400d195b:	57cb      	addi.n	a5, a7, 12
400d195d:	f9bf41        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d1960:	02ed      	mov.n	a14, a2
400d1962:	03fd      	mov.n	a15, a3
400d1964:	06d8      	l32i.n	a13, a6, 0
400d1966:	1c0c      	movi.n	a12, 1
400d1968:	05b8      	l32i.n	a11, a5, 0
400d196a:	04ad      	mov.n	a10, a4
400d196c:	201110        	or	a1, a1, a1
400d196f:	0a8225        	call8	400dc190 <printf>
    vTaskDelay(10);
400d1972:	aa0c      	movi.n	a10, 10
400d1974:	201110        	or	a1, a1, a1
400d1977:	b77065        	call8	4008907c <vTaskDelay>
    return duration;
400d197a:	30c722        	addi	a2, a7, 48
400d197d:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d1980:	34c732        	addi	a3, a7, 52
400d1983:	20a330        	or	a10, a3, a3
400d1986:	201110        	or	a1, a1, a1
400d1989:	009d25        	call8	400d235c <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
    return duration;
400d198c:	000946        	j	400d19b5 <unsigned int testMult<unsigned char>(char const*, unsigned int)+0x1b1>
400d198f:	1ac732        	addi	a3, a7, 26
400d1992:	03ad      	mov.n	a10, a3
400d1994:	201110        	or	a1, a1, a1
400d1997:	009625        	call8	400d22f8 <std::allocator<unsigned char>::~allocator()>
400d199a:	02ad      	mov.n	a10, a2
400d199c:	201110        	or	a1, a1, a1
400d199f:	033225        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d19a2:	34c732        	addi	a3, a7, 52
400d19a5:	03ad      	mov.n	a10, a3
400d19a7:	201110        	or	a1, a1, a1
400d19aa:	009b25        	call8	400d235c <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>
400d19ad:	02ad      	mov.n	a10, a2
400d19af:	201110        	or	a1, a1, a1
400d19b2:	0330e5        	call8	400d4cc0 <_Unwind_Resume>
}
400d19b5:	f01d      	retw.n
	...

400d19b8 <unsigned int testMult<unsigned short>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d19b8:	00c136        	entry	a1, 96
400d19bb:	017d      	mov.n	a7, a1
400d19bd:	47cb      	addi.n	a4, a7, 12
400d19bf:	0429      	s32i.n	a2, a4, 0
400d19c1:	278b      	addi.n	a2, a7, 8
400d19c3:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d19c5:	28c722        	addi	a2, a7, 40
400d19c8:	f99d31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d19cb:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d19cd:	19c722        	addi	a2, a7, 25
400d19d0:	02ad      	mov.n	a10, a2
400d19d2:	201110        	or	a1, a1, a1
400d19d5:	009be5        	call8	400d2394 <std::allocator<unsigned short>::allocator()>
400d19d8:	19c742        	addi	a4, a7, 25
400d19db:	f99831        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d19de:	34c722        	addi	a2, a7, 52
400d19e1:	04cd      	mov.n	a12, a4
400d19e3:	03bd      	mov.n	a11, a3
400d19e5:	02ad      	mov.n	a10, a2
400d19e7:	201110        	or	a1, a1, a1
400d19ea:	009d25        	call8	400d23bc <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>
400d19ed:	19c722        	addi	a2, a7, 25
400d19f0:	02ad      	mov.n	a10, a2
400d19f2:	201110        	or	a1, a1, a1
400d19f5:	009b25        	call8	400d23a8 <std::allocator<unsigned short>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d19f8:	1cc722        	addi	a2, a7, 28
400d19fb:	030c      	movi.n	a3, 0
400d19fd:	0239      	s32i.n	a3, a2, 0
400d19ff:	1cc722        	addi	a2, a7, 28
400d1a02:	0228      	l32i.n	a2, a2, 0
400d1a04:	f98f31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1a07:	2e3327        	bltu	a3, a2, 400d1a39 <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d1a0a:	1cc732        	addi	a3, a7, 28
400d1a0d:	34c722        	addi	a2, a7, 52
400d1a10:	03b8      	l32i.n	a11, a3, 0
400d1a12:	02ad      	mov.n	a10, a2
400d1a14:	201110        	or	a1, a1, a1
400d1a17:	1a7065        	call8	400ec11c <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d1a1a:	0a2d      	mov.n	a2, a10
400d1a1c:	201110        	or	a1, a1, a1
400d1a1f:	af40e5        	call8	40080e2c <esp_random>
400d1a22:	0a3d      	mov.n	a3, a10
400d1a24:	f43030        	extui	a3, a3, 0, 16
400d1a27:	005232        	s16i	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1a2a:	1cc722        	addi	a2, a7, 28
400d1a2d:	1cc732        	addi	a3, a7, 28
400d1a30:	0338      	l32i.n	a3, a3, 0
400d1a32:	331b      	addi.n	a3, a3, 1
400d1a34:	0239      	s32i.n	a3, a2, 0
400d1a36:	fff146        	j	400d19ff <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1a39:	201110        	or	a1, a1, a1
400d1a3c:	af3ee5        	call8	40080e2c <esp_random>
400d1a3f:	203aa0        	or	a3, a10, a10
400d1a42:	1ac722        	addi	a2, a7, 26
400d1a45:	005232        	s16i	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d1a48:	201110        	or	a1, a1, a1
400d1a4b:	b6bf25        	call8	4008863c <xTaskGetTickCount>
400d1a4e:	0a3d      	mov.n	a3, a10
400d1a50:	2cc722        	addi	a2, a7, 44
400d1a53:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1a55:	20c722        	addi	a2, a7, 32
400d1a58:	030c      	movi.n	a3, 0
400d1a5a:	0239      	s32i.n	a3, a2, 0
400d1a5c:	20c722        	addi	a2, a7, 32
400d1a5f:	0228      	l32i.n	a2, a2, 0
400d1a61:	133c      	movi.n	a3, 49
400d1a63:	552327        	blt	a3, a2, 400d1abc <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x104>
        for (size_t i = 0; i < size; ++i)
400d1a66:	24c722        	addi	a2, a7, 36
400d1a69:	030c      	movi.n	a3, 0
400d1a6b:	0239      	s32i.n	a3, a2, 0
400d1a6d:	24c722        	addi	a2, a7, 36
400d1a70:	0228      	l32i.n	a2, a2, 0
400d1a72:	f97331        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1a75:	323327        	bltu	a3, a2, 400d1aab <unsigned int testMult<unsigned short>(char const*, unsigned int)+0xf3>
            data[i] *= div;
400d1a78:	24c732        	addi	a3, a7, 36
400d1a7b:	34c722        	addi	a2, a7, 52
400d1a7e:	03b8      	l32i.n	a11, a3, 0
400d1a80:	02ad      	mov.n	a10, a2
400d1a82:	201110        	or	a1, a1, a1
400d1a85:	1a6965        	call8	400ec11c <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>
400d1a88:	0a2d      	mov.n	a2, a10
400d1a8a:	001232        	l16ui	a3, a2, 0
400d1a8d:	1ac742        	addi	a4, a7, 26
400d1a90:	001442        	l16ui	a4, a4, 0
400d1a93:	c13430        	mul16u	a3, a4, a3
400d1a96:	f43030        	extui	a3, a3, 0, 16
400d1a99:	005232        	s16i	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1a9c:	24c722        	addi	a2, a7, 36
400d1a9f:	24c732        	addi	a3, a7, 36
400d1aa2:	0338      	l32i.n	a3, a3, 0
400d1aa4:	331b      	addi.n	a3, a3, 1
400d1aa6:	0239      	s32i.n	a3, a2, 0
400d1aa8:	fff046        	j	400d1a6d <unsigned int testMult<unsigned short>(char const*, unsigned int)+0xb5>
    for (int x = 0; x < 50; ++x)
400d1aab:	20c722        	addi	a2, a7, 32
400d1aae:	20c732        	addi	a3, a7, 32
400d1ab1:	0338      	l32i.n	a3, a3, 0
400d1ab3:	331b      	addi.n	a3, a3, 1
400d1ab5:	0239      	s32i.n	a3, a2, 0
400d1ab7:	ffe846        	j	400d1a5c <unsigned int testMult<unsigned short>(char const*, unsigned int)+0xa4>
400d1aba:	100000        	and	a0, a0, a0
    auto duration = xTaskGetTickCount() - start;
400d1abd:	e52011        	l32r	a1, 400caf40 <_rtc_text_end+0xaf40>
400d1ac0:	4db6b7        	bgeu	a6, a11, 400d1b11 <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x159>
400d1ac3:	220a      	add.n	a2, a2, a0
400d1ac5:	3230c7        	bltu	a0, a12, 400d1afb <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x143>
400d1ac8:	382cc7        	blt	a12, a12, 400d1b04 <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x14c>
400d1acb:	343003        	lsi	f0, a0, 208
400d1ace:	0239c0        	andb	b3, b9, b12
    if (base == 0)
400d1ad1:	278b      	addi.n	a2, a7, 8
400d1ad3:	0228      	l32i.n	a2, a2, 0
400d1ad5:	82cc      	bnez.n	a2, 400d1ae1 <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x129>
        base = duration;
400d1ad7:	278b      	addi.n	a2, a7, 8
400d1ad9:	30c732        	addi	a3, a7, 48
400d1adc:	0338      	l32i.n	a3, a3, 0
400d1ade:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1ae1:	30c722        	addi	a2, a7, 48
400d1ae4:	0228      	l32i.n	a2, a2, 0
400d1ae6:	da0200        	ufloat.s	f0, a2, 0
400d1ae9:	278b      	addi.n	a2, a7, 8
400d1aeb:	0228      	l32i.n	a2, a2, 0
400d1aed:	da1200        	ufloat.s	f1, a2, 0
400d1af0:	fab140        	rfr	a11, f1
400d1af3:	faa040        	rfr	a10, f0
400d1af6:	f95481        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1af9:	0008e0        	callx8	a8
400d1afc:	fa0a50        	wfr	f0, a10
400d1aff:	faa040        	rfr	a10, f0
400d1b02:	f95281        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1b05:	0008e0        	callx8	a8
400d1b08:	0a2d      	mov.n	a2, a10
400d1b0a:	0b3d      	mov.n	a3, a11
400d1b0c:	30c762        	addi	a6, a7, 48
400d1b0f:	57cb      	addi.n	a5, a7, 12
400d1b11:	f95241        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d1b14:	02ed      	mov.n	a14, a2
400d1b16:	03fd      	mov.n	a15, a3
400d1b18:	06d8      	l32i.n	a13, a6, 0
400d1b1a:	2c0c      	movi.n	a12, 2
400d1b1c:	05b8      	l32i.n	a11, a5, 0
400d1b1e:	04ad      	mov.n	a10, a4
400d1b20:	201110        	or	a1, a1, a1
400d1b23:	0a66e5        	call8	400dc190 <printf>
    vTaskDelay(10);
400d1b26:	aa0c      	movi.n	a10, 10
400d1b28:	201110        	or	a1, a1, a1
400d1b2b:	b75525        	call8	4008907c <vTaskDelay>
    return duration;
400d1b2e:	30c722        	addi	a2, a7, 48
400d1b31:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d1b34:	34c732        	addi	a3, a7, 52
400d1b37:	20a330        	or	a10, a3, a3
400d1b3a:	201110        	or	a1, a1, a1
400d1b3d:	008ce5        	call8	400d240c <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
    return duration;
400d1b40:	000946        	j	400d1b69 <unsigned int testMult<unsigned short>(char const*, unsigned int)+0x1b1>
400d1b43:	19c732        	addi	a3, a7, 25
400d1b46:	03ad      	mov.n	a10, a3
400d1b48:	201110        	or	a1, a1, a1
400d1b4b:	0085e5        	call8	400d23a8 <std::allocator<unsigned short>::~allocator()>
400d1b4e:	02ad      	mov.n	a10, a2
400d1b50:	201110        	or	a1, a1, a1
400d1b53:	0316e5        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d1b56:	34c732        	addi	a3, a7, 52
400d1b59:	03ad      	mov.n	a10, a3
400d1b5b:	201110        	or	a1, a1, a1
400d1b5e:	008ae5        	call8	400d240c <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>
400d1b61:	02ad      	mov.n	a10, a2
400d1b63:	201110        	or	a1, a1, a1
400d1b66:	0315a5        	call8	400d4cc0 <_Unwind_Resume>
}
400d1b69:	f01d      	retw.n
	...

400d1b6c <unsigned int testMult<unsigned int>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d1b6c:	00c136        	entry	a1, 96
400d1b6f:	017d      	mov.n	a7, a1
400d1b71:	47cb      	addi.n	a4, a7, 12
400d1b73:	0429      	s32i.n	a2, a4, 0
400d1b75:	278b      	addi.n	a2, a7, 8
400d1b77:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1b79:	24c722        	addi	a2, a7, 36
400d1b7c:	f93031        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1b7f:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1b81:	17c722        	addi	a2, a7, 23
400d1b84:	02ad      	mov.n	a10, a2
400d1b86:	201110        	or	a1, a1, a1
400d1b89:	008ba5        	call8	400d2444 <std::allocator<unsigned int>::allocator()>
400d1b8c:	17c742        	addi	a4, a7, 23
400d1b8f:	f92b31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1b92:	34c722        	addi	a2, a7, 52
400d1b95:	04cd      	mov.n	a12, a4
400d1b97:	03bd      	mov.n	a11, a3
400d1b99:	02ad      	mov.n	a10, a2
400d1b9b:	201110        	or	a1, a1, a1
400d1b9e:	008ce5        	call8	400d246c <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>
400d1ba1:	17c722        	addi	a2, a7, 23
400d1ba4:	02ad      	mov.n	a10, a2
400d1ba6:	201110        	or	a1, a1, a1
400d1ba9:	008ae5        	call8	400d2458 <std::allocator<unsigned int>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1bac:	18c722        	addi	a2, a7, 24
400d1baf:	030c      	movi.n	a3, 0
400d1bb1:	0239      	s32i.n	a3, a2, 0
400d1bb3:	18c722        	addi	a2, a7, 24
400d1bb6:	0228      	l32i.n	a2, a2, 0
400d1bb8:	f92231        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1bbb:	2a3327        	bltu	a3, a2, 400d1be9 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x7d>
        data[i] = esp_random();
400d1bbe:	18c732        	addi	a3, a7, 24
400d1bc1:	34c722        	addi	a2, a7, 52
400d1bc4:	03b8      	l32i.n	a11, a3, 0
400d1bc6:	02ad      	mov.n	a10, a2
400d1bc8:	201110        	or	a1, a1, a1
400d1bcb:	1a5725        	call8	400ec13c <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d1bce:	0a2d      	mov.n	a2, a10
400d1bd0:	201110        	or	a1, a1, a1
400d1bd3:	af25a5        	call8	40080e2c <esp_random>
400d1bd6:	0a3d      	mov.n	a3, a10
400d1bd8:	0239      	s32i.n	a3, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1bda:	18c722        	addi	a2, a7, 24
400d1bdd:	18c732        	addi	a3, a7, 24
400d1be0:	0338      	l32i.n	a3, a3, 0
400d1be2:	331b      	addi.n	a3, a3, 1
400d1be4:	0239      	s32i.n	a3, a2, 0
400d1be6:	fff246        	j	400d1bb3 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1be9:	201110        	or	a1, a1, a1
400d1bec:	af23e5        	call8	40080e2c <esp_random>
400d1bef:	0a3d      	mov.n	a3, a10
400d1bf1:	28c722        	addi	a2, a7, 40
400d1bf4:	0239      	s32i.n	a3, a2, 0
    const auto start = xTaskGetTickCount();
400d1bf6:	201110        	or	a1, a1, a1
400d1bf9:	b6a425        	call8	4008863c <xTaskGetTickCount>
400d1bfc:	0a3d      	mov.n	a3, a10
400d1bfe:	2cc722        	addi	a2, a7, 44
400d1c01:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1c03:	1cc722        	addi	a2, a7, 28
400d1c06:	030c      	movi.n	a3, 0
400d1c08:	0239      	s32i.n	a3, a2, 0
400d1c0a:	1cc722        	addi	a2, a7, 28
400d1c0d:	0228      	l32i.n	a2, a2, 0
400d1c0f:	133c      	movi.n	a3, 49
400d1c11:	4f2327        	blt	a3, a2, 400d1c64 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0xf8>
        for (size_t i = 0; i < size; ++i)
400d1c14:	20c722        	addi	a2, a7, 32
400d1c17:	030c      	movi.n	a3, 0
400d1c19:	0239      	s32i.n	a3, a2, 0
400d1c1b:	20c722        	addi	a2, a7, 32
400d1c1e:	0228      	l32i.n	a2, a2, 0
400d1c20:	f90831        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1c23:	2d3327        	bltu	a3, a2, 400d1c54 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0xe8>
            data[i] *= div;
400d1c26:	20c732        	addi	a3, a7, 32
400d1c29:	34c722        	addi	a2, a7, 52
400d1c2c:	03b8      	l32i.n	a11, a3, 0
400d1c2e:	02ad      	mov.n	a10, a2
400d1c30:	201110        	or	a1, a1, a1
400d1c33:	1a50a5        	call8	400ec13c <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>
400d1c36:	0a2d      	mov.n	a2, a10
400d1c38:	0248      	l32i.n	a4, a2, 0
400d1c3a:	28c732        	addi	a3, a7, 40
400d1c3d:	0338      	l32i.n	a3, a3, 0
400d1c3f:	823430        	mull	a3, a4, a3
400d1c42:	0239      	s32i.n	a3, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1c44:	20c722        	addi	a2, a7, 32
400d1c47:	20c732        	addi	a3, a7, 32
400d1c4a:	0338      	l32i.n	a3, a3, 0
400d1c4c:	331b      	addi.n	a3, a3, 1
400d1c4e:	0239      	s32i.n	a3, a2, 0
400d1c50:	fff1c6        	j	400d1c1b <unsigned int testMult<unsigned int>(char const*, unsigned int)+0xaf>
400d1c53:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d1c56:	321c      	movi.n	a2, 19
400d1c58:	381cc7        	beq	a12, a12, 400d1c94 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x128>
400d1c5b:	331b03        	lsi	f0, a11, 204
400d1c5e:	0239      	s32i.n	a3, a2, 0
400d1c60:	ffe986        	j	400d1c0a <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x9e>
400d1c63:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d1c66:	9d6520        	lsi	f2, a5, 0x274
400d1c69:	0a4db6        	bltui	a13, 4, 400d1c77 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x10b>
400d1c6c:	30c722        	addi	a2, a7, 48
400d1c6f:	2cc732        	addi	a3, a7, 44
400d1c72:	0338      	l32i.n	a3, a3, 0
400d1c74:	c03430        	sub	a3, a4, a3
400d1c77:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1c79:	278b      	addi.n	a2, a7, 8
400d1c7b:	0228      	l32i.n	a2, a2, 0
400d1c7d:	82cc      	bnez.n	a2, 400d1c89 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x11d>
        base = duration;
400d1c7f:	278b      	addi.n	a2, a7, 8
400d1c81:	30c732        	addi	a3, a7, 48
400d1c84:	0338      	l32i.n	a3, a3, 0
400d1c86:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1c89:	30c722        	addi	a2, a7, 48
400d1c8c:	0228      	l32i.n	a2, a2, 0
400d1c8e:	da0200        	ufloat.s	f0, a2, 0
400d1c91:	278b      	addi.n	a2, a7, 8
400d1c93:	0228      	l32i.n	a2, a2, 0
400d1c95:	da1200        	ufloat.s	f1, a2, 0
400d1c98:	fab140        	rfr	a11, f1
400d1c9b:	faa040        	rfr	a10, f0
400d1c9e:	f8ea81        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1ca1:	0008e0        	callx8	a8
400d1ca4:	fa0a50        	wfr	f0, a10
400d1ca7:	faa040        	rfr	a10, f0
400d1caa:	f8e881        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1cad:	0008e0        	callx8	a8
400d1cb0:	0a2d      	mov.n	a2, a10
400d1cb2:	0b3d      	mov.n	a3, a11
400d1cb4:	30c762        	addi	a6, a7, 48
400d1cb7:	57cb      	addi.n	a5, a7, 12
400d1cb9:	f8e841        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d1cbc:	02ed      	mov.n	a14, a2
400d1cbe:	03fd      	mov.n	a15, a3
400d1cc0:	06d8      	l32i.n	a13, a6, 0
400d1cc2:	4c0c      	movi.n	a12, 4
400d1cc4:	05b8      	l32i.n	a11, a5, 0
400d1cc6:	04ad      	mov.n	a10, a4
400d1cc8:	201110        	or	a1, a1, a1
400d1ccb:	0a4c65        	call8	400dc190 <printf>
    vTaskDelay(10);
400d1cce:	aa0c      	movi.n	a10, 10
400d1cd0:	201110        	or	a1, a1, a1
400d1cd3:	b73aa5        	call8	4008907c <vTaskDelay>
    return duration;
400d1cd6:	30c722        	addi	a2, a7, 48
400d1cd9:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d1cdc:	34c732        	addi	a3, a7, 52
400d1cdf:	20a330        	or	a10, a3, a3
400d1ce2:	201110        	or	a1, a1, a1
400d1ce5:	ff07e5        	call8	400d0d64 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
    return duration;
400d1ce8:	000946        	j	400d1d11 <unsigned int testMult<unsigned int>(char const*, unsigned int)+0x1a5>
400d1ceb:	17c732        	addi	a3, a7, 23
400d1cee:	03ad      	mov.n	a10, a3
400d1cf0:	201110        	or	a1, a1, a1
400d1cf3:	007665        	call8	400d2458 <std::allocator<unsigned int>::~allocator()>
400d1cf6:	02ad      	mov.n	a10, a2
400d1cf8:	201110        	or	a1, a1, a1
400d1cfb:	02fc65        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d1cfe:	34c732        	addi	a3, a7, 52
400d1d01:	03ad      	mov.n	a10, a3
400d1d03:	201110        	or	a1, a1, a1
400d1d06:	ff05e5        	call8	400d0d64 <std::vector<unsigned int, std::allocator<unsigned int> >::~vector()>
400d1d09:	02ad      	mov.n	a10, a2
400d1d0b:	201110        	or	a1, a1, a1
400d1d0e:	02fb25        	call8	400d4cc0 <_Unwind_Resume>
}
400d1d11:	f01d      	retw.n
	...

400d1d14 <unsigned int testMult<unsigned long long>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d1d14:	00e136        	entry	a1, 112
400d1d17:	017d      	mov.n	a7, a1
400d1d19:	67cb      	addi.n	a6, a7, 12
400d1d1b:	0629      	s32i.n	a2, a6, 0
400d1d1d:	278b      	addi.n	a2, a7, 8
400d1d1f:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1d21:	2cc722        	addi	a2, a7, 44
400d1d24:	f8c631        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1d27:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1d29:	1fc722        	addi	a2, a7, 31
400d1d2c:	02ad      	mov.n	a10, a2
400d1d2e:	201110        	or	a1, a1, a1
400d1d31:	0078a5        	call8	400d24bc <std::allocator<unsigned long long>::allocator()>
400d1d34:	1fc762        	addi	a6, a7, 31
400d1d37:	f8c131        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1d3a:	44c722        	addi	a2, a7, 68
400d1d3d:	06cd      	mov.n	a12, a6
400d1d3f:	03bd      	mov.n	a11, a3
400d1d41:	02ad      	mov.n	a10, a2
400d1d43:	201110        	or	a1, a1, a1
400d1d46:	0079e5        	call8	400d24e4 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>
400d1d49:	1fc722        	addi	a2, a7, 31
400d1d4c:	02ad      	mov.n	a10, a2
400d1d4e:	201110        	or	a1, a1, a1
400d1d51:	0077e5        	call8	400d24d0 <std::allocator<unsigned long long>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1d54:	20c722        	addi	a2, a7, 32
400d1d57:	030c      	movi.n	a3, 0
400d1d59:	0239      	s32i.n	a3, a2, 0
400d1d5b:	20c722        	addi	a2, a7, 32
400d1d5e:	0228      	l32i.n	a2, a2, 0
400d1d60:	f8b831        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1d63:	363327        	bltu	a3, a2, 400d1d9d <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x89>
        data[i] = esp_random();
400d1d66:	20c732        	addi	a3, a7, 32
400d1d69:	44c722        	addi	a2, a7, 68
400d1d6c:	03b8      	l32i.n	a11, a3, 0
400d1d6e:	02ad      	mov.n	a10, a2
400d1d70:	201110        	or	a1, a1, a1
400d1d73:	1a3ea5        	call8	400ec15c <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1d76:	0a2d      	mov.n	a2, a10
400d1d78:	201110        	or	a1, a1, a1
400d1d7b:	af0b25        	call8	40080e2c <esp_random>
400d1d7e:	0a3d      	mov.n	a3, a10
400d1d80:	0739      	s32i.n	a3, a7, 0
400d1d82:	080c      	movi.n	a8, 0
400d1d84:	1789      	s32i.n	a8, a7, 4
400d1d86:	0788      	l32i.n	a8, a7, 0
400d1d88:	1798      	l32i.n	a9, a7, 4
400d1d8a:	0289      	s32i.n	a8, a2, 0
400d1d8c:	1299      	s32i.n	a9, a2, 4
    for (size_t i = 0; i < size; ++i)
400d1d8e:	20c722        	addi	a2, a7, 32
400d1d91:	20c732        	addi	a3, a7, 32
400d1d94:	0338      	l32i.n	a3, a3, 0
400d1d96:	331b      	addi.n	a3, a3, 1
400d1d98:	0239      	s32i.n	a3, a2, 0
400d1d9a:	ffef46        	j	400d1d5b <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1d9d:	201110        	or	a1, a1, a1
400d1da0:	af08a5        	call8	40080e2c <esp_random>
400d1da3:	0a3d      	mov.n	a3, a10
400d1da5:	38c722        	addi	a2, a7, 56
400d1da8:	0239      	s32i.n	a3, a2, 0
400d1daa:	030c      	movi.n	a3, 0
400d1dac:	1239      	s32i.n	a3, a2, 4
    const auto start = xTaskGetTickCount();
400d1dae:	201110        	or	a1, a1, a1
400d1db1:	b688a5        	call8	4008863c <xTaskGetTickCount>
400d1db4:	0a3d      	mov.n	a3, a10
400d1db6:	30c722        	addi	a2, a7, 48
400d1db9:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1dbb:	24c722        	addi	a2, a7, 36
400d1dbe:	030c      	movi.n	a3, 0
400d1dc0:	0239      	s32i.n	a3, a2, 0
400d1dc2:	24c722        	addi	a2, a7, 36
400d1dc5:	0228      	l32i.n	a2, a2, 0
400d1dc7:	133c      	movi.n	a3, 49
400d1dc9:	662327        	blt	a3, a2, 400d1e33 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x11f>
        for (size_t i = 0; i < size; ++i)
400d1dcc:	28c722        	addi	a2, a7, 40
400d1dcf:	030c      	movi.n	a3, 0
400d1dd1:	0239      	s32i.n	a3, a2, 0
400d1dd3:	28c722        	addi	a2, a7, 40
400d1dd6:	0228      	l32i.n	a2, a2, 0
400d1dd8:	f89a31        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1ddb:	453327        	bltu	a3, a2, 400d1e24 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x110>
            data[i] *= div;
400d1dde:	28c732        	addi	a3, a7, 40
400d1de1:	44c722        	addi	a2, a7, 68
400d1de4:	03b8      	l32i.n	a11, a3, 0
400d1de6:	02ad      	mov.n	a10, a2
400d1de8:	201110        	or	a1, a1, a1
400d1deb:	1a3725        	call8	400ec15c <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>
400d1dee:	0a8d      	mov.n	a8, a10
400d1df0:	0828      	l32i.n	a2, a8, 0
400d1df2:	1838      	l32i.n	a3, a8, 4
400d1df4:	38c762        	addi	a6, a7, 56
400d1df7:	0698      	l32i.n	a9, a6, 0
400d1df9:	82a930        	mull	a10, a9, a3
400d1dfc:	1698      	l32i.n	a9, a6, 4
400d1dfe:	829920        	mull	a9, a9, a2
400d1e01:	9a9a      	add.n	a9, a10, a9
400d1e03:	0668      	l32i.n	a6, a6, 0
400d1e05:	82a620        	mull	a10, a6, a2
400d1e08:	a25620        	muluh	a5, a6, a2
400d1e0b:	0a4d      	mov.n	a4, a10
400d1e0d:	295a      	add.n	a2, a9, a5
400d1e0f:	025d      	mov.n	a5, a2
400d1e11:	0849      	s32i.n	a4, a8, 0
400d1e13:	1859      	s32i.n	a5, a8, 4
        for (size_t i = 0; i < size; ++i)
400d1e15:	28c722        	addi	a2, a7, 40
400d1e18:	28c732        	addi	a3, a7, 40
400d1e1b:	0338      	l32i.n	a3, a3, 0
400d1e1d:	331b      	addi.n	a3, a3, 1
400d1e1f:	0239      	s32i.n	a3, a2, 0
400d1e21:	ffeb86        	j	400d1dd3 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0xbf>
    for (int x = 0; x < 50; ++x)
400d1e24:	24c722        	addi	a2, a7, 36
400d1e27:	24c732        	addi	a3, a7, 36
400d1e2a:	0338      	l32i.n	a3, a3, 0
400d1e2c:	331b      	addi.n	a3, a3, 1
400d1e2e:	0239      	s32i.n	a3, a2, 0
400d1e30:	ffe386        	j	400d1dc2 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0xae>
    auto duration = xTaskGetTickCount() - start;
400d1e33:	201110        	or	a1, a1, a1
400d1e36:	b68065        	call8	4008863c <xTaskGetTickCount>
400d1e39:	0a4d      	mov.n	a4, a10
400d1e3b:	34c722        	addi	a2, a7, 52
400d1e3e:	30c732        	addi	a3, a7, 48
400d1e41:	0338      	l32i.n	a3, a3, 0
400d1e43:	c03430        	sub	a3, a4, a3
400d1e46:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1e48:	278b      	addi.n	a2, a7, 8
400d1e4a:	0228      	l32i.n	a2, a2, 0
400d1e4c:	92cc      	bnez.n	a2, 400d1e59 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x145>
        base = duration;
400d1e4e:	278b      	addi.n	a2, a7, 8
400d1e50:	34c732        	addi	a3, a7, 52
400d1e53:	002332        	l32i	a3, a3, 0
400d1e56:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d1e59:	34c722        	addi	a2, a7, 52
400d1e5c:	0228      	l32i.n	a2, a2, 0
400d1e5e:	da0200        	ufloat.s	f0, a2, 0
400d1e61:	278b      	addi.n	a2, a7, 8
400d1e63:	0228      	l32i.n	a2, a2, 0
400d1e65:	da1200        	ufloat.s	f1, a2, 0
400d1e68:	fab140        	rfr	a11, f1
400d1e6b:	faa040        	rfr	a10, f0
400d1e6e:	f87681        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d1e71:	0008e0        	callx8	a8
400d1e74:	fa0a50        	wfr	f0, a10
400d1e77:	faa040        	rfr	a10, f0
400d1e7a:	f87481        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d1e7d:	0008e0        	callx8	a8
400d1e80:	0a2d      	mov.n	a2, a10
400d1e82:	0b3d      	mov.n	a3, a11
400d1e84:	34c762        	addi	a6, a7, 52
400d1e87:	57cb      	addi.n	a5, a7, 12
400d1e89:	f87441        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d1e8c:	02ed      	mov.n	a14, a2
400d1e8e:	03fd      	mov.n	a15, a3
400d1e90:	06d8      	l32i.n	a13, a6, 0
400d1e92:	8c0c      	movi.n	a12, 8
400d1e94:	05b8      	l32i.n	a11, a5, 0
400d1e96:	04ad      	mov.n	a10, a4
400d1e98:	201110        	or	a1, a1, a1
400d1e9b:	0a2f65        	call8	400dc190 <printf>
    vTaskDelay(10);
400d1e9e:	aa0c      	movi.n	a10, 10
400d1ea0:	201110        	or	a1, a1, a1
400d1ea3:	b71da5        	call8	4008907c <vTaskDelay>
    return duration;
400d1ea6:	34c722        	addi	a2, a7, 52
400d1ea9:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d1eac:	44c732        	addi	a3, a7, 68
400d1eaf:	20a330        	or	a10, a3, a3
400d1eb2:	201110        	or	a1, a1, a1
400d1eb5:	0067e5        	call8	400d2534 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
    return duration;
400d1eb8:	000946        	j	400d1ee1 <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0x1cd>
400d1ebb:	1fc732        	addi	a3, a7, 31
400d1ebe:	03ad      	mov.n	a10, a3
400d1ec0:	201110        	or	a1, a1, a1
400d1ec3:	0060e5        	call8	400d24d0 <std::allocator<unsigned long long>::~allocator()>
400d1ec6:	02ad      	mov.n	a10, a2
400d1ec8:	201110        	or	a1, a1, a1
400d1ecb:	02df65        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d1ece:	44c732        	addi	a3, a7, 68
400d1ed1:	03ad      	mov.n	a10, a3
400d1ed3:	201110        	or	a1, a1, a1
400d1ed6:	0065e5        	call8	400d2534 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>
400d1ed9:	02ad      	mov.n	a10, a2
400d1edb:	201110        	or	a1, a1, a1
400d1ede:	02de25        	call8	400d4cc0 <_Unwind_Resume>
}
400d1ee1:	f01d      	retw.n
	...

400d1ee4 <unsigned int testMult<float>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d1ee4:	00c136        	entry	a1, 96
400d1ee7:	017d      	mov.n	a7, a1
400d1ee9:	47cb      	addi.n	a4, a7, 12
400d1eeb:	0429      	s32i.n	a2, a4, 0
400d1eed:	278b      	addi.n	a2, a7, 8
400d1eef:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d1ef1:	24c722        	addi	a2, a7, 36
400d1ef4:	f85231        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1ef7:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d1ef9:	17c722        	addi	a2, a7, 23
400d1efc:	02ad      	mov.n	a10, a2
400d1efe:	201110        	or	a1, a1, a1
400d1f01:	0066a5        	call8	400d256c <std::allocator<float>::allocator()>
400d1f04:	17c742        	addi	a4, a7, 23
400d1f07:	f84d31        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d1f0a:	34c722        	addi	a2, a7, 52
400d1f0d:	04cd      	mov.n	a12, a4
400d1f0f:	03bd      	mov.n	a11, a3
400d1f11:	02ad      	mov.n	a10, a2
400d1f13:	201110        	or	a1, a1, a1
400d1f16:	0067e5        	call8	400d2594 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>
400d1f19:	17c722        	addi	a2, a7, 23
400d1f1c:	02ad      	mov.n	a10, a2
400d1f1e:	201110        	or	a1, a1, a1
400d1f21:	0065e5        	call8	400d2580 <std::allocator<float>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d1f24:	18c722        	addi	a2, a7, 24
400d1f27:	030c      	movi.n	a3, 0
400d1f29:	0239      	s32i.n	a3, a2, 0
400d1f2b:	18c722        	addi	a2, a7, 24
400d1f2e:	0228      	l32i.n	a2, a2, 0
400d1f30:	f84431        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1f33:	2e3327        	bltu	a3, a2, 400d1f65 <unsigned int testMult<float>(char const*, unsigned int)+0x81>
        data[i] = esp_random();
400d1f36:	18c732        	addi	a3, a7, 24
400d1f39:	34c722        	addi	a2, a7, 52
400d1f3c:	03b8      	l32i.n	a11, a3, 0
400d1f3e:	02ad      	mov.n	a10, a2
400d1f40:	201110        	or	a1, a1, a1
400d1f43:	1a23a5        	call8	400ec17c <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1f46:	0a2d      	mov.n	a2, a10
400d1f48:	201110        	or	a1, a1, a1
400d1f4b:	aeee25        	call8	40080e2c <esp_random>
400d1f4e:	0a3d      	mov.n	a3, a10
400d1f50:	da0300        	ufloat.s	f0, a3, 0
400d1f53:	004203        	ssi	f0, a2, 0
    for (size_t i = 0; i < size; ++i)
400d1f56:	18c722        	addi	a2, a7, 24
400d1f59:	18c732        	addi	a3, a7, 24
400d1f5c:	0338      	l32i.n	a3, a3, 0
400d1f5e:	331b      	addi.n	a3, a3, 1
400d1f60:	0239      	s32i.n	a3, a2, 0
400d1f62:	fff146        	j	400d1f2b <unsigned int testMult<float>(char const*, unsigned int)+0x47>
    const T div = esp_random();
400d1f65:	201110        	or	a1, a1, a1
400d1f68:	aeec25        	call8	40080e2c <esp_random>
400d1f6b:	0a3d      	mov.n	a3, a10
400d1f6d:	28c722        	addi	a2, a7, 40
400d1f70:	da0300        	ufloat.s	f0, a3, 0
400d1f73:	004203        	ssi	f0, a2, 0
    const auto start = xTaskGetTickCount();
400d1f76:	201110        	or	a1, a1, a1
400d1f79:	b66c25        	call8	4008863c <xTaskGetTickCount>
400d1f7c:	0a3d      	mov.n	a3, a10
400d1f7e:	2cc722        	addi	a2, a7, 44
400d1f81:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d1f83:	1cc722        	addi	a2, a7, 28
400d1f86:	030c      	movi.n	a3, 0
400d1f88:	0239      	s32i.n	a3, a2, 0
400d1f8a:	1cc722        	addi	a2, a7, 28
400d1f8d:	0228      	l32i.n	a2, a2, 0
400d1f8f:	133c      	movi.n	a3, 49
400d1f91:	532327        	blt	a3, a2, 400d1fe8 <unsigned int testMult<float>(char const*, unsigned int)+0x104>
        for (size_t i = 0; i < size; ++i)
400d1f94:	20c722        	addi	a2, a7, 32
400d1f97:	030c      	movi.n	a3, 0
400d1f99:	0239      	s32i.n	a3, a2, 0
400d1f9b:	20c722        	addi	a2, a7, 32
400d1f9e:	0228      	l32i.n	a2, a2, 0
400d1fa0:	f82831        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d1fa3:	313327        	bltu	a3, a2, 400d1fd8 <unsigned int testMult<float>(char const*, unsigned int)+0xf4>
            data[i] *= div;
400d1fa6:	20c732        	addi	a3, a7, 32
400d1fa9:	34c722        	addi	a2, a7, 52
400d1fac:	03b8      	l32i.n	a11, a3, 0
400d1fae:	02ad      	mov.n	a10, a2
400d1fb0:	201110        	or	a1, a1, a1
400d1fb3:	1a1ca5        	call8	400ec17c <std::vector<float, std::allocator<float> >::operator[](unsigned int)>
400d1fb6:	0a2d      	mov.n	a2, a10
400d1fb8:	000213        	lsi	f1, a2, 0
400d1fbb:	28c732        	addi	a3, a7, 40
400d1fbe:	000303        	lsi	f0, a3, 0
400d1fc1:	2a0100        	mul.s	f0, f1, f0
400d1fc4:	004203        	ssi	f0, a2, 0
        for (size_t i = 0; i < size; ++i)
400d1fc7:	20c722        	addi	a2, a7, 32
400d1fca:	20c732        	addi	a3, a7, 32
400d1fcd:	0338      	l32i.n	a3, a3, 0
400d1fcf:	331b      	addi.n	a3, a3, 1
400d1fd1:	0239      	s32i.n	a3, a2, 0
400d1fd3:	fff106        	j	400d1f9b <unsigned int testMult<float>(char const*, unsigned int)+0xb7>
400d1fd6:	220000        	orb	b0, b0, b0
    for (int x = 0; x < 50; ++x)
400d1fd9:	321cc7        	beq	a12, a12, 400d200f <unsigned int testMult<float>(char const*, unsigned int)+0x12b>
400d1fdc:	381cc7        	beq	a12, a12, 400d2018 <unsigned int testMult<float>(char const*, unsigned int)+0x134>
400d1fdf:	331b03        	lsi	f0, a11, 204
400d1fe2:	0239      	s32i.n	a3, a2, 0
400d1fe4:	ffe886        	j	400d1f8a <unsigned int testMult<float>(char const*, unsigned int)+0xa6>
400d1fe7:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d1fea:	652520        	extui	a2, a2, 21, 7
400d1fed:	0a4db6        	bltui	a13, 4, 400d1ffb <unsigned int testMult<float>(char const*, unsigned int)+0x117>
400d1ff0:	30c722        	addi	a2, a7, 48
400d1ff3:	2cc732        	addi	a3, a7, 44
400d1ff6:	0338      	l32i.n	a3, a3, 0
400d1ff8:	c03430        	sub	a3, a4, a3
400d1ffb:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d1ffd:	278b      	addi.n	a2, a7, 8
400d1fff:	0228      	l32i.n	a2, a2, 0
400d2001:	82cc      	bnez.n	a2, 400d200d <unsigned int testMult<float>(char const*, unsigned int)+0x129>
        base = duration;
400d2003:	278b      	addi.n	a2, a7, 8
400d2005:	30c732        	addi	a3, a7, 48
400d2008:	0338      	l32i.n	a3, a3, 0
400d200a:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d200d:	30c722        	addi	a2, a7, 48
400d2010:	0228      	l32i.n	a2, a2, 0
400d2012:	da0200        	ufloat.s	f0, a2, 0
400d2015:	278b      	addi.n	a2, a7, 8
400d2017:	0228      	l32i.n	a2, a2, 0
400d2019:	da1200        	ufloat.s	f1, a2, 0
400d201c:	fab140        	rfr	a11, f1
400d201f:	faa040        	rfr	a10, f0
400d2022:	f80981        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d2025:	0008e0        	callx8	a8
400d2028:	fa0a50        	wfr	f0, a10
400d202b:	faa040        	rfr	a10, f0
400d202e:	f80781        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d2031:	0008e0        	callx8	a8
400d2034:	0a2d      	mov.n	a2, a10
400d2036:	0b3d      	mov.n	a3, a11
400d2038:	30c762        	addi	a6, a7, 48
400d203b:	57cb      	addi.n	a5, a7, 12
400d203d:	f80741        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d2040:	02ed      	mov.n	a14, a2
400d2042:	03fd      	mov.n	a15, a3
400d2044:	06d8      	l32i.n	a13, a6, 0
400d2046:	4c0c      	movi.n	a12, 4
400d2048:	05b8      	l32i.n	a11, a5, 0
400d204a:	04ad      	mov.n	a10, a4
400d204c:	201110        	or	a1, a1, a1
400d204f:	0a1425        	call8	400dc190 <printf>
    vTaskDelay(10);
400d2052:	aa0c      	movi.n	a10, 10
400d2054:	201110        	or	a1, a1, a1
400d2057:	b70265        	call8	4008907c <vTaskDelay>
    return duration;
400d205a:	30c722        	addi	a2, a7, 48
400d205d:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d2060:	34c732        	addi	a3, a7, 52
400d2063:	20a330        	or	a10, a3, a3
400d2066:	201110        	or	a1, a1, a1
400d2069:	0057a5        	call8	400d25e4 <std::vector<float, std::allocator<float> >::~vector()>
    return duration;
400d206c:	000946        	j	400d2095 <unsigned int testMult<float>(char const*, unsigned int)+0x1b1>
400d206f:	17c732        	addi	a3, a7, 23
400d2072:	03ad      	mov.n	a10, a3
400d2074:	201110        	or	a1, a1, a1
400d2077:	0050a5        	call8	400d2580 <std::allocator<float>::~allocator()>
400d207a:	02ad      	mov.n	a10, a2
400d207c:	201110        	or	a1, a1, a1
400d207f:	02c425        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d2082:	34c732        	addi	a3, a7, 52
400d2085:	03ad      	mov.n	a10, a3
400d2087:	201110        	or	a1, a1, a1
400d208a:	0055a5        	call8	400d25e4 <std::vector<float, std::allocator<float> >::~vector()>
400d208d:	02ad      	mov.n	a10, a2
400d208f:	201110        	or	a1, a1, a1
400d2092:	02c2e5        	call8	400d4cc0 <_Unwind_Resume>
}
400d2095:	f01d      	retw.n
	...

400d2098 <unsigned int testMult<double>(char const*, unsigned int)>:
static TickType_t testMult(const char *name, TickType_t base)
400d2098:	00e136        	entry	a1, 112
400d209b:	017d      	mov.n	a7, a1
400d209d:	47cb      	addi.n	a4, a7, 12
400d209f:	0429      	s32i.n	a2, a4, 0
400d20a1:	278b      	addi.n	a2, a7, 8
400d20a3:	0239      	s32i.n	a3, a2, 0
    const size_t size = 8000;
400d20a5:	2cc722        	addi	a2, a7, 44
400d20a8:	f7e531        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d20ab:	0239      	s32i.n	a3, a2, 0
    std::vector<T> data(size);
400d20ad:	1fc722        	addi	a2, a7, 31
400d20b0:	02ad      	mov.n	a10, a2
400d20b2:	201110        	or	a1, a1, a1
400d20b5:	005665        	call8	400d261c <std::allocator<double>::allocator()>
400d20b8:	1fc742        	addi	a4, a7, 31
400d20bb:	f7e031        	l32r	a3, 400d003c <_flash_cache_start+0x24>
400d20be:	44c722        	addi	a2, a7, 68
400d20c1:	04cd      	mov.n	a12, a4
400d20c3:	03bd      	mov.n	a11, a3
400d20c5:	02ad      	mov.n	a10, a2
400d20c7:	201110        	or	a1, a1, a1
400d20ca:	0057a5        	call8	400d2644 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>
400d20cd:	1fc722        	addi	a2, a7, 31
400d20d0:	02ad      	mov.n	a10, a2
400d20d2:	201110        	or	a1, a1, a1
400d20d5:	0055a5        	call8	400d2630 <std::allocator<double>::~allocator()>
    for (size_t i = 0; i < size; ++i)
400d20d8:	20c722        	addi	a2, a7, 32
400d20db:	030c      	movi.n	a3, 0
400d20dd:	0239      	s32i.n	a3, a2, 0
400d20df:	20c722        	addi	a2, a7, 32
400d20e2:	0228      	l32i.n	a2, a2, 0
400d20e4:	f7d731        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d20e7:	3a3327        	bltu	a3, a2, 400d2125 <unsigned int testMult<double>(char const*, unsigned int)+0x8d>
        data[i] = esp_random();
400d20ea:	20c732        	addi	a3, a7, 32
400d20ed:	44c722        	addi	a2, a7, 68
400d20f0:	03b8      	l32i.n	a11, a3, 0
400d20f2:	02ad      	mov.n	a10, a2
400d20f4:	201110        	or	a1, a1, a1
400d20f7:	1a0a65        	call8	400ec19c <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d20fa:	0a4d      	mov.n	a4, a10
400d20fc:	201110        	or	a1, a1, a1
400d20ff:	aed2e5        	call8	40080e2c <esp_random>
400d2102:	0a2d      	mov.n	a2, a10
400d2104:	02ad      	mov.n	a10, a2
400d2106:	f7d381        	l32r	a8, 400d0054 <_flash_cache_start+0x3c>
400d2109:	0008e0        	callx8	a8
400d210c:	0a2d      	mov.n	a2, a10
400d210e:	0b3d      	mov.n	a3, a11
400d2110:	0429      	s32i.n	a2, a4, 0
400d2112:	1439      	s32i.n	a3, a4, 4
    for (size_t i = 0; i < size; ++i)
400d2114:	20c722        	addi	a2, a7, 32
400d2117:	20c732        	addi	a3, a7, 32
400d211a:	0338      	l32i.n	a3, a3, 0
400d211c:	331b      	addi.n	a3, a3, 1
400d211e:	0239      	s32i.n	a3, a2, 0
400d2120:	ffeec6        	j	400d20df <unsigned int testMult<double>(char const*, unsigned int)+0x47>
400d2123:	100000        	and	a0, a0, a0
    const T div = esp_random();
400d2126:	252011        	l32r	a1, 4009b5a8 <_iram_end+0xda54>
400d2129:	2daed0        	lsi	f13, a14, 180
400d212c:	420a      	add.n	a4, a2, a0
400d212e:	ad38c7        	bltu	a8, a12, 400d20df <unsigned int testMult<double>(char const*, unsigned int)+0x47>
400d2131:	c88102        	lsi	f0, a1, 0x320
400d2134:	08e0f7        	bbsi	a0, 15, 400d2140 <unsigned int testMult<double>(char const*, unsigned int)+0xa8>
400d2137:	0a2d00        	add.s	f2, f13, f0
400d213a:	0b3d      	mov.n	a3, a11
400d213c:	0429      	s32i.n	a2, a4, 0
400d213e:	1439      	s32i.n	a3, a4, 4
    const auto start = xTaskGetTickCount();
400d2140:	201110        	or	a1, a1, a1
400d2143:	b64fa5        	call8	4008863c <xTaskGetTickCount>
400d2146:	0a3d      	mov.n	a3, a10
400d2148:	30c722        	addi	a2, a7, 48
400d214b:	0239      	s32i.n	a3, a2, 0
    for (int x = 0; x < 50; ++x)
400d214d:	24c722        	addi	a2, a7, 36
400d2150:	030c      	movi.n	a3, 0
400d2152:	0239      	s32i.n	a3, a2, 0
400d2154:	24c722        	addi	a2, a7, 36
400d2157:	0228      	l32i.n	a2, a2, 0
400d2159:	133c      	movi.n	a3, 49
400d215b:	612327        	blt	a3, a2, 400d21c0 <unsigned int testMult<double>(char const*, unsigned int)+0x128>
        for (size_t i = 0; i < size; ++i)
400d215e:	28c722        	addi	a2, a7, 40
400d2161:	030c      	movi.n	a3, 0
400d2163:	0239      	s32i.n	a3, a2, 0
400d2165:	28c722        	addi	a2, a7, 40
400d2168:	0228      	l32i.n	a2, a2, 0
400d216a:	f7b531        	l32r	a3, 400d0040 <_flash_cache_start+0x28>
400d216d:	3f3327        	bltu	a3, a2, 400d21b0 <unsigned int testMult<double>(char const*, unsigned int)+0x118>
            data[i] *= div;
400d2170:	28c732        	addi	a3, a7, 40
400d2173:	44c722        	addi	a2, a7, 68
400d2176:	03b8      	l32i.n	a11, a3, 0
400d2178:	20a220        	or	a10, a2, a2
400d217b:	201110        	or	a1, a1, a1
400d217e:	1a01e5        	call8	400ec19c <std::vector<double, std::allocator<double> >::operator[](unsigned int)>
400d2181:	0a4d      	mov.n	a4, a10
400d2183:	0428      	l32i.n	a2, a4, 0
400d2185:	1438      	l32i.n	a3, a4, 4
400d2187:	38c752        	addi	a5, a7, 56
400d218a:	05c8      	l32i.n	a12, a5, 0
400d218c:	15d8      	l32i.n	a13, a5, 4
400d218e:	02ad      	mov.n	a10, a2
400d2190:	03bd      	mov.n	a11, a3
400d2192:	f7b381        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400d2195:	0008e0        	callx8	a8
400d2198:	0a2d      	mov.n	a2, a10
400d219a:	0b3d      	mov.n	a3, a11
400d219c:	0429      	s32i.n	a2, a4, 0
400d219e:	1439      	s32i.n	a3, a4, 4
        for (size_t i = 0; i < size; ++i)
400d21a0:	28c722        	addi	a2, a7, 40
400d21a3:	28c732        	addi	a3, a7, 40
400d21a6:	0338      	l32i.n	a3, a3, 0
400d21a8:	331b      	addi.n	a3, a3, 1
400d21aa:	0239      	s32i.n	a3, a2, 0
400d21ac:	ffed46        	j	400d2165 <unsigned int testMult<double>(char const*, unsigned int)+0xcd>
400d21af:	c72200        	lsi	f0, a2, 0x31c
    for (int x = 0; x < 50; ++x)
400d21b2:	c73224        	lsi	f2, a2, 0x31c
400d21b5:	033824        	lsi	f2, a8, 12
400d21b8:	331b      	addi.n	a3, a3, 1
400d21ba:	0239      	s32i.n	a3, a2, 0
400d21bc:	ffe506        	j	400d2154 <unsigned int testMult<double>(char const*, unsigned int)+0xbc>
400d21bf:	111000        	slli	a1, a0, 16
    auto duration = xTaskGetTickCount() - start;
400d21c2:	47a520        	lsi	f2, a5, 0x11c
400d21c5:	0a4db6        	bltui	a13, 4, 400d21d3 <unsigned int testMult<double>(char const*, unsigned int)+0x13b>
400d21c8:	34c722        	addi	a2, a7, 52
400d21cb:	30c732        	addi	a3, a7, 48
400d21ce:	0338      	l32i.n	a3, a3, 0
400d21d0:	c03430        	sub	a3, a4, a3
400d21d3:	0239      	s32i.n	a3, a2, 0
    if (base == 0)
400d21d5:	278b      	addi.n	a2, a7, 8
400d21d7:	0228      	l32i.n	a2, a2, 0
400d21d9:	82cc      	bnez.n	a2, 400d21e5 <unsigned int testMult<double>(char const*, unsigned int)+0x14d>
        base = duration;
400d21db:	278b      	addi.n	a2, a7, 8
400d21dd:	34c732        	addi	a3, a7, 52
400d21e0:	0338      	l32i.n	a3, a3, 0
400d21e2:	006232        	s32i	a3, a2, 0
    printf("%8s (%d) multiply took %4dms - %.2fx\n", name, sizeof(T), duration, float(duration) / float(base));
400d21e5:	34c722        	addi	a2, a7, 52
400d21e8:	0228      	l32i.n	a2, a2, 0
400d21ea:	da0200        	ufloat.s	f0, a2, 0
400d21ed:	278b      	addi.n	a2, a7, 8
400d21ef:	0228      	l32i.n	a2, a2, 0
400d21f1:	da1200        	ufloat.s	f1, a2, 0
400d21f4:	fab140        	rfr	a11, f1
400d21f7:	faa040        	rfr	a10, f0
400d21fa:	f79381        	l32r	a8, 400d0048 <_flash_cache_start+0x30>
400d21fd:	0008e0        	callx8	a8
400d2200:	fa0a50        	wfr	f0, a10
400d2203:	faa040        	rfr	a10, f0
400d2206:	f79181        	l32r	a8, 400d004c <_flash_cache_start+0x34>
400d2209:	0008e0        	callx8	a8
400d220c:	0a2d      	mov.n	a2, a10
400d220e:	0b3d      	mov.n	a3, a11
400d2210:	34c762        	addi	a6, a7, 52
400d2213:	57cb      	addi.n	a5, a7, 12
400d2215:	f79141        	l32r	a4, 400d005c <_flash_cache_start+0x44>
400d2218:	02ed      	mov.n	a14, a2
400d221a:	03fd      	mov.n	a15, a3
400d221c:	06d8      	l32i.n	a13, a6, 0
400d221e:	8c0c      	movi.n	a12, 8
400d2220:	05b8      	l32i.n	a11, a5, 0
400d2222:	04ad      	mov.n	a10, a4
400d2224:	201110        	or	a1, a1, a1
400d2227:	09f6a5        	call8	400dc190 <printf>
    vTaskDelay(10);
400d222a:	aa0c      	movi.n	a10, 10
400d222c:	201110        	or	a1, a1, a1
400d222f:	b6e4e5        	call8	4008907c <vTaskDelay>
    return duration;
400d2232:	34c722        	addi	a2, a7, 52
400d2235:	002222        	l32i	a2, a2, 0
    std::vector<T> data(size);
400d2238:	44c732        	addi	a3, a7, 68
400d223b:	20a330        	or	a10, a3, a3
400d223e:	201110        	or	a1, a1, a1
400d2241:	004525        	call8	400d2694 <std::vector<double, std::allocator<double> >::~vector()>
    return duration;
400d2244:	000946        	j	400d226d <unsigned int testMult<double>(char const*, unsigned int)+0x1d5>
400d2247:	1fc732        	addi	a3, a7, 31
400d224a:	03ad      	mov.n	a10, a3
400d224c:	201110        	or	a1, a1, a1
400d224f:	003e25        	call8	400d2630 <std::allocator<double>::~allocator()>
400d2252:	02ad      	mov.n	a10, a2
400d2254:	201110        	or	a1, a1, a1
400d2257:	02a6a5        	call8	400d4cc0 <_Unwind_Resume>
    std::vector<T> data(size);
400d225a:	44c732        	addi	a3, a7, 68
400d225d:	03ad      	mov.n	a10, a3
400d225f:	201110        	or	a1, a1, a1
400d2262:	004325        	call8	400d2694 <std::vector<double, std::allocator<double> >::~vector()>
400d2265:	02ad      	mov.n	a10, a2
400d2267:	201110        	or	a1, a1, a1
400d226a:	02a565        	call8	400d4cc0 <_Unwind_Resume>
}
400d226d:	f01d      	retw.n
	...

400d2270 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2270:	006136        	entry	a1, 48
400d2273:	017d      	mov.n	a7, a1
400d2275:	37cb      	addi.n	a3, a7, 12
400d2277:	0329      	s32i.n	a2, a3, 0
400d2279:	27cb      	addi.n	a2, a7, 12
400d227b:	02a8      	l32i.n	a10, a2, 0
400d227d:	001da5        	call8	400d2458 <std::allocator<unsigned int>::~allocator()>
400d2280:	f03d      	nop.n
400d2282:	f01d      	retw.n

400d2284 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2284:	006136        	entry	a1, 48
400d2287:	207110        	or	a7, a1, a1
400d228a:	0cc732        	addi	a3, a7, 12
400d228d:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d228f:	27cb      	addi.n	a2, a7, 12
400d2291:	0228      	l32i.n	a2, a2, 0
400d2293:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2295:	27cb      	addi.n	a2, a7, 12
400d2297:	0228      	l32i.n	a2, a2, 0
400d2299:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d229b:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d229d:	27cb      	addi.n	a2, a7, 12
400d229f:	0228      	l32i.n	a2, a2, 0
400d22a1:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d22a3:	c02420        	sub	a2, a4, a2
400d22a6:	212220        	srai	a2, a2, 2
400d22a9:	024d      	mov.n	a4, a2
400d22ab:	27cb      	addi.n	a2, a7, 12
400d22ad:	04cd      	mov.n	a12, a4
400d22af:	03bd      	mov.n	a11, a3
400d22b1:	0022a2        	l32i	a10, a2, 0
400d22b4:	004165        	call8	400d26cc <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)>
		      - this->_M_impl._M_start); }
400d22b7:	27cb      	addi.n	a2, a7, 12
400d22b9:	0228      	l32i.n	a2, a2, 0
400d22bb:	02ad      	mov.n	a10, a2
400d22bd:	fffb25        	call8	400d2270 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>
400d22c0:	f03d      	nop.n
400d22c2:	f01d      	retw.n

400d22c4 <void std::_Destroy<unsigned int*, unsigned int>(unsigned int*, unsigned int*, std::allocator<unsigned int>&)>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d22c4:	006136        	entry	a1, 48
400d22c7:	017d      	mov.n	a7, a1
400d22c9:	57cb      	addi.n	a5, a7, 12
400d22cb:	0529      	s32i.n	a2, a5, 0
400d22cd:	278b      	addi.n	a2, a7, 8
400d22cf:	0239      	s32i.n	a3, a2, 0
400d22d1:	274b      	addi.n	a2, a7, 4
400d22d3:	0249      	s32i.n	a4, a2, 0
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
400d22d5:	378b      	addi.n	a3, a7, 8
400d22d7:	27cb      	addi.n	a2, a7, 12
400d22d9:	03b8      	l32i.n	a11, a3, 0
400d22db:	02a8      	l32i.n	a10, a2, 0
400d22dd:	0041a5        	call8	400d26f8 <void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)>
    }
400d22e0:	f03d      	nop.n
400d22e2:	f01d      	retw.n

400d22e4 <std::allocator<unsigned char>::allocator()>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 2103. std::allocator propagate_on_container_move_assignment
      typedef true_type propagate_on_container_move_assignment;
#endif

      allocator() throw() { }
400d22e4:	006136        	entry	a1, 48
400d22e7:	017d      	mov.n	a7, a1
400d22e9:	37cb      	addi.n	a3, a7, 12
400d22eb:	0329      	s32i.n	a2, a3, 0
400d22ed:	27cb      	addi.n	a2, a7, 12
400d22ef:	02a8      	l32i.n	a10, a2, 0
400d22f1:	19eca5        	call8	400ec1bc <__gnu_cxx::new_allocator<unsigned char>::new_allocator()>
400d22f4:	f03d      	nop.n
400d22f6:	f01d      	retw.n

400d22f8 <std::allocator<unsigned char>::~allocator()>:
      : __allocator_base<_Tp>(__a) { }

      template<typename _Tp1>
        allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }
400d22f8:	006136        	entry	a1, 48
400d22fb:	017d      	mov.n	a7, a1
400d22fd:	37cb      	addi.n	a3, a7, 12
400d22ff:	0329      	s32i.n	a2, a3, 0
400d2301:	27cb      	addi.n	a2, a7, 12
400d2303:	02a8      	l32i.n	a10, a2, 0
400d2305:	19ec65        	call8	400ec1cc <__gnu_cxx::new_allocator<unsigned char>::~new_allocator()>
400d2308:	f03d      	nop.n
400d230a:	f01d      	retw.n

400d230c <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d230c:	006136        	entry	a1, 48
400d230f:	017d      	mov.n	a7, a1
400d2311:	57cb      	addi.n	a5, a7, 12
400d2313:	0529      	s32i.n	a2, a5, 0
400d2315:	278b      	addi.n	a2, a7, 8
400d2317:	0239      	s32i.n	a3, a2, 0
400d2319:	274b      	addi.n	a2, a7, 4
400d231b:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d231d:	27cb      	addi.n	a2, a7, 12
400d231f:	0228      	l32i.n	a2, a2, 0
400d2321:	474b      	addi.n	a4, a7, 4
400d2323:	378b      	addi.n	a3, a7, 8
400d2325:	04c8      	l32i.n	a12, a4, 0
400d2327:	03b8      	l32i.n	a11, a3, 0
400d2329:	20a220        	or	a10, a2, a2
400d232c:	201110        	or	a1, a1, a1
400d232f:	003fa5        	call8	400d2728 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)>
      { _M_default_initialize(__n); }
400d2332:	378b      	addi.n	a3, a7, 8
400d2334:	27cb      	addi.n	a2, a7, 12
400d2336:	03b8      	l32i.n	a11, a3, 0
400d2338:	02a8      	l32i.n	a10, a2, 0
400d233a:	201110        	or	a1, a1, a1
400d233d:	004725        	call8	400d27b0 <std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_initialize(unsigned int)>
400d2340:	000506        	j	400d2358 <std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned int, std::allocator<unsigned char> const&)+0x4c>
400d2343:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d2346:	0338      	l32i.n	a3, a3, 0
400d2348:	03ad      	mov.n	a10, a3
400d234a:	201110        	or	a1, a1, a1
400d234d:	004265        	call8	400d2774 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>
400d2350:	02ad      	mov.n	a10, a2
400d2352:	201110        	or	a1, a1, a1
400d2355:	0296a5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2358:	f01d      	retw.n
	...

400d235c <std::vector<unsigned char, std::allocator<unsigned char> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d235c:	006136        	entry	a1, 48
400d235f:	207110        	or	a7, a1, a1
400d2362:	37cb      	addi.n	a3, a7, 12
400d2364:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2366:	27cb      	addi.n	a2, a7, 12
400d2368:	0228      	l32i.n	a2, a2, 0
400d236a:	0228      	l32i.n	a2, a2, 0
400d236c:	37cb      	addi.n	a3, a7, 12
400d236e:	0338      	l32i.n	a3, a3, 0
400d2370:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d2372:	47cb      	addi.n	a4, a7, 12
400d2374:	0448      	l32i.n	a4, a4, 0
400d2376:	20a440        	or	a10, a4, a4
400d2379:	19e625        	call8	400ec1dc <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>
400d237c:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d237e:	04cd      	mov.n	a12, a4
400d2380:	03bd      	mov.n	a11, a3
400d2382:	02ad      	mov.n	a10, a2
400d2384:	004625        	call8	400d27e8 <void std::_Destroy<unsigned char*, unsigned char>(unsigned char*, unsigned char*, std::allocator<unsigned char>&)>
		      _M_get_Tp_allocator()); }
400d2387:	27cb      	addi.n	a2, a7, 12
400d2389:	0228      	l32i.n	a2, a2, 0
400d238b:	02ad      	mov.n	a10, a2
400d238d:	003e65        	call8	400d2774 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>
400d2390:	f03d      	nop.n
400d2392:	f01d      	retw.n

400d2394 <std::allocator<unsigned short>::allocator()>:
      allocator() throw() { }
400d2394:	006136        	entry	a1, 48
400d2397:	017d      	mov.n	a7, a1
400d2399:	37cb      	addi.n	a3, a7, 12
400d239b:	0329      	s32i.n	a2, a3, 0
400d239d:	27cb      	addi.n	a2, a7, 12
400d239f:	02a8      	l32i.n	a10, a2, 0
400d23a1:	19e4a5        	call8	400ec1ec <__gnu_cxx::new_allocator<unsigned short>::new_allocator()>
400d23a4:	f03d      	nop.n
400d23a6:	f01d      	retw.n

400d23a8 <std::allocator<unsigned short>::~allocator()>:
      ~allocator() throw() { }
400d23a8:	006136        	entry	a1, 48
400d23ab:	017d      	mov.n	a7, a1
400d23ad:	37cb      	addi.n	a3, a7, 12
400d23af:	0329      	s32i.n	a2, a3, 0
400d23b1:	27cb      	addi.n	a2, a7, 12
400d23b3:	02a8      	l32i.n	a10, a2, 0
400d23b5:	19e465        	call8	400ec1fc <__gnu_cxx::new_allocator<unsigned short>::~new_allocator()>
400d23b8:	f03d      	nop.n
400d23ba:	f01d      	retw.n

400d23bc <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d23bc:	006136        	entry	a1, 48
400d23bf:	017d      	mov.n	a7, a1
400d23c1:	57cb      	addi.n	a5, a7, 12
400d23c3:	0529      	s32i.n	a2, a5, 0
400d23c5:	278b      	addi.n	a2, a7, 8
400d23c7:	0239      	s32i.n	a3, a2, 0
400d23c9:	274b      	addi.n	a2, a7, 4
400d23cb:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d23cd:	27cb      	addi.n	a2, a7, 12
400d23cf:	0228      	l32i.n	a2, a2, 0
400d23d1:	474b      	addi.n	a4, a7, 4
400d23d3:	378b      	addi.n	a3, a7, 8
400d23d5:	04c8      	l32i.n	a12, a4, 0
400d23d7:	03b8      	l32i.n	a11, a3, 0
400d23d9:	20a220        	or	a10, a2, a2
400d23dc:	201110        	or	a1, a1, a1
400d23df:	0043e5        	call8	400d281c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)>
      { _M_default_initialize(__n); }
400d23e2:	378b      	addi.n	a3, a7, 8
400d23e4:	27cb      	addi.n	a2, a7, 12
400d23e6:	03b8      	l32i.n	a11, a3, 0
400d23e8:	02a8      	l32i.n	a10, a2, 0
400d23ea:	201110        	or	a1, a1, a1
400d23ed:	004ba5        	call8	400d28a8 <std::vector<unsigned short, std::allocator<unsigned short> >::_M_default_initialize(unsigned int)>
400d23f0:	000506        	j	400d2408 <std::vector<unsigned short, std::allocator<unsigned short> >::vector(unsigned int, std::allocator<unsigned short> const&)+0x4c>
400d23f3:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d23f6:	0338      	l32i.n	a3, a3, 0
400d23f8:	03ad      	mov.n	a10, a3
400d23fa:	201110        	or	a1, a1, a1
400d23fd:	0046a5        	call8	400d2868 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>
400d2400:	02ad      	mov.n	a10, a2
400d2402:	201110        	or	a1, a1, a1
400d2405:	028ba5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2408:	f01d      	retw.n
	...

400d240c <std::vector<unsigned short, std::allocator<unsigned short> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d240c:	006136        	entry	a1, 48
400d240f:	207110        	or	a7, a1, a1
400d2412:	37cb      	addi.n	a3, a7, 12
400d2414:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2416:	27cb      	addi.n	a2, a7, 12
400d2418:	0228      	l32i.n	a2, a2, 0
400d241a:	0228      	l32i.n	a2, a2, 0
400d241c:	37cb      	addi.n	a3, a7, 12
400d241e:	0338      	l32i.n	a3, a3, 0
400d2420:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d2422:	47cb      	addi.n	a4, a7, 12
400d2424:	0448      	l32i.n	a4, a4, 0
400d2426:	20a440        	or	a10, a4, a4
400d2429:	19de25        	call8	400ec20c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>
400d242c:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d242e:	04cd      	mov.n	a12, a4
400d2430:	03bd      	mov.n	a11, a3
400d2432:	02ad      	mov.n	a10, a2
400d2434:	004aa5        	call8	400d28e0 <void std::_Destroy<unsigned short*, unsigned short>(unsigned short*, unsigned short*, std::allocator<unsigned short>&)>
		      _M_get_Tp_allocator()); }
400d2437:	27cb      	addi.n	a2, a7, 12
400d2439:	0228      	l32i.n	a2, a2, 0
400d243b:	02ad      	mov.n	a10, a2
400d243d:	0042a5        	call8	400d2868 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>
400d2440:	f03d      	nop.n
400d2442:	f01d      	retw.n

400d2444 <std::allocator<unsigned int>::allocator()>:
      allocator() throw() { }
400d2444:	006136        	entry	a1, 48
400d2447:	017d      	mov.n	a7, a1
400d2449:	37cb      	addi.n	a3, a7, 12
400d244b:	0329      	s32i.n	a2, a3, 0
400d244d:	27cb      	addi.n	a2, a7, 12
400d244f:	02a8      	l32i.n	a10, a2, 0
400d2451:	19dca5        	call8	400ec21c <__gnu_cxx::new_allocator<unsigned int>::new_allocator()>
400d2454:	f03d      	nop.n
400d2456:	f01d      	retw.n

400d2458 <std::allocator<unsigned int>::~allocator()>:
      ~allocator() throw() { }
400d2458:	006136        	entry	a1, 48
400d245b:	017d      	mov.n	a7, a1
400d245d:	37cb      	addi.n	a3, a7, 12
400d245f:	0329      	s32i.n	a2, a3, 0
400d2461:	27cb      	addi.n	a2, a7, 12
400d2463:	02a8      	l32i.n	a10, a2, 0
400d2465:	19dc65        	call8	400ec22c <__gnu_cxx::new_allocator<unsigned int>::~new_allocator()>
400d2468:	f03d      	nop.n
400d246a:	f01d      	retw.n

400d246c <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d246c:	006136        	entry	a1, 48
400d246f:	017d      	mov.n	a7, a1
400d2471:	57cb      	addi.n	a5, a7, 12
400d2473:	0529      	s32i.n	a2, a5, 0
400d2475:	278b      	addi.n	a2, a7, 8
400d2477:	0239      	s32i.n	a3, a2, 0
400d2479:	274b      	addi.n	a2, a7, 4
400d247b:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d247d:	27cb      	addi.n	a2, a7, 12
400d247f:	0228      	l32i.n	a2, a2, 0
400d2481:	474b      	addi.n	a4, a7, 4
400d2483:	378b      	addi.n	a3, a7, 8
400d2485:	04c8      	l32i.n	a12, a4, 0
400d2487:	03b8      	l32i.n	a11, a3, 0
400d2489:	20a220        	or	a10, a2, a2
400d248c:	201110        	or	a1, a1, a1
400d248f:	004725        	call8	400d2900 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)>
      { _M_default_initialize(__n); }
400d2492:	378b      	addi.n	a3, a7, 8
400d2494:	27cb      	addi.n	a2, a7, 12
400d2496:	03b8      	l32i.n	a11, a3, 0
400d2498:	02a8      	l32i.n	a10, a2, 0
400d249a:	201110        	or	a1, a1, a1
400d249d:	004ae5        	call8	400d294c <std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned int)>
400d24a0:	000506        	j	400d24b8 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)+0x4c>
400d24a3:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d24a6:	0338      	l32i.n	a3, a3, 0
400d24a8:	03ad      	mov.n	a10, a3
400d24aa:	201110        	or	a1, a1, a1
400d24ad:	ffdd65        	call8	400d2284 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()>
400d24b0:	02ad      	mov.n	a10, a2
400d24b2:	201110        	or	a1, a1, a1
400d24b5:	0280a5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d24b8:	f01d      	retw.n
	...

400d24bc <std::allocator<unsigned long long>::allocator()>:
      allocator() throw() { }
400d24bc:	006136        	entry	a1, 48
400d24bf:	017d      	mov.n	a7, a1
400d24c1:	37cb      	addi.n	a3, a7, 12
400d24c3:	0329      	s32i.n	a2, a3, 0
400d24c5:	27cb      	addi.n	a2, a7, 12
400d24c7:	02a8      	l32i.n	a10, a2, 0
400d24c9:	19d725        	call8	400ec23c <__gnu_cxx::new_allocator<unsigned long long>::new_allocator()>
400d24cc:	f03d      	nop.n
400d24ce:	f01d      	retw.n

400d24d0 <std::allocator<unsigned long long>::~allocator()>:
      ~allocator() throw() { }
400d24d0:	006136        	entry	a1, 48
400d24d3:	017d      	mov.n	a7, a1
400d24d5:	37cb      	addi.n	a3, a7, 12
400d24d7:	0329      	s32i.n	a2, a3, 0
400d24d9:	27cb      	addi.n	a2, a7, 12
400d24db:	02a8      	l32i.n	a10, a2, 0
400d24dd:	19d6e5        	call8	400ec24c <__gnu_cxx::new_allocator<unsigned long long>::~new_allocator()>
400d24e0:	f03d      	nop.n
400d24e2:	f01d      	retw.n

400d24e4 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d24e4:	006136        	entry	a1, 48
400d24e7:	017d      	mov.n	a7, a1
400d24e9:	57cb      	addi.n	a5, a7, 12
400d24eb:	0529      	s32i.n	a2, a5, 0
400d24ed:	278b      	addi.n	a2, a7, 8
400d24ef:	0239      	s32i.n	a3, a2, 0
400d24f1:	274b      	addi.n	a2, a7, 4
400d24f3:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d24f5:	27cb      	addi.n	a2, a7, 12
400d24f7:	0228      	l32i.n	a2, a2, 0
400d24f9:	474b      	addi.n	a4, a7, 4
400d24fb:	378b      	addi.n	a3, a7, 8
400d24fd:	04c8      	l32i.n	a12, a4, 0
400d24ff:	03b8      	l32i.n	a11, a3, 0
400d2501:	20a220        	or	a10, a2, a2
400d2504:	201110        	or	a1, a1, a1
400d2507:	004925        	call8	400d2998 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)>
      { _M_default_initialize(__n); }
400d250a:	378b      	addi.n	a3, a7, 8
400d250c:	27cb      	addi.n	a2, a7, 12
400d250e:	03b8      	l32i.n	a11, a3, 0
400d2510:	02a8      	l32i.n	a10, a2, 0
400d2512:	201110        	or	a1, a1, a1
400d2515:	0050e5        	call8	400d2a24 <std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_default_initialize(unsigned int)>
400d2518:	000506        	j	400d2530 <std::vector<unsigned long long, std::allocator<unsigned long long> >::vector(unsigned int, std::allocator<unsigned long long> const&)+0x4c>
400d251b:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d251e:	0338      	l32i.n	a3, a3, 0
400d2520:	03ad      	mov.n	a10, a3
400d2522:	201110        	or	a1, a1, a1
400d2525:	004be5        	call8	400d29e4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>
400d2528:	02ad      	mov.n	a10, a2
400d252a:	201110        	or	a1, a1, a1
400d252d:	027925        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2530:	f01d      	retw.n
	...

400d2534 <std::vector<unsigned long long, std::allocator<unsigned long long> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d2534:	006136        	entry	a1, 48
400d2537:	207110        	or	a7, a1, a1
400d253a:	37cb      	addi.n	a3, a7, 12
400d253c:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d253e:	27cb      	addi.n	a2, a7, 12
400d2540:	0228      	l32i.n	a2, a2, 0
400d2542:	0228      	l32i.n	a2, a2, 0
400d2544:	37cb      	addi.n	a3, a7, 12
400d2546:	0338      	l32i.n	a3, a3, 0
400d2548:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d254a:	47cb      	addi.n	a4, a7, 12
400d254c:	0448      	l32i.n	a4, a4, 0
400d254e:	20a440        	or	a10, a4, a4
400d2551:	19d0a5        	call8	400ec25c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>
400d2554:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2556:	04cd      	mov.n	a12, a4
400d2558:	03bd      	mov.n	a11, a3
400d255a:	02ad      	mov.n	a10, a2
400d255c:	004fe5        	call8	400d2a5c <void std::_Destroy<unsigned long long*, unsigned long long>(unsigned long long*, unsigned long long*, std::allocator<unsigned long long>&)>
		      _M_get_Tp_allocator()); }
400d255f:	27cb      	addi.n	a2, a7, 12
400d2561:	0228      	l32i.n	a2, a2, 0
400d2563:	02ad      	mov.n	a10, a2
400d2565:	0047e5        	call8	400d29e4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>
400d2568:	f03d      	nop.n
400d256a:	f01d      	retw.n

400d256c <std::allocator<float>::allocator()>:
      allocator() throw() { }
400d256c:	006136        	entry	a1, 48
400d256f:	017d      	mov.n	a7, a1
400d2571:	37cb      	addi.n	a3, a7, 12
400d2573:	0329      	s32i.n	a2, a3, 0
400d2575:	27cb      	addi.n	a2, a7, 12
400d2577:	02a8      	l32i.n	a10, a2, 0
400d2579:	19cf25        	call8	400ec26c <__gnu_cxx::new_allocator<float>::new_allocator()>
400d257c:	f03d      	nop.n
400d257e:	f01d      	retw.n

400d2580 <std::allocator<float>::~allocator()>:
      ~allocator() throw() { }
400d2580:	006136        	entry	a1, 48
400d2583:	017d      	mov.n	a7, a1
400d2585:	37cb      	addi.n	a3, a7, 12
400d2587:	0329      	s32i.n	a2, a3, 0
400d2589:	27cb      	addi.n	a2, a7, 12
400d258b:	02a8      	l32i.n	a10, a2, 0
400d258d:	19cee5        	call8	400ec27c <__gnu_cxx::new_allocator<float>::~new_allocator()>
400d2590:	f03d      	nop.n
400d2592:	f01d      	retw.n

400d2594 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d2594:	006136        	entry	a1, 48
400d2597:	017d      	mov.n	a7, a1
400d2599:	57cb      	addi.n	a5, a7, 12
400d259b:	0529      	s32i.n	a2, a5, 0
400d259d:	278b      	addi.n	a2, a7, 8
400d259f:	0239      	s32i.n	a3, a2, 0
400d25a1:	274b      	addi.n	a2, a7, 4
400d25a3:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d25a5:	27cb      	addi.n	a2, a7, 12
400d25a7:	0228      	l32i.n	a2, a2, 0
400d25a9:	474b      	addi.n	a4, a7, 4
400d25ab:	378b      	addi.n	a3, a7, 8
400d25ad:	04c8      	l32i.n	a12, a4, 0
400d25af:	03b8      	l32i.n	a11, a3, 0
400d25b1:	20a220        	or	a10, a2, a2
400d25b4:	201110        	or	a1, a1, a1
400d25b7:	004da5        	call8	400d2a90 <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)>
      { _M_default_initialize(__n); }
400d25ba:	378b      	addi.n	a3, a7, 8
400d25bc:	27cb      	addi.n	a2, a7, 12
400d25be:	03b8      	l32i.n	a11, a3, 0
400d25c0:	02a8      	l32i.n	a10, a2, 0
400d25c2:	201110        	or	a1, a1, a1
400d25c5:	005565        	call8	400d2b1c <std::vector<float, std::allocator<float> >::_M_default_initialize(unsigned int)>
400d25c8:	000506        	j	400d25e0 <std::vector<float, std::allocator<float> >::vector(unsigned int, std::allocator<float> const&)+0x4c>
400d25cb:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d25ce:	0338      	l32i.n	a3, a3, 0
400d25d0:	03ad      	mov.n	a10, a3
400d25d2:	201110        	or	a1, a1, a1
400d25d5:	005065        	call8	400d2adc <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
400d25d8:	02ad      	mov.n	a10, a2
400d25da:	201110        	or	a1, a1, a1
400d25dd:	026e25        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d25e0:	f01d      	retw.n
	...

400d25e4 <std::vector<float, std::allocator<float> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d25e4:	006136        	entry	a1, 48
400d25e7:	207110        	or	a7, a1, a1
400d25ea:	37cb      	addi.n	a3, a7, 12
400d25ec:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d25ee:	27cb      	addi.n	a2, a7, 12
400d25f0:	0228      	l32i.n	a2, a2, 0
400d25f2:	0228      	l32i.n	a2, a2, 0
400d25f4:	37cb      	addi.n	a3, a7, 12
400d25f6:	0338      	l32i.n	a3, a3, 0
400d25f8:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d25fa:	47cb      	addi.n	a4, a7, 12
400d25fc:	0448      	l32i.n	a4, a4, 0
400d25fe:	20a440        	or	a10, a4, a4
400d2601:	19c8a5        	call8	400ec28c <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>
400d2604:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d2606:	04cd      	mov.n	a12, a4
400d2608:	03bd      	mov.n	a11, a3
400d260a:	02ad      	mov.n	a10, a2
400d260c:	005465        	call8	400d2b54 <void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)>
		      _M_get_Tp_allocator()); }
400d260f:	27cb      	addi.n	a2, a7, 12
400d2611:	0228      	l32i.n	a2, a2, 0
400d2613:	02ad      	mov.n	a10, a2
400d2615:	004c65        	call8	400d2adc <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>
400d2618:	f03d      	nop.n
400d261a:	f01d      	retw.n

400d261c <std::allocator<double>::allocator()>:
      allocator() throw() { }
400d261c:	006136        	entry	a1, 48
400d261f:	017d      	mov.n	a7, a1
400d2621:	37cb      	addi.n	a3, a7, 12
400d2623:	0329      	s32i.n	a2, a3, 0
400d2625:	27cb      	addi.n	a2, a7, 12
400d2627:	02a8      	l32i.n	a10, a2, 0
400d2629:	19c725        	call8	400ec29c <__gnu_cxx::new_allocator<double>::new_allocator()>
400d262c:	f03d      	nop.n
400d262e:	f01d      	retw.n

400d2630 <std::allocator<double>::~allocator()>:
      ~allocator() throw() { }
400d2630:	006136        	entry	a1, 48
400d2633:	017d      	mov.n	a7, a1
400d2635:	37cb      	addi.n	a3, a7, 12
400d2637:	0329      	s32i.n	a2, a3, 0
400d2639:	27cb      	addi.n	a2, a7, 12
400d263b:	02a8      	l32i.n	a10, a2, 0
400d263d:	19c6e5        	call8	400ec2ac <__gnu_cxx::new_allocator<double>::~new_allocator()>
400d2640:	f03d      	nop.n
400d2642:	f01d      	retw.n

400d2644 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
400d2644:	006136        	entry	a1, 48
400d2647:	017d      	mov.n	a7, a1
400d2649:	57cb      	addi.n	a5, a7, 12
400d264b:	0529      	s32i.n	a2, a5, 0
400d264d:	278b      	addi.n	a2, a7, 8
400d264f:	0239      	s32i.n	a3, a2, 0
400d2651:	274b      	addi.n	a2, a7, 4
400d2653:	0249      	s32i.n	a4, a2, 0
      : _Base(__n, __a)
400d2655:	27cb      	addi.n	a2, a7, 12
400d2657:	0228      	l32i.n	a2, a2, 0
400d2659:	474b      	addi.n	a4, a7, 4
400d265b:	378b      	addi.n	a3, a7, 8
400d265d:	04c8      	l32i.n	a12, a4, 0
400d265f:	03b8      	l32i.n	a11, a3, 0
400d2661:	20a220        	or	a10, a2, a2
400d2664:	201110        	or	a1, a1, a1
400d2667:	005225        	call8	400d2b88 <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)>
      { _M_default_initialize(__n); }
400d266a:	378b      	addi.n	a3, a7, 8
400d266c:	27cb      	addi.n	a2, a7, 12
400d266e:	03b8      	l32i.n	a11, a3, 0
400d2670:	02a8      	l32i.n	a10, a2, 0
400d2672:	201110        	or	a1, a1, a1
400d2675:	0059e5        	call8	400d2c14 <std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned int)>
400d2678:	000506        	j	400d2690 <std::vector<double, std::allocator<double> >::vector(unsigned int, std::allocator<double> const&)+0x4c>
400d267b:	37cb00        	lsi	f0, a11, 220
      : _Base(__n, __a)
400d267e:	0338      	l32i.n	a3, a3, 0
400d2680:	03ad      	mov.n	a10, a3
400d2682:	201110        	or	a1, a1, a1
400d2685:	0054e5        	call8	400d2bd4 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>
400d2688:	02ad      	mov.n	a10, a2
400d268a:	201110        	or	a1, a1, a1
400d268d:	026325        	call8	400d4cc0 <_Unwind_Resume>
      { _M_default_initialize(__n); }
400d2690:	f01d      	retw.n
	...

400d2694 <std::vector<double, std::allocator<double> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
400d2694:	006136        	entry	a1, 48
400d2697:	207110        	or	a7, a1, a1
400d269a:	37cb      	addi.n	a3, a7, 12
400d269c:	0329      	s32i.n	a2, a3, 0
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d269e:	27cb      	addi.n	a2, a7, 12
400d26a0:	0228      	l32i.n	a2, a2, 0
400d26a2:	0228      	l32i.n	a2, a2, 0
400d26a4:	37cb      	addi.n	a3, a7, 12
400d26a6:	0338      	l32i.n	a3, a3, 0
400d26a8:	1338      	l32i.n	a3, a3, 4
		      _M_get_Tp_allocator()); }
400d26aa:	47cb      	addi.n	a4, a7, 12
400d26ac:	0448      	l32i.n	a4, a4, 0
400d26ae:	20a440        	or	a10, a4, a4
400d26b1:	19c0a5        	call8	400ec2bc <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>
400d26b4:	0a4d      	mov.n	a4, a10
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
400d26b6:	04cd      	mov.n	a12, a4
400d26b8:	03bd      	mov.n	a11, a3
400d26ba:	02ad      	mov.n	a10, a2
400d26bc:	0058e5        	call8	400d2c4c <void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)>
		      _M_get_Tp_allocator()); }
400d26bf:	27cb      	addi.n	a2, a7, 12
400d26c1:	0228      	l32i.n	a2, a2, 0
400d26c3:	02ad      	mov.n	a10, a2
400d26c5:	0050e5        	call8	400d2bd4 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>
400d26c8:	f03d      	nop.n
400d26ca:	f01d      	retw.n

400d26cc <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d26cc:	006136        	entry	a1, 48
400d26cf:	017d      	mov.n	a7, a1
400d26d1:	57cb      	addi.n	a5, a7, 12
400d26d3:	0529      	s32i.n	a2, a5, 0
400d26d5:	278b      	addi.n	a2, a7, 8
400d26d7:	0239      	s32i.n	a3, a2, 0
400d26d9:	274b      	addi.n	a2, a7, 4
400d26db:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d26dd:	278b      	addi.n	a2, a7, 8
400d26df:	0228      	l32i.n	a2, a2, 0
400d26e1:	f28c      	beqz.n	a2, 400d26f4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d26e3:	27cb      	addi.n	a2, a7, 12
400d26e5:	0228      	l32i.n	a2, a2, 0
400d26e7:	474b      	addi.n	a4, a7, 4
400d26e9:	378b      	addi.n	a3, a7, 8
400d26eb:	04c8      	l32i.n	a12, a4, 0
400d26ed:	03b8      	l32i.n	a11, a3, 0
400d26ef:	02ad      	mov.n	a10, a2
400d26f1:	0057a5        	call8	400d2c6c <std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned int)>
      }
400d26f4:	f03d      	nop.n
400d26f6:	f01d      	retw.n

400d26f8 <void std::_Destroy<unsigned int*>(unsigned int*, unsigned int*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d26f8:	006136        	entry	a1, 48
400d26fb:	017d      	mov.n	a7, a1
400d26fd:	47cb      	addi.n	a4, a7, 12
400d26ff:	0429      	s32i.n	a2, a4, 0
400d2701:	278b      	addi.n	a2, a7, 8
400d2703:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2705:	378b      	addi.n	a3, a7, 8
400d2707:	27cb      	addi.n	a2, a7, 12
400d2709:	03b8      	l32i.n	a11, a3, 0
400d270b:	02a8      	l32i.n	a10, a2, 0
400d270d:	19bbe5        	call8	400ec2cc <void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*)>
    }
400d2710:	f03d      	nop.n
400d2712:	f01d      	retw.n

400d2714 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2714:	006136        	entry	a1, 48
400d2717:	017d      	mov.n	a7, a1
400d2719:	37cb      	addi.n	a3, a7, 12
400d271b:	0329      	s32i.n	a2, a3, 0
400d271d:	27cb      	addi.n	a2, a7, 12
400d271f:	02a8      	l32i.n	a10, a2, 0
400d2721:	ffbd65        	call8	400d22f8 <std::allocator<unsigned char>::~allocator()>
400d2724:	f03d      	nop.n
400d2726:	f01d      	retw.n

400d2728 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2728:	006136        	entry	a1, 48
400d272b:	017d      	mov.n	a7, a1
400d272d:	57cb      	addi.n	a5, a7, 12
400d272f:	0529      	s32i.n	a2, a5, 0
400d2731:	278b      	addi.n	a2, a7, 8
400d2733:	0239      	s32i.n	a3, a2, 0
400d2735:	274b      	addi.n	a2, a7, 4
400d2737:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2739:	27cb      	addi.n	a2, a7, 12
400d273b:	0228      	l32i.n	a2, a2, 0
400d273d:	374b      	addi.n	a3, a7, 4
400d273f:	03b8      	l32i.n	a11, a3, 0
400d2741:	20a220        	or	a10, a2, a2
400d2744:	201110        	or	a1, a1, a1
400d2747:	0054a5        	call8	400d2c90 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&)>
      { _M_create_storage(__n); }
400d274a:	378b      	addi.n	a3, a7, 8
400d274c:	27cb      	addi.n	a2, a7, 12
400d274e:	03b8      	l32i.n	a11, a3, 0
400d2750:	02a8      	l32i.n	a10, a2, 0
400d2752:	201110        	or	a1, a1, a1
400d2755:	0056e5        	call8	400d2cc4 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned int)>
400d2758:	000506        	j	400d2770 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned int, std::allocator<unsigned char> const&)+0x48>
400d275b:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d275e:	0338      	l32i.n	a3, a3, 0
400d2760:	03ad      	mov.n	a10, a3
400d2762:	201110        	or	a1, a1, a1
400d2765:	fffae5        	call8	400d2714 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>
400d2768:	02ad      	mov.n	a10, a2
400d276a:	201110        	or	a1, a1, a1
400d276d:	025525        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2770:	f01d      	retw.n
	...

400d2774 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2774:	006136        	entry	a1, 48
400d2777:	207110        	or	a7, a1, a1
400d277a:	0cc732        	addi	a3, a7, 12
400d277d:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d277f:	27cb      	addi.n	a2, a7, 12
400d2781:	0228      	l32i.n	a2, a2, 0
400d2783:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2785:	27cb      	addi.n	a2, a7, 12
400d2787:	0228      	l32i.n	a2, a2, 0
400d2789:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d278b:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d278d:	27cb      	addi.n	a2, a7, 12
400d278f:	0228      	l32i.n	a2, a2, 0
400d2791:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2793:	c02420        	sub	a2, a4, a2
400d2796:	024d      	mov.n	a4, a2
400d2798:	27cb      	addi.n	a2, a7, 12
400d279a:	04cd      	mov.n	a12, a4
400d279c:	03bd      	mov.n	a11, a3
400d279e:	02a8      	l32i.n	a10, a2, 0
400d27a0:	005665        	call8	400d2d08 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)>
		      - this->_M_impl._M_start); }
400d27a3:	27cb      	addi.n	a2, a7, 12
400d27a5:	0228      	l32i.n	a2, a2, 0
400d27a7:	02ad      	mov.n	a10, a2
400d27a9:	fff6a5        	call8	400d2714 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::~_Vector_impl()>
400d27ac:	f03d      	nop.n
400d27ae:	f01d      	retw.n

400d27b0 <std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_initialize(unsigned int)>:
      }

#if __cplusplus >= 201103L
      // Called by the vector(n) constructor.
      void
      _M_default_initialize(size_type __n)
400d27b0:	006136        	entry	a1, 48
400d27b3:	207110        	or	a7, a1, a1
400d27b6:	0cc742        	addi	a4, a7, 12
400d27b9:	0429      	s32i.n	a2, a4, 0
400d27bb:	278b      	addi.n	a2, a7, 8
400d27bd:	0239      	s32i.n	a3, a2, 0
      {
	this->_M_impl._M_finish =
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d27bf:	27cb      	addi.n	a2, a7, 12
400d27c1:	0228      	l32i.n	a2, a2, 0
400d27c3:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d27c5:	37cb      	addi.n	a3, a7, 12
400d27c7:	0338      	l32i.n	a3, a3, 0
400d27c9:	20a330        	or	a10, a3, a3
400d27cc:	19a0e5        	call8	400ec1dc <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>
400d27cf:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d27d1:	378b      	addi.n	a3, a7, 8
400d27d3:	04cd      	mov.n	a12, a4
400d27d5:	03b8      	l32i.n	a11, a3, 0
400d27d7:	02ad      	mov.n	a10, a2
400d27d9:	0055a5        	call8	400d2d34 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>
400d27dc:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d27de:	27cb      	addi.n	a2, a7, 12
400d27e0:	0228      	l32i.n	a2, a2, 0
400d27e2:	1239      	s32i.n	a3, a2, 4
      }
400d27e4:	f03d      	nop.n
400d27e6:	f01d      	retw.n

400d27e8 <void std::_Destroy<unsigned char*, unsigned char>(unsigned char*, unsigned char*, std::allocator<unsigned char>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d27e8:	006136        	entry	a1, 48
400d27eb:	017d      	mov.n	a7, a1
400d27ed:	57cb      	addi.n	a5, a7, 12
400d27ef:	0529      	s32i.n	a2, a5, 0
400d27f1:	278b      	addi.n	a2, a7, 8
400d27f3:	0239      	s32i.n	a3, a2, 0
400d27f5:	274b      	addi.n	a2, a7, 4
400d27f7:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d27f9:	378b      	addi.n	a3, a7, 8
400d27fb:	27cb      	addi.n	a2, a7, 12
400d27fd:	03b8      	l32i.n	a11, a3, 0
400d27ff:	02a8      	l32i.n	a10, a2, 0
400d2801:	005525        	call8	400d2d54 <void std::_Destroy<unsigned char*>(unsigned char*, unsigned char*)>
    }
400d2804:	f03d      	nop.n
400d2806:	f01d      	retw.n

400d2808 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2808:	006136        	entry	a1, 48
400d280b:	017d      	mov.n	a7, a1
400d280d:	37cb      	addi.n	a3, a7, 12
400d280f:	0329      	s32i.n	a2, a3, 0
400d2811:	27cb      	addi.n	a2, a7, 12
400d2813:	02a8      	l32i.n	a10, a2, 0
400d2815:	ffb925        	call8	400d23a8 <std::allocator<unsigned short>::~allocator()>
400d2818:	f03d      	nop.n
400d281a:	f01d      	retw.n

400d281c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d281c:	006136        	entry	a1, 48
400d281f:	017d      	mov.n	a7, a1
400d2821:	57cb      	addi.n	a5, a7, 12
400d2823:	0529      	s32i.n	a2, a5, 0
400d2825:	278b      	addi.n	a2, a7, 8
400d2827:	0239      	s32i.n	a3, a2, 0
400d2829:	274b      	addi.n	a2, a7, 4
400d282b:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d282d:	27cb      	addi.n	a2, a7, 12
400d282f:	0228      	l32i.n	a2, a2, 0
400d2831:	374b      	addi.n	a3, a7, 4
400d2833:	03b8      	l32i.n	a11, a3, 0
400d2835:	20a220        	or	a10, a2, a2
400d2838:	201110        	or	a1, a1, a1
400d283b:	005365        	call8	400d2d70 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::_Vector_impl(std::allocator<unsigned short> const&)>
      { _M_create_storage(__n); }
400d283e:	378b      	addi.n	a3, a7, 8
400d2840:	27cb      	addi.n	a2, a7, 12
400d2842:	03b8      	l32i.n	a11, a3, 0
400d2844:	02a8      	l32i.n	a10, a2, 0
400d2846:	201110        	or	a1, a1, a1
400d2849:	0055a5        	call8	400d2da4 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_create_storage(unsigned int)>
400d284c:	000506        	j	400d2864 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_base(unsigned int, std::allocator<unsigned short> const&)+0x48>
      : _M_impl(__a)
400d284f:	37cb      	addi.n	a3, a7, 12
400d2851:	0338      	l32i.n	a3, a3, 0
400d2853:	20a330        	or	a10, a3, a3
400d2856:	201110        	or	a1, a1, a1
400d2859:	fffae5        	call8	400d2808 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>
400d285c:	02ad      	mov.n	a10, a2
400d285e:	201110        	or	a1, a1, a1
400d2861:	0245e5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2864:	f01d      	retw.n
	...

400d2868 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2868:	006136        	entry	a1, 48
400d286b:	207110        	or	a7, a1, a1
400d286e:	0cc732        	addi	a3, a7, 12
400d2871:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2873:	27cb      	addi.n	a2, a7, 12
400d2875:	0228      	l32i.n	a2, a2, 0
400d2877:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2879:	27cb      	addi.n	a2, a7, 12
400d287b:	0228      	l32i.n	a2, a2, 0
400d287d:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d287f:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d2881:	27cb      	addi.n	a2, a7, 12
400d2883:	0228      	l32i.n	a2, a2, 0
400d2885:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2887:	c02420        	sub	a2, a4, a2
400d288a:	212120        	srai	a2, a2, 1
400d288d:	024d      	mov.n	a4, a2
400d288f:	27cb      	addi.n	a2, a7, 12
400d2891:	04cd      	mov.n	a12, a4
400d2893:	03bd      	mov.n	a11, a3
400d2895:	0022a2        	l32i	a10, a2, 0
400d2898:	005525        	call8	400d2dec <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)>
		      - this->_M_impl._M_start); }
400d289b:	27cb      	addi.n	a2, a7, 12
400d289d:	0228      	l32i.n	a2, a2, 0
400d289f:	02ad      	mov.n	a10, a2
400d28a1:	fff665        	call8	400d2808 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::~_Vector_impl()>
400d28a4:	f03d      	nop.n
400d28a6:	f01d      	retw.n

400d28a8 <std::vector<unsigned short, std::allocator<unsigned short> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d28a8:	006136        	entry	a1, 48
400d28ab:	207110        	or	a7, a1, a1
400d28ae:	0cc742        	addi	a4, a7, 12
400d28b1:	0429      	s32i.n	a2, a4, 0
400d28b3:	278b      	addi.n	a2, a7, 8
400d28b5:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d28b7:	27cb      	addi.n	a2, a7, 12
400d28b9:	0228      	l32i.n	a2, a2, 0
400d28bb:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d28bd:	37cb      	addi.n	a3, a7, 12
400d28bf:	0338      	l32i.n	a3, a3, 0
400d28c1:	20a330        	or	a10, a3, a3
400d28c4:	199465        	call8	400ec20c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>
400d28c7:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d28c9:	378b      	addi.n	a3, a7, 8
400d28cb:	04cd      	mov.n	a12, a4
400d28cd:	03b8      	l32i.n	a11, a3, 0
400d28cf:	02ad      	mov.n	a10, a2
400d28d1:	005465        	call8	400d2e18 <unsigned short* std::__uninitialized_default_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, std::allocator<unsigned short>&)>
400d28d4:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d28d6:	27cb      	addi.n	a2, a7, 12
400d28d8:	0228      	l32i.n	a2, a2, 0
400d28da:	1239      	s32i.n	a3, a2, 4
      }
400d28dc:	f03d      	nop.n
400d28de:	f01d      	retw.n

400d28e0 <void std::_Destroy<unsigned short*, unsigned short>(unsigned short*, unsigned short*, std::allocator<unsigned short>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d28e0:	006136        	entry	a1, 48
400d28e3:	017d      	mov.n	a7, a1
400d28e5:	57cb      	addi.n	a5, a7, 12
400d28e7:	0529      	s32i.n	a2, a5, 0
400d28e9:	278b      	addi.n	a2, a7, 8
400d28eb:	0239      	s32i.n	a3, a2, 0
400d28ed:	274b      	addi.n	a2, a7, 4
400d28ef:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d28f1:	378b      	addi.n	a3, a7, 8
400d28f3:	27cb      	addi.n	a2, a7, 12
400d28f5:	03b8      	l32i.n	a11, a3, 0
400d28f7:	02a8      	l32i.n	a10, a2, 0
400d28f9:	0053e5        	call8	400d2e38 <void std::_Destroy<unsigned short*>(unsigned short*, unsigned short*)>
    }
400d28fc:	f03d      	nop.n
400d28fe:	f01d      	retw.n

400d2900 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2900:	006136        	entry	a1, 48
400d2903:	017d      	mov.n	a7, a1
400d2905:	57cb      	addi.n	a5, a7, 12
400d2907:	0529      	s32i.n	a2, a5, 0
400d2909:	278b      	addi.n	a2, a7, 8
400d290b:	0239      	s32i.n	a3, a2, 0
400d290d:	274b      	addi.n	a2, a7, 4
400d290f:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2911:	27cb      	addi.n	a2, a7, 12
400d2913:	0228      	l32i.n	a2, a2, 0
400d2915:	374b      	addi.n	a3, a7, 4
400d2917:	03b8      	l32i.n	a11, a3, 0
400d2919:	20a220        	or	a10, a2, a2
400d291c:	201110        	or	a1, a1, a1
400d291f:	005365        	call8	400d2e54 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&)>
      { _M_create_storage(__n); }
400d2922:	378b      	addi.n	a3, a7, 8
400d2924:	27cb      	addi.n	a2, a7, 12
400d2926:	03b8      	l32i.n	a11, a3, 0
400d2928:	02a8      	l32i.n	a10, a2, 0
400d292a:	201110        	or	a1, a1, a1
400d292d:	0055a5        	call8	400d2e88 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned int)>
400d2930:	000506        	j	400d2948 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)+0x48>
400d2933:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d2936:	0338      	l32i.n	a3, a3, 0
400d2938:	03ad      	mov.n	a10, a3
400d293a:	201110        	or	a1, a1, a1
400d293d:	ff9325        	call8	400d2270 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::~_Vector_impl()>
400d2940:	02ad      	mov.n	a10, a2
400d2942:	201110        	or	a1, a1, a1
400d2945:	0237a5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2948:	f01d      	retw.n
	...

400d294c <std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d294c:	006136        	entry	a1, 48
400d294f:	207110        	or	a7, a1, a1
400d2952:	0cc742        	addi	a4, a7, 12
400d2955:	0429      	s32i.n	a2, a4, 0
400d2957:	278b      	addi.n	a2, a7, 8
400d2959:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d295b:	27cb      	addi.n	a2, a7, 12
400d295d:	0228      	l32i.n	a2, a2, 0
400d295f:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2961:	37cb      	addi.n	a3, a7, 12
400d2963:	0338      	l32i.n	a3, a3, 0
400d2965:	20a330        	or	a10, a3, a3
400d2968:	197865        	call8	400ec0f0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>
400d296b:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d296d:	378b      	addi.n	a3, a7, 8
400d296f:	04cd      	mov.n	a12, a4
400d2971:	03b8      	l32i.n	a11, a3, 0
400d2973:	02ad      	mov.n	a10, a2
400d2975:	0055a5        	call8	400d2ed0 <unsigned int* std::__uninitialized_default_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, std::allocator<unsigned int>&)>
400d2978:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d297a:	27cb      	addi.n	a2, a7, 12
400d297c:	0228      	l32i.n	a2, a2, 0
400d297e:	1239      	s32i.n	a3, a2, 4
      }
400d2980:	f03d      	nop.n
400d2982:	f01d      	retw.n

400d2984 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2984:	006136        	entry	a1, 48
400d2987:	017d      	mov.n	a7, a1
400d2989:	37cb      	addi.n	a3, a7, 12
400d298b:	0329      	s32i.n	a2, a3, 0
400d298d:	27cb      	addi.n	a2, a7, 12
400d298f:	02a8      	l32i.n	a10, a2, 0
400d2991:	ffb3e5        	call8	400d24d0 <std::allocator<unsigned long long>::~allocator()>
400d2994:	f03d      	nop.n
400d2996:	f01d      	retw.n

400d2998 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2998:	006136        	entry	a1, 48
400d299b:	017d      	mov.n	a7, a1
400d299d:	57cb      	addi.n	a5, a7, 12
400d299f:	0529      	s32i.n	a2, a5, 0
400d29a1:	278b      	addi.n	a2, a7, 8
400d29a3:	0239      	s32i.n	a3, a2, 0
400d29a5:	274b      	addi.n	a2, a7, 4
400d29a7:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d29a9:	27cb      	addi.n	a2, a7, 12
400d29ab:	0228      	l32i.n	a2, a2, 0
400d29ad:	374b      	addi.n	a3, a7, 4
400d29af:	03b8      	l32i.n	a11, a3, 0
400d29b1:	20a220        	or	a10, a2, a2
400d29b4:	201110        	or	a1, a1, a1
400d29b7:	0053a5        	call8	400d2ef0 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::_Vector_impl(std::allocator<unsigned long long> const&)>
      { _M_create_storage(__n); }
400d29ba:	378b      	addi.n	a3, a7, 8
400d29bc:	27cb      	addi.n	a2, a7, 12
400d29be:	03b8      	l32i.n	a11, a3, 0
400d29c0:	02a8      	l32i.n	a10, a2, 0
400d29c2:	201110        	or	a1, a1, a1
400d29c5:	0055e5        	call8	400d2f24 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_create_storage(unsigned int)>
400d29c8:	000506        	j	400d29e0 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_base(unsigned int, std::allocator<unsigned long long> const&)+0x48>
400d29cb:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d29ce:	0338      	l32i.n	a3, a3, 0
400d29d0:	03ad      	mov.n	a10, a3
400d29d2:	201110        	or	a1, a1, a1
400d29d5:	fffae5        	call8	400d2984 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>
400d29d8:	02ad      	mov.n	a10, a2
400d29da:	201110        	or	a1, a1, a1
400d29dd:	022e25        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d29e0:	f01d      	retw.n
	...

400d29e4 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d29e4:	006136        	entry	a1, 48
400d29e7:	207110        	or	a7, a1, a1
400d29ea:	0cc732        	addi	a3, a7, 12
400d29ed:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d29ef:	27cb      	addi.n	a2, a7, 12
400d29f1:	0228      	l32i.n	a2, a2, 0
400d29f3:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d29f5:	27cb      	addi.n	a2, a7, 12
400d29f7:	0228      	l32i.n	a2, a2, 0
400d29f9:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d29fb:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d29fd:	27cb      	addi.n	a2, a7, 12
400d29ff:	0228      	l32i.n	a2, a2, 0
400d2a01:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2a03:	c02420        	sub	a2, a4, a2
400d2a06:	212320        	srai	a2, a2, 3
400d2a09:	024d      	mov.n	a4, a2
400d2a0b:	27cb      	addi.n	a2, a7, 12
400d2a0d:	04cd      	mov.n	a12, a4
400d2a0f:	03bd      	mov.n	a11, a3
400d2a11:	0022a2        	l32i	a10, a2, 0
400d2a14:	005565        	call8	400d2f6c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)>
		      - this->_M_impl._M_start); }
400d2a17:	27cb      	addi.n	a2, a7, 12
400d2a19:	0228      	l32i.n	a2, a2, 0
400d2a1b:	02ad      	mov.n	a10, a2
400d2a1d:	fff665        	call8	400d2984 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::~_Vector_impl()>
400d2a20:	f03d      	nop.n
400d2a22:	f01d      	retw.n

400d2a24 <std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2a24:	006136        	entry	a1, 48
400d2a27:	207110        	or	a7, a1, a1
400d2a2a:	0cc742        	addi	a4, a7, 12
400d2a2d:	0429      	s32i.n	a2, a4, 0
400d2a2f:	278b      	addi.n	a2, a7, 8
400d2a31:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2a33:	27cb      	addi.n	a2, a7, 12
400d2a35:	0228      	l32i.n	a2, a2, 0
400d2a37:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2a39:	37cb      	addi.n	a3, a7, 12
400d2a3b:	0338      	l32i.n	a3, a3, 0
400d2a3d:	20a330        	or	a10, a3, a3
400d2a40:	1981a5        	call8	400ec25c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>
400d2a43:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2a45:	378b      	addi.n	a3, a7, 8
400d2a47:	04cd      	mov.n	a12, a4
400d2a49:	03b8      	l32i.n	a11, a3, 0
400d2a4b:	02ad      	mov.n	a10, a2
400d2a4d:	0054a5        	call8	400d2f98 <unsigned long long* std::__uninitialized_default_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, std::allocator<unsigned long long>&)>
400d2a50:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d2a52:	27cb      	addi.n	a2, a7, 12
400d2a54:	0228      	l32i.n	a2, a2, 0
400d2a56:	1239      	s32i.n	a3, a2, 4
      }
400d2a58:	f03d      	nop.n
400d2a5a:	f01d      	retw.n

400d2a5c <void std::_Destroy<unsigned long long*, unsigned long long>(unsigned long long*, unsigned long long*, std::allocator<unsigned long long>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2a5c:	006136        	entry	a1, 48
400d2a5f:	017d      	mov.n	a7, a1
400d2a61:	57cb      	addi.n	a5, a7, 12
400d2a63:	0529      	s32i.n	a2, a5, 0
400d2a65:	278b      	addi.n	a2, a7, 8
400d2a67:	0239      	s32i.n	a3, a2, 0
400d2a69:	274b      	addi.n	a2, a7, 4
400d2a6b:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2a6d:	378b      	addi.n	a3, a7, 8
400d2a6f:	27cb      	addi.n	a2, a7, 12
400d2a71:	03b8      	l32i.n	a11, a3, 0
400d2a73:	02a8      	l32i.n	a10, a2, 0
400d2a75:	005425        	call8	400d2fb8 <void std::_Destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>
    }
400d2a78:	f03d      	nop.n
400d2a7a:	f01d      	retw.n

400d2a7c <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2a7c:	006136        	entry	a1, 48
400d2a7f:	017d      	mov.n	a7, a1
400d2a81:	37cb      	addi.n	a3, a7, 12
400d2a83:	0329      	s32i.n	a2, a3, 0
400d2a85:	27cb      	addi.n	a2, a7, 12
400d2a87:	02a8      	l32i.n	a10, a2, 0
400d2a89:	ffaf65        	call8	400d2580 <std::allocator<float>::~allocator()>
400d2a8c:	f03d      	nop.n
400d2a8e:	f01d      	retw.n

400d2a90 <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2a90:	006136        	entry	a1, 48
400d2a93:	017d      	mov.n	a7, a1
400d2a95:	57cb      	addi.n	a5, a7, 12
400d2a97:	0529      	s32i.n	a2, a5, 0
400d2a99:	278b      	addi.n	a2, a7, 8
400d2a9b:	0239      	s32i.n	a3, a2, 0
400d2a9d:	274b      	addi.n	a2, a7, 4
400d2a9f:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2aa1:	27cb      	addi.n	a2, a7, 12
400d2aa3:	0228      	l32i.n	a2, a2, 0
400d2aa5:	374b      	addi.n	a3, a7, 4
400d2aa7:	03b8      	l32i.n	a11, a3, 0
400d2aa9:	20a220        	or	a10, a2, a2
400d2aac:	201110        	or	a1, a1, a1
400d2aaf:	005265        	call8	400d2fd4 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)>
      { _M_create_storage(__n); }
400d2ab2:	378b      	addi.n	a3, a7, 8
400d2ab4:	27cb      	addi.n	a2, a7, 12
400d2ab6:	03b8      	l32i.n	a11, a3, 0
400d2ab8:	02a8      	l32i.n	a10, a2, 0
400d2aba:	201110        	or	a1, a1, a1
400d2abd:	0054a5        	call8	400d3008 <std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned int)>
400d2ac0:	000506        	j	400d2ad8 <std::_Vector_base<float, std::allocator<float> >::_Vector_base(unsigned int, std::allocator<float> const&)+0x48>
400d2ac3:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d2ac6:	0338      	l32i.n	a3, a3, 0
400d2ac8:	03ad      	mov.n	a10, a3
400d2aca:	201110        	or	a1, a1, a1
400d2acd:	fffae5        	call8	400d2a7c <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>
400d2ad0:	02ad      	mov.n	a10, a2
400d2ad2:	201110        	or	a1, a1, a1
400d2ad5:	021ea5        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2ad8:	f01d      	retw.n
	...

400d2adc <std::_Vector_base<float, std::allocator<float> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2adc:	006136        	entry	a1, 48
400d2adf:	207110        	or	a7, a1, a1
400d2ae2:	0cc732        	addi	a3, a7, 12
400d2ae5:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2ae7:	27cb      	addi.n	a2, a7, 12
400d2ae9:	0228      	l32i.n	a2, a2, 0
400d2aeb:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2aed:	27cb      	addi.n	a2, a7, 12
400d2aef:	0228      	l32i.n	a2, a2, 0
400d2af1:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2af3:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d2af5:	27cb      	addi.n	a2, a7, 12
400d2af7:	0228      	l32i.n	a2, a2, 0
400d2af9:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2afb:	c02420        	sub	a2, a4, a2
400d2afe:	212220        	srai	a2, a2, 2
400d2b01:	024d      	mov.n	a4, a2
400d2b03:	27cb      	addi.n	a2, a7, 12
400d2b05:	04cd      	mov.n	a12, a4
400d2b07:	03bd      	mov.n	a11, a3
400d2b09:	0022a2        	l32i	a10, a2, 0
400d2b0c:	005425        	call8	400d3050 <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)>
		      - this->_M_impl._M_start); }
400d2b0f:	27cb      	addi.n	a2, a7, 12
400d2b11:	0228      	l32i.n	a2, a2, 0
400d2b13:	02ad      	mov.n	a10, a2
400d2b15:	fff665        	call8	400d2a7c <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::~_Vector_impl()>
400d2b18:	f03d      	nop.n
400d2b1a:	f01d      	retw.n

400d2b1c <std::vector<float, std::allocator<float> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2b1c:	006136        	entry	a1, 48
400d2b1f:	207110        	or	a7, a1, a1
400d2b22:	0cc742        	addi	a4, a7, 12
400d2b25:	0429      	s32i.n	a2, a4, 0
400d2b27:	278b      	addi.n	a2, a7, 8
400d2b29:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2b2b:	27cb      	addi.n	a2, a7, 12
400d2b2d:	0228      	l32i.n	a2, a2, 0
400d2b2f:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2b31:	37cb      	addi.n	a3, a7, 12
400d2b33:	0338      	l32i.n	a3, a3, 0
400d2b35:	20a330        	or	a10, a3, a3
400d2b38:	197525        	call8	400ec28c <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>
400d2b3b:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2b3d:	378b      	addi.n	a3, a7, 8
400d2b3f:	04cd      	mov.n	a12, a4
400d2b41:	03b8      	l32i.n	a11, a3, 0
400d2b43:	02ad      	mov.n	a10, a2
400d2b45:	005365        	call8	400d307c <float* std::__uninitialized_default_n_a<float*, unsigned int, float>(float*, unsigned int, std::allocator<float>&)>
400d2b48:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d2b4a:	27cb      	addi.n	a2, a7, 12
400d2b4c:	0228      	l32i.n	a2, a2, 0
400d2b4e:	1239      	s32i.n	a3, a2, 4
      }
400d2b50:	f03d      	nop.n
400d2b52:	f01d      	retw.n

400d2b54 <void std::_Destroy<float*, float>(float*, float*, std::allocator<float>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2b54:	006136        	entry	a1, 48
400d2b57:	017d      	mov.n	a7, a1
400d2b59:	57cb      	addi.n	a5, a7, 12
400d2b5b:	0529      	s32i.n	a2, a5, 0
400d2b5d:	278b      	addi.n	a2, a7, 8
400d2b5f:	0239      	s32i.n	a3, a2, 0
400d2b61:	274b      	addi.n	a2, a7, 4
400d2b63:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2b65:	378b      	addi.n	a3, a7, 8
400d2b67:	27cb      	addi.n	a2, a7, 12
400d2b69:	03b8      	l32i.n	a11, a3, 0
400d2b6b:	02a8      	l32i.n	a10, a2, 0
400d2b6d:	0052e5        	call8	400d309c <void std::_Destroy<float*>(float*, float*)>
    }
400d2b70:	f03d      	nop.n
400d2b72:	f01d      	retw.n

400d2b74 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>:
      struct _Vector_impl 
400d2b74:	006136        	entry	a1, 48
400d2b77:	017d      	mov.n	a7, a1
400d2b79:	37cb      	addi.n	a3, a7, 12
400d2b7b:	0329      	s32i.n	a2, a3, 0
400d2b7d:	27cb      	addi.n	a2, a7, 12
400d2b7f:	02a8      	l32i.n	a10, a2, 0
400d2b81:	ffaae5        	call8	400d2630 <std::allocator<double>::~allocator()>
400d2b84:	f03d      	nop.n
400d2b86:	f01d      	retw.n

400d2b88 <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)>:
      _Vector_base(size_t __n, const allocator_type& __a)
400d2b88:	006136        	entry	a1, 48
400d2b8b:	017d      	mov.n	a7, a1
400d2b8d:	57cb      	addi.n	a5, a7, 12
400d2b8f:	0529      	s32i.n	a2, a5, 0
400d2b91:	278b      	addi.n	a2, a7, 8
400d2b93:	0239      	s32i.n	a3, a2, 0
400d2b95:	274b      	addi.n	a2, a7, 4
400d2b97:	0249      	s32i.n	a4, a2, 0
      : _M_impl(__a)
400d2b99:	27cb      	addi.n	a2, a7, 12
400d2b9b:	0228      	l32i.n	a2, a2, 0
400d2b9d:	374b      	addi.n	a3, a7, 4
400d2b9f:	03b8      	l32i.n	a11, a3, 0
400d2ba1:	20a220        	or	a10, a2, a2
400d2ba4:	201110        	or	a1, a1, a1
400d2ba7:	005125        	call8	400d30b8 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)>
      { _M_create_storage(__n); }
400d2baa:	378b      	addi.n	a3, a7, 8
400d2bac:	27cb      	addi.n	a2, a7, 12
400d2bae:	03b8      	l32i.n	a11, a3, 0
400d2bb0:	02a8      	l32i.n	a10, a2, 0
400d2bb2:	201110        	or	a1, a1, a1
400d2bb5:	005365        	call8	400d30ec <std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned int)>
400d2bb8:	000506        	j	400d2bd0 <std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned int, std::allocator<double> const&)+0x48>
400d2bbb:	37cb00        	lsi	f0, a11, 220
      : _M_impl(__a)
400d2bbe:	0338      	l32i.n	a3, a3, 0
400d2bc0:	03ad      	mov.n	a10, a3
400d2bc2:	201110        	or	a1, a1, a1
400d2bc5:	fffae5        	call8	400d2b74 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>
400d2bc8:	02ad      	mov.n	a10, a2
400d2bca:	201110        	or	a1, a1, a1
400d2bcd:	020f25        	call8	400d4cc0 <_Unwind_Resume>
      { _M_create_storage(__n); }
400d2bd0:	f01d      	retw.n
	...

400d2bd4 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
400d2bd4:	006136        	entry	a1, 48
400d2bd7:	207110        	or	a7, a1, a1
400d2bda:	0cc732        	addi	a3, a7, 12
400d2bdd:	0329      	s32i.n	a2, a3, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2bdf:	27cb      	addi.n	a2, a7, 12
400d2be1:	0228      	l32i.n	a2, a2, 0
400d2be3:	0238      	l32i.n	a3, a2, 0
		      - this->_M_impl._M_start); }
400d2be5:	27cb      	addi.n	a2, a7, 12
400d2be7:	0228      	l32i.n	a2, a2, 0
400d2be9:	2228      	l32i.n	a2, a2, 8
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2beb:	024d      	mov.n	a4, a2
		      - this->_M_impl._M_start); }
400d2bed:	27cb      	addi.n	a2, a7, 12
400d2bef:	0228      	l32i.n	a2, a2, 0
400d2bf1:	0228      	l32i.n	a2, a2, 0
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
400d2bf3:	c02420        	sub	a2, a4, a2
400d2bf6:	212320        	srai	a2, a2, 3
400d2bf9:	024d      	mov.n	a4, a2
400d2bfb:	27cb      	addi.n	a2, a7, 12
400d2bfd:	04cd      	mov.n	a12, a4
400d2bff:	03bd      	mov.n	a11, a3
400d2c01:	0022a2        	l32i	a10, a2, 0
400d2c04:	0052e5        	call8	400d3134 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)>
		      - this->_M_impl._M_start); }
400d2c07:	27cb      	addi.n	a2, a7, 12
400d2c09:	0228      	l32i.n	a2, a2, 0
400d2c0b:	02ad      	mov.n	a10, a2
400d2c0d:	fff665        	call8	400d2b74 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>
400d2c10:	f03d      	nop.n
400d2c12:	f01d      	retw.n

400d2c14 <std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned int)>:
      _M_default_initialize(size_type __n)
400d2c14:	006136        	entry	a1, 48
400d2c17:	207110        	or	a7, a1, a1
400d2c1a:	0cc742        	addi	a4, a7, 12
400d2c1d:	0429      	s32i.n	a2, a4, 0
400d2c1f:	278b      	addi.n	a2, a7, 8
400d2c21:	0239      	s32i.n	a3, a2, 0
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2c23:	27cb      	addi.n	a2, a7, 12
400d2c25:	0228      	l32i.n	a2, a2, 0
400d2c27:	0228      	l32i.n	a2, a2, 0
					   _M_get_Tp_allocator());
400d2c29:	37cb      	addi.n	a3, a7, 12
400d2c2b:	0338      	l32i.n	a3, a3, 0
400d2c2d:	20a330        	or	a10, a3, a3
400d2c30:	1968a5        	call8	400ec2bc <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>
400d2c33:	0a4d      	mov.n	a4, a10
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
400d2c35:	378b      	addi.n	a3, a7, 8
400d2c37:	04cd      	mov.n	a12, a4
400d2c39:	03b8      	l32i.n	a11, a3, 0
400d2c3b:	02ad      	mov.n	a10, a2
400d2c3d:	005225        	call8	400d3160 <double* std::__uninitialized_default_n_a<double*, unsigned int, double>(double*, unsigned int, std::allocator<double>&)>
400d2c40:	0a3d      	mov.n	a3, a10
	this->_M_impl._M_finish =
400d2c42:	27cb      	addi.n	a2, a7, 12
400d2c44:	0228      	l32i.n	a2, a2, 0
400d2c46:	1239      	s32i.n	a3, a2, 4
      }
400d2c48:	f03d      	nop.n
400d2c4a:	f01d      	retw.n

400d2c4c <void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
400d2c4c:	006136        	entry	a1, 48
400d2c4f:	017d      	mov.n	a7, a1
400d2c51:	57cb      	addi.n	a5, a7, 12
400d2c53:	0529      	s32i.n	a2, a5, 0
400d2c55:	278b      	addi.n	a2, a7, 8
400d2c57:	0239      	s32i.n	a3, a2, 0
400d2c59:	274b      	addi.n	a2, a7, 4
400d2c5b:	0249      	s32i.n	a4, a2, 0
      _Destroy(__first, __last);
400d2c5d:	378b      	addi.n	a3, a7, 8
400d2c5f:	27cb      	addi.n	a2, a7, 12
400d2c61:	03b8      	l32i.n	a11, a3, 0
400d2c63:	02a8      	l32i.n	a10, a2, 0
400d2c65:	0051a5        	call8	400d3180 <void std::_Destroy<double*>(double*, double*)>
    }
400d2c68:	f03d      	nop.n
400d2c6a:	f01d      	retw.n

400d2c6c <std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned int)>:
       *  @param  __p  Pointer to the memory to deallocate.
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d2c6c:	006136        	entry	a1, 48
400d2c6f:	017d      	mov.n	a7, a1
400d2c71:	57cb      	addi.n	a5, a7, 12
400d2c73:	0529      	s32i.n	a2, a5, 0
400d2c75:	278b      	addi.n	a2, a7, 8
400d2c77:	0239      	s32i.n	a3, a2, 0
400d2c79:	274b      	addi.n	a2, a7, 4
400d2c7b:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d2c7d:	474b      	addi.n	a4, a7, 4
400d2c7f:	378b      	addi.n	a3, a7, 8
400d2c81:	27cb      	addi.n	a2, a7, 12
400d2c83:	04c8      	l32i.n	a12, a4, 0
400d2c85:	03b8      	l32i.n	a11, a3, 0
400d2c87:	02a8      	l32i.n	a10, a2, 0
400d2c89:	005125        	call8	400d319c <__gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned int)>
400d2c8c:	f03d      	nop.n
400d2c8e:	f01d      	retw.n

400d2c90 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2c90:	006136        	entry	a1, 48
400d2c93:	017d      	mov.n	a7, a1
400d2c95:	47cb      	addi.n	a4, a7, 12
400d2c97:	0429      	s32i.n	a2, a4, 0
400d2c99:	278b      	addi.n	a2, a7, 8
400d2c9b:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2c9d:	378b      	addi.n	a3, a7, 8
400d2c9f:	27cb      	addi.n	a2, a7, 12
400d2ca1:	03b8      	l32i.n	a11, a3, 0
400d2ca3:	02a8      	l32i.n	a10, a2, 0
400d2ca5:	005125        	call8	400d31b8 <std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)>
400d2ca8:	27cb      	addi.n	a2, a7, 12
400d2caa:	0228      	l32i.n	a2, a2, 0
400d2cac:	030c      	movi.n	a3, 0
400d2cae:	0239      	s32i.n	a3, a2, 0
400d2cb0:	27cb      	addi.n	a2, a7, 12
400d2cb2:	0228      	l32i.n	a2, a2, 0
400d2cb4:	030c      	movi.n	a3, 0
400d2cb6:	1239      	s32i.n	a3, a2, 4
400d2cb8:	27cb      	addi.n	a2, a7, 12
400d2cba:	0228      	l32i.n	a2, a2, 0
400d2cbc:	030c      	movi.n	a3, 0
400d2cbe:	2239      	s32i.n	a3, a2, 8
	{ }
400d2cc0:	f03d      	nop.n
400d2cc2:	f01d      	retw.n

400d2cc4 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2cc4:	006136        	entry	a1, 48
400d2cc7:	017d      	mov.n	a7, a1
400d2cc9:	47cb      	addi.n	a4, a7, 12
400d2ccb:	0429      	s32i.n	a2, a4, 0
400d2ccd:	278b      	addi.n	a2, a7, 8
400d2ccf:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2cd1:	378b      	addi.n	a3, a7, 8
400d2cd3:	27cb      	addi.n	a2, a7, 12
400d2cd5:	03b8      	l32i.n	a11, a3, 0
400d2cd7:	02a8      	l32i.n	a10, a2, 0
400d2cd9:	004fa5        	call8	400d31d4 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)>
400d2cdc:	0a3d      	mov.n	a3, a10
400d2cde:	27cb      	addi.n	a2, a7, 12
400d2ce0:	0228      	l32i.n	a2, a2, 0
400d2ce2:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2ce4:	27cb      	addi.n	a2, a7, 12
400d2ce6:	0228      	l32i.n	a2, a2, 0
400d2ce8:	0238      	l32i.n	a3, a2, 0
400d2cea:	27cb      	addi.n	a2, a7, 12
400d2cec:	0228      	l32i.n	a2, a2, 0
400d2cee:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2cf0:	27cb      	addi.n	a2, a7, 12
400d2cf2:	0228      	l32i.n	a2, a2, 0
400d2cf4:	0238      	l32i.n	a3, a2, 0
400d2cf6:	278b      	addi.n	a2, a7, 8
400d2cf8:	0228      	l32i.n	a2, a2, 0
400d2cfa:	332a      	add.n	a3, a3, a2
400d2cfc:	27cb      	addi.n	a2, a7, 12
400d2cfe:	0228      	l32i.n	a2, a2, 0
400d2d00:	2239      	s32i.n	a3, a2, 8
      }
400d2d02:	f03d      	nop.n
400d2d04:	f01d      	retw.n
	...

400d2d08 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2d08:	006136        	entry	a1, 48
400d2d0b:	017d      	mov.n	a7, a1
400d2d0d:	57cb      	addi.n	a5, a7, 12
400d2d0f:	0529      	s32i.n	a2, a5, 0
400d2d11:	278b      	addi.n	a2, a7, 8
400d2d13:	0239      	s32i.n	a3, a2, 0
400d2d15:	274b      	addi.n	a2, a7, 4
400d2d17:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2d19:	278b      	addi.n	a2, a7, 8
400d2d1b:	0228      	l32i.n	a2, a2, 0
400d2d1d:	f28c      	beqz.n	a2, 400d2d30 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_deallocate(unsigned char*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2d1f:	27cb      	addi.n	a2, a7, 12
400d2d21:	0228      	l32i.n	a2, a2, 0
400d2d23:	474b      	addi.n	a4, a7, 4
400d2d25:	378b      	addi.n	a3, a7, 8
400d2d27:	04c8      	l32i.n	a12, a4, 0
400d2d29:	03b8      	l32i.n	a11, a3, 0
400d2d2b:	02ad      	mov.n	a10, a2
400d2d2d:	004d25        	call8	400d3200 <std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned int)>
      }
400d2d30:	f03d      	nop.n
400d2d32:	f01d      	retw.n

400d2d34 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>:
	}
    }

  template<typename _ForwardIterator, typename _Size, typename _Tp>
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2d34:	006136        	entry	a1, 48
400d2d37:	017d      	mov.n	a7, a1
400d2d39:	57cb      	addi.n	a5, a7, 12
400d2d3b:	0529      	s32i.n	a2, a5, 0
400d2d3d:	278b      	addi.n	a2, a7, 8
400d2d3f:	0239      	s32i.n	a3, a2, 0
400d2d41:	274b      	addi.n	a2, a7, 4
400d2d43:	0249      	s32i.n	a4, a2, 0
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
400d2d45:	378b      	addi.n	a3, a7, 8
400d2d47:	27cb      	addi.n	a2, a7, 12
400d2d49:	03b8      	l32i.n	a11, a3, 0
400d2d4b:	02a8      	l32i.n	a10, a2, 0
400d2d4d:	004d65        	call8	400d3224 <unsigned char* std::__uninitialized_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>
400d2d50:	0a2d      	mov.n	a2, a10
400d2d52:	f01d      	retw.n

400d2d54 <void std::_Destroy<unsigned char*>(unsigned char*, unsigned char*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2d54:	006136        	entry	a1, 48
400d2d57:	017d      	mov.n	a7, a1
400d2d59:	47cb      	addi.n	a4, a7, 12
400d2d5b:	0429      	s32i.n	a2, a4, 0
400d2d5d:	278b      	addi.n	a2, a7, 8
400d2d5f:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2d61:	378b      	addi.n	a3, a7, 8
400d2d63:	27cb      	addi.n	a2, a7, 12
400d2d65:	03b8      	l32i.n	a11, a3, 0
400d2d67:	02a8      	l32i.n	a10, a2, 0
400d2d69:	195765        	call8	400ec2e0 <void std::_Destroy_aux<true>::__destroy<unsigned char*>(unsigned char*, unsigned char*)>
    }
400d2d6c:	f03d      	nop.n
400d2d6e:	f01d      	retw.n

400d2d70 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_Vector_impl::_Vector_impl(std::allocator<unsigned short> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2d70:	006136        	entry	a1, 48
400d2d73:	017d      	mov.n	a7, a1
400d2d75:	47cb      	addi.n	a4, a7, 12
400d2d77:	0429      	s32i.n	a2, a4, 0
400d2d79:	278b      	addi.n	a2, a7, 8
400d2d7b:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2d7d:	378b      	addi.n	a3, a7, 8
400d2d7f:	27cb      	addi.n	a2, a7, 12
400d2d81:	03b8      	l32i.n	a11, a3, 0
400d2d83:	02a8      	l32i.n	a10, a2, 0
400d2d85:	004c25        	call8	400d3248 <std::allocator<unsigned short>::allocator(std::allocator<unsigned short> const&)>
400d2d88:	27cb      	addi.n	a2, a7, 12
400d2d8a:	0228      	l32i.n	a2, a2, 0
400d2d8c:	030c      	movi.n	a3, 0
400d2d8e:	0239      	s32i.n	a3, a2, 0
400d2d90:	27cb      	addi.n	a2, a7, 12
400d2d92:	0228      	l32i.n	a2, a2, 0
400d2d94:	030c      	movi.n	a3, 0
400d2d96:	1239      	s32i.n	a3, a2, 4
400d2d98:	27cb      	addi.n	a2, a7, 12
400d2d9a:	0228      	l32i.n	a2, a2, 0
400d2d9c:	030c      	movi.n	a3, 0
400d2d9e:	2239      	s32i.n	a3, a2, 8
	{ }
400d2da0:	f03d      	nop.n
400d2da2:	f01d      	retw.n

400d2da4 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2da4:	006136        	entry	a1, 48
400d2da7:	017d      	mov.n	a7, a1
400d2da9:	47cb      	addi.n	a4, a7, 12
400d2dab:	0429      	s32i.n	a2, a4, 0
400d2dad:	278b      	addi.n	a2, a7, 8
400d2daf:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2db1:	378b      	addi.n	a3, a7, 8
400d2db3:	27cb      	addi.n	a2, a7, 12
400d2db5:	03b8      	l32i.n	a11, a3, 0
400d2db7:	02a8      	l32i.n	a10, a2, 0
400d2db9:	004aa5        	call8	400d3264 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)>
400d2dbc:	0a3d      	mov.n	a3, a10
400d2dbe:	27cb      	addi.n	a2, a7, 12
400d2dc0:	0228      	l32i.n	a2, a2, 0
400d2dc2:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2dc4:	27cb      	addi.n	a2, a7, 12
400d2dc6:	0228      	l32i.n	a2, a2, 0
400d2dc8:	0238      	l32i.n	a3, a2, 0
400d2dca:	27cb      	addi.n	a2, a7, 12
400d2dcc:	0228      	l32i.n	a2, a2, 0
400d2dce:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2dd0:	27cb      	addi.n	a2, a7, 12
400d2dd2:	0228      	l32i.n	a2, a2, 0
400d2dd4:	0238      	l32i.n	a3, a2, 0
400d2dd6:	278b      	addi.n	a2, a7, 8
400d2dd8:	0228      	l32i.n	a2, a2, 0
400d2dda:	1122f0        	slli	a2, a2, 1
400d2ddd:	332a      	add.n	a3, a3, a2
400d2ddf:	27cb      	addi.n	a2, a7, 12
400d2de1:	0228      	l32i.n	a2, a2, 0
400d2de3:	2239      	s32i.n	a3, a2, 8
      }
400d2de5:	f03d      	nop.n
400d2de7:	f01d      	retw.n
400d2de9:	000000        	ill

400d2dec <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2dec:	006136        	entry	a1, 48
400d2def:	017d      	mov.n	a7, a1
400d2df1:	57cb      	addi.n	a5, a7, 12
400d2df3:	0529      	s32i.n	a2, a5, 0
400d2df5:	278b      	addi.n	a2, a7, 8
400d2df7:	0239      	s32i.n	a3, a2, 0
400d2df9:	274b      	addi.n	a2, a7, 4
400d2dfb:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2dfd:	278b      	addi.n	a2, a7, 8
400d2dff:	0228      	l32i.n	a2, a2, 0
400d2e01:	f28c      	beqz.n	a2, 400d2e14 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_deallocate(unsigned short*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2e03:	27cb      	addi.n	a2, a7, 12
400d2e05:	0228      	l32i.n	a2, a2, 0
400d2e07:	474b      	addi.n	a4, a7, 4
400d2e09:	378b      	addi.n	a3, a7, 8
400d2e0b:	04c8      	l32i.n	a12, a4, 0
400d2e0d:	03b8      	l32i.n	a11, a3, 0
400d2e0f:	02ad      	mov.n	a10, a2
400d2e11:	0047e5        	call8	400d3290 <std::allocator_traits<std::allocator<unsigned short> >::deallocate(std::allocator<unsigned short>&, unsigned short*, unsigned int)>
      }
400d2e14:	f03d      	nop.n
400d2e16:	f01d      	retw.n

400d2e18 <unsigned short* std::__uninitialized_default_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, std::allocator<unsigned short>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2e18:	006136        	entry	a1, 48
400d2e1b:	017d      	mov.n	a7, a1
400d2e1d:	57cb      	addi.n	a5, a7, 12
400d2e1f:	0529      	s32i.n	a2, a5, 0
400d2e21:	278b      	addi.n	a2, a7, 8
400d2e23:	0239      	s32i.n	a3, a2, 0
400d2e25:	274b      	addi.n	a2, a7, 4
400d2e27:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2e29:	378b      	addi.n	a3, a7, 8
400d2e2b:	27cb      	addi.n	a2, a7, 12
400d2e2d:	03b8      	l32i.n	a11, a3, 0
400d2e2f:	02a8      	l32i.n	a10, a2, 0
400d2e31:	004825        	call8	400d32b4 <unsigned short* std::__uninitialized_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>
400d2e34:	0a2d      	mov.n	a2, a10
400d2e36:	f01d      	retw.n

400d2e38 <void std::_Destroy<unsigned short*>(unsigned short*, unsigned short*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2e38:	006136        	entry	a1, 48
400d2e3b:	017d      	mov.n	a7, a1
400d2e3d:	47cb      	addi.n	a4, a7, 12
400d2e3f:	0429      	s32i.n	a2, a4, 0
400d2e41:	278b      	addi.n	a2, a7, 8
400d2e43:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2e45:	378b      	addi.n	a3, a7, 8
400d2e47:	27cb      	addi.n	a2, a7, 12
400d2e49:	03b8      	l32i.n	a11, a3, 0
400d2e4b:	02a8      	l32i.n	a10, a2, 0
400d2e4d:	194a65        	call8	400ec2f4 <void std::_Destroy_aux<true>::__destroy<unsigned short*>(unsigned short*, unsigned short*)>
    }
400d2e50:	f03d      	nop.n
400d2e52:	f01d      	retw.n

400d2e54 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl::_Vector_impl(std::allocator<unsigned int> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2e54:	006136        	entry	a1, 48
400d2e57:	017d      	mov.n	a7, a1
400d2e59:	47cb      	addi.n	a4, a7, 12
400d2e5b:	0429      	s32i.n	a2, a4, 0
400d2e5d:	278b      	addi.n	a2, a7, 8
400d2e5f:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2e61:	378b      	addi.n	a3, a7, 8
400d2e63:	27cb      	addi.n	a2, a7, 12
400d2e65:	03b8      	l32i.n	a11, a3, 0
400d2e67:	02a8      	l32i.n	a10, a2, 0
400d2e69:	0046e5        	call8	400d32d8 <std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&)>
400d2e6c:	27cb      	addi.n	a2, a7, 12
400d2e6e:	0228      	l32i.n	a2, a2, 0
400d2e70:	030c      	movi.n	a3, 0
400d2e72:	0239      	s32i.n	a3, a2, 0
400d2e74:	27cb      	addi.n	a2, a7, 12
400d2e76:	0228      	l32i.n	a2, a2, 0
400d2e78:	030c      	movi.n	a3, 0
400d2e7a:	1239      	s32i.n	a3, a2, 4
400d2e7c:	27cb      	addi.n	a2, a7, 12
400d2e7e:	0228      	l32i.n	a2, a2, 0
400d2e80:	030c      	movi.n	a3, 0
400d2e82:	2239      	s32i.n	a3, a2, 8
	{ }
400d2e84:	f03d      	nop.n
400d2e86:	f01d      	retw.n

400d2e88 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2e88:	006136        	entry	a1, 48
400d2e8b:	017d      	mov.n	a7, a1
400d2e8d:	47cb      	addi.n	a4, a7, 12
400d2e8f:	0429      	s32i.n	a2, a4, 0
400d2e91:	278b      	addi.n	a2, a7, 8
400d2e93:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2e95:	378b      	addi.n	a3, a7, 8
400d2e97:	27cb      	addi.n	a2, a7, 12
400d2e99:	03b8      	l32i.n	a11, a3, 0
400d2e9b:	02a8      	l32i.n	a10, a2, 0
400d2e9d:	004565        	call8	400d32f4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)>
400d2ea0:	0a3d      	mov.n	a3, a10
400d2ea2:	27cb      	addi.n	a2, a7, 12
400d2ea4:	0228      	l32i.n	a2, a2, 0
400d2ea6:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2ea8:	27cb      	addi.n	a2, a7, 12
400d2eaa:	0228      	l32i.n	a2, a2, 0
400d2eac:	0238      	l32i.n	a3, a2, 0
400d2eae:	27cb      	addi.n	a2, a7, 12
400d2eb0:	0228      	l32i.n	a2, a2, 0
400d2eb2:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2eb4:	27cb      	addi.n	a2, a7, 12
400d2eb6:	0228      	l32i.n	a2, a2, 0
400d2eb8:	0238      	l32i.n	a3, a2, 0
400d2eba:	278b      	addi.n	a2, a7, 8
400d2ebc:	0228      	l32i.n	a2, a2, 0
400d2ebe:	1122e0        	slli	a2, a2, 2
400d2ec1:	332a      	add.n	a3, a3, a2
400d2ec3:	27cb      	addi.n	a2, a7, 12
400d2ec5:	0228      	l32i.n	a2, a2, 0
400d2ec7:	2239      	s32i.n	a3, a2, 8
      }
400d2ec9:	f03d      	nop.n
400d2ecb:	f01d      	retw.n
400d2ecd:	000000        	ill

400d2ed0 <unsigned int* std::__uninitialized_default_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, std::allocator<unsigned int>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2ed0:	006136        	entry	a1, 48
400d2ed3:	017d      	mov.n	a7, a1
400d2ed5:	57cb      	addi.n	a5, a7, 12
400d2ed7:	0529      	s32i.n	a2, a5, 0
400d2ed9:	278b      	addi.n	a2, a7, 8
400d2edb:	0239      	s32i.n	a3, a2, 0
400d2edd:	274b      	addi.n	a2, a7, 4
400d2edf:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2ee1:	378b      	addi.n	a3, a7, 8
400d2ee3:	27cb      	addi.n	a2, a7, 12
400d2ee5:	03b8      	l32i.n	a11, a3, 0
400d2ee7:	02a8      	l32i.n	a10, a2, 0
400d2ee9:	004365        	call8	400d3320 <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>
400d2eec:	0a2d      	mov.n	a2, a10
400d2eee:	f01d      	retw.n

400d2ef0 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_Vector_impl::_Vector_impl(std::allocator<unsigned long long> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2ef0:	006136        	entry	a1, 48
400d2ef3:	017d      	mov.n	a7, a1
400d2ef5:	47cb      	addi.n	a4, a7, 12
400d2ef7:	0429      	s32i.n	a2, a4, 0
400d2ef9:	278b      	addi.n	a2, a7, 8
400d2efb:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2efd:	378b      	addi.n	a3, a7, 8
400d2eff:	27cb      	addi.n	a2, a7, 12
400d2f01:	03b8      	l32i.n	a11, a3, 0
400d2f03:	02a8      	l32i.n	a10, a2, 0
400d2f05:	0043e5        	call8	400d3344 <std::allocator<unsigned long long>::allocator(std::allocator<unsigned long long> const&)>
400d2f08:	27cb      	addi.n	a2, a7, 12
400d2f0a:	0228      	l32i.n	a2, a2, 0
400d2f0c:	030c      	movi.n	a3, 0
400d2f0e:	0239      	s32i.n	a3, a2, 0
400d2f10:	27cb      	addi.n	a2, a7, 12
400d2f12:	0228      	l32i.n	a2, a2, 0
400d2f14:	030c      	movi.n	a3, 0
400d2f16:	1239      	s32i.n	a3, a2, 4
400d2f18:	27cb      	addi.n	a2, a7, 12
400d2f1a:	0228      	l32i.n	a2, a2, 0
400d2f1c:	030c      	movi.n	a3, 0
400d2f1e:	2239      	s32i.n	a3, a2, 8
	{ }
400d2f20:	f03d      	nop.n
400d2f22:	f01d      	retw.n

400d2f24 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d2f24:	006136        	entry	a1, 48
400d2f27:	017d      	mov.n	a7, a1
400d2f29:	47cb      	addi.n	a4, a7, 12
400d2f2b:	0429      	s32i.n	a2, a4, 0
400d2f2d:	278b      	addi.n	a2, a7, 8
400d2f2f:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d2f31:	378b      	addi.n	a3, a7, 8
400d2f33:	27cb      	addi.n	a2, a7, 12
400d2f35:	03b8      	l32i.n	a11, a3, 0
400d2f37:	02a8      	l32i.n	a10, a2, 0
400d2f39:	004265        	call8	400d3360 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)>
400d2f3c:	0a3d      	mov.n	a3, a10
400d2f3e:	27cb      	addi.n	a2, a7, 12
400d2f40:	0228      	l32i.n	a2, a2, 0
400d2f42:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d2f44:	27cb      	addi.n	a2, a7, 12
400d2f46:	0228      	l32i.n	a2, a2, 0
400d2f48:	0238      	l32i.n	a3, a2, 0
400d2f4a:	27cb      	addi.n	a2, a7, 12
400d2f4c:	0228      	l32i.n	a2, a2, 0
400d2f4e:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d2f50:	27cb      	addi.n	a2, a7, 12
400d2f52:	0228      	l32i.n	a2, a2, 0
400d2f54:	0238      	l32i.n	a3, a2, 0
400d2f56:	278b      	addi.n	a2, a7, 8
400d2f58:	0228      	l32i.n	a2, a2, 0
400d2f5a:	1122d0        	slli	a2, a2, 3
400d2f5d:	332a      	add.n	a3, a3, a2
400d2f5f:	27cb      	addi.n	a2, a7, 12
400d2f61:	0228      	l32i.n	a2, a2, 0
400d2f63:	2239      	s32i.n	a3, a2, 8
      }
400d2f65:	f03d      	nop.n
400d2f67:	f01d      	retw.n
400d2f69:	000000        	ill

400d2f6c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d2f6c:	006136        	entry	a1, 48
400d2f6f:	017d      	mov.n	a7, a1
400d2f71:	57cb      	addi.n	a5, a7, 12
400d2f73:	0529      	s32i.n	a2, a5, 0
400d2f75:	278b      	addi.n	a2, a7, 8
400d2f77:	0239      	s32i.n	a3, a2, 0
400d2f79:	274b      	addi.n	a2, a7, 4
400d2f7b:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d2f7d:	278b      	addi.n	a2, a7, 8
400d2f7f:	0228      	l32i.n	a2, a2, 0
400d2f81:	f28c      	beqz.n	a2, 400d2f94 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_deallocate(unsigned long long*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d2f83:	27cb      	addi.n	a2, a7, 12
400d2f85:	0228      	l32i.n	a2, a2, 0
400d2f87:	474b      	addi.n	a4, a7, 4
400d2f89:	378b      	addi.n	a3, a7, 8
400d2f8b:	04c8      	l32i.n	a12, a4, 0
400d2f8d:	03b8      	l32i.n	a11, a3, 0
400d2f8f:	02ad      	mov.n	a10, a2
400d2f91:	003fa5        	call8	400d338c <std::allocator_traits<std::allocator<unsigned long long> >::deallocate(std::allocator<unsigned long long>&, unsigned long long*, unsigned int)>
      }
400d2f94:	f03d      	nop.n
400d2f96:	f01d      	retw.n

400d2f98 <unsigned long long* std::__uninitialized_default_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, std::allocator<unsigned long long>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d2f98:	006136        	entry	a1, 48
400d2f9b:	017d      	mov.n	a7, a1
400d2f9d:	57cb      	addi.n	a5, a7, 12
400d2f9f:	0529      	s32i.n	a2, a5, 0
400d2fa1:	278b      	addi.n	a2, a7, 8
400d2fa3:	0239      	s32i.n	a3, a2, 0
400d2fa5:	274b      	addi.n	a2, a7, 4
400d2fa7:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d2fa9:	378b      	addi.n	a3, a7, 8
400d2fab:	27cb      	addi.n	a2, a7, 12
400d2fad:	03b8      	l32i.n	a11, a3, 0
400d2faf:	02a8      	l32i.n	a10, a2, 0
400d2fb1:	003fe5        	call8	400d33b0 <unsigned long long* std::__uninitialized_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>
400d2fb4:	0a2d      	mov.n	a2, a10
400d2fb6:	f01d      	retw.n

400d2fb8 <void std::_Destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d2fb8:	006136        	entry	a1, 48
400d2fbb:	017d      	mov.n	a7, a1
400d2fbd:	47cb      	addi.n	a4, a7, 12
400d2fbf:	0429      	s32i.n	a2, a4, 0
400d2fc1:	278b      	addi.n	a2, a7, 8
400d2fc3:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d2fc5:	378b      	addi.n	a3, a7, 8
400d2fc7:	27cb      	addi.n	a2, a7, 12
400d2fc9:	03b8      	l32i.n	a11, a3, 0
400d2fcb:	02a8      	l32i.n	a10, a2, 0
400d2fcd:	1933a5        	call8	400ec308 <void std::_Destroy_aux<true>::__destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>
    }
400d2fd0:	f03d      	nop.n
400d2fd2:	f01d      	retw.n

400d2fd4 <std::_Vector_base<float, std::allocator<float> >::_Vector_impl::_Vector_impl(std::allocator<float> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d2fd4:	006136        	entry	a1, 48
400d2fd7:	017d      	mov.n	a7, a1
400d2fd9:	47cb      	addi.n	a4, a7, 12
400d2fdb:	0429      	s32i.n	a2, a4, 0
400d2fdd:	278b      	addi.n	a2, a7, 8
400d2fdf:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d2fe1:	378b      	addi.n	a3, a7, 8
400d2fe3:	27cb      	addi.n	a2, a7, 12
400d2fe5:	03b8      	l32i.n	a11, a3, 0
400d2fe7:	02a8      	l32i.n	a10, a2, 0
400d2fe9:	003ea5        	call8	400d33d4 <std::allocator<float>::allocator(std::allocator<float> const&)>
400d2fec:	27cb      	addi.n	a2, a7, 12
400d2fee:	0228      	l32i.n	a2, a2, 0
400d2ff0:	030c      	movi.n	a3, 0
400d2ff2:	0239      	s32i.n	a3, a2, 0
400d2ff4:	27cb      	addi.n	a2, a7, 12
400d2ff6:	0228      	l32i.n	a2, a2, 0
400d2ff8:	030c      	movi.n	a3, 0
400d2ffa:	1239      	s32i.n	a3, a2, 4
400d2ffc:	27cb      	addi.n	a2, a7, 12
400d2ffe:	0228      	l32i.n	a2, a2, 0
400d3000:	030c      	movi.n	a3, 0
400d3002:	2239      	s32i.n	a3, a2, 8
	{ }
400d3004:	f03d      	nop.n
400d3006:	f01d      	retw.n

400d3008 <std::_Vector_base<float, std::allocator<float> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d3008:	006136        	entry	a1, 48
400d300b:	017d      	mov.n	a7, a1
400d300d:	47cb      	addi.n	a4, a7, 12
400d300f:	0429      	s32i.n	a2, a4, 0
400d3011:	278b      	addi.n	a2, a7, 8
400d3013:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d3015:	378b      	addi.n	a3, a7, 8
400d3017:	27cb      	addi.n	a2, a7, 12
400d3019:	03b8      	l32i.n	a11, a3, 0
400d301b:	02a8      	l32i.n	a10, a2, 0
400d301d:	003d25        	call8	400d33f0 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)>
400d3020:	0a3d      	mov.n	a3, a10
400d3022:	27cb      	addi.n	a2, a7, 12
400d3024:	0228      	l32i.n	a2, a2, 0
400d3026:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d3028:	27cb      	addi.n	a2, a7, 12
400d302a:	0228      	l32i.n	a2, a2, 0
400d302c:	0238      	l32i.n	a3, a2, 0
400d302e:	27cb      	addi.n	a2, a7, 12
400d3030:	0228      	l32i.n	a2, a2, 0
400d3032:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d3034:	27cb      	addi.n	a2, a7, 12
400d3036:	0228      	l32i.n	a2, a2, 0
400d3038:	0238      	l32i.n	a3, a2, 0
400d303a:	278b      	addi.n	a2, a7, 8
400d303c:	0228      	l32i.n	a2, a2, 0
400d303e:	1122e0        	slli	a2, a2, 2
400d3041:	332a      	add.n	a3, a3, a2
400d3043:	27cb      	addi.n	a2, a7, 12
400d3045:	0228      	l32i.n	a2, a2, 0
400d3047:	2239      	s32i.n	a3, a2, 8
      }
400d3049:	f03d      	nop.n
400d304b:	f01d      	retw.n
400d304d:	000000        	ill

400d3050 <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d3050:	006136        	entry	a1, 48
400d3053:	017d      	mov.n	a7, a1
400d3055:	57cb      	addi.n	a5, a7, 12
400d3057:	0529      	s32i.n	a2, a5, 0
400d3059:	278b      	addi.n	a2, a7, 8
400d305b:	0239      	s32i.n	a3, a2, 0
400d305d:	274b      	addi.n	a2, a7, 4
400d305f:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d3061:	278b      	addi.n	a2, a7, 8
400d3063:	0228      	l32i.n	a2, a2, 0
400d3065:	f28c      	beqz.n	a2, 400d3078 <std::_Vector_base<float, std::allocator<float> >::_M_deallocate(float*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d3067:	27cb      	addi.n	a2, a7, 12
400d3069:	0228      	l32i.n	a2, a2, 0
400d306b:	474b      	addi.n	a4, a7, 4
400d306d:	378b      	addi.n	a3, a7, 8
400d306f:	04c8      	l32i.n	a12, a4, 0
400d3071:	03b8      	l32i.n	a11, a3, 0
400d3073:	02ad      	mov.n	a10, a2
400d3075:	003a65        	call8	400d341c <std::allocator_traits<std::allocator<float> >::deallocate(std::allocator<float>&, float*, unsigned int)>
      }
400d3078:	f03d      	nop.n
400d307a:	f01d      	retw.n

400d307c <float* std::__uninitialized_default_n_a<float*, unsigned int, float>(float*, unsigned int, std::allocator<float>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d307c:	006136        	entry	a1, 48
400d307f:	017d      	mov.n	a7, a1
400d3081:	57cb      	addi.n	a5, a7, 12
400d3083:	0529      	s32i.n	a2, a5, 0
400d3085:	278b      	addi.n	a2, a7, 8
400d3087:	0239      	s32i.n	a3, a2, 0
400d3089:	274b      	addi.n	a2, a7, 4
400d308b:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d308d:	378b      	addi.n	a3, a7, 8
400d308f:	27cb      	addi.n	a2, a7, 12
400d3091:	03b8      	l32i.n	a11, a3, 0
400d3093:	02a8      	l32i.n	a10, a2, 0
400d3095:	003aa5        	call8	400d3440 <float* std::__uninitialized_default_n<float*, unsigned int>(float*, unsigned int)>
400d3098:	0a2d      	mov.n	a2, a10
400d309a:	f01d      	retw.n

400d309c <void std::_Destroy<float*>(float*, float*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d309c:	006136        	entry	a1, 48
400d309f:	017d      	mov.n	a7, a1
400d30a1:	47cb      	addi.n	a4, a7, 12
400d30a3:	0429      	s32i.n	a2, a4, 0
400d30a5:	278b      	addi.n	a2, a7, 8
400d30a7:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d30a9:	378b      	addi.n	a3, a7, 8
400d30ab:	27cb      	addi.n	a2, a7, 12
400d30ad:	03b8      	l32i.n	a11, a3, 0
400d30af:	02a8      	l32i.n	a10, a2, 0
400d30b1:	1926a5        	call8	400ec31c <void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)>
    }
400d30b4:	f03d      	nop.n
400d30b6:	f01d      	retw.n

400d30b8 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
400d30b8:	006136        	entry	a1, 48
400d30bb:	017d      	mov.n	a7, a1
400d30bd:	47cb      	addi.n	a4, a7, 12
400d30bf:	0429      	s32i.n	a2, a4, 0
400d30c1:	278b      	addi.n	a2, a7, 8
400d30c3:	0239      	s32i.n	a3, a2, 0
	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
400d30c5:	378b      	addi.n	a3, a7, 8
400d30c7:	27cb      	addi.n	a2, a7, 12
400d30c9:	03b8      	l32i.n	a11, a3, 0
400d30cb:	02a8      	l32i.n	a10, a2, 0
400d30cd:	003965        	call8	400d3464 <std::allocator<double>::allocator(std::allocator<double> const&)>
400d30d0:	27cb      	addi.n	a2, a7, 12
400d30d2:	0228      	l32i.n	a2, a2, 0
400d30d4:	030c      	movi.n	a3, 0
400d30d6:	0239      	s32i.n	a3, a2, 0
400d30d8:	27cb      	addi.n	a2, a7, 12
400d30da:	0228      	l32i.n	a2, a2, 0
400d30dc:	030c      	movi.n	a3, 0
400d30de:	1239      	s32i.n	a3, a2, 4
400d30e0:	27cb      	addi.n	a2, a7, 12
400d30e2:	0228      	l32i.n	a2, a2, 0
400d30e4:	030c      	movi.n	a3, 0
400d30e6:	2239      	s32i.n	a3, a2, 8
	{ }
400d30e8:	f03d      	nop.n
400d30ea:	f01d      	retw.n

400d30ec <std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned int)>:
      _M_create_storage(size_t __n)
400d30ec:	006136        	entry	a1, 48
400d30ef:	017d      	mov.n	a7, a1
400d30f1:	47cb      	addi.n	a4, a7, 12
400d30f3:	0429      	s32i.n	a2, a4, 0
400d30f5:	278b      	addi.n	a2, a7, 8
400d30f7:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_start = this->_M_allocate(__n);
400d30f9:	378b      	addi.n	a3, a7, 8
400d30fb:	27cb      	addi.n	a2, a7, 12
400d30fd:	03b8      	l32i.n	a11, a3, 0
400d30ff:	02a8      	l32i.n	a10, a2, 0
400d3101:	0037e5        	call8	400d3480 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)>
400d3104:	0a3d      	mov.n	a3, a10
400d3106:	27cb      	addi.n	a2, a7, 12
400d3108:	0228      	l32i.n	a2, a2, 0
400d310a:	0239      	s32i.n	a3, a2, 0
	this->_M_impl._M_finish = this->_M_impl._M_start;
400d310c:	27cb      	addi.n	a2, a7, 12
400d310e:	0228      	l32i.n	a2, a2, 0
400d3110:	0238      	l32i.n	a3, a2, 0
400d3112:	27cb      	addi.n	a2, a7, 12
400d3114:	0228      	l32i.n	a2, a2, 0
400d3116:	1239      	s32i.n	a3, a2, 4
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
400d3118:	27cb      	addi.n	a2, a7, 12
400d311a:	0228      	l32i.n	a2, a2, 0
400d311c:	0238      	l32i.n	a3, a2, 0
400d311e:	278b      	addi.n	a2, a7, 8
400d3120:	0228      	l32i.n	a2, a2, 0
400d3122:	1122d0        	slli	a2, a2, 3
400d3125:	332a      	add.n	a3, a3, a2
400d3127:	27cb      	addi.n	a2, a7, 12
400d3129:	0228      	l32i.n	a2, a2, 0
400d312b:	2239      	s32i.n	a3, a2, 8
      }
400d312d:	f03d      	nop.n
400d312f:	f01d      	retw.n
400d3131:	000000        	ill

400d3134 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)>:
      _M_deallocate(pointer __p, size_t __n)
400d3134:	006136        	entry	a1, 48
400d3137:	017d      	mov.n	a7, a1
400d3139:	57cb      	addi.n	a5, a7, 12
400d313b:	0529      	s32i.n	a2, a5, 0
400d313d:	278b      	addi.n	a2, a7, 8
400d313f:	0239      	s32i.n	a3, a2, 0
400d3141:	274b      	addi.n	a2, a7, 4
400d3143:	0249      	s32i.n	a4, a2, 0
	if (__p)
400d3145:	278b      	addi.n	a2, a7, 8
400d3147:	0228      	l32i.n	a2, a2, 0
400d3149:	f28c      	beqz.n	a2, 400d315c <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned int)+0x28>
	  _Tr::deallocate(_M_impl, __p, __n);
400d314b:	27cb      	addi.n	a2, a7, 12
400d314d:	0228      	l32i.n	a2, a2, 0
400d314f:	474b      	addi.n	a4, a7, 4
400d3151:	378b      	addi.n	a3, a7, 8
400d3153:	04c8      	l32i.n	a12, a4, 0
400d3155:	03b8      	l32i.n	a11, a3, 0
400d3157:	02ad      	mov.n	a10, a2
400d3159:	003525        	call8	400d34ac <std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned int)>
      }
400d315c:	f03d      	nop.n
400d315e:	f01d      	retw.n

400d3160 <double* std::__uninitialized_default_n_a<double*, unsigned int, double>(double*, unsigned int, std::allocator<double>&)>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
400d3160:	006136        	entry	a1, 48
400d3163:	017d      	mov.n	a7, a1
400d3165:	57cb      	addi.n	a5, a7, 12
400d3167:	0529      	s32i.n	a2, a5, 0
400d3169:	278b      	addi.n	a2, a7, 8
400d316b:	0239      	s32i.n	a3, a2, 0
400d316d:	274b      	addi.n	a2, a7, 4
400d316f:	0249      	s32i.n	a4, a2, 0
    { return std::__uninitialized_default_n(__first, __n); }
400d3171:	378b      	addi.n	a3, a7, 8
400d3173:	27cb      	addi.n	a2, a7, 12
400d3175:	03b8      	l32i.n	a11, a3, 0
400d3177:	02a8      	l32i.n	a10, a2, 0
400d3179:	003565        	call8	400d34d0 <double* std::__uninitialized_default_n<double*, unsigned int>(double*, unsigned int)>
400d317c:	0a2d      	mov.n	a2, a10
400d317e:	f01d      	retw.n

400d3180 <void std::_Destroy<double*>(double*, double*)>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
400d3180:	006136        	entry	a1, 48
400d3183:	017d      	mov.n	a7, a1
400d3185:	47cb      	addi.n	a4, a7, 12
400d3187:	0429      	s32i.n	a2, a4, 0
400d3189:	278b      	addi.n	a2, a7, 8
400d318b:	0239      	s32i.n	a3, a2, 0
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
400d318d:	378b      	addi.n	a3, a7, 8
400d318f:	27cb      	addi.n	a2, a7, 12
400d3191:	03b8      	l32i.n	a11, a3, 0
400d3193:	02a8      	l32i.n	a10, a2, 0
400d3195:	1919a5        	call8	400ec330 <void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)>
    }
400d3198:	f03d      	nop.n
400d319a:	f01d      	retw.n

400d319c <__gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned int)>:
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(pointer __p, size_type)
400d319c:	006136        	entry	a1, 48
400d319f:	017d      	mov.n	a7, a1
400d31a1:	57cb      	addi.n	a5, a7, 12
400d31a3:	0529      	s32i.n	a2, a5, 0
400d31a5:	278b      	addi.n	a2, a7, 8
400d31a7:	0239      	s32i.n	a3, a2, 0
400d31a9:	274b      	addi.n	a2, a7, 4
400d31ab:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d31ad:	278b      	addi.n	a2, a7, 8
400d31af:	02a8      	l32i.n	a10, a2, 0
400d31b1:	17a4a5        	call8	400eabfc <operator delete(void*)>
400d31b4:	f03d      	nop.n
400d31b6:	f01d      	retw.n

400d31b8 <std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)>:
      allocator(const allocator& __a) throw()
400d31b8:	006136        	entry	a1, 48
400d31bb:	017d      	mov.n	a7, a1
400d31bd:	47cb      	addi.n	a4, a7, 12
400d31bf:	0429      	s32i.n	a2, a4, 0
400d31c1:	278b      	addi.n	a2, a7, 8
400d31c3:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d31c5:	378b      	addi.n	a3, a7, 8
400d31c7:	27cb      	addi.n	a2, a7, 12
400d31c9:	03b8      	l32i.n	a11, a3, 0
400d31cb:	02a8      	l32i.n	a10, a2, 0
400d31cd:	191765        	call8	400ec344 <__gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&)>
400d31d0:	f03d      	nop.n
400d31d2:	f01d      	retw.n

400d31d4 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d31d4:	006136        	entry	a1, 48
400d31d7:	017d      	mov.n	a7, a1
400d31d9:	47cb      	addi.n	a4, a7, 12
400d31db:	0429      	s32i.n	a2, a4, 0
400d31dd:	278b      	addi.n	a2, a7, 8
400d31df:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d31e1:	278b      	addi.n	a2, a7, 8
400d31e3:	0228      	l32i.n	a2, a2, 0
400d31e5:	029c      	beqz.n	a2, 400d31f9 <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)+0x25>
400d31e7:	27cb      	addi.n	a2, a7, 12
400d31e9:	0228      	l32i.n	a2, a2, 0
400d31eb:	378b      	addi.n	a3, a7, 8
400d31ed:	03b8      	l32i.n	a11, a3, 0
400d31ef:	02ad      	mov.n	a10, a2
400d31f1:	003025        	call8	400d34f4 <std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned int)>
400d31f4:	0a2d      	mov.n	a2, a10
400d31f6:	000046        	j	400d31fb <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned int)+0x27>
400d31f9:	020c      	movi.n	a2, 0
      }
400d31fb:	f01d      	retw.n
400d31fd:	000000        	ill

400d3200 <std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d3200:	006136        	entry	a1, 48
400d3203:	017d      	mov.n	a7, a1
400d3205:	57cb      	addi.n	a5, a7, 12
400d3207:	0529      	s32i.n	a2, a5, 0
400d3209:	278b      	addi.n	a2, a7, 8
400d320b:	0239      	s32i.n	a3, a2, 0
400d320d:	274b      	addi.n	a2, a7, 4
400d320f:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d3211:	474b      	addi.n	a4, a7, 4
400d3213:	378b      	addi.n	a3, a7, 8
400d3215:	27cb      	addi.n	a2, a7, 12
400d3217:	04c8      	l32i.n	a12, a4, 0
400d3219:	03b8      	l32i.n	a11, a3, 0
400d321b:	02a8      	l32i.n	a10, a2, 0
400d321d:	002fa5        	call8	400d3518 <__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned int)>
400d3220:	f03d      	nop.n
400d3222:	f01d      	retw.n

400d3224 <unsigned char* std::__uninitialized_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d3224:	008136        	entry	a1, 64
400d3227:	017d      	mov.n	a7, a1
400d3229:	47cb      	addi.n	a4, a7, 12
400d322b:	0429      	s32i.n	a2, a4, 0
400d322d:	278b      	addi.n	a2, a7, 8
400d322f:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d3231:	1fc722        	addi	a2, a7, 31
400d3234:	130c      	movi.n	a3, 1
400d3236:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d3239:	378b      	addi.n	a3, a7, 8
400d323b:	27cb      	addi.n	a2, a7, 12
400d323d:	03b8      	l32i.n	a11, a3, 0
400d323f:	02a8      	l32i.n	a10, a2, 0
400d3241:	002f25        	call8	400d3534 <unsigned char* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>
400d3244:	0a2d      	mov.n	a2, a10
    }
400d3246:	f01d      	retw.n

400d3248 <std::allocator<unsigned short>::allocator(std::allocator<unsigned short> const&)>:
      allocator(const allocator& __a) throw()
400d3248:	006136        	entry	a1, 48
400d324b:	017d      	mov.n	a7, a1
400d324d:	47cb      	addi.n	a4, a7, 12
400d324f:	0429      	s32i.n	a2, a4, 0
400d3251:	278b      	addi.n	a2, a7, 8
400d3253:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d3255:	378b      	addi.n	a3, a7, 8
400d3257:	27cb      	addi.n	a2, a7, 12
400d3259:	03b8      	l32i.n	a11, a3, 0
400d325b:	02a8      	l32i.n	a10, a2, 0
400d325d:	190fa5        	call8	400ec358 <__gnu_cxx::new_allocator<unsigned short>::new_allocator(__gnu_cxx::new_allocator<unsigned short> const&)>
400d3260:	f03d      	nop.n
400d3262:	f01d      	retw.n

400d3264 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d3264:	006136        	entry	a1, 48
400d3267:	017d      	mov.n	a7, a1
400d3269:	47cb      	addi.n	a4, a7, 12
400d326b:	0429      	s32i.n	a2, a4, 0
400d326d:	278b      	addi.n	a2, a7, 8
400d326f:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d3271:	278b      	addi.n	a2, a7, 8
400d3273:	0228      	l32i.n	a2, a2, 0
400d3275:	029c      	beqz.n	a2, 400d3289 <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)+0x25>
400d3277:	27cb      	addi.n	a2, a7, 12
400d3279:	0228      	l32i.n	a2, a2, 0
400d327b:	378b      	addi.n	a3, a7, 8
400d327d:	03b8      	l32i.n	a11, a3, 0
400d327f:	02ad      	mov.n	a10, a2
400d3281:	002de5        	call8	400d3560 <std::allocator_traits<std::allocator<unsigned short> >::allocate(std::allocator<unsigned short>&, unsigned int)>
400d3284:	0a2d      	mov.n	a2, a10
400d3286:	000046        	j	400d328b <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_allocate(unsigned int)+0x27>
400d3289:	020c      	movi.n	a2, 0
      }
400d328b:	f01d      	retw.n
400d328d:	000000        	ill

400d3290 <std::allocator_traits<std::allocator<unsigned short> >::deallocate(std::allocator<unsigned short>&, unsigned short*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d3290:	006136        	entry	a1, 48
400d3293:	017d      	mov.n	a7, a1
400d3295:	57cb      	addi.n	a5, a7, 12
400d3297:	0529      	s32i.n	a2, a5, 0
400d3299:	278b      	addi.n	a2, a7, 8
400d329b:	0239      	s32i.n	a3, a2, 0
400d329d:	274b      	addi.n	a2, a7, 4
400d329f:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d32a1:	474b      	addi.n	a4, a7, 4
400d32a3:	378b      	addi.n	a3, a7, 8
400d32a5:	27cb      	addi.n	a2, a7, 12
400d32a7:	04c8      	l32i.n	a12, a4, 0
400d32a9:	03b8      	l32i.n	a11, a3, 0
400d32ab:	02a8      	l32i.n	a10, a2, 0
400d32ad:	002d65        	call8	400d3584 <__gnu_cxx::new_allocator<unsigned short>::deallocate(unsigned short*, unsigned int)>
400d32b0:	f03d      	nop.n
400d32b2:	f01d      	retw.n

400d32b4 <unsigned short* std::__uninitialized_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d32b4:	008136        	entry	a1, 64
400d32b7:	017d      	mov.n	a7, a1
400d32b9:	47cb      	addi.n	a4, a7, 12
400d32bb:	0429      	s32i.n	a2, a4, 0
400d32bd:	278b      	addi.n	a2, a7, 8
400d32bf:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d32c1:	1fc722        	addi	a2, a7, 31
400d32c4:	130c      	movi.n	a3, 1
400d32c6:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d32c9:	378b      	addi.n	a3, a7, 8
400d32cb:	27cb      	addi.n	a2, a7, 12
400d32cd:	03b8      	l32i.n	a11, a3, 0
400d32cf:	02a8      	l32i.n	a10, a2, 0
400d32d1:	002ce5        	call8	400d35a0 <unsigned short* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>
400d32d4:	0a2d      	mov.n	a2, a10
    }
400d32d6:	f01d      	retw.n

400d32d8 <std::allocator<unsigned int>::allocator(std::allocator<unsigned int> const&)>:
      allocator(const allocator& __a) throw()
400d32d8:	006136        	entry	a1, 48
400d32db:	017d      	mov.n	a7, a1
400d32dd:	47cb      	addi.n	a4, a7, 12
400d32df:	0429      	s32i.n	a2, a4, 0
400d32e1:	278b      	addi.n	a2, a7, 8
400d32e3:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d32e5:	378b      	addi.n	a3, a7, 8
400d32e7:	27cb      	addi.n	a2, a7, 12
400d32e9:	03b8      	l32i.n	a11, a3, 0
400d32eb:	02a8      	l32i.n	a10, a2, 0
400d32ed:	1907e5        	call8	400ec36c <__gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&)>
400d32f0:	f03d      	nop.n
400d32f2:	f01d      	retw.n

400d32f4 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d32f4:	006136        	entry	a1, 48
400d32f7:	017d      	mov.n	a7, a1
400d32f9:	47cb      	addi.n	a4, a7, 12
400d32fb:	0429      	s32i.n	a2, a4, 0
400d32fd:	278b      	addi.n	a2, a7, 8
400d32ff:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d3301:	278b      	addi.n	a2, a7, 8
400d3303:	0228      	l32i.n	a2, a2, 0
400d3305:	029c      	beqz.n	a2, 400d3319 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)+0x25>
400d3307:	27cb      	addi.n	a2, a7, 12
400d3309:	0228      	l32i.n	a2, a2, 0
400d330b:	378b      	addi.n	a3, a7, 8
400d330d:	03b8      	l32i.n	a11, a3, 0
400d330f:	02ad      	mov.n	a10, a2
400d3311:	002ba5        	call8	400d35cc <std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned int)>
400d3314:	0a2d      	mov.n	a2, a10
400d3316:	000046        	j	400d331b <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_allocate(unsigned int)+0x27>
400d3319:	020c      	movi.n	a2, 0
      }
400d331b:	f01d      	retw.n
400d331d:	000000        	ill

400d3320 <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d3320:	008136        	entry	a1, 64
400d3323:	017d      	mov.n	a7, a1
400d3325:	47cb      	addi.n	a4, a7, 12
400d3327:	0429      	s32i.n	a2, a4, 0
400d3329:	278b      	addi.n	a2, a7, 8
400d332b:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d332d:	1fc722        	addi	a2, a7, 31
400d3330:	130c      	movi.n	a3, 1
400d3332:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d3335:	378b      	addi.n	a3, a7, 8
400d3337:	27cb      	addi.n	a2, a7, 12
400d3339:	03b8      	l32i.n	a11, a3, 0
400d333b:	02a8      	l32i.n	a10, a2, 0
400d333d:	002b25        	call8	400d35f0 <unsigned int* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>
400d3340:	0a2d      	mov.n	a2, a10
    }
400d3342:	f01d      	retw.n

400d3344 <std::allocator<unsigned long long>::allocator(std::allocator<unsigned long long> const&)>:
      allocator(const allocator& __a) throw()
400d3344:	006136        	entry	a1, 48
400d3347:	017d      	mov.n	a7, a1
400d3349:	47cb      	addi.n	a4, a7, 12
400d334b:	0429      	s32i.n	a2, a4, 0
400d334d:	278b      	addi.n	a2, a7, 8
400d334f:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d3351:	378b      	addi.n	a3, a7, 8
400d3353:	27cb      	addi.n	a2, a7, 12
400d3355:	03b8      	l32i.n	a11, a3, 0
400d3357:	02a8      	l32i.n	a10, a2, 0
400d3359:	190265        	call8	400ec380 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator(__gnu_cxx::new_allocator<unsigned long long> const&)>
400d335c:	f03d      	nop.n
400d335e:	f01d      	retw.n

400d3360 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d3360:	006136        	entry	a1, 48
400d3363:	017d      	mov.n	a7, a1
400d3365:	47cb      	addi.n	a4, a7, 12
400d3367:	0429      	s32i.n	a2, a4, 0
400d3369:	278b      	addi.n	a2, a7, 8
400d336b:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d336d:	278b      	addi.n	a2, a7, 8
400d336f:	0228      	l32i.n	a2, a2, 0
400d3371:	029c      	beqz.n	a2, 400d3385 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)+0x25>
400d3373:	27cb      	addi.n	a2, a7, 12
400d3375:	0228      	l32i.n	a2, a2, 0
400d3377:	378b      	addi.n	a3, a7, 8
400d3379:	03b8      	l32i.n	a11, a3, 0
400d337b:	02ad      	mov.n	a10, a2
400d337d:	0029a5        	call8	400d3618 <std::allocator_traits<std::allocator<unsigned long long> >::allocate(std::allocator<unsigned long long>&, unsigned int)>
400d3380:	0a2d      	mov.n	a2, a10
400d3382:	000046        	j	400d3387 <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_allocate(unsigned int)+0x27>
400d3385:	020c      	movi.n	a2, 0
      }
400d3387:	f01d      	retw.n
400d3389:	000000        	ill

400d338c <std::allocator_traits<std::allocator<unsigned long long> >::deallocate(std::allocator<unsigned long long>&, unsigned long long*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d338c:	006136        	entry	a1, 48
400d338f:	017d      	mov.n	a7, a1
400d3391:	57cb      	addi.n	a5, a7, 12
400d3393:	0529      	s32i.n	a2, a5, 0
400d3395:	278b      	addi.n	a2, a7, 8
400d3397:	0239      	s32i.n	a3, a2, 0
400d3399:	274b      	addi.n	a2, a7, 4
400d339b:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d339d:	474b      	addi.n	a4, a7, 4
400d339f:	378b      	addi.n	a3, a7, 8
400d33a1:	27cb      	addi.n	a2, a7, 12
400d33a3:	04c8      	l32i.n	a12, a4, 0
400d33a5:	03b8      	l32i.n	a11, a3, 0
400d33a7:	02a8      	l32i.n	a10, a2, 0
400d33a9:	002925        	call8	400d363c <__gnu_cxx::new_allocator<unsigned long long>::deallocate(unsigned long long*, unsigned int)>
400d33ac:	f03d      	nop.n
400d33ae:	f01d      	retw.n

400d33b0 <unsigned long long* std::__uninitialized_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d33b0:	008136        	entry	a1, 64
400d33b3:	017d      	mov.n	a7, a1
400d33b5:	47cb      	addi.n	a4, a7, 12
400d33b7:	0429      	s32i.n	a2, a4, 0
400d33b9:	278b      	addi.n	a2, a7, 8
400d33bb:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d33bd:	1fc722        	addi	a2, a7, 31
400d33c0:	130c      	movi.n	a3, 1
400d33c2:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d33c5:	378b      	addi.n	a3, a7, 8
400d33c7:	27cb      	addi.n	a2, a7, 12
400d33c9:	03b8      	l32i.n	a11, a3, 0
400d33cb:	02a8      	l32i.n	a10, a2, 0
400d33cd:	0028a5        	call8	400d3658 <unsigned long long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>
400d33d0:	0a2d      	mov.n	a2, a10
    }
400d33d2:	f01d      	retw.n

400d33d4 <std::allocator<float>::allocator(std::allocator<float> const&)>:
      allocator(const allocator& __a) throw()
400d33d4:	006136        	entry	a1, 48
400d33d7:	017d      	mov.n	a7, a1
400d33d9:	47cb      	addi.n	a4, a7, 12
400d33db:	0429      	s32i.n	a2, a4, 0
400d33dd:	278b      	addi.n	a2, a7, 8
400d33df:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d33e1:	378b      	addi.n	a3, a7, 8
400d33e3:	27cb      	addi.n	a2, a7, 12
400d33e5:	03b8      	l32i.n	a11, a3, 0
400d33e7:	02a8      	l32i.n	a10, a2, 0
400d33e9:	18faa5        	call8	400ec394 <__gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)>
400d33ec:	f03d      	nop.n
400d33ee:	f01d      	retw.n

400d33f0 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d33f0:	006136        	entry	a1, 48
400d33f3:	017d      	mov.n	a7, a1
400d33f5:	47cb      	addi.n	a4, a7, 12
400d33f7:	0429      	s32i.n	a2, a4, 0
400d33f9:	278b      	addi.n	a2, a7, 8
400d33fb:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d33fd:	278b      	addi.n	a2, a7, 8
400d33ff:	0228      	l32i.n	a2, a2, 0
400d3401:	029c      	beqz.n	a2, 400d3415 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)+0x25>
400d3403:	27cb      	addi.n	a2, a7, 12
400d3405:	0228      	l32i.n	a2, a2, 0
400d3407:	378b      	addi.n	a3, a7, 8
400d3409:	03b8      	l32i.n	a11, a3, 0
400d340b:	02ad      	mov.n	a10, a2
400d340d:	0027e5        	call8	400d368c <std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned int)>
400d3410:	0a2d      	mov.n	a2, a10
400d3412:	000046        	j	400d3417 <std::_Vector_base<float, std::allocator<float> >::_M_allocate(unsigned int)+0x27>
400d3415:	020c      	movi.n	a2, 0
      }
400d3417:	f01d      	retw.n
400d3419:	000000        	ill

400d341c <std::allocator_traits<std::allocator<float> >::deallocate(std::allocator<float>&, float*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d341c:	006136        	entry	a1, 48
400d341f:	017d      	mov.n	a7, a1
400d3421:	57cb      	addi.n	a5, a7, 12
400d3423:	0529      	s32i.n	a2, a5, 0
400d3425:	278b      	addi.n	a2, a7, 8
400d3427:	0239      	s32i.n	a3, a2, 0
400d3429:	274b      	addi.n	a2, a7, 4
400d342b:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d342d:	474b      	addi.n	a4, a7, 4
400d342f:	378b      	addi.n	a3, a7, 8
400d3431:	27cb      	addi.n	a2, a7, 12
400d3433:	04c8      	l32i.n	a12, a4, 0
400d3435:	03b8      	l32i.n	a11, a3, 0
400d3437:	02a8      	l32i.n	a10, a2, 0
400d3439:	002765        	call8	400d36b0 <__gnu_cxx::new_allocator<float>::deallocate(float*, unsigned int)>
400d343c:	f03d      	nop.n
400d343e:	f01d      	retw.n

400d3440 <float* std::__uninitialized_default_n<float*, unsigned int>(float*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d3440:	008136        	entry	a1, 64
400d3443:	017d      	mov.n	a7, a1
400d3445:	47cb      	addi.n	a4, a7, 12
400d3447:	0429      	s32i.n	a2, a4, 0
400d3449:	278b      	addi.n	a2, a7, 8
400d344b:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d344d:	1fc722        	addi	a2, a7, 31
400d3450:	130c      	movi.n	a3, 1
400d3452:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d3455:	378b      	addi.n	a3, a7, 8
400d3457:	27cb      	addi.n	a2, a7, 12
400d3459:	03b8      	l32i.n	a11, a3, 0
400d345b:	02a8      	l32i.n	a10, a2, 0
400d345d:	0026e5        	call8	400d36cc <float* std::__uninitialized_default_n_1<true>::__uninit_default_n<float*, unsigned int>(float*, unsigned int)>
400d3460:	0a2d      	mov.n	a2, a10
    }
400d3462:	f01d      	retw.n

400d3464 <std::allocator<double>::allocator(std::allocator<double> const&)>:
      allocator(const allocator& __a) throw()
400d3464:	006136        	entry	a1, 48
400d3467:	017d      	mov.n	a7, a1
400d3469:	47cb      	addi.n	a4, a7, 12
400d346b:	0429      	s32i.n	a2, a4, 0
400d346d:	278b      	addi.n	a2, a7, 8
400d346f:	0239      	s32i.n	a3, a2, 0
      : __allocator_base<_Tp>(__a) { }
400d3471:	378b      	addi.n	a3, a7, 8
400d3473:	27cb      	addi.n	a2, a7, 12
400d3475:	03b8      	l32i.n	a11, a3, 0
400d3477:	02a8      	l32i.n	a10, a2, 0
400d3479:	18f2e5        	call8	400ec3a8 <__gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)>
400d347c:	f03d      	nop.n
400d347e:	f01d      	retw.n

400d3480 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)>:
      _M_allocate(size_t __n)
400d3480:	006136        	entry	a1, 48
400d3483:	017d      	mov.n	a7, a1
400d3485:	47cb      	addi.n	a4, a7, 12
400d3487:	0429      	s32i.n	a2, a4, 0
400d3489:	278b      	addi.n	a2, a7, 8
400d348b:	0239      	s32i.n	a3, a2, 0
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
400d348d:	278b      	addi.n	a2, a7, 8
400d348f:	0228      	l32i.n	a2, a2, 0
400d3491:	029c      	beqz.n	a2, 400d34a5 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)+0x25>
400d3493:	27cb      	addi.n	a2, a7, 12
400d3495:	0228      	l32i.n	a2, a2, 0
400d3497:	378b      	addi.n	a3, a7, 8
400d3499:	03b8      	l32i.n	a11, a3, 0
400d349b:	02ad      	mov.n	a10, a2
400d349d:	0025a5        	call8	400d36f8 <std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned int)>
400d34a0:	0a2d      	mov.n	a2, a10
400d34a2:	000046        	j	400d34a7 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned int)+0x27>
400d34a5:	020c      	movi.n	a2, 0
      }
400d34a7:	f01d      	retw.n
400d34a9:	000000        	ill

400d34ac <std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned int)>:
      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
400d34ac:	006136        	entry	a1, 48
400d34af:	017d      	mov.n	a7, a1
400d34b1:	57cb      	addi.n	a5, a7, 12
400d34b3:	0529      	s32i.n	a2, a5, 0
400d34b5:	278b      	addi.n	a2, a7, 8
400d34b7:	0239      	s32i.n	a3, a2, 0
400d34b9:	274b      	addi.n	a2, a7, 4
400d34bb:	0249      	s32i.n	a4, a2, 0
      { __a.deallocate(__p, __n); }
400d34bd:	474b      	addi.n	a4, a7, 4
400d34bf:	378b      	addi.n	a3, a7, 8
400d34c1:	27cb      	addi.n	a2, a7, 12
400d34c3:	04c8      	l32i.n	a12, a4, 0
400d34c5:	03b8      	l32i.n	a11, a3, 0
400d34c7:	02a8      	l32i.n	a10, a2, 0
400d34c9:	002525        	call8	400d371c <__gnu_cxx::new_allocator<double>::deallocate(double*, unsigned int)>
400d34cc:	f03d      	nop.n
400d34ce:	f01d      	retw.n

400d34d0 <double* std::__uninitialized_default_n<double*, unsigned int>(double*, unsigned int)>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
400d34d0:	008136        	entry	a1, 64
400d34d3:	017d      	mov.n	a7, a1
400d34d5:	47cb      	addi.n	a4, a7, 12
400d34d7:	0429      	s32i.n	a2, a4, 0
400d34d9:	278b      	addi.n	a2, a7, 8
400d34db:	0239      	s32i.n	a3, a2, 0
      const bool __assignable = is_copy_assignable<_ValueType>::value;
400d34dd:	1fc722        	addi	a2, a7, 31
400d34e0:	130c      	movi.n	a3, 1
400d34e2:	004232        	s8i	a3, a2, 0
	__uninit_default_n(__first, __n);
400d34e5:	378b      	addi.n	a3, a7, 8
400d34e7:	27cb      	addi.n	a2, a7, 12
400d34e9:	03b8      	l32i.n	a11, a3, 0
400d34eb:	02a8      	l32i.n	a10, a2, 0
400d34ed:	0024a5        	call8	400d3738 <double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned int>(double*, unsigned int)>
400d34f0:	0a2d      	mov.n	a2, a10
    }
400d34f2:	f01d      	retw.n

400d34f4 <std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d34f4:	006136        	entry	a1, 48
400d34f7:	207110        	or	a7, a1, a1
400d34fa:	0cc742        	addi	a4, a7, 12
400d34fd:	006422        	s32i	a2, a4, 0
400d3500:	278b      	addi.n	a2, a7, 8
400d3502:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3504:	378b      	addi.n	a3, a7, 8
400d3506:	27cb      	addi.n	a2, a7, 12
400d3508:	0c0c      	movi.n	a12, 0
400d350a:	03b8      	l32i.n	a11, a3, 0
400d350c:	02a8      	l32i.n	a10, a2, 0
400d350e:	0025e5        	call8	400d376c <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)>
400d3511:	0a2d      	mov.n	a2, a10
400d3513:	f01d      	retw.n
400d3515:	000000        	ill

400d3518 <__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d3518:	006136        	entry	a1, 48
400d351b:	017d      	mov.n	a7, a1
400d351d:	57cb      	addi.n	a5, a7, 12
400d351f:	0529      	s32i.n	a2, a5, 0
400d3521:	278b      	addi.n	a2, a7, 8
400d3523:	0239      	s32i.n	a3, a2, 0
400d3525:	274b      	addi.n	a2, a7, 4
400d3527:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d3529:	278b      	addi.n	a2, a7, 8
400d352b:	02a8      	l32i.n	a10, a2, 0
400d352d:	176ce5        	call8	400eabfc <operator delete(void*)>
400d3530:	f03d      	nop.n
400d3532:	f01d      	retw.n

400d3534 <unsigned char* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned char*, unsigned int>(unsigned char*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d3534:	008136        	entry	a1, 64
400d3537:	207110        	or	a7, a1, a1
400d353a:	0cc742        	addi	a4, a7, 12
400d353d:	006422        	s32i	a2, a4, 0
400d3540:	278b      	addi.n	a2, a7, 8
400d3542:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d3544:	1fc722        	addi	a2, a7, 31
400d3547:	030c      	movi.n	a3, 0
400d3549:	004232        	s8i	a3, a2, 0
400d354c:	1fc742        	addi	a4, a7, 31
400d354f:	378b      	addi.n	a3, a7, 8
400d3551:	27cb      	addi.n	a2, a7, 12
400d3553:	04cd      	mov.n	a12, a4
400d3555:	03b8      	l32i.n	a11, a3, 0
400d3557:	02a8      	l32i.n	a10, a2, 0
400d3559:	0024e5        	call8	400d37a8 <unsigned char* std::fill_n<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>
400d355c:	0a2d      	mov.n	a2, a10
	}
400d355e:	f01d      	retw.n

400d3560 <std::allocator_traits<std::allocator<unsigned short> >::allocate(std::allocator<unsigned short>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d3560:	006136        	entry	a1, 48
400d3563:	207110        	or	a7, a1, a1
400d3566:	0cc742        	addi	a4, a7, 12
400d3569:	006422        	s32i	a2, a4, 0
400d356c:	278b      	addi.n	a2, a7, 8
400d356e:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3570:	378b      	addi.n	a3, a7, 8
400d3572:	27cb      	addi.n	a2, a7, 12
400d3574:	0c0c      	movi.n	a12, 0
400d3576:	03b8      	l32i.n	a11, a3, 0
400d3578:	02a8      	l32i.n	a10, a2, 0
400d357a:	0025e5        	call8	400d37d8 <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)>
400d357d:	0a2d      	mov.n	a2, a10
400d357f:	f01d      	retw.n
400d3581:	000000        	ill

400d3584 <__gnu_cxx::new_allocator<unsigned short>::deallocate(unsigned short*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d3584:	006136        	entry	a1, 48
400d3587:	017d      	mov.n	a7, a1
400d3589:	57cb      	addi.n	a5, a7, 12
400d358b:	0529      	s32i.n	a2, a5, 0
400d358d:	278b      	addi.n	a2, a7, 8
400d358f:	0239      	s32i.n	a3, a2, 0
400d3591:	274b      	addi.n	a2, a7, 4
400d3593:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d3595:	278b      	addi.n	a2, a7, 8
400d3597:	02a8      	l32i.n	a10, a2, 0
400d3599:	176625        	call8	400eabfc <operator delete(void*)>
400d359c:	f03d      	nop.n
400d359e:	f01d      	retw.n

400d35a0 <unsigned short* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned short*, unsigned int>(unsigned short*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d35a0:	008136        	entry	a1, 64
400d35a3:	207110        	or	a7, a1, a1
400d35a6:	0cc742        	addi	a4, a7, 12
400d35a9:	006422        	s32i	a2, a4, 0
400d35ac:	278b      	addi.n	a2, a7, 8
400d35ae:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d35b0:	1ec722        	addi	a2, a7, 30
400d35b3:	030c      	movi.n	a3, 0
400d35b5:	005232        	s16i	a3, a2, 0
400d35b8:	1ec742        	addi	a4, a7, 30
400d35bb:	378b      	addi.n	a3, a7, 8
400d35bd:	27cb      	addi.n	a2, a7, 12
400d35bf:	04cd      	mov.n	a12, a4
400d35c1:	03b8      	l32i.n	a11, a3, 0
400d35c3:	02a8      	l32i.n	a10, a2, 0
400d35c5:	002525        	call8	400d3818 <unsigned short* std::fill_n<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>
400d35c8:	0a2d      	mov.n	a2, a10
	}
400d35ca:	f01d      	retw.n

400d35cc <std::allocator_traits<std::allocator<unsigned int> >::allocate(std::allocator<unsigned int>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d35cc:	006136        	entry	a1, 48
400d35cf:	207110        	or	a7, a1, a1
400d35d2:	0cc742        	addi	a4, a7, 12
400d35d5:	006422        	s32i	a2, a4, 0
400d35d8:	278b      	addi.n	a2, a7, 8
400d35da:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d35dc:	378b      	addi.n	a3, a7, 8
400d35de:	27cb      	addi.n	a2, a7, 12
400d35e0:	0c0c      	movi.n	a12, 0
400d35e2:	03b8      	l32i.n	a11, a3, 0
400d35e4:	02a8      	l32i.n	a10, a2, 0
400d35e6:	002625        	call8	400d3848 <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)>
400d35e9:	0a2d      	mov.n	a2, a10
400d35eb:	f01d      	retw.n
400d35ed:	000000        	ill

400d35f0 <unsigned int* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d35f0:	008136        	entry	a1, 64
400d35f3:	017d      	mov.n	a7, a1
400d35f5:	47cb      	addi.n	a4, a7, 12
400d35f7:	0429      	s32i.n	a2, a4, 0
400d35f9:	278b      	addi.n	a2, a7, 8
400d35fb:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d35fd:	1cc722        	addi	a2, a7, 28
400d3600:	030c      	movi.n	a3, 0
400d3602:	0239      	s32i.n	a3, a2, 0
400d3604:	1cc742        	addi	a4, a7, 28
400d3607:	378b      	addi.n	a3, a7, 8
400d3609:	27cb      	addi.n	a2, a7, 12
400d360b:	04cd      	mov.n	a12, a4
400d360d:	03b8      	l32i.n	a11, a3, 0
400d360f:	02a8      	l32i.n	a10, a2, 0
400d3611:	002765        	call8	400d3888 <unsigned int* std::fill_n<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>
400d3614:	0a2d      	mov.n	a2, a10
	}
400d3616:	f01d      	retw.n

400d3618 <std::allocator_traits<std::allocator<unsigned long long> >::allocate(std::allocator<unsigned long long>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d3618:	006136        	entry	a1, 48
400d361b:	207110        	or	a7, a1, a1
400d361e:	0cc742        	addi	a4, a7, 12
400d3621:	006422        	s32i	a2, a4, 0
400d3624:	278b      	addi.n	a2, a7, 8
400d3626:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3628:	378b      	addi.n	a3, a7, 8
400d362a:	27cb      	addi.n	a2, a7, 12
400d362c:	0c0c      	movi.n	a12, 0
400d362e:	03b8      	l32i.n	a11, a3, 0
400d3630:	02a8      	l32i.n	a10, a2, 0
400d3632:	002865        	call8	400d38b8 <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)>
400d3635:	0a2d      	mov.n	a2, a10
400d3637:	f01d      	retw.n
400d3639:	000000        	ill

400d363c <__gnu_cxx::new_allocator<unsigned long long>::deallocate(unsigned long long*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d363c:	006136        	entry	a1, 48
400d363f:	017d      	mov.n	a7, a1
400d3641:	57cb      	addi.n	a5, a7, 12
400d3643:	0529      	s32i.n	a2, a5, 0
400d3645:	278b      	addi.n	a2, a7, 8
400d3647:	0239      	s32i.n	a3, a2, 0
400d3649:	274b      	addi.n	a2, a7, 4
400d364b:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d364d:	278b      	addi.n	a2, a7, 8
400d364f:	02a8      	l32i.n	a10, a2, 0
400d3651:	175aa5        	call8	400eabfc <operator delete(void*)>
400d3654:	f03d      	nop.n
400d3656:	f01d      	retw.n

400d3658 <unsigned long long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long long*, unsigned int>(unsigned long long*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d3658:	008136        	entry	a1, 64
400d365b:	207110        	or	a7, a1, a1
400d365e:	0cc742        	addi	a4, a7, 12
400d3661:	006422        	s32i	a2, a4, 0
400d3664:	278b      	addi.n	a2, a7, 8
400d3666:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d3668:	18c742        	addi	a4, a7, 24
400d366b:	f27e21        	l32r	a2, 400d0064 <_flash_cache_start+0x4c>
400d366e:	f27d31        	l32r	a3, 400d0064 <_flash_cache_start+0x4c>
400d3671:	0429      	s32i.n	a2, a4, 0
400d3673:	1439      	s32i.n	a3, a4, 4
400d3675:	18c742        	addi	a4, a7, 24
400d3678:	378b      	addi.n	a3, a7, 8
400d367a:	27cb      	addi.n	a2, a7, 12
400d367c:	04cd      	mov.n	a12, a4
400d367e:	03b8      	l32i.n	a11, a3, 0
400d3680:	02a8      	l32i.n	a10, a2, 0
400d3682:	002765        	call8	400d38f8 <unsigned long long* std::fill_n<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>
400d3685:	0a2d      	mov.n	a2, a10
	}
400d3687:	f01d      	retw.n
400d3689:	000000        	ill

400d368c <std::allocator_traits<std::allocator<float> >::allocate(std::allocator<float>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d368c:	006136        	entry	a1, 48
400d368f:	207110        	or	a7, a1, a1
400d3692:	0cc742        	addi	a4, a7, 12
400d3695:	006422        	s32i	a2, a4, 0
400d3698:	278b      	addi.n	a2, a7, 8
400d369a:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d369c:	378b      	addi.n	a3, a7, 8
400d369e:	27cb      	addi.n	a2, a7, 12
400d36a0:	0c0c      	movi.n	a12, 0
400d36a2:	03b8      	l32i.n	a11, a3, 0
400d36a4:	02a8      	l32i.n	a10, a2, 0
400d36a6:	002825        	call8	400d3928 <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)>
400d36a9:	0a2d      	mov.n	a2, a10
400d36ab:	f01d      	retw.n
400d36ad:	000000        	ill

400d36b0 <__gnu_cxx::new_allocator<float>::deallocate(float*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d36b0:	006136        	entry	a1, 48
400d36b3:	017d      	mov.n	a7, a1
400d36b5:	57cb      	addi.n	a5, a7, 12
400d36b7:	0529      	s32i.n	a2, a5, 0
400d36b9:	278b      	addi.n	a2, a7, 8
400d36bb:	0239      	s32i.n	a3, a2, 0
400d36bd:	274b      	addi.n	a2, a7, 4
400d36bf:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d36c1:	278b      	addi.n	a2, a7, 8
400d36c3:	02a8      	l32i.n	a10, a2, 0
400d36c5:	175365        	call8	400eabfc <operator delete(void*)>
400d36c8:	f03d      	nop.n
400d36ca:	f01d      	retw.n

400d36cc <float* std::__uninitialized_default_n_1<true>::__uninit_default_n<float*, unsigned int>(float*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d36cc:	008136        	entry	a1, 64
400d36cf:	207110        	or	a7, a1, a1
400d36d2:	0cc742        	addi	a4, a7, 12
400d36d5:	006422        	s32i	a2, a4, 0
400d36d8:	278b      	addi.n	a2, a7, 8
400d36da:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d36dc:	1cc722        	addi	a2, a7, 28
400d36df:	f26131        	l32r	a3, 400d0064 <_flash_cache_start+0x4c>
400d36e2:	0239      	s32i.n	a3, a2, 0
400d36e4:	1cc742        	addi	a4, a7, 28
400d36e7:	378b      	addi.n	a3, a7, 8
400d36e9:	27cb      	addi.n	a2, a7, 12
400d36eb:	04cd      	mov.n	a12, a4
400d36ed:	03b8      	l32i.n	a11, a3, 0
400d36ef:	02a8      	l32i.n	a10, a2, 0
400d36f1:	002765        	call8	400d3968 <float* std::fill_n<float*, unsigned int, float>(float*, unsigned int, float const&)>
400d36f4:	0a2d      	mov.n	a2, a10
	}
400d36f6:	f01d      	retw.n

400d36f8 <std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned int)>:
      allocate(_Alloc& __a, size_type __n)
400d36f8:	006136        	entry	a1, 48
400d36fb:	207110        	or	a7, a1, a1
400d36fe:	0cc742        	addi	a4, a7, 12
400d3701:	006422        	s32i	a2, a4, 0
400d3704:	278b      	addi.n	a2, a7, 8
400d3706:	0239      	s32i.n	a3, a2, 0
      { return __a.allocate(__n); }
400d3708:	378b      	addi.n	a3, a7, 8
400d370a:	27cb      	addi.n	a2, a7, 12
400d370c:	0c0c      	movi.n	a12, 0
400d370e:	03b8      	l32i.n	a11, a3, 0
400d3710:	02a8      	l32i.n	a10, a2, 0
400d3712:	002865        	call8	400d3998 <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)>
400d3715:	0a2d      	mov.n	a2, a10
400d3717:	f01d      	retw.n
400d3719:	000000        	ill

400d371c <__gnu_cxx::new_allocator<double>::deallocate(double*, unsigned int)>:
      deallocate(pointer __p, size_type)
400d371c:	006136        	entry	a1, 48
400d371f:	017d      	mov.n	a7, a1
400d3721:	57cb      	addi.n	a5, a7, 12
400d3723:	0529      	s32i.n	a2, a5, 0
400d3725:	278b      	addi.n	a2, a7, 8
400d3727:	0239      	s32i.n	a3, a2, 0
400d3729:	274b      	addi.n	a2, a7, 4
400d372b:	0249      	s32i.n	a4, a2, 0
      { ::operator delete(__p); }
400d372d:	278b      	addi.n	a2, a7, 8
400d372f:	02a8      	l32i.n	a10, a2, 0
400d3731:	174ca5        	call8	400eabfc <operator delete(void*)>
400d3734:	f03d      	nop.n
400d3736:	f01d      	retw.n

400d3738 <double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned int>(double*, unsigned int)>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
400d3738:	008136        	entry	a1, 64
400d373b:	207110        	or	a7, a1, a1
400d373e:	0cc742        	addi	a4, a7, 12
400d3741:	006422        	s32i	a2, a4, 0
400d3744:	278b      	addi.n	a2, a7, 8
400d3746:	0239      	s32i.n	a3, a2, 0
	  return std::fill_n(__first, __n, _ValueType());
400d3748:	18c742        	addi	a4, a7, 24
400d374b:	f24621        	l32r	a2, 400d0064 <_flash_cache_start+0x4c>
400d374e:	f24531        	l32r	a3, 400d0064 <_flash_cache_start+0x4c>
400d3751:	0429      	s32i.n	a2, a4, 0
400d3753:	1439      	s32i.n	a3, a4, 4
400d3755:	18c742        	addi	a4, a7, 24
400d3758:	378b      	addi.n	a3, a7, 8
400d375a:	27cb      	addi.n	a2, a7, 12
400d375c:	04cd      	mov.n	a12, a4
400d375e:	03b8      	l32i.n	a11, a3, 0
400d3760:	02a8      	l32i.n	a10, a2, 0
400d3762:	002765        	call8	400d39d8 <double* std::fill_n<double*, unsigned int, double>(double*, unsigned int, double const&)>
400d3765:	0a2d      	mov.n	a2, a10
	}
400d3767:	f01d      	retw.n
400d3769:	000000        	ill

400d376c <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d376c:	006136        	entry	a1, 48
400d376f:	017d      	mov.n	a7, a1
400d3771:	57cb      	addi.n	a5, a7, 12
400d3773:	0529      	s32i.n	a2, a5, 0
400d3775:	278b      	addi.n	a2, a7, 8
400d3777:	0239      	s32i.n	a3, a2, 0
400d3779:	274b      	addi.n	a2, a7, 4
400d377b:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d377d:	27cb      	addi.n	a2, a7, 12
400d377f:	02a8      	l32i.n	a10, a2, 0
400d3781:	18c3a5        	call8	400ec3bc <__gnu_cxx::new_allocator<unsigned char>::max_size() const>
400d3784:	0a4d      	mov.n	a4, a10
400d3786:	378b      	addi.n	a3, a7, 8
400d3788:	120c      	movi.n	a2, 1
400d378a:	0338      	l32i.n	a3, a3, 0
400d378c:	013437        	bltu	a4, a3, 400d3791 <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)+0x25>
400d378f:	020c      	movi.n	a2, 0
400d3791:	742020        	extui	a2, a2, 0, 8
400d3794:	128c      	beqz.n	a2, 400d3799 <__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned int, void const*)+0x2d>
	  std::__throw_bad_alloc();
400d3796:	1782e5        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d3799:	278b      	addi.n	a2, a7, 8
400d379b:	002222        	l32i	a2, a2, 0
400d379e:	20a220        	or	a10, a2, a2
400d37a1:	174925        	call8	400eac34 <operator new(unsigned int)>
400d37a4:	0a2d      	mov.n	a2, a10
      }
400d37a6:	f01d      	retw.n

400d37a8 <unsigned char* std::fill_n<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>:
   *  _GLIBCXX_RESOLVE_LIB_DEFECTS
   *  DR 865. More algorithms that throw away information
  */
  template<typename _OI, typename _Size, typename _Tp>
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d37a8:	006136        	entry	a1, 48
400d37ab:	207110        	or	a7, a1, a1
400d37ae:	0cc752        	addi	a5, a7, 12
400d37b1:	0529      	s32i.n	a2, a5, 0
400d37b3:	278b      	addi.n	a2, a7, 8
400d37b5:	0239      	s32i.n	a3, a2, 0
400d37b7:	274b      	addi.n	a2, a7, 4
400d37b9:	0249      	s32i.n	a4, a2, 0
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)

      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d37bb:	0cc722        	addi	a2, a7, 12
400d37be:	02a8      	l32i.n	a10, a2, 0
400d37c0:	002465        	call8	400d3a08 <std::_Niter_base<unsigned char*>::iterator_type std::__niter_base<unsigned char*>(unsigned char*)>
400d37c3:	0a2d      	mov.n	a2, a10
400d37c5:	474b      	addi.n	a4, a7, 4
400d37c7:	378b      	addi.n	a3, a7, 8
400d37c9:	04c8      	l32i.n	a12, a4, 0
400d37cb:	03b8      	l32i.n	a11, a3, 0
400d37cd:	02ad      	mov.n	a10, a2
400d37cf:	0024e5        	call8	400d3a1c <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, unsigned char*>::__type std::__fill_n_a<unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>
400d37d2:	0a2d      	mov.n	a2, a10
    }
400d37d4:	f01d      	retw.n
	...

400d37d8 <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d37d8:	006136        	entry	a1, 48
400d37db:	017d      	mov.n	a7, a1
400d37dd:	57cb      	addi.n	a5, a7, 12
400d37df:	0529      	s32i.n	a2, a5, 0
400d37e1:	278b      	addi.n	a2, a7, 8
400d37e3:	0239      	s32i.n	a3, a2, 0
400d37e5:	274b      	addi.n	a2, a7, 4
400d37e7:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d37e9:	27cb      	addi.n	a2, a7, 12
400d37eb:	02a8      	l32i.n	a10, a2, 0
400d37ed:	002625        	call8	400d3a50 <__gnu_cxx::new_allocator<unsigned short>::max_size() const>
400d37f0:	0a4d      	mov.n	a4, a10
400d37f2:	378b      	addi.n	a3, a7, 8
400d37f4:	120c      	movi.n	a2, 1
400d37f6:	0338      	l32i.n	a3, a3, 0
400d37f8:	013437        	bltu	a4, a3, 400d37fd <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)+0x25>
400d37fb:	020c      	movi.n	a2, 0
400d37fd:	742020        	extui	a2, a2, 0, 8
400d3800:	002216        	beqz	a2, 400d3806 <__gnu_cxx::new_allocator<unsigned short>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d3803:	177c25        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d3806:	278b      	addi.n	a2, a7, 8
400d3808:	002222        	l32i	a2, a2, 0
400d380b:	1122f0        	slli	a2, a2, 1
400d380e:	20a220        	or	a10, a2, a2
400d3811:	174225        	call8	400eac34 <operator new(unsigned int)>
400d3814:	0a2d      	mov.n	a2, a10
      }
400d3816:	f01d      	retw.n

400d3818 <unsigned short* std::fill_n<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d3818:	006136        	entry	a1, 48
400d381b:	207110        	or	a7, a1, a1
400d381e:	0cc752        	addi	a5, a7, 12
400d3821:	0529      	s32i.n	a2, a5, 0
400d3823:	278b      	addi.n	a2, a7, 8
400d3825:	0239      	s32i.n	a3, a2, 0
400d3827:	274b      	addi.n	a2, a7, 4
400d3829:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d382b:	0cc722        	addi	a2, a7, 12
400d382e:	02a8      	l32i.n	a10, a2, 0
400d3830:	0022e5        	call8	400d3a60 <std::_Niter_base<unsigned short*>::iterator_type std::__niter_base<unsigned short*>(unsigned short*)>
400d3833:	0a2d      	mov.n	a2, a10
400d3835:	474b      	addi.n	a4, a7, 4
400d3837:	378b      	addi.n	a3, a7, 8
400d3839:	04c8      	l32i.n	a12, a4, 0
400d383b:	03b8      	l32i.n	a11, a3, 0
400d383d:	02ad      	mov.n	a10, a2
400d383f:	18b8e5        	call8	400ec3cc <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>
400d3842:	0a2d      	mov.n	a2, a10
    }
400d3844:	f01d      	retw.n
	...

400d3848 <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d3848:	006136        	entry	a1, 48
400d384b:	017d      	mov.n	a7, a1
400d384d:	57cb      	addi.n	a5, a7, 12
400d384f:	0529      	s32i.n	a2, a5, 0
400d3851:	278b      	addi.n	a2, a7, 8
400d3853:	0239      	s32i.n	a3, a2, 0
400d3855:	274b      	addi.n	a2, a7, 4
400d3857:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d3859:	27cb      	addi.n	a2, a7, 12
400d385b:	02a8      	l32i.n	a10, a2, 0
400d385d:	002165        	call8	400d3a74 <__gnu_cxx::new_allocator<unsigned int>::max_size() const>
400d3860:	0a4d      	mov.n	a4, a10
400d3862:	378b      	addi.n	a3, a7, 8
400d3864:	120c      	movi.n	a2, 1
400d3866:	0338      	l32i.n	a3, a3, 0
400d3868:	013437        	bltu	a4, a3, 400d386d <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)+0x25>
400d386b:	020c      	movi.n	a2, 0
400d386d:	742020        	extui	a2, a2, 0, 8
400d3870:	002216        	beqz	a2, 400d3876 <__gnu_cxx::new_allocator<unsigned int>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d3873:	177525        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d3876:	278b      	addi.n	a2, a7, 8
400d3878:	002222        	l32i	a2, a2, 0
400d387b:	1122e0        	slli	a2, a2, 2
400d387e:	20a220        	or	a10, a2, a2
400d3881:	173b25        	call8	400eac34 <operator new(unsigned int)>
400d3884:	0a2d      	mov.n	a2, a10
      }
400d3886:	f01d      	retw.n

400d3888 <unsigned int* std::fill_n<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d3888:	006136        	entry	a1, 48
400d388b:	207110        	or	a7, a1, a1
400d388e:	0cc752        	addi	a5, a7, 12
400d3891:	0529      	s32i.n	a2, a5, 0
400d3893:	278b      	addi.n	a2, a7, 8
400d3895:	0239      	s32i.n	a3, a2, 0
400d3897:	274b      	addi.n	a2, a7, 4
400d3899:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d389b:	0cc722        	addi	a2, a7, 12
400d389e:	02a8      	l32i.n	a10, a2, 0
400d38a0:	001e25        	call8	400d3a84 <std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)>
400d38a3:	0a2d      	mov.n	a2, a10
400d38a5:	474b      	addi.n	a4, a7, 4
400d38a7:	378b      	addi.n	a3, a7, 8
400d38a9:	04c8      	l32i.n	a12, a4, 0
400d38ab:	03b8      	l32i.n	a11, a3, 0
400d38ad:	02ad      	mov.n	a10, a2
400d38af:	18b7a5        	call8	400ec428 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>
400d38b2:	0a2d      	mov.n	a2, a10
    }
400d38b4:	f01d      	retw.n
	...

400d38b8 <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d38b8:	006136        	entry	a1, 48
400d38bb:	017d      	mov.n	a7, a1
400d38bd:	57cb      	addi.n	a5, a7, 12
400d38bf:	0529      	s32i.n	a2, a5, 0
400d38c1:	278b      	addi.n	a2, a7, 8
400d38c3:	0239      	s32i.n	a3, a2, 0
400d38c5:	274b      	addi.n	a2, a7, 4
400d38c7:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d38c9:	27cb      	addi.n	a2, a7, 12
400d38cb:	02a8      	l32i.n	a10, a2, 0
400d38cd:	001ca5        	call8	400d3a98 <__gnu_cxx::new_allocator<unsigned long long>::max_size() const>
400d38d0:	0a4d      	mov.n	a4, a10
400d38d2:	378b      	addi.n	a3, a7, 8
400d38d4:	120c      	movi.n	a2, 1
400d38d6:	0338      	l32i.n	a3, a3, 0
400d38d8:	013437        	bltu	a4, a3, 400d38dd <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)+0x25>
400d38db:	020c      	movi.n	a2, 0
400d38dd:	742020        	extui	a2, a2, 0, 8
400d38e0:	002216        	beqz	a2, 400d38e6 <__gnu_cxx::new_allocator<unsigned long long>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d38e3:	176e25        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d38e6:	278b      	addi.n	a2, a7, 8
400d38e8:	002222        	l32i	a2, a2, 0
400d38eb:	1122d0        	slli	a2, a2, 3
400d38ee:	20a220        	or	a10, a2, a2
400d38f1:	173425        	call8	400eac34 <operator new(unsigned int)>
400d38f4:	0a2d      	mov.n	a2, a10
      }
400d38f6:	f01d      	retw.n

400d38f8 <unsigned long long* std::fill_n<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d38f8:	006136        	entry	a1, 48
400d38fb:	207110        	or	a7, a1, a1
400d38fe:	0cc752        	addi	a5, a7, 12
400d3901:	0529      	s32i.n	a2, a5, 0
400d3903:	278b      	addi.n	a2, a7, 8
400d3905:	0239      	s32i.n	a3, a2, 0
400d3907:	274b      	addi.n	a2, a7, 4
400d3909:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d390b:	0cc722        	addi	a2, a7, 12
400d390e:	02a8      	l32i.n	a10, a2, 0
400d3910:	001965        	call8	400d3aa8 <std::_Niter_base<unsigned long long*>::iterator_type std::__niter_base<unsigned long long*>(unsigned long long*)>
400d3913:	0a2d      	mov.n	a2, a10
400d3915:	474b      	addi.n	a4, a7, 4
400d3917:	378b      	addi.n	a3, a7, 8
400d3919:	04c8      	l32i.n	a12, a4, 0
400d391b:	03b8      	l32i.n	a11, a3, 0
400d391d:	02ad      	mov.n	a10, a2
400d391f:	18b625        	call8	400ec480 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>
400d3922:	0a2d      	mov.n	a2, a10
    }
400d3924:	f01d      	retw.n
	...

400d3928 <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d3928:	006136        	entry	a1, 48
400d392b:	017d      	mov.n	a7, a1
400d392d:	57cb      	addi.n	a5, a7, 12
400d392f:	0529      	s32i.n	a2, a5, 0
400d3931:	278b      	addi.n	a2, a7, 8
400d3933:	0239      	s32i.n	a3, a2, 0
400d3935:	274b      	addi.n	a2, a7, 4
400d3937:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d3939:	27cb      	addi.n	a2, a7, 12
400d393b:	02a8      	l32i.n	a10, a2, 0
400d393d:	0017e5        	call8	400d3abc <__gnu_cxx::new_allocator<float>::max_size() const>
400d3940:	0a4d      	mov.n	a4, a10
400d3942:	378b      	addi.n	a3, a7, 8
400d3944:	120c      	movi.n	a2, 1
400d3946:	0338      	l32i.n	a3, a3, 0
400d3948:	013437        	bltu	a4, a3, 400d394d <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)+0x25>
400d394b:	020c      	movi.n	a2, 0
400d394d:	742020        	extui	a2, a2, 0, 8
400d3950:	002216        	beqz	a2, 400d3956 <__gnu_cxx::new_allocator<float>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d3953:	176725        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d3956:	278b      	addi.n	a2, a7, 8
400d3958:	002222        	l32i	a2, a2, 0
400d395b:	1122e0        	slli	a2, a2, 2
400d395e:	20a220        	or	a10, a2, a2
400d3961:	172d25        	call8	400eac34 <operator new(unsigned int)>
400d3964:	0a2d      	mov.n	a2, a10
      }
400d3966:	f01d      	retw.n

400d3968 <float* std::fill_n<float*, unsigned int, float>(float*, unsigned int, float const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d3968:	006136        	entry	a1, 48
400d396b:	207110        	or	a7, a1, a1
400d396e:	0cc752        	addi	a5, a7, 12
400d3971:	0529      	s32i.n	a2, a5, 0
400d3973:	278b      	addi.n	a2, a7, 8
400d3975:	0239      	s32i.n	a3, a2, 0
400d3977:	274b      	addi.n	a2, a7, 4
400d3979:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d397b:	0cc722        	addi	a2, a7, 12
400d397e:	02a8      	l32i.n	a10, a2, 0
400d3980:	0014a5        	call8	400d3acc <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)>
400d3983:	0a2d      	mov.n	a2, a10
400d3985:	474b      	addi.n	a4, a7, 4
400d3987:	378b      	addi.n	a3, a7, 8
400d3989:	04c8      	l32i.n	a12, a4, 0
400d398b:	03b8      	l32i.n	a11, a3, 0
400d398d:	02ad      	mov.n	a10, a2
400d398f:	18b525        	call8	400ec4e0 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)>
400d3992:	0a2d      	mov.n	a2, a10
    }
400d3994:	f01d      	retw.n
	...

400d3998 <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)>:
      allocate(size_type __n, const void* = 0)
400d3998:	006136        	entry	a1, 48
400d399b:	017d      	mov.n	a7, a1
400d399d:	57cb      	addi.n	a5, a7, 12
400d399f:	0529      	s32i.n	a2, a5, 0
400d39a1:	278b      	addi.n	a2, a7, 8
400d39a3:	0239      	s32i.n	a3, a2, 0
400d39a5:	274b      	addi.n	a2, a7, 4
400d39a7:	0249      	s32i.n	a4, a2, 0
	if (__n > this->max_size())
400d39a9:	27cb      	addi.n	a2, a7, 12
400d39ab:	02a8      	l32i.n	a10, a2, 0
400d39ad:	001325        	call8	400d3ae0 <__gnu_cxx::new_allocator<double>::max_size() const>
400d39b0:	0a4d      	mov.n	a4, a10
400d39b2:	378b      	addi.n	a3, a7, 8
400d39b4:	120c      	movi.n	a2, 1
400d39b6:	0338      	l32i.n	a3, a3, 0
400d39b8:	013437        	bltu	a4, a3, 400d39bd <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)+0x25>
400d39bb:	020c      	movi.n	a2, 0
400d39bd:	742020        	extui	a2, a2, 0, 8
400d39c0:	002216        	beqz	a2, 400d39c6 <__gnu_cxx::new_allocator<double>::allocate(unsigned int, void const*)+0x2e>
	  std::__throw_bad_alloc();
400d39c3:	176025        	call8	400eafc4 <std::__throw_bad_alloc()>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
400d39c6:	278b      	addi.n	a2, a7, 8
400d39c8:	002222        	l32i	a2, a2, 0
400d39cb:	1122d0        	slli	a2, a2, 3
400d39ce:	20a220        	or	a10, a2, a2
400d39d1:	172625        	call8	400eac34 <operator new(unsigned int)>
400d39d4:	0a2d      	mov.n	a2, a10
      }
400d39d6:	f01d      	retw.n

400d39d8 <double* std::fill_n<double*, unsigned int, double>(double*, unsigned int, double const&)>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
400d39d8:	006136        	entry	a1, 48
400d39db:	207110        	or	a7, a1, a1
400d39de:	0cc752        	addi	a5, a7, 12
400d39e1:	0529      	s32i.n	a2, a5, 0
400d39e3:	278b      	addi.n	a2, a7, 8
400d39e5:	0239      	s32i.n	a3, a2, 0
400d39e7:	274b      	addi.n	a2, a7, 4
400d39e9:	0249      	s32i.n	a4, a2, 0
      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
400d39eb:	0cc722        	addi	a2, a7, 12
400d39ee:	02a8      	l32i.n	a10, a2, 0
400d39f0:	000fe5        	call8	400d3af0 <std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)>
400d39f3:	0a2d      	mov.n	a2, a10
400d39f5:	474b      	addi.n	a4, a7, 4
400d39f7:	378b      	addi.n	a3, a7, 8
400d39f9:	04c8      	l32i.n	a12, a4, 0
400d39fb:	03b8      	l32i.n	a11, a3, 0
400d39fd:	02ad      	mov.n	a10, a2
400d39ff:	18b3e5        	call8	400ec53c <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)>
400d3a02:	0a2d      	mov.n	a2, a10
    }
400d3a04:	f01d      	retw.n
	...

400d3a08 <std::_Niter_base<unsigned char*>::iterator_type std::__niter_base<unsigned char*>(unsigned char*)>:
    __niter_base(_Iterator __it)
400d3a08:	006136        	entry	a1, 48
400d3a0b:	017d      	mov.n	a7, a1
400d3a0d:	37cb      	addi.n	a3, a7, 12
400d3a0f:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3a11:	27cb      	addi.n	a2, a7, 12
400d3a13:	02a8      	l32i.n	a10, a2, 0
400d3a15:	18b865        	call8	400ec59c <std::_Iter_base<unsigned char*, false>::_S_base(unsigned char*)>
400d3a18:	0a2d      	mov.n	a2, a10
400d3a1a:	f01d      	retw.n

400d3a1c <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, unsigned char*>::__type std::__fill_n_a<unsigned int, unsigned char>(unsigned char*, unsigned int, unsigned char const&)>:
    __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
400d3a1c:	006136        	entry	a1, 48
400d3a1f:	017d      	mov.n	a7, a1
400d3a21:	57cb      	addi.n	a5, a7, 12
400d3a23:	0529      	s32i.n	a2, a5, 0
400d3a25:	278b      	addi.n	a2, a7, 8
400d3a27:	0239      	s32i.n	a3, a2, 0
400d3a29:	274b      	addi.n	a2, a7, 4
400d3a2b:	0249      	s32i.n	a4, a2, 0
      std::__fill_a(__first, __first + __n, __c);
400d3a2d:	37cb      	addi.n	a3, a7, 12
400d3a2f:	278b      	addi.n	a2, a7, 8
400d3a31:	0338      	l32i.n	a3, a3, 0
400d3a33:	0228      	l32i.n	a2, a2, 0
400d3a35:	332a      	add.n	a3, a3, a2
400d3a37:	474b      	addi.n	a4, a7, 4
400d3a39:	27cb      	addi.n	a2, a7, 12
400d3a3b:	04c8      	l32i.n	a12, a4, 0
400d3a3d:	03bd      	mov.n	a11, a3
400d3a3f:	02a8      	l32i.n	a10, a2, 0
400d3a41:	000c25        	call8	400d3b04 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)>
      return __first + __n;
400d3a44:	37cb      	addi.n	a3, a7, 12
400d3a46:	278b      	addi.n	a2, a7, 8
400d3a48:	0338      	l32i.n	a3, a3, 0
400d3a4a:	0228      	l32i.n	a2, a2, 0
400d3a4c:	232a      	add.n	a2, a3, a2
    }
400d3a4e:	f01d      	retw.n

400d3a50 <__gnu_cxx::new_allocator<unsigned short>::max_size() const>:

      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3a50:	006136        	entry	a1, 48
400d3a53:	017d      	mov.n	a7, a1
400d3a55:	37cb      	addi.n	a3, a7, 12
400d3a57:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3a59:	f18321        	l32r	a2, 400d0068 <_flash_cache_start+0x50>
400d3a5c:	f01d      	retw.n
	...

400d3a60 <std::_Niter_base<unsigned short*>::iterator_type std::__niter_base<unsigned short*>(unsigned short*)>:
    __niter_base(_Iterator __it)
400d3a60:	006136        	entry	a1, 48
400d3a63:	017d      	mov.n	a7, a1
400d3a65:	37cb      	addi.n	a3, a7, 12
400d3a67:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3a69:	27cb      	addi.n	a2, a7, 12
400d3a6b:	02a8      	l32i.n	a10, a2, 0
400d3a6d:	18b3e5        	call8	400ec5ac <std::_Iter_base<unsigned short*, false>::_S_base(unsigned short*)>
400d3a70:	0a2d      	mov.n	a2, a10
400d3a72:	f01d      	retw.n

400d3a74 <__gnu_cxx::new_allocator<unsigned int>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3a74:	006136        	entry	a1, 48
400d3a77:	017d      	mov.n	a7, a1
400d3a79:	37cb      	addi.n	a3, a7, 12
400d3a7b:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3a7d:	f17b21        	l32r	a2, 400d006c <_flash_cache_start+0x54>
400d3a80:	f01d      	retw.n
	...

400d3a84 <std::_Niter_base<unsigned int*>::iterator_type std::__niter_base<unsigned int*>(unsigned int*)>:
    __niter_base(_Iterator __it)
400d3a84:	006136        	entry	a1, 48
400d3a87:	017d      	mov.n	a7, a1
400d3a89:	37cb      	addi.n	a3, a7, 12
400d3a8b:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3a8d:	27cb      	addi.n	a2, a7, 12
400d3a8f:	02a8      	l32i.n	a10, a2, 0
400d3a91:	18b2a5        	call8	400ec5bc <std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*)>
400d3a94:	0a2d      	mov.n	a2, a10
400d3a96:	f01d      	retw.n

400d3a98 <__gnu_cxx::new_allocator<unsigned long long>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3a98:	006136        	entry	a1, 48
400d3a9b:	017d      	mov.n	a7, a1
400d3a9d:	37cb      	addi.n	a3, a7, 12
400d3a9f:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3aa1:	f17321        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3aa4:	f01d      	retw.n
	...

400d3aa8 <std::_Niter_base<unsigned long long*>::iterator_type std::__niter_base<unsigned long long*>(unsigned long long*)>:
    __niter_base(_Iterator __it)
400d3aa8:	006136        	entry	a1, 48
400d3aab:	017d      	mov.n	a7, a1
400d3aad:	37cb      	addi.n	a3, a7, 12
400d3aaf:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3ab1:	27cb      	addi.n	a2, a7, 12
400d3ab3:	02a8      	l32i.n	a10, a2, 0
400d3ab5:	18b165        	call8	400ec5cc <std::_Iter_base<unsigned long long*, false>::_S_base(unsigned long long*)>
400d3ab8:	0a2d      	mov.n	a2, a10
400d3aba:	f01d      	retw.n

400d3abc <__gnu_cxx::new_allocator<float>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3abc:	006136        	entry	a1, 48
400d3abf:	017d      	mov.n	a7, a1
400d3ac1:	37cb      	addi.n	a3, a7, 12
400d3ac3:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3ac5:	f16921        	l32r	a2, 400d006c <_flash_cache_start+0x54>
400d3ac8:	f01d      	retw.n
	...

400d3acc <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)>:
    __niter_base(_Iterator __it)
400d3acc:	006136        	entry	a1, 48
400d3acf:	017d      	mov.n	a7, a1
400d3ad1:	37cb      	addi.n	a3, a7, 12
400d3ad3:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3ad5:	27cb      	addi.n	a2, a7, 12
400d3ad7:	02a8      	l32i.n	a10, a2, 0
400d3ad9:	18b025        	call8	400ec5dc <std::_Iter_base<float*, false>::_S_base(float*)>
400d3adc:	0a2d      	mov.n	a2, a10
400d3ade:	f01d      	retw.n

400d3ae0 <__gnu_cxx::new_allocator<double>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400d3ae0:	006136        	entry	a1, 48
400d3ae3:	017d      	mov.n	a7, a1
400d3ae5:	37cb      	addi.n	a3, a7, 12
400d3ae7:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400d3ae9:	f16121        	l32r	a2, 400d0070 <_flash_cache_start+0x58>
400d3aec:	f01d      	retw.n
	...

400d3af0 <std::_Niter_base<double*>::iterator_type std::__niter_base<double*>(double*)>:
    __niter_base(_Iterator __it)
400d3af0:	006136        	entry	a1, 48
400d3af3:	017d      	mov.n	a7, a1
400d3af5:	37cb      	addi.n	a3, a7, 12
400d3af7:	0329      	s32i.n	a2, a3, 0
    { return std::_Niter_base<_Iterator>::_S_base(__it); }
400d3af9:	27cb      	addi.n	a2, a7, 12
400d3afb:	02a8      	l32i.n	a10, a2, 0
400d3afd:	18aee5        	call8	400ec5ec <std::_Iter_base<double*, false>::_S_base(double*)>
400d3b00:	0a2d      	mov.n	a2, a10
400d3b02:	f01d      	retw.n

400d3b04 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)>:
    __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
400d3b04:	008136        	entry	a1, 64
400d3b07:	017d      	mov.n	a7, a1
400d3b09:	57cb      	addi.n	a5, a7, 12
400d3b0b:	0529      	s32i.n	a2, a5, 0
400d3b0d:	278b      	addi.n	a2, a7, 8
400d3b0f:	0239      	s32i.n	a3, a2, 0
400d3b11:	274b      	addi.n	a2, a7, 4
400d3b13:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __c;
400d3b15:	1bc722        	addi	a2, a7, 27
400d3b18:	374b      	addi.n	a3, a7, 4
400d3b1a:	0338      	l32i.n	a3, a3, 0
400d3b1c:	000332        	l8ui	a3, a3, 0
400d3b1f:	004232        	s8i	a3, a2, 0
      if (const size_t __len = __last - __first)
400d3b22:	278b      	addi.n	a2, a7, 8
400d3b24:	0238      	l32i.n	a3, a2, 0
400d3b26:	27cb      	addi.n	a2, a7, 12
400d3b28:	0228      	l32i.n	a2, a2, 0
400d3b2a:	c03320        	sub	a3, a3, a2
400d3b2d:	1cc722        	addi	a2, a7, 28
400d3b30:	0239      	s32i.n	a3, a2, 0
400d3b32:	1cc722        	addi	a2, a7, 28
400d3b35:	0228      	l32i.n	a2, a2, 0
400d3b37:	529c      	beqz.n	a2, 400d3b50 <__gnu_cxx::__enable_if<std::__is_byte<unsigned char>::__value, void>::__type std::__fill_a<unsigned char>(unsigned char*, unsigned char*, unsigned char const&)+0x4c>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
400d3b39:	1bc722        	addi	a2, a7, 27
400d3b3c:	000232        	l8ui	a3, a2, 0
400d3b3f:	1cc742        	addi	a4, a7, 28
400d3b42:	27cb      	addi.n	a2, a7, 12
400d3b44:	04c8      	l32i.n	a12, a4, 0
400d3b46:	03bd      	mov.n	a11, a3
400d3b48:	02a8      	l32i.n	a10, a2, 0
400d3b4a:	f14a81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d3b4d:	0008e0        	callx8	a8
    }
400d3b50:	f03d      	nop.n
400d3b52:	f01d      	retw.n

400d3b54 <__static_initialization_and_destruction_0(int, int)>:

void loop()
{
}
400d3b54:	006136        	entry	a1, 48
400d3b57:	207110        	or	a7, a1, a1
400d3b5a:	0cc742        	addi	a4, a7, 12
400d3b5d:	006422        	s32i	a2, a4, 0
400d3b60:	278b      	addi.n	a2, a7, 8
400d3b62:	0239      	s32i.n	a3, a2, 0
400d3b64:	27cb      	addi.n	a2, a7, 12
400d3b66:	0228      	l32i.n	a2, a2, 0
400d3b68:	191266        	bnei	a2, 1, 400d3b85 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3b6b:	278b      	addi.n	a2, a7, 8
400d3b6d:	0238      	l32i.n	a3, a2, 0
400d3b6f:	f14221        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3b72:	0f9327        	bne	a3, a2, 400d3b85 <__static_initialization_and_destruction_0(int, int)+0x31>
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0, 0, 0, 0);
400d3b75:	f14121        	l32r	a2, 400d007c <_flash_cache_start+0x64>
400d3b78:	0e0c      	movi.n	a14, 0
400d3b7a:	0d0c      	movi.n	a13, 0
400d3b7c:	0c0c      	movi.n	a12, 0
400d3b7e:	0b0c      	movi.n	a11, 0
400d3b80:	02ad      	mov.n	a10, a2
400d3b82:	000625        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d3b85:	0cc722        	addi	a2, a7, 12
400d3b88:	002222        	l32i	a2, a2, 0
400d3b8b:	011256        	bnez	a2, 400d3ba0 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3b8e:	278b      	addi.n	a2, a7, 8
400d3b90:	0238      	l32i.n	a3, a2, 0
400d3b92:	f13921        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3b95:	079327        	bne	a3, a2, 400d3ba0 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3b98:	f13921        	l32r	a2, 400d007c <_flash_cache_start+0x64>
400d3b9b:	02ad      	mov.n	a10, a2
400d3b9d:	fd0ca5        	call8	400d0c68 <IPAddress::~IPAddress()>
400d3ba0:	f03d      	nop.n
400d3ba2:	f01d      	retw.n

400d3ba4 <_GLOBAL__sub_I__Z5setupv>:
400d3ba4:	004136        	entry	a1, 32
400d3ba7:	207110        	or	a7, a1, a1
400d3baa:	f13321        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3bad:	20b220        	or	a11, a2, a2
400d3bb0:	01a0a2        	movi	a10, 1
400d3bb3:	fffa25        	call8	400d3b54 <__static_initialization_and_destruction_0(int, int)>
400d3bb6:	f01d      	retw.n

400d3bb8 <_GLOBAL__sub_D__Z5setupv>:
400d3bb8:	004136        	entry	a1, 32
400d3bbb:	207110        	or	a7, a1, a1
400d3bbe:	f12e21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3bc1:	20b220        	or	a11, a2, a2
400d3bc4:	00a0a2        	movi	a10, 0
400d3bc7:	fff8e5        	call8	400d3b54 <__static_initialization_and_destruction_0(int, int)>
400d3bca:	f01d      	retw.n

400d3bcc <Printable::Printable()>:
class Printable
400d3bcc:	006136        	entry	a1, 48
400d3bcf:	017d      	mov.n	a7, a1
400d3bd1:	37cb      	addi.n	a3, a7, 12
400d3bd3:	0329      	s32i.n	a2, a3, 0
400d3bd5:	f11031        	l32r	a3, 400d0018 <_flash_cache_start>
400d3bd8:	27cb      	addi.n	a2, a7, 12
400d3bda:	0228      	l32i.n	a2, a2, 0
400d3bdc:	0239      	s32i.n	a3, a2, 0
400d3bde:	f03d      	nop.n
400d3be0:	f01d      	retw.n
	...

400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>:
IPAddress::IPAddress()
{
    _address.dword = 0;
}

IPAddress::IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet)
400d3be4:	008136        	entry	a1, 64
400d3be7:	017d      	mov.n	a7, a1
400d3be9:	1cc782        	addi	a8, a7, 28
400d3bec:	0829      	s32i.n	a2, a8, 0
400d3bee:	039d      	mov.n	a9, a3
400d3bf0:	048d      	mov.n	a8, a4
400d3bf2:	054d      	mov.n	a4, a5
400d3bf4:	063d      	mov.n	a3, a6
400d3bf6:	18c722        	addi	a2, a7, 24
400d3bf9:	004292        	s8i	a9, a2, 0
400d3bfc:	14c722        	addi	a2, a7, 20
400d3bff:	004282        	s8i	a8, a2, 0
400d3c02:	10c722        	addi	a2, a7, 16
400d3c05:	004242        	s8i	a4, a2, 0
400d3c08:	27cb      	addi.n	a2, a7, 12
400d3c0a:	004232        	s8i	a3, a2, 0
400d3c0d:	1cc722        	addi	a2, a7, 28
400d3c10:	0228      	l32i.n	a2, a2, 0
400d3c12:	20a220        	or	a10, a2, a2
400d3c15:	fffb65        	call8	400d3bcc <Printable::Printable()>
400d3c18:	f10131        	l32r	a3, 400d001c <_flash_cache_start+0x4>
400d3c1b:	1cc722        	addi	a2, a7, 28
400d3c1e:	0228      	l32i.n	a2, a2, 0
400d3c20:	0239      	s32i.n	a3, a2, 0
{
    _address.bytes[0] = first_octet;
400d3c22:	1cc722        	addi	a2, a7, 28
400d3c25:	0228      	l32i.n	a2, a2, 0
400d3c27:	18c732        	addi	a3, a7, 24
400d3c2a:	000332        	l8ui	a3, a3, 0
400d3c2d:	044232        	s8i	a3, a2, 4
    _address.bytes[1] = second_octet;
400d3c30:	1cc722        	addi	a2, a7, 28
400d3c33:	0228      	l32i.n	a2, a2, 0
400d3c35:	14c732        	addi	a3, a7, 20
400d3c38:	000332        	l8ui	a3, a3, 0
400d3c3b:	054232        	s8i	a3, a2, 5
    _address.bytes[2] = third_octet;
400d3c3e:	1cc722        	addi	a2, a7, 28
400d3c41:	0228      	l32i.n	a2, a2, 0
400d3c43:	10c732        	addi	a3, a7, 16
400d3c46:	000332        	l8ui	a3, a3, 0
400d3c49:	064232        	s8i	a3, a2, 6
    _address.bytes[3] = fourth_octet;
400d3c4c:	1cc722        	addi	a2, a7, 28
400d3c4f:	0228      	l32i.n	a2, a2, 0
400d3c51:	37cb      	addi.n	a3, a7, 12
400d3c53:	000332        	l8ui	a3, a3, 0
400d3c56:	074232        	s8i	a3, a2, 7
}
400d3c59:	f03d      	nop.n
400d3c5b:	f01d      	retw.n
400d3c5d:	000000        	ill

400d3c60 <IPAddress::printTo(Print&) const>:
{
    return memcmp(addr, _address.bytes, sizeof(_address.bytes)) == 0;
}

size_t IPAddress::printTo(Print& p) const
{
400d3c60:	008136        	entry	a1, 64
400d3c63:	207110        	or	a7, a1, a1
400d3c66:	0cc742        	addi	a4, a7, 12
400d3c69:	0429      	s32i.n	a2, a4, 0
400d3c6b:	278b      	addi.n	a2, a7, 8
400d3c6d:	0239      	s32i.n	a3, a2, 0
    size_t n = 0;
400d3c6f:	18c722        	addi	a2, a7, 24
400d3c72:	030c      	movi.n	a3, 0
400d3c74:	0239      	s32i.n	a3, a2, 0
    for(int i = 0; i < 3; i++) {
400d3c76:	1cc722        	addi	a2, a7, 28
400d3c79:	030c      	movi.n	a3, 0
400d3c7b:	0239      	s32i.n	a3, a2, 0
400d3c7d:	1cc722        	addi	a2, a7, 28
400d3c80:	0228      	l32i.n	a2, a2, 0
400d3c82:	5332e6        	bgei	a2, 3, 400d3cd9 <IPAddress::printTo(Print&) const+0x79>
        n += p.print(_address.bytes[i], DEC);
400d3c85:	27cb      	addi.n	a2, a7, 12
400d3c87:	0238      	l32i.n	a3, a2, 0
400d3c89:	1cc722        	addi	a2, a7, 28
400d3c8c:	0228      	l32i.n	a2, a2, 0
400d3c8e:	232a      	add.n	a2, a3, a2
400d3c90:	224b      	addi.n	a2, a2, 4
400d3c92:	000222        	l8ui	a2, a2, 0
400d3c95:	023d      	mov.n	a3, a2
400d3c97:	278b      	addi.n	a2, a7, 8
400d3c99:	ac0c      	movi.n	a12, 10
400d3c9b:	20b330        	or	a11, a3, a3
400d3c9e:	02a8      	l32i.n	a10, a2, 0
400d3ca0:	001965        	call8	400d3e38 <Print::print(unsigned char, int)>
400d3ca3:	0a3d      	mov.n	a3, a10
400d3ca5:	18c722        	addi	a2, a7, 24
400d3ca8:	18c742        	addi	a4, a7, 24
400d3cab:	0448      	l32i.n	a4, a4, 0
400d3cad:	343a      	add.n	a3, a4, a3
400d3caf:	0239      	s32i.n	a3, a2, 0
        n += p.print('.');
400d3cb1:	278b      	addi.n	a2, a7, 8
400d3cb3:	eb2c      	movi.n	a11, 46
400d3cb5:	02a8      	l32i.n	a10, a2, 0
400d3cb7:	189465        	call8	400ec5fc <Print::print(char)>
400d3cba:	0a3d      	mov.n	a3, a10
400d3cbc:	18c722        	addi	a2, a7, 24
400d3cbf:	18c742        	addi	a4, a7, 24
400d3cc2:	0448      	l32i.n	a4, a4, 0
400d3cc4:	343a      	add.n	a3, a4, a3
400d3cc6:	0239      	s32i.n	a3, a2, 0
    for(int i = 0; i < 3; i++) {
400d3cc8:	1cc722        	addi	a2, a7, 28
400d3ccb:	1cc732        	addi	a3, a7, 28
400d3cce:	0338      	l32i.n	a3, a3, 0
400d3cd0:	331b      	addi.n	a3, a3, 1
400d3cd2:	0239      	s32i.n	a3, a2, 0
400d3cd4:	ffe946        	j	400d3c7d <IPAddress::printTo(Print&) const+0x1d>
400d3cd7:	220000        	orb	b0, b0, b0
    }
    n += p.print(_address.bytes[3], DEC);
400d3cda:	220cc7        	bnone	a12, a12, 400d3d00 <IPAddress::printTo(Print&) const+0xa0>
400d3cdd:	220022        	l8ui	a2, a0, 34
400d3ce0:	200702        	l8ui	a0, a7, 32
400d3ce3:	8b2032        	l32i	a3, a0, 0x22c
400d3ce6:	ac0c27        	bnone	a12, a2, 400d3c96 <IPAddress::printTo(Print&) const+0x36>
400d3ce9:	03bd      	mov.n	a11, a3
400d3ceb:	02a8      	l32i.n	a10, a2, 0
400d3ced:	0014a5        	call8	400d3e38 <Print::print(unsigned char, int)>
400d3cf0:	0a3d      	mov.n	a3, a10
400d3cf2:	18c722        	addi	a2, a7, 24
400d3cf5:	18c742        	addi	a4, a7, 24
400d3cf8:	0448      	l32i.n	a4, a4, 0
400d3cfa:	343a      	add.n	a3, a4, a3
400d3cfc:	0239      	s32i.n	a3, a2, 0
    return n;
400d3cfe:	18c722        	addi	a2, a7, 24
400d3d01:	0228      	l32i.n	a2, a2, 0
}
400d3d03:	f01d      	retw.n
400d3d05:	000000        	ill

400d3d08 <__static_initialization_and_destruction_0(int, int)>:
        // Too few dots (there must be 3 dots)
        return false;
    }
    _address.bytes[3] = acc;
    return true;
}
400d3d08:	006136        	entry	a1, 48
400d3d0b:	207110        	or	a7, a1, a1
400d3d0e:	0cc742        	addi	a4, a7, 12
400d3d11:	006422        	s32i	a2, a4, 0
400d3d14:	278b      	addi.n	a2, a7, 8
400d3d16:	0239      	s32i.n	a3, a2, 0
400d3d18:	27cb      	addi.n	a2, a7, 12
400d3d1a:	0228      	l32i.n	a2, a2, 0
400d3d1c:	191266        	bnei	a2, 1, 400d3d39 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3d1f:	278b      	addi.n	a2, a7, 8
400d3d21:	0238      	l32i.n	a3, a2, 0
400d3d23:	f0d521        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3d26:	0f9327        	bne	a3, a2, 400d3d39 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3d29:	f0d521        	l32r	a2, 400d0080 <_flash_cache_start+0x68>
400d3d2c:	0e0c      	movi.n	a14, 0
400d3d2e:	0d0c      	movi.n	a13, 0
400d3d30:	0c0c      	movi.n	a12, 0
400d3d32:	0b0c      	movi.n	a11, 0
400d3d34:	02ad      	mov.n	a10, a2
400d3d36:	ffeae5        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d3d39:	0cc722        	addi	a2, a7, 12
400d3d3c:	002222        	l32i	a2, a2, 0
400d3d3f:	011256        	bnez	a2, 400d3d54 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3d42:	278b      	addi.n	a2, a7, 8
400d3d44:	0238      	l32i.n	a3, a2, 0
400d3d46:	f0cc21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3d49:	079327        	bne	a3, a2, 400d3d54 <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3d4c:	f0cd21        	l32r	a2, 400d0080 <_flash_cache_start+0x68>
400d3d4f:	02ad      	mov.n	a10, a2
400d3d51:	fcf165        	call8	400d0c68 <IPAddress::~IPAddress()>
400d3d54:	f03d      	nop.n
400d3d56:	f01d      	retw.n

400d3d58 <_GLOBAL__sub_I__ZN9IPAddressC2Ev>:
400d3d58:	004136        	entry	a1, 32
400d3d5b:	207110        	or	a7, a1, a1
400d3d5e:	f0c621        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3d61:	20b220        	or	a11, a2, a2
400d3d64:	01a0a2        	movi	a10, 1
400d3d67:	fffa25        	call8	400d3d08 <__static_initialization_and_destruction_0(int, int)>
400d3d6a:	f01d      	retw.n

400d3d6c <_GLOBAL__sub_D__ZN9IPAddressC2Ev>:
400d3d6c:	004136        	entry	a1, 32
400d3d6f:	207110        	or	a7, a1, a1
400d3d72:	f0c121        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3d75:	20b220        	or	a11, a2, a2
400d3d78:	00a0a2        	movi	a10, 0
400d3d7b:	fff8e5        	call8	400d3d08 <__static_initialization_and_destruction_0(int, int)>
400d3d7e:	f01d      	retw.n

400d3d80 <String::isSSO() const>:
        union {
            struct _ptr ptr;
            struct _sso sso;
        };
        // Accessor functions
        inline bool isSSO() const { return sso.isSSO; }
400d3d80:	006136        	entry	a1, 48
400d3d83:	017d      	mov.n	a7, a1
400d3d85:	37cb      	addi.n	a3, a7, 12
400d3d87:	0329      	s32i.n	a2, a3, 0
400d3d89:	27cb      	addi.n	a2, a7, 12
400d3d8b:	0228      	l32i.n	a2, a2, 0
400d3d8d:	2238      	l32i.n	a3, a2, 8
400d3d8f:	f0bd21        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400d3d92:	104320        	and	a4, a3, a2
400d3d95:	130c      	movi.n	a3, 1
400d3d97:	020c      	movi.n	a2, 0
400d3d99:	932340        	movnez	a2, a3, a4
400d3d9c:	742020        	extui	a2, a2, 0, 8
400d3d9f:	f01d      	retw.n
400d3da1:	000000        	ill

400d3da4 <String::len() const>:
        inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
400d3da4:	006136        	entry	a1, 48
400d3da7:	017d      	mov.n	a7, a1
400d3da9:	37cb      	addi.n	a3, a7, 12
400d3dab:	0329      	s32i.n	a2, a3, 0
400d3dad:	27cb      	addi.n	a2, a7, 12
400d3daf:	02a8      	l32i.n	a10, a2, 0
400d3db1:	fffce5        	call8	400d3d80 <String::isSSO() const>
400d3db4:	0a2d      	mov.n	a2, a10
400d3db6:	e28c      	beqz.n	a2, 400d3dc8 <String::len() const+0x24>
400d3db8:	27cb      	addi.n	a2, a7, 12
400d3dba:	0228      	l32i.n	a2, a2, 0
400d3dbc:	2228      	l32i.n	a2, a2, 8
400d3dbe:	652820        	extui	a2, a2, 24, 7
400d3dc1:	742020        	extui	a2, a2, 0, 8
400d3dc4:	0001c6        	j	400d3dcf <String::len() const+0x2b>
400d3dc7:	27cb00        	lsi	f0, a11, 156
400d3dca:	0228      	l32i.n	a2, a2, 0
400d3dcc:	031222        	l16ui	a2, a2, 6
400d3dcf:	f01d      	retw.n
400d3dd1:	000000        	ill

400d3dd4 <String::buffer() const>:
        inline void setSSO(bool set) { sso.isSSO = set; }
        inline void setLen(int len) { if (isSSO()) sso.len = len; else ptr.len = len; }
        inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
	inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
        // Buffer accessor functions
        inline const char *buffer() const { return (const char *)(isSSO() ? sso.buff : ptr.buff); }
400d3dd4:	006136        	entry	a1, 48
400d3dd7:	017d      	mov.n	a7, a1
400d3dd9:	37cb      	addi.n	a3, a7, 12
400d3ddb:	0329      	s32i.n	a2, a3, 0
400d3ddd:	27cb      	addi.n	a2, a7, 12
400d3ddf:	02a8      	l32i.n	a10, a2, 0
400d3de1:	fff9e5        	call8	400d3d80 <String::isSSO() const>
400d3de4:	0a2d      	mov.n	a2, a10
400d3de6:	628c      	beqz.n	a2, 400d3df0 <String::buffer() const+0x1c>
400d3de8:	27cb      	addi.n	a2, a7, 12
400d3dea:	0228      	l32i.n	a2, a2, 0
400d3dec:	000186        	j	400d3df6 <String::buffer() const+0x22>
400d3def:	27cb00        	lsi	f0, a11, 156
400d3df2:	0228      	l32i.n	a2, a2, 0
400d3df4:	0228      	l32i.n	a2, a2, 0
400d3df6:	f01d      	retw.n

400d3df8 <Print::write(char const*)>:
    {
        setWriteError(0);
    }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str)
400d3df8:	006136        	entry	a1, 48
400d3dfb:	017d      	mov.n	a7, a1
400d3dfd:	47cb      	addi.n	a4, a7, 12
400d3dff:	0429      	s32i.n	a2, a4, 0
400d3e01:	278b      	addi.n	a2, a7, 8
400d3e03:	0239      	s32i.n	a3, a2, 0
    {
        if(str == NULL) {
400d3e05:	278b      	addi.n	a2, a7, 8
400d3e07:	0228      	l32i.n	a2, a2, 0
400d3e09:	42cc      	bnez.n	a2, 400d3e11 <Print::write(char const*)+0x19>
            return 0;
400d3e0b:	020c      	movi.n	a2, 0
400d3e0d:	000946        	j	400d3e36 <Print::write(char const*)+0x3e>
400d3e10:	27cb00        	lsi	f0, a11, 156
        }
        return write((const uint8_t *) str, strlen(str));
400d3e13:	0228      	l32i.n	a2, a2, 0
400d3e15:	0228      	l32i.n	a2, a2, 0
400d3e17:	22cb      	addi.n	a2, a2, 12
400d3e19:	0228      	l32i.n	a2, a2, 0
400d3e1b:	378b      	addi.n	a3, a7, 8
400d3e1d:	03a8      	l32i.n	a10, a3, 0
400d3e1f:	f09a81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400d3e22:	0008e0        	callx8	a8
400d3e25:	0a5d      	mov.n	a5, a10
400d3e27:	478b      	addi.n	a4, a7, 8
400d3e29:	37cb      	addi.n	a3, a7, 12
400d3e2b:	05cd      	mov.n	a12, a5
400d3e2d:	04b8      	l32i.n	a11, a4, 0
400d3e2f:	03a8      	l32i.n	a10, a3, 0
400d3e31:	0002e0        	callx8	a2
400d3e34:	0a2d      	mov.n	a2, a10
    }
400d3e36:	f01d      	retw.n

400d3e38 <Print::print(unsigned char, int)>:
{
    return write(c);
}

size_t Print::print(unsigned char b, int base)
{
400d3e38:	006136        	entry	a1, 48
400d3e3b:	017d      	mov.n	a7, a1
400d3e3d:	57cb      	addi.n	a5, a7, 12
400d3e3f:	0529      	s32i.n	a2, a5, 0
400d3e41:	274b      	addi.n	a2, a7, 4
400d3e43:	0249      	s32i.n	a4, a2, 0
400d3e45:	278b      	addi.n	a2, a7, 8
400d3e47:	004232        	s8i	a3, a2, 0
    return print((unsigned long) b, base);
400d3e4a:	278b      	addi.n	a2, a7, 8
400d3e4c:	000232        	l8ui	a3, a2, 0
400d3e4f:	474b      	addi.n	a4, a7, 4
400d3e51:	27cb      	addi.n	a2, a7, 12
400d3e53:	04c8      	l32i.n	a12, a4, 0
400d3e55:	03bd      	mov.n	a11, a3
400d3e57:	02a8      	l32i.n	a10, a2, 0
400d3e59:	000065        	call8	400d3e60 <Print::print(unsigned long, int)>
400d3e5c:	0a2d      	mov.n	a2, a10
}
400d3e5e:	f01d      	retw.n

400d3e60 <Print::print(unsigned long, int)>:
        return printNumber(n, base);
    }
}

size_t Print::print(unsigned long n, int base)
{
400d3e60:	006136        	entry	a1, 48
400d3e63:	017d      	mov.n	a7, a1
400d3e65:	57cb      	addi.n	a5, a7, 12
400d3e67:	0529      	s32i.n	a2, a5, 0
400d3e69:	278b      	addi.n	a2, a7, 8
400d3e6b:	0239      	s32i.n	a3, a2, 0
400d3e6d:	274b      	addi.n	a2, a7, 4
400d3e6f:	0249      	s32i.n	a4, a2, 0
    if(base == 0) {
400d3e71:	274b      	addi.n	a2, a7, 4
400d3e73:	0228      	l32i.n	a2, a2, 0
400d3e75:	d2dc      	bnez.n	a2, 400d3e96 <Print::print(unsigned long, int)+0x36>
        return write(n);
400d3e77:	27cb      	addi.n	a2, a7, 12
400d3e79:	0228      	l32i.n	a2, a2, 0
400d3e7b:	0228      	l32i.n	a2, a2, 0
400d3e7d:	228b      	addi.n	a2, a2, 8
400d3e7f:	0228      	l32i.n	a2, a2, 0
400d3e81:	378b      	addi.n	a3, a7, 8
400d3e83:	0338      	l32i.n	a3, a3, 0
400d3e85:	744030        	extui	a4, a3, 0, 8
400d3e88:	37cb      	addi.n	a3, a7, 12
400d3e8a:	04bd      	mov.n	a11, a4
400d3e8c:	03a8      	l32i.n	a10, a3, 0
400d3e8e:	0002e0        	callx8	a2
400d3e91:	0a2d      	mov.n	a2, a10
400d3e93:	000606        	j	400d3eaf <Print::print(unsigned long, int)+0x4f>
    } else {
        return printNumber(n, base);
400d3e96:	04c722        	addi	a2, a7, 4
400d3e99:	002222        	l32i	a2, a2, 0
400d3e9c:	744020        	extui	a4, a2, 0, 8
400d3e9f:	08c732        	addi	a3, a7, 8
400d3ea2:	27cb      	addi.n	a2, a7, 12
400d3ea4:	04cd      	mov.n	a12, a4
400d3ea6:	03b8      	l32i.n	a11, a3, 0
400d3ea8:	02a8      	l32i.n	a10, a2, 0
400d3eaa:	0000a5        	call8	400d3eb4 <Print::printNumber(unsigned long, unsigned char)>
400d3ead:	0a2d      	mov.n	a2, a10
    }
}
400d3eaf:	f01d      	retw.n
400d3eb1:	000000        	ill

400d3eb4 <Print::printNumber(unsigned long, unsigned char)>:
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
{
400d3eb4:	00e136        	entry	a1, 112
400d3eb7:	017d      	mov.n	a7, a1
400d3eb9:	57cb      	addi.n	a5, a7, 12
400d3ebb:	0529      	s32i.n	a2, a5, 0
400d3ebd:	278b      	addi.n	a2, a7, 8
400d3ebf:	0239      	s32i.n	a3, a2, 0
400d3ec1:	043d      	mov.n	a3, a4
400d3ec3:	274b      	addi.n	a2, a7, 4
400d3ec5:	004232        	s8i	a3, a2, 0
400d3ec8:	4cc722        	addi	a2, a7, 76
400d3ecb:	f07031        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d3ece:	0020c0        	memw
400d3ed1:	0338      	l32i.n	a3, a3, 0
400d3ed3:	0020c0        	memw
400d3ed6:	0239      	s32i.n	a3, a2, 0
    char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
    char *str = &buf[sizeof(buf) - 1];
400d3ed8:	032c      	movi.n	a3, 32
400d3eda:	20c722        	addi	a2, a7, 32
400d3edd:	2bc742        	addi	a4, a7, 43
400d3ee0:	343a      	add.n	a3, a4, a3
400d3ee2:	0239      	s32i.n	a3, a2, 0

    *str = '\0';
400d3ee4:	20c722        	addi	a2, a7, 32
400d3ee7:	0228      	l32i.n	a2, a2, 0
400d3ee9:	030c      	movi.n	a3, 0
400d3eeb:	004232        	s8i	a3, a2, 0

    // prevent crash if called with base == 1
    if(base < 2) {
400d3eee:	274b      	addi.n	a2, a7, 4
400d3ef0:	000222        	l8ui	a2, a2, 0
400d3ef3:	0622f6        	bgeui	a2, 2, 400d3efd <Print::printNumber(unsigned long, unsigned char)+0x49>
        base = 10;
400d3ef6:	274b      	addi.n	a2, a7, 4
400d3ef8:	a30c      	movi.n	a3, 10
400d3efa:	004232        	s8i	a3, a2, 0
    }

    do {
        unsigned long m = n;
400d3efd:	24c722        	addi	a2, a7, 36
400d3f00:	378b      	addi.n	a3, a7, 8
400d3f02:	0338      	l32i.n	a3, a3, 0
400d3f04:	0239      	s32i.n	a3, a2, 0
        n /= base;
400d3f06:	274b      	addi.n	a2, a7, 4
400d3f08:	000232        	l8ui	a3, a2, 0
400d3f0b:	278b      	addi.n	a2, a7, 8
400d3f0d:	478b      	addi.n	a4, a7, 8
400d3f0f:	0448      	l32i.n	a4, a4, 0
400d3f11:	c23430        	quou	a3, a4, a3
400d3f14:	0239      	s32i.n	a3, a2, 0
        char c = m - base * n;
400d3f16:	24c722        	addi	a2, a7, 36
400d3f19:	0228      	l32i.n	a2, a2, 0
400d3f1b:	744020        	extui	a4, a2, 0, 8
400d3f1e:	278b      	addi.n	a2, a7, 8
400d3f20:	0228      	l32i.n	a2, a2, 0
400d3f22:	743020        	extui	a3, a2, 0, 8
400d3f25:	274b      	addi.n	a2, a7, 4
400d3f27:	000222        	l8ui	a2, a2, 0
400d3f2a:	c12320        	mul16u	a2, a3, a2
400d3f2d:	743020        	extui	a3, a2, 0, 8
400d3f30:	1fc722        	addi	a2, a7, 31
400d3f33:	c03430        	sub	a3, a4, a3
400d3f36:	004232        	s8i	a3, a2, 0
        *--str = c < 10 ? c + '0' : c + 'A' - 10;
400d3f39:	20c722        	addi	a2, a7, 32
400d3f3c:	20c732        	addi	a3, a7, 32
400d3f3f:	0338      	l32i.n	a3, a3, 0
400d3f41:	330b      	addi.n	a3, a3, -1
400d3f43:	0239      	s32i.n	a3, a2, 0
400d3f45:	1fc722        	addi	a2, a7, 31
400d3f48:	000222        	l8ui	a2, a2, 0
400d3f4b:	0e92f6        	bgeui	a2, 10, 400d3f5d <Print::printNumber(unsigned long, unsigned char)+0xa9>
400d3f4e:	1fc722        	addi	a2, a7, 31
400d3f51:	000222        	l8ui	a2, a2, 0
400d3f54:	30c222        	addi	a2, a2, 48
400d3f57:	742020        	extui	a2, a2, 0, 8
400d3f5a:	0002c6        	j	400d3f69 <Print::printNumber(unsigned long, unsigned char)+0xb5>
400d3f5d:	1fc722        	addi	a2, a7, 31
400d3f60:	000222        	l8ui	a2, a2, 0
400d3f63:	37c222        	addi	a2, a2, 55
400d3f66:	742020        	extui	a2, a2, 0, 8
400d3f69:	20c732        	addi	a3, a7, 32
400d3f6c:	0338      	l32i.n	a3, a3, 0
400d3f6e:	004322        	s8i	a2, a3, 0
    do {
400d3f71:	278b      	addi.n	a2, a7, 8
400d3f73:	0228      	l32i.n	a2, a2, 0
400d3f75:	c28c      	beqz.n	a2, 400d3f85 <Print::printNumber(unsigned long, unsigned char)+0xd1>
400d3f77:	274b      	addi.n	a2, a7, 4
400d3f79:	374b      	addi.n	a3, a7, 4
400d3f7b:	000332        	l8ui	a3, a3, 0
400d3f7e:	004232        	s8i	a3, a2, 0
400d3f81:	ffde06        	j	400d3efd <Print::printNumber(unsigned long, unsigned char)+0x49>
400d3f84:	c73200        	lsi	f0, a2, 0x31c
    } while(n);

    return write(str);
400d3f87:	c72220        	lsi	f2, a2, 0x31c
400d3f8a:	b20c      	movi.n	a2, 11
400d3f8c:	a20023        	lsi	f2, a0, 0x288
400d3f8f:	650022        	l8ui	a2, a0, 101
400d3f92:	2dffe6        	bgei	a15, 0x100, 400d3fc3 <__static_initialization_and_destruction_0(int, int)+0x13>
400d3f95:	420a      	add.n	a4, a2, a0
}
400d3f97:	314cc7        	ball	a12, a12, 400d3fcc <__static_initialization_and_destruction_0(int, int)+0x1c>
400d3f9a:	f03c      	movi.n	a0, 63
400d3f9c:	0020c0        	memw
400d3f9f:	0448      	l32i.n	a4, a4, 0
400d3fa1:	0020c0        	memw
400d3fa4:	0338      	l32i.n	a3, a3, 0
400d3fa6:	021437        	beq	a4, a3, 400d3fac <Print::printNumber(unsigned long, unsigned char)+0xf8>
400d3fa9:	0270e5        	call8	400d66b8 <__stack_chk_fail>
400d3fac:	f01d      	retw.n
	...

400d3fb0 <__static_initialization_and_destruction_0(int, int)>:
        n += print(toPrint);
        remainder -= toPrint;
    }

    return n;
}
400d3fb0:	006136        	entry	a1, 48
400d3fb3:	207110        	or	a7, a1, a1
400d3fb6:	0cc742        	addi	a4, a7, 12
400d3fb9:	006422        	s32i	a2, a4, 0
400d3fbc:	278b      	addi.n	a2, a7, 8
400d3fbe:	0239      	s32i.n	a3, a2, 0
400d3fc0:	27cb      	addi.n	a2, a7, 12
400d3fc2:	0228      	l32i.n	a2, a2, 0
400d3fc4:	191266        	bnei	a2, 1, 400d3fe1 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3fc7:	278b      	addi.n	a2, a7, 8
400d3fc9:	0238      	l32i.n	a3, a2, 0
400d3fcb:	f02b21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3fce:	0f9327        	bne	a3, a2, 400d3fe1 <__static_initialization_and_destruction_0(int, int)+0x31>
400d3fd1:	f02f21        	l32r	a2, 400d0090 <_flash_cache_start+0x78>
400d3fd4:	0e0c      	movi.n	a14, 0
400d3fd6:	0d0c      	movi.n	a13, 0
400d3fd8:	0c0c      	movi.n	a12, 0
400d3fda:	0b0c      	movi.n	a11, 0
400d3fdc:	02ad      	mov.n	a10, a2
400d3fde:	ffc065        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d3fe1:	0cc722        	addi	a2, a7, 12
400d3fe4:	002222        	l32i	a2, a2, 0
400d3fe7:	011256        	bnez	a2, 400d3ffc <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3fea:	278b      	addi.n	a2, a7, 8
400d3fec:	0238      	l32i.n	a3, a2, 0
400d3fee:	f02221        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d3ff1:	079327        	bne	a3, a2, 400d3ffc <__static_initialization_and_destruction_0(int, int)+0x4c>
400d3ff4:	f02721        	l32r	a2, 400d0090 <_flash_cache_start+0x78>
400d3ff7:	02ad      	mov.n	a10, a2
400d3ff9:	fcc6e5        	call8	400d0c68 <IPAddress::~IPAddress()>
400d3ffc:	f03d      	nop.n
400d3ffe:	f01d      	retw.n

400d4000 <_GLOBAL__sub_I__ZN5Print5writeEPKhj>:
400d4000:	004136        	entry	a1, 32
400d4003:	207110        	or	a7, a1, a1
400d4006:	f01c21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d4009:	20b220        	or	a11, a2, a2
400d400c:	01a0a2        	movi	a10, 1
400d400f:	fffa25        	call8	400d3fb0 <__static_initialization_and_destruction_0(int, int)>
400d4012:	f01d      	retw.n

400d4014 <_GLOBAL__sub_D__ZN5Print5writeEPKhj>:
400d4014:	004136        	entry	a1, 32
400d4017:	207110        	or	a7, a1, a1
400d401a:	f01721        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d401d:	20b220        	or	a11, a2, a2
400d4020:	00a0a2        	movi	a10, 0
400d4023:	fff8e5        	call8	400d3fb0 <__static_initialization_and_destruction_0(int, int)>
400d4026:	f01d      	retw.n

400d4028 <String::capacity() const>:
        inline unsigned int capacity() const { return isSSO() ? (unsigned int)SSOSIZE - 1 : ptr.cap; } // Size of max string not including terminal NUL
400d4028:	006136        	entry	a1, 48
400d402b:	017d      	mov.n	a7, a1
400d402d:	37cb      	addi.n	a3, a7, 12
400d402f:	0329      	s32i.n	a2, a3, 0
400d4031:	27cb      	addi.n	a2, a7, 12
400d4033:	02a8      	l32i.n	a10, a2, 0
400d4035:	ffd4a5        	call8	400d3d80 <String::isSSO() const>
400d4038:	0a2d      	mov.n	a2, a10
400d403a:	328c      	beqz.n	a2, 400d4041 <String::capacity() const+0x19>
400d403c:	a20c      	movi.n	a2, 10
400d403e:	000186        	j	400d4048 <String::capacity() const+0x20>
400d4041:	27cb      	addi.n	a2, a7, 12
400d4043:	0228      	l32i.n	a2, a2, 0
400d4045:	021222        	l16ui	a2, a2, 4
400d4048:	f01d      	retw.n
	...

400d404c <String::setLen(int)>:
        inline void setLen(int len) { if (isSSO()) sso.len = len; else ptr.len = len; }
400d404c:	006136        	entry	a1, 48
400d404f:	017d      	mov.n	a7, a1
400d4051:	47cb      	addi.n	a4, a7, 12
400d4053:	0429      	s32i.n	a2, a4, 0
400d4055:	278b      	addi.n	a2, a7, 8
400d4057:	0239      	s32i.n	a3, a2, 0
400d4059:	27cb      	addi.n	a2, a7, 12
400d405b:	02a8      	l32i.n	a10, a2, 0
400d405d:	ffd225        	call8	400d3d80 <String::isSSO() const>
400d4060:	0a2d      	mov.n	a2, a10
400d4062:	42ac      	beqz.n	a2, 400d408a <String::setLen(int)+0x3e>
400d4064:	278b      	addi.n	a2, a7, 8
400d4066:	0228      	l32i.n	a2, a2, 0
400d4068:	742020        	extui	a2, a2, 0, 8
400d406b:	642020        	extui	a2, a2, 0, 7
400d406e:	743020        	extui	a3, a2, 0, 8
400d4071:	27cb      	addi.n	a2, a7, 12
400d4073:	0228      	l32i.n	a2, a2, 0
400d4075:	643030        	extui	a3, a3, 0, 7
400d4078:	0b0252        	l8ui	a5, a2, 11
400d407b:	80af42        	movi	a4, -128
400d407e:	104540        	and	a4, a5, a4
400d4081:	203430        	or	a3, a4, a3
400d4084:	0b4232        	s8i	a3, a2, 11
400d4087:	000346        	j	400d4098 <String::setLen(int)+0x4c>
400d408a:	278b      	addi.n	a2, a7, 8
400d408c:	0228      	l32i.n	a2, a2, 0
400d408e:	f43020        	extui	a3, a2, 0, 16
400d4091:	27cb      	addi.n	a2, a7, 12
400d4093:	0228      	l32i.n	a2, a2, 0
400d4095:	035232        	s16i	a3, a2, 6
400d4098:	f03d      	nop.n
400d409a:	f01d      	retw.n

400d409c <String::setCapacity(int)>:
        inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
400d409c:	006136        	entry	a1, 48
400d409f:	017d      	mov.n	a7, a1
400d40a1:	47cb      	addi.n	a4, a7, 12
400d40a3:	0429      	s32i.n	a2, a4, 0
400d40a5:	278b      	addi.n	a2, a7, 8
400d40a7:	0239      	s32i.n	a3, a2, 0
400d40a9:	27cb      	addi.n	a2, a7, 12
400d40ab:	02a8      	l32i.n	a10, a2, 0
400d40ad:	ffcd25        	call8	400d3d80 <String::isSSO() const>
400d40b0:	0a2d      	mov.n	a2, a10
400d40b2:	023d      	mov.n	a3, a2
400d40b4:	120c      	movi.n	a2, 1
400d40b6:	302320        	xor	a2, a3, a2
400d40b9:	742020        	extui	a2, a2, 0, 8
400d40bc:	c28c      	beqz.n	a2, 400d40cc <String::setCapacity(int)+0x30>
400d40be:	278b      	addi.n	a2, a7, 8
400d40c0:	0228      	l32i.n	a2, a2, 0
400d40c2:	f43020        	extui	a3, a2, 0, 16
400d40c5:	27cb      	addi.n	a2, a7, 12
400d40c7:	0228      	l32i.n	a2, a2, 0
400d40c9:	025232        	s16i	a3, a2, 4
400d40cc:	f03d      	nop.n
400d40ce:	f01d      	retw.n

400d40d0 <String::setBuffer(char*)>:
	inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
400d40d0:	006136        	entry	a1, 48
400d40d3:	017d      	mov.n	a7, a1
400d40d5:	47cb      	addi.n	a4, a7, 12
400d40d7:	0429      	s32i.n	a2, a4, 0
400d40d9:	278b      	addi.n	a2, a7, 8
400d40db:	0239      	s32i.n	a3, a2, 0
400d40dd:	27cb      	addi.n	a2, a7, 12
400d40df:	02a8      	l32i.n	a10, a2, 0
400d40e1:	ffc9e5        	call8	400d3d80 <String::isSSO() const>
400d40e4:	0a2d      	mov.n	a2, a10
400d40e6:	023d      	mov.n	a3, a2
400d40e8:	120c      	movi.n	a2, 1
400d40ea:	302320        	xor	a2, a3, a2
400d40ed:	742020        	extui	a2, a2, 0, 8
400d40f0:	828c      	beqz.n	a2, 400d40fc <String::setBuffer(char*)+0x2c>
400d40f2:	27cb      	addi.n	a2, a7, 12
400d40f4:	0228      	l32i.n	a2, a2, 0
400d40f6:	378b      	addi.n	a3, a7, 8
400d40f8:	0338      	l32i.n	a3, a3, 0
400d40fa:	0239      	s32i.n	a3, a2, 0
400d40fc:	f03d      	nop.n
400d40fe:	f01d      	retw.n

400d4100 <String::wbuffer() const>:
        inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
400d4100:	006136        	entry	a1, 48
400d4103:	017d      	mov.n	a7, a1
400d4105:	37cb      	addi.n	a3, a7, 12
400d4107:	0329      	s32i.n	a2, a3, 0
400d4109:	27cb      	addi.n	a2, a7, 12
400d410b:	02a8      	l32i.n	a10, a2, 0
400d410d:	ffc725        	call8	400d3d80 <String::isSSO() const>
400d4110:	0a2d      	mov.n	a2, a10
400d4112:	628c      	beqz.n	a2, 400d411c <String::wbuffer() const+0x1c>
400d4114:	27cb      	addi.n	a2, a7, 12
400d4116:	0228      	l32i.n	a2, a2, 0
400d4118:	000186        	j	400d4122 <String::wbuffer() const+0x22>
400d411b:	27cb00        	lsi	f0, a11, 156
400d411e:	0228      	l32i.n	a2, a2, 0
400d4120:	0228      	l32i.n	a2, a2, 0
400d4122:	f01d      	retw.n

400d4124 <String::String(char const*)>:

/*********************************************/
/*  Constructors                             */
/*********************************************/

String::String(const char *cstr) {
400d4124:	006136        	entry	a1, 48
400d4127:	207110        	or	a7, a1, a1
400d412a:	0cc742        	addi	a4, a7, 12
400d412d:	0429      	s32i.n	a2, a4, 0
400d412f:	278b      	addi.n	a2, a7, 8
400d4131:	0239      	s32i.n	a3, a2, 0
    init();
400d4133:	0cc722        	addi	a2, a7, 12
400d4136:	02a8      	l32i.n	a10, a2, 0
400d4138:	0003a5        	call8	400d4174 <String::init()>
    if (cstr)
400d413b:	278b      	addi.n	a2, a7, 8
400d413d:	0228      	l32i.n	a2, a2, 0
400d413f:	729c      	beqz.n	a2, 400d415a <String::String(char const*)+0x36>
        copy(cstr, strlen(cstr));
400d4141:	278b      	addi.n	a2, a7, 8
400d4143:	02a8      	l32i.n	a10, a2, 0
400d4145:	efd081        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400d4148:	0008e0        	callx8	a8
400d414b:	0a4d      	mov.n	a4, a10
400d414d:	378b      	addi.n	a3, a7, 8
400d414f:	27cb      	addi.n	a2, a7, 12
400d4151:	04cd      	mov.n	a12, a4
400d4153:	03b8      	l32i.n	a11, a3, 0
400d4155:	02a8      	l32i.n	a10, a2, 0
400d4157:	0033a5        	call8	400d4490 <String::copy(char const*, unsigned int)>
}
400d415a:	f03d      	nop.n
400d415c:	f01d      	retw.n
	...

400d4160 <String::~String()>:
    init();
    char buf[33];
    *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String() {
400d4160:	006136        	entry	a1, 48
400d4163:	017d      	mov.n	a7, a1
400d4165:	37cb      	addi.n	a3, a7, 12
400d4167:	0329      	s32i.n	a2, a3, 0
    invalidate();
400d4169:	27cb      	addi.n	a2, a7, 12
400d416b:	02a8      	l32i.n	a10, a2, 0
400d416d:	0003a5        	call8	400d41a8 <String::invalidate()>
}
400d4170:	f03d      	nop.n
400d4172:	f01d      	retw.n

400d4174 <String::init()>:

// /*********************************************/
// /*  Memory Management                        */
// /*********************************************/

inline void String::init(void) {
400d4174:	006136        	entry	a1, 48
400d4177:	017d      	mov.n	a7, a1
400d4179:	37cb      	addi.n	a3, a7, 12
400d417b:	0329      	s32i.n	a2, a3, 0
    setSSO(false);
400d417d:	27cb      	addi.n	a2, a7, 12
400d417f:	0b0c      	movi.n	a11, 0
400d4181:	02a8      	l32i.n	a10, a2, 0
400d4183:	184a65        	call8	400ec628 <String::setSSO(bool)>
    setCapacity(0);
400d4186:	27cb      	addi.n	a2, a7, 12
400d4188:	0b0c      	movi.n	a11, 0
400d418a:	02a8      	l32i.n	a10, a2, 0
400d418c:	fff0e5        	call8	400d409c <String::setCapacity(int)>
    setLen(0);
400d418f:	27cb      	addi.n	a2, a7, 12
400d4191:	0b0c      	movi.n	a11, 0
400d4193:	02a8      	l32i.n	a10, a2, 0
400d4195:	ffeb65        	call8	400d404c <String::setLen(int)>
    setBuffer(nullptr);
400d4198:	27cb      	addi.n	a2, a7, 12
400d419a:	0b0c      	movi.n	a11, 0
400d419c:	02a8      	l32i.n	a10, a2, 0
400d419e:	fff325        	call8	400d40d0 <String::setBuffer(char*)>
}
400d41a1:	f03d      	nop.n
400d41a3:	f01d      	retw.n
400d41a5:	000000        	ill

400d41a8 <String::invalidate()>:

void String::invalidate(void) {
400d41a8:	006136        	entry	a1, 48
400d41ab:	207110        	or	a7, a1, a1
400d41ae:	0cc732        	addi	a3, a7, 12
400d41b1:	0329      	s32i.n	a2, a3, 0
    if(!isSSO() && wbuffer())
400d41b3:	27cb      	addi.n	a2, a7, 12
400d41b5:	0022a2        	l32i	a10, a2, 0
400d41b8:	ffbc65        	call8	400d3d80 <String::isSSO() const>
400d41bb:	0a2d      	mov.n	a2, a10
400d41bd:	023d      	mov.n	a3, a2
400d41bf:	120c      	movi.n	a2, 1
400d41c1:	302320        	xor	a2, a3, a2
400d41c4:	742020        	extui	a2, a2, 0, 8
400d41c7:	f28c      	beqz.n	a2, 400d41da <String::invalidate()+0x32>
400d41c9:	27cb      	addi.n	a2, a7, 12
400d41cb:	02a8      	l32i.n	a10, a2, 0
400d41cd:	fff325        	call8	400d4100 <String::wbuffer() const>
400d41d0:	0a2d      	mov.n	a2, a10
400d41d2:	428c      	beqz.n	a2, 400d41da <String::invalidate()+0x32>
400d41d4:	120c      	movi.n	a2, 1
400d41d6:	0000c6        	j	400d41dd <String::invalidate()+0x35>
400d41d9:	a02200        	addx4	a2, a2, a0
400d41dc:	121600        	andbc	b1, b6, b0
400d41df:	c72201        	l32r	a0, 400c5e68 <_rtc_text_end+0x5e68>
        free(wbuffer());
400d41e2:	a80c      	movi.n	a8, 10
400d41e4:	f1a502        	movi	a0, 0x5f1
400d41e7:	ff          	.byte 0xff
400d41e8:	0a2d      	mov.n	a2, a10
400d41ea:	02ad      	mov.n	a10, a2
400d41ec:	efaa81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d41ef:	0008e0        	callx8	a8
    init();
400d41f2:	0cc722        	addi	a2, a7, 12
400d41f5:	0022a2        	l32i	a10, a2, 0
400d41f8:	fff7a5        	call8	400d4174 <String::init()>
}
400d41fb:	f03d      	nop.n
400d41fd:	000090        	retw

400d4200 <String::reserve(unsigned int)>:

unsigned char String::reserve(unsigned int size) {
400d4200:	006136        	entry	a1, 48
400d4203:	207110        	or	a7, a1, a1
400d4206:	0cc742        	addi	a4, a7, 12
400d4209:	0429      	s32i.n	a2, a4, 0
400d420b:	278b      	addi.n	a2, a7, 8
400d420d:	0239      	s32i.n	a3, a2, 0
    if(buffer() && capacity() >= size)
400d420f:	0cc722        	addi	a2, a7, 12
400d4212:	02a8      	l32i.n	a10, a2, 0
400d4214:	ffbbe5        	call8	400d3dd4 <String::buffer() const>
400d4217:	0a2d      	mov.n	a2, a10
400d4219:	329c      	beqz.n	a2, 400d4230 <String::reserve(unsigned int)+0x30>
400d421b:	27cb      	addi.n	a2, a7, 12
400d421d:	02a8      	l32i.n	a10, a2, 0
400d421f:	ffe0a5        	call8	400d4028 <String::capacity() const>
400d4222:	0a3d      	mov.n	a3, a10
400d4224:	278b      	addi.n	a2, a7, 8
400d4226:	0228      	l32i.n	a2, a2, 0
400d4228:	043327        	bltu	a3, a2, 400d4230 <String::reserve(unsigned int)+0x30>
400d422b:	120c      	movi.n	a2, 1
400d422d:	000046        	j	400d4232 <String::reserve(unsigned int)+0x32>
400d4230:	020c      	movi.n	a2, 0
400d4232:	428c      	beqz.n	a2, 400d423a <String::reserve(unsigned int)+0x3a>
        return 1;
400d4234:	120c      	movi.n	a2, 1
400d4236:	001186        	j	400d4280 <String::reserve(unsigned int)+0x80>
400d4239:	c73200        	lsi	f0, a2, 0x31c
    if(changeBuffer(size)) {
400d423c:	cb08      	l32i.n	a0, a11, 48
400d423e:	03b827        	bgeu	a8, a2, 400d4245 <String::reserve(unsigned int)+0x45>
400d4241:	02a8      	l32i.n	a10, a2, 0
400d4243:	000425        	call8	400d4284 <String::changeBuffer(unsigned int)>
400d4246:	0a2d      	mov.n	a2, a10
400d4248:	024d      	mov.n	a4, a2
400d424a:	130c      	movi.n	a3, 1
400d424c:	020c      	movi.n	a2, 0
400d424e:	932340        	movnez	a2, a3, a4
400d4251:	742020        	extui	a2, a2, 0, 8
400d4254:	62ac      	beqz.n	a2, 400d427e <String::reserve(unsigned int)+0x7e>
        if(len() == 0)
400d4256:	27cb      	addi.n	a2, a7, 12
400d4258:	02a8      	l32i.n	a10, a2, 0
400d425a:	ffb4a5        	call8	400d3da4 <String::len() const>
400d425d:	0a4d      	mov.n	a4, a10
400d425f:	130c      	movi.n	a3, 1
400d4261:	020c      	movi.n	a2, 0
400d4263:	832340        	moveqz	a2, a3, a4
400d4266:	742020        	extui	a2, a2, 0, 8
400d4269:	c28c      	beqz.n	a2, 400d4279 <String::reserve(unsigned int)+0x79>
            wbuffer()[0] = 0;
400d426b:	27cb      	addi.n	a2, a7, 12
400d426d:	02a8      	l32i.n	a10, a2, 0
400d426f:	ffe925        	call8	400d4100 <String::wbuffer() const>
400d4272:	0a2d      	mov.n	a2, a10
400d4274:	030c      	movi.n	a3, 0
400d4276:	004232        	s8i	a3, a2, 0
        return 1;
400d4279:	120c      	movi.n	a2, 1
400d427b:	000046        	j	400d4280 <String::reserve(unsigned int)+0x80>
    }
    return 0;
400d427e:	020c      	movi.n	a2, 0
}
400d4280:	f01d      	retw.n
	...

400d4284 <String::changeBuffer(unsigned int)>:

unsigned char String::changeBuffer(unsigned int maxStrLen) {
400d4284:	00c136        	entry	a1, 96
400d4287:	207110        	or	a7, a1, a1
400d428a:	0cc742        	addi	a4, a7, 12
400d428d:	0429      	s32i.n	a2, a4, 0
400d428f:	278b      	addi.n	a2, a7, 8
400d4291:	0239      	s32i.n	a3, a2, 0
400d4293:	3cc722        	addi	a2, a7, 60
400d4296:	ef7d31        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d4299:	0020c0        	memw
400d429c:	0338      	l32i.n	a3, a3, 0
400d429e:	0020c0        	memw
400d42a1:	0239      	s32i.n	a3, a2, 0
    // Can we use SSO here to avoid allocation?
    if (maxStrLen < sizeof(sso.buff) - 1) {
400d42a3:	a20c      	movi.n	a2, 10
400d42a5:	378b      	addi.n	a3, a7, 8
400d42a7:	0338      	l32i.n	a3, a3, 0
400d42a9:	023327        	bltu	a3, a2, 400d42af <String::changeBuffer(unsigned int)+0x2b>
400d42ac:	003046        	j	400d4371 <String::changeBuffer(unsigned int)+0xed>
        if (isSSO() || !buffer()) {
400d42af:	0cc722        	addi	a2, a7, 12
400d42b2:	02a8      	l32i.n	a10, a2, 0
400d42b4:	ffaca5        	call8	400d3d80 <String::isSSO() const>
400d42b7:	0a2d      	mov.n	a2, a10
400d42b9:	92cc      	bnez.n	a2, 400d42c6 <String::changeBuffer(unsigned int)+0x42>
400d42bb:	27cb      	addi.n	a2, a7, 12
400d42bd:	02a8      	l32i.n	a10, a2, 0
400d42bf:	ffb165        	call8	400d3dd4 <String::buffer() const>
400d42c2:	0a2d      	mov.n	a2, a10
400d42c4:	32cc      	bnez.n	a2, 400d42cb <String::changeBuffer(unsigned int)+0x47>
400d42c6:	120c      	movi.n	a2, 1
400d42c8:	000086        	j	400d42ce <String::changeBuffer(unsigned int)+0x4a>
400d42cb:	00a022        	movi	a2, 0
400d42ce:	c2ac      	beqz.n	a2, 400d42fe <String::changeBuffer(unsigned int)+0x7a>
            // Already using SSO, nothing to do
	    uint16_t oldLen = len();
400d42d0:	27cb      	addi.n	a2, a7, 12
400d42d2:	02a8      	l32i.n	a10, a2, 0
400d42d4:	fface5        	call8	400d3da4 <String::len() const>
400d42d7:	0a3d      	mov.n	a3, a10
400d42d9:	1ec722        	addi	a2, a7, 30
400d42dc:	005232        	s16i	a3, a2, 0
            setSSO(true);
400d42df:	27cb      	addi.n	a2, a7, 12
400d42e1:	1b0c      	movi.n	a11, 1
400d42e3:	02a8      	l32i.n	a10, a2, 0
400d42e5:	183425        	call8	400ec628 <String::setSSO(bool)>
	    setLen(oldLen);
400d42e8:	1ec722        	addi	a2, a7, 30
400d42eb:	001232        	l16ui	a3, a2, 0
400d42ee:	27cb      	addi.n	a2, a7, 12
400d42f0:	03bd      	mov.n	a11, a3
400d42f2:	0022a2        	l32i	a10, a2, 0
400d42f5:	ffd565        	call8	400d404c <String::setLen(int)>
            return 1;
400d42f8:	120c      	movi.n	a2, 1
400d42fa:	005d86        	j	400d4474 <String::changeBuffer(unsigned int)+0x1f0>
400d42fd:	27cb00        	lsi	f0, a11, 156
        } else { // if bufptr && !isSSO()
            // Using bufptr, need to shrink into sso.buff
            char temp[sizeof(sso.buff)];
            memcpy(temp, buffer(), maxStrLen);
400d4300:	02a8      	l32i.n	a10, a2, 0
400d4302:	ffad25        	call8	400d3dd4 <String::buffer() const>
400d4305:	0a3d      	mov.n	a3, a10
400d4307:	478b      	addi.n	a4, a7, 8
400d4309:	31c722        	addi	a2, a7, 49
400d430c:	04c8      	l32i.n	a12, a4, 0
400d430e:	03bd      	mov.n	a11, a3
400d4310:	20a220        	or	a10, a2, a2
400d4313:	ef6181        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4316:	0008e0        	callx8	a8
            free(wbuffer());
400d4319:	27cb      	addi.n	a2, a7, 12
400d431b:	02a8      	l32i.n	a10, a2, 0
400d431d:	ffde25        	call8	400d4100 <String::wbuffer() const>
400d4320:	0a2d      	mov.n	a2, a10
400d4322:	02ad      	mov.n	a10, a2
400d4324:	ef5c81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d4327:	0008e0        	callx8	a8
            uint16_t oldLen = len();
400d432a:	27cb      	addi.n	a2, a7, 12
400d432c:	02a8      	l32i.n	a10, a2, 0
400d432e:	ffa765        	call8	400d3da4 <String::len() const>
400d4331:	0a3d      	mov.n	a3, a10
400d4333:	20c722        	addi	a2, a7, 32
400d4336:	005232        	s16i	a3, a2, 0
            setSSO(true);
400d4339:	27cb      	addi.n	a2, a7, 12
400d433b:	1b0c      	movi.n	a11, 1
400d433d:	02a8      	l32i.n	a10, a2, 0
400d433f:	182ea5        	call8	400ec628 <String::setSSO(bool)>
	    setLen(oldLen);
400d4342:	20c722        	addi	a2, a7, 32
400d4345:	001232        	l16ui	a3, a2, 0
400d4348:	27cb      	addi.n	a2, a7, 12
400d434a:	03bd      	mov.n	a11, a3
400d434c:	02a8      	l32i.n	a10, a2, 0
400d434e:	ffcfe5        	call8	400d404c <String::setLen(int)>
            memcpy(wbuffer(), temp, maxStrLen);
400d4351:	27cb      	addi.n	a2, a7, 12
400d4353:	0022a2        	l32i	a10, a2, 0
400d4356:	ffdaa5        	call8	400d4100 <String::wbuffer() const>
400d4359:	0a2d      	mov.n	a2, a10
400d435b:	478b      	addi.n	a4, a7, 8
400d435d:	31c732        	addi	a3, a7, 49
400d4360:	04c8      	l32i.n	a12, a4, 0
400d4362:	03bd      	mov.n	a11, a3
400d4364:	02ad      	mov.n	a10, a2
400d4366:	ef4c81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4369:	0008e0        	callx8	a8
            return 1;
400d436c:	120c      	movi.n	a2, 1
400d436e:	004086        	j	400d4474 <String::changeBuffer(unsigned int)+0x1f0>
        }
    }
    // Fallthrough to normal allocator
    size_t newSize = (maxStrLen + 16) & (~0xf);
400d4371:	278b      	addi.n	a2, a7, 8
400d4373:	0228      	l32i.n	a2, a2, 0
400d4375:	10c242        	addi	a4, a2, 16
400d4378:	24c722        	addi	a2, a7, 36
400d437b:	037c      	movi.n	a3, -16
400d437d:	103430        	and	a3, a4, a3
400d4380:	0239      	s32i.n	a3, a2, 0
    // Make sure we can fit newsize in the buffer
    if (newSize > CAPACITY_MAX) {
400d4382:	24c722        	addi	a2, a7, 36
400d4385:	0228      	l32i.n	a2, a2, 0
400d4387:	0512b6        	bltui	a2, 0x10000, 400d4390 <String::changeBuffer(unsigned int)+0x10c>
        return false;
400d438a:	020c      	movi.n	a2, 0
400d438c:	003906        	j	400d4474 <String::changeBuffer(unsigned int)+0x1f0>
400d438f:	c72200        	lsi	f0, a2, 0x31c
    }
    uint16_t oldLen = len();
400d4392:	a20c      	movi.n	a2, 10
400d4394:	e50022        	l8ui	a2, a0, 229
400d4397:	3dffa0        	lsi	f10, a15, 244
400d439a:	220a      	add.n	a2, a2, a0
400d439c:	3222c7        	blt	a2, a12, 400d43d2 <String::changeBuffer(unsigned int)+0x14e>
400d439f:	cb0052        	l8ui	a5, a0, 203
    char *newbuffer = (char *) realloc(isSSO() ? nullptr : wbuffer(), newSize);
400d43a2:	02a827        	bge	a8, a2, 400d43a8 <String::changeBuffer(unsigned int)+0x124>
400d43a5:	ff9da5        	call8	400d3d80 <String::isSSO() const>
400d43a8:	0a2d      	mov.n	a2, a10
400d43aa:	428c      	beqz.n	a2, 400d43b2 <String::changeBuffer(unsigned int)+0x12e>
400d43ac:	020c      	movi.n	a2, 0
400d43ae:	000286        	j	400d43bc <String::changeBuffer(unsigned int)+0x138>
400d43b1:	c72200        	lsi	f0, a2, 0x31c
400d43b4:	a80c      	movi.n	a8, 10
400d43b6:	d4a502        	movi	a0, 0x5d4
400d43b9:	ff          	.byte 0xff
400d43ba:	0a2d      	mov.n	a2, a10
400d43bc:	28c732        	addi	a3, a7, 40
400d43bf:	24c742        	addi	a4, a7, 36
400d43c2:	04b8      	l32i.n	a11, a4, 0
400d43c4:	02ad      	mov.n	a10, a2
400d43c6:	ef3581        	l32r	a8, 400d009c <_flash_cache_start+0x84>
400d43c9:	0008e0        	callx8	a8
400d43cc:	03a9      	s32i.n	a10, a3, 0
    if (newbuffer) {
400d43ce:	28c722        	addi	a2, a7, 40
400d43d1:	0228      	l32i.n	a2, a2, 0
400d43d3:	09a216        	beqz	a2, 400d4471 <String::changeBuffer(unsigned int)+0x1ed>
        size_t oldSize = capacity() + 1; // include NULL.
400d43d6:	27cb      	addi.n	a2, a7, 12
400d43d8:	02a8      	l32i.n	a10, a2, 0
400d43da:	ffc4e5        	call8	400d4028 <String::capacity() const>
400d43dd:	0a3d      	mov.n	a3, a10
400d43df:	2cc722        	addi	a2, a7, 44
400d43e2:	331b      	addi.n	a3, a3, 1
400d43e4:	0239      	s32i.n	a3, a2, 0
        if (isSSO()) {
400d43e6:	27cb      	addi.n	a2, a7, 12
400d43e8:	02a8      	l32i.n	a10, a2, 0
400d43ea:	ff9965        	call8	400d3d80 <String::isSSO() const>
400d43ed:	0a2d      	mov.n	a2, a10
400d43ef:	129c      	beqz.n	a2, 400d4404 <String::changeBuffer(unsigned int)+0x180>
            // Copy the SSO buffer into allocated space
            memmove(newbuffer, sso.buff, sizeof(sso.buff));
400d43f1:	27cb      	addi.n	a2, a7, 12
400d43f3:	0238      	l32i.n	a3, a2, 0
400d43f5:	28c722        	addi	a2, a7, 40
400d43f8:	bc0c      	movi.n	a12, 11
400d43fa:	03bd      	mov.n	a11, a3
400d43fc:	02a8      	l32i.n	a10, a2, 0
400d43fe:	ef2881        	l32r	a8, 400d00a0 <_flash_cache_start+0x88>
400d4401:	0008e0        	callx8	a8
        }
        if (newSize > oldSize)
400d4404:	24c722        	addi	a2, a7, 36
400d4407:	2cc732        	addi	a3, a7, 44
400d440a:	0228      	l32i.n	a2, a2, 0
400d440c:	0338      	l32i.n	a3, a3, 0
400d440e:	24b327        	bgeu	a3, a2, 400d4436 <String::changeBuffer(unsigned int)+0x1b2>
        {
            memset(newbuffer + oldSize, 0, newSize - oldSize);
400d4411:	28c732        	addi	a3, a7, 40
400d4414:	2cc722        	addi	a2, a7, 44
400d4417:	0338      	l32i.n	a3, a3, 0
400d4419:	0228      	l32i.n	a2, a2, 0
400d441b:	232a      	add.n	a2, a3, a2
400d441d:	24c742        	addi	a4, a7, 36
400d4420:	2cc732        	addi	a3, a7, 44
400d4423:	0448      	l32i.n	a4, a4, 0
400d4425:	0338      	l32i.n	a3, a3, 0
400d4427:	c03430        	sub	a3, a4, a3
400d442a:	03cd      	mov.n	a12, a3
400d442c:	0b0c      	movi.n	a11, 0
400d442e:	02ad      	mov.n	a10, a2
400d4430:	ef1181        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d4433:	0008e0        	callx8	a8
        }
        setSSO(false);
400d4436:	27cb      	addi.n	a2, a7, 12
400d4438:	0b0c      	movi.n	a11, 0
400d443a:	02a8      	l32i.n	a10, a2, 0
400d443c:	181ea5        	call8	400ec628 <String::setSSO(bool)>
        setCapacity(newSize - 1);
400d443f:	24c722        	addi	a2, a7, 36
400d4442:	0228      	l32i.n	a2, a2, 0
400d4444:	220b      	addi.n	a2, a2, -1
400d4446:	023d      	mov.n	a3, a2
400d4448:	27cb      	addi.n	a2, a7, 12
400d444a:	03bd      	mov.n	a11, a3
400d444c:	02a8      	l32i.n	a10, a2, 0
400d444e:	ffc4e5        	call8	400d409c <String::setCapacity(int)>
        setLen(oldLen); // Needed in case of SSO where len() never existed
400d4451:	22c722        	addi	a2, a7, 34
400d4454:	001232        	l16ui	a3, a2, 0
400d4457:	27cb      	addi.n	a2, a7, 12
400d4459:	03bd      	mov.n	a11, a3
400d445b:	02a8      	l32i.n	a10, a2, 0
400d445d:	ffbee5        	call8	400d404c <String::setLen(int)>
        setBuffer(newbuffer);
400d4460:	28c732        	addi	a3, a7, 40
400d4463:	27cb      	addi.n	a2, a7, 12
400d4465:	03b8      	l32i.n	a11, a3, 0
400d4467:	02a8      	l32i.n	a10, a2, 0
400d4469:	ffc665        	call8	400d40d0 <String::setBuffer(char*)>
        return 1;
400d446c:	120c      	movi.n	a2, 1
400d446e:	000086        	j	400d4474 <String::changeBuffer(unsigned int)+0x1f0>
    }
    return 0;
400d4471:	00a022        	movi	a2, 0
}
400d4474:	3cc742        	addi	a4, a7, 60
400d4477:	ef0531        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d447a:	0020c0        	memw
400d447d:	002442        	l32i	a4, a4, 0
400d4480:	0020c0        	memw
400d4483:	002332        	l32i	a3, a3, 0
400d4486:	021437        	beq	a4, a3, 400d448c <String::changeBuffer(unsigned int)+0x208>
400d4489:	0222e5        	call8	400d66b8 <__stack_chk_fail>
400d448c:	f01d      	retw.n
	...

400d4490 <String::copy(char const*, unsigned int)>:

// /*********************************************/
// /*  Copy and Move                            */
// /*********************************************/

String & String::copy(const char *cstr, unsigned int length) {
400d4490:	006136        	entry	a1, 48
400d4493:	207110        	or	a7, a1, a1
400d4496:	0cc752        	addi	a5, a7, 12
400d4499:	0529      	s32i.n	a2, a5, 0
400d449b:	278b      	addi.n	a2, a7, 8
400d449d:	0239      	s32i.n	a3, a2, 0
400d449f:	274b      	addi.n	a2, a7, 4
400d44a1:	0249      	s32i.n	a4, a2, 0
    if(!reserve(length)) {
400d44a3:	374b      	addi.n	a3, a7, 4
400d44a5:	27cb      	addi.n	a2, a7, 12
400d44a7:	0023b2        	l32i	a11, a3, 0
400d44aa:	02a8      	l32i.n	a10, a2, 0
400d44ac:	ffd525        	call8	400d4200 <String::reserve(unsigned int)>
400d44af:	0a2d      	mov.n	a2, a10
400d44b1:	024d      	mov.n	a4, a2
400d44b3:	130c      	movi.n	a3, 1
400d44b5:	020c      	movi.n	a2, 0
400d44b7:	832340        	moveqz	a2, a3, a4
400d44ba:	742020        	extui	a2, a2, 0, 8
400d44bd:	c28c      	beqz.n	a2, 400d44cd <String::copy(char const*, unsigned int)+0x3d>
        invalidate();
400d44bf:	27cb      	addi.n	a2, a7, 12
400d44c1:	02a8      	l32i.n	a10, a2, 0
400d44c3:	ffce65        	call8	400d41a8 <String::invalidate()>
        return *this;
400d44c6:	27cb      	addi.n	a2, a7, 12
400d44c8:	0228      	l32i.n	a2, a2, 0
400d44ca:	000c06        	j	400d44fe <String::copy(char const*, unsigned int)+0x6e>
    }
    setLen(length);
400d44cd:	04c722        	addi	a2, a7, 4
400d44d0:	002232        	l32i	a3, a2, 0
400d44d3:	27cb      	addi.n	a2, a7, 12
400d44d5:	03bd      	mov.n	a11, a3
400d44d7:	0022a2        	l32i	a10, a2, 0
400d44da:	ffb725        	call8	400d404c <String::setLen(int)>
    memmove(wbuffer(), cstr, length + 1);
400d44dd:	27cb      	addi.n	a2, a7, 12
400d44df:	02a8      	l32i.n	a10, a2, 0
400d44e1:	ffc1e5        	call8	400d4100 <String::wbuffer() const>
400d44e4:	0a2d      	mov.n	a2, a10
400d44e6:	374b      	addi.n	a3, a7, 4
400d44e8:	0338      	l32i.n	a3, a3, 0
400d44ea:	431b      	addi.n	a4, a3, 1
400d44ec:	378b      	addi.n	a3, a7, 8
400d44ee:	04cd      	mov.n	a12, a4
400d44f0:	03b8      	l32i.n	a11, a3, 0
400d44f2:	02ad      	mov.n	a10, a2
400d44f4:	eeeb81        	l32r	a8, 400d00a0 <_flash_cache_start+0x88>
400d44f7:	0008e0        	callx8	a8
    return *this;
400d44fa:	27cb      	addi.n	a2, a7, 12
400d44fc:	0228      	l32i.n	a2, a2, 0
}
400d44fe:	f01d      	retw.n

400d4500 <__static_initialization_and_destruction_0(int, int)>:
    return 0.0;
}

// global empty string to allow returning const String& with nothing

const String emptyString;
400d4500:	006136        	entry	a1, 48
400d4503:	207110        	or	a7, a1, a1
400d4506:	0cc742        	addi	a4, a7, 12
400d4509:	0429      	s32i.n	a2, a4, 0
400d450b:	278b      	addi.n	a2, a7, 8
400d450d:	0239      	s32i.n	a3, a2, 0
400d450f:	27cb      	addi.n	a2, a7, 12
400d4511:	0228      	l32i.n	a2, a2, 0
400d4513:	261266        	bnei	a2, 1, 400d453d <__static_initialization_and_destruction_0(int, int)+0x3d>
400d4516:	278b      	addi.n	a2, a7, 8
400d4518:	0238      	l32i.n	a3, a2, 0
400d451a:	eed721        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d451d:	1c9327        	bne	a3, a2, 400d453d <__static_initialization_and_destruction_0(int, int)+0x3d>
400d4520:	eee121        	l32r	a2, 400d00a4 <_flash_cache_start+0x8c>
400d4523:	0e0c      	movi.n	a14, 0
400d4525:	0d0c      	movi.n	a13, 0
400d4527:	0c0c      	movi.n	a12, 0
400d4529:	0b0c      	movi.n	a11, 0
400d452b:	02ad      	mov.n	a10, a2
400d452d:	ff6b65        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400d4530:	eede31        	l32r	a3, 400d00a8 <_flash_cache_start+0x90>
400d4533:	eede21        	l32r	a2, 400d00ac <_flash_cache_start+0x94>
400d4536:	03bd      	mov.n	a11, a3
400d4538:	02ad      	mov.n	a10, a2
400d453a:	ffbea5        	call8	400d4124 <String::String(char const*)>
400d453d:	0cc722        	addi	a2, a7, 12
400d4540:	002222        	l32i	a2, a2, 0
400d4543:	92dc      	bnez.n	a2, 400d4560 <__static_initialization_and_destruction_0(int, int)+0x60>
400d4545:	278b      	addi.n	a2, a7, 8
400d4547:	0238      	l32i.n	a3, a2, 0
400d4549:	eecb21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d454c:	109327        	bne	a3, a2, 400d4560 <__static_initialization_and_destruction_0(int, int)+0x60>
400d454f:	eed721        	l32r	a2, 400d00ac <_flash_cache_start+0x94>
400d4552:	20a220        	or	a10, a2, a2
400d4555:	ffc0a5        	call8	400d4160 <String::~String()>
400d4558:	eed321        	l32r	a2, 400d00a4 <_flash_cache_start+0x8c>
400d455b:	02ad      	mov.n	a10, a2
400d455d:	fc70a5        	call8	400d0c68 <IPAddress::~IPAddress()>
400d4560:	f03d      	nop.n
400d4562:	f01d      	retw.n

400d4564 <_GLOBAL__sub_I__ZN6StringC2EPKc>:
400d4564:	004136        	entry	a1, 32
400d4567:	207110        	or	a7, a1, a1
400d456a:	eec321        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d456d:	20b220        	or	a11, a2, a2
400d4570:	01a0a2        	movi	a10, 1
400d4573:	fff8e5        	call8	400d4500 <__static_initialization_and_destruction_0(int, int)>
400d4576:	f01d      	retw.n

400d4578 <_GLOBAL__sub_D__ZN6StringC2EPKc>:
400d4578:	004136        	entry	a1, 32
400d457b:	207110        	or	a7, a1, a1
400d457e:	eebe21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400d4581:	20b220        	or	a11, a2, a2
400d4584:	00a0a2        	movi	a10, 0
400d4587:	fff7a5        	call8	400d4500 <__static_initialization_and_destruction_0(int, int)>
400d458a:	f01d      	retw.n

400d458c <uw_update_context_1>:
400d458c:	00c136        	entry	a1, 96
400d458f:	8c3c      	movi.n	a12, 56
400d4591:	02bd      	mov.n	a11, a2
400d4593:	20a110        	or	a10, a1, a1
400d4596:	eec081        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4599:	0008e0        	callx8	a8
400d459c:	4388      	l32i.n	a8, a3, 16
400d459e:	a89c      	beqz.n	a8, 400d45bc <uw_update_context_1+0x30>
400d45a0:	1898      	l32i.n	a9, a8, 4
400d45a2:	10c8d2        	addi	a13, a8, 16
400d45a5:	f4c9a2        	addi	a10, a9, -12
400d45a8:	20c8c2        	addi	a12, a8, 32
400d45ab:	30c8b2        	addi	a11, a8, 48
400d45ae:	0aa8      	l32i.n	a10, a10, 0
400d45b0:	0289      	s32i.n	a8, a2, 0
400d45b2:	12d9      	s32i.n	a13, a2, 4
400d45b4:	22c9      	s32i.n	a12, a2, 8
400d45b6:	32b9      	s32i.n	a11, a2, 12
400d45b8:	001446        	j	400d460d <uw_update_context_1+0x81>
400d45bb:	429800        	xorb	b9, b8, b0
400d45be:	52b8      	l32i.n	a11, a2, 20
400d45c0:	1388      	l32i.n	a8, a3, 4
400d45c2:	f4c9a2        	addi	a10, a9, -12
400d45c5:	f0cbb2        	addi	a11, a11, -16
400d45c8:	0aa8      	l32i.n	a10, a10, 0
400d45ca:	418280        	srli	a8, a8, 2
400d45cd:	02b9      	s32i.n	a11, a2, 0
400d45cf:	0a28f6        	bgeui	a8, 2, 400d45dd <uw_update_context_1+0x51>
400d45d2:	000906        	j	400d45fa <uw_update_context_1+0x6e>
400d45d5:	660000        	lsi	f0, a0, 0x198
400d45d8:	1f48      	l32i.n	a4, a15, 4
400d45da:	000bc6        	j	400d460d <uw_update_context_1+0x81>
400d45dd:	11c8c0        	slli	a12, a8, 4
400d45e0:	e0ccb2        	addi	a11, a12, -32
400d45e3:	41b4b0        	srli	a11, a11, 4
400d45e6:	d24b      	addi.n	a13, a2, 4
400d45e8:	c0cac0        	sub	a12, a10, a12
400d45eb:	bb1b      	addi.n	a11, a11, 1
400d45ed:	068b76        	loop	a11, 400d45f7 <uw_update_context_1+0x6b>
400d45f0:	0dc9      	s32i.n	a12, a13, 0
400d45f2:	10ccc2        	addi	a12, a12, 16
400d45f5:	dd4b      	addi.n	a13, a13, 4
400d45f7:	fff706        	j	400d45d7 <uw_update_context_1+0x4b>
400d45fa:	01bd      	mov.n	a11, a1
400d45fc:	a08820        	addx4	a8, a8, a2
400d45ff:	10c2d2        	addi	a13, a2, 16
400d4602:	0bc8      	l32i.n	a12, a11, 0
400d4604:	bb4b      	addi.n	a11, a11, 4
400d4606:	08c9      	s32i.n	a12, a8, 0
400d4608:	884b      	addi.n	a8, a8, 4
400d460a:	f49d87        	bne	a13, a8, 400d4602 <uw_update_context_1+0x76>
400d460d:	5299      	s32i.n	a9, a2, 20
400d460f:	42a9      	s32i.n	a10, a2, 16
400d4611:	0b0332        	l8ui	a3, a3, 11
400d4614:	c288      	l32i.n	a8, a2, 48
400d4616:	a38c      	beqz.n	a3, 400d4624 <uw_update_context_1+0x98>
400d4618:	ee9b31        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d461b:	203830        	or	a3, a8, a3
400d461e:	c239      	s32i.n	a3, a2, 48
400d4620:	f01d      	retw.n
400d4622:	310000        	srai	a0, a0, 16
400d4625:	30ee91        	l32r	a9, 400a09e0 <_iram_end+0x12e8c>
400d4628:	1038      	l32i.n	a3, a0, 4
400d462a:	c239      	s32i.n	a3, a2, 48
400d462c:	f01d      	retw.n
	...

400d4630 <uw_init_context_1>:
400d4630:	008136        	entry	a1, 64
400d4633:	ee9f81        	l32r	a8, 400d00b0 <_flash_cache_start+0x98>
400d4636:	1150e0        	slli	a5, a0, 2
400d4639:	158e80        	extui	a8, a8, 30, 2
400d463c:	018820        	slli	a8, a8, 30
400d463f:	8c3c      	movi.n	a12, 56
400d4641:	0b0c      	movi.n	a11, 0
400d4643:	02ad      	mov.n	a10, a2
400d4645:	415250        	srli	a5, a5, 2
400d4648:	205580        	or	a5, a5, a8
400d464b:	ee8a81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d464e:	0008e0        	callx8	a8
400d4651:	ee97a1        	l32r	a10, 400d00b0 <_flash_cache_start+0x98>
400d4654:	ee9891        	l32r	a9, 400d00b4 <_flash_cache_start+0x9c>
400d4657:	6259      	s32i.n	a5, a2, 24
400d4659:	109a90        	and	a9, a10, a9
400d465c:	40c152        	addi	a5, a1, 64
400d465f:	080c      	movi.n	a8, 0
400d4661:	5259      	s32i.n	a5, a2, 20
400d4663:	4239      	s32i.n	a3, a2, 16
400d4665:	7299      	s32i.n	a9, a2, 28
400d4667:	01bd      	mov.n	a11, a1
400d4669:	02ad      	mov.n	a10, a2
400d466b:	850c      	movi.n	a5, 8
400d466d:	0189      	s32i.n	a8, a1, 0
400d466f:	2189      	s32i.n	a8, a1, 8
400d4671:	3189      	s32i.n	a8, a1, 12
400d4673:	4189      	s32i.n	a8, a1, 16
400d4675:	5189      	s32i.n	a8, a1, 20
400d4677:	1159      	s32i.n	a5, a1, 4
400d4679:	fff125        	call8	400d458c <uw_update_context_1>
400d467c:	6249      	s32i.n	a4, a2, 24
400d467e:	f01d      	retw.n

400d4680 <read_encoded_value_with_base>:
400d4680:	004136        	entry	a1, 32
400d4683:	085c      	movi.n	a8, 80
400d4685:	0f9287        	bne	a2, a8, 400d4698 <read_encoded_value_with_base+0x18>
400d4688:	943b      	addi.n	a9, a4, 3
400d468a:	c27c      	movi.n	a2, -4
400d468c:	109920        	and	a9, a9, a2
400d468f:	0988      	l32i.n	a8, a9, 0
400d4691:	994b      	addi.n	a9, a9, 4
400d4693:	003fc6        	j	400d4796 <read_encoded_value_with_base+0x116>
400d4696:	200000        	or	a0, a0, a0
400d4699:	0c3480        	lsi	f8, a4, 48
400d469c:	87c9      	s32i.n	a12, a7, 32
400d469e:	02b9      	s32i.n	a11, a2, 0
400d46a0:	003506        	j	400d4778 <read_encoded_value_with_base+0xf8>
400d46a3:	ee8591        	l32r	a9, 400d00b8 <_flash_cache_start+0xa0>
400d46a6:	a08890        	addx4	a8, a8, a9
400d46a9:	0888      	l32i.n	a8, a8, 0
400d46ab:	0008a0        	jx	a8
400d46ae:	080c      	movi.n	a8, 0
400d46b0:	049d      	mov.n	a9, a4
400d46b2:	08cd      	mov.n	a12, a8
400d46b4:	991b      	addi.n	a9, a9, 1
400d46b6:	a90b      	addi.n	a10, a9, -1
400d46b8:	000aa2        	l8ui	a10, a10, 0
400d46bb:	64b0a0        	extui	a11, a10, 0, 7
400d46be:	401c00        	ssl	a12
400d46c1:	a1bb00        	sll	a11, a11
400d46c4:	23aa00        	sext	a10, a10, 7
400d46c7:	2088b0        	or	a8, a8, a11
400d46ca:	cc7b      	addi.n	a12, a12, 7
400d46cc:	fe4a96        	bltz	a10, 400d46b4 <read_encoded_value_with_base+0x34>
400d46cf:	002ac6        	j	400d477e <read_encoded_value_with_base+0xfe>
400d46d2:	080c      	movi.n	a8, 0
400d46d4:	049d      	mov.n	a9, a4
400d46d6:	08bd      	mov.n	a11, a8
400d46d8:	991b      	addi.n	a9, a9, 1
400d46da:	a90b      	addi.n	a10, a9, -1
400d46dc:	000ac2        	l8ui	a12, a10, 0
400d46df:	64a0c0        	extui	a10, a12, 0, 7
400d46e2:	401b00        	ssl	a11
400d46e5:	a1aa00        	sll	a10, a10
400d46e8:	23dc00        	sext	a13, a12, 7
400d46eb:	2088a0        	or	a8, a8, a10
400d46ee:	bb7b      	addi.n	a11, a11, 7
400d46f0:	fe4d96        	bltz	a13, 400d46d8 <read_encoded_value_with_base+0x58>
400d46f3:	fa1c      	movi.n	a10, 31
400d46f5:	02bab7        	bgeu	a10, a11, 400d46fb <read_encoded_value_with_base+0x7b>
400d46f8:	002086        	j	400d477e <read_encoded_value_with_base+0xfe>
400d46fb:	7f6c67        	bbci	a12, 6, 400d477e <read_encoded_value_with_base+0xfe>
400d46fe:	fa7c      	movi.n	a10, -1
400d4700:	401b00        	ssl	a11
400d4703:	a1ba00        	sll	a11, a10
400d4706:	2088b0        	or	a8, a8, a11
400d4709:	001cc6        	j	400d4780 <read_encoded_value_with_base+0x100>
400d470c:	010482        	l8ui	a8, a4, 1
400d470f:	000492        	l8ui	a9, a4, 0
400d4712:	118880        	slli	a8, a8, 8
400d4715:	208890        	or	a8, a8, a9
400d4718:	942b      	addi.n	a9, a4, 2
400d471a:	001806        	j	400d477e <read_encoded_value_with_base+0xfe>
400d471d:	048200        	extui	a8, a0, 2, 1
400d4720:	049201        	l32r	a0, 40095968 <_iram_end+0x7e14>
400d4723:	888000        	lsi	f0, a0, 0x220
400d4726:	889011        	l32r	a1, 400b6968 <_iram_end+0x28e14>
400d4729:	888020        	lsi	f2, a0, 0x220
400d472c:	942b23        	lsi	f2, a11, 0x250
400d472f:	0012c6        	j	400d477e <read_encoded_value_with_base+0xfe>
400d4732:	0104a2        	l8ui	a10, a4, 1
400d4735:	0004b2        	l8ui	a11, a4, 0
400d4738:	020492        	l8ui	a9, a4, 2
400d473b:	11aa80        	slli	a10, a10, 8
400d473e:	030482        	l8ui	a8, a4, 3
400d4741:	20aab0        	or	a10, a10, a11
400d4744:	119900        	slli	a9, a9, 16
400d4747:	2099a0        	or	a9, a9, a10
400d474a:	018880        	slli	a8, a8, 24
400d474d:	208890        	or	a8, a8, a9
400d4750:	944b      	addi.n	a9, a4, 4
400d4752:	000a06        	j	400d477e <read_encoded_value_with_base+0xfe>
400d4755:	0104a2        	l8ui	a10, a4, 1
400d4758:	0004b2        	l8ui	a11, a4, 0
400d475b:	020492        	l8ui	a9, a4, 2
400d475e:	11aa80        	slli	a10, a10, 8
400d4761:	030482        	l8ui	a8, a4, 3
400d4764:	20aab0        	or	a10, a10, a11
400d4767:	119900        	slli	a9, a9, 16
400d476a:	2099a0        	or	a9, a9, a10
400d476d:	018880        	slli	a8, a8, 24
400d4770:	208890        	or	a8, a8, a9
400d4773:	948b      	addi.n	a9, a4, 8
400d4775:	000146        	j	400d477e <read_encoded_value_with_base+0xfe>
400d4778:	201110        	or	a1, a1, a1
400d477b:	b6bf25        	call8	4008b36c <abort>
400d477e:	489c      	beqz.n	a8, 400d4796 <read_encoded_value_with_base+0x116>
400d4780:	70a0a2        	movi	a10, 112
400d4783:	10a2a0        	and	a10, a2, a10
400d4786:	f0caa2        	addi	a10, a10, -16
400d4789:	9343a0        	movnez	a4, a3, a10
400d478c:	232200        	sext	a2, a2, 7
400d478f:	884a      	add.n	a8, a8, a4
400d4791:	0012d6        	bgez	a2, 400d4796 <read_encoded_value_with_base+0x116>
400d4794:	0888      	l32i.n	a8, a8, 0
400d4796:	0589      	s32i.n	a8, a5, 0
400d4798:	092d      	mov.n	a2, a9
400d479a:	f01d      	retw.n

400d479c <base_of_encoded_value>:
400d479c:	004136        	entry	a1, 32
400d479f:	ffa082        	movi	a8, 255
400d47a2:	381287        	beq	a2, a8, 400d47de <base_of_encoded_value+0x42>
400d47a5:	70a082        	movi	a8, 112
400d47a8:	102280        	and	a2, a2, a8
400d47ab:	1dc226        	beqi	a2, 32, 400d47cc <base_of_encoded_value+0x30>
400d47ae:	082c      	movi.n	a8, 32
400d47b0:	083827        	bltu	a8, a2, 400d47bc <base_of_encoded_value+0x20>
400d47b3:	72ac      	beqz.n	a2, 400d47de <base_of_encoded_value+0x42>
400d47b5:	1fb266        	bnei	a2, 16, 400d47d8 <base_of_encoded_value+0x3c>
400d47b8:	000886        	j	400d47de <base_of_encoded_value+0x42>
400d47bb:	d22600        	quos	a2, a6, a0
400d47be:	085c14        	lsi	f1, a12, 32
400d47c1:	191287        	beq	a2, a8, 400d47de <base_of_encoded_value+0x42>
400d47c4:	083c      	movi.n	a8, 48
400d47c6:	061287        	beq	a2, a8, 400d47d0 <base_of_encoded_value+0x34>
400d47c9:	0002c6        	j	400d47d8 <base_of_encoded_value+0x3c>
400d47cc:	9328      	l32i.n	a2, a3, 36
400d47ce:	f01d      	retw.n
400d47d0:	a328      	l32i.n	a2, a3, 40
400d47d2:	f01d      	retw.n
400d47d4:	b328      	l32i.n	a2, a3, 44
400d47d6:	f01d      	retw.n
400d47d8:	201110        	or	a1, a1, a1
400d47db:	b6b925        	call8	4008b36c <abort>
400d47de:	020c      	movi.n	a2, 0
400d47e0:	f01d      	retw.n
	...

400d47e4 <uw_frame_state_for>:
400d47e4:	00a136        	entry	a1, 80
400d47e7:	040c      	movi.n	a4, 0
400d47e9:	0349      	s32i.n	a4, a3, 0
400d47eb:	1349      	s32i.n	a4, a3, 4
400d47ed:	2349      	s32i.n	a4, a3, 8
400d47ef:	3349      	s32i.n	a4, a3, 12
400d47f1:	4349      	s32i.n	a4, a3, 16
400d47f3:	5349      	s32i.n	a4, a3, 20
400d47f5:	c258      	l32i.n	a5, a2, 48
400d47f7:	62a8      	l32i.n	a10, a2, 24
400d47f9:	055f50        	extui	a5, a5, 31, 1
400d47fc:	550b      	addi.n	a5, a5, -1
400d47fe:	8249      	s32i.n	a4, a2, 32
400d4800:	24c2b2        	addi	a11, a2, 36
400d4803:	aa5a      	add.n	a10, a10, a5
400d4805:	011d25        	call8	400d59d8 <_Unwind_Find_FDE>
400d4808:	0aed      	mov.n	a14, a10
400d480a:	029a47        	bne	a10, a4, 400d4810 <uw_frame_state_for+0x2c>
400d480d:	006cc6        	j	400d49c4 <uw_frame_state_for+0x1e0>
400d4810:	1a48      	l32i.n	a4, a10, 4
400d4812:	6a4b      	addi.n	a6, a10, 4
400d4814:	c06640        	sub	a6, a6, a4
400d4817:	469b      	addi.n	a4, a6, 9
400d4819:	04ad      	mov.n	a10, a4
400d481b:	0861e2        	s32i	a14, a1, 32
400d481e:	ee1a81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400d4821:	0008e0        	callx8	a8
400d4824:	090682        	l8ui	a8, a6, 9
400d4827:	aa1b      	addi.n	a10, a10, 1
400d4829:	65a052        	movi	a5, 101
400d482c:	a4aa      	add.n	a10, a4, a10
400d482e:	81e8      	l32i.n	a14, a1, 32
400d4830:	2c9857        	bne	a8, a5, 400d4860 <uw_frame_state_for+0x7c>
400d4833:	0a0672        	l8ui	a7, a6, 10
400d4836:	68a052        	movi	a5, 104
400d4839:	239757        	bne	a7, a5, 400d4860 <uw_frame_state_for+0x7c>
400d483c:	010a82        	l8ui	a8, a10, 1
400d483f:	000a42        	l8ui	a4, a10, 0
400d4842:	020a72        	l8ui	a7, a10, 2
400d4845:	030a52        	l8ui	a5, a10, 3
400d4848:	118880        	slli	a8, a8, 8
400d484b:	204840        	or	a4, a8, a4
400d484e:	117700        	slli	a7, a7, 16
400d4851:	204740        	or	a4, a7, a4
400d4854:	015580        	slli	a5, a5, 24
400d4857:	204540        	or	a4, a5, a4
400d485a:	3349      	s32i.n	a4, a3, 12
400d485c:	aa4b      	addi.n	a10, a10, 4
400d485e:	46bb      	addi.n	a4, a6, 11
400d4860:	aa1b      	addi.n	a10, a10, 1
400d4862:	5a0b      	addi.n	a5, a10, -1
400d4864:	000552        	l8ui	a5, a5, 0
400d4867:	235500        	sext	a5, a5, 7
400d486a:	ff2596        	bltz	a5, 400d4860 <uw_frame_state_for+0x7c>
400d486d:	aa1b      	addi.n	a10, a10, 1
400d486f:	5a0b      	addi.n	a5, a10, -1
400d4871:	000552        	l8ui	a5, a5, 0
400d4874:	235500        	sext	a5, a5, 7
400d4877:	ff2596        	bltz	a5, 400d486d <uw_frame_state_for+0x89>
400d487a:	080652        	l8ui	a5, a6, 8
400d487d:	080c      	movi.n	a8, 0
400d487f:	087d      	mov.n	a7, a8
400d4881:	091566        	bnei	a5, 1, 400d488e <uw_frame_state_for+0xaa>
400d4884:	000a52        	l8ui	a5, a10, 0
400d4887:	aa1b      	addi.n	a10, a10, 1
400d4889:	1359      	s32i.n	a5, a3, 4
400d488b:	000706        	j	400d48ab <uw_frame_state_for+0xc7>
400d488e:	aa1b      	addi.n	a10, a10, 1
400d4890:	5a0b      	addi.n	a5, a10, -1
400d4892:	000552        	l8ui	a5, a5, 0
400d4895:	646050        	extui	a6, a5, 0, 7
400d4898:	401700        	ssl	a7
400d489b:	a16600        	sll	a6, a6
400d489e:	235500        	sext	a5, a5, 7
400d48a1:	208860        	or	a8, a8, a6
400d48a4:	777b      	addi.n	a7, a7, 7
400d48a6:	fe4596        	bltz	a5, 400d488e <uw_frame_state_for+0xaa>
400d48a9:	1389      	s32i.n	a8, a3, 4
400d48ab:	f57c      	movi.n	a5, -1
400d48ad:	094352        	s8i	a5, a3, 9
400d48b0:	0004b2        	l8ui	a11, a4, 0
400d48b3:	7aa052        	movi	a5, 122
400d48b6:	070c      	movi.n	a7, 0
400d48b8:	289b57        	bne	a11, a5, 400d48e4 <uw_frame_state_for+0x100>
400d48bb:	078d      	mov.n	a8, a7
400d48bd:	aa1b      	addi.n	a10, a10, 1
400d48bf:	5a0b      	addi.n	a5, a10, -1
400d48c1:	000552        	l8ui	a5, a5, 0
400d48c4:	646050        	extui	a6, a5, 0, 7
400d48c7:	401800        	ssl	a8
400d48ca:	a16600        	sll	a6, a6
400d48cd:	235500        	sext	a5, a5, 7
400d48d0:	207760        	or	a7, a7, a6
400d48d3:	887b      	addi.n	a8, a8, 7
400d48d5:	fe4596        	bltz	a5, 400d48bd <uw_frame_state_for+0xd9>
400d48d8:	150c      	movi.n	a5, 1
400d48da:	0a4352        	s8i	a5, a3, 10
400d48dd:	0104b2        	l8ui	a11, a4, 1
400d48e0:	7a7a      	add.n	a7, a10, a7
400d48e2:	441b      	addi.n	a4, a4, 1
400d48e4:	441b      	addi.n	a4, a4, 1
400d48e6:	c54c      	movi.n	a5, 76
400d48e8:	265c      	movi.n	a6, 82
400d48ea:	085c      	movi.n	a8, 80
400d48ec:	395c      	movi.n	a9, 83
400d48ee:	0017c6        	j	400d4951 <uw_frame_state_for+0x16d>
400d48f1:	0b9b57        	bne	a11, a5, 400d4900 <uw_frame_state_for+0x11c>
400d48f4:	000ab2        	l8ui	a11, a10, 0
400d48f7:	aa1b      	addi.n	a10, a10, 1
400d48f9:	0943b2        	s8i	a11, a3, 9
400d48fc:	001306        	j	400d494c <uw_frame_state_for+0x168>
400d48ff:	9b6700        	movnez.s	f6, f7, a0
400d4902:	b20c      	movi.n	a2, 11
400d4904:	000a      	add.n	a0, a0, a0
400d4906:	aa1b      	addi.n	a10, a10, 1
400d4908:	0843b2        	s8i	a11, a3, 8
400d490b:	000f46        	j	400d494c <uw_frame_state_for+0x168>
400d490e:	870000        	lsi	f0, a0, 0x21c
400d4911:	309b      	addi.n	a3, a0, 9
400d4913:	000af2        	l8ui	a15, a10, 0
400d4916:	ca1b      	addi.n	a12, a10, 1
400d4918:	02bd      	mov.n	a11, a2
400d491a:	0fad      	mov.n	a10, a15
400d491c:	6189      	s32i.n	a8, a1, 24
400d491e:	7199      	s32i.n	a9, a1, 28
400d4920:	81e9      	s32i.n	a14, a1, 32
400d4922:	41c9      	s32i.n	a12, a1, 16
400d4924:	51f9      	s32i.n	a15, a1, 20
400d4926:	ffe765        	call8	400d479c <base_of_encoded_value>
400d4929:	51f8      	l32i.n	a15, a1, 20
400d492b:	41c8      	l32i.n	a12, a1, 16
400d492d:	0abd      	mov.n	a11, a10
400d492f:	01dd      	mov.n	a13, a1
400d4931:	0fad      	mov.n	a10, a15
400d4933:	ffd4e5        	call8	400d4680 <read_encoded_value_with_base>
400d4936:	01b8      	l32i.n	a11, a1, 0
400d4938:	6188      	l32i.n	a8, a1, 24
400d493a:	03b9      	s32i.n	a11, a3, 0
400d493c:	7198      	l32i.n	a9, a1, 28
400d493e:	81e8      	l32i.n	a14, a1, 32
400d4940:	000206        	j	400d494c <uw_frame_state_for+0x168>
400d4943:	9b9700        	movnez.s	f9, f7, a0
400d4946:	1b0c10        	un.s	b0, f12, f1
400d4949:	0b43b2        	s8i	a11, a3, 11
400d494c:	0004b2        	l8ui	a11, a4, 0
400d494f:	441b      	addi.n	a4, a4, 1
400d4951:	f9cb56        	bnez	a11, 400d48f1 <uw_frame_state_for+0x10d>
400d4954:	57cc      	bnez.n	a7, 400d495d <uw_frame_state_for+0x179>
400d4956:	0a7d      	mov.n	a7, a10
400d4958:	350c      	movi.n	a5, 3
400d495a:	080716        	beqz	a7, 400d49de <uw_frame_state_for+0x1fa>
400d495d:	080342        	l8ui	a4, a3, 8
400d4960:	ffa052        	movi	a5, 255
400d4963:	221457        	beq	a4, a5, 400d4989 <uw_frame_state_for+0x1a5>
400d4966:	244040        	extui	a4, a4, 0, 3
400d4969:	212426        	beqi	a4, 2, 400d498e <uw_frame_state_for+0x1aa>
400d496c:	0434f6        	bgeui	a4, 3, 400d4974 <uw_frame_state_for+0x190>
400d496f:	d48c      	beqz.n	a4, 400d4980 <uw_frame_state_for+0x19c>
400d4971:	000446        	j	400d4986 <uw_frame_state_for+0x1a2>
400d4974:	083426        	beqi	a4, 3, 400d4980 <uw_frame_state_for+0x19c>
400d4977:	851c      	movi.n	a5, 24
400d4979:	134426        	beqi	a4, 4, 400d4990 <uw_frame_state_for+0x1ac>
400d497c:	000186        	j	400d4986 <uw_frame_state_for+0x1a2>
400d497f:	051c00        	extui	a1, a0, 28, 1
400d4982:	000286        	j	400d4990 <uw_frame_state_for+0x1ac>
400d4985:	9e6500        	f64iter	a6, a5, a0, 1, 0
400d4988:	850cb6        	bltui	a12, 0x8000, 400d4911 <uw_frame_state_for+0x12d>
400d498b:	000046        	j	400d4990 <uw_frame_state_for+0x1ac>
400d498e:	c50c      	movi.n	a5, 12
400d4990:	0a0342        	l8ui	a4, a3, 10
400d4993:	5e5a      	add.n	a5, a14, a5
400d4995:	00c416        	beqz	a4, 400d49a5 <uw_frame_state_for+0x1c1>
400d4998:	551b      	addi.n	a5, a5, 1
400d499a:	450b      	addi.n	a4, a5, -1
400d499c:	000442        	l8ui	a4, a4, 0
400d499f:	234400        	sext	a4, a4, 7
400d49a2:	ff2496        	bltz	a4, 400d4998 <uw_frame_state_for+0x1b4>
400d49a5:	090342        	l8ui	a4, a3, 9
400d49a8:	ffa062        	movi	a6, 255
400d49ab:	151467        	beq	a4, a6, 400d49c4 <uw_frame_state_for+0x1e0>
400d49ae:	02bd      	mov.n	a11, a2
400d49b0:	04ad      	mov.n	a10, a4
400d49b2:	ffdea5        	call8	400d479c <base_of_encoded_value>
400d49b5:	0abd      	mov.n	a11, a10
400d49b7:	01dd      	mov.n	a13, a1
400d49b9:	04ad      	mov.n	a10, a4
400d49bb:	05cd      	mov.n	a12, a5
400d49bd:	ffcc25        	call8	400d4680 <read_encoded_value_with_base>
400d49c0:	0148      	l32i.n	a4, a1, 0
400d49c2:	8249      	s32i.n	a4, a2, 32
400d49c4:	0228      	l32i.n	a2, a2, 0
400d49c6:	e28c      	beqz.n	a2, 400d49d8 <uw_frame_state_for+0x1f4>
400d49c8:	0248      	l32i.n	a4, a2, 0
400d49ca:	550c      	movi.n	a5, 5
400d49cc:	e48c      	beqz.n	a4, 400d49de <uw_frame_state_for+0x1fa>
400d49ce:	154e40        	extui	a4, a4, 30, 2
400d49d1:	1144e0        	slli	a4, a4, 2
400d49d4:	000086        	j	400d49da <uw_frame_state_for+0x1f6>
400d49d7:	840c00        	extui	a0, a0, 12, 9
400d49da:	1349      	s32i.n	a4, a3, 4
400d49dc:	050c      	movi.n	a5, 0
400d49de:	052d      	mov.n	a2, a5
400d49e0:	f01d      	retw.n
	...

400d49e4 <uw_install_context_1>:
400d49e4:	004136        	entry	a1, 32
400d49e7:	628b      	addi.n	a6, a2, 8
400d49e9:	150c      	movi.n	a5, 1
400d49eb:	00a042        	movi	a4, 0
400d49ee:	0298      	l32i.n	a9, a2, 0
400d49f0:	0388      	l32i.n	a8, a3, 0
400d49f2:	04dd      	mov.n	a13, a4
400d49f4:	04ed      	mov.n	a14, a4
400d49f6:	93d590        	movnez	a13, a5, a9
400d49f9:	93e580        	movnez	a14, a5, a8
400d49fc:	224b      	addi.n	a2, a2, 4
400d49fe:	0c1c      	movi.n	a12, 16
400d4a00:	08bd      	mov.n	a11, a8
400d4a02:	09ad      	mov.n	a10, a9
400d4a04:	080ed7        	bnone	a14, a13, 400d4a10 <uw_install_context_1+0x2c>
400d4a07:	051987        	beq	a9, a8, 400d4a10 <uw_install_context_1+0x2c>
400d4a0a:	eda381        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4a0d:	0008e0        	callx8	a8
400d4a10:	334b      	addi.n	a3, a3, 4
400d4a12:	d89627        	bne	a6, a2, 400d49ee <uw_install_context_1+0xa>
400d4a15:	020c      	movi.n	a2, 0
400d4a17:	f01d      	retw.n
400d4a19:	000000        	ill

400d4a1c <uw_update_context>:
400d4a1c:	004136        	entry	a1, 32
400d4a1f:	03bd      	mov.n	a11, a3
400d4a21:	02ad      	mov.n	a10, a2
400d4a23:	ffb6a5        	call8	400d458c <uw_update_context_1>
400d4a26:	5388      	l32i.n	a8, a3, 20
400d4a28:	288c      	beqz.n	a8, 400d4a2e <uw_update_context+0x12>
400d4a2a:	6289      	s32i.n	a8, a2, 24
400d4a2c:	f01d      	retw.n
400d4a2e:	1388      	l32i.n	a8, a3, 4
400d4a30:	213280        	srai	a3, a8, 2
400d4a33:	a03320        	addx4	a3, a3, a2
400d4a36:	0338      	l32i.n	a3, a3, 0
400d4a38:	148080        	extui	a8, a8, 0, 2
400d4a3b:	a08830        	addx4	a8, a8, a3
400d4a3e:	0898      	l32i.n	a9, a8, 0
400d4a40:	ed8b31        	l32r	a3, 400d006c <_flash_cache_start+0x54>
400d4a43:	7288      	l32i.n	a8, a2, 28
400d4a45:	103930        	and	a3, a9, a3
400d4a48:	203380        	or	a3, a3, a8
400d4a4b:	6239      	s32i.n	a3, a2, 24
400d4a4d:	f01d      	retw.n
	...

400d4a50 <_Unwind_RaiseException_Phase2>:
400d4a50:	008136        	entry	a1, 64
400d4a53:	460c      	movi.n	a6, 4
400d4a55:	050c      	movi.n	a5, 0
400d4a57:	270c      	movi.n	a7, 2
400d4a59:	01bd      	mov.n	a11, a1
400d4a5b:	03ad      	mov.n	a10, a3
400d4a5d:	ffd865        	call8	400d47e4 <uw_frame_state_for>
400d4a60:	4288      	l32i.n	a8, a2, 16
400d4a62:	5348      	l32i.n	a4, a3, 20
400d4a64:	c04480        	sub	a4, a4, a8
400d4a67:	058d      	mov.n	a8, a5
400d4a69:	838640        	moveqz	a8, a6, a4
400d4a6c:	084d      	mov.n	a4, a8
400d4a6e:	eaec      	bnez.n	a10, 400d4aa0 <_Unwind_RaiseException_Phase2+0x50>
400d4a70:	0188      	l32i.n	a8, a1, 0
400d4a72:	38cc      	bnez.n	a8, 400d4a79 <_Unwind_RaiseException_Phase2+0x29>
400d4a74:	e49c      	beqz.n	a4, 400d4a96 <_Unwind_RaiseException_Phase2+0x46>
400d4a76:	000646        	j	400d4a93 <_Unwind_RaiseException_Phase2+0x43>
400d4a79:	02c8      	l32i.n	a12, a2, 0
400d4a7b:	12d8      	l32i.n	a13, a2, 4
400d4a7d:	03fd      	mov.n	a15, a3
400d4a7f:	02ed      	mov.n	a14, a2
400d4a81:	20b470        	or	a11, a4, a7
400d4a84:	1a0c      	movi.n	a10, 1
400d4a86:	0008e0        	callx8	a8
400d4a89:	177a26        	beqi	a10, 7, 400d4aa4 <_Unwind_RaiseException_Phase2+0x54>
400d4a8c:	e48a26        	beqi	a10, 8, 400d4a74 <_Unwind_RaiseException_Phase2+0x24>
400d4a8f:	000346        	j	400d4aa0 <_Unwind_RaiseException_Phase2+0x50>
400d4a92:	8da500        	lsi	f0, a5, 0x234
400d4a95:	01bdb6        	bltui	a13, 16, 400d4a9a <_Unwind_RaiseException_Phase2+0x4a>
400d4a98:	03ad      	mov.n	a10, a3
400d4a9a:	fff825        	call8	400d4a1c <uw_update_context>
400d4a9d:	ffee06        	j	400d4a59 <_Unwind_RaiseException_Phase2+0x9>
400d4aa0:	220c      	movi.n	a2, 2
400d4aa2:	f01d      	retw.n
400d4aa4:	0a2d      	mov.n	a2, a10
400d4aa6:	f01d      	retw.n

400d4aa8 <_Unwind_ForcedUnwind_Phase2>:
400d4aa8:	00a136        	entry	a1, 80
400d4aab:	3258      	l32i.n	a5, a2, 12
400d4aad:	4268      	l32i.n	a6, a2, 16
400d4aaf:	10c1b2        	addi	a11, a1, 16
400d4ab2:	20a330        	or	a10, a3, a3
400d4ab5:	ffd2e5        	call8	400d47e4 <uw_frame_state_for>
400d4ab8:	0a4d      	mov.n	a4, a10
400d4aba:	03fd      	mov.n	a15, a3
400d4abc:	02ed      	mov.n	a14, a2
400d4abe:	ab0c      	movi.n	a11, 10
400d4ac0:	1a0c      	movi.n	a10, 1
400d4ac2:	002416        	beqz	a4, 400d4ac8 <_Unwind_ForcedUnwind_Phase2+0x20>
400d4ac5:	275466        	bnei	a4, 5, 400d4af0 <_Unwind_ForcedUnwind_Phase2+0x48>
400d4ac8:	2c5466        	bnei	a4, 5, 400d4af8 <_Unwind_ForcedUnwind_Phase2+0x50>
400d4acb:	000f86        	j	400d4b0d <_Unwind_ForcedUnwind_Phase2+0x65>
400d4ace:	4148      	l32i.n	a4, a1, 16
400d4ad0:	1a0c      	movi.n	a10, 1
400d4ad2:	b4cc      	bnez.n	a4, 400d4ae1 <_Unwind_ForcedUnwind_Phase2+0x39>
400d4ad4:	10c1b2        	addi	a11, a1, 16
400d4ad7:	03ad      	mov.n	a10, a3
400d4ad9:	fff425        	call8	400d4a1c <uw_update_context>
400d4adc:	fff3c6        	j	400d4aaf <_Unwind_ForcedUnwind_Phase2+0x7>
400d4adf:	c80000        	lsi	f0, a0, 0x320
400d4ae2:	12d802        	addmi	a0, a8, 0x1200
400d4ae5:	0004e0        	callx8	a4
400d4ae8:	0a4d      	mov.n	a4, a10
400d4aea:	067a26        	beqi	a10, 7, 400d4af4 <_Unwind_ForcedUnwind_Phase2+0x4c>
400d4aed:	e38a26        	beqi	a10, 8, 400d4ad4 <_Unwind_ForcedUnwind_Phase2+0x2c>
400d4af0:	220c      	movi.n	a2, 2
400d4af2:	f01d      	retw.n
400d4af4:	042d      	mov.n	a2, a4
400d4af6:	f01d      	retw.n
400d4af8:	02c8      	l32i.n	a12, a2, 0
400d4afa:	12d8      	l32i.n	a13, a2, 4
400d4afc:	0169      	s32i.n	a6, a1, 0
400d4afe:	0005e0        	callx8	a5
400d4b01:	03fd      	mov.n	a15, a3
400d4b03:	02ed      	mov.n	a14, a2
400d4b05:	ab0c      	movi.n	a11, 10
400d4b07:	fc3a16        	beqz	a10, 400d4ace <_Unwind_ForcedUnwind_Phase2+0x26>
400d4b0a:	fff886        	j	400d4af0 <_Unwind_ForcedUnwind_Phase2+0x48>
400d4b0d:	02c8      	l32i.n	a12, a2, 0
400d4b0f:	12d8      	l32i.n	a13, a2, 4
400d4b11:	03fd      	mov.n	a15, a3
400d4b13:	0169      	s32i.n	a6, a1, 0
400d4b15:	02ed      	mov.n	a14, a2
400d4b17:	1aa0b2        	movi	a11, 26
400d4b1a:	01a0a2        	movi	a10, 1
400d4b1d:	0005e0        	callx8	a5
400d4b20:	fcca56        	bnez	a10, 400d4af0 <_Unwind_ForcedUnwind_Phase2+0x48>
400d4b23:	fff346        	j	400d4af4 <_Unwind_ForcedUnwind_Phase2+0x4c>
	...

400d4b28 <_Unwind_GetGR>:
400d4b28:	004136        	entry	a1, 32
400d4b2b:	218230        	srai	a8, a3, 2
400d4b2e:	a02820        	addx4	a2, a8, a2
400d4b31:	0228      	l32i.n	a2, a2, 0
400d4b33:	143030        	extui	a3, a3, 0, 2
400d4b36:	a03320        	addx4	a3, a3, a2
400d4b39:	0328      	l32i.n	a2, a3, 0
400d4b3b:	f01d      	retw.n
400d4b3d:	000000        	ill

400d4b40 <_Unwind_GetCFA>:
400d4b40:	004136        	entry	a1, 32
400d4b43:	5228      	l32i.n	a2, a2, 20
400d4b45:	f01d      	retw.n
	...

400d4b48 <_Unwind_SetGR>:
400d4b48:	004136        	entry	a1, 32
400d4b4b:	218230        	srai	a8, a3, 2
400d4b4e:	a02820        	addx4	a2, a8, a2
400d4b51:	0228      	l32i.n	a2, a2, 0
400d4b53:	143030        	extui	a3, a3, 0, 2
400d4b56:	a03320        	addx4	a3, a3, a2
400d4b59:	0349      	s32i.n	a4, a3, 0
400d4b5b:	f01d      	retw.n
400d4b5d:	000000        	ill

400d4b60 <_Unwind_GetIP>:
400d4b60:	004136        	entry	a1, 32
400d4b63:	6228      	l32i.n	a2, a2, 24
400d4b65:	f01d      	retw.n
	...

400d4b68 <_Unwind_GetIPInfo>:
400d4b68:	004136        	entry	a1, 32
400d4b6b:	c288      	l32i.n	a8, a2, 48
400d4b6d:	6228      	l32i.n	a2, a2, 24
400d4b6f:	058f80        	extui	a8, a8, 31, 1
400d4b72:	0389      	s32i.n	a8, a3, 0
400d4b74:	f01d      	retw.n
	...

400d4b78 <_Unwind_SetIP>:
400d4b78:	004136        	entry	a1, 32
400d4b7b:	6239      	s32i.n	a3, a2, 24
400d4b7d:	f01d      	retw.n
	...

400d4b80 <_Unwind_GetLanguageSpecificData>:
400d4b80:	004136        	entry	a1, 32
400d4b83:	8228      	l32i.n	a2, a2, 32
400d4b85:	f01d      	retw.n
	...

400d4b88 <_Unwind_GetRegionStart>:
400d4b88:	004136        	entry	a1, 32
400d4b8b:	b228      	l32i.n	a2, a2, 44
400d4b8d:	f01d      	retw.n
	...

400d4b90 <_Unwind_FindEnclosingFunction>:
400d4b90:	006136        	entry	a1, 48
400d4b93:	ffc2a2        	addi	a10, a2, -1
400d4b96:	20b110        	or	a11, a1, a1
400d4b99:	00e3e5        	call8	400d59d8 <_Unwind_Find_FDE>
400d4b9c:	022182        	l32i	a8, a1, 8
400d4b9f:	020c      	movi.n	a2, 0
400d4ba1:	9328a0        	movnez	a2, a8, a10
400d4ba4:	f01d      	retw.n
	...

400d4ba8 <_Unwind_GetDataRelBase>:
400d4ba8:	004136        	entry	a1, 32
400d4bab:	a228      	l32i.n	a2, a2, 40
400d4bad:	f01d      	retw.n
	...

400d4bb0 <_Unwind_GetTextRelBase>:
400d4bb0:	004136        	entry	a1, 32
400d4bb3:	9228      	l32i.n	a2, a2, 36
400d4bb5:	f01d      	retw.n
	...

400d4bb8 <_Unwind_RaiseException>:
400d4bb8:	016136        	entry	a1, 176
400d4bbb:	017d      	mov.n	a7, a1
400d4bbd:	b84e65        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4bc0:	ed3f31        	l32r	a3, 400d00bc <_flash_cache_start+0xa4>
400d4bc3:	11c0e0        	slli	a12, a0, 2
400d4bc6:	153e30        	extui	a3, a3, 30, 2
400d4bc9:	013320        	slli	a3, a3, 30
400d4bcc:	41c2c0        	srli	a12, a12, 2
400d4bcf:	b0a0b2        	movi	a11, 176
400d4bd2:	38c7a2        	addi	a10, a7, 56
400d4bd5:	20cc30        	or	a12, a12, a3
400d4bd8:	bb7a      	add.n	a11, a11, a7
400d4bda:	ffa565        	call8	400d4630 <uw_init_context_1>
400d4bdd:	8c3c      	movi.n	a12, 56
400d4bdf:	b7ca      	add.n	a11, a7, a12
400d4be1:	07ad      	mov.n	a10, a7
400d4be3:	ed2d81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4be6:	0008e0        	callx8	a8
400d4be9:	70c7b2        	addi	a11, a7, 112
400d4bec:	07ad      	mov.n	a10, a7
400d4bee:	ffbf65        	call8	400d47e4 <uw_frame_state_for>
400d4bf1:	0a3d      	mov.n	a3, a10
400d4bf3:	1b0c      	movi.n	a11, 1
400d4bf5:	07fd      	mov.n	a15, a7
400d4bf7:	02ed      	mov.n	a14, a2
400d4bf9:	0bad      	mov.n	a10, a11
400d4bfb:	265326        	beqi	a3, 5, 400d4c25 <_Unwind_RaiseException+0x6d>
400d4bfe:	338c      	beqz.n	a3, 400d4c05 <_Unwind_RaiseException+0x4d>
400d4c00:	320c      	movi.n	a2, 3
400d4c02:	001686        	j	400d4c60 <_Unwind_RaiseException+0xa8>
400d4c05:	1c2782        	l32i	a8, a7, 112
400d4c08:	98cc      	bnez.n	a8, 400d4c15 <_Unwind_RaiseException+0x5d>
400d4c0a:	70c7b2        	addi	a11, a7, 112
400d4c0d:	07ad      	mov.n	a10, a7
400d4c0f:	ffe0e5        	call8	400d4a1c <uw_update_context>
400d4c12:	fff4c6        	j	400d4be9 <_Unwind_RaiseException+0x31>
400d4c15:	02c8      	l32i.n	a12, a2, 0
400d4c17:	12d8      	l32i.n	a13, a2, 4
400d4c19:	0008e0        	callx8	a8
400d4c1c:	0a6a26        	beqi	a10, 6, 400d4c2a <_Unwind_RaiseException+0x72>
400d4c1f:	e78a26        	beqi	a10, 8, 400d4c0a <_Unwind_RaiseException+0x52>
400d4c22:	fff686        	j	400d4c00 <_Unwind_RaiseException+0x48>
400d4c25:	032d      	mov.n	a2, a3
400d4c27:	000d46        	j	400d4c60 <_Unwind_RaiseException+0xa8>
400d4c2a:	3239      	s32i.n	a3, a2, 12
400d4c2c:	5738      	l32i.n	a3, a7, 20
400d4c2e:	8c3c      	movi.n	a12, 56
400d4c30:	b7ca      	add.n	a11, a7, a12
400d4c32:	4239      	s32i.n	a3, a2, 16
400d4c34:	20a770        	or	a10, a7, a7
400d4c37:	ed1881        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4c3a:	0008e0        	callx8	a8
400d4c3d:	02ad      	mov.n	a10, a2
400d4c3f:	07bd      	mov.n	a11, a7
400d4c41:	ffe0e5        	call8	400d4a50 <_Unwind_RaiseException_Phase2>
400d4c44:	0a2d      	mov.n	a2, a10
400d4c46:	167a66        	bnei	a10, 7, 400d4c60 <_Unwind_RaiseException+0xa8>
400d4c49:	07bd      	mov.n	a11, a7
400d4c4b:	38c7a2        	addi	a10, a7, 56
400d4c4e:	ffd965        	call8	400d49e4 <uw_install_context_1>
400d4c51:	6738      	l32i.n	a3, a7, 24
400d4c53:	1143e0        	slli	a4, a3, 2
400d4c56:	442b      	addi.n	a4, a4, 2
400d4c58:	404200        	ssai	2
400d4c5b:	810440        	src	a0, a4, a4
400d4c5e:	f01d      	retw.n
400d4c60:	f01d      	retw.n
	...

400d4c64 <_Unwind_ForcedUnwind>:
400d4c64:	012136        	entry	a1, 144
400d4c67:	017d      	mov.n	a7, a1
400d4c69:	b843a5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4c6c:	ed1581        	l32r	a8, 400d00c0 <_flash_cache_start+0xa8>
400d4c6f:	11c0e0        	slli	a12, a0, 2
400d4c72:	158e80        	extui	a8, a8, 30, 2
400d4c75:	018820        	slli	a8, a8, 30
400d4c78:	41c2c0        	srli	a12, a12, 2
400d4c7b:	90a0b2        	movi	a11, 144
400d4c7e:	20cc80        	or	a12, a12, a8
400d4c81:	38c7a2        	addi	a10, a7, 56
400d4c84:	bb7a      	add.n	a11, a11, a7
400d4c86:	ff9aa5        	call8	400d4630 <uw_init_context_1>
400d4c89:	38c7b2        	addi	a11, a7, 56
400d4c8c:	8c3c      	movi.n	a12, 56
400d4c8e:	07ad      	mov.n	a10, a7
400d4c90:	ed0281        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4c93:	0008e0        	callx8	a8
400d4c96:	07bd      	mov.n	a11, a7
400d4c98:	3239      	s32i.n	a3, a2, 12
400d4c9a:	4249      	s32i.n	a4, a2, 16
400d4c9c:	02ad      	mov.n	a10, a2
400d4c9e:	ffe0a5        	call8	400d4aa8 <_Unwind_ForcedUnwind_Phase2>
400d4ca1:	037a26        	beqi	a10, 7, 400d4ca8 <_Unwind_ForcedUnwind+0x44>
400d4ca4:	0a2d      	mov.n	a2, a10
400d4ca6:	f01d      	retw.n
400d4ca8:	07bd      	mov.n	a11, a7
400d4caa:	38c7a2        	addi	a10, a7, 56
400d4cad:	ffd365        	call8	400d49e4 <uw_install_context_1>
400d4cb0:	6738      	l32i.n	a3, a7, 24
400d4cb2:	1143e0        	slli	a4, a3, 2
400d4cb5:	442b      	addi.n	a4, a4, 2
400d4cb7:	404200        	ssai	2
400d4cba:	810440        	src	a0, a4, a4
400d4cbd:	f01d      	retw.n
	...

400d4cc0 <_Unwind_Resume>:
400d4cc0:	012136        	entry	a1, 144
400d4cc3:	017d      	mov.n	a7, a1
400d4cc5:	b83de5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4cc8:	ecff81        	l32r	a8, 400d00c4 <_flash_cache_start+0xac>
400d4ccb:	11c0e0        	slli	a12, a0, 2
400d4cce:	158e80        	extui	a8, a8, 30, 2
400d4cd1:	018820        	slli	a8, a8, 30
400d4cd4:	41c2c0        	srli	a12, a12, 2
400d4cd7:	90a0b2        	movi	a11, 144
400d4cda:	20cc80        	or	a12, a12, a8
400d4cdd:	38c7a2        	addi	a10, a7, 56
400d4ce0:	bb7a      	add.n	a11, a11, a7
400d4ce2:	ff94e5        	call8	400d4630 <uw_init_context_1>
400d4ce5:	8c3c      	movi.n	a12, 56
400d4ce7:	b7ca      	add.n	a11, a7, a12
400d4ce9:	07ad      	mov.n	a10, a7
400d4ceb:	eceb81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4cee:	0008e0        	callx8	a8
400d4cf1:	3288      	l32i.n	a8, a2, 12
400d4cf3:	07bd      	mov.n	a11, a7
400d4cf5:	02ad      	mov.n	a10, a2
400d4cf7:	68cc      	bnez.n	a8, 400d4d01 <_Unwind_Resume+0x41>
400d4cf9:	ffd565        	call8	400d4a50 <_Unwind_RaiseException_Phase2>
400d4cfc:	000106        	j	400d4d04 <_Unwind_Resume+0x44>
400d4cff:	650000        	extui	a0, a0, 16, 7
400d4d02:	ffda      	add.n	a15, a15, a13
400d4d04:	027a26        	beqi	a10, 7, 400d4d0a <_Unwind_Resume+0x4a>
400d4d07:	b66665        	call8	4008b36c <abort>
400d4d0a:	20b770        	or	a11, a7, a7
400d4d0d:	38c7a2        	addi	a10, a7, 56
400d4d10:	ffcd25        	call8	400d49e4 <uw_install_context_1>
400d4d13:	062722        	l32i	a2, a7, 24
400d4d16:	1132e0        	slli	a3, a2, 2
400d4d19:	02c332        	addi	a3, a3, 2
400d4d1c:	404200        	ssai	2
400d4d1f:	810330        	src	a0, a3, a3
400d4d22:	f01d      	retw.n

400d4d24 <_Unwind_Resume_or_Rethrow>:
400d4d24:	012136        	entry	a1, 144
400d4d27:	3238      	l32i.n	a3, a2, 12
400d4d29:	017d      	mov.n	a7, a1
400d4d2b:	a3cc      	bnez.n	a3, 400d4d39 <_Unwind_Resume_or_Rethrow+0x15>
400d4d2d:	02ad      	mov.n	a10, a2
400d4d2f:	ffe8a5        	call8	400d4bb8 <_Unwind_RaiseException>
400d4d32:	0a2d      	mov.n	a2, a10
400d4d34:	f01d      	retw.n
400d4d36:	000000        	ill
400d4d39:	b836a5        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4d3c:	ece381        	l32r	a8, 400d00c8 <_flash_cache_start+0xb0>
400d4d3f:	11c0e0        	slli	a12, a0, 2
400d4d42:	158e80        	extui	a8, a8, 30, 2
400d4d45:	018820        	slli	a8, a8, 30
400d4d48:	41c2c0        	srli	a12, a12, 2
400d4d4b:	90a0b2        	movi	a11, 144
400d4d4e:	20cc80        	or	a12, a12, a8
400d4d51:	38c7a2        	addi	a10, a7, 56
400d4d54:	80bb70        	add	a11, a11, a7
400d4d57:	ff8da5        	call8	400d4630 <uw_init_context_1>
400d4d5a:	38a0c2        	movi	a12, 56
400d4d5d:	80b7c0        	add	a11, a7, a12
400d4d60:	07ad      	mov.n	a10, a7
400d4d62:	eccd81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d4d65:	0008e0        	callx8	a8
400d4d68:	07bd      	mov.n	a11, a7
400d4d6a:	02ad      	mov.n	a10, a2
400d4d6c:	ffd3a5        	call8	400d4aa8 <_Unwind_ForcedUnwind_Phase2>
400d4d6f:	027a26        	beqi	a10, 7, 400d4d75 <_Unwind_Resume_or_Rethrow+0x51>
400d4d72:	b65fa5        	call8	4008b36c <abort>
400d4d75:	07bd      	mov.n	a11, a7
400d4d77:	38c7a2        	addi	a10, a7, 56
400d4d7a:	ffc6a5        	call8	400d49e4 <uw_install_context_1>
400d4d7d:	6738      	l32i.n	a3, a7, 24
400d4d7f:	1143e0        	slli	a4, a3, 2
400d4d82:	442b      	addi.n	a4, a4, 2
400d4d84:	404200        	ssai	2
400d4d87:	810440        	src	a0, a4, a4
400d4d8a:	f01d      	retw.n

400d4d8c <_Unwind_DeleteException>:
400d4d8c:	004136        	entry	a1, 32
400d4d8f:	2288      	l32i.n	a8, a2, 8
400d4d91:	588c      	beqz.n	a8, 400d4d9a <_Unwind_DeleteException+0xe>
400d4d93:	02bd      	mov.n	a11, a2
400d4d95:	1a0c      	movi.n	a10, 1
400d4d97:	0008e0        	callx8	a8
400d4d9a:	f01d      	retw.n

400d4d9c <_Unwind_Backtrace>:
400d4d9c:	00e136        	entry	a1, 112
400d4d9f:	017d      	mov.n	a7, a1
400d4da1:	b83025        	call8	4008d0a4 <__xtensa_libgcc_window_spill>
400d4da4:	ecca41        	l32r	a4, 400d00cc <_flash_cache_start+0xb4>
400d4da7:	11c0e0        	slli	a12, a0, 2
400d4daa:	154e40        	extui	a4, a4, 30, 2
400d4dad:	014420        	slli	a4, a4, 30
400d4db0:	41c2c0        	srli	a12, a12, 2
400d4db3:	20cc40        	or	a12, a12, a4
400d4db6:	70c7b2        	addi	a11, a7, 112
400d4db9:	07ad      	mov.n	a10, a7
400d4dbb:	ff8765        	call8	400d4630 <uw_init_context_1>
400d4dbe:	38c7b2        	addi	a11, a7, 56
400d4dc1:	07ad      	mov.n	a10, a7
400d4dc3:	ffa225        	call8	400d47e4 <uw_frame_state_for>
400d4dc6:	0a4d      	mov.n	a4, a10
400d4dc8:	03bd      	mov.n	a11, a3
400d4dca:	07ad      	mov.n	a10, a7
400d4dcc:	148c      	beqz.n	a4, 400d4dd1 <_Unwind_Backtrace+0x35>
400d4dce:	125466        	bnei	a4, 5, 400d4de4 <_Unwind_Backtrace+0x48>
400d4dd1:	0002e0        	callx8	a2
400d4dd4:	38c7b2        	addi	a11, a7, 56
400d4dd7:	9acc      	bnez.n	a10, 400d4de4 <_Unwind_Backtrace+0x48>
400d4dd9:	07ad      	mov.n	a10, a7
400d4ddb:	095426        	beqi	a4, 5, 400d4de8 <_Unwind_Backtrace+0x4c>
400d4dde:	ffc3e5        	call8	400d4a1c <uw_update_context>
400d4de1:	fff646        	j	400d4dbe <_Unwind_Backtrace+0x22>
400d4de4:	320c      	movi.n	a2, 3
400d4de6:	f01d      	retw.n
400d4de8:	042d      	mov.n	a2, a4
400d4dea:	f01d      	retw.n

400d4dec <frame_downheap>:
400d4dec:	006136        	entry	a1, 48
400d4def:	1175f0        	slli	a7, a5, 1
400d4df2:	771b      	addi.n	a7, a7, 1
400d4df4:	0129      	s32i.n	a2, a1, 0
400d4df6:	1139      	s32i.n	a3, a1, 4
400d4df8:	042767        	blt	a7, a6, 400d4e00 <frame_downheap+0x14>
400d4dfb:	f01d      	retw.n
400d4dfd:	035d00        	lsi	f0, a13, 12
400d4e00:	371b      	addi.n	a3, a7, 1
400d4e02:	072367        	blt	a3, a6, 400d4e0d <frame_downheap+0x21>
400d4e05:	a02740        	addx4	a2, a7, a4
400d4e08:	073d      	mov.n	a3, a7
400d4e0a:	000786        	j	400d4e2c <frame_downheap+0x40>
400d4e0d:	1187e0        	slli	a8, a7, 2
400d4e10:	d84b      	addi.n	a13, a8, 4
400d4e12:	d4da      	add.n	a13, a4, a13
400d4e14:	248a      	add.n	a2, a4, a8
400d4e16:	02b8      	l32i.n	a11, a2, 0
400d4e18:	0dc8      	l32i.n	a12, a13, 0
400d4e1a:	01a8      	l32i.n	a10, a1, 0
400d4e1c:	1188      	l32i.n	a8, a1, 4
400d4e1e:	0261d2        	s32i	a13, a1, 8
400d4e21:	0008e0        	callx8	a8
400d4e24:	21d8      	l32i.n	a13, a1, 8
400d4e26:	b337a0        	movgez	a3, a7, a10
400d4e29:	a32da0        	movltz	a2, a13, a10
400d4e2c:	a05540        	addx4	a5, a5, a4
400d4e2f:	02c8      	l32i.n	a12, a2, 0
400d4e31:	05b8      	l32i.n	a11, a5, 0
400d4e33:	01a8      	l32i.n	a10, a1, 0
400d4e35:	1188      	l32i.n	a8, a1, 4
400d4e37:	1173f0        	slli	a7, a3, 1
400d4e3a:	0008e0        	callx8	a8
400d4e3d:	771b      	addi.n	a7, a7, 1
400d4e3f:	00aad6        	bgez	a10, 400d4e4d <frame_downheap+0x61>
400d4e42:	02b8      	l32i.n	a11, a2, 0
400d4e44:	05a8      	l32i.n	a10, a5, 0
400d4e46:	05b9      	s32i.n	a11, a5, 0
400d4e48:	02a9      	s32i.n	a10, a2, 0
400d4e4a:	b02767        	blt	a7, a6, 400d4dfe <frame_downheap+0x12>
400d4e4d:	f01d      	retw.n
	...

400d4e50 <frame_heapsort>:
400d4e50:	004136        	entry	a1, 32
400d4e53:	1458      	l32i.n	a5, a4, 4
400d4e55:	648b      	addi.n	a6, a4, 8
400d4e57:	417150        	srli	a7, a5, 1
400d4e5a:	770b      	addi.n	a7, a7, -1
400d4e5c:	0e0766        	bnei	a7, -1, 400d4e6e <frame_heapsort+0x1e>
400d4e5f:	ec8381        	l32r	a8, 400d006c <_flash_cache_start+0x54>
400d4e62:	750b      	addi.n	a7, a5, -1
400d4e64:	558a      	add.n	a5, a5, a8
400d4e66:	a05560        	addx4	a5, a5, a6
400d4e69:	1817e6        	bgei	a7, 1, 400d4e85 <frame_heapsort+0x35>
400d4e6c:	f01d      	retw.n
400d4e6e:	07dd      	mov.n	a13, a7
400d4e70:	05ed      	mov.n	a14, a5
400d4e72:	770b      	addi.n	a7, a7, -1
400d4e74:	06cd      	mov.n	a12, a6
400d4e76:	03bd      	mov.n	a11, a3
400d4e78:	02ad      	mov.n	a10, a2
400d4e7a:	fff725        	call8	400d4dec <frame_downheap>
400d4e7d:	ed0766        	bnei	a7, -1, 400d4e6e <frame_heapsort+0x1e>
400d4e80:	fff6c6        	j	400d4e5f <frame_heapsort+0xf>
400d4e83:	980000        	lsi	f0, a0, 0x260
400d4e86:	248805        	call0	400f9708 <_etext+0xce2b>
400d4e89:	2499      	s32i.n	a9, a4, 8
400d4e8b:	0589      	s32i.n	a8, a5, 0
400d4e8d:	07ed      	mov.n	a14, a7
400d4e8f:	0d0c      	movi.n	a13, 0
400d4e91:	06cd      	mov.n	a12, a6
400d4e93:	03bd      	mov.n	a11, a3
400d4e95:	02ad      	mov.n	a10, a2
400d4e97:	770b      	addi.n	a7, a7, -1
400d4e99:	fff525        	call8	400d4dec <frame_downheap>
400d4e9c:	fcc552        	addi	a5, a5, -4
400d4e9f:	fe2756        	bnez	a7, 400d4e85 <frame_heapsort+0x35>
400d4ea2:	f01d      	retw.n

400d4ea4 <size_of_encoded_value>:
400d4ea4:	004136        	entry	a1, 32
400d4ea7:	ffa082        	movi	a8, 255
400d4eaa:	241287        	beq	a2, a8, 400d4ed2 <size_of_encoded_value+0x2e>
400d4ead:	248020        	extui	a8, a2, 0, 3
400d4eb0:	142826        	beqi	a8, 2, 400d4ec8 <size_of_encoded_value+0x24>
400d4eb3:	0538f6        	bgeui	a8, 3, 400d4ebc <size_of_encoded_value+0x18>
400d4eb6:	c89c      	beqz.n	a8, 400d4ed6 <size_of_encoded_value+0x32>
400d4eb8:	000406        	j	400d4ecc <size_of_encoded_value+0x28>
400d4ebb:	382600        	lsi	f0, a6, 224
400d4ebe:	820c16        	beqz	a12, 400d46e2 <read_encoded_value_with_base+0x62>
400d4ec1:	134826        	beqi	a8, 4, 400d4ed8 <size_of_encoded_value+0x34>
400d4ec4:	000106        	j	400d4ecc <size_of_encoded_value+0x28>
400d4ec7:	082d00        	lsx	f2, a13, a0
400d4eca:	f01d      	retw.n
400d4ecc:	201110        	or	a1, a1, a1
400d4ecf:	b649e5        	call8	4008b36c <abort>
400d4ed2:	020c      	movi.n	a2, 0
400d4ed4:	f01d      	retw.n
400d4ed6:	420c      	movi.n	a2, 4
400d4ed8:	f01d      	retw.n
	...

400d4edc <base_from_object>:
400d4edc:	004136        	entry	a1, 32
400d4edf:	ffa082        	movi	a8, 255
400d4ee2:	2e1287        	beq	a2, a8, 400d4f14 <base_from_object+0x38>
400d4ee5:	70a082        	movi	a8, 112
400d4ee8:	102280        	and	a2, a2, a8
400d4eeb:	1ac226        	beqi	a2, 32, 400d4f09 <base_from_object+0x2d>
400d4eee:	082c      	movi.n	a8, 32
400d4ef0:	083827        	bltu	a8, a2, 400d4efc <base_from_object+0x20>
400d4ef3:	d29c      	beqz.n	a2, 400d4f14 <base_from_object+0x38>
400d4ef5:	18b266        	bnei	a2, 16, 400d4f11 <base_from_object+0x35>
400d4ef8:	000606        	j	400d4f14 <base_from_object+0x38>
400d4efb:	083c00        	lsx	f3, a12, a0
400d4efe:	0b1287        	beq	a2, a8, 400d4f0d <base_from_object+0x31>
400d4f01:	035c      	movi.n	a3, 80
400d4f03:	0a9237        	bne	a2, a3, 400d4f11 <base_from_object+0x35>
400d4f06:	000286        	j	400d4f14 <base_from_object+0x38>
400d4f09:	1328      	l32i.n	a2, a3, 4
400d4f0b:	f01d      	retw.n
400d4f0d:	2328      	l32i.n	a2, a3, 8
400d4f0f:	f01d      	retw.n
400d4f11:	b645a5        	call8	4008b36c <abort>
400d4f14:	020c      	movi.n	a2, 0
400d4f16:	f01d      	retw.n

400d4f18 <read_encoded_value_with_base>:
400d4f18:	004136        	entry	a1, 32
400d4f1b:	085c      	movi.n	a8, 80
400d4f1d:	0f9287        	bne	a2, a8, 400d4f30 <read_encoded_value_with_base+0x18>
400d4f20:	943b      	addi.n	a9, a4, 3
400d4f22:	c27c      	movi.n	a2, -4
400d4f24:	109920        	and	a9, a9, a2
400d4f27:	0988      	l32i.n	a8, a9, 0
400d4f29:	994b      	addi.n	a9, a9, 4
400d4f2b:	003fc6        	j	400d502e <read_encoded_value_with_base+0x116>
400d4f2e:	200000        	or	a0, a0, a0
400d4f31:	0c3480        	lsi	f8, a4, 48
400d4f34:	87c9      	s32i.n	a12, a7, 32
400d4f36:	02b9      	s32i.n	a11, a2, 0
400d4f38:	003506        	j	400d5010 <read_encoded_value_with_base+0xf8>
400d4f3b:	ec6591        	l32r	a9, 400d00d0 <_flash_cache_start+0xb8>
400d4f3e:	a08890        	addx4	a8, a8, a9
400d4f41:	0888      	l32i.n	a8, a8, 0
400d4f43:	0008a0        	jx	a8
400d4f46:	080c      	movi.n	a8, 0
400d4f48:	049d      	mov.n	a9, a4
400d4f4a:	08cd      	mov.n	a12, a8
400d4f4c:	991b      	addi.n	a9, a9, 1
400d4f4e:	a90b      	addi.n	a10, a9, -1
400d4f50:	000aa2        	l8ui	a10, a10, 0
400d4f53:	64b0a0        	extui	a11, a10, 0, 7
400d4f56:	401c00        	ssl	a12
400d4f59:	a1bb00        	sll	a11, a11
400d4f5c:	23aa00        	sext	a10, a10, 7
400d4f5f:	2088b0        	or	a8, a8, a11
400d4f62:	cc7b      	addi.n	a12, a12, 7
400d4f64:	fe4a96        	bltz	a10, 400d4f4c <read_encoded_value_with_base+0x34>
400d4f67:	002ac6        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d4f6a:	080c      	movi.n	a8, 0
400d4f6c:	049d      	mov.n	a9, a4
400d4f6e:	08bd      	mov.n	a11, a8
400d4f70:	991b      	addi.n	a9, a9, 1
400d4f72:	a90b      	addi.n	a10, a9, -1
400d4f74:	000ac2        	l8ui	a12, a10, 0
400d4f77:	64a0c0        	extui	a10, a12, 0, 7
400d4f7a:	401b00        	ssl	a11
400d4f7d:	a1aa00        	sll	a10, a10
400d4f80:	23dc00        	sext	a13, a12, 7
400d4f83:	2088a0        	or	a8, a8, a10
400d4f86:	bb7b      	addi.n	a11, a11, 7
400d4f88:	fe4d96        	bltz	a13, 400d4f70 <read_encoded_value_with_base+0x58>
400d4f8b:	fa1c      	movi.n	a10, 31
400d4f8d:	02bab7        	bgeu	a10, a11, 400d4f93 <read_encoded_value_with_base+0x7b>
400d4f90:	002086        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d4f93:	7f6c67        	bbci	a12, 6, 400d5016 <read_encoded_value_with_base+0xfe>
400d4f96:	fa7c      	movi.n	a10, -1
400d4f98:	401b00        	ssl	a11
400d4f9b:	a1ba00        	sll	a11, a10
400d4f9e:	2088b0        	or	a8, a8, a11
400d4fa1:	001cc6        	j	400d5018 <read_encoded_value_with_base+0x100>
400d4fa4:	010482        	l8ui	a8, a4, 1
400d4fa7:	000492        	l8ui	a9, a4, 0
400d4faa:	118880        	slli	a8, a8, 8
400d4fad:	208890        	or	a8, a8, a9
400d4fb0:	942b      	addi.n	a9, a4, 2
400d4fb2:	001806        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d4fb5:	010482        	l8ui	a8, a4, 1
400d4fb8:	000492        	l8ui	a9, a4, 0
400d4fbb:	118880        	slli	a8, a8, 8
400d4fbe:	208890        	or	a8, a8, a9
400d4fc1:	238880        	sext	a8, a8, 15
400d4fc4:	942b      	addi.n	a9, a4, 2
400d4fc6:	001306        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d4fc9:	0104a2        	l8ui	a10, a4, 1
400d4fcc:	0004b2        	l8ui	a11, a4, 0
400d4fcf:	020492        	l8ui	a9, a4, 2
400d4fd2:	11aa80        	slli	a10, a10, 8
400d4fd5:	030482        	l8ui	a8, a4, 3
400d4fd8:	20aab0        	or	a10, a10, a11
400d4fdb:	119900        	slli	a9, a9, 16
400d4fde:	2099a0        	or	a9, a9, a10
400d4fe1:	018880        	slli	a8, a8, 24
400d4fe4:	208890        	or	a8, a8, a9
400d4fe7:	944b      	addi.n	a9, a4, 4
400d4fe9:	000a46        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d4fec:	04a200        	extui	a10, a0, 2, 1
400d4fef:	04b201        	l32r	a0, 400962b8 <_iram_end+0x8764>
400d4ff2:	049200        	extui	a9, a0, 2, 1
400d4ff5:	aa8002        	lsi	f0, a0, 0x2a8
400d4ff8:	048211        	l32r	a1, 40096200 <_iram_end+0x86ac>
400d4ffb:	aab003        	lsi	f0, a0, 0x2a8
400d4ffe:	990020        	lsi	f2, a0, 0x264
400d5001:	99a011        	l32r	a1, 400bb684 <_iram_end+0x2db30>
400d5004:	888020        	lsi	f2, a0, 0x220
400d5007:	889001        	l32r	a0, 400b7248 <_iram_end+0x296f4>
400d500a:	948b20        	extui	a8, a2, 11, 10
400d500d:	000146        	j	400d5016 <read_encoded_value_with_base+0xfe>
400d5010:	201110        	or	a1, a1, a1
400d5013:	b635a5        	call8	4008b36c <abort>
400d5016:	489c      	beqz.n	a8, 400d502e <read_encoded_value_with_base+0x116>
400d5018:	70a0a2        	movi	a10, 112
400d501b:	10a2a0        	and	a10, a2, a10
400d501e:	f0caa2        	addi	a10, a10, -16
400d5021:	9343a0        	movnez	a4, a3, a10
400d5024:	232200        	sext	a2, a2, 7
400d5027:	884a      	add.n	a8, a8, a4
400d5029:	0012d6        	bgez	a2, 400d502e <read_encoded_value_with_base+0x116>
400d502c:	0888      	l32i.n	a8, a8, 0
400d502e:	0589      	s32i.n	a8, a5, 0
400d5030:	092d      	mov.n	a2, a9
400d5032:	f01d      	retw.n

400d5034 <fde_single_encoding_compare>:
400d5034:	006136        	entry	a1, 48
400d5037:	4258      	l32i.n	a5, a2, 16
400d5039:	02bd      	mov.n	a11, a2
400d503b:	745350        	extui	a5, a5, 3, 8
400d503e:	20a550        	or	a10, a5, a5
400d5041:	ffe9a5        	call8	400d4edc <base_from_object>
400d5044:	0a6d      	mov.n	a6, a10
400d5046:	0abd      	mov.n	a11, a10
400d5048:	d14b      	addi.n	a13, a1, 4
400d504a:	c38b      	addi.n	a12, a3, 8
400d504c:	20a550        	or	a10, a5, a5
400d504f:	ffeca5        	call8	400d4f18 <read_encoded_value_with_base>
400d5052:	42a8      	l32i.n	a10, a2, 16
400d5054:	06bd      	mov.n	a11, a6
400d5056:	20d110        	or	a13, a1, a1
400d5059:	08c4c2        	addi	a12, a4, 8
400d505c:	74a3a0        	extui	a10, a10, 3, 8
400d505f:	ffeba5        	call8	400d4f18 <read_encoded_value_with_base>
400d5062:	1168      	l32i.n	a6, a1, 4
400d5064:	0158      	l32i.n	a5, a1, 0
400d5066:	120c      	movi.n	a2, 1
400d5068:	083567        	bltu	a5, a6, 400d5074 <fde_single_encoding_compare+0x40>
400d506b:	023657        	bltu	a6, a5, 400d5071 <fde_single_encoding_compare+0x3d>
400d506e:	00a022        	movi	a2, 0
400d5071:	602020        	neg	a2, a2
400d5074:	f01d      	retw.n
	...

400d5078 <get_cie_encoding>:
400d5078:	006136        	entry	a1, 48
400d507b:	329b      	addi.n	a3, a2, 9
400d507d:	03ad      	mov.n	a10, a3
400d507f:	ec0281        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400d5082:	0008e0        	callx8	a8
400d5085:	080242        	l8ui	a4, a2, 8
400d5088:	aa1b      	addi.n	a10, a10, 1
400d508a:	a3aa      	add.n	a10, a3, a10
400d508c:	1444b6        	bltui	a4, 4, 400d50a4 <get_cie_encoding+0x2c>
400d508f:	000a52        	l8ui	a5, a10, 0
400d5092:	ffa032        	movi	a3, 255
400d5095:	024526        	beqi	a5, 4, 400d509b <get_cie_encoding+0x23>
400d5098:	002406        	j	400d512c <get_cie_encoding+0xb4>
400d509b:	010a52        	l8ui	a5, a10, 1
400d509e:	08a556        	bnez	a5, 400d512c <get_cie_encoding+0xb4>
400d50a1:	02caa2        	addi	a10, a10, 2
400d50a4:	090252        	l8ui	a5, a2, 9
400d50a7:	7aa032        	movi	a3, 122
400d50aa:	041537        	beq	a5, a3, 400d50b2 <get_cie_encoding+0x3a>
400d50ad:	030c      	movi.n	a3, 0
400d50af:	001e46        	j	400d512c <get_cie_encoding+0xb4>
400d50b2:	aa1b      	addi.n	a10, a10, 1
400d50b4:	ffca32        	addi	a3, a10, -1
400d50b7:	000382        	l8ui	a8, a3, 0
400d50ba:	238800        	sext	a8, a8, 7
400d50bd:	ff1896        	bltz	a8, 400d50b2 <get_cie_encoding+0x3a>
400d50c0:	aa1b      	addi.n	a10, a10, 1
400d50c2:	3a0b      	addi.n	a3, a10, -1
400d50c4:	000382        	l8ui	a8, a3, 0
400d50c7:	238800        	sext	a8, a8, 7
400d50ca:	ff2896        	bltz	a8, 400d50c0 <get_cie_encoding+0x48>
400d50cd:	041466        	bnei	a4, 1, 400d50d5 <get_cie_encoding+0x5d>
400d50d0:	aa1b      	addi.n	a10, a10, 1
400d50d2:	000306        	j	400d50e2 <get_cie_encoding+0x6a>
400d50d5:	aa1b      	addi.n	a10, a10, 1
400d50d7:	3a0b      	addi.n	a3, a10, -1
400d50d9:	000332        	l8ui	a3, a3, 0
400d50dc:	233300        	sext	a3, a3, 7
400d50df:	ff2396        	bltz	a3, 400d50d5 <get_cie_encoding+0x5d>
400d50e2:	32ab      	addi.n	a3, a2, 10
400d50e4:	aa1b      	addi.n	a10, a10, 1
400d50e6:	8a0b      	addi.n	a8, a10, -1
400d50e8:	000882        	l8ui	a8, a8, 0
400d50eb:	238800        	sext	a8, a8, 7
400d50ee:	ff2896        	bltz	a8, 400d50e4 <get_cie_encoding+0x6c>
400d50f1:	0a0282        	l8ui	a8, a2, 10
400d50f4:	225c      	movi.n	a2, 82
400d50f6:	045c      	movi.n	a4, 80
400d50f8:	c54c      	movi.n	a5, 76
400d50fa:	069827        	bne	a8, a2, 400d5104 <get_cie_encoding+0x8c>
400d50fd:	000a32        	l8ui	a3, a10, 0
400d5100:	000a06        	j	400d512c <get_cie_encoding+0xb4>
400d5103:	984700        	lsi	f0, a7, 0x260
400d5106:	0a8214        	lsi	f1, a2, 40
400d5109:	ca1b00        	float.s	f1, a11, 0
400d510c:	20d110        	or	a13, a1, a1
400d510f:	00a0b2        	movi	a11, 0
400d5112:	64a080        	extui	a10, a8, 0, 7
400d5115:	ffe025        	call8	400d4f18 <read_encoded_value_with_base>
400d5118:	000146        	j	400d5121 <get_cie_encoding+0xa9>
400d511b:	985700        	lsi	f0, a7, 0x260
400d511e:	1b8d      	lsi	f8, a11, 44
400d5120:	1baa      	add.n	a1, a11, a10
400d5122:	038233        	lsip	f3, a2, 12
400d5125:	982700        	lsi	f0, a7, 0x260
400d5128:	06da      	add.n	a0, a6, a13
400d512a:	2dfff4        	lsi	f15, a15, 180
400d512d:	f01d03        	lsi	f0, a13, 0x3c0

400d5130 <classify_object_over_fdes>:
400d5130:	008136        	entry	a1, 64
400d5133:	036d      	mov.n	a6, a3
400d5135:	0338      	l32i.n	a3, a3, 0
400d5137:	0ad316        	beqz	a3, 400d51e8 <classify_object_over_fdes+0xb8>
400d513a:	030c      	movi.n	a3, 0
400d513c:	037d      	mov.n	a7, a3
400d513e:	4139      	s32i.n	a3, a1, 16
400d5140:	03bd      	mov.n	a11, a3
400d5142:	1648      	l32i.n	a4, a6, 4
400d5144:	092416        	beqz	a4, 400d51da <classify_object_over_fdes+0xaa>
400d5147:	a64b      	addi.n	a10, a6, 4
400d5149:	c04a40        	sub	a4, a10, a4
400d514c:	0594b7        	bne	a4, a11, 400d5155 <classify_object_over_fdes+0x25>
400d514f:	745070        	extui	a5, a7, 0, 8
400d5152:	001306        	j	400d51a2 <classify_object_over_fdes+0x72>
400d5155:	04ad      	mov.n	a10, a4
400d5157:	fff225        	call8	400d5078 <get_cie_encoding>
400d515a:	ffa032        	movi	a3, 255
400d515d:	0a7d      	mov.n	a7, a10
400d515f:	059a37        	bne	a10, a3, 400d5168 <classify_object_over_fdes+0x38>
400d5162:	f37c      	movi.n	a3, -1
400d5164:	002006        	j	400d51e8 <classify_object_over_fdes+0xb8>
400d5167:	50a000        	lsi	f0, a0, 0x140
400d516a:	02bd74        	lsi	f7, a13, 8
400d516d:	05ad      	mov.n	a10, a5
400d516f:	ffd6e5        	call8	400d4edc <base_from_object>
400d5172:	0a3d      	mov.n	a3, a10
400d5174:	42a8      	l32i.n	a10, a2, 16
400d5176:	f8a782        	movi	a8, 0x7f8
400d5179:	10b8a0        	and	a11, a8, a10
400d517c:	159b87        	bne	a11, a8, 400d5195 <classify_object_over_fdes+0x65>
400d517f:	74b070        	extui	a11, a7, 0, 8
400d5182:	07a8c2        	movi	a12, 0xfffff807
400d5185:	11bbd0        	slli	a11, a11, 3
400d5188:	10aac0        	and	a10, a10, a12
400d518b:	20aab0        	or	a10, a10, a11
400d518e:	42a9      	s32i.n	a10, a2, 16
400d5190:	000386        	j	400d51a2 <classify_object_over_fdes+0x72>
400d5193:	a00000        	addx4	a0, a0, a0
400d5196:	b774b3        	lsi	f11, a4, 0x2dc
400d5199:	0c0617        	bnone	a6, a1, 400d51a9 <classify_object_over_fdes+0x79>
400d519c:	b04b      	addi.n	a11, a0, 4
400d519e:	20aa      	add.n	a2, a0, a10
400d51a0:	42a9      	s32i.n	a10, a2, 16
400d51a2:	01dd      	mov.n	a13, a1
400d51a4:	c68b      	addi.n	a12, a6, 8
400d51a6:	03bd      	mov.n	a11, a3
400d51a8:	05ad      	mov.n	a10, a5
400d51aa:	ffd6e5        	call8	400d4f18 <read_encoded_value_with_base>
400d51ad:	05ad      	mov.n	a10, a5
400d51af:	ffcf65        	call8	400d4ea4 <size_of_encoded_value>
400d51b2:	fd7c      	movi.n	a13, -1
400d51b4:	0c4af6        	bgeui	a10, 4, 400d51c4 <classify_object_over_fdes+0x94>
400d51b7:	11aad0        	slli	a10, a10, 3
400d51ba:	150c      	movi.n	a5, 1
400d51bc:	401a00        	ssl	a10
400d51bf:	a1a500        	sll	a10, a5
400d51c2:	dada      	add.n	a13, a10, a13
400d51c4:	01c8      	l32i.n	a12, a1, 0
400d51c6:	04bd      	mov.n	a11, a4
400d51c8:	0e0dc7        	bnone	a13, a12, 400d51da <classify_object_over_fdes+0xaa>
400d51cb:	4188      	l32i.n	a8, a1, 16
400d51cd:	02a8      	l32i.n	a10, a2, 0
400d51cf:	881b      	addi.n	a8, a8, 1
400d51d1:	4189      	s32i.n	a8, a1, 16
400d51d3:	01bca7        	bgeu	a12, a10, 400d51d8 <classify_object_over_fdes+0xa8>
400d51d6:	02c9      	s32i.n	a12, a2, 0
400d51d8:	04bd      	mov.n	a11, a4
400d51da:	0648      	l32i.n	a4, a6, 0
400d51dc:	444b      	addi.n	a4, a4, 4
400d51de:	664a      	add.n	a6, a6, a4
400d51e0:	0648      	l32i.n	a4, a6, 0
400d51e2:	f5c456        	bnez	a4, 400d5142 <classify_object_over_fdes+0x12>
400d51e5:	042132        	l32i	a3, a1, 16
400d51e8:	032d      	mov.n	a2, a3
400d51ea:	f01d      	retw.n

400d51ec <linear_search_fdes>:
400d51ec:	008136        	entry	a1, 64
400d51ef:	4278      	l32i.n	a7, a2, 16
400d51f1:	02bd      	mov.n	a11, a2
400d51f3:	747370        	extui	a7, a7, 3, 8
400d51f6:	20a770        	or	a10, a7, a7
400d51f9:	ffce25        	call8	400d4edc <base_from_object>
400d51fc:	0388      	l32i.n	a8, a3, 0
400d51fe:	060c      	movi.n	a6, 0
400d5200:	0aed      	mov.n	a14, a10
400d5202:	450c      	movi.n	a5, 4
400d5204:	049867        	bne	a8, a6, 400d520c <linear_search_fdes+0x20>
400d5207:	020c      	movi.n	a2, 0
400d5209:	f01d      	retw.n
400d520b:	138800        	lsi	f0, a8, 76
400d520e:	080816        	beqz	a8, 400d5292 <linear_search_fdes+0xa6>
400d5211:	42a8      	l32i.n	a10, a2, 16
400d5213:	1f05a7        	bnone	a5, a10, 400d5236 <linear_search_fdes+0x4a>
400d5216:	a34b      	addi.n	a10, a3, 4
400d5218:	c08a80        	sub	a8, a10, a8
400d521b:	171867        	beq	a8, a6, 400d5236 <linear_search_fdes+0x4a>
400d521e:	08ad      	mov.n	a10, a8
400d5220:	056182        	s32i	a8, a1, 20
400d5223:	ffe565        	call8	400d5078 <get_cie_encoding>
400d5226:	0a7d      	mov.n	a7, a10
400d5228:	02bd      	mov.n	a11, a2
400d522a:	74a0a0        	extui	a10, a10, 0, 8
400d522d:	ffcae5        	call8	400d4edc <base_from_object>
400d5230:	5188      	l32i.n	a8, a1, 20
400d5232:	0aed      	mov.n	a14, a10
400d5234:	086d      	mov.n	a6, a8
400d5236:	e7cc      	bnez.n	a7, 400d5248 <linear_search_fdes+0x5c>
400d5238:	2388      	l32i.n	a8, a3, 8
400d523a:	33a8      	l32i.n	a10, a3, 12
400d523c:	1189      	s32i.n	a8, a1, 4
400d523e:	01a9      	s32i.n	a10, a1, 0
400d5240:	04e816        	beqz	a8, 400d5292 <linear_search_fdes+0xa6>
400d5243:	001046        	j	400d5288 <linear_search_fdes+0x9c>
400d5246:	700000        	lsi	f0, a0, 0x1c0
400d5249:	bd7480        	lsi	f8, a4, 0x2f4
400d524c:	0e          	.byte 0xe
400d524d:	08ad      	mov.n	a10, a8
400d524f:	d14b      	addi.n	a13, a1, 4
400d5251:	c38b      	addi.n	a12, a3, 8
400d5253:	41e9      	s32i.n	a14, a1, 16
400d5255:	5189      	s32i.n	a8, a1, 20
400d5257:	ffcc25        	call8	400d4f18 <read_encoded_value_with_base>
400d525a:	0acd      	mov.n	a12, a10
400d525c:	0b0c      	movi.n	a11, 0
400d525e:	01dd      	mov.n	a13, a1
400d5260:	34a070        	extui	a10, a7, 0, 4
400d5263:	ffcb65        	call8	400d4f18 <read_encoded_value_with_base>
400d5266:	5188      	l32i.n	a8, a1, 20
400d5268:	08ad      	mov.n	a10, a8
400d526a:	ffc3a5        	call8	400d4ea4 <size_of_encoded_value>
400d526d:	fb7c      	movi.n	a11, -1
400d526f:	41e8      	l32i.n	a14, a1, 16
400d5271:	0c4af6        	bgeui	a10, 4, 400d5281 <linear_search_fdes+0x95>
400d5274:	11aad0        	slli	a10, a10, 3
400d5277:	180c      	movi.n	a8, 1
400d5279:	401a00        	ssl	a10
400d527c:	a1a800        	sll	a10, a8
400d527f:	baba      	add.n	a11, a10, a11
400d5281:	1188      	l32i.n	a8, a1, 4
400d5283:	0b0b87        	bnone	a11, a8, 400d5292 <linear_search_fdes+0xa6>
400d5286:	01a8      	l32i.n	a10, a1, 0
400d5288:	c08480        	sub	a8, a4, a8
400d528b:	03b8a7        	bgeu	a8, a10, 400d5292 <linear_search_fdes+0xa6>
400d528e:	032d      	mov.n	a2, a3
400d5290:	f01d      	retw.n
400d5292:	0388      	l32i.n	a8, a3, 0
400d5294:	884b      	addi.n	a8, a8, 4
400d5296:	338a      	add.n	a3, a3, a8
400d5298:	0388      	l32i.n	a8, a3, 0
400d529a:	f6e856        	bnez	a8, 400d520c <linear_search_fdes+0x20>
400d529d:	ffd986        	j	400d5207 <linear_search_fdes+0x1b>

400d52a0 <fde_mixed_encoding_compare>:
400d52a0:	006136        	entry	a1, 48
400d52a3:	1358      	l32i.n	a5, a3, 4
400d52a5:	a34b      	addi.n	a10, a3, 4
400d52a7:	c0aa50        	sub	a10, a10, a5
400d52aa:	ffdce5        	call8	400d5078 <get_cie_encoding>
400d52ad:	7450a0        	extui	a5, a10, 0, 8
400d52b0:	02bd      	mov.n	a11, a2
400d52b2:	20a550        	or	a10, a5, a5
400d52b5:	ffc265        	call8	400d4edc <base_from_object>
400d52b8:	c38b      	addi.n	a12, a3, 8
400d52ba:	20baa0        	or	a11, a10, a10
400d52bd:	04c1d2        	addi	a13, a1, 4
400d52c0:	20a550        	or	a10, a5, a5
400d52c3:	ffc565        	call8	400d4f18 <read_encoded_value_with_base>
400d52c6:	1438      	l32i.n	a3, a4, 4
400d52c8:	a44b      	addi.n	a10, a4, 4
400d52ca:	c0aa30        	sub	a10, a10, a3
400d52cd:	ffdaa5        	call8	400d5078 <get_cie_encoding>
400d52d0:	7430a0        	extui	a3, a10, 0, 8
400d52d3:	02bd      	mov.n	a11, a2
400d52d5:	03ad      	mov.n	a10, a3
400d52d7:	ffc065        	call8	400d4edc <base_from_object>
400d52da:	0abd      	mov.n	a11, a10
400d52dc:	c48b      	addi.n	a12, a4, 8
400d52de:	03ad      	mov.n	a10, a3
400d52e0:	20d110        	or	a13, a1, a1
400d52e3:	ffc365        	call8	400d4f18 <read_encoded_value_with_base>
400d52e6:	1148      	l32i.n	a4, a1, 4
400d52e8:	0138      	l32i.n	a3, a1, 0
400d52ea:	120c      	movi.n	a2, 1
400d52ec:	083347        	bltu	a3, a4, 400d52f8 <fde_mixed_encoding_compare+0x58>
400d52ef:	023437        	bltu	a4, a3, 400d52f5 <fde_mixed_encoding_compare+0x55>
400d52f2:	00a022        	movi	a2, 0
400d52f5:	602020        	neg	a2, a2
400d52f8:	f01d      	retw.n
	...

400d52fc <add_fdes>:
400d52fc:	008136        	entry	a1, 64
400d52ff:	4278      	l32i.n	a7, a2, 16
400d5301:	02bd      	mov.n	a11, a2
400d5303:	747370        	extui	a7, a7, 3, 8
400d5306:	07ad      	mov.n	a10, a7
400d5308:	046132        	s32i	a3, a1, 16
400d530b:	ffbd25        	call8	400d4edc <base_from_object>
400d530e:	0488      	l32i.n	a8, a4, 0
400d5310:	060c      	movi.n	a6, 0
400d5312:	0a3d      	mov.n	a3, a10
400d5314:	450c      	movi.n	a5, 4
400d5316:	029867        	bne	a8, a6, 400d531c <add_fdes+0x20>
400d5319:	0025c6        	j	400d53b4 <add_fdes+0xb8>
400d531c:	1488      	l32i.n	a8, a4, 4
400d531e:	087816        	beqz	a8, 400d53a9 <add_fdes+0xad>
400d5321:	42a8      	l32i.n	a10, a2, 16
400d5323:	1f05a7        	bnone	a5, a10, 400d5346 <add_fdes+0x4a>
400d5326:	a44b      	addi.n	a10, a4, 4
400d5328:	c08a80        	sub	a8, a10, a8
400d532b:	171867        	beq	a8, a6, 400d5346 <add_fdes+0x4a>
400d532e:	08ad      	mov.n	a10, a8
400d5330:	056182        	s32i	a8, a1, 20
400d5333:	ffd465        	call8	400d5078 <get_cie_encoding>
400d5336:	0a7d      	mov.n	a7, a10
400d5338:	02bd      	mov.n	a11, a2
400d533a:	74a0a0        	extui	a10, a10, 0, 8
400d533d:	ffb9e5        	call8	400d4edc <base_from_object>
400d5340:	5188      	l32i.n	a8, a1, 20
400d5342:	0a3d      	mov.n	a3, a10
400d5344:	086d      	mov.n	a6, a8
400d5346:	e7dc      	bnez.n	a7, 400d5368 <add_fdes+0x6c>
400d5348:	0b0482        	l8ui	a8, a4, 11
400d534b:	0804c2        	l8ui	a12, a4, 8
400d534e:	0904b2        	l8ui	a11, a4, 9
400d5351:	0a04a2        	l8ui	a10, a4, 10
400d5354:	0041c2        	s8i	a12, a1, 0
400d5357:	0141b2        	s8i	a11, a1, 1
400d535a:	0241a2        	s8i	a10, a1, 2
400d535d:	034182        	s8i	a8, a1, 3
400d5360:	0188      	l32i.n	a8, a1, 0
400d5362:	18fc      	bnez.n	a8, 400d5397 <add_fdes+0x9b>
400d5364:	001046        	j	400d53a9 <add_fdes+0xad>
400d5367:	807000        	add	a7, a0, a0
400d536a:	01dd74        	lsi	f7, a13, 4
400d536d:	c48b      	addi.n	a12, a4, 8
400d536f:	03bd      	mov.n	a11, a3
400d5371:	08ad      	mov.n	a10, a8
400d5373:	056182        	s32i	a8, a1, 20
400d5376:	ffba25        	call8	400d4f18 <read_encoded_value_with_base>
400d5379:	5188      	l32i.n	a8, a1, 20
400d537b:	08ad      	mov.n	a10, a8
400d537d:	ffb265        	call8	400d4ea4 <size_of_encoded_value>
400d5380:	f87c      	movi.n	a8, -1
400d5382:	0c4af6        	bgeui	a10, 4, 400d5392 <add_fdes+0x96>
400d5385:	180c      	movi.n	a8, 1
400d5387:	11aad0        	slli	a10, a10, 3
400d538a:	401a00        	ssl	a10
400d538d:	a1a800        	sll	a10, a8
400d5390:	8a0b      	addi.n	a8, a10, -1
400d5392:	01a8      	l32i.n	a10, a1, 0
400d5394:	1108a7        	bnone	a8, a10, 400d53a9 <add_fdes+0xad>
400d5397:	4198      	l32i.n	a9, a1, 16
400d5399:	0988      	l32i.n	a8, a9, 0
400d539b:	a88c      	beqz.n	a8, 400d53a9 <add_fdes+0xad>
400d539d:	18a8      	l32i.n	a10, a8, 4
400d539f:	ba1b      	addi.n	a11, a10, 1
400d53a1:	18b9      	s32i.n	a11, a8, 4
400d53a3:	a08a80        	addx4	a8, a10, a8
400d53a6:	026842        	s32i	a4, a8, 8
400d53a9:	0488      	l32i.n	a8, a4, 0
400d53ab:	884b      	addi.n	a8, a8, 4
400d53ad:	448a      	add.n	a4, a4, a8
400d53af:	0488      	l32i.n	a8, a4, 0
400d53b1:	f67856        	bnez	a8, 400d531c <add_fdes+0x20>
400d53b4:	f01d      	retw.n
	...

400d53b8 <fde_unencoded_compare>:
400d53b8:	006136        	entry	a1, 48
400d53bb:	248b      	addi.n	a2, a4, 8
400d53bd:	0803c2        	l8ui	a12, a3, 8
400d53c0:	0903b2        	l8ui	a11, a3, 9
400d53c3:	0a03a2        	l8ui	a10, a3, 10
400d53c6:	0b0392        	l8ui	a9, a3, 11
400d53c9:	080482        	l8ui	a8, a4, 8
400d53cc:	020232        	l8ui	a3, a2, 2
400d53cf:	090442        	l8ui	a4, a4, 9
400d53d2:	030222        	l8ui	a2, a2, 3
400d53d5:	014142        	s8i	a4, a1, 1
400d53d8:	034122        	s8i	a2, a1, 3
400d53db:	0441c2        	s8i	a12, a1, 4
400d53de:	0541b2        	s8i	a11, a1, 5
400d53e1:	0641a2        	s8i	a10, a1, 6
400d53e4:	074192        	s8i	a9, a1, 7
400d53e7:	004182        	s8i	a8, a1, 0
400d53ea:	024132        	s8i	a3, a1, 2
400d53ed:	1148      	l32i.n	a4, a1, 4
400d53ef:	0138      	l32i.n	a3, a1, 0
400d53f1:	01a022        	movi	a2, 1
400d53f4:	083347        	bltu	a3, a4, 400d5400 <fde_unencoded_compare+0x48>
400d53f7:	023437        	bltu	a4, a3, 400d53fd <fde_unencoded_compare+0x45>
400d53fa:	00a022        	movi	a2, 0
400d53fd:	602020        	neg	a2, a2
400d5400:	f01d      	retw.n
	...

400d5404 <search_object>:
400d5404:	00c136        	entry	a1, 96
400d5407:	4268      	l32i.n	a6, a2, 16
400d5409:	8139      	s32i.n	a3, a1, 32
400d540b:	026607        	bbci	a6, 0, 400d5411 <search_object+0xd>
400d540e:	0096c6        	j	400d566d <search_object+0x269>
400d5411:	413b60        	srli	a3, a6, 11
400d5414:	7139      	s32i.n	a3, a1, 28
400d5416:	064356        	bnez	a3, 400d547e <search_object+0x7a>
400d5419:	2c6617        	bbci	a6, 1, 400d5449 <search_object+0x45>
400d541c:	3238      	l32i.n	a3, a2, 12
400d541e:	03b8      	l32i.n	a11, a3, 0
400d5420:	236b16        	beqz	a11, 400d565a <search_object+0x256>
400d5423:	7148      	l32i.n	a4, a1, 28
400d5425:	02ad      	mov.n	a10, a2
400d5427:	ffd0a5        	call8	400d5130 <classify_object_over_fdes>
400d542a:	0c0a66        	bnei	a10, -1, 400d543a <search_object+0x36>
400d542d:	f8a732        	movi	a3, 0x7f8
400d5430:	4239      	s32i.n	a3, a2, 16
400d5432:	eb2c31        	l32r	a3, 400d00e4 <_flash_cache_start+0xcc>
400d5435:	3239      	s32i.n	a3, a2, 12
400d5437:	0087c6        	j	400d565a <search_object+0x256>
400d543a:	334b      	addi.n	a3, a3, 4
400d543c:	03b8      	l32i.n	a11, a3, 0
400d543e:	44aa      	add.n	a4, a4, a10
400d5440:	fe1b56        	bnez	a11, 400d5425 <search_object+0x21>
400d5443:	7149      	s32i.n	a4, a1, 28
400d5445:	000306        	j	400d5455 <search_object+0x51>
400d5448:	32b800        	orbc	b11, b8, b0
400d544b:	02ad      	mov.n	a10, a2
400d544d:	ffce25        	call8	400d5130 <classify_object_over_fdes>
400d5450:	71a9      	s32i.n	a10, a1, 28
400d5452:	d70a26        	beqi	a10, -1, 400d542d <search_object+0x29>
400d5455:	eb2431        	l32r	a3, 400d00e8 <_flash_cache_start+0xd0>
400d5458:	7148      	l32i.n	a4, a1, 28
400d545a:	103430        	and	a3, a4, a3
400d545d:	119437        	bne	a4, a3, 400d5472 <search_object+0x6e>
400d5460:	4248      	l32i.n	a4, a2, 16
400d5462:	7158      	l32i.n	a5, a1, 28
400d5464:	a44040        	extui	a4, a4, 0, 11
400d5467:	113550        	slli	a3, a5, 11
400d546a:	203430        	or	a3, a4, a3
400d546d:	4239      	s32i.n	a3, a2, 16
400d546f:	000186        	j	400d5479 <search_object+0x75>
400d5472:	4238      	l32i.n	a3, a2, 16
400d5474:	a43030        	extui	a3, a3, 0, 11
400d5477:	4239      	s32i.n	a3, a2, 16
400d5479:	7168      	l32i.n	a6, a1, 28
400d547b:	1db616        	beqz	a6, 400d565a <search_object+0x256>
400d547e:	7188      	l32i.n	a8, a1, 28
400d5480:	382b      	addi.n	a3, a8, 2
400d5482:	1133e0        	slli	a3, a3, 2
400d5485:	03ad      	mov.n	a10, a3
400d5487:	eb1981        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d548a:	0008e0        	callx8	a8
400d548d:	01a9      	s32i.n	a10, a1, 0
400d548f:	0a4d      	mov.n	a4, a10
400d5491:	1c5a16        	beqz	a10, 400d565a <search_object+0x256>
400d5494:	050c      	movi.n	a5, 0
400d5496:	03ad      	mov.n	a10, a3
400d5498:	1459      	s32i.n	a5, a4, 4
400d549a:	eb1481        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d549d:	0008e0        	callx8	a8
400d54a0:	11a9      	s32i.n	a10, a1, 4
400d54a2:	029a57        	bne	a10, a5, 400d54a8 <search_object+0xa4>
400d54a5:	00cf06        	j	400d57e5 <search_object+0x3e1>
400d54a8:	1a59      	s32i.n	a5, a10, 4
400d54aa:	00cdc6        	j	400d57e5 <search_object+0x3e1>
400d54ad:	323800        	orbc	b3, b8, b0
400d54b0:	03c8      	l32i.n	a12, a3, 0
400d54b2:	7cac      	beqz.n	a12, 400d54dd <search_object+0xd9>
400d54b4:	01bd      	mov.n	a11, a1
400d54b6:	02ad      	mov.n	a10, a2
400d54b8:	334b      	addi.n	a3, a3, 4
400d54ba:	ffe425        	call8	400d52fc <add_fdes>
400d54bd:	03c8      	l32i.n	a12, a3, 0
400d54bf:	ff1c56        	bnez	a12, 400d54b4 <search_object+0xb0>
400d54c2:	000206        	j	400d54ce <search_object+0xca>
400d54c5:	32c8      	l32i.n	a12, a2, 12
400d54c7:	01bd      	mov.n	a11, a1
400d54c9:	02ad      	mov.n	a10, a2
400d54cb:	ffe325        	call8	400d52fc <add_fdes>
400d54ce:	0198      	l32i.n	a9, a1, 0
400d54d0:	a199      	s32i.n	a9, a1, 40
400d54d2:	c199      	s32i.n	a9, a1, 48
400d54d4:	898c      	beqz.n	a9, 400d54e0 <search_object+0xdc>
400d54d6:	1938      	l32i.n	a3, a9, 4
400d54d8:	7148      	l32i.n	a4, a1, 28
400d54da:	021347        	beq	a3, a4, 400d54e0 <search_object+0xdc>
400d54dd:	b5e8e5        	call8	4008b36c <abort>
400d54e0:	042232        	l32i	a3, a2, 16
400d54e3:	eafc71        	l32r	a7, 400d00d4 <_flash_cache_start+0xbc>
400d54e6:	11e327        	bbsi	a3, 2, 400d54fb <search_object+0xf7>
400d54e9:	f8a742        	movi	a4, 0x7f8
400d54ec:	103340        	and	a3, a3, a4
400d54ef:	eafa51        	l32r	a5, 400d00d8 <_flash_cache_start+0xc0>
400d54f2:	eafa41        	l32r	a4, 400d00dc <_flash_cache_start+0xc4>
400d54f5:	834530        	moveqz	a4, a5, a3
400d54f8:	207440        	or	a7, a4, a4
400d54fb:	012162        	l32i	a6, a1, 4
400d54fe:	13e616        	beqz	a6, 400d5640 <search_object+0x23c>
400d5501:	a158      	l32i.n	a5, a1, 40
400d5503:	1558      	l32i.n	a5, a5, 4
400d5505:	9159      	s32i.n	a5, a1, 36
400d5507:	092516        	beqz	a5, 400d559d <search_object+0x199>
400d550a:	a188      	l32i.n	a8, a1, 40
400d550c:	eaf541        	l32r	a4, 400d00e0 <_flash_cache_start+0xc8>
400d550f:	888b      	addi.n	a8, a8, 8
400d5511:	968b      	addi.n	a9, a6, 8
400d5513:	030c      	movi.n	a3, 0
400d5515:	5139      	s32i.n	a3, a1, 20
400d5517:	4189      	s32i.n	a8, a1, 16
400d5519:	b199      	s32i.n	a9, a1, 44
400d551b:	d189      	s32i.n	a8, a1, 52
400d551d:	083d      	mov.n	a3, a8
400d551f:	6199      	s32i.n	a9, a1, 24
400d5521:	045d      	mov.n	a5, a4
400d5523:	000a46        	j	400d5550 <search_object+0x14c>
400d5526:	4198      	l32i.n	a9, a1, 16
400d5528:	c08590        	sub	a8, a5, a9
400d552b:	968a      	add.n	a9, a6, a8
400d552d:	2958      	l32i.n	a5, a9, 8
400d552f:	080c      	movi.n	a8, 0
400d5531:	2989      	s32i.n	a8, a9, 8
400d5533:	059547        	bne	a5, a4, 400d553c <search_object+0x138>
400d5536:	045d      	mov.n	a5, a4
400d5538:	000306        	j	400d5548 <search_object+0x144>
400d553b:	05c800        	extui	a12, a0, 24, 1
400d553e:	13b8      	l32i.n	a11, a3, 4
400d5540:	02ad      	mov.n	a10, a2
400d5542:	0007e0        	callx8	a7
400d5545:	fdda96        	bltz	a10, 400d5526 <search_object+0x122>
400d5548:	6198      	l32i.n	a9, a1, 24
400d554a:	334b      	addi.n	a3, a3, 4
400d554c:	994b      	addi.n	a9, a9, 4
400d554e:	6199      	s32i.n	a9, a1, 24
400d5550:	5198      	l32i.n	a9, a1, 20
400d5552:	6188      	l32i.n	a8, a1, 24
400d5554:	991b      	addi.n	a9, a9, 1
400d5556:	0859      	s32i.n	a5, a8, 0
400d5558:	9158      	l32i.n	a5, a1, 36
400d555a:	5199      	s32i.n	a9, a1, 20
400d555c:	091597        	beq	a5, a9, 400d5569 <search_object+0x165>
400d555f:	035d      	mov.n	a5, a3
400d5561:	d79437        	bne	a4, a3, 400d553c <search_object+0x138>
400d5564:	fff386        	j	400d5536 <search_object+0x132>
400d5567:	0c0000        	lsi	f0, a0, 48
400d556a:	3808      	l32i.n	a0, a8, 12
400d556c:	d19891        	l32r	a9, 400c9bcc <_rtc_text_end+0x9bcc>
400d556f:	b158      	l32i.n	a5, a1, 44
400d5571:	a1c8      	l32i.n	a12, a1, 40
400d5573:	084d      	mov.n	a4, a8
400d5575:	1a8376        	loop	a3, 400d5593 <search_object+0x18f>
400d5578:	05a8      	l32i.n	a10, a5, 0
400d557a:	09b8      	l32i.n	a11, a9, 0
400d557c:	8a8c      	beqz.n	a10, 400d5588 <search_object+0x184>
400d557e:	a0a4c0        	addx4	a10, a4, a12
400d5581:	2ab9      	s32i.n	a11, a10, 8
400d5583:	441b      	addi.n	a4, a4, 1
400d5585:	000186        	j	400d558f <search_object+0x18b>
400d5588:	a0a860        	addx4	a10, a8, a6
400d558b:	2ab9      	s32i.n	a11, a10, 8
400d558d:	881b      	addi.n	a8, a8, 1
400d558f:	554b      	addi.n	a5, a5, 4
400d5591:	994b      	addi.n	a9, a9, 4
400d5593:	0198      	l32i.n	a9, a1, 0
400d5595:	11c8      	l32i.n	a12, a1, 4
400d5597:	a199      	s32i.n	a9, a1, 40
400d5599:	000186        	j	400d55a3 <search_object+0x19f>
400d559c:	918800        	lsi	f0, a8, 0x244
400d559f:	06cd      	mov.n	a12, a6
400d55a1:	084d      	mov.n	a4, a8
400d55a3:	c138      	l32i.n	a3, a1, 48
400d55a5:	a158      	l32i.n	a5, a1, 40
400d55a7:	1349      	s32i.n	a4, a3, 4
400d55a9:	1689      	s32i.n	a8, a6, 4
400d55ab:	1548      	l32i.n	a4, a5, 4
400d55ad:	1c38      	l32i.n	a3, a12, 4
400d55af:	7168      	l32i.n	a6, a1, 28
400d55b1:	343a      	add.n	a3, a4, a3
400d55b3:	021367        	beq	a3, a6, 400d55b9 <search_object+0x1b5>
400d55b6:	ffc8c6        	j	400d54dd <search_object+0xd9>
400d55b9:	07bd      	mov.n	a11, a7
400d55bb:	02ad      	mov.n	a10, a2
400d55bd:	ff8925        	call8	400d4e50 <frame_heapsort>
400d55c0:	1188      	l32i.n	a8, a1, 4
400d55c2:	1898      	l32i.n	a9, a8, 4
400d55c4:	7189      	s32i.n	a8, a1, 28
400d55c6:	06b916        	beqz	a9, 400d5635 <search_object+0x231>
400d55c9:	0138      	l32i.n	a3, a1, 0
400d55cb:	a04980        	addx4	a4, a9, a8
400d55ce:	1368      	l32i.n	a6, a3, 4
400d55d0:	4139      	s32i.n	a3, a1, 16
400d55d2:	5149      	s32i.n	a4, a1, 20
400d55d4:	590b      	addi.n	a5, a9, -1
400d55d6:	5188      	l32i.n	a8, a1, 20
400d55d8:	6159      	s32i.n	a5, a1, 24
400d55da:	1838      	l32i.n	a3, a8, 4
400d55dc:	46dc      	bnez.n	a6, 400d55f4 <search_object+0x1f0>
400d55de:	060c      	movi.n	a6, 0
400d55e0:	000a86        	j	400d560e <search_object+0x20a>
400d55e3:	05a8      	l32i.n	a10, a5, 0
400d55e5:	0b6d      	mov.n	a6, a11
400d55e7:	14a9      	s32i.n	a10, a4, 4
400d55e9:	fcc552        	addi	a5, a5, -4
400d55ec:	fcc442        	addi	a4, a4, -4
400d55ef:	dbcc      	bnez.n	a11, 400d5600 <search_object+0x1fc>
400d55f1:	fffa46        	j	400d55de <search_object+0x1da>
400d55f4:	4148      	l32i.n	a4, a1, 16
400d55f6:	861b      	addi.n	a8, a6, 1
400d55f8:	996a      	add.n	a9, a9, a6
400d55fa:	a05840        	addx4	a5, a8, a4
400d55fd:	a04940        	addx4	a4, a9, a4
400d5600:	05b8      	l32i.n	a11, a5, 0
400d5602:	03cd      	mov.n	a12, a3
400d5604:	02ad      	mov.n	a10, a2
400d5606:	0007e0        	callx8	a7
400d5609:	b60b      	addi.n	a11, a6, -1
400d560b:	d41ae6        	bgei	a10, 1, 400d55e3 <search_object+0x1df>
400d560e:	6158      	l32i.n	a5, a1, 24
400d5610:	4198      	l32i.n	a9, a1, 16
400d5612:	865a      	add.n	a8, a6, a5
400d5614:	a08890        	addx4	a8, a8, a9
400d5617:	2839      	s32i.n	a3, a8, 8
400d5619:	5138      	l32i.n	a3, a1, 20
400d561b:	059d      	mov.n	a9, a5
400d561d:	fcc332        	addi	a3, a3, -4
400d5620:	5139      	s32i.n	a3, a1, 20
400d5622:	fae556        	bnez	a5, 400d55d4 <search_object+0x1d0>
400d5625:	7148      	l32i.n	a4, a1, 28
400d5627:	4168      	l32i.n	a6, a1, 16
400d5629:	1438      	l32i.n	a3, a4, 4
400d562b:	1658      	l32i.n	a5, a6, 4
400d562d:	1188      	l32i.n	a8, a1, 4
400d562f:	353a      	add.n	a3, a5, a3
400d5631:	7189      	s32i.n	a8, a1, 28
400d5633:	1639      	s32i.n	a3, a6, 4
400d5635:	71a8      	l32i.n	a10, a1, 28
400d5637:	ea9781        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d563a:	0008e0        	callx8	a8
400d563d:	000206        	j	400d5649 <search_object+0x245>
400d5640:	a1c8      	l32i.n	a12, a1, 40
400d5642:	07bd      	mov.n	a11, a7
400d5644:	02ad      	mov.n	a10, a2
400d5646:	ff80a5        	call8	400d4e50 <frame_heapsort>
400d5649:	0148      	l32i.n	a4, a1, 0
400d564b:	3238      	l32i.n	a3, a2, 12
400d564d:	0439      	s32i.n	a3, a4, 0
400d564f:	4258      	l32i.n	a5, a2, 16
400d5651:	130c      	movi.n	a3, 1
400d5653:	203530        	or	a3, a5, a3
400d5656:	3249      	s32i.n	a4, a2, 12
400d5658:	4239      	s32i.n	a3, a2, 16
400d565a:	0238      	l32i.n	a3, a2, 0
400d565c:	8198      	l32i.n	a9, a1, 32
400d565e:	03b937        	bgeu	a9, a3, 400d5665 <search_object+0x261>
400d5661:	020c      	movi.n	a2, 0
400d5663:	f01d      	retw.n
400d5665:	4268      	l32i.n	a6, a2, 16
400d5667:	02e607        	bbsi	a6, 0, 400d566d <search_object+0x269>
400d566a:	0051c6        	j	400d57b5 <search_object+0x3b1>
400d566d:	490c      	movi.n	a9, 4
400d566f:	107690        	and	a7, a6, a9
400d5672:	06e716        	beqz	a7, 400d56e4 <search_object+0x2e0>
400d5675:	3238      	l32i.n	a3, a2, 12
400d5677:	1398      	l32i.n	a9, a3, 4
400d5679:	4139      	s32i.n	a3, a1, 16
400d567b:	fe2916        	beqz	a9, 400d5661 <search_object+0x25d>
400d567e:	050c      	movi.n	a5, 0
400d5680:	718b      	addi.n	a7, a1, 8
400d5682:	5129      	s32i.n	a2, a1, 20
400d5684:	6179      	s32i.n	a7, a1, 24
400d5686:	052d      	mov.n	a2, a5
400d5688:	095d      	mov.n	a5, a9
400d568a:	4168      	l32i.n	a6, a1, 16
400d568c:	452a      	add.n	a4, a5, a2
400d568e:	414140        	srli	a4, a4, 1
400d5691:	a03460        	addx4	a3, a4, a6
400d5694:	2338      	l32i.n	a3, a3, 8
400d5696:	1388      	l32i.n	a8, a3, 4
400d5698:	04c3a2        	addi	a10, a3, 4
400d569b:	c0aa80        	sub	a10, a10, a8
400d569e:	ff9da5        	call8	400d5078 <get_cie_encoding>
400d56a1:	51b8      	l32i.n	a11, a1, 20
400d56a3:	7460a0        	extui	a6, a10, 0, 8
400d56a6:	0a7d      	mov.n	a7, a10
400d56a8:	06ad      	mov.n	a10, a6
400d56aa:	ff8325        	call8	400d4edc <base_from_object>
400d56ad:	61d8      	l32i.n	a13, a1, 24
400d56af:	0abd      	mov.n	a11, a10
400d56b1:	c38b      	addi.n	a12, a3, 8
400d56b3:	06ad      	mov.n	a10, a6
400d56b5:	ff8625        	call8	400d4f18 <read_encoded_value_with_base>
400d56b8:	0acd      	mov.n	a12, a10
400d56ba:	01dd      	mov.n	a13, a1
400d56bc:	0b0c      	movi.n	a11, 0
400d56be:	34a070        	extui	a10, a7, 0, 4
400d56c1:	ff8565        	call8	400d4f18 <read_encoded_value_with_base>
400d56c4:	2188      	l32i.n	a8, a1, 8
400d56c6:	8198      	l32i.n	a9, a1, 32
400d56c8:	103987        	bltu	a9, a8, 400d56dc <search_object+0x2d8>
400d56cb:	01a8      	l32i.n	a10, a1, 0
400d56cd:	88aa      	add.n	a8, a8, a10
400d56cf:	053987        	bltu	a9, a8, 400d56d8 <search_object+0x2d4>
400d56d2:	241b      	addi.n	a2, a4, 1
400d56d4:	000186        	j	400d56de <search_object+0x2da>
400d56d7:	032d00        	lsi	f0, a13, 12
400d56da:	f01d      	retw.n
400d56dc:	045d      	mov.n	a5, a4
400d56de:	a83257        	bltu	a2, a5, 400d568a <search_object+0x286>
400d56e1:	ffdf06        	j	400d5661 <search_object+0x25d>
400d56e4:	f8a752        	movi	a5, 0x7f8
400d56e7:	105650        	and	a5, a6, a5
400d56ea:	060556        	bnez	a5, 400d574e <search_object+0x34a>
400d56ed:	32a8      	l32i.n	a10, a2, 12
400d56ef:	1a68      	l32i.n	a6, a10, 4
400d56f1:	f6c616        	beqz	a6, 400d5661 <search_object+0x25d>
400d56f4:	81b8      	l32i.n	a11, a1, 32
400d56f6:	718b      	addi.n	a7, a1, 8
400d56f8:	356a      	add.n	a3, a5, a6
400d56fa:	413130        	srli	a3, a3, 1
400d56fd:	a023a0        	addx4	a2, a3, a10
400d5700:	2228      	l32i.n	a2, a2, 8
400d5702:	080282        	l8ui	a8, a2, 8
400d5705:	090292        	l8ui	a9, a2, 9
400d5708:	004782        	s8i	a8, a7, 0
400d570b:	0a0282        	l8ui	a8, a2, 10
400d570e:	014792        	s8i	a9, a7, 1
400d5711:	0b0242        	l8ui	a4, a2, 11
400d5714:	024782        	s8i	a8, a7, 2
400d5717:	034742        	s8i	a4, a7, 3
400d571a:	0c0292        	l8ui	a9, a2, 12
400d571d:	0d0282        	l8ui	a8, a2, 13
400d5720:	004192        	s8i	a9, a1, 0
400d5723:	0e0292        	l8ui	a9, a2, 14
400d5726:	014182        	s8i	a8, a1, 1
400d5729:	0f0282        	l8ui	a8, a2, 15
400d572c:	2148      	l32i.n	a4, a1, 8
400d572e:	024192        	s8i	a9, a1, 2
400d5731:	034182        	s8i	a8, a1, 3
400d5734:	0e3b47        	bltu	a11, a4, 400d5746 <search_object+0x342>
400d5737:	0158      	l32i.n	a5, a1, 0
400d5739:	445a      	add.n	a4, a4, a5
400d573b:	02bb47        	bgeu	a11, a4, 400d5741 <search_object+0x33d>
400d573e:	002b86        	j	400d57f0 <search_object+0x3ec>
400d5741:	531b      	addi.n	a5, a3, 1
400d5743:	000046        	j	400d5748 <search_object+0x344>
400d5746:	036d      	mov.n	a6, a3
400d5748:	ac3567        	bltu	a5, a6, 400d56f8 <search_object+0x2f4>
400d574b:	ffc486        	j	400d5661 <search_object+0x25d>
400d574e:	3238      	l32i.n	a3, a2, 12
400d5750:	02bd      	mov.n	a11, a2
400d5752:	4139      	s32i.n	a3, a1, 16
400d5754:	743360        	extui	a3, a6, 3, 8
400d5757:	03ad      	mov.n	a10, a3
400d5759:	ff7825        	call8	400d4edc <base_from_object>
400d575c:	4148      	l32i.n	a4, a1, 16
400d575e:	51a9      	s32i.n	a10, a1, 20
400d5760:	1458      	l32i.n	a5, a4, 4
400d5762:	efb516        	beqz	a5, 400d5661 <search_object+0x25d>
400d5765:	346030        	extui	a6, a3, 0, 4
400d5768:	6169      	s32i.n	a6, a1, 24
400d576a:	8148      	l32i.n	a4, a1, 32
400d576c:	076d      	mov.n	a6, a7
400d576e:	7139      	s32i.n	a3, a1, 28
400d5770:	718b      	addi.n	a7, a1, 8
400d5772:	062d      	mov.n	a2, a6
400d5774:	053d      	mov.n	a3, a5
400d5776:	823a      	add.n	a8, a2, a3
400d5778:	415180        	srli	a5, a8, 1
400d577b:	4188      	l32i.n	a8, a1, 16
400d577d:	51b8      	l32i.n	a11, a1, 20
400d577f:	a0a580        	addx4	a10, a5, a8
400d5782:	2a68      	l32i.n	a6, a10, 8
400d5784:	71a8      	l32i.n	a10, a1, 28
400d5786:	07dd      	mov.n	a13, a7
400d5788:	c68b      	addi.n	a12, a6, 8
400d578a:	ff78e5        	call8	400d4f18 <read_encoded_value_with_base>
400d578d:	0acd      	mov.n	a12, a10
400d578f:	61a8      	l32i.n	a10, a1, 24
400d5791:	01dd      	mov.n	a13, a1
400d5793:	0b0c      	movi.n	a11, 0
400d5795:	ff7825        	call8	400d4f18 <read_encoded_value_with_base>
400d5798:	21a8      	l32i.n	a10, a1, 8
400d579a:	0f34a7        	bltu	a4, a10, 400d57ad <search_object+0x3a9>
400d579d:	01b8      	l32i.n	a11, a1, 0
400d579f:	aaba      	add.n	a10, a10, a11
400d57a1:	0434a7        	bltu	a4, a10, 400d57a9 <search_object+0x3a5>
400d57a4:	251b      	addi.n	a2, a5, 1
400d57a6:	000146        	j	400d57af <search_object+0x3ab>
400d57a9:	062d      	mov.n	a2, a6
400d57ab:	f01d      	retw.n
400d57ad:	053d      	mov.n	a3, a5
400d57af:	c33237        	bltu	a2, a3, 400d5776 <search_object+0x372>
400d57b2:	ffaac6        	j	400d5661 <search_object+0x25d>
400d57b5:	1b6617        	bbci	a6, 1, 400d57d4 <search_object+0x3d0>
400d57b8:	3238      	l32i.n	a3, a2, 12
400d57ba:	03b8      	l32i.n	a11, a3, 0
400d57bc:	ea1b16        	beqz	a11, 400d5661 <search_object+0x25d>
400d57bf:	8148      	l32i.n	a4, a1, 32
400d57c1:	04cd      	mov.n	a12, a4
400d57c3:	02ad      	mov.n	a10, a2
400d57c5:	ffa265        	call8	400d51ec <linear_search_fdes>
400d57c8:	5adc      	bnez.n	a10, 400d57e1 <search_object+0x3dd>
400d57ca:	334b      	addi.n	a3, a3, 4
400d57cc:	03b8      	l32i.n	a11, a3, 0
400d57ce:	fefb56        	bnez	a11, 400d57c1 <search_object+0x3bd>
400d57d1:	ffa306        	j	400d5661 <search_object+0x25d>
400d57d4:	32b8      	l32i.n	a11, a2, 12
400d57d6:	81c8      	l32i.n	a12, a1, 32
400d57d8:	02ad      	mov.n	a10, a2
400d57da:	ffa125        	call8	400d51ec <linear_search_fdes>
400d57dd:	0a2d      	mov.n	a2, a10
400d57df:	f01d      	retw.n
400d57e1:	0a2d      	mov.n	a2, a10
400d57e3:	f01d      	retw.n
400d57e5:	4238      	l32i.n	a3, a2, 16
400d57e7:	026317        	bbci	a3, 1, 400d57ed <search_object+0x3e9>
400d57ea:	ff3006        	j	400d54ae <search_object+0xaa>
400d57ed:	ff3506        	j	400d54c5 <search_object+0xc1>
400d57f0:	f01d      	retw.n
	...

400d57f4 <__register_frame_info$part$4>:
400d57f4:	004136        	entry	a1, 32
400d57f7:	036322        	s32i	a2, a3, 12
400d57fa:	f8a722        	movi	a2, 0x7f8
400d57fd:	00a082        	movi	a8, 0
400d5800:	f97c      	movi.n	a9, -1
400d5802:	4329      	s32i.n	a2, a3, 16
400d5804:	ea3b21        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d5807:	0399      	s32i.n	a9, a3, 0
400d5809:	1389      	s32i.n	a8, a3, 4
400d580b:	2389      	s32i.n	a8, a3, 8
400d580d:	171287        	beq	a2, a8, 400d5828 <__register_frame_info$part$4+0x34>
400d5810:	ea3921        	l32r	a2, 400d00f4 <_flash_cache_start+0xdc>
400d5813:	02ad      	mov.n	a10, a2
400d5815:	af35e5        	call8	40084b74 <pthread_mutex_lock>
400d5818:	ea3881        	l32r	a8, 400d00f8 <_flash_cache_start+0xe0>
400d581b:	02ad      	mov.n	a10, a2
400d581d:	0828      	l32i.n	a2, a8, 0
400d581f:	0839      	s32i.n	a3, a8, 0
400d5821:	5329      	s32i.n	a2, a3, 20
400d5823:	af3f65        	call8	40084c18 <pthread_mutex_unlock>
400d5826:	f01d      	retw.n
400d5828:	ea3421        	l32r	a2, 400d00f8 <_flash_cache_start+0xe0>
400d582b:	0288      	l32i.n	a8, a2, 0
400d582d:	0239      	s32i.n	a3, a2, 0
400d582f:	5389      	s32i.n	a8, a3, 20
400d5831:	f01d      	retw.n
	...

400d5834 <__register_frame_info_bases>:
400d5834:	004136        	entry	a1, 32
400d5837:	03a216        	beqz	a2, 400d5875 <__register_frame_info_bases+0x41>
400d583a:	002282        	l32i	a8, a2, 0
400d583d:	48bc      	beqz.n	a8, 400d5875 <__register_frame_info_bases+0x41>
400d583f:	3329      	s32i.n	a2, a3, 12
400d5841:	f8a722        	movi	a2, 0x7f8
400d5844:	f87c      	movi.n	a8, -1
400d5846:	4329      	s32i.n	a2, a3, 16
400d5848:	ea2a21        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d584b:	0389      	s32i.n	a8, a3, 0
400d584d:	1349      	s32i.n	a4, a3, 4
400d584f:	2359      	s32i.n	a5, a3, 8
400d5851:	729c      	beqz.n	a2, 400d586c <__register_frame_info_bases+0x38>
400d5853:	ea2841        	l32r	a4, 400d00f4 <_flash_cache_start+0xdc>
400d5856:	04ad      	mov.n	a10, a4
400d5858:	af31a5        	call8	40084b74 <pthread_mutex_lock>
400d585b:	ea2721        	l32r	a2, 400d00f8 <_flash_cache_start+0xe0>
400d585e:	04ad      	mov.n	a10, a4
400d5860:	0248      	l32i.n	a4, a2, 0
400d5862:	0239      	s32i.n	a3, a2, 0
400d5864:	5349      	s32i.n	a4, a3, 20
400d5866:	af3b25        	call8	40084c18 <pthread_mutex_unlock>
400d5869:	f01d      	retw.n
400d586b:	232100        	sext	a2, a1, 7
400d586e:	48ea      	add.n	a4, a8, a14
400d5870:	023902        	lsi	f0, a9, 8
400d5873:	5349      	s32i.n	a4, a3, 20
400d5875:	f01d      	retw.n
	...

400d5878 <__register_frame_info>:
400d5878:	004136        	entry	a1, 32
400d587b:	928c      	beqz.n	a2, 400d5888 <__register_frame_info+0x10>
400d587d:	0288      	l32i.n	a8, a2, 0
400d587f:	588c      	beqz.n	a8, 400d5888 <__register_frame_info+0x10>
400d5881:	03bd      	mov.n	a11, a3
400d5883:	02ad      	mov.n	a10, a2
400d5885:	fff6e5        	call8	400d57f4 <__register_frame_info$part$4>
400d5888:	f01d      	retw.n
	...

400d588c <__register_frame>:
400d588c:	004136        	entry	a1, 32
400d588f:	0288      	l32i.n	a8, a2, 0
400d5891:	00f816        	beqz	a8, 400d58a4 <__register_frame+0x18>
400d5894:	18a0a2        	movi	a10, 24
400d5897:	ea1581        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d589a:	0008e0        	callx8	a8
400d589d:	0abd      	mov.n	a11, a10
400d589f:	02ad      	mov.n	a10, a2
400d58a1:	fff525        	call8	400d57f4 <__register_frame_info$part$4>
400d58a4:	f01d      	retw.n
	...

400d58a8 <__register_frame_info_table_bases>:
400d58a8:	004136        	entry	a1, 32
400d58ab:	3329      	s32i.n	a2, a3, 12
400d58ad:	faa722        	movi	a2, 0x7fa
400d58b0:	f87c      	movi.n	a8, -1
400d58b2:	4329      	s32i.n	a2, a3, 16
400d58b4:	ea0f21        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d58b7:	0389      	s32i.n	a8, a3, 0
400d58b9:	1349      	s32i.n	a4, a3, 4
400d58bb:	2359      	s32i.n	a5, a3, 8
400d58bd:	729c      	beqz.n	a2, 400d58d8 <__register_frame_info_table_bases+0x30>
400d58bf:	ea0d21        	l32r	a2, 400d00f4 <_flash_cache_start+0xdc>
400d58c2:	02ad      	mov.n	a10, a2
400d58c4:	af2ae5        	call8	40084b74 <pthread_mutex_lock>
400d58c7:	ea0c81        	l32r	a8, 400d00f8 <_flash_cache_start+0xe0>
400d58ca:	02ad      	mov.n	a10, a2
400d58cc:	0828      	l32i.n	a2, a8, 0
400d58ce:	0839      	s32i.n	a3, a8, 0
400d58d0:	5329      	s32i.n	a2, a3, 20
400d58d2:	af3465        	call8	40084c18 <pthread_mutex_unlock>
400d58d5:	f01d      	retw.n
400d58d7:	082100        	lsx	f2, a1, a0
400d58da:	88ea      	add.n	a8, a8, a14
400d58dc:	023902        	lsi	f0, a9, 8
400d58df:	5389      	s32i.n	a8, a3, 20
400d58e1:	f01d      	retw.n
	...

400d58e4 <__register_frame_info_table>:
400d58e4:	004136        	entry	a1, 32
400d58e7:	0d0c      	movi.n	a13, 0
400d58e9:	0dcd      	mov.n	a12, a13
400d58eb:	03bd      	mov.n	a11, a3
400d58ed:	02ad      	mov.n	a10, a2
400d58ef:	fffba5        	call8	400d58a8 <__register_frame_info_table_bases>
400d58f2:	f01d      	retw.n

400d58f4 <__register_frame_table>:
400d58f4:	004136        	entry	a1, 32
400d58f7:	18a0a2        	movi	a10, 24
400d58fa:	e9fc81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d58fd:	0008e0        	callx8	a8
400d5900:	0d0c      	movi.n	a13, 0
400d5902:	0abd      	mov.n	a11, a10
400d5904:	0dcd      	mov.n	a12, a13
400d5906:	20a220        	or	a10, a2, a2
400d5909:	fff9e5        	call8	400d58a8 <__register_frame_info_table_bases>
400d590c:	f01d      	retw.n
	...

400d5910 <__deregister_frame_info_bases>:
400d5910:	004136        	entry	a1, 32
400d5913:	204220        	or	a4, a2, a2
400d5916:	08c216        	beqz	a2, 400d59a6 <__deregister_frame_info_bases+0x96>
400d5919:	002232        	l32i	a3, a2, 0
400d591c:	088316        	beqz	a3, 400d59a8 <__deregister_frame_info_bases+0x98>
400d591f:	e9f431        	l32r	a3, 400d00f0 <_flash_cache_start+0xd8>
400d5922:	005316        	beqz	a3, 400d592b <__deregister_frame_info_bases+0x1b>
400d5925:	e9f3a1        	l32r	a10, 400d00f4 <_flash_cache_start+0xdc>
400d5928:	af24a5        	call8	40084b74 <pthread_mutex_lock>
400d592b:	e9f391        	l32r	a9, 400d00f8 <_flash_cache_start+0xe0>
400d592e:	002982        	l32i	a8, a9, 0
400d5931:	48ac      	beqz.n	a8, 400d5959 <__deregister_frame_info_bases+0x49>
400d5933:	3828      	l32i.n	a2, a8, 12
400d5935:	1b9427        	bne	a4, a2, 400d5954 <__deregister_frame_info_bases+0x44>
400d5938:	0002c6        	j	400d5947 <__deregister_frame_info_bases+0x37>
400d593b:	329800        	orbc	b9, b8, b0
400d593e:	109497        	bne	a4, a9, 400d5952 <__deregister_frame_info_bases+0x42>
400d5941:	14c882        	addi	a8, a8, 20
400d5944:	0000c6        	j	400d594b <__deregister_frame_info_bases+0x3b>
400d5947:	082d      	mov.n	a2, a8
400d5949:	098d      	mov.n	a8, a9
400d594b:	5248      	l32i.n	a4, a2, 20
400d594d:	0849      	s32i.n	a4, a8, 0
400d594f:	001006        	j	400d5993 <__deregister_frame_info_bases+0x83>
400d5952:	028d      	mov.n	a8, a2
400d5954:	5828      	l32i.n	a2, a8, 20
400d5956:	fe2256        	bnez	a2, 400d593c <__deregister_frame_info_bases+0x2c>
400d5959:	e9e891        	l32r	a9, 400d00fc <_flash_cache_start+0xe4>
400d595c:	0928      	l32i.n	a2, a9, 0
400d595e:	04a216        	beqz	a2, 400d59ac <__deregister_frame_info_bases+0x9c>
400d5961:	4288      	l32i.n	a8, a2, 16
400d5963:	156807        	bbci	a8, 0, 400d597c <__deregister_frame_info_bases+0x6c>
400d5966:	3288      	l32i.n	a8, a2, 12
400d5968:	0888      	l32i.n	a8, a8, 0
400d596a:	1a9487        	bne	a4, a8, 400d5988 <__deregister_frame_info_bases+0x78>
400d596d:	5248      	l32i.n	a4, a2, 20
400d596f:	0949      	s32i.n	a4, a9, 0
400d5971:	32a8      	l32i.n	a10, a2, 12
400d5973:	e9c881        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d5976:	0008e0        	callx8	a8
400d5979:	000586        	j	400d5993 <__deregister_frame_info_bases+0x83>
400d597c:	3288      	l32i.n	a8, a2, 12
400d597e:	069487        	bne	a4, a8, 400d5988 <__deregister_frame_info_bases+0x78>
400d5981:	5248      	l32i.n	a4, a2, 20
400d5983:	0949      	s32i.n	a4, a9, 0
400d5985:	000286        	j	400d5993 <__deregister_frame_info_bases+0x83>
400d5988:	14c292        	addi	a9, a2, 20
400d598b:	5228      	l32i.n	a2, a2, 20
400d598d:	fd0256        	bnez	a2, 400d5961 <__deregister_frame_info_bases+0x51>
400d5990:	000606        	j	400d59ac <__deregister_frame_info_bases+0x9c>
400d5993:	d39c      	beqz.n	a3, 400d59b4 <__deregister_frame_info_bases+0xa4>
400d5995:	e9d7a1        	l32r	a10, 400d00f4 <_flash_cache_start+0xdc>
400d5998:	201110        	or	a1, a1, a1
400d599b:	af27e5        	call8	40084c18 <pthread_mutex_unlock>
400d599e:	22dc      	bnez.n	a2, 400d59b4 <__deregister_frame_info_bases+0xa4>
400d59a0:	201110        	or	a1, a1, a1
400d59a3:	b59ca5        	call8	4008b36c <abort>
400d59a6:	f01d      	retw.n
400d59a8:	032d      	mov.n	a2, a3
400d59aa:	f01d      	retw.n
400d59ac:	020c      	movi.n	a2, 0
400d59ae:	e39327        	bne	a3, a2, 400d5995 <__deregister_frame_info_bases+0x85>
400d59b1:	fffac6        	j	400d59a0 <__deregister_frame_info_bases+0x90>
400d59b4:	f01d      	retw.n
	...

400d59b8 <__deregister_frame_info>:
400d59b8:	004136        	entry	a1, 32
400d59bb:	02ad      	mov.n	a10, a2
400d59bd:	fff525        	call8	400d5910 <__deregister_frame_info_bases>
400d59c0:	0a2d      	mov.n	a2, a10
400d59c2:	f01d      	retw.n

400d59c4 <__deregister_frame>:
400d59c4:	004136        	entry	a1, 32
400d59c7:	0288      	l32i.n	a8, a2, 0
400d59c9:	988c      	beqz.n	a8, 400d59d6 <__deregister_frame+0x12>
400d59cb:	02ad      	mov.n	a10, a2
400d59cd:	fff425        	call8	400d5910 <__deregister_frame_info_bases>
400d59d0:	e9b181        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d59d3:	0008e0        	callx8	a8
400d59d6:	f01d      	retw.n

400d59d8 <_Unwind_Find_FDE>:
400d59d8:	006136        	entry	a1, 48
400d59db:	207220        	or	a7, a2, a2
400d59de:	e9c421        	l32r	a2, 400d00f0 <_flash_cache_start+0xd8>
400d59e1:	005216        	beqz	a2, 400d59ea <_Unwind_Find_FDE+0x12>
400d59e4:	e9c4a1        	l32r	a10, 400d00f4 <_flash_cache_start+0xdc>
400d59e7:	af18e5        	call8	40084b74 <pthread_mutex_lock>
400d59ea:	e9c451        	l32r	a5, 400d00fc <_flash_cache_start+0xe4>
400d59ed:	002522        	l32i	a2, a5, 0
400d59f0:	005256        	bnez	a2, 400d59f9 <_Unwind_Find_FDE+0x21>
400d59f3:	e9c141        	l32r	a4, 400d00f8 <_flash_cache_start+0xe0>
400d59f6:	001446        	j	400d5a4b <_Unwind_Find_FDE+0x73>
400d59f9:	0248      	l32i.n	a4, a2, 0
400d59fb:	0e3747        	bltu	a7, a4, 400d5a0d <_Unwind_Find_FDE+0x35>
400d59fe:	07bd      	mov.n	a11, a7
400d5a00:	02ad      	mov.n	a10, a2
400d5a02:	ffa025        	call8	400d5404 <search_object>
400d5a05:	0a6d      	mov.n	a6, a10
400d5a07:	091a56        	bnez	a10, 400d5a9c <_Unwind_Find_FDE+0xc4>
400d5a0a:	fff946        	j	400d59f3 <_Unwind_Find_FDE+0x1b>
400d5a0d:	5228      	l32i.n	a2, a2, 20
400d5a0f:	fe6256        	bnez	a2, 400d59f9 <_Unwind_Find_FDE+0x21>
400d5a12:	fff746        	j	400d59f3 <_Unwind_Find_FDE+0x1b>
400d5a15:	5288      	l32i.n	a8, a2, 20
400d5a17:	07bd      	mov.n	a11, a7
400d5a19:	02ad      	mov.n	a10, a2
400d5a1b:	0489      	s32i.n	a8, a4, 0
400d5a1d:	ff9e65        	call8	400d5404 <search_object>
400d5a20:	0588      	l32i.n	a8, a5, 0
400d5a22:	0a6d      	mov.n	a6, a10
400d5a24:	989c      	beqz.n	a8, 400d5a41 <_Unwind_Find_FDE+0x69>
400d5a26:	02a8      	l32i.n	a10, a2, 0
400d5a28:	0898      	l32i.n	a9, a8, 0
400d5a2a:	07b9a7        	bgeu	a9, a10, 400d5a35 <_Unwind_Find_FDE+0x5d>
400d5a2d:	000406        	j	400d5a41 <_Unwind_Find_FDE+0x69>
400d5a30:	0898      	l32i.n	a9, a8, 0
400d5a32:	0e39a7        	bltu	a9, a10, 400d5a44 <_Unwind_Find_FDE+0x6c>
400d5a35:	14c8b2        	addi	a11, a8, 20
400d5a38:	5888      	l32i.n	a8, a8, 20
400d5a3a:	ff2856        	bnez	a8, 400d5a30 <_Unwind_Find_FDE+0x58>
400d5a3d:	0000c6        	j	400d5a44 <_Unwind_Find_FDE+0x6c>
400d5a40:	aeb100        	f64iter	a11, a1, a0, 2, 0
400d5a43:	89e9      	s32i.n	a14, a9, 32
400d5a45:	0b2952        	l32i	a5, a9, 44
400d5a48:	050656        	bnez	a6, 400d5a9c <_Unwind_Find_FDE+0xc4>
400d5a4b:	0428      	l32i.n	a2, a4, 0
400d5a4d:	fc4256        	bnez	a2, 400d5a15 <_Unwind_Find_FDE+0x3d>
400d5a50:	000f86        	j	400d5a92 <_Unwind_Find_FDE+0xba>
400d5a53:	e9a8a1        	l32r	a10, 400d00f4 <_flash_cache_start+0xdc>
400d5a56:	af1c25        	call8	40084c18 <pthread_mutex_unlock>
400d5a59:	1278      	l32i.n	a7, a2, 4
400d5a5b:	2258      	l32i.n	a5, a2, 8
400d5a5d:	4248      	l32i.n	a4, a2, 16
400d5a5f:	0379      	s32i.n	a7, a3, 0
400d5a61:	1359      	s32i.n	a5, a3, 4
400d5a63:	74a340        	extui	a10, a4, 3, 8
400d5a66:	0a6427        	bbci	a4, 2, 400d5a74 <_Unwind_Find_FDE+0x9c>
400d5a69:	012642        	l32i	a4, a6, 4
400d5a6c:	a64b      	addi.n	a10, a6, 4
400d5a6e:	c0aa40        	sub	a10, a10, a4
400d5a71:	ff6065        	call8	400d5078 <get_cie_encoding>
400d5a74:	7440a0        	extui	a4, a10, 0, 8
400d5a77:	02bd      	mov.n	a11, a2
400d5a79:	04ad      	mov.n	a10, a4
400d5a7b:	ff4625        	call8	400d4edc <base_from_object>
400d5a7e:	0abd      	mov.n	a11, a10
400d5a80:	01dd      	mov.n	a13, a1
400d5a82:	c68b      	addi.n	a12, a6, 8
400d5a84:	04ad      	mov.n	a10, a4
400d5a86:	ff4925        	call8	400d4f18 <read_encoded_value_with_base>
400d5a89:	0128      	l32i.n	a2, a1, 0
400d5a8b:	2329      	s32i.n	a2, a3, 8
400d5a8d:	000746        	j	400d5aae <_Unwind_Find_FDE+0xd6>
400d5a90:	310000        	srai	a0, a0, 16
400d5a93:	6de997        	bbsi	a9, 9, 400d5b04 <main_task+0x10>
400d5a96:	339c03        	lsi	f0, a12, 204
400d5a99:	000206        	j	400d5aa5 <_Unwind_Find_FDE+0xcd>
400d5a9c:	e99541        	l32r	a4, 400d00f0 <_flash_cache_start+0xd8>
400d5a9f:	fb0456        	bnez	a4, 400d5a53 <_Unwind_Find_FDE+0x7b>
400d5aa2:	ffecc6        	j	400d5a59 <_Unwind_Find_FDE+0x81>
400d5aa5:	e993a1        	l32r	a10, 400d00f4 <_flash_cache_start+0xdc>
400d5aa8:	206220        	or	a6, a2, a2
400d5aab:	af16e5        	call8	40084c18 <pthread_mutex_unlock>
400d5aae:	202660        	or	a2, a6, a6
400d5ab1:	000090        	retw

400d5ab4 <cpu_configure_region_protection>:
400d5ab4:	008136        	entry	a1, 64
400d5ab7:	4c1c      	movi.n	a12, 20
400d5ab9:	e991b1        	l32r	a11, 400d0100 <_flash_cache_start+0xe8>
400d5abc:	01ad      	mov.n	a10, a1
400d5abe:	e97681        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d5ac1:	0008e0        	callx8	a8
400d5ac4:	080c      	movi.n	a8, 0
400d5ac6:	000506        	j	400d5ade <cpu_configure_region_protection+0x2a>
400d5ac9:	a09810        	addx4	a9, a8, a1
400d5acc:	0998      	l32i.n	a9, a9, 0
400d5ace:	fa0c      	movi.n	a10, 15
400d5ad0:	50e9a0        	wdtlb	a10, a9
400d5ad3:	002030        	dsync
400d5ad6:	5069a0        	witlb	a10, a9
400d5ad9:	002000        	isync
400d5adc:	881b      	addi.n	a8, a8, 1
400d5ade:	e758b6        	bltui	a8, 5, 400d5ac9 <cpu_configure_region_protection+0x15>
400d5ae1:	e98881        	l32r	a8, 400d0104 <_flash_cache_start+0xec>
400d5ae4:	090c      	movi.n	a9, 0
400d5ae6:	50e890        	wdtlb	a9, a8
400d5ae9:	002030        	dsync
400d5aec:	506890        	witlb	a9, a8
400d5aef:	002000        	isync
400d5af2:	f01d      	retw.n

400d5af4 <main_task>:
400d5af4:	004136        	entry	a1, 32
400d5af7:	e98481        	l32r	a8, 400d0108 <_flash_cache_start+0xf0>
400d5afa:	0020c0        	memw
400d5afd:	012882        	l32i	a8, a8, 4
400d5b00:	ff3816        	beqz	a8, 400d5af7 <main_task+0x3>
400d5b03:	04faa5        	call8	400daaac <heap_caps_enable_nonos_stack_heaps>
400d5b06:	01a0b2        	movi	a11, 1
400d5b09:	05a0a2        	movi	a10, 5
400d5b0c:	010ba5        	call8	400d6bc8 <esp_task_wdt_init>
400d5b0f:	da8c      	beqz.n	a10, 400d5b20 <main_task+0x2c>
400d5b11:	e97ee1        	l32r	a14, 400d010c <_flash_cache_start+0xf4>
400d5b14:	e97fd1        	l32r	a13, 400d0110 <_flash_cache_start+0xf8>
400d5b17:	e2a1c2        	movi	a12, 0x1e2
400d5b1a:	e97eb1        	l32r	a11, 400d0114 <_flash_cache_start+0xfc>
400d5b1d:	b5b265        	call8	4008b644 <_esp_error_check_failed>
400d5b20:	0a0c      	movi.n	a10, 0
400d5b22:	b2b2a5        	call8	4008864c <xTaskGetIdleTaskHandleForCPU>
400d5b25:	2a9c      	beqz.n	a10, 400d5b3b <main_task+0x47>
400d5b27:	012d65        	call8	400d6dfc <esp_task_wdt_add>
400d5b2a:	da8c      	beqz.n	a10, 400d5b3b <main_task+0x47>
400d5b2c:	e97be1        	l32r	a14, 400d0118 <_flash_cache_start+0x100>
400d5b2f:	e978d1        	l32r	a13, 400d0110 <_flash_cache_start+0xf8>
400d5b32:	eba1c2        	movi	a12, 0x1eb
400d5b35:	e977b1        	l32r	a11, 400d0114 <_flash_cache_start+0xfc>
400d5b38:	b5b0a5        	call8	4008b644 <_esp_error_check_failed>
400d5b3b:	b61f65        	call8	4008bd30 <rtc_wdt_disable>
400d5b3e:	15ac65        	call8	400eb604 <app_main>
400d5b41:	0a0c      	movi.n	a10, 0
400d5b43:	b34265        	call8	40088f68 <vTaskDelete>
400d5b46:	f01d      	retw.n

400d5b48 <intr_matrix_clear>:
400d5b48:	004136        	entry	a1, 32
400d5b4b:	020c      	movi.n	a2, 0
400d5b4d:	000646        	j	400d5b6a <intr_matrix_clear+0x22>
400d5b50:	6c0c      	movi.n	a12, 6
400d5b52:	02bd      	mov.n	a11, a2
400d5b54:	0a0c      	movi.n	a10, 0
400d5b56:	e97181        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d5b59:	0008e0        	callx8	a8
400d5b5c:	6c0c      	movi.n	a12, 6
400d5b5e:	02bd      	mov.n	a11, a2
400d5b60:	1a0c      	movi.n	a10, 1
400d5b62:	e96e81        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d5b65:	0008e0        	callx8	a8
400d5b68:	221b      	addi.n	a2, a2, 1
400d5b6a:	484c      	movi.n	a8, 68
400d5b6c:	e0a827        	bge	a8, a2, 400d5b50 <intr_matrix_clear+0x8>
400d5b6f:	f01d      	retw.n
400d5b71:	000000        	ill

400d5b74 <do_global_ctors>:
400d5b74:	004136        	entry	a1, 32
400d5b77:	e96bb1        	l32r	a11, 400d0124 <_flash_cache_start+0x10c>
400d5b7a:	e96ba1        	l32r	a10, 400d0128 <_flash_cache_start+0x110>
400d5b7d:	ffcfa5        	call8	400d5878 <__register_frame_info>
400d5b80:	e96821        	l32r	a2, 400d0120 <_flash_cache_start+0x108>
400d5b83:	000286        	j	400d5b91 <do_global_ctors+0x1d>
400d5b86:	000000        	ill
400d5b89:	0288      	l32i.n	a8, a2, 0
400d5b8b:	0008e0        	callx8	a8
400d5b8e:	fcc222        	addi	a2, a2, -4
400d5b91:	e96681        	l32r	a8, 400d012c <_flash_cache_start+0x114>
400d5b94:	f1b287        	bgeu	a2, a8, 400d5b89 <do_global_ctors+0x15>
400d5b97:	f01d      	retw.n
400d5b99:	000000        	ill

400d5b9c <wdt_reset_cpu1_info_enable>:
400d5b9c:	004136        	entry	a1, 32
400d5b9f:	e96421        	l32r	a2, 400d0130 <_flash_cache_start+0x118>
400d5ba2:	20a220        	or	a10, a2, a2
400d5ba5:	abda25        	call8	40081948 <esp_dport_access_reg_read>
400d5ba8:	01a182        	movi	a8, 0x101
400d5bab:	20aa80        	or	a10, a10, a8
400d5bae:	0020c0        	memw
400d5bb1:	0062a2        	s32i	a10, a2, 0
400d5bb4:	02ad      	mov.n	a10, a2
400d5bb6:	abd925        	call8	40081948 <esp_dport_access_reg_read>
400d5bb9:	e87c      	movi.n	a8, -2
400d5bbb:	10aa80        	and	a10, a10, a8
400d5bbe:	0020c0        	memw
400d5bc1:	02a9      	s32i.n	a10, a2, 0
400d5bc3:	f01d      	retw.n
400d5bc5:	000000        	ill

400d5bc8 <select_rtc_slow_clk>:
400d5bc8:	004136        	entry	a1, 32
400d5bcb:	143020        	extui	a3, a2, 0, 2
400d5bce:	2b1366        	bnei	a3, 1, 400d5bfd <select_rtc_slow_clk+0x35>
400d5bd1:	091266        	bnei	a2, 1, 400d5bde <select_rtc_slow_clk+0x16>
400d5bd4:	1a0c      	movi.n	a10, 1
400d5bd6:	b6b965        	call8	4008c76c <rtc_clk_32k_enable>
400d5bd9:	000306        	j	400d5be9 <select_rtc_slow_clk+0x21>
400d5bdc:	0c0000        	lsi	f0, a0, 48
400d5bdf:	8798      	l32i.n	a9, a7, 32
400d5be1:	100592        	l8ui	a9, a5, 16
400d5be4:	e52011        	l32r	a1, 400cf064 <_rtc_text_end+0xf064>
400d5be7:	b6bc      	beqz.n	a6, 400d5c26 <esp_clk_init+0x2>
400d5be9:	00a4b2        	movi	a11, 0x400
400d5bec:	2a0c      	movi.n	a10, 2
400d5bee:	b68da5        	call8	4008c4c8 <rtc_clk_cal>
400d5bf1:	e95081        	l32r	a8, 400d0134 <_flash_cache_start+0x11c>
400d5bf4:	14b8a7        	bgeu	a8, a10, 400d5c0c <select_rtc_slow_clk+0x44>
400d5bf7:	0004c6        	j	400d5c0e <select_rtc_slow_clk+0x46>
400d5bfa:	000000        	ill
400d5bfd:	0d2366        	bnei	a3, 2, 400d5c0e <select_rtc_slow_clk+0x46>
400d5c00:	1b0c      	movi.n	a11, 1
400d5c02:	20abb0        	or	a10, a11, a11
400d5c05:	b6bbe5        	call8	4008c7c4 <rtc_clk_8m_enable>
400d5c08:	000086        	j	400d5c0e <select_rtc_slow_clk+0x46>
400d5c0b:	030c00        	rsr.scompare1	a0
400d5c0e:	20a330        	or	a10, a3, a3
400d5c11:	b6c665        	call8	4008c878 <rtc_clk_slow_freq_set>
400d5c14:	00a4b2        	movi	a11, 0x400
400d5c17:	0a0c      	movi.n	a10, 0
400d5c19:	b68ae5        	call8	4008c4c8 <rtc_clk_cal>
400d5c1c:	faea16        	beqz	a10, 400d5bce <select_rtc_slow_clk+0x6>
400d5c1f:	13f725        	call8	400e9b90 <esp_clk_slowclk_cal_set>
400d5c22:	f01d      	retw.n

400d5c24 <esp_clk_init>:
400d5c24:	008136        	entry	a1, 64
400d5c27:	e94421        	l32r	a2, 400d0138 <_flash_cache_start+0x120>
400d5c2a:	0022a2        	l32i	a10, a2, 0
400d5c2d:	b620a5        	call8	4008be38 <rtc_init>
400d5c30:	b6e8a5        	call8	4008cabc <rtc_clk_xtal_freq_get>
400d5c33:	00ea56        	bnez	a10, 400d5c45 <esp_clk_init+0x21>
400d5c36:	e941d1        	l32r	a13, 400d013c <_flash_cache_start+0x124>
400d5c39:	e941c1        	l32r	a12, 400d0140 <_flash_cache_start+0x128>
400d5c3c:	58a0b2        	movi	a11, 88
400d5c3f:	e941a1        	l32r	a10, 400d0144 <_flash_cache_start+0x12c>
400d5c42:	052965        	call8	400daed8 <__assert_func>
400d5c45:	01a0a2        	movi	a10, 1
400d5c48:	b6cba5        	call8	4008c904 <rtc_clk_fast_freq_set>
400d5c4b:	b5f3a5        	call8	4008bb84 <rtc_wdt_protect_off>
400d5c4e:	b5fa25        	call8	4008bbf0 <rtc_wdt_feed>
400d5c51:	40a6b2        	movi	a11, 0x640
400d5c54:	00a0a2        	movi	a10, 0
400d5c57:	b5fc65        	call8	4008bc1c <rtc_wdt_set_time>
400d5c5a:	b5f3a5        	call8	4008bb94 <rtc_wdt_protect_on>
400d5c5d:	0a0c      	movi.n	a10, 0
400d5c5f:	fff6a5        	call8	400d5bc8 <select_rtc_slow_clk>
400d5c62:	b5f225        	call8	4008bb84 <rtc_wdt_protect_off>
400d5c65:	b5f8a5        	call8	4008bbf0 <rtc_wdt_feed>
400d5c68:	e938b1        	l32r	a11, 400d0148 <_flash_cache_start+0x130>
400d5c6b:	0a0c      	movi.n	a10, 0
400d5c6d:	b5fae5        	call8	4008bc1c <rtc_wdt_set_time>
400d5c70:	b5f225        	call8	4008bb94 <rtc_wdt_protect_on>
400d5c73:	20a110        	or	a10, a1, a1
400d5c76:	b6ee25        	call8	4008cb58 <rtc_clk_cpu_freq_get_config>
400d5c79:	3128      	l32i.n	a2, a1, 12
400d5c7b:	10c1b2        	addi	a11, a1, 16
400d5c7e:	f0a0a2        	movi	a10, 240
400d5c81:	b6e725        	call8	4008caf4 <rtc_clk_cpu_freq_mhz_to_config>
400d5c84:	dacc      	bnez.n	a10, 400d5c95 <esp_clk_init+0x71>
400d5c86:	e931d1        	l32r	a13, 400d014c <_flash_cache_start+0x134>
400d5c89:	e92dc1        	l32r	a12, 400d0140 <_flash_cache_start+0x128>
400d5c8c:	81a0b2        	movi	a11, 129
400d5c8f:	e92da1        	l32r	a10, 400d0144 <_flash_cache_start+0x12c>
400d5c92:	052465        	call8	400daed8 <__assert_func>
400d5c95:	e92e81        	l32r	a8, 400d0150 <_flash_cache_start+0x138>
400d5c98:	0020c0        	memw
400d5c9b:	0898      	l32i.n	a9, a8, 0
400d5c9d:	e92d81        	l32r	a8, 400d0154 <_flash_cache_start+0x13c>
400d5ca0:	f18987        	bany	a9, a8, 400d5c95 <esp_clk_init+0x71>
400d5ca3:	10c1a2        	addi	a10, a1, 16
400d5ca6:	b713e5        	call8	4008cde4 <rtc_clk_cpu_freq_set_config>
400d5ca9:	03ea90        	rsr.ccount	a9
400d5cac:	1189c0        	slli	a8, a9, 4
400d5caf:	c09890        	sub	a9, a8, a9
400d5cb2:	1189c0        	slli	a8, a9, 4
400d5cb5:	c28820        	quou	a8, a8, a2
400d5cb8:	13ea80        	wsr.ccount	a8
400d5cbb:	f01d      	retw.n
400d5cbd:	000000        	ill

400d5cc0 <esp_perip_clk_init>:
400d5cc0:	004136        	entry	a1, 32
400d5cc3:	0a0c      	movi.n	a10, 0
400d5cc5:	e92f81        	l32r	a8, 400d0184 <_flash_cache_start+0x16c>
400d5cc8:	0008e0        	callx8	a8
400d5ccb:	0a2d      	mov.n	a2, a10
400d5ccd:	1a0c      	movi.n	a10, 1
400d5ccf:	e92d81        	l32r	a8, 400d0184 <_flash_cache_start+0x16c>
400d5cd2:	0008e0        	callx8	a8
400d5cd5:	f5c222        	addi	a2, a2, -11
400d5cd8:	0532b6        	bltui	a2, 3, 400d5ce1 <esp_perip_clk_init+0x21>
400d5cdb:	f5caa2        	addi	a10, a10, -11
400d5cde:	203af6        	bgeui	a10, 3, 400d5d02 <esp_perip_clk_init+0x42>
400d5ce1:	e91fa1        	l32r	a10, 400d0160 <_flash_cache_start+0x148>
400d5ce4:	abc625        	call8	40081948 <esp_dport_access_reg_read>
400d5ce7:	ffaf32        	movi	a3, -1
400d5cea:	3023a0        	xor	a2, a3, a10
400d5ced:	e91da1        	l32r	a10, 400d0164 <_flash_cache_start+0x14c>
400d5cf0:	abc565        	call8	40081948 <esp_dport_access_reg_read>
400d5cf3:	3053a0        	xor	a5, a3, a10
400d5cf6:	e91ca1        	l32r	a10, 400d0168 <_flash_cache_start+0x150>
400d5cf9:	abc4e5        	call8	40081948 <esp_dport_access_reg_read>
400d5cfc:	3033a0        	xor	a3, a3, a10
400d5cff:	0001c6        	j	400d5d0a <esp_perip_clk_init+0x4a>
400d5d02:	e91531        	l32r	a3, 400d0158 <_flash_cache_start+0x140>
400d5d05:	f50c      	movi.n	a5, 15
400d5d07:	e91521        	l32r	a2, 400d015c <_flash_cache_start+0x144>
400d5d0a:	e918a1        	l32r	a10, 400d016c <_flash_cache_start+0x154>
400d5d0d:	2022a0        	or	a2, a2, a10
400d5d10:	e91861        	l32r	a6, 400d0170 <_flash_cache_start+0x158>
400d5d13:	06ad      	mov.n	a10, a6
400d5d15:	abc325        	call8	40081948 <esp_dport_access_reg_read>
400d5d18:	e91741        	l32r	a4, 400d0174 <_flash_cache_start+0x15c>
400d5d1b:	20aa40        	or	a10, a10, a4
400d5d1e:	0020c0        	memw
400d5d21:	06a9      	s32i.n	a10, a6, 0
400d5d23:	f03d      	nop.n
400d5d25:	f03d      	nop.n
400d5d27:	f03d      	nop.n
400d5d29:	f03d      	nop.n
400d5d2b:	e91361        	l32r	a6, 400d0178 <_flash_cache_start+0x160>
400d5d2e:	06ad      	mov.n	a10, a6
400d5d30:	abc165        	call8	40081948 <esp_dport_access_reg_read>
400d5d33:	20aa40        	or	a10, a10, a4
400d5d36:	0020c0        	memw
400d5d39:	06a9      	s32i.n	a10, a6, 0
400d5d3b:	f03d      	nop.n
400d5d3d:	f03d      	nop.n
400d5d3f:	f03d      	nop.n
400d5d41:	f03d      	nop.n
400d5d43:	e90761        	l32r	a6, 400d0160 <_flash_cache_start+0x148>
400d5d46:	06ad      	mov.n	a10, a6
400d5d48:	abbfe5        	call8	40081948 <esp_dport_access_reg_read>
400d5d4b:	f47c      	movi.n	a4, -1
400d5d4d:	308420        	xor	a8, a4, a2
400d5d50:	10a8a0        	and	a10, a8, a10
400d5d53:	0020c0        	memw
400d5d56:	06a9      	s32i.n	a10, a6, 0
400d5d58:	f03d      	nop.n
400d5d5a:	f03d      	nop.n
400d5d5c:	f03d      	nop.n
400d5d5e:	f03d      	nop.n
400d5d60:	e90761        	l32r	a6, 400d017c <_flash_cache_start+0x164>
400d5d63:	06ad      	mov.n	a10, a6
400d5d65:	abbe25        	call8	40081948 <esp_dport_access_reg_read>
400d5d68:	20a2a0        	or	a10, a2, a10
400d5d6b:	0020c0        	memw
400d5d6e:	06a9      	s32i.n	a10, a6, 0
400d5d70:	f03d      	nop.n
400d5d72:	f03d      	nop.n
400d5d74:	f03d      	nop.n
400d5d76:	f03d      	nop.n
400d5d78:	e8fb61        	l32r	a6, 400d0164 <_flash_cache_start+0x14c>
400d5d7b:	06ad      	mov.n	a10, a6
400d5d7d:	abbca5        	call8	40081948 <esp_dport_access_reg_read>
400d5d80:	302450        	xor	a2, a4, a5
400d5d83:	10a2a0        	and	a10, a2, a10
400d5d86:	0020c0        	memw
400d5d89:	06a9      	s32i.n	a10, a6, 0
400d5d8b:	f03d      	nop.n
400d5d8d:	f03d      	nop.n
400d5d8f:	f03d      	nop.n
400d5d91:	f03d      	nop.n
400d5d93:	e8fb21        	l32r	a2, 400d0180 <_flash_cache_start+0x168>
400d5d96:	02ad      	mov.n	a10, a2
400d5d98:	abbae5        	call8	40081948 <esp_dport_access_reg_read>
400d5d9b:	20a5a0        	or	a10, a5, a10
400d5d9e:	0020c0        	memw
400d5da1:	02a9      	s32i.n	a10, a2, 0
400d5da3:	f03d      	nop.n
400d5da5:	f03d      	nop.n
400d5da7:	f03d      	nop.n
400d5da9:	0020f0        	nop
400d5dac:	e8ef51        	l32r	a5, 400d0168 <_flash_cache_start+0x150>
400d5daf:	05ad      	mov.n	a10, a5
400d5db1:	abb965        	call8	40081948 <esp_dport_access_reg_read>
400d5db4:	302430        	xor	a2, a4, a3
400d5db7:	10aa20        	and	a10, a10, a2
400d5dba:	0020c0        	memw
400d5dbd:	05a9      	s32i.n	a10, a5, 0
400d5dbf:	aa1c      	movi.n	a10, 26
400d5dc1:	13a265        	call8	400e97e8 <periph_module_enable>
400d5dc4:	f01d      	retw.n
	...

400d5dc8 <esp_crosscore_int_init>:
400d5dc8:	004136        	entry	a1, 32
400d5dcb:	e8ef21        	l32r	a2, 400d0188 <_flash_cache_start+0x170>
400d5dce:	20a220        	or	a10, a2, a2
400d5dd1:	b2cbe5        	call8	40088a90 <vTaskEnterCritical>
400d5dd4:	03eb80        	rsr.prid	a8
400d5dd7:	048d80        	extui	a8, a8, 13, 1
400d5dda:	e8ec91        	l32r	a9, 400d018c <_flash_cache_start+0x174>
400d5ddd:	a08890        	addx4	a8, a8, a9
400d5de0:	090c      	movi.n	a9, 0
400d5de2:	0020c0        	memw
400d5de5:	0899      	s32i.n	a9, a8, 0
400d5de7:	02ad      	mov.n	a10, a2
400d5de9:	b2de65        	call8	40088bd0 <vTaskExitCritical>
400d5dec:	03eb20        	rsr.prid	a2
400d5def:	042d20        	extui	a2, a2, 13, 1
400d5df2:	42dc      	bnez.n	a2, 400d5e0a <esp_crosscore_int_init+0x42>
400d5df4:	0e0c      	movi.n	a14, 0
400d5df6:	e8e5d1        	l32r	a13, 400d018c <_flash_cache_start+0x174>
400d5df9:	e8e5c1        	l32r	a12, 400d0190 <_flash_cache_start+0x178>
400d5dfc:	00a4b2        	movi	a11, 0x400
400d5dff:	8a1c      	movi.n	a10, 24
400d5e01:	007165        	call8	400d6518 <esp_intr_alloc>
400d5e04:	000506        	j	400d5e1c <esp_crosscore_int_init+0x54>
400d5e07:	000000        	ill
400d5e0a:	00a0e2        	movi	a14, 0
400d5e0d:	e8e1d1        	l32r	a13, 400d0194 <_flash_cache_start+0x17c>
400d5e10:	e8e0c1        	l32r	a12, 400d0190 <_flash_cache_start+0x178>
400d5e13:	00a4b2        	movi	a11, 0x400
400d5e16:	19a0a2        	movi	a10, 25
400d5e19:	006fe5        	call8	400d6518 <esp_intr_alloc>
400d5e1c:	ca8c      	beqz.n	a10, 400d5e2c <esp_crosscore_int_init+0x64>
400d5e1e:	e8ded1        	l32r	a13, 400d0198 <_flash_cache_start+0x180>
400d5e21:	e8dec1        	l32r	a12, 400d019c <_flash_cache_start+0x184>
400d5e24:	db5c      	movi.n	a11, 93
400d5e26:	e8dea1        	l32r	a10, 400d01a0 <_flash_cache_start+0x188>
400d5e29:	050ae5        	call8	400daed8 <__assert_func>
400d5e2c:	f01d      	retw.n
	...

400d5e30 <insert_vector_desc>:
400d5e30:	004136        	entry	a1, 32
400d5e33:	e8dc81        	l32r	a8, 400d01a4 <_flash_cache_start+0x18c>
400d5e36:	08c8      	l32i.n	a12, a8, 0
400d5e38:	0c8d      	mov.n	a8, a12
400d5e3a:	0b0c      	movi.n	a11, 0
400d5e3c:	000986        	j	400d5e66 <insert_vector_desc+0x36>
400d5e3f:	089800        	lsx	f9, a8, a0
400d5e42:	059090        	extui	a9, a9, 16, 1
400d5e45:	02a8      	l32i.n	a10, a2, 0
400d5e47:	05a0a0        	extui	a10, a10, 16, 1
400d5e4a:	1b2a97        	blt	a10, a9, 400d5e69 <insert_vector_desc+0x39>
400d5e4d:	08a8      	l32i.n	a10, a8, 0
400d5e4f:	0298      	l32i.n	a9, a2, 0
400d5e51:	309a90        	xor	a9, a10, a9
400d5e54:	0af907        	bbsi	a9, 16, 400d5e62 <insert_vector_desc+0x32>
400d5e57:	45a1a0        	extui	a10, a10, 17, 5
400d5e5a:	0298      	l32i.n	a9, a2, 0
400d5e5c:	459190        	extui	a9, a9, 17, 5
400d5e5f:	06aa97        	bge	a10, a9, 400d5e69 <insert_vector_desc+0x39>
400d5e62:	08bd      	mov.n	a11, a8
400d5e64:	2888      	l32i.n	a8, a8, 8
400d5e66:	fd6856        	bnez	a8, 400d5e40 <insert_vector_desc+0x10>
400d5e69:	0c8c      	beqz.n	a12, 400d5e6d <insert_vector_desc+0x3d>
400d5e6b:	fbcc      	bnez.n	a11, 400d5e7e <insert_vector_desc+0x4e>
400d5e6d:	2289      	s32i.n	a8, a2, 8
400d5e6f:	f03d      	nop.n
400d5e71:	f03d      	nop.n
400d5e73:	f03d      	nop.n
400d5e75:	f03d      	nop.n
400d5e77:	e8cb81        	l32r	a8, 400d01a4 <_flash_cache_start+0x18c>
400d5e7a:	0829      	s32i.n	a2, a8, 0
400d5e7c:	f01d      	retw.n
400d5e7e:	2b29      	s32i.n	a2, a11, 8
400d5e80:	2289      	s32i.n	a8, a2, 8
400d5e82:	f01d      	retw.n

400d5e84 <find_desc_for_int>:
400d5e84:	004136        	entry	a1, 32
400d5e87:	e8c781        	l32r	a8, 400d01a4 <_flash_cache_start+0x18c>
400d5e8a:	0888      	l32i.n	a8, a8, 0
400d5e8c:	000486        	j	400d5ea2 <find_desc_for_int+0x1e>
400d5e8f:	089800        	lsx	f9, a8, a0
400d5e92:	059090        	extui	a9, a9, 16, 1
400d5e95:	079937        	bne	a9, a3, 400d5ea0 <find_desc_for_int+0x1c>
400d5e98:	0898      	l32i.n	a9, a8, 0
400d5e9a:	459190        	extui	a9, a9, 17, 5
400d5e9d:	041927        	beq	a9, a2, 400d5ea5 <find_desc_for_int+0x21>
400d5ea0:	2888      	l32i.n	a8, a8, 8
400d5ea2:	fea856        	bnez	a8, 400d5e90 <find_desc_for_int+0xc>
400d5ea5:	082d      	mov.n	a2, a8
400d5ea7:	f01d      	retw.n
400d5ea9:	000000        	ill

400d5eac <int_has_handler>:
400d5eac:	004136        	entry	a1, 32
400d5eaf:	902230        	addx2	a2, a2, a3
400d5eb2:	e8bd31        	l32r	a3, 400d01a8 <_flash_cache_start+0x190>
400d5eb5:	b02230        	addx8	a2, a2, a3
400d5eb8:	0228      	l32i.n	a2, a2, 0
400d5eba:	e8bc81        	l32r	a8, 400d01ac <_flash_cache_start+0x194>
400d5ebd:	c08280        	sub	a8, a2, a8
400d5ec0:	020c      	movi.n	a2, 0
400d5ec2:	190c      	movi.n	a9, 1
400d5ec4:	932980        	movnez	a2, a9, a8
400d5ec7:	f01d      	retw.n
400d5ec9:	000000        	ill

400d5ecc <get_desc_for_int>:
400d5ecc:	004136        	entry	a1, 32
400d5ecf:	20b330        	or	a11, a3, a3
400d5ed2:	02ad      	mov.n	a10, a2
400d5ed4:	fffae5        	call8	400d5e84 <find_desc_for_int>
400d5ed7:	063a56        	bnez	a10, 400d5f3e <get_desc_for_int+0x72>
400d5eda:	e8b5b1        	l32r	a11, 400d01b0 <_flash_cache_start+0x198>
400d5edd:	0ca0a2        	movi	a10, 12
400d5ee0:	ae4325        	call8	40084314 <heap_caps_malloc>
400d5ee3:	0a4d      	mov.n	a4, a10
400d5ee5:	059a16        	beqz	a10, 400d5f42 <get_desc_for_int+0x76>
400d5ee8:	080c      	movi.n	a8, 0
400d5eea:	004a82        	s8i	a8, a10, 0
400d5eed:	014a82        	s8i	a8, a10, 1
400d5ef0:	024a82        	s8i	a8, a10, 2
400d5ef3:	034a82        	s8i	a8, a10, 3
400d5ef6:	044a82        	s8i	a8, a10, 4
400d5ef9:	054a82        	s8i	a8, a10, 5
400d5efc:	064a82        	s8i	a8, a10, 6
400d5eff:	074a82        	s8i	a8, a10, 7
400d5f02:	084a82        	s8i	a8, a10, 8
400d5f05:	094a82        	s8i	a8, a10, 9
400d5f08:	0a4a82        	s8i	a8, a10, 10
400d5f0b:	0b4a82        	s8i	a8, a10, 11
400d5f0e:	0020c0        	memw
400d5f11:	442020        	extui	a2, a2, 0, 5
400d5f14:	0122f0        	slli	a2, a2, 17
400d5f17:	f03d      	nop.n
400d5f19:	f03d      	nop.n
400d5f1b:	0a98      	l32i.n	a9, a10, 0
400d5f1d:	e8a581        	l32r	a8, 400d01b4 <_flash_cache_start+0x19c>
400d5f20:	108980        	and	a8, a9, a8
400d5f23:	208820        	or	a8, a8, a2
400d5f26:	043030        	extui	a3, a3, 0, 1
400d5f29:	112300        	slli	a2, a3, 16
400d5f2c:	e8a331        	l32r	a3, 400d01b8 <_flash_cache_start+0x1a0>
400d5f2f:	103830        	and	a3, a8, a3
400d5f32:	203320        	or	a3, a3, a2
400d5f35:	0a39      	s32i.n	a3, a10, 0
400d5f37:	ffefa5        	call8	400d5e30 <insert_vector_desc>
400d5f3a:	042d      	mov.n	a2, a4
400d5f3c:	f01d      	retw.n
400d5f3e:	0a2d      	mov.n	a2, a10
400d5f40:	f01d      	retw.n
400d5f42:	020c      	movi.n	a2, 0
400d5f44:	f01d      	retw.n
	...

400d5f48 <find_desc_for_source>:
400d5f48:	004136        	entry	a1, 32
400d5f4b:	e89681        	l32r	a8, 400d01a4 <_flash_cache_start+0x18c>
400d5f4e:	08a8      	l32i.n	a10, a8, 0
400d5f50:	001586        	j	400d5faa <find_desc_for_source+0x62>
400d5f53:	1a8200        	sub.s	f8, f2, f0
400d5f56:	e82700        	lsi	f0, a7, 0x3a0
400d5f59:	0a8815        	call4	400e07dc <_vfiprintf_r+0xacc>
400d5f5c:	758680        	extui	a8, a8, 22, 8
400d5f5f:	238800        	sext	a8, a8, 7
400d5f62:	429287        	bne	a2, a8, 400d5fa8 <find_desc_for_source+0x60>
400d5f65:	0a88      	l32i.n	a8, a10, 0
400d5f67:	058080        	extui	a8, a8, 16, 1
400d5f6a:	3a9387        	bne	a3, a8, 400d5fa8 <find_desc_for_source+0x60>
400d5f6d:	000f06        	j	400d5fad <find_desc_for_source+0x65>
400d5f70:	002a82        	l32i	a8, a10, 0
400d5f73:	058080        	extui	a8, a8, 16, 1
400d5f76:	2e9837        	bne	a8, a3, 400d5fa8 <find_desc_for_source+0x60>
400d5f79:	012a92        	l32i	a9, a10, 4
400d5f7c:	01c956        	bnez	a9, 400d5f9c <find_desc_for_source+0x54>
400d5f7f:	e88fd1        	l32r	a13, 400d01bc <_flash_cache_start+0x1a4>
400d5f82:	e88fc1        	l32r	a12, 400d01c0 <_flash_cache_start+0x1a8>
400d5f85:	f9a0b2        	movi	a11, 249
400d5f88:	e88fa1        	l32r	a10, 400d01c4 <_flash_cache_start+0x1ac>
400d5f8b:	04f4e5        	call8	400daed8 <__assert_func>
400d5f8e:	0988      	l32i.n	a8, a9, 0
400d5f90:	748180        	extui	a8, a8, 1, 8
400d5f93:	238800        	sext	a8, a8, 7
400d5f96:	0a1827        	beq	a8, a2, 400d5fa4 <find_desc_for_source+0x5c>
400d5f99:	052992        	l32i	a9, a9, 20
400d5f9c:	fee956        	bnez	a9, 400d5f8e <find_desc_for_source+0x46>
400d5f9f:	080c      	movi.n	a8, 0
400d5fa1:	000046        	j	400d5fa6 <find_desc_for_source+0x5e>
400d5fa4:	180c      	movi.n	a8, 1
400d5fa6:	38cc      	bnez.n	a8, 400d5fad <find_desc_for_source+0x65>
400d5fa8:	2aa8      	l32i.n	a10, a10, 8
400d5faa:	fa6a56        	bnez	a10, 400d5f54 <find_desc_for_source+0xc>
400d5fad:	0a2d      	mov.n	a2, a10
400d5faf:	f01d      	retw.n
400d5fb1:	000000        	ill

400d5fb4 <is_vect_desc_usable>:
400d5fb4:	004136        	entry	a1, 32
400d5fb7:	0022a2        	l32i	a10, a2, 0
400d5fba:	45a1a0        	extui	a10, a10, 17, 5
400d5fbd:	a08a40        	addx4	a8, a10, a4
400d5fc0:	e88291        	l32r	a9, 400d01c8 <_flash_cache_start+0x1b0>
400d5fc3:	a08890        	addx4	a8, a8, a9
400d5fc6:	022882        	l32i	a8, a8, 8
400d5fc9:	021866        	bnei	a8, 1, 400d5fcf <is_vect_desc_usable+0x1b>
400d5fcc:	002506        	j	400d6064 <is_vect_desc_usable+0xb0>
400d5fcf:	052866        	bnei	a8, 2, 400d5fd8 <is_vect_desc_usable+0x24>
400d5fd2:	020566        	bnei	a5, -1, 400d5fd8 <is_vect_desc_usable+0x24>
400d5fd5:	0023c6        	j	400d6068 <is_vect_desc_usable+0xb4>
400d5fd8:	118ac0        	slli	a8, a10, 4
400d5fdb:	e87b91        	l32r	a9, 400d01c8 <_flash_cache_start+0x1b0>
400d5fde:	898a      	add.n	a8, a9, a8
400d5fe0:	0888      	l32i.n	a8, a8, 0
400d5fe2:	02d387        	bbs	a3, a8, 400d5fe8 <is_vect_desc_usable+0x34>
400d5fe5:	0020c6        	j	400d606c <is_vect_desc_usable+0xb8>
400d5fe8:	00a282        	movi	a8, 0x200
400d5feb:	108380        	and	a8, a3, a8
400d5fee:	b88c      	beqz.n	a8, 400d5ffd <is_vect_desc_usable+0x49>
400d5ff0:	119ac0        	slli	a9, a10, 4
400d5ff3:	e87551        	l32r	a5, 400d01c8 <_flash_cache_start+0x1b0>
400d5ff6:	959a      	add.n	a9, a5, a9
400d5ff8:	1958      	l32i.n	a5, a9, 4
400d5ffa:	072516        	beqz	a5, 400d6070 <is_vect_desc_usable+0xbc>
400d5ffd:	b8cc      	bnez.n	a8, 400d600c <is_vect_desc_usable+0x58>
400d5fff:	115ac0        	slli	a5, a10, 4
400d6002:	e87181        	l32r	a8, 400d01c8 <_flash_cache_start+0x1b0>
400d6005:	585a      	add.n	a5, a8, a5
400d6007:	1558      	l32i.n	a5, a5, 4
400d6009:	671526        	beqi	a5, 1, 400d6074 <is_vect_desc_usable+0xc0>
400d600c:	001222        	l16ui	a2, a2, 0
400d600f:	65e207        	bbsi	a2, 0, 400d6078 <is_vect_desc_usable+0xc4>
400d6012:	c50c      	movi.n	a5, 12
400d6014:	105250        	and	a5, a2, a5
400d6017:	0ea566        	bnei	a5, 12, 400d6029 <is_vect_desc_usable+0x75>
400d601a:	e86cd1        	l32r	a13, 400d01cc <_flash_cache_start+0x1b4>
400d601d:	e86cc1        	l32r	a12, 400d01d0 <_flash_cache_start+0x1b8>
400d6020:	5aa1b2        	movi	a11, 0x15a
400d6023:	e868a1        	l32r	a10, 400d01c4 <_flash_cache_start+0x1ac>
400d6026:	04eb25        	call8	400daed8 <__assert_func>
400d6029:	4fe237        	bbsi	a2, 3, 400d607c <is_vect_desc_usable+0xc8>
400d602c:	450c      	movi.n	a5, 4
400d602e:	105250        	and	a5, a2, a5
400d6031:	05ac      	beqz.n	a5, 400d6055 <is_vect_desc_usable+0xa1>
400d6033:	496387        	bbci	a3, 8, 400d6080 <is_vect_desc_usable+0xcc>
400d6036:	00a442        	movi	a4, 0x400
400d6039:	103340        	and	a3, a3, a4
400d603c:	040c      	movi.n	a4, 0
400d603e:	180c      	movi.n	a8, 1
400d6040:	934830        	movnez	a4, a8, a3
400d6043:	743040        	extui	a3, a4, 0, 8
400d6046:	042120        	extui	a2, a2, 1, 1
400d6049:	75bc      	beqz.n	a5, 400d6084 <is_vect_desc_usable+0xd0>
400d604b:	391327        	beq	a3, a2, 400d6088 <is_vect_desc_usable+0xd4>
400d604e:	020c      	movi.n	a2, 0
400d6050:	f01d      	retw.n
400d6052:	000000        	ill
400d6055:	20b440        	or	a11, a4, a4
400d6058:	ffe525        	call8	400d5eac <int_has_handler>
400d605b:	02da16        	beqz	a10, 400d608c <is_vect_desc_usable+0xd8>
400d605e:	00a022        	movi	a2, 0
400d6061:	f01d      	retw.n
400d6063:	020c00        	andb	b0, b12, b0
400d6066:	f01d      	retw.n
400d6068:	020c      	movi.n	a2, 0
400d606a:	f01d      	retw.n
400d606c:	020c      	movi.n	a2, 0
400d606e:	f01d      	retw.n
400d6070:	020c      	movi.n	a2, 0
400d6072:	f01d      	retw.n
400d6074:	020c      	movi.n	a2, 0
400d6076:	f01d      	retw.n
400d6078:	020c      	movi.n	a2, 0
400d607a:	f01d      	retw.n
400d607c:	020c      	movi.n	a2, 0
400d607e:	f01d      	retw.n
400d6080:	020c      	movi.n	a2, 0
400d6082:	f01d      	retw.n
400d6084:	120c      	movi.n	a2, 1
400d6086:	f01d      	retw.n
400d6088:	120c      	movi.n	a2, 1
400d608a:	f01d      	retw.n
400d608c:	120c      	movi.n	a2, 1
400d608e:	f01d      	retw.n

400d6090 <get_available_int>:
400d6090:	008136        	entry	a1, 64
400d6093:	060c      	movi.n	a6, 0
400d6095:	5169      	s32i.n	a6, a1, 20
400d6097:	6169      	s32i.n	a6, a1, 24
400d6099:	7169      	s32i.n	a6, a1, 28
400d609b:	fea062        	movi	a6, 254
400d609e:	048267        	bany	a2, a6, 400d60a6 <get_available_int+0x16>
400d60a1:	e60c      	movi.n	a6, 14
400d60a3:	202260        	or	a2, a2, a6
400d60a6:	20b330        	or	a11, a3, a3
400d60a9:	20a550        	or	a10, a5, a5
400d60ac:	ffe9a5        	call8	400d5f48 <find_desc_for_source>
400d60af:	205aa0        	or	a5, a10, a10
400d60b2:	6aac      	beqz.n	a10, 400d60dc <get_available_int+0x4c>
400d60b4:	0a0426        	beqi	a4, -1, 400d60c2 <get_available_int+0x32>
400d60b7:	0a68      	l32i.n	a6, a10, 0
400d60b9:	456160        	extui	a6, a6, 17, 5
400d60bc:	021467        	beq	a4, a6, 400d60c2 <get_available_int+0x32>
400d60bf:	004886        	j	400d61e5 <get_available_int+0x155>
400d60c2:	20d440        	or	a13, a4, a4
400d60c5:	20c330        	or	a12, a3, a3
400d60c8:	20b220        	or	a11, a2, a2
400d60cb:	05ad      	mov.n	a10, a5
400d60cd:	ffee65        	call8	400d5fb4 <is_vect_desc_usable>
400d60d0:	116a16        	beqz	a10, 400d61ea <get_available_int+0x15a>
400d60d3:	0578      	l32i.n	a7, a5, 0
400d60d5:	457170        	extui	a7, a7, 17, 5
400d60d8:	004586        	j	400d61f2 <get_available_int+0x162>
400d60db:	046600        	extui	a6, a0, 6, 1
400d60de:	3a8602        	lsi	f0, a6, 232
400d60e1:	b33000        	movgez	a3, a0, a0
400d60e4:	a44020        	extui	a4, a2, 0, 11
400d60e7:	d9a520        	lsi	f2, a5, 0x364
400d60ea:	ff          	.byte 0xff
400d60eb:	205aa0        	or	a5, a10, a10
400d60ee:	4adc      	bnez.n	a10, 400d6106 <get_available_int+0x76>
400d60f0:	445040        	extui	a5, a4, 0, 5
400d60f3:	0155f0        	slli	a5, a5, 17
400d60f6:	5178      	l32i.n	a7, a1, 20
400d60f8:	e82f61        	l32r	a6, 400d01b4 <_flash_cache_start+0x19c>
400d60fb:	106760        	and	a6, a7, a6
400d60fe:	205650        	or	a5, a6, a5
400d6101:	5159      	s32i.n	a5, a1, 20
400d6103:	14c152        	addi	a5, a1, 20
400d6106:	20d440        	or	a13, a4, a4
400d6109:	20c330        	or	a12, a3, a3
400d610c:	20b220        	or	a11, a2, a2
400d610f:	05ad      	mov.n	a10, a5
400d6111:	ffea25        	call8	400d5fb4 <is_vect_desc_usable>
400d6114:	0d8a16        	beqz	a10, 400d61f0 <get_available_int+0x160>
400d6117:	0578      	l32i.n	a7, a5, 0
400d6119:	457170        	extui	a7, a7, 17, 5
400d611c:	003486        	j	400d61f2 <get_available_int+0x162>
400d611f:	03bd00        	lsi	f0, a13, 12
400d6122:	05ad      	mov.n	a10, a5
400d6124:	ffd5e5        	call8	400d5e84 <find_desc_for_int>
400d6127:	0a6d      	mov.n	a6, a10
400d6129:	5adc      	bnez.n	a10, 400d6142 <get_available_int+0xb2>
400d612b:	446050        	extui	a6, a5, 0, 5
400d612e:	0186f0        	slli	a8, a6, 17
400d6131:	5198      	l32i.n	a9, a1, 20
400d6133:	e82061        	l32r	a6, 400d01b4 <_flash_cache_start+0x19c>
400d6136:	106960        	and	a6, a9, a6
400d6139:	206680        	or	a6, a6, a8
400d613c:	056162        	s32i	a6, a1, 20
400d613f:	14c162        	addi	a6, a1, 20
400d6142:	20d440        	or	a13, a4, a4
400d6145:	20c330        	or	a12, a3, a3
400d6148:	20b220        	or	a11, a2, a2
400d614b:	06ad      	mov.n	a10, a6
400d614d:	ffe665        	call8	400d5fb4 <is_vect_desc_usable>
400d6150:	074a16        	beqz	a10, 400d61c8 <get_available_int+0x138>
400d6153:	526287        	bbci	a2, 8, 400d61a9 <get_available_int+0x119>
400d6156:	001682        	l16ui	a8, a6, 0
400d6159:	376827        	bbci	a8, 2, 400d6194 <get_available_int+0x104>
400d615c:	1668      	l32i.n	a6, a6, 4
400d615e:	080c      	movi.n	a8, 0
400d6160:	000146        	j	400d6169 <get_available_int+0xd9>
400d6163:	1b0000        	un.s	b0, f0, f0
400d6166:	6888      	l32i.n	a8, a8, 24
400d6168:	865656        	bnez	a6, 400d59d1 <__deregister_frame+0xd>
400d616b:	ff          	.byte 0xff
400d616c:	3168      	l32i.n	a6, a1, 12
400d616e:	0e2867        	blt	a8, a6, 400d6180 <get_available_int+0xf0>
400d6171:	1165c0        	slli	a6, a5, 4
400d6174:	e81591        	l32r	a9, 400d01c8 <_flash_cache_start+0x1b0>
400d6177:	696a      	add.n	a6, a9, a6
400d6179:	0668      	l32i.n	a6, a6, 0
400d617b:	2198      	l32i.n	a9, a1, 8
400d617d:	47a697        	bge	a6, a9, 400d61c8 <get_available_int+0x138>
400d6180:	1165c0        	slli	a6, a5, 4
400d6183:	e81171        	l32r	a7, 400d01c8 <_flash_cache_start+0x1b0>
400d6186:	676a      	add.n	a6, a7, a6
400d6188:	0668      	l32i.n	a6, a6, 0
400d618a:	2169      	s32i.n	a6, a1, 8
400d618c:	3189      	s32i.n	a8, a1, 12
400d618e:	057d      	mov.n	a7, a5
400d6190:	000d06        	j	400d61c8 <get_available_int+0x138>
400d6193:	076600        	lsi	f0, a6, 28
400d6196:	65c030        	extui	a12, a3, 16, 7
400d6199:	0b8111        	l32r	a1, 40098fa0 <_iram_end+0xb44c>
400d619c:	6ae8      	l32i.n	a14, a10, 24
400d619e:	6868      	l32i.n	a6, a8, 24
400d61a0:	218806        	j	400de7c4 <_svfprintf_r+0x20a0>
400d61a3:	152687        	blt	a6, a8, 400d61bc <get_available_int+0x12c>
400d61a6:	000786        	j	400d61c8 <get_available_int+0x138>
400d61a9:	1165c0        	slli	a6, a5, 4
400d61ac:	e80781        	l32r	a8, 400d01c8 <_flash_cache_start+0x1b0>
400d61af:	686a      	add.n	a6, a8, a6
400d61b1:	0668      	l32i.n	a6, a6, 0
400d61b3:	2198      	l32i.n	a9, a1, 8
400d61b5:	0b2697        	blt	a6, a9, 400d61c4 <get_available_int+0x134>
400d61b8:	000306        	j	400d61c8 <get_available_int+0x138>
400d61bb:	216900        	srai	a6, a0, 9
400d61be:	057d      	mov.n	a7, a5
400d61c0:	000106        	j	400d61c8 <get_available_int+0x138>
400d61c3:	216900        	srai	a6, a0, 9
400d61c6:	057d      	mov.n	a7, a5
400d61c8:	551b      	addi.n	a5, a5, 1
400d61ca:	000306        	j	400d61da <get_available_int+0x14a>
400d61cd:	e7a651        	l32r	a5, 400d0068 <_flash_cache_start+0x50>
400d61d0:	3159      	s32i.n	a5, a1, 12
400d61d2:	960c      	movi.n	a6, 9
400d61d4:	2169      	s32i.n	a6, a1, 8
400d61d6:	f77c      	movi.n	a7, -1
400d61d8:	050c      	movi.n	a5, 0
400d61da:	f61c      	movi.n	a6, 31
400d61dc:	022657        	blt	a6, a5, 400d61e2 <get_available_int+0x152>
400d61df:	ffcf46        	j	400d6120 <get_available_int+0x90>
400d61e2:	000306        	j	400d61f2 <get_available_int+0x162>
400d61e5:	f77c      	movi.n	a7, -1
400d61e7:	0001c6        	j	400d61f2 <get_available_int+0x162>
400d61ea:	f77c      	movi.n	a7, -1
400d61ec:	000086        	j	400d61f2 <get_available_int+0x162>
400d61ef:	f77c00        	lsi	f0, a12, 0x3dc
400d61f2:	072d      	mov.n	a2, a7
400d61f4:	f01d      	retw.n
	...

400d61f8 <esp_intr_alloc_intrstatus>:
400d61f8:	008136        	entry	a1, 64
400d61fb:	00a382        	movi	a8, 0x300
400d61fe:	109380        	and	a9, a3, a8
400d6201:	029987        	bne	a9, a8, 400d6207 <esp_intr_alloc_intrstatus+0xf>
400d6204:	00bb06        	j	400d64f4 <esp_intr_alloc_intrstatus+0x2fc>
400d6207:	f0a082        	movi	a8, 240
400d620a:	020387        	bnone	a3, a8, 400d6210 <esp_intr_alloc_intrstatus+0x18>
400d620d:	2e8656        	bnez	a6, 400d64f9 <esp_intr_alloc_intrstatus+0x301>
400d6210:	00a182        	movi	a8, 0x100
400d6213:	108380        	and	a8, a3, a8
400d6216:	f88c      	beqz.n	a8, 400d6229 <esp_intr_alloc_intrstatus+0x31>
400d6218:	0a0c      	movi.n	a10, 0
400d621a:	01a092        	movi	a9, 1
400d621d:	83a960        	moveqz	a10, a9, a6
400d6220:	059f20        	extui	a9, a2, 31, 1
400d6223:	209a90        	or	a9, a10, a9
400d6226:	2d6956        	bnez	a9, 400d6500 <esp_intr_alloc_intrstatus+0x308>
400d6229:	190c      	movi.n	a9, 1
400d622b:	0a0c      	movi.n	a10, 0
400d622d:	0abd      	mov.n	a11, a10
400d622f:	93b940        	movnez	a11, a9, a4
400d6232:	939a50        	movnez	a9, a10, a5
400d6235:	0209b7        	bnone	a9, a11, 400d623b <esp_intr_alloc_intrstatus+0x43>
400d6238:	00b246        	j	400d6505 <esp_intr_alloc_intrstatus+0x30d>
400d623b:	0d63a7        	bbci	a3, 10, 400d624c <esp_intr_alloc_intrstatus+0x54>
400d623e:	e7e591        	l32r	a9, 400d01d4 <_flash_cache_start+0x1bc>
400d6241:	969a      	add.n	a9, a6, a9
400d6243:	e7e5a1        	l32r	a10, 400d01d8 <_flash_cache_start+0x1c0>
400d6246:	023a97        	bltu	a10, a9, 400d624c <esp_intr_alloc_intrstatus+0x54>
400d6249:	00afc6        	j	400d650c <esp_intr_alloc_intrstatus+0x314>
400d624c:	fea092        	movi	a9, 254
400d624f:	0e8397        	bany	a3, a9, 400d6261 <esp_intr_alloc_intrstatus+0x69>
400d6252:	688c      	beqz.n	a8, 400d625c <esp_intr_alloc_intrstatus+0x64>
400d6254:	280c      	movi.n	a8, 2
400d6256:	203380        	or	a3, a3, a8
400d6259:	000106        	j	400d6261 <esp_intr_alloc_intrstatus+0x69>
400d625c:	e80c      	movi.n	a8, 14
400d625e:	203380        	or	a3, a3, a8
400d6261:	070226        	beqi	a2, -1, 400d626c <esp_intr_alloc_intrstatus+0x74>
400d6264:	f87c      	movi.n	a8, -1
400d6266:	3189      	s32i.n	a8, a1, 12
400d6268:	000106        	j	400d6270 <esp_intr_alloc_intrstatus+0x78>
400d626b:	680c00        	lsi	f0, a12, 0x1a0
400d626e:	3189      	s32i.n	a8, a1, 12
400d6270:	e87c      	movi.n	a8, -2
400d6272:	039287        	bne	a2, a8, 400d6279 <esp_intr_alloc_intrstatus+0x81>
400d6275:	f80c      	movi.n	a8, 15
400d6277:	3189      	s32i.n	a8, a1, 12
400d6279:	d87c      	movi.n	a8, -3
400d627b:	039287        	bne	a2, a8, 400d6282 <esp_intr_alloc_intrstatus+0x8a>
400d627e:	081c      	movi.n	a8, 16
400d6280:	3189      	s32i.n	a8, a1, 12
400d6282:	c87c      	movi.n	a8, -4
400d6284:	049287        	bne	a2, a8, 400d628c <esp_intr_alloc_intrstatus+0x94>
400d6287:	780c      	movi.n	a8, 7
400d6289:	036182        	s32i	a8, a1, 12
400d628c:	b87c      	movi.n	a8, -5
400d628e:	039287        	bne	a2, a8, 400d6295 <esp_intr_alloc_intrstatus+0x9d>
400d6291:	d81c      	movi.n	a8, 29
400d6293:	3189      	s32i.n	a8, a1, 12
400d6295:	a87c      	movi.n	a8, -6
400d6297:	039287        	bne	a2, a8, 400d629e <esp_intr_alloc_intrstatus+0xa6>
400d629a:	b80c      	movi.n	a8, 11
400d629c:	3189      	s32i.n	a8, a1, 12
400d629e:	f03d      	nop.n
400d62a0:	f03d      	nop.n
400d62a2:	f03d      	nop.n
400d62a4:	f03d      	nop.n
400d62a6:	e7c2b1        	l32r	a11, 400d01b0 <_flash_cache_start+0x198>
400d62a9:	08a0a2        	movi	a10, 8
400d62ac:	ae0665        	call8	40084314 <heap_caps_malloc>
400d62af:	41a9      	s32i.n	a10, a1, 16
400d62b1:	25ca16        	beqz	a10, 400d6511 <esp_intr_alloc_intrstatus+0x319>
400d62b4:	f03d      	nop.n
400d62b6:	f03d      	nop.n
400d62b8:	f03d      	nop.n
400d62ba:	f03d      	nop.n
400d62bc:	e7c8a1        	l32r	a10, 400d01dc <_flash_cache_start+0x1c4>
400d62bf:	b27d25        	call8	40088a90 <vTaskEnterCritical>
400d62c2:	03eb80        	rsr.prid	a8
400d62c5:	048d80        	extui	a8, a8, 13, 1
400d62c8:	6189      	s32i.n	a8, a1, 24
400d62ca:	02dd      	mov.n	a13, a2
400d62cc:	f03d      	nop.n
400d62ce:	f03d      	nop.n
400d62d0:	f03d      	nop.n
400d62d2:	31c8      	l32i.n	a12, a1, 12
400d62d4:	08bd      	mov.n	a11, a8
400d62d6:	03ad      	mov.n	a10, a3
400d62d8:	ffdb65        	call8	400d6090 <get_available_int>
400d62db:	51a9      	s32i.n	a10, a1, 20
400d62dd:	1b0a66        	bnei	a10, -1, 400d62fc <esp_intr_alloc_intrstatus+0x104>
400d62e0:	f03d      	nop.n
400d62e2:	f03d      	nop.n
400d62e4:	f03d      	nop.n
400d62e6:	f03d      	nop.n
400d62e8:	e7bda1        	l32r	a10, 400d01dc <_flash_cache_start+0x1c4>
400d62eb:	b28e65        	call8	40088bd0 <vTaskExitCritical>
400d62ee:	41a8      	l32i.n	a10, a1, 16
400d62f0:	e76981        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d62f3:	0008e0        	callx8	a8
400d62f6:	05a122        	movi	a2, 0x105
400d62f9:	f01d      	retw.n
400d62fb:	21b200        	srai	a11, a0, 2
400d62fe:	21a206        	j	400de98a <_svfprintf_r+0x2266>
400d6301:	bca505        	call0	40092d54 <_iram_end+0x5200>
400d6304:	ff          	.byte 0xff
400d6305:	31a9      	s32i.n	a10, a1, 12
400d6307:	aadc      	bnez.n	a10, 400d6325 <esp_intr_alloc_intrstatus+0x12d>
400d6309:	f03d      	nop.n
400d630b:	f03d      	nop.n
400d630d:	f03d      	nop.n
400d630f:	0020f0        	nop
400d6312:	e7b2a1        	l32r	a10, 400d01dc <_flash_cache_start+0x1c4>
400d6315:	b28ba5        	call8	40088bd0 <vTaskExitCritical>
400d6318:	41a8      	l32i.n	a10, a1, 16
400d631a:	e75e81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d631d:	0008e0        	callx8	a8
400d6320:	01a122        	movi	a2, 0x101
400d6323:	f01d      	retw.n
400d6325:	02e387        	bbsi	a3, 8, 400d632b <esp_intr_alloc_intrstatus+0x133>
400d6328:	002906        	j	400d63d0 <esp_intr_alloc_intrstatus+0x1d8>
400d632b:	8a1c      	movi.n	a10, 24
400d632d:	e76f81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d6330:	0008e0        	callx8	a8
400d6333:	71a9      	s32i.n	a10, a1, 28
400d6335:	9adc      	bnez.n	a10, 400d6352 <esp_intr_alloc_intrstatus+0x15a>
400d6337:	f03d      	nop.n
400d6339:	f03d      	nop.n
400d633b:	f03d      	nop.n
400d633d:	f03d      	nop.n
400d633f:	e7a7a1        	l32r	a10, 400d01dc <_flash_cache_start+0x1c4>
400d6342:	b288e5        	call8	40088bd0 <vTaskExitCritical>
400d6345:	41a8      	l32i.n	a10, a1, 16
400d6347:	e75381        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d634a:	0008e0        	callx8	a8
400d634d:	01a122        	movi	a2, 0x101
400d6350:	f01d      	retw.n
400d6352:	18a0c2        	movi	a12, 24
400d6355:	00a0b2        	movi	a11, 0
400d6358:	0721a2        	l32i	a10, a1, 28
400d635b:	e74681        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d635e:	0008e0        	callx8	a8
400d6361:	7188      	l32i.n	a8, a1, 28
400d6363:	1849      	s32i.n	a4, a8, 4
400d6365:	2859      	s32i.n	a5, a8, 8
400d6367:	3869      	s32i.n	a6, a8, 12
400d6369:	4879      	s32i.n	a7, a8, 16
400d636b:	f03d      	nop.n
400d636d:	f03d      	nop.n
400d636f:	f03d      	nop.n
400d6371:	f03d      	nop.n
400d6373:	3158      	l32i.n	a5, a1, 12
400d6375:	1548      	l32i.n	a4, a5, 4
400d6377:	5849      	s32i.n	a4, a8, 20
400d6379:	744020        	extui	a4, a2, 0, 8
400d637c:	1144f0        	slli	a4, a4, 1
400d637f:	f03d      	nop.n
400d6381:	f03d      	nop.n
400d6383:	001862        	l16ui	a6, a8, 0
400d6386:	01ae52        	movi	a5, 0xfffffe01
400d6389:	105650        	and	a5, a6, a5
400d638c:	204540        	or	a4, a5, a4
400d638f:	e57c      	movi.n	a5, -2
400d6391:	104450        	and	a4, a4, a5
400d6394:	005842        	s16i	a4, a8, 0
400d6397:	0020c0        	memw
400d639a:	f03d      	nop.n
400d639c:	f03d      	nop.n
400d639e:	f03d      	nop.n
400d63a0:	f03d      	nop.n
400d63a2:	3168      	l32i.n	a6, a1, 12
400d63a4:	1689      	s32i.n	a8, a6, 4
400d63a6:	f03d      	nop.n
400d63a8:	f03d      	nop.n
400d63aa:	f03d      	nop.n
400d63ac:	f03d      	nop.n
400d63ae:	001652        	l16ui	a5, a6, 0
400d63b1:	440c      	movi.n	a4, 4
400d63b3:	204540        	or	a4, a5, a4
400d63b6:	005642        	s16i	a4, a6, 0
400d63b9:	0020c0        	memw
400d63bc:	06cd      	mov.n	a12, a6
400d63be:	f03d      	nop.n
400d63c0:	f03d      	nop.n
400d63c2:	f03d      	nop.n
400d63c4:	e787b1        	l32r	a11, 400d01e0 <_flash_cache_start+0x1c8>
400d63c7:	51a8      	l32i.n	a10, a1, 20
400d63c9:	b109e5        	call8	40087468 <xt_set_interrupt_handler>
400d63cc:	001006        	j	400d6410 <esp_intr_alloc_intrstatus+0x218>
400d63cf:	840c00        	extui	a0, a0, 12, 9
400d63d2:	3158      	l32i.n	a5, a1, 12
400d63d4:	005542        	s16i	a4, a5, 0
400d63d7:	0020c0        	memw
400d63da:	b68c      	beqz.n	a6, 400d63e9 <esp_intr_alloc_intrstatus+0x1f1>
400d63dc:	07cd      	mov.n	a12, a7
400d63de:	06bd      	mov.n	a11, a6
400d63e0:	f03d      	nop.n
400d63e2:	f03d      	nop.n
400d63e4:	51a8      	l32i.n	a10, a1, 20
400d63e6:	b10825        	call8	40087468 <xt_set_interrupt_handler>
400d63e9:	0c6397        	bbci	a3, 9, 400d63f9 <esp_intr_alloc_intrstatus+0x201>
400d63ec:	1a0c      	movi.n	a10, 1
400d63ee:	5168      	l32i.n	a6, a1, 20
400d63f0:	401600        	ssl	a6
400d63f3:	a1aa00        	sll	a10, a10
400d63f6:	b6c265        	call8	4008d01c <xthal_set_intclear>
400d63f9:	744020        	extui	a4, a2, 0, 8
400d63fc:	0144a0        	slli	a4, a4, 22
400d63ff:	3158      	l32i.n	a5, a1, 12
400d6401:	0568      	l32i.n	a6, a5, 0
400d6403:	e77851        	l32r	a5, 400d01e4 <_flash_cache_start+0x1cc>
400d6406:	105650        	and	a5, a6, a5
400d6409:	204540        	or	a4, a5, a4
400d640c:	3168      	l32i.n	a6, a1, 12
400d640e:	0649      	s32i.n	a4, a6, 0
400d6410:	4263a7        	bbci	a3, 10, 400d6456 <esp_intr_alloc_intrstatus+0x25e>
400d6413:	f03d      	nop.n
400d6415:	f03d      	nop.n
400d6417:	f03d      	nop.n
400d6419:	f03d      	nop.n
400d641b:	3148      	l32i.n	a4, a1, 12
400d641d:	001452        	l16ui	a5, a4, 0
400d6420:	240c      	movi.n	a4, 2
400d6422:	204540        	or	a4, a5, a4
400d6425:	3158      	l32i.n	a5, a1, 12
400d6427:	005542        	s16i	a4, a5, 0
400d642a:	0020c0        	memw
400d642d:	140c      	movi.n	a4, 1
400d642f:	f03d      	nop.n
400d6431:	f03d      	nop.n
400d6433:	f03d      	nop.n
400d6435:	5168      	l32i.n	a6, a1, 20
400d6437:	401600        	ssl	a6
400d643a:	a14400        	sll	a4, a4
400d643d:	f57c      	movi.n	a5, -1
400d643f:	304540        	xor	a4, a5, a4
400d6442:	e76951        	l32r	a5, 400d01e8 <_flash_cache_start+0x1d0>
400d6445:	6168      	l32i.n	a6, a1, 24
400d6447:	a05650        	addx4	a5, a6, a5
400d644a:	0568      	l32i.n	a6, a5, 0
400d644c:	104640        	and	a4, a6, a4
400d644f:	0549      	s32i.n	a4, a5, 0
400d6451:	000c86        	j	400d6487 <esp_intr_alloc_intrstatus+0x28f>
400d6454:	480000        	ssx	f0, a0, a0
400d6457:	145231        	l32r	a3, 4009b5a0 <_iram_end+0xda4c>
400d645a:	d47c00        	extui	a7, a0, 12, 14
400d645d:	104540        	and	a4, a5, a4
400d6460:	3158      	l32i.n	a5, a1, 12
400d6462:	005542        	s16i	a4, a5, 0
400d6465:	0020c0        	memw
400d6468:	140c      	movi.n	a4, 1
400d646a:	f03d      	nop.n
400d646c:	f03d      	nop.n
400d646e:	f03d      	nop.n
400d6470:	5168      	l32i.n	a6, a1, 20
400d6472:	401600        	ssl	a6
400d6475:	a14400        	sll	a4, a4
400d6478:	e75c51        	l32r	a5, 400d01e8 <_flash_cache_start+0x1d0>
400d647b:	6168      	l32i.n	a6, a1, 24
400d647d:	a05650        	addx4	a5, a6, a5
400d6480:	0568      	l32i.n	a6, a5, 0
400d6482:	204640        	or	a4, a6, a4
400d6485:	0549      	s32i.n	a4, a5, 0
400d6487:	013296        	bltz	a2, 400d649e <esp_intr_alloc_intrstatus+0x2a6>
400d648a:	f03d      	nop.n
400d648c:	f03d      	nop.n
400d648e:	f03d      	nop.n
400d6490:	f03d      	nop.n
400d6492:	51c8      	l32i.n	a12, a1, 20
400d6494:	02bd      	mov.n	a11, a2
400d6496:	61a8      	l32i.n	a10, a1, 24
400d6498:	e72181        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d649b:	0008e0        	callx8	a8
400d649e:	032142        	l32i	a4, a1, 12
400d64a1:	042122        	l32i	a2, a1, 16
400d64a4:	0249      	s32i.n	a4, a2, 0
400d64a6:	f03d      	nop.n
400d64a8:	f03d      	nop.n
400d64aa:	f03d      	nop.n
400d64ac:	f03d      	nop.n
400d64ae:	1428      	l32i.n	a2, a4, 4
400d64b0:	4158      	l32i.n	a5, a1, 16
400d64b2:	1529      	s32i.n	a2, a5, 4
400d64b4:	1a0c      	movi.n	a10, 1
400d64b6:	f03d      	nop.n
400d64b8:	f03d      	nop.n
400d64ba:	f03d      	nop.n
400d64bc:	052162        	l32i	a6, a1, 20
400d64bf:	401600        	ssl	a6
400d64c2:	a1aa00        	sll	a10, a10
400d64c5:	b3e665        	call8	4008a32c <xt_ints_on>
400d64c8:	0463b7        	bbci	a3, 11, 400d64d0 <esp_intr_alloc_intrstatus+0x2d8>
400d64cb:	41a8      	l32i.n	a10, a1, 16
400d64cd:	aae8a5        	call8	40081358 <esp_intr_disable>
400d64d0:	e743a1        	l32r	a10, 400d01dc <_flash_cache_start+0x1c4>
400d64d3:	b26fe5        	call8	40088bd0 <vTaskExitCritical>
400d64d6:	102182        	l32i	a8, a1, 64
400d64d9:	009816        	beqz	a8, 400d64e6 <esp_intr_alloc_intrstatus+0x2ee>
400d64dc:	042122        	l32i	a2, a1, 16
400d64df:	006822        	s32i	a2, a8, 0
400d64e2:	020c      	movi.n	a2, 0
400d64e4:	f01d      	retw.n
400d64e6:	41a8      	l32i.n	a10, a1, 16
400d64e8:	e6eb81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d64eb:	0008e0        	callx8	a8
400d64ee:	020c      	movi.n	a2, 0
400d64f0:	f01d      	retw.n
400d64f2:	220000        	orb	b0, b0, b0
400d64f5:	1d02a1        	l32r	a10, 4009d900 <_iram_end+0xfdac>
400d64f8:	a122f0        	lsi	f15, a2, 0x284
400d64fb:	f01d02        	l16ui	a0, a13, 0x1e0
400d64fe:	220000        	orb	b0, b0, b0
400d6501:	1d02a1        	l32r	a10, 4009d90c <_iram_end+0xfdb8>
400d6504:	a122f0        	lsi	f15, a2, 0x284
400d6507:	f01d02        	l16ui	a0, a13, 0x1e0
400d650a:	220000        	orb	b0, b0, b0
400d650d:	1d02a1        	l32r	a10, 4009d918 <_iram_end+0xfdc4>
400d6510:	a122f0        	lsi	f15, a2, 0x284
400d6513:	f01d01        	l32r	a0, 400d2588 <std::allocator<float>::~allocator()+0x8>
	...

400d6518 <esp_intr_alloc>:
400d6518:	006136        	entry	a1, 48
400d651b:	0169      	s32i.n	a6, a1, 0
400d651d:	05fd      	mov.n	a15, a5
400d651f:	04ed      	mov.n	a14, a4
400d6521:	0d0c      	movi.n	a13, 0
400d6523:	0dcd      	mov.n	a12, a13
400d6525:	03bd      	mov.n	a11, a3
400d6527:	02ad      	mov.n	a10, a2
400d6529:	ffcce5        	call8	400d61f8 <esp_intr_alloc_intrstatus>
400d652c:	0a2d      	mov.n	a2, a10
400d652e:	f01d      	retw.n

400d6530 <esp_int_wdt_init>:
400d6530:	004136        	entry	a1, 32
400d6533:	09a0a2        	movi	a10, 9
400d6536:	132b25        	call8	400e97e8 <periph_module_enable>
400d6539:	e72c81        	l32r	a8, 400d01ec <_flash_cache_start+0x1d4>
400d653c:	e72d91        	l32r	a9, 400d01f0 <_flash_cache_start+0x1d8>
400d653f:	0020c0        	memw
400d6542:	196892        	s32i	a9, a8, 100
400d6545:	f03d      	nop.n
400d6547:	f03d      	nop.n
400d6549:	f03d      	nop.n
400d654b:	f03d      	nop.n
400d654d:	0020c0        	memw
400d6550:	1228a2        	l32i	a10, a8, 72
400d6553:	e72891        	l32r	a9, 400d01f4 <_flash_cache_start+0x1dc>
400d6556:	209a90        	or	a9, a10, a9
400d6559:	0020c0        	memw
400d655c:	126892        	s32i	a9, a8, 72
400d655f:	f03d      	nop.n
400d6561:	f03d      	nop.n
400d6563:	f03d      	nop.n
400d6565:	f03d      	nop.n
400d6567:	0020c0        	memw
400d656a:	1228a2        	l32i	a10, a8, 72
400d656d:	e72291        	l32r	a9, 400d01f8 <_flash_cache_start+0x1e0>
400d6570:	209a90        	or	a9, a10, a9
400d6573:	0020c0        	memw
400d6576:	126892        	s32i	a9, a8, 72
400d6579:	f03d      	nop.n
400d657b:	f03d      	nop.n
400d657d:	f03d      	nop.n
400d657f:	f03d      	nop.n
400d6581:	0020c0        	memw
400d6584:	1228a2        	l32i	a10, a8, 72
400d6587:	e6fb91        	l32r	a9, 400d0174 <_flash_cache_start+0x15c>
400d658a:	209a90        	or	a9, a10, a9
400d658d:	0020c0        	memw
400d6590:	126892        	s32i	a9, a8, 72
400d6593:	f03d      	nop.n
400d6595:	f03d      	nop.n
400d6597:	f03d      	nop.n
400d6599:	f03d      	nop.n
400d659b:	0020c0        	memw
400d659e:	1228a2        	l32i	a10, a8, 72
400d65a1:	e71691        	l32r	a9, 400d01fc <_flash_cache_start+0x1e4>
400d65a4:	10aa90        	and	a10, a10, a9
400d65a7:	e6d791        	l32r	a9, 400d0104 <_flash_cache_start+0xec>
400d65aa:	209a90        	or	a9, a10, a9
400d65ad:	0020c0        	memw
400d65b0:	126892        	s32i	a9, a8, 72
400d65b3:	f03d      	nop.n
400d65b5:	f03d      	nop.n
400d65b7:	f03d      	nop.n
400d65b9:	f03d      	nop.n
400d65bb:	0020c0        	memw
400d65be:	1228a2        	l32i	a10, a8, 72
400d65c1:	e70f91        	l32r	a9, 400d0200 <_flash_cache_start+0x1e8>
400d65c4:	209a90        	or	a9, a10, a9
400d65c7:	0020c0        	memw
400d65ca:	126892        	s32i	a9, a8, 72
400d65cd:	f03d      	nop.n
400d65cf:	f03d      	nop.n
400d65d1:	f03d      	nop.n
400d65d3:	f03d      	nop.n
400d65d5:	0020c0        	memw
400d65d8:	1328a2        	l32i	a10, a8, 76
400d65db:	f4a0a0        	extui	a10, a10, 0, 16
400d65de:	e70991        	l32r	a9, 400d0204 <_flash_cache_start+0x1ec>
400d65e1:	209a90        	or	a9, a10, a9
400d65e4:	0020c0        	memw
400d65e7:	136892        	s32i	a9, a8, 76
400d65ea:	f03d      	nop.n
400d65ec:	f03d      	nop.n
400d65ee:	f03d      	nop.n
400d65f0:	f03d      	nop.n
400d65f2:	e70591        	l32r	a9, 400d0208 <_flash_cache_start+0x1f0>
400d65f5:	0020c0        	memw
400d65f8:	146892        	s32i	a9, a8, 80
400d65fb:	0020c0        	memw
400d65fe:	156892        	s32i	a9, a8, 84
400d6601:	f03d      	nop.n
400d6603:	f03d      	nop.n
400d6605:	f03d      	nop.n
400d6607:	f03d      	nop.n
400d6609:	0020c0        	memw
400d660c:	1228a2        	l32i	a10, a8, 72
400d660f:	e69d91        	l32r	a9, 400d0084 <_flash_cache_start+0x6c>
400d6612:	209a90        	or	a9, a10, a9
400d6615:	0020c0        	memw
400d6618:	126892        	s32i	a9, a8, 72
400d661b:	01a0a2        	movi	a10, 1
400d661e:	0020c0        	memw
400d6621:	1868a2        	s32i	a10, a8, 96
400d6624:	00a092        	movi	a9, 0
400d6627:	0020c0        	memw
400d662a:	196892        	s32i	a9, a8, 100
400d662d:	f03d      	nop.n
400d662f:	f03d      	nop.n
400d6631:	f03d      	nop.n
400d6633:	f03d      	nop.n
400d6635:	0020c0        	memw
400d6638:	2928c2        	l32i	a12, a8, 164
400d663b:	4b0c      	movi.n	a11, 4
400d663d:	209cb0        	or	a9, a12, a11
400d6640:	0020c0        	memw
400d6643:	296892        	s32i	a9, a8, 164
400d6646:	131ee5        	call8	400e9834 <timer_group_intr_enable>
400d6649:	f01d      	retw.n
	...

400d664c <esp_int_wdt_cpu_init>:
400d664c:	004136        	entry	a1, 32
400d664f:	03ebb0        	rsr.prid	a11
400d6652:	04bdb0        	extui	a11, a11, 13, 1
400d6655:	e6eda1        	l32r	a10, 400d020c <_flash_cache_start+0x1f4>
400d6658:	00bc65        	call8	400d7220 <esp_register_freertos_tick_hook_for_cpu>
400d665b:	e6ed21        	l32r	a2, 400d0210 <_flash_cache_start+0x1f8>
400d665e:	20a220        	or	a10, a2, a2
400d6661:	b3ce25        	call8	4008a344 <xt_ints_off>
400d6664:	03eba0        	rsr.prid	a10
400d6667:	04ada0        	extui	a10, a10, 13, 1
400d666a:	8c1c      	movi.n	a12, 24
400d666c:	4b1c      	movi.n	a11, 20
400d666e:	e6ab81        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d6671:	0008e0        	callx8	a8
400d6674:	02ad      	mov.n	a10, a2
400d6676:	b3cb65        	call8	4008a32c <xt_ints_on>
400d6679:	f01d      	retw.n
	...

400d667c <esp_err_to_name>:
400d667c:	004136        	entry	a1, 32
400d667f:	080c      	movi.n	a8, 0
400d6681:	000586        	j	400d669b <esp_err_to_name+0x1f>
400d6684:	e6e591        	l32r	a9, 400d0218 <_flash_cache_start+0x200>
400d6687:	b09890        	addx8	a9, a8, a9
400d668a:	0998      	l32i.n	a9, a9, 0
400d668c:	099927        	bne	a9, a2, 400d6699 <esp_err_to_name+0x1d>
400d668f:	e6e221        	l32r	a2, 400d0218 <_flash_cache_start+0x200>
400d6692:	b08820        	addx8	a8, a8, a2
400d6695:	1828      	l32i.n	a2, a8, 4
400d6697:	f01d      	retw.n
400d6699:	881b      	addi.n	a8, a8, 1
400d669b:	86a092        	movi	a9, 134
400d669e:	e2b987        	bgeu	a9, a8, 400d6684 <esp_err_to_name+0x8>
400d66a1:	e6dc21        	l32r	a2, 400d0214 <_flash_cache_start+0x1fc>
400d66a4:	f01d      	retw.n
	...

400d66a8 <__esp_stack_guard_setup>:
400d66a8:	004136        	entry	a1, 32
400d66ab:	aa7825        	call8	40080e2c <esp_random>
400d66ae:	e67781        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d66b1:	08a9      	s32i.n	a10, a8, 0
400d66b3:	f01d      	retw.n
400d66b5:	000000        	ill

400d66b8 <__stack_chk_fail>:
400d66b8:	004136        	entry	a1, 32
400d66bb:	e6d8a1        	l32r	a10, 400d021c <_flash_cache_start+0x204>
400d66be:	e6d881        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d66c1:	0008e0        	callx8	a8
400d66c4:	b4ca65        	call8	4008b36c <abort>
	...

400d66c8 <timer_process_alarm>:
400d66c8:	004136        	entry	a1, 32
400d66cb:	ffafb2        	movi	a11, -1
400d66ce:	e6d521        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d66d1:	02a8      	l32i.n	a10, a2, 0
400d66d3:	b15f65        	call8	40087cc8 <xQueueTakeMutexRecursive>
400d66d6:	aae925        	call8	40081568 <timer_list_lock>
400d66d9:	ab8ea5        	call8	40081fc4 <esp_timer_impl_get_time>
400d66dc:	e6d321        	l32r	a2, 400d0228 <_flash_cache_start+0x210>
400d66df:	0228      	l32i.n	a2, a2, 0
400d66e1:	001a46        	j	400d674e <timer_process_alarm+0x86>
400d66e4:	6288      	l32i.n	a8, a2, 24
400d66e6:	288c      	beqz.n	a8, 400d66ec <timer_process_alarm+0x24>
400d66e8:	7298      	l32i.n	a9, a2, 28
400d66ea:	7899      	s32i.n	a9, a8, 28
400d66ec:	f03d      	nop.n
400d66ee:	f03d      	nop.n
400d66f0:	f03d      	nop.n
400d66f2:	f03d      	nop.n
400d66f4:	7288      	l32i.n	a8, a2, 28
400d66f6:	6298      	l32i.n	a9, a2, 24
400d66f8:	0899      	s32i.n	a9, a8, 0
400d66fa:	f03d      	nop.n
400d66fc:	f03d      	nop.n
400d66fe:	f03d      	nop.n
400d6700:	f03d      	nop.n
400d6702:	2288      	l32i.n	a8, a2, 8
400d6704:	3298      	l32i.n	a9, a2, 12
400d6706:	20a890        	or	a10, a8, a9
400d6709:	0aac      	beqz.n	a10, 400d672d <timer_process_alarm+0x65>
400d670b:	02b8      	l32i.n	a11, a2, 0
400d670d:	12c8      	l32i.n	a12, a2, 4
400d670f:	8b8a      	add.n	a8, a11, a8
400d6711:	1a0c      	movi.n	a10, 1
400d6713:	0138b7        	bltu	a8, a11, 400d6718 <timer_process_alarm+0x50>
400d6716:	0a0c      	movi.n	a10, 0
400d6718:	809c90        	add	a9, a12, a9
400d671b:	80aa90        	add	a10, a10, a9
400d671e:	006282        	s32i	a8, a2, 0
400d6721:	12a9      	s32i.n	a10, a2, 4
400d6723:	02ad      	mov.n	a10, a2
400d6725:	aae5a5        	call8	40081580 <timer_insert>
400d6728:	000346        	j	400d6739 <timer_process_alarm+0x71>
400d672b:	810000        	src	a0, a0, a0
400d672e:	e64d      	lsi	f4, a6, 24
400d6730:	e64d91        	l32r	a9, 400d0064 <_flash_cache_start+0x4c>
400d6733:	006282        	s32i	a8, a2, 0
400d6736:	016292        	s32i	a9, a2, 4
400d6739:	aae3a5        	call8	40081574 <timer_list_unlock>
400d673c:	4288      	l32i.n	a8, a2, 16
400d673e:	52a8      	l32i.n	a10, a2, 20
400d6740:	0008e0        	callx8	a8
400d6743:	aae265        	call8	40081568 <timer_list_lock>
400d6746:	ab87e5        	call8	40081fc4 <esp_timer_impl_get_time>
400d6749:	e6b721        	l32r	a2, 400d0228 <_flash_cache_start+0x210>
400d674c:	0228      	l32i.n	a2, a2, 0
400d674e:	e28c      	beqz.n	a2, 400d6760 <timer_process_alarm+0x98>
400d6750:	0298      	l32i.n	a9, a2, 0
400d6752:	1288      	l32i.n	a8, a2, 4
400d6754:	8c38b7        	bltu	a8, a11, 400d66e4 <timer_process_alarm+0x1c>
400d6757:	059b87        	bne	a11, a8, 400d6760 <timer_process_alarm+0x98>
400d675a:	02b9a7        	bgeu	a9, a10, 400d6760 <timer_process_alarm+0x98>
400d675d:	ffe0c6        	j	400d66e4 <timer_process_alarm+0x1c>
400d6760:	e6b221        	l32r	a2, 400d0228 <_flash_cache_start+0x210>
400d6763:	002222        	l32i	a2, a2, 0
400d6766:	007216        	beqz	a2, 400d6771 <timer_process_alarm+0xa9>
400d6769:	0022a2        	l32i	a10, a2, 0
400d676c:	12b8      	l32i.n	a11, a2, 4
400d676e:	ab9c65        	call8	40082134 <esp_timer_impl_set_alarm>
400d6771:	aae025        	call8	40081574 <timer_list_unlock>
400d6774:	e6ac21        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d6777:	0022a2        	l32i	a10, a2, 0
400d677a:	b120a5        	call8	40087984 <xQueueGiveMutexRecursive>
400d677d:	000090        	retw

400d6780 <timer_task>:
400d6780:	004136        	entry	a1, 32
400d6783:	00a0d2        	movi	a13, 0
400d6786:	ffafc2        	movi	a12, -1
400d6789:	0dbd      	mov.n	a11, a13
400d678b:	e6a881        	l32r	a8, 400d022c <_flash_cache_start+0x214>
400d678e:	08a8      	l32i.n	a10, a8, 0
400d6790:	b13d25        	call8	40087b64 <xQueueGenericReceive>
400d6793:	0e1a26        	beqi	a10, 1, 400d67a5 <timer_task+0x25>
400d6796:	e6a6d1        	l32r	a13, 400d0230 <_flash_cache_start+0x218>
400d6799:	e6a6c1        	l32r	a12, 400d0234 <_flash_cache_start+0x21c>
400d679c:	3da1b2        	movi	a11, 0x13d
400d679f:	e6a6a1        	l32r	a10, 400d0238 <_flash_cache_start+0x220>
400d67a2:	047365        	call8	400daed8 <__assert_func>
400d67a5:	0a0c      	movi.n	a10, 0
400d67a7:	fff225        	call8	400d66c8 <timer_process_alarm>
400d67aa:	fff546        	j	400d6783 <timer_task+0x3>
400d67ad:	000000        	ill

400d67b0 <esp_timer_create>:
400d67b0:	004136        	entry	a1, 32
400d67b3:	aada25        	call8	40081554 <is_initialized>
400d67b6:	026a16        	beqz	a10, 400d67e0 <esp_timer_create+0x30>
400d67b9:	002242        	l32i	a4, a2, 0
400d67bc:	025416        	beqz	a4, 400d67e5 <esp_timer_create+0x35>
400d67bf:	0b2c      	movi.n	a11, 32
400d67c1:	1a0c      	movi.n	a10, 1
400d67c3:	e69e81        	l32r	a8, 400d023c <_flash_cache_start+0x224>
400d67c6:	0008e0        	callx8	a8
400d67c9:	fa9c      	beqz.n	a10, 400d67ec <esp_timer_create+0x3c>
400d67cb:	4a49      	s32i.n	a4, a10, 16
400d67cd:	f03d      	nop.n
400d67cf:	f03d      	nop.n
400d67d1:	f03d      	nop.n
400d67d3:	f03d      	nop.n
400d67d5:	1228      	l32i.n	a2, a2, 4
400d67d7:	5a29      	s32i.n	a2, a10, 20
400d67d9:	03a9      	s32i.n	a10, a3, 0
400d67db:	020c      	movi.n	a2, 0
400d67dd:	f01d      	retw.n
400d67df:	a12200        	sll	a2, a2
400d67e2:	f01d03        	lsi	f0, a13, 0x3c0
400d67e5:	02a122        	movi	a2, 0x102
400d67e8:	f01d      	retw.n
400d67ea:	220000        	orb	b0, b0, b0
400d67ed:	1d01a1        	l32r	a10, 4009dbf4 <_iram_end+0x100a0>
400d67f0:	0000f0        	callx12	a0
	...

400d67f4 <esp_timer_delete>:
400d67f4:	004136        	entry	a1, 32
400d67f7:	021216        	beqz	a2, 400d681c <esp_timer_delete+0x28>
400d67fa:	02ad      	mov.n	a10, a2
400d67fc:	aad425        	call8	40081540 <timer_armed>
400d67ff:	eadc      	bnez.n	a10, 400d6821 <esp_timer_delete+0x2d>
400d6801:	e68831        	l32r	a3, 400d0224 <_flash_cache_start+0x20c>
400d6804:	fb7c      	movi.n	a11, -1
400d6806:	03a8      	l32i.n	a10, a3, 0
400d6808:	b14be5        	call8	40087cc8 <xQueueTakeMutexRecursive>
400d680b:	02ad      	mov.n	a10, a2
400d680d:	e62181        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d6810:	0008e0        	callx8	a8
400d6813:	03a8      	l32i.n	a10, a3, 0
400d6815:	b116e5        	call8	40087984 <xQueueGiveMutexRecursive>
400d6818:	020c      	movi.n	a2, 0
400d681a:	f01d      	retw.n
400d681c:	02a122        	movi	a2, 0x102
400d681f:	f01d      	retw.n
400d6821:	03a122        	movi	a2, 0x103
400d6824:	f01d      	retw.n
	...

400d6828 <esp_timer_init>:
400d6828:	006136        	entry	a1, 48
400d682b:	aad2a5        	call8	40081554 <is_initialized>
400d682e:	097a56        	bnez	a10, 400d68c9 <esp_timer_init+0xa1>
400d6831:	0b0c      	movi.n	a11, 0
400d6833:	10a0a2        	movi	a10, 16
400d6836:	b0f3e5        	call8	40087774 <xQueueCreateCountingSemaphore>
400d6839:	e67c21        	l32r	a2, 400d022c <_flash_cache_start+0x214>
400d683c:	02a9      	s32i.n	a10, a2, 0
400d683e:	6abc      	beqz.n	a10, 400d6878 <esp_timer_init+0x50>
400d6840:	04a0a2        	movi	a10, 4
400d6843:	b112a5        	call8	4008796c <xQueueCreateMutex>
400d6846:	e67721        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d6849:	02a9      	s32i.n	a10, a2, 0
400d684b:	9aac      	beqz.n	a10, 400d6878 <esp_timer_init+0x50>
400d684d:	0d0c      	movi.n	a13, 0
400d684f:	01d9      	s32i.n	a13, a1, 0
400d6851:	f03d      	nop.n
400d6853:	f03d      	nop.n
400d6855:	f03d      	nop.n
400d6857:	0020f0        	nop
400d685a:	e679f1        	l32r	a15, 400d0240 <_flash_cache_start+0x228>
400d685d:	16a0e2        	movi	a14, 22
400d6860:	e679c1        	l32r	a12, 400d0244 <_flash_cache_start+0x22c>
400d6863:	e679b1        	l32r	a11, 400d0248 <_flash_cache_start+0x230>
400d6866:	e679a1        	l32r	a10, 400d024c <_flash_cache_start+0x234>
400d6869:	b25ca5        	call8	40088e34 <xTaskCreatePinnedToCore>
400d686c:	081a66        	bnei	a10, 1, 400d6878 <esp_timer_init+0x50>
400d686f:	e678a1        	l32r	a10, 400d0250 <_flash_cache_start+0x238>
400d6872:	008365        	call8	400d70a8 <esp_timer_impl_init>
400d6875:	055a16        	beqz	a10, 400d68ce <esp_timer_init+0xa6>
400d6878:	e67221        	l32r	a2, 400d0240 <_flash_cache_start+0x228>
400d687b:	0022a2        	l32i	a10, a2, 0
400d687e:	00aa16        	beqz	a10, 400d688c <esp_timer_init+0x64>
400d6881:	b26e65        	call8	40088f68 <vTaskDelete>
400d6884:	00a082        	movi	a8, 0
400d6887:	e66e21        	l32r	a2, 400d0240 <_flash_cache_start+0x228>
400d688a:	0289      	s32i.n	a8, a2, 0
400d688c:	f03d      	nop.n
400d688e:	f03d      	nop.n
400d6890:	f03d      	nop.n
400d6892:	f03d      	nop.n
400d6894:	e66621        	l32r	a2, 400d022c <_flash_cache_start+0x214>
400d6897:	0022a2        	l32i	a10, a2, 0
400d689a:	00aa16        	beqz	a10, 400d68a8 <esp_timer_init+0x80>
400d689d:	b151e5        	call8	40087dbc <vQueueDelete>
400d68a0:	00a082        	movi	a8, 0
400d68a3:	e66221        	l32r	a2, 400d022c <_flash_cache_start+0x214>
400d68a6:	0289      	s32i.n	a8, a2, 0
400d68a8:	f03d      	nop.n
400d68aa:	f03d      	nop.n
400d68ac:	f03d      	nop.n
400d68ae:	f03d      	nop.n
400d68b0:	e65d21        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d68b3:	0022a2        	l32i	a10, a2, 0
400d68b6:	01aa16        	beqz	a10, 400d68d4 <esp_timer_init+0xac>
400d68b9:	b15025        	call8	40087dbc <vQueueDelete>
400d68bc:	00a082        	movi	a8, 0
400d68bf:	e65921        	l32r	a2, 400d0224 <_flash_cache_start+0x20c>
400d68c2:	0289      	s32i.n	a8, a2, 0
400d68c4:	01a122        	movi	a2, 0x101
400d68c7:	f01d      	retw.n
400d68c9:	03a122        	movi	a2, 0x103
400d68cc:	f01d      	retw.n
400d68ce:	020c      	movi.n	a2, 0
400d68d0:	f01d      	retw.n
400d68d2:	220000        	orb	b0, b0, b0
400d68d5:	1d01a1        	l32r	a10, 4009dcdc <_iram_end+0x10188>
400d68d8:	0000f0        	callx12	a0
	...

400d68dc <dport_access_init_core>:
400d68dc:	004136        	entry	a1, 32
400d68df:	03eb20        	rsr.prid	a2
400d68e2:	042d20        	extui	a2, a2, 13, 1
400d68e5:	041226        	beqi	a2, 1, 400d68ed <dport_access_init_core+0x11>
400d68e8:	a41c      	movi.n	a4, 26
400d68ea:	000086        	j	400d68f0 <dport_access_init_core+0x14>
400d68ed:	1ba042        	movi	a4, 27
400d68f0:	e65931        	l32r	a3, 400d0254 <_flash_cache_start+0x23c>
400d68f3:	03ad      	mov.n	a10, a3
400d68f5:	b3a4e5        	call8	4008a344 <xt_ints_off>
400d68f8:	cc1c      	movi.n	a12, 28
400d68fa:	04bd      	mov.n	a11, a4
400d68fc:	02ad      	mov.n	a10, a2
400d68fe:	e60781        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d6901:	0008e0        	callx8	a8
400d6904:	03ad      	mov.n	a10, a3
400d6906:	b3a265        	call8	4008a32c <xt_ints_on>
400d6909:	1182e0        	slli	a8, a2, 2
400d690c:	e65321        	l32r	a2, 400d0258 <_flash_cache_start+0x240>
400d690f:	228a      	add.n	a2, a2, a8
400d6911:	0a0c      	movi.n	a10, 0
400d6913:	0020c0        	memw
400d6916:	02a9      	s32i.n	a10, a2, 0
400d6918:	f03d      	nop.n
400d691a:	f03d      	nop.n
400d691c:	f03d      	nop.n
400d691e:	f03d      	nop.n
400d6920:	e64f21        	l32r	a2, 400d025c <_flash_cache_start+0x244>
400d6923:	228a      	add.n	a2, a2, a8
400d6925:	0020c0        	memw
400d6928:	02a9      	s32i.n	a10, a2, 0
400d692a:	f03d      	nop.n
400d692c:	f03d      	nop.n
400d692e:	f03d      	nop.n
400d6930:	f03d      	nop.n
400d6932:	e64b21        	l32r	a2, 400d0260 <_flash_cache_start+0x248>
400d6935:	228a      	add.n	a2, a2, a8
400d6937:	0020c0        	memw
400d693a:	02a9      	s32i.n	a10, a2, 0
400d693c:	f03d      	nop.n
400d693e:	f03d      	nop.n
400d6940:	f03d      	nop.n
400d6942:	f03d      	nop.n
400d6944:	e64821        	l32r	a2, 400d0264 <_flash_cache_start+0x24c>
400d6947:	828a      	add.n	a8, a2, a8
400d6949:	120c      	movi.n	a2, 1
400d694b:	0020c0        	memw
400d694e:	006822        	s32i	a2, a8, 0
400d6951:	b26165        	call8	40088f68 <vTaskDelete>
400d6954:	f01d      	retw.n
	...

400d6958 <esp_dport_access_int_init>:
400d6958:	006136        	entry	a1, 48
400d695b:	03eb80        	rsr.prid	a8
400d695e:	048d80        	extui	a8, a8, 13, 1
400d6961:	006182        	s32i	a8, a1, 0
400d6964:	00a0f2        	movi	a15, 0
400d6967:	5e0c      	movi.n	a14, 5
400d6969:	0fdd      	mov.n	a13, a15
400d696b:	00a3c2        	movi	a12, 0x300
400d696e:	e63eb1        	l32r	a11, 400d0268 <_flash_cache_start+0x250>
400d6971:	e63ea1        	l32r	a10, 400d026c <_flash_cache_start+0x254>
400d6974:	b24be5        	call8	40088e34 <xTaskCreatePinnedToCore>
400d6977:	0e1a26        	beqi	a10, 1, 400d6989 <esp_dport_access_int_init+0x31>
400d697a:	e63dd1        	l32r	a13, 400d0270 <_flash_cache_start+0x258>
400d697d:	e63dc1        	l32r	a12, 400d0274 <_flash_cache_start+0x25c>
400d6980:	bba0b2        	movi	a11, 187
400d6983:	e63da1        	l32r	a10, 400d0278 <_flash_cache_start+0x260>
400d6986:	045525        	call8	400daed8 <__assert_func>
400d6989:	f01d      	retw.n
	...

400d698c <rtc_brownout_isr_handler>:
400d698c:	004136        	entry	a1, 32
400d698f:	80a092        	movi	a9, 128
400d6992:	e63a81        	l32r	a8, 400d027c <_flash_cache_start+0x264>
400d6995:	0020c0        	memw
400d6998:	006892        	s32i	a9, a8, 0
400d699b:	03eb80        	rsr.prid	a8
400d699e:	048d80        	extui	a8, a8, 13, 1
400d69a1:	090c      	movi.n	a9, 0
400d69a3:	1a0c      	movi.n	a10, 1
400d69a5:	93a980        	movnez	a10, a9, a8
400d69a8:	add0e5        	call8	400846b8 <esp_cpu_stall>
400d69ab:	9a0c      	movi.n	a10, 9
400d69ad:	abb7a5        	call8	40082528 <esp_reset_reason_set_hint>
400d69b0:	e634a1        	l32r	a10, 400d0280 <_flash_cache_start+0x268>
400d69b3:	e61b81        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d69b6:	0008e0        	callx8	a8
400d69b9:	ab0c25        	call8	40081a7c <esp_restart_noos>

400d69bc <esp_brownout_init>:
400d69bc:	004136        	entry	a1, 32
400d69bf:	e63291        	l32r	a9, 400d0288 <_flash_cache_start+0x270>
400d69c2:	e63081        	l32r	a8, 400d0284 <_flash_cache_start+0x26c>
400d69c5:	0020c0        	memw
400d69c8:	006892        	s32i	a9, a8, 0
400d69cb:	80a0c2        	movi	a12, 128
400d69ce:	00a0b2        	movi	a11, 0
400d69d1:	f03d      	nop.n
400d69d3:	0020f0        	nop
400d69d6:	e62da1        	l32r	a10, 400d028c <_flash_cache_start+0x274>
400d69d9:	12f925        	call8	400e996c <rtc_isr_register>
400d69dc:	ca8c      	beqz.n	a10, 400d69ec <esp_brownout_init+0x30>
400d69de:	e62ce1        	l32r	a14, 400d0290 <_flash_cache_start+0x278>
400d69e1:	e62cd1        	l32r	a13, 400d0294 <_flash_cache_start+0x27c>
400d69e4:	bc3c      	movi.n	a12, 59
400d69e6:	e62cb1        	l32r	a11, 400d0298 <_flash_cache_start+0x280>
400d69e9:	b4c5a5        	call8	4008b644 <_esp_error_check_failed>
400d69ec:	e62c91        	l32r	a9, 400d029c <_flash_cache_start+0x284>
400d69ef:	0020c0        	memw
400d69f2:	09a8      	l32i.n	a10, a9, 0
400d69f4:	80a082        	movi	a8, 128
400d69f7:	208a80        	or	a8, a10, a8
400d69fa:	0020c0        	memw
400d69fd:	0989      	s32i.n	a8, a9, 0
400d69ff:	f01d      	retw.n
400d6a01:	000000        	ill

400d6a04 <find_task_in_twdt_list>:
400d6a04:	004136        	entry	a1, 32
400d6a07:	02ad      	mov.n	a10, a2
400d6a09:	120c      	movi.n	a2, 1
400d6a0b:	004322        	s8i	a2, a3, 0
400d6a0e:	0020c0        	memw
400d6a11:	f03d      	nop.n
400d6a13:	f03d      	nop.n
400d6a15:	f03d      	nop.n
400d6a17:	f03d      	nop.n
400d6a19:	e62121        	l32r	a2, 400d02a0 <_flash_cache_start+0x288>
400d6a1c:	0228      	l32i.n	a2, a2, 0
400d6a1e:	0288      	l32i.n	a8, a2, 0
400d6a20:	020c      	movi.n	a2, 0
400d6a22:	000586        	j	400d6a3c <find_task_in_twdt_list+0x38>
400d6a25:	0898      	l32i.n	a9, a8, 0
400d6a27:	0d19a7        	beq	a9, a10, 400d6a38 <find_task_in_twdt_list+0x34>
400d6a2a:	040892        	l8ui	a9, a8, 4
400d6a2d:	99cc      	bnez.n	a9, 400d6a3a <find_task_in_twdt_list+0x36>
400d6a2f:	004392        	s8i	a9, a3, 0
400d6a32:	0020c0        	memw
400d6a35:	000046        	j	400d6a3a <find_task_in_twdt_list+0x36>
400d6a38:	082d      	mov.n	a2, a8
400d6a3a:	2888      	l32i.n	a8, a8, 8
400d6a3c:	fe5856        	bnez	a8, 400d6a25 <find_task_in_twdt_list+0x21>
400d6a3f:	f01d      	retw.n
400d6a41:	000000        	ill

400d6a44 <reset_hw_timer>:
400d6a44:	004136        	entry	a1, 32
400d6a47:	e61781        	l32r	a8, 400d02a4 <_flash_cache_start+0x28c>
400d6a4a:	e5e991        	l32r	a9, 400d01f0 <_flash_cache_start+0x1d8>
400d6a4d:	0020c0        	memw
400d6a50:	196892        	s32i	a9, a8, 100
400d6a53:	190c      	movi.n	a9, 1
400d6a55:	0020c0        	memw
400d6a58:	186892        	s32i	a9, a8, 96
400d6a5b:	090c      	movi.n	a9, 0
400d6a5d:	0020c0        	memw
400d6a60:	196892        	s32i	a9, a8, 100
400d6a63:	f03d      	nop.n
400d6a65:	f03d      	nop.n
400d6a67:	f03d      	nop.n
400d6a69:	f03d      	nop.n
400d6a6b:	e60d81        	l32r	a8, 400d02a0 <_flash_cache_start+0x288>
400d6a6e:	0888      	l32i.n	a8, a8, 0
400d6a70:	0888      	l32i.n	a8, a8, 0
400d6a72:	000446        	j	400d6a87 <reset_hw_timer+0x43>
400d6a75:	090c      	movi.n	a9, 0
400d6a77:	044892        	s8i	a9, a8, 4
400d6a7a:	0020c0        	memw
400d6a7d:	f03d      	nop.n
400d6a7f:	f03d      	nop.n
400d6a81:	f03d      	nop.n
400d6a83:	f03d      	nop.n
400d6a85:	2888      	l32i.n	a8, a8, 8
400d6a87:	fea856        	bnez	a8, 400d6a75 <reset_hw_timer+0x31>
400d6a8a:	f01d      	retw.n

400d6a8c <task_wdt_isr>:
400d6a8c:	004136        	entry	a1, 32
400d6a8f:	e609a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6a92:	b1ffe5        	call8	40088a90 <vTaskEnterCritical>
400d6a95:	e60321        	l32r	a2, 400d02a4 <_flash_cache_start+0x28c>
400d6a98:	e5d631        	l32r	a3, 400d01f0 <_flash_cache_start+0x1d8>
400d6a9b:	0020c0        	memw
400d6a9e:	196232        	s32i	a3, a2, 100
400d6aa1:	01a032        	movi	a3, 1
400d6aa4:	0020c0        	memw
400d6aa7:	186232        	s32i	a3, a2, 96
400d6aaa:	00a032        	movi	a3, 0
400d6aad:	0020c0        	memw
400d6ab0:	196232        	s32i	a3, a2, 100
400d6ab3:	f03d      	nop.n
400d6ab5:	f03d      	nop.n
400d6ab7:	f03d      	nop.n
400d6ab9:	f03d      	nop.n
400d6abb:	0020c0        	memw
400d6abe:	292242        	l32i	a4, a2, 164
400d6ac1:	430c      	movi.n	a3, 4
400d6ac3:	203430        	or	a3, a4, a3
400d6ac6:	034d      	mov.n	a4, a3
400d6ac8:	0020c0        	memw
400d6acb:	296232        	s32i	a3, a2, 164
400d6ace:	f03d      	nop.n
400d6ad0:	f03d      	nop.n
400d6ad2:	f03d      	nop.n
400d6ad4:	f03d      	nop.n
400d6ad6:	e5f221        	l32r	a2, 400d02a0 <_flash_cache_start+0x288>
400d6ad9:	0228      	l32i.n	a2, a2, 0
400d6adb:	0228      	l32i.n	a2, a2, 0
400d6add:	72cc      	bnez.n	a2, 400d6ae8 <task_wdt_isr+0x5c>
400d6adf:	e5f5a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6ae2:	b20ee5        	call8	40088bd0 <vTaskExitCritical>
400d6ae5:	f01d      	retw.n
400d6ae7:	246500        	extui	a6, a0, 5, 3
400d6aea:	c1ad      	lsi	f10, a1, 4
400d6aec:	a0e5f3        	lsi	f15, a5, 0x280
400d6aef:	20ba      	add.n	a2, a0, a11
400d6af1:	e5f2a1        	l32r	a10, 400d02bc <_flash_cache_start+0x2a4>
400d6af4:	e5cb81        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d6af7:	0008e0        	callx8	a8
400d6afa:	e5e921        	l32r	a2, 400d02a0 <_flash_cache_start+0x288>
400d6afd:	002222        	l32i	a2, a2, 0
400d6b00:	002222        	l32i	a2, a2, 0
400d6b03:	001206        	j	400d6b4f <task_wdt_isr+0xc3>
400d6b06:	820000        	mull	a0, a0, a0
400d6b09:	560402        	l8ui	a0, a4, 86
400d6b0c:	03e8      	l32i.n	a14, a3, 0
400d6b0e:	02a8      	l32i.n	a10, a2, 0
400d6b10:	b1f1e5        	call8	40088a30 <xTaskGetAffinity>
400d6b13:	6acc      	bnez.n	a10, 400d6b1d <task_wdt_isr+0x91>
400d6b15:	e5e431        	l32r	a3, 400d02a8 <_flash_cache_start+0x290>
400d6b18:	000106        	j	400d6b20 <task_wdt_isr+0x94>
400d6b1b:	310000        	srai	a0, a0, 16
400d6b1e:	a8e5e3        	lsi	f14, a5, 0x2a0
400d6b21:	111002        	l16ui	a0, a0, 34
400d6b24:	f0a520        	subx8	a10, a5, a2
400d6b27:	5041b1        	l32r	a11, 400aac2c <_iram_end+0x1d0d8>
400d6b2a:	9a47e5        	call8	40070fa8 <__udivmoddi4+0xc3b4>
400d6b2d:	e03102        	lsi	f0, a1, 0x380
400d6b30:	1fe5e5        	call8	400f6990 <_etext+0xa0b3>
400d6b33:	4dad      	lsi	f10, a13, 52
400d6b35:	a80a      	add.n	a10, a8, a0
400d6b37:	eaa502        	movi	a0, 0x5ea
400d6b3a:	03edb1        	l32r	a11, 40097af0 <_iram_end+0x9f9c>
400d6b3d:	0add      	mov.n	a13, a10
400d6b3f:	e5dec1        	l32r	a12, 400d02b8 <_flash_cache_start+0x2a0>
400d6b42:	04bd      	mov.n	a11, a4
400d6b44:	e5dfa1        	l32r	a10, 400d02c0 <_flash_cache_start+0x2a8>
400d6b47:	e5b681        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d6b4a:	0008e0        	callx8	a8
400d6b4d:	2228      	l32i.n	a2, a2, 8
400d6b4f:	fb5256        	bnez	a2, 400d6b08 <task_wdt_isr+0x7c>
400d6b52:	ad1de5        	call8	40083d30 <esp_log_timestamp>
400d6b55:	e5dbd1        	l32r	a13, 400d02c4 <_flash_cache_start+0x2ac>
400d6b58:	e5d8c1        	l32r	a12, 400d02b8 <_flash_cache_start+0x2a0>
400d6b5b:	0abd      	mov.n	a11, a10
400d6b5d:	e5daa1        	l32r	a10, 400d02c8 <_flash_cache_start+0x2b0>
400d6b60:	e5b081        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d6b63:	0008e0        	callx8	a8
400d6b66:	000906        	j	400d6b8e <task_wdt_isr+0x102>
400d6b69:	000000        	ill
400d6b6c:	ad1c25        	call8	40083d30 <esp_log_timestamp>
400d6b6f:	0a3d      	mov.n	a3, a10
400d6b71:	02ad      	mov.n	a10, a2
400d6b73:	b1ece5        	call8	40088a40 <xTaskGetCurrentTaskHandleForCPU>
400d6b76:	b1e6e5        	call8	400889e4 <pcTaskGetTaskName>
400d6b79:	0aed      	mov.n	a14, a10
400d6b7b:	02dd      	mov.n	a13, a2
400d6b7d:	e5cec1        	l32r	a12, 400d02b8 <_flash_cache_start+0x2a0>
400d6b80:	20b330        	or	a11, a3, a3
400d6b83:	e5d2a1        	l32r	a10, 400d02cc <_flash_cache_start+0x2b4>
400d6b86:	e5a681        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d6b89:	0008e0        	callx8	a8
400d6b8c:	221b      	addi.n	a2, a2, 1
400d6b8e:	da22a6        	blti	a2, 2, 400d6b6c <task_wdt_isr+0xe0>
400d6b91:	15ace5        	call8	400ec660 <esp_task_wdt_isr_user_handler>
400d6b94:	e5c321        	l32r	a2, 400d02a0 <_flash_cache_start+0x288>
400d6b97:	0228      	l32i.n	a2, a2, 0
400d6b99:	080222        	l8ui	a2, a2, 8
400d6b9c:	e29c      	beqz.n	a2, 400d6bbe <task_wdt_isr+0x132>
400d6b9e:	ad1925        	call8	40083d30 <esp_log_timestamp>
400d6ba1:	e5c5c1        	l32r	a12, 400d02b8 <_flash_cache_start+0x2a0>
400d6ba4:	20baa0        	or	a11, a10, a10
400d6ba7:	e5caa1        	l32r	a10, 400d02d0 <_flash_cache_start+0x2b8>
400d6baa:	e59d81        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d6bad:	0008e0        	callx8	a8
400d6bb0:	e5c1a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6bb3:	b201e5        	call8	40088bd0 <vTaskExitCritical>
400d6bb6:	6a0c      	movi.n	a10, 6
400d6bb8:	ab96e5        	call8	40082528 <esp_reset_reason_set_hint>
400d6bbb:	b47b25        	call8	4008b36c <abort>
400d6bbe:	e5bda1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6bc1:	b200e5        	call8	40088bd0 <vTaskExitCritical>
400d6bc4:	f01d      	retw.n
	...

400d6bc8 <esp_task_wdt_init>:
400d6bc8:	004136        	entry	a1, 32
400d6bcb:	743030        	extui	a3, a3, 0, 8
400d6bce:	e5b9a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6bd1:	b1ebe5        	call8	40088a90 <vTaskEnterCritical>
400d6bd4:	e5b381        	l32r	a8, 400d02a0 <_flash_cache_start+0x288>
400d6bd7:	0028a2        	l32i	a10, a8, 0
400d6bda:	172a56        	bnez	a10, 400d6d50 <esp_task_wdt_init+0x188>
400d6bdd:	10a0b2        	movi	a11, 16
400d6be0:	1a0c      	movi.n	a10, 1
400d6be2:	e59681        	l32r	a8, 400d023c <_flash_cache_start+0x224>
400d6be5:	0008e0        	callx8	a8
400d6be8:	e5ae81        	l32r	a8, 400d02a0 <_flash_cache_start+0x288>
400d6beb:	08a9      	s32i.n	a10, a8, 0
400d6bed:	1adc      	bnez.n	a10, 400d6c02 <esp_task_wdt_init+0x3a>
400d6bef:	f03d      	nop.n
400d6bf1:	f03d      	nop.n
400d6bf3:	f03d      	nop.n
400d6bf5:	f03d      	nop.n
400d6bf7:	e5afa1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6bfa:	b1fd65        	call8	40088bd0 <vTaskExitCritical>
400d6bfd:	01a122        	movi	a2, 0x101
400d6c00:	f01d      	retw.n
400d6c02:	00a0b2        	movi	a11, 0
400d6c05:	0ab9      	s32i.n	a11, a10, 0
400d6c07:	1a29      	s32i.n	a2, a10, 4
400d6c09:	084a32        	s8i	a3, a10, 8
400d6c0c:	0020c0        	memw
400d6c0f:	eacb      	addi.n	a14, a10, 12
400d6c11:	0bdd      	mov.n	a13, a11
400d6c13:	f03d      	nop.n
400d6c15:	f03d      	nop.n
400d6c17:	e5afc1        	l32r	a12, 400d02d4 <_flash_cache_start+0x2bc>
400d6c1a:	0a1c      	movi.n	a10, 16
400d6c1c:	ff8fa5        	call8	400d6518 <esp_intr_alloc>
400d6c1f:	da8c      	beqz.n	a10, 400d6c30 <esp_task_wdt_init+0x68>
400d6c21:	e5ade1        	l32r	a14, 400d02d8 <_flash_cache_start+0x2c0>
400d6c24:	e5aed1        	l32r	a13, 400d02dc <_flash_cache_start+0x2c4>
400d6c27:	c7a0c2        	movi	a12, 199
400d6c2a:	e5adb1        	l32r	a11, 400d02e0 <_flash_cache_start+0x2c8>
400d6c2d:	b4a165        	call8	4008b644 <_esp_error_check_failed>
400d6c30:	8a0c      	movi.n	a10, 8
400d6c32:	12bb65        	call8	400e97e8 <periph_module_enable>
400d6c35:	e59b21        	l32r	a2, 400d02a4 <_flash_cache_start+0x28c>
400d6c38:	e56e31        	l32r	a3, 400d01f0 <_flash_cache_start+0x1d8>
400d6c3b:	0020c0        	memw
400d6c3e:	196232        	s32i	a3, a2, 100
400d6c41:	f03d      	nop.n
400d6c43:	f03d      	nop.n
400d6c45:	f03d      	nop.n
400d6c47:	f03d      	nop.n
400d6c49:	0020c0        	memw
400d6c4c:	122282        	l32i	a8, a2, 72
400d6c4f:	e56931        	l32r	a3, 400d01f4 <_flash_cache_start+0x1dc>
400d6c52:	203830        	or	a3, a8, a3
400d6c55:	0020c0        	memw
400d6c58:	126232        	s32i	a3, a2, 72
400d6c5b:	f03d      	nop.n
400d6c5d:	f03d      	nop.n
400d6c5f:	f03d      	nop.n
400d6c61:	f03d      	nop.n
400d6c63:	0020c0        	memw
400d6c66:	122282        	l32i	a8, a2, 72
400d6c69:	e56331        	l32r	a3, 400d01f8 <_flash_cache_start+0x1e0>
400d6c6c:	203830        	or	a3, a8, a3
400d6c6f:	0020c0        	memw
400d6c72:	126232        	s32i	a3, a2, 72
400d6c75:	f03d      	nop.n
400d6c77:	f03d      	nop.n
400d6c79:	f03d      	nop.n
400d6c7b:	f03d      	nop.n
400d6c7d:	0020c0        	memw
400d6c80:	122282        	l32i	a8, a2, 72
400d6c83:	e53c31        	l32r	a3, 400d0174 <_flash_cache_start+0x15c>
400d6c86:	203830        	or	a3, a8, a3
400d6c89:	0020c0        	memw
400d6c8c:	126232        	s32i	a3, a2, 72
400d6c8f:	f03d      	nop.n
400d6c91:	f03d      	nop.n
400d6c93:	f03d      	nop.n
400d6c95:	f03d      	nop.n
400d6c97:	0020c0        	memw
400d6c9a:	122282        	l32i	a8, a2, 72
400d6c9d:	e55731        	l32r	a3, 400d01fc <_flash_cache_start+0x1e4>
400d6ca0:	108830        	and	a8, a8, a3
400d6ca3:	e51831        	l32r	a3, 400d0104 <_flash_cache_start+0xec>
400d6ca6:	203830        	or	a3, a8, a3
400d6ca9:	0020c0        	memw
400d6cac:	126232        	s32i	a3, a2, 72
400d6caf:	f03d      	nop.n
400d6cb1:	f03d      	nop.n
400d6cb3:	f03d      	nop.n
400d6cb5:	f03d      	nop.n
400d6cb7:	0020c0        	memw
400d6cba:	122282        	l32i	a8, a2, 72
400d6cbd:	e55031        	l32r	a3, 400d0200 <_flash_cache_start+0x1e8>
400d6cc0:	203830        	or	a3, a8, a3
400d6cc3:	0020c0        	memw
400d6cc6:	126232        	s32i	a3, a2, 72
400d6cc9:	f03d      	nop.n
400d6ccb:	f03d      	nop.n
400d6ccd:	f03d      	nop.n
400d6ccf:	f03d      	nop.n
400d6cd1:	0020c0        	memw
400d6cd4:	132282        	l32i	a8, a2, 76
400d6cd7:	f48080        	extui	a8, a8, 0, 16
400d6cda:	e54a31        	l32r	a3, 400d0204 <_flash_cache_start+0x1ec>
400d6cdd:	203830        	or	a3, a8, a3
400d6ce0:	0020c0        	memw
400d6ce3:	136232        	s32i	a3, a2, 76
400d6ce6:	f03d      	nop.n
400d6ce8:	f03d      	nop.n
400d6cea:	f03d      	nop.n
400d6cec:	f03d      	nop.n
400d6cee:	e56c31        	l32r	a3, 400d02a0 <_flash_cache_start+0x288>
400d6cf1:	0398      	l32i.n	a9, a3, 0
400d6cf3:	1988      	l32i.n	a8, a9, 4
400d6cf5:	1138b0        	slli	a3, a8, 5
400d6cf8:	c03380        	sub	a3, a3, a8
400d6cfb:	a03380        	addx4	a3, a3, a8
400d6cfe:	1183c0        	slli	a8, a3, 4
400d6d01:	0020c0        	memw
400d6d04:	146282        	s32i	a8, a2, 80
400d6d07:	f03d      	nop.n
400d6d09:	f03d      	nop.n
400d6d0b:	f03d      	nop.n
400d6d0d:	f03d      	nop.n
400d6d0f:	1988      	l32i.n	a8, a9, 4
400d6d11:	1138b0        	slli	a3, a8, 5
400d6d14:	c03380        	sub	a3, a3, a8
400d6d17:	a03380        	addx4	a3, a3, a8
400d6d1a:	1183b0        	slli	a8, a3, 5
400d6d1d:	0020c0        	memw
400d6d20:	156282        	s32i	a8, a2, 84
400d6d23:	f03d      	nop.n
400d6d25:	f03d      	nop.n
400d6d27:	f03d      	nop.n
400d6d29:	f03d      	nop.n
400d6d2b:	0020c0        	memw
400d6d2e:	122282        	l32i	a8, a2, 72
400d6d31:	e4d431        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d6d34:	203830        	or	a3, a8, a3
400d6d37:	0020c0        	memw
400d6d3a:	126232        	s32i	a3, a2, 72
400d6d3d:	130c      	movi.n	a3, 1
400d6d3f:	0020c0        	memw
400d6d42:	186232        	s32i	a3, a2, 96
400d6d45:	030c      	movi.n	a3, 0
400d6d47:	0020c0        	memw
400d6d4a:	196232        	s32i	a3, a2, 100
400d6d4d:	0025c6        	j	400d6de8 <esp_task_wdt_init+0x220>
400d6d50:	084a32        	s8i	a3, a10, 8
400d6d53:	016a22        	s32i	a2, a10, 4
400d6d56:	f03d      	nop.n
400d6d58:	f03d      	nop.n
400d6d5a:	f03d      	nop.n
400d6d5c:	f03d      	nop.n
400d6d5e:	e55181        	l32r	a8, 400d02a4 <_flash_cache_start+0x28c>
400d6d61:	e52321        	l32r	a2, 400d01f0 <_flash_cache_start+0x1d8>
400d6d64:	0020c0        	memw
400d6d67:	196822        	s32i	a2, a8, 100
400d6d6a:	f03d      	nop.n
400d6d6c:	f03d      	nop.n
400d6d6e:	f03d      	nop.n
400d6d70:	f03d      	nop.n
400d6d72:	0020c0        	memw
400d6d75:	1228b2        	l32i	a11, a8, 72
400d6d78:	e4bc91        	l32r	a9, 400d0068 <_flash_cache_start+0x50>
400d6d7b:	109b90        	and	a9, a11, a9
400d6d7e:	0020c0        	memw
400d6d81:	126892        	s32i	a9, a8, 72
400d6d84:	f03d      	nop.n
400d6d86:	f03d      	nop.n
400d6d88:	f03d      	nop.n
400d6d8a:	f03d      	nop.n
400d6d8c:	012ab2        	l32i	a11, a10, 4
400d6d8f:	119bb0        	slli	a9, a11, 5
400d6d92:	c099b0        	sub	a9, a9, a11
400d6d95:	a099b0        	addx4	a9, a9, a11
400d6d98:	11b9c0        	slli	a11, a9, 4
400d6d9b:	0020c0        	memw
400d6d9e:	1468b2        	s32i	a11, a8, 80
400d6da1:	f03d      	nop.n
400d6da3:	f03d      	nop.n
400d6da5:	f03d      	nop.n
400d6da7:	f03d      	nop.n
400d6da9:	012aa2        	l32i	a10, a10, 4
400d6dac:	119ab0        	slli	a9, a10, 5
400d6daf:	c099a0        	sub	a9, a9, a10
400d6db2:	a099a0        	addx4	a9, a9, a10
400d6db5:	11a9b0        	slli	a10, a9, 5
400d6db8:	0020c0        	memw
400d6dbb:	1568a2        	s32i	a10, a8, 84
400d6dbe:	f03d      	nop.n
400d6dc0:	f03d      	nop.n
400d6dc2:	f03d      	nop.n
400d6dc4:	f03d      	nop.n
400d6dc6:	0020c0        	memw
400d6dc9:	1228a2        	l32i	a10, a8, 72
400d6dcc:	e4ae91        	l32r	a9, 400d0084 <_flash_cache_start+0x6c>
400d6dcf:	209a90        	or	a9, a10, a9
400d6dd2:	0020c0        	memw
400d6dd5:	126892        	s32i	a9, a8, 72
400d6dd8:	120c      	movi.n	a2, 1
400d6dda:	0020c0        	memw
400d6ddd:	186822        	s32i	a2, a8, 96
400d6de0:	020c      	movi.n	a2, 0
400d6de2:	0020c0        	memw
400d6de5:	196822        	s32i	a2, a8, 100
400d6de8:	f03d      	nop.n
400d6dea:	f03d      	nop.n
400d6dec:	f03d      	nop.n
400d6dee:	f03d      	nop.n
400d6df0:	e531a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6df3:	b1dde5        	call8	40088bd0 <vTaskExitCritical>
400d6df6:	020c      	movi.n	a2, 0
400d6df8:	f01d      	retw.n
	...

400d6dfc <esp_task_wdt_add>:
400d6dfc:	006136        	entry	a1, 48
400d6dff:	e52da1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6e02:	b1c8e5        	call8	40088a90 <vTaskEnterCritical>
400d6e05:	e52681        	l32r	a8, 400d02a0 <_flash_cache_start+0x288>
400d6e08:	002882        	l32i	a8, a8, 0
400d6e0b:	00b856        	bnez	a8, 400d6e1a <esp_task_wdt_add+0x1e>
400d6e0e:	e529a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6e11:	b1dbe5        	call8	40088bd0 <vTaskExitCritical>
400d6e14:	03a122        	movi	a2, 0x103
400d6e17:	f01d      	retw.n
400d6e19:	32cc00        	orbc	b12, b12, b0
400d6e1c:	b1b8a5        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400d6e1f:	0a2d      	mov.n	a2, a10
400d6e21:	b1fb      	addi.n	a11, a1, 15
400d6e23:	20a220        	or	a10, a2, a2
400d6e26:	ffbde5        	call8	400d6a04 <find_task_in_twdt_list>
400d6e29:	9a8c      	beqz.n	a10, 400d6e36 <esp_task_wdt_add+0x3a>
400d6e2b:	e522a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6e2e:	b1da25        	call8	40088bd0 <vTaskExitCritical>
400d6e31:	02a122        	movi	a2, 0x102
400d6e34:	f01d      	retw.n
400d6e36:	cb0c      	movi.n	a11, 12
400d6e38:	1a0c      	movi.n	a10, 1
400d6e3a:	e50081        	l32r	a8, 400d023c <_flash_cache_start+0x224>
400d6e3d:	0008e0        	callx8	a8
400d6e40:	9acc      	bnez.n	a10, 400d6e4d <esp_task_wdt_add+0x51>
400d6e42:	e51ca1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6e45:	b1d8a5        	call8	40088bd0 <vTaskExitCritical>
400d6e48:	01a122        	movi	a2, 0x101
400d6e4b:	f01d      	retw.n
400d6e4d:	0a29      	s32i.n	a2, a10, 0
400d6e4f:	130c      	movi.n	a3, 1
400d6e51:	044a32        	s8i	a3, a10, 4
400d6e54:	030c      	movi.n	a3, 0
400d6e56:	2a39      	s32i.n	a3, a10, 8
400d6e58:	f03d      	nop.n
400d6e5a:	f03d      	nop.n
400d6e5c:	f03d      	nop.n
400d6e5e:	f03d      	nop.n
400d6e60:	e51031        	l32r	a3, 400d02a0 <_flash_cache_start+0x288>
400d6e63:	0338      	l32i.n	a3, a3, 0
400d6e65:	0398      	l32i.n	a9, a3, 0
400d6e67:	79cc      	bnez.n	a9, 400d6e72 <esp_task_wdt_add+0x76>
400d6e69:	03a9      	s32i.n	a10, a3, 0
400d6e6b:	030c      	movi.n	a3, 0
400d6e6d:	000c06        	j	400d6ea1 <esp_task_wdt_add+0xa5>
400d6e70:	089d      	mov.n	a9, a8
400d6e72:	2988      	l32i.n	a8, a9, 8
400d6e74:	ff8856        	bnez	a8, 400d6e70 <esp_task_wdt_add+0x74>
400d6e77:	29a9      	s32i.n	a10, a9, 8
400d6e79:	fffb86        	j	400d6e6b <esp_task_wdt_add+0x6f>
400d6e7c:	034d      	mov.n	a4, a3
400d6e7e:	03ad      	mov.n	a10, a3
400d6e80:	b17ca5        	call8	4008864c <xTaskGetIdleTaskHandleForCPU>
400d6e83:	1892a7        	bne	a2, a10, 400d6e9f <esp_task_wdt_add+0xa3>
400d6e86:	03bd      	mov.n	a11, a3
400d6e88:	e517a1        	l32r	a10, 400d02e4 <_flash_cache_start+0x2cc>
400d6e8b:	0033e5        	call8	400d71c8 <esp_register_freertos_idle_hook_for_cpu>
400d6e8e:	2a9c      	beqz.n	a10, 400d6ea4 <esp_task_wdt_add+0xa8>
400d6e90:	e516e1        	l32r	a14, 400d02e8 <_flash_cache_start+0x2d0>
400d6e93:	e516d1        	l32r	a13, 400d02ec <_flash_cache_start+0x2d4>
400d6e96:	21a1c2        	movi	a12, 0x121
400d6e99:	e511b1        	l32r	a11, 400d02e0 <_flash_cache_start+0x2c8>
400d6e9c:	b47a65        	call8	4008b644 <_esp_error_check_failed>
400d6e9f:	331b      	addi.n	a3, a3, 1
400d6ea1:	d723a6        	blti	a3, 2, 400d6e7c <esp_task_wdt_add+0x80>
400d6ea4:	0f0122        	l8ui	a2, a1, 15
400d6ea7:	128c      	beqz.n	a2, 400d6eac <esp_task_wdt_add+0xb0>
400d6ea9:	ffb9a5        	call8	400d6a44 <reset_hw_timer>
400d6eac:	e502a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6eaf:	b1d225        	call8	40088bd0 <vTaskExitCritical>
400d6eb2:	020c      	movi.n	a2, 0
400d6eb4:	f01d      	retw.n
	...

400d6eb8 <esp_task_wdt_reset>:
400d6eb8:	006136        	entry	a1, 48
400d6ebb:	e4fea1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6ebe:	b1bd25        	call8	40088a90 <vTaskEnterCritical>
400d6ec1:	e4f781        	l32r	a8, 400d02a0 <_flash_cache_start+0x288>
400d6ec4:	002882        	l32i	a8, a8, 0
400d6ec7:	00a856        	bnez	a8, 400d6ed5 <esp_task_wdt_reset+0x1d>
400d6eca:	e4faa1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6ecd:	b1d025        	call8	40088bd0 <vTaskExitCritical>
400d6ed0:	03a122        	movi	a2, 0x103
400d6ed3:	f01d      	retw.n
400d6ed5:	b1ad25        	call8	400889a8 <xTaskGetCurrentTaskHandle>
400d6ed8:	0fc1b2        	addi	a11, a1, 15
400d6edb:	ffb2a5        	call8	400d6a04 <find_task_in_twdt_list>
400d6ede:	00ba56        	bnez	a10, 400d6eed <esp_task_wdt_reset+0x35>
400d6ee1:	e4f4a1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6ee4:	b1cea5        	call8	40088bd0 <vTaskExitCritical>
400d6ee7:	05a122        	movi	a2, 0x105
400d6eea:	000090        	retw
400d6eed:	120c      	movi.n	a2, 1
400d6eef:	044a22        	s8i	a2, a10, 4
400d6ef2:	0020c0        	memw
400d6ef5:	f03d      	nop.n
400d6ef7:	f03d      	nop.n
400d6ef9:	f03d      	nop.n
400d6efb:	f03d      	nop.n
400d6efd:	0f0122        	l8ui	a2, a1, 15
400d6f00:	128c      	beqz.n	a2, 400d6f05 <esp_task_wdt_reset+0x4d>
400d6f02:	ffb425        	call8	400d6a44 <reset_hw_timer>
400d6f05:	e4eba1        	l32r	a10, 400d02b4 <_flash_cache_start+0x29c>
400d6f08:	b1cc65        	call8	40088bd0 <vTaskExitCritical>
400d6f0b:	020c      	movi.n	a2, 0
400d6f0d:	f01d      	retw.n
	...

400d6f10 <idle_hook_cb>:
400d6f10:	004136        	entry	a1, 32
400d6f13:	fffa65        	call8	400d6eb8 <esp_task_wdt_reset>
400d6f16:	120c      	movi.n	a2, 1
400d6f18:	f01d      	retw.n
	...

400d6f1c <esp_dbg_stubs_data_free>:
400d6f1c:	004136        	entry	a1, 32
400d6f1f:	20a220        	or	a10, a2, a2
400d6f22:	e45c81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d6f25:	0008e0        	callx8	a8
400d6f28:	f01d      	retw.n
	...

400d6f2c <esp_dbg_stubs_data_alloc>:
400d6f2c:	004136        	entry	a1, 32
400d6f2f:	20a220        	or	a10, a2, a2
400d6f32:	e46e81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d6f35:	0008e0        	callx8	a8
400d6f38:	0a2d      	mov.n	a2, a10
400d6f3a:	f01d      	retw.n

400d6f3c <esp_dbg_stubs_init>:
400d6f3c:	004136        	entry	a1, 32
400d6f3f:	e4ed81        	l32r	a8, 400d02f4 <_flash_cache_start+0x2dc>
400d6f42:	e4eb91        	l32r	a9, 400d02f0 <_flash_cache_start+0x2d8>
400d6f45:	006892        	s32i	a9, a8, 0
400d6f48:	f03d      	nop.n
400d6f4a:	f03d      	nop.n
400d6f4c:	f03d      	nop.n
400d6f4e:	f03d      	nop.n
400d6f50:	e4ea91        	l32r	a9, 400d02f8 <_flash_cache_start+0x2e0>
400d6f53:	016892        	s32i	a9, a8, 4
400d6f56:	f03d      	nop.n
400d6f58:	f03d      	nop.n
400d6f5a:	f03d      	nop.n
400d6f5c:	f03d      	nop.n
400d6f5e:	e4e791        	l32r	a9, 400d02fc <_flash_cache_start+0x2e4>
400d6f61:	026892        	s32i	a9, a8, 8
400d6f64:	f03d      	nop.n
400d6f66:	f03d      	nop.n
400d6f68:	f03d      	nop.n
400d6f6a:	f03d      	nop.n
400d6f6c:	e4e591        	l32r	a9, 400d0300 <_flash_cache_start+0x2e8>
400d6f6f:	3899      	s32i.n	a9, a8, 12
400d6f71:	f03d      	nop.n
400d6f73:	f03d      	nop.n
400d6f75:	f03d      	nop.n
400d6f77:	f03d      	nop.n
400d6f79:	e4e2b1        	l32r	a11, 400d0304 <_flash_cache_start+0x2ec>
400d6f7c:	0b89      	s32i.n	a8, a11, 0
400d6f7e:	f03d      	nop.n
400d6f80:	f03d      	nop.n
400d6f82:	f03d      	nop.n
400d6f84:	f03d      	nop.n
400d6f86:	e4e0a1        	l32r	a10, 400d0308 <_flash_cache_start+0x2f0>
400d6f89:	b46e65        	call8	4008b670 <eri_write>
400d6f8c:	f01d      	retw.n
	...

400d6f90 <semphr_delete_wrapper>:
400d6f90:	004136        	entry	a1, 32
400d6f93:	02ad      	mov.n	a10, a2
400d6f95:	b0e265        	call8	40087dbc <vQueueDelete>
400d6f98:	f01d      	retw.n
	...

400d6f9c <timer_setfn_wrapper>:
400d6f9c:	004136        	entry	a1, 32
400d6f9f:	04cd      	mov.n	a12, a4
400d6fa1:	03bd      	mov.n	a11, a3
400d6fa3:	02ad      	mov.n	a10, a2
400d6fa5:	002d25        	call8	400d7278 <ets_timer_setfn>
400d6fa8:	f01d      	retw.n
	...

400d6fac <timer_done_wrapper>:
400d6fac:	004136        	entry	a1, 32
400d6faf:	02ad      	mov.n	a10, a2
400d6fb1:	003225        	call8	400d72d4 <ets_timer_done>
400d6fb4:	f01d      	retw.n
	...

400d6fb8 <semphr_take_wrapper>:
400d6fb8:	004136        	entry	a1, 32
400d6fbb:	110366        	bnei	a3, -1, 400d6fd0 <semphr_take_wrapper+0x18>
400d6fbe:	00a0d2        	movi	a13, 0
400d6fc1:	ffafc2        	movi	a12, -1
400d6fc4:	20bdd0        	or	a11, a13, a13
400d6fc7:	02ad      	mov.n	a10, a2
400d6fc9:	b0b9a5        	call8	40087b64 <xQueueGenericReceive>
400d6fcc:	0a2d      	mov.n	a2, a10
400d6fce:	f01d      	retw.n
400d6fd0:	00a0d2        	movi	a13, 0
400d6fd3:	20c330        	or	a12, a3, a3
400d6fd6:	20bdd0        	or	a11, a13, a13
400d6fd9:	02ad      	mov.n	a10, a2
400d6fdb:	b0b8a5        	call8	40087b64 <xQueueGenericReceive>
400d6fde:	0a2d      	mov.n	a2, a10
400d6fe0:	f01d      	retw.n
	...

400d6fe4 <semphr_give_wrapper>:
400d6fe4:	004136        	entry	a1, 32
400d6fe7:	00a0d2        	movi	a13, 0
400d6fea:	20cdd0        	or	a12, a13, a13
400d6fed:	20bdd0        	or	a11, a13, a13
400d6ff0:	02ad      	mov.n	a10, a2
400d6ff2:	b07f25        	call8	400877e4 <xQueueGenericSend>
400d6ff5:	0a2d      	mov.n	a2, a10
400d6ff7:	f01d      	retw.n
400d6ff9:	000000        	ill

400d6ffc <semphr_create_wrapper>:
400d6ffc:	004136        	entry	a1, 32
400d6fff:	20b330        	or	a11, a3, a3
400d7002:	20a220        	or	a10, a2, a2
400d7005:	b076e5        	call8	40087774 <xQueueCreateCountingSemaphore>
400d7008:	202aa0        	or	a2, a10, a10
400d700b:	f01d      	retw.n
400d700d:	000000        	ill

400d7010 <spin_lock_create_wrapper>:
400d7010:	006136        	entry	a1, 48
400d7013:	e4be21        	l32r	a2, 400d030c <_flash_cache_start+0x2f4>
400d7016:	2129      	s32i.n	a2, a1, 8
400d7018:	020c      	movi.n	a2, 0
400d701a:	3129      	s32i.n	a2, a1, 12
400d701c:	8a0c      	movi.n	a10, 8
400d701e:	e43381        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400d7021:	0008e0        	callx8	a8
400d7024:	0a2d      	mov.n	a2, a10
400d7026:	aa8c      	beqz.n	a10, 400d7034 <spin_lock_create_wrapper+0x24>
400d7028:	8c0c      	movi.n	a12, 8
400d702a:	b1ca      	add.n	a11, a1, a12
400d702c:	e41b81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d702f:	0008e0        	callx8	a8
400d7032:	f01d      	retw.n
400d7034:	020c      	movi.n	a2, 0
400d7036:	f01d      	retw.n

400d7038 <esp_cache_err_int_init>:
400d7038:	004136        	entry	a1, 32
400d703b:	03eb20        	rsr.prid	a2
400d703e:	042d20        	extui	a2, a2, 13, 1
400d7041:	e4b3a1        	l32r	a10, 400d0310 <_flash_cache_start+0x2f8>
400d7044:	b32fe5        	call8	4008a344 <xt_ints_off>
400d7047:	19a0c2        	movi	a12, 25
400d704a:	44a0b2        	movi	a11, 68
400d704d:	02ad      	mov.n	a10, a2
400d704f:	e43381        	l32r	a8, 400d011c <_flash_cache_start+0x104>
400d7052:	0008e0        	callx8	a8
400d7055:	82dc      	bnez.n	a2, 400d7071 <esp_cache_err_int_init+0x39>
400d7057:	e4af31        	l32r	a3, 400d0314 <_flash_cache_start+0x2fc>
400d705a:	20a330        	or	a10, a3, a3
400d705d:	aa8ea5        	call8	40081948 <esp_dport_access_reg_read>
400d7060:	e4ae21        	l32r	a2, 400d0318 <_flash_cache_start+0x300>
400d7063:	20aa20        	or	a10, a10, a2
400d7066:	0020c0        	memw
400d7069:	03a9      	s32i.n	a10, a3, 0
400d706b:	0005c6        	j	400d7086 <esp_cache_err_int_init+0x4e>
400d706e:	000000        	ill
400d7071:	e4a831        	l32r	a3, 400d0314 <_flash_cache_start+0x2fc>
400d7074:	20a330        	or	a10, a3, a3
400d7077:	aa8d25        	call8	40081948 <esp_dport_access_reg_read>
400d707a:	3fa022        	movi	a2, 63
400d707d:	20aa20        	or	a10, a10, a2
400d7080:	0020c0        	memw
400d7083:	0063a2        	s32i	a10, a3, 0
400d7086:	f03d      	nop.n
400d7088:	f03d      	nop.n
400d708a:	f03d      	nop.n
400d708c:	f03d      	nop.n
400d708e:	e4a0a1        	l32r	a10, 400d0310 <_flash_cache_start+0x2f8>
400d7091:	b329a5        	call8	4008a32c <xt_ints_on>
400d7094:	f01d      	retw.n
	...

400d7098 <s_set_default_wifi_log_level>:
400d7098:	004136        	entry	a1, 32
400d709b:	1b0c      	movi.n	a11, 1
400d709d:	e49fa1        	l32r	a10, 400d031c <_flash_cache_start+0x304>
400d70a0:	038a65        	call8	400da948 <esp_log_level_set>
400d70a3:	f01d      	retw.n
400d70a5:	000000        	ill

400d70a8 <esp_timer_impl_init>:
400d70a8:	004136        	entry	a1, 32
400d70ab:	e49d81        	l32r	a8, 400d0320 <_flash_cache_start+0x308>
400d70ae:	006822        	s32i	a2, a8, 0
400d70b1:	f03d      	nop.n
400d70b3:	f03d      	nop.n
400d70b5:	f03d      	nop.n
400d70b7:	f03d      	nop.n
400d70b9:	e49ae1        	l32r	a14, 400d0324 <_flash_cache_start+0x30c>
400d70bc:	00a0d2        	movi	a13, 0
400d70bf:	e49ac1        	l32r	a12, 400d0328 <_flash_cache_start+0x310>
400d70c2:	e49ab1        	l32r	a11, 400d032c <_flash_cache_start+0x314>
400d70c5:	39a0a2        	movi	a10, 57
400d70c8:	ff44e5        	call8	400d6518 <esp_intr_alloc>
400d70cb:	0a2d      	mov.n	a2, a10
400d70cd:	3a9c      	beqz.n	a10, 400d70e4 <esp_timer_impl_init+0x3c>
400d70cf:	acc625        	call8	40083d30 <esp_log_timestamp>
400d70d2:	02dd      	mov.n	a13, a2
400d70d4:	e497c1        	l32r	a12, 400d0330 <_flash_cache_start+0x318>
400d70d7:	0abd      	mov.n	a11, a10
400d70d9:	e496a1        	l32r	a10, 400d0334 <_flash_cache_start+0x31c>
400d70dc:	e45181        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400d70df:	0008e0        	callx8	a8
400d70e2:	f01d      	retw.n
400d70e4:	b5d8e5        	call8	4008ce74 <rtc_clk_apb_freq_get>
400d70e7:	e49481        	l32r	a8, 400d0338 <_flash_cache_start+0x320>
400d70ea:	a2aa80        	muluh	a10, a10, a8
400d70ed:	d5a2a0        	extui	a10, a10, 18, 14
400d70f0:	e49321        	l32r	a2, 400d033c <_flash_cache_start+0x324>
400d70f3:	0062a2        	s32i	a10, a2, 0
400d70f6:	016a56        	bnez	a10, 400d7110 <esp_timer_impl_init+0x68>
400d70f9:	f03d      	nop.n
400d70fb:	f03d      	nop.n
400d70fd:	f03d      	nop.n
400d70ff:	f03d      	nop.n
400d7101:	e48fd1        	l32r	a13, 400d0340 <_flash_cache_start+0x328>
400d7104:	e490c1        	l32r	a12, 400d0344 <_flash_cache_start+0x32c>
400d7107:	68a1b2        	movi	a11, 0x168
400d710a:	e48fa1        	l32r	a10, 400d0348 <_flash_cache_start+0x330>
400d710d:	03dca5        	call8	400daed8 <__assert_func>
400d7110:	e48f21        	l32r	a2, 400d034c <_flash_cache_start+0x334>
400d7113:	c2a2a0        	quou	a10, a2, a10
400d7116:	e48e81        	l32r	a8, 400d0350 <_flash_cache_start+0x338>
400d7119:	0068a2        	s32i	a10, a8, 0
400d711c:	f03d      	nop.n
400d711e:	f03d      	nop.n
400d7120:	f03d      	nop.n
400d7122:	f03d      	nop.n
400d7124:	e3d0a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400d7127:	e3cfb1        	l32r	a11, 400d0064 <_flash_cache_start+0x4c>
400d712a:	e48a81        	l32r	a8, 400d0354 <_flash_cache_start+0x33c>
400d712d:	0068a2        	s32i	a10, a8, 0
400d7130:	18b9      	s32i.n	a11, a8, 4
400d7132:	f03d      	nop.n
400d7134:	f03d      	nop.n
400d7136:	f03d      	nop.n
400d7138:	f03d      	nop.n
400d713a:	e48781        	l32r	a8, 400d0358 <_flash_cache_start+0x340>
400d713d:	0020c0        	memw
400d7140:	0829      	s32i.n	a2, a8, 0
400d7142:	080c      	movi.n	a8, 0
400d7144:	f03d      	nop.n
400d7146:	f03d      	nop.n
400d7148:	f03d      	nop.n
400d714a:	e48421        	l32r	a2, 400d035c <_flash_cache_start+0x344>
400d714d:	0020c0        	memw
400d7150:	0289      	s32i.n	a8, a2, 0
400d7152:	81a082        	movi	a8, 129
400d7155:	f03d      	nop.n
400d7157:	f03d      	nop.n
400d7159:	f03d      	nop.n
400d715b:	e48121        	l32r	a2, 400d0360 <_flash_cache_start+0x348>
400d715e:	0020c0        	memw
400d7161:	0289      	s32i.n	a8, a2, 0
400d7163:	180c      	movi.n	a8, 1
400d7165:	f03d      	nop.n
400d7167:	f03d      	nop.n
400d7169:	f03d      	nop.n
400d716b:	e47e21        	l32r	a2, 400d0364 <_flash_cache_start+0x34c>
400d716e:	0020c0        	memw
400d7171:	0289      	s32i.n	a8, a2, 0
400d7173:	f03d      	nop.n
400d7175:	f03d      	nop.n
400d7177:	f03d      	nop.n
400d7179:	f03d      	nop.n
400d717b:	e46a21        	l32r	a2, 400d0324 <_flash_cache_start+0x30c>
400d717e:	02a8      	l32i.n	a10, a2, 0
400d7180:	aa1425        	call8	400812c4 <esp_intr_enable>
400d7183:	da8c      	beqz.n	a10, 400d7194 <esp_timer_impl_init+0xec>
400d7185:	e478e1        	l32r	a14, 400d0368 <_flash_cache_start+0x350>
400d7188:	e46fd1        	l32r	a13, 400d0344 <_flash_cache_start+0x32c>
400d718b:	71a1c2        	movi	a12, 0x171
400d718e:	e46eb1        	l32r	a11, 400d0348 <_flash_cache_start+0x330>
400d7191:	b44b25        	call8	4008b644 <_esp_error_check_failed>
400d7194:	020c      	movi.n	a2, 0
400d7196:	f01d      	retw.n

400d7198 <esp_vApplicationIdleHook>:
400d7198:	004136        	entry	a1, 32
400d719b:	03eb30        	rsr.prid	a3
400d719e:	043d30        	extui	a3, a3, 13, 1
400d71a1:	020c      	movi.n	a2, 0
400d71a3:	140c      	movi.n	a4, 1
400d71a5:	000546        	j	400d71be <esp_vApplicationIdleHook+0x26>
400d71a8:	b08320        	addx8	a8, a3, a2
400d71ab:	e47091        	l32r	a9, 400d036c <_flash_cache_start+0x354>
400d71ae:	a08890        	addx4	a8, a8, a9
400d71b1:	08a8      	l32i.n	a10, a8, 0
400d71b3:	5a8c      	beqz.n	a10, 400d71bc <esp_vApplicationIdleHook+0x24>
400d71b5:	000ae0        	callx8	a10
400d71b8:	0acc      	bnez.n	a10, 400d71bc <esp_vApplicationIdleHook+0x24>
400d71ba:	040c      	movi.n	a4, 0
400d71bc:	221b      	addi.n	a2, a2, 1
400d71be:	e682a6        	blti	a2, 8, 400d71a8 <esp_vApplicationIdleHook+0x10>
400d71c1:	148c      	beqz.n	a4, 400d71c6 <esp_vApplicationIdleHook+0x2e>
400d71c3:	154a65        	call8	400ec668 <esp_pm_impl_waiti>
400d71c6:	f01d      	retw.n

400d71c8 <esp_register_freertos_idle_hook_for_cpu>:
400d71c8:	004136        	entry	a1, 32
400d71cb:	4a23f6        	bgeui	a3, 2, 400d7219 <esp_register_freertos_idle_hook_for_cpu+0x51>
400d71ce:	e468a1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d71d1:	b18be5        	call8	40088a90 <vTaskEnterCritical>
400d71d4:	090c      	movi.n	a9, 0
400d71d6:	000b86        	j	400d7208 <esp_register_freertos_idle_hook_for_cpu+0x40>
400d71d9:	000000        	ill
400d71dc:	b08390        	addx8	a8, a3, a9
400d71df:	e463a1        	l32r	a10, 400d036c <_flash_cache_start+0x354>
400d71e2:	a088a0        	addx4	a8, a8, a10
400d71e5:	002882        	l32i	a8, a8, 0
400d71e8:	01a856        	bnez	a8, 400d7206 <esp_register_freertos_idle_hook_for_cpu+0x3e>
400d71eb:	b03390        	addx8	a3, a3, a9
400d71ee:	a033a0        	addx4	a3, a3, a10
400d71f1:	006322        	s32i	a2, a3, 0
400d71f4:	f03d      	nop.n
400d71f6:	f03d      	nop.n
400d71f8:	f03d      	nop.n
400d71fa:	f03d      	nop.n
400d71fc:	e45da1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d71ff:	b19d25        	call8	40088bd0 <vTaskExitCritical>
400d7202:	020c      	movi.n	a2, 0
400d7204:	f01d      	retw.n
400d7206:	991b      	addi.n	a9, a9, 1
400d7208:	d089a6        	blti	a9, 8, 400d71dc <esp_register_freertos_idle_hook_for_cpu+0x14>
400d720b:	e459a1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d720e:	b19c25        	call8	40088bd0 <vTaskExitCritical>
400d7211:	01a122        	movi	a2, 0x101
400d7214:	f01d      	retw.n
400d7216:	000000        	ill
400d7219:	02a122        	movi	a2, 0x102
400d721c:	f01d      	retw.n
	...

400d7220 <esp_register_freertos_tick_hook_for_cpu>:
400d7220:	004136        	entry	a1, 32
400d7223:	4a23f6        	bgeui	a3, 2, 400d7271 <esp_register_freertos_tick_hook_for_cpu+0x51>
400d7226:	e452a1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d7229:	b18665        	call8	40088a90 <vTaskEnterCritical>
400d722c:	090c      	movi.n	a9, 0
400d722e:	000b86        	j	400d7260 <esp_register_freertos_tick_hook_for_cpu+0x40>
400d7231:	000000        	ill
400d7234:	b08390        	addx8	a8, a3, a9
400d7237:	e44fa1        	l32r	a10, 400d0374 <_flash_cache_start+0x35c>
400d723a:	a088a0        	addx4	a8, a8, a10
400d723d:	002882        	l32i	a8, a8, 0
400d7240:	01a856        	bnez	a8, 400d725e <esp_register_freertos_tick_hook_for_cpu+0x3e>
400d7243:	b03390        	addx8	a3, a3, a9
400d7246:	a033a0        	addx4	a3, a3, a10
400d7249:	006322        	s32i	a2, a3, 0
400d724c:	f03d      	nop.n
400d724e:	f03d      	nop.n
400d7250:	f03d      	nop.n
400d7252:	f03d      	nop.n
400d7254:	e447a1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d7257:	b197a5        	call8	40088bd0 <vTaskExitCritical>
400d725a:	020c      	movi.n	a2, 0
400d725c:	f01d      	retw.n
400d725e:	991b      	addi.n	a9, a9, 1
400d7260:	d089a6        	blti	a9, 8, 400d7234 <esp_register_freertos_tick_hook_for_cpu+0x14>
400d7263:	e443a1        	l32r	a10, 400d0370 <_flash_cache_start+0x358>
400d7266:	b196a5        	call8	40088bd0 <vTaskExitCritical>
400d7269:	01a122        	movi	a2, 0x101
400d726c:	f01d      	retw.n
400d726e:	000000        	ill
400d7271:	02a122        	movi	a2, 0x102
400d7274:	f01d      	retw.n
	...

400d7278 <ets_timer_setfn>:
400d7278:	006136        	entry	a1, 48
400d727b:	02ad      	mov.n	a10, a2
400d727d:	ab1425        	call8	400823c0 <timer_initialized>
400d7280:	1adc      	bnez.n	a10, 400d7295 <ets_timer_setfn+0x1d>
400d7282:	14a0c2        	movi	a12, 20
400d7285:	0b0c      	movi.n	a11, 0
400d7287:	20a220        	or	a10, a2, a2
400d728a:	e37a81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d728d:	0008e0        	callx8	a8
400d7290:	e43a81        	l32r	a8, 400d0378 <_flash_cache_start+0x360>
400d7293:	1289      	s32i.n	a8, a2, 4
400d7295:	f03d      	nop.n
400d7297:	f03d      	nop.n
400d7299:	f03d      	nop.n
400d729b:	f03d      	nop.n
400d729d:	042282        	l32i	a8, a2, 16
400d72a0:	02c856        	bnez	a8, 400d72d0 <ets_timer_setfn+0x58>
400d72a3:	0139      	s32i.n	a3, a1, 0
400d72a5:	1149      	s32i.n	a4, a1, 4
400d72a7:	030c      	movi.n	a3, 0
400d72a9:	2139      	s32i.n	a3, a1, 8
400d72ab:	f03d      	nop.n
400d72ad:	f03d      	nop.n
400d72af:	f03d      	nop.n
400d72b1:	f03d      	nop.n
400d72b3:	e43231        	l32r	a3, 400d037c <_flash_cache_start+0x364>
400d72b6:	3139      	s32i.n	a3, a1, 12
400d72b8:	10c2b2        	addi	a11, a2, 16
400d72bb:	01ad      	mov.n	a10, a1
400d72bd:	ff4f25        	call8	400d67b0 <esp_timer_create>
400d72c0:	ca8c      	beqz.n	a10, 400d72d0 <ets_timer_setfn+0x58>
400d72c2:	e42fe1        	l32r	a14, 400d0380 <_flash_cache_start+0x368>
400d72c5:	e42fd1        	l32r	a13, 400d0384 <_flash_cache_start+0x36c>
400d72c8:	2c4c      	movi.n	a12, 66
400d72ca:	e42fb1        	l32r	a11, 400d0388 <_flash_cache_start+0x370>
400d72cd:	b43765        	call8	4008b644 <_esp_error_check_failed>
400d72d0:	f01d      	retw.n
	...

400d72d4 <ets_timer_done>:
400d72d4:	004136        	entry	a1, 32
400d72d7:	20a220        	or	a10, a2, a2
400d72da:	ab0e65        	call8	400823c0 <timer_initialized>
400d72dd:	00ba16        	beqz	a10, 400d72ec <ets_timer_done+0x18>
400d72e0:	0422a2        	l32i	a10, a2, 16
400d72e3:	ff5125        	call8	400d67f4 <esp_timer_delete>
400d72e6:	080c      	movi.n	a8, 0
400d72e8:	4289      	s32i.n	a8, a2, 16
400d72ea:	1289      	s32i.n	a8, a2, 4
400d72ec:	f01d      	retw.n
	...

400d72f0 <esp_ipc_call_and_wait>:
400d72f0:	004136        	entry	a1, 32
400d72f3:	0222b6        	bltui	a2, 2, 400d72f9 <esp_ipc_call_and_wait+0x9>
400d72f6:	001c86        	j	400d736c <esp_ipc_call_and_wait+0x7c>
400d72f9:	b175e5        	call8	40088a58 <xTaskGetSchedulerState>
400d72fc:	712a66        	bnei	a10, 2, 400d7371 <esp_ipc_call_and_wait+0x81>
400d72ff:	e42361        	l32r	a6, 400d038c <_flash_cache_start+0x374>
400d7302:	0d0c      	movi.n	a13, 0
400d7304:	fc7c      	movi.n	a12, -1
400d7306:	0dbd      	mov.n	a11, a13
400d7308:	06a8      	l32i.n	a10, a6, 0
400d730a:	b085a5        	call8	40087b64 <xQueueGenericReceive>
400d730d:	e42081        	l32r	a8, 400d0390 <_flash_cache_start+0x378>
400d7310:	0020c0        	memw
400d7313:	0839      	s32i.n	a3, a8, 0
400d7315:	f03d      	nop.n
400d7317:	f03d      	nop.n
400d7319:	f03d      	nop.n
400d731b:	f03d      	nop.n
400d731d:	e41d31        	l32r	a3, 400d0394 <_flash_cache_start+0x37c>
400d7320:	0020c0        	memw
400d7323:	0349      	s32i.n	a4, a3, 0
400d7325:	f03d      	nop.n
400d7327:	f03d      	nop.n
400d7329:	f03d      	nop.n
400d732b:	f03d      	nop.n
400d732d:	e41a31        	l32r	a3, 400d0398 <_flash_cache_start+0x380>
400d7330:	0020c0        	memw
400d7333:	0359      	s32i.n	a5, a3, 0
400d7335:	f03d      	nop.n
400d7337:	f03d      	nop.n
400d7339:	f03d      	nop.n
400d733b:	f03d      	nop.n
400d733d:	e41731        	l32r	a3, 400d039c <_flash_cache_start+0x384>
400d7340:	a02230        	addx4	a2, a2, a3
400d7343:	0d0c      	movi.n	a13, 0
400d7345:	0dcd      	mov.n	a12, a13
400d7347:	0dbd      	mov.n	a11, a13
400d7349:	0022a2        	l32i	a10, a2, 0
400d734c:	b04965        	call8	400877e4 <xQueueGenericSend>
400d734f:	0d0c      	movi.n	a13, 0
400d7351:	fc7c      	movi.n	a12, -1
400d7353:	0dbd      	mov.n	a11, a13
400d7355:	e41221        	l32r	a2, 400d03a0 <_flash_cache_start+0x388>
400d7358:	02a8      	l32i.n	a10, a2, 0
400d735a:	b080a5        	call8	40087b64 <xQueueGenericReceive>
400d735d:	0d0c      	movi.n	a13, 0
400d735f:	0dcd      	mov.n	a12, a13
400d7361:	0dbd      	mov.n	a11, a13
400d7363:	06a8      	l32i.n	a10, a6, 0
400d7365:	b047e5        	call8	400877e4 <xQueueGenericSend>
400d7368:	020c      	movi.n	a2, 0
400d736a:	f01d      	retw.n
400d736c:	02a122        	movi	a2, 0x102
400d736f:	f01d      	retw.n
400d7371:	03a122        	movi	a2, 0x103
400d7374:	f01d      	retw.n
	...

400d7378 <esp_ipc_init>:
400d7378:	00a136        	entry	a1, 80
400d737b:	e34421        	l32r	a2, 400d008c <_flash_cache_start+0x74>
400d737e:	0020c0        	memw
400d7381:	002222        	l32i	a2, a2, 0
400d7384:	0020c0        	memw
400d7387:	0b6122        	s32i	a2, a1, 44
400d738a:	1a0c      	movi.n	a10, 1
400d738c:	b05de5        	call8	4008796c <xQueueCreateMutex>
400d738f:	e3ff21        	l32r	a2, 400d038c <_flash_cache_start+0x374>
400d7392:	02a9      	s32i.n	a10, a2, 0
400d7394:	3c0c      	movi.n	a12, 3
400d7396:	0b0c      	movi.n	a11, 0
400d7398:	1a0c      	movi.n	a10, 1
400d739a:	b036a5        	call8	40087704 <xQueueGenericCreate>
400d739d:	e40021        	l32r	a2, 400d03a0 <_flash_cache_start+0x388>
400d73a0:	02a9      	s32i.n	a10, a2, 0
400d73a2:	020c      	movi.n	a2, 0
400d73a4:	001286        	j	400d73f2 <esp_ipc_init+0x7a>
400d73a7:	200000        	or	a0, a0, a0
400d73aa:	c120d2        	l32i	a13, a0, 0x304
400d73ad:	fe          	.byte 0xfe
400d73ae:	a0b2e3        	lsi	f14, a2, 0x280
400d73b1:	0f          	.byte 0xf
400d73b2:	1dc1a2        	addi	a10, a1, 29
400d73b5:	04e7e5        	call8	400dc234 <snprintf>
400d73b8:	03a0c2        	movi	a12, 3
400d73bb:	0b0c      	movi.n	a11, 0
400d73bd:	1a0c      	movi.n	a10, 1
400d73bf:	b03465        	call8	40087704 <xQueueGenericCreate>
400d73c2:	e3f681        	l32r	a8, 400d039c <_flash_cache_start+0x384>
400d73c5:	a08280        	addx4	a8, a2, a8
400d73c8:	08a9      	s32i.n	a10, a8, 0
400d73ca:	0129      	s32i.n	a2, a1, 0
400d73cc:	0f0c      	movi.n	a15, 0
400d73ce:	8e1c      	movi.n	a14, 24
400d73d0:	02dd      	mov.n	a13, a2
400d73d2:	00a4c2        	movi	a12, 0x400
400d73d5:	1dc1b2        	addi	a11, a1, 29
400d73d8:	e3f4a1        	l32r	a10, 400d03a8 <_flash_cache_start+0x390>
400d73db:	b1a5a5        	call8	40088e34 <xTaskCreatePinnedToCore>
400d73de:	0e1a26        	beqi	a10, 1, 400d73f0 <esp_ipc_init+0x78>
400d73e1:	e3f2d1        	l32r	a13, 400d03ac <_flash_cache_start+0x394>
400d73e4:	e3f3c1        	l32r	a12, 400d03b0 <_flash_cache_start+0x398>
400d73e7:	61a0b2        	movi	a11, 97
400d73ea:	e3f2a1        	l32r	a10, 400d03b4 <_flash_cache_start+0x39c>
400d73ed:	03aea5        	call8	400daed8 <__assert_func>
400d73f0:	221b      	addi.n	a2, a2, 1
400d73f2:	b322a6        	blti	a2, 2, 400d73a9 <esp_ipc_init+0x31>
400d73f5:	0020c0        	memw
400d73f8:	b188      	l32i.n	a8, a1, 44
400d73fa:	e32421        	l32r	a2, 400d008c <_flash_cache_start+0x74>
400d73fd:	0020c0        	memw
400d7400:	0228      	l32i.n	a2, a2, 0
400d7402:	021827        	beq	a8, a2, 400d7408 <esp_ipc_init+0x90>
400d7405:	ff2b25        	call8	400d66b8 <__stack_chk_fail>
400d7408:	f01d      	retw.n
	...

400d740c <esp_ipc_call>:
400d740c:	004136        	entry	a1, 32
400d740f:	00a0d2        	movi	a13, 0
400d7412:	20c440        	or	a12, a4, a4
400d7415:	20b330        	or	a11, a3, a3
400d7418:	02ad      	mov.n	a10, a2
400d741a:	ffed65        	call8	400d72f0 <esp_ipc_call_and_wait>
400d741d:	0a2d      	mov.n	a2, a10
400d741f:	f01d      	retw.n
400d7421:	000000        	ill

400d7424 <get_reset_reason>:
400d7424:	004136        	entry	a1, 32
400d7427:	081c      	movi.n	a8, 16
400d7429:	433827        	bltu	a8, a2, 400d7470 <get_reset_reason+0x4c>
400d742c:	e3e381        	l32r	a8, 400d03b8 <_flash_cache_start+0x3a0>
400d742f:	a02280        	addx4	a2, a2, a8
400d7432:	0228      	l32i.n	a2, a2, 0
400d7434:	0002a0        	jx	a2
400d7437:	120c      	movi.n	a2, 1
400d7439:	f01d      	retw.n
400d743b:	fcc382        	addi	a8, a3, -4
400d743e:	1a0c      	movi.n	a10, 1
400d7440:	020c      	movi.n	a2, 0
400d7442:	024d      	mov.n	a4, a2
400d7444:	834a80        	moveqz	a4, a10, a8
400d7447:	f7c392        	addi	a9, a3, -9
400d744a:	832a90        	moveqz	a2, a10, a9
400d744d:	202240        	or	a2, a2, a4
400d7450:	42ec      	bnez.n	a2, 400d7478 <get_reset_reason+0x54>
400d7452:	fbc322        	addi	a2, a3, -5
400d7455:	2322b6        	bltui	a2, 2, 400d747c <get_reset_reason+0x58>
400d7458:	320c      	movi.n	a2, 3
400d745a:	f01d      	retw.n
400d745c:	620c      	movi.n	a2, 6
400d745e:	f01d      	retw.n
400d7460:	520c      	movi.n	a2, 5
400d7462:	f01d      	retw.n
400d7464:	720c      	movi.n	a2, 7
400d7466:	f01d      	retw.n
400d7468:	920c      	movi.n	a2, 9
400d746a:	f01d      	retw.n
400d746c:	a20c      	movi.n	a2, 10
400d746e:	f01d      	retw.n
400d7470:	020c      	movi.n	a2, 0
400d7472:	f01d      	retw.n
400d7474:	820c      	movi.n	a2, 8
400d7476:	f01d      	retw.n
400d7478:	032d      	mov.n	a2, a3
400d747a:	f01d      	retw.n
400d747c:	032d      	mov.n	a2, a3
400d747e:	f01d      	retw.n

400d7480 <esp_reset_reason_clear_hint>:
400d7480:	004136        	entry	a1, 32
400d7483:	090c      	movi.n	a9, 0
400d7485:	e3cd81        	l32r	a8, 400d03bc <_flash_cache_start+0x3a4>
400d7488:	0020c0        	memw
400d748b:	0899      	s32i.n	a9, a8, 0
400d748d:	f01d      	retw.n
	...

400d7490 <esp_reset_reason_init>:
400d7490:	004136        	entry	a1, 32
400d7493:	ab0c65        	call8	40082558 <esp_reset_reason_get_hint>
400d7496:	202aa0        	or	a2, a10, a10
400d7499:	00a0a2        	movi	a10, 0
400d749c:	e33a81        	l32r	a8, 400d0184 <_flash_cache_start+0x16c>
400d749f:	0008e0        	callx8	a8
400d74a2:	02bd      	mov.n	a11, a2
400d74a4:	fff7e5        	call8	400d7424 <get_reset_reason>
400d74a7:	e3c681        	l32r	a8, 400d03c0 <_flash_cache_start+0x3a8>
400d74aa:	08a9      	s32i.n	a10, a8, 0
400d74ac:	128c      	beqz.n	a2, 400d74b1 <esp_reset_reason_init+0x21>
400d74ae:	fffd25        	call8	400d7480 <esp_reset_reason_clear_hint>
400d74b1:	f01d      	retw.n
400d74b3:	880c00        	lsi	f0, a12, 0x220
400d74b6:	006000        	rsil	a0, 0
400d74b9:	000c00        	lsi	f0, a12, 0
400d74bc:	008890        	any4	b9, b8:b9:b10:b11
400d74bf:	000060        	lsi	f6, a0, 0
400d74c2:	100800        	and	a0, a8, a0
400d74c5:	600260        	lsi	f6, a2, 0x180
400d74c8:	008894        	lsi	f9, a8, 0
400d74cb:	ffff60        	f64cmph	a15, a15, a6, 15
400d74ce:	2c8007        	bany	a0, a0, 400d74fe <pwdet_sar2_init+0x26>
400d74d1:	0088      	l32i.n	a8, a0, 0
400d74d3:	883860        	lsi	f6, a8, 0x220
400d74d6:	00          	.byte 00
400d74d7:	60          	.byte 0x60

400d74d8 <pwdet_sar2_init>:
400d74d8:	004136        	entry	a1, 32
400d74db:	fff6a1        	l32r	a10, 400d74b4 <esp_reset_reason_init+0x24>
400d74de:	fff691        	l32r	a9, 400d74b8 <esp_reset_reason_init+0x28>
400d74e1:	0020c0        	memw
400d74e4:	0ab8      	l32i.n	a11, a10, 0
400d74e6:	fff581        	l32r	a8, 400d74bc <esp_reset_reason_init+0x2c>
400d74e9:	209b90        	or	a9, a11, a9
400d74ec:	0020c0        	memw
400d74ef:	0a99      	s32i.n	a9, a10, 0
400d74f1:	0020c0        	memw
400d74f4:	08b8      	l32i.n	a11, a8, 0
400d74f6:	fff291        	l32r	a9, 400d74c0 <esp_reset_reason_init+0x30>
400d74f9:	fff2a1        	l32r	a10, 400d74c4 <esp_reset_reason_init+0x34>
400d74fc:	209b90        	or	a9, a11, a9
400d74ff:	0020c0        	memw
400d7502:	0899      	s32i.n	a9, a8, 0
400d7504:	0020c0        	memw
400d7507:	0ab8      	l32i.n	a11, a10, 0
400d7509:	b97c      	movi.n	a9, -5
400d750b:	109b90        	and	a9, a11, a9
400d750e:	0020c0        	memw
400d7511:	0a99      	s32i.n	a9, a10, 0
400d7513:	0020c0        	memw
400d7516:	08b8      	l32i.n	a11, a8, 0
400d7518:	e38da1        	l32r	a10, 400d034c <_flash_cache_start+0x334>
400d751b:	ffeb91        	l32r	a9, 400d74c8 <esp_reset_reason_init+0x38>
400d751e:	10aba0        	and	a10, a11, a10
400d7521:	0020c0        	memw
400d7524:	08a9      	s32i.n	a10, a8, 0
400d7526:	0020c0        	memw
400d7529:	09a8      	l32i.n	a10, a9, 0
400d752b:	e2d681        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400d752e:	208a80        	or	a8, a10, a8
400d7531:	0020c0        	memw
400d7534:	0989      	s32i.n	a8, a9, 0
400d7536:	0020c0        	memw
400d7539:	09b8      	l32i.n	a11, a9, 0
400d753b:	ffe4a1        	l32r	a10, 400d74cc <esp_reset_reason_init+0x3c>
400d753e:	ffe481        	l32r	a8, 400d74d0 <esp_reset_reason_init+0x40>
400d7541:	10aba0        	and	a10, a11, a10
400d7544:	0020c0        	memw
400d7547:	09a9      	s32i.n	a10, a9, 0
400d7549:	0020c0        	memw
400d754c:	08b8      	l32i.n	a11, a8, 0
400d754e:	ca0c      	movi.n	a10, 12
400d7550:	ffe191        	l32r	a9, 400d74d4 <esp_reset_reason_init+0x44>
400d7553:	20aba0        	or	a10, a11, a10
400d7556:	0020c0        	memw
400d7559:	08a9      	s32i.n	a10, a8, 0
400d755b:	0020c0        	memw
400d755e:	09b8      	l32i.n	a11, a9, 0
400d7560:	e2c3a1        	l32r	a10, 400d006c <_flash_cache_start+0x54>
400d7563:	10aba0        	and	a10, a11, a10
400d7566:	0020c0        	memw
400d7569:	09a9      	s32i.n	a10, a9, 0
400d756b:	0020c0        	memw
400d756e:	09b8      	l32i.n	a11, a9, 0
400d7570:	ca7c      	movi.n	a10, -4
400d7572:	10aba0        	and	a10, a11, a10
400d7575:	0020c0        	memw
400d7578:	09a9      	s32i.n	a10, a9, 0
400d757a:	0020c0        	memw
400d757d:	08a8      	l32i.n	a10, a8, 0
400d757f:	1faf92        	movi	a9, -225
400d7582:	10aa90        	and	a10, a10, a9
400d7585:	80a092        	movi	a9, 128
400d7588:	209a90        	or	a9, a10, a9
400d758b:	0020c0        	memw
400d758e:	0899      	s32i.n	a9, a8, 0
400d7590:	f01d      	retw.n
	...

400d7594 <bootloader_common_set_flash_cs_timing>:
400d7594:	004136        	entry	a1, 32
400d7597:	e38b91        	l32r	a9, 400d03c4 <_flash_cache_start+0x3ac>
400d759a:	0020c0        	memw
400d759d:	0988      	l32i.n	a8, a9, 0
400d759f:	0c3c      	movi.n	a12, 48
400d75a1:	2088c0        	or	a8, a8, a12
400d75a4:	0020c0        	memw
400d75a7:	0989      	s32i.n	a8, a9, 0
400d75a9:	f03d      	nop.n
400d75ab:	f03d      	nop.n
400d75ad:	f03d      	nop.n
400d75af:	f03d      	nop.n
400d75b1:	e385d1        	l32r	a13, 400d03c8 <_flash_cache_start+0x3b0>
400d75b4:	0020c0        	memw
400d75b7:	0d88      	l32i.n	a8, a13, 0
400d75b9:	0fafb2        	movi	a11, -241
400d75bc:	1088b0        	and	a8, a8, a11
400d75bf:	0a1c      	movi.n	a10, 16
400d75c1:	2088a0        	or	a8, a8, a10
400d75c4:	0020c0        	memw
400d75c7:	0d89      	s32i.n	a8, a13, 0
400d75c9:	f03d      	nop.n
400d75cb:	f03d      	nop.n
400d75cd:	f03d      	nop.n
400d75cf:	f03d      	nop.n
400d75d1:	0020c0        	memw
400d75d4:	0d88      	l32i.n	a8, a13, 0
400d75d6:	097c      	movi.n	a9, -16
400d75d8:	108890        	and	a8, a8, a9
400d75db:	0020c0        	memw
400d75de:	0d89      	s32i.n	a8, a13, 0
400d75e0:	f03d      	nop.n
400d75e2:	f03d      	nop.n
400d75e4:	f03d      	nop.n
400d75e6:	f03d      	nop.n
400d75e8:	e37981        	l32r	a8, 400d03cc <_flash_cache_start+0x3b4>
400d75eb:	0020c0        	memw
400d75ee:	08d8      	l32i.n	a13, a8, 0
400d75f0:	20cdc0        	or	a12, a13, a12
400d75f3:	0020c0        	memw
400d75f6:	08c9      	s32i.n	a12, a8, 0
400d75f8:	f03d      	nop.n
400d75fa:	f03d      	nop.n
400d75fc:	f03d      	nop.n
400d75fe:	f03d      	nop.n
400d7600:	e37481        	l32r	a8, 400d03d0 <_flash_cache_start+0x3b8>
400d7603:	0020c0        	memw
400d7606:	08c8      	l32i.n	a12, a8, 0
400d7608:	10bcb0        	and	a11, a12, a11
400d760b:	20aba0        	or	a10, a11, a10
400d760e:	0020c0        	memw
400d7611:	08a9      	s32i.n	a10, a8, 0
400d7613:	f03d      	nop.n
400d7615:	f03d      	nop.n
400d7617:	f03d      	nop.n
400d7619:	f03d      	nop.n
400d761b:	0020c0        	memw
400d761e:	08a8      	l32i.n	a10, a8, 0
400d7620:	109a90        	and	a9, a10, a9
400d7623:	0020c0        	memw
400d7626:	0899      	s32i.n	a9, a8, 0
400d7628:	f01d      	retw.n
	...

400d762c <lookup_storage_from_name(char const*)>:
400d762c:	004136        	entry	a1, 32
400d762f:	e36931        	l32r	a3, 400d03d4 <_flash_cache_start+0x3bc>
400d7632:	0338      	l32i.n	a3, a3, 0
400d7634:	040c      	movi.n	a4, 0
400d7636:	121347        	beq	a3, a4, 400d764c <lookup_storage_from_name(char const*)+0x20>
400d7639:	02bd      	mov.n	a11, a2
400d763b:	0223a2        	l32i	a10, a3, 8
400d763e:	e36681        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d7641:	0008e0        	callx8	a8
400d7644:	9a8c      	beqz.n	a10, 400d7651 <lookup_storage_from_name(char const*)+0x25>
400d7646:	180c      	movi.n	a8, 1
400d7648:	0001c6        	j	400d7653 <lookup_storage_from_name(char const*)+0x27>
400d764b:	080c00        	lsx	f0, a12, a0
400d764e:	000046        	j	400d7653 <lookup_storage_from_name(char const*)+0x27>
400d7651:	080c      	movi.n	a8, 0
400d7653:	388c      	beqz.n	a8, 400d765a <lookup_storage_from_name(char const*)+0x2e>
400d7655:	1338      	l32i.n	a3, a3, 4
400d7657:	fff6c6        	j	400d7636 <lookup_storage_from_name(char const*)+0xa>
400d765a:	032d      	mov.n	a2, a3
400d765c:	f01d      	retw.n
	...

400d7660 <nvs_flash_init_custom>:
400d7660:	004136        	entry	a1, 32
400d7663:	20a220        	or	a10, a2, a2
400d7666:	fffc65        	call8	400d762c <lookup_storage_from_name(char const*)>
400d7669:	02ba56        	bnez	a10, 400d7698 <nvs_flash_init_custom+0x38>
400d766c:	68a0a2        	movi	a10, 104
400d766f:	135c65        	call8	400eac34 <operator new(unsigned int)>
400d7672:	205aa0        	or	a5, a10, a10
400d7675:	080c      	movi.n	a8, 0
400d7677:	0a89      	s32i.n	a8, a10, 0
400d7679:	1a89      	s32i.n	a8, a10, 4
400d767b:	2a29      	s32i.n	a2, a10, 8
400d767d:	4a89      	s32i.n	a8, a10, 16
400d767f:	5a89      	s32i.n	a8, a10, 20
400d7681:	6a89      	s32i.n	a8, a10, 24
400d7683:	7a89      	s32i.n	a8, a10, 28
400d7685:	8a89      	s32i.n	a8, a10, 32
400d7687:	9a89      	s32i.n	a8, a10, 36
400d7689:	aa89      	s32i.n	a8, a10, 40
400d768b:	ea89      	s32i.n	a8, a10, 56
400d768d:	fa89      	s32i.n	a8, a10, 60
400d768f:	106a82        	s32i	a8, a10, 64
400d7692:	196a82        	s32i	a8, a10, 100
400d7695:	000086        	j	400d769b <nvs_flash_init_custom+0x3b>
400d7698:	00a052        	movi	a5, 0
400d769b:	20c440        	or	a12, a4, a4
400d769e:	20b330        	or	a11, a3, a3
400d76a1:	003d65        	call8	400d7a78 <nvs::Storage::init(unsigned int, unsigned int)>
400d76a4:	0a2d      	mov.n	a2, a10
400d76a6:	054516        	beqz	a5, 400d76fe <nvs_flash_init_custom+0x9e>
400d76a9:	043a56        	bnez	a10, 400d76f0 <nvs_flash_init_custom+0x90>
400d76ac:	e34a31        	l32r	a3, 400d03d4 <_flash_cache_start+0x3bc>
400d76af:	1338      	l32i.n	a3, a3, 4
400d76b1:	038c      	beqz.n	a3, 400d76b5 <nvs_flash_init_custom+0x55>
400d76b3:	1359      	s32i.n	a5, a3, 4
400d76b5:	f03d      	nop.n
400d76b7:	f03d      	nop.n
400d76b9:	f03d      	nop.n
400d76bb:	f03d      	nop.n
400d76bd:	e34531        	l32r	a3, 400d03d4 <_flash_cache_start+0x3bc>
400d76c0:	1348      	l32i.n	a4, a3, 4
400d76c2:	0549      	s32i.n	a4, a5, 0
400d76c4:	040c      	movi.n	a4, 0
400d76c6:	1549      	s32i.n	a4, a5, 4
400d76c8:	1359      	s32i.n	a5, a3, 4
400d76ca:	f03d      	nop.n
400d76cc:	f03d      	nop.n
400d76ce:	f03d      	nop.n
400d76d0:	f03d      	nop.n
400d76d2:	0338      	l32i.n	a3, a3, 0
400d76d4:	049347        	bne	a3, a4, 400d76dc <nvs_flash_init_custom+0x7c>
400d76d7:	e33f31        	l32r	a3, 400d03d4 <_flash_cache_start+0x3bc>
400d76da:	0359      	s32i.n	a5, a3, 0
400d76dc:	f03d      	nop.n
400d76de:	f03d      	nop.n
400d76e0:	f03d      	nop.n
400d76e2:	f03d      	nop.n
400d76e4:	e33c41        	l32r	a4, 400d03d4 <_flash_cache_start+0x3bc>
400d76e7:	2438      	l32i.n	a3, a4, 8
400d76e9:	331b      	addi.n	a3, a3, 1
400d76eb:	2439      	s32i.n	a3, a4, 8
400d76ed:	f01d      	retw.n
400d76ef:	a51600        	extui	a1, a0, 22, 11
400d76f2:	a55000        	extui	a5, a0, 16, 11
400d76f5:	0f6520        	f64cmph	a6, a5, a2, 0
400d76f8:	05ad00        	extui	a10, a0, 29, 1
400d76fb:	135025        	call8	400eabfc <operator delete(void*)>
400d76fe:	f01d      	retw.n

400d7700 <nvs_flash_init_partition>:
400d7700:	004136        	entry	a1, 32
400d7703:	e33681        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d7706:	002882        	l32i	a8, a8, 0
400d7709:	c8cc      	bnez.n	a8, 400d7719 <nvs_flash_init_partition+0x19>
400d770b:	01a0a2        	movi	a10, 1
400d770e:	201110        	or	a1, a1, a1
400d7711:	b025a5        	call8	4008796c <xQueueCreateMutex>
400d7714:	e33281        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d7717:	08a9      	s32i.n	a10, a8, 0
400d7719:	f03d      	nop.n
400d771b:	f03d      	nop.n
400d771d:	f03d      	nop.n
400d771f:	f03d      	nop.n
400d7721:	e32e81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d7724:	08a8      	l32i.n	a10, a8, 0
400d7726:	aa8c      	beqz.n	a10, 400d7734 <nvs_flash_init_partition+0x34>
400d7728:	0d0c      	movi.n	a13, 0
400d772a:	fc7c      	movi.n	a12, -1
400d772c:	0dbd      	mov.n	a11, a13
400d772e:	201110        	or	a1, a1, a1
400d7731:	b04325        	call8	40087b64 <xQueueGenericReceive>
400d7734:	02ad      	mov.n	a10, a2
400d7736:	201110        	or	a1, a1, a1
400d7739:	ffef25        	call8	400d762c <lookup_storage_from_name(char const*)>
400d773c:	4aec      	bnez.n	a10, 400d7764 <nvs_flash_init_partition+0x64>
400d773e:	02cd      	mov.n	a12, a2
400d7740:	2b0c      	movi.n	a11, 2
400d7742:	1a0c      	movi.n	a10, 1
400d7744:	201110        	or	a1, a1, a1
400d7747:	12c425        	call8	400ea388 <esp_partition_find_first>
400d774a:	ba9c      	beqz.n	a10, 400d7769 <nvs_flash_init_partition+0x69>
400d774c:	2ab8      	l32i.n	a11, a10, 8
400d774e:	3ac8      	l32i.n	a12, a10, 12
400d7750:	41ccc0        	srli	a12, a12, 12
400d7753:	41bcb0        	srli	a11, a11, 12
400d7756:	02ad      	mov.n	a10, a2
400d7758:	201110        	or	a1, a1, a1
400d775b:	fff065        	call8	400d7660 <nvs_flash_init_custom>
400d775e:	0a2d      	mov.n	a2, a10
400d7760:	000206        	j	400d776c <nvs_flash_init_partition+0x6c>
400d7763:	020c00        	andb	b0, b12, b0
400d7766:	000086        	j	400d776c <nvs_flash_init_partition+0x6c>
400d7769:	05a122        	movi	a2, 0x105
400d776c:	e31c81        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d776f:	08a8      	l32i.n	a10, a8, 0
400d7771:	8aac      	beqz.n	a10, 400d779d <nvs_flash_init_partition+0x9d>
400d7773:	0d0c      	movi.n	a13, 0
400d7775:	0dcd      	mov.n	a12, a13
400d7777:	20bdd0        	or	a11, a13, a13
400d777a:	201110        	or	a1, a1, a1
400d777d:	b00665        	call8	400877e4 <xQueueGenericSend>
400d7780:	f01d      	retw.n
400d7782:	e31681        	l32r	a8, 400d03dc <_flash_cache_start+0x3c4>
400d7785:	08a8      	l32i.n	a10, a8, 0
400d7787:	aa8c      	beqz.n	a10, 400d7795 <nvs_flash_init_partition+0x95>
400d7789:	0d0c      	movi.n	a13, 0
400d778b:	0dcd      	mov.n	a12, a13
400d778d:	0dbd      	mov.n	a11, a13
400d778f:	201110        	or	a1, a1, a1
400d7792:	b00525        	call8	400877e4 <xQueueGenericSend>
400d7795:	02ad      	mov.n	a10, a2
400d7797:	201110        	or	a1, a1, a1
400d779a:	fd5265        	call8	400d4cc0 <_Unwind_Resume>
400d779d:	f01d      	retw.n
	...

400d77a0 <nvs_flash_init>:
400d77a0:	004136        	entry	a1, 32
400d77a3:	e30fa1        	l32r	a10, 400d03e0 <_flash_cache_start+0x3c8>
400d77a6:	fff5a5        	call8	400d7700 <nvs_flash_init_partition>
400d77a9:	0a2d      	mov.n	a2, a10
400d77ab:	f01d      	retw.n
400d77ad:	000000        	ill

400d77b0 <nvs::Storage::clearNamespaces()>:
400d77b0:	004136        	entry	a1, 32
400d77b3:	38c222        	addi	a2, a2, 56
400d77b6:	02a8      	l32i.n	a10, a2, 0
400d77b8:	caac      	beqz.n	a10, 400d77e8 <nvs::Storage::clearNamespaces()+0x38>
400d77ba:	0a88      	l32i.n	a8, a10, 0
400d77bc:	1a98      	l32i.n	a9, a10, 4
400d77be:	388c      	beqz.n	a8, 400d77c5 <nvs::Storage::clearNamespaces()+0x15>
400d77c0:	1899      	s32i.n	a9, a8, 4
400d77c2:	000046        	j	400d77c7 <nvs::Storage::clearNamespaces()+0x17>
400d77c5:	0299      	s32i.n	a9, a2, 0
400d77c7:	398c      	beqz.n	a9, 400d77ce <nvs::Storage::clearNamespaces()+0x1e>
400d77c9:	0989      	s32i.n	a8, a9, 0
400d77cb:	000086        	j	400d77d1 <nvs::Storage::clearNamespaces()+0x21>
400d77ce:	016282        	s32i	a8, a2, 4
400d77d1:	f03d      	nop.n
400d77d3:	f03d      	nop.n
400d77d5:	f03d      	nop.n
400d77d7:	f03d      	nop.n
400d77d9:	022282        	l32i	a8, a2, 8
400d77dc:	ffc882        	addi	a8, a8, -1
400d77df:	2289      	s32i.n	a8, a2, 8
400d77e1:	1341a5        	call8	400eabfc <operator delete(void*)>
400d77e4:	fff386        	j	400d77b6 <nvs::Storage::clearNamespaces()+0x6>
400d77e7:	f01d00        	subx8	a1, a13, a0
	...

400d77ec <nvs::Storage::~Storage()>:
400d77ec:	004136        	entry	a1, 32
400d77ef:	02ad      	mov.n	a10, a2
400d77f1:	fffbe5        	call8	400d77b0 <nvs::Storage::clearNamespaces()>
400d77f4:	a248      	l32i.n	a4, a2, 40
400d77f6:	44ac      	beqz.n	a4, 400d781e <nvs::Storage::~Storage()+0x32>
400d77f8:	24ac      	beqz.n	a4, 400d781e <nvs::Storage::~Storage()+0x32>
400d77fa:	fcc432        	addi	a3, a4, -4
400d77fd:	0388      	l32i.n	a8, a3, 0
400d77ff:	a08880        	addx4	a8, a8, a8
400d7802:	1138c0        	slli	a3, a8, 4
400d7805:	803430        	add	a3, a4, a3
400d7808:	0c1437        	beq	a4, a3, 400d7818 <nvs::Storage::~Storage()+0x2c>
400d780b:	b0c332        	addi	a3, a3, -80
400d780e:	44c3a2        	addi	a10, a3, 68
400d7811:	013e65        	call8	400d8bf8 <nvs::HashList::~HashList()>
400d7814:	fffc06        	j	400d7808 <nvs::Storage::~Storage()+0x1c>
400d7817:	c4a200        	extui	a10, a0, 2, 13
400d781a:	e5fc      	bnez.n	a5, 400d785c <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x34>
400d781c:	321376        	bt	b3, 400d7852 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x2a>
400d781f:	3200a0        	orbc	b0, b0, b10
400d7822:	900a62        	l8ui	a6, a10, 144
400d7825:	000000        	ill

400d7828 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)>:
400d7828:	00c136        	entry	a1, 96
400d782b:	e21841        	l32r	a4, 400d008c <_flash_cache_start+0x74>
400d782e:	0020c0        	memw
400d7831:	0448      	l32i.n	a4, a4, 0
400d7833:	0020c0        	memw
400d7836:	f149      	s32i.n	a4, a1, 60
400d7838:	f03d      	nop.n
400d783a:	f03d      	nop.n
400d783c:	f03d      	nop.n
400d783e:	f03d      	nop.n
400d7840:	4248      	l32i.n	a4, a2, 16
400d7842:	0b7416        	beqz	a4, 400d78fd <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xd5>
400d7845:	020c      	movi.n	a2, 0
400d7847:	6129      	s32i.n	a2, a1, 24
400d7849:	ffa0b2        	movi	a11, 255
400d784c:	11b9      	s32i.n	a11, a1, 4
400d784e:	01b9      	s32i.n	a11, a1, 0
400d7850:	1cc1f2        	addi	a15, a1, 28
400d7853:	18c1e2        	addi	a14, a1, 24
400d7856:	0d0c      	movi.n	a13, 0
400d7858:	8c4c      	movi.n	a12, 72
400d785a:	20a440        	or	a10, a4, a4
400d785d:	009e25        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d7860:	094a56        	bnez	a10, 400d78f8 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xd0>
400d7863:	ca1c      	movi.n	a10, 28
400d7865:	133ce5        	call8	400eac34 <operator new(unsigned int)>
400d7868:	0a2d      	mov.n	a2, a10
400d786a:	080c      	movi.n	a8, 0
400d786c:	0a89      	s32i.n	a8, a10, 0
400d786e:	1a89      	s32i.n	a8, a10, 4
400d7870:	fc0c      	movi.n	a12, 15
400d7872:	24c1b2        	addi	a11, a1, 36
400d7875:	aa8b      	addi.n	a10, a10, 8
400d7877:	e2db81        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400d787a:	0008e0        	callx8	a8
400d787d:	1c0182        	l8ui	a8, a1, 28
400d7880:	184282        	s8i	a8, a2, 24
400d7883:	0020c0        	memw
400d7886:	f03d      	nop.n
400d7888:	f03d      	nop.n
400d788a:	f03d      	nop.n
400d788c:	f03d      	nop.n
400d788e:	390182        	l8ui	a8, a1, 57
400d7891:	1a4282        	s8i	a8, a2, 26
400d7894:	0020c0        	memw
400d7897:	f03d      	nop.n
400d7899:	f03d      	nop.n
400d789b:	f03d      	nop.n
400d789d:	f03d      	nop.n
400d789f:	380182        	l8ui	a8, a1, 56
400d78a2:	194282        	s8i	a8, a2, 25
400d78a5:	0020c0        	memw
400d78a8:	f03d      	nop.n
400d78aa:	f03d      	nop.n
400d78ac:	f03d      	nop.n
400d78ae:	f03d      	nop.n
400d78b0:	1388      	l32i.n	a8, a3, 4
400d78b2:	088c      	beqz.n	a8, 400d78b6 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x8e>
400d78b4:	1829      	s32i.n	a2, a8, 4
400d78b6:	f03d      	nop.n
400d78b8:	f03d      	nop.n
400d78ba:	f03d      	nop.n
400d78bc:	f03d      	nop.n
400d78be:	1388      	l32i.n	a8, a3, 4
400d78c0:	0289      	s32i.n	a8, a2, 0
400d78c2:	080c      	movi.n	a8, 0
400d78c4:	1289      	s32i.n	a8, a2, 4
400d78c6:	1329      	s32i.n	a2, a3, 4
400d78c8:	f03d      	nop.n
400d78ca:	f03d      	nop.n
400d78cc:	f03d      	nop.n
400d78ce:	f03d      	nop.n
400d78d0:	0388      	l32i.n	a8, a3, 0
400d78d2:	08cc      	bnez.n	a8, 400d78d6 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xae>
400d78d4:	0329      	s32i.n	a2, a3, 0
400d78d6:	f03d      	nop.n
400d78d8:	f03d      	nop.n
400d78da:	f03d      	nop.n
400d78dc:	f03d      	nop.n
400d78de:	2328      	l32i.n	a2, a3, 8
400d78e0:	221b      	addi.n	a2, a2, 1
400d78e2:	2329      	s32i.n	a2, a3, 8
400d78e4:	f03d      	nop.n
400d78e6:	f03d      	nop.n
400d78e8:	f03d      	nop.n
400d78ea:	f03d      	nop.n
400d78ec:	1e0122        	l8ui	a2, a1, 30
400d78ef:	6188      	l32i.n	a8, a1, 24
400d78f1:	282a      	add.n	a2, a8, a2
400d78f3:	6129      	s32i.n	a2, a1, 24
400d78f5:	ffd406        	j	400d7849 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x21>
400d78f8:	1448      	l32i.n	a4, a4, 4
400d78fa:	ffd106        	j	400d7842 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x1a>
400d78fd:	0020c0        	memw
400d7900:	f138      	l32i.n	a3, a1, 60
400d7902:	e1e221        	l32r	a2, 400d008c <_flash_cache_start+0x74>
400d7905:	0020c0        	memw
400d7908:	0228      	l32i.n	a2, a2, 0
400d790a:	021327        	beq	a3, a2, 400d7910 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xe8>
400d790d:	fedaa5        	call8	400d66b8 <__stack_chk_fail>
400d7910:	f01d      	retw.n
	...

400d7914 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)>:
400d7914:	028136        	entry	a1, 0x140
400d7917:	e1dd41        	l32r	a4, 400d008c <_flash_cache_start+0x74>
400d791a:	0020c0        	memw
400d791d:	0448      	l32i.n	a4, a4, 0
400d791f:	0020c0        	memw
400d7922:	476142        	s32i	a4, a1, 0x11c
400d7925:	f03d      	nop.n
400d7927:	f03d      	nop.n
400d7929:	f03d      	nop.n
400d792b:	f03d      	nop.n
400d792d:	4268      	l32i.n	a6, a2, 16
400d792f:	12e616        	beqz	a6, 400d7a61 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x14d>
400d7932:	020c      	movi.n	a2, 0
400d7934:	6129      	s32i.n	a2, a1, 24
400d7936:	ffa0b2        	movi	a11, 255
400d7939:	11b9      	s32i.n	a11, a1, 4
400d793b:	01b9      	s32i.n	a11, a1, 0
400d793d:	fcaef2        	movi	a15, 0xfffffefc
400d7940:	20a122        	movi	a2, 0x120
400d7943:	221a      	add.n	a2, a2, a1
400d7945:	f2fa      	add.n	a15, a2, a15
400d7947:	f8aee2        	movi	a14, 0xfffffef8
400d794a:	e2ea      	add.n	a14, a2, a14
400d794c:	0d0c      	movi.n	a13, 0
400d794e:	2c4c      	movi.n	a12, 66
400d7950:	06ad      	mov.n	a10, a6
400d7952:	008ee5        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d7955:	103a56        	bnez	a10, 400d7a5c <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x148>
400d7958:	0328      	l32i.n	a2, a3, 0
400d795a:	3cc172        	addi	a7, a1, 60
400d795d:	042c      	movi.n	a4, 32
400d795f:	04cd      	mov.n	a12, a4
400d7961:	fcaeb2        	movi	a11, 0xfffffefc
400d7964:	20a152        	movi	a5, 0x120
400d7967:	551a      	add.n	a5, a5, a1
400d7969:	b5ba      	add.n	a11, a5, a11
400d796b:	07ad      	mov.n	a10, a7
400d796d:	e1ca81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d7970:	0008e0        	callx8	a8
400d7973:	814a      	add.n	a8, a1, a4
400d7975:	3cc852        	addi	a5, a8, 60
400d7978:	04cd      	mov.n	a12, a4
400d797a:	07bd      	mov.n	a11, a7
400d797c:	05ad      	mov.n	a10, a5
400d797e:	e1c681        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d7981:	0008e0        	callx8	a8
400d7984:	814a      	add.n	a8, a1, a4
400d7986:	5cc872        	addi	a7, a8, 92
400d7989:	04cd      	mov.n	a12, a4
400d798b:	05bd      	mov.n	a11, a5
400d798d:	07ad      	mov.n	a10, a7
400d798f:	e1c281        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d7992:	0008e0        	callx8	a8
400d7995:	814a      	add.n	a8, a1, a4
400d7997:	7cc852        	addi	a5, a8, 124
400d799a:	04cd      	mov.n	a12, a4
400d799c:	07bd      	mov.n	a11, a7
400d799e:	05ad      	mov.n	a10, a5
400d79a0:	e1be81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d79a3:	0008e0        	callx8	a8
400d79a6:	04cd      	mov.n	a12, a4
400d79a8:	05bd      	mov.n	a11, a5
400d79aa:	bca0a2        	movi	a10, 188
400d79ad:	80aa10        	add	a10, a10, a1
400d79b0:	e1ba81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d79b3:	0008e0        	callx8	a8
400d79b6:	04cd      	mov.n	a12, a4
400d79b8:	bca0b2        	movi	a11, 188
400d79bb:	bb1a      	add.n	a11, a11, a1
400d79bd:	dca0a2        	movi	a10, 220
400d79c0:	aa1a      	add.n	a10, a10, a1
400d79c2:	e1b581        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d79c5:	0008e0        	callx8	a8
400d79c8:	050c      	movi.n	a5, 0
400d79ca:	04cd      	mov.n	a12, a4
400d79cc:	dca0b2        	movi	a11, 220
400d79cf:	bb1a      	add.n	a11, a11, a1
400d79d1:	fca042        	movi	a4, 252
400d79d4:	a14a      	add.n	a10, a1, a4
400d79d6:	e1b081        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400d79d9:	0008e0        	callx8	a8
400d79dc:	024d      	mov.n	a4, a2
400d79de:	481257        	beq	a2, a5, 400d7a2a <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x116>
400d79e1:	fc0c      	movi.n	a12, 15
400d79e3:	b28b      	addi.n	a11, a2, 8
400d79e5:	04a182        	movi	a8, 0x104
400d79e8:	a18a      	add.n	a10, a1, a8
400d79ea:	e27f81        	l32r	a8, 400d03e8 <_flash_cache_start+0x3d0>
400d79ed:	0008e0        	callx8	a8
400d79f0:	dadc      	bnez.n	a10, 400d7a11 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xfd>
400d79f2:	fc0192        	l8ui	a9, a1, 252
400d79f5:	180282        	l8ui	a8, a2, 24
400d79f8:	1a9987        	bne	a9, a8, 400d7a16 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x102>
400d79fb:	ff0182        	l8ui	a8, a1, 255
400d79fe:	1a0292        	l8ui	a9, a2, 26
400d7a01:	173897        	bltu	a8, a9, 400d7a1c <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x108>
400d7a04:	190272        	l8ui	a7, a2, 25
400d7a07:	997a      	add.n	a9, a9, a7
400d7a09:	142897        	blt	a8, a9, 400d7a21 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10d>
400d7a0c:	080c      	movi.n	a8, 0
400d7a0e:	000446        	j	400d7a23 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7a11:	080c      	movi.n	a8, 0
400d7a13:	000306        	j	400d7a23 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7a16:	080c      	movi.n	a8, 0
400d7a18:	0001c6        	j	400d7a23 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7a1b:	080c00        	lsx	f0, a12, a0
400d7a1e:	000046        	j	400d7a23 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x10f>
400d7a21:	180c      	movi.n	a8, 1
400d7a23:	98cc      	bnez.n	a8, 400d7a30 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11c>
400d7a25:	180c      	movi.n	a8, 1
400d7a27:	0001c6        	j	400d7a32 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11e>
400d7a2a:	080c      	movi.n	a8, 0
400d7a2c:	000086        	j	400d7a32 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x11e>
400d7a2f:	080c00        	lsx	f0, a12, a0
400d7a32:	388c      	beqz.n	a8, 400d7a39 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x125>
400d7a34:	1428      	l32i.n	a2, a4, 4
400d7a36:	ffe886        	j	400d79dc <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0xc8>
400d7a39:	013256        	bnez	a2, 400d7a50 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x13c>
400d7a3c:	ffa0f2        	movi	a15, 255
400d7a3f:	1f01e2        	l8ui	a14, a1, 31
400d7a42:	24c1d2        	addi	a13, a1, 36
400d7a45:	1d01c2        	l8ui	a12, a1, 29
400d7a48:	1c01b2        	l8ui	a11, a1, 28
400d7a4b:	06ad      	mov.n	a10, a6
400d7a4d:	00ac65        	call8	400d8514 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d7a50:	1e0122        	l8ui	a2, a1, 30
400d7a53:	6148      	l32i.n	a4, a1, 24
400d7a55:	242a      	add.n	a2, a4, a2
400d7a57:	6129      	s32i.n	a2, a1, 24
400d7a59:	ffb646        	j	400d7936 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x22>
400d7a5c:	1668      	l32i.n	a6, a6, 4
400d7a5e:	ffb346        	j	400d792f <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x1b>
400d7a61:	0020c0        	memw
400d7a64:	472132        	l32i	a3, a1, 0x11c
400d7a67:	e18921        	l32r	a2, 400d008c <_flash_cache_start+0x74>
400d7a6a:	0020c0        	memw
400d7a6d:	0228      	l32i.n	a2, a2, 0
400d7a6f:	021327        	beq	a3, a2, 400d7a75 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)+0x161>
400d7a72:	fec465        	call8	400d66b8 <__stack_chk_fail>
400d7a75:	f01d      	retw.n
	...

400d7a78 <nvs::Storage::init(unsigned int, unsigned int)>:
400d7a78:	00c136        	entry	a1, 96
400d7a7b:	e18481        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d7a7e:	0020c0        	memw
400d7a81:	002882        	l32i	a8, a8, 0
400d7a84:	0020c0        	memw
400d7a87:	0f6182        	s32i	a8, a1, 60
400d7a8a:	20c440        	or	a12, a4, a4
400d7a8d:	03bd      	mov.n	a11, a3
400d7a8f:	10c2a2        	addi	a10, a2, 16
400d7a92:	013865        	call8	400d8e18 <nvs::PageManager::load(unsigned int, unsigned int)>
400d7a95:	8a8c      	beqz.n	a10, 400d7aa1 <nvs::Storage::init(unsigned int, unsigned int)+0x29>
400d7a97:	030c      	movi.n	a3, 0
400d7a99:	196232        	s32i	a3, a2, 100
400d7a9c:	0a2d      	mov.n	a2, a10
400d7a9e:	005e46        	j	400d7c1b <nvs::Storage::init(unsigned int, unsigned int)+0x1a3>
400d7aa1:	20a220        	or	a10, a2, a2
400d7aa4:	ffd0a5        	call8	400d77b0 <nvs::Storage::clearNamespaces()>
400d7aa7:	44c242        	addi	a4, a2, 68
400d7aaa:	08a032        	movi	a3, 8
400d7aad:	00b316        	beqz	a3, 400d7abc <nvs::Storage::init(unsigned int, unsigned int)+0x44>
400d7ab0:	080c      	movi.n	a8, 0
400d7ab2:	0489      	s32i.n	a8, a4, 0
400d7ab4:	330b      	addi.n	a3, a3, -1
400d7ab6:	444b      	addi.n	a4, a4, 4
400d7ab8:	fffc46        	j	400d7aad <nvs::Storage::init(unsigned int, unsigned int)+0x35>
400d7abb:	224200        	orb	b4, b2, b0
400d7abe:	941604        	lsi	f0, a6, 0x250
400d7ac1:	0c0d      	mov.n	a0, a12
400d7ac3:	413903        	lsi	f0, a9, 0x104
400d7ac6:	ffa032        	movi	a3, 255
400d7ac9:	1139      	s32i.n	a3, a1, 4
400d7acb:	0139      	s32i.n	a3, a1, 0
400d7acd:	1cc1f2        	addi	a15, a1, 28
400d7ad0:	10c1e2        	addi	a14, a1, 16
400d7ad3:	0d0c      	movi.n	a13, 0
400d7ad5:	1c0c      	movi.n	a12, 1
400d7ad7:	0dbd      	mov.n	a11, a13
400d7ad9:	20a440        	or	a10, a4, a4
400d7adc:	007625        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d7adf:	0b2a56        	bnez	a10, 400d7b95 <nvs::Storage::init(unsigned int, unsigned int)+0x11d>
400d7ae2:	ca1c      	movi.n	a10, 28
400d7ae4:	1314e5        	call8	400eac34 <operator new(unsigned int)>
400d7ae7:	0a3d      	mov.n	a3, a10
400d7ae9:	080c      	movi.n	a8, 0
400d7aeb:	0a89      	s32i.n	a8, a10, 0
400d7aed:	1a89      	s32i.n	a8, a10, 4
400d7aef:	fc0c      	movi.n	a12, 15
400d7af1:	24c1b2        	addi	a11, a1, 36
400d7af4:	aa8b      	addi.n	a10, a10, 8
400d7af6:	e23b81        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400d7af9:	0008e0        	callx8	a8
400d7afc:	1d0182        	l8ui	a8, a1, 29
400d7aff:	0e1826        	beqi	a8, 1, 400d7b11 <nvs::Storage::init(unsigned int, unsigned int)+0x99>
400d7b02:	e23ad1        	l32r	a13, 400d03ec <_flash_cache_start+0x3d4>
400d7b05:	e23ac1        	l32r	a12, 400d03f0 <_flash_cache_start+0x3d8>
400d7b08:	86a0b2        	movi	a11, 134
400d7b0b:	e23aa1        	l32r	a10, 400d03f4 <_flash_cache_start+0x3dc>
400d7b0e:	033ca5        	call8	400daed8 <__assert_func>
400d7b11:	340182        	l8ui	a8, a1, 52
400d7b14:	184382        	s8i	a8, a3, 24
400d7b17:	0020c0        	memw
400d7b1a:	f03d      	nop.n
400d7b1c:	f03d      	nop.n
400d7b1e:	f03d      	nop.n
400d7b20:	f03d      	nop.n
400d7b22:	f288      	l32i.n	a8, a2, 60
400d7b24:	088c      	beqz.n	a8, 400d7b28 <nvs::Storage::init(unsigned int, unsigned int)+0xb0>
400d7b26:	1839      	s32i.n	a3, a8, 4
400d7b28:	f03d      	nop.n
400d7b2a:	f03d      	nop.n
400d7b2c:	f03d      	nop.n
400d7b2e:	f03d      	nop.n
400d7b30:	f288      	l32i.n	a8, a2, 60
400d7b32:	0389      	s32i.n	a8, a3, 0
400d7b34:	080c      	movi.n	a8, 0
400d7b36:	1389      	s32i.n	a8, a3, 4
400d7b38:	f239      	s32i.n	a3, a2, 60
400d7b3a:	f03d      	nop.n
400d7b3c:	f03d      	nop.n
400d7b3e:	f03d      	nop.n
400d7b40:	f03d      	nop.n
400d7b42:	e288      	l32i.n	a8, a2, 56
400d7b44:	08cc      	bnez.n	a8, 400d7b48 <nvs::Storage::init(unsigned int, unsigned int)+0xd0>
400d7b46:	e239      	s32i.n	a3, a2, 56
400d7b48:	f03d      	nop.n
400d7b4a:	f03d      	nop.n
400d7b4c:	f03d      	nop.n
400d7b4e:	f03d      	nop.n
400d7b50:	102282        	l32i	a8, a2, 64
400d7b53:	881b      	addi.n	a8, a8, 1
400d7b55:	106282        	s32i	a8, a2, 64
400d7b58:	44c282        	addi	a8, a2, 68
400d7b5b:	f03d      	nop.n
400d7b5d:	f03d      	nop.n
400d7b5f:	f03d      	nop.n
400d7b61:	1803a2        	l8ui	a10, a3, 24
400d7b64:	4195a0        	srli	a9, a10, 5
400d7b67:	130c      	movi.n	a3, 1
400d7b69:	401a00        	ssl	a10
400d7b6c:	a13300        	sll	a3, a3
400d7b6f:	a08980        	addx4	a8, a9, a8
400d7b72:	08a8      	l32i.n	a10, a8, 0
400d7b74:	f97c      	movi.n	a9, -1
400d7b76:	309930        	xor	a9, a9, a3
400d7b79:	1099a0        	and	a9, a9, a10
400d7b7c:	203930        	or	a3, a9, a3
400d7b7f:	0839      	s32i.n	a3, a8, 0
400d7b81:	f03d      	nop.n
400d7b83:	f03d      	nop.n
400d7b85:	f03d      	nop.n
400d7b87:	f03d      	nop.n
400d7b89:	1e0132        	l8ui	a3, a1, 30
400d7b8c:	4188      	l32i.n	a8, a1, 16
400d7b8e:	383a      	add.n	a3, a8, a3
400d7b90:	4139      	s32i.n	a3, a1, 16
400d7b92:	ffcc06        	j	400d7ac6 <nvs::Storage::init(unsigned int, unsigned int)+0x4e>
400d7b95:	1448      	l32i.n	a4, a4, 4
400d7b97:	ffc906        	j	400d7abf <nvs::Storage::init(unsigned int, unsigned int)+0x47>
400d7b9a:	420000        	xorb	b0, b0, b0
400d7b9d:	321122        	l16ui	a2, a1, 100
400d7ba0:	af          	.byte 0xaf
400d7ba1:	fe          	.byte 0xfe
400d7ba2:	103430        	and	a3, a4, a3
400d7ba5:	01a082        	movi	a8, 1
400d7ba8:	203380        	or	a3, a3, a8
400d7bab:	116232        	s32i	a3, a2, 68
400d7bae:	f03d      	nop.n
400d7bb0:	f03d      	nop.n
400d7bb2:	f03d      	nop.n
400d7bb4:	f03d      	nop.n
400d7bb6:	182242        	l32i	a4, a2, 96
400d7bb9:	e12b31        	l32r	a3, 400d0068 <_flash_cache_start+0x50>
400d7bbc:	104430        	and	a4, a4, a3
400d7bbf:	e13131        	l32r	a3, 400d0084 <_flash_cache_start+0x6c>
400d7bc2:	203430        	or	a3, a4, a3
400d7bc5:	186232        	s32i	a3, a2, 96
400d7bc8:	196282        	s32i	a8, a2, 100
400d7bcb:	030c      	movi.n	a3, 0
400d7bcd:	4139      	s32i.n	a3, a1, 16
400d7bcf:	5139      	s32i.n	a3, a1, 20
400d7bd1:	6139      	s32i.n	a3, a1, 24
400d7bd3:	10c1b2        	addi	a11, a1, 16
400d7bd6:	20a220        	or	a10, a2, a2
400d7bd9:	ffc4e5        	call8	400d7828 <nvs::Storage::populateBlobIndices(intrusive_list<nvs::Storage::BlobIndexNode>&)>
400d7bdc:	10c1b2        	addi	a11, a1, 16
400d7bdf:	02ad      	mov.n	a10, a2
400d7be1:	ffd325        	call8	400d7914 <nvs::Storage::eraseOrphanDataBlobs(intrusive_list<nvs::Storage::BlobIndexNode>&)>
400d7be4:	41a8      	l32i.n	a10, a1, 16
400d7be6:	eaac      	beqz.n	a10, 400d7c18 <nvs::Storage::init(unsigned int, unsigned int)+0x1a0>
400d7be8:	0a28      	l32i.n	a2, a10, 0
400d7bea:	1a38      	l32i.n	a3, a10, 4
400d7bec:	428c      	beqz.n	a2, 400d7bf4 <nvs::Storage::init(unsigned int, unsigned int)+0x17c>
400d7bee:	1239      	s32i.n	a3, a2, 4
400d7bf0:	000086        	j	400d7bf6 <nvs::Storage::init(unsigned int, unsigned int)+0x17e>
400d7bf3:	413900        	srli	a3, a0, 9
400d7bf6:	438c      	beqz.n	a3, 400d7bfe <nvs::Storage::init(unsigned int, unsigned int)+0x186>
400d7bf8:	0329      	s32i.n	a2, a3, 0
400d7bfa:	0000c6        	j	400d7c01 <nvs::Storage::init(unsigned int, unsigned int)+0x189>
400d7bfd:	612200        	xsr.m2	a0
400d7c00:	f03d05        	call0	400c7fd4 <_rtc_text_end+0x7fd4>
400d7c03:	f03d      	nop.n
400d7c05:	f03d      	nop.n
400d7c07:	f03d      	nop.n
400d7c09:	062122        	l32i	a2, a1, 24
400d7c0c:	ffc222        	addi	a2, a2, -1
400d7c0f:	6129      	s32i.n	a2, a1, 24
400d7c11:	12fea5        	call8	400eabfc <operator delete(void*)>
400d7c14:	fff306        	j	400d7be4 <nvs::Storage::init(unsigned int, unsigned int)+0x16c>
400d7c17:	a02200        	addx4	a2, a2, a0
400d7c1a:	20c000        	or	a12, a0, a0
400d7c1d:	214200        	srai	a4, a0, 2
400d7c20:	0f          	.byte 0xf
400d7c21:	e11a31        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d7c24:	0020c0        	memw
400d7c27:	002332        	l32i	a3, a3, 0
400d7c2a:	021437        	beq	a4, a3, 400d7c30 <nvs::Storage::init(unsigned int, unsigned int)+0x1b8>
400d7c2d:	fea8a5        	call8	400d66b8 <__stack_chk_fail>
400d7c30:	f01d      	retw.n
	...

400d7c34 <nvs::Page::Header::calculateCrc32()>:
400d7c34:	004136        	entry	a1, 32
400d7c37:	8c1c      	movi.n	a12, 24
400d7c39:	b24b      	addi.n	a11, a2, 4
400d7c3b:	ffafa2        	movi	a10, -1
400d7c3e:	e1ee81        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d7c41:	0008e0        	callx8	a8
400d7c44:	0a2d      	mov.n	a2, a10
400d7c46:	f01d      	retw.n

400d7c48 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)>:
400d7c48:	004136        	entry	a1, 32
400d7c4b:	f288      	l32i.n	a8, a2, 60
400d7c4d:	111837        	beq	a8, a3, 400d7c62 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x1a>
400d7c50:	e1ebd1        	l32r	a13, 400d03fc <_flash_cache_start+0x3e4>
400d7c53:	e1ebc1        	l32r	a12, 400d0400 <_flash_cache_start+0x3e8>
400d7c56:	80a1b2        	movi	a11, 0x180
400d7c59:	e1eaa1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7c5c:	201110        	or	a1, a1, a1
400d7c5f:	0327a5        	call8	400daed8 <__assert_func>
400d7c62:	f87c      	movi.n	a8, -1
400d7c64:	f289      	s32i.n	a8, a2, 60
400d7c66:	f03d      	nop.n
400d7c68:	f03d      	nop.n
400d7c6a:	f03d      	nop.n
400d7c6c:	f03d      	nop.n
400d7c6e:	e2b8      	l32i.n	a11, a2, 56
400d7c70:	7ea082        	movi	a8, 126
400d7c73:	01b8b7        	bgeu	a8, a11, 400d7c78 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x30>
400d7c76:	08bd      	mov.n	a11, a8
400d7c78:	434a      	add.n	a4, a3, a4
400d7c7a:	3ab4b7        	bgeu	a4, a11, 400d7cb8 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x70>
400d7c7d:	18c2a2        	addi	a10, a2, 24
400d7c80:	7da082        	movi	a8, 125
400d7c83:	0db847        	bgeu	a8, a4, 400d7c94 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x4c>
400d7c86:	e1e0d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d7c89:	e1e0c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d7c8c:	6b2c      	movi.n	a11, 38
400d7c8e:	e1e0a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d7c91:	032465        	call8	400daed8 <__assert_func>
400d7c94:	419440        	srli	a9, a4, 4
400d7c97:	348040        	extui	a8, a4, 0, 4
400d7c9a:	1188f0        	slli	a8, a8, 1
400d7c9d:	a099a0        	addx4	a9, a9, a10
400d7ca0:	0998      	l32i.n	a9, a9, 0
400d7ca2:	400800        	ssr	a8
400d7ca5:	918090        	srl	a8, a9
400d7ca8:	148080        	extui	a8, a8, 0, 2
400d7cab:	032866        	bnei	a8, 2, 400d7cb2 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x6a>
400d7cae:	f249      	s32i.n	a4, a2, 60
400d7cb0:	f01d      	retw.n
400d7cb2:	441b      	addi.n	a4, a4, 1
400d7cb4:	fff086        	j	400d7c7a <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)+0x32>
400d7cb7:	f01d00        	subx8	a1, a13, a0
	...

400d7cbc <nvs::Page::initialize()>:
400d7cbc:	00a136        	entry	a1, 80
400d7cbf:	e0f381        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d7cc2:	0020c0        	memw
400d7cc5:	0888      	l32i.n	a8, a8, 0
400d7cc7:	0020c0        	memw
400d7cca:	b189      	s32i.n	a8, a1, 44
400d7ccc:	f03d      	nop.n
400d7cce:	f03d      	nop.n
400d7cd0:	f03d      	nop.n
400d7cd2:	f03d      	nop.n
400d7cd4:	3288      	l32i.n	a8, a2, 12
400d7cd6:	0e0826        	beqi	a8, -1, 400d7ce8 <nvs::Page::initialize()+0x2c>
400d7cd9:	e1ced1        	l32r	a13, 400d0414 <_flash_cache_start+0x3fc>
400d7cdc:	e1cfc1        	l32r	a12, 400d0418 <_flash_cache_start+0x400>
400d7cdf:	83a2b2        	movi	a11, 0x283
400d7ce2:	e1c8a1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7ce5:	031f25        	call8	400daed8 <__assert_func>
400d7ce8:	e87c      	movi.n	a8, -2
400d7cea:	3289      	s32i.n	a8, a2, 12
400d7cec:	381c      	movi.n	a8, 19
400d7cee:	15c192        	addi	a9, a1, 21
400d7cf1:	d88c      	beqz.n	a8, 400d7d02 <nvs::Page::initialize()+0x46>
400d7cf3:	fa7c      	movi.n	a10, -1
400d7cf5:	0049a2        	s8i	a10, a9, 0
400d7cf8:	0020c0        	memw
400d7cfb:	880b      	addi.n	a8, a8, -1
400d7cfd:	991b      	addi.n	a9, a9, 1
400d7cff:	fffb86        	j	400d7cf1 <nvs::Page::initialize()+0x35>
400d7d02:	032282        	l32i	a8, a2, 12
400d7d05:	036182        	s32i	a8, a1, 12
400d7d08:	f03d      	nop.n
400d7d0a:	f03d      	nop.n
400d7d0c:	f03d      	nop.n
400d7d0e:	f03d      	nop.n
400d7d10:	4288      	l32i.n	a8, a2, 16
400d7d12:	4189      	s32i.n	a8, a1, 16
400d7d14:	f03d      	nop.n
400d7d16:	f03d      	nop.n
400d7d18:	f03d      	nop.n
400d7d1a:	0020f0        	nop
400d7d1d:	140282        	l8ui	a8, a2, 20
400d7d20:	144182        	s8i	a8, a1, 20
400d7d23:	0020c0        	memw
400d7d26:	a1cb      	addi.n	a10, a1, 12
400d7d28:	fff0a5        	call8	400d7c34 <nvs::Page::Header::calculateCrc32()>
400d7d2b:	a1a9      	s32i.n	a10, a1, 40
400d7d2d:	0c2c      	movi.n	a12, 32
400d7d2f:	b1cb      	addi.n	a11, a1, 12
400d7d31:	f03d      	nop.n
400d7d33:	f03d      	nop.n
400d7d35:	22a8      	l32i.n	a10, a2, 8
400d7d37:	ae8765        	call8	400865ac <spi_flash_write>
400d7d3a:	7a8c      	beqz.n	a10, 400d7d45 <nvs::Page::initialize()+0x89>
400d7d3c:	080c      	movi.n	a8, 0
400d7d3e:	3289      	s32i.n	a8, a2, 12
400d7d40:	0a2d      	mov.n	a2, a10
400d7d42:	000646        	j	400d7d5f <nvs::Page::initialize()+0xa3>
400d7d45:	080c      	movi.n	a8, 0
400d7d47:	e289      	s32i.n	a8, a2, 56
400d7d49:	18c282        	addi	a8, a2, 24
400d7d4c:	820c      	movi.n	a2, 8
400d7d4e:	a28c      	beqz.n	a2, 400d7d5c <nvs::Page::initialize()+0xa0>
400d7d50:	f97c      	movi.n	a9, -1
400d7d52:	0899      	s32i.n	a9, a8, 0
400d7d54:	229a      	add.n	a2, a2, a9
400d7d56:	884b      	addi.n	a8, a8, 4
400d7d58:	fffc86        	j	400d7d4e <nvs::Page::initialize()+0x92>
400d7d5b:	a02200        	addx4	a2, a2, a0
400d7d5e:	20c000        	or	a12, a0, a0
400d7d61:	219200        	srai	a9, a0, 2
400d7d64:	810b      	addi.n	a8, a1, -1
400d7d66:	e0c9      	s32i.n	a12, a0, 56
400d7d68:	0020c0        	memw
400d7d6b:	002882        	l32i	a8, a8, 0
400d7d6e:	021987        	beq	a9, a8, 400d7d74 <nvs::Page::initialize()+0xb8>
400d7d71:	fe9465        	call8	400d66b8 <__stack_chk_fail>
400d7d74:	f01d      	retw.n
	...

400d7d78 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>:
400d7d78:	006136        	entry	a1, 48
400d7d7b:	7da082        	movi	a8, 125
400d7d7e:	11b837        	bgeu	a8, a3, 400d7d93 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x1b>
400d7d81:	e1a6d1        	l32r	a13, 400d041c <_flash_cache_start+0x404>
400d7d84:	e1a7c1        	l32r	a12, 400d0420 <_flash_cache_start+0x408>
400d7d87:	98a2b2        	movi	a11, 0x298
400d7d8a:	e19ea1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7d8d:	201110        	or	a1, a1, a1
400d7d90:	031465        	call8	400daed8 <__assert_func>
400d7d93:	18c2a2        	addi	a10, a2, 24
400d7d96:	7da082        	movi	a8, 125
400d7d99:	10b837        	bgeu	a8, a3, 400d7dad <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x35>
400d7d9c:	e19bd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d7d9f:	e1a1c1        	l32r	a12, 400d0424 <_flash_cache_start+0x40c>
400d7da2:	fb2c      	movi.n	a11, 47
400d7da4:	e19ba1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d7da7:	201110        	or	a1, a1, a1
400d7daa:	0312e5        	call8	400daed8 <__assert_func>
400d7dad:	418430        	srli	a8, a3, 4
400d7db0:	343030        	extui	a3, a3, 0, 4
400d7db3:	1133f0        	slli	a3, a3, 1
400d7db6:	401300        	ssl	a3
400d7db9:	a14400        	sll	a4, a4
400d7dbc:	1188e0        	slli	a8, a8, 2
400d7dbf:	80aa80        	add	a10, a10, a8
400d7dc2:	002ab2        	l32i	a11, a10, 0
400d7dc5:	03a092        	movi	a9, 3
400d7dc8:	401300        	ssl	a3
400d7dcb:	a13900        	sll	a3, a9
400d7dce:	f97c      	movi.n	a9, -1
400d7dd0:	303930        	xor	a3, a9, a3
400d7dd3:	1033b0        	and	a3, a3, a11
400d7dd6:	204340        	or	a4, a3, a4
400d7dd9:	0a49      	s32i.n	a4, a10, 0
400d7ddb:	18c232        	addi	a3, a2, 24
400d7dde:	338a      	add.n	a3, a3, a8
400d7de0:	f03d      	nop.n
400d7de2:	f03d      	nop.n
400d7de4:	0338      	l32i.n	a3, a3, 0
400d7de6:	3139      	s32i.n	a3, a1, 12
400d7de8:	f03d      	nop.n
400d7dea:	f03d      	nop.n
400d7dec:	f03d      	nop.n
400d7dee:	f03d      	nop.n
400d7df0:	22a8      	l32i.n	a10, a2, 8
400d7df2:	a8aa      	add.n	a10, a8, a10
400d7df4:	4c0c      	movi.n	a12, 4
400d7df6:	b1cb      	addi.n	a11, a1, 12
400d7df8:	20caa2        	addi	a10, a10, 32
400d7dfb:	ae7b25        	call8	400865ac <spi_flash_write>
400d7dfe:	6a8c      	beqz.n	a10, 400d7e08 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)+0x90>
400d7e00:	030c      	movi.n	a3, 0
400d7e02:	3239      	s32i.n	a3, a2, 12
400d7e04:	0a2d      	mov.n	a2, a10
400d7e06:	f01d      	retw.n
400d7e08:	020c      	movi.n	a2, 0
400d7e0a:	f01d      	retw.n

400d7e0c <nvs::Page::writeEntry(nvs::Item const&)>:
400d7e0c:	004136        	entry	a1, 32
400d7e0f:	e288      	l32i.n	a8, a2, 56
400d7e11:	7da092        	movi	a9, 125
400d7e14:	0eb987        	bgeu	a9, a8, 400d7e26 <nvs::Page::writeEntry(nvs::Item const&)+0x1a>
400d7e17:	e184d1        	l32r	a13, 400d0428 <_flash_cache_start+0x410>
400d7e1a:	e184c1        	l32r	a12, 400d042c <_flash_cache_start+0x414>
400d7e1d:	c5a0b2        	movi	a11, 197
400d7e20:	e184a1        	l32r	a10, 400d0430 <_flash_cache_start+0x418>
400d7e23:	030b65        	call8	400daed8 <__assert_func>
400d7e26:	22a8      	l32i.n	a10, a2, 8
400d7e28:	1188b0        	slli	a8, a8, 5
400d7e2b:	80aa80        	add	a10, a10, a8
400d7e2e:	20a0c2        	movi	a12, 32
400d7e31:	03bd      	mov.n	a11, a3
400d7e33:	40caa2        	addi	a10, a10, 64
400d7e36:	0157a5        	call8	400d93b0 <nvs::nvs_flash_write(unsigned int, void const*, unsigned int)>
400d7e39:	8a8c      	beqz.n	a10, 400d7e45 <nvs::Page::writeEntry(nvs::Item const&)+0x39>
400d7e3b:	080c      	movi.n	a8, 0
400d7e3d:	3289      	s32i.n	a8, a2, 12
400d7e3f:	0a2d      	mov.n	a2, a10
400d7e41:	f01d      	retw.n
400d7e43:	c20000        	quou	a0, a0, a0
400d7e46:	b202a0        	mulsh	a0, a2, a10
400d7e49:	200e22        	l8ui	a2, a14, 32
400d7e4c:	a520a2        	l32i	a10, a0, 0x294
400d7e4f:	ecfff2        	s32ri	a15, a15, 0x3b0
400d7e52:	88ca      	add.n	a8, a8, a12
400d7e54:	0866f2        	s32i	a15, a6, 32
400d7e57:	e28803        	lsip	f0, a8, 0x388
400d7e5a:	f289      	s32i.n	a8, a2, 60
400d7e5c:	f03d      	nop.n
400d7e5e:	f03d      	nop.n
400d7e60:	f03d      	nop.n
400d7e62:	f03d      	nop.n
400d7e64:	201282        	l16ui	a8, a2, 64
400d7e67:	881b      	addi.n	a8, a8, 1
400d7e69:	205282        	s16i	a8, a2, 64
400d7e6c:	0020c0        	memw
400d7e6f:	f03d      	nop.n
400d7e71:	f03d      	nop.n
400d7e73:	f03d      	nop.n
400d7e75:	f03d      	nop.n
400d7e77:	e288      	l32i.n	a8, a2, 56
400d7e79:	881b      	addi.n	a8, a8, 1
400d7e7b:	e289      	s32i.n	a8, a2, 56
400d7e7d:	020c      	movi.n	a2, 0
400d7e7f:	f01d      	retw.n
400d7e81:	0a2d      	mov.n	a2, a10
400d7e83:	f01d      	retw.n
400d7e85:	000000        	ill

400d7e88 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)>:
400d7e88:	006136        	entry	a1, 48
400d7e8b:	7ea062        	movi	a6, 126
400d7e8e:	11b647        	bgeu	a6, a4, 400d7ea3 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x1b>
400d7e91:	e168d1        	l32r	a13, 400d0434 <_flash_cache_start+0x41c>
400d7e94:	e169c1        	l32r	a12, 400d0438 <_flash_cache_start+0x420>
400d7e97:	a7a2b2        	movi	a11, 0x2a7
400d7e9a:	e15aa1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7e9d:	201110        	or	a1, a1, a1
400d7ea0:	030365        	call8	400daed8 <__assert_func>
400d7ea3:	113347        	bltu	a3, a4, 400d7eb8 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x30>
400d7ea6:	e165d1        	l32r	a13, 400d043c <_flash_cache_start+0x424>
400d7ea9:	e163c1        	l32r	a12, 400d0438 <_flash_cache_start+0x420>
400d7eac:	a8a2b2        	movi	a11, 0x2a8
400d7eaf:	e155a1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7eb2:	201110        	or	a1, a1, a1
400d7eb5:	030225        	call8	400daed8 <__assert_func>
400d7eb8:	440b      	addi.n	a4, a4, -1
400d7eba:	41a440        	srli	a10, a4, 4
400d7ebd:	02a437        	bge	a4, a3, 400d7ec3 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x3b>
400d7ec0:	002146        	j	400d7f49 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xc1>
400d7ec3:	18c2b2        	addi	a11, a2, 24
400d7ec6:	7da062        	movi	a6, 125
400d7ec9:	10b647        	bgeu	a6, a4, 400d7edd <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x55>
400d7ecc:	e14fd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d7ecf:	e155c1        	l32r	a12, 400d0424 <_flash_cache_start+0x40c>
400d7ed2:	fb2c      	movi.n	a11, 47
400d7ed4:	e14fa1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d7ed7:	201110        	or	a1, a1, a1
400d7eda:	02ffe5        	call8	400daed8 <__assert_func>
400d7edd:	418440        	srli	a8, a4, 4
400d7ee0:	349040        	extui	a9, a4, 0, 4
400d7ee3:	1199f0        	slli	a9, a9, 1
400d7ee6:	401900        	ssl	a9
400d7ee9:	a16500        	sll	a6, a5
400d7eec:	a088b0        	addx4	a8, a8, a11
400d7eef:	08d8      	l32i.n	a13, a8, 0
400d7ef1:	3b0c      	movi.n	a11, 3
400d7ef3:	401900        	ssl	a9
400d7ef6:	a1bb00        	sll	a11, a11
400d7ef9:	f97c      	movi.n	a9, -1
400d7efb:	3099b0        	xor	a9, a9, a11
400d7efe:	1099d0        	and	a9, a9, a13
400d7f01:	209960        	or	a9, a9, a6
400d7f04:	0899      	s32i.n	a9, a8, 0
400d7f06:	081437        	beq	a4, a3, 400d7f12 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x8a>
400d7f09:	640b      	addi.n	a6, a4, -1
400d7f0b:	416460        	srli	a6, a6, 4
400d7f0e:	0000c6        	j	400d7f15 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x8d>
400d7f11:	af6200        	f64cmph	a6, a2, a0, 10
400d7f14:	ff          	.byte 0xff
400d7f15:	291a67        	beq	a10, a6, 400d7f42 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xba>
400d7f18:	18c282        	addi	a8, a2, 24
400d7f1b:	11aae0        	slli	a10, a10, 2
400d7f1e:	8088a0        	add	a8, a8, a10
400d7f21:	002882        	l32i	a8, a8, 0
400d7f24:	3189      	s32i.n	a8, a1, 12
400d7f26:	f03d      	nop.n
400d7f28:	f03d      	nop.n
400d7f2a:	f03d      	nop.n
400d7f2c:	f03d      	nop.n
400d7f2e:	2288      	l32i.n	a8, a2, 8
400d7f30:	aa8a      	add.n	a10, a10, a8
400d7f32:	4c0c      	movi.n	a12, 4
400d7f34:	b1cb      	addi.n	a11, a1, 12
400d7f36:	20caa2        	addi	a10, a10, 32
400d7f39:	ae6725        	call8	400865ac <spi_flash_write>
400d7f3c:	2a8c      	beqz.n	a10, 400d7f42 <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0xba>
400d7f3e:	0a2d      	mov.n	a2, a10
400d7f40:	f01d      	retw.n
400d7f42:	440b      	addi.n	a4, a4, -1
400d7f44:	06ad      	mov.n	a10, a6
400d7f46:	ffdcc6        	j	400d7ebd <nvs::Page::alterEntryRangeState(unsigned int, unsigned int, nvs::Page::EntryState)+0x35>
400d7f49:	020c      	movi.n	a2, 0
400d7f4b:	f01d      	retw.n
400d7f4d:	000000        	ill

400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>:
400d7f50:	004136        	entry	a1, 32
400d7f53:	7da082        	movi	a8, 125
400d7f56:	0eb837        	bgeu	a8, a3, 400d7f68 <nvs::Page::readEntry(unsigned int, nvs::Item&) const+0x18>
400d7f59:	e133d1        	l32r	a13, 400d0428 <_flash_cache_start+0x410>
400d7f5c:	e134c1        	l32r	a12, 400d042c <_flash_cache_start+0x414>
400d7f5f:	c5a0b2        	movi	a11, 197
400d7f62:	e133a1        	l32r	a10, 400d0430 <_flash_cache_start+0x418>
400d7f65:	02f725        	call8	400daed8 <__assert_func>
400d7f68:	0222a2        	l32i	a10, a2, 8
400d7f6b:	1133b0        	slli	a3, a3, 5
400d7f6e:	80aa30        	add	a10, a10, a3
400d7f71:	0c2c      	movi.n	a12, 32
400d7f73:	20b440        	or	a11, a4, a4
400d7f76:	40caa2        	addi	a10, a10, 64
400d7f79:	014465        	call8	400d93c0 <nvs::nvs_flash_read(unsigned int, void*, unsigned int)>
400d7f7c:	2acc      	bnez.n	a10, 400d7f82 <nvs::Page::readEntry(unsigned int, nvs::Item&) const+0x32>
400d7f7e:	020c      	movi.n	a2, 0
400d7f80:	f01d      	retw.n
400d7f82:	0a2d      	mov.n	a2, a10
400d7f84:	f01d      	retw.n
	...

400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>:
400d7f88:	00a136        	entry	a1, 80
400d7f8b:	e04041        	l32r	a4, 400d008c <_flash_cache_start+0x74>
400d7f8e:	0020c0        	memw
400d7f91:	0448      	l32i.n	a4, a4, 0
400d7f93:	0020c0        	memw
400d7f96:	b149      	s32i.n	a4, a1, 44
400d7f98:	18c242        	addi	a4, a2, 24
400d7f9b:	7da082        	movi	a8, 125
400d7f9e:	13b837        	bgeu	a8, a3, 400d7fb5 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x2d>
400d7fa1:	0020f0        	nop
400d7fa4:	0020f0        	nop
400d7fa7:	e118d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d7faa:	e118c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d7fad:	6b2c      	movi.n	a11, 38
400d7faf:	e118a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d7fb2:	02f265        	call8	400daed8 <__assert_func>
400d7fb5:	419430        	srli	a9, a3, 4
400d7fb8:	348030        	extui	a8, a3, 0, 4
400d7fbb:	1188f0        	slli	a8, a8, 1
400d7fbe:	a09940        	addx4	a9, a9, a4
400d7fc1:	0998      	l32i.n	a9, a9, 0
400d7fc3:	400800        	ssr	a8
400d7fc6:	918090        	srl	a8, a9
400d7fc9:	148080        	extui	a8, a8, 0, 2
400d7fcc:	fec892        	addi	a9, a8, -2
400d7fcf:	0e29b6        	bltui	a9, 2, 400d7fe1 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x59>
400d7fd2:	e11bd1        	l32r	a13, 400d0440 <_flash_cache_start+0x428>
400d7fd5:	e11bc1        	l32r	a12, 400d0444 <_flash_cache_start+0x42c>
400d7fd8:	49a1b2        	movi	a11, 0x149
400d7fdb:	e10aa1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d7fde:	02efa5        	call8	400daed8 <__assert_func>
400d7fe1:	022826        	beqi	a8, 2, 400d7fe7 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x5f>
400d7fe4:	003a06        	j	400d80d0 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x148>
400d7fe7:	c1cb      	addi.n	a12, a1, 12
400d7fe9:	03bd      	mov.n	a11, a3
400d7feb:	02ad      	mov.n	a10, a2
400d7fed:	fff625        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d7ff0:	0cda56        	bnez	a10, 400d80c1 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x139>
400d7ff3:	a1cb      	addi.n	a10, a1, 12
400d7ff5:	013665        	call8	400d935c <nvs::Item::calculateCrc32() const>
400d7ff8:	4158      	l32i.n	a5, a1, 16
400d7ffa:	3a1a57        	beq	a10, a5, 400d8038 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xb0>
400d7ffd:	0c0c      	movi.n	a12, 0
400d7fff:	03bd      	mov.n	a11, a3
400d8001:	44c2a2        	addi	a10, a2, 68
400d8004:	00c8a5        	call8	400d8c90 <nvs::HashList::erase(unsigned int, bool)>
400d8007:	0c0c      	movi.n	a12, 0
400d8009:	03bd      	mov.n	a11, a3
400d800b:	02ad      	mov.n	a10, a2
400d800d:	ffd6a5        	call8	400d7d78 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d8010:	201242        	l16ui	a4, a2, 64
400d8013:	440b      	addi.n	a4, a4, -1
400d8015:	205242        	s16i	a4, a2, 64
400d8018:	0020c0        	memw
400d801b:	f03d      	nop.n
400d801d:	f03d      	nop.n
400d801f:	f03d      	nop.n
400d8021:	f03d      	nop.n
400d8023:	211242        	l16ui	a4, a2, 66
400d8026:	441b      	addi.n	a4, a4, 1
400d8028:	215242        	s16i	a4, a2, 66
400d802b:	0020c0        	memw
400d802e:	094a56        	bnez	a10, 400d80c6 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x13e>
400d8031:	150c      	movi.n	a5, 1
400d8033:	002a46        	j	400d80e0 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x158>
400d8036:	0c0000        	lsi	f0, a0, 48
400d8039:	bd1c      	movi.n	a13, 27
400d803b:	c2a203        	lsi	f0, a2, 0x308
400d803e:	c52544        	lsi	f4, a5, 0x314
400d8041:	015200        	slli	a5, a2, 32
400d8044:	0e          	.byte 0xe
400d8045:	c35a      	add.n	a12, a3, a5
400d8047:	8c0b      	addi.n	a8, a12, -1
400d8049:	502837        	blt	a8, a3, 400d809d <nvs::Page::eraseEntryAndSpan(unsigned int)+0x115>
400d804c:	7da092        	movi	a9, 125
400d804f:	0db987        	bgeu	a9, a8, 400d8060 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xd8>
400d8052:	e0edd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d8055:	e0edc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d8058:	6b2c      	movi.n	a11, 38
400d805a:	e0eda1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d805d:	02e7a5        	call8	400daed8 <__assert_func>
400d8060:	41a480        	srli	a10, a8, 4
400d8063:	349080        	extui	a9, a8, 0, 4
400d8066:	11b9f0        	slli	a11, a9, 1
400d8069:	a0aa40        	addx4	a10, a10, a4
400d806c:	0a98      	l32i.n	a9, a10, 0
400d806e:	400b00        	ssr	a11
400d8071:	919090        	srl	a9, a9
400d8074:	149090        	extui	a9, a9, 0, 2
400d8077:	0a2966        	bnei	a9, 2, 400d8085 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xfd>
400d807a:	201292        	l16ui	a9, a2, 64
400d807d:	990b      	addi.n	a9, a9, -1
400d807f:	205292        	s16i	a9, a2, 64
400d8082:	0020c0        	memw
400d8085:	f03d      	nop.n
400d8087:	f03d      	nop.n
400d8089:	f03d      	nop.n
400d808b:	f03d      	nop.n
400d808d:	211292        	l16ui	a9, a2, 66
400d8090:	991b      	addi.n	a9, a9, 1
400d8092:	215292        	s16i	a9, a2, 66
400d8095:	0020c0        	memw
400d8098:	880b      	addi.n	a8, a8, -1
400d809a:	ffeac6        	j	400d8049 <nvs::Page::eraseEntryAndSpan(unsigned int)+0xc1>
400d809d:	0f1566        	bnei	a5, 1, 400d80b0 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x128>
400d80a0:	00a0c2        	movi	a12, 0
400d80a3:	20b330        	or	a11, a3, a3
400d80a6:	20a220        	or	a10, a2, a2
400d80a9:	ffcce5        	call8	400d7d78 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d80ac:	000306        	j	400d80bc <nvs::Page::eraseEntryAndSpan(unsigned int)+0x134>
400d80af:	a0d200        	addx4	a13, a2, a0
400d80b2:	b33000        	movgez	a3, a0, a0
400d80b5:	a22020        	muluh	a2, a0, a2
400d80b8:	dce520        	lsi	f2, a5, 0x370
400d80bb:	ff          	.byte 0xff
400d80bc:	0aac      	beqz.n	a10, 400d80e0 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x158>
400d80be:	000246        	j	400d80cb <nvs::Page::eraseEntryAndSpan(unsigned int)+0x143>
400d80c1:	0a2d      	mov.n	a2, a10
400d80c3:	001006        	j	400d8107 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d80c6:	0a2d      	mov.n	a2, a10
400d80c8:	000ec6        	j	400d8107 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d80cb:	0a2d      	mov.n	a2, a10
400d80cd:	000d86        	j	400d8107 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d80d0:	00a0c2        	movi	a12, 0
400d80d3:	20b330        	or	a11, a3, a3
400d80d6:	20a220        	or	a10, a2, a2
400d80d9:	ffc9e5        	call8	400d7d78 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d80dc:	fadc      	bnez.n	a10, 400d80ff <nvs::Page::eraseEntryAndSpan(unsigned int)+0x177>
400d80de:	150c      	movi.n	a5, 1
400d80e0:	0f2242        	l32i	a4, a2, 60
400d80e3:	0a9347        	bne	a3, a4, 400d80f1 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x169>
400d80e6:	20c550        	or	a12, a5, a5
400d80e9:	20b330        	or	a11, a3, a3
400d80ec:	02ad      	mov.n	a10, a2
400d80ee:	ffb5a5        	call8	400d7c48 <nvs::Page::updateFirstUsedEntry(unsigned int, unsigned int)>
400d80f1:	353a      	add.n	a3, a5, a3
400d80f3:	e248      	l32i.n	a4, a2, 56
400d80f5:	0bb437        	bgeu	a4, a3, 400d8104 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17c>
400d80f8:	e239      	s32i.n	a3, a2, 56
400d80fa:	020c      	movi.n	a2, 0
400d80fc:	0001c6        	j	400d8107 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d80ff:	0a2d      	mov.n	a2, a10
400d8101:	000086        	j	400d8107 <nvs::Page::eraseEntryAndSpan(unsigned int)+0x17f>
400d8104:	00a022        	movi	a2, 0
400d8107:	0020c0        	memw
400d810a:	0b2142        	l32i	a4, a1, 44
400d810d:	dfdf31        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8110:	0020c0        	memw
400d8113:	002332        	l32i	a3, a3, 0
400d8116:	021437        	beq	a4, a3, 400d811c <nvs::Page::eraseEntryAndSpan(unsigned int)+0x194>
400d8119:	fe59e5        	call8	400d66b8 <__stack_chk_fail>
400d811c:	f01d      	retw.n
	...

400d8120 <nvs::Page::copyItems(nvs::Page&)>:
400d8120:	00a136        	entry	a1, 80
400d8123:	dfda41        	l32r	a4, 400d008c <_flash_cache_start+0x74>
400d8126:	0020c0        	memw
400d8129:	002442        	l32i	a4, a4, 0
400d812c:	0020c0        	memw
400d812f:	0b6142        	s32i	a4, a1, 44
400d8132:	f03d      	nop.n
400d8134:	f03d      	nop.n
400d8136:	f03d      	nop.n
400d8138:	f03d      	nop.n
400d813a:	0f2242        	l32i	a4, a2, 60
400d813d:	020466        	bnei	a4, -1, 400d8143 <nvs::Page::copyItems(nvs::Page&)+0x23>
400d8140:	003146        	j	400d8209 <nvs::Page::copyItems(nvs::Page&)+0xe9>
400d8143:	3348      	l32i.n	a4, a3, 12
400d8145:	070466        	bnei	a4, -1, 400d8150 <nvs::Page::copyItems(nvs::Page&)+0x30>
400d8148:	03ad      	mov.n	a10, a3
400d814a:	ffb725        	call8	400d7cbc <nvs::Page::initialize()>
400d814d:	0bfa56        	bnez	a10, 400d8210 <nvs::Page::copyItems(nvs::Page&)+0xf0>
400d8150:	f248      	l32i.n	a4, a2, 60
400d8152:	000086        	j	400d8158 <nvs::Page::copyItems(nvs::Page&)+0x38>
400d8155:	054d00        	extui	a4, a0, 29, 1
400d8158:	7da052        	movi	a5, 125
400d815b:	02b547        	bgeu	a5, a4, 400d8161 <nvs::Page::copyItems(nvs::Page&)+0x41>
400d815e:	002cc6        	j	400d8215 <nvs::Page::copyItems(nvs::Page&)+0xf5>
400d8161:	18c252        	addi	a5, a2, 24
400d8164:	7da082        	movi	a8, 125
400d8167:	0db847        	bgeu	a8, a4, 400d8178 <nvs::Page::copyItems(nvs::Page&)+0x58>
400d816a:	e0a7d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d816d:	e0a7c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d8170:	6b2c      	movi.n	a11, 38
400d8172:	e0a7a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d8175:	02d625        	call8	400daed8 <__assert_func>
400d8178:	419440        	srli	a9, a4, 4
400d817b:	348040        	extui	a8, a4, 0, 4
400d817e:	1188f0        	slli	a8, a8, 1
400d8181:	a09950        	addx4	a9, a9, a5
400d8184:	0998      	l32i.n	a9, a9, 0
400d8186:	400800        	ssr	a8
400d8189:	918090        	srl	a8, a9
400d818c:	148080        	extui	a8, a8, 0, 2
400d818f:	1b2826        	beqi	a8, 2, 400d81ae <nvs::Page::copyItems(nvs::Page&)+0x8e>
400d8192:	f258      	l32i.n	a5, a2, 60
400d8194:	0e9457        	bne	a4, a5, 400d81a6 <nvs::Page::copyItems(nvs::Page&)+0x86>
400d8197:	e0add1        	l32r	a13, 400d044c <_flash_cache_start+0x434>
400d819a:	e0adc1        	l32r	a12, 400d0450 <_flash_cache_start+0x438>
400d819d:	a1a1b2        	movi	a11, 0x1a1
400d81a0:	e099a1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d81a3:	02d365        	call8	400daed8 <__assert_func>
400d81a6:	441b      	addi.n	a4, a4, 1
400d81a8:	ffeb06        	j	400d8158 <nvs::Page::copyItems(nvs::Page&)+0x38>
400d81ab:	000000        	ill
400d81ae:	c1cb      	addi.n	a12, a1, 12
400d81b0:	04bd      	mov.n	a11, a4
400d81b2:	02ad      	mov.n	a10, a2
400d81b4:	ffd9a5        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d81b7:	05fa56        	bnez	a10, 400d821a <nvs::Page::copyItems(nvs::Page&)+0xfa>
400d81ba:	0e23c2        	l32i	a12, a3, 56
400d81bd:	0cc1b2        	addi	a11, a1, 12
400d81c0:	44c3a2        	addi	a10, a3, 68
400d81c3:	00a425        	call8	400d8c04 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d81c6:	b1cb      	addi.n	a11, a1, 12
400d81c8:	03ad      	mov.n	a10, a3
400d81ca:	ffc425        	call8	400d7e0c <nvs::Page::writeEntry(nvs::Item const&)>
400d81cd:	04fa56        	bnez	a10, 400d8220 <nvs::Page::copyItems(nvs::Page&)+0x100>
400d81d0:	0e0152        	l8ui	a5, a1, 14
400d81d3:	545a      	add.n	a5, a4, a5
400d81d5:	7ea082        	movi	a8, 126
400d81d8:	0eb857        	bgeu	a8, a5, 400d81ea <nvs::Page::copyItems(nvs::Page&)+0xca>
400d81db:	e096d1        	l32r	a13, 400d0434 <_flash_cache_start+0x41c>
400d81de:	e09cc1        	l32r	a12, 400d0450 <_flash_cache_start+0x438>
400d81e1:	b2a1b2        	movi	a11, 0x1b2
400d81e4:	e088a1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d81e7:	02cf25        	call8	400daed8 <__assert_func>
400d81ea:	441b      	addi.n	a4, a4, 1
400d81ec:	023457        	bltu	a4, a5, 400d81f2 <nvs::Page::copyItems(nvs::Page&)+0xd2>
400d81ef:	ffd8c6        	j	400d8156 <nvs::Page::copyItems(nvs::Page&)+0x36>
400d81f2:	c1cb      	addi.n	a12, a1, 12
400d81f4:	04bd      	mov.n	a11, a4
400d81f6:	02ad      	mov.n	a10, a2
400d81f8:	ffd565        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d81fb:	b1cb      	addi.n	a11, a1, 12
400d81fd:	03ad      	mov.n	a10, a3
400d81ff:	ffc0e5        	call8	400d7e0c <nvs::Page::writeEntry(nvs::Item const&)>
400d8202:	fadc      	bnez.n	a10, 400d8225 <nvs::Page::copyItems(nvs::Page&)+0x105>
400d8204:	441b      	addi.n	a4, a4, 1
400d8206:	fff886        	j	400d81ec <nvs::Page::copyItems(nvs::Page&)+0xcc>
400d8209:	e08f21        	l32r	a2, 400d0448 <_flash_cache_start+0x430>
400d820c:	000606        	j	400d8228 <nvs::Page::copyItems(nvs::Page&)+0x108>
400d820f:	0a2d00        	add.s	f2, f13, f0
400d8212:	000486        	j	400d8228 <nvs::Page::copyItems(nvs::Page&)+0x108>
400d8215:	020c      	movi.n	a2, 0
400d8217:	000346        	j	400d8228 <nvs::Page::copyItems(nvs::Page&)+0x108>
400d821a:	0a2d      	mov.n	a2, a10
400d821c:	000206        	j	400d8228 <nvs::Page::copyItems(nvs::Page&)+0x108>
400d821f:	0a2d00        	add.s	f2, f13, f0
400d8222:	000086        	j	400d8228 <nvs::Page::copyItems(nvs::Page&)+0x108>
400d8225:	202aa0        	or	a2, a10, a10
400d8228:	0020c0        	memw
400d822b:	0b2142        	l32i	a4, a1, 44
400d822e:	df9731        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8231:	0020c0        	memw
400d8234:	002332        	l32i	a3, a3, 0
400d8237:	021437        	beq	a4, a3, 400d823d <nvs::Page::copyItems(nvs::Page&)+0x11d>
400d823a:	fe47e5        	call8	400d66b8 <__stack_chk_fail>
400d823d:	f01d      	retw.n
	...

400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>:
400d8240:	00e136        	entry	a1, 112
400d8243:	4159      	s32i.n	a5, a1, 16
400d8245:	3169      	s32i.n	a6, a1, 12
400d8247:	743030        	extui	a3, a3, 0, 8
400d824a:	2139      	s32i.n	a3, a1, 8
400d824c:	744040        	extui	a4, a4, 0, 8
400d824f:	5149      	s32i.n	a4, a1, 20
400d8251:	f03d      	nop.n
400d8253:	f03d      	nop.n
400d8255:	f03d      	nop.n
400d8257:	f03d      	nop.n
400d8259:	700132        	l8ui	a3, a1, 112
400d825c:	6139      	s32i.n	a3, a1, 24
400d825e:	f03d      	nop.n
400d8260:	f03d      	nop.n
400d8262:	f03d      	nop.n
400d8264:	f03d      	nop.n
400d8266:	740142        	l8ui	a4, a1, 116
400d8269:	7149      	s32i.n	a4, a1, 28
400d826b:	f03d      	nop.n
400d826d:	f03d      	nop.n
400d826f:	f03d      	nop.n
400d8271:	f03d      	nop.n
400d8273:	df8631        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8276:	0020c0        	memw
400d8279:	0338      	l32i.n	a3, a3, 0
400d827b:	0020c0        	memw
400d827e:	136132        	s32i	a3, a1, 76
400d8281:	f03d      	nop.n
400d8283:	f03d      	nop.n
400d8285:	f03d      	nop.n
400d8287:	f03d      	nop.n
400d8289:	3268      	l32i.n	a6, a2, 12
400d828b:	10c652        	addi	a5, a6, 16
400d828e:	140c      	movi.n	a4, 1
400d8290:	030c      	movi.n	a3, 0
400d8292:	038d      	mov.n	a8, a3
400d8294:	838450        	moveqz	a8, a4, a5
400d8297:	205880        	or	a5, a8, a8
400d829a:	934360        	movnez	a4, a3, a6
400d829d:	203840        	or	a3, a8, a4
400d82a0:	43cc      	bnez.n	a3, 400d82a8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x68>
400d82a2:	020666        	bnei	a6, -1, 400d82a8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x68>
400d82a5:	01a032        	movi	a3, 1
400d82a8:	239356        	bnez	a3, 400d84e5 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2a5>
400d82ab:	3168      	l32i.n	a6, a1, 12
400d82ad:	0648      	l32i.n	a4, a6, 0
400d82af:	7da032        	movi	a3, 125
400d82b2:	02b347        	bgeu	a3, a4, 400d82b8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x78>
400d82b5:	008cc6        	j	400d84ec <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2ac>
400d82b8:	f238      	l32i.n	a3, a2, 60
400d82ba:	08b347        	bgeu	a3, a4, 400d82c6 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x86>
400d82bd:	7da052        	movi	a5, 125
400d82c0:	023547        	bltu	a5, a4, 400d82c6 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x86>
400d82c3:	203440        	or	a3, a4, a4
400d82c6:	e258      	l32i.n	a5, a2, 56
400d82c8:	7ea042        	movi	a4, 126
400d82cb:	01b457        	bgeu	a4, a5, 400d82d0 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x90>
400d82ce:	045d      	mov.n	a5, a4
400d82d0:	01af42        	movi	a4, -255
400d82d3:	2168      	l32i.n	a6, a1, 8
400d82d5:	864a      	add.n	a8, a6, a4
400d82d7:	1a0c      	movi.n	a10, 1
400d82d9:	090c      	movi.n	a9, 0
400d82db:	09bd      	mov.n	a11, a9
400d82dd:	93ba80        	movnez	a11, a10, a8
400d82e0:	51c8      	l32i.n	a12, a1, 20
400d82e2:	6c4a      	add.n	a6, a12, a4
400d82e4:	094d      	mov.n	a4, a9
400d82e6:	934a60        	movnez	a4, a10, a6
400d82e9:	0284b7        	bany	a4, a11, 400d82ef <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xaf>
400d82ec:	002506        	j	400d8384 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d82ef:	4148      	l32i.n	a4, a1, 16
400d82f1:	029497        	bne	a4, a9, 400d82f7 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xb7>
400d82f4:	002306        	j	400d8384 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d82f7:	44c242        	addi	a4, a2, 68
400d82fa:	2168      	l32i.n	a6, a1, 8
400d82fc:	2c4162        	s8i	a6, a1, 44
400d82ff:	2d41c2        	s8i	a12, a1, 45
400d8302:	060c      	movi.n	a6, 0
400d8304:	2e4162        	s8i	a6, a1, 46
400d8307:	0020c0        	memw
400d830a:	f03d      	nop.n
400d830c:	f03d      	nop.n
400d830e:	f03d      	nop.n
400d8310:	f03d      	nop.n
400d8312:	6168      	l32i.n	a6, a1, 24
400d8314:	2f4162        	s8i	a6, a1, 47
400d8317:	0020c0        	memw
400d831a:	460c      	movi.n	a6, 4
400d831c:	34c182        	addi	a8, a1, 52
400d831f:	968c      	beqz.n	a6, 400d832c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xec>
400d8321:	f97c      	movi.n	a9, -1
400d8323:	0899      	s32i.n	a9, a8, 0
400d8325:	669a      	add.n	a6, a6, a9
400d8327:	884b      	addi.n	a8, a8, 4
400d8329:	fffc86        	j	400d831f <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xdf>
400d832c:	260c      	movi.n	a6, 2
400d832e:	44c182        	addi	a8, a1, 68
400d8331:	968c      	beqz.n	a6, 400d833e <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xfe>
400d8333:	f97c      	movi.n	a9, -1
400d8335:	0899      	s32i.n	a9, a8, 0
400d8337:	669a      	add.n	a6, a6, a9
400d8339:	884b      	addi.n	a8, a8, 4
400d833b:	fffc86        	j	400d8331 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0xf1>
400d833e:	4188      	l32i.n	a8, a1, 16
400d8340:	889c      	beqz.n	a8, 400d835c <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x11c>
400d8342:	fc0c      	movi.n	a12, 15
400d8344:	20b880        	or	a11, a8, a8
400d8347:	34c1a2        	addi	a10, a1, 52
400d834a:	e02681        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400d834d:	0008e0        	callx8	a8
400d8350:	060c      	movi.n	a6, 0
400d8352:	434162        	s8i	a6, a1, 67
400d8355:	0020c0        	memw
400d8358:	000246        	j	400d8365 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x125>
400d835b:	a06200        	addx4	a6, a2, a0
400d835e:	416200        	srli	a6, a0, 2
400d8361:	20c034        	lsi	f3, a0, 128
400d8364:	c1c200        	mul16u	a12, a2, a0
400d8367:	302c      	movi.n	a0, 35
400d8369:	4020b3        	lsi	f11, a0, 0x100
400d836c:	e520a4        	lsi	f10, a0, 0x394
400d836f:	009b      	addi.n	a0, a0, 9
400d8371:	0a3d      	mov.n	a3, a10
400d8373:	7da042        	movi	a4, 125
400d8376:	0ab4a7        	bgeu	a4, a10, 400d8384 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x144>
400d8379:	e03321        	l32r	a2, 400d0448 <_flash_cache_start+0x430>
400d837c:	005f46        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d837f:	000000        	ill
400d8382:	043d      	mov.n	a3, a4
400d8384:	023357        	bltu	a3, a5, 400d838a <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x14a>
400d8387:	005a46        	j	400d84f4 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2b4>
400d838a:	431b      	addi.n	a4, a3, 1
400d838c:	18c292        	addi	a9, a2, 24
400d838f:	7da062        	movi	a6, 125
400d8392:	0eb637        	bgeu	a6, a3, 400d83a4 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x164>
400d8395:	e01cd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d8398:	e01dc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d839b:	26a0b2        	movi	a11, 38
400d839e:	e01ca1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d83a1:	02b365        	call8	400daed8 <__assert_func>
400d83a4:	418430        	srli	a8, a3, 4
400d83a7:	346030        	extui	a6, a3, 0, 4
400d83aa:	1166f0        	slli	a6, a6, 1
400d83ad:	a08890        	addx4	a8, a8, a9
400d83b0:	002882        	l32i	a8, a8, 0
400d83b3:	400600        	ssr	a6
400d83b6:	916080        	srl	a6, a8
400d83b9:	146060        	extui	a6, a6, 0, 2
400d83bc:	c22666        	bnei	a6, 2, 400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d83bf:	20c770        	or	a12, a7, a7
400d83c2:	20b330        	or	a11, a3, a3
400d83c5:	02ad      	mov.n	a10, a2
400d83c7:	ffb8a5        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d83ca:	7a8c      	beqz.n	a10, 400d83d5 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x195>
400d83cc:	030c      	movi.n	a3, 0
400d83ce:	3239      	s32i.n	a3, a2, 12
400d83d0:	0a2d      	mov.n	a2, a10
400d83d2:	0049c6        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d83d5:	20a770        	or	a10, a7, a7
400d83d8:	00f825        	call8	400d935c <nvs::Item::calculateCrc32() const>
400d83db:	012762        	l32i	a6, a7, 4
400d83de:	131a67        	beq	a10, a6, 400d83f5 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1b5>
400d83e1:	03bd      	mov.n	a11, a3
400d83e3:	02ad      	mov.n	a10, a2
400d83e5:	ffba25        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d83e8:	f96a16        	beqz	a10, 400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d83eb:	030c      	movi.n	a3, 0
400d83ed:	3239      	s32i.n	a3, a2, 12
400d83ef:	0a2d      	mov.n	a2, a10
400d83f1:	004206        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d83f4:	076200        	lsi	f0, a2, 28
400d83f7:	c69201        	l32r	a0, 400c9e40 <_rtc_text_end+0x9e40>
400d83fa:	bf          	.byte 0xbf
400d83fb:	1b0c      	movi.n	a11, 1
400d83fd:	080c      	movi.n	a8, 0
400d83ff:	08ad      	mov.n	a10, a8
400d8401:	83ab90        	moveqz	a10, a11, a9
400d8404:	0a9d      	mov.n	a9, a10
400d8406:	dfc6a2        	addi	a10, a6, -33
400d8409:	838ba0        	moveqz	a8, a11, a10
400d840c:	208890        	or	a8, a8, a9
400d840f:	68cc      	bnez.n	a8, 400d8419 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1d9>
400d8411:	294c      	movi.n	a9, 66
400d8413:	029697        	bne	a6, a9, 400d8419 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1d9>
400d8416:	208bb0        	or	a8, a11, a11
400d8419:	388c      	beqz.n	a8, 400d8420 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1e0>
400d841b:	020742        	l8ui	a4, a7, 2
400d841e:	434a      	add.n	a4, a3, a4
400d8420:	ffa082        	movi	a8, 255
400d8423:	21b8      	l32i.n	a11, a1, 8
400d8425:	081b87        	beq	a11, a8, 400d8431 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1f1>
400d8428:	000782        	l8ui	a8, a7, 0
400d842b:	021b87        	beq	a11, a8, 400d8431 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x1f1>
400d842e:	ffd406        	j	400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8431:	41c8      	l32i.n	a12, a1, 16
400d8433:	dc8c      	beqz.n	a12, 400d8444 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x204>
400d8435:	fc0c      	movi.n	a12, 15
400d8437:	b78b      	addi.n	a11, a7, 8
400d8439:	41a8      	l32i.n	a10, a1, 16
400d843b:	dfeb81        	l32r	a8, 400d03e8 <_flash_cache_start+0x3d0>
400d843e:	0008e0        	callx8	a8
400d8441:	f3da56        	bnez	a10, 400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8444:	01af82        	movi	a8, -255
400d8447:	6198      	l32i.n	a9, a1, 24
400d8449:	898a      	add.n	a8, a9, a8
400d844b:	1b0c      	movi.n	a11, 1
400d844d:	090c      	movi.n	a9, 0
400d844f:	09ad      	mov.n	a10, a9
400d8451:	93ab80        	movnez	a10, a11, a8
400d8454:	0a8d      	mov.n	a8, a10
400d8456:	0521c2        	l32i	a12, a1, 20
400d8459:	becca2        	addi	a10, a12, -66
400d845c:	839ba0        	moveqz	a9, a11, a10
400d845f:	0a0987        	bnone	a9, a8, 400d846d <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x22d>
400d8462:	030782        	l8ui	a8, a7, 3
400d8465:	6198      	l32i.n	a9, a1, 24
400d8467:	021987        	beq	a9, a8, 400d846d <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x22d>
400d846a:	ffc506        	j	400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d846d:	884c      	movi.n	a8, 72
400d846f:	51a8      	l32i.n	a10, a1, 20
400d8471:	0b9a87        	bne	a10, a8, 400d8480 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x240>
400d8474:	030792        	l8ui	a9, a7, 3
400d8477:	ffa082        	movi	a8, 255
400d847a:	021987        	beq	a9, a8, 400d8480 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x240>
400d847d:	ffc046        	j	400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d8480:	51b8      	l32i.n	a11, a1, 20
400d8482:	b8cba2        	addi	a10, a11, -72
400d8485:	1b0c      	movi.n	a11, 1
400d8487:	080c      	movi.n	a8, 0
400d8489:	08cd      	mov.n	a12, a8
400d848b:	83cba0        	moveqz	a12, a11, a10
400d848e:	0cad      	mov.n	a10, a12
400d8490:	01af92        	movi	a9, -255
400d8493:	0721c2        	l32i	a12, a1, 28
400d8496:	809c90        	add	a9, a12, a9
400d8499:	938b90        	movnez	a8, a11, a9
400d849c:	0808a7        	bnone	a8, a10, 400d84a8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x268>
400d849f:	1d0782        	l8ui	a8, a7, 29
400d84a2:	021c87        	beq	a12, a8, 400d84a8 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x268>
400d84a5:	ffb646        	j	400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d84a8:	ffa082        	movi	a8, 255
400d84ab:	5198      	l32i.n	a9, a1, 20
400d84ad:	2b1987        	beq	a9, a8, 400d84dc <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x29c>
400d84b0:	281967        	beq	a9, a6, 400d84dc <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x29c>
400d84b3:	180c      	movi.n	a8, 1
400d84b5:	030c      	movi.n	a3, 0
400d84b7:	039d      	mov.n	a9, a3
400d84b9:	41a8      	l32i.n	a10, a1, 16
400d84bb:	8398a0        	moveqz	a9, a8, a10
400d84be:	01af62        	movi	a6, -255
400d84c1:	21b8      	l32i.n	a11, a1, 8
400d84c3:	6b6a      	add.n	a6, a11, a6
400d84c5:	833860        	moveqz	a3, a8, a6
400d84c8:	2e0397        	bnone	a3, a9, 400d84fa <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2ba>
400d84cb:	ffa032        	movi	a3, 255
400d84ce:	6168      	l32i.n	a6, a1, 24
400d84d0:	029637        	bne	a6, a3, 400d84d6 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x296>
400d84d3:	ffaac6        	j	400d8382 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x142>
400d84d6:	dfdf21        	l32r	a2, 400d0454 <_flash_cache_start+0x43c>
400d84d9:	000806        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d84dc:	3128      	l32i.n	a2, a1, 12
400d84de:	0239      	s32i.n	a3, a2, 0
400d84e0:	020c      	movi.n	a2, 0
400d84e2:	0005c6        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d84e5:	dfd821        	l32r	a2, 400d0448 <_flash_cache_start+0x430>
400d84e8:	000446        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d84eb:	d72100        	lsi	f0, a1, 0x35c
400d84ee:	df          	.byte 0xdf
400d84ef:	000286        	j	400d84fd <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)+0x2bd>
400d84f2:	210000        	srai	a0, a0, 0
400d84f5:	86dfd5        	call4	4005f2f4 <esp_crc8+0x21b0>
400d84f8:	210000        	srai	a0, a0, 0
400d84fb:	c0dfd6        	bgez	a15, 400d810c <nvs::Page::eraseEntryAndSpan(unsigned int)+0x184>
400d84fe:	420020        	xorb	b0, b0, b2
400d8501:	311321        	l32r	a2, 400a4950 <_iram_end+0x16dfc>
400d8504:	c0dee2        	addmi	a14, a14, 0xffffc000
400d8507:	380020        	lsi	f2, a0, 224
400d850a:	143703        	lsi	f0, a7, 80
400d850d:	1aa502        	movi	a0, 0x51a
400d8510:	fe          	.byte 0xfe
400d8511:	f01d      	retw.n
	...

400d8514 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>:
400d8514:	00c136        	entry	a1, 96
400d8517:	746060        	extui	a6, a6, 0, 8
400d851a:	747070        	extui	a7, a7, 0, 8
400d851d:	dedb81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400d8520:	0020c0        	memw
400d8523:	002882        	l32i	a8, a8, 0
400d8526:	0020c0        	memw
400d8529:	0f6182        	s32i	a8, a1, 60
400d852c:	080c      	movi.n	a8, 0
400d852e:	6189      	s32i.n	a8, a1, 24
400d8530:	1179      	s32i.n	a7, a1, 4
400d8532:	0169      	s32i.n	a6, a1, 0
400d8534:	1cc1f2        	addi	a15, a1, 28
400d8537:	18c1e2        	addi	a14, a1, 24
400d853a:	05dd      	mov.n	a13, a5
400d853c:	74c040        	extui	a12, a4, 0, 8
400d853f:	74b030        	extui	a11, a3, 0, 8
400d8542:	02ad      	mov.n	a10, a2
400d8544:	ffcfa5        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d8547:	aacc      	bnez.n	a10, 400d8555 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x41>
400d8549:	61b8      	l32i.n	a11, a1, 24
400d854b:	02ad      	mov.n	a10, a2
400d854d:	ffa3a5        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8550:	0a2d      	mov.n	a2, a10
400d8552:	000086        	j	400d8558 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x44>
400d8555:	202aa0        	or	a2, a10, a10
400d8558:	0020c0        	memw
400d855b:	0f2182        	l32i	a8, a1, 60
400d855e:	decb71        	l32r	a7, 400d008c <_flash_cache_start+0x74>
400d8561:	0020c0        	memw
400d8564:	002772        	l32i	a7, a7, 0
400d8567:	021877        	beq	a8, a7, 400d856d <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)+0x59>
400d856a:	fe14e5        	call8	400d66b8 <__stack_chk_fail>
400d856d:	f01d      	retw.n
	...

400d8570 <nvs::Page::mLoadEntryTable()>:
400d8570:	010136        	entry	a1, 128
400d8573:	dec631        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8576:	0020c0        	memw
400d8579:	0338      	l32i.n	a3, a3, 0
400d857b:	0020c0        	memw
400d857e:	176132        	s32i	a3, a1, 92
400d8581:	f03d      	nop.n
400d8583:	f03d      	nop.n
400d8585:	f03d      	nop.n
400d8587:	f03d      	nop.n
400d8589:	3268      	l32i.n	a6, a2, 12
400d858b:	562b      	addi.n	a5, a6, 2
400d858d:	170c      	movi.n	a7, 1
400d858f:	030c      	movi.n	a3, 0
400d8591:	034d      	mov.n	a4, a3
400d8593:	834750        	moveqz	a4, a7, a5
400d8596:	045d      	mov.n	a5, a4
400d8598:	464b      	addi.n	a4, a6, 4
400d859a:	833740        	moveqz	a3, a7, a4
400d859d:	203530        	or	a3, a5, a3
400d85a0:	53cc      	bnez.n	a3, 400d85a9 <nvs::Page::mLoadEntryTable()+0x39>
400d85a2:	847c      	movi.n	a4, -8
400d85a4:	019647        	bne	a6, a4, 400d85a9 <nvs::Page::mLoadEntryTable()+0x39>
400d85a7:	073d      	mov.n	a3, a7
400d85a9:	018316        	beqz	a3, 400d85c5 <nvs::Page::mLoadEntryTable()+0x55>
400d85ac:	0222a2        	l32i	a10, a2, 8
400d85af:	20a0c2        	movi	a12, 32
400d85b2:	18c2b2        	addi	a11, a2, 24
400d85b5:	aaca      	add.n	a10, a10, a12
400d85b7:	ae20a5        	call8	400867c0 <spi_flash_read>
400d85ba:	7a8c      	beqz.n	a10, 400d85c5 <nvs::Page::mLoadEntryTable()+0x55>
400d85bc:	030c      	movi.n	a3, 0
400d85be:	3239      	s32i.n	a3, a2, 12
400d85c0:	0a2d      	mov.n	a2, a10
400d85c2:	010b06        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d85c5:	00a032        	movi	a3, 0
400d85c8:	215232        	s16i	a3, a2, 66
400d85cb:	205232        	s16i	a3, a2, 64
400d85ce:	0020c0        	memw
400d85d1:	00a0a2        	movi	a10, 0
400d85d4:	7da082        	movi	a8, 125
400d85d7:	5f38a7        	bltu	a8, a10, 400d863a <nvs::Page::mLoadEntryTable()+0xca>
400d85da:	18c2b2        	addi	a11, a2, 24
400d85dd:	10b8a7        	bgeu	a8, a10, 400d85f1 <nvs::Page::mLoadEntryTable()+0x81>
400d85e0:	f03d      	nop.n
400d85e2:	df89d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d85e5:	df89c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d85e8:	26a0b2        	movi	a11, 38
400d85eb:	df89a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d85ee:	028ea5        	call8	400daed8 <__assert_func>
400d85f1:	4194a0        	srli	a9, a10, 4
400d85f4:	3480a0        	extui	a8, a10, 0, 4
400d85f7:	1188f0        	slli	a8, a8, 1
400d85fa:	a099b0        	addx4	a9, a9, a11
400d85fd:	0998      	l32i.n	a9, a9, 0
400d85ff:	400800        	ssr	a8
400d8602:	918090        	srl	a8, a9
400d8605:	148080        	extui	a8, a8, 0, 2
400d8608:	1c2866        	bnei	a8, 2, 400d8628 <nvs::Page::mLoadEntryTable()+0xb8>
400d860b:	f238      	l32i.n	a3, a2, 60
400d860d:	010366        	bnei	a3, -1, 400d8612 <nvs::Page::mLoadEntryTable()+0xa2>
400d8610:	f2a9      	s32i.n	a10, a2, 60
400d8612:	f03d      	nop.n
400d8614:	f03d      	nop.n
400d8616:	f03d      	nop.n
400d8618:	f03d      	nop.n
400d861a:	201282        	l16ui	a8, a2, 64
400d861d:	881b      	addi.n	a8, a8, 1
400d861f:	205282        	s16i	a8, a2, 64
400d8622:	0020c0        	memw
400d8625:	000306        	j	400d8635 <nvs::Page::mLoadEntryTable()+0xc5>
400d8628:	98cc      	bnez.n	a8, 400d8635 <nvs::Page::mLoadEntryTable()+0xc5>
400d862a:	211282        	l16ui	a8, a2, 66
400d862d:	881b      	addi.n	a8, a8, 1
400d862f:	215282        	s16i	a8, a2, 66
400d8632:	0020c0        	memw
400d8635:	aa1b      	addi.n	a10, a10, 1
400d8637:	ffe646        	j	400d85d4 <nvs::Page::mLoadEntryTable()+0x64>
400d863a:	3238      	l32i.n	a3, a2, 12
400d863c:	e47c      	movi.n	a4, -2
400d863e:	021347        	beq	a3, a4, 400d8644 <nvs::Page::mLoadEntryTable()+0xd4>
400d8641:	009f06        	j	400d88c1 <nvs::Page::mLoadEntryTable()+0x351>
400d8644:	030c      	movi.n	a3, 0
400d8646:	7da042        	movi	a4, 125
400d8649:	383437        	bltu	a4, a3, 400d8685 <nvs::Page::mLoadEntryTable()+0x115>
400d864c:	18c282        	addi	a8, a2, 24
400d864f:	0db437        	bgeu	a4, a3, 400d8660 <nvs::Page::mLoadEntryTable()+0xf0>
400d8652:	df6dd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d8655:	df6dc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d8658:	6b2c      	movi.n	a11, 38
400d865a:	df6da1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d865d:	0287a5        	call8	400daed8 <__assert_func>
400d8660:	415430        	srli	a5, a3, 4
400d8663:	344030        	extui	a4, a3, 0, 4
400d8666:	1164f0        	slli	a6, a4, 1
400d8669:	a05580        	addx4	a5, a5, a8
400d866c:	0548      	l32i.n	a4, a5, 0
400d866e:	400600        	ssr	a6
400d8671:	914040        	srl	a4, a4
400d8674:	144040        	extui	a4, a4, 0, 2
400d8677:	053466        	bnei	a4, 3, 400d8680 <nvs::Page::mLoadEntryTable()+0x110>
400d867a:	e239      	s32i.n	a3, a2, 56
400d867c:	000146        	j	400d8685 <nvs::Page::mLoadEntryTable()+0x115>
400d867f:	331b00        	clamps	a1, a11, 7
400d8682:	fff006        	j	400d8646 <nvs::Page::mLoadEntryTable()+0xd6>
400d8685:	e238      	l32i.n	a3, a2, 56
400d8687:	7da042        	movi	a4, 125
400d868a:	02b437        	bgeu	a4, a3, 400d8690 <nvs::Page::mLoadEntryTable()+0x120>
400d868d:	002b46        	j	400d873e <nvs::Page::mLoadEntryTable()+0x1ce>
400d8690:	0eb437        	bgeu	a4, a3, 400d86a2 <nvs::Page::mLoadEntryTable()+0x132>
400d8693:	df65d1        	l32r	a13, 400d0428 <_flash_cache_start+0x410>
400d8696:	df65c1        	l32r	a12, 400d042c <_flash_cache_start+0x414>
400d8699:	c5a0b2        	movi	a11, 197
400d869c:	df65a1        	l32r	a10, 400d0430 <_flash_cache_start+0x418>
400d869f:	0283a5        	call8	400daed8 <__assert_func>
400d86a2:	22a8      	l32i.n	a10, a2, 8
400d86a4:	1133b0        	slli	a3, a3, 5
400d86a7:	80a3a0        	add	a10, a3, a10
400d86aa:	04a0c2        	movi	a12, 4
400d86ad:	18c1b2        	addi	a11, a1, 24
400d86b0:	40caa2        	addi	a10, a10, 64
400d86b3:	ae10e5        	call8	400867c0 <spi_flash_read>
400d86b6:	8a8c      	beqz.n	a10, 400d86c2 <nvs::Page::mLoadEntryTable()+0x152>
400d86b8:	030c      	movi.n	a3, 0
400d86ba:	3239      	s32i.n	a3, a2, 12
400d86bc:	0a2d      	mov.n	a2, a10
400d86be:	00cc06        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d86c1:	613800        	lsi	f0, a8, 0x184
400d86c4:	760326        	beqi	a3, -1, 400d873e <nvs::Page::mLoadEntryTable()+0x1ce>
400d86c7:	18c252        	addi	a5, a2, 24
400d86ca:	e238      	l32i.n	a3, a2, 56
400d86cc:	7da042        	movi	a4, 125
400d86cf:	0db437        	bgeu	a4, a3, 400d86e0 <nvs::Page::mLoadEntryTable()+0x170>
400d86d2:	df4dd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d86d5:	df4dc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d86d8:	6b2c      	movi.n	a11, 38
400d86da:	df4da1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d86dd:	027fa5        	call8	400daed8 <__assert_func>
400d86e0:	414430        	srli	a4, a3, 4
400d86e3:	343030        	extui	a3, a3, 0, 4
400d86e6:	1133f0        	slli	a3, a3, 1
400d86e9:	a04450        	addx4	a4, a4, a5
400d86ec:	0448      	l32i.n	a4, a4, 0
400d86ee:	400300        	ssr	a3
400d86f1:	913040        	srl	a3, a4
400d86f4:	143030        	extui	a3, a3, 0, 2
400d86f7:	0c0c      	movi.n	a12, 0
400d86f9:	e2b8      	l32i.n	a11, a2, 56
400d86fb:	02ad      	mov.n	a10, a2
400d86fd:	ff67a5        	call8	400d7d78 <nvs::Page::alterEntryState(unsigned int, nvs::Page::EntryState)>
400d8700:	7a8c      	beqz.n	a10, 400d870b <nvs::Page::mLoadEntryTable()+0x19b>
400d8702:	030c      	movi.n	a3, 0
400d8704:	3239      	s32i.n	a3, a2, 12
400d8706:	0a2d      	mov.n	a2, a10
400d8708:	00b986        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d870b:	e248      	l32i.n	a4, a2, 56
400d870d:	441b      	addi.n	a4, a4, 1
400d870f:	e249      	s32i.n	a4, a2, 56
400d8711:	132366        	bnei	a3, 2, 400d8728 <nvs::Page::mLoadEntryTable()+0x1b8>
400d8714:	f03d      	nop.n
400d8716:	f03d      	nop.n
400d8718:	f03d      	nop.n
400d871a:	f03d      	nop.n
400d871c:	201232        	l16ui	a3, a2, 64
400d871f:	ffc332        	addi	a3, a3, -1
400d8722:	205232        	s16i	a3, a2, 64
400d8725:	0020c0        	memw
400d8728:	f03d      	nop.n
400d872a:	f03d      	nop.n
400d872c:	f03d      	nop.n
400d872e:	f03d      	nop.n
400d8730:	211232        	l16ui	a3, a2, 66
400d8733:	331b      	addi.n	a3, a3, 1
400d8735:	215232        	s16i	a3, a2, 66
400d8738:	0020c0        	memw
400d873b:	ffd186        	j	400d8685 <nvs::Page::mLoadEntryTable()+0x115>
400d873e:	e258      	l32i.n	a5, a2, 56
400d8740:	7ea032        	movi	a3, 126
400d8743:	01b357        	bgeu	a3, a5, 400d8748 <nvs::Page::mLoadEntryTable()+0x1d8>
400d8746:	035d      	mov.n	a5, a3
400d8748:	030c      	movi.n	a3, 0
400d874a:	f47c      	movi.n	a4, -1
400d874c:	023357        	bltu	a3, a5, 400d8752 <nvs::Page::mLoadEntryTable()+0x1e2>
400d874f:	004986        	j	400d8879 <nvs::Page::mLoadEntryTable()+0x309>
400d8752:	18c262        	addi	a6, a2, 24
400d8755:	7da042        	movi	a4, 125
400d8758:	0db437        	bgeu	a4, a3, 400d8769 <nvs::Page::mLoadEntryTable()+0x1f9>
400d875b:	df2bd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d875e:	df2bc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d8761:	6b2c      	movi.n	a11, 38
400d8763:	df2ba1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d8766:	027725        	call8	400daed8 <__assert_func>
400d8769:	418430        	srli	a8, a3, 4
400d876c:	344030        	extui	a4, a3, 0, 4
400d876f:	1194f0        	slli	a9, a4, 1
400d8772:	a08860        	addx4	a8, a8, a6
400d8775:	002842        	l32i	a4, a8, 0
400d8778:	400900        	ssr	a9
400d877b:	914040        	srl	a4, a4
400d877e:	144040        	extui	a4, a4, 0, 2
400d8781:	0e3416        	beqz	a4, 400d8868 <nvs::Page::mLoadEntryTable()+0x2f8>
400d8784:	1cc1c2        	addi	a12, a1, 28
400d8787:	20b330        	or	a11, a3, a3
400d878a:	20a220        	or	a10, a2, a2
400d878d:	ff7c25        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d8790:	9a8c      	beqz.n	a10, 400d879d <nvs::Page::mLoadEntryTable()+0x22d>
400d8792:	030c      	movi.n	a3, 0
400d8794:	3239      	s32i.n	a3, a2, 12
400d8796:	0a2d      	mov.n	a2, a10
400d8798:	009586        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d879b:	420000        	xorb	b0, b0, b0
400d879e:	a20821        	l32r	a2, 400c0fc0 <_rtc_text_end+0xfc0>
400d87a1:	a51cc1        	l32r	a12, 400c1c14 <_rtc_text_end+0x1c14>
400d87a4:	00bb      	addi.n	a0, a0, 11
400d87a6:	1314a7        	beq	a4, a10, 400d87bd <nvs::Page::mLoadEntryTable()+0x24d>
400d87a9:	20b330        	or	a11, a3, a3
400d87ac:	02ad      	mov.n	a10, a2
400d87ae:	ff7da5        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d87b1:	0bba16        	beqz	a10, 400d8870 <nvs::Page::mLoadEntryTable()+0x300>
400d87b4:	030c      	movi.n	a3, 0
400d87b6:	3239      	s32i.n	a3, a2, 12
400d87b8:	0a2d      	mov.n	a2, a10
400d87ba:	008d06        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d87bd:	44c242        	addi	a4, a2, 68
400d87c0:	03cd      	mov.n	a12, a3
400d87c2:	1cc1b2        	addi	a11, a1, 28
400d87c5:	04ad      	mov.n	a10, a4
400d87c7:	0043e5        	call8	400d8c04 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d87ca:	1cc1c2        	addi	a12, a1, 28
400d87cd:	0b0c      	movi.n	a11, 0
400d87cf:	04ad      	mov.n	a10, a4
400d87d1:	0055a5        	call8	400d8d2c <nvs::HashList::find(unsigned int, nvs::Item const&)>
400d87d4:	1d0192        	l8ui	a9, a1, 29
400d87d7:	bfc942        	addi	a4, a9, -65
400d87da:	1b0c      	movi.n	a11, 1
400d87dc:	070c      	movi.n	a7, 0
400d87de:	078d      	mov.n	a8, a7
400d87e0:	838b40        	moveqz	a8, a11, a4
400d87e3:	084d      	mov.n	a4, a8
400d87e5:	dfc982        	addi	a8, a9, -33
400d87e8:	837b80        	moveqz	a7, a11, a8
400d87eb:	204740        	or	a4, a7, a4
400d87ee:	54cc      	bnez.n	a4, 400d87f7 <nvs::Page::mLoadEntryTable()+0x287>
400d87f0:	274c      	movi.n	a7, 66
400d87f2:	019977        	bne	a9, a7, 400d87f7 <nvs::Page::mLoadEntryTable()+0x287>
400d87f5:	0b4d      	mov.n	a4, a11
400d87f7:	059416        	beqz	a4, 400d8854 <nvs::Page::mLoadEntryTable()+0x2e4>
400d87fa:	1e0172        	l8ui	a7, a1, 30
400d87fd:	034d      	mov.n	a4, a3
400d87ff:	837a      	add.n	a8, a3, a7
400d8801:	33b487        	bgeu	a4, a8, 400d8838 <nvs::Page::mLoadEntryTable()+0x2c8>
400d8804:	7da082        	movi	a8, 125
400d8807:	0db847        	bgeu	a8, a4, 400d8818 <nvs::Page::mLoadEntryTable()+0x2a8>
400d880a:	deffd1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d880d:	deffc1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d8810:	6b2c      	movi.n	a11, 38
400d8812:	deffa1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d8815:	026c25        	call8	400daed8 <__assert_func>
400d8818:	419440        	srli	a9, a4, 4
400d881b:	348040        	extui	a8, a4, 0, 4
400d881e:	11c8f0        	slli	a12, a8, 1
400d8821:	a09960        	addx4	a9, a9, a6
400d8824:	0988      	l32i.n	a8, a9, 0
400d8826:	400c00        	ssr	a12
400d8829:	918080        	srl	a8, a8
400d882c:	148080        	extui	a8, a8, 0, 2
400d882f:	0d2866        	bnei	a8, 2, 400d8840 <nvs::Page::mLoadEntryTable()+0x2d0>
400d8832:	441b      	addi.n	a4, a4, 1
400d8834:	fff1c6        	j	400d87ff <nvs::Page::mLoadEntryTable()+0x28f>
400d8837:	034d00        	lsi	f0, a13, 12
400d883a:	060c      	movi.n	a6, 0
400d883c:	000186        	j	400d8846 <nvs::Page::mLoadEntryTable()+0x2d6>
400d883f:	a06200        	addx4	a6, a2, a0
400d8842:	af4201        	l32r	a0, 400c454c <_rtc_text_end+0x454c>
400d8845:	ff          	.byte 0xff
400d8846:	00e616        	beqz	a6, 400d8858 <nvs::Page::mLoadEntryTable()+0x2e8>
400d8849:	03bd      	mov.n	a11, a3
400d884b:	02ad      	mov.n	a10, a2
400d884d:	ff73a5        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8850:	000806        	j	400d8874 <nvs::Page::mLoadEntryTable()+0x304>
400d8853:	034d00        	lsi	f0, a13, 12
400d8856:	170c      	movi.n	a7, 1
400d8858:	18ba37        	bgeu	a10, a3, 400d8874 <nvs::Page::mLoadEntryTable()+0x304>
400d885b:	0abd      	mov.n	a11, a10
400d885d:	02ad      	mov.n	a10, a2
400d885f:	ff72a5        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8862:	000386        	j	400d8874 <nvs::Page::mLoadEntryTable()+0x304>
400d8865:	000000        	ill
400d8868:	170c      	movi.n	a7, 1
400d886a:	f47c      	movi.n	a4, -1
400d886c:	000106        	j	400d8874 <nvs::Page::mLoadEntryTable()+0x304>
400d886f:	034d00        	lsi	f0, a13, 12
400d8872:	170c      	movi.n	a7, 1
400d8874:	337a      	add.n	a3, a3, a7
400d8876:	ffb486        	j	400d874c <nvs::Page::mLoadEntryTable()+0x1dc>
400d8879:	3f0426        	beqi	a4, -1, 400d88bc <nvs::Page::mLoadEntryTable()+0x34c>
400d887c:	00a032        	movi	a3, 0
400d887f:	066132        	s32i	a3, a1, 24
400d8882:	f03d      	nop.n
400d8884:	f03d      	nop.n
400d8886:	f03d      	nop.n
400d8888:	f03d      	nop.n
400d888a:	1c01b2        	l8ui	a11, a1, 28
400d888d:	1d01c2        	l8ui	a12, a1, 29
400d8890:	ffa032        	movi	a3, 255
400d8893:	1139      	s32i.n	a3, a1, 4
400d8895:	0139      	s32i.n	a3, a1, 0
400d8897:	3cc1f2        	addi	a15, a1, 60
400d889a:	18c1e2        	addi	a14, a1, 24
400d889d:	24c1d2        	addi	a13, a1, 36
400d88a0:	02ad      	mov.n	a10, a2
400d88a2:	ff99e5        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d88a5:	3adc      	bnez.n	a10, 400d88bc <nvs::Page::mLoadEntryTable()+0x34c>
400d88a7:	61b8      	l32i.n	a11, a1, 24
400d88a9:	0fbb47        	bgeu	a11, a4, 400d88bc <nvs::Page::mLoadEntryTable()+0x34c>
400d88ac:	02ad      	mov.n	a10, a2
400d88ae:	ff6da5        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d88b1:	7a8c      	beqz.n	a10, 400d88bc <nvs::Page::mLoadEntryTable()+0x34c>
400d88b3:	030c      	movi.n	a3, 0
400d88b5:	3239      	s32i.n	a3, a2, 12
400d88b7:	0a2d      	mov.n	a2, a10
400d88b9:	004d46        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d88bc:	020c      	movi.n	a2, 0
400d88be:	004c06        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d88c1:	04c342        	addi	a4, a3, 4
400d88c4:	01a062        	movi	a6, 1
400d88c7:	00a052        	movi	a5, 0
400d88ca:	059d      	mov.n	a9, a5
400d88cc:	839640        	moveqz	a9, a6, a4
400d88cf:	338b      	addi.n	a3, a3, 8
400d88d1:	835630        	moveqz	a5, a6, a3
400d88d4:	205590        	or	a5, a5, a9
400d88d7:	115516        	beqz	a5, 400d89f0 <nvs::Page::mLoadEntryTable()+0x480>
400d88da:	f238      	l32i.n	a3, a2, 60
400d88dc:	7da042        	movi	a4, 125
400d88df:	02b437        	bgeu	a4, a3, 400d88e5 <nvs::Page::mLoadEntryTable()+0x375>
400d88e2:	004106        	j	400d89ea <nvs::Page::mLoadEntryTable()+0x47a>
400d88e5:	18c242        	addi	a4, a2, 24
400d88e8:	7da062        	movi	a6, 125
400d88eb:	0db637        	bgeu	a6, a3, 400d88fc <nvs::Page::mLoadEntryTable()+0x38c>
400d88ee:	dec6d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d88f1:	dec6c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d88f4:	6b2c      	movi.n	a11, 38
400d88f6:	dec6a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d88f9:	025de5        	call8	400daed8 <__assert_func>
400d88fc:	419430        	srli	a9, a3, 4
400d88ff:	348030        	extui	a8, a3, 0, 4
400d8902:	11a8f0        	slli	a10, a8, 1
400d8905:	a09940        	addx4	a9, a9, a4
400d8908:	002982        	l32i	a8, a9, 0
400d890b:	400a00        	ssr	a10
400d890e:	918080        	srl	a8, a8
400d8911:	148080        	extui	a8, a8, 0, 2
400d8914:	022826        	beqi	a8, 2, 400d891a <nvs::Page::mLoadEntryTable()+0x3aa>
400d8917:	003286        	j	400d89e5 <nvs::Page::mLoadEntryTable()+0x475>
400d891a:	3cc1c2        	addi	a12, a1, 60
400d891d:	20b330        	or	a11, a3, a3
400d8920:	20a220        	or	a10, a2, a2
400d8923:	ff62e5        	call8	400d7f50 <nvs::Page::readEntry(unsigned int, nvs::Item&) const>
400d8926:	7a8c      	beqz.n	a10, 400d8931 <nvs::Page::mLoadEntryTable()+0x3c1>
400d8928:	030c      	movi.n	a3, 0
400d892a:	3239      	s32i.n	a3, a2, 12
400d892c:	0a2d      	mov.n	a2, a10
400d892e:	003006        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d8931:	102162        	l32i	a6, a1, 64
400d8934:	3cc1a2        	addi	a10, a1, 60
400d8937:	00a265        	call8	400d935c <nvs::Item::calculateCrc32() const>
400d893a:	1316a7        	beq	a6, a10, 400d8951 <nvs::Page::mLoadEntryTable()+0x3e1>
400d893d:	03bd      	mov.n	a11, a3
400d893f:	02ad      	mov.n	a10, a2
400d8941:	ff6465        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d8944:	09da16        	beqz	a10, 400d89e5 <nvs::Page::mLoadEntryTable()+0x475>
400d8947:	030c      	movi.n	a3, 0
400d8949:	3239      	s32i.n	a3, a2, 12
400d894b:	0a2d      	mov.n	a2, a10
400d894d:	002846        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d8950:	016200        	slli	a6, a2, 32
400d8953:	3e          	.byte 0x3e
400d8954:	d6cc      	bnez.n	a6, 400d8965 <nvs::Page::mLoadEntryTable()+0x3f5>
400d8956:	dec0d1        	l32r	a13, 400d0458 <_flash_cache_start+0x440>
400d8959:	dec0c1        	l32r	a12, 400d045c <_flash_cache_start+0x444>
400d895c:	69a2b2        	movi	a11, 0x269
400d895f:	dea9a1        	l32r	a10, 400d0404 <_flash_cache_start+0x3ec>
400d8962:	025765        	call8	400daed8 <__assert_func>
400d8965:	03cd      	mov.n	a12, a3
400d8967:	3cc1b2        	addi	a11, a1, 60
400d896a:	44c2a2        	addi	a10, a2, 68
400d896d:	002965        	call8	400d8c04 <nvs::HashList::insert(nvs::Item const&, unsigned int)>
400d8970:	3e0162        	l8ui	a6, a1, 62
400d8973:	3d01a2        	l8ui	a10, a1, 61
400d8976:	bfca72        	addi	a7, a10, -65
400d8979:	01a0b2        	movi	a11, 1
400d897c:	080c      	movi.n	a8, 0
400d897e:	089d      	mov.n	a9, a8
400d8980:	839b70        	moveqz	a9, a11, a7
400d8983:	097d      	mov.n	a7, a9
400d8985:	dfca92        	addi	a9, a10, -33
400d8988:	838b90        	moveqz	a8, a11, a9
400d898b:	207870        	or	a7, a8, a7
400d898e:	57cc      	bnez.n	a7, 400d8997 <nvs::Page::mLoadEntryTable()+0x427>
400d8990:	284c      	movi.n	a8, 66
400d8992:	019a87        	bne	a10, a8, 400d8997 <nvs::Page::mLoadEntryTable()+0x427>
400d8995:	057d      	mov.n	a7, a5
400d8997:	046716        	beqz	a7, 400d89e1 <nvs::Page::mLoadEntryTable()+0x471>
400d899a:	831b      	addi.n	a8, a3, 1
400d899c:	936a      	add.n	a9, a3, a6
400d899e:	3fb897        	bgeu	a8, a9, 400d89e1 <nvs::Page::mLoadEntryTable()+0x471>
400d89a1:	7da092        	movi	a9, 125
400d89a4:	0db987        	bgeu	a9, a8, 400d89b5 <nvs::Page::mLoadEntryTable()+0x445>
400d89a7:	de98d1        	l32r	a13, 400d0408 <_flash_cache_start+0x3f0>
400d89aa:	de98c1        	l32r	a12, 400d040c <_flash_cache_start+0x3f4>
400d89ad:	6b2c      	movi.n	a11, 38
400d89af:	de98a1        	l32r	a10, 400d0410 <_flash_cache_start+0x3f8>
400d89b2:	025265        	call8	400daed8 <__assert_func>
400d89b5:	41a480        	srli	a10, a8, 4
400d89b8:	349080        	extui	a9, a8, 0, 4
400d89bb:	11b9f0        	slli	a11, a9, 1
400d89be:	a0aa40        	addx4	a10, a10, a4
400d89c1:	002a92        	l32i	a9, a10, 0
400d89c4:	400b00        	ssr	a11
400d89c7:	919090        	srl	a9, a9
400d89ca:	149090        	extui	a9, a9, 0, 2
400d89cd:	0b2926        	beqi	a9, 2, 400d89dc <nvs::Page::mLoadEntryTable()+0x46c>
400d89d0:	20b330        	or	a11, a3, a3
400d89d3:	20a220        	or	a10, a2, a2
400d89d6:	ff5b25        	call8	400d7f88 <nvs::Page::eraseEntryAndSpan(unsigned int)>
400d89d9:	000106        	j	400d89e1 <nvs::Page::mLoadEntryTable()+0x471>
400d89dc:	881b      	addi.n	a8, a8, 1
400d89de:	ffee86        	j	400d899c <nvs::Page::mLoadEntryTable()+0x42c>
400d89e1:	336a      	add.n	a3, a3, a6
400d89e3:	330b      	addi.n	a3, a3, -1
400d89e5:	331b      	addi.n	a3, a3, 1
400d89e7:	ffbc46        	j	400d88dc <nvs::Page::mLoadEntryTable()+0x36c>
400d89ea:	020c      	movi.n	a2, 0
400d89ec:	000086        	j	400d89f2 <nvs::Page::mLoadEntryTable()+0x482>
400d89ef:	020c00        	andb	b0, b12, b0
400d89f2:	0020c0        	memw
400d89f5:	172142        	l32i	a4, a1, 92
400d89f8:	dda531        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d89fb:	0020c0        	memw
400d89fe:	0338      	l32i.n	a3, a3, 0
400d8a00:	021437        	beq	a4, a3, 400d8a06 <nvs::Page::mLoadEntryTable()+0x496>
400d8a03:	fdcb65        	call8	400d66b8 <__stack_chk_fail>
400d8a06:	f01d      	retw.n

400d8a08 <nvs::Page::load(unsigned int)>:
400d8a08:	00e136        	entry	a1, 112
400d8a0b:	dda041        	l32r	a4, 400d008c <_flash_cache_start+0x74>
400d8a0e:	0020c0        	memw
400d8a11:	0448      	l32i.n	a4, a4, 0
400d8a13:	0020c0        	memw
400d8a16:	136142        	s32i	a4, a1, 76
400d8a19:	113340        	slli	a3, a3, 12
400d8a1c:	2239      	s32i.n	a3, a2, 8
400d8a1e:	030c      	movi.n	a3, 0
400d8a20:	205232        	s16i	a3, a2, 64
400d8a23:	215232        	s16i	a3, a2, 66
400d8a26:	0020c0        	memw
400d8a29:	381c      	movi.n	a8, 19
400d8a2b:	35c192        	addi	a9, a1, 53
400d8a2e:	e88c      	beqz.n	a8, 400d8a40 <nvs::Page::load(unsigned int)+0x38>
400d8a30:	fa7c      	movi.n	a10, -1
400d8a32:	0049a2        	s8i	a10, a9, 0
400d8a35:	0020c0        	memw
400d8a38:	880b      	addi.n	a8, a8, -1
400d8a3a:	991b      	addi.n	a9, a9, 1
400d8a3c:	fffb86        	j	400d8a2e <nvs::Page::load(unsigned int)+0x26>
400d8a3f:	a0c200        	addx4	a12, a2, a0
400d8a42:	c1b220        	mul16u	a11, a2, a2
400d8a45:	a22c      	movi.n	a2, 42
400d8a47:	650222        	l8ui	a2, a2, 101
400d8a4a:	16add7        	bge	a13, a13, 400d8a64 <nvs::Page::load(unsigned int)+0x5c>
400d8a4d:	009a      	add.n	a0, a0, a9
400d8a4f:	030c      	movi.n	a3, 0
400d8a51:	3239      	s32i.n	a3, a2, 12
400d8a53:	0a2d      	mov.n	a2, a10
400d8a55:	0033c6        	j	400d8b28 <nvs::Page::load(unsigned int)+0x120>
400d8a58:	213200        	srai	a3, a0, 2
400d8a5b:	660b      	addi.n	a6, a6, -1
400d8a5d:	324903        	ssi	f0, a9, 200
400d8a60:	320362        	l8ui	a6, a3, 50
400d8a63:	3d00a0        	lsi	f10, a0, 244
400d8a66:	f03df0        	subx8	a3, a13, a15
400d8a69:	f03d      	nop.n
400d8a6b:	de7e41        	l32r	a4, 400d0464 <_flash_cache_start+0x44c>
400d8a6e:	723437        	bltu	a4, a3, 400d8ae4 <nvs::Page::load(unsigned int)+0xdc>
400d8a71:	22a8      	l32i.n	a10, a2, 8
400d8a73:	0c2c      	movi.n	a12, 32
400d8a75:	b1cb      	addi.n	a11, a1, 12
400d8a77:	a3aa      	add.n	a10, a3, a10
400d8a79:	add465        	call8	400867c0 <spi_flash_read>
400d8a7c:	8a8c      	beqz.n	a10, 400d8a88 <nvs::Page::load(unsigned int)+0x80>
400d8a7e:	030c      	movi.n	a3, 0
400d8a80:	3239      	s32i.n	a3, a2, 12
400d8a82:	0a2d      	mov.n	a2, a10
400d8a84:	002806        	j	400d8b28 <nvs::Page::load(unsigned int)+0x120>
400d8a87:	c14200        	mul16u	a4, a2, a0
400d8a8a:	d21c      	movi.n	a2, 29
400d8a8c:	d000a0        	subx2	a0, a0, a10
400d8a8f:	20cd      	lsi	f12, a0, 0
400d8a91:	20b440        	or	a11, a4, a4
400d8a94:	a1cb      	addi.n	a10, a1, 12
400d8a96:	13bda5        	call8	400ec670 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)>
400d8a99:	0614a7        	beq	a4, a10, 400d8aa3 <nvs::Page::load(unsigned int)+0x9b>
400d8a9c:	037c      	movi.n	a3, -16
400d8a9e:	3239      	s32i.n	a3, a2, 12
400d8aa0:	001006        	j	400d8ae4 <nvs::Page::load(unsigned int)+0xdc>
400d8aa3:	20c332        	addi	a3, a3, 32
400d8aa6:	ffeec6        	j	400d8a65 <nvs::Page::load(unsigned int)+0x5d>
400d8aa9:	122132        	l32i	a3, a1, 72
400d8aac:	2cc1a2        	addi	a10, a1, 44
400d8aaf:	ff1865        	call8	400d7c34 <nvs::Page::Header::calculateCrc32()>
400d8ab2:	0713a7        	beq	a3, a10, 400d8abd <nvs::Page::load(unsigned int)+0xb5>
400d8ab5:	037c      	movi.n	a3, -16
400d8ab7:	b139      	s32i.n	a3, a1, 44
400d8ab9:	0009c6        	j	400d8ae4 <nvs::Page::load(unsigned int)+0xdc>
400d8abc:	b13800        	lsi	f0, a8, 0x2c4
400d8abf:	3239      	s32i.n	a3, a2, 12
400d8ac1:	f03d      	nop.n
400d8ac3:	f03d      	nop.n
400d8ac5:	f03d      	nop.n
400d8ac7:	f03d      	nop.n
400d8ac9:	c138      	l32i.n	a3, a1, 48
400d8acb:	4239      	s32i.n	a3, a2, 16
400d8acd:	f03d      	nop.n
400d8acf:	f03d      	nop.n
400d8ad1:	f03d      	nop.n
400d8ad3:	f03d      	nop.n
400d8ad5:	340132        	l8ui	a3, a1, 52
400d8ad8:	fda042        	movi	a4, 253
400d8adb:	41b437        	bgeu	a4, a3, 400d8b20 <nvs::Page::load(unsigned int)+0x118>
400d8ade:	144232        	s8i	a3, a2, 20
400d8ae1:	0020c0        	memw
400d8ae4:	f03d      	nop.n
400d8ae6:	f03d      	nop.n
400d8ae8:	f03d      	nop.n
400d8aea:	f03d      	nop.n
400d8aec:	3238      	l32i.n	a3, a2, 12
400d8aee:	c47c      	movi.n	a4, -4
400d8af0:	151347        	beq	a3, a4, 400d8b09 <nvs::Page::load(unsigned int)+0x101>
400d8af3:	073437        	bltu	a4, a3, 400d8afe <nvs::Page::load(unsigned int)+0xf6>
400d8af6:	847c      	movi.n	a4, -8
400d8af8:	1a9347        	bne	a3, a4, 400d8b16 <nvs::Page::load(unsigned int)+0x10e>
400d8afb:	000286        	j	400d8b09 <nvs::Page::load(unsigned int)+0x101>
400d8afe:	e47c      	movi.n	a4, -2
400d8b00:	051347        	beq	a3, a4, 400d8b09 <nvs::Page::load(unsigned int)+0x101>
400d8b03:	1f0326        	beqi	a3, -1, 400d8b26 <nvs::Page::load(unsigned int)+0x11e>
400d8b06:	000306        	j	400d8b16 <nvs::Page::load(unsigned int)+0x10e>
400d8b09:	02ad      	mov.n	a10, a2
400d8b0b:	ffa665        	call8	400d8570 <nvs::Page::mLoadEntryTable()>
400d8b0e:	020c      	movi.n	a2, 0
400d8b10:	000506        	j	400d8b28 <nvs::Page::load(unsigned int)+0x120>
400d8b13:	000000        	ill
400d8b16:	037c      	movi.n	a3, -16
400d8b18:	3239      	s32i.n	a3, a2, 12
400d8b1a:	020c      	movi.n	a2, 0
400d8b1c:	000206        	j	400d8b28 <nvs::Page::load(unsigned int)+0x120>
400d8b1f:	502100        	lsi	f0, a1, 0x140
400d8b22:	de          	.byte 0xde
400d8b23:	000046        	j	400d8b28 <nvs::Page::load(unsigned int)+0x120>
400d8b26:	020c      	movi.n	a2, 0
400d8b28:	0020c0        	memw
400d8b2b:	132142        	l32i	a4, a1, 76
400d8b2e:	dd5731        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8b31:	0020c0        	memw
400d8b34:	0338      	l32i.n	a3, a3, 0
400d8b36:	021437        	beq	a4, a3, 400d8b3c <nvs::Page::load(unsigned int)+0x134>
400d8b39:	fdb7e5        	call8	400d66b8 <__stack_chk_fail>
400d8b3c:	f01d      	retw.n
	...

400d8b40 <nvs::Page::getSeqNumber(unsigned int&) const>:
400d8b40:	004136        	entry	a1, 32
400d8b43:	3288      	l32i.n	a8, a2, 12
400d8b45:	980b      	addi.n	a9, a8, -1
400d8b47:	1a0c      	movi.n	a10, 1
400d8b49:	db7c      	movi.n	a11, -3
400d8b4b:	01bb97        	bgeu	a11, a9, 400d8b50 <nvs::Page::getSeqNumber(unsigned int&) const+0x10>
400d8b4e:	0a0c      	movi.n	a10, 0
400d8b50:	10c892        	addi	a9, a8, 16
400d8b53:	080c      	movi.n	a8, 0
400d8b55:	1b0c      	movi.n	a11, 1
400d8b57:	938b90        	movnez	a8, a11, a9
400d8b5a:	0708a7        	bnone	a8, a10, 400d8b65 <nvs::Page::getSeqNumber(unsigned int&) const+0x25>
400d8b5d:	4228      	l32i.n	a2, a2, 16
400d8b5f:	0329      	s32i.n	a2, a3, 0
400d8b61:	020c      	movi.n	a2, 0
400d8b63:	f01d      	retw.n
400d8b65:	de4021        	l32r	a2, 400d0468 <_flash_cache_start+0x450>
400d8b68:	f01d      	retw.n
	...

400d8b6c <nvs::Page::setSeqNumber(unsigned int)>:
400d8b6c:	004136        	entry	a1, 32
400d8b6f:	3288      	l32i.n	a8, a2, 12
400d8b71:	050866        	bnei	a8, -1, 400d8b7a <nvs::Page::setSeqNumber(unsigned int)+0xe>
400d8b74:	4239      	s32i.n	a3, a2, 16
400d8b76:	020c      	movi.n	a2, 0
400d8b78:	f01d      	retw.n
400d8b7a:	de3c21        	l32r	a2, 400d046c <_flash_cache_start+0x454>
400d8b7d:	f01d      	retw.n
	...

400d8b80 <nvs::Page::erase()>:
400d8b80:	004136        	entry	a1, 32
400d8b83:	0222a2        	l32i	a10, a2, 8
400d8b86:	41aca0        	srli	a10, a10, 12
400d8b89:	ad9f25        	call8	4008657c <spi_flash_erase_sector>
400d8b8c:	008a16        	beqz	a10, 400d8b98 <nvs::Page::erase()+0x18>
400d8b8f:	00a082        	movi	a8, 0
400d8b92:	3289      	s32i.n	a8, a2, 12
400d8b94:	0a2d      	mov.n	a2, a10
400d8b96:	f01d      	retw.n
400d8b98:	00a082        	movi	a8, 0
400d8b9b:	205282        	s16i	a8, a2, 64
400d8b9e:	215282        	s16i	a8, a2, 66
400d8ba1:	ffaf82        	movi	a8, -1
400d8ba4:	0f6282        	s32i	a8, a2, 60
400d8ba7:	e289      	s32i.n	a8, a2, 56
400d8ba9:	3289      	s32i.n	a8, a2, 12
400d8bab:	44c2a2        	addi	a10, a2, 68
400d8bae:	0000a5        	call8	400d8bb8 <nvs::HashList::clear()>
400d8bb1:	020c      	movi.n	a2, 0
400d8bb3:	f01d      	retw.n
400d8bb5:	000000        	ill

400d8bb8 <nvs::HashList::clear()>:
400d8bb8:	004136        	entry	a1, 32
400d8bbb:	0238      	l32i.n	a3, a2, 0
400d8bbd:	03ad      	mov.n	a10, a3
400d8bbf:	13bc      	beqz.n	a3, 400d8bf4 <nvs::HashList::clear()+0x3c>
400d8bc1:	1388      	l32i.n	a8, a3, 4
400d8bc3:	083d      	mov.n	a3, a8
400d8bc5:	0a98      	l32i.n	a9, a10, 0
400d8bc7:	398c      	beqz.n	a9, 400d8bce <nvs::HashList::clear()+0x16>
400d8bc9:	1989      	s32i.n	a8, a9, 4
400d8bcb:	000046        	j	400d8bd0 <nvs::HashList::clear()+0x18>
400d8bce:	0289      	s32i.n	a8, a2, 0
400d8bd0:	688c      	beqz.n	a8, 400d8bda <nvs::HashList::clear()+0x22>
400d8bd2:	0899      	s32i.n	a9, a8, 0
400d8bd4:	000146        	j	400d8bdd <nvs::HashList::clear()+0x25>
400d8bd7:	000000        	ill
400d8bda:	016292        	s32i	a9, a2, 4
400d8bdd:	f03d      	nop.n
400d8bdf:	f03d      	nop.n
400d8be1:	f03d      	nop.n
400d8be3:	f03d      	nop.n
400d8be5:	022282        	l32i	a8, a2, 8
400d8be8:	ffc882        	addi	a8, a8, -1
400d8beb:	2289      	s32i.n	a8, a2, 8
400d8bed:	1200e5        	call8	400eabfc <operator delete(void*)>
400d8bf0:	fff246        	j	400d8bbd <nvs::HashList::clear()+0x5>
400d8bf3:	f01d00        	subx8	a1, a13, a0
	...

400d8bf8 <nvs::HashList::~HashList()>:
400d8bf8:	004136        	entry	a1, 32
400d8bfb:	02ad      	mov.n	a10, a2
400d8bfd:	fffba5        	call8	400d8bb8 <nvs::HashList::clear()>
400d8c00:	f01d      	retw.n
	...

400d8c04 <nvs::HashList::insert(nvs::Item const&, unsigned int)>:
400d8c04:	004136        	entry	a1, 32
400d8c07:	03ad      	mov.n	a10, a3
400d8c09:	0077e5        	call8	400d9388 <nvs::Item::calculateCrc32WithoutValue() const>
400d8c0c:	0a5d      	mov.n	a5, a10
400d8c0e:	2238      	l32i.n	a3, a2, 8
400d8c10:	d39c      	beqz.n	a3, 400d8c31 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x2d>
400d8c12:	1288      	l32i.n	a8, a2, 4
400d8c14:	2838      	l32i.n	a3, a8, 8
400d8c16:	c91c      	movi.n	a9, 28
400d8c18:	153937        	bltu	a9, a3, 400d8c31 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x2d>
400d8c1b:	231b      	addi.n	a2, a3, 1
400d8c1d:	2829      	s32i.n	a2, a8, 8
400d8c1f:	115a80        	slli	a5, a10, 8
400d8c22:	744040        	extui	a4, a4, 0, 8
400d8c25:	205450        	or	a5, a4, a5
400d8c28:	a03380        	addx4	a3, a3, a8
400d8c2b:	3359      	s32i.n	a5, a3, 12
400d8c2d:	f01d      	retw.n
400d8c2f:	a20000        	muluh	a0, a0, a0
400d8c32:	e580a0        	extui	a8, a10, 16, 15
400d8c35:	ff          	.byte 0xff
400d8c36:	3aa011        	l32r	a1, 400a76b8 <_iram_end+0x19b64>
400d8c39:	ab2520        	movltz.s	f2, f5, a2
400d8c3c:	228213        	lsip	f1, a2, 136
400d8c3f:	088c01        	l32r	a0, 4009ae70 <_iram_end+0xd31c>
400d8c42:	1839      	s32i.n	a3, a8, 4
400d8c44:	f03d      	nop.n
400d8c46:	f03d      	nop.n
400d8c48:	f03d      	nop.n
400d8c4a:	f03d      	nop.n
400d8c4c:	1288      	l32i.n	a8, a2, 4
400d8c4e:	0389      	s32i.n	a8, a3, 0
400d8c50:	080c      	movi.n	a8, 0
400d8c52:	1389      	s32i.n	a8, a3, 4
400d8c54:	1239      	s32i.n	a3, a2, 4
400d8c56:	f03d      	nop.n
400d8c58:	f03d      	nop.n
400d8c5a:	f03d      	nop.n
400d8c5c:	f03d      	nop.n
400d8c5e:	0288      	l32i.n	a8, a2, 0
400d8c60:	08cc      	bnez.n	a8, 400d8c64 <nvs::HashList::insert(nvs::Item const&, unsigned int)+0x60>
400d8c62:	0239      	s32i.n	a3, a2, 0
400d8c64:	f03d      	nop.n
400d8c66:	f03d      	nop.n
400d8c68:	f03d      	nop.n
400d8c6a:	f03d      	nop.n
400d8c6c:	2288      	l32i.n	a8, a2, 8
400d8c6e:	881b      	addi.n	a8, a8, 1
400d8c70:	2289      	s32i.n	a8, a2, 8
400d8c72:	115580        	slli	a5, a5, 8
400d8c75:	744040        	extui	a4, a4, 0, 8
400d8c78:	205450        	or	a5, a4, a5
400d8c7b:	3359      	s32i.n	a5, a3, 12
400d8c7d:	f03d      	nop.n
400d8c7f:	f03d      	nop.n
400d8c81:	f03d      	nop.n
400d8c83:	f03d      	nop.n
400d8c85:	2328      	l32i.n	a2, a3, 8
400d8c87:	221b      	addi.n	a2, a2, 1
400d8c89:	2329      	s32i.n	a2, a3, 8
400d8c8b:	f01d      	retw.n
400d8c8d:	000000        	ill

400d8c90 <nvs::HashList::erase(unsigned int, bool)>:
400d8c90:	004136        	entry	a1, 32
400d8c93:	744040        	extui	a4, a4, 0, 8
400d8c96:	0268      	l32i.n	a6, a2, 0
400d8c98:	069d      	mov.n	a9, a6
400d8c9a:	07a616        	beqz	a6, 400d8d18 <nvs::HashList::erase(unsigned int, bool)+0x88>
400d8c9d:	080c      	movi.n	a8, 0
400d8c9f:	085d      	mov.n	a5, a8
400d8ca1:	08cd      	mov.n	a12, a8
400d8ca3:	29a8      	l32i.n	a10, a9, 8
400d8ca5:	33b8a7        	bgeu	a8, a10, 400d8cdc <nvs::HashList::erase(unsigned int, bool)+0x4c>
400d8ca8:	a0a890        	addx4	a10, a8, a9
400d8cab:	0c0aa2        	l8ui	a10, a10, 12
400d8cae:	0e9a37        	bne	a10, a3, 400d8cc0 <nvs::HashList::erase(unsigned int, bool)+0x30>
400d8cb1:	a05890        	addx4	a5, a8, a9
400d8cb4:	ffafa2        	movi	a10, -1
400d8cb7:	0c45a2        	s8i	a10, a5, 12
400d8cba:	0020c0        	memw
400d8cbd:	01a052        	movi	a5, 1
400d8cc0:	a0a890        	addx4	a10, a8, a9
400d8cc3:	f03d      	nop.n
400d8cc5:	0020f0        	nop
400d8cc8:	0c0ab2        	l8ui	a11, a10, 12
400d8ccb:	ffa0a2        	movi	a10, 255
400d8cce:	021ba7        	beq	a11, a10, 400d8cd4 <nvs::HashList::erase(unsigned int, bool)+0x44>
400d8cd1:	01a0c2        	movi	a12, 1
400d8cd4:	518c57        	bany	a12, a5, 400d8d29 <nvs::HashList::erase(unsigned int, bool)+0x99>
400d8cd7:	881b      	addi.n	a8, a8, 1
400d8cd9:	fff186        	j	400d8ca3 <nvs::HashList::erase(unsigned int, bool)+0x13>
400d8cdc:	0cfc      	bnez.n	a12, 400d8d10 <nvs::HashList::erase(unsigned int, bool)+0x80>
400d8cde:	06ad      	mov.n	a10, a6
400d8ce0:	1968      	l32i.n	a6, a9, 4
400d8ce2:	0a88      	l32i.n	a8, a10, 0
400d8ce4:	1a98      	l32i.n	a9, a10, 4
400d8ce6:	388c      	beqz.n	a8, 400d8ced <nvs::HashList::erase(unsigned int, bool)+0x5d>
400d8ce8:	1899      	s32i.n	a9, a8, 4
400d8cea:	000046        	j	400d8cef <nvs::HashList::erase(unsigned int, bool)+0x5f>
400d8ced:	0299      	s32i.n	a9, a2, 0
400d8cef:	398c      	beqz.n	a9, 400d8cf6 <nvs::HashList::erase(unsigned int, bool)+0x66>
400d8cf1:	0989      	s32i.n	a8, a9, 0
400d8cf3:	000086        	j	400d8cf9 <nvs::HashList::erase(unsigned int, bool)+0x69>
400d8cf6:	016282        	s32i	a8, a2, 4
400d8cf9:	f03d      	nop.n
400d8cfb:	f03d      	nop.n
400d8cfd:	f03d      	nop.n
400d8cff:	f03d      	nop.n
400d8d01:	022282        	l32i	a8, a2, 8
400d8d04:	ffc882        	addi	a8, a8, -1
400d8d07:	2289      	s32i.n	a8, a2, 8
400d8d09:	11ef25        	call8	400eabfc <operator delete(void*)>
400d8d0c:	000086        	j	400d8d12 <nvs::HashList::erase(unsigned int, bool)+0x82>
400d8d0f:	196800        	lsi	f0, a8, 100
400d8d12:	f82516        	beqz	a5, 400d8c98 <nvs::HashList::erase(unsigned int, bool)+0x8>
400d8d15:	f01d      	retw.n
400d8d17:	d48c00        	extui	a8, a0, 12, 14
400d8d1a:	ddd5d1        	l32r	a13, 400d0470 <_flash_cache_start+0x458>
400d8d1d:	ddd5c1        	l32r	a12, 400d0474 <_flash_cache_start+0x45c>
400d8d20:	61a0b2        	movi	a11, 97
400d8d23:	ddd5a1        	l32r	a10, 400d0478 <_flash_cache_start+0x460>
400d8d26:	021b25        	call8	400daed8 <__assert_func>
400d8d29:	f01d      	retw.n
	...

400d8d2c <nvs::HashList::find(unsigned int, nvs::Item const&)>:
400d8d2c:	004136        	entry	a1, 32
400d8d2f:	04ad      	mov.n	a10, a4
400d8d31:	006565        	call8	400d9388 <nvs::Item::calculateCrc32WithoutValue() const>
400d8d34:	ddd281        	l32r	a8, 400d047c <_flash_cache_start+0x464>
400d8d37:	10aa80        	and	a10, a10, a8
400d8d3a:	02b8      	l32i.n	a11, a2, 0
400d8d3c:	cbac      	beqz.n	a11, 400d8d6c <nvs::HashList::find(unsigned int, nvs::Item const&)+0x40>
400d8d3e:	080c      	movi.n	a8, 0
400d8d40:	2b98      	l32i.n	a9, a11, 8
400d8d42:	20b897        	bgeu	a8, a9, 400d8d66 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x3a>
400d8d45:	a098b0        	addx4	a9, a8, a11
400d8d48:	0c0992        	l8ui	a9, a9, 12
400d8d4b:	092d      	mov.n	a2, a9
400d8d4d:	103937        	bltu	a9, a3, 400d8d61 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x35>
400d8d50:	a0c8b0        	addx4	a12, a8, a11
400d8d53:	3cc8      	l32i.n	a12, a12, 12
400d8d55:	41c8c0        	srli	a12, a12, 8
400d8d58:	059ac7        	bne	a10, a12, 400d8d61 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x35>
400d8d5b:	ffa0c2        	movi	a12, 255
400d8d5e:	0c99c7        	bne	a9, a12, 400d8d6e <nvs::HashList::find(unsigned int, nvs::Item const&)+0x42>
400d8d61:	881b      	addi.n	a8, a8, 1
400d8d63:	fff646        	j	400d8d40 <nvs::HashList::find(unsigned int, nvs::Item const&)+0x14>
400d8d66:	1bb8      	l32i.n	a11, a11, 4
400d8d68:	fff406        	j	400d8d3c <nvs::HashList::find(unsigned int, nvs::Item const&)+0x10>
400d8d6b:	f27c00        	rems	a7, a12, a0
400d8d6e:	f01d      	retw.n

400d8d70 <nvs::PageManager::activatePage()>:
400d8d70:	004136        	entry	a1, 32
400d8d73:	052232        	l32i	a3, a2, 20
400d8d76:	092316        	beqz	a3, 400d8e0c <nvs::PageManager::activatePage()+0x9c>
400d8d79:	032232        	l32i	a3, a2, 12
400d8d7c:	032392        	l32i	a9, a3, 12
400d8d7f:	087c      	movi.n	a8, -16
400d8d81:	079987        	bne	a9, a8, 400d8d8c <nvs::PageManager::activatePage()+0x1c>
400d8d84:	03ad      	mov.n	a10, a3
400d8d86:	ffdfa5        	call8	400d8b80 <nvs::Page::erase()>
400d8d89:	084a56        	bnez	a10, 400d8e11 <nvs::PageManager::activatePage()+0xa1>
400d8d8c:	3298      	l32i.n	a9, a2, 12
400d8d8e:	0988      	l32i.n	a8, a9, 0
400d8d90:	1998      	l32i.n	a9, a9, 4
400d8d92:	388c      	beqz.n	a8, 400d8d99 <nvs::PageManager::activatePage()+0x29>
400d8d94:	1899      	s32i.n	a9, a8, 4
400d8d96:	000046        	j	400d8d9b <nvs::PageManager::activatePage()+0x2b>
400d8d99:	3299      	s32i.n	a9, a2, 12
400d8d9b:	398c      	beqz.n	a9, 400d8da2 <nvs::PageManager::activatePage()+0x32>
400d8d9d:	0989      	s32i.n	a8, a9, 0
400d8d9f:	000046        	j	400d8da4 <nvs::PageManager::activatePage()+0x34>
400d8da2:	4289      	s32i.n	a8, a2, 16
400d8da4:	f03d      	nop.n
400d8da6:	f03d      	nop.n
400d8da8:	f03d      	nop.n
400d8daa:	f03d      	nop.n
400d8dac:	5288      	l32i.n	a8, a2, 20
400d8dae:	880b      	addi.n	a8, a8, -1
400d8db0:	5289      	s32i.n	a8, a2, 20
400d8db2:	f03d      	nop.n
400d8db4:	f03d      	nop.n
400d8db6:	f03d      	nop.n
400d8db8:	f03d      	nop.n
400d8dba:	1288      	l32i.n	a8, a2, 4
400d8dbc:	088c      	beqz.n	a8, 400d8dc0 <nvs::PageManager::activatePage()+0x50>
400d8dbe:	1839      	s32i.n	a3, a8, 4
400d8dc0:	f03d      	nop.n
400d8dc2:	f03d      	nop.n
400d8dc4:	f03d      	nop.n
400d8dc6:	f03d      	nop.n
400d8dc8:	1288      	l32i.n	a8, a2, 4
400d8dca:	0389      	s32i.n	a8, a3, 0
400d8dcc:	080c      	movi.n	a8, 0
400d8dce:	1389      	s32i.n	a8, a3, 4
400d8dd0:	1239      	s32i.n	a3, a2, 4
400d8dd2:	f03d      	nop.n
400d8dd4:	f03d      	nop.n
400d8dd6:	f03d      	nop.n
400d8dd8:	f03d      	nop.n
400d8dda:	0288      	l32i.n	a8, a2, 0
400d8ddc:	08cc      	bnez.n	a8, 400d8de0 <nvs::PageManager::activatePage()+0x70>
400d8dde:	0239      	s32i.n	a3, a2, 0
400d8de0:	f03d      	nop.n
400d8de2:	f03d      	nop.n
400d8de4:	f03d      	nop.n
400d8de6:	f03d      	nop.n
400d8de8:	022282        	l32i	a8, a2, 8
400d8deb:	01c882        	addi	a8, a8, 1
400d8dee:	026282        	s32i	a8, a2, 8
400d8df1:	f03d      	nop.n
400d8df3:	f03d      	nop.n
400d8df5:	f03d      	nop.n
400d8df7:	f03d      	nop.n
400d8df9:	92b8      	l32i.n	a11, a2, 36
400d8dfb:	03ad      	mov.n	a10, a3
400d8dfd:	ffd6e5        	call8	400d8b6c <nvs::Page::setSeqNumber(unsigned int)>
400d8e00:	9238      	l32i.n	a3, a2, 36
400d8e02:	331b      	addi.n	a3, a3, 1
400d8e04:	9239      	s32i.n	a3, a2, 36
400d8e06:	020c      	movi.n	a2, 0
400d8e08:	f01d      	retw.n
400d8e0a:	210000        	srai	a0, a0, 0
400d8e0d:	dd9d      	lsi	f9, a13, 52
400d8e0f:	f01d      	retw.n
400d8e11:	0a2d      	mov.n	a2, a10
400d8e13:	f01d      	retw.n
400d8e15:	000000        	ill

400d8e18 <nvs::PageManager::load(unsigned int, unsigned int)>:
400d8e18:	00e136        	entry	a1, 112
400d8e1b:	7139      	s32i.n	a3, a1, 28
400d8e1d:	f03d      	nop.n
400d8e1f:	f03d      	nop.n
400d8e21:	f03d      	nop.n
400d8e23:	f03d      	nop.n
400d8e25:	dc9931        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d8e28:	0020c0        	memw
400d8e2b:	0338      	l32i.n	a3, a3, 0
400d8e2d:	0020c0        	memw
400d8e30:	136132        	s32i	a3, a1, 76
400d8e33:	f03d      	nop.n
400d8e35:	f03d      	nop.n
400d8e37:	f03d      	nop.n
400d8e39:	f03d      	nop.n
400d8e3b:	7138      	l32i.n	a3, a1, 28
400d8e3d:	7239      	s32i.n	a3, a2, 28
400d8e3f:	8249      	s32i.n	a4, a2, 32
400d8e41:	f03d      	nop.n
400d8e43:	f03d      	nop.n
400d8e45:	f03d      	nop.n
400d8e47:	f03d      	nop.n
400d8e49:	0238      	l32i.n	a3, a2, 0
400d8e4b:	53ac      	beqz.n	a3, 400d8e74 <nvs::PageManager::load(unsigned int, unsigned int)+0x5c>
400d8e4d:	0358      	l32i.n	a5, a3, 0
400d8e4f:	1338      	l32i.n	a3, a3, 4
400d8e51:	358c      	beqz.n	a5, 400d8e58 <nvs::PageManager::load(unsigned int, unsigned int)+0x40>
400d8e53:	1539      	s32i.n	a3, a5, 4
400d8e55:	000046        	j	400d8e5a <nvs::PageManager::load(unsigned int, unsigned int)+0x42>
400d8e58:	0239      	s32i.n	a3, a2, 0
400d8e5a:	338c      	beqz.n	a3, 400d8e61 <nvs::PageManager::load(unsigned int, unsigned int)+0x49>
400d8e5c:	0359      	s32i.n	a5, a3, 0
400d8e5e:	000046        	j	400d8e63 <nvs::PageManager::load(unsigned int, unsigned int)+0x4b>
400d8e61:	1259      	s32i.n	a5, a2, 4
400d8e63:	f03d      	nop.n
400d8e65:	f03d      	nop.n
400d8e67:	f03d      	nop.n
400d8e69:	f03d      	nop.n
400d8e6b:	2238      	l32i.n	a3, a2, 8
400d8e6d:	330b      	addi.n	a3, a3, -1
400d8e6f:	2239      	s32i.n	a3, a2, 8
400d8e71:	fff306        	j	400d8e41 <nvs::PageManager::load(unsigned int, unsigned int)+0x29>
400d8e74:	3238      	l32i.n	a3, a2, 12
400d8e76:	63ac      	beqz.n	a3, 400d8ea0 <nvs::PageManager::load(unsigned int, unsigned int)+0x88>
400d8e78:	0358      	l32i.n	a5, a3, 0
400d8e7a:	1338      	l32i.n	a3, a3, 4
400d8e7c:	458c      	beqz.n	a5, 400d8e84 <nvs::PageManager::load(unsigned int, unsigned int)+0x6c>
400d8e7e:	1539      	s32i.n	a3, a5, 4
400d8e80:	000086        	j	400d8e86 <nvs::PageManager::load(unsigned int, unsigned int)+0x6e>
400d8e83:	323900        	orbc	b3, b9, b0
400d8e86:	338c      	beqz.n	a3, 400d8e8d <nvs::PageManager::load(unsigned int, unsigned int)+0x75>
400d8e88:	0359      	s32i.n	a5, a3, 0
400d8e8a:	000046        	j	400d8e8f <nvs::PageManager::load(unsigned int, unsigned int)+0x77>
400d8e8d:	4259      	s32i.n	a5, a2, 16
400d8e8f:	f03d      	nop.n
400d8e91:	f03d      	nop.n
400d8e93:	f03d      	nop.n
400d8e95:	f03d      	nop.n
400d8e97:	5238      	l32i.n	a3, a2, 20
400d8e99:	330b      	addi.n	a3, a3, -1
400d8e9b:	5239      	s32i.n	a3, a2, 20
400d8e9d:	fff4c6        	j	400d8e74 <nvs::PageManager::load(unsigned int, unsigned int)+0x5c>
400d8ea0:	dd7a31        	l32r	a3, 400d0488 <_flash_cache_start+0x470>
400d8ea3:	0b3347        	bltu	a3, a4, 400d8eb2 <nvs::PageManager::load(unsigned int, unsigned int)+0x9a>
400d8ea6:	a03440        	addx4	a3, a4, a4
400d8ea9:	11a3c0        	slli	a10, a3, 4
400d8eac:	aa4b      	addi.n	a10, a10, 4
400d8eae:	000086        	j	400d8eb4 <nvs::PageManager::load(unsigned int, unsigned int)+0x9c>
400d8eb1:	fa7c00        	mov.s	f7, f12
400d8eb4:	201110        	or	a1, a1, a1
400d8eb7:	11d565        	call8	400eac0c <operator new[](unsigned int)>
400d8eba:	0a6d      	mov.n	a6, a10
400d8ebc:	0a49      	s32i.n	a4, a10, 0
400d8ebe:	7a4b      	addi.n	a7, a10, 4
400d8ec0:	540b      	addi.n	a5, a4, -1
400d8ec2:	073d      	mov.n	a3, a7
400d8ec4:	300526        	beqi	a5, -1, 400d8ef8 <nvs::PageManager::load(unsigned int, unsigned int)+0xe0>
400d8ec7:	080c      	movi.n	a8, 0
400d8ec9:	0389      	s32i.n	a8, a3, 0
400d8ecb:	1389      	s32i.n	a8, a3, 4
400d8ecd:	2389      	s32i.n	a8, a3, 8
400d8ecf:	3389      	s32i.n	a8, a3, 12
400d8ed1:	f97c      	movi.n	a9, -1
400d8ed3:	4399      	s32i.n	a9, a3, 16
400d8ed5:	ea7c      	movi.n	a10, -2
400d8ed7:	1443a2        	s8i	a10, a3, 20
400d8eda:	e399      	s32i.n	a9, a3, 56
400d8edc:	f399      	s32i.n	a9, a3, 60
400d8ede:	205382        	s16i	a8, a3, 64
400d8ee1:	215382        	s16i	a8, a3, 66
400d8ee4:	0020c0        	memw
400d8ee7:	44c3a2        	addi	a10, a3, 68
400d8eea:	201110        	or	a1, a1, a1
400d8eed:	137ee5        	call8	400ec6dc <nvs::HashList::HashList()>
400d8ef0:	50c332        	addi	a3, a3, 80
400d8ef3:	550b      	addi.n	a5, a5, -1
400d8ef5:	fff2c6        	j	400d8ec4 <nvs::PageManager::load(unsigned int, unsigned int)+0xac>
400d8ef8:	6258      	l32i.n	a5, a2, 24
400d8efa:	6279      	s32i.n	a7, a2, 24
400d8efc:	15bc      	beqz.n	a5, 400d8f31 <nvs::PageManager::load(unsigned int, unsigned int)+0x119>
400d8efe:	f5ac      	beqz.n	a5, 400d8f31 <nvs::PageManager::load(unsigned int, unsigned int)+0x119>
400d8f00:	fcc532        	addi	a3, a5, -4
400d8f03:	f03d      	nop.n
400d8f05:	f03d      	nop.n
400d8f07:	f03d      	nop.n
400d8f09:	0368      	l32i.n	a6, a3, 0
400d8f0b:	a06660        	addx4	a6, a6, a6
400d8f0e:	1136c0        	slli	a3, a6, 4
400d8f11:	036d      	mov.n	a6, a3
400d8f13:	353a      	add.n	a3, a5, a3
400d8f15:	0f1537        	beq	a5, a3, 400d8f28 <nvs::PageManager::load(unsigned int, unsigned int)+0x110>
400d8f18:	b0c332        	addi	a3, a3, -80
400d8f1b:	44c3a2        	addi	a10, a3, 68
400d8f1e:	201110        	or	a1, a1, a1
400d8f21:	ffcd65        	call8	400d8bf8 <nvs::HashList::~HashList()>
400d8f24:	fffb46        	j	400d8f15 <nvs::PageManager::load(unsigned int, unsigned int)+0xfd>
400d8f27:	c5a200        	extui	a10, a0, 18, 13
400d8f2a:	10fc      	bnez.n	a0, 400d8f5f <nvs::PageManager::load(unsigned int, unsigned int)+0x147>
400d8f2c:	a52011        	l32r	a1, 400c23ac <_rtc_text_end+0x23ac>
400d8f2f:	0c1205        	call0	400e5050 <_vfprintf_r+0x2d08>
400d8f32:	354705        	call0	4010e3a4 <_etext+0x21ac7>
400d8f35:	600602        	l8ui	a0, a6, 96
400d8f38:	62a800        	lsi	f0, a8, 0x188
400d8f3b:	a03550        	addx4	a3, a5, a5
400d8f3e:	1163c0        	slli	a6, a3, 4
400d8f41:	7138      	l32i.n	a3, a1, 28
400d8f43:	b53a      	add.n	a11, a5, a3
400d8f45:	aa6a      	add.n	a10, a10, a6
400d8f47:	201110        	or	a1, a1, a1
400d8f4a:	ffabe5        	call8	400d8a08 <nvs::Page::load(unsigned int)>
400d8f4d:	3a8c      	beqz.n	a10, 400d8f54 <nvs::PageManager::load(unsigned int, unsigned int)+0x13c>
400d8f4f:	0a2d      	mov.n	a2, a10
400d8f51:	00ed86        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d8f54:	62a8      	l32i.n	a10, a2, 24
400d8f56:	24c1b2        	addi	a11, a1, 36
400d8f59:	aa6a      	add.n	a10, a10, a6
400d8f5b:	201110        	or	a1, a1, a1
400d8f5e:	ffbe25        	call8	400d8b40 <nvs::Page::getSeqNumber(unsigned int&) const>
400d8f61:	9abc      	beqz.n	a10, 400d8f9e <nvs::PageManager::load(unsigned int, unsigned int)+0x186>
400d8f63:	6238      	l32i.n	a3, a2, 24
400d8f65:	636a      	add.n	a6, a3, a6
400d8f67:	4238      	l32i.n	a3, a2, 16
400d8f69:	038c      	beqz.n	a3, 400d8f6d <nvs::PageManager::load(unsigned int, unsigned int)+0x155>
400d8f6b:	1369      	s32i.n	a6, a3, 4
400d8f6d:	f03d      	nop.n
400d8f6f:	f03d      	nop.n
400d8f71:	f03d      	nop.n
400d8f73:	f03d      	nop.n
400d8f75:	4238      	l32i.n	a3, a2, 16
400d8f77:	0639      	s32i.n	a3, a6, 0
400d8f79:	030c      	movi.n	a3, 0
400d8f7b:	1639      	s32i.n	a3, a6, 4
400d8f7d:	4269      	s32i.n	a6, a2, 16
400d8f7f:	f03d      	nop.n
400d8f81:	f03d      	nop.n
400d8f83:	f03d      	nop.n
400d8f85:	f03d      	nop.n
400d8f87:	3238      	l32i.n	a3, a2, 12
400d8f89:	03cc      	bnez.n	a3, 400d8f8d <nvs::PageManager::load(unsigned int, unsigned int)+0x175>
400d8f8b:	3269      	s32i.n	a6, a2, 12
400d8f8d:	f03d      	nop.n
400d8f8f:	f03d      	nop.n
400d8f91:	f03d      	nop.n
400d8f93:	f03d      	nop.n
400d8f95:	5238      	l32i.n	a3, a2, 20
400d8f97:	331b      	addi.n	a3, a3, 1
400d8f99:	5239      	s32i.n	a3, a2, 20
400d8f9b:	004546        	j	400d90b4 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d8f9e:	0238      	l32i.n	a3, a2, 0
400d8fa0:	070c      	movi.n	a7, 0
400d8fa2:	9188      	l32i.n	a8, a1, 36
400d8fa4:	6189      	s32i.n	a8, a1, 24
400d8fa6:	271377        	beq	a3, a7, 400d8fd1 <nvs::PageManager::load(unsigned int, unsigned int)+0x1b9>
400d8fa9:	28c1b2        	addi	a11, a1, 40
400d8fac:	03ad      	mov.n	a10, a3
400d8fae:	201110        	or	a1, a1, a1
400d8fb1:	ffb8e5        	call8	400d8b40 <nvs::Page::getSeqNumber(unsigned int&) const>
400d8fb4:	aacc      	bnez.n	a10, 400d8fc2 <nvs::PageManager::load(unsigned int, unsigned int)+0x1aa>
400d8fb6:	a188      	l32i.n	a8, a1, 40
400d8fb8:	6198      	l32i.n	a9, a1, 24
400d8fba:	0a3987        	bltu	a9, a8, 400d8fc8 <nvs::PageManager::load(unsigned int, unsigned int)+0x1b0>
400d8fbd:	080c      	movi.n	a8, 0
400d8fbf:	0001c6        	j	400d8fca <nvs::PageManager::load(unsigned int, unsigned int)+0x1b2>
400d8fc2:	080c      	movi.n	a8, 0
400d8fc4:	000086        	j	400d8fca <nvs::PageManager::load(unsigned int, unsigned int)+0x1b2>
400d8fc7:	180c00        	lsxp	f0, a12, a0
400d8fca:	88cc      	bnez.n	a8, 400d8fd6 <nvs::PageManager::load(unsigned int, unsigned int)+0x1be>
400d8fcc:	180c      	movi.n	a8, 1
400d8fce:	000186        	j	400d8fd8 <nvs::PageManager::load(unsigned int, unsigned int)+0x1c0>
400d8fd1:	080c      	movi.n	a8, 0
400d8fd3:	000046        	j	400d8fd8 <nvs::PageManager::load(unsigned int, unsigned int)+0x1c0>
400d8fd6:	080c      	movi.n	a8, 0
400d8fd8:	488c      	beqz.n	a8, 400d8fe0 <nvs::PageManager::load(unsigned int, unsigned int)+0x1c8>
400d8fda:	1338      	l32i.n	a3, a3, 4
400d8fdc:	fff186        	j	400d8fa6 <nvs::PageManager::load(unsigned int, unsigned int)+0x18e>
400d8fdf:	93fc00        	movnez	a15, a12, a0
400d8fe2:	6238      	l32i.n	a3, a2, 24
400d8fe4:	636a      	add.n	a6, a3, a6
400d8fe6:	1238      	l32i.n	a3, a2, 4
400d8fe8:	038c      	beqz.n	a3, 400d8fec <nvs::PageManager::load(unsigned int, unsigned int)+0x1d4>
400d8fea:	1369      	s32i.n	a6, a3, 4
400d8fec:	f03d      	nop.n
400d8fee:	f03d      	nop.n
400d8ff0:	f03d      	nop.n
400d8ff2:	f03d      	nop.n
400d8ff4:	1238      	l32i.n	a3, a2, 4
400d8ff6:	0639      	s32i.n	a3, a6, 0
400d8ff8:	030c      	movi.n	a3, 0
400d8ffa:	1639      	s32i.n	a3, a6, 4
400d8ffc:	1269      	s32i.n	a6, a2, 4
400d8ffe:	f03d      	nop.n
400d9000:	f03d      	nop.n
400d9002:	f03d      	nop.n
400d9004:	f03d      	nop.n
400d9006:	0238      	l32i.n	a3, a2, 0
400d9008:	03cc      	bnez.n	a3, 400d900c <nvs::PageManager::load(unsigned int, unsigned int)+0x1f4>
400d900a:	0269      	s32i.n	a6, a2, 0
400d900c:	f03d      	nop.n
400d900e:	f03d      	nop.n
400d9010:	f03d      	nop.n
400d9012:	f03d      	nop.n
400d9014:	2238      	l32i.n	a3, a2, 8
400d9016:	331b      	addi.n	a3, a3, 1
400d9018:	2239      	s32i.n	a3, a2, 8
400d901a:	002586        	j	400d90b4 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d901d:	6278      	l32i.n	a7, a2, 24
400d901f:	676a      	add.n	a6, a7, a6
400d9021:	037d      	mov.n	a7, a3
400d9023:	63fc      	bnez.n	a3, 400d905d <nvs::PageManager::load(unsigned int, unsigned int)+0x245>
400d9025:	1238      	l32i.n	a3, a2, 4
400d9027:	138c      	beqz.n	a3, 400d902c <nvs::PageManager::load(unsigned int, unsigned int)+0x214>
400d9029:	016362        	s32i	a6, a3, 4
400d902c:	f03d      	nop.n
400d902e:	f03d      	nop.n
400d9030:	f03d      	nop.n
400d9032:	f03d      	nop.n
400d9034:	1238      	l32i.n	a3, a2, 4
400d9036:	0639      	s32i.n	a3, a6, 0
400d9038:	030c      	movi.n	a3, 0
400d903a:	1639      	s32i.n	a3, a6, 4
400d903c:	1269      	s32i.n	a6, a2, 4
400d903e:	f03d      	nop.n
400d9040:	f03d      	nop.n
400d9042:	f03d      	nop.n
400d9044:	f03d      	nop.n
400d9046:	0238      	l32i.n	a3, a2, 0
400d9048:	03cc      	bnez.n	a3, 400d904c <nvs::PageManager::load(unsigned int, unsigned int)+0x234>
400d904a:	0269      	s32i.n	a6, a2, 0
400d904c:	f03d      	nop.n
400d904e:	f03d      	nop.n
400d9050:	f03d      	nop.n
400d9052:	f03d      	nop.n
400d9054:	2238      	l32i.n	a3, a2, 8
400d9056:	331b      	addi.n	a3, a3, 1
400d9058:	2239      	s32i.n	a3, a2, 8
400d905a:	001586        	j	400d90b4 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d905d:	0338      	l32i.n	a3, a3, 0
400d905f:	b3fc      	bnez.n	a3, 400d909e <nvs::PageManager::load(unsigned int, unsigned int)+0x286>
400d9061:	0639      	s32i.n	a3, a6, 0
400d9063:	f03d      	nop.n
400d9065:	f03d      	nop.n
400d9067:	f03d      	nop.n
400d9069:	f03d      	nop.n
400d906b:	0238      	l32i.n	a3, a2, 0
400d906d:	1639      	s32i.n	a3, a6, 4
400d906f:	f03d      	nop.n
400d9071:	f03d      	nop.n
400d9073:	f03d      	nop.n
400d9075:	f03d      	nop.n
400d9077:	0238      	l32i.n	a3, a2, 0
400d9079:	038c      	beqz.n	a3, 400d907d <nvs::PageManager::load(unsigned int, unsigned int)+0x265>
400d907b:	0369      	s32i.n	a6, a3, 0
400d907d:	0269      	s32i.n	a6, a2, 0
400d907f:	f03d      	nop.n
400d9081:	f03d      	nop.n
400d9083:	f03d      	nop.n
400d9085:	f03d      	nop.n
400d9087:	1238      	l32i.n	a3, a2, 4
400d9089:	03cc      	bnez.n	a3, 400d908d <nvs::PageManager::load(unsigned int, unsigned int)+0x275>
400d908b:	1269      	s32i.n	a6, a2, 4
400d908d:	f03d      	nop.n
400d908f:	f03d      	nop.n
400d9091:	f03d      	nop.n
400d9093:	f03d      	nop.n
400d9095:	2238      	l32i.n	a3, a2, 8
400d9097:	331b      	addi.n	a3, a3, 1
400d9099:	2239      	s32i.n	a3, a2, 8
400d909b:	000546        	j	400d90b4 <nvs::PageManager::load(unsigned int, unsigned int)+0x29c>
400d909e:	1369      	s32i.n	a6, a3, 4
400d90a0:	0769      	s32i.n	a6, a7, 0
400d90a2:	1679      	s32i.n	a7, a6, 4
400d90a4:	0639      	s32i.n	a3, a6, 0
400d90a6:	f03d      	nop.n
400d90a8:	f03d      	nop.n
400d90aa:	f03d      	nop.n
400d90ac:	f03d      	nop.n
400d90ae:	2238      	l32i.n	a3, a2, 8
400d90b0:	331b      	addi.n	a3, a3, 1
400d90b2:	2239      	s32i.n	a3, a2, 8
400d90b4:	551b      	addi.n	a5, a5, 1
400d90b6:	ff9e46        	j	400d8f33 <nvs::PageManager::load(unsigned int, unsigned int)+0x11b>
400d90b9:	223800        	orb	b3, b8, b0
400d90bc:	d3cc      	bnez.n	a3, 400d90cd <nvs::PageManager::load(unsigned int, unsigned int)+0x2b5>
400d90be:	9239      	s32i.n	a3, a2, 36
400d90c0:	02ad      	mov.n	a10, a2
400d90c2:	201110        	or	a1, a1, a1
400d90c5:	ffcaa5        	call8	400d8d70 <nvs::PageManager::activatePage()>
400d90c8:	0a2d      	mov.n	a2, a10
400d90ca:	008f46        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d90cd:	28c1b2        	addi	a11, a1, 40
400d90d0:	0122a2        	l32i	a10, a2, 4
400d90d3:	201110        	or	a1, a1, a1
400d90d6:	ffa6a5        	call8	400d8b40 <nvs::Page::getSeqNumber(unsigned int&) const>
400d90d9:	0a9c      	beqz.n	a10, 400d90ed <nvs::PageManager::load(unsigned int, unsigned int)+0x2d5>
400d90db:	dcece1        	l32r	a14, 400d048c <_flash_cache_start+0x474>
400d90de:	dcecd1        	l32r	a13, 400d0490 <_flash_cache_start+0x478>
400d90e1:	34a0c2        	movi	a12, 52
400d90e4:	dcecb1        	l32r	a11, 400d0494 <_flash_cache_start+0x47c>
400d90e7:	201110        	or	a1, a1, a1
400d90ea:	b255a5        	call8	4008b644 <_esp_error_check_failed>
400d90ed:	a138      	l32i.n	a3, a1, 40
400d90ef:	331b      	addi.n	a3, a3, 1
400d90f1:	9239      	s32i.n	a3, a2, 36
400d90f3:	f03d      	nop.n
400d90f5:	f03d      	nop.n
400d90f7:	f03d      	nop.n
400d90f9:	f03d      	nop.n
400d90fb:	1268      	l32i.n	a6, a2, 4
400d90fd:	030c      	movi.n	a3, 0
400d90ff:	a139      	s32i.n	a3, a1, 40
400d9101:	f37c      	movi.n	a3, -1
400d9103:	ffa0b2        	movi	a11, 255
400d9106:	11b9      	s32i.n	a11, a1, 4
400d9108:	01b9      	s32i.n	a11, a1, 0
400d910a:	2cc1f2        	addi	a15, a1, 44
400d910d:	28c1e2        	addi	a14, a1, 40
400d9110:	0d0c      	movi.n	a13, 0
400d9112:	0bcd      	mov.n	a12, a11
400d9114:	06ad      	mov.n	a10, a6
400d9116:	201110        	or	a1, a1, a1
400d9119:	ff1265        	call8	400d8240 <nvs::Page::findItem(unsigned char, nvs::ItemType, char const*, unsigned int&, nvs::Item&, unsigned char, nvs::VerOffset)>
400d911c:	cacc      	bnez.n	a10, 400d912c <nvs::PageManager::load(unsigned int, unsigned int)+0x314>
400d911e:	2e0142        	l8ui	a4, a1, 46
400d9121:	a138      	l32i.n	a3, a1, 40
400d9123:	343a      	add.n	a3, a4, a3
400d9125:	a139      	s32i.n	a3, a1, 40
400d9127:	fff606        	j	400d9103 <nvs::PageManager::load(unsigned int, unsigned int)+0x2eb>
400d912a:	660000        	lsi	f0, a0, 0x198
400d912d:	c60203        	lsi	f0, a2, 0x318
400d9130:	380022        	l8ui	a2, a0, 56
400d9133:	03ad02        	movi	a0, 0xfffffd03
400d9136:	321367        	beq	a3, a6, 400d916c <nvs::PageManager::load(unsigned int, unsigned int)+0x354>
400d9139:	3358      	l32i.n	a5, a3, 12
400d913b:	847c      	movi.n	a4, -8
400d913d:	1b1547        	beq	a5, a4, 400d915c <nvs::PageManager::load(unsigned int, unsigned int)+0x344>
400d9140:	ffa0f2        	movi	a15, 255
400d9143:	2f01e2        	l8ui	a14, a1, 47
400d9146:	34c1d2        	addi	a13, a1, 52
400d9149:	2d01c2        	l8ui	a12, a1, 45
400d914c:	2c01b2        	l8ui	a11, a1, 44
400d914f:	201110        	or	a1, a1, a1
400d9152:	ff3c25        	call8	400d8514 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d9155:	8acc      	bnez.n	a10, 400d9161 <nvs::PageManager::load(unsigned int, unsigned int)+0x349>
400d9157:	140c      	movi.n	a4, 1
400d9159:	000186        	j	400d9163 <nvs::PageManager::load(unsigned int, unsigned int)+0x34b>
400d915c:	040c      	movi.n	a4, 0
400d915e:	000046        	j	400d9163 <nvs::PageManager::load(unsigned int, unsigned int)+0x34b>
400d9161:	040c      	movi.n	a4, 0
400d9163:	54cc      	bnez.n	a4, 400d916c <nvs::PageManager::load(unsigned int, unsigned int)+0x354>
400d9165:	1338      	l32i.n	a3, a3, 4
400d9167:	fff246        	j	400d9134 <nvs::PageManager::load(unsigned int, unsigned int)+0x31c>
400d916a:	670000        	lsi	f0, a0, 0x19c
400d916d:	420c93        	lsi	f9, a12, 0x108
400d9170:	4c2d01        	l32r	a0, 400ac224 <_iram_end+0x1e6d0>
400d9173:	143783        	lsi	f8, a7, 80
400d9176:	0c0a      	add.n	a0, a12, a0
400d9178:	01c607        	bnall	a6, a0, 400d917d <nvs::PageManager::load(unsigned int, unsigned int)+0x365>
400d917b:	070c00        	lsi	f0, a12, 28
400d917e:	000086        	j	400d9184 <nvs::PageManager::load(unsigned int, unsigned int)+0x36c>
400d9181:	170c00        	lsi	f0, a12, 92
400d9184:	67bc      	beqz.n	a7, 400d91be <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d9186:	0238      	l32i.n	a3, a2, 0
400d9188:	03ad      	mov.n	a10, a3
400d918a:	301367        	beq	a3, a6, 400d91be <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d918d:	3358      	l32i.n	a5, a3, 12
400d918f:	847c      	movi.n	a4, -8
400d9191:	1a1547        	beq	a5, a4, 400d91af <nvs::PageManager::load(unsigned int, unsigned int)+0x397>
400d9194:	ffa0f2        	movi	a15, 255
400d9197:	2f01e2        	l8ui	a14, a1, 47
400d919a:	34c1d2        	addi	a13, a1, 52
400d919d:	1c4c      	movi.n	a12, 65
400d919f:	2c01b2        	l8ui	a11, a1, 44
400d91a2:	201110        	or	a1, a1, a1
400d91a5:	ff36e5        	call8	400d8514 <nvs::Page::eraseItem(unsigned char, nvs::ItemType, char const*, unsigned char, nvs::VerOffset)>
400d91a8:	8acc      	bnez.n	a10, 400d91b4 <nvs::PageManager::load(unsigned int, unsigned int)+0x39c>
400d91aa:	074d      	mov.n	a4, a7
400d91ac:	000186        	j	400d91b6 <nvs::PageManager::load(unsigned int, unsigned int)+0x39e>
400d91af:	040c      	movi.n	a4, 0
400d91b1:	000046        	j	400d91b6 <nvs::PageManager::load(unsigned int, unsigned int)+0x39e>
400d91b4:	040c      	movi.n	a4, 0
400d91b6:	44cc      	bnez.n	a4, 400d91be <nvs::PageManager::load(unsigned int, unsigned int)+0x3a6>
400d91b8:	1338      	l32i.n	a3, a3, 4
400d91ba:	fff286        	j	400d9188 <nvs::PageManager::load(unsigned int, unsigned int)+0x370>
400d91bd:	024800        	andb	b4, b8, b0
400d91c0:	043d      	mov.n	a3, a4
400d91c2:	123416        	beqz	a4, 400d92e9 <nvs::PageManager::load(unsigned int, unsigned int)+0x4d1>
400d91c5:	3458      	l32i.n	a5, a4, 12
400d91c7:	847c      	movi.n	a4, -8
400d91c9:	021547        	beq	a5, a4, 400d91cf <nvs::PageManager::load(unsigned int, unsigned int)+0x3b7>
400d91cc:	004506        	j	400d92e4 <nvs::PageManager::load(unsigned int, unsigned int)+0x4cc>
400d91cf:	1248      	l32i.n	a4, a2, 4
400d91d1:	3468      	l32i.n	a6, a4, 12
400d91d3:	e57c      	movi.n	a5, -2
400d91d5:	6b9657        	bne	a6, a5, 400d9244 <nvs::PageManager::load(unsigned int, unsigned int)+0x42c>
400d91d8:	04ad      	mov.n	a10, a4
400d91da:	201110        	or	a1, a1, a1
400d91dd:	ff9a25        	call8	400d8b80 <nvs::Page::erase()>
400d91e0:	110a56        	bnez	a10, 400d92f4 <nvs::PageManager::load(unsigned int, unsigned int)+0x4dc>
400d91e3:	0458      	l32i.n	a5, a4, 0
400d91e5:	1468      	l32i.n	a6, a4, 4
400d91e7:	358c      	beqz.n	a5, 400d91ee <nvs::PageManager::load(unsigned int, unsigned int)+0x3d6>
400d91e9:	1569      	s32i.n	a6, a5, 4
400d91eb:	000046        	j	400d91f0 <nvs::PageManager::load(unsigned int, unsigned int)+0x3d8>
400d91ee:	0269      	s32i.n	a6, a2, 0
400d91f0:	468c      	beqz.n	a6, 400d91f8 <nvs::PageManager::load(unsigned int, unsigned int)+0x3e0>
400d91f2:	0659      	s32i.n	a5, a6, 0
400d91f4:	000086        	j	400d91fa <nvs::PageManager::load(unsigned int, unsigned int)+0x3e2>
400d91f7:	125900        	andbc	b5, b9, b0
400d91fa:	f03d      	nop.n
400d91fc:	f03d      	nop.n
400d91fe:	f03d      	nop.n
400d9200:	f03d      	nop.n
400d9202:	2258      	l32i.n	a5, a2, 8
400d9204:	550b      	addi.n	a5, a5, -1
400d9206:	2259      	s32i.n	a5, a2, 8
400d9208:	f03d      	nop.n
400d920a:	f03d      	nop.n
400d920c:	f03d      	nop.n
400d920e:	f03d      	nop.n
400d9210:	4258      	l32i.n	a5, a2, 16
400d9212:	058c      	beqz.n	a5, 400d9216 <nvs::PageManager::load(unsigned int, unsigned int)+0x3fe>
400d9214:	1549      	s32i.n	a4, a5, 4
400d9216:	f03d      	nop.n
400d9218:	f03d      	nop.n
400d921a:	f03d      	nop.n
400d921c:	f03d      	nop.n
400d921e:	4258      	l32i.n	a5, a2, 16
400d9220:	0459      	s32i.n	a5, a4, 0
400d9222:	050c      	movi.n	a5, 0
400d9224:	1459      	s32i.n	a5, a4, 4
400d9226:	4249      	s32i.n	a4, a2, 16
400d9228:	f03d      	nop.n
400d922a:	f03d      	nop.n
400d922c:	f03d      	nop.n
400d922e:	f03d      	nop.n
400d9230:	3258      	l32i.n	a5, a2, 12
400d9232:	05cc      	bnez.n	a5, 400d9236 <nvs::PageManager::load(unsigned int, unsigned int)+0x41e>
400d9234:	3249      	s32i.n	a4, a2, 12
400d9236:	f03d      	nop.n
400d9238:	f03d      	nop.n
400d923a:	f03d      	nop.n
400d923c:	f03d      	nop.n
400d923e:	5248      	l32i.n	a4, a2, 20
400d9240:	441b      	addi.n	a4, a4, 1
400d9242:	5249      	s32i.n	a4, a2, 20
400d9244:	02ad      	mov.n	a10, a2
400d9246:	201110        	or	a1, a1, a1
400d9249:	ffb265        	call8	400d8d70 <nvs::PageManager::activatePage()>
400d924c:	0a9a56        	bnez	a10, 400d92f9 <nvs::PageManager::load(unsigned int, unsigned int)+0x4e1>
400d924f:	12b8      	l32i.n	a11, a2, 4
400d9251:	03ad      	mov.n	a10, a3
400d9253:	201110        	or	a1, a1, a1
400d9256:	feeca5        	call8	400d8120 <nvs::Page::copyItems(nvs::Page&)>
400d9259:	160c      	movi.n	a6, 1
400d925b:	040c      	movi.n	a4, 0
400d925d:	045d      	mov.n	a5, a4
400d925f:	9356a0        	movnez	a5, a6, a10
400d9262:	057d      	mov.n	a7, a5
400d9264:	dc8d51        	l32r	a5, 400d0498 <_flash_cache_start+0x480>
400d9267:	805a50        	add	a5, a10, a5
400d926a:	934650        	movnez	a4, a6, a5
400d926d:	020477        	bnone	a4, a7, 400d9273 <nvs::PageManager::load(unsigned int, unsigned int)+0x45b>
400d9270:	002286        	j	400d92fe <nvs::PageManager::load(unsigned int, unsigned int)+0x4e6>
400d9273:	20a330        	or	a10, a3, a3
400d9276:	201110        	or	a1, a1, a1
400d9279:	ff9065        	call8	400d8b80 <nvs::Page::erase()>
400d927c:	084a56        	bnez	a10, 400d9304 <nvs::PageManager::load(unsigned int, unsigned int)+0x4ec>
400d927f:	0348      	l32i.n	a4, a3, 0
400d9281:	1358      	l32i.n	a5, a3, 4
400d9283:	348c      	beqz.n	a4, 400d928a <nvs::PageManager::load(unsigned int, unsigned int)+0x472>
400d9285:	1459      	s32i.n	a5, a4, 4
400d9287:	000046        	j	400d928c <nvs::PageManager::load(unsigned int, unsigned int)+0x474>
400d928a:	0259      	s32i.n	a5, a2, 0
400d928c:	458c      	beqz.n	a5, 400d9294 <nvs::PageManager::load(unsigned int, unsigned int)+0x47c>
400d928e:	0549      	s32i.n	a4, a5, 0
400d9290:	000086        	j	400d9296 <nvs::PageManager::load(unsigned int, unsigned int)+0x47e>
400d9293:	124900        	andbc	b4, b9, b0
400d9296:	f03d      	nop.n
400d9298:	f03d      	nop.n
400d929a:	f03d      	nop.n
400d929c:	f03d      	nop.n
400d929e:	2248      	l32i.n	a4, a2, 8
400d92a0:	440b      	addi.n	a4, a4, -1
400d92a2:	2249      	s32i.n	a4, a2, 8
400d92a4:	f03d      	nop.n
400d92a6:	f03d      	nop.n
400d92a8:	f03d      	nop.n
400d92aa:	f03d      	nop.n
400d92ac:	4248      	l32i.n	a4, a2, 16
400d92ae:	048c      	beqz.n	a4, 400d92b2 <nvs::PageManager::load(unsigned int, unsigned int)+0x49a>
400d92b0:	1439      	s32i.n	a3, a4, 4
400d92b2:	f03d      	nop.n
400d92b4:	f03d      	nop.n
400d92b6:	f03d      	nop.n
400d92b8:	f03d      	nop.n
400d92ba:	4248      	l32i.n	a4, a2, 16
400d92bc:	0349      	s32i.n	a4, a3, 0
400d92be:	040c      	movi.n	a4, 0
400d92c0:	1349      	s32i.n	a4, a3, 4
400d92c2:	4239      	s32i.n	a3, a2, 16
400d92c4:	f03d      	nop.n
400d92c6:	f03d      	nop.n
400d92c8:	f03d      	nop.n
400d92ca:	f03d      	nop.n
400d92cc:	3248      	l32i.n	a4, a2, 12
400d92ce:	04cc      	bnez.n	a4, 400d92d2 <nvs::PageManager::load(unsigned int, unsigned int)+0x4ba>
400d92d0:	3239      	s32i.n	a3, a2, 12
400d92d2:	f03d      	nop.n
400d92d4:	f03d      	nop.n
400d92d6:	f03d      	nop.n
400d92d8:	f03d      	nop.n
400d92da:	5238      	l32i.n	a3, a2, 20
400d92dc:	331b      	addi.n	a3, a3, 1
400d92de:	5239      	s32i.n	a3, a2, 20
400d92e0:	000146        	j	400d92e9 <nvs::PageManager::load(unsigned int, unsigned int)+0x4d1>
400d92e3:	134800        	wsr.windowbase	a0
400d92e6:	ffb586        	j	400d91c0 <nvs::PageManager::load(unsigned int, unsigned int)+0x3a8>
400d92e9:	5228      	l32i.n	a2, a2, 20
400d92eb:	a2dc      	bnez.n	a2, 400d9309 <nvs::PageManager::load(unsigned int, unsigned int)+0x4f1>
400d92ed:	dc6521        	l32r	a2, 400d0484 <_flash_cache_start+0x46c>
400d92f0:	0005c6        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d92f3:	0a2d00        	add.s	f2, f13, f0
400d92f6:	000446        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d92f9:	0a2d      	mov.n	a2, a10
400d92fb:	000306        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d92fe:	0a2d      	mov.n	a2, a10
400d9300:	0001c6        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d9303:	0a2d00        	add.s	f2, f13, f0
400d9306:	000046        	j	400d930b <nvs::PageManager::load(unsigned int, unsigned int)+0x4f3>
400d9309:	020c      	movi.n	a2, 0
400d930b:	0020c0        	memw
400d930e:	132142        	l32i	a4, a1, 76
400d9311:	db5e31        	l32r	a3, 400d008c <_flash_cache_start+0x74>
400d9314:	0020c0        	memw
400d9317:	0338      	l32i.n	a3, a3, 0
400d9319:	3d1437        	beq	a4, a3, 400d935a <nvs::PageManager::load(unsigned int, unsigned int)+0x542>
400d931c:	000d06        	j	400d9354 <nvs::PageManager::load(unsigned int, unsigned int)+0x53c>
400d931f:	9c0000        	lsi	f0, a0, 0x270
400d9322:	4450f7        	bbc	a0, a15, 400d936a <nvs::Item::calculateCrc32() const+0xe>
400d9325:	4440c0        	extui	a4, a12, 0, 5
400d9328:	34c0a0        	extui	a12, a10, 0, 4
400d932b:	c33211        	l32r	a1, 400c9ff4 <_rtc_text_end+0x9ff4>
400d932e:	373ab0        	lsi	f11, a10, 220
400d9331:	0f1377        	beq	a3, a7, 400d9344 <nvs::PageManager::load(unsigned int, unsigned int)+0x52c>
400d9334:	b0c332        	addi	a3, a3, -80
400d9337:	44c3a2        	addi	a10, a3, 68
400d933a:	201110        	or	a1, a1, a1
400d933d:	ff8ba5        	call8	400d8bf8 <nvs::HashList::~HashList()>
400d9340:	fffb46        	j	400d9331 <nvs::PageManager::load(unsigned int, unsigned int)+0x519>
400d9343:	06ad00        	lsi	f0, a13, 24
400d9346:	201110        	or	a1, a1, a1
400d9349:	11c3e5        	call8	400eaf88 <operator delete[](void*)>
400d934c:	02ad      	mov.n	a10, a2
400d934e:	201110        	or	a1, a1, a1
400d9351:	fb96e5        	call8	400d4cc0 <_Unwind_Resume>
400d9354:	201110        	or	a1, a1, a1
400d9357:	fd3625        	call8	400d66b8 <__stack_chk_fail>
400d935a:	f01d      	retw.n

400d935c <nvs::Item::calculateCrc32() const>:
400d935c:	004136        	entry	a1, 32
400d935f:	04a0c2        	movi	a12, 4
400d9362:	20b220        	or	a11, a2, a2
400d9365:	ffafa2        	movi	a10, -1
400d9368:	dc2481        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d936b:	0008e0        	callx8	a8
400d936e:	0c1c      	movi.n	a12, 16
400d9370:	08c2b2        	addi	a11, a2, 8
400d9373:	dc2181        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d9376:	0008e0        	callx8	a8
400d9379:	8c0c      	movi.n	a12, 8
400d937b:	18c2b2        	addi	a11, a2, 24
400d937e:	dc1e81        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d9381:	0008e0        	callx8	a8
400d9384:	0a2d      	mov.n	a2, a10
400d9386:	f01d      	retw.n

400d9388 <nvs::Item::calculateCrc32WithoutValue() const>:
400d9388:	004136        	entry	a1, 32
400d938b:	1c0c      	movi.n	a12, 1
400d938d:	20b220        	or	a11, a2, a2
400d9390:	fa7c      	movi.n	a10, -1
400d9392:	dc1981        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d9395:	0008e0        	callx8	a8
400d9398:	0c1c      	movi.n	a12, 16
400d939a:	b28b      	addi.n	a11, a2, 8
400d939c:	dc1781        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d939f:	0008e0        	callx8	a8
400d93a2:	1c0c      	movi.n	a12, 1
400d93a4:	b23b      	addi.n	a11, a2, 3
400d93a6:	dc1481        	l32r	a8, 400d03f8 <_flash_cache_start+0x3e0>
400d93a9:	0008e0        	callx8	a8
400d93ac:	0a2d      	mov.n	a2, a10
400d93ae:	f01d      	retw.n

400d93b0 <nvs::nvs_flash_write(unsigned int, void const*, unsigned int)>:
400d93b0:	004136        	entry	a1, 32
400d93b3:	04cd      	mov.n	a12, a4
400d93b5:	03bd      	mov.n	a11, a3
400d93b7:	02ad      	mov.n	a10, a2
400d93b9:	ad1f25        	call8	400865ac <spi_flash_write>
400d93bc:	0a2d      	mov.n	a2, a10
400d93be:	f01d      	retw.n

400d93c0 <nvs::nvs_flash_read(unsigned int, void*, unsigned int)>:
400d93c0:	004136        	entry	a1, 32
400d93c3:	04cd      	mov.n	a12, a4
400d93c5:	03bd      	mov.n	a11, a3
400d93c7:	02ad      	mov.n	a10, a2
400d93c9:	ad3f65        	call8	400867c0 <spi_flash_read>
400d93cc:	0a2d      	mov.n	a2, a10
400d93ce:	f01d      	retw.n

400d93d0 <uart_tx_char>:
400d93d0:	004136        	entry	a1, 32
400d93d3:	dc3281        	l32r	a8, 400d049c <_flash_cache_start+0x484>
400d93d6:	a02280        	addx4	a2, a2, a8
400d93d9:	0022a2        	l32i	a10, a2, 0
400d93dc:	0020c0        	memw
400d93df:	7a88      	l32i.n	a8, a10, 28
400d93e1:	758080        	extui	a8, a8, 16, 8
400d93e4:	7ea092        	movi	a9, 126
400d93e7:	f13987        	bltu	a9, a8, 400d93dc <uart_tx_char+0xc>
400d93ea:	743030        	extui	a3, a3, 0, 8
400d93ed:	0020c0        	memw
400d93f0:	004a32        	s8i	a3, a10, 0
400d93f3:	0020c0        	memw
400d93f6:	f01d      	retw.n

400d93f8 <uart_rx_char>:
400d93f8:	004136        	entry	a1, 32
400d93fb:	dc2881        	l32r	a8, 400d049c <_flash_cache_start+0x484>
400d93fe:	a02280        	addx4	a2, a2, a8
400d9401:	0228      	l32i.n	a2, a2, 0
400d9403:	0020c0        	memw
400d9406:	7288      	l32i.n	a8, a2, 28
400d9408:	748080        	extui	a8, a8, 0, 8
400d940b:	688c      	beqz.n	a8, 400d9415 <uart_rx_char+0x1d>
400d940d:	000222        	l8ui	a2, a2, 0
400d9410:	742020        	extui	a2, a2, 0, 8
400d9413:	f01d      	retw.n
400d9415:	f27c      	movi.n	a2, -1
400d9417:	f01d      	retw.n
400d9419:	000000        	ill

400d941c <uart_read_char>:
400d941c:	004136        	entry	a1, 32
400d941f:	02ad      	mov.n	a10, a2
400d9421:	dc1f91        	l32r	a9, 400d04a0 <_flash_cache_start+0x488>
400d9424:	a09290        	addx4	a9, a2, a9
400d9427:	0928      	l32i.n	a2, a9, 0
400d9429:	080226        	beqi	a2, -1, 400d9435 <uart_read_char+0x19>
400d942c:	098d      	mov.n	a8, a9
400d942e:	f97c      	movi.n	a9, -1
400d9430:	0899      	s32i.n	a9, a8, 0
400d9432:	f01d      	retw.n
400d9434:	1b2100        	un.s	b2, f1, f0
400d9437:	20dc      	bnez.n	a0, 400d944d <uart_end_select+0x9>
400d9439:	a02a      	add.n	a10, a0, a2
400d943b:	0228      	l32i.n	a2, a2, 0
400d943d:	0002e0        	callx8	a2
400d9440:	0a2d      	mov.n	a2, a10
400d9442:	f01d      	retw.n

400d9444 <uart_end_select>:
400d9444:	004136        	entry	a1, 32
400d9447:	101de5        	call8	400e9624 <uart_get_selectlock>
400d944a:	af6465        	call8	40088a90 <vTaskEnterCritical>
400d944d:	020c      	movi.n	a2, 0
400d944f:	000346        	j	400d9460 <uart_end_select+0x1c>
400d9452:	b20000        	mulsh	a0, a0, a0
400d9455:	2000a0        	or	a0, a0, a10
400d9458:	2520a2        	l32i	a10, a0, 148
400d945b:	101b      	addi.n	a1, a0, 1
400d945d:	01c222        	addi	a2, a2, 1
400d9460:	f032a6        	blti	a2, 3, 400d9454 <uart_end_select+0x10>
400d9463:	020c      	movi.n	a2, 0
400d9465:	dc1081        	l32r	a8, 400d04a8 <_flash_cache_start+0x490>
400d9468:	0829      	s32i.n	a2, a8, 0
400d946a:	f03d      	nop.n
400d946c:	f03d      	nop.n
400d946e:	f03d      	nop.n
400d9470:	f03d      	nop.n
400d9472:	dc0e81        	l32r	a8, 400d04ac <_flash_cache_start+0x494>
400d9475:	0829      	s32i.n	a2, a8, 0
400d9477:	f03d      	nop.n
400d9479:	f03d      	nop.n
400d947b:	f03d      	nop.n
400d947d:	f03d      	nop.n
400d947f:	dc0c81        	l32r	a8, 400d04b0 <_flash_cache_start+0x498>
400d9482:	0829      	s32i.n	a2, a8, 0
400d9484:	f03d      	nop.n
400d9486:	f03d      	nop.n
400d9488:	f03d      	nop.n
400d948a:	f03d      	nop.n
400d948c:	dc0a81        	l32r	a8, 400d04b4 <_flash_cache_start+0x49c>
400d948f:	0829      	s32i.n	a2, a8, 0
400d9491:	f03d      	nop.n
400d9493:	f03d      	nop.n
400d9495:	f03d      	nop.n
400d9497:	f03d      	nop.n
400d9499:	dc0721        	l32r	a2, 400d04b8 <_flash_cache_start+0x4a0>
400d949c:	02a8      	l32i.n	a10, a2, 0
400d949e:	ba8c      	beqz.n	a10, 400d94ad <uart_end_select+0x69>
400d94a0:	dafd81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d94a3:	0008e0        	callx8	a8
400d94a6:	080c      	movi.n	a8, 0
400d94a8:	dc0421        	l32r	a2, 400d04b8 <_flash_cache_start+0x4a0>
400d94ab:	0289      	s32i.n	a8, a2, 0
400d94ad:	f03d      	nop.n
400d94af:	f03d      	nop.n
400d94b1:	f03d      	nop.n
400d94b3:	f03d      	nop.n
400d94b5:	dc0121        	l32r	a2, 400d04bc <_flash_cache_start+0x4a4>
400d94b8:	02a8      	l32i.n	a10, a2, 0
400d94ba:	ba8c      	beqz.n	a10, 400d94c9 <uart_end_select+0x85>
400d94bc:	daf681        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d94bf:	0008e0        	callx8	a8
400d94c2:	080c      	movi.n	a8, 0
400d94c4:	dbfe21        	l32r	a2, 400d04bc <_flash_cache_start+0x4a4>
400d94c7:	0289      	s32i.n	a8, a2, 0
400d94c9:	f03d      	nop.n
400d94cb:	f03d      	nop.n
400d94cd:	f03d      	nop.n
400d94cf:	f03d      	nop.n
400d94d1:	dbfb21        	l32r	a2, 400d04c0 <_flash_cache_start+0x4a8>
400d94d4:	02a8      	l32i.n	a10, a2, 0
400d94d6:	ba8c      	beqz.n	a10, 400d94e5 <uart_end_select+0xa1>
400d94d8:	daef81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400d94db:	0008e0        	callx8	a8
400d94de:	080c      	movi.n	a8, 0
400d94e0:	dbf821        	l32r	a2, 400d04c0 <_flash_cache_start+0x4a8>
400d94e3:	0289      	s32i.n	a8, a2, 0
400d94e5:	1013e5        	call8	400e9624 <uart_get_selectlock>
400d94e8:	af6e65        	call8	40088bd0 <vTaskExitCritical>
400d94eb:	dbf6a1        	l32r	a10, 400d04c4 <_flash_cache_start+0x4ac>
400d94ee:	ab61a5        	call8	40084b08 <_lock_release>
400d94f1:	000090        	retw

400d94f4 <uart_start_select>:
400d94f4:	008136        	entry	a1, 64
400d94f7:	dbf3a1        	l32r	a10, 400d04c4 <_flash_cache_start+0x4ac>
400d94fa:	ab5ee5        	call8	40084ae8 <_lock_try_acquire>
400d94fd:	207aa0        	or	a7, a10, a10
400d9500:	1f4a56        	bnez	a10, 400d96f8 <uart_start_select+0x204>
400d9503:	03a082        	movi	a8, 3
400d9506:	432280        	min	a2, a2, a8
400d9509:	1011a5        	call8	400e9624 <uart_get_selectlock>
400d950c:	af5825        	call8	40088a90 <vTaskEnterCritical>
400d950f:	dbe781        	l32r	a8, 400d04ac <_flash_cache_start+0x494>
400d9512:	0888      	l32i.n	a8, a8, 0
400d9514:	88ec      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d9516:	dbe681        	l32r	a8, 400d04b0 <_flash_cache_start+0x498>
400d9519:	0888      	l32i.n	a8, a8, 0
400d951b:	18ec      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d951d:	dbe581        	l32r	a8, 400d04b4 <_flash_cache_start+0x49c>
400d9520:	0888      	l32i.n	a8, a8, 0
400d9522:	a8dc      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d9524:	dbe581        	l32r	a8, 400d04b8 <_flash_cache_start+0x4a0>
400d9527:	0888      	l32i.n	a8, a8, 0
400d9529:	38dc      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d952b:	dbe481        	l32r	a8, 400d04bc <_flash_cache_start+0x4a4>
400d952e:	0888      	l32i.n	a8, a8, 0
400d9530:	c8cc      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d9532:	dbe381        	l32r	a8, 400d04c0 <_flash_cache_start+0x4a8>
400d9535:	0888      	l32i.n	a8, a8, 0
400d9537:	58cc      	bnez.n	a8, 400d9540 <uart_start_select+0x4c>
400d9539:	dbdb81        	l32r	a8, 400d04a8 <_flash_cache_start+0x490>
400d953c:	0888      	l32i.n	a8, a8, 0
400d953e:	e88c      	beqz.n	a8, 400d9550 <uart_start_select+0x5c>
400d9540:	100e25        	call8	400e9624 <uart_get_selectlock>
400d9543:	af68e5        	call8	40088bd0 <vTaskExitCritical>
400d9546:	ffefe5        	call8	400d9444 <uart_end_select>
400d9549:	03a172        	movi	a7, 0x103
400d954c:	006ac6        	j	400d96fb <uart_start_select+0x207>
400d954f:	a0a200        	addx4	a10, a2, a0
400d9552:	8108      	l32i.n	a0, a1, 32
400d9554:	e0dae6        	bgei	a10, 64, 400d9538 <uart_start_select+0x44>
400d9557:	0008      	l32i.n	a0, a0, 0
400d9559:	dbd781        	l32r	a8, 400d04b8 <_flash_cache_start+0x4a0>
400d955c:	08a9      	s32i.n	a10, a8, 0
400d955e:	eacc      	bnez.n	a10, 400d9570 <uart_start_select+0x7c>
400d9560:	100c25        	call8	400e9624 <uart_get_selectlock>
400d9563:	af66e5        	call8	40088bd0 <vTaskExitCritical>
400d9566:	ffede5        	call8	400d9444 <uart_end_select>
400d9569:	01a172        	movi	a7, 0x101
400d956c:	0062c6        	j	400d96fb <uart_start_select+0x207>
400d956f:	a0a200        	addx4	a10, a2, a0
400d9572:	8108      	l32i.n	a0, a1, 32
400d9574:	de          	.byte 0xde
400d9575:	e0da      	add.n	a14, a0, a13
400d9577:	0008      	l32i.n	a0, a0, 0
400d9579:	dbd081        	l32r	a8, 400d04bc <_flash_cache_start+0x4a4>
400d957c:	08a9      	s32i.n	a10, a8, 0
400d957e:	eacc      	bnez.n	a10, 400d9590 <uart_start_select+0x9c>
400d9580:	100a25        	call8	400e9624 <uart_get_selectlock>
400d9583:	af64e5        	call8	40088bd0 <vTaskExitCritical>
400d9586:	ffebe5        	call8	400d9444 <uart_end_select>
400d9589:	01a172        	movi	a7, 0x101
400d958c:	005ac6        	j	400d96fb <uart_start_select+0x207>
400d958f:	a0a200        	addx4	a10, a2, a0
400d9592:	8108      	l32i.n	a0, a1, 32
400d9594:	e0dad6        	bgez	a10, 400d93a5 <nvs::Item::calculateCrc32WithoutValue() const+0x1d>
400d9597:	0008      	l32i.n	a0, a0, 0
400d9599:	dbc981        	l32r	a8, 400d04c0 <_flash_cache_start+0x4a8>
400d959c:	08a9      	s32i.n	a10, a8, 0
400d959e:	040a56        	bnez	a10, 400d95e2 <uart_start_select+0xee>
400d95a1:	100825        	call8	400e9624 <uart_get_selectlock>
400d95a4:	af62a5        	call8	40088bd0 <vTaskExitCritical>
400d95a7:	ffe9e5        	call8	400d9444 <uart_end_select>
400d95aa:	01a172        	movi	a7, 0x101
400d95ad:	005286        	j	400d96fb <uart_start_select+0x207>
400d95b0:	31a8      	l32i.n	a10, a1, 12
400d95b2:	4185a0        	srli	a8, a10, 5
400d95b5:	a09830        	addx4	a9, a8, a3
400d95b8:	09b8      	l32i.n	a11, a9, 0
400d95ba:	4490a0        	extui	a9, a10, 0, 5
400d95bd:	0fdb97        	bbs	a11, a9, 400d95d0 <uart_start_select+0xdc>
400d95c0:	a0b840        	addx4	a11, a8, a4
400d95c3:	0bb8      	l32i.n	a11, a11, 0
400d95c5:	07db97        	bbs	a11, a9, 400d95d0 <uart_start_select+0xdc>
400d95c8:	a08850        	addx4	a8, a8, a5
400d95cb:	0888      	l32i.n	a8, a8, 0
400d95cd:	055897        	bbc	a8, a9, 400d95d6 <uart_start_select+0xe2>
400d95d0:	dbbeb1        	l32r	a11, 400d04c8 <_flash_cache_start+0x4b0>
400d95d3:	1003a5        	call8	400e960c <uart_set_select_notif_callback>
400d95d6:	3188      	l32i.n	a8, a1, 12
400d95d8:	881b      	addi.n	a8, a8, 1
400d95da:	3189      	s32i.n	a8, a1, 12
400d95dc:	000186        	j	400d95e6 <uart_start_select+0xf2>
400d95df:	000000        	ill
400d95e2:	090c      	movi.n	a9, 0
400d95e4:	3199      	s32i.n	a9, a1, 12
400d95e6:	f03d      	nop.n
400d95e8:	f03d      	nop.n
400d95ea:	f03d      	nop.n
400d95ec:	f03d      	nop.n
400d95ee:	31c8      	l32i.n	a12, a1, 12
400d95f0:	bc2c27        	blt	a12, a2, 400d95b0 <uart_start_select+0xbc>
400d95f3:	dbad81        	l32r	a8, 400d04a8 <_flash_cache_start+0x490>
400d95f6:	0869      	s32i.n	a6, a8, 0
400d95f8:	f03d      	nop.n
400d95fa:	f03d      	nop.n
400d95fc:	f03d      	nop.n
400d95fe:	f03d      	nop.n
400d9600:	dbab61        	l32r	a6, 400d04ac <_flash_cache_start+0x494>
400d9603:	0639      	s32i.n	a3, a6, 0
400d9605:	f03d      	nop.n
400d9607:	f03d      	nop.n
400d9609:	f03d      	nop.n
400d960b:	f03d      	nop.n
400d960d:	dba861        	l32r	a6, 400d04b0 <_flash_cache_start+0x498>
400d9610:	0649      	s32i.n	a4, a6, 0
400d9612:	f03d      	nop.n
400d9614:	f03d      	nop.n
400d9616:	f03d      	nop.n
400d9618:	f03d      	nop.n
400d961a:	dba661        	l32r	a6, 400d04b4 <_flash_cache_start+0x49c>
400d961d:	0659      	s32i.n	a5, a6, 0
400d961f:	f03d      	nop.n
400d9621:	f03d      	nop.n
400d9623:	f03d      	nop.n
400d9625:	f03d      	nop.n
400d9627:	dba461        	l32r	a6, 400d04b8 <_flash_cache_start+0x4a0>
400d962a:	0668      	l32i.n	a6, a6, 0
400d962c:	0398      	l32i.n	a9, a3, 0
400d962e:	1388      	l32i.n	a8, a3, 4
400d9630:	0699      	s32i.n	a9, a6, 0
400d9632:	1689      	s32i.n	a8, a6, 4
400d9634:	f03d      	nop.n
400d9636:	f03d      	nop.n
400d9638:	f03d      	nop.n
400d963a:	f03d      	nop.n
400d963c:	dba061        	l32r	a6, 400d04bc <_flash_cache_start+0x4a4>
400d963f:	0668      	l32i.n	a6, a6, 0
400d9641:	0498      	l32i.n	a9, a4, 0
400d9643:	1488      	l32i.n	a8, a4, 4
400d9645:	0699      	s32i.n	a9, a6, 0
400d9647:	1689      	s32i.n	a8, a6, 4
400d9649:	f03d      	nop.n
400d964b:	f03d      	nop.n
400d964d:	f03d      	nop.n
400d964f:	f03d      	nop.n
400d9651:	db9b61        	l32r	a6, 400d04c0 <_flash_cache_start+0x4a8>
400d9654:	0668      	l32i.n	a6, a6, 0
400d9656:	0598      	l32i.n	a9, a5, 0
400d9658:	1588      	l32i.n	a8, a5, 4
400d965a:	0699      	s32i.n	a9, a6, 0
400d965c:	1689      	s32i.n	a8, a6, 4
400d965e:	060c      	movi.n	a6, 0
400d9660:	000306        	j	400d9670 <uart_start_select+0x17c>
400d9663:	080c00        	lsx	f0, a12, a0
400d9666:	004382        	s8i	a8, a3, 0
400d9669:	0020c0        	memw
400d966c:	661b      	addi.n	a6, a6, 1
400d966e:	331b      	addi.n	a3, a3, 1
400d9670:	f086b6        	bltui	a6, 8, 400d9664 <uart_start_select+0x170>
400d9673:	030c      	movi.n	a3, 0
400d9675:	0002c6        	j	400d9684 <uart_start_select+0x190>
400d9678:	060c      	movi.n	a6, 0
400d967a:	004462        	s8i	a6, a4, 0
400d967d:	0020c0        	memw
400d9680:	331b      	addi.n	a3, a3, 1
400d9682:	441b      	addi.n	a4, a4, 1
400d9684:	f083b6        	bltui	a3, 8, 400d9678 <uart_start_select+0x184>
400d9687:	030c      	movi.n	a3, 0
400d9689:	0002c6        	j	400d9698 <uart_start_select+0x1a4>
400d968c:	040c      	movi.n	a4, 0
400d968e:	004542        	s8i	a4, a5, 0
400d9691:	0020c0        	memw
400d9694:	331b      	addi.n	a3, a3, 1
400d9696:	551b      	addi.n	a5, a5, 1
400d9698:	f083b6        	bltui	a3, 8, 400d968c <uart_start_select+0x198>
400d969b:	030c      	movi.n	a3, 0
400d969d:	001246        	j	400d96ea <uart_start_select+0x1f6>
400d96a0:	db8641        	l32r	a4, 400d04b8 <_flash_cache_start+0x4a0>
400d96a3:	0458      	l32i.n	a5, a4, 0
400d96a5:	414530        	srli	a4, a3, 5
400d96a8:	a05450        	addx4	a5, a4, a5
400d96ab:	0558      	l32i.n	a5, a5, 0
400d96ad:	446030        	extui	a6, a3, 0, 5
400d96b0:	345567        	bbc	a5, a6, 400d96e8 <uart_start_select+0x1f4>
400d96b3:	1cc1b2        	addi	a11, a1, 28
400d96b6:	03ad      	mov.n	a10, a3
400d96b8:	0fd165        	call8	400e93d0 <uart_get_buffered_data_len>
400d96bb:	9aec      	bnez.n	a10, 400d96e8 <uart_start_select+0x1f4>
400d96bd:	7158      	l32i.n	a5, a1, 28
400d96bf:	55ac      	beqz.n	a5, 400d96e8 <uart_start_select+0x1f4>
400d96c1:	db7a51        	l32r	a5, 400d04ac <_flash_cache_start+0x494>
400d96c4:	0588      	l32i.n	a8, a5, 0
400d96c6:	150c      	movi.n	a5, 1
400d96c8:	401600        	ssl	a6
400d96cb:	a15500        	sll	a5, a5
400d96ce:	a04480        	addx4	a4, a4, a8
400d96d1:	0468      	l32i.n	a6, a4, 0
400d96d3:	205650        	or	a5, a6, a5
400d96d6:	0459      	s32i.n	a5, a4, 0
400d96d8:	f03d      	nop.n
400d96da:	f03d      	nop.n
400d96dc:	f03d      	nop.n
400d96de:	f03d      	nop.n
400d96e0:	db7241        	l32r	a4, 400d04a8 <_flash_cache_start+0x490>
400d96e3:	04a8      	l32i.n	a10, a4, 0
400d96e5:	0118a5        	call8	400da870 <esp_vfs_select_triggered>
400d96e8:	331b      	addi.n	a3, a3, 1
400d96ea:	b22327        	blt	a3, a2, 400d96a0 <uart_start_select+0x1ac>
400d96ed:	0ff365        	call8	400e9624 <uart_get_selectlock>
400d96f0:	af4de5        	call8	40088bd0 <vTaskExitCritical>
400d96f3:	000106        	j	400d96fb <uart_start_select+0x207>
400d96f6:	720000        	lsi	f0, a0, 0x1c8
400d96f9:	2d03a1        	l32r	a10, 400a4b08 <_iram_end+0x16fb4>
400d96fc:	f01d07        	beq	a13, a0, 400d96f0 <uart_start_select+0x1fc>
	...

400d9700 <select_notif_callback>:
400d9700:	004136        	entry	a1, 32
400d9703:	4d1326        	beqi	a3, 1, 400d9754 <select_notif_callback+0x54>
400d9706:	638c      	beqz.n	a3, 400d9710 <select_notif_callback+0x10>
400d9708:	022366        	bnei	a3, 2, 400d970e <select_notif_callback+0xe>
400d970b:	002146        	j	400d9794 <select_notif_callback+0x94>
400d970e:	f01d      	retw.n
400d9710:	db6a31        	l32r	a3, 400d04b8 <_flash_cache_start+0x4a0>
400d9713:	002332        	l32i	a3, a3, 0
400d9716:	418520        	srli	a8, a2, 5
400d9719:	a03830        	addx4	a3, a8, a3
400d971c:	002332        	l32i	a3, a3, 0
400d971f:	442020        	extui	a2, a2, 0, 5
400d9722:	02d327        	bbs	a3, a2, 400d9728 <select_notif_callback+0x28>
400d9725:	002a06        	j	400d97d1 <select_notif_callback+0xd1>
400d9728:	db6131        	l32r	a3, 400d04ac <_flash_cache_start+0x494>
400d972b:	002392        	l32i	a9, a3, 0
400d972e:	130c      	movi.n	a3, 1
400d9730:	401200        	ssl	a2
400d9733:	a12300        	sll	a2, a3
400d9736:	a08890        	addx4	a8, a8, a9
400d9739:	0838      	l32i.n	a3, a8, 0
400d973b:	202320        	or	a2, a3, a2
400d973e:	0829      	s32i.n	a2, a8, 0
400d9740:	04bd      	mov.n	a11, a4
400d9742:	f03d      	nop.n
400d9744:	f03d      	nop.n
400d9746:	f03d      	nop.n
400d9748:	db5821        	l32r	a2, 400d04a8 <_flash_cache_start+0x490>
400d974b:	02a8      	l32i.n	a10, a2, 0
400d974d:	011665        	call8	400da8b4 <esp_vfs_select_triggered_isr>
400d9750:	f01d      	retw.n
400d9752:	310000        	srai	a0, a0, 16
400d9755:	db5a      	add.n	a13, a11, a5
400d9757:	002332        	l32i	a3, a3, 0
400d975a:	418520        	srli	a8, a2, 5
400d975d:	a03830        	addx4	a3, a8, a3
400d9760:	002332        	l32i	a3, a3, 0
400d9763:	442020        	extui	a2, a2, 0, 5
400d9766:	675327        	bbc	a3, a2, 400d97d1 <select_notif_callback+0xd1>
400d9769:	db5131        	l32r	a3, 400d04b0 <_flash_cache_start+0x498>
400d976c:	002392        	l32i	a9, a3, 0
400d976f:	130c      	movi.n	a3, 1
400d9771:	401200        	ssl	a2
400d9774:	a12300        	sll	a2, a3
400d9777:	a08890        	addx4	a8, a8, a9
400d977a:	0838      	l32i.n	a3, a8, 0
400d977c:	202320        	or	a2, a3, a2
400d977f:	0829      	s32i.n	a2, a8, 0
400d9781:	04bd      	mov.n	a11, a4
400d9783:	f03d      	nop.n
400d9785:	f03d      	nop.n
400d9787:	f03d      	nop.n
400d9789:	db4721        	l32r	a2, 400d04a8 <_flash_cache_start+0x490>
400d978c:	02a8      	l32i.n	a10, a2, 0
400d978e:	011265        	call8	400da8b4 <esp_vfs_select_triggered_isr>
400d9791:	f01d      	retw.n
400d9793:	4b3100        	olt.s	b3, f1, f0
400d9796:	32db      	addi.n	a3, a2, 13
400d9798:	200023        	lsi	f2, a0, 128
400d979b:	304185        	call0	40109bb4 <_etext+0x1d2d7>
400d979e:	a038      	l32i.n	a3, a0, 40
400d97a0:	002332        	l32i	a3, a3, 0
400d97a3:	442020        	extui	a2, a2, 0, 5
400d97a6:	275327        	bbc	a3, a2, 400d97d1 <select_notif_callback+0xd1>
400d97a9:	db4231        	l32r	a3, 400d04b4 <_flash_cache_start+0x49c>
400d97ac:	002392        	l32i	a9, a3, 0
400d97af:	130c      	movi.n	a3, 1
400d97b1:	401200        	ssl	a2
400d97b4:	a12300        	sll	a2, a3
400d97b7:	a08890        	addx4	a8, a8, a9
400d97ba:	0838      	l32i.n	a3, a8, 0
400d97bc:	202320        	or	a2, a3, a2
400d97bf:	0829      	s32i.n	a2, a8, 0
400d97c1:	04bd      	mov.n	a11, a4
400d97c3:	f03d      	nop.n
400d97c5:	f03d      	nop.n
400d97c7:	f03d      	nop.n
400d97c9:	db3721        	l32r	a2, 400d04a8 <_flash_cache_start+0x490>
400d97cc:	02a8      	l32i.n	a10, a2, 0
400d97ce:	010e65        	call8	400da8b4 <esp_vfs_select_triggered_isr>
400d97d1:	f01d      	retw.n
	...

400d97d4 <uart_tcflush>:
400d97d4:	004136        	entry	a1, 32
400d97d7:	0d32b6        	bltui	a2, 3, 400d97e8 <uart_tcflush+0x14>
400d97da:	017365        	call8	400daf10 <__errno>
400d97dd:	09a022        	movi	a2, 9
400d97e0:	006a22        	s32i	a2, a10, 0
400d97e3:	ffaf22        	movi	a2, -1
400d97e6:	f01d      	retw.n
400d97e8:	014356        	bnez	a3, 400d9800 <uart_tcflush+0x2c>
400d97eb:	20a220        	or	a10, a2, a2
400d97ee:	0fc565        	call8	400e9444 <uart_flush>
400d97f1:	0a2d      	mov.n	a2, a10
400d97f3:	5a9c      	beqz.n	a10, 400d980c <uart_tcflush+0x38>
400d97f5:	0171a5        	call8	400daf10 <__errno>
400d97f8:	621c      	movi.n	a2, 22
400d97fa:	0a29      	s32i.n	a2, a10, 0
400d97fc:	f27c      	movi.n	a2, -1
400d97fe:	f01d      	retw.n
400d9800:	0170e5        	call8	400daf10 <__errno>
400d9803:	16a022        	movi	a2, 22
400d9806:	006a22        	s32i	a2, a10, 0
400d9809:	ffaf22        	movi	a2, -1
400d980c:	f01d      	retw.n
	...

400d9810 <uart_tcdrain>:
400d9810:	004136        	entry	a1, 32
400d9813:	0d32b6        	bltui	a2, 3, 400d9824 <uart_tcdrain+0x14>
400d9816:	016fa5        	call8	400daf10 <__errno>
400d9819:	09a022        	movi	a2, 9
400d981c:	006a22        	s32i	a2, a10, 0
400d981f:	ffaf22        	movi	a2, -1
400d9822:	f01d      	retw.n
400d9824:	ffafb2        	movi	a11, -1
400d9827:	20a220        	or	a10, a2, a2
400d982a:	0fa4a5        	call8	400e9274 <uart_wait_tx_done>
400d982d:	0a2d      	mov.n	a2, a10
400d982f:	7a8c      	beqz.n	a10, 400d983a <uart_tcdrain+0x2a>
400d9831:	016de5        	call8	400daf10 <__errno>
400d9834:	621c      	movi.n	a2, 22
400d9836:	0a29      	s32i.n	a2, a10, 0
400d9838:	f27c      	movi.n	a2, -1
400d983a:	f01d      	retw.n

400d983c <uart_tcgetattr>:
400d983c:	006136        	entry	a1, 48
400d983f:	0d32b6        	bltui	a2, 3, 400d9850 <uart_tcgetattr+0x14>
400d9842:	016ce5        	call8	400daf10 <__errno>
400d9845:	09a022        	movi	a2, 9
400d9848:	006a22        	s32i	a2, a10, 0
400d984b:	ffaf22        	movi	a2, -1
400d984e:	f01d      	retw.n
400d9850:	00c356        	bnez	a3, 400d9860 <uart_tcgetattr+0x24>
400d9853:	016be5        	call8	400daf10 <__errno>
400d9856:	16a022        	movi	a2, 22
400d9859:	006a22        	s32i	a2, a10, 0
400d985c:	f27c      	movi.n	a2, -1
400d985e:	f01d      	retw.n
400d9860:	cc1c      	movi.n	a12, 28
400d9862:	0b0c      	movi.n	a11, 0
400d9864:	03ad      	mov.n	a10, a3
400d9866:	da0381        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400d9869:	0008e0        	callx8	a8
400d986c:	db1881        	l32r	a8, 400d04cc <_flash_cache_start+0x4b4>
400d986f:	a08280        	addx4	a8, a2, a8
400d9872:	0888      	l32i.n	a8, a8, 0
400d9874:	18dc      	bnez.n	a8, 400d9889 <uart_tcgetattr+0x4d>
400d9876:	001392        	l16ui	a9, a3, 0
400d9879:	880c      	movi.n	a8, 8
400d987b:	208980        	or	a8, a9, a8
400d987e:	005382        	s16i	a8, a3, 0
400d9881:	0020c0        	memw
400d9884:	0004c6        	j	400d989b <uart_tcgetattr+0x5f>
400d9887:	660000        	lsi	f0, a0, 0x198
400d988a:	0e18      	l32i.n	a1, a14, 0
400d988c:	001392        	l16ui	a9, a3, 0
400d988f:	02a082        	movi	a8, 2
400d9892:	208980        	or	a8, a9, a8
400d9895:	005382        	s16i	a8, a3, 0
400d9898:	0020c0        	memw
400d989b:	0cc1b2        	addi	a11, a1, 12
400d989e:	02ad      	mov.n	a10, a2
400d98a0:	0f35a5        	call8	400e8bfc <uart_get_word_length>
400d98a3:	9a8c      	beqz.n	a10, 400d98b0 <uart_tcgetattr+0x74>
400d98a5:	0166a5        	call8	400daf10 <__errno>
400d98a8:	621c      	movi.n	a2, 22
400d98aa:	0a29      	s32i.n	a2, a10, 0
400d98ac:	001bc6        	j	400d991f <uart_tcgetattr+0xe3>
400d98af:	139200        	lsi	f0, a2, 76
400d98b2:	c87c02        	lsi	f0, a12, 0x320
400d98b5:	108980        	and	a8, a9, a8
400d98b8:	f48080        	extui	a8, a8, 0, 16
400d98bb:	025382        	s16i	a8, a3, 4
400d98be:	0020c0        	memw
400d98c1:	f03d      	nop.n
400d98c3:	f03d      	nop.n
400d98c5:	f03d      	nop.n
400d98c7:	f03d      	nop.n
400d98c9:	3198      	l32i.n	a9, a1, 12
400d98cb:	0a1926        	beqi	a9, 1, 400d98d9 <uart_tcgetattr+0x9d>
400d98ce:	e9bc      	beqz.n	a9, 400d9910 <uart_tcgetattr+0xd4>
400d98d0:	132926        	beqi	a9, 2, 400d98e7 <uart_tcgetattr+0xab>
400d98d3:	1e3926        	beqi	a9, 3, 400d98f5 <uart_tcgetattr+0xb9>
400d98d6:	000a46        	j	400d9903 <uart_tcgetattr+0xc7>
400d98d9:	190c      	movi.n	a9, 1
400d98db:	208890        	or	a8, a8, a9
400d98de:	025382        	s16i	a8, a3, 4
400d98e1:	0020c0        	memw
400d98e4:	000a06        	j	400d9910 <uart_tcgetattr+0xd4>
400d98e7:	290c      	movi.n	a9, 2
400d98e9:	208890        	or	a8, a8, a9
400d98ec:	025382        	s16i	a8, a3, 4
400d98ef:	0020c0        	memw
400d98f2:	000686        	j	400d9910 <uart_tcgetattr+0xd4>
400d98f5:	390c      	movi.n	a9, 3
400d98f7:	208890        	or	a8, a8, a9
400d98fa:	025382        	s16i	a8, a3, 4
400d98fd:	0020c0        	memw
400d9900:	000306        	j	400d9910 <uart_tcgetattr+0xd4>
400d9903:	0160e5        	call8	400daf10 <__errno>
400d9906:	825c      	movi.n	a2, 88
400d9908:	0a29      	s32i.n	a2, a10, 0
400d990a:	000446        	j	400d991f <uart_tcgetattr+0xe3>
400d990d:	000000        	ill
400d9910:	0cc1b2        	addi	a11, a1, 12
400d9913:	20a220        	or	a10, a2, a2
400d9916:	0f4165        	call8	400e8d2c <uart_get_stop_bits>
400d9919:	013a16        	beqz	a10, 400d9930 <uart_tcgetattr+0xf4>
400d991c:	0000c6        	j	400d9923 <uart_tcgetattr+0xe7>
400d991f:	f27c      	movi.n	a2, -1
400d9921:	f01d      	retw.n
400d9923:	015ee5        	call8	400daf10 <__errno>
400d9926:	621c      	movi.n	a2, 22
400d9928:	0a29      	s32i.n	a2, a10, 0
400d992a:	000e06        	j	400d9966 <uart_tcgetattr+0x12a>
400d992d:	000000        	ill
400d9930:	3188      	l32i.n	a8, a1, 12
400d9932:	201826        	beqi	a8, 1, 400d9956 <uart_tcgetattr+0x11a>
400d9935:	103866        	bnei	a8, 3, 400d9949 <uart_tcgetattr+0x10d>
400d9938:	021392        	l16ui	a9, a3, 4
400d993b:	480c      	movi.n	a8, 4
400d993d:	208980        	or	a8, a9, a8
400d9940:	025382        	s16i	a8, a3, 4
400d9943:	0020c0        	memw
400d9946:	000306        	j	400d9956 <uart_tcgetattr+0x11a>
400d9949:	015c65        	call8	400daf10 <__errno>
400d994c:	825c      	movi.n	a2, 88
400d994e:	0a29      	s32i.n	a2, a10, 0
400d9950:	000486        	j	400d9966 <uart_tcgetattr+0x12a>
400d9953:	000000        	ill
400d9956:	0cc1b2        	addi	a11, a1, 12
400d9959:	20a220        	or	a10, a2, a2
400d995c:	0f4c25        	call8	400e8e20 <uart_get_parity>
400d995f:	014a16        	beqz	a10, 400d9977 <uart_tcgetattr+0x13b>
400d9962:	000106        	j	400d996a <uart_tcgetattr+0x12e>
400d9965:	f27c00        	rems	a7, a12, a0
400d9968:	f01d      	retw.n
400d996a:	015a65        	call8	400daf10 <__errno>
400d996d:	621c      	movi.n	a2, 22
400d996f:	0a29      	s32i.n	a2, a10, 0
400d9971:	001386        	j	400d99c3 <uart_tcgetattr+0x187>
400d9974:	000000        	ill
400d9977:	3188      	l32i.n	a8, a1, 12
400d9979:	072826        	beqi	a8, 2, 400d9984 <uart_tcgetattr+0x148>
400d997c:	153826        	beqi	a8, 3, 400d9995 <uart_tcgetattr+0x159>
400d997f:	58ec      	bnez.n	a8, 400d99a8 <uart_tcgetattr+0x16c>
400d9981:	000b46        	j	400d99b2 <uart_tcgetattr+0x176>
400d9984:	021392        	l16ui	a9, a3, 4
400d9987:	081c      	movi.n	a8, 16
400d9989:	208980        	or	a8, a9, a8
400d998c:	025382        	s16i	a8, a3, 4
400d998f:	0020c0        	memw
400d9992:	000706        	j	400d99b2 <uart_tcgetattr+0x176>
400d9995:	021392        	l16ui	a9, a3, 4
400d9998:	083c      	movi.n	a8, 48
400d999a:	208980        	or	a8, a9, a8
400d999d:	025382        	s16i	a8, a3, 4
400d99a0:	0020c0        	memw
400d99a3:	0002c6        	j	400d99b2 <uart_tcgetattr+0x176>
400d99a6:	650000        	extui	a0, a0, 16, 7
400d99a9:	5c0156        	bnez	a1, 400d9f6d <uart_fcntl+0x7d>
400d99ac:	0a2982        	l32i	a8, a9, 40
400d99af:	000406        	j	400d99c3 <uart_tcgetattr+0x187>
400d99b2:	0cc1b2        	addi	a11, a1, 12
400d99b5:	20a220        	or	a10, a2, a2
400d99b8:	0f57a5        	call8	400e8f34 <uart_get_baudrate>
400d99bb:	202aa0        	or	a2, a10, a10
400d99be:	3a9c      	beqz.n	a10, 400d99d5 <uart_tcgetattr+0x199>
400d99c0:	0000c6        	j	400d99c7 <uart_tcgetattr+0x18b>
400d99c3:	f27c      	movi.n	a2, -1
400d99c5:	f01d      	retw.n
400d99c7:	0154a5        	call8	400daf10 <__errno>
400d99ca:	16a022        	movi	a2, 22
400d99cd:	006a22        	s32i	a2, a10, 0
400d99d0:	ffaf22        	movi	a2, -1
400d99d3:	f01d      	retw.n
400d99d5:	021392        	l16ui	a9, a3, 4
400d99d8:	00a382        	movi	a8, 0x300
400d99db:	209980        	or	a9, a9, a8
400d99de:	f49090        	extui	a9, a9, 0, 16
400d99e1:	025392        	s16i	a9, a3, 4
400d99e4:	0020c0        	memw
400d99e7:	f03d      	nop.n
400d99e9:	f03d      	nop.n
400d99eb:	f03d      	nop.n
400d99ed:	f03d      	nop.n
400d99ef:	3188      	l32i.n	a8, a1, 12
400d99f1:	dab7a1        	l32r	a10, 400d04d0 <_flash_cache_start+0x4b8>
400d99f4:	0298a7        	bne	a8, a10, 400d99fa <uart_tcgetattr+0x1be>
400d99f7:	0060c6        	j	400d9b7e <uart_tcgetattr+0x342>
400d99fa:	02ba87        	bgeu	a10, a8, 400d9a00 <uart_tcgetattr+0x1c4>
400d99fd:	002646        	j	400d9a9a <uart_tcgetattr+0x25e>
400d9a00:	2ca1a2        	movi	a10, 0x12c
400d9a03:	0298a7        	bne	a8, a10, 400d9a09 <uart_tcgetattr+0x1cd>
400d9a06:	0052c6        	j	400d9b55 <uart_tcgetattr+0x319>
400d9a09:	433a87        	bltu	a10, a8, 400d9a50 <uart_tcgetattr+0x214>
400d9a0c:	6ea0a2        	movi	a10, 110
400d9a0f:	0298a7        	bne	a8, a10, 400d9a15 <uart_tcgetattr+0x1d9>
400d9a12:	004a86        	j	400d9b40 <uart_tcgetattr+0x304>
400d9a15:	173a87        	bltu	a10, a8, 400d9a30 <uart_tcgetattr+0x1f4>
400d9a18:	2a3c      	movi.n	a10, 50
400d9a1a:	0298a7        	bne	a8, a10, 400d9a20 <uart_tcgetattr+0x1e4>
400d9a1d:	006f06        	j	400d9bdd <uart_tcgetattr+0x3a1>
400d9a20:	ba4c      	movi.n	a10, 75
400d9a22:	0298a7        	bne	a8, a10, 400d9a28 <uart_tcgetattr+0x1ec>
400d9a25:	004446        	j	400d9b3a <uart_tcgetattr+0x2fe>
400d9a28:	1a2856        	bnez	a8, 400d9bce <uart_tcgetattr+0x392>
400d9a2b:	006c06        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9a2e:	a20000        	muluh	a0, a0, a0
400d9a31:	a796a0        	lsi	f10, a6, 0x29c
400d9a34:	0298      	l32i.n	a9, a2, 0
400d9a36:	004406        	j	400d9b4a <uart_tcgetattr+0x30e>
400d9a39:	c8a0a2        	movi	a10, 200
400d9a3c:	0298a7        	bne	a8, a10, 400d9a42 <uart_tcgetattr+0x206>
400d9a3f:	004346        	j	400d9b50 <uart_tcgetattr+0x314>
400d9a42:	86a0a2        	movi	a10, 134
400d9a45:	0218a7        	beq	a8, a10, 400d9a4b <uart_tcgetattr+0x20f>
400d9a48:	006086        	j	400d9bce <uart_tcgetattr+0x392>
400d9a4b:	003d86        	j	400d9b45 <uart_tcgetattr+0x309>
400d9a4e:	a10000        	sll	a0, a0
400d9a51:	a7daa1        	l32r	a10, 400c39bc <_rtc_text_end+0x39bc>
400d9a54:	0298      	l32i.n	a9, a2, 0
400d9a56:	0043c6        	j	400d9b69 <uart_tcgetattr+0x32d>
400d9a59:	1f3a87        	bltu	a10, a8, 400d9a7c <uart_tcgetattr+0x240>
400d9a5c:	b0a4a2        	movi	a10, 0x4b0
400d9a5f:	0298a7        	bne	a8, a10, 400d9a65 <uart_tcgetattr+0x229>
400d9a62:	003e46        	j	400d9b5f <uart_tcgetattr+0x323>
400d9a65:	08a7a2        	movi	a10, 0x708
400d9a68:	0298a7        	bne	a8, a10, 400d9a6e <uart_tcgetattr+0x232>
400d9a6b:	003d46        	j	400d9b64 <uart_tcgetattr+0x328>
400d9a6e:	58a2a2        	movi	a10, 0x258
400d9a71:	0218a7        	beq	a8, a10, 400d9a77 <uart_tcgetattr+0x23b>
400d9a74:	005586        	j	400d9bce <uart_tcgetattr+0x392>
400d9a77:	0037c6        	j	400d9b5a <uart_tcgetattr+0x31e>
400d9a7a:	a10000        	sll	a0, a0
400d9a7d:	a7da97        	bbs	a10, a9, 400d9a28 <uart_tcgetattr+0x1ec>
400d9a80:	0298      	l32i.n	a9, a2, 0
400d9a82:	003b86        	j	400d9b74 <uart_tcgetattr+0x338>
400d9a85:	da95a1        	l32r	a10, 400d04dc <_flash_cache_start+0x4c4>
400d9a88:	0298a7        	bne	a8, a10, 400d9a8e <uart_tcgetattr+0x252>
400d9a8b:	003a86        	j	400d9b79 <uart_tcgetattr+0x33d>
400d9a8e:	da94a1        	l32r	a10, 400d04e0 <_flash_cache_start+0x4c8>
400d9a91:	0218a7        	beq	a8, a10, 400d9a97 <uart_tcgetattr+0x25b>
400d9a94:	004d86        	j	400d9bce <uart_tcgetattr+0x392>
400d9a97:	003506        	j	400d9b6f <uart_tcgetattr+0x333>
400d9a9a:	da92a1        	l32r	a10, 400d04e4 <_flash_cache_start+0x4cc>
400d9a9d:	0298a7        	bne	a8, a10, 400d9aa3 <uart_tcgetattr+0x267>
400d9aa0:	004086        	j	400d9ba6 <uart_tcgetattr+0x36a>
400d9aa3:	493a87        	bltu	a10, a8, 400d9af0 <uart_tcgetattr+0x2b4>
400d9aa6:	da90a1        	l32r	a10, 400d04e8 <_flash_cache_start+0x4d0>
400d9aa9:	0298a7        	bne	a8, a10, 400d9aaf <uart_tcgetattr+0x273>
400d9aac:	003886        	j	400d9b92 <uart_tcgetattr+0x356>
400d9aaf:	1d3a87        	bltu	a10, a8, 400d9ad0 <uart_tcgetattr+0x294>
400d9ab2:	da8ea1        	l32r	a10, 400d04ec <_flash_cache_start+0x4d4>
400d9ab5:	0298a7        	bne	a8, a10, 400d9abb <uart_tcgetattr+0x27f>
400d9ab8:	003306        	j	400d9b88 <uart_tcgetattr+0x34c>
400d9abb:	da8da1        	l32r	a10, 400d04f0 <_flash_cache_start+0x4d8>
400d9abe:	0298a7        	bne	a8, a10, 400d9ac4 <uart_tcgetattr+0x288>
400d9ac1:	003206        	j	400d9b8d <uart_tcgetattr+0x351>
400d9ac4:	da8ca1        	l32r	a10, 400d04f4 <_flash_cache_start+0x4dc>
400d9ac7:	0218a7        	beq	a8, a10, 400d9acd <uart_tcgetattr+0x291>
400d9aca:	004006        	j	400d9bce <uart_tcgetattr+0x392>
400d9acd:	002c86        	j	400d9b83 <uart_tcgetattr+0x347>
400d9ad0:	da8aa1        	l32r	a10, 400d04f8 <_flash_cache_start+0x4e0>
400d9ad3:	0298a7        	bne	a8, a10, 400d9ad9 <uart_tcgetattr+0x29d>
400d9ad6:	003086        	j	400d9b9c <uart_tcgetattr+0x360>
400d9ad9:	da88a1        	l32r	a10, 400d04fc <_flash_cache_start+0x4e4>
400d9adc:	0298a7        	bne	a8, a10, 400d9ae2 <uart_tcgetattr+0x2a6>
400d9adf:	002f86        	j	400d9ba1 <uart_tcgetattr+0x365>
400d9ae2:	da87a1        	l32r	a10, 400d0500 <_flash_cache_start+0x4e8>
400d9ae5:	0218a7        	beq	a8, a10, 400d9aeb <uart_tcgetattr+0x2af>
400d9ae8:	003886        	j	400d9bce <uart_tcgetattr+0x392>
400d9aeb:	002a06        	j	400d9b97 <uart_tcgetattr+0x35b>
400d9aee:	a10000        	sll	a0, a0
400d9af1:	a7da85        	call0	4008189c <esp_dport_access_stall_other_cpu_end+0x4c>
400d9af4:	0298      	l32i.n	a9, a2, 0
400d9af6:	003006        	j	400d9bba <uart_tcgetattr+0x37e>
400d9af9:	1f3a87        	bltu	a10, a8, 400d9b1c <uart_tcgetattr+0x2e0>
400d9afc:	da83a1        	l32r	a10, 400d0508 <_flash_cache_start+0x4f0>
400d9aff:	0298a7        	bne	a8, a10, 400d9b05 <uart_tcgetattr+0x2c9>
400d9b02:	002a86        	j	400d9bb0 <uart_tcgetattr+0x374>
400d9b05:	da81a1        	l32r	a10, 400d050c <_flash_cache_start+0x4f4>
400d9b08:	0298a7        	bne	a8, a10, 400d9b0e <uart_tcgetattr+0x2d2>
400d9b0b:	002986        	j	400d9bb5 <uart_tcgetattr+0x379>
400d9b0e:	da80a1        	l32r	a10, 400d0510 <_flash_cache_start+0x4f8>
400d9b11:	0218a7        	beq	a8, a10, 400d9b17 <uart_tcgetattr+0x2db>
400d9b14:	002d86        	j	400d9bce <uart_tcgetattr+0x392>
400d9b17:	002406        	j	400d9bab <uart_tcgetattr+0x36f>
400d9b1a:	a10000        	sll	a0, a0
400d9b1d:	7e          	.byte 0x7e
400d9b1e:	a7da      	add.n	a10, a7, a13
400d9b20:	0298      	l32i.n	a9, a2, 0
400d9b22:	002786        	j	400d9bc4 <uart_tcgetattr+0x388>
400d9b25:	da7ca1        	l32r	a10, 400d0518 <_flash_cache_start+0x500>
400d9b28:	0298a7        	bne	a8, a10, 400d9b2e <uart_tcgetattr+0x2f2>
400d9b2b:	002686        	j	400d9bc9 <uart_tcgetattr+0x38d>
400d9b2e:	da7ba1        	l32r	a10, 400d051c <_flash_cache_start+0x504>
400d9b31:	0218a7        	beq	a8, a10, 400d9b37 <uart_tcgetattr+0x2fb>
400d9b34:	002586        	j	400d9bce <uart_tcgetattr+0x392>
400d9b37:	002106        	j	400d9bbf <uart_tcgetattr+0x383>
400d9b3a:	280c      	movi.n	a8, 2
400d9b3c:	0027c6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b3f:	380c00        	lsi	f0, a12, 224
400d9b42:	002646        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b45:	480c      	movi.n	a8, 4
400d9b47:	002506        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b4a:	580c      	movi.n	a8, 5
400d9b4c:	0023c6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b4f:	680c00        	lsi	f0, a12, 0x1a0
400d9b52:	002246        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b55:	780c      	movi.n	a8, 7
400d9b57:	002106        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b5a:	880c      	movi.n	a8, 8
400d9b5c:	001fc6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b5f:	980c      	movi.n	a8, 9
400d9b61:	001e86        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b64:	a80c      	movi.n	a8, 10
400d9b66:	001d46        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b69:	b80c      	movi.n	a8, 11
400d9b6b:	001c06        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b6e:	c80c00        	lsi	f0, a12, 0x320
400d9b71:	001a86        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b74:	d80c      	movi.n	a8, 13
400d9b76:	001946        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b79:	e80c      	movi.n	a8, 14
400d9b7b:	001806        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b7e:	f80c      	movi.n	a8, 15
400d9b80:	0016c6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b83:	081c      	movi.n	a8, 16
400d9b85:	001586        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b88:	181c      	movi.n	a8, 17
400d9b8a:	001446        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b8d:	281c      	movi.n	a8, 18
400d9b8f:	001306        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b92:	381c      	movi.n	a8, 19
400d9b94:	0011c6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b97:	481c      	movi.n	a8, 20
400d9b99:	001086        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9b9c:	581c      	movi.n	a8, 21
400d9b9e:	000f46        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9ba1:	681c      	movi.n	a8, 22
400d9ba3:	000e06        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9ba6:	781c      	movi.n	a8, 23
400d9ba8:	000cc6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bab:	881c      	movi.n	a8, 24
400d9bad:	000b86        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bb0:	981c      	movi.n	a8, 25
400d9bb2:	000a46        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bb5:	a81c      	movi.n	a8, 26
400d9bb7:	000906        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bba:	b81c      	movi.n	a8, 27
400d9bbc:	0007c6        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bbf:	c81c      	movi.n	a8, 28
400d9bc1:	000686        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bc4:	d81c      	movi.n	a8, 29
400d9bc6:	000546        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bc9:	e81c      	movi.n	a8, 30
400d9bcb:	000406        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bce:	00a4a2        	movi	a10, 0x400
400d9bd1:	2099a0        	or	a9, a9, a10
400d9bd4:	025392        	s16i	a9, a3, 4
400d9bd7:	0020c0        	memw
400d9bda:	000046        	j	400d9bdf <uart_tcgetattr+0x3a3>
400d9bdd:	180c      	movi.n	a8, 1
400d9bdf:	6389      	s32i.n	a8, a3, 24
400d9be1:	5389      	s32i.n	a8, a3, 20
400d9be3:	f01d      	retw.n
400d9be5:	000000        	ill

400d9be8 <uart_tcsetattr>:
400d9be8:	004136        	entry	a1, 32
400d9beb:	205220        	or	a5, a2, a2
400d9bee:	0c32b6        	bltui	a2, 3, 400d9bfe <uart_tcsetattr+0x16>
400d9bf1:	0131e5        	call8	400daf10 <__errno>
400d9bf4:	09a022        	movi	a2, 9
400d9bf7:	006a22        	s32i	a2, a10, 0
400d9bfa:	f27c      	movi.n	a2, -1
400d9bfc:	f01d      	retw.n
400d9bfe:	00e456        	bnez	a4, 400d9c10 <uart_tcsetattr+0x28>
400d9c01:	0130e5        	call8	400daf10 <__errno>
400d9c04:	16a022        	movi	a2, 22
400d9c07:	006a22        	s32i	a2, a10, 0
400d9c0a:	f27c      	movi.n	a2, -1
400d9c0c:	f01d      	retw.n
400d9c0e:	260000        	lsi	f0, a0, 152
400d9c11:	260813        	lsi	f1, a8, 152
400d9c14:	ec1b23        	lsi	f2, a11, 0x3b0
400d9c17:	0f06e3        	lsi	f14, a6, 60
400d9c1a:	b20000        	mulsh	a0, a0, a0
400d9c1d:	af          	.byte 0xaf
400d9c1e:	ff          	.byte 0xff
400d9c1f:	20a220        	or	a10, a2, a2
400d9c22:	0f6525        	call8	400e9274 <uart_wait_tx_done>
400d9c25:	9a8c      	beqz.n	a10, 400d9c32 <uart_tcsetattr+0x4a>
400d9c27:	012ea5        	call8	400daf10 <__errno>
400d9c2a:	621c      	movi.n	a2, 22
400d9c2c:	0a29      	s32i.n	a2, a10, 0
400d9c2e:	f27c      	movi.n	a2, -1
400d9c30:	f01d      	retw.n
400d9c32:	20a550        	or	a10, a5, a5
400d9c35:	0f80e5        	call8	400e9444 <uart_flush>
400d9c38:	01ca16        	beqz	a10, 400d9c58 <uart_tcsetattr+0x70>
400d9c3b:	012d65        	call8	400daf10 <__errno>
400d9c3e:	621c      	movi.n	a2, 22
400d9c40:	0a29      	s32i.n	a2, a10, 0
400d9c42:	f27c      	movi.n	a2, -1
400d9c44:	f01d      	retw.n
400d9c46:	650000        	extui	a0, a0, 16, 7
400d9c49:	012c      	movi.n	a1, 32
400d9c4b:	16a022        	movi	a2, 22
400d9c4e:	006a22        	s32i	a2, a10, 0
400d9c51:	ffaf22        	movi	a2, -1
400d9c54:	f01d      	retw.n
400d9c56:	220000        	orb	b0, b0, b0
400d9c59:	370014        	lsi	f1, a0, 220
400d9c5c:	210d62        	l8ui	a6, a13, 33
400d9c5f:	da1b      	addi.n	a13, a10, 1
400d9c61:	a02520        	addx4	a2, a5, a2
400d9c64:	030c      	movi.n	a3, 0
400d9c66:	0239      	s32i.n	a3, a2, 0
400d9c68:	000686        	j	400d9c86 <uart_tcsetattr+0x9e>
400d9c6b:	621700        	lsi	f0, a7, 0x188
400d9c6e:	210c      	movi.n	a1, 2
400d9c70:	20da17        	bbs	a10, a1, 400d9c94 <uart_tcsetattr+0xac>
400d9c73:	0ca025        	call8	400e6674 <get_arg$isra$0+0x1d4>
400d9c76:	023913        	lsi	f1, a9, 8
400d9c79:	000246        	j	400d9c86 <uart_tcsetattr+0x9e>
400d9c7c:	da1421        	l32r	a2, 400d04cc <_flash_cache_start+0x4b4>
400d9c7f:	a02520        	addx4	a2, a5, a2
400d9c82:	230c      	movi.n	a3, 2
400d9c84:	0239      	s32i.n	a3, a2, 0
400d9c86:	f03d      	nop.n
400d9c88:	f03d      	nop.n
400d9c8a:	f03d      	nop.n
400d9c8c:	f03d      	nop.n
400d9c8e:	021482        	l16ui	a8, a4, 4
400d9c91:	148080        	extui	a8, a8, 0, 2
400d9c94:	2a1826        	beqi	a8, 1, 400d9cc2 <uart_tcsetattr+0xda>
400d9c97:	18ac      	beqz.n	a8, 400d9cbc <uart_tcsetattr+0xd4>
400d9c99:	052826        	beqi	a8, 2, 400d9ca2 <uart_tcsetattr+0xba>
400d9c9c:	083826        	beqi	a8, 3, 400d9ca8 <uart_tcsetattr+0xc0>
400d9c9f:	0002c6        	j	400d9cae <uart_tcsetattr+0xc6>
400d9ca2:	2b0c      	movi.n	a11, 2
400d9ca4:	000746        	j	400d9cc5 <uart_tcsetattr+0xdd>
400d9ca7:	3b0c00        	ueq.s	b0, f12, f0
400d9caa:	0005c6        	j	400d9cc5 <uart_tcsetattr+0xdd>
400d9cad:	262500        	lsi	f0, a5, 152
400d9cb0:	a02201        	l32r	a0, 400c1d38 <_rtc_text_end+0x1d38>
400d9cb3:	6a2216        	beqz	a2, 400da359 <get_vfs_for_path+0x45>
400d9cb6:	af2200        	f64cmph	a2, a2, a0, 10
400d9cb9:	ff          	.byte 0xff
400d9cba:	f01d      	retw.n
400d9cbc:	0b0c      	movi.n	a11, 0
400d9cbe:	0000c6        	j	400d9cc5 <uart_tcsetattr+0xdd>
400d9cc1:	a0b200        	addx4	a11, a2, a0
400d9cc4:	a55001        	l32r	a0, 400c3204 <_rtc_text_end+0x3204>
400d9cc7:	e96520        	lsi	f2, a5, 0x3a4
400d9cca:	0e          	.byte 0xe
400d9ccb:	9a8c      	beqz.n	a10, 400d9cd8 <uart_tcsetattr+0xf0>
400d9ccd:	012425        	call8	400daf10 <__errno>
400d9cd0:	621c      	movi.n	a2, 22
400d9cd2:	0a29      	s32i.n	a2, a10, 0
400d9cd4:	f27c      	movi.n	a2, -1
400d9cd6:	f01d      	retw.n
400d9cd8:	021422        	l16ui	a2, a4, 4
400d9cdb:	056227        	bbci	a2, 2, 400d9ce4 <uart_tcsetattr+0xfc>
400d9cde:	3b0c      	movi.n	a11, 3
400d9ce0:	0000c6        	j	400d9ce7 <uart_tcsetattr+0xff>
400d9ce3:	a0b200        	addx4	a11, a2, a0
400d9ce6:	a55001        	l32r	a0, 400c3228 <_rtc_text_end+0x3228>
400d9ce9:	f5e520        	extui	a14, a2, 21, 16
400d9cec:	0e          	.byte 0xe
400d9ced:	ba8c      	beqz.n	a10, 400d9cfc <uart_tcsetattr+0x114>
400d9cef:	012225        	call8	400daf10 <__errno>
400d9cf2:	621c      	movi.n	a2, 22
400d9cf4:	0a29      	s32i.n	a2, a10, 0
400d9cf6:	f27c      	movi.n	a2, -1
400d9cf8:	f01d      	retw.n
400d9cfa:	220000        	orb	b0, b0, b0
400d9cfd:	470214        	lsi	f1, a2, 0x11c
400d9d00:	570762        	l8ui	a6, a7, 87
400d9d03:	0c0a62        	l8ui	a6, a10, 12
400d9d06:	063b      	addi.n	a0, a6, 3
400d9d08:	0c0002        	l8ui	a0, a0, 12
400d9d0b:	c60b      	addi.n	a12, a6, -1
400d9d0d:	000000        	ill
400d9d10:	02a0b2        	movi	a11, 2
400d9d13:	20a550        	or	a10, a5, a5
400d9d16:	0f07e5        	call8	400e8d94 <uart_set_parity>
400d9d19:	0a2d      	mov.n	a2, a10
400d9d1b:	9a8c      	beqz.n	a10, 400d9d28 <uart_tcsetattr+0x140>
400d9d1d:	011f25        	call8	400daf10 <__errno>
400d9d20:	621c      	movi.n	a2, 22
400d9d22:	0a29      	s32i.n	a2, a10, 0
400d9d24:	f27c      	movi.n	a2, -1
400d9d26:	f01d      	retw.n
400d9d28:	021432        	l16ui	a3, a4, 4
400d9d2b:	00a382        	movi	a8, 0x300
400d9d2e:	028387        	bany	a3, a8, 400d9d34 <uart_tcsetattr+0x14c>
400d9d31:	003fc6        	j	400d9e34 <uart_tcsetattr+0x24c>
400d9d34:	0524b2        	l32i	a11, a4, 20
400d9d37:	062422        	l32i	a2, a4, 24
400d9d3a:	0b1b27        	beq	a11, a2, 400d9d49 <uart_tcsetattr+0x161>
400d9d3d:	011d25        	call8	400daf10 <__errno>
400d9d40:	16a022        	movi	a2, 22
400d9d43:	0a29      	s32i.n	a2, a10, 0
400d9d45:	f27c      	movi.n	a2, -1
400d9d47:	f01d      	retw.n
400d9d49:	0263a7        	bbci	a3, 10, 400d9d4f <uart_tcsetattr+0x167>
400d9d4c:	003446        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d4f:	e21c      	movi.n	a2, 30
400d9d51:	02b2b7        	bgeu	a2, a11, 400d9d57 <uart_tcsetattr+0x16f>
400d9d54:	002e06        	j	400d9e10 <uart_tcsetattr+0x228>
400d9d57:	d9f221        	l32r	a2, 400d0520 <_flash_cache_start+0x508>
400d9d5a:	a02b20        	addx4	a2, a11, a2
400d9d5d:	0228      	l32i.n	a2, a2, 0
400d9d5f:	0002a0        	jx	a2
400d9d62:	bb4c      	movi.n	a11, 75
400d9d64:	002e46        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d67:	6ea0b2        	movi	a11, 110
400d9d6a:	002cc6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d6d:	86a0b2        	movi	a11, 134
400d9d70:	002b46        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d73:	96a0b2        	movi	a11, 150
400d9d76:	0029c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d79:	c8a0b2        	movi	a11, 200
400d9d7c:	002846        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d7f:	2ca1b2        	movi	a11, 0x12c
400d9d82:	0026c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d85:	58a2b2        	movi	a11, 0x258
400d9d88:	002546        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d8b:	b0a4b2        	movi	a11, 0x4b0
400d9d8e:	0023c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d91:	08a7b2        	movi	a11, 0x708
400d9d94:	002246        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d97:	d9cfb1        	l32r	a11, 400d04d4 <_flash_cache_start+0x4bc>
400d9d9a:	0020c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9d9d:	d9d0b1        	l32r	a11, 400d04e0 <_flash_cache_start+0x4c8>
400d9da0:	001f46        	j	400d9e21 <uart_tcsetattr+0x239>
400d9da3:	d9cdb1        	l32r	a11, 400d04d8 <_flash_cache_start+0x4c0>
400d9da6:	001dc6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9da9:	d9ccb1        	l32r	a11, 400d04dc <_flash_cache_start+0x4c4>
400d9dac:	001c46        	j	400d9e21 <uart_tcsetattr+0x239>
400d9daf:	d9c8b1        	l32r	a11, 400d04d0 <_flash_cache_start+0x4b8>
400d9db2:	001ac6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9db5:	d9cfb1        	l32r	a11, 400d04f4 <_flash_cache_start+0x4dc>
400d9db8:	001946        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dbb:	d9ccb1        	l32r	a11, 400d04ec <_flash_cache_start+0x4d4>
400d9dbe:	0017c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dc1:	d9cbb1        	l32r	a11, 400d04f0 <_flash_cache_start+0x4d8>
400d9dc4:	001646        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dc7:	d9c8b1        	l32r	a11, 400d04e8 <_flash_cache_start+0x4d0>
400d9dca:	0014c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dcd:	d9ccb1        	l32r	a11, 400d0500 <_flash_cache_start+0x4e8>
400d9dd0:	001346        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dd3:	d9c9b1        	l32r	a11, 400d04f8 <_flash_cache_start+0x4e0>
400d9dd6:	0011c6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dd9:	d9c8b1        	l32r	a11, 400d04fc <_flash_cache_start+0x4e4>
400d9ddc:	001046        	j	400d9e21 <uart_tcsetattr+0x239>
400d9ddf:	d9c1b1        	l32r	a11, 400d04e4 <_flash_cache_start+0x4cc>
400d9de2:	000ec6        	j	400d9e21 <uart_tcsetattr+0x239>
400d9de5:	cab100        	float.s	f11, a1, 0
400d9de8:	06d9      	s32i.n	a13, a6, 0
400d9dea:	000d      	mov.n	a0, a0
400d9dec:	d9c7b1        	l32r	a11, 400d0508 <_flash_cache_start+0x4f0>
400d9def:	000b86        	j	400d9e21 <uart_tcsetattr+0x239>
400d9df2:	d9c6b1        	l32r	a11, 400d050c <_flash_cache_start+0x4f4>
400d9df5:	000a06        	j	400d9e21 <uart_tcsetattr+0x239>
400d9df8:	d9c3b1        	l32r	a11, 400d0504 <_flash_cache_start+0x4ec>
400d9dfb:	000886        	j	400d9e21 <uart_tcsetattr+0x239>
400d9dfe:	d9c7b1        	l32r	a11, 400d051c <_flash_cache_start+0x504>
400d9e01:	000706        	j	400d9e21 <uart_tcsetattr+0x239>
400d9e04:	d9c4b1        	l32r	a11, 400d0514 <_flash_cache_start+0x4fc>
400d9e07:	000586        	j	400d9e21 <uart_tcsetattr+0x239>
400d9e0a:	d9c3b1        	l32r	a11, 400d0518 <_flash_cache_start+0x500>
400d9e0d:	000406        	j	400d9e21 <uart_tcsetattr+0x239>
400d9e10:	010fe5        	call8	400daf10 <__errno>
400d9e13:	16a022        	movi	a2, 22
400d9e16:	006a22        	s32i	a2, a10, 0
400d9e19:	ffaf22        	movi	a2, -1
400d9e1c:	f01d      	retw.n
400d9e1e:	32a0b2        	movi	a11, 50
400d9e21:	20a550        	or	a10, a5, a5
400d9e24:	0f05a5        	call8	400e8e80 <uart_set_baudrate>
400d9e27:	0a2d      	mov.n	a2, a10
400d9e29:	7a8c      	beqz.n	a10, 400d9e34 <uart_tcsetattr+0x24c>
400d9e2b:	010e65        	call8	400daf10 <__errno>
400d9e2e:	621c      	movi.n	a2, 22
400d9e30:	0a29      	s32i.n	a2, a10, 0
400d9e32:	f27c      	movi.n	a2, -1
400d9e34:	f01d      	retw.n
	...

400d9e38 <uart_access>:
400d9e38:	004136        	entry	a1, 32
400d9e3b:	d9bab1        	l32r	a11, 400d0524 <_flash_cache_start+0x50c>
400d9e3e:	02ad      	mov.n	a10, a2
400d9e40:	d96681        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9e43:	0008e0        	callx8	a8
400d9e46:	01aa16        	beqz	a10, 400d9e64 <uart_access+0x2c>
400d9e49:	d9b7b1        	l32r	a11, 400d0528 <_flash_cache_start+0x510>
400d9e4c:	20a220        	or	a10, a2, a2
400d9e4f:	d96281        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9e52:	0008e0        	callx8	a8
400d9e55:	ba8c      	beqz.n	a10, 400d9e64 <uart_access+0x2c>
400d9e57:	d9b5b1        	l32r	a11, 400d052c <_flash_cache_start+0x514>
400d9e5a:	02ad      	mov.n	a10, a2
400d9e5c:	d95f81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9e5f:	0008e0        	callx8	a8
400d9e62:	6adc      	bnez.n	a10, 400d9e7c <uart_access+0x44>
400d9e64:	022316        	beqz	a3, 400d9e8a <uart_access+0x52>
400d9e67:	06a022        	movi	a2, 6
400d9e6a:	020327        	bnone	a3, a2, 400d9e70 <uart_access+0x38>
400d9e6d:	1d6307        	bbci	a3, 0, 400d9e8e <uart_access+0x56>
400d9e70:	0109e5        	call8	400daf10 <__errno>
400d9e73:	0da022        	movi	a2, 13
400d9e76:	0a29      	s32i.n	a2, a10, 0
400d9e78:	f27c      	movi.n	a2, -1
400d9e7a:	f01d      	retw.n
400d9e7c:	010925        	call8	400daf10 <__errno>
400d9e7f:	02a022        	movi	a2, 2
400d9e82:	006a22        	s32i	a2, a10, 0
400d9e85:	ffaf22        	movi	a2, -1
400d9e88:	f01d      	retw.n
400d9e8a:	020c      	movi.n	a2, 0
400d9e8c:	f01d      	retw.n
400d9e8e:	020c      	movi.n	a2, 0
400d9e90:	f01d      	retw.n
	...

400d9e94 <uart_open>:
400d9e94:	004136        	entry	a1, 32
400d9e97:	d9a3b1        	l32r	a11, 400d0524 <_flash_cache_start+0x50c>
400d9e9a:	02ad      	mov.n	a10, a2
400d9e9c:	d94f81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9e9f:	0008e0        	callx8	a8
400d9ea2:	3aac      	beqz.n	a10, 400d9ec9 <uart_open+0x35>
400d9ea4:	d9a1b1        	l32r	a11, 400d0528 <_flash_cache_start+0x510>
400d9ea7:	02ad      	mov.n	a10, a2
400d9ea9:	d94b81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9eac:	0008e0        	callx8	a8
400d9eaf:	ba9c      	beqz.n	a10, 400d9ece <uart_open+0x3a>
400d9eb1:	d99eb1        	l32r	a11, 400d052c <_flash_cache_start+0x514>
400d9eb4:	02ad      	mov.n	a10, a2
400d9eb6:	d94881        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400d9eb9:	0008e0        	callx8	a8
400d9ebc:	4a9c      	beqz.n	a10, 400d9ed4 <uart_open+0x40>
400d9ebe:	010525        	call8	400daf10 <__errno>
400d9ec1:	220c      	movi.n	a2, 2
400d9ec3:	0a29      	s32i.n	a2, a10, 0
400d9ec5:	f27c      	movi.n	a2, -1
400d9ec7:	f01d      	retw.n
400d9ec9:	020c      	movi.n	a2, 0
400d9ecb:	0001c6        	j	400d9ed6 <uart_open+0x42>
400d9ece:	120c      	movi.n	a2, 1
400d9ed0:	000086        	j	400d9ed6 <uart_open+0x42>
400d9ed3:	220c00        	orb	b0, b12, b0
400d9ed6:	d99681        	l32r	a8, 400d0530 <_flash_cache_start+0x518>
400d9ed9:	108380        	and	a8, a3, a8
400d9edc:	030c      	movi.n	a3, 0
400d9ede:	190c      	movi.n	a9, 1
400d9ee0:	933980        	movnez	a3, a9, a8
400d9ee3:	d99481        	l32r	a8, 400d0534 <_flash_cache_start+0x51c>
400d9ee6:	882a      	add.n	a8, a8, a2
400d9ee8:	004832        	s8i	a3, a8, 0
400d9eeb:	0020c0        	memw
400d9eee:	f01d      	retw.n

400d9ef0 <uart_fcntl>:
400d9ef0:	006136        	entry	a1, 48
400d9ef3:	016142        	s32i	a4, a1, 4
400d9ef6:	026152        	s32i	a5, a1, 8
400d9ef9:	036162        	s32i	a6, a1, 12
400d9efc:	1832b6        	bltui	a2, 3, 400d9f18 <uart_fcntl+0x28>
400d9eff:	f03d      	nop.n
400d9f01:	f03d      	nop.n
400d9f03:	0020f0        	nop
400d9f06:	0020f0        	nop
400d9f09:	d98bd1        	l32r	a13, 400d0538 <_flash_cache_start+0x520>
400d9f0c:	d98cc1        	l32r	a12, 400d053c <_flash_cache_start+0x524>
400d9f0f:	0da1b2        	movi	a11, 0x10d
400d9f12:	d98ba1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400d9f15:	00fc25        	call8	400daed8 <__assert_func>
400d9f18:	0c3366        	bnei	a3, 3, 400d9f28 <uart_fcntl+0x38>
400d9f1b:	d98631        	l32r	a3, 400d0534 <_flash_cache_start+0x51c>
400d9f1e:	232a      	add.n	a2, a3, a2
400d9f20:	000222        	l8ui	a2, a2, 0
400d9f23:	060256        	bnez	a2, 400d9f87 <uart_fcntl+0x97>
400d9f26:	f01d      	retw.n
400d9f28:	4d4366        	bnei	a3, 4, 400d9f79 <uart_fcntl+0x89>
400d9f2b:	3188      	l32i.n	a8, a1, 12
400d9f2d:	384b      	addi.n	a3, a8, 4
400d9f2f:	3139      	s32i.n	a3, a1, 12
400d9f31:	891c      	movi.n	a9, 24
400d9f33:	0a2937        	blt	a9, a3, 400d9f41 <uart_fcntl+0x51>
400d9f36:	f03d      	nop.n
400d9f38:	f03d      	nop.n
400d9f3a:	f03d      	nop.n
400d9f3c:	2138      	l32i.n	a3, a1, 8
400d9f3e:	000486        	j	400d9f54 <uart_fcntl+0x64>
400d9f41:	831c      	movi.n	a3, 24
400d9f43:	032387        	blt	a3, a8, 400d9f4a <uart_fcntl+0x5a>
400d9f46:	432c      	movi.n	a3, 36
400d9f48:	3139      	s32i.n	a3, a1, 12
400d9f4a:	f03d      	nop.n
400d9f4c:	f03d      	nop.n
400d9f4e:	f03d      	nop.n
400d9f50:	f03d      	nop.n
400d9f52:	1138      	l32i.n	a3, a1, 4
400d9f54:	3188      	l32i.n	a8, a1, 12
400d9f56:	fcc882        	addi	a8, a8, -4
400d9f59:	838a      	add.n	a8, a3, a8
400d9f5b:	0898      	l32i.n	a9, a8, 0
400d9f5d:	d97481        	l32r	a8, 400d0530 <_flash_cache_start+0x518>
400d9f60:	108980        	and	a8, a9, a8
400d9f63:	0a0c      	movi.n	a10, 0
400d9f65:	190c      	movi.n	a9, 1
400d9f67:	839a80        	moveqz	a9, a10, a8
400d9f6a:	d97281        	l32r	a8, 400d0534 <_flash_cache_start+0x51c>
400d9f6d:	882a      	add.n	a8, a8, a2
400d9f6f:	004892        	s8i	a9, a8, 0
400d9f72:	0020c0        	memw
400d9f75:	0a2d      	mov.n	a2, a10
400d9f77:	f01d      	retw.n
400d9f79:	00f965        	call8	400daf10 <__errno>
400d9f7c:	58a022        	movi	a2, 88
400d9f7f:	006a22        	s32i	a2, a10, 0
400d9f82:	ffaf22        	movi	a2, -1
400d9f85:	f01d      	retw.n
400d9f87:	d96a21        	l32r	a2, 400d0530 <_flash_cache_start+0x518>
400d9f8a:	f01d      	retw.n

400d9f8c <uart_fstat>:
400d9f8c:	004136        	entry	a1, 32
400d9f8f:	0e32b6        	bltui	a2, 3, 400d9fa1 <uart_fstat+0x15>
400d9f92:	d969d1        	l32r	a13, 400d0538 <_flash_cache_start+0x520>
400d9f95:	d96bc1        	l32r	a12, 400d0544 <_flash_cache_start+0x52c>
400d9f98:	00a1b2        	movi	a11, 0x100
400d9f9b:	d969a1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400d9f9e:	00f3a5        	call8	400daed8 <__assert_func>
400d9fa1:	d96921        	l32r	a2, 400d0548 <_flash_cache_start+0x530>
400d9fa4:	1329      	s32i.n	a2, a3, 4
400d9fa6:	020c      	movi.n	a2, 0
400d9fa8:	f01d      	retw.n
	...

400d9fac <uart_close>:
400d9fac:	004136        	entry	a1, 32
400d9faf:	0e32b6        	bltui	a2, 3, 400d9fc1 <uart_close+0x15>
400d9fb2:	d961d1        	l32r	a13, 400d0538 <_flash_cache_start+0x520>
400d9fb5:	d965c1        	l32r	a12, 400d054c <_flash_cache_start+0x534>
400d9fb8:	07a1b2        	movi	a11, 0x107
400d9fbb:	d961a1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400d9fbe:	00f1a5        	call8	400daed8 <__assert_func>
400d9fc1:	020c      	movi.n	a2, 0
400d9fc3:	f01d      	retw.n
400d9fc5:	000000        	ill

400d9fc8 <uart_return_char>:
400d9fc8:	004136        	entry	a1, 32
400d9fcb:	d93581        	l32r	a8, 400d04a0 <_flash_cache_start+0x488>
400d9fce:	a08280        	addx4	a8, a2, a8
400d9fd1:	0888      	l32i.n	a8, a8, 0
400d9fd3:	0e0826        	beqi	a8, -1, 400d9fe5 <uart_return_char+0x1d>
400d9fd6:	d95ed1        	l32r	a13, 400d0550 <_flash_cache_start+0x538>
400d9fd9:	d95ec1        	l32r	a12, 400d0554 <_flash_cache_start+0x53c>
400d9fdc:	cca0b2        	movi	a11, 204
400d9fdf:	d958a1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400d9fe2:	00ef65        	call8	400daed8 <__assert_func>
400d9fe5:	d92e81        	l32r	a8, 400d04a0 <_flash_cache_start+0x488>
400d9fe8:	a02280        	addx4	a2, a2, a8
400d9feb:	0239      	s32i.n	a3, a2, 0
400d9fed:	f01d      	retw.n
	...

400d9ff0 <uart_read>:
400d9ff0:	004136        	entry	a1, 32
400d9ff3:	0e32b6        	bltui	a2, 3, 400da005 <uart_read+0x15>
400d9ff6:	d950d1        	l32r	a13, 400d0538 <_flash_cache_start+0x520>
400d9ff9:	d957c1        	l32r	a12, 400d0558 <_flash_cache_start+0x540>
400d9ffc:	d2a0b2        	movi	a11, 210
400d9fff:	d950a1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400da002:	00ed65        	call8	400daed8 <__assert_func>
400da005:	d95571        	l32r	a7, 400d055c <_flash_cache_start+0x544>
400da008:	a07270        	addx4	a7, a2, a7
400da00b:	07ad      	mov.n	a10, a7
400da00d:	aaaca5        	call8	40084ad8 <_lock_acquire_recursive>
400da010:	060c      	movi.n	a6, 0
400da012:	001646        	j	400da06f <uart_read+0x7f>
400da015:	000000        	ill
400da018:	20a220        	or	a10, a2, a2
400da01b:	ff4025        	call8	400d941c <uart_read_char>
400da01e:	0a5d      	mov.n	a5, a10
400da020:	d80c      	movi.n	a8, 13
400da022:	2e9a87        	bne	a10, a8, 400da054 <uart_read+0x64>
400da025:	d92981        	l32r	a8, 400d04cc <_flash_cache_start+0x4b4>
400da028:	a08280        	addx4	a8, a2, a8
400da02b:	0888      	l32i.n	a8, a8, 0
400da02d:	291826        	beqi	a8, 1, 400da05a <uart_read+0x6a>
400da030:	e8ec      	bnez.n	a8, 400da062 <uart_read+0x72>
400da032:	02ad      	mov.n	a10, a2
400da034:	ff3e65        	call8	400d941c <uart_read_char>
400da037:	090a66        	bnei	a10, -1, 400da044 <uart_read+0x54>
400da03a:	05bd      	mov.n	a11, a5
400da03c:	02ad      	mov.n	a10, a2
400da03e:	fff8a5        	call8	400d9fc8 <uart_return_char>
400da041:	000b46        	j	400da072 <uart_read+0x82>
400da044:	189a26        	beqi	a10, 10, 400da060 <uart_read+0x70>
400da047:	0abd      	mov.n	a11, a10
400da049:	02ad      	mov.n	a10, a2
400da04b:	fff7e5        	call8	400d9fc8 <uart_return_char>
400da04e:	000406        	j	400da062 <uart_read+0x72>
400da051:	000000        	ill
400da054:	0a0a66        	bnei	a10, -1, 400da062 <uart_read+0x72>
400da057:	0005c6        	j	400da072 <uart_read+0x82>
400da05a:	a50c      	movi.n	a5, 10
400da05c:	000086        	j	400da062 <uart_read+0x72>
400da05f:	a50c00        	extui	a0, a0, 28, 11
400da062:	836a      	add.n	a8, a3, a6
400da064:	004852        	s8i	a5, a8, 0
400da067:	0020c0        	memw
400da06a:	661b      	addi.n	a6, a6, 1
400da06c:	029526        	beqi	a5, 10, 400da072 <uart_read+0x82>
400da06f:	a53647        	bltu	a6, a4, 400da018 <uart_read+0x28>
400da072:	20a770        	or	a10, a7, a7
400da075:	aaa9e5        	call8	40084b14 <_lock_release_recursive>
400da078:	004616        	beqz	a6, 400da080 <uart_read+0x90>
400da07b:	202660        	or	a2, a6, a6
400da07e:	f01d      	retw.n
400da080:	00e8e5        	call8	400daf10 <__errno>
400da083:	0ba022        	movi	a2, 11
400da086:	006a22        	s32i	a2, a10, 0
400da089:	ffaf22        	movi	a2, -1
400da08c:	f01d      	retw.n
	...

400da090 <uart_write>:
400da090:	004136        	entry	a1, 32
400da093:	0e32b6        	bltui	a2, 3, 400da0a5 <uart_write+0x15>
400da096:	d928d1        	l32r	a13, 400d0538 <_flash_cache_start+0x520>
400da099:	d931c1        	l32r	a12, 400d0560 <_flash_cache_start+0x548>
400da09c:	a5a0b2        	movi	a11, 165
400da09f:	d928a1        	l32r	a10, 400d0540 <_flash_cache_start+0x528>
400da0a2:	00e365        	call8	400daed8 <__assert_func>
400da0a5:	d92f71        	l32r	a7, 400d0564 <_flash_cache_start+0x54c>
400da0a8:	a07270        	addx4	a7, a2, a7
400da0ab:	07ad      	mov.n	a10, a7
400da0ad:	aaa2a5        	call8	40084ad8 <_lock_acquire_recursive>
400da0b0:	050c      	movi.n	a5, 0
400da0b2:	000ec6        	j	400da0f1 <uart_write+0x61>
400da0b5:	635a      	add.n	a6, a3, a5
400da0b7:	000662        	l8ui	a6, a6, 0
400da0ba:	1f9666        	bnei	a6, 10, 400da0dd <uart_write+0x4d>
400da0bd:	d92a81        	l32r	a8, 400d0568 <_flash_cache_start+0x550>
400da0c0:	0888      	l32i.n	a8, a8, 0
400da0c2:	172826        	beqi	a8, 2, 400da0dd <uart_write+0x4d>
400da0c5:	d92981        	l32r	a8, 400d056c <_flash_cache_start+0x554>
400da0c8:	a08280        	addx4	a8, a2, a8
400da0cb:	0888      	l32i.n	a8, a8, 0
400da0cd:	db0c      	movi.n	a11, 13
400da0cf:	20a220        	or	a10, a2, a2
400da0d2:	0008e0        	callx8	a8
400da0d5:	d92481        	l32r	a8, 400d0568 <_flash_cache_start+0x550>
400da0d8:	0888      	l32i.n	a8, a8, 0
400da0da:	111826        	beqi	a8, 1, 400da0ef <uart_write+0x5f>
400da0dd:	d92381        	l32r	a8, 400d056c <_flash_cache_start+0x554>
400da0e0:	a08280        	addx4	a8, a2, a8
400da0e3:	002882        	l32i	a8, a8, 0
400da0e6:	20b660        	or	a11, a6, a6
400da0e9:	20a220        	or	a10, a2, a2
400da0ec:	0008e0        	callx8	a8
400da0ef:	551b      	addi.n	a5, a5, 1
400da0f1:	c03547        	bltu	a5, a4, 400da0b5 <uart_write+0x25>
400da0f4:	07ad      	mov.n	a10, a7
400da0f6:	aaa1e5        	call8	40084b14 <_lock_release_recursive>
400da0f9:	042d      	mov.n	a2, a4
400da0fb:	f01d      	retw.n
400da0fd:	000000        	ill

400da100 <esp_vfs_dev_uart_register>:
400da100:	018136        	entry	a1, 192
400da103:	94a022        	movi	a2, 148
400da106:	02cd      	mov.n	a12, a2
400da108:	0b0c      	movi.n	a11, 0
400da10a:	a1cb      	addi.n	a10, a1, 12
400da10c:	d7da81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400da10f:	0008e0        	callx8	a8
400da112:	d91781        	l32r	a8, 400d0570 <_flash_cache_start+0x558>
400da115:	4189      	s32i.n	a8, a1, 16
400da117:	f03d      	nop.n
400da119:	f03d      	nop.n
400da11b:	f03d      	nop.n
400da11d:	f03d      	nop.n
400da11f:	d91581        	l32r	a8, 400d0574 <_flash_cache_start+0x55c>
400da122:	6189      	s32i.n	a8, a1, 24
400da124:	f03d      	nop.n
400da126:	f03d      	nop.n
400da128:	f03d      	nop.n
400da12a:	f03d      	nop.n
400da12c:	d91381        	l32r	a8, 400d0578 <_flash_cache_start+0x560>
400da12f:	7189      	s32i.n	a8, a1, 28
400da131:	f03d      	nop.n
400da133:	f03d      	nop.n
400da135:	f03d      	nop.n
400da137:	f03d      	nop.n
400da139:	d91081        	l32r	a8, 400d057c <_flash_cache_start+0x564>
400da13c:	8189      	s32i.n	a8, a1, 32
400da13e:	f03d      	nop.n
400da140:	f03d      	nop.n
400da142:	f03d      	nop.n
400da144:	f03d      	nop.n
400da146:	d90e81        	l32r	a8, 400d0580 <_flash_cache_start+0x568>
400da149:	9189      	s32i.n	a8, a1, 36
400da14b:	f03d      	nop.n
400da14d:	f03d      	nop.n
400da14f:	f03d      	nop.n
400da151:	f03d      	nop.n
400da153:	d90c81        	l32r	a8, 400d0584 <_flash_cache_start+0x56c>
400da156:	166182        	s32i	a8, a1, 88
400da159:	f03d      	nop.n
400da15b:	f03d      	nop.n
400da15d:	f03d      	nop.n
400da15f:	f03d      	nop.n
400da161:	d90981        	l32r	a8, 400d0588 <_flash_cache_start+0x570>
400da164:	196182        	s32i	a8, a1, 100
400da167:	f03d      	nop.n
400da169:	f03d      	nop.n
400da16b:	f03d      	nop.n
400da16d:	f03d      	nop.n
400da16f:	d90781        	l32r	a8, 400d058c <_flash_cache_start+0x574>
400da172:	1b6182        	s32i	a8, a1, 108
400da175:	f03d      	nop.n
400da177:	f03d      	nop.n
400da179:	f03d      	nop.n
400da17b:	f03d      	nop.n
400da17d:	d90481        	l32r	a8, 400d0590 <_flash_cache_start+0x578>
400da180:	1c6182        	s32i	a8, a1, 112
400da183:	f03d      	nop.n
400da185:	f03d      	nop.n
400da187:	f03d      	nop.n
400da189:	f03d      	nop.n
400da18b:	d90281        	l32r	a8, 400d0594 <_flash_cache_start+0x57c>
400da18e:	1d6182        	s32i	a8, a1, 116
400da191:	f03d      	nop.n
400da193:	f03d      	nop.n
400da195:	f03d      	nop.n
400da197:	f03d      	nop.n
400da199:	d8ff81        	l32r	a8, 400d0598 <_flash_cache_start+0x580>
400da19c:	1e6182        	s32i	a8, a1, 120
400da19f:	f03d      	nop.n
400da1a1:	f03d      	nop.n
400da1a3:	f03d      	nop.n
400da1a5:	f03d      	nop.n
400da1a7:	d8fd81        	l32r	a8, 400d059c <_flash_cache_start+0x584>
400da1aa:	226182        	s32i	a8, a1, 136
400da1ad:	f03d      	nop.n
400da1af:	f03d      	nop.n
400da1b1:	f03d      	nop.n
400da1b3:	f03d      	nop.n
400da1b5:	d8fa81        	l32r	a8, 400d05a0 <_flash_cache_start+0x588>
400da1b8:	276182        	s32i	a8, a1, 156
400da1bb:	0c0c      	movi.n	a12, 0
400da1bd:	a0a032        	movi	a3, 160
400da1c0:	331a      	add.n	a3, a3, a1
400da1c2:	c0b320        	sub	a11, a3, a2
400da1c5:	d8f7a1        	l32r	a10, 400d05a4 <_flash_cache_start+0x58c>
400da1c8:	001fe5        	call8	400da3c8 <esp_vfs_register>
400da1cb:	da8c      	beqz.n	a10, 400da1dc <esp_vfs_dev_uart_register+0xdc>
400da1cd:	d8f6e1        	l32r	a14, 400d05a8 <_flash_cache_start+0x590>
400da1d0:	d8f7d1        	l32r	a13, 400d05ac <_flash_cache_start+0x594>
400da1d3:	8ba3c2        	movi	a12, 0x38b
400da1d6:	d8dab1        	l32r	a11, 400d0540 <_flash_cache_start+0x528>
400da1d9:	b146a5        	call8	4008b644 <_esp_error_check_failed>
400da1dc:	f01d      	retw.n
	...

400da1e0 <get_vfs_for_fd>:
400da1e0:	004136        	entry	a1, 32
400da1e3:	f83c      	movi.n	a8, 63
400da1e5:	2b3827        	bltu	a8, a2, 400da214 <get_vfs_for_fd+0x34>
400da1e8:	902220        	addx2	a2, a2, a2
400da1eb:	d8f181        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400da1ee:	282a      	add.n	a2, a8, a2
400da1f0:	010222        	l8ui	a2, a2, 1
400da1f3:	238200        	sext	a8, a2, 7
400da1f6:	012896        	bltz	a8, 400da20c <get_vfs_for_fd+0x2c>
400da1f9:	d8ee91        	l32r	a9, 400d05b4 <_flash_cache_start+0x59c>
400da1fc:	0998      	l32i.n	a9, a9, 0
400da1fe:	0eb897        	bgeu	a8, a9, 400da210 <get_vfs_for_fd+0x30>
400da201:	d8ed21        	l32r	a2, 400d05b8 <_flash_cache_start+0x5a0>
400da204:	a08820        	addx4	a8, a8, a2
400da207:	0828      	l32i.n	a2, a8, 0
400da209:	f01d      	retw.n
400da20b:	020c00        	andb	b0, b12, b0
400da20e:	f01d      	retw.n
400da210:	020c      	movi.n	a2, 0
400da212:	f01d      	retw.n
400da214:	020c      	movi.n	a2, 0
400da216:	f01d      	retw.n

400da218 <esp_vfs_register_common>:
400da218:	006136        	entry	a1, 48
400da21b:	390326        	beqi	a3, -1, 400da258 <esp_vfs_register_common+0x40>
400da21e:	830b      	addi.n	a8, a3, -1
400da220:	170c      	movi.n	a7, 1
400da222:	090c      	movi.n	a9, 0
400da224:	839780        	moveqz	a9, a7, a8
400da227:	748090        	extui	a8, a9, 0, 8
400da22a:	f90c      	movi.n	a9, 15
400da22c:	013937        	bltu	a9, a3, 400da231 <esp_vfs_register_common+0x19>
400da22f:	070c      	movi.n	a7, 0
400da231:	747070        	extui	a7, a7, 0, 8
400da234:	207870        	or	a7, a8, a7
400da237:	0ba756        	bnez	a7, 400da2f5 <esp_vfs_register_common+0xdd>
400da23a:	00b316        	beqz	a3, 400da249 <esp_vfs_register_common+0x31>
400da23d:	000282        	l8ui	a8, a2, 0
400da240:	2fa072        	movi	a7, 47
400da243:	021877        	beq	a8, a7, 400da249 <esp_vfs_register_common+0x31>
400da246:	002c86        	j	400da2fc <esp_vfs_register_common+0xe4>
400da249:	730b      	addi.n	a7, a3, -1
400da24b:	727a      	add.n	a7, a2, a7
400da24d:	000782        	l8ui	a8, a7, 0
400da250:	f72c      	movi.n	a7, 47
400da252:	029877        	bne	a8, a7, 400da258 <esp_vfs_register_common+0x40>
400da255:	002a06        	j	400da301 <esp_vfs_register_common+0xe9>
400da258:	b0a0a2        	movi	a10, 176
400da25b:	d7a481        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400da25e:	0008e0        	callx8	a8
400da261:	31a9      	s32i.n	a10, a1, 12
400da263:	0a1a16        	beqz	a10, 400da308 <esp_vfs_register_common+0xf0>
400da266:	070c      	movi.n	a7, 0
400da268:	000306        	j	400da278 <esp_vfs_register_common+0x60>
400da26b:	d38100        	movt	a8, a1, b0
400da26e:	80d8      	l32i.n	a13, a0, 32
400da270:	88a087        	bge	a0, a8, 400da1fc <get_vfs_for_fd+0x1c>
400da273:	8c08      	l32i.n	a0, a12, 32
400da275:	1b88      	l32i.n	a8, a11, 4
400da277:	cf8177        	bany	a1, a7, 400da24a <esp_vfs_register_common+0x32>
400da27a:	98d8      	l32i.n	a13, a8, 36
400da27c:	9708      	l32i.n	a0, a7, 36
400da27e:	97eb37        	bbsi	a11, 3, 400da219 <esp_vfs_register_common+0x1>
400da281:	b61897        	beq	a8, a9, 400da23b <esp_vfs_register_common+0x23>
400da284:	0e89      	s32i.n	a8, a14, 0
400da286:	31a8      	l32i.n	a10, a1, 12
400da288:	d78381        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400da28b:	0008e0        	callx8	a8
400da28e:	01a122        	movi	a2, 0x101
400da291:	f01d      	retw.n
400da293:	1b0000        	un.s	b0, f0, f0
400da296:	8199      	s32i.n	a9, a1, 32
400da298:	99d8c7        	bbs	a8, a12, 400da235 <esp_vfs_register_common+0x1d>
400da29b:	3d08      	l32i.n	a0, a13, 12
400da29d:	f03df0        	subx8	a3, a13, a15
400da2a0:	f03d      	nop.n
400da2a2:	f03d      	nop.n
400da2a4:	d8c581        	l32r	a8, 400d05b8 <_flash_cache_start+0x5a0>
400da2a7:	a08780        	addx4	a8, a7, a8
400da2aa:	3198      	l32i.n	a9, a1, 12
400da2ac:	0899      	s32i.n	a9, a8, 0
400da2ae:	120326        	beqi	a3, -1, 400da2c4 <esp_vfs_register_common+0xac>
400da2b1:	20b220        	or	a11, a2, a2
400da2b4:	94a0a2        	movi	a10, 148
400da2b7:	80a9a0        	add	a10, a9, a10
400da2ba:	d8c081        	l32r	a8, 400d05bc <_flash_cache_start+0x5a4>
400da2bd:	0008e0        	callx8	a8
400da2c0:	000446        	j	400da2d5 <esp_vfs_register_common+0xbd>
400da2c3:	fc0c00        	lsi	f0, a12, 0x3f0
400da2c6:	0b0c      	movi.n	a11, 0
400da2c8:	94a0a2        	movi	a10, 148
400da2cb:	3128      	l32i.n	a2, a1, 12
400da2cd:	a2aa      	add.n	a10, a2, a10
400da2cf:	d76981        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400da2d2:	0008e0        	callx8	a8
400da2d5:	94a0c2        	movi	a12, 148
400da2d8:	04bd      	mov.n	a11, a4
400da2da:	31a8      	l32i.n	a10, a1, 12
400da2dc:	d76f81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400da2df:	0008e0        	callx8	a8
400da2e2:	3128      	l32i.n	a2, a1, 12
400da2e4:	296232        	s32i	a3, a2, 164
400da2e7:	2a6252        	s32i	a5, a2, 168
400da2ea:	2b6272        	s32i	a7, a2, 172
400da2ed:	c69c      	beqz.n	a6, 400da30d <esp_vfs_register_common+0xf5>
400da2ef:	0679      	s32i.n	a7, a6, 0
400da2f1:	020c      	movi.n	a2, 0
400da2f3:	f01d      	retw.n
400da2f5:	02a122        	movi	a2, 0x102
400da2f8:	f01d      	retw.n
400da2fa:	220000        	orb	b0, b0, b0
400da2fd:	1d02a1        	l32r	a10, 400a1708 <_iram_end+0x13bb4>
400da300:	a122f0        	lsi	f15, a2, 0x284
400da303:	f01d02        	l16ui	a0, a13, 0x1e0
400da306:	220000        	orb	b0, b0, b0
400da309:	1d01a1        	l32r	a10, 400a1710 <_iram_end+0x13bbc>
400da30c:	020cf0        	andb	b0, b12, b15
400da30f:	f01d      	retw.n
400da311:	000000        	ill

400da314 <get_vfs_for_path>:
400da314:	006136        	entry	a1, 48
400da317:	20a220        	or	a10, a2, a2
400da31a:	d75b81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400da31d:	0008e0        	callx8	a8
400da320:	0a6d      	mov.n	a6, a10
400da322:	030c      	movi.n	a3, 0
400da324:	f47c      	movi.n	a4, -1
400da326:	3149      	s32i.n	a4, a1, 12
400da328:	037d      	mov.n	a7, a3
400da32a:	001286        	j	400da378 <get_vfs_for_path+0x64>
400da32d:	d8a241        	l32r	a4, 400d05b8 <_flash_cache_start+0x5a0>
400da330:	a04340        	addx4	a4, a3, a4
400da333:	0448      	l32i.n	a4, a4, 0
400da335:	d4bc      	beqz.n	a4, 400da376 <get_vfs_for_path+0x62>
400da337:	292452        	l32i	a5, a4, 164
400da33a:	380526        	beqi	a5, -1, 400da376 <get_vfs_for_path+0x62>
400da33d:	353657        	bltu	a6, a5, 400da376 <get_vfs_for_path+0x62>
400da340:	20c550        	or	a12, a5, a5
400da343:	94a0b2        	movi	a11, 148
400da346:	80b4b0        	add	a11, a4, a11
400da349:	20a220        	or	a10, a2, a2
400da34c:	d89d81        	l32r	a8, 400d05c0 <_flash_cache_start+0x5a8>
400da34f:	0008e0        	callx8	a8
400da352:	0aec      	bnez.n	a10, 400da376 <get_vfs_for_path+0x62>
400da354:	05cc      	bnez.n	a5, 400da358 <get_vfs_for_path+0x44>
400da356:	379c      	beqz.n	a7, 400da36d <get_vfs_for_path+0x59>
400da358:	09b567        	bgeu	a5, a6, 400da365 <get_vfs_for_path+0x51>
400da35b:	825a      	add.n	a8, a2, a5
400da35d:	000892        	l8ui	a9, a8, 0
400da360:	f82c      	movi.n	a8, 47
400da362:	109987        	bne	a9, a8, 400da376 <get_vfs_for_path+0x62>
400da365:	3188      	l32i.n	a8, a1, 12
400da367:	072857        	blt	a8, a5, 400da372 <get_vfs_for_path+0x5e>
400da36a:	000206        	j	400da376 <get_vfs_for_path+0x62>
400da36d:	047d      	mov.n	a7, a4
400da36f:	0000c6        	j	400da376 <get_vfs_for_path+0x62>
400da372:	3159      	s32i.n	a5, a1, 12
400da374:	047d      	mov.n	a7, a4
400da376:	331b      	addi.n	a3, a3, 1
400da378:	f03d      	nop.n
400da37a:	f03d      	nop.n
400da37c:	d88e41        	l32r	a4, 400d05b4 <_flash_cache_start+0x59c>
400da37f:	0448      	l32i.n	a4, a4, 0
400da381:	a83347        	bltu	a3, a4, 400da32d <get_vfs_for_path+0x19>
400da384:	072d      	mov.n	a2, a7
400da386:	f01d      	retw.n

400da388 <translate_path>:
400da388:	004136        	entry	a1, 32
400da38b:	292242        	l32i	a4, a2, 164
400da38e:	20c440        	or	a12, a4, a4
400da391:	94a0b2        	movi	a11, 148
400da394:	80b2b0        	add	a11, a2, a11
400da397:	20a330        	or	a10, a3, a3
400da39a:	d81381        	l32r	a8, 400d03e8 <_flash_cache_start+0x3d0>
400da39d:	0008e0        	callx8	a8
400da3a0:	da8c      	beqz.n	a10, 400da3b1 <translate_path+0x29>
400da3a2:	d889d1        	l32r	a13, 400d05c8 <_flash_cache_start+0x5b0>
400da3a5:	d889c1        	l32r	a12, 400d05cc <_flash_cache_start+0x5b4>
400da3a8:	1da1b2        	movi	a11, 0x11d
400da3ab:	d889a1        	l32r	a10, 400d05d0 <_flash_cache_start+0x5b8>
400da3ae:	00b2a5        	call8	400daed8 <__assert_func>
400da3b1:	03ad      	mov.n	a10, a3
400da3b3:	d73581        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400da3b6:	0008e0        	callx8	a8
400da3b9:	0314a7        	beq	a4, a10, 400da3c0 <translate_path+0x38>
400da3bc:	234a      	add.n	a2, a3, a4
400da3be:	f01d      	retw.n
400da3c0:	d88121        	l32r	a2, 400d05c4 <_flash_cache_start+0x5ac>
400da3c3:	f01d      	retw.n
400da3c5:	000000        	ill

400da3c8 <esp_vfs_register>:
400da3c8:	004136        	entry	a1, 32
400da3cb:	02ad      	mov.n	a10, a2
400da3cd:	d72e81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400da3d0:	0008e0        	callx8	a8
400da3d3:	0e0c      	movi.n	a14, 0
400da3d5:	04dd      	mov.n	a13, a4
400da3d7:	03cd      	mov.n	a12, a3
400da3d9:	0abd      	mov.n	a11, a10
400da3db:	02ad      	mov.n	a10, a2
400da3dd:	ffe3a5        	call8	400da218 <esp_vfs_register_common>
400da3e0:	0a2d      	mov.n	a2, a10
400da3e2:	f01d      	retw.n

400da3e4 <esp_vfs_open>:
400da3e4:	004136        	entry	a1, 32
400da3e7:	03ad      	mov.n	a10, a3
400da3e9:	fff2a5        	call8	400da314 <get_vfs_for_path>
400da3ec:	0a6d      	mov.n	a6, a10
400da3ee:	6acc      	bnez.n	a10, 400da3f8 <esp_vfs_open+0x14>
400da3f0:	230c      	movi.n	a3, 2
400da3f2:	0239      	s32i.n	a3, a2, 0
400da3f4:	f27c      	movi.n	a2, -1
400da3f6:	f01d      	retw.n
400da3f8:	20b330        	or	a11, a3, a3
400da3fb:	fff8e5        	call8	400da388 <translate_path>
400da3fe:	042632        	l32i	a3, a6, 16
400da401:	007356        	bnez	a3, 400da40c <esp_vfs_open+0x28>
400da404:	835c      	movi.n	a3, 88
400da406:	0239      	s32i.n	a3, a2, 0
400da408:	f27c      	movi.n	a2, -1
400da40a:	f01d      	retw.n
400da40c:	0688      	l32i.n	a8, a6, 0
400da40e:	106807        	bbci	a8, 0, 400da422 <esp_vfs_open+0x3e>
400da411:	05dd      	mov.n	a13, a5
400da413:	04cd      	mov.n	a12, a4
400da415:	0abd      	mov.n	a11, a10
400da417:	2a26a2        	l32i	a10, a6, 168
400da41a:	0003e0        	callx8	a3
400da41d:	0a4d      	mov.n	a4, a10
400da41f:	000206        	j	400da42b <esp_vfs_open+0x47>
400da422:	05cd      	mov.n	a12, a5
400da424:	04bd      	mov.n	a11, a4
400da426:	0003e0        	callx8	a3
400da429:	0a4d      	mov.n	a4, a10
400da42b:	08a496        	bltz	a4, 400da4b9 <esp_vfs_open+0xd5>
400da42e:	d869a1        	l32r	a10, 400d05d4 <_flash_cache_start+0x5bc>
400da431:	aa6965        	call8	40084ac8 <_lock_acquire>
400da434:	030c      	movi.n	a3, 0
400da436:	001246        	j	400da483 <esp_vfs_open+0x9f>
400da439:	908330        	addx2	a8, a3, a3
400da43c:	d85d91        	l32r	a9, 400d05b0 <_flash_cache_start+0x598>
400da43f:	808980        	add	a8, a9, a8
400da442:	010882        	l8ui	a8, a8, 1
400da445:	238800        	sext	a8, a8, 7
400da448:	340866        	bnei	a8, -1, 400da480 <esp_vfs_open+0x9c>
400da44b:	902330        	addx2	a2, a3, a3
400da44e:	802920        	add	a2, a9, a2
400da451:	00a052        	movi	a5, 0
400da454:	004252        	s8i	a5, a2, 0
400da457:	0020c0        	memw
400da45a:	f03d      	nop.n
400da45c:	f03d      	nop.n
400da45e:	f03d      	nop.n
400da460:	f03d      	nop.n
400da462:	2b2652        	l32i	a5, a6, 172
400da465:	014252        	s8i	a5, a2, 1
400da468:	024242        	s8i	a4, a2, 2
400da46b:	0020c0        	memw
400da46e:	f03d      	nop.n
400da470:	f03d      	nop.n
400da472:	f03d      	nop.n
400da474:	f03d      	nop.n
400da476:	d857a1        	l32r	a10, 400d05d4 <_flash_cache_start+0x5bc>
400da479:	aa68e5        	call8	40084b08 <_lock_release>
400da47c:	032d      	mov.n	a2, a3
400da47e:	f01d      	retw.n
400da480:	01c332        	addi	a3, a3, 1
400da483:	3fa082        	movi	a8, 63
400da486:	afa837        	bge	a8, a3, 400da439 <esp_vfs_open+0x55>
400da489:	d852a1        	l32r	a10, 400d05d4 <_flash_cache_start+0x5bc>
400da48c:	aa67a5        	call8	40084b08 <_lock_release>
400da48f:	052632        	l32i	a3, a6, 20
400da492:	63cc      	bnez.n	a3, 400da49c <esp_vfs_open+0xb8>
400da494:	835c      	movi.n	a3, 88
400da496:	0239      	s32i.n	a3, a2, 0
400da498:	f27c      	movi.n	a2, -1
400da49a:	f01d      	retw.n
400da49c:	0658      	l32i.n	a5, a6, 0
400da49e:	0a6507        	bbci	a5, 0, 400da4ac <esp_vfs_open+0xc8>
400da4a1:	04bd      	mov.n	a11, a4
400da4a3:	2a26a2        	l32i	a10, a6, 168
400da4a6:	0003e0        	callx8	a3
400da4a9:	000106        	j	400da4b1 <esp_vfs_open+0xcd>
400da4ac:	04ad      	mov.n	a10, a4
400da4ae:	0003e0        	callx8	a3
400da4b1:	c30c      	movi.n	a3, 12
400da4b3:	0239      	s32i.n	a3, a2, 0
400da4b5:	f27c      	movi.n	a2, -1
400da4b7:	f01d      	retw.n
400da4b9:	230c      	movi.n	a3, 2
400da4bb:	0239      	s32i.n	a3, a2, 0
400da4bd:	f27c      	movi.n	a2, -1
400da4bf:	f01d      	retw.n
400da4c1:	000000        	ill

400da4c4 <esp_vfs_write>:
400da4c4:	004136        	entry	a1, 32
400da4c7:	03ad      	mov.n	a10, a3
400da4c9:	ffd165        	call8	400da1e0 <get_vfs_for_fd>
400da4cc:	1a9c      	beqz.n	a10, 400da4e1 <esp_vfs_write+0x1d>
400da4ce:	f83c      	movi.n	a8, 63
400da4d0:	123837        	bltu	a8, a3, 400da4e6 <esp_vfs_write+0x22>
400da4d3:	903330        	addx2	a3, a3, a3
400da4d6:	d83681        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400da4d9:	383a      	add.n	a3, a8, a3
400da4db:	020392        	l8ui	a9, a3, 2
400da4de:	000186        	j	400da4e8 <esp_vfs_write+0x24>
400da4e1:	f97c      	movi.n	a9, -1
400da4e3:	000046        	j	400da4e8 <esp_vfs_write+0x24>
400da4e6:	f97c      	movi.n	a9, -1
400da4e8:	080c      	movi.n	a8, 0
400da4ea:	130c      	movi.n	a3, 1
400da4ec:	8383a0        	moveqz	a8, a3, a10
400da4ef:	053f90        	extui	a3, a9, 31, 1
400da4f2:	203830        	or	a3, a8, a3
400da4f5:	738c      	beqz.n	a3, 400da500 <esp_vfs_write+0x3c>
400da4f7:	930c      	movi.n	a3, 9
400da4f9:	0239      	s32i.n	a3, a2, 0
400da4fb:	f27c      	movi.n	a2, -1
400da4fd:	f01d      	retw.n
400da4ff:	1a3800        	sub.s	f3, f8, f0
400da502:	63cc      	bnez.n	a3, 400da50c <esp_vfs_write+0x48>
400da504:	835c      	movi.n	a3, 88
400da506:	0239      	s32i.n	a3, a2, 0
400da508:	f27c      	movi.n	a2, -1
400da50a:	f01d      	retw.n
400da50c:	0a28      	l32i.n	a2, a10, 0
400da50e:	0f6207        	bbci	a2, 0, 400da521 <esp_vfs_write+0x5d>
400da511:	05dd      	mov.n	a13, a5
400da513:	04cd      	mov.n	a12, a4
400da515:	09bd      	mov.n	a11, a9
400da517:	2a2aa2        	l32i	a10, a10, 168
400da51a:	0003e0        	callx8	a3
400da51d:	0a2d      	mov.n	a2, a10
400da51f:	f01d      	retw.n
400da521:	05cd      	mov.n	a12, a5
400da523:	04bd      	mov.n	a11, a4
400da525:	09ad      	mov.n	a10, a9
400da527:	0003e0        	callx8	a3
400da52a:	0a2d      	mov.n	a2, a10
400da52c:	f01d      	retw.n
	...

400da530 <esp_vfs_lseek>:
400da530:	004136        	entry	a1, 32
400da533:	03ad      	mov.n	a10, a3
400da535:	ffcaa5        	call8	400da1e0 <get_vfs_for_fd>
400da538:	1a9c      	beqz.n	a10, 400da54d <esp_vfs_lseek+0x1d>
400da53a:	f83c      	movi.n	a8, 63
400da53c:	123837        	bltu	a8, a3, 400da552 <esp_vfs_lseek+0x22>
400da53f:	903330        	addx2	a3, a3, a3
400da542:	d81b81        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400da545:	383a      	add.n	a3, a8, a3
400da547:	020392        	l8ui	a9, a3, 2
400da54a:	000186        	j	400da554 <esp_vfs_lseek+0x24>
400da54d:	f97c      	movi.n	a9, -1
400da54f:	000046        	j	400da554 <esp_vfs_lseek+0x24>
400da552:	f97c      	movi.n	a9, -1
400da554:	080c      	movi.n	a8, 0
400da556:	130c      	movi.n	a3, 1
400da558:	8383a0        	moveqz	a8, a3, a10
400da55b:	053f90        	extui	a3, a9, 31, 1
400da55e:	203830        	or	a3, a8, a3
400da561:	738c      	beqz.n	a3, 400da56c <esp_vfs_lseek+0x3c>
400da563:	930c      	movi.n	a3, 9
400da565:	0239      	s32i.n	a3, a2, 0
400da567:	f27c      	movi.n	a2, -1
400da569:	f01d      	retw.n
400da56b:	2a3800        	mul.s	f3, f8, f0
400da56e:	63cc      	bnez.n	a3, 400da578 <esp_vfs_lseek+0x48>
400da570:	835c      	movi.n	a3, 88
400da572:	0239      	s32i.n	a3, a2, 0
400da574:	f27c      	movi.n	a2, -1
400da576:	f01d      	retw.n
400da578:	0a28      	l32i.n	a2, a10, 0
400da57a:	0f6207        	bbci	a2, 0, 400da58d <esp_vfs_lseek+0x5d>
400da57d:	05dd      	mov.n	a13, a5
400da57f:	04cd      	mov.n	a12, a4
400da581:	09bd      	mov.n	a11, a9
400da583:	2a2aa2        	l32i	a10, a10, 168
400da586:	0003e0        	callx8	a3
400da589:	0a2d      	mov.n	a2, a10
400da58b:	f01d      	retw.n
400da58d:	05cd      	mov.n	a12, a5
400da58f:	04bd      	mov.n	a11, a4
400da591:	09ad      	mov.n	a10, a9
400da593:	0003e0        	callx8	a3
400da596:	0a2d      	mov.n	a2, a10
400da598:	f01d      	retw.n
	...

400da59c <esp_vfs_read>:
400da59c:	004136        	entry	a1, 32
400da59f:	03ad      	mov.n	a10, a3
400da5a1:	ffc3e5        	call8	400da1e0 <get_vfs_for_fd>
400da5a4:	1a9c      	beqz.n	a10, 400da5b9 <esp_vfs_read+0x1d>
400da5a6:	f83c      	movi.n	a8, 63
400da5a8:	123837        	bltu	a8, a3, 400da5be <esp_vfs_read+0x22>
400da5ab:	903330        	addx2	a3, a3, a3
400da5ae:	d80081        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400da5b1:	383a      	add.n	a3, a8, a3
400da5b3:	020392        	l8ui	a9, a3, 2
400da5b6:	000186        	j	400da5c0 <esp_vfs_read+0x24>
400da5b9:	f97c      	movi.n	a9, -1
400da5bb:	000046        	j	400da5c0 <esp_vfs_read+0x24>
400da5be:	f97c      	movi.n	a9, -1
400da5c0:	080c      	movi.n	a8, 0
400da5c2:	130c      	movi.n	a3, 1
400da5c4:	8383a0        	moveqz	a8, a3, a10
400da5c7:	053f90        	extui	a3, a9, 31, 1
400da5ca:	203830        	or	a3, a8, a3
400da5cd:	738c      	beqz.n	a3, 400da5d8 <esp_vfs_read+0x3c>
400da5cf:	930c      	movi.n	a3, 9
400da5d1:	0239      	s32i.n	a3, a2, 0
400da5d3:	f27c      	movi.n	a2, -1
400da5d5:	f01d      	retw.n
400da5d7:	3a3800        	lsi	f0, a8, 232
400da5da:	63cc      	bnez.n	a3, 400da5e4 <esp_vfs_read+0x48>
400da5dc:	835c      	movi.n	a3, 88
400da5de:	0239      	s32i.n	a3, a2, 0
400da5e0:	f27c      	movi.n	a2, -1
400da5e2:	f01d      	retw.n
400da5e4:	0a28      	l32i.n	a2, a10, 0
400da5e6:	0f6207        	bbci	a2, 0, 400da5f9 <esp_vfs_read+0x5d>
400da5e9:	05dd      	mov.n	a13, a5
400da5eb:	04cd      	mov.n	a12, a4
400da5ed:	09bd      	mov.n	a11, a9
400da5ef:	2a2aa2        	l32i	a10, a10, 168
400da5f2:	0003e0        	callx8	a3
400da5f5:	0a2d      	mov.n	a2, a10
400da5f7:	f01d      	retw.n
400da5f9:	05cd      	mov.n	a12, a5
400da5fb:	04bd      	mov.n	a11, a4
400da5fd:	09ad      	mov.n	a10, a9
400da5ff:	0003e0        	callx8	a3
400da602:	0a2d      	mov.n	a2, a10
400da604:	f01d      	retw.n
	...

400da608 <esp_vfs_close>:
400da608:	004136        	entry	a1, 32
400da60b:	03ad      	mov.n	a10, a3
400da60d:	ffbd25        	call8	400da1e0 <get_vfs_for_fd>
400da610:	1a9c      	beqz.n	a10, 400da625 <esp_vfs_close+0x1d>
400da612:	f83c      	movi.n	a8, 63
400da614:	123837        	bltu	a8, a3, 400da62a <esp_vfs_close+0x22>
400da617:	908330        	addx2	a8, a3, a3
400da61a:	d7e591        	l32r	a9, 400d05b0 <_flash_cache_start+0x598>
400da61d:	898a      	add.n	a8, a9, a8
400da61f:	0208b2        	l8ui	a11, a8, 2
400da622:	000186        	j	400da62c <esp_vfs_close+0x24>
400da625:	fb7c      	movi.n	a11, -1
400da627:	000046        	j	400da62c <esp_vfs_close+0x24>
400da62a:	fb7c      	movi.n	a11, -1
400da62c:	090c      	movi.n	a9, 0
400da62e:	180c      	movi.n	a8, 1
400da630:	8398a0        	moveqz	a9, a8, a10
400da633:	058fb0        	extui	a8, a11, 31, 1
400da636:	208980        	or	a8, a9, a8
400da639:	788c      	beqz.n	a8, 400da644 <esp_vfs_close+0x3c>
400da63b:	930c      	movi.n	a3, 9
400da63d:	0239      	s32i.n	a3, a2, 0
400da63f:	f27c      	movi.n	a2, -1
400da641:	f01d      	retw.n
400da643:	5a8800        	msub.s	f8, f8, f0
400da646:	78cc      	bnez.n	a8, 400da651 <esp_vfs_close+0x49>
400da648:	835c      	movi.n	a3, 88
400da64a:	0239      	s32i.n	a3, a2, 0
400da64c:	f27c      	movi.n	a2, -1
400da64e:	f01d      	retw.n
400da650:	0a2800        	add.s	f2, f8, f0
400da653:	0a6207        	bbci	a2, 0, 400da661 <esp_vfs_close+0x59>
400da656:	2a2aa2        	l32i	a10, a10, 168
400da659:	0008e0        	callx8	a8
400da65c:	0a2d      	mov.n	a2, a10
400da65e:	000206        	j	400da66a <esp_vfs_close+0x62>
400da661:	20abb0        	or	a10, a11, a11
400da664:	0008e0        	callx8	a8
400da667:	202aa0        	or	a2, a10, a10
400da66a:	d7daa1        	l32r	a10, 400d05d4 <_flash_cache_start+0x5bc>
400da66d:	aa45a5        	call8	40084ac8 <_lock_acquire>
400da670:	908330        	addx2	a8, a3, a3
400da673:	d7cf91        	l32r	a9, 400d05b0 <_flash_cache_start+0x598>
400da676:	808980        	add	a8, a9, a8
400da679:	000882        	l8ui	a8, a8, 0
400da67c:	68ec      	bnez.n	a8, 400da6a6 <esp_vfs_close+0x9e>
400da67e:	903330        	addx2	a3, a3, a3
400da681:	393a      	add.n	a3, a9, a3
400da683:	d7d581        	l32r	a8, 400d05d8 <_flash_cache_start+0x5c0>
400da686:	0008a2        	l8ui	a10, a8, 0
400da689:	010892        	l8ui	a9, a8, 1
400da68c:	0043a2        	s8i	a10, a3, 0
400da68f:	0020c0        	memw
400da692:	f03d      	nop.n
400da694:	f03d      	nop.n
400da696:	f03d      	nop.n
400da698:	f03d      	nop.n
400da69a:	020882        	l8ui	a8, a8, 2
400da69d:	014392        	s8i	a9, a3, 1
400da6a0:	024382        	s8i	a8, a3, 2
400da6a3:	0020c0        	memw
400da6a6:	f03d      	nop.n
400da6a8:	f03d      	nop.n
400da6aa:	f03d      	nop.n
400da6ac:	0020f0        	nop
400da6af:	d7c9a1        	l32r	a10, 400d05d4 <_flash_cache_start+0x5bc>
400da6b2:	aa4565        	call8	40084b08 <_lock_release>
400da6b5:	f01d      	retw.n
	...

400da6b8 <esp_vfs_fstat>:
400da6b8:	004136        	entry	a1, 32
400da6bb:	03ad      	mov.n	a10, a3
400da6bd:	ffb225        	call8	400da1e0 <get_vfs_for_fd>
400da6c0:	1a9c      	beqz.n	a10, 400da6d5 <esp_vfs_fstat+0x1d>
400da6c2:	f83c      	movi.n	a8, 63
400da6c4:	123837        	bltu	a8, a3, 400da6da <esp_vfs_fstat+0x22>
400da6c7:	903330        	addx2	a3, a3, a3
400da6ca:	d7b981        	l32r	a8, 400d05b0 <_flash_cache_start+0x598>
400da6cd:	383a      	add.n	a3, a8, a3
400da6cf:	020392        	l8ui	a9, a3, 2
400da6d2:	000186        	j	400da6dc <esp_vfs_fstat+0x24>
400da6d5:	f97c      	movi.n	a9, -1
400da6d7:	000046        	j	400da6dc <esp_vfs_fstat+0x24>
400da6da:	f97c      	movi.n	a9, -1
400da6dc:	080c      	movi.n	a8, 0
400da6de:	130c      	movi.n	a3, 1
400da6e0:	8383a0        	moveqz	a8, a3, a10
400da6e3:	053f90        	extui	a3, a9, 31, 1
400da6e6:	203830        	or	a3, a8, a3
400da6e9:	738c      	beqz.n	a3, 400da6f4 <esp_vfs_fstat+0x3c>
400da6eb:	930c      	movi.n	a3, 9
400da6ed:	0239      	s32i.n	a3, a2, 0
400da6ef:	f27c      	movi.n	a2, -1
400da6f1:	f01d      	retw.n
400da6f3:	6a3800        	maddn.s	f3, f8, f0
400da6f6:	73cc      	bnez.n	a3, 400da701 <esp_vfs_fstat+0x49>
400da6f8:	835c      	movi.n	a3, 88
400da6fa:	0239      	s32i.n	a3, a2, 0
400da6fc:	f27c      	movi.n	a2, -1
400da6fe:	f01d      	retw.n
400da700:	0a2800        	add.s	f2, f8, f0
400da703:	0e6207        	bbci	a2, 0, 400da715 <esp_vfs_fstat+0x5d>
400da706:	04cd      	mov.n	a12, a4
400da708:	09bd      	mov.n	a11, a9
400da70a:	2a2aa2        	l32i	a10, a10, 168
400da70d:	0003e0        	callx8	a3
400da710:	0a2d      	mov.n	a2, a10
400da712:	f01d      	retw.n
400da714:	04bd00        	extui	a11, a0, 13, 1
400da717:	09ad      	mov.n	a10, a9
400da719:	0003e0        	callx8	a3
400da71c:	0a2d      	mov.n	a2, a10
400da71e:	f01d      	retw.n

400da720 <esp_vfs_stat>:
400da720:	004136        	entry	a1, 32
400da723:	03ad      	mov.n	a10, a3
400da725:	ffbee5        	call8	400da314 <get_vfs_for_path>
400da728:	0a5d      	mov.n	a5, a10
400da72a:	6acc      	bnez.n	a10, 400da734 <esp_vfs_stat+0x14>
400da72c:	230c      	movi.n	a3, 2
400da72e:	0239      	s32i.n	a3, a2, 0
400da730:	f27c      	movi.n	a2, -1
400da732:	f01d      	retw.n
400da734:	20b330        	or	a11, a3, a3
400da737:	ffc525        	call8	400da388 <translate_path>
400da73a:	072532        	l32i	a3, a5, 28
400da73d:	008356        	bnez	a3, 400da749 <esp_vfs_stat+0x29>
400da740:	835c      	movi.n	a3, 88
400da742:	0239      	s32i.n	a3, a2, 0
400da744:	f27c      	movi.n	a2, -1
400da746:	f01d      	retw.n
400da748:	052800        	extui	a2, a0, 24, 1
400da74b:	0d6207        	bbci	a2, 0, 400da75c <esp_vfs_stat+0x3c>
400da74e:	04cd      	mov.n	a12, a4
400da750:	0abd      	mov.n	a11, a10
400da752:	2a25a2        	l32i	a10, a5, 168
400da755:	0003e0        	callx8	a3
400da758:	0a2d      	mov.n	a2, a10
400da75a:	f01d      	retw.n
400da75c:	04bd      	mov.n	a11, a4
400da75e:	0003e0        	callx8	a3
400da761:	0a2d      	mov.n	a2, a10
400da763:	f01d      	retw.n
400da765:	000000        	ill

400da768 <esp_vfs_link>:
400da768:	004136        	entry	a1, 32
400da76b:	03ad      	mov.n	a10, a3
400da76d:	ffba65        	call8	400da314 <get_vfs_for_path>
400da770:	0a5d      	mov.n	a5, a10
400da772:	6acc      	bnez.n	a10, 400da77c <esp_vfs_link+0x14>
400da774:	230c      	movi.n	a3, 2
400da776:	0239      	s32i.n	a3, a2, 0
400da778:	f27c      	movi.n	a2, -1
400da77a:	f01d      	retw.n
400da77c:	20a440        	or	a10, a4, a4
400da77f:	ffb965        	call8	400da314 <get_vfs_for_path>
400da782:	0a15a7        	beq	a5, a10, 400da790 <esp_vfs_link+0x28>
400da785:	12a032        	movi	a3, 18
400da788:	006232        	s32i	a3, a2, 0
400da78b:	f27c      	movi.n	a2, -1
400da78d:	f01d      	retw.n
400da78f:	b33000        	movgez	a3, a0, a0
400da792:	a55020        	extui	a5, a2, 16, 11
400da795:	bf2520        	f64cmph	a2, a5, a2, 11
400da798:	ff          	.byte 0xff
400da799:	0a6d      	mov.n	a6, a10
400da79b:	04bd      	mov.n	a11, a4
400da79d:	05ad      	mov.n	a10, a5
400da79f:	ffbea5        	call8	400da388 <translate_path>
400da7a2:	8538      	l32i.n	a3, a5, 32
400da7a4:	63cc      	bnez.n	a3, 400da7ae <esp_vfs_link+0x46>
400da7a6:	835c      	movi.n	a3, 88
400da7a8:	0239      	s32i.n	a3, a2, 0
400da7aa:	f27c      	movi.n	a2, -1
400da7ac:	f01d      	retw.n
400da7ae:	0528      	l32i.n	a2, a5, 0
400da7b0:	0d6207        	bbci	a2, 0, 400da7c1 <esp_vfs_link+0x59>
400da7b3:	0acd      	mov.n	a12, a10
400da7b5:	06bd      	mov.n	a11, a6
400da7b7:	2a25a2        	l32i	a10, a5, 168
400da7ba:	0003e0        	callx8	a3
400da7bd:	0a2d      	mov.n	a2, a10
400da7bf:	f01d      	retw.n
400da7c1:	0abd      	mov.n	a11, a10
400da7c3:	06ad      	mov.n	a10, a6
400da7c5:	0003e0        	callx8	a3
400da7c8:	0a2d      	mov.n	a2, a10
400da7ca:	f01d      	retw.n

400da7cc <esp_vfs_unlink>:
400da7cc:	004136        	entry	a1, 32
400da7cf:	03ad      	mov.n	a10, a3
400da7d1:	ffb425        	call8	400da314 <get_vfs_for_path>
400da7d4:	0a4d      	mov.n	a4, a10
400da7d6:	6acc      	bnez.n	a10, 400da7e0 <esp_vfs_unlink+0x14>
400da7d8:	230c      	movi.n	a3, 2
400da7da:	0239      	s32i.n	a3, a2, 0
400da7dc:	f27c      	movi.n	a2, -1
400da7de:	f01d      	retw.n
400da7e0:	20b330        	or	a11, a3, a3
400da7e3:	ffba65        	call8	400da388 <translate_path>
400da7e6:	092432        	l32i	a3, a4, 36
400da7e9:	007356        	bnez	a3, 400da7f4 <esp_vfs_unlink+0x28>
400da7ec:	835c      	movi.n	a3, 88
400da7ee:	0239      	s32i.n	a3, a2, 0
400da7f0:	f27c      	movi.n	a2, -1
400da7f2:	f01d      	retw.n
400da7f4:	0428      	l32i.n	a2, a4, 0
400da7f6:	0b6207        	bbci	a2, 0, 400da805 <esp_vfs_unlink+0x39>
400da7f9:	0abd      	mov.n	a11, a10
400da7fb:	2a24a2        	l32i	a10, a4, 168
400da7fe:	0003e0        	callx8	a3
400da801:	0a2d      	mov.n	a2, a10
400da803:	f01d      	retw.n
400da805:	0003e0        	callx8	a3
400da808:	0a2d      	mov.n	a2, a10
400da80a:	f01d      	retw.n

400da80c <esp_vfs_rename>:
400da80c:	004136        	entry	a1, 32
400da80f:	03ad      	mov.n	a10, a3
400da811:	ffb025        	call8	400da314 <get_vfs_for_path>
400da814:	0a5d      	mov.n	a5, a10
400da816:	6acc      	bnez.n	a10, 400da820 <esp_vfs_rename+0x14>
400da818:	230c      	movi.n	a3, 2
400da81a:	0239      	s32i.n	a3, a2, 0
400da81c:	f27c      	movi.n	a2, -1
400da81e:	f01d      	retw.n
400da820:	20a440        	or	a10, a4, a4
400da823:	ffaf25        	call8	400da314 <get_vfs_for_path>
400da826:	0a15a7        	beq	a5, a10, 400da834 <esp_vfs_rename+0x28>
400da829:	12a032        	movi	a3, 18
400da82c:	006232        	s32i	a3, a2, 0
400da82f:	f27c      	movi.n	a2, -1
400da831:	f01d      	retw.n
400da833:	b33000        	movgez	a3, a0, a0
400da836:	a55020        	extui	a5, a2, 16, 11
400da839:	b4e520        	extui	a14, a2, 5, 12
400da83c:	ff          	.byte 0xff
400da83d:	0a6d      	mov.n	a6, a10
400da83f:	04bd      	mov.n	a11, a4
400da841:	05ad      	mov.n	a10, a5
400da843:	ffb465        	call8	400da388 <translate_path>
400da846:	a538      	l32i.n	a3, a5, 40
400da848:	63cc      	bnez.n	a3, 400da852 <esp_vfs_rename+0x46>
400da84a:	835c      	movi.n	a3, 88
400da84c:	0239      	s32i.n	a3, a2, 0
400da84e:	f27c      	movi.n	a2, -1
400da850:	f01d      	retw.n
400da852:	0528      	l32i.n	a2, a5, 0
400da854:	0d6207        	bbci	a2, 0, 400da865 <esp_vfs_rename+0x59>
400da857:	0acd      	mov.n	a12, a10
400da859:	06bd      	mov.n	a11, a6
400da85b:	2a25a2        	l32i	a10, a5, 168
400da85e:	0003e0        	callx8	a3
400da861:	0a2d      	mov.n	a2, a10
400da863:	f01d      	retw.n
400da865:	0abd      	mov.n	a11, a10
400da867:	06ad      	mov.n	a10, a6
400da869:	0003e0        	callx8	a3
400da86c:	0a2d      	mov.n	a2, a10
400da86e:	f01d      	retw.n

400da870 <esp_vfs_select_triggered>:
400da870:	004136        	entry	a1, 32
400da873:	02a216        	beqz	a2, 400da8a1 <esp_vfs_select_triggered+0x31>
400da876:	0022a2        	l32i	a10, a2, 0
400da879:	029a16        	beqz	a10, 400da8a6 <esp_vfs_select_triggered+0x36>
400da87c:	0d0c      	movi.n	a13, 0
400da87e:	0dcd      	mov.n	a12, a13
400da880:	0dbd      	mov.n	a11, a13
400da882:	acf625        	call8	400877e4 <xQueueGenericSend>
400da885:	f01d      	retw.n
400da887:	4c9100        	lsi	f0, a1, 0x130
400da88a:	9890d7        	bne	a0, a13, 400da826 <esp_vfs_rename+0x1a>
400da88d:	0998a0        	l32e	a10, a8, -28
400da890:	898c      	beqz.n	a9, 400da89c <esp_vfs_select_triggered+0x2c>
400da892:	212992        	l32i	a9, a9, 132
400da895:	398c      	beqz.n	a9, 400da89c <esp_vfs_select_triggered+0x2c>
400da897:	0009e0        	callx8	a9
400da89a:	f01d      	retw.n
400da89c:	881b      	addi.n	a8, a8, 1
400da89e:	000186        	j	400da8a8 <esp_vfs_select_triggered+0x38>
400da8a1:	080c      	movi.n	a8, 0
400da8a3:	000046        	j	400da8a8 <esp_vfs_select_triggered+0x38>
400da8a6:	080c      	movi.n	a8, 0
400da8a8:	d74391        	l32r	a9, 400d05b4 <_flash_cache_start+0x59c>
400da8ab:	0998      	l32i.n	a9, a9, 0
400da8ad:	d73897        	bltu	a8, a9, 400da888 <esp_vfs_select_triggered+0x18>
400da8b0:	f01d      	retw.n
	...

400da8b4 <esp_vfs_select_triggered_isr>:
400da8b4:	004136        	entry	a1, 32
400da8b7:	028216        	beqz	a2, 400da8e3 <esp_vfs_select_triggered_isr+0x2f>
400da8ba:	0022a2        	l32i	a10, a2, 0
400da8bd:	027a16        	beqz	a10, 400da8e8 <esp_vfs_select_triggered_isr+0x34>
400da8c0:	03bd      	mov.n	a11, a3
400da8c2:	ad1e25        	call8	40087aa4 <xQueueGiveFromISR>
400da8c5:	f01d      	retw.n
400da8c7:	3c9100        	lsi	f0, a1, 240
400da8ca:	9890d7        	bne	a0, a13, 400da866 <esp_vfs_rename+0x5a>
400da8cd:	0998a0        	l32e	a10, a8, -28
400da8d0:	a98c      	beqz.n	a9, 400da8de <esp_vfs_select_triggered_isr+0x2a>
400da8d2:	222992        	l32i	a9, a9, 136
400da8d5:	598c      	beqz.n	a9, 400da8de <esp_vfs_select_triggered_isr+0x2a>
400da8d7:	03ad      	mov.n	a10, a3
400da8d9:	0009e0        	callx8	a9
400da8dc:	f01d      	retw.n
400da8de:	881b      	addi.n	a8, a8, 1
400da8e0:	000186        	j	400da8ea <esp_vfs_select_triggered_isr+0x36>
400da8e3:	080c      	movi.n	a8, 0
400da8e5:	000046        	j	400da8ea <esp_vfs_select_triggered_isr+0x36>
400da8e8:	080c      	movi.n	a8, 0
400da8ea:	d73291        	l32r	a9, 400d05b4 <_flash_cache_start+0x59c>
400da8ed:	0998      	l32i.n	a9, a9, 0
400da8ef:	d53897        	bltu	a8, a9, 400da8c8 <esp_vfs_select_triggered_isr+0x14>
400da8f2:	f01d      	retw.n

400da8f4 <heap_bubble_down>:
400da8f4:	006136        	entry	a1, 48
400da8f7:	001186        	j	400da941 <heap_bubble_down+0x4d>
400da8fa:	000000        	ill
400da8fd:	1192f0        	slli	a9, a2, 1
400da900:	b91b      	addi.n	a11, a9, 1
400da902:	992b      	addi.n	a9, a9, 2
400da904:	d73681        	l32r	a8, 400d05dc <_flash_cache_start+0x5c4>
400da907:	b0ab80        	addx8	a10, a11, a8
400da90a:	1aa8      	l32i.n	a10, a10, 4
400da90c:	41a3a0        	srli	a10, a10, 3
400da90f:	b08980        	addx8	a8, a9, a8
400da912:	1888      	l32i.n	a8, a8, 4
400da914:	418380        	srli	a8, a8, 3
400da917:	01aa87        	bge	a10, a8, 400da91c <heap_bubble_down+0x28>
400da91a:	0b9d      	mov.n	a9, a11
400da91c:	d73081        	l32r	a8, 400d05dc <_flash_cache_start+0x5c4>
400da91f:	b02280        	addx8	a2, a2, a8
400da922:	02b8      	l32i.n	a11, a2, 0
400da924:	12a8      	l32i.n	a10, a2, 4
400da926:	21b9      	s32i.n	a11, a1, 8
400da928:	31a9      	s32i.n	a10, a1, 12
400da92a:	b08980        	addx8	a8, a9, a8
400da92d:	f03d      	nop.n
400da92f:	f03d      	nop.n
400da931:	f03d      	nop.n
400da933:	08d8      	l32i.n	a13, a8, 0
400da935:	18c8      	l32i.n	a12, a8, 4
400da937:	02d9      	s32i.n	a13, a2, 0
400da939:	12c9      	s32i.n	a12, a2, 4
400da93b:	08b9      	s32i.n	a11, a8, 0
400da93d:	18a9      	s32i.n	a10, a8, 4
400da93f:	092d      	mov.n	a2, a9
400da941:	e80c      	movi.n	a8, 14
400da943:	b6a827        	bge	a8, a2, 400da8fd <heap_bubble_down+0x9>
400da946:	f01d      	retw.n

400da948 <esp_log_level_set>:
400da948:	004136        	entry	a1, 32
400da94b:	d72541        	l32r	a4, 400d05e0 <_flash_cache_start+0x5c8>
400da94e:	0448      	l32i.n	a4, a4, 0
400da950:	94cc      	bnez.n	a4, 400da95d <esp_log_level_set+0x15>
400da952:	01a0a2        	movi	a10, 1
400da955:	ad0165        	call8	4008796c <xQueueCreateMutex>
400da958:	d72241        	l32r	a4, 400d05e0 <_flash_cache_start+0x5c8>
400da95b:	04a9      	s32i.n	a10, a4, 0
400da95d:	0d0c      	movi.n	a13, 0
400da95f:	fc7c      	movi.n	a12, -1
400da961:	0dbd      	mov.n	a11, a13
400da963:	f03d      	nop.n
400da965:	d71e41        	l32r	a4, 400d05e0 <_flash_cache_start+0x5c8>
400da968:	04a8      	l32i.n	a10, a4, 0
400da96a:	ad1fa5        	call8	40087b64 <xQueueGenericReceive>
400da96d:	d71db1        	l32r	a11, 400d05e4 <_flash_cache_start+0x5cc>
400da970:	02ad      	mov.n	a10, a2
400da972:	d69981        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400da975:	0008e0        	callx8	a8
400da978:	048a56        	bnez	a10, 400da9c4 <esp_log_level_set+0x7c>
400da97b:	d71b21        	l32r	a2, 400d05e8 <_flash_cache_start+0x5d0>
400da97e:	0239      	s32i.n	a3, a2, 0
400da980:	000246        	j	400da98d <esp_log_level_set+0x45>
400da983:	223200        	orb	b3, b2, b0
400da986:	192100        	lsi	f0, a1, 100
400da989:	6232d7        	bltu	a2, a13, 400da9ef <esp_log_level_set+0xa7>
400da98c:	f03d00        	subx8	a3, a13, a0
400da98f:	f03d      	nop.n
400da991:	f03d      	nop.n
400da993:	f03d      	nop.n
400da995:	d71521        	l32r	a2, 400d05ec <_flash_cache_start+0x5d4>
400da998:	002222        	l32i	a2, a2, 0
400da99b:	fe5256        	bnez	a2, 400da984 <esp_log_level_set+0x3c>
400da99e:	0b0c      	movi.n	a11, 0
400da9a0:	d71421        	l32r	a2, 400d05f0 <_flash_cache_start+0x5d8>
400da9a3:	02b9      	s32i.n	a11, a2, 0
400da9a5:	f03d      	nop.n
400da9a7:	f03d      	nop.n
400da9a9:	f03d      	nop.n
400da9ab:	f03d      	nop.n
400da9ad:	d71121        	l32r	a2, 400d05f4 <_flash_cache_start+0x5dc>
400da9b0:	02b9      	s32i.n	a11, a2, 0
400da9b2:	0bdd      	mov.n	a13, a11
400da9b4:	0bcd      	mov.n	a12, a11
400da9b6:	f03d      	nop.n
400da9b8:	f03d      	nop.n
400da9ba:	d70921        	l32r	a2, 400d05e0 <_flash_cache_start+0x5c8>
400da9bd:	02a8      	l32i.n	a10, a2, 0
400da9bf:	ace265        	call8	400877e4 <xQueueGenericSend>
400da9c2:	f01d      	retw.n
400da9c4:	d70a41        	l32r	a4, 400d05ec <_flash_cache_start+0x5d4>
400da9c7:	0458      	l32i.n	a5, a4, 0
400da9c9:	054d      	mov.n	a4, a5
400da9cb:	000646        	j	400da9e8 <esp_log_level_set+0xa0>
400da9ce:	02bd      	mov.n	a11, a2
400da9d0:	a45b      	addi.n	a10, a4, 5
400da9d2:	d68181        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400da9d5:	0008e0        	callx8	a8
400da9d8:	9acc      	bnez.n	a10, 400da9e5 <esp_log_level_set+0x9d>
400da9da:	044432        	s8i	a3, a4, 4
400da9dd:	0020c0        	memw
400da9e0:	0001c6        	j	400da9eb <esp_log_level_set+0xa3>
400da9e3:	420000        	xorb	b0, b0, b0
400da9e6:	560024        	lsi	f2, a0, 0x158
400da9e9:	56fe24        	lsi	f2, a14, 0x158
400da9ec:	200454        	lsi	f5, a4, 128
400da9ef:	8120a2        	l32i	a10, a0, 0x204
400da9f2:	e0d5a5        	call8	400bb74c <_iram_end+0x2dbf8>
400da9f5:	0008      	l32i.n	a0, a0, 0
400da9f7:	06caa2        	addi	a10, a10, 6
400da9fa:	d5bc81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400da9fd:	0008e0        	callx8	a8
400daa00:	0a4d      	mov.n	a4, a10
400daa02:	facc      	bnez.n	a10, 400daa15 <esp_log_level_set+0xcd>
400daa04:	0d0c      	movi.n	a13, 0
400daa06:	0dcd      	mov.n	a12, a13
400daa08:	0dbd      	mov.n	a11, a13
400daa0a:	d6f521        	l32r	a2, 400d05e0 <_flash_cache_start+0x5c8>
400daa0d:	02a8      	l32i.n	a10, a2, 0
400daa0f:	acdd65        	call8	400877e4 <xQueueGenericSend>
400daa12:	f01d      	retw.n
400daa14:	4a3200        	madd.s	f3, f2, f0
400daa17:	20c004        	lsi	f0, a0, 128
400daa1a:	02bd00        	andb	b11, b13, b0
400daa1d:	aa5b      	addi.n	a10, a10, 5
400daa1f:	d6e781        	l32r	a8, 400d05bc <_flash_cache_start+0x5a4>
400daa22:	0008e0        	callx8	a8
400daa25:	0459      	s32i.n	a5, a4, 0
400daa27:	f03d      	nop.n
400daa29:	f03d      	nop.n
400daa2b:	f03d      	nop.n
400daa2d:	f03d      	nop.n
400daa2f:	d6ef51        	l32r	a5, 400d05ec <_flash_cache_start+0x5d4>
400daa32:	0549      	s32i.n	a4, a5, 0
400daa34:	040c      	movi.n	a4, 0
400daa36:	000b86        	j	400daa68 <esp_log_level_set+0x120>
400daa39:	d6e881        	l32r	a8, 400d05dc <_flash_cache_start+0x5c4>
400daa3c:	b08480        	addx8	a8, a4, a8
400daa3f:	02bd      	mov.n	a11, a2
400daa41:	08a8      	l32i.n	a10, a8, 0
400daa43:	d66581        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400daa46:	0008e0        	callx8	a8
400daa49:	8adc      	bnez.n	a10, 400daa65 <esp_log_level_set+0x11d>
400daa4b:	d6e421        	l32r	a2, 400d05dc <_flash_cache_start+0x5c4>
400daa4e:	b04420        	addx8	a4, a4, a2
400daa51:	243030        	extui	a3, a3, 0, 3
400daa54:	1458      	l32i.n	a5, a4, 4
400daa56:	827c      	movi.n	a2, -8
400daa58:	102520        	and	a2, a5, a2
400daa5b:	203230        	or	a3, a2, a3
400daa5e:	1439      	s32i.n	a3, a4, 4
400daa60:	000346        	j	400daa71 <esp_log_level_set+0x129>
400daa63:	420000        	xorb	b0, b0, b0
400daa66:	8101c4        	lsi	f12, a1, 0x204
400daa69:	82d6e2        	addmi	a14, a6, 0xffff8200
400daa6c:	0028      	l32i.n	a2, a0, 0
400daa6e:	c73487        	bltu	a4, a8, 400daa39 <esp_log_level_set+0xf1>
400daa71:	00a0d2        	movi	a13, 0
400daa74:	0dcd      	mov.n	a12, a13
400daa76:	0dbd      	mov.n	a11, a13
400daa78:	d6da21        	l32r	a2, 400d05e0 <_flash_cache_start+0x5c8>
400daa7b:	02a8      	l32i.n	a10, a2, 0
400daa7d:	acd665        	call8	400877e4 <xQueueGenericSend>
400daa80:	f01d      	retw.n
	...

400daa84 <register_heap>:
400daa84:	004136        	entry	a1, 32
400daa87:	0422b2        	l32i	a11, a2, 16
400daa8a:	0322a2        	l32i	a10, a2, 12
400daa8d:	c0bba0        	sub	a11, a11, a10
400daa90:	d6da81        	l32r	a8, 400d05f8 <_flash_cache_start+0x5e0>
400daa93:	0eb8b7        	bgeu	a8, a11, 400daaa5 <register_heap+0x21>
400daa96:	d6d9d1        	l32r	a13, 400d05fc <_flash_cache_start+0x5e4>
400daa99:	d6d9c1        	l32r	a12, 400d0600 <_flash_cache_start+0x5e8>
400daa9c:	23a0b2        	movi	a11, 35
400daa9f:	d6d9a1        	l32r	a10, 400d0604 <_flash_cache_start+0x5ec>
400daaa2:	004365        	call8	400daed8 <__assert_func>
400daaa5:	b041a5        	call8	4008aec0 <multi_heap_register>
400daaa8:	72a9      	s32i.n	a10, a2, 28
400daaaa:	f01d      	retw.n

400daaac <heap_caps_enable_nonos_stack_heaps>:
400daaac:	004136        	entry	a1, 32
400daaaf:	d6d621        	l32r	a2, 400d0608 <_flash_cache_start+0x5f0>
400daab2:	0228      	l32i.n	a2, a2, 0
400daab4:	0005c6        	j	400daacf <heap_caps_enable_nonos_stack_heaps+0x23>
400daab7:	228200        	orb	b8, b2, b0
400daaba:	e85607        	bbc	a6, a0, 400daaa6 <register_heap+0x22>
400daabd:	02ad00        	andb	b10, b13, b0
400daac0:	fffc25        	call8	400daa84 <register_heap>
400daac3:	72a8      	l32i.n	a10, a2, 28
400daac5:	4a8c      	beqz.n	a10, 400daacd <heap_caps_enable_nonos_stack_heaps+0x21>
400daac7:	14c2b2        	addi	a11, a2, 20
400daaca:	b01e25        	call8	4008acac <multi_heap_set_lock>
400daacd:	8228      	l32i.n	a2, a2, 32
400daacf:	fe5256        	bnez	a2, 400daab8 <heap_caps_enable_nonos_stack_heaps+0xc>
400daad2:	f01d      	retw.n

400daad4 <heap_caps_init>:
400daad4:	00a136        	entry	a1, 80
400daad7:	207110        	or	a7, a1, a1
400daada:	014ae5        	call8	400dbf88 <soc_get_available_memory_region_max_count>
400daadd:	11aac0        	slli	a10, a10, 4
400daae0:	12ca22        	addi	a2, a10, 18
400daae3:	412420        	srli	a2, a2, 4
400daae6:	1122c0        	slli	a2, a2, 4
400daae9:	c02120        	sub	a2, a1, a2
400daaec:	001210        	movsp	a1, a2
400daaef:	086712        	s32i	a1, a7, 32
400daaf2:	20a110        	or	a10, a1, a1
400daaf5:	014a65        	call8	400dbf9c <soc_get_available_memory_regions>
400daaf8:	67a9      	s32i.n	a10, a7, 24
400daafa:	140c      	movi.n	a4, 1
400daafc:	f03d      	nop.n
400daafe:	f03d      	nop.n
400dab00:	f03d      	nop.n
400dab02:	8758      	l32i.n	a5, a7, 32
400dab04:	0a8d      	mov.n	a8, a10
400dab06:	001506        	j	400dab5e <heap_caps_init+0x8a>
400dab09:	340b00        	extui	a0, a0, 11, 4
400dab0c:	1124c0        	slli	a2, a4, 4
400dab0f:	252a      	add.n	a2, a5, a2
400dab11:	0268      	l32i.n	a6, a2, 0
400dab13:	1123c0        	slli	a2, a3, 4
400dab16:	252a      	add.n	a2, a5, a2
400dab18:	0298      	l32i.n	a9, a2, 0
400dab1a:	1228      	l32i.n	a2, a2, 4
400dab1c:	292a      	add.n	a2, a9, a2
400dab1e:	3a9627        	bne	a6, a2, 400dab5c <heap_caps_init+0x88>
400dab21:	1124c0        	slli	a2, a4, 4
400dab24:	252a      	add.n	a2, a5, a2
400dab26:	2268      	l32i.n	a6, a2, 8
400dab28:	1123c0        	slli	a2, a3, 4
400dab2b:	252a      	add.n	a2, a5, a2
400dab2d:	2228      	l32i.n	a2, a2, 8
400dab2f:	299627        	bne	a6, a2, 400dab5c <heap_caps_init+0x88>
400dab32:	1133c0        	slli	a3, a3, 4
400dab35:	353a      	add.n	a3, a5, a3
400dab37:	f27c      	movi.n	a2, -1
400dab39:	2329      	s32i.n	a2, a3, 8
400dab3b:	f03d      	nop.n
400dab3d:	f03d      	nop.n
400dab3f:	f03d      	nop.n
400dab41:	f03d      	nop.n
400dab43:	0368      	l32i.n	a6, a3, 0
400dab45:	1124c0        	slli	a2, a4, 4
400dab48:	252a      	add.n	a2, a5, a2
400dab4a:	0269      	s32i.n	a6, a2, 0
400dab4c:	f03d      	nop.n
400dab4e:	f03d      	nop.n
400dab50:	f03d      	nop.n
400dab52:	f03d      	nop.n
400dab54:	1338      	l32i.n	a3, a3, 4
400dab56:	1268      	l32i.n	a6, a2, 4
400dab58:	363a      	add.n	a3, a6, a3
400dab5a:	1239      	s32i.n	a3, a2, 4
400dab5c:	441b      	addi.n	a4, a4, 1
400dab5e:	a83487        	bltu	a4, a8, 400dab0a <heap_caps_init+0x36>
400dab61:	020c      	movi.n	a2, 0
400dab63:	5729      	s32i.n	a2, a7, 20
400dab65:	024d      	mov.n	a4, a2
400dab67:	f03d      	nop.n
400dab69:	f03d      	nop.n
400dab6b:	f03d      	nop.n
400dab6d:	8768      	l32i.n	a6, a7, 32
400dab6f:	6758      	l32i.n	a5, a7, 24
400dab71:	000346        	j	400dab82 <heap_caps_init+0xae>
400dab74:	1132c0        	slli	a3, a2, 4
400dab77:	363a      	add.n	a3, a6, a3
400dab79:	2338      	l32i.n	a3, a3, 8
400dab7b:	010326        	beqi	a3, -1, 400dab80 <heap_caps_init+0xac>
400dab7e:	441b      	addi.n	a4, a4, 1
400dab80:	221b      	addi.n	a2, a2, 1
400dab82:	ee3257        	bltu	a2, a5, 400dab74 <heap_caps_init+0xa0>
400dab85:	5749      	s32i.n	a4, a7, 20
400dab87:	b02440        	addx8	a2, a4, a4
400dab8a:	1122e0        	slli	a2, a2, 2
400dab8d:	4729      	s32i.n	a2, a7, 16
400dab8f:	2729      	s32i.n	a2, a7, 8
400dab91:	12c222        	addi	a2, a2, 18
400dab94:	412420        	srli	a2, a2, 4
400dab97:	1122c0        	slli	a2, a2, 4
400dab9a:	c02120        	sub	a2, a1, a2
400dab9d:	001210        	movsp	a1, a2
400daba0:	3719      	s32i.n	a1, a7, 12
400daba2:	060c      	movi.n	a6, 0
400daba4:	065d      	mov.n	a5, a6
400daba6:	014d      	mov.n	a4, a1
400daba8:	0036c6        	j	400dac87 <heap_caps_init+0x1b3>
400dabab:	c00000        	sub	a0, a0, a0
400dabae:	321126        	beqi	a1, 1, 400dabe4 <heap_caps_init+0x110>
400dabb1:	200827        	bnone	a8, a2, 400dabd5 <heap_caps_init+0x101>
400dabb4:	228023        	lsip	f2, a0, 136
400dabb7:	500222        	l8ui	a2, a2, 80
400dabba:	e0b085        	call0	400bb6c4 <_iram_end+0x2db70>
400dabbd:	1138      	l32i.n	a3, a1, 4
400dabbf:	343a      	add.n	a3, a4, a3
400dabc1:	7739      	s32i.n	a3, a7, 28
400dabc3:	020266        	bnei	a2, -1, 400dabc9 <heap_caps_init+0xf5>
400dabc6:	002ec6        	j	400dac85 <heap_caps_init+0x1b1>
400dabc9:	351b      	addi.n	a3, a5, 1
400dabcb:	b739      	s32i.n	a3, a7, 44
400dabcd:	f03d      	nop.n
400dabcf:	f03d      	nop.n
400dabd1:	f03d      	nop.n
400dabd3:	f03d      	nop.n
400dabd5:	5788      	l32i.n	a8, a7, 20
400dabd7:	0eb837        	bgeu	a8, a3, 400dabe9 <heap_caps_init+0x115>
400dabda:	d68cd1        	l32r	a13, 400d060c <_flash_cache_start+0x5f4>
400dabdd:	d68cc1        	l32r	a12, 400d0610 <_flash_cache_start+0x5f8>
400dabe0:	69a0b2        	movi	a11, 105
400dabe3:	d688a1        	l32r	a10, 400d0604 <_flash_cache_start+0x5ec>
400dabe6:	002f25        	call8	400daed8 <__assert_func>
400dabe9:	1135d0        	slli	a3, a5, 3
400dabec:	a739      	s32i.n	a3, a7, 40
400dabee:	835a      	add.n	a8, a3, a5
400dabf0:	1138e0        	slli	a3, a8, 2
400dabf3:	343a      	add.n	a3, a4, a3
400dabf5:	1182e0        	slli	a8, a2, 2
400dabf8:	9789      	s32i.n	a8, a7, 36
400dabfa:	882a      	add.n	a8, a8, a2
400dabfc:	11b8e0        	slli	a11, a8, 2
400dabff:	f03d      	nop.n
400dac01:	f03d      	nop.n
400dac03:	d68491        	l32r	a9, 400d0614 <_flash_cache_start+0x5fc>
400dac06:	bb9a      	add.n	a11, a11, a9
400dac08:	cc0c      	movi.n	a12, 12
400dac0a:	bb4b      	addi.n	a11, a11, 4
400dac0c:	03ad      	mov.n	a10, a3
400dac0e:	d52281        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400dac11:	0008e0        	callx8	a8
400dac14:	1186c0        	slli	a8, a6, 4
400dac17:	8798      	l32i.n	a9, a7, 32
400dac19:	898a      	add.n	a8, a9, a8
400dac1b:	0898      	l32i.n	a9, a8, 0
400dac1d:	3399      	s32i.n	a9, a3, 12
400dac1f:	f03d      	nop.n
400dac21:	f03d      	nop.n
400dac23:	f03d      	nop.n
400dac25:	f03d      	nop.n
400dac27:	0898      	l32i.n	a9, a8, 0
400dac29:	1888      	l32i.n	a8, a8, 4
400dac2b:	898a      	add.n	a8, a9, a8
400dac2d:	4389      	s32i.n	a8, a3, 16
400dac2f:	f03d      	nop.n
400dac31:	f03d      	nop.n
400dac33:	f03d      	nop.n
400dac35:	f03d      	nop.n
400dac37:	a788      	l32i.n	a8, a7, 40
400dac39:	385a      	add.n	a3, a8, a5
400dac3b:	11a3e0        	slli	a10, a3, 2
400dac3e:	10caa2        	addi	a10, a10, 16
400dac41:	a4aa      	add.n	a10, a4, a10
400dac43:	aa4b      	addi.n	a10, a10, 4
400dac45:	ad31e5        	call8	40087f64 <vPortCPUInitializeMutex>
400dac48:	9738      	l32i.n	a3, a7, 36
400dac4a:	232a      	add.n	a2, a3, a2
400dac4c:	1132e0        	slli	a3, a2, 2
400dac4f:	d67181        	l32r	a8, 400d0614 <_flash_cache_start+0x5fc>
400dac52:	383a      	add.n	a3, a8, a3
400dac54:	110322        	l8ui	a2, a3, 17
400dac57:	d28c      	beqz.n	a2, 400dac68 <heap_caps_init+0x194>
400dac59:	b03550        	addx8	a3, a5, a5
400dac5c:	1123e0        	slli	a2, a3, 2
400dac5f:	242a      	add.n	a2, a4, a2
400dac61:	030c      	movi.n	a3, 0
400dac63:	7239      	s32i.n	a3, a2, 28
400dac65:	000146        	j	400dac6e <heap_caps_init+0x19a>
400dac68:	0727a2        	l32i	a10, a7, 28
400dac6b:	ffe1a5        	call8	400daa84 <register_heap>
400dac6e:	b05550        	addx8	a5, a5, a5
400dac71:	1125e0        	slli	a2, a5, 2
400dac74:	802420        	add	a2, a4, a2
400dac77:	030c      	movi.n	a3, 0
400dac79:	8239      	s32i.n	a3, a2, 32
400dac7b:	f03d      	nop.n
400dac7d:	f03d      	nop.n
400dac7f:	f03d      	nop.n
400dac81:	f03d      	nop.n
400dac83:	b758      	l32i.n	a5, a7, 44
400dac85:	661b      	addi.n	a6, a6, 1
400dac87:	062722        	l32i	a2, a7, 24
400dac8a:	02b627        	bgeu	a6, a2, 400dac90 <heap_caps_init+0x1bc>
400dac8d:	ffc706        	j	400dabad <heap_caps_init+0xd9>
400dac90:	5738      	l32i.n	a3, a7, 20
400dac92:	0e1357        	beq	a3, a5, 400daca4 <heap_caps_init+0x1d0>
400dac95:	d660d1        	l32r	a13, 400d0618 <_flash_cache_start+0x600>
400dac98:	d65ec1        	l32r	a12, 400d0610 <_flash_cache_start+0x5f8>
400dac9b:	7ba0b2        	movi	a11, 123
400dac9e:	d659a1        	l32r	a10, 400d0604 <_flash_cache_start+0x5ec>
400daca1:	002365        	call8	400daed8 <__assert_func>
400daca4:	d65921        	l32r	a2, 400d0608 <_flash_cache_start+0x5f0>
400daca7:	0228      	l32i.n	a2, a2, 0
400daca9:	b2bc      	beqz.n	a2, 400dace8 <heap_caps_init+0x214>
400dacab:	d65cd1        	l32r	a13, 400d061c <_flash_cache_start+0x604>
400dacae:	d658c1        	l32r	a12, 400d0610 <_flash_cache_start+0x5f8>
400dacb1:	80a0b2        	movi	a11, 128
400dacb4:	d654a1        	l32r	a10, 400d0604 <_flash_cache_start+0x5ec>
400dacb7:	201110        	or	a1, a1, a1
400dacba:	0021e5        	call8	400daed8 <__assert_func>
400dacbd:	b08220        	addx8	a8, a2, a2
400dacc0:	11a8e0        	slli	a10, a8, 2
400dacc3:	d53bb1        	l32r	a11, 400d01b0 <_flash_cache_start+0x198>
400dacc6:	80a4a0        	add	a10, a4, a10
400dacc9:	11a4e5        	call8	400ec718 <heap_caps_match>
400daccc:	012a16        	beqz	a10, 400dace2 <heap_caps_init+0x20e>
400daccf:	b08220        	addx8	a8, a2, a2
400dacd2:	1138e0        	slli	a3, a8, 2
400dacd5:	343a      	add.n	a3, a4, a3
400dacd7:	06bd      	mov.n	a11, a6
400dacd9:	73a8      	l32i.n	a10, a3, 28
400dacdb:	b00d65        	call8	4008adb0 <multi_heap_malloc>
400dacde:	0a3d      	mov.n	a3, a10
400dace0:	4adc      	bnez.n	a10, 400dacf8 <heap_caps_init+0x224>
400dace2:	221b      	addi.n	a2, a2, 1
400dace4:	000346        	j	400dacf5 <heap_caps_init+0x221>
400dace7:	a02200        	addx4	a2, a2, a0
400dacea:	322000        	orbc	b2, b0, b0
400daced:	275220        	lsi	f2, a2, 156
400dacf0:	276805        	call0	40102374 <_etext+0x15a97>
400dacf3:	3748      	l32i.n	a4, a7, 12
400dacf5:	c43257        	bltu	a2, a5, 400dacbd <heap_caps_init+0x1e9>
400dacf8:	d3cc      	bnez.n	a3, 400dad09 <heap_caps_init+0x235>
400dacfa:	d649d1        	l32r	a13, 400d0620 <_flash_cache_start+0x608>
400dacfd:	d644c1        	l32r	a12, 400d0610 <_flash_cache_start+0x5f8>
400dad00:	8ca0b2        	movi	a11, 140
400dad03:	d640a1        	l32r	a10, 400d0604 <_flash_cache_start+0x5ec>
400dad06:	001d25        	call8	400daed8 <__assert_func>
400dad09:	47c8      	l32i.n	a12, a7, 16
400dad0b:	37b8      	l32i.n	a11, a7, 12
400dad0d:	03ad      	mov.n	a10, a3
400dad0f:	d4e281        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400dad12:	0008e0        	callx8	a8
400dad15:	040c      	movi.n	a4, 0
400dad17:	5768      	l32i.n	a6, a7, 20
400dad19:	000c06        	j	400dad4d <heap_caps_init+0x279>
400dad1c:	b05440        	addx8	a5, a4, a4
400dad1f:	1125e0        	slli	a2, a5, 2
400dad22:	805320        	add	a5, a3, a2
400dad25:	0725a2        	l32i	a10, a5, 28
400dad28:	005a16        	beqz	a10, 400dad31 <heap_caps_init+0x25d>
400dad2b:	14c5b2        	addi	a11, a5, 20
400dad2e:	aff7e5        	call8	4008acac <multi_heap_set_lock>
400dad31:	b4cc      	bnez.n	a4, 400dad40 <heap_caps_init+0x26c>
400dad33:	d63521        	l32r	a2, 400d0608 <_flash_cache_start+0x5f0>
400dad36:	0258      	l32i.n	a5, a2, 0
400dad38:	8359      	s32i.n	a5, a3, 32
400dad3a:	0239      	s32i.n	a3, a2, 0
400dad3c:	0002c6        	j	400dad4b <heap_caps_init+0x277>
400dad3f:	c22200        	quou	a2, a2, a0
400dad42:	2adc      	bnez.n	a10, 400dad58 <heap_caps_add_region_with_caps+0x4>
400dad44:	828823        	lsip	f2, a8, 0x208
400dad47:	8589      	s32i.n	a8, a5, 32
400dad49:	8259      	s32i.n	a5, a2, 32
400dad4b:	441b      	addi.n	a4, a4, 1
400dad4d:	cb3467        	bltu	a4, a6, 400dad1c <heap_caps_init+0x248>
400dad50:	f01d      	retw.n
	...

400dad54 <heap_caps_add_region_with_caps>:
400dad54:	004136        	entry	a1, 32
400dad57:	180c      	movi.n	a8, 1
400dad59:	0a0c      	movi.n	a10, 0
400dad5b:	0a9d      	mov.n	a9, a10
400dad5d:	839820        	moveqz	a9, a8, a2
400dad60:	938a30        	movnez	a8, a10, a3
400dad63:	208890        	or	a8, a8, a9
400dad66:	0218a7        	beq	a8, a10, 400dad6c <heap_caps_add_region_with_caps+0x18>
400dad69:	002ac6        	j	400dae18 <heap_caps_add_region_with_caps+0xc4>
400dad6c:	180c      	movi.n	a8, 1
400dad6e:	0a9d      	mov.n	a9, a10
400dad70:	839840        	moveqz	a9, a8, a4
400dad73:	749090        	extui	a9, a9, 0, 8
400dad76:	02a347        	bge	a3, a4, 400dad7c <heap_caps_add_region_with_caps+0x28>
400dad79:	00a082        	movi	a8, 0
400dad7c:	748080        	extui	a8, a8, 0, 8
400dad7f:	09a956        	bnez	a9, 400dae1d <heap_caps_add_region_with_caps+0xc9>
400dad82:	097856        	bnez	a8, 400dae1d <heap_caps_add_region_with_caps+0xc9>
400dad85:	d62051        	l32r	a5, 400d0608 <_flash_cache_start+0x5f0>
400dad88:	0588      	l32i.n	a8, a5, 0
400dad8a:	000606        	j	400dada6 <heap_caps_add_region_with_caps+0x52>
400dad8d:	389800        	lsi	f0, a8, 224
400dad90:	052937        	blt	a9, a3, 400dad99 <heap_caps_add_region_with_caps+0x45>
400dad93:	02a947        	bge	a9, a4, 400dad99 <heap_caps_add_region_with_caps+0x45>
400dad96:	002206        	j	400dae22 <heap_caps_add_region_with_caps+0xce>
400dad99:	4898      	l32i.n	a9, a8, 16
400dad9b:	05a397        	bge	a3, a9, 400dada4 <heap_caps_add_region_with_caps+0x50>
400dad9e:	02a947        	bge	a9, a4, 400dada4 <heap_caps_add_region_with_caps+0x50>
400dada1:	002046        	j	400dae26 <heap_caps_add_region_with_caps+0xd2>
400dada4:	8888      	l32i.n	a8, a8, 32
400dada6:	fe4856        	bnez	a8, 400dad8e <heap_caps_add_region_with_caps+0x3a>
400dada9:	d501b1        	l32r	a11, 400d01b0 <_flash_cache_start+0x198>
400dadac:	4a2c      	movi.n	a10, 36
400dadae:	a95665        	call8	40084314 <heap_caps_malloc>
400dadb1:	0a5d      	mov.n	a5, a10
400dadb3:	049a16        	beqz	a10, 400dae00 <heap_caps_add_region_with_caps+0xac>
400dadb6:	cc0c      	movi.n	a12, 12
400dadb8:	20b220        	or	a11, a2, a2
400dadbb:	d4b781        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400dadbe:	0008e0        	callx8	a8
400dadc1:	3539      	s32i.n	a3, a5, 12
400dadc3:	4549      	s32i.n	a4, a5, 16
400dadc5:	14c522        	addi	a2, a5, 20
400dadc8:	02ad      	mov.n	a10, a2
400dadca:	ad19a5        	call8	40087f64 <vPortCPUInitializeMutex>
400dadcd:	c0b430        	sub	a11, a4, a3
400dadd0:	03ad      	mov.n	a10, a3
400dadd2:	b00ee5        	call8	4008aec0 <multi_heap_register>
400dadd5:	75a9      	s32i.n	a10, a5, 28
400dadd7:	030c      	movi.n	a3, 0
400dadd9:	8539      	s32i.n	a3, a5, 32
400daddb:	291a37        	beq	a10, a3, 400dae08 <heap_caps_add_region_with_caps+0xb4>
400dadde:	02bd      	mov.n	a11, a2
400dade0:	afeca5        	call8	4008acac <multi_heap_set_lock>
400dade3:	d61021        	l32r	a2, 400d0624 <_flash_cache_start+0x60c>
400dade6:	02ad      	mov.n	a10, a2
400dade8:	a9cde5        	call8	40084ac8 <_lock_acquire>
400dadeb:	d60731        	l32r	a3, 400d0608 <_flash_cache_start+0x5f0>
400dadee:	0348      	l32i.n	a4, a3, 0
400dadf0:	8549      	s32i.n	a4, a5, 32
400dadf2:	0359      	s32i.n	a5, a3, 0
400dadf4:	02ad      	mov.n	a10, a2
400dadf6:	a9d125        	call8	40084b08 <_lock_release>
400dadf9:	020c      	movi.n	a2, 0
400dadfb:	000306        	j	400dae0b <heap_caps_add_region_with_caps+0xb7>
400dadfe:	220000        	orb	b0, b0, b0
400dae01:	0601a1        	l32r	a10, 4009c608 <_iram_end+0xeab4>
400dae04:	000001        	l32r	a0, 4009ae04 <_iram_end+0xd2b0>
400dae07:	a12200        	sll	a2, a2
400dae0a:	929c04        	lsi	f0, a12, 0x248
400dae0d:	05ad      	mov.n	a10, a5
400dae0f:	d4a181        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400dae12:	0008e0        	callx8	a8
400dae15:	f01d      	retw.n
400dae17:	a12200        	sll	a2, a2
400dae1a:	f01d02        	l16ui	a0, a13, 0x1e0
400dae1d:	02a122        	movi	a2, 0x102
400dae20:	f01d      	retw.n
400dae22:	f27c      	movi.n	a2, -1
400dae24:	f01d      	retw.n
400dae26:	f27c      	movi.n	a2, -1
400dae28:	f01d      	retw.n
	...

400dae2c <heap_caps_add_region>:
400dae2c:	004136        	entry	a1, 32
400dae2f:	052216        	beqz	a2, 400dae85 <heap_caps_add_region+0x59>
400dae32:	090c      	movi.n	a9, 0
400dae34:	001006        	j	400dae78 <heap_caps_add_region+0x4c>
400dae37:	89c000        	lsi	f0, a0, 0x224
400dae3a:	fba111        	l32r	a1, 400d9cc0 <uart_tcsetattr+0xd8>
400dae3d:	8a80d5        	call4	4006564c <__udivmoddi4+0xa58>
400dae40:	28a280        	lsi	f8, a2, 160
400dae43:	22a700        	orb	b10, b7, b0
400dae46:	2e          	.byte 0x2e
400dae47:	1189c0        	slli	a8, a9, 4
400dae4a:	d5f7b1        	l32r	a11, 400d0628 <_flash_cache_start+0x610>
400dae4d:	808b80        	add	a8, a11, a8
400dae50:	1888      	l32i.n	a8, a8, 4
400dae52:	aa8a      	add.n	a10, a10, a8
400dae54:	1eb2a7        	bgeu	a2, a10, 400dae76 <heap_caps_add_region+0x4a>
400dae57:	1199c0        	slli	a9, a9, 4
400dae5a:	9b9a      	add.n	a9, a11, a9
400dae5c:	2988      	l32i.n	a8, a9, 8
400dae5e:	a08880        	addx4	a8, a8, a8
400dae61:	11a8e0        	slli	a10, a8, 2
400dae64:	d5ec81        	l32r	a8, 400d0614 <_flash_cache_start+0x5fc>
400dae67:	aa8a      	add.n	a10, a10, a8
400dae69:	03cd      	mov.n	a12, a3
400dae6b:	02bd      	mov.n	a11, a2
400dae6d:	aa4b      	addi.n	a10, a10, 4
400dae6f:	ffee65        	call8	400dad54 <heap_caps_add_region_with_caps>
400dae72:	0a2d      	mov.n	a2, a10
400dae74:	f01d      	retw.n
400dae76:	991b      	addi.n	a9, a9, 1
400dae78:	d5ed81        	l32r	a8, 400d062c <_flash_cache_start+0x614>
400dae7b:	0888      	l32i.n	a8, a8, 0
400dae7d:	b73987        	bltu	a9, a8, 400dae38 <heap_caps_add_region+0xc>
400dae80:	05a122        	movi	a2, 0x105
400dae83:	f01d      	retw.n
400dae85:	02a122        	movi	a2, 0x102
400dae88:	f01d      	retw.n
	...

400dae8c <__fpclassifyd>:
400dae8c:	004136        	entry	a1, 32
400dae8f:	208320        	or	a8, a3, a2
400dae92:	02ad      	mov.n	a10, a2
400dae94:	220c      	movi.n	a2, 2
400dae96:	c8bc      	beqz.n	a8, 400daed6 <__fpclassifyd+0x4a>
400dae98:	080c      	movi.n	a8, 0
400dae9a:	190c      	movi.n	a9, 1
400dae9c:	9398a0        	movnez	a9, a8, a10
400dae9f:	d47981        	l32r	a8, 400d0084 <_flash_cache_start+0x6c>
400daea2:	749090        	extui	a9, a9, 0, 8
400daea5:	808830        	add	a8, a8, a3
400daea8:	08cc      	bnez.n	a8, 400daeac <__fpclassifyd+0x20>
400daeaa:	89ec      	bnez.n	a9, 400daed6 <__fpclassifyd+0x4a>
400daeac:	d46f21        	l32r	a2, 400d0068 <_flash_cache_start+0x50>
400daeaf:	d5e081        	l32r	a8, 400d0630 <_flash_cache_start+0x618>
400daeb2:	103230        	and	a3, a2, a3
400daeb5:	d5dfa1        	l32r	a10, 400d0634 <_flash_cache_start+0x61c>
400daeb8:	838a      	add.n	a8, a3, a8
400daeba:	420c      	movi.n	a2, 4
400daebc:	16ba87        	bgeu	a10, a8, 400daed6 <__fpclassifyd+0x4a>
400daebf:	d5de81        	l32r	a8, 400d0638 <_flash_cache_start+0x620>
400daec2:	320c      	movi.n	a2, 3
400daec4:	0eb837        	bgeu	a8, a3, 400daed6 <__fpclassifyd+0x4a>
400daec7:	d5dd81        	l32r	a8, 400d063c <_flash_cache_start+0x624>
400daeca:	020c      	movi.n	a2, 0
400daecc:	338a      	add.n	a3, a3, a8
400daece:	180c      	movi.n	a8, 1
400daed0:	832830        	moveqz	a2, a8, a3
400daed3:	102920        	and	a2, a9, a2
400daed6:	f01d      	retw.n

400daed8 <__assert_func>:
400daed8:	006136        	entry	a1, 48
400daedb:	adaee5        	call8	400889c8 <__getreent>
400daede:	032aa2        	l32i	a10, a10, 12
400daee1:	d5d7f1        	l32r	a15, 400d0640 <_flash_cache_start+0x628>
400daee4:	005456        	bnez	a4, 400daeed <__assert_func+0x15>
400daee7:	d5d7f1        	l32r	a15, 400d0644 <_flash_cache_start+0x62c>
400daeea:	204ff0        	or	a4, a15, a15
400daeed:	d5d6b1        	l32r	a11, 400d0648 <_flash_cache_start+0x630>
400daef0:	03ed      	mov.n	a14, a3
400daef2:	02dd      	mov.n	a13, a2
400daef4:	05cd      	mov.n	a12, a5
400daef6:	0149      	s32i.n	a4, a1, 0
400daef8:	0122e5        	call8	400dc128 <fiprintf>
400daefb:	b04725        	call8	4008b36c <abort>
	...

400daf00 <__assert>:
400daf00:	004136        	entry	a1, 32
400daf03:	04dd      	mov.n	a13, a4
400daf05:	0c0c      	movi.n	a12, 0
400daf07:	20b330        	or	a11, a3, a3
400daf0a:	20a220        	or	a10, a2, a2
400daf0d:	fffca5        	call8	400daed8 <__assert_func>

400daf10 <__errno>:
400daf10:	004136        	entry	a1, 32
400daf13:	adab65        	call8	400889c8 <__getreent>
400daf16:	0a2d      	mov.n	a2, a10
400daf18:	f01d      	retw.n
	...

400daf1c <_fopen_r>:
400daf1c:	006136        	entry	a1, 48
400daf1f:	01cd      	mov.n	a12, a1
400daf21:	04bd      	mov.n	a11, a4
400daf23:	02ad      	mov.n	a10, a2
400daf25:	005f65        	call8	400db51c <__sflags>
400daf28:	0a5d      	mov.n	a5, a10
400daf2a:	4acc      	bnez.n	a10, 400daf32 <_fopen_r+0x16>
400daf2c:	000f06        	j	400daf6c <_fopen_r+0x50>
400daf2f:	000000        	ill
400daf32:	20a220        	or	a10, a2, a2
400daf35:	d5c981        	l32r	a8, 400d065c <_flash_cache_start+0x644>
400daf38:	0008e0        	callx8	a8
400daf3b:	204aa0        	or	a4, a10, a10
400daf3e:	02aa16        	beqz	a10, 400daf6c <_fopen_r+0x50>
400daf41:	01c8      	l32i.n	a12, a1, 0
400daf43:	03bd      	mov.n	a11, a3
400daf45:	b6a1d2        	movi	a13, 0x1b6
400daf48:	02ad      	mov.n	a10, a2
400daf4a:	d5c581        	l32r	a8, 400d0660 <_flash_cache_start+0x648>
400daf4d:	0008e0        	callx8	a8
400daf50:	0a3d      	mov.n	a3, a10
400daf52:	01aad6        	bgez	a10, 400daf70 <_fopen_r+0x54>
400daf55:	d5c381        	l32r	a8, 400d0664 <_flash_cache_start+0x64c>
400daf58:	0008e0        	callx8	a8
400daf5b:	020c      	movi.n	a2, 0
400daf5d:	58c4a2        	addi	a10, a4, 88
400daf60:	065422        	s16i	a2, a4, 12
400daf63:	a9b1e5        	call8	40084a80 <_lock_close>
400daf66:	d5c081        	l32r	a8, 400d0668 <_flash_cache_start+0x650>
400daf69:	0008e0        	callx8	a8
400daf6c:	020c      	movi.n	a2, 0
400daf6e:	f01d      	retw.n
400daf70:	192482        	l32i	a8, a4, 100
400daf73:	0ee807        	bbsi	a8, 0, 400daf85 <_fopen_r+0x69>
400daf76:	061482        	l16ui	a8, a4, 12
400daf79:	08e897        	bbsi	a8, 9, 400daf85 <_fopen_r+0x69>
400daf7c:	58c4a2        	addi	a10, a4, 88
400daf7f:	201110        	or	a1, a1, a1
400daf82:	a9b565        	call8	40084ad8 <_lock_acquire_recursive>
400daf85:	075432        	s16i	a3, a4, 14
400daf88:	d5b131        	l32r	a3, 400d064c <_flash_cache_start+0x634>
400daf8b:	065452        	s16i	a5, a4, 12
400daf8e:	9439      	s32i.n	a3, a4, 36
400daf90:	d5b031        	l32r	a3, 400d0650 <_flash_cache_start+0x638>
400daf93:	8449      	s32i.n	a4, a4, 32
400daf95:	a439      	s32i.n	a3, a4, 40
400daf97:	d5af31        	l32r	a3, 400d0654 <_flash_cache_start+0x63c>
400daf9a:	b439      	s32i.n	a3, a4, 44
400daf9c:	d5af31        	l32r	a3, 400d0658 <_flash_cache_start+0x640>
400daf9f:	c439      	s32i.n	a3, a4, 48
400dafa1:	0c6587        	bbci	a5, 8, 400dafb1 <_fopen_r+0x95>
400dafa4:	2d0c      	movi.n	a13, 2
400dafa6:	0c0c      	movi.n	a12, 0
400dafa8:	20b440        	or	a11, a4, a4
400dafab:	20a220        	or	a10, a2, a2
400dafae:	0002e5        	call8	400dafdc <_fseek_r>
400dafb1:	192432        	l32i	a3, a4, 100
400dafb4:	042d      	mov.n	a2, a4
400dafb6:	0be307        	bbsi	a3, 0, 400dafc5 <_fopen_r+0xa9>
400dafb9:	061432        	l16ui	a3, a4, 12
400dafbc:	05e397        	bbsi	a3, 9, 400dafc5 <_fopen_r+0xa9>
400dafbf:	58c4a2        	addi	a10, a4, 88
400dafc2:	a9b525        	call8	40084b14 <_lock_release_recursive>
400dafc5:	f01d      	retw.n
	...

400dafc8 <fopen>:
400dafc8:	004136        	entry	a1, 32
400dafcb:	ad9fe5        	call8	400889c8 <__getreent>
400dafce:	20b220        	or	a11, a2, a2
400dafd1:	20c330        	or	a12, a3, a3
400dafd4:	fff465        	call8	400daf1c <_fopen_r>
400dafd7:	202aa0        	or	a2, a10, a10
400dafda:	f01d      	retw.n

400dafdc <_fseek_r>:
400dafdc:	004136        	entry	a1, 32
400dafdf:	20d550        	or	a13, a5, a5
400dafe2:	20c440        	or	a12, a4, a4
400dafe5:	20b330        	or	a11, a3, a3
400dafe8:	02ad      	mov.n	a10, a2
400dafea:	000225        	call8	400db00c <_fseeko_r>
400dafed:	0a2d      	mov.n	a2, a10
400dafef:	f01d      	retw.n
400daff1:	000000        	ill

400daff4 <fseek>:
400daff4:	004136        	entry	a1, 32
400daff7:	ad9d25        	call8	400889c8 <__getreent>
400daffa:	20b220        	or	a11, a2, a2
400daffd:	20d440        	or	a13, a4, a4
400db000:	03cd      	mov.n	a12, a3
400db002:	0000a5        	call8	400db00c <_fseeko_r>
400db005:	0a2d      	mov.n	a2, a10
400db007:	f01d      	retw.n
400db009:	000000        	ill

400db00c <_fseeko_r>:
400db00c:	00e136        	entry	a1, 112
400db00f:	106142        	s32i	a4, a1, 64
400db012:	a28c      	beqz.n	a2, 400db020 <_fseeko_r+0x14>
400db014:	6268      	l32i.n	a6, a2, 24
400db016:	66cc      	bnez.n	a6, 400db020 <_fseeko_r+0x14>
400db018:	02ad      	mov.n	a10, a2
400db01a:	d59d81        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400db01d:	0008e0        	callx8	a8
400db020:	d59361        	l32r	a6, 400d066c <_flash_cache_start+0x654>
400db023:	059367        	bne	a3, a6, 400db02c <_fseeko_r+0x20>
400db026:	1238      	l32i.n	a3, a2, 4
400db028:	000506        	j	400db040 <_fseeko_r+0x34>
400db02b:	916100        	lsi	f0, a1, 0x244
400db02e:	9367d5        	call4	4006e6ac <__udivmoddi4+0x9ab8>
400db031:	223805        	call0	400fd3b4 <_etext+0x10ad7>
400db034:	000206        	j	400db040 <_fseeko_r+0x34>
400db037:	8f6100        	f64cmph	a6, a1, a0, 8
400db03a:	9367d5        	call4	4006e6b8 <__udivmoddi4+0x9ac4>
400db03d:	323801        	l32r	a0, 400a7920 <_iram_end+0x19dcc>
400db040:	192362        	l32i	a6, a3, 100
400db043:	0ee607        	bbsi	a6, 0, 400db055 <_fseeko_r+0x49>
400db046:	061362        	l16ui	a6, a3, 12
400db049:	08e697        	bbsi	a6, 9, 400db055 <_fseeko_r+0x49>
400db04c:	58c3a2        	addi	a10, a3, 88
400db04f:	201110        	or	a1, a1, a1
400db052:	a9a865        	call8	40084ad8 <_lock_acquire_recursive>
400db055:	061372        	l16ui	a7, a3, 12
400db058:	08a162        	movi	a6, 0x108
400db05b:	106760        	and	a6, a7, a6
400db05e:	08a172        	movi	a7, 0x108
400db061:	099677        	bne	a6, a7, 400db06e <_fseeko_r+0x62>
400db064:	03bd      	mov.n	a11, a3
400db066:	02ad      	mov.n	a10, a2
400db068:	d58b81        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400db06b:	0008e0        	callx8	a8
400db06e:	b368      	l32i.n	a6, a3, 44
400db070:	d41c      	movi.n	a4, 29
400db072:	08a616        	beqz	a6, 400db100 <_fseeko_r+0xf4>
400db075:	0004c6        	j	400db08c <_fseeko_r+0x80>
400db078:	132200        	wsr.m2	a0
400db07b:	e29706        	j	400d3adb <std::_Niter_base<float*>::iterator_type std::__niter_base<float*>(float*)+0xf>
400db07e:	c3a205        	call0	4009eaa0 <_iram_end+0x10f4c>
400db081:	2558      	l32i.n	a5, a5, 8
400db083:	a9a9      	s32i.n	a10, a9, 40
400db085:	f27c      	movi.n	a2, -1
400db087:	f01d      	retw.n
400db089:	000000        	ill
400db08c:	0a1526        	beqi	a5, 1, 400db09a <_fseeko_r+0x8e>
400db08f:	732526        	beqi	a5, 2, 400db106 <_fseeko_r+0xfa>
400db092:	641c      	movi.n	a4, 22
400db094:	068556        	bnez	a5, 400db100 <_fseeko_r+0xf4>
400db097:	001ac6        	j	400db106 <_fseeko_r+0xfa>
400db09a:	03bd      	mov.n	a11, a3
400db09c:	02ad      	mov.n	a10, a2
400db09e:	d57d81        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400db0a1:	0008e0        	callx8	a8
400db0a4:	d575c1        	l32r	a12, 400d0678 <_flash_cache_start+0x660>
400db0a7:	061372        	l16ui	a7, a3, 12
400db0aa:	10cc70        	and	a12, a12, a7
400db0ad:	4c8c      	beqz.n	a12, 400db0b5 <_fseeko_r+0xa9>
400db0af:	152342        	l32i	a4, a3, 84
400db0b2:	000486        	j	400db0c8 <_fseeko_r+0xbc>
400db0b5:	83b8      	l32i.n	a11, a3, 32
400db0b7:	05dd      	mov.n	a13, a5
400db0b9:	02ad      	mov.n	a10, a2
400db0bb:	0006e0        	callx8	a6
400db0be:	0a4d      	mov.n	a4, a10
400db0c0:	040a66        	bnei	a10, -1, 400db0c8 <_fseeko_r+0xbc>
400db0c3:	007ec6        	j	400db2c2 <_fseeko_r+0x2b6>
400db0c6:	520000        	lsi	f0, a0, 0x148
400db0c9:	270613        	lsi	f1, a6, 156
400db0cc:	581165        	call8	401331e4 <_etext+0x46907>
400db0cf:	445013        	lsi	f1, a0, 0x110
400db0d2:	d358c0        	movt	a5, a8, b12
400db0d5:	759c      	beqz.n	a5, 400db0f0 <_fseeko_r+0xe4>
400db0d7:	102352        	l32i	a5, a3, 64
400db0da:	c04450        	sub	a4, a4, a5
400db0dd:	0003c6        	j	400db0f0 <_fseeko_r+0xe4>
400db0e0:	0c6537        	bbci	a5, 3, 400db0f0 <_fseeko_r+0xe4>
400db0e3:	0358      	l32i.n	a5, a3, 0
400db0e5:	758c      	beqz.n	a5, 400db0f0 <_fseeko_r+0xe4>
400db0e7:	042372        	l32i	a7, a3, 16
400db0ea:	c05570        	sub	a5, a5, a7
400db0ed:	804450        	add	a4, a4, a5
400db0f0:	102182        	l32i	a8, a1, 64
400db0f3:	170c      	movi.n	a7, 1
400db0f5:	884a      	add.n	a8, a8, a4
400db0f7:	106182        	s32i	a8, a1, 64
400db0fa:	050c      	movi.n	a5, 0
400db0fc:	000286        	j	400db10a <_fseeko_r+0xfe>
400db0ff:	024900        	andb	b4, b9, b0
400db102:	006f06        	j	400db2c2 <_fseeko_r+0x2b6>
400db105:	070c00        	lsi	f0, a12, 28
400db108:	074d      	mov.n	a4, a7
400db10a:	4398      	l32i.n	a9, a3, 16
400db10c:	89cc      	bnez.n	a9, 400db118 <_fseeko_r+0x10c>
400db10e:	03bd      	mov.n	a11, a3
400db110:	02ad      	mov.n	a10, a2
400db112:	d56181        	l32r	a8, 400d0698 <_flash_cache_start+0x680>
400db115:	0008e0        	callx8	a8
400db118:	0613a2        	l16ui	a10, a3, 12
400db11b:	d55891        	l32r	a9, 400d067c <_flash_cache_start+0x664>
400db11e:	020a97        	bnone	a10, a9, 400db124 <_fseeko_r+0x118>
400db121:	006446        	j	400db2b6 <_fseeko_r+0x2aa>
400db124:	00a492        	movi	a9, 0x400
400db127:	4d8a97        	bany	a10, a9, 400db178 <_fseeko_r+0x16c>
400db12a:	d54aa1        	l32r	a10, 400d0654 <_flash_cache_start+0x63c>
400db12d:	0e16a7        	beq	a6, a10, 400db13f <_fseeko_r+0x133>
400db130:	061382        	l16ui	a8, a3, 12
400db133:	d55371        	l32r	a7, 400d0680 <_flash_cache_start+0x668>
400db136:	207870        	or	a7, a8, a7
400db139:	065372        	s16i	a7, a3, 12
400db13c:	005d86        	j	400db2b6 <_fseeko_r+0x2aa>
400db13f:	0793b2        	l16si	a11, a3, 14
400db142:	feab96        	bltz	a11, 400db130 <_fseeko_r+0x124>
400db145:	20c110        	or	a12, a1, a1
400db148:	20a220        	or	a10, a2, a2
400db14b:	126192        	s32i	a9, a1, 72
400db14e:	d55381        	l32r	a8, 400d069c <_flash_cache_start+0x684>
400db151:	0008e0        	callx8	a8
400db154:	122192        	l32i	a9, a1, 72
400db157:	fd5a56        	bnez	a10, 400db130 <_fseeko_r+0x124>
400db15a:	0121b2        	l32i	a11, a1, 4
400db15d:	d549a1        	l32r	a10, 400d0684 <_flash_cache_start+0x66c>
400db160:	10aba0        	and	a10, a11, a10
400db163:	d549b1        	l32r	a11, 400d0688 <_flash_cache_start+0x670>
400db166:	c69ab7        	bne	a10, a11, 400db130 <_fseeko_r+0x124>
400db169:	00a4a2        	movi	a10, 0x400
400db16c:	1463a2        	s32i	a10, a3, 80
400db16f:	0613a2        	l16ui	a10, a3, 12
400db172:	209a90        	or	a9, a10, a9
400db175:	065392        	s16i	a9, a3, 12
400db178:	102192        	l32i	a9, a1, 64
400db17b:	759c      	beqz.n	a5, 400db196 <_fseeko_r+0x18a>
400db17d:	0793b2        	l16si	a11, a3, 14
400db180:	20c110        	or	a12, a1, a1
400db183:	20a220        	or	a10, a2, a2
400db186:	d54581        	l32r	a8, 400d069c <_flash_cache_start+0x684>
400db189:	0008e0        	callx8	a8
400db18c:	126a56        	bnez	a10, 400db2b6 <_fseeko_r+0x2aa>
400db18f:	4198      	l32i.n	a9, a1, 16
400db191:	102182        	l32i	a8, a1, 64
400db194:	989a      	add.n	a9, a8, a9
400db196:	27fc      	bnez.n	a7, 400db1cc <_fseeko_r+0x1c0>
400db198:	061382        	l16ui	a8, a3, 12
400db19b:	0768c7        	bbci	a8, 12, 400db1a6 <_fseeko_r+0x19a>
400db19e:	1523a2        	l32i	a10, a3, 84
400db1a1:	000606        	j	400db1bd <_fseeko_r+0x1b1>
400db1a4:	b80000        	lsi	f0, a0, 0x2e0
400db1a7:	1d0c83        	lsi	f8, a12, 116
400db1aa:	126192        	s32i	a9, a1, 72
400db1ad:	07cd      	mov.n	a12, a7
400db1af:	02ad      	mov.n	a10, a2
400db1b1:	0006e0        	callx8	a6
400db1b4:	122192        	l32i	a9, a1, 72
400db1b7:	020a66        	bnei	a10, -1, 400db1bd <_fseeko_r+0x1b1>
400db1ba:	003e06        	j	400db2b6 <_fseeko_r+0x2aa>
400db1bd:	1388      	l32i.n	a8, a3, 4
400db1bf:	d378      	l32i.n	a7, a3, 52
400db1c1:	c04a80        	sub	a4, a10, a8
400db1c4:	478c      	beqz.n	a7, 400db1cc <_fseeko_r+0x1c0>
400db1c6:	102372        	l32i	a7, a3, 64
400db1c9:	c04470        	sub	a4, a4, a7
400db1cc:	d3b8      	l32i.n	a11, a3, 52
400db1ce:	13d8      	l32i.n	a13, a3, 4
400db1d0:	43f8      	l32i.n	a15, a3, 16
400db1d2:	0b9c      	beqz.n	a11, 400db1e6 <_fseeko_r+0x1da>
400db1d4:	f3c8      	l32i.n	a12, a3, 60
400db1d6:	1023e2        	l32i	a14, a3, 64
400db1d9:	c07cf0        	sub	a7, a12, a15
400db1dc:	84da      	add.n	a8, a4, a13
400db1de:	c08870        	sub	a8, a8, a7
400db1e1:	c7ea      	add.n	a12, a7, a14
400db1e3:	0002c6        	j	400db1f2 <_fseeko_r+0x1e6>
400db1e6:	0023c2        	l32i	a12, a3, 0
400db1e9:	c0ccf0        	sub	a12, a12, a15
400db1ec:	c084c0        	sub	a8, a4, a12
400db1ef:	80ccd0        	add	a12, a12, a13
400db1f2:	4b2987        	blt	a9, a8, 400db241 <_fseeko_r+0x235>
400db1f5:	8078c0        	add	a7, a8, a12
400db1f8:	45b977        	bgeu	a9, a7, 400db241 <_fseeko_r+0x235>
400db1fb:	c08980        	sub	a8, a9, a8
400db1fe:	ff8a      	add.n	a15, a15, a8
400db200:	c0cc80        	sub	a12, a12, a8
400db203:	03f9      	s32i.n	a15, a3, 0
400db205:	13c9      	s32i.n	a12, a3, 4
400db207:	db8c      	beqz.n	a11, 400db218 <_fseeko_r+0x20c>
400db209:	44c342        	addi	a4, a3, 68
400db20c:	041b47        	beq	a11, a4, 400db214 <_fseeko_r+0x208>
400db20f:	02ad      	mov.n	a10, a2
400db211:	a96825        	call8	40084894 <_free_r>
400db214:	020c      	movi.n	a2, 0
400db216:	d329      	s32i.n	a2, a3, 52
400db218:	061342        	l16ui	a4, a3, 12
400db21b:	dfaf22        	movi	a2, -33
400db21e:	102420        	and	a2, a4, a2
400db221:	065322        	s16i	a2, a3, 12
400db224:	8c0c      	movi.n	a12, 8
400db226:	0b0c      	movi.n	a11, 0
400db228:	5cc3a2        	addi	a10, a3, 92
400db22b:	d39281        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400db22e:	0008e0        	callx8	a8
400db231:	192322        	l32i	a2, a3, 100
400db234:	042020        	extui	a2, a2, 0, 1
400db237:	0d6216        	beqz	a2, 400db311 <_fseeko_r+0x305>
400db23a:	020c      	movi.n	a2, 0
400db23c:	f01d      	retw.n
400db23e:	000000        	ill
400db241:	142372        	l32i	a7, a3, 80
400db244:	83b8      	l32i.n	a11, a3, 32
400db246:	607070        	neg	a7, a7
400db249:	107790        	and	a7, a7, a9
400db24c:	126192        	s32i	a9, a1, 72
400db24f:	0d0c      	movi.n	a13, 0
400db251:	07cd      	mov.n	a12, a7
400db253:	02ad      	mov.n	a10, a2
400db255:	0006e0        	callx8	a6
400db258:	122192        	l32i	a9, a1, 72
400db25b:	570a26        	beqi	a10, -1, 400db2b6 <_fseeko_r+0x2aa>
400db25e:	43a8      	l32i.n	a10, a3, 16
400db260:	080c      	movi.n	a8, 0
400db262:	d3b8      	l32i.n	a11, a3, 52
400db264:	1389      	s32i.n	a8, a3, 4
400db266:	03a9      	s32i.n	a10, a3, 0
400db268:	181b87        	beq	a11, a8, 400db284 <_fseeko_r+0x278>
400db26b:	44c3a2        	addi	a10, a3, 68
400db26e:	101ba7        	beq	a11, a10, 400db282 <_fseeko_r+0x276>
400db271:	02ad      	mov.n	a10, a2
400db273:	116182        	s32i	a8, a1, 68
400db276:	126192        	s32i	a9, a1, 72
400db279:	a961a5        	call8	40084894 <_free_r>
400db27c:	122192        	l32i	a9, a1, 72
400db27f:	112182        	l32i	a8, a1, 68
400db282:	d389      	s32i.n	a8, a3, 52
400db284:	0613a2        	l16ui	a10, a3, 12
400db287:	dfaf82        	movi	a8, -33
400db28a:	108a80        	and	a8, a10, a8
400db28d:	065382        	s16i	a8, a3, 12
400db290:	c07970        	sub	a7, a9, a7
400db293:	f8d716        	beqz	a7, 400db224 <_fseeko_r+0x218>
400db296:	03bd      	mov.n	a11, a3
400db298:	02ad      	mov.n	a10, a2
400db29a:	d50181        	l32r	a8, 400d06a0 <_flash_cache_start+0x688>
400db29d:	0008e0        	callx8	a8
400db2a0:	2adc      	bnez.n	a10, 400db2b6 <_fseeko_r+0x2aa>
400db2a2:	1398      	l32i.n	a9, a3, 4
400db2a4:	0e3977        	bltu	a9, a7, 400db2b6 <_fseeko_r+0x2aa>
400db2a7:	0328      	l32i.n	a2, a3, 0
400db2a9:	227a      	add.n	a2, a2, a7
400db2ab:	c07970        	sub	a7, a9, a7
400db2ae:	0329      	s32i.n	a2, a3, 0
400db2b0:	1379      	s32i.n	a7, a3, 4
400db2b2:	ffdb86        	j	400db224 <_fseeko_r+0x218>
400db2b5:	03bd00        	lsi	f0, a13, 12
400db2b8:	02ad      	mov.n	a10, a2
400db2ba:	d4f681        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400db2bd:	0008e0        	callx8	a8
400db2c0:	ca8c      	beqz.n	a10, 400db2d0 <_fseeko_r+0x2c4>
400db2c2:	192322        	l32i	a2, a3, 100
400db2c5:	02e207        	bbsi	a2, 0, 400db2cb <_fseeko_r+0x2bf>
400db2c8:	ff6b46        	j	400db079 <_fseeko_r+0x6d>
400db2cb:	ff6d86        	j	400db085 <_fseeko_r+0x79>
400db2ce:	c20000        	quou	a0, a0, a0
400db2d1:	b81021        	l32r	a2, 400c9314 <_rtc_text_end+0x9314>
400db2d4:	05dd83        	lsi	f8, a13, 20
400db2d7:	02ad      	mov.n	a10, a2
400db2d9:	0006e0        	callx8	a6
400db2dc:	020a66        	bnei	a10, -1, 400db2e2 <_fseeko_r+0x2d6>
400db2df:	fff7c6        	j	400db2c2 <_fseeko_r+0x2b6>
400db2e2:	0d23b2        	l32i	a11, a3, 52
400db2e5:	00fb16        	beqz	a11, 400db2f8 <_fseeko_r+0x2ec>
400db2e8:	44c342        	addi	a4, a3, 68
400db2eb:	051b47        	beq	a11, a4, 400db2f4 <_fseeko_r+0x2e8>
400db2ee:	20a220        	or	a10, a2, a2
400db2f1:	a95a25        	call8	40084894 <_free_r>
400db2f4:	020c      	movi.n	a2, 0
400db2f6:	d329      	s32i.n	a2, a3, 52
400db2f8:	4328      	l32i.n	a2, a3, 16
400db2fa:	061342        	l16ui	a4, a3, 12
400db2fd:	0329      	s32i.n	a2, a3, 0
400db2ff:	d4e321        	l32r	a2, 400d068c <_flash_cache_start+0x674>
400db302:	0b0c      	movi.n	a11, 0
400db304:	102420        	and	a2, a4, a2
400db307:	13b9      	s32i.n	a11, a3, 4
400db309:	065322        	s16i	a2, a3, 12
400db30c:	8c0c      	movi.n	a12, 8
400db30e:	ffc586        	j	400db228 <_fseeko_r+0x21c>
400db311:	061342        	l16ui	a4, a3, 12
400db314:	026497        	bbci	a4, 9, 400db31a <_fseeko_r+0x30e>
400db317:	ffc7c6        	j	400db23a <_fseeko_r+0x22e>
400db31a:	58c3a2        	addi	a10, a3, 88
400db31d:	a97f65        	call8	40084b14 <_lock_release_recursive>
400db320:	f01d      	retw.n
	...

400db324 <fseeko>:
400db324:	004136        	entry	a1, 32
400db327:	ad6a25        	call8	400889c8 <__getreent>
400db32a:	20b220        	or	a11, a2, a2
400db32d:	20d440        	or	a13, a4, a4
400db330:	20c330        	or	a12, a3, a3
400db333:	ffcda5        	call8	400db00c <_fseeko_r>
400db336:	0a2d      	mov.n	a2, a10
400db338:	f01d      	retw.n
	...

400db33c <_putchar_r>:
400db33c:	004136        	entry	a1, 32
400db33f:	a28c      	beqz.n	a2, 400db34d <_putchar_r+0x11>
400db341:	6288      	l32i.n	a8, a2, 24
400db343:	68cc      	bnez.n	a8, 400db34d <_putchar_r+0x11>
400db345:	02ad      	mov.n	a10, a2
400db347:	d4d281        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400db34a:	0008e0        	callx8	a8
400db34d:	0222c2        	l32i	a12, a2, 8
400db350:	20b330        	or	a11, a3, a3
400db353:	20a220        	or	a10, a2, a2
400db356:	00a725        	call8	400dbdc8 <_putc_r>
400db359:	0a2d      	mov.n	a2, a10
400db35b:	f01d      	retw.n
400db35d:	000000        	ill

400db360 <putchar>:
400db360:	004136        	entry	a1, 32
400db363:	ad6665        	call8	400889c8 <__getreent>
400db366:	203aa0        	or	a3, a10, a10
400db369:	00ba16        	beqz	a10, 400db378 <putchar+0x18>
400db36c:	062a82        	l32i	a8, a10, 24
400db36f:	005856        	bnez	a8, 400db378 <putchar+0x18>
400db372:	d4c781        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400db375:	0008e0        	callx8	a8
400db378:	0223c2        	l32i	a12, a3, 8
400db37b:	20b220        	or	a11, a2, a2
400db37e:	20a330        	or	a10, a3, a3
400db381:	00a465        	call8	400dbdc8 <_putc_r>
400db384:	0a2d      	mov.n	a2, a10
400db386:	f01d      	retw.n

400db388 <_puts_r>:
400db388:	008136        	entry	a1, 64
400db38b:	20a330        	or	a10, a3, a3
400db38e:	d33e81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400db391:	0008e0        	callx8	a8
400db394:	0139      	s32i.n	a3, a1, 0
400db396:	d4c331        	l32r	a3, 400d06a4 <_flash_cache_start+0x68c>
400db399:	11a9      	s32i.n	a10, a1, 4
400db39b:	2139      	s32i.n	a3, a1, 8
400db39d:	130c      	movi.n	a3, 1
400db39f:	aa3a      	add.n	a10, a10, a3
400db3a1:	3139      	s32i.n	a3, a1, 12
400db3a3:	230c      	movi.n	a3, 2
400db3a5:	61a9      	s32i.n	a10, a1, 24
400db3a7:	4119      	s32i.n	a1, a1, 16
400db3a9:	5139      	s32i.n	a3, a1, 20
400db3ab:	b28c      	beqz.n	a2, 400db3ba <_puts_r+0x32>
400db3ad:	6238      	l32i.n	a3, a2, 24
400db3af:	73cc      	bnez.n	a3, 400db3ba <_puts_r+0x32>
400db3b1:	20a220        	or	a10, a2, a2
400db3b4:	d4b781        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400db3b7:	0008e0        	callx8	a8
400db3ba:	2238      	l32i.n	a3, a2, 8
400db3bc:	192382        	l32i	a8, a3, 100
400db3bf:	0ee807        	bbsi	a8, 0, 400db3d1 <_puts_r+0x49>
400db3c2:	061382        	l16ui	a8, a3, 12
400db3c5:	08e897        	bbsi	a8, 9, 400db3d1 <_puts_r+0x49>
400db3c8:	58c3a2        	addi	a10, a3, 88
400db3cb:	201110        	or	a1, a1, a1
400db3ce:	a970a5        	call8	40084ad8 <_lock_acquire_recursive>
400db3d1:	061382        	l16ui	a8, a3, 12
400db3d4:	d45d91        	l32r	a9, 400d0548 <_flash_cache_start+0x530>
400db3d7:	23a880        	sext	a10, a8, 15
400db3da:	108980        	and	a8, a9, a8
400db3dd:	f48080        	extui	a8, a8, 0, 16
400db3e0:	08dc      	bnez.n	a8, 400db3f4 <_puts_r+0x6c>
400db3e2:	209a90        	or	a9, a10, a9
400db3e5:	065392        	s16i	a9, a3, 12
400db3e8:	d4b081        	l32r	a8, 400d06a8 <_flash_cache_start+0x690>
400db3eb:	192392        	l32i	a9, a3, 100
400db3ee:	108980        	and	a8, a9, a8
400db3f1:	196382        	s32i	a8, a3, 100
400db3f4:	20a220        	or	a10, a2, a2
400db3f7:	10c1c2        	addi	a12, a1, 16
400db3fa:	20b330        	or	a11, a3, a3
400db3fd:	d4ab81        	l32r	a8, 400d06ac <_flash_cache_start+0x694>
400db400:	0008e0        	callx8	a8
400db403:	0aa082        	movi	a8, 10
400db406:	f27c      	movi.n	a2, -1
400db408:	8328a0        	moveqz	a2, a8, a10
400db40b:	192382        	l32i	a8, a3, 100
400db40e:	0be807        	bbsi	a8, 0, 400db41d <_puts_r+0x95>
400db411:	061382        	l16ui	a8, a3, 12
400db414:	05e897        	bbsi	a8, 9, 400db41d <_puts_r+0x95>
400db417:	58c3a2        	addi	a10, a3, 88
400db41a:	a96fa5        	call8	40084b14 <_lock_release_recursive>
400db41d:	f01d      	retw.n
	...

400db420 <puts>:
400db420:	004136        	entry	a1, 32
400db423:	ad5a65        	call8	400889c8 <__getreent>
400db426:	20b220        	or	a11, a2, a2
400db429:	fff5e5        	call8	400db388 <_puts_r>
400db42c:	202aa0        	or	a2, a10, a10
400db42f:	000090        	retw
	...

400db434 <cleanup_glue>:
400db434:	004136        	entry	a1, 32
400db437:	03b8      	l32i.n	a11, a3, 0
400db439:	3b8c      	beqz.n	a11, 400db440 <cleanup_glue+0xc>
400db43b:	02ad      	mov.n	a10, a2
400db43d:	ffff65        	call8	400db434 <cleanup_glue>
400db440:	20b330        	or	a11, a3, a3
400db443:	20a220        	or	a10, a2, a2
400db446:	a944e5        	call8	40084894 <_free_r>
400db449:	000090        	retw

400db44c <_reclaim_reent>:
400db44c:	004136        	entry	a1, 32
400db44f:	ad57a5        	call8	400889c8 <__getreent>
400db452:	0292a7        	bne	a2, a10, 400db458 <_reclaim_reent+0xc>
400db455:	003046        	j	400db51a <_reclaim_reent+0xce>
400db458:	092232        	l32i	a3, a2, 36
400db45b:	037316        	beqz	a3, 400db496 <_reclaim_reent+0x4a>
400db45e:	032332        	l32i	a3, a3, 12
400db461:	63ac      	beqz.n	a3, 400db48b <_reclaim_reent+0x3f>
400db463:	030c      	movi.n	a3, 0
400db465:	9248      	l32i.n	a4, a2, 36
400db467:	3488      	l32i.n	a8, a4, 12
400db469:	883a      	add.n	a8, a8, a3
400db46b:	08b8      	l32i.n	a11, a8, 0
400db46d:	000246        	j	400db47a <_reclaim_reent+0x2e>
400db470:	002b42        	l32i	a4, a11, 0
400db473:	02ad      	mov.n	a10, a2
400db475:	a941e5        	call8	40084894 <_free_r>
400db478:	04bd      	mov.n	a11, a4
400db47a:	ff2b56        	bnez	a11, 400db470 <_reclaim_reent+0x24>
400db47d:	334b      	addi.n	a3, a3, 4
400db47f:	e2e366        	bnei	a3, 128, 400db465 <_reclaim_reent+0x19>
400db482:	9238      	l32i.n	a3, a2, 36
400db484:	02ad      	mov.n	a10, a2
400db486:	33b8      	l32i.n	a11, a3, 12
400db488:	a940a5        	call8	40084894 <_free_r>
400db48b:	9238      	l32i.n	a3, a2, 36
400db48d:	03b8      	l32i.n	a11, a3, 0
400db48f:	3b8c      	beqz.n	a11, 400db496 <_reclaim_reent+0x4a>
400db491:	02ad      	mov.n	a10, a2
400db493:	a94025        	call8	40084894 <_free_r>
400db496:	0522b2        	l32i	a11, a2, 20
400db499:	005b16        	beqz	a11, 400db4a2 <_reclaim_reent+0x56>
400db49c:	20a220        	or	a10, a2, a2
400db49f:	a93f65        	call8	40084894 <_free_r>
400db4a2:	0922b2        	l32i	a11, a2, 36
400db4a5:	005b16        	beqz	a11, 400db4ae <_reclaim_reent+0x62>
400db4a8:	20a220        	or	a10, a2, a2
400db4ab:	a93ea5        	call8	40084894 <_free_r>
400db4ae:	0e22b2        	l32i	a11, a2, 56
400db4b1:	005b16        	beqz	a11, 400db4ba <_reclaim_reent+0x6e>
400db4b4:	20a220        	or	a10, a2, a2
400db4b7:	a93de5        	call8	40084894 <_free_r>
400db4ba:	f2b8      	l32i.n	a11, a2, 60
400db4bc:	004b16        	beqz	a11, 400db4c4 <_reclaim_reent+0x78>
400db4bf:	02ad      	mov.n	a10, a2
400db4c1:	a93d25        	call8	40084894 <_free_r>
400db4c4:	1022b2        	l32i	a11, a2, 64
400db4c7:	6b8c      	beqz.n	a11, 400db4d1 <_reclaim_reent+0x85>
400db4c9:	02ad      	mov.n	a10, a2
400db4cb:	201110        	or	a1, a1, a1
400db4ce:	a93c65        	call8	40084894 <_free_r>
400db4d1:	3b22b2        	l32i	a11, a2, 236
400db4d4:	004b16        	beqz	a11, 400db4dc <_reclaim_reent+0x90>
400db4d7:	02ad      	mov.n	a10, a2
400db4d9:	a93ba5        	call8	40084894 <_free_r>
400db4dc:	3a22b2        	l32i	a11, a2, 232
400db4df:	6b8c      	beqz.n	a11, 400db4e9 <_reclaim_reent+0x9d>
400db4e1:	02ad      	mov.n	a10, a2
400db4e3:	201110        	or	a1, a1, a1
400db4e6:	a93ae5        	call8	40084894 <_free_r>
400db4e9:	122232        	l32i	a3, a2, 72
400db4ec:	938c      	beqz.n	a3, 400db4f9 <_reclaim_reent+0xad>
400db4ee:	2223b2        	l32i	a11, a3, 136
400db4f1:	004b16        	beqz	a11, 400db4f9 <_reclaim_reent+0xad>
400db4f4:	02ad      	mov.n	a10, a2
400db4f6:	a939e5        	call8	40084894 <_free_r>
400db4f9:	0d22b2        	l32i	a11, a2, 52
400db4fc:	005b16        	beqz	a11, 400db505 <_reclaim_reent+0xb9>
400db4ff:	20a220        	or	a10, a2, a2
400db502:	a93925        	call8	40084894 <_free_r>
400db505:	6238      	l32i.n	a3, a2, 24
400db507:	f38c      	beqz.n	a3, 400db51a <_reclaim_reent+0xce>
400db509:	a238      	l32i.n	a3, a2, 40
400db50b:	02ad      	mov.n	a10, a2
400db50d:	0003e0        	callx8	a3
400db510:	3622b2        	l32i	a11, a2, 216
400db513:	3b8c      	beqz.n	a11, 400db51a <_reclaim_reent+0xce>
400db515:	02ad      	mov.n	a10, a2
400db517:	fff1e5        	call8	400db434 <cleanup_glue>
400db51a:	f01d      	retw.n

400db51c <__sflags>:
400db51c:	004136        	entry	a1, 32
400db51f:	000352        	l8ui	a5, a3, 0
400db522:	72a062        	movi	a6, 114
400db525:	241567        	beq	a5, a6, 400db54d <__sflags+0x31>
400db528:	77a062        	movi	a6, 119
400db52b:	091567        	beq	a5, a6, 400db538 <__sflags+0x1c>
400db52e:	61a062        	movi	a6, 97
400db531:	2f9567        	bne	a5, a6, 400db564 <__sflags+0x48>
400db534:	000286        	j	400db542 <__sflags+0x26>
400db537:	a69200        	lsi	f0, a2, 0x298
400db53a:	180c00        	lsxp	f0, a12, a0
400db53d:	820c      	movi.n	a2, 8
400db53f:	000406        	j	400db553 <__sflags+0x37>
400db542:	08a292        	movi	a9, 0x208
400db545:	180c      	movi.n	a8, 1
400db547:	08a122        	movi	a2, 0x108
400db54a:	000146        	j	400db553 <__sflags+0x37>
400db54d:	090c      	movi.n	a9, 0
400db54f:	098d      	mov.n	a8, a9
400db551:	420c      	movi.n	a2, 4
400db553:	b72c      	movi.n	a7, 43
400db555:	3c6c      	movi.n	a12, -29
400db557:	0d1c      	movi.n	a13, 16
400db559:	ce7c      	movi.n	a14, -4
400db55b:	2f0c      	movi.n	a15, 2
400db55d:	78a052        	movi	a5, 120
400db560:	000a06        	j	400db58c <__sflags+0x70>
400db563:	631c00        	minu	a1, a12, a0
400db566:	0239      	s32i.n	a3, a2, 0
400db568:	020c      	movi.n	a2, 0
400db56a:	f01d      	retw.n
400db56c:	101a77        	beq	a10, a7, 400db580 <__sflags+0x64>
400db56f:	d444b1        	l32r	a11, 400d0680 <_flash_cache_start+0x668>
400db572:	c0aa50        	sub	a10, a10, a5
400db575:	2068b0        	or	a6, a8, a11
400db578:	8386a0        	moveqz	a8, a6, a10
400db57b:	000346        	j	400db58c <__sflags+0x70>
400db57e:	c00000        	sub	a0, a0, a0
400db581:	e01022        	l16ui	a2, a0, 0x1c0
400db584:	1088      	l32i.n	a8, a0, 4
400db586:	2022d0        	or	a2, a2, a13
400db589:	2088f0        	or	a8, a8, a15
400db58c:	331b      	addi.n	a3, a3, 1
400db58e:	0003a2        	l8ui	a10, a3, 0
400db591:	fd7a56        	bnez	a10, 400db56c <__sflags+0x50>
400db594:	208890        	or	a8, a8, a9
400db597:	0489      	s32i.n	a8, a4, 0
400db599:	f01d      	retw.n
	...

400db59c <_Balloc>:
400db59c:	004136        	entry	a1, 32
400db59f:	9248      	l32i.n	a4, a2, 36
400db5a1:	011456        	bnez	a4, 400db5b6 <_Balloc+0x1a>
400db5a4:	0a1c      	movi.n	a10, 16
400db5a6:	d2d181        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400db5a9:	0008e0        	callx8	a8
400db5ac:	92a9      	s32i.n	a10, a2, 36
400db5ae:	1a49      	s32i.n	a4, a10, 4
400db5b0:	2a49      	s32i.n	a4, a10, 8
400db5b2:	0a49      	s32i.n	a4, a10, 0
400db5b4:	3a49      	s32i.n	a4, a10, 12
400db5b6:	9248      	l32i.n	a4, a2, 36
400db5b8:	3488      	l32i.n	a8, a4, 12
400db5ba:	c88c      	beqz.n	a8, 400db5ca <_Balloc+0x2e>
400db5bc:	9248      	l32i.n	a4, a2, 36
400db5be:	3448      	l32i.n	a4, a4, 12
400db5c0:	a04340        	addx4	a4, a3, a4
400db5c3:	04a8      	l32i.n	a10, a4, 0
400db5c5:	7adc      	bnez.n	a10, 400db5e0 <_Balloc+0x44>
400db5c7:	000706        	j	400db5e7 <_Balloc+0x4b>
400db5ca:	1c2c      	movi.n	a12, 33
400db5cc:	4b0c      	movi.n	a11, 4
400db5ce:	02ad      	mov.n	a10, a2
400db5d0:	a92e25        	call8	400848b4 <_calloc_r>
400db5d3:	34a9      	s32i.n	a10, a4, 12
400db5d5:	9248      	l32i.n	a4, a2, 36
400db5d7:	3448      	l32i.n	a4, a4, 12
400db5d9:	fdf456        	bnez	a4, 400db5bc <_Balloc+0x20>
400db5dc:	020c      	movi.n	a2, 0
400db5de:	f01d      	retw.n
400db5e0:	0a28      	l32i.n	a2, a10, 0
400db5e2:	0429      	s32i.n	a2, a4, 0
400db5e4:	0006c6        	j	400db603 <_Balloc+0x67>
400db5e7:	01a0b2        	movi	a11, 1
400db5ea:	401300        	ssl	a3
400db5ed:	a14b00        	sll	a4, a11
400db5f0:	05c4c2        	addi	a12, a4, 5
400db5f3:	11cce0        	slli	a12, a12, 2
400db5f6:	20a220        	or	a10, a2, a2
400db5f9:	a92ba5        	call8	400848b4 <_calloc_r>
400db5fc:	fdca16        	beqz	a10, 400db5dc <_Balloc+0x40>
400db5ff:	1a39      	s32i.n	a3, a10, 4
400db601:	2a49      	s32i.n	a4, a10, 8
400db603:	020c      	movi.n	a2, 0
400db605:	4a29      	s32i.n	a2, a10, 16
400db607:	3a29      	s32i.n	a2, a10, 12
400db609:	0a2d      	mov.n	a2, a10
400db60b:	f01d      	retw.n
400db60d:	000000        	ill

400db610 <_Bfree>:
400db610:	004136        	entry	a1, 32
400db613:	9248      	l32i.n	a4, a2, 36
400db615:	011456        	bnez	a4, 400db62a <_Bfree+0x1a>
400db618:	0a1c      	movi.n	a10, 16
400db61a:	d2b481        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400db61d:	0008e0        	callx8	a8
400db620:	92a9      	s32i.n	a10, a2, 36
400db622:	1a49      	s32i.n	a4, a10, 4
400db624:	2a49      	s32i.n	a4, a10, 8
400db626:	0a49      	s32i.n	a4, a10, 0
400db628:	3a49      	s32i.n	a4, a10, 12
400db62a:	e38c      	beqz.n	a3, 400db63c <_Bfree+0x2c>
400db62c:	9228      	l32i.n	a2, a2, 36
400db62e:	1348      	l32i.n	a4, a3, 4
400db630:	3228      	l32i.n	a2, a2, 12
400db632:	a04420        	addx4	a4, a4, a2
400db635:	0428      	l32i.n	a2, a4, 0
400db637:	0329      	s32i.n	a2, a3, 0
400db639:	006432        	s32i	a3, a4, 0
400db63c:	f01d      	retw.n
	...

400db640 <__multadd>:
400db640:	004136        	entry	a1, 32
400db643:	4368      	l32i.n	a6, a3, 16
400db645:	190c      	movi.n	a9, 1
400db647:	14c3b2        	addi	a11, a3, 20
400db64a:	539960        	max	a9, a9, a6
400db64d:	238976        	loop	a9, 400db674 <__multadd+0x34>
400db650:	0ba8      	l32i.n	a10, a11, 0
400db652:	f480a0        	extui	a8, a10, 0, 16
400db655:	828840        	mull	a8, a8, a4
400db658:	f5a0a0        	extui	a10, a10, 16, 16
400db65b:	885a      	add.n	a8, a8, a5
400db65d:	82aa40        	mull	a10, a10, a4
400db660:	f55080        	extui	a5, a8, 16, 16
400db663:	aa5a      	add.n	a10, a10, a5
400db665:	f550a0        	extui	a5, a10, 16, 16
400db668:	f48080        	extui	a8, a8, 0, 16
400db66b:	11aa00        	slli	a10, a10, 16
400db66e:	8a8a      	add.n	a8, a10, a8
400db670:	0b89      	s32i.n	a8, a11, 0
400db672:	bb4b      	addi.n	a11, a11, 4
400db674:	55bc      	beqz.n	a5, 400db6ad <__multadd+0x6d>
400db676:	2348      	l32i.n	a4, a3, 8
400db678:	282647        	blt	a6, a4, 400db6a4 <__multadd+0x64>
400db67b:	13b8      	l32i.n	a11, a3, 4
400db67d:	02ad      	mov.n	a10, a2
400db67f:	01cbb2        	addi	a11, a11, 1
400db682:	fff1a5        	call8	400db59c <_Balloc>
400db685:	43c8      	l32i.n	a12, a3, 16
400db687:	b3cb      	addi.n	a11, a3, 12
400db689:	cc2b      	addi.n	a12, a12, 2
400db68b:	204aa0        	or	a4, a10, a10
400db68e:	11cce0        	slli	a12, a12, 2
400db691:	0ccaa2        	addi	a10, a10, 12
400db694:	d28181        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400db697:	0008e0        	callx8	a8
400db69a:	03bd      	mov.n	a11, a3
400db69c:	20a220        	or	a10, a2, a2
400db69f:	fff725        	call8	400db610 <_Bfree>
400db6a2:	043d      	mov.n	a3, a4
400db6a4:	a02630        	addx4	a2, a6, a3
400db6a7:	5259      	s32i.n	a5, a2, 20
400db6a9:	661b      	addi.n	a6, a6, 1
400db6ab:	4369      	s32i.n	a6, a3, 16
400db6ad:	032d      	mov.n	a2, a3
400db6af:	f01d      	retw.n
400db6b1:	000000        	ill

400db6b4 <__s2b>:
400db6b4:	004136        	entry	a1, 32
400db6b7:	d3fe91        	l32r	a9, 400d06b0 <_flash_cache_start+0x698>
400db6ba:	858b      	addi.n	a8, a5, 8
400db6bc:	b29890        	mulsh	a9, a8, a9
400db6bf:	318f80        	srai	a8, a8, 31
400db6c2:	219190        	srai	a9, a9, 1
400db6c5:	c08980        	sub	a8, a9, a8
400db6c8:	170c      	movi.n	a7, 1
400db6ca:	0b0c      	movi.n	a11, 0
400db6cc:	000146        	j	400db6d5 <__s2b+0x21>
400db6cf:	77f000        	lsi	f0, a0, 0x1dc
400db6d2:	bb1b11        	l32r	a1, 400ca340 <_rtc_text_end+0xa340>
400db6d5:	f72787        	blt	a7, a8, 400db6d0 <__s2b+0x1c>
400db6d8:	02ad      	mov.n	a10, a2
400db6da:	ffec25        	call8	400db59c <_Balloc>
400db6dd:	5a69      	s32i.n	a6, a10, 20
400db6df:	160c      	movi.n	a6, 1
400db6e1:	4a69      	s32i.n	a6, a10, 16
400db6e3:	960c      	movi.n	a6, 9
400db6e5:	23a647        	bge	a6, a4, 400db70c <__s2b+0x58>
400db6e8:	806360        	add	a6, a3, a6
400db6eb:	067d      	mov.n	a7, a6
400db6ed:	803340        	add	a3, a3, a4
400db6f0:	0007d2        	l8ui	a13, a7, 0
400db6f3:	0abd      	mov.n	a11, a10
400db6f5:	d0cdd2        	addi	a13, a13, -48
400db6f8:	ac0c      	movi.n	a12, 10
400db6fa:	02ad      	mov.n	a10, a2
400db6fc:	771b      	addi.n	a7, a7, 1
400db6fe:	fff425        	call8	400db640 <__multadd>
400db701:	eb9737        	bne	a7, a3, 400db6f0 <__s2b+0x3c>
400db704:	364a      	add.n	a3, a6, a4
400db706:	f8c332        	addi	a3, a3, -8
400db709:	0000c6        	j	400db710 <__s2b+0x5c>
400db70c:	33ab      	addi.n	a3, a3, 10
400db70e:	064d      	mov.n	a4, a6
400db710:	c04430        	sub	a4, a4, a3
400db713:	0004c6        	j	400db72a <__s2b+0x76>
400db716:	000000        	ill
400db719:	0003d2        	l8ui	a13, a3, 0
400db71c:	0abd      	mov.n	a11, a10
400db71e:	d0cdd2        	addi	a13, a13, -48
400db721:	ac0c      	movi.n	a12, 10
400db723:	02ad      	mov.n	a10, a2
400db725:	fff1a5        	call8	400db640 <__multadd>
400db728:	331b      	addi.n	a3, a3, 1
400db72a:	643a      	add.n	a6, a4, a3
400db72c:	e92657        	blt	a6, a5, 400db719 <__s2b+0x65>
400db72f:	0a2d      	mov.n	a2, a10
400db731:	f01d      	retw.n
	...

400db734 <__hi0bits>:
400db734:	004136        	entry	a1, 32
400db737:	208220        	or	a8, a2, a2
400db73a:	d3de21        	l32r	a2, 400d06b4 <_flash_cache_start+0x69c>
400db73d:	00a092        	movi	a9, 0
400db740:	058827        	bany	a8, a2, 400db749 <__hi0bits+0x15>
400db743:	118800        	slli	a8, a8, 16
400db746:	10a092        	movi	a9, 16
400db749:	d3db21        	l32r	a2, 400d06b8 <_flash_cache_start+0x6a0>
400db74c:	058827        	bany	a8, a2, 400db755 <__hi0bits+0x21>
400db74f:	08c992        	addi	a9, a9, 8
400db752:	118880        	slli	a8, a8, 8
400db755:	d3d921        	l32r	a2, 400d06bc <_flash_cache_start+0x6a4>
400db758:	058827        	bany	a8, a2, 400db761 <__hi0bits+0x2d>
400db75b:	04c992        	addi	a9, a9, 4
400db75e:	1188c0        	slli	a8, a8, 4
400db761:	d25421        	l32r	a2, 400d00b4 <_flash_cache_start+0x9c>
400db764:	048827        	bany	a8, a2, 400db76c <__hi0bits+0x38>
400db767:	992b      	addi.n	a9, a9, 2
400db769:	1188e0        	slli	a8, a8, 2
400db76c:	092d      	mov.n	a2, a9
400db76e:	00c896        	bltz	a8, 400db77e <__hi0bits+0x4a>
400db771:	d3d321        	l32r	a2, 400d06c0 <_flash_cache_start+0x6a8>
400db774:	991b      	addi.n	a9, a9, 1
400db776:	108820        	and	a8, a8, a2
400db779:	022c      	movi.n	a2, 32
400db77b:	932980        	movnez	a2, a9, a8
400db77e:	f01d      	retw.n

400db780 <__lo0bits>:
400db780:	004136        	entry	a1, 32
400db783:	0288      	l32i.n	a8, a2, 0
400db785:	02ad      	mov.n	a10, a2
400db787:	249080        	extui	a9, a8, 0, 3
400db78a:	a99c      	beqz.n	a9, 400db7a8 <__lo0bits+0x28>
400db78c:	020c      	movi.n	a2, 0
400db78e:	56d827        	bbs	a8, a2, 400db7e8 <__lo0bits+0x68>
400db791:	290c      	movi.n	a9, 2
400db793:	090897        	bnone	a8, a9, 400db7a0 <__lo0bits+0x20>
400db796:	418180        	srli	a8, a8, 1
400db799:	0a89      	s32i.n	a8, a10, 0
400db79b:	120c      	movi.n	a2, 1
400db79d:	f01d      	retw.n
400db79f:	828000        	mull	a8, a0, a0
400db7a2:	0f4641        	l32r	a4, 4009f4bc <_iram_end+0x11968>
400db7a5:	000000        	ill
400db7a8:	f42080        	extui	a2, a8, 0, 16
400db7ab:	005256        	bnez	a2, 400db7b4 <__lo0bits+0x34>
400db7ae:	f58080        	extui	a8, a8, 16, 16
400db7b1:	10a092        	movi	a9, 16
400db7b4:	742080        	extui	a2, a8, 0, 8
400db7b7:	005256        	bnez	a2, 400db7c0 <__lo0bits+0x40>
400db7ba:	08c992        	addi	a9, a9, 8
400db7bd:	418880        	srli	a8, a8, 8
400db7c0:	342080        	extui	a2, a8, 0, 4
400db7c3:	005256        	bnez	a2, 400db7cc <__lo0bits+0x4c>
400db7c6:	04c992        	addi	a9, a9, 4
400db7c9:	418480        	srli	a8, a8, 4
400db7cc:	142080        	extui	a2, a8, 0, 2
400db7cf:	005256        	bnez	a2, 400db7d8 <__lo0bits+0x58>
400db7d2:	02c992        	addi	a9, a9, 2
400db7d5:	418280        	srli	a8, a8, 2
400db7d8:	08e807        	bbsi	a8, 0, 400db7e4 <__lo0bits+0x64>
400db7db:	418180        	srli	a8, a8, 1
400db7de:	022c      	movi.n	a2, 32
400db7e0:	488c      	beqz.n	a8, 400db7e8 <__lo0bits+0x68>
400db7e2:	991b      	addi.n	a9, a9, 1
400db7e4:	0a89      	s32i.n	a8, a10, 0
400db7e6:	092d      	mov.n	a2, a9
400db7e8:	f01d      	retw.n
	...

400db7ec <__i2b>:
400db7ec:	004136        	entry	a1, 32
400db7ef:	1b0c      	movi.n	a11, 1
400db7f1:	02ad      	mov.n	a10, a2
400db7f3:	ffdaa5        	call8	400db59c <_Balloc>
400db7f6:	180c      	movi.n	a8, 1
400db7f8:	5a39      	s32i.n	a3, a10, 20
400db7fa:	4a89      	s32i.n	a8, a10, 16
400db7fc:	0a2d      	mov.n	a2, a10
400db7fe:	f01d      	retw.n

400db800 <__multiply>:
400db800:	006136        	entry	a1, 48
400db803:	4368      	l32i.n	a6, a3, 16
400db805:	4458      	l32i.n	a5, a4, 16
400db807:	06a657        	bge	a6, a5, 400db811 <__multiply+0x11>
400db80a:	035d      	mov.n	a5, a3
400db80c:	203440        	or	a3, a4, a4
400db80f:	054d      	mov.n	a4, a5
400db811:	4378      	l32i.n	a7, a3, 16
400db813:	4468      	l32i.n	a6, a4, 16
400db815:	2388      	l32i.n	a8, a3, 8
400db817:	576a      	add.n	a5, a7, a6
400db819:	0123b2        	l32i	a11, a3, 4
400db81c:	01a857        	bge	a8, a5, 400db821 <__multiply+0x21>
400db81f:	bb1b      	addi.n	a11, a11, 1
400db821:	02ad      	mov.n	a10, a2
400db823:	ffd7a5        	call8	400db59c <_Balloc>
400db826:	14cab2        	addi	a11, a10, 20
400db829:	a0e5b0        	addx4	a14, a5, a11
400db82c:	0b2d      	mov.n	a2, a11
400db82e:	080c      	movi.n	a8, 0
400db830:	000106        	j	400db838 <__multiply+0x38>
400db833:	028900        	andb	b8, b9, b0
400db836:	224b      	addi.n	a2, a2, 4
400db838:	f832e7        	bltu	a2, a14, 400db834 <__multiply+0x34>
400db83b:	14c332        	addi	a3, a3, 20
400db83e:	14c442        	addi	a4, a4, 20
400db841:	a02730        	addx4	a2, a7, a3
400db844:	a06640        	addx4	a6, a6, a4
400db847:	0129      	s32i.n	a2, a1, 0
400db849:	1169      	s32i.n	a6, a1, 4
400db84b:	002586        	j	400db8e5 <__multiply+0xe5>
400db84e:	c20000        	quou	a0, a0, a0
400db851:	160014        	lsi	f1, a0, 88
400db854:	045c      	movi.n	a4, 80
400db856:	0b7d      	mov.n	a7, a11
400db858:	208330        	or	a8, a3, a3
400db85b:	00a092        	movi	a9, 0
400db85e:	0868      	l32i.n	a6, a8, 0
400db860:	07f8      	l32i.n	a15, a7, 0
400db862:	f4d060        	extui	a13, a6, 0, 16
400db865:	82ddc0        	mull	a13, a13, a12
400db868:	f420f0        	extui	a2, a15, 0, 16
400db86b:	f56060        	extui	a6, a6, 16, 16
400db86e:	2d2a      	add.n	a2, a13, a2
400db870:	8266c0        	mull	a6, a6, a12
400db873:	229a      	add.n	a2, a2, a9
400db875:	f590f0        	extui	a9, a15, 16, 16
400db878:	669a      	add.n	a6, a6, a9
400db87a:	f59020        	extui	a9, a2, 16, 16
400db87d:	669a      	add.n	a6, a6, a9
400db87f:	f59060        	extui	a9, a6, 16, 16
400db882:	f42020        	extui	a2, a2, 0, 16
400db885:	116600        	slli	a6, a6, 16
400db888:	202620        	or	a2, a6, a2
400db88b:	0729      	s32i.n	a2, a7, 0
400db88d:	0128      	l32i.n	a2, a1, 0
400db88f:	2179      	s32i.n	a7, a1, 8
400db891:	884b      	addi.n	a8, a8, 4
400db893:	774b      	addi.n	a7, a7, 4
400db895:	c53827        	bltu	a8, a2, 400db85e <__multiply+0x5e>
400db898:	21d8      	l32i.n	a13, a1, 8
400db89a:	1d99      	s32i.n	a9, a13, 4
400db89c:	0114f2        	l16ui	a15, a4, 2
400db89f:	efbc      	beqz.n	a15, 400db8e1 <__multiply+0xe1>
400db8a1:	0b88      	l32i.n	a8, a11, 0
400db8a3:	03dd      	mov.n	a13, a3
400db8a5:	0bcd      	mov.n	a12, a11
400db8a7:	060c      	movi.n	a6, 0
400db8a9:	001d22        	l16ui	a2, a13, 0
400db8ac:	011c92        	l16ui	a9, a12, 2
400db8af:	8222f0        	mull	a2, a2, a15
400db8b2:	f48080        	extui	a8, a8, 0, 16
400db8b5:	929a      	add.n	a9, a2, a9
400db8b7:	696a      	add.n	a6, a9, a6
400db8b9:	112600        	slli	a2, a6, 16
400db8bc:	208280        	or	a8, a2, a8
400db8bf:	0c89      	s32i.n	a8, a12, 0
400db8c1:	011d82        	l16ui	a8, a13, 2
400db8c4:	021c22        	l16ui	a2, a12, 4
400db8c7:	8288f0        	mull	a8, a8, a15
400db8ca:	f56060        	extui	a6, a6, 16, 16
400db8cd:	882a      	add.n	a8, a8, a2
400db8cf:	0128      	l32i.n	a2, a1, 0
400db8d1:	886a      	add.n	a8, a8, a6
400db8d3:	dd4b      	addi.n	a13, a13, 4
400db8d5:	0c7d      	mov.n	a7, a12
400db8d7:	f56080        	extui	a6, a8, 16, 16
400db8da:	cc4b      	addi.n	a12, a12, 4
400db8dc:	c93d27        	bltu	a13, a2, 400db8a9 <__multiply+0xa9>
400db8df:	1789      	s32i.n	a8, a7, 4
400db8e1:	444b      	addi.n	a4, a4, 4
400db8e3:	bb4b      	addi.n	a11, a11, 4
400db8e5:	11d8      	l32i.n	a13, a1, 4
400db8e7:	02b4d7        	bgeu	a4, a13, 400db8ed <__multiply+0xed>
400db8ea:	ffd886        	j	400db850 <__multiply+0x50>
400db8ed:	000046        	j	400db8f2 <__multiply+0xf2>
400db8f0:	550b      	addi.n	a5, a5, -1
400db8f2:	0715a6        	blti	a5, 1, 400db8fd <__multiply+0xfd>
400db8f5:	fccee2        	addi	a14, a14, -4
400db8f8:	0e28      	l32i.n	a2, a14, 0
400db8fa:	ff2216        	beqz	a2, 400db8f0 <__multiply+0xf0>
400db8fd:	4a59      	s32i.n	a5, a10, 16
400db8ff:	0a2d      	mov.n	a2, a10
400db901:	f01d      	retw.n
	...

400db904 <__pow5mult>:
400db904:	004136        	entry	a1, 32
400db907:	145040        	extui	a5, a4, 0, 2
400db90a:	459c      	beqz.n	a5, 400db922 <__pow5mult+0x1e>
400db90c:	d36e61        	l32r	a6, 400d06c4 <_flash_cache_start+0x6ac>
400db90f:	550b      	addi.n	a5, a5, -1
400db911:	a05560        	addx4	a5, a5, a6
400db914:	05c8      	l32i.n	a12, a5, 0
400db916:	03bd      	mov.n	a11, a3
400db918:	00a0d2        	movi	a13, 0
400db91b:	02ad      	mov.n	a10, a2
400db91d:	ffd225        	call8	400db640 <__multadd>
400db920:	0a3d      	mov.n	a3, a10
400db922:	214240        	srai	a4, a4, 2
400db925:	067416        	beqz	a4, 400db990 <__pow5mult+0x8c>
400db928:	9258      	l32i.n	a5, a2, 36
400db92a:	05dc      	bnez.n	a5, 400db93e <__pow5mult+0x3a>
400db92c:	0a1c      	movi.n	a10, 16
400db92e:	d1ef81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400db931:	0008e0        	callx8	a8
400db934:	92a9      	s32i.n	a10, a2, 36
400db936:	1a59      	s32i.n	a5, a10, 4
400db938:	2a59      	s32i.n	a5, a10, 8
400db93a:	0a59      	s32i.n	a5, a10, 0
400db93c:	3a59      	s32i.n	a5, a10, 12
400db93e:	9268      	l32i.n	a6, a2, 36
400db940:	2658      	l32i.n	a5, a6, 8
400db942:	e5cc      	bnez.n	a5, 400db954 <__pow5mult+0x50>
400db944:	71a2b2        	movi	a11, 0x271
400db947:	02ad      	mov.n	a10, a2
400db949:	ffea25        	call8	400db7ec <__i2b>
400db94c:	26a9      	s32i.n	a10, a6, 8
400db94e:	060c      	movi.n	a6, 0
400db950:	0a5d      	mov.n	a5, a10
400db952:	0a69      	s32i.n	a6, a10, 0
400db954:	060c      	movi.n	a6, 0
400db956:	000086        	j	400db95c <__pow5mult+0x58>
400db959:	0a5d00        	add.s	f5, f13, f0
400db95c:	156407        	bbci	a4, 0, 400db975 <__pow5mult+0x71>
400db95f:	03bd      	mov.n	a11, a3
400db961:	05cd      	mov.n	a12, a5
400db963:	02ad      	mov.n	a10, a2
400db965:	ffe9a5        	call8	400db800 <__multiply>
400db968:	0a7d      	mov.n	a7, a10
400db96a:	03bd      	mov.n	a11, a3
400db96c:	20a220        	or	a10, a2, a2
400db96f:	ffca25        	call8	400db610 <_Bfree>
400db972:	203770        	or	a3, a7, a7
400db975:	214140        	srai	a4, a4, 1
400db978:	449c      	beqz.n	a4, 400db990 <__pow5mult+0x8c>
400db97a:	05a8      	l32i.n	a10, a5, 0
400db97c:	fdaa56        	bnez	a10, 400db95a <__pow5mult+0x56>
400db97f:	05cd      	mov.n	a12, a5
400db981:	05bd      	mov.n	a11, a5
400db983:	02ad      	mov.n	a10, a2
400db985:	ffe7a5        	call8	400db800 <__multiply>
400db988:	05a9      	s32i.n	a10, a5, 0
400db98a:	0a69      	s32i.n	a6, a10, 0
400db98c:	fff286        	j	400db95a <__pow5mult+0x56>
400db98f:	032d00        	lsi	f0, a13, 12
400db992:	f01d      	retw.n

400db994 <__lshift>:
400db994:	006136        	entry	a1, 48
400db997:	215540        	srai	a5, a4, 5
400db99a:	04cd      	mov.n	a12, a4
400db99c:	4348      	l32i.n	a4, a3, 16
400db99e:	13b8      	l32i.n	a11, a3, 4
400db9a0:	454a      	add.n	a4, a5, a4
400db9a2:	741b      	addi.n	a7, a4, 1
400db9a4:	2368      	l32i.n	a6, a3, 8
400db9a6:	000106        	j	400db9ae <__lshift+0x1a>
400db9a9:	bb1b      	addi.n	a11, a11, 1
400db9ab:	1166f0        	slli	a6, a6, 1
400db9ae:	f72677        	blt	a6, a7, 400db9a9 <__lshift+0x15>
400db9b1:	02ad      	mov.n	a10, a2
400db9b3:	01c9      	s32i.n	a12, a1, 0
400db9b5:	ffbe65        	call8	400db59c <_Balloc>
400db9b8:	14cad2        	addi	a13, a10, 20
400db9bb:	090c      	movi.n	a9, 0
400db9bd:	0a6d      	mov.n	a6, a10
400db9bf:	0dbd      	mov.n	a11, a13
400db9c1:	098d      	mov.n	a8, a9
400db9c3:	01c8      	l32i.n	a12, a1, 0
400db9c5:	000146        	j	400db9ce <__lshift+0x3a>
400db9c8:	0b89      	s32i.n	a8, a11, 0
400db9ca:	991b      	addi.n	a9, a9, 1
400db9cc:	bb4b      	addi.n	a11, a11, 4
400db9ce:	0a0c      	movi.n	a10, 0
400db9d0:	f42957        	blt	a9, a5, 400db9c8 <__lshift+0x34>
400db9d3:	43b8      	l32i.n	a11, a3, 16
400db9d5:	5385a0        	max	a8, a5, a10
400db9d8:	14c392        	addi	a9, a3, 20
400db9db:	4450c0        	extui	a5, a12, 0, 5
400db9de:	a088d0        	addx4	a8, a8, a13
400db9e1:	a0bb90        	addx4	a11, a11, a9
400db9e4:	2c15a7        	beq	a5, a10, 400dba14 <__lshift+0x80>
400db9e7:	0c2c      	movi.n	a12, 32
400db9e9:	c0cc50        	sub	a12, a12, a5
400db9ec:	09d8      	l32i.n	a13, a9, 0
400db9ee:	08ed      	mov.n	a14, a8
400db9f0:	401500        	ssl	a5
400db9f3:	a1dd00        	sll	a13, a13
400db9f6:	20ada0        	or	a10, a13, a10
400db9f9:	08a9      	s32i.n	a10, a8, 0
400db9fb:	09a8      	l32i.n	a10, a9, 0
400db9fd:	994b      	addi.n	a9, a9, 4
400db9ff:	400c00        	ssr	a12
400dba02:	91a0a0        	srl	a10, a10
400dba05:	884b      	addi.n	a8, a8, 4
400dba07:	e139b7        	bltu	a9, a11, 400db9ec <__lshift+0x58>
400dba0a:	442b      	addi.n	a4, a4, 2
400dba0c:	1ea9      	s32i.n	a10, a14, 4
400dba0e:	9374a0        	movnez	a7, a4, a10
400dba11:	000286        	j	400dba1f <__lshift+0x8b>
400dba14:	0948      	l32i.n	a4, a9, 0
400dba16:	994b      	addi.n	a9, a9, 4
400dba18:	0849      	s32i.n	a4, a8, 0
400dba1a:	884b      	addi.n	a8, a8, 4
400dba1c:	f439b7        	bltu	a9, a11, 400dba14 <__lshift+0x80>
400dba1f:	570b      	addi.n	a5, a7, -1
400dba21:	02ad      	mov.n	a10, a2
400dba23:	4659      	s32i.n	a5, a6, 16
400dba25:	03bd      	mov.n	a11, a3
400dba27:	ffbea5        	call8	400db610 <_Bfree>
400dba2a:	062d      	mov.n	a2, a6
400dba2c:	f01d      	retw.n
	...

400dba30 <__mcmp>:
400dba30:	004136        	entry	a1, 32
400dba33:	4288      	l32i.n	a8, a2, 16
400dba35:	4398      	l32i.n	a9, a3, 16
400dba37:	02ad      	mov.n	a10, a2
400dba39:	c08890        	sub	a8, a8, a9
400dba3c:	082d      	mov.n	a2, a8
400dba3e:	78ec      	bnez.n	a8, 400dba69 <__mcmp+0x39>
400dba40:	1189e0        	slli	a8, a9, 2
400dba43:	14caa2        	addi	a10, a10, 20
400dba46:	14c332        	addi	a3, a3, 20
400dba49:	2a8a      	add.n	a2, a10, a8
400dba4b:	338a      	add.n	a3, a3, a8
400dba4d:	fcc222        	addi	a2, a2, -4
400dba50:	fcc332        	addi	a3, a3, -4
400dba53:	0298      	l32i.n	a9, a2, 0
400dba55:	0388      	l32i.n	a8, a3, 0
400dba57:	091987        	beq	a9, a8, 400dba64 <__mcmp+0x34>
400dba5a:	f27c      	movi.n	a2, -1
400dba5c:	093987        	bltu	a9, a8, 400dba69 <__mcmp+0x39>
400dba5f:	120c      	movi.n	a2, 1
400dba61:	f01d      	retw.n
400dba63:	3a2700        	lsi	f0, a7, 232
400dba66:	020ce5        	call8	400ddb34 <_svfprintf_r+0x1410>
400dba69:	f01d      	retw.n
	...

400dba6c <__mdiff>:
400dba6c:	004136        	entry	a1, 32
400dba6f:	04bd      	mov.n	a11, a4
400dba71:	03ad      	mov.n	a10, a3
400dba73:	fffbe5        	call8	400dba30 <__mcmp>
400dba76:	0a5d      	mov.n	a5, a10
400dba78:	eacc      	bnez.n	a10, 400dba8a <__mdiff+0x1e>
400dba7a:	0abd      	mov.n	a11, a10
400dba7c:	02ad      	mov.n	a10, a2
400dba7e:	ffb1e5        	call8	400db59c <_Balloc>
400dba81:	120c      	movi.n	a2, 1
400dba83:	4a29      	s32i.n	a2, a10, 16
400dba85:	5a59      	s32i.n	a5, a10, 20
400dba87:	002786        	j	400dbb29 <__mdiff+0xbd>
400dba8a:	060c      	movi.n	a6, 0
400dba8c:	09aa67        	bge	a10, a6, 400dba99 <__mdiff+0x2d>
400dba8f:	035d      	mov.n	a5, a3
400dba91:	160c      	movi.n	a6, 1
400dba93:	203440        	or	a3, a4, a4
400dba96:	204550        	or	a4, a5, a5
400dba99:	13b8      	l32i.n	a11, a3, 4
400dba9b:	20a220        	or	a10, a2, a2
400dba9e:	ffafe5        	call8	400db59c <_Balloc>
400dbaa1:	43c8      	l32i.n	a12, a3, 16
400dbaa3:	4428      	l32i.n	a2, a4, 16
400dbaa5:	14c332        	addi	a3, a3, 20
400dbaa8:	14c4f2        	addi	a15, a4, 20
400dbaab:	3a69      	s32i.n	a6, a10, 12
400dbaad:	a0dc30        	addx4	a13, a12, a3
400dbab0:	a022f0        	addx4	a2, a2, a15
400dbab3:	14ca92        	addi	a9, a10, 20
400dbab6:	0e0c      	movi.n	a14, 0
400dbab8:	03b8      	l32i.n	a11, a3, 0
400dbaba:	0f48      	l32i.n	a4, a15, 0
400dbabc:	f480b0        	extui	a8, a11, 0, 16
400dbabf:	e8ea      	add.n	a14, a8, a14
400dbac1:	f48040        	extui	a8, a4, 0, 16
400dbac4:	c08e80        	sub	a8, a14, a8
400dbac7:	f5b0b0        	extui	a11, a11, 16, 16
400dbaca:	f5e040        	extui	a14, a4, 16, 16
400dbacd:	c0ebe0        	sub	a14, a11, a14
400dbad0:	31b080        	srai	a11, a8, 16
400dbad3:	beba      	add.n	a11, a14, a11
400dbad5:	31e0b0        	srai	a14, a11, 16
400dbad8:	994b      	addi.n	a9, a9, 4
400dbada:	11bb00        	slli	a11, a11, 16
400dbadd:	f48080        	extui	a8, a8, 0, 16
400dbae0:	fcc942        	addi	a4, a9, -4
400dbae3:	208b80        	or	a8, a11, a8
400dbae6:	ff4b      	addi.n	a15, a15, 4
400dbae8:	0489      	s32i.n	a8, a4, 0
400dbaea:	334b      	addi.n	a3, a3, 4
400dbaec:	c83f27        	bltu	a15, a2, 400dbab8 <__mdiff+0x4c>
400dbaef:	092d      	mov.n	a2, a9
400dbaf1:	000806        	j	400dbb15 <__mdiff+0xa9>
400dbaf4:	03b8      	l32i.n	a11, a3, 0
400dbaf6:	334b      	addi.n	a3, a3, 4
400dbaf8:	f490b0        	extui	a9, a11, 0, 16
400dbafb:	99ea      	add.n	a9, a9, a14
400dbafd:	318090        	srai	a8, a9, 16
400dbb00:	f5b0b0        	extui	a11, a11, 16, 16
400dbb03:	bb8a      	add.n	a11, a11, a8
400dbb05:	31e0b0        	srai	a14, a11, 16
400dbb08:	f49090        	extui	a9, a9, 0, 16
400dbb0b:	11bb00        	slli	a11, a11, 16
400dbb0e:	209b90        	or	a9, a11, a9
400dbb11:	0299      	s32i.n	a9, a2, 0
400dbb13:	224b      	addi.n	a2, a2, 4
400dbb15:	024d      	mov.n	a4, a2
400dbb17:	d933d7        	bltu	a3, a13, 400dbaf4 <__mdiff+0x88>
400dbb1a:	000046        	j	400dbb1f <__mdiff+0xb3>
400dbb1d:	cc0b      	addi.n	a12, a12, -1
400dbb1f:	fcc442        	addi	a4, a4, -4
400dbb22:	0428      	l32i.n	a2, a4, 0
400dbb24:	ff5216        	beqz	a2, 400dbb1d <__mdiff+0xb1>
400dbb27:	4ac9      	s32i.n	a12, a10, 16
400dbb29:	0a2d      	mov.n	a2, a10
400dbb2b:	f01d      	retw.n
400dbb2d:	000000        	ill

400dbb30 <__ulp>:
400dbb30:	004136        	entry	a1, 32
400dbb33:	d2e581        	l32r	a8, 400d06c8 <_flash_cache_start+0x6b0>
400dbb36:	d2e591        	l32r	a9, 400d06cc <_flash_cache_start+0x6b4>
400dbb39:	103830        	and	a3, a8, a3
400dbb3c:	839a      	add.n	a8, a3, a9
400dbb3e:	083d      	mov.n	a3, a8
400dbb40:	1418e6        	bgei	a8, 1, 400dbb58 <__ulp+0x28>
400dbb43:	608080        	neg	a8, a8
400dbb46:	318480        	srai	a8, a8, 20
400dbb49:	13a022        	movi	a2, 19
400dbb4c:	0c2287        	blt	a2, a8, 400dbb5c <__ulp+0x2c>
400dbb4f:	d2e091        	l32r	a9, 400d06d0 <_flash_cache_start+0x6b8>
400dbb52:	400800        	ssr	a8
400dbb55:	b13090        	sra	a3, a9
400dbb58:	020c      	movi.n	a2, 0
400dbb5a:	f01d      	retw.n
400dbb5c:	ecc882        	addi	a8, a8, -20
400dbb5f:	ea1c      	movi.n	a10, 30
400dbb61:	d14031        	l32r	a3, 400d0064 <_flash_cache_start+0x4c>
400dbb64:	190c      	movi.n	a9, 1
400dbb66:	0a2a87        	blt	a10, a8, 400dbb74 <__ulp+0x44>
400dbb69:	fa1c      	movi.n	a10, 31
400dbb6b:	c08a80        	sub	a8, a10, a8
400dbb6e:	401800        	ssl	a8
400dbb71:	a19900        	sll	a9, a9
400dbb74:	092d      	mov.n	a2, a9
400dbb76:	f01d      	retw.n

400dbb78 <__b2d>:
400dbb78:	004136        	entry	a1, 32
400dbb7b:	4278      	l32i.n	a7, a2, 16
400dbb7d:	14c262        	addi	a6, a2, 20
400dbb80:	a07760        	addx4	a7, a7, a6
400dbb83:	fcc742        	addi	a4, a7, -4
400dbb86:	0458      	l32i.n	a5, a4, 0
400dbb88:	022c      	movi.n	a2, 32
400dbb8a:	20a550        	or	a10, a5, a5
400dbb8d:	ffba65        	call8	400db734 <__hi0bits>
400dbb90:	c022a0        	sub	a2, a2, a10
400dbb93:	0329      	s32i.n	a2, a3, 0
400dbb95:	a20c      	movi.n	a2, 10
400dbb97:	d2d031        	l32r	a3, 400d06d8 <_flash_cache_start+0x6c0>
400dbb9a:	2c22a7        	blt	a2, a10, 400dbbca <__b2d+0x52>
400dbb9d:	b20c      	movi.n	a2, 11
400dbb9f:	c0b2a0        	sub	a11, a2, a10
400dbba2:	400b00        	ssr	a11
400dbba5:	912050        	srl	a2, a5
400dbba8:	209230        	or	a9, a2, a3
400dbbab:	020c      	movi.n	a2, 0
400dbbad:	04b647        	bgeu	a6, a4, 400dbbb5 <__b2d+0x3d>
400dbbb0:	f8c772        	addi	a7, a7, -8
400dbbb3:	0728      	l32i.n	a2, a7, 0
400dbbb5:	15caa2        	addi	a10, a10, 21
400dbbb8:	401a00        	ssl	a10
400dbbbb:	a1a500        	sll	a10, a5
400dbbbe:	400b00        	ssr	a11
400dbbc1:	912020        	srl	a2, a2
400dbbc4:	001206        	j	400dbc10 <__b2d+0x98>
400dbbc7:	000000        	ill
400dbbca:	0c0c      	movi.n	a12, 0
400dbbcc:	04b647        	bgeu	a6, a4, 400dbbd4 <__b2d+0x5c>
400dbbcf:	f8c742        	addi	a4, a7, -8
400dbbd2:	04c8      	l32i.n	a12, a4, 0
400dbbd4:	f5caa2        	addi	a10, a10, -11
400dbbd7:	209530        	or	a9, a5, a3
400dbbda:	0c8d      	mov.n	a8, a12
400dbbdc:	6abc      	beqz.n	a10, 400dbc16 <__b2d+0x9e>
400dbbde:	022c      	movi.n	a2, 32
400dbbe0:	d2be81        	l32r	a8, 400d06d8 <_flash_cache_start+0x6c0>
400dbbe3:	c072a0        	sub	a7, a2, a10
400dbbe6:	401a00        	ssl	a10
400dbbe9:	a1b500        	sll	a11, a5
400dbbec:	400700        	ssr	a7
400dbbef:	9120c0        	srl	a2, a12
400dbbf2:	20bb80        	or	a11, a11, a8
400dbbf5:	209b20        	or	a9, a11, a2
400dbbf8:	00a022        	movi	a2, 0
400dbbfb:	05b647        	bgeu	a6, a4, 400dbc04 <__b2d+0x8c>
400dbbfe:	fcc432        	addi	a3, a4, -4
400dbc01:	002322        	l32i	a2, a3, 0
400dbc04:	401a00        	ssl	a10
400dbc07:	a1ac00        	sll	a10, a12
400dbc0a:	400700        	ssr	a7
400dbc0d:	912020        	srl	a2, a2
400dbc10:	208a20        	or	a8, a10, a2
400dbc13:	ffffc6        	j	400dbc16 <__b2d+0x9e>
400dbc16:	082d      	mov.n	a2, a8
400dbc18:	093d      	mov.n	a3, a9
400dbc1a:	f01d      	retw.n

400dbc1c <__d2b>:
400dbc1c:	006136        	entry	a1, 48
400dbc1f:	20a220        	or	a10, a2, a2
400dbc22:	01a0b2        	movi	a11, 1
400dbc25:	ff9765        	call8	400db59c <_Balloc>
400dbc28:	d28431        	l32r	a3, 400d0638 <_flash_cache_start+0x620>
400dbc2b:	103350        	and	a3, a3, a5
400dbc2e:	a55450        	extui	a5, a5, 20, 11
400dbc31:	0a2d      	mov.n	a2, a10
400dbc33:	15cc      	bnez.n	a5, 400dbc38 <__d2b+0x1c>
400dbc35:	000146        	j	400dbc3e <__d2b+0x22>
400dbc38:	d2a981        	l32r	a8, 400d06dc <_flash_cache_start+0x6c4>
400dbc3b:	203380        	or	a3, a3, a8
400dbc3e:	0139      	s32i.n	a3, a1, 0
400dbc40:	64bc      	beqz.n	a4, 400dbc7a <__d2b+0x5e>
400dbc42:	a14b      	addi.n	a10, a1, 4
400dbc44:	1149      	s32i.n	a4, a1, 4
400dbc46:	ffb3a5        	call8	400db780 <__lo0bits>
400dbc49:	1138      	l32i.n	a3, a1, 4
400dbc4b:	9a9c      	beqz.n	a10, 400dbc68 <__d2b+0x4c>
400dbc4d:	0188      	l32i.n	a8, a1, 0
400dbc4f:	6040a0        	neg	a4, a10
400dbc52:	401400        	ssl	a4
400dbc55:	a14800        	sll	a4, a8
400dbc58:	203430        	or	a3, a4, a3
400dbc5b:	400a00        	ssr	a10
400dbc5e:	918080        	srl	a8, a8
400dbc61:	5239      	s32i.n	a3, a2, 20
400dbc63:	0189      	s32i.n	a8, a1, 0
400dbc65:	000046        	j	400dbc6a <__d2b+0x4e>
400dbc68:	5239      	s32i.n	a3, a2, 20
400dbc6a:	0188      	l32i.n	a8, a1, 0
400dbc6c:	130c      	movi.n	a3, 1
400dbc6e:	240c      	movi.n	a4, 2
400dbc70:	933480        	movnez	a3, a4, a8
400dbc73:	6289      	s32i.n	a8, a2, 24
400dbc75:	4239      	s32i.n	a3, a2, 16
400dbc77:	0003c6        	j	400dbc8a <__d2b+0x6e>
400dbc7a:	01ad      	mov.n	a10, a1
400dbc7c:	ffb025        	call8	400db780 <__lo0bits>
400dbc7f:	0138      	l32i.n	a3, a1, 0
400dbc81:	20caa2        	addi	a10, a10, 32
400dbc84:	5239      	s32i.n	a3, a2, 20
400dbc86:	130c      	movi.n	a3, 1
400dbc88:	4239      	s32i.n	a3, a2, 16
400dbc8a:	f58c      	beqz.n	a5, 400dbc9d <__d2b+0x81>
400dbc8c:	cdab32        	movi	a3, 0xfffffbcd
400dbc8f:	553a      	add.n	a5, a5, a3
400dbc91:	55aa      	add.n	a5, a5, a10
400dbc93:	0659      	s32i.n	a5, a6, 0
400dbc95:	533c      	movi.n	a3, 53
400dbc97:	000646        	j	400dbcb4 <__d2b+0x98>
400dbc9a:	000000        	ill
400dbc9d:	d0f351        	l32r	a5, 400d006c <_flash_cache_start+0x54>
400dbca0:	ceab42        	movi	a4, 0xfffffbce
400dbca3:	535a      	add.n	a5, a3, a5
400dbca5:	aa4a      	add.n	a10, a10, a4
400dbca7:	a05520        	addx4	a5, a5, a2
400dbcaa:	06a9      	s32i.n	a10, a6, 0
400dbcac:	55a8      	l32i.n	a10, a5, 20
400dbcae:	1133b0        	slli	a3, a3, 5
400dbcb1:	ffa825        	call8	400db734 <__hi0bits>
400dbcb4:	c0a3a0        	sub	a10, a3, a10
400dbcb7:	07a9      	s32i.n	a10, a7, 0
400dbcb9:	f01d      	retw.n
	...

400dbcbc <__ratio>:
400dbcbc:	006136        	entry	a1, 48
400dbcbf:	b14b      	addi.n	a11, a1, 4
400dbcc1:	02ad      	mov.n	a10, a2
400dbcc3:	ffeb65        	call8	400dbb78 <__b2d>
400dbcc6:	036d      	mov.n	a6, a3
400dbcc8:	0a4d      	mov.n	a4, a10
400dbcca:	0b3d      	mov.n	a3, a11
400dbccc:	0b5d      	mov.n	a5, a11
400dbcce:	06ad      	mov.n	a10, a6
400dbcd0:	01bd      	mov.n	a11, a1
400dbcd2:	ffea65        	call8	400dbb78 <__b2d>
400dbcd5:	027d      	mov.n	a7, a2
400dbcd7:	46e8      	l32i.n	a14, a6, 16
400dbcd9:	4788      	l32i.n	a8, a7, 16
400dbcdb:	1198      	l32i.n	a9, a1, 4
400dbcdd:	c088e0        	sub	a8, a8, a14
400dbce0:	11e8b0        	slli	a14, a8, 5
400dbce3:	0188      	l32i.n	a8, a1, 0
400dbce5:	0acd      	mov.n	a12, a10
400dbce7:	c08980        	sub	a8, a9, a8
400dbcea:	8e8a      	add.n	a8, a14, a8
400dbcec:	0bdd      	mov.n	a13, a11
400dbcee:	0718a6        	blti	a8, 1, 400dbcf9 <__ratio+0x3d>
400dbcf1:	0188c0        	slli	a8, a8, 20
400dbcf4:	583a      	add.n	a5, a8, a3
400dbcf6:	000146        	j	400dbcff <__ratio+0x43>
400dbcf9:	0188c0        	slli	a8, a8, 20
400dbcfc:	c0db80        	sub	a13, a11, a8
400dbcff:	04ad      	mov.n	a10, a4
400dbd01:	05bd      	mov.n	a11, a5
400dbd03:	d0d581        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400dbd06:	0008e0        	callx8	a8
400dbd09:	0a2d      	mov.n	a2, a10
400dbd0b:	0b3d      	mov.n	a3, a11
400dbd0d:	f01d      	retw.n
	...

400dbd10 <_mprec_log10>:
400dbd10:	004136        	entry	a1, 32
400dbd13:	731c      	movi.n	a3, 23
400dbd15:	d0d3a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400dbd18:	d270b1        	l32r	a11, 400d06d8 <_flash_cache_start+0x6c0>
400dbd1b:	0d2327        	blt	a3, a2, 400dbd2c <_mprec_log10+0x1c>
400dbd1e:	d27031        	l32r	a3, 400d06e0 <_flash_cache_start+0x6c8>
400dbd21:	b02230        	addx8	a2, a2, a3
400dbd24:	1238      	l32i.n	a3, a2, 4
400dbd26:	0228      	l32i.n	a2, a2, 0
400dbd28:	f01d      	retw.n
400dbd2a:	c10000        	mul16u	a0, a0, a0
400dbd2d:	ce          	.byte 0xce
400dbd2e:	6dd1d0        	lsi	f13, a1, 0x1b4
400dbd31:	220bd2        	l8ui	a13, a11, 34
400dbd34:	d0cb81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400dbd37:	0008e0        	callx8	a8
400dbd3a:	fee256        	bnez	a2, 400dbd2c <_mprec_log10+0x1c>
400dbd3d:	0a2d      	mov.n	a2, a10
400dbd3f:	0b3d      	mov.n	a3, a11
400dbd41:	f01d      	retw.n
	...

400dbd44 <__copybits>:
400dbd44:	004136        	entry	a1, 32
400dbd47:	330b      	addi.n	a3, a3, -1
400dbd49:	218530        	srai	a8, a3, 5
400dbd4c:	44a8      	l32i.n	a10, a4, 16
400dbd4e:	881b      	addi.n	a8, a8, 1
400dbd50:	14c492        	addi	a9, a4, 20
400dbd53:	a08820        	addx4	a8, a8, a2
400dbd56:	a0aa90        	addx4	a10, a10, a9
400dbd59:	0001c6        	j	400dbd64 <__copybits+0x20>
400dbd5c:	0948      	l32i.n	a4, a9, 0
400dbd5e:	994b      	addi.n	a9, a9, 4
400dbd60:	0249      	s32i.n	a4, a2, 0
400dbd62:	224b      	addi.n	a2, a2, 4
400dbd64:	f439a7        	bltu	a9, a10, 400dbd5c <__copybits+0x18>
400dbd67:	040c      	movi.n	a4, 0
400dbd69:	0000c6        	j	400dbd70 <__copybits+0x2c>
400dbd6c:	0249      	s32i.n	a4, a2, 0
400dbd6e:	224b      	addi.n	a2, a2, 4
400dbd70:	f83287        	bltu	a2, a8, 400dbd6c <__copybits+0x28>
400dbd73:	f01d      	retw.n
400dbd75:	000000        	ill

400dbd78 <__any_on>:
400dbd78:	004136        	entry	a1, 32
400dbd7b:	14c292        	addi	a9, a2, 20
400dbd7e:	4228      	l32i.n	a2, a2, 16
400dbd80:	218530        	srai	a8, a3, 5
400dbd83:	232287        	blt	a2, a8, 400dbdaa <__any_on+0x32>
400dbd86:	22a827        	bge	a8, a2, 400dbdac <__any_on+0x34>
400dbd89:	443030        	extui	a3, a3, 0, 5
400dbd8c:	c39c      	beqz.n	a3, 400dbdac <__any_on+0x34>
400dbd8e:	a02890        	addx4	a2, a8, a9
400dbd91:	02a8      	l32i.n	a10, a2, 0
400dbd93:	400300        	ssr	a3
400dbd96:	9120a0        	srl	a2, a10
400dbd99:	401300        	ssl	a3
400dbd9c:	a13200        	sll	a3, a2
400dbd9f:	120c      	movi.n	a2, 1
400dbda1:	1f9a37        	bne	a10, a3, 400dbdc4 <__any_on+0x4c>
400dbda4:	000106        	j	400dbdac <__any_on+0x34>
400dbda7:	000000        	ill
400dbdaa:	028d      	mov.n	a8, a2
400dbdac:	a08890        	addx4	a8, a8, a9
400dbdaf:	000206        	j	400dbdbb <__any_on+0x43>
400dbdb2:	820000        	mull	a0, a0, a0
400dbdb5:	fcc8      	l32i.n	a12, a12, 60
400dbdb7:	0828      	l32i.n	a2, a8, 0
400dbdb9:	52cc      	bnez.n	a2, 400dbdc2 <__any_on+0x4a>
400dbdbb:	f53987        	bltu	a9, a8, 400dbdb4 <__any_on+0x3c>
400dbdbe:	020c      	movi.n	a2, 0
400dbdc0:	f01d      	retw.n
400dbdc2:	120c      	movi.n	a2, 1
400dbdc4:	f01d      	retw.n
	...

400dbdc8 <_putc_r>:
400dbdc8:	004136        	entry	a1, 32
400dbdcb:	a28c      	beqz.n	a2, 400dbdd9 <_putc_r+0x11>
400dbdcd:	6288      	l32i.n	a8, a2, 24
400dbdcf:	68cc      	bnez.n	a8, 400dbdd9 <_putc_r+0x11>
400dbdd1:	02ad      	mov.n	a10, a2
400dbdd3:	d22f81        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400dbdd6:	0008e0        	callx8	a8
400dbdd9:	d22481        	l32r	a8, 400d066c <_flash_cache_start+0x654>
400dbddc:	049487        	bne	a4, a8, 400dbde4 <_putc_r+0x1c>
400dbddf:	1248      	l32i.n	a4, a2, 4
400dbde1:	0004c6        	j	400dbdf8 <_putc_r+0x30>
400dbde4:	d22381        	l32r	a8, 400d0670 <_flash_cache_start+0x658>
400dbde7:	059487        	bne	a4, a8, 400dbdf0 <_putc_r+0x28>
400dbdea:	2248      	l32i.n	a4, a2, 8
400dbdec:	000206        	j	400dbdf8 <_putc_r+0x30>
400dbdef:	218100        	srai	a8, a0, 1
400dbdf2:	9487d2        	lsi	f13, a7, 0x250
400dbdf5:	324801        	l32r	a0, 400a8718 <_iram_end+0x1abc4>
400dbdf8:	192482        	l32i	a8, a4, 100
400dbdfb:	0be807        	bbsi	a8, 0, 400dbe0a <_putc_r+0x42>
400dbdfe:	061482        	l16ui	a8, a4, 12
400dbe01:	05e897        	bbsi	a8, 9, 400dbe0a <_putc_r+0x42>
400dbe04:	58c4a2        	addi	a10, a4, 88
400dbe07:	a8cd25        	call8	40084ad8 <_lock_acquire_recursive>
400dbe0a:	2488      	l32i.n	a8, a4, 8
400dbe0c:	880b      	addi.n	a8, a8, -1
400dbe0e:	2489      	s32i.n	a8, a4, 8
400dbe10:	0358d6        	bgez	a8, 400dbe49 <_putc_r+0x81>
400dbe13:	6498      	l32i.n	a9, a4, 24
400dbe15:	1f2897        	blt	a8, a9, 400dbe38 <_putc_r+0x70>
400dbe18:	0488      	l32i.n	a8, a4, 0
400dbe1a:	004832        	s8i	a3, a8, 0
400dbe1d:	0438      	l32i.n	a3, a4, 0
400dbe1f:	0003b2        	l8ui	a11, a3, 0
400dbe22:	0c9b26        	beqi	a11, 10, 400dbe32 <_putc_r+0x6a>
400dbe25:	231b      	addi.n	a2, a3, 1
400dbe27:	0429      	s32i.n	a2, a4, 0
400dbe29:	000322        	l8ui	a2, a3, 0
400dbe2c:	000a86        	j	400dbe5a <_putc_r+0x92>
400dbe2f:	000000        	ill
400dbe32:	04cd      	mov.n	a12, a4
400dbe34:	000106        	j	400dbe3c <_putc_r+0x74>
400dbe37:	04cd00        	extui	a12, a0, 13, 1
400dbe3a:	03bd      	mov.n	a11, a3
400dbe3c:	02ad      	mov.n	a10, a2
400dbe3e:	d22a81        	l32r	a8, 400d06e8 <_flash_cache_start+0x6d0>
400dbe41:	0008e0        	callx8	a8
400dbe44:	0a2d      	mov.n	a2, a10
400dbe46:	000406        	j	400dbe5a <_putc_r+0x92>
400dbe49:	002422        	l32i	a2, a4, 0
400dbe4c:	004232        	s8i	a3, a2, 0
400dbe4f:	002422        	l32i	a2, a4, 0
400dbe52:	01c232        	addi	a3, a2, 1
400dbe55:	0439      	s32i.n	a3, a4, 0
400dbe57:	000222        	l8ui	a2, a2, 0
400dbe5a:	192432        	l32i	a3, a4, 100
400dbe5d:	0be307        	bbsi	a3, 0, 400dbe6c <_putc_r+0xa4>
400dbe60:	061432        	l16ui	a3, a4, 12
400dbe63:	05e397        	bbsi	a3, 9, 400dbe6c <_putc_r+0xa4>
400dbe66:	58c4a2        	addi	a10, a4, 88
400dbe69:	a8caa5        	call8	40084b14 <_lock_release_recursive>
400dbe6c:	f01d      	retw.n
	...

400dbe70 <putc>:
400dbe70:	004136        	entry	a1, 32
400dbe73:	acb565        	call8	400889c8 <__getreent>
400dbe76:	20b220        	or	a11, a2, a2
400dbe79:	20c330        	or	a12, a3, a3
400dbe7c:	fff4a5        	call8	400dbdc8 <_putc_r>
400dbe7f:	202aa0        	or	a2, a10, a10
400dbe82:	f01d      	retw.n

400dbe84 <s_get_num_reserved_regions>:
400dbe84:	004136        	entry	a1, 32
400dbe87:	d21a81        	l32r	a8, 400d06f0 <_flash_cache_start+0x6d8>
400dbe8a:	d21821        	l32r	a2, 400d06ec <_flash_cache_start+0x6d4>
400dbe8d:	c02280        	sub	a2, a2, a8
400dbe90:	212320        	srai	a2, a2, 3
400dbe93:	222b      	addi.n	a2, a2, 2
400dbe95:	f01d      	retw.n
	...

400dbe98 <s_prepare_reserved_regions>:
400dbe98:	006136        	entry	a1, 48
400dbe9b:	d216c1        	l32r	a12, 400d06f4 <_flash_cache_start+0x6dc>
400dbe9e:	80c3c0        	add	a12, a3, a12
400dbea1:	11ccd0        	slli	a12, a12, 3
400dbea4:	d213b1        	l32r	a11, 400d06f0 <_flash_cache_start+0x6d8>
400dbea7:	10c2a2        	addi	a10, a2, 16
400dbeaa:	d07b81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400dbead:	0008e0        	callx8	a8
400dbeb0:	d21241        	l32r	a4, 400d06f8 <_flash_cache_start+0x6e0>
400dbeb3:	0249      	s32i.n	a4, a2, 0
400dbeb5:	f03d      	nop.n
400dbeb7:	f03d      	nop.n
400dbeb9:	f03d      	nop.n
400dbebb:	f03d      	nop.n
400dbebd:	d20f41        	l32r	a4, 400d06fc <_flash_cache_start+0x6e4>
400dbec0:	1249      	s32i.n	a4, a2, 4
400dbec2:	f03d      	nop.n
400dbec4:	f03d      	nop.n
400dbec6:	f03d      	nop.n
400dbec8:	f03d      	nop.n
400dbeca:	d20d41        	l32r	a4, 400d0700 <_flash_cache_start+0x6e8>
400dbecd:	2249      	s32i.n	a4, a2, 8
400dbecf:	f03d      	nop.n
400dbed1:	f03d      	nop.n
400dbed3:	f03d      	nop.n
400dbed5:	f03d      	nop.n
400dbed7:	d20b41        	l32r	a4, 400d0704 <_flash_cache_start+0x6ec>
400dbeda:	3249      	s32i.n	a4, a2, 12
400dbedc:	f03d      	nop.n
400dbede:	f03d      	nop.n
400dbee0:	f03d      	nop.n
400dbee2:	f03d      	nop.n
400dbee4:	d209d1        	l32r	a13, 400d0708 <_flash_cache_start+0x6f0>
400dbee7:	8c0c      	movi.n	a12, 8
400dbee9:	03bd      	mov.n	a11, a3
400dbeeb:	20a220        	or	a10, a2, a2
400dbeee:	d20d81        	l32r	a8, 400d0724 <_flash_cache_start+0x70c>
400dbef1:	0008e0        	callx8	a8
400dbef4:	0a0c      	movi.n	a10, 0
400dbef6:	0020c6        	j	400dbf7d <s_prepare_reserved_regions+0xe5>
400dbef9:	b04a20        	addx8	a4, a10, a2
400dbefc:	0024b2        	l32i	a11, a4, 0
400dbeff:	fcaf92        	movi	a9, -4
400dbf02:	10bb90        	and	a11, a11, a9
400dbf05:	0064b2        	s32i	a11, a4, 0
400dbf08:	f03d      	nop.n
400dbf0a:	f03d      	nop.n
400dbf0c:	f03d      	nop.n
400dbf0e:	f03d      	nop.n
400dbf10:	1488      	l32i.n	a8, a4, 4
400dbf12:	883b      	addi.n	a8, a8, 3
400dbf14:	108890        	and	a8, a8, a9
400dbf17:	1489      	s32i.n	a8, a4, 4
400dbf19:	152b87        	blt	a11, a8, 400dbf32 <s_prepare_reserved_regions+0x9a>
400dbf1c:	f03d      	nop.n
400dbf1e:	f03d      	nop.n
400dbf20:	f03d      	nop.n
400dbf22:	f03d      	nop.n
400dbf24:	d1fad1        	l32r	a13, 400d070c <_flash_cache_start+0x6f4>
400dbf27:	d1fac1        	l32r	a12, 400d0710 <_flash_cache_start+0x6f8>
400dbf2a:	9b5c      	movi.n	a11, 89
400dbf2c:	d1faa1        	l32r	a10, 400d0714 <_flash_cache_start+0x6fc>
400dbf2f:	fefaa5        	call8	400daed8 <__assert_func>
400dbf32:	530b      	addi.n	a5, a3, -1
400dbf34:	43ba57        	bgeu	a10, a5, 400dbf7b <s_prepare_reserved_regions+0xe3>
400dbf37:	5a1b      	addi.n	a5, a10, 1
400dbf39:	b05520        	addx8	a5, a5, a2
400dbf3c:	0598      	l32i.n	a9, a5, 0
400dbf3e:	0e2b97        	blt	a11, a9, 400dbf50 <s_prepare_reserved_regions+0xb8>
400dbf41:	d1f5d1        	l32r	a13, 400d0718 <_flash_cache_start+0x700>
400dbf44:	d1f3c1        	l32r	a12, 400d0710 <_flash_cache_start+0x6f8>
400dbf47:	5ba0b2        	movi	a11, 91
400dbf4a:	d1f2a1        	l32r	a10, 400d0714 <_flash_cache_start+0x6fc>
400dbf4d:	fef8a5        	call8	400daed8 <__assert_func>
400dbf50:	27a987        	bge	a9, a8, 400dbf7b <s_prepare_reserved_regions+0xe3>
400dbf53:	a7dde5        	call8	40083d30 <esp_log_timestamp>
400dbf56:	012522        	l32i	a2, a5, 4
400dbf59:	006122        	s32i	a2, a1, 0
400dbf5c:	f03d      	nop.n
400dbf5e:	f03d      	nop.n
400dbf60:	f03d      	nop.n
400dbf62:	f03d      	nop.n
400dbf64:	05f8      	l32i.n	a15, a5, 0
400dbf66:	14e8      	l32i.n	a14, a4, 4
400dbf68:	04d8      	l32i.n	a13, a4, 0
400dbf6a:	d1ecc1        	l32r	a12, 400d071c <_flash_cache_start+0x704>
400dbf6d:	0abd      	mov.n	a11, a10
400dbf6f:	d1eca1        	l32r	a10, 400d0720 <_flash_cache_start+0x708>
400dbf72:	d0ab81        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400dbf75:	0008e0        	callx8	a8
400dbf78:	af3f25        	call8	4008b36c <abort>
400dbf7b:	aa1b      	addi.n	a10, a10, 1
400dbf7d:	02ba37        	bgeu	a10, a3, 400dbf83 <s_prepare_reserved_regions+0xeb>
400dbf80:	ffdd46        	j	400dbef9 <s_prepare_reserved_regions+0x61>
400dbf83:	f01d      	retw.n
400dbf85:	000000        	ill

400dbf88 <soc_get_available_memory_region_max_count>:
400dbf88:	004136        	entry	a1, 32
400dbf8b:	ffefa5        	call8	400dbe84 <s_get_num_reserved_regions>
400dbf8e:	d1a721        	l32r	a2, 400d062c <_flash_cache_start+0x614>
400dbf91:	002222        	l32i	a2, a2, 0
400dbf94:	802a20        	add	a2, a10, a2
400dbf97:	000090        	retw
	...

400dbf9c <soc_get_available_memory_regions>:
400dbf9c:	006136        	entry	a1, 48
400dbf9f:	207110        	or	a7, a1, a1
400dbfa2:	d1a231        	l32r	a3, 400d062c <_flash_cache_start+0x614>
400dbfa5:	002352        	l32i	a5, a3, 0
400dbfa8:	1155c0        	slli	a5, a5, 4
400dbfab:	12c532        	addi	a3, a5, 18
400dbfae:	413430        	srli	a3, a3, 4
400dbfb1:	1133c0        	slli	a3, a3, 4
400dbfb4:	c03130        	sub	a3, a1, a3
400dbfb7:	001310        	movsp	a1, a3
400dbfba:	016d      	mov.n	a6, a1
400dbfbc:	20c550        	or	a12, a5, a5
400dbfbf:	d19ab1        	l32r	a11, 400d0628 <_flash_cache_start+0x610>
400dbfc2:	01ad      	mov.n	a10, a1
400dbfc4:	d03581        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400dbfc7:	0008e0        	callx8	a8
400dbfca:	ffeba5        	call8	400dbe84 <s_get_num_reserved_regions>
400dbfcd:	0a4d      	mov.n	a4, a10
400dbfcf:	113ad0        	slli	a3, a10, 3
400dbfd2:	12c332        	addi	a3, a3, 18
400dbfd5:	413430        	srli	a3, a3, 4
400dbfd8:	1133c0        	slli	a3, a3, 4
400dbfdb:	c03130        	sub	a3, a1, a3
400dbfde:	001310        	movsp	a1, a3
400dbfe1:	0abd      	mov.n	a11, a10
400dbfe3:	03ad      	mov.n	a10, a3
400dbfe5:	ffeb25        	call8	400dbe98 <s_prepare_reserved_regions>
400dbfe8:	06cd      	mov.n	a12, a6
400dbfea:	02dd      	mov.n	a13, a2
400dbfec:	004046        	j	400dc0f1 <soc_get_available_memory_regions+0x155>
400dbfef:	0c8800        	lsi	f0, a8, 48
400dbff2:	1ce8      	l32i.n	a14, a12, 4
400dbff4:	0789      	s32i.n	a8, a7, 0
400dbff6:	f03d      	nop.n
400dbff8:	f03d      	nop.n
400dbffa:	f03d      	nop.n
400dbffc:	f03d      	nop.n
400dbffe:	2ca8      	l32i.n	a10, a12, 8
400dc000:	17e9      	s32i.n	a14, a7, 4
400dc002:	f03d      	nop.n
400dc004:	f03d      	nop.n
400dc006:	f03d      	nop.n
400dc008:	f03d      	nop.n
400dc00a:	3c98      	l32i.n	a9, a12, 12
400dc00c:	27a9      	s32i.n	a10, a7, 8
400dc00e:	3799      	s32i.n	a9, a7, 12
400dc010:	08ad      	mov.n	a10, a8
400dc012:	e8ea      	add.n	a14, a8, a14
400dc014:	080c      	movi.n	a8, 0
400dc016:	002506        	j	400dc0ae <soc_get_available_memory_regions+0x112>
400dc019:	b09830        	addx8	a9, a8, a3
400dc01c:	012992        	l32i	a9, a9, 4
400dc01f:	022a97        	blt	a10, a9, 400dc025 <soc_get_available_memory_regions+0x89>
400dc022:	002186        	j	400dc0ac <soc_get_available_memory_regions+0x110>
400dc025:	b0b830        	addx8	a11, a8, a3
400dc028:	0bb8      	l32i.n	a11, a11, 0
400dc02a:	022be7        	blt	a11, a14, 400dc030 <soc_get_available_memory_regions+0x94>
400dc02d:	0022c6        	j	400dc0bc <soc_get_available_memory_regions+0x120>
400dc030:	052ab7        	blt	a10, a11, 400dc039 <soc_get_available_memory_regions+0x9d>
400dc033:	0229e7        	blt	a9, a14, 400dc039 <soc_get_available_memory_regions+0x9d>
400dc036:	002246        	j	400dc0c3 <soc_get_available_memory_regions+0x127>
400dc039:	58aab7        	bge	a10, a11, 400dc095 <soc_get_available_memory_regions+0xf9>
400dc03c:	55a9e7        	bge	a9, a14, 400dc095 <soc_get_available_memory_regions+0xf9>
400dc03f:	112ab7        	blt	a10, a11, 400dc054 <soc_get_available_memory_regions+0xb8>
400dc042:	d1b9d1        	l32r	a13, 400d0728 <_flash_cache_start+0x710>
400dc045:	d1b9c1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400dc048:	96a0b2        	movi	a11, 150
400dc04b:	d1b2a1        	l32r	a10, 400d0714 <_flash_cache_start+0x6fc>
400dc04e:	201110        	or	a1, a1, a1
400dc051:	fee865        	call8	400daed8 <__assert_func>
400dc054:	1129e7        	blt	a9, a14, 400dc069 <soc_get_available_memory_regions+0xcd>
400dc057:	d1b6d1        	l32r	a13, 400d0730 <_flash_cache_start+0x718>
400dc05a:	d1b4c1        	l32r	a12, 400d072c <_flash_cache_start+0x714>
400dc05d:	97a0b2        	movi	a11, 151
400dc060:	d1ada1        	l32r	a10, 400d0714 <_flash_cache_start+0x6fc>
400dc063:	201110        	or	a1, a1, a1
400dc066:	fee725        	call8	400daed8 <__assert_func>
400dc069:	c0aba0        	sub	a10, a11, a10
400dc06c:	17a9      	s32i.n	a10, a7, 4
400dc06e:	f03d      	nop.n
400dc070:	f03d      	nop.n
400dc072:	f03d      	nop.n
400dc074:	f03d      	nop.n
400dc076:	0ca8      	l32i.n	a10, a12, 0
400dc078:	c09a90        	sub	a9, a10, a9
400dc07b:	1ca8      	l32i.n	a10, a12, 4
400dc07d:	9a9a      	add.n	a9, a10, a9
400dc07f:	1c99      	s32i.n	a9, a12, 4
400dc081:	b08830        	addx8	a8, a8, a3
400dc084:	f03d      	nop.n
400dc086:	f03d      	nop.n
400dc088:	f03d      	nop.n
400dc08a:	1888      	l32i.n	a8, a8, 4
400dc08c:	0c89      	s32i.n	a8, a12, 0
400dc08e:	080c      	movi.n	a8, 0
400dc090:	190c      	movi.n	a9, 1
400dc092:	000c46        	j	400dc0c7 <soc_get_available_memory_regions+0x12b>
400dc095:	0c2ab7        	blt	a10, a11, 400dc0a5 <soc_get_available_memory_regions+0x109>
400dc098:	0799      	s32i.n	a9, a7, 0
400dc09a:	c0ae90        	sub	a10, a14, a9
400dc09d:	17a9      	s32i.n	a10, a7, 4
400dc09f:	09ad      	mov.n	a10, a9
400dc0a1:	0001c6        	j	400dc0ac <soc_get_available_memory_regions+0x110>
400dc0a4:	9ba000        	movnez.s	f10, f0, a0
400dc0a7:	1799c0        	lsi	f12, a9, 92
400dc0aa:	0bed      	mov.n	a14, a11
400dc0ac:	881b      	addi.n	a8, a8, 1
400dc0ae:	02b847        	bgeu	a8, a4, 400dc0b4 <soc_get_available_memory_regions+0x118>
400dc0b1:	ffd906        	j	400dc019 <soc_get_available_memory_regions+0x7d>
400dc0b4:	180c      	movi.n	a8, 1
400dc0b6:	089d      	mov.n	a9, a8
400dc0b8:	0002c6        	j	400dc0c7 <soc_get_available_memory_regions+0x12b>
400dc0bb:	180c00        	lsxp	f0, a12, a0
400dc0be:	089d      	mov.n	a9, a8
400dc0c0:	0000c6        	j	400dc0c7 <soc_get_available_memory_regions+0x12b>
400dc0c3:	180c      	movi.n	a8, 1
400dc0c5:	090c      	movi.n	a9, 0
400dc0c7:	19ac      	beqz.n	a9, 400dc0ec <soc_get_available_memory_regions+0x150>
400dc0c9:	07a8      	l32i.n	a10, a7, 0
400dc0cb:	1798      	l32i.n	a9, a7, 4
400dc0cd:	0da9      	s32i.n	a10, a13, 0
400dc0cf:	f03d      	nop.n
400dc0d1:	f03d      	nop.n
400dc0d3:	f03d      	nop.n
400dc0d5:	f03d      	nop.n
400dc0d7:	27a8      	l32i.n	a10, a7, 8
400dc0d9:	1d99      	s32i.n	a9, a13, 4
400dc0db:	f03d      	nop.n
400dc0dd:	f03d      	nop.n
400dc0df:	f03d      	nop.n
400dc0e1:	f03d      	nop.n
400dc0e3:	3798      	l32i.n	a9, a7, 12
400dc0e5:	2da9      	s32i.n	a10, a13, 8
400dc0e7:	3d99      	s32i.n	a9, a13, 12
400dc0e9:	10cdd2        	addi	a13, a13, 16
400dc0ec:	188c      	beqz.n	a8, 400dc0f1 <soc_get_available_memory_regions+0x155>
400dc0ee:	10ccc2        	addi	a12, a12, 16
400dc0f1:	865a      	add.n	a8, a6, a5
400dc0f3:	021c87        	beq	a12, a8, 400dc0f9 <soc_get_available_memory_regions+0x15d>
400dc0f6:	ffbd86        	j	400dbff0 <soc_get_available_memory_regions+0x54>
400dc0f9:	c02d20        	sub	a2, a13, a2
400dc0fc:	212420        	srai	a2, a2, 4
400dc0ff:	f01d      	retw.n
400dc101:	000000        	ill

400dc104 <_fiprintf_r>:
400dc104:	00a136        	entry	a1, 80
400dc107:	10c1e2        	addi	a14, a1, 16
400dc10a:	30c1d2        	addi	a13, a1, 48
400dc10d:	cf0c      	movi.n	a15, 12
400dc10f:	04cd      	mov.n	a12, a4
400dc111:	03bd      	mov.n	a11, a3
400dc113:	02ad      	mov.n	a10, a2
400dc115:	7159      	s32i.n	a5, a1, 28
400dc117:	8169      	s32i.n	a6, a1, 32
400dc119:	9179      	s32i.n	a7, a1, 36
400dc11b:	11e9      	s32i.n	a14, a1, 4
400dc11d:	01d9      	s32i.n	a13, a1, 0
400dc11f:	21f9      	s32i.n	a15, a1, 8
400dc121:	03bee5        	call8	400dfd10 <_vfiprintf_r>
400dc124:	0a2d      	mov.n	a2, a10
400dc126:	f01d      	retw.n

400dc128 <fiprintf>:
400dc128:	00a136        	entry	a1, 80
400dc12b:	10c182        	addi	a8, a1, 16
400dc12e:	016182        	s32i	a8, a1, 4
400dc131:	30c182        	addi	a8, a1, 48
400dc134:	006182        	s32i	a8, a1, 0
400dc137:	880c      	movi.n	a8, 8
400dc139:	2189      	s32i.n	a8, a1, 8
400dc13b:	6149      	s32i.n	a4, a1, 24
400dc13d:	7159      	s32i.n	a5, a1, 28
400dc13f:	8169      	s32i.n	a6, a1, 32
400dc141:	096172        	s32i	a7, a1, 36
400dc144:	ac8825        	call8	400889c8 <__getreent>
400dc147:	01d8      	l32i.n	a13, a1, 0
400dc149:	11e8      	l32i.n	a14, a1, 4
400dc14b:	21f8      	l32i.n	a15, a1, 8
400dc14d:	02bd      	mov.n	a11, a2
400dc14f:	03cd      	mov.n	a12, a3
400dc151:	03bbe5        	call8	400dfd10 <_vfiprintf_r>
400dc154:	0a2d      	mov.n	a2, a10
400dc156:	f01d      	retw.n

400dc158 <_printf_r>:
400dc158:	00a136        	entry	a1, 80
400dc15b:	6149      	s32i.n	a4, a1, 24
400dc15d:	7159      	s32i.n	a5, a1, 28
400dc15f:	8169      	s32i.n	a6, a1, 32
400dc161:	9179      	s32i.n	a7, a1, 36
400dc163:	b28c      	beqz.n	a2, 400dc172 <_printf_r+0x1a>
400dc165:	6288      	l32i.n	a8, a2, 24
400dc167:	78cc      	bnez.n	a8, 400dc172 <_printf_r+0x1a>
400dc169:	20a220        	or	a10, a2, a2
400dc16c:	d14981        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400dc16f:	0008e0        	callx8	a8
400dc172:	0222b2        	l32i	a11, a2, 8
400dc175:	10c1e2        	addi	a14, a1, 16
400dc178:	30c1d2        	addi	a13, a1, 48
400dc17b:	08a0f2        	movi	a15, 8
400dc17e:	20c330        	or	a12, a3, a3
400dc181:	02ad      	mov.n	a10, a2
400dc183:	11e9      	s32i.n	a14, a1, 4
400dc185:	01d9      	s32i.n	a13, a1, 0
400dc187:	21f9      	s32i.n	a15, a1, 8
400dc189:	061be5        	call8	400e2348 <_vfprintf_r>
400dc18c:	0a2d      	mov.n	a2, a10
400dc18e:	f01d      	retw.n

400dc190 <printf>:
400dc190:	00a136        	entry	a1, 80
400dc193:	5139      	s32i.n	a3, a1, 20
400dc195:	6149      	s32i.n	a4, a1, 24
400dc197:	7159      	s32i.n	a5, a1, 28
400dc199:	8169      	s32i.n	a6, a1, 32
400dc19b:	9179      	s32i.n	a7, a1, 36
400dc19d:	ac82a5        	call8	400889c8 <__getreent>
400dc1a0:	0a3d      	mov.n	a3, a10
400dc1a2:	8a8c      	beqz.n	a10, 400dc1ae <printf+0x1e>
400dc1a4:	6a88      	l32i.n	a8, a10, 24
400dc1a6:	48cc      	bnez.n	a8, 400dc1ae <printf+0x1e>
400dc1a8:	d13a81        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400dc1ab:	0008e0        	callx8	a8
400dc1ae:	0223b2        	l32i	a11, a3, 8
400dc1b1:	10c1e2        	addi	a14, a1, 16
400dc1b4:	30c1d2        	addi	a13, a1, 48
400dc1b7:	04a0f2        	movi	a15, 4
400dc1ba:	20c220        	or	a12, a2, a2
400dc1bd:	03ad      	mov.n	a10, a3
400dc1bf:	11e9      	s32i.n	a14, a1, 4
400dc1c1:	01d9      	s32i.n	a13, a1, 0
400dc1c3:	21f9      	s32i.n	a15, a1, 8
400dc1c5:	061825        	call8	400e2348 <_vfprintf_r>
400dc1c8:	0a2d      	mov.n	a2, a10
400dc1ca:	f01d      	retw.n

400dc1cc <_snprintf_r>:
400dc1cc:	018136        	entry	a1, 192
400dc1cf:	246162        	s32i	a6, a1, 144
400dc1d2:	256172        	s32i	a7, a1, 148
400dc1d5:	05cd      	mov.n	a12, a5
400dc1d7:	0094d6        	bgez	a4, 400dc1e4 <_snprintf_r+0x18>
400dc1da:	8ba032        	movi	a3, 139
400dc1dd:	0239      	s32i.n	a3, a2, 0
400dc1df:	f27c      	movi.n	a2, -1
400dc1e1:	f01d      	retw.n
400dc1e3:	a28200        	muluh	a8, a2, a0
400dc1e6:	8208      	l32i.n	a0, a2, 32
400dc1e8:	320651        	l32r	a5, 400a8a00 <_iram_end+0x1aeac>
400dc1eb:	320061        	l32r	a6, 400a89ec <_iram_end+0x1ae98>
400dc1ee:	820461        	l32r	a6, 400bca00 <_iram_end+0x2eeac>
400dc1f1:	0cffc4        	lsi	f12, a15, 48
400dc1f4:	834003        	ssi	f0, a0, 0x20c
400dc1f7:	f37c83        	lsi	f8, a12, 0x3cc
400dc1fa:	075132        	s16i	a3, a1, 14
400dc1fd:	80a0e2        	movi	a14, 128
400dc200:	a0a032        	movi	a3, 160
400dc203:	e1ea      	add.n	a14, a1, a14
400dc205:	d13a      	add.n	a13, a1, a3
400dc207:	0f1c      	movi.n	a15, 16
400dc209:	01bd      	mov.n	a11, a1
400dc20b:	02ad      	mov.n	a10, a2
400dc20d:	2189      	s32i.n	a8, a1, 8
400dc20f:	5189      	s32i.n	a8, a1, 20
400dc211:	1b61e2        	s32i	a14, a1, 108
400dc214:	1a61d2        	s32i	a13, a1, 104
400dc217:	1c61f2        	s32i	a15, a1, 112
400dc21a:	0050a5        	call8	400dc724 <_svfprintf_r>
400dc21d:	040ae6        	bgei	a10, -1, 400dc225 <_snprintf_r+0x59>
400dc220:	8ba032        	movi	a3, 139
400dc223:	0239      	s32i.n	a3, a2, 0
400dc225:	0a2d      	mov.n	a2, a10
400dc227:	548c      	beqz.n	a4, 400dc230 <_snprintf_r+0x64>
400dc229:	0138      	l32i.n	a3, a1, 0
400dc22b:	040c      	movi.n	a4, 0
400dc22d:	004342        	s8i	a4, a3, 0
400dc230:	f01d      	retw.n
	...

400dc234 <snprintf>:
400dc234:	018136        	entry	a1, 192
400dc237:	236152        	s32i	a5, a1, 140
400dc23a:	246162        	s32i	a6, a1, 144
400dc23d:	256172        	s32i	a7, a1, 148
400dc240:	ac7865        	call8	400889c8 <__getreent>
400dc243:	205aa0        	or	a5, a10, a10
400dc246:	00a3d6        	bgez	a3, 400dc254 <snprintf+0x20>
400dc249:	8ba022        	movi	a2, 139
400dc24c:	006a22        	s32i	a2, a10, 0
400dc24f:	ffaf22        	movi	a2, -1
400dc252:	f01d      	retw.n
400dc254:	08a282        	movi	a8, 0x208
400dc257:	065182        	s16i	a8, a1, 12
400dc25a:	006122        	s32i	a2, a1, 0
400dc25d:	046122        	s32i	a2, a1, 16
400dc260:	00a082        	movi	a8, 0
400dc263:	230b      	addi.n	a2, a3, -1
400dc265:	832830        	moveqz	a2, a8, a3
400dc268:	2129      	s32i.n	a2, a1, 8
400dc26a:	5129      	s32i.n	a2, a1, 20
400dc26c:	f27c      	movi.n	a2, -1
400dc26e:	075122        	s16i	a2, a1, 14
400dc271:	80a0e2        	movi	a14, 128
400dc274:	a0a022        	movi	a2, 160
400dc277:	e1ea      	add.n	a14, a1, a14
400dc279:	d12a      	add.n	a13, a1, a2
400dc27b:	cf0c      	movi.n	a15, 12
400dc27d:	04cd      	mov.n	a12, a4
400dc27f:	01bd      	mov.n	a11, a1
400dc281:	1b61e2        	s32i	a14, a1, 108
400dc284:	1a61d2        	s32i	a13, a1, 104
400dc287:	1c61f2        	s32i	a15, a1, 112
400dc28a:	0049a5        	call8	400dc724 <_svfprintf_r>
400dc28d:	040ae6        	bgei	a10, -1, 400dc295 <snprintf+0x61>
400dc290:	8ba022        	movi	a2, 139
400dc293:	0529      	s32i.n	a2, a5, 0
400dc295:	0a2d      	mov.n	a2, a10
400dc297:	538c      	beqz.n	a3, 400dc2a0 <snprintf+0x6c>
400dc299:	0138      	l32i.n	a3, a1, 0
400dc29b:	050c      	movi.n	a5, 0
400dc29d:	004352        	s8i	a5, a3, 0
400dc2a0:	f01d      	retw.n
	...

400dc2a4 <get_arg$isra$0>:
400dc2a4:	008136        	entry	a1, 64
400dc2a7:	102182        	l32i	a8, a1, 64
400dc2aa:	2129      	s32i.n	a2, a1, 8
400dc2ac:	3159      	s32i.n	a5, a1, 12
400dc2ae:	0528      	l32i.n	a2, a5, 0
400dc2b0:	2198      	l32i.n	a9, a1, 8
400dc2b2:	0858      	l32i.n	a5, a8, 0
400dc2b4:	933550        	movnez	a3, a5, a5
400dc2b7:	0199      	s32i.n	a9, a1, 0
400dc2b9:	00d3c6        	j	400dc60c <get_arg$isra$0+0x368>
400dc2bc:	1b0000        	un.s	b0, f0, f0
400dc2bf:	035233        	lsi	f3, a2, 12
400dc2c2:	551600        	extui	a1, a0, 22, 6
400dc2c5:	c58200        	extui	a8, a0, 18, 13
400dc2c8:	56db      	addi.n	a5, a6, 13
400dc2ca:	ff18      	l32i.n	a1, a15, 60
400dc2cc:	349516        	beqz	a5, 400dc619 <get_arg$isra$0+0x375>
400dc2cf:	050c      	movi.n	a5, 0
400dc2d1:	05ed      	mov.n	a14, a5
400dc2d3:	f97c      	movi.n	a9, -1
400dc2d5:	05dd      	mov.n	a13, a5
400dc2d7:	1159      	s32i.n	a5, a1, 4
400dc2d9:	03ad      	mov.n	a10, a3
400dc2db:	d116c1        	l32r	a12, 400d0734 <_flash_cache_start+0x71c>
400dc2de:	000a82        	l8ui	a8, a10, 0
400dc2e1:	331b      	addi.n	a3, a3, 1
400dc2e3:	bc8a      	add.n	a11, a12, a8
400dc2e5:	000bc2        	l8ui	a12, a11, 0
400dc2e8:	11b8      	l32i.n	a11, a1, 4
400dc2ea:	b0fbb0        	addx8	a15, a11, a11
400dc2ed:	d112b1        	l32r	a11, 400d0738 <_flash_cache_start+0x720>
400dc2f0:	bbfa      	add.n	a11, a11, a15
400dc2f2:	bbca      	add.n	a11, a11, a12
400dc2f4:	000bb2        	l8ui	a11, a11, 0
400dc2f7:	11b9      	s32i.n	a11, a1, 4
400dc2f9:	d110b1        	l32r	a11, 400d073c <_flash_cache_start+0x724>
400dc2fc:	fbfa      	add.n	a15, a11, a15
400dc2fe:	ffca      	add.n	a15, a15, a12
400dc300:	000fb2        	l8ui	a11, a15, 0
400dc303:	bb0b      	addi.n	a11, a11, -1
400dc305:	74b0b0        	extui	a11, a11, 0, 8
400dc308:	028bb6        	bltui	a11, 8, 400dc30e <get_arg$isra$0+0x6a>
400dc30b:	00bcc6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc30e:	d10cc1        	l32r	a12, 400d0740 <_flash_cache_start+0x728>
400dc311:	a0bbc0        	addx4	a11, a11, a12
400dc314:	0bb8      	l32i.n	a11, a11, 0
400dc316:	000ba0        	jx	a11
400dc319:	9a0c      	movi.n	a10, 9
400dc31b:	00b5c6        	j	400dc5f6 <get_arg$isra$0+0x352>
400dc31e:	6aa0b2        	movi	a11, 106
400dc321:	3018b7        	beq	a8, a11, 400dc355 <get_arg$isra$0+0xb1>
400dc324:	0d3b87        	bltu	a11, a8, 400dc335 <get_arg$isra$0+0x91>
400dc327:	cb4c      	movi.n	a11, 76
400dc329:	2318b7        	beq	a8, a11, 400dc350 <get_arg$isra$0+0xac>
400dc32c:	68a0b2        	movi	a11, 104
400dc32f:	2a98b7        	bne	a8, a11, 400dc35d <get_arg$isra$0+0xb9>
400dc332:	00b306        	j	400dc602 <get_arg$isra$0+0x35e>
400dc335:	74a0b2        	movi	a11, 116
400dc338:	0298b7        	bne	a8, a11, 400dc33e <get_arg$isra$0+0x9a>
400dc33b:	00b0c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc33e:	7aa0b2        	movi	a11, 122
400dc341:	0298b7        	bne	a8, a11, 400dc347 <get_arg$isra$0+0xa3>
400dc344:	00ae86        	j	400dc602 <get_arg$isra$0+0x35e>
400dc347:	71a0b2        	movi	a11, 113
400dc34a:	0718b7        	beq	a8, a11, 400dc355 <get_arg$isra$0+0xb1>
400dc34d:	000306        	j	400dc35d <get_arg$isra$0+0xb9>
400dc350:	880c      	movi.n	a8, 8
400dc352:	000046        	j	400dc357 <get_arg$isra$0+0xb3>
400dc355:	082c      	movi.n	a8, 32
400dc357:	20dd80        	or	a13, a13, a8
400dc35a:	00a906        	j	400dc602 <get_arg$isra$0+0x35e>
400dc35d:	010ab2        	l8ui	a11, a10, 1
400dc360:	6ca082        	movi	a8, 108
400dc363:	099b87        	bne	a11, a8, 400dc370 <get_arg$isra$0+0xcc>
400dc366:	032c      	movi.n	a3, 32
400dc368:	20dd30        	or	a13, a13, a3
400dc36b:	3a2b      	addi.n	a3, a10, 2
400dc36d:	00a446        	j	400dc602 <get_arg$isra$0+0x35e>
400dc370:	081c      	movi.n	a8, 16
400dc372:	fff846        	j	400dc357 <get_arg$isra$0+0xb3>
400dc375:	bfc882        	addi	a8, a8, -65
400dc378:	748080        	extui	a8, a8, 0, 8
400dc37b:	7a3c      	movi.n	a10, 55
400dc37d:	442020        	extui	a2, a2, 0, 5
400dc380:	253a87        	bltu	a10, a8, 400dc3a9 <get_arg$isra$0+0x105>
400dc383:	d0f0a1        	l32r	a10, 400d0744 <_flash_cache_start+0x72c>
400dc386:	a088a0        	addx4	a8, a8, a10
400dc389:	0888      	l32i.n	a8, a8, 0
400dc38b:	0008a0        	jx	a8
400dc38e:	026d47        	bbci	a13, 4, 400dc394 <get_arg$isra$0+0xf0>
400dc391:	00d806        	j	400dc6f5 <get_arg$isra$0+0x451>
400dc394:	026d57        	bbci	a13, 5, 400dc39a <get_arg$isra$0+0xf6>
400dc397:	00dec6        	j	400dc716 <get_arg$isra$0+0x472>
400dc39a:	00db46        	j	400dc70b <get_arg$isra$0+0x467>
400dc39d:	026d47        	bbci	a13, 4, 400dc3a3 <get_arg$isra$0+0xff>
400dc3a0:	00d186        	j	400dc6ea <get_arg$isra$0+0x446>
400dc3a3:	00d906        	j	400dc70b <get_arg$isra$0+0x467>
400dc3a6:	000000        	ill
400dc3a9:	070926        	beqi	a9, -1, 400dc3b4 <get_arg$isra$0+0x110>
400dc3ac:	a08970        	addx4	a8, a9, a7
400dc3af:	0859      	s32i.n	a5, a8, 0
400dc3b1:	009346        	j	400dc602 <get_arg$isra$0+0x35e>
400dc3b4:	0275b6        	bltui	a5, 7, 400dc3ba <get_arg$isra$0+0x116>
400dc3b7:	0091c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc3ba:	d0e381        	l32r	a8, 400d0748 <_flash_cache_start+0x730>
400dc3bd:	a08580        	addx4	a8, a5, a8
400dc3c0:	0888      	l32i.n	a8, a8, 0
400dc3c2:	0008a0        	jx	a8
400dc3c5:	2458      	l32i.n	a5, a4, 8
400dc3c7:	881c      	movi.n	a8, 24
400dc3c9:	954b      	addi.n	a9, a5, 4
400dc3cb:	2499      	s32i.n	a9, a4, 8
400dc3cd:	a21b      	addi.n	a10, a2, 1
400dc3cf:	b02260        	addx8	a2, a2, a6
400dc3d2:	072897        	blt	a8, a9, 400dc3dd <get_arg$isra$0+0x139>
400dc3d5:	1488      	l32i.n	a8, a4, 4
400dc3d7:	0002c6        	j	400dc3e6 <get_arg$isra$0+0x142>
400dc3da:	000000        	ill
400dc3dd:	032857        	blt	a8, a5, 400dc3e4 <get_arg$isra$0+0x140>
400dc3e0:	452c      	movi.n	a5, 36
400dc3e2:	2459      	s32i.n	a5, a4, 8
400dc3e4:	0488      	l32i.n	a8, a4, 0
400dc3e6:	2458      	l32i.n	a5, a4, 8
400dc3e8:	f97c      	movi.n	a9, -1
400dc3ea:	585a      	add.n	a5, a8, a5
400dc3ec:	fcc552        	addi	a5, a5, -4
400dc3ef:	0558      	l32i.n	a5, a5, 0
400dc3f1:	0259      	s32i.n	a5, a2, 0
400dc3f3:	0a2d      	mov.n	a2, a10
400dc3f5:	150c      	movi.n	a5, 1
400dc3f7:	0081c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc3fa:	2458      	l32i.n	a5, a4, 8
400dc3fc:	887c      	movi.n	a8, -8
400dc3fe:	557b      	addi.n	a5, a5, 7
400dc400:	105580        	and	a5, a5, a8
400dc403:	958b      	addi.n	a9, a5, 8
400dc405:	2499      	s32i.n	a9, a4, 8
400dc407:	881c      	movi.n	a8, 24
400dc409:	a21b      	addi.n	a10, a2, 1
400dc40b:	b02260        	addx8	a2, a2, a6
400dc40e:	072897        	blt	a8, a9, 400dc419 <get_arg$isra$0+0x175>
400dc411:	1488      	l32i.n	a8, a4, 4
400dc413:	0002c6        	j	400dc422 <get_arg$isra$0+0x17e>
400dc416:	000000        	ill
400dc419:	032857        	blt	a8, a5, 400dc420 <get_arg$isra$0+0x17c>
400dc41c:	852c      	movi.n	a5, 40
400dc41e:	2459      	s32i.n	a5, a4, 8
400dc420:	0488      	l32i.n	a8, a4, 0
400dc422:	2458      	l32i.n	a5, a4, 8
400dc424:	585a      	add.n	a5, a8, a5
400dc426:	f8c552        	addi	a5, a5, -8
400dc429:	1598      	l32i.n	a9, a5, 4
400dc42b:	0588      	l32i.n	a8, a5, 0
400dc42d:	1299      	s32i.n	a9, a2, 4
400dc42f:	0289      	s32i.n	a8, a2, 0
400dc431:	f97c      	movi.n	a9, -1
400dc433:	0a2d      	mov.n	a2, a10
400dc435:	250c      	movi.n	a5, 2
400dc437:	0071c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc43a:	2458      	l32i.n	a5, a4, 8
400dc43c:	881c      	movi.n	a8, 24
400dc43e:	954b      	addi.n	a9, a5, 4
400dc440:	2499      	s32i.n	a9, a4, 8
400dc442:	a21b      	addi.n	a10, a2, 1
400dc444:	b02260        	addx8	a2, a2, a6
400dc447:	062897        	blt	a8, a9, 400dc451 <get_arg$isra$0+0x1ad>
400dc44a:	1488      	l32i.n	a8, a4, 4
400dc44c:	000286        	j	400dc45a <get_arg$isra$0+0x1b6>
400dc44f:	570000        	lsi	f0, a0, 0x15c
400dc452:	0328      	l32i.n	a2, a3, 0
400dc454:	452c      	movi.n	a5, 36
400dc456:	2459      	s32i.n	a5, a4, 8
400dc458:	0488      	l32i.n	a8, a4, 0
400dc45a:	2458      	l32i.n	a5, a4, 8
400dc45c:	f97c      	movi.n	a9, -1
400dc45e:	585a      	add.n	a5, a8, a5
400dc460:	fcc552        	addi	a5, a5, -4
400dc463:	0558      	l32i.n	a5, a5, 0
400dc465:	0259      	s32i.n	a5, a2, 0
400dc467:	0a2d      	mov.n	a2, a10
400dc469:	650c      	movi.n	a5, 6
400dc46b:	0064c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc46e:	2458      	l32i.n	a5, a4, 8
400dc470:	881c      	movi.n	a8, 24
400dc472:	954b      	addi.n	a9, a5, 4
400dc474:	2499      	s32i.n	a9, a4, 8
400dc476:	a21b      	addi.n	a10, a2, 1
400dc478:	b02260        	addx8	a2, a2, a6
400dc47b:	062897        	blt	a8, a9, 400dc485 <get_arg$isra$0+0x1e1>
400dc47e:	1488      	l32i.n	a8, a4, 4
400dc480:	000286        	j	400dc48e <get_arg$isra$0+0x1ea>
400dc483:	570000        	lsi	f0, a0, 0x15c
400dc486:	0328      	l32i.n	a2, a3, 0
400dc488:	452c      	movi.n	a5, 36
400dc48a:	2459      	s32i.n	a5, a4, 8
400dc48c:	0488      	l32i.n	a8, a4, 0
400dc48e:	2458      	l32i.n	a5, a4, 8
400dc490:	f97c      	movi.n	a9, -1
400dc492:	585a      	add.n	a5, a8, a5
400dc494:	fcc552        	addi	a5, a5, -4
400dc497:	0558      	l32i.n	a5, a5, 0
400dc499:	0259      	s32i.n	a5, a2, 0
400dc49b:	0a2d      	mov.n	a2, a10
400dc49d:	050c      	movi.n	a5, 0
400dc49f:	0057c6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc4a2:	2458      	l32i.n	a5, a4, 8
400dc4a4:	881c      	movi.n	a8, 24
400dc4a6:	954b      	addi.n	a9, a5, 4
400dc4a8:	2499      	s32i.n	a9, a4, 8
400dc4aa:	a21b      	addi.n	a10, a2, 1
400dc4ac:	b02260        	addx8	a2, a2, a6
400dc4af:	062897        	blt	a8, a9, 400dc4b9 <get_arg$isra$0+0x215>
400dc4b2:	1488      	l32i.n	a8, a4, 4
400dc4b4:	000286        	j	400dc4c2 <get_arg$isra$0+0x21e>
400dc4b7:	570000        	lsi	f0, a0, 0x15c
400dc4ba:	0328      	l32i.n	a2, a3, 0
400dc4bc:	452c      	movi.n	a5, 36
400dc4be:	2459      	s32i.n	a5, a4, 8
400dc4c0:	0488      	l32i.n	a8, a4, 0
400dc4c2:	2458      	l32i.n	a5, a4, 8
400dc4c4:	f97c      	movi.n	a9, -1
400dc4c6:	585a      	add.n	a5, a8, a5
400dc4c8:	fcc552        	addi	a5, a5, -4
400dc4cb:	0558      	l32i.n	a5, a5, 0
400dc4cd:	0259      	s32i.n	a5, a2, 0
400dc4cf:	0a2d      	mov.n	a2, a10
400dc4d1:	350c      	movi.n	a5, 3
400dc4d3:	004ac6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc4d6:	2458      	l32i.n	a5, a4, 8
400dc4d8:	887c      	movi.n	a8, -8
400dc4da:	557b      	addi.n	a5, a5, 7
400dc4dc:	105580        	and	a5, a5, a8
400dc4df:	958b      	addi.n	a9, a5, 8
400dc4e1:	2499      	s32i.n	a9, a4, 8
400dc4e3:	881c      	movi.n	a8, 24
400dc4e5:	a21b      	addi.n	a10, a2, 1
400dc4e7:	b02260        	addx8	a2, a2, a6
400dc4ea:	072897        	blt	a8, a9, 400dc4f5 <get_arg$isra$0+0x251>
400dc4ed:	1488      	l32i.n	a8, a4, 4
400dc4ef:	0002c6        	j	400dc4fe <get_arg$isra$0+0x25a>
400dc4f2:	000000        	ill
400dc4f5:	032857        	blt	a8, a5, 400dc4fc <get_arg$isra$0+0x258>
400dc4f8:	852c      	movi.n	a5, 40
400dc4fa:	2459      	s32i.n	a5, a4, 8
400dc4fc:	0488      	l32i.n	a8, a4, 0
400dc4fe:	2458      	l32i.n	a5, a4, 8
400dc500:	585a      	add.n	a5, a8, a5
400dc502:	f8c552        	addi	a5, a5, -8
400dc505:	1598      	l32i.n	a9, a5, 4
400dc507:	0588      	l32i.n	a8, a5, 0
400dc509:	1299      	s32i.n	a9, a2, 4
400dc50b:	0289      	s32i.n	a8, a2, 0
400dc50d:	f97c      	movi.n	a9, -1
400dc50f:	0a2d      	mov.n	a2, a10
400dc511:	450c      	movi.n	a5, 4
400dc513:	003ac6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc516:	2488      	l32i.n	a8, a4, 8
400dc518:	8a7c      	movi.n	a10, -8
400dc51a:	887b      	addi.n	a8, a8, 7
400dc51c:	1088a0        	and	a8, a8, a10
400dc51f:	b88b      	addi.n	a11, a8, 8
400dc521:	24b9      	s32i.n	a11, a4, 8
400dc523:	8a1c      	movi.n	a10, 24
400dc525:	c21b      	addi.n	a12, a2, 1
400dc527:	b02260        	addx8	a2, a2, a6
400dc52a:	072ab7        	blt	a10, a11, 400dc535 <get_arg$isra$0+0x291>
400dc52d:	14a8      	l32i.n	a10, a4, 4
400dc52f:	0002c6        	j	400dc53e <get_arg$isra$0+0x29a>
400dc532:	000000        	ill
400dc535:	032a87        	blt	a10, a8, 400dc53c <get_arg$isra$0+0x298>
400dc538:	882c      	movi.n	a8, 40
400dc53a:	2489      	s32i.n	a8, a4, 8
400dc53c:	04a8      	l32i.n	a10, a4, 0
400dc53e:	2488      	l32i.n	a8, a4, 8
400dc540:	8a8a      	add.n	a8, a10, a8
400dc542:	f8c882        	addi	a8, a8, -8
400dc545:	08a8      	l32i.n	a10, a8, 0
400dc547:	18b8      	l32i.n	a11, a8, 4
400dc549:	02a9      	s32i.n	a10, a2, 0
400dc54b:	12b9      	s32i.n	a11, a2, 4
400dc54d:	002006        	j	400dc5d1 <get_arg$isra$0+0x32d>
400dc550:	0788      	l32i.n	a8, a7, 0
400dc552:	140866        	bnei	a8, -1, 400dc56a <get_arg$isra$0+0x2c6>
400dc555:	80a0c2        	movi	a12, 128
400dc558:	0b0c      	movi.n	a11, 0
400dc55a:	07ad      	mov.n	a10, a7
400dc55c:	51d9      	s32i.n	a13, a1, 20
400dc55e:	61e9      	s32i.n	a14, a1, 24
400dc560:	cec581        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400dc563:	0008e0        	callx8	a8
400dc566:	61e8      	l32i.n	a14, a1, 24
400dc568:	51d8      	l32i.n	a13, a1, 20
400dc56a:	0188      	l32i.n	a8, a1, 0
400dc56c:	9e0b      	addi.n	a9, a14, -1
400dc56e:	538890        	max	a8, a8, a9
400dc571:	000ac6        	j	400dc5a0 <get_arg$isra$0+0x2fc>
400dc574:	0788      	l32i.n	a8, a7, 0
400dc576:	180866        	bnei	a8, -1, 400dc592 <get_arg$isra$0+0x2ee>
400dc579:	80a0c2        	movi	a12, 128
400dc57c:	0b0c      	movi.n	a11, 0
400dc57e:	07ad      	mov.n	a10, a7
400dc580:	4199      	s32i.n	a9, a1, 16
400dc582:	51d9      	s32i.n	a13, a1, 20
400dc584:	61e9      	s32i.n	a14, a1, 24
400dc586:	cebb81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400dc589:	0008e0        	callx8	a8
400dc58c:	61e8      	l32i.n	a14, a1, 24
400dc58e:	51d8      	l32i.n	a13, a1, 20
400dc590:	4198      	l32i.n	a9, a1, 16
400dc592:	ee0b      	addi.n	a14, a14, -1
400dc594:	a08e70        	addx4	a8, a14, a7
400dc597:	0a0c      	movi.n	a10, 0
400dc599:	08a9      	s32i.n	a10, a8, 0
400dc59b:	0188      	l32i.n	a8, a1, 0
400dc59d:	5388e0        	max	a8, a8, a14
400dc5a0:	0189      	s32i.n	a8, a1, 0
400dc5a2:	001706        	j	400dc602 <get_arg$isra$0+0x35e>
400dc5a5:	0a3d      	mov.n	a3, a10
400dc5a7:	2488      	l32i.n	a8, a4, 8
400dc5a9:	8a1c      	movi.n	a10, 24
400dc5ab:	b84b      	addi.n	a11, a8, 4
400dc5ad:	24b9      	s32i.n	a11, a4, 8
400dc5af:	c21b      	addi.n	a12, a2, 1
400dc5b1:	b02260        	addx8	a2, a2, a6
400dc5b4:	052ab7        	blt	a10, a11, 400dc5bd <get_arg$isra$0+0x319>
400dc5b7:	14a8      	l32i.n	a10, a4, 4
400dc5b9:	000246        	j	400dc5c6 <get_arg$isra$0+0x322>
400dc5bc:	2a8700        	mul.s	f8, f7, f0
400dc5bf:	482c03        	lsi	f0, a12, 0x120
400dc5c2:	2489      	s32i.n	a8, a4, 8
400dc5c4:	04a8      	l32i.n	a10, a4, 0
400dc5c6:	2488      	l32i.n	a8, a4, 8
400dc5c8:	8a8a      	add.n	a8, a10, a8
400dc5ca:	fcc882        	addi	a8, a8, -4
400dc5cd:	0888      	l32i.n	a8, a8, 0
400dc5cf:	0289      	s32i.n	a8, a2, 0
400dc5d1:	0c2d      	mov.n	a2, a12
400dc5d3:	000ac6        	j	400dc602 <get_arg$isra$0+0x35e>
400dc5d6:	d0c8e2        	addi	a14, a8, -48
400dc5d9:	9a0c      	movi.n	a10, 9
400dc5db:	0001c6        	j	400dc5e6 <get_arg$isra$0+0x342>
400dc5de:	a0eee0        	addx4	a14, a14, a14
400dc5e1:	90ee80        	addx2	a14, a14, a8
400dc5e4:	331b      	addi.n	a3, a3, 1
400dc5e6:	000382        	l8ui	a8, a3, 0
400dc5e9:	589c      	beqz.n	a8, 400dc602 <get_arg$isra$0+0x35e>
400dc5eb:	d0c882        	addi	a8, a8, -48
400dc5ee:	ecba87        	bgeu	a10, a8, 400dc5de <get_arg$isra$0+0x33a>
400dc5f1:	000346        	j	400dc602 <get_arg$isra$0+0x35e>
400dc5f4:	331b      	addi.n	a3, a3, 1
400dc5f6:	000382        	l8ui	a8, a3, 0
400dc5f9:	d0c882        	addi	a8, a8, -48
400dc5fc:	748080        	extui	a8, a8, 0, 8
400dc5ff:	f1ba87        	bgeu	a10, a8, 400dc5f4 <get_arg$isra$0+0x350>
400dc602:	11a8      	l32i.n	a10, a1, 4
400dc604:	b80c      	movi.n	a8, 11
400dc606:	021a87        	beq	a10, a8, 400dc60c <get_arg$isra$0+0x368>
400dc609:	ff3306        	j	400dc2d9 <get_arg$isra$0+0x35>
400dc60c:	000352        	l8ui	a5, a3, 0
400dc60f:	658c      	beqz.n	a5, 400dc619 <get_arg$isra$0+0x375>
400dc611:	2188      	l32i.n	a8, a1, 8
400dc613:	022827        	blt	a8, a2, 400dc619 <get_arg$isra$0+0x375>
400dc616:	ff2986        	j	400dc2c0 <get_arg$isra$0+0x1c>
400dc619:	0188      	l32i.n	a8, a1, 0
400dc61b:	000352        	l8ui	a5, a3, 0
400dc61e:	2198      	l32i.n	a9, a1, 8
400dc620:	f21b      	addi.n	a15, a2, 1
400dc622:	839850        	moveqz	a9, a8, a5
400dc625:	0199      	s32i.n	a9, a1, 0
400dc627:	b0b260        	addx8	a11, a2, a6
400dc62a:	a07270        	addx4	a7, a2, a7
400dc62d:	8a1c      	movi.n	a10, 24
400dc62f:	4c2c      	movi.n	a12, 36
400dc631:	8d7c      	movi.n	a13, -8
400dc633:	8e2c      	movi.n	a14, 40
400dc635:	002306        	j	400dc6c5 <get_arg$isra$0+0x421>
400dc638:	0758      	l32i.n	a5, a7, 0
400dc63a:	2428      	l32i.n	a2, a4, 8
400dc63c:	550b      	addi.n	a5, a5, -1
400dc63e:	5f65f6        	bgeui	a5, 6, 400dc6a1 <get_arg$isra$0+0x3fd>
400dc641:	d04291        	l32r	a9, 400d074c <_flash_cache_start+0x734>
400dc644:	a05590        	addx4	a5, a5, a9
400dc647:	0558      	l32i.n	a5, a5, 0
400dc649:	0005a0        	jx	a5
400dc64c:	227b      	addi.n	a2, a2, 7
400dc64e:	1022d0        	and	a2, a2, a13
400dc651:	528b      	addi.n	a5, a2, 8
400dc653:	2459      	s32i.n	a5, a4, 8
400dc655:	042a57        	blt	a10, a5, 400dc65d <get_arg$isra$0+0x3b9>
400dc658:	1458      	l32i.n	a5, a4, 4
400dc65a:	000186        	j	400dc664 <get_arg$isra$0+0x3c0>
400dc65d:	012a27        	blt	a10, a2, 400dc662 <get_arg$isra$0+0x3be>
400dc660:	24e9      	s32i.n	a14, a4, 8
400dc662:	0458      	l32i.n	a5, a4, 0
400dc664:	2428      	l32i.n	a2, a4, 8
400dc666:	252a      	add.n	a2, a5, a2
400dc668:	f8c222        	addi	a2, a2, -8
400dc66b:	0288      	l32i.n	a8, a2, 0
400dc66d:	1298      	l32i.n	a9, a2, 4
400dc66f:	0b89      	s32i.n	a8, a11, 0
400dc671:	1b99      	s32i.n	a9, a11, 4
400dc673:	001206        	j	400dc6bf <get_arg$isra$0+0x41b>
400dc676:	227b      	addi.n	a2, a2, 7
400dc678:	1022d0        	and	a2, a2, a13
400dc67b:	528b      	addi.n	a5, a2, 8
400dc67d:	2459      	s32i.n	a5, a4, 8
400dc67f:	052a57        	blt	a10, a5, 400dc688 <get_arg$isra$0+0x3e4>
400dc682:	1458      	l32i.n	a5, a4, 4
400dc684:	0001c6        	j	400dc68f <get_arg$isra$0+0x3eb>
400dc687:	2a2700        	mul.s	f2, f7, f0
400dc68a:	24e901        	l32r	a0, 400a5a30 <_iram_end+0x17edc>
400dc68d:	0458      	l32i.n	a5, a4, 0
400dc68f:	2428      	l32i.n	a2, a4, 8
400dc691:	252a      	add.n	a2, a5, a2
400dc693:	f8c222        	addi	a2, a2, -8
400dc696:	0288      	l32i.n	a8, a2, 0
400dc698:	1298      	l32i.n	a9, a2, 4
400dc69a:	0b89      	s32i.n	a8, a11, 0
400dc69c:	1b99      	s32i.n	a9, a11, 4
400dc69e:	000746        	j	400dc6bf <get_arg$isra$0+0x41b>
400dc6a1:	524b      	addi.n	a5, a2, 4
400dc6a3:	2459      	s32i.n	a5, a4, 8
400dc6a5:	042a57        	blt	a10, a5, 400dc6ad <get_arg$isra$0+0x409>
400dc6a8:	1458      	l32i.n	a5, a4, 4
400dc6aa:	000186        	j	400dc6b4 <get_arg$isra$0+0x410>
400dc6ad:	012a27        	blt	a10, a2, 400dc6b2 <get_arg$isra$0+0x40e>
400dc6b0:	24c9      	s32i.n	a12, a4, 8
400dc6b2:	0458      	l32i.n	a5, a4, 0
400dc6b4:	2428      	l32i.n	a2, a4, 8
400dc6b6:	252a      	add.n	a2, a5, a2
400dc6b8:	fcc222        	addi	a2, a2, -4
400dc6bb:	0228      	l32i.n	a2, a2, 0
400dc6bd:	0b29      	s32i.n	a2, a11, 0
400dc6bf:	ff1b      	addi.n	a15, a15, 1
400dc6c1:	bb8b      	addi.n	a11, a11, 8
400dc6c3:	774b      	addi.n	a7, a7, 4
400dc6c5:	0158      	l32i.n	a5, a1, 0
400dc6c7:	2f0b      	addi.n	a2, a15, -1
400dc6c9:	022527        	blt	a5, a2, 400dc6cf <get_arg$isra$0+0x42b>
400dc6cc:	ffda06        	j	400dc638 <get_arg$isra$0+0x394>
400dc6cf:	3188      	l32i.n	a8, a1, 12
400dc6d1:	102192        	l32i	a9, a1, 64
400dc6d4:	0829      	s32i.n	a2, a8, 0
400dc6d6:	2188      	l32i.n	a8, a1, 8
400dc6d8:	0939      	s32i.n	a3, a9, 0
400dc6da:	b02860        	addx8	a2, a8, a6
400dc6dd:	f01d      	retw.n
400dc6df:	350c      	movi.n	a5, 3
400dc6e1:	020926        	beqi	a9, -1, 400dc6e7 <get_arg$isra$0+0x443>
400dc6e4:	ff3106        	j	400dc3ac <get_arg$isra$0+0x108>
400dc6e7:	ff6dc6        	j	400dc4a2 <get_arg$isra$0+0x1fe>
400dc6ea:	650c      	movi.n	a5, 6
400dc6ec:	020926        	beqi	a9, -1, 400dc6f2 <get_arg$isra$0+0x44e>
400dc6ef:	ff2e46        	j	400dc3ac <get_arg$isra$0+0x108>
400dc6f2:	ff5106        	j	400dc43a <get_arg$isra$0+0x196>
400dc6f5:	150c      	movi.n	a5, 1
400dc6f7:	020926        	beqi	a9, -1, 400dc6fd <get_arg$isra$0+0x459>
400dc6fa:	ff2b86        	j	400dc3ac <get_arg$isra$0+0x108>
400dc6fd:	ff3106        	j	400dc3c5 <get_arg$isra$0+0x121>
400dc700:	450c      	movi.n	a5, 4
400dc702:	020926        	beqi	a9, -1, 400dc708 <get_arg$isra$0+0x464>
400dc705:	ff28c6        	j	400dc3ac <get_arg$isra$0+0x108>
400dc708:	ff7286        	j	400dc4d6 <get_arg$isra$0+0x232>
400dc70b:	050c      	movi.n	a5, 0
400dc70d:	020926        	beqi	a9, -1, 400dc713 <get_arg$isra$0+0x46f>
400dc710:	ff2606        	j	400dc3ac <get_arg$isra$0+0x108>
400dc713:	ff55c6        	j	400dc46e <get_arg$isra$0+0x1ca>
400dc716:	250c      	movi.n	a5, 2
400dc718:	020926        	beqi	a9, -1, 400dc71e <get_arg$isra$0+0x47a>
400dc71b:	ff2346        	j	400dc3ac <get_arg$isra$0+0x108>
400dc71e:	ff3606        	j	400dc3fa <get_arg$isra$0+0x156>
400dc721:	000000        	ill

400dc724 <_svfprintf_r>:
400dc724:	062136        	entry	a1, 0x310
400dc727:	a36122        	s32i	a2, a1, 0x28c
400dc72a:	a321a2        	l32i	a10, a1, 0x28c
400dc72d:	a46132        	s32i	a3, a1, 0x290
400dc730:	a16142        	s32i	a4, a1, 0x284
400dc733:	9c6152        	s32i	a5, a1, 0x270
400dc736:	9d6162        	s32i	a6, a1, 0x274
400dc739:	9e6172        	s32i	a7, a1, 0x278
400dc73c:	d01481        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dc73f:	0008e0        	callx8	a8
400dc742:	0aa8      	l32i.n	a10, a10, 0
400dc744:	b161a2        	s32i	a10, a1, 0x2c4
400dc747:	ce5081        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400dc74a:	0008e0        	callx8	a8
400dc74d:	a42182        	l32i	a8, a1, 0x290
400dc750:	af61a2        	s32i	a10, a1, 0x2bc
400dc753:	061822        	l16ui	a2, a8, 12
400dc756:	10c132        	addi	a3, a1, 16
400dc759:	276277        	bbci	a2, 7, 400dc784 <_svfprintf_r+0x60>
400dc75c:	4828      	l32i.n	a2, a8, 16
400dc75e:	22ec      	bnez.n	a2, 400dc784 <_svfprintf_r+0x60>
400dc760:	a321a2        	l32i	a10, a1, 0x28c
400dc763:	0b4c      	movi.n	a11, 64
400dc765:	a81225        	call8	40084888 <_malloc_r>
400dc768:	a42192        	l32i	a9, a1, 0x290
400dc76b:	09a9      	s32i.n	a10, a9, 0
400dc76d:	49a9      	s32i.n	a10, a9, 16
400dc76f:	aacc      	bnez.n	a10, 400dc77d <_svfprintf_r+0x59>
400dc771:	a32182        	l32i	a8, a1, 0x28c
400dc774:	c20c      	movi.n	a2, 12
400dc776:	0829      	s32i.n	a2, a8, 0
400dc778:	f27c      	movi.n	a2, -1
400dc77a:	f01d      	retw.n
400dc77c:	219200        	srai	a9, a0, 2
400dc77f:	024ca4        	lsi	f10, a12, 8
400dc782:	5929      	s32i.n	a2, a9, 20
400dc784:	f47c      	movi.n	a4, -1
400dc786:	10c1a2        	addi	a10, a1, 16
400dc789:	e4a132        	movi	a3, 0x1e4
400dc78c:	446142        	s32i	a4, a1, 0x110
400dc78f:	ce3551        	l32r	a5, 400d0064 <_flash_cache_start+0x4c>
400dc792:	ce3441        	l32r	a4, 400d0064 <_flash_cache_start+0x4c>
400dc795:	020c      	movi.n	a2, 0
400dc797:	3a3a      	add.n	a3, a10, a3
400dc799:	8d6132        	s32i	a3, a1, 0x234
400dc79c:	8f6122        	s32i	a2, a1, 0x23c
400dc79f:	8e6122        	s32i	a2, a1, 0x238
400dc7a2:	966122        	s32i	a2, a1, 0x258
400dc7a5:	976122        	s32i	a2, a1, 0x25c
400dc7a8:	a76122        	s32i	a2, a1, 0x29c
400dc7ab:	aa6142        	s32i	a4, a1, 0x2a8
400dc7ae:	ab6152        	s32i	a5, a1, 0x2ac
400dc7b1:	9f6132        	s32i	a3, a1, 0x27c
400dc7b4:	b56122        	s32i	a2, a1, 0x2d4
400dc7b7:	b46122        	s32i	a2, a1, 0x2d0
400dc7ba:	ad6122        	s32i	a2, a1, 0x2b4
400dc7bd:	b06122        	s32i	a2, a1, 0x2c0
400dc7c0:	b36122        	s32i	a2, a1, 0x2cc
400dc7c3:	ae6122        	s32i	a2, a1, 0x2b8
400dc7c6:	000206        	j	400dc7d2 <_svfprintf_r+0xae>
400dc7c9:	215200        	srai	a5, a0, 2
400dc7cc:	2da8      	l32i.n	a10, a13, 8
400dc7ce:	615207        	bbc	a2, a0, 400dc833 <_svfprintf_r+0x10f>
400dc7d1:	2152a1        	l32r	a10, 400a4d1c <_iram_end+0x171c8>
400dc7d4:	0046a1        	l32r	a10, 4009c8ec <_iram_end+0xed98>
400dc7d7:	551b00        	extui	a1, a0, 27, 6
400dc7da:	000532        	l8ui	a3, a5, 0
400dc7dd:	438c      	beqz.n	a3, 400dc7e5 <_svfprintf_r+0xc1>
400dc7df:	dbc332        	addi	a3, a3, -37
400dc7e2:	ff2356        	bnez	a3, 400dc7d8 <_svfprintf_r+0xb4>
400dc7e5:	a12182        	l32i	a8, a1, 0x284
400dc7e8:	c03580        	sub	a3, a5, a8
400dc7eb:	052316        	beqz	a3, 400dc841 <_svfprintf_r+0x11d>
400dc7ee:	8f2142        	l32i	a4, a1, 0x23c
400dc7f1:	9f2192        	l32i	a9, a1, 0x27c
400dc7f4:	443a      	add.n	a4, a4, a3
400dc7f6:	8f6142        	s32i	a4, a1, 0x23c
400dc7f9:	8e2142        	l32i	a4, a1, 0x238
400dc7fc:	10c1a2        	addi	a10, a1, 16
400dc7ff:	441b      	addi.n	a4, a4, 1
400dc801:	0989      	s32i.n	a8, a9, 0
400dc803:	1939      	s32i.n	a3, a9, 4
400dc805:	8e6142        	s32i	a4, a1, 0x238
400dc808:	02da62        	addmi	a6, a10, 0x200
400dc80b:	0984e6        	bgei	a4, 8, 400dc818 <_svfprintf_r+0xf4>
400dc80e:	998b      	addi.n	a9, a9, 8
400dc810:	9f6192        	s32i	a9, a1, 0x27c
400dc813:	000886        	j	400dc839 <_svfprintf_r+0x115>
400dc816:	c20000        	quou	a0, a0, a0
400dc819:	b234a2        	lsi	f10, a4, 0x2c8
400dc81c:	a2a421        	l32r	a2, 400c52ac <_rtc_text_end+0x52ac>
400dc81f:	10a321        	l32r	a2, 400a0aac <_iram_end+0x12f58>
400dc822:	80cc      	bnez.n	a0, 400dc82e <_svfprintf_r+0x10a>
400dc824:	0a0fa5        	call8	400e6920 <__ssprint_r>
400dc827:	002a16        	beqz	a10, 400dc82d <_svfprintf_r+0x109>
400dc82a:	0befc6        	j	400df7ed <_svfprintf_r+0x30c9>
400dc82d:	e4a142        	movi	a4, 0x1e4
400dc830:	10c162        	addi	a6, a1, 16
400dc833:	806640        	add	a6, a6, a4
400dc836:	9f6162        	s32i	a6, a1, 0x27c
400dc839:	ae2182        	l32i	a8, a1, 0x2b8
400dc83c:	883a      	add.n	a8, a8, a3
400dc83e:	ae6182        	s32i	a8, a1, 0x2b8
400dc841:	000532        	l8ui	a3, a5, 0
400dc844:	13cc      	bnez.n	a3, 400dc849 <_svfprintf_r+0x125>
400dc846:	0bde86        	j	400df7c4 <_svfprintf_r+0x30a0>
400dc849:	10c192        	addi	a9, a1, 16
400dc84c:	060c      	movi.n	a6, 0
400dc84e:	02d942        	addmi	a4, a9, 0x200
400dc851:	524462        	s8i	a6, a4, 82
400dc854:	060c      	movi.n	a6, 0
400dc856:	f47c      	movi.n	a4, -1
400dc858:	a56142        	s32i	a4, a1, 0x294
400dc85b:	ac6162        	s32i	a6, a1, 0x2b0
400dc85e:	064d      	mov.n	a4, a6
400dc860:	a06162        	s32i	a6, a1, 0x280
400dc863:	4ca262        	movi	a6, 0x24c
400dc866:	896a      	add.n	a8, a9, a6
400dc868:	351b      	addi.n	a3, a5, 1
400dc86a:	027d      	mov.n	a7, a2
400dc86c:	a26182        	s32i	a8, a1, 0x288
400dc86f:	000286        	j	400dc87d <_svfprintf_r+0x159>
400dc872:	000000        	ill
400dc875:	a86132        	s32i	a3, a1, 0x2a0
400dc878:	040c      	movi.n	a4, 0
400dc87a:	a82132        	l32i	a3, a1, 0x2a0
400dc87d:	931b      	addi.n	a9, a3, 1
400dc87f:	000332        	l8ui	a3, a3, 0
400dc882:	a86192        	s32i	a9, a1, 0x2a0
400dc885:	a66132        	s32i	a3, a1, 0x298
400dc888:	cfb8d1        	l32r	a13, 400d0768 <_flash_cache_start+0x750>
400dc88b:	980c      	movi.n	a8, 9
400dc88d:	4a2c      	movi.n	a10, 36
400dc88f:	ab2c      	movi.n	a11, 42
400dc891:	fc7c      	movi.n	a12, -1
400dc893:	000106        	j	400dc89b <_svfprintf_r+0x177>
400dc896:	320000        	orbc	b0, b0, b0
400dc899:	62ac61        	l32r	a6, 400b534c <_iram_end+0x277f8>
400dc89c:	5ca621        	l32r	a2, 400b3b34 <_iram_end+0x25fe0>
400dc89f:	32a9      	s32i.n	a10, a2, 12
400dc8a1:	37e0c6        	j	400ea828 <__gxx_personality_v0+0x168>
400dc8a4:	02b9      	s32i.n	a11, a2, 0
400dc8a6:	08a586        	j	400deb40 <_svfprintf_r+0x241c>
400dc8a9:	a033d0        	addx4	a3, a3, a13
400dc8ac:	0338      	l32i.n	a3, a3, 0
400dc8ae:	0003a0        	jx	a3
400dc8b1:	cfac31        	l32r	a3, 400d0764 <_flash_cache_start+0x74c>
400dc8b4:	b56132        	s32i	a3, a1, 0x2d4
400dc8b7:	0722c6        	j	400de546 <_svfprintf_r+0x1e22>
400dc8ba:	a20000        	muluh	a0, a0, a0
400dc8bd:	81a321        	l32r	a2, 400bcf4c <_iram_end+0x2f3f8>
400dc8c0:	e0cfb3        	ssip	f11, a15, 0x380
400dc8c3:	0008      	l32i.n	a0, a0, 0
400dc8c5:	1aa8      	l32i.n	a10, a10, 4
400dc8c7:	b361a2        	s32i	a10, a1, 0x2cc
400dc8ca:	cdef81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400dc8cd:	0008e0        	callx8	a8
400dc8d0:	b061a2        	s32i	a10, a1, 0x2c0
400dc8d3:	a321a2        	l32i	a10, a1, 0x28c
400dc8d6:	cfad81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dc8d9:	0008e0        	callx8	a8
400dc8dc:	2aa8      	l32i.n	a10, a10, 8
400dc8de:	b02162        	l32i	a6, a1, 0x2c0
400dc8e1:	ad61a2        	s32i	a10, a1, 0x2b4
400dc8e4:	f92616        	beqz	a6, 400dc87a <_svfprintf_r+0x156>
400dc8e7:	f8fa16        	beqz	a10, 400dc87a <_svfprintf_r+0x156>
400dc8ea:	000a32        	l8ui	a3, a10, 0
400dc8ed:	f89316        	beqz	a3, 400dc87a <_svfprintf_r+0x156>
400dc8f0:	00a432        	movi	a3, 0x400
400dc8f3:	00bfc6        	j	400dcbf6 <_svfprintf_r+0x4d2>
400dc8f6:	10c192        	addi	a9, a1, 16
400dc8f9:	02d932        	addmi	a3, a9, 0x200
400dc8fc:	520362        	l8ui	a6, a3, 82
400dc8ff:	f77656        	bnez	a6, 400dc87a <_svfprintf_r+0x156>
400dc902:	062c      	movi.n	a6, 32
400dc904:	004606        	j	400dca20 <_svfprintf_r+0x2fc>
400dc907:	130c      	movi.n	a3, 1
400dc909:	00b046        	j	400dcbce <_svfprintf_r+0x4aa>
400dc90c:	a82182        	l32i	a8, a1, 0x2a0
400dc90f:	000862        	l8ui	a6, a8, 0
400dc912:	980c      	movi.n	a8, 9
400dc914:	d0c632        	addi	a3, a6, -48
400dc917:	02b837        	bgeu	a8, a3, 400dc91d <_svfprintf_r+0x1f9>
400dc91a:	0bb9c6        	j	400df805 <_svfprintf_r+0x30e1>
400dc91d:	a82192        	l32i	a9, a1, 0x2a0
400dc920:	0a0c      	movi.n	a10, 0
400dc922:	391b      	addi.n	a3, a9, 1
400dc924:	d0c662        	addi	a6, a6, -48
400dc927:	a0aaa0        	addx4	a10, a10, a10
400dc92a:	331b      	addi.n	a3, a3, 1
400dc92c:	90aa60        	addx2	a10, a10, a6
400dc92f:	630b      	addi.n	a6, a3, -1
400dc931:	000662        	l8ui	a6, a6, 0
400dc934:	d0c692        	addi	a9, a6, -48
400dc937:	e9b897        	bgeu	a8, a9, 400dc924 <_svfprintf_r+0x200>
400dc93a:	482c      	movi.n	a8, 36
400dc93c:	021687        	beq	a6, a8, 400dc942 <_svfprintf_r+0x21e>
400dc93f:	ffcd46        	j	400dc878 <_svfprintf_r+0x154>
400dc942:	062c      	movi.n	a6, 32
400dc944:	02a6a7        	bge	a6, a10, 400dc94a <_svfprintf_r+0x226>
400dc947:	0ba886        	j	400df7ed <_svfprintf_r+0x30c9>
400dc94a:	972162        	l32i	a6, a1, 0x25c
400dc94d:	aa0b      	addi.n	a10, a10, -1
400dc94f:	09aa67        	bge	a10, a6, 400dc95c <_svfprintf_r+0x238>
400dc952:	10c1e2        	addi	a14, a1, 16
400dc955:	b0aae0        	addx8	a10, a10, a14
400dc958:	000706        	j	400dc978 <_svfprintf_r+0x254>
400dc95b:	c18200        	mul16u	a8, a2, a0
400dc95e:	a26210        	muluh	a6, a2, a1
400dc961:	6a48      	l32i.n	a4, a10, 24
400dc963:	c268      	l32i.n	a6, a2, 48
400dc965:	d260a2        	s32i	a10, a0, 0x348
400dc968:	69a221        	l32r	a2, 400b6ff0 <_iram_end+0x2949c>
400dc96b:	d8f201        	l32r	a0, 400d2d34 <unsigned char* std::__uninitialized_default_n_a<unsigned char*, unsigned int, unsigned char>(unsigned char*, unsigned int, std::allocator<unsigned char>&)>
400dc96e:	08ed01        	l32r	a0, 4009ed24 <_iram_end+0x111d0>
400dc971:	c8ca      	add.n	a12, a8, a12
400dc973:	05bd      	mov.n	a11, a5
400dc975:	ff92e5        	call8	400dc2a4 <get_arg$isra$0>
400dc978:	0aa8      	l32i.n	a10, a10, 0
400dc97a:	076d      	mov.n	a6, a7
400dc97c:	ac61a2        	s32i	a10, a1, 0x2b0
400dc97f:	a86132        	s32i	a3, a1, 0x2a0
400dc982:	001fc6        	j	400dca05 <_svfprintf_r+0x2e1>
400dc985:	10c192        	addi	a9, a1, 16
400dc988:	b03290        	addx8	a3, a2, a9
400dc98b:	001c46        	j	400dca00 <_svfprintf_r+0x2dc>
400dc98e:	f31c      	movi.n	a3, 31
400dc990:	402387        	blt	a3, a8, 400dc9d4 <_svfprintf_r+0x2b0>
400dc993:	381b      	addi.n	a3, a8, 1
400dc995:	10c1a2        	addi	a10, a1, 16
400dc998:	976132        	s32i	a3, a1, 0x25c
400dc99b:	02da32        	addmi	a3, a10, 0x200
400dc99e:	1a2372        	l32i	a7, a3, 104
400dc9a1:	891c      	movi.n	a9, 24
400dc9a3:	a74b      	addi.n	a10, a7, 4
400dc9a5:	1a63a2        	s32i	a10, a3, 104
400dc9a8:	0529a7        	blt	a9, a10, 400dc9b1 <_svfprintf_r+0x28d>
400dc9ab:	192372        	l32i	a7, a3, 100
400dc9ae:	000286        	j	400dc9bc <_svfprintf_r+0x298>
400dc9b1:	042977        	blt	a9, a7, 400dc9b9 <_svfprintf_r+0x295>
400dc9b4:	472c      	movi.n	a7, 36
400dc9b6:	1a6372        	s32i	a7, a3, 104
400dc9b9:	9c2172        	l32i	a7, a1, 0x270
400dc9bc:	9e2132        	l32i	a3, a1, 0x278
400dc9bf:	10c1e2        	addi	a14, a1, 16
400dc9c2:	373a      	add.n	a3, a7, a3
400dc9c4:	fcc332        	addi	a3, a3, -4
400dc9c7:	0338      	l32i.n	a3, a3, 0
400dc9c9:	b088e0        	addx8	a8, a8, a14
400dc9cc:	ac6132        	s32i	a3, a1, 0x2b0
400dc9cf:	0839      	s32i.n	a3, a8, 0
400dc9d1:	000c06        	j	400dca05 <_svfprintf_r+0x2e1>
400dc9d4:	10c182        	addi	a8, a1, 16
400dc9d7:	02d832        	addmi	a3, a8, 0x200
400dc9da:	1a2372        	l32i	a7, a3, 104
400dc9dd:	881c      	movi.n	a8, 24
400dc9df:	974b      	addi.n	a9, a7, 4
400dc9e1:	1a6392        	s32i	a9, a3, 104
400dc9e4:	052897        	blt	a8, a9, 400dc9ed <_svfprintf_r+0x2c9>
400dc9e7:	192372        	l32i	a7, a3, 100
400dc9ea:	000286        	j	400dc9f8 <_svfprintf_r+0x2d4>
400dc9ed:	042877        	blt	a8, a7, 400dc9f5 <_svfprintf_r+0x2d1>
400dc9f0:	472c      	movi.n	a7, 36
400dc9f2:	1a6372        	s32i	a7, a3, 104
400dc9f5:	9c2172        	l32i	a7, a1, 0x270
400dc9f8:	9e2132        	l32i	a3, a1, 0x278
400dc9fb:	373a      	add.n	a3, a7, a3
400dc9fd:	fcc332        	addi	a3, a3, -4
400dca00:	0338      	l32i.n	a3, a3, 0
400dca02:	ac6132        	s32i	a3, a1, 0x2b0
400dca05:	ac2192        	l32i	a9, a1, 0x2b0
400dca08:	067d      	mov.n	a7, a6
400dca0a:	e6c9d6        	bgez	a9, 400dc87a <_svfprintf_r+0x156>
400dca0d:	609090        	neg	a9, a9
400dca10:	ac6192        	s32i	a9, a1, 0x2b0
400dca13:	430c      	movi.n	a3, 4
400dca15:	006d46        	j	400dcbce <_svfprintf_r+0x4aa>
400dca18:	10c182        	addi	a8, a1, 16
400dca1b:	b62c      	movi.n	a6, 43
400dca1d:	02d832        	addmi	a3, a8, 0x200
400dca20:	524362        	s8i	a6, a3, 82
400dca23:	ff94c6        	j	400dc87a <_svfprintf_r+0x156>
400dca26:	a82192        	l32i	a9, a1, 0x2a0
400dca29:	000962        	l8ui	a6, a9, 0
400dca2c:	391b      	addi.n	a3, a9, 1
400dca2e:	a66162        	s32i	a6, a1, 0x298
400dca31:	0416b7        	beq	a6, a11, 400dca39 <_svfprintf_r+0x315>
400dca34:	060c      	movi.n	a6, 0
400dca36:	004706        	j	400dcb56 <_svfprintf_r+0x432>
400dca39:	a82182        	l32i	a8, a1, 0x2a0
400dca3c:	010862        	l8ui	a6, a8, 1
400dca3f:	980c      	movi.n	a8, 9
400dca41:	d0c692        	addi	a9, a6, -48
400dca44:	02b897        	bgeu	a8, a9, 400dca4a <_svfprintf_r+0x326>
400dca47:	0b7246        	j	400df814 <_svfprintf_r+0x30f0>
400dca4a:	a82192        	l32i	a9, a1, 0x2a0
400dca4d:	0a0c      	movi.n	a10, 0
400dca4f:	992b      	addi.n	a9, a9, 2
400dca51:	a86192        	s32i	a9, a1, 0x2a0
400dca54:	d0c662        	addi	a6, a6, -48
400dca57:	a0aaa0        	addx4	a10, a10, a10
400dca5a:	90aa60        	addx2	a10, a10, a6
400dca5d:	a82162        	l32i	a6, a1, 0x2a0
400dca60:	661b      	addi.n	a6, a6, 1
400dca62:	a86162        	s32i	a6, a1, 0x2a0
400dca65:	660b      	addi.n	a6, a6, -1
400dca67:	000662        	l8ui	a6, a6, 0
400dca6a:	d0c692        	addi	a9, a6, -48
400dca6d:	e3b897        	bgeu	a8, a9, 400dca54 <_svfprintf_r+0x330>
400dca70:	482c      	movi.n	a8, 36
400dca72:	021687        	beq	a6, a8, 400dca78 <_svfprintf_r+0x354>
400dca75:	ff7f06        	j	400dc875 <_svfprintf_r+0x151>
400dca78:	032c      	movi.n	a3, 32
400dca7a:	02a3a7        	bge	a3, a10, 400dca80 <_svfprintf_r+0x35c>
400dca7d:	0b5b06        	j	400df7ed <_svfprintf_r+0x30c9>
400dca80:	972132        	l32i	a3, a1, 0x25c
400dca83:	aa0b      	addi.n	a10, a10, -1
400dca85:	08aa37        	bge	a10, a3, 400dca91 <_svfprintf_r+0x36d>
400dca88:	10c182        	addi	a8, a1, 16
400dca8b:	b0aa80        	addx8	a10, a10, a8
400dca8e:	0006c6        	j	400dcaad <_svfprintf_r+0x389>
400dca91:	10c192        	addi	a9, a1, 16
400dca94:	48a232        	movi	a3, 0x248
400dca97:	393a      	add.n	a3, a9, a3
400dca99:	60a2c2        	movi	a12, 0x260
400dca9c:	a221d2        	l32i	a13, a1, 0x288
400dca9f:	0139      	s32i.n	a3, a1, 0
400dcaa1:	01d9f2        	addmi	a15, a9, 0x100
400dcaa4:	09ed      	mov.n	a14, a9
400dcaa6:	c9ca      	add.n	a12, a9, a12
400dcaa8:	05bd      	mov.n	a11, a5
400dcaaa:	ff7fa5        	call8	400dc2a4 <get_arg$isra$0>
400dcaad:	0aa8      	l32i.n	a10, a10, 0
400dcaaf:	a561a2        	s32i	a10, a1, 0x294
400dcab2:	002106        	j	400dcb3a <_svfprintf_r+0x416>
400dcab5:	10c1a2        	addi	a10, a1, 16
400dcab8:	b062a0        	addx8	a6, a2, a10
400dcabb:	001c46        	j	400dcb30 <_svfprintf_r+0x40c>
400dcabe:	f71c      	movi.n	a7, 31
400dcac0:	402767        	blt	a7, a6, 400dcb04 <_svfprintf_r+0x3e0>
400dcac3:	761b      	addi.n	a7, a6, 1
400dcac5:	10c1e2        	addi	a14, a1, 16
400dcac8:	976172        	s32i	a7, a1, 0x25c
400dcacb:	02de72        	addmi	a7, a14, 0x200
400dcace:	1a2792        	l32i	a9, a7, 104
400dcad1:	8a1c      	movi.n	a10, 24
400dcad3:	b94b      	addi.n	a11, a9, 4
400dcad5:	1a67b2        	s32i	a11, a7, 104
400dcad8:	052ab7        	blt	a10, a11, 400dcae1 <_svfprintf_r+0x3bd>
400dcadb:	192792        	l32i	a9, a7, 100
400dcade:	000286        	j	400dcaec <_svfprintf_r+0x3c8>
400dcae1:	042a97        	blt	a10, a9, 400dcae9 <_svfprintf_r+0x3c5>
400dcae4:	492c      	movi.n	a9, 36
400dcae6:	1a6792        	s32i	a9, a7, 104
400dcae9:	9c2192        	l32i	a9, a1, 0x270
400dcaec:	9e2172        	l32i	a7, a1, 0x278
400dcaef:	10c1a2        	addi	a10, a1, 16
400dcaf2:	797a      	add.n	a7, a9, a7
400dcaf4:	fcc772        	addi	a7, a7, -4
400dcaf7:	0798      	l32i.n	a9, a7, 0
400dcaf9:	b066a0        	addx8	a6, a6, a10
400dcafc:	a56192        	s32i	a9, a1, 0x294
400dcaff:	0699      	s32i.n	a9, a6, 0
400dcb01:	000c06        	j	400dcb35 <_svfprintf_r+0x411>
400dcb04:	10c1e2        	addi	a14, a1, 16
400dcb07:	02de62        	addmi	a6, a14, 0x200
400dcb0a:	1a2672        	l32i	a7, a6, 104
400dcb0d:	891c      	movi.n	a9, 24
400dcb0f:	a74b      	addi.n	a10, a7, 4
400dcb11:	1a66a2        	s32i	a10, a6, 104
400dcb14:	0529a7        	blt	a9, a10, 400dcb1d <_svfprintf_r+0x3f9>
400dcb17:	192672        	l32i	a7, a6, 100
400dcb1a:	000286        	j	400dcb28 <_svfprintf_r+0x404>
400dcb1d:	042977        	blt	a9, a7, 400dcb25 <_svfprintf_r+0x401>
400dcb20:	472c      	movi.n	a7, 36
400dcb22:	1a6672        	s32i	a7, a6, 104
400dcb25:	9c2172        	l32i	a7, a1, 0x270
400dcb28:	9e2162        	l32i	a6, a1, 0x278
400dcb2b:	676a      	add.n	a6, a7, a6
400dcb2d:	fcc662        	addi	a6, a6, -4
400dcb30:	0668      	l32i.n	a6, a6, 0
400dcb32:	a56162        	s32i	a6, a1, 0x294
400dcb35:	a86132        	s32i	a3, a1, 0x2a0
400dcb38:	087d      	mov.n	a7, a8
400dcb3a:	a52162        	l32i	a6, a1, 0x294
400dcb3d:	f37c      	movi.n	a3, -1
400dcb3f:	536630        	max	a6, a6, a3
400dcb42:	a56162        	s32i	a6, a1, 0x294
400dcb45:	ff4c46        	j	400dc87a <_svfprintf_r+0x156>
400dcb48:	a06660        	addx4	a6, a6, a6
400dcb4b:	906690        	addx2	a6, a6, a9
400dcb4e:	000392        	l8ui	a9, a3, 0
400dcb51:	331b      	addi.n	a3, a3, 1
400dcb53:	a66192        	s32i	a9, a1, 0x298
400dcb56:	a621e2        	l32i	a14, a1, 0x298
400dcb59:	a86132        	s32i	a3, a1, 0x2a0
400dcb5c:	d0ce92        	addi	a9, a14, -48
400dcb5f:	e5b897        	bgeu	a8, a9, 400dcb48 <_svfprintf_r+0x424>
400dcb62:	5366c0        	max	a6, a6, a12
400dcb65:	a56162        	s32i	a6, a1, 0x294
400dcb68:	ac2132        	l32i	a3, a1, 0x2b0
400dcb6b:	ff4a46        	j	400dc898 <_svfprintf_r+0x174>
400dcb6e:	80a032        	movi	a3, 128
400dcb71:	001646        	j	400dcbce <_svfprintf_r+0x4aa>
400dcb74:	030c      	movi.n	a3, 0
400dcb76:	a62192        	l32i	a9, a1, 0x298
400dcb79:	a03330        	addx4	a3, a3, a3
400dcb7c:	d0c962        	addi	a6, a9, -48
400dcb7f:	903360        	addx2	a3, a3, a6
400dcb82:	a82162        	l32i	a6, a1, 0x2a0
400dcb85:	661b      	addi.n	a6, a6, 1
400dcb87:	a86162        	s32i	a6, a1, 0x2a0
400dcb8a:	660b      	addi.n	a6, a6, -1
400dcb8c:	000662        	l8ui	a6, a6, 0
400dcb8f:	a66162        	s32i	a6, a1, 0x298
400dcb92:	d0c662        	addi	a6, a6, -48
400dcb95:	ddb867        	bgeu	a8, a6, 400dcb76 <_svfprintf_r+0x452>
400dcb98:	a62192        	l32i	a9, a1, 0x298
400dcb9b:	0219a7        	beq	a9, a10, 400dcba1 <_svfprintf_r+0x47d>
400dcb9e:	ff3d86        	j	400dc898 <_svfprintf_r+0x174>
400dcba1:	022c      	movi.n	a2, 32
400dcba3:	02a237        	bge	a2, a3, 400dcba9 <_svfprintf_r+0x485>
400dcba6:	0b10c6        	j	400df7ed <_svfprintf_r+0x30c9>
400dcba9:	230b      	addi.n	a2, a3, -1
400dcbab:	140c      	movi.n	a4, 1
400dcbad:	ff3246        	j	400dc87a <_svfprintf_r+0x156>
400dcbb0:	830c      	movi.n	a3, 8
400dcbb2:	000606        	j	400dcbce <_svfprintf_r+0x4aa>
400dcbb5:	a82182        	l32i	a8, a1, 0x2a0
400dcbb8:	68a032        	movi	a3, 104
400dcbbb:	000862        	l8ui	a6, a8, 0
400dcbbe:	0a9637        	bne	a6, a3, 400dcbcc <_svfprintf_r+0x4a8>
400dcbc1:	881b      	addi.n	a8, a8, 1
400dcbc3:	a86182        	s32i	a8, a1, 0x2a0
400dcbc6:	00a232        	movi	a3, 0x200
400dcbc9:	000dc6        	j	400dcc04 <_svfprintf_r+0x4e0>
400dcbcc:	034c      	movi.n	a3, 64
400dcbce:	a02162        	l32i	a6, a1, 0x280
400dcbd1:	206630        	or	a6, a6, a3
400dcbd4:	a06162        	s32i	a6, a1, 0x280
400dcbd7:	ff27c6        	j	400dc87a <_svfprintf_r+0x156>
400dcbda:	a82182        	l32i	a8, a1, 0x2a0
400dcbdd:	6ca032        	movi	a3, 108
400dcbe0:	000862        	l8ui	a6, a8, 0
400dcbe3:	079637        	bne	a6, a3, 400dcbee <_svfprintf_r+0x4ca>
400dcbe6:	881b      	addi.n	a8, a8, 1
400dcbe8:	a86182        	s32i	a8, a1, 0x2a0
400dcbeb:	0004c6        	j	400dcc02 <_svfprintf_r+0x4de>
400dcbee:	031c      	movi.n	a3, 16
400dcbf0:	fff686        	j	400dcbce <_svfprintf_r+0x4aa>
400dcbf3:	032c00        	lsi	f0, a12, 12
400dcbf6:	a02182        	l32i	a8, a1, 0x280
400dcbf9:	208830        	or	a8, a8, a3
400dcbfc:	a06182        	s32i	a8, a1, 0x280
400dcbff:	ff1dc6        	j	400dc87a <_svfprintf_r+0x156>
400dcc02:	032c      	movi.n	a3, 32
400dcc04:	a02192        	l32i	a9, a1, 0x280
400dcc07:	209930        	or	a9, a9, a3
400dcc0a:	a06192        	s32i	a9, a1, 0x280
400dcc0d:	ff1a46        	j	400dc87a <_svfprintf_r+0x156>
400dcc10:	972132        	l32i	a3, a1, 0x25c
400dcc13:	54bc      	beqz.n	a4, 400dcc4c <_svfprintf_r+0x528>
400dcc15:	0ba237        	bge	a2, a3, 400dcc24 <_svfprintf_r+0x500>
400dcc18:	10c1a2        	addi	a10, a1, 16
400dcc1b:	b022a0        	addx8	a2, a2, a10
400dcc1e:	000222        	l8ui	a2, a2, 0
400dcc21:	000886        	j	400dcc47 <_svfprintf_r+0x523>
400dcc24:	10c1e2        	addi	a14, a1, 16
400dcc27:	48a232        	movi	a3, 0x248
400dcc2a:	3e3a      	add.n	a3, a14, a3
400dcc2c:	4ca2d2        	movi	a13, 0x24c
400dcc2f:	60a2c2        	movi	a12, 0x260
400dcc32:	02ad      	mov.n	a10, a2
400dcc34:	0139      	s32i.n	a3, a1, 0
400dcc36:	01def2        	addmi	a15, a14, 0x100
400dcc39:	deda      	add.n	a13, a14, a13
400dcc3b:	80cec0        	add	a12, a14, a12
400dcc3e:	20b550        	or	a11, a5, a5
400dcc41:	ff6625        	call8	400dc2a4 <get_arg$isra$0>
400dcc44:	000a22        	l8ui	a2, a10, 0
400dcc47:	074d      	mov.n	a4, a7
400dcc49:	002086        	j	400dcccf <_svfprintf_r+0x5ab>
400dcc4c:	471b      	addi.n	a4, a7, 1
400dcc4e:	08a737        	bge	a7, a3, 400dcc5a <_svfprintf_r+0x536>
400dcc51:	10c132        	addi	a3, a1, 16
400dcc54:	b02230        	addx8	a2, a2, a3
400dcc57:	001c46        	j	400dcccc <_svfprintf_r+0x5a8>
400dcc5a:	f21c      	movi.n	a2, 31
400dcc5c:	402237        	blt	a2, a3, 400dcca0 <_svfprintf_r+0x57c>
400dcc5f:	231b      	addi.n	a2, a3, 1
400dcc61:	10c152        	addi	a5, a1, 16
400dcc64:	976122        	s32i	a2, a1, 0x25c
400dcc67:	02d522        	addmi	a2, a5, 0x200
400dcc6a:	1a2252        	l32i	a5, a2, 104
400dcc6d:	861c      	movi.n	a6, 24
400dcc6f:	754b      	addi.n	a7, a5, 4
400dcc71:	1a6272        	s32i	a7, a2, 104
400dcc74:	052677        	blt	a6, a7, 400dcc7d <_svfprintf_r+0x559>
400dcc77:	192252        	l32i	a5, a2, 100
400dcc7a:	000286        	j	400dcc88 <_svfprintf_r+0x564>
400dcc7d:	042657        	blt	a6, a5, 400dcc85 <_svfprintf_r+0x561>
400dcc80:	452c      	movi.n	a5, 36
400dcc82:	1a6252        	s32i	a5, a2, 104
400dcc85:	9c2152        	l32i	a5, a1, 0x270
400dcc88:	9e2122        	l32i	a2, a1, 0x278
400dcc8b:	10c162        	addi	a6, a1, 16
400dcc8e:	252a      	add.n	a2, a5, a2
400dcc90:	fcc222        	addi	a2, a2, -4
400dcc93:	0228      	l32i.n	a2, a2, 0
400dcc95:	b03360        	addx8	a3, a3, a6
400dcc98:	0329      	s32i.n	a2, a3, 0
400dcc9a:	742020        	extui	a2, a2, 0, 8
400dcc9d:	000b86        	j	400dcccf <_svfprintf_r+0x5ab>
400dcca0:	10c182        	addi	a8, a1, 16
400dcca3:	02d822        	addmi	a2, a8, 0x200
400dcca6:	1a2232        	l32i	a3, a2, 104
400dcca9:	851c      	movi.n	a5, 24
400dccab:	634b      	addi.n	a6, a3, 4
400dccad:	1a6262        	s32i	a6, a2, 104
400dccb0:	052567        	blt	a5, a6, 400dccb9 <_svfprintf_r+0x595>
400dccb3:	192232        	l32i	a3, a2, 100
400dccb6:	000286        	j	400dccc4 <_svfprintf_r+0x5a0>
400dccb9:	042537        	blt	a5, a3, 400dccc1 <_svfprintf_r+0x59d>
400dccbc:	432c      	movi.n	a3, 36
400dccbe:	1a6232        	s32i	a3, a2, 104
400dccc1:	9c2132        	l32i	a3, a1, 0x270
400dccc4:	9e2122        	l32i	a2, a1, 0x278
400dccc7:	232a      	add.n	a2, a3, a2
400dccc9:	fcc222        	addi	a2, a2, -4
400dcccc:	000222        	l8ui	a2, a2, 0
400dcccf:	10c192        	addi	a9, a1, 16
400dccd2:	01d932        	addmi	a3, a9, 0x100
400dccd5:	804322        	s8i	a2, a3, 128
400dccd8:	030c      	movi.n	a3, 0
400dccda:	02d922        	addmi	a2, a9, 0x200
400dccdd:	524232        	s8i	a3, a2, 82
400dcce0:	020c      	movi.n	a2, 0
400dcce2:	130c      	movi.n	a3, 1
400dcce4:	a56132        	s32i	a3, a1, 0x294
400dcce7:	047d      	mov.n	a7, a4
400dcce9:	a26122        	s32i	a2, a1, 0x288
400dccec:	026d      	mov.n	a6, a2
400dccee:	023d      	mov.n	a3, a2
400dccf0:	025d      	mov.n	a5, a2
400dccf2:	079d46        	j	400deb6b <_svfprintf_r+0x2447>
400dccf5:	920000        	lsi	f0, a0, 0x248
400dccf8:	1ca021        	l32r	a2, 400a3f78 <_iram_end+0x16424>
400dccfb:	993003        	lsi	f0, a0, 0x264
400dccfe:	619220        	lsi	f2, a2, 0x184
400dcd01:	2132a0        	srai	a3, a10, 2
400dcd04:	e357a0        	lsi	f10, a7, 0x38c
400dcd07:	358602        	lsi	f0, a6, 212
400dcd0a:	218200        	srai	a8, a0, 2
400dcd0d:	74bc97        	bgeu	a12, a9, 400dcd85 <_svfprintf_r+0x661>
400dcd10:	0ca287        	bge	a2, a8, 400dcd20 <_svfprintf_r+0x5fc>
400dcd13:	10c142        	addi	a4, a1, 16
400dcd16:	b02240        	addx8	a2, a2, a4
400dcd19:	0258      	l32i.n	a5, a2, 0
400dcd1b:	1238      	l32i.n	a3, a2, 4
400dcd1d:	0008c6        	j	400dcd44 <_svfprintf_r+0x620>
400dcd20:	10c162        	addi	a6, a1, 16
400dcd23:	48a232        	movi	a3, 0x248
400dcd26:	363a      	add.n	a3, a6, a3
400dcd28:	4ca2d2        	movi	a13, 0x24c
400dcd2b:	60a2c2        	movi	a12, 0x260
400dcd2e:	0139      	s32i.n	a3, a1, 0
400dcd30:	05bd      	mov.n	a11, a5
400dcd32:	01d6f2        	addmi	a15, a6, 0x100
400dcd35:	06ed      	mov.n	a14, a6
400dcd37:	d6da      	add.n	a13, a6, a13
400dcd39:	c6ca      	add.n	a12, a6, a12
400dcd3b:	02ad      	mov.n	a10, a2
400dcd3d:	ff5665        	call8	400dc2a4 <get_arg$isra$0>
400dcd40:	0a58      	l32i.n	a5, a10, 0
400dcd42:	1a38      	l32i.n	a3, a10, 4
400dcd44:	074d      	mov.n	a4, a7
400dcd46:	00dbc6        	j	400dd0b9 <_svfprintf_r+0x995>
400dcd49:	471b      	addi.n	a4, a7, 1
400dcd4b:	09a787        	bge	a7, a8, 400dcd58 <_svfprintf_r+0x634>
400dcd4e:	10c182        	addi	a8, a1, 16
400dcd51:	b02280        	addx8	a2, a2, a8
400dcd54:	0020c6        	j	400dcddb <_svfprintf_r+0x6b7>
400dcd57:	f21c00        	rems	a1, a12, a0
400dcd5a:	4a2287        	blt	a2, a8, 400dcda8 <_svfprintf_r+0x684>
400dcd5d:	281b      	addi.n	a2, a8, 1
400dcd5f:	10c192        	addi	a9, a1, 16
400dcd62:	976122        	s32i	a2, a1, 0x25c
400dcd65:	02d922        	addmi	a2, a9, 0x200
400dcd68:	1a2232        	l32i	a3, a2, 104
400dcd6b:	537b      	addi.n	a5, a3, 7
400dcd6d:	837c      	movi.n	a3, -8
400dcd6f:	103530        	and	a3, a5, a3
400dcd72:	638b      	addi.n	a6, a3, 8
400dcd74:	1a6262        	s32i	a6, a2, 104
400dcd77:	851c      	movi.n	a5, 24
400dcd79:	072567        	blt	a5, a6, 400dcd84 <_svfprintf_r+0x660>
400dcd7c:	192232        	l32i	a3, a2, 100
400dcd7f:	000306        	j	400dcd8f <_svfprintf_r+0x66b>
400dcd82:	370000        	lsi	f0, a0, 220
400dcd85:	2c0425        	call8	40108dc8 <_etext+0x1c4eb>
400dcd88:	623283        	lsi	f8, a2, 0x188
400dcd8b:	321a      	add.n	a3, a2, a1
400dcd8d:	229c21        	l32r	a2, 400a5800 <_iram_end+0x17cac>
400dcd90:	a29e21        	l32r	a2, 400c5808 <_rtc_text_end+0x5808>
400dcd93:	2a10c1        	l32r	a12, 400a75d4 <_iram_end+0x19a80>
400dcd96:	c22223        	lsi	f2, a2, 0x308
400dcd99:	58f8      	l32i.n	a15, a8, 20
400dcd9b:	123802        	lsi	f0, a8, 72
400dcd9e:	b028a0        	addx8	a2, a8, a10
400dcda1:	0259      	s32i.n	a5, a2, 0
400dcda3:	1239      	s32i.n	a3, a2, 4
400dcda5:	00c406        	j	400dd0b9 <_svfprintf_r+0x995>
400dcda8:	10c1e2        	addi	a14, a1, 16
400dcdab:	02de22        	addmi	a2, a14, 0x200
400dcdae:	1a2232        	l32i	a3, a2, 104
400dcdb1:	537b      	addi.n	a5, a3, 7
400dcdb3:	837c      	movi.n	a3, -8
400dcdb5:	103530        	and	a3, a5, a3
400dcdb8:	638b      	addi.n	a6, a3, 8
400dcdba:	1a6262        	s32i	a6, a2, 104
400dcdbd:	851c      	movi.n	a5, 24
400dcdbf:	052567        	blt	a5, a6, 400dcdc8 <_svfprintf_r+0x6a4>
400dcdc2:	192232        	l32i	a3, a2, 100
400dcdc5:	000286        	j	400dcdd3 <_svfprintf_r+0x6af>
400dcdc8:	042537        	blt	a5, a3, 400dcdd0 <_svfprintf_r+0x6ac>
400dcdcb:	832c      	movi.n	a3, 40
400dcdcd:	1a6232        	s32i	a3, a2, 104
400dcdd0:	9c2132        	l32i	a3, a1, 0x270
400dcdd3:	9e2122        	l32i	a2, a1, 0x278
400dcdd6:	232a      	add.n	a2, a3, a2
400dcdd8:	f8c222        	addi	a2, a2, -8
400dcddb:	0258      	l32i.n	a5, a2, 0
400dcddd:	1238      	l32i.n	a3, a2, 4
400dcddf:	00b586        	j	400dd0b9 <_svfprintf_r+0x995>
400dcde2:	a02132        	l32i	a3, a1, 0x280
400dcde5:	7c6347        	bbci	a3, 4, 400dce65 <_svfprintf_r+0x741>
400dcde8:	972162        	l32i	a6, a1, 0x25c
400dcdeb:	d49c      	beqz.n	a4, 400dce0c <_svfprintf_r+0x6e8>
400dcded:	08a267        	bge	a2, a6, 400dcdf9 <_svfprintf_r+0x6d5>
400dcdf0:	10c142        	addi	a4, a1, 16
400dcdf3:	b02240        	addx8	a2, a2, a4
400dcdf6:	008486        	j	400dd00c <_svfprintf_r+0x8e8>
400dcdf9:	10c162        	addi	a6, a1, 16
400dcdfc:	48a232        	movi	a3, 0x248
400dcdff:	363a      	add.n	a3, a6, a3
400dce01:	0139      	s32i.n	a3, a1, 0
400dce03:	01d6f2        	addmi	a15, a6, 0x100
400dce06:	06ed      	mov.n	a14, a6
400dce08:	008506        	j	400dd020 <_svfprintf_r+0x8fc>
400dce0b:	c18200        	mul16u	a8, a2, a0
400dce0e:	471b10        	lsi	f1, a11, 0x11c
400dce11:	b02280        	addx8	a2, a2, a8
400dce14:	02a767        	bge	a7, a6, 400dce1a <_svfprintf_r+0x6f6>
400dce17:	00a646        	j	400dd0b4 <_svfprintf_r+0x990>
400dce1a:	f21c      	movi.n	a2, 31
400dce1c:	3c2267        	blt	a2, a6, 400dce5c <_svfprintf_r+0x738>
400dce1f:	261b      	addi.n	a2, a6, 1
400dce21:	10c192        	addi	a9, a1, 16
400dce24:	976122        	s32i	a2, a1, 0x25c
400dce27:	02d922        	addmi	a2, a9, 0x200
400dce2a:	1a2232        	l32i	a3, a2, 104
400dce2d:	851c      	movi.n	a5, 24
400dce2f:	734b      	addi.n	a7, a3, 4
400dce31:	1a6272        	s32i	a7, a2, 104
400dce34:	052577        	blt	a5, a7, 400dce3d <_svfprintf_r+0x719>
400dce37:	192222        	l32i	a2, a2, 100
400dce3a:	000286        	j	400dce48 <_svfprintf_r+0x724>
400dce3d:	042537        	blt	a5, a3, 400dce45 <_svfprintf_r+0x721>
400dce40:	432c      	movi.n	a3, 36
400dce42:	1a6232        	s32i	a3, a2, 104
400dce45:	9c2122        	l32i	a2, a1, 0x270
400dce48:	9e2132        	l32i	a3, a1, 0x278
400dce4b:	10c1a2        	addi	a10, a1, 16
400dce4e:	323a      	add.n	a3, a2, a3
400dce50:	fcc332        	addi	a3, a3, -4
400dce53:	0358      	l32i.n	a5, a3, 0
400dce55:	b026a0        	addx8	a2, a6, a10
400dce58:	0089c6        	j	400dd083 <_svfprintf_r+0x95f>
400dce5b:	c1e200        	mul16u	a14, a2, a0
400dce5e:	de2210        	f64iter	a2, a2, a1, 1, 1
400dce61:	8a0602        	l8ui	a0, a6, 138
400dce64:	213200        	srai	a3, a0, 2
400dce67:	e367a0        	lsi	f10, a7, 0x38c
400dce6a:	30c602        	addi	a0, a6, 48
400dce6d:	216200        	srai	a6, a0, 2
400dce70:	74bc97        	bgeu	a12, a9, 400dcee8 <_svfprintf_r+0x7c4>
400dce73:	0da267        	bge	a2, a6, 400dce84 <_svfprintf_r+0x760>
400dce76:	10c142        	addi	a4, a1, 16
400dce79:	b02240        	addx8	a2, a2, a4
400dce7c:	009252        	l16si	a5, a2, 0
400dce7f:	006c06        	j	400dd033 <_svfprintf_r+0x90f>
400dce82:	620000        	lsi	f0, a0, 0x188
400dce85:	3210c1        	l32r	a12, 400a96c8 <_iram_end+0x1bb74>
400dce88:	3a48a2        	s8i	a10, a8, 58
400dce8b:	a2d236        	entry	a2, 0x5168
400dce8e:	c24c      	movi.n	a2, 76
400dce90:	bd60a2        	s32i	a10, a0, 0x2f4
400dce93:	013905        	call0	400de224 <_svfprintf_r+0x1b00>
400dce96:	01d6f2        	addmi	a15, a6, 0x100
400dce99:	06ed      	mov.n	a14, a6
400dce9b:	d6da      	add.n	a13, a6, a13
400dce9d:	c6ca      	add.n	a12, a6, a12
400dce9f:	02ad      	mov.n	a10, a2
400dcea1:	ff4025        	call8	400dc2a4 <get_arg$isra$0>
400dcea4:	009a52        	l16si	a5, a10, 0
400dcea7:	006206        	j	400dd033 <_svfprintf_r+0x90f>
400dceaa:	820000        	mull	a0, a0, a0
400dcead:	1b10c1        	l32r	a12, 400a3af0 <_iram_end+0x15f9c>
400dceb0:	228047        	bany	a0, a4, 400dced6 <_svfprintf_r+0x7b2>
400dceb3:	2767b0        	lsi	f11, a7, 156
400dceb6:	f21c74        	lsi	f7, a12, 0x3c8
400dceb9:	432267        	blt	a2, a6, 400dcf00 <_svfprintf_r+0x7dc>
400dcebc:	261b      	addi.n	a2, a6, 1
400dcebe:	10c192        	addi	a9, a1, 16
400dcec1:	976122        	s32i	a2, a1, 0x25c
400dcec4:	02d922        	addmi	a2, a9, 0x200
400dcec7:	1a2232        	l32i	a3, a2, 104
400dceca:	851c      	movi.n	a5, 24
400dcecc:	734b      	addi.n	a7, a3, 4
400dcece:	1a6272        	s32i	a7, a2, 104
400dced1:	072577        	blt	a5, a7, 400dcedc <_svfprintf_r+0x7b8>
400dced4:	192222        	l32i	a2, a2, 100
400dced7:	000306        	j	400dcee7 <_svfprintf_r+0x7c3>
400dceda:	370000        	lsi	f0, a0, 220
400dcedd:	2c0425        	call8	40108f20 <_etext+0x1c643>
400dcee0:	623243        	lsi	f4, a2, 0x188
400dcee3:	221a      	add.n	a2, a2, a1
400dcee5:	329c21        	l32r	a2, 400a9958 <_iram_end+0x1be04>
400dcee8:	a29e21        	l32r	a2, 400c5960 <_rtc_text_end+0x5960>
400dceeb:	3a10c1        	l32r	a12, 400ab72c <_iram_end+0x1dbd8>
400dceee:	c33232        	lsi	f3, a2, 0x30c
400dcef1:	58fc      	bnez.n	a8, 400dcf2a <_svfprintf_r+0x806>
400dcef3:	26a003        	lsi	f0, a0, 152
400dcef6:	0259b0        	andb	b5, b9, b11
400dcef9:	235580        	sext	a5, a5, 15
400dcefc:	006d86        	j	400dd0b6 <_svfprintf_r+0x992>
400dceff:	c1e200        	mul16u	a14, a2, a0
400dcf02:	de2210        	f64iter	a2, a2, a1, 1, 1
400dcf05:	223202        	lsi	f0, a2, 136
400dcf08:	1c1a      	add.n	a1, a12, a1
400dcf0a:	634b85        	call0	401403c4 <_etext+0x53ae7>
400dcf0d:	1a6262        	s32i	a6, a2, 104
400dcf10:	052567        	blt	a5, a6, 400dcf19 <_svfprintf_r+0x7f5>
400dcf13:	192232        	l32i	a3, a2, 100
400dcf16:	000286        	j	400dcf24 <_svfprintf_r+0x800>
400dcf19:	042537        	blt	a5, a3, 400dcf21 <_svfprintf_r+0x7fd>
400dcf1c:	432c      	movi.n	a3, 36
400dcf1e:	1a6232        	s32i	a3, a2, 104
400dcf21:	9c2132        	l32i	a3, a1, 0x270
400dcf24:	9e2122        	l32i	a2, a1, 0x278
400dcf27:	232a      	add.n	a2, a3, a2
400dcf29:	fcc222        	addi	a2, a2, -4
400dcf2c:	009252        	l16si	a5, a2, 0
400dcf2f:	0060c6        	j	400dd0b6 <_svfprintf_r+0x992>
400dcf32:	a02162        	l32i	a6, a1, 0x280
400dcf35:	972132        	l32i	a3, a1, 0x25c
400dcf38:	02e697        	bbsi	a6, 9, 400dcf3e <_svfprintf_r+0x81a>
400dcf3b:	003086        	j	400dd001 <_svfprintf_r+0x8dd>
400dcf3e:	64bc      	beqz.n	a4, 400dcf78 <_svfprintf_r+0x854>
400dcf40:	0ca237        	bge	a2, a3, 400dcf50 <_svfprintf_r+0x82c>
400dcf43:	10c182        	addi	a8, a1, 16
400dcf46:	b02280        	addx8	a2, a2, a8
400dcf49:	000252        	l8ui	a5, a2, 0
400dcf4c:	0008c6        	j	400dcf73 <_svfprintf_r+0x84f>
400dcf4f:	c19200        	mul16u	a9, a2, a0
400dcf52:	a23210        	muluh	a3, a2, a1
400dcf55:	3a48      	l32i.n	a4, a10, 12
400dcf57:	d239      	s32i.n	a3, a2, 52
400dcf59:	c24ca2        	s8i	a10, a12, 194
400dcf5c:	bd60a2        	s32i	a10, a0, 0x2f4
400dcf5f:	013905        	call0	400de2f0 <_svfprintf_r+0x1bcc>
400dcf62:	01d9f2        	addmi	a15, a9, 0x100
400dcf65:	09ed      	mov.n	a14, a9
400dcf67:	d9da      	add.n	a13, a9, a13
400dcf69:	c9ca      	add.n	a12, a9, a12
400dcf6b:	02ad      	mov.n	a10, a2
400dcf6d:	ff3365        	call8	400dc2a4 <get_arg$isra$0>
400dcf70:	000a52        	l8ui	a5, a10, 0
400dcf73:	074d      	mov.n	a4, a7
400dcf75:	002086        	j	400dcffb <_svfprintf_r+0x8d7>
400dcf78:	10c1a2        	addi	a10, a1, 16
400dcf7b:	471b      	addi.n	a4, a7, 1
400dcf7d:	b022a0        	addx8	a2, a2, a10
400dcf80:	742737        	blt	a7, a3, 400dcff8 <_svfprintf_r+0x8d4>
400dcf83:	f21c      	movi.n	a2, 31
400dcf85:	432237        	blt	a2, a3, 400dcfcc <_svfprintf_r+0x8a8>
400dcf88:	231b      	addi.n	a2, a3, 1
400dcf8a:	10c1e2        	addi	a14, a1, 16
400dcf8d:	976122        	s32i	a2, a1, 0x25c
400dcf90:	02de22        	addmi	a2, a14, 0x200
400dcf93:	1a2252        	l32i	a5, a2, 104
400dcf96:	861c      	movi.n	a6, 24
400dcf98:	754b      	addi.n	a7, a5, 4
400dcf9a:	1a6272        	s32i	a7, a2, 104
400dcf9d:	072677        	blt	a6, a7, 400dcfa8 <_svfprintf_r+0x884>
400dcfa0:	192252        	l32i	a5, a2, 100
400dcfa3:	000306        	j	400dcfb3 <_svfprintf_r+0x88f>
400dcfa6:	570000        	lsi	f0, a0, 0x15c
400dcfa9:	2c0426        	beqi	a4, -1, 400dcfd9 <_svfprintf_r+0x8b5>
400dcfac:	625245        	call0	4013f4d4 <_etext+0x52bf7>
400dcfaf:	521a      	add.n	a5, a2, a1
400dcfb1:	229c21        	l32r	a2, 400a5a24 <_iram_end+0x17ed0>
400dcfb4:	629e21        	l32r	a2, 400b5a2c <_iram_end+0x27ed8>
400dcfb7:	2a10c1        	l32r	a12, 400a77f8 <_iram_end+0x19ca4>
400dcfba:	c22225        	call8	4009f1dc <_iram_end+0x11688>
400dcfbd:	58fc      	bnez.n	a8, 400dcff6 <_svfprintf_r+0x8d2>
400dcfbf:	236002        	s32i	a0, a0, 140
400dcfc2:	0259b0        	andb	b5, b9, b11
400dcfc5:	745050        	extui	a5, a5, 0, 8
400dcfc8:	000bc6        	j	400dcffb <_svfprintf_r+0x8d7>
400dcfcb:	c18200        	mul16u	a8, a2, a0
400dcfce:	d82210        	lsi	f1, a2, 0x360
400dcfd1:	223202        	lsi	f0, a2, 136
400dcfd4:	1c1a      	add.n	a1, a12, a1
400dcfd6:	634b85        	call0	40140490 <_etext+0x53bb3>
400dcfd9:	1a6262        	s32i	a6, a2, 104
400dcfdc:	052567        	blt	a5, a6, 400dcfe5 <_svfprintf_r+0x8c1>
400dcfdf:	192232        	l32i	a3, a2, 100
400dcfe2:	000286        	j	400dcff0 <_svfprintf_r+0x8cc>
400dcfe5:	042537        	blt	a5, a3, 400dcfed <_svfprintf_r+0x8c9>
400dcfe8:	432c      	movi.n	a3, 36
400dcfea:	1a6232        	s32i	a3, a2, 104
400dcfed:	9c2132        	l32i	a3, a1, 0x270
400dcff0:	9e2122        	l32i	a2, a1, 0x278
400dcff3:	232a      	add.n	a2, a3, a2
400dcff5:	fcc222        	addi	a2, a2, -4
400dcff8:	000252        	l8ui	a5, a2, 0
400dcffb:	235500        	sext	a5, a5, 7
400dcffe:	002d06        	j	400dd0b6 <_svfprintf_r+0x992>
400dd001:	34bc      	beqz.n	a4, 400dd038 <_svfprintf_r+0x914>
400dd003:	0aa237        	bge	a2, a3, 400dd011 <_svfprintf_r+0x8ed>
400dd006:	10c192        	addi	a9, a1, 16
400dd009:	b02290        	addx8	a2, a2, a9
400dd00c:	0258      	l32i.n	a5, a2, 0
400dd00e:	000846        	j	400dd033 <_svfprintf_r+0x90f>
400dd011:	10c1a2        	addi	a10, a1, 16
400dd014:	48a232        	movi	a3, 0x248
400dd017:	3a3a      	add.n	a3, a10, a3
400dd019:	0139      	s32i.n	a3, a1, 0
400dd01b:	01daf2        	addmi	a15, a10, 0x100
400dd01e:	0aed      	mov.n	a14, a10
400dd020:	4ca2d2        	movi	a13, 0x24c
400dd023:	60a2c2        	movi	a12, 0x260
400dd026:	05bd      	mov.n	a11, a5
400dd028:	deda      	add.n	a13, a14, a13
400dd02a:	ceca      	add.n	a12, a14, a12
400dd02c:	02ad      	mov.n	a10, a2
400dd02e:	ff2765        	call8	400dc2a4 <get_arg$isra$0>
400dd031:	0a58      	l32i.n	a5, a10, 0
400dd033:	074d      	mov.n	a4, a7
400dd035:	001f46        	j	400dd0b6 <_svfprintf_r+0x992>
400dd038:	10c1e2        	addi	a14, a1, 16
400dd03b:	471b      	addi.n	a4, a7, 1
400dd03d:	b022e0        	addx8	a2, a2, a14
400dd040:	702737        	blt	a7, a3, 400dd0b4 <_svfprintf_r+0x990>
400dd043:	f21c      	movi.n	a2, 31
400dd045:	3f2237        	blt	a2, a3, 400dd088 <_svfprintf_r+0x964>
400dd048:	231b      	addi.n	a2, a3, 1
400dd04a:	10c152        	addi	a5, a1, 16
400dd04d:	976122        	s32i	a2, a1, 0x25c
400dd050:	02d522        	addmi	a2, a5, 0x200
400dd053:	1a2252        	l32i	a5, a2, 104
400dd056:	861c      	movi.n	a6, 24
400dd058:	754b      	addi.n	a7, a5, 4
400dd05a:	1a6272        	s32i	a7, a2, 104
400dd05d:	072677        	blt	a6, a7, 400dd068 <_svfprintf_r+0x944>
400dd060:	192252        	l32i	a5, a2, 100
400dd063:	000306        	j	400dd073 <_svfprintf_r+0x94f>
400dd066:	570000        	lsi	f0, a0, 0x15c
400dd069:	2c0426        	beqi	a4, -1, 400dd099 <_svfprintf_r+0x975>
400dd06c:	625245        	call0	4013f594 <_etext+0x52cb7>
400dd06f:	521a      	add.n	a5, a2, a1
400dd071:	229c21        	l32r	a2, 400a5ae4 <_iram_end+0x17f90>
400dd074:	629e21        	l32r	a2, 400b5aec <_iram_end+0x27f98>
400dd077:	2a10c1        	l32r	a12, 400a78b8 <_iram_end+0x19d64>
400dd07a:	c22225        	call8	4009f29c <_iram_end+0x11748>
400dd07d:	58fc      	bnez.n	a8, 400dd0b6 <_svfprintf_r+0x992>
400dd07f:	236002        	s32i	a0, a0, 140
400dd082:	0259b0        	andb	b5, b9, b11
400dd085:	000b46        	j	400dd0b6 <_svfprintf_r+0x992>
400dd088:	10c182        	addi	a8, a1, 16
400dd08b:	02d822        	addmi	a2, a8, 0x200
400dd08e:	1a2232        	l32i	a3, a2, 104
400dd091:	851c      	movi.n	a5, 24
400dd093:	634b      	addi.n	a6, a3, 4
400dd095:	1a6262        	s32i	a6, a2, 104
400dd098:	052567        	blt	a5, a6, 400dd0a1 <_svfprintf_r+0x97d>
400dd09b:	192232        	l32i	a3, a2, 100
400dd09e:	000286        	j	400dd0ac <_svfprintf_r+0x988>
400dd0a1:	042537        	blt	a5, a3, 400dd0a9 <_svfprintf_r+0x985>
400dd0a4:	432c      	movi.n	a3, 36
400dd0a6:	1a6232        	s32i	a3, a2, 104
400dd0a9:	9c2132        	l32i	a3, a1, 0x270
400dd0ac:	9e2122        	l32i	a2, a1, 0x278
400dd0af:	232a      	add.n	a2, a3, a2
400dd0b1:	fcc222        	addi	a2, a2, -4
400dd0b4:	0258      	l32i.n	a5, a2, 0
400dd0b6:	313f50        	srai	a3, a5, 31
400dd0b9:	047d      	mov.n	a7, a4
400dd0bb:	120c      	movi.n	a2, 1
400dd0bd:	002396        	bltz	a3, 400dd0c3 <_svfprintf_r+0x99f>
400dd0c0:	062506        	j	400de958 <_svfprintf_r+0x2234>
400dd0c3:	605050        	neg	a5, a5
400dd0c6:	080c      	movi.n	a8, 0
400dd0c8:	938250        	movnez	a8, a2, a5
400dd0cb:	603030        	neg	a3, a3
400dd0ce:	10c192        	addi	a9, a1, 16
400dd0d1:	c03380        	sub	a3, a3, a8
400dd0d4:	d62c      	movi.n	a6, 45
400dd0d6:	02d942        	addmi	a4, a9, 0x200
400dd0d9:	061e06        	j	400de955 <_svfprintf_r+0x2231>
400dd0dc:	a02162        	l32i	a6, a1, 0x280
400dd0df:	972132        	l32i	a3, a1, 0x25c
400dd0e2:	0e6637        	bbci	a6, 3, 400dd0f4 <_svfprintf_r+0x9d0>
400dd0e5:	053416        	beqz	a4, 400dd13c <_svfprintf_r+0xa18>
400dd0e8:	21a237        	bge	a2, a3, 400dd10d <_svfprintf_r+0x9e9>
400dd0eb:	10c182        	addi	a8, a1, 16
400dd0ee:	b02280        	addx8	a2, a2, a8
400dd0f1:	0002c6        	j	400dd100 <_svfprintf_r+0x9dc>
400dd0f4:	044416        	beqz	a4, 400dd13c <_svfprintf_r+0xa18>
400dd0f7:	12a237        	bge	a2, a3, 400dd10d <_svfprintf_r+0x9e9>
400dd0fa:	10c192        	addi	a9, a1, 16
400dd0fd:	b02290        	addx8	a2, a2, a9
400dd100:	0248      	l32i.n	a4, a2, 0
400dd102:	1258      	l32i.n	a5, a2, 4
400dd104:	aa6142        	s32i	a4, a1, 0x2a8
400dd107:	ab6152        	s32i	a5, a1, 0x2ac
400dd10a:	003586        	j	400dd1e4 <_svfprintf_r+0xac0>
400dd10d:	10c162        	addi	a6, a1, 16
400dd110:	48a232        	movi	a3, 0x248
400dd113:	363a      	add.n	a3, a6, a3
400dd115:	4ca2d2        	movi	a13, 0x24c
400dd118:	60a2c2        	movi	a12, 0x260
400dd11b:	0139      	s32i.n	a3, a1, 0
400dd11d:	01d6f2        	addmi	a15, a6, 0x100
400dd120:	06ed      	mov.n	a14, a6
400dd122:	d6da      	add.n	a13, a6, a13
400dd124:	c6ca      	add.n	a12, a6, a12
400dd126:	05bd      	mov.n	a11, a5
400dd128:	02ad      	mov.n	a10, a2
400dd12a:	ff17a5        	call8	400dc2a4 <get_arg$isra$0>
400dd12d:	0a88      	l32i.n	a8, a10, 0
400dd12f:	1a98      	l32i.n	a9, a10, 4
400dd131:	aa6182        	s32i	a8, a1, 0x2a8
400dd134:	ab6192        	s32i	a9, a1, 0x2ac
400dd137:	002a46        	j	400dd1e4 <_svfprintf_r+0xac0>
400dd13a:	920000        	lsi	f0, a0, 0x248
400dd13d:	1b10c1        	l32r	a12, 400a3d80 <_iram_end+0x1622c>
400dd140:	229047        	bne	a0, a4, 400dd166 <_svfprintf_r+0xa42>
400dd143:	a737b0        	lsi	f11, a7, 0x29c
400dd146:	234602        	s8i	a0, a6, 35
400dd149:	f21c00        	rems	a1, a12, a0
400dd14c:	542237        	blt	a2, a3, 400dd1a4 <_svfprintf_r+0xa80>
400dd14f:	231b      	addi.n	a2, a3, 1
400dd151:	10c192        	addi	a9, a1, 16
400dd154:	976122        	s32i	a2, a1, 0x25c
400dd157:	02d922        	addmi	a2, a9, 0x200
400dd15a:	1a2252        	l32i	a5, a2, 104
400dd15d:	657b      	addi.n	a6, a5, 7
400dd15f:	857c      	movi.n	a5, -8
400dd161:	105650        	and	a5, a6, a5
400dd164:	758b      	addi.n	a7, a5, 8
400dd166:	1a6272        	s32i	a7, a2, 104
400dd169:	861c      	movi.n	a6, 24
400dd16b:	052677        	blt	a6, a7, 400dd174 <_svfprintf_r+0xa50>
400dd16e:	192252        	l32i	a5, a2, 100
400dd171:	000286        	j	400dd17f <_svfprintf_r+0xa5b>
400dd174:	042657        	blt	a6, a5, 400dd17c <_svfprintf_r+0xa58>
400dd177:	852c      	movi.n	a5, 40
400dd179:	1a6252        	s32i	a5, a2, 104
400dd17c:	9c2152        	l32i	a5, a1, 0x270
400dd17f:	9e2122        	l32i	a2, a1, 0x278
400dd182:	252a      	add.n	a2, a5, a2
400dd184:	f8c222        	addi	a2, a2, -8
400dd187:	0288      	l32i.n	a8, a2, 0
400dd189:	1298      	l32i.n	a9, a2, 4
400dd18b:	aa6182        	s32i	a8, a1, 0x2a8
400dd18e:	ab6192        	s32i	a9, a1, 0x2ac
400dd191:	10c192        	addi	a9, a1, 16
400dd194:	b02390        	addx8	a2, a3, a9
400dd197:	aa2182        	l32i	a8, a1, 0x2a8
400dd19a:	ab2192        	l32i	a9, a1, 0x2ac
400dd19d:	0289      	s32i.n	a8, a2, 0
400dd19f:	1299      	s32i.n	a9, a2, 4
400dd1a1:	000f46        	j	400dd1e2 <_svfprintf_r+0xabe>
400dd1a4:	10c192        	addi	a9, a1, 16
400dd1a7:	02d922        	addmi	a2, a9, 0x200
400dd1aa:	1a2232        	l32i	a3, a2, 104
400dd1ad:	537b      	addi.n	a5, a3, 7
400dd1af:	837c      	movi.n	a3, -8
400dd1b1:	103530        	and	a3, a5, a3
400dd1b4:	638b      	addi.n	a6, a3, 8
400dd1b6:	1a6262        	s32i	a6, a2, 104
400dd1b9:	851c      	movi.n	a5, 24
400dd1bb:	062567        	blt	a5, a6, 400dd1c5 <_svfprintf_r+0xaa1>
400dd1be:	192232        	l32i	a3, a2, 100
400dd1c1:	0002c6        	j	400dd1d0 <_svfprintf_r+0xaac>
400dd1c4:	253700        	extui	a3, a0, 23, 3
400dd1c7:	832c04        	lsi	f0, a12, 0x20c
400dd1ca:	1a6232        	s32i	a3, a2, 104
400dd1cd:	9c2132        	l32i	a3, a1, 0x270
400dd1d0:	9e2122        	l32i	a2, a1, 0x278
400dd1d3:	232a      	add.n	a2, a3, a2
400dd1d5:	f8c222        	addi	a2, a2, -8
400dd1d8:	0288      	l32i.n	a8, a2, 0
400dd1da:	1298      	l32i.n	a9, a2, 4
400dd1dc:	aa6182        	s32i	a8, a1, 0x2a8
400dd1df:	ab6192        	s32i	a9, a1, 0x2ac
400dd1e2:	047d      	mov.n	a7, a4
400dd1e4:	aa21a2        	l32i	a10, a1, 0x2a8
400dd1e7:	ab21b2        	l32i	a11, a1, 0x2ac
400dd1ea:	fdca25        	call8	400dae8c <__fpclassifyd>
400dd1ed:	341a66        	bnei	a10, 1, 400dd225 <_svfprintf_r+0xb01>
400dd1f0:	cb9dc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd1f3:	cb9cd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dd1f6:	aa21a2        	l32i	a10, a1, 0x2a8
400dd1f9:	ab21b2        	l32i	a11, a1, 0x2ac
400dd1fc:	cd6581        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400dd1ff:	0008e0        	callx8	a8
400dd202:	00aad6        	bgez	a10, 400dd210 <_svfprintf_r+0xaec>
400dd205:	10c192        	addi	a9, a1, 16
400dd208:	d32c      	movi.n	a3, 45
400dd20a:	02d922        	addmi	a2, a9, 0x200
400dd20d:	524232        	s8i	a3, a2, 82
400dd210:	cd5121        	l32r	a2, 400d0754 <_flash_cache_start+0x73c>
400dd213:	a62132        	l32i	a3, a1, 0x298
400dd216:	a16122        	s32i	a2, a1, 0x284
400dd219:	724c      	movi.n	a2, 71
400dd21b:	cd4d41        	l32r	a4, 400d0750 <_flash_cache_start+0x738>
400dd21e:	1fa237        	bge	a2, a3, 400dd241 <_svfprintf_r+0xb1d>
400dd221:	0007c6        	j	400dd244 <_svfprintf_r+0xb20>
400dd224:	21a200        	srai	a10, a0, 2
400dd227:	b2aa      	add.n	a11, a2, a10
400dd229:	25ab21        	l32r	a2, 400a68d8 <_iram_end+0x18d84>
400dd22c:	ecfdc6        	j	400d8627 <nvs::Page::mLoadEntryTable()+0xb7>
400dd22f:	91ba      	add.n	a9, a1, a11
400dd231:	cd4b      	addi.n	a12, a13, 4
400dd233:	a62132        	l32i	a3, a1, 0x298
400dd236:	a16192        	s32i	a9, a1, 0x284
400dd239:	724c      	movi.n	a2, 71
400dd23b:	052237        	blt	a2, a3, 400dd244 <_svfprintf_r+0xb20>
400dd23e:	cd4641        	l32r	a4, 400d0758 <_flash_cache_start+0x740>
400dd241:	a16142        	s32i	a4, a1, 0x284
400dd244:	a02152        	l32i	a5, a1, 0x280
400dd247:	7faf22        	movi	a2, -129
400dd24a:	105520        	and	a5, a5, a2
400dd24d:	060c      	movi.n	a6, 0
400dd24f:	380c      	movi.n	a8, 3
400dd251:	a06152        	s32i	a5, a1, 0x280
400dd254:	a26162        	s32i	a6, a1, 0x288
400dd257:	a56182        	s32i	a8, a1, 0x294
400dd25a:	064806        	j	400deb7e <_svfprintf_r+0x245a>
400dd25d:	a62192        	l32i	a9, a1, 0x298
400dd260:	dfaf22        	movi	a2, -33
400dd263:	102920        	and	a2, a9, a2
400dd266:	a96122        	s32i	a2, a1, 0x2a4
400dd269:	a92132        	l32i	a3, a1, 0x2a4
400dd26c:	41a022        	movi	a2, 65
400dd26f:	4d9327        	bne	a3, a2, 400dd2c0 <_svfprintf_r+0xb9c>
400dd272:	10c142        	addi	a4, a1, 16
400dd275:	02d422        	addmi	a2, a4, 0x200
400dd278:	30a032        	movi	a3, 48
400dd27b:	504232        	s8i	a3, a2, 80
400dd27e:	58a052        	movi	a5, 88
400dd281:	9fc942        	addi	a4, a9, -97
400dd284:	78a032        	movi	a3, 120
400dd287:	933540        	movnez	a3, a5, a4
400dd28a:	a02152        	l32i	a5, a1, 0x280
400dd28d:	514232        	s8i	a3, a2, 81
400dd290:	220c      	movi.n	a2, 2
400dd292:	205520        	or	a5, a5, a2
400dd295:	a52162        	l32i	a6, a1, 0x294
400dd298:	a06152        	s32i	a5, a1, 0x280
400dd29b:	63a022        	movi	a2, 99
400dd29e:	3aa267        	bge	a2, a6, 400dd2dc <_svfprintf_r+0xbb8>
400dd2a1:	a321a2        	l32i	a10, a1, 0x28c
400dd2a4:	b61b      	addi.n	a11, a6, 1
400dd2a6:	a75e25        	call8	40084888 <_malloc_r>
400dd2a9:	a161a2        	s32i	a10, a1, 0x284
400dd2ac:	040a56        	bnez	a10, 400dd2f0 <_svfprintf_r+0xbcc>
400dd2af:	a42182        	l32i	a8, a1, 0x290
400dd2b2:	024c      	movi.n	a2, 64
400dd2b4:	061832        	l16ui	a3, a8, 12
400dd2b7:	202320        	or	a2, a3, a2
400dd2ba:	065822        	s16i	a2, a8, 12
400dd2bd:	094b06        	j	400df7ed <_svfprintf_r+0x30c9>
400dd2c0:	a52192        	l32i	a9, a1, 0x294
400dd2c3:	0a0c      	movi.n	a10, 0
400dd2c5:	300926        	beqi	a9, -1, 400dd2f9 <_svfprintf_r+0xbd5>
400dd2c8:	0899a7        	bne	a9, a10, 400dd2d4 <_svfprintf_r+0xbb0>
400dd2cb:	a92132        	l32i	a3, a1, 0x2a4
400dd2ce:	b9c322        	addi	a2, a3, -71
400dd2d1:	2f12a7        	beq	a2, a10, 400dd304 <_svfprintf_r+0xbe0>
400dd2d4:	040c      	movi.n	a4, 0
400dd2d6:	a26142        	s32i	a4, a1, 0x288
400dd2d9:	000bc6        	j	400dd30c <_svfprintf_r+0xbe8>
400dd2dc:	80a142        	movi	a4, 0x180
400dd2df:	10c182        	addi	a8, a1, 16
400dd2e2:	050c      	movi.n	a5, 0
400dd2e4:	884a      	add.n	a8, a8, a4
400dd2e6:	a26152        	s32i	a5, a1, 0x288
400dd2e9:	a16182        	s32i	a8, a1, 0x284
400dd2ec:	000706        	j	400dd30c <_svfprintf_r+0xbe8>
400dd2ef:	219200        	srai	a9, a0, 2
400dd2f2:	6192a1        	l32r	a10, 400b593c <_iram_end+0x27de8>
400dd2f5:	0486a2        	lsi	f10, a6, 16
400dd2f8:	620c00        	lsi	f0, a12, 0x188
400dd2fb:	a261a2        	s32i	a10, a1, 0x288
400dd2fe:	a56122        	s32i	a2, a1, 0x294
400dd301:	0001c6        	j	400dd30c <_svfprintf_r+0xbe8>
400dd304:	130c      	movi.n	a3, 1
400dd306:	a261a2        	s32i	a10, a1, 0x288
400dd309:	a56132        	s32i	a3, a1, 0x294
400dd30c:	a02142        	l32i	a4, a1, 0x280
400dd30f:	00a122        	movi	a2, 0x100
400dd312:	202420        	or	a2, a4, a2
400dd315:	b26122        	s32i	a2, a1, 0x2c8
400dd318:	ab2122        	l32i	a2, a1, 0x2ac
400dd31b:	aa2132        	l32i	a3, a1, 0x2a8
400dd31e:	0102d6        	bgez	a2, 400dd332 <_svfprintf_r+0xc0e>
400dd321:	cb5821        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400dd324:	ab2152        	l32i	a5, a1, 0x2ac
400dd327:	d62c      	movi.n	a6, 45
400dd329:	302520        	xor	a2, a5, a2
400dd32c:	b66162        	s32i	a6, a1, 0x2d8
400dd32f:	000106        	j	400dd337 <_svfprintf_r+0xc13>
400dd332:	080c      	movi.n	a8, 0
400dd334:	b66182        	s32i	a8, a1, 0x2d8
400dd337:	a92192        	l32i	a9, a1, 0x2a4
400dd33a:	144c      	movi.n	a4, 65
400dd33c:	021947        	beq	a9, a4, 400dd342 <_svfprintf_r+0xc1e>
400dd33f:	005246        	j	400dd48c <_svfprintf_r+0xd68>
400dd342:	10c1a2        	addi	a10, a1, 16
400dd345:	44a2c2        	movi	a12, 0x244
400dd348:	caca      	add.n	a12, a10, a12
400dd34a:	02bd      	mov.n	a11, a2
400dd34c:	03ad      	mov.n	a10, a3
400dd34e:	090ee5        	call8	400e643c <frexp>
400dd351:	cb44c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd354:	cd06d1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400dd357:	cb4281        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400dd35a:	0008e0        	callx8	a8
400dd35d:	cb41c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd360:	cb41d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dd363:	0a4d      	mov.n	a4, a10
400dd365:	205bb0        	or	a5, a11, a11
400dd368:	cd0b81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400dd36b:	0008e0        	callx8	a8
400dd36e:	3acc      	bnez.n	a10, 400dd375 <_svfprintf_r+0xc51>
400dd370:	120c      	movi.n	a2, 1
400dd372:	956122        	s32i	a2, a1, 0x254
400dd375:	a62132        	l32i	a3, a1, 0x298
400dd378:	ccfb61        	l32r	a6, 400d0764 <_flash_cache_start+0x74c>
400dd37b:	9fc322        	addi	a2, a3, -97
400dd37e:	ccf881        	l32r	a8, 400d0760 <_flash_cache_start+0x748>
400dd381:	023d      	mov.n	a3, a2
400dd383:	062d      	mov.n	a2, a6
400dd385:	a52162        	l32i	a6, a1, 0x294
400dd388:	832830        	moveqz	a2, a8, a3
400dd38b:	a12182        	l32i	a8, a1, 0x284
400dd38e:	960b      	addi.n	a9, a6, -1
400dd390:	cb35c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd393:	ccf7d1        	l32r	a13, 400d0770 <_flash_cache_start+0x758>
400dd396:	20a440        	or	a10, a4, a4
400dd399:	20b550        	or	a11, a5, a5
400dd39c:	b86182        	s32i	a8, a1, 0x2e0
400dd39f:	b76192        	s32i	a9, a1, 0x2dc
400dd3a2:	cb2f81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400dd3a5:	0008e0        	callx8	a8
400dd3a8:	0b5d      	mov.n	a5, a11
400dd3aa:	0a4d      	mov.n	a4, a10
400dd3ac:	ccfb81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400dd3af:	0008e0        	callx8	a8
400dd3b2:	0a3d      	mov.n	a3, a10
400dd3b4:	ccfa81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400dd3b7:	0008e0        	callx8	a8
400dd3ba:	0acd      	mov.n	a12, a10
400dd3bc:	0bdd      	mov.n	a13, a11
400dd3be:	04ad      	mov.n	a10, a4
400dd3c0:	05bd      	mov.n	a11, a5
400dd3c2:	ccf781        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400dd3c5:	0008e0        	callx8	a8
400dd3c8:	b82182        	l32i	a8, a1, 0x2e0
400dd3cb:	0a4d      	mov.n	a4, a10
400dd3cd:	a23a      	add.n	a10, a2, a3
400dd3cf:	881b      	addi.n	a8, a8, 1
400dd3d1:	000aa2        	l8ui	a10, a10, 0
400dd3d4:	680b      	addi.n	a6, a8, -1
400dd3d6:	0046a2        	s8i	a10, a6, 0
400dd3d9:	b72192        	l32i	a9, a1, 0x2dc
400dd3dc:	0b5d      	mov.n	a5, a11
400dd3de:	096d      	mov.n	a6, a9
400dd3e0:	1e0926        	beqi	a9, -1, 400dd402 <_svfprintf_r+0xcde>
400dd3e3:	cb20c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd3e6:	cb1fd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dd3e9:	990b      	addi.n	a9, a9, -1
400dd3eb:	04ad      	mov.n	a10, a4
400dd3ed:	b86182        	s32i	a8, a1, 0x2e0
400dd3f0:	b76192        	s32i	a9, a1, 0x2dc
400dd3f3:	ccec81        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400dd3f6:	0008e0        	callx8	a8
400dd3f9:	b82182        	l32i	a8, a1, 0x2e0
400dd3fc:	b72192        	l32i	a9, a1, 0x2dc
400dd3ff:	f8da56        	bnez	a10, 400dd390 <_svfprintf_r+0xc6c>
400dd402:	cb18c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd405:	ccdbd1        	l32r	a13, 400d0774 <_flash_cache_start+0x75c>
400dd408:	04ad      	mov.n	a10, a4
400dd40a:	05bd      	mov.n	a11, a5
400dd40c:	b86182        	s32i	a8, a1, 0x2e0
400dd40f:	cce681        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400dd412:	0008e0        	callx8	a8
400dd415:	b82182        	l32i	a8, a1, 0x2e0
400dd418:	201ae6        	bgei	a10, 1, 400dd43c <_svfprintf_r+0xd18>
400dd41b:	cb12c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd41e:	ccd5d1        	l32r	a13, 400d0774 <_flash_cache_start+0x75c>
400dd421:	04ad      	mov.n	a10, a4
400dd423:	20b550        	or	a11, a5, a5
400dd426:	ccdb81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400dd429:	0008e0        	callx8	a8
400dd42c:	b82182        	l32i	a8, a1, 0x2e0
400dd42f:	1acc      	bnez.n	a10, 400dd434 <_svfprintf_r+0xd10>
400dd431:	07e307        	bbsi	a3, 0, 400dd43c <_svfprintf_r+0xd18>
400dd434:	082d      	mov.n	a2, a8
400dd436:	053c      	movi.n	a5, 48
400dd438:	000e46        	j	400dd475 <_svfprintf_r+0xd51>
400dd43b:	618200        	lsi	f0, a2, 0x184
400dd43e:	024290        	andb	b4, b2, b9
400dd441:	0f          	.byte 0xf
400dd442:	063c      	movi.n	a6, 48
400dd444:	0000c6        	j	400dd44b <_svfprintf_r+0xd27>
400dd447:	436200        	min	a6, a2, a0
400dd44a:	213200        	srai	a3, a0, 2
400dd44d:	330b90        	clamps	a0, a11, 16
400dd450:	906132        	s32i	a3, a1, 0x240
400dd453:	000352        	l8ui	a5, a3, 0
400dd456:	ee1547        	beq	a5, a4, 400dd448 <_svfprintf_r+0xd24>
400dd459:	01c542        	addi	a4, a5, 1
400dd45c:	39a062        	movi	a6, 57
400dd45f:	744040        	extui	a4, a4, 0, 8
400dd462:	029567        	bne	a5, a6, 400dd468 <_svfprintf_r+0xd44>
400dd465:	0a0242        	l8ui	a4, a2, 10
400dd468:	004342        	s8i	a4, a3, 0
400dd46b:	084d      	mov.n	a4, a8
400dd46d:	000386        	j	400dd47f <_svfprintf_r+0xd5b>
400dd470:	004252        	s8i	a5, a2, 0
400dd473:	221b      	addi.n	a2, a2, 1
400dd475:	c03620        	sub	a3, a6, a2
400dd478:	383a      	add.n	a3, a8, a3
400dd47a:	024d      	mov.n	a4, a2
400dd47c:	ff03d6        	bgez	a3, 400dd470 <_svfprintf_r+0xd4c>
400dd47f:	a12182        	l32i	a8, a1, 0x284
400dd482:	c04480        	sub	a4, a4, a8
400dd485:	a76142        	s32i	a4, a1, 0x29c
400dd488:	002dc6        	j	400dd543 <_svfprintf_r+0xe1f>
400dd48b:	219200        	srai	a9, a0, 2
400dd48e:	4ca9      	s32i.n	a10, a12, 16
400dd490:	214265        	call8	400fe8b8 <_etext+0x11fdb>
400dd493:	3e0ca5        	call8	4011b55c <_etext+0x2ec7f>
400dd496:	0a1957        	beq	a9, a5, 400dd4a4 <_svfprintf_r+0xd80>
400dd499:	45a052        	movi	a5, 69
400dd49c:	2e0c      	movi.n	a14, 2
400dd49e:	029957        	bne	a9, a5, 400dd4a4 <_svfprintf_r+0xd80>
400dd4a1:	01c442        	addi	a4, a4, 1
400dd4a4:	40a2a2        	movi	a10, 0x240
400dd4a7:	8051a0        	add	a5, a1, a10
400dd4aa:	50a262        	movi	a6, 0x250
400dd4ad:	026152        	s32i	a5, a1, 8
400dd4b0:	54a282        	movi	a8, 0x254
400dd4b3:	805160        	add	a5, a1, a6
400dd4b6:	1159      	s32i.n	a5, a1, 4
400dd4b8:	a321a2        	l32i	a10, a1, 0x28c
400dd4bb:	518a      	add.n	a5, a1, a8
400dd4bd:	0159      	s32i.n	a5, a1, 0
400dd4bf:	04fd      	mov.n	a15, a4
400dd4c1:	03cd      	mov.n	a12, a3
400dd4c3:	02dd      	mov.n	a13, a2
400dd4c5:	083265        	call8	400e57ec <_dtoa_r>
400dd4c8:	a92192        	l32i	a9, a1, 0x2a4
400dd4cb:	a161a2        	s32i	a10, a1, 0x284
400dd4ce:	754c      	movi.n	a5, 71
400dd4d0:	059957        	bne	a9, a5, 400dd4d9 <_svfprintf_r+0xdb5>
400dd4d3:	a02152        	l32i	a5, a1, 0x280
400dd4d6:	5d6507        	bbci	a5, 0, 400dd537 <_svfprintf_r+0xe13>
400dd4d9:	a12182        	l32i	a8, a1, 0x284
400dd4dc:	a92192        	l32i	a9, a1, 0x2a4
400dd4df:	664c      	movi.n	a6, 70
400dd4e1:	584a      	add.n	a5, a8, a4
400dd4e3:	269967        	bne	a9, a6, 400dd50d <_svfprintf_r+0xde9>
400dd4e6:	000862        	l8ui	a6, a8, 0
400dd4e9:	d0c662        	addi	a6, a6, -48
400dd4ec:	86dc      	bnez.n	a6, 400dd508 <_svfprintf_r+0xde4>
400dd4ee:	caddc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd4f1:	cadcd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dd4f4:	03ad      	mov.n	a10, a3
400dd4f6:	02bd      	mov.n	a11, a2
400dd4f8:	ccab81        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400dd4fb:	0008e0        	callx8	a8
400dd4fe:	6a8c      	beqz.n	a10, 400dd508 <_svfprintf_r+0xde4>
400dd500:	160c      	movi.n	a6, 1
400dd502:	c04640        	sub	a4, a6, a4
400dd505:	956142        	s32i	a4, a1, 0x254
400dd508:	952142        	l32i	a4, a1, 0x254
400dd50b:	554a      	add.n	a5, a5, a4
400dd50d:	cad5c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400dd510:	cad5d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dd513:	03ad      	mov.n	a10, a3
400dd515:	02bd      	mov.n	a11, a2
400dd517:	cc9f81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400dd51a:	0008e0        	callx8	a8
400dd51d:	033c      	movi.n	a3, 48
400dd51f:	eacc      	bnez.n	a10, 400dd531 <_svfprintf_r+0xe0d>
400dd521:	906152        	s32i	a5, a1, 0x240
400dd524:	0003c6        	j	400dd537 <_svfprintf_r+0xe13>
400dd527:	1b0000        	un.s	b0, f0, f0
400dd52a:	614242        	s8i	a4, a2, 97
400dd52d:	423290        	xorb	b3, b2, b9
400dd530:	212200        	srai	a2, a0, 2
400dd533:	325790        	orbc	b5, b7, b9
400dd536:	2122f1        	l32r	a15, 400a59c0 <_iram_end+0x17e6c>
400dd539:	213290        	srai	a3, a9, 2
400dd53c:	2230a1        	l32r	a10, 400a5dfc <_iram_end+0x182a8>
400dd53f:	6122c0        	xsr.m2	a12
400dd542:	2142a7        	ball	a2, a10, 400dd567 <_svfprintf_r+0xe43>
400dd545:	4ca9      	s32i.n	a10, a12, 16
400dd547:	942772        	l32i	a7, a7, 0x250
400dd54a:	221c      	movi.n	a2, 18
400dd54c:	7c9521        	l32r	a2, 400bc7a0 <_iram_end+0x2ec4c>
400dd54f:	2237d3        	lsi	f13, a7, 136
400dd552:	5208      	l32i.n	a0, a2, 20
400dd554:	27a521        	l32r	a2, 400a73e8 <_iram_end+0x19894>
400dd557:	c60225        	call8	400a3578 <_iram_end+0x15a24>
400dd55a:	005d      	mov.n	a5, a0
400dd55c:	a62162        	l32i	a6, a1, 0x298
400dd55f:	fec662        	addi	a6, a6, -2
400dd562:	a66162        	s32i	a6, a1, 0x298
400dd565:	0004c6        	j	400dd57c <_svfprintf_r+0xe58>
400dd568:	a62182        	l32i	a8, a1, 0x298
400dd56b:	624c      	movi.n	a2, 70
400dd56d:	029827        	bne	a8, a2, 400dd573 <_svfprintf_r+0xe4f>
400dd570:	004546        	j	400dd689 <_svfprintf_r+0xf65>
400dd573:	65a022        	movi	a2, 101
400dd576:	02a287        	bge	a2, a8, 400dd57c <_svfprintf_r+0xe58>
400dd579:	0040c6        	j	400dd680 <_svfprintf_r+0xf5c>
400dd57c:	952122        	l32i	a2, a1, 0x254
400dd57f:	a62192        	l32i	a9, a1, 0x298
400dd582:	220b      	addi.n	a2, a2, -1
400dd584:	dfaf42        	movi	a4, -33
400dd587:	956122        	s32i	a2, a1, 0x254
400dd58a:	104940        	and	a4, a9, a4
400dd58d:	41a052        	movi	a5, 65
400dd590:	743090        	extui	a3, a9, 0, 8
400dd593:	059457        	bne	a4, a5, 400dd59c <_svfprintf_r+0xe78>
400dd596:	0fc932        	addi	a3, a9, 15
400dd599:	743030        	extui	a3, a3, 0, 8
400dd59c:	10c1a2        	addi	a10, a1, 16
400dd59f:	02da52        	addmi	a5, a10, 0x200
400dd5a2:	374532        	s8i	a3, a5, 55
400dd5a5:	b32c      	movi.n	a3, 43
400dd5a7:	0072d6        	bgez	a2, 400dd5b2 <_svfprintf_r+0xe8e>
400dd5aa:	602020        	neg	a2, a2
400dd5ad:	d32c      	movi.n	a3, 45
400dd5af:	ffffc6        	j	400dd5b2 <_svfprintf_r+0xe8e>
400dd5b2:	384532        	s8i	a3, a5, 56
400dd5b5:	950c      	movi.n	a5, 9
400dd5b7:	5da527        	bge	a5, a2, 400dd618 <_svfprintf_r+0xef4>
400dd5ba:	37a232        	movi	a3, 0x237
400dd5bd:	10c1e2        	addi	a14, a1, 16
400dd5c0:	cc6e61        	l32r	a6, 400d0778 <_flash_cache_start+0x760>
400dd5c3:	3e3a      	add.n	a3, a14, a3
400dd5c5:	b24260        	mulsh	a4, a2, a6
400dd5c8:	318f20        	srai	a8, a2, 31
400dd5cb:	214240        	srai	a4, a4, 2
400dd5ce:	c04480        	sub	a4, a4, a8
400dd5d1:	a08440        	addx4	a8, a4, a4
400dd5d4:	1188f0        	slli	a8, a8, 1
400dd5d7:	c02280        	sub	a2, a2, a8
400dd5da:	30c222        	addi	a2, a2, 48
400dd5dd:	330b      	addi.n	a3, a3, -1
400dd5df:	004322        	s8i	a2, a3, 0
400dd5e2:	042d      	mov.n	a2, a4
400dd5e4:	dd2547        	blt	a5, a4, 400dd5c5 <_svfprintf_r+0xea1>
400dd5e7:	330b      	addi.n	a3, a3, -1
400dd5e9:	30c422        	addi	a2, a4, 48
400dd5ec:	004322        	s8i	a2, a3, 0
400dd5ef:	39a242        	movi	a4, 0x239
400dd5f2:	10c122        	addi	a2, a1, 16
400dd5f5:	424a      	add.n	a4, a2, a4
400dd5f7:	10c152        	addi	a5, a1, 16
400dd5fa:	032d      	mov.n	a2, a3
400dd5fc:	37a232        	movi	a3, 0x237
400dd5ff:	353a      	add.n	a3, a5, a3
400dd601:	000246        	j	400dd60e <_svfprintf_r+0xeea>
400dd604:	000252        	l8ui	a5, a2, 0
400dd607:	221b      	addi.n	a2, a2, 1
400dd609:	004452        	s8i	a5, a4, 0
400dd60c:	441b      	addi.n	a4, a4, 1
400dd60e:	045d      	mov.n	a5, a4
400dd610:	f03237        	bltu	a2, a3, 400dd604 <_svfprintf_r+0xee0>
400dd613:	000986        	j	400dd63d <_svfprintf_r+0xf19>
400dd616:	320000        	orbc	b0, b0, b0
400dd619:	6239a2        	lsi	f10, a9, 0x188
400dd61c:	4c10c1        	l32r	a12, 400b065c <_iram_end+0x22b08>
400dd61f:	363015        	call4	40113920 <_etext+0x27043>
400dd622:	145780        	extui	a5, a8, 7, 2
400dd625:	0e          	.byte 0xe
400dd626:	02d632        	addmi	a3, a6, 0x200
400dd629:	30a042        	movi	a4, 48
400dd62c:	394342        	s8i	a4, a3, 57
400dd62f:	3aa232        	movi	a3, 0x23a
400dd632:	803630        	add	a3, a6, a3
400dd635:	30c222        	addi	a2, a2, 48
400dd638:	531b      	addi.n	a5, a3, 1
400dd63a:	004322        	s8i	a2, a3, 0
400dd63d:	47a282        	movi	a8, 0x247
400dd640:	218a      	add.n	a2, a1, a8
400dd642:	a72192        	l32i	a9, a1, 0x29c
400dd645:	c02520        	sub	a2, a5, a2
400dd648:	992a      	add.n	a9, a9, a2
400dd64a:	b46122        	s32i	a2, a1, 0x2d0
400dd64d:	a72122        	l32i	a2, a1, 0x29c
400dd650:	a56192        	s32i	a9, a1, 0x294
400dd653:	0522e6        	bgei	a2, 2, 400dd65c <_svfprintf_r+0xf38>
400dd656:	a02132        	l32i	a3, a1, 0x280
400dd659:	076307        	bbci	a3, 0, 400dd664 <_svfprintf_r+0xf40>
400dd65c:	a52142        	l32i	a4, a1, 0x294
400dd65f:	441b      	addi.n	a4, a4, 1
400dd661:	a56142        	s32i	a4, a1, 0x294
400dd664:	a02152        	l32i	a5, a1, 0x280
400dd667:	ffab22        	movi	a2, 0xfffffbff
400dd66a:	102520        	and	a2, a5, a2
400dd66d:	00a132        	movi	a3, 0x100
400dd670:	203230        	or	a3, a2, a3
400dd673:	a06132        	s32i	a3, a1, 0x280
400dd676:	030c      	movi.n	a3, 0
400dd678:	035d      	mov.n	a5, a3
400dd67a:	032d      	mov.n	a2, a3
400dd67c:	003946        	j	400dd765 <_svfprintf_r+0x1041>
400dd67f:	216200        	srai	a6, a0, 2
400dd682:	a022a6        	blti	a2, 2, 400dd626 <_svfprintf_r+0xf02>
400dd685:	962766        	bnei	a7, 2, 400dd61f <_svfprintf_r+0xefb>
400dd688:	424a      	add.n	a4, a2, a4
400dd68a:	a69521        	l32r	a2, 400c70e0 <_rtc_text_end+0x70e0>
400dd68d:	822114        	lsi	f1, a1, 0x208
400dd690:	cca521        	l32r	a2, 400d0924 <_flash_cache_start+0x90c>
400dd693:	92a8      	l32i.n	a10, a2, 36
400dd695:	2266a0        	orb	b6, b6, b10
400dd698:	92a021        	l32r	a2, 400c2118 <_rtc_text_end+0x2118>
400dd69b:	07a661        	l32r	a6, 4009f534 <_iram_end+0x119e0>
400dd69e:	326362        	s32i	a6, a3, 200
400dd6a1:	52a521        	l32r	a2, 400b2138 <_iram_end+0x245e4>
400dd6a4:	1b66a0        	un.s	b6, f6, f10
400dd6a7:	446a63        	lsi	f6, a10, 0x110
400dd6aa:	a66152        	s32i	a5, a1, 0x298
400dd6ad:	0014c6        	j	400dd704 <_svfprintf_r+0xfe0>
400dd6b0:	216200        	srai	a6, a0, 2
400dd6b3:	c6cca5        	call8	400a437c <_iram_end+0x16828>
400dd6b6:	66a082        	movi	a8, 102
400dd6b9:	a02192        	l32i	a9, a1, 0x280
400dd6bc:	a66182        	s32i	a8, a1, 0x298
400dd6bf:	140c      	movi.n	a4, 1
400dd6c1:	3f6907        	bbci	a9, 0, 400dd704 <_svfprintf_r+0xfe0>
400dd6c4:	a52122        	l32i	a2, a1, 0x294
400dd6c7:	66a032        	movi	a3, 102
400dd6ca:	422b      	addi.n	a4, a2, 2
400dd6cc:	a66132        	s32i	a3, a1, 0x298
400dd6cf:	000c46        	j	400dd704 <_svfprintf_r+0xfe0>
400dd6d2:	420000        	xorb	b0, b0, b0
400dd6d5:	529521        	l32r	a2, 400b212c <_iram_end+0x245d8>
400dd6d8:	57a721        	l32r	a2, 400b3574 <_iram_end+0x25a20>
400dd6db:	621024        	lsi	f2, a0, 0x188
400dd6de:	8267a0        	mull	a6, a7, a10
400dd6e1:	62a021        	l32r	a2, 400b6164 <_iram_end+0x28610>
400dd6e4:	07a661        	l32r	a6, 4009f57c <_iram_end+0x11a28>
400dd6e7:	1a68      	l32i.n	a6, a10, 4
400dd6e9:	441b      	addi.n	a4, a4, 1
400dd6eb:	000546        	j	400dd704 <_svfprintf_r+0xfe0>
400dd6ee:	120c      	movi.n	a2, 1
400dd6f0:	05a427        	bge	a4, a2, 400dd6f9 <_svfprintf_r+0xfd5>
400dd6f3:	02a022        	movi	a2, 2
400dd6f6:	c02240        	sub	a2, a2, a4
400dd6f9:	a72192        	l32i	a9, a1, 0x29c
400dd6fc:	429a      	add.n	a4, a2, a9
400dd6fe:	67a022        	movi	a2, 103
400dd701:	a66122        	s32i	a2, a1, 0x298
400dd704:	a02152        	l32i	a5, a1, 0x280
400dd707:	952132        	l32i	a3, a1, 0x254
400dd70a:	4865a7        	bbci	a5, 10, 400dd756 <_svfprintf_r+0x1032>
400dd70d:	032d      	mov.n	a2, a3
400dd70f:	4313a6        	blti	a3, 1, 400dd756 <_svfprintf_r+0x1032>
400dd712:	030c      	movi.n	a3, 0
400dd714:	035d      	mov.n	a5, a3
400dd716:	ffa082        	movi	a8, 255
400dd719:	000686        	j	400dd737 <_svfprintf_r+0x1013>
400dd71c:	20a627        	bge	a6, a2, 400dd740 <_svfprintf_r+0x101c>
400dd71f:	ad2192        	l32i	a9, a1, 0x2b4
400dd722:	c02260        	sub	a2, a2, a6
400dd725:	010962        	l8ui	a6, a9, 1
400dd728:	968c      	beqz.n	a6, 400dd735 <_svfprintf_r+0x1011>
400dd72a:	991b      	addi.n	a9, a9, 1
400dd72c:	551b      	addi.n	a5, a5, 1
400dd72e:	ad6192        	s32i	a9, a1, 0x2b4
400dd731:	000086        	j	400dd737 <_svfprintf_r+0x1013>
400dd734:	331b00        	clamps	a1, a11, 7
400dd737:	ad2192        	l32i	a9, a1, 0x2b4
400dd73a:	000962        	l8ui	a6, a9, 0
400dd73d:	db9687        	bne	a6, a8, 400dd71c <_svfprintf_r+0xff8>
400dd740:	b02182        	l32i	a8, a1, 0x2c0
400dd743:	653a      	add.n	a6, a5, a3
400dd745:	826680        	mull	a6, a6, a8
400dd748:	b22192        	l32i	a9, a1, 0x2c8
400dd74b:	664a      	add.n	a6, a6, a4
400dd74d:	a56162        	s32i	a6, a1, 0x294
400dd750:	a06192        	s32i	a9, a1, 0x280
400dd753:	000386        	j	400dd765 <_svfprintf_r+0x1041>
400dd756:	032d      	mov.n	a2, a3
400dd758:	b22132        	l32i	a3, a1, 0x2c8
400dd75b:	a56142        	s32i	a4, a1, 0x294
400dd75e:	a06132        	s32i	a3, a1, 0x280
400dd761:	030c      	movi.n	a3, 0
400dd763:	035d      	mov.n	a5, a3
400dd765:	b62142        	l32i	a4, a1, 0x2d8
400dd768:	060c      	movi.n	a6, 0
400dd76a:	029467        	bne	a4, a6, 400dd770 <_svfprintf_r+0x104c>
400dd76d:	0504c6        	j	400deb84 <_svfprintf_r+0x2460>
400dd770:	10c192        	addi	a9, a1, 16
400dd773:	d82c      	movi.n	a8, 45
400dd775:	02d942        	addmi	a4, a9, 0x200
400dd778:	524482        	s8i	a8, a4, 82
400dd77b:	050146        	j	400deb84 <_svfprintf_r+0x2460>
400dd77e:	a02132        	l32i	a3, a1, 0x280
400dd781:	02e357        	bbsi	a3, 5, 400dd787 <_svfprintf_r+0x1063>
400dd784:	003106        	j	400dd84c <_svfprintf_r+0x1128>
400dd787:	972132        	l32i	a3, a1, 0x25c
400dd78a:	34bc      	beqz.n	a4, 400dd7c1 <_svfprintf_r+0x109d>
400dd78c:	0aa237        	bge	a2, a3, 400dd79a <_svfprintf_r+0x1076>
400dd78f:	10c142        	addi	a4, a1, 16
400dd792:	b02240        	addx8	a2, a2, a4
400dd795:	0228      	l32i.n	a2, a2, 0
400dd797:	000846        	j	400dd7bc <_svfprintf_r+0x1098>
400dd79a:	10c162        	addi	a6, a1, 16
400dd79d:	48a232        	movi	a3, 0x248
400dd7a0:	363a      	add.n	a3, a6, a3
400dd7a2:	4ca2d2        	movi	a13, 0x24c
400dd7a5:	60a2c2        	movi	a12, 0x260
400dd7a8:	02ad      	mov.n	a10, a2
400dd7aa:	0139      	s32i.n	a3, a1, 0
400dd7ac:	01d6f2        	addmi	a15, a6, 0x100
400dd7af:	06ed      	mov.n	a14, a6
400dd7b1:	d6da      	add.n	a13, a6, a13
400dd7b3:	c6ca      	add.n	a12, a6, a12
400dd7b5:	05bd      	mov.n	a11, a5
400dd7b7:	feaee5        	call8	400dc2a4 <get_arg$isra$0>
400dd7ba:	0a28      	l32i.n	a2, a10, 0
400dd7bc:	074d      	mov.n	a4, a7
400dd7be:	001f06        	j	400dd83e <_svfprintf_r+0x111a>
400dd7c1:	10c182        	addi	a8, a1, 16
400dd7c4:	471b      	addi.n	a4, a7, 1
400dd7c6:	b02280        	addx8	a2, a2, a8
400dd7c9:	6f2737        	blt	a7, a3, 400dd83c <_svfprintf_r+0x1118>
400dd7cc:	f21c      	movi.n	a2, 31
400dd7ce:	3e2237        	blt	a2, a3, 400dd810 <_svfprintf_r+0x10ec>
400dd7d1:	231b      	addi.n	a2, a3, 1
400dd7d3:	10c192        	addi	a9, a1, 16
400dd7d6:	976122        	s32i	a2, a1, 0x25c
400dd7d9:	02d922        	addmi	a2, a9, 0x200
400dd7dc:	1a2252        	l32i	a5, a2, 104
400dd7df:	861c      	movi.n	a6, 24
400dd7e1:	754b      	addi.n	a7, a5, 4
400dd7e3:	1a6272        	s32i	a7, a2, 104
400dd7e6:	062677        	blt	a6, a7, 400dd7f0 <_svfprintf_r+0x10cc>
400dd7e9:	192252        	l32i	a5, a2, 100
400dd7ec:	0002c6        	j	400dd7fb <_svfprintf_r+0x10d7>
400dd7ef:	265700        	lsi	f0, a7, 152
400dd7f2:	452c04        	lsi	f0, a12, 0x114
400dd7f5:	1a6252        	s32i	a5, a2, 104
400dd7f8:	9c2152        	l32i	a5, a1, 0x270
400dd7fb:	9e2122        	l32i	a2, a1, 0x278
400dd7fe:	10c1a2        	addi	a10, a1, 16
400dd801:	252a      	add.n	a2, a5, a2
400dd803:	fcc222        	addi	a2, a2, -4
400dd806:	0228      	l32i.n	a2, a2, 0
400dd808:	b033a0        	addx8	a3, a3, a10
400dd80b:	0329      	s32i.n	a2, a3, 0
400dd80d:	000b46        	j	400dd83e <_svfprintf_r+0x111a>
400dd810:	10c1e2        	addi	a14, a1, 16
400dd813:	02de22        	addmi	a2, a14, 0x200
400dd816:	1a2232        	l32i	a3, a2, 104
400dd819:	851c      	movi.n	a5, 24
400dd81b:	634b      	addi.n	a6, a3, 4
400dd81d:	1a6262        	s32i	a6, a2, 104
400dd820:	052567        	blt	a5, a6, 400dd829 <_svfprintf_r+0x1105>
400dd823:	192232        	l32i	a3, a2, 100
400dd826:	000286        	j	400dd834 <_svfprintf_r+0x1110>
400dd829:	042537        	blt	a5, a3, 400dd831 <_svfprintf_r+0x110d>
400dd82c:	432c      	movi.n	a3, 36
400dd82e:	1a6232        	s32i	a3, a2, 104
400dd831:	9c2132        	l32i	a3, a1, 0x270
400dd834:	9e2122        	l32i	a2, a1, 0x278
400dd837:	232a      	add.n	a2, a3, a2
400dd839:	fcc222        	addi	a2, a2, -4
400dd83c:	0228      	l32i.n	a2, a2, 0
400dd83e:	ae2132        	l32i	a3, a1, 0x2b8
400dd841:	0239      	s32i.n	a3, a2, 0
400dd843:	313f30        	srai	a3, a3, 31
400dd846:	1239      	s32i.n	a3, a2, 4
400dd848:	0031c6        	j	400dd913 <_svfprintf_r+0x11ef>
400dd84b:	216200        	srai	a6, a0, 2
400dd84e:	e647a0        	lsi	f10, a7, 0x398
400dd851:	308602        	lsi	f0, a6, 192
400dd854:	216200        	srai	a6, a0, 2
400dd857:	44bc97        	bgeu	a12, a9, 400dd89f <_svfprintf_r+0x117b>
400dd85a:	0aa267        	bge	a2, a6, 400dd868 <_svfprintf_r+0x1144>
400dd85d:	10c182        	addi	a8, a1, 16
400dd860:	b02280        	addx8	a2, a2, a8
400dd863:	0238      	l32i.n	a3, a2, 0
400dd865:	000846        	j	400dd88a <_svfprintf_r+0x1166>
400dd868:	10c192        	addi	a9, a1, 16
400dd86b:	48a232        	movi	a3, 0x248
400dd86e:	393a      	add.n	a3, a9, a3
400dd870:	4ca2d2        	movi	a13, 0x24c
400dd873:	60a2c2        	movi	a12, 0x260
400dd876:	0139      	s32i.n	a3, a1, 0
400dd878:	01d9f2        	addmi	a15, a9, 0x100
400dd87b:	09ed      	mov.n	a14, a9
400dd87d:	d9da      	add.n	a13, a9, a13
400dd87f:	c9ca      	add.n	a12, a9, a12
400dd881:	05bd      	mov.n	a11, a5
400dd883:	02ad      	mov.n	a10, a2
400dd885:	fea1e5        	call8	400dc2a4 <get_arg$isra$0>
400dd888:	0a38      	l32i.n	a3, a10, 0
400dd88a:	074d      	mov.n	a4, a7
400dd88c:	001f86        	j	400dd90e <_svfprintf_r+0x11ea>
400dd88f:	c1a200        	mul16u	a10, a2, a0
400dd892:	471b10        	lsi	f1, a11, 0x11c
400dd895:	b022a0        	addx8	a2, a2, a10
400dd898:	702767        	blt	a7, a6, 400dd90c <_svfprintf_r+0x11e8>
400dd89b:	f21c      	movi.n	a2, 31
400dd89d:	3f2267        	blt	a2, a6, 400dd8e0 <_svfprintf_r+0x11bc>
400dd8a0:	261b      	addi.n	a2, a6, 1
400dd8a2:	10c1e2        	addi	a14, a1, 16
400dd8a5:	976122        	s32i	a2, a1, 0x25c
400dd8a8:	02de22        	addmi	a2, a14, 0x200
400dd8ab:	1a2232        	l32i	a3, a2, 104
400dd8ae:	851c      	movi.n	a5, 24
400dd8b0:	734b      	addi.n	a7, a3, 4
400dd8b2:	1a6272        	s32i	a7, a2, 104
400dd8b5:	072577        	blt	a5, a7, 400dd8c0 <_svfprintf_r+0x119c>
400dd8b8:	192222        	l32i	a2, a2, 100
400dd8bb:	000306        	j	400dd8cb <_svfprintf_r+0x11a7>
400dd8be:	370000        	lsi	f0, a0, 220
400dd8c1:	2c0425        	call8	40109904 <_etext+0x1d027>
400dd8c4:	623243        	lsi	f4, a2, 0x188
400dd8c7:	221a      	add.n	a2, a2, a1
400dd8c9:	329c21        	l32r	a2, 400aa33c <_iram_end+0x1c7e8>
400dd8cc:	529e21        	l32r	a2, 400b2344 <_iram_end+0x247f0>
400dd8cf:	3a10c1        	l32r	a12, 400ac110 <_iram_end+0x1e5bc>
400dd8d2:	c33232        	lsi	f3, a2, 0x30c
400dd8d5:	38fc      	bnez.n	a8, 400dd90c <_svfprintf_r+0x11e8>
400dd8d7:	265003        	lsi	f0, a0, 152
400dd8da:	0239b0        	andb	b3, b9, b11
400dd8dd:	000b46        	j	400dd90e <_svfprintf_r+0x11ea>
400dd8e0:	10c162        	addi	a6, a1, 16
400dd8e3:	02d622        	addmi	a2, a6, 0x200
400dd8e6:	1a2232        	l32i	a3, a2, 104
400dd8e9:	851c      	movi.n	a5, 24
400dd8eb:	634b      	addi.n	a6, a3, 4
400dd8ed:	1a6262        	s32i	a6, a2, 104
400dd8f0:	052567        	blt	a5, a6, 400dd8f9 <_svfprintf_r+0x11d5>
400dd8f3:	192232        	l32i	a3, a2, 100
400dd8f6:	000286        	j	400dd904 <_svfprintf_r+0x11e0>
400dd8f9:	042537        	blt	a5, a3, 400dd901 <_svfprintf_r+0x11dd>
400dd8fc:	432c      	movi.n	a3, 36
400dd8fe:	1a6232        	s32i	a3, a2, 104
400dd901:	9c2132        	l32i	a3, a1, 0x270
400dd904:	9e2122        	l32i	a2, a1, 0x278
400dd907:	232a      	add.n	a2, a3, a2
400dd909:	fcc222        	addi	a2, a2, -4
400dd90c:	0238      	l32i.n	a3, a2, 0
400dd90e:	ae2182        	l32i	a8, a1, 0x2b8
400dd911:	0389      	s32i.n	a8, a3, 0
400dd913:	047d      	mov.n	a7, a4
400dd915:	fbac46        	j	400dc7ca <_svfprintf_r+0xa6>
400dd918:	a02192        	l32i	a9, a1, 0x280
400dd91b:	02e967        	bbsi	a9, 6, 400dd921 <_svfprintf_r+0x11fd>
400dd91e:	002f86        	j	400dd9e0 <_svfprintf_r+0x12bc>
400dd921:	972162        	l32i	a6, a1, 0x25c
400dd924:	14bc      	beqz.n	a4, 400dd959 <_svfprintf_r+0x1235>
400dd926:	0aa267        	bge	a2, a6, 400dd934 <_svfprintf_r+0x1210>
400dd929:	10c1a2        	addi	a10, a1, 16
400dd92c:	b022a0        	addx8	a2, a2, a10
400dd92f:	0238      	l32i.n	a3, a2, 0
400dd931:	0007c6        	j	400dd954 <_svfprintf_r+0x1230>
400dd934:	10c1e2        	addi	a14, a1, 16
400dd937:	48a232        	movi	a3, 0x248
400dd93a:	3e3a      	add.n	a3, a14, a3
400dd93c:	4ca2d2        	movi	a13, 0x24c
400dd93f:	60a2c2        	movi	a12, 0x260
400dd942:	0139      	s32i.n	a3, a1, 0
400dd944:	01def2        	addmi	a15, a14, 0x100
400dd947:	deda      	add.n	a13, a14, a13
400dd949:	ceca      	add.n	a12, a14, a12
400dd94b:	05bd      	mov.n	a11, a5
400dd94d:	02ad      	mov.n	a10, a2
400dd94f:	fe9565        	call8	400dc2a4 <get_arg$isra$0>
400dd952:	0a38      	l32i.n	a3, a10, 0
400dd954:	074d      	mov.n	a4, a7
400dd956:	001f06        	j	400dd9d6 <_svfprintf_r+0x12b2>
400dd959:	10c132        	addi	a3, a1, 16
400dd95c:	471b      	addi.n	a4, a7, 1
400dd95e:	b02230        	addx8	a2, a2, a3
400dd961:	6f2767        	blt	a7, a6, 400dd9d4 <_svfprintf_r+0x12b0>
400dd964:	f21c      	movi.n	a2, 31
400dd966:	3e2267        	blt	a2, a6, 400dd9a8 <_svfprintf_r+0x1284>
400dd969:	261b      	addi.n	a2, a6, 1
400dd96b:	10c152        	addi	a5, a1, 16
400dd96e:	976122        	s32i	a2, a1, 0x25c
400dd971:	02d522        	addmi	a2, a5, 0x200
400dd974:	1a2232        	l32i	a3, a2, 104
400dd977:	851c      	movi.n	a5, 24
400dd979:	734b      	addi.n	a7, a3, 4
400dd97b:	1a6272        	s32i	a7, a2, 104
400dd97e:	062577        	blt	a5, a7, 400dd988 <_svfprintf_r+0x1264>
400dd981:	192222        	l32i	a2, a2, 100
400dd984:	0002c6        	j	400dd993 <_svfprintf_r+0x126f>
400dd987:	253700        	extui	a3, a0, 23, 3
400dd98a:	432c04        	lsi	f0, a12, 0x10c
400dd98d:	1a6232        	s32i	a3, a2, 104
400dd990:	9c2122        	l32i	a2, a1, 0x270
400dd993:	9e2132        	l32i	a3, a1, 0x278
400dd996:	10c182        	addi	a8, a1, 16
400dd999:	323a      	add.n	a3, a2, a3
400dd99b:	fcc332        	addi	a3, a3, -4
400dd99e:	0338      	l32i.n	a3, a3, 0
400dd9a0:	b02680        	addx8	a2, a6, a8
400dd9a3:	0239      	s32i.n	a3, a2, 0
400dd9a5:	000b46        	j	400dd9d6 <_svfprintf_r+0x12b2>
400dd9a8:	10c192        	addi	a9, a1, 16
400dd9ab:	02d922        	addmi	a2, a9, 0x200
400dd9ae:	1a2232        	l32i	a3, a2, 104
400dd9b1:	851c      	movi.n	a5, 24
400dd9b3:	634b      	addi.n	a6, a3, 4
400dd9b5:	1a6262        	s32i	a6, a2, 104
400dd9b8:	052567        	blt	a5, a6, 400dd9c1 <_svfprintf_r+0x129d>
400dd9bb:	192232        	l32i	a3, a2, 100
400dd9be:	000286        	j	400dd9cc <_svfprintf_r+0x12a8>
400dd9c1:	042537        	blt	a5, a3, 400dd9c9 <_svfprintf_r+0x12a5>
400dd9c4:	432c      	movi.n	a3, 36
400dd9c6:	1a6232        	s32i	a3, a2, 104
400dd9c9:	9c2132        	l32i	a3, a1, 0x270
400dd9cc:	9e2122        	l32i	a2, a1, 0x278
400dd9cf:	232a      	add.n	a2, a3, a2
400dd9d1:	fcc222        	addi	a2, a2, -4
400dd9d4:	0238      	l32i.n	a3, a2, 0
400dd9d6:	ae2122        	l32i	a2, a1, 0x2b8
400dd9d9:	005322        	s16i	a2, a3, 0
400dd9dc:	ffccc6        	j	400dd913 <_svfprintf_r+0x11ef>
400dd9df:	216200        	srai	a6, a0, 2
400dd9e2:	2132a0        	srai	a3, a10, 2
400dd9e5:	e69797        	bne	a7, a9, 400dd9cf <_svfprintf_r+0x12ab>
400dd9e8:	2fc602        	addi	a0, a6, 47
400dd9eb:	44bc00        	extui	a11, a0, 12, 5
400dd9ee:	0aa237        	bge	a2, a3, 400dd9fc <_svfprintf_r+0x12d8>
400dd9f1:	10c182        	addi	a8, a1, 16
400dd9f4:	b02280        	addx8	a2, a2, a8
400dd9f7:	0248      	l32i.n	a4, a2, 0
400dd9f9:	000846        	j	400dda1e <_svfprintf_r+0x12fa>
400dd9fc:	10c192        	addi	a9, a1, 16
400dd9ff:	48a232        	movi	a3, 0x248
400dda02:	393a      	add.n	a3, a9, a3
400dda04:	4ca2d2        	movi	a13, 0x24c
400dda07:	60a2c2        	movi	a12, 0x260
400dda0a:	0139      	s32i.n	a3, a1, 0
400dda0c:	01d9f2        	addmi	a15, a9, 0x100
400dda0f:	09ed      	mov.n	a14, a9
400dda11:	d9da      	add.n	a13, a9, a13
400dda13:	c9ca      	add.n	a12, a9, a12
400dda15:	05bd      	mov.n	a11, a5
400dda17:	02ad      	mov.n	a10, a2
400dda19:	fe88a5        	call8	400dc2a4 <get_arg$isra$0>
400dda1c:	0a48      	l32i.n	a4, a10, 0
400dda1e:	075d      	mov.n	a5, a7
400dda20:	001f86        	j	400ddaa2 <_svfprintf_r+0x137e>
400dda23:	c1a200        	mul16u	a10, a2, a0
400dda26:	571b10        	lsi	f1, a11, 0x15c
400dda29:	b022a0        	addx8	a2, a2, a10
400dda2c:	702737        	blt	a7, a3, 400ddaa0 <_svfprintf_r+0x137c>
400dda2f:	f21c      	movi.n	a2, 31
400dda31:	3f2237        	blt	a2, a3, 400dda74 <_svfprintf_r+0x1350>
400dda34:	231b      	addi.n	a2, a3, 1
400dda36:	10c1e2        	addi	a14, a1, 16
400dda39:	976122        	s32i	a2, a1, 0x25c
400dda3c:	02de22        	addmi	a2, a14, 0x200
400dda3f:	1a2242        	l32i	a4, a2, 104
400dda42:	861c      	movi.n	a6, 24
400dda44:	744b      	addi.n	a7, a4, 4
400dda46:	1a6272        	s32i	a7, a2, 104
400dda49:	072677        	blt	a6, a7, 400dda54 <_svfprintf_r+0x1330>
400dda4c:	192242        	l32i	a4, a2, 100
400dda4f:	000306        	j	400dda5f <_svfprintf_r+0x133b>
400dda52:	470000        	lsi	f0, a0, 0x11c
400dda55:	2c0426        	beqi	a4, -1, 400dda85 <_svfprintf_r+0x1361>
400dda58:	624244        	lsi	f4, a2, 0x188
400dda5b:	421a      	add.n	a4, a2, a1
400dda5d:	229c21        	l32r	a2, 400a64d0 <_iram_end+0x1897c>
400dda60:	629e21        	l32r	a2, 400b64d8 <_iram_end+0x28984>
400dda63:	2a10c1        	l32r	a12, 400a82a4 <_iram_end+0x1a750>
400dda66:	c22224        	lsi	f2, a2, 0x308
400dda69:	48fc      	bnez.n	a8, 400ddaa1 <_svfprintf_r+0x137d>
400dda6b:	236002        	s32i	a0, a0, 140
400dda6e:	0249b0        	andb	b4, b9, b11
400dda71:	000b46        	j	400ddaa2 <_svfprintf_r+0x137e>
400dda74:	10c182        	addi	a8, a1, 16
400dda77:	02d822        	addmi	a2, a8, 0x200
400dda7a:	1a2232        	l32i	a3, a2, 104
400dda7d:	841c      	movi.n	a4, 24
400dda7f:	634b      	addi.n	a6, a3, 4
400dda81:	1a6262        	s32i	a6, a2, 104
400dda84:	052467        	blt	a4, a6, 400dda8d <_svfprintf_r+0x1369>
400dda87:	192232        	l32i	a3, a2, 100
400dda8a:	000286        	j	400dda98 <_svfprintf_r+0x1374>
400dda8d:	042437        	blt	a4, a3, 400dda95 <_svfprintf_r+0x1371>
400dda90:	432c      	movi.n	a3, 36
400dda92:	1a6232        	s32i	a3, a2, 104
400dda95:	9c2132        	l32i	a3, a1, 0x270
400dda98:	9e2122        	l32i	a2, a1, 0x278
400dda9b:	232a      	add.n	a2, a3, a2
400dda9d:	fcc222        	addi	a2, a2, -4
400ddaa0:	0248      	l32i.n	a4, a2, 0
400ddaa2:	ae2192        	l32i	a9, a1, 0x2b8
400ddaa5:	004492        	s8i	a9, a4, 0
400ddaa8:	002ec6        	j	400ddb67 <_svfprintf_r+0x1443>
400ddaab:	14bc00        	extui	a11, a0, 12, 2
400ddaae:	0aa237        	bge	a2, a3, 400ddabc <_svfprintf_r+0x1398>
400ddab1:	10c1a2        	addi	a10, a1, 16
400ddab4:	b022a0        	addx8	a2, a2, a10
400ddab7:	0248      	l32i.n	a4, a2, 0
400ddab9:	0007c6        	j	400ddadc <_svfprintf_r+0x13b8>
400ddabc:	10c1e2        	addi	a14, a1, 16
400ddabf:	48a232        	movi	a3, 0x248
400ddac2:	3e3a      	add.n	a3, a14, a3
400ddac4:	4ca2d2        	movi	a13, 0x24c
400ddac7:	60a2c2        	movi	a12, 0x260
400ddaca:	0139      	s32i.n	a3, a1, 0
400ddacc:	01def2        	addmi	a15, a14, 0x100
400ddacf:	deda      	add.n	a13, a14, a13
400ddad1:	ceca      	add.n	a12, a14, a12
400ddad3:	05bd      	mov.n	a11, a5
400ddad5:	02ad      	mov.n	a10, a2
400ddad7:	fe7ce5        	call8	400dc2a4 <get_arg$isra$0>
400ddada:	0a48      	l32i.n	a4, a10, 0
400ddadc:	075d      	mov.n	a5, a7
400ddade:	002006        	j	400ddb62 <_svfprintf_r+0x143e>
400ddae1:	571b      	addi.n	a5, a7, 1
400ddae3:	09a737        	bge	a7, a3, 400ddaf0 <_svfprintf_r+0x13cc>
400ddae6:	10c132        	addi	a3, a1, 16
400ddae9:	b02230        	addx8	a2, a2, a3
400ddaec:	001c06        	j	400ddb60 <_svfprintf_r+0x143c>
400ddaef:	f21c00        	rems	a1, a12, a0
400ddaf2:	3e2237        	blt	a2, a3, 400ddb34 <_svfprintf_r+0x1410>
400ddaf5:	231b      	addi.n	a2, a3, 1
400ddaf7:	10c142        	addi	a4, a1, 16
400ddafa:	976122        	s32i	a2, a1, 0x25c
400ddafd:	02d422        	addmi	a2, a4, 0x200
400ddb00:	1a2242        	l32i	a4, a2, 104
400ddb03:	861c      	movi.n	a6, 24
400ddb05:	744b      	addi.n	a7, a4, 4
400ddb07:	1a6272        	s32i	a7, a2, 104
400ddb0a:	062677        	blt	a6, a7, 400ddb14 <_svfprintf_r+0x13f0>
400ddb0d:	192242        	l32i	a4, a2, 100
400ddb10:	0002c6        	j	400ddb1f <_svfprintf_r+0x13fb>
400ddb13:	264700        	lsi	f0, a7, 152
400ddb16:	442c04        	lsi	f0, a12, 0x110
400ddb19:	1a6242        	s32i	a4, a2, 104
400ddb1c:	9c2142        	l32i	a4, a1, 0x270
400ddb1f:	9e2122        	l32i	a2, a1, 0x278
400ddb22:	10c162        	addi	a6, a1, 16
400ddb25:	242a      	add.n	a2, a4, a2
400ddb27:	fcc222        	addi	a2, a2, -4
400ddb2a:	0248      	l32i.n	a4, a2, 0
400ddb2c:	b02360        	addx8	a2, a3, a6
400ddb2f:	0249      	s32i.n	a4, a2, 0
400ddb31:	000b46        	j	400ddb62 <_svfprintf_r+0x143e>
400ddb34:	10c182        	addi	a8, a1, 16
400ddb37:	02d822        	addmi	a2, a8, 0x200
400ddb3a:	1a2232        	l32i	a3, a2, 104
400ddb3d:	841c      	movi.n	a4, 24
400ddb3f:	634b      	addi.n	a6, a3, 4
400ddb41:	1a6262        	s32i	a6, a2, 104
400ddb44:	052467        	blt	a4, a6, 400ddb4d <_svfprintf_r+0x1429>
400ddb47:	192232        	l32i	a3, a2, 100
400ddb4a:	000286        	j	400ddb58 <_svfprintf_r+0x1434>
400ddb4d:	042437        	blt	a4, a3, 400ddb55 <_svfprintf_r+0x1431>
400ddb50:	432c      	movi.n	a3, 36
400ddb52:	1a6232        	s32i	a3, a2, 104
400ddb55:	9c2132        	l32i	a3, a1, 0x270
400ddb58:	9e2122        	l32i	a2, a1, 0x278
400ddb5b:	232a      	add.n	a2, a3, a2
400ddb5d:	fcc222        	addi	a2, a2, -4
400ddb60:	0248      	l32i.n	a4, a2, 0
400ddb62:	ae2192        	l32i	a9, a1, 0x2b8
400ddb65:	0499      	s32i.n	a9, a4, 0
400ddb67:	057d      	mov.n	a7, a5
400ddb69:	fb1746        	j	400dc7ca <_svfprintf_r+0xa6>
400ddb6c:	a02162        	l32i	a6, a1, 0x280
400ddb6f:	031c      	movi.n	a3, 16
400ddb71:	206630        	or	a6, a6, a3
400ddb74:	a06162        	s32i	a6, a1, 0x280
400ddb77:	a02182        	l32i	a8, a1, 0x280
400ddb7a:	02e857        	bbsi	a8, 5, 400ddb80 <_svfprintf_r+0x145c>
400ddb7d:	0034c6        	j	400ddc54 <_svfprintf_r+0x1530>
400ddb80:	972162        	l32i	a6, a1, 0x25c
400ddb83:	54bc      	beqz.n	a4, 400ddbbc <_svfprintf_r+0x1498>
400ddb85:	0ca267        	bge	a2, a6, 400ddb95 <_svfprintf_r+0x1471>
400ddb88:	10c192        	addi	a9, a1, 16
400ddb8b:	b02290        	addx8	a2, a2, a9
400ddb8e:	0258      	l32i.n	a5, a2, 0
400ddb90:	1238      	l32i.n	a3, a2, 4
400ddb92:	00ed06        	j	400ddf4a <_svfprintf_r+0x1826>
400ddb95:	10c1a2        	addi	a10, a1, 16
400ddb98:	48a232        	movi	a3, 0x248
400ddb9b:	3a3a      	add.n	a3, a10, a3
400ddb9d:	4ca2d2        	movi	a13, 0x24c
400ddba0:	60a2c2        	movi	a12, 0x260
400ddba3:	0139      	s32i.n	a3, a1, 0
400ddba5:	01daf2        	addmi	a15, a10, 0x100
400ddba8:	0aed      	mov.n	a14, a10
400ddbaa:	dada      	add.n	a13, a10, a13
400ddbac:	caca      	add.n	a12, a10, a12
400ddbae:	05bd      	mov.n	a11, a5
400ddbb0:	02ad      	mov.n	a10, a2
400ddbb2:	fe6f25        	call8	400dc2a4 <get_arg$isra$0>
400ddbb5:	0a58      	l32i.n	a5, a10, 0
400ddbb7:	1a38      	l32i.n	a3, a10, 4
400ddbb9:	00e346        	j	400ddf4a <_svfprintf_r+0x1826>
400ddbbc:	10c1e2        	addi	a14, a1, 16
400ddbbf:	471b      	addi.n	a4, a7, 1
400ddbc1:	b022e0        	addx8	a2, a2, a14
400ddbc4:	02a767        	bge	a7, a6, 400ddbca <_svfprintf_r+0x14a6>
400ddbc7:	002046        	j	400ddc4c <_svfprintf_r+0x1528>
400ddbca:	f21c      	movi.n	a2, 31
400ddbcc:	482267        	blt	a2, a6, 400ddc18 <_svfprintf_r+0x14f4>
400ddbcf:	261b      	addi.n	a2, a6, 1
400ddbd1:	10c132        	addi	a3, a1, 16
400ddbd4:	976122        	s32i	a2, a1, 0x25c
400ddbd7:	02d322        	addmi	a2, a3, 0x200
400ddbda:	1a2232        	l32i	a3, a2, 104
400ddbdd:	537b      	addi.n	a5, a3, 7
400ddbdf:	837c      	movi.n	a3, -8
400ddbe1:	103530        	and	a3, a5, a3
400ddbe4:	738b      	addi.n	a7, a3, 8
400ddbe6:	1a6272        	s32i	a7, a2, 104
400ddbe9:	851c      	movi.n	a5, 24
400ddbeb:	052577        	blt	a5, a7, 400ddbf4 <_svfprintf_r+0x14d0>
400ddbee:	192232        	l32i	a3, a2, 100
400ddbf1:	000286        	j	400ddbff <_svfprintf_r+0x14db>
400ddbf4:	042537        	blt	a5, a3, 400ddbfc <_svfprintf_r+0x14d8>
400ddbf7:	832c      	movi.n	a3, 40
400ddbf9:	1a6232        	s32i	a3, a2, 104
400ddbfc:	9c2132        	l32i	a3, a1, 0x270
400ddbff:	9e2122        	l32i	a2, a1, 0x278
400ddc02:	10c182        	addi	a8, a1, 16
400ddc05:	232a      	add.n	a2, a3, a2
400ddc07:	f8c222        	addi	a2, a2, -8
400ddc0a:	0258      	l32i.n	a5, a2, 0
400ddc0c:	1238      	l32i.n	a3, a2, 4
400ddc0e:	b02680        	addx8	a2, a6, a8
400ddc11:	0259      	s32i.n	a5, a2, 0
400ddc13:	1239      	s32i.n	a3, a2, 4
400ddc15:	00cbc6        	j	400ddf48 <_svfprintf_r+0x1824>
400ddc18:	10c192        	addi	a9, a1, 16
400ddc1b:	02d922        	addmi	a2, a9, 0x200
400ddc1e:	1a2232        	l32i	a3, a2, 104
400ddc21:	537b      	addi.n	a5, a3, 7
400ddc23:	837c      	movi.n	a3, -8
400ddc25:	103530        	and	a3, a5, a3
400ddc28:	638b      	addi.n	a6, a3, 8
400ddc2a:	1a6262        	s32i	a6, a2, 104
400ddc2d:	851c      	movi.n	a5, 24
400ddc2f:	062567        	blt	a5, a6, 400ddc39 <_svfprintf_r+0x1515>
400ddc32:	192232        	l32i	a3, a2, 100
400ddc35:	0002c6        	j	400ddc44 <_svfprintf_r+0x1520>
400ddc38:	253700        	extui	a3, a0, 23, 3
400ddc3b:	832c04        	lsi	f0, a12, 0x20c
400ddc3e:	1a6232        	s32i	a3, a2, 104
400ddc41:	9c2132        	l32i	a3, a1, 0x270
400ddc44:	9e2122        	l32i	a2, a1, 0x278
400ddc47:	232a      	add.n	a2, a3, a2
400ddc49:	f8c222        	addi	a2, a2, -8
400ddc4c:	0258      	l32i.n	a5, a2, 0
400ddc4e:	1238      	l32i.n	a3, a2, 4
400ddc50:	00bd06        	j	400ddf48 <_svfprintf_r+0x1824>
400ddc53:	213200        	srai	a3, a0, 2
400ddc56:	061ca0        	lsi	f10, a12, 24
400ddc59:	106360        	and	a6, a3, a6
400ddc5c:	07d616        	beqz	a6, 400ddcdd <_svfprintf_r+0x15b9>
400ddc5f:	972162        	l32i	a6, a1, 0x25c
400ddc62:	e49c      	beqz.n	a4, 400ddc84 <_svfprintf_r+0x1560>
400ddc64:	08a267        	bge	a2, a6, 400ddc70 <_svfprintf_r+0x154c>
400ddc67:	10c142        	addi	a4, a1, 16
400ddc6a:	b02240        	addx8	a2, a2, a4
400ddc6d:	008a06        	j	400dde99 <_svfprintf_r+0x1775>
400ddc70:	10c162        	addi	a6, a1, 16
400ddc73:	48a232        	movi	a3, 0x248
400ddc76:	363a      	add.n	a3, a6, a3
400ddc78:	0139      	s32i.n	a3, a1, 0
400ddc7a:	01d6f2        	addmi	a15, a6, 0x100
400ddc7d:	06ed      	mov.n	a14, a6
400ddc7f:	008b06        	j	400ddeaf <_svfprintf_r+0x178b>
400ddc82:	820000        	mull	a0, a0, a0
400ddc85:	1b10c1        	l32r	a12, 400a48c8 <_iram_end+0x16d74>
400ddc88:	228047        	bany	a0, a4, 400ddcae <_svfprintf_r+0x158a>
400ddc8b:	a767b0        	lsi	f11, a7, 0x29c
400ddc8e:	ac4602        	s8i	a0, a6, 172
400ddc91:	f21c00        	rems	a1, a12, a0
400ddc94:	3c2267        	blt	a2, a6, 400ddcd4 <_svfprintf_r+0x15b0>
400ddc97:	261b      	addi.n	a2, a6, 1
400ddc99:	10c192        	addi	a9, a1, 16
400ddc9c:	976122        	s32i	a2, a1, 0x25c
400ddc9f:	02d922        	addmi	a2, a9, 0x200
400ddca2:	1a2232        	l32i	a3, a2, 104
400ddca5:	851c      	movi.n	a5, 24
400ddca7:	734b      	addi.n	a7, a3, 4
400ddca9:	1a6272        	s32i	a7, a2, 104
400ddcac:	052577        	blt	a5, a7, 400ddcb5 <_svfprintf_r+0x1591>
400ddcaf:	192222        	l32i	a2, a2, 100
400ddcb2:	000286        	j	400ddcc0 <_svfprintf_r+0x159c>
400ddcb5:	042537        	blt	a5, a3, 400ddcbd <_svfprintf_r+0x1599>
400ddcb8:	432c      	movi.n	a3, 36
400ddcba:	1a6232        	s32i	a3, a2, 104
400ddcbd:	9c2122        	l32i	a2, a1, 0x270
400ddcc0:	9e2132        	l32i	a3, a1, 0x278
400ddcc3:	10c1a2        	addi	a10, a1, 16
400ddcc6:	323a      	add.n	a3, a2, a3
400ddcc8:	fcc332        	addi	a3, a3, -4
400ddccb:	0358      	l32i.n	a5, a3, 0
400ddccd:	b026a0        	addx8	a2, a6, a10
400ddcd0:	008fc6        	j	400ddf13 <_svfprintf_r+0x17ef>
400ddcd3:	c1e200        	mul16u	a14, a2, a0
400ddcd6:	de2210        	f64iter	a2, a2, a1, 1, 1
400ddcd9:	900602        	l8ui	a0, a6, 144
400ddcdc:	218200        	srai	a8, a0, 2
400ddcdf:	034ca0        	lsi	f10, a12, 12
400ddce2:	103830        	and	a3, a8, a3
400ddce5:	0cf316        	beqz	a3, 400dddb8 <_svfprintf_r+0x1694>
400ddce8:	972182        	l32i	a8, a1, 0x25c
400ddceb:	54bc      	beqz.n	a4, 400ddd24 <_svfprintf_r+0x1600>
400ddced:	0ba287        	bge	a2, a8, 400ddcfc <_svfprintf_r+0x15d8>
400ddcf0:	10c192        	addi	a9, a1, 16
400ddcf3:	b02290        	addx8	a2, a2, a9
400ddcf6:	001252        	l16ui	a5, a2, 0
400ddcf9:	000886        	j	400ddd1f <_svfprintf_r+0x15fb>
400ddcfc:	10c1a2        	addi	a10, a1, 16
400ddcff:	48a232        	movi	a3, 0x248
400ddd02:	3a3a      	add.n	a3, a10, a3
400ddd04:	4ca2d2        	movi	a13, 0x24c
400ddd07:	60a2c2        	movi	a12, 0x260
400ddd0a:	01daf2        	addmi	a15, a10, 0x100
400ddd0d:	0aed      	mov.n	a14, a10
400ddd0f:	dada      	add.n	a13, a10, a13
400ddd11:	caca      	add.n	a12, a10, a12
400ddd13:	05bd      	mov.n	a11, a5
400ddd15:	0139      	s32i.n	a3, a1, 0
400ddd17:	02ad      	mov.n	a10, a2
400ddd19:	fe58a5        	call8	400dc2a4 <get_arg$isra$0>
400ddd1c:	001a52        	l16ui	a5, a10, 0
400ddd1f:	063d      	mov.n	a3, a6
400ddd21:	008946        	j	400ddf4a <_svfprintf_r+0x1826>
400ddd24:	671b      	addi.n	a6, a7, 1
400ddd26:	0da787        	bge	a7, a8, 400ddd37 <_svfprintf_r+0x1613>
400ddd29:	10c1e2        	addi	a14, a1, 16
400ddd2c:	b022e0        	addx8	a2, a2, a14
400ddd2f:	001252        	l16ui	a5, a2, 0
400ddd32:	043d      	mov.n	a3, a4
400ddd34:	001e46        	j	400dddb1 <_svfprintf_r+0x168d>
400ddd37:	f21c      	movi.n	a2, 31
400ddd39:	432287        	blt	a2, a8, 400ddd80 <_svfprintf_r+0x165c>
400ddd3c:	281b      	addi.n	a2, a8, 1
400ddd3e:	10c132        	addi	a3, a1, 16
400ddd41:	976122        	s32i	a2, a1, 0x25c
400ddd44:	02d322        	addmi	a2, a3, 0x200
400ddd47:	1a2232        	l32i	a3, a2, 104
400ddd4a:	841c      	movi.n	a4, 24
400ddd4c:	534b      	addi.n	a5, a3, 4
400ddd4e:	1a6252        	s32i	a5, a2, 104
400ddd51:	072457        	blt	a4, a5, 400ddd5c <_svfprintf_r+0x1638>
400ddd54:	192222        	l32i	a2, a2, 100
400ddd57:	000306        	j	400ddd67 <_svfprintf_r+0x1643>
400ddd5a:	370000        	lsi	f0, a0, 220
400ddd5d:	2c0424        	lsi	f2, a4, 176
400ddd60:	623243        	lsi	f4, a2, 0x188
400ddd63:	221a      	add.n	a2, a2, a1
400ddd65:	329c21        	l32r	a2, 400aa7d8 <_iram_end+0x1cc84>
400ddd68:	429e21        	l32r	a2, 400ae7e0 <_iram_end+0x20c8c>
400ddd6b:	3a10c1        	l32r	a12, 400ac5ac <_iram_end+0x1ea58>
400ddd6e:	c33232        	lsi	f3, a2, 0x30c
400ddd71:	58fc      	bnez.n	a8, 400dddaa <_svfprintf_r+0x1686>
400ddd73:	284003        	ssi	f0, a0, 160
400ddd76:	0259b0        	andb	b5, b9, b11
400ddd79:	f45050        	extui	a5, a5, 0, 16
400ddd7c:	000bc6        	j	400dddaf <_svfprintf_r+0x168b>
400ddd7f:	c15200        	mul16u	a5, a2, a0
400ddd82:	d52210        	extui	a2, a1, 18, 14
400ddd85:	223202        	lsi	f0, a2, 136
400ddd88:	1c1a      	add.n	a1, a12, a1
400ddd8a:	534b84        	lsi	f8, a11, 0x14c
400ddd8d:	1a6252        	s32i	a5, a2, 104
400ddd90:	052457        	blt	a4, a5, 400ddd99 <_svfprintf_r+0x1675>
400ddd93:	192232        	l32i	a3, a2, 100
400ddd96:	000286        	j	400ddda4 <_svfprintf_r+0x1680>
400ddd99:	042437        	blt	a4, a3, 400ddda1 <_svfprintf_r+0x167d>
400ddd9c:	432c      	movi.n	a3, 36
400ddd9e:	1a6232        	s32i	a3, a2, 104
400ddda1:	9c2132        	l32i	a3, a1, 0x270
400ddda4:	9e2122        	l32i	a2, a1, 0x278
400ddda7:	232a      	add.n	a2, a3, a2
400ddda9:	fcc222        	addi	a2, a2, -4
400dddac:	001252        	l16ui	a5, a2, 0
400dddaf:	030c      	movi.n	a3, 0
400dddb1:	067d      	mov.n	a7, a6
400dddb3:	0064c6        	j	400ddf4a <_svfprintf_r+0x1826>
400dddb6:	820000        	mull	a0, a0, a0
400dddb9:	62a021        	l32r	a2, 400b683c <_iram_end+0x28ce8>
400dddbc:	979721        	l32r	a2, 400c3c18 <_rtc_text_end+0x3c18>
400dddbf:	02e8      	l32i.n	a14, a2, 0
400dddc1:	003246        	j	400dde8e <_svfprintf_r+0x176a>
400dddc4:	44bc      	beqz.n	a4, 400dddfc <_svfprintf_r+0x16d8>
400dddc6:	0ba267        	bge	a2, a6, 400dddd5 <_svfprintf_r+0x16b1>
400dddc9:	10c192        	addi	a9, a1, 16
400dddcc:	b02290        	addx8	a2, a2, a9
400dddcf:	000252        	l8ui	a5, a2, 0
400dddd2:	005d06        	j	400ddf4a <_svfprintf_r+0x1826>
400dddd5:	10c1a2        	addi	a10, a1, 16
400dddd8:	48a242        	movi	a4, 0x248
400ddddb:	4a4a      	add.n	a4, a10, a4
400ddddd:	4ca2d2        	movi	a13, 0x24c
400ddde0:	60a2c2        	movi	a12, 0x260
400ddde3:	01daf2        	addmi	a15, a10, 0x100
400ddde6:	0aed      	mov.n	a14, a10
400ddde8:	dada      	add.n	a13, a10, a13
400dddea:	caca      	add.n	a12, a10, a12
400dddec:	05bd      	mov.n	a11, a5
400dddee:	0149      	s32i.n	a4, a1, 0
400dddf0:	02ad      	mov.n	a10, a2
400dddf2:	fe4b25        	call8	400dc2a4 <get_arg$isra$0>
400dddf5:	000a52        	l8ui	a5, a10, 0
400dddf8:	005386        	j	400ddf4a <_svfprintf_r+0x1826>
400dddfb:	871b00        	lsi	f0, a11, 0x21c
400dddfe:	0ea767        	bge	a7, a6, 400dde10 <_svfprintf_r+0x16ec>
400dde01:	10c1e2        	addi	a14, a1, 16
400dde04:	b022e0        	addx8	a2, a2, a14
400dde07:	000252        	l8ui	a5, a2, 0
400dde0a:	043d      	mov.n	a3, a4
400dde0c:	001e46        	j	400dde89 <_svfprintf_r+0x1765>
400dde0f:	f21c00        	rems	a1, a12, a0
400dde12:	422267        	blt	a2, a6, 400dde58 <_svfprintf_r+0x1734>
400dde15:	261b      	addi.n	a2, a6, 1
400dde17:	10c132        	addi	a3, a1, 16
400dde1a:	976122        	s32i	a2, a1, 0x25c
400dde1d:	02d322        	addmi	a2, a3, 0x200
400dde20:	1a2232        	l32i	a3, a2, 104
400dde23:	841c      	movi.n	a4, 24
400dde25:	534b      	addi.n	a5, a3, 4
400dde27:	1a6252        	s32i	a5, a2, 104
400dde2a:	062457        	blt	a4, a5, 400dde34 <_svfprintf_r+0x1710>
400dde2d:	192232        	l32i	a3, a2, 100
400dde30:	0002c6        	j	400dde3f <_svfprintf_r+0x171b>
400dde33:	243700        	extui	a3, a0, 7, 3
400dde36:	432c04        	lsi	f0, a12, 0x10c
400dde39:	1a6232        	s32i	a3, a2, 104
400dde3c:	9c2132        	l32i	a3, a1, 0x270
400dde3f:	9e2122        	l32i	a2, a1, 0x278
400dde42:	10c142        	addi	a4, a1, 16
400dde45:	232a      	add.n	a2, a3, a2
400dde47:	fcc222        	addi	a2, a2, -4
400dde4a:	0258      	l32i.n	a5, a2, 0
400dde4c:	b02640        	addx8	a2, a6, a4
400dde4f:	0259      	s32i.n	a5, a2, 0
400dde51:	745050        	extui	a5, a5, 0, 8
400dde54:	000bc6        	j	400dde87 <_svfprintf_r+0x1763>
400dde57:	c15200        	mul16u	a5, a2, a0
400dde5a:	d52210        	extui	a2, a1, 18, 14
400dde5d:	223202        	lsi	f0, a2, 136
400dde60:	1c1a      	add.n	a1, a12, a1
400dde62:	534b84        	lsi	f8, a11, 0x14c
400dde65:	1a6252        	s32i	a5, a2, 104
400dde68:	052457        	blt	a4, a5, 400dde71 <_svfprintf_r+0x174d>
400dde6b:	192232        	l32i	a3, a2, 100
400dde6e:	000286        	j	400dde7c <_svfprintf_r+0x1758>
400dde71:	042437        	blt	a4, a3, 400dde79 <_svfprintf_r+0x1755>
400dde74:	432c      	movi.n	a3, 36
400dde76:	1a6232        	s32i	a3, a2, 104
400dde79:	9c2132        	l32i	a3, a1, 0x270
400dde7c:	9e2122        	l32i	a2, a1, 0x278
400dde7f:	232a      	add.n	a2, a3, a2
400dde81:	fcc222        	addi	a2, a2, -4
400dde84:	000252        	l8ui	a5, a2, 0
400dde87:	030c      	movi.n	a3, 0
400dde89:	087d      	mov.n	a7, a8
400dde8b:	002ec6        	j	400ddf4a <_svfprintf_r+0x1826>
400dde8e:	64bc      	beqz.n	a4, 400ddec8 <_svfprintf_r+0x17a4>
400dde90:	0ca267        	bge	a2, a6, 400ddea0 <_svfprintf_r+0x177c>
400dde93:	10c162        	addi	a6, a1, 16
400dde96:	b02260        	addx8	a2, a2, a6
400dde99:	0258      	l32i.n	a5, a2, 0
400dde9b:	0008c6        	j	400ddec2 <_svfprintf_r+0x179e>
400dde9e:	820000        	mull	a0, a0, a0
400ddea1:	3210c1        	l32r	a12, 400aa6e4 <_iram_end+0x1cb90>
400ddea4:	3a48a2        	s8i	a10, a8, 58
400ddea7:	3938      	l32i.n	a3, a9, 12
400ddea9:	d8f201        	l32r	a0, 400d4274 <String::reserve(unsigned int)+0x74>
400ddeac:	08ed01        	l32r	a0, 400a0260 <_iram_end+0x1270c>
400ddeaf:	4ca2d2        	movi	a13, 0x24c
400ddeb2:	60a2c2        	movi	a12, 0x260
400ddeb5:	05bd      	mov.n	a11, a5
400ddeb7:	deda      	add.n	a13, a14, a13
400ddeb9:	ceca      	add.n	a12, a14, a12
400ddebb:	02ad      	mov.n	a10, a2
400ddebd:	fe3e65        	call8	400dc2a4 <get_arg$isra$0>
400ddec0:	0a58      	l32i.n	a5, a10, 0
400ddec2:	074d      	mov.n	a4, a7
400ddec4:	001f86        	j	400ddf46 <_svfprintf_r+0x1822>
400ddec7:	c19200        	mul16u	a9, a2, a0
400ddeca:	471b10        	lsi	f1, a11, 0x11c
400ddecd:	b02290        	addx8	a2, a2, a9
400dded0:	702767        	blt	a7, a6, 400ddf44 <_svfprintf_r+0x1820>
400dded3:	f21c      	movi.n	a2, 31
400dded5:	3f2267        	blt	a2, a6, 400ddf18 <_svfprintf_r+0x17f4>
400dded8:	261b      	addi.n	a2, a6, 1
400ddeda:	10c1a2        	addi	a10, a1, 16
400ddedd:	976122        	s32i	a2, a1, 0x25c
400ddee0:	02da22        	addmi	a2, a10, 0x200
400ddee3:	1a2232        	l32i	a3, a2, 104
400ddee6:	851c      	movi.n	a5, 24
400ddee8:	734b      	addi.n	a7, a3, 4
400ddeea:	1a6272        	s32i	a7, a2, 104
400ddeed:	072577        	blt	a5, a7, 400ddef8 <_svfprintf_r+0x17d4>
400ddef0:	192232        	l32i	a3, a2, 100
400ddef3:	000306        	j	400ddf03 <_svfprintf_r+0x17df>
400ddef6:	370000        	lsi	f0, a0, 220
400ddef9:	2c0425        	call8	40109f3c <_etext+0x1d65f>
400ddefc:	623243        	lsi	f4, a2, 0x188
400ddeff:	321a      	add.n	a3, a2, a1
400ddf01:	229c21        	l32r	a2, 400a6974 <_iram_end+0x18e20>
400ddf04:	e29e21        	l32r	a2, 400d697c <esp_dport_access_int_init+0x24>
400ddf07:	2a10c1        	l32r	a12, 400a8748 <_iram_end+0x1abf4>
400ddf0a:	c22223        	lsi	f2, a2, 0x308
400ddf0d:	58fc      	bnez.n	a8, 400ddf46 <_svfprintf_r+0x1822>
400ddf0f:	26e002        	s32c1i	a0, a0, 152
400ddf12:	0259b0        	andb	b5, b9, b11
400ddf15:	000b46        	j	400ddf46 <_svfprintf_r+0x1822>
400ddf18:	10c132        	addi	a3, a1, 16
400ddf1b:	02d322        	addmi	a2, a3, 0x200
400ddf1e:	1a2232        	l32i	a3, a2, 104
400ddf21:	851c      	movi.n	a5, 24
400ddf23:	634b      	addi.n	a6, a3, 4
400ddf25:	1a6262        	s32i	a6, a2, 104
400ddf28:	052567        	blt	a5, a6, 400ddf31 <_svfprintf_r+0x180d>
400ddf2b:	192232        	l32i	a3, a2, 100
400ddf2e:	000286        	j	400ddf3c <_svfprintf_r+0x1818>
400ddf31:	042537        	blt	a5, a3, 400ddf39 <_svfprintf_r+0x1815>
400ddf34:	432c      	movi.n	a3, 36
400ddf36:	1a6232        	s32i	a3, a2, 104
400ddf39:	9c2132        	l32i	a3, a1, 0x270
400ddf3c:	9e2122        	l32i	a2, a1, 0x278
400ddf3f:	232a      	add.n	a2, a3, a2
400ddf41:	fcc222        	addi	a2, a2, -4
400ddf44:	0258      	l32i.n	a5, a2, 0
400ddf46:	030c      	movi.n	a3, 0
400ddf48:	047d      	mov.n	a7, a4
400ddf4a:	a02142        	l32i	a4, a1, 0x280
400ddf4d:	ffab22        	movi	a2, 0xfffffbff
400ddf50:	104420        	and	a4, a4, a2
400ddf53:	a06142        	s32i	a4, a1, 0x280
400ddf56:	020c      	movi.n	a2, 0
400ddf58:	027c06        	j	400de94c <_svfprintf_r+0x2228>
400ddf5b:	620000        	lsi	f0, a0, 0x188
400ddf5e:	bc9721        	l32r	a2, 400cd1bc <_rtc_text_end+0xd1bc>
400ddf61:	a26744        	lsi	f4, a7, 0x288
400ddf64:	520a      	add.n	a5, a2, a0
400ddf66:	5010c1        	l32r	a12, 400b1fa8 <_iram_end+0x24454>
400ddf69:	58b022        	l32ai	a2, a0, 0x160
400ddf6c:	084602        	s8i	a0, a6, 8
400ddf6f:	c16200        	mul16u	a6, a2, a0
400ddf72:	a23210        	muluh	a3, a2, a1
400ddf75:	3a48      	l32i.n	a4, a10, 12
400ddf77:	a2d236        	entry	a2, 0x5168
400ddf7a:	c24c      	movi.n	a2, 76
400ddf7c:	bd60a2        	s32i	a10, a0, 0x2f4
400ddf7f:	013905        	call0	400df310 <_svfprintf_r+0x2bec>
400ddf82:	01d6f2        	addmi	a15, a6, 0x100
400ddf85:	06ed      	mov.n	a14, a6
400ddf87:	d6da      	add.n	a13, a6, a13
400ddf89:	c6ca      	add.n	a12, a6, a12
400ddf8b:	02ad      	mov.n	a10, a2
400ddf8d:	fe3165        	call8	400dc2a4 <get_arg$isra$0>
400ddf90:	0a58      	l32i.n	a5, a10, 0
400ddf92:	074d      	mov.n	a4, a7
400ddf94:	001f86        	j	400de016 <_svfprintf_r+0x18f2>
400ddf97:	c18200        	mul16u	a8, a2, a0
400ddf9a:	471b10        	lsi	f1, a11, 0x11c
400ddf9d:	b02280        	addx8	a2, a2, a8
400ddfa0:	702767        	blt	a7, a6, 400de014 <_svfprintf_r+0x18f0>
400ddfa3:	f21c      	movi.n	a2, 31
400ddfa5:	3f2267        	blt	a2, a6, 400ddfe8 <_svfprintf_r+0x18c4>
400ddfa8:	261b      	addi.n	a2, a6, 1
400ddfaa:	10c192        	addi	a9, a1, 16
400ddfad:	976122        	s32i	a2, a1, 0x25c
400ddfb0:	02d922        	addmi	a2, a9, 0x200
400ddfb3:	1a2232        	l32i	a3, a2, 104
400ddfb6:	851c      	movi.n	a5, 24
400ddfb8:	734b      	addi.n	a7, a3, 4
400ddfba:	1a6272        	s32i	a7, a2, 104
400ddfbd:	072577        	blt	a5, a7, 400ddfc8 <_svfprintf_r+0x18a4>
400ddfc0:	192222        	l32i	a2, a2, 100
400ddfc3:	000306        	j	400ddfd3 <_svfprintf_r+0x18af>
400ddfc6:	370000        	lsi	f0, a0, 220
400ddfc9:	2c0425        	call8	4010a00c <_etext+0x1d72f>
400ddfcc:	623243        	lsi	f4, a2, 0x188
400ddfcf:	221a      	add.n	a2, a2, a1
400ddfd1:	329c21        	l32r	a2, 400aaa44 <_iram_end+0x1cef0>
400ddfd4:	a29e21        	l32r	a2, 400c6a4c <_rtc_text_end+0x6a4c>
400ddfd7:	3a10c1        	l32r	a12, 400ac818 <_iram_end+0x1ecc4>
400ddfda:	c33232        	lsi	f3, a2, 0x30c
400ddfdd:	58fc      	bnez.n	a8, 400de016 <_svfprintf_r+0x18f2>
400ddfdf:	26a003        	lsi	f0, a0, 152
400ddfe2:	0259b0        	andb	b5, b9, b11
400ddfe5:	000b46        	j	400de016 <_svfprintf_r+0x18f2>
400ddfe8:	10c1e2        	addi	a14, a1, 16
400ddfeb:	02de22        	addmi	a2, a14, 0x200
400ddfee:	1a2232        	l32i	a3, a2, 104
400ddff1:	851c      	movi.n	a5, 24
400ddff3:	634b      	addi.n	a6, a3, 4
400ddff5:	1a6262        	s32i	a6, a2, 104
400ddff8:	052567        	blt	a5, a6, 400de001 <_svfprintf_r+0x18dd>
400ddffb:	192232        	l32i	a3, a2, 100
400ddffe:	000286        	j	400de00c <_svfprintf_r+0x18e8>
400de001:	042537        	blt	a5, a3, 400de009 <_svfprintf_r+0x18e5>
400de004:	432c      	movi.n	a3, 36
400de006:	1a6232        	s32i	a3, a2, 104
400de009:	9c2132        	l32i	a3, a1, 0x270
400de00c:	9e2122        	l32i	a2, a1, 0x278
400de00f:	232a      	add.n	a2, a3, a2
400de011:	fcc222        	addi	a2, a2, -4
400de014:	0258      	l32i.n	a5, a2, 0
400de016:	a02162        	l32i	a6, a1, 0x280
400de019:	220c      	movi.n	a2, 2
400de01b:	206620        	or	a6, a6, a2
400de01e:	10c182        	addi	a8, a1, 16
400de021:	073c      	movi.n	a7, 48
400de023:	a06162        	s32i	a6, a1, 0x280
400de026:	02d862        	addmi	a6, a8, 0x200
400de029:	504672        	s8i	a7, a6, 80
400de02c:	c9cd91        	l32r	a9, 400d0760 <_flash_cache_start+0x748>
400de02f:	78a072        	movi	a7, 120
400de032:	514672        	s8i	a7, a6, 81
400de035:	047d      	mov.n	a7, a4
400de037:	78a042        	movi	a4, 120
400de03a:	030c      	movi.n	a3, 0
400de03c:	b56192        	s32i	a9, a1, 0x2d4
400de03f:	a66142        	s32i	a4, a1, 0x298
400de042:	024186        	j	400de94c <_svfprintf_r+0x2228>
400de045:	216200        	srai	a6, a0, 2
400de048:	74bc97        	bgeu	a12, a9, 400de0c0 <_svfprintf_r+0x199c>
400de04b:	0da267        	bge	a2, a6, 400de05c <_svfprintf_r+0x1938>
400de04e:	10c152        	addi	a5, a1, 16
400de051:	b02250        	addx8	a2, a2, a5
400de054:	0228      	l32i.n	a2, a2, 0
400de056:	a16122        	s32i	a2, a1, 0x284
400de059:	002b86        	j	400de10b <_svfprintf_r+0x19e7>
400de05c:	10c162        	addi	a6, a1, 16
400de05f:	48a232        	movi	a3, 0x248
400de062:	363a      	add.n	a3, a6, a3
400de064:	4ca2d2        	movi	a13, 0x24c
400de067:	60a2c2        	movi	a12, 0x260
400de06a:	0139      	s32i.n	a3, a1, 0
400de06c:	01d6f2        	addmi	a15, a6, 0x100
400de06f:	06ed      	mov.n	a14, a6
400de071:	d6da      	add.n	a13, a6, a13
400de073:	c6ca      	add.n	a12, a6, a12
400de075:	05bd      	mov.n	a11, a5
400de077:	02ad      	mov.n	a10, a2
400de079:	fe22a5        	call8	400dc2a4 <get_arg$isra$0>
400de07c:	0aa8      	l32i.n	a10, a10, 0
400de07e:	a161a2        	s32i	a10, a1, 0x284
400de081:	002186        	j	400de10b <_svfprintf_r+0x19e7>
400de084:	10c182        	addi	a8, a1, 16
400de087:	471b      	addi.n	a4, a7, 1
400de089:	b02280        	addx8	a2, a2, a8
400de08c:	742767        	blt	a7, a6, 400de104 <_svfprintf_r+0x19e0>
400de08f:	f21c      	movi.n	a2, 31
400de091:	432267        	blt	a2, a6, 400de0d8 <_svfprintf_r+0x19b4>
400de094:	261b      	addi.n	a2, a6, 1
400de096:	10c192        	addi	a9, a1, 16
400de099:	976122        	s32i	a2, a1, 0x25c
400de09c:	02d922        	addmi	a2, a9, 0x200
400de09f:	1a2232        	l32i	a3, a2, 104
400de0a2:	851c      	movi.n	a5, 24
400de0a4:	734b      	addi.n	a7, a3, 4
400de0a6:	1a6272        	s32i	a7, a2, 104
400de0a9:	072577        	blt	a5, a7, 400de0b4 <_svfprintf_r+0x1990>
400de0ac:	192222        	l32i	a2, a2, 100
400de0af:	000306        	j	400de0bf <_svfprintf_r+0x199b>
400de0b2:	370000        	lsi	f0, a0, 220
400de0b5:	2c0425        	call8	4010a0f8 <_etext+0x1d81b>
400de0b8:	623243        	lsi	f4, a2, 0x188
400de0bb:	221a      	add.n	a2, a2, a1
400de0bd:	329c21        	l32r	a2, 400aab30 <_iram_end+0x1cfdc>
400de0c0:	a29e21        	l32r	a2, 400c6b38 <_rtc_text_end+0x6b38>
400de0c3:	3a10c1        	l32r	a12, 400ac904 <_iram_end+0x1edb0>
400de0c6:	c33232        	lsi	f3, a2, 0x30c
400de0c9:	38fc      	bnez.n	a8, 400de100 <_svfprintf_r+0x19dc>
400de0cb:	26a003        	lsi	f0, a0, 152
400de0ce:	6132b0        	lsi	f11, a2, 0x184
400de0d1:	0239a1        	l32r	a10, 4009e9b8 <_iram_end+0x10e64>
400de0d4:	000c46        	j	400de109 <_svfprintf_r+0x19e5>
400de0d7:	c1e200        	mul16u	a14, a2, a0
400de0da:	de2210        	f64iter	a2, a2, a1, 1, 1
400de0dd:	223202        	lsi	f0, a2, 136
400de0e0:	1c1a      	add.n	a1, a12, a1
400de0e2:	634b85        	call0	4014159c <_etext+0x54cbf>
400de0e5:	1a6262        	s32i	a6, a2, 104
400de0e8:	052567        	blt	a5, a6, 400de0f1 <_svfprintf_r+0x19cd>
400de0eb:	192232        	l32i	a3, a2, 100
400de0ee:	000286        	j	400de0fc <_svfprintf_r+0x19d8>
400de0f1:	042537        	blt	a5, a3, 400de0f9 <_svfprintf_r+0x19d5>
400de0f4:	432c      	movi.n	a3, 36
400de0f6:	1a6232        	s32i	a3, a2, 104
400de0f9:	9c2132        	l32i	a3, a1, 0x270
400de0fc:	9e2122        	l32i	a2, a1, 0x278
400de0ff:	232a      	add.n	a2, a3, a2
400de101:	fcc222        	addi	a2, a2, -4
400de104:	0228      	l32i.n	a2, a2, 0
400de106:	a16122        	s32i	a2, a1, 0x284
400de109:	047d      	mov.n	a7, a4
400de10b:	10c142        	addi	a4, a1, 16
400de10e:	030c      	movi.n	a3, 0
400de110:	02d422        	addmi	a2, a4, 0x200
400de113:	a52152        	l32i	a5, a1, 0x294
400de116:	524232        	s8i	a3, a2, 82
400de119:	024596        	bltz	a5, 400de141 <_svfprintf_r+0x1a1d>
400de11c:	a121a2        	l32i	a10, a1, 0x284
400de11f:	05cd      	mov.n	a12, a5
400de121:	0b0c      	movi.n	a11, 0
400de123:	c9a281        	l32r	a8, 400d07ac <_flash_cache_start+0x794>
400de126:	0008e0        	callx8	a8
400de129:	1acc      	bnez.n	a10, 400de12e <_svfprintf_r+0x1a0a>
400de12b:	029286        	j	400deb79 <_svfprintf_r+0x2455>
400de12e:	a12182        	l32i	a8, a1, 0x284
400de131:	090c      	movi.n	a9, 0
400de133:	c0aa80        	sub	a10, a10, a8
400de136:	a561a2        	s32i	a10, a1, 0x294
400de139:	a26192        	s32i	a9, a1, 0x288
400de13c:	096d      	mov.n	a6, a9
400de13e:	028f06        	j	400deb7e <_svfprintf_r+0x245a>
400de141:	a121a2        	l32i	a10, a1, 0x284
400de144:	020c      	movi.n	a2, 0
400de146:	c7d081        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400de149:	0008e0        	callx8	a8
400de14c:	a561a2        	s32i	a10, a1, 0x294
400de14f:	a26122        	s32i	a2, a1, 0x288
400de152:	026d      	mov.n	a6, a2
400de154:	023d      	mov.n	a3, a2
400de156:	025d      	mov.n	a5, a2
400de158:	028a06        	j	400deb84 <_svfprintf_r+0x2460>
400de15b:	a02162        	l32i	a6, a1, 0x280
400de15e:	031c      	movi.n	a3, 16
400de160:	206630        	or	a6, a6, a3
400de163:	a06162        	s32i	a6, a1, 0x280
400de166:	a02182        	l32i	a8, a1, 0x280
400de169:	02e857        	bbsi	a8, 5, 400de16f <_svfprintf_r+0x1a4b>
400de16c:	003506        	j	400de244 <_svfprintf_r+0x1b20>
400de16f:	972162        	l32i	a6, a1, 0x25c
400de172:	64bc      	beqz.n	a4, 400de1ac <_svfprintf_r+0x1a88>
400de174:	0ca267        	bge	a2, a6, 400de184 <_svfprintf_r+0x1a60>
400de177:	10c192        	addi	a9, a1, 16
400de17a:	b02290        	addx8	a2, a2, a9
400de17d:	0258      	l32i.n	a5, a2, 0
400de17f:	1238      	l32i.n	a3, a2, 4
400de181:	00ed46        	j	400de53a <_svfprintf_r+0x1e16>
400de184:	10c1a2        	addi	a10, a1, 16
400de187:	48a232        	movi	a3, 0x248
400de18a:	3a3a      	add.n	a3, a10, a3
400de18c:	4ca2d2        	movi	a13, 0x24c
400de18f:	60a2c2        	movi	a12, 0x260
400de192:	0139      	s32i.n	a3, a1, 0
400de194:	01daf2        	addmi	a15, a10, 0x100
400de197:	0aed      	mov.n	a14, a10
400de199:	dada      	add.n	a13, a10, a13
400de19b:	caca      	add.n	a12, a10, a12
400de19d:	05bd      	mov.n	a11, a5
400de19f:	02ad      	mov.n	a10, a2
400de1a1:	fe1025        	call8	400dc2a4 <get_arg$isra$0>
400de1a4:	0a58      	l32i.n	a5, a10, 0
400de1a6:	1a38      	l32i.n	a3, a10, 4
400de1a8:	00e386        	j	400de53a <_svfprintf_r+0x1e16>
400de1ab:	c1e200        	mul16u	a14, a2, a0
400de1ae:	471b10        	lsi	f1, a11, 0x11c
400de1b1:	b022e0        	addx8	a2, a2, a14
400de1b4:	02a767        	bge	a7, a6, 400de1ba <_svfprintf_r+0x1a96>
400de1b7:	002046        	j	400de23c <_svfprintf_r+0x1b18>
400de1ba:	f21c      	movi.n	a2, 31
400de1bc:	482267        	blt	a2, a6, 400de208 <_svfprintf_r+0x1ae4>
400de1bf:	261b      	addi.n	a2, a6, 1
400de1c1:	10c132        	addi	a3, a1, 16
400de1c4:	976122        	s32i	a2, a1, 0x25c
400de1c7:	02d322        	addmi	a2, a3, 0x200
400de1ca:	1a2232        	l32i	a3, a2, 104
400de1cd:	537b      	addi.n	a5, a3, 7
400de1cf:	837c      	movi.n	a3, -8
400de1d1:	103530        	and	a3, a5, a3
400de1d4:	738b      	addi.n	a7, a3, 8
400de1d6:	1a6272        	s32i	a7, a2, 104
400de1d9:	851c      	movi.n	a5, 24
400de1db:	052577        	blt	a5, a7, 400de1e4 <_svfprintf_r+0x1ac0>
400de1de:	192232        	l32i	a3, a2, 100
400de1e1:	000286        	j	400de1ef <_svfprintf_r+0x1acb>
400de1e4:	042537        	blt	a5, a3, 400de1ec <_svfprintf_r+0x1ac8>
400de1e7:	832c      	movi.n	a3, 40
400de1e9:	1a6232        	s32i	a3, a2, 104
400de1ec:	9c2132        	l32i	a3, a1, 0x270
400de1ef:	9e2122        	l32i	a2, a1, 0x278
400de1f2:	10c182        	addi	a8, a1, 16
400de1f5:	232a      	add.n	a2, a3, a2
400de1f7:	f8c222        	addi	a2, a2, -8
400de1fa:	0258      	l32i.n	a5, a2, 0
400de1fc:	1238      	l32i.n	a3, a2, 4
400de1fe:	b02680        	addx8	a2, a6, a8
400de201:	0259      	s32i.n	a5, a2, 0
400de203:	1239      	s32i.n	a3, a2, 4
400de205:	00cbc6        	j	400de538 <_svfprintf_r+0x1e14>
400de208:	10c192        	addi	a9, a1, 16
400de20b:	02d922        	addmi	a2, a9, 0x200
400de20e:	1a2232        	l32i	a3, a2, 104
400de211:	537b      	addi.n	a5, a3, 7
400de213:	837c      	movi.n	a3, -8
400de215:	103530        	and	a3, a5, a3
400de218:	638b      	addi.n	a6, a3, 8
400de21a:	1a6262        	s32i	a6, a2, 104
400de21d:	851c      	movi.n	a5, 24
400de21f:	062567        	blt	a5, a6, 400de229 <_svfprintf_r+0x1b05>
400de222:	192232        	l32i	a3, a2, 100
400de225:	0002c6        	j	400de234 <_svfprintf_r+0x1b10>
400de228:	253700        	extui	a3, a0, 23, 3
400de22b:	832c04        	lsi	f0, a12, 0x20c
400de22e:	1a6232        	s32i	a3, a2, 104
400de231:	9c2132        	l32i	a3, a1, 0x270
400de234:	9e2122        	l32i	a2, a1, 0x278
400de237:	232a      	add.n	a2, a3, a2
400de239:	f8c222        	addi	a2, a2, -8
400de23c:	0258      	l32i.n	a5, a2, 0
400de23e:	1238      	l32i.n	a3, a2, 4
400de240:	00bd06        	j	400de538 <_svfprintf_r+0x1e14>
400de243:	218200        	srai	a8, a0, 2
400de246:	031ca0        	lsi	f10, a12, 12
400de249:	106830        	and	a6, a8, a3
400de24c:	07d616        	beqz	a6, 400de2cd <_svfprintf_r+0x1ba9>
400de24f:	972162        	l32i	a6, a1, 0x25c
400de252:	e49c      	beqz.n	a4, 400de274 <_svfprintf_r+0x1b50>
400de254:	08a267        	bge	a2, a6, 400de260 <_svfprintf_r+0x1b3c>
400de257:	913a      	add.n	a9, a1, a3
400de259:	b02290        	addx8	a2, a2, a9
400de25c:	008a46        	j	400de489 <_svfprintf_r+0x1d65>
400de25f:	c1a200        	mul16u	a10, a2, a0
400de262:	a23210        	muluh	a3, a2, a1
400de265:	3a48      	l32i.n	a4, a10, 12
400de267:	393a      	add.n	a3, a9, a3
400de269:	daf201        	l32r	a0, 400d4e34 <frame_downheap+0x48>
400de26c:	0aed01        	l32r	a0, 400a0e20 <_iram_end+0x132cc>
400de26f:	008b06        	j	400de49f <_svfprintf_r+0x1d7b>
400de272:	e20000        	remu	a0, a0, a0
400de275:	1b10c1        	l32r	a12, 400a4eb8 <_iram_end+0x17364>
400de278:	22e047        	bbsi	a0, 4, 400de29e <_svfprintf_r+0x1b7a>
400de27b:	a767b0        	lsi	f11, a7, 0x29c
400de27e:	ac4602        	s8i	a0, a6, 172
400de281:	f21c00        	rems	a1, a12, a0
400de284:	3c2267        	blt	a2, a6, 400de2c4 <_svfprintf_r+0x1ba0>
400de287:	261b      	addi.n	a2, a6, 1
400de289:	10c132        	addi	a3, a1, 16
400de28c:	976122        	s32i	a2, a1, 0x25c
400de28f:	02d322        	addmi	a2, a3, 0x200
400de292:	1a2232        	l32i	a3, a2, 104
400de295:	851c      	movi.n	a5, 24
400de297:	734b      	addi.n	a7, a3, 4
400de299:	1a6272        	s32i	a7, a2, 104
400de29c:	052577        	blt	a5, a7, 400de2a5 <_svfprintf_r+0x1b81>
400de29f:	192222        	l32i	a2, a2, 100
400de2a2:	000286        	j	400de2b0 <_svfprintf_r+0x1b8c>
400de2a5:	042537        	blt	a5, a3, 400de2ad <_svfprintf_r+0x1b89>
400de2a8:	432c      	movi.n	a3, 36
400de2aa:	1a6232        	s32i	a3, a2, 104
400de2ad:	9c2122        	l32i	a2, a1, 0x270
400de2b0:	9e2132        	l32i	a3, a1, 0x278
400de2b3:	10c182        	addi	a8, a1, 16
400de2b6:	323a      	add.n	a3, a2, a3
400de2b8:	fcc332        	addi	a3, a3, -4
400de2bb:	0358      	l32i.n	a5, a3, 0
400de2bd:	b02680        	addx8	a2, a6, a8
400de2c0:	008fc6        	j	400de503 <_svfprintf_r+0x1ddf>
400de2c3:	c19200        	mul16u	a9, a2, a0
400de2c6:	d92210        	lsi	f1, a2, 0x364
400de2c9:	900602        	l8ui	a0, a6, 144
400de2cc:	218200        	srai	a8, a0, 2
400de2cf:	034ca0        	lsi	f10, a12, 12
400de2d2:	103830        	and	a3, a8, a3
400de2d5:	0cf316        	beqz	a3, 400de3a8 <_svfprintf_r+0x1c84>
400de2d8:	972182        	l32i	a8, a1, 0x25c
400de2db:	54bc      	beqz.n	a4, 400de314 <_svfprintf_r+0x1bf0>
400de2dd:	0ba287        	bge	a2, a8, 400de2ec <_svfprintf_r+0x1bc8>
400de2e0:	10c192        	addi	a9, a1, 16
400de2e3:	b02290        	addx8	a2, a2, a9
400de2e6:	001252        	l16ui	a5, a2, 0
400de2e9:	000886        	j	400de30f <_svfprintf_r+0x1beb>
400de2ec:	10c1a2        	addi	a10, a1, 16
400de2ef:	48a232        	movi	a3, 0x248
400de2f2:	3a3a      	add.n	a3, a10, a3
400de2f4:	4ca2d2        	movi	a13, 0x24c
400de2f7:	60a2c2        	movi	a12, 0x260
400de2fa:	01daf2        	addmi	a15, a10, 0x100
400de2fd:	0aed      	mov.n	a14, a10
400de2ff:	dada      	add.n	a13, a10, a13
400de301:	caca      	add.n	a12, a10, a12
400de303:	05bd      	mov.n	a11, a5
400de305:	0139      	s32i.n	a3, a1, 0
400de307:	02ad      	mov.n	a10, a2
400de309:	fdf9a5        	call8	400dc2a4 <get_arg$isra$0>
400de30c:	001a52        	l16ui	a5, a10, 0
400de30f:	063d      	mov.n	a3, a6
400de311:	008946        	j	400de53a <_svfprintf_r+0x1e16>
400de314:	671b      	addi.n	a6, a7, 1
400de316:	0da787        	bge	a7, a8, 400de327 <_svfprintf_r+0x1c03>
400de319:	10c1e2        	addi	a14, a1, 16
400de31c:	b022e0        	addx8	a2, a2, a14
400de31f:	001252        	l16ui	a5, a2, 0
400de322:	043d      	mov.n	a3, a4
400de324:	001e46        	j	400de3a1 <_svfprintf_r+0x1c7d>
400de327:	f21c      	movi.n	a2, 31
400de329:	432287        	blt	a2, a8, 400de370 <_svfprintf_r+0x1c4c>
400de32c:	281b      	addi.n	a2, a8, 1
400de32e:	10c132        	addi	a3, a1, 16
400de331:	976122        	s32i	a2, a1, 0x25c
400de334:	02d322        	addmi	a2, a3, 0x200
400de337:	1a2232        	l32i	a3, a2, 104
400de33a:	841c      	movi.n	a4, 24
400de33c:	534b      	addi.n	a5, a3, 4
400de33e:	1a6252        	s32i	a5, a2, 104
400de341:	072457        	blt	a4, a5, 400de34c <_svfprintf_r+0x1c28>
400de344:	192222        	l32i	a2, a2, 100
400de347:	000306        	j	400de357 <_svfprintf_r+0x1c33>
400de34a:	370000        	lsi	f0, a0, 220
400de34d:	2c0424        	lsi	f2, a4, 176
400de350:	623243        	lsi	f4, a2, 0x188
400de353:	221a      	add.n	a2, a2, a1
400de355:	329c21        	l32r	a2, 400aadc8 <_iram_end+0x1d274>
400de358:	429e21        	l32r	a2, 400aedd0 <_iram_end+0x2127c>
400de35b:	3a10c1        	l32r	a12, 400acb9c <_iram_end+0x1f048>
400de35e:	c33232        	lsi	f3, a2, 0x30c
400de361:	58fc      	bnez.n	a8, 400de39a <_svfprintf_r+0x1c76>
400de363:	284003        	ssi	f0, a0, 160
400de366:	0259b0        	andb	b5, b9, b11
400de369:	f45050        	extui	a5, a5, 0, 16
400de36c:	000bc6        	j	400de39f <_svfprintf_r+0x1c7b>
400de36f:	c15200        	mul16u	a5, a2, a0
400de372:	d52210        	extui	a2, a1, 18, 14
400de375:	223202        	lsi	f0, a2, 136
400de378:	1c1a      	add.n	a1, a12, a1
400de37a:	534b84        	lsi	f8, a11, 0x14c
400de37d:	1a6252        	s32i	a5, a2, 104
400de380:	052457        	blt	a4, a5, 400de389 <_svfprintf_r+0x1c65>
400de383:	192232        	l32i	a3, a2, 100
400de386:	000286        	j	400de394 <_svfprintf_r+0x1c70>
400de389:	042437        	blt	a4, a3, 400de391 <_svfprintf_r+0x1c6d>
400de38c:	432c      	movi.n	a3, 36
400de38e:	1a6232        	s32i	a3, a2, 104
400de391:	9c2132        	l32i	a3, a1, 0x270
400de394:	9e2122        	l32i	a2, a1, 0x278
400de397:	232a      	add.n	a2, a3, a2
400de399:	fcc222        	addi	a2, a2, -4
400de39c:	001252        	l16ui	a5, a2, 0
400de39f:	030c      	movi.n	a3, 0
400de3a1:	067d      	mov.n	a7, a6
400de3a3:	0064c6        	j	400de53a <_svfprintf_r+0x1e16>
400de3a6:	820000        	mull	a0, a0, a0
400de3a9:	62a021        	l32r	a2, 400b6e2c <_iram_end+0x292d8>
400de3ac:	979721        	l32r	a2, 400c4208 <_rtc_text_end+0x4208>
400de3af:	02e8      	l32i.n	a14, a2, 0
400de3b1:	003246        	j	400de47e <_svfprintf_r+0x1d5a>
400de3b4:	44bc      	beqz.n	a4, 400de3ec <_svfprintf_r+0x1cc8>
400de3b6:	0ba267        	bge	a2, a6, 400de3c5 <_svfprintf_r+0x1ca1>
400de3b9:	10c192        	addi	a9, a1, 16
400de3bc:	b02290        	addx8	a2, a2, a9
400de3bf:	000252        	l8ui	a5, a2, 0
400de3c2:	005d06        	j	400de53a <_svfprintf_r+0x1e16>
400de3c5:	10c1a2        	addi	a10, a1, 16
400de3c8:	48a242        	movi	a4, 0x248
400de3cb:	4a4a      	add.n	a4, a10, a4
400de3cd:	4ca2d2        	movi	a13, 0x24c
400de3d0:	60a2c2        	movi	a12, 0x260
400de3d3:	01daf2        	addmi	a15, a10, 0x100
400de3d6:	0aed      	mov.n	a14, a10
400de3d8:	dada      	add.n	a13, a10, a13
400de3da:	caca      	add.n	a12, a10, a12
400de3dc:	05bd      	mov.n	a11, a5
400de3de:	0149      	s32i.n	a4, a1, 0
400de3e0:	02ad      	mov.n	a10, a2
400de3e2:	fdec25        	call8	400dc2a4 <get_arg$isra$0>
400de3e5:	000a52        	l8ui	a5, a10, 0
400de3e8:	005386        	j	400de53a <_svfprintf_r+0x1e16>
400de3eb:	871b00        	lsi	f0, a11, 0x21c
400de3ee:	0ea767        	bge	a7, a6, 400de400 <_svfprintf_r+0x1cdc>
400de3f1:	10c1e2        	addi	a14, a1, 16
400de3f4:	b022e0        	addx8	a2, a2, a14
400de3f7:	000252        	l8ui	a5, a2, 0
400de3fa:	043d      	mov.n	a3, a4
400de3fc:	001e46        	j	400de479 <_svfprintf_r+0x1d55>
400de3ff:	f21c00        	rems	a1, a12, a0
400de402:	422267        	blt	a2, a6, 400de448 <_svfprintf_r+0x1d24>
400de405:	261b      	addi.n	a2, a6, 1
400de407:	10c132        	addi	a3, a1, 16
400de40a:	976122        	s32i	a2, a1, 0x25c
400de40d:	02d322        	addmi	a2, a3, 0x200
400de410:	1a2232        	l32i	a3, a2, 104
400de413:	841c      	movi.n	a4, 24
400de415:	534b      	addi.n	a5, a3, 4
400de417:	1a6252        	s32i	a5, a2, 104
400de41a:	062457        	blt	a4, a5, 400de424 <_svfprintf_r+0x1d00>
400de41d:	192232        	l32i	a3, a2, 100
400de420:	0002c6        	j	400de42f <_svfprintf_r+0x1d0b>
400de423:	243700        	extui	a3, a0, 7, 3
400de426:	432c04        	lsi	f0, a12, 0x10c
400de429:	1a6232        	s32i	a3, a2, 104
400de42c:	9c2132        	l32i	a3, a1, 0x270
400de42f:	9e2122        	l32i	a2, a1, 0x278
400de432:	10c142        	addi	a4, a1, 16
400de435:	232a      	add.n	a2, a3, a2
400de437:	fcc222        	addi	a2, a2, -4
400de43a:	0258      	l32i.n	a5, a2, 0
400de43c:	b02640        	addx8	a2, a6, a4
400de43f:	0259      	s32i.n	a5, a2, 0
400de441:	745050        	extui	a5, a5, 0, 8
400de444:	000bc6        	j	400de477 <_svfprintf_r+0x1d53>
400de447:	c15200        	mul16u	a5, a2, a0
400de44a:	d52210        	extui	a2, a1, 18, 14
400de44d:	223202        	lsi	f0, a2, 136
400de450:	1c1a      	add.n	a1, a12, a1
400de452:	534b84        	lsi	f8, a11, 0x14c
400de455:	1a6252        	s32i	a5, a2, 104
400de458:	052457        	blt	a4, a5, 400de461 <_svfprintf_r+0x1d3d>
400de45b:	192232        	l32i	a3, a2, 100
400de45e:	000286        	j	400de46c <_svfprintf_r+0x1d48>
400de461:	042437        	blt	a4, a3, 400de469 <_svfprintf_r+0x1d45>
400de464:	432c      	movi.n	a3, 36
400de466:	1a6232        	s32i	a3, a2, 104
400de469:	9c2132        	l32i	a3, a1, 0x270
400de46c:	9e2122        	l32i	a2, a1, 0x278
400de46f:	232a      	add.n	a2, a3, a2
400de471:	fcc222        	addi	a2, a2, -4
400de474:	000252        	l8ui	a5, a2, 0
400de477:	030c      	movi.n	a3, 0
400de479:	087d      	mov.n	a7, a8
400de47b:	002ec6        	j	400de53a <_svfprintf_r+0x1e16>
400de47e:	64bc      	beqz.n	a4, 400de4b8 <_svfprintf_r+0x1d94>
400de480:	0ca267        	bge	a2, a6, 400de490 <_svfprintf_r+0x1d6c>
400de483:	10c162        	addi	a6, a1, 16
400de486:	b02260        	addx8	a2, a2, a6
400de489:	0258      	l32i.n	a5, a2, 0
400de48b:	0008c6        	j	400de4b2 <_svfprintf_r+0x1d8e>
400de48e:	820000        	mull	a0, a0, a0
400de491:	3210c1        	l32r	a12, 400aacd4 <_iram_end+0x1d180>
400de494:	3a48a2        	s8i	a10, a8, 58
400de497:	3938      	l32i.n	a3, a9, 12
400de499:	d8f201        	l32r	a0, 400d4864 <uw_frame_state_for+0x80>
400de49c:	08ed01        	l32r	a0, 400a0850 <_iram_end+0x12cfc>
400de49f:	4ca2d2        	movi	a13, 0x24c
400de4a2:	60a2c2        	movi	a12, 0x260
400de4a5:	05bd      	mov.n	a11, a5
400de4a7:	deda      	add.n	a13, a14, a13
400de4a9:	ceca      	add.n	a12, a14, a12
400de4ab:	02ad      	mov.n	a10, a2
400de4ad:	fddf65        	call8	400dc2a4 <get_arg$isra$0>
400de4b0:	0a58      	l32i.n	a5, a10, 0
400de4b2:	074d      	mov.n	a4, a7
400de4b4:	001f86        	j	400de536 <_svfprintf_r+0x1e12>
400de4b7:	c19200        	mul16u	a9, a2, a0
400de4ba:	471b10        	lsi	f1, a11, 0x11c
400de4bd:	b02290        	addx8	a2, a2, a9
400de4c0:	702767        	blt	a7, a6, 400de534 <_svfprintf_r+0x1e10>
400de4c3:	f21c      	movi.n	a2, 31
400de4c5:	3f2267        	blt	a2, a6, 400de508 <_svfprintf_r+0x1de4>
400de4c8:	261b      	addi.n	a2, a6, 1
400de4ca:	10c1a2        	addi	a10, a1, 16
400de4cd:	976122        	s32i	a2, a1, 0x25c
400de4d0:	02da22        	addmi	a2, a10, 0x200
400de4d3:	1a2232        	l32i	a3, a2, 104
400de4d6:	851c      	movi.n	a5, 24
400de4d8:	734b      	addi.n	a7, a3, 4
400de4da:	1a6272        	s32i	a7, a2, 104
400de4dd:	072577        	blt	a5, a7, 400de4e8 <_svfprintf_r+0x1dc4>
400de4e0:	192232        	l32i	a3, a2, 100
400de4e3:	000306        	j	400de4f3 <_svfprintf_r+0x1dcf>
400de4e6:	370000        	lsi	f0, a0, 220
400de4e9:	2c0425        	call8	4010a52c <_etext+0x1dc4f>
400de4ec:	623243        	lsi	f4, a2, 0x188
400de4ef:	321a      	add.n	a3, a2, a1
400de4f1:	229c21        	l32r	a2, 400a6f64 <_iram_end+0x19410>
400de4f4:	e29e21        	l32r	a2, 400d6f6c <esp_dbg_stubs_init+0x30>
400de4f7:	2a10c1        	l32r	a12, 400a8d38 <_iram_end+0x1b1e4>
400de4fa:	c22223        	lsi	f2, a2, 0x308
400de4fd:	58fc      	bnez.n	a8, 400de536 <_svfprintf_r+0x1e12>
400de4ff:	26e002        	s32c1i	a0, a0, 152
400de502:	0259b0        	andb	b5, b9, b11
400de505:	000b46        	j	400de536 <_svfprintf_r+0x1e12>
400de508:	10c132        	addi	a3, a1, 16
400de50b:	02d322        	addmi	a2, a3, 0x200
400de50e:	1a2232        	l32i	a3, a2, 104
400de511:	851c      	movi.n	a5, 24
400de513:	634b      	addi.n	a6, a3, 4
400de515:	1a6262        	s32i	a6, a2, 104
400de518:	052567        	blt	a5, a6, 400de521 <_svfprintf_r+0x1dfd>
400de51b:	192232        	l32i	a3, a2, 100
400de51e:	000286        	j	400de52c <_svfprintf_r+0x1e08>
400de521:	042537        	blt	a5, a3, 400de529 <_svfprintf_r+0x1e05>
400de524:	432c      	movi.n	a3, 36
400de526:	1a6232        	s32i	a3, a2, 104
400de529:	9c2132        	l32i	a3, a1, 0x270
400de52c:	9e2122        	l32i	a2, a1, 0x278
400de52f:	232a      	add.n	a2, a3, a2
400de531:	fcc222        	addi	a2, a2, -4
400de534:	0258      	l32i.n	a5, a2, 0
400de536:	030c      	movi.n	a3, 0
400de538:	047d      	mov.n	a7, a4
400de53a:	120c      	movi.n	a2, 1
400de53c:	010306        	j	400de94c <_svfprintf_r+0x2228>
400de53f:	886100        	lsi	f0, a1, 0x220
400de542:	62c8      	l32i.n	a12, a2, 24
400de544:	82b561        	l32r	a6, 400bf018 <_iram_end+0x314c4>
400de547:	57a021        	l32r	a2, 400b43c8 <_iram_end+0x26874>
400de54a:	02e8      	l32i.n	a14, a2, 0
400de54c:	003506        	j	400de624 <_svfprintf_r+0x1f00>
400de54f:	972162        	l32i	a6, a1, 0x25c
400de552:	64bc      	beqz.n	a4, 400de58c <_svfprintf_r+0x1e68>
400de554:	0ca267        	bge	a2, a6, 400de564 <_svfprintf_r+0x1e40>
400de557:	10c192        	addi	a9, a1, 16
400de55a:	b02290        	addx8	a2, a2, a9
400de55d:	0258      	l32i.n	a5, a2, 0
400de55f:	1238      	l32i.n	a3, a2, 4
400de561:	00ec46        	j	400de916 <_svfprintf_r+0x21f2>
400de564:	10c1a2        	addi	a10, a1, 16
400de567:	48a232        	movi	a3, 0x248
400de56a:	3a3a      	add.n	a3, a10, a3
400de56c:	4ca2d2        	movi	a13, 0x24c
400de56f:	60a2c2        	movi	a12, 0x260
400de572:	0139      	s32i.n	a3, a1, 0
400de574:	01daf2        	addmi	a15, a10, 0x100
400de577:	0aed      	mov.n	a14, a10
400de579:	dada      	add.n	a13, a10, a13
400de57b:	caca      	add.n	a12, a10, a12
400de57d:	05bd      	mov.n	a11, a5
400de57f:	02ad      	mov.n	a10, a2
400de581:	fdd225        	call8	400dc2a4 <get_arg$isra$0>
400de584:	0a58      	l32i.n	a5, a10, 0
400de586:	1a38      	l32i.n	a3, a10, 4
400de588:	00e286        	j	400de916 <_svfprintf_r+0x21f2>
400de58b:	c1e200        	mul16u	a14, a2, a0
400de58e:	471b10        	lsi	f1, a11, 0x11c
400de591:	b022e0        	addx8	a2, a2, a14
400de594:	02a767        	bge	a7, a6, 400de59a <_svfprintf_r+0x1e76>
400de597:	002046        	j	400de61c <_svfprintf_r+0x1ef8>
400de59a:	f21c      	movi.n	a2, 31
400de59c:	482267        	blt	a2, a6, 400de5e8 <_svfprintf_r+0x1ec4>
400de59f:	261b      	addi.n	a2, a6, 1
400de5a1:	10c132        	addi	a3, a1, 16
400de5a4:	976122        	s32i	a2, a1, 0x25c
400de5a7:	02d322        	addmi	a2, a3, 0x200
400de5aa:	1a2232        	l32i	a3, a2, 104
400de5ad:	537b      	addi.n	a5, a3, 7
400de5af:	837c      	movi.n	a3, -8
400de5b1:	103530        	and	a3, a5, a3
400de5b4:	738b      	addi.n	a7, a3, 8
400de5b6:	1a6272        	s32i	a7, a2, 104
400de5b9:	851c      	movi.n	a5, 24
400de5bb:	052577        	blt	a5, a7, 400de5c4 <_svfprintf_r+0x1ea0>
400de5be:	192232        	l32i	a3, a2, 100
400de5c1:	000286        	j	400de5cf <_svfprintf_r+0x1eab>
400de5c4:	042537        	blt	a5, a3, 400de5cc <_svfprintf_r+0x1ea8>
400de5c7:	832c      	movi.n	a3, 40
400de5c9:	1a6232        	s32i	a3, a2, 104
400de5cc:	9c2132        	l32i	a3, a1, 0x270
400de5cf:	9e2122        	l32i	a2, a1, 0x278
400de5d2:	10c182        	addi	a8, a1, 16
400de5d5:	232a      	add.n	a2, a3, a2
400de5d7:	f8c222        	addi	a2, a2, -8
400de5da:	0258      	l32i.n	a5, a2, 0
400de5dc:	1238      	l32i.n	a3, a2, 4
400de5de:	b02680        	addx8	a2, a6, a8
400de5e1:	0259      	s32i.n	a5, a2, 0
400de5e3:	1239      	s32i.n	a3, a2, 4
400de5e5:	00cac6        	j	400de914 <_svfprintf_r+0x21f0>
400de5e8:	10c192        	addi	a9, a1, 16
400de5eb:	02d922        	addmi	a2, a9, 0x200
400de5ee:	1a2232        	l32i	a3, a2, 104
400de5f1:	537b      	addi.n	a5, a3, 7
400de5f3:	837c      	movi.n	a3, -8
400de5f5:	103530        	and	a3, a5, a3
400de5f8:	638b      	addi.n	a6, a3, 8
400de5fa:	1a6262        	s32i	a6, a2, 104
400de5fd:	851c      	movi.n	a5, 24
400de5ff:	052567        	blt	a5, a6, 400de608 <_svfprintf_r+0x1ee4>
400de602:	192232        	l32i	a3, a2, 100
400de605:	0002c6        	j	400de614 <_svfprintf_r+0x1ef0>
400de608:	052537        	blt	a5, a3, 400de611 <_svfprintf_r+0x1eed>
400de60b:	28a032        	movi	a3, 40
400de60e:	1a6232        	s32i	a3, a2, 104
400de611:	9c2132        	l32i	a3, a1, 0x270
400de614:	9e2122        	l32i	a2, a1, 0x278
400de617:	232a      	add.n	a2, a3, a2
400de619:	f8c222        	addi	a2, a2, -8
400de61c:	0258      	l32i.n	a5, a2, 0
400de61e:	1238      	l32i.n	a3, a2, 4
400de620:	00bc06        	j	400de914 <_svfprintf_r+0x21f0>
400de623:	218200        	srai	a8, a0, 2
400de626:	031ca0        	lsi	f10, a12, 12
400de629:	106830        	and	a6, a8, a3
400de62c:	07d616        	beqz	a6, 400de6ad <_svfprintf_r+0x1f89>
400de62f:	972162        	l32i	a6, a1, 0x25c
400de632:	e49c      	beqz.n	a4, 400de654 <_svfprintf_r+0x1f30>
400de634:	08a267        	bge	a2, a6, 400de640 <_svfprintf_r+0x1f1c>
400de637:	913a      	add.n	a9, a1, a3
400de639:	b02290        	addx8	a2, a2, a9
400de63c:	008946        	j	400de865 <_svfprintf_r+0x2141>
400de63f:	c1a200        	mul16u	a10, a2, a0
400de642:	a23210        	muluh	a3, a2, a1
400de645:	3a48      	l32i.n	a4, a10, 12
400de647:	393a      	add.n	a3, a9, a3
400de649:	daf201        	l32r	a0, 400d5214 <linear_search_fdes+0x28>
400de64c:	0aed01        	l32r	a0, 400a1200 <_iram_end+0x136ac>
400de64f:	008a06        	j	400de87b <_svfprintf_r+0x2157>
400de652:	e20000        	remu	a0, a0, a0
400de655:	1b10c1        	l32r	a12, 400a5298 <_iram_end+0x17744>
400de658:	22e047        	bbsi	a0, 4, 400de67e <_svfprintf_r+0x1f5a>
400de65b:	a767b0        	lsi	f11, a7, 0x29c
400de65e:	ab4602        	s8i	a0, a6, 171
400de661:	f21c00        	rems	a1, a12, a0
400de664:	3c2267        	blt	a2, a6, 400de6a4 <_svfprintf_r+0x1f80>
400de667:	261b      	addi.n	a2, a6, 1
400de669:	10c132        	addi	a3, a1, 16
400de66c:	976122        	s32i	a2, a1, 0x25c
400de66f:	02d322        	addmi	a2, a3, 0x200
400de672:	1a2232        	l32i	a3, a2, 104
400de675:	851c      	movi.n	a5, 24
400de677:	734b      	addi.n	a7, a3, 4
400de679:	1a6272        	s32i	a7, a2, 104
400de67c:	052577        	blt	a5, a7, 400de685 <_svfprintf_r+0x1f61>
400de67f:	192222        	l32i	a2, a2, 100
400de682:	000286        	j	400de690 <_svfprintf_r+0x1f6c>
400de685:	042537        	blt	a5, a3, 400de68d <_svfprintf_r+0x1f69>
400de688:	432c      	movi.n	a3, 36
400de68a:	1a6232        	s32i	a3, a2, 104
400de68d:	9c2122        	l32i	a2, a1, 0x270
400de690:	9e2132        	l32i	a3, a1, 0x278
400de693:	10c182        	addi	a8, a1, 16
400de696:	323a      	add.n	a3, a2, a3
400de698:	fcc332        	addi	a3, a3, -4
400de69b:	0358      	l32i.n	a5, a3, 0
400de69d:	b02680        	addx8	a2, a6, a8
400de6a0:	008e06        	j	400de8dc <_svfprintf_r+0x21b8>
400de6a3:	c19200        	mul16u	a9, a2, a0
400de6a6:	d92210        	lsi	f1, a2, 0x364
400de6a9:	8e4602        	s8i	a0, a6, 142
400de6ac:	218200        	srai	a8, a0, 2
400de6af:	034ca0        	lsi	f10, a12, 12
400de6b2:	103830        	and	a3, a8, a3
400de6b5:	0cc316        	beqz	a3, 400de785 <_svfprintf_r+0x2061>
400de6b8:	972182        	l32i	a8, a1, 0x25c
400de6bb:	54bc      	beqz.n	a4, 400de6f4 <_svfprintf_r+0x1fd0>
400de6bd:	0ba287        	bge	a2, a8, 400de6cc <_svfprintf_r+0x1fa8>
400de6c0:	10c192        	addi	a9, a1, 16
400de6c3:	b02290        	addx8	a2, a2, a9
400de6c6:	001252        	l16ui	a5, a2, 0
400de6c9:	000886        	j	400de6ef <_svfprintf_r+0x1fcb>
400de6cc:	10c1a2        	addi	a10, a1, 16
400de6cf:	48a232        	movi	a3, 0x248
400de6d2:	3a3a      	add.n	a3, a10, a3
400de6d4:	4ca2d2        	movi	a13, 0x24c
400de6d7:	60a2c2        	movi	a12, 0x260
400de6da:	01daf2        	addmi	a15, a10, 0x100
400de6dd:	0aed      	mov.n	a14, a10
400de6df:	dada      	add.n	a13, a10, a13
400de6e1:	caca      	add.n	a12, a10, a12
400de6e3:	05bd      	mov.n	a11, a5
400de6e5:	0139      	s32i.n	a3, a1, 0
400de6e7:	02ad      	mov.n	a10, a2
400de6e9:	fdbba5        	call8	400dc2a4 <get_arg$isra$0>
400de6ec:	001a52        	l16ui	a5, a10, 0
400de6ef:	063d      	mov.n	a3, a6
400de6f1:	008846        	j	400de916 <_svfprintf_r+0x21f2>
400de6f4:	671b      	addi.n	a6, a7, 1
400de6f6:	0ea787        	bge	a7, a8, 400de708 <_svfprintf_r+0x1fe4>
400de6f9:	10c1e2        	addi	a14, a1, 16
400de6fc:	b022e0        	addx8	a2, a2, a14
400de6ff:	001252        	l16ui	a5, a2, 0
400de702:	043d      	mov.n	a3, a4
400de704:	001e06        	j	400de780 <_svfprintf_r+0x205c>
400de707:	f21c00        	rems	a1, a12, a0
400de70a:	412287        	blt	a2, a8, 400de74f <_svfprintf_r+0x202b>
400de70d:	281b      	addi.n	a2, a8, 1
400de70f:	10c132        	addi	a3, a1, 16
400de712:	976122        	s32i	a2, a1, 0x25c
400de715:	02d322        	addmi	a2, a3, 0x200
400de718:	1a2232        	l32i	a3, a2, 104
400de71b:	841c      	movi.n	a4, 24
400de71d:	534b      	addi.n	a5, a3, 4
400de71f:	1a6252        	s32i	a5, a2, 104
400de722:	062457        	blt	a4, a5, 400de72c <_svfprintf_r+0x2008>
400de725:	192222        	l32i	a2, a2, 100
400de728:	0002c6        	j	400de737 <_svfprintf_r+0x2013>
400de72b:	243700        	extui	a3, a0, 7, 3
400de72e:	432c04        	lsi	f0, a12, 0x10c
400de731:	1a6232        	s32i	a3, a2, 104
400de734:	9c2122        	l32i	a2, a1, 0x270
400de737:	9e2132        	l32i	a3, a1, 0x278
400de73a:	10c142        	addi	a4, a1, 16
400de73d:	323a      	add.n	a3, a2, a3
400de73f:	fcc332        	addi	a3, a3, -4
400de742:	0358      	l32i.n	a5, a3, 0
400de744:	b02840        	addx8	a2, a8, a4
400de747:	0259      	s32i.n	a5, a2, 0
400de749:	f45050        	extui	a5, a5, 0, 16
400de74c:	000b86        	j	400de77e <_svfprintf_r+0x205a>
400de74f:	10c152        	addi	a5, a1, 16
400de752:	02d522        	addmi	a2, a5, 0x200
400de755:	1a2232        	l32i	a3, a2, 104
400de758:	841c      	movi.n	a4, 24
400de75a:	534b      	addi.n	a5, a3, 4
400de75c:	1a6252        	s32i	a5, a2, 104
400de75f:	052457        	blt	a4, a5, 400de768 <_svfprintf_r+0x2044>
400de762:	192232        	l32i	a3, a2, 100
400de765:	000286        	j	400de773 <_svfprintf_r+0x204f>
400de768:	042437        	blt	a4, a3, 400de770 <_svfprintf_r+0x204c>
400de76b:	432c      	movi.n	a3, 36
400de76d:	1a6232        	s32i	a3, a2, 104
400de770:	9c2132        	l32i	a3, a1, 0x270
400de773:	9e2122        	l32i	a2, a1, 0x278
400de776:	232a      	add.n	a2, a3, a2
400de778:	fcc222        	addi	a2, a2, -4
400de77b:	001252        	l16ui	a5, a2, 0
400de77e:	030c      	movi.n	a3, 0
400de780:	067d      	mov.n	a7, a6
400de782:	006406        	j	400de916 <_svfprintf_r+0x21f2>
400de785:	a02182        	l32i	a8, a1, 0x280
400de788:	972162        	l32i	a6, a1, 0x25c
400de78b:	02e897        	bbsi	a8, 9, 400de791 <_svfprintf_r+0x206d>
400de78e:	003206        	j	400de85a <_svfprintf_r+0x2136>
400de791:	54bc      	beqz.n	a4, 400de7ca <_svfprintf_r+0x20a6>
400de793:	0da267        	bge	a2, a6, 400de7a4 <_svfprintf_r+0x2080>
400de796:	10c192        	addi	a9, a1, 16
400de799:	b02290        	addx8	a2, a2, a9
400de79c:	000252        	l8ui	a5, a2, 0
400de79f:	005cc6        	j	400de916 <_svfprintf_r+0x21f2>
400de7a2:	a20000        	muluh	a0, a0, a0
400de7a5:	4210c1        	l32r	a12, 400aefe8 <_iram_end+0x21494>
400de7a8:	4a48a2        	s8i	a10, a8, 74
400de7ab:	d24a      	add.n	a13, a2, a4
400de7ad:	c24ca2        	s8i	a10, a12, 194
400de7b0:	f260a2        	s32i	a10, a0, 0x3c8
400de7b3:	01da      	add.n	a0, a1, a13
400de7b5:	0aed      	mov.n	a14, a10
400de7b7:	dada      	add.n	a13, a10, a13
400de7b9:	caca      	add.n	a12, a10, a12
400de7bb:	05bd      	mov.n	a11, a5
400de7bd:	0149      	s32i.n	a4, a1, 0
400de7bf:	02ad      	mov.n	a10, a2
400de7c1:	fdae25        	call8	400dc2a4 <get_arg$isra$0>
400de7c4:	000a52        	l8ui	a5, a10, 0
400de7c7:	0052c6        	j	400de916 <_svfprintf_r+0x21f2>
400de7ca:	871b      	addi.n	a8, a7, 1
400de7cc:	0da767        	bge	a7, a6, 400de7dd <_svfprintf_r+0x20b9>
400de7cf:	10c1e2        	addi	a14, a1, 16
400de7d2:	b022e0        	addx8	a2, a2, a14
400de7d5:	000252        	l8ui	a5, a2, 0
400de7d8:	043d      	mov.n	a3, a4
400de7da:	001dc6        	j	400de855 <_svfprintf_r+0x2131>
400de7dd:	f21c      	movi.n	a2, 31
400de7df:	412267        	blt	a2, a6, 400de824 <_svfprintf_r+0x2100>
400de7e2:	261b      	addi.n	a2, a6, 1
400de7e4:	10c132        	addi	a3, a1, 16
400de7e7:	976122        	s32i	a2, a1, 0x25c
400de7ea:	02d322        	addmi	a2, a3, 0x200
400de7ed:	1a2232        	l32i	a3, a2, 104
400de7f0:	841c      	movi.n	a4, 24
400de7f2:	534b      	addi.n	a5, a3, 4
400de7f4:	1a6252        	s32i	a5, a2, 104
400de7f7:	052457        	blt	a4, a5, 400de800 <_svfprintf_r+0x20dc>
400de7fa:	192232        	l32i	a3, a2, 100
400de7fd:	000286        	j	400de80b <_svfprintf_r+0x20e7>
400de800:	042437        	blt	a4, a3, 400de808 <_svfprintf_r+0x20e4>
400de803:	432c      	movi.n	a3, 36
400de805:	1a6232        	s32i	a3, a2, 104
400de808:	9c2132        	l32i	a3, a1, 0x270
400de80b:	9e2122        	l32i	a2, a1, 0x278
400de80e:	10c142        	addi	a4, a1, 16
400de811:	232a      	add.n	a2, a3, a2
400de813:	fcc222        	addi	a2, a2, -4
400de816:	0258      	l32i.n	a5, a2, 0
400de818:	b02640        	addx8	a2, a6, a4
400de81b:	0259      	s32i.n	a5, a2, 0
400de81d:	745050        	extui	a5, a5, 0, 8
400de820:	000bc6        	j	400de853 <_svfprintf_r+0x212f>
400de823:	c15200        	mul16u	a5, a2, a0
400de826:	d52210        	extui	a2, a1, 18, 14
400de829:	223202        	lsi	f0, a2, 136
400de82c:	1c1a      	add.n	a1, a12, a1
400de82e:	534b84        	lsi	f8, a11, 0x14c
400de831:	1a6252        	s32i	a5, a2, 104
400de834:	052457        	blt	a4, a5, 400de83d <_svfprintf_r+0x2119>
400de837:	192232        	l32i	a3, a2, 100
400de83a:	000286        	j	400de848 <_svfprintf_r+0x2124>
400de83d:	042437        	blt	a4, a3, 400de845 <_svfprintf_r+0x2121>
400de840:	432c      	movi.n	a3, 36
400de842:	1a6232        	s32i	a3, a2, 104
400de845:	9c2132        	l32i	a3, a1, 0x270
400de848:	9e2122        	l32i	a2, a1, 0x278
400de84b:	232a      	add.n	a2, a3, a2
400de84d:	fcc222        	addi	a2, a2, -4
400de850:	000252        	l8ui	a5, a2, 0
400de853:	030c      	movi.n	a3, 0
400de855:	087d      	mov.n	a7, a8
400de857:	002ec6        	j	400de916 <_svfprintf_r+0x21f2>
400de85a:	54bc      	beqz.n	a4, 400de893 <_svfprintf_r+0x216f>
400de85c:	0ca267        	bge	a2, a6, 400de86c <_svfprintf_r+0x2148>
400de85f:	10c162        	addi	a6, a1, 16
400de862:	b02260        	addx8	a2, a2, a6
400de865:	0258      	l32i.n	a5, a2, 0
400de867:	0008c6        	j	400de88e <_svfprintf_r+0x216a>
400de86a:	820000        	mull	a0, a0, a0
400de86d:	3210c1        	l32r	a12, 400ab0b0 <_iram_end+0x1d55c>
400de870:	3a48a2        	s8i	a10, a8, 58
400de873:	3938      	l32i.n	a3, a9, 12
400de875:	d8f201        	l32r	a0, 400d4c40 <_Unwind_RaiseException+0x88>
400de878:	08ed01        	l32r	a0, 400a0c2c <_iram_end+0x130d8>
400de87b:	4ca2d2        	movi	a13, 0x24c
400de87e:	60a2c2        	movi	a12, 0x260
400de881:	05bd      	mov.n	a11, a5
400de883:	deda      	add.n	a13, a14, a13
400de885:	ceca      	add.n	a12, a14, a12
400de887:	02ad      	mov.n	a10, a2
400de889:	fda1a5        	call8	400dc2a4 <get_arg$isra$0>
400de88c:	0a58      	l32i.n	a5, a10, 0
400de88e:	074d      	mov.n	a4, a7
400de890:	001f86        	j	400de912 <_svfprintf_r+0x21ee>
400de893:	10c192        	addi	a9, a1, 16
400de896:	471b      	addi.n	a4, a7, 1
400de898:	b02290        	addx8	a2, a2, a9
400de89b:	712767        	blt	a7, a6, 400de910 <_svfprintf_r+0x21ec>
400de89e:	f21c      	movi.n	a2, 31
400de8a0:	3d2267        	blt	a2, a6, 400de8e1 <_svfprintf_r+0x21bd>
400de8a3:	261b      	addi.n	a2, a6, 1
400de8a5:	10c1a2        	addi	a10, a1, 16
400de8a8:	976122        	s32i	a2, a1, 0x25c
400de8ab:	02da22        	addmi	a2, a10, 0x200
400de8ae:	1a2232        	l32i	a3, a2, 104
400de8b1:	851c      	movi.n	a5, 24
400de8b3:	734b      	addi.n	a7, a3, 4
400de8b5:	1a6272        	s32i	a7, a2, 104
400de8b8:	052577        	blt	a5, a7, 400de8c1 <_svfprintf_r+0x219d>
400de8bb:	192232        	l32i	a3, a2, 100
400de8be:	000286        	j	400de8cc <_svfprintf_r+0x21a8>
400de8c1:	042537        	blt	a5, a3, 400de8c9 <_svfprintf_r+0x21a5>
400de8c4:	432c      	movi.n	a3, 36
400de8c6:	1a6232        	s32i	a3, a2, 104
400de8c9:	9c2132        	l32i	a3, a1, 0x270
400de8cc:	9e2122        	l32i	a2, a1, 0x278
400de8cf:	10c1e2        	addi	a14, a1, 16
400de8d2:	232a      	add.n	a2, a3, a2
400de8d4:	fcc222        	addi	a2, a2, -4
400de8d7:	0258      	l32i.n	a5, a2, 0
400de8d9:	b026e0        	addx8	a2, a6, a14
400de8dc:	0259      	s32i.n	a5, a2, 0
400de8de:	000c06        	j	400de912 <_svfprintf_r+0x21ee>
400de8e1:	10c132        	addi	a3, a1, 16
400de8e4:	02d322        	addmi	a2, a3, 0x200
400de8e7:	1a2232        	l32i	a3, a2, 104
400de8ea:	851c      	movi.n	a5, 24
400de8ec:	634b      	addi.n	a6, a3, 4
400de8ee:	1a6262        	s32i	a6, a2, 104
400de8f1:	082567        	blt	a5, a6, 400de8fd <_svfprintf_r+0x21d9>
400de8f4:	192232        	l32i	a3, a2, 100
400de8f7:	000346        	j	400de908 <_svfprintf_r+0x21e4>
400de8fa:	000000        	ill
400de8fd:	042537        	blt	a5, a3, 400de905 <_svfprintf_r+0x21e1>
400de900:	432c      	movi.n	a3, 36
400de902:	1a6232        	s32i	a3, a2, 104
400de905:	9c2132        	l32i	a3, a1, 0x270
400de908:	9e2122        	l32i	a2, a1, 0x278
400de90b:	232a      	add.n	a2, a3, a2
400de90d:	fcc222        	addi	a2, a2, -4
400de910:	0258      	l32i.n	a5, a2, 0
400de912:	030c      	movi.n	a3, 0
400de914:	047d      	mov.n	a7, a4
400de916:	202530        	or	a2, a5, a3
400de919:	02ac      	beqz.n	a2, 400de93d <_svfprintf_r+0x2219>
400de91b:	a02142        	l32i	a4, a1, 0x280
400de91e:	1b6407        	bbci	a4, 0, 400de93d <_svfprintf_r+0x2219>
400de921:	10c162        	addi	a6, a1, 16
400de924:	a62182        	l32i	a8, a1, 0x298
400de927:	02d622        	addmi	a2, a6, 0x200
400de92a:	a02192        	l32i	a9, a1, 0x280
400de92d:	043c      	movi.n	a4, 48
400de92f:	504242        	s8i	a4, a2, 80
400de932:	514282        	s8i	a8, a2, 81
400de935:	220c      	movi.n	a2, 2
400de937:	209920        	or	a9, a9, a2
400de93a:	a06192        	s32i	a9, a1, 0x280
400de93d:	a02142        	l32i	a4, a1, 0x280
400de940:	ffab22        	movi	a2, 0xfffffbff
400de943:	104420        	and	a4, a4, a2
400de946:	a06142        	s32i	a4, a1, 0x280
400de949:	02a022        	movi	a2, 2
400de94c:	10c182        	addi	a8, a1, 16
400de94f:	00a062        	movi	a6, 0
400de952:	02d842        	addmi	a4, a8, 0x200
400de955:	524462        	s8i	a6, a4, 82
400de958:	a52192        	l32i	a9, a1, 0x294
400de95b:	00b996        	bltz	a9, 400de96a <_svfprintf_r+0x2246>
400de95e:	a02162        	l32i	a6, a1, 0x280
400de961:	7faf42        	movi	a4, -129
400de964:	106640        	and	a6, a6, a4
400de967:	a06162        	s32i	a6, a1, 0x280
400de96a:	204530        	or	a4, a5, a3
400de96d:	01a062        	movi	a6, 1
400de970:	00a082        	movi	a8, 0
400de973:	938640        	movnez	a8, a6, a4
400de976:	744080        	extui	a4, a8, 0, 8
400de979:	008456        	bnez	a4, 400de985 <_svfprintf_r+0x2261>
400de97c:	a52182        	l32i	a8, a1, 0x294
400de97f:	934680        	movnez	a4, a6, a8
400de982:	172416        	beqz	a4, 400deaf8 <_svfprintf_r+0x23d4>
400de985:	80a142        	movi	a4, 0x180
400de988:	5a1226        	beqi	a2, 1, 400de9e6 <_svfprintf_r+0x22c2>
400de98b:	022266        	bnei	a2, 2, 400de991 <_svfprintf_r+0x226d>
400de98e:	004ac6        	j	400deabd <_svfprintf_r+0x2399>
400de991:	10c192        	addi	a9, a1, 16
400de994:	494a      	add.n	a4, a9, a4
400de996:	64c442        	addi	a4, a4, 100
400de999:	a16142        	s32i	a4, a1, 0x284
400de99c:	a12122        	l32i	a2, a1, 0x284
400de99f:	220b      	addi.n	a2, a2, -1
400de9a1:	a16122        	s32i	a2, a1, 0x284
400de9a4:	a12142        	l32i	a4, a1, 0x284
400de9a7:	242050        	extui	a2, a5, 0, 3
400de9aa:	30c222        	addi	a2, a2, 48
400de9ad:	004422        	s8i	a2, a4, 0
400de9b0:	415350        	srli	a5, a5, 3
400de9b3:	014330        	slli	a4, a3, 29
400de9b6:	205450        	or	a5, a4, a5
400de9b9:	413330        	srli	a3, a3, 3
400de9bc:	204530        	or	a4, a5, a3
400de9bf:	fd9456        	bnez	a4, 400de99c <_svfprintf_r+0x2278>
400de9c2:	d0c232        	addi	a3, a2, -48
400de9c5:	120c      	movi.n	a2, 1
400de9c7:	832430        	moveqz	a2, a4, a3
400de9ca:	742020        	extui	a2, a2, 0, 8
400de9cd:	14f216        	beqz	a2, 400deb20 <_svfprintf_r+0x23fc>
400de9d0:	a02152        	l32i	a5, a1, 0x280
400de9d3:	02e507        	bbsi	a5, 0, 400de9d9 <_svfprintf_r+0x22b5>
400de9d6:	005186        	j	400deb20 <_svfprintf_r+0x23fc>
400de9d9:	a12182        	l32i	a8, a1, 0x284
400de9dc:	023c      	movi.n	a2, 48
400de9de:	480b      	addi.n	a4, a8, -1
400de9e0:	004422        	s8i	a2, a4, 0
400de9e3:	0005c6        	j	400de9fe <_svfprintf_r+0x22da>
400de9e6:	a3dc      	bnez.n	a3, 400dea04 <_svfprintf_r+0x22e0>
400de9e8:	920c      	movi.n	a2, 9
400de9ea:	163257        	bltu	a2, a5, 400dea04 <_svfprintf_r+0x22e0>
400de9ed:	10c192        	addi	a9, a1, 16
400de9f0:	30c552        	addi	a5, a5, 48
400de9f3:	01d922        	addmi	a2, a9, 0x100
400de9f6:	494a      	add.n	a4, a9, a4
400de9f8:	e34252        	s8i	a5, a2, 227
400de9fb:	63c442        	addi	a4, a4, 99
400de9fe:	a16142        	s32i	a4, a1, 0x284
400dea01:	0046c6        	j	400deb20 <_svfprintf_r+0x23fc>
400dea04:	020c      	movi.n	a2, 0
400dea06:	90a162        	movi	a6, 0x190
400dea09:	a02182        	l32i	a8, a1, 0x280
400dea0c:	a76122        	s32i	a2, a1, 0x29c
400dea0f:	661a      	add.n	a6, a6, a1
400dea11:	00a422        	movi	a2, 0x400
400dea14:	64c642        	addi	a4, a6, 100
400dea17:	102820        	and	a2, a8, a2
400dea1a:	000086        	j	400dea20 <_svfprintf_r+0x22fc>
400dea1d:	a12142        	l32i	a4, a1, 0x284
400dea20:	c757c1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400dea23:	c590d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400dea26:	440b      	addi.n	a4, a4, -1
400dea28:	05ad      	mov.n	a10, a5
400dea2a:	03bd      	mov.n	a11, a3
400dea2c:	a16142        	s32i	a4, a1, 0x284
400dea2f:	c76081        	l32r	a8, 400d07b0 <_flash_cache_start+0x798>
400dea32:	0008e0        	callx8	a8
400dea35:	a72192        	l32i	a9, a1, 0x29c
400dea38:	30caa2        	addi	a10, a10, 48
400dea3b:	991b      	addi.n	a9, a9, 1
400dea3d:	0044a2        	s8i	a10, a4, 0
400dea40:	a76192        	s32i	a9, a1, 0x29c
400dea43:	056216        	beqz	a2, 400dea9d <_svfprintf_r+0x2379>
400dea46:	ad2142        	l32i	a4, a1, 0x2b4
400dea49:	190c      	movi.n	a9, 1
400dea4b:	000482        	l8ui	a8, a4, 0
400dea4e:	63cc      	bnez.n	a3, 400dea58 <_svfprintf_r+0x2334>
400dea50:	09a042        	movi	a4, 9
400dea53:	013457        	bltu	a4, a5, 400dea58 <_svfprintf_r+0x2334>
400dea56:	039d      	mov.n	a9, a3
400dea58:	01af42        	movi	a4, -255
400dea5b:	484a      	add.n	a4, a8, a4
400dea5d:	060c      	movi.n	a6, 0
400dea5f:	01a0a2        	movi	a10, 1
400dea62:	83a640        	moveqz	a10, a6, a4
400dea65:	340a97        	bnone	a10, a9, 400dea9d <_svfprintf_r+0x2379>
400dea68:	a72192        	l32i	a9, a1, 0x29c
400dea6b:	2e9897        	bne	a8, a9, 400dea9d <_svfprintf_r+0x2379>
400dea6e:	b02182        	l32i	a8, a1, 0x2c0
400dea71:	a12142        	l32i	a4, a1, 0x284
400dea74:	b321b2        	l32i	a11, a1, 0x2cc
400dea77:	c04480        	sub	a4, a4, a8
400dea7a:	08cd      	mov.n	a12, a8
400dea7c:	20a440        	or	a10, a4, a4
400dea7f:	a16142        	s32i	a4, a1, 0x284
400dea82:	c65881        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400dea85:	0008e0        	callx8	a8
400dea88:	ad2192        	l32i	a9, a1, 0x2b4
400dea8b:	064d      	mov.n	a4, a6
400dea8d:	010982        	l8ui	a8, a9, 1
400dea90:	a76162        	s32i	a6, a1, 0x29c
400dea93:	160c      	movi.n	a6, 1
400dea95:	934680        	movnez	a4, a6, a8
400dea98:	994a      	add.n	a9, a9, a4
400dea9a:	ad6192        	s32i	a9, a1, 0x2b4
400dea9d:	c737c1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400deaa0:	c571d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400deaa3:	05ad      	mov.n	a10, a5
400deaa5:	03bd      	mov.n	a11, a3
400deaa7:	c56a81        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400deaaa:	0008e0        	callx8	a8
400deaad:	0a5d      	mov.n	a5, a10
400deaaf:	20aba0        	or	a10, a11, a10
400deab2:	0b3d      	mov.n	a3, a11
400deab4:	f65a56        	bnez	a10, 400dea1d <_svfprintf_r+0x22f9>
400deab7:	001946        	j	400deb20 <_svfprintf_r+0x23fc>
400deaba:	000000        	ill
400deabd:	10c1a2        	addi	a10, a1, 16
400deac0:	4a4a      	add.n	a4, a10, a4
400deac2:	64c442        	addi	a4, a4, 100
400deac5:	a16142        	s32i	a4, a1, 0x284
400deac8:	a12122        	l32i	a2, a1, 0x284
400deacb:	b52142        	l32i	a4, a1, 0x2d4
400deace:	220b      	addi.n	a2, a2, -1
400dead0:	a16122        	s32i	a2, a1, 0x284
400dead3:	342050        	extui	a2, a5, 0, 4
400dead6:	242a      	add.n	a2, a4, a2
400dead8:	000222        	l8ui	a2, a2, 0
400deadb:	a12182        	l32i	a8, a1, 0x284
400deade:	415450        	srli	a5, a5, 4
400deae1:	004822        	s8i	a2, a8, 0
400deae4:	012340        	slli	a2, a3, 28
400deae7:	205250        	or	a5, a2, a5
400deaea:	413430        	srli	a3, a3, 4
400deaed:	202530        	or	a2, a5, a3
400deaf0:	fd4256        	bnez	a2, 400deac8 <_svfprintf_r+0x23a4>
400deaf3:	000a46        	j	400deb20 <_svfprintf_r+0x23fc>
400deaf6:	320000        	orbc	b0, b0, b0
400deaf9:	9280a1        	l32r	a10, 400c34fc <_rtc_text_end+0x34fc>
400deafc:	3a10c1        	l32r	a12, 400ad33c <_iram_end+0x1f7e8>
400deaff:	4249      	s32i.n	a4, a2, 16
400deb01:	4264c4        	lsi	f12, a4, 0x108
400deb04:	dca161        	l32r	a6, 400d5d88 <esp_perip_clk_init+0xc8>
400deb07:	212262        	l32i	a6, a2, 132
400deb0a:	6207a0        	lsi	f10, a7, 0x188
400deb0d:	393011        	l32r	a1, 400acfd0 <_iram_end+0x1f47c>
400deb10:	a04280        	addx4	a4, a2, a8
400deb13:	d92230        	lsi	f3, a2, 0x364
400deb16:	c33201        	l32r	a0, 400cf7e0 <_rtc_text_end+0xf7e0>
400deb19:	424263        	ssi	f6, a2, 0x108
400deb1c:	6132e3        	lsi	f14, a2, 0x184
400deb1f:	c132a1        	l32r	a10, 400cefe8 <_rtc_text_end+0xefe8>
400deb22:	a12210        	lsi	f1, a2, 0x284
400deb25:	2142e4        	lsi	f14, a2, 132
400deb28:	232aa1        	l32r	a10, 400a77d0 <_iram_end+0x19c7c>
400deb2b:	050c      	movi.n	a5, 0
400deb2d:	c02240        	sub	a2, a2, a4
400deb30:	a52162        	l32i	a6, a1, 0x294
400deb33:	a26152        	s32i	a5, a1, 0x288
400deb36:	a56122        	s32i	a2, a1, 0x294
400deb39:	053d      	mov.n	a3, a5
400deb3b:	0010c6        	j	400deb82 <_svfprintf_r+0x245e>
400deb3e:	620000        	lsi	f0, a0, 0x188
400deb41:	cca621        	l32r	a2, 400d1ddc <unsigned int testMult<unsigned long long>(char const*, unsigned int)+0xc8>
400deb44:	1ec616        	beqz	a6, 400ded34 <_svfprintf_r+0x2610>
400deb47:	c18203        	lsip	f0, a2, 0x304
400deb4a:	d82210        	lsi	f1, a2, 0x360
400deb4d:	426201        	l32r	a0, 400af4d8 <_iram_end+0x21984>
400deb50:	030c80        	rsr.scompare1	a8
400deb53:	02d822        	addmi	a2, a8, 0x200
400deb56:	090c      	movi.n	a9, 0
400deb58:	524232        	s8i	a3, a2, 82
400deb5b:	120c      	movi.n	a2, 1
400deb5d:	a56122        	s32i	a2, a1, 0x294
400deb60:	a26192        	s32i	a9, a1, 0x288
400deb63:	096d      	mov.n	a6, a9
400deb65:	093d      	mov.n	a3, a9
400deb67:	095d      	mov.n	a5, a9
400deb69:	092d      	mov.n	a2, a9
400deb6b:	90a182        	movi	a8, 0x190
400deb6e:	818a      	add.n	a8, a1, a8
400deb70:	a16182        	s32i	a8, a1, 0x284
400deb73:	000346        	j	400deb84 <_svfprintf_r+0x2460>
400deb76:	000000        	ill
400deb79:	a261a2        	s32i	a10, a1, 0x288
400deb7c:	0a6d      	mov.n	a6, a10
400deb7e:	063d      	mov.n	a3, a6
400deb80:	065d      	mov.n	a5, a6
400deb82:	052d      	mov.n	a2, a5
400deb84:	a52192        	l32i	a9, a1, 0x294
400deb87:	10c1a2        	addi	a10, a1, 16
400deb8a:	539690        	max	a9, a6, a9
400deb8d:	02da42        	addmi	a4, a10, 0x200
400deb90:	a96192        	s32i	a9, a1, 0x2a4
400deb93:	520482        	l8ui	a8, a4, 82
400deb96:	190c      	movi.n	a9, 1
400deb98:	a921e2        	l32i	a14, a1, 0x2a4
400deb9b:	040c      	movi.n	a4, 0
400deb9d:	934980        	movnez	a4, a9, a8
400deba0:	a02182        	l32i	a8, a1, 0x280
400deba3:	ee4a      	add.n	a14, a14, a4
400deba5:	a02192        	l32i	a9, a1, 0x280
400deba8:	240c      	movi.n	a4, 2
400debaa:	104840        	and	a4, a8, a4
400debad:	84a082        	movi	a8, 132
400debb0:	ee4a      	add.n	a14, a14, a4
400debb2:	108980        	and	a8, a9, a8
400debb5:	a961e2        	s32i	a14, a1, 0x2a4
400debb8:	b26182        	s32i	a8, a1, 0x2c8
400debbb:	0b5856        	bnez	a8, 400dec74 <_svfprintf_r+0x2550>
400debbe:	ac2192        	l32i	a9, a1, 0x2b0
400debc1:	0d1c      	movi.n	a13, 16
400debc3:	c089e0        	sub	a8, a9, a14
400debc6:	5b18e6        	bgei	a8, 1, 400dec25 <_svfprintf_r+0x2501>
400debc9:	0029c6        	j	400dec74 <_svfprintf_r+0x2550>
400debcc:	9f21a2        	l32i	a10, a1, 0x27c
400debcf:	0a99      	s32i.n	a9, a10, 0
400debd1:	8f2192        	l32i	a9, a1, 0x23c
400debd4:	1ad9      	s32i.n	a13, a10, 4
400debd6:	10c992        	addi	a9, a9, 16
400debd9:	8f6192        	s32i	a9, a1, 0x23c
400debdc:	8e2192        	l32i	a9, a1, 0x238
400debdf:	991b      	addi.n	a9, a9, 1
400debe1:	8e6192        	s32i	a9, a1, 0x238
400debe4:	0d89e6        	bgei	a9, 8, 400debf5 <_svfprintf_r+0x24d1>
400debe7:	9f2192        	l32i	a9, a1, 0x27c
400debea:	998b      	addi.n	a9, a9, 8
400debec:	9f6192        	s32i	a9, a1, 0x27c
400debef:	000bc6        	j	400dec22 <_svfprintf_r+0x24fe>
400debf2:	000000        	ill
400debf5:	34a2c2        	movi	a12, 0x234
400debf8:	a421b2        	l32i	a11, a1, 0x290
400debfb:	a321a2        	l32i	a10, a1, 0x28c
400debfe:	80cc10        	add	a12, a12, a1
400dec01:	b86182        	s32i	a8, a1, 0x2e0
400dec04:	b761d2        	s32i	a13, a1, 0x2dc
400dec07:	07d1a5        	call8	400e6920 <__ssprint_r>
400dec0a:	b82182        	l32i	a8, a1, 0x2e0
400dec0d:	b721d2        	l32i	a13, a1, 0x2dc
400dec10:	002a16        	beqz	a10, 400dec16 <_svfprintf_r+0x24f2>
400dec13:	02f246        	j	400df7e0 <_svfprintf_r+0x30bc>
400dec16:	e4a192        	movi	a9, 0x1e4
400dec19:	10c1a2        	addi	a10, a1, 16
400dec1c:	80aa90        	add	a10, a10, a9
400dec1f:	9f61a2        	s32i	a10, a1, 0x27c
400dec22:	f0c882        	addi	a8, a8, -16
400dec25:	c6d691        	l32r	a9, 400d0780 <_flash_cache_start+0x768>
400dec28:	a02d87        	blt	a13, a8, 400debcc <_svfprintf_r+0x24a8>
400dec2b:	9f21e2        	l32i	a14, a1, 0x27c
400dec2e:	10c1a2        	addi	a10, a1, 16
400dec31:	0e99      	s32i.n	a9, a14, 0
400dec33:	02da92        	addmi	a9, a10, 0x200
400dec36:	8f21a2        	l32i	a10, a1, 0x23c
400dec39:	1e89      	s32i.n	a8, a14, 4
400dec3b:	8a8a      	add.n	a8, a10, a8
400dec3d:	b989      	s32i.n	a8, a9, 44
400dec3f:	a988      	l32i.n	a8, a9, 40
400dec41:	881b      	addi.n	a8, a8, 1
400dec43:	a989      	s32i.n	a8, a9, 40
400dec45:	0788e6        	bgei	a8, 8, 400dec50 <_svfprintf_r+0x252c>
400dec48:	ee8b      	addi.n	a14, a14, 8
400dec4a:	9f61e2        	s32i	a14, a1, 0x27c
400dec4d:	0008c6        	j	400dec74 <_svfprintf_r+0x2550>
400dec50:	10c1e2        	addi	a14, a1, 16
400dec53:	24a282        	movi	a8, 0x224
400dec56:	a421b2        	l32i	a11, a1, 0x290
400dec59:	a321a2        	l32i	a10, a1, 0x28c
400dec5c:	80ce80        	add	a12, a14, a8
400dec5f:	07cc25        	call8	400e6920 <__ssprint_r>
400dec62:	002a16        	beqz	a10, 400dec68 <_svfprintf_r+0x2544>
400dec65:	02ddc6        	j	400df7e0 <_svfprintf_r+0x30bc>
400dec68:	e4a182        	movi	a8, 0x1e4
400dec6b:	10c192        	addi	a9, a1, 16
400dec6e:	809980        	add	a9, a9, a8
400dec71:	9f6192        	s32i	a9, a1, 0x27c
400dec74:	10c1a2        	addi	a10, a1, 16
400dec77:	02da92        	addmi	a9, a10, 0x200
400dec7a:	520982        	l8ui	a8, a9, 82
400dec7d:	049816        	beqz	a8, 400decca <_svfprintf_r+0x25a6>
400dec80:	9f21e2        	l32i	a14, a1, 0x27c
400dec83:	52a282        	movi	a8, 0x252
400dec86:	8a8a      	add.n	a8, a10, a8
400dec88:	0e89      	s32i.n	a8, a14, 0
400dec8a:	180c      	movi.n	a8, 1
400dec8c:	1e89      	s32i.n	a8, a14, 4
400dec8e:	8f2182        	l32i	a8, a1, 0x23c
400dec91:	881b      	addi.n	a8, a8, 1
400dec93:	8f6182        	s32i	a8, a1, 0x23c
400dec96:	8e2182        	l32i	a8, a1, 0x238
400dec99:	881b      	addi.n	a8, a8, 1
400dec9b:	8e6182        	s32i	a8, a1, 0x238
400dec9e:	0788e6        	bgei	a8, 8, 400deca9 <_svfprintf_r+0x2585>
400deca1:	ee8b      	addi.n	a14, a14, 8
400deca3:	9f61e2        	s32i	a14, a1, 0x27c
400deca6:	000806        	j	400decca <_svfprintf_r+0x25a6>
400deca9:	34a2c2        	movi	a12, 0x234
400decac:	a421b2        	l32i	a11, a1, 0x290
400decaf:	a321a2        	l32i	a10, a1, 0x28c
400decb2:	80cc10        	add	a12, a12, a1
400decb5:	07c6a5        	call8	400e6920 <__ssprint_r>
400decb8:	002a16        	beqz	a10, 400decbe <_svfprintf_r+0x259a>
400decbb:	02c846        	j	400df7e0 <_svfprintf_r+0x30bc>
400decbe:	e4a182        	movi	a8, 0x1e4
400decc1:	10c192        	addi	a9, a1, 16
400decc4:	809980        	add	a9, a9, a8
400decc7:	9f6192        	s32i	a9, a1, 0x27c
400decca:	04c416        	beqz	a4, 400ded1a <_svfprintf_r+0x25f6>
400deccd:	9f2182        	l32i	a8, a1, 0x27c
400decd0:	60a2a2        	movi	a10, 0x260
400decd3:	41aa      	add.n	a4, a1, a10
400decd5:	0849      	s32i.n	a4, a8, 0
400decd7:	240c      	movi.n	a4, 2
400decd9:	1849      	s32i.n	a4, a8, 4
400decdb:	8f2142        	l32i	a4, a1, 0x23c
400decde:	442b      	addi.n	a4, a4, 2
400dece0:	8f6142        	s32i	a4, a1, 0x23c
400dece3:	8e2142        	l32i	a4, a1, 0x238
400dece6:	441b      	addi.n	a4, a4, 1
400dece8:	8e6142        	s32i	a4, a1, 0x238
400deceb:	0a84e6        	bgei	a4, 8, 400decf9 <_svfprintf_r+0x25d5>
400decee:	9f2142        	l32i	a4, a1, 0x27c
400decf1:	448b      	addi.n	a4, a4, 8
400decf3:	9f6142        	s32i	a4, a1, 0x27c
400decf6:	000806        	j	400ded1a <_svfprintf_r+0x25f6>
400decf9:	34a2c2        	movi	a12, 0x234
400decfc:	a421b2        	l32i	a11, a1, 0x290
400decff:	a321a2        	l32i	a10, a1, 0x28c
400ded02:	80cc10        	add	a12, a12, a1
400ded05:	07c1a5        	call8	400e6920 <__ssprint_r>
400ded08:	002a16        	beqz	a10, 400ded0e <_svfprintf_r+0x25ea>
400ded0b:	02b446        	j	400df7e0 <_svfprintf_r+0x30bc>
400ded0e:	e4a142        	movi	a4, 0x1e4
400ded11:	10c182        	addi	a8, a1, 16
400ded14:	808840        	add	a8, a8, a4
400ded17:	9f6182        	s32i	a8, a1, 0x27c
400ded1a:	b22192        	l32i	a9, a1, 0x2c8
400ded1d:	02e926        	beqi	a9, 128, 400ded23 <_svfprintf_r+0x25ff>
400ded20:	002c46        	j	400dedd5 <_svfprintf_r+0x26b1>
400ded23:	a92192        	l32i	a9, a1, 0x2a4
400ded26:	ac2182        	l32i	a8, a1, 0x2b0
400ded29:	c04890        	sub	a4, a8, a9
400ded2c:	091c      	movi.n	a9, 16
400ded2e:	5414e6        	bgei	a4, 1, 400ded86 <_svfprintf_r+0x2662>
400ded31:	002806        	j	400dedd5 <_svfprintf_r+0x26b1>
400ded34:	9f21a2        	l32i	a10, a1, 0x27c
400ded37:	0a89      	s32i.n	a8, a10, 0
400ded39:	8f2182        	l32i	a8, a1, 0x23c
400ded3c:	1a99      	s32i.n	a9, a10, 4
400ded3e:	10c882        	addi	a8, a8, 16
400ded41:	8f6182        	s32i	a8, a1, 0x23c
400ded44:	8e2182        	l32i	a8, a1, 0x238
400ded47:	881b      	addi.n	a8, a8, 1
400ded49:	8e6182        	s32i	a8, a1, 0x238
400ded4c:	0c88e6        	bgei	a8, 8, 400ded5c <_svfprintf_r+0x2638>
400ded4f:	9f2182        	l32i	a8, a1, 0x27c
400ded52:	888b      	addi.n	a8, a8, 8
400ded54:	9f6182        	s32i	a8, a1, 0x27c
400ded57:	000a06        	j	400ded83 <_svfprintf_r+0x265f>
400ded5a:	c20000        	quou	a0, a0, a0
400ded5d:	b234a2        	lsi	f10, a4, 0x2c8
400ded60:	a2a421        	l32r	a2, 400c77f0 <_rtc_text_end+0x77f0>
400ded63:	10a321        	l32r	a2, 400a2ff0 <_iram_end+0x1549c>
400ded66:	80cc      	bnez.n	a0, 400ded72 <_svfprintf_r+0x264e>
400ded68:	b76192        	s32i	a9, a1, 0x2dc
400ded6b:	07bb65        	call8	400e6920 <__ssprint_r>
400ded6e:	b72192        	l32i	a9, a1, 0x2dc
400ded71:	002a16        	beqz	a10, 400ded77 <_svfprintf_r+0x2653>
400ded74:	029a06        	j	400df7e0 <_svfprintf_r+0x30bc>
400ded77:	e4a182        	movi	a8, 0x1e4
400ded7a:	10c1a2        	addi	a10, a1, 16
400ded7d:	80aa80        	add	a10, a10, a8
400ded80:	9f61a2        	s32i	a10, a1, 0x27c
400ded83:	f0c442        	addi	a4, a4, -16
400ded86:	c67f81        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400ded89:	a72947        	blt	a9, a4, 400ded34 <_svfprintf_r+0x2610>
400ded8c:	9f2192        	l32i	a9, a1, 0x27c
400ded8f:	1949      	s32i.n	a4, a9, 4
400ded91:	0989      	s32i.n	a8, a9, 0
400ded93:	8f2192        	l32i	a9, a1, 0x23c
400ded96:	494a      	add.n	a4, a9, a4
400ded98:	8f6142        	s32i	a4, a1, 0x23c
400ded9b:	8e2142        	l32i	a4, a1, 0x238
400ded9e:	441b      	addi.n	a4, a4, 1
400deda0:	8e6142        	s32i	a4, a1, 0x238
400deda3:	0a84e6        	bgei	a4, 8, 400dedb1 <_svfprintf_r+0x268d>
400deda6:	9f2142        	l32i	a4, a1, 0x27c
400deda9:	448b      	addi.n	a4, a4, 8
400dedab:	9f6142        	s32i	a4, a1, 0x27c
400dedae:	0008c6        	j	400dedd5 <_svfprintf_r+0x26b1>
400dedb1:	10c182        	addi	a8, a1, 16
400dedb4:	24a292        	movi	a9, 0x224
400dedb7:	a421b2        	l32i	a11, a1, 0x290
400dedba:	a321a2        	l32i	a10, a1, 0x28c
400dedbd:	80c890        	add	a12, a8, a9
400dedc0:	07b5e5        	call8	400e6920 <__ssprint_r>
400dedc3:	002a16        	beqz	a10, 400dedc9 <_svfprintf_r+0x26a5>
400dedc6:	028586        	j	400df7e0 <_svfprintf_r+0x30bc>
400dedc9:	e4a142        	movi	a4, 0x1e4
400dedcc:	10c182        	addi	a8, a1, 16
400dedcf:	808840        	add	a8, a8, a4
400dedd2:	9f6182        	s32i	a8, a1, 0x27c
400dedd5:	a52192        	l32i	a9, a1, 0x294
400dedd8:	081c      	movi.n	a8, 16
400dedda:	c06690        	sub	a6, a6, a9
400deddd:	5516e6        	bgei	a6, 1, 400dee36 <_svfprintf_r+0x2712>
400dede0:	002846        	j	400dee85 <_svfprintf_r+0x2761>
400dede3:	219200        	srai	a9, a0, 2
400dede6:	9f          	.byte 0x9f
400dede7:	0949      	s32i.n	a4, a9, 0
400dede9:	8f2142        	l32i	a4, a1, 0x23c
400dedec:	1989      	s32i.n	a8, a9, 4
400dedee:	10c442        	addi	a4, a4, 16
400dedf1:	8f6142        	s32i	a4, a1, 0x23c
400dedf4:	8e2142        	l32i	a4, a1, 0x238
400dedf7:	441b      	addi.n	a4, a4, 1
400dedf9:	8e6142        	s32i	a4, a1, 0x238
400dedfc:	0c84e6        	bgei	a4, 8, 400dee0c <_svfprintf_r+0x26e8>
400dedff:	9f2142        	l32i	a4, a1, 0x27c
400dee02:	448b      	addi.n	a4, a4, 8
400dee04:	9f6142        	s32i	a4, a1, 0x27c
400dee07:	000a06        	j	400dee33 <_svfprintf_r+0x270f>
400dee0a:	c20000        	quou	a0, a0, a0
400dee0d:	b234a2        	lsi	f10, a4, 0x2c8
400dee10:	a2a421        	l32r	a2, 400c78a0 <_rtc_text_end+0x78a0>
400dee13:	10a321        	l32r	a2, 400a30a0 <_iram_end+0x1554c>
400dee16:	80cc      	bnez.n	a0, 400dee22 <_svfprintf_r+0x26fe>
400dee18:	b86182        	s32i	a8, a1, 0x2e0
400dee1b:	07b065        	call8	400e6920 <__ssprint_r>
400dee1e:	b82182        	l32i	a8, a1, 0x2e0
400dee21:	002a16        	beqz	a10, 400dee27 <_svfprintf_r+0x2703>
400dee24:	026e06        	j	400df7e0 <_svfprintf_r+0x30bc>
400dee27:	e4a142        	movi	a4, 0x1e4
400dee2a:	10c192        	addi	a9, a1, 16
400dee2d:	809940        	add	a9, a9, a4
400dee30:	9f6192        	s32i	a9, a1, 0x27c
400dee33:	f0c662        	addi	a6, a6, -16
400dee36:	c65341        	l32r	a4, 400d0784 <_flash_cache_start+0x76c>
400dee39:	a72867        	blt	a8, a6, 400dede4 <_svfprintf_r+0x26c0>
400dee3c:	9f2182        	l32i	a8, a1, 0x27c
400dee3f:	0849      	s32i.n	a4, a8, 0
400dee41:	8f2142        	l32i	a4, a1, 0x23c
400dee44:	1869      	s32i.n	a6, a8, 4
400dee46:	646a      	add.n	a6, a4, a6
400dee48:	8e2142        	l32i	a4, a1, 0x238
400dee4b:	8f6162        	s32i	a6, a1, 0x23c
400dee4e:	441b      	addi.n	a4, a4, 1
400dee50:	8e6142        	s32i	a4, a1, 0x238
400dee53:	0a84e6        	bgei	a4, 8, 400dee61 <_svfprintf_r+0x273d>
400dee56:	9f2142        	l32i	a4, a1, 0x27c
400dee59:	448b      	addi.n	a4, a4, 8
400dee5b:	9f6142        	s32i	a4, a1, 0x27c
400dee5e:	0008c6        	j	400dee85 <_svfprintf_r+0x2761>
400dee61:	10c162        	addi	a6, a1, 16
400dee64:	24a282        	movi	a8, 0x224
400dee67:	a421b2        	l32i	a11, a1, 0x290
400dee6a:	a321a2        	l32i	a10, a1, 0x28c
400dee6d:	80c680        	add	a12, a6, a8
400dee70:	07aae5        	call8	400e6920 <__ssprint_r>
400dee73:	002a16        	beqz	a10, 400dee79 <_svfprintf_r+0x2755>
400dee76:	025986        	j	400df7e0 <_svfprintf_r+0x30bc>
400dee79:	e4a142        	movi	a4, 0x1e4
400dee7c:	10c192        	addi	a9, a1, 16
400dee7f:	809940        	add	a9, a9, a4
400dee82:	9f6192        	s32i	a9, a1, 0x27c
400dee85:	a02142        	l32i	a4, a1, 0x280
400dee88:	2ae487        	bbsi	a4, 8, 400deeb6 <_svfprintf_r+0x2792>
400dee8b:	a52192        	l32i	a9, a1, 0x294
400dee8e:	8f2162        	l32i	a6, a1, 0x23c
400dee91:	8e2122        	l32i	a2, a1, 0x238
400dee94:	9f2152        	l32i	a5, a1, 0x27c
400dee97:	a12182        	l32i	a8, a1, 0x284
400dee9a:	669a      	add.n	a6, a6, a9
400dee9c:	221b      	addi.n	a2, a2, 1
400dee9e:	0589      	s32i.n	a8, a5, 0
400deea0:	1599      	s32i.n	a9, a5, 4
400deea2:	8f6162        	s32i	a6, a1, 0x23c
400deea5:	8e6122        	s32i	a2, a1, 0x238
400deea8:	0282a6        	blti	a2, 8, 400deeae <_svfprintf_r+0x278a>
400deeab:	01ff86        	j	400df6ad <_svfprintf_r+0x2f89>
400deeae:	558b      	addi.n	a5, a5, 8
400deeb0:	9f6152        	s32i	a5, a1, 0x27c
400deeb3:	020486        	j	400df6c9 <_svfprintf_r+0x2fa5>
400deeb6:	a62162        	l32i	a6, a1, 0x298
400deeb9:	65a042        	movi	a4, 101
400deebc:	022467        	blt	a4, a6, 400deec2 <_svfprintf_r+0x279e>
400deebf:	018e46        	j	400df4fc <_svfprintf_r+0x2dd8>
400deec2:	c468c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400deec5:	c467d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400deec8:	aa21a2        	l32i	a10, a1, 0x2a8
400deecb:	ab21b2        	l32i	a11, a1, 0x2ac
400deece:	c63181        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400deed1:	0008e0        	callx8	a8
400deed4:	109a56        	bnez	a10, 400defe1 <_svfprintf_r+0x28bd>
400deed7:	c62c21        	l32r	a2, 400d0788 <_flash_cache_start+0x770>
400deeda:	9f2182        	l32i	a8, a1, 0x27c
400deedd:	0829      	s32i.n	a2, a8, 0
400deedf:	120c      	movi.n	a2, 1
400deee1:	1829      	s32i.n	a2, a8, 4
400deee3:	8f2122        	l32i	a2, a1, 0x23c
400deee6:	221b      	addi.n	a2, a2, 1
400deee8:	8f6122        	s32i	a2, a1, 0x23c
400deeeb:	8e2122        	l32i	a2, a1, 0x238
400deeee:	221b      	addi.n	a2, a2, 1
400deef0:	8e6122        	s32i	a2, a1, 0x238
400deef3:	0982e6        	bgei	a2, 8, 400def00 <_svfprintf_r+0x27dc>
400deef6:	888b      	addi.n	a8, a8, 8
400deef8:	9f6182        	s32i	a8, a1, 0x27c
400deefb:	0007c6        	j	400def1e <_svfprintf_r+0x27fa>
400deefe:	c20000        	quou	a0, a0, a0
400def01:	b234a2        	lsi	f10, a4, 0x2c8
400def04:	a2a421        	l32r	a2, 400c7994 <_rtc_text_end+0x7994>
400def07:	1aa321        	l32r	a2, 400a5994 <_iram_end+0x17e40>
400def0a:	65cc      	bnez.n	a5, 400def14 <_svfprintf_r+0x27f0>
400def0c:	8c07a1        	l32r	a10, 400c1f28 <_rtc_text_end+0x1f28>
400def0f:	061a      	add.n	a0, a6, a1
400def11:	220233        	lsi	f3, a2, 136
400def14:	32e4a1        	l32r	a10, 400abaa4 <_iram_end+0x1df50>
400def17:	2a10c1        	l32r	a12, 400a9758 <_iram_end+0x1bc04>
400def1a:	613233        	lsi	f3, a2, 0x184
400def1d:	9f          	.byte 0x9f
400def1e:	952122        	l32i	a2, a1, 0x254
400def21:	a72142        	l32i	a4, a1, 0x29c
400def24:	082247        	blt	a2, a4, 400def30 <_svfprintf_r+0x280c>
400def27:	a02152        	l32i	a5, a1, 0x280
400def2a:	02e507        	bbsi	a5, 0, 400def30 <_svfprintf_r+0x280c>
400def2d:	01e606        	j	400df6c9 <_svfprintf_r+0x2fa5>
400def30:	af2192        	l32i	a9, a1, 0x2bc
400def33:	8f2122        	l32i	a2, a1, 0x23c
400def36:	9f2162        	l32i	a6, a1, 0x27c
400def39:	229a      	add.n	a2, a2, a9
400def3b:	8f6122        	s32i	a2, a1, 0x23c
400def3e:	8e2122        	l32i	a2, a1, 0x238
400def41:	b12182        	l32i	a8, a1, 0x2c4
400def44:	221b      	addi.n	a2, a2, 1
400def46:	0689      	s32i.n	a8, a6, 0
400def48:	1699      	s32i.n	a9, a6, 4
400def4a:	8e6122        	s32i	a2, a1, 0x238
400def4d:	0782e6        	bgei	a2, 8, 400def58 <_svfprintf_r+0x2834>
400def50:	668b      	addi.n	a6, a6, 8
400def52:	9f6162        	s32i	a6, a1, 0x27c
400def55:	000806        	j	400def79 <_svfprintf_r+0x2855>
400def58:	34a2c2        	movi	a12, 0x234
400def5b:	a421b2        	l32i	a11, a1, 0x290
400def5e:	a321a2        	l32i	a10, a1, 0x28c
400def61:	80cc10        	add	a12, a12, a1
400def64:	079ba5        	call8	400e6920 <__ssprint_r>
400def67:	002a16        	beqz	a10, 400def6d <_svfprintf_r+0x2849>
400def6a:	021c86        	j	400df7e0 <_svfprintf_r+0x30bc>
400def6d:	e4a122        	movi	a2, 0x1e4
400def70:	10c132        	addi	a3, a1, 16
400def73:	803320        	add	a3, a3, a2
400def76:	9f6132        	s32i	a3, a1, 0x27c
400def79:	a72142        	l32i	a4, a1, 0x29c
400def7c:	240b      	addi.n	a2, a4, -1
400def7e:	041c      	movi.n	a4, 16
400def80:	5412e6        	bgei	a2, 1, 400defd8 <_svfprintf_r+0x28b4>
400def83:	01d086        	j	400df6c9 <_svfprintf_r+0x2fa5>
400def86:	520000        	lsi	f0, a0, 0x148
400def89:	629f21        	l32r	a2, 400b7a08 <_iram_end+0x29eb4>
400def8c:	3910c1        	l32r	a12, 400ad3cc <_iram_end+0x1f878>
400def8f:	213205        	call0	401002b0 <_etext+0x139d3>
400def92:	8f          	.byte 0x8f
400def93:	1549      	s32i.n	a4, a5, 4
400def95:	10c332        	addi	a3, a3, 16
400def98:	8f6132        	s32i	a3, a1, 0x23c
400def9b:	8e2132        	l32i	a3, a1, 0x238
400def9e:	02d652        	addmi	a5, a6, 0x200
400defa1:	331b      	addi.n	a3, a3, 1
400defa3:	8e6132        	s32i	a3, a1, 0x238
400defa6:	0a83e6        	bgei	a3, 8, 400defb4 <_svfprintf_r+0x2890>
400defa9:	9f2182        	l32i	a8, a1, 0x27c
400defac:	888b      	addi.n	a8, a8, 8
400defae:	9f6182        	s32i	a8, a1, 0x27c
400defb1:	000806        	j	400defd5 <_svfprintf_r+0x28b1>
400defb4:	34a2c2        	movi	a12, 0x234
400defb7:	a421b2        	l32i	a11, a1, 0x290
400defba:	a321a2        	l32i	a10, a1, 0x28c
400defbd:	80cc10        	add	a12, a12, a1
400defc0:	0795e5        	call8	400e6920 <__ssprint_r>
400defc3:	002a16        	beqz	a10, 400defc9 <_svfprintf_r+0x28a5>
400defc6:	020586        	j	400df7e0 <_svfprintf_r+0x30bc>
400defc9:	e4a132        	movi	a3, 0x1e4
400defcc:	10c192        	addi	a9, a1, 16
400defcf:	809930        	add	a9, a9, a3
400defd2:	9f6192        	s32i	a9, a1, 0x27c
400defd5:	f0c222        	addi	a2, a2, -16
400defd8:	c5eb31        	l32r	a3, 400d0784 <_flash_cache_start+0x76c>
400defdb:	a92427        	blt	a4, a2, 400def88 <_svfprintf_r+0x2864>
400defde:	013906        	j	400df4c6 <_svfprintf_r+0x2da2>
400defe1:	952142        	l32i	a4, a1, 0x254
400defe4:	0214a6        	blti	a4, 1, 400defea <_svfprintf_r+0x28c6>
400defe7:	004d46        	j	400df120 <_svfprintf_r+0x29fc>
400defea:	c5e721        	l32r	a2, 400d0788 <_flash_cache_start+0x770>
400defed:	9f2142        	l32i	a4, a1, 0x27c
400deff0:	10c152        	addi	a5, a1, 16
400deff3:	0429      	s32i.n	a2, a4, 0
400deff5:	120c      	movi.n	a2, 1
400deff7:	1429      	s32i.n	a2, a4, 4
400deff9:	8f2122        	l32i	a2, a1, 0x23c
400deffc:	221b      	addi.n	a2, a2, 1
400deffe:	8f6122        	s32i	a2, a1, 0x23c
400df001:	8e2122        	l32i	a2, a1, 0x238
400df004:	221b      	addi.n	a2, a2, 1
400df006:	8e6122        	s32i	a2, a1, 0x238
400df009:	0782e6        	bgei	a2, 8, 400df014 <_svfprintf_r+0x28f0>
400df00c:	448b      	addi.n	a4, a4, 8
400df00e:	9f6142        	s32i	a4, a1, 0x27c
400df011:	0006c6        	j	400df030 <_svfprintf_r+0x290c>
400df014:	34a2c2        	movi	a12, 0x234
400df017:	a421b2        	l32i	a11, a1, 0x290
400df01a:	a321a2        	l32i	a10, a1, 0x28c
400df01d:	cc1a      	add.n	a12, a12, a1
400df01f:	079025        	call8	400e6920 <__ssprint_r>
400df022:	7baa56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df025:	e4a122        	movi	a2, 0x1e4
400df028:	10c162        	addi	a6, a1, 16
400df02b:	662a      	add.n	a6, a6, a2
400df02d:	9f6162        	s32i	a6, a1, 0x27c
400df030:	952122        	l32i	a2, a1, 0x254
400df033:	a72182        	l32i	a8, a1, 0x29c
400df036:	202820        	or	a2, a8, a2
400df039:	008256        	bnez	a2, 400df045 <_svfprintf_r+0x2921>
400df03c:	a02192        	l32i	a9, a1, 0x280
400df03f:	02e907        	bbsi	a9, 0, 400df045 <_svfprintf_r+0x2921>
400df042:	01a0c6        	j	400df6c9 <_svfprintf_r+0x2fa5>
400df045:	9f2122        	l32i	a2, a1, 0x27c
400df048:	af2142        	l32i	a4, a1, 0x2bc
400df04b:	b12132        	l32i	a3, a1, 0x2c4
400df04e:	1249      	s32i.n	a4, a2, 4
400df050:	0239      	s32i.n	a3, a2, 0
400df052:	8f2122        	l32i	a2, a1, 0x23c
400df055:	10c152        	addi	a5, a1, 16
400df058:	224a      	add.n	a2, a2, a4
400df05a:	8f6122        	s32i	a2, a1, 0x23c
400df05d:	8e2122        	l32i	a2, a1, 0x238
400df060:	221b      	addi.n	a2, a2, 1
400df062:	8e6122        	s32i	a2, a1, 0x238
400df065:	0782e6        	bgei	a2, 8, 400df070 <_svfprintf_r+0x294c>
400df068:	9f2162        	l32i	a6, a1, 0x27c
400df06b:	268b      	addi.n	a2, a6, 8
400df06d:	000686        	j	400df08b <_svfprintf_r+0x2967>
400df070:	34a2c2        	movi	a12, 0x234
400df073:	a421b2        	l32i	a11, a1, 0x290
400df076:	a321a2        	l32i	a10, a1, 0x28c
400df079:	80cc10        	add	a12, a12, a1
400df07c:	078a25        	call8	400e6920 <__ssprint_r>
400df07f:	75da56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df082:	e4a122        	movi	a2, 0x1e4
400df085:	10c182        	addi	a8, a1, 16
400df088:	802820        	add	a2, a8, a2
400df08b:	952132        	l32i	a3, a1, 0x254
400df08e:	10a042        	movi	a4, 16
400df091:	603030        	neg	a3, a3
400df094:	3813e6        	bgei	a3, 1, 400df0d0 <_svfprintf_r+0x29ac>
400df097:	001e46        	j	400df114 <_svfprintf_r+0x29f0>
400df09a:	520000        	lsi	f0, a0, 0x148
400df09d:	498f21        	l32r	a2, 400b16dc <_iram_end+0x23b88>
400df0a0:	c55212        	s16i	a1, a2, 0x18a
400df0a3:	615210        	lsi	f1, a2, 0x184
400df0a6:	8f          	.byte 0x8f
400df0a7:	8e2152        	l32i	a5, a1, 0x238
400df0aa:	228b      	addi.n	a2, a2, 8
400df0ac:	551b      	addi.n	a5, a5, 1
400df0ae:	8e6152        	s32i	a5, a1, 0x238
400df0b1:	1885a6        	blti	a5, 8, 400df0cd <_svfprintf_r+0x29a9>
400df0b4:	34a2c2        	movi	a12, 0x234
400df0b7:	a421b2        	l32i	a11, a1, 0x290
400df0ba:	a321a2        	l32i	a10, a1, 0x28c
400df0bd:	cc1a      	add.n	a12, a12, a1
400df0bf:	078625        	call8	400e6920 <__ssprint_r>
400df0c2:	71aa56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df0c5:	e4a122        	movi	a2, 0x1e4
400df0c8:	10c1a2        	addi	a10, a1, 16
400df0cb:	2a2a      	add.n	a2, a10, a2
400df0cd:	f0c332        	addi	a3, a3, -16
400df0d0:	c5ad51        	l32r	a5, 400d0784 <_flash_cache_start+0x76c>
400df0d3:	006252        	s32i	a5, a2, 0
400df0d6:	c22437        	blt	a4, a3, 400df09c <_svfprintf_r+0x2978>
400df0d9:	8f2152        	l32i	a5, a1, 0x23c
400df0dc:	016232        	s32i	a3, a2, 4
400df0df:	803530        	add	a3, a5, a3
400df0e2:	8f6132        	s32i	a3, a1, 0x23c
400df0e5:	8e2132        	l32i	a3, a1, 0x238
400df0e8:	10c1e2        	addi	a14, a1, 16
400df0eb:	331b      	addi.n	a3, a3, 1
400df0ed:	8e6132        	s32i	a3, a1, 0x238
400df0f0:	02de42        	addmi	a4, a14, 0x200
400df0f3:	228b      	addi.n	a2, a2, 8
400df0f5:	1b83a6        	blti	a3, 8, 400df114 <_svfprintf_r+0x29f0>
400df0f8:	10c122        	addi	a2, a1, 16
400df0fb:	24a232        	movi	a3, 0x224
400df0fe:	a421b2        	l32i	a11, a1, 0x290
400df101:	a321a2        	l32i	a10, a1, 0x28c
400df104:	c23a      	add.n	a12, a2, a3
400df106:	0781a5        	call8	400e6920 <__ssprint_r>
400df109:	6d3a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df10c:	e4a122        	movi	a2, 0x1e4
400df10f:	10c142        	addi	a4, a1, 16
400df112:	242a      	add.n	a2, a4, a2
400df114:	a12182        	l32i	a8, a1, 0x284
400df117:	a72192        	l32i	a9, a1, 0x29c
400df11a:	0289      	s32i.n	a8, a2, 0
400df11c:	015a86        	j	400df68a <_svfprintf_r+0x2f66>
400df11f:	216200        	srai	a6, a0, 2
400df122:	4260a7        	bbci	a0, 10, 400df168 <_svfprintf_r+0x2a44>
400df125:	14a643        	lsi	f4, a6, 80
400df128:	216243        	lsi	f4, a2, 132
400df12b:	8f          	.byte 0x8f
400df12c:	9f2182        	l32i	a8, a1, 0x27c
400df12f:	664a      	add.n	a6, a6, a4
400df131:	8f6162        	s32i	a6, a1, 0x23c
400df134:	8e2162        	l32i	a6, a1, 0x238
400df137:	a12192        	l32i	a9, a1, 0x284
400df13a:	661b      	addi.n	a6, a6, 1
400df13c:	0899      	s32i.n	a9, a8, 0
400df13e:	1849      	s32i.n	a4, a8, 4
400df140:	8e6162        	s32i	a6, a1, 0x238
400df143:	0a86e6        	bgei	a6, 8, 400df151 <_svfprintf_r+0x2a2d>
400df146:	9f2162        	l32i	a6, a1, 0x27c
400df149:	668b      	addi.n	a6, a6, 8
400df14b:	9f6162        	s32i	a6, a1, 0x27c
400df14e:	0006c6        	j	400df16d <_svfprintf_r+0x2a49>
400df151:	34a2c2        	movi	a12, 0x234
400df154:	a421b2        	l32i	a11, a1, 0x290
400df157:	a321a2        	l32i	a10, a1, 0x28c
400df15a:	cc1a      	add.n	a12, a12, a1
400df15c:	077c25        	call8	400e6920 <__ssprint_r>
400df15f:	67da56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df162:	e4a162        	movi	a6, 0x1e4
400df165:	10c182        	addi	a8, a1, 16
400df168:	886a      	add.n	a8, a8, a6
400df16a:	9f6182        	s32i	a8, a1, 0x27c
400df16d:	060c      	movi.n	a6, 0
400df16f:	534460        	max	a4, a4, a6
400df172:	c04240        	sub	a4, a2, a4
400df175:	081c      	movi.n	a8, 16
400df177:	5214e6        	bgei	a4, 1, 400df1cd <_svfprintf_r+0x2aa9>
400df17a:	0026c6        	j	400df219 <_svfprintf_r+0x2af5>
400df17d:	000000        	ill
400df180:	9f2192        	l32i	a9, a1, 0x27c
400df183:	0969      	s32i.n	a6, a9, 0
400df185:	8f2162        	l32i	a6, a1, 0x23c
400df188:	1989      	s32i.n	a8, a9, 4
400df18a:	10c662        	addi	a6, a6, 16
400df18d:	8f6162        	s32i	a6, a1, 0x23c
400df190:	8e2162        	l32i	a6, a1, 0x238
400df193:	661b      	addi.n	a6, a6, 1
400df195:	8e6162        	s32i	a6, a1, 0x238
400df198:	0c86e6        	bgei	a6, 8, 400df1a8 <_svfprintf_r+0x2a84>
400df19b:	9f2162        	l32i	a6, a1, 0x27c
400df19e:	668b      	addi.n	a6, a6, 8
400df1a0:	9f6162        	s32i	a6, a1, 0x27c
400df1a3:	0008c6        	j	400df1ca <_svfprintf_r+0x2aa6>
400df1a6:	c20000        	quou	a0, a0, a0
400df1a9:	b234a2        	lsi	f10, a4, 0x2c8
400df1ac:	a2a421        	l32r	a2, 400c7c3c <_rtc_text_end+0x7c3c>
400df1af:	1aa321        	l32r	a2, 400a5c3c <_iram_end+0x180e8>
400df1b2:	82cc      	bnez.n	a2, 400df1be <_svfprintf_r+0x2a9a>
400df1b4:	a5b861        	l32r	a6, 400c8894 <_rtc_text_end+0x8894>
400df1b7:	820776        	bf	b7, 400df13d <_svfprintf_r+0x2a19>
400df1ba:	56b821        	l32r	a2, 400b4c9c <_iram_end+0x27148>
400df1bd:	620a      	add.n	a6, a2, a0
400df1bf:	e4a162        	movi	a6, 0x1e4
400df1c2:	10c192        	addi	a9, a1, 16
400df1c5:	996a      	add.n	a9, a9, a6
400df1c7:	9f6192        	s32i	a9, a1, 0x27c
400df1ca:	f0c442        	addi	a4, a4, -16
400df1cd:	c56d61        	l32r	a6, 400d0784 <_flash_cache_start+0x76c>
400df1d0:	ac2847        	blt	a8, a4, 400df180 <_svfprintf_r+0x2a5c>
400df1d3:	9f2182        	l32i	a8, a1, 0x27c
400df1d6:	1849      	s32i.n	a4, a8, 4
400df1d8:	0869      	s32i.n	a6, a8, 0
400df1da:	8f2182        	l32i	a8, a1, 0x23c
400df1dd:	484a      	add.n	a4, a8, a4
400df1df:	8f6142        	s32i	a4, a1, 0x23c
400df1e2:	8e2142        	l32i	a4, a1, 0x238
400df1e5:	441b      	addi.n	a4, a4, 1
400df1e7:	8e6142        	s32i	a4, a1, 0x238
400df1ea:	0a84e6        	bgei	a4, 8, 400df1f8 <_svfprintf_r+0x2ad4>
400df1ed:	9f2142        	l32i	a4, a1, 0x27c
400df1f0:	448b      	addi.n	a4, a4, 8
400df1f2:	9f6142        	s32i	a4, a1, 0x27c
400df1f5:	000806        	j	400df219 <_svfprintf_r+0x2af5>
400df1f8:	10c162        	addi	a6, a1, 16
400df1fb:	24a282        	movi	a8, 0x224
400df1fe:	a421b2        	l32i	a11, a1, 0x290
400df201:	a321a2        	l32i	a10, a1, 0x28c
400df204:	80c680        	add	a12, a6, a8
400df207:	0771a5        	call8	400e6920 <__ssprint_r>
400df20a:	5d2a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df20d:	e4a142        	movi	a4, 0x1e4
400df210:	10c192        	addi	a9, a1, 16
400df213:	809940        	add	a9, a9, a4
400df216:	9f6192        	s32i	a9, a1, 0x27c
400df219:	a12142        	l32i	a4, a1, 0x284
400df21c:	a02162        	l32i	a6, a1, 0x280
400df21f:	802420        	add	a2, a4, a2
400df222:	e4a142        	movi	a4, 0x1e4
400df225:	0266a7        	bbci	a6, 10, 400df22b <_svfprintf_r+0x2b07>
400df228:	005906        	j	400df390 <_svfprintf_r+0x2c6c>
400df22b:	005f86        	j	400df3ad <_svfprintf_r+0x2c89>
400df22e:	338c      	beqz.n	a3, 400df235 <_svfprintf_r+0x2b11>
400df230:	330b      	addi.n	a3, a3, -1
400df232:	000246        	j	400df23f <_svfprintf_r+0x2b1b>
400df235:	ad2182        	l32i	a8, a1, 0x2b4
400df238:	550b      	addi.n	a5, a5, -1
400df23a:	880b      	addi.n	a8, a8, -1
400df23c:	ad6182        	s32i	a8, a1, 0x2b4
400df23f:	b02182        	l32i	a8, a1, 0x2c0
400df242:	9f2192        	l32i	a9, a1, 0x27c
400df245:	b32162        	l32i	a6, a1, 0x2cc
400df248:	1989      	s32i.n	a8, a9, 4
400df24a:	0969      	s32i.n	a6, a9, 0
400df24c:	10c192        	addi	a9, a1, 16
400df24f:	02d982        	addmi	a8, a9, 0x200
400df252:	8f2162        	l32i	a6, a1, 0x23c
400df255:	b02192        	l32i	a9, a1, 0x2c0
400df258:	669a      	add.n	a6, a6, a9
400df25a:	b869      	s32i.n	a6, a8, 44
400df25c:	a868      	l32i.n	a6, a8, 40
400df25e:	661b      	addi.n	a6, a6, 1
400df260:	a869      	s32i.n	a6, a8, 40
400df262:	0a86e6        	bgei	a6, 8, 400df270 <_svfprintf_r+0x2b4c>
400df265:	9f2162        	l32i	a6, a1, 0x27c
400df268:	668b      	addi.n	a6, a6, 8
400df26a:	9f6162        	s32i	a6, a1, 0x27c
400df26d:	000686        	j	400df28b <_svfprintf_r+0x2b67>
400df270:	34a2c2        	movi	a12, 0x234
400df273:	a421b2        	l32i	a11, a1, 0x290
400df276:	a321a2        	l32i	a10, a1, 0x28c
400df279:	80cc10        	add	a12, a12, a1
400df27c:	076a25        	call8	400e6920 <__ssprint_r>
400df27f:	55da56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df282:	10c182        	addi	a8, a1, 16
400df285:	808840        	add	a8, a8, a4
400df288:	9f6182        	s32i	a8, a1, 0x27c
400df28b:	a12192        	l32i	a9, a1, 0x284
400df28e:	a72182        	l32i	a8, a1, 0x29c
400df291:	806980        	add	a6, a9, a8
400df294:	ad2192        	l32i	a9, a1, 0x2b4
400df297:	c06620        	sub	a6, a6, a2
400df29a:	000982        	l8ui	a8, a9, 0
400df29d:	436680        	min	a6, a6, a8
400df2a0:	3d16a6        	blti	a6, 1, 400df2e1 <_svfprintf_r+0x2bbd>
400df2a3:	9f2182        	l32i	a8, a1, 0x27c
400df2a6:	0829      	s32i.n	a2, a8, 0
400df2a8:	1869      	s32i.n	a6, a8, 4
400df2aa:	8f2182        	l32i	a8, a1, 0x23c
400df2ad:	886a      	add.n	a8, a8, a6
400df2af:	8f6182        	s32i	a8, a1, 0x23c
400df2b2:	8e2182        	l32i	a8, a1, 0x238
400df2b5:	881b      	addi.n	a8, a8, 1
400df2b7:	8e6182        	s32i	a8, a1, 0x238
400df2ba:	0a88e6        	bgei	a8, 8, 400df2c8 <_svfprintf_r+0x2ba4>
400df2bd:	9f2182        	l32i	a8, a1, 0x27c
400df2c0:	888b      	addi.n	a8, a8, 8
400df2c2:	9f6182        	s32i	a8, a1, 0x27c
400df2c5:	000606        	j	400df2e1 <_svfprintf_r+0x2bbd>
400df2c8:	34a2c2        	movi	a12, 0x234
400df2cb:	a421b2        	l32i	a11, a1, 0x290
400df2ce:	a321a2        	l32i	a10, a1, 0x28c
400df2d1:	cc1a      	add.n	a12, a12, a1
400df2d3:	0764e5        	call8	400e6920 <__ssprint_r>
400df2d6:	506a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df2d9:	10c192        	addi	a9, a1, 16
400df2dc:	994a      	add.n	a9, a9, a4
400df2de:	9f6192        	s32i	a9, a1, 0x27c
400df2e1:	ad2192        	l32i	a9, a1, 0x2b4
400df2e4:	080c      	movi.n	a8, 0
400df2e6:	536680        	max	a6, a6, a8
400df2e9:	000982        	l8ui	a8, a9, 0
400df2ec:	091c      	movi.n	a9, 16
400df2ee:	c06860        	sub	a6, a8, a6
400df2f1:	4c16e6        	bgei	a6, 1, 400df341 <_svfprintf_r+0x2c1d>
400df2f4:	0023c6        	j	400df387 <_svfprintf_r+0x2c63>
400df2f7:	21a200        	srai	a10, a0, 2
400df2fa:	9f          	.byte 0x9f
400df2fb:	0a89      	s32i.n	a8, a10, 0
400df2fd:	8f2182        	l32i	a8, a1, 0x23c
400df300:	1a99      	s32i.n	a9, a10, 4
400df302:	10c882        	addi	a8, a8, 16
400df305:	8f6182        	s32i	a8, a1, 0x23c
400df308:	8e2182        	l32i	a8, a1, 0x238
400df30b:	881b      	addi.n	a8, a8, 1
400df30d:	8e6182        	s32i	a8, a1, 0x238
400df310:	0888e6        	bgei	a8, 8, 400df31c <_svfprintf_r+0x2bf8>
400df313:	9f2182        	l32i	a8, a1, 0x27c
400df316:	888b      	addi.n	a8, a8, 8
400df318:	0007c6        	j	400df33b <_svfprintf_r+0x2c17>
400df31b:	a2c200        	muluh	a12, a2, a0
400df31e:	21b234        	lsi	f3, a2, 132
400df321:	21a2a4        	lsi	f10, a2, 132
400df324:	cc1aa3        	lsi	f10, a10, 0x330
400df327:	b76192        	s32i	a9, a1, 0x2dc
400df32a:	201110        	or	a1, a1, a1
400df32d:	075f25        	call8	400e6920 <__ssprint_r>
400df330:	b72192        	l32i	a9, a1, 0x2dc
400df333:	4a9a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df336:	10c182        	addi	a8, a1, 16
400df339:	884a      	add.n	a8, a8, a4
400df33b:	9f6182        	s32i	a8, a1, 0x27c
400df33e:	f0c662        	addi	a6, a6, -16
400df341:	c51081        	l32r	a8, 400d0784 <_flash_cache_start+0x76c>
400df344:	b02967        	blt	a9, a6, 400df2f8 <_svfprintf_r+0x2bd4>
400df347:	9f2192        	l32i	a9, a1, 0x27c
400df34a:	1969      	s32i.n	a6, a9, 4
400df34c:	0989      	s32i.n	a8, a9, 0
400df34e:	8f2192        	l32i	a9, a1, 0x23c
400df351:	696a      	add.n	a6, a9, a6
400df353:	8f6162        	s32i	a6, a1, 0x23c
400df356:	8e2162        	l32i	a6, a1, 0x238
400df359:	661b      	addi.n	a6, a6, 1
400df35b:	8e6162        	s32i	a6, a1, 0x238
400df35e:	0786e6        	bgei	a6, 8, 400df369 <_svfprintf_r+0x2c45>
400df361:	9f2162        	l32i	a6, a1, 0x27c
400df364:	668b      	addi.n	a6, a6, 8
400df366:	000686        	j	400df384 <_svfprintf_r+0x2c60>
400df369:	10c182        	addi	a8, a1, 16
400df36c:	24a292        	movi	a9, 0x224
400df36f:	a421b2        	l32i	a11, a1, 0x290
400df372:	a321a2        	l32i	a10, a1, 0x28c
400df375:	80c890        	add	a12, a8, a9
400df378:	075a65        	call8	400e6920 <__ssprint_r>
400df37b:	461a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df37e:	10c162        	addi	a6, a1, 16
400df381:	806640        	add	a6, a6, a4
400df384:	9f6162        	s32i	a6, a1, 0x27c
400df387:	ad2182        	l32i	a8, a1, 0x2b4
400df38a:	000862        	l8ui	a6, a8, 0
400df38d:	802260        	add	a2, a2, a6
400df390:	316f50        	srai	a6, a5, 31
400df393:	c06650        	sub	a6, a6, a5
400df396:	e94696        	bltz	a6, 400df22e <_svfprintf_r+0x2b0a>
400df399:	316f30        	srai	a6, a3, 31
400df39c:	c06630        	sub	a6, a6, a3
400df39f:	e8b696        	bltz	a6, 400df22e <_svfprintf_r+0x2b0a>
400df3a2:	a12192        	l32i	a9, a1, 0x284
400df3a5:	a72142        	l32i	a4, a1, 0x29c
400df3a8:	394a      	add.n	a3, a9, a4
400df3aa:	632230        	minu	a2, a2, a3
400df3ad:	952132        	l32i	a3, a1, 0x254
400df3b0:	a72152        	l32i	a5, a1, 0x29c
400df3b3:	052357        	blt	a3, a5, 400df3bc <_svfprintf_r+0x2c98>
400df3b6:	a02162        	l32i	a6, a1, 0x280
400df3b9:	476607        	bbci	a6, 0, 400df404 <_svfprintf_r+0x2ce0>
400df3bc:	9f2182        	l32i	a8, a1, 0x27c
400df3bf:	af2132        	l32i	a3, a1, 0x2bc
400df3c2:	af2162        	l32i	a6, a1, 0x2bc
400df3c5:	1839      	s32i.n	a3, a8, 4
400df3c7:	8f2132        	l32i	a3, a1, 0x23c
400df3ca:	b12192        	l32i	a9, a1, 0x2c4
400df3cd:	336a      	add.n	a3, a3, a6
400df3cf:	8f6132        	s32i	a3, a1, 0x23c
400df3d2:	8e2132        	l32i	a3, a1, 0x238
400df3d5:	0899      	s32i.n	a9, a8, 0
400df3d7:	331b      	addi.n	a3, a3, 1
400df3d9:	10c152        	addi	a5, a1, 16
400df3dc:	8e6132        	s32i	a3, a1, 0x238
400df3df:	02d542        	addmi	a4, a5, 0x200
400df3e2:	888b      	addi.n	a8, a8, 8
400df3e4:	1983a6        	blti	a3, 8, 400df401 <_svfprintf_r+0x2cdd>
400df3e7:	34a2c2        	movi	a12, 0x234
400df3ea:	a421b2        	l32i	a11, a1, 0x290
400df3ed:	a321a2        	l32i	a10, a1, 0x28c
400df3f0:	cc1a      	add.n	a12, a12, a1
400df3f2:	0752e5        	call8	400e6920 <__ssprint_r>
400df3f5:	3e7a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df3f8:	e4a132        	movi	a3, 0x1e4
400df3fb:	10c182        	addi	a8, a1, 16
400df3fe:	808830        	add	a8, a8, a3
400df401:	9f6182        	s32i	a8, a1, 0x27c
400df404:	a72132        	l32i	a3, a1, 0x29c
400df407:	a12192        	l32i	a9, a1, 0x284
400df40a:	a72152        	l32i	a5, a1, 0x29c
400df40d:	493a      	add.n	a4, a9, a3
400df40f:	952132        	l32i	a3, a1, 0x254
400df412:	c04420        	sub	a4, a4, a2
400df415:	c03530        	sub	a3, a5, a3
400df418:	434430        	min	a4, a4, a3
400df41b:	3d14a6        	blti	a4, 1, 400df45c <_svfprintf_r+0x2d38>
400df41e:	9f2162        	l32i	a6, a1, 0x27c
400df421:	0629      	s32i.n	a2, a6, 0
400df423:	8f2122        	l32i	a2, a1, 0x23c
400df426:	1649      	s32i.n	a4, a6, 4
400df428:	224a      	add.n	a2, a2, a4
400df42a:	8f6122        	s32i	a2, a1, 0x23c
400df42d:	8e2122        	l32i	a2, a1, 0x238
400df430:	221b      	addi.n	a2, a2, 1
400df432:	8e6122        	s32i	a2, a1, 0x238
400df435:	0782e6        	bgei	a2, 8, 400df440 <_svfprintf_r+0x2d1c>
400df438:	668b      	addi.n	a6, a6, 8
400df43a:	9f6162        	s32i	a6, a1, 0x27c
400df43d:	0006c6        	j	400df45c <_svfprintf_r+0x2d38>
400df440:	34a2c2        	movi	a12, 0x234
400df443:	a421b2        	l32i	a11, a1, 0x290
400df446:	a321a2        	l32i	a10, a1, 0x28c
400df449:	cc1a      	add.n	a12, a12, a1
400df44b:	074d65        	call8	400e6920 <__ssprint_r>
400df44e:	38ea56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df451:	e4a122        	movi	a2, 0x1e4
400df454:	10c192        	addi	a9, a1, 16
400df457:	992a      	add.n	a9, a9, a2
400df459:	9f6192        	s32i	a9, a1, 0x27c
400df45c:	020c      	movi.n	a2, 0
400df45e:	534420        	max	a4, a4, a2
400df461:	a72132        	l32i	a3, a1, 0x29c
400df464:	952122        	l32i	a2, a1, 0x254
400df467:	c02320        	sub	a2, a3, a2
400df46a:	c02240        	sub	a2, a2, a4
400df46d:	041c      	movi.n	a4, 16
400df46f:	4d12e6        	bgei	a2, 1, 400df4c0 <_svfprintf_r+0x2d9c>
400df472:	0094c6        	j	400df6c9 <_svfprintf_r+0x2fa5>
400df475:	9f2152        	l32i	a5, a1, 0x27c
400df478:	10c162        	addi	a6, a1, 16
400df47b:	0539      	s32i.n	a3, a5, 0
400df47d:	8f2132        	l32i	a3, a1, 0x23c
400df480:	1549      	s32i.n	a4, a5, 4
400df482:	10c332        	addi	a3, a3, 16
400df485:	8f6132        	s32i	a3, a1, 0x23c
400df488:	8e2132        	l32i	a3, a1, 0x238
400df48b:	02d652        	addmi	a5, a6, 0x200
400df48e:	331b      	addi.n	a3, a3, 1
400df490:	8e6132        	s32i	a3, a1, 0x238
400df493:	0a83e6        	bgei	a3, 8, 400df4a1 <_svfprintf_r+0x2d7d>
400df496:	9f2182        	l32i	a8, a1, 0x27c
400df499:	888b      	addi.n	a8, a8, 8
400df49b:	9f6182        	s32i	a8, a1, 0x27c
400df49e:	0006c6        	j	400df4bd <_svfprintf_r+0x2d99>
400df4a1:	34a2c2        	movi	a12, 0x234
400df4a4:	a421b2        	l32i	a11, a1, 0x290
400df4a7:	a321a2        	l32i	a10, a1, 0x28c
400df4aa:	cc1a      	add.n	a12, a12, a1
400df4ac:	074725        	call8	400e6920 <__ssprint_r>
400df4af:	32da56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df4b2:	e4a132        	movi	a3, 0x1e4
400df4b5:	10c192        	addi	a9, a1, 16
400df4b8:	993a      	add.n	a9, a9, a3
400df4ba:	9f6192        	s32i	a9, a1, 0x27c
400df4bd:	f0c222        	addi	a2, a2, -16
400df4c0:	c4b131        	l32r	a3, 400d0784 <_flash_cache_start+0x76c>
400df4c3:	ae2427        	blt	a4, a2, 400df475 <_svfprintf_r+0x2d51>
400df4c6:	9f2142        	l32i	a4, a1, 0x27c
400df4c9:	10c152        	addi	a5, a1, 16
400df4cc:	1429      	s32i.n	a2, a4, 4
400df4ce:	0439      	s32i.n	a3, a4, 0
400df4d0:	8f2142        	l32i	a4, a1, 0x23c
400df4d3:	242a      	add.n	a2, a4, a2
400df4d5:	8f6122        	s32i	a2, a1, 0x23c
400df4d8:	8e2122        	l32i	a2, a1, 0x238
400df4db:	221b      	addi.n	a2, a2, 1
400df4dd:	8e6122        	s32i	a2, a1, 0x238
400df4e0:	0c82e6        	bgei	a2, 8, 400df4f0 <_svfprintf_r+0x2dcc>
400df4e3:	9f2162        	l32i	a6, a1, 0x27c
400df4e6:	668b      	addi.n	a6, a6, 8
400df4e8:	9f6162        	s32i	a6, a1, 0x27c
400df4eb:	007686        	j	400df6c9 <_svfprintf_r+0x2fa5>
400df4ee:	820000        	mull	a0, a0, a0
400df4f1:	9210c1        	l32r	a12, 400c3d34 <_rtc_text_end+0x3d34>
400df4f4:	9a24a2        	l32i	a10, a4, 0x268
400df4f7:	86c8      	l32i.n	a12, a6, 32
400df4f9:	006d      	mov.n	a6, a0
400df4fb:	214200        	srai	a4, a0, 2
400df4fe:	120ca7        	bnone	a12, a10, 400df514 <_svfprintf_r+0x2df0>
400df501:	0824e6        	bgei	a4, 2, 400df50d <_svfprintf_r+0x2de9>
400df504:	a02152        	l32i	a5, a1, 0x280
400df507:	02e507        	bbsi	a5, 0, 400df50d <_svfprintf_r+0x2de9>
400df50a:	005286        	j	400df658 <_svfprintf_r+0x2f34>
400df50d:	9f2162        	l32i	a6, a1, 0x27c
400df510:	a12182        	l32i	a8, a1, 0x284
400df513:	1629      	s32i.n	a2, a6, 4
400df515:	8f2122        	l32i	a2, a1, 0x23c
400df518:	0689      	s32i.n	a8, a6, 0
400df51a:	221b      	addi.n	a2, a2, 1
400df51c:	8f6122        	s32i	a2, a1, 0x23c
400df51f:	8e2122        	l32i	a2, a1, 0x238
400df522:	221b      	addi.n	a2, a2, 1
400df524:	8e6122        	s32i	a2, a1, 0x238
400df527:	0582e6        	bgei	a2, 8, 400df530 <_svfprintf_r+0x2e0c>
400df52a:	268b      	addi.n	a2, a6, 8
400df52c:	000646        	j	400df549 <_svfprintf_r+0x2e25>
400df52f:	a2c200        	muluh	a12, a2, a0
400df532:	21b234        	lsi	f3, a2, 132
400df535:	21a2a4        	lsi	f10, a2, 132
400df538:	cc1aa3        	lsi	f10, a10, 0x330
400df53b:	073e65        	call8	400e6920 <__ssprint_r>
400df53e:	29ea56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df541:	e4a122        	movi	a2, 0x1e4
400df544:	10c1a2        	addi	a10, a1, 16
400df547:	2a2a      	add.n	a2, a10, a2
400df549:	b12132        	l32i	a3, a1, 0x2c4
400df54c:	af2162        	l32i	a6, a1, 0x2bc
400df54f:	0239      	s32i.n	a3, a2, 0
400df551:	8f2132        	l32i	a3, a1, 0x23c
400df554:	af2142        	l32i	a4, a1, 0x2bc
400df557:	336a      	add.n	a3, a3, a6
400df559:	8f6132        	s32i	a3, a1, 0x23c
400df55c:	8e2132        	l32i	a3, a1, 0x238
400df55f:	1249      	s32i.n	a4, a2, 4
400df561:	331b      	addi.n	a3, a3, 1
400df563:	10c152        	addi	a5, a1, 16
400df566:	8e6132        	s32i	a3, a1, 0x238
400df569:	02d542        	addmi	a4, a5, 0x200
400df56c:	228b      	addi.n	a2, a2, 8
400df56e:	1883a6        	blti	a3, 8, 400df58a <_svfprintf_r+0x2e66>
400df571:	34a2c2        	movi	a12, 0x234
400df574:	a421b2        	l32i	a11, a1, 0x290
400df577:	a321a2        	l32i	a10, a1, 0x28c
400df57a:	cc1a      	add.n	a12, a12, a1
400df57c:	073a25        	call8	400e6920 <__ssprint_r>
400df57f:	25da56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df582:	e4a122        	movi	a2, 0x1e4
400df585:	10c182        	addi	a8, a1, 16
400df588:	282a      	add.n	a2, a8, a2
400df58a:	c2b6c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400df58d:	c2b5d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400df590:	aa21a2        	l32i	a10, a1, 0x2a8
400df593:	ab21b2        	l32i	a11, a1, 0x2ac
400df596:	c48381        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400df599:	0008e0        	callx8	a8
400df59c:	a72192        	l32i	a9, a1, 0x29c
400df59f:	390b      	addi.n	a3, a9, -1
400df5a1:	047a16        	beqz	a10, 400df5ec <_svfprintf_r+0x2ec8>
400df5a4:	1239      	s32i.n	a3, a2, 4
400df5a6:	8f2132        	l32i	a3, a1, 0x23c
400df5a9:	a72152        	l32i	a5, a1, 0x29c
400df5ac:	330b      	addi.n	a3, a3, -1
400df5ae:	335a      	add.n	a3, a3, a5
400df5b0:	a12182        	l32i	a8, a1, 0x284
400df5b3:	8f6132        	s32i	a3, a1, 0x23c
400df5b6:	8e2132        	l32i	a3, a1, 0x238
400df5b9:	481b      	addi.n	a4, a8, 1
400df5bb:	331b      	addi.n	a3, a3, 1
400df5bd:	0249      	s32i.n	a4, a2, 0
400df5bf:	10c192        	addi	a9, a1, 16
400df5c2:	8e6132        	s32i	a3, a1, 0x238
400df5c5:	02d942        	addmi	a4, a9, 0x200
400df5c8:	228b      	addi.n	a2, a2, 8
400df5ca:	0283e6        	bgei	a3, 8, 400df5d0 <_svfprintf_r+0x2eac>
400df5cd:	002bc6        	j	400df680 <_svfprintf_r+0x2f5c>
400df5d0:	34a2c2        	movi	a12, 0x234
400df5d3:	cc1a      	add.n	a12, a12, a1
400df5d5:	a421b2        	l32i	a11, a1, 0x290
400df5d8:	a321a2        	l32i	a10, a1, 0x28c
400df5db:	073465        	call8	400e6920 <__ssprint_r>
400df5de:	1fea56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df5e1:	f4a162        	movi	a6, 0x1f4
400df5e4:	216a      	add.n	a2, a1, a6
400df5e6:	002586        	j	400df680 <_svfprintf_r+0x2f5c>
400df5e9:	000000        	ill
400df5ec:	041c      	movi.n	a4, 16
400df5ee:	3613e6        	bgei	a3, 1, 400df628 <_svfprintf_r+0x2f04>
400df5f1:	0022c6        	j	400df680 <_svfprintf_r+0x2f5c>
400df5f4:	8f2152        	l32i	a5, a1, 0x23c
400df5f7:	1249      	s32i.n	a4, a2, 4
400df5f9:	10c552        	addi	a5, a5, 16
400df5fc:	8f6152        	s32i	a5, a1, 0x23c
400df5ff:	8e2152        	l32i	a5, a1, 0x238
400df602:	228b      	addi.n	a2, a2, 8
400df604:	551b      	addi.n	a5, a5, 1
400df606:	8e6152        	s32i	a5, a1, 0x238
400df609:	1885a6        	blti	a5, 8, 400df625 <_svfprintf_r+0x2f01>
400df60c:	34a2c2        	movi	a12, 0x234
400df60f:	a421b2        	l32i	a11, a1, 0x290
400df612:	a321a2        	l32i	a10, a1, 0x28c
400df615:	cc1a      	add.n	a12, a12, a1
400df617:	0730a5        	call8	400e6920 <__ssprint_r>
400df61a:	1c2a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df61d:	e4a122        	movi	a2, 0x1e4
400df620:	10c192        	addi	a9, a1, 16
400df623:	292a      	add.n	a2, a9, a2
400df625:	f0c332        	addi	a3, a3, -16
400df628:	c45751        	l32r	a5, 400d0784 <_flash_cache_start+0x76c>
400df62b:	0259      	s32i.n	a5, a2, 0
400df62d:	c32437        	blt	a4, a3, 400df5f4 <_svfprintf_r+0x2ed0>
400df630:	8f2152        	l32i	a5, a1, 0x23c
400df633:	1239      	s32i.n	a3, a2, 4
400df635:	353a      	add.n	a3, a5, a3
400df637:	8f6132        	s32i	a3, a1, 0x23c
400df63a:	8e2132        	l32i	a3, a1, 0x238
400df63d:	10c1a2        	addi	a10, a1, 16
400df640:	331b      	addi.n	a3, a3, 1
400df642:	8e6132        	s32i	a3, a1, 0x238
400df645:	02da42        	addmi	a4, a10, 0x200
400df648:	228b      	addi.n	a2, a2, 8
400df64a:	3283a6        	blti	a3, 8, 400df680 <_svfprintf_r+0x2f5c>
400df64d:	10c1e2        	addi	a14, a1, 16
400df650:	24a222        	movi	a2, 0x224
400df653:	ce2a      	add.n	a12, a14, a2
400df655:	ffdf06        	j	400df5d5 <_svfprintf_r+0x2eb1>
400df658:	9f2132        	l32i	a3, a1, 0x27c
400df65b:	a12142        	l32i	a4, a1, 0x284
400df65e:	1329      	s32i.n	a2, a3, 4
400df660:	8f2122        	l32i	a2, a1, 0x23c
400df663:	0349      	s32i.n	a4, a3, 0
400df665:	221b      	addi.n	a2, a2, 1
400df667:	8f6122        	s32i	a2, a1, 0x23c
400df66a:	8e2122        	l32i	a2, a1, 0x238
400df66d:	10c152        	addi	a5, a1, 16
400df670:	221b      	addi.n	a2, a2, 1
400df672:	8e6122        	s32i	a2, a1, 0x238
400df675:	0282a6        	blti	a2, 8, 400df67b <_svfprintf_r+0x2f57>
400df678:	ffd506        	j	400df5d0 <_svfprintf_r+0x2eac>
400df67b:	9f2162        	l32i	a6, a1, 0x27c
400df67e:	268b      	addi.n	a2, a6, 8
400df680:	47a282        	movi	a8, 0x247
400df683:	318a      	add.n	a3, a1, a8
400df685:	b42192        	l32i	a9, a1, 0x2d0
400df688:	0239      	s32i.n	a3, a2, 0
400df68a:	1299      	s32i.n	a9, a2, 4
400df68c:	8f2132        	l32i	a3, a1, 0x23c
400df68f:	10c1a2        	addi	a10, a1, 16
400df692:	339a      	add.n	a3, a3, a9
400df694:	8f6132        	s32i	a3, a1, 0x23c
400df697:	8e2132        	l32i	a3, a1, 0x238
400df69a:	02da42        	addmi	a4, a10, 0x200
400df69d:	331b      	addi.n	a3, a3, 1
400df69f:	8e6132        	s32i	a3, a1, 0x238
400df6a2:	0783e6        	bgei	a3, 8, 400df6ad <_svfprintf_r+0x2f89>
400df6a5:	228b      	addi.n	a2, a2, 8
400df6a7:	9f6122        	s32i	a2, a1, 0x27c
400df6aa:	0006c6        	j	400df6c9 <_svfprintf_r+0x2fa5>
400df6ad:	34a2c2        	movi	a12, 0x234
400df6b0:	cc1a      	add.n	a12, a12, a1
400df6b2:	a421b2        	l32i	a11, a1, 0x290
400df6b5:	a321a2        	l32i	a10, a1, 0x28c
400df6b8:	072665        	call8	400e6920 <__ssprint_r>
400df6bb:	121a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df6be:	e4a122        	movi	a2, 0x1e4
400df6c1:	10c132        	addi	a3, a1, 16
400df6c4:	332a      	add.n	a3, a3, a2
400df6c6:	9f6132        	s32i	a3, a1, 0x27c
400df6c9:	a02142        	l32i	a4, a1, 0x280
400df6cc:	1ce427        	bbsi	a4, 2, 400df6ec <_svfprintf_r+0x2fc8>
400df6cf:	ac2152        	l32i	a5, a1, 0x2b0
400df6d2:	a92162        	l32i	a6, a1, 0x2a4
400df6d5:	ae2182        	l32i	a8, a1, 0x2b8
400df6d8:	532560        	max	a2, a5, a6
400df6db:	882a      	add.n	a8, a8, a2
400df6dd:	8f2122        	l32i	a2, a1, 0x23c
400df6e0:	ae6182        	s32i	a8, a1, 0x2b8
400df6e3:	09b216        	beqz	a2, 400df782 <_svfprintf_r+0x305e>
400df6e6:	002c46        	j	400df79b <_svfprintf_r+0x3077>
400df6e9:	000000        	ill
400df6ec:	ac2192        	l32i	a9, a1, 0x2b0
400df6ef:	a921e2        	l32i	a14, a1, 0x2a4
400df6f2:	c029e0        	sub	a2, a9, a14
400df6f5:	d612a6        	blti	a2, 1, 400df6cf <_svfprintf_r+0x2fab>
400df6f8:	041c      	movi.n	a4, 16
400df6fa:	001286        	j	400df748 <_svfprintf_r+0x3024>
400df6fd:	9f2152        	l32i	a5, a1, 0x27c
400df700:	10c162        	addi	a6, a1, 16
400df703:	0539      	s32i.n	a3, a5, 0
400df705:	8f2132        	l32i	a3, a1, 0x23c
400df708:	1549      	s32i.n	a4, a5, 4
400df70a:	10c332        	addi	a3, a3, 16
400df70d:	8f6132        	s32i	a3, a1, 0x23c
400df710:	8e2132        	l32i	a3, a1, 0x238
400df713:	02d652        	addmi	a5, a6, 0x200
400df716:	331b      	addi.n	a3, a3, 1
400df718:	8e6132        	s32i	a3, a1, 0x238
400df71b:	0a83e6        	bgei	a3, 8, 400df729 <_svfprintf_r+0x3005>
400df71e:	9f2182        	l32i	a8, a1, 0x27c
400df721:	888b      	addi.n	a8, a8, 8
400df723:	9f6182        	s32i	a8, a1, 0x27c
400df726:	0006c6        	j	400df745 <_svfprintf_r+0x3021>
400df729:	34a2c2        	movi	a12, 0x234
400df72c:	a421b2        	l32i	a11, a1, 0x290
400df72f:	a321a2        	l32i	a10, a1, 0x28c
400df732:	cc1a      	add.n	a12, a12, a1
400df734:	071ea5        	call8	400e6920 <__ssprint_r>
400df737:	0a5a56        	bnez	a10, 400df7e0 <_svfprintf_r+0x30bc>
400df73a:	e4a132        	movi	a3, 0x1e4
400df73d:	10c192        	addi	a9, a1, 16
400df740:	993a      	add.n	a9, a9, a3
400df742:	9f6192        	s32i	a9, a1, 0x27c
400df745:	f0c222        	addi	a2, a2, -16
400df748:	c40e31        	l32r	a3, 400d0780 <_flash_cache_start+0x768>
400df74b:	ae2427        	blt	a4, a2, 400df6fd <_svfprintf_r+0x2fd9>
400df74e:	9f2142        	l32i	a4, a1, 0x27c
400df751:	10c152        	addi	a5, a1, 16
400df754:	1429      	s32i.n	a2, a4, 4
400df756:	0439      	s32i.n	a3, a4, 0
400df758:	8f2142        	l32i	a4, a1, 0x23c
400df75b:	242a      	add.n	a2, a4, a2
400df75d:	8f6122        	s32i	a2, a1, 0x23c
400df760:	8e2122        	l32i	a2, a1, 0x238
400df763:	221b      	addi.n	a2, a2, 1
400df765:	8e6122        	s32i	a2, a1, 0x238
400df768:	0282e6        	bgei	a2, 8, 400df76e <_svfprintf_r+0x304a>
400df76b:	ffd806        	j	400df6cf <_svfprintf_r+0x2fab>
400df76e:	24a262        	movi	a6, 0x224
400df771:	a421b2        	l32i	a11, a1, 0x290
400df774:	a321a2        	l32i	a10, a1, 0x28c
400df777:	c56a      	add.n	a12, a5, a6
400df779:	071a65        	call8	400e6920 <__ssprint_r>
400df77c:	f4fa16        	beqz	a10, 400df6cf <_svfprintf_r+0x2fab>
400df77f:	001746        	j	400df7e0 <_svfprintf_r+0x30bc>
400df782:	030c      	movi.n	a3, 0
400df784:	a22192        	l32i	a9, a1, 0x288
400df787:	8e6132        	s32i	a3, a1, 0x238
400df78a:	10c182        	addi	a8, a1, 16
400df78d:	e4a122        	movi	a2, 0x1e4
400df790:	1c9937        	bne	a9, a3, 400df7b0 <_svfprintf_r+0x308c>
400df793:	382a      	add.n	a3, a8, a2
400df795:	9f6132        	s32i	a3, a1, 0x27c
400df798:	f40b86        	j	400dc7ca <_svfprintf_r+0xa6>
400df79b:	34a2c2        	movi	a12, 0x234
400df79e:	a421b2        	l32i	a11, a1, 0x290
400df7a1:	a321a2        	l32i	a10, a1, 0x28c
400df7a4:	cc1a      	add.n	a12, a12, a1
400df7a6:	0717a5        	call8	400e6920 <__ssprint_r>
400df7a9:	fd5a16        	beqz	a10, 400df782 <_svfprintf_r+0x305e>
400df7ac:	000c06        	j	400df7e0 <_svfprintf_r+0x30bc>
400df7af:	21b200        	srai	a11, a0, 2
400df7b2:	21a2a2        	movi	a10, 0x221
400df7b5:	c142a3        	ssi	f10, a2, 0x304
400df7b8:	442a10        	extui	a2, a1, 10, 5
400df7bb:	a50da5        	call8	40084894 <_free_r>
400df7be:	9f6142        	s32i	a4, a1, 0x27c
400df7c1:	f40146        	j	400dc7ca <_svfprintf_r+0xa6>
400df7c4:	8f2122        	l32i	a2, a1, 0x23c
400df7c7:	22ac      	beqz.n	a2, 400df7ed <_svfprintf_r+0x30c9>
400df7c9:	10c152        	addi	a5, a1, 16
400df7cc:	24a2c2        	movi	a12, 0x224
400df7cf:	a421b2        	l32i	a11, a1, 0x290
400df7d2:	a321a2        	l32i	a10, a1, 0x28c
400df7d5:	c5ca      	add.n	a12, a5, a12
400df7d7:	0714a5        	call8	400e6920 <__ssprint_r>
400df7da:	0003c6        	j	400df7ed <_svfprintf_r+0x30c9>
400df7dd:	000000        	ill
400df7e0:	a22162        	l32i	a6, a1, 0x288
400df7e3:	668c      	beqz.n	a6, 400df7ed <_svfprintf_r+0x30c9>
400df7e5:	a321a2        	l32i	a10, a1, 0x28c
400df7e8:	06bd      	mov.n	a11, a6
400df7ea:	a50aa5        	call8	40084894 <_free_r>
400df7ed:	a42182        	l32i	a8, a1, 0x290
400df7f0:	ae2192        	l32i	a9, a1, 0x2b8
400df7f3:	061822        	l16ui	a2, a8, 12
400df7f6:	f37c      	movi.n	a3, -1
400df7f8:	042620        	extui	a2, a2, 6, 1
400df7fb:	939320        	movnez	a9, a3, a2
400df7fe:	092d      	mov.n	a2, a9
400df800:	f01d      	retw.n
400df802:	000000        	ill
400df805:	972182        	l32i	a8, a1, 0x25c
400df808:	671b      	addi.n	a6, a7, 1
400df80a:	02a787        	bge	a7, a8, 400df810 <_svfprintf_r+0x30ec>
400df80d:	f45d06        	j	400dc985 <_svfprintf_r+0x261>
400df810:	f45e86        	j	400dc98e <_svfprintf_r+0x26a>
400df813:	216200        	srai	a6, a0, 2
400df816:	871b97        	beq	a11, a9, 400df7a1 <_svfprintf_r+0x307d>
400df819:	02a767        	bge	a7, a6, 400df81f <_svfprintf_r+0x30fb>
400df81c:	f4a546        	j	400dcab5 <_svfprintf_r+0x391>
400df81f:	f4a6c6        	j	400dcabe <_svfprintf_r+0x39a>
	...

400df824 <get_arg$isra$0>:
400df824:	008136        	entry	a1, 64
400df827:	102182        	l32i	a8, a1, 64
400df82a:	2129      	s32i.n	a2, a1, 8
400df82c:	3159      	s32i.n	a5, a1, 12
400df82e:	0528      	l32i.n	a2, a5, 0
400df830:	2198      	l32i.n	a9, a1, 8
400df832:	0858      	l32i.n	a5, a8, 0
400df834:	933550        	movnez	a3, a5, a5
400df837:	0199      	s32i.n	a9, a1, 0
400df839:	00d3c6        	j	400dfb8c <get_arg$isra$0+0x368>
400df83c:	1b0000        	un.s	b0, f0, f0
400df83f:	035233        	lsi	f3, a2, 12
400df842:	551600        	extui	a1, a0, 22, 6
400df845:	c58200        	extui	a8, a0, 18, 13
400df848:	56db      	addi.n	a5, a6, 13
400df84a:	ff18      	l32i.n	a1, a15, 60
400df84c:	349516        	beqz	a5, 400dfb99 <get_arg$isra$0+0x375>
400df84f:	050c      	movi.n	a5, 0
400df851:	05ed      	mov.n	a14, a5
400df853:	f97c      	movi.n	a9, -1
400df855:	05dd      	mov.n	a13, a5
400df857:	1159      	s32i.n	a5, a1, 4
400df859:	03ad      	mov.n	a10, a3
400df85b:	c3b6c1        	l32r	a12, 400d0734 <_flash_cache_start+0x71c>
400df85e:	000a82        	l8ui	a8, a10, 0
400df861:	331b      	addi.n	a3, a3, 1
400df863:	bc8a      	add.n	a11, a12, a8
400df865:	000bc2        	l8ui	a12, a11, 0
400df868:	11b8      	l32i.n	a11, a1, 4
400df86a:	b0fbb0        	addx8	a15, a11, a11
400df86d:	c3b2b1        	l32r	a11, 400d0738 <_flash_cache_start+0x720>
400df870:	bbfa      	add.n	a11, a11, a15
400df872:	bbca      	add.n	a11, a11, a12
400df874:	000bb2        	l8ui	a11, a11, 0
400df877:	11b9      	s32i.n	a11, a1, 4
400df879:	c3b0b1        	l32r	a11, 400d073c <_flash_cache_start+0x724>
400df87c:	fbfa      	add.n	a15, a11, a15
400df87e:	ffca      	add.n	a15, a15, a12
400df880:	000fb2        	l8ui	a11, a15, 0
400df883:	bb0b      	addi.n	a11, a11, -1
400df885:	74b0b0        	extui	a11, a11, 0, 8
400df888:	028bb6        	bltui	a11, 8, 400df88e <get_arg$isra$0+0x6a>
400df88b:	00bcc6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df88e:	c3c9c1        	l32r	a12, 400d07b4 <_flash_cache_start+0x79c>
400df891:	a0bbc0        	addx4	a11, a11, a12
400df894:	0bb8      	l32i.n	a11, a11, 0
400df896:	000ba0        	jx	a11
400df899:	9a0c      	movi.n	a10, 9
400df89b:	00b5c6        	j	400dfb76 <get_arg$isra$0+0x352>
400df89e:	6aa0b2        	movi	a11, 106
400df8a1:	3018b7        	beq	a8, a11, 400df8d5 <get_arg$isra$0+0xb1>
400df8a4:	0d3b87        	bltu	a11, a8, 400df8b5 <get_arg$isra$0+0x91>
400df8a7:	cb4c      	movi.n	a11, 76
400df8a9:	2318b7        	beq	a8, a11, 400df8d0 <get_arg$isra$0+0xac>
400df8ac:	68a0b2        	movi	a11, 104
400df8af:	2a98b7        	bne	a8, a11, 400df8dd <get_arg$isra$0+0xb9>
400df8b2:	00b306        	j	400dfb82 <get_arg$isra$0+0x35e>
400df8b5:	74a0b2        	movi	a11, 116
400df8b8:	0298b7        	bne	a8, a11, 400df8be <get_arg$isra$0+0x9a>
400df8bb:	00b0c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df8be:	7aa0b2        	movi	a11, 122
400df8c1:	0298b7        	bne	a8, a11, 400df8c7 <get_arg$isra$0+0xa3>
400df8c4:	00ae86        	j	400dfb82 <get_arg$isra$0+0x35e>
400df8c7:	71a0b2        	movi	a11, 113
400df8ca:	0718b7        	beq	a8, a11, 400df8d5 <get_arg$isra$0+0xb1>
400df8cd:	000306        	j	400df8dd <get_arg$isra$0+0xb9>
400df8d0:	880c      	movi.n	a8, 8
400df8d2:	000046        	j	400df8d7 <get_arg$isra$0+0xb3>
400df8d5:	082c      	movi.n	a8, 32
400df8d7:	20dd80        	or	a13, a13, a8
400df8da:	00a906        	j	400dfb82 <get_arg$isra$0+0x35e>
400df8dd:	010ab2        	l8ui	a11, a10, 1
400df8e0:	6ca082        	movi	a8, 108
400df8e3:	099b87        	bne	a11, a8, 400df8f0 <get_arg$isra$0+0xcc>
400df8e6:	032c      	movi.n	a3, 32
400df8e8:	20dd30        	or	a13, a13, a3
400df8eb:	3a2b      	addi.n	a3, a10, 2
400df8ed:	00a446        	j	400dfb82 <get_arg$isra$0+0x35e>
400df8f0:	081c      	movi.n	a8, 16
400df8f2:	fff846        	j	400df8d7 <get_arg$isra$0+0xb3>
400df8f5:	bfc882        	addi	a8, a8, -65
400df8f8:	748080        	extui	a8, a8, 0, 8
400df8fb:	7a3c      	movi.n	a10, 55
400df8fd:	442020        	extui	a2, a2, 0, 5
400df900:	253a87        	bltu	a10, a8, 400df929 <get_arg$isra$0+0x105>
400df903:	c3ada1        	l32r	a10, 400d07b8 <_flash_cache_start+0x7a0>
400df906:	a088a0        	addx4	a8, a8, a10
400df909:	0888      	l32i.n	a8, a8, 0
400df90b:	0008a0        	jx	a8
400df90e:	026d47        	bbci	a13, 4, 400df914 <get_arg$isra$0+0xf0>
400df911:	00d806        	j	400dfc75 <get_arg$isra$0+0x451>
400df914:	026d57        	bbci	a13, 5, 400df91a <get_arg$isra$0+0xf6>
400df917:	00dec6        	j	400dfc96 <get_arg$isra$0+0x472>
400df91a:	00db46        	j	400dfc8b <get_arg$isra$0+0x467>
400df91d:	026d47        	bbci	a13, 4, 400df923 <get_arg$isra$0+0xff>
400df920:	00d186        	j	400dfc6a <get_arg$isra$0+0x446>
400df923:	00d906        	j	400dfc8b <get_arg$isra$0+0x467>
400df926:	000000        	ill
400df929:	070926        	beqi	a9, -1, 400df934 <get_arg$isra$0+0x110>
400df92c:	a08970        	addx4	a8, a9, a7
400df92f:	0859      	s32i.n	a5, a8, 0
400df931:	009346        	j	400dfb82 <get_arg$isra$0+0x35e>
400df934:	0275b6        	bltui	a5, 7, 400df93a <get_arg$isra$0+0x116>
400df937:	0091c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df93a:	c3a081        	l32r	a8, 400d07bc <_flash_cache_start+0x7a4>
400df93d:	a08580        	addx4	a8, a5, a8
400df940:	0888      	l32i.n	a8, a8, 0
400df942:	0008a0        	jx	a8
400df945:	2458      	l32i.n	a5, a4, 8
400df947:	881c      	movi.n	a8, 24
400df949:	954b      	addi.n	a9, a5, 4
400df94b:	2499      	s32i.n	a9, a4, 8
400df94d:	a21b      	addi.n	a10, a2, 1
400df94f:	b02260        	addx8	a2, a2, a6
400df952:	072897        	blt	a8, a9, 400df95d <get_arg$isra$0+0x139>
400df955:	1488      	l32i.n	a8, a4, 4
400df957:	0002c6        	j	400df966 <get_arg$isra$0+0x142>
400df95a:	000000        	ill
400df95d:	032857        	blt	a8, a5, 400df964 <get_arg$isra$0+0x140>
400df960:	452c      	movi.n	a5, 36
400df962:	2459      	s32i.n	a5, a4, 8
400df964:	0488      	l32i.n	a8, a4, 0
400df966:	2458      	l32i.n	a5, a4, 8
400df968:	f97c      	movi.n	a9, -1
400df96a:	585a      	add.n	a5, a8, a5
400df96c:	fcc552        	addi	a5, a5, -4
400df96f:	0558      	l32i.n	a5, a5, 0
400df971:	0259      	s32i.n	a5, a2, 0
400df973:	0a2d      	mov.n	a2, a10
400df975:	150c      	movi.n	a5, 1
400df977:	0081c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df97a:	2458      	l32i.n	a5, a4, 8
400df97c:	887c      	movi.n	a8, -8
400df97e:	557b      	addi.n	a5, a5, 7
400df980:	105580        	and	a5, a5, a8
400df983:	958b      	addi.n	a9, a5, 8
400df985:	2499      	s32i.n	a9, a4, 8
400df987:	881c      	movi.n	a8, 24
400df989:	a21b      	addi.n	a10, a2, 1
400df98b:	b02260        	addx8	a2, a2, a6
400df98e:	072897        	blt	a8, a9, 400df999 <get_arg$isra$0+0x175>
400df991:	1488      	l32i.n	a8, a4, 4
400df993:	0002c6        	j	400df9a2 <get_arg$isra$0+0x17e>
400df996:	000000        	ill
400df999:	032857        	blt	a8, a5, 400df9a0 <get_arg$isra$0+0x17c>
400df99c:	852c      	movi.n	a5, 40
400df99e:	2459      	s32i.n	a5, a4, 8
400df9a0:	0488      	l32i.n	a8, a4, 0
400df9a2:	2458      	l32i.n	a5, a4, 8
400df9a4:	585a      	add.n	a5, a8, a5
400df9a6:	f8c552        	addi	a5, a5, -8
400df9a9:	1598      	l32i.n	a9, a5, 4
400df9ab:	0588      	l32i.n	a8, a5, 0
400df9ad:	1299      	s32i.n	a9, a2, 4
400df9af:	0289      	s32i.n	a8, a2, 0
400df9b1:	f97c      	movi.n	a9, -1
400df9b3:	0a2d      	mov.n	a2, a10
400df9b5:	250c      	movi.n	a5, 2
400df9b7:	0071c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df9ba:	2458      	l32i.n	a5, a4, 8
400df9bc:	881c      	movi.n	a8, 24
400df9be:	954b      	addi.n	a9, a5, 4
400df9c0:	2499      	s32i.n	a9, a4, 8
400df9c2:	a21b      	addi.n	a10, a2, 1
400df9c4:	b02260        	addx8	a2, a2, a6
400df9c7:	062897        	blt	a8, a9, 400df9d1 <get_arg$isra$0+0x1ad>
400df9ca:	1488      	l32i.n	a8, a4, 4
400df9cc:	000286        	j	400df9da <get_arg$isra$0+0x1b6>
400df9cf:	570000        	lsi	f0, a0, 0x15c
400df9d2:	0328      	l32i.n	a2, a3, 0
400df9d4:	452c      	movi.n	a5, 36
400df9d6:	2459      	s32i.n	a5, a4, 8
400df9d8:	0488      	l32i.n	a8, a4, 0
400df9da:	2458      	l32i.n	a5, a4, 8
400df9dc:	f97c      	movi.n	a9, -1
400df9de:	585a      	add.n	a5, a8, a5
400df9e0:	fcc552        	addi	a5, a5, -4
400df9e3:	0558      	l32i.n	a5, a5, 0
400df9e5:	0259      	s32i.n	a5, a2, 0
400df9e7:	0a2d      	mov.n	a2, a10
400df9e9:	650c      	movi.n	a5, 6
400df9eb:	0064c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400df9ee:	2458      	l32i.n	a5, a4, 8
400df9f0:	881c      	movi.n	a8, 24
400df9f2:	954b      	addi.n	a9, a5, 4
400df9f4:	2499      	s32i.n	a9, a4, 8
400df9f6:	a21b      	addi.n	a10, a2, 1
400df9f8:	b02260        	addx8	a2, a2, a6
400df9fb:	062897        	blt	a8, a9, 400dfa05 <get_arg$isra$0+0x1e1>
400df9fe:	1488      	l32i.n	a8, a4, 4
400dfa00:	000286        	j	400dfa0e <get_arg$isra$0+0x1ea>
400dfa03:	570000        	lsi	f0, a0, 0x15c
400dfa06:	0328      	l32i.n	a2, a3, 0
400dfa08:	452c      	movi.n	a5, 36
400dfa0a:	2459      	s32i.n	a5, a4, 8
400dfa0c:	0488      	l32i.n	a8, a4, 0
400dfa0e:	2458      	l32i.n	a5, a4, 8
400dfa10:	f97c      	movi.n	a9, -1
400dfa12:	585a      	add.n	a5, a8, a5
400dfa14:	fcc552        	addi	a5, a5, -4
400dfa17:	0558      	l32i.n	a5, a5, 0
400dfa19:	0259      	s32i.n	a5, a2, 0
400dfa1b:	0a2d      	mov.n	a2, a10
400dfa1d:	050c      	movi.n	a5, 0
400dfa1f:	0057c6        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfa22:	2458      	l32i.n	a5, a4, 8
400dfa24:	881c      	movi.n	a8, 24
400dfa26:	954b      	addi.n	a9, a5, 4
400dfa28:	2499      	s32i.n	a9, a4, 8
400dfa2a:	a21b      	addi.n	a10, a2, 1
400dfa2c:	b02260        	addx8	a2, a2, a6
400dfa2f:	062897        	blt	a8, a9, 400dfa39 <get_arg$isra$0+0x215>
400dfa32:	1488      	l32i.n	a8, a4, 4
400dfa34:	000286        	j	400dfa42 <get_arg$isra$0+0x21e>
400dfa37:	570000        	lsi	f0, a0, 0x15c
400dfa3a:	0328      	l32i.n	a2, a3, 0
400dfa3c:	452c      	movi.n	a5, 36
400dfa3e:	2459      	s32i.n	a5, a4, 8
400dfa40:	0488      	l32i.n	a8, a4, 0
400dfa42:	2458      	l32i.n	a5, a4, 8
400dfa44:	f97c      	movi.n	a9, -1
400dfa46:	585a      	add.n	a5, a8, a5
400dfa48:	fcc552        	addi	a5, a5, -4
400dfa4b:	0558      	l32i.n	a5, a5, 0
400dfa4d:	0259      	s32i.n	a5, a2, 0
400dfa4f:	0a2d      	mov.n	a2, a10
400dfa51:	350c      	movi.n	a5, 3
400dfa53:	004ac6        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfa56:	2458      	l32i.n	a5, a4, 8
400dfa58:	887c      	movi.n	a8, -8
400dfa5a:	557b      	addi.n	a5, a5, 7
400dfa5c:	105580        	and	a5, a5, a8
400dfa5f:	958b      	addi.n	a9, a5, 8
400dfa61:	2499      	s32i.n	a9, a4, 8
400dfa63:	881c      	movi.n	a8, 24
400dfa65:	a21b      	addi.n	a10, a2, 1
400dfa67:	b02260        	addx8	a2, a2, a6
400dfa6a:	072897        	blt	a8, a9, 400dfa75 <get_arg$isra$0+0x251>
400dfa6d:	1488      	l32i.n	a8, a4, 4
400dfa6f:	0002c6        	j	400dfa7e <get_arg$isra$0+0x25a>
400dfa72:	000000        	ill
400dfa75:	032857        	blt	a8, a5, 400dfa7c <get_arg$isra$0+0x258>
400dfa78:	852c      	movi.n	a5, 40
400dfa7a:	2459      	s32i.n	a5, a4, 8
400dfa7c:	0488      	l32i.n	a8, a4, 0
400dfa7e:	2458      	l32i.n	a5, a4, 8
400dfa80:	585a      	add.n	a5, a8, a5
400dfa82:	f8c552        	addi	a5, a5, -8
400dfa85:	1598      	l32i.n	a9, a5, 4
400dfa87:	0588      	l32i.n	a8, a5, 0
400dfa89:	1299      	s32i.n	a9, a2, 4
400dfa8b:	0289      	s32i.n	a8, a2, 0
400dfa8d:	f97c      	movi.n	a9, -1
400dfa8f:	0a2d      	mov.n	a2, a10
400dfa91:	450c      	movi.n	a5, 4
400dfa93:	003ac6        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfa96:	2488      	l32i.n	a8, a4, 8
400dfa98:	8a7c      	movi.n	a10, -8
400dfa9a:	887b      	addi.n	a8, a8, 7
400dfa9c:	1088a0        	and	a8, a8, a10
400dfa9f:	b88b      	addi.n	a11, a8, 8
400dfaa1:	24b9      	s32i.n	a11, a4, 8
400dfaa3:	8a1c      	movi.n	a10, 24
400dfaa5:	c21b      	addi.n	a12, a2, 1
400dfaa7:	b02260        	addx8	a2, a2, a6
400dfaaa:	072ab7        	blt	a10, a11, 400dfab5 <get_arg$isra$0+0x291>
400dfaad:	14a8      	l32i.n	a10, a4, 4
400dfaaf:	0002c6        	j	400dfabe <get_arg$isra$0+0x29a>
400dfab2:	000000        	ill
400dfab5:	032a87        	blt	a10, a8, 400dfabc <get_arg$isra$0+0x298>
400dfab8:	882c      	movi.n	a8, 40
400dfaba:	2489      	s32i.n	a8, a4, 8
400dfabc:	04a8      	l32i.n	a10, a4, 0
400dfabe:	2488      	l32i.n	a8, a4, 8
400dfac0:	8a8a      	add.n	a8, a10, a8
400dfac2:	f8c882        	addi	a8, a8, -8
400dfac5:	08a8      	l32i.n	a10, a8, 0
400dfac7:	18b8      	l32i.n	a11, a8, 4
400dfac9:	02a9      	s32i.n	a10, a2, 0
400dfacb:	12b9      	s32i.n	a11, a2, 4
400dfacd:	002006        	j	400dfb51 <get_arg$isra$0+0x32d>
400dfad0:	0788      	l32i.n	a8, a7, 0
400dfad2:	140866        	bnei	a8, -1, 400dfaea <get_arg$isra$0+0x2c6>
400dfad5:	80a0c2        	movi	a12, 128
400dfad8:	0b0c      	movi.n	a11, 0
400dfada:	07ad      	mov.n	a10, a7
400dfadc:	51d9      	s32i.n	a13, a1, 20
400dfade:	61e9      	s32i.n	a14, a1, 24
400dfae0:	c16581        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400dfae3:	0008e0        	callx8	a8
400dfae6:	61e8      	l32i.n	a14, a1, 24
400dfae8:	51d8      	l32i.n	a13, a1, 20
400dfaea:	0188      	l32i.n	a8, a1, 0
400dfaec:	9e0b      	addi.n	a9, a14, -1
400dfaee:	538890        	max	a8, a8, a9
400dfaf1:	000ac6        	j	400dfb20 <get_arg$isra$0+0x2fc>
400dfaf4:	0788      	l32i.n	a8, a7, 0
400dfaf6:	180866        	bnei	a8, -1, 400dfb12 <get_arg$isra$0+0x2ee>
400dfaf9:	80a0c2        	movi	a12, 128
400dfafc:	0b0c      	movi.n	a11, 0
400dfafe:	07ad      	mov.n	a10, a7
400dfb00:	4199      	s32i.n	a9, a1, 16
400dfb02:	51d9      	s32i.n	a13, a1, 20
400dfb04:	61e9      	s32i.n	a14, a1, 24
400dfb06:	c15b81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400dfb09:	0008e0        	callx8	a8
400dfb0c:	61e8      	l32i.n	a14, a1, 24
400dfb0e:	51d8      	l32i.n	a13, a1, 20
400dfb10:	4198      	l32i.n	a9, a1, 16
400dfb12:	ee0b      	addi.n	a14, a14, -1
400dfb14:	a08e70        	addx4	a8, a14, a7
400dfb17:	0a0c      	movi.n	a10, 0
400dfb19:	08a9      	s32i.n	a10, a8, 0
400dfb1b:	0188      	l32i.n	a8, a1, 0
400dfb1d:	5388e0        	max	a8, a8, a14
400dfb20:	0189      	s32i.n	a8, a1, 0
400dfb22:	001706        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfb25:	0a3d      	mov.n	a3, a10
400dfb27:	2488      	l32i.n	a8, a4, 8
400dfb29:	8a1c      	movi.n	a10, 24
400dfb2b:	b84b      	addi.n	a11, a8, 4
400dfb2d:	24b9      	s32i.n	a11, a4, 8
400dfb2f:	c21b      	addi.n	a12, a2, 1
400dfb31:	b02260        	addx8	a2, a2, a6
400dfb34:	052ab7        	blt	a10, a11, 400dfb3d <get_arg$isra$0+0x319>
400dfb37:	14a8      	l32i.n	a10, a4, 4
400dfb39:	000246        	j	400dfb46 <get_arg$isra$0+0x322>
400dfb3c:	2a8700        	mul.s	f8, f7, f0
400dfb3f:	482c03        	lsi	f0, a12, 0x120
400dfb42:	2489      	s32i.n	a8, a4, 8
400dfb44:	04a8      	l32i.n	a10, a4, 0
400dfb46:	2488      	l32i.n	a8, a4, 8
400dfb48:	8a8a      	add.n	a8, a10, a8
400dfb4a:	fcc882        	addi	a8, a8, -4
400dfb4d:	0888      	l32i.n	a8, a8, 0
400dfb4f:	0289      	s32i.n	a8, a2, 0
400dfb51:	0c2d      	mov.n	a2, a12
400dfb53:	000ac6        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfb56:	d0c8e2        	addi	a14, a8, -48
400dfb59:	9a0c      	movi.n	a10, 9
400dfb5b:	0001c6        	j	400dfb66 <get_arg$isra$0+0x342>
400dfb5e:	a0eee0        	addx4	a14, a14, a14
400dfb61:	90ee80        	addx2	a14, a14, a8
400dfb64:	331b      	addi.n	a3, a3, 1
400dfb66:	000382        	l8ui	a8, a3, 0
400dfb69:	589c      	beqz.n	a8, 400dfb82 <get_arg$isra$0+0x35e>
400dfb6b:	d0c882        	addi	a8, a8, -48
400dfb6e:	ecba87        	bgeu	a10, a8, 400dfb5e <get_arg$isra$0+0x33a>
400dfb71:	000346        	j	400dfb82 <get_arg$isra$0+0x35e>
400dfb74:	331b      	addi.n	a3, a3, 1
400dfb76:	000382        	l8ui	a8, a3, 0
400dfb79:	d0c882        	addi	a8, a8, -48
400dfb7c:	748080        	extui	a8, a8, 0, 8
400dfb7f:	f1ba87        	bgeu	a10, a8, 400dfb74 <get_arg$isra$0+0x350>
400dfb82:	11a8      	l32i.n	a10, a1, 4
400dfb84:	b80c      	movi.n	a8, 11
400dfb86:	021a87        	beq	a10, a8, 400dfb8c <get_arg$isra$0+0x368>
400dfb89:	ff3306        	j	400df859 <get_arg$isra$0+0x35>
400dfb8c:	000352        	l8ui	a5, a3, 0
400dfb8f:	658c      	beqz.n	a5, 400dfb99 <get_arg$isra$0+0x375>
400dfb91:	2188      	l32i.n	a8, a1, 8
400dfb93:	022827        	blt	a8, a2, 400dfb99 <get_arg$isra$0+0x375>
400dfb96:	ff2986        	j	400df840 <get_arg$isra$0+0x1c>
400dfb99:	0188      	l32i.n	a8, a1, 0
400dfb9b:	000352        	l8ui	a5, a3, 0
400dfb9e:	2198      	l32i.n	a9, a1, 8
400dfba0:	f21b      	addi.n	a15, a2, 1
400dfba2:	839850        	moveqz	a9, a8, a5
400dfba5:	0199      	s32i.n	a9, a1, 0
400dfba7:	b0b260        	addx8	a11, a2, a6
400dfbaa:	a07270        	addx4	a7, a2, a7
400dfbad:	8a1c      	movi.n	a10, 24
400dfbaf:	4c2c      	movi.n	a12, 36
400dfbb1:	8d7c      	movi.n	a13, -8
400dfbb3:	8e2c      	movi.n	a14, 40
400dfbb5:	002306        	j	400dfc45 <get_arg$isra$0+0x421>
400dfbb8:	0758      	l32i.n	a5, a7, 0
400dfbba:	2428      	l32i.n	a2, a4, 8
400dfbbc:	550b      	addi.n	a5, a5, -1
400dfbbe:	5f65f6        	bgeui	a5, 6, 400dfc21 <get_arg$isra$0+0x3fd>
400dfbc1:	c2ff91        	l32r	a9, 400d07c0 <_flash_cache_start+0x7a8>
400dfbc4:	a05590        	addx4	a5, a5, a9
400dfbc7:	0558      	l32i.n	a5, a5, 0
400dfbc9:	0005a0        	jx	a5
400dfbcc:	227b      	addi.n	a2, a2, 7
400dfbce:	1022d0        	and	a2, a2, a13
400dfbd1:	528b      	addi.n	a5, a2, 8
400dfbd3:	2459      	s32i.n	a5, a4, 8
400dfbd5:	042a57        	blt	a10, a5, 400dfbdd <get_arg$isra$0+0x3b9>
400dfbd8:	1458      	l32i.n	a5, a4, 4
400dfbda:	000186        	j	400dfbe4 <get_arg$isra$0+0x3c0>
400dfbdd:	012a27        	blt	a10, a2, 400dfbe2 <get_arg$isra$0+0x3be>
400dfbe0:	24e9      	s32i.n	a14, a4, 8
400dfbe2:	0458      	l32i.n	a5, a4, 0
400dfbe4:	2428      	l32i.n	a2, a4, 8
400dfbe6:	252a      	add.n	a2, a5, a2
400dfbe8:	f8c222        	addi	a2, a2, -8
400dfbeb:	0288      	l32i.n	a8, a2, 0
400dfbed:	1298      	l32i.n	a9, a2, 4
400dfbef:	0b89      	s32i.n	a8, a11, 0
400dfbf1:	1b99      	s32i.n	a9, a11, 4
400dfbf3:	001206        	j	400dfc3f <get_arg$isra$0+0x41b>
400dfbf6:	227b      	addi.n	a2, a2, 7
400dfbf8:	1022d0        	and	a2, a2, a13
400dfbfb:	528b      	addi.n	a5, a2, 8
400dfbfd:	2459      	s32i.n	a5, a4, 8
400dfbff:	052a57        	blt	a10, a5, 400dfc08 <get_arg$isra$0+0x3e4>
400dfc02:	1458      	l32i.n	a5, a4, 4
400dfc04:	0001c6        	j	400dfc0f <get_arg$isra$0+0x3eb>
400dfc07:	2a2700        	mul.s	f2, f7, f0
400dfc0a:	24e901        	l32r	a0, 400a8fb0 <_iram_end+0x1b45c>
400dfc0d:	0458      	l32i.n	a5, a4, 0
400dfc0f:	2428      	l32i.n	a2, a4, 8
400dfc11:	252a      	add.n	a2, a5, a2
400dfc13:	f8c222        	addi	a2, a2, -8
400dfc16:	0288      	l32i.n	a8, a2, 0
400dfc18:	1298      	l32i.n	a9, a2, 4
400dfc1a:	0b89      	s32i.n	a8, a11, 0
400dfc1c:	1b99      	s32i.n	a9, a11, 4
400dfc1e:	000746        	j	400dfc3f <get_arg$isra$0+0x41b>
400dfc21:	524b      	addi.n	a5, a2, 4
400dfc23:	2459      	s32i.n	a5, a4, 8
400dfc25:	042a57        	blt	a10, a5, 400dfc2d <get_arg$isra$0+0x409>
400dfc28:	1458      	l32i.n	a5, a4, 4
400dfc2a:	000186        	j	400dfc34 <get_arg$isra$0+0x410>
400dfc2d:	012a27        	blt	a10, a2, 400dfc32 <get_arg$isra$0+0x40e>
400dfc30:	24c9      	s32i.n	a12, a4, 8
400dfc32:	0458      	l32i.n	a5, a4, 0
400dfc34:	2428      	l32i.n	a2, a4, 8
400dfc36:	252a      	add.n	a2, a5, a2
400dfc38:	fcc222        	addi	a2, a2, -4
400dfc3b:	0228      	l32i.n	a2, a2, 0
400dfc3d:	0b29      	s32i.n	a2, a11, 0
400dfc3f:	ff1b      	addi.n	a15, a15, 1
400dfc41:	bb8b      	addi.n	a11, a11, 8
400dfc43:	774b      	addi.n	a7, a7, 4
400dfc45:	0158      	l32i.n	a5, a1, 0
400dfc47:	2f0b      	addi.n	a2, a15, -1
400dfc49:	022527        	blt	a5, a2, 400dfc4f <get_arg$isra$0+0x42b>
400dfc4c:	ffda06        	j	400dfbb8 <get_arg$isra$0+0x394>
400dfc4f:	3188      	l32i.n	a8, a1, 12
400dfc51:	102192        	l32i	a9, a1, 64
400dfc54:	0829      	s32i.n	a2, a8, 0
400dfc56:	2188      	l32i.n	a8, a1, 8
400dfc58:	0939      	s32i.n	a3, a9, 0
400dfc5a:	b02860        	addx8	a2, a8, a6
400dfc5d:	f01d      	retw.n
400dfc5f:	350c      	movi.n	a5, 3
400dfc61:	020926        	beqi	a9, -1, 400dfc67 <get_arg$isra$0+0x443>
400dfc64:	ff3106        	j	400df92c <get_arg$isra$0+0x108>
400dfc67:	ff6dc6        	j	400dfa22 <get_arg$isra$0+0x1fe>
400dfc6a:	650c      	movi.n	a5, 6
400dfc6c:	020926        	beqi	a9, -1, 400dfc72 <get_arg$isra$0+0x44e>
400dfc6f:	ff2e46        	j	400df92c <get_arg$isra$0+0x108>
400dfc72:	ff5106        	j	400df9ba <get_arg$isra$0+0x196>
400dfc75:	150c      	movi.n	a5, 1
400dfc77:	020926        	beqi	a9, -1, 400dfc7d <get_arg$isra$0+0x459>
400dfc7a:	ff2b86        	j	400df92c <get_arg$isra$0+0x108>
400dfc7d:	ff3106        	j	400df945 <get_arg$isra$0+0x121>
400dfc80:	450c      	movi.n	a5, 4
400dfc82:	020926        	beqi	a9, -1, 400dfc88 <get_arg$isra$0+0x464>
400dfc85:	ff28c6        	j	400df92c <get_arg$isra$0+0x108>
400dfc88:	ff7286        	j	400dfa56 <get_arg$isra$0+0x232>
400dfc8b:	050c      	movi.n	a5, 0
400dfc8d:	020926        	beqi	a9, -1, 400dfc93 <get_arg$isra$0+0x46f>
400dfc90:	ff2606        	j	400df92c <get_arg$isra$0+0x108>
400dfc93:	ff55c6        	j	400df9ee <get_arg$isra$0+0x1ca>
400dfc96:	250c      	movi.n	a5, 2
400dfc98:	020926        	beqi	a9, -1, 400dfc9e <get_arg$isra$0+0x47a>
400dfc9b:	ff2346        	j	400df92c <get_arg$isra$0+0x108>
400dfc9e:	ff3606        	j	400df97a <get_arg$isra$0+0x156>
400dfca1:	000000        	ill

400dfca4 <__sprint_r>:
400dfca4:	006136        	entry	a1, 48
400dfca7:	24a8      	l32i.n	a10, a4, 8
400dfca9:	3acc      	bnez.n	a10, 400dfcb0 <__sprint_r+0xc>
400dfcab:	14a9      	s32i.n	a10, a4, 4
400dfcad:	001646        	j	400dfd0a <__sprint_r+0x66>
400dfcb0:	192352        	l32i	a5, a3, 100
400dfcb3:	4165d7        	bbci	a5, 13, 400dfcf8 <__sprint_r+0x54>
400dfcb6:	0468      	l32i.n	a6, a4, 0
400dfcb8:	000d06        	j	400dfcf0 <__sprint_r+0x4c>
400dfcbb:	165800        	lsi	f0, a8, 88
400dfcbe:	0688      	l32i.n	a8, a6, 0
400dfcc0:	415150        	srli	a5, a5, 1
400dfcc3:	070c      	movi.n	a7, 0
400dfcc5:	000606        	j	400dfce1 <__sprint_r+0x3d>
400dfcc8:	18b200        	lsxp	f11, a2, a0
400dfccb:	03cd00        	lsi	f0, a13, 12
400dfcce:	02ad      	mov.n	a10, a2
400dfcd0:	0189      	s32i.n	a8, a1, 0
400dfcd2:	c2bc81        	l32r	a8, 400d07c4 <_flash_cache_start+0x7ac>
400dfcd5:	0008e0        	callx8	a8
400dfcd8:	0188      	l32i.n	a8, a1, 0
400dfcda:	882b      	addi.n	a8, a8, 2
400dfcdc:	240a26        	beqi	a10, -1, 400dfd04 <__sprint_r+0x60>
400dfcdf:	771b      	addi.n	a7, a7, 1
400dfce1:	e42757        	blt	a7, a5, 400dfcc9 <__sprint_r+0x25>
400dfce4:	2488      	l32i.n	a8, a4, 8
400dfce6:	1155f0        	slli	a5, a5, 1
400dfce9:	c05850        	sub	a5, a8, a5
400dfcec:	2459      	s32i.n	a5, a4, 8
400dfcee:	668b      	addi.n	a6, a6, 8
400dfcf0:	24a8      	l32i.n	a10, a4, 8
400dfcf2:	fc6a56        	bnez	a10, 400dfcbc <__sprint_r+0x18>
400dfcf5:	0002c6        	j	400dfd04 <__sprint_r+0x60>
400dfcf8:	04cd      	mov.n	a12, a4
400dfcfa:	03bd      	mov.n	a11, a3
400dfcfc:	02ad      	mov.n	a10, a2
400dfcfe:	c26b81        	l32r	a8, 400d06ac <_flash_cache_start+0x694>
400dfd01:	0008e0        	callx8	a8
400dfd04:	020c      	movi.n	a2, 0
400dfd06:	2429      	s32i.n	a2, a4, 8
400dfd08:	1429      	s32i.n	a2, a4, 4
400dfd0a:	0a2d      	mov.n	a2, a10
400dfd0c:	f01d      	retw.n
	...

400dfd10 <_vfiprintf_r>:
400dfd10:	058136        	entry	a1, 0x2c0
400dfd13:	9c6122        	s32i	a2, a1, 0x270
400dfd16:	9c2182        	l32i	a8, a1, 0x270
400dfd19:	986132        	s32i	a3, a1, 0x260
400dfd1c:	996142        	s32i	a4, a1, 0x264
400dfd1f:	946152        	s32i	a5, a1, 0x250
400dfd22:	956162        	s32i	a6, a1, 0x254
400dfd25:	966172        	s32i	a7, a1, 0x258
400dfd28:	c88c      	beqz.n	a8, 400dfd38 <_vfiprintf_r+0x28>
400dfd2a:	6828      	l32i.n	a2, a8, 24
400dfd2c:	008256        	bnez	a2, 400dfd38 <_vfiprintf_r+0x28>
400dfd2f:	20a880        	or	a10, a8, a8
400dfd32:	c25781        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400dfd35:	0008e0        	callx8	a8
400dfd38:	c24d21        	l32r	a2, 400d066c <_flash_cache_start+0x654>
400dfd3b:	982192        	l32i	a9, a1, 0x260
400dfd3e:	079927        	bne	a9, a2, 400dfd49 <_vfiprintf_r+0x39>
400dfd41:	9c2122        	l32i	a2, a1, 0x270
400dfd44:	1228      	l32i.n	a2, a2, 4
400dfd46:	000846        	j	400dfd6b <_vfiprintf_r+0x5b>
400dfd49:	c24921        	l32r	a2, 400d0670 <_flash_cache_start+0x658>
400dfd4c:	982132        	l32i	a3, a1, 0x260
400dfd4f:	0a9327        	bne	a3, a2, 400dfd5d <_vfiprintf_r+0x4d>
400dfd52:	9c2182        	l32i	a8, a1, 0x270
400dfd55:	2888      	l32i.n	a8, a8, 8
400dfd57:	986182        	s32i	a8, a1, 0x260
400dfd5a:	000406        	j	400dfd6e <_vfiprintf_r+0x5e>
400dfd5d:	c24521        	l32r	a2, 400d0674 <_flash_cache_start+0x65c>
400dfd60:	982192        	l32i	a9, a1, 0x260
400dfd63:	079927        	bne	a9, a2, 400dfd6e <_vfiprintf_r+0x5e>
400dfd66:	9c2122        	l32i	a2, a1, 0x270
400dfd69:	3228      	l32i.n	a2, a2, 12
400dfd6b:	986122        	s32i	a2, a1, 0x260
400dfd6e:	982132        	l32i	a3, a1, 0x260
400dfd71:	192322        	l32i	a2, a3, 100
400dfd74:	0ee207        	bbsi	a2, 0, 400dfd86 <_vfiprintf_r+0x76>
400dfd77:	061322        	l16ui	a2, a3, 12
400dfd7a:	08e297        	bbsi	a2, 9, 400dfd86 <_vfiprintf_r+0x76>
400dfd7d:	58c3a2        	addi	a10, a3, 88
400dfd80:	201110        	or	a1, a1, a1
400dfd83:	a4d565        	call8	40084ad8 <_lock_acquire_recursive>
400dfd86:	982182        	l32i	a8, a1, 0x260
400dfd89:	c1ef31        	l32r	a3, 400d0548 <_flash_cache_start+0x530>
400dfd8c:	061822        	l16ui	a2, a8, 12
400dfd8f:	234280        	sext	a4, a2, 15
400dfd92:	102320        	and	a2, a3, a2
400dfd95:	f42020        	extui	a2, a2, 0, 16
400dfd98:	02dc      	bnez.n	a2, 400dfdac <_vfiprintf_r+0x9c>
400dfd9a:	203430        	or	a3, a4, a3
400dfd9d:	065832        	s16i	a3, a8, 12
400dfda0:	c24221        	l32r	a2, 400d06a8 <_flash_cache_start+0x690>
400dfda3:	192832        	l32i	a3, a8, 100
400dfda6:	102320        	and	a2, a3, a2
400dfda9:	196822        	s32i	a2, a8, 100
400dfdac:	982192        	l32i	a9, a1, 0x260
400dfdaf:	061922        	l16ui	a2, a9, 12
400dfdb2:	036237        	bbci	a2, 3, 400dfdb9 <_vfiprintf_r+0xa9>
400dfdb5:	4928      	l32i.n	a2, a9, 16
400dfdb7:	12fc      	bnez.n	a2, 400dfdec <_vfiprintf_r+0xdc>
400dfdb9:	9821b2        	l32i	a11, a1, 0x260
400dfdbc:	9c21a2        	l32i	a10, a1, 0x270
400dfdbf:	c28781        	l32r	a8, 400d07dc <_flash_cache_start+0x7c4>
400dfdc2:	0008e0        	callx8	a8
400dfdc5:	3aac      	beqz.n	a10, 400dfdec <_vfiprintf_r+0xdc>
400dfdc7:	982132        	l32i	a3, a1, 0x260
400dfdca:	192322        	l32i	a2, a3, 100
400dfdcd:	036207        	bbci	a2, 0, 400dfdd4 <_vfiprintf_r+0xc4>
400dfdd0:	000486        	j	400dfde6 <_vfiprintf_r+0xd6>
400dfdd3:	218200        	srai	a8, a0, 2
400dfdd6:	2298      	l32i.n	a9, a2, 8
400dfdd8:	0618      	l32i.n	a1, a6, 0
400dfdda:	08e297        	bbsi	a2, 9, 400dfde6 <_vfiprintf_r+0xd6>
400dfddd:	58c8a2        	addi	a10, a8, 88
400dfde0:	201110        	or	a1, a1, a1
400dfde3:	a4d325        	call8	40084b14 <_lock_release_recursive>
400dfde6:	f27c      	movi.n	a2, -1
400dfde8:	f01d      	retw.n
400dfdea:	920000        	lsi	f0, a0, 0x248
400dfded:	229821        	l32r	a2, 400a8850 <_iram_end+0x1acfc>
400dfdf0:	321aa0        	orbc	b1, b10, b10
400dfdf3:	0619      	s32i.n	a1, a6, 0
400dfdf5:	102320        	and	a2, a3, a2
400dfdf8:	309266        	bnei	a2, 10, 400dfe2c <_vfiprintf_r+0x11c>
400dfdfb:	079922        	l16si	a2, a9, 14
400dfdfe:	02a296        	bltz	a2, 400dfe2c <_vfiprintf_r+0x11c>
400dfe01:	192922        	l32i	a2, a9, 100
400dfe04:	08e207        	bbsi	a2, 0, 400dfe10 <_vfiprintf_r+0x100>
400dfe07:	05e397        	bbsi	a3, 9, 400dfe10 <_vfiprintf_r+0x100>
400dfe0a:	58c9a2        	addi	a10, a9, 88
400dfe0d:	a4d065        	call8	40084b14 <_lock_release_recursive>
400dfe10:	9421d2        	l32i	a13, a1, 0x250
400dfe13:	9521e2        	l32i	a14, a1, 0x254
400dfe16:	9621f2        	l32i	a15, a1, 0x258
400dfe19:	9921c2        	l32i	a12, a1, 0x264
400dfe1c:	9821b2        	l32i	a11, a1, 0x260
400dfe1f:	9c21a2        	l32i	a10, a1, 0x270
400dfe22:	0200e5        	call8	400e1e30 <__sbprintf>
400dfe25:	202aa0        	or	a2, a10, a10
400dfe28:	f01d      	retw.n
400dfe2a:	b20000        	mulsh	a0, a0, a0
400dfe2d:	3210c1        	l32r	a12, 400ac670 <_iram_end+0x1eb1c>
400dfe30:	3ae4a1        	l32r	a10, 400ae9c0 <_iram_end+0x20e6c>
400dfe33:	323b      	addi.n	a3, a2, 3
400dfe35:	328d61        	l32r	a6, 400ac86c <_iram_end+0x1ed18>
400dfe38:	329761        	l32r	a6, 400ac894 <_iram_end+0x1ed40>
400dfe3b:	1a90a1        	l32r	a10, 400a687c <_iram_end+0x18d28>
400dfe3e:	020c33        	lsi	f3, a12, 8
400dfe41:	f47c      	movi.n	a4, -1
400dfe43:	64c332        	addi	a3, a3, 100
400dfe46:	8f6122        	s32i	a2, a1, 0x23c
400dfe49:	8e6122        	s32i	a2, a1, 0x238
400dfe4c:	906122        	s32i	a2, a1, 0x240
400dfe4f:	446142        	s32i	a4, a1, 0x110
400dfe52:	916122        	s32i	a2, a1, 0x244
400dfe55:	9f6122        	s32i	a2, a1, 0x27c
400dfe58:	a06122        	s32i	a2, a1, 0x280
400dfe5b:	a16122        	s32i	a2, a1, 0x284
400dfe5e:	a26122        	s32i	a2, a1, 0x288
400dfe61:	9e6122        	s32i	a2, a1, 0x278
400dfe64:	a36132        	s32i	a3, a1, 0x28c
400dfe67:	992172        	l32i	a7, a1, 0x264
400dfe6a:	000046        	j	400dfe6f <_vfiprintf_r+0x15f>
400dfe6d:	771b      	addi.n	a7, a7, 1
400dfe6f:	000732        	l8ui	a3, a7, 0
400dfe72:	438c      	beqz.n	a3, 400dfe7a <_vfiprintf_r+0x16a>
400dfe74:	dbc332        	addi	a3, a3, -37
400dfe77:	ff2356        	bnez	a3, 400dfe6d <_vfiprintf_r+0x15d>
400dfe7a:	992142        	l32i	a4, a1, 0x264
400dfe7d:	c03740        	sub	a3, a7, a4
400dfe80:	055316        	beqz	a3, 400dfed9 <_vfiprintf_r+0x1c9>
400dfe83:	972152        	l32i	a5, a1, 0x25c
400dfe86:	10c162        	addi	a6, a1, 16
400dfe89:	0549      	s32i.n	a4, a5, 0
400dfe8b:	8f2142        	l32i	a4, a1, 0x23c
400dfe8e:	1539      	s32i.n	a3, a5, 4
400dfe90:	443a      	add.n	a4, a4, a3
400dfe92:	8f6142        	s32i	a4, a1, 0x23c
400dfe95:	8e2142        	l32i	a4, a1, 0x238
400dfe98:	02d652        	addmi	a5, a6, 0x200
400dfe9b:	441b      	addi.n	a4, a4, 1
400dfe9d:	8e6142        	s32i	a4, a1, 0x238
400dfea0:	0c84e6        	bgei	a4, 8, 400dfeb0 <_vfiprintf_r+0x1a0>
400dfea3:	972182        	l32i	a8, a1, 0x25c
400dfea6:	888b      	addi.n	a8, a8, 8
400dfea8:	976182        	s32i	a8, a1, 0x25c
400dfeab:	000886        	j	400dfed1 <_vfiprintf_r+0x1c1>
400dfeae:	c20000        	quou	a0, a0, a0
400dfeb1:	9224a2        	l32i	a10, a4, 0x248
400dfeb4:	b210c1        	l32r	a12, 400cc6f4 <_rtc_text_end+0xc6f4>
400dfeb7:	a29821        	l32r	a2, 400c8918 <_rtc_text_end+0x8918>
400dfeba:	ca9c21        	l32r	a2, 400d292c <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_base(unsigned int, std::allocator<unsigned int> const&)+0x2c>
400dfebd:	65c9      	s32i.n	a12, a5, 24
400dfebf:	de          	.byte 0xde
400dfec0:	ff          	.byte 0xff
400dfec1:	1a8c      	beqz.n	a10, 400dfec6 <_vfiprintf_r+0x1b6>
400dfec3:	07bf86        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400dfec6:	e4a142        	movi	a4, 0x1e4
400dfec9:	10c152        	addi	a5, a1, 16
400dfecc:	554a      	add.n	a5, a5, a4
400dfece:	976152        	s32i	a5, a1, 0x25c
400dfed1:	9e2162        	l32i	a6, a1, 0x278
400dfed4:	663a      	add.n	a6, a6, a3
400dfed6:	9e6162        	s32i	a6, a1, 0x278
400dfed9:	000732        	l8ui	a3, a7, 0
400dfedc:	13cc      	bnez.n	a3, 400dfee1 <_vfiprintf_r+0x1d1>
400dfede:	07b086        	j	400e1da4 <_vfiprintf_r+0x2094>
400dfee1:	10c182        	addi	a8, a1, 16
400dfee4:	f97c      	movi.n	a9, -1
400dfee6:	02d832        	addmi	a3, a8, 0x200
400dfee9:	050c      	movi.n	a5, 0
400dfeeb:	9b6192        	s32i	a9, a1, 0x26c
400dfeee:	34a282        	movi	a8, 0x234
400dfef1:	10c192        	addi	a9, a1, 16
400dfef4:	3a4352        	s8i	a5, a3, 58
400dfef7:	998a      	add.n	a9, a9, a8
400dfef9:	050c      	movi.n	a5, 0
400dfefb:	471b      	addi.n	a4, a7, 1
400dfefd:	023d      	mov.n	a3, a2
400dfeff:	9d6152        	s32i	a5, a1, 0x274
400dff02:	056d      	mov.n	a6, a5
400dff04:	9a6192        	s32i	a9, a1, 0x268
400dff07:	000286        	j	400dff15 <_vfiprintf_r+0x205>
400dff0a:	000000        	ill
400dff0d:	996142        	s32i	a4, a1, 0x264
400dff10:	060c      	movi.n	a6, 0
400dff12:	992142        	l32i	a4, a1, 0x264
400dff15:	841b      	addi.n	a8, a4, 1
400dff17:	996182        	s32i	a8, a1, 0x264
400dff1a:	c22df1        	l32r	a15, 400d07d0 <_flash_cache_start+0x7b8>
400dff1d:	000482        	l8ui	a8, a4, 0
400dff20:	9a0c      	movi.n	a10, 9
400dff22:	4c2c      	movi.n	a12, 36
400dff24:	ad2c      	movi.n	a13, 42
400dff26:	fe7c      	movi.n	a14, -1
400dff28:	0000c6        	j	400dff2f <_vfiprintf_r+0x21f>
400dff2b:	614200        	lsi	f0, a2, 0x184
400dff2e:	429d      	lsi	f9, a2, 8
400dff30:	e0c8      	l32i.n	a12, a0, 56
400dff32:	a95c      	movi.n	a9, 90
400dff34:	02b947        	bgeu	a9, a4, 400dff3a <_vfiprintf_r+0x22a>
400dff37:	069a86        	j	400e19a5 <_vfiprintf_r+0x1c95>
400dff3a:	a044f0        	addx4	a4, a4, a15
400dff3d:	0448      	l32i.n	a4, a4, 0
400dff3f:	0004a0        	jx	a4
400dff42:	c22141        	l32r	a4, 400d07c8 <_flash_cache_start+0x7b0>
400dff45:	052d46        	j	400e13fe <_vfiprintf_r+0x16ee>
400dff48:	9c21a2        	l32i	a10, a1, 0x270
400dff4b:	c21081        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dff4e:	0008e0        	callx8	a8
400dff51:	1aa8      	l32i.n	a10, a10, 4
400dff53:	a261a2        	s32i	a10, a1, 0x288
400dff56:	c04c81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400dff59:	0008e0        	callx8	a8
400dff5c:	a161a2        	s32i	a10, a1, 0x284
400dff5f:	9c21a2        	l32i	a10, a1, 0x270
400dff62:	c20a81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400dff65:	0008e0        	callx8	a8
400dff68:	2aa8      	l32i.n	a10, a10, 8
400dff6a:	a12182        	l32i	a8, a1, 0x284
400dff6d:	a061a2        	s32i	a10, a1, 0x280
400dff70:	f9e816        	beqz	a8, 400dff12 <_vfiprintf_r+0x202>
400dff73:	f9ba16        	beqz	a10, 400dff12 <_vfiprintf_r+0x202>
400dff76:	000a42        	l8ui	a4, a10, 0
400dff79:	f95416        	beqz	a4, 400dff12 <_vfiprintf_r+0x202>
400dff7c:	00a442        	movi	a4, 0x400
400dff7f:	00b1c6        	j	400e024a <_vfiprintf_r+0x53a>
400dff82:	10c192        	addi	a9, a1, 16
400dff85:	02d942        	addmi	a4, a9, 0x200
400dff88:	3a0482        	l8ui	a8, a4, 58
400dff8b:	f83856        	bnez	a8, 400dff12 <_vfiprintf_r+0x202>
400dff8e:	082c      	movi.n	a8, 32
400dff90:	0047c6        	j	400e00b3 <_vfiprintf_r+0x3a3>
400dff93:	140c      	movi.n	a4, 1
400dff95:	00ac46        	j	400e024a <_vfiprintf_r+0x53a>
400dff98:	992142        	l32i	a4, a1, 0x264
400dff9b:	990c      	movi.n	a9, 9
400dff9d:	000482        	l8ui	a8, a4, 0
400dffa0:	d0c842        	addi	a4, a8, -48
400dffa3:	02b947        	bgeu	a9, a4, 400dffa9 <_vfiprintf_r+0x299>
400dffa6:	079186        	j	400e1df0 <_vfiprintf_r+0x20e0>
400dffa9:	9921a2        	l32i	a10, a1, 0x264
400dffac:	4a1b      	addi.n	a4, a10, 1
400dffae:	0a0c      	movi.n	a10, 0
400dffb0:	d0c882        	addi	a8, a8, -48
400dffb3:	a0aaa0        	addx4	a10, a10, a10
400dffb6:	441b      	addi.n	a4, a4, 1
400dffb8:	90aa80        	addx2	a10, a10, a8
400dffbb:	840b      	addi.n	a8, a4, -1
400dffbd:	000882        	l8ui	a8, a8, 0
400dffc0:	d0c8b2        	addi	a11, a8, -48
400dffc3:	e9b9b7        	bgeu	a9, a11, 400dffb0 <_vfiprintf_r+0x2a0>
400dffc6:	492c      	movi.n	a9, 36
400dffc8:	021897        	beq	a8, a9, 400dffce <_vfiprintf_r+0x2be>
400dffcb:	ffd046        	j	400dff10 <_vfiprintf_r+0x200>
400dffce:	082c      	movi.n	a8, 32
400dffd0:	02a8a7        	bge	a8, a10, 400dffd6 <_vfiprintf_r+0x2c6>
400dffd3:	077b86        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400dffd6:	912182        	l32i	a8, a1, 0x244
400dffd9:	aa0b      	addi.n	a10, a10, -1
400dffdb:	09aa87        	bge	a10, a8, 400dffe8 <_vfiprintf_r+0x2d8>
400dffde:	10c1b2        	addi	a11, a1, 16
400dffe1:	b0aab0        	addx8	a10, a10, a11
400dffe4:	000706        	j	400e0004 <_vfiprintf_r+0x2f4>
400dffe7:	c19200        	mul16u	a9, a2, a0
400dffea:	a28210        	muluh	a8, a2, a1
400dffed:	898a30        	lsi	f3, a10, 0x224
400dfff0:	40a2c2        	movi	a12, 0x240
400dfff3:	9a21d2        	l32i	a13, a1, 0x268
400dfff6:	0189      	s32i.n	a8, a1, 0
400dfff8:	01d9f2        	addmi	a15, a9, 0x100
400dfffb:	09ed      	mov.n	a14, a9
400dfffd:	c9ca      	add.n	a12, a9, a12
400dffff:	07bd      	mov.n	a11, a7
400e0001:	ff8225        	call8	400df824 <get_arg$isra$0>
400e0004:	0aa8      	l32i.n	a10, a10, 0
400e0006:	038d      	mov.n	a8, a3
400e0008:	9d61a2        	s32i	a10, a1, 0x274
400e000b:	996142        	s32i	a4, a1, 0x264
400e000e:	0020c6        	j	400e0095 <_vfiprintf_r+0x385>
400e0011:	10c1a2        	addi	a10, a1, 16
400e0014:	b032a0        	addx8	a3, a2, a10
400e0017:	001d46        	j	400e0090 <_vfiprintf_r+0x380>
400e001a:	f31c      	movi.n	a3, 31
400e001c:	442347        	blt	a3, a4, 400e0064 <_vfiprintf_r+0x354>
400e001f:	341b      	addi.n	a3, a4, 1
400e0021:	10c1b2        	addi	a11, a1, 16
400e0024:	916132        	s32i	a3, a1, 0x244
400e0027:	02db32        	addmi	a3, a11, 0x200
400e002a:	122392        	l32i	a9, a3, 72
400e002d:	8a1c      	movi.n	a10, 24
400e002f:	b94b      	addi.n	a11, a9, 4
400e0031:	1263b2        	s32i	a11, a3, 72
400e0034:	052ab7        	blt	a10, a11, 400e003d <_vfiprintf_r+0x32d>
400e0037:	112392        	l32i	a9, a3, 68
400e003a:	000286        	j	400e0048 <_vfiprintf_r+0x338>
400e003d:	042a97        	blt	a10, a9, 400e0045 <_vfiprintf_r+0x335>
400e0040:	492c      	movi.n	a9, 36
400e0042:	126392        	s32i	a9, a3, 72
400e0045:	942192        	l32i	a9, a1, 0x250
400e0048:	962132        	l32i	a3, a1, 0x258
400e004b:	393a      	add.n	a3, a9, a3
400e004d:	fcc332        	addi	a3, a3, -4
400e0050:	0338      	l32i.n	a3, a3, 0
400e0052:	9d6132        	s32i	a3, a1, 0x274
400e0055:	9d2192        	l32i	a9, a1, 0x274
400e0058:	10c132        	addi	a3, a1, 16
400e005b:	b04430        	addx8	a4, a4, a3
400e005e:	0499      	s32i.n	a9, a4, 0
400e0060:	000c46        	j	400e0095 <_vfiprintf_r+0x385>
400e0063:	c1a200        	mul16u	a10, a2, a0
400e0066:	da3210        	ufloat.s	f3, a2, 1
400e0069:	234202        	s8i	a0, a2, 35
400e006c:	891c12        	l16ui	a1, a12, 0x112
400e006f:	a44b      	addi.n	a10, a4, 4
400e0071:	1263a2        	s32i	a10, a3, 72
400e0074:	0529a7        	blt	a9, a10, 400e007d <_vfiprintf_r+0x36d>
400e0077:	112342        	l32i	a4, a3, 68
400e007a:	000286        	j	400e0088 <_vfiprintf_r+0x378>
400e007d:	042947        	blt	a9, a4, 400e0085 <_vfiprintf_r+0x375>
400e0080:	442c      	movi.n	a4, 36
400e0082:	126342        	s32i	a4, a3, 72
400e0085:	942142        	l32i	a4, a1, 0x250
400e0088:	962132        	l32i	a3, a1, 0x258
400e008b:	343a      	add.n	a3, a4, a3
400e008d:	fcc332        	addi	a3, a3, -4
400e0090:	0338      	l32i.n	a3, a3, 0
400e0092:	9d6132        	s32i	a3, a1, 0x274
400e0095:	9d2142        	l32i	a4, a1, 0x274
400e0098:	083d      	mov.n	a3, a8
400e009a:	e744d6        	bgez	a4, 400dff12 <_vfiprintf_r+0x202>
400e009d:	604040        	neg	a4, a4
400e00a0:	9d6142        	s32i	a4, a1, 0x274
400e00a3:	440c      	movi.n	a4, 4
400e00a5:	006846        	j	400e024a <_vfiprintf_r+0x53a>
400e00a8:	000000        	ill
400e00ab:	10c192        	addi	a9, a1, 16
400e00ae:	b82c      	movi.n	a8, 43
400e00b0:	02d942        	addmi	a4, a9, 0x200
400e00b3:	3a4482        	s8i	a8, a4, 58
400e00b6:	ff9606        	j	400dff12 <_vfiprintf_r+0x202>
400e00b9:	992182        	l32i	a8, a1, 0x264
400e00bc:	481b      	addi.n	a4, a8, 1
400e00be:	000882        	l8ui	a8, a8, 0
400e00c1:	0418d7        	beq	a8, a13, 400e00c9 <_vfiprintf_r+0x3b9>
400e00c4:	090c      	movi.n	a9, 0
400e00c6:	004646        	j	400e01e3 <_vfiprintf_r+0x4d3>
400e00c9:	992192        	l32i	a9, a1, 0x264
400e00cc:	010982        	l8ui	a8, a9, 1
400e00cf:	990c      	movi.n	a9, 9
400e00d1:	d0c8a2        	addi	a10, a8, -48
400e00d4:	02b9a7        	bgeu	a9, a10, 400e00da <_vfiprintf_r+0x3ca>
400e00d7:	074946        	j	400e1e00 <_vfiprintf_r+0x20f0>
400e00da:	9921a2        	l32i	a10, a1, 0x264
400e00dd:	aa2b      	addi.n	a10, a10, 2
400e00df:	9961a2        	s32i	a10, a1, 0x264
400e00e2:	0a0c      	movi.n	a10, 0
400e00e4:	d0c882        	addi	a8, a8, -48
400e00e7:	a0aaa0        	addx4	a10, a10, a10
400e00ea:	90aa80        	addx2	a10, a10, a8
400e00ed:	992182        	l32i	a8, a1, 0x264
400e00f0:	881b      	addi.n	a8, a8, 1
400e00f2:	996182        	s32i	a8, a1, 0x264
400e00f5:	880b      	addi.n	a8, a8, -1
400e00f7:	000882        	l8ui	a8, a8, 0
400e00fa:	d0c8b2        	addi	a11, a8, -48
400e00fd:	e3b9b7        	bgeu	a9, a11, 400e00e4 <_vfiprintf_r+0x3d4>
400e0100:	492c      	movi.n	a9, 36
400e0102:	021897        	beq	a8, a9, 400e0108 <_vfiprintf_r+0x3f8>
400e0105:	ff8106        	j	400dff0d <_vfiprintf_r+0x1fd>
400e0108:	042c      	movi.n	a4, 32
400e010a:	02a4a7        	bge	a4, a10, 400e0110 <_vfiprintf_r+0x400>
400e010d:	072d06        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400e0110:	912142        	l32i	a4, a1, 0x244
400e0113:	aa0b      	addi.n	a10, a10, -1
400e0115:	08aa47        	bge	a10, a4, 400e0121 <_vfiprintf_r+0x411>
400e0118:	10c192        	addi	a9, a1, 16
400e011b:	b0aa90        	addx8	a10, a10, a9
400e011e:	0006c6        	j	400e013d <_vfiprintf_r+0x42d>
400e0121:	10c1b2        	addi	a11, a1, 16
400e0124:	30a242        	movi	a4, 0x230
400e0127:	4b4a      	add.n	a4, a11, a4
400e0129:	40a2c2        	movi	a12, 0x240
400e012c:	9a21d2        	l32i	a13, a1, 0x268
400e012f:	01dbf2        	addmi	a15, a11, 0x100
400e0132:	0bed      	mov.n	a14, a11
400e0134:	cbca      	add.n	a12, a11, a12
400e0136:	0149      	s32i.n	a4, a1, 0
400e0138:	07bd      	mov.n	a11, a7
400e013a:	ff6ea5        	call8	400df824 <get_arg$isra$0>
400e013d:	0aa8      	l32i.n	a10, a10, 0
400e013f:	9b61a2        	s32i	a10, a1, 0x26c
400e0142:	002106        	j	400e01ca <_vfiprintf_r+0x4ba>
400e0145:	10c182        	addi	a8, a1, 16
400e0148:	b03280        	addx8	a3, a2, a8
400e014b:	001c46        	j	400e01c0 <_vfiprintf_r+0x4b0>
400e014e:	f31c      	movi.n	a3, 31
400e0150:	402387        	blt	a3, a8, 400e0194 <_vfiprintf_r+0x484>
400e0153:	381b      	addi.n	a3, a8, 1
400e0155:	10c1a2        	addi	a10, a1, 16
400e0158:	916132        	s32i	a3, a1, 0x244
400e015b:	02da32        	addmi	a3, a10, 0x200
400e015e:	1223a2        	l32i	a10, a3, 72
400e0161:	8b1c      	movi.n	a11, 24
400e0163:	ca4b      	addi.n	a12, a10, 4
400e0165:	1263c2        	s32i	a12, a3, 72
400e0168:	052bc7        	blt	a11, a12, 400e0171 <_vfiprintf_r+0x461>
400e016b:	1123a2        	l32i	a10, a3, 68
400e016e:	000286        	j	400e017c <_vfiprintf_r+0x46c>
400e0171:	042ba7        	blt	a11, a10, 400e0179 <_vfiprintf_r+0x469>
400e0174:	4a2c      	movi.n	a10, 36
400e0176:	1263a2        	s32i	a10, a3, 72
400e0179:	9421a2        	l32i	a10, a1, 0x250
400e017c:	962132        	l32i	a3, a1, 0x258
400e017f:	10c1b2        	addi	a11, a1, 16
400e0182:	3a3a      	add.n	a3, a10, a3
400e0184:	fcc332        	addi	a3, a3, -4
400e0187:	0338      	l32i.n	a3, a3, 0
400e0189:	b088b0        	addx8	a8, a8, a11
400e018c:	9b6132        	s32i	a3, a1, 0x26c
400e018f:	0839      	s32i.n	a3, a8, 0
400e0191:	000c06        	j	400e01c5 <_vfiprintf_r+0x4b5>
400e0194:	10c182        	addi	a8, a1, 16
400e0197:	02d832        	addmi	a3, a8, 0x200
400e019a:	122382        	l32i	a8, a3, 72
400e019d:	8a1c      	movi.n	a10, 24
400e019f:	b84b      	addi.n	a11, a8, 4
400e01a1:	1263b2        	s32i	a11, a3, 72
400e01a4:	052ab7        	blt	a10, a11, 400e01ad <_vfiprintf_r+0x49d>
400e01a7:	112382        	l32i	a8, a3, 68
400e01aa:	000286        	j	400e01b8 <_vfiprintf_r+0x4a8>
400e01ad:	042a87        	blt	a10, a8, 400e01b5 <_vfiprintf_r+0x4a5>
400e01b0:	482c      	movi.n	a8, 36
400e01b2:	126382        	s32i	a8, a3, 72
400e01b5:	942182        	l32i	a8, a1, 0x250
400e01b8:	962132        	l32i	a3, a1, 0x258
400e01bb:	383a      	add.n	a3, a8, a3
400e01bd:	fcc332        	addi	a3, a3, -4
400e01c0:	0338      	l32i.n	a3, a3, 0
400e01c2:	9b6132        	s32i	a3, a1, 0x26c
400e01c5:	996142        	s32i	a4, a1, 0x264
400e01c8:	093d      	mov.n	a3, a9
400e01ca:	9b2192        	l32i	a9, a1, 0x26c
400e01cd:	f47c      	movi.n	a4, -1
400e01cf:	539940        	max	a9, a9, a4
400e01d2:	9b6192        	s32i	a9, a1, 0x26c
400e01d5:	ff4e46        	j	400dff12 <_vfiprintf_r+0x202>
400e01d8:	a09990        	addx4	a9, a9, a9
400e01db:	000482        	l8ui	a8, a4, 0
400e01de:	9099b0        	addx2	a9, a9, a11
400e01e1:	441b      	addi.n	a4, a4, 1
400e01e3:	996142        	s32i	a4, a1, 0x264
400e01e6:	d0c8b2        	addi	a11, a8, -48
400e01e9:	ebbab7        	bgeu	a10, a11, 400e01d8 <_vfiprintf_r+0x4c8>
400e01ec:	5399e0        	max	a9, a9, a14
400e01ef:	9b6192        	s32i	a9, a1, 0x26c
400e01f2:	9d2142        	l32i	a4, a1, 0x274
400e01f5:	ff4cc6        	j	400dff2c <_vfiprintf_r+0x21c>
400e01f8:	80a042        	movi	a4, 128
400e01fb:	0012c6        	j	400e024a <_vfiprintf_r+0x53a>
400e01fe:	040c      	movi.n	a4, 0
400e0200:	d0c882        	addi	a8, a8, -48
400e0203:	a04440        	addx4	a4, a4, a4
400e0206:	904480        	addx2	a4, a4, a8
400e0209:	992182        	l32i	a8, a1, 0x264
400e020c:	881b      	addi.n	a8, a8, 1
400e020e:	996182        	s32i	a8, a1, 0x264
400e0211:	880b      	addi.n	a8, a8, -1
400e0213:	000882        	l8ui	a8, a8, 0
400e0216:	d0c892        	addi	a9, a8, -48
400e0219:	e3ba97        	bgeu	a10, a9, 400e0200 <_vfiprintf_r+0x4f0>
400e021c:	0218c7        	beq	a8, a12, 400e0222 <_vfiprintf_r+0x512>
400e021f:	ff4246        	j	400dff2c <_vfiprintf_r+0x21c>
400e0222:	022c      	movi.n	a2, 32
400e0224:	02a247        	bge	a2, a4, 400e022a <_vfiprintf_r+0x51a>
400e0227:	06e686        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400e022a:	240b      	addi.n	a2, a4, -1
400e022c:	160c      	movi.n	a6, 1
400e022e:	ff3806        	j	400dff12 <_vfiprintf_r+0x202>
400e0231:	992192        	l32i	a9, a1, 0x264
400e0234:	68a042        	movi	a4, 104
400e0237:	000982        	l8ui	a8, a9, 0
400e023a:	0a9847        	bne	a8, a4, 400e0248 <_vfiprintf_r+0x538>
400e023d:	991b      	addi.n	a9, a9, 1
400e023f:	996192        	s32i	a9, a1, 0x264
400e0242:	00a242        	movi	a4, 0x200
400e0245:	000046        	j	400e024a <_vfiprintf_r+0x53a>
400e0248:	044c      	movi.n	a4, 64
400e024a:	205540        	or	a5, a5, a4
400e024d:	ff3046        	j	400dff12 <_vfiprintf_r+0x202>
400e0250:	992142        	l32i	a4, a1, 0x264
400e0253:	000482        	l8ui	a8, a4, 0
400e0256:	6ca042        	movi	a4, 108
400e0259:	0b9847        	bne	a8, a4, 400e0268 <_vfiprintf_r+0x558>
400e025c:	992182        	l32i	a8, a1, 0x264
400e025f:	881b      	addi.n	a8, a8, 1
400e0261:	996182        	s32i	a8, a1, 0x264
400e0264:	0001c6        	j	400e026f <_vfiprintf_r+0x55f>
400e0267:	041c00        	extui	a1, a0, 12, 1
400e026a:	fff706        	j	400e024a <_vfiprintf_r+0x53a>
400e026d:	2c0000        	lsi	f0, a0, 176
400e0270:	f54604        	lsi	f0, a6, 0x3d4
400e0273:	ff          	.byte 0xff
400e0274:	912142        	l32i	a4, a1, 0x244
400e0277:	66bc      	beqz.n	a6, 400e02b1 <_vfiprintf_r+0x5a1>
400e0279:	0ba247        	bge	a2, a4, 400e0288 <_vfiprintf_r+0x578>
400e027c:	10c192        	addi	a9, a1, 16
400e027f:	b02290        	addx8	a2, a2, a9
400e0282:	000222        	l8ui	a2, a2, 0
400e0285:	000886        	j	400e02ab <_vfiprintf_r+0x59b>
400e0288:	10c1a2        	addi	a10, a1, 16
400e028b:	30a242        	movi	a4, 0x230
400e028e:	4a4a      	add.n	a4, a10, a4
400e0290:	34a2d2        	movi	a13, 0x234
400e0293:	40a2c2        	movi	a12, 0x240
400e0296:	01daf2        	addmi	a15, a10, 0x100
400e0299:	0aed      	mov.n	a14, a10
400e029b:	dada      	add.n	a13, a10, a13
400e029d:	caca      	add.n	a12, a10, a12
400e029f:	0149      	s32i.n	a4, a1, 0
400e02a1:	02ad      	mov.n	a10, a2
400e02a3:	07bd      	mov.n	a11, a7
400e02a5:	ff57e5        	call8	400df824 <get_arg$isra$0>
400e02a8:	000a22        	l8ui	a2, a10, 0
400e02ab:	9a6132        	s32i	a3, a1, 0x268
400e02ae:	002146        	j	400e0337 <_vfiprintf_r+0x627>
400e02b1:	631b      	addi.n	a6, a3, 1
400e02b3:	10c182        	addi	a8, a1, 16
400e02b6:	9a6162        	s32i	a6, a1, 0x268
400e02b9:	b02280        	addx8	a2, a2, a8
400e02bc:	742347        	blt	a3, a4, 400e0334 <_vfiprintf_r+0x624>
400e02bf:	f21c      	movi.n	a2, 31
400e02c1:	432247        	blt	a2, a4, 400e0308 <_vfiprintf_r+0x5f8>
400e02c4:	241b      	addi.n	a2, a4, 1
400e02c6:	10c192        	addi	a9, a1, 16
400e02c9:	916122        	s32i	a2, a1, 0x244
400e02cc:	02d922        	addmi	a2, a9, 0x200
400e02cf:	122232        	l32i	a3, a2, 72
400e02d2:	861c      	movi.n	a6, 24
400e02d4:	834b      	addi.n	a8, a3, 4
400e02d6:	126282        	s32i	a8, a2, 72
400e02d9:	072687        	blt	a6, a8, 400e02e4 <_vfiprintf_r+0x5d4>
400e02dc:	112232        	l32i	a3, a2, 68
400e02df:	000306        	j	400e02ef <_vfiprintf_r+0x5df>
400e02e2:	370000        	lsi	f0, a0, 220
400e02e5:	2c0426        	beqi	a4, -1, 400e0315 <_vfiprintf_r+0x605>
400e02e8:	623243        	lsi	f4, a2, 0x188
400e02eb:	213212        	lsi	f1, a2, 132
400e02ee:	212294        	lsi	f9, a2, 132
400e02f1:	c1a296        	bltz	a2, 400dff0f <_vfiprintf_r+0x1ff>
400e02f4:	232a10        	sext	a2, a10, 8
400e02f7:	fcc222        	addi	a2, a2, -4
400e02fa:	0228      	l32i.n	a2, a2, 0
400e02fc:	b044a0        	addx8	a4, a4, a10
400e02ff:	0429      	s32i.n	a2, a4, 0
400e0301:	742020        	extui	a2, a2, 0, 8
400e0304:	000bc6        	j	400e0337 <_vfiprintf_r+0x627>
400e0307:	c1b200        	mul16u	a11, a2, a0
400e030a:	db2210        	movt.s	f2, f2, b1
400e030d:	223202        	lsi	f0, a2, 136
400e0310:	841c12        	l16ui	a1, a12, 0x108
400e0313:	634b      	addi.n	a6, a3, 4
400e0315:	126262        	s32i	a6, a2, 72
400e0318:	052467        	blt	a4, a6, 400e0321 <_vfiprintf_r+0x611>
400e031b:	112232        	l32i	a3, a2, 68
400e031e:	000286        	j	400e032c <_vfiprintf_r+0x61c>
400e0321:	042437        	blt	a4, a3, 400e0329 <_vfiprintf_r+0x619>
400e0324:	432c      	movi.n	a3, 36
400e0326:	126232        	s32i	a3, a2, 72
400e0329:	942132        	l32i	a3, a1, 0x250
400e032c:	962122        	l32i	a2, a1, 0x258
400e032f:	232a      	add.n	a2, a3, a2
400e0331:	fcc222        	addi	a2, a2, -4
400e0334:	000222        	l8ui	a2, a2, 0
400e0337:	10c142        	addi	a4, a1, 16
400e033a:	01d432        	addmi	a3, a4, 0x100
400e033d:	804322        	s8i	a2, a3, 128
400e0340:	160c      	movi.n	a6, 1
400e0342:	02d422        	addmi	a2, a4, 0x200
400e0345:	030c      	movi.n	a3, 0
400e0347:	90a182        	movi	a8, 0x190
400e034a:	3a4232        	s8i	a3, a2, 58
400e034d:	9b6162        	s32i	a6, a1, 0x26c
400e0350:	020c      	movi.n	a2, 0
400e0352:	718a      	add.n	a7, a1, a8
400e0354:	059c06        	j	400e19c8 <_vfiprintf_r+0x1cb8>
400e0357:	041c00        	extui	a1, a0, 12, 1
400e035a:	205540        	or	a5, a5, a4
400e035d:	02e557        	bbsi	a5, 5, 400e0363 <_vfiprintf_r+0x653>
400e0360:	003606        	j	400e043c <_vfiprintf_r+0x72c>
400e0363:	912182        	l32i	a8, a1, 0x244
400e0366:	86bc      	beqz.n	a6, 400e03a2 <_vfiprintf_r+0x692>
400e0368:	0ca287        	bge	a2, a8, 400e0378 <_vfiprintf_r+0x668>
400e036b:	10c192        	addi	a9, a1, 16
400e036e:	b02290        	addx8	a2, a2, a9
400e0371:	02e8      	l32i.n	a14, a2, 0
400e0373:	1248      	l32i.n	a4, a2, 4
400e0375:	0008c6        	j	400e039c <_vfiprintf_r+0x68c>
400e0378:	10c1a2        	addi	a10, a1, 16
400e037b:	30a242        	movi	a4, 0x230
400e037e:	4a4a      	add.n	a4, a10, a4
400e0380:	34a2d2        	movi	a13, 0x234
400e0383:	40a2c2        	movi	a12, 0x240
400e0386:	0aed      	mov.n	a14, a10
400e0388:	0149      	s32i.n	a4, a1, 0
400e038a:	01daf2        	addmi	a15, a10, 0x100
400e038d:	dada      	add.n	a13, a10, a13
400e038f:	caca      	add.n	a12, a10, a12
400e0391:	07bd      	mov.n	a11, a7
400e0393:	02ad      	mov.n	a10, a2
400e0395:	ff48e5        	call8	400df824 <get_arg$isra$0>
400e0398:	0ae8      	l32i.n	a14, a10, 0
400e039a:	1a48      	l32i.n	a4, a10, 4
400e039c:	9a6132        	s32i	a3, a1, 0x268
400e039f:	00bb86        	j	400e0691 <_vfiprintf_r+0x981>
400e03a2:	431b      	addi.n	a4, a3, 1
400e03a4:	10c162        	addi	a6, a1, 16
400e03a7:	9a6142        	s32i	a4, a1, 0x268
400e03aa:	b02260        	addx8	a2, a2, a6
400e03ad:	02a387        	bge	a3, a8, 400e03b3 <_vfiprintf_r+0x6a3>
400e03b0:	002006        	j	400e0434 <_vfiprintf_r+0x724>
400e03b3:	f21c      	movi.n	a2, 31
400e03b5:	482287        	blt	a2, a8, 400e0401 <_vfiprintf_r+0x6f1>
400e03b8:	281b      	addi.n	a2, a8, 1
400e03ba:	10c192        	addi	a9, a1, 16
400e03bd:	916122        	s32i	a2, a1, 0x244
400e03c0:	02d922        	addmi	a2, a9, 0x200
400e03c3:	122232        	l32i	a3, a2, 72
400e03c6:	437b      	addi.n	a4, a3, 7
400e03c8:	837c      	movi.n	a3, -8
400e03ca:	103430        	and	a3, a4, a3
400e03cd:	638b      	addi.n	a6, a3, 8
400e03cf:	126262        	s32i	a6, a2, 72
400e03d2:	841c      	movi.n	a4, 24
400e03d4:	052467        	blt	a4, a6, 400e03dd <_vfiprintf_r+0x6cd>
400e03d7:	112232        	l32i	a3, a2, 68
400e03da:	000286        	j	400e03e8 <_vfiprintf_r+0x6d8>
400e03dd:	042437        	blt	a4, a3, 400e03e5 <_vfiprintf_r+0x6d5>
400e03e0:	832c      	movi.n	a3, 40
400e03e2:	126232        	s32i	a3, a2, 72
400e03e5:	942132        	l32i	a3, a1, 0x250
400e03e8:	962122        	l32i	a2, a1, 0x258
400e03eb:	10c1a2        	addi	a10, a1, 16
400e03ee:	232a      	add.n	a2, a3, a2
400e03f0:	f8c222        	addi	a2, a2, -8
400e03f3:	02e8      	l32i.n	a14, a2, 0
400e03f5:	1248      	l32i.n	a4, a2, 4
400e03f7:	b028a0        	addx8	a2, a8, a10
400e03fa:	02e9      	s32i.n	a14, a2, 0
400e03fc:	1249      	s32i.n	a4, a2, 4
400e03fe:	00a3c6        	j	400e0691 <_vfiprintf_r+0x981>
400e0401:	10c1b2        	addi	a11, a1, 16
400e0404:	02db22        	addmi	a2, a11, 0x200
400e0407:	122232        	l32i	a3, a2, 72
400e040a:	437b      	addi.n	a4, a3, 7
400e040c:	837c      	movi.n	a3, -8
400e040e:	103430        	and	a3, a4, a3
400e0411:	638b      	addi.n	a6, a3, 8
400e0413:	126262        	s32i	a6, a2, 72
400e0416:	841c      	movi.n	a4, 24
400e0418:	052467        	blt	a4, a6, 400e0421 <_vfiprintf_r+0x711>
400e041b:	112232        	l32i	a3, a2, 68
400e041e:	000286        	j	400e042c <_vfiprintf_r+0x71c>
400e0421:	042437        	blt	a4, a3, 400e0429 <_vfiprintf_r+0x719>
400e0424:	832c      	movi.n	a3, 40
400e0426:	126232        	s32i	a3, a2, 72
400e0429:	942132        	l32i	a3, a1, 0x250
400e042c:	962122        	l32i	a2, a1, 0x258
400e042f:	232a      	add.n	a2, a3, a2
400e0431:	f8c222        	addi	a2, a2, -8
400e0434:	02e8      	l32i.n	a14, a2, 0
400e0436:	1248      	l32i.n	a4, a2, 4
400e0438:	009546        	j	400e0691 <_vfiprintf_r+0x981>
400e043b:	214200        	srai	a4, a0, 2
400e043e:	654791        	l32r	a9, 400b995c <_iram_end+0x2be08>
400e0441:	63c602        	addi	a0, a6, 99
400e0444:	e56700        	extui	a6, a0, 23, 15
400e0447:	2f8602        	lsi	f0, a6, 188
400e044a:	36bc00        	lsi	f0, a12, 216
400e044d:	0ba247        	bge	a2, a4, 400e045c <_vfiprintf_r+0x74c>
400e0450:	10c142        	addi	a4, a1, 16
400e0453:	b02240        	addx8	a2, a2, a4
400e0456:	0092e2        	l16si	a14, a2, 0
400e0459:	006a86        	j	400e0607 <_vfiprintf_r+0x8f7>
400e045c:	10c162        	addi	a6, a1, 16
400e045f:	30a242        	movi	a4, 0x230
400e0462:	464a      	add.n	a4, a6, a4
400e0464:	34a2d2        	movi	a13, 0x234
400e0467:	40a2c2        	movi	a12, 0x240
400e046a:	06ed      	mov.n	a14, a6
400e046c:	0149      	s32i.n	a4, a1, 0
400e046e:	01d6f2        	addmi	a15, a6, 0x100
400e0471:	d6da      	add.n	a13, a6, a13
400e0473:	c6ca      	add.n	a12, a6, a12
400e0475:	07bd      	mov.n	a11, a7
400e0477:	02ad      	mov.n	a10, a2
400e0479:	ff3aa5        	call8	400df824 <get_arg$isra$0>
400e047c:	009ae2        	l16si	a14, a10, 0
400e047f:	006106        	j	400e0607 <_vfiprintf_r+0x8f7>
400e0482:	831b      	addi.n	a8, a3, 1
400e0484:	10c192        	addi	a9, a1, 16
400e0487:	9a6182        	s32i	a8, a1, 0x268
400e048a:	b02290        	addx8	a2, a2, a9
400e048d:	732347        	blt	a3, a4, 400e0504 <_vfiprintf_r+0x7f4>
400e0490:	f21c      	movi.n	a2, 31
400e0492:	422247        	blt	a2, a4, 400e04d8 <_vfiprintf_r+0x7c8>
400e0495:	241b      	addi.n	a2, a4, 1
400e0497:	10c1a2        	addi	a10, a1, 16
400e049a:	916122        	s32i	a2, a1, 0x244
400e049d:	02da22        	addmi	a2, a10, 0x200
400e04a0:	122232        	l32i	a3, a2, 72
400e04a3:	861c      	movi.n	a6, 24
400e04a5:	834b      	addi.n	a8, a3, 4
400e04a7:	126282        	s32i	a8, a2, 72
400e04aa:	062687        	blt	a6, a8, 400e04b4 <_vfiprintf_r+0x7a4>
400e04ad:	112232        	l32i	a3, a2, 68
400e04b0:	0002c6        	j	400e04bf <_vfiprintf_r+0x7af>
400e04b3:	263700        	lsi	f0, a7, 152
400e04b6:	432c04        	lsi	f0, a12, 0x10c
400e04b9:	126232        	s32i	a3, a2, 72
400e04bc:	942132        	l32i	a3, a1, 0x250
400e04bf:	962122        	l32i	a2, a1, 0x258
400e04c2:	10c1b2        	addi	a11, a1, 16
400e04c5:	232a      	add.n	a2, a3, a2
400e04c7:	fcc222        	addi	a2, a2, -4
400e04ca:	02e8      	l32i.n	a14, a2, 0
400e04cc:	b044b0        	addx8	a4, a4, a11
400e04cf:	04e9      	s32i.n	a14, a4, 0
400e04d1:	23ee80        	sext	a14, a14, 15
400e04d4:	006d86        	j	400e068e <_vfiprintf_r+0x97e>
400e04d7:	c13200        	mul16u	a3, a2, a0
400e04da:	d32210        	movt	a2, a2, b1
400e04dd:	223202        	lsi	f0, a2, 136
400e04e0:	841c12        	l16ui	a1, a12, 0x108
400e04e3:	634b      	addi.n	a6, a3, 4
400e04e5:	126262        	s32i	a6, a2, 72
400e04e8:	052467        	blt	a4, a6, 400e04f1 <_vfiprintf_r+0x7e1>
400e04eb:	112232        	l32i	a3, a2, 68
400e04ee:	000286        	j	400e04fc <_vfiprintf_r+0x7ec>
400e04f1:	042437        	blt	a4, a3, 400e04f9 <_vfiprintf_r+0x7e9>
400e04f4:	432c      	movi.n	a3, 36
400e04f6:	126232        	s32i	a3, a2, 72
400e04f9:	942132        	l32i	a3, a1, 0x250
400e04fc:	962122        	l32i	a2, a1, 0x258
400e04ff:	232a      	add.n	a2, a3, a2
400e0501:	fcc222        	addi	a2, a2, -4
400e0504:	0092e2        	l16si	a14, a2, 0
400e0507:	0060c6        	j	400e068e <_vfiprintf_r+0x97e>
400e050a:	02e597        	bbsi	a5, 9, 400e0510 <_vfiprintf_r+0x800>
400e050d:	003106        	j	400e05d5 <_vfiprintf_r+0x8c5>
400e0510:	66bc      	beqz.n	a6, 400e054a <_vfiprintf_r+0x83a>
400e0512:	0ba247        	bge	a2, a4, 400e0521 <_vfiprintf_r+0x811>
400e0515:	10c142        	addi	a4, a1, 16
400e0518:	b02240        	addx8	a2, a2, a4
400e051b:	0002e2        	l8ui	a14, a2, 0
400e051e:	000886        	j	400e0544 <_vfiprintf_r+0x834>
400e0521:	10c162        	addi	a6, a1, 16
400e0524:	30a242        	movi	a4, 0x230
400e0527:	464a      	add.n	a4, a6, a4
400e0529:	34a2d2        	movi	a13, 0x234
400e052c:	40a2c2        	movi	a12, 0x240
400e052f:	06ed      	mov.n	a14, a6
400e0531:	0149      	s32i.n	a4, a1, 0
400e0533:	01d6f2        	addmi	a15, a6, 0x100
400e0536:	d6da      	add.n	a13, a6, a13
400e0538:	c6ca      	add.n	a12, a6, a12
400e053a:	07bd      	mov.n	a11, a7
400e053c:	02ad      	mov.n	a10, a2
400e053e:	ff2e65        	call8	400df824 <get_arg$isra$0>
400e0541:	000ae2        	l8ui	a14, a10, 0
400e0544:	9a6132        	s32i	a3, a1, 0x268
400e0547:	002106        	j	400e05cf <_vfiprintf_r+0x8bf>
400e054a:	831b      	addi.n	a8, a3, 1
400e054c:	10c192        	addi	a9, a1, 16
400e054f:	9a6182        	s32i	a8, a1, 0x268
400e0552:	b02290        	addx8	a2, a2, a9
400e0555:	732347        	blt	a3, a4, 400e05cc <_vfiprintf_r+0x8bc>
400e0558:	f21c      	movi.n	a2, 31
400e055a:	422247        	blt	a2, a4, 400e05a0 <_vfiprintf_r+0x890>
400e055d:	241b      	addi.n	a2, a4, 1
400e055f:	10c1a2        	addi	a10, a1, 16
400e0562:	916122        	s32i	a2, a1, 0x244
400e0565:	02da22        	addmi	a2, a10, 0x200
400e0568:	122232        	l32i	a3, a2, 72
400e056b:	861c      	movi.n	a6, 24
400e056d:	834b      	addi.n	a8, a3, 4
400e056f:	126282        	s32i	a8, a2, 72
400e0572:	062687        	blt	a6, a8, 400e057c <_vfiprintf_r+0x86c>
400e0575:	112232        	l32i	a3, a2, 68
400e0578:	0002c6        	j	400e0587 <_vfiprintf_r+0x877>
400e057b:	263700        	lsi	f0, a7, 152
400e057e:	432c04        	lsi	f0, a12, 0x10c
400e0581:	126232        	s32i	a3, a2, 72
400e0584:	942132        	l32i	a3, a1, 0x250
400e0587:	962122        	l32i	a2, a1, 0x258
400e058a:	10c1b2        	addi	a11, a1, 16
400e058d:	232a      	add.n	a2, a3, a2
400e058f:	fcc222        	addi	a2, a2, -4
400e0592:	02e8      	l32i.n	a14, a2, 0
400e0594:	b044b0        	addx8	a4, a4, a11
400e0597:	04e9      	s32i.n	a14, a4, 0
400e0599:	74e0e0        	extui	a14, a14, 0, 8
400e059c:	000bc6        	j	400e05cf <_vfiprintf_r+0x8bf>
400e059f:	c13200        	mul16u	a3, a2, a0
400e05a2:	d32210        	movt	a2, a2, b1
400e05a5:	223202        	lsi	f0, a2, 136
400e05a8:	841c12        	l16ui	a1, a12, 0x108
400e05ab:	634b      	addi.n	a6, a3, 4
400e05ad:	126262        	s32i	a6, a2, 72
400e05b0:	052467        	blt	a4, a6, 400e05b9 <_vfiprintf_r+0x8a9>
400e05b3:	112232        	l32i	a3, a2, 68
400e05b6:	000286        	j	400e05c4 <_vfiprintf_r+0x8b4>
400e05b9:	042437        	blt	a4, a3, 400e05c1 <_vfiprintf_r+0x8b1>
400e05bc:	432c      	movi.n	a3, 36
400e05be:	126232        	s32i	a3, a2, 72
400e05c1:	942132        	l32i	a3, a1, 0x250
400e05c4:	962122        	l32i	a2, a1, 0x258
400e05c7:	232a      	add.n	a2, a3, a2
400e05c9:	fcc222        	addi	a2, a2, -4
400e05cc:	0002e2        	l8ui	a14, a2, 0
400e05cf:	23ee00        	sext	a14, a14, 7
400e05d2:	002e06        	j	400e068e <_vfiprintf_r+0x97e>
400e05d5:	46bc      	beqz.n	a6, 400e060d <_vfiprintf_r+0x8fd>
400e05d7:	0aa247        	bge	a2, a4, 400e05e5 <_vfiprintf_r+0x8d5>
400e05da:	10c142        	addi	a4, a1, 16
400e05dd:	b02240        	addx8	a2, a2, a4
400e05e0:	02e8      	l32i.n	a14, a2, 0
400e05e2:	000846        	j	400e0607 <_vfiprintf_r+0x8f7>
400e05e5:	10c162        	addi	a6, a1, 16
400e05e8:	30a242        	movi	a4, 0x230
400e05eb:	464a      	add.n	a4, a6, a4
400e05ed:	34a2d2        	movi	a13, 0x234
400e05f0:	40a2c2        	movi	a12, 0x240
400e05f3:	06ed      	mov.n	a14, a6
400e05f5:	0149      	s32i.n	a4, a1, 0
400e05f7:	01d6f2        	addmi	a15, a6, 0x100
400e05fa:	d6da      	add.n	a13, a6, a13
400e05fc:	c6ca      	add.n	a12, a6, a12
400e05fe:	07bd      	mov.n	a11, a7
400e0600:	02ad      	mov.n	a10, a2
400e0602:	ff2225        	call8	400df824 <get_arg$isra$0>
400e0605:	0ae8      	l32i.n	a14, a10, 0
400e0607:	9a6132        	s32i	a3, a1, 0x268
400e060a:	002006        	j	400e068e <_vfiprintf_r+0x97e>
400e060d:	831b      	addi.n	a8, a3, 1
400e060f:	10c192        	addi	a9, a1, 16
400e0612:	9a6182        	s32i	a8, a1, 0x268
400e0615:	b02290        	addx8	a2, a2, a9
400e0618:	702347        	blt	a3, a4, 400e068c <_vfiprintf_r+0x97c>
400e061b:	f21c      	movi.n	a2, 31
400e061d:	3f2247        	blt	a2, a4, 400e0660 <_vfiprintf_r+0x950>
400e0620:	241b      	addi.n	a2, a4, 1
400e0622:	10c1a2        	addi	a10, a1, 16
400e0625:	916122        	s32i	a2, a1, 0x244
400e0628:	02da22        	addmi	a2, a10, 0x200
400e062b:	122232        	l32i	a3, a2, 72
400e062e:	861c      	movi.n	a6, 24
400e0630:	834b      	addi.n	a8, a3, 4
400e0632:	126282        	s32i	a8, a2, 72
400e0635:	072687        	blt	a6, a8, 400e0640 <_vfiprintf_r+0x930>
400e0638:	112232        	l32i	a3, a2, 68
400e063b:	000306        	j	400e064b <_vfiprintf_r+0x93b>
400e063e:	370000        	lsi	f0, a0, 220
400e0641:	2c0426        	beqi	a4, -1, 400e0671 <_vfiprintf_r+0x961>
400e0644:	623243        	lsi	f4, a2, 0x188
400e0647:	213212        	lsi	f1, a2, 132
400e064a:	212294        	lsi	f9, a2, 132
400e064d:	c1b296        	bltz	a2, 400e026c <_vfiprintf_r+0x55c>
400e0650:	232a10        	sext	a2, a10, 8
400e0653:	fcc222        	addi	a2, a2, -4
400e0656:	02e8      	l32i.n	a14, a2, 0
400e0658:	b044b0        	addx8	a4, a4, a11
400e065b:	04e9      	s32i.n	a14, a4, 0
400e065d:	000b46        	j	400e068e <_vfiprintf_r+0x97e>
400e0660:	10c132        	addi	a3, a1, 16
400e0663:	02d322        	addmi	a2, a3, 0x200
400e0666:	122232        	l32i	a3, a2, 72
400e0669:	841c      	movi.n	a4, 24
400e066b:	634b      	addi.n	a6, a3, 4
400e066d:	126262        	s32i	a6, a2, 72
400e0670:	052467        	blt	a4, a6, 400e0679 <_vfiprintf_r+0x969>
400e0673:	112232        	l32i	a3, a2, 68
400e0676:	000286        	j	400e0684 <_vfiprintf_r+0x974>
400e0679:	042437        	blt	a4, a3, 400e0681 <_vfiprintf_r+0x971>
400e067c:	432c      	movi.n	a3, 36
400e067e:	126232        	s32i	a3, a2, 72
400e0681:	942132        	l32i	a3, a1, 0x250
400e0684:	962122        	l32i	a2, a1, 0x258
400e0687:	232a      	add.n	a2, a3, a2
400e0689:	fcc222        	addi	a2, a2, -4
400e068c:	02e8      	l32i.n	a14, a2, 0
400e068e:	314fe0        	srai	a4, a14, 31
400e0691:	120c      	movi.n	a2, 1
400e0693:	002496        	bltz	a4, 400e0699 <_vfiprintf_r+0x989>
400e0696:	045e86        	j	400e1814 <_vfiprintf_r+0x1b04>
400e0699:	60e0e0        	neg	a14, a14
400e069c:	030c      	movi.n	a3, 0
400e069e:	9332e0        	movnez	a3, a2, a14
400e06a1:	604040        	neg	a4, a4
400e06a4:	10c182        	addi	a8, a1, 16
400e06a7:	c04430        	sub	a4, a4, a3
400e06aa:	d62c      	movi.n	a6, 45
400e06ac:	02d832        	addmi	a3, a8, 0x200
400e06af:	3a4362        	s8i	a6, a3, 58
400e06b2:	045786        	j	400e1814 <_vfiprintf_r+0x1b04>
400e06b5:	420000        	xorb	b0, b0, b0
400e06b8:	579121        	l32r	a2, 400b64fc <_iram_end+0x289a8>
400e06bb:	c602e5        	call8	400a66e8 <_iram_end+0x18b94>
400e06be:	bc0030        	lsi	f3, a0, 0x2f0
400e06c1:	a24746        	j	400c8fe2 <_rtc_text_end+0x8fe2>
400e06c4:	920a      	add.n	a9, a2, a0
400e06c6:	9010c1        	l32r	a12, 400c4708 <_rtc_text_end+0x4708>
400e06c9:	28b022        	l32ai	a2, a0, 160
400e06cc:	084602        	s8i	a0, a6, 8
400e06cf:	c1a200        	mul16u	a10, a2, a0
400e06d2:	a24210        	muluh	a4, a2, a1
400e06d5:	4a4a30        	madd.s	f4, f10, f3
400e06d8:	34a2d2        	movi	a13, 0x234
400e06db:	40a2c2        	movi	a12, 0x240
400e06de:	01daf2        	addmi	a15, a10, 0x100
400e06e1:	0aed      	mov.n	a14, a10
400e06e3:	dada      	add.n	a13, a10, a13
400e06e5:	caca      	add.n	a12, a10, a12
400e06e7:	0149      	s32i.n	a4, a1, 0
400e06e9:	02ad      	mov.n	a10, a2
400e06eb:	07bd      	mov.n	a11, a7
400e06ed:	ff1365        	call8	400df824 <get_arg$isra$0>
400e06f0:	0a28      	l32i.n	a2, a10, 0
400e06f2:	035d      	mov.n	a5, a3
400e06f4:	001f86        	j	400e0776 <_vfiprintf_r+0xa66>
400e06f7:	c1b200        	mul16u	a11, a2, a0
400e06fa:	531b10        	max	a1, a11, a1
400e06fd:	b022b0        	addx8	a2, a2, a11
400e0700:	702347        	blt	a3, a4, 400e0774 <_vfiprintf_r+0xa64>
400e0703:	f21c      	movi.n	a2, 31
400e0705:	3f2247        	blt	a2, a4, 400e0748 <_vfiprintf_r+0xa38>
400e0708:	241b      	addi.n	a2, a4, 1
400e070a:	10c132        	addi	a3, a1, 16
400e070d:	916122        	s32i	a2, a1, 0x244
400e0710:	02d322        	addmi	a2, a3, 0x200
400e0713:	122232        	l32i	a3, a2, 72
400e0716:	861c      	movi.n	a6, 24
400e0718:	734b      	addi.n	a7, a3, 4
400e071a:	126272        	s32i	a7, a2, 72
400e071d:	072677        	blt	a6, a7, 400e0728 <_vfiprintf_r+0xa18>
400e0720:	112232        	l32i	a3, a2, 68
400e0723:	000306        	j	400e0733 <_vfiprintf_r+0xa23>
400e0726:	370000        	lsi	f0, a0, 220
400e0729:	2c0426        	beqi	a4, -1, 400e0759 <_vfiprintf_r+0xa49>
400e072c:	623243        	lsi	f4, a2, 0x188
400e072f:	213212        	lsi	f1, a2, 132
400e0732:	212294        	lsi	f9, a2, 132
400e0735:	c16296        	bltz	a2, 400e034f <_vfiprintf_r+0x63f>
400e0738:	232a10        	sext	a2, a10, 8
400e073b:	fcc222        	addi	a2, a2, -4
400e073e:	0228      	l32i.n	a2, a2, 0
400e0740:	b03460        	addx8	a3, a4, a6
400e0743:	0329      	s32i.n	a2, a3, 0
400e0745:	000b46        	j	400e0776 <_vfiprintf_r+0xa66>
400e0748:	10c182        	addi	a8, a1, 16
400e074b:	02d822        	addmi	a2, a8, 0x200
400e074e:	122232        	l32i	a3, a2, 72
400e0751:	841c      	movi.n	a4, 24
400e0753:	634b      	addi.n	a6, a3, 4
400e0755:	126262        	s32i	a6, a2, 72
400e0758:	052467        	blt	a4, a6, 400e0761 <_vfiprintf_r+0xa51>
400e075b:	112232        	l32i	a3, a2, 68
400e075e:	000286        	j	400e076c <_vfiprintf_r+0xa5c>
400e0761:	042437        	blt	a4, a3, 400e0769 <_vfiprintf_r+0xa59>
400e0764:	432c      	movi.n	a3, 36
400e0766:	126232        	s32i	a3, a2, 72
400e0769:	942132        	l32i	a3, a1, 0x250
400e076c:	962122        	l32i	a2, a1, 0x258
400e076f:	232a      	add.n	a2, a3, a2
400e0771:	fcc222        	addi	a2, a2, -4
400e0774:	0228      	l32i.n	a2, a2, 0
400e0776:	9e2192        	l32i	a9, a1, 0x278
400e0779:	313f90        	srai	a3, a9, 31
400e077c:	0299      	s32i.n	a9, a2, 0
400e077e:	1239      	s32i.n	a3, a2, 4
400e0780:	00c4c6        	j	400e0a97 <_vfiprintf_r+0xd87>
400e0783:	e54700        	extui	a4, a0, 23, 15
400e0786:	308602        	lsi	f0, a6, 192
400e0789:	66bc00        	lsi	f0, a12, 0x198
400e078c:	0ca247        	bge	a2, a4, 400e079c <_vfiprintf_r+0xa8c>
400e078f:	10c1a2        	addi	a10, a1, 16
400e0792:	b022a0        	addx8	a2, a2, a10
400e0795:	0258      	l32i.n	a5, a2, 0
400e0797:	0008c6        	j	400e07be <_vfiprintf_r+0xaae>
400e079a:	b20000        	mulsh	a0, a0, a0
400e079d:	4210c1        	l32r	a12, 400b0fe0 <_iram_end+0x2348c>
400e07a0:	4a30a2        	lsi	f10, a0, 0x128
400e07a3:	d24b      	addi.n	a13, a2, 4
400e07a5:	c234a2        	lsi	f10, a4, 0x308
400e07a8:	f240a2        	s8i	a10, a0, 242
400e07ab:	01db      	addi.n	a0, a1, 13
400e07ad:	0bed      	mov.n	a14, a11
400e07af:	dbda      	add.n	a13, a11, a13
400e07b1:	cbca      	add.n	a12, a11, a12
400e07b3:	0149      	s32i.n	a4, a1, 0
400e07b5:	07bd      	mov.n	a11, a7
400e07b7:	02ad      	mov.n	a10, a2
400e07b9:	ff06a5        	call8	400df824 <get_arg$isra$0>
400e07bc:	0a58      	l32i.n	a5, a10, 0
400e07be:	036d      	mov.n	a6, a3
400e07c0:	002046        	j	400e0845 <_vfiprintf_r+0xb35>
400e07c3:	631b00        	minu	a1, a11, a0
400e07c6:	08a347        	bge	a3, a4, 400e07d2 <_vfiprintf_r+0xac2>
400e07c9:	10c132        	addi	a3, a1, 16
400e07cc:	b02230        	addx8	a2, a2, a3
400e07cf:	001c06        	j	400e0843 <_vfiprintf_r+0xb33>
400e07d2:	f21c      	movi.n	a2, 31
400e07d4:	3d2247        	blt	a2, a4, 400e0815 <_vfiprintf_r+0xb05>
400e07d7:	241b      	addi.n	a2, a4, 1
400e07d9:	10c152        	addi	a5, a1, 16
400e07dc:	916122        	s32i	a2, a1, 0x244
400e07df:	02d522        	addmi	a2, a5, 0x200
400e07e2:	122232        	l32i	a3, a2, 72
400e07e5:	851c      	movi.n	a5, 24
400e07e7:	734b      	addi.n	a7, a3, 4
400e07e9:	126272        	s32i	a7, a2, 72
400e07ec:	052577        	blt	a5, a7, 400e07f5 <_vfiprintf_r+0xae5>
400e07ef:	112232        	l32i	a3, a2, 68
400e07f2:	000286        	j	400e0800 <_vfiprintf_r+0xaf0>
400e07f5:	042537        	blt	a5, a3, 400e07fd <_vfiprintf_r+0xaed>
400e07f8:	432c      	movi.n	a3, 36
400e07fa:	126232        	s32i	a3, a2, 72
400e07fd:	942132        	l32i	a3, a1, 0x250
400e0800:	962122        	l32i	a2, a1, 0x258
400e0803:	10c182        	addi	a8, a1, 16
400e0806:	232a      	add.n	a2, a3, a2
400e0808:	fcc222        	addi	a2, a2, -4
400e080b:	0258      	l32i.n	a5, a2, 0
400e080d:	b02480        	addx8	a2, a4, a8
400e0810:	0259      	s32i.n	a5, a2, 0
400e0812:	000bc6        	j	400e0845 <_vfiprintf_r+0xb35>
400e0815:	10c192        	addi	a9, a1, 16
400e0818:	02d922        	addmi	a2, a9, 0x200
400e081b:	122232        	l32i	a3, a2, 72
400e081e:	841c      	movi.n	a4, 24
400e0820:	534b      	addi.n	a5, a3, 4
400e0822:	126252        	s32i	a5, a2, 72
400e0825:	072457        	blt	a4, a5, 400e0830 <_vfiprintf_r+0xb20>
400e0828:	112232        	l32i	a3, a2, 68
400e082b:	000306        	j	400e083b <_vfiprintf_r+0xb2b>
400e082e:	370000        	lsi	f0, a0, 220
400e0831:	2c0424        	lsi	f2, a4, 176
400e0834:	623243        	lsi	f4, a2, 0x188
400e0837:	213212        	lsi	f1, a2, 132
400e083a:	212294        	lsi	f9, a2, 132
400e083d:	232a96        	bltz	a10, 400e0a73 <_vfiprintf_r+0xd63>
400e0840:	fcc222        	addi	a2, a2, -4
400e0843:	0258      	l32i.n	a5, a2, 0
400e0845:	9e2122        	l32i	a2, a1, 0x278
400e0848:	0529      	s32i.n	a2, a5, 0
400e084a:	003086        	j	400e0910 <_vfiprintf_r+0xc00>
400e084d:	02e567        	bbsi	a5, 6, 400e0853 <_vfiprintf_r+0xb43>
400e0850:	003046        	j	400e0915 <_vfiprintf_r+0xc05>
400e0853:	56bc      	beqz.n	a6, 400e088c <_vfiprintf_r+0xb7c>
400e0855:	0ba247        	bge	a2, a4, 400e0864 <_vfiprintf_r+0xb54>
400e0858:	10c142        	addi	a4, a1, 16
400e085b:	b02240        	addx8	a2, a2, a4
400e085e:	0258      	l32i.n	a5, a2, 0
400e0860:	000886        	j	400e0886 <_vfiprintf_r+0xb76>
400e0863:	c15200        	mul16u	a5, a2, a0
400e0866:	a24210        	muluh	a4, a2, a1
400e0869:	454a30        	extui	a4, a3, 26, 5
400e086c:	34a2d2        	movi	a13, 0x234
400e086f:	40a2c2        	movi	a12, 0x240
400e0872:	01d5f2        	addmi	a15, a5, 0x100
400e0875:	05ed      	mov.n	a14, a5
400e0877:	d5da      	add.n	a13, a5, a13
400e0879:	c5ca      	add.n	a12, a5, a12
400e087b:	0149      	s32i.n	a4, a1, 0
400e087d:	07bd      	mov.n	a11, a7
400e087f:	02ad      	mov.n	a10, a2
400e0881:	fefa25        	call8	400df824 <get_arg$isra$0>
400e0884:	0a58      	l32i.n	a5, a10, 0
400e0886:	036d      	mov.n	a6, a3
400e0888:	001f86        	j	400e090a <_vfiprintf_r+0xbfa>
400e088b:	c18200        	mul16u	a8, a2, a0
400e088e:	631b10        	minu	a1, a11, a1
400e0891:	b02280        	addx8	a2, a2, a8
400e0894:	702347        	blt	a3, a4, 400e0908 <_vfiprintf_r+0xbf8>
400e0897:	f21c      	movi.n	a2, 31
400e0899:	3f2247        	blt	a2, a4, 400e08dc <_vfiprintf_r+0xbcc>
400e089c:	241b      	addi.n	a2, a4, 1
400e089e:	10c192        	addi	a9, a1, 16
400e08a1:	916122        	s32i	a2, a1, 0x244
400e08a4:	02d922        	addmi	a2, a9, 0x200
400e08a7:	122232        	l32i	a3, a2, 72
400e08aa:	851c      	movi.n	a5, 24
400e08ac:	734b      	addi.n	a7, a3, 4
400e08ae:	126272        	s32i	a7, a2, 72
400e08b1:	072577        	blt	a5, a7, 400e08bc <_vfiprintf_r+0xbac>
400e08b4:	112232        	l32i	a3, a2, 68
400e08b7:	000306        	j	400e08c7 <_vfiprintf_r+0xbb7>
400e08ba:	370000        	lsi	f0, a0, 220
400e08bd:	2c0425        	call8	4010c900 <_etext+0x20023>
400e08c0:	623243        	lsi	f4, a2, 0x188
400e08c3:	213212        	lsi	f1, a2, 132
400e08c6:	212294        	lsi	f9, a2, 132
400e08c9:	c1a296        	bltz	a2, 400e04e7 <_vfiprintf_r+0x7d7>
400e08cc:	232a10        	sext	a2, a10, 8
400e08cf:	fcc222        	addi	a2, a2, -4
400e08d2:	0258      	l32i.n	a5, a2, 0
400e08d4:	b024a0        	addx8	a2, a4, a10
400e08d7:	0259      	s32i.n	a5, a2, 0
400e08d9:	000b46        	j	400e090a <_vfiprintf_r+0xbfa>
400e08dc:	10c1b2        	addi	a11, a1, 16
400e08df:	02db22        	addmi	a2, a11, 0x200
400e08e2:	122232        	l32i	a3, a2, 72
400e08e5:	841c      	movi.n	a4, 24
400e08e7:	534b      	addi.n	a5, a3, 4
400e08e9:	126252        	s32i	a5, a2, 72
400e08ec:	052457        	blt	a4, a5, 400e08f5 <_vfiprintf_r+0xbe5>
400e08ef:	112232        	l32i	a3, a2, 68
400e08f2:	000286        	j	400e0900 <_vfiprintf_r+0xbf0>
400e08f5:	042437        	blt	a4, a3, 400e08fd <_vfiprintf_r+0xbed>
400e08f8:	432c      	movi.n	a3, 36
400e08fa:	126232        	s32i	a3, a2, 72
400e08fd:	942132        	l32i	a3, a1, 0x250
400e0900:	962122        	l32i	a2, a1, 0x258
400e0903:	232a      	add.n	a2, a3, a2
400e0905:	fcc222        	addi	a2, a2, -4
400e0908:	0258      	l32i.n	a5, a2, 0
400e090a:	9e2122        	l32i	a2, a1, 0x278
400e090d:	005522        	s16i	a2, a5, 0
400e0910:	062d      	mov.n	a2, a6
400e0912:	fd5446        	j	400dfe67 <_vfiprintf_r+0x157>
400e0915:	02e597        	bbsi	a5, 9, 400e091b <_vfiprintf_r+0xc0b>
400e0918:	003006        	j	400e09dc <_vfiprintf_r+0xccc>
400e091b:	46bc      	beqz.n	a6, 400e0953 <_vfiprintf_r+0xc43>
400e091d:	0ba247        	bge	a2, a4, 400e092c <_vfiprintf_r+0xc1c>
400e0920:	10c142        	addi	a4, a1, 16
400e0923:	b02240        	addx8	a2, a2, a4
400e0926:	0228      	l32i.n	a2, a2, 0
400e0928:	000886        	j	400e094e <_vfiprintf_r+0xc3e>
400e092b:	c15200        	mul16u	a5, a2, a0
400e092e:	a24210        	muluh	a4, a2, a1
400e0931:	454a30        	extui	a4, a3, 26, 5
400e0934:	34a2d2        	movi	a13, 0x234
400e0937:	40a2c2        	movi	a12, 0x240
400e093a:	02ad      	mov.n	a10, a2
400e093c:	0149      	s32i.n	a4, a1, 0
400e093e:	01d5f2        	addmi	a15, a5, 0x100
400e0941:	05ed      	mov.n	a14, a5
400e0943:	d5da      	add.n	a13, a5, a13
400e0945:	c5ca      	add.n	a12, a5, a12
400e0947:	07bd      	mov.n	a11, a7
400e0949:	feeda5        	call8	400df824 <get_arg$isra$0>
400e094c:	0a28      	l32i.n	a2, a10, 0
400e094e:	035d      	mov.n	a5, a3
400e0950:	001f86        	j	400e09d2 <_vfiprintf_r+0xcc2>
400e0953:	10c162        	addi	a6, a1, 16
400e0956:	531b      	addi.n	a5, a3, 1
400e0958:	b02260        	addx8	a2, a2, a6
400e095b:	712347        	blt	a3, a4, 400e09d0 <_vfiprintf_r+0xcc0>
400e095e:	f21c      	movi.n	a2, 31
400e0960:	3d2247        	blt	a2, a4, 400e09a1 <_vfiprintf_r+0xc91>
400e0963:	241b      	addi.n	a2, a4, 1
400e0965:	10c182        	addi	a8, a1, 16
400e0968:	916122        	s32i	a2, a1, 0x244
400e096b:	02d822        	addmi	a2, a8, 0x200
400e096e:	122232        	l32i	a3, a2, 72
400e0971:	861c      	movi.n	a6, 24
400e0973:	734b      	addi.n	a7, a3, 4
400e0975:	126272        	s32i	a7, a2, 72
400e0978:	052677        	blt	a6, a7, 400e0981 <_vfiprintf_r+0xc71>
400e097b:	112232        	l32i	a3, a2, 68
400e097e:	000286        	j	400e098c <_vfiprintf_r+0xc7c>
400e0981:	042637        	blt	a6, a3, 400e0989 <_vfiprintf_r+0xc79>
400e0984:	432c      	movi.n	a3, 36
400e0986:	126232        	s32i	a3, a2, 72
400e0989:	942132        	l32i	a3, a1, 0x250
400e098c:	962122        	l32i	a2, a1, 0x258
400e098f:	10c192        	addi	a9, a1, 16
400e0992:	232a      	add.n	a2, a3, a2
400e0994:	fcc222        	addi	a2, a2, -4
400e0997:	0228      	l32i.n	a2, a2, 0
400e0999:	b04490        	addx8	a4, a4, a9
400e099c:	0429      	s32i.n	a2, a4, 0
400e099e:	000c06        	j	400e09d2 <_vfiprintf_r+0xcc2>
400e09a1:	10c1a2        	addi	a10, a1, 16
400e09a4:	02da22        	addmi	a2, a10, 0x200
400e09a7:	122232        	l32i	a3, a2, 72
400e09aa:	841c      	movi.n	a4, 24
400e09ac:	634b      	addi.n	a6, a3, 4
400e09ae:	126262        	s32i	a6, a2, 72
400e09b1:	082467        	blt	a4, a6, 400e09bd <_vfiprintf_r+0xcad>
400e09b4:	112232        	l32i	a3, a2, 68
400e09b7:	000346        	j	400e09c8 <_vfiprintf_r+0xcb8>
400e09ba:	000000        	ill
400e09bd:	042437        	blt	a4, a3, 400e09c5 <_vfiprintf_r+0xcb5>
400e09c0:	432c      	movi.n	a3, 36
400e09c2:	126232        	s32i	a3, a2, 72
400e09c5:	942132        	l32i	a3, a1, 0x250
400e09c8:	962122        	l32i	a2, a1, 0x258
400e09cb:	232a      	add.n	a2, a3, a2
400e09cd:	fcc222        	addi	a2, a2, -4
400e09d0:	0228      	l32i.n	a2, a2, 0
400e09d2:	9e2132        	l32i	a3, a1, 0x278
400e09d5:	004232        	s8i	a3, a2, 0
400e09d8:	002ec6        	j	400e0a97 <_vfiprintf_r+0xd87>
400e09db:	46bc00        	lsi	f0, a12, 0x118
400e09de:	0aa247        	bge	a2, a4, 400e09ec <_vfiprintf_r+0xcdc>
400e09e1:	10c142        	addi	a4, a1, 16
400e09e4:	b02240        	addx8	a2, a2, a4
400e09e7:	0228      	l32i.n	a2, a2, 0
400e09e9:	000846        	j	400e0a0e <_vfiprintf_r+0xcfe>
400e09ec:	10c152        	addi	a5, a1, 16
400e09ef:	30a242        	movi	a4, 0x230
400e09f2:	454a      	add.n	a4, a5, a4
400e09f4:	34a2d2        	movi	a13, 0x234
400e09f7:	40a2c2        	movi	a12, 0x240
400e09fa:	02ad      	mov.n	a10, a2
400e09fc:	0149      	s32i.n	a4, a1, 0
400e09fe:	01d5f2        	addmi	a15, a5, 0x100
400e0a01:	05ed      	mov.n	a14, a5
400e0a03:	d5da      	add.n	a13, a5, a13
400e0a05:	c5ca      	add.n	a12, a5, a12
400e0a07:	07bd      	mov.n	a11, a7
400e0a09:	fee1a5        	call8	400df824 <get_arg$isra$0>
400e0a0c:	0a28      	l32i.n	a2, a10, 0
400e0a0e:	035d      	mov.n	a5, a3
400e0a10:	001f86        	j	400e0a92 <_vfiprintf_r+0xd82>
400e0a13:	c16200        	mul16u	a6, a2, a0
400e0a16:	531b10        	max	a1, a11, a1
400e0a19:	b02260        	addx8	a2, a2, a6
400e0a1c:	702347        	blt	a3, a4, 400e0a90 <_vfiprintf_r+0xd80>
400e0a1f:	f21c      	movi.n	a2, 31
400e0a21:	3f2247        	blt	a2, a4, 400e0a64 <_vfiprintf_r+0xd54>
400e0a24:	241b      	addi.n	a2, a4, 1
400e0a26:	10c182        	addi	a8, a1, 16
400e0a29:	916122        	s32i	a2, a1, 0x244
400e0a2c:	02d822        	addmi	a2, a8, 0x200
400e0a2f:	122232        	l32i	a3, a2, 72
400e0a32:	861c      	movi.n	a6, 24
400e0a34:	734b      	addi.n	a7, a3, 4
400e0a36:	126272        	s32i	a7, a2, 72
400e0a39:	072677        	blt	a6, a7, 400e0a44 <_vfiprintf_r+0xd34>
400e0a3c:	112232        	l32i	a3, a2, 68
400e0a3f:	000306        	j	400e0a4f <_vfiprintf_r+0xd3f>
400e0a42:	370000        	lsi	f0, a0, 220
400e0a45:	2c0426        	beqi	a4, -1, 400e0a75 <_vfiprintf_r+0xd65>
400e0a48:	623243        	lsi	f4, a2, 0x188
400e0a4b:	213212        	lsi	f1, a2, 132
400e0a4e:	212294        	lsi	f9, a2, 132
400e0a51:	c19296        	bltz	a2, 400e066e <_vfiprintf_r+0x95e>
400e0a54:	232a10        	sext	a2, a10, 8
400e0a57:	fcc222        	addi	a2, a2, -4
400e0a5a:	0228      	l32i.n	a2, a2, 0
400e0a5c:	b04490        	addx8	a4, a4, a9
400e0a5f:	0429      	s32i.n	a2, a4, 0
400e0a61:	000b46        	j	400e0a92 <_vfiprintf_r+0xd82>
400e0a64:	10c1a2        	addi	a10, a1, 16
400e0a67:	02da22        	addmi	a2, a10, 0x200
400e0a6a:	122232        	l32i	a3, a2, 72
400e0a6d:	841c      	movi.n	a4, 24
400e0a6f:	634b      	addi.n	a6, a3, 4
400e0a71:	126262        	s32i	a6, a2, 72
400e0a74:	052467        	blt	a4, a6, 400e0a7d <_vfiprintf_r+0xd6d>
400e0a77:	112232        	l32i	a3, a2, 68
400e0a7a:	000286        	j	400e0a88 <_vfiprintf_r+0xd78>
400e0a7d:	042437        	blt	a4, a3, 400e0a85 <_vfiprintf_r+0xd75>
400e0a80:	432c      	movi.n	a3, 36
400e0a82:	126232        	s32i	a3, a2, 72
400e0a85:	942132        	l32i	a3, a1, 0x250
400e0a88:	962122        	l32i	a2, a1, 0x258
400e0a8b:	232a      	add.n	a2, a3, a2
400e0a8d:	fcc222        	addi	a2, a2, -4
400e0a90:	0228      	l32i.n	a2, a2, 0
400e0a92:	9e2132        	l32i	a3, a1, 0x278
400e0a95:	0239      	s32i.n	a3, a2, 0
400e0a97:	052d      	mov.n	a2, a5
400e0a99:	fcf286        	j	400dfe67 <_vfiprintf_r+0x157>
400e0a9c:	041c      	movi.n	a4, 16
400e0a9e:	205540        	or	a5, a5, a4
400e0aa1:	02e557        	bbsi	a5, 5, 400e0aa7 <_vfiprintf_r+0xd97>
400e0aa4:	003486        	j	400e0b7a <_vfiprintf_r+0xe6a>
400e0aa7:	912182        	l32i	a8, a1, 0x244
400e0aaa:	66bc      	beqz.n	a6, 400e0ae4 <_vfiprintf_r+0xdd4>
400e0aac:	0ca287        	bge	a2, a8, 400e0abc <_vfiprintf_r+0xdac>
400e0aaf:	10c142        	addi	a4, a1, 16
400e0ab2:	b02240        	addx8	a2, a2, a4
400e0ab5:	02e8      	l32i.n	a14, a2, 0
400e0ab7:	1248      	l32i.n	a4, a2, 4
400e0ab9:	00e206        	j	400e0e45 <_vfiprintf_r+0x1135>
400e0abc:	10c162        	addi	a6, a1, 16
400e0abf:	30a242        	movi	a4, 0x230
400e0ac2:	464a      	add.n	a4, a6, a4
400e0ac4:	34a2d2        	movi	a13, 0x234
400e0ac7:	40a2c2        	movi	a12, 0x240
400e0aca:	0149      	s32i.n	a4, a1, 0
400e0acc:	06ed      	mov.n	a14, a6
400e0ace:	01d6f2        	addmi	a15, a6, 0x100
400e0ad1:	d6da      	add.n	a13, a6, a13
400e0ad3:	c6ca      	add.n	a12, a6, a12
400e0ad5:	07bd      	mov.n	a11, a7
400e0ad7:	02ad      	mov.n	a10, a2
400e0ad9:	fed4a5        	call8	400df824 <get_arg$isra$0>
400e0adc:	0ae8      	l32i.n	a14, a10, 0
400e0ade:	1a48      	l32i.n	a4, a10, 4
400e0ae0:	00d846        	j	400e0e45 <_vfiprintf_r+0x1135>
400e0ae3:	631b00        	minu	a1, a11, a0
400e0ae6:	08a387        	bge	a3, a8, 400e0af2 <_vfiprintf_r+0xde2>
400e0ae9:	10c182        	addi	a8, a1, 16
400e0aec:	b02280        	addx8	a2, a2, a8
400e0aef:	002006        	j	400e0b73 <_vfiprintf_r+0xe63>
400e0af2:	f21c      	movi.n	a2, 31
400e0af4:	482287        	blt	a2, a8, 400e0b40 <_vfiprintf_r+0xe30>
400e0af7:	10c192        	addi	a9, a1, 16
400e0afa:	281b      	addi.n	a2, a8, 1
400e0afc:	02d932        	addmi	a3, a9, 0x200
400e0aff:	916122        	s32i	a2, a1, 0x244
400e0b02:	122322        	l32i	a2, a3, 72
400e0b05:	427b      	addi.n	a4, a2, 7
400e0b07:	827c      	movi.n	a2, -8
400e0b09:	102420        	and	a2, a4, a2
400e0b0c:	728b      	addi.n	a7, a2, 8
400e0b0e:	126372        	s32i	a7, a3, 72
400e0b11:	841c      	movi.n	a4, 24
400e0b13:	052477        	blt	a4, a7, 400e0b1c <_vfiprintf_r+0xe0c>
400e0b16:	112332        	l32i	a3, a3, 68
400e0b19:	000286        	j	400e0b27 <_vfiprintf_r+0xe17>
400e0b1c:	042427        	blt	a4, a2, 400e0b24 <_vfiprintf_r+0xe14>
400e0b1f:	822c      	movi.n	a2, 40
400e0b21:	126322        	s32i	a2, a3, 72
400e0b24:	942132        	l32i	a3, a1, 0x250
400e0b27:	962122        	l32i	a2, a1, 0x258
400e0b2a:	10c1a2        	addi	a10, a1, 16
400e0b2d:	232a      	add.n	a2, a3, a2
400e0b2f:	f8c222        	addi	a2, a2, -8
400e0b32:	02e8      	l32i.n	a14, a2, 0
400e0b34:	1248      	l32i.n	a4, a2, 4
400e0b36:	b028a0        	addx8	a2, a8, a10
400e0b39:	02e9      	s32i.n	a14, a2, 0
400e0b3b:	1249      	s32i.n	a4, a2, 4
400e0b3d:	00c086        	j	400e0e43 <_vfiprintf_r+0x1133>
400e0b40:	10c1b2        	addi	a11, a1, 16
400e0b43:	02db22        	addmi	a2, a11, 0x200
400e0b46:	122232        	l32i	a3, a2, 72
400e0b49:	437b      	addi.n	a4, a3, 7
400e0b4b:	837c      	movi.n	a3, -8
400e0b4d:	103430        	and	a3, a4, a3
400e0b50:	738b      	addi.n	a7, a3, 8
400e0b52:	126272        	s32i	a7, a2, 72
400e0b55:	841c      	movi.n	a4, 24
400e0b57:	052477        	blt	a4, a7, 400e0b60 <_vfiprintf_r+0xe50>
400e0b5a:	112232        	l32i	a3, a2, 68
400e0b5d:	000286        	j	400e0b6b <_vfiprintf_r+0xe5b>
400e0b60:	042437        	blt	a4, a3, 400e0b68 <_vfiprintf_r+0xe58>
400e0b63:	832c      	movi.n	a3, 40
400e0b65:	126232        	s32i	a3, a2, 72
400e0b68:	942132        	l32i	a3, a1, 0x250
400e0b6b:	962122        	l32i	a2, a1, 0x258
400e0b6e:	232a      	add.n	a2, a3, a2
400e0b70:	f8c222        	addi	a2, a2, -8
400e0b73:	02e8      	l32i.n	a14, a2, 0
400e0b75:	1248      	l32i.n	a4, a2, 4
400e0b77:	00b206        	j	400e0e43 <_vfiprintf_r+0x1133>
400e0b7a:	091c      	movi.n	a9, 16
400e0b7c:	109590        	and	a9, a5, a9
400e0b7f:	05d916        	beqz	a9, 400e0be0 <_vfiprintf_r+0xed0>
400e0b82:	912142        	l32i	a4, a1, 0x244
400e0b85:	768c      	beqz.n	a6, 400e0b90 <_vfiprintf_r+0xe80>
400e0b87:	022247        	blt	a2, a4, 400e0b8d <_vfiprintf_r+0xe7d>
400e0b8a:	0082c6        	j	400e0d99 <_vfiprintf_r+0x1089>
400e0b8d:	007f46        	j	400e0d8e <_vfiprintf_r+0x107e>
400e0b90:	631b      	addi.n	a6, a3, 1
400e0b92:	02a347        	bge	a3, a4, 400e0b98 <_vfiprintf_r+0xe88>
400e0b95:	008b06        	j	400e0dc5 <_vfiprintf_r+0x10b5>
400e0b98:	f21c      	movi.n	a2, 31
400e0b9a:	02a247        	bge	a2, a4, 400e0ba0 <_vfiprintf_r+0xe90>
400e0b9d:	009c06        	j	400e0e11 <_vfiprintf_r+0x1101>
400e0ba0:	241b      	addi.n	a2, a4, 1
400e0ba2:	10c192        	addi	a9, a1, 16
400e0ba5:	916122        	s32i	a2, a1, 0x244
400e0ba8:	02d922        	addmi	a2, a9, 0x200
400e0bab:	122232        	l32i	a3, a2, 72
400e0bae:	871c      	movi.n	a7, 24
400e0bb0:	834b      	addi.n	a8, a3, 4
400e0bb2:	126282        	s32i	a8, a2, 72
400e0bb5:	072787        	blt	a7, a8, 400e0bc0 <_vfiprintf_r+0xeb0>
400e0bb8:	112232        	l32i	a3, a2, 68
400e0bbb:	000306        	j	400e0bcb <_vfiprintf_r+0xebb>
400e0bbe:	370000        	lsi	f0, a0, 220
400e0bc1:	2c0427        	bnone	a4, a2, 400e0bf1 <_vfiprintf_r+0xee1>
400e0bc4:	623243        	lsi	f4, a2, 0x188
400e0bc7:	213212        	lsi	f1, a2, 132
400e0bca:	212294        	lsi	f9, a2, 132
400e0bcd:	c1a296        	bltz	a2, 400e07eb <_vfiprintf_r+0xadb>
400e0bd0:	232a10        	sext	a2, a10, 8
400e0bd3:	fcc222        	addi	a2, a2, -4
400e0bd6:	02e8      	l32i.n	a14, a2, 0
400e0bd8:	b024a0        	addx8	a2, a4, a10
400e0bdb:	02e9      	s32i.n	a14, a2, 0
400e0bdd:	009806        	j	400e0e41 <_vfiprintf_r+0x1131>
400e0be0:	044c      	movi.n	a4, 64
400e0be2:	104540        	and	a4, a5, a4
400e0be5:	0cf416        	beqz	a4, 400e0cb8 <_vfiprintf_r+0xfa8>
400e0be8:	912142        	l32i	a4, a1, 0x244
400e0beb:	d6bc      	beqz.n	a6, 400e0c2c <_vfiprintf_r+0xf1c>
400e0bed:	0ba247        	bge	a2, a4, 400e0bfc <_vfiprintf_r+0xeec>
400e0bf0:	10c142        	addi	a4, a1, 16
400e0bf3:	b02240        	addx8	a2, a2, a4
400e0bf6:	0012e2        	l16ui	a14, a2, 0
400e0bf9:	000a46        	j	400e0c26 <_vfiprintf_r+0xf16>
400e0bfc:	10c162        	addi	a6, a1, 16
400e0bff:	30a242        	movi	a4, 0x230
400e0c02:	464a      	add.n	a4, a6, a4
400e0c04:	34a2d2        	movi	a13, 0x234
400e0c07:	40a2c2        	movi	a12, 0x240
400e0c0a:	06ed      	mov.n	a14, a6
400e0c0c:	0149      	s32i.n	a4, a1, 0
400e0c0e:	01d6f2        	addmi	a15, a6, 0x100
400e0c11:	d6da      	add.n	a13, a6, a13
400e0c13:	c6ca      	add.n	a12, a6, a12
400e0c15:	07bd      	mov.n	a11, a7
400e0c17:	20a220        	or	a10, a2, a2
400e0c1a:	a66192        	s32i	a9, a1, 0x298
400e0c1d:	fec065        	call8	400df824 <get_arg$isra$0>
400e0c20:	001ae2        	l16ui	a14, a10, 0
400e0c23:	a62192        	l32i	a9, a1, 0x298
400e0c26:	094d      	mov.n	a4, a9
400e0c28:	008646        	j	400e0e45 <_vfiprintf_r+0x1135>
400e0c2b:	731b00        	maxu	a1, a11, a0
400e0c2e:	0ba347        	bge	a3, a4, 400e0c3d <_vfiprintf_r+0xf2d>
400e0c31:	10c182        	addi	a8, a1, 16
400e0c34:	b02280        	addx8	a2, a2, a8
400e0c37:	0012e2        	l16ui	a14, a2, 0
400e0c3a:	003286        	j	400e0d08 <_vfiprintf_r+0xff8>
400e0c3d:	f21c      	movi.n	a2, 31
400e0c3f:	412247        	blt	a2, a4, 400e0c84 <_vfiprintf_r+0xf74>
400e0c42:	241b      	addi.n	a2, a4, 1
400e0c44:	10c192        	addi	a9, a1, 16
400e0c47:	916122        	s32i	a2, a1, 0x244
400e0c4a:	02d922        	addmi	a2, a9, 0x200
400e0c4d:	122232        	l32i	a3, a2, 72
400e0c50:	861c      	movi.n	a6, 24
400e0c52:	834b      	addi.n	a8, a3, 4
400e0c54:	126282        	s32i	a8, a2, 72
400e0c57:	052687        	blt	a6, a8, 400e0c60 <_vfiprintf_r+0xf50>
400e0c5a:	112232        	l32i	a3, a2, 68
400e0c5d:	000286        	j	400e0c6b <_vfiprintf_r+0xf5b>
400e0c60:	042637        	blt	a6, a3, 400e0c68 <_vfiprintf_r+0xf58>
400e0c63:	432c      	movi.n	a3, 36
400e0c65:	126232        	s32i	a3, a2, 72
400e0c68:	942132        	l32i	a3, a1, 0x250
400e0c6b:	962122        	l32i	a2, a1, 0x258
400e0c6e:	10c1a2        	addi	a10, a1, 16
400e0c71:	232a      	add.n	a2, a3, a2
400e0c73:	fcc222        	addi	a2, a2, -4
400e0c76:	02e8      	l32i.n	a14, a2, 0
400e0c78:	b044a0        	addx8	a4, a4, a10
400e0c7b:	04e9      	s32i.n	a14, a4, 0
400e0c7d:	f4e0e0        	extui	a14, a14, 0, 16
400e0c80:	003f86        	j	400e0d82 <_vfiprintf_r+0x1072>
400e0c83:	c1b200        	mul16u	a11, a2, a0
400e0c86:	db2210        	movt.s	f2, f2, b1
400e0c89:	223202        	lsi	f0, a2, 136
400e0c8c:	841c12        	l16ui	a1, a12, 0x108
400e0c8f:	634b      	addi.n	a6, a3, 4
400e0c91:	126262        	s32i	a6, a2, 72
400e0c94:	052467        	blt	a4, a6, 400e0c9d <_vfiprintf_r+0xf8d>
400e0c97:	112232        	l32i	a3, a2, 68
400e0c9a:	000286        	j	400e0ca8 <_vfiprintf_r+0xf98>
400e0c9d:	042437        	blt	a4, a3, 400e0ca5 <_vfiprintf_r+0xf95>
400e0ca0:	432c      	movi.n	a3, 36
400e0ca2:	126232        	s32i	a3, a2, 72
400e0ca5:	942132        	l32i	a3, a1, 0x250
400e0ca8:	962122        	l32i	a2, a1, 0x258
400e0cab:	232a      	add.n	a2, a3, a2
400e0cad:	fcc222        	addi	a2, a2, -4
400e0cb0:	0012e2        	l16ui	a14, a2, 0
400e0cb3:	0032c6        	j	400e0d82 <_vfiprintf_r+0x1072>
400e0cb6:	820000        	mull	a0, a0, a0
400e0cb9:	979121        	l32r	a2, 400c6b00 <_rtc_text_end+0x6b00>
400e0cbc:	c602e5        	call8	400a6cec <_iram_end+0x19198>
400e0cbf:	bc0031        	l32r	a3, 400cfcc0 <_rtc_text_end+0xfcc0>
400e0cc2:	a28756        	bnez	a7, 400e06ee <_vfiprintf_r+0x9de>
400e0cc5:	620d      	lsi	f0, a2, 8
400e0cc7:	6010c1        	l32r	a12, 400b8d08 <_iram_end+0x2b1b4>
400e0cca:	e2b022        	l32ai	a2, a0, 0x388
400e0ccd:	860002        	l8ui	a0, a0, 134
400e0cd0:	005c      	movi.n	a0, 80
400e0cd2:	820000        	mull	a0, a0, a0
400e0cd5:	6210c1        	l32r	a12, 400b9518 <_iram_end+0x2b9c4>
400e0cd8:	6a30a2        	lsi	f10, a0, 0x1a8
400e0cdb:	d268      	l32i.n	a6, a2, 52
400e0cdd:	c234a2        	lsi	f10, a4, 0x308
400e0ce0:	ed40a2        	s8i	a10, a0, 237
400e0ce3:	6908      	l32i.n	a0, a9, 24
400e0ce5:	d8f201        	l32r	a0, 400d70b0 <esp_timer_impl_init+0x8>
400e0ce8:	d8da01        	l32r	a0, 400d7050 <esp_cache_err_int_init+0x18>
400e0ceb:	c8ca      	add.n	a12, a8, a12
400e0ced:	07bd      	mov.n	a11, a7
400e0cef:	02ad      	mov.n	a10, a2
400e0cf1:	feb325        	call8	400df824 <get_arg$isra$0>
400e0cf4:	000ae2        	l8ui	a14, a10, 0
400e0cf7:	005286        	j	400e0e45 <_vfiprintf_r+0x1135>
400e0cfa:	731b      	addi.n	a7, a3, 1
400e0cfc:	0da387        	bge	a3, a8, 400e0d0d <_vfiprintf_r+0xffd>
400e0cff:	10c192        	addi	a9, a1, 16
400e0d02:	b02290        	addx8	a2, a2, a9
400e0d05:	0002e2        	l8ui	a14, a2, 0
400e0d08:	064d      	mov.n	a4, a6
400e0d0a:	001d86        	j	400e0d84 <_vfiprintf_r+0x1074>
400e0d0d:	f21c      	movi.n	a2, 31
400e0d0f:	402287        	blt	a2, a8, 400e0d53 <_vfiprintf_r+0x1043>
400e0d12:	281b      	addi.n	a2, a8, 1
400e0d14:	10c1a2        	addi	a10, a1, 16
400e0d17:	916122        	s32i	a2, a1, 0x244
400e0d1a:	02da22        	addmi	a2, a10, 0x200
400e0d1d:	122232        	l32i	a3, a2, 72
400e0d20:	841c      	movi.n	a4, 24
400e0d22:	634b      	addi.n	a6, a3, 4
400e0d24:	126262        	s32i	a6, a2, 72
400e0d27:	052467        	blt	a4, a6, 400e0d30 <_vfiprintf_r+0x1020>
400e0d2a:	112232        	l32i	a3, a2, 68
400e0d2d:	000286        	j	400e0d3b <_vfiprintf_r+0x102b>
400e0d30:	042437        	blt	a4, a3, 400e0d38 <_vfiprintf_r+0x1028>
400e0d33:	432c      	movi.n	a3, 36
400e0d35:	126232        	s32i	a3, a2, 72
400e0d38:	942132        	l32i	a3, a1, 0x250
400e0d3b:	962122        	l32i	a2, a1, 0x258
400e0d3e:	10c1b2        	addi	a11, a1, 16
400e0d41:	232a      	add.n	a2, a3, a2
400e0d43:	fcc222        	addi	a2, a2, -4
400e0d46:	02e8      	l32i.n	a14, a2, 0
400e0d48:	b088b0        	addx8	a8, a8, a11
400e0d4b:	08e9      	s32i.n	a14, a8, 0
400e0d4d:	74e0e0        	extui	a14, a14, 0, 8
400e0d50:	000b86        	j	400e0d82 <_vfiprintf_r+0x1072>
400e0d53:	10c132        	addi	a3, a1, 16
400e0d56:	02d322        	addmi	a2, a3, 0x200
400e0d59:	122232        	l32i	a3, a2, 72
400e0d5c:	841c      	movi.n	a4, 24
400e0d5e:	634b      	addi.n	a6, a3, 4
400e0d60:	126262        	s32i	a6, a2, 72
400e0d63:	052467        	blt	a4, a6, 400e0d6c <_vfiprintf_r+0x105c>
400e0d66:	112232        	l32i	a3, a2, 68
400e0d69:	000286        	j	400e0d77 <_vfiprintf_r+0x1067>
400e0d6c:	042437        	blt	a4, a3, 400e0d74 <_vfiprintf_r+0x1064>
400e0d6f:	432c      	movi.n	a3, 36
400e0d71:	126232        	s32i	a3, a2, 72
400e0d74:	942132        	l32i	a3, a1, 0x250
400e0d77:	962122        	l32i	a2, a1, 0x258
400e0d7a:	232a      	add.n	a2, a3, a2
400e0d7c:	fcc222        	addi	a2, a2, -4
400e0d7f:	0002e2        	l8ui	a14, a2, 0
400e0d82:	040c      	movi.n	a4, 0
400e0d84:	073d      	mov.n	a3, a7
400e0d86:	002ec6        	j	400e0e45 <_vfiprintf_r+0x1135>
400e0d89:	36bc      	beqz.n	a6, 400e0dc0 <_vfiprintf_r+0x10b0>
400e0d8b:	0aa287        	bge	a2, a8, 400e0d99 <_vfiprintf_r+0x1089>
400e0d8e:	10c142        	addi	a4, a1, 16
400e0d91:	b02240        	addx8	a2, a2, a4
400e0d94:	02e8      	l32i.n	a14, a2, 0
400e0d96:	000846        	j	400e0dbb <_vfiprintf_r+0x10ab>
400e0d99:	10c162        	addi	a6, a1, 16
400e0d9c:	30a242        	movi	a4, 0x230
400e0d9f:	464a      	add.n	a4, a6, a4
400e0da1:	34a2d2        	movi	a13, 0x234
400e0da4:	40a2c2        	movi	a12, 0x240
400e0da7:	06ed      	mov.n	a14, a6
400e0da9:	0149      	s32i.n	a4, a1, 0
400e0dab:	01d6f2        	addmi	a15, a6, 0x100
400e0dae:	d6da      	add.n	a13, a6, a13
400e0db0:	c6ca      	add.n	a12, a6, a12
400e0db2:	07bd      	mov.n	a11, a7
400e0db4:	02ad      	mov.n	a10, a2
400e0db6:	fea6e5        	call8	400df824 <get_arg$isra$0>
400e0db9:	0ae8      	l32i.n	a14, a10, 0
400e0dbb:	036d      	mov.n	a6, a3
400e0dbd:	002006        	j	400e0e41 <_vfiprintf_r+0x1131>
400e0dc0:	631b      	addi.n	a6, a3, 1
400e0dc2:	08a387        	bge	a3, a8, 400e0dce <_vfiprintf_r+0x10be>
400e0dc5:	10c182        	addi	a8, a1, 16
400e0dc8:	b02280        	addx8	a2, a2, a8
400e0dcb:	001c06        	j	400e0e3f <_vfiprintf_r+0x112f>
400e0dce:	f21c      	movi.n	a2, 31
400e0dd0:	3d2287        	blt	a2, a8, 400e0e11 <_vfiprintf_r+0x1101>
400e0dd3:	281b      	addi.n	a2, a8, 1
400e0dd5:	10c192        	addi	a9, a1, 16
400e0dd8:	916122        	s32i	a2, a1, 0x244
400e0ddb:	02d922        	addmi	a2, a9, 0x200
400e0dde:	122232        	l32i	a3, a2, 72
400e0de1:	841c      	movi.n	a4, 24
400e0de3:	734b      	addi.n	a7, a3, 4
400e0de5:	126272        	s32i	a7, a2, 72
400e0de8:	052477        	blt	a4, a7, 400e0df1 <_vfiprintf_r+0x10e1>
400e0deb:	112232        	l32i	a3, a2, 68
400e0dee:	000286        	j	400e0dfc <_vfiprintf_r+0x10ec>
400e0df1:	042437        	blt	a4, a3, 400e0df9 <_vfiprintf_r+0x10e9>
400e0df4:	432c      	movi.n	a3, 36
400e0df6:	126232        	s32i	a3, a2, 72
400e0df9:	942132        	l32i	a3, a1, 0x250
400e0dfc:	962122        	l32i	a2, a1, 0x258
400e0dff:	10c1a2        	addi	a10, a1, 16
400e0e02:	232a      	add.n	a2, a3, a2
400e0e04:	fcc222        	addi	a2, a2, -4
400e0e07:	02e8      	l32i.n	a14, a2, 0
400e0e09:	b088a0        	addx8	a8, a8, a10
400e0e0c:	08e9      	s32i.n	a14, a8, 0
400e0e0e:	000bc6        	j	400e0e41 <_vfiprintf_r+0x1131>
400e0e11:	10c1b2        	addi	a11, a1, 16
400e0e14:	02db22        	addmi	a2, a11, 0x200
400e0e17:	122232        	l32i	a3, a2, 72
400e0e1a:	841c      	movi.n	a4, 24
400e0e1c:	734b      	addi.n	a7, a3, 4
400e0e1e:	126272        	s32i	a7, a2, 72
400e0e21:	072477        	blt	a4, a7, 400e0e2c <_vfiprintf_r+0x111c>
400e0e24:	112232        	l32i	a3, a2, 68
400e0e27:	000306        	j	400e0e37 <_vfiprintf_r+0x1127>
400e0e2a:	370000        	lsi	f0, a0, 220
400e0e2d:	2c0424        	lsi	f2, a4, 176
400e0e30:	623243        	lsi	f4, a2, 0x188
400e0e33:	213212        	lsi	f1, a2, 132
400e0e36:	212294        	lsi	f9, a2, 132
400e0e39:	232a96        	bltz	a10, 400e106f <_vfiprintf_r+0x135f>
400e0e3c:	fcc222        	addi	a2, a2, -4
400e0e3f:	02e8      	l32i.n	a14, a2, 0
400e0e41:	040c      	movi.n	a4, 0
400e0e43:	063d      	mov.n	a3, a6
400e0e45:	ffab22        	movi	a2, 0xfffffbff
400e0e48:	105520        	and	a5, a5, a2
400e0e4b:	020c      	movi.n	a2, 0
400e0e4d:	026d06        	j	400e1805 <_vfiprintf_r+0x1af5>
400e0e50:	214200        	srai	a4, a0, 2
400e0e53:	36bc91        	l32r	a9, 400ae944 <_iram_end+0x20df0>
400e0e56:	0aa247        	bge	a2, a4, 400e0e64 <_vfiprintf_r+0x1154>
400e0e59:	10c142        	addi	a4, a1, 16
400e0e5c:	b02240        	addx8	a2, a2, a4
400e0e5f:	02e8      	l32i.n	a14, a2, 0
400e0e61:	000846        	j	400e0e86 <_vfiprintf_r+0x1176>
400e0e64:	10c162        	addi	a6, a1, 16
400e0e67:	30a242        	movi	a4, 0x230
400e0e6a:	464a      	add.n	a4, a6, a4
400e0e6c:	34a2d2        	movi	a13, 0x234
400e0e6f:	40a2c2        	movi	a12, 0x240
400e0e72:	06ed      	mov.n	a14, a6
400e0e74:	0149      	s32i.n	a4, a1, 0
400e0e76:	01d6f2        	addmi	a15, a6, 0x100
400e0e79:	d6da      	add.n	a13, a6, a13
400e0e7b:	c6ca      	add.n	a12, a6, a12
400e0e7d:	07bd      	mov.n	a11, a7
400e0e7f:	02ad      	mov.n	a10, a2
400e0e81:	fe9a25        	call8	400df824 <get_arg$isra$0>
400e0e84:	0ae8      	l32i.n	a14, a10, 0
400e0e86:	036d      	mov.n	a6, a3
400e0e88:	001f86        	j	400e0f0a <_vfiprintf_r+0x11fa>
400e0e8b:	10c182        	addi	a8, a1, 16
400e0e8e:	631b      	addi.n	a6, a3, 1
400e0e90:	b02280        	addx8	a2, a2, a8
400e0e93:	712347        	blt	a3, a4, 400e0f08 <_vfiprintf_r+0x11f8>
400e0e96:	f21c      	movi.n	a2, 31
400e0e98:	3d2247        	blt	a2, a4, 400e0ed9 <_vfiprintf_r+0x11c9>
400e0e9b:	241b      	addi.n	a2, a4, 1
400e0e9d:	10c192        	addi	a9, a1, 16
400e0ea0:	916122        	s32i	a2, a1, 0x244
400e0ea3:	02d922        	addmi	a2, a9, 0x200
400e0ea6:	122232        	l32i	a3, a2, 72
400e0ea9:	871c      	movi.n	a7, 24
400e0eab:	834b      	addi.n	a8, a3, 4
400e0ead:	126282        	s32i	a8, a2, 72
400e0eb0:	052787        	blt	a7, a8, 400e0eb9 <_vfiprintf_r+0x11a9>
400e0eb3:	112232        	l32i	a3, a2, 68
400e0eb6:	000286        	j	400e0ec4 <_vfiprintf_r+0x11b4>
400e0eb9:	042737        	blt	a7, a3, 400e0ec1 <_vfiprintf_r+0x11b1>
400e0ebc:	432c      	movi.n	a3, 36
400e0ebe:	126232        	s32i	a3, a2, 72
400e0ec1:	942132        	l32i	a3, a1, 0x250
400e0ec4:	962122        	l32i	a2, a1, 0x258
400e0ec7:	10c1a2        	addi	a10, a1, 16
400e0eca:	232a      	add.n	a2, a3, a2
400e0ecc:	fcc222        	addi	a2, a2, -4
400e0ecf:	02e8      	l32i.n	a14, a2, 0
400e0ed1:	b024a0        	addx8	a2, a4, a10
400e0ed4:	02e9      	s32i.n	a14, a2, 0
400e0ed6:	000c06        	j	400e0f0a <_vfiprintf_r+0x11fa>
400e0ed9:	10c1b2        	addi	a11, a1, 16
400e0edc:	02db22        	addmi	a2, a11, 0x200
400e0edf:	122232        	l32i	a3, a2, 72
400e0ee2:	841c      	movi.n	a4, 24
400e0ee4:	734b      	addi.n	a7, a3, 4
400e0ee6:	126272        	s32i	a7, a2, 72
400e0ee9:	082477        	blt	a4, a7, 400e0ef5 <_vfiprintf_r+0x11e5>
400e0eec:	112232        	l32i	a3, a2, 68
400e0eef:	000346        	j	400e0f00 <_vfiprintf_r+0x11f0>
400e0ef2:	000000        	ill
400e0ef5:	042437        	blt	a4, a3, 400e0efd <_vfiprintf_r+0x11ed>
400e0ef8:	432c      	movi.n	a3, 36
400e0efa:	126232        	s32i	a3, a2, 72
400e0efd:	942132        	l32i	a3, a1, 0x250
400e0f00:	962122        	l32i	a2, a1, 0x258
400e0f03:	232a      	add.n	a2, a3, a2
400e0f05:	fcc222        	addi	a2, a2, -4
400e0f08:	02e8      	l32i.n	a14, a2, 0
400e0f0a:	10c182        	addi	a8, a1, 16
400e0f0d:	02d832        	addmi	a3, a8, 0x200
400e0f10:	073c      	movi.n	a7, 48
400e0f12:	be2e91        	l32r	a9, 400d07cc <_flash_cache_start+0x7b4>
400e0f15:	384372        	s8i	a7, a3, 56
400e0f18:	220c      	movi.n	a2, 2
400e0f1a:	78a072        	movi	a7, 120
400e0f1d:	394372        	s8i	a7, a3, 57
400e0f20:	040c      	movi.n	a4, 0
400e0f22:	205520        	or	a5, a5, a2
400e0f25:	063d      	mov.n	a3, a6
400e0f27:	9f6192        	s32i	a9, a1, 0x27c
400e0f2a:	0235c6        	j	400e1805 <_vfiprintf_r+0x1af5>
400e0f2d:	912142        	l32i	a4, a1, 0x244
400e0f30:	46bc      	beqz.n	a6, 400e0f68 <_vfiprintf_r+0x1258>
400e0f32:	0aa247        	bge	a2, a4, 400e0f40 <_vfiprintf_r+0x1230>
400e0f35:	10c1a2        	addi	a10, a1, 16
400e0f38:	b022a0        	addx8	a2, a2, a10
400e0f3b:	0278      	l32i.n	a7, a2, 0
400e0f3d:	000846        	j	400e0f62 <_vfiprintf_r+0x1252>
400e0f40:	10c1b2        	addi	a11, a1, 16
400e0f43:	30a242        	movi	a4, 0x230
400e0f46:	4b4a      	add.n	a4, a11, a4
400e0f48:	34a2d2        	movi	a13, 0x234
400e0f4b:	40a2c2        	movi	a12, 0x240
400e0f4e:	01dbf2        	addmi	a15, a11, 0x100
400e0f51:	0bed      	mov.n	a14, a11
400e0f53:	dbda      	add.n	a13, a11, a13
400e0f55:	cbca      	add.n	a12, a11, a12
400e0f57:	0149      	s32i.n	a4, a1, 0
400e0f59:	07bd      	mov.n	a11, a7
400e0f5b:	02ad      	mov.n	a10, a2
400e0f5d:	fe8c65        	call8	400df824 <get_arg$isra$0>
400e0f60:	0a78      	l32i.n	a7, a10, 0
400e0f62:	9a6132        	s32i	a3, a1, 0x268
400e0f65:	002086        	j	400e0feb <_vfiprintf_r+0x12db>
400e0f68:	631b      	addi.n	a6, a3, 1
400e0f6a:	10c182        	addi	a8, a1, 16
400e0f6d:	9a6162        	s32i	a6, a1, 0x268
400e0f70:	b02280        	addx8	a2, a2, a8
400e0f73:	722347        	blt	a3, a4, 400e0fe9 <_vfiprintf_r+0x12d9>
400e0f76:	f21c      	movi.n	a2, 31
400e0f78:	3d2247        	blt	a2, a4, 400e0fb9 <_vfiprintf_r+0x12a9>
400e0f7b:	241b      	addi.n	a2, a4, 1
400e0f7d:	10c192        	addi	a9, a1, 16
400e0f80:	916122        	s32i	a2, a1, 0x244
400e0f83:	02d922        	addmi	a2, a9, 0x200
400e0f86:	122232        	l32i	a3, a2, 72
400e0f89:	861c      	movi.n	a6, 24
400e0f8b:	834b      	addi.n	a8, a3, 4
400e0f8d:	126282        	s32i	a8, a2, 72
400e0f90:	052687        	blt	a6, a8, 400e0f99 <_vfiprintf_r+0x1289>
400e0f93:	112232        	l32i	a3, a2, 68
400e0f96:	000286        	j	400e0fa4 <_vfiprintf_r+0x1294>
400e0f99:	042637        	blt	a6, a3, 400e0fa1 <_vfiprintf_r+0x1291>
400e0f9c:	432c      	movi.n	a3, 36
400e0f9e:	126232        	s32i	a3, a2, 72
400e0fa1:	942132        	l32i	a3, a1, 0x250
400e0fa4:	962122        	l32i	a2, a1, 0x258
400e0fa7:	10c1a2        	addi	a10, a1, 16
400e0faa:	232a      	add.n	a2, a3, a2
400e0fac:	fcc222        	addi	a2, a2, -4
400e0faf:	0278      	l32i.n	a7, a2, 0
400e0fb1:	b044a0        	addx8	a4, a4, a10
400e0fb4:	0479      	s32i.n	a7, a4, 0
400e0fb6:	000c46        	j	400e0feb <_vfiprintf_r+0x12db>
400e0fb9:	10c1b2        	addi	a11, a1, 16
400e0fbc:	02db22        	addmi	a2, a11, 0x200
400e0fbf:	122232        	l32i	a3, a2, 72
400e0fc2:	841c      	movi.n	a4, 24
400e0fc4:	634b      	addi.n	a6, a3, 4
400e0fc6:	126262        	s32i	a6, a2, 72
400e0fc9:	082467        	blt	a4, a6, 400e0fd5 <_vfiprintf_r+0x12c5>
400e0fcc:	112232        	l32i	a3, a2, 68
400e0fcf:	000346        	j	400e0fe0 <_vfiprintf_r+0x12d0>
400e0fd2:	000000        	ill
400e0fd5:	042437        	blt	a4, a3, 400e0fdd <_vfiprintf_r+0x12cd>
400e0fd8:	432c      	movi.n	a3, 36
400e0fda:	126232        	s32i	a3, a2, 72
400e0fdd:	942132        	l32i	a3, a1, 0x250
400e0fe0:	962122        	l32i	a2, a1, 0x258
400e0fe3:	802320        	add	a2, a3, a2
400e0fe6:	fcc222        	addi	a2, a2, -4
400e0fe9:	0278      	l32i.n	a7, a2, 0
400e0feb:	10c142        	addi	a4, a1, 16
400e0fee:	030c      	movi.n	a3, 0
400e0ff0:	02d422        	addmi	a2, a4, 0x200
400e0ff3:	9b2162        	l32i	a6, a1, 0x26c
400e0ff6:	3a4232        	s8i	a3, a2, 58
400e0ff9:	018696        	bltz	a6, 400e1015 <_vfiprintf_r+0x1305>
400e0ffc:	06cd      	mov.n	a12, a6
400e0ffe:	0b0c      	movi.n	a11, 0
400e1000:	07ad      	mov.n	a10, a7
400e1002:	bdea81        	l32r	a8, 400d07ac <_flash_cache_start+0x794>
400e1005:	0008e0        	callx8	a8
400e1008:	0a2d      	mov.n	a2, a10
400e100a:	1acc      	bnez.n	a10, 400e100f <_vfiprintf_r+0x12ff>
400e100c:	026e06        	j	400e19c8 <_vfiprintf_r+0x1cb8>
400e100f:	c0aa70        	sub	a10, a10, a7
400e1012:	0001c6        	j	400e101d <_vfiprintf_r+0x130d>
400e1015:	07ad      	mov.n	a10, a7
400e1017:	bc1c81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e101a:	0008e0        	callx8	a8
400e101d:	9b61a2        	s32i	a10, a1, 0x26c
400e1020:	020c      	movi.n	a2, 0
400e1022:	026886        	j	400e19c8 <_vfiprintf_r+0x1cb8>
400e1025:	041c      	movi.n	a4, 16
400e1027:	205540        	or	a5, a5, a4
400e102a:	02e557        	bbsi	a5, 5, 400e1030 <_vfiprintf_r+0x1320>
400e102d:	0034c6        	j	400e1104 <_vfiprintf_r+0x13f4>
400e1030:	912182        	l32i	a8, a1, 0x244
400e1033:	56bc      	beqz.n	a6, 400e106c <_vfiprintf_r+0x135c>
400e1035:	0ca287        	bge	a2, a8, 400e1045 <_vfiprintf_r+0x1335>
400e1038:	10c182        	addi	a8, a1, 16
400e103b:	b02280        	addx8	a2, a2, a8
400e103e:	02e8      	l32i.n	a14, a2, 0
400e1040:	1248      	l32i.n	a4, a2, 4
400e1042:	00ec06        	j	400e13f6 <_vfiprintf_r+0x16e6>
400e1045:	10c192        	addi	a9, a1, 16
400e1048:	30a242        	movi	a4, 0x230
400e104b:	494a      	add.n	a4, a9, a4
400e104d:	34a2d2        	movi	a13, 0x234
400e1050:	40a2c2        	movi	a12, 0x240
400e1053:	0149      	s32i.n	a4, a1, 0
400e1055:	09ed      	mov.n	a14, a9
400e1057:	01d9f2        	addmi	a15, a9, 0x100
400e105a:	d9da      	add.n	a13, a9, a13
400e105c:	c9ca      	add.n	a12, a9, a12
400e105e:	07bd      	mov.n	a11, a7
400e1060:	02ad      	mov.n	a10, a2
400e1062:	fe7c25        	call8	400df824 <get_arg$isra$0>
400e1065:	0ae8      	l32i.n	a14, a10, 0
400e1067:	1a48      	l32i.n	a4, a10, 4
400e1069:	00e246        	j	400e13f6 <_vfiprintf_r+0x16e6>
400e106c:	10c1a2        	addi	a10, a1, 16
400e106f:	631b      	addi.n	a6, a3, 1
400e1071:	b022a0        	addx8	a2, a2, a10
400e1074:	02a387        	bge	a3, a8, 400e107a <_vfiprintf_r+0x136a>
400e1077:	002046        	j	400e10fc <_vfiprintf_r+0x13ec>
400e107a:	f21c      	movi.n	a2, 31
400e107c:	482287        	blt	a2, a8, 400e10c8 <_vfiprintf_r+0x13b8>
400e107f:	10c1b2        	addi	a11, a1, 16
400e1082:	281b      	addi.n	a2, a8, 1
400e1084:	02db32        	addmi	a3, a11, 0x200
400e1087:	916122        	s32i	a2, a1, 0x244
400e108a:	122322        	l32i	a2, a3, 72
400e108d:	427b      	addi.n	a4, a2, 7
400e108f:	827c      	movi.n	a2, -8
400e1091:	102420        	and	a2, a4, a2
400e1094:	728b      	addi.n	a7, a2, 8
400e1096:	126372        	s32i	a7, a3, 72
400e1099:	841c      	movi.n	a4, 24
400e109b:	052477        	blt	a4, a7, 400e10a4 <_vfiprintf_r+0x1394>
400e109e:	112332        	l32i	a3, a3, 68
400e10a1:	000286        	j	400e10af <_vfiprintf_r+0x139f>
400e10a4:	042427        	blt	a4, a2, 400e10ac <_vfiprintf_r+0x139c>
400e10a7:	822c      	movi.n	a2, 40
400e10a9:	126322        	s32i	a2, a3, 72
400e10ac:	942132        	l32i	a3, a1, 0x250
400e10af:	962122        	l32i	a2, a1, 0x258
400e10b2:	232a      	add.n	a2, a3, a2
400e10b4:	f8c222        	addi	a2, a2, -8
400e10b7:	02e8      	l32i.n	a14, a2, 0
400e10b9:	1248      	l32i.n	a4, a2, 4
400e10bb:	10c132        	addi	a3, a1, 16
400e10be:	b02830        	addx8	a2, a8, a3
400e10c1:	02e9      	s32i.n	a14, a2, 0
400e10c3:	1249      	s32i.n	a4, a2, 4
400e10c5:	00cac6        	j	400e13f4 <_vfiprintf_r+0x16e4>
400e10c8:	10c142        	addi	a4, a1, 16
400e10cb:	02d422        	addmi	a2, a4, 0x200
400e10ce:	122232        	l32i	a3, a2, 72
400e10d1:	437b      	addi.n	a4, a3, 7
400e10d3:	837c      	movi.n	a3, -8
400e10d5:	103430        	and	a3, a4, a3
400e10d8:	738b      	addi.n	a7, a3, 8
400e10da:	126272        	s32i	a7, a2, 72
400e10dd:	841c      	movi.n	a4, 24
400e10df:	062477        	blt	a4, a7, 400e10e9 <_vfiprintf_r+0x13d9>
400e10e2:	112232        	l32i	a3, a2, 68
400e10e5:	0002c6        	j	400e10f4 <_vfiprintf_r+0x13e4>
400e10e8:	243700        	extui	a3, a0, 7, 3
400e10eb:	832c04        	lsi	f0, a12, 0x20c
400e10ee:	126232        	s32i	a3, a2, 72
400e10f1:	942132        	l32i	a3, a1, 0x250
400e10f4:	962122        	l32i	a2, a1, 0x258
400e10f7:	232a      	add.n	a2, a3, a2
400e10f9:	f8c222        	addi	a2, a2, -8
400e10fc:	02e8      	l32i.n	a14, a2, 0
400e10fe:	1248      	l32i.n	a4, a2, 4
400e1100:	00bc06        	j	400e13f4 <_vfiprintf_r+0x16e4>
400e1103:	041c00        	extui	a1, a0, 12, 1
400e1106:	109540        	and	a9, a5, a4
400e1109:	07d916        	beqz	a9, 400e118a <_vfiprintf_r+0x147a>
400e110c:	912142        	l32i	a4, a1, 0x244
400e110f:	d69c      	beqz.n	a6, 400e1130 <_vfiprintf_r+0x1420>
400e1111:	08a247        	bge	a2, a4, 400e111d <_vfiprintf_r+0x140d>
400e1114:	10c162        	addi	a6, a1, 16
400e1117:	b02260        	addx8	a2, a2, a6
400e111a:	0088c6        	j	400e1341 <_vfiprintf_r+0x1631>
400e111d:	10c182        	addi	a8, a1, 16
400e1120:	30a242        	movi	a4, 0x230
400e1123:	484a      	add.n	a4, a8, a4
400e1125:	0149      	s32i.n	a4, a1, 0
400e1127:	01d8f2        	addmi	a15, a8, 0x100
400e112a:	08ed      	mov.n	a14, a8
400e112c:	0089c6        	j	400e1357 <_vfiprintf_r+0x1647>
400e112f:	c19200        	mul16u	a9, a2, a0
400e1132:	631b10        	minu	a1, a11, a1
400e1135:	b02290        	addx8	a2, a2, a9
400e1138:	02a347        	bge	a3, a4, 400e113e <_vfiprintf_r+0x142e>
400e113b:	00ac46        	j	400e13f0 <_vfiprintf_r+0x16e0>
400e113e:	f21c      	movi.n	a2, 31
400e1140:	3d2247        	blt	a2, a4, 400e1181 <_vfiprintf_r+0x1471>
400e1143:	241b      	addi.n	a2, a4, 1
400e1145:	10c1a2        	addi	a10, a1, 16
400e1148:	916122        	s32i	a2, a1, 0x244
400e114b:	02da22        	addmi	a2, a10, 0x200
400e114e:	122232        	l32i	a3, a2, 72
400e1151:	871c      	movi.n	a7, 24
400e1153:	834b      	addi.n	a8, a3, 4
400e1155:	126282        	s32i	a8, a2, 72
400e1158:	052787        	blt	a7, a8, 400e1161 <_vfiprintf_r+0x1451>
400e115b:	112232        	l32i	a3, a2, 68
400e115e:	000286        	j	400e116c <_vfiprintf_r+0x145c>
400e1161:	042737        	blt	a7, a3, 400e1169 <_vfiprintf_r+0x1459>
400e1164:	432c      	movi.n	a3, 36
400e1166:	126232        	s32i	a3, a2, 72
400e1169:	942132        	l32i	a3, a1, 0x250
400e116c:	962122        	l32i	a2, a1, 0x258
400e116f:	10c1b2        	addi	a11, a1, 16
400e1172:	232a      	add.n	a2, a3, a2
400e1174:	fcc222        	addi	a2, a2, -4
400e1177:	02e8      	l32i.n	a14, a2, 0
400e1179:	b024b0        	addx8	a2, a4, a11
400e117c:	02e9      	s32i.n	a14, a2, 0
400e117e:	009c06        	j	400e13f2 <_vfiprintf_r+0x16e2>
400e1181:	10c132        	addi	a3, a1, 16
400e1184:	02d322        	addmi	a2, a3, 0x200
400e1187:	008f06        	j	400e13c7 <_vfiprintf_r+0x16b7>
400e118a:	044c      	movi.n	a4, 64
400e118c:	104540        	and	a4, a5, a4
400e118f:	0d1416        	beqz	a4, 400e1264 <_vfiprintf_r+0x1554>
400e1192:	912142        	l32i	a4, a1, 0x244
400e1195:	f6bc      	beqz.n	a6, 400e11d8 <_vfiprintf_r+0x14c8>
400e1197:	0ea247        	bge	a2, a4, 400e11a9 <_vfiprintf_r+0x1499>
400e119a:	10c142        	addi	a4, a1, 16
400e119d:	b02240        	addx8	a2, a2, a4
400e11a0:	0012e2        	l16ui	a14, a2, 0
400e11a3:	000ac6        	j	400e11d2 <_vfiprintf_r+0x14c2>
400e11a6:	000000        	ill
400e11a9:	10c162        	addi	a6, a1, 16
400e11ac:	30a242        	movi	a4, 0x230
400e11af:	464a      	add.n	a4, a6, a4
400e11b1:	34a2d2        	movi	a13, 0x234
400e11b4:	40a2c2        	movi	a12, 0x240
400e11b7:	06ed      	mov.n	a14, a6
400e11b9:	0149      	s32i.n	a4, a1, 0
400e11bb:	01d6f2        	addmi	a15, a6, 0x100
400e11be:	d6da      	add.n	a13, a6, a13
400e11c0:	c6ca      	add.n	a12, a6, a12
400e11c2:	07bd      	mov.n	a11, a7
400e11c4:	02ad      	mov.n	a10, a2
400e11c6:	a66192        	s32i	a9, a1, 0x298
400e11c9:	fe65a5        	call8	400df824 <get_arg$isra$0>
400e11cc:	001ae2        	l16ui	a14, a10, 0
400e11cf:	a62192        	l32i	a9, a1, 0x298
400e11d2:	094d      	mov.n	a4, a9
400e11d4:	008786        	j	400e13f6 <_vfiprintf_r+0x16e6>
400e11d7:	731b00        	maxu	a1, a11, a0
400e11da:	0ba347        	bge	a3, a4, 400e11e9 <_vfiprintf_r+0x14d9>
400e11dd:	10c182        	addi	a8, a1, 16
400e11e0:	b02280        	addx8	a2, a2, a8
400e11e3:	0012e2        	l16ui	a14, a2, 0
400e11e6:	003286        	j	400e12b4 <_vfiprintf_r+0x15a4>
400e11e9:	f21c      	movi.n	a2, 31
400e11eb:	412247        	blt	a2, a4, 400e1230 <_vfiprintf_r+0x1520>
400e11ee:	241b      	addi.n	a2, a4, 1
400e11f0:	10c192        	addi	a9, a1, 16
400e11f3:	916122        	s32i	a2, a1, 0x244
400e11f6:	02d922        	addmi	a2, a9, 0x200
400e11f9:	122232        	l32i	a3, a2, 72
400e11fc:	861c      	movi.n	a6, 24
400e11fe:	834b      	addi.n	a8, a3, 4
400e1200:	126282        	s32i	a8, a2, 72
400e1203:	052687        	blt	a6, a8, 400e120c <_vfiprintf_r+0x14fc>
400e1206:	112232        	l32i	a3, a2, 68
400e1209:	000286        	j	400e1217 <_vfiprintf_r+0x1507>
400e120c:	042637        	blt	a6, a3, 400e1214 <_vfiprintf_r+0x1504>
400e120f:	432c      	movi.n	a3, 36
400e1211:	126232        	s32i	a3, a2, 72
400e1214:	942132        	l32i	a3, a1, 0x250
400e1217:	962122        	l32i	a2, a1, 0x258
400e121a:	10c1a2        	addi	a10, a1, 16
400e121d:	232a      	add.n	a2, a3, a2
400e121f:	fcc222        	addi	a2, a2, -4
400e1222:	02e8      	l32i.n	a14, a2, 0
400e1224:	b044a0        	addx8	a4, a4, a10
400e1227:	04e9      	s32i.n	a14, a4, 0
400e1229:	f4e0e0        	extui	a14, a14, 0, 16
400e122c:	003fc6        	j	400e132f <_vfiprintf_r+0x161f>
400e122f:	c1b200        	mul16u	a11, a2, a0
400e1232:	db2210        	movt.s	f2, f2, b1
400e1235:	223202        	lsi	f0, a2, 136
400e1238:	841c12        	l16ui	a1, a12, 0x108
400e123b:	634b      	addi.n	a6, a3, 4
400e123d:	126262        	s32i	a6, a2, 72
400e1240:	052467        	blt	a4, a6, 400e1249 <_vfiprintf_r+0x1539>
400e1243:	112232        	l32i	a3, a2, 68
400e1246:	000286        	j	400e1254 <_vfiprintf_r+0x1544>
400e1249:	042437        	blt	a4, a3, 400e1251 <_vfiprintf_r+0x1541>
400e124c:	432c      	movi.n	a3, 36
400e124e:	126232        	s32i	a3, a2, 72
400e1251:	942132        	l32i	a3, a1, 0x250
400e1254:	962122        	l32i	a2, a1, 0x258
400e1257:	232a      	add.n	a2, a3, a2
400e1259:	fcc222        	addi	a2, a2, -4
400e125c:	0012e2        	l16ui	a14, a2, 0
400e125f:	003306        	j	400e132f <_vfiprintf_r+0x161f>
400e1262:	820000        	mull	a0, a0, a0
400e1265:	979121        	l32r	a2, 400c70ac <_rtc_text_end+0x70ac>
400e1268:	0602e5        	call8	400e7298 <_svfiprintf_r+0x870>
400e126b:	bc0032        	l8ui	a3, a0, 188
400e126e:	a28756        	bnez	a7, 400e0c9a <_vfiprintf_r+0xf8a>
400e1271:	620d      	lsi	f0, a2, 8
400e1273:	6010c1        	l32r	a12, 400b92b4 <_iram_end+0x2b760>
400e1276:	e2b022        	l32ai	a2, a0, 0x388
400e1279:	c60002        	l8ui	a0, a0, 198
400e127c:	005d      	mov.n	a5, a0
400e127e:	820000        	mull	a0, a0, a0
400e1281:	6210c1        	l32r	a12, 400b9ac4 <_iram_end+0x2bf70>
400e1284:	6a30a2        	lsi	f10, a0, 0x1a8
400e1287:	d268      	l32i.n	a6, a2, 52
400e1289:	c234a2        	lsi	f10, a4, 0x308
400e128c:	ed40a2        	s8i	a10, a0, 237
400e128f:	6908      	l32i.n	a0, a9, 24
400e1291:	d8f201        	l32r	a0, 400d765c <lookup_storage_from_name(char const*)+0x30>
400e1294:	d8da01        	l32r	a0, 400d75fc <bootloader_common_set_flash_cs_timing+0x68>
400e1297:	c8ca      	add.n	a12, a8, a12
400e1299:	07bd      	mov.n	a11, a7
400e129b:	02ad      	mov.n	a10, a2
400e129d:	fe5865        	call8	400df824 <get_arg$isra$0>
400e12a0:	000ae2        	l8ui	a14, a10, 0
400e12a3:	0053c6        	j	400e13f6 <_vfiprintf_r+0x16e6>
400e12a6:	731b      	addi.n	a7, a3, 1
400e12a8:	0da387        	bge	a3, a8, 400e12b9 <_vfiprintf_r+0x15a9>
400e12ab:	10c192        	addi	a9, a1, 16
400e12ae:	b02290        	addx8	a2, a2, a9
400e12b1:	0002e2        	l8ui	a14, a2, 0
400e12b4:	064d      	mov.n	a4, a6
400e12b6:	001dc6        	j	400e1331 <_vfiprintf_r+0x1621>
400e12b9:	f21c      	movi.n	a2, 31
400e12bb:	412287        	blt	a2, a8, 400e1300 <_vfiprintf_r+0x15f0>
400e12be:	281b      	addi.n	a2, a8, 1
400e12c0:	10c1a2        	addi	a10, a1, 16
400e12c3:	916122        	s32i	a2, a1, 0x244
400e12c6:	02da22        	addmi	a2, a10, 0x200
400e12c9:	122232        	l32i	a3, a2, 72
400e12cc:	841c      	movi.n	a4, 24
400e12ce:	634b      	addi.n	a6, a3, 4
400e12d0:	126262        	s32i	a6, a2, 72
400e12d3:	052467        	blt	a4, a6, 400e12dc <_vfiprintf_r+0x15cc>
400e12d6:	112232        	l32i	a3, a2, 68
400e12d9:	000286        	j	400e12e7 <_vfiprintf_r+0x15d7>
400e12dc:	042437        	blt	a4, a3, 400e12e4 <_vfiprintf_r+0x15d4>
400e12df:	432c      	movi.n	a3, 36
400e12e1:	126232        	s32i	a3, a2, 72
400e12e4:	942132        	l32i	a3, a1, 0x250
400e12e7:	962122        	l32i	a2, a1, 0x258
400e12ea:	10c1b2        	addi	a11, a1, 16
400e12ed:	232a      	add.n	a2, a3, a2
400e12ef:	fcc222        	addi	a2, a2, -4
400e12f2:	02e8      	l32i.n	a14, a2, 0
400e12f4:	b088b0        	addx8	a8, a8, a11
400e12f7:	08e9      	s32i.n	a14, a8, 0
400e12f9:	74e0e0        	extui	a14, a14, 0, 8
400e12fc:	000bc6        	j	400e132f <_vfiprintf_r+0x161f>
400e12ff:	c13200        	mul16u	a3, a2, a0
400e1302:	d32210        	movt	a2, a2, b1
400e1305:	223202        	lsi	f0, a2, 136
400e1308:	841c12        	l16ui	a1, a12, 0x108
400e130b:	634b      	addi.n	a6, a3, 4
400e130d:	126262        	s32i	a6, a2, 72
400e1310:	052467        	blt	a4, a6, 400e1319 <_vfiprintf_r+0x1609>
400e1313:	112232        	l32i	a3, a2, 68
400e1316:	000286        	j	400e1324 <_vfiprintf_r+0x1614>
400e1319:	042437        	blt	a4, a3, 400e1321 <_vfiprintf_r+0x1611>
400e131c:	432c      	movi.n	a3, 36
400e131e:	126232        	s32i	a3, a2, 72
400e1321:	942132        	l32i	a3, a1, 0x250
400e1324:	962122        	l32i	a2, a1, 0x258
400e1327:	232a      	add.n	a2, a3, a2
400e1329:	fcc222        	addi	a2, a2, -4
400e132c:	0002e2        	l8ui	a14, a2, 0
400e132f:	040c      	movi.n	a4, 0
400e1331:	073d      	mov.n	a3, a7
400e1333:	002fc6        	j	400e13f6 <_vfiprintf_r+0x16e6>
400e1336:	66bc      	beqz.n	a6, 400e1370 <_vfiprintf_r+0x1660>
400e1338:	0ca287        	bge	a2, a8, 400e1348 <_vfiprintf_r+0x1638>
400e133b:	10c142        	addi	a4, a1, 16
400e133e:	b02240        	addx8	a2, a2, a4
400e1341:	02e8      	l32i.n	a14, a2, 0
400e1343:	0008c6        	j	400e136a <_vfiprintf_r+0x165a>
400e1346:	620000        	lsi	f0, a0, 0x188
400e1349:	4210c1        	l32r	a12, 400b1b8c <_iram_end+0x24038>
400e134c:	4a30a2        	lsi	f10, a0, 0x128
400e134f:	014946        	j	400e1878 <_vfiprintf_r+0x1b68>
400e1352:	01d6f2        	addmi	a15, a6, 0x100
400e1355:	06ed      	mov.n	a14, a6
400e1357:	34a2d2        	movi	a13, 0x234
400e135a:	40a2c2        	movi	a12, 0x240
400e135d:	deda      	add.n	a13, a14, a13
400e135f:	ceca      	add.n	a12, a14, a12
400e1361:	07bd      	mov.n	a11, a7
400e1363:	02ad      	mov.n	a10, a2
400e1365:	fe4be5        	call8	400df824 <get_arg$isra$0>
400e1368:	0ae8      	l32i.n	a14, a10, 0
400e136a:	036d      	mov.n	a6, a3
400e136c:	002086        	j	400e13f2 <_vfiprintf_r+0x16e2>
400e136f:	631b00        	minu	a1, a11, a0
400e1372:	08a387        	bge	a3, a8, 400e137e <_vfiprintf_r+0x166e>
400e1375:	10c182        	addi	a8, a1, 16
400e1378:	b02280        	addx8	a2, a2, a8
400e137b:	001c46        	j	400e13f0 <_vfiprintf_r+0x16e0>
400e137e:	f21c      	movi.n	a2, 31
400e1380:	3d2287        	blt	a2, a8, 400e13c1 <_vfiprintf_r+0x16b1>
400e1383:	281b      	addi.n	a2, a8, 1
400e1385:	10c192        	addi	a9, a1, 16
400e1388:	916122        	s32i	a2, a1, 0x244
400e138b:	02d922        	addmi	a2, a9, 0x200
400e138e:	122232        	l32i	a3, a2, 72
400e1391:	841c      	movi.n	a4, 24
400e1393:	734b      	addi.n	a7, a3, 4
400e1395:	126272        	s32i	a7, a2, 72
400e1398:	052477        	blt	a4, a7, 400e13a1 <_vfiprintf_r+0x1691>
400e139b:	112232        	l32i	a3, a2, 68
400e139e:	000286        	j	400e13ac <_vfiprintf_r+0x169c>
400e13a1:	042437        	blt	a4, a3, 400e13a9 <_vfiprintf_r+0x1699>
400e13a4:	432c      	movi.n	a3, 36
400e13a6:	126232        	s32i	a3, a2, 72
400e13a9:	942132        	l32i	a3, a1, 0x250
400e13ac:	962122        	l32i	a2, a1, 0x258
400e13af:	10c1a2        	addi	a10, a1, 16
400e13b2:	232a      	add.n	a2, a3, a2
400e13b4:	fcc222        	addi	a2, a2, -4
400e13b7:	02e8      	l32i.n	a14, a2, 0
400e13b9:	b088a0        	addx8	a8, a8, a10
400e13bc:	08e9      	s32i.n	a14, a8, 0
400e13be:	000c06        	j	400e13f2 <_vfiprintf_r+0x16e2>
400e13c1:	10c1b2        	addi	a11, a1, 16
400e13c4:	02db22        	addmi	a2, a11, 0x200
400e13c7:	122232        	l32i	a3, a2, 72
400e13ca:	841c      	movi.n	a4, 24
400e13cc:	734b      	addi.n	a7, a3, 4
400e13ce:	126272        	s32i	a7, a2, 72
400e13d1:	082477        	blt	a4, a7, 400e13dd <_vfiprintf_r+0x16cd>
400e13d4:	112232        	l32i	a3, a2, 68
400e13d7:	000346        	j	400e13e8 <_vfiprintf_r+0x16d8>
400e13da:	000000        	ill
400e13dd:	042437        	blt	a4, a3, 400e13e5 <_vfiprintf_r+0x16d5>
400e13e0:	432c      	movi.n	a3, 36
400e13e2:	126232        	s32i	a3, a2, 72
400e13e5:	942132        	l32i	a3, a1, 0x250
400e13e8:	962122        	l32i	a2, a1, 0x258
400e13eb:	232a      	add.n	a2, a3, a2
400e13ed:	fcc222        	addi	a2, a2, -4
400e13f0:	02e8      	l32i.n	a14, a2, 0
400e13f2:	040c      	movi.n	a4, 0
400e13f4:	063d      	mov.n	a3, a6
400e13f6:	120c      	movi.n	a2, 1
400e13f8:	010246        	j	400e1805 <_vfiprintf_r+0x1af5>
400e13fb:	bcf441        	l32r	a4, 400d07cc <_flash_cache_start+0x7b4>
400e13fe:	9f6142        	s32i	a4, a1, 0x27c
400e1401:	02e557        	bbsi	a5, 5, 400e1407 <_vfiprintf_r+0x16f7>
400e1404:	003606        	j	400e14e0 <_vfiprintf_r+0x17d0>
400e1407:	912192        	l32i	a9, a1, 0x244
400e140a:	a6bc      	beqz.n	a6, 400e1448 <_vfiprintf_r+0x1738>
400e140c:	0ca297        	bge	a2, a9, 400e141c <_vfiprintf_r+0x170c>
400e140f:	10c162        	addi	a6, a1, 16
400e1412:	b02260        	addx8	a2, a2, a6
400e1415:	02e8      	l32i.n	a14, a2, 0
400e1417:	1248      	l32i.n	a4, a2, 4
400e1419:	00f146        	j	400e17e2 <_vfiprintf_r+0x1ad2>
400e141c:	10c192        	addi	a9, a1, 16
400e141f:	30a242        	movi	a4, 0x230
400e1422:	494a      	add.n	a4, a9, a4
400e1424:	34a2d2        	movi	a13, 0x234
400e1427:	40a2c2        	movi	a12, 0x240
400e142a:	0149      	s32i.n	a4, a1, 0
400e142c:	09ed      	mov.n	a14, a9
400e142e:	01d9f2        	addmi	a15, a9, 0x100
400e1431:	d9da      	add.n	a13, a9, a13
400e1433:	c9ca      	add.n	a12, a9, a12
400e1435:	07bd      	mov.n	a11, a7
400e1437:	20a220        	or	a10, a2, a2
400e143a:	a46182        	s32i	a8, a1, 0x290
400e143d:	fe3e65        	call8	400df824 <get_arg$isra$0>
400e1440:	0ae8      	l32i.n	a14, a10, 0
400e1442:	1a48      	l32i.n	a4, a10, 4
400e1444:	008fc6        	j	400e1687 <_vfiprintf_r+0x1977>
400e1447:	c1a200        	mul16u	a10, a2, a0
400e144a:	631b10        	minu	a1, a11, a1
400e144d:	b022a0        	addx8	a2, a2, a10
400e1450:	02a397        	bge	a3, a9, 400e1456 <_vfiprintf_r+0x1746>
400e1453:	002046        	j	400e14d8 <_vfiprintf_r+0x17c8>
400e1456:	f21c      	movi.n	a2, 31
400e1458:	482297        	blt	a2, a9, 400e14a4 <_vfiprintf_r+0x1794>
400e145b:	10c1b2        	addi	a11, a1, 16
400e145e:	291b      	addi.n	a2, a9, 1
400e1460:	02db32        	addmi	a3, a11, 0x200
400e1463:	916122        	s32i	a2, a1, 0x244
400e1466:	122322        	l32i	a2, a3, 72
400e1469:	427b      	addi.n	a4, a2, 7
400e146b:	827c      	movi.n	a2, -8
400e146d:	102420        	and	a2, a4, a2
400e1470:	728b      	addi.n	a7, a2, 8
400e1472:	126372        	s32i	a7, a3, 72
400e1475:	841c      	movi.n	a4, 24
400e1477:	052477        	blt	a4, a7, 400e1480 <_vfiprintf_r+0x1770>
400e147a:	112332        	l32i	a3, a3, 68
400e147d:	000286        	j	400e148b <_vfiprintf_r+0x177b>
400e1480:	042427        	blt	a4, a2, 400e1488 <_vfiprintf_r+0x1778>
400e1483:	822c      	movi.n	a2, 40
400e1485:	126322        	s32i	a2, a3, 72
400e1488:	942132        	l32i	a3, a1, 0x250
400e148b:	962122        	l32i	a2, a1, 0x258
400e148e:	232a      	add.n	a2, a3, a2
400e1490:	f8c222        	addi	a2, a2, -8
400e1493:	02e8      	l32i.n	a14, a2, 0
400e1495:	1248      	l32i.n	a4, a2, 4
400e1497:	10c132        	addi	a3, a1, 16
400e149a:	b02930        	addx8	a2, a9, a3
400e149d:	02e9      	s32i.n	a14, a2, 0
400e149f:	1249      	s32i.n	a4, a2, 4
400e14a1:	00cec6        	j	400e17e0 <_vfiprintf_r+0x1ad0>
400e14a4:	10c142        	addi	a4, a1, 16
400e14a7:	02d432        	addmi	a3, a4, 0x200
400e14aa:	122322        	l32i	a2, a3, 72
400e14ad:	427b      	addi.n	a4, a2, 7
400e14af:	827c      	movi.n	a2, -8
400e14b1:	102420        	and	a2, a4, a2
400e14b4:	728b      	addi.n	a7, a2, 8
400e14b6:	126372        	s32i	a7, a3, 72
400e14b9:	841c      	movi.n	a4, 24
400e14bb:	062477        	blt	a4, a7, 400e14c5 <_vfiprintf_r+0x17b5>
400e14be:	112332        	l32i	a3, a3, 68
400e14c1:	0002c6        	j	400e14d0 <_vfiprintf_r+0x17c0>
400e14c4:	242700        	extui	a2, a0, 7, 3
400e14c7:	822c04        	lsi	f0, a12, 0x208
400e14ca:	126322        	s32i	a2, a3, 72
400e14cd:	942132        	l32i	a3, a1, 0x250
400e14d0:	962122        	l32i	a2, a1, 0x258
400e14d3:	232a      	add.n	a2, a3, a2
400e14d5:	f8c222        	addi	a2, a2, -8
400e14d8:	02e8      	l32i.n	a14, a2, 0
400e14da:	1248      	l32i.n	a4, a2, 4
400e14dc:	00c006        	j	400e17e0 <_vfiprintf_r+0x1ad0>
400e14df:	091c00        	l32e	a0, a12, -60
400e14e2:	109590        	and	a9, a5, a9
400e14e5:	07d916        	beqz	a9, 400e1566 <_vfiprintf_r+0x1856>
400e14e8:	912142        	l32i	a4, a1, 0x244
400e14eb:	d69c      	beqz.n	a6, 400e150c <_vfiprintf_r+0x17fc>
400e14ed:	08a247        	bge	a2, a4, 400e14f9 <_vfiprintf_r+0x17e9>
400e14f0:	10c162        	addi	a6, a1, 16
400e14f3:	b02260        	addx8	a2, a2, a6
400e14f6:	008b86        	j	400e1728 <_vfiprintf_r+0x1a18>
400e14f9:	10c192        	addi	a9, a1, 16
400e14fc:	30a242        	movi	a4, 0x230
400e14ff:	494a      	add.n	a4, a9, a4
400e1501:	0149      	s32i.n	a4, a1, 0
400e1503:	01d9f2        	addmi	a15, a9, 0x100
400e1506:	09ed      	mov.n	a14, a9
400e1508:	008d06        	j	400e1740 <_vfiprintf_r+0x1a30>
400e150b:	c1a200        	mul16u	a10, a2, a0
400e150e:	631b10        	minu	a1, a11, a1
400e1511:	b022a0        	addx8	a2, a2, a10
400e1514:	02a347        	bge	a3, a4, 400e151a <_vfiprintf_r+0x180a>
400e1517:	00b046        	j	400e17dc <_vfiprintf_r+0x1acc>
400e151a:	f21c      	movi.n	a2, 31
400e151c:	3d2247        	blt	a2, a4, 400e155d <_vfiprintf_r+0x184d>
400e151f:	241b      	addi.n	a2, a4, 1
400e1521:	10c1b2        	addi	a11, a1, 16
400e1524:	916122        	s32i	a2, a1, 0x244
400e1527:	02db22        	addmi	a2, a11, 0x200
400e152a:	122232        	l32i	a3, a2, 72
400e152d:	871c      	movi.n	a7, 24
400e152f:	934b      	addi.n	a9, a3, 4
400e1531:	126292        	s32i	a9, a2, 72
400e1534:	052797        	blt	a7, a9, 400e153d <_vfiprintf_r+0x182d>
400e1537:	112232        	l32i	a3, a2, 68
400e153a:	000286        	j	400e1548 <_vfiprintf_r+0x1838>
400e153d:	042737        	blt	a7, a3, 400e1545 <_vfiprintf_r+0x1835>
400e1540:	432c      	movi.n	a3, 36
400e1542:	126232        	s32i	a3, a2, 72
400e1545:	942132        	l32i	a3, a1, 0x250
400e1548:	962122        	l32i	a2, a1, 0x258
400e154b:	232a      	add.n	a2, a3, a2
400e154d:	fcc222        	addi	a2, a2, -4
400e1550:	02e8      	l32i.n	a14, a2, 0
400e1552:	10c132        	addi	a3, a1, 16
400e1555:	b02430        	addx8	a2, a4, a3
400e1558:	02e9      	s32i.n	a14, a2, 0
400e155a:	00a006        	j	400e17de <_vfiprintf_r+0x1ace>
400e155d:	10c142        	addi	a4, a1, 16
400e1560:	02d422        	addmi	a2, a4, 0x200
400e1563:	0093c6        	j	400e17b6 <_vfiprintf_r+0x1aa6>
400e1566:	044c      	movi.n	a4, 64
400e1568:	104540        	and	a4, a5, a4
400e156b:	0d5416        	beqz	a4, 400e1644 <_vfiprintf_r+0x1934>
400e156e:	912142        	l32i	a4, a1, 0x244
400e1571:	043616        	beqz	a6, 400e15b8 <_vfiprintf_r+0x18a8>
400e1574:	0da247        	bge	a2, a4, 400e1585 <_vfiprintf_r+0x1875>
400e1577:	10c162        	addi	a6, a1, 16
400e157a:	b02260        	addx8	a2, a2, a6
400e157d:	0012e2        	l16ui	a14, a2, 0
400e1580:	094d      	mov.n	a4, a9
400e1582:	009706        	j	400e17e2 <_vfiprintf_r+0x1ad2>
400e1585:	10c1a2        	addi	a10, a1, 16
400e1588:	30a242        	movi	a4, 0x230
400e158b:	4a4a      	add.n	a4, a10, a4
400e158d:	34a2d2        	movi	a13, 0x234
400e1590:	40a2c2        	movi	a12, 0x240
400e1593:	0aed      	mov.n	a14, a10
400e1595:	0149      	s32i.n	a4, a1, 0
400e1597:	01daf2        	addmi	a15, a10, 0x100
400e159a:	dada      	add.n	a13, a10, a13
400e159c:	caca      	add.n	a12, a10, a12
400e159e:	07bd      	mov.n	a11, a7
400e15a0:	20a220        	or	a10, a2, a2
400e15a3:	a66192        	s32i	a9, a1, 0x298
400e15a6:	a46182        	s32i	a8, a1, 0x290
400e15a9:	fe27a5        	call8	400df824 <get_arg$isra$0>
400e15ac:	a62192        	l32i	a9, a1, 0x298
400e15af:	001ae2        	l16ui	a14, a10, 0
400e15b2:	094d      	mov.n	a4, a9
400e15b4:	0033c6        	j	400e1687 <_vfiprintf_r+0x1977>
400e15b7:	731b00        	maxu	a1, a11, a0
400e15ba:	0ba347        	bge	a3, a4, 400e15c9 <_vfiprintf_r+0x18b9>
400e15bd:	10c1b2        	addi	a11, a1, 16
400e15c0:	b022b0        	addx8	a2, a2, a11
400e15c3:	0012e2        	l16ui	a14, a2, 0
400e15c6:	003446        	j	400e169b <_vfiprintf_r+0x198b>
400e15c9:	f21c      	movi.n	a2, 31
400e15cb:	412247        	blt	a2, a4, 400e1610 <_vfiprintf_r+0x1900>
400e15ce:	241b      	addi.n	a2, a4, 1
400e15d0:	10c132        	addi	a3, a1, 16
400e15d3:	916122        	s32i	a2, a1, 0x244
400e15d6:	02d322        	addmi	a2, a3, 0x200
400e15d9:	122232        	l32i	a3, a2, 72
400e15dc:	861c      	movi.n	a6, 24
400e15de:	934b      	addi.n	a9, a3, 4
400e15e0:	126292        	s32i	a9, a2, 72
400e15e3:	052697        	blt	a6, a9, 400e15ec <_vfiprintf_r+0x18dc>
400e15e6:	112232        	l32i	a3, a2, 68
400e15e9:	000286        	j	400e15f7 <_vfiprintf_r+0x18e7>
400e15ec:	042637        	blt	a6, a3, 400e15f4 <_vfiprintf_r+0x18e4>
400e15ef:	432c      	movi.n	a3, 36
400e15f1:	126232        	s32i	a3, a2, 72
400e15f4:	942132        	l32i	a3, a1, 0x250
400e15f7:	962122        	l32i	a2, a1, 0x258
400e15fa:	10c162        	addi	a6, a1, 16
400e15fd:	232a      	add.n	a2, a3, a2
400e15ff:	fcc222        	addi	a2, a2, -4
400e1602:	02e8      	l32i.n	a14, a2, 0
400e1604:	b04460        	addx8	a4, a4, a6
400e1607:	04e9      	s32i.n	a14, a4, 0
400e1609:	f4e0e0        	extui	a14, a14, 0, 16
400e160c:	004186        	j	400e1716 <_vfiprintf_r+0x1a06>
400e160f:	c19200        	mul16u	a9, a2, a0
400e1612:	d92210        	lsi	f1, a2, 0x364
400e1615:	223202        	lsi	f0, a2, 136
400e1618:	841c12        	l16ui	a1, a12, 0x108
400e161b:	634b      	addi.n	a6, a3, 4
400e161d:	126262        	s32i	a6, a2, 72
400e1620:	052467        	blt	a4, a6, 400e1629 <_vfiprintf_r+0x1919>
400e1623:	112232        	l32i	a3, a2, 68
400e1626:	000286        	j	400e1634 <_vfiprintf_r+0x1924>
400e1629:	042437        	blt	a4, a3, 400e1631 <_vfiprintf_r+0x1921>
400e162c:	432c      	movi.n	a3, 36
400e162e:	126232        	s32i	a3, a2, 72
400e1631:	942132        	l32i	a3, a1, 0x250
400e1634:	962122        	l32i	a2, a1, 0x258
400e1637:	232a      	add.n	a2, a3, a2
400e1639:	fcc222        	addi	a2, a2, -4
400e163c:	0012e2        	l16ui	a14, a2, 0
400e163f:	0034c6        	j	400e1716 <_vfiprintf_r+0x1a06>
400e1642:	920000        	lsi	f0, a0, 0x248
400e1645:	979121        	l32r	a2, 400c748c <_rtc_text_end+0x748c>
400e1648:	c602e5        	call8	400a7678 <_iram_end+0x19b24>
400e164b:	bc0033        	lsi	f3, a0, 0x2f0
400e164e:	a297c6        	j	400ca0b1 <_rtc_text_end+0xa0b1>
400e1651:	0e          	.byte 0xe
400e1652:	10c1a2        	addi	a10, a1, 16
400e1655:	b022a0        	addx8	a2, a2, a10
400e1658:	0002e2        	l8ui	a14, a2, 0
400e165b:	0060c6        	j	400e17e2 <_vfiprintf_r+0x1ad2>
400e165e:	000000        	ill
400e1661:	10c1b2        	addi	a11, a1, 16
400e1664:	30a262        	movi	a6, 0x230
400e1667:	6b6a      	add.n	a6, a11, a6
400e1669:	34a2d2        	movi	a13, 0x234
400e166c:	40a2c2        	movi	a12, 0x240
400e166f:	0bed      	mov.n	a14, a11
400e1671:	01dbf2        	addmi	a15, a11, 0x100
400e1674:	dbda      	add.n	a13, a11, a13
400e1676:	cbca      	add.n	a12, a11, a12
400e1678:	0169      	s32i.n	a6, a1, 0
400e167a:	07bd      	mov.n	a11, a7
400e167c:	02ad      	mov.n	a10, a2
400e167e:	a46182        	s32i	a8, a1, 0x290
400e1681:	fe1a25        	call8	400df824 <get_arg$isra$0>
400e1684:	000ae2        	l8ui	a14, a10, 0
400e1687:	a42182        	l32i	a8, a1, 0x290
400e168a:	005506        	j	400e17e2 <_vfiprintf_r+0x1ad2>
400e168d:	731b      	addi.n	a7, a3, 1
400e168f:	0da397        	bge	a3, a9, 400e16a0 <_vfiprintf_r+0x1990>
400e1692:	10c132        	addi	a3, a1, 16
400e1695:	b02230        	addx8	a2, a2, a3
400e1698:	0002e2        	l8ui	a14, a2, 0
400e169b:	064d      	mov.n	a4, a6
400e169d:	001dc6        	j	400e1718 <_vfiprintf_r+0x1a08>
400e16a0:	f21c      	movi.n	a2, 31
400e16a2:	412297        	blt	a2, a9, 400e16e7 <_vfiprintf_r+0x19d7>
400e16a5:	291b      	addi.n	a2, a9, 1
400e16a7:	10c142        	addi	a4, a1, 16
400e16aa:	916122        	s32i	a2, a1, 0x244
400e16ad:	02d422        	addmi	a2, a4, 0x200
400e16b0:	122232        	l32i	a3, a2, 72
400e16b3:	841c      	movi.n	a4, 24
400e16b5:	634b      	addi.n	a6, a3, 4
400e16b7:	126262        	s32i	a6, a2, 72
400e16ba:	062467        	blt	a4, a6, 400e16c4 <_vfiprintf_r+0x19b4>
400e16bd:	112232        	l32i	a3, a2, 68
400e16c0:	0002c6        	j	400e16cf <_vfiprintf_r+0x19bf>
400e16c3:	243700        	extui	a3, a0, 7, 3
400e16c6:	432c04        	lsi	f0, a12, 0x10c
400e16c9:	126232        	s32i	a3, a2, 72
400e16cc:	942132        	l32i	a3, a1, 0x250
400e16cf:	962122        	l32i	a2, a1, 0x258
400e16d2:	10c162        	addi	a6, a1, 16
400e16d5:	232a      	add.n	a2, a3, a2
400e16d7:	fcc222        	addi	a2, a2, -4
400e16da:	02e8      	l32i.n	a14, a2, 0
400e16dc:	b09960        	addx8	a9, a9, a6
400e16df:	09e9      	s32i.n	a14, a9, 0
400e16e1:	74e0e0        	extui	a14, a14, 0, 8
400e16e4:	000b86        	j	400e1716 <_vfiprintf_r+0x1a06>
400e16e7:	10c192        	addi	a9, a1, 16
400e16ea:	02d922        	addmi	a2, a9, 0x200
400e16ed:	122232        	l32i	a3, a2, 72
400e16f0:	841c      	movi.n	a4, 24
400e16f2:	634b      	addi.n	a6, a3, 4
400e16f4:	126262        	s32i	a6, a2, 72
400e16f7:	052467        	blt	a4, a6, 400e1700 <_vfiprintf_r+0x19f0>
400e16fa:	112232        	l32i	a3, a2, 68
400e16fd:	000286        	j	400e170b <_vfiprintf_r+0x19fb>
400e1700:	042437        	blt	a4, a3, 400e1708 <_vfiprintf_r+0x19f8>
400e1703:	432c      	movi.n	a3, 36
400e1705:	126232        	s32i	a3, a2, 72
400e1708:	942132        	l32i	a3, a1, 0x250
400e170b:	962122        	l32i	a2, a1, 0x258
400e170e:	232a      	add.n	a2, a3, a2
400e1710:	fcc222        	addi	a2, a2, -4
400e1713:	0002e2        	l8ui	a14, a2, 0
400e1716:	040c      	movi.n	a4, 0
400e1718:	073d      	mov.n	a3, a7
400e171a:	003106        	j	400e17e2 <_vfiprintf_r+0x1ad2>
400e171d:	d6bc      	beqz.n	a6, 400e175e <_vfiprintf_r+0x1a4e>
400e171f:	0ea297        	bge	a2, a9, 400e1731 <_vfiprintf_r+0x1a21>
400e1722:	10c1a2        	addi	a10, a1, 16
400e1725:	b022a0        	addx8	a2, a2, a10
400e1728:	02e8      	l32i.n	a14, a2, 0
400e172a:	036d      	mov.n	a6, a3
400e172c:	002b86        	j	400e17de <_vfiprintf_r+0x1ace>
400e172f:	b20000        	mulsh	a0, a0, a0
400e1732:	4210c1        	l32r	a12, 400b1f74 <_iram_end+0x24420>
400e1735:	4a30a2        	lsi	f10, a0, 0x128
400e1738:	494b      	addi.n	a4, a9, 4
400e173a:	dbf201        	l32r	a0, 400d8704 <nvs::Page::mLoadEntryTable()+0x194>
400e173d:	0bed01        	l32r	a0, 400a46f4 <_iram_end+0x16ba0>
400e1740:	34a2d2        	movi	a13, 0x234
400e1743:	40a2c2        	movi	a12, 0x240
400e1746:	deda      	add.n	a13, a14, a13
400e1748:	ceca      	add.n	a12, a14, a12
400e174a:	07bd      	mov.n	a11, a7
400e174c:	02ad      	mov.n	a10, a2
400e174e:	a46182        	s32i	a8, a1, 0x290
400e1751:	fe0d25        	call8	400df824 <get_arg$isra$0>
400e1754:	0ae8      	l32i.n	a14, a10, 0
400e1756:	036d      	mov.n	a6, a3
400e1758:	a42182        	l32i	a8, a1, 0x290
400e175b:	001fc6        	j	400e17de <_vfiprintf_r+0x1ace>
400e175e:	631b      	addi.n	a6, a3, 1
400e1760:	08a397        	bge	a3, a9, 400e176c <_vfiprintf_r+0x1a5c>
400e1763:	10c132        	addi	a3, a1, 16
400e1766:	b02230        	addx8	a2, a2, a3
400e1769:	001bc6        	j	400e17dc <_vfiprintf_r+0x1acc>
400e176c:	f21c      	movi.n	a2, 31
400e176e:	3e2297        	blt	a2, a9, 400e17b0 <_vfiprintf_r+0x1aa0>
400e1771:	291b      	addi.n	a2, a9, 1
400e1773:	10c142        	addi	a4, a1, 16
400e1776:	916122        	s32i	a2, a1, 0x244
400e1779:	02d422        	addmi	a2, a4, 0x200
400e177c:	122232        	l32i	a3, a2, 72
400e177f:	841c      	movi.n	a4, 24
400e1781:	734b      	addi.n	a7, a3, 4
400e1783:	126272        	s32i	a7, a2, 72
400e1786:	062477        	blt	a4, a7, 400e1790 <_vfiprintf_r+0x1a80>
400e1789:	112232        	l32i	a3, a2, 68
400e178c:	0002c6        	j	400e179b <_vfiprintf_r+0x1a8b>
400e178f:	243700        	extui	a3, a0, 7, 3
400e1792:	432c04        	lsi	f0, a12, 0x10c
400e1795:	126232        	s32i	a3, a2, 72
400e1798:	942132        	l32i	a3, a1, 0x250
400e179b:	962122        	l32i	a2, a1, 0x258
400e179e:	10c1a2        	addi	a10, a1, 16
400e17a1:	232a      	add.n	a2, a3, a2
400e17a3:	fcc222        	addi	a2, a2, -4
400e17a6:	02e8      	l32i.n	a14, a2, 0
400e17a8:	b099a0        	addx8	a9, a9, a10
400e17ab:	09e9      	s32i.n	a14, a9, 0
400e17ad:	000b46        	j	400e17de <_vfiprintf_r+0x1ace>
400e17b0:	10c1b2        	addi	a11, a1, 16
400e17b3:	02db22        	addmi	a2, a11, 0x200
400e17b6:	122232        	l32i	a3, a2, 72
400e17b9:	841c      	movi.n	a4, 24
400e17bb:	734b      	addi.n	a7, a3, 4
400e17bd:	126272        	s32i	a7, a2, 72
400e17c0:	052477        	blt	a4, a7, 400e17c9 <_vfiprintf_r+0x1ab9>
400e17c3:	112232        	l32i	a3, a2, 68
400e17c6:	000286        	j	400e17d4 <_vfiprintf_r+0x1ac4>
400e17c9:	042437        	blt	a4, a3, 400e17d1 <_vfiprintf_r+0x1ac1>
400e17cc:	432c      	movi.n	a3, 36
400e17ce:	126232        	s32i	a3, a2, 72
400e17d1:	942132        	l32i	a3, a1, 0x250
400e17d4:	962122        	l32i	a2, a1, 0x258
400e17d7:	232a      	add.n	a2, a3, a2
400e17d9:	fcc222        	addi	a2, a2, -4
400e17dc:	02e8      	l32i.n	a14, a2, 0
400e17de:	040c      	movi.n	a4, 0
400e17e0:	063d      	mov.n	a3, a6
400e17e2:	202e40        	or	a2, a14, a4
400e17e5:	429c      	beqz.n	a2, 400e17fd <_vfiprintf_r+0x1aed>
400e17e7:	126507        	bbci	a5, 0, 400e17fd <_vfiprintf_r+0x1aed>
400e17ea:	10c192        	addi	a9, a1, 16
400e17ed:	02d922        	addmi	a2, a9, 0x200
400e17f0:	063c      	movi.n	a6, 48
400e17f2:	384262        	s8i	a6, a2, 56
400e17f5:	394282        	s8i	a8, a2, 57
400e17f8:	220c      	movi.n	a2, 2
400e17fa:	205520        	or	a5, a5, a2
400e17fd:	ffab22        	movi	a2, 0xfffffbff
400e1800:	105520        	and	a5, a5, a2
400e1803:	220c      	movi.n	a2, 2
400e1805:	10c1a2        	addi	a10, a1, 16
400e1808:	00a072        	movi	a7, 0
400e180b:	02da62        	addmi	a6, a10, 0x200
400e180e:	3a4672        	s8i	a7, a6, 58
400e1811:	9a6132        	s32i	a3, a1, 0x268
400e1814:	9b2132        	l32i	a3, a1, 0x26c
400e1817:	005396        	bltz	a3, 400e1820 <_vfiprintf_r+0x1b10>
400e181a:	7faf32        	movi	a3, -129
400e181d:	105530        	and	a5, a5, a3
400e1820:	206e40        	or	a6, a14, a4
400e1823:	180c      	movi.n	a8, 1
400e1825:	030c      	movi.n	a3, 0
400e1827:	933860        	movnez	a3, a8, a6
400e182a:	743030        	extui	a3, a3, 0, 8
400e182d:	73cc      	bnez.n	a3, 400e1838 <_vfiprintf_r+0x1b28>
400e182f:	9b2162        	l32i	a6, a1, 0x26c
400e1832:	933860        	movnez	a3, a8, a6
400e1835:	140316        	beqz	a3, 400e1979 <_vfiprintf_r+0x1c69>
400e1838:	4a1226        	beqi	a2, 1, 400e1886 <_vfiprintf_r+0x1b76>
400e183b:	022266        	bnei	a2, 2, 400e1841 <_vfiprintf_r+0x1b31>
400e183e:	0041c6        	j	400e1949 <_vfiprintf_r+0x1c39>
400e1841:	90a182        	movi	a8, 0x190
400e1844:	881a      	add.n	a8, a8, a1
400e1846:	64c872        	addi	a7, a8, 100
400e1849:	2420e0        	extui	a2, a14, 0, 3
400e184c:	013430        	slli	a3, a4, 29
400e184f:	41e3e0        	srli	a14, a14, 3
400e1852:	770b      	addi.n	a7, a7, -1
400e1854:	30c222        	addi	a2, a2, 48
400e1857:	20e3e0        	or	a14, a3, a14
400e185a:	414340        	srli	a4, a4, 3
400e185d:	004722        	s8i	a2, a7, 0
400e1860:	206e40        	or	a6, a14, a4
400e1863:	fe2656        	bnez	a6, 400e1849 <_vfiprintf_r+0x1b39>
400e1866:	d0c232        	addi	a3, a2, -48
400e1869:	120c      	movi.n	a2, 1
400e186b:	832630        	moveqz	a2, a6, a3
400e186e:	742020        	extui	a2, a2, 0, 8
400e1871:	11f216        	beqz	a2, 400e1994 <_vfiprintf_r+0x1c84>
400e1874:	02e507        	bbsi	a5, 0, 400e187a <_vfiprintf_r+0x1b6a>
400e1877:	004646        	j	400e1994 <_vfiprintf_r+0x1c84>
400e187a:	870b      	addi.n	a8, a7, -1
400e187c:	023c      	movi.n	a2, 48
400e187e:	004822        	s8i	a2, a8, 0
400e1881:	087d      	mov.n	a7, a8
400e1883:	004346        	j	400e1994 <_vfiprintf_r+0x1c84>
400e1886:	a4dc      	bnez.n	a4, 400e18a4 <_vfiprintf_r+0x1b94>
400e1888:	920c      	movi.n	a2, 9
400e188a:	1632e7        	bltu	a2, a14, 400e18a4 <_vfiprintf_r+0x1b94>
400e188d:	10c192        	addi	a9, a1, 16
400e1890:	90a1a2        	movi	a10, 0x190
400e1893:	30cee2        	addi	a14, a14, 48
400e1896:	01d922        	addmi	a2, a9, 0x100
400e1899:	aa1a      	add.n	a10, a10, a1
400e189b:	e342e2        	s8i	a14, a2, 227
400e189e:	63ca72        	addi	a7, a10, 99
400e18a1:	003bc6        	j	400e1994 <_vfiprintf_r+0x1c84>
400e18a4:	00a422        	movi	a2, 0x400
400e18a7:	030c      	movi.n	a3, 0
400e18a9:	a32182        	l32i	a8, a1, 0x28c
400e18ac:	102520        	and	a2, a5, a2
400e18af:	000046        	j	400e18b4 <_vfiprintf_r+0x1ba4>
400e18b2:	078d      	mov.n	a8, a7
400e18b4:	bbb2c1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e18b7:	b9ebd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e18ba:	0ead      	mov.n	a10, a14
400e18bc:	04bd      	mov.n	a11, a4
400e18be:	780b      	addi.n	a7, a8, -1
400e18c0:	a561e2        	s32i	a14, a1, 0x294
400e18c3:	bbbb81        	l32r	a8, 400d07b0 <_flash_cache_start+0x798>
400e18c6:	0008e0        	callx8	a8
400e18c9:	30caa2        	addi	a10, a10, 48
400e18cc:	0047a2        	s8i	a10, a7, 0
400e18cf:	331b      	addi.n	a3, a3, 1
400e18d1:	a521e2        	l32i	a14, a1, 0x294
400e18d4:	054216        	beqz	a2, 400e192c <_vfiprintf_r+0x1c1c>
400e18d7:	a02162        	l32i	a6, a1, 0x280
400e18da:	01af92        	movi	a9, -255
400e18dd:	0006a2        	l8ui	a10, a6, 0
400e18e0:	0b0c      	movi.n	a11, 0
400e18e2:	9a9a      	add.n	a9, a10, a9
400e18e4:	160c      	movi.n	a6, 1
400e18e6:	93b690        	movnez	a11, a6, a9
400e18e9:	0b9d      	mov.n	a9, a11
400e18eb:	54cc      	bnez.n	a4, 400e18f4 <_vfiprintf_r+0x1be4>
400e18ed:	9b0c      	movi.n	a11, 9
400e18ef:	013be7        	bltu	a11, a14, 400e18f4 <_vfiprintf_r+0x1be4>
400e18f2:	046d      	mov.n	a6, a4
400e18f4:	340967        	bnone	a9, a6, 400e192c <_vfiprintf_r+0x1c1c>
400e18f7:	319a37        	bne	a10, a3, 400e192c <_vfiprintf_r+0x1c1c>
400e18fa:	a12182        	l32i	a8, a1, 0x284
400e18fd:	a221b2        	l32i	a11, a1, 0x288
400e1900:	c07780        	sub	a7, a7, a8
400e1903:	08cd      	mov.n	a12, a8
400e1905:	07ad      	mov.n	a10, a7
400e1907:	a561e2        	s32i	a14, a1, 0x294
400e190a:	bab681        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400e190d:	0008e0        	callx8	a8
400e1910:	a02132        	l32i	a3, a1, 0x280
400e1913:	a02182        	l32i	a8, a1, 0x280
400e1916:	010392        	l8ui	a9, a3, 1
400e1919:	030c      	movi.n	a3, 0
400e191b:	036d      	mov.n	a6, a3
400e191d:	01a0a2        	movi	a10, 1
400e1920:	936a90        	movnez	a6, a10, a9
400e1923:	808860        	add	a8, a8, a6
400e1926:	a521e2        	l32i	a14, a1, 0x294
400e1929:	a06182        	s32i	a8, a1, 0x280
400e192c:	bb94c1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e192f:	b9cdd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e1932:	0ead      	mov.n	a10, a14
400e1934:	04bd      	mov.n	a11, a4
400e1936:	b9c681        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e1939:	0008e0        	callx8	a8
400e193c:	0aed      	mov.n	a14, a10
400e193e:	20aba0        	or	a10, a11, a10
400e1941:	0b4d      	mov.n	a4, a11
400e1943:	f6ba56        	bnez	a10, 400e18b2 <_vfiprintf_r+0x1ba2>
400e1946:	001286        	j	400e1994 <_vfiprintf_r+0x1c84>
400e1949:	90a192        	movi	a9, 0x190
400e194c:	991a      	add.n	a9, a9, a1
400e194e:	64c972        	addi	a7, a9, 100
400e1951:	9f2132        	l32i	a3, a1, 0x27c
400e1954:	3420e0        	extui	a2, a14, 0, 4
400e1957:	232a      	add.n	a2, a3, a2
400e1959:	000222        	l8ui	a2, a2, 0
400e195c:	770b      	addi.n	a7, a7, -1
400e195e:	004722        	s8i	a2, a7, 0
400e1961:	41e4e0        	srli	a14, a14, 4
400e1964:	012440        	slli	a2, a4, 28
400e1967:	20e2e0        	or	a14, a2, a14
400e196a:	414440        	srli	a4, a4, 4
400e196d:	202e40        	or	a2, a14, a4
400e1970:	fdd256        	bnez	a2, 400e1951 <_vfiprintf_r+0x1c41>
400e1973:	000746        	j	400e1994 <_vfiprintf_r+0x1c84>
400e1976:	000000        	ill
400e1979:	90a142        	movi	a4, 0x190
400e197c:	441a      	add.n	a4, a4, a1
400e197e:	64c472        	addi	a7, a4, 100
400e1981:	f2cc      	bnez.n	a2, 400e1994 <_vfiprintf_r+0x1c84>
400e1983:	0d6507        	bbci	a5, 0, 400e1994 <_vfiprintf_r+0x1c84>
400e1986:	10c162        	addi	a6, a1, 16
400e1989:	033c      	movi.n	a3, 48
400e198b:	01d622        	addmi	a2, a6, 0x100
400e198e:	e34232        	s8i	a3, a2, 227
400e1991:	63c472        	addi	a7, a4, 99
400e1994:	a32182        	l32i	a8, a1, 0x28c
400e1997:	9b2122        	l32i	a2, a1, 0x26c
400e199a:	c08870        	sub	a8, a8, a7
400e199d:	9b6182        	s32i	a8, a1, 0x26c
400e19a0:	000906        	j	400e19c8 <_vfiprintf_r+0x1cb8>
400e19a3:	160000        	lsi	f0, a0, 88
400e19a6:	3fb8      	l32i.n	a11, a15, 12
400e19a8:	10c192        	addi	a9, a1, 16
400e19ab:	01d922        	addmi	a2, a9, 0x100
400e19ae:	804282        	s8i	a8, a2, 128
400e19b1:	040c      	movi.n	a4, 0
400e19b3:	02d922        	addmi	a2, a9, 0x200
400e19b6:	3a4242        	s8i	a4, a2, 58
400e19b9:	9a6132        	s32i	a3, a1, 0x268
400e19bc:	120c      	movi.n	a2, 1
400e19be:	90a132        	movi	a3, 0x190
400e19c1:	9b6122        	s32i	a2, a1, 0x26c
400e19c4:	713a      	add.n	a7, a1, a3
400e19c6:	020c      	movi.n	a2, 0
400e19c8:	9b2142        	l32i	a4, a1, 0x26c
400e19cb:	10c162        	addi	a6, a1, 16
400e19ce:	533240        	max	a3, a2, a4
400e19d1:	02d642        	addmi	a4, a6, 0x200
400e19d4:	3a0462        	l8ui	a6, a4, 58
400e19d7:	190c      	movi.n	a9, 1
400e19d9:	040c      	movi.n	a4, 0
400e19db:	934960        	movnez	a4, a9, a6
400e19de:	334a      	add.n	a3, a3, a4
400e19e0:	260c      	movi.n	a6, 2
400e19e2:	84a042        	movi	a4, 132
400e19e5:	106560        	and	a6, a5, a6
400e19e8:	104540        	and	a4, a5, a4
400e19eb:	336a      	add.n	a3, a3, a6
400e19ed:	0a7456        	bnez	a4, 400e1a98 <_vfiprintf_r+0x1d88>
400e19f0:	9d2182        	l32i	a8, a1, 0x274
400e19f3:	c09830        	sub	a9, a8, a3
400e19f6:	0219e6        	bgei	a9, 1, 400e19fc <_vfiprintf_r+0x1cec>
400e19f9:	0026c6        	j	400e1a98 <_vfiprintf_r+0x1d88>
400e19fc:	0e1c      	movi.n	a14, 16
400e19fe:	24a2d2        	movi	a13, 0x224
400e1a01:	a1ea      	add.n	a10, a1, a14
400e1a03:	dada      	add.n	a13, a10, a13
400e1a05:	001286        	j	400e1a53 <_vfiprintf_r+0x1d43>
400e1a08:	c1a200        	mul16u	a10, a2, a0
400e1a0b:	dab210        	ufloat.s	f11, a2, 1
400e1a0e:	21a202        	movi	a0, 0x221
400e1a11:	8f          	.byte 0x8f
400e1a12:	18e9      	s32i.n	a14, a8, 4
400e1a14:	10caa2        	addi	a10, a10, 16
400e1a17:	bba9      	s32i.n	a10, a11, 44
400e1a19:	aba8      	l32i.n	a10, a11, 40
400e1a1b:	888b      	addi.n	a8, a8, 8
400e1a1d:	aa1b      	addi.n	a10, a10, 1
400e1a1f:	aba9      	s32i.n	a10, a11, 40
400e1a21:	288aa6        	blti	a10, 8, 400e1a4d <_vfiprintf_r+0x1d3d>
400e1a24:	9821b2        	l32i	a11, a1, 0x260
400e1a27:	9c21a2        	l32i	a10, a1, 0x270
400e1a2a:	20cdd0        	or	a12, a13, a13
400e1a2d:	a66192        	s32i	a9, a1, 0x298
400e1a30:	a461d2        	s32i	a13, a1, 0x290
400e1a33:	a561e2        	s32i	a14, a1, 0x294
400e1a36:	fe26e5        	call8	400dfca4 <__sprint_r>
400e1a39:	a62192        	l32i	a9, a1, 0x298
400e1a3c:	a421d2        	l32i	a13, a1, 0x290
400e1a3f:	a521e2        	l32i	a14, a1, 0x294
400e1a42:	37fa56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1a45:	e4a1a2        	movi	a10, 0x1e4
400e1a48:	10c182        	addi	a8, a1, 16
400e1a4b:	88aa      	add.n	a8, a8, a10
400e1a4d:	976182        	s32i	a8, a1, 0x25c
400e1a50:	f0c992        	addi	a9, a9, -16
400e1a53:	bb60a1        	l32r	a10, 400d07d4 <_flash_cache_start+0x7bc>
400e1a56:	972182        	l32i	a8, a1, 0x25c
400e1a59:	08a9      	s32i.n	a10, a8, 0
400e1a5b:	aa2e97        	blt	a14, a9, 400e1a09 <_vfiprintf_r+0x1cf9>
400e1a5e:	10c1b2        	addi	a11, a1, 16
400e1a61:	02dba2        	addmi	a10, a11, 0x200
400e1a64:	8f21b2        	l32i	a11, a1, 0x23c
400e1a67:	1899      	s32i.n	a9, a8, 4
400e1a69:	9b9a      	add.n	a9, a11, a9
400e1a6b:	ba99      	s32i.n	a9, a10, 44
400e1a6d:	aa98      	l32i.n	a9, a10, 40
400e1a6f:	888b      	addi.n	a8, a8, 8
400e1a71:	991b      	addi.n	a9, a9, 1
400e1a73:	aa99      	s32i.n	a9, a10, 40
400e1a75:	1c89a6        	blti	a9, 8, 400e1a95 <_vfiprintf_r+0x1d85>
400e1a78:	24a2c2        	movi	a12, 0x224
400e1a7b:	10c182        	addi	a8, a1, 16
400e1a7e:	9821b2        	l32i	a11, a1, 0x260
400e1a81:	9c21a2        	l32i	a10, a1, 0x270
400e1a84:	c8ca      	add.n	a12, a8, a12
400e1a86:	fe21e5        	call8	400dfca4 <__sprint_r>
400e1a89:	338a56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1a8c:	e4a192        	movi	a9, 0x1e4
400e1a8f:	10c182        	addi	a8, a1, 16
400e1a92:	808890        	add	a8, a8, a9
400e1a95:	976182        	s32i	a8, a1, 0x25c
400e1a98:	10c1a2        	addi	a10, a1, 16
400e1a9b:	02da92        	addmi	a9, a10, 0x200
400e1a9e:	3a09a2        	l8ui	a10, a9, 58
400e1aa1:	043a16        	beqz	a10, 400e1ae8 <_vfiprintf_r+0x1dd8>
400e1aa4:	972182        	l32i	a8, a1, 0x25c
400e1aa7:	3aa2a2        	movi	a10, 0x23a
400e1aaa:	10c1b2        	addi	a11, a1, 16
400e1aad:	abaa      	add.n	a10, a11, a10
400e1aaf:	08a9      	s32i.n	a10, a8, 0
400e1ab1:	1a0c      	movi.n	a10, 1
400e1ab3:	18a9      	s32i.n	a10, a8, 4
400e1ab5:	b9a8      	l32i.n	a10, a9, 44
400e1ab7:	888b      	addi.n	a8, a8, 8
400e1ab9:	aa1b      	addi.n	a10, a10, 1
400e1abb:	b9a9      	s32i.n	a10, a9, 44
400e1abd:	a9a8      	l32i.n	a10, a9, 40
400e1abf:	aa1b      	addi.n	a10, a10, 1
400e1ac1:	0a69a2        	s32i	a10, a9, 40
400e1ac4:	1d8aa6        	blti	a10, 8, 400e1ae5 <_vfiprintf_r+0x1dd5>
400e1ac7:	24a2c2        	movi	a12, 0x224
400e1aca:	10c192        	addi	a9, a1, 16
400e1acd:	9821b2        	l32i	a11, a1, 0x260
400e1ad0:	9c21a2        	l32i	a10, a1, 0x270
400e1ad3:	80c9c0        	add	a12, a9, a12
400e1ad6:	fe1ce5        	call8	400dfca4 <__sprint_r>
400e1ad9:	2e8a56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1adc:	e4a192        	movi	a9, 0x1e4
400e1adf:	10c182        	addi	a8, a1, 16
400e1ae2:	808890        	add	a8, a8, a9
400e1ae5:	976182        	s32i	a8, a1, 0x25c
400e1ae8:	044616        	beqz	a6, 400e1b30 <_vfiprintf_r+0x1e20>
400e1aeb:	972182        	l32i	a8, a1, 0x25c
400e1aee:	48a292        	movi	a9, 0x248
400e1af1:	619a      	add.n	a6, a1, a9
400e1af3:	0869      	s32i.n	a6, a8, 0
400e1af5:	260c      	movi.n	a6, 2
400e1af7:	1869      	s32i.n	a6, a8, 4
400e1af9:	8f2162        	l32i	a6, a1, 0x23c
400e1afc:	888b      	addi.n	a8, a8, 8
400e1afe:	662b      	addi.n	a6, a6, 2
400e1b00:	8f6162        	s32i	a6, a1, 0x23c
400e1b03:	8e2162        	l32i	a6, a1, 0x238
400e1b06:	01c662        	addi	a6, a6, 1
400e1b09:	8e6162        	s32i	a6, a1, 0x238
400e1b0c:	1d86a6        	blti	a6, 8, 400e1b2d <_vfiprintf_r+0x1e1d>
400e1b0f:	10c1b2        	addi	a11, a1, 16
400e1b12:	24a2c2        	movi	a12, 0x224
400e1b15:	80cbc0        	add	a12, a11, a12
400e1b18:	9c21a2        	l32i	a10, a1, 0x270
400e1b1b:	9821b2        	l32i	a11, a1, 0x260
400e1b1e:	fe1865        	call8	400dfca4 <__sprint_r>
400e1b21:	2a0a56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1b24:	e4a162        	movi	a6, 0x1e4
400e1b27:	10c182        	addi	a8, a1, 16
400e1b2a:	808860        	add	a8, a8, a6
400e1b2d:	976182        	s32i	a8, a1, 0x25c
400e1b30:	02e426        	beqi	a4, 128, 400e1b36 <_vfiprintf_r+0x1e26>
400e1b33:	002b46        	j	400e1be4 <_vfiprintf_r+0x1ed4>
400e1b36:	9d2192        	l32i	a9, a1, 0x274
400e1b39:	c04930        	sub	a4, a9, a3
400e1b3c:	0214e6        	bgei	a4, 1, 400e1b42 <_vfiprintf_r+0x1e32>
400e1b3f:	002846        	j	400e1be4 <_vfiprintf_r+0x1ed4>
400e1b42:	0d1c      	movi.n	a13, 16
400e1b44:	24a292        	movi	a9, 0x224
400e1b47:	a1da      	add.n	a10, a1, a13
400e1b49:	9a9a      	add.n	a9, a10, a9
400e1b4b:	001206        	j	400e1b97 <_vfiprintf_r+0x1e87>
400e1b4e:	820000        	mull	a0, a0, a0
400e1b51:	699721        	l32r	a2, 400bc1b0 <_iram_end+0x2e65c>
400e1b54:	6208      	l32i.n	a0, a2, 24
400e1b56:	d98f21        	l32r	a2, 400d8194 <nvs::Page::copyItems(nvs::Page&)+0x74>
400e1b59:	6218      	l32i.n	a1, a2, 24
400e1b5b:	6210c6        	j	400fa3a2 <_etext+0xdac5>
400e1b5e:	628f61        	l32r	a6, 400ba59c <_iram_end+0x2ca48>
400e1b61:	828e21        	l32r	a2, 400c259c <_rtc_text_end+0x259c>
400e1b64:	08c8      	l32i.n	a12, a8, 0
400e1b66:	661b      	addi.n	a6, a6, 1
400e1b68:	8e6162        	s32i	a6, a1, 0x238
400e1b6b:	2286a6        	blti	a6, 8, 400e1b91 <_vfiprintf_r+0x1e81>
400e1b6e:	9821b2        	l32i	a11, a1, 0x260
400e1b71:	9c21a2        	l32i	a10, a1, 0x270
400e1b74:	20c990        	or	a12, a9, a9
400e1b77:	a66192        	s32i	a9, a1, 0x298
400e1b7a:	a461d2        	s32i	a13, a1, 0x290
400e1b7d:	fe1265        	call8	400dfca4 <__sprint_r>
400e1b80:	a62192        	l32i	a9, a1, 0x298
400e1b83:	a421d2        	l32i	a13, a1, 0x290
400e1b86:	23ba56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1b89:	e4a162        	movi	a6, 0x1e4
400e1b8c:	10c182        	addi	a8, a1, 16
400e1b8f:	886a      	add.n	a8, a8, a6
400e1b91:	976182        	s32i	a8, a1, 0x25c
400e1b94:	f0c442        	addi	a4, a4, -16
400e1b97:	bb1061        	l32r	a6, 400d07d8 <_flash_cache_start+0x7c0>
400e1b9a:	b22d47        	blt	a13, a4, 400e1b50 <_vfiprintf_r+0x1e40>
400e1b9d:	972192        	l32i	a9, a1, 0x25c
400e1ba0:	1949      	s32i.n	a4, a9, 4
400e1ba2:	0969      	s32i.n	a6, a9, 0
400e1ba4:	8f2192        	l32i	a9, a1, 0x23c
400e1ba7:	494a      	add.n	a4, a9, a4
400e1ba9:	8f6142        	s32i	a4, a1, 0x23c
400e1bac:	8e2142        	l32i	a4, a1, 0x238
400e1baf:	441b      	addi.n	a4, a4, 1
400e1bb1:	8e6142        	s32i	a4, a1, 0x238
400e1bb4:	0c84e6        	bgei	a4, 8, 400e1bc4 <_vfiprintf_r+0x1eb4>
400e1bb7:	972142        	l32i	a4, a1, 0x25c
400e1bba:	448b      	addi.n	a4, a4, 8
400e1bbc:	976142        	s32i	a4, a1, 0x25c
400e1bbf:	000846        	j	400e1be4 <_vfiprintf_r+0x1ed4>
400e1bc2:	c20000        	quou	a0, a0, a0
400e1bc5:	6224a2        	l32i	a10, a4, 0x188
400e1bc8:	b210c1        	l32r	a12, 400ce408 <_rtc_text_end+0xe408>
400e1bcb:	a29821        	l32r	a2, 400ca62c <_rtc_text_end+0xa62c>
400e1bce:	ca9c21        	l32r	a2, 400d4640 <uw_init_context_1+0x10>
400e1bd1:	0d25c6        	j	400e506c <_vfprintf_r+0x2d24>
400e1bd4:	fe          	.byte 0xfe
400e1bd5:	1eca56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1bd8:	e4a142        	movi	a4, 0x1e4
400e1bdb:	10c182        	addi	a8, a1, 16
400e1bde:	808840        	add	a8, a8, a4
400e1be1:	976182        	s32i	a8, a1, 0x25c
400e1be4:	9b2192        	l32i	a9, a1, 0x26c
400e1be7:	c02290        	sub	a2, a2, a9
400e1bea:	0212e6        	bgei	a2, 1, 400e1bf0 <_vfiprintf_r+0x1ee0>
400e1bed:	0026c6        	j	400e1c8c <_vfiprintf_r+0x1f7c>
400e1bf0:	091c      	movi.n	a9, 16
400e1bf2:	24a262        	movi	a6, 0x224
400e1bf5:	a19a      	add.n	a10, a1, a9
400e1bf7:	6a6a      	add.n	a6, a10, a6
400e1bf9:	000fc6        	j	400e1c3c <_vfiprintf_r+0x1f2c>
400e1bfc:	218200        	srai	a8, a0, 2
400e1bff:	084997        	ball	a9, a9, 400e1c0b <_vfiprintf_r+0x1efb>
400e1c02:	8f2142        	l32i	a4, a1, 0x23c
400e1c05:	1899      	s32i.n	a9, a8, 4
400e1c07:	10c442        	addi	a4, a4, 16
400e1c0a:	8f6142        	s32i	a4, a1, 0x23c
400e1c0d:	8e2142        	l32i	a4, a1, 0x238
400e1c10:	888b      	addi.n	a8, a8, 8
400e1c12:	441b      	addi.n	a4, a4, 1
400e1c14:	8e6142        	s32i	a4, a1, 0x238
400e1c17:	1b84a6        	blti	a4, 8, 400e1c36 <_vfiprintf_r+0x1f26>
400e1c1a:	9821b2        	l32i	a11, a1, 0x260
400e1c1d:	9c21a2        	l32i	a10, a1, 0x270
400e1c20:	06cd      	mov.n	a12, a6
400e1c22:	a66192        	s32i	a9, a1, 0x298
400e1c25:	fe07e5        	call8	400dfca4 <__sprint_r>
400e1c28:	a62192        	l32i	a9, a1, 0x298
400e1c2b:	196a56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1c2e:	e4a142        	movi	a4, 0x1e4
400e1c31:	10c182        	addi	a8, a1, 16
400e1c34:	884a      	add.n	a8, a8, a4
400e1c36:	976182        	s32i	a8, a1, 0x25c
400e1c39:	f0c222        	addi	a2, a2, -16
400e1c3c:	bae741        	l32r	a4, 400d07d8 <_flash_cache_start+0x7c0>
400e1c3f:	ba2927        	blt	a9, a2, 400e1bfd <_vfiprintf_r+0x1eed>
400e1c42:	972192        	l32i	a9, a1, 0x25c
400e1c45:	8f2162        	l32i	a6, a1, 0x23c
400e1c48:	1929      	s32i.n	a2, a9, 4
400e1c4a:	262a      	add.n	a2, a6, a2
400e1c4c:	8f6122        	s32i	a2, a1, 0x23c
400e1c4f:	8e2122        	l32i	a2, a1, 0x238
400e1c52:	0949      	s32i.n	a4, a9, 0
400e1c54:	221b      	addi.n	a2, a2, 1
400e1c56:	10c1a2        	addi	a10, a1, 16
400e1c59:	8e6122        	s32i	a2, a1, 0x238
400e1c5c:	02da42        	addmi	a4, a10, 0x200
400e1c5f:	0982e6        	bgei	a2, 8, 400e1c6c <_vfiprintf_r+0x1f5c>
400e1c62:	998b      	addi.n	a9, a9, 8
400e1c64:	976192        	s32i	a9, a1, 0x25c
400e1c67:	000846        	j	400e1c8c <_vfiprintf_r+0x1f7c>
400e1c6a:	b20000        	mulsh	a0, a0, a0
400e1c6d:	c210c1        	l32r	a12, 400d24b0 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)+0x44>
400e1c70:	ca24a2        	l32i	a10, a4, 0x328
400e1c73:	a2cb      	addi.n	a10, a2, 12
400e1c75:	b29c21        	l32r	a2, 400ce6e8 <_rtc_text_end+0xe6e8>
400e1c78:	a59821        	l32r	a2, 400cb2d8 <_rtc_text_end+0xb2d8>
400e1c7b:	56fe02        	s32ri	a0, a14, 0x158
400e1c7e:	144a      	add.n	a1, a4, a4
400e1c80:	e4a122        	movi	a2, 0x1e4
400e1c83:	10c142        	addi	a4, a1, 16
400e1c86:	804420        	add	a4, a4, a2
400e1c89:	976142        	s32i	a4, a1, 0x25c
400e1c8c:	10c192        	addi	a9, a1, 16
400e1c8f:	02d942        	addmi	a4, a9, 0x200
400e1c92:	9b2182        	l32i	a8, a1, 0x26c
400e1c95:	8f2192        	l32i	a9, a1, 0x23c
400e1c98:	a428      	l32i.n	a2, a4, 40
400e1c9a:	972162        	l32i	a6, a1, 0x25c
400e1c9d:	998a      	add.n	a9, a9, a8
400e1c9f:	221b      	addi.n	a2, a2, 1
400e1ca1:	0679      	s32i.n	a7, a6, 0
400e1ca3:	1689      	s32i.n	a8, a6, 4
400e1ca5:	b499      	s32i.n	a9, a4, 44
400e1ca7:	a429      	s32i.n	a2, a4, 40
400e1ca9:	0482e6        	bgei	a2, 8, 400e1cb1 <_vfiprintf_r+0x1fa1>
400e1cac:	468b      	addi.n	a4, a6, 8
400e1cae:	0006c6        	j	400e1ccd <_vfiprintf_r+0x1fbd>
400e1cb1:	10c1a2        	addi	a10, a1, 16
400e1cb4:	24a2c2        	movi	a12, 0x224
400e1cb7:	caca      	add.n	a12, a10, a12
400e1cb9:	9821b2        	l32i	a11, a1, 0x260
400e1cbc:	9c21a2        	l32i	a10, a1, 0x270
400e1cbf:	fdfe65        	call8	400dfca4 <__sprint_r>
400e1cc2:	0ffa56        	bnez	a10, 400e1dc5 <_vfiprintf_r+0x20b5>
400e1cc5:	e4a142        	movi	a4, 0x1e4
400e1cc8:	10c1b2        	addi	a11, a1, 16
400e1ccb:	4b4a      	add.n	a4, a11, a4
400e1ccd:	17e527        	bbsi	a5, 2, 400e1ce8 <_vfiprintf_r+0x1fd8>
400e1cd0:	9d2122        	l32i	a2, a1, 0x274
400e1cd3:	9e2142        	l32i	a4, a1, 0x278
400e1cd6:	533230        	max	a3, a2, a3
400e1cd9:	443a      	add.n	a4, a4, a3
400e1cdb:	8f2122        	l32i	a2, a1, 0x23c
400e1cde:	9e6142        	s32i	a4, a1, 0x278
400e1ce1:	08f216        	beqz	a2, 400e1d74 <_vfiprintf_r+0x2064>
400e1ce4:	0028c6        	j	400e1d8b <_vfiprintf_r+0x207b>
400e1ce7:	215200        	srai	a5, a0, 2
400e1cea:	309d      	lsi	f9, a0, 0
400e1cec:	a6c025        	call8	400888f0 <vTaskSwitchContext+0x278>
400e1cef:	1cde12        	addmi	a1, a14, 0x1c00
400e1cf2:	6208      	l32i.n	a0, a2, 24
400e1cf4:	8a24a2        	l32i	a10, a4, 0x228
400e1cf7:	696a91        	l32r	a9, 400bc2a0 <_iram_end+0x2e74c>
400e1cfa:	000ec6        	j	400e1d39 <_vfiprintf_r+0x2029>
400e1cfd:	8f2152        	l32i	a5, a1, 0x23c
400e1d00:	1489      	s32i.n	a8, a4, 4
400e1d02:	10c552        	addi	a5, a5, 16
400e1d05:	8f6152        	s32i	a5, a1, 0x23c
400e1d08:	8e2152        	l32i	a5, a1, 0x238
400e1d0b:	551b      	addi.n	a5, a5, 1
400e1d0d:	8e6152        	s32i	a5, a1, 0x238
400e1d10:	0585e6        	bgei	a5, 8, 400e1d19 <_vfiprintf_r+0x2009>
400e1d13:	448b      	addi.n	a4, a4, 8
400e1d15:	000746        	j	400e1d36 <_vfiprintf_r+0x2026>
400e1d18:	21b200        	srai	a11, a0, 2
400e1d1b:	a298      	l32i.n	a9, a2, 40
400e1d1d:	609c21        	l32r	a2, 400b9f90 <_iram_end+0x2c43c>
400e1d20:	8220c6        	j	400c25a7 <_rtc_text_end+0x25a7>
400e1d23:	e5a461        	l32r	a6, 400db3b4 <_puts_r+0x2c>
400e1d26:	82fdf7        	bbsi	a13, 31, 400e1cac <_vfiprintf_r+0x1f9c>
400e1d29:	56a421        	l32r	a2, 400b77bc <_iram_end+0x29c68>
400e1d2c:	096a      	add.n	a0, a9, a6
400e1d2e:	e4a142        	movi	a4, 0x1e4
400e1d31:	10c1b2        	addi	a11, a1, 16
400e1d34:	4b4a      	add.n	a4, a11, a4
400e1d36:	f0c222        	addi	a2, a2, -16
400e1d39:	baa651        	l32r	a5, 400d07d4 <_flash_cache_start+0x7bc>
400e1d3c:	0459      	s32i.n	a5, a4, 0
400e1d3e:	bb2827        	blt	a8, a2, 400e1cfd <_vfiprintf_r+0x1fed>
400e1d41:	10c152        	addi	a5, a1, 16
400e1d44:	1429      	s32i.n	a2, a4, 4
400e1d46:	02d542        	addmi	a4, a5, 0x200
400e1d49:	8f2152        	l32i	a5, a1, 0x23c
400e1d4c:	252a      	add.n	a2, a5, a2
400e1d4e:	b429      	s32i.n	a2, a4, 44
400e1d50:	a428      	l32i.n	a2, a4, 40
400e1d52:	221b      	addi.n	a2, a2, 1
400e1d54:	a429      	s32i.n	a2, a4, 40
400e1d56:	0282e6        	bgei	a2, 8, 400e1d5c <_vfiprintf_r+0x204c>
400e1d59:	ffdcc6        	j	400e1cd0 <_vfiprintf_r+0x1fc0>
400e1d5c:	24a2c2        	movi	a12, 0x224
400e1d5f:	10c162        	addi	a6, a1, 16
400e1d62:	9821b2        	l32i	a11, a1, 0x260
400e1d65:	9c21a2        	l32i	a10, a1, 0x270
400e1d68:	c6ca      	add.n	a12, a6, a12
400e1d6a:	fdf3a5        	call8	400dfca4 <__sprint_r>
400e1d6d:	f5fa16        	beqz	a10, 400e1cd0 <_vfiprintf_r+0x1fc0>
400e1d70:	001446        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400e1d73:	030c00        	rsr.scompare1	a0
400e1d76:	10c182        	addi	a8, a1, 16
400e1d79:	8e6132        	s32i	a3, a1, 0x238
400e1d7c:	e4a132        	movi	a3, 0x1e4
400e1d7f:	983a      	add.n	a9, a8, a3
400e1d81:	9a2122        	l32i	a2, a1, 0x268
400e1d84:	976192        	s32i	a9, a1, 0x25c
400e1d87:	f83706        	j	400dfe67 <_vfiprintf_r+0x157>
400e1d8a:	c1a200        	mul16u	a10, a2, a0
400e1d8d:	a2c210        	muluh	a12, a2, a1
400e1d90:	caca24        	lsi	f2, a10, 0x328
400e1d93:	9821b2        	l32i	a11, a1, 0x260
400e1d96:	9c21a2        	l32i	a10, a1, 0x270
400e1d99:	fdf0a5        	call8	400dfca4 <__sprint_r>
400e1d9c:	fd4a16        	beqz	a10, 400e1d74 <_vfiprintf_r+0x2064>
400e1d9f:	000886        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400e1da2:	220000        	orb	b0, b0, b0
400e1da5:	cc8f21        	l32r	a2, 400d4fe4 <read_encoded_value_with_base+0xcc>
400e1da8:	030c62        	l8ui	a6, a12, 3
400e1dab:	8e6132        	s32i	a3, a1, 0x238
400e1dae:	0004c6        	j	400e1dc5 <_vfiprintf_r+0x20b5>
400e1db1:	24a2c2        	movi	a12, 0x224
400e1db4:	10c122        	addi	a2, a1, 16
400e1db7:	9821b2        	l32i	a11, a1, 0x260
400e1dba:	9c21a2        	l32i	a10, a1, 0x270
400e1dbd:	c2ca      	add.n	a12, a2, a12
400e1dbf:	fdee65        	call8	400dfca4 <__sprint_r>
400e1dc2:	fe3a16        	beqz	a10, 400e1da9 <_vfiprintf_r+0x2099>
400e1dc5:	982132        	l32i	a3, a1, 0x260
400e1dc8:	192322        	l32i	a2, a3, 100
400e1dcb:	0ee207        	bbsi	a2, 0, 400e1ddd <_vfiprintf_r+0x20cd>
400e1dce:	061322        	l16ui	a2, a3, 12
400e1dd1:	08e297        	bbsi	a2, 9, 400e1ddd <_vfiprintf_r+0x20cd>
400e1dd4:	58c3a2        	addi	a10, a3, 88
400e1dd7:	201110        	or	a1, a1, a1
400e1dda:	a2d3a5        	call8	40084b14 <_lock_release_recursive>
400e1ddd:	982182        	l32i	a8, a1, 0x260
400e1de0:	061822        	l16ui	a2, a8, 12
400e1de3:	026267        	bbci	a2, 6, 400e1de9 <_vfiprintf_r+0x20d9>
400e1de6:	f7ff06        	j	400dfde6 <_vfiprintf_r+0xd6>
400e1de9:	9e2122        	l32i	a2, a1, 0x278
400e1dec:	f01d      	retw.n
400e1dee:	420000        	xorb	b0, b0, b0
400e1df1:	1b9121        	l32r	a2, 400a8c38 <_iram_end+0x1b0e4>
400e1df4:	a34783        	ssi	f8, a7, 0x28c
400e1df7:	854602        	s8i	a0, a6, 133
400e1dfa:	c6f8      	l32i.n	a15, a6, 48
400e1dfc:	00f886        	j	400e21e2 <get_arg$isra$0+0x31a>
400e1dff:	218200        	srai	a8, a0, 2
400e1e02:	931b91        	l32r	a9, 400c6a70 <_rtc_text_end+0x6a70>
400e1e05:	02a387        	bge	a3, a8, 400e1e0b <_vfiprintf_r+0x20fb>
400e1e08:	f8ce46        	j	400e0145 <_vfiprintf_r+0x435>
400e1e0b:	f8cfc6        	j	400e014e <_vfiprintf_r+0x43e>
	...

400e1e10 <vfiprintf>:
400e1e10:	006136        	entry	a1, 48
400e1e13:	0149      	s32i.n	a4, a1, 0
400e1e15:	1159      	s32i.n	a5, a1, 4
400e1e17:	2169      	s32i.n	a6, a1, 8
400e1e19:	a6bae5        	call8	400889c8 <__getreent>
400e1e1c:	01d8      	l32i.n	a13, a1, 0
400e1e1e:	11e8      	l32i.n	a14, a1, 4
400e1e20:	21f8      	l32i.n	a15, a1, 8
400e1e22:	02bd      	mov.n	a11, a2
400e1e24:	03cd      	mov.n	a12, a3
400e1e26:	fdeea5        	call8	400dfd10 <_vfiprintf_r>
400e1e29:	0a2d      	mov.n	a2, a10
400e1e2b:	f01d      	retw.n
400e1e2d:	000000        	ill

400e1e30 <__sbprintf>:
400e1e30:	024136        	entry	a1, 0x120
400e1e33:	061392        	l16ui	a9, a3, 12
400e1e36:	d87c      	movi.n	a8, -3
400e1e38:	108980        	and	a8, a9, a8
400e1e3b:	465182        	s16i	a8, a1, 140
400e1e3e:	192382        	l32i	a8, a3, 100
400e1e41:	3c6152        	s32i	a5, a1, 240
400e1e44:	396182        	s32i	a8, a1, 228
400e1e47:	071382        	l16ui	a8, a3, 14
400e1e4a:	090c      	movi.n	a9, 0
400e1e4c:	475182        	s16i	a8, a1, 142
400e1e4f:	8388      	l32i.n	a8, a3, 32
400e1e51:	266192        	s32i	a9, a1, 152
400e1e54:	286182        	s32i	a8, a1, 160
400e1e57:	a388      	l32i.n	a8, a3, 40
400e1e59:	3d6162        	s32i	a6, a1, 244
400e1e5c:	2a6182        	s32i	a8, a1, 168
400e1e5f:	80a082        	movi	a8, 128
400e1e62:	581a      	add.n	a5, a8, a1
400e1e64:	58c5a2        	addi	a10, a5, 88
400e1e67:	226182        	s32i	a8, a1, 136
400e1e6a:	256182        	s32i	a8, a1, 148
400e1e6d:	3e6172        	s32i	a7, a1, 248
400e1e70:	206112        	s32i	a1, a1, 128
400e1e73:	246112        	s32i	a1, a1, 144
400e1e76:	a2bfa5        	call8	40084a70 <_lock_init_recursive>
400e1e79:	3c21d2        	l32i	a13, a1, 240
400e1e7c:	3d21e2        	l32i	a14, a1, 244
400e1e7f:	3e21f2        	l32i	a15, a1, 248
400e1e82:	80a0b2        	movi	a11, 128
400e1e85:	04cd      	mov.n	a12, a4
400e1e87:	bb1a      	add.n	a11, a11, a1
400e1e89:	02ad      	mov.n	a10, a2
400e1e8b:	fde865        	call8	400dfd10 <_vfiprintf_r>
400e1e8e:	0a4d      	mov.n	a4, a10
400e1e90:	011a96        	bltz	a10, 400e1ea5 <__sbprintf+0x75>
400e1e93:	80a0b2        	movi	a11, 128
400e1e96:	02ad      	mov.n	a10, a2
400e1e98:	bb1a      	add.n	a11, a11, a1
400e1e9a:	b9fe81        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400e1e9d:	0008e0        	callx8	a8
400e1ea0:	f27c      	movi.n	a2, -1
400e1ea2:	9342a0        	movnez	a4, a2, a10
400e1ea5:	461182        	l16ui	a8, a1, 140
400e1ea8:	40a022        	movi	a2, 64
400e1eab:	080827        	bnone	a8, a2, 400e1eb7 <__sbprintf+0x87>
400e1eae:	061382        	l16ui	a8, a3, 12
400e1eb1:	202820        	or	a2, a8, a2
400e1eb4:	065322        	s16i	a2, a3, 12
400e1eb7:	d8a0a2        	movi	a10, 216
400e1eba:	80a1a0        	add	a10, a1, a10
400e1ebd:	a2bc25        	call8	40084a80 <_lock_close>
400e1ec0:	202440        	or	a2, a4, a4
400e1ec3:	f01d      	retw.n
400e1ec5:	000000        	ill

400e1ec8 <get_arg$isra$0>:
400e1ec8:	008136        	entry	a1, 64
400e1ecb:	102182        	l32i	a8, a1, 64
400e1ece:	2129      	s32i.n	a2, a1, 8
400e1ed0:	3159      	s32i.n	a5, a1, 12
400e1ed2:	0528      	l32i.n	a2, a5, 0
400e1ed4:	2198      	l32i.n	a9, a1, 8
400e1ed6:	0858      	l32i.n	a5, a8, 0
400e1ed8:	933550        	movnez	a3, a5, a5
400e1edb:	0199      	s32i.n	a9, a1, 0
400e1edd:	00d3c6        	j	400e2230 <get_arg$isra$0+0x368>
400e1ee0:	1b0000        	un.s	b0, f0, f0
400e1ee3:	035233        	lsi	f3, a2, 12
400e1ee6:	551600        	extui	a1, a0, 22, 6
400e1ee9:	c58200        	extui	a8, a0, 18, 13
400e1eec:	56db      	addi.n	a5, a6, 13
400e1eee:	ff18      	l32i.n	a1, a15, 60
400e1ef0:	349516        	beqz	a5, 400e223d <get_arg$isra$0+0x375>
400e1ef3:	050c      	movi.n	a5, 0
400e1ef5:	05ed      	mov.n	a14, a5
400e1ef7:	f97c      	movi.n	a9, -1
400e1ef9:	05dd      	mov.n	a13, a5
400e1efb:	1159      	s32i.n	a5, a1, 4
400e1efd:	03ad      	mov.n	a10, a3
400e1eff:	ba0dc1        	l32r	a12, 400d0734 <_flash_cache_start+0x71c>
400e1f02:	000a82        	l8ui	a8, a10, 0
400e1f05:	331b      	addi.n	a3, a3, 1
400e1f07:	bc8a      	add.n	a11, a12, a8
400e1f09:	000bc2        	l8ui	a12, a11, 0
400e1f0c:	11b8      	l32i.n	a11, a1, 4
400e1f0e:	b0fbb0        	addx8	a15, a11, a11
400e1f11:	ba09b1        	l32r	a11, 400d0738 <_flash_cache_start+0x720>
400e1f14:	bbfa      	add.n	a11, a11, a15
400e1f16:	bbca      	add.n	a11, a11, a12
400e1f18:	000bb2        	l8ui	a11, a11, 0
400e1f1b:	11b9      	s32i.n	a11, a1, 4
400e1f1d:	ba07b1        	l32r	a11, 400d073c <_flash_cache_start+0x724>
400e1f20:	fbfa      	add.n	a15, a11, a15
400e1f22:	ffca      	add.n	a15, a15, a12
400e1f24:	000fb2        	l8ui	a11, a15, 0
400e1f27:	bb0b      	addi.n	a11, a11, -1
400e1f29:	74b0b0        	extui	a11, a11, 0, 8
400e1f2c:	028bb6        	bltui	a11, 8, 400e1f32 <get_arg$isra$0+0x6a>
400e1f2f:	00bcc6        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f32:	ba2bc1        	l32r	a12, 400d07e0 <_flash_cache_start+0x7c8>
400e1f35:	a0bbc0        	addx4	a11, a11, a12
400e1f38:	0bb8      	l32i.n	a11, a11, 0
400e1f3a:	000ba0        	jx	a11
400e1f3d:	9a0c      	movi.n	a10, 9
400e1f3f:	00b5c6        	j	400e221a <get_arg$isra$0+0x352>
400e1f42:	6aa0b2        	movi	a11, 106
400e1f45:	3018b7        	beq	a8, a11, 400e1f79 <get_arg$isra$0+0xb1>
400e1f48:	0d3b87        	bltu	a11, a8, 400e1f59 <get_arg$isra$0+0x91>
400e1f4b:	cb4c      	movi.n	a11, 76
400e1f4d:	2318b7        	beq	a8, a11, 400e1f74 <get_arg$isra$0+0xac>
400e1f50:	68a0b2        	movi	a11, 104
400e1f53:	2a98b7        	bne	a8, a11, 400e1f81 <get_arg$isra$0+0xb9>
400e1f56:	00b306        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f59:	74a0b2        	movi	a11, 116
400e1f5c:	0298b7        	bne	a8, a11, 400e1f62 <get_arg$isra$0+0x9a>
400e1f5f:	00b0c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f62:	7aa0b2        	movi	a11, 122
400e1f65:	0298b7        	bne	a8, a11, 400e1f6b <get_arg$isra$0+0xa3>
400e1f68:	00ae86        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f6b:	71a0b2        	movi	a11, 113
400e1f6e:	0718b7        	beq	a8, a11, 400e1f79 <get_arg$isra$0+0xb1>
400e1f71:	000306        	j	400e1f81 <get_arg$isra$0+0xb9>
400e1f74:	880c      	movi.n	a8, 8
400e1f76:	000046        	j	400e1f7b <get_arg$isra$0+0xb3>
400e1f79:	082c      	movi.n	a8, 32
400e1f7b:	20dd80        	or	a13, a13, a8
400e1f7e:	00a906        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f81:	010ab2        	l8ui	a11, a10, 1
400e1f84:	6ca082        	movi	a8, 108
400e1f87:	099b87        	bne	a11, a8, 400e1f94 <get_arg$isra$0+0xcc>
400e1f8a:	032c      	movi.n	a3, 32
400e1f8c:	20dd30        	or	a13, a13, a3
400e1f8f:	3a2b      	addi.n	a3, a10, 2
400e1f91:	00a446        	j	400e2226 <get_arg$isra$0+0x35e>
400e1f94:	081c      	movi.n	a8, 16
400e1f96:	fff846        	j	400e1f7b <get_arg$isra$0+0xb3>
400e1f99:	bfc882        	addi	a8, a8, -65
400e1f9c:	748080        	extui	a8, a8, 0, 8
400e1f9f:	7a3c      	movi.n	a10, 55
400e1fa1:	442020        	extui	a2, a2, 0, 5
400e1fa4:	253a87        	bltu	a10, a8, 400e1fcd <get_arg$isra$0+0x105>
400e1fa7:	ba0fa1        	l32r	a10, 400d07e4 <_flash_cache_start+0x7cc>
400e1faa:	a088a0        	addx4	a8, a8, a10
400e1fad:	0888      	l32i.n	a8, a8, 0
400e1faf:	0008a0        	jx	a8
400e1fb2:	026d47        	bbci	a13, 4, 400e1fb8 <get_arg$isra$0+0xf0>
400e1fb5:	00d806        	j	400e2319 <get_arg$isra$0+0x451>
400e1fb8:	026d57        	bbci	a13, 5, 400e1fbe <get_arg$isra$0+0xf6>
400e1fbb:	00dec6        	j	400e233a <get_arg$isra$0+0x472>
400e1fbe:	00db46        	j	400e232f <get_arg$isra$0+0x467>
400e1fc1:	026d47        	bbci	a13, 4, 400e1fc7 <get_arg$isra$0+0xff>
400e1fc4:	00d186        	j	400e230e <get_arg$isra$0+0x446>
400e1fc7:	00d906        	j	400e232f <get_arg$isra$0+0x467>
400e1fca:	000000        	ill
400e1fcd:	070926        	beqi	a9, -1, 400e1fd8 <get_arg$isra$0+0x110>
400e1fd0:	a08970        	addx4	a8, a9, a7
400e1fd3:	0859      	s32i.n	a5, a8, 0
400e1fd5:	009346        	j	400e2226 <get_arg$isra$0+0x35e>
400e1fd8:	0275b6        	bltui	a5, 7, 400e1fde <get_arg$isra$0+0x116>
400e1fdb:	0091c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e1fde:	ba0281        	l32r	a8, 400d07e8 <_flash_cache_start+0x7d0>
400e1fe1:	a08580        	addx4	a8, a5, a8
400e1fe4:	0888      	l32i.n	a8, a8, 0
400e1fe6:	0008a0        	jx	a8
400e1fe9:	2458      	l32i.n	a5, a4, 8
400e1feb:	881c      	movi.n	a8, 24
400e1fed:	954b      	addi.n	a9, a5, 4
400e1fef:	2499      	s32i.n	a9, a4, 8
400e1ff1:	a21b      	addi.n	a10, a2, 1
400e1ff3:	b02260        	addx8	a2, a2, a6
400e1ff6:	072897        	blt	a8, a9, 400e2001 <get_arg$isra$0+0x139>
400e1ff9:	1488      	l32i.n	a8, a4, 4
400e1ffb:	0002c6        	j	400e200a <get_arg$isra$0+0x142>
400e1ffe:	000000        	ill
400e2001:	032857        	blt	a8, a5, 400e2008 <get_arg$isra$0+0x140>
400e2004:	452c      	movi.n	a5, 36
400e2006:	2459      	s32i.n	a5, a4, 8
400e2008:	0488      	l32i.n	a8, a4, 0
400e200a:	2458      	l32i.n	a5, a4, 8
400e200c:	f97c      	movi.n	a9, -1
400e200e:	585a      	add.n	a5, a8, a5
400e2010:	fcc552        	addi	a5, a5, -4
400e2013:	0558      	l32i.n	a5, a5, 0
400e2015:	0259      	s32i.n	a5, a2, 0
400e2017:	0a2d      	mov.n	a2, a10
400e2019:	150c      	movi.n	a5, 1
400e201b:	0081c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e201e:	2458      	l32i.n	a5, a4, 8
400e2020:	887c      	movi.n	a8, -8
400e2022:	557b      	addi.n	a5, a5, 7
400e2024:	105580        	and	a5, a5, a8
400e2027:	958b      	addi.n	a9, a5, 8
400e2029:	2499      	s32i.n	a9, a4, 8
400e202b:	881c      	movi.n	a8, 24
400e202d:	a21b      	addi.n	a10, a2, 1
400e202f:	b02260        	addx8	a2, a2, a6
400e2032:	072897        	blt	a8, a9, 400e203d <get_arg$isra$0+0x175>
400e2035:	1488      	l32i.n	a8, a4, 4
400e2037:	0002c6        	j	400e2046 <get_arg$isra$0+0x17e>
400e203a:	000000        	ill
400e203d:	032857        	blt	a8, a5, 400e2044 <get_arg$isra$0+0x17c>
400e2040:	852c      	movi.n	a5, 40
400e2042:	2459      	s32i.n	a5, a4, 8
400e2044:	0488      	l32i.n	a8, a4, 0
400e2046:	2458      	l32i.n	a5, a4, 8
400e2048:	585a      	add.n	a5, a8, a5
400e204a:	f8c552        	addi	a5, a5, -8
400e204d:	1598      	l32i.n	a9, a5, 4
400e204f:	0588      	l32i.n	a8, a5, 0
400e2051:	1299      	s32i.n	a9, a2, 4
400e2053:	0289      	s32i.n	a8, a2, 0
400e2055:	f97c      	movi.n	a9, -1
400e2057:	0a2d      	mov.n	a2, a10
400e2059:	250c      	movi.n	a5, 2
400e205b:	0071c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e205e:	2458      	l32i.n	a5, a4, 8
400e2060:	881c      	movi.n	a8, 24
400e2062:	954b      	addi.n	a9, a5, 4
400e2064:	2499      	s32i.n	a9, a4, 8
400e2066:	a21b      	addi.n	a10, a2, 1
400e2068:	b02260        	addx8	a2, a2, a6
400e206b:	062897        	blt	a8, a9, 400e2075 <get_arg$isra$0+0x1ad>
400e206e:	1488      	l32i.n	a8, a4, 4
400e2070:	000286        	j	400e207e <get_arg$isra$0+0x1b6>
400e2073:	570000        	lsi	f0, a0, 0x15c
400e2076:	0328      	l32i.n	a2, a3, 0
400e2078:	452c      	movi.n	a5, 36
400e207a:	2459      	s32i.n	a5, a4, 8
400e207c:	0488      	l32i.n	a8, a4, 0
400e207e:	2458      	l32i.n	a5, a4, 8
400e2080:	f97c      	movi.n	a9, -1
400e2082:	585a      	add.n	a5, a8, a5
400e2084:	fcc552        	addi	a5, a5, -4
400e2087:	0558      	l32i.n	a5, a5, 0
400e2089:	0259      	s32i.n	a5, a2, 0
400e208b:	0a2d      	mov.n	a2, a10
400e208d:	650c      	movi.n	a5, 6
400e208f:	0064c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e2092:	2458      	l32i.n	a5, a4, 8
400e2094:	881c      	movi.n	a8, 24
400e2096:	954b      	addi.n	a9, a5, 4
400e2098:	2499      	s32i.n	a9, a4, 8
400e209a:	a21b      	addi.n	a10, a2, 1
400e209c:	b02260        	addx8	a2, a2, a6
400e209f:	062897        	blt	a8, a9, 400e20a9 <get_arg$isra$0+0x1e1>
400e20a2:	1488      	l32i.n	a8, a4, 4
400e20a4:	000286        	j	400e20b2 <get_arg$isra$0+0x1ea>
400e20a7:	570000        	lsi	f0, a0, 0x15c
400e20aa:	0328      	l32i.n	a2, a3, 0
400e20ac:	452c      	movi.n	a5, 36
400e20ae:	2459      	s32i.n	a5, a4, 8
400e20b0:	0488      	l32i.n	a8, a4, 0
400e20b2:	2458      	l32i.n	a5, a4, 8
400e20b4:	f97c      	movi.n	a9, -1
400e20b6:	585a      	add.n	a5, a8, a5
400e20b8:	fcc552        	addi	a5, a5, -4
400e20bb:	0558      	l32i.n	a5, a5, 0
400e20bd:	0259      	s32i.n	a5, a2, 0
400e20bf:	0a2d      	mov.n	a2, a10
400e20c1:	050c      	movi.n	a5, 0
400e20c3:	0057c6        	j	400e2226 <get_arg$isra$0+0x35e>
400e20c6:	2458      	l32i.n	a5, a4, 8
400e20c8:	881c      	movi.n	a8, 24
400e20ca:	954b      	addi.n	a9, a5, 4
400e20cc:	2499      	s32i.n	a9, a4, 8
400e20ce:	a21b      	addi.n	a10, a2, 1
400e20d0:	b02260        	addx8	a2, a2, a6
400e20d3:	062897        	blt	a8, a9, 400e20dd <get_arg$isra$0+0x215>
400e20d6:	1488      	l32i.n	a8, a4, 4
400e20d8:	000286        	j	400e20e6 <get_arg$isra$0+0x21e>
400e20db:	570000        	lsi	f0, a0, 0x15c
400e20de:	0328      	l32i.n	a2, a3, 0
400e20e0:	452c      	movi.n	a5, 36
400e20e2:	2459      	s32i.n	a5, a4, 8
400e20e4:	0488      	l32i.n	a8, a4, 0
400e20e6:	2458      	l32i.n	a5, a4, 8
400e20e8:	f97c      	movi.n	a9, -1
400e20ea:	585a      	add.n	a5, a8, a5
400e20ec:	fcc552        	addi	a5, a5, -4
400e20ef:	0558      	l32i.n	a5, a5, 0
400e20f1:	0259      	s32i.n	a5, a2, 0
400e20f3:	0a2d      	mov.n	a2, a10
400e20f5:	350c      	movi.n	a5, 3
400e20f7:	004ac6        	j	400e2226 <get_arg$isra$0+0x35e>
400e20fa:	2458      	l32i.n	a5, a4, 8
400e20fc:	887c      	movi.n	a8, -8
400e20fe:	557b      	addi.n	a5, a5, 7
400e2100:	105580        	and	a5, a5, a8
400e2103:	958b      	addi.n	a9, a5, 8
400e2105:	2499      	s32i.n	a9, a4, 8
400e2107:	881c      	movi.n	a8, 24
400e2109:	a21b      	addi.n	a10, a2, 1
400e210b:	b02260        	addx8	a2, a2, a6
400e210e:	072897        	blt	a8, a9, 400e2119 <get_arg$isra$0+0x251>
400e2111:	1488      	l32i.n	a8, a4, 4
400e2113:	0002c6        	j	400e2122 <get_arg$isra$0+0x25a>
400e2116:	000000        	ill
400e2119:	032857        	blt	a8, a5, 400e2120 <get_arg$isra$0+0x258>
400e211c:	852c      	movi.n	a5, 40
400e211e:	2459      	s32i.n	a5, a4, 8
400e2120:	0488      	l32i.n	a8, a4, 0
400e2122:	2458      	l32i.n	a5, a4, 8
400e2124:	585a      	add.n	a5, a8, a5
400e2126:	f8c552        	addi	a5, a5, -8
400e2129:	1598      	l32i.n	a9, a5, 4
400e212b:	0588      	l32i.n	a8, a5, 0
400e212d:	1299      	s32i.n	a9, a2, 4
400e212f:	0289      	s32i.n	a8, a2, 0
400e2131:	f97c      	movi.n	a9, -1
400e2133:	0a2d      	mov.n	a2, a10
400e2135:	450c      	movi.n	a5, 4
400e2137:	003ac6        	j	400e2226 <get_arg$isra$0+0x35e>
400e213a:	2488      	l32i.n	a8, a4, 8
400e213c:	8a7c      	movi.n	a10, -8
400e213e:	887b      	addi.n	a8, a8, 7
400e2140:	1088a0        	and	a8, a8, a10
400e2143:	b88b      	addi.n	a11, a8, 8
400e2145:	24b9      	s32i.n	a11, a4, 8
400e2147:	8a1c      	movi.n	a10, 24
400e2149:	c21b      	addi.n	a12, a2, 1
400e214b:	b02260        	addx8	a2, a2, a6
400e214e:	072ab7        	blt	a10, a11, 400e2159 <get_arg$isra$0+0x291>
400e2151:	14a8      	l32i.n	a10, a4, 4
400e2153:	0002c6        	j	400e2162 <get_arg$isra$0+0x29a>
400e2156:	000000        	ill
400e2159:	032a87        	blt	a10, a8, 400e2160 <get_arg$isra$0+0x298>
400e215c:	882c      	movi.n	a8, 40
400e215e:	2489      	s32i.n	a8, a4, 8
400e2160:	04a8      	l32i.n	a10, a4, 0
400e2162:	2488      	l32i.n	a8, a4, 8
400e2164:	8a8a      	add.n	a8, a10, a8
400e2166:	f8c882        	addi	a8, a8, -8
400e2169:	08a8      	l32i.n	a10, a8, 0
400e216b:	18b8      	l32i.n	a11, a8, 4
400e216d:	02a9      	s32i.n	a10, a2, 0
400e216f:	12b9      	s32i.n	a11, a2, 4
400e2171:	002006        	j	400e21f5 <get_arg$isra$0+0x32d>
400e2174:	0788      	l32i.n	a8, a7, 0
400e2176:	140866        	bnei	a8, -1, 400e218e <get_arg$isra$0+0x2c6>
400e2179:	80a0c2        	movi	a12, 128
400e217c:	0b0c      	movi.n	a11, 0
400e217e:	07ad      	mov.n	a10, a7
400e2180:	51d9      	s32i.n	a13, a1, 20
400e2182:	61e9      	s32i.n	a14, a1, 24
400e2184:	b7bc81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400e2187:	0008e0        	callx8	a8
400e218a:	61e8      	l32i.n	a14, a1, 24
400e218c:	51d8      	l32i.n	a13, a1, 20
400e218e:	0188      	l32i.n	a8, a1, 0
400e2190:	9e0b      	addi.n	a9, a14, -1
400e2192:	538890        	max	a8, a8, a9
400e2195:	000ac6        	j	400e21c4 <get_arg$isra$0+0x2fc>
400e2198:	0788      	l32i.n	a8, a7, 0
400e219a:	180866        	bnei	a8, -1, 400e21b6 <get_arg$isra$0+0x2ee>
400e219d:	80a0c2        	movi	a12, 128
400e21a0:	0b0c      	movi.n	a11, 0
400e21a2:	07ad      	mov.n	a10, a7
400e21a4:	4199      	s32i.n	a9, a1, 16
400e21a6:	51d9      	s32i.n	a13, a1, 20
400e21a8:	61e9      	s32i.n	a14, a1, 24
400e21aa:	b7b281        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400e21ad:	0008e0        	callx8	a8
400e21b0:	61e8      	l32i.n	a14, a1, 24
400e21b2:	51d8      	l32i.n	a13, a1, 20
400e21b4:	4198      	l32i.n	a9, a1, 16
400e21b6:	ee0b      	addi.n	a14, a14, -1
400e21b8:	a08e70        	addx4	a8, a14, a7
400e21bb:	0a0c      	movi.n	a10, 0
400e21bd:	08a9      	s32i.n	a10, a8, 0
400e21bf:	0188      	l32i.n	a8, a1, 0
400e21c1:	5388e0        	max	a8, a8, a14
400e21c4:	0189      	s32i.n	a8, a1, 0
400e21c6:	001706        	j	400e2226 <get_arg$isra$0+0x35e>
400e21c9:	0a3d      	mov.n	a3, a10
400e21cb:	2488      	l32i.n	a8, a4, 8
400e21cd:	8a1c      	movi.n	a10, 24
400e21cf:	b84b      	addi.n	a11, a8, 4
400e21d1:	24b9      	s32i.n	a11, a4, 8
400e21d3:	c21b      	addi.n	a12, a2, 1
400e21d5:	b02260        	addx8	a2, a2, a6
400e21d8:	052ab7        	blt	a10, a11, 400e21e1 <get_arg$isra$0+0x319>
400e21db:	14a8      	l32i.n	a10, a4, 4
400e21dd:	000246        	j	400e21ea <get_arg$isra$0+0x322>
400e21e0:	2a8700        	mul.s	f8, f7, f0
400e21e3:	482c03        	lsi	f0, a12, 0x120
400e21e6:	2489      	s32i.n	a8, a4, 8
400e21e8:	04a8      	l32i.n	a10, a4, 0
400e21ea:	2488      	l32i.n	a8, a4, 8
400e21ec:	8a8a      	add.n	a8, a10, a8
400e21ee:	fcc882        	addi	a8, a8, -4
400e21f1:	0888      	l32i.n	a8, a8, 0
400e21f3:	0289      	s32i.n	a8, a2, 0
400e21f5:	0c2d      	mov.n	a2, a12
400e21f7:	000ac6        	j	400e2226 <get_arg$isra$0+0x35e>
400e21fa:	d0c8e2        	addi	a14, a8, -48
400e21fd:	9a0c      	movi.n	a10, 9
400e21ff:	0001c6        	j	400e220a <get_arg$isra$0+0x342>
400e2202:	a0eee0        	addx4	a14, a14, a14
400e2205:	90ee80        	addx2	a14, a14, a8
400e2208:	331b      	addi.n	a3, a3, 1
400e220a:	000382        	l8ui	a8, a3, 0
400e220d:	589c      	beqz.n	a8, 400e2226 <get_arg$isra$0+0x35e>
400e220f:	d0c882        	addi	a8, a8, -48
400e2212:	ecba87        	bgeu	a10, a8, 400e2202 <get_arg$isra$0+0x33a>
400e2215:	000346        	j	400e2226 <get_arg$isra$0+0x35e>
400e2218:	331b      	addi.n	a3, a3, 1
400e221a:	000382        	l8ui	a8, a3, 0
400e221d:	d0c882        	addi	a8, a8, -48
400e2220:	748080        	extui	a8, a8, 0, 8
400e2223:	f1ba87        	bgeu	a10, a8, 400e2218 <get_arg$isra$0+0x350>
400e2226:	11a8      	l32i.n	a10, a1, 4
400e2228:	b80c      	movi.n	a8, 11
400e222a:	021a87        	beq	a10, a8, 400e2230 <get_arg$isra$0+0x368>
400e222d:	ff3306        	j	400e1efd <get_arg$isra$0+0x35>
400e2230:	000352        	l8ui	a5, a3, 0
400e2233:	658c      	beqz.n	a5, 400e223d <get_arg$isra$0+0x375>
400e2235:	2188      	l32i.n	a8, a1, 8
400e2237:	022827        	blt	a8, a2, 400e223d <get_arg$isra$0+0x375>
400e223a:	ff2986        	j	400e1ee4 <get_arg$isra$0+0x1c>
400e223d:	0188      	l32i.n	a8, a1, 0
400e223f:	000352        	l8ui	a5, a3, 0
400e2242:	2198      	l32i.n	a9, a1, 8
400e2244:	f21b      	addi.n	a15, a2, 1
400e2246:	839850        	moveqz	a9, a8, a5
400e2249:	0199      	s32i.n	a9, a1, 0
400e224b:	b0b260        	addx8	a11, a2, a6
400e224e:	a07270        	addx4	a7, a2, a7
400e2251:	8a1c      	movi.n	a10, 24
400e2253:	4c2c      	movi.n	a12, 36
400e2255:	8d7c      	movi.n	a13, -8
400e2257:	8e2c      	movi.n	a14, 40
400e2259:	002306        	j	400e22e9 <get_arg$isra$0+0x421>
400e225c:	0758      	l32i.n	a5, a7, 0
400e225e:	2428      	l32i.n	a2, a4, 8
400e2260:	550b      	addi.n	a5, a5, -1
400e2262:	5f65f6        	bgeui	a5, 6, 400e22c5 <get_arg$isra$0+0x3fd>
400e2265:	b96191        	l32r	a9, 400d07ec <_flash_cache_start+0x7d4>
400e2268:	a05590        	addx4	a5, a5, a9
400e226b:	0558      	l32i.n	a5, a5, 0
400e226d:	0005a0        	jx	a5
400e2270:	227b      	addi.n	a2, a2, 7
400e2272:	1022d0        	and	a2, a2, a13
400e2275:	528b      	addi.n	a5, a2, 8
400e2277:	2459      	s32i.n	a5, a4, 8
400e2279:	042a57        	blt	a10, a5, 400e2281 <get_arg$isra$0+0x3b9>
400e227c:	1458      	l32i.n	a5, a4, 4
400e227e:	000186        	j	400e2288 <get_arg$isra$0+0x3c0>
400e2281:	012a27        	blt	a10, a2, 400e2286 <get_arg$isra$0+0x3be>
400e2284:	24e9      	s32i.n	a14, a4, 8
400e2286:	0458      	l32i.n	a5, a4, 0
400e2288:	2428      	l32i.n	a2, a4, 8
400e228a:	252a      	add.n	a2, a5, a2
400e228c:	f8c222        	addi	a2, a2, -8
400e228f:	0288      	l32i.n	a8, a2, 0
400e2291:	1298      	l32i.n	a9, a2, 4
400e2293:	0b89      	s32i.n	a8, a11, 0
400e2295:	1b99      	s32i.n	a9, a11, 4
400e2297:	001206        	j	400e22e3 <get_arg$isra$0+0x41b>
400e229a:	227b      	addi.n	a2, a2, 7
400e229c:	1022d0        	and	a2, a2, a13
400e229f:	528b      	addi.n	a5, a2, 8
400e22a1:	2459      	s32i.n	a5, a4, 8
400e22a3:	052a57        	blt	a10, a5, 400e22ac <get_arg$isra$0+0x3e4>
400e22a6:	1458      	l32i.n	a5, a4, 4
400e22a8:	0001c6        	j	400e22b3 <get_arg$isra$0+0x3eb>
400e22ab:	2a2700        	mul.s	f2, f7, f0
400e22ae:	24e901        	l32r	a0, 400ab654 <_iram_end+0x1db00>
400e22b1:	0458      	l32i.n	a5, a4, 0
400e22b3:	2428      	l32i.n	a2, a4, 8
400e22b5:	252a      	add.n	a2, a5, a2
400e22b7:	f8c222        	addi	a2, a2, -8
400e22ba:	0288      	l32i.n	a8, a2, 0
400e22bc:	1298      	l32i.n	a9, a2, 4
400e22be:	0b89      	s32i.n	a8, a11, 0
400e22c0:	1b99      	s32i.n	a9, a11, 4
400e22c2:	000746        	j	400e22e3 <get_arg$isra$0+0x41b>
400e22c5:	524b      	addi.n	a5, a2, 4
400e22c7:	2459      	s32i.n	a5, a4, 8
400e22c9:	042a57        	blt	a10, a5, 400e22d1 <get_arg$isra$0+0x409>
400e22cc:	1458      	l32i.n	a5, a4, 4
400e22ce:	000186        	j	400e22d8 <get_arg$isra$0+0x410>
400e22d1:	012a27        	blt	a10, a2, 400e22d6 <get_arg$isra$0+0x40e>
400e22d4:	24c9      	s32i.n	a12, a4, 8
400e22d6:	0458      	l32i.n	a5, a4, 0
400e22d8:	2428      	l32i.n	a2, a4, 8
400e22da:	252a      	add.n	a2, a5, a2
400e22dc:	fcc222        	addi	a2, a2, -4
400e22df:	0228      	l32i.n	a2, a2, 0
400e22e1:	0b29      	s32i.n	a2, a11, 0
400e22e3:	ff1b      	addi.n	a15, a15, 1
400e22e5:	bb8b      	addi.n	a11, a11, 8
400e22e7:	774b      	addi.n	a7, a7, 4
400e22e9:	0158      	l32i.n	a5, a1, 0
400e22eb:	2f0b      	addi.n	a2, a15, -1
400e22ed:	022527        	blt	a5, a2, 400e22f3 <get_arg$isra$0+0x42b>
400e22f0:	ffda06        	j	400e225c <get_arg$isra$0+0x394>
400e22f3:	3188      	l32i.n	a8, a1, 12
400e22f5:	102192        	l32i	a9, a1, 64
400e22f8:	0829      	s32i.n	a2, a8, 0
400e22fa:	2188      	l32i.n	a8, a1, 8
400e22fc:	0939      	s32i.n	a3, a9, 0
400e22fe:	b02860        	addx8	a2, a8, a6
400e2301:	f01d      	retw.n
400e2303:	350c      	movi.n	a5, 3
400e2305:	020926        	beqi	a9, -1, 400e230b <get_arg$isra$0+0x443>
400e2308:	ff3106        	j	400e1fd0 <get_arg$isra$0+0x108>
400e230b:	ff6dc6        	j	400e20c6 <get_arg$isra$0+0x1fe>
400e230e:	650c      	movi.n	a5, 6
400e2310:	020926        	beqi	a9, -1, 400e2316 <get_arg$isra$0+0x44e>
400e2313:	ff2e46        	j	400e1fd0 <get_arg$isra$0+0x108>
400e2316:	ff5106        	j	400e205e <get_arg$isra$0+0x196>
400e2319:	150c      	movi.n	a5, 1
400e231b:	020926        	beqi	a9, -1, 400e2321 <get_arg$isra$0+0x459>
400e231e:	ff2b86        	j	400e1fd0 <get_arg$isra$0+0x108>
400e2321:	ff3106        	j	400e1fe9 <get_arg$isra$0+0x121>
400e2324:	450c      	movi.n	a5, 4
400e2326:	020926        	beqi	a9, -1, 400e232c <get_arg$isra$0+0x464>
400e2329:	ff28c6        	j	400e1fd0 <get_arg$isra$0+0x108>
400e232c:	ff7286        	j	400e20fa <get_arg$isra$0+0x232>
400e232f:	050c      	movi.n	a5, 0
400e2331:	020926        	beqi	a9, -1, 400e2337 <get_arg$isra$0+0x46f>
400e2334:	ff2606        	j	400e1fd0 <get_arg$isra$0+0x108>
400e2337:	ff55c6        	j	400e2092 <get_arg$isra$0+0x1ca>
400e233a:	250c      	movi.n	a5, 2
400e233c:	020926        	beqi	a9, -1, 400e2342 <get_arg$isra$0+0x47a>
400e233f:	ff2346        	j	400e1fd0 <get_arg$isra$0+0x108>
400e2342:	ff3606        	j	400e201e <get_arg$isra$0+0x156>
400e2345:	000000        	ill

400e2348 <_vfprintf_r>:
400e2348:	062136        	entry	a1, 0x310
400e234b:	a36122        	s32i	a2, a1, 0x28c
400e234e:	a321a2        	l32i	a10, a1, 0x28c
400e2351:	a26132        	s32i	a3, a1, 0x288
400e2354:	a16142        	s32i	a4, a1, 0x284
400e2357:	9c6152        	s32i	a5, a1, 0x270
400e235a:	9d6162        	s32i	a6, a1, 0x274
400e235d:	9e6172        	s32i	a7, a1, 0x278
400e2360:	b90b81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e2363:	0008e0        	callx8	a8
400e2366:	0aa8      	l32i.n	a10, a10, 0
400e2368:	b161a2        	s32i	a10, a1, 0x2c4
400e236b:	b74781        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e236e:	0008e0        	callx8	a8
400e2371:	a32182        	l32i	a8, a1, 0x28c
400e2374:	af61a2        	s32i	a10, a1, 0x2bc
400e2377:	a88c      	beqz.n	a8, 400e2385 <_vfprintf_r+0x3d>
400e2379:	6828      	l32i.n	a2, a8, 24
400e237b:	62cc      	bnez.n	a2, 400e2385 <_vfprintf_r+0x3d>
400e237d:	08ad      	mov.n	a10, a8
400e237f:	b8c481        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400e2382:	0008e0        	callx8	a8
400e2385:	b8b921        	l32r	a2, 400d066c <_flash_cache_start+0x654>
400e2388:	a22192        	l32i	a9, a1, 0x288
400e238b:	099927        	bne	a9, a2, 400e2398 <_vfprintf_r+0x50>
400e238e:	a32122        	l32i	a2, a1, 0x28c
400e2391:	1228      	l32i.n	a2, a2, 4
400e2393:	0008c6        	j	400e23ba <_vfprintf_r+0x72>
400e2396:	210000        	srai	a0, a0, 0
400e2399:	32b8b6        	bltui	a8, 16, 400e23cf <_vfprintf_r+0x87>
400e239c:	27a221        	l32r	a2, 400ac224 <_iram_end+0x1e6d0>
400e239f:	820a93        	lsi	f9, a10, 0x208
400e23a2:	88a321        	l32r	a2, 400c4630 <_rtc_text_end+0x4630>
400e23a5:	8228      	l32i.n	a2, a2, 32
400e23a7:	06a261        	l32r	a6, 400a3e30 <_iram_end+0x162dc>
400e23aa:	210004        	lsi	f0, a0, 132
400e23ad:	92b8b2        	l32ai	a11, a8, 0x248
400e23b0:	27a221        	l32r	a2, 400ac238 <_iram_end+0x1e6e4>
400e23b3:	0799      	s32i.n	a9, a7, 0
400e23b5:	a32122        	l32i	a2, a1, 0x28c
400e23b8:	3228      	l32i.n	a2, a2, 12
400e23ba:	a26122        	s32i	a2, a1, 0x288
400e23bd:	a22132        	l32i	a3, a1, 0x288
400e23c0:	192322        	l32i	a2, a3, 100
400e23c3:	0ee207        	bbsi	a2, 0, 400e23d5 <_vfprintf_r+0x8d>
400e23c6:	061322        	l16ui	a2, a3, 12
400e23c9:	08e297        	bbsi	a2, 9, 400e23d5 <_vfprintf_r+0x8d>
400e23cc:	58c3a2        	addi	a10, a3, 88
400e23cf:	201110        	or	a1, a1, a1
400e23d2:	a27065        	call8	40084ad8 <_lock_acquire_recursive>
400e23d5:	a22182        	l32i	a8, a1, 0x288
400e23d8:	b85c31        	l32r	a3, 400d0548 <_flash_cache_start+0x530>
400e23db:	061822        	l16ui	a2, a8, 12
400e23de:	234280        	sext	a4, a2, 15
400e23e1:	102320        	and	a2, a3, a2
400e23e4:	f42020        	extui	a2, a2, 0, 16
400e23e7:	011256        	bnez	a2, 400e23fc <_vfprintf_r+0xb4>
400e23ea:	203430        	or	a3, a4, a3
400e23ed:	065832        	s16i	a3, a8, 12
400e23f0:	b8ae21        	l32r	a2, 400d06a8 <_flash_cache_start+0x690>
400e23f3:	192832        	l32i	a3, a8, 100
400e23f6:	102320        	and	a2, a3, a2
400e23f9:	196822        	s32i	a2, a8, 100
400e23fc:	a22192        	l32i	a9, a1, 0x288
400e23ff:	061922        	l16ui	a2, a9, 12
400e2402:	036237        	bbci	a2, 3, 400e2409 <_vfprintf_r+0xc1>
400e2405:	4928      	l32i.n	a2, a9, 16
400e2407:	12fc      	bnez.n	a2, 400e243c <_vfprintf_r+0xf4>
400e2409:	a221b2        	l32i	a11, a1, 0x288
400e240c:	a321a2        	l32i	a10, a1, 0x28c
400e240f:	b8f381        	l32r	a8, 400d07dc <_flash_cache_start+0x7c4>
400e2412:	0008e0        	callx8	a8
400e2415:	3aac      	beqz.n	a10, 400e243c <_vfprintf_r+0xf4>
400e2417:	a22132        	l32i	a3, a1, 0x288
400e241a:	192322        	l32i	a2, a3, 100
400e241d:	036207        	bbci	a2, 0, 400e2424 <_vfprintf_r+0xdc>
400e2420:	000486        	j	400e2436 <_vfprintf_r+0xee>
400e2423:	218200        	srai	a8, a0, 2
400e2426:	1822a2        	l32i	a10, a2, 96
400e2429:	e29706        	j	400dae89 <heap_caps_add_region+0x5d>
400e242c:	a208      	l32i.n	a0, a2, 40
400e242e:	58c8      	l32i.n	a12, a8, 20
400e2430:	201110        	or	a1, a1, a1
400e2433:	a26e25        	call8	40084b14 <_lock_release_recursive>
400e2436:	f27c      	movi.n	a2, -1
400e2438:	f01d      	retw.n
400e243a:	920000        	lsi	f0, a0, 0x248
400e243d:	22a221        	l32r	a2, 400aaec8 <_iram_end+0x1d374>
400e2440:	321aa0        	orbc	b1, b10, b10
400e2443:	0619      	s32i.n	a1, a6, 0
400e2445:	102320        	and	a2, a3, a2
400e2448:	2e9266        	bnei	a2, 10, 400e247a <_vfprintf_r+0x132>
400e244b:	079922        	l16si	a2, a9, 14
400e244e:	028296        	bltz	a2, 400e247a <_vfprintf_r+0x132>
400e2451:	192922        	l32i	a2, a9, 100
400e2454:	08e207        	bbsi	a2, 0, 400e2460 <_vfprintf_r+0x118>
400e2457:	05e397        	bbsi	a3, 9, 400e2460 <_vfprintf_r+0x118>
400e245a:	58c9a2        	addi	a10, a9, 88
400e245d:	a26b65        	call8	40084b14 <_lock_release_recursive>
400e2460:	9c21d2        	l32i	a13, a1, 0x270
400e2463:	9d21e2        	l32i	a14, a1, 0x274
400e2466:	9e21f2        	l32i	a15, a1, 0x278
400e2469:	a121c2        	l32i	a12, a1, 0x284
400e246c:	a221b2        	l32i	a11, a1, 0x288
400e246f:	a321a2        	l32i	a10, a1, 0x28c
400e2472:	030fa5        	call8	400e556c <__sbprintf>
400e2475:	202aa0        	or	a2, a10, a10
400e2478:	f01d      	retw.n
400e247a:	f47c      	movi.n	a4, -1
400e247c:	10c1e2        	addi	a14, a1, 16
400e247f:	e4a132        	movi	a3, 0x1e4
400e2482:	446142        	s32i	a4, a1, 0x110
400e2485:	b6f751        	l32r	a5, 400d0064 <_flash_cache_start+0x4c>
400e2488:	b6f741        	l32r	a4, 400d0064 <_flash_cache_start+0x4c>
400e248b:	020c      	movi.n	a2, 0
400e248d:	3e3a      	add.n	a3, a14, a3
400e248f:	8d6132        	s32i	a3, a1, 0x234
400e2492:	8f6122        	s32i	a2, a1, 0x23c
400e2495:	8e6122        	s32i	a2, a1, 0x238
400e2498:	966122        	s32i	a2, a1, 0x258
400e249b:	976122        	s32i	a2, a1, 0x25c
400e249e:	a76122        	s32i	a2, a1, 0x29c
400e24a1:	aa6142        	s32i	a4, a1, 0x2a8
400e24a4:	ab6152        	s32i	a5, a1, 0x2ac
400e24a7:	9f6132        	s32i	a3, a1, 0x27c
400e24aa:	b56122        	s32i	a2, a1, 0x2d4
400e24ad:	b46122        	s32i	a2, a1, 0x2d0
400e24b0:	ad6122        	s32i	a2, a1, 0x2b4
400e24b3:	b06122        	s32i	a2, a1, 0x2c0
400e24b6:	b36122        	s32i	a2, a1, 0x2cc
400e24b9:	ae6122        	s32i	a2, a1, 0x2b8
400e24bc:	0001c6        	j	400e24c7 <_vfprintf_r+0x17f>
400e24bf:	a82152        	l32i	a5, a1, 0x2a0
400e24c2:	072d      	mov.n	a2, a7
400e24c4:	a16152        	s32i	a5, a1, 0x284
400e24c7:	a12152        	l32i	a5, a1, 0x284
400e24ca:	000046        	j	400e24cf <_vfprintf_r+0x187>
400e24cd:	551b      	addi.n	a5, a5, 1
400e24cf:	000532        	l8ui	a3, a5, 0
400e24d2:	438c      	beqz.n	a3, 400e24da <_vfprintf_r+0x192>
400e24d4:	dbc332        	addi	a3, a3, -37
400e24d7:	ff2356        	bnez	a3, 400e24cd <_vfprintf_r+0x185>
400e24da:	a12182        	l32i	a8, a1, 0x284
400e24dd:	c03580        	sub	a3, a5, a8
400e24e0:	051316        	beqz	a3, 400e2535 <_vfprintf_r+0x1ed>
400e24e3:	8f2142        	l32i	a4, a1, 0x23c
400e24e6:	9f2192        	l32i	a9, a1, 0x27c
400e24e9:	443a      	add.n	a4, a4, a3
400e24eb:	8f6142        	s32i	a4, a1, 0x23c
400e24ee:	8e2142        	l32i	a4, a1, 0x238
400e24f1:	10c1a2        	addi	a10, a1, 16
400e24f4:	441b      	addi.n	a4, a4, 1
400e24f6:	0989      	s32i.n	a8, a9, 0
400e24f8:	1939      	s32i.n	a3, a9, 4
400e24fa:	8e6142        	s32i	a4, a1, 0x238
400e24fd:	02da62        	addmi	a6, a10, 0x200
400e2500:	0884e6        	bgei	a4, 8, 400e250c <_vfprintf_r+0x1c4>
400e2503:	998b      	addi.n	a9, a9, 8
400e2505:	9f6192        	s32i	a9, a1, 0x27c
400e2508:	000846        	j	400e252d <_vfprintf_r+0x1e5>
400e250b:	a2c200        	muluh	a12, a2, a0
400e250e:	21b234        	lsi	f3, a2, 132
400e2511:	21a2a2        	movi	a10, 0x221
400e2514:	cc10a3        	lsi	f10, a0, 0x330
400e2517:	78a580        	lsi	f8, a5, 0x1e0
400e251a:	16fd      	lsi	f15, a6, 24
400e251c:	002a      	add.n	a0, a0, a2
400e251e:	0bf8c6        	j	400e5505 <_vfprintf_r+0x31bd>
400e2521:	e4a142        	movi	a4, 0x1e4
400e2524:	10c162        	addi	a6, a1, 16
400e2527:	806640        	add	a6, a6, a4
400e252a:	9f6162        	s32i	a6, a1, 0x27c
400e252d:	ae2182        	l32i	a8, a1, 0x2b8
400e2530:	883a      	add.n	a8, a8, a3
400e2532:	ae6182        	s32i	a8, a1, 0x2b8
400e2535:	000532        	l8ui	a3, a5, 0
400e2538:	13cc      	bnez.n	a3, 400e253d <_vfprintf_r+0x1f5>
400e253a:	0be386        	j	400e54cc <_vfprintf_r+0x3184>
400e253d:	10c192        	addi	a9, a1, 16
400e2540:	060c      	movi.n	a6, 0
400e2542:	02d942        	addmi	a4, a9, 0x200
400e2545:	524462        	s8i	a6, a4, 82
400e2548:	060c      	movi.n	a6, 0
400e254a:	f47c      	movi.n	a4, -1
400e254c:	a56142        	s32i	a4, a1, 0x294
400e254f:	ac6162        	s32i	a6, a1, 0x2b0
400e2552:	064d      	mov.n	a4, a6
400e2554:	a06162        	s32i	a6, a1, 0x280
400e2557:	4ca262        	movi	a6, 0x24c
400e255a:	896a      	add.n	a8, a9, a6
400e255c:	351b      	addi.n	a3, a5, 1
400e255e:	027d      	mov.n	a7, a2
400e2560:	a46182        	s32i	a8, a1, 0x290
400e2563:	000286        	j	400e2571 <_vfprintf_r+0x229>
400e2566:	000000        	ill
400e2569:	a86132        	s32i	a3, a1, 0x2a0
400e256c:	040c      	movi.n	a4, 0
400e256e:	a82132        	l32i	a3, a1, 0x2a0
400e2571:	931b      	addi.n	a9, a3, 1
400e2573:	000332        	l8ui	a3, a3, 0
400e2576:	a86192        	s32i	a9, a1, 0x2a0
400e2579:	a66132        	s32i	a3, a1, 0x298
400e257c:	b8a3d1        	l32r	a13, 400d0808 <_flash_cache_start+0x7f0>
400e257f:	980c      	movi.n	a8, 9
400e2581:	4a2c      	movi.n	a10, 36
400e2583:	ab2c      	movi.n	a11, 42
400e2585:	fc7c      	movi.n	a12, -1
400e2587:	000106        	j	400e258f <_vfprintf_r+0x247>
400e258a:	320000        	orbc	b0, b0, b0
400e258d:	62ac61        	l32r	a6, 400bb040 <_iram_end+0x2d4ec>
400e2590:	5ca621        	l32r	a2, 400b9828 <_iram_end+0x2bcd4>
400e2593:	32a9      	s32i.n	a10, a2, 12
400e2595:	37e0c6        	j	400f051c <_etext+0x3c3f>
400e2598:	02b9      	s32i.n	a11, a2, 0
400e259a:	08a486        	j	400e4830 <_vfprintf_r+0x24e8>
400e259d:	a033d0        	addx4	a3, a3, a13
400e25a0:	0338      	l32i.n	a3, a3, 0
400e25a2:	0003a0        	jx	a3
400e25a5:	310000        	srai	a0, a0, 16
400e25a8:	32b897        	bgeu	a8, a9, 400e25de <_vfprintf_r+0x296>
400e25ab:	06b561        	l32r	a6, 400a4080 <_iram_end+0x1652c>
400e25ae:	a20722        	l8ui	a2, a7, 162
400e25b1:	81a321        	l32r	a2, 400c2c40 <_rtc_text_end+0x2c40>
400e25b4:	e0b876        	lsi	f7, a8, 0x380
400e25b7:	0008      	l32i.n	a0, a0, 0
400e25b9:	1aa8      	l32i.n	a10, a10, 4
400e25bb:	b361a2        	s32i	a10, a1, 0x2cc
400e25be:	b6b281        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e25c1:	0008e0        	callx8	a8
400e25c4:	b061a2        	s32i	a10, a1, 0x2c0
400e25c7:	a321a2        	l32i	a10, a1, 0x28c
400e25ca:	b87081        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e25cd:	0008e0        	callx8	a8
400e25d0:	2aa8      	l32i.n	a10, a10, 8
400e25d2:	b02162        	l32i	a6, a1, 0x2c0
400e25d5:	ad61a2        	s32i	a10, a1, 0x2b4
400e25d8:	f92616        	beqz	a6, 400e256e <_vfprintf_r+0x226>
400e25db:	f8fa16        	beqz	a10, 400e256e <_vfprintf_r+0x226>
400e25de:	000a32        	l8ui	a3, a10, 0
400e25e1:	f89316        	beqz	a3, 400e256e <_vfprintf_r+0x226>
400e25e4:	00a432        	movi	a3, 0x400
400e25e7:	00c006        	j	400e28eb <_vfprintf_r+0x5a3>
400e25ea:	10c192        	addi	a9, a1, 16
400e25ed:	02d932        	addmi	a3, a9, 0x200
400e25f0:	520362        	l8ui	a6, a3, 82
400e25f3:	f77656        	bnez	a6, 400e256e <_vfprintf_r+0x226>
400e25f6:	062c      	movi.n	a6, 32
400e25f8:	004606        	j	400e2714 <_vfprintf_r+0x3cc>
400e25fb:	130c      	movi.n	a3, 1
400e25fd:	00b0c6        	j	400e28c4 <_vfprintf_r+0x57c>
400e2600:	a82182        	l32i	a8, a1, 0x2a0
400e2603:	000862        	l8ui	a6, a8, 0
400e2606:	980c      	movi.n	a8, 9
400e2608:	d0c632        	addi	a3, a6, -48
400e260b:	02b837        	bgeu	a8, a3, 400e2611 <_vfprintf_r+0x2c9>
400e260e:	0bc706        	j	400e552e <_vfprintf_r+0x31e6>
400e2611:	a82192        	l32i	a9, a1, 0x2a0
400e2614:	0a0c      	movi.n	a10, 0
400e2616:	391b      	addi.n	a3, a9, 1
400e2618:	d0c662        	addi	a6, a6, -48
400e261b:	a0aaa0        	addx4	a10, a10, a10
400e261e:	331b      	addi.n	a3, a3, 1
400e2620:	90aa60        	addx2	a10, a10, a6
400e2623:	630b      	addi.n	a6, a3, -1
400e2625:	000662        	l8ui	a6, a6, 0
400e2628:	d0c692        	addi	a9, a6, -48
400e262b:	e9b897        	bgeu	a8, a9, 400e2618 <_vfprintf_r+0x2d0>
400e262e:	482c      	movi.n	a8, 36
400e2630:	021687        	beq	a6, a8, 400e2636 <_vfprintf_r+0x2ee>
400e2633:	ffcd46        	j	400e256c <_vfprintf_r+0x224>
400e2636:	062c      	movi.n	a6, 32
400e2638:	02a6a7        	bge	a6, a10, 400e263e <_vfprintf_r+0x2f6>
400e263b:	0bb186        	j	400e5505 <_vfprintf_r+0x31bd>
400e263e:	972162        	l32i	a6, a1, 0x25c
400e2641:	aa0b      	addi.n	a10, a10, -1
400e2643:	09aa67        	bge	a10, a6, 400e2650 <_vfprintf_r+0x308>
400e2646:	10c1e2        	addi	a14, a1, 16
400e2649:	b0aae0        	addx8	a10, a10, a14
400e264c:	000706        	j	400e266c <_vfprintf_r+0x324>
400e264f:	c18200        	mul16u	a8, a2, a0
400e2652:	a26210        	muluh	a6, a2, a1
400e2655:	6a48      	l32i.n	a4, a10, 24
400e2657:	c268      	l32i.n	a6, a2, 48
400e2659:	d260a2        	s32i	a10, a0, 0x348
400e265c:	69a421        	l32r	a2, 400bccec <_iram_end+0x2f198>
400e265f:	d8f201        	l32r	a0, 400d8a28 <nvs::Page::load(unsigned int)+0x20>
400e2662:	08ed01        	l32r	a0, 400a4a18 <_iram_end+0x16ec4>
400e2665:	c8ca      	add.n	a12, a8, a12
400e2667:	05bd      	mov.n	a11, a5
400e2669:	ff85e5        	call8	400e1ec8 <get_arg$isra$0>
400e266c:	0aa8      	l32i.n	a10, a10, 0
400e266e:	076d      	mov.n	a6, a7
400e2670:	ac61a2        	s32i	a10, a1, 0x2b0
400e2673:	a86132        	s32i	a3, a1, 0x2a0
400e2676:	001fc6        	j	400e26f9 <_vfprintf_r+0x3b1>
400e2679:	10c192        	addi	a9, a1, 16
400e267c:	b03290        	addx8	a3, a2, a9
400e267f:	001c46        	j	400e26f4 <_vfprintf_r+0x3ac>
400e2682:	f31c      	movi.n	a3, 31
400e2684:	402387        	blt	a3, a8, 400e26c8 <_vfprintf_r+0x380>
400e2687:	381b      	addi.n	a3, a8, 1
400e2689:	10c1a2        	addi	a10, a1, 16
400e268c:	976132        	s32i	a3, a1, 0x25c
400e268f:	02da32        	addmi	a3, a10, 0x200
400e2692:	1a2372        	l32i	a7, a3, 104
400e2695:	891c      	movi.n	a9, 24
400e2697:	a74b      	addi.n	a10, a7, 4
400e2699:	1a63a2        	s32i	a10, a3, 104
400e269c:	0529a7        	blt	a9, a10, 400e26a5 <_vfprintf_r+0x35d>
400e269f:	192372        	l32i	a7, a3, 100
400e26a2:	000286        	j	400e26b0 <_vfprintf_r+0x368>
400e26a5:	042977        	blt	a9, a7, 400e26ad <_vfprintf_r+0x365>
400e26a8:	472c      	movi.n	a7, 36
400e26aa:	1a6372        	s32i	a7, a3, 104
400e26ad:	9c2172        	l32i	a7, a1, 0x270
400e26b0:	9e2132        	l32i	a3, a1, 0x278
400e26b3:	10c1e2        	addi	a14, a1, 16
400e26b6:	373a      	add.n	a3, a7, a3
400e26b8:	fcc332        	addi	a3, a3, -4
400e26bb:	0338      	l32i.n	a3, a3, 0
400e26bd:	b088e0        	addx8	a8, a8, a14
400e26c0:	ac6132        	s32i	a3, a1, 0x2b0
400e26c3:	0839      	s32i.n	a3, a8, 0
400e26c5:	000c06        	j	400e26f9 <_vfprintf_r+0x3b1>
400e26c8:	10c182        	addi	a8, a1, 16
400e26cb:	02d832        	addmi	a3, a8, 0x200
400e26ce:	1a2372        	l32i	a7, a3, 104
400e26d1:	881c      	movi.n	a8, 24
400e26d3:	974b      	addi.n	a9, a7, 4
400e26d5:	1a6392        	s32i	a9, a3, 104
400e26d8:	052897        	blt	a8, a9, 400e26e1 <_vfprintf_r+0x399>
400e26db:	192372        	l32i	a7, a3, 100
400e26de:	000286        	j	400e26ec <_vfprintf_r+0x3a4>
400e26e1:	042877        	blt	a8, a7, 400e26e9 <_vfprintf_r+0x3a1>
400e26e4:	472c      	movi.n	a7, 36
400e26e6:	1a6372        	s32i	a7, a3, 104
400e26e9:	9c2172        	l32i	a7, a1, 0x270
400e26ec:	9e2132        	l32i	a3, a1, 0x278
400e26ef:	373a      	add.n	a3, a7, a3
400e26f1:	fcc332        	addi	a3, a3, -4
400e26f4:	0338      	l32i.n	a3, a3, 0
400e26f6:	ac6132        	s32i	a3, a1, 0x2b0
400e26f9:	ac2192        	l32i	a9, a1, 0x2b0
400e26fc:	067d      	mov.n	a7, a6
400e26fe:	e6c9d6        	bgez	a9, 400e256e <_vfprintf_r+0x226>
400e2701:	609090        	neg	a9, a9
400e2704:	ac6192        	s32i	a9, a1, 0x2b0
400e2707:	430c      	movi.n	a3, 4
400e2709:	006dc6        	j	400e28c4 <_vfprintf_r+0x57c>
400e270c:	10c182        	addi	a8, a1, 16
400e270f:	b62c      	movi.n	a6, 43
400e2711:	02d832        	addmi	a3, a8, 0x200
400e2714:	524362        	s8i	a6, a3, 82
400e2717:	ff94c6        	j	400e256e <_vfprintf_r+0x226>
400e271a:	a82192        	l32i	a9, a1, 0x2a0
400e271d:	000962        	l8ui	a6, a9, 0
400e2720:	391b      	addi.n	a3, a9, 1
400e2722:	a66162        	s32i	a6, a1, 0x298
400e2725:	0416b7        	beq	a6, a11, 400e272d <_vfprintf_r+0x3e5>
400e2728:	060c      	movi.n	a6, 0
400e272a:	004706        	j	400e284a <_vfprintf_r+0x502>
400e272d:	a82182        	l32i	a8, a1, 0x2a0
400e2730:	010862        	l8ui	a6, a8, 1
400e2733:	980c      	movi.n	a8, 9
400e2735:	d0c692        	addi	a9, a6, -48
400e2738:	02b897        	bgeu	a8, a9, 400e273e <_vfprintf_r+0x3f6>
400e273b:	0b7f46        	j	400e553c <_vfprintf_r+0x31f4>
400e273e:	a82192        	l32i	a9, a1, 0x2a0
400e2741:	0a0c      	movi.n	a10, 0
400e2743:	992b      	addi.n	a9, a9, 2
400e2745:	a86192        	s32i	a9, a1, 0x2a0
400e2748:	d0c662        	addi	a6, a6, -48
400e274b:	a0aaa0        	addx4	a10, a10, a10
400e274e:	90aa60        	addx2	a10, a10, a6
400e2751:	a82162        	l32i	a6, a1, 0x2a0
400e2754:	661b      	addi.n	a6, a6, 1
400e2756:	a86162        	s32i	a6, a1, 0x2a0
400e2759:	660b      	addi.n	a6, a6, -1
400e275b:	000662        	l8ui	a6, a6, 0
400e275e:	d0c692        	addi	a9, a6, -48
400e2761:	e3b897        	bgeu	a8, a9, 400e2748 <_vfprintf_r+0x400>
400e2764:	482c      	movi.n	a8, 36
400e2766:	021687        	beq	a6, a8, 400e276c <_vfprintf_r+0x424>
400e2769:	ff7f06        	j	400e2569 <_vfprintf_r+0x221>
400e276c:	032c      	movi.n	a3, 32
400e276e:	02a3a7        	bge	a3, a10, 400e2774 <_vfprintf_r+0x42c>
400e2771:	0b6406        	j	400e5505 <_vfprintf_r+0x31bd>
400e2774:	972132        	l32i	a3, a1, 0x25c
400e2777:	aa0b      	addi.n	a10, a10, -1
400e2779:	08aa37        	bge	a10, a3, 400e2785 <_vfprintf_r+0x43d>
400e277c:	10c182        	addi	a8, a1, 16
400e277f:	b0aa80        	addx8	a10, a10, a8
400e2782:	0006c6        	j	400e27a1 <_vfprintf_r+0x459>
400e2785:	10c192        	addi	a9, a1, 16
400e2788:	48a232        	movi	a3, 0x248
400e278b:	393a      	add.n	a3, a9, a3
400e278d:	60a2c2        	movi	a12, 0x260
400e2790:	a421d2        	l32i	a13, a1, 0x290
400e2793:	0139      	s32i.n	a3, a1, 0
400e2795:	01d9f2        	addmi	a15, a9, 0x100
400e2798:	09ed      	mov.n	a14, a9
400e279a:	c9ca      	add.n	a12, a9, a12
400e279c:	05bd      	mov.n	a11, a5
400e279e:	ff72a5        	call8	400e1ec8 <get_arg$isra$0>
400e27a1:	0aa8      	l32i.n	a10, a10, 0
400e27a3:	a561a2        	s32i	a10, a1, 0x294
400e27a6:	002106        	j	400e282e <_vfprintf_r+0x4e6>
400e27a9:	10c1a2        	addi	a10, a1, 16
400e27ac:	b062a0        	addx8	a6, a2, a10
400e27af:	001c46        	j	400e2824 <_vfprintf_r+0x4dc>
400e27b2:	f71c      	movi.n	a7, 31
400e27b4:	402767        	blt	a7, a6, 400e27f8 <_vfprintf_r+0x4b0>
400e27b7:	761b      	addi.n	a7, a6, 1
400e27b9:	10c1e2        	addi	a14, a1, 16
400e27bc:	976172        	s32i	a7, a1, 0x25c
400e27bf:	02de72        	addmi	a7, a14, 0x200
400e27c2:	1a2792        	l32i	a9, a7, 104
400e27c5:	8a1c      	movi.n	a10, 24
400e27c7:	b94b      	addi.n	a11, a9, 4
400e27c9:	1a67b2        	s32i	a11, a7, 104
400e27cc:	052ab7        	blt	a10, a11, 400e27d5 <_vfprintf_r+0x48d>
400e27cf:	192792        	l32i	a9, a7, 100
400e27d2:	000286        	j	400e27e0 <_vfprintf_r+0x498>
400e27d5:	042a97        	blt	a10, a9, 400e27dd <_vfprintf_r+0x495>
400e27d8:	492c      	movi.n	a9, 36
400e27da:	1a6792        	s32i	a9, a7, 104
400e27dd:	9c2192        	l32i	a9, a1, 0x270
400e27e0:	9e2172        	l32i	a7, a1, 0x278
400e27e3:	10c1a2        	addi	a10, a1, 16
400e27e6:	797a      	add.n	a7, a9, a7
400e27e8:	fcc772        	addi	a7, a7, -4
400e27eb:	0798      	l32i.n	a9, a7, 0
400e27ed:	b066a0        	addx8	a6, a6, a10
400e27f0:	a56192        	s32i	a9, a1, 0x294
400e27f3:	0699      	s32i.n	a9, a6, 0
400e27f5:	000c06        	j	400e2829 <_vfprintf_r+0x4e1>
400e27f8:	10c1e2        	addi	a14, a1, 16
400e27fb:	02de62        	addmi	a6, a14, 0x200
400e27fe:	1a2672        	l32i	a7, a6, 104
400e2801:	891c      	movi.n	a9, 24
400e2803:	a74b      	addi.n	a10, a7, 4
400e2805:	1a66a2        	s32i	a10, a6, 104
400e2808:	0529a7        	blt	a9, a10, 400e2811 <_vfprintf_r+0x4c9>
400e280b:	192672        	l32i	a7, a6, 100
400e280e:	000286        	j	400e281c <_vfprintf_r+0x4d4>
400e2811:	042977        	blt	a9, a7, 400e2819 <_vfprintf_r+0x4d1>
400e2814:	472c      	movi.n	a7, 36
400e2816:	1a6672        	s32i	a7, a6, 104
400e2819:	9c2172        	l32i	a7, a1, 0x270
400e281c:	9e2162        	l32i	a6, a1, 0x278
400e281f:	676a      	add.n	a6, a7, a6
400e2821:	fcc662        	addi	a6, a6, -4
400e2824:	0668      	l32i.n	a6, a6, 0
400e2826:	a56162        	s32i	a6, a1, 0x294
400e2829:	a86132        	s32i	a3, a1, 0x2a0
400e282c:	087d      	mov.n	a7, a8
400e282e:	a52162        	l32i	a6, a1, 0x294
400e2831:	f37c      	movi.n	a3, -1
400e2833:	536630        	max	a6, a6, a3
400e2836:	a56162        	s32i	a6, a1, 0x294
400e2839:	ff4c46        	j	400e256e <_vfprintf_r+0x226>
400e283c:	a06660        	addx4	a6, a6, a6
400e283f:	906690        	addx2	a6, a6, a9
400e2842:	000392        	l8ui	a9, a3, 0
400e2845:	331b      	addi.n	a3, a3, 1
400e2847:	a66192        	s32i	a9, a1, 0x298
400e284a:	a621e2        	l32i	a14, a1, 0x298
400e284d:	a86132        	s32i	a3, a1, 0x2a0
400e2850:	d0ce92        	addi	a9, a14, -48
400e2853:	e5b897        	bgeu	a8, a9, 400e283c <_vfprintf_r+0x4f4>
400e2856:	5366c0        	max	a6, a6, a12
400e2859:	a56162        	s32i	a6, a1, 0x294
400e285c:	ac2132        	l32i	a3, a1, 0x2b0
400e285f:	ff4a46        	j	400e258c <_vfprintf_r+0x244>
400e2862:	320000        	orbc	b0, b0, b0
400e2865:	4680a0        	lsi	f10, a0, 0x118
400e2868:	0c0016        	beqz	a0, 400e292c <_vfprintf_r+0x5e4>
400e286b:	219203        	lsi	f0, a2, 132
400e286e:	3330a6        	blti	a0, 3, 400e28a5 <_vfprintf_r+0x55d>
400e2871:	c962a0        	lsi	f10, a2, 0x324
400e2874:	3360d0        	clamps	a6, a0, 20
400e2877:	216290        	srai	a6, a9, 2
400e287a:	1ba8      	l32i.n	a10, a11, 4
400e287c:	616266        	bnei	a2, 6, 400e28e1 <_vfprintf_r+0x599>
400e287f:	0ba8      	l32i.n	a10, a11, 0
400e2881:	066266        	bnei	a2, 6, 400e288b <_vfprintf_r+0x543>
400e2884:	616200        	lsi	f0, a2, 0x184
400e2887:	c662a6        	blti	a2, 6, 400e2851 <_vfprintf_r+0x509>
400e288a:	b867d0        	lsi	f13, a7, 0x2e0
400e288d:	92dd      	lsi	f13, a2, 8
400e288f:	a7a621        	l32r	a2, 400cc728 <_rtc_text_end+0xc728>
400e2892:	0219      	s32i.n	a1, a2, 0
400e2894:	ff3d06        	j	400e258c <_vfprintf_r+0x244>
400e2897:	022c      	movi.n	a2, 32
400e2899:	02a237        	bge	a2, a3, 400e289f <_vfprintf_r+0x557>
400e289c:	0b1946        	j	400e5505 <_vfprintf_r+0x31bd>
400e289f:	230b      	addi.n	a2, a3, -1
400e28a1:	140c      	movi.n	a4, 1
400e28a3:	ff31c6        	j	400e256e <_vfprintf_r+0x226>
400e28a6:	830c      	movi.n	a3, 8
400e28a8:	000606        	j	400e28c4 <_vfprintf_r+0x57c>
400e28ab:	a82182        	l32i	a8, a1, 0x2a0
400e28ae:	68a032        	movi	a3, 104
400e28b1:	000862        	l8ui	a6, a8, 0
400e28b4:	0a9637        	bne	a6, a3, 400e28c2 <_vfprintf_r+0x57a>
400e28b7:	881b      	addi.n	a8, a8, 1
400e28b9:	a86182        	s32i	a8, a1, 0x2a0
400e28bc:	00a232        	movi	a3, 0x200
400e28bf:	000d86        	j	400e28f9 <_vfprintf_r+0x5b1>
400e28c2:	034c      	movi.n	a3, 64
400e28c4:	a02162        	l32i	a6, a1, 0x280
400e28c7:	206630        	or	a6, a6, a3
400e28ca:	a06162        	s32i	a6, a1, 0x280
400e28cd:	ff2746        	j	400e256e <_vfprintf_r+0x226>
400e28d0:	a82182        	l32i	a8, a1, 0x2a0
400e28d3:	6ca032        	movi	a3, 108
400e28d6:	000862        	l8ui	a6, a8, 0
400e28d9:	079637        	bne	a6, a3, 400e28e4 <_vfprintf_r+0x59c>
400e28dc:	881b      	addi.n	a8, a8, 1
400e28de:	a86182        	s32i	a8, a1, 0x2a0
400e28e1:	000486        	j	400e28f7 <_vfprintf_r+0x5af>
400e28e4:	031c      	movi.n	a3, 16
400e28e6:	fff686        	j	400e28c4 <_vfprintf_r+0x57c>
400e28e9:	032c      	movi.n	a3, 32
400e28eb:	a02182        	l32i	a8, a1, 0x280
400e28ee:	208830        	or	a8, a8, a3
400e28f1:	a06182        	s32i	a8, a1, 0x280
400e28f4:	ff1d86        	j	400e256e <_vfprintf_r+0x226>
400e28f7:	032c      	movi.n	a3, 32
400e28f9:	a02192        	l32i	a9, a1, 0x280
400e28fc:	209930        	or	a9, a9, a3
400e28ff:	a06192        	s32i	a9, a1, 0x280
400e2902:	ff1a06        	j	400e256e <_vfprintf_r+0x226>
400e2905:	972132        	l32i	a3, a1, 0x25c
400e2908:	44bc      	beqz.n	a4, 400e2940 <_vfprintf_r+0x5f8>
400e290a:	0ba237        	bge	a2, a3, 400e2919 <_vfprintf_r+0x5d1>
400e290d:	10c1a2        	addi	a10, a1, 16
400e2910:	b022a0        	addx8	a2, a2, a10
400e2913:	000222        	l8ui	a2, a2, 0
400e2916:	000846        	j	400e293b <_vfprintf_r+0x5f3>
400e2919:	10c1e2        	addi	a14, a1, 16
400e291c:	48a232        	movi	a3, 0x248
400e291f:	3e3a      	add.n	a3, a14, a3
400e2921:	4ca2d2        	movi	a13, 0x24c
400e2924:	60a2c2        	movi	a12, 0x260
400e2927:	02ad      	mov.n	a10, a2
400e2929:	0139      	s32i.n	a3, a1, 0
400e292b:	01def2        	addmi	a15, a14, 0x100
400e292e:	deda      	add.n	a13, a14, a13
400e2930:	ceca      	add.n	a12, a14, a12
400e2932:	20b550        	or	a11, a5, a5
400e2935:	ff5925        	call8	400e1ec8 <get_arg$isra$0>
400e2938:	000a22        	l8ui	a2, a10, 0
400e293b:	074d      	mov.n	a4, a7
400e293d:	002086        	j	400e29c3 <_vfprintf_r+0x67b>
400e2940:	471b      	addi.n	a4, a7, 1
400e2942:	08a737        	bge	a7, a3, 400e294e <_vfprintf_r+0x606>
400e2945:	10c132        	addi	a3, a1, 16
400e2948:	b02230        	addx8	a2, a2, a3
400e294b:	001c46        	j	400e29c0 <_vfprintf_r+0x678>
400e294e:	f21c      	movi.n	a2, 31
400e2950:	402237        	blt	a2, a3, 400e2994 <_vfprintf_r+0x64c>
400e2953:	231b      	addi.n	a2, a3, 1
400e2955:	10c152        	addi	a5, a1, 16
400e2958:	976122        	s32i	a2, a1, 0x25c
400e295b:	02d522        	addmi	a2, a5, 0x200
400e295e:	1a2252        	l32i	a5, a2, 104
400e2961:	861c      	movi.n	a6, 24
400e2963:	754b      	addi.n	a7, a5, 4
400e2965:	1a6272        	s32i	a7, a2, 104
400e2968:	052677        	blt	a6, a7, 400e2971 <_vfprintf_r+0x629>
400e296b:	192252        	l32i	a5, a2, 100
400e296e:	000286        	j	400e297c <_vfprintf_r+0x634>
400e2971:	042657        	blt	a6, a5, 400e2979 <_vfprintf_r+0x631>
400e2974:	452c      	movi.n	a5, 36
400e2976:	1a6252        	s32i	a5, a2, 104
400e2979:	9c2152        	l32i	a5, a1, 0x270
400e297c:	9e2122        	l32i	a2, a1, 0x278
400e297f:	10c162        	addi	a6, a1, 16
400e2982:	252a      	add.n	a2, a5, a2
400e2984:	fcc222        	addi	a2, a2, -4
400e2987:	0228      	l32i.n	a2, a2, 0
400e2989:	b03360        	addx8	a3, a3, a6
400e298c:	0329      	s32i.n	a2, a3, 0
400e298e:	742020        	extui	a2, a2, 0, 8
400e2991:	000b86        	j	400e29c3 <_vfprintf_r+0x67b>
400e2994:	10c182        	addi	a8, a1, 16
400e2997:	02d822        	addmi	a2, a8, 0x200
400e299a:	1a2232        	l32i	a3, a2, 104
400e299d:	851c      	movi.n	a5, 24
400e299f:	634b      	addi.n	a6, a3, 4
400e29a1:	1a6262        	s32i	a6, a2, 104
400e29a4:	052567        	blt	a5, a6, 400e29ad <_vfprintf_r+0x665>
400e29a7:	192232        	l32i	a3, a2, 100
400e29aa:	000286        	j	400e29b8 <_vfprintf_r+0x670>
400e29ad:	042537        	blt	a5, a3, 400e29b5 <_vfprintf_r+0x66d>
400e29b0:	432c      	movi.n	a3, 36
400e29b2:	1a6232        	s32i	a3, a2, 104
400e29b5:	9c2132        	l32i	a3, a1, 0x270
400e29b8:	9e2122        	l32i	a2, a1, 0x278
400e29bb:	232a      	add.n	a2, a3, a2
400e29bd:	fcc222        	addi	a2, a2, -4
400e29c0:	000222        	l8ui	a2, a2, 0
400e29c3:	10c192        	addi	a9, a1, 16
400e29c6:	01d932        	addmi	a3, a9, 0x100
400e29c9:	804322        	s8i	a2, a3, 128
400e29cc:	030c      	movi.n	a3, 0
400e29ce:	02d922        	addmi	a2, a9, 0x200
400e29d1:	524232        	s8i	a3, a2, 82
400e29d4:	020c      	movi.n	a2, 0
400e29d6:	130c      	movi.n	a3, 1
400e29d8:	a56132        	s32i	a3, a1, 0x294
400e29db:	047d      	mov.n	a7, a4
400e29dd:	a46122        	s32i	a2, a1, 0x290
400e29e0:	026d      	mov.n	a6, a2
400e29e2:	023d      	mov.n	a3, a2
400e29e4:	025d      	mov.n	a5, a2
400e29e6:	079c46        	j	400e485b <_vfprintf_r+0x2513>
400e29e9:	920000        	lsi	f0, a0, 0x248
400e29ec:	1ca021        	l32r	a2, 400a9c6c <_iram_end+0x1c118>
400e29ef:	993003        	lsi	f0, a0, 0x264
400e29f2:	619220        	lsi	f2, a2, 0x184
400e29f5:	2132a0        	srai	a3, a10, 2
400e29f8:	e357a0        	lsi	f10, a7, 0x38c
400e29fb:	350602        	l8ui	a0, a6, 53
400e29fe:	218200        	srai	a8, a0, 2
400e2a01:	74bc97        	bgeu	a12, a9, 400e2a79 <_vfprintf_r+0x731>
400e2a04:	0ca287        	bge	a2, a8, 400e2a14 <_vfprintf_r+0x6cc>
400e2a07:	10c142        	addi	a4, a1, 16
400e2a0a:	b02240        	addx8	a2, a2, a4
400e2a0d:	0258      	l32i.n	a5, a2, 0
400e2a0f:	1238      	l32i.n	a3, a2, 4
400e2a11:	0008c6        	j	400e2a38 <_vfprintf_r+0x6f0>
400e2a14:	10c162        	addi	a6, a1, 16
400e2a17:	48a232        	movi	a3, 0x248
400e2a1a:	363a      	add.n	a3, a6, a3
400e2a1c:	4ca2d2        	movi	a13, 0x24c
400e2a1f:	60a2c2        	movi	a12, 0x260
400e2a22:	0139      	s32i.n	a3, a1, 0
400e2a24:	05bd      	mov.n	a11, a5
400e2a26:	01d6f2        	addmi	a15, a6, 0x100
400e2a29:	06ed      	mov.n	a14, a6
400e2a2b:	d6da      	add.n	a13, a6, a13
400e2a2d:	c6ca      	add.n	a12, a6, a12
400e2a2f:	02ad      	mov.n	a10, a2
400e2a31:	ff4965        	call8	400e1ec8 <get_arg$isra$0>
400e2a34:	0a58      	l32i.n	a5, a10, 0
400e2a36:	1a38      	l32i.n	a3, a10, 4
400e2a38:	074d      	mov.n	a4, a7
400e2a3a:	00dac6        	j	400e2da9 <_vfprintf_r+0xa61>
400e2a3d:	471b      	addi.n	a4, a7, 1
400e2a3f:	08a787        	bge	a7, a8, 400e2a4b <_vfprintf_r+0x703>
400e2a42:	10c182        	addi	a8, a1, 16
400e2a45:	b02280        	addx8	a2, a2, a8
400e2a48:	002006        	j	400e2acc <_vfprintf_r+0x784>
400e2a4b:	f21c      	movi.n	a2, 31
400e2a4d:	482287        	blt	a2, a8, 400e2a99 <_vfprintf_r+0x751>
400e2a50:	281b      	addi.n	a2, a8, 1
400e2a52:	10c192        	addi	a9, a1, 16
400e2a55:	976122        	s32i	a2, a1, 0x25c
400e2a58:	02d922        	addmi	a2, a9, 0x200
400e2a5b:	1a2232        	l32i	a3, a2, 104
400e2a5e:	537b      	addi.n	a5, a3, 7
400e2a60:	837c      	movi.n	a3, -8
400e2a62:	103530        	and	a3, a5, a3
400e2a65:	638b      	addi.n	a6, a3, 8
400e2a67:	1a6262        	s32i	a6, a2, 104
400e2a6a:	851c      	movi.n	a5, 24
400e2a6c:	052567        	blt	a5, a6, 400e2a75 <_vfprintf_r+0x72d>
400e2a6f:	192232        	l32i	a3, a2, 100
400e2a72:	000286        	j	400e2a80 <_vfprintf_r+0x738>
400e2a75:	042537        	blt	a5, a3, 400e2a7d <_vfprintf_r+0x735>
400e2a78:	832c      	movi.n	a3, 40
400e2a7a:	1a6232        	s32i	a3, a2, 104
400e2a7d:	9c2132        	l32i	a3, a1, 0x270
400e2a80:	9e2122        	l32i	a2, a1, 0x278
400e2a83:	10c1a2        	addi	a10, a1, 16
400e2a86:	232a      	add.n	a2, a3, a2
400e2a88:	f8c222        	addi	a2, a2, -8
400e2a8b:	0258      	l32i.n	a5, a2, 0
400e2a8d:	1238      	l32i.n	a3, a2, 4
400e2a8f:	b028a0        	addx8	a2, a8, a10
400e2a92:	0259      	s32i.n	a5, a2, 0
400e2a94:	1239      	s32i.n	a3, a2, 4
400e2a96:	00c3c6        	j	400e2da9 <_vfprintf_r+0xa61>
400e2a99:	10c1e2        	addi	a14, a1, 16
400e2a9c:	02de22        	addmi	a2, a14, 0x200
400e2a9f:	1a2232        	l32i	a3, a2, 104
400e2aa2:	537b      	addi.n	a5, a3, 7
400e2aa4:	837c      	movi.n	a3, -8
400e2aa6:	103530        	and	a3, a5, a3
400e2aa9:	638b      	addi.n	a6, a3, 8
400e2aab:	1a6262        	s32i	a6, a2, 104
400e2aae:	851c      	movi.n	a5, 24
400e2ab0:	052567        	blt	a5, a6, 400e2ab9 <_vfprintf_r+0x771>
400e2ab3:	192232        	l32i	a3, a2, 100
400e2ab6:	000286        	j	400e2ac4 <_vfprintf_r+0x77c>
400e2ab9:	042537        	blt	a5, a3, 400e2ac1 <_vfprintf_r+0x779>
400e2abc:	832c      	movi.n	a3, 40
400e2abe:	1a6232        	s32i	a3, a2, 104
400e2ac1:	9c2132        	l32i	a3, a1, 0x270
400e2ac4:	9e2122        	l32i	a2, a1, 0x278
400e2ac7:	232a      	add.n	a2, a3, a2
400e2ac9:	f8c222        	addi	a2, a2, -8
400e2acc:	0258      	l32i.n	a5, a2, 0
400e2ace:	1238      	l32i.n	a3, a2, 4
400e2ad0:	00b546        	j	400e2da9 <_vfprintf_r+0xa61>
400e2ad3:	213200        	srai	a3, a0, 2
400e2ad6:	6347a0        	minu	a4, a7, a10
400e2ad9:	7e          	.byte 0x7e
400e2ada:	972162        	l32i	a6, a1, 0x25c
400e2add:	f49c      	beqz.n	a4, 400e2b00 <_vfprintf_r+0x7b8>
400e2adf:	09a267        	bge	a2, a6, 400e2aec <_vfprintf_r+0x7a4>
400e2ae2:	10c142        	addi	a4, a1, 16
400e2ae5:	b02240        	addx8	a2, a2, a4
400e2ae8:	008406        	j	400e2cfc <_vfprintf_r+0x9b4>
400e2aeb:	c16200        	mul16u	a6, a2, a0
400e2aee:	a23210        	muluh	a3, a2, a1
400e2af1:	3a48      	l32i.n	a4, a10, 12
400e2af3:	013936        	entry	a9, 152
400e2af6:	01d6f2        	addmi	a15, a6, 0x100
400e2af9:	06ed      	mov.n	a14, a6
400e2afb:	008446        	j	400e2d10 <_vfprintf_r+0x9c8>
400e2afe:	820000        	mull	a0, a0, a0
400e2b01:	1b10c1        	l32r	a12, 400a9744 <_iram_end+0x1bbf0>
400e2b04:	228047        	bany	a0, a4, 400e2b2a <_vfprintf_r+0x7e2>
400e2b07:	a767b0        	lsi	f11, a7, 0x29c
400e2b0a:	a54602        	s8i	a0, a6, 165
400e2b0d:	f21c00        	rems	a1, a12, a0
400e2b10:	3c2267        	blt	a2, a6, 400e2b50 <_vfprintf_r+0x808>
400e2b13:	261b      	addi.n	a2, a6, 1
400e2b15:	10c192        	addi	a9, a1, 16
400e2b18:	976122        	s32i	a2, a1, 0x25c
400e2b1b:	02d922        	addmi	a2, a9, 0x200
400e2b1e:	1a2232        	l32i	a3, a2, 104
400e2b21:	851c      	movi.n	a5, 24
400e2b23:	734b      	addi.n	a7, a3, 4
400e2b25:	1a6272        	s32i	a7, a2, 104
400e2b28:	052577        	blt	a5, a7, 400e2b31 <_vfprintf_r+0x7e9>
400e2b2b:	192222        	l32i	a2, a2, 100
400e2b2e:	000286        	j	400e2b3c <_vfprintf_r+0x7f4>
400e2b31:	042537        	blt	a5, a3, 400e2b39 <_vfprintf_r+0x7f1>
400e2b34:	432c      	movi.n	a3, 36
400e2b36:	1a6232        	s32i	a3, a2, 104
400e2b39:	9c2122        	l32i	a2, a1, 0x270
400e2b3c:	9e2132        	l32i	a3, a1, 0x278
400e2b3f:	10c1a2        	addi	a10, a1, 16
400e2b42:	323a      	add.n	a3, a2, a3
400e2b44:	fcc332        	addi	a3, a3, -4
400e2b47:	0358      	l32i.n	a5, a3, 0
400e2b49:	b026a0        	addx8	a2, a6, a10
400e2b4c:	0088c6        	j	400e2d73 <_vfprintf_r+0xa2b>
400e2b4f:	c1e200        	mul16u	a14, a2, a0
400e2b52:	de2210        	f64iter	a2, a2, a1, 1, 1
400e2b55:	890602        	l8ui	a0, a6, 137
400e2b58:	213200        	srai	a3, a0, 2
400e2b5b:	e367a0        	lsi	f10, a7, 0x38c
400e2b5e:	304602        	s8i	a0, a6, 48
400e2b61:	216200        	srai	a6, a0, 2
400e2b64:	54bc97        	bgeu	a12, a9, 400e2bbc <_vfprintf_r+0x874>
400e2b67:	0da267        	bge	a2, a6, 400e2b78 <_vfprintf_r+0x830>
400e2b6a:	10c142        	addi	a4, a1, 16
400e2b6d:	b02240        	addx8	a2, a2, a4
400e2b70:	009252        	l16si	a5, a2, 0
400e2b73:	006b06        	j	400e2d23 <_vfprintf_r+0x9db>
400e2b76:	620000        	lsi	f0, a0, 0x188
400e2b79:	3210c1        	l32r	a12, 400af3bc <_iram_end+0x21868>
400e2b7c:	3a48a2        	s8i	a10, a8, 58
400e2b7f:	a2d236        	entry	a2, 0x5168
400e2b82:	c24c      	movi.n	a2, 76
400e2b84:	bd60a2        	s32i	a10, a0, 0x2f4
400e2b87:	013905        	call0	400e3f18 <_vfprintf_r+0x1bd0>
400e2b8a:	01d6f2        	addmi	a15, a6, 0x100
400e2b8d:	06ed      	mov.n	a14, a6
400e2b8f:	d6da      	add.n	a13, a6, a13
400e2b91:	c6ca      	add.n	a12, a6, a12
400e2b93:	02ad      	mov.n	a10, a2
400e2b95:	ff3325        	call8	400e1ec8 <get_arg$isra$0>
400e2b98:	009a52        	l16si	a5, a10, 0
400e2b9b:	006106        	j	400e2d23 <_vfprintf_r+0x9db>
400e2b9e:	10c182        	addi	a8, a1, 16
400e2ba1:	471b      	addi.n	a4, a7, 1
400e2ba3:	b02280        	addx8	a2, a2, a8
400e2ba6:	722767        	blt	a7, a6, 400e2c1c <_vfprintf_r+0x8d4>
400e2ba9:	f21c      	movi.n	a2, 31
400e2bab:	412267        	blt	a2, a6, 400e2bf0 <_vfprintf_r+0x8a8>
400e2bae:	261b      	addi.n	a2, a6, 1
400e2bb0:	10c192        	addi	a9, a1, 16
400e2bb3:	976122        	s32i	a2, a1, 0x25c
400e2bb6:	02d922        	addmi	a2, a9, 0x200
400e2bb9:	1a2232        	l32i	a3, a2, 104
400e2bbc:	851c      	movi.n	a5, 24
400e2bbe:	734b      	addi.n	a7, a3, 4
400e2bc0:	1a6272        	s32i	a7, a2, 104
400e2bc3:	052577        	blt	a5, a7, 400e2bcc <_vfprintf_r+0x884>
400e2bc6:	192222        	l32i	a2, a2, 100
400e2bc9:	000286        	j	400e2bd7 <_vfprintf_r+0x88f>
400e2bcc:	042537        	blt	a5, a3, 400e2bd4 <_vfprintf_r+0x88c>
400e2bcf:	432c      	movi.n	a3, 36
400e2bd1:	1a6232        	s32i	a3, a2, 104
400e2bd4:	9c2122        	l32i	a2, a1, 0x270
400e2bd7:	9e2132        	l32i	a3, a1, 0x278
400e2bda:	10c1a2        	addi	a10, a1, 16
400e2bdd:	323a      	add.n	a3, a2, a3
400e2bdf:	fcc332        	addi	a3, a3, -4
400e2be2:	0358      	l32i.n	a5, a3, 0
400e2be4:	b026a0        	addx8	a2, a6, a10
400e2be7:	0259      	s32i.n	a5, a2, 0
400e2be9:	235580        	sext	a5, a5, 15
400e2bec:	006d86        	j	400e2da6 <_vfprintf_r+0xa5e>
400e2bef:	c1e200        	mul16u	a14, a2, a0
400e2bf2:	de2210        	f64iter	a2, a2, a1, 1, 1
400e2bf5:	223202        	lsi	f0, a2, 136
400e2bf8:	1c1a      	add.n	a1, a12, a1
400e2bfa:	634b85        	call0	401460b4 <_etext+0x597d7>
400e2bfd:	1a6262        	s32i	a6, a2, 104
400e2c00:	052567        	blt	a5, a6, 400e2c09 <_vfprintf_r+0x8c1>
400e2c03:	192232        	l32i	a3, a2, 100
400e2c06:	000286        	j	400e2c14 <_vfprintf_r+0x8cc>
400e2c09:	042537        	blt	a5, a3, 400e2c11 <_vfprintf_r+0x8c9>
400e2c0c:	432c      	movi.n	a3, 36
400e2c0e:	1a6232        	s32i	a3, a2, 104
400e2c11:	9c2132        	l32i	a3, a1, 0x270
400e2c14:	9e2122        	l32i	a2, a1, 0x278
400e2c17:	232a      	add.n	a2, a3, a2
400e2c19:	fcc222        	addi	a2, a2, -4
400e2c1c:	009252        	l16si	a5, a2, 0
400e2c1f:	0060c6        	j	400e2da6 <_vfprintf_r+0xa5e>
400e2c22:	620000        	lsi	f0, a0, 0x188
400e2c25:	32a021        	l32r	a2, 400af6a8 <_iram_end+0x21b54>
400e2c28:	979721        	l32r	a2, 400c8a84 <_rtc_text_end+0x8a84>
400e2c2b:	0602e6        	bgei	a2, -1, 400e2c35 <_vfprintf_r+0x8ed>
400e2c2e:	bc0030        	lsi	f3, a0, 0x2f0
400e2c31:	a23754        	lsi	f5, a7, 0x288
400e2c34:	820b      	addi.n	a8, a2, -1
400e2c36:	8010c1        	l32r	a12, 400c2c78 <_rtc_text_end+0x2c78>
400e2c39:	52b022        	l32ai	a2, a0, 0x148
400e2c3c:	860002        	l8ui	a0, a0, 134
400e2c3f:	0008      	l32i.n	a0, a0, 0
400e2c41:	10c192        	addi	a9, a1, 16
400e2c44:	48a232        	movi	a3, 0x248
400e2c47:	393a      	add.n	a3, a9, a3
400e2c49:	4ca2d2        	movi	a13, 0x24c
400e2c4c:	60a2c2        	movi	a12, 0x260
400e2c4f:	05bd      	mov.n	a11, a5
400e2c51:	0139      	s32i.n	a3, a1, 0
400e2c53:	01d9f2        	addmi	a15, a9, 0x100
400e2c56:	09ed      	mov.n	a14, a9
400e2c58:	d9da      	add.n	a13, a9, a13
400e2c5a:	c9ca      	add.n	a12, a9, a12
400e2c5c:	02ad      	mov.n	a10, a2
400e2c5e:	ff26a5        	call8	400e1ec8 <get_arg$isra$0>
400e2c61:	000a52        	l8ui	a5, a10, 0
400e2c64:	074d      	mov.n	a4, a7
400e2c66:	002046        	j	400e2ceb <_vfprintf_r+0x9a3>
400e2c69:	10c1a2        	addi	a10, a1, 16
400e2c6c:	471b      	addi.n	a4, a7, 1
400e2c6e:	b022a0        	addx8	a2, a2, a10
400e2c71:	732737        	blt	a7, a3, 400e2ce8 <_vfprintf_r+0x9a0>
400e2c74:	f21c      	movi.n	a2, 31
400e2c76:	422237        	blt	a2, a3, 400e2cbc <_vfprintf_r+0x974>
400e2c79:	231b      	addi.n	a2, a3, 1
400e2c7b:	10c1e2        	addi	a14, a1, 16
400e2c7e:	976122        	s32i	a2, a1, 0x25c
400e2c81:	02de22        	addmi	a2, a14, 0x200
400e2c84:	1a2252        	l32i	a5, a2, 104
400e2c87:	861c      	movi.n	a6, 24
400e2c89:	754b      	addi.n	a7, a5, 4
400e2c8b:	1a6272        	s32i	a7, a2, 104
400e2c8e:	062677        	blt	a6, a7, 400e2c98 <_vfprintf_r+0x950>
400e2c91:	192252        	l32i	a5, a2, 100
400e2c94:	0002c6        	j	400e2ca3 <_vfprintf_r+0x95b>
400e2c97:	265700        	lsi	f0, a7, 152
400e2c9a:	452c04        	lsi	f0, a12, 0x114
400e2c9d:	1a6252        	s32i	a5, a2, 104
400e2ca0:	9c2152        	l32i	a5, a1, 0x270
400e2ca3:	9e2122        	l32i	a2, a1, 0x278
400e2ca6:	10c162        	addi	a6, a1, 16
400e2ca9:	252a      	add.n	a2, a5, a2
400e2cab:	fcc222        	addi	a2, a2, -4
400e2cae:	0258      	l32i.n	a5, a2, 0
400e2cb0:	b02360        	addx8	a2, a3, a6
400e2cb3:	0259      	s32i.n	a5, a2, 0
400e2cb5:	745050        	extui	a5, a5, 0, 8
400e2cb8:	000bc6        	j	400e2ceb <_vfprintf_r+0x9a3>
400e2cbb:	c18200        	mul16u	a8, a2, a0
400e2cbe:	d82210        	lsi	f1, a2, 0x360
400e2cc1:	223202        	lsi	f0, a2, 136
400e2cc4:	1c1a      	add.n	a1, a12, a1
400e2cc6:	634b85        	call0	40146180 <_etext+0x598a3>
400e2cc9:	1a6262        	s32i	a6, a2, 104
400e2ccc:	052567        	blt	a5, a6, 400e2cd5 <_vfprintf_r+0x98d>
400e2ccf:	192232        	l32i	a3, a2, 100
400e2cd2:	000286        	j	400e2ce0 <_vfprintf_r+0x998>
400e2cd5:	042537        	blt	a5, a3, 400e2cdd <_vfprintf_r+0x995>
400e2cd8:	432c      	movi.n	a3, 36
400e2cda:	1a6232        	s32i	a3, a2, 104
400e2cdd:	9c2132        	l32i	a3, a1, 0x270
400e2ce0:	9e2122        	l32i	a2, a1, 0x278
400e2ce3:	232a      	add.n	a2, a3, a2
400e2ce5:	fcc222        	addi	a2, a2, -4
400e2ce8:	000252        	l8ui	a5, a2, 0
400e2ceb:	235500        	sext	a5, a5, 7
400e2cee:	002d06        	j	400e2da6 <_vfprintf_r+0xa5e>
400e2cf1:	34bc      	beqz.n	a4, 400e2d28 <_vfprintf_r+0x9e0>
400e2cf3:	0aa237        	bge	a2, a3, 400e2d01 <_vfprintf_r+0x9b9>
400e2cf6:	10c192        	addi	a9, a1, 16
400e2cf9:	b02290        	addx8	a2, a2, a9
400e2cfc:	0258      	l32i.n	a5, a2, 0
400e2cfe:	000846        	j	400e2d23 <_vfprintf_r+0x9db>
400e2d01:	10c1a2        	addi	a10, a1, 16
400e2d04:	48a232        	movi	a3, 0x248
400e2d07:	3a3a      	add.n	a3, a10, a3
400e2d09:	0139      	s32i.n	a3, a1, 0
400e2d0b:	01daf2        	addmi	a15, a10, 0x100
400e2d0e:	0aed      	mov.n	a14, a10
400e2d10:	4ca2d2        	movi	a13, 0x24c
400e2d13:	60a2c2        	movi	a12, 0x260
400e2d16:	05bd      	mov.n	a11, a5
400e2d18:	deda      	add.n	a13, a14, a13
400e2d1a:	ceca      	add.n	a12, a14, a12
400e2d1c:	02ad      	mov.n	a10, a2
400e2d1e:	ff1aa5        	call8	400e1ec8 <get_arg$isra$0>
400e2d21:	0a58      	l32i.n	a5, a10, 0
400e2d23:	074d      	mov.n	a4, a7
400e2d25:	001f46        	j	400e2da6 <_vfprintf_r+0xa5e>
400e2d28:	10c1e2        	addi	a14, a1, 16
400e2d2b:	471b      	addi.n	a4, a7, 1
400e2d2d:	b022e0        	addx8	a2, a2, a14
400e2d30:	702737        	blt	a7, a3, 400e2da4 <_vfprintf_r+0xa5c>
400e2d33:	f21c      	movi.n	a2, 31
400e2d35:	3f2237        	blt	a2, a3, 400e2d78 <_vfprintf_r+0xa30>
400e2d38:	231b      	addi.n	a2, a3, 1
400e2d3a:	10c152        	addi	a5, a1, 16
400e2d3d:	976122        	s32i	a2, a1, 0x25c
400e2d40:	02d522        	addmi	a2, a5, 0x200
400e2d43:	1a2252        	l32i	a5, a2, 104
400e2d46:	861c      	movi.n	a6, 24
400e2d48:	754b      	addi.n	a7, a5, 4
400e2d4a:	1a6272        	s32i	a7, a2, 104
400e2d4d:	072677        	blt	a6, a7, 400e2d58 <_vfprintf_r+0xa10>
400e2d50:	192252        	l32i	a5, a2, 100
400e2d53:	000306        	j	400e2d63 <_vfprintf_r+0xa1b>
400e2d56:	570000        	lsi	f0, a0, 0x15c
400e2d59:	2c0426        	beqi	a4, -1, 400e2d89 <_vfprintf_r+0xa41>
400e2d5c:	625245        	call0	40145284 <_etext+0x589a7>
400e2d5f:	521a      	add.n	a5, a2, a1
400e2d61:	229c21        	l32r	a2, 400ab7d4 <_iram_end+0x1dc80>
400e2d64:	629e21        	l32r	a2, 400bb7dc <_iram_end+0x2dc88>
400e2d67:	2a10c1        	l32r	a12, 400ad5a8 <_iram_end+0x1fa54>
400e2d6a:	c22225        	call8	400a4f8c <_iram_end+0x17438>
400e2d6d:	58fc      	bnez.n	a8, 400e2da6 <_vfprintf_r+0xa5e>
400e2d6f:	236002        	s32i	a0, a0, 140
400e2d72:	0259b0        	andb	b5, b9, b11
400e2d75:	000b46        	j	400e2da6 <_vfprintf_r+0xa5e>
400e2d78:	10c182        	addi	a8, a1, 16
400e2d7b:	02d822        	addmi	a2, a8, 0x200
400e2d7e:	1a2232        	l32i	a3, a2, 104
400e2d81:	851c      	movi.n	a5, 24
400e2d83:	634b      	addi.n	a6, a3, 4
400e2d85:	1a6262        	s32i	a6, a2, 104
400e2d88:	052567        	blt	a5, a6, 400e2d91 <_vfprintf_r+0xa49>
400e2d8b:	192232        	l32i	a3, a2, 100
400e2d8e:	000286        	j	400e2d9c <_vfprintf_r+0xa54>
400e2d91:	042537        	blt	a5, a3, 400e2d99 <_vfprintf_r+0xa51>
400e2d94:	432c      	movi.n	a3, 36
400e2d96:	1a6232        	s32i	a3, a2, 104
400e2d99:	9c2132        	l32i	a3, a1, 0x270
400e2d9c:	9e2122        	l32i	a2, a1, 0x278
400e2d9f:	232a      	add.n	a2, a3, a2
400e2da1:	fcc222        	addi	a2, a2, -4
400e2da4:	0258      	l32i.n	a5, a2, 0
400e2da6:	313f50        	srai	a3, a5, 31
400e2da9:	047d      	mov.n	a7, a4
400e2dab:	120c      	movi.n	a2, 1
400e2dad:	002396        	bltz	a3, 400e2db3 <_vfprintf_r+0xa6b>
400e2db0:	062606        	j	400e464c <_vfprintf_r+0x2304>
400e2db3:	605050        	neg	a5, a5
400e2db6:	080c      	movi.n	a8, 0
400e2db8:	938250        	movnez	a8, a2, a5
400e2dbb:	603030        	neg	a3, a3
400e2dbe:	10c192        	addi	a9, a1, 16
400e2dc1:	c03380        	sub	a3, a3, a8
400e2dc4:	d62c      	movi.n	a6, 45
400e2dc6:	02d942        	addmi	a4, a9, 0x200
400e2dc9:	061f06        	j	400e4649 <_vfprintf_r+0x2301>
400e2dcc:	a02162        	l32i	a6, a1, 0x280
400e2dcf:	972132        	l32i	a3, a1, 0x25c
400e2dd2:	0e6637        	bbci	a6, 3, 400e2de4 <_vfprintf_r+0xa9c>
400e2dd5:	053416        	beqz	a4, 400e2e2c <_vfprintf_r+0xae4>
400e2dd8:	21a237        	bge	a2, a3, 400e2dfd <_vfprintf_r+0xab5>
400e2ddb:	10c182        	addi	a8, a1, 16
400e2dde:	b02280        	addx8	a2, a2, a8
400e2de1:	0002c6        	j	400e2df0 <_vfprintf_r+0xaa8>
400e2de4:	044416        	beqz	a4, 400e2e2c <_vfprintf_r+0xae4>
400e2de7:	12a237        	bge	a2, a3, 400e2dfd <_vfprintf_r+0xab5>
400e2dea:	10c192        	addi	a9, a1, 16
400e2ded:	b02290        	addx8	a2, a2, a9
400e2df0:	0248      	l32i.n	a4, a2, 0
400e2df2:	1258      	l32i.n	a5, a2, 4
400e2df4:	aa6142        	s32i	a4, a1, 0x2a8
400e2df7:	ab6152        	s32i	a5, a1, 0x2ac
400e2dfa:	003586        	j	400e2ed4 <_vfprintf_r+0xb8c>
400e2dfd:	10c162        	addi	a6, a1, 16
400e2e00:	48a232        	movi	a3, 0x248
400e2e03:	363a      	add.n	a3, a6, a3
400e2e05:	4ca2d2        	movi	a13, 0x24c
400e2e08:	60a2c2        	movi	a12, 0x260
400e2e0b:	0139      	s32i.n	a3, a1, 0
400e2e0d:	01d6f2        	addmi	a15, a6, 0x100
400e2e10:	06ed      	mov.n	a14, a6
400e2e12:	d6da      	add.n	a13, a6, a13
400e2e14:	c6ca      	add.n	a12, a6, a12
400e2e16:	05bd      	mov.n	a11, a5
400e2e18:	02ad      	mov.n	a10, a2
400e2e1a:	ff0ae5        	call8	400e1ec8 <get_arg$isra$0>
400e2e1d:	0a88      	l32i.n	a8, a10, 0
400e2e1f:	1a98      	l32i.n	a9, a10, 4
400e2e21:	aa6182        	s32i	a8, a1, 0x2a8
400e2e24:	ab6192        	s32i	a9, a1, 0x2ac
400e2e27:	002a46        	j	400e2ed4 <_vfprintf_r+0xb8c>
400e2e2a:	920000        	lsi	f0, a0, 0x248
400e2e2d:	1b10c1        	l32r	a12, 400a9a70 <_iram_end+0x1bf1c>
400e2e30:	229047        	bne	a0, a4, 400e2e56 <_vfprintf_r+0xb0e>
400e2e33:	a737b0        	lsi	f11, a7, 0x29c
400e2e36:	234602        	s8i	a0, a6, 35
400e2e39:	f21c00        	rems	a1, a12, a0
400e2e3c:	542237        	blt	a2, a3, 400e2e94 <_vfprintf_r+0xb4c>
400e2e3f:	231b      	addi.n	a2, a3, 1
400e2e41:	10c192        	addi	a9, a1, 16
400e2e44:	976122        	s32i	a2, a1, 0x25c
400e2e47:	02d922        	addmi	a2, a9, 0x200
400e2e4a:	1a2252        	l32i	a5, a2, 104
400e2e4d:	657b      	addi.n	a6, a5, 7
400e2e4f:	857c      	movi.n	a5, -8
400e2e51:	105650        	and	a5, a6, a5
400e2e54:	758b      	addi.n	a7, a5, 8
400e2e56:	1a6272        	s32i	a7, a2, 104
400e2e59:	861c      	movi.n	a6, 24
400e2e5b:	052677        	blt	a6, a7, 400e2e64 <_vfprintf_r+0xb1c>
400e2e5e:	192252        	l32i	a5, a2, 100
400e2e61:	000286        	j	400e2e6f <_vfprintf_r+0xb27>
400e2e64:	042657        	blt	a6, a5, 400e2e6c <_vfprintf_r+0xb24>
400e2e67:	852c      	movi.n	a5, 40
400e2e69:	1a6252        	s32i	a5, a2, 104
400e2e6c:	9c2152        	l32i	a5, a1, 0x270
400e2e6f:	9e2122        	l32i	a2, a1, 0x278
400e2e72:	252a      	add.n	a2, a5, a2
400e2e74:	f8c222        	addi	a2, a2, -8
400e2e77:	0288      	l32i.n	a8, a2, 0
400e2e79:	1298      	l32i.n	a9, a2, 4
400e2e7b:	aa6182        	s32i	a8, a1, 0x2a8
400e2e7e:	ab6192        	s32i	a9, a1, 0x2ac
400e2e81:	10c192        	addi	a9, a1, 16
400e2e84:	b02390        	addx8	a2, a3, a9
400e2e87:	aa2182        	l32i	a8, a1, 0x2a8
400e2e8a:	ab2192        	l32i	a9, a1, 0x2ac
400e2e8d:	0289      	s32i.n	a8, a2, 0
400e2e8f:	1299      	s32i.n	a9, a2, 4
400e2e91:	000f46        	j	400e2ed2 <_vfprintf_r+0xb8a>
400e2e94:	10c192        	addi	a9, a1, 16
400e2e97:	02d922        	addmi	a2, a9, 0x200
400e2e9a:	1a2232        	l32i	a3, a2, 104
400e2e9d:	537b      	addi.n	a5, a3, 7
400e2e9f:	837c      	movi.n	a3, -8
400e2ea1:	103530        	and	a3, a5, a3
400e2ea4:	638b      	addi.n	a6, a3, 8
400e2ea6:	1a6262        	s32i	a6, a2, 104
400e2ea9:	851c      	movi.n	a5, 24
400e2eab:	052567        	blt	a5, a6, 400e2eb4 <_vfprintf_r+0xb6c>
400e2eae:	192232        	l32i	a3, a2, 100
400e2eb1:	0002c6        	j	400e2ec0 <_vfprintf_r+0xb78>
400e2eb4:	052537        	blt	a5, a3, 400e2ebd <_vfprintf_r+0xb75>
400e2eb7:	28a032        	movi	a3, 40
400e2eba:	1a6232        	s32i	a3, a2, 104
400e2ebd:	9c2132        	l32i	a3, a1, 0x270
400e2ec0:	9e2122        	l32i	a2, a1, 0x278
400e2ec3:	232a      	add.n	a2, a3, a2
400e2ec5:	f8c222        	addi	a2, a2, -8
400e2ec8:	0288      	l32i.n	a8, a2, 0
400e2eca:	1298      	l32i.n	a9, a2, 4
400e2ecc:	aa6182        	s32i	a8, a1, 0x2a8
400e2ecf:	ab6192        	s32i	a9, a1, 0x2ac
400e2ed2:	047d      	mov.n	a7, a4
400e2ed4:	aa21a2        	l32i	a10, a1, 0x2a8
400e2ed7:	ab21b2        	l32i	a11, a1, 0x2ac
400e2eda:	f7fb25        	call8	400dae8c <__fpclassifyd>
400e2edd:	341a66        	bnei	a10, 1, 400e2f15 <_vfprintf_r+0xbcd>
400e2ee0:	b461c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e2ee3:	b460d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e2ee6:	aa21a2        	l32i	a10, a1, 0x2a8
400e2ee9:	ab21b2        	l32i	a11, a1, 0x2ac
400e2eec:	b62981        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e2eef:	0008e0        	callx8	a8
400e2ef2:	00aad6        	bgez	a10, 400e2f00 <_vfprintf_r+0xbb8>
400e2ef5:	10c192        	addi	a9, a1, 16
400e2ef8:	d32c      	movi.n	a3, 45
400e2efa:	02d922        	addmi	a2, a9, 0x200
400e2efd:	524232        	s8i	a3, a2, 82
400e2f00:	b63d21        	l32r	a2, 400d07f4 <_flash_cache_start+0x7dc>
400e2f03:	a62132        	l32i	a3, a1, 0x298
400e2f06:	a16122        	s32i	a2, a1, 0x284
400e2f09:	724c      	movi.n	a2, 71
400e2f0b:	b63941        	l32r	a4, 400d07f0 <_flash_cache_start+0x7d8>
400e2f0e:	1fa237        	bge	a2, a3, 400e2f31 <_vfprintf_r+0xbe9>
400e2f11:	0007c6        	j	400e2f34 <_vfprintf_r+0xbec>
400e2f14:	21a200        	srai	a10, a0, 2
400e2f17:	b2aa      	add.n	a11, a2, a10
400e2f19:	25ab21        	l32r	a2, 400ac5c8 <_iram_end+0x1ea74>
400e2f1c:	ecf7f7        	bbsi	a7, 31, 400e2f0c <_vfprintf_r+0xbc4>
400e2f1f:	91ba      	add.n	a9, a1, a11
400e2f21:	32b637        	bgeu	a6, a3, 400e2f57 <_vfprintf_r+0xc0f>
400e2f24:	92a621        	l32r	a2, 400c79bc <_rtc_text_end+0x79bc>
400e2f27:	4ca161        	l32r	a6, 400b61ac <_iram_end+0x28658>
400e2f2a:	223772        	lsi	f7, a7, 136
400e2f2d:	324105        	call0	40115340 <_etext+0x28a63>
400e2f30:	6142b6        	bltui	a2, 4, 400e2f95 <_vfprintf_r+0xc4d>
400e2f33:	2152a1        	l32r	a10, 400ab47c <_iram_end+0x1d928>
400e2f36:	af22a0        	f64cmph	a2, a2, a10, 10
400e2f39:	7f          	.byte 0x7f
400e2f3a:	105520        	and	a5, a5, a2
400e2f3d:	060c      	movi.n	a6, 0
400e2f3f:	380c      	movi.n	a8, 3
400e2f41:	a06152        	s32i	a5, a1, 0x280
400e2f44:	a46162        	s32i	a6, a1, 0x290
400e2f47:	a56182        	s32i	a8, a1, 0x294
400e2f4a:	064806        	j	400e486e <_vfprintf_r+0x2526>
400e2f4d:	a62192        	l32i	a9, a1, 0x298
400e2f50:	dfaf22        	movi	a2, -33
400e2f53:	102920        	and	a2, a9, a2
400e2f56:	a96122        	s32i	a2, a1, 0x2a4
400e2f59:	a92132        	l32i	a3, a1, 0x2a4
400e2f5c:	41a022        	movi	a2, 65
400e2f5f:	4d9327        	bne	a3, a2, 400e2fb0 <_vfprintf_r+0xc68>
400e2f62:	10c142        	addi	a4, a1, 16
400e2f65:	02d422        	addmi	a2, a4, 0x200
400e2f68:	30a032        	movi	a3, 48
400e2f6b:	504232        	s8i	a3, a2, 80
400e2f6e:	58a052        	movi	a5, 88
400e2f71:	9fc942        	addi	a4, a9, -97
400e2f74:	78a032        	movi	a3, 120
400e2f77:	933540        	movnez	a3, a5, a4
400e2f7a:	a02152        	l32i	a5, a1, 0x280
400e2f7d:	514232        	s8i	a3, a2, 81
400e2f80:	220c      	movi.n	a2, 2
400e2f82:	205520        	or	a5, a5, a2
400e2f85:	a52162        	l32i	a6, a1, 0x294
400e2f88:	a06152        	s32i	a5, a1, 0x280
400e2f8b:	63a022        	movi	a2, 99
400e2f8e:	3aa267        	bge	a2, a6, 400e2fcc <_vfprintf_r+0xc84>
400e2f91:	a321a2        	l32i	a10, a1, 0x28c
400e2f94:	b61b      	addi.n	a11, a6, 1
400e2f96:	a18f25        	call8	40084888 <_malloc_r>
400e2f99:	a161a2        	s32i	a10, a1, 0x284
400e2f9c:	040a56        	bnez	a10, 400e2fe0 <_vfprintf_r+0xc98>
400e2f9f:	a22182        	l32i	a8, a1, 0x288
400e2fa2:	024c      	movi.n	a2, 64
400e2fa4:	061832        	l16ui	a3, a8, 12
400e2fa7:	202320        	or	a2, a3, a2
400e2faa:	065822        	s16i	a2, a8, 12
400e2fad:	095506        	j	400e5505 <_vfprintf_r+0x31bd>
400e2fb0:	a52192        	l32i	a9, a1, 0x294
400e2fb3:	0a0c      	movi.n	a10, 0
400e2fb5:	300926        	beqi	a9, -1, 400e2fe9 <_vfprintf_r+0xca1>
400e2fb8:	0899a7        	bne	a9, a10, 400e2fc4 <_vfprintf_r+0xc7c>
400e2fbb:	a92132        	l32i	a3, a1, 0x2a4
400e2fbe:	b9c322        	addi	a2, a3, -71
400e2fc1:	2f12a7        	beq	a2, a10, 400e2ff4 <_vfprintf_r+0xcac>
400e2fc4:	040c      	movi.n	a4, 0
400e2fc6:	a46142        	s32i	a4, a1, 0x290
400e2fc9:	000bc6        	j	400e2ffc <_vfprintf_r+0xcb4>
400e2fcc:	80a142        	movi	a4, 0x180
400e2fcf:	10c182        	addi	a8, a1, 16
400e2fd2:	050c      	movi.n	a5, 0
400e2fd4:	884a      	add.n	a8, a8, a4
400e2fd6:	a46152        	s32i	a5, a1, 0x290
400e2fd9:	a16182        	s32i	a8, a1, 0x284
400e2fdc:	000706        	j	400e2ffc <_vfprintf_r+0xcb4>
400e2fdf:	219200        	srai	a9, a0, 2
400e2fe2:	6192a1        	l32r	a10, 400bb62c <_iram_end+0x2dad8>
400e2fe5:	0486a4        	lsi	f10, a6, 16
400e2fe8:	620c00        	lsi	f0, a12, 0x188
400e2feb:	a461a2        	s32i	a10, a1, 0x290
400e2fee:	a56122        	s32i	a2, a1, 0x294
400e2ff1:	0001c6        	j	400e2ffc <_vfprintf_r+0xcb4>
400e2ff4:	130c      	movi.n	a3, 1
400e2ff6:	a461a2        	s32i	a10, a1, 0x290
400e2ff9:	a56132        	s32i	a3, a1, 0x294
400e2ffc:	a02142        	l32i	a4, a1, 0x280
400e2fff:	00a122        	movi	a2, 0x100
400e3002:	202420        	or	a2, a4, a2
400e3005:	b26122        	s32i	a2, a1, 0x2c8
400e3008:	ab2122        	l32i	a2, a1, 0x2ac
400e300b:	aa2132        	l32i	a3, a1, 0x2a8
400e300e:	0102d6        	bgez	a2, 400e3022 <_vfprintf_r+0xcda>
400e3011:	b41c21        	l32r	a2, 400d0084 <_flash_cache_start+0x6c>
400e3014:	ab2152        	l32i	a5, a1, 0x2ac
400e3017:	d62c      	movi.n	a6, 45
400e3019:	302520        	xor	a2, a5, a2
400e301c:	b66162        	s32i	a6, a1, 0x2d8
400e301f:	000106        	j	400e3027 <_vfprintf_r+0xcdf>
400e3022:	080c      	movi.n	a8, 0
400e3024:	b66182        	s32i	a8, a1, 0x2d8
400e3027:	a92192        	l32i	a9, a1, 0x2a4
400e302a:	144c      	movi.n	a4, 65
400e302c:	021947        	beq	a9, a4, 400e3032 <_vfprintf_r+0xcea>
400e302f:	005246        	j	400e317c <_vfprintf_r+0xe34>
400e3032:	10c1a2        	addi	a10, a1, 16
400e3035:	44a2c2        	movi	a12, 0x244
400e3038:	caca      	add.n	a12, a10, a12
400e303a:	02bd      	mov.n	a11, a2
400e303c:	03ad      	mov.n	a10, a3
400e303e:	033fe5        	call8	400e643c <frexp>
400e3041:	b408c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e3044:	b5cad1        	l32r	a13, 400d076c <_flash_cache_start+0x754>
400e3047:	b40681        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e304a:	0008e0        	callx8	a8
400e304d:	b405c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e3050:	b405d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e3053:	0a4d      	mov.n	a4, a10
400e3055:	205bb0        	or	a5, a11, a11
400e3058:	b5cf81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e305b:	0008e0        	callx8	a8
400e305e:	3acc      	bnez.n	a10, 400e3065 <_vfprintf_r+0xd1d>
400e3060:	120c      	movi.n	a2, 1
400e3062:	956122        	s32i	a2, a1, 0x254
400e3065:	a62132        	l32i	a3, a1, 0x298
400e3068:	b5e761        	l32r	a6, 400d0804 <_flash_cache_start+0x7ec>
400e306b:	9fc322        	addi	a2, a3, -97
400e306e:	b5e481        	l32r	a8, 400d0800 <_flash_cache_start+0x7e8>
400e3071:	023d      	mov.n	a3, a2
400e3073:	062d      	mov.n	a2, a6
400e3075:	a52162        	l32i	a6, a1, 0x294
400e3078:	832830        	moveqz	a2, a8, a3
400e307b:	a12182        	l32i	a8, a1, 0x284
400e307e:	960b      	addi.n	a9, a6, -1
400e3080:	b3f9c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e3083:	b5bbd1        	l32r	a13, 400d0770 <_flash_cache_start+0x758>
400e3086:	20a440        	or	a10, a4, a4
400e3089:	20b550        	or	a11, a5, a5
400e308c:	b86182        	s32i	a8, a1, 0x2e0
400e308f:	b76192        	s32i	a9, a1, 0x2dc
400e3092:	b3f381        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e3095:	0008e0        	callx8	a8
400e3098:	0b5d      	mov.n	a5, a11
400e309a:	0a4d      	mov.n	a4, a10
400e309c:	b5bf81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e309f:	0008e0        	callx8	a8
400e30a2:	0a3d      	mov.n	a3, a10
400e30a4:	b5be81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e30a7:	0008e0        	callx8	a8
400e30aa:	0acd      	mov.n	a12, a10
400e30ac:	0bdd      	mov.n	a13, a11
400e30ae:	04ad      	mov.n	a10, a4
400e30b0:	05bd      	mov.n	a11, a5
400e30b2:	b5bb81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e30b5:	0008e0        	callx8	a8
400e30b8:	b82182        	l32i	a8, a1, 0x2e0
400e30bb:	0a4d      	mov.n	a4, a10
400e30bd:	a23a      	add.n	a10, a2, a3
400e30bf:	881b      	addi.n	a8, a8, 1
400e30c1:	000aa2        	l8ui	a10, a10, 0
400e30c4:	680b      	addi.n	a6, a8, -1
400e30c6:	0046a2        	s8i	a10, a6, 0
400e30c9:	b72192        	l32i	a9, a1, 0x2dc
400e30cc:	0b5d      	mov.n	a5, a11
400e30ce:	096d      	mov.n	a6, a9
400e30d0:	1e0926        	beqi	a9, -1, 400e30f2 <_vfprintf_r+0xdaa>
400e30d3:	b3e4c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e30d6:	b3e3d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e30d9:	990b      	addi.n	a9, a9, -1
400e30db:	04ad      	mov.n	a10, a4
400e30dd:	b86182        	s32i	a8, a1, 0x2e0
400e30e0:	b76192        	s32i	a9, a1, 0x2dc
400e30e3:	b5b081        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e30e6:	0008e0        	callx8	a8
400e30e9:	b82182        	l32i	a8, a1, 0x2e0
400e30ec:	b72192        	l32i	a9, a1, 0x2dc
400e30ef:	f8da56        	bnez	a10, 400e3080 <_vfprintf_r+0xd38>
400e30f2:	b3dcc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e30f5:	b59fd1        	l32r	a13, 400d0774 <_flash_cache_start+0x75c>
400e30f8:	04ad      	mov.n	a10, a4
400e30fa:	05bd      	mov.n	a11, a5
400e30fc:	b86182        	s32i	a8, a1, 0x2e0
400e30ff:	b5aa81        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e3102:	0008e0        	callx8	a8
400e3105:	b82182        	l32i	a8, a1, 0x2e0
400e3108:	201ae6        	bgei	a10, 1, 400e312c <_vfprintf_r+0xde4>
400e310b:	b3d6c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e310e:	b599d1        	l32r	a13, 400d0774 <_flash_cache_start+0x75c>
400e3111:	04ad      	mov.n	a10, a4
400e3113:	20b550        	or	a11, a5, a5
400e3116:	b59f81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e3119:	0008e0        	callx8	a8
400e311c:	b82182        	l32i	a8, a1, 0x2e0
400e311f:	1acc      	bnez.n	a10, 400e3124 <_vfprintf_r+0xddc>
400e3121:	07e307        	bbsi	a3, 0, 400e312c <_vfprintf_r+0xde4>
400e3124:	082d      	mov.n	a2, a8
400e3126:	053c      	movi.n	a5, 48
400e3128:	000e46        	j	400e3165 <_vfprintf_r+0xe1d>
400e312b:	618200        	lsi	f0, a2, 0x184
400e312e:	024290        	andb	b4, b2, b9
400e3131:	0f          	.byte 0xf
400e3132:	063c      	movi.n	a6, 48
400e3134:	0000c6        	j	400e313b <_vfprintf_r+0xdf3>
400e3137:	436200        	min	a6, a2, a0
400e313a:	213200        	srai	a3, a0, 2
400e313d:	330b90        	clamps	a0, a11, 16
400e3140:	906132        	s32i	a3, a1, 0x240
400e3143:	000352        	l8ui	a5, a3, 0
400e3146:	ee1547        	beq	a5, a4, 400e3138 <_vfprintf_r+0xdf0>
400e3149:	01c542        	addi	a4, a5, 1
400e314c:	39a062        	movi	a6, 57
400e314f:	744040        	extui	a4, a4, 0, 8
400e3152:	029567        	bne	a5, a6, 400e3158 <_vfprintf_r+0xe10>
400e3155:	0a0242        	l8ui	a4, a2, 10
400e3158:	004342        	s8i	a4, a3, 0
400e315b:	084d      	mov.n	a4, a8
400e315d:	000386        	j	400e316f <_vfprintf_r+0xe27>
400e3160:	004252        	s8i	a5, a2, 0
400e3163:	221b      	addi.n	a2, a2, 1
400e3165:	c03620        	sub	a3, a6, a2
400e3168:	383a      	add.n	a3, a8, a3
400e316a:	024d      	mov.n	a4, a2
400e316c:	ff03d6        	bgez	a3, 400e3160 <_vfprintf_r+0xe18>
400e316f:	a12182        	l32i	a8, a1, 0x284
400e3172:	c04480        	sub	a4, a4, a8
400e3175:	a76142        	s32i	a4, a1, 0x29c
400e3178:	002dc6        	j	400e3233 <_vfprintf_r+0xeeb>
400e317b:	219200        	srai	a9, a0, 2
400e317e:	4ca9      	s32i.n	a10, a12, 16
400e3180:	214265        	call8	401045a8 <_etext+0x17ccb>
400e3183:	3e0ca5        	call8	4012124c <_etext+0x3496f>
400e3186:	0a1957        	beq	a9, a5, 400e3194 <_vfprintf_r+0xe4c>
400e3189:	45a052        	movi	a5, 69
400e318c:	2e0c      	movi.n	a14, 2
400e318e:	029957        	bne	a9, a5, 400e3194 <_vfprintf_r+0xe4c>
400e3191:	01c442        	addi	a4, a4, 1
400e3194:	40a2a2        	movi	a10, 0x240
400e3197:	8051a0        	add	a5, a1, a10
400e319a:	50a262        	movi	a6, 0x250
400e319d:	026152        	s32i	a5, a1, 8
400e31a0:	54a282        	movi	a8, 0x254
400e31a3:	805160        	add	a5, a1, a6
400e31a6:	1159      	s32i.n	a5, a1, 4
400e31a8:	a321a2        	l32i	a10, a1, 0x28c
400e31ab:	518a      	add.n	a5, a1, a8
400e31ad:	0159      	s32i.n	a5, a1, 0
400e31af:	04fd      	mov.n	a15, a4
400e31b1:	03cd      	mov.n	a12, a3
400e31b3:	02dd      	mov.n	a13, a2
400e31b5:	026365        	call8	400e57ec <_dtoa_r>
400e31b8:	a92192        	l32i	a9, a1, 0x2a4
400e31bb:	a161a2        	s32i	a10, a1, 0x284
400e31be:	754c      	movi.n	a5, 71
400e31c0:	059957        	bne	a9, a5, 400e31c9 <_vfprintf_r+0xe81>
400e31c3:	a02152        	l32i	a5, a1, 0x280
400e31c6:	5d6507        	bbci	a5, 0, 400e3227 <_vfprintf_r+0xedf>
400e31c9:	a12182        	l32i	a8, a1, 0x284
400e31cc:	a92192        	l32i	a9, a1, 0x2a4
400e31cf:	664c      	movi.n	a6, 70
400e31d1:	584a      	add.n	a5, a8, a4
400e31d3:	269967        	bne	a9, a6, 400e31fd <_vfprintf_r+0xeb5>
400e31d6:	000862        	l8ui	a6, a8, 0
400e31d9:	d0c662        	addi	a6, a6, -48
400e31dc:	86dc      	bnez.n	a6, 400e31f8 <_vfprintf_r+0xeb0>
400e31de:	b3a1c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e31e1:	b3a0d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e31e4:	03ad      	mov.n	a10, a3
400e31e6:	02bd      	mov.n	a11, a2
400e31e8:	b56f81        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e31eb:	0008e0        	callx8	a8
400e31ee:	6a8c      	beqz.n	a10, 400e31f8 <_vfprintf_r+0xeb0>
400e31f0:	160c      	movi.n	a6, 1
400e31f2:	c04640        	sub	a4, a6, a4
400e31f5:	956142        	s32i	a4, a1, 0x254
400e31f8:	952142        	l32i	a4, a1, 0x254
400e31fb:	554a      	add.n	a5, a5, a4
400e31fd:	b399c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e3200:	b399d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e3203:	03ad      	mov.n	a10, a3
400e3205:	02bd      	mov.n	a11, a2
400e3207:	b56381        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e320a:	0008e0        	callx8	a8
400e320d:	033c      	movi.n	a3, 48
400e320f:	eacc      	bnez.n	a10, 400e3221 <_vfprintf_r+0xed9>
400e3211:	906152        	s32i	a5, a1, 0x240
400e3214:	0003c6        	j	400e3227 <_vfprintf_r+0xedf>
400e3217:	1b0000        	un.s	b0, f0, f0
400e321a:	614242        	s8i	a4, a2, 97
400e321d:	423290        	xorb	b3, b2, b9
400e3220:	212200        	srai	a2, a0, 2
400e3223:	325790        	orbc	b5, b7, b9
400e3226:	2122f1        	l32r	a15, 400ab6b0 <_iram_end+0x1db5c>
400e3229:	213290        	srai	a3, a9, 2
400e322c:	2230a1        	l32r	a10, 400abaec <_iram_end+0x1df98>
400e322f:	6122c0        	xsr.m2	a12
400e3232:	2142a7        	ball	a2, a10, 400e3257 <_vfprintf_r+0xf0f>
400e3235:	4ca9      	s32i.n	a10, a12, 16
400e3237:	942772        	l32i	a7, a7, 0x250
400e323a:	221c      	movi.n	a2, 18
400e323c:	7c9521        	l32r	a2, 400c2490 <_rtc_text_end+0x2490>
400e323f:	2237d3        	lsi	f13, a7, 136
400e3242:	5208      	l32i.n	a0, a2, 20
400e3244:	27a521        	l32r	a2, 400ad0d8 <_iram_end+0x1f584>
400e3247:	c60225        	call8	400a9268 <_iram_end+0x1b714>
400e324a:	5e          	.byte 0x5e
400e324b:	216200        	srai	a6, a0, 2
400e324e:	c662a6        	blti	a2, 6, 400e3218 <_vfprintf_r+0xed0>
400e3251:	fe          	.byte 0xfe
400e3252:	a66162        	s32i	a6, a1, 0x298
400e3255:	0004c6        	j	400e326c <_vfprintf_r+0xf24>
400e3258:	a62182        	l32i	a8, a1, 0x298
400e325b:	624c      	movi.n	a2, 70
400e325d:	029827        	bne	a8, a2, 400e3263 <_vfprintf_r+0xf1b>
400e3260:	004646        	j	400e337d <_vfprintf_r+0x1035>
400e3263:	65a022        	movi	a2, 101
400e3266:	02a287        	bge	a2, a8, 400e326c <_vfprintf_r+0xf24>
400e3269:	0041c6        	j	400e3374 <_vfprintf_r+0x102c>
400e326c:	952122        	l32i	a2, a1, 0x254
400e326f:	a62192        	l32i	a9, a1, 0x298
400e3272:	220b      	addi.n	a2, a2, -1
400e3274:	dfaf42        	movi	a4, -33
400e3277:	956122        	s32i	a2, a1, 0x254
400e327a:	104940        	and	a4, a9, a4
400e327d:	41a052        	movi	a5, 65
400e3280:	743090        	extui	a3, a9, 0, 8
400e3283:	059457        	bne	a4, a5, 400e328c <_vfprintf_r+0xf44>
400e3286:	0fc932        	addi	a3, a9, 15
400e3289:	743030        	extui	a3, a3, 0, 8
400e328c:	10c1a2        	addi	a10, a1, 16
400e328f:	02da52        	addmi	a5, a10, 0x200
400e3292:	374532        	s8i	a3, a5, 55
400e3295:	b32c      	movi.n	a3, 43
400e3297:	00a2d6        	bgez	a2, 400e32a5 <_vfprintf_r+0xf5d>
400e329a:	602020        	neg	a2, a2
400e329d:	d32c      	movi.n	a3, 45
400e329f:	000086        	j	400e32a5 <_vfprintf_r+0xf5d>
400e32a2:	000000        	ill
400e32a5:	384532        	s8i	a3, a5, 56
400e32a8:	950c      	movi.n	a5, 9
400e32aa:	5ea527        	bge	a5, a2, 400e330c <_vfprintf_r+0xfc4>
400e32ad:	37a232        	movi	a3, 0x237
400e32b0:	10c1e2        	addi	a14, a1, 16
400e32b3:	b53161        	l32r	a6, 400d0778 <_flash_cache_start+0x760>
400e32b6:	3e3a      	add.n	a3, a14, a3
400e32b8:	b24260        	mulsh	a4, a2, a6
400e32bb:	318f20        	srai	a8, a2, 31
400e32be:	214240        	srai	a4, a4, 2
400e32c1:	c04480        	sub	a4, a4, a8
400e32c4:	a08440        	addx4	a8, a4, a4
400e32c7:	1188f0        	slli	a8, a8, 1
400e32ca:	c02280        	sub	a2, a2, a8
400e32cd:	30c222        	addi	a2, a2, 48
400e32d0:	330b      	addi.n	a3, a3, -1
400e32d2:	004322        	s8i	a2, a3, 0
400e32d5:	042d      	mov.n	a2, a4
400e32d7:	dd2547        	blt	a5, a4, 400e32b8 <_vfprintf_r+0xf70>
400e32da:	330b      	addi.n	a3, a3, -1
400e32dc:	30c422        	addi	a2, a4, 48
400e32df:	004322        	s8i	a2, a3, 0
400e32e2:	39a242        	movi	a4, 0x239
400e32e5:	10c122        	addi	a2, a1, 16
400e32e8:	424a      	add.n	a4, a2, a4
400e32ea:	10c152        	addi	a5, a1, 16
400e32ed:	032d      	mov.n	a2, a3
400e32ef:	37a232        	movi	a3, 0x237
400e32f2:	353a      	add.n	a3, a5, a3
400e32f4:	000286        	j	400e3302 <_vfprintf_r+0xfba>
400e32f7:	025200        	andb	b5, b2, b0
400e32fa:	221b00        	orb	b1, b11, b0
400e32fd:	004452        	s8i	a5, a4, 0
400e3300:	441b      	addi.n	a4, a4, 1
400e3302:	045d      	mov.n	a5, a4
400e3304:	f03237        	bltu	a2, a3, 400e32f8 <_vfprintf_r+0xfb0>
400e3307:	000986        	j	400e3331 <_vfprintf_r+0xfe9>
400e330a:	320000        	orbc	b0, b0, b0
400e330d:	6239a2        	lsi	f10, a9, 0x188
400e3310:	4c10c1        	l32r	a12, 400b6350 <_iram_end+0x287fc>
400e3313:	363015        	call4	40119614 <_etext+0x2cd37>
400e3316:	145780        	extui	a5, a8, 7, 2
400e3319:	0e          	.byte 0xe
400e331a:	02d632        	addmi	a3, a6, 0x200
400e331d:	30a042        	movi	a4, 48
400e3320:	394342        	s8i	a4, a3, 57
400e3323:	3aa232        	movi	a3, 0x23a
400e3326:	803630        	add	a3, a6, a3
400e3329:	30c222        	addi	a2, a2, 48
400e332c:	531b      	addi.n	a5, a3, 1
400e332e:	004322        	s8i	a2, a3, 0
400e3331:	47a282        	movi	a8, 0x247
400e3334:	218a      	add.n	a2, a1, a8
400e3336:	a72192        	l32i	a9, a1, 0x29c
400e3339:	c02520        	sub	a2, a5, a2
400e333c:	992a      	add.n	a9, a9, a2
400e333e:	b46122        	s32i	a2, a1, 0x2d0
400e3341:	a72122        	l32i	a2, a1, 0x29c
400e3344:	a56192        	s32i	a9, a1, 0x294
400e3347:	0522e6        	bgei	a2, 2, 400e3350 <_vfprintf_r+0x1008>
400e334a:	a02132        	l32i	a3, a1, 0x280
400e334d:	076307        	bbci	a3, 0, 400e3358 <_vfprintf_r+0x1010>
400e3350:	a52142        	l32i	a4, a1, 0x294
400e3353:	441b      	addi.n	a4, a4, 1
400e3355:	a56142        	s32i	a4, a1, 0x294
400e3358:	a02152        	l32i	a5, a1, 0x280
400e335b:	ffab22        	movi	a2, 0xfffffbff
400e335e:	102520        	and	a2, a5, a2
400e3361:	00a132        	movi	a3, 0x100
400e3364:	203230        	or	a3, a2, a3
400e3367:	a06132        	s32i	a3, a1, 0x280
400e336a:	030c      	movi.n	a3, 0
400e336c:	035d      	mov.n	a5, a3
400e336e:	032d      	mov.n	a2, a3
400e3370:	003946        	j	400e3459 <_vfprintf_r+0x1111>
400e3373:	216200        	srai	a6, a0, 2
400e3376:	a022a6        	blti	a2, 2, 400e331a <_vfprintf_r+0xfd2>
400e3379:	962766        	bnei	a7, 2, 400e3313 <_vfprintf_r+0xfcb>
400e337c:	424a      	add.n	a4, a2, a4
400e337e:	a69521        	l32r	a2, 400ccdd4 <_rtc_text_end+0xcdd4>
400e3381:	822114        	lsi	f1, a1, 0x208
400e3384:	cca521        	l32r	a2, 400d6618 <esp_int_wdt_init+0xe8>
400e3387:	92a8      	l32i.n	a10, a2, 36
400e3389:	2266a0        	orb	b6, b6, b10
400e338c:	92a021        	l32r	a2, 400c7e0c <_rtc_text_end+0x7e0c>
400e338f:	07a661        	l32r	a6, 400a5228 <_iram_end+0x176d4>
400e3392:	326362        	s32i	a6, a3, 200
400e3395:	52a521        	l32r	a2, 400b7e2c <_iram_end+0x2a2d8>
400e3398:	1b66a0        	un.s	b6, f6, f10
400e339b:	446a63        	lsi	f6, a10, 0x110
400e339e:	a66152        	s32i	a5, a1, 0x298
400e33a1:	0014c6        	j	400e33f8 <_vfprintf_r+0x10b0>
400e33a4:	216200        	srai	a6, a0, 2
400e33a7:	c6cca5        	call8	400aa070 <_iram_end+0x1c51c>
400e33aa:	66a082        	movi	a8, 102
400e33ad:	a02192        	l32i	a9, a1, 0x280
400e33b0:	a66182        	s32i	a8, a1, 0x298
400e33b3:	140c      	movi.n	a4, 1
400e33b5:	3f6907        	bbci	a9, 0, 400e33f8 <_vfprintf_r+0x10b0>
400e33b8:	a52122        	l32i	a2, a1, 0x294
400e33bb:	66a032        	movi	a3, 102
400e33be:	422b      	addi.n	a4, a2, 2
400e33c0:	a66132        	s32i	a3, a1, 0x298
400e33c3:	000c46        	j	400e33f8 <_vfprintf_r+0x10b0>
400e33c6:	420000        	xorb	b0, b0, b0
400e33c9:	529521        	l32r	a2, 400b7e20 <_iram_end+0x2a2cc>
400e33cc:	57a721        	l32r	a2, 400b9268 <_iram_end+0x2b714>
400e33cf:	621024        	lsi	f2, a0, 0x188
400e33d2:	8267a0        	mull	a6, a7, a10
400e33d5:	62a021        	l32r	a2, 400bbe58 <_iram_end+0x2e304>
400e33d8:	07a661        	l32r	a6, 400a5270 <_iram_end+0x1771c>
400e33db:	1a68      	l32i.n	a6, a10, 4
400e33dd:	441b      	addi.n	a4, a4, 1
400e33df:	000546        	j	400e33f8 <_vfprintf_r+0x10b0>
400e33e2:	120c      	movi.n	a2, 1
400e33e4:	05a427        	bge	a4, a2, 400e33ed <_vfprintf_r+0x10a5>
400e33e7:	02a022        	movi	a2, 2
400e33ea:	c02240        	sub	a2, a2, a4
400e33ed:	a72192        	l32i	a9, a1, 0x29c
400e33f0:	429a      	add.n	a4, a2, a9
400e33f2:	67a022        	movi	a2, 103
400e33f5:	a66122        	s32i	a2, a1, 0x298
400e33f8:	a02152        	l32i	a5, a1, 0x280
400e33fb:	952132        	l32i	a3, a1, 0x254
400e33fe:	4865a7        	bbci	a5, 10, 400e344a <_vfprintf_r+0x1102>
400e3401:	032d      	mov.n	a2, a3
400e3403:	4313a6        	blti	a3, 1, 400e344a <_vfprintf_r+0x1102>
400e3406:	030c      	movi.n	a3, 0
400e3408:	035d      	mov.n	a5, a3
400e340a:	ffa082        	movi	a8, 255
400e340d:	000686        	j	400e342b <_vfprintf_r+0x10e3>
400e3410:	20a627        	bge	a6, a2, 400e3434 <_vfprintf_r+0x10ec>
400e3413:	ad2192        	l32i	a9, a1, 0x2b4
400e3416:	c02260        	sub	a2, a2, a6
400e3419:	010962        	l8ui	a6, a9, 1
400e341c:	968c      	beqz.n	a6, 400e3429 <_vfprintf_r+0x10e1>
400e341e:	991b      	addi.n	a9, a9, 1
400e3420:	551b      	addi.n	a5, a5, 1
400e3422:	ad6192        	s32i	a9, a1, 0x2b4
400e3425:	000086        	j	400e342b <_vfprintf_r+0x10e3>
400e3428:	331b00        	clamps	a1, a11, 7
400e342b:	ad2192        	l32i	a9, a1, 0x2b4
400e342e:	000962        	l8ui	a6, a9, 0
400e3431:	db9687        	bne	a6, a8, 400e3410 <_vfprintf_r+0x10c8>
400e3434:	b02182        	l32i	a8, a1, 0x2c0
400e3437:	653a      	add.n	a6, a5, a3
400e3439:	826680        	mull	a6, a6, a8
400e343c:	b22192        	l32i	a9, a1, 0x2c8
400e343f:	664a      	add.n	a6, a6, a4
400e3441:	a56162        	s32i	a6, a1, 0x294
400e3444:	a06192        	s32i	a9, a1, 0x280
400e3447:	000386        	j	400e3459 <_vfprintf_r+0x1111>
400e344a:	032d      	mov.n	a2, a3
400e344c:	b22132        	l32i	a3, a1, 0x2c8
400e344f:	a56142        	s32i	a4, a1, 0x294
400e3452:	a06132        	s32i	a3, a1, 0x280
400e3455:	030c      	movi.n	a3, 0
400e3457:	035d      	mov.n	a5, a3
400e3459:	b62142        	l32i	a4, a1, 0x2d8
400e345c:	060c      	movi.n	a6, 0
400e345e:	029467        	bne	a4, a6, 400e3464 <_vfprintf_r+0x111c>
400e3461:	0503c6        	j	400e4874 <_vfprintf_r+0x252c>
400e3464:	10c192        	addi	a9, a1, 16
400e3467:	d82c      	movi.n	a8, 45
400e3469:	02d942        	addmi	a4, a9, 0x200
400e346c:	524482        	s8i	a8, a4, 82
400e346f:	050046        	j	400e4874 <_vfprintf_r+0x252c>
400e3472:	320000        	orbc	b0, b0, b0
400e3475:	57a021        	l32r	a2, 400b92f8 <_iram_end+0x2b7a4>
400e3478:	8602e3        	lsi	f14, a2, 0x218
400e347b:	320031        	l32r	a3, 400afc7c <_iram_end+0x22128>
400e347e:	bc9721        	l32r	a2, 400d26dc <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_deallocate(unsigned int*, unsigned int)+0x10>
400e3481:	a23744        	lsi	f4, a7, 0x288
400e3484:	420a      	add.n	a4, a2, a0
400e3486:	4010c1        	l32r	a12, 400b34c8 <_iram_end+0x25974>
400e3489:	28b022        	l32ai	a2, a0, 160
400e348c:	084602        	s8i	a0, a6, 8
400e348f:	c16200        	mul16u	a6, a2, a0
400e3492:	a23210        	muluh	a3, a2, a1
400e3495:	3a48      	l32i.n	a4, a10, 12
400e3497:	a2d236        	entry	a2, 0x5168
400e349a:	c24c      	movi.n	a2, 76
400e349c:	ad60a2        	s32i	a10, a0, 0x2b4
400e349f:	013902        	lsi	f0, a9, 4
400e34a2:	01d6f2        	addmi	a15, a6, 0x100
400e34a5:	06ed      	mov.n	a14, a6
400e34a7:	d6da      	add.n	a13, a6, a13
400e34a9:	c6ca      	add.n	a12, a6, a12
400e34ab:	05bd      	mov.n	a11, a5
400e34ad:	fea1a5        	call8	400e1ec8 <get_arg$isra$0>
400e34b0:	0a28      	l32i.n	a2, a10, 0
400e34b2:	074d      	mov.n	a4, a7
400e34b4:	001f86        	j	400e3536 <_vfprintf_r+0x11ee>
400e34b7:	c18200        	mul16u	a8, a2, a0
400e34ba:	471b10        	lsi	f1, a11, 0x11c
400e34bd:	b02280        	addx8	a2, a2, a8
400e34c0:	702737        	blt	a7, a3, 400e3534 <_vfprintf_r+0x11ec>
400e34c3:	f21c      	movi.n	a2, 31
400e34c5:	3f2237        	blt	a2, a3, 400e3508 <_vfprintf_r+0x11c0>
400e34c8:	231b      	addi.n	a2, a3, 1
400e34ca:	10c192        	addi	a9, a1, 16
400e34cd:	976122        	s32i	a2, a1, 0x25c
400e34d0:	02d922        	addmi	a2, a9, 0x200
400e34d3:	1a2252        	l32i	a5, a2, 104
400e34d6:	861c      	movi.n	a6, 24
400e34d8:	754b      	addi.n	a7, a5, 4
400e34da:	1a6272        	s32i	a7, a2, 104
400e34dd:	072677        	blt	a6, a7, 400e34e8 <_vfprintf_r+0x11a0>
400e34e0:	192252        	l32i	a5, a2, 100
400e34e3:	000306        	j	400e34f3 <_vfprintf_r+0x11ab>
400e34e6:	570000        	lsi	f0, a0, 0x15c
400e34e9:	2c0426        	beqi	a4, -1, 400e3519 <_vfprintf_r+0x11d1>
400e34ec:	625245        	call0	40145a14 <_etext+0x59137>
400e34ef:	521a      	add.n	a5, a2, a1
400e34f1:	229c21        	l32r	a2, 400abf64 <_iram_end+0x1e410>
400e34f4:	a29e21        	l32r	a2, 400cbf6c <_rtc_text_end+0xbf6c>
400e34f7:	2a10c1        	l32r	a12, 400add38 <_iram_end+0x201e4>
400e34fa:	c22225        	call8	400a571c <_iram_end+0x17bc8>
400e34fd:	28fc      	bnez.n	a8, 400e3533 <_vfprintf_r+0x11eb>
400e34ff:	33a002        	movi	a0, 51
400e3502:	0329b0        	lsi	f11, a9, 12
400e3505:	000b46        	j	400e3536 <_vfprintf_r+0x11ee>
400e3508:	10c1e2        	addi	a14, a1, 16
400e350b:	02de22        	addmi	a2, a14, 0x200
400e350e:	1a2232        	l32i	a3, a2, 104
400e3511:	851c      	movi.n	a5, 24
400e3513:	634b      	addi.n	a6, a3, 4
400e3515:	1a6262        	s32i	a6, a2, 104
400e3518:	052567        	blt	a5, a6, 400e3521 <_vfprintf_r+0x11d9>
400e351b:	192232        	l32i	a3, a2, 100
400e351e:	000286        	j	400e352c <_vfprintf_r+0x11e4>
400e3521:	042537        	blt	a5, a3, 400e3529 <_vfprintf_r+0x11e1>
400e3524:	432c      	movi.n	a3, 36
400e3526:	1a6232        	s32i	a3, a2, 104
400e3529:	9c2132        	l32i	a3, a1, 0x270
400e352c:	9e2122        	l32i	a2, a1, 0x278
400e352f:	232a      	add.n	a2, a3, a2
400e3531:	fcc222        	addi	a2, a2, -4
400e3534:	0228      	l32i.n	a2, a2, 0
400e3536:	ae2132        	l32i	a3, a1, 0x2b8
400e3539:	0239      	s32i.n	a3, a2, 0
400e353b:	313f30        	srai	a3, a3, 31
400e353e:	1239      	s32i.n	a3, a2, 4
400e3540:	0031c6        	j	400e360b <_vfprintf_r+0x12c3>
400e3543:	216200        	srai	a6, a0, 2
400e3546:	e647a0        	lsi	f10, a7, 0x398
400e3549:	308602        	lsi	f0, a6, 192
400e354c:	216200        	srai	a6, a0, 2
400e354f:	34bc97        	bgeu	a12, a9, 400e3587 <_vfprintf_r+0x123f>
400e3552:	0aa267        	bge	a2, a6, 400e3560 <_vfprintf_r+0x1218>
400e3555:	10c182        	addi	a8, a1, 16
400e3558:	b02280        	addx8	a2, a2, a8
400e355b:	0238      	l32i.n	a3, a2, 0
400e355d:	000846        	j	400e3582 <_vfprintf_r+0x123a>
400e3560:	10c192        	addi	a9, a1, 16
400e3563:	48a232        	movi	a3, 0x248
400e3566:	393a      	add.n	a3, a9, a3
400e3568:	4ca2d2        	movi	a13, 0x24c
400e356b:	60a2c2        	movi	a12, 0x260
400e356e:	0139      	s32i.n	a3, a1, 0
400e3570:	01d9f2        	addmi	a15, a9, 0x100
400e3573:	09ed      	mov.n	a14, a9
400e3575:	d9da      	add.n	a13, a9, a13
400e3577:	c9ca      	add.n	a12, a9, a12
400e3579:	05bd      	mov.n	a11, a5
400e357b:	02ad      	mov.n	a10, a2
400e357d:	fe94a5        	call8	400e1ec8 <get_arg$isra$0>
400e3580:	0a38      	l32i.n	a3, a10, 0
400e3582:	074d      	mov.n	a4, a7
400e3584:	001f86        	j	400e3606 <_vfprintf_r+0x12be>
400e3587:	10c1a2        	addi	a10, a1, 16
400e358a:	471b      	addi.n	a4, a7, 1
400e358c:	b022a0        	addx8	a2, a2, a10
400e358f:	712767        	blt	a7, a6, 400e3604 <_vfprintf_r+0x12bc>
400e3592:	f21c      	movi.n	a2, 31
400e3594:	3d2267        	blt	a2, a6, 400e35d5 <_vfprintf_r+0x128d>
400e3597:	261b      	addi.n	a2, a6, 1
400e3599:	10c1e2        	addi	a14, a1, 16
400e359c:	976122        	s32i	a2, a1, 0x25c
400e359f:	02de22        	addmi	a2, a14, 0x200
400e35a2:	1a2232        	l32i	a3, a2, 104
400e35a5:	851c      	movi.n	a5, 24
400e35a7:	734b      	addi.n	a7, a3, 4
400e35a9:	1a6272        	s32i	a7, a2, 104
400e35ac:	052577        	blt	a5, a7, 400e35b5 <_vfprintf_r+0x126d>
400e35af:	192222        	l32i	a2, a2, 100
400e35b2:	000286        	j	400e35c0 <_vfprintf_r+0x1278>
400e35b5:	042537        	blt	a5, a3, 400e35bd <_vfprintf_r+0x1275>
400e35b8:	432c      	movi.n	a3, 36
400e35ba:	1a6232        	s32i	a3, a2, 104
400e35bd:	9c2122        	l32i	a2, a1, 0x270
400e35c0:	9e2132        	l32i	a3, a1, 0x278
400e35c3:	10c152        	addi	a5, a1, 16
400e35c6:	323a      	add.n	a3, a2, a3
400e35c8:	fcc332        	addi	a3, a3, -4
400e35cb:	0338      	l32i.n	a3, a3, 0
400e35cd:	b02650        	addx8	a2, a6, a5
400e35d0:	0239      	s32i.n	a3, a2, 0
400e35d2:	000c06        	j	400e3606 <_vfprintf_r+0x12be>
400e35d5:	10c162        	addi	a6, a1, 16
400e35d8:	02d622        	addmi	a2, a6, 0x200
400e35db:	1a2232        	l32i	a3, a2, 104
400e35de:	851c      	movi.n	a5, 24
400e35e0:	634b      	addi.n	a6, a3, 4
400e35e2:	1a6262        	s32i	a6, a2, 104
400e35e5:	082567        	blt	a5, a6, 400e35f1 <_vfprintf_r+0x12a9>
400e35e8:	192232        	l32i	a3, a2, 100
400e35eb:	000346        	j	400e35fc <_vfprintf_r+0x12b4>
400e35ee:	000000        	ill
400e35f1:	042537        	blt	a5, a3, 400e35f9 <_vfprintf_r+0x12b1>
400e35f4:	432c      	movi.n	a3, 36
400e35f6:	1a6232        	s32i	a3, a2, 104
400e35f9:	9c2132        	l32i	a3, a1, 0x270
400e35fc:	9e2122        	l32i	a2, a1, 0x278
400e35ff:	232a      	add.n	a2, a3, a2
400e3601:	fcc222        	addi	a2, a2, -4
400e3604:	0238      	l32i.n	a3, a2, 0
400e3606:	ae2182        	l32i	a8, a1, 0x2b8
400e3609:	0389      	s32i.n	a8, a3, 0
400e360b:	047d      	mov.n	a7, a4
400e360d:	fbab86        	j	400e24bf <_vfprintf_r+0x177>
400e3610:	a02192        	l32i	a9, a1, 0x280
400e3613:	02e967        	bbsi	a9, 6, 400e3619 <_vfprintf_r+0x12d1>
400e3616:	002f86        	j	400e36d8 <_vfprintf_r+0x1390>
400e3619:	972162        	l32i	a6, a1, 0x25c
400e361c:	14bc      	beqz.n	a4, 400e3651 <_vfprintf_r+0x1309>
400e361e:	0aa267        	bge	a2, a6, 400e362c <_vfprintf_r+0x12e4>
400e3621:	10c1a2        	addi	a10, a1, 16
400e3624:	b022a0        	addx8	a2, a2, a10
400e3627:	0238      	l32i.n	a3, a2, 0
400e3629:	0007c6        	j	400e364c <_vfprintf_r+0x1304>
400e362c:	10c1e2        	addi	a14, a1, 16
400e362f:	48a232        	movi	a3, 0x248
400e3632:	3e3a      	add.n	a3, a14, a3
400e3634:	4ca2d2        	movi	a13, 0x24c
400e3637:	60a2c2        	movi	a12, 0x260
400e363a:	0139      	s32i.n	a3, a1, 0
400e363c:	01def2        	addmi	a15, a14, 0x100
400e363f:	deda      	add.n	a13, a14, a13
400e3641:	ceca      	add.n	a12, a14, a12
400e3643:	05bd      	mov.n	a11, a5
400e3645:	02ad      	mov.n	a10, a2
400e3647:	fe8825        	call8	400e1ec8 <get_arg$isra$0>
400e364a:	0a38      	l32i.n	a3, a10, 0
400e364c:	074d      	mov.n	a4, a7
400e364e:	001f06        	j	400e36ce <_vfprintf_r+0x1386>
400e3651:	10c132        	addi	a3, a1, 16
400e3654:	471b      	addi.n	a4, a7, 1
400e3656:	b02230        	addx8	a2, a2, a3
400e3659:	6f2767        	blt	a7, a6, 400e36cc <_vfprintf_r+0x1384>
400e365c:	f21c      	movi.n	a2, 31
400e365e:	3e2267        	blt	a2, a6, 400e36a0 <_vfprintf_r+0x1358>
400e3661:	261b      	addi.n	a2, a6, 1
400e3663:	10c152        	addi	a5, a1, 16
400e3666:	976122        	s32i	a2, a1, 0x25c
400e3669:	02d522        	addmi	a2, a5, 0x200
400e366c:	1a2232        	l32i	a3, a2, 104
400e366f:	851c      	movi.n	a5, 24
400e3671:	734b      	addi.n	a7, a3, 4
400e3673:	1a6272        	s32i	a7, a2, 104
400e3676:	062577        	blt	a5, a7, 400e3680 <_vfprintf_r+0x1338>
400e3679:	192222        	l32i	a2, a2, 100
400e367c:	0002c6        	j	400e368b <_vfprintf_r+0x1343>
400e367f:	253700        	extui	a3, a0, 23, 3
400e3682:	432c04        	lsi	f0, a12, 0x10c
400e3685:	1a6232        	s32i	a3, a2, 104
400e3688:	9c2122        	l32i	a2, a1, 0x270
400e368b:	9e2132        	l32i	a3, a1, 0x278
400e368e:	10c182        	addi	a8, a1, 16
400e3691:	323a      	add.n	a3, a2, a3
400e3693:	fcc332        	addi	a3, a3, -4
400e3696:	0338      	l32i.n	a3, a3, 0
400e3698:	b02680        	addx8	a2, a6, a8
400e369b:	0239      	s32i.n	a3, a2, 0
400e369d:	000b46        	j	400e36ce <_vfprintf_r+0x1386>
400e36a0:	10c192        	addi	a9, a1, 16
400e36a3:	02d922        	addmi	a2, a9, 0x200
400e36a6:	1a2232        	l32i	a3, a2, 104
400e36a9:	851c      	movi.n	a5, 24
400e36ab:	634b      	addi.n	a6, a3, 4
400e36ad:	1a6262        	s32i	a6, a2, 104
400e36b0:	052567        	blt	a5, a6, 400e36b9 <_vfprintf_r+0x1371>
400e36b3:	192232        	l32i	a3, a2, 100
400e36b6:	000286        	j	400e36c4 <_vfprintf_r+0x137c>
400e36b9:	042537        	blt	a5, a3, 400e36c1 <_vfprintf_r+0x1379>
400e36bc:	432c      	movi.n	a3, 36
400e36be:	1a6232        	s32i	a3, a2, 104
400e36c1:	9c2132        	l32i	a3, a1, 0x270
400e36c4:	9e2122        	l32i	a2, a1, 0x278
400e36c7:	232a      	add.n	a2, a3, a2
400e36c9:	fcc222        	addi	a2, a2, -4
400e36cc:	0238      	l32i.n	a3, a2, 0
400e36ce:	ae2122        	l32i	a2, a1, 0x2b8
400e36d1:	005322        	s16i	a2, a3, 0
400e36d4:	ffccc6        	j	400e360b <_vfprintf_r+0x12c3>
400e36d7:	216200        	srai	a6, a0, 2
400e36da:	2132a0        	srai	a3, a10, 2
400e36dd:	e69797        	bne	a7, a9, 400e36c7 <_vfprintf_r+0x137f>
400e36e0:	2fc602        	addi	a0, a6, 47
400e36e3:	44bc00        	extui	a11, a0, 12, 5
400e36e6:	0aa237        	bge	a2, a3, 400e36f4 <_vfprintf_r+0x13ac>
400e36e9:	10c182        	addi	a8, a1, 16
400e36ec:	b02280        	addx8	a2, a2, a8
400e36ef:	0248      	l32i.n	a4, a2, 0
400e36f1:	000846        	j	400e3716 <_vfprintf_r+0x13ce>
400e36f4:	10c192        	addi	a9, a1, 16
400e36f7:	48a232        	movi	a3, 0x248
400e36fa:	393a      	add.n	a3, a9, a3
400e36fc:	4ca2d2        	movi	a13, 0x24c
400e36ff:	60a2c2        	movi	a12, 0x260
400e3702:	0139      	s32i.n	a3, a1, 0
400e3704:	01d9f2        	addmi	a15, a9, 0x100
400e3707:	09ed      	mov.n	a14, a9
400e3709:	d9da      	add.n	a13, a9, a13
400e370b:	c9ca      	add.n	a12, a9, a12
400e370d:	05bd      	mov.n	a11, a5
400e370f:	02ad      	mov.n	a10, a2
400e3711:	fe7b65        	call8	400e1ec8 <get_arg$isra$0>
400e3714:	0a48      	l32i.n	a4, a10, 0
400e3716:	075d      	mov.n	a5, a7
400e3718:	001f86        	j	400e379a <_vfprintf_r+0x1452>
400e371b:	c1a200        	mul16u	a10, a2, a0
400e371e:	571b10        	lsi	f1, a11, 0x15c
400e3721:	b022a0        	addx8	a2, a2, a10
400e3724:	702737        	blt	a7, a3, 400e3798 <_vfprintf_r+0x1450>
400e3727:	f21c      	movi.n	a2, 31
400e3729:	3f2237        	blt	a2, a3, 400e376c <_vfprintf_r+0x1424>
400e372c:	231b      	addi.n	a2, a3, 1
400e372e:	10c1e2        	addi	a14, a1, 16
400e3731:	976122        	s32i	a2, a1, 0x25c
400e3734:	02de22        	addmi	a2, a14, 0x200
400e3737:	1a2242        	l32i	a4, a2, 104
400e373a:	861c      	movi.n	a6, 24
400e373c:	744b      	addi.n	a7, a4, 4
400e373e:	1a6272        	s32i	a7, a2, 104
400e3741:	072677        	blt	a6, a7, 400e374c <_vfprintf_r+0x1404>
400e3744:	192242        	l32i	a4, a2, 100
400e3747:	000306        	j	400e3757 <_vfprintf_r+0x140f>
400e374a:	470000        	lsi	f0, a0, 0x11c
400e374d:	2c0426        	beqi	a4, -1, 400e377d <_vfprintf_r+0x1435>
400e3750:	624244        	lsi	f4, a2, 0x188
400e3753:	421a      	add.n	a4, a2, a1
400e3755:	229c21        	l32r	a2, 400ac1c8 <_iram_end+0x1e674>
400e3758:	629e21        	l32r	a2, 400bc1d0 <_iram_end+0x2e67c>
400e375b:	2a10c1        	l32r	a12, 400adf9c <_iram_end+0x20448>
400e375e:	c22224        	lsi	f2, a2, 0x308
400e3761:	48fc      	bnez.n	a8, 400e3799 <_vfprintf_r+0x1451>
400e3763:	236002        	s32i	a0, a0, 140
400e3766:	0249b0        	andb	b4, b9, b11
400e3769:	000b46        	j	400e379a <_vfprintf_r+0x1452>
400e376c:	10c182        	addi	a8, a1, 16
400e376f:	02d822        	addmi	a2, a8, 0x200
400e3772:	1a2232        	l32i	a3, a2, 104
400e3775:	841c      	movi.n	a4, 24
400e3777:	634b      	addi.n	a6, a3, 4
400e3779:	1a6262        	s32i	a6, a2, 104
400e377c:	052467        	blt	a4, a6, 400e3785 <_vfprintf_r+0x143d>
400e377f:	192232        	l32i	a3, a2, 100
400e3782:	000286        	j	400e3790 <_vfprintf_r+0x1448>
400e3785:	042437        	blt	a4, a3, 400e378d <_vfprintf_r+0x1445>
400e3788:	432c      	movi.n	a3, 36
400e378a:	1a6232        	s32i	a3, a2, 104
400e378d:	9c2132        	l32i	a3, a1, 0x270
400e3790:	9e2122        	l32i	a2, a1, 0x278
400e3793:	232a      	add.n	a2, a3, a2
400e3795:	fcc222        	addi	a2, a2, -4
400e3798:	0248      	l32i.n	a4, a2, 0
400e379a:	ae2192        	l32i	a9, a1, 0x2b8
400e379d:	004492        	s8i	a9, a4, 0
400e37a0:	002ec6        	j	400e385f <_vfprintf_r+0x1517>
400e37a3:	14bc00        	extui	a11, a0, 12, 2
400e37a6:	0aa237        	bge	a2, a3, 400e37b4 <_vfprintf_r+0x146c>
400e37a9:	10c1a2        	addi	a10, a1, 16
400e37ac:	b022a0        	addx8	a2, a2, a10
400e37af:	0248      	l32i.n	a4, a2, 0
400e37b1:	0007c6        	j	400e37d4 <_vfprintf_r+0x148c>
400e37b4:	10c1e2        	addi	a14, a1, 16
400e37b7:	48a232        	movi	a3, 0x248
400e37ba:	3e3a      	add.n	a3, a14, a3
400e37bc:	4ca2d2        	movi	a13, 0x24c
400e37bf:	60a2c2        	movi	a12, 0x260
400e37c2:	0139      	s32i.n	a3, a1, 0
400e37c4:	01def2        	addmi	a15, a14, 0x100
400e37c7:	deda      	add.n	a13, a14, a13
400e37c9:	ceca      	add.n	a12, a14, a12
400e37cb:	05bd      	mov.n	a11, a5
400e37cd:	02ad      	mov.n	a10, a2
400e37cf:	fe6fa5        	call8	400e1ec8 <get_arg$isra$0>
400e37d2:	0a48      	l32i.n	a4, a10, 0
400e37d4:	075d      	mov.n	a5, a7
400e37d6:	002006        	j	400e385a <_vfprintf_r+0x1512>
400e37d9:	571b      	addi.n	a5, a7, 1
400e37db:	09a737        	bge	a7, a3, 400e37e8 <_vfprintf_r+0x14a0>
400e37de:	10c132        	addi	a3, a1, 16
400e37e1:	b02230        	addx8	a2, a2, a3
400e37e4:	001c06        	j	400e3858 <_vfprintf_r+0x1510>
400e37e7:	f21c00        	rems	a1, a12, a0
400e37ea:	3e2237        	blt	a2, a3, 400e382c <_vfprintf_r+0x14e4>
400e37ed:	231b      	addi.n	a2, a3, 1
400e37ef:	10c142        	addi	a4, a1, 16
400e37f2:	976122        	s32i	a2, a1, 0x25c
400e37f5:	02d422        	addmi	a2, a4, 0x200
400e37f8:	1a2242        	l32i	a4, a2, 104
400e37fb:	861c      	movi.n	a6, 24
400e37fd:	744b      	addi.n	a7, a4, 4
400e37ff:	1a6272        	s32i	a7, a2, 104
400e3802:	062677        	blt	a6, a7, 400e380c <_vfprintf_r+0x14c4>
400e3805:	192242        	l32i	a4, a2, 100
400e3808:	0002c6        	j	400e3817 <_vfprintf_r+0x14cf>
400e380b:	264700        	lsi	f0, a7, 152
400e380e:	442c04        	lsi	f0, a12, 0x110
400e3811:	1a6242        	s32i	a4, a2, 104
400e3814:	9c2142        	l32i	a4, a1, 0x270
400e3817:	9e2122        	l32i	a2, a1, 0x278
400e381a:	10c162        	addi	a6, a1, 16
400e381d:	242a      	add.n	a2, a4, a2
400e381f:	fcc222        	addi	a2, a2, -4
400e3822:	0248      	l32i.n	a4, a2, 0
400e3824:	b02360        	addx8	a2, a3, a6
400e3827:	0249      	s32i.n	a4, a2, 0
400e3829:	000b46        	j	400e385a <_vfprintf_r+0x1512>
400e382c:	10c182        	addi	a8, a1, 16
400e382f:	02d822        	addmi	a2, a8, 0x200
400e3832:	1a2232        	l32i	a3, a2, 104
400e3835:	841c      	movi.n	a4, 24
400e3837:	634b      	addi.n	a6, a3, 4
400e3839:	1a6262        	s32i	a6, a2, 104
400e383c:	052467        	blt	a4, a6, 400e3845 <_vfprintf_r+0x14fd>
400e383f:	192232        	l32i	a3, a2, 100
400e3842:	000286        	j	400e3850 <_vfprintf_r+0x1508>
400e3845:	042437        	blt	a4, a3, 400e384d <_vfprintf_r+0x1505>
400e3848:	432c      	movi.n	a3, 36
400e384a:	1a6232        	s32i	a3, a2, 104
400e384d:	9c2132        	l32i	a3, a1, 0x270
400e3850:	9e2122        	l32i	a2, a1, 0x278
400e3853:	232a      	add.n	a2, a3, a2
400e3855:	fcc222        	addi	a2, a2, -4
400e3858:	0248      	l32i.n	a4, a2, 0
400e385a:	ae2192        	l32i	a9, a1, 0x2b8
400e385d:	0499      	s32i.n	a9, a4, 0
400e385f:	057d      	mov.n	a7, a5
400e3861:	fb1686        	j	400e24bf <_vfprintf_r+0x177>
400e3864:	a02162        	l32i	a6, a1, 0x280
400e3867:	031c      	movi.n	a3, 16
400e3869:	206630        	or	a6, a6, a3
400e386c:	a06162        	s32i	a6, a1, 0x280
400e386f:	a02182        	l32i	a8, a1, 0x280
400e3872:	02e857        	bbsi	a8, 5, 400e3878 <_vfprintf_r+0x1530>
400e3875:	0034c6        	j	400e394c <_vfprintf_r+0x1604>
400e3878:	972162        	l32i	a6, a1, 0x25c
400e387b:	54bc      	beqz.n	a4, 400e38b4 <_vfprintf_r+0x156c>
400e387d:	0ca267        	bge	a2, a6, 400e388d <_vfprintf_r+0x1545>
400e3880:	10c192        	addi	a9, a1, 16
400e3883:	b02290        	addx8	a2, a2, a9
400e3886:	0258      	l32i.n	a5, a2, 0
400e3888:	1238      	l32i.n	a3, a2, 4
400e388a:	00ed06        	j	400e3c42 <_vfprintf_r+0x18fa>
400e388d:	10c1a2        	addi	a10, a1, 16
400e3890:	48a232        	movi	a3, 0x248
400e3893:	3a3a      	add.n	a3, a10, a3
400e3895:	4ca2d2        	movi	a13, 0x24c
400e3898:	60a2c2        	movi	a12, 0x260
400e389b:	0139      	s32i.n	a3, a1, 0
400e389d:	01daf2        	addmi	a15, a10, 0x100
400e38a0:	0aed      	mov.n	a14, a10
400e38a2:	dada      	add.n	a13, a10, a13
400e38a4:	caca      	add.n	a12, a10, a12
400e38a6:	05bd      	mov.n	a11, a5
400e38a8:	02ad      	mov.n	a10, a2
400e38aa:	fe61e5        	call8	400e1ec8 <get_arg$isra$0>
400e38ad:	0a58      	l32i.n	a5, a10, 0
400e38af:	1a38      	l32i.n	a3, a10, 4
400e38b1:	00e346        	j	400e3c42 <_vfprintf_r+0x18fa>
400e38b4:	10c1e2        	addi	a14, a1, 16
400e38b7:	471b      	addi.n	a4, a7, 1
400e38b9:	b022e0        	addx8	a2, a2, a14
400e38bc:	02a767        	bge	a7, a6, 400e38c2 <_vfprintf_r+0x157a>
400e38bf:	002046        	j	400e3944 <_vfprintf_r+0x15fc>
400e38c2:	f21c      	movi.n	a2, 31
400e38c4:	482267        	blt	a2, a6, 400e3910 <_vfprintf_r+0x15c8>
400e38c7:	261b      	addi.n	a2, a6, 1
400e38c9:	10c132        	addi	a3, a1, 16
400e38cc:	976122        	s32i	a2, a1, 0x25c
400e38cf:	02d322        	addmi	a2, a3, 0x200
400e38d2:	1a2232        	l32i	a3, a2, 104
400e38d5:	537b      	addi.n	a5, a3, 7
400e38d7:	837c      	movi.n	a3, -8
400e38d9:	103530        	and	a3, a5, a3
400e38dc:	738b      	addi.n	a7, a3, 8
400e38de:	1a6272        	s32i	a7, a2, 104
400e38e1:	851c      	movi.n	a5, 24
400e38e3:	052577        	blt	a5, a7, 400e38ec <_vfprintf_r+0x15a4>
400e38e6:	192232        	l32i	a3, a2, 100
400e38e9:	000286        	j	400e38f7 <_vfprintf_r+0x15af>
400e38ec:	042537        	blt	a5, a3, 400e38f4 <_vfprintf_r+0x15ac>
400e38ef:	832c      	movi.n	a3, 40
400e38f1:	1a6232        	s32i	a3, a2, 104
400e38f4:	9c2132        	l32i	a3, a1, 0x270
400e38f7:	9e2122        	l32i	a2, a1, 0x278
400e38fa:	10c182        	addi	a8, a1, 16
400e38fd:	232a      	add.n	a2, a3, a2
400e38ff:	f8c222        	addi	a2, a2, -8
400e3902:	0258      	l32i.n	a5, a2, 0
400e3904:	1238      	l32i.n	a3, a2, 4
400e3906:	b02680        	addx8	a2, a6, a8
400e3909:	0259      	s32i.n	a5, a2, 0
400e390b:	1239      	s32i.n	a3, a2, 4
400e390d:	00cbc6        	j	400e3c40 <_vfprintf_r+0x18f8>
400e3910:	10c192        	addi	a9, a1, 16
400e3913:	02d922        	addmi	a2, a9, 0x200
400e3916:	1a2232        	l32i	a3, a2, 104
400e3919:	537b      	addi.n	a5, a3, 7
400e391b:	837c      	movi.n	a3, -8
400e391d:	103530        	and	a3, a5, a3
400e3920:	638b      	addi.n	a6, a3, 8
400e3922:	1a6262        	s32i	a6, a2, 104
400e3925:	851c      	movi.n	a5, 24
400e3927:	062567        	blt	a5, a6, 400e3931 <_vfprintf_r+0x15e9>
400e392a:	192232        	l32i	a3, a2, 100
400e392d:	0002c6        	j	400e393c <_vfprintf_r+0x15f4>
400e3930:	253700        	extui	a3, a0, 23, 3
400e3933:	832c04        	lsi	f0, a12, 0x20c
400e3936:	1a6232        	s32i	a3, a2, 104
400e3939:	9c2132        	l32i	a3, a1, 0x270
400e393c:	9e2122        	l32i	a2, a1, 0x278
400e393f:	232a      	add.n	a2, a3, a2
400e3941:	f8c222        	addi	a2, a2, -8
400e3944:	0258      	l32i.n	a5, a2, 0
400e3946:	1238      	l32i.n	a3, a2, 4
400e3948:	00bd06        	j	400e3c40 <_vfprintf_r+0x18f8>
400e394b:	213200        	srai	a3, a0, 2
400e394e:	061ca0        	lsi	f10, a12, 24
400e3951:	106360        	and	a6, a3, a6
400e3954:	07c616        	beqz	a6, 400e39d4 <_vfprintf_r+0x168c>
400e3957:	972162        	l32i	a6, a1, 0x25c
400e395a:	e49c      	beqz.n	a4, 400e397c <_vfprintf_r+0x1634>
400e395c:	08a267        	bge	a2, a6, 400e3968 <_vfprintf_r+0x1620>
400e395f:	10c142        	addi	a4, a1, 16
400e3962:	b02240        	addx8	a2, a2, a4
400e3965:	008a06        	j	400e3b91 <_vfprintf_r+0x1849>
400e3968:	10c162        	addi	a6, a1, 16
400e396b:	48a232        	movi	a3, 0x248
400e396e:	363a      	add.n	a3, a6, a3
400e3970:	0139      	s32i.n	a3, a1, 0
400e3972:	01d6f2        	addmi	a15, a6, 0x100
400e3975:	06ed      	mov.n	a14, a6
400e3977:	008b06        	j	400e3ba7 <_vfprintf_r+0x185f>
400e397a:	820000        	mull	a0, a0, a0
400e397d:	1b10c1        	l32r	a12, 400aa5c0 <_iram_end+0x1ca6c>
400e3980:	228047        	bany	a0, a4, 400e39a6 <_vfprintf_r+0x165e>
400e3983:	a767b0        	lsi	f11, a7, 0x29c
400e3986:	ac4602        	s8i	a0, a6, 172
400e3989:	f21c00        	rems	a1, a12, a0
400e398c:	3b2267        	blt	a2, a6, 400e39cb <_vfprintf_r+0x1683>
400e398f:	261b      	addi.n	a2, a6, 1
400e3991:	10c192        	addi	a9, a1, 16
400e3994:	976122        	s32i	a2, a1, 0x25c
400e3997:	02d922        	addmi	a2, a9, 0x200
400e399a:	1a2232        	l32i	a3, a2, 104
400e399d:	851c      	movi.n	a5, 24
400e399f:	734b      	addi.n	a7, a3, 4
400e39a1:	1a6272        	s32i	a7, a2, 104
400e39a4:	052577        	blt	a5, a7, 400e39ad <_vfprintf_r+0x1665>
400e39a7:	192222        	l32i	a2, a2, 100
400e39aa:	000286        	j	400e39b8 <_vfprintf_r+0x1670>
400e39ad:	042537        	blt	a5, a3, 400e39b5 <_vfprintf_r+0x166d>
400e39b0:	432c      	movi.n	a3, 36
400e39b2:	1a6232        	s32i	a3, a2, 104
400e39b5:	9c2122        	l32i	a2, a1, 0x270
400e39b8:	9e2132        	l32i	a3, a1, 0x278
400e39bb:	10c1a2        	addi	a10, a1, 16
400e39be:	323a      	add.n	a3, a2, a3
400e39c0:	fcc332        	addi	a3, a3, -4
400e39c3:	0358      	l32i.n	a5, a3, 0
400e39c5:	b026a0        	addx8	a2, a6, a10
400e39c8:	008fc6        	j	400e3c0b <_vfprintf_r+0x18c3>
400e39cb:	10c1e2        	addi	a14, a1, 16
400e39ce:	02de22        	addmi	a2, a14, 0x200
400e39d1:	009046        	j	400e3c16 <_vfprintf_r+0x18ce>
400e39d4:	a02182        	l32i	a8, a1, 0x280
400e39d7:	034c      	movi.n	a3, 64
400e39d9:	103830        	and	a3, a8, a3
400e39dc:	0d0316        	beqz	a3, 400e3ab0 <_vfprintf_r+0x1768>
400e39df:	972182        	l32i	a8, a1, 0x25c
400e39e2:	64bc      	beqz.n	a4, 400e3a1c <_vfprintf_r+0x16d4>
400e39e4:	0ca287        	bge	a2, a8, 400e39f4 <_vfprintf_r+0x16ac>
400e39e7:	10c192        	addi	a9, a1, 16
400e39ea:	b02290        	addx8	a2, a2, a9
400e39ed:	001252        	l16ui	a5, a2, 0
400e39f0:	0008c6        	j	400e3a17 <_vfprintf_r+0x16cf>
400e39f3:	c1a200        	mul16u	a10, a2, a0
400e39f6:	a23210        	muluh	a3, a2, a1
400e39f9:	3a48      	l32i.n	a4, a10, 12
400e39fb:	d23a      	add.n	a13, a2, a3
400e39fd:	c24ca2        	s8i	a10, a12, 194
400e3a00:	f260a2        	s32i	a10, a0, 0x3c8
400e3a03:	01da      	add.n	a0, a1, a13
400e3a05:	0aed      	mov.n	a14, a10
400e3a07:	dada      	add.n	a13, a10, a13
400e3a09:	caca      	add.n	a12, a10, a12
400e3a0b:	05bd      	mov.n	a11, a5
400e3a0d:	0139      	s32i.n	a3, a1, 0
400e3a0f:	02ad      	mov.n	a10, a2
400e3a11:	fe4b65        	call8	400e1ec8 <get_arg$isra$0>
400e3a14:	001a52        	l16ui	a5, a10, 0
400e3a17:	063d      	mov.n	a3, a6
400e3a19:	008946        	j	400e3c42 <_vfprintf_r+0x18fa>
400e3a1c:	671b      	addi.n	a6, a7, 1
400e3a1e:	0ea787        	bge	a7, a8, 400e3a30 <_vfprintf_r+0x16e8>
400e3a21:	10c1e2        	addi	a14, a1, 16
400e3a24:	b022e0        	addx8	a2, a2, a14
400e3a27:	001252        	l16ui	a5, a2, 0
400e3a2a:	043d      	mov.n	a3, a4
400e3a2c:	001e46        	j	400e3aa9 <_vfprintf_r+0x1761>
400e3a2f:	f21c00        	rems	a1, a12, a0
400e3a32:	422287        	blt	a2, a8, 400e3a78 <_vfprintf_r+0x1730>
400e3a35:	281b      	addi.n	a2, a8, 1
400e3a37:	10c132        	addi	a3, a1, 16
400e3a3a:	976122        	s32i	a2, a1, 0x25c
400e3a3d:	02d322        	addmi	a2, a3, 0x200
400e3a40:	1a2232        	l32i	a3, a2, 104
400e3a43:	841c      	movi.n	a4, 24
400e3a45:	534b      	addi.n	a5, a3, 4
400e3a47:	1a6252        	s32i	a5, a2, 104
400e3a4a:	062457        	blt	a4, a5, 400e3a54 <_vfprintf_r+0x170c>
400e3a4d:	192222        	l32i	a2, a2, 100
400e3a50:	0002c6        	j	400e3a5f <_vfprintf_r+0x1717>
400e3a53:	243700        	extui	a3, a0, 7, 3
400e3a56:	432c04        	lsi	f0, a12, 0x10c
400e3a59:	1a6232        	s32i	a3, a2, 104
400e3a5c:	9c2122        	l32i	a2, a1, 0x270
400e3a5f:	9e2132        	l32i	a3, a1, 0x278
400e3a62:	10c142        	addi	a4, a1, 16
400e3a65:	323a      	add.n	a3, a2, a3
400e3a67:	fcc332        	addi	a3, a3, -4
400e3a6a:	0358      	l32i.n	a5, a3, 0
400e3a6c:	b02840        	addx8	a2, a8, a4
400e3a6f:	0259      	s32i.n	a5, a2, 0
400e3a71:	f45050        	extui	a5, a5, 0, 16
400e3a74:	000bc6        	j	400e3aa7 <_vfprintf_r+0x175f>
400e3a77:	c15200        	mul16u	a5, a2, a0
400e3a7a:	d52210        	extui	a2, a1, 18, 14
400e3a7d:	223202        	lsi	f0, a2, 136
400e3a80:	1c1a      	add.n	a1, a12, a1
400e3a82:	534b84        	lsi	f8, a11, 0x14c
400e3a85:	1a6252        	s32i	a5, a2, 104
400e3a88:	052457        	blt	a4, a5, 400e3a91 <_vfprintf_r+0x1749>
400e3a8b:	192232        	l32i	a3, a2, 100
400e3a8e:	000286        	j	400e3a9c <_vfprintf_r+0x1754>
400e3a91:	042437        	blt	a4, a3, 400e3a99 <_vfprintf_r+0x1751>
400e3a94:	432c      	movi.n	a3, 36
400e3a96:	1a6232        	s32i	a3, a2, 104
400e3a99:	9c2132        	l32i	a3, a1, 0x270
400e3a9c:	9e2122        	l32i	a2, a1, 0x278
400e3a9f:	232a      	add.n	a2, a3, a2
400e3aa1:	fcc222        	addi	a2, a2, -4
400e3aa4:	001252        	l16ui	a5, a2, 0
400e3aa7:	030c      	movi.n	a3, 0
400e3aa9:	067d      	mov.n	a7, a6
400e3aab:	0064c6        	j	400e3c42 <_vfprintf_r+0x18fa>
400e3aae:	820000        	mull	a0, a0, a0
400e3ab1:	62a021        	l32r	a2, 400bc534 <_iram_end+0x2e9e0>
400e3ab4:	979721        	l32r	a2, 400c9910 <_rtc_text_end+0x9910>
400e3ab7:	02e8      	l32i.n	a14, a2, 0
400e3ab9:	003246        	j	400e3b86 <_vfprintf_r+0x183e>
400e3abc:	44bc      	beqz.n	a4, 400e3af4 <_vfprintf_r+0x17ac>
400e3abe:	0ba267        	bge	a2, a6, 400e3acd <_vfprintf_r+0x1785>
400e3ac1:	10c192        	addi	a9, a1, 16
400e3ac4:	b02290        	addx8	a2, a2, a9
400e3ac7:	000252        	l8ui	a5, a2, 0
400e3aca:	005d06        	j	400e3c42 <_vfprintf_r+0x18fa>
400e3acd:	10c1a2        	addi	a10, a1, 16
400e3ad0:	48a242        	movi	a4, 0x248
400e3ad3:	4a4a      	add.n	a4, a10, a4
400e3ad5:	4ca2d2        	movi	a13, 0x24c
400e3ad8:	60a2c2        	movi	a12, 0x260
400e3adb:	01daf2        	addmi	a15, a10, 0x100
400e3ade:	0aed      	mov.n	a14, a10
400e3ae0:	dada      	add.n	a13, a10, a13
400e3ae2:	caca      	add.n	a12, a10, a12
400e3ae4:	05bd      	mov.n	a11, a5
400e3ae6:	0149      	s32i.n	a4, a1, 0
400e3ae8:	02ad      	mov.n	a10, a2
400e3aea:	fe3de5        	call8	400e1ec8 <get_arg$isra$0>
400e3aed:	000a52        	l8ui	a5, a10, 0
400e3af0:	005386        	j	400e3c42 <_vfprintf_r+0x18fa>
400e3af3:	871b00        	lsi	f0, a11, 0x21c
400e3af6:	0da767        	bge	a7, a6, 400e3b07 <_vfprintf_r+0x17bf>
400e3af9:	10c1e2        	addi	a14, a1, 16
400e3afc:	b022e0        	addx8	a2, a2, a14
400e3aff:	000252        	l8ui	a5, a2, 0
400e3b02:	043d      	mov.n	a3, a4
400e3b04:	001e46        	j	400e3b81 <_vfprintf_r+0x1839>
400e3b07:	f21c      	movi.n	a2, 31
400e3b09:	432267        	blt	a2, a6, 400e3b50 <_vfprintf_r+0x1808>
400e3b0c:	261b      	addi.n	a2, a6, 1
400e3b0e:	10c132        	addi	a3, a1, 16
400e3b11:	976122        	s32i	a2, a1, 0x25c
400e3b14:	02d322        	addmi	a2, a3, 0x200
400e3b17:	1a2232        	l32i	a3, a2, 104
400e3b1a:	841c      	movi.n	a4, 24
400e3b1c:	534b      	addi.n	a5, a3, 4
400e3b1e:	1a6252        	s32i	a5, a2, 104
400e3b21:	072457        	blt	a4, a5, 400e3b2c <_vfprintf_r+0x17e4>
400e3b24:	192232        	l32i	a3, a2, 100
400e3b27:	000306        	j	400e3b37 <_vfprintf_r+0x17ef>
400e3b2a:	370000        	lsi	f0, a0, 220
400e3b2d:	2c0424        	lsi	f2, a4, 176
400e3b30:	623243        	lsi	f4, a2, 0x188
400e3b33:	321a      	add.n	a3, a2, a1
400e3b35:	229c21        	l32r	a2, 400ac5a8 <_iram_end+0x1ea54>
400e3b38:	429e21        	l32r	a2, 400b45b0 <_iram_end+0x26a5c>
400e3b3b:	2a10c1        	l32r	a12, 400ae37c <_iram_end+0x20828>
400e3b3e:	c22223        	lsi	f2, a2, 0x308
400e3b41:	58fc      	bnez.n	a8, 400e3b7a <_vfprintf_r+0x1832>
400e3b43:	264002        	s8i	a0, a0, 38
400e3b46:	0259b0        	andb	b5, b9, b11
400e3b49:	745050        	extui	a5, a5, 0, 8
400e3b4c:	000bc6        	j	400e3b7f <_vfprintf_r+0x1837>
400e3b4f:	c15200        	mul16u	a5, a2, a0
400e3b52:	d52210        	extui	a2, a1, 18, 14
400e3b55:	223202        	lsi	f0, a2, 136
400e3b58:	1c1a      	add.n	a1, a12, a1
400e3b5a:	534b84        	lsi	f8, a11, 0x14c
400e3b5d:	1a6252        	s32i	a5, a2, 104
400e3b60:	052457        	blt	a4, a5, 400e3b69 <_vfprintf_r+0x1821>
400e3b63:	192232        	l32i	a3, a2, 100
400e3b66:	000286        	j	400e3b74 <_vfprintf_r+0x182c>
400e3b69:	042437        	blt	a4, a3, 400e3b71 <_vfprintf_r+0x1829>
400e3b6c:	432c      	movi.n	a3, 36
400e3b6e:	1a6232        	s32i	a3, a2, 104
400e3b71:	9c2132        	l32i	a3, a1, 0x270
400e3b74:	9e2122        	l32i	a2, a1, 0x278
400e3b77:	232a      	add.n	a2, a3, a2
400e3b79:	fcc222        	addi	a2, a2, -4
400e3b7c:	000252        	l8ui	a5, a2, 0
400e3b7f:	030c      	movi.n	a3, 0
400e3b81:	087d      	mov.n	a7, a8
400e3b83:	002ec6        	j	400e3c42 <_vfprintf_r+0x18fa>
400e3b86:	64bc      	beqz.n	a4, 400e3bc0 <_vfprintf_r+0x1878>
400e3b88:	0ca267        	bge	a2, a6, 400e3b98 <_vfprintf_r+0x1850>
400e3b8b:	10c162        	addi	a6, a1, 16
400e3b8e:	b02260        	addx8	a2, a2, a6
400e3b91:	0258      	l32i.n	a5, a2, 0
400e3b93:	0008c6        	j	400e3bba <_vfprintf_r+0x1872>
400e3b96:	820000        	mull	a0, a0, a0
400e3b99:	3210c1        	l32r	a12, 400b03dc <_iram_end+0x22888>
400e3b9c:	3a48a2        	s8i	a10, a8, 58
400e3b9f:	3938      	l32i.n	a3, a9, 12
400e3ba1:	d8f201        	l32r	a0, 400d9f6c <uart_fcntl+0x7c>
400e3ba4:	08ed01        	l32r	a0, 400a5f58 <_iram_end+0x18404>
400e3ba7:	4ca2d2        	movi	a13, 0x24c
400e3baa:	60a2c2        	movi	a12, 0x260
400e3bad:	05bd      	mov.n	a11, a5
400e3baf:	deda      	add.n	a13, a14, a13
400e3bb1:	ceca      	add.n	a12, a14, a12
400e3bb3:	02ad      	mov.n	a10, a2
400e3bb5:	fe3125        	call8	400e1ec8 <get_arg$isra$0>
400e3bb8:	0a58      	l32i.n	a5, a10, 0
400e3bba:	074d      	mov.n	a4, a7
400e3bbc:	001f86        	j	400e3c3e <_vfprintf_r+0x18f6>
400e3bbf:	c19200        	mul16u	a9, a2, a0
400e3bc2:	471b10        	lsi	f1, a11, 0x11c
400e3bc5:	b02290        	addx8	a2, a2, a9
400e3bc8:	702767        	blt	a7, a6, 400e3c3c <_vfprintf_r+0x18f4>
400e3bcb:	f21c      	movi.n	a2, 31
400e3bcd:	3f2267        	blt	a2, a6, 400e3c10 <_vfprintf_r+0x18c8>
400e3bd0:	261b      	addi.n	a2, a6, 1
400e3bd2:	10c1a2        	addi	a10, a1, 16
400e3bd5:	976122        	s32i	a2, a1, 0x25c
400e3bd8:	02da22        	addmi	a2, a10, 0x200
400e3bdb:	1a2232        	l32i	a3, a2, 104
400e3bde:	851c      	movi.n	a5, 24
400e3be0:	734b      	addi.n	a7, a3, 4
400e3be2:	1a6272        	s32i	a7, a2, 104
400e3be5:	072577        	blt	a5, a7, 400e3bf0 <_vfprintf_r+0x18a8>
400e3be8:	192232        	l32i	a3, a2, 100
400e3beb:	000306        	j	400e3bfb <_vfprintf_r+0x18b3>
400e3bee:	370000        	lsi	f0, a0, 220
400e3bf1:	2c0425        	call8	4010fc34 <_etext+0x23357>
400e3bf4:	623243        	lsi	f4, a2, 0x188
400e3bf7:	321a      	add.n	a3, a2, a1
400e3bf9:	229c21        	l32r	a2, 400ac66c <_iram_end+0x1eb18>
400e3bfc:	e29e21        	l32r	a2, 400dc674 <get_arg$isra$0+0x3d0>
400e3bff:	2a10c1        	l32r	a12, 400ae440 <_iram_end+0x208ec>
400e3c02:	c22223        	lsi	f2, a2, 0x308
400e3c05:	58fc      	bnez.n	a8, 400e3c3e <_vfprintf_r+0x18f6>
400e3c07:	26e002        	s32c1i	a0, a0, 152
400e3c0a:	0259b0        	andb	b5, b9, b11
400e3c0d:	000b46        	j	400e3c3e <_vfprintf_r+0x18f6>
400e3c10:	10c132        	addi	a3, a1, 16
400e3c13:	02d322        	addmi	a2, a3, 0x200
400e3c16:	1a2232        	l32i	a3, a2, 104
400e3c19:	851c      	movi.n	a5, 24
400e3c1b:	634b      	addi.n	a6, a3, 4
400e3c1d:	1a6262        	s32i	a6, a2, 104
400e3c20:	052567        	blt	a5, a6, 400e3c29 <_vfprintf_r+0x18e1>
400e3c23:	192232        	l32i	a3, a2, 100
400e3c26:	000286        	j	400e3c34 <_vfprintf_r+0x18ec>
400e3c29:	042537        	blt	a5, a3, 400e3c31 <_vfprintf_r+0x18e9>
400e3c2c:	432c      	movi.n	a3, 36
400e3c2e:	1a6232        	s32i	a3, a2, 104
400e3c31:	9c2132        	l32i	a3, a1, 0x270
400e3c34:	9e2122        	l32i	a2, a1, 0x278
400e3c37:	232a      	add.n	a2, a3, a2
400e3c39:	fcc222        	addi	a2, a2, -4
400e3c3c:	0258      	l32i.n	a5, a2, 0
400e3c3e:	030c      	movi.n	a3, 0
400e3c40:	047d      	mov.n	a7, a4
400e3c42:	a02142        	l32i	a4, a1, 0x280
400e3c45:	ffab22        	movi	a2, 0xfffffbff
400e3c48:	104420        	and	a4, a4, a2
400e3c4b:	a06142        	s32i	a4, a1, 0x280
400e3c4e:	020c      	movi.n	a2, 0
400e3c50:	027b06        	j	400e4640 <_vfprintf_r+0x22f8>
400e3c53:	972162        	l32i	a6, a1, 0x25c
400e3c56:	34bc      	beqz.n	a4, 400e3c8d <_vfprintf_r+0x1945>
400e3c58:	0aa267        	bge	a2, a6, 400e3c66 <_vfprintf_r+0x191e>
400e3c5b:	10c152        	addi	a5, a1, 16
400e3c5e:	b02250        	addx8	a2, a2, a5
400e3c61:	0258      	l32i.n	a5, a2, 0
400e3c63:	000846        	j	400e3c88 <_vfprintf_r+0x1940>
400e3c66:	10c162        	addi	a6, a1, 16
400e3c69:	48a232        	movi	a3, 0x248
400e3c6c:	363a      	add.n	a3, a6, a3
400e3c6e:	4ca2d2        	movi	a13, 0x24c
400e3c71:	60a2c2        	movi	a12, 0x260
400e3c74:	05bd      	mov.n	a11, a5
400e3c76:	0139      	s32i.n	a3, a1, 0
400e3c78:	01d6f2        	addmi	a15, a6, 0x100
400e3c7b:	06ed      	mov.n	a14, a6
400e3c7d:	d6da      	add.n	a13, a6, a13
400e3c7f:	c6ca      	add.n	a12, a6, a12
400e3c81:	02ad      	mov.n	a10, a2
400e3c83:	fe2465        	call8	400e1ec8 <get_arg$isra$0>
400e3c86:	0a58      	l32i.n	a5, a10, 0
400e3c88:	074d      	mov.n	a4, a7
400e3c8a:	001f06        	j	400e3d0a <_vfprintf_r+0x19c2>
400e3c8d:	10c182        	addi	a8, a1, 16
400e3c90:	471b      	addi.n	a4, a7, 1
400e3c92:	b02280        	addx8	a2, a2, a8
400e3c95:	6f2767        	blt	a7, a6, 400e3d08 <_vfprintf_r+0x19c0>
400e3c98:	f21c      	movi.n	a2, 31
400e3c9a:	3e2267        	blt	a2, a6, 400e3cdc <_vfprintf_r+0x1994>
400e3c9d:	261b      	addi.n	a2, a6, 1
400e3c9f:	10c192        	addi	a9, a1, 16
400e3ca2:	976122        	s32i	a2, a1, 0x25c
400e3ca5:	02d922        	addmi	a2, a9, 0x200
400e3ca8:	1a2232        	l32i	a3, a2, 104
400e3cab:	851c      	movi.n	a5, 24
400e3cad:	734b      	addi.n	a7, a3, 4
400e3caf:	1a6272        	s32i	a7, a2, 104
400e3cb2:	062577        	blt	a5, a7, 400e3cbc <_vfprintf_r+0x1974>
400e3cb5:	192222        	l32i	a2, a2, 100
400e3cb8:	0002c6        	j	400e3cc7 <_vfprintf_r+0x197f>
400e3cbb:	253700        	extui	a3, a0, 23, 3
400e3cbe:	432c04        	lsi	f0, a12, 0x10c
400e3cc1:	1a6232        	s32i	a3, a2, 104
400e3cc4:	9c2122        	l32i	a2, a1, 0x270
400e3cc7:	9e2132        	l32i	a3, a1, 0x278
400e3cca:	10c1a2        	addi	a10, a1, 16
400e3ccd:	323a      	add.n	a3, a2, a3
400e3ccf:	fcc332        	addi	a3, a3, -4
400e3cd2:	0358      	l32i.n	a5, a3, 0
400e3cd4:	b026a0        	addx8	a2, a6, a10
400e3cd7:	0259      	s32i.n	a5, a2, 0
400e3cd9:	000b46        	j	400e3d0a <_vfprintf_r+0x19c2>
400e3cdc:	10c1e2        	addi	a14, a1, 16
400e3cdf:	02de22        	addmi	a2, a14, 0x200
400e3ce2:	1a2232        	l32i	a3, a2, 104
400e3ce5:	851c      	movi.n	a5, 24
400e3ce7:	634b      	addi.n	a6, a3, 4
400e3ce9:	1a6262        	s32i	a6, a2, 104
400e3cec:	052567        	blt	a5, a6, 400e3cf5 <_vfprintf_r+0x19ad>
400e3cef:	192232        	l32i	a3, a2, 100
400e3cf2:	000286        	j	400e3d00 <_vfprintf_r+0x19b8>
400e3cf5:	042537        	blt	a5, a3, 400e3cfd <_vfprintf_r+0x19b5>
400e3cf8:	432c      	movi.n	a3, 36
400e3cfa:	1a6232        	s32i	a3, a2, 104
400e3cfd:	9c2132        	l32i	a3, a1, 0x270
400e3d00:	9e2122        	l32i	a2, a1, 0x278
400e3d03:	232a      	add.n	a2, a3, a2
400e3d05:	fcc222        	addi	a2, a2, -4
400e3d08:	0258      	l32i.n	a5, a2, 0
400e3d0a:	a02162        	l32i	a6, a1, 0x280
400e3d0d:	220c      	movi.n	a2, 2
400e3d0f:	206620        	or	a6, a6, a2
400e3d12:	10c182        	addi	a8, a1, 16
400e3d15:	073c      	movi.n	a7, 48
400e3d17:	a06162        	s32i	a6, a1, 0x280
400e3d1a:	02d862        	addmi	a6, a8, 0x200
400e3d1d:	504672        	s8i	a7, a6, 80
400e3d20:	b2b891        	l32r	a9, 400d0800 <_flash_cache_start+0x7e8>
400e3d23:	78a072        	movi	a7, 120
400e3d26:	514672        	s8i	a7, a6, 81
400e3d29:	047d      	mov.n	a7, a4
400e3d2b:	78a042        	movi	a4, 120
400e3d2e:	030c      	movi.n	a3, 0
400e3d30:	b56192        	s32i	a9, a1, 0x2d4
400e3d33:	a66142        	s32i	a4, a1, 0x298
400e3d36:	024186        	j	400e4640 <_vfprintf_r+0x22f8>
400e3d39:	216200        	srai	a6, a0, 2
400e3d3c:	74bc97        	bgeu	a12, a9, 400e3db4 <_vfprintf_r+0x1a6c>
400e3d3f:	0da267        	bge	a2, a6, 400e3d50 <_vfprintf_r+0x1a08>
400e3d42:	10c152        	addi	a5, a1, 16
400e3d45:	b02250        	addx8	a2, a2, a5
400e3d48:	0228      	l32i.n	a2, a2, 0
400e3d4a:	a16122        	s32i	a2, a1, 0x284
400e3d4d:	002b86        	j	400e3dff <_vfprintf_r+0x1ab7>
400e3d50:	10c162        	addi	a6, a1, 16
400e3d53:	48a232        	movi	a3, 0x248
400e3d56:	363a      	add.n	a3, a6, a3
400e3d58:	4ca2d2        	movi	a13, 0x24c
400e3d5b:	60a2c2        	movi	a12, 0x260
400e3d5e:	0139      	s32i.n	a3, a1, 0
400e3d60:	01d6f2        	addmi	a15, a6, 0x100
400e3d63:	06ed      	mov.n	a14, a6
400e3d65:	d6da      	add.n	a13, a6, a13
400e3d67:	c6ca      	add.n	a12, a6, a12
400e3d69:	05bd      	mov.n	a11, a5
400e3d6b:	02ad      	mov.n	a10, a2
400e3d6d:	fe15a5        	call8	400e1ec8 <get_arg$isra$0>
400e3d70:	0aa8      	l32i.n	a10, a10, 0
400e3d72:	a161a2        	s32i	a10, a1, 0x284
400e3d75:	002186        	j	400e3dff <_vfprintf_r+0x1ab7>
400e3d78:	10c182        	addi	a8, a1, 16
400e3d7b:	471b      	addi.n	a4, a7, 1
400e3d7d:	b02280        	addx8	a2, a2, a8
400e3d80:	742767        	blt	a7, a6, 400e3df8 <_vfprintf_r+0x1ab0>
400e3d83:	f21c      	movi.n	a2, 31
400e3d85:	432267        	blt	a2, a6, 400e3dcc <_vfprintf_r+0x1a84>
400e3d88:	261b      	addi.n	a2, a6, 1
400e3d8a:	10c192        	addi	a9, a1, 16
400e3d8d:	976122        	s32i	a2, a1, 0x25c
400e3d90:	02d922        	addmi	a2, a9, 0x200
400e3d93:	1a2232        	l32i	a3, a2, 104
400e3d96:	851c      	movi.n	a5, 24
400e3d98:	734b      	addi.n	a7, a3, 4
400e3d9a:	1a6272        	s32i	a7, a2, 104
400e3d9d:	072577        	blt	a5, a7, 400e3da8 <_vfprintf_r+0x1a60>
400e3da0:	192222        	l32i	a2, a2, 100
400e3da3:	000306        	j	400e3db3 <_vfprintf_r+0x1a6b>
400e3da6:	370000        	lsi	f0, a0, 220
400e3da9:	2c0425        	call8	4010fdec <_etext+0x2350f>
400e3dac:	623243        	lsi	f4, a2, 0x188
400e3daf:	221a      	add.n	a2, a2, a1
400e3db1:	329c21        	l32r	a2, 400b0824 <_iram_end+0x22cd0>
400e3db4:	a29e21        	l32r	a2, 400cc82c <_rtc_text_end+0xc82c>
400e3db7:	3a10c1        	l32r	a12, 400b25f8 <_iram_end+0x24aa4>
400e3dba:	c33232        	lsi	f3, a2, 0x30c
400e3dbd:	38fc      	bnez.n	a8, 400e3df4 <_vfprintf_r+0x1aac>
400e3dbf:	26a003        	lsi	f0, a0, 152
400e3dc2:	6132b0        	lsi	f11, a2, 0x184
400e3dc5:	0239a1        	l32r	a10, 400a46ac <_iram_end+0x16b58>
400e3dc8:	000c46        	j	400e3dfd <_vfprintf_r+0x1ab5>
400e3dcb:	c1e200        	mul16u	a14, a2, a0
400e3dce:	de2210        	f64iter	a2, a2, a1, 1, 1
400e3dd1:	223202        	lsi	f0, a2, 136
400e3dd4:	1c1a      	add.n	a1, a12, a1
400e3dd6:	634b85        	call0	40147290 <_etext+0x5a9b3>
400e3dd9:	1a6262        	s32i	a6, a2, 104
400e3ddc:	052567        	blt	a5, a6, 400e3de5 <_vfprintf_r+0x1a9d>
400e3ddf:	192232        	l32i	a3, a2, 100
400e3de2:	000286        	j	400e3df0 <_vfprintf_r+0x1aa8>
400e3de5:	042537        	blt	a5, a3, 400e3ded <_vfprintf_r+0x1aa5>
400e3de8:	432c      	movi.n	a3, 36
400e3dea:	1a6232        	s32i	a3, a2, 104
400e3ded:	9c2132        	l32i	a3, a1, 0x270
400e3df0:	9e2122        	l32i	a2, a1, 0x278
400e3df3:	232a      	add.n	a2, a3, a2
400e3df5:	fcc222        	addi	a2, a2, -4
400e3df8:	0228      	l32i.n	a2, a2, 0
400e3dfa:	a16122        	s32i	a2, a1, 0x284
400e3dfd:	047d      	mov.n	a7, a4
400e3dff:	10c142        	addi	a4, a1, 16
400e3e02:	030c      	movi.n	a3, 0
400e3e04:	02d422        	addmi	a2, a4, 0x200
400e3e07:	a52152        	l32i	a5, a1, 0x294
400e3e0a:	524232        	s8i	a3, a2, 82
400e3e0d:	024596        	bltz	a5, 400e3e35 <_vfprintf_r+0x1aed>
400e3e10:	a121a2        	l32i	a10, a1, 0x284
400e3e13:	05cd      	mov.n	a12, a5
400e3e15:	0b0c      	movi.n	a11, 0
400e3e17:	b26581        	l32r	a8, 400d07ac <_flash_cache_start+0x794>
400e3e1a:	0008e0        	callx8	a8
400e3e1d:	1acc      	bnez.n	a10, 400e3e22 <_vfprintf_r+0x1ada>
400e3e1f:	029186        	j	400e4869 <_vfprintf_r+0x2521>
400e3e22:	a12182        	l32i	a8, a1, 0x284
400e3e25:	090c      	movi.n	a9, 0
400e3e27:	c0aa80        	sub	a10, a10, a8
400e3e2a:	a561a2        	s32i	a10, a1, 0x294
400e3e2d:	a46192        	s32i	a9, a1, 0x290
400e3e30:	096d      	mov.n	a6, a9
400e3e32:	028e06        	j	400e486e <_vfprintf_r+0x2526>
400e3e35:	a121a2        	l32i	a10, a1, 0x284
400e3e38:	020c      	movi.n	a2, 0
400e3e3a:	b09381        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e3e3d:	0008e0        	callx8	a8
400e3e40:	a561a2        	s32i	a10, a1, 0x294
400e3e43:	a46122        	s32i	a2, a1, 0x290
400e3e46:	026d      	mov.n	a6, a2
400e3e48:	023d      	mov.n	a3, a2
400e3e4a:	025d      	mov.n	a5, a2
400e3e4c:	028906        	j	400e4874 <_vfprintf_r+0x252c>
400e3e4f:	a02162        	l32i	a6, a1, 0x280
400e3e52:	031c      	movi.n	a3, 16
400e3e54:	206630        	or	a6, a6, a3
400e3e57:	a06162        	s32i	a6, a1, 0x280
400e3e5a:	a02182        	l32i	a8, a1, 0x280
400e3e5d:	02e857        	bbsi	a8, 5, 400e3e63 <_vfprintf_r+0x1b1b>
400e3e60:	003506        	j	400e3f38 <_vfprintf_r+0x1bf0>
400e3e63:	972162        	l32i	a6, a1, 0x25c
400e3e66:	64bc      	beqz.n	a4, 400e3ea0 <_vfprintf_r+0x1b58>
400e3e68:	0ca267        	bge	a2, a6, 400e3e78 <_vfprintf_r+0x1b30>
400e3e6b:	10c192        	addi	a9, a1, 16
400e3e6e:	b02290        	addx8	a2, a2, a9
400e3e71:	0258      	l32i.n	a5, a2, 0
400e3e73:	1238      	l32i.n	a3, a2, 4
400e3e75:	00ed46        	j	400e422e <_vfprintf_r+0x1ee6>
400e3e78:	10c1a2        	addi	a10, a1, 16
400e3e7b:	48a232        	movi	a3, 0x248
400e3e7e:	3a3a      	add.n	a3, a10, a3
400e3e80:	4ca2d2        	movi	a13, 0x24c
400e3e83:	60a2c2        	movi	a12, 0x260
400e3e86:	0139      	s32i.n	a3, a1, 0
400e3e88:	01daf2        	addmi	a15, a10, 0x100
400e3e8b:	0aed      	mov.n	a14, a10
400e3e8d:	dada      	add.n	a13, a10, a13
400e3e8f:	caca      	add.n	a12, a10, a12
400e3e91:	05bd      	mov.n	a11, a5
400e3e93:	02ad      	mov.n	a10, a2
400e3e95:	fe0325        	call8	400e1ec8 <get_arg$isra$0>
400e3e98:	0a58      	l32i.n	a5, a10, 0
400e3e9a:	1a38      	l32i.n	a3, a10, 4
400e3e9c:	00e386        	j	400e422e <_vfprintf_r+0x1ee6>
400e3e9f:	c1e200        	mul16u	a14, a2, a0
400e3ea2:	471b10        	lsi	f1, a11, 0x11c
400e3ea5:	b022e0        	addx8	a2, a2, a14
400e3ea8:	02a767        	bge	a7, a6, 400e3eae <_vfprintf_r+0x1b66>
400e3eab:	002046        	j	400e3f30 <_vfprintf_r+0x1be8>
400e3eae:	f21c      	movi.n	a2, 31
400e3eb0:	482267        	blt	a2, a6, 400e3efc <_vfprintf_r+0x1bb4>
400e3eb3:	261b      	addi.n	a2, a6, 1
400e3eb5:	10c132        	addi	a3, a1, 16
400e3eb8:	976122        	s32i	a2, a1, 0x25c
400e3ebb:	02d322        	addmi	a2, a3, 0x200
400e3ebe:	1a2232        	l32i	a3, a2, 104
400e3ec1:	537b      	addi.n	a5, a3, 7
400e3ec3:	837c      	movi.n	a3, -8
400e3ec5:	103530        	and	a3, a5, a3
400e3ec8:	738b      	addi.n	a7, a3, 8
400e3eca:	1a6272        	s32i	a7, a2, 104
400e3ecd:	851c      	movi.n	a5, 24
400e3ecf:	052577        	blt	a5, a7, 400e3ed8 <_vfprintf_r+0x1b90>
400e3ed2:	192232        	l32i	a3, a2, 100
400e3ed5:	000286        	j	400e3ee3 <_vfprintf_r+0x1b9b>
400e3ed8:	042537        	blt	a5, a3, 400e3ee0 <_vfprintf_r+0x1b98>
400e3edb:	832c      	movi.n	a3, 40
400e3edd:	1a6232        	s32i	a3, a2, 104
400e3ee0:	9c2132        	l32i	a3, a1, 0x270
400e3ee3:	9e2122        	l32i	a2, a1, 0x278
400e3ee6:	10c182        	addi	a8, a1, 16
400e3ee9:	232a      	add.n	a2, a3, a2
400e3eeb:	f8c222        	addi	a2, a2, -8
400e3eee:	0258      	l32i.n	a5, a2, 0
400e3ef0:	1238      	l32i.n	a3, a2, 4
400e3ef2:	b02680        	addx8	a2, a6, a8
400e3ef5:	0259      	s32i.n	a5, a2, 0
400e3ef7:	1239      	s32i.n	a3, a2, 4
400e3ef9:	00cbc6        	j	400e422c <_vfprintf_r+0x1ee4>
400e3efc:	10c192        	addi	a9, a1, 16
400e3eff:	02d922        	addmi	a2, a9, 0x200
400e3f02:	1a2232        	l32i	a3, a2, 104
400e3f05:	537b      	addi.n	a5, a3, 7
400e3f07:	837c      	movi.n	a3, -8
400e3f09:	103530        	and	a3, a5, a3
400e3f0c:	638b      	addi.n	a6, a3, 8
400e3f0e:	1a6262        	s32i	a6, a2, 104
400e3f11:	851c      	movi.n	a5, 24
400e3f13:	062567        	blt	a5, a6, 400e3f1d <_vfprintf_r+0x1bd5>
400e3f16:	192232        	l32i	a3, a2, 100
400e3f19:	0002c6        	j	400e3f28 <_vfprintf_r+0x1be0>
400e3f1c:	253700        	extui	a3, a0, 23, 3
400e3f1f:	832c04        	lsi	f0, a12, 0x20c
400e3f22:	1a6232        	s32i	a3, a2, 104
400e3f25:	9c2132        	l32i	a3, a1, 0x270
400e3f28:	9e2122        	l32i	a2, a1, 0x278
400e3f2b:	232a      	add.n	a2, a3, a2
400e3f2d:	f8c222        	addi	a2, a2, -8
400e3f30:	0258      	l32i.n	a5, a2, 0
400e3f32:	1238      	l32i.n	a3, a2, 4
400e3f34:	00bd06        	j	400e422c <_vfprintf_r+0x1ee4>
400e3f37:	218200        	srai	a8, a0, 2
400e3f3a:	031ca0        	lsi	f10, a12, 12
400e3f3d:	106830        	and	a6, a8, a3
400e3f40:	07c616        	beqz	a6, 400e3fc0 <_vfprintf_r+0x1c78>
400e3f43:	972162        	l32i	a6, a1, 0x25c
400e3f46:	e49c      	beqz.n	a4, 400e3f68 <_vfprintf_r+0x1c20>
400e3f48:	08a267        	bge	a2, a6, 400e3f54 <_vfprintf_r+0x1c0c>
400e3f4b:	913a      	add.n	a9, a1, a3
400e3f4d:	b02290        	addx8	a2, a2, a9
400e3f50:	008a46        	j	400e417d <_vfprintf_r+0x1e35>
400e3f53:	c1a200        	mul16u	a10, a2, a0
400e3f56:	a23210        	muluh	a3, a2, a1
400e3f59:	3a48      	l32i.n	a4, a10, 12
400e3f5b:	393a      	add.n	a3, a9, a3
400e3f5d:	daf201        	l32r	a0, 400dab28 <heap_caps_init+0x54>
400e3f60:	0aed01        	l32r	a0, 400a6b14 <_iram_end+0x18fc0>
400e3f63:	008b06        	j	400e4193 <_vfprintf_r+0x1e4b>
400e3f66:	e20000        	remu	a0, a0, a0
400e3f69:	1b10c1        	l32r	a12, 400aabac <_iram_end+0x1d058>
400e3f6c:	22e047        	bbsi	a0, 4, 400e3f92 <_vfprintf_r+0x1c4a>
400e3f6f:	a767b0        	lsi	f11, a7, 0x29c
400e3f72:	ac4602        	s8i	a0, a6, 172
400e3f75:	f21c00        	rems	a1, a12, a0
400e3f78:	3b2267        	blt	a2, a6, 400e3fb7 <_vfprintf_r+0x1c6f>
400e3f7b:	261b      	addi.n	a2, a6, 1
400e3f7d:	10c132        	addi	a3, a1, 16
400e3f80:	976122        	s32i	a2, a1, 0x25c
400e3f83:	02d322        	addmi	a2, a3, 0x200
400e3f86:	1a2232        	l32i	a3, a2, 104
400e3f89:	851c      	movi.n	a5, 24
400e3f8b:	734b      	addi.n	a7, a3, 4
400e3f8d:	1a6272        	s32i	a7, a2, 104
400e3f90:	052577        	blt	a5, a7, 400e3f99 <_vfprintf_r+0x1c51>
400e3f93:	192222        	l32i	a2, a2, 100
400e3f96:	000286        	j	400e3fa4 <_vfprintf_r+0x1c5c>
400e3f99:	042537        	blt	a5, a3, 400e3fa1 <_vfprintf_r+0x1c59>
400e3f9c:	432c      	movi.n	a3, 36
400e3f9e:	1a6232        	s32i	a3, a2, 104
400e3fa1:	9c2122        	l32i	a2, a1, 0x270
400e3fa4:	9e2132        	l32i	a3, a1, 0x278
400e3fa7:	10c182        	addi	a8, a1, 16
400e3faa:	323a      	add.n	a3, a2, a3
400e3fac:	fcc332        	addi	a3, a3, -4
400e3faf:	0358      	l32i.n	a5, a3, 0
400e3fb1:	b02680        	addx8	a2, a6, a8
400e3fb4:	008fc6        	j	400e41f7 <_vfprintf_r+0x1eaf>
400e3fb7:	10c192        	addi	a9, a1, 16
400e3fba:	02d922        	addmi	a2, a9, 0x200
400e3fbd:	009046        	j	400e4202 <_vfprintf_r+0x1eba>
400e3fc0:	a02182        	l32i	a8, a1, 0x280
400e3fc3:	034c      	movi.n	a3, 64
400e3fc5:	103830        	and	a3, a8, a3
400e3fc8:	0d0316        	beqz	a3, 400e409c <_vfprintf_r+0x1d54>
400e3fcb:	972182        	l32i	a8, a1, 0x25c
400e3fce:	64bc      	beqz.n	a4, 400e4008 <_vfprintf_r+0x1cc0>
400e3fd0:	0ca287        	bge	a2, a8, 400e3fe0 <_vfprintf_r+0x1c98>
400e3fd3:	10c192        	addi	a9, a1, 16
400e3fd6:	b02290        	addx8	a2, a2, a9
400e3fd9:	001252        	l16ui	a5, a2, 0
400e3fdc:	0008c6        	j	400e4003 <_vfprintf_r+0x1cbb>
400e3fdf:	c1a200        	mul16u	a10, a2, a0
400e3fe2:	a23210        	muluh	a3, a2, a1
400e3fe5:	3a48      	l32i.n	a4, a10, 12
400e3fe7:	d23a      	add.n	a13, a2, a3
400e3fe9:	c24ca2        	s8i	a10, a12, 194
400e3fec:	f260a2        	s32i	a10, a0, 0x3c8
400e3fef:	01da      	add.n	a0, a1, a13
400e3ff1:	0aed      	mov.n	a14, a10
400e3ff3:	dada      	add.n	a13, a10, a13
400e3ff5:	caca      	add.n	a12, a10, a12
400e3ff7:	05bd      	mov.n	a11, a5
400e3ff9:	0139      	s32i.n	a3, a1, 0
400e3ffb:	02ad      	mov.n	a10, a2
400e3ffd:	fdeca5        	call8	400e1ec8 <get_arg$isra$0>
400e4000:	001a52        	l16ui	a5, a10, 0
400e4003:	063d      	mov.n	a3, a6
400e4005:	008946        	j	400e422e <_vfprintf_r+0x1ee6>
400e4008:	671b      	addi.n	a6, a7, 1
400e400a:	0ea787        	bge	a7, a8, 400e401c <_vfprintf_r+0x1cd4>
400e400d:	10c1e2        	addi	a14, a1, 16
400e4010:	b022e0        	addx8	a2, a2, a14
400e4013:	001252        	l16ui	a5, a2, 0
400e4016:	043d      	mov.n	a3, a4
400e4018:	001e46        	j	400e4095 <_vfprintf_r+0x1d4d>
400e401b:	f21c00        	rems	a1, a12, a0
400e401e:	422287        	blt	a2, a8, 400e4064 <_vfprintf_r+0x1d1c>
400e4021:	281b      	addi.n	a2, a8, 1
400e4023:	10c132        	addi	a3, a1, 16
400e4026:	976122        	s32i	a2, a1, 0x25c
400e4029:	02d322        	addmi	a2, a3, 0x200
400e402c:	1a2232        	l32i	a3, a2, 104
400e402f:	841c      	movi.n	a4, 24
400e4031:	534b      	addi.n	a5, a3, 4
400e4033:	1a6252        	s32i	a5, a2, 104
400e4036:	062457        	blt	a4, a5, 400e4040 <_vfprintf_r+0x1cf8>
400e4039:	192222        	l32i	a2, a2, 100
400e403c:	0002c6        	j	400e404b <_vfprintf_r+0x1d03>
400e403f:	243700        	extui	a3, a0, 7, 3
400e4042:	432c04        	lsi	f0, a12, 0x10c
400e4045:	1a6232        	s32i	a3, a2, 104
400e4048:	9c2122        	l32i	a2, a1, 0x270
400e404b:	9e2132        	l32i	a3, a1, 0x278
400e404e:	10c142        	addi	a4, a1, 16
400e4051:	323a      	add.n	a3, a2, a3
400e4053:	fcc332        	addi	a3, a3, -4
400e4056:	0358      	l32i.n	a5, a3, 0
400e4058:	b02840        	addx8	a2, a8, a4
400e405b:	0259      	s32i.n	a5, a2, 0
400e405d:	f45050        	extui	a5, a5, 0, 16
400e4060:	000bc6        	j	400e4093 <_vfprintf_r+0x1d4b>
400e4063:	c15200        	mul16u	a5, a2, a0
400e4066:	d52210        	extui	a2, a1, 18, 14
400e4069:	223202        	lsi	f0, a2, 136
400e406c:	1c1a      	add.n	a1, a12, a1
400e406e:	534b84        	lsi	f8, a11, 0x14c
400e4071:	1a6252        	s32i	a5, a2, 104
400e4074:	052457        	blt	a4, a5, 400e407d <_vfprintf_r+0x1d35>
400e4077:	192232        	l32i	a3, a2, 100
400e407a:	000286        	j	400e4088 <_vfprintf_r+0x1d40>
400e407d:	042437        	blt	a4, a3, 400e4085 <_vfprintf_r+0x1d3d>
400e4080:	432c      	movi.n	a3, 36
400e4082:	1a6232        	s32i	a3, a2, 104
400e4085:	9c2132        	l32i	a3, a1, 0x270
400e4088:	9e2122        	l32i	a2, a1, 0x278
400e408b:	232a      	add.n	a2, a3, a2
400e408d:	fcc222        	addi	a2, a2, -4
400e4090:	001252        	l16ui	a5, a2, 0
400e4093:	030c      	movi.n	a3, 0
400e4095:	067d      	mov.n	a7, a6
400e4097:	0064c6        	j	400e422e <_vfprintf_r+0x1ee6>
400e409a:	820000        	mull	a0, a0, a0
400e409d:	62a021        	l32r	a2, 400bcb20 <_iram_end+0x2efcc>
400e40a0:	979721        	l32r	a2, 400c9efc <_rtc_text_end+0x9efc>
400e40a3:	02e8      	l32i.n	a14, a2, 0
400e40a5:	003246        	j	400e4172 <_vfprintf_r+0x1e2a>
400e40a8:	44bc      	beqz.n	a4, 400e40e0 <_vfprintf_r+0x1d98>
400e40aa:	0ba267        	bge	a2, a6, 400e40b9 <_vfprintf_r+0x1d71>
400e40ad:	10c192        	addi	a9, a1, 16
400e40b0:	b02290        	addx8	a2, a2, a9
400e40b3:	000252        	l8ui	a5, a2, 0
400e40b6:	005d06        	j	400e422e <_vfprintf_r+0x1ee6>
400e40b9:	10c1a2        	addi	a10, a1, 16
400e40bc:	48a242        	movi	a4, 0x248
400e40bf:	4a4a      	add.n	a4, a10, a4
400e40c1:	4ca2d2        	movi	a13, 0x24c
400e40c4:	60a2c2        	movi	a12, 0x260
400e40c7:	01daf2        	addmi	a15, a10, 0x100
400e40ca:	0aed      	mov.n	a14, a10
400e40cc:	dada      	add.n	a13, a10, a13
400e40ce:	caca      	add.n	a12, a10, a12
400e40d0:	05bd      	mov.n	a11, a5
400e40d2:	0149      	s32i.n	a4, a1, 0
400e40d4:	02ad      	mov.n	a10, a2
400e40d6:	fddf25        	call8	400e1ec8 <get_arg$isra$0>
400e40d9:	000a52        	l8ui	a5, a10, 0
400e40dc:	005386        	j	400e422e <_vfprintf_r+0x1ee6>
400e40df:	871b00        	lsi	f0, a11, 0x21c
400e40e2:	0da767        	bge	a7, a6, 400e40f3 <_vfprintf_r+0x1dab>
400e40e5:	10c1e2        	addi	a14, a1, 16
400e40e8:	b022e0        	addx8	a2, a2, a14
400e40eb:	000252        	l8ui	a5, a2, 0
400e40ee:	043d      	mov.n	a3, a4
400e40f0:	001e46        	j	400e416d <_vfprintf_r+0x1e25>
400e40f3:	f21c      	movi.n	a2, 31
400e40f5:	432267        	blt	a2, a6, 400e413c <_vfprintf_r+0x1df4>
400e40f8:	261b      	addi.n	a2, a6, 1
400e40fa:	10c132        	addi	a3, a1, 16
400e40fd:	976122        	s32i	a2, a1, 0x25c
400e4100:	02d322        	addmi	a2, a3, 0x200
400e4103:	1a2232        	l32i	a3, a2, 104
400e4106:	841c      	movi.n	a4, 24
400e4108:	534b      	addi.n	a5, a3, 4
400e410a:	1a6252        	s32i	a5, a2, 104
400e410d:	072457        	blt	a4, a5, 400e4118 <_vfprintf_r+0x1dd0>
400e4110:	192232        	l32i	a3, a2, 100
400e4113:	000306        	j	400e4123 <_vfprintf_r+0x1ddb>
400e4116:	370000        	lsi	f0, a0, 220
400e4119:	2c0424        	lsi	f2, a4, 176
400e411c:	623243        	lsi	f4, a2, 0x188
400e411f:	321a      	add.n	a3, a2, a1
400e4121:	229c21        	l32r	a2, 400acb94 <_iram_end+0x1f040>
400e4124:	429e21        	l32r	a2, 400b4b9c <_iram_end+0x27048>
400e4127:	2a10c1        	l32r	a12, 400ae968 <_iram_end+0x20e14>
400e412a:	c22223        	lsi	f2, a2, 0x308
400e412d:	58fc      	bnez.n	a8, 400e4166 <_vfprintf_r+0x1e1e>
400e412f:	264002        	s8i	a0, a0, 38
400e4132:	0259b0        	andb	b5, b9, b11
400e4135:	745050        	extui	a5, a5, 0, 8
400e4138:	000bc6        	j	400e416b <_vfprintf_r+0x1e23>
400e413b:	c15200        	mul16u	a5, a2, a0
400e413e:	d52210        	extui	a2, a1, 18, 14
400e4141:	223202        	lsi	f0, a2, 136
400e4144:	1c1a      	add.n	a1, a12, a1
400e4146:	534b84        	lsi	f8, a11, 0x14c
400e4149:	1a6252        	s32i	a5, a2, 104
400e414c:	052457        	blt	a4, a5, 400e4155 <_vfprintf_r+0x1e0d>
400e414f:	192232        	l32i	a3, a2, 100
400e4152:	000286        	j	400e4160 <_vfprintf_r+0x1e18>
400e4155:	042437        	blt	a4, a3, 400e415d <_vfprintf_r+0x1e15>
400e4158:	432c      	movi.n	a3, 36
400e415a:	1a6232        	s32i	a3, a2, 104
400e415d:	9c2132        	l32i	a3, a1, 0x270
400e4160:	9e2122        	l32i	a2, a1, 0x278
400e4163:	232a      	add.n	a2, a3, a2
400e4165:	fcc222        	addi	a2, a2, -4
400e4168:	000252        	l8ui	a5, a2, 0
400e416b:	030c      	movi.n	a3, 0
400e416d:	087d      	mov.n	a7, a8
400e416f:	002ec6        	j	400e422e <_vfprintf_r+0x1ee6>
400e4172:	64bc      	beqz.n	a4, 400e41ac <_vfprintf_r+0x1e64>
400e4174:	0ca267        	bge	a2, a6, 400e4184 <_vfprintf_r+0x1e3c>
400e4177:	10c162        	addi	a6, a1, 16
400e417a:	b02260        	addx8	a2, a2, a6
400e417d:	0258      	l32i.n	a5, a2, 0
400e417f:	0008c6        	j	400e41a6 <_vfprintf_r+0x1e5e>
400e4182:	820000        	mull	a0, a0, a0
400e4185:	3210c1        	l32r	a12, 400b09c8 <_iram_end+0x22e74>
400e4188:	3a48a2        	s8i	a10, a8, 58
400e418b:	3938      	l32i.n	a3, a9, 12
400e418d:	d8f201        	l32r	a0, 400da558 <esp_vfs_lseek+0x28>
400e4190:	08ed01        	l32r	a0, 400a6544 <_iram_end+0x189f0>
400e4193:	4ca2d2        	movi	a13, 0x24c
400e4196:	60a2c2        	movi	a12, 0x260
400e4199:	05bd      	mov.n	a11, a5
400e419b:	deda      	add.n	a13, a14, a13
400e419d:	ceca      	add.n	a12, a14, a12
400e419f:	02ad      	mov.n	a10, a2
400e41a1:	fdd265        	call8	400e1ec8 <get_arg$isra$0>
400e41a4:	0a58      	l32i.n	a5, a10, 0
400e41a6:	074d      	mov.n	a4, a7
400e41a8:	001f86        	j	400e422a <_vfprintf_r+0x1ee2>
400e41ab:	c19200        	mul16u	a9, a2, a0
400e41ae:	471b10        	lsi	f1, a11, 0x11c
400e41b1:	b02290        	addx8	a2, a2, a9
400e41b4:	702767        	blt	a7, a6, 400e4228 <_vfprintf_r+0x1ee0>
400e41b7:	f21c      	movi.n	a2, 31
400e41b9:	3f2267        	blt	a2, a6, 400e41fc <_vfprintf_r+0x1eb4>
400e41bc:	261b      	addi.n	a2, a6, 1
400e41be:	10c1a2        	addi	a10, a1, 16
400e41c1:	976122        	s32i	a2, a1, 0x25c
400e41c4:	02da22        	addmi	a2, a10, 0x200
400e41c7:	1a2232        	l32i	a3, a2, 104
400e41ca:	851c      	movi.n	a5, 24
400e41cc:	734b      	addi.n	a7, a3, 4
400e41ce:	1a6272        	s32i	a7, a2, 104
400e41d1:	072577        	blt	a5, a7, 400e41dc <_vfprintf_r+0x1e94>
400e41d4:	192232        	l32i	a3, a2, 100
400e41d7:	000306        	j	400e41e7 <_vfprintf_r+0x1e9f>
400e41da:	370000        	lsi	f0, a0, 220
400e41dd:	2c0425        	call8	40110220 <_etext+0x23943>
400e41e0:	623243        	lsi	f4, a2, 0x188
400e41e3:	321a      	add.n	a3, a2, a1
400e41e5:	229c21        	l32r	a2, 400acc58 <_iram_end+0x1f104>
400e41e8:	e29e21        	l32r	a2, 400dcc60 <_svfprintf_r+0x53c>
400e41eb:	2a10c1        	l32r	a12, 400aea2c <_iram_end+0x20ed8>
400e41ee:	c22223        	lsi	f2, a2, 0x308
400e41f1:	58fc      	bnez.n	a8, 400e422a <_vfprintf_r+0x1ee2>
400e41f3:	26e002        	s32c1i	a0, a0, 152
400e41f6:	0259b0        	andb	b5, b9, b11
400e41f9:	000b46        	j	400e422a <_vfprintf_r+0x1ee2>
400e41fc:	10c132        	addi	a3, a1, 16
400e41ff:	02d322        	addmi	a2, a3, 0x200
400e4202:	1a2232        	l32i	a3, a2, 104
400e4205:	851c      	movi.n	a5, 24
400e4207:	634b      	addi.n	a6, a3, 4
400e4209:	1a6262        	s32i	a6, a2, 104
400e420c:	052567        	blt	a5, a6, 400e4215 <_vfprintf_r+0x1ecd>
400e420f:	192232        	l32i	a3, a2, 100
400e4212:	000286        	j	400e4220 <_vfprintf_r+0x1ed8>
400e4215:	042537        	blt	a5, a3, 400e421d <_vfprintf_r+0x1ed5>
400e4218:	432c      	movi.n	a3, 36
400e421a:	1a6232        	s32i	a3, a2, 104
400e421d:	9c2132        	l32i	a3, a1, 0x270
400e4220:	9e2122        	l32i	a2, a1, 0x278
400e4223:	232a      	add.n	a2, a3, a2
400e4225:	fcc222        	addi	a2, a2, -4
400e4228:	0258      	l32i.n	a5, a2, 0
400e422a:	030c      	movi.n	a3, 0
400e422c:	047d      	mov.n	a7, a4
400e422e:	120c      	movi.n	a2, 1
400e4230:	010306        	j	400e4640 <_vfprintf_r+0x22f8>
400e4233:	b17361        	l32r	a6, 400d0800 <_flash_cache_start+0x7e8>
400e4236:	b56162        	s32i	a6, a1, 0x2d4
400e4239:	a02182        	l32i	a8, a1, 0x280
400e423c:	02e857        	bbsi	a8, 5, 400e4242 <_vfprintf_r+0x1efa>
400e423f:	003546        	j	400e4318 <_vfprintf_r+0x1fd0>
400e4242:	972162        	l32i	a6, a1, 0x25c
400e4245:	74bc      	beqz.n	a4, 400e4280 <_vfprintf_r+0x1f38>
400e4247:	0ca267        	bge	a2, a6, 400e4257 <_vfprintf_r+0x1f0f>
400e424a:	10c192        	addi	a9, a1, 16
400e424d:	b02290        	addx8	a2, a2, a9
400e4250:	0258      	l32i.n	a5, a2, 0
400e4252:	1238      	l32i.n	a3, a2, 4
400e4254:	00ec86        	j	400e460a <_vfprintf_r+0x22c2>
400e4257:	10c1a2        	addi	a10, a1, 16
400e425a:	48a232        	movi	a3, 0x248
400e425d:	3a3a      	add.n	a3, a10, a3
400e425f:	4ca2d2        	movi	a13, 0x24c
400e4262:	60a2c2        	movi	a12, 0x260
400e4265:	0139      	s32i.n	a3, a1, 0
400e4267:	01daf2        	addmi	a15, a10, 0x100
400e426a:	0aed      	mov.n	a14, a10
400e426c:	dada      	add.n	a13, a10, a13
400e426e:	caca      	add.n	a12, a10, a12
400e4270:	05bd      	mov.n	a11, a5
400e4272:	20a220        	or	a10, a2, a2
400e4275:	fdc525        	call8	400e1ec8 <get_arg$isra$0>
400e4278:	0a58      	l32i.n	a5, a10, 0
400e427a:	1a38      	l32i.n	a3, a10, 4
400e427c:	00e286        	j	400e460a <_vfprintf_r+0x22c2>
400e427f:	c1e200        	mul16u	a14, a2, a0
400e4282:	471b10        	lsi	f1, a11, 0x11c
400e4285:	b022e0        	addx8	a2, a2, a14
400e4288:	02a767        	bge	a7, a6, 400e428e <_vfprintf_r+0x1f46>
400e428b:	002046        	j	400e4310 <_vfprintf_r+0x1fc8>
400e428e:	f21c      	movi.n	a2, 31
400e4290:	482267        	blt	a2, a6, 400e42dc <_vfprintf_r+0x1f94>
400e4293:	261b      	addi.n	a2, a6, 1
400e4295:	10c132        	addi	a3, a1, 16
400e4298:	976122        	s32i	a2, a1, 0x25c
400e429b:	02d322        	addmi	a2, a3, 0x200
400e429e:	1a2232        	l32i	a3, a2, 104
400e42a1:	537b      	addi.n	a5, a3, 7
400e42a3:	837c      	movi.n	a3, -8
400e42a5:	103530        	and	a3, a5, a3
400e42a8:	738b      	addi.n	a7, a3, 8
400e42aa:	1a6272        	s32i	a7, a2, 104
400e42ad:	851c      	movi.n	a5, 24
400e42af:	052577        	blt	a5, a7, 400e42b8 <_vfprintf_r+0x1f70>
400e42b2:	192232        	l32i	a3, a2, 100
400e42b5:	000286        	j	400e42c3 <_vfprintf_r+0x1f7b>
400e42b8:	042537        	blt	a5, a3, 400e42c0 <_vfprintf_r+0x1f78>
400e42bb:	832c      	movi.n	a3, 40
400e42bd:	1a6232        	s32i	a3, a2, 104
400e42c0:	9c2132        	l32i	a3, a1, 0x270
400e42c3:	9e2122        	l32i	a2, a1, 0x278
400e42c6:	10c182        	addi	a8, a1, 16
400e42c9:	232a      	add.n	a2, a3, a2
400e42cb:	f8c222        	addi	a2, a2, -8
400e42ce:	0258      	l32i.n	a5, a2, 0
400e42d0:	1238      	l32i.n	a3, a2, 4
400e42d2:	b02680        	addx8	a2, a6, a8
400e42d5:	0259      	s32i.n	a5, a2, 0
400e42d7:	1239      	s32i.n	a3, a2, 4
400e42d9:	00cac6        	j	400e4608 <_vfprintf_r+0x22c0>
400e42dc:	10c192        	addi	a9, a1, 16
400e42df:	02d922        	addmi	a2, a9, 0x200
400e42e2:	1a2232        	l32i	a3, a2, 104
400e42e5:	537b      	addi.n	a5, a3, 7
400e42e7:	837c      	movi.n	a3, -8
400e42e9:	103530        	and	a3, a5, a3
400e42ec:	638b      	addi.n	a6, a3, 8
400e42ee:	1a6262        	s32i	a6, a2, 104
400e42f1:	851c      	movi.n	a5, 24
400e42f3:	062567        	blt	a5, a6, 400e42fd <_vfprintf_r+0x1fb5>
400e42f6:	192232        	l32i	a3, a2, 100
400e42f9:	0002c6        	j	400e4308 <_vfprintf_r+0x1fc0>
400e42fc:	253700        	extui	a3, a0, 23, 3
400e42ff:	832c04        	lsi	f0, a12, 0x20c
400e4302:	1a6232        	s32i	a3, a2, 104
400e4305:	9c2132        	l32i	a3, a1, 0x270
400e4308:	9e2122        	l32i	a2, a1, 0x278
400e430b:	232a      	add.n	a2, a3, a2
400e430d:	f8c222        	addi	a2, a2, -8
400e4310:	0258      	l32i.n	a5, a2, 0
400e4312:	1238      	l32i.n	a3, a2, 4
400e4314:	00bc06        	j	400e4608 <_vfprintf_r+0x22c0>
400e4317:	218200        	srai	a8, a0, 2
400e431a:	031ca0        	lsi	f10, a12, 12
400e431d:	106830        	and	a6, a8, a3
400e4320:	07d616        	beqz	a6, 400e43a1 <_vfprintf_r+0x2059>
400e4323:	972162        	l32i	a6, a1, 0x25c
400e4326:	e49c      	beqz.n	a4, 400e4348 <_vfprintf_r+0x2000>
400e4328:	08a267        	bge	a2, a6, 400e4334 <_vfprintf_r+0x1fec>
400e432b:	913a      	add.n	a9, a1, a3
400e432d:	b02290        	addx8	a2, a2, a9
400e4330:	008a06        	j	400e455c <_vfprintf_r+0x2214>
400e4333:	c1a200        	mul16u	a10, a2, a0
400e4336:	a23210        	muluh	a3, a2, a1
400e4339:	3a48      	l32i.n	a4, a10, 12
400e433b:	393a      	add.n	a3, a9, a3
400e433d:	daf201        	l32r	a0, 400daf08 <__assert+0x8>
400e4340:	0aed01        	l32r	a0, 400a6ef4 <_iram_end+0x193a0>
400e4343:	008a46        	j	400e4570 <_vfprintf_r+0x2228>
400e4346:	e20000        	remu	a0, a0, a0
400e4349:	1b10c1        	l32r	a12, 400aaf8c <_iram_end+0x1d438>
400e434c:	22e047        	bbsi	a0, 4, 400e4372 <_vfprintf_r+0x202a>
400e434f:	a767b0        	lsi	f11, a7, 0x29c
400e4352:	ab4602        	s8i	a0, a6, 171
400e4355:	f21c00        	rems	a1, a12, a0
400e4358:	3c2267        	blt	a2, a6, 400e4398 <_vfprintf_r+0x2050>
400e435b:	261b      	addi.n	a2, a6, 1
400e435d:	10c132        	addi	a3, a1, 16
400e4360:	976122        	s32i	a2, a1, 0x25c
400e4363:	02d322        	addmi	a2, a3, 0x200
400e4366:	1a2232        	l32i	a3, a2, 104
400e4369:	851c      	movi.n	a5, 24
400e436b:	734b      	addi.n	a7, a3, 4
400e436d:	1a6272        	s32i	a7, a2, 104
400e4370:	052577        	blt	a5, a7, 400e4379 <_vfprintf_r+0x2031>
400e4373:	192222        	l32i	a2, a2, 100
400e4376:	000286        	j	400e4384 <_vfprintf_r+0x203c>
400e4379:	042537        	blt	a5, a3, 400e4381 <_vfprintf_r+0x2039>
400e437c:	432c      	movi.n	a3, 36
400e437e:	1a6232        	s32i	a3, a2, 104
400e4381:	9c2122        	l32i	a2, a1, 0x270
400e4384:	9e2132        	l32i	a3, a1, 0x278
400e4387:	10c182        	addi	a8, a1, 16
400e438a:	323a      	add.n	a3, a2, a3
400e438c:	fcc332        	addi	a3, a3, -4
400e438f:	0358      	l32i.n	a5, a3, 0
400e4391:	b02680        	addx8	a2, a6, a8
400e4394:	008ec6        	j	400e45d3 <_vfprintf_r+0x228b>
400e4397:	c19200        	mul16u	a9, a2, a0
400e439a:	d92210        	lsi	f1, a2, 0x364
400e439d:	8f0602        	l8ui	a0, a6, 143
400e43a0:	218200        	srai	a8, a0, 2
400e43a3:	034ca0        	lsi	f10, a12, 12
400e43a6:	103830        	and	a3, a8, a3
400e43a9:	0cf316        	beqz	a3, 400e447c <_vfprintf_r+0x2134>
400e43ac:	972182        	l32i	a8, a1, 0x25c
400e43af:	54bc      	beqz.n	a4, 400e43e8 <_vfprintf_r+0x20a0>
400e43b1:	0ba287        	bge	a2, a8, 400e43c0 <_vfprintf_r+0x2078>
400e43b4:	10c192        	addi	a9, a1, 16
400e43b7:	b02290        	addx8	a2, a2, a9
400e43ba:	001252        	l16ui	a5, a2, 0
400e43bd:	000886        	j	400e43e3 <_vfprintf_r+0x209b>
400e43c0:	10c1a2        	addi	a10, a1, 16
400e43c3:	48a232        	movi	a3, 0x248
400e43c6:	3a3a      	add.n	a3, a10, a3
400e43c8:	4ca2d2        	movi	a13, 0x24c
400e43cb:	60a2c2        	movi	a12, 0x260
400e43ce:	01daf2        	addmi	a15, a10, 0x100
400e43d1:	0aed      	mov.n	a14, a10
400e43d3:	dada      	add.n	a13, a10, a13
400e43d5:	caca      	add.n	a12, a10, a12
400e43d7:	05bd      	mov.n	a11, a5
400e43d9:	0139      	s32i.n	a3, a1, 0
400e43db:	02ad      	mov.n	a10, a2
400e43dd:	fdaea5        	call8	400e1ec8 <get_arg$isra$0>
400e43e0:	001a52        	l16ui	a5, a10, 0
400e43e3:	063d      	mov.n	a3, a6
400e43e5:	008846        	j	400e460a <_vfprintf_r+0x22c2>
400e43e8:	671b      	addi.n	a6, a7, 1
400e43ea:	0ea787        	bge	a7, a8, 400e43fc <_vfprintf_r+0x20b4>
400e43ed:	10c1e2        	addi	a14, a1, 16
400e43f0:	b022e0        	addx8	a2, a2, a14
400e43f3:	001252        	l16ui	a5, a2, 0
400e43f6:	043d      	mov.n	a3, a4
400e43f8:	001e46        	j	400e4475 <_vfprintf_r+0x212d>
400e43fb:	f21c00        	rems	a1, a12, a0
400e43fe:	422287        	blt	a2, a8, 400e4444 <_vfprintf_r+0x20fc>
400e4401:	281b      	addi.n	a2, a8, 1
400e4403:	10c132        	addi	a3, a1, 16
400e4406:	976122        	s32i	a2, a1, 0x25c
400e4409:	02d322        	addmi	a2, a3, 0x200
400e440c:	1a2232        	l32i	a3, a2, 104
400e440f:	841c      	movi.n	a4, 24
400e4411:	534b      	addi.n	a5, a3, 4
400e4413:	1a6252        	s32i	a5, a2, 104
400e4416:	062457        	blt	a4, a5, 400e4420 <_vfprintf_r+0x20d8>
400e4419:	192222        	l32i	a2, a2, 100
400e441c:	0002c6        	j	400e442b <_vfprintf_r+0x20e3>
400e441f:	243700        	extui	a3, a0, 7, 3
400e4422:	432c04        	lsi	f0, a12, 0x10c
400e4425:	1a6232        	s32i	a3, a2, 104
400e4428:	9c2122        	l32i	a2, a1, 0x270
400e442b:	9e2132        	l32i	a3, a1, 0x278
400e442e:	10c142        	addi	a4, a1, 16
400e4431:	323a      	add.n	a3, a2, a3
400e4433:	fcc332        	addi	a3, a3, -4
400e4436:	0358      	l32i.n	a5, a3, 0
400e4438:	b02840        	addx8	a2, a8, a4
400e443b:	0259      	s32i.n	a5, a2, 0
400e443d:	f45050        	extui	a5, a5, 0, 16
400e4440:	000bc6        	j	400e4473 <_vfprintf_r+0x212b>
400e4443:	c15200        	mul16u	a5, a2, a0
400e4446:	d52210        	extui	a2, a1, 18, 14
400e4449:	223202        	lsi	f0, a2, 136
400e444c:	1c1a      	add.n	a1, a12, a1
400e444e:	534b84        	lsi	f8, a11, 0x14c
400e4451:	1a6252        	s32i	a5, a2, 104
400e4454:	052457        	blt	a4, a5, 400e445d <_vfprintf_r+0x2115>
400e4457:	192232        	l32i	a3, a2, 100
400e445a:	000286        	j	400e4468 <_vfprintf_r+0x2120>
400e445d:	042437        	blt	a4, a3, 400e4465 <_vfprintf_r+0x211d>
400e4460:	432c      	movi.n	a3, 36
400e4462:	1a6232        	s32i	a3, a2, 104
400e4465:	9c2132        	l32i	a3, a1, 0x270
400e4468:	9e2122        	l32i	a2, a1, 0x278
400e446b:	232a      	add.n	a2, a3, a2
400e446d:	fcc222        	addi	a2, a2, -4
400e4470:	001252        	l16ui	a5, a2, 0
400e4473:	030c      	movi.n	a3, 0
400e4475:	067d      	mov.n	a7, a6
400e4477:	0063c6        	j	400e460a <_vfprintf_r+0x22c2>
400e447a:	820000        	mull	a0, a0, a0
400e447d:	62a021        	l32r	a2, 400bcf00 <_iram_end+0x2f3ac>
400e4480:	979721        	l32r	a2, 400ca2dc <_rtc_text_end+0xa2dc>
400e4483:	02e8      	l32i.n	a14, a2, 0
400e4485:	003206        	j	400e4551 <_vfprintf_r+0x2209>
400e4488:	44bc      	beqz.n	a4, 400e44c0 <_vfprintf_r+0x2178>
400e448a:	0ba267        	bge	a2, a6, 400e4499 <_vfprintf_r+0x2151>
400e448d:	10c192        	addi	a9, a1, 16
400e4490:	b02290        	addx8	a2, a2, a9
400e4493:	000252        	l8ui	a5, a2, 0
400e4496:	005c06        	j	400e460a <_vfprintf_r+0x22c2>
400e4499:	10c1a2        	addi	a10, a1, 16
400e449c:	48a242        	movi	a4, 0x248
400e449f:	4a4a      	add.n	a4, a10, a4
400e44a1:	4ca2d2        	movi	a13, 0x24c
400e44a4:	60a2c2        	movi	a12, 0x260
400e44a7:	01daf2        	addmi	a15, a10, 0x100
400e44aa:	0aed      	mov.n	a14, a10
400e44ac:	dada      	add.n	a13, a10, a13
400e44ae:	caca      	add.n	a12, a10, a12
400e44b0:	05bd      	mov.n	a11, a5
400e44b2:	0149      	s32i.n	a4, a1, 0
400e44b4:	02ad      	mov.n	a10, a2
400e44b6:	fda125        	call8	400e1ec8 <get_arg$isra$0>
400e44b9:	000a52        	l8ui	a5, a10, 0
400e44bc:	005286        	j	400e460a <_vfprintf_r+0x22c2>
400e44bf:	871b00        	lsi	f0, a11, 0x21c
400e44c2:	0ea767        	bge	a7, a6, 400e44d4 <_vfprintf_r+0x218c>
400e44c5:	10c1e2        	addi	a14, a1, 16
400e44c8:	b022e0        	addx8	a2, a2, a14
400e44cb:	000252        	l8ui	a5, a2, 0
400e44ce:	043d      	mov.n	a3, a4
400e44d0:	001e06        	j	400e454c <_vfprintf_r+0x2204>
400e44d3:	f21c00        	rems	a1, a12, a0
400e44d6:	412267        	blt	a2, a6, 400e451b <_vfprintf_r+0x21d3>
400e44d9:	261b      	addi.n	a2, a6, 1
400e44db:	10c132        	addi	a3, a1, 16
400e44de:	976122        	s32i	a2, a1, 0x25c
400e44e1:	02d322        	addmi	a2, a3, 0x200
400e44e4:	1a2232        	l32i	a3, a2, 104
400e44e7:	841c      	movi.n	a4, 24
400e44e9:	534b      	addi.n	a5, a3, 4
400e44eb:	1a6252        	s32i	a5, a2, 104
400e44ee:	062457        	blt	a4, a5, 400e44f8 <_vfprintf_r+0x21b0>
400e44f1:	192232        	l32i	a3, a2, 100
400e44f4:	0002c6        	j	400e4503 <_vfprintf_r+0x21bb>
400e44f7:	243700        	extui	a3, a0, 7, 3
400e44fa:	432c04        	lsi	f0, a12, 0x10c
400e44fd:	1a6232        	s32i	a3, a2, 104
400e4500:	9c2132        	l32i	a3, a1, 0x270
400e4503:	9e2122        	l32i	a2, a1, 0x278
400e4506:	10c142        	addi	a4, a1, 16
400e4509:	232a      	add.n	a2, a3, a2
400e450b:	fcc222        	addi	a2, a2, -4
400e450e:	0258      	l32i.n	a5, a2, 0
400e4510:	b02640        	addx8	a2, a6, a4
400e4513:	0259      	s32i.n	a5, a2, 0
400e4515:	745050        	extui	a5, a5, 0, 8
400e4518:	000b86        	j	400e454a <_vfprintf_r+0x2202>
400e451b:	10c152        	addi	a5, a1, 16
400e451e:	02d522        	addmi	a2, a5, 0x200
400e4521:	1a2232        	l32i	a3, a2, 104
400e4524:	841c      	movi.n	a4, 24
400e4526:	534b      	addi.n	a5, a3, 4
400e4528:	1a6252        	s32i	a5, a2, 104
400e452b:	052457        	blt	a4, a5, 400e4534 <_vfprintf_r+0x21ec>
400e452e:	192232        	l32i	a3, a2, 100
400e4531:	000286        	j	400e453f <_vfprintf_r+0x21f7>
400e4534:	042437        	blt	a4, a3, 400e453c <_vfprintf_r+0x21f4>
400e4537:	432c      	movi.n	a3, 36
400e4539:	1a6232        	s32i	a3, a2, 104
400e453c:	9c2132        	l32i	a3, a1, 0x270
400e453f:	9e2122        	l32i	a2, a1, 0x278
400e4542:	232a      	add.n	a2, a3, a2
400e4544:	fcc222        	addi	a2, a2, -4
400e4547:	000252        	l8ui	a5, a2, 0
400e454a:	030c      	movi.n	a3, 0
400e454c:	087d      	mov.n	a7, a8
400e454e:	002e06        	j	400e460a <_vfprintf_r+0x22c2>
400e4551:	34bc      	beqz.n	a4, 400e4588 <_vfprintf_r+0x2240>
400e4553:	0aa267        	bge	a2, a6, 400e4561 <_vfprintf_r+0x2219>
400e4556:	10c162        	addi	a6, a1, 16
400e4559:	b02260        	addx8	a2, a2, a6
400e455c:	0258      	l32i.n	a5, a2, 0
400e455e:	000846        	j	400e4583 <_vfprintf_r+0x223b>
400e4561:	10c182        	addi	a8, a1, 16
400e4564:	48a232        	movi	a3, 0x248
400e4567:	383a      	add.n	a3, a8, a3
400e4569:	0139      	s32i.n	a3, a1, 0
400e456b:	01d8f2        	addmi	a15, a8, 0x100
400e456e:	08ed      	mov.n	a14, a8
400e4570:	4ca2d2        	movi	a13, 0x24c
400e4573:	60a2c2        	movi	a12, 0x260
400e4576:	05bd      	mov.n	a11, a5
400e4578:	deda      	add.n	a13, a14, a13
400e457a:	ceca      	add.n	a12, a14, a12
400e457c:	02ad      	mov.n	a10, a2
400e457e:	fd94a5        	call8	400e1ec8 <get_arg$isra$0>
400e4581:	0a58      	l32i.n	a5, a10, 0
400e4583:	074d      	mov.n	a4, a7
400e4585:	001f46        	j	400e4606 <_vfprintf_r+0x22be>
400e4588:	10c192        	addi	a9, a1, 16
400e458b:	471b      	addi.n	a4, a7, 1
400e458d:	b02290        	addx8	a2, a2, a9
400e4590:	702767        	blt	a7, a6, 400e4604 <_vfprintf_r+0x22bc>
400e4593:	f21c      	movi.n	a2, 31
400e4595:	3f2267        	blt	a2, a6, 400e45d8 <_vfprintf_r+0x2290>
400e4598:	261b      	addi.n	a2, a6, 1
400e459a:	10c1a2        	addi	a10, a1, 16
400e459d:	976122        	s32i	a2, a1, 0x25c
400e45a0:	02da22        	addmi	a2, a10, 0x200
400e45a3:	1a2232        	l32i	a3, a2, 104
400e45a6:	851c      	movi.n	a5, 24
400e45a8:	734b      	addi.n	a7, a3, 4
400e45aa:	1a6272        	s32i	a7, a2, 104
400e45ad:	072577        	blt	a5, a7, 400e45b8 <_vfprintf_r+0x2270>
400e45b0:	192232        	l32i	a3, a2, 100
400e45b3:	000306        	j	400e45c3 <_vfprintf_r+0x227b>
400e45b6:	370000        	lsi	f0, a0, 220
400e45b9:	2c0425        	call8	401105fc <_etext+0x23d1f>
400e45bc:	623243        	lsi	f4, a2, 0x188
400e45bf:	321a      	add.n	a3, a2, a1
400e45c1:	229c21        	l32r	a2, 400ad034 <_iram_end+0x1f4e0>
400e45c4:	e29e21        	l32r	a2, 400dd03c <_svfprintf_r+0x918>
400e45c7:	2a10c1        	l32r	a12, 400aee08 <_iram_end+0x212b4>
400e45ca:	c22223        	lsi	f2, a2, 0x308
400e45cd:	58fc      	bnez.n	a8, 400e4606 <_vfprintf_r+0x22be>
400e45cf:	26e002        	s32c1i	a0, a0, 152
400e45d2:	0259b0        	andb	b5, b9, b11
400e45d5:	000b46        	j	400e4606 <_vfprintf_r+0x22be>
400e45d8:	10c132        	addi	a3, a1, 16
400e45db:	02d322        	addmi	a2, a3, 0x200
400e45de:	1a2232        	l32i	a3, a2, 104
400e45e1:	851c      	movi.n	a5, 24
400e45e3:	634b      	addi.n	a6, a3, 4
400e45e5:	1a6262        	s32i	a6, a2, 104
400e45e8:	052567        	blt	a5, a6, 400e45f1 <_vfprintf_r+0x22a9>
400e45eb:	192232        	l32i	a3, a2, 100
400e45ee:	000286        	j	400e45fc <_vfprintf_r+0x22b4>
400e45f1:	042537        	blt	a5, a3, 400e45f9 <_vfprintf_r+0x22b1>
400e45f4:	432c      	movi.n	a3, 36
400e45f6:	1a6232        	s32i	a3, a2, 104
400e45f9:	9c2132        	l32i	a3, a1, 0x270
400e45fc:	9e2122        	l32i	a2, a1, 0x278
400e45ff:	232a      	add.n	a2, a3, a2
400e4601:	fcc222        	addi	a2, a2, -4
400e4604:	0258      	l32i.n	a5, a2, 0
400e4606:	030c      	movi.n	a3, 0
400e4608:	047d      	mov.n	a7, a4
400e460a:	202530        	or	a2, a5, a3
400e460d:	02ac      	beqz.n	a2, 400e4631 <_vfprintf_r+0x22e9>
400e460f:	a02142        	l32i	a4, a1, 0x280
400e4612:	1b6407        	bbci	a4, 0, 400e4631 <_vfprintf_r+0x22e9>
400e4615:	10c162        	addi	a6, a1, 16
400e4618:	a62182        	l32i	a8, a1, 0x298
400e461b:	02d622        	addmi	a2, a6, 0x200
400e461e:	a02192        	l32i	a9, a1, 0x280
400e4621:	043c      	movi.n	a4, 48
400e4623:	504242        	s8i	a4, a2, 80
400e4626:	514282        	s8i	a8, a2, 81
400e4629:	220c      	movi.n	a2, 2
400e462b:	209920        	or	a9, a9, a2
400e462e:	a06192        	s32i	a9, a1, 0x280
400e4631:	a02142        	l32i	a4, a1, 0x280
400e4634:	ffab22        	movi	a2, 0xfffffbff
400e4637:	104420        	and	a4, a4, a2
400e463a:	a06142        	s32i	a4, a1, 0x280
400e463d:	02a022        	movi	a2, 2
400e4640:	10c182        	addi	a8, a1, 16
400e4643:	00a062        	movi	a6, 0
400e4646:	02d842        	addmi	a4, a8, 0x200
400e4649:	524462        	s8i	a6, a4, 82
400e464c:	a52192        	l32i	a9, a1, 0x294
400e464f:	00b996        	bltz	a9, 400e465e <_vfprintf_r+0x2316>
400e4652:	a02162        	l32i	a6, a1, 0x280
400e4655:	7faf42        	movi	a4, -129
400e4658:	106640        	and	a6, a6, a4
400e465b:	a06162        	s32i	a6, a1, 0x280
400e465e:	204530        	or	a4, a5, a3
400e4661:	01a062        	movi	a6, 1
400e4664:	00a082        	movi	a8, 0
400e4667:	938640        	movnez	a8, a6, a4
400e466a:	744080        	extui	a4, a8, 0, 8
400e466d:	008456        	bnez	a4, 400e4679 <_vfprintf_r+0x2331>
400e4670:	a52182        	l32i	a8, a1, 0x294
400e4673:	934680        	movnez	a4, a6, a8
400e4676:	16e416        	beqz	a4, 400e47e8 <_vfprintf_r+0x24a0>
400e4679:	80a142        	movi	a4, 0x180
400e467c:	5a1226        	beqi	a2, 1, 400e46da <_vfprintf_r+0x2392>
400e467f:	022266        	bnei	a2, 2, 400e4685 <_vfprintf_r+0x233d>
400e4682:	004a06        	j	400e47ae <_vfprintf_r+0x2466>
400e4685:	10c192        	addi	a9, a1, 16
400e4688:	494a      	add.n	a4, a9, a4
400e468a:	64c442        	addi	a4, a4, 100
400e468d:	a16142        	s32i	a4, a1, 0x284
400e4690:	a12122        	l32i	a2, a1, 0x284
400e4693:	220b      	addi.n	a2, a2, -1
400e4695:	a16122        	s32i	a2, a1, 0x284
400e4698:	a12142        	l32i	a4, a1, 0x284
400e469b:	242050        	extui	a2, a5, 0, 3
400e469e:	30c222        	addi	a2, a2, 48
400e46a1:	004422        	s8i	a2, a4, 0
400e46a4:	415350        	srli	a5, a5, 3
400e46a7:	014330        	slli	a4, a3, 29
400e46aa:	205450        	or	a5, a4, a5
400e46ad:	413330        	srli	a3, a3, 3
400e46b0:	204530        	or	a4, a5, a3
400e46b3:	fd9456        	bnez	a4, 400e4690 <_vfprintf_r+0x2348>
400e46b6:	d0c232        	addi	a3, a2, -48
400e46b9:	120c      	movi.n	a2, 1
400e46bb:	832430        	moveqz	a2, a4, a3
400e46be:	742020        	extui	a2, a2, 0, 8
400e46c1:	14b216        	beqz	a2, 400e4810 <_vfprintf_r+0x24c8>
400e46c4:	a02152        	l32i	a5, a1, 0x280
400e46c7:	02e507        	bbsi	a5, 0, 400e46cd <_vfprintf_r+0x2385>
400e46ca:	005086        	j	400e4810 <_vfprintf_r+0x24c8>
400e46cd:	a12182        	l32i	a8, a1, 0x284
400e46d0:	023c      	movi.n	a2, 48
400e46d2:	480b      	addi.n	a4, a8, -1
400e46d4:	004422        	s8i	a2, a4, 0
400e46d7:	0005c6        	j	400e46f2 <_vfprintf_r+0x23aa>
400e46da:	a3dc      	bnez.n	a3, 400e46f8 <_vfprintf_r+0x23b0>
400e46dc:	920c      	movi.n	a2, 9
400e46de:	163257        	bltu	a2, a5, 400e46f8 <_vfprintf_r+0x23b0>
400e46e1:	10c192        	addi	a9, a1, 16
400e46e4:	30c552        	addi	a5, a5, 48
400e46e7:	01d922        	addmi	a2, a9, 0x100
400e46ea:	494a      	add.n	a4, a9, a4
400e46ec:	e34252        	s8i	a5, a2, 227
400e46ef:	63c442        	addi	a4, a4, 99
400e46f2:	a16142        	s32i	a4, a1, 0x284
400e46f5:	0045c6        	j	400e4810 <_vfprintf_r+0x24c8>
400e46f8:	020c      	movi.n	a2, 0
400e46fa:	90a162        	movi	a6, 0x190
400e46fd:	a02182        	l32i	a8, a1, 0x280
400e4700:	a76122        	s32i	a2, a1, 0x29c
400e4703:	661a      	add.n	a6, a6, a1
400e4705:	00a422        	movi	a2, 0x400
400e4708:	64c642        	addi	a4, a6, 100
400e470b:	102820        	and	a2, a8, a2
400e470e:	000086        	j	400e4714 <_vfprintf_r+0x23cc>
400e4711:	a12142        	l32i	a4, a1, 0x284
400e4714:	b01ac1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e4717:	ae53d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e471a:	440b      	addi.n	a4, a4, -1
400e471c:	05ad      	mov.n	a10, a5
400e471e:	03bd      	mov.n	a11, a3
400e4720:	a16142        	s32i	a4, a1, 0x284
400e4723:	b02381        	l32r	a8, 400d07b0 <_flash_cache_start+0x798>
400e4726:	0008e0        	callx8	a8
400e4729:	a72192        	l32i	a9, a1, 0x29c
400e472c:	30caa2        	addi	a10, a10, 48
400e472f:	991b      	addi.n	a9, a9, 1
400e4731:	0044a2        	s8i	a10, a4, 0
400e4734:	a76192        	s32i	a9, a1, 0x29c
400e4737:	056216        	beqz	a2, 400e4791 <_vfprintf_r+0x2449>
400e473a:	ad2142        	l32i	a4, a1, 0x2b4
400e473d:	190c      	movi.n	a9, 1
400e473f:	000482        	l8ui	a8, a4, 0
400e4742:	63cc      	bnez.n	a3, 400e474c <_vfprintf_r+0x2404>
400e4744:	09a042        	movi	a4, 9
400e4747:	013457        	bltu	a4, a5, 400e474c <_vfprintf_r+0x2404>
400e474a:	039d      	mov.n	a9, a3
400e474c:	01af42        	movi	a4, -255
400e474f:	484a      	add.n	a4, a8, a4
400e4751:	060c      	movi.n	a6, 0
400e4753:	01a0a2        	movi	a10, 1
400e4756:	83a640        	moveqz	a10, a6, a4
400e4759:	340a97        	bnone	a10, a9, 400e4791 <_vfprintf_r+0x2449>
400e475c:	a72192        	l32i	a9, a1, 0x29c
400e475f:	2e9897        	bne	a8, a9, 400e4791 <_vfprintf_r+0x2449>
400e4762:	b02182        	l32i	a8, a1, 0x2c0
400e4765:	a12142        	l32i	a4, a1, 0x284
400e4768:	b321b2        	l32i	a11, a1, 0x2cc
400e476b:	c04480        	sub	a4, a4, a8
400e476e:	08cd      	mov.n	a12, a8
400e4770:	20a440        	or	a10, a4, a4
400e4773:	a16142        	s32i	a4, a1, 0x284
400e4776:	af1b81        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400e4779:	0008e0        	callx8	a8
400e477c:	ad2192        	l32i	a9, a1, 0x2b4
400e477f:	064d      	mov.n	a4, a6
400e4781:	010982        	l8ui	a8, a9, 1
400e4784:	a76162        	s32i	a6, a1, 0x29c
400e4787:	160c      	movi.n	a6, 1
400e4789:	934680        	movnez	a4, a6, a8
400e478c:	994a      	add.n	a9, a9, a4
400e478e:	ad6192        	s32i	a9, a1, 0x2b4
400e4791:	affac1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e4794:	ae34d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e4797:	05ad      	mov.n	a10, a5
400e4799:	03bd      	mov.n	a11, a3
400e479b:	ae2d81        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e479e:	0008e0        	callx8	a8
400e47a1:	0a5d      	mov.n	a5, a10
400e47a3:	20aba0        	or	a10, a11, a10
400e47a6:	0b3d      	mov.n	a3, a11
400e47a8:	f65a56        	bnez	a10, 400e4711 <_vfprintf_r+0x23c9>
400e47ab:	001846        	j	400e4810 <_vfprintf_r+0x24c8>
400e47ae:	10c1a2        	addi	a10, a1, 16
400e47b1:	4a4a      	add.n	a4, a10, a4
400e47b3:	64c442        	addi	a4, a4, 100
400e47b6:	a16142        	s32i	a4, a1, 0x284
400e47b9:	a12122        	l32i	a2, a1, 0x284
400e47bc:	b52142        	l32i	a4, a1, 0x2d4
400e47bf:	220b      	addi.n	a2, a2, -1
400e47c1:	a16122        	s32i	a2, a1, 0x284
400e47c4:	342050        	extui	a2, a5, 0, 4
400e47c7:	242a      	add.n	a2, a4, a2
400e47c9:	000222        	l8ui	a2, a2, 0
400e47cc:	a12182        	l32i	a8, a1, 0x284
400e47cf:	415450        	srli	a5, a5, 4
400e47d2:	004822        	s8i	a2, a8, 0
400e47d5:	012340        	slli	a2, a3, 28
400e47d8:	205250        	or	a5, a2, a5
400e47db:	413430        	srli	a3, a3, 4
400e47de:	202530        	or	a2, a5, a3
400e47e1:	fd4256        	bnez	a2, 400e47b9 <_vfprintf_r+0x2471>
400e47e4:	000a06        	j	400e4810 <_vfprintf_r+0x24c8>
400e47e7:	a13200        	sll	a3, a2
400e47ea:	c19280        	mul16u	a9, a2, a8
400e47ed:	493a10        	s32e	a1, a10, -52
400e47f0:	64c442        	addi	a4, a4, 100
400e47f3:	a16142        	s32i	a4, a1, 0x284
400e47f6:	62dc      	bnez.n	a2, 400e4810 <_vfprintf_r+0x24c8>
400e47f8:	a02122        	l32i	a2, a1, 0x280
400e47fb:	116207        	bbci	a2, 0, 400e4810 <_vfprintf_r+0x24c8>
400e47fe:	803930        	add	a3, a9, a3
400e4801:	30a042        	movi	a4, 48
400e4804:	01d922        	addmi	a2, a9, 0x100
400e4807:	63c332        	addi	a3, a3, 99
400e480a:	e34242        	s8i	a4, a2, 227
400e480d:	a16132        	s32i	a3, a1, 0x284
400e4810:	10c132        	addi	a3, a1, 16
400e4813:	e4a122        	movi	a2, 0x1e4
400e4816:	a12142        	l32i	a4, a1, 0x284
400e4819:	232a      	add.n	a2, a3, a2
400e481b:	050c      	movi.n	a5, 0
400e481d:	c02240        	sub	a2, a2, a4
400e4820:	a52162        	l32i	a6, a1, 0x294
400e4823:	a46152        	s32i	a5, a1, 0x290
400e4826:	a56122        	s32i	a2, a1, 0x294
400e4829:	053d      	mov.n	a3, a5
400e482b:	0010c6        	j	400e4872 <_vfprintf_r+0x252a>
400e482e:	620000        	lsi	f0, a0, 0x188
400e4831:	cca621        	l32r	a2, 400d7acc <nvs::Storage::init(unsigned int, unsigned int)+0x54>
400e4834:	24c616        	beqz	a6, 400e4a84 <_vfprintf_r+0x273c>
400e4837:	c18203        	lsip	f0, a2, 0x304
400e483a:	d82210        	lsi	f1, a2, 0x360
400e483d:	426201        	l32r	a0, 400b51c8 <_iram_end+0x27674>
400e4840:	030c80        	rsr.scompare1	a8
400e4843:	02d822        	addmi	a2, a8, 0x200
400e4846:	090c      	movi.n	a9, 0
400e4848:	524232        	s8i	a3, a2, 82
400e484b:	120c      	movi.n	a2, 1
400e484d:	a56122        	s32i	a2, a1, 0x294
400e4850:	a46192        	s32i	a9, a1, 0x290
400e4853:	096d      	mov.n	a6, a9
400e4855:	093d      	mov.n	a3, a9
400e4857:	095d      	mov.n	a5, a9
400e4859:	092d      	mov.n	a2, a9
400e485b:	90a182        	movi	a8, 0x190
400e485e:	818a      	add.n	a8, a1, a8
400e4860:	a16182        	s32i	a8, a1, 0x284
400e4863:	000346        	j	400e4874 <_vfprintf_r+0x252c>
400e4866:	000000        	ill
400e4869:	a461a2        	s32i	a10, a1, 0x290
400e486c:	0a6d      	mov.n	a6, a10
400e486e:	063d      	mov.n	a3, a6
400e4870:	065d      	mov.n	a5, a6
400e4872:	052d      	mov.n	a2, a5
400e4874:	a52192        	l32i	a9, a1, 0x294
400e4877:	10c1a2        	addi	a10, a1, 16
400e487a:	539690        	max	a9, a6, a9
400e487d:	02da42        	addmi	a4, a10, 0x200
400e4880:	a96192        	s32i	a9, a1, 0x2a4
400e4883:	520482        	l8ui	a8, a4, 82
400e4886:	190c      	movi.n	a9, 1
400e4888:	a921e2        	l32i	a14, a1, 0x2a4
400e488b:	040c      	movi.n	a4, 0
400e488d:	934980        	movnez	a4, a9, a8
400e4890:	a02182        	l32i	a8, a1, 0x280
400e4893:	ee4a      	add.n	a14, a14, a4
400e4895:	a02192        	l32i	a9, a1, 0x280
400e4898:	240c      	movi.n	a4, 2
400e489a:	104840        	and	a4, a8, a4
400e489d:	84a082        	movi	a8, 132
400e48a0:	ee4a      	add.n	a14, a14, a4
400e48a2:	108980        	and	a8, a9, a8
400e48a5:	a961e2        	s32i	a14, a1, 0x2a4
400e48a8:	b26182        	s32i	a8, a1, 0x2c8
400e48ab:	0b5856        	bnez	a8, 400e4964 <_vfprintf_r+0x261c>
400e48ae:	ac2192        	l32i	a9, a1, 0x2b0
400e48b1:	0d1c      	movi.n	a13, 16
400e48b3:	c089e0        	sub	a8, a9, a14
400e48b6:	5b18e6        	bgei	a8, 1, 400e4915 <_vfprintf_r+0x25cd>
400e48b9:	0029c6        	j	400e4964 <_vfprintf_r+0x261c>
400e48bc:	9f21a2        	l32i	a10, a1, 0x27c
400e48bf:	0a99      	s32i.n	a9, a10, 0
400e48c1:	8f2192        	l32i	a9, a1, 0x23c
400e48c4:	1ad9      	s32i.n	a13, a10, 4
400e48c6:	10c992        	addi	a9, a9, 16
400e48c9:	8f6192        	s32i	a9, a1, 0x23c
400e48cc:	8e2192        	l32i	a9, a1, 0x238
400e48cf:	991b      	addi.n	a9, a9, 1
400e48d1:	8e6192        	s32i	a9, a1, 0x238
400e48d4:	0d89e6        	bgei	a9, 8, 400e48e5 <_vfprintf_r+0x259d>
400e48d7:	9f2192        	l32i	a9, a1, 0x27c
400e48da:	998b      	addi.n	a9, a9, 8
400e48dc:	9f6192        	s32i	a9, a1, 0x27c
400e48df:	000bc6        	j	400e4912 <_vfprintf_r+0x25ca>
400e48e2:	000000        	ill
400e48e5:	34a2c2        	movi	a12, 0x234
400e48e8:	a221b2        	l32i	a11, a1, 0x288
400e48eb:	a321a2        	l32i	a10, a1, 0x28c
400e48ee:	80cc10        	add	a12, a12, a1
400e48f1:	b86182        	s32i	a8, a1, 0x2e0
400e48f4:	b761d2        	s32i	a13, a1, 0x2dc
400e48f7:	fb3ae5        	call8	400dfca4 <__sprint_r>
400e48fa:	b82182        	l32i	a8, a1, 0x2e0
400e48fd:	b721d2        	l32i	a13, a1, 0x2dc
400e4900:	002a16        	beqz	a10, 400e4906 <_vfprintf_r+0x25be>
400e4903:	02fb86        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4906:	e4a192        	movi	a9, 0x1e4
400e4909:	10c1a2        	addi	a10, a1, 16
400e490c:	80aa90        	add	a10, a10, a9
400e490f:	9f61a2        	s32i	a10, a1, 0x27c
400e4912:	f0c882        	addi	a8, a8, -16
400e4915:	afbd91        	l32r	a9, 400d080c <_flash_cache_start+0x7f4>
400e4918:	a02d87        	blt	a13, a8, 400e48bc <_vfprintf_r+0x2574>
400e491b:	9f21e2        	l32i	a14, a1, 0x27c
400e491e:	10c1a2        	addi	a10, a1, 16
400e4921:	0e99      	s32i.n	a9, a14, 0
400e4923:	02da92        	addmi	a9, a10, 0x200
400e4926:	8f21a2        	l32i	a10, a1, 0x23c
400e4929:	1e89      	s32i.n	a8, a14, 4
400e492b:	8a8a      	add.n	a8, a10, a8
400e492d:	b989      	s32i.n	a8, a9, 44
400e492f:	a988      	l32i.n	a8, a9, 40
400e4931:	881b      	addi.n	a8, a8, 1
400e4933:	a989      	s32i.n	a8, a9, 40
400e4935:	0788e6        	bgei	a8, 8, 400e4940 <_vfprintf_r+0x25f8>
400e4938:	ee8b      	addi.n	a14, a14, 8
400e493a:	9f61e2        	s32i	a14, a1, 0x27c
400e493d:	0008c6        	j	400e4964 <_vfprintf_r+0x261c>
400e4940:	10c1e2        	addi	a14, a1, 16
400e4943:	24a282        	movi	a8, 0x224
400e4946:	a221b2        	l32i	a11, a1, 0x288
400e4949:	a321a2        	l32i	a10, a1, 0x28c
400e494c:	80ce80        	add	a12, a14, a8
400e494f:	fb3565        	call8	400dfca4 <__sprint_r>
400e4952:	002a16        	beqz	a10, 400e4958 <_vfprintf_r+0x2610>
400e4955:	02e706        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4958:	e4a182        	movi	a8, 0x1e4
400e495b:	10c192        	addi	a9, a1, 16
400e495e:	809980        	add	a9, a9, a8
400e4961:	9f6192        	s32i	a9, a1, 0x27c
400e4964:	10c1a2        	addi	a10, a1, 16
400e4967:	02da92        	addmi	a9, a10, 0x200
400e496a:	520982        	l8ui	a8, a9, 82
400e496d:	049816        	beqz	a8, 400e49ba <_vfprintf_r+0x2672>
400e4970:	9f21e2        	l32i	a14, a1, 0x27c
400e4973:	52a282        	movi	a8, 0x252
400e4976:	8a8a      	add.n	a8, a10, a8
400e4978:	0e89      	s32i.n	a8, a14, 0
400e497a:	180c      	movi.n	a8, 1
400e497c:	1e89      	s32i.n	a8, a14, 4
400e497e:	8f2182        	l32i	a8, a1, 0x23c
400e4981:	881b      	addi.n	a8, a8, 1
400e4983:	8f6182        	s32i	a8, a1, 0x23c
400e4986:	8e2182        	l32i	a8, a1, 0x238
400e4989:	881b      	addi.n	a8, a8, 1
400e498b:	8e6182        	s32i	a8, a1, 0x238
400e498e:	0788e6        	bgei	a8, 8, 400e4999 <_vfprintf_r+0x2651>
400e4991:	ee8b      	addi.n	a14, a14, 8
400e4993:	9f61e2        	s32i	a14, a1, 0x27c
400e4996:	000806        	j	400e49ba <_vfprintf_r+0x2672>
400e4999:	34a2c2        	movi	a12, 0x234
400e499c:	a221b2        	l32i	a11, a1, 0x288
400e499f:	a321a2        	l32i	a10, a1, 0x28c
400e49a2:	80cc10        	add	a12, a12, a1
400e49a5:	fb2fe5        	call8	400dfca4 <__sprint_r>
400e49a8:	002a16        	beqz	a10, 400e49ae <_vfprintf_r+0x2666>
400e49ab:	02d186        	j	400e54f5 <_vfprintf_r+0x31ad>
400e49ae:	e4a182        	movi	a8, 0x1e4
400e49b1:	10c192        	addi	a9, a1, 16
400e49b4:	809980        	add	a9, a9, a8
400e49b7:	9f6192        	s32i	a9, a1, 0x27c
400e49ba:	04c416        	beqz	a4, 400e4a0a <_vfprintf_r+0x26c2>
400e49bd:	9f2182        	l32i	a8, a1, 0x27c
400e49c0:	60a2a2        	movi	a10, 0x260
400e49c3:	41aa      	add.n	a4, a1, a10
400e49c5:	0849      	s32i.n	a4, a8, 0
400e49c7:	240c      	movi.n	a4, 2
400e49c9:	1849      	s32i.n	a4, a8, 4
400e49cb:	8f2142        	l32i	a4, a1, 0x23c
400e49ce:	442b      	addi.n	a4, a4, 2
400e49d0:	8f6142        	s32i	a4, a1, 0x23c
400e49d3:	8e2142        	l32i	a4, a1, 0x238
400e49d6:	441b      	addi.n	a4, a4, 1
400e49d8:	8e6142        	s32i	a4, a1, 0x238
400e49db:	0a84e6        	bgei	a4, 8, 400e49e9 <_vfprintf_r+0x26a1>
400e49de:	9f2142        	l32i	a4, a1, 0x27c
400e49e1:	448b      	addi.n	a4, a4, 8
400e49e3:	9f6142        	s32i	a4, a1, 0x27c
400e49e6:	000806        	j	400e4a0a <_vfprintf_r+0x26c2>
400e49e9:	34a2c2        	movi	a12, 0x234
400e49ec:	a221b2        	l32i	a11, a1, 0x288
400e49ef:	a321a2        	l32i	a10, a1, 0x28c
400e49f2:	80cc10        	add	a12, a12, a1
400e49f5:	fb2ae5        	call8	400dfca4 <__sprint_r>
400e49f8:	002a16        	beqz	a10, 400e49fe <_vfprintf_r+0x26b6>
400e49fb:	02bd86        	j	400e54f5 <_vfprintf_r+0x31ad>
400e49fe:	e4a142        	movi	a4, 0x1e4
400e4a01:	10c182        	addi	a8, a1, 16
400e4a04:	808840        	add	a8, a8, a4
400e4a07:	9f6182        	s32i	a8, a1, 0x27c
400e4a0a:	b22192        	l32i	a9, a1, 0x2c8
400e4a0d:	02e926        	beqi	a9, 128, 400e4a13 <_vfprintf_r+0x26cb>
400e4a10:	002c46        	j	400e4ac5 <_vfprintf_r+0x277d>
400e4a13:	a92192        	l32i	a9, a1, 0x2a4
400e4a16:	ac2182        	l32i	a8, a1, 0x2b0
400e4a19:	c04890        	sub	a4, a8, a9
400e4a1c:	091c      	movi.n	a9, 16
400e4a1e:	5414e6        	bgei	a4, 1, 400e4a76 <_vfprintf_r+0x272e>
400e4a21:	002806        	j	400e4ac5 <_vfprintf_r+0x277d>
400e4a24:	9f21a2        	l32i	a10, a1, 0x27c
400e4a27:	0a89      	s32i.n	a8, a10, 0
400e4a29:	8f2182        	l32i	a8, a1, 0x23c
400e4a2c:	1a99      	s32i.n	a9, a10, 4
400e4a2e:	10c882        	addi	a8, a8, 16
400e4a31:	8f6182        	s32i	a8, a1, 0x23c
400e4a34:	8e2182        	l32i	a8, a1, 0x238
400e4a37:	881b      	addi.n	a8, a8, 1
400e4a39:	8e6182        	s32i	a8, a1, 0x238
400e4a3c:	0c88e6        	bgei	a8, 8, 400e4a4c <_vfprintf_r+0x2704>
400e4a3f:	9f2182        	l32i	a8, a1, 0x27c
400e4a42:	888b      	addi.n	a8, a8, 8
400e4a44:	9f6182        	s32i	a8, a1, 0x27c
400e4a47:	000a06        	j	400e4a73 <_vfprintf_r+0x272b>
400e4a4a:	c20000        	quou	a0, a0, a0
400e4a4d:	b234a2        	lsi	f10, a4, 0x2c8
400e4a50:	a2a221        	l32r	a2, 400cd4d8 <_rtc_text_end+0xd4d8>
400e4a53:	10a321        	l32r	a2, 400a8ce0 <_iram_end+0x1b18c>
400e4a56:	80cc      	bnez.n	a0, 400e4a62 <_vfprintf_r+0x271a>
400e4a58:	b76192        	s32i	a9, a1, 0x2dc
400e4a5b:	fb24a5        	call8	400dfca4 <__sprint_r>
400e4a5e:	b72192        	l32i	a9, a1, 0x2dc
400e4a61:	002a16        	beqz	a10, 400e4a67 <_vfprintf_r+0x271f>
400e4a64:	02a346        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4a67:	e4a182        	movi	a8, 0x1e4
400e4a6a:	10c1a2        	addi	a10, a1, 16
400e4a6d:	80aa80        	add	a10, a10, a8
400e4a70:	9f61a2        	s32i	a10, a1, 0x27c
400e4a73:	f0c442        	addi	a4, a4, -16
400e4a76:	af6681        	l32r	a8, 400d0810 <_flash_cache_start+0x7f8>
400e4a79:	a72947        	blt	a9, a4, 400e4a24 <_vfprintf_r+0x26dc>
400e4a7c:	9f2192        	l32i	a9, a1, 0x27c
400e4a7f:	1949      	s32i.n	a4, a9, 4
400e4a81:	0989      	s32i.n	a8, a9, 0
400e4a83:	8f2192        	l32i	a9, a1, 0x23c
400e4a86:	494a      	add.n	a4, a9, a4
400e4a88:	8f6142        	s32i	a4, a1, 0x23c
400e4a8b:	8e2142        	l32i	a4, a1, 0x238
400e4a8e:	441b      	addi.n	a4, a4, 1
400e4a90:	8e6142        	s32i	a4, a1, 0x238
400e4a93:	0a84e6        	bgei	a4, 8, 400e4aa1 <_vfprintf_r+0x2759>
400e4a96:	9f2142        	l32i	a4, a1, 0x27c
400e4a99:	448b      	addi.n	a4, a4, 8
400e4a9b:	9f6142        	s32i	a4, a1, 0x27c
400e4a9e:	0008c6        	j	400e4ac5 <_vfprintf_r+0x277d>
400e4aa1:	10c182        	addi	a8, a1, 16
400e4aa4:	24a292        	movi	a9, 0x224
400e4aa7:	a221b2        	l32i	a11, a1, 0x288
400e4aaa:	a321a2        	l32i	a10, a1, 0x28c
400e4aad:	80c890        	add	a12, a8, a9
400e4ab0:	fb1f25        	call8	400dfca4 <__sprint_r>
400e4ab3:	002a16        	beqz	a10, 400e4ab9 <_vfprintf_r+0x2771>
400e4ab6:	028ec6        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4ab9:	e4a142        	movi	a4, 0x1e4
400e4abc:	10c182        	addi	a8, a1, 16
400e4abf:	808840        	add	a8, a8, a4
400e4ac2:	9f6182        	s32i	a8, a1, 0x27c
400e4ac5:	a52192        	l32i	a9, a1, 0x294
400e4ac8:	081c      	movi.n	a8, 16
400e4aca:	c06690        	sub	a6, a6, a9
400e4acd:	5516e6        	bgei	a6, 1, 400e4b26 <_vfprintf_r+0x27de>
400e4ad0:	002846        	j	400e4b75 <_vfprintf_r+0x282d>
400e4ad3:	219200        	srai	a9, a0, 2
400e4ad6:	9f          	.byte 0x9f
400e4ad7:	0949      	s32i.n	a4, a9, 0
400e4ad9:	8f2142        	l32i	a4, a1, 0x23c
400e4adc:	1989      	s32i.n	a8, a9, 4
400e4ade:	10c442        	addi	a4, a4, 16
400e4ae1:	8f6142        	s32i	a4, a1, 0x23c
400e4ae4:	8e2142        	l32i	a4, a1, 0x238
400e4ae7:	441b      	addi.n	a4, a4, 1
400e4ae9:	8e6142        	s32i	a4, a1, 0x238
400e4aec:	0c84e6        	bgei	a4, 8, 400e4afc <_vfprintf_r+0x27b4>
400e4aef:	9f2142        	l32i	a4, a1, 0x27c
400e4af2:	448b      	addi.n	a4, a4, 8
400e4af4:	9f6142        	s32i	a4, a1, 0x27c
400e4af7:	000a06        	j	400e4b23 <_vfprintf_r+0x27db>
400e4afa:	c20000        	quou	a0, a0, a0
400e4afd:	b234a2        	lsi	f10, a4, 0x2c8
400e4b00:	a2a221        	l32r	a2, 400cd588 <_rtc_text_end+0xd588>
400e4b03:	10a321        	l32r	a2, 400a8d90 <_iram_end+0x1b23c>
400e4b06:	80cc      	bnez.n	a0, 400e4b12 <_vfprintf_r+0x27ca>
400e4b08:	b86182        	s32i	a8, a1, 0x2e0
400e4b0b:	fb19a5        	call8	400dfca4 <__sprint_r>
400e4b0e:	b82182        	l32i	a8, a1, 0x2e0
400e4b11:	002a16        	beqz	a10, 400e4b17 <_vfprintf_r+0x27cf>
400e4b14:	027746        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4b17:	e4a142        	movi	a4, 0x1e4
400e4b1a:	10c192        	addi	a9, a1, 16
400e4b1d:	809940        	add	a9, a9, a4
400e4b20:	9f6192        	s32i	a9, a1, 0x27c
400e4b23:	f0c662        	addi	a6, a6, -16
400e4b26:	af3a41        	l32r	a4, 400d0810 <_flash_cache_start+0x7f8>
400e4b29:	a72867        	blt	a8, a6, 400e4ad4 <_vfprintf_r+0x278c>
400e4b2c:	9f2182        	l32i	a8, a1, 0x27c
400e4b2f:	0849      	s32i.n	a4, a8, 0
400e4b31:	8f2142        	l32i	a4, a1, 0x23c
400e4b34:	1869      	s32i.n	a6, a8, 4
400e4b36:	646a      	add.n	a6, a4, a6
400e4b38:	8e2142        	l32i	a4, a1, 0x238
400e4b3b:	8f6162        	s32i	a6, a1, 0x23c
400e4b3e:	441b      	addi.n	a4, a4, 1
400e4b40:	8e6142        	s32i	a4, a1, 0x238
400e4b43:	0a84e6        	bgei	a4, 8, 400e4b51 <_vfprintf_r+0x2809>
400e4b46:	9f2142        	l32i	a4, a1, 0x27c
400e4b49:	448b      	addi.n	a4, a4, 8
400e4b4b:	9f6142        	s32i	a4, a1, 0x27c
400e4b4e:	0008c6        	j	400e4b75 <_vfprintf_r+0x282d>
400e4b51:	10c162        	addi	a6, a1, 16
400e4b54:	24a282        	movi	a8, 0x224
400e4b57:	a221b2        	l32i	a11, a1, 0x288
400e4b5a:	a321a2        	l32i	a10, a1, 0x28c
400e4b5d:	80c680        	add	a12, a6, a8
400e4b60:	fb1425        	call8	400dfca4 <__sprint_r>
400e4b63:	002a16        	beqz	a10, 400e4b69 <_vfprintf_r+0x2821>
400e4b66:	0262c6        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4b69:	e4a142        	movi	a4, 0x1e4
400e4b6c:	10c192        	addi	a9, a1, 16
400e4b6f:	809940        	add	a9, a9, a4
400e4b72:	9f6192        	s32i	a9, a1, 0x27c
400e4b75:	a02142        	l32i	a4, a1, 0x280
400e4b78:	2ce487        	bbsi	a4, 8, 400e4ba8 <_vfprintf_r+0x2860>
400e4b7b:	a52192        	l32i	a9, a1, 0x294
400e4b7e:	8f2162        	l32i	a6, a1, 0x23c
400e4b81:	8e2122        	l32i	a2, a1, 0x238
400e4b84:	9f2152        	l32i	a5, a1, 0x27c
400e4b87:	a12182        	l32i	a8, a1, 0x284
400e4b8a:	669a      	add.n	a6, a6, a9
400e4b8c:	221b      	addi.n	a2, a2, 1
400e4b8e:	0589      	s32i.n	a8, a5, 0
400e4b90:	1599      	s32i.n	a9, a5, 4
400e4b92:	8f6162        	s32i	a6, a1, 0x23c
400e4b95:	8e6122        	s32i	a2, a1, 0x238
400e4b98:	0282a6        	blti	a2, 8, 400e4b9e <_vfprintf_r+0x2856>
400e4b9b:	020586        	j	400e53b5 <_vfprintf_r+0x306d>
400e4b9e:	558b      	addi.n	a5, a5, 8
400e4ba0:	9f6152        	s32i	a5, a1, 0x27c
400e4ba3:	020a86        	j	400e53d1 <_vfprintf_r+0x3089>
400e4ba6:	620000        	lsi	f0, a0, 0x188
400e4ba9:	42a621        	l32r	a2, 400b5644 <_iram_end+0x27af0>
400e4bac:	6765a0        	lsi	f10, a5, 0x19c
400e4baf:	c60224        	lsi	f2, a2, 0x318
400e4bb2:	c10191        	l32r	a9, 400d4fb8 <read_encoded_value_with_base+0xa0>
400e4bb5:	ad2c      	movi.n	a13, 42
400e4bb7:	ad2bd1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e4bba:	aa21a2        	l32i	a10, a1, 0x2a8
400e4bbd:	ab21b2        	l32i	a11, a1, 0x2ac
400e4bc0:	aef581        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e4bc3:	0008e0        	callx8	a8
400e4bc6:	107a56        	bnez	a10, 400e4cd1 <_vfprintf_r+0x2989>
400e4bc9:	af1221        	l32r	a2, 400d0814 <_flash_cache_start+0x7fc>
400e4bcc:	9f2182        	l32i	a8, a1, 0x27c
400e4bcf:	0829      	s32i.n	a2, a8, 0
400e4bd1:	120c      	movi.n	a2, 1
400e4bd3:	1829      	s32i.n	a2, a8, 4
400e4bd5:	8f2122        	l32i	a2, a1, 0x23c
400e4bd8:	221b      	addi.n	a2, a2, 1
400e4bda:	8f6122        	s32i	a2, a1, 0x23c
400e4bdd:	8e2122        	l32i	a2, a1, 0x238
400e4be0:	221b      	addi.n	a2, a2, 1
400e4be2:	8e6122        	s32i	a2, a1, 0x238
400e4be5:	0782e6        	bgei	a2, 8, 400e4bf0 <_vfprintf_r+0x28a8>
400e4be8:	888b      	addi.n	a8, a8, 8
400e4bea:	9f6182        	s32i	a8, a1, 0x27c
400e4bed:	000746        	j	400e4c0e <_vfprintf_r+0x28c6>
400e4bf0:	34a2c2        	movi	a12, 0x234
400e4bf3:	a221b2        	l32i	a11, a1, 0x288
400e4bf6:	a321a2        	l32i	a10, a1, 0x28c
400e4bf9:	cc1a      	add.n	a12, a12, a1
400e4bfb:	fb0aa5        	call8	400dfca4 <__sprint_r>
400e4bfe:	1a8c      	beqz.n	a10, 400e4c03 <_vfprintf_r+0x28bb>
400e4c00:	023c46        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4c03:	e4a122        	movi	a2, 0x1e4
400e4c06:	10c132        	addi	a3, a1, 16
400e4c09:	332a      	add.n	a3, a3, a2
400e4c0b:	9f6132        	s32i	a3, a1, 0x27c
400e4c0e:	952122        	l32i	a2, a1, 0x254
400e4c11:	a72142        	l32i	a4, a1, 0x29c
400e4c14:	082247        	blt	a2, a4, 400e4c20 <_vfprintf_r+0x28d8>
400e4c17:	a02152        	l32i	a5, a1, 0x280
400e4c1a:	02e507        	bbsi	a5, 0, 400e4c20 <_vfprintf_r+0x28d8>
400e4c1d:	01ec06        	j	400e53d1 <_vfprintf_r+0x3089>
400e4c20:	af2192        	l32i	a9, a1, 0x2bc
400e4c23:	8f2122        	l32i	a2, a1, 0x23c
400e4c26:	9f2162        	l32i	a6, a1, 0x27c
400e4c29:	229a      	add.n	a2, a2, a9
400e4c2b:	8f6122        	s32i	a2, a1, 0x23c
400e4c2e:	8e2122        	l32i	a2, a1, 0x238
400e4c31:	b12182        	l32i	a8, a1, 0x2c4
400e4c34:	221b      	addi.n	a2, a2, 1
400e4c36:	0689      	s32i.n	a8, a6, 0
400e4c38:	1699      	s32i.n	a9, a6, 4
400e4c3a:	8e6122        	s32i	a2, a1, 0x238
400e4c3d:	0782e6        	bgei	a2, 8, 400e4c48 <_vfprintf_r+0x2900>
400e4c40:	668b      	addi.n	a6, a6, 8
400e4c42:	9f6162        	s32i	a6, a1, 0x27c
400e4c45:	000806        	j	400e4c69 <_vfprintf_r+0x2921>
400e4c48:	34a2c2        	movi	a12, 0x234
400e4c4b:	a221b2        	l32i	a11, a1, 0x288
400e4c4e:	a321a2        	l32i	a10, a1, 0x28c
400e4c51:	80cc10        	add	a12, a12, a1
400e4c54:	fb04e5        	call8	400dfca4 <__sprint_r>
400e4c57:	002a16        	beqz	a10, 400e4c5d <_vfprintf_r+0x2915>
400e4c5a:	0225c6        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4c5d:	e4a122        	movi	a2, 0x1e4
400e4c60:	10c132        	addi	a3, a1, 16
400e4c63:	803320        	add	a3, a3, a2
400e4c66:	9f6132        	s32i	a3, a1, 0x27c
400e4c69:	a72142        	l32i	a4, a1, 0x29c
400e4c6c:	240b      	addi.n	a2, a4, -1
400e4c6e:	041c      	movi.n	a4, 16
400e4c70:	5412e6        	bgei	a2, 1, 400e4cc8 <_vfprintf_r+0x2980>
400e4c73:	01d686        	j	400e53d1 <_vfprintf_r+0x3089>
400e4c76:	520000        	lsi	f0, a0, 0x148
400e4c79:	629f21        	l32r	a2, 400bd6f8 <_iram_end+0x2fba4>
400e4c7c:	3910c1        	l32r	a12, 400b30bc <_iram_end+0x25568>
400e4c7f:	213205        	call0	40105fa0 <_etext+0x196c3>
400e4c82:	8f          	.byte 0x8f
400e4c83:	1549      	s32i.n	a4, a5, 4
400e4c85:	10c332        	addi	a3, a3, 16
400e4c88:	8f6132        	s32i	a3, a1, 0x23c
400e4c8b:	8e2132        	l32i	a3, a1, 0x238
400e4c8e:	02d652        	addmi	a5, a6, 0x200
400e4c91:	331b      	addi.n	a3, a3, 1
400e4c93:	8e6132        	s32i	a3, a1, 0x238
400e4c96:	0a83e6        	bgei	a3, 8, 400e4ca4 <_vfprintf_r+0x295c>
400e4c99:	9f2182        	l32i	a8, a1, 0x27c
400e4c9c:	888b      	addi.n	a8, a8, 8
400e4c9e:	9f6182        	s32i	a8, a1, 0x27c
400e4ca1:	000806        	j	400e4cc5 <_vfprintf_r+0x297d>
400e4ca4:	34a2c2        	movi	a12, 0x234
400e4ca7:	a221b2        	l32i	a11, a1, 0x288
400e4caa:	a321a2        	l32i	a10, a1, 0x28c
400e4cad:	80cc10        	add	a12, a12, a1
400e4cb0:	faff25        	call8	400dfca4 <__sprint_r>
400e4cb3:	002a16        	beqz	a10, 400e4cb9 <_vfprintf_r+0x2971>
400e4cb6:	020ec6        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4cb9:	e4a132        	movi	a3, 0x1e4
400e4cbc:	10c192        	addi	a9, a1, 16
400e4cbf:	809930        	add	a9, a9, a3
400e4cc2:	9f6192        	s32i	a9, a1, 0x27c
400e4cc5:	f0c222        	addi	a2, a2, -16
400e4cc8:	aed231        	l32r	a3, 400d0810 <_flash_cache_start+0x7f8>
400e4ccb:	a92427        	blt	a4, a2, 400e4c78 <_vfprintf_r+0x2930>
400e4cce:	013d06        	j	400e51c6 <_vfprintf_r+0x2e7e>
400e4cd1:	952142        	l32i	a4, a1, 0x254
400e4cd4:	0214a6        	blti	a4, 1, 400e4cda <_vfprintf_r+0x2992>
400e4cd7:	005046        	j	400e4e1c <_vfprintf_r+0x2ad4>
400e4cda:	aece21        	l32r	a2, 400d0814 <_flash_cache_start+0x7fc>
400e4cdd:	9f2142        	l32i	a4, a1, 0x27c
400e4ce0:	10c152        	addi	a5, a1, 16
400e4ce3:	0429      	s32i.n	a2, a4, 0
400e4ce5:	120c      	movi.n	a2, 1
400e4ce7:	1429      	s32i.n	a2, a4, 4
400e4ce9:	8f2122        	l32i	a2, a1, 0x23c
400e4cec:	221b      	addi.n	a2, a2, 1
400e4cee:	8f6122        	s32i	a2, a1, 0x23c
400e4cf1:	8e2122        	l32i	a2, a1, 0x238
400e4cf4:	221b      	addi.n	a2, a2, 1
400e4cf6:	8e6122        	s32i	a2, a1, 0x238
400e4cf9:	0782e6        	bgei	a2, 8, 400e4d04 <_vfprintf_r+0x29bc>
400e4cfc:	448b      	addi.n	a4, a4, 8
400e4cfe:	9f6142        	s32i	a4, a1, 0x27c
400e4d01:	000806        	j	400e4d25 <_vfprintf_r+0x29dd>
400e4d04:	34a2c2        	movi	a12, 0x234
400e4d07:	a221b2        	l32i	a11, a1, 0x288
400e4d0a:	a321a2        	l32i	a10, a1, 0x28c
400e4d0d:	80cc10        	add	a12, a12, a1
400e4d10:	faf925        	call8	400dfca4 <__sprint_r>
400e4d13:	002a16        	beqz	a10, 400e4d19 <_vfprintf_r+0x29d1>
400e4d16:	01f6c6        	j	400e54f5 <_vfprintf_r+0x31ad>
400e4d19:	e4a122        	movi	a2, 0x1e4
400e4d1c:	10c162        	addi	a6, a1, 16
400e4d1f:	806620        	add	a6, a6, a2
400e4d22:	9f6162        	s32i	a6, a1, 0x27c
400e4d25:	952122        	l32i	a2, a1, 0x254
400e4d28:	a72182        	l32i	a8, a1, 0x29c
400e4d2b:	202820        	or	a2, a8, a2
400e4d2e:	72cc      	bnez.n	a2, 400e4d39 <_vfprintf_r+0x29f1>
400e4d30:	a02192        	l32i	a9, a1, 0x280
400e4d33:	02e907        	bbsi	a9, 0, 400e4d39 <_vfprintf_r+0x29f1>
400e4d36:	01a5c6        	j	400e53d1 <_vfprintf_r+0x3089>
400e4d39:	9f2122        	l32i	a2, a1, 0x27c
400e4d3c:	af2142        	l32i	a4, a1, 0x2bc
400e4d3f:	b12132        	l32i	a3, a1, 0x2c4
400e4d42:	1249      	s32i.n	a4, a2, 4
400e4d44:	0239      	s32i.n	a3, a2, 0
400e4d46:	8f2122        	l32i	a2, a1, 0x23c
400e4d49:	10c152        	addi	a5, a1, 16
400e4d4c:	224a      	add.n	a2, a2, a4
400e4d4e:	8f6122        	s32i	a2, a1, 0x23c
400e4d51:	8e2122        	l32i	a2, a1, 0x238
400e4d54:	221b      	addi.n	a2, a2, 1
400e4d56:	8e6122        	s32i	a2, a1, 0x238
400e4d59:	0782e6        	bgei	a2, 8, 400e4d64 <_vfprintf_r+0x2a1c>
400e4d5c:	9f2162        	l32i	a6, a1, 0x27c
400e4d5f:	268b      	addi.n	a2, a6, 8
400e4d61:	000686        	j	400e4d7f <_vfprintf_r+0x2a37>
400e4d64:	34a2c2        	movi	a12, 0x234
400e4d67:	a221b2        	l32i	a11, a1, 0x288
400e4d6a:	a321a2        	l32i	a10, a1, 0x28c
400e4d6d:	80cc10        	add	a12, a12, a1
400e4d70:	faf325        	call8	400dfca4 <__sprint_r>
400e4d73:	77ea56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4d76:	e4a122        	movi	a2, 0x1e4
400e4d79:	10c182        	addi	a8, a1, 16
400e4d7c:	802820        	add	a2, a8, a2
400e4d7f:	952132        	l32i	a3, a1, 0x254
400e4d82:	10a042        	movi	a4, 16
400e4d85:	603030        	neg	a3, a3
400e4d88:	4013e6        	bgei	a3, 1, 400e4dcc <_vfprintf_r+0x2a84>
400e4d8b:	002046        	j	400e4e10 <_vfprintf_r+0x2ac8>
400e4d8e:	000000        	ill
400e4d91:	8f2152        	l32i	a5, a1, 0x23c
400e4d94:	1249      	s32i.n	a4, a2, 4
400e4d96:	10c552        	addi	a5, a5, 16
400e4d99:	8f6152        	s32i	a5, a1, 0x23c
400e4d9c:	8e2152        	l32i	a5, a1, 0x238
400e4d9f:	10c192        	addi	a9, a1, 16
400e4da2:	551b      	addi.n	a5, a5, 1
400e4da4:	8e6152        	s32i	a5, a1, 0x238
400e4da7:	02d962        	addmi	a6, a9, 0x200
400e4daa:	228b      	addi.n	a2, a2, 8
400e4dac:	1985a6        	blti	a5, 8, 400e4dc9 <_vfprintf_r+0x2a81>
400e4daf:	34a2c2        	movi	a12, 0x234
400e4db2:	a221b2        	l32i	a11, a1, 0x288
400e4db5:	a321a2        	l32i	a10, a1, 0x28c
400e4db8:	cc1a      	add.n	a12, a12, a1
400e4dba:	faeea5        	call8	400dfca4 <__sprint_r>
400e4dbd:	734a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4dc0:	e4a122        	movi	a2, 0x1e4
400e4dc3:	10c1a2        	addi	a10, a1, 16
400e4dc6:	802a20        	add	a2, a10, a2
400e4dc9:	f0c332        	addi	a3, a3, -16
400e4dcc:	ae9151        	l32r	a5, 400d0810 <_flash_cache_start+0x7f8>
400e4dcf:	006252        	s32i	a5, a2, 0
400e4dd2:	bb2437        	blt	a4, a3, 400e4d91 <_vfprintf_r+0x2a49>
400e4dd5:	8f2152        	l32i	a5, a1, 0x23c
400e4dd8:	016232        	s32i	a3, a2, 4
400e4ddb:	803530        	add	a3, a5, a3
400e4dde:	8f6132        	s32i	a3, a1, 0x23c
400e4de1:	8e2132        	l32i	a3, a1, 0x238
400e4de4:	10c1e2        	addi	a14, a1, 16
400e4de7:	331b      	addi.n	a3, a3, 1
400e4de9:	8e6132        	s32i	a3, a1, 0x238
400e4dec:	02de42        	addmi	a4, a14, 0x200
400e4def:	228b      	addi.n	a2, a2, 8
400e4df1:	1b83a6        	blti	a3, 8, 400e4e10 <_vfprintf_r+0x2ac8>
400e4df4:	10c122        	addi	a2, a1, 16
400e4df7:	24a232        	movi	a3, 0x224
400e4dfa:	a221b2        	l32i	a11, a1, 0x288
400e4dfd:	a321a2        	l32i	a10, a1, 0x28c
400e4e00:	c23a      	add.n	a12, a2, a3
400e4e02:	faea25        	call8	400dfca4 <__sprint_r>
400e4e05:	6eca56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4e08:	e4a122        	movi	a2, 0x1e4
400e4e0b:	10c142        	addi	a4, a1, 16
400e4e0e:	242a      	add.n	a2, a4, a2
400e4e10:	a12182        	l32i	a8, a1, 0x284
400e4e13:	a72192        	l32i	a9, a1, 0x29c
400e4e16:	0289      	s32i.n	a8, a2, 0
400e4e18:	015d86        	j	400e5392 <_vfprintf_r+0x304a>
400e4e1b:	216200        	srai	a6, a0, 2
400e4e1e:	4260a7        	bbci	a0, 10, 400e4e64 <_vfprintf_r+0x2b1c>
400e4e21:	14a643        	lsi	f4, a6, 80
400e4e24:	216243        	lsi	f4, a2, 132
400e4e27:	8f          	.byte 0x8f
400e4e28:	9f2182        	l32i	a8, a1, 0x27c
400e4e2b:	664a      	add.n	a6, a6, a4
400e4e2d:	8f6162        	s32i	a6, a1, 0x23c
400e4e30:	8e2162        	l32i	a6, a1, 0x238
400e4e33:	a12192        	l32i	a9, a1, 0x284
400e4e36:	661b      	addi.n	a6, a6, 1
400e4e38:	0899      	s32i.n	a9, a8, 0
400e4e3a:	1849      	s32i.n	a4, a8, 4
400e4e3c:	8e6162        	s32i	a6, a1, 0x238
400e4e3f:	0a86e6        	bgei	a6, 8, 400e4e4d <_vfprintf_r+0x2b05>
400e4e42:	9f2162        	l32i	a6, a1, 0x27c
400e4e45:	668b      	addi.n	a6, a6, 8
400e4e47:	9f6162        	s32i	a6, a1, 0x27c
400e4e4a:	0006c6        	j	400e4e69 <_vfprintf_r+0x2b21>
400e4e4d:	34a2c2        	movi	a12, 0x234
400e4e50:	a221b2        	l32i	a11, a1, 0x288
400e4e53:	a321a2        	l32i	a10, a1, 0x28c
400e4e56:	cc1a      	add.n	a12, a12, a1
400e4e58:	fae4a5        	call8	400dfca4 <__sprint_r>
400e4e5b:	696a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4e5e:	e4a162        	movi	a6, 0x1e4
400e4e61:	10c182        	addi	a8, a1, 16
400e4e64:	886a      	add.n	a8, a8, a6
400e4e66:	9f6182        	s32i	a8, a1, 0x27c
400e4e69:	060c      	movi.n	a6, 0
400e4e6b:	534460        	max	a4, a4, a6
400e4e6e:	c04240        	sub	a4, a2, a4
400e4e71:	081c      	movi.n	a8, 16
400e4e73:	5214e6        	bgei	a4, 1, 400e4ec9 <_vfprintf_r+0x2b81>
400e4e76:	0026c6        	j	400e4f15 <_vfprintf_r+0x2bcd>
400e4e79:	000000        	ill
400e4e7c:	9f2192        	l32i	a9, a1, 0x27c
400e4e7f:	0969      	s32i.n	a6, a9, 0
400e4e81:	8f2162        	l32i	a6, a1, 0x23c
400e4e84:	1989      	s32i.n	a8, a9, 4
400e4e86:	10c662        	addi	a6, a6, 16
400e4e89:	8f6162        	s32i	a6, a1, 0x23c
400e4e8c:	8e2162        	l32i	a6, a1, 0x238
400e4e8f:	661b      	addi.n	a6, a6, 1
400e4e91:	8e6162        	s32i	a6, a1, 0x238
400e4e94:	0c86e6        	bgei	a6, 8, 400e4ea4 <_vfprintf_r+0x2b5c>
400e4e97:	9f2162        	l32i	a6, a1, 0x27c
400e4e9a:	668b      	addi.n	a6, a6, 8
400e4e9c:	9f6162        	s32i	a6, a1, 0x27c
400e4e9f:	0008c6        	j	400e4ec6 <_vfprintf_r+0x2b7e>
400e4ea2:	c20000        	quou	a0, a0, a0
400e4ea5:	b234a2        	lsi	f10, a4, 0x2c8
400e4ea8:	a2a221        	l32r	a2, 400cd930 <_rtc_text_end+0xd930>
400e4eab:	1aa321        	l32r	a2, 400ab938 <_iram_end+0x1dde4>
400e4eae:	82cc      	bnez.n	a2, 400e4eba <_vfprintf_r+0x2b72>
400e4eb0:	25b861        	l32r	a6, 400ae590 <_iram_end+0x20a3c>
400e4eb3:	df          	.byte 0xdf
400e4eb4:	82fa      	add.n	a8, a2, a15
400e4eb6:	56b821        	l32r	a2, 400ba998 <_iram_end+0x2ce44>
400e4eb9:	639a      	add.n	a6, a3, a9
400e4ebb:	e4a162        	movi	a6, 0x1e4
400e4ebe:	10c192        	addi	a9, a1, 16
400e4ec1:	996a      	add.n	a9, a9, a6
400e4ec3:	9f6192        	s32i	a9, a1, 0x27c
400e4ec6:	f0c442        	addi	a4, a4, -16
400e4ec9:	ae5161        	l32r	a6, 400d0810 <_flash_cache_start+0x7f8>
400e4ecc:	ac2847        	blt	a8, a4, 400e4e7c <_vfprintf_r+0x2b34>
400e4ecf:	9f2182        	l32i	a8, a1, 0x27c
400e4ed2:	1849      	s32i.n	a4, a8, 4
400e4ed4:	0869      	s32i.n	a6, a8, 0
400e4ed6:	8f2182        	l32i	a8, a1, 0x23c
400e4ed9:	484a      	add.n	a4, a8, a4
400e4edb:	8f6142        	s32i	a4, a1, 0x23c
400e4ede:	8e2142        	l32i	a4, a1, 0x238
400e4ee1:	441b      	addi.n	a4, a4, 1
400e4ee3:	8e6142        	s32i	a4, a1, 0x238
400e4ee6:	0a84e6        	bgei	a4, 8, 400e4ef4 <_vfprintf_r+0x2bac>
400e4ee9:	9f2142        	l32i	a4, a1, 0x27c
400e4eec:	448b      	addi.n	a4, a4, 8
400e4eee:	9f6142        	s32i	a4, a1, 0x27c
400e4ef1:	000806        	j	400e4f15 <_vfprintf_r+0x2bcd>
400e4ef4:	10c162        	addi	a6, a1, 16
400e4ef7:	24a282        	movi	a8, 0x224
400e4efa:	a221b2        	l32i	a11, a1, 0x288
400e4efd:	a321a2        	l32i	a10, a1, 0x28c
400e4f00:	80c680        	add	a12, a6, a8
400e4f03:	fada25        	call8	400dfca4 <__sprint_r>
400e4f06:	5eba56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4f09:	e4a142        	movi	a4, 0x1e4
400e4f0c:	10c192        	addi	a9, a1, 16
400e4f0f:	809940        	add	a9, a9, a4
400e4f12:	9f6192        	s32i	a9, a1, 0x27c
400e4f15:	a12142        	l32i	a4, a1, 0x284
400e4f18:	a02162        	l32i	a6, a1, 0x280
400e4f1b:	802420        	add	a2, a4, a2
400e4f1e:	e4a142        	movi	a4, 0x1e4
400e4f21:	0266a7        	bbci	a6, 10, 400e4f27 <_vfprintf_r+0x2bdf>
400e4f24:	005a06        	j	400e5090 <_vfprintf_r+0x2d48>
400e4f27:	006086        	j	400e50ad <_vfprintf_r+0x2d65>
400e4f2a:	338c      	beqz.n	a3, 400e4f31 <_vfprintf_r+0x2be9>
400e4f2c:	330b      	addi.n	a3, a3, -1
400e4f2e:	000246        	j	400e4f3b <_vfprintf_r+0x2bf3>
400e4f31:	ad2182        	l32i	a8, a1, 0x2b4
400e4f34:	550b      	addi.n	a5, a5, -1
400e4f36:	880b      	addi.n	a8, a8, -1
400e4f38:	ad6182        	s32i	a8, a1, 0x2b4
400e4f3b:	b02182        	l32i	a8, a1, 0x2c0
400e4f3e:	9f2192        	l32i	a9, a1, 0x27c
400e4f41:	b32162        	l32i	a6, a1, 0x2cc
400e4f44:	1989      	s32i.n	a8, a9, 4
400e4f46:	0969      	s32i.n	a6, a9, 0
400e4f48:	10c192        	addi	a9, a1, 16
400e4f4b:	02d982        	addmi	a8, a9, 0x200
400e4f4e:	8f2162        	l32i	a6, a1, 0x23c
400e4f51:	b02192        	l32i	a9, a1, 0x2c0
400e4f54:	669a      	add.n	a6, a6, a9
400e4f56:	b869      	s32i.n	a6, a8, 44
400e4f58:	a868      	l32i.n	a6, a8, 40
400e4f5a:	661b      	addi.n	a6, a6, 1
400e4f5c:	a869      	s32i.n	a6, a8, 40
400e4f5e:	0a86e6        	bgei	a6, 8, 400e4f6c <_vfprintf_r+0x2c24>
400e4f61:	9f2162        	l32i	a6, a1, 0x27c
400e4f64:	668b      	addi.n	a6, a6, 8
400e4f66:	9f6162        	s32i	a6, a1, 0x27c
400e4f69:	000686        	j	400e4f87 <_vfprintf_r+0x2c3f>
400e4f6c:	34a2c2        	movi	a12, 0x234
400e4f6f:	a221b2        	l32i	a11, a1, 0x288
400e4f72:	a321a2        	l32i	a10, a1, 0x28c
400e4f75:	80cc10        	add	a12, a12, a1
400e4f78:	fad2a5        	call8	400dfca4 <__sprint_r>
400e4f7b:	576a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4f7e:	10c182        	addi	a8, a1, 16
400e4f81:	808840        	add	a8, a8, a4
400e4f84:	9f6182        	s32i	a8, a1, 0x27c
400e4f87:	a12192        	l32i	a9, a1, 0x284
400e4f8a:	a72182        	l32i	a8, a1, 0x29c
400e4f8d:	806980        	add	a6, a9, a8
400e4f90:	ad2192        	l32i	a9, a1, 0x2b4
400e4f93:	c06620        	sub	a6, a6, a2
400e4f96:	000982        	l8ui	a8, a9, 0
400e4f99:	436680        	min	a6, a6, a8
400e4f9c:	3d16a6        	blti	a6, 1, 400e4fdd <_vfprintf_r+0x2c95>
400e4f9f:	9f2182        	l32i	a8, a1, 0x27c
400e4fa2:	0829      	s32i.n	a2, a8, 0
400e4fa4:	1869      	s32i.n	a6, a8, 4
400e4fa6:	8f2182        	l32i	a8, a1, 0x23c
400e4fa9:	886a      	add.n	a8, a8, a6
400e4fab:	8f6182        	s32i	a8, a1, 0x23c
400e4fae:	8e2182        	l32i	a8, a1, 0x238
400e4fb1:	881b      	addi.n	a8, a8, 1
400e4fb3:	8e6182        	s32i	a8, a1, 0x238
400e4fb6:	0a88e6        	bgei	a8, 8, 400e4fc4 <_vfprintf_r+0x2c7c>
400e4fb9:	9f2182        	l32i	a8, a1, 0x27c
400e4fbc:	888b      	addi.n	a8, a8, 8
400e4fbe:	9f6182        	s32i	a8, a1, 0x27c
400e4fc1:	000606        	j	400e4fdd <_vfprintf_r+0x2c95>
400e4fc4:	34a2c2        	movi	a12, 0x234
400e4fc7:	a221b2        	l32i	a11, a1, 0x288
400e4fca:	a321a2        	l32i	a10, a1, 0x28c
400e4fcd:	cc1a      	add.n	a12, a12, a1
400e4fcf:	facd65        	call8	400dfca4 <__sprint_r>
400e4fd2:	51fa56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e4fd5:	10c192        	addi	a9, a1, 16
400e4fd8:	994a      	add.n	a9, a9, a4
400e4fda:	9f6192        	s32i	a9, a1, 0x27c
400e4fdd:	ad2192        	l32i	a9, a1, 0x2b4
400e4fe0:	080c      	movi.n	a8, 0
400e4fe2:	536680        	max	a6, a6, a8
400e4fe5:	000982        	l8ui	a8, a9, 0
400e4fe8:	091c      	movi.n	a9, 16
400e4fea:	c06860        	sub	a6, a8, a6
400e4fed:	4c16e6        	bgei	a6, 1, 400e503d <_vfprintf_r+0x2cf5>
400e4ff0:	0024c6        	j	400e5087 <_vfprintf_r+0x2d3f>
400e4ff3:	000000        	ill
400e4ff6:	9f21a2        	l32i	a10, a1, 0x27c
400e4ff9:	0a89      	s32i.n	a8, a10, 0
400e4ffb:	8f2182        	l32i	a8, a1, 0x23c
400e4ffe:	1a99      	s32i.n	a9, a10, 4
400e5000:	10c882        	addi	a8, a8, 16
400e5003:	8f6182        	s32i	a8, a1, 0x23c
400e5006:	8e2182        	l32i	a8, a1, 0x238
400e5009:	881b      	addi.n	a8, a8, 1
400e500b:	8e6182        	s32i	a8, a1, 0x238
400e500e:	0788e6        	bgei	a8, 8, 400e5019 <_vfprintf_r+0x2cd1>
400e5011:	9f2182        	l32i	a8, a1, 0x27c
400e5014:	888b      	addi.n	a8, a8, 8
400e5016:	000746        	j	400e5037 <_vfprintf_r+0x2cef>
400e5019:	34a2c2        	movi	a12, 0x234
400e501c:	a221b2        	l32i	a11, a1, 0x288
400e501f:	a321a2        	l32i	a10, a1, 0x28c
400e5022:	80cc10        	add	a12, a12, a1
400e5025:	b76192        	s32i	a9, a1, 0x2dc
400e5028:	fac7a5        	call8	400dfca4 <__sprint_r>
400e502b:	b72192        	l32i	a9, a1, 0x2dc
400e502e:	4c3a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5031:	10c182        	addi	a8, a1, 16
400e5034:	808840        	add	a8, a8, a4
400e5037:	9f6182        	s32i	a8, a1, 0x27c
400e503a:	f0c662        	addi	a6, a6, -16
400e503d:	adf481        	l32r	a8, 400d0810 <_flash_cache_start+0x7f8>
400e5040:	b22967        	blt	a9, a6, 400e4ff6 <_vfprintf_r+0x2cae>
400e5043:	9f2192        	l32i	a9, a1, 0x27c
400e5046:	016962        	s32i	a6, a9, 4
400e5049:	0989      	s32i.n	a8, a9, 0
400e504b:	8f2192        	l32i	a9, a1, 0x23c
400e504e:	696a      	add.n	a6, a9, a6
400e5050:	8f6162        	s32i	a6, a1, 0x23c
400e5053:	8e2162        	l32i	a6, a1, 0x238
400e5056:	661b      	addi.n	a6, a6, 1
400e5058:	8e6162        	s32i	a6, a1, 0x238
400e505b:	0a86e6        	bgei	a6, 8, 400e5069 <_vfprintf_r+0x2d21>
400e505e:	9f2162        	l32i	a6, a1, 0x27c
400e5061:	668b      	addi.n	a6, a6, 8
400e5063:	000746        	j	400e5084 <_vfprintf_r+0x2d3c>
400e5066:	000000        	ill
400e5069:	10c182        	addi	a8, a1, 16
400e506c:	24a292        	movi	a9, 0x224
400e506f:	a221b2        	l32i	a11, a1, 0x288
400e5072:	a321a2        	l32i	a10, a1, 0x28c
400e5075:	80c890        	add	a12, a8, a9
400e5078:	fac2a5        	call8	400dfca4 <__sprint_r>
400e507b:	476a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e507e:	10c162        	addi	a6, a1, 16
400e5081:	806640        	add	a6, a6, a4
400e5084:	9f6162        	s32i	a6, a1, 0x27c
400e5087:	ad2182        	l32i	a8, a1, 0x2b4
400e508a:	000862        	l8ui	a6, a8, 0
400e508d:	802260        	add	a2, a2, a6
400e5090:	316f50        	srai	a6, a5, 31
400e5093:	c06650        	sub	a6, a6, a5
400e5096:	e90696        	bltz	a6, 400e4f2a <_vfprintf_r+0x2be2>
400e5099:	316f30        	srai	a6, a3, 31
400e509c:	c06630        	sub	a6, a6, a3
400e509f:	e87696        	bltz	a6, 400e4f2a <_vfprintf_r+0x2be2>
400e50a2:	a12192        	l32i	a9, a1, 0x284
400e50a5:	a72142        	l32i	a4, a1, 0x29c
400e50a8:	394a      	add.n	a3, a9, a4
400e50aa:	632230        	minu	a2, a2, a3
400e50ad:	952132        	l32i	a3, a1, 0x254
400e50b0:	a72152        	l32i	a5, a1, 0x29c
400e50b3:	052357        	blt	a3, a5, 400e50bc <_vfprintf_r+0x2d74>
400e50b6:	a02162        	l32i	a6, a1, 0x280
400e50b9:	476607        	bbci	a6, 0, 400e5104 <_vfprintf_r+0x2dbc>
400e50bc:	9f2182        	l32i	a8, a1, 0x27c
400e50bf:	af2132        	l32i	a3, a1, 0x2bc
400e50c2:	af2162        	l32i	a6, a1, 0x2bc
400e50c5:	1839      	s32i.n	a3, a8, 4
400e50c7:	8f2132        	l32i	a3, a1, 0x23c
400e50ca:	b12192        	l32i	a9, a1, 0x2c4
400e50cd:	336a      	add.n	a3, a3, a6
400e50cf:	8f6132        	s32i	a3, a1, 0x23c
400e50d2:	8e2132        	l32i	a3, a1, 0x238
400e50d5:	0899      	s32i.n	a9, a8, 0
400e50d7:	331b      	addi.n	a3, a3, 1
400e50d9:	10c152        	addi	a5, a1, 16
400e50dc:	8e6132        	s32i	a3, a1, 0x238
400e50df:	02d542        	addmi	a4, a5, 0x200
400e50e2:	888b      	addi.n	a8, a8, 8
400e50e4:	1983a6        	blti	a3, 8, 400e5101 <_vfprintf_r+0x2db9>
400e50e7:	34a2c2        	movi	a12, 0x234
400e50ea:	a221b2        	l32i	a11, a1, 0x288
400e50ed:	a321a2        	l32i	a10, a1, 0x28c
400e50f0:	cc1a      	add.n	a12, a12, a1
400e50f2:	fabb25        	call8	400dfca4 <__sprint_r>
400e50f5:	3fca56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e50f8:	e4a132        	movi	a3, 0x1e4
400e50fb:	10c182        	addi	a8, a1, 16
400e50fe:	808830        	add	a8, a8, a3
400e5101:	9f6182        	s32i	a8, a1, 0x27c
400e5104:	a72132        	l32i	a3, a1, 0x29c
400e5107:	a12192        	l32i	a9, a1, 0x284
400e510a:	a72152        	l32i	a5, a1, 0x29c
400e510d:	493a      	add.n	a4, a9, a3
400e510f:	952132        	l32i	a3, a1, 0x254
400e5112:	c04420        	sub	a4, a4, a2
400e5115:	c03530        	sub	a3, a5, a3
400e5118:	434430        	min	a4, a4, a3
400e511b:	3d14a6        	blti	a4, 1, 400e515c <_vfprintf_r+0x2e14>
400e511e:	9f2162        	l32i	a6, a1, 0x27c
400e5121:	0629      	s32i.n	a2, a6, 0
400e5123:	8f2122        	l32i	a2, a1, 0x23c
400e5126:	1649      	s32i.n	a4, a6, 4
400e5128:	224a      	add.n	a2, a2, a4
400e512a:	8f6122        	s32i	a2, a1, 0x23c
400e512d:	8e2122        	l32i	a2, a1, 0x238
400e5130:	221b      	addi.n	a2, a2, 1
400e5132:	8e6122        	s32i	a2, a1, 0x238
400e5135:	0782e6        	bgei	a2, 8, 400e5140 <_vfprintf_r+0x2df8>
400e5138:	668b      	addi.n	a6, a6, 8
400e513a:	9f6162        	s32i	a6, a1, 0x27c
400e513d:	0006c6        	j	400e515c <_vfprintf_r+0x2e14>
400e5140:	34a2c2        	movi	a12, 0x234
400e5143:	a221b2        	l32i	a11, a1, 0x288
400e5146:	a321a2        	l32i	a10, a1, 0x28c
400e5149:	cc1a      	add.n	a12, a12, a1
400e514b:	fab5a5        	call8	400dfca4 <__sprint_r>
400e514e:	3a3a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5151:	e4a122        	movi	a2, 0x1e4
400e5154:	10c192        	addi	a9, a1, 16
400e5157:	992a      	add.n	a9, a9, a2
400e5159:	9f6192        	s32i	a9, a1, 0x27c
400e515c:	020c      	movi.n	a2, 0
400e515e:	534420        	max	a4, a4, a2
400e5161:	a72132        	l32i	a3, a1, 0x29c
400e5164:	952122        	l32i	a2, a1, 0x254
400e5167:	c02320        	sub	a2, a3, a2
400e516a:	c02240        	sub	a2, a2, a4
400e516d:	041c      	movi.n	a4, 16
400e516f:	4d12e6        	bgei	a2, 1, 400e51c0 <_vfprintf_r+0x2e78>
400e5172:	0096c6        	j	400e53d1 <_vfprintf_r+0x3089>
400e5175:	9f2152        	l32i	a5, a1, 0x27c
400e5178:	10c162        	addi	a6, a1, 16
400e517b:	0539      	s32i.n	a3, a5, 0
400e517d:	8f2132        	l32i	a3, a1, 0x23c
400e5180:	1549      	s32i.n	a4, a5, 4
400e5182:	10c332        	addi	a3, a3, 16
400e5185:	8f6132        	s32i	a3, a1, 0x23c
400e5188:	8e2132        	l32i	a3, a1, 0x238
400e518b:	02d652        	addmi	a5, a6, 0x200
400e518e:	331b      	addi.n	a3, a3, 1
400e5190:	8e6132        	s32i	a3, a1, 0x238
400e5193:	0a83e6        	bgei	a3, 8, 400e51a1 <_vfprintf_r+0x2e59>
400e5196:	9f2182        	l32i	a8, a1, 0x27c
400e5199:	888b      	addi.n	a8, a8, 8
400e519b:	9f6182        	s32i	a8, a1, 0x27c
400e519e:	0006c6        	j	400e51bd <_vfprintf_r+0x2e75>
400e51a1:	34a2c2        	movi	a12, 0x234
400e51a4:	a221b2        	l32i	a11, a1, 0x288
400e51a7:	a321a2        	l32i	a10, a1, 0x28c
400e51aa:	cc1a      	add.n	a12, a12, a1
400e51ac:	faaf65        	call8	400dfca4 <__sprint_r>
400e51af:	342a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e51b2:	e4a132        	movi	a3, 0x1e4
400e51b5:	10c192        	addi	a9, a1, 16
400e51b8:	993a      	add.n	a9, a9, a3
400e51ba:	9f6192        	s32i	a9, a1, 0x27c
400e51bd:	f0c222        	addi	a2, a2, -16
400e51c0:	ad9431        	l32r	a3, 400d0810 <_flash_cache_start+0x7f8>
400e51c3:	ae2427        	blt	a4, a2, 400e5175 <_vfprintf_r+0x2e2d>
400e51c6:	9f2142        	l32i	a4, a1, 0x27c
400e51c9:	10c152        	addi	a5, a1, 16
400e51cc:	1429      	s32i.n	a2, a4, 4
400e51ce:	0439      	s32i.n	a3, a4, 0
400e51d0:	8f2142        	l32i	a4, a1, 0x23c
400e51d3:	242a      	add.n	a2, a4, a2
400e51d5:	8f6122        	s32i	a2, a1, 0x23c
400e51d8:	8e2122        	l32i	a2, a1, 0x238
400e51db:	221b      	addi.n	a2, a2, 1
400e51dd:	8e6122        	s32i	a2, a1, 0x238
400e51e0:	0c82e6        	bgei	a2, 8, 400e51f0 <_vfprintf_r+0x2ea8>
400e51e3:	9f2162        	l32i	a6, a1, 0x27c
400e51e6:	668b      	addi.n	a6, a6, 8
400e51e8:	9f6162        	s32i	a6, a1, 0x27c
400e51eb:	007886        	j	400e53d1 <_vfprintf_r+0x3089>
400e51ee:	820000        	mull	a0, a0, a0
400e51f1:	9210c1        	l32r	a12, 400c9a34 <_rtc_text_end+0x9a34>
400e51f4:	9a24a2        	l32i	a10, a4, 0x268
400e51f7:	86c8      	l32i.n	a12, a6, 32
400e51f9:	6f          	.byte 0x6f
400e51fa:	420000        	xorb	b0, b0, b0
400e51fd:	0ca721        	l32r	a2, 400a849c <_iram_end+0x1a948>
400e5200:	24e612        	s32c1i	a1, a6, 144
400e5203:	5208      	l32i.n	a0, a2, 20
400e5205:	07a021        	l32r	a2, 400a7088 <_iram_end+0x19534>
400e5208:	8602e5        	call8	4006b238 <__udivmoddi4+0x6644>
400e520b:	620054        	lsi	f5, a0, 0x188
400e520e:	829f21        	l32r	a2, 400c5c8c <_rtc_text_end+0x5c8c>
400e5211:	29a121        	l32r	a2, 400af898 <_iram_end+0x21d44>
400e5214:	212216        	beqz	a2, 400e542a <_vfprintf_r+0x30e2>
400e5217:	8f          	.byte 0x8f
400e5218:	0689      	s32i.n	a8, a6, 0
400e521a:	221b      	addi.n	a2, a2, 1
400e521c:	8f6122        	s32i	a2, a1, 0x23c
400e521f:	8e2122        	l32i	a2, a1, 0x238
400e5222:	221b      	addi.n	a2, a2, 1
400e5224:	8e6122        	s32i	a2, a1, 0x238
400e5227:	0582e6        	bgei	a2, 8, 400e5230 <_vfprintf_r+0x2ee8>
400e522a:	268b      	addi.n	a2, a6, 8
400e522c:	000646        	j	400e5249 <_vfprintf_r+0x2f01>
400e522f:	a2c200        	muluh	a12, a2, a0
400e5232:	21b234        	lsi	f3, a2, 132
400e5235:	21a2a2        	movi	a10, 0x221
400e5238:	cc1aa3        	lsi	f10, a10, 0x330
400e523b:	faa6a5        	call8	400dfca4 <__sprint_r>
400e523e:	2b3a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5241:	e4a122        	movi	a2, 0x1e4
400e5244:	10c1a2        	addi	a10, a1, 16
400e5247:	2a2a      	add.n	a2, a10, a2
400e5249:	b12132        	l32i	a3, a1, 0x2c4
400e524c:	af2162        	l32i	a6, a1, 0x2bc
400e524f:	0239      	s32i.n	a3, a2, 0
400e5251:	8f2132        	l32i	a3, a1, 0x23c
400e5254:	af2142        	l32i	a4, a1, 0x2bc
400e5257:	336a      	add.n	a3, a3, a6
400e5259:	8f6132        	s32i	a3, a1, 0x23c
400e525c:	8e2132        	l32i	a3, a1, 0x238
400e525f:	1249      	s32i.n	a4, a2, 4
400e5261:	331b      	addi.n	a3, a3, 1
400e5263:	10c152        	addi	a5, a1, 16
400e5266:	8e6132        	s32i	a3, a1, 0x238
400e5269:	02d542        	addmi	a4, a5, 0x200
400e526c:	228b      	addi.n	a2, a2, 8
400e526e:	1883a6        	blti	a3, 8, 400e528a <_vfprintf_r+0x2f42>
400e5271:	34a2c2        	movi	a12, 0x234
400e5274:	a221b2        	l32i	a11, a1, 0x288
400e5277:	a321a2        	l32i	a10, a1, 0x28c
400e527a:	cc1a      	add.n	a12, a12, a1
400e527c:	faa265        	call8	400dfca4 <__sprint_r>
400e527f:	272a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5282:	e4a122        	movi	a2, 0x1e4
400e5285:	10c182        	addi	a8, a1, 16
400e5288:	282a      	add.n	a2, a8, a2
400e528a:	ab76c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e528d:	ab75d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e5290:	aa21a2        	l32i	a10, a1, 0x2a8
400e5293:	ab21b2        	l32i	a11, a1, 0x2ac
400e5296:	ad4381        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e5299:	0008e0        	callx8	a8
400e529c:	a72192        	l32i	a9, a1, 0x29c
400e529f:	390b      	addi.n	a3, a9, -1
400e52a1:	047a16        	beqz	a10, 400e52ec <_vfprintf_r+0x2fa4>
400e52a4:	1239      	s32i.n	a3, a2, 4
400e52a6:	8f2132        	l32i	a3, a1, 0x23c
400e52a9:	a72152        	l32i	a5, a1, 0x29c
400e52ac:	330b      	addi.n	a3, a3, -1
400e52ae:	335a      	add.n	a3, a3, a5
400e52b0:	a12182        	l32i	a8, a1, 0x284
400e52b3:	8f6132        	s32i	a3, a1, 0x23c
400e52b6:	8e2132        	l32i	a3, a1, 0x238
400e52b9:	481b      	addi.n	a4, a8, 1
400e52bb:	331b      	addi.n	a3, a3, 1
400e52bd:	0249      	s32i.n	a4, a2, 0
400e52bf:	10c192        	addi	a9, a1, 16
400e52c2:	8e6132        	s32i	a3, a1, 0x238
400e52c5:	02d942        	addmi	a4, a9, 0x200
400e52c8:	228b      	addi.n	a2, a2, 8
400e52ca:	0283e6        	bgei	a3, 8, 400e52d0 <_vfprintf_r+0x2f88>
400e52cd:	002dc6        	j	400e5388 <_vfprintf_r+0x3040>
400e52d0:	34a2c2        	movi	a12, 0x234
400e52d3:	cc1a      	add.n	a12, a12, a1
400e52d5:	a221b2        	l32i	a11, a1, 0x288
400e52d8:	a321a2        	l32i	a10, a1, 0x28c
400e52db:	fa9ca5        	call8	400dfca4 <__sprint_r>
400e52de:	213a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e52e1:	f4a162        	movi	a6, 0x1f4
400e52e4:	216a      	add.n	a2, a1, a6
400e52e6:	002786        	j	400e5388 <_vfprintf_r+0x3040>
400e52e9:	000000        	ill
400e52ec:	041c      	movi.n	a4, 16
400e52ee:	3e13e6        	bgei	a3, 1, 400e5330 <_vfprintf_r+0x2fe8>
400e52f1:	0024c6        	j	400e5388 <_vfprintf_r+0x3040>
400e52f4:	215200        	srai	a5, a0, 2
400e52f7:	8f          	.byte 0x8f
400e52f8:	1249      	s32i.n	a4, a2, 4
400e52fa:	10c552        	addi	a5, a5, 16
400e52fd:	8f6152        	s32i	a5, a1, 0x23c
400e5300:	8e2152        	l32i	a5, a1, 0x238
400e5303:	10c182        	addi	a8, a1, 16
400e5306:	551b      	addi.n	a5, a5, 1
400e5308:	8e6152        	s32i	a5, a1, 0x238
400e530b:	02d862        	addmi	a6, a8, 0x200
400e530e:	228b      	addi.n	a2, a2, 8
400e5310:	1985a6        	blti	a5, 8, 400e532d <_vfprintf_r+0x2fe5>
400e5313:	34a2c2        	movi	a12, 0x234
400e5316:	a221b2        	l32i	a11, a1, 0x288
400e5319:	a321a2        	l32i	a10, a1, 0x28c
400e531c:	cc1a      	add.n	a12, a12, a1
400e531e:	fa9865        	call8	400dfca4 <__sprint_r>
400e5321:	1d0a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5324:	e4a122        	movi	a2, 0x1e4
400e5327:	10c192        	addi	a9, a1, 16
400e532a:	802920        	add	a2, a9, a2
400e532d:	f0c332        	addi	a3, a3, -16
400e5330:	ad3851        	l32r	a5, 400d0810 <_flash_cache_start+0x7f8>
400e5333:	0259      	s32i.n	a5, a2, 0
400e5335:	bc2437        	blt	a4, a3, 400e52f5 <_vfprintf_r+0x2fad>
400e5338:	8f2152        	l32i	a5, a1, 0x23c
400e533b:	1239      	s32i.n	a3, a2, 4
400e533d:	353a      	add.n	a3, a5, a3
400e533f:	8f6132        	s32i	a3, a1, 0x23c
400e5342:	8e2132        	l32i	a3, a1, 0x238
400e5345:	10c1a2        	addi	a10, a1, 16
400e5348:	331b      	addi.n	a3, a3, 1
400e534a:	8e6132        	s32i	a3, a1, 0x238
400e534d:	02da42        	addmi	a4, a10, 0x200
400e5350:	228b      	addi.n	a2, a2, 8
400e5352:	3283a6        	blti	a3, 8, 400e5388 <_vfprintf_r+0x3040>
400e5355:	10c1e2        	addi	a14, a1, 16
400e5358:	24a222        	movi	a2, 0x224
400e535b:	ce2a      	add.n	a12, a14, a2
400e535d:	ffdd06        	j	400e52d5 <_vfprintf_r+0x2f8d>
400e5360:	9f2132        	l32i	a3, a1, 0x27c
400e5363:	a12142        	l32i	a4, a1, 0x284
400e5366:	1329      	s32i.n	a2, a3, 4
400e5368:	8f2122        	l32i	a2, a1, 0x23c
400e536b:	0349      	s32i.n	a4, a3, 0
400e536d:	221b      	addi.n	a2, a2, 1
400e536f:	8f6122        	s32i	a2, a1, 0x23c
400e5372:	8e2122        	l32i	a2, a1, 0x238
400e5375:	10c152        	addi	a5, a1, 16
400e5378:	221b      	addi.n	a2, a2, 1
400e537a:	8e6122        	s32i	a2, a1, 0x238
400e537d:	0282a6        	blti	a2, 8, 400e5383 <_vfprintf_r+0x303b>
400e5380:	ffd306        	j	400e52d0 <_vfprintf_r+0x2f88>
400e5383:	9f2162        	l32i	a6, a1, 0x27c
400e5386:	268b      	addi.n	a2, a6, 8
400e5388:	47a282        	movi	a8, 0x247
400e538b:	318a      	add.n	a3, a1, a8
400e538d:	b42192        	l32i	a9, a1, 0x2d0
400e5390:	0239      	s32i.n	a3, a2, 0
400e5392:	1299      	s32i.n	a9, a2, 4
400e5394:	8f2132        	l32i	a3, a1, 0x23c
400e5397:	10c1a2        	addi	a10, a1, 16
400e539a:	339a      	add.n	a3, a3, a9
400e539c:	8f6132        	s32i	a3, a1, 0x23c
400e539f:	8e2132        	l32i	a3, a1, 0x238
400e53a2:	02da42        	addmi	a4, a10, 0x200
400e53a5:	331b      	addi.n	a3, a3, 1
400e53a7:	8e6132        	s32i	a3, a1, 0x238
400e53aa:	0783e6        	bgei	a3, 8, 400e53b5 <_vfprintf_r+0x306d>
400e53ad:	228b      	addi.n	a2, a2, 8
400e53af:	9f6122        	s32i	a2, a1, 0x27c
400e53b2:	0006c6        	j	400e53d1 <_vfprintf_r+0x3089>
400e53b5:	34a2c2        	movi	a12, 0x234
400e53b8:	cc1a      	add.n	a12, a12, a1
400e53ba:	a221b2        	l32i	a11, a1, 0x288
400e53bd:	a321a2        	l32i	a10, a1, 0x28c
400e53c0:	fa8e25        	call8	400dfca4 <__sprint_r>
400e53c3:	12ea56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e53c6:	e4a122        	movi	a2, 0x1e4
400e53c9:	10c132        	addi	a3, a1, 16
400e53cc:	332a      	add.n	a3, a3, a2
400e53ce:	9f6132        	s32i	a3, a1, 0x27c
400e53d1:	a02142        	l32i	a4, a1, 0x280
400e53d4:	1ce427        	bbsi	a4, 2, 400e53f4 <_vfprintf_r+0x30ac>
400e53d7:	ac2152        	l32i	a5, a1, 0x2b0
400e53da:	a92162        	l32i	a6, a1, 0x2a4
400e53dd:	ae2182        	l32i	a8, a1, 0x2b8
400e53e0:	532560        	max	a2, a5, a6
400e53e3:	882a      	add.n	a8, a8, a2
400e53e5:	8f2122        	l32i	a2, a1, 0x23c
400e53e8:	ae6182        	s32i	a8, a1, 0x2b8
400e53eb:	09b216        	beqz	a2, 400e548a <_vfprintf_r+0x3142>
400e53ee:	002c46        	j	400e54a3 <_vfprintf_r+0x315b>
400e53f1:	000000        	ill
400e53f4:	ac2192        	l32i	a9, a1, 0x2b0
400e53f7:	a921e2        	l32i	a14, a1, 0x2a4
400e53fa:	c029e0        	sub	a2, a9, a14
400e53fd:	d612a6        	blti	a2, 1, 400e53d7 <_vfprintf_r+0x308f>
400e5400:	041c      	movi.n	a4, 16
400e5402:	001286        	j	400e5450 <_vfprintf_r+0x3108>
400e5405:	9f2152        	l32i	a5, a1, 0x27c
400e5408:	10c162        	addi	a6, a1, 16
400e540b:	0539      	s32i.n	a3, a5, 0
400e540d:	8f2132        	l32i	a3, a1, 0x23c
400e5410:	1549      	s32i.n	a4, a5, 4
400e5412:	10c332        	addi	a3, a3, 16
400e5415:	8f6132        	s32i	a3, a1, 0x23c
400e5418:	8e2132        	l32i	a3, a1, 0x238
400e541b:	02d652        	addmi	a5, a6, 0x200
400e541e:	331b      	addi.n	a3, a3, 1
400e5420:	8e6132        	s32i	a3, a1, 0x238
400e5423:	0a83e6        	bgei	a3, 8, 400e5431 <_vfprintf_r+0x30e9>
400e5426:	9f2182        	l32i	a8, a1, 0x27c
400e5429:	888b      	addi.n	a8, a8, 8
400e542b:	9f6182        	s32i	a8, a1, 0x27c
400e542e:	0006c6        	j	400e544d <_vfprintf_r+0x3105>
400e5431:	34a2c2        	movi	a12, 0x234
400e5434:	a221b2        	l32i	a11, a1, 0x288
400e5437:	a321a2        	l32i	a10, a1, 0x28c
400e543a:	cc1a      	add.n	a12, a12, a1
400e543c:	fa8665        	call8	400dfca4 <__sprint_r>
400e543f:	0b2a56        	bnez	a10, 400e54f5 <_vfprintf_r+0x31ad>
400e5442:	e4a132        	movi	a3, 0x1e4
400e5445:	10c192        	addi	a9, a1, 16
400e5448:	993a      	add.n	a9, a9, a3
400e544a:	9f6192        	s32i	a9, a1, 0x27c
400e544d:	f0c222        	addi	a2, a2, -16
400e5450:	acef31        	l32r	a3, 400d080c <_flash_cache_start+0x7f4>
400e5453:	ae2427        	blt	a4, a2, 400e5405 <_vfprintf_r+0x30bd>
400e5456:	9f2142        	l32i	a4, a1, 0x27c
400e5459:	10c152        	addi	a5, a1, 16
400e545c:	1429      	s32i.n	a2, a4, 4
400e545e:	0439      	s32i.n	a3, a4, 0
400e5460:	8f2142        	l32i	a4, a1, 0x23c
400e5463:	242a      	add.n	a2, a4, a2
400e5465:	8f6122        	s32i	a2, a1, 0x23c
400e5468:	8e2122        	l32i	a2, a1, 0x238
400e546b:	221b      	addi.n	a2, a2, 1
400e546d:	8e6122        	s32i	a2, a1, 0x238
400e5470:	0282e6        	bgei	a2, 8, 400e5476 <_vfprintf_r+0x312e>
400e5473:	ffd806        	j	400e53d7 <_vfprintf_r+0x308f>
400e5476:	24a262        	movi	a6, 0x224
400e5479:	a221b2        	l32i	a11, a1, 0x288
400e547c:	a321a2        	l32i	a10, a1, 0x28c
400e547f:	c56a      	add.n	a12, a5, a6
400e5481:	fa8225        	call8	400dfca4 <__sprint_r>
400e5484:	f4fa16        	beqz	a10, 400e53d7 <_vfprintf_r+0x308f>
400e5487:	001a86        	j	400e54f5 <_vfprintf_r+0x31ad>
400e548a:	030c      	movi.n	a3, 0
400e548c:	a42192        	l32i	a9, a1, 0x290
400e548f:	8e6132        	s32i	a3, a1, 0x238
400e5492:	10c182        	addi	a8, a1, 16
400e5495:	e4a122        	movi	a2, 0x1e4
400e5498:	1c9937        	bne	a9, a3, 400e54b8 <_vfprintf_r+0x3170>
400e549b:	382a      	add.n	a3, a8, a2
400e549d:	9f6132        	s32i	a3, a1, 0x27c
400e54a0:	f406c6        	j	400e24bf <_vfprintf_r+0x177>
400e54a3:	34a2c2        	movi	a12, 0x234
400e54a6:	a221b2        	l32i	a11, a1, 0x288
400e54a9:	a321a2        	l32i	a10, a1, 0x28c
400e54ac:	cc1a      	add.n	a12, a12, a1
400e54ae:	fa7f65        	call8	400dfca4 <__sprint_r>
400e54b1:	fd5a16        	beqz	a10, 400e548a <_vfprintf_r+0x3142>
400e54b4:	000f46        	j	400e54f5 <_vfprintf_r+0x31ad>
400e54b7:	21b200        	srai	a11, a0, 2
400e54ba:	21a2a4        	lsi	f10, a2, 132
400e54bd:	c142a3        	ssi	f10, a2, 0x304
400e54c0:	442a10        	extui	a2, a1, 10, 5
400e54c3:	9f3d25        	call8	40084894 <_free_r>
400e54c6:	9f6142        	s32i	a4, a1, 0x27c
400e54c9:	f3fc86        	j	400e24bf <_vfprintf_r+0x177>
400e54cc:	8f2122        	l32i	a2, a1, 0x23c
400e54cf:	92cc      	bnez.n	a2, 400e54dc <_vfprintf_r+0x3194>
400e54d1:	030c      	movi.n	a3, 0
400e54d3:	10c152        	addi	a5, a1, 16
400e54d6:	8e6132        	s32i	a3, a1, 0x238
400e54d9:	000a06        	j	400e5505 <_vfprintf_r+0x31bd>
400e54dc:	24a2c2        	movi	a12, 0x224
400e54df:	10c162        	addi	a6, a1, 16
400e54e2:	a221b2        	l32i	a11, a1, 0x288
400e54e5:	a321a2        	l32i	a10, a1, 0x28c
400e54e8:	c6ca      	add.n	a12, a6, a12
400e54ea:	fa7ba5        	call8	400dfca4 <__sprint_r>
400e54ed:	4adc      	bnez.n	a10, 400e5505 <_vfprintf_r+0x31bd>
400e54ef:	fff786        	j	400e54d1 <_vfprintf_r+0x3189>
400e54f2:	000000        	ill
400e54f5:	a42182        	l32i	a8, a1, 0x290
400e54f8:	988c      	beqz.n	a8, 400e5505 <_vfprintf_r+0x31bd>
400e54fa:	a321a2        	l32i	a10, a1, 0x28c
400e54fd:	08bd      	mov.n	a11, a8
400e54ff:	201110        	or	a1, a1, a1
400e5502:	9f3925        	call8	40084894 <_free_r>
400e5505:	a22192        	l32i	a9, a1, 0x288
400e5508:	192922        	l32i	a2, a9, 100
400e550b:	0ee207        	bbsi	a2, 0, 400e551d <_vfprintf_r+0x31d5>
400e550e:	061922        	l16ui	a2, a9, 12
400e5511:	08e297        	bbsi	a2, 9, 400e551d <_vfprintf_r+0x31d5>
400e5514:	58c9a2        	addi	a10, a9, 88
400e5517:	201110        	or	a1, a1, a1
400e551a:	9f5fa5        	call8	40084b14 <_lock_release_recursive>
400e551d:	a22132        	l32i	a3, a1, 0x288
400e5520:	061322        	l16ui	a2, a3, 12
400e5523:	026267        	bbci	a2, 6, 400e5529 <_vfprintf_r+0x31e1>
400e5526:	f3c306        	j	400e2436 <_vfprintf_r+0xee>
400e5529:	ae2122        	l32i	a2, a1, 0x2b8
400e552c:	f01d      	retw.n
400e552e:	972182        	l32i	a8, a1, 0x25c
400e5531:	671b      	addi.n	a6, a7, 1
400e5533:	02a787        	bge	a7, a8, 400e5539 <_vfprintf_r+0x31f1>
400e5536:	f44fc6        	j	400e2679 <_vfprintf_r+0x331>
400e5539:	f45146        	j	400e2682 <_vfprintf_r+0x33a>
400e553c:	972162        	l32i	a6, a1, 0x25c
400e553f:	871b      	addi.n	a8, a7, 1
400e5541:	02a767        	bge	a7, a6, 400e5547 <_vfprintf_r+0x31ff>
400e5544:	f49846        	j	400e27a9 <_vfprintf_r+0x461>
400e5547:	f499c6        	j	400e27b2 <_vfprintf_r+0x46a>
	...

400e554c <vfprintf>:
400e554c:	006136        	entry	a1, 48
400e554f:	0149      	s32i.n	a4, a1, 0
400e5551:	1159      	s32i.n	a5, a1, 4
400e5553:	2169      	s32i.n	a6, a1, 8
400e5555:	a34725        	call8	400889c8 <__getreent>
400e5558:	01d8      	l32i.n	a13, a1, 0
400e555a:	11e8      	l32i.n	a14, a1, 4
400e555c:	21f8      	l32i.n	a15, a1, 8
400e555e:	02bd      	mov.n	a11, a2
400e5560:	03cd      	mov.n	a12, a3
400e5562:	fcde65        	call8	400e2348 <_vfprintf_r>
400e5565:	0a2d      	mov.n	a2, a10
400e5567:	f01d      	retw.n
400e5569:	000000        	ill

400e556c <__sbprintf>:
400e556c:	024136        	entry	a1, 0x120
400e556f:	061392        	l16ui	a9, a3, 12
400e5572:	d87c      	movi.n	a8, -3
400e5574:	108980        	and	a8, a9, a8
400e5577:	465182        	s16i	a8, a1, 140
400e557a:	192382        	l32i	a8, a3, 100
400e557d:	3c6152        	s32i	a5, a1, 240
400e5580:	396182        	s32i	a8, a1, 228
400e5583:	071382        	l16ui	a8, a3, 14
400e5586:	090c      	movi.n	a9, 0
400e5588:	475182        	s16i	a8, a1, 142
400e558b:	8388      	l32i.n	a8, a3, 32
400e558d:	266192        	s32i	a9, a1, 152
400e5590:	286182        	s32i	a8, a1, 160
400e5593:	a388      	l32i.n	a8, a3, 40
400e5595:	3d6162        	s32i	a6, a1, 244
400e5598:	2a6182        	s32i	a8, a1, 168
400e559b:	80a082        	movi	a8, 128
400e559e:	581a      	add.n	a5, a8, a1
400e55a0:	58c5a2        	addi	a10, a5, 88
400e55a3:	226182        	s32i	a8, a1, 136
400e55a6:	256182        	s32i	a8, a1, 148
400e55a9:	3e6172        	s32i	a7, a1, 248
400e55ac:	206112        	s32i	a1, a1, 128
400e55af:	246112        	s32i	a1, a1, 144
400e55b2:	9f4be5        	call8	40084a70 <_lock_init_recursive>
400e55b5:	3c21d2        	l32i	a13, a1, 240
400e55b8:	3d21e2        	l32i	a14, a1, 244
400e55bb:	3e21f2        	l32i	a15, a1, 248
400e55be:	80a0b2        	movi	a11, 128
400e55c1:	04cd      	mov.n	a12, a4
400e55c3:	bb1a      	add.n	a11, a11, a1
400e55c5:	02ad      	mov.n	a10, a2
400e55c7:	fcd825        	call8	400e2348 <_vfprintf_r>
400e55ca:	0a4d      	mov.n	a4, a10
400e55cc:	011a96        	bltz	a10, 400e55e1 <__sbprintf+0x75>
400e55cf:	80a0b2        	movi	a11, 128
400e55d2:	02ad      	mov.n	a10, a2
400e55d4:	bb1a      	add.n	a11, a11, a1
400e55d6:	ac2f81        	l32r	a8, 400d0694 <_flash_cache_start+0x67c>
400e55d9:	0008e0        	callx8	a8
400e55dc:	f27c      	movi.n	a2, -1
400e55de:	9342a0        	movnez	a4, a2, a10
400e55e1:	461182        	l16ui	a8, a1, 140
400e55e4:	40a022        	movi	a2, 64
400e55e7:	080827        	bnone	a8, a2, 400e55f3 <__sbprintf+0x87>
400e55ea:	061382        	l16ui	a8, a3, 12
400e55ed:	202820        	or	a2, a8, a2
400e55f0:	065322        	s16i	a2, a3, 12
400e55f3:	d8a0a2        	movi	a10, 216
400e55f6:	80a1a0        	add	a10, a1, a10
400e55f9:	9f4865        	call8	40084a80 <_lock_close>
400e55fc:	202440        	or	a2, a4, a4
400e55ff:	f01d      	retw.n
400e5601:	000000        	ill

400e5604 <vprintf>:
400e5604:	006136        	entry	a1, 48
400e5607:	0139      	s32i.n	a3, a1, 0
400e5609:	1149      	s32i.n	a4, a1, 4
400e560b:	2159      	s32i.n	a5, a1, 8
400e560d:	a33ba5        	call8	400889c8 <__getreent>
400e5610:	0a3d      	mov.n	a3, a10
400e5612:	8a8c      	beqz.n	a10, 400e561e <vprintf+0x1a>
400e5614:	6a88      	l32i.n	a8, a10, 24
400e5616:	48cc      	bnez.n	a8, 400e561e <vprintf+0x1a>
400e5618:	ac1e81        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400e561b:	0008e0        	callx8	a8
400e561e:	0021d2        	l32i	a13, a1, 0
400e5621:	0121e2        	l32i	a14, a1, 4
400e5624:	0221f2        	l32i	a15, a1, 8
400e5627:	23b8      	l32i.n	a11, a3, 8
400e5629:	02cd      	mov.n	a12, a2
400e562b:	03ad      	mov.n	a10, a3
400e562d:	fcd1a5        	call8	400e2348 <_vfprintf_r>
400e5630:	0a2d      	mov.n	a2, a10
400e5632:	f01d      	retw.n

400e5634 <_vprintf_r>:
400e5634:	006136        	entry	a1, 48
400e5637:	0149      	s32i.n	a4, a1, 0
400e5639:	1159      	s32i.n	a5, a1, 4
400e563b:	2169      	s32i.n	a6, a1, 8
400e563d:	b28c      	beqz.n	a2, 400e564c <_vprintf_r+0x18>
400e563f:	6288      	l32i.n	a8, a2, 24
400e5641:	007856        	bnez	a8, 400e564c <_vprintf_r+0x18>
400e5644:	02ad      	mov.n	a10, a2
400e5646:	ac1281        	l32r	a8, 400d0690 <_flash_cache_start+0x678>
400e5649:	0008e0        	callx8	a8
400e564c:	0222b2        	l32i	a11, a2, 8
400e564f:	0021d2        	l32i	a13, a1, 0
400e5652:	0121e2        	l32i	a14, a1, 4
400e5655:	21f8      	l32i.n	a15, a1, 8
400e5657:	03cd      	mov.n	a12, a3
400e5659:	02ad      	mov.n	a10, a2
400e565b:	fccee5        	call8	400e2348 <_vfprintf_r>
400e565e:	0a2d      	mov.n	a2, a10
400e5660:	f01d      	retw.n
	...

400e5664 <_vsnprintf_r>:
400e5664:	012136        	entry	a1, 144
400e5667:	05cd      	mov.n	a12, a5
400e5669:	0084d6        	bgez	a4, 400e5675 <_vsnprintf_r+0x11>
400e566c:	8ba032        	movi	a3, 139
400e566f:	0239      	s32i.n	a3, a2, 0
400e5671:	f27c      	movi.n	a2, -1
400e5673:	f01d      	retw.n
400e5675:	08a282        	movi	a8, 0x208
400e5678:	065182        	s16i	a8, a1, 12
400e567b:	0139      	s32i.n	a3, a1, 0
400e567d:	4139      	s32i.n	a3, a1, 16
400e567f:	840b      	addi.n	a8, a4, -1
400e5681:	030c      	movi.n	a3, 0
400e5683:	2421d2        	l32i	a13, a1, 144
400e5686:	2521e2        	l32i	a14, a1, 148
400e5689:	2621f2        	l32i	a15, a1, 152
400e568c:	838340        	moveqz	a8, a3, a4
400e568f:	01bd      	mov.n	a11, a1
400e5691:	f37c      	movi.n	a3, -1
400e5693:	02ad      	mov.n	a10, a2
400e5695:	026182        	s32i	a8, a1, 8
400e5698:	056182        	s32i	a8, a1, 20
400e569b:	075132        	s16i	a3, a1, 14
400e569e:	f70865        	call8	400dc724 <_svfprintf_r>
400e56a1:	040ae6        	bgei	a10, -1, 400e56a9 <_vsnprintf_r+0x45>
400e56a4:	8ba032        	movi	a3, 139
400e56a7:	0239      	s32i.n	a3, a2, 0
400e56a9:	0a2d      	mov.n	a2, a10
400e56ab:	548c      	beqz.n	a4, 400e56b4 <_vsnprintf_r+0x50>
400e56ad:	0138      	l32i.n	a3, a1, 0
400e56af:	040c      	movi.n	a4, 0
400e56b1:	004342        	s8i	a4, a3, 0
400e56b4:	f01d      	retw.n
	...

400e56b8 <vsnprintf>:
400e56b8:	008136        	entry	a1, 64
400e56bb:	4159      	s32i.n	a5, a1, 16
400e56bd:	5169      	s32i.n	a6, a1, 20
400e56bf:	6179      	s32i.n	a7, a1, 24
400e56c1:	a33065        	call8	400889c8 <__getreent>
400e56c4:	4188      	l32i.n	a8, a1, 16
400e56c6:	02bd      	mov.n	a11, a2
400e56c8:	0189      	s32i.n	a8, a1, 0
400e56ca:	5188      	l32i.n	a8, a1, 20
400e56cc:	04dd      	mov.n	a13, a4
400e56ce:	1189      	s32i.n	a8, a1, 4
400e56d0:	6188      	l32i.n	a8, a1, 24
400e56d2:	03cd      	mov.n	a12, a3
400e56d4:	2189      	s32i.n	a8, a1, 8
400e56d6:	fff8e5        	call8	400e5664 <_vsnprintf_r>
400e56d9:	0a2d      	mov.n	a2, a10
400e56db:	f01d      	retw.n
400e56dd:	000000        	ill

400e56e0 <quorem>:
400e56e0:	006136        	entry	a1, 48
400e56e3:	03bd      	mov.n	a11, a3
400e56e5:	4348      	l32i.n	a4, a3, 16
400e56e7:	4238      	l32i.n	a3, a2, 16
400e56e9:	0a0c      	movi.n	a10, 0
400e56eb:	02a347        	bge	a3, a4, 400e56f1 <quorem+0x11>
400e56ee:	003d06        	j	400e57e6 <quorem+0x106>
400e56f1:	440b      	addi.n	a4, a4, -1
400e56f3:	1194e0        	slli	a9, a4, 2
400e56f6:	14cb62        	addi	a6, a11, 20
400e56f9:	369a      	add.n	a3, a6, a9
400e56fb:	14c272        	addi	a7, a2, 20
400e56fe:	979a      	add.n	a9, a7, a9
400e5700:	0358      	l32i.n	a5, a3, 0
400e5702:	0988      	l32i.n	a8, a9, 0
400e5704:	551b      	addi.n	a5, a5, 1
400e5706:	c25850        	quou	a5, a8, a5
400e5709:	7415a7        	beq	a5, a10, 400e5781 <quorem+0xa1>
400e570c:	07dd      	mov.n	a13, a7
400e570e:	06cd      	mov.n	a12, a6
400e5710:	0aed      	mov.n	a14, a10
400e5712:	0cf8      	l32i.n	a15, a12, 0
400e5714:	cc4b      	addi.n	a12, a12, 4
400e5716:	f480f0        	extui	a8, a15, 0, 16
400e5719:	828850        	mull	a8, a8, a5
400e571c:	f5f0f0        	extui	a15, a15, 16, 16
400e571f:	88aa      	add.n	a8, a8, a10
400e5721:	82ff50        	mull	a15, a15, a5
400e5724:	f5a080        	extui	a10, a8, 16, 16
400e5727:	afaa      	add.n	a10, a15, a10
400e5729:	0df8      	l32i.n	a15, a13, 0
400e572b:	f48080        	extui	a8, a8, 0, 16
400e572e:	f4f0f0        	extui	a15, a15, 0, 16
400e5731:	efea      	add.n	a14, a15, a14
400e5733:	c08e80        	sub	a8, a14, a8
400e5736:	0de8      	l32i.n	a14, a13, 0
400e5738:	11a9      	s32i.n	a10, a1, 4
400e573a:	f5e0e0        	extui	a14, a14, 16, 16
400e573d:	01e9      	s32i.n	a14, a1, 0
400e573f:	11e8      	l32i.n	a14, a1, 4
400e5741:	f5a0a0        	extui	a10, a10, 16, 16
400e5744:	f4f0e0        	extui	a15, a14, 0, 16
400e5747:	01e8      	l32i.n	a14, a1, 0
400e5749:	c0fef0        	sub	a15, a14, a15
400e574c:	31e080        	srai	a14, a8, 16
400e574f:	ffea      	add.n	a15, a15, a14
400e5751:	31e0f0        	srai	a14, a15, 16
400e5754:	f48080        	extui	a8, a8, 0, 16
400e5757:	11ff00        	slli	a15, a15, 16
400e575a:	208f80        	or	a8, a15, a8
400e575d:	0d89      	s32i.n	a8, a13, 0
400e575f:	dd4b      	addi.n	a13, a13, 4
400e5761:	adb3c7        	bgeu	a3, a12, 400e5712 <quorem+0x32>
400e5764:	0988      	l32i.n	a8, a9, 0
400e5766:	78dc      	bnez.n	a8, 400e5781 <quorem+0xa1>
400e5768:	000086        	j	400e576e <quorem+0x8e>
400e576b:	440b00        	extui	a0, a0, 11, 5
400e576e:	fcc992        	addi	a9, a9, -4
400e5771:	043797        	bltu	a7, a9, 400e5779 <quorem+0x99>
400e5774:	4249      	s32i.n	a4, a2, 16
400e5776:	0001c6        	j	400e5781 <quorem+0xa1>
400e5779:	0988      	l32i.n	a8, a9, 0
400e577b:	fed816        	beqz	a8, 400e576c <quorem+0x8c>
400e577e:	fffc86        	j	400e5774 <quorem+0x94>
400e5781:	20a220        	or	a10, a2, a2
400e5784:	f62aa5        	call8	400dba30 <__mcmp>
400e5787:	059a96        	bltz	a10, 400e57e4 <quorem+0x104>
400e578a:	01c552        	addi	a5, a5, 1
400e578d:	20a770        	or	a10, a7, a7
400e5790:	0c0c      	movi.n	a12, 0
400e5792:	0a98      	l32i.n	a9, a10, 0
400e5794:	06b8      	l32i.n	a11, a6, 0
400e5796:	f48090        	extui	a8, a9, 0, 16
400e5799:	c8ca      	add.n	a12, a8, a12
400e579b:	f480b0        	extui	a8, a11, 0, 16
400e579e:	c08c80        	sub	a8, a12, a8
400e57a1:	f59090        	extui	a9, a9, 16, 16
400e57a4:	f5b0b0        	extui	a11, a11, 16, 16
400e57a7:	c0b9b0        	sub	a11, a9, a11
400e57aa:	319080        	srai	a9, a8, 16
400e57ad:	9b9a      	add.n	a9, a11, a9
400e57af:	31c090        	srai	a12, a9, 16
400e57b2:	f48080        	extui	a8, a8, 0, 16
400e57b5:	119900        	slli	a9, a9, 16
400e57b8:	208980        	or	a8, a9, a8
400e57bb:	0a89      	s32i.n	a8, a10, 0
400e57bd:	664b      	addi.n	a6, a6, 4
400e57bf:	aa4b      	addi.n	a10, a10, 4
400e57c1:	cdb367        	bgeu	a3, a6, 400e5792 <quorem+0xb2>
400e57c4:	a03470        	addx4	a3, a4, a7
400e57c7:	0368      	l32i.n	a6, a3, 0
400e57c9:	76dc      	bnez.n	a6, 400e57e4 <quorem+0x104>
400e57cb:	000046        	j	400e57d0 <quorem+0xf0>
400e57ce:	440b      	addi.n	a4, a4, -1
400e57d0:	fcc332        	addi	a3, a3, -4
400e57d3:	053737        	bltu	a7, a3, 400e57dc <quorem+0xfc>
400e57d6:	4249      	s32i.n	a4, a2, 16
400e57d8:	000206        	j	400e57e4 <quorem+0x104>
400e57db:	036800        	rsr.ddr	a0
400e57de:	fec616        	beqz	a6, 400e57ce <quorem+0xee>
400e57e1:	fffc46        	j	400e57d6 <quorem+0xf6>
400e57e4:	05ad      	mov.n	a10, a5
400e57e6:	0a2d      	mov.n	a2, a10
400e57e8:	f01d      	retw.n
	...

400e57ec <_dtoa_r>:
400e57ec:	012136        	entry	a1, 144
400e57ef:	0c6162        	s32i	a6, a1, 48
400e57f2:	092262        	l32i	a6, a2, 36
400e57f5:	116172        	s32i	a7, a1, 68
400e57f8:	046142        	s32i	a4, a1, 16
400e57fb:	5159      	s32i.n	a5, a1, 20
400e57fd:	252132        	l32i	a3, a1, 148
400e5800:	011656        	bnez	a6, 400e5815 <_dtoa_r+0x29>
400e5803:	0a1c      	movi.n	a10, 16
400e5805:	aa3981        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e5808:	0008e0        	callx8	a8
400e580b:	92a9      	s32i.n	a10, a2, 36
400e580d:	1a69      	s32i.n	a6, a10, 4
400e580f:	2a69      	s32i.n	a6, a10, 8
400e5811:	0a69      	s32i.n	a6, a10, 0
400e5813:	3a69      	s32i.n	a6, a10, 12
400e5815:	9268      	l32i.n	a6, a2, 36
400e5817:	06b8      	l32i.n	a11, a6, 0
400e5819:	7b9c      	beqz.n	a11, 400e5834 <_dtoa_r+0x48>
400e581b:	1688      	l32i.n	a8, a6, 4
400e581d:	160c      	movi.n	a6, 1
400e581f:	401800        	ssl	a8
400e5822:	a16600        	sll	a6, a6
400e5825:	1b89      	s32i.n	a8, a11, 4
400e5827:	2b69      	s32i.n	a6, a11, 8
400e5829:	02ad      	mov.n	a10, a2
400e582b:	f5de65        	call8	400db610 <_Bfree>
400e582e:	9268      	l32i.n	a6, a2, 36
400e5830:	080c      	movi.n	a8, 0
400e5832:	0689      	s32i.n	a8, a6, 0
400e5834:	5168      	l32i.n	a6, a1, 20
400e5836:	0106d6        	bgez	a6, 400e584a <_dtoa_r+0x5e>
400e5839:	140c      	movi.n	a4, 1
400e583b:	0349      	s32i.n	a4, a3, 0
400e583d:	aa0a31        	l32r	a3, 400d0068 <_flash_cache_start+0x50>
400e5840:	103350        	and	a3, a3, a5
400e5843:	5139      	s32i.n	a3, a1, 20
400e5845:	000146        	j	400e584e <_dtoa_r+0x62>
400e5848:	0c0000        	lsi	f0, a0, 48
400e584b:	034904        	lsi	f0, a9, 12
400e584e:	5168      	l32i.n	a6, a1, 20
400e5850:	ab9e31        	l32r	a3, 400d06c8 <_flash_cache_start+0x6b0>
400e5853:	104360        	and	a4, a3, a6
400e5856:	369437        	bne	a4, a3, 400e5890 <_dtoa_r+0xa4>
400e5859:	abf221        	l32r	a2, 400d0824 <_flash_cache_start+0x80c>
400e585c:	242182        	l32i	a8, a1, 144
400e585f:	4198      	l32i.n	a9, a1, 16
400e5861:	0829      	s32i.n	a2, a8, 0
400e5863:	abee31        	l32r	a3, 400d081c <_flash_cache_start+0x804>
400e5866:	a9cc      	bnez.n	a9, 400e5874 <_dtoa_r+0x88>
400e5868:	ab74a1        	l32r	a10, 400d0638 <_flash_cache_start+0x620>
400e586b:	abeb21        	l32r	a2, 400d0818 <_flash_cache_start+0x800>
400e586e:	1066a0        	and	a6, a6, a10
400e5871:	833260        	moveqz	a3, a2, a6
400e5874:	262142        	l32i	a4, a1, 152
400e5877:	032d      	mov.n	a2, a3
400e5879:	14cc      	bnez.n	a4, 400e587e <_dtoa_r+0x92>
400e587b:	02ee46        	j	400e6438 <_dtoa_r+0xc4c>
400e587e:	030342        	l8ui	a4, a3, 3
400e5881:	533b      	addi.n	a5, a3, 3
400e5883:	238b      	addi.n	a2, a3, 8
400e5885:	832540        	moveqz	a2, a5, a4
400e5888:	262152        	l32i	a5, a1, 152
400e588b:	0529      	s32i.n	a2, a5, 0
400e588d:	000b86        	j	400e58bf <_dtoa_r+0xd3>
400e5890:	4148      	l32i.n	a4, a1, 16
400e5892:	5158      	l32i.n	a5, a1, 20
400e5894:	a9f4c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5897:	a9f3d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e589a:	04ad      	mov.n	a10, a4
400e589c:	05bd      	mov.n	a11, a5
400e589e:	abbd81        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e58a1:	0008e0        	callx8	a8
400e58a4:	cadc      	bnez.n	a10, 400e58c4 <_dtoa_r+0xd8>
400e58a6:	242162        	l32i	a6, a1, 144
400e58a9:	120c      	movi.n	a2, 1
400e58ab:	abdd31        	l32r	a3, 400d0820 <_flash_cache_start+0x808>
400e58ae:	262182        	l32i	a8, a1, 152
400e58b1:	0629      	s32i.n	a2, a6, 0
400e58b3:	032d      	mov.n	a2, a3
400e58b5:	18cc      	bnez.n	a8, 400e58ba <_dtoa_r+0xce>
400e58b7:	02df46        	j	400e6438 <_dtoa_r+0xc4c>
400e58ba:	abdb21        	l32r	a2, 400d0828 <_flash_cache_start+0x810>
400e58bd:	0829      	s32i.n	a2, a8, 0
400e58bf:	032d      	mov.n	a2, a3
400e58c1:	f01d      	retw.n
400e58c3:	c1f200        	mul16u	a15, a2, a0
400e58c6:	e11004        	lsi	f0, a0, 0x384
400e58c9:	c44020        	extui	a4, a2, 0, 13
400e58cc:	05dd20        	extui	a13, a2, 29, 1
400e58cf:	02ad      	mov.n	a10, a2
400e58d1:	f634a5        	call8	400dbc1c <__d2b>
400e58d4:	71a9      	s32i.n	a10, a1, 28
400e58d6:	a53460        	extui	a3, a6, 20, 11
400e58d9:	639c      	beqz.n	a3, 400e58f3 <_dtoa_r+0x107>
400e58db:	048d      	mov.n	a8, a4
400e58dd:	ab5641        	l32r	a4, 400d0638 <_flash_cache_start+0x620>
400e58e0:	104450        	and	a4, a4, a5
400e58e3:	ab7d51        	l32r	a5, 400d06d8 <_flash_cache_start+0x6c0>
400e58e6:	209450        	or	a9, a4, a5
400e58e9:	01ac42        	movi	a4, 0xfffffc01
400e58ec:	334a      	add.n	a3, a3, a4
400e58ee:	040c      	movi.n	a4, 0
400e58f0:	001046        	j	400e5935 <_dtoa_r+0x149>
400e58f3:	1148      	l32i.n	a4, a1, 4
400e58f5:	0138      	l32i.n	a3, a1, 0
400e58f7:	32a452        	movi	a5, 0x432
400e58fa:	343a      	add.n	a3, a4, a3
400e58fc:	535a      	add.n	a5, a3, a5
400e58fe:	20a042        	movi	a4, 32
400e5901:	4188      	l32i.n	a8, a1, 16
400e5903:	c0a450        	sub	a10, a4, a5
400e5906:	401a00        	ssl	a10
400e5909:	a1a800        	sll	a10, a8
400e590c:	14a457        	bge	a4, a5, 400e5924 <_dtoa_r+0x138>
400e590f:	12c3a2        	addi	a10, a3, 18
400e5912:	400a00        	ssr	a10
400e5915:	914080        	srl	a4, a8
400e5918:	60a050        	neg	a10, a5
400e591b:	401a00        	ssl	a10
400e591e:	a1a600        	sll	a10, a6
400e5921:	20a4a0        	or	a10, a4, a10
400e5924:	a9cc81        	l32r	a8, 400d0054 <_flash_cache_start+0x3c>
400e5927:	0008e0        	callx8	a8
400e592a:	abc041        	l32r	a4, 400d082c <_flash_cache_start+0x814>
400e592d:	0a8d      	mov.n	a8, a10
400e592f:	94ba      	add.n	a9, a4, a11
400e5931:	330b      	addi.n	a3, a3, -1
400e5933:	140c      	movi.n	a4, 1
400e5935:	a9cbc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5938:	abbed1        	l32r	a13, 400d0830 <_flash_cache_start+0x818>
400e593b:	08ad      	mov.n	a10, a8
400e593d:	09bd      	mov.n	a11, a9
400e593f:	156142        	s32i	a4, a1, 84
400e5942:	ab9781        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5945:	0008e0        	callx8	a8
400e5948:	abbbc1        	l32r	a12, 400d0834 <_flash_cache_start+0x81c>
400e594b:	abbbd1        	l32r	a13, 400d0838 <_flash_cache_start+0x820>
400e594e:	a9c481        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5951:	0008e0        	callx8	a8
400e5954:	abbac1        	l32r	a12, 400d083c <_flash_cache_start+0x824>
400e5957:	abbad1        	l32r	a13, 400d0840 <_flash_cache_start+0x828>
400e595a:	abbf81        	l32r	a8, 400d0858 <_flash_cache_start+0x840>
400e595d:	0008e0        	callx8	a8
400e5960:	0a4d      	mov.n	a4, a10
400e5962:	03ad      	mov.n	a10, a3
400e5964:	0b5d      	mov.n	a5, a11
400e5966:	ab8d81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e5969:	0008e0        	callx8	a8
400e596c:	abb6c1        	l32r	a12, 400d0844 <_flash_cache_start+0x82c>
400e596f:	abb6d1        	l32r	a13, 400d0848 <_flash_cache_start+0x830>
400e5972:	a9bb81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5975:	0008e0        	callx8	a8
400e5978:	0acd      	mov.n	a12, a10
400e597a:	0bdd      	mov.n	a13, a11
400e597c:	04ad      	mov.n	a10, a4
400e597e:	05bd      	mov.n	a11, a5
400e5980:	abb681        	l32r	a8, 400d0858 <_flash_cache_start+0x840>
400e5983:	0008e0        	callx8	a8
400e5986:	0a4d      	mov.n	a4, a10
400e5988:	0b5d      	mov.n	a5, a11
400e598a:	ab8381        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e598d:	0008e0        	callx8	a8
400e5990:	a9b5c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5993:	a9b4d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e5996:	0661a2        	s32i	a10, a1, 24
400e5999:	20b550        	or	a11, a5, a5
400e599c:	20a440        	or	a10, a4, a4
400e599f:	ab7c81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e59a2:	0008e0        	callx8	a8
400e59a5:	023ad6        	bgez	a10, 400e59cc <_dtoa_r+0x1e0>
400e59a8:	61a8      	l32i.n	a10, a1, 24
400e59aa:	ab7c81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e59ad:	0008e0        	callx8	a8
400e59b0:	0acd      	mov.n	a12, a10
400e59b2:	0bdd      	mov.n	a13, a11
400e59b4:	04ad      	mov.n	a10, a4
400e59b6:	05bd      	mov.n	a11, a5
400e59b8:	ab7b81        	l32r	a8, 400d07a4 <_flash_cache_start+0x78c>
400e59bb:	0008e0        	callx8	a8
400e59be:	150c      	movi.n	a5, 1
400e59c0:	040c      	movi.n	a4, 0
400e59c2:	9345a0        	movnez	a4, a5, a10
400e59c5:	6158      	l32i.n	a5, a1, 24
400e59c7:	c05540        	sub	a5, a5, a4
400e59ca:	6159      	s32i.n	a5, a1, 24
400e59cc:	160c      	movi.n	a6, 1
400e59ce:	6188      	l32i.n	a8, a1, 24
400e59d0:	146162        	s32i	a6, a1, 80
400e59d3:	641c      	movi.n	a4, 22
400e59d5:	293487        	bltu	a4, a8, 400e5a02 <_dtoa_r+0x216>
400e59d8:	ab4241        	l32r	a4, 400d06e0 <_flash_cache_start+0x6c8>
400e59db:	41c8      	l32i.n	a12, a1, 16
400e59dd:	b04840        	addx8	a4, a8, a4
400e59e0:	51d8      	l32i.n	a13, a1, 20
400e59e2:	04a8      	l32i.n	a10, a4, 0
400e59e4:	14b8      	l32i.n	a11, a4, 4
400e59e6:	ab7081        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e59e9:	0008e0        	callx8	a8
400e59ec:	0d2a67        	blt	a10, a6, 400e59fd <_dtoa_r+0x211>
400e59ef:	6198      	l32i.n	a9, a1, 24
400e59f1:	040c      	movi.n	a4, 0
400e59f3:	990b      	addi.n	a9, a9, -1
400e59f5:	6199      	s32i.n	a9, a1, 24
400e59f7:	146142        	s32i	a4, a1, 80
400e59fa:	000106        	j	400e5a02 <_dtoa_r+0x216>
400e59fd:	050c      	movi.n	a5, 0
400e59ff:	146152        	s32i	a5, a1, 80
400e5a02:	1148      	l32i.n	a4, a1, 4
400e5a04:	060c      	movi.n	a6, 0
400e5a06:	c03430        	sub	a3, a4, a3
400e5a09:	330b      	addi.n	a3, a3, -1
400e5a0b:	8139      	s32i.n	a3, a1, 32
400e5a0d:	a169      	s32i.n	a6, a1, 40
400e5a0f:	06a367        	bge	a3, a6, 400e5a19 <_dtoa_r+0x22d>
400e5a12:	608030        	neg	a8, a3
400e5a15:	a189      	s32i.n	a8, a1, 40
400e5a17:	8169      	s32i.n	a6, a1, 32
400e5a19:	6138      	l32i.n	a3, a1, 24
400e5a1b:	00f396        	bltz	a3, 400e5a2e <_dtoa_r+0x242>
400e5a1e:	8148      	l32i.n	a4, a1, 32
400e5a20:	050c      	movi.n	a5, 0
400e5a22:	443a      	add.n	a4, a4, a3
400e5a24:	8149      	s32i.n	a4, a1, 32
400e5a26:	106132        	s32i	a3, a1, 64
400e5a29:	d159      	s32i.n	a5, a1, 52
400e5a2b:	000486        	j	400e5a41 <_dtoa_r+0x255>
400e5a2e:	a168      	l32i.n	a6, a1, 40
400e5a30:	6188      	l32i.n	a8, a1, 24
400e5a32:	030c      	movi.n	a3, 0
400e5a34:	c06680        	sub	a6, a6, a8
400e5a37:	609080        	neg	a9, a8
400e5a3a:	a169      	s32i.n	a6, a1, 40
400e5a3c:	d199      	s32i.n	a9, a1, 52
400e5a3e:	106132        	s32i	a3, a1, 64
400e5a41:	c148      	l32i.n	a4, a1, 48
400e5a43:	930c      	movi.n	a3, 9
400e5a45:	4f3347        	bltu	a3, a4, 400e5a98 <_dtoa_r+0x2ac>
400e5a48:	130c      	movi.n	a3, 1
400e5a4a:	0664a6        	blti	a4, 6, 400e5a54 <_dtoa_r+0x268>
400e5a4d:	fcc442        	addi	a4, a4, -4
400e5a50:	c149      	s32i.n	a4, a1, 48
400e5a52:	030c      	movi.n	a3, 0
400e5a54:	c158      	l32i.n	a5, a1, 48
400e5a56:	2a3526        	beqi	a5, 3, 400e5a84 <_dtoa_r+0x298>
400e5a59:	0945e6        	bgei	a5, 4, 400e5a66 <_dtoa_r+0x27a>
400e5a5c:	060c      	movi.n	a6, 0
400e5a5e:	f169      	s32i.n	a6, a1, 60
400e5a60:	152526        	beqi	a5, 2, 400e5a79 <_dtoa_r+0x28d>
400e5a63:	001106        	j	400e5aab <_dtoa_r+0x2bf>
400e5a66:	c188      	l32i.n	a8, a1, 48
400e5a68:	094826        	beqi	a8, 4, 400e5a75 <_dtoa_r+0x289>
400e5a6b:	190c      	movi.n	a9, 1
400e5a6d:	f199      	s32i.n	a9, a1, 60
400e5a6f:	155826        	beqi	a8, 5, 400e5a88 <_dtoa_r+0x29c>
400e5a72:	000d46        	j	400e5aab <_dtoa_r+0x2bf>
400e5a75:	140c      	movi.n	a4, 1
400e5a77:	f149      	s32i.n	a4, a1, 60
400e5a79:	4317a6        	blti	a7, 1, 400e5ac0 <_dtoa_r+0x2d4>
400e5a7c:	e179      	s32i.n	a7, a1, 56
400e5a7e:	074d      	mov.n	a4, a7
400e5a80:	0011c6        	j	400e5acb <_dtoa_r+0x2df>
400e5a83:	050c00        	extui	a0, a0, 28, 1
400e5a86:	f159      	s32i.n	a5, a1, 60
400e5a88:	6168      	l32i.n	a6, a1, 24
400e5a8a:	140c      	movi.n	a4, 1
400e5a8c:	667a      	add.n	a6, a6, a7
400e5a8e:	761b      	addi.n	a7, a6, 1
400e5a90:	e169      	s32i.n	a6, a1, 56
400e5a92:	534740        	max	a4, a7, a4
400e5a95:	000c86        	j	400e5acb <_dtoa_r+0x2df>
400e5a98:	f97c      	movi.n	a9, -1
400e5a9a:	130c      	movi.n	a3, 1
400e5a9c:	080c      	movi.n	a8, 0
400e5a9e:	c189      	s32i.n	a8, a1, 48
400e5aa0:	f139      	s32i.n	a3, a1, 60
400e5aa2:	e199      	s32i.n	a9, a1, 56
400e5aa4:	097d      	mov.n	a7, a9
400e5aa6:	241c      	movi.n	a4, 18
400e5aa8:	000706        	j	400e5ac8 <_dtoa_r+0x2dc>
400e5aab:	140c      	movi.n	a4, 1
400e5aad:	f57c      	movi.n	a5, -1
400e5aaf:	060c      	movi.n	a6, 0
400e5ab1:	f149      	s32i.n	a4, a1, 60
400e5ab3:	e159      	s32i.n	a5, a1, 56
400e5ab5:	057d      	mov.n	a7, a5
400e5ab7:	241c      	movi.n	a4, 18
400e5ab9:	116162        	s32i	a6, a1, 68
400e5abc:	0002c6        	j	400e5acb <_dtoa_r+0x2df>
400e5abf:	180c00        	lsxp	f0, a12, a0
400e5ac2:	e189      	s32i.n	a8, a1, 56
400e5ac4:	087d      	mov.n	a7, a8
400e5ac6:	084d      	mov.n	a4, a8
400e5ac8:	116182        	s32i	a8, a1, 68
400e5acb:	9258      	l32i.n	a5, a2, 36
400e5acd:	060c      	movi.n	a6, 0
400e5acf:	1569      	s32i.n	a6, a5, 4
400e5ad1:	460c      	movi.n	a6, 4
400e5ad3:	000206        	j	400e5adf <_dtoa_r+0x2f3>
400e5ad6:	1588      	l32i.n	a8, a5, 4
400e5ad8:	1166f0        	slli	a6, a6, 1
400e5adb:	881b      	addi.n	a8, a8, 1
400e5add:	1589      	s32i.n	a8, a5, 4
400e5adf:	14c682        	addi	a8, a6, 20
400e5ae2:	f0b487        	bgeu	a4, a8, 400e5ad6 <_dtoa_r+0x2ea>
400e5ae5:	15b8      	l32i.n	a11, a5, 4
400e5ae7:	02ad      	mov.n	a10, a2
400e5ae9:	f5ab25        	call8	400db59c <_Balloc>
400e5aec:	9248      	l32i.n	a4, a2, 36
400e5aee:	05a9      	s32i.n	a10, a5, 0
400e5af0:	0448      	l32i.n	a4, a4, 0
400e5af2:	e50c      	movi.n	a5, 14
400e5af4:	b149      	s32i.n	a4, a1, 44
400e5af6:	140c      	movi.n	a4, 1
400e5af8:	01b577        	bgeu	a5, a7, 400e5afd <_dtoa_r+0x311>
400e5afb:	040c      	movi.n	a4, 0
400e5afd:	103340        	and	a3, a3, a4
400e5b00:	34e316        	beqz	a3, 400e5e52 <_dtoa_r+0x666>
400e5b03:	5158      	l32i.n	a5, a1, 20
400e5b05:	4148      	l32i.n	a4, a1, 16
400e5b07:	176152        	s32i	a5, a1, 92
400e5b0a:	6158      	l32i.n	a5, a1, 24
400e5b0c:	166142        	s32i	a4, a1, 88
400e5b0f:	7815a6        	blti	a5, 1, 400e5b8b <_dtoa_r+0x39f>
400e5b12:	aaf341        	l32r	a4, 400d06e0 <_flash_cache_start+0x6c8>
400e5b15:	343050        	extui	a3, a5, 0, 4
400e5b18:	b03340        	addx8	a3, a3, a4
400e5b1b:	0388      	l32i.n	a8, a3, 0
400e5b1d:	1398      	l32i.n	a9, a3, 4
400e5b1f:	213450        	srai	a3, a5, 4
400e5b22:	240c      	movi.n	a4, 2
400e5b24:	286347        	bbci	a3, 4, 400e5b50 <_dtoa_r+0x364>
400e5b27:	ab4941        	l32r	a4, 400d084c <_flash_cache_start+0x834>
400e5b2a:	1621a2        	l32i	a10, a1, 88
400e5b2d:	84c8      	l32i.n	a12, a4, 32
400e5b2f:	0924d2        	l32i	a13, a4, 36
400e5b32:	1721b2        	l32i	a11, a1, 92
400e5b35:	1b6182        	s32i	a8, a1, 108
400e5b38:	1a6192        	s32i	a9, a1, 104
400e5b3b:	a94781        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5b3e:	0008e0        	callx8	a8
400e5b41:	1a2192        	l32i	a9, a1, 104
400e5b44:	1b2182        	l32i	a8, a1, 108
400e5b47:	343030        	extui	a3, a3, 0, 4
400e5b4a:	41a9      	s32i.n	a10, a1, 16
400e5b4c:	51b9      	s32i.n	a11, a1, 20
400e5b4e:	340c      	movi.n	a4, 3
400e5b50:	ab3f51        	l32r	a5, 400d084c <_flash_cache_start+0x834>
400e5b53:	000786        	j	400e5b75 <_dtoa_r+0x389>
400e5b56:	070000        	lsi	f0, a0, 28
400e5b59:	c81463        	lsi	f6, a4, 0x320
400e5b5c:	15d805        	call0	400fb8e0 <_etext+0xf003>
400e5b5f:	08ad      	mov.n	a10, a8
400e5b61:	20b990        	or	a11, a9, a9
400e5b64:	a93f81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5b67:	0008e0        	callx8	a8
400e5b6a:	441b      	addi.n	a4, a4, 1
400e5b6c:	0a8d      	mov.n	a8, a10
400e5b6e:	0b9d      	mov.n	a9, a11
400e5b70:	213130        	srai	a3, a3, 1
400e5b73:	558b      	addi.n	a5, a5, 8
400e5b75:	fdf356        	bnez	a3, 400e5b58 <_dtoa_r+0x36c>
400e5b78:	41a8      	l32i.n	a10, a1, 16
400e5b7a:	51b8      	l32i.n	a11, a1, 20
400e5b7c:	20c880        	or	a12, a8, a8
400e5b7f:	20d990        	or	a13, a9, a9
400e5b82:	a93581        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5b85:	0008e0        	callx8	a8
400e5b88:	0013c6        	j	400e5bdb <_dtoa_r+0x3ef>
400e5b8b:	6168      	l32i.n	a6, a1, 24
400e5b8d:	240c      	movi.n	a4, 2
400e5b8f:	605060        	neg	a5, a6
400e5b92:	04a516        	beqz	a5, 400e5be0 <_dtoa_r+0x3f4>
400e5b95:	aad281        	l32r	a8, 400d06e0 <_flash_cache_start+0x6c8>
400e5b98:	346050        	extui	a6, a5, 0, 4
400e5b9b:	b06680        	addx8	a6, a6, a8
400e5b9e:	06c8      	l32i.n	a12, a6, 0
400e5ba0:	16d8      	l32i.n	a13, a6, 4
400e5ba2:	1621a2        	l32i	a10, a1, 88
400e5ba5:	1721b2        	l32i	a11, a1, 92
400e5ba8:	215450        	srai	a5, a5, 4
400e5bab:	a92d81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5bae:	0008e0        	callx8	a8
400e5bb1:	41a9      	s32i.n	a10, a1, 16
400e5bb3:	51b9      	s32i.n	a11, a1, 20
400e5bb5:	ab2561        	l32r	a6, 400d084c <_flash_cache_start+0x834>
400e5bb8:	080c      	movi.n	a8, 0
400e5bba:	000606        	j	400e5bd6 <_dtoa_r+0x3ea>
400e5bbd:	106507        	bbci	a5, 0, 400e5bd1 <_dtoa_r+0x3e5>
400e5bc0:	06c8      	l32i.n	a12, a6, 0
400e5bc2:	0126d2        	l32i	a13, a6, 4
400e5bc5:	01c442        	addi	a4, a4, 1
400e5bc8:	a92681        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5bcb:	0008e0        	callx8	a8
400e5bce:	208330        	or	a8, a3, a3
400e5bd1:	215150        	srai	a5, a5, 1
400e5bd4:	668b      	addi.n	a6, a6, 8
400e5bd6:	fe3556        	bnez	a5, 400e5bbd <_dtoa_r+0x3d1>
400e5bd9:	388c      	beqz.n	a8, 400e5be0 <_dtoa_r+0x3f4>
400e5bdb:	41a9      	s32i.n	a10, a1, 16
400e5bdd:	0561b2        	s32i	a11, a1, 20
400e5be0:	142182        	l32i	a8, a1, 80
400e5be3:	04b816        	beqz	a8, 400e5c32 <_dtoa_r+0x446>
400e5be6:	4188      	l32i.n	a8, a1, 16
400e5be8:	5198      	l32i.n	a9, a1, 20
400e5bea:	a91ec1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5bed:	aabad1        	l32r	a13, 400d06d8 <_flash_cache_start+0x6c0>
400e5bf0:	08ad      	mov.n	a10, a8
400e5bf2:	09bd      	mov.n	a11, a9
400e5bf4:	1b6182        	s32i	a8, a1, 108
400e5bf7:	1a6192        	s32i	a9, a1, 104
400e5bfa:	aae581        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5bfd:	0008e0        	callx8	a8
400e5c00:	1b2182        	l32i	a8, a1, 108
400e5c03:	1a2192        	l32i	a9, a1, 104
400e5c06:	028ad6        	bgez	a10, 400e5c32 <_dtoa_r+0x446>
400e5c09:	57ac      	beqz.n	a7, 400e5c32 <_dtoa_r+0x446>
400e5c0b:	e138      	l32i.n	a3, a1, 56
400e5c0d:	0213e6        	bgei	a3, 1, 400e5c13 <_dtoa_r+0x427>
400e5c10:	008d06        	j	400e5e48 <_dtoa_r+0x65c>
400e5c13:	a914c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5c16:	aab3d1        	l32r	a13, 400d06e4 <_flash_cache_start+0x6cc>
400e5c19:	6158      	l32i.n	a5, a1, 24
400e5c1b:	08ad      	mov.n	a10, a8
400e5c1d:	09bd      	mov.n	a11, a9
400e5c1f:	a91081        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5c22:	0008e0        	callx8	a8
400e5c25:	650b      	addi.n	a6, a5, -1
400e5c27:	41a9      	s32i.n	a10, a1, 16
400e5c29:	51b9      	s32i.n	a11, a1, 20
400e5c2b:	441b      	addi.n	a4, a4, 1
400e5c2d:	e138      	l32i.n	a3, a1, 56
400e5c2f:	0000c6        	j	400e5c36 <_dtoa_r+0x44a>
400e5c32:	6168      	l32i.n	a6, a1, 24
400e5c34:	073d      	mov.n	a3, a7
400e5c36:	04ad      	mov.n	a10, a4
400e5c38:	aad981        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e5c3b:	0008e0        	callx8	a8
400e5c3e:	41c8      	l32i.n	a12, a1, 16
400e5c40:	0521d2        	l32i	a13, a1, 20
400e5c43:	a90781        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5c46:	0008e0        	callx8	a8
400e5c49:	a906c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5c4c:	ab01d1        	l32r	a13, 400d0850 <_flash_cache_start+0x838>
400e5c4f:	ab0281        	l32r	a8, 400d0858 <_flash_cache_start+0x840>
400e5c52:	0008e0        	callx8	a8
400e5c55:	aa9d41        	l32r	a4, 400d06cc <_flash_cache_start+0x6b4>
400e5c58:	0aed      	mov.n	a14, a10
400e5c5a:	44ba      	add.n	a4, a4, a11
400e5c5c:	04fd      	mov.n	a15, a4
400e5c5e:	053356        	bnez	a3, 400e5cb5 <_dtoa_r+0x4c9>
400e5c61:	a900c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5c64:	aafcd1        	l32r	a13, 400d0854 <_flash_cache_start+0x83c>
400e5c67:	41a8      	l32i.n	a10, a1, 16
400e5c69:	0521b2        	l32i	a11, a1, 20
400e5c6c:	1861e2        	s32i	a14, a1, 96
400e5c6f:	196142        	s32i	a4, a1, 100
400e5c72:	aacb81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5c75:	0008e0        	callx8	a8
400e5c78:	1821e2        	l32i	a14, a1, 96
400e5c7b:	04dd      	mov.n	a13, a4
400e5c7d:	20cee0        	or	a12, a14, a14
400e5c80:	1b61a2        	s32i	a10, a1, 108
400e5c83:	1a61b2        	s32i	a11, a1, 104
400e5c86:	aac881        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e5c89:	0008e0        	callx8	a8
400e5c8c:	1b2182        	l32i	a8, a1, 108
400e5c8f:	1a2192        	l32i	a9, a1, 104
400e5c92:	1821e2        	l32i	a14, a1, 96
400e5c95:	021aa6        	blti	a10, 1, 400e5c9b <_dtoa_r+0x4af>
400e5c98:	0145c6        	j	400e61b3 <_dtoa_r+0x9c7>
400e5c9b:	a8fa51        	l32r	a5, 400d0084 <_flash_cache_start+0x6c>
400e5c9e:	0ecd      	mov.n	a12, a14
400e5ca0:	30d450        	xor	a13, a4, a5
400e5ca3:	08ad      	mov.n	a10, a8
400e5ca5:	09bd      	mov.n	a11, a9
400e5ca7:	aaba81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5caa:	0008e0        	callx8	a8
400e5cad:	4f1a96        	bltz	a10, 400e61a2 <_dtoa_r+0x9b6>
400e5cb0:	006506        	j	400e5e48 <_dtoa_r+0x65c>
400e5cb3:	510000        	lsi	f0, a0, 0x144
400e5cb6:	aa8a      	add.n	a10, a10, a8
400e5cb8:	f198      	l32i.n	a9, a1, 60
400e5cba:	430b      	addi.n	a4, a3, -1
400e5cbc:	b04450        	addx8	a4, a4, a5
400e5cbf:	0c7916        	beqz	a9, 400e5d8a <_dtoa_r+0x59e>
400e5cc2:	04c8      	l32i.n	a12, a4, 0
400e5cc4:	0124d2        	l32i	a13, a4, 4
400e5cc7:	a8e7a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e5cca:	aaaab1        	l32r	a11, 400d0774 <_flash_cache_start+0x75c>
400e5ccd:	1861e2        	s32i	a14, a1, 96
400e5cd0:	1961f2        	s32i	a15, a1, 100
400e5cd3:	a8e181        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5cd6:	0008e0        	callx8	a8
400e5cd9:	1821e2        	l32i	a14, a1, 96
400e5cdc:	1921f2        	l32i	a15, a1, 100
400e5cdf:	0ecd      	mov.n	a12, a14
400e5ce1:	0fdd      	mov.n	a13, a15
400e5ce3:	aaaf81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5ce6:	0008e0        	callx8	a8
400e5ce9:	b158      	l32i.n	a5, a1, 44
400e5ceb:	1261a2        	s32i	a10, a1, 72
400e5cee:	1361b2        	s32i	a11, a1, 76
400e5cf1:	51b8      	l32i.n	a11, a1, 20
400e5cf3:	41a8      	l32i.n	a10, a1, 16
400e5cf5:	551b      	addi.n	a5, a5, 1
400e5cf7:	aaa881        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5cfa:	0008e0        	callx8	a8
400e5cfd:	0a4d      	mov.n	a4, a10
400e5cff:	aaa781        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e5d02:	0008e0        	callx8	a8
400e5d05:	0acd      	mov.n	a12, a10
400e5d07:	0bdd      	mov.n	a13, a11
400e5d09:	41a8      	l32i.n	a10, a1, 16
400e5d0b:	51b8      	l32i.n	a11, a1, 20
400e5d0d:	30c442        	addi	a4, a4, 48
400e5d10:	aaa481        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5d13:	0008e0        	callx8	a8
400e5d16:	850b      	addi.n	a8, a5, -1
400e5d18:	1221c2        	l32i	a12, a1, 72
400e5d1b:	1321d2        	l32i	a13, a1, 76
400e5d1e:	004842        	s8i	a4, a8, 0
400e5d21:	41a9      	s32i.n	a10, a1, 16
400e5d23:	0561b2        	s32i	a11, a1, 20
400e5d26:	aa9a81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5d29:	0008e0        	callx8	a8
400e5d2c:	6d0a96        	bltz	a10, 400e6400 <_dtoa_r+0xc14>
400e5d2f:	41c8      	l32i.n	a12, a1, 16
400e5d31:	0521d2        	l32i	a13, a1, 20
400e5d34:	a8cca1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e5d37:	aa68b1        	l32r	a11, 400d06d8 <_flash_cache_start+0x6c0>
400e5d3a:	aa9981        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5d3d:	0008e0        	callx8	a8
400e5d40:	1221c2        	l32i	a12, a1, 72
400e5d43:	1321d2        	l32i	a13, a1, 76
400e5d46:	aa9281        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5d49:	0008e0        	callx8	a8
400e5d4c:	20ca96        	bltz	a10, 400e5f5c <_dtoa_r+0x770>
400e5d4f:	b188      	l32i.n	a8, a1, 44
400e5d51:	c04580        	sub	a4, a5, a8
400e5d54:	022437        	blt	a4, a3, 400e5d5a <_dtoa_r+0x56e>
400e5d57:	003b46        	j	400e5e48 <_dtoa_r+0x65c>
400e5d5a:	a8c2c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5d5d:	aa61d1        	l32r	a13, 400d06e4 <_flash_cache_start+0x6cc>
400e5d60:	1221a2        	l32i	a10, a1, 72
400e5d63:	1321b2        	l32i	a11, a1, 76
400e5d66:	a8be81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5d69:	0008e0        	callx8	a8
400e5d6c:	1261a2        	s32i	a10, a1, 72
400e5d6f:	1361b2        	s32i	a11, a1, 76
400e5d72:	41a8      	l32i.n	a10, a1, 16
400e5d74:	51b8      	l32i.n	a11, a1, 20
400e5d76:	a8bbc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5d79:	aa5ad1        	l32r	a13, 400d06e4 <_flash_cache_start+0x6cc>
400e5d7c:	a8b981        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5d7f:	0008e0        	callx8	a8
400e5d82:	41a9      	s32i.n	a10, a1, 16
400e5d84:	51b9      	s32i.n	a11, a1, 20
400e5d86:	ffd9c6        	j	400e5cf1 <_dtoa_r+0x505>
400e5d89:	0acd00        	add.s	f12, f13, f0
400e5d8c:	14b8      	l32i.n	a11, a4, 4
400e5d8e:	04a8      	l32i.n	a10, a4, 0
400e5d90:	0fdd      	mov.n	a13, a15
400e5d92:	a8b381        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5d95:	0008e0        	callx8	a8
400e5d98:	b148      	l32i.n	a4, a1, 44
400e5d9a:	1261a2        	s32i	a10, a1, 72
400e5d9d:	1361b2        	s32i	a11, a1, 76
400e5da0:	543a      	add.n	a5, a4, a3
400e5da2:	51b8      	l32i.n	a11, a1, 20
400e5da4:	41a8      	l32i.n	a10, a1, 16
400e5da6:	aa7c81        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5da9:	0008e0        	callx8	a8
400e5dac:	0a3d      	mov.n	a3, a10
400e5dae:	aa7b81        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e5db1:	0008e0        	callx8	a8
400e5db4:	0acd      	mov.n	a12, a10
400e5db6:	0bdd      	mov.n	a13, a11
400e5db8:	41a8      	l32i.n	a10, a1, 16
400e5dba:	0521b2        	l32i	a11, a1, 20
400e5dbd:	30c332        	addi	a3, a3, 48
400e5dc0:	aa7881        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5dc3:	0008e0        	callx8	a8
400e5dc6:	41a9      	s32i.n	a10, a1, 16
400e5dc8:	004432        	s8i	a3, a4, 0
400e5dcb:	0561b2        	s32i	a11, a1, 20
400e5dce:	01c442        	addi	a4, a4, 1
400e5dd1:	5b9547        	bne	a5, a4, 400e5e30 <_dtoa_r+0x644>
400e5dd4:	a8a4c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5dd7:	aa67d1        	l32r	a13, 400d0774 <_flash_cache_start+0x75c>
400e5dda:	1221a2        	l32i	a10, a1, 72
400e5ddd:	1321b2        	l32i	a11, a1, 76
400e5de0:	aa9e81        	l32r	a8, 400d0858 <_flash_cache_start+0x840>
400e5de3:	0008e0        	callx8	a8
400e5de6:	0acd      	mov.n	a12, a10
400e5de8:	0bdd      	mov.n	a13, a11
400e5dea:	41a8      	l32i.n	a10, a1, 16
400e5dec:	51b8      	l32i.n	a11, a1, 20
400e5dee:	aa6e81        	l32r	a8, 400d07a8 <_flash_cache_start+0x790>
400e5df1:	0008e0        	callx8	a8
400e5df4:	021aa6        	blti	a10, 1, 400e5dfa <_dtoa_r+0x60e>
400e5df7:	005846        	j	400e5f5c <_dtoa_r+0x770>
400e5dfa:	1221c2        	l32i	a12, a1, 72
400e5dfd:	1321d2        	l32i	a13, a1, 76
400e5e00:	a899a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e5e03:	aa5cb1        	l32r	a11, 400d0774 <_flash_cache_start+0x75c>
400e5e06:	043c      	movi.n	a4, 48
400e5e08:	aa6681        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5e0b:	0008e0        	callx8	a8
400e5e0e:	0acd      	mov.n	a12, a10
400e5e10:	0bdd      	mov.n	a13, a11
400e5e12:	41a8      	l32i.n	a10, a1, 16
400e5e14:	51b8      	l32i.n	a11, a1, 20
400e5e16:	aa5e81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5e19:	0008e0        	callx8	a8
400e5e1c:	004a96        	bltz	a10, 400e5e24 <_dtoa_r+0x638>
400e5e1f:	000946        	j	400e5e48 <_dtoa_r+0x65c>
400e5e22:	035d      	mov.n	a5, a3
400e5e24:	350b      	addi.n	a3, a5, -1
400e5e26:	000372        	l8ui	a7, a3, 0
400e5e29:	f51747        	beq	a7, a4, 400e5e22 <_dtoa_r+0x636>
400e5e2c:	017406        	j	400e6400 <_dtoa_r+0xc14>
400e5e2f:	41a800        	srli	a10, a0, 8
400e5e32:	51b8      	l32i.n	a11, a1, 20
400e5e34:	a88cc1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5e37:	aa2bd1        	l32r	a13, 400d06e4 <_flash_cache_start+0x6cc>
400e5e3a:	a88981        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5e3d:	0008e0        	callx8	a8
400e5e40:	41a9      	s32i.n	a10, a1, 16
400e5e42:	51b9      	s32i.n	a11, a1, 20
400e5e44:	ffd686        	j	400e5da2 <_dtoa_r+0x5b6>
400e5e47:	214200        	srai	a4, a0, 2
400e5e4a:	215216        	beqz	a2, 400e6063 <_dtoa_r+0x877>
400e5e4d:	414917        	ball	a9, a1, 400e5e92 <_dtoa_r+0x6a6>
400e5e50:	5159      	s32i.n	a5, a1, 20
400e5e52:	0148      	l32i.n	a4, a1, 0
400e5e54:	14d496        	bltz	a4, 400e5fa5 <_dtoa_r+0x7b9>
400e5e57:	6158      	l32i.n	a5, a1, 24
400e5e59:	e30c      	movi.n	a3, 14
400e5e5b:	02a357        	bge	a3, a5, 400e5e61 <_dtoa_r+0x675>
400e5e5e:	0050c6        	j	400e5fa5 <_dtoa_r+0x7b9>
400e5e61:	aa1f31        	l32r	a3, 400d06e0 <_flash_cache_start+0x6c8>
400e5e64:	b03530        	addx8	a3, a5, a3
400e5e67:	1398      	l32i.n	a9, a3, 4
400e5e69:	0388      	l32i.n	a8, a3, 0
400e5e6b:	9199      	s32i.n	a9, a1, 36
400e5e6d:	112192        	l32i	a9, a1, 68
400e5e70:	8189      	s32i.n	a8, a1, 32
400e5e72:	0079d6        	bgez	a9, 400e5e7d <_dtoa_r+0x691>
400e5e75:	370b      	addi.n	a3, a7, -1
400e5e77:	203730        	or	a3, a7, a3
400e5e7a:	00a396        	bltz	a3, 400e5e88 <_dtoa_r+0x69c>
400e5e7d:	4188      	l32i.n	a8, a1, 16
400e5e7f:	5198      	l32i.n	a9, a1, 20
400e5e81:	b158      	l32i.n	a5, a1, 44
400e5e83:	000a46        	j	400e5eb0 <_dtoa_r+0x6c4>
400e5e86:	560000        	lsi	f0, a0, 0x158
400e5e89:	c13147        	bltu	a1, a4, 400e5e4e <_dtoa_r+0x662>
400e5e8c:	d1a876        	loopgtz	a8, 400e5f61 <_dtoa_r+0x775>
400e5e8f:	a8aa71        	l32r	a7, 400d0138 <_flash_cache_start+0x120>
400e5e92:	91b881        	l32r	a8, 400ca574 <_rtc_text_end+0xa574>
400e5e95:	073d      	mov.n	a3, a7
400e5e97:	a87281        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5e9a:	0008e0        	callx8	a8
400e5e9d:	41c8      	l32i.n	a12, a1, 16
400e5e9f:	51d8      	l32i.n	a13, a1, 20
400e5ea1:	074d      	mov.n	a4, a7
400e5ea3:	aa6e81        	l32r	a8, 400d085c <_flash_cache_start+0x844>
400e5ea6:	0008e0        	callx8	a8
400e5ea9:	2f7ad6        	bgez	a10, 400e61a4 <_dtoa_r+0x9b8>
400e5eac:	00c206        	j	400e61b8 <_dtoa_r+0x9cc>
400e5eaf:	81c800        	src	a12, a8, a0
400e5eb2:	91d8      	l32i.n	a13, a1, 36
400e5eb4:	08ad      	mov.n	a10, a8
400e5eb6:	09bd      	mov.n	a11, a9
400e5eb8:	1b6182        	s32i	a8, a1, 108
400e5ebb:	1a6192        	s32i	a9, a1, 104
400e5ebe:	a86681        	l32r	a8, 400d0058 <_flash_cache_start+0x40>
400e5ec1:	0008e0        	callx8	a8
400e5ec4:	aa3581        	l32r	a8, 400d0798 <_flash_cache_start+0x780>
400e5ec7:	0008e0        	callx8	a8
400e5eca:	0a3d      	mov.n	a3, a10
400e5ecc:	aa3481        	l32r	a8, 400d079c <_flash_cache_start+0x784>
400e5ecf:	0008e0        	callx8	a8
400e5ed2:	0821c2        	l32i	a12, a1, 32
400e5ed5:	0921d2        	l32i	a13, a1, 36
400e5ed8:	551b      	addi.n	a5, a5, 1
400e5eda:	a86181        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5edd:	0008e0        	callx8	a8
400e5ee0:	1b2182        	l32i	a8, a1, 108
400e5ee3:	1a2192        	l32i	a9, a1, 104
400e5ee6:	0acd      	mov.n	a12, a10
400e5ee8:	0bdd      	mov.n	a13, a11
400e5eea:	450b      	addi.n	a4, a5, -1
400e5eec:	30c362        	addi	a6, a3, 48
400e5eef:	08ad      	mov.n	a10, a8
400e5ef1:	09bd      	mov.n	a11, a9
400e5ef3:	aa2b81        	l32r	a8, 400d07a0 <_flash_cache_start+0x788>
400e5ef6:	0008e0        	callx8	a8
400e5ef9:	004462        	s8i	a6, a4, 0
400e5efc:	b168      	l32i.n	a6, a1, 44
400e5efe:	c04560        	sub	a4, a5, a6
400e5f01:	749747        	bne	a7, a4, 400e5f79 <_dtoa_r+0x78d>
400e5f04:	0acd      	mov.n	a12, a10
400e5f06:	0bdd      	mov.n	a13, a11
400e5f08:	aa5481        	l32r	a8, 400d0858 <_flash_cache_start+0x840>
400e5f0b:	0008e0        	callx8	a8
400e5f0e:	0a8d      	mov.n	a8, a10
400e5f10:	0b9d      	mov.n	a9, a11
400e5f12:	0acd      	mov.n	a12, a10
400e5f14:	0bdd      	mov.n	a13, a11
400e5f16:	0821a2        	l32i	a10, a1, 32
400e5f19:	0921b2        	l32i	a11, a1, 36
400e5f1c:	1b6182        	s32i	a8, a1, 108
400e5f1f:	1a6192        	s32i	a9, a1, 104
400e5f22:	aa1b81        	l32r	a8, 400d0790 <_flash_cache_start+0x778>
400e5f25:	0008e0        	callx8	a8
400e5f28:	1b2182        	l32i	a8, a1, 108
400e5f2b:	1a2192        	l32i	a9, a1, 104
400e5f2e:	02ca96        	bltz	a10, 400e5f5e <_dtoa_r+0x772>
400e5f31:	81a8      	l32i.n	a10, a1, 32
400e5f33:	91b8      	l32i.n	a11, a1, 36
400e5f35:	08cd      	mov.n	a12, a8
400e5f37:	20d990        	or	a13, a9, a9
400e5f3a:	aa1681        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e5f3d:	0008e0        	callx8	a8
400e5f40:	4bea56        	bnez	a10, 400e6402 <_dtoa_r+0xc16>
400e5f43:	17e307        	bbsi	a3, 0, 400e5f5e <_dtoa_r+0x772>
400e5f46:	012e06        	j	400e6402 <_dtoa_r+0xc16>
400e5f49:	b188      	l32i.n	a8, a1, 44
400e5f4b:	159837        	bne	a8, a3, 400e5f64 <_dtoa_r+0x778>
400e5f4e:	6198      	l32i.n	a9, a1, 24
400e5f50:	043c      	movi.n	a4, 48
400e5f52:	991b      	addi.n	a9, a9, 1
400e5f54:	6199      	s32i.n	a9, a1, 24
400e5f56:	004842        	s8i	a4, a8, 0
400e5f59:	000446        	j	400e5f6e <_dtoa_r+0x782>
400e5f5c:	6169      	s32i.n	a6, a1, 24
400e5f5e:	943c      	movi.n	a4, 57
400e5f60:	000086        	j	400e5f66 <_dtoa_r+0x77a>
400e5f63:	035d00        	lsi	f0, a13, 12
400e5f66:	350b      	addi.n	a3, a5, -1
400e5f68:	000362        	l8ui	a6, a3, 0
400e5f6b:	da1647        	beq	a6, a4, 400e5f49 <_dtoa_r+0x75d>
400e5f6e:	000342        	l8ui	a4, a3, 0
400e5f71:	441b      	addi.n	a4, a4, 1
400e5f73:	004342        	s8i	a4, a3, 0
400e5f76:	012206        	j	400e6402 <_dtoa_r+0xc16>
400e5f79:	a83ac1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5f7c:	a9dad1        	l32r	a13, 400d06e4 <_flash_cache_start+0x6cc>
400e5f7f:	a83881        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e5f82:	0008e0        	callx8	a8
400e5f85:	a837c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e5f88:	a837d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e5f8b:	1b61a2        	s32i	a10, a1, 108
400e5f8e:	1a61b2        	s32i	a11, a1, 104
400e5f91:	aa0081        	l32r	a8, 400d0794 <_flash_cache_start+0x77c>
400e5f94:	0008e0        	callx8	a8
400e5f97:	1b2182        	l32i	a8, a1, 108
400e5f9a:	1a2192        	l32i	a9, a1, 104
400e5f9d:	f0fa56        	bnez	a10, 400e5eb0 <_dtoa_r+0x6c4>
400e5fa0:	011786        	j	400e6402 <_dtoa_r+0xc16>
400e5fa3:	380000        	lsi	f0, a0, 224
400e5fa6:	2316f1        	l32r	a15, 400aec00 <_iram_end+0x210ac>
400e5fa9:	c15806        	j	400d650d <esp_intr_alloc_intrstatus+0x315>
400e5fac:	1825e6        	bgei	a5, 2, 400e5fc8 <_dtoa_r+0x7dc>
400e5faf:	152162        	l32i	a6, a1, 84
400e5fb2:	33a432        	movi	a3, 0x433
400e5fb5:	443a      	add.n	a4, a4, a3
400e5fb7:	56cc      	bnez.n	a6, 400e5fc0 <_dtoa_r+0x7d4>
400e5fb9:	1148      	l32i.n	a4, a1, 4
400e5fbb:	633c      	movi.n	a3, 54
400e5fbd:	c04340        	sub	a4, a3, a4
400e5fc0:	d138      	l32i.n	a3, a1, 52
400e5fc2:	a168      	l32i.n	a6, a1, 40
400e5fc4:	000a86        	j	400e5ff2 <_dtoa_r+0x806>
400e5fc7:	d18800        	mul16s	a8, a8, a0
400e5fca:	370b      	addi.n	a3, a7, -1
400e5fcc:	052837        	blt	a8, a3, 400e5fd5 <_dtoa_r+0x7e9>
400e5fcf:	c03830        	sub	a3, a8, a3
400e5fd2:	000406        	j	400e5fe6 <_dtoa_r+0x7fa>
400e5fd5:	d198      	l32i.n	a9, a1, 52
400e5fd7:	102142        	l32i	a4, a1, 64
400e5fda:	c0c390        	sub	a12, a3, a9
400e5fdd:	44ca      	add.n	a4, a4, a12
400e5fdf:	d139      	s32i.n	a3, a1, 52
400e5fe1:	106142        	s32i	a4, a1, 64
400e5fe4:	030c      	movi.n	a3, 0
400e5fe6:	a168      	l32i.n	a6, a1, 40
400e5fe8:	074d      	mov.n	a4, a7
400e5fea:	0047d6        	bgez	a7, 400e5ff2 <_dtoa_r+0x806>
400e5fed:	c06670        	sub	a6, a6, a7
400e5ff0:	040c      	movi.n	a4, 0
400e5ff2:	0a2152        	l32i	a5, a1, 40
400e5ff5:	082182        	l32i	a8, a1, 32
400e5ff8:	805540        	add	a5, a5, a4
400e5ffb:	884a      	add.n	a8, a8, a4
400e5ffd:	1b0c      	movi.n	a11, 1
400e5fff:	02ad      	mov.n	a10, a2
400e6001:	a159      	s32i.n	a5, a1, 40
400e6003:	8189      	s32i.n	a8, a1, 32
400e6005:	f57e65        	call8	400db7ec <__i2b>
400e6008:	0a4d      	mov.n	a4, a10
400e600a:	000146        	j	400e6013 <_dtoa_r+0x827>
400e600d:	d138      	l32i.n	a3, a1, 52
400e600f:	a168      	l32i.n	a6, a1, 40
400e6011:	f148      	l32i.n	a4, a1, 60
400e6013:	315f60        	srai	a5, a6, 31
400e6016:	c05560        	sub	a5, a5, a6
400e6019:	01c5d6        	bgez	a5, 400e6039 <_dtoa_r+0x84d>
400e601c:	8198      	l32i.n	a9, a1, 32
400e601e:	315f90        	srai	a5, a9, 31
400e6021:	c05590        	sub	a5, a5, a9
400e6024:	0115d6        	bgez	a5, 400e6039 <_dtoa_r+0x84d>
400e6027:	a188      	l32i.n	a8, a1, 40
400e6029:	435690        	min	a5, a6, a9
400e602c:	c08850        	sub	a8, a8, a5
400e602f:	c09950        	sub	a9, a9, a5
400e6032:	a189      	s32i.n	a8, a1, 40
400e6034:	c06650        	sub	a6, a6, a5
400e6037:	8199      	s32i.n	a9, a1, 32
400e6039:	0d2192        	l32i	a9, a1, 52
400e603c:	3c19a6        	blti	a9, 1, 400e607c <_dtoa_r+0x890>
400e603f:	f158      	l32i.n	a5, a1, 60
400e6041:	95ac      	beqz.n	a5, 400e606e <_dtoa_r+0x882>
400e6043:	d39c      	beqz.n	a3, 400e6064 <_dtoa_r+0x878>
400e6045:	04bd      	mov.n	a11, a4
400e6047:	03cd      	mov.n	a12, a3
400e6049:	02ad      	mov.n	a10, a2
400e604b:	f58ba5        	call8	400db904 <__pow5mult>
400e604e:	71c8      	l32i.n	a12, a1, 28
400e6050:	0abd      	mov.n	a11, a10
400e6052:	0a4d      	mov.n	a4, a10
400e6054:	02ad      	mov.n	a10, a2
400e6056:	f57aa5        	call8	400db800 <__multiply>
400e6059:	71b8      	l32i.n	a11, a1, 28
400e605b:	0a5d      	mov.n	a5, a10
400e605d:	02ad      	mov.n	a10, a2
400e605f:	f55b25        	call8	400db610 <_Bfree>
400e6062:	7159      	s32i.n	a5, a1, 28
400e6064:	d188      	l32i.n	a8, a1, 52
400e6066:	c0c830        	sub	a12, a8, a3
400e6069:	fc8c      	beqz.n	a12, 400e607c <_dtoa_r+0x890>
400e606b:	000086        	j	400e6071 <_dtoa_r+0x885>
400e606e:	0d21c2        	l32i	a12, a1, 52
400e6071:	0721b2        	l32i	a11, a1, 28
400e6074:	20a220        	or	a10, a2, a2
400e6077:	f588e5        	call8	400db904 <__pow5mult>
400e607a:	71a9      	s32i.n	a10, a1, 28
400e607c:	01a0b2        	movi	a11, 1
400e607f:	20a220        	or	a10, a2, a2
400e6082:	f576a5        	call8	400db7ec <__i2b>
400e6085:	102192        	l32i	a9, a1, 64
400e6088:	0a3d      	mov.n	a3, a10
400e608a:	397916        	beqz	a9, 400e6425 <_dtoa_r+0xc39>
400e608d:	0abd      	mov.n	a11, a10
400e608f:	09cd      	mov.n	a12, a9
400e6091:	02ad      	mov.n	a10, a2
400e6093:	f58725        	call8	400db904 <__pow5mult>
400e6096:	c158      	l32i.n	a5, a1, 48
400e6098:	0a3d      	mov.n	a3, a10
400e609a:	3025e6        	bgei	a5, 2, 400e60ce <_dtoa_r+0x8e2>
400e609d:	080c      	movi.n	a8, 0
400e609f:	4198      	l32i.n	a9, a1, 16
400e60a1:	d189      	s32i.n	a8, a1, 52
400e60a3:	1d9987        	bne	a9, a8, 400e60c4 <_dtoa_r+0x8d8>
400e60a6:	a96451        	l32r	a5, 400d0638 <_flash_cache_start+0x620>
400e60a9:	51a8      	l32i.n	a10, a1, 20
400e60ab:	1585a7        	bany	a5, a10, 400e60c4 <_dtoa_r+0x8d8>
400e60ae:	a98651        	l32r	a5, 400d06c8 <_flash_cache_start+0x6b0>
400e60b1:	0f05a7        	bnone	a5, a10, 400e60c4 <_dtoa_r+0x8d8>
400e60b4:	a158      	l32i.n	a5, a1, 40
400e60b6:	8188      	l32i.n	a8, a1, 32
400e60b8:	551b      	addi.n	a5, a5, 1
400e60ba:	881b      	addi.n	a8, a8, 1
400e60bc:	190c      	movi.n	a9, 1
400e60be:	a159      	s32i.n	a5, a1, 40
400e60c0:	8189      	s32i.n	a8, a1, 32
400e60c2:	d199      	s32i.n	a9, a1, 52
400e60c4:	102152        	l32i	a5, a1, 64
400e60c7:	1a0c      	movi.n	a10, 1
400e60c9:	759c      	beqz.n	a5, 400e60e4 <_dtoa_r+0x8f8>
400e60cb:	000146        	j	400e60d4 <_dtoa_r+0x8e8>
400e60ce:	00a082        	movi	a8, 0
400e60d1:	0d6182        	s32i	a8, a1, 52
400e60d4:	042352        	l32i	a5, a3, 16
400e60d7:	a05530        	addx4	a5, a5, a3
400e60da:	45a8      	l32i.n	a10, a5, 16
400e60dc:	052c      	movi.n	a5, 32
400e60de:	f56565        	call8	400db734 <__hi0bits>
400e60e1:	c0a5a0        	sub	a10, a5, a10
400e60e4:	8198      	l32i.n	a9, a1, 32
400e60e6:	aa9a      	add.n	a10, a10, a9
400e60e8:	44a0a0        	extui	a10, a10, 0, 5
400e60eb:	ba9c      	beqz.n	a10, 400e610a <_dtoa_r+0x91e>
400e60ed:	052c      	movi.n	a5, 32
400e60ef:	c055a0        	sub	a5, a5, a10
400e60f2:	0f55a6        	blti	a5, 5, 400e6105 <_dtoa_r+0x919>
400e60f5:	c51c      	movi.n	a5, 28
400e60f7:	c0a5a0        	sub	a10, a5, a10
400e60fa:	a158      	l32i.n	a5, a1, 40
400e60fc:	66aa      	add.n	a6, a6, a10
400e60fe:	55aa      	add.n	a5, a5, a10
400e6100:	a159      	s32i.n	a5, a1, 40
400e6102:	000486        	j	400e6118 <_dtoa_r+0x92c>
400e6105:	134526        	beqi	a5, 4, 400e611c <_dtoa_r+0x930>
400e6108:	05ad      	mov.n	a10, a5
400e610a:	a188      	l32i.n	a8, a1, 40
400e610c:	1ccaa2        	addi	a10, a10, 28
400e610f:	88aa      	add.n	a8, a8, a10
400e6111:	8198      	l32i.n	a9, a1, 32
400e6113:	a189      	s32i.n	a8, a1, 40
400e6115:	8066a0        	add	a6, a6, a10
400e6118:	99aa      	add.n	a9, a9, a10
400e611a:	8199      	s32i.n	a9, a1, 32
400e611c:	a158      	l32i.n	a5, a1, 40
400e611e:	0b15a6        	blti	a5, 1, 400e612d <_dtoa_r+0x941>
400e6121:	71b8      	l32i.n	a11, a1, 28
400e6123:	05cd      	mov.n	a12, a5
400e6125:	02ad      	mov.n	a10, a2
400e6127:	f586e5        	call8	400db994 <__lshift>
400e612a:	0761a2        	s32i	a10, a1, 28
400e612d:	8188      	l32i.n	a8, a1, 32
400e612f:	0c18a6        	blti	a8, 1, 400e613f <_dtoa_r+0x953>
400e6132:	03bd      	mov.n	a11, a3
400e6134:	20c880        	or	a12, a8, a8
400e6137:	20a220        	or	a10, a2, a2
400e613a:	f585a5        	call8	400db994 <__lshift>
400e613d:	0a3d      	mov.n	a3, a10
400e613f:	142192        	l32i	a9, a1, 80
400e6142:	e9ac      	beqz.n	a9, 400e6174 <_dtoa_r+0x988>
400e6144:	71a8      	l32i.n	a10, a1, 28
400e6146:	03bd      	mov.n	a11, a3
400e6148:	f58e65        	call8	400dba30 <__mcmp>
400e614b:	025ad6        	bgez	a10, 400e6174 <_dtoa_r+0x988>
400e614e:	6158      	l32i.n	a5, a1, 24
400e6150:	71b8      	l32i.n	a11, a1, 28
400e6152:	550b      	addi.n	a5, a5, -1
400e6154:	0d0c      	movi.n	a13, 0
400e6156:	ac0c      	movi.n	a12, 10
400e6158:	02ad      	mov.n	a10, a2
400e615a:	6159      	s32i.n	a5, a1, 24
400e615c:	f54e25        	call8	400db640 <__multadd>
400e615f:	f188      	l32i.n	a8, a1, 60
400e6161:	71a9      	s32i.n	a10, a1, 28
400e6163:	e178      	l32i.n	a7, a1, 56
400e6165:	b88c      	beqz.n	a8, 400e6174 <_dtoa_r+0x988>
400e6167:	04bd      	mov.n	a11, a4
400e6169:	0d0c      	movi.n	a13, 0
400e616b:	ac0c      	movi.n	a12, 10
400e616d:	02ad      	mov.n	a10, a2
400e616f:	f54d25        	call8	400db640 <__multadd>
400e6172:	0a4d      	mov.n	a4, a10
400e6174:	ffc752        	addi	a5, a7, -1
400e6177:	208750        	or	a8, a7, a5
400e617a:	0508d6        	bgez	a8, 400e61ce <_dtoa_r+0x9e2>
400e617d:	0c2192        	l32i	a9, a1, 48
400e6180:	4a39a6        	blti	a9, 3, 400e61ce <_dtoa_r+0x9e2>
400e6183:	d7dc      	bnez.n	a7, 400e61a4 <_dtoa_r+0x9b8>
400e6185:	03bd      	mov.n	a11, a3
400e6187:	07dd      	mov.n	a13, a7
400e6189:	5c0c      	movi.n	a12, 5
400e618b:	02ad      	mov.n	a10, a2
400e618d:	f54b25        	call8	400db640 <__multadd>
400e6190:	0a3d      	mov.n	a3, a10
400e6192:	0abd      	mov.n	a11, a10
400e6194:	71a8      	l32i.n	a10, a1, 28
400e6196:	f589a5        	call8	400dba30 <__mcmp>
400e6199:	1b1ae6        	bgei	a10, 1, 400e61b8 <_dtoa_r+0x9cc>
400e619c:	000106        	j	400e61a4 <_dtoa_r+0x9b8>
400e619f:	030c00        	rsr.scompare1	a0
400e61a2:	034d      	mov.n	a4, a3
400e61a4:	112162        	l32i	a6, a1, 68
400e61a7:	f57c      	movi.n	a5, -1
400e61a9:	305560        	xor	a5, a5, a6
400e61ac:	6159      	s32i.n	a5, a1, 24
400e61ae:	b158      	l32i.n	a5, a1, 44
400e61b0:	0004c6        	j	400e61c7 <_dtoa_r+0x9db>
400e61b3:	6169      	s32i.n	a6, a1, 24
400e61b5:	204330        	or	a4, a3, a3
400e61b8:	6198      	l32i.n	a9, a1, 24
400e61ba:	b188      	l32i.n	a8, a1, 44
400e61bc:	163c      	movi.n	a6, 49
400e61be:	991b      	addi.n	a9, a9, 1
400e61c0:	581b      	addi.n	a5, a8, 1
400e61c2:	004862        	s8i	a6, a8, 0
400e61c5:	6199      	s32i.n	a9, a1, 24
400e61c7:	046d      	mov.n	a6, a4
400e61c9:	040c      	movi.n	a4, 0
400e61cb:	008486        	j	400e63e1 <_dtoa_r+0xbf5>
400e61ce:	f188      	l32i.n	a8, a1, 60
400e61d0:	58cc      	bnez.n	a8, 400e61d9 <_dtoa_r+0x9ed>
400e61d2:	b158      	l32i.n	a5, a1, 44
400e61d4:	005d46        	j	400e634d <_dtoa_r+0xb61>
400e61d7:	a60000        	lsi	f0, a0, 0x298
400e61da:	400d16        	beqz	a13, 400e65de <get_arg$isra$0+0x13e>
400e61dd:	6020b4        	lsi	f11, a0, 0x180
400e61e0:	2020c6        	j	400ee267 <_etext+0x198a>
400e61e3:	e520a2        	l32i	a10, a0, 0x394
400e61e6:	f57a      	add.n	a15, a5, a7
400e61e8:	0a4d      	mov.n	a4, a10
400e61ea:	0d2192        	l32i	a9, a1, 52
400e61ed:	206440        	or	a6, a4, a4
400e61f0:	49ac      	beqz.n	a9, 400e6218 <_dtoa_r+0xa2c>
400e61f2:	14b8      	l32i.n	a11, a4, 4
400e61f4:	02ad      	mov.n	a10, a2
400e61f6:	f53a65        	call8	400db59c <_Balloc>
400e61f9:	44c8      	l32i.n	a12, a4, 16
400e61fb:	0a6d      	mov.n	a6, a10
400e61fd:	cc2b      	addi.n	a12, a12, 2
400e61ff:	11cce0        	slli	a12, a12, 2
400e6202:	b4cb      	addi.n	a11, a4, 12
400e6204:	0ccaa2        	addi	a10, a10, 12
400e6207:	a7a481        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400e620a:	0008e0        	callx8	a8
400e620d:	06bd      	mov.n	a11, a6
400e620f:	1c0c      	movi.n	a12, 1
400e6211:	02ad      	mov.n	a10, a2
400e6213:	f57825        	call8	400db994 <__lshift>
400e6216:	0a6d      	mov.n	a6, a10
400e6218:	b198      	l32i.n	a9, a1, 44
400e621a:	595a      	add.n	a5, a9, a5
400e621c:	8159      	s32i.n	a5, a1, 32
400e621e:	71a8      	l32i.n	a10, a1, 28
400e6220:	03bd      	mov.n	a11, a3
400e6222:	1a6192        	s32i	a9, a1, 104
400e6225:	ff4ba5        	call8	400e56e0 <quorem>
400e6228:	30ca82        	addi	a8, a10, 48
400e622b:	0a7d      	mov.n	a7, a10
400e622d:	71a8      	l32i.n	a10, a1, 28
400e622f:	04bd      	mov.n	a11, a4
400e6231:	1b6182        	s32i	a8, a1, 108
400e6234:	f57fa5        	call8	400dba30 <__mcmp>
400e6237:	06cd      	mov.n	a12, a6
400e6239:	0a5d      	mov.n	a5, a10
400e623b:	03bd      	mov.n	a11, a3
400e623d:	20a220        	or	a10, a2, a2
400e6240:	f582a5        	call8	400dba6c <__mdiff>
400e6243:	0add      	mov.n	a13, a10
400e6245:	3aa8      	l32i.n	a10, a10, 12
400e6247:	1c0c      	movi.n	a12, 1
400e6249:	1b2182        	l32i	a8, a1, 108
400e624c:	1a2192        	l32i	a9, a1, 104
400e624f:	5adc      	bnez.n	a10, 400e6268 <_dtoa_r+0xa7c>
400e6251:	71a8      	l32i.n	a10, a1, 28
400e6253:	20bdd0        	or	a11, a13, a13
400e6256:	1861d2        	s32i	a13, a1, 96
400e6259:	f57d65        	call8	400dba30 <__mcmp>
400e625c:	1821d2        	l32i	a13, a1, 96
400e625f:	1a2192        	l32i	a9, a1, 104
400e6262:	1b2182        	l32i	a8, a1, 108
400e6265:	20caa0        	or	a12, a10, a10
400e6268:	0dbd      	mov.n	a11, a13
400e626a:	02ad      	mov.n	a10, a2
400e626c:	1b6182        	s32i	a8, a1, 108
400e626f:	1a6192        	s32i	a9, a1, 104
400e6272:	1861c2        	s32i	a12, a1, 96
400e6275:	f539a5        	call8	400db610 <_Bfree>
400e6278:	1821c2        	l32i	a12, a1, 96
400e627b:	c1b8      	l32i.n	a11, a1, 48
400e627d:	1b2182        	l32i	a8, a1, 108
400e6280:	20acb0        	or	a10, a12, a11
400e6283:	1a2192        	l32i	a9, a1, 104
400e6286:	3adc      	bnez.n	a10, 400e629d <_dtoa_r+0xab1>
400e6288:	41b8      	l32i.n	a11, a1, 16
400e628a:	04a0b0        	extui	a10, a11, 0, 1
400e628d:	cacc      	bnez.n	a10, 400e629d <_dtoa_r+0xab1>
400e628f:	9a3c      	movi.n	a10, 57
400e6291:	5d18a7        	beq	a8, a10, 400e62f2 <_dtoa_r+0xb06>
400e6294:	4a15a6        	blti	a5, 1, 400e62e2 <_dtoa_r+0xaf6>
400e6297:	001106        	j	400e62df <_dtoa_r+0xaf3>
400e629a:	000000        	ill
400e629d:	00f596        	bltz	a5, 400e62b0 <_dtoa_r+0xac4>
400e62a0:	c1a8      	l32i.n	a10, a1, 48
400e62a2:	2055a0        	or	a5, a5, a10
400e62a5:	03f556        	bnez	a5, 400e62e8 <_dtoa_r+0xafc>
400e62a8:	0421b2        	l32i	a11, a1, 16
400e62ab:	0450b0        	extui	a5, a11, 0, 1
400e62ae:	65fc      	bnez.n	a5, 400e62e8 <_dtoa_r+0xafc>
400e62b0:	2e1ca6        	blti	a12, 1, 400e62e2 <_dtoa_r+0xaf6>
400e62b3:	0721b2        	l32i	a11, a1, 28
400e62b6:	01a0c2        	movi	a12, 1
400e62b9:	20a220        	or	a10, a2, a2
400e62bc:	1b6182        	s32i	a8, a1, 108
400e62bf:	1a6192        	s32i	a9, a1, 104
400e62c2:	f56d25        	call8	400db994 <__lshift>
400e62c5:	03bd      	mov.n	a11, a3
400e62c7:	71a9      	s32i.n	a10, a1, 28
400e62c9:	f57665        	call8	400dba30 <__mcmp>
400e62cc:	1b2182        	l32i	a8, a1, 108
400e62cf:	1a2192        	l32i	a9, a1, 104
400e62d2:	041ae6        	bgei	a10, 1, 400e62da <_dtoa_r+0xaee>
400e62d5:	9acc      	bnez.n	a10, 400e62e2 <_dtoa_r+0xaf6>
400e62d7:	076807        	bbci	a8, 0, 400e62e2 <_dtoa_r+0xaf6>
400e62da:	953c      	movi.n	a5, 57
400e62dc:	121857        	beq	a8, a5, 400e62f2 <_dtoa_r+0xb06>
400e62df:	31c782        	addi	a8, a7, 49
400e62e2:	591b      	addi.n	a5, a9, 1
400e62e4:	000606        	j	400e6300 <_dtoa_r+0xb14>
400e62e7:	791b00        	lsi	f0, a11, 0x1e4
400e62ea:	181ca6        	blti	a12, 1, 400e6306 <_dtoa_r+0xb1a>
400e62ed:	953c      	movi.n	a5, 57
400e62ef:	099857        	bne	a8, a5, 400e62fc <_dtoa_r+0xb10>
400e62f2:	973c      	movi.n	a7, 57
400e62f4:	591b      	addi.n	a5, a9, 1
400e62f6:	004972        	s8i	a7, a9, 0
400e62f9:	002f06        	j	400e63b9 <_dtoa_r+0xbcd>
400e62fc:	075d      	mov.n	a5, a7
400e62fe:	881b      	addi.n	a8, a8, 1
400e6300:	004982        	s8i	a8, a9, 0
400e6303:	003686        	j	400e63e1 <_dtoa_r+0xbf5>
400e6306:	0821a2        	l32i	a10, a1, 32
400e6309:	004982        	s8i	a8, a9, 0
400e630c:	205770        	or	a5, a7, a7
400e630f:	7219a7        	beq	a9, a10, 400e6385 <_dtoa_r+0xb99>
400e6312:	71b8      	l32i.n	a11, a1, 28
400e6314:	0d0c      	movi.n	a13, 0
400e6316:	ac0c      	movi.n	a12, 10
400e6318:	02ad      	mov.n	a10, a2
400e631a:	f53265        	call8	400db640 <__multadd>
400e631d:	71a9      	s32i.n	a10, a1, 28
400e631f:	0d0c      	movi.n	a13, 0
400e6321:	ac0c      	movi.n	a12, 10
400e6323:	04bd      	mov.n	a11, a4
400e6325:	02ad      	mov.n	a10, a2
400e6327:	099467        	bne	a4, a6, 400e6334 <_dtoa_r+0xb48>
400e632a:	f53165        	call8	400db640 <__multadd>
400e632d:	0a4d      	mov.n	a4, a10
400e632f:	0a6d      	mov.n	a6, a10
400e6331:	0004c6        	j	400e6348 <_dtoa_r+0xb5c>
400e6334:	f530a5        	call8	400db640 <__multadd>
400e6337:	20b660        	or	a11, a6, a6
400e633a:	204aa0        	or	a4, a10, a10
400e633d:	0d0c      	movi.n	a13, 0
400e633f:	ac0c      	movi.n	a12, 10
400e6341:	02ad      	mov.n	a10, a2
400e6343:	f52fe5        	call8	400db640 <__multadd>
400e6346:	0a6d      	mov.n	a6, a10
400e6348:	079d      	mov.n	a9, a7
400e634a:	ffb406        	j	400e621e <_dtoa_r+0xa32>
400e634d:	71a8      	l32i.n	a10, a1, 28
400e634f:	03bd      	mov.n	a11, a3
400e6351:	ff38e5        	call8	400e56e0 <quorem>
400e6354:	30ca82        	addi	a8, a10, 48
400e6357:	b198      	l32i.n	a9, a1, 44
400e6359:	004582        	s8i	a8, a5, 0
400e635c:	551b      	addi.n	a5, a5, 1
400e635e:	c06590        	sub	a6, a5, a9
400e6361:	0d2677        	blt	a6, a7, 400e6372 <_dtoa_r+0xb86>
400e6364:	150c      	movi.n	a5, 1
400e6366:	535750        	max	a5, a7, a5
400e6369:	046d      	mov.n	a6, a4
400e636b:	595a      	add.n	a5, a9, a5
400e636d:	040c      	movi.n	a4, 0
400e636f:	000486        	j	400e6385 <_dtoa_r+0xb99>
400e6372:	0721b2        	l32i	a11, a1, 28
400e6375:	00a0d2        	movi	a13, 0
400e6378:	0aa0c2        	movi	a12, 10
400e637b:	02ad      	mov.n	a10, a2
400e637d:	f52c25        	call8	400db640 <__multadd>
400e6380:	71a9      	s32i.n	a10, a1, 28
400e6382:	fff1c6        	j	400e634d <_dtoa_r+0xb61>
400e6385:	71b8      	l32i.n	a11, a1, 28
400e6387:	1c0c      	movi.n	a12, 1
400e6389:	02ad      	mov.n	a10, a2
400e638b:	1b6182        	s32i	a8, a1, 108
400e638e:	f56065        	call8	400db994 <__lshift>
400e6391:	03bd      	mov.n	a11, a3
400e6393:	71a9      	s32i.n	a10, a1, 28
400e6395:	f569a5        	call8	400dba30 <__mcmp>
400e6398:	1b2182        	l32i	a8, a1, 108
400e639b:	1a1ae6        	bgei	a10, 1, 400e63b9 <_dtoa_r+0xbcd>
400e639e:	eaec      	bnez.n	a10, 400e63d0 <_dtoa_r+0xbe4>
400e63a0:	15e807        	bbsi	a8, 0, 400e63b9 <_dtoa_r+0xbcd>
400e63a3:	000a46        	j	400e63d0 <_dtoa_r+0xbe4>
400e63a6:	b188      	l32i.n	a8, a1, 44
400e63a8:	129877        	bne	a8, a7, 400e63be <_dtoa_r+0xbd2>
400e63ab:	6198      	l32i.n	a9, a1, 24
400e63ad:	173c      	movi.n	a7, 49
400e63af:	991b      	addi.n	a9, a9, 1
400e63b1:	6199      	s32i.n	a9, a1, 24
400e63b3:	004872        	s8i	a7, a8, 0
400e63b6:	0009c6        	j	400e63e1 <_dtoa_r+0xbf5>
400e63b9:	993c      	movi.n	a9, 57
400e63bb:	000046        	j	400e63c0 <_dtoa_r+0xbd4>
400e63be:	075d      	mov.n	a5, a7
400e63c0:	750b      	addi.n	a7, a5, -1
400e63c2:	000782        	l8ui	a8, a7, 0
400e63c5:	dd1897        	beq	a8, a9, 400e63a6 <_dtoa_r+0xbba>
400e63c8:	881b      	addi.n	a8, a8, 1
400e63ca:	004782        	s8i	a8, a7, 0
400e63cd:	000406        	j	400e63e1 <_dtoa_r+0xbf5>
400e63d0:	083c      	movi.n	a8, 48
400e63d2:	000086        	j	400e63d8 <_dtoa_r+0xbec>
400e63d5:	205770        	or	a5, a7, a7
400e63d8:	ffc572        	addi	a7, a5, -1
400e63db:	000792        	l8ui	a9, a7, 0
400e63de:	f31987        	beq	a9, a8, 400e63d5 <_dtoa_r+0xbe9>
400e63e1:	03bd      	mov.n	a11, a3
400e63e3:	02ad      	mov.n	a10, a2
400e63e5:	f522a5        	call8	400db610 <_Bfree>
400e63e8:	669c      	beqz.n	a6, 400e6402 <_dtoa_r+0xc16>
400e63ea:	848c      	beqz.n	a4, 400e63f6 <_dtoa_r+0xc0a>
400e63ec:	061467        	beq	a4, a6, 400e63f6 <_dtoa_r+0xc0a>
400e63ef:	04bd      	mov.n	a11, a4
400e63f1:	02ad      	mov.n	a10, a2
400e63f3:	f521e5        	call8	400db610 <_Bfree>
400e63f6:	06bd      	mov.n	a11, a6
400e63f8:	02ad      	mov.n	a10, a2
400e63fa:	f52165        	call8	400db610 <_Bfree>
400e63fd:	000046        	j	400e6402 <_dtoa_r+0xc16>
400e6400:	6169      	s32i.n	a6, a1, 24
400e6402:	0721b2        	l32i	a11, a1, 28
400e6405:	20a220        	or	a10, a2, a2
400e6408:	f52065        	call8	400db610 <_Bfree>
400e640b:	062132        	l32i	a3, a1, 24
400e640e:	020c      	movi.n	a2, 0
400e6410:	242142        	l32i	a4, a1, 144
400e6413:	004522        	s8i	a2, a5, 0
400e6416:	262162        	l32i	a6, a1, 152
400e6419:	231b      	addi.n	a2, a3, 1
400e641b:	0429      	s32i.n	a2, a4, 0
400e641d:	b128      	l32i.n	a2, a1, 44
400e641f:	569c      	beqz.n	a6, 400e6438 <_dtoa_r+0xc4c>
400e6421:	0659      	s32i.n	a5, a6, 0
400e6423:	f01d      	retw.n
400e6425:	c188      	l32i.n	a8, a1, 48
400e6427:	0228e6        	bgei	a8, 2, 400e642d <_dtoa_r+0xc41>
400e642a:	ff1bc6        	j	400e609d <_dtoa_r+0x8b1>
400e642d:	102192        	l32i	a9, a1, 64
400e6430:	1a0c      	movi.n	a10, 1
400e6432:	d199      	s32i.n	a9, a1, 52
400e6434:	ff2b06        	j	400e60e4 <_dtoa_r+0x8f8>
400e6437:	f01d00        	subx8	a1, a13, a0
	...

400e643c <frexp>:
400e643c:	004136        	entry	a1, 32
400e643f:	03bd      	mov.n	a11, a3
400e6441:	090c      	movi.n	a9, 0
400e6443:	03ed      	mov.n	a14, a3
400e6445:	a70831        	l32r	a3, 400d0068 <_flash_cache_start+0x50>
400e6448:	0499      	s32i.n	a9, a4, 0
400e644a:	a90591        	l32r	a9, 400d0860 <_flash_cache_start+0x848>
400e644d:	1083b0        	and	a8, a3, a11
400e6450:	02ad      	mov.n	a10, a2
400e6452:	02cd      	mov.n	a12, a2
400e6454:	0bdd      	mov.n	a13, a11
400e6456:	3e2987        	blt	a9, a8, 400e6498 <frexp+0x5c>
400e6459:	209820        	or	a9, a8, a2
400e645c:	89bc      	beqz.n	a9, 400e6498 <frexp+0x5c>
400e645e:	a87691        	l32r	a9, 400d0638 <_flash_cache_start+0x620>
400e6461:	152987        	blt	a9, a8, 400e647a <frexp+0x3e>
400e6464:	a700c1        	l32r	a12, 400d0064 <_flash_cache_start+0x4c>
400e6467:	a8ffd1        	l32r	a13, 400d0864 <_flash_cache_start+0x84c>
400e646a:	a6fd81        	l32r	a8, 400d0060 <_flash_cache_start+0x48>
400e646d:	0008e0        	callx8	a8
400e6470:	1083b0        	and	a8, a3, a11
400e6473:	caaf32        	movi	a3, -54
400e6476:	0bed      	mov.n	a14, a11
400e6478:	0439      	s32i.n	a3, a4, 0
400e647a:	0438      	l32i.n	a3, a4, 0
400e647c:	318480        	srai	a8, a8, 20
400e647f:	02ac92        	movi	a9, 0xfffffc02
400e6482:	889a      	add.n	a8, a8, a9
400e6484:	838a      	add.n	a8, a3, a8
400e6486:	a8f831        	l32r	a3, 400d0868 <_flash_cache_start+0x850>
400e6489:	0489      	s32i.n	a8, a4, 0
400e648b:	a8ba41        	l32r	a4, 400d0774 <_flash_cache_start+0x75c>
400e648e:	103e30        	and	a3, a14, a3
400e6491:	20b340        	or	a11, a3, a4
400e6494:	0acd      	mov.n	a12, a10
400e6496:	0bdd      	mov.n	a13, a11
400e6498:	0c2d      	mov.n	a2, a12
400e649a:	0d3d      	mov.n	a3, a13
400e649c:	f01d      	retw.n
	...

400e64a0 <get_arg$isra$0>:
400e64a0:	008136        	entry	a1, 64
400e64a3:	102182        	l32i	a8, a1, 64
400e64a6:	2129      	s32i.n	a2, a1, 8
400e64a8:	3159      	s32i.n	a5, a1, 12
400e64aa:	0528      	l32i.n	a2, a5, 0
400e64ac:	2198      	l32i.n	a9, a1, 8
400e64ae:	0858      	l32i.n	a5, a8, 0
400e64b0:	933550        	movnez	a3, a5, a5
400e64b3:	0199      	s32i.n	a9, a1, 0
400e64b5:	00d3c6        	j	400e6808 <get_arg$isra$0+0x368>
400e64b8:	1b0000        	un.s	b0, f0, f0
400e64bb:	035233        	lsi	f3, a2, 12
400e64be:	551600        	extui	a1, a0, 22, 6
400e64c1:	c58200        	extui	a8, a0, 18, 13
400e64c4:	56db      	addi.n	a5, a6, 13
400e64c6:	ff18      	l32i.n	a1, a15, 60
400e64c8:	349516        	beqz	a5, 400e6815 <get_arg$isra$0+0x375>
400e64cb:	050c      	movi.n	a5, 0
400e64cd:	05ed      	mov.n	a14, a5
400e64cf:	f97c      	movi.n	a9, -1
400e64d1:	05dd      	mov.n	a13, a5
400e64d3:	1159      	s32i.n	a5, a1, 4
400e64d5:	03ad      	mov.n	a10, a3
400e64d7:	a897c1        	l32r	a12, 400d0734 <_flash_cache_start+0x71c>
400e64da:	000a82        	l8ui	a8, a10, 0
400e64dd:	331b      	addi.n	a3, a3, 1
400e64df:	bc8a      	add.n	a11, a12, a8
400e64e1:	000bc2        	l8ui	a12, a11, 0
400e64e4:	11b8      	l32i.n	a11, a1, 4
400e64e6:	b0fbb0        	addx8	a15, a11, a11
400e64e9:	a893b1        	l32r	a11, 400d0738 <_flash_cache_start+0x720>
400e64ec:	bbfa      	add.n	a11, a11, a15
400e64ee:	bbca      	add.n	a11, a11, a12
400e64f0:	000bb2        	l8ui	a11, a11, 0
400e64f3:	11b9      	s32i.n	a11, a1, 4
400e64f5:	a891b1        	l32r	a11, 400d073c <_flash_cache_start+0x724>
400e64f8:	fbfa      	add.n	a15, a11, a15
400e64fa:	ffca      	add.n	a15, a15, a12
400e64fc:	000fb2        	l8ui	a11, a15, 0
400e64ff:	bb0b      	addi.n	a11, a11, -1
400e6501:	74b0b0        	extui	a11, a11, 0, 8
400e6504:	028bb6        	bltui	a11, 8, 400e650a <get_arg$isra$0+0x6a>
400e6507:	00bcc6        	j	400e67fe <get_arg$isra$0+0x35e>
400e650a:	a8d8c1        	l32r	a12, 400d086c <_flash_cache_start+0x854>
400e650d:	a0bbc0        	addx4	a11, a11, a12
400e6510:	0bb8      	l32i.n	a11, a11, 0
400e6512:	000ba0        	jx	a11
400e6515:	9a0c      	movi.n	a10, 9
400e6517:	00b5c6        	j	400e67f2 <get_arg$isra$0+0x352>
400e651a:	6aa0b2        	movi	a11, 106
400e651d:	3018b7        	beq	a8, a11, 400e6551 <get_arg$isra$0+0xb1>
400e6520:	0d3b87        	bltu	a11, a8, 400e6531 <get_arg$isra$0+0x91>
400e6523:	cb4c      	movi.n	a11, 76
400e6525:	2318b7        	beq	a8, a11, 400e654c <get_arg$isra$0+0xac>
400e6528:	68a0b2        	movi	a11, 104
400e652b:	2a98b7        	bne	a8, a11, 400e6559 <get_arg$isra$0+0xb9>
400e652e:	00b306        	j	400e67fe <get_arg$isra$0+0x35e>
400e6531:	74a0b2        	movi	a11, 116
400e6534:	0298b7        	bne	a8, a11, 400e653a <get_arg$isra$0+0x9a>
400e6537:	00b0c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e653a:	7aa0b2        	movi	a11, 122
400e653d:	0298b7        	bne	a8, a11, 400e6543 <get_arg$isra$0+0xa3>
400e6540:	00ae86        	j	400e67fe <get_arg$isra$0+0x35e>
400e6543:	71a0b2        	movi	a11, 113
400e6546:	0718b7        	beq	a8, a11, 400e6551 <get_arg$isra$0+0xb1>
400e6549:	000306        	j	400e6559 <get_arg$isra$0+0xb9>
400e654c:	880c      	movi.n	a8, 8
400e654e:	000046        	j	400e6553 <get_arg$isra$0+0xb3>
400e6551:	082c      	movi.n	a8, 32
400e6553:	20dd80        	or	a13, a13, a8
400e6556:	00a906        	j	400e67fe <get_arg$isra$0+0x35e>
400e6559:	010ab2        	l8ui	a11, a10, 1
400e655c:	6ca082        	movi	a8, 108
400e655f:	099b87        	bne	a11, a8, 400e656c <get_arg$isra$0+0xcc>
400e6562:	032c      	movi.n	a3, 32
400e6564:	20dd30        	or	a13, a13, a3
400e6567:	3a2b      	addi.n	a3, a10, 2
400e6569:	00a446        	j	400e67fe <get_arg$isra$0+0x35e>
400e656c:	081c      	movi.n	a8, 16
400e656e:	fff846        	j	400e6553 <get_arg$isra$0+0xb3>
400e6571:	bfc882        	addi	a8, a8, -65
400e6574:	748080        	extui	a8, a8, 0, 8
400e6577:	7a3c      	movi.n	a10, 55
400e6579:	442020        	extui	a2, a2, 0, 5
400e657c:	253a87        	bltu	a10, a8, 400e65a5 <get_arg$isra$0+0x105>
400e657f:	a8bca1        	l32r	a10, 400d0870 <_flash_cache_start+0x858>
400e6582:	a088a0        	addx4	a8, a8, a10
400e6585:	0888      	l32i.n	a8, a8, 0
400e6587:	0008a0        	jx	a8
400e658a:	026d47        	bbci	a13, 4, 400e6590 <get_arg$isra$0+0xf0>
400e658d:	00d806        	j	400e68f1 <get_arg$isra$0+0x451>
400e6590:	026d57        	bbci	a13, 5, 400e6596 <get_arg$isra$0+0xf6>
400e6593:	00dec6        	j	400e6912 <get_arg$isra$0+0x472>
400e6596:	00db46        	j	400e6907 <get_arg$isra$0+0x467>
400e6599:	026d47        	bbci	a13, 4, 400e659f <get_arg$isra$0+0xff>
400e659c:	00d186        	j	400e68e6 <get_arg$isra$0+0x446>
400e659f:	00d906        	j	400e6907 <get_arg$isra$0+0x467>
400e65a2:	000000        	ill
400e65a5:	070926        	beqi	a9, -1, 400e65b0 <get_arg$isra$0+0x110>
400e65a8:	a08970        	addx4	a8, a9, a7
400e65ab:	0859      	s32i.n	a5, a8, 0
400e65ad:	009346        	j	400e67fe <get_arg$isra$0+0x35e>
400e65b0:	0275b6        	bltui	a5, 7, 400e65b6 <get_arg$isra$0+0x116>
400e65b3:	0091c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e65b6:	a8af81        	l32r	a8, 400d0874 <_flash_cache_start+0x85c>
400e65b9:	a08580        	addx4	a8, a5, a8
400e65bc:	0888      	l32i.n	a8, a8, 0
400e65be:	0008a0        	jx	a8
400e65c1:	2458      	l32i.n	a5, a4, 8
400e65c3:	881c      	movi.n	a8, 24
400e65c5:	954b      	addi.n	a9, a5, 4
400e65c7:	2499      	s32i.n	a9, a4, 8
400e65c9:	a21b      	addi.n	a10, a2, 1
400e65cb:	b02260        	addx8	a2, a2, a6
400e65ce:	072897        	blt	a8, a9, 400e65d9 <get_arg$isra$0+0x139>
400e65d1:	1488      	l32i.n	a8, a4, 4
400e65d3:	0002c6        	j	400e65e2 <get_arg$isra$0+0x142>
400e65d6:	000000        	ill
400e65d9:	032857        	blt	a8, a5, 400e65e0 <get_arg$isra$0+0x140>
400e65dc:	452c      	movi.n	a5, 36
400e65de:	2459      	s32i.n	a5, a4, 8
400e65e0:	0488      	l32i.n	a8, a4, 0
400e65e2:	2458      	l32i.n	a5, a4, 8
400e65e4:	f97c      	movi.n	a9, -1
400e65e6:	585a      	add.n	a5, a8, a5
400e65e8:	fcc552        	addi	a5, a5, -4
400e65eb:	0558      	l32i.n	a5, a5, 0
400e65ed:	0259      	s32i.n	a5, a2, 0
400e65ef:	0a2d      	mov.n	a2, a10
400e65f1:	150c      	movi.n	a5, 1
400e65f3:	0081c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e65f6:	2458      	l32i.n	a5, a4, 8
400e65f8:	887c      	movi.n	a8, -8
400e65fa:	557b      	addi.n	a5, a5, 7
400e65fc:	105580        	and	a5, a5, a8
400e65ff:	958b      	addi.n	a9, a5, 8
400e6601:	2499      	s32i.n	a9, a4, 8
400e6603:	881c      	movi.n	a8, 24
400e6605:	a21b      	addi.n	a10, a2, 1
400e6607:	b02260        	addx8	a2, a2, a6
400e660a:	072897        	blt	a8, a9, 400e6615 <get_arg$isra$0+0x175>
400e660d:	1488      	l32i.n	a8, a4, 4
400e660f:	0002c6        	j	400e661e <get_arg$isra$0+0x17e>
400e6612:	000000        	ill
400e6615:	032857        	blt	a8, a5, 400e661c <get_arg$isra$0+0x17c>
400e6618:	852c      	movi.n	a5, 40
400e661a:	2459      	s32i.n	a5, a4, 8
400e661c:	0488      	l32i.n	a8, a4, 0
400e661e:	2458      	l32i.n	a5, a4, 8
400e6620:	585a      	add.n	a5, a8, a5
400e6622:	f8c552        	addi	a5, a5, -8
400e6625:	1598      	l32i.n	a9, a5, 4
400e6627:	0588      	l32i.n	a8, a5, 0
400e6629:	1299      	s32i.n	a9, a2, 4
400e662b:	0289      	s32i.n	a8, a2, 0
400e662d:	f97c      	movi.n	a9, -1
400e662f:	0a2d      	mov.n	a2, a10
400e6631:	250c      	movi.n	a5, 2
400e6633:	0071c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e6636:	2458      	l32i.n	a5, a4, 8
400e6638:	881c      	movi.n	a8, 24
400e663a:	954b      	addi.n	a9, a5, 4
400e663c:	2499      	s32i.n	a9, a4, 8
400e663e:	a21b      	addi.n	a10, a2, 1
400e6640:	b02260        	addx8	a2, a2, a6
400e6643:	062897        	blt	a8, a9, 400e664d <get_arg$isra$0+0x1ad>
400e6646:	1488      	l32i.n	a8, a4, 4
400e6648:	000286        	j	400e6656 <get_arg$isra$0+0x1b6>
400e664b:	570000        	lsi	f0, a0, 0x15c
400e664e:	0328      	l32i.n	a2, a3, 0
400e6650:	452c      	movi.n	a5, 36
400e6652:	2459      	s32i.n	a5, a4, 8
400e6654:	0488      	l32i.n	a8, a4, 0
400e6656:	2458      	l32i.n	a5, a4, 8
400e6658:	f97c      	movi.n	a9, -1
400e665a:	585a      	add.n	a5, a8, a5
400e665c:	fcc552        	addi	a5, a5, -4
400e665f:	0558      	l32i.n	a5, a5, 0
400e6661:	0259      	s32i.n	a5, a2, 0
400e6663:	0a2d      	mov.n	a2, a10
400e6665:	650c      	movi.n	a5, 6
400e6667:	0064c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e666a:	2458      	l32i.n	a5, a4, 8
400e666c:	881c      	movi.n	a8, 24
400e666e:	954b      	addi.n	a9, a5, 4
400e6670:	2499      	s32i.n	a9, a4, 8
400e6672:	a21b      	addi.n	a10, a2, 1
400e6674:	b02260        	addx8	a2, a2, a6
400e6677:	062897        	blt	a8, a9, 400e6681 <get_arg$isra$0+0x1e1>
400e667a:	1488      	l32i.n	a8, a4, 4
400e667c:	000286        	j	400e668a <get_arg$isra$0+0x1ea>
400e667f:	570000        	lsi	f0, a0, 0x15c
400e6682:	0328      	l32i.n	a2, a3, 0
400e6684:	452c      	movi.n	a5, 36
400e6686:	2459      	s32i.n	a5, a4, 8
400e6688:	0488      	l32i.n	a8, a4, 0
400e668a:	2458      	l32i.n	a5, a4, 8
400e668c:	f97c      	movi.n	a9, -1
400e668e:	585a      	add.n	a5, a8, a5
400e6690:	fcc552        	addi	a5, a5, -4
400e6693:	0558      	l32i.n	a5, a5, 0
400e6695:	0259      	s32i.n	a5, a2, 0
400e6697:	0a2d      	mov.n	a2, a10
400e6699:	050c      	movi.n	a5, 0
400e669b:	0057c6        	j	400e67fe <get_arg$isra$0+0x35e>
400e669e:	2458      	l32i.n	a5, a4, 8
400e66a0:	881c      	movi.n	a8, 24
400e66a2:	954b      	addi.n	a9, a5, 4
400e66a4:	2499      	s32i.n	a9, a4, 8
400e66a6:	a21b      	addi.n	a10, a2, 1
400e66a8:	b02260        	addx8	a2, a2, a6
400e66ab:	062897        	blt	a8, a9, 400e66b5 <get_arg$isra$0+0x215>
400e66ae:	1488      	l32i.n	a8, a4, 4
400e66b0:	000286        	j	400e66be <get_arg$isra$0+0x21e>
400e66b3:	570000        	lsi	f0, a0, 0x15c
400e66b6:	0328      	l32i.n	a2, a3, 0
400e66b8:	452c      	movi.n	a5, 36
400e66ba:	2459      	s32i.n	a5, a4, 8
400e66bc:	0488      	l32i.n	a8, a4, 0
400e66be:	2458      	l32i.n	a5, a4, 8
400e66c0:	f97c      	movi.n	a9, -1
400e66c2:	585a      	add.n	a5, a8, a5
400e66c4:	fcc552        	addi	a5, a5, -4
400e66c7:	0558      	l32i.n	a5, a5, 0
400e66c9:	0259      	s32i.n	a5, a2, 0
400e66cb:	0a2d      	mov.n	a2, a10
400e66cd:	350c      	movi.n	a5, 3
400e66cf:	004ac6        	j	400e67fe <get_arg$isra$0+0x35e>
400e66d2:	2458      	l32i.n	a5, a4, 8
400e66d4:	887c      	movi.n	a8, -8
400e66d6:	557b      	addi.n	a5, a5, 7
400e66d8:	105580        	and	a5, a5, a8
400e66db:	958b      	addi.n	a9, a5, 8
400e66dd:	2499      	s32i.n	a9, a4, 8
400e66df:	881c      	movi.n	a8, 24
400e66e1:	a21b      	addi.n	a10, a2, 1
400e66e3:	b02260        	addx8	a2, a2, a6
400e66e6:	072897        	blt	a8, a9, 400e66f1 <get_arg$isra$0+0x251>
400e66e9:	1488      	l32i.n	a8, a4, 4
400e66eb:	0002c6        	j	400e66fa <get_arg$isra$0+0x25a>
400e66ee:	000000        	ill
400e66f1:	032857        	blt	a8, a5, 400e66f8 <get_arg$isra$0+0x258>
400e66f4:	852c      	movi.n	a5, 40
400e66f6:	2459      	s32i.n	a5, a4, 8
400e66f8:	0488      	l32i.n	a8, a4, 0
400e66fa:	2458      	l32i.n	a5, a4, 8
400e66fc:	585a      	add.n	a5, a8, a5
400e66fe:	f8c552        	addi	a5, a5, -8
400e6701:	1598      	l32i.n	a9, a5, 4
400e6703:	0588      	l32i.n	a8, a5, 0
400e6705:	1299      	s32i.n	a9, a2, 4
400e6707:	0289      	s32i.n	a8, a2, 0
400e6709:	f97c      	movi.n	a9, -1
400e670b:	0a2d      	mov.n	a2, a10
400e670d:	450c      	movi.n	a5, 4
400e670f:	003ac6        	j	400e67fe <get_arg$isra$0+0x35e>
400e6712:	2488      	l32i.n	a8, a4, 8
400e6714:	8a7c      	movi.n	a10, -8
400e6716:	887b      	addi.n	a8, a8, 7
400e6718:	1088a0        	and	a8, a8, a10
400e671b:	b88b      	addi.n	a11, a8, 8
400e671d:	24b9      	s32i.n	a11, a4, 8
400e671f:	8a1c      	movi.n	a10, 24
400e6721:	c21b      	addi.n	a12, a2, 1
400e6723:	b02260        	addx8	a2, a2, a6
400e6726:	072ab7        	blt	a10, a11, 400e6731 <get_arg$isra$0+0x291>
400e6729:	14a8      	l32i.n	a10, a4, 4
400e672b:	0002c6        	j	400e673a <get_arg$isra$0+0x29a>
400e672e:	000000        	ill
400e6731:	032a87        	blt	a10, a8, 400e6738 <get_arg$isra$0+0x298>
400e6734:	882c      	movi.n	a8, 40
400e6736:	2489      	s32i.n	a8, a4, 8
400e6738:	04a8      	l32i.n	a10, a4, 0
400e673a:	2488      	l32i.n	a8, a4, 8
400e673c:	8a8a      	add.n	a8, a10, a8
400e673e:	f8c882        	addi	a8, a8, -8
400e6741:	08a8      	l32i.n	a10, a8, 0
400e6743:	18b8      	l32i.n	a11, a8, 4
400e6745:	02a9      	s32i.n	a10, a2, 0
400e6747:	12b9      	s32i.n	a11, a2, 4
400e6749:	002006        	j	400e67cd <get_arg$isra$0+0x32d>
400e674c:	0788      	l32i.n	a8, a7, 0
400e674e:	140866        	bnei	a8, -1, 400e6766 <get_arg$isra$0+0x2c6>
400e6751:	80a0c2        	movi	a12, 128
400e6754:	0b0c      	movi.n	a11, 0
400e6756:	07ad      	mov.n	a10, a7
400e6758:	51d9      	s32i.n	a13, a1, 20
400e675a:	61e9      	s32i.n	a14, a1, 24
400e675c:	a64681        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400e675f:	0008e0        	callx8	a8
400e6762:	61e8      	l32i.n	a14, a1, 24
400e6764:	51d8      	l32i.n	a13, a1, 20
400e6766:	0188      	l32i.n	a8, a1, 0
400e6768:	9e0b      	addi.n	a9, a14, -1
400e676a:	538890        	max	a8, a8, a9
400e676d:	000ac6        	j	400e679c <get_arg$isra$0+0x2fc>
400e6770:	0788      	l32i.n	a8, a7, 0
400e6772:	180866        	bnei	a8, -1, 400e678e <get_arg$isra$0+0x2ee>
400e6775:	80a0c2        	movi	a12, 128
400e6778:	0b0c      	movi.n	a11, 0
400e677a:	07ad      	mov.n	a10, a7
400e677c:	4199      	s32i.n	a9, a1, 16
400e677e:	51d9      	s32i.n	a13, a1, 20
400e6780:	61e9      	s32i.n	a14, a1, 24
400e6782:	a63c81        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400e6785:	0008e0        	callx8	a8
400e6788:	61e8      	l32i.n	a14, a1, 24
400e678a:	51d8      	l32i.n	a13, a1, 20
400e678c:	4198      	l32i.n	a9, a1, 16
400e678e:	ee0b      	addi.n	a14, a14, -1
400e6790:	a08e70        	addx4	a8, a14, a7
400e6793:	0a0c      	movi.n	a10, 0
400e6795:	08a9      	s32i.n	a10, a8, 0
400e6797:	0188      	l32i.n	a8, a1, 0
400e6799:	5388e0        	max	a8, a8, a14
400e679c:	0189      	s32i.n	a8, a1, 0
400e679e:	001706        	j	400e67fe <get_arg$isra$0+0x35e>
400e67a1:	0a3d      	mov.n	a3, a10
400e67a3:	2488      	l32i.n	a8, a4, 8
400e67a5:	8a1c      	movi.n	a10, 24
400e67a7:	b84b      	addi.n	a11, a8, 4
400e67a9:	24b9      	s32i.n	a11, a4, 8
400e67ab:	c21b      	addi.n	a12, a2, 1
400e67ad:	b02260        	addx8	a2, a2, a6
400e67b0:	052ab7        	blt	a10, a11, 400e67b9 <get_arg$isra$0+0x319>
400e67b3:	14a8      	l32i.n	a10, a4, 4
400e67b5:	000246        	j	400e67c2 <get_arg$isra$0+0x322>
400e67b8:	2a8700        	mul.s	f8, f7, f0
400e67bb:	482c03        	lsi	f0, a12, 0x120
400e67be:	2489      	s32i.n	a8, a4, 8
400e67c0:	04a8      	l32i.n	a10, a4, 0
400e67c2:	2488      	l32i.n	a8, a4, 8
400e67c4:	8a8a      	add.n	a8, a10, a8
400e67c6:	fcc882        	addi	a8, a8, -4
400e67c9:	0888      	l32i.n	a8, a8, 0
400e67cb:	0289      	s32i.n	a8, a2, 0
400e67cd:	0c2d      	mov.n	a2, a12
400e67cf:	000ac6        	j	400e67fe <get_arg$isra$0+0x35e>
400e67d2:	d0c8e2        	addi	a14, a8, -48
400e67d5:	9a0c      	movi.n	a10, 9
400e67d7:	0001c6        	j	400e67e2 <get_arg$isra$0+0x342>
400e67da:	a0eee0        	addx4	a14, a14, a14
400e67dd:	90ee80        	addx2	a14, a14, a8
400e67e0:	331b      	addi.n	a3, a3, 1
400e67e2:	000382        	l8ui	a8, a3, 0
400e67e5:	589c      	beqz.n	a8, 400e67fe <get_arg$isra$0+0x35e>
400e67e7:	d0c882        	addi	a8, a8, -48
400e67ea:	ecba87        	bgeu	a10, a8, 400e67da <get_arg$isra$0+0x33a>
400e67ed:	000346        	j	400e67fe <get_arg$isra$0+0x35e>
400e67f0:	331b      	addi.n	a3, a3, 1
400e67f2:	000382        	l8ui	a8, a3, 0
400e67f5:	d0c882        	addi	a8, a8, -48
400e67f8:	748080        	extui	a8, a8, 0, 8
400e67fb:	f1ba87        	bgeu	a10, a8, 400e67f0 <get_arg$isra$0+0x350>
400e67fe:	11a8      	l32i.n	a10, a1, 4
400e6800:	b80c      	movi.n	a8, 11
400e6802:	021a87        	beq	a10, a8, 400e6808 <get_arg$isra$0+0x368>
400e6805:	ff3306        	j	400e64d5 <get_arg$isra$0+0x35>
400e6808:	000352        	l8ui	a5, a3, 0
400e680b:	658c      	beqz.n	a5, 400e6815 <get_arg$isra$0+0x375>
400e680d:	2188      	l32i.n	a8, a1, 8
400e680f:	022827        	blt	a8, a2, 400e6815 <get_arg$isra$0+0x375>
400e6812:	ff2986        	j	400e64bc <get_arg$isra$0+0x1c>
400e6815:	0188      	l32i.n	a8, a1, 0
400e6817:	000352        	l8ui	a5, a3, 0
400e681a:	2198      	l32i.n	a9, a1, 8
400e681c:	f21b      	addi.n	a15, a2, 1
400e681e:	839850        	moveqz	a9, a8, a5
400e6821:	0199      	s32i.n	a9, a1, 0
400e6823:	b0b260        	addx8	a11, a2, a6
400e6826:	a07270        	addx4	a7, a2, a7
400e6829:	8a1c      	movi.n	a10, 24
400e682b:	4c2c      	movi.n	a12, 36
400e682d:	8d7c      	movi.n	a13, -8
400e682f:	8e2c      	movi.n	a14, 40
400e6831:	002306        	j	400e68c1 <get_arg$isra$0+0x421>
400e6834:	0758      	l32i.n	a5, a7, 0
400e6836:	2428      	l32i.n	a2, a4, 8
400e6838:	550b      	addi.n	a5, a5, -1
400e683a:	5f65f6        	bgeui	a5, 6, 400e689d <get_arg$isra$0+0x3fd>
400e683d:	a80e91        	l32r	a9, 400d0878 <_flash_cache_start+0x860>
400e6840:	a05590        	addx4	a5, a5, a9
400e6843:	0558      	l32i.n	a5, a5, 0
400e6845:	0005a0        	jx	a5
400e6848:	227b      	addi.n	a2, a2, 7
400e684a:	1022d0        	and	a2, a2, a13
400e684d:	528b      	addi.n	a5, a2, 8
400e684f:	2459      	s32i.n	a5, a4, 8
400e6851:	042a57        	blt	a10, a5, 400e6859 <get_arg$isra$0+0x3b9>
400e6854:	1458      	l32i.n	a5, a4, 4
400e6856:	000186        	j	400e6860 <get_arg$isra$0+0x3c0>
400e6859:	012a27        	blt	a10, a2, 400e685e <get_arg$isra$0+0x3be>
400e685c:	24e9      	s32i.n	a14, a4, 8
400e685e:	0458      	l32i.n	a5, a4, 0
400e6860:	2428      	l32i.n	a2, a4, 8
400e6862:	252a      	add.n	a2, a5, a2
400e6864:	f8c222        	addi	a2, a2, -8
400e6867:	0288      	l32i.n	a8, a2, 0
400e6869:	1298      	l32i.n	a9, a2, 4
400e686b:	0b89      	s32i.n	a8, a11, 0
400e686d:	1b99      	s32i.n	a9, a11, 4
400e686f:	001206        	j	400e68bb <get_arg$isra$0+0x41b>
400e6872:	227b      	addi.n	a2, a2, 7
400e6874:	1022d0        	and	a2, a2, a13
400e6877:	528b      	addi.n	a5, a2, 8
400e6879:	2459      	s32i.n	a5, a4, 8
400e687b:	052a57        	blt	a10, a5, 400e6884 <get_arg$isra$0+0x3e4>
400e687e:	1458      	l32i.n	a5, a4, 4
400e6880:	0001c6        	j	400e688b <get_arg$isra$0+0x3eb>
400e6883:	2a2700        	mul.s	f2, f7, f0
400e6886:	24e901        	l32r	a0, 400afc2c <_iram_end+0x220d8>
400e6889:	0458      	l32i.n	a5, a4, 0
400e688b:	2428      	l32i.n	a2, a4, 8
400e688d:	252a      	add.n	a2, a5, a2
400e688f:	f8c222        	addi	a2, a2, -8
400e6892:	0288      	l32i.n	a8, a2, 0
400e6894:	1298      	l32i.n	a9, a2, 4
400e6896:	0b89      	s32i.n	a8, a11, 0
400e6898:	1b99      	s32i.n	a9, a11, 4
400e689a:	000746        	j	400e68bb <get_arg$isra$0+0x41b>
400e689d:	524b      	addi.n	a5, a2, 4
400e689f:	2459      	s32i.n	a5, a4, 8
400e68a1:	042a57        	blt	a10, a5, 400e68a9 <get_arg$isra$0+0x409>
400e68a4:	1458      	l32i.n	a5, a4, 4
400e68a6:	000186        	j	400e68b0 <get_arg$isra$0+0x410>
400e68a9:	012a27        	blt	a10, a2, 400e68ae <get_arg$isra$0+0x40e>
400e68ac:	24c9      	s32i.n	a12, a4, 8
400e68ae:	0458      	l32i.n	a5, a4, 0
400e68b0:	2428      	l32i.n	a2, a4, 8
400e68b2:	252a      	add.n	a2, a5, a2
400e68b4:	fcc222        	addi	a2, a2, -4
400e68b7:	0228      	l32i.n	a2, a2, 0
400e68b9:	0b29      	s32i.n	a2, a11, 0
400e68bb:	ff1b      	addi.n	a15, a15, 1
400e68bd:	bb8b      	addi.n	a11, a11, 8
400e68bf:	774b      	addi.n	a7, a7, 4
400e68c1:	0158      	l32i.n	a5, a1, 0
400e68c3:	2f0b      	addi.n	a2, a15, -1
400e68c5:	022527        	blt	a5, a2, 400e68cb <get_arg$isra$0+0x42b>
400e68c8:	ffda06        	j	400e6834 <get_arg$isra$0+0x394>
400e68cb:	3188      	l32i.n	a8, a1, 12
400e68cd:	102192        	l32i	a9, a1, 64
400e68d0:	0829      	s32i.n	a2, a8, 0
400e68d2:	2188      	l32i.n	a8, a1, 8
400e68d4:	0939      	s32i.n	a3, a9, 0
400e68d6:	b02860        	addx8	a2, a8, a6
400e68d9:	f01d      	retw.n
400e68db:	350c      	movi.n	a5, 3
400e68dd:	020926        	beqi	a9, -1, 400e68e3 <get_arg$isra$0+0x443>
400e68e0:	ff3106        	j	400e65a8 <get_arg$isra$0+0x108>
400e68e3:	ff6dc6        	j	400e669e <get_arg$isra$0+0x1fe>
400e68e6:	650c      	movi.n	a5, 6
400e68e8:	020926        	beqi	a9, -1, 400e68ee <get_arg$isra$0+0x44e>
400e68eb:	ff2e46        	j	400e65a8 <get_arg$isra$0+0x108>
400e68ee:	ff5106        	j	400e6636 <get_arg$isra$0+0x196>
400e68f1:	150c      	movi.n	a5, 1
400e68f3:	020926        	beqi	a9, -1, 400e68f9 <get_arg$isra$0+0x459>
400e68f6:	ff2b86        	j	400e65a8 <get_arg$isra$0+0x108>
400e68f9:	ff3106        	j	400e65c1 <get_arg$isra$0+0x121>
400e68fc:	450c      	movi.n	a5, 4
400e68fe:	020926        	beqi	a9, -1, 400e6904 <get_arg$isra$0+0x464>
400e6901:	ff28c6        	j	400e65a8 <get_arg$isra$0+0x108>
400e6904:	ff7286        	j	400e66d2 <get_arg$isra$0+0x232>
400e6907:	050c      	movi.n	a5, 0
400e6909:	020926        	beqi	a9, -1, 400e690f <get_arg$isra$0+0x46f>
400e690c:	ff2606        	j	400e65a8 <get_arg$isra$0+0x108>
400e690f:	ff55c6        	j	400e666a <get_arg$isra$0+0x1ca>
400e6912:	250c      	movi.n	a5, 2
400e6914:	020926        	beqi	a9, -1, 400e691a <get_arg$isra$0+0x47a>
400e6917:	ff2346        	j	400e65a8 <get_arg$isra$0+0x108>
400e691a:	ff3606        	j	400e65f6 <get_arg$isra$0+0x156>
400e691d:	000000        	ill

400e6920 <__ssprint_r>:
400e6920:	006136        	entry	a1, 48
400e6923:	047d      	mov.n	a7, a4
400e6925:	2448      	l32i.n	a4, a4, 8
400e6927:	b48c      	beqz.n	a4, 400e6936 <__ssprint_r+0x16>
400e6929:	0748      	l32i.n	a4, a7, 0
400e692b:	0149      	s32i.n	a4, a1, 0
400e692d:	040c      	movi.n	a4, 0
400e692f:	1149      	s32i.n	a4, a1, 4
400e6931:	046d      	mov.n	a6, a4
400e6933:	000586        	j	400e694d <__ssprint_r+0x2d>
400e6936:	020c      	movi.n	a2, 0
400e6938:	1729      	s32i.n	a2, a7, 4
400e693a:	f01d      	retw.n
400e693c:	002142        	l32i	a4, a1, 0
400e693f:	002442        	l32i	a4, a4, 0
400e6942:	016142        	s32i	a4, a1, 4
400e6945:	0148      	l32i.n	a4, a1, 0
400e6947:	1468      	l32i.n	a6, a4, 4
400e6949:	448b      	addi.n	a4, a4, 8
400e694b:	0149      	s32i.n	a4, a1, 0
400e694d:	feb616        	beqz	a6, 400e693c <__ssprint_r+0x1c>
400e6950:	2398      	l32i.n	a9, a3, 8
400e6952:	02b697        	bgeu	a6, a9, 400e6958 <__ssprint_r+0x38>
400e6955:	0022c6        	j	400e69e4 <__ssprint_r+0xc4>
400e6958:	0613a2        	l16ui	a10, a3, 12
400e695b:	80a442        	movi	a4, 0x480
400e695e:	028a47        	bany	a10, a4, 400e6964 <__ssprint_r+0x44>
400e6961:	001f06        	j	400e69e1 <__ssprint_r+0xc1>
400e6964:	0358      	l32i.n	a5, a3, 0
400e6966:	43b8      	l32i.n	a11, a3, 16
400e6968:	c045b0        	sub	a4, a5, a11
400e696b:	5358      	l32i.n	a5, a3, 20
400e696d:	905550        	addx2	a5, a5, a5
400e6970:	059f50        	extui	a9, a5, 31, 1
400e6973:	595a      	add.n	a5, a9, a5
400e6975:	941b      	addi.n	a9, a4, 1
400e6977:	215150        	srai	a5, a5, 1
400e697a:	996a      	add.n	a9, a9, a6
400e697c:	735590        	maxu	a5, a5, a9
400e697f:	316aa7        	bbci	a10, 10, 400e69b4 <__ssprint_r+0x94>
400e6982:	05bd      	mov.n	a11, a5
400e6984:	02ad      	mov.n	a10, a2
400e6986:	9df025        	call8	40084888 <_malloc_r>
400e6989:	1acc      	bnez.n	a10, 400e698e <__ssprint_r+0x6e>
400e698b:	000e46        	j	400e69c8 <__ssprint_r+0xa8>
400e698e:	43b8      	l32i.n	a11, a3, 16
400e6990:	20c440        	or	a12, a4, a4
400e6993:	0261a2        	s32i	a10, a1, 8
400e6996:	a5c081        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400e6999:	0008e0        	callx8	a8
400e699c:	0613b2        	l16ui	a11, a3, 12
400e699f:	7faba2        	movi	a10, 0xfffffb7f
400e69a2:	10bba0        	and	a11, a11, a10
400e69a5:	80a0a2        	movi	a10, 128
400e69a8:	20aba0        	or	a10, a11, a10
400e69ab:	0653a2        	s16i	a10, a3, 12
400e69ae:	2198      	l32i.n	a9, a1, 8
400e69b0:	000786        	j	400e69d2 <__ssprint_r+0xb2>
400e69b3:	c55000        	extui	a5, a0, 16, 13
400e69b6:	a22020        	muluh	a2, a0, a2
400e69b9:	ee6520        	f64iter	a6, a5, a2, 2, 1
400e69bc:	9d9d      	lsi	f9, a13, 52
400e69be:	cc0a      	add.n	a12, a12, a0
400e69c0:	b8fa      	add.n	a11, a8, a15
400e69c2:	02ad43        	lsi	f4, a13, 8
400e69c5:	9dece5        	call8	40084894 <_free_r>
400e69c8:	c40c      	movi.n	a4, 12
400e69ca:	0249      	s32i.n	a4, a2, 0
400e69cc:	001006        	j	400e6a10 <__ssprint_r+0xf0>
400e69cf:	000000        	ill
400e69d2:	4399      	s32i.n	a9, a3, 16
400e69d4:	5359      	s32i.n	a5, a3, 20
400e69d6:	994a      	add.n	a9, a9, a4
400e69d8:	c05540        	sub	a5, a5, a4
400e69db:	0399      	s32i.n	a9, a3, 0
400e69dd:	2359      	s32i.n	a5, a3, 8
400e69df:	069d      	mov.n	a9, a6
400e69e1:	01b697        	bgeu	a6, a9, 400e69e6 <__ssprint_r+0xc6>
400e69e4:	069d      	mov.n	a9, a6
400e69e6:	11b8      	l32i.n	a11, a1, 4
400e69e8:	03a8      	l32i.n	a10, a3, 0
400e69ea:	09cd      	mov.n	a12, a9
400e69ec:	2199      	s32i.n	a9, a1, 8
400e69ee:	a5ac81        	l32r	a8, 400d00a0 <_flash_cache_start+0x88>
400e69f1:	0008e0        	callx8	a8
400e69f4:	2198      	l32i.n	a9, a1, 8
400e69f6:	2348      	l32i.n	a4, a3, 8
400e69f8:	03c8      	l32i.n	a12, a3, 0
400e69fa:	c04490        	sub	a4, a4, a9
400e69fd:	2349      	s32i.n	a4, a3, 8
400e69ff:	2748      	l32i.n	a4, a7, 8
400e6a01:	cc9a      	add.n	a12, a12, a9
400e6a03:	03c9      	s32i.n	a12, a3, 0
400e6a05:	c08460        	sub	a8, a4, a6
400e6a08:	2789      	s32i.n	a8, a7, 8
400e6a0a:	f2e856        	bnez	a8, 400e693c <__ssprint_r+0x1c>
400e6a0d:	ffc946        	j	400e6936 <__ssprint_r+0x16>
400e6a10:	061342        	l16ui	a4, a3, 12
400e6a13:	024c      	movi.n	a2, 64
400e6a15:	202420        	or	a2, a4, a2
400e6a18:	065322        	s16i	a2, a3, 12
400e6a1b:	020c      	movi.n	a2, 0
400e6a1d:	2729      	s32i.n	a2, a7, 8
400e6a1f:	1729      	s32i.n	a2, a7, 4
400e6a21:	f27c      	movi.n	a2, -1
400e6a23:	f01d      	retw.n
400e6a25:	000000        	ill

400e6a28 <_svfiprintf_r>:
400e6a28:	058136        	entry	a1, 0x2c0
400e6a2b:	9b6132        	s32i	a3, a1, 0x26c
400e6a2e:	9b2182        	l32i	a8, a1, 0x26c
400e6a31:	9c6122        	s32i	a2, a1, 0x270
400e6a34:	061822        	l16ui	a2, a8, 12
400e6a37:	996142        	s32i	a4, a1, 0x264
400e6a3a:	946152        	s32i	a5, a1, 0x250
400e6a3d:	956162        	s32i	a6, a1, 0x254
400e6a40:	966172        	s32i	a7, a1, 0x258
400e6a43:	10c132        	addi	a3, a1, 16
400e6a46:	2a6277        	bbci	a2, 7, 400e6a74 <_svfiprintf_r+0x4c>
400e6a49:	042822        	l32i	a2, a8, 16
400e6a4c:	024256        	bnez	a2, 400e6a74 <_svfiprintf_r+0x4c>
400e6a4f:	9c21a2        	l32i	a10, a1, 0x270
400e6a52:	40a0b2        	movi	a11, 64
400e6a55:	9de325        	call8	40084888 <_malloc_r>
400e6a58:	9b2192        	l32i	a9, a1, 0x26c
400e6a5b:	09a9      	s32i.n	a10, a9, 0
400e6a5d:	49a9      	s32i.n	a10, a9, 16
400e6a5f:	aacc      	bnez.n	a10, 400e6a6d <_svfiprintf_r+0x45>
400e6a61:	9c2182        	l32i	a8, a1, 0x270
400e6a64:	c20c      	movi.n	a2, 12
400e6a66:	0829      	s32i.n	a2, a8, 0
400e6a68:	f27c      	movi.n	a2, -1
400e6a6a:	f01d      	retw.n
400e6a6c:	219200        	srai	a9, a0, 2
400e6a6f:	4c9b      	addi.n	a4, a12, 9
400e6a71:	592902        	l32i	a0, a9, 0x164
400e6a74:	10c1a2        	addi	a10, a1, 16
400e6a77:	e4a132        	movi	a3, 0x1e4
400e6a7a:	3a3a      	add.n	a3, a10, a3
400e6a7c:	8d6132        	s32i	a3, a1, 0x234
400e6a7f:	976132        	s32i	a3, a1, 0x25c
400e6a82:	90a132        	movi	a3, 0x190
400e6a85:	331a      	add.n	a3, a3, a1
400e6a87:	020c      	movi.n	a2, 0
400e6a89:	f47c      	movi.n	a4, -1
400e6a8b:	64c332        	addi	a3, a3, 100
400e6a8e:	8f6122        	s32i	a2, a1, 0x23c
400e6a91:	8e6122        	s32i	a2, a1, 0x238
400e6a94:	906122        	s32i	a2, a1, 0x240
400e6a97:	446142        	s32i	a4, a1, 0x110
400e6a9a:	916122        	s32i	a2, a1, 0x244
400e6a9d:	9f6122        	s32i	a2, a1, 0x27c
400e6aa0:	a06122        	s32i	a2, a1, 0x280
400e6aa3:	a16122        	s32i	a2, a1, 0x284
400e6aa6:	a26122        	s32i	a2, a1, 0x288
400e6aa9:	9e6122        	s32i	a2, a1, 0x278
400e6aac:	a36132        	s32i	a3, a1, 0x28c
400e6aaf:	992172        	l32i	a7, a1, 0x264
400e6ab2:	000046        	j	400e6ab7 <_svfiprintf_r+0x8f>
400e6ab5:	771b      	addi.n	a7, a7, 1
400e6ab7:	000732        	l8ui	a3, a7, 0
400e6aba:	438c      	beqz.n	a3, 400e6ac2 <_svfiprintf_r+0x9a>
400e6abc:	dbc332        	addi	a3, a3, -37
400e6abf:	ff2356        	bnez	a3, 400e6ab5 <_svfiprintf_r+0x8d>
400e6ac2:	992142        	l32i	a4, a1, 0x264
400e6ac5:	c03740        	sub	a3, a7, a4
400e6ac8:	055316        	beqz	a3, 400e6b21 <_svfiprintf_r+0xf9>
400e6acb:	972152        	l32i	a5, a1, 0x25c
400e6ace:	10c162        	addi	a6, a1, 16
400e6ad1:	0549      	s32i.n	a4, a5, 0
400e6ad3:	8f2142        	l32i	a4, a1, 0x23c
400e6ad6:	1539      	s32i.n	a3, a5, 4
400e6ad8:	443a      	add.n	a4, a4, a3
400e6ada:	8f6142        	s32i	a4, a1, 0x23c
400e6add:	8e2142        	l32i	a4, a1, 0x238
400e6ae0:	02d652        	addmi	a5, a6, 0x200
400e6ae3:	441b      	addi.n	a4, a4, 1
400e6ae5:	8e6142        	s32i	a4, a1, 0x238
400e6ae8:	0c84e6        	bgei	a4, 8, 400e6af8 <_svfiprintf_r+0xd0>
400e6aeb:	972182        	l32i	a8, a1, 0x25c
400e6aee:	888b      	addi.n	a8, a8, 8
400e6af0:	976182        	s32i	a8, a1, 0x25c
400e6af3:	000886        	j	400e6b19 <_svfiprintf_r+0xf1>
400e6af6:	c20000        	quou	a0, a0, a0
400e6af9:	9224a2        	l32i	a10, a4, 0x248
400e6afc:	b210c1        	l32r	a12, 400d333c <unsigned int* std::__uninitialized_default_n<unsigned int*, unsigned int>(unsigned int*, unsigned int)+0x1c>
400e6aff:	a29b21        	l32r	a2, 400cf56c <_rtc_text_end+0xf56c>
400e6b02:	ca9c21        	l32r	a2, 400d9574 <uart_start_select+0x80>
400e6b05:	a5c9      	s32i.n	a12, a5, 40
400e6b07:	8cffe1        	l32r	a14, 400c9f04 <_rtc_text_end+0x9f04>
400e6b0a:	461a      	add.n	a4, a6, a1
400e6b0c:	07b8      	l32i.n	a11, a7, 0
400e6b0e:	e4a142        	movi	a4, 0x1e4
400e6b11:	10c152        	addi	a5, a1, 16
400e6b14:	554a      	add.n	a5, a5, a4
400e6b16:	976152        	s32i	a5, a1, 0x25c
400e6b19:	9e2162        	l32i	a6, a1, 0x278
400e6b1c:	663a      	add.n	a6, a6, a3
400e6b1e:	9e6162        	s32i	a6, a1, 0x278
400e6b21:	000732        	l8ui	a3, a7, 0
400e6b24:	13cc      	bnez.n	a3, 400e6b29 <_svfiprintf_r+0x101>
400e6b26:	07ac06        	j	400e89da <_svfiprintf_r+0x1fb2>
400e6b29:	10c182        	addi	a8, a1, 16
400e6b2c:	f97c      	movi.n	a9, -1
400e6b2e:	02d832        	addmi	a3, a8, 0x200
400e6b31:	050c      	movi.n	a5, 0
400e6b33:	9a6192        	s32i	a9, a1, 0x268
400e6b36:	34a282        	movi	a8, 0x234
400e6b39:	10c192        	addi	a9, a1, 16
400e6b3c:	3a4352        	s8i	a5, a3, 58
400e6b3f:	998a      	add.n	a9, a9, a8
400e6b41:	050c      	movi.n	a5, 0
400e6b43:	471b      	addi.n	a4, a7, 1
400e6b45:	023d      	mov.n	a3, a2
400e6b47:	9d6152        	s32i	a5, a1, 0x274
400e6b4a:	056d      	mov.n	a6, a5
400e6b4c:	986192        	s32i	a9, a1, 0x260
400e6b4f:	000286        	j	400e6b5d <_svfiprintf_r+0x135>
400e6b52:	000000        	ill
400e6b55:	996142        	s32i	a4, a1, 0x264
400e6b58:	060c      	movi.n	a6, 0
400e6b5a:	992142        	l32i	a4, a1, 0x264
400e6b5d:	841b      	addi.n	a8, a4, 1
400e6b5f:	996182        	s32i	a8, a1, 0x264
400e6b62:	a748f1        	l32r	a15, 400d0884 <_flash_cache_start+0x86c>
400e6b65:	000482        	l8ui	a8, a4, 0
400e6b68:	9a0c      	movi.n	a10, 9
400e6b6a:	4c2c      	movi.n	a12, 36
400e6b6c:	ad2c      	movi.n	a13, 42
400e6b6e:	fe7c      	movi.n	a14, -1
400e6b70:	0000c6        	j	400e6b77 <_svfiprintf_r+0x14f>
400e6b73:	614200        	lsi	f0, a2, 0x184
400e6b76:	429d      	lsi	f9, a2, 8
400e6b78:	e0c8      	l32i.n	a12, a0, 56
400e6b7a:	a95c      	movi.n	a9, 90
400e6b7c:	02b947        	bgeu	a9, a4, 400e6b82 <_svfiprintf_r+0x15a>
400e6b7f:	069a86        	j	400e85ed <_svfiprintf_r+0x1bc5>
400e6b82:	a044f0        	addx4	a4, a4, a15
400e6b85:	0448      	l32i.n	a4, a4, 0
400e6b87:	0004a0        	jx	a4
400e6b8a:	a73c41        	l32r	a4, 400d087c <_flash_cache_start+0x864>
400e6b8d:	052e86        	j	400e804b <_svfiprintf_r+0x1623>
400e6b90:	9c21a2        	l32i	a10, a1, 0x270
400e6b93:	a6fe81        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e6b96:	0008e0        	callx8	a8
400e6b99:	1aa8      	l32i.n	a10, a10, 4
400e6b9b:	a261a2        	s32i	a10, a1, 0x288
400e6b9e:	a53a81        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e6ba1:	0008e0        	callx8	a8
400e6ba4:	a161a2        	s32i	a10, a1, 0x284
400e6ba7:	9c21a2        	l32i	a10, a1, 0x270
400e6baa:	a6f881        	l32r	a8, 400d078c <_flash_cache_start+0x774>
400e6bad:	0008e0        	callx8	a8
400e6bb0:	2aa8      	l32i.n	a10, a10, 8
400e6bb2:	a12182        	l32i	a8, a1, 0x284
400e6bb5:	a061a2        	s32i	a10, a1, 0x280
400e6bb8:	f9e816        	beqz	a8, 400e6b5a <_svfiprintf_r+0x132>
400e6bbb:	f9ba16        	beqz	a10, 400e6b5a <_svfiprintf_r+0x132>
400e6bbe:	000a42        	l8ui	a4, a10, 0
400e6bc1:	f95416        	beqz	a4, 400e6b5a <_svfiprintf_r+0x132>
400e6bc4:	00a442        	movi	a4, 0x400
400e6bc7:	00b1c6        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6bca:	10c192        	addi	a9, a1, 16
400e6bcd:	02d942        	addmi	a4, a9, 0x200
400e6bd0:	3a0482        	l8ui	a8, a4, 58
400e6bd3:	f83856        	bnez	a8, 400e6b5a <_svfiprintf_r+0x132>
400e6bd6:	082c      	movi.n	a8, 32
400e6bd8:	0047c6        	j	400e6cfb <_svfiprintf_r+0x2d3>
400e6bdb:	140c      	movi.n	a4, 1
400e6bdd:	00ac46        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6be0:	992142        	l32i	a4, a1, 0x264
400e6be3:	990c      	movi.n	a9, 9
400e6be5:	000482        	l8ui	a8, a4, 0
400e6be8:	d0c842        	addi	a4, a8, -48
400e6beb:	02b947        	bgeu	a9, a4, 400e6bf1 <_svfiprintf_r+0x1c9>
400e6bee:	0784c6        	j	400e8a05 <_svfiprintf_r+0x1fdd>
400e6bf1:	9921a2        	l32i	a10, a1, 0x264
400e6bf4:	4a1b      	addi.n	a4, a10, 1
400e6bf6:	0a0c      	movi.n	a10, 0
400e6bf8:	d0c882        	addi	a8, a8, -48
400e6bfb:	a0aaa0        	addx4	a10, a10, a10
400e6bfe:	441b      	addi.n	a4, a4, 1
400e6c00:	90aa80        	addx2	a10, a10, a8
400e6c03:	840b      	addi.n	a8, a4, -1
400e6c05:	000882        	l8ui	a8, a8, 0
400e6c08:	d0c8b2        	addi	a11, a8, -48
400e6c0b:	e9b9b7        	bgeu	a9, a11, 400e6bf8 <_svfiprintf_r+0x1d0>
400e6c0e:	492c      	movi.n	a9, 36
400e6c10:	021897        	beq	a8, a9, 400e6c16 <_svfiprintf_r+0x1ee>
400e6c13:	ffd046        	j	400e6b58 <_svfiprintf_r+0x130>
400e6c16:	082c      	movi.n	a8, 32
400e6c18:	02a8a7        	bge	a8, a10, 400e6c1e <_svfiprintf_r+0x1f6>
400e6c1b:	077446        	j	400e89f0 <_svfiprintf_r+0x1fc8>
400e6c1e:	912182        	l32i	a8, a1, 0x244
400e6c21:	aa0b      	addi.n	a10, a10, -1
400e6c23:	08aa87        	bge	a10, a8, 400e6c2f <_svfiprintf_r+0x207>
400e6c26:	10c1b2        	addi	a11, a1, 16
400e6c29:	b0aab0        	addx8	a10, a10, a11
400e6c2c:	000706        	j	400e6c4c <_svfiprintf_r+0x224>
400e6c2f:	10c192        	addi	a9, a1, 16
400e6c32:	30a282        	movi	a8, 0x230
400e6c35:	898a      	add.n	a8, a9, a8
400e6c37:	40a2c2        	movi	a12, 0x240
400e6c3a:	9821d2        	l32i	a13, a1, 0x260
400e6c3d:	0189      	s32i.n	a8, a1, 0
400e6c3f:	01d9f2        	addmi	a15, a9, 0x100
400e6c42:	09ed      	mov.n	a14, a9
400e6c44:	c9ca      	add.n	a12, a9, a12
400e6c46:	20b770        	or	a11, a7, a7
400e6c49:	ff8565        	call8	400e64a0 <get_arg$isra$0>
400e6c4c:	0aa8      	l32i.n	a10, a10, 0
400e6c4e:	038d      	mov.n	a8, a3
400e6c50:	9d61a2        	s32i	a10, a1, 0x274
400e6c53:	996142        	s32i	a4, a1, 0x264
400e6c56:	0020c6        	j	400e6cdd <_svfiprintf_r+0x2b5>
400e6c59:	10c1a2        	addi	a10, a1, 16
400e6c5c:	b032a0        	addx8	a3, a2, a10
400e6c5f:	001d46        	j	400e6cd8 <_svfiprintf_r+0x2b0>
400e6c62:	f31c      	movi.n	a3, 31
400e6c64:	442347        	blt	a3, a4, 400e6cac <_svfiprintf_r+0x284>
400e6c67:	341b      	addi.n	a3, a4, 1
400e6c69:	10c1b2        	addi	a11, a1, 16
400e6c6c:	916132        	s32i	a3, a1, 0x244
400e6c6f:	02db32        	addmi	a3, a11, 0x200
400e6c72:	122392        	l32i	a9, a3, 72
400e6c75:	8a1c      	movi.n	a10, 24
400e6c77:	b94b      	addi.n	a11, a9, 4
400e6c79:	1263b2        	s32i	a11, a3, 72
400e6c7c:	052ab7        	blt	a10, a11, 400e6c85 <_svfiprintf_r+0x25d>
400e6c7f:	112392        	l32i	a9, a3, 68
400e6c82:	000286        	j	400e6c90 <_svfiprintf_r+0x268>
400e6c85:	042a97        	blt	a10, a9, 400e6c8d <_svfiprintf_r+0x265>
400e6c88:	492c      	movi.n	a9, 36
400e6c8a:	126392        	s32i	a9, a3, 72
400e6c8d:	942192        	l32i	a9, a1, 0x250
400e6c90:	962132        	l32i	a3, a1, 0x258
400e6c93:	393a      	add.n	a3, a9, a3
400e6c95:	fcc332        	addi	a3, a3, -4
400e6c98:	0338      	l32i.n	a3, a3, 0
400e6c9a:	9d6132        	s32i	a3, a1, 0x274
400e6c9d:	9d2192        	l32i	a9, a1, 0x274
400e6ca0:	10c132        	addi	a3, a1, 16
400e6ca3:	b04430        	addx8	a4, a4, a3
400e6ca6:	0499      	s32i.n	a9, a4, 0
400e6ca8:	000c46        	j	400e6cdd <_svfiprintf_r+0x2b5>
400e6cab:	c1a200        	mul16u	a10, a2, a0
400e6cae:	da3210        	ufloat.s	f3, a2, 1
400e6cb1:	234202        	s8i	a0, a2, 35
400e6cb4:	891c12        	l16ui	a1, a12, 0x112
400e6cb7:	a44b      	addi.n	a10, a4, 4
400e6cb9:	1263a2        	s32i	a10, a3, 72
400e6cbc:	0529a7        	blt	a9, a10, 400e6cc5 <_svfiprintf_r+0x29d>
400e6cbf:	112342        	l32i	a4, a3, 68
400e6cc2:	000286        	j	400e6cd0 <_svfiprintf_r+0x2a8>
400e6cc5:	042947        	blt	a9, a4, 400e6ccd <_svfiprintf_r+0x2a5>
400e6cc8:	442c      	movi.n	a4, 36
400e6cca:	126342        	s32i	a4, a3, 72
400e6ccd:	942142        	l32i	a4, a1, 0x250
400e6cd0:	962132        	l32i	a3, a1, 0x258
400e6cd3:	343a      	add.n	a3, a4, a3
400e6cd5:	fcc332        	addi	a3, a3, -4
400e6cd8:	0338      	l32i.n	a3, a3, 0
400e6cda:	9d6132        	s32i	a3, a1, 0x274
400e6cdd:	9d2142        	l32i	a4, a1, 0x274
400e6ce0:	083d      	mov.n	a3, a8
400e6ce2:	e744d6        	bgez	a4, 400e6b5a <_svfiprintf_r+0x132>
400e6ce5:	604040        	neg	a4, a4
400e6ce8:	9d6142        	s32i	a4, a1, 0x274
400e6ceb:	440c      	movi.n	a4, 4
400e6ced:	006846        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6cf0:	000000        	ill
400e6cf3:	10c192        	addi	a9, a1, 16
400e6cf6:	b82c      	movi.n	a8, 43
400e6cf8:	02d942        	addmi	a4, a9, 0x200
400e6cfb:	3a4482        	s8i	a8, a4, 58
400e6cfe:	ff9606        	j	400e6b5a <_svfiprintf_r+0x132>
400e6d01:	992182        	l32i	a8, a1, 0x264
400e6d04:	481b      	addi.n	a4, a8, 1
400e6d06:	000882        	l8ui	a8, a8, 0
400e6d09:	0418d7        	beq	a8, a13, 400e6d11 <_svfiprintf_r+0x2e9>
400e6d0c:	090c      	movi.n	a9, 0
400e6d0e:	004646        	j	400e6e2b <_svfiprintf_r+0x403>
400e6d11:	992192        	l32i	a9, a1, 0x264
400e6d14:	010982        	l8ui	a8, a9, 1
400e6d17:	990c      	movi.n	a9, 9
400e6d19:	d0c8a2        	addi	a10, a8, -48
400e6d1c:	02b9a7        	bgeu	a9, a10, 400e6d22 <_svfiprintf_r+0x2fa>
400e6d1f:	073c46        	j	400e8a14 <_svfiprintf_r+0x1fec>
400e6d22:	9921a2        	l32i	a10, a1, 0x264
400e6d25:	aa2b      	addi.n	a10, a10, 2
400e6d27:	9961a2        	s32i	a10, a1, 0x264
400e6d2a:	0a0c      	movi.n	a10, 0
400e6d2c:	d0c882        	addi	a8, a8, -48
400e6d2f:	a0aaa0        	addx4	a10, a10, a10
400e6d32:	90aa80        	addx2	a10, a10, a8
400e6d35:	992182        	l32i	a8, a1, 0x264
400e6d38:	881b      	addi.n	a8, a8, 1
400e6d3a:	996182        	s32i	a8, a1, 0x264
400e6d3d:	880b      	addi.n	a8, a8, -1
400e6d3f:	000882        	l8ui	a8, a8, 0
400e6d42:	d0c8b2        	addi	a11, a8, -48
400e6d45:	e3b9b7        	bgeu	a9, a11, 400e6d2c <_svfiprintf_r+0x304>
400e6d48:	492c      	movi.n	a9, 36
400e6d4a:	021897        	beq	a8, a9, 400e6d50 <_svfiprintf_r+0x328>
400e6d4d:	ff8106        	j	400e6b55 <_svfiprintf_r+0x12d>
400e6d50:	042c      	movi.n	a4, 32
400e6d52:	02a4a7        	bge	a4, a10, 400e6d58 <_svfiprintf_r+0x330>
400e6d55:	0725c6        	j	400e89f0 <_svfiprintf_r+0x1fc8>
400e6d58:	912142        	l32i	a4, a1, 0x244
400e6d5b:	aa0b      	addi.n	a10, a10, -1
400e6d5d:	08aa47        	bge	a10, a4, 400e6d69 <_svfiprintf_r+0x341>
400e6d60:	10c192        	addi	a9, a1, 16
400e6d63:	b0aa90        	addx8	a10, a10, a9
400e6d66:	0006c6        	j	400e6d85 <_svfiprintf_r+0x35d>
400e6d69:	10c1b2        	addi	a11, a1, 16
400e6d6c:	30a242        	movi	a4, 0x230
400e6d6f:	4b4a      	add.n	a4, a11, a4
400e6d71:	40a2c2        	movi	a12, 0x240
400e6d74:	9821d2        	l32i	a13, a1, 0x260
400e6d77:	01dbf2        	addmi	a15, a11, 0x100
400e6d7a:	0bed      	mov.n	a14, a11
400e6d7c:	cbca      	add.n	a12, a11, a12
400e6d7e:	0149      	s32i.n	a4, a1, 0
400e6d80:	07bd      	mov.n	a11, a7
400e6d82:	ff71e5        	call8	400e64a0 <get_arg$isra$0>
400e6d85:	0aa8      	l32i.n	a10, a10, 0
400e6d87:	9a61a2        	s32i	a10, a1, 0x268
400e6d8a:	002106        	j	400e6e12 <_svfiprintf_r+0x3ea>
400e6d8d:	10c182        	addi	a8, a1, 16
400e6d90:	b03280        	addx8	a3, a2, a8
400e6d93:	001c46        	j	400e6e08 <_svfiprintf_r+0x3e0>
400e6d96:	f31c      	movi.n	a3, 31
400e6d98:	402387        	blt	a3, a8, 400e6ddc <_svfiprintf_r+0x3b4>
400e6d9b:	381b      	addi.n	a3, a8, 1
400e6d9d:	10c1a2        	addi	a10, a1, 16
400e6da0:	916132        	s32i	a3, a1, 0x244
400e6da3:	02da32        	addmi	a3, a10, 0x200
400e6da6:	1223a2        	l32i	a10, a3, 72
400e6da9:	8b1c      	movi.n	a11, 24
400e6dab:	ca4b      	addi.n	a12, a10, 4
400e6dad:	1263c2        	s32i	a12, a3, 72
400e6db0:	052bc7        	blt	a11, a12, 400e6db9 <_svfiprintf_r+0x391>
400e6db3:	1123a2        	l32i	a10, a3, 68
400e6db6:	000286        	j	400e6dc4 <_svfiprintf_r+0x39c>
400e6db9:	042ba7        	blt	a11, a10, 400e6dc1 <_svfiprintf_r+0x399>
400e6dbc:	4a2c      	movi.n	a10, 36
400e6dbe:	1263a2        	s32i	a10, a3, 72
400e6dc1:	9421a2        	l32i	a10, a1, 0x250
400e6dc4:	962132        	l32i	a3, a1, 0x258
400e6dc7:	10c1b2        	addi	a11, a1, 16
400e6dca:	3a3a      	add.n	a3, a10, a3
400e6dcc:	fcc332        	addi	a3, a3, -4
400e6dcf:	0338      	l32i.n	a3, a3, 0
400e6dd1:	b088b0        	addx8	a8, a8, a11
400e6dd4:	9a6132        	s32i	a3, a1, 0x268
400e6dd7:	0839      	s32i.n	a3, a8, 0
400e6dd9:	000c06        	j	400e6e0d <_svfiprintf_r+0x3e5>
400e6ddc:	10c182        	addi	a8, a1, 16
400e6ddf:	02d832        	addmi	a3, a8, 0x200
400e6de2:	122382        	l32i	a8, a3, 72
400e6de5:	8a1c      	movi.n	a10, 24
400e6de7:	b84b      	addi.n	a11, a8, 4
400e6de9:	1263b2        	s32i	a11, a3, 72
400e6dec:	052ab7        	blt	a10, a11, 400e6df5 <_svfiprintf_r+0x3cd>
400e6def:	112382        	l32i	a8, a3, 68
400e6df2:	000286        	j	400e6e00 <_svfiprintf_r+0x3d8>
400e6df5:	042a87        	blt	a10, a8, 400e6dfd <_svfiprintf_r+0x3d5>
400e6df8:	482c      	movi.n	a8, 36
400e6dfa:	126382        	s32i	a8, a3, 72
400e6dfd:	942182        	l32i	a8, a1, 0x250
400e6e00:	962132        	l32i	a3, a1, 0x258
400e6e03:	383a      	add.n	a3, a8, a3
400e6e05:	fcc332        	addi	a3, a3, -4
400e6e08:	0338      	l32i.n	a3, a3, 0
400e6e0a:	9a6132        	s32i	a3, a1, 0x268
400e6e0d:	996142        	s32i	a4, a1, 0x264
400e6e10:	093d      	mov.n	a3, a9
400e6e12:	9a2192        	l32i	a9, a1, 0x268
400e6e15:	f47c      	movi.n	a4, -1
400e6e17:	539940        	max	a9, a9, a4
400e6e1a:	9a6192        	s32i	a9, a1, 0x268
400e6e1d:	ff4e46        	j	400e6b5a <_svfiprintf_r+0x132>
400e6e20:	a09990        	addx4	a9, a9, a9
400e6e23:	000482        	l8ui	a8, a4, 0
400e6e26:	9099b0        	addx2	a9, a9, a11
400e6e29:	441b      	addi.n	a4, a4, 1
400e6e2b:	996142        	s32i	a4, a1, 0x264
400e6e2e:	d0c8b2        	addi	a11, a8, -48
400e6e31:	ebbab7        	bgeu	a10, a11, 400e6e20 <_svfiprintf_r+0x3f8>
400e6e34:	5399e0        	max	a9, a9, a14
400e6e37:	9a6192        	s32i	a9, a1, 0x268
400e6e3a:	9d2142        	l32i	a4, a1, 0x274
400e6e3d:	ff4cc6        	j	400e6b74 <_svfiprintf_r+0x14c>
400e6e40:	80a042        	movi	a4, 128
400e6e43:	0012c6        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6e46:	040c      	movi.n	a4, 0
400e6e48:	d0c882        	addi	a8, a8, -48
400e6e4b:	a04440        	addx4	a4, a4, a4
400e6e4e:	904480        	addx2	a4, a4, a8
400e6e51:	992182        	l32i	a8, a1, 0x264
400e6e54:	881b      	addi.n	a8, a8, 1
400e6e56:	996182        	s32i	a8, a1, 0x264
400e6e59:	880b      	addi.n	a8, a8, -1
400e6e5b:	000882        	l8ui	a8, a8, 0
400e6e5e:	d0c892        	addi	a9, a8, -48
400e6e61:	e3ba97        	bgeu	a10, a9, 400e6e48 <_svfiprintf_r+0x420>
400e6e64:	0218c7        	beq	a8, a12, 400e6e6a <_svfiprintf_r+0x442>
400e6e67:	ff4246        	j	400e6b74 <_svfiprintf_r+0x14c>
400e6e6a:	022c      	movi.n	a2, 32
400e6e6c:	02a247        	bge	a2, a4, 400e6e72 <_svfiprintf_r+0x44a>
400e6e6f:	06df46        	j	400e89f0 <_svfiprintf_r+0x1fc8>
400e6e72:	240b      	addi.n	a2, a4, -1
400e6e74:	160c      	movi.n	a6, 1
400e6e76:	ff3806        	j	400e6b5a <_svfiprintf_r+0x132>
400e6e79:	992192        	l32i	a9, a1, 0x264
400e6e7c:	68a042        	movi	a4, 104
400e6e7f:	000982        	l8ui	a8, a9, 0
400e6e82:	0a9847        	bne	a8, a4, 400e6e90 <_svfiprintf_r+0x468>
400e6e85:	991b      	addi.n	a9, a9, 1
400e6e87:	996192        	s32i	a9, a1, 0x264
400e6e8a:	00a242        	movi	a4, 0x200
400e6e8d:	000046        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6e90:	044c      	movi.n	a4, 64
400e6e92:	205540        	or	a5, a5, a4
400e6e95:	ff3046        	j	400e6b5a <_svfiprintf_r+0x132>
400e6e98:	214200        	srai	a4, a0, 2
400e6e9b:	8299      	s32i.n	a9, a2, 32
400e6e9d:	420004        	lsi	f0, a0, 0x108
400e6ea0:	476ca0        	lsi	f10, a12, 0x11c
400e6ea3:	0a98      	l32i.n	a9, a10, 0
400e6ea5:	992182        	l32i	a8, a1, 0x264
400e6ea8:	881b      	addi.n	a8, a8, 1
400e6eaa:	996182        	s32i	a8, a1, 0x264
400e6ead:	000106        	j	400e6eb5 <_svfiprintf_r+0x48d>
400e6eb0:	041c      	movi.n	a4, 16
400e6eb2:	fff706        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6eb5:	042c      	movi.n	a4, 32
400e6eb7:	fff5c6        	j	400e6e92 <_svfiprintf_r+0x46a>
400e6eba:	420000        	xorb	b0, b0, b0
400e6ebd:	bc9121        	l32r	a2, 400d6104 <get_available_int+0x74>
400e6ec0:	a24766        	bnei	a7, 4, 400e6e66 <_svfiprintf_r+0x43e>
400e6ec3:	920b      	addi.n	a9, a2, -1
400e6ec5:	9010c1        	l32r	a12, 400caf08 <_rtc_text_end+0xaf08>
400e6ec8:	22b022        	l32ai	a2, a0, 136
400e6ecb:	860002        	l8ui	a0, a0, 134
400e6ece:	0008      	l32i.n	a0, a0, 0
400e6ed0:	10c1a2        	addi	a10, a1, 16
400e6ed3:	30a242        	movi	a4, 0x230
400e6ed6:	4a4a      	add.n	a4, a10, a4
400e6ed8:	34a2d2        	movi	a13, 0x234
400e6edb:	40a2c2        	movi	a12, 0x240
400e6ede:	01daf2        	addmi	a15, a10, 0x100
400e6ee1:	0aed      	mov.n	a14, a10
400e6ee3:	dada      	add.n	a13, a10, a13
400e6ee5:	caca      	add.n	a12, a10, a12
400e6ee7:	0149      	s32i.n	a4, a1, 0
400e6ee9:	02ad      	mov.n	a10, a2
400e6eeb:	07bd      	mov.n	a11, a7
400e6eed:	ff5b25        	call8	400e64a0 <get_arg$isra$0>
400e6ef0:	000a22        	l8ui	a2, a10, 0
400e6ef3:	986132        	s32i	a3, a1, 0x260
400e6ef6:	002146        	j	400e6f7f <_svfiprintf_r+0x557>
400e6ef9:	631b      	addi.n	a6, a3, 1
400e6efb:	10c182        	addi	a8, a1, 16
400e6efe:	986162        	s32i	a6, a1, 0x260
400e6f01:	b02280        	addx8	a2, a2, a8
400e6f04:	742347        	blt	a3, a4, 400e6f7c <_svfiprintf_r+0x554>
400e6f07:	f21c      	movi.n	a2, 31
400e6f09:	432247        	blt	a2, a4, 400e6f50 <_svfiprintf_r+0x528>
400e6f0c:	241b      	addi.n	a2, a4, 1
400e6f0e:	10c192        	addi	a9, a1, 16
400e6f11:	916122        	s32i	a2, a1, 0x244
400e6f14:	02d922        	addmi	a2, a9, 0x200
400e6f17:	122232        	l32i	a3, a2, 72
400e6f1a:	861c      	movi.n	a6, 24
400e6f1c:	834b      	addi.n	a8, a3, 4
400e6f1e:	126282        	s32i	a8, a2, 72
400e6f21:	072687        	blt	a6, a8, 400e6f2c <_svfiprintf_r+0x504>
400e6f24:	112232        	l32i	a3, a2, 68
400e6f27:	000306        	j	400e6f37 <_svfiprintf_r+0x50f>
400e6f2a:	370000        	lsi	f0, a0, 220
400e6f2d:	2c0426        	beqi	a4, -1, 400e6f5d <_svfiprintf_r+0x535>
400e6f30:	623243        	lsi	f4, a2, 0x188
400e6f33:	213212        	lsi	f1, a2, 132
400e6f36:	212294        	lsi	f9, a2, 132
400e6f39:	c1a296        	bltz	a2, 400e6b57 <_svfiprintf_r+0x12f>
400e6f3c:	232a10        	sext	a2, a10, 8
400e6f3f:	fcc222        	addi	a2, a2, -4
400e6f42:	0228      	l32i.n	a2, a2, 0
400e6f44:	b044a0        	addx8	a4, a4, a10
400e6f47:	0429      	s32i.n	a2, a4, 0
400e6f49:	742020        	extui	a2, a2, 0, 8
400e6f4c:	000bc6        	j	400e6f7f <_svfiprintf_r+0x557>
400e6f4f:	c1b200        	mul16u	a11, a2, a0
400e6f52:	db2210        	movt.s	f2, f2, b1
400e6f55:	223202        	lsi	f0, a2, 136
400e6f58:	841c12        	l16ui	a1, a12, 0x108
400e6f5b:	634b      	addi.n	a6, a3, 4
400e6f5d:	126262        	s32i	a6, a2, 72
400e6f60:	052467        	blt	a4, a6, 400e6f69 <_svfiprintf_r+0x541>
400e6f63:	112232        	l32i	a3, a2, 68
400e6f66:	000286        	j	400e6f74 <_svfiprintf_r+0x54c>
400e6f69:	042437        	blt	a4, a3, 400e6f71 <_svfiprintf_r+0x549>
400e6f6c:	432c      	movi.n	a3, 36
400e6f6e:	126232        	s32i	a3, a2, 72
400e6f71:	942132        	l32i	a3, a1, 0x250
400e6f74:	962122        	l32i	a2, a1, 0x258
400e6f77:	232a      	add.n	a2, a3, a2
400e6f79:	fcc222        	addi	a2, a2, -4
400e6f7c:	000222        	l8ui	a2, a2, 0
400e6f7f:	10c142        	addi	a4, a1, 16
400e6f82:	01d432        	addmi	a3, a4, 0x100
400e6f85:	804322        	s8i	a2, a3, 128
400e6f88:	160c      	movi.n	a6, 1
400e6f8a:	02d422        	addmi	a2, a4, 0x200
400e6f8d:	030c      	movi.n	a3, 0
400e6f8f:	90a182        	movi	a8, 0x190
400e6f92:	3a4232        	s8i	a3, a2, 58
400e6f95:	9a6162        	s32i	a6, a1, 0x268
400e6f98:	020c      	movi.n	a2, 0
400e6f9a:	718a      	add.n	a7, a1, a8
400e6f9c:	059c06        	j	400e8610 <_svfiprintf_r+0x1be8>
400e6f9f:	041c00        	extui	a1, a0, 12, 1
400e6fa2:	205540        	or	a5, a5, a4
400e6fa5:	02e557        	bbsi	a5, 5, 400e6fab <_svfiprintf_r+0x583>
400e6fa8:	003606        	j	400e7084 <_svfiprintf_r+0x65c>
400e6fab:	912182        	l32i	a8, a1, 0x244
400e6fae:	86bc      	beqz.n	a6, 400e6fea <_svfiprintf_r+0x5c2>
400e6fb0:	0ca287        	bge	a2, a8, 400e6fc0 <_svfiprintf_r+0x598>
400e6fb3:	10c192        	addi	a9, a1, 16
400e6fb6:	b02290        	addx8	a2, a2, a9
400e6fb9:	02e8      	l32i.n	a14, a2, 0
400e6fbb:	1248      	l32i.n	a4, a2, 4
400e6fbd:	0008c6        	j	400e6fe4 <_svfiprintf_r+0x5bc>
400e6fc0:	10c1a2        	addi	a10, a1, 16
400e6fc3:	30a242        	movi	a4, 0x230
400e6fc6:	4a4a      	add.n	a4, a10, a4
400e6fc8:	34a2d2        	movi	a13, 0x234
400e6fcb:	40a2c2        	movi	a12, 0x240
400e6fce:	0aed      	mov.n	a14, a10
400e6fd0:	0149      	s32i.n	a4, a1, 0
400e6fd2:	01daf2        	addmi	a15, a10, 0x100
400e6fd5:	dada      	add.n	a13, a10, a13
400e6fd7:	caca      	add.n	a12, a10, a12
400e6fd9:	07bd      	mov.n	a11, a7
400e6fdb:	02ad      	mov.n	a10, a2
400e6fdd:	ff4c25        	call8	400e64a0 <get_arg$isra$0>
400e6fe0:	0ae8      	l32i.n	a14, a10, 0
400e6fe2:	1a48      	l32i.n	a4, a10, 4
400e6fe4:	986132        	s32i	a3, a1, 0x260
400e6fe7:	00bc86        	j	400e72dd <_svfiprintf_r+0x8b5>
400e6fea:	431b      	addi.n	a4, a3, 1
400e6fec:	10c162        	addi	a6, a1, 16
400e6fef:	986142        	s32i	a4, a1, 0x260
400e6ff2:	b02260        	addx8	a2, a2, a6
400e6ff5:	02a387        	bge	a3, a8, 400e6ffb <_svfiprintf_r+0x5d3>
400e6ff8:	002006        	j	400e707c <_svfiprintf_r+0x654>
400e6ffb:	f21c      	movi.n	a2, 31
400e6ffd:	482287        	blt	a2, a8, 400e7049 <_svfiprintf_r+0x621>
400e7000:	281b      	addi.n	a2, a8, 1
400e7002:	10c192        	addi	a9, a1, 16
400e7005:	916122        	s32i	a2, a1, 0x244
400e7008:	02d922        	addmi	a2, a9, 0x200
400e700b:	122232        	l32i	a3, a2, 72
400e700e:	437b      	addi.n	a4, a3, 7
400e7010:	837c      	movi.n	a3, -8
400e7012:	103430        	and	a3, a4, a3
400e7015:	638b      	addi.n	a6, a3, 8
400e7017:	126262        	s32i	a6, a2, 72
400e701a:	841c      	movi.n	a4, 24
400e701c:	052467        	blt	a4, a6, 400e7025 <_svfiprintf_r+0x5fd>
400e701f:	112232        	l32i	a3, a2, 68
400e7022:	000286        	j	400e7030 <_svfiprintf_r+0x608>
400e7025:	042437        	blt	a4, a3, 400e702d <_svfiprintf_r+0x605>
400e7028:	832c      	movi.n	a3, 40
400e702a:	126232        	s32i	a3, a2, 72
400e702d:	942132        	l32i	a3, a1, 0x250
400e7030:	962122        	l32i	a2, a1, 0x258
400e7033:	10c1a2        	addi	a10, a1, 16
400e7036:	232a      	add.n	a2, a3, a2
400e7038:	f8c222        	addi	a2, a2, -8
400e703b:	02e8      	l32i.n	a14, a2, 0
400e703d:	1248      	l32i.n	a4, a2, 4
400e703f:	b028a0        	addx8	a2, a8, a10
400e7042:	02e9      	s32i.n	a14, a2, 0
400e7044:	1249      	s32i.n	a4, a2, 4
400e7046:	00a4c6        	j	400e72dd <_svfiprintf_r+0x8b5>
400e7049:	10c1b2        	addi	a11, a1, 16
400e704c:	02db22        	addmi	a2, a11, 0x200
400e704f:	122232        	l32i	a3, a2, 72
400e7052:	437b      	addi.n	a4, a3, 7
400e7054:	837c      	movi.n	a3, -8
400e7056:	103430        	and	a3, a4, a3
400e7059:	638b      	addi.n	a6, a3, 8
400e705b:	126262        	s32i	a6, a2, 72
400e705e:	841c      	movi.n	a4, 24
400e7060:	052467        	blt	a4, a6, 400e7069 <_svfiprintf_r+0x641>
400e7063:	112232        	l32i	a3, a2, 68
400e7066:	000286        	j	400e7074 <_svfiprintf_r+0x64c>
400e7069:	042437        	blt	a4, a3, 400e7071 <_svfiprintf_r+0x649>
400e706c:	832c      	movi.n	a3, 40
400e706e:	126232        	s32i	a3, a2, 72
400e7071:	942132        	l32i	a3, a1, 0x250
400e7074:	962122        	l32i	a2, a1, 0x258
400e7077:	232a      	add.n	a2, a3, a2
400e7079:	f8c222        	addi	a2, a2, -8
400e707c:	02e8      	l32i.n	a14, a2, 0
400e707e:	1248      	l32i.n	a4, a2, 4
400e7080:	009646        	j	400e72dd <_svfiprintf_r+0x8b5>
400e7083:	214200        	srai	a4, a0, 2
400e7086:	654791        	l32r	a9, 400c05a4 <_rtc_text_end+0x5a4>
400e7089:	64c602        	addi	a0, a6, 100
400e708c:	e56700        	extui	a6, a0, 23, 15
400e708f:	300602        	l8ui	a0, a6, 48
400e7092:	36bc00        	lsi	f0, a12, 216
400e7095:	0ba247        	bge	a2, a4, 400e70a4 <_svfiprintf_r+0x67c>
400e7098:	10c142        	addi	a4, a1, 16
400e709b:	b02240        	addx8	a2, a2, a4
400e709e:	0092e2        	l16si	a14, a2, 0
400e70a1:	006b86        	j	400e7253 <_svfiprintf_r+0x82b>
400e70a4:	10c162        	addi	a6, a1, 16
400e70a7:	30a242        	movi	a4, 0x230
400e70aa:	464a      	add.n	a4, a6, a4
400e70ac:	34a2d2        	movi	a13, 0x234
400e70af:	40a2c2        	movi	a12, 0x240
400e70b2:	06ed      	mov.n	a14, a6
400e70b4:	0149      	s32i.n	a4, a1, 0
400e70b6:	01d6f2        	addmi	a15, a6, 0x100
400e70b9:	d6da      	add.n	a13, a6, a13
400e70bb:	c6ca      	add.n	a12, a6, a12
400e70bd:	07bd      	mov.n	a11, a7
400e70bf:	02ad      	mov.n	a10, a2
400e70c1:	ff3de5        	call8	400e64a0 <get_arg$isra$0>
400e70c4:	009ae2        	l16si	a14, a10, 0
400e70c7:	006206        	j	400e7253 <_svfiprintf_r+0x82b>
400e70ca:	831b      	addi.n	a8, a3, 1
400e70cc:	10c192        	addi	a9, a1, 16
400e70cf:	986182        	s32i	a8, a1, 0x260
400e70d2:	b02290        	addx8	a2, a2, a9
400e70d5:	732347        	blt	a3, a4, 400e714c <_svfiprintf_r+0x724>
400e70d8:	f21c      	movi.n	a2, 31
400e70da:	422247        	blt	a2, a4, 400e7120 <_svfiprintf_r+0x6f8>
400e70dd:	241b      	addi.n	a2, a4, 1
400e70df:	10c1a2        	addi	a10, a1, 16
400e70e2:	916122        	s32i	a2, a1, 0x244
400e70e5:	02da22        	addmi	a2, a10, 0x200
400e70e8:	122232        	l32i	a3, a2, 72
400e70eb:	861c      	movi.n	a6, 24
400e70ed:	834b      	addi.n	a8, a3, 4
400e70ef:	126282        	s32i	a8, a2, 72
400e70f2:	062687        	blt	a6, a8, 400e70fc <_svfiprintf_r+0x6d4>
400e70f5:	112232        	l32i	a3, a2, 68
400e70f8:	0002c6        	j	400e7107 <_svfiprintf_r+0x6df>
400e70fb:	263700        	lsi	f0, a7, 152
400e70fe:	432c04        	lsi	f0, a12, 0x10c
400e7101:	126232        	s32i	a3, a2, 72
400e7104:	942132        	l32i	a3, a1, 0x250
400e7107:	962122        	l32i	a2, a1, 0x258
400e710a:	10c1b2        	addi	a11, a1, 16
400e710d:	232a      	add.n	a2, a3, a2
400e710f:	fcc222        	addi	a2, a2, -4
400e7112:	02e8      	l32i.n	a14, a2, 0
400e7114:	b044b0        	addx8	a4, a4, a11
400e7117:	04e9      	s32i.n	a14, a4, 0
400e7119:	23ee80        	sext	a14, a14, 15
400e711c:	006e86        	j	400e72da <_svfiprintf_r+0x8b2>
400e711f:	c13200        	mul16u	a3, a2, a0
400e7122:	d32210        	movt	a2, a2, b1
400e7125:	223202        	lsi	f0, a2, 136
400e7128:	841c12        	l16ui	a1, a12, 0x108
400e712b:	634b      	addi.n	a6, a3, 4
400e712d:	126262        	s32i	a6, a2, 72
400e7130:	052467        	blt	a4, a6, 400e7139 <_svfiprintf_r+0x711>
400e7133:	112232        	l32i	a3, a2, 68
400e7136:	000286        	j	400e7144 <_svfiprintf_r+0x71c>
400e7139:	042437        	blt	a4, a3, 400e7141 <_svfiprintf_r+0x719>
400e713c:	432c      	movi.n	a3, 36
400e713e:	126232        	s32i	a3, a2, 72
400e7141:	942132        	l32i	a3, a1, 0x250
400e7144:	962122        	l32i	a2, a1, 0x258
400e7147:	232a      	add.n	a2, a3, a2
400e7149:	fcc222        	addi	a2, a2, -4
400e714c:	0092e2        	l16si	a14, a2, 0
400e714f:	0061c6        	j	400e72da <_svfiprintf_r+0x8b2>
400e7152:	970000        	lsi	f0, a0, 0x25c
400e7155:	8602e5        	call8	4006d184 <__udivmoddi4+0x8590>
400e7158:	bc0031        	l32r	a3, 400d6158 <get_available_int+0xc8>
400e715b:	a24776        	lsi	f7, a7, 0x288
400e715e:	420c      	movi.n	a2, 4
400e7160:	4010c1        	l32r	a12, 400b71a0 <_iram_end+0x2964c>
400e7163:	e2b022        	l32ai	a2, a0, 0x388
400e7166:	c60002        	l8ui	a0, a0, 198
400e7169:	0008      	l32i.n	a0, a0, 0
400e716b:	c16200        	mul16u	a6, a2, a0
400e716e:	a24210        	muluh	a4, a2, a1
400e7171:	464a30        	lsi	f3, a10, 0x118
400e7174:	34a2d2        	movi	a13, 0x234
400e7177:	40a2c2        	movi	a12, 0x240
400e717a:	06ed      	mov.n	a14, a6
400e717c:	0149      	s32i.n	a4, a1, 0
400e717e:	01d6f2        	addmi	a15, a6, 0x100
400e7181:	d6da      	add.n	a13, a6, a13
400e7183:	c6ca      	add.n	a12, a6, a12
400e7185:	07bd      	mov.n	a11, a7
400e7187:	02ad      	mov.n	a10, a2
400e7189:	ff3165        	call8	400e64a0 <get_arg$isra$0>
400e718c:	000ae2        	l8ui	a14, a10, 0
400e718f:	986132        	s32i	a3, a1, 0x260
400e7192:	002146        	j	400e721b <_svfiprintf_r+0x7f3>
400e7195:	831b      	addi.n	a8, a3, 1
400e7197:	10c192        	addi	a9, a1, 16
400e719a:	986182        	s32i	a8, a1, 0x260
400e719d:	b02290        	addx8	a2, a2, a9
400e71a0:	742347        	blt	a3, a4, 400e7218 <_svfiprintf_r+0x7f0>
400e71a3:	f21c      	movi.n	a2, 31
400e71a5:	432247        	blt	a2, a4, 400e71ec <_svfiprintf_r+0x7c4>
400e71a8:	241b      	addi.n	a2, a4, 1
400e71aa:	10c1a2        	addi	a10, a1, 16
400e71ad:	916122        	s32i	a2, a1, 0x244
400e71b0:	02da22        	addmi	a2, a10, 0x200
400e71b3:	122232        	l32i	a3, a2, 72
400e71b6:	861c      	movi.n	a6, 24
400e71b8:	834b      	addi.n	a8, a3, 4
400e71ba:	126282        	s32i	a8, a2, 72
400e71bd:	072687        	blt	a6, a8, 400e71c8 <_svfiprintf_r+0x7a0>
400e71c0:	112232        	l32i	a3, a2, 68
400e71c3:	000306        	j	400e71d3 <_svfiprintf_r+0x7ab>
400e71c6:	370000        	lsi	f0, a0, 220
400e71c9:	2c0426        	beqi	a4, -1, 400e71f9 <_svfiprintf_r+0x7d1>
400e71cc:	623243        	lsi	f4, a2, 0x188
400e71cf:	213212        	lsi	f1, a2, 132
400e71d2:	212294        	lsi	f9, a2, 132
400e71d5:	c1b296        	bltz	a2, 400e6df4 <_svfiprintf_r+0x3cc>
400e71d8:	232a10        	sext	a2, a10, 8
400e71db:	fcc222        	addi	a2, a2, -4
400e71de:	02e8      	l32i.n	a14, a2, 0
400e71e0:	b044b0        	addx8	a4, a4, a11
400e71e3:	04e9      	s32i.n	a14, a4, 0
400e71e5:	74e0e0        	extui	a14, a14, 0, 8
400e71e8:	000bc6        	j	400e721b <_svfiprintf_r+0x7f3>
400e71eb:	c13200        	mul16u	a3, a2, a0
400e71ee:	d32210        	movt	a2, a2, b1
400e71f1:	223202        	lsi	f0, a2, 136
400e71f4:	841c12        	l16ui	a1, a12, 0x108
400e71f7:	634b      	addi.n	a6, a3, 4
400e71f9:	126262        	s32i	a6, a2, 72
400e71fc:	052467        	blt	a4, a6, 400e7205 <_svfiprintf_r+0x7dd>
400e71ff:	112232        	l32i	a3, a2, 68
400e7202:	000286        	j	400e7210 <_svfiprintf_r+0x7e8>
400e7205:	042437        	blt	a4, a3, 400e720d <_svfiprintf_r+0x7e5>
400e7208:	432c      	movi.n	a3, 36
400e720a:	126232        	s32i	a3, a2, 72
400e720d:	942132        	l32i	a3, a1, 0x250
400e7210:	962122        	l32i	a2, a1, 0x258
400e7213:	232a      	add.n	a2, a3, a2
400e7215:	fcc222        	addi	a2, a2, -4
400e7218:	0002e2        	l8ui	a14, a2, 0
400e721b:	23ee00        	sext	a14, a14, 7
400e721e:	002e06        	j	400e72da <_svfiprintf_r+0x8b2>
400e7221:	46bc      	beqz.n	a6, 400e7259 <_svfiprintf_r+0x831>
400e7223:	0aa247        	bge	a2, a4, 400e7231 <_svfiprintf_r+0x809>
400e7226:	10c142        	addi	a4, a1, 16
400e7229:	b02240        	addx8	a2, a2, a4
400e722c:	02e8      	l32i.n	a14, a2, 0
400e722e:	000846        	j	400e7253 <_svfiprintf_r+0x82b>
400e7231:	10c162        	addi	a6, a1, 16
400e7234:	30a242        	movi	a4, 0x230
400e7237:	464a      	add.n	a4, a6, a4
400e7239:	34a2d2        	movi	a13, 0x234
400e723c:	40a2c2        	movi	a12, 0x240
400e723f:	06ed      	mov.n	a14, a6
400e7241:	0149      	s32i.n	a4, a1, 0
400e7243:	01d6f2        	addmi	a15, a6, 0x100
400e7246:	d6da      	add.n	a13, a6, a13
400e7248:	c6ca      	add.n	a12, a6, a12
400e724a:	07bd      	mov.n	a11, a7
400e724c:	02ad      	mov.n	a10, a2
400e724e:	ff2525        	call8	400e64a0 <get_arg$isra$0>
400e7251:	0ae8      	l32i.n	a14, a10, 0
400e7253:	986132        	s32i	a3, a1, 0x260
400e7256:	002006        	j	400e72da <_svfiprintf_r+0x8b2>
400e7259:	831b      	addi.n	a8, a3, 1
400e725b:	10c192        	addi	a9, a1, 16
400e725e:	986182        	s32i	a8, a1, 0x260
400e7261:	b02290        	addx8	a2, a2, a9
400e7264:	702347        	blt	a3, a4, 400e72d8 <_svfiprintf_r+0x8b0>
400e7267:	f21c      	movi.n	a2, 31
400e7269:	3f2247        	blt	a2, a4, 400e72ac <_svfiprintf_r+0x884>
400e726c:	241b      	addi.n	a2, a4, 1
400e726e:	10c1a2        	addi	a10, a1, 16
400e7271:	916122        	s32i	a2, a1, 0x244
400e7274:	02da22        	addmi	a2, a10, 0x200
400e7277:	122232        	l32i	a3, a2, 72
400e727a:	861c      	movi.n	a6, 24
400e727c:	834b      	addi.n	a8, a3, 4
400e727e:	126282        	s32i	a8, a2, 72
400e7281:	072687        	blt	a6, a8, 400e728c <_svfiprintf_r+0x864>
400e7284:	112232        	l32i	a3, a2, 68
400e7287:	000306        	j	400e7297 <_svfiprintf_r+0x86f>
400e728a:	370000        	lsi	f0, a0, 220
400e728d:	2c0426        	beqi	a4, -1, 400e72bd <_svfiprintf_r+0x895>
400e7290:	623243        	lsi	f4, a2, 0x188
400e7293:	213212        	lsi	f1, a2, 132
400e7296:	212294        	lsi	f9, a2, 132
400e7299:	c1b296        	bltz	a2, 400e6eb8 <_svfiprintf_r+0x490>
400e729c:	232a10        	sext	a2, a10, 8
400e729f:	fcc222        	addi	a2, a2, -4
400e72a2:	02e8      	l32i.n	a14, a2, 0
400e72a4:	b044b0        	addx8	a4, a4, a11
400e72a7:	04e9      	s32i.n	a14, a4, 0
400e72a9:	000b46        	j	400e72da <_svfiprintf_r+0x8b2>
400e72ac:	10c132        	addi	a3, a1, 16
400e72af:	02d322        	addmi	a2, a3, 0x200
400e72b2:	122232        	l32i	a3, a2, 72
400e72b5:	841c      	movi.n	a4, 24
400e72b7:	634b      	addi.n	a6, a3, 4
400e72b9:	126262        	s32i	a6, a2, 72
400e72bc:	052467        	blt	a4, a6, 400e72c5 <_svfiprintf_r+0x89d>
400e72bf:	112232        	l32i	a3, a2, 68
400e72c2:	000286        	j	400e72d0 <_svfiprintf_r+0x8a8>
400e72c5:	042437        	blt	a4, a3, 400e72cd <_svfiprintf_r+0x8a5>
400e72c8:	432c      	movi.n	a3, 36
400e72ca:	126232        	s32i	a3, a2, 72
400e72cd:	942132        	l32i	a3, a1, 0x250
400e72d0:	962122        	l32i	a2, a1, 0x258
400e72d3:	232a      	add.n	a2, a3, a2
400e72d5:	fcc222        	addi	a2, a2, -4
400e72d8:	02e8      	l32i.n	a14, a2, 0
400e72da:	314fe0        	srai	a4, a14, 31
400e72dd:	120c      	movi.n	a2, 1
400e72df:	002496        	bltz	a4, 400e72e5 <_svfiprintf_r+0x8bd>
400e72e2:	045e86        	j	400e8460 <_svfiprintf_r+0x1a38>
400e72e5:	60e0e0        	neg	a14, a14
400e72e8:	030c      	movi.n	a3, 0
400e72ea:	9332e0        	movnez	a3, a2, a14
400e72ed:	604040        	neg	a4, a4
400e72f0:	10c182        	addi	a8, a1, 16
400e72f3:	c04430        	sub	a4, a4, a3
400e72f6:	d62c      	movi.n	a6, 45
400e72f8:	02d832        	addmi	a3, a8, 0x200
400e72fb:	3a4362        	s8i	a6, a3, 58
400e72fe:	045786        	j	400e8460 <_svfiprintf_r+0x1a38>
400e7301:	912142        	l32i	a4, a1, 0x244
400e7304:	02e557        	bbsi	a5, 5, 400e730a <_svfiprintf_r+0x8e2>
400e7307:	003046        	j	400e73cc <_svfiprintf_r+0x9a4>
400e730a:	36bc      	beqz.n	a6, 400e7341 <_svfiprintf_r+0x919>
400e730c:	0aa247        	bge	a2, a4, 400e731a <_svfiprintf_r+0x8f2>
400e730f:	10c192        	addi	a9, a1, 16
400e7312:	b02290        	addx8	a2, a2, a9
400e7315:	0228      	l32i.n	a2, a2, 0
400e7317:	000846        	j	400e733c <_svfiprintf_r+0x914>
400e731a:	10c1a2        	addi	a10, a1, 16
400e731d:	30a242        	movi	a4, 0x230
400e7320:	4a4a      	add.n	a4, a10, a4
400e7322:	34a2d2        	movi	a13, 0x234
400e7325:	40a2c2        	movi	a12, 0x240
400e7328:	01daf2        	addmi	a15, a10, 0x100
400e732b:	0aed      	mov.n	a14, a10
400e732d:	dada      	add.n	a13, a10, a13
400e732f:	caca      	add.n	a12, a10, a12
400e7331:	0149      	s32i.n	a4, a1, 0
400e7333:	02ad      	mov.n	a10, a2
400e7335:	07bd      	mov.n	a11, a7
400e7337:	ff16a5        	call8	400e64a0 <get_arg$isra$0>
400e733a:	0a28      	l32i.n	a2, a10, 0
400e733c:	035d      	mov.n	a5, a3
400e733e:	001f06        	j	400e73be <_svfiprintf_r+0x996>
400e7341:	10c1b2        	addi	a11, a1, 16
400e7344:	531b      	addi.n	a5, a3, 1
400e7346:	b022b0        	addx8	a2, a2, a11
400e7349:	6f2347        	blt	a3, a4, 400e73bc <_svfiprintf_r+0x994>
400e734c:	f21c      	movi.n	a2, 31
400e734e:	3e2247        	blt	a2, a4, 400e7390 <_svfiprintf_r+0x968>
400e7351:	241b      	addi.n	a2, a4, 1
400e7353:	10c132        	addi	a3, a1, 16
400e7356:	916122        	s32i	a2, a1, 0x244
400e7359:	02d322        	addmi	a2, a3, 0x200
400e735c:	122232        	l32i	a3, a2, 72
400e735f:	861c      	movi.n	a6, 24
400e7361:	734b      	addi.n	a7, a3, 4
400e7363:	126272        	s32i	a7, a2, 72
400e7366:	062677        	blt	a6, a7, 400e7370 <_svfiprintf_r+0x948>
400e7369:	112232        	l32i	a3, a2, 68
400e736c:	0002c6        	j	400e737b <_svfiprintf_r+0x953>
400e736f:	263700        	lsi	f0, a7, 152
400e7372:	432c04        	lsi	f0, a12, 0x10c
400e7375:	126232        	s32i	a3, a2, 72
400e7378:	942132        	l32i	a3, a1, 0x250
400e737b:	962122        	l32i	a2, a1, 0x258
400e737e:	10c162        	addi	a6, a1, 16
400e7381:	232a      	add.n	a2, a3, a2
400e7383:	fcc222        	addi	a2, a2, -4
400e7386:	0228      	l32i.n	a2, a2, 0
400e7388:	b03460        	addx8	a3, a4, a6
400e738b:	0329      	s32i.n	a2, a3, 0
400e738d:	000b46        	j	400e73be <_svfiprintf_r+0x996>
400e7390:	10c182        	addi	a8, a1, 16
400e7393:	02d822        	addmi	a2, a8, 0x200
400e7396:	122232        	l32i	a3, a2, 72
400e7399:	841c      	movi.n	a4, 24
400e739b:	634b      	addi.n	a6, a3, 4
400e739d:	126262        	s32i	a6, a2, 72
400e73a0:	052467        	blt	a4, a6, 400e73a9 <_svfiprintf_r+0x981>
400e73a3:	112232        	l32i	a3, a2, 68
400e73a6:	000286        	j	400e73b4 <_svfiprintf_r+0x98c>
400e73a9:	042437        	blt	a4, a3, 400e73b1 <_svfiprintf_r+0x989>
400e73ac:	432c      	movi.n	a3, 36
400e73ae:	126232        	s32i	a3, a2, 72
400e73b1:	942132        	l32i	a3, a1, 0x250
400e73b4:	962122        	l32i	a2, a1, 0x258
400e73b7:	232a      	add.n	a2, a3, a2
400e73b9:	fcc222        	addi	a2, a2, -4
400e73bc:	0228      	l32i.n	a2, a2, 0
400e73be:	9e2192        	l32i	a9, a1, 0x278
400e73c1:	313f90        	srai	a3, a9, 31
400e73c4:	0299      	s32i.n	a9, a2, 0
400e73c6:	1239      	s32i.n	a3, a2, 4
400e73c8:	00c4c6        	j	400e76df <_svfiprintf_r+0xcb7>
400e73cb:	e54700        	extui	a4, a0, 23, 15
400e73ce:	304602        	s8i	a0, a6, 48
400e73d1:	66bc00        	lsi	f0, a12, 0x198
400e73d4:	0ca247        	bge	a2, a4, 400e73e4 <_svfiprintf_r+0x9bc>
400e73d7:	10c1a2        	addi	a10, a1, 16
400e73da:	b022a0        	addx8	a2, a2, a10
400e73dd:	0258      	l32i.n	a5, a2, 0
400e73df:	0008c6        	j	400e7406 <_svfiprintf_r+0x9de>
400e73e2:	b20000        	mulsh	a0, a0, a0
400e73e5:	4210c1        	l32r	a12, 400b7c28 <_iram_end+0x2a0d4>
400e73e8:	4a30a2        	lsi	f10, a0, 0x128
400e73eb:	d24b      	addi.n	a13, a2, 4
400e73ed:	c234a2        	lsi	f10, a4, 0x308
400e73f0:	f240a2        	s8i	a10, a0, 242
400e73f3:	01db      	addi.n	a0, a1, 13
400e73f5:	0bed      	mov.n	a14, a11
400e73f7:	dbda      	add.n	a13, a11, a13
400e73f9:	cbca      	add.n	a12, a11, a12
400e73fb:	0149      	s32i.n	a4, a1, 0
400e73fd:	07bd      	mov.n	a11, a7
400e73ff:	02ad      	mov.n	a10, a2
400e7401:	ff09e5        	call8	400e64a0 <get_arg$isra$0>
400e7404:	0a58      	l32i.n	a5, a10, 0
400e7406:	036d      	mov.n	a6, a3
400e7408:	001fc6        	j	400e748b <_svfiprintf_r+0xa63>
400e740b:	631b00        	minu	a1, a11, a0
400e740e:	08a347        	bge	a3, a4, 400e741a <_svfiprintf_r+0x9f2>
400e7411:	10c132        	addi	a3, a1, 16
400e7414:	b02230        	addx8	a2, a2, a3
400e7417:	001b86        	j	400e7489 <_svfiprintf_r+0xa61>
400e741a:	f21c      	movi.n	a2, 31
400e741c:	3d2247        	blt	a2, a4, 400e745d <_svfiprintf_r+0xa35>
400e741f:	241b      	addi.n	a2, a4, 1
400e7421:	10c152        	addi	a5, a1, 16
400e7424:	916122        	s32i	a2, a1, 0x244
400e7427:	02d522        	addmi	a2, a5, 0x200
400e742a:	122232        	l32i	a3, a2, 72
400e742d:	851c      	movi.n	a5, 24
400e742f:	734b      	addi.n	a7, a3, 4
400e7431:	126272        	s32i	a7, a2, 72
400e7434:	052577        	blt	a5, a7, 400e743d <_svfiprintf_r+0xa15>
400e7437:	112232        	l32i	a3, a2, 68
400e743a:	000286        	j	400e7448 <_svfiprintf_r+0xa20>
400e743d:	042537        	blt	a5, a3, 400e7445 <_svfiprintf_r+0xa1d>
400e7440:	432c      	movi.n	a3, 36
400e7442:	126232        	s32i	a3, a2, 72
400e7445:	942132        	l32i	a3, a1, 0x250
400e7448:	962122        	l32i	a2, a1, 0x258
400e744b:	10c182        	addi	a8, a1, 16
400e744e:	232a      	add.n	a2, a3, a2
400e7450:	fcc222        	addi	a2, a2, -4
400e7453:	0258      	l32i.n	a5, a2, 0
400e7455:	b02480        	addx8	a2, a4, a8
400e7458:	0259      	s32i.n	a5, a2, 0
400e745a:	000b46        	j	400e748b <_svfiprintf_r+0xa63>
400e745d:	10c192        	addi	a9, a1, 16
400e7460:	02d922        	addmi	a2, a9, 0x200
400e7463:	122232        	l32i	a3, a2, 72
400e7466:	841c      	movi.n	a4, 24
400e7468:	534b      	addi.n	a5, a3, 4
400e746a:	126252        	s32i	a5, a2, 72
400e746d:	052457        	blt	a4, a5, 400e7476 <_svfiprintf_r+0xa4e>
400e7470:	112232        	l32i	a3, a2, 68
400e7473:	000286        	j	400e7481 <_svfiprintf_r+0xa59>
400e7476:	042437        	blt	a4, a3, 400e747e <_svfiprintf_r+0xa56>
400e7479:	432c      	movi.n	a3, 36
400e747b:	126232        	s32i	a3, a2, 72
400e747e:	942132        	l32i	a3, a1, 0x250
400e7481:	962122        	l32i	a2, a1, 0x258
400e7484:	232a      	add.n	a2, a3, a2
400e7486:	fcc222        	addi	a2, a2, -4
400e7489:	0258      	l32i.n	a5, a2, 0
400e748b:	9e2122        	l32i	a2, a1, 0x278
400e748e:	0529      	s32i.n	a2, a5, 0
400e7490:	003106        	j	400e7558 <_svfiprintf_r+0xb30>
400e7493:	e56700        	extui	a6, a0, 23, 15
400e7496:	308602        	lsi	f0, a6, 192
400e7499:	66bc00        	lsi	f0, a12, 0x198
400e749c:	0ca247        	bge	a2, a4, 400e74ac <_svfiprintf_r+0xa84>
400e749f:	10c142        	addi	a4, a1, 16
400e74a2:	b02240        	addx8	a2, a2, a4
400e74a5:	0258      	l32i.n	a5, a2, 0
400e74a7:	0008c6        	j	400e74ce <_svfiprintf_r+0xaa6>
400e74aa:	520000        	lsi	f0, a0, 0x148
400e74ad:	4210c1        	l32r	a12, 400b7cf0 <_iram_end+0x2a19c>
400e74b0:	4a30a2        	lsi	f10, a0, 0x128
400e74b3:	a2d245        	call0	4008a1d8 <vPortYield+0x3c>
400e74b6:	a2c234        	lsi	f3, a2, 0x288
400e74b9:	d5f240        	extui	a15, a4, 18, 14
400e74bc:	05ed01        	l32r	a0, 400a8c70 <_iram_end+0x1b11c>
400e74bf:	d5da      	add.n	a13, a5, a13
400e74c1:	c5ca      	add.n	a12, a5, a12
400e74c3:	0149      	s32i.n	a4, a1, 0
400e74c5:	07bd      	mov.n	a11, a7
400e74c7:	02ad      	mov.n	a10, a2
400e74c9:	fefd65        	call8	400e64a0 <get_arg$isra$0>
400e74cc:	0a58      	l32i.n	a5, a10, 0
400e74ce:	036d      	mov.n	a6, a3
400e74d0:	001f86        	j	400e7552 <_svfiprintf_r+0xb2a>
400e74d3:	c18200        	mul16u	a8, a2, a0
400e74d6:	631b10        	minu	a1, a11, a1
400e74d9:	b02280        	addx8	a2, a2, a8
400e74dc:	702347        	blt	a3, a4, 400e7550 <_svfiprintf_r+0xb28>
400e74df:	f21c      	movi.n	a2, 31
400e74e1:	3f2247        	blt	a2, a4, 400e7524 <_svfiprintf_r+0xafc>
400e74e4:	241b      	addi.n	a2, a4, 1
400e74e6:	10c192        	addi	a9, a1, 16
400e74e9:	916122        	s32i	a2, a1, 0x244
400e74ec:	02d922        	addmi	a2, a9, 0x200
400e74ef:	122232        	l32i	a3, a2, 72
400e74f2:	851c      	movi.n	a5, 24
400e74f4:	734b      	addi.n	a7, a3, 4
400e74f6:	126272        	s32i	a7, a2, 72
400e74f9:	072577        	blt	a5, a7, 400e7504 <_svfiprintf_r+0xadc>
400e74fc:	112232        	l32i	a3, a2, 68
400e74ff:	000306        	j	400e750f <_svfiprintf_r+0xae7>
400e7502:	370000        	lsi	f0, a0, 220
400e7505:	2c0425        	call8	40113548 <_etext+0x26c6b>
400e7508:	623243        	lsi	f4, a2, 0x188
400e750b:	213212        	lsi	f1, a2, 132
400e750e:	212294        	lsi	f9, a2, 132
400e7511:	c1a296        	bltz	a2, 400e712f <_svfiprintf_r+0x707>
400e7514:	232a10        	sext	a2, a10, 8
400e7517:	fcc222        	addi	a2, a2, -4
400e751a:	0258      	l32i.n	a5, a2, 0
400e751c:	b024a0        	addx8	a2, a4, a10
400e751f:	0259      	s32i.n	a5, a2, 0
400e7521:	000b46        	j	400e7552 <_svfiprintf_r+0xb2a>
400e7524:	10c1b2        	addi	a11, a1, 16
400e7527:	02db22        	addmi	a2, a11, 0x200
400e752a:	122232        	l32i	a3, a2, 72
400e752d:	841c      	movi.n	a4, 24
400e752f:	534b      	addi.n	a5, a3, 4
400e7531:	126252        	s32i	a5, a2, 72
400e7534:	052457        	blt	a4, a5, 400e753d <_svfiprintf_r+0xb15>
400e7537:	112232        	l32i	a3, a2, 68
400e753a:	000286        	j	400e7548 <_svfiprintf_r+0xb20>
400e753d:	042437        	blt	a4, a3, 400e7545 <_svfiprintf_r+0xb1d>
400e7540:	432c      	movi.n	a3, 36
400e7542:	126232        	s32i	a3, a2, 72
400e7545:	942132        	l32i	a3, a1, 0x250
400e7548:	962122        	l32i	a2, a1, 0x258
400e754b:	232a      	add.n	a2, a3, a2
400e754d:	fcc222        	addi	a2, a2, -4
400e7550:	0258      	l32i.n	a5, a2, 0
400e7552:	9e2122        	l32i	a2, a1, 0x278
400e7555:	005522        	s16i	a2, a5, 0
400e7558:	062d      	mov.n	a2, a6
400e755a:	fd5446        	j	400e6aaf <_svfiprintf_r+0x87>
400e755d:	02e597        	bbsi	a5, 9, 400e7563 <_svfiprintf_r+0xb3b>
400e7560:	003006        	j	400e7624 <_svfiprintf_r+0xbfc>
400e7563:	56bc      	beqz.n	a6, 400e759c <_svfiprintf_r+0xb74>
400e7565:	0ba247        	bge	a2, a4, 400e7574 <_svfiprintf_r+0xb4c>
400e7568:	10c142        	addi	a4, a1, 16
400e756b:	b02240        	addx8	a2, a2, a4
400e756e:	0228      	l32i.n	a2, a2, 0
400e7570:	000886        	j	400e7596 <_svfiprintf_r+0xb6e>
400e7573:	c15200        	mul16u	a5, a2, a0
400e7576:	a24210        	muluh	a4, a2, a1
400e7579:	454a30        	extui	a4, a3, 26, 5
400e757c:	34a2d2        	movi	a13, 0x234
400e757f:	40a2c2        	movi	a12, 0x240
400e7582:	02ad      	mov.n	a10, a2
400e7584:	0149      	s32i.n	a4, a1, 0
400e7586:	01d5f2        	addmi	a15, a5, 0x100
400e7589:	05ed      	mov.n	a14, a5
400e758b:	d5da      	add.n	a13, a5, a13
400e758d:	c5ca      	add.n	a12, a5, a12
400e758f:	07bd      	mov.n	a11, a7
400e7591:	fef0e5        	call8	400e64a0 <get_arg$isra$0>
400e7594:	0a28      	l32i.n	a2, a10, 0
400e7596:	035d      	mov.n	a5, a3
400e7598:	001f86        	j	400e761a <_svfiprintf_r+0xbf2>
400e759b:	c16200        	mul16u	a6, a2, a0
400e759e:	531b10        	max	a1, a11, a1
400e75a1:	b02260        	addx8	a2, a2, a6
400e75a4:	702347        	blt	a3, a4, 400e7618 <_svfiprintf_r+0xbf0>
400e75a7:	f21c      	movi.n	a2, 31
400e75a9:	3f2247        	blt	a2, a4, 400e75ec <_svfiprintf_r+0xbc4>
400e75ac:	241b      	addi.n	a2, a4, 1
400e75ae:	10c182        	addi	a8, a1, 16
400e75b1:	916122        	s32i	a2, a1, 0x244
400e75b4:	02d822        	addmi	a2, a8, 0x200
400e75b7:	122232        	l32i	a3, a2, 72
400e75ba:	861c      	movi.n	a6, 24
400e75bc:	734b      	addi.n	a7, a3, 4
400e75be:	126272        	s32i	a7, a2, 72
400e75c1:	072677        	blt	a6, a7, 400e75cc <_svfiprintf_r+0xba4>
400e75c4:	112232        	l32i	a3, a2, 68
400e75c7:	000306        	j	400e75d7 <_svfiprintf_r+0xbaf>
400e75ca:	370000        	lsi	f0, a0, 220
400e75cd:	2c0426        	beqi	a4, -1, 400e75fd <_svfiprintf_r+0xbd5>
400e75d0:	623243        	lsi	f4, a2, 0x188
400e75d3:	213212        	lsi	f1, a2, 132
400e75d6:	212294        	lsi	f9, a2, 132
400e75d9:	c19296        	bltz	a2, 400e71f6 <_svfiprintf_r+0x7ce>
400e75dc:	232a10        	sext	a2, a10, 8
400e75df:	fcc222        	addi	a2, a2, -4
400e75e2:	0228      	l32i.n	a2, a2, 0
400e75e4:	b04490        	addx8	a4, a4, a9
400e75e7:	0429      	s32i.n	a2, a4, 0
400e75e9:	000b46        	j	400e761a <_svfiprintf_r+0xbf2>
400e75ec:	10c1a2        	addi	a10, a1, 16
400e75ef:	02da22        	addmi	a2, a10, 0x200
400e75f2:	122232        	l32i	a3, a2, 72
400e75f5:	841c      	movi.n	a4, 24
400e75f7:	634b      	addi.n	a6, a3, 4
400e75f9:	126262        	s32i	a6, a2, 72
400e75fc:	052467        	blt	a4, a6, 400e7605 <_svfiprintf_r+0xbdd>
400e75ff:	112232        	l32i	a3, a2, 68
400e7602:	000286        	j	400e7610 <_svfiprintf_r+0xbe8>
400e7605:	042437        	blt	a4, a3, 400e760d <_svfiprintf_r+0xbe5>
400e7608:	432c      	movi.n	a3, 36
400e760a:	126232        	s32i	a3, a2, 72
400e760d:	942132        	l32i	a3, a1, 0x250
400e7610:	962122        	l32i	a2, a1, 0x258
400e7613:	232a      	add.n	a2, a3, a2
400e7615:	fcc222        	addi	a2, a2, -4
400e7618:	0228      	l32i.n	a2, a2, 0
400e761a:	9e2132        	l32i	a3, a1, 0x278
400e761d:	004232        	s8i	a3, a2, 0
400e7620:	002ec6        	j	400e76df <_svfiprintf_r+0xcb7>
400e7623:	46bc00        	lsi	f0, a12, 0x118
400e7626:	0aa247        	bge	a2, a4, 400e7634 <_svfiprintf_r+0xc0c>
400e7629:	10c142        	addi	a4, a1, 16
400e762c:	b02240        	addx8	a2, a2, a4
400e762f:	0228      	l32i.n	a2, a2, 0
400e7631:	000846        	j	400e7656 <_svfiprintf_r+0xc2e>
400e7634:	10c152        	addi	a5, a1, 16
400e7637:	30a242        	movi	a4, 0x230
400e763a:	454a      	add.n	a4, a5, a4
400e763c:	34a2d2        	movi	a13, 0x234
400e763f:	40a2c2        	movi	a12, 0x240
400e7642:	02ad      	mov.n	a10, a2
400e7644:	0149      	s32i.n	a4, a1, 0
400e7646:	01d5f2        	addmi	a15, a5, 0x100
400e7649:	05ed      	mov.n	a14, a5
400e764b:	d5da      	add.n	a13, a5, a13
400e764d:	c5ca      	add.n	a12, a5, a12
400e764f:	07bd      	mov.n	a11, a7
400e7651:	fee4e5        	call8	400e64a0 <get_arg$isra$0>
400e7654:	0a28      	l32i.n	a2, a10, 0
400e7656:	035d      	mov.n	a5, a3
400e7658:	001f86        	j	400e76da <_svfiprintf_r+0xcb2>
400e765b:	c16200        	mul16u	a6, a2, a0
400e765e:	531b10        	max	a1, a11, a1
400e7661:	b02260        	addx8	a2, a2, a6
400e7664:	702347        	blt	a3, a4, 400e76d8 <_svfiprintf_r+0xcb0>
400e7667:	f21c      	movi.n	a2, 31
400e7669:	3f2247        	blt	a2, a4, 400e76ac <_svfiprintf_r+0xc84>
400e766c:	241b      	addi.n	a2, a4, 1
400e766e:	10c182        	addi	a8, a1, 16
400e7671:	916122        	s32i	a2, a1, 0x244
400e7674:	02d822        	addmi	a2, a8, 0x200
400e7677:	122232        	l32i	a3, a2, 72
400e767a:	861c      	movi.n	a6, 24
400e767c:	734b      	addi.n	a7, a3, 4
400e767e:	126272        	s32i	a7, a2, 72
400e7681:	072677        	blt	a6, a7, 400e768c <_svfiprintf_r+0xc64>
400e7684:	112232        	l32i	a3, a2, 68
400e7687:	000306        	j	400e7697 <_svfiprintf_r+0xc6f>
400e768a:	370000        	lsi	f0, a0, 220
400e768d:	2c0426        	beqi	a4, -1, 400e76bd <_svfiprintf_r+0xc95>
400e7690:	623243        	lsi	f4, a2, 0x188
400e7693:	213212        	lsi	f1, a2, 132
400e7696:	212294        	lsi	f9, a2, 132
400e7699:	c19296        	bltz	a2, 400e72b6 <_svfiprintf_r+0x88e>
400e769c:	232a10        	sext	a2, a10, 8
400e769f:	fcc222        	addi	a2, a2, -4
400e76a2:	0228      	l32i.n	a2, a2, 0
400e76a4:	b04490        	addx8	a4, a4, a9
400e76a7:	0429      	s32i.n	a2, a4, 0
400e76a9:	000b46        	j	400e76da <_svfiprintf_r+0xcb2>
400e76ac:	10c1a2        	addi	a10, a1, 16
400e76af:	02da22        	addmi	a2, a10, 0x200
400e76b2:	122232        	l32i	a3, a2, 72
400e76b5:	841c      	movi.n	a4, 24
400e76b7:	634b      	addi.n	a6, a3, 4
400e76b9:	126262        	s32i	a6, a2, 72
400e76bc:	052467        	blt	a4, a6, 400e76c5 <_svfiprintf_r+0xc9d>
400e76bf:	112232        	l32i	a3, a2, 68
400e76c2:	000286        	j	400e76d0 <_svfiprintf_r+0xca8>
400e76c5:	042437        	blt	a4, a3, 400e76cd <_svfiprintf_r+0xca5>
400e76c8:	432c      	movi.n	a3, 36
400e76ca:	126232        	s32i	a3, a2, 72
400e76cd:	942132        	l32i	a3, a1, 0x250
400e76d0:	962122        	l32i	a2, a1, 0x258
400e76d3:	232a      	add.n	a2, a3, a2
400e76d5:	fcc222        	addi	a2, a2, -4
400e76d8:	0228      	l32i.n	a2, a2, 0
400e76da:	9e2132        	l32i	a3, a1, 0x278
400e76dd:	0239      	s32i.n	a3, a2, 0
400e76df:	052d      	mov.n	a2, a5
400e76e1:	fcf286        	j	400e6aaf <_svfiprintf_r+0x87>
400e76e4:	041c      	movi.n	a4, 16
400e76e6:	205540        	or	a5, a5, a4
400e76e9:	02e557        	bbsi	a5, 5, 400e76ef <_svfiprintf_r+0xcc7>
400e76ec:	003486        	j	400e77c2 <_svfiprintf_r+0xd9a>
400e76ef:	912182        	l32i	a8, a1, 0x244
400e76f2:	66bc      	beqz.n	a6, 400e772c <_svfiprintf_r+0xd04>
400e76f4:	0ca287        	bge	a2, a8, 400e7704 <_svfiprintf_r+0xcdc>
400e76f7:	10c142        	addi	a4, a1, 16
400e76fa:	b02240        	addx8	a2, a2, a4
400e76fd:	02e8      	l32i.n	a14, a2, 0
400e76ff:	1248      	l32i.n	a4, a2, 4
400e7701:	00e306        	j	400e7a91 <_svfiprintf_r+0x1069>
400e7704:	10c162        	addi	a6, a1, 16
400e7707:	30a242        	movi	a4, 0x230
400e770a:	464a      	add.n	a4, a6, a4
400e770c:	34a2d2        	movi	a13, 0x234
400e770f:	40a2c2        	movi	a12, 0x240
400e7712:	0149      	s32i.n	a4, a1, 0
400e7714:	06ed      	mov.n	a14, a6
400e7716:	01d6f2        	addmi	a15, a6, 0x100
400e7719:	d6da      	add.n	a13, a6, a13
400e771b:	c6ca      	add.n	a12, a6, a12
400e771d:	07bd      	mov.n	a11, a7
400e771f:	02ad      	mov.n	a10, a2
400e7721:	fed7e5        	call8	400e64a0 <get_arg$isra$0>
400e7724:	0ae8      	l32i.n	a14, a10, 0
400e7726:	1a48      	l32i.n	a4, a10, 4
400e7728:	00d946        	j	400e7a91 <_svfiprintf_r+0x1069>
400e772b:	631b00        	minu	a1, a11, a0
400e772e:	08a387        	bge	a3, a8, 400e773a <_svfiprintf_r+0xd12>
400e7731:	10c182        	addi	a8, a1, 16
400e7734:	b02280        	addx8	a2, a2, a8
400e7737:	002006        	j	400e77bb <_svfiprintf_r+0xd93>
400e773a:	f21c      	movi.n	a2, 31
400e773c:	482287        	blt	a2, a8, 400e7788 <_svfiprintf_r+0xd60>
400e773f:	10c192        	addi	a9, a1, 16
400e7742:	281b      	addi.n	a2, a8, 1
400e7744:	02d932        	addmi	a3, a9, 0x200
400e7747:	916122        	s32i	a2, a1, 0x244
400e774a:	122322        	l32i	a2, a3, 72
400e774d:	427b      	addi.n	a4, a2, 7
400e774f:	827c      	movi.n	a2, -8
400e7751:	102420        	and	a2, a4, a2
400e7754:	728b      	addi.n	a7, a2, 8
400e7756:	126372        	s32i	a7, a3, 72
400e7759:	841c      	movi.n	a4, 24
400e775b:	052477        	blt	a4, a7, 400e7764 <_svfiprintf_r+0xd3c>
400e775e:	112332        	l32i	a3, a3, 68
400e7761:	000286        	j	400e776f <_svfiprintf_r+0xd47>
400e7764:	042427        	blt	a4, a2, 400e776c <_svfiprintf_r+0xd44>
400e7767:	822c      	movi.n	a2, 40
400e7769:	126322        	s32i	a2, a3, 72
400e776c:	942132        	l32i	a3, a1, 0x250
400e776f:	962122        	l32i	a2, a1, 0x258
400e7772:	10c1a2        	addi	a10, a1, 16
400e7775:	232a      	add.n	a2, a3, a2
400e7777:	f8c222        	addi	a2, a2, -8
400e777a:	02e8      	l32i.n	a14, a2, 0
400e777c:	1248      	l32i.n	a4, a2, 4
400e777e:	b028a0        	addx8	a2, a8, a10
400e7781:	02e9      	s32i.n	a14, a2, 0
400e7783:	1249      	s32i.n	a4, a2, 4
400e7785:	00c186        	j	400e7a8f <_svfiprintf_r+0x1067>
400e7788:	10c1b2        	addi	a11, a1, 16
400e778b:	02db22        	addmi	a2, a11, 0x200
400e778e:	122232        	l32i	a3, a2, 72
400e7791:	437b      	addi.n	a4, a3, 7
400e7793:	837c      	movi.n	a3, -8
400e7795:	103430        	and	a3, a4, a3
400e7798:	738b      	addi.n	a7, a3, 8
400e779a:	126272        	s32i	a7, a2, 72
400e779d:	841c      	movi.n	a4, 24
400e779f:	052477        	blt	a4, a7, 400e77a8 <_svfiprintf_r+0xd80>
400e77a2:	112232        	l32i	a3, a2, 68
400e77a5:	000286        	j	400e77b3 <_svfiprintf_r+0xd8b>
400e77a8:	042437        	blt	a4, a3, 400e77b0 <_svfiprintf_r+0xd88>
400e77ab:	832c      	movi.n	a3, 40
400e77ad:	126232        	s32i	a3, a2, 72
400e77b0:	942132        	l32i	a3, a1, 0x250
400e77b3:	962122        	l32i	a2, a1, 0x258
400e77b6:	232a      	add.n	a2, a3, a2
400e77b8:	f8c222        	addi	a2, a2, -8
400e77bb:	02e8      	l32i.n	a14, a2, 0
400e77bd:	1248      	l32i.n	a4, a2, 4
400e77bf:	00b306        	j	400e7a8f <_svfiprintf_r+0x1067>
400e77c2:	091c      	movi.n	a9, 16
400e77c4:	109590        	and	a9, a5, a9
400e77c7:	05d916        	beqz	a9, 400e7828 <_svfiprintf_r+0xe00>
400e77ca:	912142        	l32i	a4, a1, 0x244
400e77cd:	768c      	beqz.n	a6, 400e77d8 <_svfiprintf_r+0xdb0>
400e77cf:	022247        	blt	a2, a4, 400e77d5 <_svfiprintf_r+0xdad>
400e77d2:	008386        	j	400e79e4 <_svfiprintf_r+0xfbc>
400e77d5:	007f86        	j	400e79d7 <_svfiprintf_r+0xfaf>
400e77d8:	631b      	addi.n	a6, a3, 1
400e77da:	02a347        	bge	a3, a4, 400e77e0 <_svfiprintf_r+0xdb8>
400e77dd:	008c06        	j	400e7a11 <_svfiprintf_r+0xfe9>
400e77e0:	f21c      	movi.n	a2, 31
400e77e2:	02a247        	bge	a2, a4, 400e77e8 <_svfiprintf_r+0xdc0>
400e77e5:	009d06        	j	400e7a5d <_svfiprintf_r+0x1035>
400e77e8:	241b      	addi.n	a2, a4, 1
400e77ea:	10c192        	addi	a9, a1, 16
400e77ed:	916122        	s32i	a2, a1, 0x244
400e77f0:	02d922        	addmi	a2, a9, 0x200
400e77f3:	122232        	l32i	a3, a2, 72
400e77f6:	871c      	movi.n	a7, 24
400e77f8:	834b      	addi.n	a8, a3, 4
400e77fa:	126282        	s32i	a8, a2, 72
400e77fd:	072787        	blt	a7, a8, 400e7808 <_svfiprintf_r+0xde0>
400e7800:	112232        	l32i	a3, a2, 68
400e7803:	000306        	j	400e7813 <_svfiprintf_r+0xdeb>
400e7806:	370000        	lsi	f0, a0, 220
400e7809:	2c0427        	bnone	a4, a2, 400e7839 <_svfiprintf_r+0xe11>
400e780c:	623243        	lsi	f4, a2, 0x188
400e780f:	213212        	lsi	f1, a2, 132
400e7812:	212294        	lsi	f9, a2, 132
400e7815:	c1a296        	bltz	a2, 400e7433 <_svfiprintf_r+0xa0b>
400e7818:	232a10        	sext	a2, a10, 8
400e781b:	fcc222        	addi	a2, a2, -4
400e781e:	02e8      	l32i.n	a14, a2, 0
400e7820:	b024a0        	addx8	a2, a4, a10
400e7823:	02e9      	s32i.n	a14, a2, 0
400e7825:	009906        	j	400e7a8d <_svfiprintf_r+0x1065>
400e7828:	044c      	movi.n	a4, 64
400e782a:	104540        	and	a4, a5, a4
400e782d:	0cf416        	beqz	a4, 400e7900 <_svfiprintf_r+0xed8>
400e7830:	912142        	l32i	a4, a1, 0x244
400e7833:	d6bc      	beqz.n	a6, 400e7874 <_svfiprintf_r+0xe4c>
400e7835:	0ca247        	bge	a2, a4, 400e7845 <_svfiprintf_r+0xe1d>
400e7838:	10c142        	addi	a4, a1, 16
400e783b:	b02240        	addx8	a2, a2, a4
400e783e:	0012e2        	l16ui	a14, a2, 0
400e7841:	000a46        	j	400e786e <_svfiprintf_r+0xe46>
400e7844:	c16200        	mul16u	a6, a2, a0
400e7847:	a24210        	muluh	a4, a2, a1
400e784a:	464a30        	lsi	f3, a10, 0x118
400e784d:	34a2d2        	movi	a13, 0x234
400e7850:	40a2c2        	movi	a12, 0x240
400e7853:	06ed      	mov.n	a14, a6
400e7855:	0149      	s32i.n	a4, a1, 0
400e7857:	01d6f2        	addmi	a15, a6, 0x100
400e785a:	d6da      	add.n	a13, a6, a13
400e785c:	c6ca      	add.n	a12, a6, a12
400e785e:	07bd      	mov.n	a11, a7
400e7860:	02ad      	mov.n	a10, a2
400e7862:	a66192        	s32i	a9, a1, 0x298
400e7865:	fec3a5        	call8	400e64a0 <get_arg$isra$0>
400e7868:	001ae2        	l16ui	a14, a10, 0
400e786b:	a62192        	l32i	a9, a1, 0x298
400e786e:	094d      	mov.n	a4, a9
400e7870:	008746        	j	400e7a91 <_svfiprintf_r+0x1069>
400e7873:	731b00        	maxu	a1, a11, a0
400e7876:	0ba347        	bge	a3, a4, 400e7885 <_svfiprintf_r+0xe5d>
400e7879:	10c182        	addi	a8, a1, 16
400e787c:	b02280        	addx8	a2, a2, a8
400e787f:	0012e2        	l16ui	a14, a2, 0
400e7882:	003286        	j	400e7950 <_svfiprintf_r+0xf28>
400e7885:	f21c      	movi.n	a2, 31
400e7887:	412247        	blt	a2, a4, 400e78cc <_svfiprintf_r+0xea4>
400e788a:	241b      	addi.n	a2, a4, 1
400e788c:	10c192        	addi	a9, a1, 16
400e788f:	916122        	s32i	a2, a1, 0x244
400e7892:	02d922        	addmi	a2, a9, 0x200
400e7895:	122232        	l32i	a3, a2, 72
400e7898:	861c      	movi.n	a6, 24
400e789a:	834b      	addi.n	a8, a3, 4
400e789c:	126282        	s32i	a8, a2, 72
400e789f:	052687        	blt	a6, a8, 400e78a8 <_svfiprintf_r+0xe80>
400e78a2:	112232        	l32i	a3, a2, 68
400e78a5:	000286        	j	400e78b3 <_svfiprintf_r+0xe8b>
400e78a8:	042637        	blt	a6, a3, 400e78b0 <_svfiprintf_r+0xe88>
400e78ab:	432c      	movi.n	a3, 36
400e78ad:	126232        	s32i	a3, a2, 72
400e78b0:	942132        	l32i	a3, a1, 0x250
400e78b3:	962122        	l32i	a2, a1, 0x258
400e78b6:	10c1a2        	addi	a10, a1, 16
400e78b9:	232a      	add.n	a2, a3, a2
400e78bb:	fcc222        	addi	a2, a2, -4
400e78be:	02e8      	l32i.n	a14, a2, 0
400e78c0:	b044a0        	addx8	a4, a4, a10
400e78c3:	04e9      	s32i.n	a14, a4, 0
400e78c5:	f4e0e0        	extui	a14, a14, 0, 16
400e78c8:	003fc6        	j	400e79cb <_svfiprintf_r+0xfa3>
400e78cb:	c1b200        	mul16u	a11, a2, a0
400e78ce:	db2210        	movt.s	f2, f2, b1
400e78d1:	223202        	lsi	f0, a2, 136
400e78d4:	841c12        	l16ui	a1, a12, 0x108
400e78d7:	634b      	addi.n	a6, a3, 4
400e78d9:	126262        	s32i	a6, a2, 72
400e78dc:	052467        	blt	a4, a6, 400e78e5 <_svfiprintf_r+0xebd>
400e78df:	112232        	l32i	a3, a2, 68
400e78e2:	000286        	j	400e78f0 <_svfiprintf_r+0xec8>
400e78e5:	042437        	blt	a4, a3, 400e78ed <_svfiprintf_r+0xec5>
400e78e8:	432c      	movi.n	a3, 36
400e78ea:	126232        	s32i	a3, a2, 72
400e78ed:	942132        	l32i	a3, a1, 0x250
400e78f0:	962122        	l32i	a2, a1, 0x258
400e78f3:	232a      	add.n	a2, a3, a2
400e78f5:	fcc222        	addi	a2, a2, -4
400e78f8:	0012e2        	l16ui	a14, a2, 0
400e78fb:	003306        	j	400e79cb <_svfiprintf_r+0xfa3>
400e78fe:	820000        	mull	a0, a0, a0
400e7901:	979121        	l32r	a2, 400cd748 <_rtc_text_end+0xd748>
400e7904:	0602e5        	call8	400ed934 <_etext+0x1057>
400e7907:	bc0032        	l8ui	a3, a0, 188
400e790a:	a28756        	bnez	a7, 400e7336 <_svfiprintf_r+0x90e>
400e790d:	620d      	lsi	f0, a2, 8
400e790f:	6010c1        	l32r	a12, 400bf950 <_iram_end+0x31dfc>
400e7912:	e2b022        	l32ai	a2, a0, 0x388
400e7915:	860002        	l8ui	a0, a0, 134
400e7918:	005d      	mov.n	a5, a0
400e791a:	820000        	mull	a0, a0, a0
400e791d:	6210c1        	l32r	a12, 400c0160 <_rtc_text_end+0x160>
400e7920:	6a30a2        	lsi	f10, a0, 0x1a8
400e7923:	d268      	l32i.n	a6, a2, 52
400e7925:	c234a2        	lsi	f10, a4, 0x308
400e7928:	ed40a2        	s8i	a10, a0, 237
400e792b:	6908      	l32i.n	a0, a9, 24
400e792d:	d8f201        	l32r	a0, 400ddcf8 <_svfprintf_r+0x15d4>
400e7930:	d8da01        	l32r	a0, 400ddc98 <_svfprintf_r+0x1574>
400e7933:	c8ca      	add.n	a12, a8, a12
400e7935:	07bd      	mov.n	a11, a7
400e7937:	02ad      	mov.n	a10, a2
400e7939:	feb665        	call8	400e64a0 <get_arg$isra$0>
400e793c:	000ae2        	l8ui	a14, a10, 0
400e793f:	005386        	j	400e7a91 <_svfiprintf_r+0x1069>
400e7942:	731b      	addi.n	a7, a3, 1
400e7944:	0da387        	bge	a3, a8, 400e7955 <_svfiprintf_r+0xf2d>
400e7947:	10c192        	addi	a9, a1, 16
400e794a:	b02290        	addx8	a2, a2, a9
400e794d:	0002e2        	l8ui	a14, a2, 0
400e7950:	064d      	mov.n	a4, a6
400e7952:	001dc6        	j	400e79cd <_svfiprintf_r+0xfa5>
400e7955:	f21c      	movi.n	a2, 31
400e7957:	412287        	blt	a2, a8, 400e799c <_svfiprintf_r+0xf74>
400e795a:	281b      	addi.n	a2, a8, 1
400e795c:	10c1a2        	addi	a10, a1, 16
400e795f:	916122        	s32i	a2, a1, 0x244
400e7962:	02da22        	addmi	a2, a10, 0x200
400e7965:	122232        	l32i	a3, a2, 72
400e7968:	841c      	movi.n	a4, 24
400e796a:	634b      	addi.n	a6, a3, 4
400e796c:	126262        	s32i	a6, a2, 72
400e796f:	052467        	blt	a4, a6, 400e7978 <_svfiprintf_r+0xf50>
400e7972:	112232        	l32i	a3, a2, 68
400e7975:	000286        	j	400e7983 <_svfiprintf_r+0xf5b>
400e7978:	042437        	blt	a4, a3, 400e7980 <_svfiprintf_r+0xf58>
400e797b:	432c      	movi.n	a3, 36
400e797d:	126232        	s32i	a3, a2, 72
400e7980:	942132        	l32i	a3, a1, 0x250
400e7983:	962122        	l32i	a2, a1, 0x258
400e7986:	10c1b2        	addi	a11, a1, 16
400e7989:	232a      	add.n	a2, a3, a2
400e798b:	fcc222        	addi	a2, a2, -4
400e798e:	02e8      	l32i.n	a14, a2, 0
400e7990:	b088b0        	addx8	a8, a8, a11
400e7993:	08e9      	s32i.n	a14, a8, 0
400e7995:	74e0e0        	extui	a14, a14, 0, 8
400e7998:	000bc6        	j	400e79cb <_svfiprintf_r+0xfa3>
400e799b:	c13200        	mul16u	a3, a2, a0
400e799e:	d32210        	movt	a2, a2, b1
400e79a1:	223202        	lsi	f0, a2, 136
400e79a4:	841c12        	l16ui	a1, a12, 0x108
400e79a7:	634b      	addi.n	a6, a3, 4
400e79a9:	126262        	s32i	a6, a2, 72
400e79ac:	052467        	blt	a4, a6, 400e79b5 <_svfiprintf_r+0xf8d>
400e79af:	112232        	l32i	a3, a2, 68
400e79b2:	000286        	j	400e79c0 <_svfiprintf_r+0xf98>
400e79b5:	042437        	blt	a4, a3, 400e79bd <_svfiprintf_r+0xf95>
400e79b8:	432c      	movi.n	a3, 36
400e79ba:	126232        	s32i	a3, a2, 72
400e79bd:	942132        	l32i	a3, a1, 0x250
400e79c0:	962122        	l32i	a2, a1, 0x258
400e79c3:	232a      	add.n	a2, a3, a2
400e79c5:	fcc222        	addi	a2, a2, -4
400e79c8:	0002e2        	l8ui	a14, a2, 0
400e79cb:	040c      	movi.n	a4, 0
400e79cd:	073d      	mov.n	a3, a7
400e79cf:	002f86        	j	400e7a91 <_svfiprintf_r+0x1069>
400e79d2:	66bc      	beqz.n	a6, 400e7a0c <_svfiprintf_r+0xfe4>
400e79d4:	0ca287        	bge	a2, a8, 400e79e4 <_svfiprintf_r+0xfbc>
400e79d7:	10c142        	addi	a4, a1, 16
400e79da:	b02240        	addx8	a2, a2, a4
400e79dd:	02e8      	l32i.n	a14, a2, 0
400e79df:	0008c6        	j	400e7a06 <_svfiprintf_r+0xfde>
400e79e2:	620000        	lsi	f0, a0, 0x188
400e79e5:	4210c1        	l32r	a12, 400b8228 <_iram_end+0x2a6d4>
400e79e8:	4a30a2        	lsi	f10, a0, 0x128
400e79eb:	a2d246        	j	400d0538 <_flash_cache_start+0x520>
400e79ee:	a2c234        	lsi	f3, a2, 0x288
400e79f1:	06ed40        	lsi	f4, a13, 24
400e79f4:	0149      	s32i.n	a4, a1, 0
400e79f6:	01d6f2        	addmi	a15, a6, 0x100
400e79f9:	d6da      	add.n	a13, a6, a13
400e79fb:	c6ca      	add.n	a12, a6, a12
400e79fd:	07bd      	mov.n	a11, a7
400e79ff:	02ad      	mov.n	a10, a2
400e7a01:	fea9e5        	call8	400e64a0 <get_arg$isra$0>
400e7a04:	0ae8      	l32i.n	a14, a10, 0
400e7a06:	036d      	mov.n	a6, a3
400e7a08:	002046        	j	400e7a8d <_svfiprintf_r+0x1065>
400e7a0b:	631b00        	minu	a1, a11, a0
400e7a0e:	08a387        	bge	a3, a8, 400e7a1a <_svfiprintf_r+0xff2>
400e7a11:	10c182        	addi	a8, a1, 16
400e7a14:	b02280        	addx8	a2, a2, a8
400e7a17:	001c06        	j	400e7a8b <_svfiprintf_r+0x1063>
400e7a1a:	f21c      	movi.n	a2, 31
400e7a1c:	3d2287        	blt	a2, a8, 400e7a5d <_svfiprintf_r+0x1035>
400e7a1f:	281b      	addi.n	a2, a8, 1
400e7a21:	10c192        	addi	a9, a1, 16
400e7a24:	916122        	s32i	a2, a1, 0x244
400e7a27:	02d922        	addmi	a2, a9, 0x200
400e7a2a:	122232        	l32i	a3, a2, 72
400e7a2d:	841c      	movi.n	a4, 24
400e7a2f:	734b      	addi.n	a7, a3, 4
400e7a31:	126272        	s32i	a7, a2, 72
400e7a34:	052477        	blt	a4, a7, 400e7a3d <_svfiprintf_r+0x1015>
400e7a37:	112232        	l32i	a3, a2, 68
400e7a3a:	000286        	j	400e7a48 <_svfiprintf_r+0x1020>
400e7a3d:	042437        	blt	a4, a3, 400e7a45 <_svfiprintf_r+0x101d>
400e7a40:	432c      	movi.n	a3, 36
400e7a42:	126232        	s32i	a3, a2, 72
400e7a45:	942132        	l32i	a3, a1, 0x250
400e7a48:	962122        	l32i	a2, a1, 0x258
400e7a4b:	10c1a2        	addi	a10, a1, 16
400e7a4e:	232a      	add.n	a2, a3, a2
400e7a50:	fcc222        	addi	a2, a2, -4
400e7a53:	02e8      	l32i.n	a14, a2, 0
400e7a55:	b088a0        	addx8	a8, a8, a10
400e7a58:	08e9      	s32i.n	a14, a8, 0
400e7a5a:	000bc6        	j	400e7a8d <_svfiprintf_r+0x1065>
400e7a5d:	10c1b2        	addi	a11, a1, 16
400e7a60:	02db22        	addmi	a2, a11, 0x200
400e7a63:	122232        	l32i	a3, a2, 72
400e7a66:	841c      	movi.n	a4, 24
400e7a68:	734b      	addi.n	a7, a3, 4
400e7a6a:	126272        	s32i	a7, a2, 72
400e7a6d:	072477        	blt	a4, a7, 400e7a78 <_svfiprintf_r+0x1050>
400e7a70:	112232        	l32i	a3, a2, 68
400e7a73:	000306        	j	400e7a83 <_svfiprintf_r+0x105b>
400e7a76:	370000        	lsi	f0, a0, 220
400e7a79:	2c0424        	lsi	f2, a4, 176
400e7a7c:	623243        	lsi	f4, a2, 0x188
400e7a7f:	213212        	lsi	f1, a2, 132
400e7a82:	212294        	lsi	f9, a2, 132
400e7a85:	232a96        	bltz	a10, 400e7cbb <_svfiprintf_r+0x1293>
400e7a88:	fcc222        	addi	a2, a2, -4
400e7a8b:	02e8      	l32i.n	a14, a2, 0
400e7a8d:	040c      	movi.n	a4, 0
400e7a8f:	063d      	mov.n	a3, a6
400e7a91:	ffab22        	movi	a2, 0xfffffbff
400e7a94:	105520        	and	a5, a5, a2
400e7a97:	020c      	movi.n	a2, 0
400e7a99:	026d06        	j	400e8451 <_svfiprintf_r+0x1a29>
400e7a9c:	214200        	srai	a4, a0, 2
400e7a9f:	46bc91        	l32r	a9, 400b9590 <_iram_end+0x2ba3c>
400e7aa2:	0aa247        	bge	a2, a4, 400e7ab0 <_svfiprintf_r+0x1088>
400e7aa5:	10c142        	addi	a4, a1, 16
400e7aa8:	b02240        	addx8	a2, a2, a4
400e7aab:	02e8      	l32i.n	a14, a2, 0
400e7aad:	000846        	j	400e7ad2 <_svfiprintf_r+0x10aa>
400e7ab0:	10c162        	addi	a6, a1, 16
400e7ab3:	30a242        	movi	a4, 0x230
400e7ab6:	464a      	add.n	a4, a6, a4
400e7ab8:	34a2d2        	movi	a13, 0x234
400e7abb:	40a2c2        	movi	a12, 0x240
400e7abe:	06ed      	mov.n	a14, a6
400e7ac0:	0149      	s32i.n	a4, a1, 0
400e7ac2:	01d6f2        	addmi	a15, a6, 0x100
400e7ac5:	d6da      	add.n	a13, a6, a13
400e7ac7:	c6ca      	add.n	a12, a6, a12
400e7ac9:	07bd      	mov.n	a11, a7
400e7acb:	02ad      	mov.n	a10, a2
400e7acd:	fe9d25        	call8	400e64a0 <get_arg$isra$0>
400e7ad0:	0ae8      	l32i.n	a14, a10, 0
400e7ad2:	036d      	mov.n	a6, a3
400e7ad4:	001f86        	j	400e7b56 <_svfiprintf_r+0x112e>
400e7ad7:	c18200        	mul16u	a8, a2, a0
400e7ada:	631b10        	minu	a1, a11, a1
400e7add:	b02280        	addx8	a2, a2, a8
400e7ae0:	702347        	blt	a3, a4, 400e7b54 <_svfiprintf_r+0x112c>
400e7ae3:	f21c      	movi.n	a2, 31
400e7ae5:	3f2247        	blt	a2, a4, 400e7b28 <_svfiprintf_r+0x1100>
400e7ae8:	241b      	addi.n	a2, a4, 1
400e7aea:	10c192        	addi	a9, a1, 16
400e7aed:	916122        	s32i	a2, a1, 0x244
400e7af0:	02d922        	addmi	a2, a9, 0x200
400e7af3:	122232        	l32i	a3, a2, 72
400e7af6:	871c      	movi.n	a7, 24
400e7af8:	834b      	addi.n	a8, a3, 4
400e7afa:	126282        	s32i	a8, a2, 72
400e7afd:	072787        	blt	a7, a8, 400e7b08 <_svfiprintf_r+0x10e0>
400e7b00:	112232        	l32i	a3, a2, 68
400e7b03:	000306        	j	400e7b13 <_svfiprintf_r+0x10eb>
400e7b06:	370000        	lsi	f0, a0, 220
400e7b09:	2c0427        	bnone	a4, a2, 400e7b39 <_svfiprintf_r+0x1111>
400e7b0c:	623243        	lsi	f4, a2, 0x188
400e7b0f:	213212        	lsi	f1, a2, 132
400e7b12:	212294        	lsi	f9, a2, 132
400e7b15:	c1a296        	bltz	a2, 400e7733 <_svfiprintf_r+0xd0b>
400e7b18:	232a10        	sext	a2, a10, 8
400e7b1b:	fcc222        	addi	a2, a2, -4
400e7b1e:	02e8      	l32i.n	a14, a2, 0
400e7b20:	b024a0        	addx8	a2, a4, a10
400e7b23:	02e9      	s32i.n	a14, a2, 0
400e7b25:	000b46        	j	400e7b56 <_svfiprintf_r+0x112e>
400e7b28:	10c1b2        	addi	a11, a1, 16
400e7b2b:	02db22        	addmi	a2, a11, 0x200
400e7b2e:	122232        	l32i	a3, a2, 72
400e7b31:	841c      	movi.n	a4, 24
400e7b33:	734b      	addi.n	a7, a3, 4
400e7b35:	126272        	s32i	a7, a2, 72
400e7b38:	052477        	blt	a4, a7, 400e7b41 <_svfiprintf_r+0x1119>
400e7b3b:	112232        	l32i	a3, a2, 68
400e7b3e:	000286        	j	400e7b4c <_svfiprintf_r+0x1124>
400e7b41:	042437        	blt	a4, a3, 400e7b49 <_svfiprintf_r+0x1121>
400e7b44:	432c      	movi.n	a3, 36
400e7b46:	126232        	s32i	a3, a2, 72
400e7b49:	942132        	l32i	a3, a1, 0x250
400e7b4c:	962122        	l32i	a2, a1, 0x258
400e7b4f:	232a      	add.n	a2, a3, a2
400e7b51:	fcc222        	addi	a2, a2, -4
400e7b54:	02e8      	l32i.n	a14, a2, 0
400e7b56:	10c182        	addi	a8, a1, 16
400e7b59:	02d832        	addmi	a3, a8, 0x200
400e7b5c:	073c      	movi.n	a7, 48
400e7b5e:	a34891        	l32r	a9, 400d0880 <_flash_cache_start+0x868>
400e7b61:	384372        	s8i	a7, a3, 56
400e7b64:	220c      	movi.n	a2, 2
400e7b66:	78a072        	movi	a7, 120
400e7b69:	394372        	s8i	a7, a3, 57
400e7b6c:	040c      	movi.n	a4, 0
400e7b6e:	205520        	or	a5, a5, a2
400e7b71:	063d      	mov.n	a3, a6
400e7b73:	9f6192        	s32i	a9, a1, 0x27c
400e7b76:	0235c6        	j	400e8451 <_svfiprintf_r+0x1a29>
400e7b79:	912142        	l32i	a4, a1, 0x244
400e7b7c:	46bc      	beqz.n	a6, 400e7bb4 <_svfiprintf_r+0x118c>
400e7b7e:	0aa247        	bge	a2, a4, 400e7b8c <_svfiprintf_r+0x1164>
400e7b81:	10c1a2        	addi	a10, a1, 16
400e7b84:	b022a0        	addx8	a2, a2, a10
400e7b87:	0278      	l32i.n	a7, a2, 0
400e7b89:	000846        	j	400e7bae <_svfiprintf_r+0x1186>
400e7b8c:	10c1b2        	addi	a11, a1, 16
400e7b8f:	30a242        	movi	a4, 0x230
400e7b92:	4b4a      	add.n	a4, a11, a4
400e7b94:	34a2d2        	movi	a13, 0x234
400e7b97:	40a2c2        	movi	a12, 0x240
400e7b9a:	01dbf2        	addmi	a15, a11, 0x100
400e7b9d:	0bed      	mov.n	a14, a11
400e7b9f:	dbda      	add.n	a13, a11, a13
400e7ba1:	cbca      	add.n	a12, a11, a12
400e7ba3:	0149      	s32i.n	a4, a1, 0
400e7ba5:	07bd      	mov.n	a11, a7
400e7ba7:	02ad      	mov.n	a10, a2
400e7ba9:	fe8f65        	call8	400e64a0 <get_arg$isra$0>
400e7bac:	0a78      	l32i.n	a7, a10, 0
400e7bae:	986132        	s32i	a3, a1, 0x260
400e7bb1:	002086        	j	400e7c37 <_svfiprintf_r+0x120f>
400e7bb4:	631b      	addi.n	a6, a3, 1
400e7bb6:	10c182        	addi	a8, a1, 16
400e7bb9:	986162        	s32i	a6, a1, 0x260
400e7bbc:	b02280        	addx8	a2, a2, a8
400e7bbf:	722347        	blt	a3, a4, 400e7c35 <_svfiprintf_r+0x120d>
400e7bc2:	f21c      	movi.n	a2, 31
400e7bc4:	3d2247        	blt	a2, a4, 400e7c05 <_svfiprintf_r+0x11dd>
400e7bc7:	241b      	addi.n	a2, a4, 1
400e7bc9:	10c192        	addi	a9, a1, 16
400e7bcc:	916122        	s32i	a2, a1, 0x244
400e7bcf:	02d922        	addmi	a2, a9, 0x200
400e7bd2:	122232        	l32i	a3, a2, 72
400e7bd5:	861c      	movi.n	a6, 24
400e7bd7:	834b      	addi.n	a8, a3, 4
400e7bd9:	126282        	s32i	a8, a2, 72
400e7bdc:	052687        	blt	a6, a8, 400e7be5 <_svfiprintf_r+0x11bd>
400e7bdf:	112232        	l32i	a3, a2, 68
400e7be2:	000286        	j	400e7bf0 <_svfiprintf_r+0x11c8>
400e7be5:	042637        	blt	a6, a3, 400e7bed <_svfiprintf_r+0x11c5>
400e7be8:	432c      	movi.n	a3, 36
400e7bea:	126232        	s32i	a3, a2, 72
400e7bed:	942132        	l32i	a3, a1, 0x250
400e7bf0:	962122        	l32i	a2, a1, 0x258
400e7bf3:	10c1a2        	addi	a10, a1, 16
400e7bf6:	232a      	add.n	a2, a3, a2
400e7bf8:	fcc222        	addi	a2, a2, -4
400e7bfb:	0278      	l32i.n	a7, a2, 0
400e7bfd:	b044a0        	addx8	a4, a4, a10
400e7c00:	0479      	s32i.n	a7, a4, 0
400e7c02:	000c46        	j	400e7c37 <_svfiprintf_r+0x120f>
400e7c05:	10c1b2        	addi	a11, a1, 16
400e7c08:	02db22        	addmi	a2, a11, 0x200
400e7c0b:	122232        	l32i	a3, a2, 72
400e7c0e:	841c      	movi.n	a4, 24
400e7c10:	634b      	addi.n	a6, a3, 4
400e7c12:	126262        	s32i	a6, a2, 72
400e7c15:	082467        	blt	a4, a6, 400e7c21 <_svfiprintf_r+0x11f9>
400e7c18:	112232        	l32i	a3, a2, 68
400e7c1b:	000346        	j	400e7c2c <_svfiprintf_r+0x1204>
400e7c1e:	000000        	ill
400e7c21:	042437        	blt	a4, a3, 400e7c29 <_svfiprintf_r+0x1201>
400e7c24:	432c      	movi.n	a3, 36
400e7c26:	126232        	s32i	a3, a2, 72
400e7c29:	942132        	l32i	a3, a1, 0x250
400e7c2c:	962122        	l32i	a2, a1, 0x258
400e7c2f:	802320        	add	a2, a3, a2
400e7c32:	fcc222        	addi	a2, a2, -4
400e7c35:	0278      	l32i.n	a7, a2, 0
400e7c37:	10c142        	addi	a4, a1, 16
400e7c3a:	030c      	movi.n	a3, 0
400e7c3c:	02d422        	addmi	a2, a4, 0x200
400e7c3f:	9a2162        	l32i	a6, a1, 0x268
400e7c42:	3a4232        	s8i	a3, a2, 58
400e7c45:	018696        	bltz	a6, 400e7c61 <_svfiprintf_r+0x1239>
400e7c48:	06cd      	mov.n	a12, a6
400e7c4a:	0b0c      	movi.n	a11, 0
400e7c4c:	07ad      	mov.n	a10, a7
400e7c4e:	a2d781        	l32r	a8, 400d07ac <_flash_cache_start+0x794>
400e7c51:	0008e0        	callx8	a8
400e7c54:	0a2d      	mov.n	a2, a10
400e7c56:	1acc      	bnez.n	a10, 400e7c5b <_svfiprintf_r+0x1233>
400e7c58:	026d06        	j	400e8610 <_svfiprintf_r+0x1be8>
400e7c5b:	c0aa70        	sub	a10, a10, a7
400e7c5e:	0001c6        	j	400e7c69 <_svfiprintf_r+0x1241>
400e7c61:	07ad      	mov.n	a10, a7
400e7c63:	a10981        	l32r	a8, 400d0088 <_flash_cache_start+0x70>
400e7c66:	0008e0        	callx8	a8
400e7c69:	9a61a2        	s32i	a10, a1, 0x268
400e7c6c:	020c      	movi.n	a2, 0
400e7c6e:	026786        	j	400e8610 <_svfiprintf_r+0x1be8>
400e7c71:	041c      	movi.n	a4, 16
400e7c73:	205540        	or	a5, a5, a4
400e7c76:	02e557        	bbsi	a5, 5, 400e7c7c <_svfiprintf_r+0x1254>
400e7c79:	0034c6        	j	400e7d50 <_svfiprintf_r+0x1328>
400e7c7c:	912182        	l32i	a8, a1, 0x244
400e7c7f:	56bc      	beqz.n	a6, 400e7cb8 <_svfiprintf_r+0x1290>
400e7c81:	0ca287        	bge	a2, a8, 400e7c91 <_svfiprintf_r+0x1269>
400e7c84:	10c182        	addi	a8, a1, 16
400e7c87:	b02280        	addx8	a2, a2, a8
400e7c8a:	02e8      	l32i.n	a14, a2, 0
400e7c8c:	1248      	l32i.n	a4, a2, 4
400e7c8e:	00ec06        	j	400e8042 <_svfiprintf_r+0x161a>
400e7c91:	10c192        	addi	a9, a1, 16
400e7c94:	30a242        	movi	a4, 0x230
400e7c97:	494a      	add.n	a4, a9, a4
400e7c99:	34a2d2        	movi	a13, 0x234
400e7c9c:	40a2c2        	movi	a12, 0x240
400e7c9f:	0149      	s32i.n	a4, a1, 0
400e7ca1:	09ed      	mov.n	a14, a9
400e7ca3:	01d9f2        	addmi	a15, a9, 0x100
400e7ca6:	d9da      	add.n	a13, a9, a13
400e7ca8:	c9ca      	add.n	a12, a9, a12
400e7caa:	07bd      	mov.n	a11, a7
400e7cac:	02ad      	mov.n	a10, a2
400e7cae:	fe7f25        	call8	400e64a0 <get_arg$isra$0>
400e7cb1:	0ae8      	l32i.n	a14, a10, 0
400e7cb3:	1a48      	l32i.n	a4, a10, 4
400e7cb5:	00e246        	j	400e8042 <_svfiprintf_r+0x161a>
400e7cb8:	10c1a2        	addi	a10, a1, 16
400e7cbb:	631b      	addi.n	a6, a3, 1
400e7cbd:	b022a0        	addx8	a2, a2, a10
400e7cc0:	02a387        	bge	a3, a8, 400e7cc6 <_svfiprintf_r+0x129e>
400e7cc3:	002046        	j	400e7d48 <_svfiprintf_r+0x1320>
400e7cc6:	f21c      	movi.n	a2, 31
400e7cc8:	482287        	blt	a2, a8, 400e7d14 <_svfiprintf_r+0x12ec>
400e7ccb:	10c1b2        	addi	a11, a1, 16
400e7cce:	281b      	addi.n	a2, a8, 1
400e7cd0:	02db32        	addmi	a3, a11, 0x200
400e7cd3:	916122        	s32i	a2, a1, 0x244
400e7cd6:	122322        	l32i	a2, a3, 72
400e7cd9:	427b      	addi.n	a4, a2, 7
400e7cdb:	827c      	movi.n	a2, -8
400e7cdd:	102420        	and	a2, a4, a2
400e7ce0:	728b      	addi.n	a7, a2, 8
400e7ce2:	126372        	s32i	a7, a3, 72
400e7ce5:	841c      	movi.n	a4, 24
400e7ce7:	052477        	blt	a4, a7, 400e7cf0 <_svfiprintf_r+0x12c8>
400e7cea:	112332        	l32i	a3, a3, 68
400e7ced:	000286        	j	400e7cfb <_svfiprintf_r+0x12d3>
400e7cf0:	042427        	blt	a4, a2, 400e7cf8 <_svfiprintf_r+0x12d0>
400e7cf3:	822c      	movi.n	a2, 40
400e7cf5:	126322        	s32i	a2, a3, 72
400e7cf8:	942132        	l32i	a3, a1, 0x250
400e7cfb:	962122        	l32i	a2, a1, 0x258
400e7cfe:	232a      	add.n	a2, a3, a2
400e7d00:	f8c222        	addi	a2, a2, -8
400e7d03:	02e8      	l32i.n	a14, a2, 0
400e7d05:	1248      	l32i.n	a4, a2, 4
400e7d07:	10c132        	addi	a3, a1, 16
400e7d0a:	b02830        	addx8	a2, a8, a3
400e7d0d:	02e9      	s32i.n	a14, a2, 0
400e7d0f:	1249      	s32i.n	a4, a2, 4
400e7d11:	00cac6        	j	400e8040 <_svfiprintf_r+0x1618>
400e7d14:	10c142        	addi	a4, a1, 16
400e7d17:	02d422        	addmi	a2, a4, 0x200
400e7d1a:	122232        	l32i	a3, a2, 72
400e7d1d:	437b      	addi.n	a4, a3, 7
400e7d1f:	837c      	movi.n	a3, -8
400e7d21:	103430        	and	a3, a4, a3
400e7d24:	738b      	addi.n	a7, a3, 8
400e7d26:	126272        	s32i	a7, a2, 72
400e7d29:	841c      	movi.n	a4, 24
400e7d2b:	062477        	blt	a4, a7, 400e7d35 <_svfiprintf_r+0x130d>
400e7d2e:	112232        	l32i	a3, a2, 68
400e7d31:	0002c6        	j	400e7d40 <_svfiprintf_r+0x1318>
400e7d34:	243700        	extui	a3, a0, 7, 3
400e7d37:	832c04        	lsi	f0, a12, 0x20c
400e7d3a:	126232        	s32i	a3, a2, 72
400e7d3d:	942132        	l32i	a3, a1, 0x250
400e7d40:	962122        	l32i	a2, a1, 0x258
400e7d43:	232a      	add.n	a2, a3, a2
400e7d45:	f8c222        	addi	a2, a2, -8
400e7d48:	02e8      	l32i.n	a14, a2, 0
400e7d4a:	1248      	l32i.n	a4, a2, 4
400e7d4c:	00bc06        	j	400e8040 <_svfiprintf_r+0x1618>
400e7d4f:	041c00        	extui	a1, a0, 12, 1
400e7d52:	109540        	and	a9, a5, a4
400e7d55:	07d916        	beqz	a9, 400e7dd6 <_svfiprintf_r+0x13ae>
400e7d58:	912142        	l32i	a4, a1, 0x244
400e7d5b:	d69c      	beqz.n	a6, 400e7d7c <_svfiprintf_r+0x1354>
400e7d5d:	08a247        	bge	a2, a4, 400e7d69 <_svfiprintf_r+0x1341>
400e7d60:	10c162        	addi	a6, a1, 16
400e7d63:	b02260        	addx8	a2, a2, a6
400e7d66:	0088c6        	j	400e7f8d <_svfiprintf_r+0x1565>
400e7d69:	10c182        	addi	a8, a1, 16
400e7d6c:	30a242        	movi	a4, 0x230
400e7d6f:	484a      	add.n	a4, a8, a4
400e7d71:	0149      	s32i.n	a4, a1, 0
400e7d73:	01d8f2        	addmi	a15, a8, 0x100
400e7d76:	08ed      	mov.n	a14, a8
400e7d78:	0089c6        	j	400e7fa3 <_svfiprintf_r+0x157b>
400e7d7b:	c19200        	mul16u	a9, a2, a0
400e7d7e:	631b10        	minu	a1, a11, a1
400e7d81:	b02290        	addx8	a2, a2, a9
400e7d84:	02a347        	bge	a3, a4, 400e7d8a <_svfiprintf_r+0x1362>
400e7d87:	00ac46        	j	400e803c <_svfiprintf_r+0x1614>
400e7d8a:	f21c      	movi.n	a2, 31
400e7d8c:	3d2247        	blt	a2, a4, 400e7dcd <_svfiprintf_r+0x13a5>
400e7d8f:	241b      	addi.n	a2, a4, 1
400e7d91:	10c1a2        	addi	a10, a1, 16
400e7d94:	916122        	s32i	a2, a1, 0x244
400e7d97:	02da22        	addmi	a2, a10, 0x200
400e7d9a:	122232        	l32i	a3, a2, 72
400e7d9d:	871c      	movi.n	a7, 24
400e7d9f:	834b      	addi.n	a8, a3, 4
400e7da1:	126282        	s32i	a8, a2, 72
400e7da4:	052787        	blt	a7, a8, 400e7dad <_svfiprintf_r+0x1385>
400e7da7:	112232        	l32i	a3, a2, 68
400e7daa:	000286        	j	400e7db8 <_svfiprintf_r+0x1390>
400e7dad:	042737        	blt	a7, a3, 400e7db5 <_svfiprintf_r+0x138d>
400e7db0:	432c      	movi.n	a3, 36
400e7db2:	126232        	s32i	a3, a2, 72
400e7db5:	942132        	l32i	a3, a1, 0x250
400e7db8:	962122        	l32i	a2, a1, 0x258
400e7dbb:	10c1b2        	addi	a11, a1, 16
400e7dbe:	232a      	add.n	a2, a3, a2
400e7dc0:	fcc222        	addi	a2, a2, -4
400e7dc3:	02e8      	l32i.n	a14, a2, 0
400e7dc5:	b024b0        	addx8	a2, a4, a11
400e7dc8:	02e9      	s32i.n	a14, a2, 0
400e7dca:	009c06        	j	400e803e <_svfiprintf_r+0x1616>
400e7dcd:	10c132        	addi	a3, a1, 16
400e7dd0:	02d322        	addmi	a2, a3, 0x200
400e7dd3:	008f06        	j	400e8013 <_svfiprintf_r+0x15eb>
400e7dd6:	044c      	movi.n	a4, 64
400e7dd8:	104540        	and	a4, a5, a4
400e7ddb:	0d1416        	beqz	a4, 400e7eb0 <_svfiprintf_r+0x1488>
400e7dde:	912142        	l32i	a4, a1, 0x244
400e7de1:	e6bc      	beqz.n	a6, 400e7e23 <_svfiprintf_r+0x13fb>
400e7de3:	0ea247        	bge	a2, a4, 400e7df5 <_svfiprintf_r+0x13cd>
400e7de6:	10c142        	addi	a4, a1, 16
400e7de9:	b02240        	addx8	a2, a2, a4
400e7dec:	0012e2        	l16ui	a14, a2, 0
400e7def:	000ac6        	j	400e7e1e <_svfiprintf_r+0x13f6>
400e7df2:	000000        	ill
400e7df5:	10c162        	addi	a6, a1, 16
400e7df8:	30a242        	movi	a4, 0x230
400e7dfb:	464a      	add.n	a4, a6, a4
400e7dfd:	34a2d2        	movi	a13, 0x234
400e7e00:	40a2c2        	movi	a12, 0x240
400e7e03:	06ed      	mov.n	a14, a6
400e7e05:	0149      	s32i.n	a4, a1, 0
400e7e07:	01d6f2        	addmi	a15, a6, 0x100
400e7e0a:	d6da      	add.n	a13, a6, a13
400e7e0c:	c6ca      	add.n	a12, a6, a12
400e7e0e:	07bd      	mov.n	a11, a7
400e7e10:	02ad      	mov.n	a10, a2
400e7e12:	a66192        	s32i	a9, a1, 0x298
400e7e15:	fe68a5        	call8	400e64a0 <get_arg$isra$0>
400e7e18:	001ae2        	l16ui	a14, a10, 0
400e7e1b:	a62192        	l32i	a9, a1, 0x298
400e7e1e:	094d      	mov.n	a4, a9
400e7e20:	008786        	j	400e8042 <_svfiprintf_r+0x161a>
400e7e23:	731b      	addi.n	a7, a3, 1
400e7e25:	0ba347        	bge	a3, a4, 400e7e34 <_svfiprintf_r+0x140c>
400e7e28:	10c182        	addi	a8, a1, 16
400e7e2b:	b02280        	addx8	a2, a2, a8
400e7e2e:	0012e2        	l16ui	a14, a2, 0
400e7e31:	0032c6        	j	400e7f00 <_svfiprintf_r+0x14d8>
400e7e34:	f21c      	movi.n	a2, 31
400e7e36:	422247        	blt	a2, a4, 400e7e7c <_svfiprintf_r+0x1454>
400e7e39:	241b      	addi.n	a2, a4, 1
400e7e3b:	10c192        	addi	a9, a1, 16
400e7e3e:	916122        	s32i	a2, a1, 0x244
400e7e41:	02d922        	addmi	a2, a9, 0x200
400e7e44:	122232        	l32i	a3, a2, 72
400e7e47:	861c      	movi.n	a6, 24
400e7e49:	834b      	addi.n	a8, a3, 4
400e7e4b:	126282        	s32i	a8, a2, 72
400e7e4e:	062687        	blt	a6, a8, 400e7e58 <_svfiprintf_r+0x1430>
400e7e51:	112232        	l32i	a3, a2, 68
400e7e54:	0002c6        	j	400e7e63 <_svfiprintf_r+0x143b>
400e7e57:	263700        	lsi	f0, a7, 152
400e7e5a:	432c04        	lsi	f0, a12, 0x10c
400e7e5d:	126232        	s32i	a3, a2, 72
400e7e60:	942132        	l32i	a3, a1, 0x250
400e7e63:	962122        	l32i	a2, a1, 0x258
400e7e66:	10c1a2        	addi	a10, a1, 16
400e7e69:	232a      	add.n	a2, a3, a2
400e7e6b:	fcc222        	addi	a2, a2, -4
400e7e6e:	02e8      	l32i.n	a14, a2, 0
400e7e70:	b044a0        	addx8	a4, a4, a10
400e7e73:	04e9      	s32i.n	a14, a4, 0
400e7e75:	f4e0e0        	extui	a14, a14, 0, 16
400e7e78:	003fc6        	j	400e7f7b <_svfiprintf_r+0x1553>
400e7e7b:	c1b200        	mul16u	a11, a2, a0
400e7e7e:	db2210        	movt.s	f2, f2, b1
400e7e81:	223202        	lsi	f0, a2, 136
400e7e84:	841c12        	l16ui	a1, a12, 0x108
400e7e87:	634b      	addi.n	a6, a3, 4
400e7e89:	126262        	s32i	a6, a2, 72
400e7e8c:	052467        	blt	a4, a6, 400e7e95 <_svfiprintf_r+0x146d>
400e7e8f:	112232        	l32i	a3, a2, 68
400e7e92:	000286        	j	400e7ea0 <_svfiprintf_r+0x1478>
400e7e95:	042437        	blt	a4, a3, 400e7e9d <_svfiprintf_r+0x1475>
400e7e98:	432c      	movi.n	a3, 36
400e7e9a:	126232        	s32i	a3, a2, 72
400e7e9d:	942132        	l32i	a3, a1, 0x250
400e7ea0:	962122        	l32i	a2, a1, 0x258
400e7ea3:	232a      	add.n	a2, a3, a2
400e7ea5:	fcc222        	addi	a2, a2, -4
400e7ea8:	0012e2        	l16ui	a14, a2, 0
400e7eab:	003306        	j	400e7f7b <_svfiprintf_r+0x1553>
400e7eae:	820000        	mull	a0, a0, a0
400e7eb1:	979121        	l32r	a2, 400cdcf8 <_rtc_text_end+0xdcf8>
400e7eb4:	0602e5        	call8	400edee4 <_etext+0x1607>
400e7eb7:	bc0032        	l8ui	a3, a0, 188
400e7eba:	a28756        	bnez	a7, 400e78e6 <_svfiprintf_r+0xebe>
400e7ebd:	620d      	lsi	f0, a2, 8
400e7ebf:	6010c1        	l32r	a12, 400bff00 <_iram_end+0x323ac>
400e7ec2:	e2b022        	l32ai	a2, a0, 0x388
400e7ec5:	c60002        	l8ui	a0, a0, 198
400e7ec8:	005d      	mov.n	a5, a0
400e7eca:	820000        	mull	a0, a0, a0
400e7ecd:	6210c1        	l32r	a12, 400c0710 <_rtc_text_end+0x710>
400e7ed0:	6a30a2        	lsi	f10, a0, 0x1a8
400e7ed3:	d268      	l32i.n	a6, a2, 52
400e7ed5:	c234a2        	lsi	f10, a4, 0x308
400e7ed8:	ed40a2        	s8i	a10, a0, 237
400e7edb:	6908      	l32i.n	a0, a9, 24
400e7edd:	d8f201        	l32r	a0, 400de2a8 <_svfprintf_r+0x1b84>
400e7ee0:	d8da01        	l32r	a0, 400de248 <_svfprintf_r+0x1b24>
400e7ee3:	c8ca      	add.n	a12, a8, a12
400e7ee5:	07bd      	mov.n	a11, a7
400e7ee7:	02ad      	mov.n	a10, a2
400e7ee9:	fe5b65        	call8	400e64a0 <get_arg$isra$0>
400e7eec:	000ae2        	l8ui	a14, a10, 0
400e7eef:	0053c6        	j	400e8042 <_svfiprintf_r+0x161a>
400e7ef2:	731b      	addi.n	a7, a3, 1
400e7ef4:	0da387        	bge	a3, a8, 400e7f05 <_svfiprintf_r+0x14dd>
400e7ef7:	10c192        	addi	a9, a1, 16
400e7efa:	b02290        	addx8	a2, a2, a9
400e7efd:	0002e2        	l8ui	a14, a2, 0
400e7f00:	064d      	mov.n	a4, a6
400e7f02:	001dc6        	j	400e7f7d <_svfiprintf_r+0x1555>
400e7f05:	f21c      	movi.n	a2, 31
400e7f07:	412287        	blt	a2, a8, 400e7f4c <_svfiprintf_r+0x1524>
400e7f0a:	281b      	addi.n	a2, a8, 1
400e7f0c:	10c1a2        	addi	a10, a1, 16
400e7f0f:	916122        	s32i	a2, a1, 0x244
400e7f12:	02da22        	addmi	a2, a10, 0x200
400e7f15:	122232        	l32i	a3, a2, 72
400e7f18:	841c      	movi.n	a4, 24
400e7f1a:	634b      	addi.n	a6, a3, 4
400e7f1c:	126262        	s32i	a6, a2, 72
400e7f1f:	052467        	blt	a4, a6, 400e7f28 <_svfiprintf_r+0x1500>
400e7f22:	112232        	l32i	a3, a2, 68
400e7f25:	000286        	j	400e7f33 <_svfiprintf_r+0x150b>
400e7f28:	042437        	blt	a4, a3, 400e7f30 <_svfiprintf_r+0x1508>
400e7f2b:	432c      	movi.n	a3, 36
400e7f2d:	126232        	s32i	a3, a2, 72
400e7f30:	942132        	l32i	a3, a1, 0x250
400e7f33:	962122        	l32i	a2, a1, 0x258
400e7f36:	10c1b2        	addi	a11, a1, 16
400e7f39:	232a      	add.n	a2, a3, a2
400e7f3b:	fcc222        	addi	a2, a2, -4
400e7f3e:	02e8      	l32i.n	a14, a2, 0
400e7f40:	b088b0        	addx8	a8, a8, a11
400e7f43:	08e9      	s32i.n	a14, a8, 0
400e7f45:	74e0e0        	extui	a14, a14, 0, 8
400e7f48:	000bc6        	j	400e7f7b <_svfiprintf_r+0x1553>
400e7f4b:	c13200        	mul16u	a3, a2, a0
400e7f4e:	d32210        	movt	a2, a2, b1
400e7f51:	223202        	lsi	f0, a2, 136
400e7f54:	841c12        	l16ui	a1, a12, 0x108
400e7f57:	634b      	addi.n	a6, a3, 4
400e7f59:	126262        	s32i	a6, a2, 72
400e7f5c:	052467        	blt	a4, a6, 400e7f65 <_svfiprintf_r+0x153d>
400e7f5f:	112232        	l32i	a3, a2, 68
400e7f62:	000286        	j	400e7f70 <_svfiprintf_r+0x1548>
400e7f65:	042437        	blt	a4, a3, 400e7f6d <_svfiprintf_r+0x1545>
400e7f68:	432c      	movi.n	a3, 36
400e7f6a:	126232        	s32i	a3, a2, 72
400e7f6d:	942132        	l32i	a3, a1, 0x250
400e7f70:	962122        	l32i	a2, a1, 0x258
400e7f73:	232a      	add.n	a2, a3, a2
400e7f75:	fcc222        	addi	a2, a2, -4
400e7f78:	0002e2        	l8ui	a14, a2, 0
400e7f7b:	040c      	movi.n	a4, 0
400e7f7d:	073d      	mov.n	a3, a7
400e7f7f:	002fc6        	j	400e8042 <_svfiprintf_r+0x161a>
400e7f82:	66bc      	beqz.n	a6, 400e7fbc <_svfiprintf_r+0x1594>
400e7f84:	0ca287        	bge	a2, a8, 400e7f94 <_svfiprintf_r+0x156c>
400e7f87:	10c142        	addi	a4, a1, 16
400e7f8a:	b02240        	addx8	a2, a2, a4
400e7f8d:	02e8      	l32i.n	a14, a2, 0
400e7f8f:	0008c6        	j	400e7fb6 <_svfiprintf_r+0x158e>
400e7f92:	620000        	lsi	f0, a0, 0x188
400e7f95:	4210c1        	l32r	a12, 400b87d8 <_iram_end+0x2ac84>
400e7f98:	4a30a2        	lsi	f10, a0, 0x128
400e7f9b:	014946        	j	400e84c4 <_svfiprintf_r+0x1a9c>
400e7f9e:	01d6f2        	addmi	a15, a6, 0x100
400e7fa1:	06ed      	mov.n	a14, a6
400e7fa3:	34a2d2        	movi	a13, 0x234
400e7fa6:	40a2c2        	movi	a12, 0x240
400e7fa9:	deda      	add.n	a13, a14, a13
400e7fab:	ceca      	add.n	a12, a14, a12
400e7fad:	07bd      	mov.n	a11, a7
400e7faf:	02ad      	mov.n	a10, a2
400e7fb1:	fe4ee5        	call8	400e64a0 <get_arg$isra$0>
400e7fb4:	0ae8      	l32i.n	a14, a10, 0
400e7fb6:	036d      	mov.n	a6, a3
400e7fb8:	002086        	j	400e803e <_svfiprintf_r+0x1616>
400e7fbb:	631b00        	minu	a1, a11, a0
400e7fbe:	08a387        	bge	a3, a8, 400e7fca <_svfiprintf_r+0x15a2>
400e7fc1:	10c182        	addi	a8, a1, 16
400e7fc4:	b02280        	addx8	a2, a2, a8
400e7fc7:	001c46        	j	400e803c <_svfiprintf_r+0x1614>
400e7fca:	f21c      	movi.n	a2, 31
400e7fcc:	3d2287        	blt	a2, a8, 400e800d <_svfiprintf_r+0x15e5>
400e7fcf:	281b      	addi.n	a2, a8, 1
400e7fd1:	10c192        	addi	a9, a1, 16
400e7fd4:	916122        	s32i	a2, a1, 0x244
400e7fd7:	02d922        	addmi	a2, a9, 0x200
400e7fda:	122232        	l32i	a3, a2, 72
400e7fdd:	841c      	movi.n	a4, 24
400e7fdf:	734b      	addi.n	a7, a3, 4
400e7fe1:	126272        	s32i	a7, a2, 72
400e7fe4:	052477        	blt	a4, a7, 400e7fed <_svfiprintf_r+0x15c5>
400e7fe7:	112232        	l32i	a3, a2, 68
400e7fea:	000286        	j	400e7ff8 <_svfiprintf_r+0x15d0>
400e7fed:	042437        	blt	a4, a3, 400e7ff5 <_svfiprintf_r+0x15cd>
400e7ff0:	432c      	movi.n	a3, 36
400e7ff2:	126232        	s32i	a3, a2, 72
400e7ff5:	942132        	l32i	a3, a1, 0x250
400e7ff8:	962122        	l32i	a2, a1, 0x258
400e7ffb:	10c1a2        	addi	a10, a1, 16
400e7ffe:	232a      	add.n	a2, a3, a2
400e8000:	fcc222        	addi	a2, a2, -4
400e8003:	02e8      	l32i.n	a14, a2, 0
400e8005:	b088a0        	addx8	a8, a8, a10
400e8008:	08e9      	s32i.n	a14, a8, 0
400e800a:	000c06        	j	400e803e <_svfiprintf_r+0x1616>
400e800d:	10c1b2        	addi	a11, a1, 16
400e8010:	02db22        	addmi	a2, a11, 0x200
400e8013:	122232        	l32i	a3, a2, 72
400e8016:	841c      	movi.n	a4, 24
400e8018:	734b      	addi.n	a7, a3, 4
400e801a:	126272        	s32i	a7, a2, 72
400e801d:	082477        	blt	a4, a7, 400e8029 <_svfiprintf_r+0x1601>
400e8020:	112232        	l32i	a3, a2, 68
400e8023:	000346        	j	400e8034 <_svfiprintf_r+0x160c>
400e8026:	000000        	ill
400e8029:	042437        	blt	a4, a3, 400e8031 <_svfiprintf_r+0x1609>
400e802c:	432c      	movi.n	a3, 36
400e802e:	126232        	s32i	a3, a2, 72
400e8031:	942132        	l32i	a3, a1, 0x250
400e8034:	962122        	l32i	a2, a1, 0x258
400e8037:	232a      	add.n	a2, a3, a2
400e8039:	fcc222        	addi	a2, a2, -4
400e803c:	02e8      	l32i.n	a14, a2, 0
400e803e:	040c      	movi.n	a4, 0
400e8040:	063d      	mov.n	a3, a6
400e8042:	120c      	movi.n	a2, 1
400e8044:	010246        	j	400e8451 <_svfiprintf_r+0x1a29>
400e8047:	0e4100        	lsi	f0, a1, 56
400e804a:	6142a2        	s8i	a10, a2, 97
400e804d:	9f          	.byte 0x9f
400e804e:	02e557        	bbsi	a5, 5, 400e8054 <_svfiprintf_r+0x162c>
400e8051:	0035c6        	j	400e812c <_svfiprintf_r+0x1704>
400e8054:	912192        	l32i	a9, a1, 0x244
400e8057:	96bc      	beqz.n	a6, 400e8094 <_svfiprintf_r+0x166c>
400e8059:	0ca297        	bge	a2, a9, 400e8069 <_svfiprintf_r+0x1641>
400e805c:	10c162        	addi	a6, a1, 16
400e805f:	b02260        	addx8	a2, a2, a6
400e8062:	02e8      	l32i.n	a14, a2, 0
400e8064:	1248      	l32i.n	a4, a2, 4
400e8066:	00f106        	j	400e842e <_svfiprintf_r+0x1a06>
400e8069:	10c192        	addi	a9, a1, 16
400e806c:	30a242        	movi	a4, 0x230
400e806f:	494a      	add.n	a4, a9, a4
400e8071:	34a2d2        	movi	a13, 0x234
400e8074:	40a2c2        	movi	a12, 0x240
400e8077:	0149      	s32i.n	a4, a1, 0
400e8079:	09ed      	mov.n	a14, a9
400e807b:	01d9f2        	addmi	a15, a9, 0x100
400e807e:	d9da      	add.n	a13, a9, a13
400e8080:	c9ca      	add.n	a12, a9, a12
400e8082:	07bd      	mov.n	a11, a7
400e8084:	02ad      	mov.n	a10, a2
400e8086:	a46182        	s32i	a8, a1, 0x290
400e8089:	fe4165        	call8	400e64a0 <get_arg$isra$0>
400e808c:	0ae8      	l32i.n	a14, a10, 0
400e808e:	1a48      	l32i.n	a4, a10, 4
400e8090:	008fc6        	j	400e82d3 <_svfiprintf_r+0x18ab>
400e8093:	c1a200        	mul16u	a10, a2, a0
400e8096:	631b10        	minu	a1, a11, a1
400e8099:	b022a0        	addx8	a2, a2, a10
400e809c:	02a397        	bge	a3, a9, 400e80a2 <_svfiprintf_r+0x167a>
400e809f:	002046        	j	400e8124 <_svfiprintf_r+0x16fc>
400e80a2:	f21c      	movi.n	a2, 31
400e80a4:	482297        	blt	a2, a9, 400e80f0 <_svfiprintf_r+0x16c8>
400e80a7:	10c1b2        	addi	a11, a1, 16
400e80aa:	291b      	addi.n	a2, a9, 1
400e80ac:	02db32        	addmi	a3, a11, 0x200
400e80af:	916122        	s32i	a2, a1, 0x244
400e80b2:	122322        	l32i	a2, a3, 72
400e80b5:	427b      	addi.n	a4, a2, 7
400e80b7:	827c      	movi.n	a2, -8
400e80b9:	102420        	and	a2, a4, a2
400e80bc:	728b      	addi.n	a7, a2, 8
400e80be:	126372        	s32i	a7, a3, 72
400e80c1:	841c      	movi.n	a4, 24
400e80c3:	052477        	blt	a4, a7, 400e80cc <_svfiprintf_r+0x16a4>
400e80c6:	112332        	l32i	a3, a3, 68
400e80c9:	000286        	j	400e80d7 <_svfiprintf_r+0x16af>
400e80cc:	042427        	blt	a4, a2, 400e80d4 <_svfiprintf_r+0x16ac>
400e80cf:	822c      	movi.n	a2, 40
400e80d1:	126322        	s32i	a2, a3, 72
400e80d4:	942132        	l32i	a3, a1, 0x250
400e80d7:	962122        	l32i	a2, a1, 0x258
400e80da:	232a      	add.n	a2, a3, a2
400e80dc:	f8c222        	addi	a2, a2, -8
400e80df:	02e8      	l32i.n	a14, a2, 0
400e80e1:	1248      	l32i.n	a4, a2, 4
400e80e3:	10c132        	addi	a3, a1, 16
400e80e6:	b02930        	addx8	a2, a9, a3
400e80e9:	02e9      	s32i.n	a14, a2, 0
400e80eb:	1249      	s32i.n	a4, a2, 4
400e80ed:	00cec6        	j	400e842c <_svfiprintf_r+0x1a04>
400e80f0:	10c142        	addi	a4, a1, 16
400e80f3:	02d432        	addmi	a3, a4, 0x200
400e80f6:	122322        	l32i	a2, a3, 72
400e80f9:	427b      	addi.n	a4, a2, 7
400e80fb:	827c      	movi.n	a2, -8
400e80fd:	102420        	and	a2, a4, a2
400e8100:	728b      	addi.n	a7, a2, 8
400e8102:	126372        	s32i	a7, a3, 72
400e8105:	841c      	movi.n	a4, 24
400e8107:	062477        	blt	a4, a7, 400e8111 <_svfiprintf_r+0x16e9>
400e810a:	112332        	l32i	a3, a3, 68
400e810d:	0002c6        	j	400e811c <_svfiprintf_r+0x16f4>
400e8110:	242700        	extui	a2, a0, 7, 3
400e8113:	822c04        	lsi	f0, a12, 0x208
400e8116:	126322        	s32i	a2, a3, 72
400e8119:	942132        	l32i	a3, a1, 0x250
400e811c:	962122        	l32i	a2, a1, 0x258
400e811f:	232a      	add.n	a2, a3, a2
400e8121:	f8c222        	addi	a2, a2, -8
400e8124:	02e8      	l32i.n	a14, a2, 0
400e8126:	1248      	l32i.n	a4, a2, 4
400e8128:	00c006        	j	400e842c <_svfiprintf_r+0x1a04>
400e812b:	091c00        	l32e	a0, a12, -60
400e812e:	109590        	and	a9, a5, a9
400e8131:	07d916        	beqz	a9, 400e81b2 <_svfiprintf_r+0x178a>
400e8134:	912142        	l32i	a4, a1, 0x244
400e8137:	d69c      	beqz.n	a6, 400e8158 <_svfiprintf_r+0x1730>
400e8139:	08a247        	bge	a2, a4, 400e8145 <_svfiprintf_r+0x171d>
400e813c:	10c162        	addi	a6, a1, 16
400e813f:	b02260        	addx8	a2, a2, a6
400e8142:	008bc6        	j	400e8375 <_svfiprintf_r+0x194d>
400e8145:	10c192        	addi	a9, a1, 16
400e8148:	30a242        	movi	a4, 0x230
400e814b:	494a      	add.n	a4, a9, a4
400e814d:	0149      	s32i.n	a4, a1, 0
400e814f:	01d9f2        	addmi	a15, a9, 0x100
400e8152:	09ed      	mov.n	a14, a9
400e8154:	008d06        	j	400e838c <_svfiprintf_r+0x1964>
400e8157:	c1a200        	mul16u	a10, a2, a0
400e815a:	631b10        	minu	a1, a11, a1
400e815d:	b022a0        	addx8	a2, a2, a10
400e8160:	02a347        	bge	a3, a4, 400e8166 <_svfiprintf_r+0x173e>
400e8163:	00b046        	j	400e8428 <_svfiprintf_r+0x1a00>
400e8166:	f21c      	movi.n	a2, 31
400e8168:	3d2247        	blt	a2, a4, 400e81a9 <_svfiprintf_r+0x1781>
400e816b:	241b      	addi.n	a2, a4, 1
400e816d:	10c1b2        	addi	a11, a1, 16
400e8170:	916122        	s32i	a2, a1, 0x244
400e8173:	02db22        	addmi	a2, a11, 0x200
400e8176:	122232        	l32i	a3, a2, 72
400e8179:	871c      	movi.n	a7, 24
400e817b:	934b      	addi.n	a9, a3, 4
400e817d:	126292        	s32i	a9, a2, 72
400e8180:	052797        	blt	a7, a9, 400e8189 <_svfiprintf_r+0x1761>
400e8183:	112232        	l32i	a3, a2, 68
400e8186:	000286        	j	400e8194 <_svfiprintf_r+0x176c>
400e8189:	042737        	blt	a7, a3, 400e8191 <_svfiprintf_r+0x1769>
400e818c:	432c      	movi.n	a3, 36
400e818e:	126232        	s32i	a3, a2, 72
400e8191:	942132        	l32i	a3, a1, 0x250
400e8194:	962122        	l32i	a2, a1, 0x258
400e8197:	232a      	add.n	a2, a3, a2
400e8199:	fcc222        	addi	a2, a2, -4
400e819c:	02e8      	l32i.n	a14, a2, 0
400e819e:	10c132        	addi	a3, a1, 16
400e81a1:	b02430        	addx8	a2, a4, a3
400e81a4:	02e9      	s32i.n	a14, a2, 0
400e81a6:	00a006        	j	400e842a <_svfiprintf_r+0x1a02>
400e81a9:	10c142        	addi	a4, a1, 16
400e81ac:	02d422        	addmi	a2, a4, 0x200
400e81af:	0093c6        	j	400e8402 <_svfiprintf_r+0x19da>
400e81b2:	044c      	movi.n	a4, 64
400e81b4:	104540        	and	a4, a5, a4
400e81b7:	0d5416        	beqz	a4, 400e8290 <_svfiprintf_r+0x1868>
400e81ba:	912142        	l32i	a4, a1, 0x244
400e81bd:	043616        	beqz	a6, 400e8204 <_svfiprintf_r+0x17dc>
400e81c0:	0da247        	bge	a2, a4, 400e81d1 <_svfiprintf_r+0x17a9>
400e81c3:	10c162        	addi	a6, a1, 16
400e81c6:	b02260        	addx8	a2, a2, a6
400e81c9:	0012e2        	l16ui	a14, a2, 0
400e81cc:	094d      	mov.n	a4, a9
400e81ce:	009706        	j	400e842e <_svfiprintf_r+0x1a06>
400e81d1:	10c1a2        	addi	a10, a1, 16
400e81d4:	30a242        	movi	a4, 0x230
400e81d7:	4a4a      	add.n	a4, a10, a4
400e81d9:	34a2d2        	movi	a13, 0x234
400e81dc:	40a2c2        	movi	a12, 0x240
400e81df:	0aed      	mov.n	a14, a10
400e81e1:	0149      	s32i.n	a4, a1, 0
400e81e3:	01daf2        	addmi	a15, a10, 0x100
400e81e6:	dada      	add.n	a13, a10, a13
400e81e8:	caca      	add.n	a12, a10, a12
400e81ea:	07bd      	mov.n	a11, a7
400e81ec:	20a220        	or	a10, a2, a2
400e81ef:	a66192        	s32i	a9, a1, 0x298
400e81f2:	a46182        	s32i	a8, a1, 0x290
400e81f5:	fe2aa5        	call8	400e64a0 <get_arg$isra$0>
400e81f8:	a62192        	l32i	a9, a1, 0x298
400e81fb:	001ae2        	l16ui	a14, a10, 0
400e81fe:	094d      	mov.n	a4, a9
400e8200:	0033c6        	j	400e82d3 <_svfiprintf_r+0x18ab>
400e8203:	731b00        	maxu	a1, a11, a0
400e8206:	0ba347        	bge	a3, a4, 400e8215 <_svfiprintf_r+0x17ed>
400e8209:	10c1b2        	addi	a11, a1, 16
400e820c:	b022b0        	addx8	a2, a2, a11
400e820f:	0012e2        	l16ui	a14, a2, 0
400e8212:	003446        	j	400e82e7 <_svfiprintf_r+0x18bf>
400e8215:	f21c      	movi.n	a2, 31
400e8217:	412247        	blt	a2, a4, 400e825c <_svfiprintf_r+0x1834>
400e821a:	241b      	addi.n	a2, a4, 1
400e821c:	10c132        	addi	a3, a1, 16
400e821f:	916122        	s32i	a2, a1, 0x244
400e8222:	02d322        	addmi	a2, a3, 0x200
400e8225:	122232        	l32i	a3, a2, 72
400e8228:	861c      	movi.n	a6, 24
400e822a:	934b      	addi.n	a9, a3, 4
400e822c:	126292        	s32i	a9, a2, 72
400e822f:	052697        	blt	a6, a9, 400e8238 <_svfiprintf_r+0x1810>
400e8232:	112232        	l32i	a3, a2, 68
400e8235:	000286        	j	400e8243 <_svfiprintf_r+0x181b>
400e8238:	042637        	blt	a6, a3, 400e8240 <_svfiprintf_r+0x1818>
400e823b:	432c      	movi.n	a3, 36
400e823d:	126232        	s32i	a3, a2, 72
400e8240:	942132        	l32i	a3, a1, 0x250
400e8243:	962122        	l32i	a2, a1, 0x258
400e8246:	10c162        	addi	a6, a1, 16
400e8249:	232a      	add.n	a2, a3, a2
400e824b:	fcc222        	addi	a2, a2, -4
400e824e:	02e8      	l32i.n	a14, a2, 0
400e8250:	b04460        	addx8	a4, a4, a6
400e8253:	04e9      	s32i.n	a14, a4, 0
400e8255:	f4e0e0        	extui	a14, a14, 0, 16
400e8258:	0041c6        	j	400e8363 <_svfiprintf_r+0x193b>
400e825b:	c19200        	mul16u	a9, a2, a0
400e825e:	d92210        	lsi	f1, a2, 0x364
400e8261:	223202        	lsi	f0, a2, 136
400e8264:	841c12        	l16ui	a1, a12, 0x108
400e8267:	634b      	addi.n	a6, a3, 4
400e8269:	126262        	s32i	a6, a2, 72
400e826c:	052467        	blt	a4, a6, 400e8275 <_svfiprintf_r+0x184d>
400e826f:	112232        	l32i	a3, a2, 68
400e8272:	000286        	j	400e8280 <_svfiprintf_r+0x1858>
400e8275:	042437        	blt	a4, a3, 400e827d <_svfiprintf_r+0x1855>
400e8278:	432c      	movi.n	a3, 36
400e827a:	126232        	s32i	a3, a2, 72
400e827d:	942132        	l32i	a3, a1, 0x250
400e8280:	962122        	l32i	a2, a1, 0x258
400e8283:	232a      	add.n	a2, a3, a2
400e8285:	fcc222        	addi	a2, a2, -4
400e8288:	0012e2        	l16ui	a14, a2, 0
400e828b:	003506        	j	400e8363 <_svfiprintf_r+0x193b>
400e828e:	920000        	lsi	f0, a0, 0x248
400e8291:	979121        	l32r	a2, 400ce0d8 <_rtc_text_end+0xe0d8>
400e8294:	0602e5        	call8	400ee2c4 <_etext+0x19e7>
400e8297:	bc0034        	lsi	f3, a0, 0x2f0
400e829a:	a297c6        	j	400d0cfd <setup()+0x4d>
400e829d:	0e          	.byte 0xe
400e829e:	10c1a2        	addi	a10, a1, 16
400e82a1:	b022a0        	addx8	a2, a2, a10
400e82a4:	0002e2        	l8ui	a14, a2, 0
400e82a7:	0060c6        	j	400e842e <_svfiprintf_r+0x1a06>
400e82aa:	000000        	ill
400e82ad:	10c1b2        	addi	a11, a1, 16
400e82b0:	30a262        	movi	a6, 0x230
400e82b3:	6b6a      	add.n	a6, a11, a6
400e82b5:	34a2d2        	movi	a13, 0x234
400e82b8:	40a2c2        	movi	a12, 0x240
400e82bb:	0bed      	mov.n	a14, a11
400e82bd:	01dbf2        	addmi	a15, a11, 0x100
400e82c0:	dbda      	add.n	a13, a11, a13
400e82c2:	cbca      	add.n	a12, a11, a12
400e82c4:	0169      	s32i.n	a6, a1, 0
400e82c6:	07bd      	mov.n	a11, a7
400e82c8:	02ad      	mov.n	a10, a2
400e82ca:	a46182        	s32i	a8, a1, 0x290
400e82cd:	fe1d25        	call8	400e64a0 <get_arg$isra$0>
400e82d0:	000ae2        	l8ui	a14, a10, 0
400e82d3:	a42182        	l32i	a8, a1, 0x290
400e82d6:	005506        	j	400e842e <_svfiprintf_r+0x1a06>
400e82d9:	731b      	addi.n	a7, a3, 1
400e82db:	0da397        	bge	a3, a9, 400e82ec <_svfiprintf_r+0x18c4>
400e82de:	10c132        	addi	a3, a1, 16
400e82e1:	b02230        	addx8	a2, a2, a3
400e82e4:	0002e2        	l8ui	a14, a2, 0
400e82e7:	064d      	mov.n	a4, a6
400e82e9:	001e06        	j	400e8365 <_svfiprintf_r+0x193d>
400e82ec:	f21c      	movi.n	a2, 31
400e82ee:	422297        	blt	a2, a9, 400e8334 <_svfiprintf_r+0x190c>
400e82f1:	291b      	addi.n	a2, a9, 1
400e82f3:	10c142        	addi	a4, a1, 16
400e82f6:	916122        	s32i	a2, a1, 0x244
400e82f9:	02d422        	addmi	a2, a4, 0x200
400e82fc:	122232        	l32i	a3, a2, 72
400e82ff:	841c      	movi.n	a4, 24
400e8301:	634b      	addi.n	a6, a3, 4
400e8303:	126262        	s32i	a6, a2, 72
400e8306:	062467        	blt	a4, a6, 400e8310 <_svfiprintf_r+0x18e8>
400e8309:	112232        	l32i	a3, a2, 68
400e830c:	0002c6        	j	400e831b <_svfiprintf_r+0x18f3>
400e830f:	243700        	extui	a3, a0, 7, 3
400e8312:	432c04        	lsi	f0, a12, 0x10c
400e8315:	126232        	s32i	a3, a2, 72
400e8318:	942132        	l32i	a3, a1, 0x250
400e831b:	962122        	l32i	a2, a1, 0x258
400e831e:	10c162        	addi	a6, a1, 16
400e8321:	232a      	add.n	a2, a3, a2
400e8323:	fcc222        	addi	a2, a2, -4
400e8326:	02e8      	l32i.n	a14, a2, 0
400e8328:	b09960        	addx8	a9, a9, a6
400e832b:	09e9      	s32i.n	a14, a9, 0
400e832d:	74e0e0        	extui	a14, a14, 0, 8
400e8330:	000bc6        	j	400e8363 <_svfiprintf_r+0x193b>
400e8333:	c19200        	mul16u	a9, a2, a0
400e8336:	d92210        	lsi	f1, a2, 0x364
400e8339:	223202        	lsi	f0, a2, 136
400e833c:	841c12        	l16ui	a1, a12, 0x108
400e833f:	634b      	addi.n	a6, a3, 4
400e8341:	126262        	s32i	a6, a2, 72
400e8344:	052467        	blt	a4, a6, 400e834d <_svfiprintf_r+0x1925>
400e8347:	112232        	l32i	a3, a2, 68
400e834a:	000286        	j	400e8358 <_svfiprintf_r+0x1930>
400e834d:	042437        	blt	a4, a3, 400e8355 <_svfiprintf_r+0x192d>
400e8350:	432c      	movi.n	a3, 36
400e8352:	126232        	s32i	a3, a2, 72
400e8355:	942132        	l32i	a3, a1, 0x250
400e8358:	962122        	l32i	a2, a1, 0x258
400e835b:	232a      	add.n	a2, a3, a2
400e835d:	fcc222        	addi	a2, a2, -4
400e8360:	0002e2        	l8ui	a14, a2, 0
400e8363:	040c      	movi.n	a4, 0
400e8365:	073d      	mov.n	a3, a7
400e8367:	0030c6        	j	400e842e <_svfiprintf_r+0x1a06>
400e836a:	c6bc      	beqz.n	a6, 400e83aa <_svfiprintf_r+0x1982>
400e836c:	0da297        	bge	a2, a9, 400e837d <_svfiprintf_r+0x1955>
400e836f:	10c1a2        	addi	a10, a1, 16
400e8372:	b022a0        	addx8	a2, a2, a10
400e8375:	02e8      	l32i.n	a14, a2, 0
400e8377:	036d      	mov.n	a6, a3
400e8379:	002b46        	j	400e842a <_svfiprintf_r+0x1a02>
400e837c:	c1b200        	mul16u	a11, a2, a0
400e837f:	a24210        	muluh	a4, a2, a1
400e8382:	4b4a30        	olt.s	b4, f10, f3
400e8385:	0149      	s32i.n	a4, a1, 0
400e8387:	01dbf2        	addmi	a15, a11, 0x100
400e838a:	0bed      	mov.n	a14, a11
400e838c:	34a2d2        	movi	a13, 0x234
400e838f:	40a2c2        	movi	a12, 0x240
400e8392:	deda      	add.n	a13, a14, a13
400e8394:	ceca      	add.n	a12, a14, a12
400e8396:	07bd      	mov.n	a11, a7
400e8398:	02ad      	mov.n	a10, a2
400e839a:	a46182        	s32i	a8, a1, 0x290
400e839d:	fe1025        	call8	400e64a0 <get_arg$isra$0>
400e83a0:	0ae8      	l32i.n	a14, a10, 0
400e83a2:	036d      	mov.n	a6, a3
400e83a4:	a42182        	l32i	a8, a1, 0x290
400e83a7:	001fc6        	j	400e842a <_svfiprintf_r+0x1a02>
400e83aa:	631b      	addi.n	a6, a3, 1
400e83ac:	08a397        	bge	a3, a9, 400e83b8 <_svfiprintf_r+0x1990>
400e83af:	10c132        	addi	a3, a1, 16
400e83b2:	b02230        	addx8	a2, a2, a3
400e83b5:	001bc6        	j	400e8428 <_svfiprintf_r+0x1a00>
400e83b8:	f21c      	movi.n	a2, 31
400e83ba:	3e2297        	blt	a2, a9, 400e83fc <_svfiprintf_r+0x19d4>
400e83bd:	291b      	addi.n	a2, a9, 1
400e83bf:	10c142        	addi	a4, a1, 16
400e83c2:	916122        	s32i	a2, a1, 0x244
400e83c5:	02d422        	addmi	a2, a4, 0x200
400e83c8:	122232        	l32i	a3, a2, 72
400e83cb:	841c      	movi.n	a4, 24
400e83cd:	734b      	addi.n	a7, a3, 4
400e83cf:	126272        	s32i	a7, a2, 72
400e83d2:	062477        	blt	a4, a7, 400e83dc <_svfiprintf_r+0x19b4>
400e83d5:	112232        	l32i	a3, a2, 68
400e83d8:	0002c6        	j	400e83e7 <_svfiprintf_r+0x19bf>
400e83db:	243700        	extui	a3, a0, 7, 3
400e83de:	432c04        	lsi	f0, a12, 0x10c
400e83e1:	126232        	s32i	a3, a2, 72
400e83e4:	942132        	l32i	a3, a1, 0x250
400e83e7:	962122        	l32i	a2, a1, 0x258
400e83ea:	10c1a2        	addi	a10, a1, 16
400e83ed:	232a      	add.n	a2, a3, a2
400e83ef:	fcc222        	addi	a2, a2, -4
400e83f2:	02e8      	l32i.n	a14, a2, 0
400e83f4:	b099a0        	addx8	a9, a9, a10
400e83f7:	09e9      	s32i.n	a14, a9, 0
400e83f9:	000b46        	j	400e842a <_svfiprintf_r+0x1a02>
400e83fc:	10c1b2        	addi	a11, a1, 16
400e83ff:	02db22        	addmi	a2, a11, 0x200
400e8402:	122232        	l32i	a3, a2, 72
400e8405:	841c      	movi.n	a4, 24
400e8407:	734b      	addi.n	a7, a3, 4
400e8409:	126272        	s32i	a7, a2, 72
400e840c:	052477        	blt	a4, a7, 400e8415 <_svfiprintf_r+0x19ed>
400e840f:	112232        	l32i	a3, a2, 68
400e8412:	000286        	j	400e8420 <_svfiprintf_r+0x19f8>
400e8415:	042437        	blt	a4, a3, 400e841d <_svfiprintf_r+0x19f5>
400e8418:	432c      	movi.n	a3, 36
400e841a:	126232        	s32i	a3, a2, 72
400e841d:	942132        	l32i	a3, a1, 0x250
400e8420:	962122        	l32i	a2, a1, 0x258
400e8423:	232a      	add.n	a2, a3, a2
400e8425:	fcc222        	addi	a2, a2, -4
400e8428:	02e8      	l32i.n	a14, a2, 0
400e842a:	040c      	movi.n	a4, 0
400e842c:	063d      	mov.n	a3, a6
400e842e:	202e40        	or	a2, a14, a4
400e8431:	429c      	beqz.n	a2, 400e8449 <_svfiprintf_r+0x1a21>
400e8433:	126507        	bbci	a5, 0, 400e8449 <_svfiprintf_r+0x1a21>
400e8436:	10c192        	addi	a9, a1, 16
400e8439:	02d922        	addmi	a2, a9, 0x200
400e843c:	063c      	movi.n	a6, 48
400e843e:	384262        	s8i	a6, a2, 56
400e8441:	394282        	s8i	a8, a2, 57
400e8444:	220c      	movi.n	a2, 2
400e8446:	205520        	or	a5, a5, a2
400e8449:	ffab22        	movi	a2, 0xfffffbff
400e844c:	105520        	and	a5, a5, a2
400e844f:	220c      	movi.n	a2, 2
400e8451:	10c1a2        	addi	a10, a1, 16
400e8454:	00a072        	movi	a7, 0
400e8457:	02da62        	addmi	a6, a10, 0x200
400e845a:	3a4672        	s8i	a7, a6, 58
400e845d:	986132        	s32i	a3, a1, 0x260
400e8460:	9a2132        	l32i	a3, a1, 0x268
400e8463:	005396        	bltz	a3, 400e846c <_svfiprintf_r+0x1a44>
400e8466:	7faf32        	movi	a3, -129
400e8469:	105530        	and	a5, a5, a3
400e846c:	206e40        	or	a6, a14, a4
400e846f:	180c      	movi.n	a8, 1
400e8471:	030c      	movi.n	a3, 0
400e8473:	933860        	movnez	a3, a8, a6
400e8476:	743030        	extui	a3, a3, 0, 8
400e8479:	73cc      	bnez.n	a3, 400e8484 <_svfiprintf_r+0x1a5c>
400e847b:	9a2162        	l32i	a6, a1, 0x268
400e847e:	933860        	movnez	a3, a8, a6
400e8481:	13d316        	beqz	a3, 400e85c2 <_svfiprintf_r+0x1b9a>
400e8484:	4a1226        	beqi	a2, 1, 400e84d2 <_svfiprintf_r+0x1aaa>
400e8487:	022266        	bnei	a2, 2, 400e848d <_svfiprintf_r+0x1a65>
400e848a:	0041c6        	j	400e8595 <_svfiprintf_r+0x1b6d>
400e848d:	90a182        	movi	a8, 0x190
400e8490:	881a      	add.n	a8, a8, a1
400e8492:	64c872        	addi	a7, a8, 100
400e8495:	2420e0        	extui	a2, a14, 0, 3
400e8498:	013430        	slli	a3, a4, 29
400e849b:	41e3e0        	srli	a14, a14, 3
400e849e:	770b      	addi.n	a7, a7, -1
400e84a0:	30c222        	addi	a2, a2, 48
400e84a3:	20e3e0        	or	a14, a3, a14
400e84a6:	414340        	srli	a4, a4, 3
400e84a9:	004722        	s8i	a2, a7, 0
400e84ac:	206e40        	or	a6, a14, a4
400e84af:	fe2656        	bnez	a6, 400e8495 <_svfiprintf_r+0x1a6d>
400e84b2:	d0c232        	addi	a3, a2, -48
400e84b5:	120c      	movi.n	a2, 1
400e84b7:	832630        	moveqz	a2, a6, a3
400e84ba:	742020        	extui	a2, a2, 0, 8
400e84bd:	11c216        	beqz	a2, 400e85dd <_svfiprintf_r+0x1bb5>
400e84c0:	02e507        	bbsi	a5, 0, 400e84c6 <_svfiprintf_r+0x1a9e>
400e84c3:	004586        	j	400e85dd <_svfiprintf_r+0x1bb5>
400e84c6:	870b      	addi.n	a8, a7, -1
400e84c8:	023c      	movi.n	a2, 48
400e84ca:	004822        	s8i	a2, a8, 0
400e84cd:	087d      	mov.n	a7, a8
400e84cf:	004286        	j	400e85dd <_svfiprintf_r+0x1bb5>
400e84d2:	a4dc      	bnez.n	a4, 400e84f0 <_svfiprintf_r+0x1ac8>
400e84d4:	920c      	movi.n	a2, 9
400e84d6:	1632e7        	bltu	a2, a14, 400e84f0 <_svfiprintf_r+0x1ac8>
400e84d9:	10c192        	addi	a9, a1, 16
400e84dc:	90a1a2        	movi	a10, 0x190
400e84df:	30cee2        	addi	a14, a14, 48
400e84e2:	01d922        	addmi	a2, a9, 0x100
400e84e5:	aa1a      	add.n	a10, a10, a1
400e84e7:	e342e2        	s8i	a14, a2, 227
400e84ea:	63ca72        	addi	a7, a10, 99
400e84ed:	003b06        	j	400e85dd <_svfiprintf_r+0x1bb5>
400e84f0:	00a422        	movi	a2, 0x400
400e84f3:	030c      	movi.n	a3, 0
400e84f5:	a32182        	l32i	a8, a1, 0x28c
400e84f8:	102520        	and	a2, a5, a2
400e84fb:	000046        	j	400e8500 <_svfiprintf_r+0x1ad8>
400e84fe:	078d      	mov.n	a8, a7
400e8500:	a09fc1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e8503:	9ed8d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e8506:	0ead      	mov.n	a10, a14
400e8508:	04bd      	mov.n	a11, a4
400e850a:	780b      	addi.n	a7, a8, -1
400e850c:	a561e2        	s32i	a14, a1, 0x294
400e850f:	a0a881        	l32r	a8, 400d07b0 <_flash_cache_start+0x798>
400e8512:	0008e0        	callx8	a8
400e8515:	30caa2        	addi	a10, a10, 48
400e8518:	0047a2        	s8i	a10, a7, 0
400e851b:	331b      	addi.n	a3, a3, 1
400e851d:	a521e2        	l32i	a14, a1, 0x294
400e8520:	054216        	beqz	a2, 400e8578 <_svfiprintf_r+0x1b50>
400e8523:	a02162        	l32i	a6, a1, 0x280
400e8526:	01af92        	movi	a9, -255
400e8529:	0006a2        	l8ui	a10, a6, 0
400e852c:	0b0c      	movi.n	a11, 0
400e852e:	9a9a      	add.n	a9, a10, a9
400e8530:	160c      	movi.n	a6, 1
400e8532:	93b690        	movnez	a11, a6, a9
400e8535:	0b9d      	mov.n	a9, a11
400e8537:	54cc      	bnez.n	a4, 400e8540 <_svfiprintf_r+0x1b18>
400e8539:	9b0c      	movi.n	a11, 9
400e853b:	013be7        	bltu	a11, a14, 400e8540 <_svfiprintf_r+0x1b18>
400e853e:	046d      	mov.n	a6, a4
400e8540:	340967        	bnone	a9, a6, 400e8578 <_svfiprintf_r+0x1b50>
400e8543:	319a37        	bne	a10, a3, 400e8578 <_svfiprintf_r+0x1b50>
400e8546:	a12182        	l32i	a8, a1, 0x284
400e8549:	a221b2        	l32i	a11, a1, 0x288
400e854c:	c07780        	sub	a7, a7, a8
400e854f:	08cd      	mov.n	a12, a8
400e8551:	07ad      	mov.n	a10, a7
400e8553:	a561e2        	s32i	a14, a1, 0x294
400e8556:	9fa381        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400e8559:	0008e0        	callx8	a8
400e855c:	a02132        	l32i	a3, a1, 0x280
400e855f:	a02182        	l32i	a8, a1, 0x280
400e8562:	010392        	l8ui	a9, a3, 1
400e8565:	030c      	movi.n	a3, 0
400e8567:	036d      	mov.n	a6, a3
400e8569:	01a0a2        	movi	a10, 1
400e856c:	936a90        	movnez	a6, a10, a9
400e856f:	808860        	add	a8, a8, a6
400e8572:	a521e2        	l32i	a14, a1, 0x294
400e8575:	a06182        	s32i	a8, a1, 0x280
400e8578:	a081c1        	l32r	a12, 400d077c <_flash_cache_start+0x764>
400e857b:	9ebad1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e857e:	0ead      	mov.n	a10, a14
400e8580:	04bd      	mov.n	a11, a4
400e8582:	9eb381        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e8585:	0008e0        	callx8	a8
400e8588:	0aed      	mov.n	a14, a10
400e858a:	20aba0        	or	a10, a11, a10
400e858d:	0b4d      	mov.n	a4, a11
400e858f:	f6ba56        	bnez	a10, 400e84fe <_svfiprintf_r+0x1ad6>
400e8592:	0011c6        	j	400e85dd <_svfiprintf_r+0x1bb5>
400e8595:	90a192        	movi	a9, 0x190
400e8598:	991a      	add.n	a9, a9, a1
400e859a:	64c972        	addi	a7, a9, 100
400e859d:	9f2132        	l32i	a3, a1, 0x27c
400e85a0:	3420e0        	extui	a2, a14, 0, 4
400e85a3:	232a      	add.n	a2, a3, a2
400e85a5:	000222        	l8ui	a2, a2, 0
400e85a8:	770b      	addi.n	a7, a7, -1
400e85aa:	004722        	s8i	a2, a7, 0
400e85ad:	41e4e0        	srli	a14, a14, 4
400e85b0:	012440        	slli	a2, a4, 28
400e85b3:	20e2e0        	or	a14, a2, a14
400e85b6:	414440        	srli	a4, a4, 4
400e85b9:	202e40        	or	a2, a14, a4
400e85bc:	fdd256        	bnez	a2, 400e859d <_svfiprintf_r+0x1b75>
400e85bf:	000686        	j	400e85dd <_svfiprintf_r+0x1bb5>
400e85c2:	90a142        	movi	a4, 0x190
400e85c5:	441a      	add.n	a4, a4, a1
400e85c7:	64c472        	addi	a7, a4, 100
400e85ca:	f2cc      	bnez.n	a2, 400e85dd <_svfiprintf_r+0x1bb5>
400e85cc:	0d6507        	bbci	a5, 0, 400e85dd <_svfiprintf_r+0x1bb5>
400e85cf:	10c162        	addi	a6, a1, 16
400e85d2:	033c      	movi.n	a3, 48
400e85d4:	01d622        	addmi	a2, a6, 0x100
400e85d7:	e34232        	s8i	a3, a2, 227
400e85da:	63c472        	addi	a7, a4, 99
400e85dd:	a32182        	l32i	a8, a1, 0x28c
400e85e0:	9a2122        	l32i	a2, a1, 0x268
400e85e3:	c08870        	sub	a8, a8, a7
400e85e6:	9a6182        	s32i	a8, a1, 0x268
400e85e9:	0008c6        	j	400e8610 <_svfiprintf_r+0x1be8>
400e85ec:	981600        	lsi	f0, a6, 0x260
400e85ef:	3e          	.byte 0x3e
400e85f0:	10c192        	addi	a9, a1, 16
400e85f3:	01d922        	addmi	a2, a9, 0x100
400e85f6:	804282        	s8i	a8, a2, 128
400e85f9:	040c      	movi.n	a4, 0
400e85fb:	02d922        	addmi	a2, a9, 0x200
400e85fe:	3a4242        	s8i	a4, a2, 58
400e8601:	986132        	s32i	a3, a1, 0x260
400e8604:	120c      	movi.n	a2, 1
400e8606:	90a132        	movi	a3, 0x190
400e8609:	9a6122        	s32i	a2, a1, 0x268
400e860c:	713a      	add.n	a7, a1, a3
400e860e:	020c      	movi.n	a2, 0
400e8610:	9a2142        	l32i	a4, a1, 0x268
400e8613:	10c162        	addi	a6, a1, 16
400e8616:	533240        	max	a3, a2, a4
400e8619:	02d642        	addmi	a4, a6, 0x200
400e861c:	3a0462        	l8ui	a6, a4, 58
400e861f:	190c      	movi.n	a9, 1
400e8621:	040c      	movi.n	a4, 0
400e8623:	934960        	movnez	a4, a9, a6
400e8626:	334a      	add.n	a3, a3, a4
400e8628:	260c      	movi.n	a6, 2
400e862a:	84a042        	movi	a4, 132
400e862d:	106560        	and	a6, a5, a6
400e8630:	104540        	and	a4, a5, a4
400e8633:	336a      	add.n	a3, a3, a6
400e8635:	0a7456        	bnez	a4, 400e86e0 <_svfiprintf_r+0x1cb8>
400e8638:	9d2182        	l32i	a8, a1, 0x274
400e863b:	c09830        	sub	a9, a8, a3
400e863e:	0219e6        	bgei	a9, 1, 400e8644 <_svfiprintf_r+0x1c1c>
400e8641:	0026c6        	j	400e86e0 <_svfiprintf_r+0x1cb8>
400e8644:	0e1c      	movi.n	a14, 16
400e8646:	24a2d2        	movi	a13, 0x224
400e8649:	a1ea      	add.n	a10, a1, a14
400e864b:	dada      	add.n	a13, a10, a13
400e864d:	001286        	j	400e869b <_svfiprintf_r+0x1c73>
400e8650:	c1a200        	mul16u	a10, a2, a0
400e8653:	dab210        	ufloat.s	f11, a2, 1
400e8656:	21a202        	movi	a0, 0x221
400e8659:	8f          	.byte 0x8f
400e865a:	18e9      	s32i.n	a14, a8, 4
400e865c:	10caa2        	addi	a10, a10, 16
400e865f:	bba9      	s32i.n	a10, a11, 44
400e8661:	aba8      	l32i.n	a10, a11, 40
400e8663:	888b      	addi.n	a8, a8, 8
400e8665:	aa1b      	addi.n	a10, a10, 1
400e8667:	aba9      	s32i.n	a10, a11, 40
400e8669:	288aa6        	blti	a10, 8, 400e8695 <_svfiprintf_r+0x1c6d>
400e866c:	9b21b2        	l32i	a11, a1, 0x26c
400e866f:	9c21a2        	l32i	a10, a1, 0x270
400e8672:	20cdd0        	or	a12, a13, a13
400e8675:	a66192        	s32i	a9, a1, 0x298
400e8678:	a461d2        	s32i	a13, a1, 0x290
400e867b:	a561e2        	s32i	a14, a1, 0x294
400e867e:	fe2a25        	call8	400e6920 <__ssprint_r>
400e8681:	a62192        	l32i	a9, a1, 0x298
400e8684:	a421d2        	l32i	a13, a1, 0x290
400e8687:	a521e2        	l32i	a14, a1, 0x294
400e868a:	362a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e868d:	e4a1a2        	movi	a10, 0x1e4
400e8690:	10c182        	addi	a8, a1, 16
400e8693:	88aa      	add.n	a8, a8, a10
400e8695:	976182        	s32i	a8, a1, 0x25c
400e8698:	f0c992        	addi	a9, a9, -16
400e869b:	a07ba1        	l32r	a10, 400d0888 <_flash_cache_start+0x870>
400e869e:	972182        	l32i	a8, a1, 0x25c
400e86a1:	08a9      	s32i.n	a10, a8, 0
400e86a3:	aa2e97        	blt	a14, a9, 400e8651 <_svfiprintf_r+0x1c29>
400e86a6:	10c1b2        	addi	a11, a1, 16
400e86a9:	02dba2        	addmi	a10, a11, 0x200
400e86ac:	8f21b2        	l32i	a11, a1, 0x23c
400e86af:	1899      	s32i.n	a9, a8, 4
400e86b1:	9b9a      	add.n	a9, a11, a9
400e86b3:	ba99      	s32i.n	a9, a10, 44
400e86b5:	aa98      	l32i.n	a9, a10, 40
400e86b7:	888b      	addi.n	a8, a8, 8
400e86b9:	991b      	addi.n	a9, a9, 1
400e86bb:	aa99      	s32i.n	a9, a10, 40
400e86bd:	1c89a6        	blti	a9, 8, 400e86dd <_svfiprintf_r+0x1cb5>
400e86c0:	24a2c2        	movi	a12, 0x224
400e86c3:	10c182        	addi	a8, a1, 16
400e86c6:	9b21b2        	l32i	a11, a1, 0x26c
400e86c9:	9c21a2        	l32i	a10, a1, 0x270
400e86cc:	c8ca      	add.n	a12, a8, a12
400e86ce:	fe2525        	call8	400e6920 <__ssprint_r>
400e86d1:	31ba56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e86d4:	e4a192        	movi	a9, 0x1e4
400e86d7:	10c182        	addi	a8, a1, 16
400e86da:	808890        	add	a8, a8, a9
400e86dd:	976182        	s32i	a8, a1, 0x25c
400e86e0:	10c1a2        	addi	a10, a1, 16
400e86e3:	02da92        	addmi	a9, a10, 0x200
400e86e6:	3a09a2        	l8ui	a10, a9, 58
400e86e9:	043a16        	beqz	a10, 400e8730 <_svfiprintf_r+0x1d08>
400e86ec:	972182        	l32i	a8, a1, 0x25c
400e86ef:	3aa2a2        	movi	a10, 0x23a
400e86f2:	10c1b2        	addi	a11, a1, 16
400e86f5:	abaa      	add.n	a10, a11, a10
400e86f7:	08a9      	s32i.n	a10, a8, 0
400e86f9:	1a0c      	movi.n	a10, 1
400e86fb:	18a9      	s32i.n	a10, a8, 4
400e86fd:	b9a8      	l32i.n	a10, a9, 44
400e86ff:	888b      	addi.n	a8, a8, 8
400e8701:	aa1b      	addi.n	a10, a10, 1
400e8703:	b9a9      	s32i.n	a10, a9, 44
400e8705:	a9a8      	l32i.n	a10, a9, 40
400e8707:	aa1b      	addi.n	a10, a10, 1
400e8709:	0a69a2        	s32i	a10, a9, 40
400e870c:	1d8aa6        	blti	a10, 8, 400e872d <_svfiprintf_r+0x1d05>
400e870f:	24a2c2        	movi	a12, 0x224
400e8712:	10c192        	addi	a9, a1, 16
400e8715:	9b21b2        	l32i	a11, a1, 0x26c
400e8718:	9c21a2        	l32i	a10, a1, 0x270
400e871b:	80c9c0        	add	a12, a9, a12
400e871e:	fe2025        	call8	400e6920 <__ssprint_r>
400e8721:	2cba56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e8724:	e4a192        	movi	a9, 0x1e4
400e8727:	10c182        	addi	a8, a1, 16
400e872a:	808890        	add	a8, a8, a9
400e872d:	976182        	s32i	a8, a1, 0x25c
400e8730:	043616        	beqz	a6, 400e8777 <_svfiprintf_r+0x1d4f>
400e8733:	972182        	l32i	a8, a1, 0x25c
400e8736:	48a292        	movi	a9, 0x248
400e8739:	619a      	add.n	a6, a1, a9
400e873b:	0869      	s32i.n	a6, a8, 0
400e873d:	260c      	movi.n	a6, 2
400e873f:	1869      	s32i.n	a6, a8, 4
400e8741:	8f2162        	l32i	a6, a1, 0x23c
400e8744:	888b      	addi.n	a8, a8, 8
400e8746:	662b      	addi.n	a6, a6, 2
400e8748:	8f6162        	s32i	a6, a1, 0x23c
400e874b:	8e2162        	l32i	a6, a1, 0x238
400e874e:	661b      	addi.n	a6, a6, 1
400e8750:	8e6162        	s32i	a6, a1, 0x238
400e8753:	1d86a6        	blti	a6, 8, 400e8774 <_svfiprintf_r+0x1d4c>
400e8756:	10c1b2        	addi	a11, a1, 16
400e8759:	24a2c2        	movi	a12, 0x224
400e875c:	80cbc0        	add	a12, a11, a12
400e875f:	9c21a2        	l32i	a10, a1, 0x270
400e8762:	9b21b2        	l32i	a11, a1, 0x26c
400e8765:	fe1ba5        	call8	400e6920 <__ssprint_r>
400e8768:	284a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e876b:	e4a162        	movi	a6, 0x1e4
400e876e:	10c182        	addi	a8, a1, 16
400e8771:	808860        	add	a8, a8, a6
400e8774:	976182        	s32i	a8, a1, 0x25c
400e8777:	02e426        	beqi	a4, 128, 400e877d <_svfiprintf_r+0x1d55>
400e877a:	002a86        	j	400e8828 <_svfiprintf_r+0x1e00>
400e877d:	9d2192        	l32i	a9, a1, 0x274
400e8780:	c04930        	sub	a4, a9, a3
400e8783:	0214e6        	bgei	a4, 1, 400e8789 <_svfiprintf_r+0x1d61>
400e8786:	002786        	j	400e8828 <_svfiprintf_r+0x1e00>
400e8789:	0d1c      	movi.n	a13, 16
400e878b:	24a292        	movi	a9, 0x224
400e878e:	a1da      	add.n	a10, a1, a13
400e8790:	9a9a      	add.n	a9, a10, a9
400e8792:	001146        	j	400e87db <_svfiprintf_r+0x1db3>
400e8795:	972182        	l32i	a8, a1, 0x25c
400e8798:	0869      	s32i.n	a6, a8, 0
400e879a:	8f2162        	l32i	a6, a1, 0x23c
400e879d:	18d9      	s32i.n	a13, a8, 4
400e879f:	10c662        	addi	a6, a6, 16
400e87a2:	8f6162        	s32i	a6, a1, 0x23c
400e87a5:	8e2162        	l32i	a6, a1, 0x238
400e87a8:	888b      	addi.n	a8, a8, 8
400e87aa:	661b      	addi.n	a6, a6, 1
400e87ac:	8e6162        	s32i	a6, a1, 0x238
400e87af:	2286a6        	blti	a6, 8, 400e87d5 <_svfiprintf_r+0x1dad>
400e87b2:	9b21b2        	l32i	a11, a1, 0x26c
400e87b5:	9c21a2        	l32i	a10, a1, 0x270
400e87b8:	20c990        	or	a12, a9, a9
400e87bb:	a66192        	s32i	a9, a1, 0x298
400e87be:	a461d2        	s32i	a13, a1, 0x290
400e87c1:	fe15e5        	call8	400e6920 <__ssprint_r>
400e87c4:	a62192        	l32i	a9, a1, 0x298
400e87c7:	a421d2        	l32i	a13, a1, 0x290
400e87ca:	222a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e87cd:	e4a162        	movi	a6, 0x1e4
400e87d0:	10c182        	addi	a8, a1, 16
400e87d3:	886a      	add.n	a8, a8, a6
400e87d5:	976182        	s32i	a8, a1, 0x25c
400e87d8:	f0c442        	addi	a4, a4, -16
400e87db:	a02c61        	l32r	a6, 400d088c <_flash_cache_start+0x874>
400e87de:	b32d47        	blt	a13, a4, 400e8795 <_svfiprintf_r+0x1d6d>
400e87e1:	972192        	l32i	a9, a1, 0x25c
400e87e4:	1949      	s32i.n	a4, a9, 4
400e87e6:	0969      	s32i.n	a6, a9, 0
400e87e8:	8f2192        	l32i	a9, a1, 0x23c
400e87eb:	494a      	add.n	a4, a9, a4
400e87ed:	8f6142        	s32i	a4, a1, 0x23c
400e87f0:	8e2142        	l32i	a4, a1, 0x238
400e87f3:	441b      	addi.n	a4, a4, 1
400e87f5:	8e6142        	s32i	a4, a1, 0x238
400e87f8:	0c84e6        	bgei	a4, 8, 400e8808 <_svfiprintf_r+0x1de0>
400e87fb:	972142        	l32i	a4, a1, 0x25c
400e87fe:	448b      	addi.n	a4, a4, 8
400e8800:	976142        	s32i	a4, a1, 0x25c
400e8803:	000846        	j	400e8828 <_svfiprintf_r+0x1e00>
400e8806:	c20000        	quou	a0, a0, a0
400e8809:	6224a2        	l32i	a10, a4, 0x188
400e880c:	b210c1        	l32r	a12, 400d504c <fde_single_encoding_compare+0x18>
400e880f:	a29b21        	l32r	a2, 400d127c <unsigned int testDiv<unsigned int>(char const*, unsigned int)+0x178>
400e8812:	ca9c21        	l32r	a2, 400db284 <_fseeko_r+0x278>
400e8815:	10a5c6        	j	400ecab0 <_etext+0x1d3>
400e8818:	fe          	.byte 0xfe
400e8819:	1d3a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e881c:	e4a142        	movi	a4, 0x1e4
400e881f:	10c182        	addi	a8, a1, 16
400e8822:	808840        	add	a8, a8, a4
400e8825:	976182        	s32i	a8, a1, 0x25c
400e8828:	9a2192        	l32i	a9, a1, 0x268
400e882b:	c02290        	sub	a2, a2, a9
400e882e:	0212e6        	bgei	a2, 1, 400e8834 <_svfiprintf_r+0x1e0c>
400e8831:	0024c6        	j	400e88c8 <_svfiprintf_r+0x1ea0>
400e8834:	091c      	movi.n	a9, 16
400e8836:	24a262        	movi	a6, 0x224
400e8839:	a19a      	add.n	a10, a1, a9
400e883b:	6a6a      	add.n	a6, a10, a6
400e883d:	000fc6        	j	400e8880 <_svfiprintf_r+0x1e58>
400e8840:	218200        	srai	a8, a0, 2
400e8843:	084997        	ball	a9, a9, 400e884f <_svfiprintf_r+0x1e27>
400e8846:	8f2142        	l32i	a4, a1, 0x23c
400e8849:	1899      	s32i.n	a9, a8, 4
400e884b:	10c442        	addi	a4, a4, 16
400e884e:	8f6142        	s32i	a4, a1, 0x23c
400e8851:	8e2142        	l32i	a4, a1, 0x238
400e8854:	888b      	addi.n	a8, a8, 8
400e8856:	441b      	addi.n	a4, a4, 1
400e8858:	8e6142        	s32i	a4, a1, 0x238
400e885b:	1b84a6        	blti	a4, 8, 400e887a <_svfiprintf_r+0x1e52>
400e885e:	9b21b2        	l32i	a11, a1, 0x26c
400e8861:	9c21a2        	l32i	a10, a1, 0x270
400e8864:	06cd      	mov.n	a12, a6
400e8866:	a66192        	s32i	a9, a1, 0x298
400e8869:	fe0b65        	call8	400e6920 <__ssprint_r>
400e886c:	a62192        	l32i	a9, a1, 0x298
400e886f:	17da56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e8872:	e4a142        	movi	a4, 0x1e4
400e8875:	10c182        	addi	a8, a1, 16
400e8878:	884a      	add.n	a8, a8, a4
400e887a:	976182        	s32i	a8, a1, 0x25c
400e887d:	f0c222        	addi	a2, a2, -16
400e8880:	a00341        	l32r	a4, 400d088c <_flash_cache_start+0x874>
400e8883:	ba2927        	blt	a9, a2, 400e8841 <_svfiprintf_r+0x1e19>
400e8886:	972192        	l32i	a9, a1, 0x25c
400e8889:	8f2162        	l32i	a6, a1, 0x23c
400e888c:	1929      	s32i.n	a2, a9, 4
400e888e:	262a      	add.n	a2, a6, a2
400e8890:	8f6122        	s32i	a2, a1, 0x23c
400e8893:	8e2122        	l32i	a2, a1, 0x238
400e8896:	0949      	s32i.n	a4, a9, 0
400e8898:	221b      	addi.n	a2, a2, 1
400e889a:	8e6122        	s32i	a2, a1, 0x238
400e889d:	0782e6        	bgei	a2, 8, 400e88a8 <_svfiprintf_r+0x1e80>
400e88a0:	998b      	addi.n	a9, a9, 8
400e88a2:	976192        	s32i	a9, a1, 0x25c
400e88a5:	0007c6        	j	400e88c8 <_svfiprintf_r+0x1ea0>
400e88a8:	10c1b2        	addi	a11, a1, 16
400e88ab:	24a2c2        	movi	a12, 0x224
400e88ae:	cbca      	add.n	a12, a11, a12
400e88b0:	9c21a2        	l32i	a10, a1, 0x270
400e88b3:	9b21b2        	l32i	a11, a1, 0x26c
400e88b6:	fe06a5        	call8	400e6920 <__ssprint_r>
400e88b9:	133a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e88bc:	e4a122        	movi	a2, 0x1e4
400e88bf:	10c142        	addi	a4, a1, 16
400e88c2:	804420        	add	a4, a4, a2
400e88c5:	976142        	s32i	a4, a1, 0x25c
400e88c8:	10c192        	addi	a9, a1, 16
400e88cb:	02d942        	addmi	a4, a9, 0x200
400e88ce:	a428      	l32i.n	a2, a4, 40
400e88d0:	9a2182        	l32i	a8, a1, 0x268
400e88d3:	8f2192        	l32i	a9, a1, 0x23c
400e88d6:	972162        	l32i	a6, a1, 0x25c
400e88d9:	998a      	add.n	a9, a9, a8
400e88db:	221b      	addi.n	a2, a2, 1
400e88dd:	b499      	s32i.n	a9, a4, 44
400e88df:	a429      	s32i.n	a2, a4, 40
400e88e1:	0679      	s32i.n	a7, a6, 0
400e88e3:	1689      	s32i.n	a8, a6, 4
400e88e5:	08c642        	addi	a4, a6, 8
400e88e8:	1d82a6        	blti	a2, 8, 400e8909 <_svfiprintf_r+0x1ee1>
400e88eb:	10c1a2        	addi	a10, a1, 16
400e88ee:	24a2c2        	movi	a12, 0x224
400e88f1:	80cac0        	add	a12, a10, a12
400e88f4:	9b21b2        	l32i	a11, a1, 0x26c
400e88f7:	9c21a2        	l32i	a10, a1, 0x270
400e88fa:	fe0265        	call8	400e6920 <__ssprint_r>
400e88fd:	0efa56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e8900:	e4a142        	movi	a4, 0x1e4
400e8903:	10c1b2        	addi	a11, a1, 16
400e8906:	804b40        	add	a4, a11, a4
400e8909:	17e527        	bbsi	a5, 2, 400e8924 <_svfiprintf_r+0x1efc>
400e890c:	9d2122        	l32i	a2, a1, 0x274
400e890f:	9e2142        	l32i	a4, a1, 0x278
400e8912:	533230        	max	a3, a2, a3
400e8915:	443a      	add.n	a4, a4, a3
400e8917:	8f2122        	l32i	a2, a1, 0x23c
400e891a:	9e6142        	s32i	a4, a1, 0x278
400e891d:	08b216        	beqz	a2, 400e89ac <_svfiprintf_r+0x1f84>
400e8920:	0027c6        	j	400e89c3 <_svfiprintf_r+0x1f9b>
400e8923:	215200        	srai	a5, a0, 2
400e8926:	309d      	lsi	f9, a0, 0
400e8928:	a6c025        	call8	4008f52c <_iram_end+0x19d8>
400e892b:	1cde12        	addmi	a1, a14, 0x1c00
400e892e:	6208      	l32i.n	a0, a2, 24
400e8930:	8a24a2        	l32i	a10, a4, 0x228
400e8933:	696a91        	l32r	a9, 400c2edc <_rtc_text_end+0x2edc>
400e8936:	000dc6        	j	400e8971 <_svfiprintf_r+0x1f49>
400e8939:	8f2152        	l32i	a5, a1, 0x23c
400e893c:	1489      	s32i.n	a8, a4, 4
400e893e:	10c552        	addi	a5, a5, 16
400e8941:	8f6152        	s32i	a5, a1, 0x23c
400e8944:	8e2152        	l32i	a5, a1, 0x238
400e8947:	448b      	addi.n	a4, a4, 8
400e8949:	01c552        	addi	a5, a5, 1
400e894c:	8e6152        	s32i	a5, a1, 0x238
400e894f:	1b85a6        	blti	a5, 8, 400e896e <_svfiprintf_r+0x1f46>
400e8952:	9b21b2        	l32i	a11, a1, 0x26c
400e8955:	9c21a2        	l32i	a10, a1, 0x270
400e8958:	06cd      	mov.n	a12, a6
400e895a:	a46182        	s32i	a8, a1, 0x290
400e895d:	fdfc25        	call8	400e6920 <__ssprint_r>
400e8960:	a42182        	l32i	a8, a1, 0x290
400e8963:	089a56        	bnez	a10, 400e89f0 <_svfiprintf_r+0x1fc8>
400e8966:	e4a142        	movi	a4, 0x1e4
400e8969:	10c1b2        	addi	a11, a1, 16
400e896c:	4b4a      	add.n	a4, a11, a4
400e896e:	f0c222        	addi	a2, a2, -16
400e8971:	9fc551        	l32r	a5, 400d0888 <_flash_cache_start+0x870>
400e8974:	0459      	s32i.n	a5, a4, 0
400e8976:	bf2827        	blt	a8, a2, 400e8939 <_svfiprintf_r+0x1f11>
400e8979:	10c152        	addi	a5, a1, 16
400e897c:	1429      	s32i.n	a2, a4, 4
400e897e:	02d542        	addmi	a4, a5, 0x200
400e8981:	8f2152        	l32i	a5, a1, 0x23c
400e8984:	252a      	add.n	a2, a5, a2
400e8986:	b429      	s32i.n	a2, a4, 44
400e8988:	a428      	l32i.n	a2, a4, 40
400e898a:	221b      	addi.n	a2, a2, 1
400e898c:	a429      	s32i.n	a2, a4, 40
400e898e:	0282e6        	bgei	a2, 8, 400e8994 <_svfiprintf_r+0x1f6c>
400e8991:	ffddc6        	j	400e890c <_svfiprintf_r+0x1ee4>
400e8994:	24a2c2        	movi	a12, 0x224
400e8997:	10c162        	addi	a6, a1, 16
400e899a:	9b21b2        	l32i	a11, a1, 0x26c
400e899d:	9c21a2        	l32i	a10, a1, 0x270
400e89a0:	c6ca      	add.n	a12, a6, a12
400e89a2:	fdf7e5        	call8	400e6920 <__ssprint_r>
400e89a5:	f63a16        	beqz	a10, 400e890c <_svfiprintf_r+0x1ee4>
400e89a8:	001106        	j	400e89f0 <_svfiprintf_r+0x1fc8>
400e89ab:	030c00        	rsr.scompare1	a0
400e89ae:	10c182        	addi	a8, a1, 16
400e89b1:	8e6132        	s32i	a3, a1, 0x238
400e89b4:	e4a132        	movi	a3, 0x1e4
400e89b7:	983a      	add.n	a9, a8, a3
400e89b9:	982122        	l32i	a2, a1, 0x260
400e89bc:	976192        	s32i	a9, a1, 0x25c
400e89bf:	f83b06        	j	400e6aaf <_svfiprintf_r+0x87>
400e89c2:	c1a200        	mul16u	a10, a2, a0
400e89c5:	a2c210        	muluh	a12, a2, a1
400e89c8:	caca24        	lsi	f2, a10, 0x328
400e89cb:	9b21b2        	l32i	a11, a1, 0x26c
400e89ce:	9c21a2        	l32i	a10, a1, 0x270
400e89d1:	fdf4e5        	call8	400e6920 <__ssprint_r>
400e89d4:	fd4a16        	beqz	a10, 400e89ac <_svfiprintf_r+0x1f84>
400e89d7:	000546        	j	400e89f0 <_svfiprintf_r+0x1fc8>
400e89da:	8f2122        	l32i	a2, a1, 0x23c
400e89dd:	f28c      	beqz.n	a2, 400e89f0 <_svfiprintf_r+0x1fc8>
400e89df:	10c1b2        	addi	a11, a1, 16
400e89e2:	24a2c2        	movi	a12, 0x224
400e89e5:	cbca      	add.n	a12, a11, a12
400e89e7:	9c21a2        	l32i	a10, a1, 0x270
400e89ea:	9b21b2        	l32i	a11, a1, 0x26c
400e89ed:	fdf325        	call8	400e6920 <__ssprint_r>
400e89f0:	9b2132        	l32i	a3, a1, 0x26c
400e89f3:	9e2142        	l32i	a4, a1, 0x278
400e89f6:	061322        	l16ui	a2, a3, 12
400e89f9:	f37c      	movi.n	a3, -1
400e89fb:	042620        	extui	a2, a2, 6, 1
400e89fe:	934320        	movnez	a4, a3, a2
400e8a01:	042d      	mov.n	a2, a4
400e8a03:	f01d      	retw.n
400e8a05:	912142        	l32i	a4, a1, 0x244
400e8a08:	831b      	addi.n	a8, a3, 1
400e8a0a:	02a347        	bge	a3, a4, 400e8a10 <_svfiprintf_r+0x1fe8>
400e8a0d:	f89206        	j	400e6c59 <_svfiprintf_r+0x231>
400e8a10:	f89386        	j	400e6c62 <_svfiprintf_r+0x23a>
400e8a13:	218200        	srai	a8, a0, 2
400e8a16:	931b91        	l32r	a9, 400cd684 <_rtc_text_end+0xd684>
400e8a19:	02a387        	bge	a3, a8, 400e8a1f <_svfiprintf_r+0x1ff7>
400e8a1c:	f8db46        	j	400e6d8d <_svfiprintf_r+0x365>
400e8a1f:	f8dcc6        	j	400e6d96 <_svfiprintf_r+0x36e>
	...

400e8a24 <uart_pattern_queue_update>:
400e8a24:	006136        	entry	a1, 48
400e8a27:	9f9a41        	l32r	a4, 400d0890 <_flash_cache_start+0x878>
400e8a2a:	a04240        	addx4	a4, a2, a4
400e8a2d:	0448      	l32i.n	a4, a4, 0
400e8a2f:	94ec      	bnez.n	a4, 400e8a5c <uart_pattern_queue_update+0x38>
400e8a31:	9b2fe5        	call8	40083d30 <esp_log_timestamp>
400e8a34:	9f99b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8a37:	9f9a21        	l32r	a2, 400d08a0 <_flash_cache_start+0x888>
400e8a3a:	1129      	s32i.n	a2, a1, 4
400e8a3c:	8da122        	movi	a2, 0x18d
400e8a3f:	0129      	s32i.n	a2, a1, 0
400e8a41:	f03d      	nop.n
400e8a43:	f03d      	nop.n
400e8a45:	f03d      	nop.n
400e8a47:	f03d      	nop.n
400e8a49:	9f92f1        	l32r	a15, 400d0894 <_flash_cache_start+0x87c>
400e8a4c:	0bed      	mov.n	a14, a11
400e8a4e:	0add      	mov.n	a13, a10
400e8a50:	9f93c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8a53:	1a0c      	movi.n	a10, 1
400e8a55:	9b1625        	call8	40083bb8 <esp_log_write>
400e8a58:	f27c      	movi.n	a2, -1
400e8a5a:	f01d      	retw.n
400e8a5c:	9f9241        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e8a5f:	b04240        	addx8	a4, a2, a4
400e8a62:	04ad      	mov.n	a10, a4
400e8a64:	a002a5        	call8	40088a90 <vTaskEnterCritical>
400e8a67:	9f8a81        	l32r	a8, 400d0890 <_flash_cache_start+0x878>
400e8a6a:	a02280        	addx4	a2, a2, a8
400e8a6d:	02b8      	l32i.n	a11, a2, 0
400e8a6f:	302b82        	l32i	a8, a11, 192
400e8a72:	000b86        	j	400e8aa4 <uart_pattern_queue_update+0x80>
400e8a75:	322ba2        	l32i	a10, a11, 200
400e8a78:	1198e0        	slli	a9, a8, 2
400e8a7b:	aa9a      	add.n	a10, a10, a9
400e8a7d:	0ac8      	l32i.n	a12, a10, 0
400e8a7f:	c0cc30        	sub	a12, a12, a3
400e8a82:	0ac9      	s32i.n	a12, a10, 0
400e8a84:	881b      	addi.n	a8, a8, 1
400e8a86:	f03d      	nop.n
400e8a88:	f03d      	nop.n
400e8a8a:	f03d      	nop.n
400e8a8c:	312ba2        	l32i	a10, a11, 196
400e8a8f:	0228a7        	blt	a8, a10, 400e8a95 <uart_pattern_queue_update+0x71>
400e8a92:	00a082        	movi	a8, 0
400e8a95:	322ba2        	l32i	a10, a11, 200
400e8a98:	809a90        	add	a9, a10, a9
400e8a9b:	002992        	l32i	a9, a9, 0
400e8a9e:	0029d6        	bgez	a9, 400e8aa4 <uart_pattern_queue_update+0x80>
400e8aa1:	306b82        	s32i	a8, a11, 192
400e8aa4:	f03d      	nop.n
400e8aa6:	f03d      	nop.n
400e8aa8:	f03d      	nop.n
400e8aaa:	f03d      	nop.n
400e8aac:	2f2b92        	l32i	a9, a11, 188
400e8aaf:	c29897        	bne	a8, a9, 400e8a75 <uart_pattern_queue_update+0x51>
400e8ab2:	20a440        	or	a10, a4, a4
400e8ab5:	a011a5        	call8	40088bd0 <vTaskExitCritical>
400e8ab8:	020c      	movi.n	a2, 0
400e8aba:	f01d      	retw.n

400e8abc <uart_reset_rx_fifo>:
400e8abc:	006136        	entry	a1, 48
400e8abf:	7132b6        	bltui	a2, 3, 400e8b34 <uart_reset_rx_fifo+0x78>
400e8ac2:	9b26e5        	call8	40083d30 <esp_log_timestamp>
400e8ac5:	9f74b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8ac8:	9f7a21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8acb:	016122        	s32i	a2, a1, 4
400e8ace:	2aa122        	movi	a2, 0x12a
400e8ad1:	006122        	s32i	a2, a1, 0
400e8ad4:	f03d      	nop.n
400e8ad6:	f03d      	nop.n
400e8ad8:	f03d      	nop.n
400e8ada:	f03d      	nop.n
400e8adc:	9f74f1        	l32r	a15, 400d08ac <_flash_cache_start+0x894>
400e8adf:	0bed      	mov.n	a14, a11
400e8ae1:	0add      	mov.n	a13, a10
400e8ae3:	9f6ec1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8ae6:	01a0a2        	movi	a10, 1
400e8ae9:	9b0ce5        	call8	40083bb8 <esp_log_write>
400e8aec:	f27c      	movi.n	a2, -1
400e8aee:	f01d      	retw.n
400e8af0:	9f7181        	l32r	a8, 400d08b4 <_flash_cache_start+0x89c>
400e8af3:	828a      	add.n	a8, a2, a8
400e8af5:	118800        	slli	a8, a8, 16
400e8af8:	0522b6        	bltui	a2, 2, 400e8b01 <uart_reset_rx_fifo+0x45>
400e8afb:	9f6b91        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e8afe:	000046        	j	400e8b03 <uart_reset_rx_fifo+0x47>
400e8b01:	090c      	movi.n	a9, 0
400e8b03:	a98a      	add.n	a10, a9, a8
400e8b05:	9f6c91        	l32r	a9, 400d08b8 <_flash_cache_start+0x8a0>
400e8b08:	809a90        	add	a9, a10, a9
400e8b0b:	9f6ca1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e8b0e:	0e3a97        	bltu	a10, a9, 400e8b20 <uart_reset_rx_fifo+0x64>
400e8b11:	9f6bd1        	l32r	a13, 400d08c0 <_flash_cache_start+0x8a8>
400e8b14:	9f6cc1        	l32r	a12, 400d08c4 <_flash_cache_start+0x8ac>
400e8b17:	30a1b2        	movi	a11, 0x130
400e8b1a:	9f6ba1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e8b1d:	f23ba5        	call8	400daed8 <__assert_func>
400e8b20:	0522b6        	bltui	a2, 2, 400e8b29 <uart_reset_rx_fifo+0x6d>
400e8b23:	9f6191        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e8b26:	000046        	j	400e8b2b <uart_reset_rx_fifo+0x6f>
400e8b29:	090c      	movi.n	a9, 0
400e8b2b:	808980        	add	a8, a9, a8
400e8b2e:	0020c0        	memw
400e8b31:	002882        	l32i	a8, a8, 0
400e8b34:	9f6681        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8b37:	a08280        	addx4	a8, a2, a8
400e8b3a:	0898      	l32i.n	a9, a8, 0
400e8b3c:	0020c0        	memw
400e8b3f:	7988      	l32i.n	a8, a9, 28
400e8b41:	748080        	extui	a8, a8, 0, 8
400e8b44:	fa8856        	bnez	a8, 400e8af0 <uart_reset_rx_fifo+0x34>
400e8b47:	0020c0        	memw
400e8b4a:	1829a2        	l32i	a10, a9, 96
400e8b4d:	a4ada0        	extui	a10, a10, 13, 11
400e8b50:	0020c0        	memw
400e8b53:	182982        	l32i	a8, a9, 96
400e8b56:	a48280        	extui	a8, a8, 2, 11
400e8b59:	939a87        	bne	a10, a8, 400e8af0 <uart_reset_rx_fifo+0x34>
400e8b5c:	020c      	movi.n	a2, 0
400e8b5e:	f01d      	retw.n

400e8b60 <uart_set_word_length>:
400e8b60:	006136        	entry	a1, 48
400e8b63:	2d32b6        	bltui	a2, 3, 400e8b94 <uart_set_word_length+0x34>
400e8b66:	9b1ca5        	call8	40083d30 <esp_log_timestamp>
400e8b69:	9f4bb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8b6c:	9f5121        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8b6f:	016122        	s32i	a2, a1, 4
400e8b72:	7ca022        	movi	a2, 124
400e8b75:	006122        	s32i	a2, a1, 0
400e8b78:	f03d      	nop.n
400e8b7a:	f03d      	nop.n
400e8b7c:	f03d      	nop.n
400e8b7e:	f03d      	nop.n
400e8b80:	9f54f1        	l32r	a15, 400d08d0 <_flash_cache_start+0x8b8>
400e8b83:	0bed      	mov.n	a14, a11
400e8b85:	0add      	mov.n	a13, a10
400e8b87:	9f45c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8b8a:	01a0a2        	movi	a10, 1
400e8b8d:	9b02a5        	call8	40083bb8 <esp_log_write>
400e8b90:	f27c      	movi.n	a2, -1
400e8b92:	f01d      	retw.n
400e8b94:	2c43b6        	bltui	a3, 4, 400e8bc4 <uart_set_word_length+0x64>
400e8b97:	9b19a5        	call8	40083d30 <esp_log_timestamp>
400e8b9a:	9f3fb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8b9d:	9f4d21        	l32r	a2, 400d08d4 <_flash_cache_start+0x8bc>
400e8ba0:	016122        	s32i	a2, a1, 4
400e8ba3:	7da022        	movi	a2, 125
400e8ba6:	006122        	s32i	a2, a1, 0
400e8ba9:	f03d      	nop.n
400e8bab:	f03d      	nop.n
400e8bad:	f03d      	nop.n
400e8baf:	f03d      	nop.n
400e8bb1:	9f47f1        	l32r	a15, 400d08d0 <_flash_cache_start+0x8b8>
400e8bb4:	0bed      	mov.n	a14, a11
400e8bb6:	0add      	mov.n	a13, a10
400e8bb8:	9f39c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8bbb:	1a0c      	movi.n	a10, 1
400e8bbd:	9affa5        	call8	40083bb8 <esp_log_write>
400e8bc0:	f27c      	movi.n	a2, -1
400e8bc2:	f01d      	retw.n
400e8bc4:	9f3841        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e8bc7:	b04240        	addx8	a4, a2, a4
400e8bca:	20a440        	or	a10, a4, a4
400e8bcd:	9fec25        	call8	40088a90 <vTaskEnterCritical>
400e8bd0:	9f3f81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8bd3:	a02280        	addx4	a2, a2, a8
400e8bd6:	002292        	l32i	a9, a2, 0
400e8bd9:	0020c0        	memw
400e8bdc:	89a8      	l32i.n	a10, a9, 32
400e8bde:	143030        	extui	a3, a3, 0, 2
400e8be1:	1183e0        	slli	a8, a3, 2
400e8be4:	327c      	movi.n	a2, -13
400e8be6:	103a20        	and	a3, a10, a2
400e8be9:	203380        	or	a3, a3, a8
400e8bec:	0020c0        	memw
400e8bef:	8939      	s32i.n	a3, a9, 32
400e8bf1:	04ad      	mov.n	a10, a4
400e8bf3:	9ffde5        	call8	40088bd0 <vTaskExitCritical>
400e8bf6:	020c      	movi.n	a2, 0
400e8bf8:	f01d      	retw.n
	...

400e8bfc <uart_get_word_length>:
400e8bfc:	006136        	entry	a1, 48
400e8bff:	2d32b6        	bltui	a2, 3, 400e8c30 <uart_get_word_length+0x34>
400e8c02:	9b12e5        	call8	40083d30 <esp_log_timestamp>
400e8c05:	9f24b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8c08:	9f2a21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8c0b:	016122        	s32i	a2, a1, 4
400e8c0e:	86a022        	movi	a2, 134
400e8c11:	006122        	s32i	a2, a1, 0
400e8c14:	f03d      	nop.n
400e8c16:	f03d      	nop.n
400e8c18:	f03d      	nop.n
400e8c1a:	f03d      	nop.n
400e8c1c:	9f2ff1        	l32r	a15, 400d08d8 <_flash_cache_start+0x8c0>
400e8c1f:	0bed      	mov.n	a14, a11
400e8c21:	0add      	mov.n	a13, a10
400e8c23:	9f1ec1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8c26:	01a0a2        	movi	a10, 1
400e8c29:	9af8e5        	call8	40083bb8 <esp_log_write>
400e8c2c:	f27c      	movi.n	a2, -1
400e8c2e:	f01d      	retw.n
400e8c30:	9f2781        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8c33:	a02280        	addx4	a2, a2, a8
400e8c36:	0228      	l32i.n	a2, a2, 0
400e8c38:	0020c0        	memw
400e8c3b:	8228      	l32i.n	a2, a2, 32
400e8c3d:	142220        	extui	a2, a2, 2, 2
400e8c40:	0329      	s32i.n	a2, a3, 0
400e8c42:	020c      	movi.n	a2, 0
400e8c44:	f01d      	retw.n
	...

400e8c48 <uart_set_stop_bits>:
400e8c48:	006136        	entry	a1, 48
400e8c4b:	2d32b6        	bltui	a2, 3, 400e8c7c <uart_set_stop_bits+0x34>
400e8c4e:	9b0e25        	call8	40083d30 <esp_log_timestamp>
400e8c51:	9f11b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8c54:	9f1721        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8c57:	016122        	s32i	a2, a1, 4
400e8c5a:	8da022        	movi	a2, 141
400e8c5d:	006122        	s32i	a2, a1, 0
400e8c60:	f03d      	nop.n
400e8c62:	f03d      	nop.n
400e8c64:	f03d      	nop.n
400e8c66:	f03d      	nop.n
400e8c68:	9f1df1        	l32r	a15, 400d08dc <_flash_cache_start+0x8c4>
400e8c6b:	0bed      	mov.n	a14, a11
400e8c6d:	0add      	mov.n	a13, a10
400e8c6f:	9f0bc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8c72:	01a0a2        	movi	a10, 1
400e8c75:	9af425        	call8	40083bb8 <esp_log_write>
400e8c78:	f27c      	movi.n	a2, -1
400e8c7a:	f01d      	retw.n
400e8c7c:	2c43b6        	bltui	a3, 4, 400e8cac <uart_set_stop_bits+0x64>
400e8c7f:	9b0b25        	call8	40083d30 <esp_log_timestamp>
400e8c82:	9f05b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8c85:	9f1621        	l32r	a2, 400d08e0 <_flash_cache_start+0x8c8>
400e8c88:	016122        	s32i	a2, a1, 4
400e8c8b:	8ea022        	movi	a2, 142
400e8c8e:	006122        	s32i	a2, a1, 0
400e8c91:	f03d      	nop.n
400e8c93:	f03d      	nop.n
400e8c95:	f03d      	nop.n
400e8c97:	f03d      	nop.n
400e8c99:	9f10f1        	l32r	a15, 400d08dc <_flash_cache_start+0x8c4>
400e8c9c:	0bed      	mov.n	a14, a11
400e8c9e:	0add      	mov.n	a13, a10
400e8ca0:	9effc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8ca3:	1a0c      	movi.n	a10, 1
400e8ca5:	9af125        	call8	40083bb8 <esp_log_write>
400e8ca8:	f27c      	movi.n	a2, -1
400e8caa:	f01d      	retw.n
400e8cac:	9efe41        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e8caf:	b04240        	addx8	a4, a2, a4
400e8cb2:	20a440        	or	a10, a4, a4
400e8cb5:	9fdda5        	call8	40088a90 <vTaskEnterCritical>
400e8cb8:	1f3366        	bnei	a3, 3, 400e8cdb <uart_set_stop_bits+0x93>
400e8cbb:	9f0431        	l32r	a3, 400d08cc <_flash_cache_start+0x8b4>
400e8cbe:	a03230        	addx4	a3, a2, a3
400e8cc1:	002382        	l32i	a8, a3, 0
400e8cc4:	0020c0        	memw
400e8cc7:	112892        	l32i	a9, a8, 68
400e8cca:	04a032        	movi	a3, 4
400e8ccd:	203930        	or	a3, a9, a3
400e8cd0:	0020c0        	memw
400e8cd3:	116832        	s32i	a3, a8, 68
400e8cd6:	130c      	movi.n	a3, 1
400e8cd8:	000686        	j	400e8cf6 <uart_set_stop_bits+0xae>
400e8cdb:	9efc81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8cde:	a08280        	addx4	a8, a2, a8
400e8ce1:	002892        	l32i	a9, a8, 0
400e8ce4:	0020c0        	memw
400e8ce7:	1129a2        	l32i	a10, a9, 68
400e8cea:	fbaf82        	movi	a8, -5
400e8ced:	108a80        	and	a8, a10, a8
400e8cf0:	0020c0        	memw
400e8cf3:	116982        	s32i	a8, a9, 68
400e8cf6:	f03d      	nop.n
400e8cf8:	f03d      	nop.n
400e8cfa:	f03d      	nop.n
400e8cfc:	f03d      	nop.n
400e8cfe:	9ef381        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8d01:	a02280        	addx4	a2, a2, a8
400e8d04:	002292        	l32i	a9, a2, 0
400e8d07:	0020c0        	memw
400e8d0a:	89a8      	l32i.n	a10, a9, 32
400e8d0c:	143030        	extui	a3, a3, 0, 2
400e8d0f:	1183c0        	slli	a8, a3, 4
400e8d12:	cfaf22        	movi	a2, -49
400e8d15:	103a20        	and	a3, a10, a2
400e8d18:	203380        	or	a3, a3, a8
400e8d1b:	0020c0        	memw
400e8d1e:	8939      	s32i.n	a3, a9, 32
400e8d20:	04ad      	mov.n	a10, a4
400e8d22:	9feae5        	call8	40088bd0 <vTaskExitCritical>
400e8d25:	020c      	movi.n	a2, 0
400e8d27:	f01d      	retw.n
400e8d29:	000000        	ill

400e8d2c <uart_get_stop_bits>:
400e8d2c:	006136        	entry	a1, 48
400e8d2f:	2d32b6        	bltui	a2, 3, 400e8d60 <uart_get_stop_bits+0x34>
400e8d32:	9affe5        	call8	40083d30 <esp_log_timestamp>
400e8d35:	9ed8b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8d38:	9ede21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8d3b:	016122        	s32i	a2, a1, 4
400e8d3e:	9fa022        	movi	a2, 159
400e8d41:	006122        	s32i	a2, a1, 0
400e8d44:	f03d      	nop.n
400e8d46:	f03d      	nop.n
400e8d48:	f03d      	nop.n
400e8d4a:	f03d      	nop.n
400e8d4c:	9ee6f1        	l32r	a15, 400d08e4 <_flash_cache_start+0x8cc>
400e8d4f:	0bed      	mov.n	a14, a11
400e8d51:	0add      	mov.n	a13, a10
400e8d53:	9ed2c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8d56:	01a0a2        	movi	a10, 1
400e8d59:	9ae5e5        	call8	40083bb8 <esp_log_write>
400e8d5c:	f27c      	movi.n	a2, -1
400e8d5e:	f01d      	retw.n
400e8d60:	9edb81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8d63:	a02280        	addx4	a2, a2, a8
400e8d66:	0228      	l32i.n	a2, a2, 0
400e8d68:	0020c0        	memw
400e8d6b:	112282        	l32i	a8, a2, 68
400e8d6e:	126827        	bbci	a8, 2, 400e8d84 <uart_get_stop_bits+0x58>
400e8d71:	0020c0        	memw
400e8d74:	8288      	l32i.n	a8, a2, 32
400e8d76:	148480        	extui	a8, a8, 4, 2
400e8d79:	071866        	bnei	a8, 1, 400e8d84 <uart_get_stop_bits+0x58>
400e8d7c:	320c      	movi.n	a2, 3
400e8d7e:	0329      	s32i.n	a2, a3, 0
400e8d80:	020c      	movi.n	a2, 0
400e8d82:	f01d      	retw.n
400e8d84:	0020c0        	memw
400e8d87:	8228      	l32i.n	a2, a2, 32
400e8d89:	142420        	extui	a2, a2, 4, 2
400e8d8c:	0329      	s32i.n	a2, a3, 0
400e8d8e:	020c      	movi.n	a2, 0
400e8d90:	f01d      	retw.n
	...

400e8d94 <uart_set_parity>:
400e8d94:	006136        	entry	a1, 48
400e8d97:	2e32b6        	bltui	a2, 3, 400e8dc9 <uart_set_parity+0x35>
400e8d9a:	9af965        	call8	40083d30 <esp_log_timestamp>
400e8d9d:	9ebeb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8da0:	9ec421        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8da3:	016122        	s32i	a2, a1, 4
400e8da6:	aba022        	movi	a2, 171
400e8da9:	006122        	s32i	a2, a1, 0
400e8dac:	f03d      	nop.n
400e8dae:	f03d      	nop.n
400e8db0:	f03d      	nop.n
400e8db2:	f03d      	nop.n
400e8db4:	9ecdf1        	l32r	a15, 400d08e8 <_flash_cache_start+0x8d0>
400e8db7:	0bed      	mov.n	a14, a11
400e8db9:	0add      	mov.n	a13, a10
400e8dbb:	9eb8c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8dbe:	01a0a2        	movi	a10, 1
400e8dc1:	9adf65        	call8	40083bb8 <esp_log_write>
400e8dc4:	f27c      	movi.n	a2, -1
400e8dc6:	f01d      	retw.n
400e8dc8:	b64100        	lsi	f0, a1, 0x2d8
400e8dcb:	9e          	.byte 0x9e
400e8dcc:	b04240        	addx8	a4, a2, a4
400e8dcf:	20a440        	or	a10, a4, a4
400e8dd2:	9fcbe5        	call8	40088a90 <vTaskEnterCritical>
400e8dd5:	9ebd81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8dd8:	a02280        	addx4	a2, a2, a8
400e8ddb:	002222        	l32i	a2, a2, 0
400e8dde:	0020c0        	memw
400e8de1:	0822a2        	l32i	a10, a2, 32
400e8de4:	049030        	extui	a9, a3, 0, 1
400e8de7:	e87c      	movi.n	a8, -2
400e8de9:	108a80        	and	a8, a10, a8
400e8dec:	208890        	or	a8, a8, a9
400e8def:	0020c0        	memw
400e8df2:	8289      	s32i.n	a8, a2, 32
400e8df4:	f03d      	nop.n
400e8df6:	f03d      	nop.n
400e8df8:	f03d      	nop.n
400e8dfa:	f03d      	nop.n
400e8dfc:	0020c0        	memw
400e8dff:	8298      	l32i.n	a9, a2, 32
400e8e01:	043130        	extui	a3, a3, 1, 1
400e8e04:	1183f0        	slli	a8, a3, 1
400e8e07:	d37c      	movi.n	a3, -3
400e8e09:	103930        	and	a3, a9, a3
400e8e0c:	203380        	or	a3, a3, a8
400e8e0f:	0020c0        	memw
400e8e12:	8239      	s32i.n	a3, a2, 32
400e8e14:	04ad      	mov.n	a10, a4
400e8e16:	9fdba5        	call8	40088bd0 <vTaskExitCritical>
400e8e19:	020c      	movi.n	a2, 0
400e8e1b:	f01d      	retw.n
400e8e1d:	000000        	ill

400e8e20 <uart_get_parity>:
400e8e20:	006136        	entry	a1, 48
400e8e23:	2d32b6        	bltui	a2, 3, 400e8e54 <uart_get_parity+0x34>
400e8e26:	9af0a5        	call8	40083d30 <esp_log_timestamp>
400e8e29:	9e9bb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8e2c:	9ea121        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8e2f:	016122        	s32i	a2, a1, 4
400e8e32:	b5a022        	movi	a2, 181
400e8e35:	006122        	s32i	a2, a1, 0
400e8e38:	f03d      	nop.n
400e8e3a:	f03d      	nop.n
400e8e3c:	f03d      	nop.n
400e8e3e:	f03d      	nop.n
400e8e40:	9eabf1        	l32r	a15, 400d08ec <_flash_cache_start+0x8d4>
400e8e43:	0bed      	mov.n	a14, a11
400e8e45:	0add      	mov.n	a13, a10
400e8e47:	9e95c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8e4a:	01a0a2        	movi	a10, 1
400e8e4d:	9ad6a5        	call8	40083bb8 <esp_log_write>
400e8e50:	f27c      	movi.n	a2, -1
400e8e52:	f01d      	retw.n
400e8e54:	9e9e81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8e57:	a02280        	addx4	a2, a2, a8
400e8e5a:	0228      	l32i.n	a2, a2, 0
400e8e5c:	0020c0        	memw
400e8e5f:	8228      	l32i.n	a2, a2, 32
400e8e61:	136217        	bbci	a2, 1, 400e8e78 <uart_get_parity+0x58>
400e8e64:	086207        	bbci	a2, 0, 400e8e70 <uart_get_parity+0x50>
400e8e67:	320c      	movi.n	a2, 3
400e8e69:	0329      	s32i.n	a2, a3, 0
400e8e6b:	020c      	movi.n	a2, 0
400e8e6d:	f01d      	retw.n
400e8e6f:	220c00        	orb	b0, b12, b0
400e8e72:	0329      	s32i.n	a2, a3, 0
400e8e74:	020c      	movi.n	a2, 0
400e8e76:	f01d      	retw.n
400e8e78:	020c      	movi.n	a2, 0
400e8e7a:	0329      	s32i.n	a2, a3, 0
400e8e7c:	f01d      	retw.n
	...

400e8e80 <uart_set_baudrate>:
400e8e80:	006136        	entry	a1, 48
400e8e83:	2d32b6        	bltui	a2, 3, 400e8eb4 <uart_set_baudrate+0x34>
400e8e86:	9aeaa5        	call8	40083d30 <esp_log_timestamp>
400e8e89:	9e83b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8e8c:	9e8921        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8e8f:	016122        	s32i	a2, a1, 4
400e8e92:	c5a022        	movi	a2, 197
400e8e95:	006122        	s32i	a2, a1, 0
400e8e98:	f03d      	nop.n
400e8e9a:	f03d      	nop.n
400e8e9c:	f03d      	nop.n
400e8e9e:	f03d      	nop.n
400e8ea0:	9e94f1        	l32r	a15, 400d08f0 <_flash_cache_start+0x8d8>
400e8ea3:	0bed      	mov.n	a14, a11
400e8ea5:	0add      	mov.n	a13, a10
400e8ea7:	9e7dc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8eaa:	01a0a2        	movi	a10, 1
400e8ead:	9ad0a5        	call8	40083bb8 <esp_log_write>
400e8eb0:	f27c      	movi.n	a2, -1
400e8eb2:	f01d      	retw.n
400e8eb4:	9e7c41        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e8eb7:	b04240        	addx8	a4, a2, a4
400e8eba:	20a440        	or	a10, a4, a4
400e8ebd:	9fbd25        	call8	40088a90 <vTaskEnterCritical>
400e8ec0:	9e8381        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e8ec3:	a02280        	addx4	a2, a2, a8
400e8ec6:	002222        	l32i	a2, a2, 0
400e8ec9:	0020c0        	memw
400e8ecc:	8288      	l32i.n	a8, a2, 32
400e8ece:	0678b7        	bbci	a8, 27, 400e8ed8 <uart_set_baudrate+0x58>
400e8ed1:	982165        	call8	400810e8 <esp_clk_apb_freq>
400e8ed4:	0000c6        	j	400e8edb <uart_set_baudrate+0x5b>
400e8ed7:	83a100        	moveqz	a10, a1, a0
400e8eda:	c09d      	lsi	f9, a0, 0
400e8edc:	11aa      	add.n	a1, a1, a10
400e8ede:	c23a30        	quou	a3, a10, a3
400e8ee1:	f80c      	movi.n	a8, 15
400e8ee3:	42b837        	bgeu	a8, a3, 400e8f29 <uart_set_baudrate+0xa9>
400e8ee6:	418430        	srli	a8, a3, 4
400e8ee9:	0020c0        	memw
400e8eec:	52a8      	l32i.n	a10, a2, 20
400e8eee:	9dd291        	l32r	a9, 400d0638 <_flash_cache_start+0x620>
400e8ef1:	109890        	and	a9, a8, a9
400e8ef4:	9dcf81        	l32r	a8, 400d0630 <_flash_cache_start+0x618>
400e8ef7:	108a80        	and	a8, a10, a8
400e8efa:	208890        	or	a8, a8, a9
400e8efd:	0020c0        	memw
400e8f00:	5289      	s32i.n	a8, a2, 20
400e8f02:	f03d      	nop.n
400e8f04:	f03d      	nop.n
400e8f06:	f03d      	nop.n
400e8f08:	f03d      	nop.n
400e8f0a:	0020c0        	memw
400e8f0d:	5288      	l32i.n	a8, a2, 20
400e8f0f:	343030        	extui	a3, a3, 0, 4
400e8f12:	01a3c0        	slli	a10, a3, 20
400e8f15:	9e7731        	l32r	a3, 400d08f4 <_flash_cache_start+0x8dc>
400e8f18:	103830        	and	a3, a8, a3
400e8f1b:	2033a0        	or	a3, a3, a10
400e8f1e:	0020c0        	memw
400e8f21:	5239      	s32i.n	a3, a2, 20
400e8f23:	020c      	movi.n	a2, 0
400e8f25:	0000c6        	j	400e8f2c <uart_set_baudrate+0xac>
400e8f28:	a12200        	sll	a2, a2
400e8f2b:	04ad02        	movi	a0, 0xfffffd04
400e8f2e:	9fca25        	call8	40088bd0 <vTaskExitCritical>
400e8f31:	f01d      	retw.n
	...

400e8f34 <uart_get_baudrate>:
400e8f34:	006136        	entry	a1, 48
400e8f37:	2e32b6        	bltui	a2, 3, 400e8f69 <uart_get_baudrate+0x35>
400e8f3a:	9adf65        	call8	40083d30 <esp_log_timestamp>
400e8f3d:	9e56b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8f40:	9e5c21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8f43:	016122        	s32i	a2, a1, 4
400e8f46:	dda022        	movi	a2, 221
400e8f49:	006122        	s32i	a2, a1, 0
400e8f4c:	f03d      	nop.n
400e8f4e:	f03d      	nop.n
400e8f50:	f03d      	nop.n
400e8f52:	f03d      	nop.n
400e8f54:	9e69f1        	l32r	a15, 400d08f8 <_flash_cache_start+0x8e0>
400e8f57:	0bed      	mov.n	a14, a11
400e8f59:	0add      	mov.n	a13, a10
400e8f5b:	9e50c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8f5e:	01a0a2        	movi	a10, 1
400e8f61:	9ac565        	call8	40083bb8 <esp_log_write>
400e8f64:	f27c      	movi.n	a2, -1
400e8f66:	f01d      	retw.n
400e8f68:	4e4100        	f64rnd	a4, a1, a0, 0
400e8f6b:	9e          	.byte 0x9e
400e8f6c:	b04240        	addx8	a4, a2, a4
400e8f6f:	20a440        	or	a10, a4, a4
400e8f72:	9fb1e5        	call8	40088a90 <vTaskEnterCritical>
400e8f75:	9e5551        	l32r	a5, 400d08cc <_flash_cache_start+0x8b4>
400e8f78:	a02250        	addx4	a2, a2, a5
400e8f7b:	002252        	l32i	a5, a2, 0
400e8f7e:	0020c0        	memw
400e8f81:	5588      	l32i.n	a8, a5, 20
400e8f83:	9dad21        	l32r	a2, 400d0638 <_flash_cache_start+0x620>
400e8f86:	102820        	and	a2, a8, a2
400e8f89:	1182c0        	slli	a8, a2, 4
400e8f8c:	0020c0        	memw
400e8f8f:	5528      	l32i.n	a2, a5, 20
400e8f91:	352420        	extui	a2, a2, 20, 4
400e8f94:	202280        	or	a2, a2, a8
400e8f97:	04ad      	mov.n	a10, a4
400e8f99:	9fc365        	call8	40088bd0 <vTaskExitCritical>
400e8f9c:	9814a5        	call8	400810e8 <esp_clk_apb_freq>
400e8f9f:	0020c0        	memw
400e8fa2:	8548      	l32i.n	a4, a5, 32
400e8fa4:	02f4b7        	bbsi	a4, 27, 400e8faa <uart_get_baudrate+0x76>
400e8fa7:	9d4fa1        	l32r	a10, 400d04e4 <_flash_cache_start+0x4cc>
400e8faa:	11aac0        	slli	a10, a10, 4
400e8fad:	c22a20        	quou	a2, a10, a2
400e8fb0:	0329      	s32i.n	a2, a3, 0
400e8fb2:	020c      	movi.n	a2, 0
400e8fb4:	f01d      	retw.n
	...

400e8fb8 <uart_enable_intr_mask>:
400e8fb8:	006136        	entry	a1, 48
400e8fbb:	2d32b6        	bltui	a2, 3, 400e8fec <uart_enable_intr_mask+0x34>
400e8fbe:	9ad725        	call8	40083d30 <esp_log_timestamp>
400e8fc1:	9e35b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e8fc4:	9e3b21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e8fc7:	016122        	s32i	a2, a1, 4
400e8fca:	3fa122        	movi	a2, 0x13f
400e8fcd:	006122        	s32i	a2, a1, 0
400e8fd0:	f03d      	nop.n
400e8fd2:	f03d      	nop.n
400e8fd4:	f03d      	nop.n
400e8fd6:	f03d      	nop.n
400e8fd8:	9e49f1        	l32r	a15, 400d08fc <_flash_cache_start+0x8e4>
400e8fdb:	0bed      	mov.n	a14, a11
400e8fdd:	0add      	mov.n	a13, a10
400e8fdf:	9e2fc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e8fe2:	01a0a2        	movi	a10, 1
400e8fe5:	9abd25        	call8	40083bb8 <esp_log_write>
400e8fe8:	f27c      	movi.n	a2, -1
400e8fea:	f01d      	retw.n
400e8fec:	9e2e41        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e8fef:	b04240        	addx8	a4, a2, a4
400e8ff2:	04ad      	mov.n	a10, a4
400e8ff4:	9fa9a5        	call8	40088a90 <vTaskEnterCritical>
400e8ff7:	9e2f81        	l32r	a8, 400d08b4 <_flash_cache_start+0x89c>
400e8ffa:	828a      	add.n	a8, a2, a8
400e8ffc:	118800        	slli	a8, a8, 16
400e8fff:	0522b6        	bltui	a2, 2, 400e9008 <uart_enable_intr_mask+0x50>
400e9002:	9e2991        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e9005:	000086        	j	400e900b <uart_enable_intr_mask+0x53>
400e9008:	00a092        	movi	a9, 0
400e900b:	80a980        	add	a10, a9, a8
400e900e:	9e3c91        	l32r	a9, 400d0900 <_flash_cache_start+0x8e8>
400e9011:	809a90        	add	a9, a10, a9
400e9014:	9e2aa1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e9017:	0e3a97        	bltu	a10, a9, 400e9029 <uart_enable_intr_mask+0x71>
400e901a:	9e3ad1        	l32r	a13, 400d0904 <_flash_cache_start+0x8ec>
400e901d:	9e3ac1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e9020:	41a1b2        	movi	a11, 0x141
400e9023:	9e29a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e9026:	f1eb25        	call8	400daed8 <__assert_func>
400e9029:	0522b6        	bltui	a2, 2, 400e9032 <uart_enable_intr_mask+0x7a>
400e902c:	9e1f91        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e902f:	000046        	j	400e9034 <uart_enable_intr_mask+0x7c>
400e9032:	090c      	movi.n	a9, 0
400e9034:	a98a      	add.n	a10, a9, a8
400e9036:	9e3291        	l32r	a9, 400d0900 <_flash_cache_start+0x8e8>
400e9039:	9a9a      	add.n	a9, a10, a9
400e903b:	9e20a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e903e:	0e3a97        	bltu	a10, a9, 400e9050 <uart_enable_intr_mask+0x98>
400e9041:	9e32d1        	l32r	a13, 400d090c <_flash_cache_start+0x8f4>
400e9044:	9e31c1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e9047:	41a1b2        	movi	a11, 0x141
400e904a:	9e1fa1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e904d:	f1e8a5        	call8	400daed8 <__assert_func>
400e9050:	0522b6        	bltui	a2, 2, 400e9059 <uart_enable_intr_mask+0xa1>
400e9053:	9e1591        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e9056:	000046        	j	400e905b <uart_enable_intr_mask+0xa3>
400e9059:	090c      	movi.n	a9, 0
400e905b:	b98a      	add.n	a11, a9, a8
400e905d:	0522b6        	bltui	a2, 2, 400e9066 <uart_enable_intr_mask+0xae>
400e9060:	9e1291        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e9063:	000046        	j	400e9068 <uart_enable_intr_mask+0xb0>
400e9066:	090c      	movi.n	a9, 0
400e9068:	a98a      	add.n	a10, a9, a8
400e906a:	9e2591        	l32r	a9, 400d0900 <_flash_cache_start+0x8e8>
400e906d:	9a9a      	add.n	a9, a10, a9
400e906f:	9e13a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e9072:	0e3a97        	bltu	a10, a9, 400e9084 <uart_enable_intr_mask+0xcc>
400e9075:	9e26d1        	l32r	a13, 400d0910 <_flash_cache_start+0x8f8>
400e9078:	9e24c1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e907b:	41a1b2        	movi	a11, 0x141
400e907e:	9e12a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e9081:	f1e565        	call8	400daed8 <__assert_func>
400e9084:	0522b6        	bltui	a2, 2, 400e908d <uart_enable_intr_mask+0xd5>
400e9087:	9e0891        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e908a:	000046        	j	400e908f <uart_enable_intr_mask+0xd7>
400e908d:	090c      	movi.n	a9, 0
400e908f:	998a      	add.n	a9, a9, a8
400e9091:	0020c0        	memw
400e9094:	4998      	l32i.n	a9, a9, 16
400e9096:	209930        	or	a9, a9, a3
400e9099:	0020c0        	memw
400e909c:	4b99      	s32i.n	a9, a11, 16
400e909e:	0e22b6        	bltui	a2, 2, 400e90b0 <uart_enable_intr_mask+0xf8>
400e90a1:	f03d      	nop.n
400e90a3:	f03d      	nop.n
400e90a5:	f03d      	nop.n
400e90a7:	f03d      	nop.n
400e90a9:	9dff91        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e90ac:	0000c6        	j	400e90b3 <uart_enable_intr_mask+0xfb>
400e90af:	a09200        	addx4	a9, a2, a0
400e90b2:	a98000        	lsi	f0, a0, 0x2a4
400e90b5:	179180        	lsi	f8, a1, 92
400e90b8:	9e          	.byte 0x9e
400e90b9:	809a90        	add	a9, a10, a9
400e90bc:	9e00a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e90bf:	0e3a97        	bltu	a10, a9, 400e90d1 <uart_enable_intr_mask+0x119>
400e90c2:	9e15d1        	l32r	a13, 400d0918 <_flash_cache_start+0x900>
400e90c5:	9e10c1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e90c8:	42a1b2        	movi	a11, 0x142
400e90cb:	9dffa1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e90ce:	f1e0a5        	call8	400daed8 <__assert_func>
400e90d1:	0522b6        	bltui	a2, 2, 400e90da <uart_enable_intr_mask+0x122>
400e90d4:	9df591        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e90d7:	000046        	j	400e90dc <uart_enable_intr_mask+0x124>
400e90da:	090c      	movi.n	a9, 0
400e90dc:	a98a      	add.n	a10, a9, a8
400e90de:	9e0d91        	l32r	a9, 400d0914 <_flash_cache_start+0x8fc>
400e90e1:	9a9a      	add.n	a9, a10, a9
400e90e3:	9df6a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e90e6:	0e3a97        	bltu	a10, a9, 400e90f8 <uart_enable_intr_mask+0x140>
400e90e9:	9e0cd1        	l32r	a13, 400d091c <_flash_cache_start+0x904>
400e90ec:	9e07c1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e90ef:	42a1b2        	movi	a11, 0x142
400e90f2:	9df5a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e90f5:	f1de25        	call8	400daed8 <__assert_func>
400e90f8:	0522b6        	bltui	a2, 2, 400e9101 <uart_enable_intr_mask+0x149>
400e90fb:	9debb1        	l32r	a11, 400d08a8 <_flash_cache_start+0x890>
400e90fe:	000046        	j	400e9103 <uart_enable_intr_mask+0x14b>
400e9101:	0b0c      	movi.n	a11, 0
400e9103:	bb8a      	add.n	a11, a11, a8
400e9105:	0522b6        	bltui	a2, 2, 400e910e <uart_enable_intr_mask+0x156>
400e9108:	9de891        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e910b:	000046        	j	400e9110 <uart_enable_intr_mask+0x158>
400e910e:	090c      	movi.n	a9, 0
400e9110:	a98a      	add.n	a10, a9, a8
400e9112:	9e0091        	l32r	a9, 400d0914 <_flash_cache_start+0x8fc>
400e9115:	9a9a      	add.n	a9, a10, a9
400e9117:	9de9a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e911a:	0e3a97        	bltu	a10, a9, 400e912c <uart_enable_intr_mask+0x174>
400e911d:	9e00d1        	l32r	a13, 400d0920 <_flash_cache_start+0x908>
400e9120:	9dfac1        	l32r	a12, 400d0908 <_flash_cache_start+0x8f0>
400e9123:	42a1b2        	movi	a11, 0x142
400e9126:	9de8a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e9129:	f1dae5        	call8	400daed8 <__assert_func>
400e912c:	0522b6        	bltui	a2, 2, 400e9135 <uart_enable_intr_mask+0x17d>
400e912f:	9dde21        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e9132:	000086        	j	400e9138 <uart_enable_intr_mask+0x180>
400e9135:	00a022        	movi	a2, 0
400e9138:	808280        	add	a8, a2, a8
400e913b:	0020c0        	memw
400e913e:	032822        	l32i	a2, a8, 12
400e9141:	203320        	or	a3, a3, a2
400e9144:	0020c0        	memw
400e9147:	3b39      	s32i.n	a3, a11, 12
400e9149:	04ad      	mov.n	a10, a4
400e914b:	9fa865        	call8	40088bd0 <vTaskExitCritical>
400e914e:	020c      	movi.n	a2, 0
400e9150:	f01d      	retw.n
	...

400e9154 <uart_disable_intr_mask>:
400e9154:	006136        	entry	a1, 48
400e9157:	2d32b6        	bltui	a2, 3, 400e9188 <uart_disable_intr_mask+0x34>
400e915a:	9abd65        	call8	40083d30 <esp_log_timestamp>
400e915d:	9dceb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e9160:	9dd421        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e9163:	016122        	s32i	a2, a1, 4
400e9166:	49a122        	movi	a2, 0x149
400e9169:	006122        	s32i	a2, a1, 0
400e916c:	f03d      	nop.n
400e916e:	f03d      	nop.n
400e9170:	f03d      	nop.n
400e9172:	f03d      	nop.n
400e9174:	9decf1        	l32r	a15, 400d0924 <_flash_cache_start+0x90c>
400e9177:	0bed      	mov.n	a14, a11
400e9179:	0add      	mov.n	a13, a10
400e917b:	9dc8c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e917e:	01a0a2        	movi	a10, 1
400e9181:	9aa365        	call8	40083bb8 <esp_log_write>
400e9184:	f27c      	movi.n	a2, -1
400e9186:	f01d      	retw.n
400e9188:	9dc741        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e918b:	b04240        	addx8	a4, a2, a4
400e918e:	04ad      	mov.n	a10, a4
400e9190:	9f8fe5        	call8	40088a90 <vTaskEnterCritical>
400e9193:	9dc881        	l32r	a8, 400d08b4 <_flash_cache_start+0x89c>
400e9196:	828a      	add.n	a8, a2, a8
400e9198:	118800        	slli	a8, a8, 16
400e919b:	0522b6        	bltui	a2, 2, 400e91a4 <uart_disable_intr_mask+0x50>
400e919e:	9dc291        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e91a1:	000086        	j	400e91a7 <uart_disable_intr_mask+0x53>
400e91a4:	00a092        	movi	a9, 0
400e91a7:	80a980        	add	a10, a9, a8
400e91aa:	9dda91        	l32r	a9, 400d0914 <_flash_cache_start+0x8fc>
400e91ad:	809a90        	add	a9, a10, a9
400e91b0:	9dc3a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e91b3:	0e3a97        	bltu	a10, a9, 400e91c5 <uart_disable_intr_mask+0x71>
400e91b6:	9ddcd1        	l32r	a13, 400d0928 <_flash_cache_start+0x910>
400e91b9:	9ddcc1        	l32r	a12, 400d092c <_flash_cache_start+0x914>
400e91bc:	4ba1b2        	movi	a11, 0x14b
400e91bf:	9dc2a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e91c2:	f1d165        	call8	400daed8 <__assert_func>
400e91c5:	0522b6        	bltui	a2, 2, 400e91ce <uart_disable_intr_mask+0x7a>
400e91c8:	9db891        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e91cb:	000046        	j	400e91d0 <uart_disable_intr_mask+0x7c>
400e91ce:	090c      	movi.n	a9, 0
400e91d0:	a98a      	add.n	a10, a9, a8
400e91d2:	9dd091        	l32r	a9, 400d0914 <_flash_cache_start+0x8fc>
400e91d5:	9a9a      	add.n	a9, a10, a9
400e91d7:	9db9a1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e91da:	0e3a97        	bltu	a10, a9, 400e91ec <uart_disable_intr_mask+0x98>
400e91dd:	9dcfd1        	l32r	a13, 400d091c <_flash_cache_start+0x904>
400e91e0:	9dd3c1        	l32r	a12, 400d092c <_flash_cache_start+0x914>
400e91e3:	4ba1b2        	movi	a11, 0x14b
400e91e6:	9db8a1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e91e9:	f1cee5        	call8	400daed8 <__assert_func>
400e91ec:	0522b6        	bltui	a2, 2, 400e91f5 <uart_disable_intr_mask+0xa1>
400e91ef:	9dae91        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e91f2:	000046        	j	400e91f7 <uart_disable_intr_mask+0xa3>
400e91f5:	090c      	movi.n	a9, 0
400e91f7:	b98a      	add.n	a11, a9, a8
400e91f9:	0522b6        	bltui	a2, 2, 400e9202 <uart_disable_intr_mask+0xae>
400e91fc:	9dab91        	l32r	a9, 400d08a8 <_flash_cache_start+0x890>
400e91ff:	000046        	j	400e9204 <uart_disable_intr_mask+0xb0>
400e9202:	090c      	movi.n	a9, 0
400e9204:	a98a      	add.n	a10, a9, a8
400e9206:	9dc391        	l32r	a9, 400d0914 <_flash_cache_start+0x8fc>
400e9209:	9a9a      	add.n	a9, a10, a9
400e920b:	9daca1        	l32r	a10, 400d08bc <_flash_cache_start+0x8a4>
400e920e:	0e3a97        	bltu	a10, a9, 400e9220 <uart_disable_intr_mask+0xcc>
400e9211:	9dc3d1        	l32r	a13, 400d0920 <_flash_cache_start+0x908>
400e9214:	9dc6c1        	l32r	a12, 400d092c <_flash_cache_start+0x914>
400e9217:	4ba1b2        	movi	a11, 0x14b
400e921a:	9daba1        	l32r	a10, 400d08c8 <_flash_cache_start+0x8b0>
400e921d:	f1cba5        	call8	400daed8 <__assert_func>
400e9220:	0622b6        	bltui	a2, 2, 400e922a <uart_disable_intr_mask+0xd6>
400e9223:	9da121        	l32r	a2, 400d08a8 <_flash_cache_start+0x890>
400e9226:	0000c6        	j	400e922d <uart_disable_intr_mask+0xd9>
400e9229:	a02200        	addx4	a2, a2, a0
400e922c:	828000        	mull	a8, a0, a0
400e922f:	20c080        	or	a12, a0, a8
400e9232:	282200        	lsi	f0, a2, 160
400e9235:	f87c03        	lsi	f0, a12, 0x3e0
400e9238:	303830        	xor	a3, a8, a3
400e923b:	103230        	and	a3, a2, a3
400e923e:	0020c0        	memw
400e9241:	3b39      	s32i.n	a3, a11, 12
400e9243:	04ad      	mov.n	a10, a4
400e9245:	9f98a5        	call8	40088bd0 <vTaskExitCritical>
400e9248:	020c      	movi.n	a2, 0
400e924a:	f01d      	retw.n

400e924c <uart_enable_rx_intr>:
400e924c:	004136        	entry	a1, 32
400e924f:	01a1b2        	movi	a11, 0x101
400e9252:	20a220        	or	a10, a2, a2
400e9255:	ffd625        	call8	400e8fb8 <uart_enable_intr_mask>
400e9258:	202aa0        	or	a2, a10, a10
400e925b:	000090        	retw
	...

400e9260 <uart_disable_rx_intr>:
400e9260:	004136        	entry	a1, 32
400e9263:	01a1b2        	movi	a11, 0x101
400e9266:	20a220        	or	a10, a2, a2
400e9269:	ffeea5        	call8	400e9154 <uart_disable_intr_mask>
400e926c:	202aa0        	or	a2, a10, a10
400e926f:	000090        	retw
	...

400e9274 <uart_wait_tx_done>:
400e9274:	008136        	entry	a1, 64
400e9277:	2e32b6        	bltui	a2, 3, 400e92a9 <uart_wait_tx_done+0x35>
400e927a:	9aab65        	call8	40083d30 <esp_log_timestamp>
400e927d:	9d86b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e9280:	9d8c21        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e9283:	016122        	s32i	a2, a1, 4
400e9286:	f3a322        	movi	a2, 0x3f3
400e9289:	006122        	s32i	a2, a1, 0
400e928c:	f03d      	nop.n
400e928e:	f03d      	nop.n
400e9290:	f03d      	nop.n
400e9292:	f03d      	nop.n
400e9294:	9da7f1        	l32r	a15, 400d0930 <_flash_cache_start+0x918>
400e9297:	0bed      	mov.n	a14, a11
400e9299:	0add      	mov.n	a13, a10
400e929b:	9d80c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e929e:	01a0a2        	movi	a10, 1
400e92a1:	9a9165        	call8	40083bb8 <esp_log_write>
400e92a4:	f27c      	movi.n	a2, -1
400e92a6:	f01d      	retw.n
400e92a8:	798100        	lsi	f0, a1, 0x1e4
400e92ab:	809d      	lsi	f9, a0, 0
400e92ad:	82a082        	movi	a8, 130
400e92b0:	0028      	l32i.n	a2, a0, 0
400e92b2:	02a856        	bnez	a8, 400e92e0 <uart_wait_tx_done+0x6c>
400e92b5:	9aa7a5        	call8	40083d30 <esp_log_timestamp>
400e92b8:	9d78b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e92bb:	9d7921        	l32r	a2, 400d08a0 <_flash_cache_start+0x888>
400e92be:	1129      	s32i.n	a2, a1, 4
400e92c0:	f4a322        	movi	a2, 0x3f4
400e92c3:	0129      	s32i.n	a2, a1, 0
400e92c5:	f03d      	nop.n
400e92c7:	f03d      	nop.n
400e92c9:	f03d      	nop.n
400e92cb:	f03d      	nop.n
400e92cd:	9d98f1        	l32r	a15, 400d0930 <_flash_cache_start+0x918>
400e92d0:	0bed      	mov.n	a14, a11
400e92d2:	0add      	mov.n	a13, a10
400e92d4:	9d72c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e92d7:	1a0c      	movi.n	a10, 1
400e92d9:	9a8de5        	call8	40083bb8 <esp_log_write>
400e92dc:	f27c      	movi.n	a2, -1
400e92de:	f01d      	retw.n
400e92e0:	9f35a5        	call8	4008863c <xTaskGetTickCount>
400e92e3:	0a4d      	mov.n	a4, a10
400e92e5:	9d6a81        	l32r	a8, 400d0890 <_flash_cache_start+0x878>
400e92e8:	a08280        	addx4	a8, a2, a8
400e92eb:	0888      	l32i.n	a8, a8, 0
400e92ed:	0d0c      	movi.n	a13, 0
400e92ef:	03cd      	mov.n	a12, a3
400e92f1:	20bdd0        	or	a11, a13, a13
400e92f4:	3428a2        	l32i	a10, a8, 208
400e92f7:	9e86e5        	call8	40087b64 <xQueueGenericReceive>
400e92fa:	0caa16        	beqz	a10, 400e93c8 <uart_wait_tx_done+0x154>
400e92fd:	1152e0        	slli	a5, a2, 2
400e9300:	9d6481        	l32r	a8, 400d0890 <_flash_cache_start+0x878>
400e9303:	885a      	add.n	a8, a8, a5
400e9305:	0888      	l32i.n	a8, a8, 0
400e9307:	0d0c      	movi.n	a13, 0
400e9309:	0dcd      	mov.n	a12, a13
400e930b:	0dbd      	mov.n	a11, a13
400e930d:	3528a2        	l32i	a10, a8, 212
400e9310:	9e8525        	call8	40087b64 <xQueueGenericReceive>
400e9313:	9d6e81        	l32r	a8, 400d08cc <_flash_cache_start+0x8b4>
400e9316:	585a      	add.n	a5, a8, a5
400e9318:	0558      	l32i.n	a5, a5, 0
400e931a:	0020c0        	memw
400e931d:	7558      	l32i.n	a5, a5, 28
400e931f:	0020c0        	memw
400e9322:	7159      	s32i.n	a5, a1, 28
400e9324:	f03d      	nop.n
400e9326:	f03d      	nop.n
400e9328:	f03d      	nop.n
400e932a:	f03d      	nop.n
400e932c:	0020c0        	memw
400e932f:	7158      	l32i.n	a5, a1, 28
400e9331:	755050        	extui	a5, a5, 16, 8
400e9334:	15ec      	bnez.n	a5, 400e9359 <uart_wait_tx_done+0xe5>
400e9336:	0020c0        	memw
400e9339:	7158      	l32i.n	a5, a1, 28
400e933b:	355850        	extui	a5, a5, 24, 4
400e933e:	75dc      	bnez.n	a5, 400e9359 <uart_wait_tx_done+0xe5>
400e9340:	9d5431        	l32r	a3, 400d0890 <_flash_cache_start+0x878>
400e9343:	a02230        	addx4	a2, a2, a3
400e9346:	0228      	l32i.n	a2, a2, 0
400e9348:	0d0c      	movi.n	a13, 0
400e934a:	0dcd      	mov.n	a12, a13
400e934c:	0dbd      	mov.n	a11, a13
400e934e:	3422a2        	l32i	a10, a2, 208
400e9351:	9e4925        	call8	400877e4 <xQueueGenericSend>
400e9354:	020c      	movi.n	a2, 0
400e9356:	f01d      	retw.n
400e9358:	75b100        	extui	a11, a0, 17, 8
400e935b:	209c      	beqz.n	a0, 400e9371 <uart_wait_tx_done+0xfd>
400e935d:	a520a2        	l32i	a10, a0, 0x294
400e9360:	a5ffc5        	call0	4008f360 <_iram_end+0x180c>
400e9363:	9f2d      	lsi	f2, a15, 60
400e9365:	c05a40        	sub	a5, a10, a4
400e9368:	093357        	bltu	a3, a5, 400e9375 <uart_wait_tx_done+0x101>
400e936b:	c0c4a0        	sub	a12, a4, a10
400e936e:	80c3c0        	add	a12, a3, a12
400e9371:	0000c6        	j	400e9378 <uart_wait_tx_done+0x104>
400e9374:	a0c200        	addx4	a12, a2, a0
400e9377:	463100        	lsi	f0, a1, 0x118
400e937a:	309d      	lsi	f9, a0, 0
400e937c:	38a032        	movi	a3, 56
400e937f:	0d0c03        	lsi	f0, a12, 52
400e9382:	0dbd      	mov.n	a11, a13
400e9384:	3523a2        	l32i	a10, a3, 212
400e9387:	9e7de5        	call8	40087b64 <xQueueGenericReceive>
400e938a:	fadc      	bnez.n	a10, 400e93ad <uart_wait_tx_done+0x139>
400e938c:	9c69b1        	l32r	a11, 400d0530 <_flash_cache_start+0x518>
400e938f:	02ad      	mov.n	a10, a2
400e9391:	ffdc25        	call8	400e9154 <uart_disable_intr_mask>
400e9394:	9d3f31        	l32r	a3, 400d0890 <_flash_cache_start+0x878>
400e9397:	a02230        	addx4	a2, a2, a3
400e939a:	0228      	l32i.n	a2, a2, 0
400e939c:	0d0c      	movi.n	a13, 0
400e939e:	0dcd      	mov.n	a12, a13
400e93a0:	0dbd      	mov.n	a11, a13
400e93a2:	3422a2        	l32i	a10, a2, 208
400e93a5:	9e43e5        	call8	400877e4 <xQueueGenericSend>
400e93a8:	07a122        	movi	a2, 0x107
400e93ab:	f01d      	retw.n
400e93ad:	9d3831        	l32r	a3, 400d0890 <_flash_cache_start+0x878>
400e93b0:	a02230        	addx4	a2, a2, a3
400e93b3:	002222        	l32i	a2, a2, 0
400e93b6:	00a0d2        	movi	a13, 0
400e93b9:	20cdd0        	or	a12, a13, a13
400e93bc:	0dbd      	mov.n	a11, a13
400e93be:	3422a2        	l32i	a10, a2, 208
400e93c1:	9e4225        	call8	400877e4 <xQueueGenericSend>
400e93c4:	020c      	movi.n	a2, 0
400e93c6:	f01d      	retw.n
400e93c8:	07a122        	movi	a2, 0x107
400e93cb:	f01d      	retw.n
400e93cd:	000000        	ill

400e93d0 <uart_get_buffered_data_len>:
400e93d0:	006136        	entry	a1, 48
400e93d3:	2e32b6        	bltui	a2, 3, 400e9405 <uart_get_buffered_data_len+0x35>
400e93d6:	9a95a5        	call8	40083d30 <esp_log_timestamp>
400e93d9:	9d2fb1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e93dc:	9d3521        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e93df:	016122        	s32i	a2, a1, 4
400e93e2:	d5a422        	movi	a2, 0x4d5
400e93e5:	006122        	s32i	a2, a1, 0
400e93e8:	f03d      	nop.n
400e93ea:	f03d      	nop.n
400e93ec:	f03d      	nop.n
400e93ee:	f03d      	nop.n
400e93f0:	9d51f1        	l32r	a15, 400d0934 <_flash_cache_start+0x91c>
400e93f3:	0bed      	mov.n	a14, a11
400e93f5:	0add      	mov.n	a13, a10
400e93f7:	9d29c1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e93fa:	01a0a2        	movi	a10, 1
400e93fd:	9a7ba5        	call8	40083bb8 <esp_log_write>
400e9400:	f27c      	movi.n	a2, -1
400e9402:	f01d      	retw.n
400e9404:	228100        	orb	b8, b1, b0
400e9407:	809d      	lsi	f9, a0, 0
400e9409:	22a022        	movi	a2, 34
400e940c:	560022        	l8ui	a2, a0, 86
400e940f:	e502a2        	l8ui	a10, a2, 229
400e9412:	b19a91        	l32r	a9, 400d5a7c <_Unwind_Find_FDE+0xa4>
400e9415:	219d21        	l32r	a2, 400b1a8c <_iram_end+0x23f38>
400e9418:	299d22        	l16si	a2, a13, 82
400e941b:	a42211        	l32r	a1, 400d24a4 <std::vector<unsigned int, std::allocator<unsigned int> >::vector(unsigned int, std::allocator<unsigned int> const&)+0x38>
400e941e:	0129d6        	bgez	a9, 400e9434 <uart_get_buffered_data_len+0x64>
400e9421:	f03d      	nop.n
400e9423:	f03d      	nop.n
400e9425:	f03d      	nop.n
400e9427:	f03d      	nop.n
400e9429:	9d42f1        	l32r	a15, 400d0934 <_flash_cache_start+0x91c>
400e942c:	0bed      	mov.n	a14, a11
400e942e:	0add      	mov.n	a13, a10
400e9430:	9d1bc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e9433:	1a0c      	movi.n	a10, 1
400e9435:	9a7825        	call8	40083bb8 <esp_log_write>
400e9438:	f27c      	movi.n	a2, -1
400e943a:	f01d      	retw.n
400e943c:	6228      	l32i.n	a2, a2, 24
400e943e:	0329      	s32i.n	a2, a3, 0
400e9440:	020c      	movi.n	a2, 0
400e9442:	f01d      	retw.n

400e9444 <uart_flush>:
400e9444:	008136        	entry	a1, 64
400e9447:	2e32b6        	bltui	a2, 3, 400e9479 <uart_flush+0x35>
400e944a:	9a8e65        	call8	40083d30 <esp_log_timestamp>
400e944d:	9d12b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e9450:	9d1821        	l32r	a2, 400d08b0 <_flash_cache_start+0x898>
400e9453:	016122        	s32i	a2, a1, 4
400e9456:	dfa422        	movi	a2, 0x4df
400e9459:	006122        	s32i	a2, a1, 0
400e945c:	f03d      	nop.n
400e945e:	f03d      	nop.n
400e9460:	f03d      	nop.n
400e9462:	f03d      	nop.n
400e9464:	9d35f1        	l32r	a15, 400d0938 <_flash_cache_start+0x920>
400e9467:	0bed      	mov.n	a14, a11
400e9469:	0add      	mov.n	a13, a10
400e946b:	9d0cc1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e946e:	01a0a2        	movi	a10, 1
400e9471:	9a7465        	call8	40083bb8 <esp_log_write>
400e9474:	f27c      	movi.n	a2, -1
400e9476:	f01d      	retw.n
400e9478:	053100        	extui	a3, a0, 17, 1
400e947b:	309d      	lsi	f9, a0, 0
400e947d:	32a032        	movi	a3, 50
400e9480:	560023        	lsi	f2, a0, 0x158
400e9483:	a502c3        	lsi	f12, a2, 0x294
400e9486:	9a8a      	add.n	a9, a10, a8
400e9488:	9d04b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e948b:	9d0521        	l32r	a2, 400d08a0 <_flash_cache_start+0x888>
400e948e:	1129      	s32i.n	a2, a1, 4
400e9490:	e0a422        	movi	a2, 0x4e0
400e9493:	0129      	s32i.n	a2, a1, 0
400e9495:	f03d      	nop.n
400e9497:	f03d      	nop.n
400e9499:	f03d      	nop.n
400e949b:	f03d      	nop.n
400e949d:	9d26f1        	l32r	a15, 400d0938 <_flash_cache_start+0x920>
400e94a0:	0bed      	mov.n	a14, a11
400e94a2:	0add      	mov.n	a13, a10
400e94a4:	9cfec1        	l32r	a12, 400d089c <_flash_cache_start+0x884>
400e94a7:	1a0c      	movi.n	a10, 1
400e94a9:	9a70e5        	call8	40083bb8 <esp_log_write>
400e94ac:	f27c      	movi.n	a2, -1
400e94ae:	f01d      	retw.n
400e94b0:	d20000        	quos	a0, a0, a0
400e94b3:	c200a0        	quou	a0, a0, a10
400e94b6:	af          	.byte 0xaf
400e94b7:	ff          	.byte 0xff
400e94b8:	0dbd      	mov.n	a11, a13
400e94ba:	73a8      	l32i.n	a10, a3, 28
400e94bc:	9e6a65        	call8	40087b64 <xQueueGenericReceive>
400e94bf:	9cf441        	l32r	a4, 400d0890 <_flash_cache_start+0x878>
400e94c2:	a04240        	addx4	a4, a2, a4
400e94c5:	0448      	l32i.n	a4, a4, 0
400e94c7:	04a8      	l32i.n	a10, a4, 0
400e94c9:	ffd965        	call8	400e9260 <uart_disable_rx_intr>
400e94cc:	d3b8      	l32i.n	a11, a3, 52
400e94ce:	03eb16        	beqz	a11, 400e9510 <uart_flush+0xcc>
400e94d1:	93a8      	l32i.n	a10, a3, 36
400e94d3:	9deee5        	call8	400873c0 <vRingbufferReturnItem>
400e94d6:	9cf341        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e94d9:	b04240        	addx8	a4, a2, a4
400e94dc:	20a440        	or	a10, a4, a4
400e94df:	9f5b25        	call8	40088a90 <vTaskEnterCritical>
400e94e2:	9ceb51        	l32r	a5, 400d0890 <_flash_cache_start+0x878>
400e94e5:	a05250        	addx4	a5, a2, a5
400e94e8:	0568      	l32i.n	a6, a5, 0
400e94ea:	b388      	l32i.n	a8, a3, 44
400e94ec:	6658      	l32i.n	a5, a6, 24
400e94ee:	c05580        	sub	a5, a5, a8
400e94f1:	6659      	s32i.n	a5, a6, 24
400e94f3:	f03d      	nop.n
400e94f5:	f03d      	nop.n
400e94f7:	f03d      	nop.n
400e94f9:	f03d      	nop.n
400e94fb:	b3b8      	l32i.n	a11, a3, 44
400e94fd:	20a220        	or	a10, a2, a2
400e9500:	ff5225        	call8	400e8a24 <uart_pattern_queue_update>
400e9503:	04ad      	mov.n	a10, a4
400e9505:	9f6ca5        	call8	40088bd0 <vTaskExitCritical>
400e9508:	040c      	movi.n	a4, 0
400e950a:	c349      	s32i.n	a4, a3, 48
400e950c:	b349      	s32i.n	a4, a3, 44
400e950e:	d349      	s32i.n	a4, a3, 52
400e9510:	0c0c      	movi.n	a12, 0
400e9512:	1cc1b2        	addi	a11, a1, 28
400e9515:	f03d      	nop.n
400e9517:	f03d      	nop.n
400e9519:	93a8      	l32i.n	a10, a3, 36
400e951b:	9de565        	call8	40087370 <xRingbufferReceive>
400e951e:	0a6d      	mov.n	a6, a10
400e9520:	079a56        	bnez	a10, 400e959d <uart_flush+0x159>
400e9523:	9cdb41        	l32r	a4, 400d0890 <_flash_cache_start+0x878>
400e9526:	a04240        	addx4	a4, a2, a4
400e9529:	0448      	l32i.n	a4, a4, 0
400e952b:	6448      	l32i.n	a4, a4, 24
400e952d:	d49c      	beqz.n	a4, 400e954e <uart_flush+0x10a>
400e952f:	9a8025        	call8	40083d30 <esp_log_timestamp>
400e9532:	9cd9b1        	l32r	a11, 400d0898 <_flash_cache_start+0x880>
400e9535:	0bed      	mov.n	a14, a11
400e9537:	0add      	mov.n	a13, a10
400e9539:	9d00c1        	l32r	a12, 400d093c <_flash_cache_start+0x924>
400e953c:	1a0c      	movi.n	a10, 1
400e953e:	9a67a5        	call8	40083bb8 <esp_log_write>
400e9541:	9cd341        	l32r	a4, 400d0890 <_flash_cache_start+0x878>
400e9544:	a04240        	addx4	a4, a2, a4
400e9547:	0448      	l32i.n	a4, a4, 0
400e9549:	050c      	movi.n	a5, 0
400e954b:	066452        	s32i	a5, a4, 24
400e954e:	f03d      	nop.n
400e9550:	f03d      	nop.n
400e9552:	f03d      	nop.n
400e9554:	f03d      	nop.n
400e9556:	9cd341        	l32r	a4, 400d08a4 <_flash_cache_start+0x88c>
400e9559:	b04240        	addx8	a4, a2, a4
400e955c:	20a440        	or	a10, a4, a4
400e955f:	9f5325        	call8	40088a90 <vTaskEnterCritical>
400e9562:	9ccb51        	l32r	a5, 400d0890 <_flash_cache_start+0x878>
400e9565:	a05250        	addx4	a5, a2, a5
400e9568:	002562        	l32i	a6, a5, 0
400e956b:	00a082        	movi	a8, 0
400e956e:	284682        	s8i	a8, a6, 40
400e9571:	0020c0        	memw
400e9574:	04ad      	mov.n	a10, a4
400e9576:	9f65a5        	call8	40088bd0 <vTaskExitCritical>
400e9579:	040c      	movi.n	a4, 0
400e957b:	c349      	s32i.n	a4, a3, 48
400e957d:	b349      	s32i.n	a4, a3, 44
400e957f:	d349      	s32i.n	a4, a3, 52
400e9581:	02ad      	mov.n	a10, a2
400e9583:	ff53a5        	call8	400e8abc <uart_reset_rx_fifo>
400e9586:	0528      	l32i.n	a2, a5, 0
400e9588:	02a8      	l32i.n	a10, a2, 0
400e958a:	ffcc25        	call8	400e924c <uart_enable_rx_intr>
400e958d:	04dd      	mov.n	a13, a4
400e958f:	04cd      	mov.n	a12, a4
400e9591:	04bd      	mov.n	a11, a4
400e9593:	73a8      	l32i.n	a10, a3, 28
400e9595:	9e24e5        	call8	400877e4 <xQueueGenericSend>
400e9598:	042d      	mov.n	a2, a4
400e959a:	f01d      	retw.n
400e959c:	c14100        	mul16u	a4, a1, a0
400e959f:	409c      	beqz.n	a0, 400e95b7 <uart_flush+0x173>
400e95a1:	adb042        	l32ai	a4, a0, 0x2b4
400e95a4:	4ea504        	lsi	f0, a5, 0x138
400e95a7:	9f          	.byte 0x9f
400e95a8:	9cba51        	l32r	a5, 400d0890 <_flash_cache_start+0x878>
400e95ab:	a05250        	addx4	a5, a2, a5
400e95ae:	0598      	l32i.n	a9, a5, 0
400e95b0:	71b8      	l32i.n	a11, a1, 28
400e95b2:	6988      	l32i.n	a8, a9, 24
400e95b4:	c088b0        	sub	a8, a8, a11
400e95b7:	6989      	s32i.n	a8, a9, 24
400e95b9:	02ad      	mov.n	a10, a2
400e95bb:	ff46a5        	call8	400e8a24 <uart_pattern_queue_update>
400e95be:	04ad      	mov.n	a10, a4
400e95c0:	9f60e5        	call8	40088bd0 <vTaskExitCritical>
400e95c3:	06bd      	mov.n	a11, a6
400e95c5:	93a8      	l32i.n	a10, a3, 36
400e95c7:	9ddfa5        	call8	400873c0 <vRingbufferReturnItem>
400e95ca:	0558      	l32i.n	a5, a5, 0
400e95cc:	280562        	l8ui	a6, a5, 40
400e95cf:	ef9616        	beqz	a6, 400e94cc <uart_flush+0x88>
400e95d2:	1d0c      	movi.n	a13, 1
400e95d4:	b805c2        	l8ui	a12, a5, 184
400e95d7:	38c5b2        	addi	a11, a5, 56
400e95da:	95a8      	l32i.n	a10, a5, 36
400e95dc:	9dc925        	call8	40087270 <xRingbufferSend>
400e95df:	021a26        	beqi	a10, 1, 400e95e5 <uart_flush+0x1a1>
400e95e2:	ffb986        	j	400e94cc <uart_flush+0x88>
400e95e5:	20a440        	or	a10, a4, a4
400e95e8:	9f4a65        	call8	40088a90 <vTaskEnterCritical>
400e95eb:	9ca951        	l32r	a5, 400d0890 <_flash_cache_start+0x878>
400e95ee:	a05250        	addx4	a5, a2, a5
400e95f1:	0558      	l32i.n	a5, a5, 0
400e95f3:	b80562        	l8ui	a6, a5, 184
400e95f6:	6588      	l32i.n	a8, a5, 24
400e95f8:	686a      	add.n	a6, a8, a6
400e95fa:	6569      	s32i.n	a6, a5, 24
400e95fc:	060c      	movi.n	a6, 0
400e95fe:	284562        	s8i	a6, a5, 40
400e9601:	0020c0        	memw
400e9604:	04ad      	mov.n	a10, a4
400e9606:	9f5ca5        	call8	40088bd0 <vTaskExitCritical>
400e9609:	ffafc6        	j	400e94cc <uart_flush+0x88>

400e960c <uart_set_select_notif_callback>:
400e960c:	004136        	entry	a1, 32
400e960f:	0d32f6        	bgeui	a2, 3, 400e9620 <uart_set_select_notif_callback+0x14>
400e9612:	9c9f81        	l32r	a8, 400d0890 <_flash_cache_start+0x878>
400e9615:	a02280        	addx4	a2, a2, a8
400e9618:	0228      	l32i.n	a2, a2, 0
400e961a:	002216        	beqz	a2, 400e9620 <uart_set_select_notif_callback+0x14>
400e961d:	3f6232        	s32i	a3, a2, 252
400e9620:	f01d      	retw.n
	...

400e9624 <uart_get_selectlock>:
400e9624:	004136        	entry	a1, 32
400e9627:	9cc621        	l32r	a2, 400d0940 <_flash_cache_start+0x928>
400e962a:	f01d      	retw.n

400e962c <get_clk_en_mask>:
400e962c:	004136        	entry	a1, 32
400e962f:	282c      	movi.n	a8, 34
400e9631:	02b827        	bgeu	a8, a2, 400e9637 <get_clk_en_mask+0xb>
400e9634:	002986        	j	400e96de <get_clk_en_mask+0xb2>
400e9637:	9cca81        	l32r	a8, 400d0960 <_flash_cache_start+0x948>
400e963a:	a02280        	addx4	a2, a2, a8
400e963d:	0228      	l32i.n	a2, a2, 0
400e963f:	0002a0        	jx	a2
400e9642:	00a222        	movi	a2, 0x200
400e9645:	f01d      	retw.n
400e9647:	420c      	movi.n	a2, 4
400e9649:	f01d      	retw.n
400e964b:	022c      	movi.n	a2, 32
400e964d:	f01d      	retw.n
400e964f:	9cbd21        	l32r	a2, 400d0944 <_flash_cache_start+0x92c>
400e9652:	f01d      	retw.n
400e9654:	80a022        	movi	a2, 128
400e9657:	f01d      	retw.n
400e9659:	9cbb21        	l32r	a2, 400d0948 <_flash_cache_start+0x930>
400e965c:	f01d      	retw.n
400e965e:	021c      	movi.n	a2, 16
400e9660:	f01d      	retw.n
400e9662:	9ac421        	l32r	a2, 400d0174 <_flash_cache_start+0x15c>
400e9665:	f01d      	retw.n
400e9667:	9bb821        	l32r	a2, 400d0548 <_flash_cache_start+0x530>
400e966a:	f01d      	retw.n
400e966c:	9c0721        	l32r	a2, 400d0688 <_flash_cache_start+0x670>
400e966f:	f01d      	retw.n
400e9671:	9cb621        	l32r	a2, 400d094c <_flash_cache_start+0x934>
400e9674:	f01d      	retw.n
400e9676:	9c1921        	l32r	a2, 400d06dc <_flash_cache_start+0x6c4>
400e9679:	f01d      	retw.n
400e967b:	9b2521        	l32r	a2, 400d0310 <_flash_cache_start+0x2f8>
400e967e:	f01d      	retw.n
400e9680:	9cb421        	l32r	a2, 400d0950 <_flash_cache_start+0x938>
400e9683:	f01d      	retw.n
400e9685:	00a122        	movi	a2, 0x100
400e9688:	f01d      	retw.n
400e968a:	9bfb21        	l32r	a2, 400d0678 <_flash_cache_start+0x660>
400e968d:	f01d      	retw.n
400e968f:	00a422        	movi	a2, 0x400
400e9692:	f01d      	retw.n
400e9694:	220c      	movi.n	a2, 2
400e9696:	f01d      	retw.n
400e9698:	024c      	movi.n	a2, 64
400e969a:	f01d      	retw.n
400e969c:	9cae21        	l32r	a2, 400d0954 <_flash_cache_start+0x93c>
400e969f:	f01d      	retw.n
400e96a1:	9bd521        	l32r	a2, 400d05f8 <_flash_cache_start+0x5e0>
400e96a4:	f01d      	retw.n
400e96a6:	9ba821        	l32r	a2, 400d0548 <_flash_cache_start+0x530>
400e96a9:	f01d      	retw.n
400e96ab:	021c      	movi.n	a2, 16
400e96ad:	f01d      	retw.n
400e96af:	9c0821        	l32r	a2, 400d06d0 <_flash_cache_start+0x6b8>
400e96b2:	f01d      	retw.n
400e96b4:	9b9f21        	l32r	a2, 400d0530 <_flash_cache_start+0x518>
400e96b7:	f01d      	retw.n
400e96b9:	9bf321        	l32r	a2, 400d0688 <_flash_cache_start+0x670>
400e96bc:	f01d      	retw.n
400e96be:	06a422        	movi	a2, 0x406
400e96c1:	f01d      	retw.n
400e96c3:	9ca521        	l32r	a2, 400d0958 <_flash_cache_start+0x940>
400e96c6:	f01d      	retw.n
400e96c8:	c9a322        	movi	a2, 0x3c9
400e96cb:	f01d      	retw.n
400e96cd:	9ca321        	l32r	a2, 400d095c <_flash_cache_start+0x944>
400e96d0:	f01d      	retw.n
400e96d2:	120c      	movi.n	a2, 1
400e96d4:	f01d      	retw.n
400e96d6:	220c      	movi.n	a2, 2
400e96d8:	f01d      	retw.n
400e96da:	420c      	movi.n	a2, 4
400e96dc:	f01d      	retw.n
400e96de:	020c      	movi.n	a2, 0
400e96e0:	f01d      	retw.n
400e96e2:	9be721        	l32r	a2, 400d0680 <_flash_cache_start+0x668>
400e96e5:	f01d      	retw.n
	...

400e96e8 <get_rst_en_mask>:
400e96e8:	004136        	entry	a1, 32
400e96eb:	282c      	movi.n	a8, 34
400e96ed:	02b827        	bgeu	a8, a2, 400e96f3 <get_rst_en_mask+0xb>
400e96f0:	002586        	j	400e978a <get_rst_en_mask+0xa2>
400e96f3:	9c9c81        	l32r	a8, 400d0964 <_flash_cache_start+0x94c>
400e96f6:	a02280        	addx4	a2, a2, a8
400e96f9:	0228      	l32i.n	a2, a2, 0
400e96fb:	0002a0        	jx	a2
400e96fe:	00a222        	movi	a2, 0x200
400e9701:	f01d      	retw.n
400e9703:	420c      	movi.n	a2, 4
400e9705:	f01d      	retw.n
400e9707:	022c      	movi.n	a2, 32
400e9709:	f01d      	retw.n
400e970b:	9c8e21        	l32r	a2, 400d0944 <_flash_cache_start+0x92c>
400e970e:	f01d      	retw.n
400e9710:	80a022        	movi	a2, 128
400e9713:	f01d      	retw.n
400e9715:	9c8c21        	l32r	a2, 400d0948 <_flash_cache_start+0x930>
400e9718:	f01d      	retw.n
400e971a:	021c      	movi.n	a2, 16
400e971c:	f01d      	retw.n
400e971e:	9a9521        	l32r	a2, 400d0174 <_flash_cache_start+0x15c>
400e9721:	f01d      	retw.n
400e9723:	9b8921        	l32r	a2, 400d0548 <_flash_cache_start+0x530>
400e9726:	f01d      	retw.n
400e9728:	9bd821        	l32r	a2, 400d0688 <_flash_cache_start+0x670>
400e972b:	f01d      	retw.n
400e972d:	9c8721        	l32r	a2, 400d094c <_flash_cache_start+0x934>
400e9730:	f01d      	retw.n
400e9732:	9bea21        	l32r	a2, 400d06dc <_flash_cache_start+0x6c4>
400e9735:	f01d      	retw.n
400e9737:	9af621        	l32r	a2, 400d0310 <_flash_cache_start+0x2f8>
400e973a:	f01d      	retw.n
400e973c:	9c8521        	l32r	a2, 400d0950 <_flash_cache_start+0x938>
400e973f:	f01d      	retw.n
400e9741:	00a122        	movi	a2, 0x100
400e9744:	f01d      	retw.n
400e9746:	9bcc21        	l32r	a2, 400d0678 <_flash_cache_start+0x660>
400e9749:	f01d      	retw.n
400e974b:	00a422        	movi	a2, 0x400
400e974e:	f01d      	retw.n
400e9750:	220c      	movi.n	a2, 2
400e9752:	f01d      	retw.n
400e9754:	024c      	movi.n	a2, 64
400e9756:	f01d      	retw.n
400e9758:	9c7f21        	l32r	a2, 400d0954 <_flash_cache_start+0x93c>
400e975b:	f01d      	retw.n
400e975d:	9ba621        	l32r	a2, 400d05f8 <_flash_cache_start+0x5e0>
400e9760:	f01d      	retw.n
400e9762:	024c      	movi.n	a2, 64
400e9764:	f01d      	retw.n
400e9766:	022c      	movi.n	a2, 32
400e9768:	f01d      	retw.n
400e976a:	9bd921        	l32r	a2, 400d06d0 <_flash_cache_start+0x6b8>
400e976d:	f01d      	retw.n
400e976f:	80a022        	movi	a2, 128
400e9772:	f01d      	retw.n
400e9774:	c39c      	beqz.n	a3, 400e9794 <get_rst_en_mask+0xac>
400e9776:	921c      	movi.n	a2, 25
400e9778:	f01d      	retw.n
400e977a:	a39c      	beqz.n	a3, 400e9798 <get_rst_en_mask+0xb0>
400e977c:	a20c      	movi.n	a2, 10
400e977e:	f01d      	retw.n
400e9780:	839c      	beqz.n	a3, 400e979c <get_rst_en_mask+0xb4>
400e9782:	421c      	movi.n	a2, 20
400e9784:	f01d      	retw.n
400e9786:	020c      	movi.n	a2, 0
400e9788:	f01d      	retw.n
400e978a:	020c      	movi.n	a2, 0
400e978c:	f01d      	retw.n
400e978e:	bc2100        	lsi	f0, a1, 0x2f0
400e9791:	1d9b      	addi.n	a1, a13, 9
400e9793:	120cf0        	andbc	b0, b12, b15
400e9796:	f01d      	retw.n
400e9798:	220c      	movi.n	a2, 2
400e979a:	f01d      	retw.n
400e979c:	420c      	movi.n	a2, 4
400e979e:	f01d      	retw.n

400e97a0 <get_clk_en_reg>:
400e97a0:	004136        	entry	a1, 32
400e97a3:	e0c282        	addi	a8, a2, -32
400e97a6:	0e38b6        	bltui	a8, 3, 400e97b8 <get_clk_en_reg+0x18>
400e97a9:	20a220        	or	a10, a2, a2
400e97ac:	02faa5        	call8	400ec758 <is_wifi_clk_peripheral>
400e97af:	00aa16        	beqz	a10, 400e97bd <get_clk_en_reg+0x1d>
400e97b2:	9a6d21        	l32r	a2, 400d0168 <_flash_cache_start+0x150>
400e97b5:	000090        	retw
400e97b8:	9a6b21        	l32r	a2, 400d0164 <_flash_cache_start+0x14c>
400e97bb:	f01d      	retw.n
400e97bd:	9a6821        	l32r	a2, 400d0160 <_flash_cache_start+0x148>
400e97c0:	f01d      	retw.n
	...

400e97c4 <get_rst_en_reg>:
400e97c4:	004136        	entry	a1, 32
400e97c7:	e0c282        	addi	a8, a2, -32
400e97ca:	0e38b6        	bltui	a8, 3, 400e97dc <get_rst_en_reg+0x18>
400e97cd:	20a220        	or	a10, a2, a2
400e97d0:	02f865        	call8	400ec758 <is_wifi_clk_peripheral>
400e97d3:	00aa16        	beqz	a10, 400e97e1 <get_rst_en_reg+0x1d>
400e97d6:	9c6421        	l32r	a2, 400d0968 <_flash_cache_start+0x950>
400e97d9:	000090        	retw
400e97dc:	9a6921        	l32r	a2, 400d0180 <_flash_cache_start+0x168>
400e97df:	f01d      	retw.n
400e97e1:	9a6621        	l32r	a2, 400d017c <_flash_cache_start+0x164>
400e97e4:	f01d      	retw.n
	...

400e97e8 <periph_module_enable>:
400e97e8:	004136        	entry	a1, 32
400e97eb:	9c6041        	l32r	a4, 400d096c <_flash_cache_start+0x954>
400e97ee:	04ad      	mov.n	a10, a4
400e97f0:	9f29e5        	call8	40088a90 <vTaskEnterCritical>
400e97f3:	02ad      	mov.n	a10, a2
400e97f5:	fffaa5        	call8	400e97a0 <get_clk_en_reg>
400e97f8:	0a5d      	mov.n	a5, a10
400e97fa:	9814e5        	call8	40081948 <esp_dport_access_reg_read>
400e97fd:	0a3d      	mov.n	a3, a10
400e97ff:	02ad      	mov.n	a10, a2
400e9801:	ffe2a5        	call8	400e962c <get_clk_en_mask>
400e9804:	20aa30        	or	a10, a10, a3
400e9807:	0020c0        	memw
400e980a:	05a9      	s32i.n	a10, a5, 0
400e980c:	02ad      	mov.n	a10, a2
400e980e:	fffb65        	call8	400e97c4 <get_rst_en_reg>
400e9811:	0a3d      	mov.n	a3, a10
400e9813:	981365        	call8	40081948 <esp_dport_access_reg_read>
400e9816:	0a5d      	mov.n	a5, a10
400e9818:	1b0c      	movi.n	a11, 1
400e981a:	02ad      	mov.n	a10, a2
400e981c:	ffeca5        	call8	400e96e8 <get_rst_en_mask>
400e981f:	f87c      	movi.n	a8, -1
400e9821:	30a8a0        	xor	a10, a8, a10
400e9824:	10a5a0        	and	a10, a5, a10
400e9827:	0020c0        	memw
400e982a:	03a9      	s32i.n	a10, a3, 0
400e982c:	04ad      	mov.n	a10, a4
400e982e:	9f3a25        	call8	40088bd0 <vTaskExitCritical>
400e9831:	f01d      	retw.n
	...

400e9834 <timer_group_intr_enable>:
400e9834:	006136        	entry	a1, 48
400e9837:	2e22b6        	bltui	a2, 2, 400e9869 <timer_group_intr_enable+0x35>
400e983a:	9a4f65        	call8	40083d30 <esp_log_timestamp>
400e983d:	9c4db1        	l32r	a11, 400d0974 <_flash_cache_start+0x95c>
400e9840:	9c4f21        	l32r	a2, 400d097c <_flash_cache_start+0x964>
400e9843:	016122        	s32i	a2, a1, 4
400e9846:	fea022        	movi	a2, 254
400e9849:	006122        	s32i	a2, a1, 0
400e984c:	f03d      	nop.n
400e984e:	f03d      	nop.n
400e9850:	f03d      	nop.n
400e9852:	f03d      	nop.n
400e9854:	9c47f1        	l32r	a15, 400d0970 <_flash_cache_start+0x958>
400e9857:	0bed      	mov.n	a14, a11
400e9859:	0add      	mov.n	a13, a10
400e985b:	9c47c1        	l32r	a12, 400d0978 <_flash_cache_start+0x960>
400e985e:	01a0a2        	movi	a10, 1
400e9861:	9a3565        	call8	40083bb8 <esp_log_write>
400e9864:	02a122        	movi	a2, 0x102
400e9867:	f01d      	retw.n
400e9869:	9c4541        	l32r	a4, 400d0980 <_flash_cache_start+0x968>
400e986c:	b04240        	addx8	a4, a2, a4
400e986f:	04ad      	mov.n	a10, a4
400e9871:	9f21e5        	call8	40088a90 <vTaskEnterCritical>
400e9874:	9c4481        	l32r	a8, 400d0984 <_flash_cache_start+0x96c>
400e9877:	a02280        	addx4	a2, a2, a8
400e987a:	0228      	l32i.n	a2, a2, 0
400e987c:	0020c0        	memw
400e987f:	262282        	l32i	a8, a2, 152
400e9882:	203830        	or	a3, a8, a3
400e9885:	0020c0        	memw
400e9888:	266232        	s32i	a3, a2, 152
400e988b:	04ad      	mov.n	a10, a4
400e988d:	9f3425        	call8	40088bd0 <vTaskExitCritical>
400e9890:	020c      	movi.n	a2, 0
400e9892:	f01d      	retw.n

400e9894 <rtc_isr>:
400e9894:	004136        	entry	a1, 32
400e9897:	9c3c21        	l32r	a2, 400d0988 <_flash_cache_start+0x970>
400e989a:	0020c0        	memw
400e989d:	0238      	l32i.n	a3, a2, 0
400e989f:	9c3ba1        	l32r	a10, 400d098c <_flash_cache_start+0x974>
400e98a2:	9f1ee5        	call8	40088a90 <vTaskEnterCritical>
400e98a5:	9c3a21        	l32r	a2, 400d0990 <_flash_cache_start+0x978>
400e98a8:	0228      	l32i.n	a2, a2, 0
400e98aa:	0006c6        	j	400e98c9 <rtc_isr+0x35>
400e98ad:	0288      	l32i.n	a8, a2, 0
400e98af:	130387        	bnone	a3, a8, 400e98c6 <rtc_isr+0x32>
400e98b2:	9c3641        	l32r	a4, 400d098c <_flash_cache_start+0x974>
400e98b5:	04ad      	mov.n	a10, a4
400e98b7:	9f31a5        	call8	40088bd0 <vTaskExitCritical>
400e98ba:	1288      	l32i.n	a8, a2, 4
400e98bc:	22a8      	l32i.n	a10, a2, 8
400e98be:	0008e0        	callx8	a8
400e98c1:	04ad      	mov.n	a10, a4
400e98c3:	9f1ce5        	call8	40088a90 <vTaskEnterCritical>
400e98c6:	032222        	l32i	a2, a2, 12
400e98c9:	fe0256        	bnez	a2, 400e98ad <rtc_isr+0x19>
400e98cc:	9c30a1        	l32r	a10, 400d098c <_flash_cache_start+0x974>
400e98cf:	9f3025        	call8	40088bd0 <vTaskExitCritical>
400e98d2:	9a6a21        	l32r	a2, 400d027c <_flash_cache_start+0x264>
400e98d5:	0020c0        	memw
400e98d8:	006232        	s32i	a3, a2, 0
400e98db:	000090        	retw
	...

400e98e0 <rtc_isr_ensure_installed>:
400e98e0:	004136        	entry	a1, 32
400e98e3:	9c2aa1        	l32r	a10, 400d098c <_flash_cache_start+0x974>
400e98e6:	9f1aa5        	call8	40088a90 <vTaskEnterCritical>
400e98e9:	9c2a81        	l32r	a8, 400d0994 <_flash_cache_start+0x97c>
400e98ec:	002882        	l32i	a8, a8, 0
400e98ef:	033856        	bnez	a8, 400e9926 <rtc_isr_ensure_installed+0x46>
400e98f2:	0b0c      	movi.n	a11, 0
400e98f4:	9a6a21        	l32r	a2, 400d029c <_flash_cache_start+0x284>
400e98f7:	0020c0        	memw
400e98fa:	02b9      	s32i.n	a11, a2, 0
400e98fc:	f87c      	movi.n	a8, -1
400e98fe:	f03d      	nop.n
400e9900:	f03d      	nop.n
400e9902:	f03d      	nop.n
400e9904:	9a5e21        	l32r	a2, 400d027c <_flash_cache_start+0x264>
400e9907:	0020c0        	memw
400e990a:	0289      	s32i.n	a8, a2, 0
400e990c:	f03d      	nop.n
400e990e:	f03d      	nop.n
400e9910:	f03d      	nop.n
400e9912:	f03d      	nop.n
400e9914:	9c20e1        	l32r	a14, 400d0994 <_flash_cache_start+0x97c>
400e9917:	0bdd      	mov.n	a13, a11
400e9919:	9c1fc1        	l32r	a12, 400d0998 <_flash_cache_start+0x980>
400e991c:	ea2c      	movi.n	a10, 46
400e991e:	ecbfa5        	call8	400d6518 <esp_intr_alloc>
400e9921:	0a2d      	mov.n	a2, a10
400e9923:	000046        	j	400e9928 <rtc_isr_ensure_installed+0x48>
400e9926:	020c      	movi.n	a2, 0
400e9928:	9c19a1        	l32r	a10, 400d098c <_flash_cache_start+0x974>
400e992b:	9f2a65        	call8	40088bd0 <vTaskExitCritical>
400e992e:	f01d      	retw.n

400e9930 <rtc_gpio_force_hold_dis_all>:
400e9930:	004136        	entry	a1, 32
400e9933:	080c      	movi.n	a8, 0
400e9935:	000a46        	j	400e9962 <rtc_gpio_force_hold_dis_all+0x32>
400e9938:	a88000        	lsi	f0, a0, 0x2a0
400e993b:	aa8090        	floor.s	a8, f0, 9
400e993e:	9ae0a0        	trunc.s	a14, f0, 10
400e9941:	16a111        	l32r	a1, 400af3c8 <_iram_end+0x21874>
400e9944:	9a9c      	beqz.n	a10, 400e9961 <rtc_gpio_force_hold_dis_all+0x31>
400e9946:	989a      	add.n	a9, a8, a9
400e9948:	9c99      	s32i.n	a9, a12, 36
400e994a:	a139      	s32i.n	a3, a1, 40
400e994c:	c09c15        	call4	400aa310 <_iram_end+0x1c7bc>
400e994f:	b80020        	lsi	f2, a0, 0x2e0
400e9952:	7c0a      	add.n	a7, a12, a0
400e9954:	90fc      	bnez.n	a0, 400e9991 <rtc_isr_register+0x25>
400e9956:	309c      	beqz.n	a0, 400e996d <rtc_isr_register+0x1>
400e9958:	109b90        	and	a9, a11, a9
400e995b:	0020c0        	memw
400e995e:	0a99      	s32i.n	a9, a10, 0
400e9960:	881b      	addi.n	a8, a8, 1
400e9962:	792c      	movi.n	a9, 39
400e9964:	d1a987        	bge	a9, a8, 400e9939 <rtc_gpio_force_hold_dis_all+0x9>
400e9967:	f01d      	retw.n
400e9969:	000000        	ill

400e996c <rtc_isr_register>:
400e996c:	004136        	entry	a1, 32
400e996f:	fff725        	call8	400e98e0 <rtc_isr_ensure_installed>
400e9972:	034a56        	bnez	a10, 400e99aa <rtc_isr_register+0x3e>
400e9975:	10a0a2        	movi	a10, 16
400e9978:	99dd81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e997b:	0008e0        	callx8	a8
400e997e:	0a5d      	mov.n	a5, a10
400e9980:	caac      	beqz.n	a10, 400e99b0 <rtc_isr_register+0x44>
400e9982:	1a29      	s32i.n	a2, a10, 4
400e9984:	2a39      	s32i.n	a3, a10, 8
400e9986:	0a49      	s32i.n	a4, a10, 0
400e9988:	f03d      	nop.n
400e998a:	f03d      	nop.n
400e998c:	f03d      	nop.n
400e998e:	f03d      	nop.n
400e9990:	9bff21        	l32r	a2, 400d098c <_flash_cache_start+0x974>
400e9993:	02ad      	mov.n	a10, a2
400e9995:	9f0fa5        	call8	40088a90 <vTaskEnterCritical>
400e9998:	9bfe31        	l32r	a3, 400d0990 <_flash_cache_start+0x978>
400e999b:	0348      	l32i.n	a4, a3, 0
400e999d:	3549      	s32i.n	a4, a5, 12
400e999f:	0359      	s32i.n	a5, a3, 0
400e99a1:	02ad      	mov.n	a10, a2
400e99a3:	9f22e5        	call8	40088bd0 <vTaskExitCritical>
400e99a6:	020c      	movi.n	a2, 0
400e99a8:	f01d      	retw.n
400e99aa:	0a2d      	mov.n	a2, a10
400e99ac:	f01d      	retw.n
400e99ae:	220000        	orb	b0, b0, b0
400e99b1:	1d01a1        	l32r	a10, 400b0db8 <_iram_end+0x23264>
400e99b4:	0000f0        	callx12	a0
	...

400e99b8 <get_boot_time>:
400e99b8:	004136        	entry	a1, 32
400e99bb:	9bfaa1        	l32r	a10, 400d09a4 <_flash_cache_start+0x98c>
400e99be:	9b10a5        	call8	40084ac8 <_lock_acquire>
400e99c1:	9bf921        	l32r	a2, 400d09a8 <_flash_cache_start+0x990>
400e99c4:	0020c0        	memw
400e99c7:	002222        	l32i	a2, a2, 0
400e99ca:	9bf831        	l32r	a3, 400d09ac <_flash_cache_start+0x994>
400e99cd:	0020c0        	memw
400e99d0:	002332        	l32i	a3, a3, 0
400e99d3:	9bf4a1        	l32r	a10, 400d09a4 <_flash_cache_start+0x98c>
400e99d6:	9b1325        	call8	40084b08 <_lock_release>
400e99d9:	f01d      	retw.n
	...

400e99dc <set_boot_time>:
400e99dc:	004136        	entry	a1, 32
400e99df:	9bf141        	l32r	a4, 400d09a4 <_flash_cache_start+0x98c>
400e99e2:	20a440        	or	a10, a4, a4
400e99e5:	9b0e25        	call8	40084ac8 <_lock_acquire>
400e99e8:	9bf081        	l32r	a8, 400d09a8 <_flash_cache_start+0x990>
400e99eb:	0020c0        	memw
400e99ee:	006822        	s32i	a2, a8, 0
400e99f1:	f03d      	nop.n
400e99f3:	f03d      	nop.n
400e99f5:	f03d      	nop.n
400e99f7:	f03d      	nop.n
400e99f9:	9bec81        	l32r	a8, 400d09ac <_flash_cache_start+0x994>
400e99fc:	0020c0        	memw
400e99ff:	0839      	s32i.n	a3, a8, 0
400e9a01:	04ad      	mov.n	a10, a4
400e9a03:	9b1065        	call8	40084b08 <_lock_release>
400e9a06:	f01d      	retw.n

400e9a08 <get_time_since_boot>:
400e9a08:	004136        	entry	a1, 32
400e9a0b:	97cc65        	call8	400816d0 <esp_timer_get_time>
400e9a0e:	9be831        	l32r	a3, 400d09b0 <_flash_cache_start+0x998>
400e9a11:	002322        	l32i	a2, a3, 0
400e9a14:	012382        	l32i	a8, a3, 4
400e9a17:	8022a0        	add	a2, a2, a10
400e9a1a:	130c      	movi.n	a3, 1
400e9a1c:	0132a7        	bltu	a2, a10, 400e9a21 <get_time_since_boot+0x19>
400e9a1f:	030c      	movi.n	a3, 0
400e9a21:	b8ba      	add.n	a11, a8, a11
400e9a23:	33ba      	add.n	a3, a3, a11
400e9a25:	f01d      	retw.n
	...

400e9a28 <adjust_boot_time>:
400e9a28:	004136        	entry	a1, 32
400e9a2b:	fff8e5        	call8	400e99b8 <get_boot_time>
400e9a2e:	202aa0        	or	a2, a10, a10
400e9a31:	203bb0        	or	a3, a11, a11
400e9a34:	208ab0        	or	a8, a10, a11
400e9a37:	189c      	beqz.n	a8, 400e9a4c <adjust_boot_time+0x24>
400e9a39:	fffce5        	call8	400e9a08 <get_time_since_boot>
400e9a3c:	9bde81        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9a3f:	0898      	l32i.n	a9, a8, 0
400e9a41:	1888      	l32i.n	a8, a8, 4
400e9a43:	053b87        	bltu	a11, a8, 400e9a4c <adjust_boot_time+0x24>
400e9a46:	0f98b7        	bne	a8, a11, 400e9a59 <adjust_boot_time+0x31>
400e9a49:	0cba97        	bgeu	a10, a9, 400e9a59 <adjust_boot_time+0x31>
400e9a4c:	9986a1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e9a4f:	9985b1        	l32r	a11, 400d0064 <_flash_cache_start+0x4c>
400e9a52:	9bd881        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9a55:	08a9      	s32i.n	a10, a8, 0
400e9a57:	18b9      	s32i.n	a11, a8, 4
400e9a59:	f03d      	nop.n
400e9a5b:	f03d      	nop.n
400e9a5d:	f03d      	nop.n
400e9a5f:	f03d      	nop.n
400e9a61:	9bd481        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9a64:	002892        	l32i	a9, a8, 0
400e9a67:	0128a2        	l32i	a10, a8, 4
400e9a6a:	2089a0        	or	a8, a9, a10
400e9a6d:	0fb816        	beqz	a8, 400e9b6c <adjust_boot_time+0x144>
400e9a70:	fff965        	call8	400e9a08 <get_time_since_boot>
400e9a73:	018b60        	slli	a8, a11, 26
400e9a76:	41e6a0        	srli	a14, a10, 6
400e9a79:	20e8e0        	or	a14, a8, a14
400e9a7c:	41d6b0        	srli	a13, a11, 6
400e9a7f:	9bcd81        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9a82:	0128c2        	l32i	a12, a8, 4
400e9a85:	019c60        	slli	a9, a12, 26
400e9a88:	0888      	l32i.n	a8, a8, 0
400e9a8a:	418680        	srli	a8, a8, 6
400e9a8d:	208980        	or	a8, a9, a8
400e9a90:	41c6c0        	srli	a12, a12, 6
400e9a93:	c08e80        	sub	a8, a14, a8
400e9a96:	190c      	movi.n	a9, 1
400e9a98:	013e87        	bltu	a14, a8, 400e9a9d <adjust_boot_time+0x75>
400e9a9b:	090c      	movi.n	a9, 0
400e9a9d:	c0cdc0        	sub	a12, a13, a12
400e9aa0:	c09c90        	sub	a9, a12, a9
400e9aa3:	08dd      	mov.n	a13, a8
400e9aa5:	0519e6        	bgei	a9, 1, 400e9aae <adjust_boot_time+0x86>
400e9aa8:	0c0956        	bnez	a9, 400e9b6c <adjust_boot_time+0x144>
400e9aab:	0bd816        	beqz	a8, 400e9b6c <adjust_boot_time+0x144>
400e9aae:	9bc1c1        	l32r	a12, 400d09b4 <_flash_cache_start+0x99c>
400e9ab1:	0ca9      	s32i.n	a10, a12, 0
400e9ab3:	1cb9      	s32i.n	a11, a12, 4
400e9ab5:	f03d      	nop.n
400e9ab7:	f03d      	nop.n
400e9ab9:	f03d      	nop.n
400e9abb:	f03d      	nop.n
400e9abd:	9bbeb1        	l32r	a11, 400d09b8 <_flash_cache_start+0x9a0>
400e9ac0:	0ba8      	l32i.n	a10, a11, 0
400e9ac2:	1bb8      	l32i.n	a11, a11, 4
400e9ac4:	04dbd6        	bgez	a11, 400e9b15 <adjust_boot_time+0xed>
400e9ac7:	e8aa      	add.n	a14, a8, a10
400e9ac9:	1c0c      	movi.n	a12, 1
400e9acb:	013ed7        	bltu	a14, a13, 400e9ad0 <adjust_boot_time+0xa8>
400e9ace:	0c0c      	movi.n	a12, 0
400e9ad0:	d9ba      	add.n	a13, a9, a11
400e9ad2:	ccda      	add.n	a12, a12, a13
400e9ad4:	020c96        	bltz	a12, 400e9af8 <adjust_boot_time+0xd0>
400e9ad7:	a2aa      	add.n	a10, a2, a10
400e9ad9:	180c      	movi.n	a8, 1
400e9adb:	013a27        	bltu	a10, a2, 400e9ae0 <adjust_boot_time+0xb8>
400e9ade:	080c      	movi.n	a8, 0
400e9ae0:	b3ba      	add.n	a11, a3, a11
400e9ae2:	38ba      	add.n	a3, a8, a11
400e9ae4:	0a2d      	mov.n	a2, a10
400e9ae6:	995fa1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e9ae9:	995eb1        	l32r	a11, 400d0064 <_flash_cache_start+0x4c>
400e9aec:	9bb281        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9aef:	08a9      	s32i.n	a10, a8, 0
400e9af1:	18b9      	s32i.n	a11, a8, 4
400e9af3:	001b86        	j	400e9b65 <adjust_boot_time+0x13d>
400e9af6:	a10000        	sll	a0, a0
400e9af9:	e99bb0        	lsi	f11, a11, 0x3a4
400e9afc:	c90a      	add.n	a12, a9, a0
400e9afe:	801a      	add.n	a8, a0, a1
400e9b00:	0cc082        	addi	a8, a0, 12
400e9b03:	871a      	add.n	a8, a7, a1
400e9b05:	0c0132        	l8ui	a3, a1, 12
400e9b08:	900a      	add.n	a9, a0, a0
400e9b0a:	a0c093        	ssip	f9, a0, 0x280
400e9b0d:	c039      	s32i.n	a3, a0, 48
400e9b0f:	082d      	mov.n	a2, a8
400e9b11:	001406        	j	400e9b65 <adjust_boot_time+0x13d>
400e9b14:	da8000        	ufloat.s	f8, a0, 0
400e9b17:	1c0cc0        	lsi	f12, a12, 112
400e9b1a:	023ad7        	bltu	a10, a13, 400e9b20 <adjust_boot_time+0xf8>
400e9b1d:	00a0c2        	movi	a12, 0
400e9b20:	c0eb90        	sub	a14, a11, a9
400e9b23:	c0cec0        	sub	a12, a14, a12
400e9b26:	221ce6        	bgei	a12, 1, 400e9b4c <adjust_boot_time+0x124>
400e9b29:	0ccc      	bnez.n	a12, 400e9b2d <adjust_boot_time+0x105>
400e9b2b:	dddc      	bnez.n	a13, 400e9b4c <adjust_boot_time+0x124>
400e9b2d:	a2aa      	add.n	a10, a2, a10
400e9b2f:	180c      	movi.n	a8, 1
400e9b31:	013a27        	bltu	a10, a2, 400e9b36 <adjust_boot_time+0x10e>
400e9b34:	080c      	movi.n	a8, 0
400e9b36:	b3ba      	add.n	a11, a3, a11
400e9b38:	38ba      	add.n	a3, a8, a11
400e9b3a:	0a2d      	mov.n	a2, a10
400e9b3c:	994aa1        	l32r	a10, 400d0064 <_flash_cache_start+0x4c>
400e9b3f:	9949b1        	l32r	a11, 400d0064 <_flash_cache_start+0x4c>
400e9b42:	9b9c81        	l32r	a8, 400d09b4 <_flash_cache_start+0x99c>
400e9b45:	08a9      	s32i.n	a10, a8, 0
400e9b47:	18b9      	s32i.n	a11, a8, 4
400e9b49:	000606        	j	400e9b65 <adjust_boot_time+0x13d>
400e9b4c:	9b9ba1        	l32r	a10, 400d09b8 <_flash_cache_start+0x9a0>
400e9b4f:	0ad9      	s32i.n	a13, a10, 0
400e9b51:	1ac9      	s32i.n	a12, a10, 4
400e9b53:	828a      	add.n	a8, a2, a8
400e9b55:	1a0c      	movi.n	a10, 1
400e9b57:	013827        	bltu	a8, a2, 400e9b5c <adjust_boot_time+0x134>
400e9b5a:	0a0c      	movi.n	a10, 0
400e9b5c:	809390        	add	a9, a3, a9
400e9b5f:	803a90        	add	a3, a10, a9
400e9b62:	202880        	or	a2, a8, a8
400e9b65:	02ad      	mov.n	a10, a2
400e9b67:	03bd      	mov.n	a11, a3
400e9b69:	ffe725        	call8	400e99dc <set_boot_time>
400e9b6c:	f01d      	retw.n
	...

400e9b70 <get_adjusted_boot_time>:
400e9b70:	004136        	entry	a1, 32
400e9b73:	9b9231        	l32r	a3, 400d09bc <_flash_cache_start+0x9a4>
400e9b76:	20a330        	or	a10, a3, a3
400e9b79:	9af4e5        	call8	40084ac8 <_lock_acquire>
400e9b7c:	ffeaa5        	call8	400e9a28 <adjust_boot_time>
400e9b7f:	0a4d      	mov.n	a4, a10
400e9b81:	0b5d      	mov.n	a5, a11
400e9b83:	03ad      	mov.n	a10, a3
400e9b85:	9af825        	call8	40084b08 <_lock_release>
400e9b88:	042d      	mov.n	a2, a4
400e9b8a:	053d      	mov.n	a3, a5
400e9b8c:	f01d      	retw.n
	...

400e9b90 <esp_clk_slowclk_cal_set>:
400e9b90:	004136        	entry	a1, 32
400e9b93:	a29865        	call8	4008c518 <rtc_time_get>
400e9b96:	9b8a31        	l32r	a3, 400d09c0 <_flash_cache_start+0x9a8>
400e9b99:	0020c0        	memw
400e9b9c:	002382        	l32i	a8, a3, 0
400e9b9f:	c08820        	sub	a8, a8, a2
400e9ba2:	313f80        	srai	a3, a8, 31
400e9ba5:	8233a0        	mull	a3, a3, a10
400e9ba8:	82b8b0        	mull	a11, a8, a11
400e9bab:	80b3b0        	add	a11, a3, a11
400e9bae:	8238a0        	mull	a3, a8, a10
400e9bb1:	a288a0        	muluh	a8, a8, a10
400e9bb4:	808b80        	add	a8, a11, a8
400e9bb7:	319f80        	srai	a9, a8, 31
400e9bba:	9b8241        	l32r	a4, 400d09c4 <_flash_cache_start+0x9ac>
400e9bbd:	104940        	and	a4, a9, a4
400e9bc0:	343a      	add.n	a3, a4, a3
400e9bc2:	1a0c      	movi.n	a10, 1
400e9bc4:	013347        	bltu	a3, a4, 400e9bc9 <esp_clk_slowclk_cal_set+0x39>
400e9bc7:	0a0c      	movi.n	a10, 0
400e9bc9:	808a80        	add	a8, a10, a8
400e9bcc:	114830        	slli	a4, a8, 13
400e9bcf:	c53330        	extui	a3, a3, 19, 13
400e9bd2:	203430        	or	a3, a4, a3
400e9bd5:	314380        	srai	a4, a8, 19
400e9bd8:	ffdde5        	call8	400e99b8 <get_boot_time>
400e9bdb:	803a30        	add	a3, a10, a3
400e9bde:	01a092        	movi	a9, 1
400e9be1:	0133a7        	bltu	a3, a10, 400e9be6 <esp_clk_slowclk_cal_set+0x56>
400e9be4:	090c      	movi.n	a9, 0
400e9be6:	8b4a      	add.n	a8, a11, a4
400e9be8:	b98a      	add.n	a11, a9, a8
400e9bea:	20a330        	or	a10, a3, a3
400e9bed:	ffdee5        	call8	400e99dc <set_boot_time>
400e9bf0:	9b7431        	l32r	a3, 400d09c0 <_flash_cache_start+0x9a8>
400e9bf3:	0020c0        	memw
400e9bf6:	0329      	s32i.n	a2, a3, 0
400e9bf8:	f01d      	retw.n
	...

400e9bfc <esp_clk_slowclk_cal_get>:
400e9bfc:	004136        	entry	a1, 32
400e9bff:	9b7021        	l32r	a2, 400d09c0 <_flash_cache_start+0x9a8>
400e9c02:	0020c0        	memw
400e9c05:	0228      	l32i.n	a2, a2, 0
400e9c07:	f01d      	retw.n
400e9c09:	000000        	ill

400e9c0c <get_rtc_time_us>:
400e9c0c:	004136        	entry	a1, 32
400e9c0f:	a290a5        	call8	4008c518 <rtc_time_get>
400e9c12:	202aa0        	or	a2, a10, a10
400e9c15:	203bb0        	or	a3, a11, a11
400e9c18:	fffe25        	call8	400e9bfc <esp_clk_slowclk_cal_get>
400e9c1b:	8292a0        	mull	a9, a2, a10
400e9c1e:	a222a0        	muluh	a2, a2, a10
400e9c21:	118230        	slli	a8, a2, 13
400e9c24:	c59390        	extui	a9, a9, 19, 13
400e9c27:	209890        	or	a9, a8, a9
400e9c2a:	c58320        	extui	a8, a2, 19, 13
400e9c2d:	8223a0        	mull	a2, a3, a10
400e9c30:	a2b3a0        	muluh	a11, a3, a10
400e9c33:	c53320        	extui	a3, a2, 19, 13
400e9c36:	11ab30        	slli	a10, a11, 13
400e9c39:	20a3a0        	or	a10, a3, a10
400e9c3c:	112230        	slli	a2, a2, 13
400e9c3f:	802920        	add	a2, a9, a2
400e9c42:	130c      	movi.n	a3, 1
400e9c44:	013297        	bltu	a2, a9, 400e9c49 <get_rtc_time_us+0x3d>
400e9c47:	030c      	movi.n	a3, 0
400e9c49:	a8aa      	add.n	a10, a8, a10
400e9c4b:	33aa      	add.n	a3, a3, a10
400e9c4d:	f01d      	retw.n
	...

400e9c50 <esp_set_time_from_rtc>:
400e9c50:	004136        	entry	a1, 32
400e9c53:	fffba5        	call8	400e9c0c <get_rtc_time_us>
400e9c56:	0a3d      	mov.n	a3, a10
400e9c58:	0b2d      	mov.n	a2, a11
400e9c5a:	97a765        	call8	400816d0 <esp_timer_get_time>
400e9c5d:	c0a3a0        	sub	a10, a3, a10
400e9c60:	180c      	movi.n	a8, 1
400e9c62:	0233a7        	bltu	a3, a10, 400e9c68 <esp_set_time_from_rtc+0x18>
400e9c65:	00a082        	movi	a8, 0
400e9c68:	c0b2b0        	sub	a11, a2, a11
400e9c6b:	c08b80        	sub	a8, a11, a8
400e9c6e:	9b5021        	l32r	a2, 400d09b0 <_flash_cache_start+0x998>
400e9c71:	02a9      	s32i.n	a10, a2, 0
400e9c73:	1289      	s32i.n	a8, a2, 4
400e9c75:	f01d      	retw.n
	...

400e9c78 <clock_gettime>:
400e9c78:	006136        	entry	a1, 48
400e9c7b:	00d356        	bnez	a3, 400e9c8c <clock_gettime+0x14>
400e9c7e:	f12925        	call8	400daf10 <__errno>
400e9c81:	16a022        	movi	a2, 22
400e9c84:	006a22        	s32i	a2, a10, 0
400e9c87:	ffaf22        	movi	a2, -1
400e9c8a:	f01d      	retw.n
400e9c8c:	051226        	beqi	a2, 1, 400e9c95 <clock_gettime+0x1d>
400e9c8f:	2e4226        	beqi	a2, 4, 400e9cc1 <clock_gettime+0x49>
400e9c92:	001b06        	j	400e9d02 <clock_gettime+0x8a>
400e9c95:	00a0c2        	movi	a12, 0
400e9c98:	08c1b2        	addi	a11, a1, 8
400e9c9b:	20acc0        	or	a10, a12, a12
400e9c9e:	9ab765        	call8	40084814 <_gettimeofday_r>
400e9ca1:	2128      	l32i.n	a2, a1, 8
400e9ca3:	0329      	s32i.n	a2, a3, 0
400e9ca5:	f03d      	nop.n
400e9ca7:	f03d      	nop.n
400e9ca9:	f03d      	nop.n
400e9cab:	f03d      	nop.n
400e9cad:	3188      	l32i.n	a8, a1, 12
400e9caf:	1128b0        	slli	a2, a8, 5
400e9cb2:	c02280        	sub	a2, a2, a8
400e9cb5:	a02280        	addx4	a2, a2, a8
400e9cb8:	1142d0        	slli	a4, a2, 3
400e9cbb:	1349      	s32i.n	a4, a3, 4
400e9cbd:	020c      	movi.n	a2, 0
400e9cbf:	f01d      	retw.n
400e9cc1:	97a0e5        	call8	400816d0 <esp_timer_get_time>
400e9cc4:	0a4d      	mov.n	a4, a10
400e9cc6:	0b5d      	mov.n	a5, a11
400e9cc8:	9a07c1        	l32r	a12, 400d04e4 <_flash_cache_start+0x4cc>
400e9ccb:	98e6d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e9cce:	98e081        	l32r	a8, 400d0050 <_flash_cache_start+0x38>
400e9cd1:	0008e0        	callx8	a8
400e9cd4:	03a9      	s32i.n	a10, a3, 0
400e9cd6:	f03d      	nop.n
400e9cd8:	f03d      	nop.n
400e9cda:	f03d      	nop.n
400e9cdc:	f03d      	nop.n
400e9cde:	9a01c1        	l32r	a12, 400d04e4 <_flash_cache_start+0x4cc>
400e9ce1:	98e0d1        	l32r	a13, 400d0064 <_flash_cache_start+0x4c>
400e9ce4:	20a440        	or	a10, a4, a4
400e9ce7:	20b550        	or	a11, a5, a5
400e9cea:	9ab181        	l32r	a8, 400d07b0 <_flash_cache_start+0x798>
400e9ced:	0008e0        	callx8	a8
400e9cf0:	112ab0        	slli	a2, a10, 5
400e9cf3:	c022a0        	sub	a2, a2, a10
400e9cf6:	a0a2a0        	addx4	a10, a2, a10
400e9cf9:	112ad0        	slli	a2, a10, 3
400e9cfc:	1329      	s32i.n	a2, a3, 4
400e9cfe:	020c      	movi.n	a2, 0
400e9d00:	f01d      	retw.n
400e9d02:	f120e5        	call8	400daf10 <__errno>
400e9d05:	16a022        	movi	a2, 22
400e9d08:	006a22        	s32i	a2, a10, 0
400e9d0b:	ffaf22        	movi	a2, -1
400e9d0e:	f01d      	retw.n

400e9d10 <_raise_r>:
400e9d10:	004136        	entry	a1, 32
400e9d13:	a165a5        	call8	4008b36c <abort>
	...

400e9d18 <_sbrk_r>:
400e9d18:	004136        	entry	a1, 32
400e9d1b:	a16525        	call8	4008b36c <abort>
	...

400e9d20 <raise_r_stub>:
400e9d20:	004136        	entry	a1, 32
400e9d23:	00a0b2        	movi	a11, 0
400e9d26:	20a220        	or	a10, a2, a2
400e9d29:	fffe65        	call8	400e9d10 <_raise_r>
400e9d2c:	000090        	retw
	...

400e9d30 <esp_setup_syscall_table>:
400e9d30:	004136        	entry	a1, 32
400e9d33:	9b2681        	l32r	a8, 400d09cc <_flash_cache_start+0x9b4>
400e9d36:	9b2491        	l32r	a9, 400d09c8 <_flash_cache_start+0x9b0>
400e9d39:	0989      	s32i.n	a8, a9, 0
400e9d3b:	f03d      	nop.n
400e9d3d:	f03d      	nop.n
400e9d3f:	f03d      	nop.n
400e9d41:	f03d      	nop.n
400e9d43:	9b2391        	l32r	a9, 400d09d0 <_flash_cache_start+0x9b8>
400e9d46:	0989      	s32i.n	a8, a9, 0
400e9d48:	f03d      	nop.n
400e9d4a:	f03d      	nop.n
400e9d4c:	f03d      	nop.n
400e9d4e:	f03d      	nop.n
400e9d50:	9b2291        	l32r	a9, 400d09d8 <_flash_cache_start+0x9c0>
400e9d53:	9b2081        	l32r	a8, 400d09d4 <_flash_cache_start+0x9bc>
400e9d56:	0899      	s32i.n	a9, a8, 0
400e9d58:	4a0c      	movi.n	a10, 4
400e9d5a:	98e481        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e9d5d:	0008e0        	callx8	a8
400e9d60:	9b1f81        	l32r	a8, 400d09dc <_flash_cache_start+0x9c4>
400e9d63:	08a9      	s32i.n	a10, a8, 0
400e9d65:	080c      	movi.n	a8, 0
400e9d67:	0a89      	s32i.n	a8, a10, 0
400e9d69:	f01d      	retw.n
	...

400e9d6c <find_key>:
400e9d6c:	004136        	entry	a1, 32
400e9d6f:	023d      	mov.n	a3, a2
400e9d71:	9b1ba1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9d74:	9ed1a5        	call8	40088a90 <vTaskEnterCritical>
400e9d77:	9b1b21        	l32r	a2, 400d09e4 <_flash_cache_start+0x9cc>
400e9d7a:	0228      	l32i.n	a2, a2, 0
400e9d7c:	000246        	j	400e9d89 <find_key+0x1d>
400e9d7f:	000000        	ill
400e9d82:	0288      	l32i.n	a8, a2, 0
400e9d84:	041837        	beq	a8, a3, 400e9d8c <find_key+0x20>
400e9d87:	2228      	l32i.n	a2, a2, 8
400e9d89:	ff5256        	bnez	a2, 400e9d82 <find_key+0x16>
400e9d8c:	9b15a1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9d8f:	9ee425        	call8	40088bd0 <vTaskExitCritical>
400e9d92:	f01d      	retw.n

400e9d94 <pthread_local_storage_thread_deleted_callback>:
400e9d94:	004136        	entry	a1, 32
400e9d97:	00e356        	bnez	a3, 400e9da9 <pthread_local_storage_thread_deleted_callback+0x15>
400e9d9a:	9b13d1        	l32r	a13, 400d09e8 <_flash_cache_start+0x9d0>
400e9d9d:	9b13c1        	l32r	a12, 400d09ec <_flash_cache_start+0x9d4>
400e9da0:	7ea0b2        	movi	a11, 126
400e9da3:	9b13a1        	l32r	a10, 400d09f0 <_flash_cache_start+0x9d8>
400e9da6:	f11325        	call8	400daed8 <__assert_func>
400e9da9:	0328      	l32i.n	a2, a3, 0
400e9dab:	000846        	j	400e9dd0 <pthread_local_storage_thread_deleted_callback+0x3c>
400e9dae:	000000        	ill
400e9db1:	0022a2        	l32i	a10, a2, 0
400e9db4:	fffb65        	call8	400e9d6c <find_key>
400e9db7:	009a16        	beqz	a10, 400e9dc4 <pthread_local_storage_thread_deleted_callback+0x30>
400e9dba:	012a82        	l32i	a8, a10, 4
400e9dbd:	388c      	beqz.n	a8, 400e9dc4 <pthread_local_storage_thread_deleted_callback+0x30>
400e9dbf:	12a8      	l32i.n	a10, a2, 4
400e9dc1:	0008e0        	callx8	a8
400e9dc4:	2248      	l32i.n	a4, a2, 8
400e9dc6:	02ad      	mov.n	a10, a2
400e9dc8:	98b381        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9dcb:	0008e0        	callx8	a8
400e9dce:	042d      	mov.n	a2, a4
400e9dd0:	fdd256        	bnez	a2, 400e9db1 <pthread_local_storage_thread_deleted_callback+0x1d>
400e9dd3:	20a330        	or	a10, a3, a3
400e9dd6:	98af81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9dd9:	0008e0        	callx8	a8
400e9ddc:	f01d      	retw.n
	...

400e9de0 <pthread_key_create>:
400e9de0:	004136        	entry	a1, 32
400e9de3:	ca0c      	movi.n	a10, 12
400e9de5:	98c181        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e9de8:	0008e0        	callx8	a8
400e9deb:	0a4d      	mov.n	a4, a10
400e9ded:	041a16        	beqz	a10, 400e9e32 <pthread_key_create+0x52>
400e9df0:	9afca1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9df3:	9ec9e5        	call8	40088a90 <vTaskEnterCritical>
400e9df6:	9afb81        	l32r	a8, 400d09e4 <_flash_cache_start+0x9cc>
400e9df9:	0888      	l32i.n	a8, a8, 0
400e9dfb:	588c      	beqz.n	a8, 400e9e04 <pthread_key_create+0x24>
400e9dfd:	0888      	l32i.n	a8, a8, 0
400e9dff:	881b      	addi.n	a8, a8, 1
400e9e01:	000086        	j	400e9e07 <pthread_key_create+0x27>
400e9e04:	01a082        	movi	a8, 1
400e9e07:	006482        	s32i	a8, a4, 0
400e9e0a:	016432        	s32i	a3, a4, 4
400e9e0d:	0289      	s32i.n	a8, a2, 0
400e9e0f:	f03d      	nop.n
400e9e11:	f03d      	nop.n
400e9e13:	f03d      	nop.n
400e9e15:	f03d      	nop.n
400e9e17:	9af321        	l32r	a2, 400d09e4 <_flash_cache_start+0x9cc>
400e9e1a:	0238      	l32i.n	a3, a2, 0
400e9e1c:	2439      	s32i.n	a3, a4, 8
400e9e1e:	0249      	s32i.n	a4, a2, 0
400e9e20:	f03d      	nop.n
400e9e22:	f03d      	nop.n
400e9e24:	f03d      	nop.n
400e9e26:	f03d      	nop.n
400e9e28:	9aeea1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9e2b:	9eda65        	call8	40088bd0 <vTaskExitCritical>
400e9e2e:	020c      	movi.n	a2, 0
400e9e30:	f01d      	retw.n
400e9e32:	c20c      	movi.n	a2, 12
400e9e34:	f01d      	retw.n
	...

400e9e38 <pthread_key_delete>:
400e9e38:	004136        	entry	a1, 32
400e9e3b:	9ae9a1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9e3e:	9ec525        	call8	40088a90 <vTaskEnterCritical>
400e9e41:	20a220        	or	a10, a2, a2
400e9e44:	fff265        	call8	400e9d6c <find_key>
400e9e47:	021a16        	beqz	a10, 400e9e6c <pthread_key_delete+0x34>
400e9e4a:	9ae621        	l32r	a2, 400d09e4 <_flash_cache_start+0x9cc>
400e9e4d:	0298      	l32i.n	a9, a2, 0
400e9e4f:	099a97        	bne	a10, a9, 400e9e5c <pthread_key_delete+0x24>
400e9e52:	2988      	l32i.n	a8, a9, 8
400e9e54:	0289      	s32i.n	a8, a2, 0
400e9e56:	000306        	j	400e9e66 <pthread_key_delete+0x2e>
400e9e59:	089d00        	lsx	f9, a13, a0
400e9e5c:	2988      	l32i.n	a8, a9, 8
400e9e5e:	f89a87        	bne	a10, a8, 400e9e5a <pthread_key_delete+0x22>
400e9e61:	2828      	l32i.n	a2, a8, 8
400e9e63:	026922        	s32i	a2, a9, 8
400e9e66:	988b81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9e69:	0008e0        	callx8	a8
400e9e6c:	9adda1        	l32r	a10, 400d09e0 <_flash_cache_start+0x9c8>
400e9e6f:	9ed625        	call8	40088bd0 <vTaskExitCritical>
400e9e72:	020c      	movi.n	a2, 0
400e9e74:	f01d      	retw.n
	...

400e9e78 <pthread_getspecific>:
400e9e78:	004136        	entry	a1, 32
400e9e7b:	00a0b2        	movi	a11, 0
400e9e7e:	20abb0        	or	a10, a11, a11
400e9e81:	9eb8e5        	call8	40088a10 <pvTaskGetThreadLocalStoragePointer>
400e9e84:	00aa16        	beqz	a10, 400e9e92 <pthread_getspecific+0x1a>
400e9e87:	02bd      	mov.n	a11, a2
400e9e89:	0290e5        	call8	400ec798 <find_value>
400e9e8c:	6a8c      	beqz.n	a10, 400e9e96 <pthread_getspecific+0x1e>
400e9e8e:	1a28      	l32i.n	a2, a10, 4
400e9e90:	f01d      	retw.n
400e9e92:	020c      	movi.n	a2, 0
400e9e94:	f01d      	retw.n
400e9e96:	020c      	movi.n	a2, 0
400e9e98:	f01d      	retw.n
	...

400e9e9c <pthread_setspecific>:
400e9e9c:	004136        	entry	a1, 32
400e9e9f:	20a220        	or	a10, a2, a2
400e9ea2:	ffeca5        	call8	400e9d6c <find_key>
400e9ea5:	07fa16        	beqz	a10, 400e9f28 <pthread_setspecific+0x8c>
400e9ea8:	00a0b2        	movi	a11, 0
400e9eab:	20abb0        	or	a10, a11, a11
400e9eae:	9eb625        	call8	40088a10 <pvTaskGetThreadLocalStoragePointer>
400e9eb1:	0a4d      	mov.n	a4, a10
400e9eb3:	9adc      	bnez.n	a10, 400e9ed0 <pthread_setspecific+0x34>
400e9eb5:	4b0c      	movi.n	a11, 4
400e9eb7:	1a0c      	movi.n	a10, 1
400e9eb9:	98e081        	l32r	a8, 400d023c <_flash_cache_start+0x224>
400e9ebc:	0008e0        	callx8	a8
400e9ebf:	0a4d      	mov.n	a4, a10
400e9ec1:	067a16        	beqz	a10, 400e9f2c <pthread_setspecific+0x90>
400e9ec4:	9accd1        	l32r	a13, 400d09f4 <_flash_cache_start+0x9dc>
400e9ec7:	0acd      	mov.n	a12, a10
400e9ec9:	0b0c      	movi.n	a11, 0
400e9ecb:	0bad      	mov.n	a10, a11
400e9ecd:	9fa5a5        	call8	40089928 <vTaskSetThreadLocalStoragePointerAndDelCallback>
400e9ed0:	20b220        	or	a11, a2, a2
400e9ed3:	20a440        	or	a10, a4, a4
400e9ed6:	028c25        	call8	400ec798 <find_value>
400e9ed9:	029a16        	beqz	a10, 400e9f06 <pthread_setspecific+0x6a>
400e9edc:	438c      	beqz.n	a3, 400e9ee4 <pthread_setspecific+0x48>
400e9ede:	1a39      	s32i.n	a3, a10, 4
400e9ee0:	020c      	movi.n	a2, 0
400e9ee2:	f01d      	retw.n
400e9ee4:	0428      	l32i.n	a2, a4, 0
400e9ee6:	089a27        	bne	a10, a2, 400e9ef2 <pthread_setspecific+0x56>
400e9ee9:	2228      	l32i.n	a2, a2, 8
400e9eeb:	0429      	s32i.n	a2, a4, 0
400e9eed:	000286        	j	400e9efb <pthread_setspecific+0x5f>
400e9ef0:	082d      	mov.n	a2, a8
400e9ef2:	2288      	l32i.n	a8, a2, 8
400e9ef4:	f89a87        	bne	a10, a8, 400e9ef0 <pthread_setspecific+0x54>
400e9ef7:	2838      	l32i.n	a3, a8, 8
400e9ef9:	2239      	s32i.n	a3, a2, 8
400e9efb:	986681        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9efe:	0008e0        	callx8	a8
400e9f01:	020c      	movi.n	a2, 0
400e9f03:	f01d      	retw.n
400e9f05:	63ac00        	minu	a10, a12, a0
400e9f08:	ca0c      	movi.n	a10, 12
400e9f0a:	987881        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e9f0d:	0008e0        	callx8	a8
400e9f10:	0aac      	beqz.n	a10, 400e9f34 <pthread_setspecific+0x98>
400e9f12:	0a29      	s32i.n	a2, a10, 0
400e9f14:	1a39      	s32i.n	a3, a10, 4
400e9f16:	f03d      	nop.n
400e9f18:	f03d      	nop.n
400e9f1a:	f03d      	nop.n
400e9f1c:	f03d      	nop.n
400e9f1e:	0428      	l32i.n	a2, a4, 0
400e9f20:	2a29      	s32i.n	a2, a10, 8
400e9f22:	04a9      	s32i.n	a10, a4, 0
400e9f24:	020c      	movi.n	a2, 0
400e9f26:	f01d      	retw.n
400e9f28:	220c      	movi.n	a2, 2
400e9f2a:	f01d      	retw.n
400e9f2c:	c20c      	movi.n	a2, 12
400e9f2e:	f01d      	retw.n
400e9f30:	020c      	movi.n	a2, 0
400e9f32:	f01d      	retw.n
400e9f34:	c20c      	movi.n	a2, 12
400e9f36:	f01d      	retw.n

400e9f38 <esp_pthread_cfg_key_destructor>:
400e9f38:	004136        	entry	a1, 32
400e9f3b:	20a220        	or	a10, a2, a2
400e9f3e:	985581        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9f41:	0008e0        	callx8	a8
400e9f44:	f01d      	retw.n
	...

400e9f48 <esp_pthread_init>:
400e9f48:	004136        	entry	a1, 32
400e9f4b:	9aabb1        	l32r	a11, 400d09f8 <_flash_cache_start+0x9e0>
400e9f4e:	9aaba1        	l32r	a10, 400d09fc <_flash_cache_start+0x9e4>
400e9f51:	ffe8e5        	call8	400e9de0 <pthread_key_create>
400e9f54:	202aa0        	or	a2, a10, a10
400e9f57:	022a56        	bnez	a10, 400e9f7d <esp_pthread_init+0x35>
400e9f5a:	1a0c      	movi.n	a10, 1
400e9f5c:	9da0e5        	call8	4008796c <xQueueCreateMutex>
400e9f5f:	9aa881        	l32r	a8, 400d0a00 <_flash_cache_start+0x9e8>
400e9f62:	08a9      	s32i.n	a10, a8, 0
400e9f64:	8adc      	bnez.n	a10, 400e9f80 <esp_pthread_init+0x38>
400e9f66:	f03d      	nop.n
400e9f68:	f03d      	nop.n
400e9f6a:	f03d      	nop.n
400e9f6c:	0020f0        	nop
400e9f6f:	9aa321        	l32r	a2, 400d09fc <_flash_cache_start+0x9e4>
400e9f72:	0022a2        	l32i	a10, a2, 0
400e9f75:	ffec25        	call8	400e9e38 <pthread_key_delete>
400e9f78:	01a122        	movi	a2, 0x101
400e9f7b:	f01d      	retw.n
400e9f7d:	01a122        	movi	a2, 0x101
400e9f80:	f01d      	retw.n
	...

400e9f84 <pthread_cancel>:
400e9f84:	004136        	entry	a1, 32
400e9f87:	99daa5        	call8	40083d30 <esp_log_timestamp>
400e9f8a:	9a9fb1        	l32r	a11, 400d0a08 <_flash_cache_start+0x9f0>
400e9f8d:	9a9df1        	l32r	a15, 400d0a04 <_flash_cache_start+0x9ec>
400e9f90:	20ebb0        	or	a14, a11, a11
400e9f93:	20daa0        	or	a13, a10, a10
400e9f96:	9a9dc1        	l32r	a12, 400d0a0c <_flash_cache_start+0x9f4>
400e9f99:	1a0c      	movi.n	a10, 1
400e9f9b:	99c1e5        	call8	40083bb8 <esp_log_write>
400e9f9e:	825c      	movi.n	a2, 88
400e9fa0:	f01d      	retw.n
	...

400e9fa4 <pthread_mutex_init>:
400e9fa4:	004136        	entry	a1, 32
400e9fa7:	05d216        	beqz	a2, 400ea008 <pthread_mutex_init+0x64>
400e9faa:	013316        	beqz	a3, 400e9fc1 <pthread_mutex_init+0x1d>
400e9fad:	002382        	l32i	a8, a3, 0
400e9fb0:	058816        	beqz	a8, 400ea00c <pthread_mutex_init+0x68>
400e9fb3:	20a330        	or	a10, a3, a3
400e9fb6:	027f65        	call8	400ec7ac <mutexattr_check>
400e9fb9:	053a56        	bnez	a10, 400ea010 <pthread_mutex_init+0x6c>
400e9fbc:	1348      	l32i.n	a4, a3, 4
400e9fbe:	000046        	j	400e9fc3 <pthread_mutex_init+0x1f>
400e9fc1:	040c      	movi.n	a4, 0
400e9fc3:	8a0c      	movi.n	a10, 8
400e9fc5:	984981        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400e9fc8:	0008e0        	callx8	a8
400e9fcb:	0a3d      	mov.n	a3, a10
400e9fcd:	043a16        	beqz	a10, 400ea014 <pthread_mutex_init+0x70>
400e9fd0:	1a49      	s32i.n	a4, a10, 4
400e9fd2:	0a1466        	bnei	a4, 1, 400e9fe0 <pthread_mutex_init+0x3c>
400e9fd5:	4a0c      	movi.n	a10, 4
400e9fd7:	9d9965        	call8	4008796c <xQueueCreateMutex>
400e9fda:	03a9      	s32i.n	a10, a3, 0
400e9fdc:	000246        	j	400e9fe9 <pthread_mutex_init+0x45>
400e9fdf:	a0a200        	addx4	a10, a2, a0
400e9fe2:	98a501        	l32r	a0, 400d0278 <_flash_cache_start+0x260>
400e9fe5:	a29d      	lsi	f9, a2, 8
400e9fe7:	3d0063        	lsi	f6, a0, 244
400e9fea:	f03df0        	subx8	a3, a13, a15
400e9fed:	f03d      	nop.n
400e9fef:	f03d      	nop.n
400e9ff1:	002342        	l32i	a4, a3, 0
400e9ff4:	a4cc      	bnez.n	a4, 400ea002 <pthread_mutex_init+0x5e>
400e9ff6:	03ad      	mov.n	a10, a3
400e9ff8:	982781        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400e9ffb:	0008e0        	callx8	a8
400e9ffe:	b20c      	movi.n	a2, 11
400ea000:	f01d      	retw.n
400ea002:	0239      	s32i.n	a3, a2, 0
400ea004:	020c      	movi.n	a2, 0
400ea006:	f01d      	retw.n
400ea008:	621c      	movi.n	a2, 22
400ea00a:	f01d      	retw.n
400ea00c:	621c      	movi.n	a2, 22
400ea00e:	f01d      	retw.n
400ea010:	0a2d      	mov.n	a2, a10
400ea012:	f01d      	retw.n
400ea014:	c20c      	movi.n	a2, 12
400ea016:	f01d      	retw.n

400ea018 <pthread_mutex_init_if_static>:
400ea018:	004136        	entry	a1, 32
400ea01b:	002282        	l32i	a8, a2, 0
400ea01e:	240866        	bnei	a8, -1, 400ea046 <pthread_mutex_init_if_static+0x2e>
400ea021:	9a7ba1        	l32r	a10, 400d0a10 <_flash_cache_start+0x9f8>
400ea024:	9ea6a5        	call8	40088a90 <vTaskEnterCritical>
400ea027:	002282        	l32i	a8, a2, 0
400ea02a:	0b0866        	bnei	a8, -1, 400ea039 <pthread_mutex_init_if_static+0x21>
400ea02d:	0b0c      	movi.n	a11, 0
400ea02f:	02ad      	mov.n	a10, a2
400ea031:	fff725        	call8	400e9fa4 <pthread_mutex_init>
400ea034:	0a2d      	mov.n	a2, a10
400ea036:	000046        	j	400ea03b <pthread_mutex_init_if_static+0x23>
400ea039:	020c      	movi.n	a2, 0
400ea03b:	9a75a1        	l32r	a10, 400d0a10 <_flash_cache_start+0x9f8>
400ea03e:	9eb925        	call8	40088bd0 <vTaskExitCritical>
400ea041:	f01d      	retw.n
400ea043:	000000        	ill
400ea046:	020c      	movi.n	a2, 0
400ea048:	f01d      	retw.n
	...

400ea04c <pthread_mutex_destroy>:
400ea04c:	004136        	entry	a1, 32
400ea04f:	d29c      	beqz.n	a2, 400ea070 <pthread_mutex_destroy+0x24>
400ea051:	0228      	l32i.n	a2, a2, 0
400ea053:	d29c      	beqz.n	a2, 400ea074 <pthread_mutex_destroy+0x28>
400ea055:	0b0c      	movi.n	a11, 0
400ea057:	02ad      	mov.n	a10, a2
400ea059:	9aac65        	call8	40084b20 <pthread_mutex_lock_internal>
400ea05c:	18ba26        	beqi	a10, 16, 400ea078 <pthread_mutex_destroy+0x2c>
400ea05f:	02a8      	l32i.n	a10, a2, 0
400ea061:	9dd5a5        	call8	40087dbc <vQueueDelete>
400ea064:	02ad      	mov.n	a10, a2
400ea066:	980b81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400ea069:	0008e0        	callx8	a8
400ea06c:	020c      	movi.n	a2, 0
400ea06e:	f01d      	retw.n
400ea070:	621c      	movi.n	a2, 22
400ea072:	f01d      	retw.n
400ea074:	621c      	movi.n	a2, 22
400ea076:	f01d      	retw.n
400ea078:	021c      	movi.n	a2, 16
400ea07a:	f01d      	retw.n
400ea07c:	ef08      	l32i.n	a0, a15, 56
400ea07e:	3ffb      	addi.n	a3, a15, 15
400ea080:	7b8c      	beqz.n	a11, 400ea08b <pthread_mutex_destroy+0x3f>
400ea082:	b03f40        	addx8	a3, a15, a4
400ea085:	407b      	addi.n	a4, a0, 7
400ea087:	3f          	.byte 0x3f
400ea088:	af          	.byte 0xaf
400ea089:	be          	.byte 0xbe
400ea08a:	dead      	lsi	f10, a14, 56
400ea08c:	407c00        	wer	a0, a12
400ea08f:	3f          	.byte 0x3f

400ea090 <esp_coex_adapter_register>:
400ea090:	004136        	entry	a1, 32
400ea093:	fffa91        	l32r	a9, 400ea07c <pthread_mutex_destroy+0x30>
400ea096:	080c      	movi.n	a8, 0
400ea098:	09a8      	l32i.n	a10, a9, 0
400ea09a:	3c9a87        	bne	a10, a8, 400ea0da <esp_coex_adapter_register+0x4a>
400ea09d:	0b9287        	bne	a2, a8, 400ea0ac <esp_coex_adapter_register+0x1c>
400ea0a0:	fff8a1        	l32r	a10, 400ea080 <pthread_mutex_destroy+0x34>
400ea0a3:	f137e5        	call8	400db420 <puts>
400ea0a6:	02a182        	movi	a8, 0x102
400ea0a9:	000b46        	j	400ea0da <esp_coex_adapter_register+0x4a>
400ea0ac:	02c8      	l32i.n	a12, a2, 0
400ea0ae:	0e1c26        	beqi	a12, 1, 400ea0c0 <esp_coex_adapter_register+0x30>
400ea0b1:	1b0c      	movi.n	a11, 1
400ea0b3:	fff4a1        	l32r	a10, 400ea084 <pthread_mutex_destroy+0x38>
400ea0b6:	01e2a5        	call8	400ebee0 <coexist_printf>
400ea0b9:	02a182        	movi	a8, 0x102
400ea0bc:	000686        	j	400ea0da <esp_coex_adapter_register+0x4a>
400ea0bf:	22c200        	orb	b12, b2, b0
400ea0c2:	f1b114        	lsi	f1, a1, 0x3c4
400ea0c5:	ff          	.byte 0xff
400ea0c6:	0e1cb7        	beq	a12, a11, 400ea0d8 <esp_coex_adapter_register+0x48>
400ea0c9:	fff0a1        	l32r	a10, 400ea08c <pthread_mutex_destroy+0x40>
400ea0cc:	01e125        	call8	400ebee0 <coexist_printf>
400ea0cf:	02a182        	movi	a8, 0x102
400ea0d2:	000106        	j	400ea0da <esp_coex_adapter_register+0x4a>
400ea0d5:	000000        	ill
400ea0d8:	0929      	s32i.n	a2, a9, 0
400ea0da:	082d      	mov.n	a2, a8
400ea0dc:	f01d      	retw.n
	...

400ea0e0 <spi_flash_cache2phys>:
400ea0e0:	004136        	entry	a1, 32
400ea0e3:	97f481        	l32r	a8, 400d00b4 <_flash_cache_start+0x9c>
400ea0e6:	828a      	add.n	a8, a2, a8
400ea0e8:	9a4b91        	l32r	a9, 400d0a14 <_flash_cache_start+0x9fc>
400ea0eb:	47b987        	bgeu	a9, a8, 400ea136 <spi_flash_cache2phys+0x56>
400ea0ee:	9a4a81        	l32r	a8, 400d0a18 <_flash_cache_start+0xa00>
400ea0f1:	142827        	blt	a8, a2, 400ea109 <spi_flash_cache2phys+0x29>
400ea0f4:	9a4a81        	l32r	a8, 400d0a1c <_flash_cache_start+0xa04>
400ea0f7:	828a      	add.n	a8, a2, a8
400ea0f9:	97dfa1        	l32r	a10, 400d0078 <_flash_cache_start+0x60>
400ea0fc:	a8aa      	add.n	a10, a8, a10
400ea0fe:	b3a880        	movgez	a10, a8, a8
400ea101:	31a0a0        	srai	a10, a10, 16
400ea104:	000586        	j	400ea11e <spi_flash_cache2phys+0x3e>
400ea107:	810000        	src	a0, a0, a0
400ea10a:	97ea      	add.n	a9, a7, a14
400ea10c:	808280        	add	a8, a2, a8
400ea10f:	97daa1        	l32r	a10, 400d0078 <_flash_cache_start+0x60>
400ea112:	80a8a0        	add	a10, a8, a10
400ea115:	b3a880        	movgez	a10, a8, a8
400ea118:	31a0a0        	srai	a10, a10, 16
400ea11b:	40caa2        	addi	a10, a10, 64
400ea11e:	ffa082        	movi	a8, 255
400ea121:	1538a7        	bltu	a8, a10, 400ea13a <spi_flash_cache2phys+0x5a>
400ea124:	9ba3e5        	call8	40085b64 <spi_flash_protected_read_mmu_entry>
400ea127:	13fa26        	beqi	a10, 0x100, 400ea13e <spi_flash_cache2phys+0x5e>
400ea12a:	11aa00        	slli	a10, a10, 16
400ea12d:	f42020        	extui	a2, a2, 0, 16
400ea130:	202a20        	or	a2, a10, a2
400ea133:	000090        	retw
400ea136:	f27c      	movi.n	a2, -1
400ea138:	f01d      	retw.n
400ea13a:	f27c      	movi.n	a2, -1
400ea13c:	f01d      	retw.n
400ea13e:	f27c      	movi.n	a2, -1
400ea140:	f01d      	retw.n
	...

400ea144 <iterator_create>:
400ea144:	004136        	entry	a1, 32
400ea147:	14a0a2        	movi	a10, 20
400ea14a:	97e881        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400ea14d:	0008e0        	callx8	a8
400ea150:	0a29      	s32i.n	a2, a10, 0
400ea152:	1a39      	s32i.n	a3, a10, 4
400ea154:	2a49      	s32i.n	a4, a10, 8
400ea156:	f03d      	nop.n
400ea158:	f03d      	nop.n
400ea15a:	f03d      	nop.n
400ea15c:	f03d      	nop.n
400ea15e:	9a3081        	l32r	a8, 400d0a20 <_flash_cache_start+0xa08>
400ea161:	0888      	l32i.n	a8, a8, 0
400ea163:	3a89      	s32i.n	a8, a10, 12
400ea165:	080c      	movi.n	a8, 0
400ea167:	4a89      	s32i.n	a8, a10, 16
400ea169:	0a2d      	mov.n	a2, a10
400ea16b:	f01d      	retw.n
400ea16d:	000000        	ill

400ea170 <load_partitions>:
400ea170:	006136        	entry	a1, 48
400ea173:	0cc1e2        	addi	a14, a1, 12
400ea176:	08c1d2        	addi	a13, a1, 8
400ea179:	00a0c2        	movi	a12, 0
400ea17c:	993fb1        	l32r	a11, 400d0678 <_flash_cache_start+0x660>
400ea17f:	0cad      	mov.n	a10, a12
400ea181:	9bd1a5        	call8	40085e9c <spi_flash_mmap>
400ea184:	0fda56        	bnez	a10, 400ea285 <load_partitions+0x115>
400ea187:	2128      	l32i.n	a2, a1, 8
400ea189:	993f31        	l32r	a3, 400d0688 <_flash_cache_start+0x670>
400ea18c:	323a      	add.n	a3, a2, a3
400ea18e:	9a2551        	l32r	a5, 400d0a24 <_flash_cache_start+0xa0c>
400ea191:	525a      	add.n	a5, a2, a5
400ea193:	040c      	movi.n	a4, 0
400ea195:	003586        	j	400ea26f <load_partitions+0xff>
400ea198:	001382        	l16ui	a8, a3, 0
400ea19b:	9a2321        	l32r	a2, 400d0a28 <_flash_cache_start+0xa10>
400ea19e:	021827        	beq	a8, a2, 400ea1a4 <load_partitions+0x34>
400ea1a1:	003406        	j	400ea275 <load_partitions+0x105>
400ea1a4:	8a2c      	movi.n	a10, 40
400ea1a6:	97d181        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400ea1a9:	0008e0        	callx8	a8
400ea1ac:	0a2d      	mov.n	a2, a10
400ea1ae:	1388      	l32i.n	a8, a3, 4
400ea1b0:	2a89      	s32i.n	a8, a10, 8
400ea1b2:	f03d      	nop.n
400ea1b4:	f03d      	nop.n
400ea1b6:	f03d      	nop.n
400ea1b8:	f03d      	nop.n
400ea1ba:	2388      	l32i.n	a8, a3, 8
400ea1bc:	3a89      	s32i.n	a8, a10, 12
400ea1be:	f03d      	nop.n
400ea1c0:	f03d      	nop.n
400ea1c2:	f03d      	nop.n
400ea1c4:	f03d      	nop.n
400ea1c6:	020382        	l8ui	a8, a3, 2
400ea1c9:	0a89      	s32i.n	a8, a10, 0
400ea1cb:	f03d      	nop.n
400ea1cd:	f03d      	nop.n
400ea1cf:	f03d      	nop.n
400ea1d1:	f03d      	nop.n
400ea1d3:	030382        	l8ui	a8, a3, 3
400ea1d6:	1a89      	s32i.n	a8, a10, 4
400ea1d8:	f03d      	nop.n
400ea1da:	f03d      	nop.n
400ea1dc:	f03d      	nop.n
400ea1de:	f03d      	nop.n
400ea1e0:	7388      	l32i.n	a8, a3, 28
400ea1e2:	048080        	extui	a8, a8, 0, 1
400ea1e5:	214a82        	s8i	a8, a10, 33
400ea1e8:	0020c0        	memw
400ea1eb:	f03d      	nop.n
400ea1ed:	f03d      	nop.n
400ea1ef:	f03d      	nop.n
400ea1f1:	f03d      	nop.n
400ea1f3:	9a0e81        	l32r	a8, 400d0a2c <_flash_cache_start+0xa14>
400ea1f6:	0020c0        	memw
400ea1f9:	0888      	l32i.n	a8, a8, 0
400ea1fb:	658480        	extui	a8, a8, 20, 7
400ea1fe:	090c      	movi.n	a9, 0
400ea200:	0003c6        	j	400ea213 <load_partitions+0xa3>
400ea203:	070000        	lsi	f0, a0, 28
400ea206:	0768      	l32i.n	a6, a7, 0
400ea208:	1a0c      	movi.n	a10, 1
400ea20a:	3099a0        	xor	a9, a9, a10
400ea20d:	749090        	extui	a9, a9, 0, 8
400ea210:	418180        	srli	a8, a8, 1
400ea213:	fee856        	bnez	a8, 400ea205 <load_partitions+0x95>
400ea216:	f99c      	beqz.n	a9, 400ea239 <load_partitions+0xc9>
400ea218:	020382        	l8ui	a8, a3, 2
400ea21b:	289c      	beqz.n	a8, 400ea231 <load_partitions+0xc1>
400ea21d:	0398      	l32i.n	a9, a3, 0
400ea21f:	992581        	l32r	a8, 400d06b4 <_flash_cache_start+0x69c>
400ea222:	108980        	and	a8, a9, a8
400ea225:	99cb91        	l32r	a9, 400d0954 <_flash_cache_start+0x93c>
400ea228:	051897        	beq	a8, a9, 400ea231 <load_partitions+0xc1>
400ea22b:	9a0191        	l32r	a9, 400d0a30 <_flash_cache_start+0xa18>
400ea22e:	079897        	bne	a8, a9, 400ea239 <load_partitions+0xc9>
400ea231:	180c      	movi.n	a8, 1
400ea233:	214282        	s8i	a8, a2, 33
400ea236:	0020c0        	memw
400ea239:	0c1c      	movi.n	a12, 16
400ea23b:	b3cb      	addi.n	a11, a3, 12
400ea23d:	a2ca      	add.n	a10, a2, a12
400ea23f:	986981        	l32r	a8, 400d03e4 <_flash_cache_start+0x3cc>
400ea242:	0008e0        	callx8	a8
400ea245:	080c      	movi.n	a8, 0
400ea247:	204282        	s8i	a8, a2, 32
400ea24a:	0020c0        	memw
400ea24d:	34dc      	bnez.n	a4, 400ea264 <load_partitions+0xf4>
400ea24f:	f03d      	nop.n
400ea251:	f03d      	nop.n
400ea253:	f03d      	nop.n
400ea255:	f03d      	nop.n
400ea257:	99f241        	l32r	a4, 400d0a20 <_flash_cache_start+0xa08>
400ea25a:	0488      	l32i.n	a8, a4, 0
400ea25c:	9289      	s32i.n	a8, a2, 36
400ea25e:	0429      	s32i.n	a2, a4, 0
400ea260:	000186        	j	400ea26a <load_partitions+0xfa>
400ea263:	948800        	extui	a8, a0, 8, 10
400ea266:	9289      	s32i.n	a8, a2, 36
400ea268:	9429      	s32i.n	a2, a4, 36
400ea26a:	20c332        	addi	a3, a3, 32
400ea26d:	024d      	mov.n	a4, a2
400ea26f:	021357        	beq	a3, a5, 400ea275 <load_partitions+0x105>
400ea272:	ffc886        	j	400ea198 <load_partitions+0x28>
400ea275:	f03d      	nop.n
400ea277:	f03d      	nop.n
400ea279:	0321a2        	l32i	a10, a1, 12
400ea27c:	9bc965        	call8	40085f14 <spi_flash_munmap>
400ea27f:	00a022        	movi	a2, 0
400ea282:	000090        	retw
400ea285:	0a2d      	mov.n	a2, a10
400ea287:	f01d      	retw.n
400ea289:	000000        	ill

400ea28c <esp_partition_iterator_release>:
400ea28c:	004136        	entry	a1, 32
400ea28f:	20a220        	or	a10, a2, a2
400ea292:	978081        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400ea295:	0008e0        	callx8	a8
400ea298:	f01d      	retw.n
	...

400ea29c <esp_partition_next>:
400ea29c:	004136        	entry	a1, 32
400ea29f:	f2cc      	bnez.n	a2, 400ea2b2 <esp_partition_next+0x16>
400ea2a1:	99e4d1        	l32r	a13, 400d0a34 <_flash_cache_start+0xa1c>
400ea2a4:	99e5c1        	l32r	a12, 400d0a38 <_flash_cache_start+0xa20>
400ea2a7:	7b5c      	movi.n	a11, 87
400ea2a9:	99e4a1        	l32r	a10, 400d0a3c <_flash_cache_start+0xa24>
400ea2ac:	201110        	or	a1, a1, a1
400ea2af:	f0c2a5        	call8	400daed8 <__assert_func>
400ea2b2:	032232        	l32i	a3, a2, 12
400ea2b5:	00b356        	bnez	a3, 400ea2c4 <esp_partition_next+0x28>
400ea2b8:	20a220        	or	a10, a2, a2
400ea2bb:	fffd25        	call8	400ea28c <esp_partition_iterator_release>
400ea2be:	020c      	movi.n	a2, 0
400ea2c0:	f01d      	retw.n
400ea2c2:	a10000        	sll	a0, a0
400ea2c5:	df          	.byte 0xdf
400ea2c6:	2599      	s32i.n	a9, a5, 8
400ea2c8:	869a80        	lsi	f8, a10, 0x218
400ea2cb:	0009      	s32i.n	a0, a0, 0
400ea2cd:	0298      	l32i.n	a9, a2, 0
400ea2cf:	0388      	l32i.n	a8, a3, 0
400ea2d1:	1b9987        	bne	a9, a8, 400ea2f0 <esp_partition_next+0x54>
400ea2d4:	1288      	l32i.n	a8, a2, 4
400ea2d6:	ffa092        	movi	a9, 255
400ea2d9:	041897        	beq	a8, a9, 400ea2e1 <esp_partition_next+0x45>
400ea2dc:	1398      	l32i.n	a9, a3, 4
400ea2de:	0e9897        	bne	a8, a9, 400ea2f0 <esp_partition_next+0x54>
400ea2e1:	22a8      	l32i.n	a10, a2, 8
400ea2e3:	aa9c      	beqz.n	a10, 400ea301 <esp_partition_next+0x65>
400ea2e5:	10c3b2        	addi	a11, a3, 16
400ea2e8:	983c81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400ea2eb:	0008e0        	callx8	a8
400ea2ee:	fa8c      	beqz.n	a10, 400ea301 <esp_partition_next+0x65>
400ea2f0:	9338      	l32i.n	a3, a3, 36
400ea2f2:	3239      	s32i.n	a3, a2, 12
400ea2f4:	f03d      	nop.n
400ea2f6:	f03d      	nop.n
400ea2f8:	f03d      	nop.n
400ea2fa:	f03d      	nop.n
400ea2fc:	3238      	l32i.n	a3, a2, 12
400ea2fe:	fcb356        	bnez	a3, 400ea2cd <esp_partition_next+0x31>
400ea301:	99cfa1        	l32r	a10, 400d0a40 <_flash_cache_start+0xa28>
400ea304:	9a8025        	call8	40084b08 <_lock_release>
400ea307:	032232        	l32i	a3, a2, 12
400ea30a:	008356        	bnez	a3, 400ea316 <esp_partition_next+0x7a>
400ea30d:	02ad      	mov.n	a10, a2
400ea30f:	fff7e5        	call8	400ea28c <esp_partition_iterator_release>
400ea312:	020c      	movi.n	a2, 0
400ea314:	f01d      	retw.n
400ea316:	4239      	s32i.n	a3, a2, 16
400ea318:	f03d      	nop.n
400ea31a:	f03d      	nop.n
400ea31c:	f03d      	nop.n
400ea31e:	f03d      	nop.n
400ea320:	9338      	l32i.n	a3, a3, 36
400ea322:	3239      	s32i.n	a3, a2, 12
400ea324:	f01d      	retw.n
	...

400ea328 <esp_partition_find>:
400ea328:	004136        	entry	a1, 32
400ea32b:	99bd81        	l32r	a8, 400d0a20 <_flash_cache_start+0xa08>
400ea32e:	002882        	l32i	a8, a8, 0
400ea331:	021856        	bnez	a8, 400ea356 <esp_partition_find+0x2e>
400ea334:	99c3a1        	l32r	a10, 400d0a40 <_flash_cache_start+0xa28>
400ea337:	9a7925        	call8	40084ac8 <_lock_acquire>
400ea33a:	99b981        	l32r	a8, 400d0a20 <_flash_cache_start+0xa08>
400ea33d:	002882        	l32i	a8, a8, 0
400ea340:	68cc      	bnez.n	a8, 400ea34a <esp_partition_find+0x22>
400ea342:	ffe2e5        	call8	400ea170 <load_partitions>
400ea345:	0a5d      	mov.n	a5, a10
400ea347:	000086        	j	400ea34d <esp_partition_find+0x25>
400ea34a:	00a052        	movi	a5, 0
400ea34d:	99bca1        	l32r	a10, 400d0a40 <_flash_cache_start+0xa28>
400ea350:	9a7b65        	call8	40084b08 <_lock_release>
400ea353:	00f556        	bnez	a5, 400ea366 <esp_partition_find+0x3e>
400ea356:	04cd      	mov.n	a12, a4
400ea358:	03bd      	mov.n	a11, a3
400ea35a:	02ad      	mov.n	a10, a2
400ea35c:	ffde65        	call8	400ea144 <iterator_create>
400ea35f:	fff3e5        	call8	400ea29c <esp_partition_next>
400ea362:	0a2d      	mov.n	a2, a10
400ea364:	f01d      	retw.n
400ea366:	020c      	movi.n	a2, 0
400ea368:	f01d      	retw.n
	...

400ea36c <esp_partition_get>:
400ea36c:	004136        	entry	a1, 32
400ea36f:	00e256        	bnez	a2, 400ea381 <esp_partition_get+0x15>
400ea372:	99b4d1        	l32r	a13, 400d0a44 <_flash_cache_start+0xa2c>
400ea375:	99b4c1        	l32r	a12, 400d0a48 <_flash_cache_start+0xa30>
400ea378:	cca0b2        	movi	a11, 204
400ea37b:	99b0a1        	l32r	a10, 400d0a3c <_flash_cache_start+0xa24>
400ea37e:	f0b5a5        	call8	400daed8 <__assert_func>
400ea381:	4228      	l32i.n	a2, a2, 16
400ea383:	f01d      	retw.n
400ea385:	000000        	ill

400ea388 <esp_partition_find_first>:
400ea388:	004136        	entry	a1, 32
400ea38b:	20c440        	or	a12, a4, a4
400ea38e:	20b330        	or	a11, a3, a3
400ea391:	02ad      	mov.n	a10, a2
400ea393:	fff965        	call8	400ea328 <esp_partition_find>
400ea396:	0a3d      	mov.n	a3, a10
400ea398:	aa8c      	beqz.n	a10, 400ea3a6 <esp_partition_find_first+0x1e>
400ea39a:	fffd25        	call8	400ea36c <esp_partition_get>
400ea39d:	0a2d      	mov.n	a2, a10
400ea39f:	03ad      	mov.n	a10, a3
400ea3a1:	ffeea5        	call8	400ea28c <esp_partition_iterator_release>
400ea3a4:	f01d      	retw.n
400ea3a6:	020c      	movi.n	a2, 0
400ea3a8:	f01d      	retw.n
	...

400ea3ac <esp_partition_erase_range>:
400ea3ac:	004136        	entry	a1, 32
400ea3af:	00e256        	bnez	a2, 400ea3c1 <esp_partition_erase_range+0x15>
400ea3b2:	99a6d1        	l32r	a13, 400d0a4c <_flash_cache_start+0xa34>
400ea3b5:	99a6c1        	l32r	a12, 400d0a50 <_flash_cache_start+0xa38>
400ea3b8:	19a1b2        	movi	a11, 0x119
400ea3bb:	99a0a1        	l32r	a10, 400d0a3c <_flash_cache_start+0xa24>
400ea3be:	f0b1a5        	call8	400daed8 <__assert_func>
400ea3c1:	3288      	l32i.n	a8, a2, 12
400ea3c3:	1d3837        	bltu	a8, a3, 400ea3e4 <esp_partition_erase_range+0x38>
400ea3c6:	809340        	add	a9, a3, a4
400ea3c9:	1c3897        	bltu	a8, a9, 400ea3e9 <esp_partition_erase_range+0x3d>
400ea3cc:	b48040        	extui	a8, a4, 0, 12
400ea3cf:	01d856        	bnez	a8, 400ea3f0 <esp_partition_erase_range+0x44>
400ea3d2:	b48030        	extui	a8, a3, 0, 12
400ea3d5:	c8dc      	bnez.n	a8, 400ea3f5 <esp_partition_erase_range+0x49>
400ea3d7:	22a8      	l32i.n	a10, a2, 8
400ea3d9:	04bd      	mov.n	a11, a4
400ea3db:	a3aa      	add.n	a10, a3, a10
400ea3dd:	9c0de5        	call8	400864bc <spi_flash_erase_range>
400ea3e0:	0a2d      	mov.n	a2, a10
400ea3e2:	f01d      	retw.n
400ea3e4:	02a122        	movi	a2, 0x102
400ea3e7:	f01d      	retw.n
400ea3e9:	04a122        	movi	a2, 0x104
400ea3ec:	f01d      	retw.n
400ea3ee:	220000        	orb	b0, b0, b0
400ea3f1:	1d04a1        	l32r	a10, 400b1804 <_iram_end+0x23cb0>
400ea3f4:	a122f0        	lsi	f15, a2, 0x284
400ea3f7:	f01d02        	l16ui	a0, a13, 0x1e0
	...

400ea3fc <spi_flash_init_lock>:
400ea3fc:	004136        	entry	a1, 32
400ea3ff:	04a0a2        	movi	a10, 4
400ea402:	9d56a5        	call8	4008796c <xQueueCreateMutex>
400ea405:	999381        	l32r	a8, 400d0a54 <_flash_cache_start+0xa3c>
400ea408:	0068a2        	s32i	a10, a8, 0
400ea40b:	015a56        	bnez	a10, 400ea424 <spi_flash_init_lock+0x28>
400ea40e:	f03d      	nop.n
400ea410:	f03d      	nop.n
400ea412:	f03d      	nop.n
400ea414:	f03d      	nop.n
400ea416:	9990d1        	l32r	a13, 400d0a58 <_flash_cache_start+0xa40>
400ea419:	9990c1        	l32r	a12, 400d0a5c <_flash_cache_start+0xa44>
400ea41c:	3b3c      	movi.n	a11, 51
400ea41e:	9990a1        	l32r	a10, 400d0a60 <_flash_cache_start+0xa48>
400ea421:	f0ab65        	call8	400daed8 <__assert_func>
400ea424:	f01d      	retw.n
	...

400ea428 <spi_flash_op_lock>:
400ea428:	004136        	entry	a1, 32
400ea42b:	ffafb2        	movi	a11, -1
400ea42e:	998981        	l32r	a8, 400d0a54 <_flash_cache_start+0xa3c>
400ea431:	0028a2        	l32i	a10, a8, 0
400ea434:	9d8925        	call8	40087cc8 <xQueueTakeMutexRecursive>
400ea437:	000090        	retw
	...

400ea43c <spi_flash_op_unlock>:
400ea43c:	004136        	entry	a1, 32
400ea43f:	998581        	l32r	a8, 400d0a54 <_flash_cache_start+0xa3c>
400ea442:	08a8      	l32i.n	a10, a8, 0
400ea444:	9d53e5        	call8	40087984 <xQueueGiveMutexRecursive>
400ea447:	f01d      	retw.n
400ea449:	000000        	ill

400ea44c <is_safe_write_address>:
400ea44c:	004136        	entry	a1, 32
400ea44f:	998581        	l32r	a8, 400d0a64 <_flash_cache_start+0xa4c>
400ea452:	023827        	bltu	a8, a2, 400ea458 <is_safe_write_address+0xc>
400ea455:	a0f165        	call8	4008b36c <abort>
400ea458:	01ab65        	call8	400ebf10 <esp_ota_get_running_partition>
400ea45b:	022a82        	l32i	a8, a10, 8
400ea45e:	0a3287        	bltu	a2, a8, 400ea46c <is_safe_write_address+0x20>
400ea461:	032a92        	l32i	a9, a10, 12
400ea464:	989a      	add.n	a9, a8, a9
400ea466:	02b297        	bgeu	a2, a9, 400ea46c <is_safe_write_address+0x20>
400ea469:	a0f025        	call8	4008b36c <abort>
400ea46c:	0ab287        	bgeu	a2, a8, 400ea47a <is_safe_write_address+0x2e>
400ea46f:	223a      	add.n	a2, a2, a3
400ea471:	05b827        	bgeu	a8, a2, 400ea47a <is_safe_write_address+0x2e>
400ea474:	201110        	or	a1, a1, a1
400ea477:	a0ef65        	call8	4008b36c <abort>
400ea47a:	120c      	movi.n	a2, 1
400ea47c:	f01d      	retw.n
	...

400ea480 <spi_flash_init>:
400ea480:	004136        	entry	a1, 32
400ea483:	fff7a5        	call8	400ea3fc <spi_flash_init_lock>
400ea486:	f01d      	retw.n

400ea488 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
400ea488:	006136        	entry	a1, 48
400ea48b:	085c      	movi.n	a8, 80
400ea48d:	0f9287        	bne	a2, a8, 400ea4a0 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x18>
400ea490:	a43b      	addi.n	a10, a4, 3
400ea492:	c27c      	movi.n	a2, -4
400ea494:	10aa20        	and	a10, a10, a2
400ea497:	0a88      	l32i.n	a8, a10, 0
400ea499:	aa4b      	addi.n	a10, a10, 4
400ea49b:	002ec6        	j	400ea55a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea49e:	200000        	or	a0, a0, a0
400ea4a1:	0c3480        	lsi	f8, a4, 48
400ea4a4:	87c9      	s32i.n	a12, a7, 32
400ea4a6:	02b9      	s32i.n	a11, a2, 0
400ea4a8:	002406        	j	400ea53c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb4>
400ea4ab:	996f91        	l32r	a9, 400d0a68 <_flash_cache_start+0xa50>
400ea4ae:	a08890        	addx4	a8, a8, a9
400ea4b1:	0888      	l32i.n	a8, a8, 0
400ea4b3:	0008a0        	jx	a8
400ea4b6:	01bd      	mov.n	a11, a1
400ea4b8:	04ad      	mov.n	a10, a4
400ea4ba:	023025        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea4bd:	0002c6        	j	400ea4cc <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x44>
400ea4c0:	000000        	ill
400ea4c3:	20b110        	or	a11, a1, a1
400ea4c6:	20a440        	or	a10, a4, a4
400ea4c9:	023225        	call8	400ec7ec <read_sleb128(unsigned char const*, long*)>
400ea4cc:	002182        	l32i	a8, a1, 0
400ea4cf:	001b06        	j	400ea53f <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea4d2:	048200        	extui	a8, a0, 2, 1
400ea4d5:	049201        	l32r	a0, 400ab720 <_iram_end+0x1dbcc>
400ea4d8:	888000        	lsi	f0, a0, 0x220
400ea4db:	889011        	l32r	a1, 400cc71c <_rtc_text_end+0xc71c>
400ea4de:	038620        	lsi	f2, a6, 12
400ea4e1:	048200        	extui	a8, a0, 2, 1
400ea4e4:	049201        	l32r	a0, 400ab72c <_iram_end+0x1dbd8>
400ea4e7:	888000        	lsi	f0, a0, 0x220
400ea4ea:	889011        	l32r	a1, 400cc72c <_rtc_text_end+0xc72c>
400ea4ed:	888020        	lsi	f2, a0, 0x220
400ea4f0:	a42b23        	lsi	f2, a11, 0x290
400ea4f3:	001206        	j	400ea53f <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea4f6:	010492        	l8ui	a9, a4, 1
400ea4f9:	0004b2        	l8ui	a11, a4, 0
400ea4fc:	020482        	l8ui	a8, a4, 2
400ea4ff:	119980        	slli	a9, a9, 8
400ea502:	20a9b0        	or	a10, a9, a11
400ea505:	118800        	slli	a8, a8, 16
400ea508:	2098a0        	or	a9, a8, a10
400ea50b:	030482        	l8ui	a8, a4, 3
400ea50e:	a44b      	addi.n	a10, a4, 4
400ea510:	018880        	slli	a8, a8, 24
400ea513:	208890        	or	a8, a8, a9
400ea516:	000946        	j	400ea53f <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea519:	010492        	l8ui	a9, a4, 1
400ea51c:	0004b2        	l8ui	a11, a4, 0
400ea51f:	020482        	l8ui	a8, a4, 2
400ea522:	119980        	slli	a9, a9, 8
400ea525:	20a9b0        	or	a10, a9, a11
400ea528:	118800        	slli	a8, a8, 16
400ea52b:	2098a0        	or	a9, a8, a10
400ea52e:	030482        	l8ui	a8, a4, 3
400ea531:	a48b      	addi.n	a10, a4, 8
400ea533:	018880        	slli	a8, a8, 24
400ea536:	208890        	or	a8, a8, a9
400ea539:	000086        	j	400ea53f <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xb7>
400ea53c:	a0e2e5        	call8	4008b36c <abort>
400ea53f:	017816        	beqz	a8, 400ea55a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea542:	70a092        	movi	a9, 112
400ea545:	109290        	and	a9, a2, a9
400ea548:	f0c992        	addi	a9, a9, -16
400ea54b:	833490        	moveqz	a3, a4, a9
400ea54e:	232200        	sext	a2, a2, 7
400ea551:	808830        	add	a8, a8, a3
400ea554:	0022d6        	bgez	a2, 400ea55a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xd2>
400ea557:	002882        	l32i	a8, a8, 0
400ea55a:	0589      	s32i.n	a8, a5, 0
400ea55c:	0a2d      	mov.n	a2, a10
400ea55e:	f01d      	retw.n

400ea560 <get_ttype_entry(lsda_header_info*, unsigned long)>:
400ea560:	006136        	entry	a1, 48
400ea563:	1402a2        	l8ui	a10, a2, 20
400ea566:	ffa082        	movi	a8, 255
400ea569:	241a87        	beq	a10, a8, 400ea591 <get_ttype_entry(lsda_header_info*, unsigned long)+0x31>
400ea56c:	2490a0        	extui	a9, a10, 0, 3
400ea56f:	152926        	beqi	a9, 2, 400ea588 <get_ttype_entry(lsda_header_info*, unsigned long)+0x28>
400ea572:	0639f6        	bgeui	a9, 3, 400ea57c <get_ttype_entry(lsda_header_info*, unsigned long)+0x1c>
400ea575:	d99c      	beqz.n	a9, 400ea596 <get_ttype_entry(lsda_header_info*, unsigned long)+0x36>
400ea577:	0004c6        	j	400ea58e <get_ttype_entry(lsda_header_info*, unsigned long)+0x2e>
400ea57a:	260000        	lsi	f0, a0, 152
400ea57d:	1639      	s32i.n	a3, a6, 4
400ea57f:	880c      	movi.n	a8, 8
400ea581:	144926        	beqi	a9, 4, 400ea599 <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea584:	000186        	j	400ea58e <get_ttype_entry(lsda_header_info*, unsigned long)+0x2e>
400ea587:	098d00        	l32e	a0, a13, -32
400ea58a:	0002c6        	j	400ea599 <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea58d:	dde500        	lsi	f0, a5, 0x374
400ea590:	080ca0        	lsx	f0, a12, a10
400ea593:	000086        	j	400ea599 <get_ttype_entry(lsda_header_info*, unsigned long)+0x39>
400ea596:	04a082        	movi	a8, 4
400ea599:	828380        	mull	a8, a3, a8
400ea59c:	0322c2        	l32i	a12, a2, 12
400ea59f:	0222b2        	l32i	a11, a2, 8
400ea5a2:	01dd      	mov.n	a13, a1
400ea5a4:	c0cc80        	sub	a12, a12, a8
400ea5a7:	ffee25        	call8	400ea488 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
400ea5aa:	0128      	l32i.n	a2, a1, 0
400ea5ac:	f01d      	retw.n
	...

400ea5b0 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
400ea5b0:	004136        	entry	a1, 32
400ea5b3:	ffa082        	movi	a8, 255
400ea5b6:	03ad      	mov.n	a10, a3
400ea5b8:	421287        	beq	a2, a8, 400ea5fe <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea5bb:	70a082        	movi	a8, 112
400ea5be:	102280        	and	a2, a2, a8
400ea5c1:	1cc226        	beqi	a2, 32, 400ea5e1 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x31>
400ea5c4:	082c      	movi.n	a8, 32
400ea5c6:	073827        	bltu	a8, a2, 400ea5d1 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x21>
400ea5c9:	12bc      	beqz.n	a2, 400ea5fe <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea5cb:	29b266        	bnei	a2, 16, 400ea5f8 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x48>
400ea5ce:	000b06        	j	400ea5fe <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea5d1:	1cd226        	beqi	a2, 64, 400ea5f1 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x41>
400ea5d4:	085c      	movi.n	a8, 80
400ea5d6:	241287        	beq	a2, a8, 400ea5fe <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x4e>
400ea5d9:	083c      	movi.n	a8, 48
400ea5db:	091287        	beq	a2, a8, 400ea5e8 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
400ea5de:	000586        	j	400ea5f8 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x48>
400ea5e1:	ea5ce5        	call8	400d4bb0 <_Unwind_GetTextRelBase>
400ea5e4:	000606        	j	400ea600 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x50>
400ea5e7:	5be500        	ult.s	b14, f5, f0
400ea5ea:	46ea      	add.n	a4, a6, a14
400ea5ec:	000004        	lsi	f0, a0, 0
400ea5ef:	650000        	extui	a0, a0, 16, 7
400ea5f2:	ea59      	s32i.n	a5, a10, 56
400ea5f4:	000206        	j	400ea600 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x50>
400ea5f7:	111000        	slli	a1, a0, 16
400ea5fa:	d72520        	lsi	f2, a5, 0x35c
400ea5fd:	0a0ca0        	add.s	f0, f12, f10
400ea600:	0a2d      	mov.n	a2, a10
400ea602:	f01d      	retw.n

400ea604 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>:
400ea604:	004136        	entry	a1, 32
400ea607:	20b220        	or	a11, a2, a2
400ea60a:	20a330        	or	a10, a3, a3
400ea60d:	fffa25        	call8	400ea5b0 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea610:	20baa0        	or	a11, a10, a10
400ea613:	05dd      	mov.n	a13, a5
400ea615:	04cd      	mov.n	a12, a4
400ea617:	03ad      	mov.n	a10, a3
400ea619:	ffe6e5        	call8	400ea488 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
400ea61c:	0a2d      	mov.n	a2, a10
400ea61e:	f01d      	retw.n

400ea620 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
400ea620:	006136        	entry	a1, 48
400ea623:	0a0c      	movi.n	a10, 0
400ea625:	0412a7        	beq	a2, a10, 400ea62d <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xd>
400ea628:	02ad      	mov.n	a10, a2
400ea62a:	ea55e5        	call8	400d4b88 <_Unwind_GetRegionStart>
400ea62d:	0064a2        	s32i	a10, a4, 0
400ea630:	0003b2        	l8ui	a11, a3, 0
400ea633:	01c3c2        	addi	a12, a3, 1
400ea636:	ffa032        	movi	a3, 255
400ea639:	0c1b37        	beq	a11, a3, 400ea649 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x29>
400ea63c:	04c4d2        	addi	a13, a4, 4
400ea63f:	02ad      	mov.n	a10, a2
400ea641:	fffc25        	call8	400ea604 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea644:	0acd      	mov.n	a12, a10
400ea646:	000086        	j	400ea64c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2c>
400ea649:	0164a2        	s32i	a10, a4, 4
400ea64c:	000c22        	l8ui	a2, a12, 0
400ea64f:	ffa032        	movi	a3, 255
400ea652:	144422        	s8i	a2, a4, 20
400ea655:	01cca2        	addi	a10, a12, 1
400ea658:	0e1237        	beq	a2, a3, 400ea66a <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x4a>
400ea65b:	20b110        	or	a11, a1, a1
400ea65e:	0215e5        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea661:	0188      	l32i.n	a8, a1, 0
400ea663:	8a8a      	add.n	a8, a10, a8
400ea665:	3489      	s32i.n	a8, a4, 12
400ea667:	000146        	j	400ea670 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x50>
400ea66a:	00a022        	movi	a2, 0
400ea66d:	036422        	s32i	a2, a4, 12
400ea670:	000a22        	l8ui	a2, a10, 0
400ea673:	20b110        	or	a11, a1, a1
400ea676:	154422        	s8i	a2, a4, 21
400ea679:	aa1b      	addi.n	a10, a10, 1
400ea67b:	021425        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea67e:	0188      	l32i.n	a8, a1, 0
400ea680:	0a2d      	mov.n	a2, a10
400ea682:	8a8a      	add.n	a8, a10, a8
400ea684:	4489      	s32i.n	a8, a4, 16
400ea686:	f01d      	retw.n

400ea688 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>:
400ea688:	008136        	entry	a1, 64
400ea68b:	f87c      	movi.n	a8, -1
400ea68d:	305850        	xor	a5, a8, a5
400ea690:	3288      	l32i.n	a8, a2, 12
400ea692:	4149      	s32i.n	a4, a1, 16
400ea694:	585a      	add.n	a5, a8, a5
400ea696:	20b110        	or	a11, a1, a1
400ea699:	05ad      	mov.n	a10, a5
400ea69b:	021225        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea69e:	01b8      	l32i.n	a11, a1, 0
400ea6a0:	205aa0        	or	a5, a10, a10
400ea6a3:	013b16        	beqz	a11, 400ea6ba <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0x32>
400ea6a6:	20a220        	or	a10, a2, a2
400ea6a9:	ffeb65        	call8	400ea560 <get_ttype_entry(lsda_header_info*, unsigned long)>
400ea6ac:	10c1c2        	addi	a12, a1, 16
400ea6af:	03bd      	mov.n	a11, a3
400ea6b1:	021765        	call8	400ec828 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>
400ea6b4:	fdea16        	beqz	a10, 400ea696 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0xe>
400ea6b7:	000046        	j	400ea6bc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3+0x34>
400ea6ba:	0bad      	mov.n	a10, a11
400ea6bc:	0a2d      	mov.n	a2, a10
400ea6be:	f01d      	retw.n

400ea6c0 <__gxx_personality_v0>:
400ea6c0:	00e136        	entry	a1, 112
400ea6c3:	0a0c      	movi.n	a10, 0
400ea6c5:	b1a9      	s32i.n	a10, a1, 44
400ea6c7:	a1a9      	s32i.n	a10, a1, 40
400ea6c9:	380c      	movi.n	a8, 3
400ea6cb:	021226        	beqi	a2, 1, 400ea6d1 <__gxx_personality_v0+0x11>
400ea6ce:	00aa06        	j	400ea97a <__gxx_personality_v0+0x2ba>
400ea6d1:	98e681        	l32r	a8, 400d0a6c <_flash_cache_start+0xa54>
400ea6d4:	98e791        	l32r	a9, 400d0a70 <_flash_cache_start+0xa58>
400ea6d7:	b48a      	add.n	a11, a4, a8
400ea6d9:	d1b9      	s32i.n	a11, a1, 52
400ea6db:	023b47        	bltu	a11, a4, 400ea6e1 <__gxx_personality_v0+0x21>
400ea6de:	202aa0        	or	a2, a10, a10
400ea6e1:	559a      	add.n	a5, a5, a9
400ea6e3:	525a      	add.n	a5, a2, a5
400ea6e5:	e159      	s32i.n	a5, a1, 56
400ea6e7:	120c      	movi.n	a2, 1
400ea6e9:	005556        	bnez	a5, 400ea6f2 <__gxx_personality_v0+0x32>
400ea6ec:	0d2142        	l32i	a4, a1, 52
400ea6ef:	0124b6        	bltui	a4, 2, 400ea6f4 <__gxx_personality_v0+0x34>
400ea6f2:	020c      	movi.n	a2, 0
400ea6f4:	742020        	extui	a2, a2, 0, 8
400ea6f7:	106122        	s32i	a2, a1, 64
400ea6fa:	146366        	bnei	a3, 6, 400ea712 <__gxx_personality_v0+0x52>
400ea6fd:	129c      	beqz.n	a2, 400ea712 <__gxx_personality_v0+0x52>
400ea6ff:	d0c622        	addi	a2, a6, -48
400ea702:	6288      	l32i.n	a8, a2, 24
400ea704:	8258      	l32i.n	a5, a2, 32
400ea706:	9228      	l32i.n	a2, a2, 36
400ea708:	390c      	movi.n	a9, 3
400ea70a:	140c      	movi.n	a4, 1
400ea70c:	839420        	moveqz	a9, a4, a2
400ea70f:	006c46        	j	400ea8c4 <__gxx_personality_v0+0x204>
400ea712:	07ad      	mov.n	a10, a7
400ea714:	201110        	or	a1, a1, a1
400ea717:	ea46a5        	call8	400d4b80 <_Unwind_GetLanguageSpecificData>
400ea71a:	0a5d      	mov.n	a5, a10
400ea71c:	5acc      	bnez.n	a10, 400ea725 <__gxx_personality_v0+0x65>
400ea71e:	880c      	movi.n	a8, 8
400ea720:	009586        	j	400ea97a <__gxx_personality_v0+0x2ba>
400ea723:	bd0000        	lsi	f0, a0, 0x2f4
400ea726:	cd0a      	add.n	a12, a13, a0
400ea728:	07ad01        	l32r	a0, 400ac5dc <_iram_end+0x1ea88>
400ea72b:	201110        	or	a1, a1, a1
400ea72e:	ffef25        	call8	400ea620 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea731:	0acd      	mov.n	a12, a10
400ea733:	1401a2        	l8ui	a10, a1, 20
400ea736:	07bd      	mov.n	a11, a7
400ea738:	1361c2        	s32i	a12, a1, 76
400ea73b:	201110        	or	a1, a1, a1
400ea73e:	ffe725        	call8	400ea5b0 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea741:	21a9      	s32i.n	a10, a1, 8
400ea743:	28c1b2        	addi	a11, a1, 40
400ea746:	07ad      	mov.n	a10, a7
400ea748:	201110        	or	a1, a1, a1
400ea74b:	ea41e5        	call8	400d4b68 <_Unwind_GetIPInfo>
400ea74e:	a128      	l32i.n	a2, a1, 40
400ea750:	040c      	movi.n	a4, 0
400ea752:	01a082        	movi	a8, 1
400ea755:	834820        	moveqz	a4, a8, a2
400ea758:	1321c2        	l32i	a12, a1, 76
400ea75b:	c04a40        	sub	a4, a10, a4
400ea75e:	4128      	l32i.n	a2, a1, 16
400ea760:	023c27        	bltu	a12, a2, 400ea766 <__gxx_personality_v0+0xa6>
400ea763:	0080c6        	j	400ea96a <__gxx_personality_v0+0x2aa>
400ea766:	1501b2        	l8ui	a11, a1, 21
400ea769:	24c1d2        	addi	a13, a1, 36
400ea76c:	0a0c      	movi.n	a10, 0
400ea76e:	201110        	or	a1, a1, a1
400ea771:	ffe925        	call8	400ea604 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea774:	1501b2        	l8ui	a11, a1, 21
400ea777:	0acd      	mov.n	a12, a10
400ea779:	20c1d2        	addi	a13, a1, 32
400ea77c:	0a0c      	movi.n	a10, 0
400ea77e:	201110        	or	a1, a1, a1
400ea781:	ffe825        	call8	400ea604 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea784:	1501b2        	l8ui	a11, a1, 21
400ea787:	0acd      	mov.n	a12, a10
400ea789:	1cc1d2        	addi	a13, a1, 28
400ea78c:	0a0c      	movi.n	a10, 0
400ea78e:	201110        	or	a1, a1, a1
400ea791:	ffe725        	call8	400ea604 <read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)>
400ea794:	18c1b2        	addi	a11, a1, 24
400ea797:	201110        	or	a1, a1, a1
400ea79a:	020225        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea79d:	0188      	l32i.n	a8, a1, 0
400ea79f:	9128      	l32i.n	a2, a1, 36
400ea7a1:	0acd      	mov.n	a12, a10
400ea7a3:	282a      	add.n	a2, a8, a2
400ea7a5:	05b427        	bgeu	a4, a2, 400ea7ae <__gxx_personality_v0+0xee>
400ea7a8:	41c8      	l32i.n	a12, a1, 16
400ea7aa:	ffec06        	j	400ea75e <__gxx_personality_v0+0x9e>
400ea7ad:	818800        	src	a8, a8, a0
400ea7b0:	228a      	add.n	a2, a2, a8
400ea7b2:	a8b427        	bgeu	a4, a2, 400ea75e <__gxx_personality_v0+0x9e>
400ea7b5:	7148      	l32i.n	a4, a1, 28
400ea7b7:	020c      	movi.n	a2, 0
400ea7b9:	051427        	beq	a4, a2, 400ea7c2 <__gxx_personality_v0+0x102>
400ea7bc:	012122        	l32i	a2, a1, 4
400ea7bf:	802420        	add	a2, a4, a2
400ea7c2:	6188      	l32i.n	a8, a1, 24
400ea7c4:	040c      	movi.n	a4, 0
400ea7c6:	071847        	beq	a8, a4, 400ea7d1 <__gxx_personality_v0+0x111>
400ea7c9:	4148      	l32i.n	a4, a1, 16
400ea7cb:	ffc882        	addi	a8, a8, -1
400ea7ce:	804480        	add	a4, a4, a8
400ea7d1:	f49216        	beqz	a2, 400ea71e <__gxx_personality_v0+0x5e>
400ea7d4:	199416        	beqz	a4, 400ea971 <__gxx_personality_v0+0x2b1>
400ea7d7:	0698      	l32i.n	a9, a6, 0
400ea7d9:	20c682        	addi	a8, a6, 32
400ea7dc:	056907        	bbci	a9, 0, 400ea7e5 <__gxx_personality_v0+0x125>
400ea7df:	d0c682        	addi	a8, a6, -48
400ea7e2:	002882        	l32i	a8, a8, 0
400ea7e5:	b189      	s32i.n	a8, a1, 44
400ea7e7:	b0c882        	addi	a8, a8, -80
400ea7ea:	0888      	l32i.n	a8, a8, 0
400ea7ec:	190c      	movi.n	a9, 1
400ea7ee:	c189      	s32i.n	a8, a1, 48
400ea7f0:	080c      	movi.n	a8, 0
400ea7f2:	f189      	s32i.n	a8, a1, 60
400ea7f4:	048330        	extui	a8, a3, 3, 1
400ea7f7:	308890        	xor	a8, a8, a9
400ea7fa:	126182        	s32i	a8, a1, 72
400ea7fd:	20c1b2        	addi	a11, a1, 32
400ea800:	20a440        	or	a10, a4, a4
400ea803:	201110        	or	a1, a1, a1
400ea806:	01fe65        	call8	400ec7ec <read_sleb128(unsigned char const*, long*)>
400ea809:	1cc1b2        	addi	a11, a1, 28
400ea80c:	1161a2        	s32i	a10, a1, 68
400ea80f:	201110        	or	a1, a1, a1
400ea812:	01fda5        	call8	400ec7ec <read_sleb128(unsigned char const*, long*)>
400ea815:	81d8      	l32i.n	a13, a1, 32
400ea817:	06ad16        	beqz	a13, 400ea885 <__gxx_personality_v0+0x1c5>
400ea81a:	211da6        	blti	a13, 1, 400ea83f <__gxx_personality_v0+0x17f>
400ea81d:	0dbd      	mov.n	a11, a13
400ea81f:	20a110        	or	a10, a1, a1
400ea822:	201110        	or	a1, a1, a1
400ea825:	ffd3a5        	call8	400ea560 <get_ttype_entry(lsda_header_info*, unsigned long)>
400ea828:	136a16        	beqz	a10, 400ea962 <__gxx_personality_v0+0x2a2>
400ea82b:	c188      	l32i.n	a8, a1, 48
400ea82d:	058816        	beqz	a8, 400ea889 <__gxx_personality_v0+0x1c9>
400ea830:	2cc1c2        	addi	a12, a1, 44
400ea833:	20b880        	or	a11, a8, a8
400ea836:	201110        	or	a1, a1, a1
400ea839:	01fee5        	call8	400ec828 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>
400ea83c:	001006        	j	400ea880 <__gxx_personality_v0+0x1c0>
400ea83f:	c198      	l32i.n	a9, a1, 48
400ea841:	d99c      	beqz.n	a9, 400ea862 <__gxx_personality_v0+0x1a2>
400ea843:	122182        	l32i	a8, a1, 72
400ea846:	889c      	beqz.n	a8, 400ea862 <__gxx_personality_v0+0x1a2>
400ea848:	102192        	l32i	a9, a1, 64
400ea84b:	399c      	beqz.n	a9, 400ea862 <__gxx_personality_v0+0x1a2>
400ea84d:	c1b8      	l32i.n	a11, a1, 48
400ea84f:	b1c8      	l32i.n	a12, a1, 44
400ea851:	01ad      	mov.n	a10, a1
400ea853:	201110        	or	a1, a1, a1
400ea856:	ffe325        	call8	400ea688 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>
400ea859:	1b0c      	movi.n	a11, 1
400ea85b:	30aab0        	xor	a10, a10, a11
400ea85e:	0006c6        	j	400ea87d <__gxx_personality_v0+0x1bd>
400ea861:	fa7c00        	mov.s	f7, f12
400ea864:	30dad0        	xor	a13, a10, a13
400ea867:	31a8      	l32i.n	a10, a1, 12
400ea869:	18c1b2        	addi	a11, a1, 24
400ea86c:	aada      	add.n	a10, a10, a13
400ea86e:	201110        	or	a1, a1, a1
400ea871:	01f4a5        	call8	400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>
400ea874:	6188      	l32i.n	a8, a1, 24
400ea876:	0a0c      	movi.n	a10, 0
400ea878:	190c      	movi.n	a9, 1
400ea87a:	83a980        	moveqz	a10, a9, a8
400ea87d:	74a0a0        	extui	a10, a10, 0, 8
400ea880:	5a8c      	beqz.n	a10, 400ea889 <__gxx_personality_v0+0x1c9>
400ea882:	003706        	j	400ea962 <__gxx_personality_v0+0x2a2>
400ea885:	180c      	movi.n	a8, 1
400ea887:	f189      	s32i.n	a8, a1, 60
400ea889:	7188      	l32i.n	a8, a1, 28
400ea88b:	688c      	beqz.n	a8, 400ea895 <__gxx_personality_v0+0x1d5>
400ea88d:	112192        	l32i	a9, a1, 68
400ea890:	498a      	add.n	a4, a9, a8
400ea892:	ffd9c6        	j	400ea7fd <__gxx_personality_v0+0x13d>
400ea895:	f198      	l32i.n	a9, a1, 60
400ea897:	e83916        	beqz	a9, 400ea71e <__gxx_personality_v0+0x5e>
400ea89a:	290c      	movi.n	a9, 2
400ea89c:	246307        	bbci	a3, 0, 400ea8c4 <__gxx_personality_v0+0x204>
400ea89f:	022966        	bnei	a9, 2, 400ea8a5 <__gxx_personality_v0+0x1e5>
400ea8a2:	ff9e06        	j	400ea71e <__gxx_personality_v0+0x5e>
400ea8a5:	e138      	l32i.n	a3, a1, 56
400ea8a7:	0a9356        	bnez	a3, 400ea954 <__gxx_personality_v0+0x294>
400ea8aa:	d198      	l32i.n	a9, a1, 52
400ea8ac:	0229b6        	bltui	a9, 2, 400ea8b2 <__gxx_personality_v0+0x1f2>
400ea8af:	002846        	j	400ea954 <__gxx_personality_v0+0x294>
400ea8b2:	b138      	l32i.n	a3, a1, 44
400ea8b4:	d0c662        	addi	a6, a6, -48
400ea8b7:	6689      	s32i.n	a8, a6, 24
400ea8b9:	7649      	s32i.n	a4, a6, 28
400ea8bb:	8659      	s32i.n	a5, a6, 32
400ea8bd:	a639      	s32i.n	a3, a6, 40
400ea8bf:	9629      	s32i.n	a2, a6, 36
400ea8c1:	0023c6        	j	400ea954 <__gxx_personality_v0+0x294>
400ea8c4:	10e337        	bbsi	a3, 3, 400ea8d8 <__gxx_personality_v0+0x218>
400ea8c7:	e138      	l32i.n	a3, a1, 56
400ea8c9:	b3cc      	bnez.n	a3, 400ea8d8 <__gxx_personality_v0+0x218>
400ea8cb:	d148      	l32i.n	a4, a1, 52
400ea8cd:	0724f6        	bgeui	a4, 2, 400ea8d8 <__gxx_personality_v0+0x218>
400ea8d0:	1d1966        	bnei	a9, 1, 400ea8f1 <__gxx_personality_v0+0x231>
400ea8d3:	000486        	j	400ea8e9 <__gxx_personality_v0+0x229>
400ea8d6:	660000        	lsi	f0, a0, 0x198
400ea8d9:	0419      	s32i.n	a1, a4, 0
400ea8db:	002006        	j	400ea95f <__gxx_personality_v0+0x29f>
400ea8de:	d60000        	lsi	f0, a0, 0x358
400ea8e1:	0428      	l32i.n	a2, a4, 0
400ea8e3:	201110        	or	a1, a1, a1
400ea8e6:	007625        	call8	400eb048 <std::unexpected()>
400ea8e9:	06ad      	mov.n	a10, a6
400ea8eb:	201110        	or	a1, a1, a1
400ea8ee:	002d65        	call8	400eabc4 <__cxa_call_terminate>
400ea8f1:	0318d6        	bgez	a8, 400ea926 <__gxx_personality_v0+0x266>
400ea8f4:	01cd      	mov.n	a12, a1
400ea8f6:	05bd      	mov.n	a11, a5
400ea8f8:	20a770        	or	a10, a7, a7
400ea8fb:	136182        	s32i	a8, a1, 76
400ea8fe:	201110        	or	a1, a1, a1
400ea901:	ffd1e5        	call8	400ea620 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea904:	1401a2        	l8ui	a10, a1, 20
400ea907:	20b770        	or	a11, a7, a7
400ea90a:	201110        	or	a1, a1, a1
400ea90d:	ffca25        	call8	400ea5b0 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea910:	21a9      	s32i.n	a10, a1, 8
400ea912:	1401a2        	l8ui	a10, a1, 20
400ea915:	07bd      	mov.n	a11, a7
400ea917:	201110        	or	a1, a1, a1
400ea91a:	ffc965        	call8	400ea5b0 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
400ea91d:	d0c632        	addi	a3, a6, -48
400ea920:	132182        	l32i	a8, a1, 76
400ea923:	0963a2        	s32i	a10, a3, 36
400ea926:	06cd      	mov.n	a12, a6
400ea928:	2b0c      	movi.n	a11, 2
400ea92a:	07ad      	mov.n	a10, a7
400ea92c:	136182        	s32i	a8, a1, 76
400ea92f:	201110        	or	a1, a1, a1
400ea932:	ea2165        	call8	400d4b48 <_Unwind_SetGR>
400ea935:	132182        	l32i	a8, a1, 76
400ea938:	3b0c      	movi.n	a11, 3
400ea93a:	08cd      	mov.n	a12, a8
400ea93c:	07ad      	mov.n	a10, a7
400ea93e:	201110        	or	a1, a1, a1
400ea941:	ea2065        	call8	400d4b48 <_Unwind_SetGR>
400ea944:	02bd      	mov.n	a11, a2
400ea946:	07ad      	mov.n	a10, a7
400ea948:	201110        	or	a1, a1, a1
400ea94b:	ea22e5        	call8	400d4b78 <_Unwind_SetIP>
400ea94e:	780c      	movi.n	a8, 7
400ea950:	000986        	j	400ea97a <__gxx_personality_v0+0x2ba>
400ea953:	680c00        	lsi	f0, a12, 0x1a0
400ea956:	000806        	j	400ea97a <__gxx_personality_v0+0x2ba>
400ea959:	20a220        	or	a10, a2, a2
400ea95c:	006f65        	call8	400eb054 <__cxa_begin_catch>
400ea95f:	006c25        	call8	400eb020 <std::terminate()>
400ea962:	082182        	l32i	a8, a1, 32
400ea965:	390c      	movi.n	a9, 3
400ea967:	ffcc46        	j	400ea89c <__gxx_personality_v0+0x1dc>
400ea96a:	020c      	movi.n	a2, 0
400ea96c:	190c      	movi.n	a9, 1
400ea96e:	000046        	j	400ea973 <__gxx_personality_v0+0x2b3>
400ea971:	290c      	movi.n	a9, 2
400ea973:	080c      	movi.n	a8, 0
400ea975:	084d      	mov.n	a4, a8
400ea977:	ffc846        	j	400ea89c <__gxx_personality_v0+0x1dc>
400ea97a:	082d      	mov.n	a2, a8
400ea97c:	f01d      	retw.n
	...

400ea980 <__cxa_call_unexpected>:
400ea980:	008136        	entry	a1, 64
400ea983:	20a220        	or	a10, a2, a2
400ea986:	201110        	or	a1, a1, a1
400ea989:	006ca5        	call8	400eb054 <__cxa_begin_catch>
400ea98c:	d0c222        	addi	a2, a2, -48
400ea98f:	9288      	l32i.n	a8, a2, 36
400ea991:	22a8      	l32i.n	a10, a2, 8
400ea993:	8268      	l32i.n	a6, a2, 32
400ea995:	6258      	l32i.n	a5, a2, 24
400ea997:	3248      	l32i.n	a4, a2, 12
400ea999:	2189      	s32i.n	a8, a1, 8
400ea99b:	201110        	or	a1, a1, a1
400ea99e:	0068e5        	call8	400eb02c <__cxxabiv1::__unexpected(void (*)())>
400ea9a1:	02ad      	mov.n	a10, a2
400ea9a3:	201110        	or	a1, a1, a1
400ea9a6:	006ae5        	call8	400eb054 <__cxa_begin_catch>
400ea9a9:	201110        	or	a1, a1, a1
400ea9ac:	0007e5        	call8	400eaa2c <__cxa_get_globals_fast>
400ea9af:	0a88      	l32i.n	a8, a10, 0
400ea9b1:	c898      	l32i.n	a9, a8, 48
400ea9b3:	50c822        	addi	a2, a8, 80
400ea9b6:	026907        	bbci	a9, 0, 400ea9bc <__cxa_call_unexpected+0x3c>
400ea9b9:	002822        	l32i	a2, a8, 0
400ea9bc:	01cd      	mov.n	a12, a1
400ea9be:	06bd      	mov.n	a11, a6
400ea9c0:	0a0c      	movi.n	a10, 0
400ea9c2:	201110        	or	a1, a1, a1
400ea9c5:	ffc5a5        	call8	400ea620 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
400ea9c8:	b0c262        	addi	a6, a2, -80
400ea9cb:	06b8      	l32i.n	a11, a6, 0
400ea9cd:	05dd      	mov.n	a13, a5
400ea9cf:	02cd      	mov.n	a12, a2
400ea9d1:	01ad      	mov.n	a10, a1
400ea9d3:	201110        	or	a1, a1, a1
400ea9d6:	ffcb25        	call8	400ea688 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl$constprop$3>
400ea9d9:	4a8c      	beqz.n	a10, 400ea9e1 <__cxa_call_unexpected+0x61>
400ea9db:	201110        	or	a1, a1, a1
400ea9de:	001965        	call8	400eab74 <__cxa_rethrow>
400ea9e1:	04ad      	mov.n	a10, a4
400ea9e3:	201110        	or	a1, a1, a1
400ea9e6:	005f65        	call8	400eafdc <__cxxabiv1::__terminate(void (*)())>
400ea9e9:	201110        	or	a1, a1, a1
400ea9ec:	006be5        	call8	400eb0ac <__cxa_end_catch>
400ea9ef:	201110        	or	a1, a1, a1
400ea9f2:	006ba5        	call8	400eb0ac <__cxa_end_catch>
400ea9f5:	02ad      	mov.n	a10, a2
400ea9f7:	201110        	or	a1, a1, a1
400ea9fa:	ea2c65        	call8	400d4cc0 <_Unwind_Resume>
400ea9fd:	000000        	ill

400eaa00 <__cxa_pure_virtual>:
400eaa00:	004136        	entry	a1, 32
400eaa03:	0061e5        	call8	400eb020 <std::terminate()>
	...

400eaa08 <eh_globals_dtor(void*)>:
400eaa08:	004136        	entry	a1, 32
400eaa0b:	01a216        	beqz	a2, 400eaa29 <eh_globals_dtor(void*)+0x21>
400eaa0e:	0022a2        	l32i	a10, a2, 0
400eaa11:	00ca16        	beqz	a10, 400eaa21 <eh_globals_dtor(void*)+0x19>
400eaa14:	4a38      	l32i.n	a3, a10, 16
400eaa16:	30caa2        	addi	a10, a10, 48
400eaa19:	ea3725        	call8	400d4d8c <_Unwind_DeleteException>
400eaa1c:	03ad      	mov.n	a10, a3
400eaa1e:	fffbc6        	j	400eaa11 <eh_globals_dtor(void*)+0x9>
400eaa21:	02ad      	mov.n	a10, a2
400eaa23:	959c81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400eaa26:	0008e0        	callx8	a8
400eaa29:	f01d      	retw.n
	...

400eaa2c <__cxa_get_globals_fast>:
400eaa2c:	004136        	entry	a1, 32
400eaa2f:	981281        	l32r	a8, 400d0a78 <_flash_cache_start+0xa60>
400eaa32:	9810a1        	l32r	a10, 400d0a74 <_flash_cache_start+0xa5c>
400eaa35:	040892        	l8ui	a9, a8, 4
400eaa38:	01e916        	beqz	a9, 400eaa5a <__cxa_get_globals_fast+0x2e>
400eaa3b:	0028a2        	l32i	a10, a8, 0
400eaa3e:	201110        	or	a1, a1, a1
400eaa41:	ff4365        	call8	400e9e78 <pthread_getspecific>
400eaa44:	000486        	j	400eaa5a <__cxa_get_globals_fast+0x2e>
400eaa47:	ad0000        	lsi	f0, a0, 0x2b4
400eaa4a:	032602        	l32i	a0, a6, 12
400eaa4d:	111005        	call0	400fbb50 <_etext+0xf273>
400eaa50:	26e520        	lsi	f2, a5, 152
400eaa53:	10ea      	add.n	a1, a0, a14
400eaa55:	a52011        	l32r	a1, 400d3ed8 <Print::printNumber(unsigned long, unsigned char)+0x24>
400eaa58:	2dfff2        	s32ri	a15, a15, 180
400eaa5b:	1d0a      	add.n	a1, a13, a0
400eaa5d:	0000f0        	callx12	a0

400eaa60 <__cxa_get_globals>:
400eaa60:	004136        	entry	a1, 32
400eaa63:	980531        	l32r	a3, 400d0a78 <_flash_cache_start+0xa60>
400eaa66:	980321        	l32r	a2, 400d0a74 <_flash_cache_start+0xa5c>
400eaa69:	040382        	l8ui	a8, a3, 4
400eaa6c:	043816        	beqz	a8, 400eaab3 <__cxa_get_globals+0x53>
400eaa6f:	0023a2        	l32i	a10, a3, 0
400eaa72:	201110        	or	a1, a1, a1
400eaa75:	ff4025        	call8	400e9e78 <pthread_getspecific>
400eaa78:	0a2d      	mov.n	a2, a10
400eaa7a:	5afc      	bnez.n	a10, 400eaab3 <__cxa_get_globals+0x53>
400eaa7c:	8a0c      	movi.n	a10, 8
400eaa7e:	959b81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400eaa81:	0008e0        	callx8	a8
400eaa84:	0a2d      	mov.n	a2, a10
400eaa86:	0aac      	beqz.n	a10, 400eaaaa <__cxa_get_globals+0x4a>
400eaa88:	0abd      	mov.n	a11, a10
400eaa8a:	03a8      	l32i.n	a10, a3, 0
400eaa8c:	201110        	or	a1, a1, a1
400eaa8f:	ff40e5        	call8	400e9e9c <pthread_setspecific>
400eaa92:	4adc      	bnez.n	a10, 400eaaaa <__cxa_get_globals+0x4a>
400eaa94:	000546        	j	400eaaad <__cxa_get_globals+0x4d>
400eaa97:	ad0000        	lsi	f0, a0, 0x2b4
400eaa9a:	032602        	l32i	a0, a6, 12
400eaa9d:	111005        	call0	400fbba0 <_etext+0xf2c3>
400eaaa0:	21e520        	srai	a14, a2, 5
400eaaa3:	10ea      	add.n	a1, a0, a14
400eaaa5:	a52011        	l32r	a1, 400d3f28 <Print::printNumber(unsigned long, unsigned char)+0x74>
400eaaa8:	ffed      	lsi	f14, a15, 60
400eaaaa:	005765        	call8	400eb020 <std::terminate()>
400eaaad:	0062a2        	s32i	a10, a2, 0
400eaab0:	0162a2        	s32i	a10, a2, 4
400eaab3:	000090        	retw
	...

400eaab8 <_GLOBAL__sub_I___cxa_get_globals_fast>:
400eaab8:	004136        	entry	a1, 32
400eaabb:	97ef21        	l32r	a2, 400d0a78 <_flash_cache_start+0xa60>
400eaabe:	97efb1        	l32r	a11, 400d0a7c <_flash_cache_start+0xa64>
400eaac1:	00a082        	movi	a8, 0
400eaac4:	20a220        	or	a10, a2, a2
400eaac7:	044282        	s8i	a8, a2, 4
400eaaca:	ff3165        	call8	400e9de0 <pthread_key_create>
400eaacd:	00a082        	movi	a8, 0
400eaad0:	190c      	movi.n	a9, 1
400eaad2:	8389a0        	moveqz	a8, a9, a10
400eaad5:	044282        	s8i	a8, a2, 4
400eaad8:	f01d      	retw.n
	...

400eaadc <_GLOBAL__sub_D___cxa_get_globals_fast>:
400eaadc:	004136        	entry	a1, 32
400eaadf:	97e681        	l32r	a8, 400d0a78 <_flash_cache_start+0xa60>
400eaae2:	040892        	l8ui	a9, a8, 4
400eaae5:	398c      	beqz.n	a9, 400eaaec <_GLOBAL__sub_D___cxa_get_globals_fast+0x10>
400eaae7:	08a8      	l32i.n	a10, a8, 0
400eaae9:	ff34e5        	call8	400e9e38 <pthread_key_delete>
400eaaec:	f01d      	retw.n
	...

400eaaf0 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)>:
400eaaf0:	004136        	entry	a1, 32
400eaaf3:	c0c382        	addi	a8, a3, -64
400eaaf6:	0722b6        	bltui	a2, 2, 400eab01 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x11>
400eaaf9:	78a8      	l32i.n	a10, a8, 28
400eaafb:	201110        	or	a1, a1, a1
400eaafe:	004de5        	call8	400eafdc <__cxxabiv1::__terminate(void (*)())>
400eab01:	0020c0        	memw
400eab04:	0898      	l32i.n	a9, a8, 0
400eab06:	a90b      	addi.n	a10, a9, -1
400eab08:	09bd      	mov.n	a11, a9
400eab0a:	0a2d      	mov.n	a2, a10
400eab0c:	130c90        	wsr.scompare1	a9
400eab0f:	00e822        	s32c1i	a2, a8, 0
400eab12:	029d      	mov.n	a9, a2
400eab14:	ee92b7        	bne	a2, a11, 400eab06 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x16>
400eab17:	facc      	bnez.n	a10, 400eab2a <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x3a>
400eab19:	5888      	l32i.n	a8, a8, 20
400eab1b:	20c332        	addi	a3, a3, 32
400eab1e:	388c      	beqz.n	a8, 400eab25 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)+0x35>
400eab20:	03ad      	mov.n	a10, a3
400eab22:	0008e0        	callx8	a8
400eab25:	03ad      	mov.n	a10, a3
400eab27:	003ce5        	call8	400eaef4 <__cxa_free_exception>
400eab2a:	f01d      	retw.n

400eab2c <__cxa_throw>:
400eab2c:	004136        	entry	a1, 32
400eab2f:	fff325        	call8	400eaa60 <__cxa_get_globals>
400eab32:	012a52        	l32i	a5, a10, 4
400eab35:	01a082        	movi	a8, 1
400eab38:	551b      	addi.n	a5, a5, 1
400eab3a:	1a59      	s32i.n	a5, a10, 4
400eab3c:	a0c252        	addi	a5, a2, -96
400eab3f:	0589      	s32i.n	a8, a5, 0
400eab41:	4539      	s32i.n	a3, a5, 16
400eab43:	056542        	s32i	a4, a5, 20
400eab46:	004f25        	call8	400eb038 <std::get_unexpected()>
400eab49:	65a9      	s32i.n	a10, a5, 24
400eab4b:	004c65        	call8	400eb010 <std::get_terminate()>
400eab4e:	97cc81        	l32r	a8, 400d0a80 <_flash_cache_start+0xa68>
400eab51:	97cc91        	l32r	a9, 400d0a84 <_flash_cache_start+0xa6c>
400eab54:	106582        	s32i	a8, a5, 64
400eab57:	97cc81        	l32r	a8, 400d0a88 <_flash_cache_start+0xa70>
400eab5a:	e0c222        	addi	a2, a2, -32
400eab5d:	75a9      	s32i.n	a10, a5, 28
400eab5f:	116592        	s32i	a9, a5, 68
400eab62:	126582        	s32i	a8, a5, 72
400eab65:	02ad      	mov.n	a10, a2
400eab67:	ea0525        	call8	400d4bb8 <_Unwind_RaiseException>
400eab6a:	02ad      	mov.n	a10, a2
400eab6c:	004e65        	call8	400eb054 <__cxa_begin_catch>
400eab6f:	004b25        	call8	400eb020 <std::terminate()>
	...

400eab74 <__cxa_rethrow>:
400eab74:	004136        	entry	a1, 32
400eab77:	ffeea5        	call8	400eaa60 <__cxa_get_globals>
400eab7a:	012a22        	l32i	a2, a10, 4
400eab7d:	002a82        	l32i	a8, a10, 0
400eab80:	01c222        	addi	a2, a2, 1
400eab83:	1a29      	s32i.n	a2, a10, 4
400eab85:	88bc      	beqz.n	a8, 400eabc1 <__cxa_rethrow+0x4d>
400eab87:	c8e8      	l32i.n	a14, a8, 48
400eab89:	97b8c1        	l32r	a12, 400d0a6c <_flash_cache_start+0xa54>
400eab8c:	d828      	l32i.n	a2, a8, 52
400eab8e:	9eca      	add.n	a9, a14, a12
400eab90:	97b8d1        	l32r	a13, 400d0a70 <_flash_cache_start+0xa58>
400eab93:	1b0c      	movi.n	a11, 1
400eab95:	0139e7        	bltu	a9, a14, 400eab9a <__cxa_rethrow+0x26>
400eab98:	0b0c      	movi.n	a11, 0
400eab9a:	22da      	add.n	a2, a2, a13
400eab9c:	2b2a      	add.n	a2, a11, a2
400eab9e:	002256        	bnez	a2, 400eaba4 <__cxa_rethrow+0x30>
400eaba1:	0729b6        	bltui	a9, 2, 400eabac <__cxa_rethrow+0x38>
400eaba4:	020c      	movi.n	a2, 0
400eaba6:	0a29      	s32i.n	a2, a10, 0
400eaba8:	000206        	j	400eabb4 <__cxa_rethrow+0x40>
400eabab:	282200        	lsi	f0, a2, 160
400eabae:	202005        	call0	4010adb0 <_etext+0x1e4d3>
400eabb1:	582960        	ssxp	f2, a9, a6
400eabb4:	30c822        	addi	a2, a8, 48
400eabb7:	02ad      	mov.n	a10, a2
400eabb9:	ea16a5        	call8	400d4d24 <_Unwind_Resume_or_Rethrow>
400eabbc:	02ad      	mov.n	a10, a2
400eabbe:	004965        	call8	400eb054 <__cxa_begin_catch>
400eabc1:	0045e5        	call8	400eb020 <std::terminate()>

400eabc4 <__cxa_call_terminate>:
400eabc4:	004136        	entry	a1, 32
400eabc7:	02c216        	beqz	a2, 400eabf7 <__cxa_call_terminate+0x33>
400eabca:	20a220        	or	a10, a2, a2
400eabcd:	004865        	call8	400eb054 <__cxa_begin_catch>
400eabd0:	0022b2        	l32i	a11, a2, 0
400eabd3:	97a6c1        	l32r	a12, 400d0a6c <_flash_cache_start+0xa54>
400eabd6:	1288      	l32i.n	a8, a2, 4
400eabd8:	9bca      	add.n	a9, a11, a12
400eabda:	97a5d1        	l32r	a13, 400d0a70 <_flash_cache_start+0xa58>
400eabdd:	1a0c      	movi.n	a10, 1
400eabdf:	0139b7        	bltu	a9, a11, 400eabe4 <__cxa_call_terminate+0x20>
400eabe2:	0a0c      	movi.n	a10, 0
400eabe4:	8088d0        	add	a8, a8, a13
400eabe7:	808a80        	add	a8, a10, a8
400eabea:	98cc      	bnez.n	a8, 400eabf7 <__cxa_call_terminate+0x33>
400eabec:	0729f6        	bgeui	a9, 2, 400eabf7 <__cxa_call_terminate+0x33>
400eabef:	d0c222        	addi	a2, a2, -48
400eabf2:	32a8      	l32i.n	a10, a2, 12
400eabf4:	003e65        	call8	400eafdc <__cxxabiv1::__terminate(void (*)())>
400eabf7:	0042a5        	call8	400eb020 <std::terminate()>
	...

400eabfc <operator delete(void*)>:
400eabfc:	004136        	entry	a1, 32
400eabff:	20a220        	or	a10, a2, a2
400eac02:	952481        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400eac05:	0008e0        	callx8	a8
400eac08:	f01d      	retw.n
	...

400eac0c <operator new[](unsigned int)>:
400eac0c:	004136        	entry	a1, 32
400eac0f:	20a220        	or	a10, a2, a2
400eac12:	201110        	or	a1, a1, a1
400eac15:	0001e5        	call8	400eac34 <operator new(unsigned int)>
400eac18:	000486        	j	400eac2e <operator new[](unsigned int)+0x22>
400eac1b:	ad0000        	lsi	f0, a0, 0x2b4
400eac1e:	032602        	l32i	a0, a6, 12
400eac21:	111005        	call0	400fbd24 <_etext+0xf447>
400eac24:	09a520        	l32e	a2, a5, -24
400eac27:	10ea      	add.n	a1, a0, a14
400eac29:	652011        	l32r	a1, 400c40ac <_rtc_text_end+0x40ac>
400eac2c:	2dffd5        	call4	40118c2c <_etext+0x2c34f>
400eac2f:	1d0a      	add.n	a1, a13, a0
400eac31:	0000f0        	callx12	a0

400eac34 <operator new(unsigned int)>:
400eac34:	004136        	entry	a1, 32
400eac37:	01a032        	movi	a3, 1
400eac3a:	832320        	moveqz	a2, a3, a2
400eac3d:	20a220        	or	a10, a2, a2
400eac40:	952b81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400eac43:	0008e0        	callx8	a8
400eac46:	01ea56        	bnez	a10, 400eac68 <operator new(unsigned int)+0x34>
400eac49:	004c65        	call8	400eb110 <std::get_new_handler()>
400eac4c:	1adc      	bnez.n	a10, 400eac61 <operator new(unsigned int)+0x2d>
400eac4e:	4a0c      	movi.n	a10, 4
400eac50:	0025a5        	call8	400eaeac <__cxa_allocate_exception>
400eac53:	978e31        	l32r	a3, 400d0a8c <_flash_cache_start+0xa74>
400eac56:	978ec1        	l32r	a12, 400d0a90 <_flash_cache_start+0xa78>
400eac59:	978eb1        	l32r	a11, 400d0a94 <_flash_cache_start+0xa7c>
400eac5c:	0a39      	s32i.n	a3, a10, 0
400eac5e:	ffece5        	call8	400eab2c <__cxa_throw>
400eac61:	000ae0        	callx8	a10
400eac64:	fff546        	j	400eac3d <operator new(unsigned int)+0x9>
400eac67:	0a2d00        	add.s	f2, f13, f0
400eac6a:	f01d      	retw.n

400eac6c <__cxxabiv1::__class_type_info::~__class_type_info()>:
400eac6c:	004136        	entry	a1, 32
400eac6f:	978a81        	l32r	a8, 400d0a98 <_flash_cache_start+0xa80>
400eac72:	20a220        	or	a10, a2, a2
400eac75:	006282        	s32i	a8, a2, 0
400eac78:	01c2a5        	call8	400ec8a4 <std::type_info::~type_info()>
400eac7b:	000090        	retw
	...

400eac80 <__cxxabiv1::__class_type_info::~__class_type_info()>:
400eac80:	004136        	entry	a1, 32
400eac83:	20a220        	or	a10, a2, a2
400eac86:	fffe65        	call8	400eac6c <__cxxabiv1::__class_type_info::~__class_type_info()>
400eac89:	20a220        	or	a10, a2, a2
400eac8c:	fff6e5        	call8	400eabfc <operator delete(void*)>
400eac8f:	000090        	retw
	...

400eac94 <_ZNKSt9type_infoeqERKS_$isra$0>:
400eac94:	004136        	entry	a1, 32
400eac97:	02ad      	mov.n	a10, a2
400eac99:	03bd      	mov.n	a11, a3
400eac9b:	120c      	movi.n	a2, 1
400eac9d:	191a37        	beq	a10, a3, 400eacba <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400eaca0:	000a92        	l8ui	a9, a10, 0
400eaca3:	a82c      	movi.n	a8, 42
400eaca5:	020c      	movi.n	a2, 0
400eaca7:	0f1987        	beq	a9, a8, 400eacba <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400eacaa:	95cb81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400eacad:	0008e0        	callx8	a8
400eacb0:	024d      	mov.n	a4, a2
400eacb2:	180c      	movi.n	a8, 1
400eacb4:	8348a0        	moveqz	a4, a8, a10
400eacb7:	742040        	extui	a2, a4, 0, 8
400eacba:	f01d      	retw.n

400eacbc <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
400eacbc:	004136        	entry	a1, 32
400eacbf:	0123b2        	l32i	a11, a3, 4
400eacc2:	0122a2        	l32i	a10, a2, 4
400eacc5:	fffce5        	call8	400eac94 <_ZNKSt9type_infoeqERKS_$isra$0>
400eacc8:	009a16        	beqz	a10, 400eacd5 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x19>
400eaccb:	880c      	movi.n	a8, 8
400eaccd:	3589      	s32i.n	a8, a5, 12
400eaccf:	680c      	movi.n	a8, 6
400eacd1:	0549      	s32i.n	a4, a5, 0
400eacd3:	1589      	s32i.n	a8, a5, 4
400eacd5:	0a2d      	mov.n	a2, a10
400eacd7:	f01d      	retw.n
400eacd9:	000000        	ill

400eacdc <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
400eacdc:	004136        	entry	a1, 32
400eacdf:	082182        	l32i	a8, a1, 32
400eace2:	092132        	l32i	a3, a1, 36
400eace5:	199687        	bne	a6, a8, 400ead02 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
400eace8:	0127b2        	l32i	a11, a7, 4
400eaceb:	12a8      	l32i.n	a10, a2, 4
400eaced:	fffa65        	call8	400eac94 <_ZNKSt9type_infoeqERKS_$isra$0>
400eacf0:	eadc      	bnez.n	a10, 400ead12 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
400eacf2:	000306        	j	400ead02 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26>
400eacf5:	120c      	movi.n	a2, 1
400eacf7:	0369      	s32i.n	a6, a3, 0
400eacf9:	1349      	s32i.n	a4, a3, 4
400eacfb:	3329      	s32i.n	a2, a3, 12
400eacfd:	0004c6        	j	400ead14 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x38>
400ead00:	b80000        	lsi	f0, a0, 0x2e0
400ead03:	12a815        	call4	400fd784 <_etext+0x10ea7>
400ead06:	fff8e5        	call8	400eac94 <_ZNKSt9type_infoeqERKS_$isra$0>
400ead09:	fe8a56        	bnez	a10, 400eacf5 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19>
400ead0c:	000106        	j	400ead14 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x38>
400ead0f:	000000        	ill
400ead12:	2349      	s32i.n	a4, a3, 8
400ead14:	020c      	movi.n	a2, 0
400ead16:	f01d      	retw.n

400ead18 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
400ead18:	004136        	entry	a1, 32
400ead1b:	13b8      	l32i.n	a11, a3, 4
400ead1d:	12a8      	l32i.n	a10, a2, 4
400ead1f:	fff765        	call8	400eac94 <_ZNKSt9type_infoeqERKS_$isra$0>
400ead22:	eacc      	bnez.n	a10, 400ead34 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x1c>
400ead24:	0c45f6        	bgeui	a5, 4, 400ead34 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x1c>
400ead27:	0388      	l32i.n	a8, a3, 0
400ead29:	04cd      	mov.n	a12, a4
400ead2b:	5888      	l32i.n	a8, a8, 20
400ead2d:	02bd      	mov.n	a11, a2
400ead2f:	03ad      	mov.n	a10, a3
400ead31:	0008e0        	callx8	a8
400ead34:	0a2d      	mov.n	a2, a10
400ead36:	f01d      	retw.n

400ead38 <__gnu_cxx::__concurrence_lock_error::what() const>:
400ead38:	004136        	entry	a1, 32
400ead3b:	975821        	l32r	a2, 400d0a9c <_flash_cache_start+0xa84>
400ead3e:	f01d      	retw.n

400ead40 <__gnu_cxx::__concurrence_unlock_error::what() const>:
400ead40:	004136        	entry	a1, 32
400ead43:	975721        	l32r	a2, 400d0aa0 <_flash_cache_start+0xa88>
400ead46:	f01d      	retw.n

400ead48 <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>:
400ead48:	004136        	entry	a1, 32
400ead4b:	975681        	l32r	a8, 400d0aa4 <_flash_cache_start+0xa8c>
400ead4e:	20a220        	or	a10, a2, a2
400ead51:	006282        	s32i	a8, a2, 0
400ead54:	01b5e5        	call8	400ec8b4 <std::exception::~exception()>
400ead57:	000090        	retw
	...

400ead5c <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>:
400ead5c:	004136        	entry	a1, 32
400ead5f:	975281        	l32r	a8, 400d0aa8 <_flash_cache_start+0xa90>
400ead62:	20a220        	or	a10, a2, a2
400ead65:	006282        	s32i	a8, a2, 0
400ead68:	01b4a5        	call8	400ec8b4 <std::exception::~exception()>
400ead6b:	000090        	retw
	...

400ead70 <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>:
400ead70:	004136        	entry	a1, 32
400ead73:	20a220        	or	a10, a2, a2
400ead76:	fffd25        	call8	400ead48 <__gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()>
400ead79:	20a220        	or	a10, a2, a2
400ead7c:	ffe7e5        	call8	400eabfc <operator delete(void*)>
400ead7f:	000090        	retw
	...

400ead84 <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>:
400ead84:	004136        	entry	a1, 32
400ead87:	20a220        	or	a10, a2, a2
400ead8a:	fffd25        	call8	400ead5c <__gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()>
400ead8d:	20a220        	or	a10, a2, a2
400ead90:	ffe6a5        	call8	400eabfc <operator delete(void*)>
400ead93:	000090        	retw
	...

400ead98 <__gnu_cxx::__mutex::lock()>:
400ead98:	004136        	entry	a1, 32
400ead9b:	20a220        	or	a10, a2, a2
400ead9e:	99dd65        	call8	40084b74 <pthread_mutex_lock>
400eada1:	014a16        	beqz	a10, 400eadb9 <__gnu_cxx::__mutex::lock()+0x21>
400eada4:	04a0a2        	movi	a10, 4
400eada7:	001065        	call8	400eaeac <__cxa_allocate_exception>
400eadaa:	973e81        	l32r	a8, 400d0aa4 <_flash_cache_start+0xa8c>
400eadad:	973fc1        	l32r	a12, 400d0aac <_flash_cache_start+0xa94>
400eadb0:	9740b1        	l32r	a11, 400d0ab0 <_flash_cache_start+0xa98>
400eadb3:	006a82        	s32i	a8, a10, 0
400eadb6:	ffd765        	call8	400eab2c <__cxa_throw>
400eadb9:	f01d      	retw.n
	...

400eadbc <__gnu_cxx::__scoped_lock::~__scoped_lock()>:
400eadbc:	004136        	entry	a1, 32
400eadbf:	0022a2        	l32i	a10, a2, 0
400eadc2:	201110        	or	a1, a1, a1
400eadc5:	99e525        	call8	40084c18 <pthread_mutex_unlock>
400eadc8:	aaac      	beqz.n	a10, 400eadf6 <__gnu_cxx::__scoped_lock::~__scoped_lock()+0x3a>
400eadca:	4a0c      	movi.n	a10, 4
400eadcc:	201110        	or	a1, a1, a1
400eadcf:	000de5        	call8	400eaeac <__cxa_allocate_exception>
400eadd2:	973581        	l32r	a8, 400d0aa8 <_flash_cache_start+0xa90>
400eadd5:	9737c1        	l32r	a12, 400d0ab4 <_flash_cache_start+0xa9c>
400eadd8:	9738b1        	l32r	a11, 400d0ab8 <_flash_cache_start+0xaa0>
400eaddb:	006a82        	s32i	a8, a10, 0
400eadde:	201110        	or	a1, a1, a1
400eade1:	ffd4a5        	call8	400eab2c <__cxa_throw>
400eade4:	20a220        	or	a10, a2, a2
400eade7:	050326        	beqi	a3, -1, 400eadf0 <__gnu_cxx::__scoped_lock::~__scoped_lock()+0x34>
400eadea:	201110        	or	a1, a1, a1
400eaded:	e9ed25        	call8	400d4cc0 <_Unwind_Resume>
400eadf0:	201110        	or	a1, a1, a1
400eadf3:	ffb8e5        	call8	400ea980 <__cxa_call_unexpected>
400eadf6:	f01d      	retw.n

400eadf8 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4>:
400eadf8:	006136        	entry	a1, 48
400eadfb:	973131        	l32r	a3, 400d0ac0 <_flash_cache_start+0xaa8>
400eadfe:	f0c222        	addi	a2, a2, -16
400eae01:	03ad      	mov.n	a10, a3
400eae03:	0139      	s32i.n	a3, a1, 0
400eae05:	fff925        	call8	400ead98 <__gnu_cxx::__mutex::lock()>
400eae08:	1388      	l32i.n	a8, a3, 4
400eae0a:	0298      	l32i.n	a9, a2, 0
400eae0c:	18cc      	bnez.n	a8, 400eae11 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x19>
400eae0e:	0003c6        	j	400eae21 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x29>
400eae11:	c29a      	add.n	a12, a2, a9
400eae13:	972aa1        	l32r	a10, 400d0abc <_flash_cache_start+0xaa4>
400eae16:	0c98c7        	bne	a8, a12, 400eae26 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x2e>
400eae19:	08a8      	l32i.n	a10, a8, 0
400eae1b:	1888      	l32i.n	a8, a8, 4
400eae1d:	9a9a      	add.n	a9, a10, a9
400eae1f:	0299      	s32i.n	a9, a2, 0
400eae21:	1289      	s32i.n	a8, a2, 4
400eae23:	000846        	j	400eae48 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x50>
400eae26:	0a88      	l32i.n	a8, a10, 0
400eae28:	18b8      	l32i.n	a11, a8, 4
400eae2a:	6b8c      	beqz.n	a11, 400eae34 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x3c>
400eae2c:	04bcb7        	bgeu	a12, a11, 400eae34 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x3c>
400eae2f:	a84b      	addi.n	a10, a8, 4
400eae31:	fffc46        	j	400eae26 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x2e>
400eae34:	0838      	l32i.n	a3, a8, 0
400eae36:	c83a      	add.n	a12, a8, a3
400eae38:	0692c7        	bne	a2, a12, 400eae42 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x4a>
400eae3b:	993a      	add.n	a9, a9, a3
400eae3d:	0899      	s32i.n	a9, a8, 0
400eae3f:	000206        	j	400eae4b <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4+0x53>
400eae42:	0162b2        	s32i	a11, a2, 4
400eae45:	002a32        	l32i	a3, a10, 0
400eae48:	016322        	s32i	a2, a3, 4
400eae4b:	01ad      	mov.n	a10, a1
400eae4d:	fff6e5        	call8	400eadbc <__gnu_cxx::__scoped_lock::~__scoped_lock()>
400eae50:	f01d      	retw.n
	...

400eae54 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5>:
400eae54:	006136        	entry	a1, 48
400eae57:	971a31        	l32r	a3, 400d0ac0 <_flash_cache_start+0xaa8>
400eae5a:	10c222        	addi	a2, a2, 16
400eae5d:	03ad      	mov.n	a10, a3
400eae5f:	0139      	s32i.n	a3, a1, 0
400eae61:	fff365        	call8	400ead98 <__gnu_cxx::__mutex::lock()>
400eae64:	880c      	movi.n	a8, 8
400eae66:	732280        	maxu	a2, a2, a8
400eae69:	22fb      	addi.n	a2, a2, 15
400eae6b:	087c      	movi.n	a8, -16
400eae6d:	108280        	and	a8, a2, a8
400eae70:	9713a1        	l32r	a10, 400d0abc <_flash_cache_start+0xaa4>
400eae73:	1328      	l32i.n	a2, a3, 4
400eae75:	f29c      	beqz.n	a2, 400eae98 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x44>
400eae77:	0298      	l32i.n	a9, a2, 0
400eae79:	23b987        	bgeu	a9, a8, 400eaea0 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x4c>
400eae7c:	a24b      	addi.n	a10, a2, 4
400eae7e:	1228      	l32i.n	a2, a2, 4
400eae80:	fffc46        	j	400eae75 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x21>
400eae83:	b28a00        	mulsh	a8, a10, a0
400eae86:	1b39      	s32i.n	a3, a11, 4
400eae88:	0a28      	l32i.n	a2, a10, 0
400eae8a:	0b99      	s32i.n	a9, a11, 0
400eae8c:	0289      	s32i.n	a8, a2, 0
400eae8e:	0ab9      	s32i.n	a11, a10, 0
400eae90:	000046        	j	400eae95 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x41>
400eae93:	0a39      	s32i.n	a3, a10, 0
400eae95:	10c222        	addi	a2, a2, 16
400eae98:	01ad      	mov.n	a10, a1
400eae9a:	fff225        	call8	400eadbc <__gnu_cxx::__scoped_lock::~__scoped_lock()>
400eae9d:	f01d      	retw.n
400eae9f:	998000        	lsi	f0, a0, 0x264
400eaea2:	1238c0        	andbc	b3, b8, b12
400eaea5:	db89f6        	bgeui	a9, 8, 400eae84 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x30>
400eaea8:	fff9c6        	j	400eae93 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5+0x3f>
	...

400eaeac <__cxa_allocate_exception>:
400eaeac:	004136        	entry	a1, 32
400eaeaf:	60c222        	addi	a2, a2, 96
400eaeb2:	02ad      	mov.n	a10, a2
400eaeb4:	948e81        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400eaeb7:	0008e0        	callx8	a8
400eaeba:	0a3d      	mov.n	a3, a10
400eaebc:	0adc      	bnez.n	a10, 400eaed0 <__cxa_allocate_exception+0x24>
400eaebe:	02ad      	mov.n	a10, a2
400eaec0:	201110        	or	a1, a1, a1
400eaec3:	fff925        	call8	400eae54 <_ZN12_GLOBAL__N_14pool8allocateEj$constprop$5>
400eaec6:	0a3d      	mov.n	a3, a10
400eaec8:	4acc      	bnez.n	a10, 400eaed0 <__cxa_allocate_exception+0x24>
400eaeca:	201110        	or	a1, a1, a1
400eaecd:	001525        	call8	400eb020 <std::terminate()>
400eaed0:	60a0c2        	movi	a12, 96
400eaed3:	0b0c      	movi.n	a11, 0
400eaed5:	03ad      	mov.n	a10, a3
400eaed7:	946781        	l32r	a8, 400d0074 <_flash_cache_start+0x5c>
400eaeda:	0008e0        	callx8	a8
400eaedd:	60c322        	addi	a2, a3, 96
400eaee0:	f01d      	retw.n
400eaee2:	02ad      	mov.n	a10, a2
400eaee4:	050326        	beqi	a3, -1, 400eaeed <__cxa_allocate_exception+0x41>
400eaee7:	201110        	or	a1, a1, a1
400eaeea:	e9dd65        	call8	400d4cc0 <_Unwind_Resume>
400eaeed:	201110        	or	a1, a1, a1
400eaef0:	ffa8e5        	call8	400ea980 <__cxa_call_unexpected>
	...

400eaef4 <__cxa_free_exception>:
400eaef4:	004136        	entry	a1, 32
400eaef7:	96f281        	l32r	a8, 400d0ac0 <_flash_cache_start+0xaa8>
400eaefa:	a0c2a2        	addi	a10, a2, -96
400eaefd:	2898      	l32i.n	a9, a8, 8
400eaeff:	1bb9a7        	bgeu	a9, a10, 400eaf1e <__cxa_free_exception+0x2a>
400eaf02:	3888      	l32i.n	a8, a8, 12
400eaf04:	898a      	add.n	a8, a9, a8
400eaf06:	14ba87        	bgeu	a10, a8, 400eaf1e <__cxa_free_exception+0x2a>
400eaf09:	000646        	j	400eaf26 <__cxa_free_exception+0x32>
400eaf0c:	02ad00        	andb	b10, b13, b0
400eaf0f:	050326        	beqi	a3, -1, 400eaf18 <__cxa_free_exception+0x24>
400eaf12:	201110        	or	a1, a1, a1
400eaf15:	e9daa5        	call8	400d4cc0 <_Unwind_Resume>
400eaf18:	201110        	or	a1, a1, a1
400eaf1b:	ffa665        	call8	400ea980 <__cxa_call_unexpected>
400eaf1e:	945d81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400eaf21:	0008e0        	callx8	a8
400eaf24:	f01d      	retw.n
400eaf26:	201110        	or	a1, a1, a1
400eaf29:	ffece5        	call8	400eadf8 <_ZN12_GLOBAL__N_14pool4freeEPv$constprop$4>
400eaf2c:	f01d      	retw.n
	...

400eaf30 <_GLOBAL__sub_I___cxa_allocate_exception>:
400eaf30:	004136        	entry	a1, 32
400eaf33:	96e341        	l32r	a4, 400d0ac0 <_flash_cache_start+0xaa8>
400eaf36:	0b0c      	movi.n	a11, 0
400eaf38:	04ad      	mov.n	a10, a4
400eaf3a:	201110        	or	a1, a1, a1
400eaf3d:	ff0665        	call8	400e9fa4 <pthread_mutex_init>
400eaf40:	020c      	movi.n	a2, 0
400eaf42:	2429      	s32i.n	a2, a4, 8
400eaf44:	201110        	or	a1, a1, a1
400eaf47:	017125        	call8	400ec658 <__cxx_eh_arena_size_get>
400eaf4a:	34a9      	s32i.n	a10, a4, 12
400eaf4c:	0a2d      	mov.n	a2, a10
400eaf4e:	6a8c      	beqz.n	a10, 400eaf58 <_GLOBAL__sub_I___cxa_allocate_exception+0x28>
400eaf50:	946781        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400eaf53:	0008e0        	callx8	a8
400eaf56:	24a9      	s32i.n	a10, a4, 8
400eaf58:	2488      	l32i.n	a8, a4, 8
400eaf5a:	48cc      	bnez.n	a8, 400eaf62 <_GLOBAL__sub_I___cxa_allocate_exception+0x32>
400eaf5c:	3489      	s32i.n	a8, a4, 12
400eaf5e:	1489      	s32i.n	a8, a4, 4
400eaf60:	f01d      	retw.n
400eaf62:	1489      	s32i.n	a8, a4, 4
400eaf64:	0829      	s32i.n	a2, a8, 0
400eaf66:	020c      	movi.n	a2, 0
400eaf68:	1829      	s32i.n	a2, a8, 4
400eaf6a:	f01d      	retw.n
400eaf6c:	04ad      	mov.n	a10, a4
400eaf6e:	201110        	or	a1, a1, a1
400eaf71:	ff0da5        	call8	400ea04c <pthread_mutex_destroy>
400eaf74:	02ad      	mov.n	a10, a2
400eaf76:	201110        	or	a1, a1, a1
400eaf79:	e9d465        	call8	400d4cc0 <_Unwind_Resume>

400eaf7c <_GLOBAL__sub_D___cxa_allocate_exception>:
400eaf7c:	004136        	entry	a1, 32
400eaf7f:	96d0a1        	l32r	a10, 400d0ac0 <_flash_cache_start+0xaa8>
400eaf82:	ff0ca5        	call8	400ea04c <pthread_mutex_destroy>
400eaf85:	f01d      	retw.n
	...

400eaf88 <operator delete[](void*)>:
400eaf88:	004136        	entry	a1, 32
400eaf8b:	02ad      	mov.n	a10, a2
400eaf8d:	ffc6e5        	call8	400eabfc <operator delete(void*)>
400eaf90:	f01d      	retw.n
	...

400eaf94 <std::bad_alloc::what() const>:
400eaf94:	004136        	entry	a1, 32
400eaf97:	96cb21        	l32r	a2, 400d0ac4 <_flash_cache_start+0xaac>
400eaf9a:	f01d      	retw.n

400eaf9c <std::bad_alloc::~bad_alloc()>:
400eaf9c:	004136        	entry	a1, 32
400eaf9f:	96bb81        	l32r	a8, 400d0a8c <_flash_cache_start+0xa74>
400eafa2:	20a220        	or	a10, a2, a2
400eafa5:	006282        	s32i	a8, a2, 0
400eafa8:	0190a5        	call8	400ec8b4 <std::exception::~exception()>
400eafab:	000090        	retw
	...

400eafb0 <std::bad_alloc::~bad_alloc()>:
400eafb0:	004136        	entry	a1, 32
400eafb3:	20a220        	or	a10, a2, a2
400eafb6:	fffe65        	call8	400eaf9c <std::bad_alloc::~bad_alloc()>
400eafb9:	20a220        	or	a10, a2, a2
400eafbc:	ffc3e5        	call8	400eabfc <operator delete(void*)>
400eafbf:	000090        	retw
	...

400eafc4 <std::__throw_bad_alloc()>:
400eafc4:	004136        	entry	a1, 32
400eafc7:	4a0c      	movi.n	a10, 4
400eafc9:	ffee25        	call8	400eaeac <__cxa_allocate_exception>
400eafcc:	96b081        	l32r	a8, 400d0a8c <_flash_cache_start+0xa74>
400eafcf:	96b0c1        	l32r	a12, 400d0a90 <_flash_cache_start+0xa78>
400eafd2:	96b0b1        	l32r	a11, 400d0a94 <_flash_cache_start+0xa7c>
400eafd5:	0a89      	s32i.n	a8, a10, 0
400eafd7:	ffb565        	call8	400eab2c <__cxa_throw>
	...

400eafdc <__cxxabiv1::__terminate(void (*)())>:
400eafdc:	004136        	entry	a1, 32
400eafdf:	0002e0        	callx8	a2
400eafe2:	201110        	or	a1, a1, a1
400eafe5:	a03865        	call8	4008b36c <abort>
400eafe8:	20a220        	or	a10, a2, a2
400eafeb:	201110        	or	a1, a1, a1
400eafee:	000665        	call8	400eb054 <__cxa_begin_catch>
400eaff1:	201110        	or	a1, a1, a1
400eaff4:	a03765        	call8	4008b36c <abort>
400eaff7:	201110        	or	a1, a1, a1
400eaffa:	000b25        	call8	400eb0ac <__cxa_end_catch>
400eaffd:	02ad      	mov.n	a10, a2
400eafff:	050326        	beqi	a3, -1, 400eb008 <__cxxabiv1::__terminate(void (*)())+0x2c>
400eb002:	201110        	or	a1, a1, a1
400eb005:	e9cba5        	call8	400d4cc0 <_Unwind_Resume>
400eb008:	201110        	or	a1, a1, a1
400eb00b:	ff9765        	call8	400ea980 <__cxa_call_unexpected>
	...

400eb010 <std::get_terminate()>:
400eb010:	004136        	entry	a1, 32
400eb013:	96ad21        	l32r	a2, 400d0ac8 <_flash_cache_start+0xab0>
400eb016:	0020c0        	memw
400eb019:	0228      	l32i.n	a2, a2, 0
400eb01b:	0020c0        	memw
400eb01e:	f01d      	retw.n

400eb020 <std::terminate()>:
400eb020:	004136        	entry	a1, 32
400eb023:	fffee5        	call8	400eb010 <std::get_terminate()>
400eb026:	fffb65        	call8	400eafdc <__cxxabiv1::__terminate(void (*)())>
400eb029:	000000        	ill

400eb02c <__cxxabiv1::__unexpected(void (*)())>:
400eb02c:	004136        	entry	a1, 32
400eb02f:	0002e0        	callx8	a2
400eb032:	fffee5        	call8	400eb020 <std::terminate()>
400eb035:	000000        	ill

400eb038 <std::get_unexpected()>:
400eb038:	004136        	entry	a1, 32
400eb03b:	96a421        	l32r	a2, 400d0acc <_flash_cache_start+0xab4>
400eb03e:	0020c0        	memw
400eb041:	0228      	l32i.n	a2, a2, 0
400eb043:	0020c0        	memw
400eb046:	f01d      	retw.n

400eb048 <std::unexpected()>:
400eb048:	004136        	entry	a1, 32
400eb04b:	fffee5        	call8	400eb038 <std::get_unexpected()>
400eb04e:	fffde5        	call8	400eb02c <__cxxabiv1::__unexpected(void (*)())>
400eb051:	000000        	ill

400eb054 <__cxa_begin_catch>:
400eb054:	004136        	entry	a1, 32
400eb057:	ffa0a5        	call8	400eaa60 <__cxa_get_globals>
400eb05a:	d0c282        	addi	a8, a2, -48
400eb05d:	0c28f2        	l32i	a15, a8, 48
400eb060:	9683c1        	l32r	a12, 400d0a6c <_flash_cache_start+0xa54>
400eb063:	002a92        	l32i	a9, a10, 0
400eb066:	80bfc0        	add	a11, a15, a12
400eb069:	d828      	l32i.n	a2, a8, 52
400eb06b:	9681d1        	l32r	a13, 400d0a70 <_flash_cache_start+0xa58>
400eb06e:	1e0c      	movi.n	a14, 1
400eb070:	013bf7        	bltu	a11, a15, 400eb075 <__cxa_begin_catch+0x21>
400eb073:	0e0c      	movi.n	a14, 0
400eb075:	22da      	add.n	a2, a2, a13
400eb077:	2e2a      	add.n	a2, a14, a2
400eb079:	12cc      	bnez.n	a2, 400eb07e <__cxa_begin_catch+0x2a>
400eb07b:	0e2bb6        	bltui	a11, 2, 400eb08d <__cxa_begin_catch+0x39>
400eb07e:	498c      	beqz.n	a9, 400eb086 <__cxa_begin_catch+0x32>
400eb080:	201110        	or	a1, a1, a1
400eb083:	fff9e5        	call8	400eb020 <std::terminate()>
400eb086:	0a89      	s32i.n	a8, a10, 0
400eb088:	092d      	mov.n	a2, a9
400eb08a:	f01d      	retw.n
400eb08c:	58b800        	ssxp	f11, a8, a0
400eb08f:	2b1b      	addi.n	a2, a11, 1
400eb091:	004bd6        	bgez	a11, 400eb099 <__cxa_begin_catch+0x45>
400eb094:	120c      	movi.n	a2, 1
400eb096:	c022b0        	sub	a2, a2, a11
400eb099:	5829      	s32i.n	a2, a8, 20
400eb09b:	1a28      	l32i.n	a2, a10, 4
400eb09d:	220b      	addi.n	a2, a2, -1
400eb09f:	1a29      	s32i.n	a2, a10, 4
400eb0a1:	031987        	beq	a9, a8, 400eb0a8 <__cxa_begin_catch+0x54>
400eb0a4:	4899      	s32i.n	a9, a8, 16
400eb0a6:	0a89      	s32i.n	a8, a10, 0
400eb0a8:	a828      	l32i.n	a2, a8, 40
400eb0aa:	f01d      	retw.n

400eb0ac <__cxa_end_catch>:
400eb0ac:	004136        	entry	a1, 32
400eb0af:	ff97e5        	call8	400eaa2c <__cxa_get_globals_fast>
400eb0b2:	002a82        	l32i	a8, a10, 0
400eb0b5:	053816        	beqz	a8, 400eb10c <__cxa_end_catch+0x60>
400eb0b8:	0c28d2        	l32i	a13, a8, 48
400eb0bb:	966ce1        	l32r	a14, 400d0a6c <_flash_cache_start+0xa54>
400eb0be:	0d2892        	l32i	a9, a8, 52
400eb0c1:	bdea      	add.n	a11, a13, a14
400eb0c3:	966bf1        	l32r	a15, 400d0a70 <_flash_cache_start+0xa58>
400eb0c6:	1c0c      	movi.n	a12, 1
400eb0c8:	013bd7        	bltu	a11, a13, 400eb0cd <__cxa_end_catch+0x21>
400eb0cb:	0c0c      	movi.n	a12, 0
400eb0cd:	99fa      	add.n	a9, a9, a15
400eb0cf:	9c9a      	add.n	a9, a12, a9
400eb0d1:	19cc      	bnez.n	a9, 400eb0d6 <__cxa_end_catch+0x2a>
400eb0d3:	052bb6        	bltui	a11, 2, 400eb0dc <__cxa_end_catch+0x30>
400eb0d6:	090c      	movi.n	a9, 0
400eb0d8:	000646        	j	400eb0f5 <__cxa_end_catch+0x49>
400eb0db:	589800        	ssxp	f9, a8, a0
400eb0de:	00a9d6        	bgez	a9, 400eb0ec <__cxa_end_catch+0x40>
400eb0e1:	991b      	addi.n	a9, a9, 1
400eb0e3:	39ec      	bnez.n	a9, 400eb10a <__cxa_end_catch+0x5e>
400eb0e5:	48b8      	l32i.n	a11, a8, 16
400eb0e7:	0ab9      	s32i.n	a11, a10, 0
400eb0e9:	000746        	j	400eb10a <__cxa_end_catch+0x5e>
400eb0ec:	ffc992        	addi	a9, a9, -1
400eb0ef:	00e956        	bnez	a9, 400eb101 <__cxa_end_catch+0x55>
400eb0f2:	042892        	l32i	a9, a8, 16
400eb0f5:	0a99      	s32i.n	a9, a10, 0
400eb0f7:	30c8a2        	addi	a10, a8, 48
400eb0fa:	e9c925        	call8	400d4d8c <_Unwind_DeleteException>
400eb0fd:	f01d      	retw.n
400eb0ff:	660000        	lsi	f0, a0, 0x198
400eb102:	0509      	s32i.n	a0, a5, 0
400eb104:	201110        	or	a1, a1, a1
400eb107:	fff1a5        	call8	400eb020 <std::terminate()>
400eb10a:	5899      	s32i.n	a9, a8, 20
400eb10c:	f01d      	retw.n
	...

400eb110 <std::get_new_handler()>:
400eb110:	004136        	entry	a1, 32
400eb113:	966f21        	l32r	a2, 400d0ad0 <_flash_cache_start+0xab8>
400eb116:	0020c0        	memw
400eb119:	0228      	l32i.n	a2, a2, 0
400eb11b:	0020c0        	memw
400eb11e:	f01d      	retw.n

400eb120 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
400eb120:	004136        	entry	a1, 32
400eb123:	966c81        	l32r	a8, 400d0ad4 <_flash_cache_start+0xabc>
400eb126:	20a220        	or	a10, a2, a2
400eb129:	006282        	s32i	a8, a2, 0
400eb12c:	ffb3e5        	call8	400eac6c <__cxxabiv1::__class_type_info::~__class_type_info()>
400eb12f:	000090        	retw
	...

400eb134 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
400eb134:	004136        	entry	a1, 32
400eb137:	20a220        	or	a10, a2, a2
400eb13a:	fffe65        	call8	400eb120 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
400eb13d:	20a220        	or	a10, a2, a2
400eb140:	ffaba5        	call8	400eabfc <operator delete(void*)>
400eb143:	000090        	retw
	...

400eb148 <_ZNKSt9type_infoeqERKS_$isra$0>:
400eb148:	004136        	entry	a1, 32
400eb14b:	02ad      	mov.n	a10, a2
400eb14d:	03bd      	mov.n	a11, a3
400eb14f:	120c      	movi.n	a2, 1
400eb151:	191a37        	beq	a10, a3, 400eb16e <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400eb154:	000a92        	l8ui	a9, a10, 0
400eb157:	a82c      	movi.n	a8, 42
400eb159:	020c      	movi.n	a2, 0
400eb15b:	0f1987        	beq	a9, a8, 400eb16e <_ZNKSt9type_infoeqERKS_$isra$0+0x26>
400eb15e:	949e81        	l32r	a8, 400d03d8 <_flash_cache_start+0x3c0>
400eb161:	0008e0        	callx8	a8
400eb164:	024d      	mov.n	a4, a2
400eb166:	180c      	movi.n	a8, 1
400eb168:	8348a0        	moveqz	a4, a8, a10
400eb16b:	742040        	extui	a2, a4, 0, 8
400eb16e:	f01d      	retw.n

400eb170 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
400eb170:	008136        	entry	a1, 64
400eb173:	0122c2        	l32i	a12, a2, 4
400eb176:	112192        	l32i	a9, a1, 68
400eb179:	0125b2        	l32i	a11, a5, 4
400eb17c:	20acc0        	or	a10, a12, a12
400eb17f:	5199      	s32i.n	a9, a1, 20
400eb181:	41c9      	s32i.n	a12, a1, 16
400eb183:	fffc65        	call8	400eb148 <_ZNKSt9type_infoeqERKS_$isra$0>
400eb186:	0a8d      	mov.n	a8, a10
400eb188:	5198      	l32i.n	a9, a1, 20
400eb18a:	41c8      	l32i.n	a12, a1, 16
400eb18c:	caac      	beqz.n	a10, 400eb1bc <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x4c>
400eb18e:	0969      	s32i.n	a6, a9, 0
400eb190:	1949      	s32i.n	a4, a9, 4
400eb192:	016396        	bltz	a3, 400eb1ac <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
400eb195:	102122        	l32i	a2, a1, 64
400eb198:	663a      	add.n	a6, a6, a3
400eb19a:	c06260        	sub	a6, a2, a6
400eb19d:	670c      	movi.n	a7, 6
400eb19f:	120c      	movi.n	a2, 1
400eb1a1:	937260        	movnez	a7, a2, a6
400eb1a4:	3979      	s32i.n	a7, a9, 12
400eb1a6:	080c      	movi.n	a8, 0
400eb1a8:	001306        	j	400eb1f8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eb1ab:	e27c00        	remu	a7, a12, a0
400eb1ae:	080c      	movi.n	a8, 0
400eb1b0:	449327        	bne	a3, a2, 400eb1f8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eb1b3:	120c      	movi.n	a2, 1
400eb1b5:	3929      	s32i.n	a2, a9, 12
400eb1b7:	000f46        	j	400eb1f8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eb1ba:	a20000        	muluh	a0, a0, a0
400eb1bd:	a71021        	l32r	a2, 400d4e00 <frame_downheap+0x14>
400eb1c0:	b21396        	bltz	a3, 400eace5 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x9>
400eb1c3:	c00127        	bnone	a1, a2, 400eb187 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17>
400eb1c6:	20ac      	beqz.n	a0, 400eb1ec <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x7c>
400eb1c8:	046182        	s32i	a8, a1, 16
400eb1cb:	5199      	s32i.n	a9, a1, 20
400eb1cd:	fff7a5        	call8	400eb148 <_ZNKSt9type_infoeqERKS_$isra$0>
400eb1d0:	4188      	l32i.n	a8, a1, 16
400eb1d2:	5198      	l32i.n	a9, a1, 20
400eb1d4:	eadc      	bnez.n	a10, 400eb1f6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x86>
400eb1d6:	22a8      	l32i.n	a10, a2, 8
400eb1d8:	102182        	l32i	a8, a1, 64
400eb1db:	0a28      	l32i.n	a2, a10, 0
400eb1dd:	0189      	s32i.n	a8, a1, 0
400eb1df:	1199      	s32i.n	a9, a1, 4
400eb1e1:	7228      	l32i.n	a2, a2, 28
400eb1e3:	07fd      	mov.n	a15, a7
400eb1e5:	06ed      	mov.n	a14, a6
400eb1e7:	05dd      	mov.n	a13, a5
400eb1e9:	04cd      	mov.n	a12, a4
400eb1eb:	03bd      	mov.n	a11, a3
400eb1ed:	0002e0        	callx8	a2
400eb1f0:	0a8d      	mov.n	a8, a10
400eb1f2:	000086        	j	400eb1f8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x88>
400eb1f5:	294900        	lsi	f0, a9, 164
400eb1f8:	082d      	mov.n	a2, a8
400eb1fa:	f01d      	retw.n

400eb1fc <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
400eb1fc:	004136        	entry	a1, 32
400eb1ff:	119647        	bne	a6, a4, 400eb214 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x18>
400eb202:	0125b2        	l32i	a11, a5, 4
400eb205:	0122a2        	l32i	a10, a2, 4
400eb208:	fff3e5        	call8	400eb148 <_ZNKSt9type_infoeqERKS_$isra$0>
400eb20b:	005a16        	beqz	a10, 400eb214 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x18>
400eb20e:	6a0c      	movi.n	a10, 6
400eb210:	000446        	j	400eb225 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x29>
400eb213:	22a800        	orb	b10, b8, b0
400eb216:	06ed      	mov.n	a14, a6
400eb218:	0a28      	l32i.n	a2, a10, 0
400eb21a:	05dd      	mov.n	a13, a5
400eb21c:	8228      	l32i.n	a2, a2, 32
400eb21e:	04cd      	mov.n	a12, a4
400eb220:	03bd      	mov.n	a11, a3
400eb222:	0002e0        	callx8	a2
400eb225:	0a2d      	mov.n	a2, a10
400eb227:	f01d      	retw.n
400eb229:	000000        	ill

400eb22c <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
400eb22c:	004136        	entry	a1, 32
400eb22f:	20d550        	or	a13, a5, a5
400eb232:	20c440        	or	a12, a4, a4
400eb235:	20b330        	or	a11, a3, a3
400eb238:	02ad      	mov.n	a10, a2
400eb23a:	ffa825        	call8	400eacbc <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
400eb23d:	dacc      	bnez.n	a10, 400eb24e <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x22>
400eb23f:	22a8      	l32i.n	a10, a2, 8
400eb241:	05dd      	mov.n	a13, a5
400eb243:	0a28      	l32i.n	a2, a10, 0
400eb245:	04cd      	mov.n	a12, a4
400eb247:	6228      	l32i.n	a2, a2, 24
400eb249:	03bd      	mov.n	a11, a3
400eb24b:	0002e0        	callx8	a2
400eb24e:	0a2d      	mov.n	a2, a10
400eb250:	f01d      	retw.n
	...

400eb254 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj>:
400eb254:	004136        	entry	a1, 32
400eb257:	962081        	l32r	a8, 400d0ad8 <_flash_cache_start+0xac0>
400eb25a:	1b0c      	movi.n	a11, 1
400eb25c:	08c8      	l32i.n	a12, a8, 0
400eb25e:	1898      	l32i.n	a9, a8, 4
400eb260:	01cca2        	addi	a10, a12, 1
400eb263:	013ac7        	bltu	a10, a12, 400eb268 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x14>
400eb266:	0b0c      	movi.n	a11, 0
400eb268:	9b9a      	add.n	a9, a11, a9
400eb26a:	08a9      	s32i.n	a10, a8, 0
400eb26c:	1899      	s32i.n	a9, a8, 4
400eb26e:	961b81        	l32r	a8, 400d0adc <_flash_cache_start+0xac4>
400eb271:	1b0c      	movi.n	a11, 1
400eb273:	08c8      	l32i.n	a12, a8, 0
400eb275:	1898      	l32i.n	a9, a8, 4
400eb277:	ac1b      	addi.n	a10, a12, 1
400eb279:	013ac7        	bltu	a10, a12, 400eb27e <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x2a>
400eb27c:	0b0c      	movi.n	a11, 0
400eb27e:	9b9a      	add.n	a9, a11, a9
400eb280:	08a9      	s32i.n	a10, a8, 0
400eb282:	1899      	s32i.n	a9, a8, 4
400eb284:	961781        	l32r	a8, 400d0ae0 <_flash_cache_start+0xac8>
400eb287:	1b0c      	movi.n	a11, 1
400eb289:	08c8      	l32i.n	a12, a8, 0
400eb28b:	1898      	l32i.n	a9, a8, 4
400eb28d:	ac1b      	addi.n	a10, a12, 1
400eb28f:	013ac7        	bltu	a10, a12, 400eb294 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x40>
400eb292:	0b0c      	movi.n	a11, 0
400eb294:	9b9a      	add.n	a9, a11, a9
400eb296:	08a9      	s32i.n	a10, a8, 0
400eb298:	1899      	s32i.n	a9, a8, 4
400eb29a:	961281        	l32r	a8, 400d0ae4 <_flash_cache_start+0xacc>
400eb29d:	1b0c      	movi.n	a11, 1
400eb29f:	08c8      	l32i.n	a12, a8, 0
400eb2a1:	1898      	l32i.n	a9, a8, 4
400eb2a3:	ac1b      	addi.n	a10, a12, 1
400eb2a5:	013ac7        	bltu	a10, a12, 400eb2aa <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x56>
400eb2a8:	0b0c      	movi.n	a11, 0
400eb2aa:	9b9a      	add.n	a9, a11, a9
400eb2ac:	08a9      	s32i.n	a10, a8, 0
400eb2ae:	1899      	s32i.n	a9, a8, 4
400eb2b0:	960e81        	l32r	a8, 400d0ae8 <_flash_cache_start+0xad0>
400eb2b3:	1b0c      	movi.n	a11, 1
400eb2b5:	08c8      	l32i.n	a12, a8, 0
400eb2b7:	1898      	l32i.n	a9, a8, 4
400eb2b9:	ac1b      	addi.n	a10, a12, 1
400eb2bb:	013ac7        	bltu	a10, a12, 400eb2c0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x6c>
400eb2be:	0b0c      	movi.n	a11, 0
400eb2c0:	9b9a      	add.n	a9, a11, a9
400eb2c2:	08a9      	s32i.n	a10, a8, 0
400eb2c4:	1899      	s32i.n	a9, a8, 4
400eb2c6:	960981        	l32r	a8, 400d0aec <_flash_cache_start+0xad4>
400eb2c9:	1b0c      	movi.n	a11, 1
400eb2cb:	08c8      	l32i.n	a12, a8, 0
400eb2cd:	1898      	l32i.n	a9, a8, 4
400eb2cf:	ac1b      	addi.n	a10, a12, 1
400eb2d1:	013ac7        	bltu	a10, a12, 400eb2d6 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x82>
400eb2d4:	0b0c      	movi.n	a11, 0
400eb2d6:	9b9a      	add.n	a9, a11, a9
400eb2d8:	08a9      	s32i.n	a10, a8, 0
400eb2da:	1899      	s32i.n	a9, a8, 4
400eb2dc:	960581        	l32r	a8, 400d0af0 <_flash_cache_start+0xad8>
400eb2df:	1b0c      	movi.n	a11, 1
400eb2e1:	08c8      	l32i.n	a12, a8, 0
400eb2e3:	1898      	l32i.n	a9, a8, 4
400eb2e5:	ac1b      	addi.n	a10, a12, 1
400eb2e7:	013ac7        	bltu	a10, a12, 400eb2ec <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x98>
400eb2ea:	0b0c      	movi.n	a11, 0
400eb2ec:	9b9a      	add.n	a9, a11, a9
400eb2ee:	08a9      	s32i.n	a10, a8, 0
400eb2f0:	1899      	s32i.n	a9, a8, 4
400eb2f2:	960081        	l32r	a8, 400d0af4 <_flash_cache_start+0xadc>
400eb2f5:	1b0c      	movi.n	a11, 1
400eb2f7:	08c8      	l32i.n	a12, a8, 0
400eb2f9:	1898      	l32i.n	a9, a8, 4
400eb2fb:	ac1b      	addi.n	a10, a12, 1
400eb2fd:	013ac7        	bltu	a10, a12, 400eb302 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xae>
400eb300:	0b0c      	movi.n	a11, 0
400eb302:	9b9a      	add.n	a9, a11, a9
400eb304:	08a9      	s32i.n	a10, a8, 0
400eb306:	1899      	s32i.n	a9, a8, 4
400eb308:	95fc81        	l32r	a8, 400d0af8 <_flash_cache_start+0xae0>
400eb30b:	1b0c      	movi.n	a11, 1
400eb30d:	08c8      	l32i.n	a12, a8, 0
400eb30f:	1898      	l32i.n	a9, a8, 4
400eb311:	ac1b      	addi.n	a10, a12, 1
400eb313:	013ac7        	bltu	a10, a12, 400eb318 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xc4>
400eb316:	0b0c      	movi.n	a11, 0
400eb318:	9b9a      	add.n	a9, a11, a9
400eb31a:	08a9      	s32i.n	a10, a8, 0
400eb31c:	1899      	s32i.n	a9, a8, 4
400eb31e:	95f781        	l32r	a8, 400d0afc <_flash_cache_start+0xae4>
400eb321:	1b0c      	movi.n	a11, 1
400eb323:	08c8      	l32i.n	a12, a8, 0
400eb325:	1898      	l32i.n	a9, a8, 4
400eb327:	ac1b      	addi.n	a10, a12, 1
400eb329:	013ac7        	bltu	a10, a12, 400eb32e <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xda>
400eb32c:	0b0c      	movi.n	a11, 0
400eb32e:	9b9a      	add.n	a9, a11, a9
400eb330:	08a9      	s32i.n	a10, a8, 0
400eb332:	1899      	s32i.n	a9, a8, 4
400eb334:	95f381        	l32r	a8, 400d0b00 <_flash_cache_start+0xae8>
400eb337:	1b0c      	movi.n	a11, 1
400eb339:	08c8      	l32i.n	a12, a8, 0
400eb33b:	1898      	l32i.n	a9, a8, 4
400eb33d:	ac1b      	addi.n	a10, a12, 1
400eb33f:	013ac7        	bltu	a10, a12, 400eb344 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0xf0>
400eb342:	0b0c      	movi.n	a11, 0
400eb344:	9b9a      	add.n	a9, a11, a9
400eb346:	08a9      	s32i.n	a10, a8, 0
400eb348:	1899      	s32i.n	a9, a8, 4
400eb34a:	95ee81        	l32r	a8, 400d0b04 <_flash_cache_start+0xaec>
400eb34d:	1b0c      	movi.n	a11, 1
400eb34f:	08c8      	l32i.n	a12, a8, 0
400eb351:	1898      	l32i.n	a9, a8, 4
400eb353:	ac1b      	addi.n	a10, a12, 1
400eb355:	013ac7        	bltu	a10, a12, 400eb35a <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj+0x106>
400eb358:	0b0c      	movi.n	a11, 0
400eb35a:	9b9a      	add.n	a9, a11, a9
400eb35c:	08a9      	s32i.n	a10, a8, 0
400eb35e:	1899      	s32i.n	a9, a8, 4
400eb360:	f01d      	retw.n
	...

400eb364 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj>:
400eb364:	004136        	entry	a1, 32
400eb367:	95e881        	l32r	a8, 400d0b08 <_flash_cache_start+0xaf0>
400eb36a:	1b0c      	movi.n	a11, 1
400eb36c:	08c8      	l32i.n	a12, a8, 0
400eb36e:	1898      	l32i.n	a9, a8, 4
400eb370:	01cca2        	addi	a10, a12, 1
400eb373:	013ac7        	bltu	a10, a12, 400eb378 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x14>
400eb376:	0b0c      	movi.n	a11, 0
400eb378:	9b9a      	add.n	a9, a11, a9
400eb37a:	08a9      	s32i.n	a10, a8, 0
400eb37c:	1899      	s32i.n	a9, a8, 4
400eb37e:	95e381        	l32r	a8, 400d0b0c <_flash_cache_start+0xaf4>
400eb381:	1b0c      	movi.n	a11, 1
400eb383:	08c8      	l32i.n	a12, a8, 0
400eb385:	1898      	l32i.n	a9, a8, 4
400eb387:	ac1b      	addi.n	a10, a12, 1
400eb389:	013ac7        	bltu	a10, a12, 400eb38e <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x2a>
400eb38c:	0b0c      	movi.n	a11, 0
400eb38e:	9b9a      	add.n	a9, a11, a9
400eb390:	08a9      	s32i.n	a10, a8, 0
400eb392:	1899      	s32i.n	a9, a8, 4
400eb394:	95df81        	l32r	a8, 400d0b10 <_flash_cache_start+0xaf8>
400eb397:	1b0c      	movi.n	a11, 1
400eb399:	08c8      	l32i.n	a12, a8, 0
400eb39b:	1898      	l32i.n	a9, a8, 4
400eb39d:	ac1b      	addi.n	a10, a12, 1
400eb39f:	013ac7        	bltu	a10, a12, 400eb3a4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x40>
400eb3a2:	0b0c      	movi.n	a11, 0
400eb3a4:	9b9a      	add.n	a9, a11, a9
400eb3a6:	08a9      	s32i.n	a10, a8, 0
400eb3a8:	1899      	s32i.n	a9, a8, 4
400eb3aa:	95da81        	l32r	a8, 400d0b14 <_flash_cache_start+0xafc>
400eb3ad:	1b0c      	movi.n	a11, 1
400eb3af:	08c8      	l32i.n	a12, a8, 0
400eb3b1:	1898      	l32i.n	a9, a8, 4
400eb3b3:	ac1b      	addi.n	a10, a12, 1
400eb3b5:	013ac7        	bltu	a10, a12, 400eb3ba <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x56>
400eb3b8:	0b0c      	movi.n	a11, 0
400eb3ba:	9b9a      	add.n	a9, a11, a9
400eb3bc:	08a9      	s32i.n	a10, a8, 0
400eb3be:	1899      	s32i.n	a9, a8, 4
400eb3c0:	95d681        	l32r	a8, 400d0b18 <_flash_cache_start+0xb00>
400eb3c3:	1b0c      	movi.n	a11, 1
400eb3c5:	08c8      	l32i.n	a12, a8, 0
400eb3c7:	1898      	l32i.n	a9, a8, 4
400eb3c9:	ac1b      	addi.n	a10, a12, 1
400eb3cb:	013ac7        	bltu	a10, a12, 400eb3d0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x6c>
400eb3ce:	0b0c      	movi.n	a11, 0
400eb3d0:	9b9a      	add.n	a9, a11, a9
400eb3d2:	08a9      	s32i.n	a10, a8, 0
400eb3d4:	1899      	s32i.n	a9, a8, 4
400eb3d6:	95d181        	l32r	a8, 400d0b1c <_flash_cache_start+0xb04>
400eb3d9:	1b0c      	movi.n	a11, 1
400eb3db:	08c8      	l32i.n	a12, a8, 0
400eb3dd:	1898      	l32i.n	a9, a8, 4
400eb3df:	ac1b      	addi.n	a10, a12, 1
400eb3e1:	013ac7        	bltu	a10, a12, 400eb3e6 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x82>
400eb3e4:	0b0c      	movi.n	a11, 0
400eb3e6:	9b9a      	add.n	a9, a11, a9
400eb3e8:	08a9      	s32i.n	a10, a8, 0
400eb3ea:	1899      	s32i.n	a9, a8, 4
400eb3ec:	95cd81        	l32r	a8, 400d0b20 <_flash_cache_start+0xb08>
400eb3ef:	1b0c      	movi.n	a11, 1
400eb3f1:	08c8      	l32i.n	a12, a8, 0
400eb3f3:	1898      	l32i.n	a9, a8, 4
400eb3f5:	ac1b      	addi.n	a10, a12, 1
400eb3f7:	013ac7        	bltu	a10, a12, 400eb3fc <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x98>
400eb3fa:	0b0c      	movi.n	a11, 0
400eb3fc:	9b9a      	add.n	a9, a11, a9
400eb3fe:	08a9      	s32i.n	a10, a8, 0
400eb400:	1899      	s32i.n	a9, a8, 4
400eb402:	95c881        	l32r	a8, 400d0b24 <_flash_cache_start+0xb0c>
400eb405:	1b0c      	movi.n	a11, 1
400eb407:	08c8      	l32i.n	a12, a8, 0
400eb409:	1898      	l32i.n	a9, a8, 4
400eb40b:	ac1b      	addi.n	a10, a12, 1
400eb40d:	013ac7        	bltu	a10, a12, 400eb412 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xae>
400eb410:	0b0c      	movi.n	a11, 0
400eb412:	9b9a      	add.n	a9, a11, a9
400eb414:	08a9      	s32i.n	a10, a8, 0
400eb416:	1899      	s32i.n	a9, a8, 4
400eb418:	95c481        	l32r	a8, 400d0b28 <_flash_cache_start+0xb10>
400eb41b:	1b0c      	movi.n	a11, 1
400eb41d:	08c8      	l32i.n	a12, a8, 0
400eb41f:	1898      	l32i.n	a9, a8, 4
400eb421:	ac1b      	addi.n	a10, a12, 1
400eb423:	013ac7        	bltu	a10, a12, 400eb428 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xc4>
400eb426:	0b0c      	movi.n	a11, 0
400eb428:	9b9a      	add.n	a9, a11, a9
400eb42a:	08a9      	s32i.n	a10, a8, 0
400eb42c:	1899      	s32i.n	a9, a8, 4
400eb42e:	95bf81        	l32r	a8, 400d0b2c <_flash_cache_start+0xb14>
400eb431:	1b0c      	movi.n	a11, 1
400eb433:	08c8      	l32i.n	a12, a8, 0
400eb435:	1898      	l32i.n	a9, a8, 4
400eb437:	ac1b      	addi.n	a10, a12, 1
400eb439:	013ac7        	bltu	a10, a12, 400eb43e <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xda>
400eb43c:	0b0c      	movi.n	a11, 0
400eb43e:	9b9a      	add.n	a9, a11, a9
400eb440:	08a9      	s32i.n	a10, a8, 0
400eb442:	1899      	s32i.n	a9, a8, 4
400eb444:	95bb81        	l32r	a8, 400d0b30 <_flash_cache_start+0xb18>
400eb447:	1b0c      	movi.n	a11, 1
400eb449:	08c8      	l32i.n	a12, a8, 0
400eb44b:	1898      	l32i.n	a9, a8, 4
400eb44d:	ac1b      	addi.n	a10, a12, 1
400eb44f:	013ac7        	bltu	a10, a12, 400eb454 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0xf0>
400eb452:	0b0c      	movi.n	a11, 0
400eb454:	9b9a      	add.n	a9, a11, a9
400eb456:	08a9      	s32i.n	a10, a8, 0
400eb458:	1899      	s32i.n	a9, a8, 4
400eb45a:	95b681        	l32r	a8, 400d0b34 <_flash_cache_start+0xb1c>
400eb45d:	1b0c      	movi.n	a11, 1
400eb45f:	08c8      	l32i.n	a12, a8, 0
400eb461:	1898      	l32i.n	a9, a8, 4
400eb463:	ac1b      	addi.n	a10, a12, 1
400eb465:	013ac7        	bltu	a10, a12, 400eb46a <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj+0x106>
400eb468:	0b0c      	movi.n	a11, 0
400eb46a:	9b9a      	add.n	a9, a11, a9
400eb46c:	08a9      	s32i.n	a10, a8, 0
400eb46e:	1899      	s32i.n	a9, a8, 4
400eb470:	f01d      	retw.n
	...

400eb474 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
400eb474:	004136        	entry	a1, 32
400eb477:	95b081        	l32r	a8, 400d0b38 <_flash_cache_start+0xb20>
400eb47a:	1b0c      	movi.n	a11, 1
400eb47c:	08c8      	l32i.n	a12, a8, 0
400eb47e:	1898      	l32i.n	a9, a8, 4
400eb480:	01cca2        	addi	a10, a12, 1
400eb483:	013ac7        	bltu	a10, a12, 400eb488 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x14>
400eb486:	0b0c      	movi.n	a11, 0
400eb488:	9b9a      	add.n	a9, a11, a9
400eb48a:	08a9      	s32i.n	a10, a8, 0
400eb48c:	1899      	s32i.n	a9, a8, 4
400eb48e:	95ab81        	l32r	a8, 400d0b3c <_flash_cache_start+0xb24>
400eb491:	1b0c      	movi.n	a11, 1
400eb493:	08c8      	l32i.n	a12, a8, 0
400eb495:	1898      	l32i.n	a9, a8, 4
400eb497:	ac1b      	addi.n	a10, a12, 1
400eb499:	013ac7        	bltu	a10, a12, 400eb49e <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x2a>
400eb49c:	0b0c      	movi.n	a11, 0
400eb49e:	9b9a      	add.n	a9, a11, a9
400eb4a0:	08a9      	s32i.n	a10, a8, 0
400eb4a2:	1899      	s32i.n	a9, a8, 4
400eb4a4:	95a781        	l32r	a8, 400d0b40 <_flash_cache_start+0xb28>
400eb4a7:	1b0c      	movi.n	a11, 1
400eb4a9:	08c8      	l32i.n	a12, a8, 0
400eb4ab:	1898      	l32i.n	a9, a8, 4
400eb4ad:	ac1b      	addi.n	a10, a12, 1
400eb4af:	013ac7        	bltu	a10, a12, 400eb4b4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x40>
400eb4b2:	0b0c      	movi.n	a11, 0
400eb4b4:	9b9a      	add.n	a9, a11, a9
400eb4b6:	08a9      	s32i.n	a10, a8, 0
400eb4b8:	1899      	s32i.n	a9, a8, 4
400eb4ba:	95a281        	l32r	a8, 400d0b44 <_flash_cache_start+0xb2c>
400eb4bd:	1b0c      	movi.n	a11, 1
400eb4bf:	08c8      	l32i.n	a12, a8, 0
400eb4c1:	1898      	l32i.n	a9, a8, 4
400eb4c3:	ac1b      	addi.n	a10, a12, 1
400eb4c5:	013ac7        	bltu	a10, a12, 400eb4ca <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x56>
400eb4c8:	0b0c      	movi.n	a11, 0
400eb4ca:	9b9a      	add.n	a9, a11, a9
400eb4cc:	08a9      	s32i.n	a10, a8, 0
400eb4ce:	1899      	s32i.n	a9, a8, 4
400eb4d0:	959e81        	l32r	a8, 400d0b48 <_flash_cache_start+0xb30>
400eb4d3:	1b0c      	movi.n	a11, 1
400eb4d5:	08c8      	l32i.n	a12, a8, 0
400eb4d7:	1898      	l32i.n	a9, a8, 4
400eb4d9:	ac1b      	addi.n	a10, a12, 1
400eb4db:	013ac7        	bltu	a10, a12, 400eb4e0 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>
400eb4de:	0b0c      	movi.n	a11, 0
400eb4e0:	9b9a      	add.n	a9, a11, a9
400eb4e2:	08a9      	s32i.n	a10, a8, 0
400eb4e4:	1899      	s32i.n	a9, a8, 4
400eb4e6:	959981        	l32r	a8, 400d0b4c <_flash_cache_start+0xb34>
400eb4e9:	1b0c      	movi.n	a11, 1
400eb4eb:	08c8      	l32i.n	a12, a8, 0
400eb4ed:	1898      	l32i.n	a9, a8, 4
400eb4ef:	ac1b      	addi.n	a10, a12, 1
400eb4f1:	013ac7        	bltu	a10, a12, 400eb4f6 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x82>
400eb4f4:	0b0c      	movi.n	a11, 0
400eb4f6:	9b9a      	add.n	a9, a11, a9
400eb4f8:	08a9      	s32i.n	a10, a8, 0
400eb4fa:	1899      	s32i.n	a9, a8, 4
400eb4fc:	959581        	l32r	a8, 400d0b50 <_flash_cache_start+0xb38>
400eb4ff:	1b0c      	movi.n	a11, 1
400eb501:	08c8      	l32i.n	a12, a8, 0
400eb503:	1898      	l32i.n	a9, a8, 4
400eb505:	ac1b      	addi.n	a10, a12, 1
400eb507:	013ac7        	bltu	a10, a12, 400eb50c <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x98>
400eb50a:	0b0c      	movi.n	a11, 0
400eb50c:	9b9a      	add.n	a9, a11, a9
400eb50e:	08a9      	s32i.n	a10, a8, 0
400eb510:	1899      	s32i.n	a9, a8, 4
400eb512:	959081        	l32r	a8, 400d0b54 <_flash_cache_start+0xb3c>
400eb515:	1b0c      	movi.n	a11, 1
400eb517:	08c8      	l32i.n	a12, a8, 0
400eb519:	1898      	l32i.n	a9, a8, 4
400eb51b:	ac1b      	addi.n	a10, a12, 1
400eb51d:	013ac7        	bltu	a10, a12, 400eb522 <_GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0xae>
400eb520:	0b0c      	movi.n	a11, 0
400eb522:	9b9a      	add.n	a9, a11, a9
400eb524:	08a9      	s32i.n	a10, a8, 0
400eb526:	1899      	s32i.n	a9, a8, 4
400eb528:	f01d      	retw.n
	...

400eb52c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj>:
400eb52c:	004136        	entry	a1, 32
400eb52f:	958a81        	l32r	a8, 400d0b58 <_flash_cache_start+0xb40>
400eb532:	1b0c      	movi.n	a11, 1
400eb534:	08c8      	l32i.n	a12, a8, 0
400eb536:	1898      	l32i.n	a9, a8, 4
400eb538:	01cca2        	addi	a10, a12, 1
400eb53b:	013ac7        	bltu	a10, a12, 400eb540 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x14>
400eb53e:	0b0c      	movi.n	a11, 0
400eb540:	9b9a      	add.n	a9, a11, a9
400eb542:	08a9      	s32i.n	a10, a8, 0
400eb544:	1899      	s32i.n	a9, a8, 4
400eb546:	958581        	l32r	a8, 400d0b5c <_flash_cache_start+0xb44>
400eb549:	1b0c      	movi.n	a11, 1
400eb54b:	08c8      	l32i.n	a12, a8, 0
400eb54d:	1898      	l32i.n	a9, a8, 4
400eb54f:	ac1b      	addi.n	a10, a12, 1
400eb551:	013ac7        	bltu	a10, a12, 400eb556 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x2a>
400eb554:	0b0c      	movi.n	a11, 0
400eb556:	9b9a      	add.n	a9, a11, a9
400eb558:	08a9      	s32i.n	a10, a8, 0
400eb55a:	1899      	s32i.n	a9, a8, 4
400eb55c:	958181        	l32r	a8, 400d0b60 <_flash_cache_start+0xb48>
400eb55f:	1b0c      	movi.n	a11, 1
400eb561:	08c8      	l32i.n	a12, a8, 0
400eb563:	1898      	l32i.n	a9, a8, 4
400eb565:	ac1b      	addi.n	a10, a12, 1
400eb567:	013ac7        	bltu	a10, a12, 400eb56c <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x40>
400eb56a:	0b0c      	movi.n	a11, 0
400eb56c:	9b9a      	add.n	a9, a11, a9
400eb56e:	08a9      	s32i.n	a10, a8, 0
400eb570:	1899      	s32i.n	a9, a8, 4
400eb572:	957c81        	l32r	a8, 400d0b64 <_flash_cache_start+0xb4c>
400eb575:	1b0c      	movi.n	a11, 1
400eb577:	08c8      	l32i.n	a12, a8, 0
400eb579:	1898      	l32i.n	a9, a8, 4
400eb57b:	ac1b      	addi.n	a10, a12, 1
400eb57d:	013ac7        	bltu	a10, a12, 400eb582 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x56>
400eb580:	0b0c      	movi.n	a11, 0
400eb582:	9b9a      	add.n	a9, a11, a9
400eb584:	08a9      	s32i.n	a10, a8, 0
400eb586:	1899      	s32i.n	a9, a8, 4
400eb588:	957881        	l32r	a8, 400d0b68 <_flash_cache_start+0xb50>
400eb58b:	1b0c      	movi.n	a11, 1
400eb58d:	08c8      	l32i.n	a12, a8, 0
400eb58f:	1898      	l32i.n	a9, a8, 4
400eb591:	ac1b      	addi.n	a10, a12, 1
400eb593:	013ac7        	bltu	a10, a12, 400eb598 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x6c>
400eb596:	0b0c      	movi.n	a11, 0
400eb598:	9b9a      	add.n	a9, a11, a9
400eb59a:	08a9      	s32i.n	a10, a8, 0
400eb59c:	1899      	s32i.n	a9, a8, 4
400eb59e:	957381        	l32r	a8, 400d0b6c <_flash_cache_start+0xb54>
400eb5a1:	1b0c      	movi.n	a11, 1
400eb5a3:	08c8      	l32i.n	a12, a8, 0
400eb5a5:	1898      	l32i.n	a9, a8, 4
400eb5a7:	ac1b      	addi.n	a10, a12, 1
400eb5a9:	013ac7        	bltu	a10, a12, 400eb5ae <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x82>
400eb5ac:	0b0c      	movi.n	a11, 0
400eb5ae:	9b9a      	add.n	a9, a11, a9
400eb5b0:	08a9      	s32i.n	a10, a8, 0
400eb5b2:	1899      	s32i.n	a9, a8, 4
400eb5b4:	956f81        	l32r	a8, 400d0b70 <_flash_cache_start+0xb58>
400eb5b7:	1b0c      	movi.n	a11, 1
400eb5b9:	08c8      	l32i.n	a12, a8, 0
400eb5bb:	1898      	l32i.n	a9, a8, 4
400eb5bd:	ac1b      	addi.n	a10, a12, 1
400eb5bf:	013ac7        	bltu	a10, a12, 400eb5c4 <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0x98>
400eb5c2:	0b0c      	movi.n	a11, 0
400eb5c4:	9b9a      	add.n	a9, a11, a9
400eb5c6:	08a9      	s32i.n	a10, a8, 0
400eb5c8:	1899      	s32i.n	a9, a8, 4
400eb5ca:	956a81        	l32r	a8, 400d0b74 <_flash_cache_start+0xb5c>
400eb5cd:	1b0c      	movi.n	a11, 1
400eb5cf:	08c8      	l32i.n	a12, a8, 0
400eb5d1:	1898      	l32i.n	a9, a8, 4
400eb5d3:	ac1b      	addi.n	a10, a12, 1
400eb5d5:	013ac7        	bltu	a10, a12, 400eb5da <_GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj+0xae>
400eb5d8:	0b0c      	movi.n	a11, 0
400eb5da:	9b9a      	add.n	a9, a11, a9
400eb5dc:	08a9      	s32i.n	a10, a8, 0
400eb5de:	1899      	s32i.n	a9, a8, 4
400eb5e0:	f01d      	retw.n
	...

400eb5e4 <loopTask(void*)>:
#if CONFIG_AUTOSTART_ARDUINO

bool loopTaskWDTEnabled;

void loopTask(void *pvParameters)
{
400eb5e4:	006136        	entry	a1, 48
400eb5e7:	207110        	or	a7, a1, a1
400eb5ea:	0cc732        	addi	a3, a7, 12
400eb5ed:	0329      	s32i.n	a2, a3, 0
    setup();
400eb5ef:	e56c25        	call8	400d0cb0 <setup()>
    for(;;) {
        if(loopTaskWDTEnabled){
400eb5f2:	956121        	l32r	a2, 400d0b78 <_flash_cache_start+0xb60>
400eb5f5:	000222        	l8ui	a2, a2, 0
400eb5f8:	128c      	beqz.n	a2, 400eb5fd <loopTask(void*)+0x19>
            esp_task_wdt_reset();
400eb5fa:	eb8be5        	call8	400d6eb8 <esp_task_wdt_reset>
        }
        loop();
400eb5fd:	00ae65        	call8	400ec0e4 <loop()>
    for(;;) {
400eb600:	fffb86        	j	400eb5f2 <loopTask(void*)+0xe>
	...

400eb604 <app_main>:
    }
}

extern "C" void app_main()
{
400eb604:	006136        	entry	a1, 48
400eb607:	207110        	or	a7, a1, a1
    loopTaskWDTEnabled = false;
400eb60a:	955b21        	l32r	a2, 400d0b78 <_flash_cache_start+0xb60>
400eb60d:	00a032        	movi	a3, 0
400eb610:	004232        	s8i	a3, a2, 0
    initArduino();
400eb613:	0012a5        	call8	400eb73c <initArduino>
    xTaskCreateUniversal(loopTask, "loopTask", 8192, NULL, 1, &loopTaskHandle, CONFIG_ARDUINO_RUNNING_CORE);
400eb616:	955951        	l32r	a5, 400d0b7c <_flash_cache_start+0xb64>
400eb619:	93cb41        	l32r	a4, 400d0548 <_flash_cache_start+0x530>
400eb61c:	955931        	l32r	a3, 400d0b80 <_flash_cache_start+0xb68>
400eb61f:	955921        	l32r	a2, 400d0b84 <_flash_cache_start+0xb6c>
400eb622:	01a062        	movi	a6, 1
400eb625:	0169      	s32i.n	a6, a1, 0
400eb627:	05fd      	mov.n	a15, a5
400eb629:	1e0c      	movi.n	a14, 1
400eb62b:	0d0c      	movi.n	a13, 0
400eb62d:	04cd      	mov.n	a12, a4
400eb62f:	03bd      	mov.n	a11, a3
400eb631:	02ad      	mov.n	a10, a2
400eb633:	000825        	call8	400eb6b4 <xTaskCreateUniversal>
}
400eb636:	f03d      	nop.n
400eb638:	f01d      	retw.n
	...

400eb63c <__static_initialization_and_destruction_0(int, int)>:
400eb63c:	006136        	entry	a1, 48
400eb63f:	207110        	or	a7, a1, a1
400eb642:	0cc742        	addi	a4, a7, 12
400eb645:	006422        	s32i	a2, a4, 0
400eb648:	278b      	addi.n	a2, a7, 8
400eb64a:	0239      	s32i.n	a3, a2, 0
400eb64c:	27cb      	addi.n	a2, a7, 12
400eb64e:	0228      	l32i.n	a2, a2, 0
400eb650:	191266        	bnei	a2, 1, 400eb66d <__static_initialization_and_destruction_0(int, int)+0x31>
400eb653:	278b      	addi.n	a2, a7, 8
400eb655:	0238      	l32i.n	a3, a2, 0
400eb657:	928821        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400eb65a:	0f9327        	bne	a3, a2, 400eb66d <__static_initialization_and_destruction_0(int, int)+0x31>
400eb65d:	954a21        	l32r	a2, 400d0b88 <_flash_cache_start+0xb70>
400eb660:	0e0c      	movi.n	a14, 0
400eb662:	0d0c      	movi.n	a13, 0
400eb664:	0c0c      	movi.n	a12, 0
400eb666:	0b0c      	movi.n	a11, 0
400eb668:	02ad      	mov.n	a10, a2
400eb66a:	e857a5        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400eb66d:	0cc722        	addi	a2, a7, 12
400eb670:	002222        	l32i	a2, a2, 0
400eb673:	011256        	bnez	a2, 400eb688 <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb676:	278b      	addi.n	a2, a7, 8
400eb678:	0238      	l32i.n	a3, a2, 0
400eb67a:	927f21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400eb67d:	079327        	bne	a3, a2, 400eb688 <__static_initialization_and_destruction_0(int, int)+0x4c>
400eb680:	954221        	l32r	a2, 400d0b88 <_flash_cache_start+0xb70>
400eb683:	02ad      	mov.n	a10, a2
400eb685:	e55e25        	call8	400d0c68 <IPAddress::~IPAddress()>
400eb688:	f03d      	nop.n
400eb68a:	f01d      	retw.n

400eb68c <_GLOBAL__sub_I_loopTaskHandle>:
400eb68c:	004136        	entry	a1, 32
400eb68f:	207110        	or	a7, a1, a1
400eb692:	927921        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400eb695:	20b220        	or	a11, a2, a2
400eb698:	01a0a2        	movi	a10, 1
400eb69b:	fffa25        	call8	400eb63c <__static_initialization_and_destruction_0(int, int)>
400eb69e:	f01d      	retw.n

400eb6a0 <_GLOBAL__sub_D_loopTaskHandle>:
400eb6a0:	004136        	entry	a1, 32
400eb6a3:	207110        	or	a7, a1, a1
400eb6a6:	927421        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400eb6a9:	20b220        	or	a11, a2, a2
400eb6ac:	00a0a2        	movi	a10, 0
400eb6af:	fff8e5        	call8	400eb63c <__static_initialization_and_destruction_0(int, int)>
400eb6b2:	f01d      	retw.n

400eb6b4 <xTaskCreateUniversal>:
                        const BaseType_t xCoreID ){
400eb6b4:	00a136        	entry	a1, 80
400eb6b7:	208770        	or	a8, a7, a7
400eb6ba:	207110        	or	a7, a1, a1
400eb6bd:	2cc792        	addi	a9, a7, 44
400eb6c0:	006922        	s32i	a2, a9, 0
400eb6c3:	28c722        	addi	a2, a7, 40
400eb6c6:	0239      	s32i.n	a3, a2, 0
400eb6c8:	24c722        	addi	a2, a7, 36
400eb6cb:	0249      	s32i.n	a4, a2, 0
400eb6cd:	20c722        	addi	a2, a7, 32
400eb6d0:	0259      	s32i.n	a5, a2, 0
400eb6d2:	1cc722        	addi	a2, a7, 28
400eb6d5:	0269      	s32i.n	a6, a2, 0
400eb6d7:	18c722        	addi	a2, a7, 24
400eb6da:	0289      	s32i.n	a8, a2, 0
    if(xCoreID >= 0 && xCoreID < 2) {
400eb6dc:	142722        	l32i	a2, a7, 80
400eb6df:	031296        	bltz	a2, 400eb714 <xTaskCreateUniversal+0x60>
400eb6e2:	142722        	l32i	a2, a7, 80
400eb6e5:	2b22e6        	bgei	a2, 2, 400eb714 <xTaskCreateUniversal+0x60>
        return xTaskCreatePinnedToCore(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, xCoreID);
400eb6e8:	18c782        	addi	a8, a7, 24
400eb6eb:	1cc762        	addi	a6, a7, 28
400eb6ee:	20c752        	addi	a5, a7, 32
400eb6f1:	24c742        	addi	a4, a7, 36
400eb6f4:	28c732        	addi	a3, a7, 40
400eb6f7:	2cc722        	addi	a2, a7, 44
400eb6fa:	142792        	l32i	a9, a7, 80
400eb6fd:	0199      	s32i.n	a9, a1, 0
400eb6ff:	08f8      	l32i.n	a15, a8, 0
400eb701:	06e8      	l32i.n	a14, a6, 0
400eb703:	05d8      	l32i.n	a13, a5, 0
400eb705:	04c8      	l32i.n	a12, a4, 0
400eb707:	03b8      	l32i.n	a11, a3, 0
400eb709:	02a8      	l32i.n	a10, a2, 0
400eb70b:	9d72a5        	call8	40088e34 <xTaskCreatePinnedToCore>
400eb70e:	0a2d      	mov.n	a2, a10
400eb710:	000986        	j	400eb73a <xTaskCreateUniversal+0x86>
400eb713:	c78200        	lsi	f0, a2, 0x31c
    return xTaskCreate(pxTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask);
400eb716:	6218      	l32i.n	a1, a2, 24
400eb718:	521cc7        	beq	a12, a12, 400eb76e <initArduino+0x32>
400eb71b:	4220c7        	blt	a0, a12, 400eb761 <initArduino+0x25>
400eb71e:	3224c7        	blt	a4, a12, 400eb754 <initArduino+0x18>
400eb721:	2228c7        	blt	a8, a12, 400eb747 <initArduino+0xb>
400eb724:	f22cc7        	blt	a12, a12, 400eb71a <xTaskCreateUniversal+0x66>
400eb727:	0028      	l32i.n	a2, a0, 0
400eb729:	0026e2        	l32i	a14, a6, 0
400eb72c:	0025d2        	l32i	a13, a5, 0
400eb72f:	04c8      	l32i.n	a12, a4, 0
400eb731:	03b8      	l32i.n	a11, a3, 0
400eb733:	02a8      	l32i.n	a10, a2, 0
400eb735:	9b50e5        	call8	40086c44 <xTaskCreate>
400eb738:	0a2d      	mov.n	a2, a10
}
400eb73a:	f01d      	retw.n

400eb73c <initArduino>:
{
400eb73c:	006136        	entry	a1, 48
400eb73f:	017d      	mov.n	a7, a1
    setCpuFrequencyMhz(F_CPU/1000000);
400eb741:	f0a0a2        	movi	a10, 240
400eb744:	003265        	call8	400eba6c <setCpuFrequencyMhz>
    esp_log_level_set("*", CONFIG_LOG_DEFAULT_LEVEL);
400eb747:	951121        	l32r	a2, 400d0b8c <_flash_cache_start+0xb74>
400eb74a:	1b0c      	movi.n	a11, 1
400eb74c:	02ad      	mov.n	a10, a2
400eb74e:	ef1fa5        	call8	400da948 <esp_log_level_set>
    esp_err_t err = nvs_flash_init();
400eb751:	ec04e5        	call8	400d77a0 <nvs_flash_init>
400eb754:	0a3d      	mov.n	a3, a10
400eb756:	278b      	addi.n	a2, a7, 8
400eb758:	0239      	s32i.n	a3, a2, 0
    if(err == ESP_ERR_NVS_NO_FREE_PAGES){
400eb75a:	278b      	addi.n	a2, a7, 8
400eb75c:	0238      	l32i.n	a3, a2, 0
400eb75e:	934921        	l32r	a2, 400d0484 <_flash_cache_start+0x46c>
400eb761:	5d9327        	bne	a3, a2, 400eb7c2 <initArduino+0x86>
        const esp_partition_t* partition = esp_partition_find_first(ESP_PARTITION_TYPE_DATA, ESP_PARTITION_SUBTYPE_DATA_NVS, NULL);
400eb764:	0c0c      	movi.n	a12, 0
400eb766:	2b0c      	movi.n	a11, 2
400eb768:	1a0c      	movi.n	a10, 1
400eb76a:	fec1e5        	call8	400ea388 <esp_partition_find_first>
400eb76d:	0a3d      	mov.n	a3, a10
400eb76f:	27cb      	addi.n	a2, a7, 12
400eb771:	0239      	s32i.n	a3, a2, 0
        if (partition != NULL) {
400eb773:	27cb      	addi.n	a2, a7, 12
400eb775:	0228      	l32i.n	a2, a2, 0
400eb777:	047216        	beqz	a2, 400eb7c2 <initArduino+0x86>
            err = esp_partition_erase_range(partition, 0, partition->size);
400eb77a:	27cb      	addi.n	a2, a7, 12
400eb77c:	0228      	l32i.n	a2, a2, 0
400eb77e:	3238      	l32i.n	a3, a2, 12
400eb780:	27cb      	addi.n	a2, a7, 12
400eb782:	03cd      	mov.n	a12, a3
400eb784:	0b0c      	movi.n	a11, 0
400eb786:	02a8      	l32i.n	a10, a2, 0
400eb788:	fec225        	call8	400ea3ac <esp_partition_erase_range>
400eb78b:	0a3d      	mov.n	a3, a10
400eb78d:	278b      	addi.n	a2, a7, 8
400eb78f:	0239      	s32i.n	a3, a2, 0
            if(!err){
400eb791:	278b      	addi.n	a2, a7, 8
400eb793:	0228      	l32i.n	a2, a2, 0
400eb795:	c2cc      	bnez.n	a2, 400eb7a5 <initArduino+0x69>
                err = nvs_flash_init();
400eb797:	ec00a5        	call8	400d77a0 <nvs_flash_init>
400eb79a:	0a3d      	mov.n	a3, a10
400eb79c:	278b      	addi.n	a2, a7, 8
400eb79e:	0239      	s32i.n	a3, a2, 0
400eb7a0:	000786        	j	400eb7c2 <initArduino+0x86>
400eb7a3:	210000        	srai	a0, a0, 0
                log_e("Failed to format the broken NVS partition!");
400eb7a6:	94fa      	add.n	a9, a4, a15
400eb7a8:	20a220        	or	a10, a2, a2
400eb7ab:	9b5865        	call8	40086d30 <pathToFileName>
400eb7ae:	0a3d      	mov.n	a3, a10
400eb7b0:	94f941        	l32r	a4, 400d0b94 <_flash_cache_start+0xb7c>
400eb7b3:	94f921        	l32r	a2, 400d0b98 <_flash_cache_start+0xb80>
400eb7b6:	04dd      	mov.n	a13, a4
400eb7b8:	d3a0c2        	movi	a12, 211
400eb7bb:	03bd      	mov.n	a11, a3
400eb7bd:	02ad      	mov.n	a10, a2
400eb7bf:	0004e5        	call8	400eb80c <log_printf>
    if(err) {
400eb7c2:	278b      	addi.n	a2, a7, 8
400eb7c4:	0228      	l32i.n	a2, a2, 0
400eb7c6:	e29c      	beqz.n	a2, 400eb7e8 <initArduino+0xac>
        log_e("Failed to initialize NVS! Error: %u", err);
400eb7c8:	94f221        	l32r	a2, 400d0b90 <_flash_cache_start+0xb78>
400eb7cb:	02ad      	mov.n	a10, a2
400eb7cd:	9b5625        	call8	40086d30 <pathToFileName>
400eb7d0:	0a3d      	mov.n	a3, a10
400eb7d2:	578b      	addi.n	a5, a7, 8
400eb7d4:	94f041        	l32r	a4, 400d0b94 <_flash_cache_start+0xb7c>
400eb7d7:	94f121        	l32r	a2, 400d0b9c <_flash_cache_start+0xb84>
400eb7da:	05e8      	l32i.n	a14, a5, 0
400eb7dc:	04dd      	mov.n	a13, a4
400eb7de:	d8a0c2        	movi	a12, 216
400eb7e1:	03bd      	mov.n	a11, a3
400eb7e3:	02ad      	mov.n	a10, a2
400eb7e5:	000265        	call8	400eb80c <log_printf>
    if(!btInUse()){
400eb7e8:	010ea5        	call8	400ec8d4 <btInUse>
400eb7eb:	202aa0        	or	a2, a10, a10
400eb7ee:	203220        	or	a3, a2, a2
400eb7f1:	120c      	movi.n	a2, 1
400eb7f3:	302320        	xor	a2, a3, a2
400eb7f6:	742020        	extui	a2, a2, 0, 8
400eb7f9:	328c      	beqz.n	a2, 400eb800 <initArduino+0xc4>
        esp_bt_controller_mem_release(ESP_BT_MODE_BTDM);
400eb7fb:	3a0c      	movi.n	a10, 3
400eb7fd:	007a65        	call8	400ebfa4 <esp_bt_controller_mem_release>
    init();
400eb800:	010c65        	call8	400ec8c8 <init>
    initVariant();
400eb803:	010ba5        	call8	400ec8bc <initVariant>
}
400eb806:	f03d      	nop.n
400eb808:	f01d      	retw.n
	...

400eb80c <log_printf>:
{
    return s_uart_debug_nr;
}

int log_printf(const char *format, ...)
{
400eb80c:	00e136        	entry	a1, 112
    static char loc_buf[64];
    char * temp = loc_buf;
    int len;
    va_list arg;
    va_list copy;
    va_start(arg, format);
400eb80f:	079d      	mov.n	a9, a7
400eb811:	017d      	mov.n	a7, a1
400eb813:	874b      	addi.n	a8, a7, 4
400eb815:	0839      	s32i.n	a3, a8, 0
400eb817:	1849      	s32i.n	a4, a8, 4
400eb819:	2859      	s32i.n	a5, a8, 8
400eb81b:	3869      	s32i.n	a6, a8, 12
400eb81d:	4899      	s32i.n	a9, a8, 16
{
400eb81f:	2cc732        	addi	a3, a7, 44
400eb822:	0329      	s32i.n	a2, a3, 0
    if(s_uart_debug_nr < 0){
400eb824:	94df21        	l32r	a2, 400d0ba0 <_flash_cache_start+0xb88>
400eb827:	0228      	l32i.n	a2, a2, 0
400eb829:	0042d6        	bgez	a2, 400eb831 <log_printf+0x25>
        return 0;
400eb82c:	020c      	movi.n	a2, 0
400eb82e:	004ec6        	j	400eb96d <log_printf+0x161>
    char * temp = loc_buf;
400eb831:	30c722        	addi	a2, a7, 48
400eb834:	94dc31        	l32r	a3, 400d0ba4 <_flash_cache_start+0xb8c>
400eb837:	0239      	s32i.n	a3, a2, 0
    va_start(arg, format);
400eb839:	38c722        	addi	a2, a7, 56
400eb83c:	073d      	mov.n	a3, a7
400eb83e:	1239      	s32i.n	a3, a2, 4
400eb840:	38c722        	addi	a2, a7, 56
400eb843:	50c732        	addi	a3, a7, 80
400eb846:	0239      	s32i.n	a3, a2, 0
400eb848:	38c722        	addi	a2, a7, 56
400eb84b:	430c      	movi.n	a3, 4
400eb84d:	2239      	s32i.n	a3, a2, 8
    va_copy(copy, arg);
400eb84f:	44c722        	addi	a2, a7, 68
400eb852:	38c732        	addi	a3, a7, 56
400eb855:	c40c      	movi.n	a4, 12
400eb857:	04cd      	mov.n	a12, a4
400eb859:	03bd      	mov.n	a11, a3
400eb85b:	20a220        	or	a10, a2, a2
400eb85e:	920e81        	l32r	a8, 400d0098 <_flash_cache_start+0x80>
400eb861:	0008e0        	callx8	a8
    len = vsnprintf(NULL, 0, format, arg);
400eb864:	34c732        	addi	a3, a7, 52
400eb867:	38c722        	addi	a2, a7, 56
400eb86a:	2cc742        	addi	a4, a7, 44
400eb86d:	02d8      	l32i.n	a13, a2, 0
400eb86f:	12e8      	l32i.n	a14, a2, 4
400eb871:	22f8      	l32i.n	a15, a2, 8
400eb873:	04c8      	l32i.n	a12, a4, 0
400eb875:	0b0c      	movi.n	a11, 0
400eb877:	0a0c      	movi.n	a10, 0
400eb879:	f9e3e5        	call8	400e56b8 <vsnprintf>
400eb87c:	03a9      	s32i.n	a10, a3, 0
    va_end(copy);
    if(len >= sizeof(loc_buf)){
400eb87e:	34c722        	addi	a2, a7, 52
400eb881:	0228      	l32i.n	a2, a2, 0
400eb883:	25d2b6        	bltui	a2, 64, 400eb8ac <log_printf+0xa0>
        temp = (char*)malloc(len+1);
400eb886:	34c722        	addi	a2, a7, 52
400eb889:	0228      	l32i.n	a2, a2, 0
400eb88b:	221b      	addi.n	a2, a2, 1
400eb88d:	023d      	mov.n	a3, a2
400eb88f:	30c722        	addi	a2, a7, 48
400eb892:	03ad      	mov.n	a10, a3
400eb894:	921681        	l32r	a8, 400d00ec <_flash_cache_start+0xd4>
400eb897:	0008e0        	callx8	a8
400eb89a:	0a3d      	mov.n	a3, a10
400eb89c:	0239      	s32i.n	a3, a2, 0
        if(temp == NULL) {
400eb89e:	30c722        	addi	a2, a7, 48
400eb8a1:	0228      	l32i.n	a2, a2, 0
400eb8a3:	52cc      	bnez.n	a2, 400eb8ac <log_printf+0xa0>
            return 0;
400eb8a5:	020c      	movi.n	a2, 0
400eb8a7:	003086        	j	400eb96d <log_printf+0x161>
400eb8aa:	220000        	orb	b0, b0, b0
        }
    }
    vsnprintf(temp, len+1, format, arg);
400eb8ad:	2234c7        	bltu	a4, a12, 400eb8d3 <log_printf+0xc7>
400eb8b0:	1b0022        	l8ui	a2, a0, 27
400eb8b3:	024d22        	s8i	a2, a13, 2
400eb8b6:	38c722        	addi	a2, a7, 56
400eb8b9:	2cc752        	addi	a5, a7, 44
400eb8bc:	30c732        	addi	a3, a7, 48
400eb8bf:	02d8      	l32i.n	a13, a2, 0
400eb8c1:	12e8      	l32i.n	a14, a2, 4
400eb8c3:	22f8      	l32i.n	a15, a2, 8
400eb8c5:	05c8      	l32i.n	a12, a5, 0
400eb8c7:	04bd      	mov.n	a11, a4
400eb8c9:	03a8      	l32i.n	a10, a3, 0
400eb8cb:	f9dee5        	call8	400e56b8 <vsnprintf>
#if !CONFIG_DISABLE_HAL_LOCKS
    if(_uart_bus_array[s_uart_debug_nr].lock){
400eb8ce:	94b421        	l32r	a2, 400d0ba0 <_flash_cache_start+0xb88>
400eb8d1:	0238      	l32i.n	a3, a2, 0
400eb8d3:	94b541        	l32r	a4, 400d0ba8 <_flash_cache_start+0xb90>
400eb8d6:	032d      	mov.n	a2, a3
400eb8d8:	1122e0        	slli	a2, a2, 2
400eb8db:	223a      	add.n	a2, a2, a3
400eb8dd:	1122e0        	slli	a2, a2, 2
400eb8e0:	242a      	add.n	a2, a4, a2
400eb8e2:	224b      	addi.n	a2, a2, 4
400eb8e4:	0228      	l32i.n	a2, a2, 0
400eb8e6:	05b216        	beqz	a2, 400eb945 <log_printf+0x139>
        xSemaphoreTake(_uart_bus_array[s_uart_debug_nr].lock, portMAX_DELAY);
400eb8e9:	94ad21        	l32r	a2, 400d0ba0 <_flash_cache_start+0xb88>
400eb8ec:	0238      	l32i.n	a3, a2, 0
400eb8ee:	94ae41        	l32r	a4, 400d0ba8 <_flash_cache_start+0xb90>
400eb8f1:	032d      	mov.n	a2, a3
400eb8f3:	1122e0        	slli	a2, a2, 2
400eb8f6:	223a      	add.n	a2, a2, a3
400eb8f8:	1122e0        	slli	a2, a2, 2
400eb8fb:	242a      	add.n	a2, a4, a2
400eb8fd:	224b      	addi.n	a2, a2, 4
400eb8ff:	0228      	l32i.n	a2, a2, 0
400eb901:	0d0c      	movi.n	a13, 0
400eb903:	fc7c      	movi.n	a12, -1
400eb905:	0b0c      	movi.n	a11, 0
400eb907:	02ad      	mov.n	a10, a2
400eb909:	9c25a5        	call8	40087b64 <xQueueGenericReceive>
        ets_printf("%s", temp);
400eb90c:	30c732        	addi	a3, a7, 48
400eb90f:	94a721        	l32r	a2, 400d0bac <_flash_cache_start+0xb94>
400eb912:	03b8      	l32i.n	a11, a3, 0
400eb914:	02ad      	mov.n	a10, a2
400eb916:	924281        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400eb919:	0008e0        	callx8	a8
        xSemaphoreGive(_uart_bus_array[s_uart_debug_nr].lock);
400eb91c:	94a121        	l32r	a2, 400d0ba0 <_flash_cache_start+0xb88>
400eb91f:	0238      	l32i.n	a3, a2, 0
400eb921:	94a141        	l32r	a4, 400d0ba8 <_flash_cache_start+0xb90>
400eb924:	032d      	mov.n	a2, a3
400eb926:	1122e0        	slli	a2, a2, 2
400eb929:	223a      	add.n	a2, a2, a3
400eb92b:	1122e0        	slli	a2, a2, 2
400eb92e:	242a      	add.n	a2, a4, a2
400eb930:	224b      	addi.n	a2, a2, 4
400eb932:	0228      	l32i.n	a2, a2, 0
400eb934:	0d0c      	movi.n	a13, 0
400eb936:	0c0c      	movi.n	a12, 0
400eb938:	0b0c      	movi.n	a11, 0
400eb93a:	20a220        	or	a10, a2, a2
400eb93d:	9bea65        	call8	400877e4 <xQueueGenericSend>
400eb940:	000446        	j	400eb955 <log_printf+0x149>
400eb943:	320000        	orbc	b0, b0, b0
    } else {
        ets_printf("%s", temp);
400eb946:	2130c7        	bltu	a0, a12, 400eb96b <log_printf+0x15f>
400eb949:	9499      	s32i.n	a9, a4, 36
400eb94b:	03b8      	l32i.n	a11, a3, 0
400eb94d:	02ad      	mov.n	a10, a2
400eb94f:	923481        	l32r	a8, 400d0220 <_flash_cache_start+0x208>
400eb952:	0008e0        	callx8	a8
    }
#else
    ets_printf("%s", temp);
#endif
    va_end(arg);
    if(len >= sizeof(loc_buf)){
400eb955:	34c722        	addi	a2, a7, 52
400eb958:	0228      	l32i.n	a2, a2, 0
400eb95a:	0ad2b6        	bltui	a2, 64, 400eb968 <log_printf+0x15c>
        free(temp);
400eb95d:	30c722        	addi	a2, a7, 48
400eb960:	02a8      	l32i.n	a10, a2, 0
400eb962:	91cc81        	l32r	a8, 400d0094 <_flash_cache_start+0x7c>
400eb965:	0008e0        	callx8	a8
    }
    return len;
400eb968:	34c722        	addi	a2, a7, 52
400eb96b:	0228      	l32i.n	a2, a2, 0
}
400eb96d:	f01d      	retw.n
	...

400eb970 <initApbChangeCallback>:
const uint32_t MHZ = 1000000;

static apb_change_t * apb_change_callbacks = NULL;
static xSemaphoreHandle apb_change_lock = NULL;

static void initApbChangeCallback(){
400eb970:	004136        	entry	a1, 32
400eb973:	017d      	mov.n	a7, a1
    static volatile bool initialized = false;
    if(!initialized){
400eb975:	948e21        	l32r	a2, 400d0bb0 <_flash_cache_start+0xb98>
400eb978:	0020c0        	memw
400eb97b:	000222        	l8ui	a2, a2, 0
400eb97e:	743020        	extui	a3, a2, 0, 8
400eb981:	120c      	movi.n	a2, 1
400eb983:	302320        	xor	a2, a3, a2
400eb986:	742020        	extui	a2, a2, 0, 8
400eb989:	72ac      	beqz.n	a2, 400eb9b4 <initApbChangeCallback+0x44>
        initialized = true;
400eb98b:	948921        	l32r	a2, 400d0bb0 <_flash_cache_start+0xb98>
400eb98e:	130c      	movi.n	a3, 1
400eb990:	0020c0        	memw
400eb993:	004232        	s8i	a3, a2, 0
        apb_change_lock = xSemaphoreCreateMutex();
400eb996:	1a0c      	movi.n	a10, 1
400eb998:	9bfd25        	call8	4008796c <xQueueCreateMutex>
400eb99b:	0a3d      	mov.n	a3, a10
400eb99d:	948521        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb9a0:	0239      	s32i.n	a3, a2, 0
        if(!apb_change_lock){
400eb9a2:	948421        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb9a5:	0228      	l32i.n	a2, a2, 0
400eb9a7:	92cc      	bnez.n	a2, 400eb9b4 <initApbChangeCallback+0x44>
            initialized = false;
400eb9a9:	948121        	l32r	a2, 400d0bb0 <_flash_cache_start+0xb98>
400eb9ac:	030c      	movi.n	a3, 0
400eb9ae:	0020c0        	memw
400eb9b1:	004232        	s8i	a3, a2, 0
        }
    }
}
400eb9b4:	f03d      	nop.n
400eb9b6:	f01d      	retw.n

400eb9b8 <triggerApbChangeCallback>:

static void triggerApbChangeCallback(apb_change_ev_t ev_type, uint32_t old_apb, uint32_t new_apb){
400eb9b8:	008136        	entry	a1, 64
400eb9bb:	017d      	mov.n	a7, a1
400eb9bd:	57cb      	addi.n	a5, a7, 12
400eb9bf:	0529      	s32i.n	a2, a5, 0
400eb9c1:	278b      	addi.n	a2, a7, 8
400eb9c3:	0239      	s32i.n	a3, a2, 0
400eb9c5:	274b      	addi.n	a2, a7, 4
400eb9c7:	0249      	s32i.n	a4, a2, 0
    initApbChangeCallback();
400eb9c9:	fffa65        	call8	400eb970 <initApbChangeCallback>
    xSemaphoreTake(apb_change_lock, portMAX_DELAY);
400eb9cc:	947a21        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eb9cf:	0228      	l32i.n	a2, a2, 0
400eb9d1:	0d0c      	movi.n	a13, 0
400eb9d3:	fc7c      	movi.n	a12, -1
400eb9d5:	0b0c      	movi.n	a11, 0
400eb9d7:	02ad      	mov.n	a10, a2
400eb9d9:	9c18a5        	call8	40087b64 <xQueueGenericReceive>
    apb_change_t * r = apb_change_callbacks;
400eb9dc:	1cc722        	addi	a2, a7, 28
400eb9df:	947631        	l32r	a3, 400d0bb8 <_flash_cache_start+0xba0>
400eb9e2:	0338      	l32i.n	a3, a3, 0
400eb9e4:	0239      	s32i.n	a3, a2, 0
    while(r != NULL){
400eb9e6:	000a86        	j	400eba14 <triggerApbChangeCallback+0x5c>
        r->cb(r->arg, ev_type, old_apb, new_apb);
400eb9e9:	1cc722        	addi	a2, a7, 28
400eb9ec:	0228      	l32i.n	a2, a2, 0
400eb9ee:	2228      	l32i.n	a2, a2, 8
400eb9f0:	1cc732        	addi	a3, a7, 28
400eb9f3:	0338      	l32i.n	a3, a3, 0
400eb9f5:	1338      	l32i.n	a3, a3, 4
400eb9f7:	674b      	addi.n	a6, a7, 4
400eb9f9:	578b      	addi.n	a5, a7, 8
400eb9fb:	47cb      	addi.n	a4, a7, 12
400eb9fd:	06d8      	l32i.n	a13, a6, 0
400eb9ff:	05c8      	l32i.n	a12, a5, 0
400eba01:	04b8      	l32i.n	a11, a4, 0
400eba03:	03ad      	mov.n	a10, a3
400eba05:	0002e0        	callx8	a2
        r=r->next;
400eba08:	1cc722        	addi	a2, a7, 28
400eba0b:	1cc732        	addi	a3, a7, 28
400eba0e:	0338      	l32i.n	a3, a3, 0
400eba10:	0338      	l32i.n	a3, a3, 0
400eba12:	0239      	s32i.n	a3, a2, 0
    while(r != NULL){
400eba14:	1cc722        	addi	a2, a7, 28
400eba17:	0228      	l32i.n	a2, a2, 0
400eba19:	fcc256        	bnez	a2, 400eb9e9 <triggerApbChangeCallback+0x31>
    }
    xSemaphoreGive(apb_change_lock);
400eba1c:	946621        	l32r	a2, 400d0bb4 <_flash_cache_start+0xb9c>
400eba1f:	0228      	l32i.n	a2, a2, 0
400eba21:	0d0c      	movi.n	a13, 0
400eba23:	0c0c      	movi.n	a12, 0
400eba25:	0b0c      	movi.n	a11, 0
400eba27:	02ad      	mov.n	a10, a2
400eba29:	9bdba5        	call8	400877e4 <xQueueGenericSend>
}
400eba2c:	f03d      	nop.n
400eba2e:	f01d      	retw.n

400eba30 <calculateApb>:
    }
    xSemaphoreGive(apb_change_lock);
    return true;
}

static uint32_t calculateApb(rtc_cpu_freq_config_t * conf){
400eba30:	006136        	entry	a1, 48
400eba33:	017d      	mov.n	a7, a1
400eba35:	37cb      	addi.n	a3, a7, 12
400eba37:	0329      	s32i.n	a2, a3, 0
    if(conf->freq_mhz >= 80){
400eba39:	27cb      	addi.n	a2, a7, 12
400eba3b:	0228      	l32i.n	a2, a2, 0
400eba3d:	3228      	l32i.n	a2, a2, 12
400eba3f:	f34c      	movi.n	a3, 79
400eba41:	0fb327        	bgeu	a3, a2, 400eba54 <calculateApb+0x24>
        return 80 * MHZ;
400eba44:	92a831        	l32r	a3, 400d04e4 <_flash_cache_start+0x4cc>
400eba47:	032d      	mov.n	a2, a3
400eba49:	1122e0        	slli	a2, a2, 2
400eba4c:	223a      	add.n	a2, a2, a3
400eba4e:	1122c0        	slli	a2, a2, 4
400eba51:	000506        	j	400eba69 <calculateApb+0x39>
    }
    return (conf->source_freq_mhz * MHZ) / conf->div;
400eba54:	27cb      	addi.n	a2, a7, 12
400eba56:	0228      	l32i.n	a2, a2, 0
400eba58:	1238      	l32i.n	a3, a2, 4
400eba5a:	92a221        	l32r	a2, 400d04e4 <_flash_cache_start+0x4cc>
400eba5d:	823320        	mull	a3, a3, a2
400eba60:	27cb      	addi.n	a2, a7, 12
400eba62:	0228      	l32i.n	a2, a2, 0
400eba64:	2228      	l32i.n	a2, a2, 8
400eba66:	c22320        	quou	a2, a3, a2
}
400eba69:	f01d      	retw.n
	...

400eba6c <setCpuFrequencyMhz>:

void esp_timer_impl_update_apb_freq(uint32_t apb_ticks_per_us); //private in IDF

bool setCpuFrequencyMhz(uint32_t cpu_freq_mhz){
400eba6c:	00e136        	entry	a1, 112
400eba6f:	207110        	or	a7, a1, a1
400eba72:	1cc732        	addi	a3, a7, 28
400eba75:	006322        	s32i	a2, a3, 0
    rtc_cpu_freq_config_t conf, cconf;
    uint32_t capb, apb;
    //Get XTAL Frequency and calculate min CPU MHz
    rtc_xtal_freq_t xtal = rtc_clk_xtal_freq_get();
400eba78:	a10425        	call8	4008cabc <rtc_clk_xtal_freq_get>
400eba7b:	0a3d      	mov.n	a3, a10
400eba7d:	20c722        	addi	a2, a7, 32
400eba80:	0239      	s32i.n	a3, a2, 0
    if(xtal > RTC_XTAL_FREQ_AUTO){
400eba82:	20c722        	addi	a2, a7, 32
400eba85:	0228      	l32i.n	a2, a2, 0
400eba87:	0ee216        	beqz	a2, 400ebb79 <setCpuFrequencyMhz+0x10d>
        if(xtal < RTC_XTAL_FREQ_40M) {
400eba8a:	20c722        	addi	a2, a7, 32
400eba8d:	0228      	l32i.n	a2, a2, 0
400eba8f:	732c      	movi.n	a3, 39
400eba91:	683327        	bltu	a3, a2, 400ebafd <setCpuFrequencyMhz+0x91>
            if(cpu_freq_mhz <= xtal && cpu_freq_mhz != xtal && cpu_freq_mhz != (xtal/2)){
400eba94:	1cc722        	addi	a2, a7, 28
400eba97:	20c732        	addi	a3, a7, 32
400eba9a:	0228      	l32i.n	a2, a2, 0
400eba9c:	0338      	l32i.n	a3, a3, 0
400eba9e:	02b327        	bgeu	a3, a2, 400ebaa4 <setCpuFrequencyMhz+0x38>
400ebaa1:	003506        	j	400ebb79 <setCpuFrequencyMhz+0x10d>
400ebaa4:	1cc732        	addi	a3, a7, 28
400ebaa7:	20c722        	addi	a2, a7, 32
400ebaaa:	0338      	l32i.n	a3, a3, 0
400ebaac:	0228      	l32i.n	a2, a2, 0
400ebaae:	029327        	bne	a3, a2, 400ebab4 <setCpuFrequencyMhz+0x48>
400ebab1:	003106        	j	400ebb79 <setCpuFrequencyMhz+0x10d>
400ebab4:	20c722        	addi	a2, a7, 32
400ebab7:	0228      	l32i.n	a2, a2, 0
400ebab9:	413120        	srli	a3, a2, 1
400ebabc:	1cc722        	addi	a2, a7, 28
400ebabf:	0228      	l32i.n	a2, a2, 0
400ebac1:	029327        	bne	a3, a2, 400ebac7 <setCpuFrequencyMhz+0x5b>
400ebac4:	002c46        	j	400ebb79 <setCpuFrequencyMhz+0x10d>
                log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2);
400ebac7:	943d21        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400ebaca:	20a220        	or	a10, a2, a2
400ebacd:	9b2625        	call8	40086d30 <pathToFileName>
400ebad0:	0a3d      	mov.n	a3, a10
400ebad2:	20c722        	addi	a2, a7, 32
400ebad5:	0228      	l32i.n	a2, a2, 0
400ebad7:	418120        	srli	a8, a2, 1
400ebada:	20c762        	addi	a6, a7, 32
400ebadd:	1cc752        	addi	a5, a7, 28
400ebae0:	943841        	l32r	a4, 400d0bc0 <_flash_cache_start+0xba8>
400ebae3:	943821        	l32r	a2, 400d0bc4 <_flash_cache_start+0xbac>
400ebae6:	0189      	s32i.n	a8, a1, 0
400ebae8:	06f8      	l32i.n	a15, a6, 0
400ebaea:	05e8      	l32i.n	a14, a5, 0
400ebaec:	04dd      	mov.n	a13, a4
400ebaee:	8aa0c2        	movi	a12, 138
400ebaf1:	03bd      	mov.n	a11, a3
400ebaf3:	02ad      	mov.n	a10, a2
400ebaf5:	ffd165        	call8	400eb80c <log_printf>
                return false;
400ebaf8:	020c      	movi.n	a2, 0
400ebafa:	00aa06        	j	400ebda6 <setCpuFrequencyMhz+0x33a>
            }
        } else if(cpu_freq_mhz <= xtal && cpu_freq_mhz != xtal && cpu_freq_mhz != (xtal/2) && cpu_freq_mhz != (xtal/4)){
400ebafd:	1cc722        	addi	a2, a7, 28
400ebb00:	20c732        	addi	a3, a7, 32
400ebb03:	002222        	l32i	a2, a2, 0
400ebb06:	002332        	l32i	a3, a3, 0
400ebb09:	6c3327        	bltu	a3, a2, 400ebb79 <setCpuFrequencyMhz+0x10d>
400ebb0c:	1cc732        	addi	a3, a7, 28
400ebb0f:	20c722        	addi	a2, a7, 32
400ebb12:	0338      	l32i.n	a3, a3, 0
400ebb14:	0228      	l32i.n	a2, a2, 0
400ebb16:	5f1327        	beq	a3, a2, 400ebb79 <setCpuFrequencyMhz+0x10d>
400ebb19:	20c722        	addi	a2, a7, 32
400ebb1c:	0228      	l32i.n	a2, a2, 0
400ebb1e:	413120        	srli	a3, a2, 1
400ebb21:	1cc722        	addi	a2, a7, 28
400ebb24:	0228      	l32i.n	a2, a2, 0
400ebb26:	4f1327        	beq	a3, a2, 400ebb79 <setCpuFrequencyMhz+0x10d>
400ebb29:	20c722        	addi	a2, a7, 32
400ebb2c:	0228      	l32i.n	a2, a2, 0
400ebb2e:	413220        	srli	a3, a2, 2
400ebb31:	1cc722        	addi	a2, a7, 28
400ebb34:	0228      	l32i.n	a2, a2, 0
400ebb36:	3f1327        	beq	a3, a2, 400ebb79 <setCpuFrequencyMhz+0x10d>
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2, xtal/4);
400ebb39:	942021        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400ebb3c:	02ad      	mov.n	a10, a2
400ebb3e:	9b1f25        	call8	40086d30 <pathToFileName>
400ebb41:	0a3d      	mov.n	a3, a10
400ebb43:	20c722        	addi	a2, a7, 32
400ebb46:	0228      	l32i.n	a2, a2, 0
400ebb48:	418120        	srli	a8, a2, 1
400ebb4b:	20c722        	addi	a2, a7, 32
400ebb4e:	0228      	l32i.n	a2, a2, 0
400ebb50:	419220        	srli	a9, a2, 2
400ebb53:	20c762        	addi	a6, a7, 32
400ebb56:	1cc752        	addi	a5, a7, 28
400ebb59:	941941        	l32r	a4, 400d0bc0 <_flash_cache_start+0xba8>
400ebb5c:	941b21        	l32r	a2, 400d0bc8 <_flash_cache_start+0xbb0>
400ebb5f:	1199      	s32i.n	a9, a1, 4
400ebb61:	0189      	s32i.n	a8, a1, 0
400ebb63:	06f8      	l32i.n	a15, a6, 0
400ebb65:	05e8      	l32i.n	a14, a5, 0
400ebb67:	04dd      	mov.n	a13, a4
400ebb69:	8ea0c2        	movi	a12, 142
400ebb6c:	03bd      	mov.n	a11, a3
400ebb6e:	20a220        	or	a10, a2, a2
400ebb71:	ffc9a5        	call8	400eb80c <log_printf>
            return false;
400ebb74:	020c      	movi.n	a2, 0
400ebb76:	008b06        	j	400ebda6 <setCpuFrequencyMhz+0x33a>
        }
    }
    if(cpu_freq_mhz > xtal && cpu_freq_mhz != 240 && cpu_freq_mhz != 160 && cpu_freq_mhz != 80){
400ebb79:	1cc722        	addi	a2, a7, 28
400ebb7c:	20c732        	addi	a3, a7, 32
400ebb7f:	0228      	l32i.n	a2, a2, 0
400ebb81:	0338      	l32i.n	a3, a3, 0
400ebb83:	023327        	bltu	a3, a2, 400ebb89 <setCpuFrequencyMhz+0x11d>
400ebb86:	002ac6        	j	400ebc35 <setCpuFrequencyMhz+0x1c9>
400ebb89:	1cc722        	addi	a2, a7, 28
400ebb8c:	0238      	l32i.n	a3, a2, 0
400ebb8e:	f0a022        	movi	a2, 240
400ebb91:	029327        	bne	a3, a2, 400ebb97 <setCpuFrequencyMhz+0x12b>
400ebb94:	002746        	j	400ebc35 <setCpuFrequencyMhz+0x1c9>
400ebb97:	1cc722        	addi	a2, a7, 28
400ebb9a:	0238      	l32i.n	a3, a2, 0
400ebb9c:	a0a022        	movi	a2, 160
400ebb9f:	029327        	bne	a3, a2, 400ebba5 <setCpuFrequencyMhz+0x139>
400ebba2:	0023c6        	j	400ebc35 <setCpuFrequencyMhz+0x1c9>
400ebba5:	1cc722        	addi	a2, a7, 28
400ebba8:	0238      	l32i.n	a3, a2, 0
400ebbaa:	025c      	movi.n	a2, 80
400ebbac:	029327        	bne	a3, a2, 400ebbb2 <setCpuFrequencyMhz+0x146>
400ebbaf:	002086        	j	400ebc35 <setCpuFrequencyMhz+0x1c9>
        if(xtal >= RTC_XTAL_FREQ_40M){
400ebbb2:	20c722        	addi	a2, a7, 32
400ebbb5:	0228      	l32i.n	a2, a2, 0
400ebbb7:	732c      	movi.n	a3, 39
400ebbb9:	40b327        	bgeu	a3, a2, 400ebbfd <setCpuFrequencyMhz+0x191>
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2, xtal/4);
400ebbbc:	940021        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400ebbbf:	02ad      	mov.n	a10, a2
400ebbc1:	9b16e5        	call8	40086d30 <pathToFileName>
400ebbc4:	0a3d      	mov.n	a3, a10
400ebbc6:	20c722        	addi	a2, a7, 32
400ebbc9:	0228      	l32i.n	a2, a2, 0
400ebbcb:	418120        	srli	a8, a2, 1
400ebbce:	20c722        	addi	a2, a7, 32
400ebbd1:	0228      	l32i.n	a2, a2, 0
400ebbd3:	419220        	srli	a9, a2, 2
400ebbd6:	20c762        	addi	a6, a7, 32
400ebbd9:	1cc752        	addi	a5, a7, 28
400ebbdc:	93f941        	l32r	a4, 400d0bc0 <_flash_cache_start+0xba8>
400ebbdf:	93fa21        	l32r	a2, 400d0bc8 <_flash_cache_start+0xbb0>
400ebbe2:	1199      	s32i.n	a9, a1, 4
400ebbe4:	0189      	s32i.n	a8, a1, 0
400ebbe6:	06f8      	l32i.n	a15, a6, 0
400ebbe8:	05e8      	l32i.n	a14, a5, 0
400ebbea:	04dd      	mov.n	a13, a4
400ebbec:	94a0c2        	movi	a12, 148
400ebbef:	20b330        	or	a11, a3, a3
400ebbf2:	20a220        	or	a10, a2, a2
400ebbf5:	ffc165        	call8	400eb80c <log_printf>
400ebbf8:	000d06        	j	400ebc30 <setCpuFrequencyMhz+0x1c4>
400ebbfb:	210000        	srai	a0, a0, 0
        } else {
            log_e("Bad frequency: %u MHz! Options are: 240, 160, 80, %u and %u MHz", cpu_freq_mhz, xtal, xtal/2);
400ebbfe:	ef          	.byte 0xef
400ebbff:	a22093        	lsi	f9, a0, 0x288
400ebc02:	12e520        	andbc	b14, b5, b2
400ebc05:	a09b      	addi.n	a10, a0, 9
400ebc07:	203a      	add.n	a2, a0, a3
400ebc09:	20c722        	addi	a2, a7, 32
400ebc0c:	002222        	l32i	a2, a2, 0
400ebc0f:	418120        	srli	a8, a2, 1
400ebc12:	20c762        	addi	a6, a7, 32
400ebc15:	1cc752        	addi	a5, a7, 28
400ebc18:	93ea41        	l32r	a4, 400d0bc0 <_flash_cache_start+0xba8>
400ebc1b:	93ea21        	l32r	a2, 400d0bc4 <_flash_cache_start+0xbac>
400ebc1e:	0189      	s32i.n	a8, a1, 0
400ebc20:	06f8      	l32i.n	a15, a6, 0
400ebc22:	05e8      	l32i.n	a14, a5, 0
400ebc24:	04dd      	mov.n	a13, a4
400ebc26:	96a0c2        	movi	a12, 150
400ebc29:	03bd      	mov.n	a11, a3
400ebc2b:	02ad      	mov.n	a10, a2
400ebc2d:	ffbde5        	call8	400eb80c <log_printf>
        }
        return false;
400ebc30:	020c      	movi.n	a2, 0
400ebc32:	005c06        	j	400ebda6 <setCpuFrequencyMhz+0x33a>
    }
    //check if cpu supports the frequency
    if(cpu_freq_mhz == 240){
400ebc35:	1cc722        	addi	a2, a7, 28
400ebc38:	0238      	l32i.n	a3, a2, 0
400ebc3a:	f0a022        	movi	a2, 240
400ebc3d:	449327        	bne	a3, a2, 400ebc85 <setCpuFrequencyMhz+0x219>
        //Check if ESP32 is rated for a CPU frequency of 160MHz only
        if (REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_RATED) &&
400ebc40:	93e321        	l32r	a2, 400d0bcc <_flash_cache_start+0xbb4>
400ebc43:	0020c0        	memw
400ebc46:	0238      	l32i.n	a3, a2, 0
400ebc48:	924021        	l32r	a2, 400d0548 <_flash_cache_start+0x530>
400ebc4b:	102320        	and	a2, a3, a2
400ebc4e:	32bc      	beqz.n	a2, 400ebc85 <setCpuFrequencyMhz+0x219>
            REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_LOW)) {
400ebc50:	93df21        	l32r	a2, 400d0bcc <_flash_cache_start+0xbb4>
400ebc53:	0020c0        	memw
400ebc56:	0238      	l32i.n	a3, a2, 0
400ebc58:	928821        	l32r	a2, 400d0678 <_flash_cache_start+0x660>
400ebc5b:	102320        	and	a2, a3, a2
        if (REG_GET_BIT(EFUSE_BLK0_RDATA3_REG, EFUSE_RD_CHIP_CPU_FREQ_RATED) &&
400ebc5e:	32ac      	beqz.n	a2, 400ebc85 <setCpuFrequencyMhz+0x219>
            log_e("Can not switch to 240 MHz! Chip CPU frequency rated for 160MHz.");
400ebc60:	93d721        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400ebc63:	02ad      	mov.n	a10, a2
400ebc65:	9b0ca5        	call8	40086d30 <pathToFileName>
400ebc68:	0a3d      	mov.n	a3, a10
400ebc6a:	93d561        	l32r	a6, 400d0bc0 <_flash_cache_start+0xba8>
400ebc6d:	93d821        	l32r	a2, 400d0bd0 <_flash_cache_start+0xbb8>
400ebc70:	06dd      	mov.n	a13, a6
400ebc72:	9fa0c2        	movi	a12, 159
400ebc75:	03bd      	mov.n	a11, a3
400ebc77:	02ad      	mov.n	a10, a2
400ebc79:	ffb925        	call8	400eb80c <log_printf>
            cpu_freq_mhz = 160;
400ebc7c:	1cc722        	addi	a2, a7, 28
400ebc7f:	a0a032        	movi	a3, 160
400ebc82:	006232        	s32i	a3, a2, 0
        }
    }
    //Get current CPU clock configuration
    rtc_clk_cpu_freq_get_config(&cconf);
400ebc85:	40c722        	addi	a2, a7, 64
400ebc88:	20a220        	or	a10, a2, a2
400ebc8b:	a0ece5        	call8	4008cb58 <rtc_clk_cpu_freq_get_config>
    //return if frequency has not changed
    if(cconf.freq_mhz == cpu_freq_mhz){
400ebc8e:	40c722        	addi	a2, a7, 64
400ebc91:	032232        	l32i	a3, a2, 12
400ebc94:	1cc722        	addi	a2, a7, 28
400ebc97:	002222        	l32i	a2, a2, 0
400ebc9a:	069327        	bne	a3, a2, 400ebca4 <setCpuFrequencyMhz+0x238>
        return true;
400ebc9d:	120c      	movi.n	a2, 1
400ebc9f:	0040c6        	j	400ebda6 <setCpuFrequencyMhz+0x33a>
400ebca2:	320000        	orbc	b0, b0, b0
    }
    //Get configuration for the new CPU frequency
    if(!rtc_clk_cpu_freq_mhz_to_config(cpu_freq_mhz, &conf)){
400ebca5:	2230c7        	bltu	a0, a12, 400ebccb <setCpuFrequencyMhz+0x25f>
400ebca8:	301cc7        	beq	a12, a12, 400ebcdc <setCpuFrequencyMhz+0x270>
400ebcab:	a820b3        	lsi	f11, a0, 0x2a0
400ebcae:	e46502        	s32i	a0, a5, 0x390
400ebcb1:	0a2da0        	add.s	f2, f13, f10
400ebcb4:	023d      	mov.n	a3, a2
400ebcb6:	120c      	movi.n	a2, 1
400ebcb8:	302320        	xor	a2, a3, a2
400ebcbb:	742020        	extui	a2, a2, 0, 8
400ebcbe:	72ac      	beqz.n	a2, 400ebce9 <setCpuFrequencyMhz+0x27d>
        log_e("CPU clock could not be set to %u MHz", cpu_freq_mhz);
400ebcc0:	93bf21        	l32r	a2, 400d0bbc <_flash_cache_start+0xba4>
400ebcc3:	02ad      	mov.n	a10, a2
400ebcc5:	9b06a5        	call8	40086d30 <pathToFileName>
400ebcc8:	0a3d      	mov.n	a3, a10
400ebcca:	1cc752        	addi	a5, a7, 28
400ebccd:	93bc41        	l32r	a4, 400d0bc0 <_flash_cache_start+0xba8>
400ebcd0:	93c121        	l32r	a2, 400d0bd4 <_flash_cache_start+0xbbc>
400ebcd3:	05e8      	l32i.n	a14, a5, 0
400ebcd5:	04dd      	mov.n	a13, a4
400ebcd7:	aba0c2        	movi	a12, 171
400ebcda:	03bd      	mov.n	a11, a3
400ebcdc:	02ad      	mov.n	a10, a2
400ebcde:	ffb2e5        	call8	400eb80c <log_printf>
        return false;
400ebce1:	020c      	movi.n	a2, 0
400ebce3:	002fc6        	j	400ebda6 <setCpuFrequencyMhz+0x33a>
400ebce6:	000000        	ill
    }
    //Current APB
    capb = calculateApb(&cconf);
400ebce9:	40c722        	addi	a2, a7, 64
400ebcec:	20a220        	or	a10, a2, a2
400ebcef:	ffd425        	call8	400eba30 <calculateApb>
400ebcf2:	0a3d      	mov.n	a3, a10
400ebcf4:	24c722        	addi	a2, a7, 36
400ebcf7:	0239      	s32i.n	a3, a2, 0
    //New APB
    apb = calculateApb(&conf);
400ebcf9:	30c722        	addi	a2, a7, 48
400ebcfc:	02ad      	mov.n	a10, a2
400ebcfe:	ffd325        	call8	400eba30 <calculateApb>
400ebd01:	0a3d      	mov.n	a3, a10
400ebd03:	28c722        	addi	a2, a7, 40
400ebd06:	0239      	s32i.n	a3, a2, 0
    log_d("%s: %u / %u = %u Mhz, APB: %u Hz", (conf.source == RTC_CPU_FREQ_SRC_PLL)?"PLL":((conf.source == RTC_CPU_FREQ_SRC_APLL)?"APLL":((conf.source == RTC_CPU_FREQ_SRC_XTAL)?"XTAL":"8M")), conf.source_freq_mhz, conf.div, conf.freq_mhz, apb);
    //Call peripheral functions before the APB change
    if(apb_change_callbacks){
400ebd08:	93ac21        	l32r	a2, 400d0bb8 <_flash_cache_start+0xba0>
400ebd0b:	0228      	l32i.n	a2, a2, 0
400ebd0d:	f28c      	beqz.n	a2, 400ebd20 <setCpuFrequencyMhz+0x2b4>
        triggerApbChangeCallback(APB_BEFORE_CHANGE, capb, apb);
400ebd0f:	28c732        	addi	a3, a7, 40
400ebd12:	24c722        	addi	a2, a7, 36
400ebd15:	03c8      	l32i.n	a12, a3, 0
400ebd17:	0022b2        	l32i	a11, a2, 0
400ebd1a:	00a0a2        	movi	a10, 0
400ebd1d:	ffc9a5        	call8	400eb9b8 <triggerApbChangeCallback>
    }
    //Make the frequency change
    rtc_clk_cpu_freq_set_config_fast(&conf);
400ebd20:	30c722        	addi	a2, a7, 48
400ebd23:	20a220        	or	a10, a2, a2
400ebd26:	a111a5        	call8	4008ce40 <rtc_clk_cpu_freq_set_config_fast>
    if(capb != apb){
400ebd29:	24c732        	addi	a3, a7, 36
400ebd2c:	28c722        	addi	a2, a7, 40
400ebd2f:	002332        	l32i	a3, a3, 0
400ebd32:	0228      	l32i.n	a2, a2, 0
400ebd34:	181327        	beq	a3, a2, 400ebd50 <setCpuFrequencyMhz+0x2e4>
        //Update REF_TICK (uncomment if REF_TICK is different than 1MHz)
        //if(conf.freq_mhz < 80){
        //    ESP_REG(APB_CTRL_XTAL_TICK_CONF_REG) = conf.freq_mhz / (REF_CLK_FREQ / MHZ) - 1;
        //}
        //Update APB Freq REG
        rtc_clk_apb_freq_update(apb);
400ebd37:	28c722        	addi	a2, a7, 40
400ebd3a:	0022a2        	l32i	a10, a2, 0
400ebd3d:	a0ec25        	call8	4008cc00 <rtc_clk_apb_freq_update>
        //Update esp_timer divisor
        esp_timer_impl_update_apb_freq(apb / MHZ);
400ebd40:	91e921        	l32r	a2, 400d04e4 <_flash_cache_start+0x4cc>
400ebd43:	28c732        	addi	a3, a7, 40
400ebd46:	0338      	l32i.n	a3, a3, 0
400ebd48:	c22320        	quou	a2, a3, a2
400ebd4b:	02ad      	mov.n	a10, a2
400ebd4d:	965425        	call8	40082290 <esp_timer_impl_update_apb_freq>
    }
    //Update FreeRTOS Tick Divisor
    uint32_t fcpu = (conf.freq_mhz >= 80)?(conf.freq_mhz * MHZ):(apb);
400ebd50:	30c722        	addi	a2, a7, 48
400ebd53:	3228      	l32i.n	a2, a2, 12
400ebd55:	f34c      	movi.n	a3, 79
400ebd57:	0eb327        	bgeu	a3, a2, 400ebd69 <setCpuFrequencyMhz+0x2fd>
400ebd5a:	30c722        	addi	a2, a7, 48
400ebd5d:	3238      	l32i.n	a3, a2, 12
400ebd5f:	91e121        	l32r	a2, 400d04e4 <_flash_cache_start+0x4cc>
400ebd62:	822320        	mull	a2, a3, a2
400ebd65:	000186        	j	400ebd6f <setCpuFrequencyMhz+0x303>
400ebd68:	c72200        	lsi	f0, a2, 0x31c
400ebd6b:	2228      	l32i.n	a2, a2, 8
400ebd6d:	320022        	l8ui	a2, a0, 50
400ebd70:	222cc7        	blt	a12, a12, 400ebd96 <setCpuFrequencyMhz+0x32a>
400ebd73:	220063        	lsi	f6, a0, 136
    _xt_tick_divisor = fcpu / XT_TICK_PER_SEC;
400ebd76:	322cc7        	blt	a12, a12, 400ebdac <__static_initialization_and_destruction_0(int, int)+0x4>
400ebd79:	210022        	l8ui	a2, a0, 33
400ebd7c:	209397        	bne	a3, a9, 400ebda0 <setCpuFrequencyMhz+0x334>
400ebd7f:	208263        	lsip	f6, a2, 128
400ebd82:	4da253        	lsi	f5, a2, 0x134
400ebd85:	365006        	j	400f96c9 <_etext+0xcdec>
400ebd88:	942141        	l32r	a4, 400d0e0c <unsigned int testDiv<unsigned char>(char const*, unsigned int)+0x70>
400ebd8b:	023993        	lsi	f9, a9, 8
    //Call peripheral functions after the APB change
    if(apb_change_callbacks){
400ebd8e:	938a21        	l32r	a2, 400d0bb8 <_flash_cache_start+0xba0>
400ebd91:	0228      	l32i.n	a2, a2, 0
400ebd93:	d28c      	beqz.n	a2, 400ebda4 <setCpuFrequencyMhz+0x338>
        triggerApbChangeCallback(APB_AFTER_CHANGE, capb, apb);
400ebd95:	28c732        	addi	a3, a7, 40
400ebd98:	24c722        	addi	a2, a7, 36
400ebd9b:	03c8      	l32i.n	a12, a3, 0
400ebd9d:	02b8      	l32i.n	a11, a2, 0
400ebd9f:	1a0c      	movi.n	a10, 1
400ebda1:	ffc165        	call8	400eb9b8 <triggerApbChangeCallback>
    }
    return true;
400ebda4:	120c      	movi.n	a2, 1
}
400ebda6:	f01d      	retw.n

400ebda8 <__static_initialization_and_destruction_0(int, int)>:
{
   void cleanupFunctional(void* arg)
   {
	 delete (InterruptArgStructure*)arg;
   }
}
400ebda8:	006136        	entry	a1, 48
400ebdab:	207110        	or	a7, a1, a1
400ebdae:	0cc742        	addi	a4, a7, 12
400ebdb1:	006422        	s32i	a2, a4, 0
400ebdb4:	278b      	addi.n	a2, a7, 8
400ebdb6:	0239      	s32i.n	a3, a2, 0
400ebdb8:	27cb      	addi.n	a2, a7, 12
400ebdba:	0228      	l32i.n	a2, a2, 0
400ebdbc:	191266        	bnei	a2, 1, 400ebdd9 <__static_initialization_and_destruction_0(int, int)+0x31>
400ebdbf:	278b      	addi.n	a2, a7, 8
400ebdc1:	0238      	l32i.n	a3, a2, 0
400ebdc3:	90ad21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400ebdc6:	0f9327        	bne	a3, a2, 400ebdd9 <__static_initialization_and_destruction_0(int, int)+0x31>
400ebdc9:	938521        	l32r	a2, 400d0be0 <_flash_cache_start+0xbc8>
400ebdcc:	0e0c      	movi.n	a14, 0
400ebdce:	0d0c      	movi.n	a13, 0
400ebdd0:	0c0c      	movi.n	a12, 0
400ebdd2:	0b0c      	movi.n	a11, 0
400ebdd4:	02ad      	mov.n	a10, a2
400ebdd6:	e7e0e5        	call8	400d3be4 <IPAddress::IPAddress(unsigned char, unsigned char, unsigned char, unsigned char)>
400ebdd9:	0cc722        	addi	a2, a7, 12
400ebddc:	002222        	l32i	a2, a2, 0
400ebddf:	011256        	bnez	a2, 400ebdf4 <__static_initialization_and_destruction_0(int, int)+0x4c>
400ebde2:	278b      	addi.n	a2, a7, 8
400ebde4:	0238      	l32i.n	a3, a2, 0
400ebde6:	90a421        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400ebde9:	079327        	bne	a3, a2, 400ebdf4 <__static_initialization_and_destruction_0(int, int)+0x4c>
400ebdec:	937d21        	l32r	a2, 400d0be0 <_flash_cache_start+0xbc8>
400ebdef:	02ad      	mov.n	a10, a2
400ebdf1:	e4e765        	call8	400d0c68 <IPAddress::~IPAddress()>
400ebdf4:	f03d      	nop.n
400ebdf6:	f01d      	retw.n

400ebdf8 <_GLOBAL__sub_I__Z19interruptFunctionalPv>:
400ebdf8:	004136        	entry	a1, 32
400ebdfb:	207110        	or	a7, a1, a1
400ebdfe:	909e21        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400ebe01:	20b220        	or	a11, a2, a2
400ebe04:	01a0a2        	movi	a10, 1
400ebe07:	fffa25        	call8	400ebda8 <__static_initialization_and_destruction_0(int, int)>
400ebe0a:	f01d      	retw.n

400ebe0c <_GLOBAL__sub_D__Z19interruptFunctionalPv>:
400ebe0c:	004136        	entry	a1, 32
400ebe0f:	207110        	or	a7, a1, a1
400ebe12:	909921        	l32r	a2, 400d0078 <_flash_cache_start+0x60>
400ebe15:	20b220        	or	a11, a2, a2
400ebe18:	00a0a2        	movi	a10, 0
400ebe1b:	fff8e5        	call8	400ebda8 <__static_initialization_and_destruction_0(int, int)>
400ebe1e:	f01d      	retw.n

400ebe20 <lib_printf>:
400ebe20:	012136        	entry	a1, 144
400ebe23:	016142        	s32i	a4, a1, 4
400ebe26:	026152        	s32i	a5, a1, 8
400ebe29:	036162        	s32i	a6, a1, 12
400ebe2c:	f03d      	nop.n
400ebe2e:	f03d      	nop.n
400ebe30:	f03d      	nop.n
400ebe32:	f03d      	nop.n
400ebe34:	909681        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400ebe37:	0020c0        	memw
400ebe3a:	0888      	l32i.n	a8, a8, 0
400ebe3c:	0020c0        	memw
400ebe3f:	1b6182        	s32i	a8, a1, 108
400ebe42:	04dd      	mov.n	a13, a4
400ebe44:	05ed      	mov.n	a14, a5
400ebe46:	06fd      	mov.n	a15, a6
400ebe48:	03cd      	mov.n	a12, a3
400ebe4a:	fb4c      	movi.n	a11, 79
400ebe4c:	1cc1a2        	addi	a10, a1, 28
400ebe4f:	f986a5        	call8	400e56b8 <vsnprintf>
400ebe52:	080c      	movi.n	a8, 0
400ebe54:	6b4182        	s8i	a8, a1, 107
400ebe57:	0020c0        	memw
400ebe5a:	8a0b      	addi.n	a8, a10, -1
400ebe5c:	000bc6        	j	400ebe8f <lib_printf+0x6f>
400ebe5f:	c12200        	mul16u	a2, a2, a0
400ebe62:	8a1c      	movi.n	a10, 24
400ebe64:	09d292        	addmi	a9, a2, 0x900
400ebe67:	cdc200        	lsi	f0, a2, 0x334
400ebe6a:	1e0cf6        	bgeui	a12, 0x8000, 400ebe8c <lib_printf+0x6c>
400ebe6d:	090c      	movi.n	a9, 0
400ebe6f:	092d      	mov.n	a2, a9
400ebe71:	932ec0        	movnez	a2, a14, a12
400ebe74:	f3cdb2        	addi	a11, a13, -13
400ebe77:	939eb0        	movnez	a9, a14, a11
400ebe7a:	020297        	bnone	a2, a9, 400ebe80 <lib_printf+0x60>
400ebe7d:	11cd66        	bnei	a13, 32, 400ebe92 <lib_printf+0x72>
400ebe80:	1cc122        	addi	a2, a1, 28
400ebe83:	928a      	add.n	a9, a2, a8
400ebe85:	0b0c      	movi.n	a11, 0
400ebe87:	0049b2        	s8i	a11, a9, 0
400ebe8a:	0020c0        	memw
400ebe8d:	880b      	addi.n	a8, a8, -1
400ebe8f:	fcd8d6        	bgez	a8, 400ebe60 <lib_printf+0x40>
400ebe92:	0a2d      	mov.n	a2, a10
400ebe94:	f03d      	nop.n
400ebe96:	f03d      	nop.n
400ebe98:	0020c0        	memw
400ebe9b:	1b2192        	l32i	a9, a1, 108
400ebe9e:	907b81        	l32r	a8, 400d008c <_flash_cache_start+0x74>
400ebea1:	0020c0        	memw
400ebea4:	0888      	l32i.n	a8, a8, 0
400ebea6:	021987        	beq	a9, a8, 400ebeac <lib_printf+0x8c>
400ebea9:	ea80e5        	call8	400d66b8 <__stack_chk_fail>
400ebeac:	f01d      	retw.n
	...

400ebeb0 <phy_printf>:
400ebeb0:	00a136        	entry	a1, 80
400ebeb3:	016132        	s32i	a3, a1, 4
400ebeb6:	026142        	s32i	a4, a1, 8
400ebeb9:	036152        	s32i	a5, a1, 12
400ebebc:	4169      	s32i.n	a6, a1, 16
400ebebe:	5179      	s32i.n	a7, a1, 20
400ebec0:	013d      	mov.n	a3, a1
400ebec2:	a139      	s32i.n	a3, a1, 40
400ebec4:	30c1c2        	addi	a12, a1, 48
400ebec7:	91c9      	s32i.n	a12, a1, 36
400ebec9:	4e0c      	movi.n	a14, 4
400ebecb:	b1e9      	s32i.n	a14, a1, 44
400ebecd:	01dd      	mov.n	a13, a1
400ebecf:	02bd      	mov.n	a11, a2
400ebed1:	f03d      	nop.n
400ebed3:	0020f0        	nop
400ebed6:	9343a1        	l32r	a10, 400d0be4 <_flash_cache_start+0xbcc>
400ebed9:	fff465        	call8	400ebe20 <lib_printf>
400ebedc:	0a2d      	mov.n	a2, a10
400ebede:	f01d      	retw.n

400ebee0 <coexist_printf>:
400ebee0:	00a136        	entry	a1, 80
400ebee3:	016132        	s32i	a3, a1, 4
400ebee6:	026142        	s32i	a4, a1, 8
400ebee9:	036152        	s32i	a5, a1, 12
400ebeec:	4169      	s32i.n	a6, a1, 16
400ebeee:	5179      	s32i.n	a7, a1, 20
400ebef0:	013d      	mov.n	a3, a1
400ebef2:	a139      	s32i.n	a3, a1, 40
400ebef4:	30c1c2        	addi	a12, a1, 48
400ebef7:	91c9      	s32i.n	a12, a1, 36
400ebef9:	4e0c      	movi.n	a14, 4
400ebefb:	b1e9      	s32i.n	a14, a1, 44
400ebefd:	01dd      	mov.n	a13, a1
400ebeff:	02bd      	mov.n	a11, a2
400ebf01:	f03d      	nop.n
400ebf03:	0020f0        	nop
400ebf06:	9338a1        	l32r	a10, 400d0be8 <_flash_cache_start+0xbd0>
400ebf09:	fff165        	call8	400ebe20 <lib_printf>
400ebf0c:	0a2d      	mov.n	a2, a10
400ebf0e:	f01d      	retw.n

400ebf10 <esp_ota_get_running_partition>:
400ebf10:	004136        	entry	a1, 32
400ebf13:	933621        	l32r	a2, 400d0bec <_flash_cache_start+0xbd4>
400ebf16:	0228      	l32i.n	a2, a2, 0
400ebf18:	06a256        	bnez	a2, 400ebf86 <esp_ota_get_running_partition+0x76>
400ebf1b:	9335a1        	l32r	a10, 400d0bf0 <_flash_cache_start+0xbd8>
400ebf1e:	fe1c25        	call8	400ea0e0 <spi_flash_cache2phys>
400ebf21:	0a4d      	mov.n	a4, a10
400ebf23:	0e0a66        	bnei	a10, -1, 400ebf35 <esp_ota_get_running_partition+0x25>
400ebf26:	9333d1        	l32r	a13, 400d0bf4 <_flash_cache_start+0xbdc>
400ebf29:	9333c1        	l32r	a12, 400d0bf8 <_flash_cache_start+0xbe0>
400ebf2c:	fea1b2        	movi	a11, 0x1fe
400ebf2f:	9333a1        	l32r	a10, 400d0bfc <_flash_cache_start+0xbe4>
400ebf32:	eefa65        	call8	400daed8 <__assert_func>
400ebf35:	00a0c2        	movi	a12, 0
400ebf38:	ffa0b2        	movi	a11, 255
400ebf3b:	20acc0        	or	a10, a12, a12
400ebf3e:	fe3ea5        	call8	400ea328 <esp_partition_find>
400ebf41:	203aa0        	or	a3, a10, a10
400ebf44:	038a56        	bnez	a10, 400ebf80 <esp_ota_get_running_partition+0x70>
400ebf47:	932ed1        	l32r	a13, 400d0c00 <_flash_cache_start+0xbe8>
400ebf4a:	932bc1        	l32r	a12, 400d0bf8 <_flash_cache_start+0xbe0>
400ebf4d:	03a2b2        	movi	a11, 0x203
400ebf50:	932ba1        	l32r	a10, 400d0bfc <_flash_cache_start+0xbe4>
400ebf53:	eef865        	call8	400daed8 <__assert_func>
400ebf56:	20a330        	or	a10, a3, a3
400ebf59:	fe4125        	call8	400ea36c <esp_partition_get>
400ebf5c:	202aa0        	or	a2, a10, a10
400ebf5f:	2a98      	l32i.n	a9, a10, 8
400ebf61:	123497        	bltu	a4, a9, 400ebf77 <esp_ota_get_running_partition+0x67>
400ebf64:	3a88      	l32i.n	a8, a10, 12
400ebf66:	898a      	add.n	a8, a9, a8
400ebf68:	0bb487        	bgeu	a4, a8, 400ebf77 <esp_ota_get_running_partition+0x67>
400ebf6b:	03ad      	mov.n	a10, a3
400ebf6d:	fe31e5        	call8	400ea28c <esp_partition_iterator_release>
400ebf70:	931f31        	l32r	a3, 400d0bec <_flash_cache_start+0xbd4>
400ebf73:	0329      	s32i.n	a2, a3, 0
400ebf75:	f01d      	retw.n
400ebf77:	20a330        	or	a10, a3, a3
400ebf7a:	fe3225        	call8	400ea29c <esp_partition_next>
400ebf7d:	203aa0        	or	a3, a10, a10
400ebf80:	fd2356        	bnez	a3, 400ebf56 <esp_ota_get_running_partition+0x46>
400ebf83:	9f3ea5        	call8	4008b36c <abort>
400ebf86:	f01d      	retw.n

400ebf88 <try_heap_caps_add_region>:
400ebf88:	004136        	entry	a1, 32
400ebf8b:	20b330        	or	a11, a3, a3
400ebf8e:	20a220        	or	a10, a2, a2
400ebf91:	eee9a5        	call8	400dae2c <heap_caps_add_region>
400ebf94:	04a122        	movi	a2, 0x104
400ebf97:	059a27        	bne	a10, a2, 400ebfa0 <try_heap_caps_add_region+0x18>
400ebf9a:	00a022        	movi	a2, 0
400ebf9d:	f01d      	retw.n
400ebf9f:	0a2d00        	add.s	f2, f13, f0
400ebfa2:	f01d      	retw.n

400ebfa4 <esp_bt_controller_mem_release>:
400ebfa4:	004136        	entry	a1, 32
400ebfa7:	931731        	l32r	a3, 400d0c04 <_flash_cache_start+0xbec>
400ebfaa:	0338      	l32i.n	a3, a3, 0
400ebfac:	119356        	bnez	a3, 400ec0c9 <esp_bt_controller_mem_release+0x125>
400ebfaf:	931631        	l32r	a3, 400d0c08 <_flash_cache_start+0xbf0>
400ebfb2:	0338      	l32i.n	a3, a3, 0
400ebfb4:	028327        	bany	a3, a2, 400ebfba <esp_bt_controller_mem_release+0x16>
400ebfb7:	004546        	j	400ec0d0 <esp_bt_controller_mem_release+0x12c>
400ebfba:	030c      	movi.n	a3, 0
400ebfbc:	1c0c      	movi.n	a12, 1
400ebfbe:	003086        	j	400ec084 <esp_bt_controller_mem_release+0xe0>
400ebfc1:	909330        	addx2	a9, a3, a3
400ebfc4:	1189e0        	slli	a8, a9, 2
400ebfc7:	931091        	l32r	a9, 400d0c08 <_flash_cache_start+0xbf0>
400ebfca:	898a      	add.n	a8, a9, a8
400ebfcc:	08a8      	l32i.n	a10, a8, 0
400ebfce:	4a8c      	beqz.n	a10, 400ebfd6 <esp_bt_controller_mem_release+0x32>
400ebfd0:	1082a0        	and	a8, a2, a10
400ebfd3:	171a87        	beq	a10, a8, 400ebfee <esp_bt_controller_mem_release+0x4a>
400ebfd6:	f87c      	movi.n	a8, -1
400ebfd8:	308820        	xor	a8, a8, a2
400ebfdb:	90b330        	addx2	a11, a3, a3
400ebfde:	119be0        	slli	a9, a11, 2
400ebfe1:	9309b1        	l32r	a11, 400d0c08 <_flash_cache_start+0xbf0>
400ebfe4:	9b9a      	add.n	a9, a11, a9
400ebfe6:	108a80        	and	a8, a10, a8
400ebfe9:	0989      	s32i.n	a8, a9, 0
400ebfeb:	0024c6        	j	400ec082 <esp_bt_controller_mem_release+0xde>
400ebfee:	f87c      	movi.n	a8, -1
400ebff0:	308820        	xor	a8, a8, a2
400ebff3:	90d330        	addx2	a13, a3, a3
400ebff6:	119de0        	slli	a9, a13, 2
400ebff9:	9303d1        	l32r	a13, 400d0c08 <_flash_cache_start+0xbf0>
400ebffc:	9d9a      	add.n	a9, a13, a9
400ebffe:	108a80        	and	a8, a10, a8
400ec001:	0989      	s32i.n	a8, a9, 0
400ec003:	ac8c      	beqz.n	a12, 400ec011 <esp_bt_controller_mem_release+0x6d>
400ec005:	f03d      	nop.n
400ec007:	f03d      	nop.n
400ec009:	f03d      	nop.n
400ec00b:	f03d      	nop.n
400ec00d:	1948      	l32i.n	a4, a9, 4
400ec00f:	0c0c      	movi.n	a12, 0
400ec011:	426bf6        	bgeui	a11, 6, 400ec057 <esp_bt_controller_mem_release+0xb3>
400ec014:	92fda1        	l32r	a10, 400d0c08 <_flash_cache_start+0xbf0>
400ec017:	908330        	addx2	a8, a3, a3
400ec01a:	1198e0        	slli	a9, a8, 2
400ec01d:	9a9a      	add.n	a9, a10, a9
400ec01f:	29b8      	l32i.n	a11, a9, 8
400ec021:	931b      	addi.n	a9, a3, 1
400ec023:	90d990        	addx2	a13, a9, a9
400ec026:	118de0        	slli	a8, a13, 2
400ec029:	08dd      	mov.n	a13, a8
400ec02b:	8a8a      	add.n	a8, a10, a8
400ec02d:	0888      	l32i.n	a8, a8, 0
400ec02f:	e88c      	beqz.n	a8, 400ec041 <esp_bt_controller_mem_release+0x9d>
400ec031:	10a280        	and	a10, a2, a8
400ec034:	0998a7        	bne	a8, a10, 400ec041 <esp_bt_controller_mem_release+0x9d>
400ec037:	92f491        	l32r	a9, 400d0c08 <_flash_cache_start+0xbf0>
400ec03a:	89da      	add.n	a8, a9, a13
400ec03c:	1888      	l32i.n	a8, a8, 4
400ec03e:	401b87        	beq	a11, a8, 400ec082 <esp_bt_controller_mem_release+0xde>
400ec041:	04ad      	mov.n	a10, a4
400ec043:	fff465        	call8	400ebf88 <try_heap_caps_add_region>
400ec046:	0abc      	beqz.n	a10, 400ec07a <esp_bt_controller_mem_release+0xd6>
400ec048:	92f1e1        	l32r	a14, 400d0c0c <_flash_cache_start+0xbf4>
400ec04b:	92f1d1        	l32r	a13, 400d0c10 <_flash_cache_start+0xbf8>
400ec04e:	dfa3c2        	movi	a12, 0x3df
400ec051:	92f0b1        	l32r	a11, 400d0c14 <_flash_cache_start+0xbfc>
400ec054:	9f5ee5        	call8	4008b644 <_esp_error_check_failed>
400ec057:	909330        	addx2	a9, a3, a3
400ec05a:	1189e0        	slli	a8, a9, 2
400ec05d:	92ea91        	l32r	a9, 400d0c08 <_flash_cache_start+0xbf0>
400ec060:	898a      	add.n	a8, a9, a8
400ec062:	28b8      	l32i.n	a11, a8, 8
400ec064:	04ad      	mov.n	a10, a4
400ec066:	fff225        	call8	400ebf88 <try_heap_caps_add_region>
400ec069:	3a9c      	beqz.n	a10, 400ec080 <esp_bt_controller_mem_release+0xdc>
400ec06b:	92e8e1        	l32r	a14, 400d0c0c <_flash_cache_start+0xbf4>
400ec06e:	92e8d1        	l32r	a13, 400d0c10 <_flash_cache_start+0xbf8>
400ec071:	e5a3c2        	movi	a12, 0x3e5
400ec074:	92e8b1        	l32r	a11, 400d0c14 <_flash_cache_start+0xbfc>
400ec077:	9f5ce5        	call8	4008b644 <_esp_error_check_failed>
400ec07a:	1c0c      	movi.n	a12, 1
400ec07c:	000086        	j	400ec082 <esp_bt_controller_mem_release+0xde>
400ec07f:	1c0c00        	lsi	f0, a12, 112
400ec082:	331b      	addi.n	a3, a3, 1
400ec084:	03bd      	mov.n	a11, a3
400ec086:	0273f6        	bgeui	a3, 7, 400ec08c <esp_bt_controller_mem_release+0xe8>
400ec089:	ffcd06        	j	400ebfc1 <esp_bt_controller_mem_release+0x1d>
400ec08c:	453266        	bnei	a2, 3, 400ec0d5 <esp_bt_controller_mem_release+0x131>
400ec08f:	92e2a1        	l32r	a10, 400d0c18 <_flash_cache_start+0xc00>
400ec092:	92e2b1        	l32r	a11, 400d0c1c <_flash_cache_start+0xc04>
400ec095:	131ab7        	beq	a10, a11, 400ec0ac <esp_bt_controller_mem_release+0x108>
400ec098:	ffeee5        	call8	400ebf88 <try_heap_caps_add_region>
400ec09b:	da8c      	beqz.n	a10, 400ec0ac <esp_bt_controller_mem_release+0x108>
400ec09d:	92dbe1        	l32r	a14, 400d0c0c <_flash_cache_start+0xbf4>
400ec0a0:	92dcd1        	l32r	a13, 400d0c10 <_flash_cache_start+0xbf8>
400ec0a3:	efa3c2        	movi	a12, 0x3ef
400ec0a6:	92dbb1        	l32r	a11, 400d0c14 <_flash_cache_start+0xbfc>
400ec0a9:	9f59a5        	call8	4008b644 <_esp_error_check_failed>
400ec0ac:	92dda1        	l32r	a10, 400d0c20 <_flash_cache_start+0xc08>
400ec0af:	92ddb1        	l32r	a11, 400d0c24 <_flash_cache_start+0xc0c>
400ec0b2:	231ab7        	beq	a10, a11, 400ec0d9 <esp_bt_controller_mem_release+0x135>
400ec0b5:	ffed25        	call8	400ebf88 <try_heap_caps_add_region>
400ec0b8:	1aac      	beqz.n	a10, 400ec0dd <esp_bt_controller_mem_release+0x139>
400ec0ba:	92d4e1        	l32r	a14, 400d0c0c <_flash_cache_start+0xbf4>
400ec0bd:	92d4d1        	l32r	a13, 400d0c10 <_flash_cache_start+0xbf8>
400ec0c0:	f5a3c2        	movi	a12, 0x3f5
400ec0c3:	92d4b1        	l32r	a11, 400d0c14 <_flash_cache_start+0xbfc>
400ec0c6:	9f57e5        	call8	4008b644 <_esp_error_check_failed>
400ec0c9:	03a122        	movi	a2, 0x103
400ec0cc:	f01d      	retw.n
400ec0ce:	220000        	orb	b0, b0, b0
400ec0d1:	1d03a1        	l32r	a10, 400b34e0 <_iram_end+0x2598c>
400ec0d4:	020cf0        	andb	b0, b12, b15
400ec0d7:	f01d      	retw.n
400ec0d9:	020c      	movi.n	a2, 0
400ec0db:	f01d      	retw.n
400ec0dd:	020c      	movi.n	a2, 0
400ec0df:	f01d      	retw.n
400ec0e1:	000000        	ill

400ec0e4 <loop()>:
{
400ec0e4:	004136        	entry	a1, 32
400ec0e7:	017d      	mov.n	a7, a1
}
400ec0e9:	f03d      	nop.n
400ec0eb:	f01d      	retw.n
400ec0ed:	000000        	ill

400ec0f0 <std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec0f0:	006136        	entry	a1, 48
400ec0f3:	017d      	mov.n	a7, a1
400ec0f5:	37cb      	addi.n	a3, a7, 12
400ec0f7:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec0f9:	27cb      	addi.n	a2, a7, 12
400ec0fb:	0228      	l32i.n	a2, a2, 0
400ec0fd:	f01d      	retw.n
	...

400ec100 <std::vector<unsigned char, std::allocator<unsigned char> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec100:	006136        	entry	a1, 48
400ec103:	017d      	mov.n	a7, a1
400ec105:	47cb      	addi.n	a4, a7, 12
400ec107:	0429      	s32i.n	a2, a4, 0
400ec109:	278b      	addi.n	a2, a7, 8
400ec10b:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec10d:	27cb      	addi.n	a2, a7, 12
400ec10f:	0228      	l32i.n	a2, a2, 0
400ec111:	0238      	l32i.n	a3, a2, 0
400ec113:	278b      	addi.n	a2, a7, 8
400ec115:	0228      	l32i.n	a2, a2, 0
400ec117:	232a      	add.n	a2, a3, a2
400ec119:	f01d      	retw.n
	...

400ec11c <std::vector<unsigned short, std::allocator<unsigned short> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec11c:	006136        	entry	a1, 48
400ec11f:	017d      	mov.n	a7, a1
400ec121:	47cb      	addi.n	a4, a7, 12
400ec123:	0429      	s32i.n	a2, a4, 0
400ec125:	278b      	addi.n	a2, a7, 8
400ec127:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec129:	27cb      	addi.n	a2, a7, 12
400ec12b:	0228      	l32i.n	a2, a2, 0
400ec12d:	0238      	l32i.n	a3, a2, 0
400ec12f:	278b      	addi.n	a2, a7, 8
400ec131:	0228      	l32i.n	a2, a2, 0
400ec133:	1122f0        	slli	a2, a2, 1
400ec136:	232a      	add.n	a2, a3, a2
400ec138:	f01d      	retw.n
	...

400ec13c <std::vector<unsigned int, std::allocator<unsigned int> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec13c:	006136        	entry	a1, 48
400ec13f:	017d      	mov.n	a7, a1
400ec141:	47cb      	addi.n	a4, a7, 12
400ec143:	0429      	s32i.n	a2, a4, 0
400ec145:	278b      	addi.n	a2, a7, 8
400ec147:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec149:	27cb      	addi.n	a2, a7, 12
400ec14b:	0228      	l32i.n	a2, a2, 0
400ec14d:	0238      	l32i.n	a3, a2, 0
400ec14f:	278b      	addi.n	a2, a7, 8
400ec151:	0228      	l32i.n	a2, a2, 0
400ec153:	1122e0        	slli	a2, a2, 2
400ec156:	232a      	add.n	a2, a3, a2
400ec158:	f01d      	retw.n
	...

400ec15c <std::vector<unsigned long long, std::allocator<unsigned long long> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec15c:	006136        	entry	a1, 48
400ec15f:	017d      	mov.n	a7, a1
400ec161:	47cb      	addi.n	a4, a7, 12
400ec163:	0429      	s32i.n	a2, a4, 0
400ec165:	278b      	addi.n	a2, a7, 8
400ec167:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec169:	27cb      	addi.n	a2, a7, 12
400ec16b:	0228      	l32i.n	a2, a2, 0
400ec16d:	0238      	l32i.n	a3, a2, 0
400ec16f:	278b      	addi.n	a2, a7, 8
400ec171:	0228      	l32i.n	a2, a2, 0
400ec173:	1122d0        	slli	a2, a2, 3
400ec176:	232a      	add.n	a2, a3, a2
400ec178:	f01d      	retw.n
	...

400ec17c <std::vector<float, std::allocator<float> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec17c:	006136        	entry	a1, 48
400ec17f:	017d      	mov.n	a7, a1
400ec181:	47cb      	addi.n	a4, a7, 12
400ec183:	0429      	s32i.n	a2, a4, 0
400ec185:	278b      	addi.n	a2, a7, 8
400ec187:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec189:	27cb      	addi.n	a2, a7, 12
400ec18b:	0228      	l32i.n	a2, a2, 0
400ec18d:	0238      	l32i.n	a3, a2, 0
400ec18f:	278b      	addi.n	a2, a7, 8
400ec191:	0228      	l32i.n	a2, a2, 0
400ec193:	1122e0        	slli	a2, a2, 2
400ec196:	232a      	add.n	a2, a3, a2
400ec198:	f01d      	retw.n
	...

400ec19c <std::vector<double, std::allocator<double> >::operator[](unsigned int)>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
400ec19c:	006136        	entry	a1, 48
400ec19f:	017d      	mov.n	a7, a1
400ec1a1:	47cb      	addi.n	a4, a7, 12
400ec1a3:	0429      	s32i.n	a2, a4, 0
400ec1a5:	278b      	addi.n	a2, a7, 8
400ec1a7:	0239      	s32i.n	a3, a2, 0
      { return *(this->_M_impl._M_start + __n); }
400ec1a9:	27cb      	addi.n	a2, a7, 12
400ec1ab:	0228      	l32i.n	a2, a2, 0
400ec1ad:	0238      	l32i.n	a3, a2, 0
400ec1af:	278b      	addi.n	a2, a7, 8
400ec1b1:	0228      	l32i.n	a2, a2, 0
400ec1b3:	1122d0        	slli	a2, a2, 3
400ec1b6:	232a      	add.n	a2, a3, a2
400ec1b8:	f01d      	retw.n
	...

400ec1bc <__gnu_cxx::new_allocator<unsigned char>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec1bc:	006136        	entry	a1, 48
400ec1bf:	017d      	mov.n	a7, a1
400ec1c1:	37cb      	addi.n	a3, a7, 12
400ec1c3:	0329      	s32i.n	a2, a3, 0
400ec1c5:	f03d      	nop.n
400ec1c7:	f01d      	retw.n
400ec1c9:	000000        	ill

400ec1cc <__gnu_cxx::new_allocator<unsigned char>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec1cc:	006136        	entry	a1, 48
400ec1cf:	017d      	mov.n	a7, a1
400ec1d1:	37cb      	addi.n	a3, a7, 12
400ec1d3:	0329      	s32i.n	a2, a3, 0
400ec1d5:	f03d      	nop.n
400ec1d7:	f01d      	retw.n
400ec1d9:	000000        	ill

400ec1dc <std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec1dc:	006136        	entry	a1, 48
400ec1df:	017d      	mov.n	a7, a1
400ec1e1:	37cb      	addi.n	a3, a7, 12
400ec1e3:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec1e5:	27cb      	addi.n	a2, a7, 12
400ec1e7:	0228      	l32i.n	a2, a2, 0
400ec1e9:	f01d      	retw.n
	...

400ec1ec <__gnu_cxx::new_allocator<unsigned short>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec1ec:	006136        	entry	a1, 48
400ec1ef:	017d      	mov.n	a7, a1
400ec1f1:	37cb      	addi.n	a3, a7, 12
400ec1f3:	0329      	s32i.n	a2, a3, 0
400ec1f5:	f03d      	nop.n
400ec1f7:	f01d      	retw.n
400ec1f9:	000000        	ill

400ec1fc <__gnu_cxx::new_allocator<unsigned short>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec1fc:	006136        	entry	a1, 48
400ec1ff:	017d      	mov.n	a7, a1
400ec201:	37cb      	addi.n	a3, a7, 12
400ec203:	0329      	s32i.n	a2, a3, 0
400ec205:	f03d      	nop.n
400ec207:	f01d      	retw.n
400ec209:	000000        	ill

400ec20c <std::_Vector_base<unsigned short, std::allocator<unsigned short> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec20c:	006136        	entry	a1, 48
400ec20f:	017d      	mov.n	a7, a1
400ec211:	37cb      	addi.n	a3, a7, 12
400ec213:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec215:	27cb      	addi.n	a2, a7, 12
400ec217:	0228      	l32i.n	a2, a2, 0
400ec219:	f01d      	retw.n
	...

400ec21c <__gnu_cxx::new_allocator<unsigned int>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec21c:	006136        	entry	a1, 48
400ec21f:	017d      	mov.n	a7, a1
400ec221:	37cb      	addi.n	a3, a7, 12
400ec223:	0329      	s32i.n	a2, a3, 0
400ec225:	f03d      	nop.n
400ec227:	f01d      	retw.n
400ec229:	000000        	ill

400ec22c <__gnu_cxx::new_allocator<unsigned int>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec22c:	006136        	entry	a1, 48
400ec22f:	017d      	mov.n	a7, a1
400ec231:	37cb      	addi.n	a3, a7, 12
400ec233:	0329      	s32i.n	a2, a3, 0
400ec235:	f03d      	nop.n
400ec237:	f01d      	retw.n
400ec239:	000000        	ill

400ec23c <__gnu_cxx::new_allocator<unsigned long long>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec23c:	006136        	entry	a1, 48
400ec23f:	017d      	mov.n	a7, a1
400ec241:	37cb      	addi.n	a3, a7, 12
400ec243:	0329      	s32i.n	a2, a3, 0
400ec245:	f03d      	nop.n
400ec247:	f01d      	retw.n
400ec249:	000000        	ill

400ec24c <__gnu_cxx::new_allocator<unsigned long long>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec24c:	006136        	entry	a1, 48
400ec24f:	017d      	mov.n	a7, a1
400ec251:	37cb      	addi.n	a3, a7, 12
400ec253:	0329      	s32i.n	a2, a3, 0
400ec255:	f03d      	nop.n
400ec257:	f01d      	retw.n
400ec259:	000000        	ill

400ec25c <std::_Vector_base<unsigned long long, std::allocator<unsigned long long> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec25c:	006136        	entry	a1, 48
400ec25f:	017d      	mov.n	a7, a1
400ec261:	37cb      	addi.n	a3, a7, 12
400ec263:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec265:	27cb      	addi.n	a2, a7, 12
400ec267:	0228      	l32i.n	a2, a2, 0
400ec269:	f01d      	retw.n
	...

400ec26c <__gnu_cxx::new_allocator<float>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec26c:	006136        	entry	a1, 48
400ec26f:	017d      	mov.n	a7, a1
400ec271:	37cb      	addi.n	a3, a7, 12
400ec273:	0329      	s32i.n	a2, a3, 0
400ec275:	f03d      	nop.n
400ec277:	f01d      	retw.n
400ec279:	000000        	ill

400ec27c <__gnu_cxx::new_allocator<float>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec27c:	006136        	entry	a1, 48
400ec27f:	017d      	mov.n	a7, a1
400ec281:	37cb      	addi.n	a3, a7, 12
400ec283:	0329      	s32i.n	a2, a3, 0
400ec285:	f03d      	nop.n
400ec287:	f01d      	retw.n
400ec289:	000000        	ill

400ec28c <std::_Vector_base<float, std::allocator<float> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec28c:	006136        	entry	a1, 48
400ec28f:	017d      	mov.n	a7, a1
400ec291:	37cb      	addi.n	a3, a7, 12
400ec293:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec295:	27cb      	addi.n	a2, a7, 12
400ec297:	0228      	l32i.n	a2, a2, 0
400ec299:	f01d      	retw.n
	...

400ec29c <__gnu_cxx::new_allocator<double>::new_allocator()>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec29c:	006136        	entry	a1, 48
400ec29f:	017d      	mov.n	a7, a1
400ec2a1:	37cb      	addi.n	a3, a7, 12
400ec2a3:	0329      	s32i.n	a2, a3, 0
400ec2a5:	f03d      	nop.n
400ec2a7:	f01d      	retw.n
400ec2a9:	000000        	ill

400ec2ac <__gnu_cxx::new_allocator<double>::~new_allocator()>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
400ec2ac:	006136        	entry	a1, 48
400ec2af:	017d      	mov.n	a7, a1
400ec2b1:	37cb      	addi.n	a3, a7, 12
400ec2b3:	0329      	s32i.n	a2, a3, 0
400ec2b5:	f03d      	nop.n
400ec2b7:	f01d      	retw.n
400ec2b9:	000000        	ill

400ec2bc <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
400ec2bc:	006136        	entry	a1, 48
400ec2bf:	017d      	mov.n	a7, a1
400ec2c1:	37cb      	addi.n	a3, a7, 12
400ec2c3:	0329      	s32i.n	a2, a3, 0
      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
400ec2c5:	27cb      	addi.n	a2, a7, 12
400ec2c7:	0228      	l32i.n	a2, a2, 0
400ec2c9:	f01d      	retw.n
	...

400ec2cc <void std::_Destroy_aux<true>::__destroy<unsigned int*>(unsigned int*, unsigned int*)>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
400ec2cc:	006136        	entry	a1, 48
400ec2cf:	017d      	mov.n	a7, a1
400ec2d1:	47cb      	addi.n	a4, a7, 12
400ec2d3:	0429      	s32i.n	a2, a4, 0
400ec2d5:	278b      	addi.n	a2, a7, 8
400ec2d7:	0239      	s32i.n	a3, a2, 0
400ec2d9:	f03d      	nop.n
400ec2db:	f01d      	retw.n
400ec2dd:	000000        	ill

400ec2e0 <void std::_Destroy_aux<true>::__destroy<unsigned char*>(unsigned char*, unsigned char*)>:
400ec2e0:	006136        	entry	a1, 48
400ec2e3:	017d      	mov.n	a7, a1
400ec2e5:	47cb      	addi.n	a4, a7, 12
400ec2e7:	0429      	s32i.n	a2, a4, 0
400ec2e9:	278b      	addi.n	a2, a7, 8
400ec2eb:	0239      	s32i.n	a3, a2, 0
400ec2ed:	f03d      	nop.n
400ec2ef:	f01d      	retw.n
400ec2f1:	000000        	ill

400ec2f4 <void std::_Destroy_aux<true>::__destroy<unsigned short*>(unsigned short*, unsigned short*)>:
400ec2f4:	006136        	entry	a1, 48
400ec2f7:	017d      	mov.n	a7, a1
400ec2f9:	47cb      	addi.n	a4, a7, 12
400ec2fb:	0429      	s32i.n	a2, a4, 0
400ec2fd:	278b      	addi.n	a2, a7, 8
400ec2ff:	0239      	s32i.n	a3, a2, 0
400ec301:	f03d      	nop.n
400ec303:	f01d      	retw.n
400ec305:	000000        	ill

400ec308 <void std::_Destroy_aux<true>::__destroy<unsigned long long*>(unsigned long long*, unsigned long long*)>:
400ec308:	006136        	entry	a1, 48
400ec30b:	017d      	mov.n	a7, a1
400ec30d:	47cb      	addi.n	a4, a7, 12
400ec30f:	0429      	s32i.n	a2, a4, 0
400ec311:	278b      	addi.n	a2, a7, 8
400ec313:	0239      	s32i.n	a3, a2, 0
400ec315:	f03d      	nop.n
400ec317:	f01d      	retw.n
400ec319:	000000        	ill

400ec31c <void std::_Destroy_aux<true>::__destroy<float*>(float*, float*)>:
400ec31c:	006136        	entry	a1, 48
400ec31f:	017d      	mov.n	a7, a1
400ec321:	47cb      	addi.n	a4, a7, 12
400ec323:	0429      	s32i.n	a2, a4, 0
400ec325:	278b      	addi.n	a2, a7, 8
400ec327:	0239      	s32i.n	a3, a2, 0
400ec329:	f03d      	nop.n
400ec32b:	f01d      	retw.n
400ec32d:	000000        	ill

400ec330 <void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)>:
400ec330:	006136        	entry	a1, 48
400ec333:	017d      	mov.n	a7, a1
400ec335:	47cb      	addi.n	a4, a7, 12
400ec337:	0429      	s32i.n	a2, a4, 0
400ec339:	278b      	addi.n	a2, a7, 8
400ec33b:	0239      	s32i.n	a3, a2, 0
400ec33d:	f03d      	nop.n
400ec33f:	f01d      	retw.n
400ec341:	000000        	ill

400ec344 <__gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&)>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
400ec344:	006136        	entry	a1, 48
400ec347:	017d      	mov.n	a7, a1
400ec349:	47cb      	addi.n	a4, a7, 12
400ec34b:	0429      	s32i.n	a2, a4, 0
400ec34d:	278b      	addi.n	a2, a7, 8
400ec34f:	0239      	s32i.n	a3, a2, 0
400ec351:	f03d      	nop.n
400ec353:	f01d      	retw.n
400ec355:	000000        	ill

400ec358 <__gnu_cxx::new_allocator<unsigned short>::new_allocator(__gnu_cxx::new_allocator<unsigned short> const&)>:
400ec358:	006136        	entry	a1, 48
400ec35b:	017d      	mov.n	a7, a1
400ec35d:	47cb      	addi.n	a4, a7, 12
400ec35f:	0429      	s32i.n	a2, a4, 0
400ec361:	278b      	addi.n	a2, a7, 8
400ec363:	0239      	s32i.n	a3, a2, 0
400ec365:	f03d      	nop.n
400ec367:	f01d      	retw.n
400ec369:	000000        	ill

400ec36c <__gnu_cxx::new_allocator<unsigned int>::new_allocator(__gnu_cxx::new_allocator<unsigned int> const&)>:
400ec36c:	006136        	entry	a1, 48
400ec36f:	017d      	mov.n	a7, a1
400ec371:	47cb      	addi.n	a4, a7, 12
400ec373:	0429      	s32i.n	a2, a4, 0
400ec375:	278b      	addi.n	a2, a7, 8
400ec377:	0239      	s32i.n	a3, a2, 0
400ec379:	f03d      	nop.n
400ec37b:	f01d      	retw.n
400ec37d:	000000        	ill

400ec380 <__gnu_cxx::new_allocator<unsigned long long>::new_allocator(__gnu_cxx::new_allocator<unsigned long long> const&)>:
400ec380:	006136        	entry	a1, 48
400ec383:	017d      	mov.n	a7, a1
400ec385:	47cb      	addi.n	a4, a7, 12
400ec387:	0429      	s32i.n	a2, a4, 0
400ec389:	278b      	addi.n	a2, a7, 8
400ec38b:	0239      	s32i.n	a3, a2, 0
400ec38d:	f03d      	nop.n
400ec38f:	f01d      	retw.n
400ec391:	000000        	ill

400ec394 <__gnu_cxx::new_allocator<float>::new_allocator(__gnu_cxx::new_allocator<float> const&)>:
400ec394:	006136        	entry	a1, 48
400ec397:	017d      	mov.n	a7, a1
400ec399:	47cb      	addi.n	a4, a7, 12
400ec39b:	0429      	s32i.n	a2, a4, 0
400ec39d:	278b      	addi.n	a2, a7, 8
400ec39f:	0239      	s32i.n	a3, a2, 0
400ec3a1:	f03d      	nop.n
400ec3a3:	f01d      	retw.n
400ec3a5:	000000        	ill

400ec3a8 <__gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)>:
400ec3a8:	006136        	entry	a1, 48
400ec3ab:	017d      	mov.n	a7, a1
400ec3ad:	47cb      	addi.n	a4, a7, 12
400ec3af:	0429      	s32i.n	a2, a4, 0
400ec3b1:	278b      	addi.n	a2, a7, 8
400ec3b3:	0239      	s32i.n	a3, a2, 0
400ec3b5:	f03d      	nop.n
400ec3b7:	f01d      	retw.n
400ec3b9:	000000        	ill

400ec3bc <__gnu_cxx::new_allocator<unsigned char>::max_size() const>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
400ec3bc:	006136        	entry	a1, 48
400ec3bf:	017d      	mov.n	a7, a1
400ec3c1:	37cb      	addi.n	a3, a7, 12
400ec3c3:	0329      	s32i.n	a2, a3, 0
      { return size_t(-1) / sizeof(_Tp); }
400ec3c5:	f27c      	movi.n	a2, -1
400ec3c7:	f01d      	retw.n
400ec3c9:	000000        	ill

400ec3cc <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec3cc:	008136        	entry	a1, 64
400ec3cf:	017d      	mov.n	a7, a1
400ec3d1:	57cb      	addi.n	a5, a7, 12
400ec3d3:	0529      	s32i.n	a2, a5, 0
400ec3d5:	278b      	addi.n	a2, a7, 8
400ec3d7:	0239      	s32i.n	a3, a2, 0
400ec3d9:	274b      	addi.n	a2, a7, 4
400ec3db:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec3dd:	1ac722        	addi	a2, a7, 26
400ec3e0:	374b      	addi.n	a3, a7, 4
400ec3e2:	0338      	l32i.n	a3, a3, 0
400ec3e4:	001332        	l16ui	a3, a3, 0
400ec3e7:	005232        	s16i	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec3ea:	1cc722        	addi	a2, a7, 28
400ec3ed:	378b      	addi.n	a3, a7, 8
400ec3ef:	0338      	l32i.n	a3, a3, 0
400ec3f1:	0239      	s32i.n	a3, a2, 0
400ec3f3:	1cc722        	addi	a2, a7, 28
400ec3f6:	0228      	l32i.n	a2, a2, 0
400ec3f8:	42ac      	beqz.n	a2, 400ec420 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)+0x54>
	*__first = __tmp;
400ec3fa:	27cb      	addi.n	a2, a7, 12
400ec3fc:	0228      	l32i.n	a2, a2, 0
400ec3fe:	1ac732        	addi	a3, a7, 26
400ec401:	001332        	l16ui	a3, a3, 0
400ec404:	005232        	s16i	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec407:	1cc722        	addi	a2, a7, 28
400ec40a:	1cc732        	addi	a3, a7, 28
400ec40d:	0338      	l32i.n	a3, a3, 0
400ec40f:	330b      	addi.n	a3, a3, -1
400ec411:	0239      	s32i.n	a3, a2, 0
400ec413:	27cb      	addi.n	a2, a7, 12
400ec415:	37cb      	addi.n	a3, a7, 12
400ec417:	0338      	l32i.n	a3, a3, 0
400ec419:	332b      	addi.n	a3, a3, 2
400ec41b:	0239      	s32i.n	a3, a2, 0
400ec41d:	fff486        	j	400ec3f3 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned short>::__value, unsigned short*>::__type std::__fill_n_a<unsigned short*, unsigned int, unsigned short>(unsigned short*, unsigned int, unsigned short const&)+0x27>
      return __first;
400ec420:	27cb      	addi.n	a2, a7, 12
400ec422:	0228      	l32i.n	a2, a2, 0
    }
400ec424:	f01d      	retw.n
	...

400ec428 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec428:	008136        	entry	a1, 64
400ec42b:	017d      	mov.n	a7, a1
400ec42d:	57cb      	addi.n	a5, a7, 12
400ec42f:	0529      	s32i.n	a2, a5, 0
400ec431:	278b      	addi.n	a2, a7, 8
400ec433:	0239      	s32i.n	a3, a2, 0
400ec435:	274b      	addi.n	a2, a7, 4
400ec437:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec439:	1cc722        	addi	a2, a7, 28
400ec43c:	374b      	addi.n	a3, a7, 4
400ec43e:	0338      	l32i.n	a3, a3, 0
400ec440:	0338      	l32i.n	a3, a3, 0
400ec442:	0239      	s32i.n	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec444:	18c722        	addi	a2, a7, 24
400ec447:	378b      	addi.n	a3, a7, 8
400ec449:	0338      	l32i.n	a3, a3, 0
400ec44b:	0239      	s32i.n	a3, a2, 0
400ec44d:	18c722        	addi	a2, a7, 24
400ec450:	0228      	l32i.n	a2, a2, 0
400ec452:	22ac      	beqz.n	a2, 400ec478 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)+0x50>
	*__first = __tmp;
400ec454:	27cb      	addi.n	a2, a7, 12
400ec456:	0228      	l32i.n	a2, a2, 0
400ec458:	1cc732        	addi	a3, a7, 28
400ec45b:	0338      	l32i.n	a3, a3, 0
400ec45d:	0239      	s32i.n	a3, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec45f:	18c722        	addi	a2, a7, 24
400ec462:	18c732        	addi	a3, a7, 24
400ec465:	0338      	l32i.n	a3, a3, 0
400ec467:	330b      	addi.n	a3, a3, -1
400ec469:	0239      	s32i.n	a3, a2, 0
400ec46b:	27cb      	addi.n	a2, a7, 12
400ec46d:	37cb      	addi.n	a3, a7, 12
400ec46f:	0338      	l32i.n	a3, a3, 0
400ec471:	334b      	addi.n	a3, a3, 4
400ec473:	0239      	s32i.n	a3, a2, 0
400ec475:	fff506        	j	400ec44d <__gnu_cxx::__enable_if<std::__is_scalar<unsigned int>::__value, unsigned int*>::__type std::__fill_n_a<unsigned int*, unsigned int, unsigned int>(unsigned int*, unsigned int, unsigned int const&)+0x25>
      return __first;
400ec478:	27cb      	addi.n	a2, a7, 12
400ec47a:	0228      	l32i.n	a2, a2, 0
    }
400ec47c:	f01d      	retw.n
	...

400ec480 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec480:	008136        	entry	a1, 64
400ec483:	017d      	mov.n	a7, a1
400ec485:	57cb      	addi.n	a5, a7, 12
400ec487:	0529      	s32i.n	a2, a5, 0
400ec489:	278b      	addi.n	a2, a7, 8
400ec48b:	0239      	s32i.n	a3, a2, 0
400ec48d:	274b      	addi.n	a2, a7, 4
400ec48f:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec491:	18c742        	addi	a4, a7, 24
400ec494:	274b      	addi.n	a2, a7, 4
400ec496:	0228      	l32i.n	a2, a2, 0
400ec498:	1238      	l32i.n	a3, a2, 4
400ec49a:	0228      	l32i.n	a2, a2, 0
400ec49c:	0429      	s32i.n	a2, a4, 0
400ec49e:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec4a0:	14c722        	addi	a2, a7, 20
400ec4a3:	378b      	addi.n	a3, a7, 8
400ec4a5:	0338      	l32i.n	a3, a3, 0
400ec4a7:	0239      	s32i.n	a3, a2, 0
400ec4a9:	14c722        	addi	a2, a7, 20
400ec4ac:	0228      	l32i.n	a2, a2, 0
400ec4ae:	62ac      	beqz.n	a2, 400ec4d8 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)+0x58>
	*__first = __tmp;
400ec4b0:	27cb      	addi.n	a2, a7, 12
400ec4b2:	0248      	l32i.n	a4, a2, 0
400ec4b4:	18c722        	addi	a2, a7, 24
400ec4b7:	1238      	l32i.n	a3, a2, 4
400ec4b9:	0228      	l32i.n	a2, a2, 0
400ec4bb:	0429      	s32i.n	a2, a4, 0
400ec4bd:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec4bf:	14c722        	addi	a2, a7, 20
400ec4c2:	14c732        	addi	a3, a7, 20
400ec4c5:	0338      	l32i.n	a3, a3, 0
400ec4c7:	330b      	addi.n	a3, a3, -1
400ec4c9:	0239      	s32i.n	a3, a2, 0
400ec4cb:	27cb      	addi.n	a2, a7, 12
400ec4cd:	37cb      	addi.n	a3, a7, 12
400ec4cf:	0338      	l32i.n	a3, a3, 0
400ec4d1:	338b      	addi.n	a3, a3, 8
400ec4d3:	0239      	s32i.n	a3, a2, 0
400ec4d5:	fff406        	j	400ec4a9 <__gnu_cxx::__enable_if<std::__is_scalar<unsigned long long>::__value, unsigned long long*>::__type std::__fill_n_a<unsigned long long*, unsigned int, unsigned long long>(unsigned long long*, unsigned int, unsigned long long const&)+0x29>
      return __first;
400ec4d8:	27cb      	addi.n	a2, a7, 12
400ec4da:	0228      	l32i.n	a2, a2, 0
    }
400ec4dc:	f01d      	retw.n
	...

400ec4e0 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec4e0:	008136        	entry	a1, 64
400ec4e3:	017d      	mov.n	a7, a1
400ec4e5:	57cb      	addi.n	a5, a7, 12
400ec4e7:	0529      	s32i.n	a2, a5, 0
400ec4e9:	278b      	addi.n	a2, a7, 8
400ec4eb:	0239      	s32i.n	a3, a2, 0
400ec4ed:	274b      	addi.n	a2, a7, 4
400ec4ef:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec4f1:	1cc722        	addi	a2, a7, 28
400ec4f4:	374b      	addi.n	a3, a7, 4
400ec4f6:	0338      	l32i.n	a3, a3, 0
400ec4f8:	000303        	lsi	f0, a3, 0
400ec4fb:	004203        	ssi	f0, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec4fe:	18c722        	addi	a2, a7, 24
400ec501:	378b      	addi.n	a3, a7, 8
400ec503:	0338      	l32i.n	a3, a3, 0
400ec505:	0239      	s32i.n	a3, a2, 0
400ec507:	18c722        	addi	a2, a7, 24
400ec50a:	0228      	l32i.n	a2, a2, 0
400ec50c:	42ac      	beqz.n	a2, 400ec534 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)+0x54>
	*__first = __tmp;
400ec50e:	27cb      	addi.n	a2, a7, 12
400ec510:	0228      	l32i.n	a2, a2, 0
400ec512:	1cc732        	addi	a3, a7, 28
400ec515:	000303        	lsi	f0, a3, 0
400ec518:	004203        	ssi	f0, a2, 0
      for (__decltype(__n + 0) __niter = __n;
400ec51b:	18c722        	addi	a2, a7, 24
400ec51e:	18c732        	addi	a3, a7, 24
400ec521:	0338      	l32i.n	a3, a3, 0
400ec523:	330b      	addi.n	a3, a3, -1
400ec525:	0239      	s32i.n	a3, a2, 0
400ec527:	27cb      	addi.n	a2, a7, 12
400ec529:	37cb      	addi.n	a3, a7, 12
400ec52b:	0338      	l32i.n	a3, a3, 0
400ec52d:	334b      	addi.n	a3, a3, 4
400ec52f:	0239      	s32i.n	a3, a2, 0
400ec531:	fff486        	j	400ec507 <__gnu_cxx::__enable_if<std::__is_scalar<float>::__value, float*>::__type std::__fill_n_a<float*, unsigned int, float>(float*, unsigned int, float const&)+0x27>
      return __first;
400ec534:	27cb      	addi.n	a2, a7, 12
400ec536:	0228      	l32i.n	a2, a2, 0
    }
400ec538:	f01d      	retw.n
	...

400ec53c <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
400ec53c:	008136        	entry	a1, 64
400ec53f:	017d      	mov.n	a7, a1
400ec541:	57cb      	addi.n	a5, a7, 12
400ec543:	0529      	s32i.n	a2, a5, 0
400ec545:	278b      	addi.n	a2, a7, 8
400ec547:	0239      	s32i.n	a3, a2, 0
400ec549:	274b      	addi.n	a2, a7, 4
400ec54b:	0249      	s32i.n	a4, a2, 0
      const _Tp __tmp = __value;
400ec54d:	18c742        	addi	a4, a7, 24
400ec550:	274b      	addi.n	a2, a7, 4
400ec552:	0228      	l32i.n	a2, a2, 0
400ec554:	1238      	l32i.n	a3, a2, 4
400ec556:	0228      	l32i.n	a2, a2, 0
400ec558:	0429      	s32i.n	a2, a4, 0
400ec55a:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec55c:	14c722        	addi	a2, a7, 20
400ec55f:	378b      	addi.n	a3, a7, 8
400ec561:	0338      	l32i.n	a3, a3, 0
400ec563:	0239      	s32i.n	a3, a2, 0
400ec565:	14c722        	addi	a2, a7, 20
400ec568:	0228      	l32i.n	a2, a2, 0
400ec56a:	62ac      	beqz.n	a2, 400ec594 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)+0x58>
	*__first = __tmp;
400ec56c:	27cb      	addi.n	a2, a7, 12
400ec56e:	0248      	l32i.n	a4, a2, 0
400ec570:	18c722        	addi	a2, a7, 24
400ec573:	1238      	l32i.n	a3, a2, 4
400ec575:	0228      	l32i.n	a2, a2, 0
400ec577:	0429      	s32i.n	a2, a4, 0
400ec579:	1439      	s32i.n	a3, a4, 4
      for (__decltype(__n + 0) __niter = __n;
400ec57b:	14c722        	addi	a2, a7, 20
400ec57e:	14c732        	addi	a3, a7, 20
400ec581:	0338      	l32i.n	a3, a3, 0
400ec583:	330b      	addi.n	a3, a3, -1
400ec585:	0239      	s32i.n	a3, a2, 0
400ec587:	27cb      	addi.n	a2, a7, 12
400ec589:	37cb      	addi.n	a3, a7, 12
400ec58b:	0338      	l32i.n	a3, a3, 0
400ec58d:	338b      	addi.n	a3, a3, 8
400ec58f:	0239      	s32i.n	a3, a2, 0
400ec591:	fff406        	j	400ec565 <__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned int, double>(double*, unsigned int, double const&)+0x29>
      return __first;
400ec594:	27cb      	addi.n	a2, a7, 12
400ec596:	0228      	l32i.n	a2, a2, 0
    }
400ec598:	f01d      	retw.n
	...

400ec59c <std::_Iter_base<unsigned char*, false>::_S_base(unsigned char*)>:
  // untouched
  template<typename _Iterator, bool _HasBase>
    struct _Iter_base
    {
      typedef _Iterator iterator_type;
      static iterator_type _S_base(_Iterator __it)
400ec59c:	006136        	entry	a1, 48
400ec59f:	017d      	mov.n	a7, a1
400ec5a1:	37cb      	addi.n	a3, a7, 12
400ec5a3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5a5:	27cb      	addi.n	a2, a7, 12
400ec5a7:	0228      	l32i.n	a2, a2, 0
400ec5a9:	f01d      	retw.n
	...

400ec5ac <std::_Iter_base<unsigned short*, false>::_S_base(unsigned short*)>:
      static iterator_type _S_base(_Iterator __it)
400ec5ac:	006136        	entry	a1, 48
400ec5af:	017d      	mov.n	a7, a1
400ec5b1:	37cb      	addi.n	a3, a7, 12
400ec5b3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5b5:	27cb      	addi.n	a2, a7, 12
400ec5b7:	0228      	l32i.n	a2, a2, 0
400ec5b9:	f01d      	retw.n
	...

400ec5bc <std::_Iter_base<unsigned int*, false>::_S_base(unsigned int*)>:
      static iterator_type _S_base(_Iterator __it)
400ec5bc:	006136        	entry	a1, 48
400ec5bf:	017d      	mov.n	a7, a1
400ec5c1:	37cb      	addi.n	a3, a7, 12
400ec5c3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5c5:	27cb      	addi.n	a2, a7, 12
400ec5c7:	0228      	l32i.n	a2, a2, 0
400ec5c9:	f01d      	retw.n
	...

400ec5cc <std::_Iter_base<unsigned long long*, false>::_S_base(unsigned long long*)>:
      static iterator_type _S_base(_Iterator __it)
400ec5cc:	006136        	entry	a1, 48
400ec5cf:	017d      	mov.n	a7, a1
400ec5d1:	37cb      	addi.n	a3, a7, 12
400ec5d3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5d5:	27cb      	addi.n	a2, a7, 12
400ec5d7:	0228      	l32i.n	a2, a2, 0
400ec5d9:	f01d      	retw.n
	...

400ec5dc <std::_Iter_base<float*, false>::_S_base(float*)>:
      static iterator_type _S_base(_Iterator __it)
400ec5dc:	006136        	entry	a1, 48
400ec5df:	017d      	mov.n	a7, a1
400ec5e1:	37cb      	addi.n	a3, a7, 12
400ec5e3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5e5:	27cb      	addi.n	a2, a7, 12
400ec5e7:	0228      	l32i.n	a2, a2, 0
400ec5e9:	f01d      	retw.n
	...

400ec5ec <std::_Iter_base<double*, false>::_S_base(double*)>:
      static iterator_type _S_base(_Iterator __it)
400ec5ec:	006136        	entry	a1, 48
400ec5ef:	017d      	mov.n	a7, a1
400ec5f1:	37cb      	addi.n	a3, a7, 12
400ec5f3:	0329      	s32i.n	a2, a3, 0
      { return __it; }
400ec5f5:	27cb      	addi.n	a2, a7, 12
400ec5f7:	0228      	l32i.n	a2, a2, 0
400ec5f9:	f01d      	retw.n
	...

400ec5fc <Print::print(char)>:
{
400ec5fc:	006136        	entry	a1, 48
400ec5ff:	017d      	mov.n	a7, a1
400ec601:	47cb      	addi.n	a4, a7, 12
400ec603:	0429      	s32i.n	a2, a4, 0
400ec605:	278b      	addi.n	a2, a7, 8
400ec607:	004232        	s8i	a3, a2, 0
    return write(c);
400ec60a:	27cb      	addi.n	a2, a7, 12
400ec60c:	0228      	l32i.n	a2, a2, 0
400ec60e:	0228      	l32i.n	a2, a2, 0
400ec610:	228b      	addi.n	a2, a2, 8
400ec612:	0228      	l32i.n	a2, a2, 0
400ec614:	378b      	addi.n	a3, a7, 8
400ec616:	000342        	l8ui	a4, a3, 0
400ec619:	37cb      	addi.n	a3, a7, 12
400ec61b:	04bd      	mov.n	a11, a4
400ec61d:	03a8      	l32i.n	a10, a3, 0
400ec61f:	0002e0        	callx8	a2
400ec622:	0a2d      	mov.n	a2, a10
}
400ec624:	f01d      	retw.n
	...

400ec628 <String::setSSO(bool)>:
        inline void setSSO(bool set) { sso.isSSO = set; }
400ec628:	006136        	entry	a1, 48
400ec62b:	017d      	mov.n	a7, a1
400ec62d:	47cb      	addi.n	a4, a7, 12
400ec62f:	0429      	s32i.n	a2, a4, 0
400ec631:	278b      	addi.n	a2, a7, 8
400ec633:	004232        	s8i	a3, a2, 0
400ec636:	278b      	addi.n	a2, a7, 8
400ec638:	000222        	l8ui	a2, a2, 0
400ec63b:	042020        	extui	a2, a2, 0, 1
400ec63e:	743020        	extui	a3, a2, 0, 8
400ec641:	27cb      	addi.n	a2, a7, 12
400ec643:	0228      	l32i.n	a2, a2, 0
400ec645:	113390        	slli	a3, a3, 7
400ec648:	0b0242        	l8ui	a4, a2, 11
400ec64b:	644040        	extui	a4, a4, 0, 7
400ec64e:	203430        	or	a3, a4, a3
400ec651:	0b4232        	s8i	a3, a2, 11
400ec654:	f03d      	nop.n
400ec656:	f01d      	retw.n

400ec658 <__cxx_eh_arena_size_get>:
400ec658:	004136        	entry	a1, 32
400ec65b:	020c      	movi.n	a2, 0
400ec65d:	f01d      	retw.n
	...

400ec660 <esp_task_wdt_isr_user_handler>:
400ec660:	004136        	entry	a1, 32
400ec663:	f01d      	retw.n
400ec665:	000000        	ill

400ec668 <esp_pm_impl_waiti>:
400ec668:	004136        	entry	a1, 32
400ec66b:	007000        	waiti	0
400ec66e:	f01d      	retw.n

400ec670 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)>:
400ec670:	004136        	entry	a1, 32
400ec673:	c08320        	sub	a8, a3, a2
400ec676:	218480        	srai	a8, a8, 4
400ec679:	2318a6        	blti	a8, 1, 400ec6a0 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x30>
400ec67c:	02a8      	l32i.n	a10, a2, 0
400ec67e:	580a66        	bnei	a10, -1, 400ec6da <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec681:	924b      	addi.n	a9, a2, 4
400ec683:	12a8      	l32i.n	a10, a2, 4
400ec685:	3f0a66        	bnei	a10, -1, 400ec6c8 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x58>
400ec688:	928b      	addi.n	a9, a2, 8
400ec68a:	22a8      	l32i.n	a10, a2, 8
400ec68c:	3c0a66        	bnei	a10, -1, 400ec6cc <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x5c>
400ec68f:	92cb      	addi.n	a9, a2, 12
400ec691:	32a8      	l32i.n	a10, a2, 12
400ec693:	390a66        	bnei	a10, -1, 400ec6d0 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x60>
400ec696:	10c222        	addi	a2, a2, 16
400ec699:	880b      	addi.n	a8, a8, -1
400ec69b:	fff686        	j	400ec679 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x9>
400ec69e:	200000        	or	a0, a0, a0
400ec6a1:	80c083        	ssip	f8, a0, 0x200
400ec6a4:	262182        	l32i	a8, a1, 152
400ec6a7:	0f28      	l32i.n	a2, a15, 0
400ec6a9:	053826        	beqi	a8, 3, 400ec6b2 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x42>
400ec6ac:	241866        	bnei	a8, 1, 400ec6d4 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x64>
400ec6af:	000346        	j	400ec6c0 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x50>
400ec6b2:	0288      	l32i.n	a8, a2, 0
400ec6b4:	220866        	bnei	a8, -1, 400ec6da <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec6b7:	224b      	addi.n	a2, a2, 4
400ec6b9:	0288      	l32i.n	a8, a2, 0
400ec6bb:	1b0866        	bnei	a8, -1, 400ec6da <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x6a>
400ec6be:	224b      	addi.n	a2, a2, 4
400ec6c0:	0288      	l32i.n	a8, a2, 0
400ec6c2:	120826        	beqi	a8, -1, 400ec6d8 <unsigned int* std::__find_if<unsigned int*, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}> >(__gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, __gnu_cxx::__ops::_Iter_pred<nvs::Page::load(unsigned int)::{lambda(unsigned int)#1}>, std::random_access_iterator_tag)+0x68>
400ec6c5:	f01d      	retw.n
400ec6c7:	092d00        	l32e	a0, a13, -56
400ec6ca:	f01d      	retw.n
400ec6cc:	092d      	mov.n	a2, a9
400ec6ce:	f01d      	retw.n
400ec6d0:	092d      	mov.n	a2, a9
400ec6d2:	f01d      	retw.n
400ec6d4:	032d      	mov.n	a2, a3
400ec6d6:	f01d      	retw.n
400ec6d8:	032d      	mov.n	a2, a3
400ec6da:	f01d      	retw.n

400ec6dc <nvs::HashList::HashList()>:
400ec6dc:	004136        	entry	a1, 32
400ec6df:	080c      	movi.n	a8, 0
400ec6e1:	0289      	s32i.n	a8, a2, 0
400ec6e3:	1289      	s32i.n	a8, a2, 4
400ec6e5:	2289      	s32i.n	a8, a2, 8
400ec6e7:	f01d      	retw.n
400ec6e9:	000000        	ill

400ec6ec <nvs::HashList::HashListBlock::HashListBlock()>:
400ec6ec:	004136        	entry	a1, 32
400ec6ef:	080c      	movi.n	a8, 0
400ec6f1:	0289      	s32i.n	a8, a2, 0
400ec6f3:	1289      	s32i.n	a8, a2, 4
400ec6f5:	2289      	s32i.n	a8, a2, 8
400ec6f7:	82cb      	addi.n	a8, a2, 12
400ec6f9:	c21c      	movi.n	a2, 28
400ec6fb:	0d0226        	beqi	a2, -1, 400ec70c <nvs::HashList::HashListBlock::HashListBlock()+0x20>
400ec6fe:	f97c      	movi.n	a9, -1
400ec700:	749090        	extui	a9, a9, 0, 8
400ec703:	0899      	s32i.n	a9, a8, 0
400ec705:	884b      	addi.n	a8, a8, 4
400ec707:	220b      	addi.n	a2, a2, -1
400ec709:	fffb86        	j	400ec6fb <nvs::HashList::HashListBlock::HashListBlock()+0xf>
400ec70c:	f01d      	retw.n
	...

400ec710 <__cxa_guard_dummy>:
400ec710:	004136        	entry	a1, 32
400ec713:	f01d      	retw.n
400ec715:	000000        	ill

400ec718 <heap_caps_match>:
400ec718:	004136        	entry	a1, 32
400ec71b:	7288      	l32i.n	a8, a2, 28
400ec71d:	38ac      	beqz.n	a8, 400ec744 <heap_caps_match+0x2c>
400ec71f:	589c      	beqz.n	a8, 400ec738 <heap_caps_match+0x20>
400ec721:	080c      	movi.n	a8, 0
400ec723:	089d      	mov.n	a9, a8
400ec725:	000246        	j	400ec732 <heap_caps_match+0x1a>
400ec728:	a0a820        	addx4	a10, a8, a2
400ec72b:	0aa8      	l32i.n	a10, a10, 0
400ec72d:	2099a0        	or	a9, a9, a10
400ec730:	881b      	addi.n	a8, a8, 1
400ec732:	f238a6        	blti	a8, 3, 400ec728 <heap_caps_match+0x10>
400ec735:	000046        	j	400ec73a <heap_caps_match+0x22>
400ec738:	090c      	movi.n	a9, 0
400ec73a:	109390        	and	a9, a3, a9
400ec73d:	079397        	bne	a3, a9, 400ec748 <heap_caps_match+0x30>
400ec740:	120c      	movi.n	a2, 1
400ec742:	f01d      	retw.n
400ec744:	020c      	movi.n	a2, 0
400ec746:	f01d      	retw.n
400ec748:	020c      	movi.n	a2, 0
400ec74a:	f01d      	retw.n

400ec74c <s_compare_reserved_regions>:
400ec74c:	004136        	entry	a1, 32
400ec74f:	0228      	l32i.n	a2, a2, 0
400ec751:	0388      	l32i.n	a8, a3, 0
400ec753:	c02280        	sub	a2, a2, a8
400ec756:	f01d      	retw.n

400ec758 <is_wifi_clk_peripheral>:
400ec758:	004136        	entry	a1, 32
400ec75b:	681c      	movi.n	a8, 22
400ec75d:	0f3287        	bltu	a2, a8, 400ec770 <is_wifi_clk_peripheral+0x18>
400ec760:	17a082        	movi	a8, 23
400ec763:	05b827        	bgeu	a8, a2, 400ec76c <is_wifi_clk_peripheral+0x14>
400ec766:	e7c222        	addi	a2, a2, -25
400ec769:	0372f6        	bgeui	a2, 7, 400ec770 <is_wifi_clk_peripheral+0x18>
400ec76c:	120c      	movi.n	a2, 1
400ec76e:	f01d      	retw.n
400ec770:	020c      	movi.n	a2, 0
400ec772:	f01d      	retw.n

400ec774 <_system_r>:
400ec774:	004136        	entry	a1, 32
400ec777:	885c      	movi.n	a8, 88
400ec779:	0289      	s32i.n	a8, a2, 0
400ec77b:	f27c      	movi.n	a2, -1
400ec77d:	f01d      	retw.n
	...

400ec780 <_getpid_r>:
400ec780:	004136        	entry	a1, 32
400ec783:	885c      	movi.n	a8, 88
400ec785:	0289      	s32i.n	a8, a2, 0
400ec787:	f27c      	movi.n	a2, -1
400ec789:	f01d      	retw.n
	...

400ec78c <_kill_r>:
400ec78c:	004136        	entry	a1, 32
400ec78f:	885c      	movi.n	a8, 88
400ec791:	0289      	s32i.n	a8, a2, 0
400ec793:	f27c      	movi.n	a2, -1
400ec795:	f01d      	retw.n
	...

400ec798 <find_value>:
400ec798:	004136        	entry	a1, 32
400ec79b:	0228      	l32i.n	a2, a2, 0
400ec79d:	000186        	j	400ec7a7 <find_value+0xf>
400ec7a0:	0288      	l32i.n	a8, a2, 0
400ec7a2:	041837        	beq	a8, a3, 400ec7aa <find_value+0x12>
400ec7a5:	2228      	l32i.n	a2, a2, 8
400ec7a7:	ff5256        	bnez	a2, 400ec7a0 <find_value+0x8>
400ec7aa:	f01d      	retw.n

400ec7ac <mutexattr_check>:
400ec7ac:	004136        	entry	a1, 32
400ec7af:	1228      	l32i.n	a2, a2, 4
400ec7b1:	0332b6        	bltui	a2, 3, 400ec7b8 <mutexattr_check+0xc>
400ec7b4:	621c      	movi.n	a2, 22
400ec7b6:	f01d      	retw.n
400ec7b8:	020c      	movi.n	a2, 0
400ec7ba:	f01d      	retw.n

400ec7bc <read_uleb128(unsigned char const*, unsigned long*)>:
400ec7bc:	004136        	entry	a1, 32
400ec7bf:	11c2d0        	slli	a12, a2, 3
400ec7c2:	c0c2c0        	sub	a12, a2, a12
400ec7c5:	00a092        	movi	a9, 0
400ec7c8:	f0a220        	subx8	a10, a2, a2
400ec7cb:	221b      	addi.n	a2, a2, 1
400ec7cd:	820b      	addi.n	a8, a2, -1
400ec7cf:	000882        	l8ui	a8, a8, 0
400ec7d2:	baca      	add.n	a11, a10, a12
400ec7d4:	64a080        	extui	a10, a8, 0, 7
400ec7d7:	401b00        	ssl	a11
400ec7da:	a1aa00        	sll	a10, a10
400ec7dd:	238800        	sext	a8, a8, 7
400ec7e0:	2099a0        	or	a9, a9, a10
400ec7e3:	fe1896        	bltz	a8, 400ec7c8 <read_uleb128(unsigned char const*, unsigned long*)+0xc>
400ec7e6:	0399      	s32i.n	a9, a3, 0
400ec7e8:	f01d      	retw.n
	...

400ec7ec <read_sleb128(unsigned char const*, long*)>:
400ec7ec:	004136        	entry	a1, 32
400ec7ef:	00a082        	movi	a8, 0
400ec7f2:	089d      	mov.n	a9, a8
400ec7f4:	221b      	addi.n	a2, a2, 1
400ec7f6:	a20b      	addi.n	a10, a2, -1
400ec7f8:	000aa2        	l8ui	a10, a10, 0
400ec7fb:	64b0a0        	extui	a11, a10, 0, 7
400ec7fe:	401900        	ssl	a9
400ec801:	a1bb00        	sll	a11, a11
400ec804:	2088b0        	or	a8, a8, a11
400ec807:	23ba00        	sext	a11, a10, 7
400ec80a:	997b      	addi.n	a9, a9, 7
400ec80c:	fe4b96        	bltz	a11, 400ec7f4 <read_sleb128(unsigned char const*, long*)+0x8>
400ec80f:	fb1c      	movi.n	a11, 31
400ec811:	0d3b97        	bltu	a11, a9, 400ec822 <read_sleb128(unsigned char const*, long*)+0x36>
400ec814:	0a6a67        	bbci	a10, 6, 400ec822 <read_sleb128(unsigned char const*, long*)+0x36>
400ec817:	fa7c      	movi.n	a10, -1
400ec819:	401900        	ssl	a9
400ec81c:	a19a00        	sll	a9, a10
400ec81f:	208890        	or	a8, a8, a9
400ec822:	0389      	s32i.n	a8, a3, 0
400ec824:	f01d      	retw.n
	...

400ec828 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4>:
400ec828:	006136        	entry	a1, 48
400ec82b:	0488      	l32i.n	a8, a4, 0
400ec82d:	03ad      	mov.n	a10, a3
400ec82f:	0189      	s32i.n	a8, a1, 0
400ec831:	002382        	l32i	a8, a3, 0
400ec834:	022882        	l32i	a8, a8, 8
400ec837:	0008e0        	callx8	a8
400ec83a:	4a8c      	beqz.n	a10, 400ec842 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4+0x1a>
400ec83c:	0188      	l32i.n	a8, a1, 0
400ec83e:	0888      	l32i.n	a8, a8, 0
400ec840:	0189      	s32i.n	a8, a1, 0
400ec842:	0288      	l32i.n	a8, a2, 0
400ec844:	1d0c      	movi.n	a13, 1
400ec846:	4888      	l32i.n	a8, a8, 16
400ec848:	01cd      	mov.n	a12, a1
400ec84a:	03bd      	mov.n	a11, a3
400ec84c:	20a220        	or	a10, a2, a2
400ec84f:	0008e0        	callx8	a8
400ec852:	2a8c      	beqz.n	a10, 400ec858 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv$constprop$4+0x30>
400ec854:	0128      	l32i.n	a2, a1, 0
400ec856:	0429      	s32i.n	a2, a4, 0
400ec858:	0a2d      	mov.n	a2, a10
400ec85a:	f01d      	retw.n

400ec85c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
400ec85c:	006136        	entry	a1, 48
400ec85f:	081c      	movi.n	a8, 16
400ec861:	2189      	s32i.n	a8, a1, 8
400ec863:	0288      	l32i.n	a8, a2, 0
400ec865:	050c      	movi.n	a5, 0
400ec867:	6888      	l32i.n	a8, a8, 24
400ec869:	04c8      	l32i.n	a12, a4, 0
400ec86b:	02ad      	mov.n	a10, a2
400ec86d:	0159      	s32i.n	a5, a1, 0
400ec86f:	1159      	s32i.n	a5, a1, 4
400ec871:	3159      	s32i.n	a5, a1, 12
400ec873:	01dd      	mov.n	a13, a1
400ec875:	03bd      	mov.n	a11, a3
400ec877:	0008e0        	callx8	a8
400ec87a:	1128      	l32i.n	a2, a1, 4
400ec87c:	680c      	movi.n	a8, 6
400ec87e:	108820        	and	a8, a8, a2
400ec881:	052d      	mov.n	a2, a5
400ec883:	056866        	bnei	a8, 6, 400ec88c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const+0x30>
400ec886:	0128      	l32i.n	a2, a1, 0
400ec888:	0429      	s32i.n	a2, a4, 0
400ec88a:	120c      	movi.n	a2, 1
400ec88c:	f01d      	retw.n
	...

400ec890 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
400ec890:	004136        	entry	a1, 32
400ec893:	c02640        	sub	a2, a6, a4
400ec896:	690c      	movi.n	a9, 6
400ec898:	180c      	movi.n	a8, 1
400ec89a:	838920        	moveqz	a8, a9, a2
400ec89d:	082d      	mov.n	a2, a8
400ec89f:	f01d      	retw.n
400ec8a1:	000000        	ill

400ec8a4 <std::type_info::~type_info()>:
400ec8a4:	004136        	entry	a1, 32
400ec8a7:	f01d      	retw.n
400ec8a9:	000000        	ill

400ec8ac <std::type_info::__is_pointer_p() const>:
400ec8ac:	004136        	entry	a1, 32
400ec8af:	020c      	movi.n	a2, 0
400ec8b1:	f01d      	retw.n
	...

400ec8b4 <std::exception::~exception()>:
400ec8b4:	004136        	entry	a1, 32
400ec8b7:	f01d      	retw.n
400ec8b9:	000000        	ill

400ec8bc <initVariant>:
void initVariant() {}
400ec8bc:	004136        	entry	a1, 32
400ec8bf:	017d      	mov.n	a7, a1
400ec8c1:	f03d      	nop.n
400ec8c3:	f01d      	retw.n
400ec8c5:	000000        	ill

400ec8c8 <init>:
void init() {}
400ec8c8:	004136        	entry	a1, 32
400ec8cb:	017d      	mov.n	a7, a1
400ec8cd:	f03d      	nop.n
400ec8cf:	f01d      	retw.n
400ec8d1:	000000        	ill

400ec8d4 <btInUse>:
bool btInUse(){ return false; }
400ec8d4:	004136        	entry	a1, 32
400ec8d7:	017d      	mov.n	a7, a1
400ec8d9:	020c      	movi.n	a2, 0
400ec8db:	f01d      	retw.n
